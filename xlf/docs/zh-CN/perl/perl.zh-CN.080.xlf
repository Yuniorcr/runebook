<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="1f533c4957e6f8f2e52611bdcdc2d33420d94af4" translate="yes" xml:space="preserve">
          <source>including the surrounding delimiters</source>
          <target state="translated">包括周围的定界线</target>
        </trans-unit>
        <trans-unit id="87b6280508ba59147b765fcfef334db8e6a0fe83" translate="yes" xml:space="preserve">
          <source>incoming-mail filter will cause the mailer to return the item undelivered, but that's not true everywhere.</source>
          <target state="translated">入站邮件过滤器会导致邮件发送者退回未送达的邮件,但并非所有地方都是如此。</target>
        </trans-unit>
        <trans-unit id="54bcc3a7b157f9ff96c1b3bbc244b8ae1a2fcaaf" translate="yes" xml:space="preserve">
          <source>incorporate all these functions in one package. Besides automatically calling the &lt;code&gt;id()&lt;/code&gt; function on every object used as a key, the object is registered with the field hash on first use. Classes based on field hashes are fully garbage-collected and thread safe without further measures.</source>
          <target state="translated">将所有这些功能整合到一个软件包中。除了在用作键的每个对象上自动调用 &lt;code&gt;id()&lt;/code&gt; 函数外，该对象在首次使用时还会在字段哈希中注册。基于字段哈希的类已完全被垃圾回收并且是线程安全的，无需采取进一步措施。</target>
        </trans-unit>
        <trans-unit id="4b2ae3864af3c73ea51ab2c82406dd2a5f31d06a" translate="yes" xml:space="preserve">
          <source>incr_parse</source>
          <target state="translated">incr_parse</target>
        </trans-unit>
        <trans-unit id="da08914378e5e436edf03a8a258d32a221d5f806" translate="yes" xml:space="preserve">
          <source>incr_reset</source>
          <target state="translated">incr_reset</target>
        </trans-unit>
        <trans-unit id="9b31a7068eee6a9526dc7d511203abda49c1eae2" translate="yes" xml:space="preserve">
          <source>incr_skip</source>
          <target state="translated">incr_skip</target>
        </trans-unit>
        <trans-unit id="b9fb407ae6968f0dfc25b091c7365d7b6f4d09d2" translate="yes" xml:space="preserve">
          <source>incr_text</source>
          <target state="translated">incr_text</target>
        </trans-unit>
        <trans-unit id="aaec800750ffef77f853ccc7c8c249613e4b2557" translate="yes" xml:space="preserve">
          <source>increases the load time for the application (as well as complexity of the compilation). Since interpreter is in a DLL, the C RTL is basically forced to reside in a DLL as well (otherwise extensions would not be able to use CRT). There are some advantages if you use different flavors of perl, such as running</source>
          <target state="translated">增加了应用程序的加载时间(以及编译的复杂性)。由于解释器在DLL中,C RTL基本上也被迫驻留在DLL中(否则扩展将无法使用CRT)。如果你使用不同风味的perl,会有一些优势,比如运行在</target>
        </trans-unit>
        <trans-unit id="1f7b3e48ea8357510fab79f2492a09b42e30cd82" translate="yes" xml:space="preserve">
          <source>increment</source>
          <target state="translated">increment</target>
        </trans-unit>
        <trans-unit id="466f242a777ff54f7c93093c4d90a137e616e30f" translate="yes" xml:space="preserve">
          <source>incremental</source>
          <target state="translated">incremental</target>
        </trans-unit>
        <trans-unit id="d9059424224079ac1c41d862508856b6f9fe31b2" translate="yes" xml:space="preserve">
          <source>increments_count</source>
          <target state="translated">increments_count</target>
        </trans-unit>
        <trans-unit id="3cc46d20365996efe5ff1d4a9e0d401d68f186ed" translate="yes" xml:space="preserve">
          <source>indent</source>
          <target state="translated">indent</target>
        </trans-unit>
        <trans-unit id="c5af10893dd07928abfb6f383dd4d6ecd1ea1d9d" translate="yes" xml:space="preserve">
          <source>indent_length</source>
          <target state="translated">indent_length</target>
        </trans-unit>
        <trans-unit id="bb563dfba453db67bbec56ac010da0ffa7c3928b" translate="yes" xml:space="preserve">
          <source>indentlevel</source>
          <target state="translated">indentlevel</target>
        </trans-unit>
        <trans-unit id="5db560de5f46f68f2cf6566c95097f8e2f035630" translate="yes" xml:space="preserve">
          <source>independent subexpression</source>
          <target state="translated">独立子表达式</target>
        </trans-unit>
        <trans-unit id="e540cdd1328b2b21e29a95405c301b9313b7c346" translate="yes" xml:space="preserve">
          <source>index</source>
          <target state="translated">index</target>
        </trans-unit>
        <trans-unit id="43f884af0bc6ff4672586657430c850be72e55ba" translate="yes" xml:space="preserve">
          <source>index STR,SUBSTR</source>
          <target state="translated">索引 STR,SUBSTR</target>
        </trans-unit>
        <trans-unit id="99e8de47a322ff3d13bd1a7ab53b04a9be460a7c" translate="yes" xml:space="preserve">
          <source>index STR,SUBSTR,POSITION</source>
          <target state="translated">STR,SUBSTR,POSITION</target>
        </trans-unit>
        <trans-unit id="9682e00bd335cfcb5711949ad6968dce657f54a0" translate="yes" xml:space="preserve">
          <source>index_expire</source>
          <target state="translated">index_expire</target>
        </trans-unit>
        <trans-unit id="64eafba6adaa301371df23c8177008cfc67ec3a0" translate="yes" xml:space="preserve">
          <source>index_ignore: any application that indexes the contents of distributions (PAUSE, search.cpan.org) ought to ignore the items (packages, files, directories, namespace hierarchies).</source>
          <target state="translated">index_ignore:任何对发行版内容进行索引的应用程序(PAUSE、search.cpan.org)都应该忽略这些项目(包、文件、目录、命名空间层次结构)。</target>
        </trans-unit>
        <trans-unit id="2b55124fb4021bc05e232e23fed67d9448c52181" translate="yes" xml:space="preserve">
          <source>indexing</source>
          <target state="translated">indexing</target>
        </trans-unit>
        <trans-unit id="115e768a9ca3301f7ef2df63a8dfacd743b0e99c" translate="yes" xml:space="preserve">
          <source>indicate an exceptional condition: &lt;a href=&quot;#pop-ARRAY&quot;&gt;&lt;code&gt;pop&lt;/code&gt;&lt;/a&gt; returns &lt;a href=&quot;#undef-EXPR&quot;&gt;&lt;code&gt;undef&lt;/code&gt;&lt;/a&gt; when its argument is an empty array,</source>
          <target state="translated">表示例外情况：当&lt;a href=&quot;#pop-ARRAY&quot;&gt; &lt;code&gt;pop&lt;/code&gt; &lt;/a&gt;的参数为空数组时，其返回&lt;a href=&quot;#undef-EXPR&quot;&gt; &lt;code&gt;undef&lt;/code&gt; &lt;/a&gt;，</target>
        </trans-unit>
        <trans-unit id="bd7ea36f65e58c5c7bbf8dd9aceaaa73c4fd1c3b" translate="yes" xml:space="preserve">
          <source>indicate an exceptional condition: &lt;code&gt;&lt;a href=&quot;functions/pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt; returns &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; when its argument is an empty array,</source>
          <target state="translated">表示例外情况：当 &lt;code&gt;&lt;a href=&quot;functions/pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt; 的参数为空数组时，其返回 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; ，</target>
        </trans-unit>
        <trans-unit id="48ba91ecc2fdf08cfe5fd27747c3c8e58cadd255" translate="yes" xml:space="preserve">
          <source>indicate an exceptional condition: &lt;code&gt;&lt;a href=&quot;pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt; returns &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; when its argument is an empty array,</source>
          <target state="translated">表示例外情况：当 &lt;code&gt;&lt;a href=&quot;pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt; 的参数为空数组时，其返回 &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; ，</target>
        </trans-unit>
        <trans-unit id="7a89f7b99b7459c3e3a376ab2fa2510f98bafcc8" translate="yes" xml:space="preserve">
          <source>indicates a problem with the permissions on your /tmp directory within the HFS. To correct that problem issue the command:</source>
          <target state="translated">表示你的/tmp目录在HFS中的权限有问题。要纠正这个问题,请执行以下命令</target>
        </trans-unit>
        <trans-unit id="46adef8d549f47ce21751c1f181a46c1b9f28795" translate="yes" xml:space="preserve">
          <source>indicates that the name is a corrected form for the original name (which remains valid) for the same code point.</source>
          <target state="translated">表示该名称是同一代码点的原名称的更正形式(仍然有效)。</target>
        </trans-unit>
        <trans-unit id="aafce730a5c69801b1cd038fde73b5890228164a" translate="yes" xml:space="preserve">
          <source>indicates that the t/io/openpid.t test of Perl has passed but done so with extraneous messages on stderr from CEE.</source>
          <target state="translated">表示 Perl 的 t/io/openpid.t 测试通过了,但在测试过程中,CEE 的 stderr 上有无关信息。</target>
        </trans-unit>
        <trans-unit id="8beeb2fce58d3cf706cd79c74605d5f6cec09a88" translate="yes" xml:space="preserve">
          <source>indicates that we're running this test as part of the perl core test suite. This is useful for modules that have a dual life on CPAN.</source>
          <target state="translated">表示我们正在将此测试作为 perl 核心测试套件的一部分来运行。这对于在CPAN上有双重生命的模块是很有用的。</target>
        </trans-unit>
        <trans-unit id="f809e25f7ab91ace25f0a3090dbe01b370226459" translate="yes" xml:space="preserve">
          <source>indicates the kind of subroutine:</source>
          <target state="translated">表示子程序的种类。</target>
        </trans-unit>
        <trans-unit id="b02c8cb9a48d2ffe0d568aa710cf9a12f602ddf6" translate="yes" xml:space="preserve">
          <source>indicates whether to use effective (true) or real (false) ids. The method interprets the &lt;code&gt;mode&lt;/code&gt; , &lt;code&gt;uid&lt;/code&gt; and &lt;code&gt;gid&lt;/code&gt; fields, and returns whether or not the current process would be allowed the specified access.</source>
          <target state="translated">指示使用有效（true）还是真实（false）ID。该方法解释 &lt;code&gt;mode&lt;/code&gt; ， &lt;code&gt;uid&lt;/code&gt; 和 &lt;code&gt;gid&lt;/code&gt; 字段，并返回是否允许当前进程进行指定访问。</target>
        </trans-unit>
        <trans-unit id="d0f1de3e4ac67a61dd2ef075c201fbf49d7afd1d" translate="yes" xml:space="preserve">
          <source>indicates whether to use effective (true) or real (false) ids. The method interprets the &lt;code&gt;mode&lt;/code&gt;, &lt;code&gt;uid&lt;/code&gt; and &lt;code&gt;gid&lt;/code&gt; fields, and returns whether or not the current process would be allowed the specified access.</source>
          <target state="translated">指示使用有效（true）还是真实（false）ID。该方法解释 &lt;code&gt;mode&lt;/code&gt; ， &lt;code&gt;uid&lt;/code&gt; 和 &lt;code&gt;gid&lt;/code&gt; 字段，并返回是否允许当前进程进行指定访问。</target>
        </trans-unit>
        <trans-unit id="483df761d9cb026b9fc15456c941640572afafa1" translate="yes" xml:space="preserve">
          <source>indirect filehandle</source>
          <target state="translated">间接文件柄</target>
        </trans-unit>
        <trans-unit id="f200488f1cf478b4959f3a574a8f642dffe38cd7" translate="yes" xml:space="preserve">
          <source>indirect object</source>
          <target state="translated">间接对象</target>
        </trans-unit>
        <trans-unit id="c52a3437b1b55df59d088dccedfdf226b3e51149" translate="yes" xml:space="preserve">
          <source>indirect object slot</source>
          <target state="translated">间接对象槽</target>
        </trans-unit>
        <trans-unit id="729ece9fa830e654008eba24ff4f01836443b468" translate="yes" xml:space="preserve">
          <source>indirection</source>
          <target state="translated">indirection</target>
        </trans-unit>
        <trans-unit id="fcda6fabde0a3b0d0a1cfb866dfe701d0a8396cb" translate="yes" xml:space="preserve">
          <source>indirs</source>
          <target state="translated">indirs</target>
        </trans-unit>
        <trans-unit id="78c9fa6e129a252f6db38615cea0f882c28ce02e" translate="yes" xml:space="preserve">
          <source>inet_daytime ( [HOST [, PROTOCOL [, TIMEOUT]]])</source>
          <target state="translated">inet_daytime([HOST [,PROTOCOL [,TIMEOUT]])</target>
        </trans-unit>
        <trans-unit id="c1df8ac12cdf728050e72233a648dd7702c5fa8d" translate="yes" xml:space="preserve">
          <source>inet_domain</source>
          <target state="translated">inet_domain</target>
        </trans-unit>
        <trans-unit id="eb585c4ceb950ff6bd2b9cccbc257bb9a8d14efe" translate="yes" xml:space="preserve">
          <source>inet_time ( [HOST [, PROTOCOL [, TIMEOUT]]])</source>
          <target state="translated">inet_time([HOST [,PROTOCOL [,TIMEOUT]])</target>
        </trans-unit>
        <trans-unit id="0cedd5bbf169e21b494623b26255ee592a3b4610" translate="yes" xml:space="preserve">
          <source>inetd(8)</source>
          <target state="translated">inetd(8)</target>
        </trans-unit>
        <trans-unit id="0985885b254c709600cc96fbb31a71a96befbe01" translate="yes" xml:space="preserve">
          <source>inf()</source>
          <target state="translated">inf()</target>
        </trans-unit>
        <trans-unit id="d6dbadb30700039562565904023976ef1620b170" translate="yes" xml:space="preserve">
          <source>infers</source>
          <target state="translated">infers</target>
        </trans-unit>
        <trans-unit id="615f0d06a3a4bbc28f62ed41ad5581d42cf7ce56" translate="yes" xml:space="preserve">
          <source>infile</source>
          <target state="translated">infile</target>
        </trans-unit>
        <trans-unit id="7815017820b4e430bbf75931aaa8371a5f58faf0" translate="yes" xml:space="preserve">
          <source>infix</source>
          <target state="translated">infix</target>
        </trans-unit>
        <trans-unit id="f11b6d2142b8785dcbce524760b8a5eefaf8a51c" translate="yes" xml:space="preserve">
          <source>inflate</source>
          <target state="translated">inflate</target>
        </trans-unit>
        <trans-unit id="2f55f97803b98ce7727f4f32861d8b9d60ec8076" translate="yes" xml:space="preserve">
          <source>inflate $input_filename_or_reference =&amp;gt; $output_filename_or_reference [, OPTS]</source>
          <target state="translated">膨胀$ input_filename_or_reference =&amp;gt; $ output_filename_or_reference [，OPTS]</target>
        </trans-unit>
        <trans-unit id="b6aa8886133566b84aa50528606b6d86540c9b75" translate="yes" xml:space="preserve">
          <source>inflateInit2</source>
          <target state="translated">inflateInit2</target>
        </trans-unit>
        <trans-unit id="f5442a6076f59c3a613b48a99fadcb1f1fb6506c" translate="yes" xml:space="preserve">
          <source>inflateSync</source>
          <target state="translated">inflateSync</target>
        </trans-unit>
        <trans-unit id="a76b67b12dd75209351c4ae3ca3b3e25119c6b3b" translate="yes" xml:space="preserve">
          <source>infnan.U</source>
          <target state="translated">infnan.U</target>
        </trans-unit>
        <trans-unit id="3826c41382267f92479e38c54e89133913a567a2" translate="yes" xml:space="preserve">
          <source>info =&amp;gt; [{...}, ...]</source>
          <target state="translated">信息=&amp;gt; [{...}，...]</target>
        </trans-unit>
        <trans-unit id="554b53fb93ab9b3811936a10d5be83b8a3f3155d" translate="yes" xml:space="preserve">
          <source>info is indented with respect to the backtracking level. Other incidental information appears interspersed within.</source>
          <target state="translated">信息与回溯级别缩进。其他的附带信息则穿插在其中。</target>
        </trans-unit>
        <trans-unit id="57d5da7aaccaec3f7654dc61728d28ae4e5d6035" translate="yes" xml:space="preserve">
          <source>ing dynamically loading extensions would not work with</source>
          <target state="translated">动态加载的扩展将无法使用。</target>
        </trans-unit>
        <trans-unit id="3e26d6750975d678acb8fa35a0f69237881576b0" translate="yes" xml:space="preserve">
          <source>inherit</source>
          <target state="translated">inherit</target>
        </trans-unit>
        <trans-unit id="636f5f3dd45300f9fd5c3c3030056baf33bd3acc" translate="yes" xml:space="preserve">
          <source>inheritance</source>
          <target state="translated">inheritance</target>
        </trans-unit>
        <trans-unit id="e93b4a3fb9f2ae1924b54eb33df09d70945cd655" translate="yes" xml:space="preserve">
          <source>inherits from &lt;a href=&quot;exporter&quot;&gt;Exporter&lt;/a&gt;.</source>
          <target state="translated">从&lt;a href=&quot;exporter&quot;&gt;Exporter&lt;/a&gt;继承。</target>
        </trans-unit>
        <trans-unit id="380893347dcf8ff9ec08cf2b7110422af403e435" translate="yes" xml:space="preserve">
          <source>inhibit_startup_message</source>
          <target state="translated">inhibit_startup_message</target>
        </trans-unit>
        <trans-unit id="0e39975c1cdd0e165540e4c4297a8811904a676b" translate="yes" xml:space="preserve">
          <source>init_ABSTRACT</source>
          <target state="translated">init_ABSTRACT</target>
        </trans-unit>
        <trans-unit id="ec41225fd5d87f9a0b79e921f537560d3126e1f6" translate="yes" xml:space="preserve">
          <source>init_DEST</source>
          <target state="translated">init_DEST</target>
        </trans-unit>
        <trans-unit id="7cda590f08b4740a6590d7c44f166ba347919601" translate="yes" xml:space="preserve">
          <source>init_DIRFILESEP</source>
          <target state="translated">init_DIRFILESEP</target>
        </trans-unit>
        <trans-unit id="26f3fbf1fd6a23faafcb7ee69a7bb307556d51a2" translate="yes" xml:space="preserve">
          <source>init_DIRFILESEP Abstract</source>
          <target state="translated">init_DIRFILESEP 摘要</target>
        </trans-unit>
        <trans-unit id="022f97d2b72f11b72258f24adb9af75996565df6" translate="yes" xml:space="preserve">
          <source>init_INST</source>
          <target state="translated">init_INST</target>
        </trans-unit>
        <trans-unit id="5cadb1507731d78b120c5b699141c83cf1ebcdb1" translate="yes" xml:space="preserve">
          <source>init_INSTALL</source>
          <target state="translated">init_INSTALL</target>
        </trans-unit>
        <trans-unit id="f607f848017aa48f552d6587df059baa8185c0c1" translate="yes" xml:space="preserve">
          <source>init_INSTALL_from_PREFIX</source>
          <target state="translated">init_INSTALL_from_PREFIX</target>
        </trans-unit>
        <trans-unit id="6d4ca819ebd448eadb26fae424a1daafae5538db" translate="yes" xml:space="preserve">
          <source>init_MAKE</source>
          <target state="translated">init_MAKE</target>
        </trans-unit>
        <trans-unit id="f85264841184eb4b77c53b29d86ec2a34404c28d" translate="yes" xml:space="preserve">
          <source>init_MAN1PODS</source>
          <target state="translated">init_MAN1PODS</target>
        </trans-unit>
        <trans-unit id="649881b857eb9c09bbed613731cdc7bc7d59d53a" translate="yes" xml:space="preserve">
          <source>init_MAN3PODS</source>
          <target state="translated">init_MAN3PODS</target>
        </trans-unit>
        <trans-unit id="bb735cbec105264664b347c48a2e1c97a4f186ae" translate="yes" xml:space="preserve">
          <source>init_MANPODS</source>
          <target state="translated">init_MANPODS</target>
        </trans-unit>
        <trans-unit id="44dda1cdde92a8db272551ee9411c0e08ee5a06c" translate="yes" xml:space="preserve">
          <source>init_PERL</source>
          <target state="translated">init_PERL</target>
        </trans-unit>
        <trans-unit id="44eaeb006f28b509017de5430cbde7af1455aaa6" translate="yes" xml:space="preserve">
          <source>init_PERM</source>
          <target state="translated">init_PERM</target>
        </trans-unit>
        <trans-unit id="18b97e5bab289f55899fc71eff92a7e81648f6ae" translate="yes" xml:space="preserve">
          <source>init_PM</source>
          <target state="translated">init_PM</target>
        </trans-unit>
        <trans-unit id="9375d2ed65f4648645abb14f2a07f4d4bfc7513c" translate="yes" xml:space="preserve">
          <source>init_VERSION</source>
          <target state="translated">init_VERSION</target>
        </trans-unit>
        <trans-unit id="ee31f1e11feb288efea3b1532b81e5f1a2aa1232" translate="yes" xml:space="preserve">
          <source>init_VERSION (override)</source>
          <target state="translated">init_VERSION (覆盖)</target>
        </trans-unit>
        <trans-unit id="df85322df3d282213ace6954d8dfa854e6452b59" translate="yes" xml:space="preserve">
          <source>init_VERSION Abstract</source>
          <target state="translated">init_VERSION 摘要</target>
        </trans-unit>
        <trans-unit id="5ebfa4c8a88c05600575a052c3787cae76317682" translate="yes" xml:space="preserve">
          <source>init_argv_symbols</source>
          <target state="translated">init_argv_symbols</target>
        </trans-unit>
        <trans-unit id="1b84a394bdb5b286bc42f426f1333a5d3100354f" translate="yes" xml:space="preserve">
          <source>init_av</source>
          <target state="translated">init_av</target>
        </trans-unit>
        <trans-unit id="826ab8c247c715d6a30c100297e03495c7608f59" translate="yes" xml:space="preserve">
          <source>init_constants</source>
          <target state="translated">init_constants</target>
        </trans-unit>
        <trans-unit id="9a93ced4e519c11796d7400eed0561e58e813c21" translate="yes" xml:space="preserve">
          <source>init_dbargs</source>
          <target state="translated">init_dbargs</target>
        </trans-unit>
        <trans-unit id="333c2f4746e251d8dba17b34eee8ea935d905775" translate="yes" xml:space="preserve">
          <source>init_debugger</source>
          <target state="translated">init_debugger</target>
        </trans-unit>
        <trans-unit id="7c0b19434968a5b8bd664d048c4187c4fff537ee" translate="yes" xml:space="preserve">
          <source>init_dirscan</source>
          <target state="translated">init_dirscan</target>
        </trans-unit>
        <trans-unit id="9a0421852ea0c4dcae1cfa28534cd586cdf0e7d5" translate="yes" xml:space="preserve">
          <source>init_dist</source>
          <target state="translated">init_dist</target>
        </trans-unit>
        <trans-unit id="dd40122a87a61e130028acd2abe3ac4f6716a2f8" translate="yes" xml:space="preserve">
          <source>init_dist (override)</source>
          <target state="translated">init_dist (覆盖)</target>
        </trans-unit>
        <trans-unit id="7d0fbcbecc897f6ad65c1d6d94207049fabca61c" translate="yes" xml:space="preserve">
          <source>init_from_INSTALL_BASE</source>
          <target state="translated">init_from_INSTALL_BASE</target>
        </trans-unit>
        <trans-unit id="29ba738f18a4c93d2d7dcd41cb2c5827f80e36b1" translate="yes" xml:space="preserve">
          <source>init_global_struct</source>
          <target state="translated">init_global_struct</target>
        </trans-unit>
        <trans-unit id="e29a43463ca6b1d9a1cc3dd5c7f016be5d2c25ae" translate="yes" xml:space="preserve">
          <source>init_i18nl10n</source>
          <target state="translated">init_i18nl10n</target>
        </trans-unit>
        <trans-unit id="e53961f31158e302a044a5ff8102fc2a8f78a628" translate="yes" xml:space="preserve">
          <source>init_i18nl14n</source>
          <target state="translated">init_i18nl14n</target>
        </trans-unit>
        <trans-unit id="d7c9b833e00c346f0bab160ef687e581517f1629" translate="yes" xml:space="preserve">
          <source>init_linker</source>
          <target state="translated">init_linker</target>
        </trans-unit>
        <trans-unit id="dbe41e7c6907942dddfc25907bf28193797a4eb8" translate="yes" xml:space="preserve">
          <source>init_linker Abstract</source>
          <target state="translated">init_linker 摘要</target>
        </trans-unit>
        <trans-unit id="e0964f28a4abfe48afa8c215e7fce7d2e39fd5c8" translate="yes" xml:space="preserve">
          <source>init_main</source>
          <target state="translated">init_main</target>
        </trans-unit>
        <trans-unit id="2b162554ef6dee470da6f33f59cbca7afb4b8f60" translate="yes" xml:space="preserve">
          <source>init_main (override)</source>
          <target state="translated">init_main (覆盖)</target>
        </trans-unit>
        <trans-unit id="652cb61dc01992f191a1e0ab6fa2f6ab43534727" translate="yes" xml:space="preserve">
          <source>init_named_cv</source>
          <target state="translated">init_named_cv</target>
        </trans-unit>
        <trans-unit id="e3ab6049dd8bbaac48b18159b44f042e9d537459" translate="yes" xml:space="preserve">
          <source>init_others</source>
          <target state="translated">init_others</target>
        </trans-unit>
        <trans-unit id="e31881026ec06ae1c137294de90fc6573deb157b" translate="yes" xml:space="preserve">
          <source>init_platform</source>
          <target state="translated">init_platform</target>
        </trans-unit>
        <trans-unit id="6a5032bd54d50416c6bbbcf655fc4e37dbee9998" translate="yes" xml:space="preserve">
          <source>init_platform (override)</source>
          <target state="translated">init_platform (override)</target>
        </trans-unit>
        <trans-unit id="9c92b47ef9d3f22be50128e8fe929f69124f674a" translate="yes" xml:space="preserve">
          <source>init_stacks</source>
          <target state="translated">init_stacks</target>
        </trans-unit>
        <trans-unit id="2db3ca37cf03958fc3e0789eee3a6f5a88bdf3c3" translate="yes" xml:space="preserve">
          <source>init_tm</source>
          <target state="translated">init_tm</target>
        </trans-unit>
        <trans-unit id="019990422924c9d39c643c5b10dac864649676c5" translate="yes" xml:space="preserve">
          <source>init_tools</source>
          <target state="translated">init_tools</target>
        </trans-unit>
        <trans-unit id="2d8b1e3b707d45a0e6cf6cf4733b7c8c3bf1f0b3" translate="yes" xml:space="preserve">
          <source>init_tools (override)</source>
          <target state="translated">init_tools (override)</target>
        </trans-unit>
        <trans-unit id="ba0f4d6332eae04938e6bf0518875845096b53c0" translate="yes" xml:space="preserve">
          <source>init_uniprops</source>
          <target state="translated">init_uniprops</target>
        </trans-unit>
        <trans-unit id="e00bfc6c81d55db1b8aacdeea460433414ad5d96" translate="yes" xml:space="preserve">
          <source>init_xs</source>
          <target state="translated">init_xs</target>
        </trans-unit>
        <trans-unit id="8ad7d21c71b049b7003ba31b5f1322974df77ac8" translate="yes" xml:space="preserve">
          <source>initial</source>
          <target state="translated">initial</target>
        </trans-unit>
        <trans-unit id="d01e6b638f63d0ce474e5d2056a42868e8e743f1" translate="yes" xml:space="preserve">
          <source>initial special characters (denoting hashes, subroutines and typeglobs), and you said something like &lt;code&gt;*foo * foo&lt;/code&gt; that might be interpreted as either of them. We assumed you meant the infix operator, but please try to make it more clear -- in the example given, you might write &lt;code&gt;*foo * foo()&lt;/code&gt; if you really meant to multiply a glob by the result of calling a function.</source>
          <target state="translated">最初的特殊字符（表示散列，子例程和typeglob），并且您说了类似 &lt;code&gt;*foo * foo&lt;/code&gt; ，它们可能会被解释为它们中的任何一个。我们假设您的意思是infix运算符，但是请尝试使它更清楚-在给定的示例中，如果您确实要通过调用函数的结果来乘以glob，则可以编写 &lt;code&gt;*foo * foo()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="398108d3cc7ae14b27f679220599912f6c8a2948" translate="yes" xml:space="preserve">
          <source>inplace operation (the -i switch) without backup file</source>
          <target state="translated">无备份文件的就地操作(-i开关)</target>
        </trans-unit>
        <trans-unit id="140f86aae51ab9e1cda9b4254fe98a74eb54c1a1" translate="yes" xml:space="preserve">
          <source>input</source>
          <target state="translated">input</target>
        </trans-unit>
        <trans-unit id="075102130b9c2bee418af0f0abf0c05eb6428b5b" translate="yes" xml:space="preserve">
          <source>input fileglob string</source>
          <target state="translated">输入的fileglob字符串</target>
        </trans-unit>
        <trans-unit id="14fafbea21b2afc4ac197a41c562da03ba2fd623" translate="yes" xml:space="preserve">
          <source>input_line_number</source>
          <target state="translated">input_line_number</target>
        </trans-unit>
        <trans-unit id="44b7f604ecb19d542ee06bc079099d93cfbfd8e9" translate="yes" xml:space="preserve">
          <source>inputfile</source>
          <target state="translated">inputfile</target>
        </trans-unit>
        <trans-unit id="dbf3f1e65ed994aafa92d37f106f81eb0f116b8d" translate="yes" xml:space="preserve">
          <source>insert is the first of a chain of nodes to be inserted in place of the nodes. If NULL, no nodes are inserted.</source>
          <target state="translated">insert是要插入的节点链中的第一个节点,如果为NULL,则没有节点被插入。如果为NULL,则不插入任何节点。</target>
        </trans-unit>
        <trans-unit id="fcc537881cd1d5bcddabf48fa8809c7471176de0" translate="yes" xml:space="preserve">
          <source>inside</source>
          <target state="translated">inside</target>
        </trans-unit>
        <trans-unit id="0d1a9a751997ac8a3af8a0e66a529b769c64f9e8" translate="yes" xml:space="preserve">
          <source>inside a &quot;=begin</source>
          <target state="translated">在&quot;=begin &quot;内</target>
        </trans-unit>
        <trans-unit id="0404efe3ff82a89c15bd12e264f4ad6b4b5b9a26" translate="yes" xml:space="preserve">
          <source>inside a 5th eval in the program;</source>
          <target state="translated">在程序中的第5个评价里面。</target>
        </trans-unit>
        <trans-unit id="42069c6395d15e1204e32a0c3d074ee53152dec6" translate="yes" xml:space="preserve">
          <source>inside a given script</source>
          <target state="translated">脚本内</target>
        </trans-unit>
        <trans-unit id="89e02e198979d4b18ae44228f038f8bbcc90e3f2" translate="yes" xml:space="preserve">
          <source>inside out</source>
          <target state="translated">内外</target>
        </trans-unit>
        <trans-unit id="1318be358545620d758b5fbfc720522057898255" translate="yes" xml:space="preserve">
          <source>inside-out</source>
          <target state="translated">inside-out</target>
        </trans-unit>
        <trans-unit id="ffae41ad3ecb9c4be51654fdbdec2294d08ba3a9" translate="yes" xml:space="preserve">
          <source>inside-out classes</source>
          <target state="translated">内向型</target>
        </trans-unit>
        <trans-unit id="7d133180f3bea18acdd854e8abb3f6b30ae0152c" translate="yes" xml:space="preserve">
          <source>insist</source>
          <target state="translated">insist</target>
        </trans-unit>
        <trans-unit id="89fb511ffe93ee7826661ca1e3bb468dc1ad0ff2" translate="yes" xml:space="preserve">
          <source>install</source>
          <target state="translated">install</target>
        </trans-unit>
        <trans-unit id="2e8220b9bc5c7cb751079050a1797122249ffee1" translate="yes" xml:space="preserve">
          <source>install (o)</source>
          <target state="translated">安装(o)</target>
        </trans-unit>
        <trans-unit id="2c70a71e8d822142e7246873fe079b034208fc5a" translate="yes" xml:space="preserve">
          <source>install (override)</source>
          <target state="translated">安装</target>
        </trans-unit>
        <trans-unit id="40e1b335d61258d5a48f641159e6957a1ff5ea0a" translate="yes" xml:space="preserve">
          <source>install.exe</source>
          <target state="translated">install.exe</target>
        </trans-unit>
        <trans-unit id="99aa584715e5d86f65807c2630c48d09a9d96b02" translate="yes" xml:space="preserve">
          <source>install_subs</source>
          <target state="translated">install_subs</target>
        </trans-unit>
        <trans-unit id="e1e2b964389a44069f6393f7f404e4082b21b782" translate="yes" xml:space="preserve">
          <source>installation</source>
          <target state="translated">installation</target>
        </trans-unit>
        <trans-unit id="1a935600275def7c7cd12503918e8cd4004df44a" translate="yes" xml:space="preserve">
          <source>installbin (o)</source>
          <target state="translated">安装箱(O)</target>
        </trans-unit>
        <trans-unit id="cc1194708f9e63bdff55fc192202228c34612f10" translate="yes" xml:space="preserve">
          <source>installed already, make sure that no copies or perl are currently running. Later steps of the build may fail since an older version of</source>
          <target state="translated">已经安装,请确保当前没有拷贝或perl运行。后面的编译步骤可能会失败,因为旧版本的</target>
        </trans-unit>
        <trans-unit id="50ce7e3f521a0c513361fb30e1f4fe7052c98c9b" translate="yes" xml:space="preserve">
          <source>installed as</source>
          <target state="translated">安装为</target>
        </trans-unit>
        <trans-unit id="3a29dc65c6a5ec09f964c6e29d915690b9661711" translate="yes" xml:space="preserve">
          <source>installed on your system, and you installed perl manpages, use something like this:</source>
          <target state="translated">安装在你的系统上,并且你安装了perl manpages,使用类似这样的东西。</target>
        </trans-unit>
        <trans-unit id="2907a7c430f00ce076d72256002da217245f85b6" translate="yes" xml:space="preserve">
          <source>installed under another name.</source>
          <target state="translated">以另一个名字安装。</target>
        </trans-unit>
        <trans-unit id="b211760ff4348121f2719ef634ab34586418d866" translate="yes" xml:space="preserve">
          <source>installed, you can follow WWW links from this document in</source>
          <target state="translated">安装,您可以按照本文档中的WWW链接在</target>
        </trans-unit>
        <trans-unit id="0b6c2e3cc55e3bb4fce5a65f78016fe2471ddee9" translate="yes" xml:space="preserve">
          <source>installprefix.U</source>
          <target state="translated">installprefix.U</target>
        </trans-unit>
        <trans-unit id="637fb636ffe280ca72d9b5ea3567bce61300bc40" translate="yes" xml:space="preserve">
          <source>installs the memoized version of &lt;code&gt;fib&lt;/code&gt; as &lt;code&gt;fastfib&lt;/code&gt; ; without the &lt;code&gt;INSTALL&lt;/code&gt; option it would have replaced the old &lt;code&gt;fib&lt;/code&gt; with the memoized version.</source>
          <target state="translated">将记忆的 &lt;code&gt;fib&lt;/code&gt; 版本安装为 &lt;code&gt;fastfib&lt;/code&gt; ; 如果没有 &lt;code&gt;INSTALL&lt;/code&gt; 选项，它将用记忆版本替换旧的 &lt;code&gt;fib&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="66f2f64ac468c27268480394c151fefe15b287e2" translate="yes" xml:space="preserve">
          <source>installs the memoized version of &lt;code&gt;fib&lt;/code&gt; as &lt;code&gt;fastfib&lt;/code&gt;; without the &lt;code&gt;INSTALL&lt;/code&gt; option it would have replaced the old &lt;code&gt;fib&lt;/code&gt; with the memoized version.</source>
          <target state="translated">将记忆的 &lt;code&gt;fib&lt;/code&gt; 版本安装为 &lt;code&gt;fastfib&lt;/code&gt; ; 如果没有 &lt;code&gt;INSTALL&lt;/code&gt; 选项，它将用已记忆的版本替换旧的 &lt;code&gt;fib&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1f09b06690d13eb940215681daf48fc97f3a138c" translate="yes" xml:space="preserve">
          <source>installstyle.U</source>
          <target state="translated">installstyle.U</target>
        </trans-unit>
        <trans-unit id="4eb977bcd33ca38c1e0b488eac44ee25547efd26" translate="yes" xml:space="preserve">
          <source>installvars</source>
          <target state="translated">installvars</target>
        </trans-unit>
        <trans-unit id="c3bec6bcbc9b9f04e60fcb1d9c9c1a37f3e12e93" translate="yes" xml:space="preserve">
          <source>instance</source>
          <target state="translated">instance</target>
        </trans-unit>
        <trans-unit id="08f9051d8c32947b1cca85b6efe736a2e9a6d482" translate="yes" xml:space="preserve">
          <source>instance data</source>
          <target state="translated">实例数据</target>
        </trans-unit>
        <trans-unit id="d80b9e6863f77cc7c26d8221eabf27cc40e602f1" translate="yes" xml:space="preserve">
          <source>instance method</source>
          <target state="translated">实例法</target>
        </trans-unit>
        <trans-unit id="caed6c4bb236a10cd9e8105dd2ad896f1e7a43c2" translate="yes" xml:space="preserve">
          <source>instance variable</source>
          <target state="translated">实例变量</target>
        </trans-unit>
        <trans-unit id="213d3b87dbe505b0072f3929805c83c8a5257052" translate="yes" xml:space="preserve">
          <source>instantiate an Expect object that reads from the console, waits for some regular expressions and enters some answers</source>
          <target state="translated">实例化一个Expect对象,该对象从控制台读取,等待一些正则表达式并输入一些答案。</target>
        </trans-unit>
        <trans-unit id="571d5bc739cc9f7bbab15b2de12fe6c2903c98a9" translate="yes" xml:space="preserve">
          <source>instead</source>
          <target state="translated">instead</target>
        </trans-unit>
        <trans-unit id="6d20c05e1fc41e487c521873baf51d86fd2da739" translate="yes" xml:space="preserve">
          <source>instead do it thru maketext, using no variable interpolation in the key:</source>
          <target state="translated">而不是通过maketext来做,在键中不使用变量插值。</target>
        </trans-unit>
        <trans-unit id="cb82821f5443620916128c66c024a61d87b0565d" translate="yes" xml:space="preserve">
          <source>instead of</source>
          <target state="translated">而不是</target>
        </trans-unit>
        <trans-unit id="2f1647312ffbefd675d8f528a8e37c5009e71a69" translate="yes" xml:space="preserve">
          <source>instead of WriteMakefile().</source>
          <target state="translated">而不是WriteMakefile()。</target>
        </trans-unit>
        <trans-unit id="eba0c6725752796c17e07a2937a561d006b6b15d" translate="yes" xml:space="preserve">
          <source>instead of as equivalent to a &quot;C&quot; formatting code containing only &quot;$foo-&quot;, and then a &quot;bar&amp;gt;&quot; outside the &quot;C&quot; formatting code. This problem has since been solved by the addition of syntaxes like this:</source>
          <target state="translated">而不是等同于仅包含&amp;ldquo; $ foo-&amp;rdquo;的&amp;ldquo; C&amp;rdquo;格式代码，然后是&amp;ldquo; C&amp;rdquo;格式代码之外的&amp;ldquo; bar&amp;gt;&amp;rdquo;。此后，通过添加以下语法解决了此问题：</target>
        </trans-unit>
        <trans-unit id="339af1c38f4492cc861c0d877b7a58adb6e97b45" translate="yes" xml:space="preserve">
          <source>instead of directory names (strictly speaking, a string like &quot;:a&quot; is a path, but not a name, since it contains a punctuation character &quot;:&quot;).</source>
          <target state="translated">而不是目录名(严格来说,像&quot;:a &quot;这样的字符串是一个路径,但不是名称,因为它包含一个标点符号&quot;:&quot;)。</target>
        </trans-unit>
        <trans-unit id="71c621eff819164ca1ecdbe04a4dc834c714be8e" translate="yes" xml:space="preserve">
          <source>instead of file for the source of text.</source>
          <target state="translated">而不是文本源的文件。</target>
        </trans-unit>
        <trans-unit id="88c26c2da878553e470eabd76716a5185e744b60" translate="yes" xml:space="preserve">
          <source>instead of having to write these:</source>
          <target state="translated">而不是要写这些。</target>
        </trans-unit>
        <trans-unit id="91a313e739687b01fbf17ae071a8b7960e77caf3" translate="yes" xml:space="preserve">
          <source>instead of importing it from &lt;code&gt;Scalar::Util&lt;/code&gt; . It should now be possible to disable DESTROY and CLONE. Note that while it isn't disabled, DESTROY will be called before the garbage collection of field hashes, so it will be invoked with a functional object and will continue to function.</source>
          <target state="translated">而不是从 &lt;code&gt;Scalar::Util&lt;/code&gt; 导入它。现在应该可以禁用DESTROY和CLONE了。请注意，虽然未禁用它，但将在对字段哈希进行垃圾回收之前调用DESTROY，因此它将与功能对象一起调用并继续运行。</target>
        </trans-unit>
        <trans-unit id="ee6090491eb1b185461d6c2df89cdefe0156cf13" translate="yes" xml:space="preserve">
          <source>instead of importing it from &lt;code&gt;Scalar::Util&lt;/code&gt;. It should now be possible to disable DESTROY and CLONE. Note that while it isn't disabled, DESTROY will be called before the garbage collection of field hashes, so it will be invoked with a functional object and will continue to function.</source>
          <target state="translated">而不是从 &lt;code&gt;Scalar::Util&lt;/code&gt; 导入它。现在应该可以禁用DESTROY和CLONE了。请注意，虽然未禁用它，但将在对字段哈希进行垃圾回收之前调用DESTROY，因此它将与功能对象一起调用并继续运行。</target>
        </trans-unit>
        <trans-unit id="ca19eef2eb91cd974e6c0056c5fddda19bfec434" translate="yes" xml:space="preserve">
          <source>instead of this:</source>
          <target state="translated">而不是这样。</target>
        </trans-unit>
        <trans-unit id="6c8457cd65849bf5a9285f8b862e990e1a44ac09" translate="yes" xml:space="preserve">
          <source>instead of:</source>
          <target state="translated">而不是:</target>
        </trans-unit>
        <trans-unit id="0dfc30290bccc6dc13a8fe9fb0436218d5478317" translate="yes" xml:space="preserve">
          <source>instead or additionally: &lt;code&gt;-Accflags='-DNO_POSIX_2008_LOCALE'&lt;/code&gt;. This will also keep the code from using thread-safe locales. &lt;code&gt;${^SAFE_LOCALES}&lt;/code&gt; will be 0 on systems that turn off the thread-safe operations.</source>
          <target state="translated">代替或另外： &lt;code&gt;-Accflags='-DNO_POSIX_2008_LOCALE'&lt;/code&gt; 。这也将阻止代码使用线程安全的语言环境。在关闭线程安全操作的系统上， &lt;code&gt;${^SAFE_LOCALES}&lt;/code&gt; 将为0。</target>
        </trans-unit>
        <trans-unit id="bcd1c0a3df4642e2147982d69e49b696e53ddfb8" translate="yes" xml:space="preserve">
          <source>instead since</source>
          <target state="translated">相反</target>
        </trans-unit>
        <trans-unit id="55e45921eb338b868da29d4463e5c0b1a7fa032c" translate="yes" xml:space="preserve">
          <source>instead). All tests are run from the</source>
          <target state="translated">代替)。)所有的测试都是在</target>
        </trans-unit>
        <trans-unit id="6568964b0e39083c6acb94093d9e6cd117dbe508" translate="yes" xml:space="preserve">
          <source>instead.</source>
          <target state="translated">instead.</target>
        </trans-unit>
        <trans-unit id="5864cc31660892914a70fe91105e62ed75ab49ed" translate="yes" xml:space="preserve">
          <source>instead. Accepted for backward compatibility; this option no longer does anything.</source>
          <target state="translated">代替。为了向后兼容而接受,这个选项不再有任何作用。</target>
        </trans-unit>
        <trans-unit id="ef03d77059a00bfd1c11d4cbfef75cdec7cdddf4" translate="yes" xml:space="preserve">
          <source>instead. Example:</source>
          <target state="translated">而不是。例如:</target>
        </trans-unit>
        <trans-unit id="204889318f37ff1d1f1f6f99292b41699b359695" translate="yes" xml:space="preserve">
          <source>instead. The first argument is the modulus, the second is the angle (in radians, the full circle is 2*pi). (Mnemonic: &lt;code&gt;e&lt;/code&gt; is used as a notation for complex numbers in the polar form).</source>
          <target state="translated">代替。第一个参数是模数，第二个参数是角度（以弧度表示，完整的圆为2 * pi）。（助记符： &lt;code&gt;e&lt;/code&gt; 用作极性形式的复数的表示法）。</target>
        </trans-unit>
        <trans-unit id="7645f7261302e0c93107f96c3a0a2f2e386a7465" translate="yes" xml:space="preserve">
          <source>instmodsh</source>
          <target state="translated">instmodsh</target>
        </trans-unit>
        <trans-unit id="70e40b33ec9352c176bca23475fd76d8a67b5973" translate="yes" xml:space="preserve">
          <source>instmodsh - A shell to examine installed modules</source>
          <target state="translated">instmodsh-检查已安装模块的shell。</target>
        </trans-unit>
        <trans-unit id="d74e5262123578d183e5d842fafff74d559825df" translate="yes" xml:space="preserve">
          <source>instr</source>
          <target state="translated">instr</target>
        </trans-unit>
        <trans-unit id="1d52ae13ac6814d64753bd650c8b9eb068671b1f" translate="yes" xml:space="preserve">
          <source>instrumenting</source>
          <target state="translated">instrumenting</target>
        </trans-unit>
        <trans-unit id="cf024bf7ff5c78f4291e2a56cf869c898842d0fd" translate="yes" xml:space="preserve">
          <source>instubperl.U</source>
          <target state="translated">instubperl.U</target>
        </trans-unit>
        <trans-unit id="46f8ab7c0cff9df7cd124852e26022a6bf89e315" translate="yes" xml:space="preserve">
          <source>int</source>
          <target state="translated">int</target>
        </trans-unit>
        <trans-unit id="6c36204b30c264dd8c654c40f76b604c80780842" translate="yes" xml:space="preserve">
          <source>int EXPR</source>
          <target state="translated">int EXPR</target>
        </trans-unit>
        <trans-unit id="4eb6262cae51e17a2b0ff49da156da64d485fa79" translate="yes" xml:space="preserve">
          <source>int()</source>
          <target state="translated">int()</target>
        </trans-unit>
        <trans-unit id="d71739707a7eafbe926fe99f6312cc8634db005d" translate="yes" xml:space="preserve">
          <source>int32</source>
          <target state="translated">int32</target>
        </trans-unit>
        <trans-unit id="1c830d4cb2d45b412b7057a484a67e52c90ef619" translate="yes" xml:space="preserve">
          <source>int_value</source>
          <target state="translated">int_value</target>
        </trans-unit>
        <trans-unit id="1178cafbd64bbbfa77f5ac0a9d5032ed88162781" translate="yes" xml:space="preserve">
          <source>integer</source>
          <target state="translated">integer</target>
        </trans-unit>
        <trans-unit id="81edaa310efa3869e0192600c26c36ecc2b41f19" translate="yes" xml:space="preserve">
          <source>integer - Perl pragma to use integer arithmetic instead of floating point</source>
          <target state="translated">integer-使用整数运算而非浮点运算的Perl pragma。</target>
        </trans-unit>
        <trans-unit id="1f7eb7b938a62fcc0eef0f61d44ced570ecec276" translate="yes" xml:space="preserve">
          <source>integer subscript</source>
          <target state="translated">整数下标</target>
        </trans-unit>
        <trans-unit id="449c5ca847391baf42cd48557a145c97b5e7781b" translate="yes" xml:space="preserve">
          <source>integer values, since &quot;directory&quot; is an inanimate noun, when preceded by a number and in the nominative or accusative cases (as it is here, just your luck!), it does stay plural, but it is forced into the genitive case -- yet another ending... And you never hear him get to the part about how you're going to run into similar (but maybe subtly different) problems with other Slavic languages like Polish, because the floor comes up to meet you, and you fade into unconsciousness.</source>
          <target state="translated">由于 &quot;directory &quot;是一个无生命的名词,当前面有数字,并且是名词或指称的情况下(就像这里一样,只是你的运气!),它确实保持复数,但它被迫变成了属名词的情况--又是一个结局......。而且你从来没有听到他说到你将如何遇到类似(但也许是微妙的不同)的问题与其他斯拉夫语言如波兰语的部分,因为地板来迎接你,你消失在无意识中。</target>
        </trans-unit>
        <trans-unit id="59803099f01814cb5c826701a0cffd6c1c391679" translate="yes" xml:space="preserve">
          <source>integers and numbers with decimal points are allowed in front of an exponent. Then exponents, like the overall sign, are independent of whether we are matching numbers with or without decimal points, and can be &quot;decoupled&quot; from the mantissa. The overall form of the regexp now becomes clear:</source>
          <target state="translated">整数和带小数点的数字都可以放在指数前面。那么指数和整体符号一样,与我们匹配的数字是否有小数点无关,可以和mantissa &quot;脱钩&quot;。现在,regexp的整体形式变得清晰了。</target>
        </trans-unit>
        <trans-unit id="5cbf2e209eef789477d4a083088b0b6f85e093bb" translate="yes" xml:space="preserve">
          <source>integers and numbers with decimal points are allowed in front of an exponent. Then exponents, like the overall sign, are independent of whether we are matching numbers with or without decimal points, and can be 'decoupled' from the mantissa. The overall form of the regexp now becomes clear:</source>
          <target state="translated">整数和带小数点的数字都可以放在指数前面。那么指数就像整体符号一样,与我们匹配的数字是否有小数点无关,可以与mantissa &quot;脱钩&quot;。现在,regexp的整体形式变得清晰了。</target>
        </trans-unit>
        <trans-unit id="8530773c89ade420faa71319e7ce6daa712ea89c" translate="yes" xml:space="preserve">
          <source>intended as a general cross-platform interface to all your C building needs. That would have been a much more ambitious goal!</source>
          <target state="translated">作为一个通用的跨平台接口,满足你所有的C语言构建需求。这本来是一个更远大的目标!</target>
        </trans-unit>
        <trans-unit id="41b2a346afcb03862127323893afda0250576026" translate="yes" xml:space="preserve">
          <source>intention</source>
          <target state="translated">intention</target>
        </trans-unit>
        <trans-unit id="0b225f92dddfc1828c8f429b7d2a532810a1c6ab" translate="yes" xml:space="preserve">
          <source>intercept(&amp;amp;)</source>
          <target state="translated">intercept(&amp;amp;)</target>
        </trans-unit>
        <trans-unit id="6372e8e6c1a79994c53959bec989f03c1e0e9d25" translate="yes" xml:space="preserve">
          <source>interchangeably. But just as confusing the terms byte and character is dangerous and the terms should be differentiated when needed, we need to differentiate</source>
          <target state="translated">交互使用。但是,正如混淆字节和字符这两个术语是很危险的,在需要的时候应该把这两个术语区分开来一样,我们也需要区分出</target>
        </trans-unit>
        <trans-unit id="5ea2d81a89e0cdc89baf7cd1ff38cdfefa33ba78" translate="yes" xml:space="preserve">
          <source>interface</source>
          <target state="translated">interface</target>
        </trans-unit>
        <trans-unit id="e5d84f3be36511b9cf0c6417bb410c050384d434" translate="yes" xml:space="preserve">
          <source>interface (see &lt;a href=&quot;perlembed&quot;&gt;perlembed&lt;/a&gt;) to make very customized executables.</source>
          <target state="translated">接口（请参阅&lt;a href=&quot;perlembed&quot;&gt;perlembed&lt;/a&gt;）以制作非常自定义的可执行文件。</target>
        </trans-unit>
        <trans-unit id="34b8b656f661dde4a485cdae2859f84de092702d" translate="yes" xml:space="preserve">
          <source>interface (see &lt;a href=&quot;perlembed&quot;&gt;perlembed&lt;/a&gt;), such things are easy to do repeating the steps outlined in &lt;a href=&quot;#Making-executables-with-a-custom-collection-of-statically-loaded-extensions&quot;&gt;Making executables with a custom collection of statically loaded extensions&lt;/a&gt;, and doing more comprehensive edits to main() of</source>
          <target state="translated">界面（请参阅&lt;a href=&quot;perlembed&quot;&gt;perlembed&lt;/a&gt;），重复&lt;a href=&quot;#Making-executables-with-a-custom-collection-of-statically-loaded-extensions&quot;&gt;执行&amp;ldquo;使用静态加载的扩展程序的自定义集合来制作可执行文件&amp;rdquo;中&lt;/a&gt;概述的步骤，并对的main（）进行更全面的编辑很容易</target>
        </trans-unit>
        <trans-unit id="44a5c0ca14b07e1d09edfab4ed9426393b051f23" translate="yes" xml:space="preserve">
          <source>interface (see &lt;a href=&quot;perlembed&quot;&gt;perlembed&lt;/a&gt;), such things are easy to do repeating the steps outlined in L/&amp;lt;Making executables with a custom collection of statically loaded extensions&amp;gt;, and doing more comprehensive edits to main() of</source>
          <target state="translated">界面（请参阅&lt;a href=&quot;perlembed&quot;&gt;perlembed&lt;/a&gt;），只需重复执行L / &amp;lt;使用自定义的静态加载扩展集来使可执行文件&amp;gt;中概述的步骤，并对main（）的main（）进行更全面的编辑，即可轻松完成这些操作</target>
        </trans-unit>
        <trans-unit id="9404540d9f00d3c17c19b97f44fa1073b9f1c94f" translate="yes" xml:space="preserve">
          <source>interface provided by zlib.</source>
          <target state="translated">由zlib提供的接口。</target>
        </trans-unit>
        <trans-unit id="46e1a61d83495a69cfaa8d84253bec174db2a0fe" translate="yes" xml:space="preserve">
          <source>interface to the dynamic linking mechanisms available on many platforms. Its primary purpose is to implement cheap automatic dynamic loading of Perl modules.</source>
          <target state="translated">的接口,以连接许多平台上的动态链接机制。它的主要目的是实现廉价的Perl模块的自动动态加载。</target>
        </trans-unit>
        <trans-unit id="4971c93878fca386fa5d4bfe4710796fed0a245d" translate="yes" xml:space="preserve">
          <source>interface used by &lt;a href=&quot;TAP::Parser::IteratorFactory&quot;&gt;TAP::Parser::IteratorFactory&lt;/a&gt;. At 2 methods, the interface is pretty simple: &lt;a href=&quot;#can_handle&quot;&gt;&quot;can_handle&quot;&lt;/a&gt; and &lt;a href=&quot;#make_source&quot;&gt;&quot;make_source&quot;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;TAP::Parser::IteratorFactory&quot;&gt;TAP :: Parser :: IteratorFactory&lt;/a&gt;使用的接口。在2种方法中，界面非常简单：&lt;a href=&quot;#can_handle&quot;&gt;&amp;ldquo; can_handle&amp;rdquo;&lt;/a&gt;和&lt;a href=&quot;#make_source&quot;&gt;&amp;ldquo; make_source&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="902ee24d0f5c369c83561e631220c869f56c159a" translate="yes" xml:space="preserve">
          <source>interface_hairy.h</source>
          <target state="translated">interface_hairy.h</target>
        </trans-unit>
        <trans-unit id="58abb7dae834bec7c2231a51b0e43d7b2f1dcd1e" translate="yes" xml:space="preserve">
          <source>interface_simple.h</source>
          <target state="translated">interface_simple.h</target>
        </trans-unit>
        <trans-unit id="c48322cd43b3f5db0aa919df16088078ec067df7" translate="yes" xml:space="preserve">
          <source>interior-sequence storage will not be reclaimed upon destruction!</source>
          <target state="translated">内部序列存储在销毁后将不会被回收!</target>
        </trans-unit>
        <trans-unit id="9f33a7c798af6fd6abb28049d9c1b3edfa2fd24a" translate="yes" xml:space="preserve">
          <source>internal</source>
          <target state="translated">internal</target>
        </trans-unit>
        <trans-unit id="80db80017bf8bbe19665f5e1d1ee2ea716a054e5" translate="yes" xml:space="preserve">
          <source>internal %&amp;lt;num&amp;gt;p might conflict with future printf extensions</source>
          <target state="translated">内部％&amp;lt;num&amp;gt; p可能与将来的printf扩展冲突</target>
        </trans-unit>
        <trans-unit id="e51ec2956340bd90ad015ad9b1a44eb41fe13048" translate="yes" xml:space="preserve">
          <source>internal error: useconds &amp;lt; 0 (unsigned ... signed ...)</source>
          <target state="translated">内部错误：秒数&amp;lt;0（未签名...已签名...）</target>
        </trans-unit>
        <trans-unit id="8bc675a4bbcb339a374caa4cff4d8cc8a867b3a0" translate="yes" xml:space="preserve">
          <source>internally. &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; is just a synonym for &lt;code&gt;&amp;lt;ARGV&amp;gt;&lt;/code&gt; , which is magical. (The pseudo code above doesn't work because it treats &lt;code&gt;&amp;lt;ARGV&amp;gt;&lt;/code&gt; as non-magical.)</source>
          <target state="translated">内部。 &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; 只是 &lt;code&gt;&amp;lt;ARGV&amp;gt;&lt;/code&gt; 的同义词，这很神奇。（上面的伪代码不起作用，因为它将 &lt;code&gt;&amp;lt;ARGV&amp;gt;&lt;/code&gt; 视为非魔术。）</target>
        </trans-unit>
        <trans-unit id="3c576e2ab5d4dabd7f355282abaa6d1a2d144ef1" translate="yes" xml:space="preserve">
          <source>internally. &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; is just a synonym for &lt;code&gt;&amp;lt;ARGV&amp;gt;&lt;/code&gt;, which is magical. (The pseudo code above doesn't work because it treats &lt;code&gt;&amp;lt;ARGV&amp;gt;&lt;/code&gt; as non-magical.)</source>
          <target state="translated">内部。 &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; 只是 &lt;code&gt;&amp;lt;ARGV&amp;gt;&lt;/code&gt; 的同义词，这很神奇。（上面的伪代码不起作用，因为它将 &lt;code&gt;&amp;lt;ARGV&amp;gt;&lt;/code&gt; 视为非魔术。）</target>
        </trans-unit>
        <trans-unit id="f95a7232cfa16eef01e2e32a3d063b6807475100" translate="yes" xml:space="preserve">
          <source>interp</source>
          <target state="translated">interp</target>
        </trans-unit>
        <trans-unit id="dd17e57867fd7c7c09f592d502367e7a72bee660" translate="yes" xml:space="preserve">
          <source>interp.c</source>
          <target state="translated">interp.c</target>
        </trans-unit>
        <trans-unit id="5ec54f35edbea363d07d169d7643fe49322214d6" translate="yes" xml:space="preserve">
          <source>interpolate within double quotes, nor do single quotes impede evaluation of variables when used within double quotes.</source>
          <target state="translated">在双引号内进行插值,当在双引号内使用时,单引号也不会妨碍对变量的评估。</target>
        </trans-unit>
        <trans-unit id="21842adaec06e4938f4774dc8dc13c419d06b021" translate="yes" xml:space="preserve">
          <source>interpolate, see &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt;.</source>
          <target state="translated">插值，请参见&lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bd3e3bae86aed5d98047d91fc3620a79cc02a533" translate="yes" xml:space="preserve">
          <source>interpolation</source>
          <target state="translated">interpolation</target>
        </trans-unit>
        <trans-unit id="7365365ce3b1fe060f6c2b335e7ead37819acbe2" translate="yes" xml:space="preserve">
          <source>interpreted as a signed integer</source>
          <target state="translated">解释为有符号的整数</target>
        </trans-unit>
        <trans-unit id="0e543b666973effce414ee3f4d76d89f51fccfe5" translate="yes" xml:space="preserve">
          <source>interpreter</source>
          <target state="translated">interpreter</target>
        </trans-unit>
        <trans-unit id="22798399388200f939f1d84f974aacbf98336d00" translate="yes" xml:space="preserve">
          <source>interpreter has to be &lt;b&gt;compiled&lt;/b&gt; differently for each platform because it is implemented in C, but programs written in the Perl language are largely platform independent.</source>
          <target state="translated">解释程序必须针对每个平台进行不同的&lt;b&gt;编译&lt;/b&gt;，因为它是用C实现的，但是用Perl语言编写的程序在很大程度上与平台无关。</target>
        </trans-unit>
        <trans-unit id="09d29e0b1909ff0aa3805759c7f1db36d575f073" translate="yes" xml:space="preserve">
          <source>interpreter threads</source>
          <target state="translated">解释器线程</target>
        </trans-unit>
        <trans-unit id="d897bf481c6d3038f32cd50b3a8b5f6cf56b6348" translate="yes" xml:space="preserve">
          <source>interrupted</source>
          <target state="translated">interrupted</target>
        </trans-unit>
        <trans-unit id="5e40097f4262a60de6a010dd128b47db45b0fccb" translate="yes" xml:space="preserve">
          <source>intflags</source>
          <target state="translated">intflags</target>
        </trans-unit>
        <trans-unit id="a379c85f8c69a0d3679d831f2b58817f66b078af" translate="yes" xml:space="preserve">
          <source>into</source>
          <target state="translated">into</target>
        </trans-unit>
        <trans-unit id="80a3fceeaea68858a65bb33607e442ea25c1e2b4" translate="yes" xml:space="preserve">
          <source>into UTF-8, and similarly converts character code points. This is used when the script is a combination of ASCII (for the variable names and punctuation,</source>
          <target state="translated">转为UTF-8,并同样转换字符代码点。当脚本是ASCII码的组合(用于变量名和标点符号。</target>
        </trans-unit>
        <trans-unit id="5efbb46a90ecb3ca1fecc85280ad96184eda7b36" translate="yes" xml:space="preserve">
          <source>into Unix format before being written to the zip file.</source>
          <target state="translated">变成Unix格式,然后再写入zip文件。</target>
        </trans-unit>
        <trans-unit id="5a8ec964fb55903ea9af77229da3a4f176eca61a" translate="yes" xml:space="preserve">
          <source>into a &lt;code&gt;lineseq&lt;/code&gt; list op, which is returned.</source>
          <target state="translated">进入 &lt;code&gt;lineseq&lt;/code&gt; 列表操作，然后返回。</target>
        </trans-unit>
        <trans-unit id="09bdc6967275516d660dcb43a692aac47b477ffa" translate="yes" xml:space="preserve">
          <source>into a list op if it is not one already, and then converts it into the specified</source>
          <target state="translated">变成一个list op(如果还没有的话),然后把它转换成指定的</target>
        </trans-unit>
        <trans-unit id="b7c2f1c117ba3a76953af5844ab58cf92951ba02" translate="yes" xml:space="preserve">
          <source>into and</source>
          <target state="translated">进而</target>
        </trans-unit>
        <trans-unit id="0e21ff0e56d846baee28d588470952974dd44859" translate="yes" xml:space="preserve">
          <source>into the package by &lt;code&gt;filter_add&lt;/code&gt; , unless the reference was already blessed.</source>
          <target state="translated">除非引用已被 &lt;code&gt;filter_add&lt;/code&gt; ，否则将由filter_add放入包中。</target>
        </trans-unit>
        <trans-unit id="59b4d2c82e23577da827841f4466beecfb184b53" translate="yes" xml:space="preserve">
          <source>into the package by &lt;code&gt;filter_add&lt;/code&gt;, unless the reference was already blessed.</source>
          <target state="translated">除非引用已被 &lt;code&gt;filter_add&lt;/code&gt; ，否则将由filter_add放入包中。</target>
        </trans-unit>
        <trans-unit id="4f339c3e14932662ae9d0559ad77c63d4936a2d3" translate="yes" xml:space="preserve">
          <source>into this:</source>
          <target state="translated">成这。</target>
        </trans-unit>
        <trans-unit id="0bfe43fba7129ed9dac4397e68765123167495af" translate="yes" xml:space="preserve">
          <source>intro_my</source>
          <target state="translated">intro_my</target>
        </trans-unit>
        <trans-unit id="760aebbce7f663b4ebc868367cc05da9ede071dc" translate="yes" xml:space="preserve">
          <source>intrpvar.h</source>
          <target state="translated">intrpvar.h</target>
        </trans-unit>
        <trans-unit id="ad345dd991761a50f9adb9059b18cd2ed01ff85e" translate="yes" xml:space="preserve">
          <source>intsize.U</source>
          <target state="translated">intsize.U</target>
        </trans-unit>
        <trans-unit id="2bb8530511b63a0c151d59eadae559d3b4f9fc74" translate="yes" xml:space="preserve">
          <source>intuit</source>
          <target state="translated">intuit</target>
        </trans-unit>
        <trans-unit id="60287f8d0998472681bca816cace765cad1e3d18" translate="yes" xml:space="preserve">
          <source>invalid option -D%c, use -D'' to see choices</source>
          <target state="translated">无效选项-D%c,使用-D''查看选择。</target>
        </trans-unit>
        <trans-unit id="b712b0f1d2c4286763eab08ade92c1091ec6dd8d" translate="yes" xml:space="preserve">
          <source>invalid, potentially earning a different error message than the error message (or warning, or event) generated by a merely unknown (but theoretically valid) htmlname, as in &quot;E&amp;lt;qacute&amp;gt;&quot; [sic]. However, Pod parsers are not required to make this distinction.</source>
          <target state="translated">无效，可能会产生与错误消息（或警告或事件）不同的错误消息，该错误消息（或警告或事件）由仅未知（但理论上有效）的htmlname生成，例如&amp;ldquo; E &amp;lt;qacute&amp;gt;&amp;rdquo; [sic]。但是，不需要Pod解析器进行这种区分。</target>
        </trans-unit>
        <trans-unit id="1292ad671fbfc4d35ca913ab3b9a0129dc90d413" translate="yes" xml:space="preserve">
          <source>inverse operation should be applied in the Fetch method.</source>
          <target state="translated">在Fetch方法中应该应用反操作。</target>
        </trans-unit>
        <trans-unit id="a1754a8aa1386d7939bfddd474cd0652882671b3" translate="yes" xml:space="preserve">
          <source>invert</source>
          <target state="translated">invert</target>
        </trans-unit>
        <trans-unit id="208bf071c0654aef21d3c751be71fb9e76d12575" translate="yes" xml:space="preserve">
          <source>invert_opset (OPSET)</source>
          <target state="translated">反转操作集(OPSET)</target>
        </trans-unit>
        <trans-unit id="1715a7795fa0d0b4a7e6dc1165acd290b5359bbb" translate="yes" xml:space="preserve">
          <source>invlist_array</source>
          <target state="translated">invlist_array</target>
        </trans-unit>
        <trans-unit id="04688549c24962b5d164a13b68617c73b560731c" translate="yes" xml:space="preserve">
          <source>invlist_clear</source>
          <target state="translated">invlist_clear</target>
        </trans-unit>
        <trans-unit id="6bd794f3a9132aa98f5f4d4639b6ae54e359dd75" translate="yes" xml:space="preserve">
          <source>invlist_clone</source>
          <target state="translated">invlist_clone</target>
        </trans-unit>
        <trans-unit id="59bd8d009f9af96ef5701e763959f3595bc0a2ad" translate="yes" xml:space="preserve">
          <source>invlist_contents</source>
          <target state="translated">invlist_contents</target>
        </trans-unit>
        <trans-unit id="9134ffd908be5e210bc3dc809294a20d4c856f37" translate="yes" xml:space="preserve">
          <source>invlist_extend</source>
          <target state="translated">invlist_extend</target>
        </trans-unit>
        <trans-unit id="a89824929a97ee5528bc4bb391b40e7559bfb2f2" translate="yes" xml:space="preserve">
          <source>invlist_highest</source>
          <target state="translated">invlist_highest</target>
        </trans-unit>
        <trans-unit id="4a76ae9e8eed3b9c4c3e909c05dbdee1e76166a8" translate="yes" xml:space="preserve">
          <source>invlist_is_iterating</source>
          <target state="translated">invlist_is_iterating</target>
        </trans-unit>
        <trans-unit id="127966e2609480fb92a39f73552738b93777983e" translate="yes" xml:space="preserve">
          <source>invlist_iterfinish</source>
          <target state="translated">invlist_iterfinish</target>
        </trans-unit>
        <trans-unit id="b1ac20824e71617e15e6d9224978737a4dfcff25" translate="yes" xml:space="preserve">
          <source>invlist_iterinit</source>
          <target state="translated">invlist_iterinit</target>
        </trans-unit>
        <trans-unit id="a9f52358555ed8c1cfd6377d3b97be2d83211c12" translate="yes" xml:space="preserve">
          <source>invlist_iternext</source>
          <target state="translated">invlist_iternext</target>
        </trans-unit>
        <trans-unit id="225291e5bd34f5c3be1e04563e377211a4569951" translate="yes" xml:space="preserve">
          <source>invlist_lowest</source>
          <target state="translated">invlist_lowest</target>
        </trans-unit>
        <trans-unit id="bd4ab2c7dbb0c0badc0d624f7845e6c672b176a5" translate="yes" xml:space="preserve">
          <source>invlist_max</source>
          <target state="translated">invlist_max</target>
        </trans-unit>
        <trans-unit id="8fa332aeb55e8690c78c1aa863b6b03e544cb65e" translate="yes" xml:space="preserve">
          <source>invlist_previous_index</source>
          <target state="translated">invlist_previous_index</target>
        </trans-unit>
        <trans-unit id="2d1aecca59b3f5a582905dba71c40b39af16936d" translate="yes" xml:space="preserve">
          <source>invlist_set_len</source>
          <target state="translated">invlist_set_len</target>
        </trans-unit>
        <trans-unit id="bf976b10b19dacd5f9fc7e56bb5aa0e3672593ed" translate="yes" xml:space="preserve">
          <source>invlist_set_previous_index</source>
          <target state="translated">invlist_set_previous_index</target>
        </trans-unit>
        <trans-unit id="e65e2690eca7afb15f45d4b3993152e8a6b41af1" translate="yes" xml:space="preserve">
          <source>invlist_trim</source>
          <target state="translated">invlist_trim</target>
        </trans-unit>
        <trans-unit id="5d107a531c5ae9bb93e25ac25a5269f31b9b8d96" translate="yes" xml:space="preserve">
          <source>invmap_dump</source>
          <target state="translated">invmap_dump</target>
        </trans-unit>
        <trans-unit id="eedee027475509437fd9d1276f32a7450f913287" translate="yes" xml:space="preserve">
          <source>invocant</source>
          <target state="translated">invocant</target>
        </trans-unit>
        <trans-unit id="16ee9dfc7e4827b505dbe5c638ac253b0f4c2c2f" translate="yes" xml:space="preserve">
          <source>invocation</source>
          <target state="translated">invocation</target>
        </trans-unit>
        <trans-unit id="4d2aa1cd14486c3a4a5f5b5f91ebfce00891a815" translate="yes" xml:space="preserve">
          <source>invoke the method call like this:</source>
          <target state="translated">像这样调用方法。</target>
        </trans-unit>
        <trans-unit id="9d2e89cb161a40179909f64d20244135bf4c608d" translate="yes" xml:space="preserve">
          <source>invoke the overload method with &lt;code&gt;&lt;i&gt;X&lt;/i&gt;&lt;/code&gt; as an argument. Instead the above table is consulted as normal, and based on the type of &lt;code&gt;&lt;i&gt;X&lt;/i&gt;&lt;/code&gt;, overloading may or may not be invoked. For simple strings or numbers, &quot;in&quot; becomes equivalent to this:</source>
          <target state="translated">以 &lt;code&gt;&lt;i&gt;X&lt;/i&gt;&lt;/code&gt; 为参数调用重载方法。而是正常参考上表，并且基于 &lt;code&gt;&lt;i&gt;X&lt;/i&gt;&lt;/code&gt; 的类型，可以调用也可以不调用重载。对于简单的字符串或数字，&amp;ldquo; in&amp;rdquo;等效于此：</target>
        </trans-unit>
        <trans-unit id="a5f53a1db4bd0284aa3660bede417a2b6d5db51f" translate="yes" xml:space="preserve">
          <source>invokes the &lt;b&gt;parse_from_filehandle()&lt;/b&gt; method passing it the corresponding input and output filehandles.</source>
          <target state="translated">调用&lt;b&gt;parse_from_filehandle（）&lt;/b&gt;方法，&lt;b&gt;并向&lt;/b&gt;其传递相应的输入和输出文件句柄。</target>
        </trans-unit>
        <trans-unit id="271383556324a922b015d9d5abb777b3b680293a" translate="yes" xml:space="preserve">
          <source>invoking it for the directory's contents. It does a postorder traversal instead of a preorder traversal, working from the bottom of the directory tree up where &lt;code&gt;find()&lt;/code&gt; works from the top of the tree down.</source>
          <target state="translated">调用它获取目录的内容。它执行后遍历遍历而不是前遍历遍历，从目录树的底部向上运行，而 &lt;code&gt;find()&lt;/code&gt; 从树的顶部向下运行。</target>
        </trans-unit>
        <trans-unit id="b8dd489a672c67071ed900746c3af6669142691d" translate="yes" xml:space="preserve">
          <source>involve more overhead than is justifiable for all but the largest lexicons.</source>
          <target state="translated">除了最大的词典外,所有其他词典都会涉及更多的开销,这是不合理的。</target>
        </trans-unit>
        <trans-unit id="5a258230180d9c643f761089d7e33b8b52288ed3" translate="yes" xml:space="preserve">
          <source>io</source>
          <target state="translated">io</target>
        </trans-unit>
        <trans-unit id="1eb7e48254406f0ad58f032dc48fe49432e4957e" translate="yes" xml:space="preserve">
          <source>io/pipe.t</source>
          <target state="translated">io/pipe.t</target>
        </trans-unit>
        <trans-unit id="fd279f47641a01b11eb13ced0473d39d010b32f1" translate="yes" xml:space="preserve">
          <source>io_close</source>
          <target state="translated">io_close</target>
        </trans-unit>
        <trans-unit id="1ad14cf4402c59fea497f745d3df4a52f09e403b" translate="yes" xml:space="preserve">
          <source>ioctl</source>
          <target state="translated">ioctl</target>
        </trans-unit>
        <trans-unit id="ac706755d569c148cde69cf903fa0e404d5fb464" translate="yes" xml:space="preserve">
          <source>ioctl FILEHANDLE,FUNCTION,SCALAR</source>
          <target state="translated">ioctl FILEHANDLE,FUNCTION,SCALAR......。</target>
        </trans-unit>
        <trans-unit id="deb943a9c35e5ba7c1b95844d2ef7a05f5dec77c" translate="yes" xml:space="preserve">
          <source>ioctl is not implemented</source>
          <target state="translated">没有实现ioctl</target>
        </trans-unit>
        <trans-unit id="bc1cd21ec1db5af0e9da88a83a9e32247096211b" translate="yes" xml:space="preserve">
          <source>ioctl() on unopened %s</source>
          <target state="translated">ioctl()在未打开的%s上。</target>
        </trans-unit>
        <trans-unit id="81c3f83f167f0c364e4d909401dd2fbced2eb5c4" translate="yes" xml:space="preserve">
          <source>ioctl.h</source>
          <target state="translated">ioctl.h</target>
        </trans-unit>
        <trans-unit id="b47f363e2b430c0647f14deea3eced9b0ef300ce" translate="yes" xml:space="preserve">
          <source>is</source>
          <target state="translated">is</target>
        </trans-unit>
        <trans-unit id="463b46fb59560ec9a4f45c2879fbeca62bdbadb9" translate="yes" xml:space="preserve">
          <source>is #included, it redefines the aTHX and aTHX_ macros to call a function that will return the context. Thus, something like:</source>
          <target state="translated">是#included的,它重新定义了aTHX和aTHX_宏来调用一个返回上下文的函数。因此,类似于</target>
        </trans-unit>
        <trans-unit id="869c55ae7392038ca2ada25a5b705659a6fc2134" translate="yes" xml:space="preserve">
          <source>is - and it has the same effect.)</source>
          <target state="translated">是--而且它具有同样的效果)。)</target>
        </trans-unit>
        <trans-unit id="83b4bd82f5c3073fcab6cd52e2b883488c825747" translate="yes" xml:space="preserve">
          <source>is 0, encoding and decoding replace any malformed character with a</source>
          <target state="translated">为0,编码和解码将任何畸形字符替换为一个</target>
        </trans-unit>
        <trans-unit id="0bda6c393b81ec62986133bc68d16a600e5376b4" translate="yes" xml:space="preserve">
          <source>is 0, or the routine croaks if</source>
          <target state="translated">为0,或者如果</target>
        </trans-unit>
        <trans-unit id="9433dff76d69aeb49c9f1b1e6a810eef80d46303" translate="yes" xml:space="preserve">
          <source>is 1, methods immediately die with an error message. Therefore, when</source>
          <target state="translated">为1时,方法立即死亡,并发出错误信息。因此,当</target>
        </trans-unit>
        <trans-unit id="a4d2c83b695d00259b2771edae5aa2d42137fabb" translate="yes" xml:space="preserve">
          <source>is 1, you should trap exceptions with &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval{}&lt;/a&gt;&lt;/code&gt;, unless you really want to let it &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">为1时，应该使用 &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval{}&lt;/a&gt;&lt;/code&gt; 捕获异常，除非您真的想让它 &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7a26b3bc94221395b2786afb993cdb5de7ab69f7" translate="yes" xml:space="preserve">
          <source>is 1, you should trap exceptions with &lt;code&gt;eval{}&lt;/code&gt;, unless you really want to let it &lt;code&gt;die&lt;/code&gt;.</source>
          <target state="translated">为1时，除非您真的想让它 &lt;code&gt;die&lt;/code&gt; ，否则应该使用 &lt;code&gt;eval{}&lt;/code&gt; 捕获异常。</target>
        </trans-unit>
        <trans-unit id="08b01d36edc2dd6fddbc0756fbe9c5513a659ab8" translate="yes" xml:space="preserve">
          <source>is 1.</source>
          <target state="translated">是1。</target>
        </trans-unit>
        <trans-unit id="8c0ff8e969bcd171ef8d6c4cddc51856c058ecf8" translate="yes" xml:space="preserve">
          <source>is 1. When a character whose ord value is larger than 0xFFFF is encountered, its place is filled with \x{FFFD} if</source>
          <target state="translated">是1,当遇到一个ord值大于0xFFFF的字符时,它的位置会被填上\x{FFFD},如果</target>
        </trans-unit>
        <trans-unit id="79d529e67b476b62851937c5b23067cd4ce1b5bd" translate="yes" xml:space="preserve">
          <source>is 3 and</source>
          <target state="translated">是3和</target>
        </trans-unit>
        <trans-unit id="9522c6460c5f6f20c4307e7bed6822d3f2d77897" translate="yes" xml:space="preserve">
          <source>is 3. A single &lt;code&gt;ITEM&lt;/code&gt; is always inlined.</source>
          <target state="translated">是3。始终内联单个 &lt;code&gt;ITEM&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b5c84ec496d8b224c85fc14573a3862152ff5122" translate="yes" xml:space="preserve">
          <source>is &lt;code&gt;C&lt;/code&gt; (for &lt;code&gt;common&lt;/code&gt; ) if the best possible fold is a single code point (</source>
          <target state="translated">如果最佳折叠是单个代码点，则 &lt;code&gt;C&lt;/code&gt; 为C（ &lt;code&gt;common&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="9048adafeea91d85a3bb74cbdb81acf53f747dad" translate="yes" xml:space="preserve">
          <source>is &lt;code&gt;C&lt;/code&gt; (for &lt;code&gt;common&lt;/code&gt;) if the best possible fold is a single code point (</source>
          <target state="translated">是 &lt;code&gt;C&lt;/code&gt; （对于 &lt;code&gt;common&lt;/code&gt; ）如果可能的最佳折叠是单码点（</target>
        </trans-unit>
        <trans-unit id="939984a83e875f30897be52391d8f5b35e2e83eb" translate="yes" xml:space="preserve">
          <source>is &lt;code&gt;FooPtr&lt;/code&gt;</source>
          <target state="translated">是 &lt;code&gt;FooPtr&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="65816c93586e4c56d14bdf38227bc0d35e22af9d" translate="yes" xml:space="preserve">
          <source>is &lt;code&gt;Foo__Bar&lt;/code&gt;</source>
          <target state="translated">是 &lt;code&gt;Foo__Bar&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9e4470db40e21830b033effb525cbd3a1872e1d1" translate="yes" xml:space="preserve">
          <source>is &lt;code&gt;I&lt;/code&gt; , and</source>
          <target state="translated">是 &lt;code&gt;I&lt;/code&gt; ，并且</target>
        </trans-unit>
        <trans-unit id="669e7fcef0003bced2b91808628da72a61c71a0f" translate="yes" xml:space="preserve">
          <source>is &lt;code&gt;I&lt;/code&gt;, and</source>
          <target state="translated">是 &lt;code&gt;I&lt;/code&gt; ，并且</target>
        </trans-unit>
        <trans-unit id="c6bcb94dd29106e50e5e67679cd655c28bdf7f7a" translate="yes" xml:space="preserve">
          <source>is &lt;code&gt;OP_ANDASSIGN&lt;/code&gt; , &lt;code&gt;OP_ORASSIGN&lt;/code&gt; , or &lt;code&gt;OP_DORASSIGN&lt;/code&gt; , then a suitable conditional optree is constructed. If</source>
          <target state="translated">为 &lt;code&gt;OP_ANDASSIGN&lt;/code&gt; ， &lt;code&gt;OP_ORASSIGN&lt;/code&gt; 或 &lt;code&gt;OP_DORASSIGN&lt;/code&gt; ，则构造一个合适的条件optree。如果</target>
        </trans-unit>
        <trans-unit id="ce21611a14027ecfce0b71f876f7d06f5a1d8b5b" translate="yes" xml:space="preserve">
          <source>is NULL).</source>
          <target state="translated">是NULL)。)</target>
        </trans-unit>
        <trans-unit id="b53e086ef2afc2e7ee365a3c7802977ceebd8190" translate="yes" xml:space="preserve">
          <source>is TRUE if and only if &lt;code&gt;$foo&lt;/code&gt; contains any of those 4 sequences from the children's story &quot;Jack and the Beanstalk&quot;.</source>
          <target state="translated">当且仅当 &lt;code&gt;$foo&lt;/code&gt; 包含儿童故事&amp;ldquo; Jack and the Beanstalk&amp;rdquo;中的这4个序列中的任何一个时，才为TRUE 。</target>
        </trans-unit>
        <trans-unit id="e8bc2c2b7decb0bb38e1ecc01095a37fcd7e1a77" translate="yes" xml:space="preserve">
          <source>is TRUE if and only if &lt;code&gt;$foo&lt;/code&gt; contains either the sequence &lt;code&gt;&quot;this thing&quot;&lt;/code&gt; or the sequence &lt;code&gt;&quot;that thing&quot;&lt;/code&gt;. The portions of the string that match the portions of the pattern enclosed in parentheses are normally made available separately for use later in the pattern, substitution, or program. This is called &quot;capturing&quot;, and it can get complicated. See &lt;a href=&quot;#Capture-groups&quot;&gt;&quot;Capture groups&quot;&lt;/a&gt;.</source>
          <target state="translated">当且仅当 &lt;code&gt;$foo&lt;/code&gt; 包含序列 &lt;code&gt;&quot;this thing&quot;&lt;/code&gt; 或序列 &lt;code&gt;&quot;that thing&quot;&lt;/code&gt; 时，才为TRUE 。字符串中与括号内的模式部分相匹配的部分通常可以单独使用，以供以后在模式，替换或程序中使用。这称为&amp;ldquo;捕获&amp;rdquo;，并且可能变得复杂。请参阅&lt;a href=&quot;#Capture-groups&quot;&gt;&amp;ldquo;捕获组&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="789a208058c7f70e653e4e06040f218a3573168a" translate="yes" xml:space="preserve">
          <source>is TRUE if and only if &lt;code&gt;$foo&lt;/code&gt; contains either the sequence &lt;code&gt;&quot;this&quot;&lt;/code&gt; or the sequence &lt;code&gt;&quot;that&quot;&lt;/code&gt;. Like all metacharacters, prefixing the &lt;code&gt;&quot;|&quot;&lt;/code&gt; with a backslash makes it match the plain punctuation character; in its case, the VERTICAL LINE.</source>
          <target state="translated">当且仅当 &lt;code&gt;$foo&lt;/code&gt; 包含序列 &lt;code&gt;&quot;this&quot;&lt;/code&gt; 或序列 &lt;code&gt;&quot;that&quot;&lt;/code&gt; 时，才为TRUE 。像所有元字符一样，在 &lt;code&gt;&quot;|&quot;&lt;/code&gt; 前面加上前缀 用反斜杠使其与普通标点字符匹配；如果是垂直线，则为&amp;ldquo;垂直线&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="18aef45af55cfc0458a465c74717dbe4259aec00" translate="yes" xml:space="preserve">
          <source>is TRUE if and only if &lt;code&gt;$foo&lt;/code&gt; contains the sequence &lt;code&gt;&quot;this|that&quot;&lt;/code&gt;.</source>
          <target state="translated">当且仅当 &lt;code&gt;$foo&lt;/code&gt; 包含序列 &lt;code&gt;&quot;this|that&quot;&lt;/code&gt; 才为TRUE 。</target>
        </trans-unit>
        <trans-unit id="e883ffa64181c3219fd9a7b42dae0ae653e7eaba" translate="yes" xml:space="preserve">
          <source>is UTF-8 encoded and vice-versa.</source>
          <target state="translated">是UTF-8编码,反之亦然。</target>
        </trans-unit>
        <trans-unit id="4ad590898ac06ec587af8f66311fb1bbc1535303" translate="yes" xml:space="preserve">
          <source>is a GV supplying the name that should be used by the check function to refer to the callee of the &lt;code&gt;entersub&lt;/code&gt; op if it needs to emit any diagnostics. It is permitted to apply the check function in non-standard situations, such as to a call to a different subroutine or to a method call.</source>
          <target state="translated">是一个GV，如果需要发出任何诊断信息，则GV提供的名称应由check函数用来引用 &lt;code&gt;entersub&lt;/code&gt; op 的被调用方。允许在非标准情况下应用检查功能，例如，对其他子例程的调用或对方法的调用。</target>
        </trans-unit>
        <trans-unit id="08d3d68a728efcdd2ab6530d7d5ecfbfb371a2be" translate="yes" xml:space="preserve">
          <source>is a Perl</source>
          <target state="translated">是一个Perl</target>
        </trans-unit>
        <trans-unit id="2b9f379549b00f2117b76ea8e1b4e7f02ef83c49" translate="yes" xml:space="preserve">
          <source>is a Perl double-quoted string that replaces in the string whatever is matched with the &lt;code&gt;regexp&lt;/code&gt;. The operator &lt;code&gt;=~&lt;/code&gt; is also used here to associate a string with &lt;code&gt;s///&lt;/code&gt;. If matching against &lt;code&gt;$_&lt;/code&gt;, the &lt;code&gt;$_ =~&lt;/code&gt; can be dropped. If there is a match, &lt;code&gt;s///&lt;/code&gt; returns the number of substitutions made; otherwise it returns false. Here are a few examples:</source>
          <target state="translated">是一个Perl双引号字符串，该字符串替换与 &lt;code&gt;regexp&lt;/code&gt; 匹配的任何字符串。这里还使用运算符 &lt;code&gt;=~&lt;/code&gt; 将字符串与 &lt;code&gt;s///&lt;/code&gt; 关联。如果与 &lt;code&gt;$_&lt;/code&gt; 匹配，则可以删除 &lt;code&gt;$_ =~&lt;/code&gt; 。如果存在匹配项，则 &lt;code&gt;s///&lt;/code&gt; 返回被替换的次数；否则，返回s ///。否则返回false。这里有一些例子：</target>
        </trans-unit>
        <trans-unit id="130739bc618160f7f1fc5c5a9ff8b4322613f98e" translate="yes" xml:space="preserve">
          <source>is a Perl subroutine that takes no arguments (that's the</source>
          <target state="translated">是一个不接受任何参数的Perl子程序(这就是所谓的</target>
        </trans-unit>
        <trans-unit id="b8059014bc71acfd20332d69515ec64768947e28" translate="yes" xml:space="preserve">
          <source>is a blessed reference or a package name</source>
          <target state="translated">是一个受祝福的引用或包名</target>
        </trans-unit>
        <trans-unit id="37b225c02472425d591d858f478440711108fafc" translate="yes" xml:space="preserve">
          <source>is a combination of the &lt;code&gt;&quot;al&quot;&lt;/code&gt; type and the &lt;code&gt;&quot;ae&quot;&lt;/code&gt; type. Some of the map array elements have the forms given by &lt;code&gt;&quot;al&quot;&lt;/code&gt; , and the rest are the empty string. The property &lt;code&gt;NFKC_Casefold&lt;/code&gt; has this form. An example slice is:</source>
          <target state="translated">是 &lt;code&gt;&quot;al&quot;&lt;/code&gt; 类型和 &lt;code&gt;&quot;ae&quot;&lt;/code&gt; 类型的组合。一些map数组元素具有 &lt;code&gt;&quot;al&quot;&lt;/code&gt; 给出的形式，其余为空字符串。属性 &lt;code&gt;NFKC_Casefold&lt;/code&gt; 具有这种形式。一个示例切片是：</target>
        </trans-unit>
        <trans-unit id="756e5fe11c9778584143d513e2d830f3f2516c69" translate="yes" xml:space="preserve">
          <source>is a combination of the &lt;code&gt;&quot;al&quot;&lt;/code&gt; type and the &lt;code&gt;&quot;ae&quot;&lt;/code&gt; type. Some of the map array elements have the forms given by &lt;code&gt;&quot;al&quot;&lt;/code&gt;, and the rest are the empty string. The property &lt;code&gt;NFKC_Casefold&lt;/code&gt; has this form. An example slice is:</source>
          <target state="translated">是 &lt;code&gt;&quot;al&quot;&lt;/code&gt; 类型和 &lt;code&gt;&quot;ae&quot;&lt;/code&gt; 类型的组合。一些map数组元素具有 &lt;code&gt;&quot;al&quot;&lt;/code&gt; 给出的形式，其余为空字符串。属性 &lt;code&gt;NFKC_Casefold&lt;/code&gt; 具有这种形式。一个示例切片是：</target>
        </trans-unit>
        <trans-unit id="61c94ee116f6a0b02686534706f14ab4ac28cf95" translate="yes" xml:space="preserve">
          <source>is a command-line interface to CPAN.pm. It allows you to install modules or distributions from CPAN, or just get information about them, and a lot more. It is similar to the command line mode of the &lt;a href=&quot;cpan&quot;&gt;CPAN&lt;/a&gt; module,</source>
          <target state="translated">是CPAN.pm的命令行界面。它允许您从CPAN安装模块或发行版，或仅获取有关它们的信息，等等。它类似于&lt;a href=&quot;cpan&quot;&gt;CPAN&lt;/a&gt;模块的命令行模式，</target>
        </trans-unit>
        <trans-unit id="8330f641c616959b5dc4d2a1018e6e7abd8aea60" translate="yes" xml:space="preserve">
          <source>is a command-line interface to the test-running functionality of</source>
          <target state="translated">是一个命令行接口,用于连接测试运行功能的</target>
        </trans-unit>
        <trans-unit id="a3f3d9feee7e7a4f2fbdd3512e2a38e4a55fb2b5" translate="yes" xml:space="preserve">
          <source>is a common abbreviation for a character</source>
          <target state="translated">是一个常用字的缩略语</target>
        </trans-unit>
        <trans-unit id="e658f3dd186574d5485eeff6c799c7e447588ebe" translate="yes" xml:space="preserve">
          <source>is a compiler to convert Perl XS code into C code. It is typically run by the makefiles created by &lt;a href=&quot;ExtUtils::MakeMaker&quot;&gt;ExtUtils::MakeMaker&lt;/a&gt;.</source>
          <target state="translated">是将Perl XS代码转换为C代码的编译器。它通常由&lt;a href=&quot;ExtUtils::MakeMaker&quot;&gt;ExtUtils :: MakeMaker&lt;/a&gt;创建的makefile运行。</target>
        </trans-unit>
        <trans-unit id="9febe7f9f7abef798cc6a59cd722795b25995da6" translate="yes" xml:space="preserve">
          <source>is a compiler to convert Perl XS code into C code. It is typically run by the makefiles created by &lt;a href=&quot;extutils/makemaker&quot;&gt;ExtUtils::MakeMaker&lt;/a&gt;.</source>
          <target state="translated">是将Perl XS代码转换为C代码的编译器。它通常由&lt;a href=&quot;extutils/makemaker&quot;&gt;ExtUtils :: MakeMaker&lt;/a&gt;创建的makefile运行。</target>
        </trans-unit>
        <trans-unit id="90882a351b430362ddbaa59a277b7ed39fa5a7e3" translate="yes" xml:space="preserve">
          <source>is a computer science term with a precise but hard-to-explain meaning. Usually, closures are implemented in Perl as anonymous subroutines with lasting references to lexical variables outside their own scopes. These lexicals magically refer to the variables that were around when the subroutine was defined (deep binding).</source>
          <target state="translated">是一个计算机科学术语,具有精确但难以解释的含义。通常情况下,闭包在Perl中是以匿名子程序的形式实现的,它对自己作用域外的词汇变量有持久的引用。这些词性变量神奇地引用了子程序被定义时存在的变量(深度绑定)。</target>
        </trans-unit>
        <trans-unit id="bff47d2ce40b707b0845e92b4a96b5d4dc076d28" translate="yes" xml:space="preserve">
          <source>is a cpp token indicating which entry to return. If the member is not set this will return a default value. The return type depends on</source>
          <target state="translated">是一个cpp标记,表示要返回哪个条目。如果没有设置成员,将返回一个默认值。返回的类型取决于</target>
        </trans-unit>
        <trans-unit id="e5f9de05e11db96a337f0d1eb38539a88b5409b2" translate="yes" xml:space="preserve">
          <source>is a cpp token indicating which entry to set. See &lt;a href=&quot;perlguts#Custom-Operators&quot;&gt;Custom Operators in perlguts&lt;/a&gt; for details about the available members and how they are used. This macro evaluates its argument more than once.</source>
          <target state="translated">是一个cpp令牌，指示要设置的条目。有关可用成员及其使用方式的详细信息，请参见&lt;a href=&quot;perlguts#Custom-Operators&quot;&gt;perlguts中的&amp;ldquo;自定义运算符&amp;rdquo;&lt;/a&gt;。该宏多次评估其自变量。</target>
        </trans-unit>
        <trans-unit id="8b175b89be18442a11782bc701cae16d7d0a17b0" translate="yes" xml:space="preserve">
          <source>is a decimal number, and XML uses &lt;code&gt;&amp;amp;#x&lt;i&gt;HHHH&lt;/i&gt;;&lt;/code&gt; where</source>
          <target state="translated">是十进制数字，XML使用 &lt;code&gt;&amp;amp;#x&lt;i&gt;HHHH&lt;/i&gt;;&lt;/code&gt; 哪里</target>
        </trans-unit>
        <trans-unit id="867e37e0ad95e37a79d195114de1a83f0d632684" translate="yes" xml:space="preserve">
          <source>is a fixed string that must appear at a particular offset from the beginning of the match. A</source>
          <target state="translated">是一个固定的字符串,必须出现在匹配开始时的一个特定偏移量。A</target>
        </trans-unit>
        <trans-unit id="61f3bde037bf2172e594d6db29ca0978f1c08a37" translate="yes" xml:space="preserve">
          <source>is a flag indicating whether we're in a dclone() or a regular de-serialization via thaw(), and</source>
          <target state="translated">是一个标志,表示我们是在dclone()还是通过thaw()进行常规的去序列化,而</target>
        </trans-unit>
        <trans-unit id="177a8f74fbd5fb5c45bffdbce71939307bad58c8" translate="yes" xml:space="preserve">
          <source>is a flag indicating whether we're in a dclone() or a regular serialization via store() or freeze().</source>
          <target state="translated">是一个标志,表示我们是在dclone()还是通过store()或freeze()进行常规序列化。</target>
        </trans-unit>
        <trans-unit id="09e909c7ace28e45d047ca69ce8d514016e3f383" translate="yes" xml:space="preserve">
          <source>is a form of if-then-else statement that allows one to choose which patterns are to be matched, based on some condition. There are two types of conditional expression: &lt;code&gt;(?(&lt;i&gt;condition&lt;/i&gt;)&lt;i&gt;yes-regexp&lt;/i&gt;)&lt;/code&gt; and &lt;code&gt;(?(condition)&lt;i&gt;yes-regexp&lt;/i&gt;|&lt;i&gt;no-regexp&lt;/i&gt;)&lt;/code&gt;. &lt;code&gt;(?(&lt;i&gt;condition&lt;/i&gt;)&lt;i&gt;yes-regexp&lt;/i&gt;)&lt;/code&gt; is like an &lt;code&gt;'if () {}'&lt;/code&gt; statement in Perl. If the</source>
          <target state="translated">是if-then-else语句的一种形式，它允许用户根据某些条件选择要匹配的模式。有两种类型的条件表达式： &lt;code&gt;(?(&lt;i&gt;condition&lt;/i&gt;)&lt;i&gt;yes-regexp&lt;/i&gt;)&lt;/code&gt; 和 &lt;code&gt;(?(condition)&lt;i&gt;yes-regexp&lt;/i&gt;|&lt;i&gt;no-regexp&lt;/i&gt;)&lt;/code&gt; 。 &lt;code&gt;(?(&lt;i&gt;condition&lt;/i&gt;)&lt;i&gt;yes-regexp&lt;/i&gt;)&lt;/code&gt; 就像Perl中的 &lt;code&gt;'if () {}'&lt;/code&gt; 语句。如果</target>
        </trans-unit>
        <trans-unit id="6e2e892937bca1eea5ee9c95d0d5e5e5f11395dd" translate="yes" xml:space="preserve">
          <source>is a form of if-then-else statement that allows one to choose which patterns are to be matched, based on some condition. There are two types of conditional expression: &lt;code&gt;(?(condition)yes-regexp)&lt;/code&gt; and &lt;code&gt;(?(condition)yes-regexp|no-regexp)&lt;/code&gt;. &lt;code&gt;(?(condition)yes-regexp)&lt;/code&gt; is like an &lt;code&gt;'if () {}'&lt;/code&gt; statement in Perl. If the &lt;code&gt;condition&lt;/code&gt; is true, the &lt;code&gt;yes-regexp&lt;/code&gt; will be matched. If the &lt;code&gt;condition&lt;/code&gt; is false, the &lt;code&gt;yes-regexp&lt;/code&gt; will be skipped and Perl will move onto the next regexp element. The second form is like an &lt;code&gt;'if () {} else {}'&lt;/code&gt; statement in Perl. If the &lt;code&gt;condition&lt;/code&gt; is true, the &lt;code&gt;yes-regexp&lt;/code&gt; will be matched, otherwise the &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no-regexp&lt;/a&gt;&lt;/code&gt; will be matched.</source>
          <target state="translated">是if-then-else语句的一种形式，它允许用户根据某些条件选择要匹配的模式。条件表达式有两种类型： &lt;code&gt;(?(condition)yes-regexp)&lt;/code&gt; 和 &lt;code&gt;(?(condition)yes-regexp|no-regexp)&lt;/code&gt; 。 &lt;code&gt;(?(condition)yes-regexp)&lt;/code&gt; 就像Perl中的 &lt;code&gt;'if () {}'&lt;/code&gt; 语句一样。如果 &lt;code&gt;condition&lt;/code&gt; 为真，则将匹配 &lt;code&gt;yes-regexp&lt;/code&gt; 。如果 &lt;code&gt;condition&lt;/code&gt; 为false，则将跳过 &lt;code&gt;yes-regexp&lt;/code&gt; ，Perl将移至下一个regexp元素。第二种形式类似于Perl中的 &lt;code&gt;'if () {} else {}'&lt;/code&gt; 语句。如果 &lt;code&gt;condition&lt;/code&gt; 为真，则 &lt;code&gt;yes-regexp&lt;/code&gt; 将匹配，否则将匹配 &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no-regexp&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f9a2da8cb2cec1f20323fe27b5dacfdea89a7e07" translate="yes" xml:space="preserve">
          <source>is a hashref (as passed to &lt;code&gt;C_constant&lt;/code&gt; and &lt;code&gt;match_clause&lt;/code&gt; .</source>
          <target state="translated">是一个hashref（传递给 &lt;code&gt;C_constant&lt;/code&gt; 和 &lt;code&gt;match_clause&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="131d04c3792cc09f6f3a833c83bc112dd57bb5e5" translate="yes" xml:space="preserve">
          <source>is a hashref (as passed to &lt;code&gt;C_constant&lt;/code&gt; and &lt;code&gt;match_clause&lt;/code&gt;.</source>
          <target state="translated">是一个hashref（传递给 &lt;code&gt;C_constant&lt;/code&gt; 和 &lt;code&gt;match_clause&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="792c669ddbc9146f9c82edec4f8d983c193844e7" translate="yes" xml:space="preserve">
          <source>is a hexadecimal number, also inserts a character into a string. The character it inserts is the one whose Unicode code point (ordinal value) is equal to the number. For example, &lt;code&gt;&quot;\N{U+263a}&quot;&lt;/code&gt; is the Unicode (white background, black foreground) smiley face equivalent to &lt;code&gt;&quot;\N{WHITE SMILING FACE}&quot;&lt;/code&gt; . Also note, &lt;code&gt;\N{&lt;i&gt;...&lt;/i&gt;}&lt;/code&gt; can mean a regex quantifier instead of a character name, when the</source>
          <target state="translated">是十六进制数字，还在字符串中插入一个字符。它插入的字符是Unicode代码点（常规值）等于数字的字符。例如， &lt;code&gt;&quot;\N{U+263a}&quot;&lt;/code&gt; 是Unicode（白色背景，黑色前景）笑脸，等效于 &lt;code&gt;&quot;\N{WHITE SMILING FACE}&quot;&lt;/code&gt; 。另请注意，当 &lt;code&gt;\N{&lt;i&gt;...&lt;/i&gt;}&lt;/code&gt; 表示正则表达式量词而不是字符名称时，</target>
        </trans-unit>
        <trans-unit id="93d4f1082cb9cc319586cdc6e38410e852ffeafb" translate="yes" xml:space="preserve">
          <source>is a hexadecimal number, also inserts a character into a string. The character it inserts is the one whose Unicode code point (ordinal value) is equal to the number. For example, &lt;code&gt;&quot;\N{U+263a}&quot;&lt;/code&gt; is the Unicode (white background, black foreground) smiley face equivalent to &lt;code&gt;&quot;\N{WHITE SMILING FACE}&quot;&lt;/code&gt;. Also note, &lt;code&gt;\N{&lt;i&gt;...&lt;/i&gt;}&lt;/code&gt; can mean a regex quantifier instead of a character name, when the</source>
          <target state="translated">是一个十六进制数字，还在字符串中插入一个字符。它插入的字符是Unicode代码点（常规值）等于数字的字符。例如， &lt;code&gt;&quot;\N{U+263a}&quot;&lt;/code&gt; 是Unicode（白色背景，黑色前景）笑脸，等效于 &lt;code&gt;&quot;\N{WHITE SMILING FACE}&quot;&lt;/code&gt; 。另请注意，当 &lt;code&gt;\N{&lt;i&gt;...&lt;/i&gt;}&lt;/code&gt; 表示正则表达式量词而不是字符名称时，</target>
        </trans-unit>
        <trans-unit id="a3098eb8ef55457b8406a9a4b75ba0655ed07307" translate="yes" xml:space="preserve">
          <source>is a minimalistic perl built to bootstrap building extensions, utilties, documentation etc. It doesn't support dynamic loading and depending on the point in the build process will only have access to a limited set of core modules.</source>
          <target state="translated">是一个极简主义的perl,构建的目的是为了引导构建扩展、实用工具、文档等。它不支持动态加载,根据构建过程中的不同点,它只能访问一组有限的核心模块。</target>
        </trans-unit>
        <trans-unit id="0370087df9b1f80bb3aab519d6395ef994f93a7f" translate="yes" xml:space="preserve">
          <source>is a module meta-data file pioneered by Module::Build and automatically generated as part of the 'distdir' target (and thus 'dist'). See &lt;a href=&quot;../makemaker#Module-Meta-Data&quot;&gt;Module Meta-Data in ExtUtils::MakeMaker&lt;/a&gt;.</source>
          <target state="translated">是由Module :: Build开创的模块元数据文件，并自动生成为&amp;ldquo; distdir&amp;rdquo;目标（因此也是&amp;ldquo; dist&amp;rdquo;）的一部分。请参阅&lt;a href=&quot;../makemaker#Module-Meta-Data&quot;&gt;ExtUtils :: MakeMaker中的模块元数据&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="db70b851cbc525bf8a455c66127e31660d8b2b7e" translate="yes" xml:space="preserve">
          <source>is a module meta-data file pioneered by Module::Build and automatically generated as part of the 'distdir' target (and thus 'dist'). See &lt;a href=&quot;ExtUtils::MakeMaker#Module-Meta-Data&quot;&gt;&quot;Module Meta-Data&quot; in ExtUtils::MakeMaker&lt;/a&gt;.</source>
          <target state="translated">是由Module :: Build率先开发的模块元数据文件，并自动生成为&amp;ldquo; distdir&amp;rdquo;目标（也就是&amp;ldquo; dist&amp;rdquo;）的一部分。请参见&lt;a href=&quot;ExtUtils::MakeMaker#Module-Meta-Data&quot;&gt;ExtUtils :: MakeMaker中的&amp;ldquo;模块元数据&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bb5615f55577e2ec9ec2ce738441f4f048adaa11" translate="yes" xml:space="preserve">
          <source>is a name for a character that has been documented but was never in any actual standard.</source>
          <target state="translated">是一个已经被记录在案但从未在任何实际标准中出现的字符的名称。</target>
        </trans-unit>
        <trans-unit id="a64ade54cc01a4b8ab579c03320b508d3b51d58b" translate="yes" xml:space="preserve">
          <source>is a name for the Unicode character, as specified in the Unicode standard. For instance, if we wanted to represent or match the astrological sign for the planet Mercury, we could use</source>
          <target state="translated">是Unicode标准中规定的Unicode字符的名称。例如,如果我们想表示或匹配水星的星象,我们可以使用</target>
        </trans-unit>
        <trans-unit id="2afe30cfa025d1ad86d16c1371192737e35d27e5" translate="yes" xml:space="preserve">
          <source>is a not-very-meaningful hex checksum), and run</source>
          <target state="translated">是一个不大的十六进制校验和),并运行</target>
        </trans-unit>
        <trans-unit id="7ecee365b5fa1c34d9a334997959668656ead3bc" translate="yes" xml:space="preserve">
          <source>is a number (or comma separated pair of numbers (see &lt;a href=&quot;perlreref#QUANTIFIERS&quot;&gt;&quot;QUANTIFIERS&quot; in perlreref&lt;/a&gt;), and is not related to this pragma.</source>
          <target state="translated">是一个数字（或逗号分隔的数字对（请参见&lt;a href=&quot;perlreref#QUANTIFIERS&quot;&gt;perlreref中的&amp;ldquo; QUANTIFIERS&amp;rdquo;&lt;/a&gt;）），并且与该编译指示无关。</target>
        </trans-unit>
        <trans-unit id="fc99a02b05cb226b1a73a69a63bbd1617e2aa050" translate="yes" xml:space="preserve">
          <source>is a number (or comma separated pair of numbers (see &lt;a href=&quot;perlreref#QUANTIFIERS&quot;&gt;QUANTIFIERS in perlreref&lt;/a&gt;), and is not related to this pragma.</source>
          <target state="translated">是一个数字（或逗号分隔的一对数字（请参见&lt;a href=&quot;perlreref#QUANTIFIERS&quot;&gt;perlreref中的QUANTIFIERS&lt;/a&gt;）），并且与该编译指示无关。</target>
        </trans-unit>
        <trans-unit id="4a38b8230fcc77e55d3807d6b5a4aaef15592a7b" translate="yes" xml:space="preserve">
          <source>is a number in hexadecimal that gives the code point that Unicode has assigned to the desired character. It is customary but not required to use leading zeros to pad the number to 4 digits. Thus &lt;code&gt;\N{U+0041}&lt;/code&gt; means &lt;code&gt;LATIN CAPITAL LETTER A&lt;/code&gt; , and you will rarely see it written without the two leading zeros. &lt;code&gt;\N{U+0041}&lt;/code&gt; means &quot;A&quot; even on EBCDIC machines (where the ordinal value of &quot;A&quot; is not 0x41).</source>
          <target state="translated">是十六进制数字，它给出了Unicode已分配给所需字符的代码点。这是惯例，但不需要使用前导零将数字填充到4位数字。因此， &lt;code&gt;\N{U+0041}&lt;/code&gt; 表示 &lt;code&gt;LATIN CAPITAL LETTER A&lt;/code&gt; ，并且您几乎看不到没有两个前导零的情况。 &lt;code&gt;\N{U+0041}&lt;/code&gt; 甚至在EBCDIC机器上（&amp;ldquo; A&amp;rdquo;的序号值不是0x41）也表示&amp;ldquo; A&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="b1b998d143c47f691f618008dbb37d7b65b50214" translate="yes" xml:space="preserve">
          <source>is a number in hexadecimal that gives the code point that Unicode has assigned to the desired character. It is customary but not required to use leading zeros to pad the number to 4 digits. Thus &lt;code&gt;\N{U+0041}&lt;/code&gt; means &lt;code&gt;LATIN CAPITAL LETTER A&lt;/code&gt;, and you will rarely see it written without the two leading zeros. &lt;code&gt;\N{U+0041}&lt;/code&gt; means &quot;A&quot; even on EBCDIC machines (where the ordinal value of &quot;A&quot; is not 0x41).</source>
          <target state="translated">是十六进制数字，给出Unicode已分配给所需字符的代码点。通常，但不需要使用前导零将数字填充到4位数字。因此， &lt;code&gt;\N{U+0041}&lt;/code&gt; 表示 &lt;code&gt;LATIN CAPITAL LETTER A&lt;/code&gt; ，并且您几乎看不到没有两个前导零的情况。 &lt;code&gt;\N{U+0041}&lt;/code&gt; 甚至在EBCDIC机器上（&amp;ldquo; A&amp;rdquo;的序号值不为0x41）也表示&amp;ldquo; A&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="9f403a1abf70edece08e0c80d52724deac025b2c" translate="yes" xml:space="preserve">
          <source>is a number.</source>
          <target state="translated">是一个数字。</target>
        </trans-unit>
        <trans-unit id="6d72cdfe9071b403de5c891b1782a09bdb8b7a77" translate="yes" xml:space="preserve">
          <source>is a numeric suffix), and other duplicate references to substructures within &lt;code&gt;$VAR&lt;/code&gt;</source>
          <target state="translated">是数字后缀），以及 &lt;code&gt;$VAR&lt;/code&gt; 结构的其他重复引用</target>
        </trans-unit>
        <trans-unit id="1caf25c615a60e7db02057f097ce6ef82bd0a961" translate="yes" xml:space="preserve">
          <source>is a numeric suffix. Will return a list of strings in a list context.</source>
          <target state="translated">是一个数字后缀。将返回一个列表上下文中的字符串列表。</target>
        </trans-unit>
        <trans-unit id="5450267d9d9934e68cfc043e8aa906ed9b69bfee" translate="yes" xml:space="preserve">
          <source>is a package name</source>
          <target state="translated">是一个包名</target>
        </trans-unit>
        <trans-unit id="a6b5bcbb54d5f0f80b9f08f8fbaf2ea009b106b5" translate="yes" xml:space="preserve">
          <source>is a pointer to the &lt;code&gt;entersub&lt;/code&gt; op, which may be replaced by the check function, and</source>
          <target state="translated">是指向 &lt;code&gt;entersub&lt;/code&gt; op 的指针，可以由检查功能代替，并且</target>
        </trans-unit>
        <trans-unit id="4e118cb5d55603d5852d3f949969f69eb230e7be" translate="yes" xml:space="preserve">
          <source>is a pointer to the C function that is to be added to that opcode's check chain, and</source>
          <target state="translated">是指向要添加到该操作码检查链的C函数的指针,而</target>
        </trans-unit>
        <trans-unit id="8f2f096033e5e09b15119337208eeca0b44d4133" translate="yes" xml:space="preserve">
          <source>is a pointer.</source>
          <target state="translated">是一个指针。</target>
        </trans-unit>
        <trans-unit id="dece3ef8f9c2a4f9d52c4c4c5d98bb83ab5bfede" translate="yes" xml:space="preserve">
          <source>is a positive (unsigned) decimal number of any length is an absolute reference to a capturing group.</source>
          <target state="translated">是一个任意长度的正(无符号)十进制数,是对捕获组的绝对引用。</target>
        </trans-unit>
        <trans-unit id="4edbb45f32f48cd1511fdfb6115d66414ec1fbfb" translate="yes" xml:space="preserve">
          <source>is a positive integer and</source>
          <target state="translated">是一个正整数,并且</target>
        </trans-unit>
        <trans-unit id="165f46eaddab8fb19180056f4de237d41d7417b2" translate="yes" xml:space="preserve">
          <source>is a precomputed hash of the key string, or zero if it has not been precomputed.</source>
          <target state="translated">是关键字符串的预计算哈希值,如果没有预计算,则为零。</target>
        </trans-unit>
        <trans-unit id="7069eb9cb165fec523e6308bce4b06c05a39cb8c" translate="yes" xml:space="preserve">
          <source>is a precomputed hash of the key string, or zero if it has not been precomputed. Returns a mortal scalar copy of the value associated with the key, or &lt;code&gt;&amp;amp;PL_sv_placeholder&lt;/code&gt; if there is no value associated with the key.</source>
          <target state="translated">是密钥字符串的预先计算的哈希值；如果尚未预先计算，则为零。返回与键关联的值的 &lt;code&gt;&amp;amp;PL_sv_placeholder&lt;/code&gt; 标量副本，如果没有与键关联的值，则返回＆PL_sv_placeholder。</target>
        </trans-unit>
        <trans-unit id="5da7fecbae6781f458a7622c0a97efc463b638d6" translate="yes" xml:space="preserve">
          <source>is a precomputed hash of the key string, or zero if it has not been precomputed. Returns a mortal scalar representing the value associated with the key, or &lt;code&gt;&amp;amp;PL_sv_placeholder&lt;/code&gt; if there is no value associated with the key.</source>
          <target state="translated">是密钥字符串的预先计算的哈希值；如果尚未预先计算，则为零。返回表示与键关联的值的凡间标量，如果没有与键关联的值，则返回 &lt;code&gt;&amp;amp;PL_sv_placeholder&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1da3d543f80049c240b6604f0deb64866fbd0017" translate="yes" xml:space="preserve">
          <source>is a preprocessing token indicating which entry to set. The type of</source>
          <target state="translated">是一个预处理标记,表示要设置哪个条目。的类型是</target>
        </trans-unit>
        <trans-unit id="d9012ca0d0ddb846debfb4395c94c7b45828744f" translate="yes" xml:space="preserve">
          <source>is a preprocessing token; the type of</source>
          <target state="translated">是一个预处理令牌。</target>
        </trans-unit>
        <trans-unit id="a7b7145b8e2f4d29a4eac42b3b05b4ed146ab52f" translate="yes" xml:space="preserve">
          <source>is a preprocessor token indicating which entry to disable.</source>
          <target state="translated">是一个预处理器标记,表示要禁用哪个条目。</target>
        </trans-unit>
        <trans-unit id="fbe9b4cd270e1fcc591a419f6eee763dc9c340d8" translate="yes" xml:space="preserve">
          <source>is a preprocessor token indicating which entry to enable. This will assert (under -DDEBUGGING) if the entry doesn't contain a valid pointer.</source>
          <target state="translated">是一个预处理器令牌,表示要启用哪个条目,如果条目中不包含有效的指针,将断言(在-DDEBUGGING下)。如果条目不包含有效的指针,这将断言(在-DDEBUGGING下)。</target>
        </trans-unit>
        <trans-unit id="ea5ce0a59c714754786219bdd5275aeb9e974151" translate="yes" xml:space="preserve">
          <source>is a preprocessor token indicating which entry to return. If the appropriate flag is not set this will return NULL. The type of the return value depends on which entry you ask for.</source>
          <target state="translated">是一个预处理器标记,表示要返回哪个条目。如果没有设置适当的标志,将返回NULL。返回值的类型取决于你要求的条目。</target>
        </trans-unit>
        <trans-unit id="38ca9aff9fa5b538144546880af0d48a59e862b4" translate="yes" xml:space="preserve">
          <source>is a profiling tool available in many Unix platforms which uses</source>
          <target state="translated">是一个在许多Unix平台上可用的剖析工具,它使用的是</target>
        </trans-unit>
        <trans-unit id="1bb170ad555937dc904a8fe5977af85e149cdc93" translate="yes" xml:space="preserve">
          <source>is a proprietary name.</source>
          <target state="translated">是一个专有名称。</target>
        </trans-unit>
        <trans-unit id="d57a2c635ead24e8cb41d2f62c0df6efe7ec2d7c" translate="yes" xml:space="preserve">
          <source>is a pure</source>
          <target state="translated">是一种纯</target>
        </trans-unit>
        <trans-unit id="c05fe253a73eaf5c843bec936db4e04771e23194" translate="yes" xml:space="preserve">
          <source>is a reference to a hash, keyed by name, values being the hashrefs in the</source>
          <target state="translated">是一个对哈希的引用,以名称为键,值为</target>
        </trans-unit>
        <trans-unit id="9987d31f4281509d0e0c9da093d035205a293365" translate="yes" xml:space="preserve">
          <source>is a regex that matches</source>
          <target state="translated">是一个与</target>
        </trans-unit>
        <trans-unit id="3dca816cf7d96a1f946c0cb0d43d7b15ae0dd1ff" translate="yes" xml:space="preserve">
          <source>is a sequence of digits (not starting with 0) whose value reflects the paren-number of the capture group to recurse to. &lt;code&gt;(?R)&lt;/code&gt; recurses to the beginning of the whole pattern. &lt;code&gt;(?0)&lt;/code&gt; is an alternate syntax for &lt;code&gt;(?R)&lt;/code&gt;. If</source>
          <target state="translated">是一个数字序列（不以0开头），其值反映了要递归到的捕获组的paren-number。 &lt;code&gt;(?R)&lt;/code&gt; 递归到整个模式的开头。 &lt;code&gt;(?0)&lt;/code&gt; 是 &lt;code&gt;(?R)&lt;/code&gt; 的替代语法。如果</target>
        </trans-unit>
        <trans-unit id="bba78d1bb88089201797aae5c1cab963b9424243" translate="yes" xml:space="preserve">
          <source>is a set of flags indicating the kind of pad entry required, which will be set in the value SV for the allocated pad entry:</source>
          <target state="translated">是一组标志,表示所需的焊盘条目种类,它将被设置在分配的焊盘条目的值SV中。</target>
        </trans-unit>
        <trans-unit id="91abdb027092f65d2c1008ca97d5e66bca8c6cd6" translate="yes" xml:space="preserve">
          <source>is a simple matter of writing:</source>
          <target state="translated">是一个简单的写作问题。</target>
        </trans-unit>
        <trans-unit id="60d1efccf0a496e682102a0ca23ae84351984489" translate="yes" xml:space="preserve">
          <source>is a single Han ideograph).</source>
          <target state="translated">是一个单一的汉族表意文字)。)</target>
        </trans-unit>
        <trans-unit id="2427dd871eedddf0b76e01de0b85b25091706d2b" translate="yes" xml:space="preserve">
          <source>is a single character, it is used as both the left and right quote. Otherwise, it is split in half, and the first half of the string is used as the left quote and the second is used as the right quote.</source>
          <target state="translated">是单个字符,它被用作左引号和右引号。否则,它被分成两半,字符串的前半部分用作左引号,后半部分用作右引号。</target>
        </trans-unit>
        <trans-unit id="7f0804766ef794c650875e5cd6577f8ca62d3808" translate="yes" xml:space="preserve">
          <source>is a single character, it is used as both the left and right quote; if</source>
          <target state="translated">是一个单字符,它同时作为左引号和右引号使用;如果</target>
        </trans-unit>
        <trans-unit id="40a10a304b7ecaf941deb45a42636381388f5a3b" translate="yes" xml:space="preserve">
          <source>is a single user-visible &lt;b&gt;character&lt;/b&gt;, which may in turn be several characters (&lt;b&gt;codepoints&lt;/b&gt;) long. For example, a carriage return plus a line feed is a single grapheme but two characters, while a &amp;ldquo;ȫ&amp;rdquo; is a single grapheme but one, two, or even three characters, depending on &lt;b&gt;normalization&lt;/b&gt;.</source>
          <target state="translated">是一个用户可见的&lt;b&gt;字符&lt;/b&gt;，该&lt;b&gt;字符&lt;/b&gt;可能又是几个字符（&lt;b&gt;代码点&lt;/b&gt;）。例如，回车加换行符是单个字形，但包含两个字符，而&amp;ldquo;ȫ&amp;rdquo;是单个字形，但包含一个，两个或什至三个字符，具体取决于&lt;b&gt;标准化&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="94a42c80703dda187cbf9d8dc635962500cae627" translate="yes" xml:space="preserve">
          <source>is a small utility that produces a diff between an extracted archive and an unextracted one. (Note that this utility requires the &lt;code&gt;Text::Diff&lt;/code&gt; module to function properly; this module isn't distributed with perl, but is available from the CPAN.)</source>
          <target state="translated">是一个小型实用程序，可在提取的存档和未提取的存档之间产生差异。（请注意，该实用程序需要 &lt;code&gt;Text::Diff&lt;/code&gt; 模块才能正常运行；该模块未随perl一起分发，但可从CPAN使用。）</target>
        </trans-unit>
        <trans-unit id="0317915857aed0b904067e1c9f03cf0d3827f112" translate="yes" xml:space="preserve">
          <source>is a space-separated list of the login names of the members of the group.</source>
          <target state="translated">是一个以空格分隔的组员登录名列表。</target>
        </trans-unit>
        <trans-unit id="94df1f18f1035b39bcc002ff85383c1903d30b19" translate="yes" xml:space="preserve">
          <source>is a special case of</source>
          <target state="translated">是一种特殊情况</target>
        </trans-unit>
        <trans-unit id="1e4503fa2022262b8888da1041ba3a96a491c954" translate="yes" xml:space="preserve">
          <source>is a strictly positive integer. There are exactly</source>
          <target state="translated">是一个严格的正整数。确切地说,有</target>
        </trans-unit>
        <trans-unit id="22b4d0a1706395e3dc8904448c577180ebc49623" translate="yes" xml:space="preserve">
          <source>is a string of three octal digits, matches the character whose coded character set value is</source>
          <target state="translated">是一串三位八进制数字,匹配的字符的编码字符集的值是</target>
        </trans-unit>
        <trans-unit id="3ea9714cb945b96bd24bf0684809e52895e5ec09" translate="yes" xml:space="preserve">
          <source>is a string of three octal digits, matches the character whose native code point is</source>
          <target state="translated">是三个八位数的字符串,匹配的字符的本机码点是</target>
        </trans-unit>
        <trans-unit id="9237185425d334578430573eb80cfb1d7070152b" translate="yes" xml:space="preserve">
          <source>is a string value that will be printed if the test fails. This should be some useful information about the test, pertaining to why it failed, and/or a description of the test. For example:</source>
          <target state="translated">是一个字符串值,如果测试失败将被打印出来。这应该是关于测试的一些有用的信息,与测试失败的原因有关,和/或对测试的描述。例如:</target>
        </trans-unit>
        <trans-unit id="f5d49daf4b07c85bc3e9c9ef9d8fffc8d3e3f192" translate="yes" xml:space="preserve">
          <source>is a string, it is interpreted as a method name - which may (in the usual way) be inherited from another class.</source>
          <target state="translated">是一个字符串,它被解释为一个方法名--它可以(以通常的方式)从另一个类继承。</target>
        </trans-unit>
        <trans-unit id="3586b680080fd5641b2ceb505391e64b157c6d54" translate="yes" xml:space="preserve">
          <source>is a string.</source>
          <target state="translated">是一个字符串。</target>
        </trans-unit>
        <trans-unit id="4ed0c07d66bccd475fa1593c086fc3fa98dec2eb" translate="yes" xml:space="preserve">
          <source>is a subclass of Pod::Simple.</source>
          <target state="translated">是Pod::Simple的一个子类。</target>
        </trans-unit>
        <trans-unit id="868ed78cc676ae7b87528dd846704e32cf6516cb" translate="yes" xml:space="preserve">
          <source>is a subroutine or value that is checked against the return value of an autodying subroutine. If the match returns true, &lt;code&gt;autodie&lt;/code&gt; considers the subroutine to have failed.</source>
          <target state="translated">是一个子例程或值，该子例程或值是根据自动染色子例程的返回值进行检查的。如果匹配返回true，则 &lt;code&gt;autodie&lt;/code&gt; 认为该子例程已失败。</target>
        </trans-unit>
        <trans-unit id="a739b0bee7707b7784d85fc52fdd39ee085947e3" translate="yes" xml:space="preserve">
          <source>is a subtype of String containing a Uniform Resource Locator or Identifier. [ This type is called URL and not URI for historical reasons. ]</source>
          <target state="translated">是字符串的一个子类型,包含统一资源定位器或标识符。[由于历史原因,这种类型被称为URL,而不是URI]。</target>
        </trans-unit>
        <trans-unit id="60db8b2929d3a460753d411e6826e4a95e771c98" translate="yes" xml:space="preserve">
          <source>is a subtype of String containing a value that describes the version number of packages or distributions. Restrictions on format are described in detail in the &lt;a href=&quot;#Version-Formats&quot;&gt;&quot;Version Formats&quot;&lt;/a&gt; section.</source>
          <target state="translated">是String的子类型，它包含一个值，该值描述软件包或发行版的版本号。在&lt;a href=&quot;#Version-Formats&quot;&gt;&amp;ldquo;版本格式&amp;rdquo;&lt;/a&gt;部分中详细描述了格式限制。</target>
        </trans-unit>
        <trans-unit id="847ea512688ea38e1971c671e71b46f24b757e70" translate="yes" xml:space="preserve">
          <source>is a subtype of String with a restricted set of values. Valid values are described in detail in the description of the &lt;a href=&quot;#license&quot;&gt;&quot;license&quot;&lt;/a&gt; field.</source>
          <target state="translated">是String的子类型，具有一组受限制的值。有效值在&lt;a href=&quot;#license&quot;&gt;&amp;ldquo;许可证&amp;rdquo;&lt;/a&gt;字段的描述中进行了详细描述。</target>
        </trans-unit>
        <trans-unit id="a29d5727df64748ea671973490b7365e5b44e3a6" translate="yes" xml:space="preserve">
          <source>is a syntax error. The &lt;code&gt;&lt;a href=&quot;Text::Balanced&quot;&gt;Text::Balanced&lt;/a&gt;&lt;/code&gt; module (standard as of v5.8, and from CPAN before then) is able to do this properly.</source>
          <target state="translated">是语法错误。该 &lt;code&gt;&lt;a href=&quot;Text::Balanced&quot;&gt;Text::Balanced&lt;/a&gt;&lt;/code&gt; 模块（标准为V5.8，并从CPAN在此之前）能够正确地做到这一点。</target>
        </trans-unit>
        <trans-unit id="0c003c50abcb5c5b0264289df696a4d0a86e8994" translate="yes" xml:space="preserve">
          <source>is a syntax error. The &lt;code&gt;&lt;a href=&quot;text/balanced&quot;&gt;Text::Balanced&lt;/a&gt;&lt;/code&gt; module (standard as of v5.8, and from CPAN before then) is able to do this properly.</source>
          <target state="translated">是语法错误。该 &lt;code&gt;&lt;a href=&quot;text/balanced&quot;&gt;Text::Balanced&lt;/a&gt;&lt;/code&gt; 模块（标准为V5.8，并从CPAN在此之前）能够正确地做到这一点。</target>
        </trans-unit>
        <trans-unit id="2876ee2f7992b444410c106ba7451d0d11add079" translate="yes" xml:space="preserve">
          <source>is a tar-like program, written in pure Perl.</source>
          <target state="translated">是一个用纯Perl编写的类似于tar的程序。</target>
        </trans-unit>
        <trans-unit id="789ff2609c0abca97040f597d9fb835495dbcb55" translate="yes" xml:space="preserve">
          <source>is a type.</source>
          <target state="translated">是一种类型。</target>
        </trans-unit>
        <trans-unit id="ffb330a620d2c555f748134ae75b69f801c184e1" translate="yes" xml:space="preserve">
          <source>is a utility to apply pattern matching to the contents of files in a tar archive.</source>
          <target state="translated">是一个实用程序,用于对 tar 存档中的文件内容进行模式匹配。</target>
        </trans-unit>
        <trans-unit id="5a8daa6bdde6d599bc39901138a55ee1a90e8f3c" translate="yes" xml:space="preserve">
          <source>is actually</source>
          <target state="translated">其实</target>
        </trans-unit>
        <trans-unit id="18ace8663c11e15c7ea7af0769d0b51ea8be5d9e" translate="yes" xml:space="preserve">
          <source>is actually a wrapper to call &lt;code&gt;nmake -f makefile.ce&lt;/code&gt; with appropriate parameters and it accepts extra parameters and forwards them to &lt;code&gt;nmake&lt;/code&gt; command as additional arguments. You should pass target this way.</source>
          <target state="translated">实际上是使用适当的参数调用 &lt;code&gt;nmake -f makefile.ce&lt;/code&gt; 的包装，它接受其他参数并将其作为附加参数转发给 &lt;code&gt;nmake&lt;/code&gt; 命令。您应该以这种方式传递目标。</target>
        </trans-unit>
        <trans-unit id="9fbb21c8780d25c2d62c14d525ba4493fed3f009" translate="yes" xml:space="preserve">
          <source>is actually nothing more than a link to the (executable)</source>
          <target state="translated">其实不过是一个链接到(可执行)的。</target>
        </trans-unit>
        <trans-unit id="5c143cd7b595ecaec566bd11322616c254969521" translate="yes" xml:space="preserve">
          <source>is adopted and becomes the name entry; it must already contain the name string.</source>
          <target state="translated">被采用,成为名称条目;它必须已经包含名称字符串。</target>
        </trans-unit>
        <trans-unit id="f0396ad875d583a36bd13679febb8581f2d969c0" translate="yes" xml:space="preserve">
          <source>is aggregate (eg</source>
          <target state="translated">是总和(例如</target>
        </trans-unit>
        <trans-unit id="bb8fcae34915a333a3718d00db6629dab07f6c3d" translate="yes" xml:space="preserve">
          <source>is aliased to a constant in the look</source>
          <target state="translated">被别名为一个常数,在look</target>
        </trans-unit>
        <trans-unit id="ef7ecbbb686b7c87fdcabe5489a7fa8b747a3327" translate="yes" xml:space="preserve">
          <source>is all lowercase, then the &lt;code&gt;CAPITAL&lt;/code&gt; variant is ignored, otherwise the &lt;code&gt;SMALL&lt;/code&gt; variant is ignored, and both</source>
          <target state="translated">都是小写字母，则忽略 &lt;code&gt;CAPITAL&lt;/code&gt; 变体，否则忽略 &lt;code&gt;SMALL&lt;/code&gt; 变体，并且两者</target>
        </trans-unit>
        <trans-unit id="33ba30df2d642bce79e623dcea9beec8c9b22ce4" translate="yes" xml:space="preserve">
          <source>is allowed so that &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt; &amp;amp;$AUTOLOAD&lt;/code&gt; would not break under stricture.</source>
          <target state="translated">允许，以便 &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt; &amp;amp;$AUTOLOAD&lt;/code&gt; 在严格的条件下不会中断。</target>
        </trans-unit>
        <trans-unit id="4cdc067dc710d461fdd2c6861818c6f34c71efa9" translate="yes" xml:space="preserve">
          <source>is allowed so that &lt;code&gt;goto &amp;amp;$AUTOLOAD&lt;/code&gt; would not break under stricture.</source>
          <target state="translated">允许，以便 &lt;code&gt;goto &amp;amp;$AUTOLOAD&lt;/code&gt; 在严格的条件下不会中断。</target>
        </trans-unit>
        <trans-unit id="46fdc8e9a838eea8febbedf9514625b10566e73a" translate="yes" xml:space="preserve">
          <source>is almost exactly like saying:</source>
          <target state="translated">几乎和说。</target>
        </trans-unit>
        <trans-unit id="0a5481b3e3d73092971b7b67886c83a33452d0d4" translate="yes" xml:space="preserve">
          <source>is already stored as</source>
          <target state="translated">已经存储为</target>
        </trans-unit>
        <trans-unit id="e58ea1e0a6e29d9ef790e92565bf38a0d8bec6a6" translate="yes" xml:space="preserve">
          <source>is already stored as native 8 bit, then this is a no-op. Can be used to make sure that the UTF-8 flag is off, e.g. when you want to make sure that the substr() or length() function works with the usually faster byte algorithm.</source>
          <target state="translated">已经被存储为原生8位,那么这就是一个无操作的选项。可以用来确保UTF-8标志是关闭的,例如,当你想确保substr()或length()函数与通常更快的字节算法一起工作时。</target>
        </trans-unit>
        <trans-unit id="3faa76071b10958d3afcc61878573dea5642f95e" translate="yes" xml:space="preserve">
          <source>is already upgraded, then this is a no-op. Returns the number of octets necessary to represent the string as UTF-8.</source>
          <target state="translated">已经升级了,那么这是一个无选项。返回将字符串表示为UTF-8所需的八位数。</target>
        </trans-unit>
        <trans-unit id="4ac0b49408848578e35ac08e94a2eb89181b4b85" translate="yes" xml:space="preserve">
          <source>is also checked if it exists in any of the given search directories. This ensures that e.g. &lt;a href=&quot;../perlfunc&quot;&gt;perlfunc&lt;/a&gt; is found.</source>
          <target state="translated">还检查它是否存在于任何给定的搜索目录中。这样可以确保找到例如&lt;a href=&quot;../perlfunc&quot;&gt;perlfunc&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7a6684732c17ab02c8bf39ac150678f88574a5f9" translate="yes" xml:space="preserve">
          <source>is also run unconditionally. But for</source>
          <target state="translated">也是无条件运行的。但对于</target>
        </trans-unit>
        <trans-unit id="4b33a9f079edd28e14aa0e8744a90b1c55a32145" translate="yes" xml:space="preserve">
          <source>is always interpreted exactly as specified. Otherwise, if the</source>
          <target state="translated">始终按照指定的方式解释。否则,如果</target>
        </trans-unit>
        <trans-unit id="91b6c84b698378cb0b4e7eec5833aff6a0180f6a" translate="yes" xml:space="preserve">
          <source>is always non-negative, so &lt;code&gt;[x,pi]&lt;/code&gt; is really &lt;code&gt;-x&lt;/code&gt; , a negative number) and the above definition states that</source>
          <target state="translated">始终为非负数，因此 &lt;code&gt;[x,pi]&lt;/code&gt; 实际上是 &lt;code&gt;-x&lt;/code&gt; ，为负数），以上定义指出：</target>
        </trans-unit>
        <trans-unit id="ba1a0dc069d14d01c6335c03928b7870d99b8981" translate="yes" xml:space="preserve">
          <source>is always non-negative, so &lt;code&gt;[x,pi]&lt;/code&gt; is really &lt;code&gt;-x&lt;/code&gt;, a negative number) and the above definition states that</source>
          <target state="translated">始终为非负数，因此 &lt;code&gt;[x,pi]&lt;/code&gt; 实际上是 &lt;code&gt;-x&lt;/code&gt; ，为负数），以上定义指出：</target>
        </trans-unit>
        <trans-unit id="2da11ce46f8ece756162bb2bd4909c483184c069" translate="yes" xml:space="preserve">
          <source>is always used instead of</source>
          <target state="translated">始终用于代替</target>
        </trans-unit>
        <trans-unit id="da8ff8262fd46aff0c9a7c13fdec487e6709caf8" translate="yes" xml:space="preserve">
          <source>is an &lt;code&gt;enum&lt;/code&gt; . If a reference an array is passed then the first element is used in place of the &lt;code&gt;#ifdef&lt;/code&gt; line, and the second element in place of the &lt;code&gt;#endif&lt;/code&gt; . This allows pre-processor constructions such as</source>
          <target state="translated">是一个 &lt;code&gt;enum&lt;/code&gt; 。如果引用了数组，则使用第一个元素代替 &lt;code&gt;#ifdef&lt;/code&gt; 行，使用第二个元素代替 &lt;code&gt;#endif&lt;/code&gt; 。这允许预处理器构造如</target>
        </trans-unit>
        <trans-unit id="730c466549e139cec03995ff694e7be2ffa126b6" translate="yes" xml:space="preserve">
          <source>is an &lt;code&gt;enum&lt;/code&gt;. If a reference an array is passed then the first element is used in place of the &lt;code&gt;#ifdef&lt;/code&gt; line, and the second element in place of the &lt;code&gt;#endif&lt;/code&gt;. This allows pre-processor constructions such as</source>
          <target state="translated">是一个 &lt;code&gt;enum&lt;/code&gt; 。如果引用传递数组，则使用第一个元素代替 &lt;code&gt;#ifdef&lt;/code&gt; 行，使用第二个元素代替 &lt;code&gt;#endif&lt;/code&gt; 。这样就可以进行预处理器构造，例如</target>
        </trans-unit>
        <trans-unit id="e407c507e8202b86ad93aac32e3005d18c456577" translate="yes" xml:space="preserve">
          <source>is an abstract entity. It is not bound to any particular integer width, especially not to the C language &lt;code&gt;char&lt;/code&gt; . Unicode is language-neutral and display-neutral: it does not encode the language of the text, and it does not generally define fonts or other graphical layout details. Unicode operates on characters and on text built from those characters.</source>
          <target state="translated">是一个抽象实体。它没有绑定到任何特定的整数宽度，尤其是没有绑定到C语言 &lt;code&gt;char&lt;/code&gt; 。Unicode与语言无关并且与显示无关：它不对文本的语言进行编码，并且通常不定义字体或其他图形布局细节。Unicode适用于字符以及由这些字符构建的文本。</target>
        </trans-unit>
        <trans-unit id="244ec96055486cd1e6ac53bee58930154b150817" translate="yes" xml:space="preserve">
          <source>is an abstract entity. It is not bound to any particular integer width, especially not to the C language &lt;code&gt;char&lt;/code&gt;. Unicode is language-neutral and display-neutral: it does not encode the language of the text, and it does not generally define fonts or other graphical layout details. Unicode operates on characters and on text built from those characters.</source>
          <target state="translated">是一个抽象实体。它没有绑定到任何特定的整数宽度，尤其是没有绑定到C语言 &lt;code&gt;char&lt;/code&gt; 。Unicode与语言无关并且与显示无关：它不对文本的语言进行编码，并且通常不定义字体或其他图形布局细节。Unicode适用于字符以及由这些字符构建的文本。</target>
        </trans-unit>
        <trans-unit id="5b08b5f167ddd80c250223169363f388a08ecb4a" translate="yes" xml:space="preserve">
          <source>is an alias of Encode::Encoder-&amp;gt;new(). This one is exported on demand.</source>
          <target state="translated">是Encode :: Encoder-&amp;gt; new（）的别名。这是按需出口。</target>
        </trans-unit>
        <trans-unit id="72d90656006280a94921d89ee421ad3991654b7e" translate="yes" xml:space="preserve">
          <source>is an alternate name for a character</source>
          <target state="translated">是一个字符的另一个名字</target>
        </trans-unit>
        <trans-unit id="25511ab968aa9c3ee55dc28d290edd3e8efa06cf" translate="yes" xml:space="preserve">
          <source>is an appropriate suffix for the platform.</source>
          <target state="translated">是平台的适当后缀。</target>
        </trans-unit>
        <trans-unit id="7c8e05cc3c89a308a1e47e52a0132a344b0c0867" translate="yes" xml:space="preserve">
          <source>is an array of all the layers destined for the &lt;code&gt;PerlIO *&lt;/code&gt; , and any arguments passed to them,</source>
          <target state="translated">是目的地为 &lt;code&gt;PerlIO *&lt;/code&gt; 的所有层的数组，以及传递给它们的所有参数，</target>
        </trans-unit>
        <trans-unit id="ce80bbc20aef2574bbd8e13f75fd5cee9aa06236" translate="yes" xml:space="preserve">
          <source>is an array of all the layers destined for the &lt;code&gt;PerlIO *&lt;/code&gt;, and any arguments passed to them,</source>
          <target state="translated">是目的地为 &lt;code&gt;PerlIO *&lt;/code&gt; 的所有层的数组，以及传递给它们的所有参数，</target>
        </trans-unit>
        <trans-unit id="0d1781574c62d77c8d78bcf079651e77516db6c7" translate="yes" xml:space="preserve">
          <source>is an executable image containing the main entry point for Perl, as well as some initialization code. It should be placed in a public directory, and made world executable. In order to run Perl with command line arguments, you should define a foreign command to invoke this image.</source>
          <target state="translated">是一个可执行的映像,包含了Perl的主要入口点,以及一些初始化代码。它应该放在一个公共目录中,并使其成为世界可执行文件。为了使用命令行参数运行Perl,你应该定义一个外来命令来调用这个映像。</target>
        </trans-unit>
        <trans-unit id="da2e040dacc739036641a30943ec92d4d35fb00f" translate="yes" xml:space="preserve">
          <source>is an executable image which contains all of the basic functionality of Perl, but cannot take advantage of Perl XS extensions and has a hard-wired list of library locations for loading pure-Perl modules. It is used extensively to build and test Perl and various extensions, but is not installed.</source>
          <target state="translated">是一个可执行映像,它包含了Perl的所有基本功能,但不能利用Perl XS的扩展,并且有一个硬连接的库位置列表,用于加载纯Perl模块。它被广泛用于构建和测试Perl和各种扩展,但并没有安装。</target>
        </trans-unit>
        <trans-unit id="295e5d231e93271cf2e87ff53177a2085d57895e" translate="yes" xml:space="preserve">
          <source>is an interface to &lt;a href=&quot;perldiag&quot;&gt;perldiag&lt;/a&gt; - paste in your error message to it, and it'll explain it for you.</source>
          <target state="translated">是&lt;a href=&quot;perldiag&quot;&gt;perldiag&lt;/a&gt;的接口-将错误消息粘贴到该接口，它将为您解释。</target>
        </trans-unit>
        <trans-unit id="03aebc26e2a8086c7faa0ae9cd0a6e9a5014db91" translate="yes" xml:space="preserve">
          <source>is an older tool, originally intended for the development of XS modules, which comes packaged with the Perl distribution.</source>
          <target state="translated">是一个较老的工具,最初是用于开发XS模块的,它与Perl发行版一起打包。</target>
        </trans-unit>
        <trans-unit id="c81e7450f22acc425e61712a1eaf2d872d794637" translate="yes" xml:space="preserve">
          <source>is an op that has been optimized away by perl. They're displayed with a sequence-number of '-', because they are not executed (they don't appear in previous example), they're printed here because they reflect the parse.</source>
          <target state="translated">是一个已经被perl优化掉的操作。它们显示的序列号是'-',因为它们没有被执行(在前面的例子中没有出现),在这里打印出来是因为它们反映了解析结果。</target>
        </trans-unit>
        <trans-unit id="9d5e6dcb345ffb1eb11d5479427e9235760d76bd" translate="yes" xml:space="preserve">
          <source>is an optional preconstructed &lt;code&gt;enterloop&lt;/code&gt; op to use in the loop; if it is null then a suitable op will be constructed automatically.</source>
          <target state="translated">是在循环中使用的可选的预构建 &lt;code&gt;enterloop&lt;/code&gt; op；如果为null，则将自动构造合适的op。</target>
        </trans-unit>
        <trans-unit id="d711f8883307162040e3cae93b6ed1acc9d5eafd" translate="yes" xml:space="preserve">
          <source>is an ordered collection of zero or more data elements. Elements of a List may be of mixed types.</source>
          <target state="translated">是一个零或多个数据元素的有序集合。列表中的元素可以是混合类型的。</target>
        </trans-unit>
        <trans-unit id="56c224901d33cdd590145274ca25177fc4be217e" translate="yes" xml:space="preserve">
          <source>is an unordered collection of zero or more data elements (&quot;values&quot;), indexed by associated String elements (&quot;keys&quot;). The Map's value elements may be of mixed types.</source>
          <target state="translated">是由零个或多个数据元素(&quot;值&quot;)组成的无序集合,由相关的字符串元素(&quot;键&quot;)进行索引。地图的值元素可以是混合类型的。</target>
        </trans-unit>
        <trans-unit id="acf27be8c27b564ea715f62509eb99be46454cb1" translate="yes" xml:space="preserve">
          <source>is another German-speaking magazine for Perl beginners (see &lt;a href=&quot;http://perl-zeitung.at.tf&quot;&gt;http://perl-zeitung.at.tf&lt;/a&gt; ).</source>
          <target state="translated">是另一本面向Perl初学者的德语杂志（请参阅&lt;a href=&quot;http://perl-zeitung.at.tf&quot;&gt;http://perl-zeitung.at.tf&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="aa85c7e6136b506253070be8f818e9007d9cfdee" translate="yes" xml:space="preserve">
          <source>is any integer.</source>
          <target state="translated">是任何整数。</target>
        </trans-unit>
        <trans-unit id="be3f59631fae1d8b0922b826e41efeee4ec99b4a" translate="yes" xml:space="preserve">
          <source>is any integer. atan2(0, 0) is undefined, and if the complex arguments are used for atan2(), a division by zero will happen if z1**2+z2**2 == 0.</source>
          <target state="translated">atan2(0,0)是未定义的,如果在atan2()中使用复数参数,如果z1**2+z2**2==0,就会发生除以零的情况。</target>
        </trans-unit>
        <trans-unit id="5783bc43b68f92b02879e3b2c43e9bdd7ca36459" translate="yes" xml:space="preserve">
          <source>is any of the above or an unblessed reference</source>
          <target state="translated">是以上任何一种,还是一种无缺的参考。</target>
        </trans-unit>
        <trans-unit id="317d13686e9281ab17689ef86bdab5a9aa318ad2" translate="yes" xml:space="preserve">
          <source>is applied to that sorted result. This means that under &lt;code&gt;/c&lt;/code&gt;, the order of the characters specified in</source>
          <target state="translated">应用于该排序结果。这意味着在 &lt;code&gt;/c&lt;/code&gt; 下，在中指定的字符顺序</target>
        </trans-unit>
        <trans-unit id="30e4914477a91ec9b94e791e584cbb65619eeac2" translate="yes" xml:space="preserve">
          <source>is as above. Note that it is possible for calls to &lt;code&gt;pre_&lt;/code&gt; and &lt;code&gt;post_end&lt;/code&gt; to nest, if there is something on the save stack that calls string eval.</source>
          <target state="translated">如上所述。请注意，有可能调用 &lt;code&gt;pre_&lt;/code&gt; 和 &lt;code&gt;post_end&lt;/code&gt; 筑巢，如果在保存堆栈的呼叫字符串的eval东西。</target>
        </trans-unit>
        <trans-unit id="36eb847ac03124888eb9b23e1494c3b3077980d8" translate="yes" xml:space="preserve">
          <source>is asking for trouble, since</source>
          <target state="translated">是自找麻烦,因为</target>
        </trans-unit>
        <trans-unit id="04172b80ff2f0946e1d3398db467faaad87811d2" translate="yes" xml:space="preserve">
          <source>is associated with the matched string, and is reset by each assignment to &lt;code&gt;pos()&lt;/code&gt;. Zero-length matches at the end of the previous match are ignored during &lt;code&gt;split&lt;/code&gt;.</source>
          <target state="translated">与匹配的字符串相关联，并通过对 &lt;code&gt;pos()&lt;/code&gt; 的每次赋值进行重置。在 &lt;code&gt;split&lt;/code&gt; 期间，将忽略先前匹配末尾的零长度匹配。</target>
        </trans-unit>
        <trans-unit id="df9814075a8a9994907bb7e926342f5cd51701bc" translate="yes" xml:space="preserve">
          <source>is associated with the matched string, and is reset by each assignment to pos(). Zero-length matches at the end of the previous match are ignored during &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">与匹配的字符串相关联，并通过对pos（）的每次赋值重置。在 &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; 期间，将忽略先前匹配末尾的零长度匹配。</target>
        </trans-unit>
        <trans-unit id="6941b5c781a0a521041b5c1dd8c16baced227b53" translate="yes" xml:space="preserve">
          <source>is at &lt;a href=&quot;http://sunsite.dk/RFC/rfc/rfc2277.html&quot;&gt;http://sunsite.dk/RFC/rfc/rfc2277.html&lt;/a&gt; -- much of it is just things of interest to protocol designers, but it explains some basic concepts, like the distinction between locales and language-tags.</source>
          <target state="translated">可以在&lt;a href=&quot;http://sunsite.dk/RFC/rfc/rfc2277.html&quot;&gt;http://sunsite.dk/RFC/rfc/rfc2277.html上找到&lt;/a&gt;，其中的大部分只是协议设计者所感兴趣的，但是它解释了一些基本概念，例如语言环境和语言标签之间的区别。</target>
        </trans-unit>
        <trans-unit id="3695a320bebe6f3e9a28f189a22d75b358931b52" translate="yes" xml:space="preserve">
          <source>is at least 3, &lt;code&gt;for&lt;/code&gt; loops will be translated into equivalent while loops with continue blocks; for instance</source>
          <target state="translated">至少为3， &lt;code&gt;for&lt;/code&gt; 循环将转换为具有while块的while循环；例如</target>
        </trans-unit>
        <trans-unit id="a932359d1eeb1e12e4da8b3878fa5ee714a70634" translate="yes" xml:space="preserve">
          <source>is at least 5, &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; declarations will be translated into &lt;code&gt;BEGIN&lt;/code&gt; blocks containing calls to &lt;code&gt;&lt;a href=&quot;../functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt;; for instance,</source>
          <target state="translated">至少为5， &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; 声明将转换为包含对 &lt;code&gt;&lt;a href=&quot;../functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;../functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; 的调用的 &lt;code&gt;BEGIN&lt;/code&gt; 块；例如，</target>
        </trans-unit>
        <trans-unit id="9da8b3c6a134447a38fd297ccb23081c69f63139" translate="yes" xml:space="preserve">
          <source>is at least 5, &lt;code&gt;use&lt;/code&gt; declarations will be translated into &lt;code&gt;BEGIN&lt;/code&gt; blocks containing calls to &lt;code&gt;require&lt;/code&gt; and &lt;code&gt;import&lt;/code&gt;; for instance,</source>
          <target state="translated">至少为5， &lt;code&gt;use&lt;/code&gt; 声明将转换为包含对 &lt;code&gt;require&lt;/code&gt; 和 &lt;code&gt;import&lt;/code&gt; 的调用的 &lt;code&gt;BEGIN&lt;/code&gt; 块；例如，</target>
        </trans-unit>
        <trans-unit id="c119f702a61cc525d7584c5eac4566db8774adc2" translate="yes" xml:space="preserve">
          <source>is at least 512kbyte (you can check this with: &lt;code&gt;stubedit cc1.exe&lt;/code&gt; ).</source>
          <target state="translated">至少为512kbyte（可以通过 &lt;code&gt;stubedit cc1.exe&lt;/code&gt; 进行检查）。</target>
        </trans-unit>
        <trans-unit id="7e7eb4200b2e2646337b92df307ee7adf0113e87" translate="yes" xml:space="preserve">
          <source>is at least 512kbyte (you can check this with: &lt;code&gt;stubedit cc1.exe&lt;/code&gt;).</source>
          <target state="translated">至少为512kbyte（您可以通过 &lt;code&gt;stubedit cc1.exe&lt;/code&gt; 进行检查）。</target>
        </trans-unit>
        <trans-unit id="f1edba509463471e4477759e68744d683b69a1f8" translate="yes" xml:space="preserve">
          <source>is at least 7, &lt;code&gt;if&lt;/code&gt; statements will be translated into equivalent expressions using &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;, &lt;code&gt;?:&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../functions/do&quot;&gt;do&lt;/a&gt; {}&lt;/code&gt; ; for instance</source>
          <target state="translated">&lt;code&gt;if&lt;/code&gt; 语句将使用 &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; ， &lt;code&gt;?:&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;../functions/do&quot;&gt;do&lt;/a&gt; {}&lt;/code&gt; 转换为等效表达式，则至少为7 。例如</target>
        </trans-unit>
        <trans-unit id="02a5555025ad94d4d1255893e3b20ce7e7977957" translate="yes" xml:space="preserve">
          <source>is at least 7, &lt;code&gt;if&lt;/code&gt; statements will be translated into equivalent expressions using &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;, &lt;code&gt;?:&lt;/code&gt; and &lt;code&gt;do {}&lt;/code&gt;; for instance</source>
          <target state="translated">&lt;code&gt;if&lt;/code&gt; 语句将使用 &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; ， &lt;code&gt;?:&lt;/code&gt; 和 &lt;code&gt;do {}&lt;/code&gt; 转换为等效表达式，则至少为7 。例如</target>
        </trans-unit>
        <trans-unit id="3ebcba5300e1807510d46aa9590e6c6a47b91326" translate="yes" xml:space="preserve">
          <source>is basically equivalent to</source>
          <target state="translated">基本等同于</target>
        </trans-unit>
        <trans-unit id="f2a370a954d86dc4cfe469a68c83fd68b9353b30" translate="yes" xml:space="preserve">
          <source>is basically equivalent to this:</source>
          <target state="translated">基本等同于此。</target>
        </trans-unit>
        <trans-unit id="ffc0ffcd2f24cb5977dd7a038df50d731e24c9b9" translate="yes" xml:space="preserve">
          <source>is basically equivalent to:</source>
          <target state="translated">基本等同于。</target>
        </trans-unit>
        <trans-unit id="efa6ff7d8cd2f270c8d3889d8b02bcd7a2b0379a" translate="yes" xml:space="preserve">
          <source>is be a hashref of types the constant function will return. In ExtUtils::Constant::XS this method is used to returns a hashref keyed IV NV PV SV to show which combination of pointers will be needed in the C argument list generated by C_constant_other_params_definition and C_constant_other_params</source>
          <target state="translated">是常量函数将返回的类型的哈希夫。在ExtUtils::Constant::XS中,这个方法用来返回一个键入IV NV PV SV的哈希夫,以显示在C_constant_other_params_definition和C_constant_other_params生成的C参数列表中,需要哪些指针组合。</target>
        </trans-unit>
        <trans-unit id="beed228bb7571f61ef1254143747172d93f725df" translate="yes" xml:space="preserve">
          <source>is because &quot;:&quot; often comes up in paths, like &lt;code&gt;&quot;c:/perl/lib&quot;&lt;/code&gt; .)</source>
          <target state="translated">是因为&amp;ldquo;：&amp;rdquo;通常出现在路径中，例如 &lt;code&gt;&quot;c:/perl/lib&quot;&lt;/code&gt; 。）</target>
        </trans-unit>
        <trans-unit id="6d996c8ba4429d0e067770485bcfc31b3975f083" translate="yes" xml:space="preserve">
          <source>is because &quot;:&quot; often comes up in paths, like &lt;code&gt;&quot;c:/perl/lib&quot;&lt;/code&gt;.)</source>
          <target state="translated">是因为&amp;ldquo;：&amp;rdquo;通常出现在路径中，例如 &lt;code&gt;&quot;c:/perl/lib&quot;&lt;/code&gt; 。）</target>
        </trans-unit>
        <trans-unit id="b00405322d6959fc080131bfe766ce7448452d15" translate="yes" xml:space="preserve">
          <source>is being compiled you may (depending on the operating system release) see an additional compiler flag being used: &lt;code&gt;-DNO_EFF_ONLY_OK&lt;/code&gt; . This is normal and refers to a feature that is relevant only if you use the &lt;code&gt;filetest&lt;/code&gt; pragma. In older releases of the operating system the feature was broken and the NO_EFF_ONLY_OK instructs Perl not to use the feature.</source>
          <target state="translated">正在编译中（可能取决于操作系统版本），您会看到正在使用其他编译器标志： &lt;code&gt;-DNO_EFF_ONLY_OK&lt;/code&gt; 。这是正常现象，是指仅在使用 &lt;code&gt;filetest&lt;/code&gt; 编译指示时才相关的功能。在较早的操作系统版本中，该功能已损坏，并且NO_EFF_ONLY_OK指示Perl不要使用该功能。</target>
        </trans-unit>
        <trans-unit id="464eb7b08c428be5bfac3ee33e35e1ca662f7aaf" translate="yes" xml:space="preserve">
          <source>is being compiled you may (depending on the operating system release) see an additional compiler flag being used: &lt;code&gt;-DNO_EFF_ONLY_OK&lt;/code&gt;. This is normal and refers to a feature that is relevant only if you use the &lt;code&gt;filetest&lt;/code&gt; pragma. In older releases of the operating system the feature was broken and the NO_EFF_ONLY_OK instructs Perl not to use the feature.</source>
          <target state="translated">正在编译中（取决于操作系统版本），您可能会看到正在使用的其他编译器标志： &lt;code&gt;-DNO_EFF_ONLY_OK&lt;/code&gt; 。这是正常现象，是指仅在使用 &lt;code&gt;filetest&lt;/code&gt; 编译指示时才相关的功能。在较早版本的操作系统中，该功能已损坏，并且NO_EFF_ONLY_OK指示Perl不要使用该功能。</target>
        </trans-unit>
        <trans-unit id="5a7b7ea63bcfd4e7e919847cbe05a532d715b559" translate="yes" xml:space="preserve">
          <source>is being used, false if not.</source>
          <target state="translated">正在使用,如果不使用则为false。</target>
        </trans-unit>
        <trans-unit id="46adb9ce162b644638d5f6ea5ff817ff62b057cb" translate="yes" xml:space="preserve">
          <source>is being used, the Perl subroutine is specified as a C string. In this case the subroutine name has been 'hard-wired' into the code.</source>
          <target state="translated">的时候,Perl 子程序被指定为 C 字符串。在这种情况下,子程序的名称已经被 &quot;硬连接 &quot;到代码中。</target>
        </trans-unit>
        <trans-unit id="9a77723c3a569791ba0daaaeffeea04df4037001" translate="yes" xml:space="preserve">
          <source>is better than</source>
          <target state="translated">胜过</target>
        </trans-unit>
        <trans-unit id="e0502ca9d9f39e4be66fbcd074913732a28c22e5" translate="yes" xml:space="preserve">
          <source>is bigger then the group level.</source>
          <target state="translated">大于组级。</target>
        </trans-unit>
        <trans-unit id="343082504b9a0655ece30e29661825f00250e1d3" translate="yes" xml:space="preserve">
          <source>is built using</source>
          <target state="translated">是用</target>
        </trans-unit>
        <trans-unit id="0854b2a1714cc6445ab7e4ddf8c2db426ce57837" translate="yes" xml:space="preserve">
          <source>is built,</source>
          <target state="translated">是建。</target>
        </trans-unit>
        <trans-unit id="cf600e83596fbcfa5796fa75f5e47d5ff1240570" translate="yes" xml:space="preserve">
          <source>is built. This is a single executable (without DLL), intended to run on Win32, and it will facilitate remaining build process; all binaries built after it are foreign and should not run locally.</source>
          <target state="translated">被构建。这是一个单一的可执行文件(不含DLL),打算在Win32上运行,它将方便剩余的构建过程;在它之后构建的所有二进制文件都是外来的,不应该在本地运行。</target>
        </trans-unit>
        <trans-unit id="5255e100819691e64fa9b4a02162efc6ad2a7971" translate="yes" xml:space="preserve">
          <source>is called</source>
          <target state="translated">叫做</target>
        </trans-unit>
        <trans-unit id="0226beba7cd0e825fb4e38da5573e429bdef0536" translate="yes" xml:space="preserve">
          <source>is called like this</source>
          <target state="translated">是这样叫的</target>
        </trans-unit>
        <trans-unit id="01efdfc207c40685a40505df8a8c6de053fd276d" translate="yes" xml:space="preserve">
          <source>is called thus</source>
          <target state="translated">所谓</target>
        </trans-unit>
        <trans-unit id="d6879492c8d67c42189022fa109e24255ed0a45a" translate="yes" xml:space="preserve">
          <source>is called, the interpreter's syntax parse tree and symbol tables are cleaned up, and global variables are reset. The second assignment to &lt;code&gt;PL_perl_destruct_level&lt;/code&gt; is needed because perl_construct resets it to &lt;code&gt;0&lt;/code&gt; .</source>
          <target state="translated">调用后，将清除解释程序的语法分析树和符号表，并重置全局变量。需要对 &lt;code&gt;PL_perl_destruct_level&lt;/code&gt; 进行第二次分配，因为perl_construct将其重置为 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5db303188b256fe4dd8a7266a5c48924e77af2d2" translate="yes" xml:space="preserve">
          <source>is called, the interpreter's syntax parse tree and symbol tables are cleaned up, and global variables are reset. The second assignment to &lt;code&gt;PL_perl_destruct_level&lt;/code&gt; is needed because perl_construct resets it to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">调用后，将清除解释程序的语法分析树和符号表，并重置全局变量。需要对 &lt;code&gt;PL_perl_destruct_level&lt;/code&gt; 进行第二次分配，因为perl_construct将其重置为 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0e0ec575b76e364e00644cc1e1456d4682a0ca12" translate="yes" xml:space="preserve">
          <source>is called. If</source>
          <target state="translated">被称为。如果</target>
        </trans-unit>
        <trans-unit id="ec4d308b2a7ec41f333fa7e39a6baafd8199536a" translate="yes" xml:space="preserve">
          <source>is completed, control reverts back to Perl more or less immediately.</source>
          <target state="translated">完成后,控制权或多或少会立即恢复到Perl。</target>
        </trans-unit>
        <trans-unit id="9808d99a48eef922543021cb1dd28efe676ff96c" translate="yes" xml:space="preserve">
          <source>is computed to be</source>
          <target state="translated">经计算为</target>
        </trans-unit>
        <trans-unit id="26d5193d0879df7801befc090d32f16dea7f62bc" translate="yes" xml:space="preserve">
          <source>is considerably slower.)</source>
          <target state="translated">要慢得多)。)</target>
        </trans-unit>
        <trans-unit id="7457b7ec85de496d14e61652a0482492c7d41031" translate="yes" xml:space="preserve">
          <source>is considered an octal escape (but something like &lt;code&gt;\18&lt;/code&gt; is the same as &lt;code&gt;\0018&lt;/code&gt; ; that is, the octal escape &lt;code&gt;&quot;\001&quot;&lt;/code&gt; followed by a literal digit &lt;code&gt;&quot;8&quot;&lt;/code&gt; ).</source>
          <target state="translated">被认为是八进制转义符（但 &lt;code&gt;\18&lt;/code&gt; 与 &lt;code&gt;\0018&lt;/code&gt; 相同；也就是说，八进制转义符 &lt;code&gt;&quot;\001&quot;&lt;/code&gt; 后跟文字数字 &lt;code&gt;&quot;8&quot;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="ad8330de67f8acc238b6f773e08a6315dceeee95" translate="yes" xml:space="preserve">
          <source>is considered an octal escape (but something like &lt;code&gt;\18&lt;/code&gt; is the same as &lt;code&gt;\0018&lt;/code&gt;; that is, the octal escape &lt;code&gt;&quot;\001&quot;&lt;/code&gt; followed by a literal digit &lt;code&gt;&quot;8&quot;&lt;/code&gt;).</source>
          <target state="translated">被认为是八进制转义（但是 &lt;code&gt;\18&lt;/code&gt; 与 &lt;code&gt;\0018&lt;/code&gt; 相同；也就是说，八进制转义 &lt;code&gt;&quot;\001&quot;&lt;/code&gt; 后跟文字数字 &lt;code&gt;&quot;8&quot;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="0c6c59d53731eb4d62ce728fe5d323178a21c69a" translate="yes" xml:space="preserve">
          <source>is consumed by this function and becomes part of the returned op tree.</source>
          <target state="translated">被这个函数消耗掉,成为返回的运算树的一部分。</target>
        </trans-unit>
        <trans-unit id="dc258a7b37a09c5a513defc7421c502e2dfc41b4" translate="yes" xml:space="preserve">
          <source>is copied by this function, which thus does not take ownership of any reference to it, and later changes to the scalar will not be reflected in the value visible in the &lt;code&gt;refcounted_he&lt;/code&gt; . Complex types of scalar will not be stored with referential integrity, but will be coerced to strings.</source>
          <target state="translated">由此函数复制，因此该函数不拥有对该函数的任何引用，以后对标量的更改将不会反映在 &lt;code&gt;refcounted_he&lt;/code&gt; 中可见的值中。标量的复杂类型将不会以引用完整性存储，而是将被强制为字符串。</target>
        </trans-unit>
        <trans-unit id="fbf2c8c541938c6077a677f840135912410a3a25" translate="yes" xml:space="preserve">
          <source>is copied by this function, which thus does not take ownership of any reference to it, and later changes to the scalar will not be reflected in the value visible in the cop hints hash. Complex types of scalar will not be stored with referential integrity, but will be coerced to strings.</source>
          <target state="translated">是由这个函数复制的,因此它不拥有对它的任何引用的所有权,以后对标量的改变将不会反映在cop hints hash中可见的值中。复杂类型的标量将不会以引用完整性的方式存储,而会被胁迫为字符串。</target>
        </trans-unit>
        <trans-unit id="e6a0410c63d8ae186d47eeff87c0c224285e2b42" translate="yes" xml:space="preserve">
          <source>is copied from</source>
          <target state="translated">是抄自</target>
        </trans-unit>
        <trans-unit id="30e3ef0b8ff559774ec5ed938edd84b1f238cb9b" translate="yes" xml:space="preserve">
          <source>is copied to a new hash, which has the &lt;code&gt;%^H&lt;/code&gt; -specific magic added to it. A pointer to the new hash is returned.</source>
          <target state="translated">被复制到新的哈希，其中添加了 &lt;code&gt;%^H&lt;/code&gt; 特定的魔术。返回指向新哈希的指针。</target>
        </trans-unit>
        <trans-unit id="747f6e21ce3daf93f93dd4472373d8de083a21bc" translate="yes" xml:space="preserve">
          <source>is created using &lt;code&gt;TMP&lt;/code&gt; or &lt;code&gt;TEMP&lt;/code&gt; environment variable, via &lt;code&gt;tempnam&lt;/code&gt; .</source>
          <target state="translated">通过 &lt;code&gt;TMP&lt;/code&gt; 或 &lt;code&gt;TEMP&lt;/code&gt; 环境变量通过 &lt;code&gt;tempnam&lt;/code&gt; 创建。</target>
        </trans-unit>
        <trans-unit id="398d506f770d418231dba5c8a5fedb1758f5234f" translate="yes" xml:space="preserve">
          <source>is created using &lt;code&gt;TMP&lt;/code&gt; or &lt;code&gt;TEMP&lt;/code&gt; environment variable, via &lt;code&gt;tempnam&lt;/code&gt;.</source>
          <target state="translated">通过 &lt;code&gt;TMP&lt;/code&gt; 或 &lt;code&gt;TEMP&lt;/code&gt; 环境变量通过 &lt;code&gt;tempnam&lt;/code&gt; 创建。</target>
        </trans-unit>
        <trans-unit id="0a61d9fe71ed76708341c4ca0d849865f0cdc3b4" translate="yes" xml:space="preserve">
          <source>is currently unused and ignored. In future it may be used to pass in information used to change the C indentation style used.] The best way to maintain consistency is to pass in a hash reference and let this function update it.</source>
          <target state="translated">目前未被使用和忽略。将来可能会用它来传递用于改变所使用的C语言缩进风格的信息]。保持一致性的最好方法是传入一个哈希引用,让这个函数更新它。</target>
        </trans-unit>
        <trans-unit id="9813a16c1f4cea91b9c2c265d663c4bd1846f7de" translate="yes" xml:space="preserve">
          <source>is currently unused and must be zero.</source>
          <target state="translated">目前未使用,必须为零。</target>
        </trans-unit>
        <trans-unit id="99e47089baf7bf5a97290b50bc31baafb3fecfdf" translate="yes" xml:space="preserve">
          <source>is currently unused and should always be 1.</source>
          <target state="translated">目前未使用,应始终为1。</target>
        </trans-unit>
        <trans-unit id="b13534eeb7da71e52262c98a8d8edf98962e5451" translate="yes" xml:space="preserve">
          <source>is data element containing a non-zero length sequence of Unicode characters, such as an ordinary Perl scalar that is not a reference.</source>
          <target state="translated">是包含一个非零长度的Unicode字符序列的数据元素,例如一个非引用的普通Perl标量。</target>
        </trans-unit>
        <trans-unit id="e342eb67743e357f6c505cac08784c21c4ae08f3" translate="yes" xml:space="preserve">
          <source>is dead simple: for given cross-architecture places in @INC a path where perl modules are, and right</source>
          <target state="translated">很简单:在@INC中给定的跨架构的地方,给出一个perl模块所在的路径,然后右击</target>
        </trans-unit>
        <trans-unit id="c705d4c7e0b74c44541c11aa71e1a8a9918a05c8" translate="yes" xml:space="preserve">
          <source>is defined as a fixed string that can appear at any point in a range of positions relative to the start of the match. For example,</source>
          <target state="translated">被定义为一个固定的字符串,可以出现在相对于比赛开始的位置范围内的任何一点。例如:</target>
        </trans-unit>
        <trans-unit id="ecb2ca25d83a1d9ea96055686343475429c34ffd" translate="yes" xml:space="preserve">
          <source>is defined as being a substring that must appear for the pattern to match. An</source>
          <target state="translated">被定义为一个子串,这个子串必须出现在模式匹配中。一个</target>
        </trans-unit>
        <trans-unit id="1da1038b5104f0f95e494512f9adf3b8d6beaf10" translate="yes" xml:space="preserve">
          <source>is defined, such as when running under GNV bash.</source>
          <target state="translated">的定义,例如在GNV bash下运行时。</target>
        </trans-unit>
        <trans-unit id="deb74afad5c0f4e11684626863d8cd55cb9bdeee" translate="yes" xml:space="preserve">
          <source>is defined, then it is used to avoid &lt;code&gt;memEQ&lt;/code&gt; for short names, or to generate a comment to highlight the position of the character in the &lt;code&gt;switch&lt;/code&gt; statement.</source>
          <target state="translated">定义后，它可用于避免使用短名称的 &lt;code&gt;memEQ&lt;/code&gt; 或生成注释以突出显示字符在 &lt;code&gt;switch&lt;/code&gt; 语句中的位置。</target>
        </trans-unit>
        <trans-unit id="991181f3df7a8cdf4f7168cba333bb5158ffb3d9" translate="yes" xml:space="preserve">
          <source>is delimited by bracketing quotes, the</source>
          <target state="translated">是由括号分隔的。</target>
        </trans-unit>
        <trans-unit id="0aab59497e397eb628c4ae4e65530bcc8256b5ef" translate="yes" xml:space="preserve">
          <source>is designed to test whether a particular code snippet has been compiled into an optree containing specified numbers of particular op types. This is good for testing whether optimisations which alter ops, such as converting an &lt;code&gt;aelem&lt;/code&gt; op into an &lt;code&gt;aelemfast&lt;/code&gt; op, are really doing that.</source>
          <target state="translated">用于测试特定代码段是否已编译到包含指定数量的特定op类型的optree中。这对于测试更改操作的优化（例如将 &lt;code&gt;aelem&lt;/code&gt; op转换为 &lt;code&gt;aelemfast&lt;/code&gt; op）是否确实在进行测试很有帮助。</target>
        </trans-unit>
        <trans-unit id="416051867536031c9c339fabd2716eb40c91334e" translate="yes" xml:space="preserve">
          <source>is directed to &lt;b&gt;STDOUT&lt;/b&gt;, unlike the pragma.</source>
          <target state="translated">定向到&lt;b&gt;STDOUT&lt;/b&gt;，与杂注不同。</target>
        </trans-unit>
        <trans-unit id="f389ed13e5398ffea8962d2d53f906f7253260a8" translate="yes" xml:space="preserve">
          <source>is divided by</source>
          <target state="translated">除以</target>
        </trans-unit>
        <trans-unit id="9553c90ac38c53c0080494be25343dc34ae22d57" translate="yes" xml:space="preserve">
          <source>is effectively</source>
          <target state="translated">实际上</target>
        </trans-unit>
        <trans-unit id="ece385103cfaafcb58ea7773e8fcd8d7dbbaada0" translate="yes" xml:space="preserve">
          <source>is empty (except under &lt;code&gt;/d&lt;/code&gt;) a copy of</source>
          <target state="translated">为空（ &lt;code&gt;/d&lt;/code&gt; 下除外）的副本</target>
        </trans-unit>
        <trans-unit id="7e04d3b78941f3fdeb0448ff431b96dba09b96ba" translate="yes" xml:space="preserve">
          <source>is empty and &lt;code&gt;/d&lt;/code&gt; is not specified,</source>
          <target state="translated">为空且未指定 &lt;code&gt;/d&lt;/code&gt; ，</target>
        </trans-unit>
        <trans-unit id="73b6c5e895538dd2917ae4f7b4e4274c97cfa6db" translate="yes" xml:space="preserve">
          <source>is empty if</source>
          <target state="translated">是空的,如果</target>
        </trans-unit>
        <trans-unit id="f685ee609385b240742c6531d09c2e99375d25df" translate="yes" xml:space="preserve">
          <source>is empty). Note that this describes the contents of</source>
          <target state="translated">为空)。)请注意,这描述了</target>
        </trans-unit>
        <trans-unit id="4e0004ed8dd4179b363112c078cd201c9c2882f0" translate="yes" xml:space="preserve">
          <source>is empty, in which case</source>
          <target state="translated">是空的,在这种情况下</target>
        </trans-unit>
        <trans-unit id="c70ff529c1678e6d6f8a86a860dfe6b90b65a6d1" translate="yes" xml:space="preserve">
          <source>is empty, or is exactly one code with at least four hexdigits which can be used as an alternative case folding when the calling program cannot cope with the fold being a sequence of multiple code points. If</source>
          <target state="translated">是空的,或者正好是一个至少有4个十六进制的代码,当调用程序无法应对折叠是一个多代码点的序列时,可以用它作为替代情况下的折叠。如果</target>
        </trans-unit>
        <trans-unit id="b82f1aa4dc1e11bb0291658e76619710db88ea38" translate="yes" xml:space="preserve">
          <source>is empty, the</source>
          <target state="translated">为空,则</target>
        </trans-unit>
        <trans-unit id="0e207ae2f0db5023f32cc9020e3ddf2c71a2b3cc" translate="yes" xml:space="preserve">
          <source>is equal to the C variable &lt;code&gt;name&lt;/code&gt; . If</source>
          <target state="translated">等于C变量 &lt;code&gt;name&lt;/code&gt; 。如果</target>
        </trans-unit>
        <trans-unit id="4c16753a387840a9ee2144b0a20669cf9bb9e296" translate="yes" xml:space="preserve">
          <source>is equal to the C variable &lt;code&gt;name&lt;/code&gt;. If</source>
          <target state="translated">等于C变量 &lt;code&gt;name&lt;/code&gt; 。如果</target>
        </trans-unit>
        <trans-unit id="1ec285792f84b2006557cfe7a76ef03e4dffbd46" translate="yes" xml:space="preserve">
          <source>is equivalent to</source>
          <target state="translated">相当于</target>
        </trans-unit>
        <trans-unit id="bc2b09c98193f0e5662cbf8b53fad07d5e736c01" translate="yes" xml:space="preserve">
          <source>is equivalent to the following Perl-like pseudo code:</source>
          <target state="translated">相当于以下类似Perl的伪代码。</target>
        </trans-unit>
        <trans-unit id="32a86d7541273833cc59233715d55c78fd068962" translate="yes" xml:space="preserve">
          <source>is equivalent to the more verbose</source>
          <target state="translated">相当于比较啰嗦的</target>
        </trans-unit>
        <trans-unit id="058019ba79ba28b16d81510fd9c7be6426e9a31b" translate="yes" xml:space="preserve">
          <source>is equivalent to the original path for all systems but VMS.</source>
          <target state="translated">相当于所有系统的原始路径,但VMS除外。</target>
        </trans-unit>
        <trans-unit id="8a799343991654a6923d4110f493e02c300d895c" translate="yes" xml:space="preserve">
          <source>is equivalent to this Perl code:</source>
          <target state="translated">相当于这段Perl代码。</target>
        </trans-unit>
        <trans-unit id="5cffe5ee80305aeabc52048276f1acf872533639" translate="yes" xml:space="preserve">
          <source>is equivalent to this:</source>
          <target state="translated">与此相当。</target>
        </trans-unit>
        <trans-unit id="18ab6ac7001b131bc4dc74bd619c612205dff372" translate="yes" xml:space="preserve">
          <source>is equivalent to:</source>
          <target state="translated">相当于:</target>
        </trans-unit>
        <trans-unit id="6c01ad008c1dcafb297a57e15952c3a221508e1b" translate="yes" xml:space="preserve">
          <source>is evaluated in &lt;b&gt;list context&lt;/b&gt; and interpolated into the list value.</source>
          <target state="translated">在&lt;b&gt;列表上下文中&lt;/b&gt;求值并插值到列表值中。</target>
        </trans-unit>
        <trans-unit id="304cd7bde8c8a066e9ddc11f5d17d8c69ab28cfc" translate="yes" xml:space="preserve">
          <source>is exactly equivalent to</source>
          <target state="translated">正好等于</target>
        </trans-unit>
        <trans-unit id="5868f5f052497727f3a75d03017159c24abf653a" translate="yes" xml:space="preserve">
          <source>is explicitly used, false if an external</source>
          <target state="translated">显式使用,如果是外部的</target>
        </trans-unit>
        <trans-unit id="9f231ca4498f5e3002502cfac3a6b5698c2f1ac4" translate="yes" xml:space="preserve">
          <source>is extracted and decoded for</source>
          <target state="translated">被提取并解码为</target>
        </trans-unit>
        <trans-unit id="c507073afeb7ab580d7916aa3aef230ed3bfced7" translate="yes" xml:space="preserve">
          <source>is false then &lt;code&gt;decode&lt;/code&gt; should make a &quot;best effort&quot; to convert the string - for example by using Unicode's &quot;\x{FFFD}&quot; as a replacement character.</source>
          <target state="translated">如果为false，则 &lt;code&gt;decode&lt;/code&gt; 应&amp;ldquo;尽最大努力&amp;rdquo;转换字符串-例如，使用Unicode的&amp;ldquo; \ x {FFFD}&amp;rdquo;作为替换字符。</target>
        </trans-unit>
        <trans-unit id="66ef51ab90721c11c96b9fd1112297ae5c3bc612" translate="yes" xml:space="preserve">
          <source>is false then &lt;code&gt;encode&lt;/code&gt; MUST make a &quot;best effort&quot; to convert the string - for example, by using a replacement character.</source>
          <target state="translated">为假，则 &lt;code&gt;encode&lt;/code&gt; 必须&amp;ldquo;尽最大努力&amp;rdquo;来转换字符串-例如，使用替换字符。</target>
        </trans-unit>
        <trans-unit id="85c8ac4c204bffb12a6b2e5264aea8475c7fa00f" translate="yes" xml:space="preserve">
          <source>is false unless the old $x happened to have the value &lt;code&gt;123&lt;/code&gt; .</source>
          <target state="translated">除非旧的$ x的值为 &lt;code&gt;123&lt;/code&gt; ,否则它为false 。</target>
        </trans-unit>
        <trans-unit id="afa41902fb53a4cb518998e8be7497e447dba317" translate="yes" xml:space="preserve">
          <source>is false unless the old $x happened to have the value &lt;code&gt;123&lt;/code&gt;.</source>
          <target state="translated">除非旧的$ x的值为 &lt;code&gt;123&lt;/code&gt; ,否则它为false 。</target>
        </trans-unit>
        <trans-unit id="7ae0382a345c84cdbea38f9aba32a26fd54a3d8e" translate="yes" xml:space="preserve">
          <source>is false, the</source>
          <target state="translated">为假,则</target>
        </trans-unit>
        <trans-unit id="59641b07163bb2532f0e133b6081758f8b622aff" translate="yes" xml:space="preserve">
          <source>is find. The returned object is what does the actual encoding or decoding.</source>
          <target state="translated">是查找。返回的对象是做实际编码或解码的。</target>
        </trans-unit>
        <trans-unit id="19134d8f14cf9efb45a39a603eab01b599496a36" translate="yes" xml:space="preserve">
          <source>is first looked up in the list of standard Unicode character names.</source>
          <target state="translated">首先在标准Unicode字符名列表中查找。</target>
        </trans-unit>
        <trans-unit id="71ab071f15c3ed133ad091358be7c7aa667be620" translate="yes" xml:space="preserve">
          <source>is first off that it's not well abstracted -- these ways of testing for grammatical number (as in the expressions like &lt;code&gt;foo == 1 ? singular_form : plural_form&lt;/code&gt;) should be abstracted to each language module, since how you get grammatical number is language-specific.</source>
          <target state="translated">首先，它没有被很好地抽象-语法数字的这些测试方法（如 &lt;code&gt;foo == 1 ? singular_form : plural_form&lt;/code&gt; ）应该抽象到每个语言模块，因为语法数字的获取方式是特定于语言的。</target>
        </trans-unit>
        <trans-unit id="28844e6770c7541b46bf5769a48ab89a32b3a220" translate="yes" xml:space="preserve">
          <source>is formatted as:</source>
          <target state="translated">格式为:</target>
        </trans-unit>
        <trans-unit id="a5bf27e9e737c2b17d8bda56643008ebf40f5d55" translate="yes" xml:space="preserve">
          <source>is found, &lt;code&gt;Z_OK&lt;/code&gt; is returned and &lt;code&gt;$buffer&lt;/code&gt; will be have all data up to the flush point removed. This can then be passed to the &lt;code&gt;deflate&lt;/code&gt; method.</source>
          <target state="translated">找到后，将返回 &lt;code&gt;Z_OK&lt;/code&gt; 并删除 &lt;code&gt;$buffer&lt;/code&gt; 直到刷新点的所有数据。然后可以将其传递给 &lt;code&gt;deflate&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="7b39d821e927a0c9d0363f2727cc57c75893ba1d" translate="yes" xml:space="preserve">
          <source>is found, &lt;code&gt;Z_OK&lt;/code&gt; is returned and &lt;code&gt;$input&lt;/code&gt; will be have all data up to the flush point removed. This data can then be passed to the &lt;code&gt;$i-&amp;gt;inflate&lt;/code&gt; method to be uncompressed.</source>
          <target state="translated">找到后，将返回 &lt;code&gt;Z_OK&lt;/code&gt; 并将删除 &lt;code&gt;$input&lt;/code&gt; 直到刷新点的所有数据。然后可以将此数据传递到 &lt;code&gt;$i-&amp;gt;inflate&lt;/code&gt; 方法以进行解压缩。</target>
        </trans-unit>
        <trans-unit id="4ad43a18a515527a341bfc4d3a6681a6fd357b43" translate="yes" xml:space="preserve">
          <source>is found, Perl will investigate its first line etc. The only hardwired limit on the recursion depth is implicit: there is a limit 4 on the number of additional arguments inserted before the actual arguments given to system(). In particular, if no additional arguments are specified on the &quot;magic&quot; first lines, then the limit on the depth is 4.</source>
          <target state="translated">被发现,Perl会调查它的第一行等。对递归深度的唯一硬性限制是隐含的:在给system()的实际参数之前插入的附加参数数量有一个限制4。特别是,如果在 &quot;神奇 &quot;的第一行没有指定附加参数,那么深度的限制就是4。</target>
        </trans-unit>
        <trans-unit id="1f1b1a9afa41f162ae23bb3a01d9f047e652e6e1" translate="yes" xml:space="preserve">
          <source>is four characters, the first two are used as the left quote and the second two as the right quote.</source>
          <target state="translated">是四个字符,前两个作为左引号,后两个作为右引号。</target>
        </trans-unit>
        <trans-unit id="6f9a16a4dd16d307d04182c223f1289cfcd07c67" translate="yes" xml:space="preserve">
          <source>is generated automatically from</source>
          <target state="translated">是自动生成的</target>
        </trans-unit>
        <trans-unit id="bd2a87dbabce881cfa0ac191619b95b7f30ff0e2" translate="yes" xml:space="preserve">
          <source>is generated by &lt;code&gt;ExtUtils::Miniperl&lt;/code&gt; from</source>
          <target state="translated">由 &lt;code&gt;ExtUtils::Miniperl&lt;/code&gt; 从</target>
        </trans-unit>
        <trans-unit id="97061dcc49398ed7873f16a75d7351365d5bd949" translate="yes" xml:space="preserve">
          <source>is greater than 10, the digit for 11 will be 'a', and so on. If</source>
          <target state="translated">大于10,那么11的数字就是'a',以此类推。如果</target>
        </trans-unit>
        <trans-unit id="c6cff08bd14f0967385302adf53b41c3a3d439b0" translate="yes" xml:space="preserve">
          <source>is greater than 36, the digit for 37 will be 'A', and so on until 62. Values greater than 62 are not currently supported. The default is 36.</source>
          <target state="translated">大于36,37的数字将是'A',以此类推,直到62。目前不支持大于62的值。默认值是36。</target>
        </trans-unit>
        <trans-unit id="ffe49080789a404d2d720870ea3296af02ff6123" translate="yes" xml:space="preserve">
          <source>is greater than zero then it gives the number of arguments passed to &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt;, otherwise it will be 1 if for example &lt;code&gt;PerlIO_open&lt;/code&gt; was called. In simple cases SvPV_nolen(*args) is the pathname to open.</source>
          <target state="translated">大于零，则给出传递给 &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; 的参数数量，否则，例如，如果调用 &lt;code&gt;PerlIO_open&lt;/code&gt; ,则为 1 。在简单情况下，SvPV_nolen（* args）是打开的路径名。</target>
        </trans-unit>
        <trans-unit id="4754093f3c6b75d18a478a919f071927e6c272e9" translate="yes" xml:space="preserve">
          <source>is greater than zero then it gives the number of arguments passed to &lt;code&gt;open&lt;/code&gt;, otherwise it will be 1 if for example &lt;code&gt;PerlIO_open&lt;/code&gt; was called. In simple cases SvPV_nolen(*args) is the pathname to open.</source>
          <target state="translated">大于零，则给出传递给 &lt;code&gt;open&lt;/code&gt; 的参数数量，否则，例如，如果调用 &lt;code&gt;PerlIO_open&lt;/code&gt; ,则为1 。在简单情况下，SvPV_nolen（* args）是要打开的路径名。</target>
        </trans-unit>
        <trans-unit id="75509d044fa7a263b125756d4990f3fd09e0200e" translate="yes" xml:space="preserve">
          <source>is heavily misused. See &lt;a href=&quot;#Microsoft-related-naming-mess&quot;&gt;&quot;Microsoft-related naming mess&quot;&lt;/a&gt; for details.</source>
          <target state="translated">被严重滥用。有关详细信息，请参见&lt;a href=&quot;#Microsoft-related-naming-mess&quot;&gt;&amp;ldquo; Microsoft相关的命名混乱&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b7ead90991363b6d52dd34fbbeb13fb170062d0a" translate="yes" xml:space="preserve">
          <source>is held as bytes (both these states are 'consistent'). Main reason for this routine is to allow Perl's test suite to check that operations have left strings in a consistent state. You most probably want to use utf8::is_utf8() instead.</source>
          <target state="translated">是以字节的形式保存的(这两种状态都是 &quot;一致的&quot;)。这个例程的主要原因是允许Perl的测试套件检查操作是否使字符串处于一致状态。你很可能想用utf8::is_utf8()来代替。</target>
        </trans-unit>
        <trans-unit id="99859ea1e45df4af01935d0ae5ee93c488cd99e6" translate="yes" xml:space="preserve">
          <source>is held as bytes (both these states are 'consistent'). The main reason for this routine is to allow Perl's test suite to check that operations have left strings in a consistent state.</source>
          <target state="translated">是以字节的形式保存的(这两种状态都是 &quot;一致的&quot;)。这个例程的主要原因是允许Perl的测试套件检查操作是否使字符串处于一致状态。</target>
        </trans-unit>
        <trans-unit id="f6524de4ede507c0f25877cf9853d0bde2075a2e" translate="yes" xml:space="preserve">
          <source>is hex, as in &lt;code&gt;E&amp;lt;0x201E&amp;gt;&lt;/code&gt; . A leading &quot;0&quot; means that</source>
          <target state="translated">是十六进制的，如 &lt;code&gt;E&amp;lt;0x201E&amp;gt;&lt;/code&gt; 。前导&amp;ldquo; 0&amp;rdquo;表示</target>
        </trans-unit>
        <trans-unit id="100c67db2ce9de6539d13fc595494ff5673e34f7" translate="yes" xml:space="preserve">
          <source>is hex, as in &lt;code&gt;E&amp;lt;0x201E&amp;gt;&lt;/code&gt;. A leading &quot;0&quot; means that</source>
          <target state="translated">是十六进制的，如 &lt;code&gt;E&amp;lt;0x201E&amp;gt;&lt;/code&gt; 。前导&amp;ldquo; 0&amp;rdquo;表示</target>
        </trans-unit>
        <trans-unit id="ee2f8650f57b54260f06fc232faca4874614507a" translate="yes" xml:space="preserve">
          <source>is identical to</source>
          <target state="translated">与</target>
        </trans-unit>
        <trans-unit id="33ce292cada47d9b4f97fc17d4c509c144c20fea" translate="yes" xml:space="preserve">
          <source>is ignored. Note that Perl closes the comment as soon as it sees a &lt;code&gt;&quot;)&quot;&lt;/code&gt;, so there is no way to put a literal &lt;code&gt;&quot;)&quot;&lt;/code&gt; in the comment. The pattern's closing delimiter must be escaped by a backslash if it appears in the comment.</source>
          <target state="translated">被忽略。请注意，一旦Perl看到 &lt;code&gt;&quot;)&quot;&lt;/code&gt; ，它将立即关闭注释，因此无法在注释中放置文字 &lt;code&gt;&quot;)&quot;&lt;/code&gt; 。如果模式的结束定界符出现在注释中，则必须使用反斜杠对其进行转义。</target>
        </trans-unit>
        <trans-unit id="22ee8461739b14ea02f3b9c0b9c9eb44d2a1409e" translate="yes" xml:space="preserve">
          <source>is implemented as a Perl module. The structure of the module can take one of two broadly similar formats. To distinguish between them, the first will be referred to as</source>
          <target state="translated">是以Perl模块的形式实现的。模块的结构可以采用两种大致相似的格式之一。为了区分它们,第一种形式将被称为</target>
        </trans-unit>
        <trans-unit id="07c03a77d7b0f8f284ba5164822d35886ef6b131" translate="yes" xml:space="preserve">
          <source>is implemented using the Perl module &lt;a href=&quot;Digest::SHA&quot;&gt;Digest::SHA&lt;/a&gt;.</source>
          <target state="translated">使用Perl模块&lt;a href=&quot;Digest::SHA&quot;&gt;Digest :: SHA实现&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b176c796440a7e55c89af58d299f53bc936cfeff" translate="yes" xml:space="preserve">
          <source>is implemented using the Perl module &lt;a href=&quot;digest/sha&quot;&gt;Digest::SHA&lt;/a&gt; or &lt;a href=&quot;http://search.cpan.org/perldoc/Digest::SHA::PurePerl&quot;&gt;Digest::SHA::PurePerl&lt;/a&gt;.</source>
          <target state="translated">使用Perl模块&lt;a href=&quot;digest/sha&quot;&gt;Digest :: SHA&lt;/a&gt;或&lt;a href=&quot;http://search.cpan.org/perldoc/Digest::SHA::PurePerl&quot;&gt;Digest :: SHA :: PurePerl实现&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b1e051efb59784127a6ed01a9c76c742681c671e" translate="yes" xml:space="preserve">
          <source>is implemented, but bugs remain in &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr//i&lt;/a&gt;&lt;/code&gt; with them, mostly fixed by 5.14, and essentially entirely by 5.18.</source>
          <target state="translated">已实现，但bug仍保留在 &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr//i&lt;/a&gt;&lt;/code&gt; ，大部分已由5.14修复，而基本上已由5.18完全修复。</target>
        </trans-unit>
        <trans-unit id="70175b089d3ce91e22a54a3705d3023f43c9dad9" translate="yes" xml:space="preserve">
          <source>is implemented, but bugs remain in &lt;code&gt;qr//i&lt;/code&gt; with them, mostly fixed by 5.14, and essentially entirely by 5.18.</source>
          <target state="translated">已实现，但bug仍保留在 &lt;code&gt;qr//i&lt;/code&gt; ，大部分已由5.14修复，而基本上已由5.18完全修复。</target>
        </trans-unit>
        <trans-unit id="608c8bcda4c8d3f4fd99afdca20fc7d478aadc35" translate="yes" xml:space="preserve">
          <source>is implied if neither a template nor a directory are supplied.</source>
          <target state="translated">如果既没有提供模板,也没有提供目录,则隐含了这个意思。</target>
        </trans-unit>
        <trans-unit id="bcc50f34cae614239688b16d2d430f20f6fd5c0f" translate="yes" xml:space="preserve">
          <source>is in a consistent state regarding UTF-8. Will return true if it is well-formed Perl extended UTF-8 and has the UTF-8 flag on &lt;b&gt;or&lt;/b&gt; if</source>
          <target state="translated">关于UTF-8处于一致状态。如果做得好的话，形成的Perl扩展UTF-8和具有UTF-8标志上会返回true&lt;b&gt;或者&lt;/b&gt;如果</target>
        </trans-unit>
        <trans-unit id="029ccc41ee21c1341d1578997e21239d4d69dd57" translate="yes" xml:space="preserve">
          <source>is in a consistent state regarding UTF-8. Will return true if it is well-formed UTF-8 and has the UTF-8 flag on &lt;b&gt;or&lt;/b&gt; if</source>
          <target state="translated">关于UTF-8处于一致状态。将返回true，如果它是格式良好的UTF-8和具有UTF-8标志上&lt;b&gt;或&lt;/b&gt;如果</target>
        </trans-unit>
        <trans-unit id="6da1d29c95b983c26f31a22e5a9c05d88563966c" translate="yes" xml:space="preserve">
          <source>is in effect:</source>
          <target state="translated">是有效的。</target>
        </trans-unit>
        <trans-unit id="fca20ec285ed27cbaefdb07ee844b5ac0358c904" translate="yes" xml:space="preserve">
          <source>is in fact</source>
          <target state="translated">其实</target>
        </trans-unit>
        <trans-unit id="e384cbeffbac9cd924ef4dc73d622e1a5322584a" translate="yes" xml:space="preserve">
          <source>is in the customary packed binary format used for Perl strings.</source>
          <target state="translated">是Perl字符串惯用的打包二进制格式。</target>
        </trans-unit>
        <trans-unit id="cac7c1be39dca233019b8ffda50806e1b4a70009" translate="yes" xml:space="preserve">
          <source>is included. Other possible values include</source>
          <target state="translated">包括。其他可能的值包括</target>
        </trans-unit>
        <trans-unit id="5138f4117c88d0c0de8e325485d990c34725fde1" translate="yes" xml:space="preserve">
          <source>is intended to rhyme with</source>
          <target state="translated">韵味</target>
        </trans-unit>
        <trans-unit id="18bc197f96cca45c02a3aaa837ac2696dd0f97ab" translate="yes" xml:space="preserve">
          <source>is interpolated in the usual way. Something like &lt;code&gt;&quot;\Q\\E&quot;&lt;/code&gt; has no &lt;code&gt;\E&lt;/code&gt; inside. Instead, it has &lt;code&gt;\Q&lt;/code&gt; , &lt;code&gt;\\&lt;/code&gt; , and &lt;code&gt;E&lt;/code&gt; , so the result is the same as for &lt;code&gt;&quot;\\\\E&quot;&lt;/code&gt; . As a general rule, backslashes between &lt;code&gt;\Q&lt;/code&gt; and &lt;code&gt;\E&lt;/code&gt; may lead to counterintuitive results. So, &lt;code&gt;&quot;\Q\t\E&quot;&lt;/code&gt; is converted to &lt;code&gt;&lt;a href=&quot;functions/quotemeta&quot;&gt;quotemeta(&quot;\t&quot;)&lt;/a&gt;&lt;/code&gt;, which is the same as &lt;code&gt;&quot;\\\t&quot;&lt;/code&gt; (since TAB is not alphanumeric). Note also that:</source>
          <target state="translated">以通常的方式插值。像 &lt;code&gt;&quot;\Q\\E&quot;&lt;/code&gt; 类的东西里面没有 &lt;code&gt;\E&lt;/code&gt; 相反，它具有 &lt;code&gt;\Q&lt;/code&gt; ， &lt;code&gt;\\&lt;/code&gt; 和 &lt;code&gt;E&lt;/code&gt; ，因此结果与 &lt;code&gt;&quot;\\\\E&quot;&lt;/code&gt; 。通常， &lt;code&gt;\Q&lt;/code&gt; 和 &lt;code&gt;\E&lt;/code&gt; 之间的反斜杠可能会导致违反直觉的结果。因此， &lt;code&gt;&quot;\Q\t\E&quot;&lt;/code&gt; 被转换为 &lt;code&gt;&lt;a href=&quot;functions/quotemeta&quot;&gt;quotemeta(&quot;\t&quot;)&lt;/a&gt;&lt;/code&gt; ，它与 &lt;code&gt;&quot;\\\t&quot;&lt;/code&gt; 相同（因为TAB不是字母数字）。另请注意：</target>
        </trans-unit>
        <trans-unit id="31fb03493019bfae8aa64999e7f6f61ce490e803" translate="yes" xml:space="preserve">
          <source>is interpolated in the usual way. Something like &lt;code&gt;&quot;\Q\\E&quot;&lt;/code&gt; has no &lt;code&gt;\E&lt;/code&gt; inside. Instead, it has &lt;code&gt;\Q&lt;/code&gt;, &lt;code&gt;\\&lt;/code&gt;, and &lt;code&gt;E&lt;/code&gt;, so the result is the same as for &lt;code&gt;&quot;\\\\E&quot;&lt;/code&gt;. As a general rule, backslashes between &lt;code&gt;\Q&lt;/code&gt; and &lt;code&gt;\E&lt;/code&gt; may lead to counterintuitive results. So, &lt;code&gt;&quot;\Q\t\E&quot;&lt;/code&gt; is converted to &lt;code&gt;quotemeta(&quot;\t&quot;)&lt;/code&gt;, which is the same as &lt;code&gt;&quot;\\\t&quot;&lt;/code&gt; (since TAB is not alphanumeric). Note also that:</source>
          <target state="translated">以通常的方式进行插值。像 &lt;code&gt;&quot;\Q\\E&quot;&lt;/code&gt; 类的东西里面没有 &lt;code&gt;\E&lt;/code&gt; 相反，它具有 &lt;code&gt;\Q&lt;/code&gt; ， &lt;code&gt;\\&lt;/code&gt; 和 &lt;code&gt;E&lt;/code&gt; ，因此结果与 &lt;code&gt;&quot;\\\\E&quot;&lt;/code&gt; 。通常， &lt;code&gt;\Q&lt;/code&gt; 和 &lt;code&gt;\E&lt;/code&gt; 之间的反斜杠可能会导致违反直觉的结果。因此， &lt;code&gt;&quot;\Q\t\E&quot;&lt;/code&gt; 被转换为 &lt;code&gt;quotemeta(&quot;\t&quot;)&lt;/code&gt; ，它与 &lt;code&gt;&quot;\\\t&quot;&lt;/code&gt; 相同（因为TAB不是字母数字）。另请注意：</target>
        </trans-unit>
        <trans-unit id="77a8d3d60ed8be450c9ffcc1d60689ed94aa9704" translate="yes" xml:space="preserve">
          <source>is interpolated the same way as</source>
          <target state="translated">是插值的方式与</target>
        </trans-unit>
        <trans-unit id="6645e23e420237e998b6d2cedfb1dc6622827f9f" translate="yes" xml:space="preserve">
          <source>is interpreted as being in decimal, as in &lt;code&gt;E&amp;lt;181&amp;gt;&lt;/code&gt; .</source>
          <target state="translated">与 &lt;code&gt;E&amp;lt;181&amp;gt;&lt;/code&gt; 一样，被解释为十进制。</target>
        </trans-unit>
        <trans-unit id="98bf4bfd28f59f24101e071587a5c8dd53b50979" translate="yes" xml:space="preserve">
          <source>is interpreted as being in decimal, as in &lt;code&gt;E&amp;lt;181&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">像 &lt;code&gt;E&amp;lt;181&amp;gt;&lt;/code&gt; 那样被解释为十进制。</target>
        </trans-unit>
        <trans-unit id="22c75022beb252e282558c71e996793c6d980a55" translate="yes" xml:space="preserve">
          <source>is invalid as</source>
          <target state="translated">无效,因为</target>
        </trans-unit>
        <trans-unit id="978c80f8c20bca3e22e221d3be8dab86be1b9e67" translate="yes" xml:space="preserve">
          <source>is invalid as extended UTF-8, returns false; otherwise returns true.</source>
          <target state="translated">作为扩展UTF-8无效,返回false;否则返回true。</target>
        </trans-unit>
        <trans-unit id="e8ffd60ca890c4ec9f93077049a6c161e0914d97" translate="yes" xml:space="preserve">
          <source>is invoked to create right</source>
          <target state="translated">被调用来创建权利</target>
        </trans-unit>
        <trans-unit id="29af8a8fa79689fd5e71210eb1c3ba564cdffa85" translate="yes" xml:space="preserve">
          <source>is invoked, which in turn steps in</source>
          <target state="translated">被调用,而后者又会介入</target>
        </trans-unit>
        <trans-unit id="8024fe02e8834fd7dfaf462c19e06613de45d183" translate="yes" xml:space="preserve">
          <source>is irrelevant. This can lead to different results on EBCDIC systems if</source>
          <target state="translated">是不相关的。这可能导致EBCDIC系统的不同结果,如果</target>
        </trans-unit>
        <trans-unit id="cfee822da79f87e0f9bf29a70b1f7e186da8af5d" translate="yes" xml:space="preserve">
          <source>is just a funny way to write</source>
          <target state="translated">只是一种有趣的写法</target>
        </trans-unit>
        <trans-unit id="b044360009bd48fa7435baabf472b05cb3e2087e" translate="yes" xml:space="preserve">
          <source>is just an alias for</source>
          <target state="translated">的别称。</target>
        </trans-unit>
        <trans-unit id="a1bbe39e9abe31cecf6dbbe9e345b36bee6a8e2e" translate="yes" xml:space="preserve">
          <source>is just one code point, then</source>
          <target state="translated">只是一个代码点,那么</target>
        </trans-unit>
        <trans-unit id="fb4747d98d1d42af6b094401a12cd8de28b86f5d" translate="yes" xml:space="preserve">
          <source>is kept open without a name while the output is redirected to a new file with the original</source>
          <target state="translated">在没有名字的情况下被打开,而输出则被重定向到一个新的文件,并带有原来的</target>
        </trans-unit>
        <trans-unit id="f2943b59aed5e708de53a3b73d4947169b635ec4" translate="yes" xml:space="preserve">
          <source>is largely like</source>
          <target state="translated">大致如此</target>
        </trans-unit>
        <trans-unit id="9188ab140ad2e7ca45c0eacb2137ae4084f8e251" translate="yes" xml:space="preserve">
          <source>is latitude (northward positive, southward negative) and</source>
          <target state="translated">是纬度(北向正,南向负),而</target>
        </trans-unit>
        <trans-unit id="9f6334181abd08a5e5386bd949a39504d56e205a" translate="yes" xml:space="preserve">
          <source>is like</source>
          <target state="translated">就像</target>
        </trans-unit>
        <trans-unit id="48ed010598288313ecc15c5c568a57c8a8397db8" translate="yes" xml:space="preserve">
          <source>is like &lt;code&gt;&quot;s&quot;&lt;/code&gt; in that all the map array elements are scalars, but here they are restricted to all being integers, and some have to be adjusted (hence the name &lt;code&gt;&quot;a&quot;&lt;/code&gt; ) to get the correct result. For example, in:</source>
          <target state="translated">就像 &lt;code&gt;&quot;s&quot;&lt;/code&gt; 一样，所有的map数组元素都是标量，但是这里它们被限制为全部为整数，并且必须对其进行一些调整（因此命名为 &lt;code&gt;&quot;a&quot;&lt;/code&gt; ）以获得正确的结果。例如，在：</target>
        </trans-unit>
        <trans-unit id="bc9f8bc9dc1087217b95e295664446d7d71bf4dd" translate="yes" xml:space="preserve">
          <source>is like &lt;code&gt;&quot;s&quot;&lt;/code&gt; in that all the map array elements are scalars, but here they are restricted to all being integers, and some have to be adjusted (hence the name &lt;code&gt;&quot;a&quot;&lt;/code&gt;) to get the correct result. For example, in:</source>
          <target state="translated">就像 &lt;code&gt;&quot;s&quot;&lt;/code&gt; 一样，所有的map数组元素都是标量，但是在这里它们被限制为全部为整数，并且必须对其进行一些调整（因此命名为 &lt;code&gt;&quot;a&quot;&lt;/code&gt; ）才能获得正确的结果。例如，在：</target>
        </trans-unit>
        <trans-unit id="f732dd47aa6f4ff2876b84adc0d6e54cc3222968" translate="yes" xml:space="preserve">
          <source>is like doing this:</source>
          <target state="translated">是这样做的。</target>
        </trans-unit>
        <trans-unit id="59b5273750d4d23e41112610a3e421f40227d715" translate="yes" xml:space="preserve">
          <source>is linked into the pad, and its &lt;code&gt;CvOUTSIDE&lt;/code&gt; link to the outer scope is weakened to avoid a reference loop.</source>
          <target state="translated">连接到焊盘，并且削弱了它到外部示波器的 &lt;code&gt;CvOUTSIDE&lt;/code&gt; 链接以避免参考环路。</target>
        </trans-unit>
        <trans-unit id="f78b503f16d85a9efd1beacafcdfdaf3f270807f" translate="yes" xml:space="preserve">
          <source>is located in</source>
          <target state="translated">位于</target>
        </trans-unit>
        <trans-unit id="2381acfde135496b849a6639e2a3a9ace4912ebe" translate="yes" xml:space="preserve">
          <source>is longer than</source>
          <target state="translated">长于</target>
        </trans-unit>
        <trans-unit id="fa07b54f5a9fd2750d4f4d0986e9e9fdb812fef7" translate="yes" xml:space="preserve">
          <source>is longitude (eastward positive, westward negative).</source>
          <target state="translated">是经度(东正西负)。</target>
        </trans-unit>
        <trans-unit id="8e42e7821439f1d14a05038b954f5c84e7ed25c3" translate="yes" xml:space="preserve">
          <source>is looked up as a letter in script</source>
          <target state="translated">隶书</target>
        </trans-unit>
        <trans-unit id="23d3623b010595cc8c5feb367b1a6439f9e480b5" translate="yes" xml:space="preserve">
          <source>is looked up as a letter in the given scripts (in the specified order). Customized aliases can override these, and are explained in &lt;a href=&quot;#CUSTOM-ALIASES&quot;&gt;&quot;CUSTOM ALIASES&quot;&lt;/a&gt;.</source>
          <target state="translated">在给定脚本中按字母顺序（按指定顺序）查找。自定义别名可以覆盖这些别名，并将在&lt;a href=&quot;#CUSTOM-ALIASES&quot;&gt;&amp;ldquo;自定义别名&amp;rdquo;中&lt;/a&gt;进行说明。</target>
        </trans-unit>
        <trans-unit id="cb4ca3c72721f7c4253dd2277262b9ddc4ed46e6" translate="yes" xml:space="preserve">
          <source>is looked up as a letter in the given scripts (in the specified order). Customized aliases can override these, and are explained in &lt;a href=&quot;#CUSTOM-ALIASES&quot;&gt;CUSTOM ALIASES&lt;/a&gt;.</source>
          <target state="translated">在给定脚本中按字母顺序（按指定顺序）查找。自定义别名可以覆盖这些别名，并将在&amp;ldquo; &lt;a href=&quot;#CUSTOM-ALIASES&quot;&gt;自&lt;/a&gt;定义别名&amp;rdquo;中进行说明。</target>
        </trans-unit>
        <trans-unit id="65a9de9318bd902cd3babdefa5b0b92ad233e720" translate="yes" xml:space="preserve">
          <source>is made active via fork()/exec(), which may lead to some resources taken from the system (even if we do not count extra work needed for fork()ing).</source>
          <target state="translated">通过fork()/exec()被激活,这可能会导致从系统中占用一些资源(即使我们不计算fork()ing所需的额外工作)。</target>
        </trans-unit>
        <trans-unit id="239548bf60aa08580ca32f625ff4309e8f81b542" translate="yes" xml:space="preserve">
          <source>is made equivalent to</source>
          <target state="translated">变成了等同于</target>
        </trans-unit>
        <trans-unit id="781a822c527885056dc9a4258a0d224cfae25b42" translate="yes" xml:space="preserve">
          <source>is marked internally as encoded in UTF-8. Functionally the same as &lt;code&gt;Encode::is_utf8($string)&lt;/code&gt;.</source>
          <target state="translated">在内部被标记为以UTF-8编码。在功能上与 &lt;code&gt;Encode::is_utf8($string)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="70f7caafd49cafb298f6bed5bd8a09a8a7b6e1f0" translate="yes" xml:space="preserve">
          <source>is marked internally as encoded in UTF-8. Functionally the same as Encode::is_utf8().</source>
          <target state="translated">在内部被标记为UTF-8编码。功能上与Encode::is_utf8()相同。</target>
        </trans-unit>
        <trans-unit id="cafeb6d4161aa2a759fa9cb04517c81a82e79352" translate="yes" xml:space="preserve">
          <source>is merely a shortcut for</source>
          <target state="translated">只是一个捷径</target>
        </trans-unit>
        <trans-unit id="cc1707c0c187b01916ee3df94ec53bf20d5e805b" translate="yes" xml:space="preserve">
          <source>is mirrored in bidirectional text</source>
          <target state="translated">是双向文字的镜像</target>
        </trans-unit>
        <trans-unit id="80b4dc3a4ba493fe50483b5139574f0e60c29253" translate="yes" xml:space="preserve">
          <source>is missing.</source>
          <target state="translated">丢失了。</target>
        </trans-unit>
        <trans-unit id="2ed56127ce2edce69beb7e4554959d32a6773da2" translate="yes" xml:space="preserve">
          <source>is more appropriate. The process of converting the complex number into a string that can be displayed is known as</source>
          <target state="translated">是比较合适的。将复数转换为可显示的字符串的过程称为</target>
        </trans-unit>
        <trans-unit id="f33e4ba19768d6d155cead381f0c8a3d5242ab10" translate="yes" xml:space="preserve">
          <source>is more sophisticated, and uses the &lt;a href=&quot;Test::Harness&quot;&gt;Test::Harness&lt;/a&gt; module, thus using this test target supposes that perl mostly works. The main advantage for our purposes is that it prints a detailed summary of failed tests at the end. Also, unlike</source>
          <target state="translated">更加复杂，并使用&lt;a href=&quot;Test::Harness&quot;&gt;Test :: Harness&lt;/a&gt;模块，因此，使用此测试目标假定perl最有效。对于我们而言，主要优点是它在最后打印了失败测试的详细摘要。另外，不像</target>
        </trans-unit>
        <trans-unit id="df959619050e76c8841c515d15b08c043ee77963" translate="yes" xml:space="preserve">
          <source>is more sophisticated, and uses the &lt;a href=&quot;test/harness&quot;&gt;Test::Harness&lt;/a&gt; module, thus using this test target supposes that perl mostly works. The main advantage for our purposes is that it prints a detailed summary of failed tests at the end. Also, unlike</source>
          <target state="translated">更加复杂，并使用&lt;a href=&quot;test/harness&quot;&gt;Test :: Harness&lt;/a&gt;模块，因此使用此测试目标假定perl大部分有效。对于我们而言，主要优点是它在最后打印了失败测试的详细摘要。另外，不像</target>
        </trans-unit>
        <trans-unit id="0858c3a91f7c4ca07fe54237280827493469443b" translate="yes" xml:space="preserve">
          <source>is more than just a C header. It's also a Perl script that can check your source code. It will suggest hints and portability notes, and can even make suggestions on how to change your code. You can run it like any other Perl program:</source>
          <target state="translated">不仅仅是一个C语言头。它也是一个Perl脚本,可以检查你的源代码。它将建议提示和可移植性说明,甚至可以对如何修改你的代码提出建议。你可以像其他Perl程序一样运行它。</target>
        </trans-unit>
        <trans-unit id="358c18d547b6b98a5467b302d5e5feebc4911872" translate="yes" xml:space="preserve">
          <source>is mounted as a tmpfs in Android, but it's only accessible to root.</source>
          <target state="translated">在Android中被挂载为tmpfs,但只有root才能访问。</target>
        </trans-unit>
        <trans-unit id="73b99ca814cd9f3692bee8c058c4c6db3425b4f7" translate="yes" xml:space="preserve">
          <source>is much more memory-efficient than either</source>
          <target state="translated">是比任何一个更节省内存的</target>
        </trans-unit>
        <trans-unit id="f364fbd6a7a0be0bd077f092be562b8bbd3797f6" translate="yes" xml:space="preserve">
          <source>is needed to get through the test suite.</source>
          <target state="translated">是需要通过测试套件的。</target>
        </trans-unit>
        <trans-unit id="6a14b970b88d3b4ba0134624be5559b774fcc9e5" translate="yes" xml:space="preserve">
          <source>is needed.</source>
          <target state="translated">是需要的。</target>
        </trans-unit>
        <trans-unit id="9d94e3f31359c70b6973e6ab915dd0761fd3dfe4" translate="yes" xml:space="preserve">
          <source>is never checked (so if it does not exists when its content is needed, the user of %hash may be confused).</source>
          <target state="translated">从不被检查(所以如果在需要它的内容时它不存在,%hash的用户可能会感到困惑)。</target>
        </trans-unit>
        <trans-unit id="d1c931dd86f631640926b9290e424da1679547cd" translate="yes" xml:space="preserve">
          <source>is non-&lt;code&gt;NULL&lt;/code&gt; , it will be set to a pointer to the frame for the sub call itself.</source>
          <target state="translated">为非 &lt;code&gt;NULL&lt;/code&gt; ，它将被设置为指向子调用本身的框架的指针。</target>
        </trans-unit>
        <trans-unit id="3fce8d03a657c1af890c2d2106c221fba0c0c421" translate="yes" xml:space="preserve">
          <source>is non-&lt;code&gt;NULL&lt;/code&gt;, it will be set to a pointer to the frame for the sub call itself.</source>
          <target state="translated">为非 &lt;code&gt;NULL&lt;/code&gt; ，它将被设置为指向子调用本身的框架的指针。</target>
        </trans-unit>
        <trans-unit id="5e581b526692a62a2e9311d15e92a68ee14d4cf1" translate="yes" xml:space="preserve">
          <source>is non-null, it supplies the name of a label to attach to the state op; this function takes ownership of the memory pointed at by</source>
          <target state="translated">为非空,它提供了附加到状态操作的标签的名称;这个函数拥有由</target>
        </trans-unit>
        <trans-unit id="10e7f3d3e39943812d42aa325a0624806d73fc1d" translate="yes" xml:space="preserve">
          <source>is non-null, it's a lexical reference to a package variable, and this identifies the package. The following flags can be OR'ed together:</source>
          <target state="translated">是非空的,它是一个包变量的词法引用,这就标识了这个包。以下标志可以一起进行OR'ed。</target>
        </trans-unit>
        <trans-unit id="6de6591eb61d37cb2280e26d54c5fd16117e3fea" translate="yes" xml:space="preserve">
          <source>is non-null, the name is for a typed lexical, and this identifies the type. If</source>
          <target state="translated">为非空,那么这个名字就是一个类型化的词法,这就表明了这个类型。如果</target>
        </trans-unit>
        <trans-unit id="57de99dddfaf807ff4ccc5d2881dd47c080db528" translate="yes" xml:space="preserve">
          <source>is non-zero then</source>
          <target state="translated">为非零,则</target>
        </trans-unit>
        <trans-unit id="e82fdbe87df063bbd6188f48b5ff47c8f53b5e5b" translate="yes" xml:space="preserve">
          <source>is not</source>
          <target state="translated">不是</target>
        </trans-unit>
        <trans-unit id="2442a9efabb42df6d9155ee7e736901c656341f1" translate="yes" xml:space="preserve">
          <source>is not &lt;code&gt;NULL&lt;/code&gt; then this is a &lt;code&gt;PerlIO_reopen&lt;/code&gt; . Perl itself does not use this (yet?) and semantics are a little vague.</source>
          <target state="translated">不为 &lt;code&gt;NULL&lt;/code&gt; 则为 &lt;code&gt;PerlIO_reopen&lt;/code&gt; 。Perl本身不使用它（还可以吗？），并且语义有点模糊。</target>
        </trans-unit>
        <trans-unit id="bff8411311655b1e8fdaf7d34b9f954e18cc2169" translate="yes" xml:space="preserve">
          <source>is not &lt;code&gt;NULL&lt;/code&gt; then this is a &lt;code&gt;PerlIO_reopen&lt;/code&gt;. Perl itself does not use this (yet?) and semantics are a little vague.</source>
          <target state="translated">不为 &lt;code&gt;NULL&lt;/code&gt; 则为 &lt;code&gt;PerlIO_reopen&lt;/code&gt; 。Perl本身不使用此功能（还可以吗？），语义有点模糊。</target>
        </trans-unit>
        <trans-unit id="5dbf0d4a2783568bc0ec6653623e5d748ba64d73" translate="yes" xml:space="preserve">
          <source>is not NULL. Since we don't have to check the NULLness, it's faster and smaller.</source>
          <target state="translated">是不是NULL。因为我们不用检查NULL性,所以速度更快,体积更小。</target>
        </trans-unit>
        <trans-unit id="09afe42e6e5a8f0e386f1909d4abd2a189d4f310" translate="yes" xml:space="preserve">
          <source>is not NULL. The macro doesn't need to return a meaningful value, or check for NULLness, so it's smaller and faster.</source>
          <target state="translated">并非NULL.这个宏不需要返回有意义的值,也不需要检查是否为NULL,所以它更小更快。这个宏不需要返回一个有意义的值,也不需要检查是否为NULL,所以它更小更快。</target>
        </trans-unit>
        <trans-unit id="1ffb843df2c6536477027470d90d6811acce8f6a" translate="yes" xml:space="preserve">
          <source>is not a directory that you can chdir to, possibly because it doesn't exist.</source>
          <target state="translated">并不是一个你可以chdir到的目录,可能是因为它不存在。</target>
        </trans-unit>
        <trans-unit id="cd05864506055467d4c1543f9ab79897eee73f31" translate="yes" xml:space="preserve">
          <source>is not a full pathname found in the values of %INC, it is considered a regex.</source>
          <target state="translated">不是在%INC的值中找到的完整路径名,它被认为是一个regex。</target>
        </trans-unit>
        <trans-unit id="ca37ad081732791ac7c3c488d1b688611146a3d5" translate="yes" xml:space="preserve">
          <source>is not a multiple of 8, use the</source>
          <target state="translated">不是8的倍数,使用</target>
        </trans-unit>
        <trans-unit id="90cfc06661f28638ad5685d595f94c84092a1299" translate="yes" xml:space="preserve">
          <source>is not a reference, it is &lt;code&gt;&lt;a href=&quot;../functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;-ed in order to allow &lt;code&gt;$1&lt;/code&gt; etc. to be substituted. The example is one way to alias names as used in X11 fonts to the MIME names for the iso-8859-* family. Note the double quotes inside the single quotes.</source>
          <target state="translated">不是参考，它被 &lt;code&gt;&lt;a href=&quot;../functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; 以允许 &lt;code&gt;$1&lt;/code&gt; 等被替换。该示例是将X11字体中使用的名称别名化为iso-8859- *系列的MIME名称的一种方法。请注意单引号内的双引号。</target>
        </trans-unit>
        <trans-unit id="a9c6e7fca8b5f6aaf0da90eaa8eaed0488b9b48f" translate="yes" xml:space="preserve">
          <source>is not a reference, it is &lt;code&gt;eval&lt;/code&gt;-ed in order to allow &lt;code&gt;$1&lt;/code&gt; etc. to be substituted. The example is one way to alias names as used in X11 fonts to the MIME names for the iso-8859-* family. Note the double quotes inside the single quotes.</source>
          <target state="translated">不是参考，它被 &lt;code&gt;eval&lt;/code&gt; 以便允许 &lt;code&gt;$1&lt;/code&gt; 等被替换。该示例是将X11字体中使用的名称别名用作iso-8859- *系列的MIME名称的别名的一种方法。请注意单引号内的双引号。</target>
        </trans-unit>
        <trans-unit id="cc27d44385271fc935f660f9829b5e1b57bf2fba" translate="yes" xml:space="preserve">
          <source>is not a string.</source>
          <target state="translated">不是一个字符串。</target>
        </trans-unit>
        <trans-unit id="fe97c6a25e6e10b05fea34af623f7790fa5fba36" translate="yes" xml:space="preserve">
          <source>is not a string. Do not treat the return value as indicative of success or failure, because that isn't what it means: it is only the previous setting.</source>
          <target state="translated">不是一个字符串。不要把返回值当作成功或失败的指示,因为那不是它的意思:它只是之前的设置。</target>
        </trans-unit>
        <trans-unit id="da2c1159c594f4eb414e53a0a7777f80e553cdef" translate="yes" xml:space="preserve">
          <source>is not allowed, but</source>
          <target state="translated">不允许,但</target>
        </trans-unit>
        <trans-unit id="606701e8f5f91b1f859064528c6c90e0850405fe" translate="yes" xml:space="preserve">
          <source>is not already a list of the right type, it will be upgraded into one. If either</source>
          <target state="translated">不是正确类型的列表,它将被升级为一个列表。如果其中一个</target>
        </trans-unit>
        <trans-unit id="8d605d2cddd686b63627dcedefd81881d4aede9c" translate="yes" xml:space="preserve">
          <source>is not available.</source>
          <target state="translated">是没有的。</target>
        </trans-unit>
        <trans-unit id="0e07acfe6e445415bc80f4539e83f2e5479627c6" translate="yes" xml:space="preserve">
          <source>is not defined, then Perl defaults to consulting first the logical name tables specified by</source>
          <target state="translated">未定义,那么Perl默认先查询由</target>
        </trans-unit>
        <trans-unit id="3b35dc3fb767643d25e161d97495375b6c8925d3" translate="yes" xml:space="preserve">
          <source>is not empty, and it is the same as</source>
          <target state="translated">是不空的,它与。</target>
        </trans-unit>
        <trans-unit id="1cbcac909d1c387e8efb1acded1650390530508f" translate="yes" xml:space="preserve">
          <source>is not entirely like</source>
          <target state="translated">不尽然</target>
        </trans-unit>
        <trans-unit id="133cd8c37eb7f1bc84f3898facc206421e336545" translate="yes" xml:space="preserve">
          <source>is not found in any of $lh's %Lexicon hashes. What happens if a key is not found, is discussed in a later section, &quot;Controlling Lookup Failure&quot;.</source>
          <target state="translated">在$lh的%Lexicon哈希中没有找到。如果一个键没有找到会发生什么,在后面的 &quot;控制查找失败 &quot;一节中讨论。</target>
        </trans-unit>
        <trans-unit id="20608bdf427071b3f2b3bc63e3ca5ad5dba32b48" translate="yes" xml:space="preserve">
          <source>is not found, then Perl looks for an executable</source>
          <target state="translated">没有找到,那么Perl就会寻找一个可执行的</target>
        </trans-unit>
        <trans-unit id="33010be083ed65d0281dbcb74bf9325a0f99e09d" translate="yes" xml:space="preserve">
          <source>is not given, skip all constants that are defined in a C enumeration. Otherwise skip only those constants that are defined in an enum whose name matches</source>
          <target state="translated">不给定,跳过所有定义在 C 枚举中的常量。否则,只跳过那些定义在名称与</target>
        </trans-unit>
        <trans-unit id="3339d9443dad98ccb99bf9de00b6ef263750537d" translate="yes" xml:space="preserve">
          <source>is not in PERL5LIB.</source>
          <target state="translated">在PERL5LIB中没有。</target>
        </trans-unit>
        <trans-unit id="9f927c9a4957d812fc4759d501d906c99ea5fd83" translate="yes" xml:space="preserve">
          <source>is not intended for day to day use.</source>
          <target state="translated">不适合日常使用。</target>
        </trans-unit>
        <trans-unit id="9ee2f3e24f21d916d1b9f7d8d204a62832704191" translate="yes" xml:space="preserve">
          <source>is not necessary,</source>
          <target state="translated">没有必要。</target>
        </trans-unit>
        <trans-unit id="3f84e0c82fe1616e060e2332dff93b4abd3bb7e3" translate="yes" xml:space="preserve">
          <source>is not ok, as the regex engine will end up trying to compile the pattern &lt;code&gt;\&lt;/code&gt; , which it will consider a syntax error.</source>
          <target state="translated">这不是很好，因为正则表达式引擎最终将尝试编译模式 &lt;code&gt;\&lt;/code&gt; ，它将考虑语法错误。</target>
        </trans-unit>
        <trans-unit id="27c74416088f6638da450b44615dbb85e7f94331" translate="yes" xml:space="preserve">
          <source>is not ok, as the regex engine will end up trying to compile the pattern &lt;code&gt;\&lt;/code&gt;, which it will consider a syntax error.</source>
          <target state="translated">这是不正确的，因为正则表达式引擎最终将尝试编译模式 &lt;code&gt;\&lt;/code&gt; ，它将考虑语法错误。</target>
        </trans-unit>
        <trans-unit id="1de141eaa0f30aab49d63c7c0d6cb5d7b40c44a8" translate="yes" xml:space="preserve">
          <source>is not passed if the layer is at the bottom of the stack, for this reason and to maintain some level of &quot;compatibility&quot; with TIEHANDLE classes it is passed last.</source>
          <target state="translated">如果该层在堆栈的最底层,则不会被传递,出于这个原因,并且为了与TIEHANDLE类保持一定程度的 &quot;兼容性&quot;,它被最后传递。</target>
        </trans-unit>
        <trans-unit id="14ca5e3fc9da5c9523747e734197510c25796d8c" translate="yes" xml:space="preserve">
          <source>is not portable. Leave out the last comma.</source>
          <target state="translated">是不便携的。省去最后一个逗号。</target>
        </trans-unit>
        <trans-unit id="f5ac0afcf1f3987905381d9349d990f0a6872ecc" translate="yes" xml:space="preserve">
          <source>is not required and not implemented.</source>
          <target state="translated">不需要,也不执行。</target>
        </trans-unit>
        <trans-unit id="a84d2a687efa541d6d1b4959faac7bd7c4ea571d" translate="yes" xml:space="preserve">
          <source>is not responsible for triggering the automounts, mirror mounts, and the contents of network mounted filesystems. If your NFS implementation requires an action to be performed on the filesystem in order for</source>
          <target state="translated">不负责触发自动挂载、镜像挂载和网络挂载文件系统的内容。如果您的 NFS 实施需要在文件系统上执行一个操作,以便使</target>
        </trans-unit>
        <trans-unit id="99b85944e7c82cf4f25341c2b9e580202334841c" translate="yes" xml:space="preserve">
          <source>is not returned explicitly from &lt;a href=&quot;#unpack-TEMPLATE%2CEXPR&quot;&gt;&lt;code&gt;unpack&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">没有从&lt;a href=&quot;#unpack-TEMPLATE%2CEXPR&quot;&gt; &lt;code&gt;unpack&lt;/code&gt; 中&lt;/a&gt;显式返回。</target>
        </trans-unit>
        <trans-unit id="a5cf5f3c675f9c2d68cf66e1262d7c525fab832d" translate="yes" xml:space="preserve">
          <source>is not returned explicitly from &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">没有从 &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; 中显式返回。</target>
        </trans-unit>
        <trans-unit id="461edf58bab13d0e289e3fd343d9a0a8b3513001" translate="yes" xml:space="preserve">
          <source>is not returned explicitly from &lt;code&gt;&lt;a href=&quot;unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">没有从 &lt;code&gt;&lt;a href=&quot;unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; 中显式返回。</target>
        </trans-unit>
        <trans-unit id="0d97eb902a0ef031b420e6b9b05fccbf862f0b26" translate="yes" xml:space="preserve">
          <source>is not specified: &lt;b&gt;xsubpp&lt;/b&gt; can see that it needs to generate a function call section, and will autogenerate the OUTPUT section too. Thus one can shortcut the XSUB to become:</source>
          <target state="translated">未指定：&lt;b&gt;xsubpp&lt;/b&gt;可以看到它需要生成一个函数调用部分，并且也会自动生成OUTPUT部分。因此，可以将XSUB快捷方式变为：</target>
        </trans-unit>
        <trans-unit id="46d1ac57316dccf7b303f8434af4c18ee03b0a0b" translate="yes" xml:space="preserve">
          <source>is not supported).</source>
          <target state="translated">不支持)。)</target>
        </trans-unit>
        <trans-unit id="660e55295ec134f5c48bc724bc723675d1a1b8fd" translate="yes" xml:space="preserve">
          <source>is not the same as</source>
          <target state="translated">不等于</target>
        </trans-unit>
        <trans-unit id="c20017ff75bdfb50ee3a50480bd863b1895d08c4" translate="yes" xml:space="preserve">
          <source>is not transparent. The</source>
          <target state="translated">是不透明的。该</target>
        </trans-unit>
        <trans-unit id="a2f7dc60b1a7a427469f140199570b1bd8f899c4" translate="yes" xml:space="preserve">
          <source>is not yet implemented (dummy function). (Perl has a workaround.)</source>
          <target state="translated">还没有实现 (虚函数)。(Perl有一个变通方法。)</target>
        </trans-unit>
        <trans-unit id="8e0d75ab66ac6c358071d7ce5aa3ae1d338105d6" translate="yes" xml:space="preserve">
          <source>is nothing to worry about at all.</source>
          <target state="translated">是完全不用担心的。</target>
        </trans-unit>
        <trans-unit id="7206590a99801f0070757ea643074d99c5330488" translate="yes" xml:space="preserve">
          <source>is now different from</source>
          <target state="translated">现在已经不同于</target>
        </trans-unit>
        <trans-unit id="296c2ce8ed25f67f0112e54c6f7348b8ee269520" translate="yes" xml:space="preserve">
          <source>is now misinterpreted as</source>
          <target state="translated">现在被误解为</target>
        </trans-unit>
        <trans-unit id="784e257d270f346aebf3530a8118df2e3e970f3c" translate="yes" xml:space="preserve">
          <source>is null, the other is returned unchanged.</source>
          <target state="translated">是空的,另一个返回不变。</target>
        </trans-unit>
        <trans-unit id="1cd25b0094b3720a6cc3ba23740121d376548889" translate="yes" xml:space="preserve">
          <source>is null, the state op is returned. Otherwise the state op is combined with</source>
          <target state="translated">为空,则返回状态运算。否则,状态运算将与</target>
        </trans-unit>
        <trans-unit id="1d68b011b191ec267b84e6cf126a36f11ba536d2" translate="yes" xml:space="preserve">
          <source>is obvious (hopefully).</source>
          <target state="translated">是显而易见的(希望)。</target>
        </trans-unit>
        <trans-unit id="bfd34bbffb3bec2ae854bed4fe93b5b4df09d7c5" translate="yes" xml:space="preserve">
          <source>is octal, as in &lt;code&gt;E&amp;lt;075&amp;gt;&lt;/code&gt; . Otherwise</source>
          <target state="translated">是八进制的，如 &lt;code&gt;E&amp;lt;075&amp;gt;&lt;/code&gt; 。除此以外</target>
        </trans-unit>
        <trans-unit id="fe02a88840a8ededb2434f59dfd68088c0cd21a9" translate="yes" xml:space="preserve">
          <source>is octal, as in &lt;code&gt;E&amp;lt;075&amp;gt;&lt;/code&gt;. Otherwise</source>
          <target state="translated">是八进制的，如 &lt;code&gt;E&amp;lt;075&amp;gt;&lt;/code&gt; 。否则</target>
        </trans-unit>
        <trans-unit id="e59f8572639c6d7abe84f59ed23f115265c34830" translate="yes" xml:space="preserve">
          <source>is officially available in gcc 3.0 and later. You can build a profiled version of</source>
          <target state="translated">在gcc 3.0及以后的版本中正式可用。你可以在gcc 3.0及以后的版本中构建一个</target>
        </trans-unit>
        <trans-unit id="bb3335ba98001fe8c8858bb517435edad14df2ff" translate="yes" xml:space="preserve">
          <source>is often the quickest way to compute SHA message digests. The user simply feeds data to the script through files or standard input, and then collects the results from standard output.</source>
          <target state="translated">通常是计算SHA消息摘要的最快方法。用户只需通过文件或标准输入向脚本提供数据,然后从标准输出中收集结果。</target>
        </trans-unit>
        <trans-unit id="7c869452ca51dc4f4b90e7e682e32efa15fa5d08" translate="yes" xml:space="preserve">
          <source>is often used interchangeably with it.</source>
          <target state="translated">常与之互换使用。</target>
        </trans-unit>
        <trans-unit id="5031d72b525717047dc6fd15f90430cc40172acd" translate="yes" xml:space="preserve">
          <source>is omitted,</source>
          <target state="translated">被省略了。</target>
        </trans-unit>
        <trans-unit id="59383e02842c6ecb450610847b00c5496ed1ae05" translate="yes" xml:space="preserve">
          <source>is omitted, list them all.</source>
          <target state="translated">是省略的,全部列出。</target>
        </trans-unit>
        <trans-unit id="bed8ec63611bd49c0e67878865bfd9f59745945e" translate="yes" xml:space="preserve">
          <source>is omitted, set an action on the line about to be executed. The sequence of steps taken by the debugger is</source>
          <target state="translated">被省略,在即将执行的行上设置一个动作。调试器采取的步骤顺序为</target>
        </trans-unit>
        <trans-unit id="1454936324f5b838ad8702f3a4e912fdb73181b3" translate="yes" xml:space="preserve">
          <source>is omitted, sets &lt;code&gt;$\&lt;/code&gt; to the current value of &lt;code&gt;$/&lt;/code&gt; . For instance, to trim lines to 80 columns:</source>
          <target state="translated">省略，将 &lt;code&gt;$\&lt;/code&gt; 设置为 &lt;code&gt;$/&lt;/code&gt; 的当前值。例如，将行修剪为80列：</target>
        </trans-unit>
        <trans-unit id="f15097fec3faa213d8bc8ca132410a2097fe3c76" translate="yes" xml:space="preserve">
          <source>is omitted, sets &lt;code&gt;$\&lt;/code&gt; to the current value of &lt;code&gt;$/&lt;/code&gt;. For instance, to trim lines to 80 columns:</source>
          <target state="translated">省略，将 &lt;code&gt;$\&lt;/code&gt; 设置为 &lt;code&gt;$/&lt;/code&gt; 的当前值。例如，将行修剪为80列：</target>
        </trans-unit>
        <trans-unit id="4bb3e6d01d8abb5873707a404b01ed088d627c52" translate="yes" xml:space="preserve">
          <source>is omitted. If that viewer is &lt;b&gt;man&lt;/b&gt;, the current &lt;code&gt;Config&lt;/code&gt; information is used to invoke &lt;b&gt;man&lt;/b&gt; using the proper MANPATH or &lt;b&gt;-M&lt;/b&gt;</source>
          <target state="translated">被省略。如果该查看者是&lt;b&gt;man&lt;/b&gt;，则使用正确的MANPATH或&lt;b&gt;-M&lt;/b&gt;使用当前的 &lt;code&gt;Config&lt;/code&gt; 信息来调用&lt;b&gt;man&lt;/b&gt;&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="808a9a0b7d1e742f272682180efba6d96e49b61e" translate="yes" xml:space="preserve">
          <source>is one of &lt;code&gt;S_IRUSR&lt;/code&gt; , &lt;code&gt;S_IWUSR&lt;/code&gt; or &lt;code&gt;S_IXUSR&lt;/code&gt; from the &lt;a href=&quot;../fcntl&quot;&gt;Fcntl&lt;/a&gt; module, and</source>
          <target state="translated">是以下之一 &lt;code&gt;S_IRUSR&lt;/code&gt; ， &lt;code&gt;S_IWUSR&lt;/code&gt; 或 &lt;code&gt;S_IXUSR&lt;/code&gt; 从&lt;a href=&quot;../fcntl&quot;&gt;FCNTL&lt;/a&gt;模块，和</target>
        </trans-unit>
        <trans-unit id="fad8df70cf47730e906eb199d90ce1f372f822ee" translate="yes" xml:space="preserve">
          <source>is one of &lt;code&gt;S_IRUSR&lt;/code&gt;, &lt;code&gt;S_IWUSR&lt;/code&gt; or &lt;code&gt;S_IXUSR&lt;/code&gt; from the &lt;a href=&quot;fcntl&quot;&gt;Fcntl&lt;/a&gt; module, and</source>
          <target state="translated">是以下之一 &lt;code&gt;S_IRUSR&lt;/code&gt; ， &lt;code&gt;S_IWUSR&lt;/code&gt; 或 &lt;code&gt;S_IXUSR&lt;/code&gt; 从&lt;a href=&quot;fcntl&quot;&gt;FCNTL&lt;/a&gt;模块，和</target>
        </trans-unit>
        <trans-unit id="774717fd7c9c7ce3270b72d058c209e6053fc8a0" translate="yes" xml:space="preserve">
          <source>is one of the 10 exceptional cases (or things like them) listed below, it is used directly as a boolean.</source>
          <target state="translated">是下面列出的10种特殊情况(或类似的事情)之一,它直接作为布尔值使用。</target>
        </trans-unit>
        <trans-unit id="c53bf86436bbbd29af464847d3f11c3b0b08cbf8" translate="yes" xml:space="preserve">
          <source>is one of those defined in the Unicode standard. For Unicode 5.1, they are defined in Section 3.13 &lt;code&gt;Default Case Operations&lt;/code&gt; available at &lt;a href=&quot;http://www.unicode.org/versions/Unicode5.1.0/&quot;&gt;http://www.unicode.org/versions/Unicode5.1.0/&lt;/a&gt;. These are for context-sensitive casing.</source>
          <target state="translated">是Unicode标准中定义的标准之一。对于Unicode 5.1，它们在&lt;a href=&quot;http://www.unicode.org/versions/Unicode5.1.0/&quot;&gt;http://www.unicode.org/versions/Unicode5.1.0/上的&lt;/a&gt;第3.13节&amp;ldquo; &lt;code&gt;Default Case Operations&lt;/code&gt; 中定义。这些用于上下文敏感的大小写。</target>
        </trans-unit>
        <trans-unit id="2591d90f43c5ca213c1b76692a5c43f2cb6a08d5" translate="yes" xml:space="preserve">
          <source>is one of those defined in the Unicode standard. For Unicode 5.1, they are defined in Section 3.13 &lt;code&gt;Default Case Operations&lt;/code&gt; available at &lt;a href=&quot;https://www.unicode.org/versions/Unicode5.1.0/&quot;&gt;http://www.unicode.org/versions/Unicode5.1.0/&lt;/a&gt;. These are for context-sensitive casing.</source>
          <target state="translated">是Unicode标准中定义的标准之一。对于Unicode 5.1，它们在&lt;a href=&quot;https://www.unicode.org/versions/Unicode5.1.0/&quot;&gt;http://www.unicode.org/versions/Unicode5.1.0/上的&lt;/a&gt;第3.13节&amp;ldquo; &lt;code&gt;Default Case Operations&lt;/code&gt; 中定义。这些用于上下文敏感的大小写。</target>
        </trans-unit>
        <trans-unit id="46999b0d232f9079ca49c913290f8a6285537b88" translate="yes" xml:space="preserve">
          <source>is only present if it is a true value; it is not present if it is a false value. It is shown in the above example to illustrate where the attribute is (in the &lt;b&gt;closing&lt;/b&gt; tag). It signifies that the &lt;code&gt;=over&lt;/code&gt; did not have a matching &lt;code&gt;=back&lt;/code&gt;, and thus Pod::Simple had to create a fake closer.</source>
          <target state="translated">仅当它是真实值时才存在；如果它是一个假值，则不存在。在上面的示例中显示了该示例，以说明该属性的位置（在&lt;b&gt;结束&lt;/b&gt;标记中）。它表示 &lt;code&gt;=over&lt;/code&gt; 没有匹配的 &lt;code&gt;=back&lt;/code&gt; ，因此Pod :: Simple必须创建一个伪造的closer。</target>
        </trans-unit>
        <trans-unit id="840b280f15a6b38ff8c9a2baa67e8c9188a87b38" translate="yes" xml:space="preserve">
          <source>is open, or use &quot;r+&quot; to indicate a read/write stream.</source>
          <target state="translated">是打开的,或者用 &quot;r+&quot;表示一个读/写流。</target>
        </trans-unit>
        <trans-unit id="c683506eb9e31819d71640bdc2f2478d3f6ce65d" translate="yes" xml:space="preserve">
          <source>is opened for writing.</source>
          <target state="translated">是开写的。</target>
        </trans-unit>
        <trans-unit id="79749dba2b390bb7475fce2507f0f4eb5987e332" translate="yes" xml:space="preserve">
          <source>is optional and defaults to rest of the array.</source>
          <target state="translated">是可选的,默认为数组的其余部分。</target>
        </trans-unit>
        <trans-unit id="915a141436744a90f3e02d0dd1d609a72b2c593a" translate="yes" xml:space="preserve">
          <source>is optional and defaults to zero, negative values count back from the end of the array.</source>
          <target state="translated">是可选的,默认值为0,负值从数组末尾开始倒数。</target>
        </trans-unit>
        <trans-unit id="df5063ae13199d816cf6966e77f57c23f1e15e7b" translate="yes" xml:space="preserve">
          <source>is optional, make sure that this switch is followed by at least one other switch if you omit</source>
          <target state="translated">是可选的,如果你省略了</target>
        </trans-unit>
        <trans-unit id="6dd01b70fcde3901a9b8cd6f99e52b559931ae66" translate="yes" xml:space="preserve">
          <source>is optional.</source>
          <target state="translated">是可选的。</target>
        </trans-unit>
        <trans-unit id="5f44d0432bafb77afd6de54efc51c632eefb0c70" translate="yes" xml:space="preserve">
          <source>is optional. If omitted, the encoding specified in the environment variable &lt;a href=&quot;perlrun#PERL_ENCODING&quot;&gt;&lt;code&gt;PERL_ENCODING&lt;/code&gt;&lt;/a&gt; is used. If this isn't set, or the resolved-to encoding is not known to &lt;code&gt;&lt;a href=&quot;encode&quot;&gt;Encode&lt;/a&gt;&lt;/code&gt;, the error &lt;code&gt;Unknown encoding '&lt;i&gt;ENCNAME&lt;/i&gt;'&lt;/code&gt; will be thrown.</source>
          <target state="translated">是可选的。如果省略，则使用在环境变量&lt;a href=&quot;perlrun#PERL_ENCODING&quot;&gt; &lt;code&gt;PERL_ENCODING&lt;/code&gt; 中&lt;/a&gt;指定的编码。如果没有设置，或解析到的编码是不知道 &lt;code&gt;&lt;a href=&quot;encode&quot;&gt;Encode&lt;/a&gt;&lt;/code&gt; ，误差 &lt;code&gt;Unknown encoding '&lt;i&gt;ENCNAME&lt;/i&gt;'&lt;/code&gt; 将被抛出。</target>
        </trans-unit>
        <trans-unit id="d3403c1182056f32036e1b0b051b43fe6e7e8805" translate="yes" xml:space="preserve">
          <source>is optional. If omitted, the encoding specified in the environment variable &lt;a href=&quot;perlrun#PERL_ENCODING&quot;&gt;PERL_ENCODING &lt;/a&gt; is used. If this isn't set, or the resolved-to encoding is not known to &lt;code&gt;&lt;a href=&quot;encode&quot;&gt;Encode&lt;/a&gt;&lt;/code&gt;, the error &lt;code&gt;Unknown encoding '&lt;i&gt;ENCNAME&lt;/i&gt;'&lt;/code&gt; will be thrown.</source>
          <target state="translated">是可选的。如果省略，则使用在环境变量&lt;a href=&quot;perlrun#PERL_ENCODING&quot;&gt;PERL_ENCODING中&lt;/a&gt;指定的编码。如果没有设置，或解析到的编码是不知道 &lt;code&gt;&lt;a href=&quot;encode&quot;&gt;Encode&lt;/a&gt;&lt;/code&gt; ，误差 &lt;code&gt;Unknown encoding '&lt;i&gt;ENCNAME&lt;/i&gt;'&lt;/code&gt; 将被抛出。</target>
        </trans-unit>
        <trans-unit id="7f6b85ab8249cd41acb9f4dacc2aa8bb59cb055e" translate="yes" xml:space="preserve">
          <source>is passed through unchanged. Every other character in the target string is replaced by the character in</source>
          <target state="translated">不变的通过。目标字符串中的每一个其他字符都会由</target>
        </trans-unit>
        <trans-unit id="460daaa5dcc2cb35dc81c46bff6ccd69c45e1b70" translate="yes" xml:space="preserve">
          <source>is passed to &lt;code&gt;SvPV_flags&lt;/code&gt; , and usually should be &lt;code&gt;SV_GMAGIC|SV_CONST_RETURN&lt;/code&gt; to handle magic.</source>
          <target state="translated">传递给 &lt;code&gt;SvPV_flags&lt;/code&gt; ，通常应为 &lt;code&gt;SV_GMAGIC|SV_CONST_RETURN&lt;/code&gt; 以处理魔术。</target>
        </trans-unit>
        <trans-unit id="dd20141170d229f9cc0136383909cd4f633a749b" translate="yes" xml:space="preserve">
          <source>is passed to the RE engine for compilation.</source>
          <target state="translated">被传递给RE引擎进行编译。</target>
        </trans-unit>
        <trans-unit id="a9eb96dfee227401a57fda9e8cbf3aa10f225974" translate="yes" xml:space="preserve">
          <source>is platform specific and may not be available for a specific port of Perl.</source>
          <target state="translated">是特定的平台,可能无法用于特定的 Perl port。</target>
        </trans-unit>
        <trans-unit id="25efb0ba5cb2478bde4a9a44864c9da4f454d8ed" translate="yes" xml:space="preserve">
          <source>is possible</source>
          <target state="translated">有可能</target>
        </trans-unit>
        <trans-unit id="523f09771ac3cf4731742b1c80be3d254a1ba53f" translate="yes" xml:space="preserve">
          <source>is preceded by a plus or minus sign then it is assumed to be relative, with negative numbers indicating preceding capture groups and positive ones following. Thus &lt;code&gt;(?-1)&lt;/code&gt; refers to the most recently declared group, and &lt;code&gt;(?+1)&lt;/code&gt; indicates the next group to be declared. Note that the counting for relative recursion differs from that of relative backreferences, in that with recursion unclosed groups &lt;b&gt;are&lt;/b&gt; included.</source>
          <target state="translated">如果前面有一个加号或减号，则假定它是相对的，负数表示前面的捕获组，正数后面的捕获组。因此 &lt;code&gt;(?-1)&lt;/code&gt; 指的是最近声明的组， &lt;code&gt;(?+1)&lt;/code&gt; 表示要声明的下一个组。注意，对于相对递归不同于相对反向引用的，在与递归未封闭基团的计数&lt;b&gt;被&lt;/b&gt;包括在内。</target>
        </trans-unit>
        <trans-unit id="e7ca6ab06ff93674a9f398734b75e0712f956c08" translate="yes" xml:space="preserve">
          <source>is preferred over the system malloc. Otherwise the value is null. This variable is intended for generating Makefiles.</source>
          <target state="translated">是首选,而不是系统的malloc。否则该值为空。这个变量是用来生成Makefile的。</target>
        </trans-unit>
        <trans-unit id="bd9425232ec1477789dd62e49cd5398771156271" translate="yes" xml:space="preserve">
          <source>is preferred over the system malloc. Otherwise the value is null. This variable is intended for generating Makefiles. See mallocsrc.</source>
          <target state="translated">是首选,而不是系统的malloc。否则该值为空。这个变量是用来生成Makefile的。参见 mallocsrc。</target>
        </trans-unit>
        <trans-unit id="f67f67cd9d10cfa55835748252e70c39d94e9642" translate="yes" xml:space="preserve">
          <source>is present but is not a positive number matching &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/\A(\d*\.)?\d+\z/&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">存在但不是与 &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/\A(\d*\.)?\d+\z/&lt;/a&gt;&lt;/code&gt; 匹配的正数？\ d + \ z /。</target>
        </trans-unit>
        <trans-unit id="bd365fc9fe0333ab83bb615fa7f93e06ad6ed7a2" translate="yes" xml:space="preserve">
          <source>is present but is not a positive number matching &lt;code&gt;m/\A(\d*\.)?\d+\z/&lt;/code&gt;.</source>
          <target state="translated">存在但不是与 &lt;code&gt;m/\A(\d*\.)?\d+\z/&lt;/code&gt; 匹配的正数？\ d + \ z /。</target>
        </trans-unit>
        <trans-unit id="cd6cfac1ce57b9138644859e222534e07b64b3f7" translate="yes" xml:space="preserve">
          <source>is present in EMX, but is not functional, it is emulated by perl. To disable the emulations, set environment variable &lt;code&gt;USE_PERL_FLOCK=0&lt;/code&gt; .</source>
          <target state="translated">在EMX中存在，但不起作用，它由perl仿真。要禁用仿真，请设置环境变量 &lt;code&gt;USE_PERL_FLOCK=0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0eb8a82dec3aea4891c7d0fdc7c4040cbf80deac" translate="yes" xml:space="preserve">
          <source>is present. On Unix, this means that &lt;code&gt;$no_file&lt;/code&gt; true makes this return ( '', $path, '' ).</source>
          <target state="translated">存在。在Unix上，这意味着 &lt;code&gt;$no_file&lt;/code&gt; true使此返回（''，$ path，''）。</target>
        </trans-unit>
        <trans-unit id="fae39eb0e249041dca8ecd4c4e5c73741b3158c8" translate="yes" xml:space="preserve">
          <source>is printed with proper indentation.</source>
          <target state="translated">是以适当的缩进方式打印的。</target>
        </trans-unit>
        <trans-unit id="f9b801d1d0e729e303069ae25d8e485d81ece8ba" translate="yes" xml:space="preserve">
          <source>is probably overkill for this. Something as simple as a &lt;code&gt;#define&lt;/code&gt; will do too:</source>
          <target state="translated">为此可能是过大了。像 &lt;code&gt;#define&lt;/code&gt; 这样简单的事情也可以做到：</target>
        </trans-unit>
        <trans-unit id="c75e0ceb23f1e1bd5d1ae898ae5b3a046e750c35" translate="yes" xml:space="preserve">
          <source>is processed before processing &lt;code&gt;PERLDB_OPTS&lt;/code&gt; . If</source>
          <target state="translated">在处理 &lt;code&gt;PERLDB_OPTS&lt;/code&gt; 之前先进行处理。如果</target>
        </trans-unit>
        <trans-unit id="482ce49dac3933ef7fa12709fa6946f186102e44" translate="yes" xml:space="preserve">
          <source>is processed before processing &lt;code&gt;PERLDB_OPTS&lt;/code&gt;. If</source>
          <target state="translated">在处理 &lt;code&gt;PERLDB_OPTS&lt;/code&gt; 之前先进行处理。如果</target>
        </trans-unit>
        <trans-unit id="fb129770ffa29193e010768c405bf02edb41dff2" translate="yes" xml:space="preserve">
          <source>is put into the special variable &lt;code&gt;$^R&lt;/code&gt;. This happens immediately, so &lt;code&gt;$^R&lt;/code&gt; can be used from other &lt;code&gt;(?{ &lt;i&gt;code&lt;/i&gt; })&lt;/code&gt; assertions inside the same regular expression.</source>
          <target state="translated">被放入特殊变量 &lt;code&gt;$^R&lt;/code&gt; 。这会立即发生，因此 &lt;code&gt;$^R&lt;/code&gt; 可用于同一正则表达式中的其他 &lt;code&gt;(?{ &lt;i&gt;code&lt;/i&gt; })&lt;/code&gt; 断言。</target>
        </trans-unit>
        <trans-unit id="b4b3055c13bff351645ff02c1ef815e8f59e24dd" translate="yes" xml:space="preserve">
          <source>is replaced by a copy of</source>
          <target state="translated">的副本取代。</target>
        </trans-unit>
        <trans-unit id="dd2e5ec393361241bdf00bf003cfd5d912213a01" translate="yes" xml:space="preserve">
          <source>is replicated. This latter is useful for counting characters in a class or for squashing character sequences in a class.</source>
          <target state="translated">是复制的。后者对于计算类中的字符或压制类中的字符序列很有用。</target>
        </trans-unit>
        <trans-unit id="5127b5091f9438f482f3b3e9a135487ed542c34c" translate="yes" xml:space="preserve">
          <source>is reported by mkmanifest() if $Verbose is set and a file is added to MANIFEST. $Verbose is set to 1 by default.</source>
          <target state="translated">如果$Verbose被设置并且文件被添加到MANIFEST中,则由mkmanifest()报告,默认情况下$Verbose被设置为1。</target>
        </trans-unit>
        <trans-unit id="bb20d2b460123fa620831fa74f056496b2769aa8" translate="yes" xml:space="preserve">
          <source>is reported if &lt;code&gt;MANIFEST&lt;/code&gt; could not be opened.</source>
          <target state="translated">如果无法打开 &lt;code&gt;MANIFEST&lt;/code&gt; 则报告。</target>
        </trans-unit>
        <trans-unit id="328906540cfc4914dc5ef9e9058dee50029d2b82" translate="yes" xml:space="preserve">
          <source>is reported if a file is found which is not in &lt;code&gt;MANIFEST&lt;/code&gt; .</source>
          <target state="translated">如果找到的文件不在 &lt;code&gt;MANIFEST&lt;/code&gt; 中,则报告。</target>
        </trans-unit>
        <trans-unit id="3db98ea93193d29fbff0e4bcd5b2bb22fa139f95" translate="yes" xml:space="preserve">
          <source>is reported if a file is found which is not in &lt;code&gt;MANIFEST&lt;/code&gt;.</source>
          <target state="translated">如果找到的文件不在 &lt;code&gt;MANIFEST&lt;/code&gt; 中,则报告。</target>
        </trans-unit>
        <trans-unit id="552d792cd22a56b9bb40ff5d893f66da4e73233e" translate="yes" xml:space="preserve">
          <source>is reported if a file is skipped due to an entry in &lt;code&gt;MANIFEST.SKIP&lt;/code&gt; .</source>
          <target state="translated">如果由于 &lt;code&gt;MANIFEST.SKIP&lt;/code&gt; 中的条目而跳过了文件，则报告。</target>
        </trans-unit>
        <trans-unit id="b536a99212e85223be7d6610ec90733acc984cd7" translate="yes" xml:space="preserve">
          <source>is reported if a file is skipped due to an entry in &lt;code&gt;MANIFEST.SKIP&lt;/code&gt;.</source>
          <target state="translated">如果由于 &lt;code&gt;MANIFEST.SKIP&lt;/code&gt; 中的条目而跳过了文件，则会报告此错误。</target>
        </trans-unit>
        <trans-unit id="aeed03f4804268d15748142d4e8831e16972eca4" translate="yes" xml:space="preserve">
          <source>is reported if a file mentioned in a &lt;code&gt;MANIFEST&lt;/code&gt; file does not exist.</source>
          <target state="translated">如果 &lt;code&gt;MANIFEST&lt;/code&gt; 文件中提到的文件不存在，则会报告此错误。</target>
        </trans-unit>
        <trans-unit id="62f90f7410ef6025437546070986df3097b81356" translate="yes" xml:space="preserve">
          <source>is requested, Perl will not look for</source>
          <target state="translated">的请求,Perl将不会查找</target>
        </trans-unit>
        <trans-unit id="732d7871b8b24cfa3bee53313dd1156e83c03669" translate="yes" xml:space="preserve">
          <source>is required if you want to start your program without a VIO window present, but not &lt;code&gt;detach&lt;/code&gt; ed (run &lt;code&gt;help detach&lt;/code&gt; for more info). Very useful for extensions which use PM, like &lt;code&gt;Perl/Tk&lt;/code&gt; or &lt;code&gt;OpenGL&lt;/code&gt; .</source>
          <target state="translated">如果要在不存在VIO窗口但不 &lt;code&gt;detach&lt;/code&gt; 情况下启动程序，则是必需的（运行 &lt;code&gt;help detach&lt;/code&gt; 以获取更多信息）。对于使用PM的扩展（例如 &lt;code&gt;Perl/Tk&lt;/code&gt; 或 &lt;code&gt;OpenGL&lt;/code&gt; )非常有用。</target>
        </trans-unit>
        <trans-unit id="28489f990792ce81b1c83f68d8b11b1e20054f28" translate="yes" xml:space="preserve">
          <source>is required if you want to start your program without a VIO window present, but not &lt;code&gt;detach&lt;/code&gt;ed (run &lt;code&gt;help detach&lt;/code&gt; for more info). Very useful for extensions which use PM, like &lt;code&gt;Perl/Tk&lt;/code&gt; or &lt;code&gt;OpenGL&lt;/code&gt;.</source>
          <target state="translated">如果要在不存在VIO窗口但不 &lt;code&gt;detach&lt;/code&gt; 情况下启动程序，则是必需的（运行 &lt;code&gt;help detach&lt;/code&gt; 以获取更多信息）。对于使用PM的扩展（例如 &lt;code&gt;Perl/Tk&lt;/code&gt; 或 &lt;code&gt;OpenGL&lt;/code&gt; )非常有用。</target>
        </trans-unit>
        <trans-unit id="8e6d5c50073dedc878c0bb174986728a65c26611" translate="yes" xml:space="preserve">
          <source>is reserved and must be zero. If it is not in the current pad but appears in the pad of any lexically enclosing scope, then a pseudo-entry for it is added in the current pad. Returns the offset in the current pad, or &lt;code&gt;NOT_IN_PAD&lt;/code&gt; if no such lexical is in scope.</source>
          <target state="translated">保留，并且必须为零。如果它不在当前填充板中，但出现在任何词法包围范围的填充板中，则将其伪条目添加到当前填充板中。返回当前填充中的偏移量；如果没有此类词汇，则返回 &lt;code&gt;NOT_IN_PAD&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7532f67d8ca66762ed704f6d153ff8aaf96ee06f" translate="yes" xml:space="preserve">
          <source>is restricted to simple identifiers only. In other words, it must match &lt;code&gt;/^[_A-Za-z][_A-Za-z0-9]*\z/&lt;/code&gt; or its Unicode extension (see &lt;a href=&quot;utf8&quot;&gt;utf8&lt;/a&gt;), though it isn't extended by the locale (see &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt;).</source>
          <target state="translated">仅限于简单标识符。换句话说，它必须与 &lt;code&gt;/^[_A-Za-z][_A-Za-z0-9]*\z/&lt;/code&gt; 或其Unicode扩展名（请参见&lt;a href=&quot;utf8&quot;&gt;utf8&lt;/a&gt;）&lt;a href=&quot;perllocale&quot;&gt;匹配&lt;/a&gt;，尽管它不会由语言环境进行扩展（请参见perllocale）。</target>
        </trans-unit>
        <trans-unit id="dab1f8b59686974bbcd2707bc651d6707dac406f" translate="yes" xml:space="preserve">
          <source>is returned.</source>
          <target state="translated">是返回。</target>
        </trans-unit>
        <trans-unit id="3b418f45ad77bc3826b32d08799dfded45d89432" translate="yes" xml:space="preserve">
          <source>is roughly equivalent to:</source>
          <target state="translated">大致相当于:</target>
        </trans-unit>
        <trans-unit id="b84a5263098f0e0c514dc8fe7d67295e56c987dc" translate="yes" xml:space="preserve">
          <source>is run on source code files, like this</source>
          <target state="translated">是在源代码文件上运行的,像这样</target>
        </trans-unit>
        <trans-unit id="505ded7fa9f0c714268c66ac7bb3b81302192c94" translate="yes" xml:space="preserve">
          <source>is semantically ambiguous, in a way that makes formatting decisions a bit difficult. On the one hand, it could be mention of an item &quot;Neque&quot;, mention of another item &quot;Porro&quot;, and mention of another item &quot;Quisquam Est&quot;, with just the last one requiring the explanatory paragraph &quot;Qui dolorem ipsum quia dolor...&quot;; and then an item &quot;Ut Enim&quot;. In that case, you'd want to format it like so:</source>
          <target state="translated">在语义上是含糊的,这使得格式决定有点困难。一方面,可以是提到一个项目 &quot;Neque&quot;,提到另一个项目 &quot;Porro&quot;,再提到另一个项目 &quot;Quisquam Est&quot;,只是最后一个项目需要解释段 &quot;Qui dolorem ipsum quia dolor...&quot;;然后是一个项目 &quot;Ut Enim&quot;。在这种情况下,你会希望这样格式化。</target>
        </trans-unit>
        <trans-unit id="7722d64cd0eafe5303c971058e1fcb33e1d6e14c" translate="yes" xml:space="preserve">
          <source>is semantically equivalent to the list:</source>
          <target state="translated">在语义上等同于列表。</target>
        </trans-unit>
        <trans-unit id="2126556a279c8048a27fc92ce2d017bedadfc33a" translate="yes" xml:space="preserve">
          <source>is set accordingly.</source>
          <target state="translated">相应设置。</target>
        </trans-unit>
        <trans-unit id="9fa2db030f6de6d0d8d463059f009a0bd838f324" translate="yes" xml:space="preserve">
          <source>is set explicitly. Additionally, C</source>
          <target state="translated">是明确设置的。此外,C</target>
        </trans-unit>
        <trans-unit id="2456807cb5ea138b7d92d077a4a271ef1799b815" translate="yes" xml:space="preserve">
          <source>is set to 2 if it isn't set already (see &lt;a href=&quot;perlhacktips#PERL_DESTRUCT_LEVEL&quot;&gt;&quot;PERL_DESTRUCT_LEVEL&quot; in perlhacktips&lt;/a&gt;).</source>
          <target state="translated">如果尚未设置，则设置为2（请参阅&lt;a href=&quot;perlhacktips#PERL_DESTRUCT_LEVEL&quot;&gt;perlhacktips中的&amp;ldquo; PERL_DESTRUCT_LEVEL&amp;rdquo;&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="f33cd6497df379b7aa55e16988255762f6cc5079" translate="yes" xml:space="preserve">
          <source>is set to 2 if it isn't set already (see &lt;a href=&quot;perlhacktips#PERL_DESTRUCT_LEVEL&quot;&gt;PERL_DESTRUCT_LEVEL in perlhacktips&lt;/a&gt;).</source>
          <target state="translated">如果尚未设置，则设置为2（请参阅&lt;a href=&quot;perlhacktips#PERL_DESTRUCT_LEVEL&quot;&gt;perlhacktips中的PERL_DESTRUCT_LEVEL&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="2b4d53f643e8f5289626164f0873fffe60309f8d" translate="yes" xml:space="preserve">
          <source>is set to &lt;code&gt;Encode::FB_QUIET&lt;/code&gt; , encoding and decoding immediately return the portion of the data that has been processed so far when an error occurs. The data argument is overwritten with everything after that point; that is, the unprocessed portion of the data. This is handy when you have to call &lt;code&gt;decode&lt;/code&gt; repeatedly in the case where your source data may contain partial multi-byte character sequences, (that is, you are reading with a fixed-width buffer). Here's some sample code to do exactly that:</source>
          <target state="translated">设置为 &lt;code&gt;Encode::FB_QUIET&lt;/code&gt; ，当发生错误时，编码和解码会立即返回到目前为止已处理的数据部分。此后，data参数将被所有内容覆盖；也就是说，数据的未处理部分。如果您的源数据可能包含部分多字节字符序列（也就是说，您正在使用固定宽度的缓冲区读取），则必须反复调用 &lt;code&gt;decode&lt;/code&gt; 时，这非常方便。下面是一些示例代码，正是这样做的：</target>
        </trans-unit>
        <trans-unit id="e626e1b813fd4cf1317801f1debf15fd33fbba90" translate="yes" xml:space="preserve">
          <source>is set to &lt;code&gt;Encode::FB_QUIET&lt;/code&gt;, encoding and decoding immediately return the portion of the data that has been processed so far when an error occurs. The data argument is overwritten with everything after that point; that is, the unprocessed portion of the data. This is handy when you have to call &lt;code&gt;decode&lt;/code&gt; repeatedly in the case where your source data may contain partial multi-byte character sequences, (that is, you are reading with a fixed-width buffer). Here's some sample code to do exactly that:</source>
          <target state="translated">设置为 &lt;code&gt;Encode::FB_QUIET&lt;/code&gt; ，当发生错误时，编码和解码会立即返回到目前为止已处理的数据部分。此后，data参数将被所有内容覆盖；也就是说，数据的未处理部分。如果您的源数据可能包含部分多字节字符序列（也就是说，您正在使用固定宽度的缓冲区读取），则必须反复调用 &lt;code&gt;decode&lt;/code&gt; 时，这非常方便。下面是一些示例代码，正是这样做的：</target>
        </trans-unit>
        <trans-unit id="fbfb9653688f76b59517a59a6f2dc20d0b7fcf79" translate="yes" xml:space="preserve">
          <source>is set to MEDIUM or higher.</source>
          <target state="translated">设置为MEDIUM或更高。</target>
        </trans-unit>
        <trans-unit id="c2ad4f726f3cb1586df04ee0538b5e72441b3f80" translate="yes" xml:space="preserve">
          <source>is set to the length of the scanned string, and</source>
          <target state="translated">被设置为扫描字符串的长度,而</target>
        </trans-unit>
        <trans-unit id="1cee3f4a0dcf9c9aac5c7b81e0001cba5602885c" translate="yes" xml:space="preserve">
          <source>is set up so that the logical name &lt;code&gt;story&lt;/code&gt; is found, rather than a CLI symbol or CRTL &lt;code&gt;environ&lt;/code&gt; element with the same name.</source>
          <target state="translated">进行设置，以便找到逻辑名称 &lt;code&gt;story&lt;/code&gt; ，而不是具有相同名称的CLI符号或CRTL &lt;code&gt;environ&lt;/code&gt; 元素。</target>
        </trans-unit>
        <trans-unit id="ca6947993695dc137eeb97b7855ecc954a5db745" translate="yes" xml:space="preserve">
          <source>is set, then the source string to encode() or decode() will be overwritten in place. If you're not interested in this, then bitwise-OR it with the bitmask.</source>
          <target state="translated">设置,那么要编码()或解码()的源字符串将被覆盖。如果你对这个不感兴趣,那就用位掩码来进行位掩码。</target>
        </trans-unit>
        <trans-unit id="bbdac3cf799e738c5a8da93062efb7bc674a7966" translate="yes" xml:space="preserve">
          <source>is shorter than the</source>
          <target state="translated">短于</target>
        </trans-unit>
        <trans-unit id="09e367c3fc5cc8d794bb19d7c88ac5b3dbdeee84" translate="yes" xml:space="preserve">
          <source>is similar to:</source>
          <target state="translated">是类似于:</target>
        </trans-unit>
        <trans-unit id="252ba6878cfe0ead48b091a1c7b126be1c7dff77" translate="yes" xml:space="preserve">
          <source>is simply a named option of &lt;b&gt;Pod::Parser&lt;/b&gt; with a value that corresponds to a certain specified behavior. These various behaviors of &lt;b&gt;Pod::Parser&lt;/b&gt; may be enabled/disabled by setting or unsetting one or more</source>
          <target state="translated">只是&lt;b&gt;Pod :: Parser&lt;/b&gt;的命名选项，其值对应于特定的指定行为。可以通过设置或取消设置一个或多个来启用/禁用&lt;b&gt;Pod :: Parser的&lt;/b&gt;这些各种行为</target>
        </trans-unit>
        <trans-unit id="a84848b3c3eaf21ad8fc8af050d6c81e580ed346" translate="yes" xml:space="preserve">
          <source>is simply opened and read; no special modes or I/O disciplines are used. To change this, set the optional</source>
          <target state="translated">只是简单地打开和读取;没有使用特殊模式或I/O纪律。要改变这一点,请将可选的</target>
        </trans-unit>
        <trans-unit id="fbcaf1a2e7b687efcdea29a64a0429d2d73c416e" translate="yes" xml:space="preserve">
          <source>is skipped, including all its sub-directories. The default is to 'die' in such a case.</source>
          <target state="translated">被跳过,包括其所有子目录。在这种情况下,默认为 &quot;死&quot;。</target>
        </trans-unit>
        <trans-unit id="d07ec6fe2fa8d718767624f5b566e68e8b571349" translate="yes" xml:space="preserve">
          <source>is skipped, including all its sub-directories. The default is to &lt;code&gt;die&lt;/code&gt; in such a case.</source>
          <target state="translated">将被跳过，包括其所有子目录。默认情况下将在这种情况下 &lt;code&gt;die&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="57e430e116971e873eefc3dde4fa051e8cf43562" translate="yes" xml:space="preserve">
          <source>is slower than</source>
          <target state="translated">慢于</target>
        </trans-unit>
        <trans-unit id="d049167d37668316c130f710bc1870b3a57a2719" translate="yes" xml:space="preserve">
          <source>is something that produces a stream of TAP for the parser to consume, such as an executable file, a text file, an archive, an IO handle, a database, etc. &lt;code&gt;TAP::Parser::Source&lt;/code&gt; s encapsulate these</source>
          <target state="translated">是生成供分析器使用的TAP流的东西，例如可执行文件，文本文件，存档，IO句柄，数据库等 &lt;code&gt;TAP::Parser::Source&lt;/code&gt; 封装了这些内容</target>
        </trans-unit>
        <trans-unit id="a9db67dab27a46603c05f9ac7e3bf48cac90db7c" translate="yes" xml:space="preserve">
          <source>is something that produces a stream of TAP for the parser to consume, such as an executable file, a text file, an archive, an IO handle, a database, etc. &lt;code&gt;TAP::Parser::Source&lt;/code&gt;s encapsulate these</source>
          <target state="translated">是生成供分析器使用的TAP流的东西，例如可执行文件，文本文件，存档，IO句柄，数据库等 &lt;code&gt;TAP::Parser::Source&lt;/code&gt; 封装了这些内容</target>
        </trans-unit>
        <trans-unit id="af613653b864ec6673c0a78e8010cf57eedfaf6b" translate="yes" xml:space="preserve">
          <source>is somewhat of a degenerate case, and just gets turned into:</source>
          <target state="translated">是有些堕落的情况,就会变成。</target>
        </trans-unit>
        <trans-unit id="8b9b368c8e30a34002bdd9aed6ed229cd19c93d2" translate="yes" xml:space="preserve">
          <source>is sorted by code point order after complementing, and any</source>
          <target state="translated">补全后按码点顺序排序,任何一个</target>
        </trans-unit>
        <trans-unit id="cf7d7bb7149d7e5681ec3810867367ffae9f625f" translate="yes" xml:space="preserve">
          <source>is sorted by code point order, then complemented. If</source>
          <target state="translated">是按码点顺序排序,然后进行补充。如果</target>
        </trans-unit>
        <trans-unit id="e9ef489bd0e8e4faddde7bba7424e123d5cb2cdf" translate="yes" xml:space="preserve">
          <source>is substituted, and resulting binaries will be a mess.</source>
          <target state="translated">被替代,产生的二进制文件将是一团糟。</target>
        </trans-unit>
        <trans-unit id="052a7e08700d6ed0548c1225b701cbbfb383a3a2" translate="yes" xml:space="preserve">
          <source>is suggested instead. See also &lt;a href=&quot;perlhacktips#PERL_MEM_LOG&quot;&gt;&quot;PERL_MEM_LOG&quot; in perlhacktips&lt;/a&gt;.</source>
          <target state="translated">建议使用。另请参见&lt;a href=&quot;perlhacktips#PERL_MEM_LOG&quot;&gt;perlhacktips中的&amp;ldquo; PERL_MEM_LOG&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="598b73ec92930dcb2052eb812846ae6b23e7a9f4" translate="yes" xml:space="preserve">
          <source>is suggested instead. See also &lt;a href=&quot;perlhacktips#PERL_MEM_LOG&quot;&gt;PERL_MEM_LOG in perlhacktips&lt;/a&gt;.</source>
          <target state="translated">建议使用。另请参见&lt;a href=&quot;perlhacktips#PERL_MEM_LOG&quot;&gt;perlhacktips中的PERL_MEM_LOG&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0f36c7e47ba89397191d8268fee1d7e7b3176375" translate="yes" xml:space="preserve">
          <source>is supported by Encode, any source encoding is fine.</source>
          <target state="translated">Encode支持,任何源码都可以。</target>
        </trans-unit>
        <trans-unit id="f26f422c33326b47a62f1cb9a45fdcf68258f29a" translate="yes" xml:space="preserve">
          <source>is that it indiscriminately applies the specified transformation to the entire text of your source program. So something like:</source>
          <target state="translated">是它不分青红皂白地将指定的转换应用到你的源程序的整个文本中。所以类似于:</target>
        </trans-unit>
        <trans-unit id="1c252327fd91114ad8e7b5b32ecd2321f2c74c06" translate="yes" xml:space="preserve">
          <source>is the &lt;code&gt;chr()&lt;/code&gt; of a large code point), and as the upper limits in loops.</source>
          <target state="translated">是较大代码点的 &lt;code&gt;chr()&lt;/code&gt; ），并作为循环的上限。</target>
        </trans-unit>
        <trans-unit id="988ce70c85eae79d0fe25b4054ce79630b89879b" translate="yes" xml:space="preserve">
          <source>is the OP that needs optimizing;</source>
          <target state="translated">是需要优化的OP。</target>
        </trans-unit>
        <trans-unit id="338540b0e9d83bd77bd1013d1cc68e0e7753e278" translate="yes" xml:space="preserve">
          <source>is the OP that requested the eval, and will normally be an &lt;code&gt;OP_ENTEREVAL&lt;/code&gt; , &lt;code&gt;OP_DOFILE&lt;/code&gt; or &lt;code&gt;OP_REQUIRE&lt;/code&gt; .</source>
          <target state="translated">是请求评估的OP，通常为 &lt;code&gt;OP_ENTEREVAL&lt;/code&gt; ， &lt;code&gt;OP_DOFILE&lt;/code&gt; 或 &lt;code&gt;OP_REQUIRE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8903a76f039c2f463dfadeb9edd00e8c64dbe46d" translate="yes" xml:space="preserve">
          <source>is the OP that requested the eval, and will normally be an &lt;code&gt;OP_ENTEREVAL&lt;/code&gt;, &lt;code&gt;OP_DOFILE&lt;/code&gt; or &lt;code&gt;OP_REQUIRE&lt;/code&gt;.</source>
          <target state="translated">是请求评估的OP，通常为 &lt;code&gt;OP_ENTEREVAL&lt;/code&gt; ， &lt;code&gt;OP_DOFILE&lt;/code&gt; 或 &lt;code&gt;OP_REQUIRE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="503522920752d3b808908bb7e985e21cf9217310" translate="yes" xml:space="preserve">
          <source>is the Unicode code point (in any number of hex digits) of the character that cannot be found in the character repertoire of the encoding.</source>
          <target state="translated">是指在编码的字符库中找不到的字符的Unicode码点(以任意数量的十六进制数字)。</target>
        </trans-unit>
        <trans-unit id="b435409a7d8e12b8eb19aeb5a153ffd1f9f409bc" translate="yes" xml:space="preserve">
          <source>is the access mode and the encoding format to open the file with;</source>
          <target state="translated">是访问模式和打开文件的编码格式。</target>
        </trans-unit>
        <trans-unit id="5fa370b47b540f6499c736b9b14daa48b0750be8" translate="yes" xml:space="preserve">
          <source>is the body of the block. Returns the block, possibly modified.</source>
          <target state="translated">是代码块的主体。返回可能被修改的代码块。</target>
        </trans-unit>
        <trans-unit id="0ae28d04d97b4db2036c9e56276e357f10acc52e" translate="yes" xml:space="preserve">
          <source>is the class we are attaching to,</source>
          <target state="translated">是我们要附加的类。</target>
        </trans-unit>
        <trans-unit id="88c2f81141fada39655c45626c041dad52ddc90e" translate="yes" xml:space="preserve">
          <source>is the debugging one. When called with an argument, switches to debugging or non-debugging dispatcher depending on the argument (active for newly-entered subs/etc only). (The returned value is for the dispatcher before the modification.)</source>
          <target state="translated">是调试型的。有参数时,根据参数的不同,切换到调试或非调试调度器(仅对新输入的子程序等有效)。返回的值是修改前的调度器的值。</target>
        </trans-unit>
        <trans-unit id="82c52d1d716f93b650732617909547f222352c02" translate="yes" xml:space="preserve">
          <source>is the direct equivalent of this bit of Perl</source>
          <target state="translated">直接相当于Perl中的这一点</target>
        </trans-unit>
        <trans-unit id="1fb2b7c32e3e6b82afdc74d9253d0b3262b0d7c9" translate="yes" xml:space="preserve">
          <source>is the empty string. Otherwise, it is an inferior, but still better-than-nothing alternative folding to</source>
          <target state="translated">是空字符串。否则,它是一个较差的,但仍比没有好的替代性折叠,以达到</target>
        </trans-unit>
        <trans-unit id="b4e2abd936326e926d92e153325a90b9130254a2" translate="yes" xml:space="preserve">
          <source>is the external name of the file you want opened.</source>
          <target state="translated">是您要打开的文件的外部名称。</target>
        </trans-unit>
        <trans-unit id="acae083d8f7267d56411d4d8123fe8329504c47b" translate="yes" xml:space="preserve">
          <source>is the famous imaginary number introduced above. Conversion between this form and the cartesian form &lt;code&gt;a + bi&lt;/code&gt; is immediate:</source>
          <target state="translated">是上面介绍的著名的虚数。这种形式和笛卡尔形式 &lt;code&gt;a + bi&lt;/code&gt; 之间的转换是立即的：</target>
        </trans-unit>
        <trans-unit id="e5958b1e8af4ba98be9cc22430ff29e15f04e50c" translate="yes" xml:space="preserve">
          <source>is the file to read for POD source (the POD can be embedded in code). If</source>
          <target state="translated">是读取POD源的文件(POD可以嵌入代码中)。如果</target>
        </trans-unit>
        <trans-unit id="4a902a3b5a686c36c34a6d4895c350e6d72563d5" translate="yes" xml:space="preserve">
          <source>is the hex representation of the octet that could not be decoded to utf8. When you encode, &lt;code&gt;\x{&lt;i&gt;HHHH&lt;/i&gt;}&lt;/code&gt; will be inserted, where</source>
          <target state="translated">是八位位组的十六进制表示形式，无法将其解码为utf8。编码时，将插入 &lt;code&gt;\x{&lt;i&gt;HHHH&lt;/i&gt;}&lt;/code&gt; ，其中</target>
        </trans-unit>
        <trans-unit id="504ac0735ae10a95e2b5ee3e369194696677007c" translate="yes" xml:space="preserve">
          <source>is the hexadecimal number.</source>
          <target state="translated">是十六进制数。</target>
        </trans-unit>
        <trans-unit id="98790fd2c6f05473e5c44b7acdc0f6b4506f2f5e" translate="yes" xml:space="preserve">
          <source>is the index into that array of the layer being called. The macro &lt;code&gt;PerlIOArg&lt;/code&gt; will return a (possibly &lt;code&gt;NULL&lt;/code&gt; ) SV * for the argument passed to the layer.</source>
          <target state="translated">是被调用层的数组的索引。宏 &lt;code&gt;PerlIOArg&lt;/code&gt; 将为传递给该层的参数返回一个SV * （可能为 &lt;code&gt;NULL&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="93f2420f6bb2d057f322859562784230f858ad3f" translate="yes" xml:space="preserve">
          <source>is the index into that array of the layer being called. The macro &lt;code&gt;PerlIOArg&lt;/code&gt; will return a (possibly &lt;code&gt;NULL&lt;/code&gt;) SV * for the argument passed to the layer.</source>
          <target state="translated">是被调用层的数组的索引。 &lt;code&gt;PerlIOArg&lt;/code&gt; 宏将为传递给该层的参数返回SV * （可能为 &lt;code&gt;NULL&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="142db92371cc5426856fa3d444ddae687efa8615" translate="yes" xml:space="preserve">
          <source>is the last argument in the list.</source>
          <target state="translated">是列表中的最后一个参数。</target>
        </trans-unit>
        <trans-unit id="a14b49226b3bbb81004f3cb1f765bb5fef97f5a8" translate="yes" xml:space="preserve">
          <source>is the list-type op, and</source>
          <target state="translated">是列表类型的操作,而</target>
        </trans-unit>
        <trans-unit id="f82606a57221f2b4b38ede02bc6cd6626d56d5e3" translate="yes" xml:space="preserve">
          <source>is the list-type op.</source>
          <target state="translated">是列表类型的操作。</target>
        </trans-unit>
        <trans-unit id="cafab01435fe922ebcb5d5cff02f00617e1abe22" translate="yes" xml:space="preserve">
          <source>is the mapped drive to the sys: volume of the server where Perl on NetWare is installed. Now typing</source>
          <target state="translated">是映射到安装 Perl on NetWare 的服务器的 sys:卷的驱动器。现在输入</target>
        </trans-unit>
        <trans-unit id="5fa4a40ee43f92498170d49135ea24ebd1ead4cd" translate="yes" xml:space="preserve">
          <source>is the moral equivalent of these two:</source>
          <target state="translated">是这两者的道德等价物。</target>
        </trans-unit>
        <trans-unit id="14b3a81aac7cf79ce51c3e68af0806f7f4937ca7" translate="yes" xml:space="preserve">
          <source>is the most popular. UTF-8 is a variable length encoding that encodes Unicode characters as 1 to 4 bytes. Other encodings include UTF-16 and UTF-32 and their big- and little-endian variants (UTF-8 is byte-order independent). The ISO/IEC 10646 defines the UCS-2 and UCS-4 encoding forms.</source>
          <target state="translated">是最流行的。UTF-8是一种可变长度的编码,将Unicode字符编码为1至4个字节。其他编码包括UTF-16和UTF-32以及它们的大字节和小字节变体(UTF-8与字节顺序无关)。ISO/IEC 10646定义了UCS-2和UCS-4编码形式。</target>
        </trans-unit>
        <trans-unit id="0b4974b8d2e6f377f9801c3b800b1ac0b7c4207d" translate="yes" xml:space="preserve">
          <source>is the name of the extension, with all &lt;code&gt;::&lt;/code&gt; replaced by &lt;code&gt;.&lt;/code&gt; (e.g. the library module for extension Foo::Bar would be copied to a</source>
          <target state="translated">是扩展名，所有 &lt;code&gt;::&lt;/code&gt; 替换为 &lt;code&gt;.&lt;/code&gt; （例如，扩展名为Foo :: Bar的库模块将被复制到</target>
        </trans-unit>
        <trans-unit id="fdcdffe2e65ad3302d98757411e195b4ad6675af" translate="yes" xml:space="preserve">
          <source>is the name of the module to load. If the string specified does not contain the package separator characters &quot;::&quot;, it is assumed to refer to the full module name &quot;DBM_Filter::name&quot;. This means that the full names for canned filters, &quot;null&quot; and &quot;utf8&quot;, included with this module are:</source>
          <target state="translated">是要加载的模块的名称,如果指定的字符串不包含分隔符&quot;::&quot;,则假定是指完整的模块名称 &quot;DBM_Filter::name&quot;。如果指定的字符串不包含包的分隔符&quot;::&quot;,它被认为是指完整的模块名称 &quot;DBM_Filter::name&quot;。这意味着罐装过滤器的完整名称 &quot;null &quot;和 &quot;utf8&quot;,包括这个模块。</target>
        </trans-unit>
        <trans-unit id="0de37e5050d6ab02ac54039af959dc47e7ba20d0" translate="yes" xml:space="preserve">
          <source>is the name of the package, and is only used in comments inside the generated C code.</source>
          <target state="translated">是包的名称,只在生成的C代码中的注释中使用。</target>
        </trans-unit>
        <trans-unit id="45440de46c4177a6572cf02f38585860def2ca1a" translate="yes" xml:space="preserve">
          <source>is the name, and the &lt;code&gt;[:&lt;/code&gt; and &lt;code&gt;:]&lt;/code&gt; delimiters. POSIX character classes only appear</source>
          <target state="translated">是名称，以及 &lt;code&gt;[:&lt;/code&gt; 和 &lt;code&gt;:]&lt;/code&gt; 分隔符。POSIX字符类仅出现</target>
        </trans-unit>
        <trans-unit id="896190cdbc3b73377c85418c4564a09f6ac5486e" translate="yes" xml:space="preserve">
          <source>is the number assigned to a character: for example, in EBCDIC the character &quot;A&quot; is usually assigned the number 193. In Unicode, the character &quot;A&quot; is assigned the number 65. All the code points in ASCII and Latin-1 (ISO 8859-1) have the same meaning in Unicode. All three of the recognized EBCDIC code sets have 256 code points, and in each code set, all 256 code points are mapped to equivalent Latin1 code points. Obviously, &quot;A&quot; will map to &quot;A&quot;, &quot;B&quot; =&amp;gt; &quot;B&quot;, &quot;%&quot; =&amp;gt; &quot;%&quot;, etc., for all printable characters in Latin1 and these code pages.</source>
          <target state="translated">是分配给字符的数字：例如，在EBCDIC中，字符&amp;ldquo; A&amp;rdquo;通常被分配数字193。在Unicode中，字符&amp;ldquo; A&amp;rdquo;被分配了数字65。所有以ASCII和Latin-1（ ISO 8859-1）在Unicode中具有相同的含义。所有三个公认的EBCDIC代码集都有256个代码点，并且在每个代码集中，所有256个代码点都映射到等效的Latin1代码点。显然，对于Latin1和这些代码页中的所有可打印字符，&amp;ldquo; A&amp;rdquo;将映射为&amp;ldquo; A&amp;rdquo;，&amp;ldquo; B&amp;rdquo; =&amp;gt;&amp;ldquo; B&amp;rdquo;，&amp;ldquo;％&amp;rdquo; =&amp;gt;&amp;ldquo;％&amp;rdquo;等。</target>
        </trans-unit>
        <trans-unit id="44a3ced633aa8e3d881613e20fe3ca4570b01d8e" translate="yes" xml:space="preserve">
          <source>is the number of spaces to indent, defaulting to 6.</source>
          <target state="translated">是缩进的空格数,默认为6。</target>
        </trans-unit>
        <trans-unit id="f35768e77df2a6fcb46d380fc0c5c7af5c55fc6d" translate="yes" xml:space="preserve">
          <source>is the object to serialize,</source>
          <target state="translated">是要序列化的对象。</target>
        </trans-unit>
        <trans-unit id="490225a54a9ac66bcdb59f92017f41f299257ed1" translate="yes" xml:space="preserve">
          <source>is the op being considered, normally an &lt;code&gt;rv2cv&lt;/code&gt; op. A pointer to the identified subroutine is returned, if it could be determined statically, and a null pointer is returned if it was not possible to determine statically.</source>
          <target state="translated">是要考虑的op，通常是 &lt;code&gt;rv2cv&lt;/code&gt; op。如果可以静态确定，则返回指向已标识子例程的指针，如果无法静态确定，则返回空指针。</target>
        </trans-unit>
        <trans-unit id="346d72197b82381e3d135c3fd096d1560c48b51d" translate="yes" xml:space="preserve">
          <source>is the op to append to the list.</source>
          <target state="translated">是要追加到列表中的操作。</target>
        </trans-unit>
        <trans-unit id="2c471482064fafead892cdf7b22397b6be3fe1e9" translate="yes" xml:space="preserve">
          <source>is the op to prepend to the list, and</source>
          <target state="translated">是要放在列表前的操作,而</target>
        </trans-unit>
        <trans-unit id="aaf68fac1b03ed7c6353ab95af2dd6b8cc61684c" translate="yes" xml:space="preserve">
          <source>is the op tree, and</source>
          <target state="translated">是运算树,而</target>
        </trans-unit>
        <trans-unit id="3684b3a23a1a941786c7c86346c047661fcfe052" translate="yes" xml:space="preserve">
          <source>is the opcode of a binary operator, such as &lt;code&gt;OP_BIT_OR&lt;/code&gt; , then an op is constructed that performs the binary operation and assigns the result to the left argument. Either way, if</source>
          <target state="translated">是二进制运算符的操作码，例如 &lt;code&gt;OP_BIT_OR&lt;/code&gt; ，则构造一个执行二进制运算并将结果分配给left参数的op。无论哪种方式，如果</target>
        </trans-unit>
        <trans-unit id="a0a985ac039d3d2ad165d51298ff6ea64e498ec2" translate="yes" xml:space="preserve">
          <source>is the opcode.</source>
          <target state="translated">是操作码。</target>
        </trans-unit>
        <trans-unit id="185ceb5c9d854b05a21926141803af21e0fce555" translate="yes" xml:space="preserve">
          <source>is the outer pad name that this one mirrors. The returned pad name has the PADNAMEt_OUTER flag already set.</source>
          <target state="translated">是这个文件镜像的外部垫名。返回的垫名已经设置了PADNAMEt_OUTER标志。</target>
        </trans-unit>
        <trans-unit id="a6ee3b580c0eceeeca1f85f9032f86a8c10b6343" translate="yes" xml:space="preserve">
          <source>is the pad offset of the scalar lexical variable that will be affected. If it is 0, the global $_ will be used.</source>
          <target state="translated">是将被影响的标量词法变量的焊盘偏移量。如果是0,则使用全局的$_。</target>
        </trans-unit>
        <trans-unit id="075349611fc93d2e62829ba77d41e494ad441dd4" translate="yes" xml:space="preserve">
          <source>is the perl version the code should be backwards compatible with. It defaults to the version of perl running the subroutine. If</source>
          <target state="translated">是代码应该向后兼容的perl版本。它的默认值是运行子程序的perl版本。如果</target>
        </trans-unit>
        <trans-unit id="2e519216b0de8348846fa9b4a5055de6958ae755" translate="yes" xml:space="preserve">
          <source>is the point whose coordinates are (a, b). Actually, it would be the vector originating from (0, 0) to (a, b). It follows that the addition of two complex numbers is a vectorial addition.</source>
          <target state="translated">是坐标为(a,b)的点。实际上,它应该是源于(0,0)到(a,b)的向量。由此可见,两个复数的加法是一个向量加法。</target>
        </trans-unit>
        <trans-unit id="2cc4f790eddde04d02f931089ea9bbb40ba3a6a4" translate="yes" xml:space="preserve">
          <source>is the portion of the extension's name after the last &lt;code&gt;::&lt;/code&gt; , which translates to the full file specification of the shareable image.</source>
          <target state="translated">是扩展名中最后一个 &lt;code&gt;::&lt;/code&gt; 后面的部分，它转换为可共享映像的完整文件规范。</target>
        </trans-unit>
        <trans-unit id="1d08d53113fc0a94af8471c935f02ee0009e286c" translate="yes" xml:space="preserve">
          <source>is the portion of the extension's name after the last &lt;code&gt;::&lt;/code&gt;, which translates to the full file specification of the shareable image.</source>
          <target state="translated">是扩展名中最后一个 &lt;code&gt;::&lt;/code&gt; 后面的部分，它转换为可共享映像的完整文件规范。</target>
        </trans-unit>
        <trans-unit id="2d16c45482f74eb9930301a0ecafdb6a012a8de5" translate="yes" xml:space="preserve">
          <source>is the portion of the extension's name following the last &lt;code&gt;::&lt;/code&gt; ), containing the XS code,</source>
          <target state="translated">是扩展名中最后一个 &lt;code&gt;::&lt;/code&gt; :）之后的部分，其中包含XS代码，</target>
        </trans-unit>
        <trans-unit id="09595b269fa8835305f84c8932e8a9420965f321" translate="yes" xml:space="preserve">
          <source>is the portion of the extension's name following the last &lt;code&gt;::&lt;/code&gt;), containing the XS code,</source>
          <target state="translated">是扩展名的最后一个 &lt;code&gt;::&lt;/code&gt; :）之后的部分，其中包含XS代码，</target>
        </trans-unit>
        <trans-unit id="ff4bfee209d75ed4a7ac713cfc5d716f2c1e2be4" translate="yes" xml:space="preserve">
          <source>is the previous OP optimized, whose &lt;code&gt;op_next&lt;/code&gt; points to</source>
          <target state="translated">是先前优化的OP，其 &lt;code&gt;op_next&lt;/code&gt; 指向</target>
        </trans-unit>
        <trans-unit id="7959ce09f1e3e9e7ae880e926860f28302895b7e" translate="yes" xml:space="preserve">
          <source>is the primary name of this option. When a program executes under &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; strict&lt;/code&gt; (recommended), these variables must be pre-declared with our() or &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; vars&lt;/code&gt; .</source>
          <target state="translated">是此选项的主要名称。当程序在 &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; strict&lt;/code&gt; &lt;a href=&quot;../functions/use&quot;&gt;使用&lt;/a&gt;（推荐）条件下执行时，必须使用our（）或 &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; vars&lt;/code&gt; 预先声明这些变量。</target>
        </trans-unit>
        <trans-unit id="c596b3e5f893cc6fd687fc9a9026e5a1b39e504c" translate="yes" xml:space="preserve">
          <source>is the primary name of this option. When a program executes under &lt;code&gt;use strict&lt;/code&gt; (recommended), these variables must be pre-declared with our() or &lt;code&gt;use vars&lt;/code&gt;.</source>
          <target state="translated">是此选项的主要名称。当程序在 &lt;code&gt;use strict&lt;/code&gt; （推荐）条件下执行时，必须使用our（）或 &lt;code&gt;use vars&lt;/code&gt; 预先声明这些变量。</target>
        </trans-unit>
        <trans-unit id="dc92b1dcb6d32cc02b0b929328d0aa4e792bcfc8" translate="yes" xml:space="preserve">
          <source>is the property of a particular build of perl, and does not depend on the current process. If you do not provide the optional argument to the functions mstats_fillhash(), fill_mstats(), mstats2hash(), then the information in fields &lt;code&gt;mem_size&lt;/code&gt; , &lt;code&gt;available_size&lt;/code&gt; is not updated.</source>
          <target state="translated">是perl特定版本的属性，并且不依赖于当前过程。如果不向函数mstats_fillhash（），fill_mstats（），mstats2hash（）提供可选参数，则不会更新字段 &lt;code&gt;mem_size&lt;/code&gt; ， &lt;code&gt;available_size&lt;/code&gt; 中的信息。</target>
        </trans-unit>
        <trans-unit id="9521515ec3daef3fffc6d060ea075ddd5b9b9b12" translate="yes" xml:space="preserve">
          <source>is the property of a particular build of perl, and does not depend on the current process. If you do not provide the optional argument to the functions mstats_fillhash(), fill_mstats(), mstats2hash(), then the information in fields &lt;code&gt;mem_size&lt;/code&gt;, &lt;code&gt;available_size&lt;/code&gt; is not updated.</source>
          <target state="translated">是perl特定版本的属性，并且不依赖于当前过程。如果不向函数mstats_fillhash（），fill_mstats（），mstats2hash（）提供可选参数，则不会更新字段 &lt;code&gt;mem_size&lt;/code&gt; ， &lt;code&gt;available_size&lt;/code&gt; 中的信息。</target>
        </trans-unit>
        <trans-unit id="e0a2bbcb355a7bdbc9b5d8f8dbd1d6a1892216c8" translate="yes" xml:space="preserve">
          <source>is the reason for version-specific mangling of the DLL name for perl DLL.</source>
          <target state="translated">是版本特定的原因,对perl DLL的DLL名称进行了混淆。</target>
        </trans-unit>
        <trans-unit id="533e118d459a0417538dc17219094be54c0e410e" translate="yes" xml:space="preserve">
          <source>is the recommended way to report bugs in the perl interpreter itself or any of the standard library modules back to the developers; please read through the documentation for</source>
          <target state="translated">是推荐的向开发者报告 perl 解释器本身或任何标准库模块中的错误的方式;请阅读文档中的</target>
        </trans-unit>
        <trans-unit id="059ae99546fd6d2b968c421a21e81f0cc4cf52d3" translate="yes" xml:space="preserve">
          <source>is the recommended wide native character-aware way of saying</source>
          <target state="translated">是推荐的广义本位字的表达方式。</target>
        </trans-unit>
        <trans-unit id="b99ef0d01d54e7d02d4e29eb81f05081577ed0c4" translate="yes" xml:space="preserve">
          <source>is the root of the optree representing the scope; it is a double pointer so you can replace the OP if you need to.</source>
          <target state="translated">是代表作用域的optree的根,它是一个双指针,所以你可以在需要的时候替换OP。</target>
        </trans-unit>
        <trans-unit id="841108c86e9fbb4edafbf1fc269ca06fbd9c2aa7" translate="yes" xml:space="preserve">
          <source>is the same as</source>
          <target state="translated">是一样的</target>
        </trans-unit>
        <trans-unit id="5664826178886ed6dc31d7a56be756161e89003e" translate="yes" xml:space="preserve">
          <source>is the same as this:</source>
          <target state="translated">与此相同。</target>
        </trans-unit>
        <trans-unit id="ea9ca7dc351fef7638a53b6e78fc2c745436b2f0" translate="yes" xml:space="preserve">
          <source>is the same as using the program:</source>
          <target state="translated">和使用程序是一样的。</target>
        </trans-unit>
        <trans-unit id="c789dc7dbbbae7937501c4047bbd4ca49aed4ac3" translate="yes" xml:space="preserve">
          <source>is the savestack index returned by &lt;code&gt;block_start&lt;/code&gt; , and</source>
          <target state="translated">是 &lt;code&gt;block_start&lt;/code&gt; 返回的保存堆栈索引，并且</target>
        </trans-unit>
        <trans-unit id="4a63caa46b829fcb01fe4a8c31e68b7e20d84a2f" translate="yes" xml:space="preserve">
          <source>is the scalar value to store for this key.</source>
          <target state="translated">是这个键的标量值。</target>
        </trans-unit>
        <trans-unit id="cb053ed2ecf771fb84e4c68638f701622bf37193" translate="yes" xml:space="preserve">
          <source>is the serialized string you returned to the engine in &lt;code&gt;STORABLE_freeze&lt;/code&gt; , and there may be an optional list of references, in the same order you gave them at serialization time, pointing to the deserialized objects (which have been processed courtesy of the Storable engine).</source>
          <target state="translated">是您在 &lt;code&gt;STORABLE_freeze&lt;/code&gt; 中返回给引擎的序列化字符串，并且可能有一个可选的引用列表，其顺序与您在序列化时赋予它们的顺序相同，指向反序列化的对象（已由Storable引擎处理）。</target>
        </trans-unit>
        <trans-unit id="e03fca6945b40ffe977ca31e97fd568ae734dba4" translate="yes" xml:space="preserve">
          <source>is the serialized string you returned to the engine in &lt;code&gt;STORABLE_freeze&lt;/code&gt;, and there may be an optional list of references, in the same order you gave them at serialization time, pointing to the deserialized objects (which have been processed courtesy of the Storable engine).</source>
          <target state="translated">是您在 &lt;code&gt;STORABLE_freeze&lt;/code&gt; 中返回给引擎的序列化字符串，并且可能有一个可选的引用列表，其顺序与您在序列化时赋予它们的顺序相同，指向反序列化的对象（已由Storable引擎处理）。</target>
        </trans-unit>
        <trans-unit id="681d5ca1a6522883a0d7e74c2ad38f23f79e4445" translate="yes" xml:space="preserve">
          <source>is the shortest distance between two points on a sphere. The distance is in &lt;code&gt;$rho&lt;/code&gt; units. The &lt;code&gt;$rho&lt;/code&gt; is optional, it defaults to 1 (the unit sphere), therefore the distance defaults to radians.</source>
          <target state="translated">是球体上两点之间的最短距离。距离以 &lt;code&gt;$rho&lt;/code&gt; 单位表示。的 &lt;code&gt;$rho&lt;/code&gt; 是可选的，其默认值为1（单位球面），因此，距离默认为弧度。</target>
        </trans-unit>
        <trans-unit id="bb152e814624de7f776388475643c5915a6bbc02" translate="yes" xml:space="preserve">
          <source>is the stored string for the resource object.</source>
          <target state="translated">是资源对象的存储字符串。</target>
        </trans-unit>
        <trans-unit id="7666856489819ec07e5e68fda7968ecdf4b7481e" translate="yes" xml:space="preserve">
          <source>is the string &lt;code&gt;&quot;\0X\0\0YZ&quot;&lt;/code&gt; .</source>
          <target state="translated">是字符串 &lt;code&gt;&quot;\0X\0\0YZ&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="828f98d65f01c2f29ac08b1050664335eaa94a07" translate="yes" xml:space="preserve">
          <source>is the string &lt;code&gt;&quot;\0X\0\0YZ&quot;&lt;/code&gt;.</source>
          <target state="translated">是字符串 &lt;code&gt;&quot;\0X\0\0YZ&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4af45b7011bdf9dc23ddbc9ab955c3a70b8a6852" translate="yes" xml:space="preserve">
          <source>is the string length, not the number of strings. With an explicit repeat count for pack, the packed string is adjusted to that length. For example:</source>
          <target state="translated">是字符串的长度,而不是字符串的数量。如果对pack有明确的重复次数,打包后的字符串就会调整为该长度。例如</target>
        </trans-unit>
        <trans-unit id="a38238d720532a1187dfe70331e701543f8d69a2" translate="yes" xml:space="preserve">
          <source>is the type returned by &lt;code&gt;ITEM&lt;/code&gt; s that don't specify their type. It defaults to the value of &lt;code&gt;default_type()&lt;/code&gt; .</source>
          <target state="translated">是 &lt;code&gt;ITEM&lt;/code&gt; 返回的类型，未指定其类型。它默认为 &lt;code&gt;default_type()&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="27bdcc62479e966704683954e7115bd5295a90a7" translate="yes" xml:space="preserve">
          <source>is the type returned by &lt;code&gt;ITEM&lt;/code&gt;s that don't specify their type. It defaults to the value of &lt;code&gt;default_type()&lt;/code&gt;.</source>
          <target state="translated">是 &lt;code&gt;ITEM&lt;/code&gt; 返回的类型，未指定其类型。默认为 &lt;code&gt;default_type()&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="62dd259d4f7a6605999861260db4a925294adb84" translate="yes" xml:space="preserve">
          <source>is the unknown layer.</source>
          <target state="translated">是未知层。</target>
        </trans-unit>
        <trans-unit id="7ebb9cb388028784d1ffeb685835e29c39c8a750" translate="yes" xml:space="preserve">
          <source>is the version of Perl you're using, as supplied in &lt;code&gt;$]&lt;/code&gt; , with '.' converted to '_'), or</source>
          <target state="translated">是您正在使用的Perl的版本，如 &lt;code&gt;$]&lt;/code&gt; 中所提供，带有'。'。转换为&amp;ldquo; _&amp;rdquo;），或</target>
        </trans-unit>
        <trans-unit id="d86848a821d3f7fe2d79c9f0d78ed8e669c62217" translate="yes" xml:space="preserve">
          <source>is the version of Perl you're using, as supplied in &lt;code&gt;$]&lt;/code&gt;, with '.' converted to '_'), or</source>
          <target state="translated">是您使用的Perl的版本，如 &lt;code&gt;$]&lt;/code&gt; 中所提供，带有'。'。转换为&amp;ldquo; _&amp;rdquo;），或</target>
        </trans-unit>
        <trans-unit id="334b91284c73938e4e816a510966fc314842a93e" translate="yes" xml:space="preserve">
          <source>is translated once when Perl starts up; any changes you make while Perl is running do not affect the behavior of &lt;code&gt;%ENV&lt;/code&gt; . If</source>
          <target state="translated">Perl启动时翻译一次；Perl运行时所做的任何更改都不会影响 &lt;code&gt;%ENV&lt;/code&gt; 的行为。如果</target>
        </trans-unit>
        <trans-unit id="835b2b86b7a9851f667539aaf9f75b67c695e04b" translate="yes" xml:space="preserve">
          <source>is translated once when Perl starts up; any changes you make while Perl is running do not affect the behavior of &lt;code&gt;%ENV&lt;/code&gt;. If</source>
          <target state="translated">Perl启动时翻译一次；Perl运行时所做的任何更改都不会影响 &lt;code&gt;%ENV&lt;/code&gt; 的行为。如果</target>
        </trans-unit>
        <trans-unit id="a86d775dd40947cb031e2e57ff35692497a46818" translate="yes" xml:space="preserve">
          <source>is treated as number of spaces to indent by. If &lt;code&gt;declare_types&lt;/code&gt; is true a &lt;code&gt;$types&lt;/code&gt; is always declared in the perl code generated, if defined and false never declared, and if undefined &lt;code&gt;$types&lt;/code&gt; is only declared if the values in</source>
          <target state="translated">被视为缩进的空格数。如果 &lt;code&gt;declare_types&lt;/code&gt; 为true，则始终在生成的perl代码中声明 &lt;code&gt;$types&lt;/code&gt; ，如果已定义且为false，则从不声明；如果未定义 &lt;code&gt;$types&lt;/code&gt; 则仅在</target>
        </trans-unit>
        <trans-unit id="10fa8676748c59212055af40992e63bcbc7c643b" translate="yes" xml:space="preserve">
          <source>is true (not empty or zero), generates the value of</source>
          <target state="translated">为真(不为空或为零),产生的值为</target>
        </trans-unit>
        <trans-unit id="48302db9668c7d7b445abda36a22e6062f411e8f" translate="yes" xml:space="preserve">
          <source>is true on all platforms. If you want native code points for the low 256, use the &lt;code&gt;&quot;W&quot;&lt;/code&gt; template. This means that the equivalences</source>
          <target state="translated">在所有平台上都是如此。如果要将本机代码点设置为低256，请使用 &lt;code&gt;&quot;W&quot;&lt;/code&gt; 模板。这意味着等价</target>
        </trans-unit>
        <trans-unit id="067d235b3d6dbb909f945abdb70f31cbc437b930" translate="yes" xml:space="preserve">
          <source>is true when we're part of a deep clone operation,</source>
          <target state="translated">当我们参与深度克隆行动时,是真的。</target>
        </trans-unit>
        <trans-unit id="779d38fac96628c599fdd2384e085d60ba46ca15" translate="yes" xml:space="preserve">
          <source>is true, also checks whether</source>
          <target state="translated">是否为真,同时检查</target>
        </trans-unit>
        <trans-unit id="45f8f7c6ce5b54b9230f2a84836b12d460e6184b" translate="yes" xml:space="preserve">
          <source>is true, ignore case. The default is to honour case.</source>
          <target state="translated">为真,忽略大小写。默认情况下,忽略大小写。</target>
        </trans-unit>
        <trans-unit id="4056d1d8ea1ba0fdc400bcac4f4b8f6e5cb5bd11" translate="yes" xml:space="preserve">
          <source>is true, it SHOULD modify</source>
          <target state="translated">为真,它应该修改</target>
        </trans-unit>
        <trans-unit id="e01d069b2f9d59305c080956514566b0ca93db4c" translate="yes" xml:space="preserve">
          <source>is true, returns false.</source>
          <target state="translated">为真,返回假。</target>
        </trans-unit>
        <trans-unit id="4c6f61c4a55f03174097ae702fb602dd769db21e" translate="yes" xml:space="preserve">
          <source>is true, search by dictionary order (ignore anything but word characters and whitespace). The default is honour all characters.</source>
          <target state="translated">为真,按字典顺序搜索(忽略除单词字符和空格以外的任何内容)。默认值是尊重所有字符。</target>
        </trans-unit>
        <trans-unit id="a68121a9e56ce0b0a4132675e2d7f2da532770a9" translate="yes" xml:space="preserve">
          <source>is true, the</source>
          <target state="translated">是真的</target>
        </trans-unit>
        <trans-unit id="ec9b11fcd9e9d4abe8ffa5611c1f06b9f3b4638a" translate="yes" xml:space="preserve">
          <source>is true, the AUTOLOAD subroutine falls back on AutoLoader::AUTOLOAD for all names that the constant() routine doesn't recognise.</source>
          <target state="translated">为真,则AUTOLOAD子程序会对所有constant()例程无法识别的名称回退到AutoLoader::AUTOLOAD。</target>
        </trans-unit>
        <trans-unit id="1c557d39d34bad4891cbefb6c9ce51864c16f310" translate="yes" xml:space="preserve">
          <source>is true, the scheme above allows the encoding to do as much as it can and tell the layer above how much that was. What is lacking at present is a mechanism to report what went wrong. The most likely interface will be an additional method call to the object, or perhaps (to avoid forcing per-stream objects on otherwise stateless encodings) an additional parameter.</source>
          <target state="translated">是真的,上面的方案可以让编码做多少就做多少,并告诉上一层是多少。目前缺乏的是报告出错的机制。最有可能的接口是对对象进行额外的方法调用,或者可能(为了避免在其他无状态编码上强行使用每流对象)增加一个参数。</target>
        </trans-unit>
        <trans-unit id="a5fb713f23256ce8adf865a7bb140abb92cbc783" translate="yes" xml:space="preserve">
          <source>is two characters, the first character is used as the left quote and the second as the right quoted; and if</source>
          <target state="translated">是两个字符,第一个字符作为左引号,第二个字符作为右引号;如果是</target>
        </trans-unit>
        <trans-unit id="da08ff0a55825cc7ad3dbe2e4beefb9e6a6ab73b" translate="yes" xml:space="preserve">
          <source>is unlinked.</source>
          <target state="translated">是没有联系的。</target>
        </trans-unit>
        <trans-unit id="99206005453caddd66236543e24f39a90d1fd368" translate="yes" xml:space="preserve">
          <source>is used &lt;b&gt;instead&lt;/b&gt; of &lt;code&gt;Compress::Zlib&lt;/code&gt; .</source>
          <target state="translated">用来&lt;b&gt;代替&lt;/b&gt;的 &lt;code&gt;Compress::Zlib&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="06a5664a2f773219be44f2da3af12da6c571ef76" translate="yes" xml:space="preserve">
          <source>is used &lt;b&gt;instead&lt;/b&gt; of &lt;code&gt;Compress::Zlib&lt;/code&gt;.</source>
          <target state="translated">用来&lt;b&gt;代替&lt;/b&gt;的 &lt;code&gt;Compress::Zlib&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="82cf7ac9ae1725690fb609a1273cc9ea666cc709" translate="yes" xml:space="preserve">
          <source>is used instead of &lt;code&gt;\x{&lt;i&gt;XXXX&lt;/i&gt;}&lt;/code&gt;.</source>
          <target state="translated">用于代替 &lt;code&gt;\x{&lt;i&gt;XXXX&lt;/i&gt;}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="db853bb4b5bdcd8035b1c491d509b51c38d42af0" translate="yes" xml:space="preserve">
          <source>is used instead. So we have</source>
          <target state="translated">是用来代替的。所以我们有</target>
        </trans-unit>
        <trans-unit id="2dcbc4ad74577a6ef7d69456f882a38971650f6a" translate="yes" xml:space="preserve">
          <source>is used instead. That copy is made after complementing under &lt;code&gt;/c&lt;/code&gt;.</source>
          <target state="translated">改为使用。该副本是在 &lt;code&gt;/c&lt;/code&gt; 下补全后生成的。</target>
        </trans-unit>
        <trans-unit id="114a44b9bc0762c878791a9634f7d000ad384ea0" translate="yes" xml:space="preserve">
          <source>is used to call a method from a Perl class. The parameter &lt;code&gt;methname&lt;/code&gt; corresponds to the name of the method to be called. Note that the class that the method belongs to is passed on the Perl stack rather than in the parameter list. This class can be either the name of the class (for a static method) or a reference to an object (for a virtual method). See &lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt; for more information on static and virtual methods and &lt;a href=&quot;#Using-call_method&quot;&gt;&quot;Using call_method&quot;&lt;/a&gt; for an example of using</source>
          <target state="translated">用于从Perl类调用方法。参数 &lt;code&gt;methname&lt;/code&gt; 对应于要调用的方法的名称。请注意，该方法所属的类是在Perl堆栈上传递的，而不是在参数列表中传递的。该类可以是该类的名称（对于静态方法），也可以是对对象的引用（对于虚拟方法）。有关静态和虚拟方法的更多信息，请参见&lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt;；有关&lt;a href=&quot;#Using-call_method&quot;&gt;使用&lt;/a&gt;示例，请参见&amp;ldquo;使用call_method&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="38f21bebe9090675b3b7c95faffad6681c98ff75" translate="yes" xml:space="preserve">
          <source>is used to call a method from a Perl class. The parameter &lt;code&gt;methname&lt;/code&gt; corresponds to the name of the method to be called. Note that the class that the method belongs to is passed on the Perl stack rather than in the parameter list. This class can be either the name of the class (for a static method) or a reference to an object (for a virtual method). See &lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt; for more information on static and virtual methods and &lt;a href=&quot;#Using-call_method&quot;&gt;Using call_method&lt;/a&gt; for an example of using</source>
          <target state="translated">用于从Perl类调用方法。参数 &lt;code&gt;methname&lt;/code&gt; 对应于要调用的方法的名称。请注意，该方法所属的类是在Perl堆栈上而不是在参数列表中传递的。该类可以是该类的名称（对于静态方法），也可以是对对象的引用（对于虚拟方法）。有关静态和虚拟方法的更多信息，请参见&lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt;；有关&lt;a href=&quot;#Using-call_method&quot;&gt;使用&lt;/a&gt;示例，请参见使用call_method。</target>
        </trans-unit>
        <trans-unit id="0981489ef48c17aa3fd2b1f4eb77d7d2fa17f92a" translate="yes" xml:space="preserve">
          <source>is used to create a &lt;a href=&quot;TAP::Parser::Source&quot;&gt;TAP::Parser::Source&lt;/a&gt; that is passed to the &lt;a href=&quot;#iterator_factory_class&quot;&gt;&quot;iterator_factory_class&quot;&lt;/a&gt; which in turn figures out how to handle the source and creates a &amp;lt;TAP::Parser::Iterator&amp;gt; for it. The iterator is used by the parser to read in the TAP stream.</source>
          <target state="translated">用于创建&lt;a href=&quot;TAP::Parser::Source&quot;&gt;TAP :: Parser :: Source&lt;/a&gt;，该源将传递到&lt;a href=&quot;#iterator_factory_class&quot;&gt;&amp;ldquo; iterator_factory_class&amp;rdquo;&lt;/a&gt;，后者进而说明如何处理源并为其创建&amp;lt;TAP :: Parser :: Iterator&amp;gt;。解析器使用迭代器读取TAP流。</target>
        </trans-unit>
        <trans-unit id="174c45b58d93e19a1bf9b115b40967fdc9b93c7c" translate="yes" xml:space="preserve">
          <source>is used to create a &lt;a href=&quot;parser/source&quot;&gt;TAP::Parser::Source&lt;/a&gt; that is passed to the &lt;a href=&quot;#iterator_factory_class&quot;&gt;iterator_factory_class&lt;/a&gt; which in turn figures out how to handle the source and creates a &amp;lt;TAP::Parser::Iterator&amp;gt; for it. The iterator is used by the parser to read in the TAP stream.</source>
          <target state="translated">用于创建传递给&lt;a href=&quot;#iterator_factory_class&quot;&gt;iterator_factory_class&lt;/a&gt;的&lt;a href=&quot;parser/source&quot;&gt;TAP :: Parser :: Source&lt;/a&gt;，后者进而找出如何处理源并为其创建&amp;lt;TAP :: Parser :: Iterator&amp;gt;。解析器使用迭代器来读取TAP流。</target>
        </trans-unit>
        <trans-unit id="01d126fdd256d487f3863154a4a9fd21f259f849" translate="yes" xml:space="preserve">
          <source>is used to indicate that the string may contain characters outside the system codepage. The caveat</source>
          <target state="translated">用于表示该字符串可能包含系统代码页以外的字符。注意事项</target>
        </trans-unit>
        <trans-unit id="58a0c535d91d03fa6af49240f75e7028c1041e6c" translate="yes" xml:space="preserve">
          <source>is used to provide a true or false value. It &lt;b&gt;must&lt;/b&gt; be represented as a defined value that is either &quot;1&quot; or &quot;0&quot; or stringifies to those values.</source>
          <target state="translated">用于提供一个真值或假值。它&lt;b&gt;必须&lt;/b&gt;被表示为所定义的值，该值可以是&amp;ldquo;1&amp;rdquo;或&amp;ldquo;0&amp;rdquo;或stringifies到这些值。</target>
        </trans-unit>
        <trans-unit id="3d08f94f5cb97d407acf7f344990711fbd64478a" translate="yes" xml:space="preserve">
          <source>is used to refer to UTF-8 on ASCII and ISO Latin based platforms and UTF-EBCDIC on EBCDIC based platforms.</source>
          <target state="translated">在ASCII和基于ISO拉丁语的平台上用于指UTF-8,在基于EBCDIC的平台上用于指UTF-EBCDIC。</target>
        </trans-unit>
        <trans-unit id="caef3d98540ddc9f2f1ce1a294bcbe58f435fe11" translate="yes" xml:space="preserve">
          <source>is used to store this status.</source>
          <target state="translated">是用来存储这个状态的。</target>
        </trans-unit>
        <trans-unit id="cfc4087e381d6c31bcd21efb188c1a03365045a7" translate="yes" xml:space="preserve">
          <source>is used when the &lt;code&gt;Name&lt;/code&gt; option is</source>
          <target state="translated">当&amp;ldquo; &lt;code&gt;Name&lt;/code&gt; 选项为</target>
        </trans-unit>
        <trans-unit id="d148088d7797718280b1177b22c2c5191737877f" translate="yes" xml:space="preserve">
          <source>is used, the following &lt;code&gt;&lt;a href=&quot;../functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt;s are used:</source>
          <target state="translated">使用时，使用以下 &lt;code&gt;&lt;a href=&quot;../functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="ae7fdf6d8fc6797de13c95b8f98316ef4c4a2465" translate="yes" xml:space="preserve">
          <source>is used, the following &lt;code&gt;open&lt;/code&gt;s are used:</source>
          <target state="translated">使用时，使用以下 &lt;code&gt;open&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="a6839d76bbb7783af5dc7927fd3ea8c02821e91c" translate="yes" xml:space="preserve">
          <source>is used.</source>
          <target state="translated">是用。</target>
        </trans-unit>
        <trans-unit id="0c7240c81a5b6100a1329f457d83532b0ff32851" translate="yes" xml:space="preserve">
          <source>is used. If no password is given and the login is</source>
          <target state="translated">被使用。如果没有给出密码,而登录是</target>
        </trans-unit>
        <trans-unit id="fe97f79326aa164bdecbb65e7fb757c2dd7af24b" translate="yes" xml:space="preserve">
          <source>is used. When you decode, the Unicode REPLACEMENT CHARACTER, code point U+FFFD, is used. If the data is supposed to be UTF-8, an optional lexical warning of warning category &lt;code&gt;&quot;utf8&quot;&lt;/code&gt; is given.</source>
          <target state="translated">用来。解码时，使用Unicode REPLACEMENT CHARACTER，代码点U + FFFD。如果数据应为UTF-8，则给出警告类别为 &lt;code&gt;&quot;utf8&quot;&lt;/code&gt; 的可选词汇警告。</target>
        </trans-unit>
        <trans-unit id="12235ad06fa18edfce70787b2cda7be75ef01ddb" translate="yes" xml:space="preserve">
          <source>is useful because it allows other code (typically parser support code or caching variables) to be defined before the filter is invoked. However, there is often no need for such a separation.</source>
          <target state="translated">是很有用的,因为它允许在调用过滤器之前定义其他代码(通常是解析器支持代码或缓存变量)。然而,通常不需要这样的分离。</target>
        </trans-unit>
        <trans-unit id="aaf2089f6908b9bf4054961eed0c357046e38336" translate="yes" xml:space="preserve">
          <source>is useful for counting characters in a class, or for squashing character sequences in a class.</source>
          <target state="translated">用于计算类中的字符,或压制类中的字符序列。</target>
        </trans-unit>
        <trans-unit id="4e47b26bd8204f22d84b37cecf46b2ae865ef9fd" translate="yes" xml:space="preserve">
          <source>is useful.</source>
          <target state="translated">是有用的。</target>
        </trans-unit>
        <trans-unit id="f99ba7774478458a9cfe3eda37c3b92d659e1e0f" translate="yes" xml:space="preserve">
          <source>is usually 1 for on, but higher values trigger additional warnings. See &lt;a href=&quot;#Warnings&quot;&gt;&quot;Warnings&quot;&lt;/a&gt;.</source>
          <target state="translated">通常为1表示开启，但较高的值会触发其他警告。请参阅&lt;a href=&quot;#Warnings&quot;&gt;&amp;ldquo;警告&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="40a7b397fd325b5ecbf0d373914724c1f6367724" translate="yes" xml:space="preserve">
          <source>is usually 1 for on, but higher values trigger additional warnings. See &lt;a href=&quot;#Warnings&quot;&gt;Warnings&lt;/a&gt;.</source>
          <target state="translated">通常为1表示开启，但较高的值会触发其他警告。请参阅&lt;a href=&quot;#Warnings&quot;&gt;警告&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="69bc4bb7fd74f861f5b8bca772f152dcc604661a" translate="yes" xml:space="preserve">
          <source>is valid and matches '0', '1', any alphabetic character, and the percent sign.</source>
          <target state="translated">是有效的,并且匹配'0'、'1'、任何字母字符和百分号。</target>
        </trans-unit>
        <trans-unit id="d231156292aeca125ab2ff401f5be71547c7f695" translate="yes" xml:space="preserve">
          <source>is where the main processing for the filter is done.</source>
          <target state="translated">是对滤波器进行主要处理的地方。</target>
        </trans-unit>
        <trans-unit id="30e01163fe1949f10b45b91d1e13f0c7637e25e7" translate="yes" xml:space="preserve">
          <source>is written into the &lt;a href=&quot;#PL_check&quot;&gt;PL_check&lt;/a&gt; array, while the value previously stored there is written to</source>
          <target state="translated">被写入&lt;a href=&quot;#PL_check&quot;&gt;PL_check&lt;/a&gt;数组，而先前存储在其中的值被写入</target>
        </trans-unit>
        <trans-unit id="680b8b11b1f1a95b7c654104af2981b4c44a0974" translate="yes" xml:space="preserve">
          <source>is your blessed reference for this particular instance.</source>
          <target state="translated">是你对这个特殊例子的祝福参考。</target>
        </trans-unit>
        <trans-unit id="637ede9f0bac88412365638ad04d0f903dece281" translate="yes" xml:space="preserve">
          <source>is zero or</source>
          <target state="translated">为零或</target>
        </trans-unit>
        <trans-unit id="da78c7a4809cb6ce24ac8e29b2195288ba32cd34" translate="yes" xml:space="preserve">
          <source>is zero, then a plain scalar or list assignment is constructed. Which type of assignment it is is automatically determined.</source>
          <target state="translated">是零,那么就会构造一个普通标量或列表赋值。自动确定是哪种类型的赋值。</target>
        </trans-unit>
        <trans-unit id="73710c24157228ed788a039ba81ae23fe31c7267" translate="yes" xml:space="preserve">
          <source>is($got, $want, $name)</source>
          <target state="translated">是($got,$want,$name)</target>
        </trans-unit>
        <trans-unit id="adf382e105547f2312d3ceff7b274ce6d91a6602" translate="yes" xml:space="preserve">
          <source>is($got, $want, $name, @diag)</source>
          <target state="translated">是($got,$want,$name,@diag)</target>
        </trans-unit>
        <trans-unit id="623d50572aae446dc358fd966327ce8c9a0ed204" translate="yes" xml:space="preserve">
          <source>is, if non-empty, the lowercase mapping for</source>
          <target state="translated">的小写映射,如果非空,则为</target>
        </trans-unit>
        <trans-unit id="3d7682c10121c3528254ad891855f87cf827fae6" translate="yes" xml:space="preserve">
          <source>is, if non-empty, the titlecase mapping for</source>
          <target state="translated">如果非空,则为</target>
        </trans-unit>
        <trans-unit id="17656293490b52e28e817d6f958f58501e80a596" translate="yes" xml:space="preserve">
          <source>is, if non-empty, the uppercase mapping for</source>
          <target state="translated">的大写映射,如果非空,则为</target>
        </trans-unit>
        <trans-unit id="cb18cfba59a431e4fe8a80b174c133778446c806" translate="yes" xml:space="preserve">
          <source>is, in short, an idhash with auto-registry. When an object (or, indeed, any reference) is used as a fieldhash key, the fieldhash is automatically registered for garbage collection with the object, as if &lt;code&gt;register $obj, \ %fieldhash&lt;/code&gt; had been called.</source>
          <target state="translated">简而言之，是具有自动注册功能的idhash。当将一个对象（或实际上是任何引用）用作字段哈希键时，该字段哈希将自动注册为该对象的垃圾回收，就好像已调用了 &lt;code&gt;register $obj, \ %fieldhash&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="696fe8b408e131aee749ea699f62dfebd1a1c2a1" translate="yes" xml:space="preserve">
          <source>is-a</source>
          <target state="translated">is-a</target>
        </trans-unit>
        <trans-unit id="b91aa64f3f8a6de8013484cee1310ca39f42b97f" translate="yes" xml:space="preserve">
          <source>isALPHA</source>
          <target state="translated">isALPHA</target>
        </trans-unit>
        <trans-unit id="381c670aabd6a11c46215ebc9d9a6d119d35d7dd" translate="yes" xml:space="preserve">
          <source>isALPHANUMERIC</source>
          <target state="translated">isALPHANUMERIC</target>
        </trans-unit>
        <trans-unit id="f3b91792508e06ad62730ba245a5233366d33d6a" translate="yes" xml:space="preserve">
          <source>isASCII</source>
          <target state="translated">isASCII</target>
        </trans-unit>
        <trans-unit id="d9b85d8bd6f47ae6c4a7451ef3790e4acb4376da" translate="yes" xml:space="preserve">
          <source>isBLANK</source>
          <target state="translated">isBLANK</target>
        </trans-unit>
        <trans-unit id="0ccd0b7325f397307fb8e8b0907ffd9e127afbe8" translate="yes" xml:space="preserve">
          <source>isC9_STRICT_UTF8_CHAR</source>
          <target state="translated">isC9_STRICT_UTF8_CHAR</target>
        </trans-unit>
        <trans-unit id="aad5c15432fc2b147fb0ad3c57d70d7e57027e3e" translate="yes" xml:space="preserve">
          <source>isCNTRL</source>
          <target state="translated">isCNTRL</target>
        </trans-unit>
        <trans-unit id="fc9ba5eff947718c3a41792df61e1b6a561f11ed" translate="yes" xml:space="preserve">
          <source>isDIGIT</source>
          <target state="translated">isDIGIT</target>
        </trans-unit>
        <trans-unit id="f9347029ac76f6a2be87537ec4f199b23cc02cbd" translate="yes" xml:space="preserve">
          <source>isFF_OVERLONG</source>
          <target state="translated">isFF_OVERLONG</target>
        </trans-unit>
        <trans-unit id="960939b93207aff9e6a9d23a2874f6c8ec981fc6" translate="yes" xml:space="preserve">
          <source>isFOO_lc</source>
          <target state="translated">isFOO_lc</target>
        </trans-unit>
        <trans-unit id="4bc1f69cfd540926a8163c23021d60ebef524b08" translate="yes" xml:space="preserve">
          <source>isGRAPH</source>
          <target state="translated">isGRAPH</target>
        </trans-unit>
        <trans-unit id="86199d577d6e64e3c009615a9e79e9ca12b903c0" translate="yes" xml:space="preserve">
          <source>isIDCONT</source>
          <target state="translated">isIDCONT</target>
        </trans-unit>
        <trans-unit id="3bf3e9fdd63b10e1e252318c387269103ce72b56" translate="yes" xml:space="preserve">
          <source>isIDFIRST</source>
          <target state="translated">isIDFIRST</target>
        </trans-unit>
        <trans-unit id="86966cb6ef556d3e387b53e2e0cbf3ed23df7087" translate="yes" xml:space="preserve">
          <source>isLOWER</source>
          <target state="translated">isLOWER</target>
        </trans-unit>
        <trans-unit id="a610ccb3fe4f46dc50fc8460df9aff9dd33b4fe4" translate="yes" xml:space="preserve">
          <source>isOCTAL</source>
          <target state="translated">isOCTAL</target>
        </trans-unit>
        <trans-unit id="44ae0152e504a3b38463c5b3dd9041a22f2ea3b5" translate="yes" xml:space="preserve">
          <source>isPRINT</source>
          <target state="translated">isPRINT</target>
        </trans-unit>
        <trans-unit id="f9adbe192c170c1a24cc97ad4c8692504a53293c" translate="yes" xml:space="preserve">
          <source>isPSXSPC</source>
          <target state="translated">isPSXSPC</target>
        </trans-unit>
        <trans-unit id="666314ec9a40d39d8226b7bfada9300359f95414" translate="yes" xml:space="preserve">
          <source>isPUNCT</source>
          <target state="translated">isPUNCT</target>
        </trans-unit>
        <trans-unit id="a89e5c4f32f5b7f3d41f6d21aece302f880da5a0" translate="yes" xml:space="preserve">
          <source>isSCRIPT_RUN</source>
          <target state="translated">isSCRIPT_RUN</target>
        </trans-unit>
        <trans-unit id="a7299e016d5c2de351de502c98a2c695b5adbf39" translate="yes" xml:space="preserve">
          <source>isSPACE</source>
          <target state="translated">isSPACE</target>
        </trans-unit>
        <trans-unit id="1444f154704e4014c04e327ca535df538b10e315" translate="yes" xml:space="preserve">
          <source>isSTRICT_UTF8_CHAR</source>
          <target state="translated">isSTRICT_UTF8_CHAR</target>
        </trans-unit>
        <trans-unit id="79652a24f4574eb440b8e53a5a5970c43fba05ef" translate="yes" xml:space="preserve">
          <source>isUPPER</source>
          <target state="translated">isUPPER</target>
        </trans-unit>
        <trans-unit id="a0c746a7984f1cab56054873531794096c12a2a0" translate="yes" xml:space="preserve">
          <source>isUTF8_CHAR</source>
          <target state="translated">isUTF8_CHAR</target>
        </trans-unit>
        <trans-unit id="11afd4c96efe4448bb8697b47769bd7c9650890c" translate="yes" xml:space="preserve">
          <source>isUTF8_CHAR_flags</source>
          <target state="translated">isUTF8_CHAR_flags</target>
        </trans-unit>
        <trans-unit id="32ead7c77dc55a891c88ce87719620325c1d3970" translate="yes" xml:space="preserve">
          <source>isWORDCHAR</source>
          <target state="translated">isWORDCHAR</target>
        </trans-unit>
        <trans-unit id="cb0704f8305dc04b361e10021578b53511e3fc80" translate="yes" xml:space="preserve">
          <source>isXDIGIT</source>
          <target state="translated">isXDIGIT</target>
        </trans-unit>
        <trans-unit id="e0aa9b17e62e76c514480a9428780d6edd48a581" translate="yes" xml:space="preserve">
          <source>is_actual_ok</source>
          <target state="translated">is_actual_ok</target>
        </trans-unit>
        <trans-unit id="fceb8429f0cc7148ae591e90452455196bad5e41" translate="yes" xml:space="preserve">
          <source>is_alpha()</source>
          <target state="translated">is_alpha()</target>
        </trans-unit>
        <trans-unit id="f25c8ad3133fdad61fc72507a414f3be706ae80d" translate="yes" xml:space="preserve">
          <source>is_ascii_string</source>
          <target state="translated">is_ascii_string</target>
        </trans-unit>
        <trans-unit id="3571f8c800f81672813682a542297ab3e9e3e37e" translate="yes" xml:space="preserve">
          <source>is_bailout</source>
          <target state="translated">is_bailout</target>
        </trans-unit>
        <trans-unit id="e45886f2ebdb0a78b63c04947dac8ca8fb76ac01" translate="yes" xml:space="preserve">
          <source>is_c9strict_utf8_string</source>
          <target state="translated">is_c9strict_utf8_string</target>
        </trans-unit>
        <trans-unit id="bd4b8e747e0e8112db1a02a16727b34fb2df8353" translate="yes" xml:space="preserve">
          <source>is_c9strict_utf8_string_loc</source>
          <target state="translated">is_c9strict_utf8_string_loc</target>
        </trans-unit>
        <trans-unit id="108ee654137aaa6a13029edb74f8f1f5f2bd992e" translate="yes" xml:space="preserve">
          <source>is_c9strict_utf8_string_loclen</source>
          <target state="translated">is_c9strict_utf8_string_loclen</target>
        </trans-unit>
        <trans-unit id="b92b6f1d778be1bd7ae8435b7fa15452b40ea706" translate="yes" xml:space="preserve">
          <source>is_comment</source>
          <target state="translated">is_comment</target>
        </trans-unit>
        <trans-unit id="440fbdb0612d74985bead6bd3aa45b471ed2bcfb" translate="yes" xml:space="preserve">
          <source>is_deeply($got, $want, $name)</source>
          <target state="translated">is_deeply($got,$want,$name)</target>
        </trans-unit>
        <trans-unit id="c73f6767373343279bd6d4f47d75b499dde5cd5e" translate="yes" xml:space="preserve">
          <source>is_deeply($got, $want, $name, @diag)</source>
          <target state="translated">is_deeply($got,$want,$name,@diag)</target>
        </trans-unit>
        <trans-unit id="fe5f07f24c1181069a77c62a492457f083db6d09" translate="yes" xml:space="preserve">
          <source>is_empty</source>
          <target state="translated">is_empty</target>
        </trans-unit>
        <trans-unit id="2eb3ddf53a44d0014465dbf2511b96e2ca53542f" translate="yes" xml:space="preserve">
          <source>is_even()</source>
          <target state="translated">is_even()</target>
        </trans-unit>
        <trans-unit id="9eaaf5dfec71e9a5eb7ff9cded7ae454e351a9d7" translate="yes" xml:space="preserve">
          <source>is_finalized</source>
          <target state="translated">is_finalized</target>
        </trans-unit>
        <trans-unit id="34209df39976cf7b5228d36b4e416d4fa8c1bb86" translate="yes" xml:space="preserve">
          <source>is_finite()</source>
          <target state="translated">is_finite()</target>
        </trans-unit>
        <trans-unit id="29f2b57bed3fed46ae0f516cfff42137496445f9" translate="yes" xml:space="preserve">
          <source>is_good_plan</source>
          <target state="translated">is_good_plan</target>
        </trans-unit>
        <trans-unit id="381137c8c6c57c953e2c3640e714c6576514180c" translate="yes" xml:space="preserve">
          <source>is_grapheme</source>
          <target state="translated">is_grapheme</target>
        </trans-unit>
        <trans-unit id="7e495219b110c2d7325a3d4d022778dfc02f96bb" translate="yes" xml:space="preserve">
          <source>is_indexable($package) or is_indexable()</source>
          <target state="translated">is_indexable($package)或 is_indexable()</target>
        </trans-unit>
        <trans-unit id="02bdc5486b53ee86a9ab7e9131c31294ee0be543" translate="yes" xml:space="preserve">
          <source>is_inf( [ SIGN ] )</source>
          <target state="translated">is_inf([SIGN])</target>
        </trans-unit>
        <trans-unit id="11dbccec36ef1a03c703d514dd31a8d0c0798066" translate="yes" xml:space="preserve">
          <source>is_int()</source>
          <target state="translated">is_int()</target>
        </trans-unit>
        <trans-unit id="77f03300906cb9df79c50905e24209ff48f380ab" translate="yes" xml:space="preserve">
          <source>is_invariant_string</source>
          <target state="translated">is_invariant_string</target>
        </trans-unit>
        <trans-unit id="49e36c23d979bcc087e20b747f6f8fd6312279f5" translate="yes" xml:space="preserve">
          <source>is_invlist</source>
          <target state="translated">is_invlist</target>
        </trans-unit>
        <trans-unit id="2e381fc29a7c1de2eaf6f8403762489e2a8b0e48" translate="yes" xml:space="preserve">
          <source>is_lax()</source>
          <target state="translated">is_lax()</target>
        </trans-unit>
        <trans-unit id="fd0198a91bf033cdc4f2946f5fb9dc61372076d3" translate="yes" xml:space="preserve">
          <source>is_lvalue_sub</source>
          <target state="translated">is_lvalue_sub</target>
        </trans-unit>
        <trans-unit id="81c4be558fcd3af8cca4b285c2962c5989f928f3" translate="yes" xml:space="preserve">
          <source>is_make_type</source>
          <target state="translated">is_make_type</target>
        </trans-unit>
        <trans-unit id="1706ac54a5f901aa68067a922924d2ca353d387c" translate="yes" xml:space="preserve">
          <source>is_make_type (override)</source>
          <target state="translated">is_make_type (覆盖)</target>
        </trans-unit>
        <trans-unit id="d3cd24aa0d0653a754c8dd43f5a6d45ad8a35de5" translate="yes" xml:space="preserve">
          <source>is_nan()</source>
          <target state="translated">is_nan()</target>
        </trans-unit>
        <trans-unit id="d3137bb0197eaf963d93e9bc2ddfe07d01d51840" translate="yes" xml:space="preserve">
          <source>is_neg()</source>
          <target state="translated">is_neg()</target>
        </trans-unit>
        <trans-unit id="5e192aa23e81e4d04b32a6b074858b9c768cac41" translate="yes" xml:space="preserve">
          <source>is_neg()/is_negative()</source>
          <target state="translated">is_neg()/is_negative()</target>
        </trans-unit>
        <trans-unit id="58c5cb95ab25f67205ed5b4e4ef489236dbf3822" translate="yes" xml:space="preserve">
          <source>is_negative()</source>
          <target state="translated">is_negative()</target>
        </trans-unit>
        <trans-unit id="f0f77db0fa5674be23d53391cb578d8a1e4cd7a1" translate="yes" xml:space="preserve">
          <source>is_non_negative()</source>
          <target state="translated">is_non_negative()</target>
        </trans-unit>
        <trans-unit id="c609f7701cb5e5ab971de5b5a3be4cbffcfb69fc" translate="yes" xml:space="preserve">
          <source>is_non_positive()</source>
          <target state="translated">is_non_positive()</target>
        </trans-unit>
        <trans-unit id="2ffcb1a862f4b027f0ab6152305df1200860e1b3" translate="yes" xml:space="preserve">
          <source>is_odd()</source>
          <target state="translated">is_odd()</target>
        </trans-unit>
        <trans-unit id="7182de45a4cda32c8e8cf1d71a83738243962319" translate="yes" xml:space="preserve">
          <source>is_ok</source>
          <target state="translated">is_ok</target>
        </trans-unit>
        <trans-unit id="1d374b560c9749ad48aabddc8e5cf814caaa4778" translate="yes" xml:space="preserve">
          <source>is_one( [ SIGN ])</source>
          <target state="translated">is_one([SIGN ])</target>
        </trans-unit>
        <trans-unit id="70c8f014e9c6a6d99e78620643d9bc507b9fb363" translate="yes" xml:space="preserve">
          <source>is_one()</source>
          <target state="translated">is_one()</target>
        </trans-unit>
        <trans-unit id="1c662b7d1b7f406ce5585c03acdc9098a2e84ffa" translate="yes" xml:space="preserve">
          <source>is_os_type()</source>
          <target state="translated">is_os_type()</target>
        </trans-unit>
        <trans-unit id="273fb512251b5eb361c9b2982eaf0cca2d3c3ab8" translate="yes" xml:space="preserve">
          <source>is_plan</source>
          <target state="translated">is_plan</target>
        </trans-unit>
        <trans-unit id="0c305aaa8a2162118feed774404b4c763b5cefd6" translate="yes" xml:space="preserve">
          <source>is_pos()</source>
          <target state="translated">is_pos()</target>
        </trans-unit>
        <trans-unit id="aeee4fc11afe65037967eaa9c965d8912ecf4589" translate="yes" xml:space="preserve">
          <source>is_pos()/is_positive()</source>
          <target state="translated">is_pos()/is_positive()</target>
        </trans-unit>
        <trans-unit id="3b7d5fdbe9545c58671abe93bbdeec928cfbb6a6" translate="yes" xml:space="preserve">
          <source>is_positive()</source>
          <target state="translated">is_positive()</target>
        </trans-unit>
        <trans-unit id="2efe30a0d0e85f2187e8ad2bb4ba10205024e81a" translate="yes" xml:space="preserve">
          <source>is_qv()</source>
          <target state="translated">is_qv()</target>
        </trans-unit>
        <trans-unit id="e59b48b93f68d747b0a5352b765f4e5ae4b2b9c1" translate="yes" xml:space="preserve">
          <source>is_regexp($ref)</source>
          <target state="translated">is_regexp($ref)</target>
        </trans-unit>
        <trans-unit id="57c3997c87de8d94c664fcb5b83fb58262724ecb" translate="yes" xml:space="preserve">
          <source>is_removed</source>
          <target state="translated">is_removed</target>
        </trans-unit>
        <trans-unit id="a4692724296da1c49c6def7f0c65ea656f934e74" translate="yes" xml:space="preserve">
          <source>is_safe_syscall</source>
          <target state="translated">is_safe_syscall</target>
        </trans-unit>
        <trans-unit id="8fb451fe7986ef6956fa021ea1bbae2b36490d5f" translate="yes" xml:space="preserve">
          <source>is_shared VARIABLE</source>
          <target state="translated">is_shared 变量</target>
        </trans-unit>
        <trans-unit id="1f66e920b9cc67ee0b6a60fbce5c8bbd3535c59f" translate="yes" xml:space="preserve">
          <source>is_simple</source>
          <target state="translated">is_simple</target>
        </trans-unit>
        <trans-unit id="657332ee96700857786237eeb2bb3d3ceb01b2b0" translate="yes" xml:space="preserve">
          <source>is_spinner</source>
          <target state="translated">is_spinner</target>
        </trans-unit>
        <trans-unit id="2133a51c8381eb21cfa95987773548d1369b5f06" translate="yes" xml:space="preserve">
          <source>is_strict()</source>
          <target state="translated">is_strict()</target>
        </trans-unit>
        <trans-unit id="612ef7a959a3976df3efcade0d710a780756e859" translate="yes" xml:space="preserve">
          <source>is_strict_utf8_string</source>
          <target state="translated">is_strict_utf8_string</target>
        </trans-unit>
        <trans-unit id="ed1f4b839fc63591a80977350056ef32e2c07983" translate="yes" xml:space="preserve">
          <source>is_strict_utf8_string_loc</source>
          <target state="translated">is_strict_utf8_string_loc</target>
        </trans-unit>
        <trans-unit id="de2a771e5489118524a9a127d205f94ade7b3b5a" translate="yes" xml:space="preserve">
          <source>is_strict_utf8_string_loclen</source>
          <target state="translated">is_strict_utf8_string_loclen</target>
        </trans-unit>
        <trans-unit id="8103b3e11998a7e6cf95f01c08b75af86f0e46db" translate="yes" xml:space="preserve">
          <source>is_test</source>
          <target state="translated">is_test</target>
        </trans-unit>
        <trans-unit id="a30ca954d545a69480c48b4360032757801540d6" translate="yes" xml:space="preserve">
          <source>is_unknown</source>
          <target state="translated">is_unknown</target>
        </trans-unit>
        <trans-unit id="8ba7e423aa9ecd8024df13c6835896e8edb89261" translate="yes" xml:space="preserve">
          <source>is_unplanned</source>
          <target state="translated">is_unplanned</target>
        </trans-unit>
        <trans-unit id="e07cc517821b5551e950dff4acb3c80a32d29930" translate="yes" xml:space="preserve">
          <source>is_utf8</source>
          <target state="translated">is_utf8</target>
        </trans-unit>
        <trans-unit id="b2c9ae74539b41d4160d5f0c48681058c4799d81" translate="yes" xml:space="preserve">
          <source>is_utf8_char</source>
          <target state="translated">is_utf8_char</target>
        </trans-unit>
        <trans-unit id="35980a1bfe1bb1064c5c60355f1966c30276e70e" translate="yes" xml:space="preserve">
          <source>is_utf8_char_buf</source>
          <target state="translated">is_utf8_char_buf</target>
        </trans-unit>
        <trans-unit id="ed660c1a5ceaebfaa06626331f79565ce2fed8db" translate="yes" xml:space="preserve">
          <source>is_utf8_char_helper</source>
          <target state="translated">is_utf8_char_helper</target>
        </trans-unit>
        <trans-unit id="d9e18c1d8fcc4f429473e1356b03c11cff821aa3" translate="yes" xml:space="preserve">
          <source>is_utf8_common</source>
          <target state="translated">is_utf8_common</target>
        </trans-unit>
        <trans-unit id="845cd328b03936ae8b84ee9300937196c3776c20" translate="yes" xml:space="preserve">
          <source>is_utf8_fixed_width_buf_flags</source>
          <target state="translated">is_utf8_fixed_width_buf_flags</target>
        </trans-unit>
        <trans-unit id="01b8a0a2db67365af439c61ef7aac79ef4da56d9" translate="yes" xml:space="preserve">
          <source>is_utf8_fixed_width_buf_loc_flags</source>
          <target state="translated">is_utf8_fixed_width_buf_loc_flags</target>
        </trans-unit>
        <trans-unit id="399338faedcc1ae92764b4dedba55665fefd372d" translate="yes" xml:space="preserve">
          <source>is_utf8_fixed_width_buf_loclen_flags</source>
          <target state="translated">is_utf8_fixed_width_buf_loclen_flags</target>
        </trans-unit>
        <trans-unit id="2a655b0ae95f05a07fdb12859b496efd738ffd89" translate="yes" xml:space="preserve">
          <source>is_utf8_invariant_string</source>
          <target state="translated">is_utf8_invariant_string</target>
        </trans-unit>
        <trans-unit id="360b00a2ca444d90dd95d4a2d13adfbd8006e6de" translate="yes" xml:space="preserve">
          <source>is_utf8_invariant_string_loc</source>
          <target state="translated">is_utf8_invariant_string_loc</target>
        </trans-unit>
        <trans-unit id="e7c70b0d39402e1a9707bfd2bf2190147b622a04" translate="yes" xml:space="preserve">
          <source>is_utf8_non_invariant_string</source>
          <target state="translated">is_utf8_non_invariant_string</target>
        </trans-unit>
        <trans-unit id="15089c332be61cabdb88b9372bc96543d1279ae1" translate="yes" xml:space="preserve">
          <source>is_utf8_overlong_given_start_byte_ok</source>
          <target state="translated">is_utf8_overlong_given_start_byte_ok</target>
        </trans-unit>
        <trans-unit id="5628ee9ad7e37db9a1fa84f18ba07dd2e37acef5" translate="yes" xml:space="preserve">
          <source>is_utf8_string</source>
          <target state="translated">is_utf8_string</target>
        </trans-unit>
        <trans-unit id="aa41ef843adefc4b45c79739a75c6f6c3d573c8c" translate="yes" xml:space="preserve">
          <source>is_utf8_string_flags</source>
          <target state="translated">is_utf8_string_flags</target>
        </trans-unit>
        <trans-unit id="bf94cc07e18a8937ef33b1fba13b20014ed1d389" translate="yes" xml:space="preserve">
          <source>is_utf8_string_loc</source>
          <target state="translated">is_utf8_string_loc</target>
        </trans-unit>
        <trans-unit id="117464ca5336bea7ce702bd3f3619230eca3d8ba" translate="yes" xml:space="preserve">
          <source>is_utf8_string_loc_flags</source>
          <target state="translated">is_utf8_string_loc_flags</target>
        </trans-unit>
        <trans-unit id="dd12e88980518fa979324b82aa535f7ea62a65d0" translate="yes" xml:space="preserve">
          <source>is_utf8_string_loclen</source>
          <target state="translated">is_utf8_string_loclen</target>
        </trans-unit>
        <trans-unit id="52b9ff7e79901b827cc813ffe0f32402ec4a6d3e" translate="yes" xml:space="preserve">
          <source>is_utf8_string_loclen_flags</source>
          <target state="translated">is_utf8_string_loclen_flags</target>
        </trans-unit>
        <trans-unit id="d74bdb7cbb5ea658f73cdd9d550e082b46b81619" translate="yes" xml:space="preserve">
          <source>is_utf8_valid_partial_char</source>
          <target state="translated">is_utf8_valid_partial_char</target>
        </trans-unit>
        <trans-unit id="2b06fc969a6360dd3bc2f415033d19b3a7206f4a" translate="yes" xml:space="preserve">
          <source>is_utf8_valid_partial_char_flags</source>
          <target state="translated">is_utf8_valid_partial_char_flags</target>
        </trans-unit>
        <trans-unit id="88b28d3917bada0d9b67dfb30beecf6e8588db71" translate="yes" xml:space="preserve">
          <source>is_valid</source>
          <target state="translated">is_valid</target>
        </trans-unit>
        <trans-unit id="9e840ea1d61b713c529fd5270e99c7cf17da0fd9" translate="yes" xml:space="preserve">
          <source>is_xs</source>
          <target state="translated">is_xs</target>
        </trans-unit>
        <trans-unit id="1e0ed8c32ee337c1156c5dd72d1997df1f49b528" translate="yes" xml:space="preserve">
          <source>is_yaml</source>
          <target state="translated">is_yaml</target>
        </trans-unit>
        <trans-unit id="1ddb13cfa4feb404c5ec5eefd16e3616cef8e112" translate="yes" xml:space="preserve">
          <source>is_zero()</source>
          <target state="translated">is_zero()</target>
        </trans-unit>
        <trans-unit id="b9a6073fa873f12500b8f74c2da65fdbddf5d9f5" translate="yes" xml:space="preserve">
          <source>isa is experimental</source>
          <target state="translated">是试验性的</target>
        </trans-unit>
        <trans-unit id="2f88056136e41ace376fdc95b45fd5d2f42aa4a7" translate="yes" xml:space="preserve">
          <source>isa($class)</source>
          <target state="translated">isa($class)</target>
        </trans-unit>
        <trans-unit id="8ffda1fa78645c009ffa2b7d1f049da6785b1dfd" translate="yes" xml:space="preserve">
          <source>isdual</source>
          <target state="translated">isdual</target>
        </trans-unit>
        <trans-unit id="ed40a8b31cc6dbb007182b3e7e1d10db6ff21a2b" translate="yes" xml:space="preserve">
          <source>isinfnan</source>
          <target state="translated">isinfnan</target>
        </trans-unit>
        <trans-unit id="86f14be0d6455bac361b37834f7f758d69b0c2b9" translate="yes" xml:space="preserve">
          <source>isinfnansv</source>
          <target state="translated">isinfnansv</target>
        </trans-unit>
        <trans-unit id="ee2ebf5133051bf39cd49d499acea403e44a4978" translate="yes" xml:space="preserve">
          <source>isn't</source>
          <target state="translated">isn't</target>
        </trans-unit>
        <trans-unit id="9d94e5f09ea80b838abc637f6cc2137bf9b40766" translate="yes" xml:space="preserve">
          <source>isn't available,</source>
          <target state="translated">是不可用的。</target>
        </trans-unit>
        <trans-unit id="b643075840def260815468ce095b78f495761c52" translate="yes" xml:space="preserve">
          <source>isn't available, it converts it to plain text with the external command</source>
          <target state="translated">无法使用,它就会用外部的命令</target>
        </trans-unit>
        <trans-unit id="e16b96ecf693e658c2424ac211a1dfdc920c5a12" translate="yes" xml:space="preserve">
          <source>isn't given, it defaults to &lt;code&gt;STDIN&lt;/code&gt; .</source>
          <target state="translated">没有给出，默认为 &lt;code&gt;STDIN&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a951ef0ad03dd96c7e10c18b3a0cc0de0613787a" translate="yes" xml:space="preserve">
          <source>isn't given, it defaults to &lt;code&gt;STDIN&lt;/code&gt;.</source>
          <target state="translated">没有给出，默认为 &lt;code&gt;STDIN&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="75e52afea6c5f5fb7c62edc35d62baf474ddc2bf" translate="yes" xml:space="preserve">
          <source>isn't given, the formatted output is written to &lt;code&gt;STDOUT&lt;/code&gt; . Several POD files can be processed in the same &lt;b&gt;pod2man&lt;/b&gt; invocation (saving module load and compile times) by providing multiple pairs of</source>
          <target state="translated">没有给出，格式化的输出将被写入 &lt;code&gt;STDOUT&lt;/code&gt; 。可以通过提供多个对来在同一&lt;b&gt;pod2man&lt;/b&gt;调用中处理多个POD文件（节省模块加载和编译时间）。</target>
        </trans-unit>
        <trans-unit id="464bc0306867e48eb03dffa3c82d60e097b5207c" translate="yes" xml:space="preserve">
          <source>isn't given, the formatted output is written to &lt;code&gt;STDOUT&lt;/code&gt; . Several POD files can be processed in the same &lt;b&gt;pod2text&lt;/b&gt; invocation (saving module load and compile times) by providing multiple pairs of</source>
          <target state="translated">没有给出，格式化的输出将被写入 &lt;code&gt;STDOUT&lt;/code&gt; 。可以通过提供多个对来在同一&lt;b&gt;pod2text&lt;/b&gt;调用中处理多个POD文件（节省模块加载和编译时间）。</target>
        </trans-unit>
        <trans-unit id="5099d8ec7c825105139ad8f5bd05914b8e70eeda" translate="yes" xml:space="preserve">
          <source>isn't given, the formatted output is written to &lt;code&gt;STDOUT&lt;/code&gt;. Several POD files can be processed in the same &lt;b&gt;pod2man&lt;/b&gt; invocation (saving module load and compile times) by providing multiple pairs of</source>
          <target state="translated">没有给出，格式化的输出将被写入 &lt;code&gt;STDOUT&lt;/code&gt; 。可以通过提供多个对来在同一&lt;b&gt;pod2man&lt;/b&gt;调用中处理多个POD文件（节省模块加载和编译时间）。</target>
        </trans-unit>
        <trans-unit id="93c1e2946cf63cec09c88b6c7ab5b82511f90e1e" translate="yes" xml:space="preserve">
          <source>isn't given, the formatted output is written to &lt;code&gt;STDOUT&lt;/code&gt;. Several POD files can be processed in the same &lt;b&gt;pod2text&lt;/b&gt; invocation (saving module load and compile times) by providing multiple pairs of</source>
          <target state="translated">没有给出，格式化的输出将被写入 &lt;code&gt;STDOUT&lt;/code&gt; 。可以通过提供多个对来在同一&lt;b&gt;pod2text&lt;/b&gt;调用中处理多个POD文件（节省模块加载和编译时间）。</target>
        </trans-unit>
        <trans-unit id="4802dc86ff98209d83bfb80efd9b01f770912536" translate="yes" xml:space="preserve">
          <source>isnt($got, $do_not_want, $name)</source>
          <target state="translated">isnt($got,$do_not_want,$name)</target>
        </trans-unit>
        <trans-unit id="da72300406eee0c135b3c8231a3c5793ccac0332" translate="yes" xml:space="preserve">
          <source>isnt($got, $do_not_want, $name, @diag)</source>
          <target state="translated">isnt($got,$do_not_want,$name,@diag)</target>
        </trans-unit>
        <trans-unit id="96d2a4fbb9059f5330274f55be6262e3cbc96904" translate="yes" xml:space="preserve">
          <source>issue 21. See &lt;a href=&quot;http://interglacial.com/tpj/21/&quot;&gt;http://interglacial.com/tpj/21/&lt;/a&gt;</source>
          <target state="translated">第21期。请参阅&lt;a href=&quot;http://interglacial.com/tpj/21/&quot;&gt;http://interglacial.com/tpj/21/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f1da083affe279217f988b36f92bb98ac176b46e" translate="yes" xml:space="preserve">
          <source>issymlink.U</source>
          <target state="translated">issymlink.U</target>
        </trans-unit>
        <trans-unit id="45098fc2aa4e6608f56f987d63d68920609dbbd1" translate="yes" xml:space="preserve">
          <source>isvstring</source>
          <target state="translated">isvstring</target>
        </trans-unit>
        <trans-unit id="073c2d116dfe6c35185754930917fb5ca91ecdec" translate="yes" xml:space="preserve">
          <source>isweak</source>
          <target state="translated">isweak</target>
        </trans-unit>
        <trans-unit id="6c5522ca8af86fc5069b737bb8892b3ea61002c2" translate="yes" xml:space="preserve">
          <source>it</source>
          <target state="translated">it</target>
        </trans-unit>
        <trans-unit id="05a4caf354063cd0b1c1282164b973f1a8b3ca03" translate="yes" xml:space="preserve">
          <source>it as though it were a two-dimensional one. This is actually the way almost all C multidimensional arrays work as well.</source>
          <target state="translated">的方式,就好像它是一个二维的一样。这其实也是几乎所有C语言多维数组的工作方式。</target>
        </trans-unit>
        <trans-unit id="61d4d6f86f6911f9c0b355a4b638b81c72da1544" translate="yes" xml:space="preserve">
          <source>it depends</source>
          <target state="translated">看情况</target>
        </trans-unit>
        <trans-unit id="e9ed3745b6da2ff65c1330a469e0e606269e1aea" translate="yes" xml:space="preserve">
          <source>it does any key lookups. Anything more complicated than a simple scalar variable must use methods 2 or 3 below. However, a &quot;simple scalar&quot; includes an identifier that itself uses method 1 recursively. Therefore, the following prints &quot;howdy&quot;.</source>
          <target state="translated">它进行任何键的查找。任何比简单标量变量更复杂的东西都必须使用下面的方法2或3。然而,&quot;简单标量 &quot;包括一个标识符,它本身也会递归地使用方法1。因此,下面打印的是 &quot;你好&quot;。</target>
        </trans-unit>
        <trans-unit id="ba8e66e3faac8aa41508246830eac4c0ce1367d9" translate="yes" xml:space="preserve">
          <source>it does.</source>
          <target state="translated">确实如此。</target>
        </trans-unit>
        <trans-unit id="0586fd2e9ea179909692618fde703704590b2778" translate="yes" xml:space="preserve">
          <source>it doesn't make sense for &lt;code&gt;$result&lt;/code&gt; to be tainted.</source>
          <target state="translated">&lt;code&gt;$result&lt;/code&gt; 被污染是没有意义的。</target>
        </trans-unit>
        <trans-unit id="a3b5731b03b1d9580630c3e364c866c135363431" translate="yes" xml:space="preserve">
          <source>it finds to generate its basename. For instance:</source>
          <target state="translated">来生成它的基名。例如:</target>
        </trans-unit>
        <trans-unit id="67860f13d2c0675d8e22bfdbbcae1da9fb06bf2d" translate="yes" xml:space="preserve">
          <source>it has been determined whether or not it is part of a POD paragraph). The parameter &lt;code&gt;$text&lt;/code&gt; is the input line; and the parameter &lt;code&gt;$line_num&lt;/code&gt; is the line number of the corresponding text line.</source>
          <target state="translated">确定它是否是POD段落的一部分）。参数 &lt;code&gt;$text&lt;/code&gt; 是输入行；参数 &lt;code&gt;$line_num&lt;/code&gt; 是相应文本行的行号。</target>
        </trans-unit>
        <trans-unit id="3870d4bae6a615c7d0c3110b61ef4d9f15473beb" translate="yes" xml:space="preserve">
          <source>it has no prototype (&lt;code&gt;PROTOTYPE&lt;/code&gt; field is missing).</source>
          <target state="translated">它没有原型（缺少 &lt;code&gt;PROTOTYPE&lt;/code&gt; 字段）。</target>
        </trans-unit>
        <trans-unit id="131c30879634b5e9086ea8133113d2816ce16423" translate="yes" xml:space="preserve">
          <source>it is beyond the power of words to describe the way HTML browsers encode non-&lt;code&gt;ASCII&lt;/code&gt; form data. To get a general impression, visit &lt;a href=&quot;http://www.alanflavell.org.uk/charset/form-i18n.html&quot;&gt;http://www.alanflavell.org.uk/charset/form-i18n.html&lt;/a&gt;. While encoding of form data has stabilized for &lt;code&gt;UTF-8&lt;/code&gt; encoded pages (at least IE 5/6, NS 6, and Opera 6 behave consistently), be sure to expect fun (and cross-browser discrepancies) with &lt;code&gt;UTF-16&lt;/code&gt; encoded pages!</source>
          <target state="translated">描述HTML浏览器编码非 &lt;code&gt;ASCII&lt;/code&gt; 表单数据的方式超出了文字的能力范围。要获得一般印象，请访问&lt;a href=&quot;http://www.alanflavell.org.uk/charset/form-i18n.html&quot;&gt;http://www.alanflavell.org.uk/charset/form-i18n.html&lt;/a&gt;。虽然表单数据的编码对于 &lt;code&gt;UTF-8&lt;/code&gt; 编码的页面已经稳定（至少IE 5/6，NS 6和Opera 6的行为始终如一），但请务必期待 &lt;code&gt;UTF-16&lt;/code&gt; 编码的页面带来乐趣（以及跨浏览器的差异）！</target>
        </trans-unit>
        <trans-unit id="1690d6efd12aa7c091debf143ad3278ea0ef7e39" translate="yes" xml:space="preserve">
          <source>it is executed directly instead of via your system's command shell (see below).</source>
          <target state="translated">它是直接执行的,而不是通过你的系统命令shell(见下文)。</target>
        </trans-unit>
        <trans-unit id="0c696ff0d66734bc1af537a36f453902c087a5ec" translate="yes" xml:space="preserve">
          <source>it is implemented, they just need to know</source>
          <target state="translated">落实,他们只需要知道</target>
        </trans-unit>
        <trans-unit id="5aff30627b547c2a01a9bb55f014f8a4f50a64aa" translate="yes" xml:space="preserve">
          <source>it is necessary to make a note of their addresses--thus the two variables &lt;code&gt;sva&lt;/code&gt; and &lt;code&gt;svb&lt;/code&gt; .</source>
          <target state="translated">有必要记下它们的地址-因此这两个变量 &lt;code&gt;sva&lt;/code&gt; 和 &lt;code&gt;svb&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5e7dc85016b1968964ec54f0c439c0215faac467" translate="yes" xml:space="preserve">
          <source>it is necessary to make a note of their addresses--thus the two variables &lt;code&gt;sva&lt;/code&gt; and &lt;code&gt;svb&lt;/code&gt;.</source>
          <target state="translated">有必要记下它们的地址-因此这两个变量 &lt;code&gt;sva&lt;/code&gt; 和 &lt;code&gt;svb&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2e9959c9fffd7b05f3976705116788c5f70c5388" translate="yes" xml:space="preserve">
          <source>it is necessary to use either this:</source>
          <target state="translated">有必要使用这两种方式。</target>
        </trans-unit>
        <trans-unit id="e6bfc40b7759a36a5d9b61adb0876e34d6af17ae" translate="yes" xml:space="preserve">
          <source>it is not currently executed (because &lt;code&gt;DEPTH&lt;/code&gt; is 0);</source>
          <target state="translated">当前未执行（因为 &lt;code&gt;DEPTH&lt;/code&gt; 为0）；</target>
        </trans-unit>
        <trans-unit id="310129d7662f2f9acf2e335aff9582946ee14a1c" translate="yes" xml:space="preserve">
          <source>it is not currently executed (see &lt;code&gt;DEPTH&lt;/code&gt; );</source>
          <target state="translated">当前未执行（请参阅 &lt;code&gt;DEPTH&lt;/code&gt; ）；</target>
        </trans-unit>
        <trans-unit id="0a9795eca7a07fa1ec5f54c4aca84e9b6ddd94be" translate="yes" xml:space="preserve">
          <source>it is probably because your LD_LIBRARY_PATH environment variable includes a directory which is a symlink to /usr/lib (such as /lib). The reason this causes a problem is quite subtle. The file libdl.so.1.0 actually *only* contains functions which generate 'stub interception failed' errors! The runtime linker intercepts links to &quot;/usr/lib/libdl.so.1.0&quot; and links in internal implementations of those functions instead. [Thanks to Tim Bunce for this explanation.]</source>
          <target state="translated">可能是因为你的 LD_LIBRARY_PATH 环境变量包含了一个指向 /usr/lib 的目录 (例如 /lib)。这导致问题的原因很微妙。libdl.so.1.0文件实际上只包含了会产生 &quot;stub拦截失败 &quot;错误的函数!运行时链接器拦截了链接。运行时链接器拦截到&quot;/usr/lib/libdl.so.1.0 &quot;的链接,并将这些函数的内部实现链接进来。[感谢Tim Bunce的解释]</target>
        </trans-unit>
        <trans-unit id="1c4f5875a161475f2ae8169f23fec263623fcc99" translate="yes" xml:space="preserve">
          <source>it is quite clear that there is a space at the end of the first string. Another way to solve this problem is to use colour and inverse video on an ANSI terminal, see below COLOUR below if you want this.</source>
          <target state="translated">很明显,第一个字符串的末尾有一个空格。解决这个问题的另一个方法是在ANSI终端上使用彩色和反视频,如果你想这样做,请看下面的COLOUR。</target>
        </trans-unit>
        <trans-unit id="612612823271c4dd6d5f3ffd06e4c196c2f4cc3b" translate="yes" xml:space="preserve">
          <source>it is the parser who called the handler. The second line will print backtrace and die if &lt;code&gt;Carp&lt;/code&gt; was available. The third line will be executed only if &lt;code&gt;Carp&lt;/code&gt; was not available.</source>
          <target state="translated">解析器调用了处理程序。如果 &lt;code&gt;Carp&lt;/code&gt; 可用，第二行将打印回溯记录并死亡。仅当 &lt;code&gt;Carp&lt;/code&gt; 不可用时，才会执行第三行。</target>
        </trans-unit>
        <trans-unit id="b58c9409bf16cf04174e7afa22fe71b231a9b517" translate="yes" xml:space="preserve">
          <source>it means you need to (re)run the</source>
          <target state="translated">这意味着你需要(重新)运行的是</target>
        </trans-unit>
        <trans-unit id="8f446b862762106f931a1429d6239d02e83adc85" translate="yes" xml:space="preserve">
          <source>it prints two lines of output, a perhaps more useful outcome.</source>
          <target state="translated">它打印两行输出,也许是一个更有用的结果。</target>
        </trans-unit>
        <trans-unit id="3a6a63104db0674a31400a90bd3f6dedc040f2d3" translate="yes" xml:space="preserve">
          <source>it really means</source>
          <target state="translated">真意</target>
        </trans-unit>
        <trans-unit id="2d705f3ff1468bae61e7a2b03e028f3180c8d8e6" translate="yes" xml:space="preserve">
          <source>it runs a test suite - but it provides far more control over which tests are executed, in what order and how their results are reported. Typically</source>
          <target state="translated">它运行的是一个测试套件--但它提供了更多的控制,包括执行哪些测试、测试的顺序以及测试结果的报告方式。通常情况下</target>
        </trans-unit>
        <trans-unit id="13fd5928c332d6966fcfc1b3936835e1f2fdd3ce" translate="yes" xml:space="preserve">
          <source>it should match, we would use the &lt;b&gt;anchor&lt;/b&gt; metacharacters &lt;code&gt;^&lt;/code&gt; and &lt;code&gt;$&lt;/code&gt; . The anchor &lt;code&gt;^&lt;/code&gt; means match at the beginning of the string and the anchor &lt;code&gt;$&lt;/code&gt; means match at the end of the string, or before a newline at the end of the string. Some examples:</source>
          <target state="translated">它应该匹配，我们将使用&lt;b&gt;锚&lt;/b&gt;元字符 &lt;code&gt;^&lt;/code&gt; 和 &lt;code&gt;$&lt;/code&gt; 。锚 &lt;code&gt;^&lt;/code&gt; 表示在字符串的开头匹配，锚 &lt;code&gt;$&lt;/code&gt; 表示在字符串的末尾匹配，或者在字符串的末尾在换行符之前。一些例子：</target>
        </trans-unit>
        <trans-unit id="98a0682644ef37b89567db1cc704ecebca184ce1" translate="yes" xml:space="preserve">
          <source>it should match, we would use the &lt;b&gt;anchor&lt;/b&gt; metacharacters &lt;code&gt;^&lt;/code&gt; and &lt;code&gt;$&lt;/code&gt;. The anchor &lt;code&gt;^&lt;/code&gt; means match at the beginning of the string and the anchor &lt;code&gt;$&lt;/code&gt; means match at the end of the string, or before a newline at the end of the string. Some examples:</source>
          <target state="translated">它应该匹配，我们将使用&lt;b&gt;锚&lt;/b&gt;元字符 &lt;code&gt;^&lt;/code&gt; 和 &lt;code&gt;$&lt;/code&gt; 。锚 &lt;code&gt;^&lt;/code&gt; 表示在字符串的开头匹配，锚 &lt;code&gt;$&lt;/code&gt; 表示在字符串的末尾匹配，或者在字符串的末尾在换行符之前。一些例子：</target>
        </trans-unit>
        <trans-unit id="e296f0161e64279421db490742dbd931d8bc8114" translate="yes" xml:space="preserve">
          <source>it uses.</source>
          <target state="translated">它使用的。</target>
        </trans-unit>
        <trans-unit id="7fee69b9285278b6509a5306eaa1681932e8c894" translate="yes" xml:space="preserve">
          <source>it was given. There are a few types of Iterators available by default, all sub-classes of &lt;a href=&quot;TAP::Parser::Iterator&quot;&gt;TAP::Parser::Iterator&lt;/a&gt;. Choosing which iterator to use is the responsibility of the</source>
          <target state="translated">它被给予。默认情况下，有几种类型的Iterators可用，即&lt;a href=&quot;TAP::Parser::Iterator&quot;&gt;TAP :: Parser :: Iterator的&lt;/a&gt;所有子类。选择使用哪个迭代器是</target>
        </trans-unit>
        <trans-unit id="9740d8c8a2509877b0874f04a9fb40b6504cad81" translate="yes" xml:space="preserve">
          <source>it was given. There are a few types of Iterators available by default, all sub-classes of &lt;a href=&quot;parser/iterator&quot;&gt;TAP::Parser::Iterator&lt;/a&gt;. Choosing which iterator to use is the responsibility of the</source>
          <target state="translated">它被给予。默认情况下，有几种类型的迭代器可用，即&lt;a href=&quot;parser/iterator&quot;&gt;TAP :: Parser :: Iterator的&lt;/a&gt;所有子类。选择使用哪个迭代器是</target>
        </trans-unit>
        <trans-unit id="90f05049b267c672ac20306b59373a3c6dd17d68" translate="yes" xml:space="preserve">
          <source>it will be opened for reading. Likewise, the second argument will be written to. If the second argument does not exist but the parent directory does exist, then it will be created. Trying to copy a file into a non-existent directory is an error. Trying to copy a file on top of itself is also an error. &lt;code&gt;copy&lt;/code&gt; will not overwrite read-only files.</source>
          <target state="translated">它将打开以供阅读。同样，第二个参数将被写入。如果第二个参数不存在，但父目录确实存在，则将创建它。尝试将文件复制到不存在的目录是一个错误。尝试在自身之上复制文件也是一个错误。 &lt;code&gt;copy&lt;/code&gt; 不会覆盖只读文件。</target>
        </trans-unit>
        <trans-unit id="85077e36260e1c964f3bb3d589eff39a4e93a0b6" translate="yes" xml:space="preserve">
          <source>it will still be a gv.</source>
          <target state="translated">它将仍然是一个GV。</target>
        </trans-unit>
        <trans-unit id="dbd5122ba5020f51c5abbd9de84b338bce83b0fb" translate="yes" xml:space="preserve">
          <source>it will typically get rendered as</source>
          <target state="translated">它通常会被渲染为</target>
        </trans-unit>
        <trans-unit id="25c14feb4e8e18138f532db9509b63ad8f630a23" translate="yes" xml:space="preserve">
          <source>it would be better to keep a hash around like %USER_VARS and have variable references actually refer to entries in that hash:</source>
          <target state="translated">最好是保留一个像%USER_VARS这样的哈希值,并且让变量引用实际指向这个哈希值中的条目。</target>
        </trans-unit>
        <trans-unit id="e5c94463c2fd1216a37265c6eb1ebb573441081f" translate="yes" xml:space="preserve">
          <source>it).</source>
          <target state="translated">it).</target>
        </trans-unit>
        <trans-unit id="7ab962e80665cb9cc68421c37b838570afc27fae" translate="yes" xml:space="preserve">
          <source>it.</source>
          <target state="translated">it.</target>
        </trans-unit>
        <trans-unit id="0a0be36bcf81cae54b4e92e27a7da272f28892ba" translate="yes" xml:space="preserve">
          <source>it; and it also doubles as a note about why it's being skipped. So in the first codeblock above, read the code as &quot;skip if MSWin -- (otherwise) test whether &lt;code&gt;thing($foo)&lt;/code&gt; is &lt;code&gt;thing($bar)&lt;/code&gt; &quot; or for the second case, &quot;skip unless MSWin...&quot;.</source>
          <target state="translated">它; 并且还可以作为为什么被跳过的注释。因此，在上面的第一个代码块中，将代码读取为&amp;ldquo;如果跳过MSWin，则跳过-（否则）测试 &lt;code&gt;thing($foo)&lt;/code&gt; 是 &lt;code&gt;thing($bar)&lt;/code&gt; &amp;rdquo;；对于第二种情况，则为&amp;ldquo;跳过，除非MSWin ...&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="74145e79311fb80a0e37db8b854a165aa898e3aa" translate="yes" xml:space="preserve">
          <source>it; and it also doubles as a note about why it's being skipped. So in the first codeblock above, read the code as &quot;skip if MSWin -- (otherwise) test whether &lt;code&gt;thing($foo)&lt;/code&gt; is &lt;code&gt;thing($bar)&lt;/code&gt;&quot; or for the second case, &quot;skip unless MSWin...&quot;.</source>
          <target state="translated">它; 同时也将其作为为什么被跳过的注释。因此，在上面的第一个代码块中，将代码读取为&amp;ldquo;如果MSWin则跳过-（否则）测试 &lt;code&gt;thing($foo)&lt;/code&gt; 是 &lt;code&gt;thing($bar)&lt;/code&gt; &amp;rdquo;，对于第二种情况则为&amp;ldquo;跳过除非MSWin ...&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="90665ca6c8810138a69c5d8421143bbaa3be9fa1" translate="yes" xml:space="preserve">
          <source>italic</source>
          <target state="translated">italic</target>
        </trans-unit>
        <trans-unit id="6706f8689ad7b4511aa02bbf1827840b3c7fcc65" translate="yes" xml:space="preserve">
          <source>itcharlie@cpan.org</source>
          <target state="translated">itcharlie@cpan.org</target>
        </trans-unit>
        <trans-unit id="7316c8b2e74870d9d7e9d30bbc28ecf4cdf945ee" translate="yes" xml:space="preserve">
          <source>items</source>
          <target state="translated">items</target>
        </trans-unit>
        <trans-unit id="939d66a4b75f040c931e31b7a89333e45cd668cc" translate="yes" xml:space="preserve">
          <source>iterate</source>
          <target state="translated">iterate</target>
        </trans-unit>
        <trans-unit id="6a76880257a98862233daf37049ef9d8a2496a46" translate="yes" xml:space="preserve">
          <source>iteration</source>
          <target state="translated">iteration</target>
        </trans-unit>
        <trans-unit id="bef4aaaa11015ef79d88f3701f4c69ad690eb4c7" translate="yes" xml:space="preserve">
          <source>iterator</source>
          <target state="translated">iterator</target>
        </trans-unit>
        <trans-unit id="4131f600eefaae3bd0bdca31fdfbd0ee66fd34df" translate="yes" xml:space="preserve">
          <source>iterator factory</source>
          <target state="translated">迭代器工厂</target>
        </trans-unit>
        <trans-unit id="c8ed91cabd2503ccd6fe98858acf5a896273fc96" translate="yes" xml:space="preserve">
          <source>iterator_class</source>
          <target state="translated">iterator_class</target>
        </trans-unit>
        <trans-unit id="3bdff15b39ed0956a3ac055e7cb35e717df3ac4f" translate="yes" xml:space="preserve">
          <source>iterators</source>
          <target state="translated">iterators</target>
        </trans-unit>
        <trans-unit id="91f3264578c554679afde17862a2c514aa8b4d65" translate="yes" xml:space="preserve">
          <source>iters</source>
          <target state="translated">iters</target>
        </trans-unit>
        <trans-unit id="02b745e9b5e2fad4405c0c56805599232ff0da14" translate="yes" xml:space="preserve">
          <source>ithreads</source>
          <target state="translated">ithreads</target>
        </trans-unit>
        <trans-unit id="729ee8658c32bfd976df663131e9d855fadb0bd2" translate="yes" xml:space="preserve">
          <source>its parent classes are called (in depth-first, left-to-right order).</source>
          <target state="translated">它的父类被调用(按深度优先、从左到右的顺序)。</target>
        </trans-unit>
        <trans-unit id="81f3fb4eaedb1a632822e8e071eaf79b0daa2a96" translate="yes" xml:space="preserve">
          <source>itself is perfectly fine and probably best to quote from, provided you can find a suitable quote there.</source>
          <target state="translated">本身是完全可以的,可能是最好的报价,只要你能在那里找到合适的报价。</target>
        </trans-unit>
        <trans-unit id="a6597c4b9bc3a39747ccb10ba2dc28b25654f99e" translate="yes" xml:space="preserve">
          <source>itself, or the UNIX error message when it is not (i.e.</source>
          <target state="translated">本身,或者当它不是UNIX错误信息时(即</target>
        </trans-unit>
        <trans-unit id="8cd5a170ac5cbddacb24806eb93a8730cd7776d0" translate="yes" xml:space="preserve">
          <source>itself.</source>
          <target state="translated">itself.</target>
        </trans-unit>
        <trans-unit id="a448ee962c26966eb9ffb37083bad9b8255c68a0" translate="yes" xml:space="preserve">
          <source>itself. &lt;code&gt;PERL_MAGIC_uvar&lt;/code&gt; was made available for hashes, and weak references now call uvar &lt;code&gt;get&lt;/code&gt; magic after a weakref has been cleared. The first feature is used to make field hashes intercept their keys upon access. The second one triggers garbage collection.</source>
          <target state="translated">本身。 &lt;code&gt;PERL_MAGIC_uvar&lt;/code&gt; 可用于散列，弱引用现在称为uvar，在弱引用被清除后 &lt;code&gt;get&lt;/code&gt; 变魔术。第一个功能用于使字段哈希在访问时拦截其密钥。第二个触发垃圾回收。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
