<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="c4c7395952652d692e1ed3ecb90decbeb8d571b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-R&lt;/code&gt; , &lt;code&gt;-W&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/-x&quot;&gt;-X&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;-O&lt;/code&gt; are indistinguishable from &lt;code&gt;-r&lt;/code&gt; , &lt;code&gt;-w&lt;/code&gt; , &lt;code&gt;-x&lt;/code&gt; , &lt;code&gt;-o&lt;/code&gt; . (Win32, VMS, RISC OS)</source>
          <target state="translated">&lt;code&gt;-R&lt;/code&gt; ， &lt;code&gt;-W&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/-x&quot;&gt;-X&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;-O&lt;/code&gt; 与 &lt;code&gt;-r&lt;/code&gt; ， &lt;code&gt;-w&lt;/code&gt; ， &lt;code&gt;-x&lt;/code&gt; 和 &lt;code&gt;-o&lt;/code&gt; 是无法区分的。（Win32，VMS，RISC OS）</target>
        </trans-unit>
        <trans-unit id="7d5af3fb6df5c96c8552d3c4c08384be45953ef4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-d&lt;/code&gt; is true if passed a device spec without an explicit directory. (VMS)</source>
          <target state="translated">&lt;code&gt;-d&lt;/code&gt; 如果传递的设备规范没有显式目录，则-d为true。（VMS）</target>
        </trans-unit>
        <trans-unit id="a340d0a2b8e44c5124e4655b8a7237da67ea42b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-g&lt;/code&gt; , &lt;code&gt;-k&lt;/code&gt; , &lt;code&gt;-l&lt;/code&gt; , &lt;code&gt;-u&lt;/code&gt; , &lt;code&gt;-A&lt;/code&gt; are not particularly meaningful. (Win32, VMS, RISC OS)</source>
          <target state="translated">&lt;code&gt;-g&lt;/code&gt; ， &lt;code&gt;-k&lt;/code&gt; ， &lt;code&gt;-l&lt;/code&gt; ， &lt;code&gt;-u&lt;/code&gt; ， &lt;code&gt;-A&lt;/code&gt; 并不是特别有意义。（Win32，VMS，RISC OS）</target>
        </trans-unit>
        <trans-unit id="f770fc0a63e71da3b8a342413f4e20e2101d6c75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-g&lt;/code&gt; is a flag to the C compiler to have it produce debugging information which will allow us to step through a running program, and to see in which C function we are at (without the debugging information we might see only the numerical addresses of the functions, which is not very helpful).</source>
          <target state="translated">&lt;code&gt;-g&lt;/code&gt; 是C编译器的标志，以使其产生调试信息，这将使我们能够逐步执行一个正在运行的程序，并查看我们位于哪个C函数中（没有调试信息，我们可能只会看到C的数字地址。功能，这不是很有帮助）。</target>
        </trans-unit>
        <trans-unit id="01a975a3450c1d047de8b68a1655f0a6a6ff1b91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-i&lt;/code&gt; sets the value of Perl's &lt;code&gt;$^I&lt;/code&gt; variable, which in turn affects the behavior of &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; ; see &lt;a href=&quot;perlrun&quot;&gt;perlrun&lt;/a&gt; for more details. By modifying the appropriate variables directly, you can get the same behavior within a larger program. For example:</source>
          <target state="translated">&lt;code&gt;-i&lt;/code&gt; 设置Perl的 &lt;code&gt;$^I&lt;/code&gt; 变量的值，它反过来影响 &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; 的行为；有关更多详细信息，请参见&lt;a href=&quot;perlrun&quot;&gt;perlrun&lt;/a&gt;。通过直接修改适当的变量，您可以在较大的程序中获得相同的行为。例如：</target>
        </trans-unit>
        <trans-unit id="3df07bafaa229b3f5f804e2d15db5243976c6a78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-mode&lt;/code&gt; is a synonym for &lt;code&gt;mode&lt;/code&gt; . &lt;code&gt;-recsep&lt;/code&gt; is a synonym for &lt;code&gt;recsep&lt;/code&gt; . &lt;code&gt;-memory&lt;/code&gt; is a synonym for &lt;code&gt;memory&lt;/code&gt; . You get the idea.</source>
          <target state="translated">&lt;code&gt;-mode&lt;/code&gt; 是 &lt;code&gt;mode&lt;/code&gt; 的同义词。 &lt;code&gt;-recsep&lt;/code&gt; 是一个代名词 &lt;code&gt;recsep&lt;/code&gt; 。 &lt;code&gt;-memory&lt;/code&gt; 是 &lt;code&gt;memory&lt;/code&gt; 的同义词。你明白了。</target>
        </trans-unit>
        <trans-unit id="e3df98be4420c3856ff554875e341d1dcb377965" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-p&lt;/code&gt; is not particularly meaningful. (VMS, RISC OS)</source>
          <target state="translated">&lt;code&gt;-p&lt;/code&gt; 不是特别有意义。（VMS，RISC操作系统）</target>
        </trans-unit>
        <trans-unit id="44b5ade4f4cc1c4ba0b0dbebf1e249761eeda9fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-quiet =&amp;gt; num&lt;/code&gt; If &lt;code&gt;num&lt;/code&gt; is true, do not print any errors/warnings. This is useful when Pod::Checker is used to munge POD code into plain text from within POD formatters.</source>
          <target state="translated">&lt;code&gt;-quiet =&amp;gt; num&lt;/code&gt; 如果 &lt;code&gt;num&lt;/code&gt; 为true，则不打印任何错误/警告。当Pod :: Checker用于将POD代码从POD格式化程序中转换为纯文本时，此功能很有用。</target>
        </trans-unit>
        <trans-unit id="f770ed91ff164559d0abd6133fd3b69dd5415bfb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-r&lt;/code&gt; , &lt;code&gt;-w&lt;/code&gt; , &lt;code&gt;-x&lt;/code&gt; , and &lt;code&gt;-o&lt;/code&gt; tell whether the file is accessible, which may not reflect UIC-based file protections. (VMS)</source>
          <target state="translated">&lt;code&gt;-r&lt;/code&gt; ， &lt;code&gt;-w&lt;/code&gt; ， &lt;code&gt;-x&lt;/code&gt; 和 &lt;code&gt;-o&lt;/code&gt; 指示文件是否可访问，这可能无法反映基于UIC的文件保护。（VMS）</target>
        </trans-unit>
        <trans-unit id="c598522c04ff68c955ea80deb6fbadc566e1d400" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-s&lt;/code&gt; by name on an open file will return the space reserved on disk, rather than the current extent. &lt;code&gt;-s&lt;/code&gt; on an open filehandle returns the current size. (RISC OS)</source>
          <target state="translated">&lt;code&gt;-s&lt;/code&gt; 按名称在打开的文件上将返回磁盘上保留的空间，而不是当前盘区。打开的文件句柄上的 &lt;code&gt;-s&lt;/code&gt; 返回当前大小。（RISC操作系统）</target>
        </trans-unit>
        <trans-unit id="eb7f863a163eba9181b50764fd83652ace5e0f66" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-w&lt;/code&gt; is always set. You can turn this off in the test with &lt;code&gt;&lt;a href=&quot;../functions/begin&quot;&gt;BEGIN&lt;/a&gt; {
$^W = 0 }&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;-w&lt;/code&gt; 始终设置。您可以在测试中使用 &lt;code&gt;&lt;a href=&quot;../functions/begin&quot;&gt;BEGIN&lt;/a&gt; { $^W = 0 }&lt;/code&gt; 将其关闭。</target>
        </trans-unit>
        <trans-unit id="51f6253934c68e4dbdee50184314e515e3ed4d69" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-w&lt;/code&gt; only inspects the read-only file attribute (FILE_ATTRIBUTE_READONLY), which determines whether the directory can be deleted, not whether it can be written to. Directories always have read and write access unless denied by discretionary access control lists (DACLs). (Win32)</source>
          <target state="translated">&lt;code&gt;-w&lt;/code&gt; 仅检查只读文件属性（FILE_ATTRIBUTE_READONLY），该属性确定目录是否可以删除，而不是是否可以写入。目录始终具有读取和写入访问权限，除非被任意访问控制列表（DACL）拒绝。（Win32的）</target>
        </trans-unit>
        <trans-unit id="9848a00d3e7ba37f894ed0ca52d187153533cc0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-warnings =&amp;gt; num&lt;/code&gt; Print warnings if &lt;code&gt;num&lt;/code&gt; is true. The higher the value of &lt;code&gt;num&lt;/code&gt; , the more warnings are printed. Currently there are only levels 1 and 2.</source>
          <target state="translated">&lt;code&gt;-warnings =&amp;gt; num&lt;/code&gt; 如果 &lt;code&gt;num&lt;/code&gt; 为true，则显示警告。 &lt;code&gt;num&lt;/code&gt; 的值越高，打印的警告越多。当前只有1级和2级。</target>
        </trans-unit>
        <trans-unit id="26338b342767aa86a4f5c2cd446ef7694f7f9b03" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-x&lt;/code&gt; (or &lt;code&gt;&lt;a href=&quot;functions/-x&quot;&gt;-X&lt;/a&gt;&lt;/code&gt;) determine if a file ends in one of the executable suffixes. &lt;code&gt;-S&lt;/code&gt; is meaningless. (Win32)</source>
          <target state="translated">&lt;code&gt;-x&lt;/code&gt; （或 &lt;code&gt;&lt;a href=&quot;functions/-x&quot;&gt;-X&lt;/a&gt;&lt;/code&gt; ）确定文件是否以可执行文件后缀之一结尾。 &lt;code&gt;-S&lt;/code&gt; 是没有意义的。（Win32的）</target>
        </trans-unit>
        <trans-unit id="004059b6589f5cf146373041cd8de0aa8db4fb99" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-x&lt;/code&gt; (or &lt;code&gt;&lt;a href=&quot;functions/-x&quot;&gt;-X&lt;/a&gt;&lt;/code&gt;) determine if a file has an executable file type. (RISC OS)</source>
          <target state="translated">&lt;code&gt;-x&lt;/code&gt; （或 &lt;code&gt;&lt;a href=&quot;functions/-x&quot;&gt;-X&lt;/a&gt;&lt;/code&gt; ）确定文件是否具有可执行文件类型。（RISC操作系统）</target>
        </trans-unit>
        <trans-unit id="30cb77fa8022c6097d9e2722edcf56db77b193e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/&lt;/code&gt; is not implemented in Perls before 5.6, so if your code is required to work on older Perls you'll need to &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;( 'Z* Z* C')&lt;/code&gt; to get the length, then use it to make a new unpack string. For example</source>
          <target state="translated">&lt;code&gt;/&lt;/code&gt; 在5.6之前的Perls中未实现，因此，如果您的代码需要在较旧的Perls上运行，则需要 &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;( 'Z* Z* C')&lt;/code&gt; 以获取长度，然后使用它来制作新的解压缩字符串。例如</target>
        </trans-unit>
        <trans-unit id="2255f653ec4e14f86b6a230c7950f4828d1c42f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/World/&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m!World!&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m{World}&lt;/a&gt;&lt;/code&gt; all represent the same thing. When, e.g., the quote (&lt;code&gt;&quot;&lt;/code&gt;) is used as a delimiter, the forward slash &lt;code&gt;'/'&lt;/code&gt; becomes an ordinary character and can be used in this regexp without trouble.</source>
          <target state="translated">&lt;code&gt;/World/&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m!World!&lt;/a&gt;&lt;/code&gt; ，而 &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m{World}&lt;/a&gt;&lt;/code&gt; 代表同一件事。例如，当使用引号（ &lt;code&gt;&quot;&lt;/code&gt; ）作为定界符时，正斜杠 &lt;code&gt;'/'&lt;/code&gt; 成为普通字符，可以在此正则表达式中使用而不会遇到麻烦。</target>
        </trans-unit>
        <trans-unit id="2e4bb16c5b73fbb6e42dd2c89421c762d2d8f026" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/a&lt;/code&gt; also sets the character set to Unicode, BUT adds several restrictions for &lt;b&gt;A&lt;/b&gt;SCII-safe matching.</source>
          <target state="translated">&lt;code&gt;/a&lt;/code&gt; 也将字符集设置为Unicode，但增加了对一些限制&lt;b&gt;一个&lt;/b&gt; SCII安全匹配。</target>
        </trans-unit>
        <trans-unit id="a058655ca9b7df500f2266e0005549d8d3e223d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/bin/ftp&lt;/code&gt; is blacklisted by default; see the &lt;code&gt;$BLACKLIST&lt;/code&gt; variable further down.</source>
          <target state="translated">&lt;code&gt;/bin/ftp&lt;/code&gt; 默认被列入黑名单；进一步查看 &lt;code&gt;$BLACKLIST&lt;/code&gt; 变量。</target>
        </trans-unit>
        <trans-unit id="e7c7c0b08473b89f6eba8829e2c3c1656684873f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/d&lt;/code&gt; is the old, problematic, pre-5.14 &lt;b&gt;D&lt;/b&gt;efault character set behavior. Its only use is to force that old behavior.</source>
          <target state="translated">&lt;code&gt;/d&lt;/code&gt; 是老，有问题的，预5.14 &lt;b&gt;d&lt;/b&gt; EFAULT字符集的行为。它的唯一用途是强制执行旧的行为。</target>
        </trans-unit>
        <trans-unit id="febc46674582418d06306fc87a6a9bd45f9575fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/d&lt;/code&gt;, &lt;code&gt;/u&lt;/code&gt; , &lt;code&gt;/a&lt;/code&gt; , and &lt;code&gt;/l&lt;/code&gt; , available starting in 5.14, are called the character set modifiers; they affect the character set rules used for the regular expression.</source>
          <target state="translated">&lt;code&gt;/d&lt;/code&gt; 从5.14开始可用的/ d， &lt;code&gt;/u&lt;/code&gt; ， &lt;code&gt;/a&lt;/code&gt; 和 &lt;code&gt;/l&lt;/code&gt; 被称为字符集修饰符。它们会影响用于正则表达式的字符集规则。</target>
        </trans-unit>
        <trans-unit id="9b6d598b1ecd53357374289fc79181d6b6e30491" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/n&lt;/code&gt; can be negated on a per-group basis. Alternatively, named captures may still be used.</source>
          <target state="translated">&lt;code&gt;/n&lt;/code&gt; 可以按组取反。或者，仍可以使用命名捕获。</target>
        </trans-unit>
        <trans-unit id="27ac450b442821abb7c32c4c890405928fdfa28f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/u&lt;/code&gt; sets the character set to &lt;b&gt;U&lt;/b&gt;nicode.</source>
          <target state="translated">&lt;code&gt;/u&lt;/code&gt; 将字符集设置为&lt;b&gt;U&lt;/b&gt; nicode。</target>
        </trans-unit>
        <trans-unit id="ffd7758b5452e01f565373a6a0ae745fee7b3413" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/x&lt;/code&gt; lets you turn this:</source>
          <target state="translated">&lt;code&gt;/x&lt;/code&gt; 可让您启用以下命令：</target>
        </trans-unit>
        <trans-unit id="22ddae5ee6d3b01640a82b11115def15c0a0729c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/x&lt;/code&gt; tells the regular expression parser to ignore most whitespace that is neither backslashed nor within a bracketed character class. You can use this to break up your regular expression into (slightly) more readable parts. Also, the &lt;code&gt;#&lt;/code&gt; character is treated as a metacharacter introducing a comment that runs up to the pattern's closing delimiter, or to the end of the current line if the pattern extends onto the next line. Hence, this is very much like an ordinary Perl code comment. (You can include the closing delimiter within the comment only if you precede it with a backslash, so be careful!)</source>
          <target state="translated">&lt;code&gt;/x&lt;/code&gt; 告诉正则表达式解析器忽略大多数既不是反斜杠也不放在方括号字符类中的空格。您可以使用它来将您的正则表达式分解为（稍微）更易读的部分。同样， &lt;code&gt;#&lt;/code&gt; 字符被视为元字符，它引入一个注释，该注释一直运行到模式的结束定界符，或者如果模式扩展到下一行，则注释将运行到当前行的末尾。因此，这非常类似于普通的Perl代码注释。（仅当您在反斜杠前面加上反斜杠时，您才可以在该注释中包含结束定界符，因此请注意！）</target>
        </trans-unit>
        <trans-unit id="5981c6b6f44acf2b5d0296f7ddc1ba22fd92a26b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0[0]&lt;/code&gt; items indicate that there is no corresponding node.</source>
          <target state="translated">&lt;code&gt;0[0]&lt;/code&gt; 项指示没有相应的节点。</target>
        </trans-unit>
        <trans-unit id="9e482cf4b4fb32a891abadbdc5931dba553b2cbc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1..1&lt;/code&gt; is the plan. Gotta have a plan.</source>
          <target state="translated">&lt;code&gt;1..1&lt;/code&gt; 是计划。有一个计划。</target>
        </trans-unit>
        <trans-unit id="079935d14865ac40c0d6e200d065519e65c3cdcf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;2&amp;gt;&amp;amp;1&lt;/code&gt; redirects stderr to stdout.</source>
          <target state="translated">&lt;code&gt;2&amp;gt;&amp;amp;1&lt;/code&gt; 将stderr重定向到stdout。</target>
        </trans-unit>
        <trans-unit id="337d24f61f20784a0224676b1a3b5621a81abd45" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;2&amp;gt;&amp;gt;file&lt;/code&gt; appends stderr to &lt;code&gt;file&lt;/code&gt; , and</source>
          <target state="translated">&lt;code&gt;2&amp;gt;&amp;gt;file&lt;/code&gt; 将stderr附加到 &lt;code&gt;file&lt;/code&gt; ，并且</target>
        </trans-unit>
        <trans-unit id="b7ccb2f92fe3975e1a3fd67583081fc9c8b22203" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;2&amp;gt;file&lt;/code&gt; writes stderr to &lt;code&gt;file&lt;/code&gt; ,</source>
          <target state="translated">&lt;code&gt;2&amp;gt;file&lt;/code&gt; 将stderr写入 &lt;code&gt;file&lt;/code&gt; ，</target>
        </trans-unit>
        <trans-unit id="3981fad441eed11874883499cec6490b94bc7d20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:extended&lt;/code&gt; exports the Perl specific functions for &lt;code&gt;syslog(3)&lt;/code&gt; :</source>
          <target state="translated">&lt;code&gt;:extended&lt;/code&gt; 导出 &lt;code&gt;syslog(3)&lt;/code&gt; 的Perl特定功能：</target>
        </trans-unit>
        <trans-unit id="b097d19f9e31e760a010b2177386c29f33c946a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:loose&lt;/code&gt; is a variant of &lt;code&gt;:full&lt;/code&gt; which allows</source>
          <target state="translated">&lt;code&gt;:loose&lt;/code&gt; 是 &lt;code&gt;:full&lt;/code&gt; 的变体，它允许</target>
        </trans-unit>
        <trans-unit id="669910f757f8fda30540781c67df68d670678863" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:loose&lt;/code&gt; slows down look-ups by a factor of 2 to 3 versus &lt;code&gt;:full&lt;/code&gt; , but the trade-off may be worth it to you. Each individual look-up takes very little time, and the results are cached, so the speed difference would become a factor only in programs that do look-ups of many different spellings, and probably only when those look-ups are through &lt;code&gt;vianame()&lt;/code&gt; and &lt;code&gt;string_vianame()&lt;/code&gt; , since &lt;code&gt;\N{...}&lt;/code&gt; look-ups are done at compile time.</source>
          <target state="translated">&lt;code&gt;:loose&lt;/code&gt; 与 &lt;code&gt;:full&lt;/code&gt; 相比，：loose将查找速度降低了2到3倍，但这种权衡对您来说值得。每个单独的查询花费很少的时间，并且结果被缓存，因此，速度差异仅会在执行许多不同拼写的程序中成为一个因素，并且可能只有在通过 &lt;code&gt;vianame()&lt;/code&gt; 进行这些查询时才会成为一个因素。和 &lt;code&gt;string_vianame()&lt;/code&gt; ，因为 &lt;code&gt;\N{...}&lt;/code&gt; 查找是在编译时完成的。</target>
        </trans-unit>
        <trans-unit id="e9d7d864e6dd6725fe109f9ec74c6124803c81cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:macros&lt;/code&gt; exports the symbols corresponding to most of your &lt;code&gt;syslog(3)&lt;/code&gt; macros and the &lt;code&gt;LOG_UPTO()&lt;/code&gt; and &lt;code&gt;LOG_MASK()&lt;/code&gt; functions. See &lt;a href=&quot;#CONSTANTS&quot;&gt;CONSTANTS&lt;/a&gt; for the supported constants and their meaning.</source>
          <target state="translated">&lt;code&gt;:macros&lt;/code&gt; 导出与大多数 &lt;code&gt;syslog(3)&lt;/code&gt; 宏以及 &lt;code&gt;LOG_UPTO()&lt;/code&gt; 和 &lt;code&gt;LOG_MASK()&lt;/code&gt; 函数相对应的符号。有关受支持的常量及其含义，请参见&lt;a href=&quot;#CONSTANTS&quot;&gt;CONSTANTS&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f664d57f829bb236ed3a80342cea7743e03c9843" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:nocase&lt;/code&gt; and &lt;code&gt;:case&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:nocase&lt;/code&gt; 和 &lt;code&gt;:case&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="393965e591f823a5c7c5f84e45b034f602c1b44f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:perlio&lt;/code&gt; will insert a &lt;code&gt;:unix&lt;/code&gt; layer below itself to do low level IO.</source>
          <target state="translated">&lt;code&gt;:perlio&lt;/code&gt; 将在其下方插入一个 &lt;code&gt;:unix&lt;/code&gt; 层以执行低级IO。</target>
        </trans-unit>
        <trans-unit id="58bdb7835e989d3493f81c8387cdd5e6b357f584" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:standard&lt;/code&gt; exports the standard &lt;code&gt;syslog(3)&lt;/code&gt; functions:</source>
          <target state="translated">&lt;code&gt;:standard&lt;/code&gt; 导出标准的 &lt;code&gt;syslog(3)&lt;/code&gt; 函数：</target>
        </trans-unit>
        <trans-unit id="7723508b0cf32c6becdfb32b8c90afbcd97daea4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;;&lt;/code&gt; before executing your program. You can use quotes to add extra code after the module name, e.g., &lt;code&gt;'-M&lt;i&gt;MODULE&lt;/i&gt; qw(foo bar)'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;;&lt;/code&gt; 在执行程序之前。您可以使用引号在模块名称后添加其他代码，例如 &lt;code&gt;'-M&lt;i&gt;MODULE&lt;/i&gt; qw(foo bar)'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="46553e5b2e1fde3176954b71404b7f6a22f6b3a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../functions/import&quot;&gt;import()&lt;/a&gt;&lt;/code&gt; also sets the &lt;code&gt;exported_to()&lt;/code&gt; attribute of your builder to be the caller of the &lt;code&gt;&lt;a href=&quot;../../functions/import&quot;&gt;import()&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../functions/import&quot;&gt;import()&lt;/a&gt;&lt;/code&gt; 还将构建器的 &lt;code&gt;exported_to()&lt;/code&gt; 属性设置为 &lt;code&gt;&lt;a href=&quot;../../functions/import&quot;&gt;import()&lt;/a&gt;&lt;/code&gt; 函数的调用者。</target>
        </trans-unit>
        <trans-unit id="0b4b41e6d9806d4d5463fcd3e58de249dc723c02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../functions/binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt; accepts one optional parameter, which is the layer to be passed on to the &lt;code&gt;&lt;a href=&quot;../functions/binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt; call.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../functions/binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt; 接受一个可选参数，该参数是要传递给 &lt;code&gt;&lt;a href=&quot;../functions/binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt; 调用的层。</target>
        </trans-unit>
        <trans-unit id="74f783a72bce4dae4ba2e4905d91ba101d770101" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../functions/binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt; sets &lt;code&gt;&lt;a href=&quot;../functions/binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt; on the underlying &lt;code&gt;IO&lt;/code&gt; object, as documented in &lt;code&gt;perldoc -f &lt;a href=&quot;../functions/binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../functions/binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt; 在基础 &lt;code&gt;IO&lt;/code&gt; 对象上设置 &lt;code&gt;&lt;a href=&quot;../functions/binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt; ，如 &lt;code&gt;perldoc -f &lt;a href=&quot;../functions/binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;../functions/binmode&quot;&gt;binmode中所述&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8c2c461c21657cf272797141a2b0587b13a03497" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../functions/int&quot;&gt;int()&lt;/a&gt;&lt;/code&gt; will return (at least for Perl v5.7.1 and up) another BigInt, not a Perl scalar:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../functions/int&quot;&gt;int()&lt;/a&gt;&lt;/code&gt; 将返回（至少对于Perl v5.7.1及更高版本）另一个BigInt，而不是Perl标量：</target>
        </trans-unit>
        <trans-unit id="87be11f6d2f761c7d725f291d31bf6656fee51d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../functions/lock&quot;&gt;lock&lt;/a&gt;&lt;/code&gt; follows references exactly</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../functions/lock&quot;&gt;lock&lt;/a&gt;&lt;/code&gt; 完全遵循引用</target>
        </trans-unit>
        <trans-unit id="5da38e4772827175e65158aeaa06f0af9689d353" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../functions/lock&quot;&gt;lock&lt;/a&gt;&lt;/code&gt; places a &lt;b&gt;advisory&lt;/b&gt; lock on a variable until the lock goes out of scope. If the variable is locked by another thread, the &lt;code&gt;&lt;a href=&quot;../functions/lock&quot;&gt;lock&lt;/a&gt;&lt;/code&gt; call will block until it's available. Multiple calls to &lt;code&gt;&lt;a href=&quot;../functions/lock&quot;&gt;lock&lt;/a&gt;&lt;/code&gt; by the same thread from within dynamically nested scopes are safe -- the variable will remain locked until the outermost lock on the variable goes out of scope.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../functions/lock&quot;&gt;lock&lt;/a&gt;&lt;/code&gt; 将&lt;b&gt;咨询&lt;/b&gt;锁放在变量上，直到该锁超出范围。如果该变量被另一个线程锁定，则 &lt;code&gt;&lt;a href=&quot;../functions/lock&quot;&gt;lock&lt;/a&gt;&lt;/code&gt; 调用将阻塞，直到可用为止。在动态嵌套范围内多次调用同一线程来 &lt;code&gt;&lt;a href=&quot;../functions/lock&quot;&gt;lock&lt;/a&gt;&lt;/code&gt; 是安全的-变量将保持锁定状态，直到变量的最外层锁超出范围为止。</target>
        </trans-unit>
        <trans-unit id="b0bc602e5a95f7ab0683bcb13cca7976f3a0b65a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../functions/log&quot;&gt;log(-inf)&lt;/a&gt;&lt;/code&gt; is highly weird. Since log(-x)=pi*i+log(x), then log(-inf)=pi*i+inf. However, since the imaginary part is finite, the real infinity &quot;overshadows&quot; it, so the number might as well just be infinity. However, the result is a complex number, and since BigInt/BigFloat can only have real numbers as results, the result is NaN.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../functions/log&quot;&gt;log(-inf)&lt;/a&gt;&lt;/code&gt; 非常奇怪。由于log（-x）= pi * i + log（x），因此log（-inf）= pi * i + inf。但是，由于虚部是有限的，所以真正的无穷大会&amp;ldquo;遮盖&amp;rdquo;它，因此数字也可能只是无穷大。但是，结果是一个复数，并且由于BigInt / BigFloat只能将实数作为结果，因此结果为NaN。</target>
        </trans-unit>
        <trans-unit id="59ec191a3833592580741021600849b3abd729c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; accepts one, two or three parameters. With one parameter, it is just a front end for the built-in &lt;code&gt;&lt;a href=&quot;../functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; function. With two or three parameters, the first parameter is a filename that may include whitespace or other special characters, and the second parameter is the open mode, optionally followed by a file permission value.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; 接受一个，两个或三个参数。使用一个参数，它只是内置 &lt;code&gt;&lt;a href=&quot;../functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; 功能的前端。具有两个或三个参数，第一个参数是文件名，可以包含空格或其他特殊字符，第二个参数是打开模式，可选地后跟文件许可权值。</target>
        </trans-unit>
        <trans-unit id="c2ead93e5ae2cdbfb37e87b9aaf4b56f8342cd9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; takes two arguments. The first is the name of the file to open and the second is the open mode. The mode can be anything acceptable to &lt;a href=&quot;../compress/zlib&quot;&gt;Compress::Zlib&lt;/a&gt; and by extension anything acceptable to</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; 需要两个参数。第一个是打开文件的名称，第二个是打开模式。该模式可以是&lt;a href=&quot;../compress/zlib&quot;&gt; Compress :: Zlib&lt;/a&gt;可以接受的任何方式，并且可以扩展为任何可以接受的方式：</target>
        </trans-unit>
        <trans-unit id="10314a65bb5f737678649714b2af14bac7ab022b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../functions/push&quot;&gt;push&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../functions/pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../functions/shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../functions/unshift&quot;&gt;unshift&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;../functions/splice&quot;&gt;splice&lt;/a&gt;&lt;/code&gt; cannot be deferred. When you perform one of these operations, any deferred data is written to the file and the operation is performed immediately. This may change in a future version.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../functions/push&quot;&gt;push&lt;/a&gt;&lt;/code&gt; 不能推迟 push， &lt;code&gt;&lt;a href=&quot;../functions/pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../functions/shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../functions/unshift&quot;&gt;unshift&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;../functions/splice&quot;&gt;splice&lt;/a&gt;&lt;/code&gt; 。当您执行这些操作之一时，所有延迟的数据都将写入文件，并且该操作将立即执行。这可能会在将来的版本中更改。</target>
        </trans-unit>
        <trans-unit id="75f1af66ad9aaecf816ee7e3787eccbf41e6b7e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../functions/select&quot;&gt;select&lt;/a&gt;&lt;/code&gt; is a static method, that is you call it with the package name like &lt;code&gt;new&lt;/code&gt; . &lt;code&gt;READ&lt;/code&gt; , &lt;code&gt;WRITE&lt;/code&gt; and &lt;code&gt;EXCEPTION&lt;/code&gt; are either &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;IO::Select&lt;/code&gt; objects. &lt;code&gt;TIMEOUT&lt;/code&gt; is optional and has the same effect as for the core select call.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../functions/select&quot;&gt;select&lt;/a&gt;&lt;/code&gt; 是一个静态方法，即使用包名称（如 &lt;code&gt;new&lt;/code&gt; )来调用它。 &lt;code&gt;READ&lt;/code&gt; ， &lt;code&gt;WRITE&lt;/code&gt; 和 &lt;code&gt;EXCEPTION&lt;/code&gt; 是 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;IO::Select&lt;/code&gt; 对象。 &lt;code&gt;TIMEOUT&lt;/code&gt; 是可选的，其作用与核心选择调用相同。</target>
        </trans-unit>
        <trans-unit id="817eadf1b9adde1ba72695f76344cd268af72b88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; only ever matches another &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 只匹配另一个 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5396d3ff479715000ca76635e4a7743888fcf9b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; will only ever match &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;. So you can test a value against &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; like this:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 只会匹配 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。因此，您可以像下面这样针对 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 测试值：</target>
        </trans-unit>
        <trans-unit id="00aaf4e59c63d867f1c68b03ef33ba4aa5fba34a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;-ing a &lt;code&gt;Tie::File&lt;/code&gt; array element just blanks out the corresponding record in the file. When you read it back again, you'll get the empty string, so the supposedly-&lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;'ed value will be defined. Similarly, if you have &lt;code&gt;autochomp&lt;/code&gt; disabled, then</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; -ing一个 &lt;code&gt;Tie::File&lt;/code&gt; 数组元素只是空白出来的文件中的相应记录。当您再次读回它时，您将得到一个空字符串，因此将定义假定为 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 的值。同样，如果你有 &lt;code&gt;autochomp&lt;/code&gt; 禁止，则</target>
        </trans-unit>
        <trans-unit id="6e7047b1bd29e1be50a6c94747b1f96dfa733cc5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;. The value of the macro is not needed.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。不需要宏的值。</target>
        </trans-unit>
        <trans-unit id="e529533962f928a5563433218b96d46c0165a2f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; raises an exception. Inside an &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; the error message is stuffed into &lt;code&gt;$@&lt;/code&gt; and the &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; is terminated with the undefined value. If the exception is outside of all enclosing &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;s, then the uncaught exception prints LIST to &lt;code&gt;STDERR&lt;/code&gt; and exits with a non-zero value. If you need to exit the process with a specific exit code, see &lt;a href=&quot;exit&quot;&gt;exit&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; 引发异常。在 &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; 内部，错误消息填充到 &lt;code&gt;$@&lt;/code&gt; ，并且 &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; 以未定义的值终止。如果该异常在所有封闭的 &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; 之外，则未捕获的异常将LIST打印到 &lt;code&gt;STDERR&lt;/code&gt; 并以非零值退出。如果您需要使用特定的退出代码退出流程，请参见&lt;a href=&quot;exit&quot;&gt; exit&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cc00daf5a8853ec2a5f38fb396e5099336656db3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;do&quot;&gt;do&lt;/a&gt; BLOCK&lt;/code&gt; does</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;do&quot;&gt;do&lt;/a&gt; BLOCK&lt;/code&gt; 做</target>
        </trans-unit>
        <trans-unit id="3ef00a2fa49a9b03b5b9e7f1482c6a3dce655e77" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt; BLOCK&lt;/code&gt; does</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt; BLOCK&lt;/code&gt; 做</target>
        </trans-unit>
        <trans-unit id="4df80248abb973135120867aea4de5126e5c9845" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/-x&quot;&gt;-X&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/chmod&quot;&gt;chmod&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/chown&quot;&gt;chown&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/chroot&quot;&gt;chroot&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/crypt&quot;&gt;crypt&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/dbmclose&quot;&gt;dbmclose&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/dbmopen&quot;&gt;dbmopen&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/dump&quot;&gt;dump&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/endgrent&quot;&gt;endgrent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/endhostent&quot;&gt;endhostent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/endnetent&quot;&gt;endnetent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/endprotoent&quot;&gt;endprotoent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/endpwent&quot;&gt;endpwent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/endservent&quot;&gt;endservent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/fcntl&quot;&gt;fcntl&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/flock&quot;&gt;flock&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getgrent&quot;&gt;getgrent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getgrgid&quot;&gt;getgrgid&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/gethostbyname&quot;&gt;gethostbyname&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/gethostent&quot;&gt;gethostent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getlogin&quot;&gt;getlogin&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getnetbyaddr&quot;&gt;getnetbyaddr&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getnetbyname&quot;&gt;getnetbyname&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getnetent&quot;&gt;getnetent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getppid&quot;&gt;getppid&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getpgrp&quot;&gt;getpgrp&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getpriority&quot;&gt;getpriority&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getprotobynumber&quot;&gt;getprotobynumber&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getprotoent&quot;&gt;getprotoent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getpwent&quot;&gt;getpwent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getpwnam&quot;&gt;getpwnam&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getpwuid&quot;&gt;getpwuid&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getservbyport&quot;&gt;getservbyport&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getservent&quot;&gt;getservent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getsockopt&quot;&gt;getsockopt&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/glob&quot;&gt;glob&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/ioctl&quot;&gt;ioctl&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/link&quot;&gt;link&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/lstat&quot;&gt;lstat&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/msgctl&quot;&gt;msgctl&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/msgget&quot;&gt;msgget&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/msgrcv&quot;&gt;msgrcv&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/msgsnd&quot;&gt;msgsnd&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/pipe&quot;&gt;pipe&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/readlink&quot;&gt;readlink&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/rename&quot;&gt;rename&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/select&quot;&gt;select&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/semctl&quot;&gt;semctl&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/semget&quot;&gt;semget&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/semop&quot;&gt;semop&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/setgrent&quot;&gt;setgrent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/sethostent&quot;&gt;sethostent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/setnetent&quot;&gt;setnetent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/setpgrp&quot;&gt;setpgrp&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/setpriority&quot;&gt;setpriority&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/setprotoent&quot;&gt;setprotoent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/setpwent&quot;&gt;setpwent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/setservent&quot;&gt;setservent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/setsockopt&quot;&gt;setsockopt&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/shmctl&quot;&gt;shmctl&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/shmget&quot;&gt;shmget&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/shmread&quot;&gt;shmread&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/shmwrite&quot;&gt;shmwrite&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/socket&quot;&gt;socket&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/socketpair&quot;&gt;socketpair&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/symlink&quot;&gt;symlink&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/syscall&quot;&gt;syscall&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/sysopen&quot;&gt;sysopen&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/times&quot;&gt;times&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/truncate&quot;&gt;truncate&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/umask&quot;&gt;umask&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/utime&quot;&gt;utime&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/wait&quot;&gt;wait&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/waitpid&quot;&gt;waitpid&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/-x&quot;&gt;-X&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/chmod&quot;&gt;chmod&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/chown&quot;&gt;chown&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/chroot&quot;&gt;chroot&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/crypt&quot;&gt;crypt&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/dbmclose&quot;&gt;dbmclose&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/dbmopen&quot;&gt;dbmopen&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/dump&quot;&gt;dump&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/endgrent&quot;&gt;endgrent&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/endhostent&quot;&gt;endhostent&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/endnetent&quot;&gt;endnetent&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/endprotoent&quot;&gt;endprotoent&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/endpwent&quot;&gt;endpwent&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/endservent&quot;&gt;endservent&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/fcntl&quot;&gt;fcntl&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/flock&quot;&gt;flock&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/getgrent&quot;&gt;getgrent&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/getgrgid&quot;&gt;getgrgid&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/gethostbyname&quot;&gt;gethostbyname&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/gethostent&quot;&gt;gethostent&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/getlogin&quot;&gt;getlogin&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/getnetbyaddr&quot;&gt;getnetbyaddr&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/getnetbyname&quot;&gt;getnetbyname&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/getnetent&quot;&gt;getnetent&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/getppid&quot;&gt;getppid&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/getpgrp&quot;&gt;getpgrp&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/getpriority&quot;&gt;getpriority&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/getprotobynumber&quot;&gt;getprotobynumber&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/getprotoent&quot;&gt;getprotoent&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/getpwent&quot;&gt;getpwent&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/getpwnam&quot;&gt;getpwnam&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/getpwuid&quot;&gt;getpwuid&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/getservbyport&quot;&gt;getservbyport&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/getservent&quot;&gt;getservent&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/getsockopt&quot;&gt;getsockopt&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/glob&quot;&gt;glob&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/ioctl&quot;&gt;ioctl&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/link&quot;&gt;link&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/lstat&quot;&gt;lstat&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/msgctl&quot;&gt;msgctl&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/msgget&quot;&gt;msgget&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/msgrcv&quot;&gt;msgrcv&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/msgsnd&quot;&gt;msgsnd&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/pipe&quot;&gt;pipe&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/readlink&quot;&gt;readlink&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/rename&quot;&gt;rename&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/select&quot;&gt;select&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/semctl&quot;&gt;semctl&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/semget&quot;&gt;semget&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/semop&quot;&gt;semop&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/setgrent&quot;&gt;setgrent&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/sethostent&quot;&gt;sethostent&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/setnetent&quot;&gt;setnetent&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/setpgrp&quot;&gt;setpgrp&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/setpriority&quot;&gt;setpriority&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/setprotoent&quot;&gt;setprotoent&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/setpwent&quot;&gt;setpwent&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/setservent&quot;&gt;setservent&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/setsockopt&quot;&gt;setsockopt&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/shmctl&quot;&gt;shmctl&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/shmget&quot;&gt;shmget&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/shmread&quot;&gt;shmread&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/shmwrite&quot;&gt;shmwrite&lt;/a&gt;&lt;/code&gt; ，shmwrite， &lt;code&gt;&lt;a href=&quot;functions/socket&quot;&gt;socket&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/socketpair&quot;&gt;socketpair&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/symlink&quot;&gt;symlink&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/syscall&quot;&gt;syscall&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/sysopen&quot;&gt;sysopen&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/times&quot;&gt;times&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/truncate&quot;&gt;truncate&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/umask&quot;&gt;umask&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/utime&quot;&gt;utime&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/wait&quot;&gt;wait&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/waitpid&quot;&gt;waitpid&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c20b988761a2edd02a7e93114a0c1a07205215f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/abs&quot;&gt;abs&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/atan2&quot;&gt;atan2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/cos&quot;&gt;cos&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/exp&quot;&gt;exp&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/hex&quot;&gt;hex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/int&quot;&gt;int&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/log&quot;&gt;log&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/oct&quot;&gt;oct&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/rand&quot;&gt;rand&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/sin&quot;&gt;sin&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/sqrt&quot;&gt;sqrt&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/srand&quot;&gt;srand&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/abs&quot;&gt;abs&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/atan2&quot;&gt;atan2&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/cos&quot;&gt;cos&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/exp&quot;&gt;exp&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/hex&quot;&gt;hex&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/int&quot;&gt;int&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/log&quot;&gt;log&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/oct&quot;&gt;oct&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/rand&quot;&gt;rand&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/sin&quot;&gt;sin&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/sqrt&quot;&gt;sqrt&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/srand&quot;&gt;srand&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d70096a2fa7e934b6d2fbdd9d57c878aed759204" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/accept&quot;&gt;accept&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/bind&quot;&gt;bind&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/connect&quot;&gt;connect&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getpeername&quot;&gt;getpeername&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getsockname&quot;&gt;getsockname&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getsockopt&quot;&gt;getsockopt&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/listen&quot;&gt;listen&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/recv&quot;&gt;recv&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/send&quot;&gt;send&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/setsockopt&quot;&gt;setsockopt&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/shutdown&quot;&gt;shutdown&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/socket&quot;&gt;socket&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/socketpair&quot;&gt;socketpair&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/accept&quot;&gt;accept&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/bind&quot;&gt;bind&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/connect&quot;&gt;connect&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/getpeername&quot;&gt;getpeername&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/getsockname&quot;&gt;getsockname&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/getsockopt&quot;&gt;getsockopt&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/listen&quot;&gt;listen&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/recv&quot;&gt;recv&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/send&quot;&gt;send&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/setsockopt&quot;&gt;setsockopt&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/shutdown&quot;&gt;shutdown&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/socket&quot;&gt;socket&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/socketpair&quot;&gt;socketpair&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b3307f74b5353d3d330388694e2e5a562ec4f6be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/alarm&quot;&gt;alarm&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getpgrp&quot;&gt;getpgrp&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getppid&quot;&gt;getppid&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getpriority&quot;&gt;getpriority&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/pipe&quot;&gt;pipe&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/qx&quot;&gt;qx//&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/readpipe&quot;&gt;readpipe&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/setpgrp&quot;&gt;setpgrp&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/setpriority&quot;&gt;setpriority&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/times&quot;&gt;times&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/wait&quot;&gt;wait&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/waitpid&quot;&gt;waitpid&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/alarm&quot;&gt;alarm&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/getpgrp&quot;&gt;getpgrp&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/getppid&quot;&gt;getppid&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/getpriority&quot;&gt;getpriority&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/pipe&quot;&gt;pipe&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/qx&quot;&gt;qx//&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/readpipe&quot;&gt;readpipe&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/setpgrp&quot;&gt;setpgrp&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/setpriority&quot;&gt;setpriority&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/times&quot;&gt;times&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/wait&quot;&gt;wait&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/waitpid&quot;&gt;waitpid&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="49adcd66c77b529c763f36ddd062aa4f6688b826" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/closedir&quot;&gt;closedir&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/dbmclose&quot;&gt;dbmclose&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/dbmopen&quot;&gt;dbmopen&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/fileno&quot;&gt;fileno&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/flock&quot;&gt;flock&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/format&quot;&gt;format&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getc&quot;&gt;getc&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/readline&quot;&gt;readline&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;functions/rewinddir&quot;&gt;rewinddir&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/say&quot;&gt;say&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/seek&quot;&gt;seek&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/seekdir&quot;&gt;seekdir&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/select&quot;&gt;select&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/syscall&quot;&gt;syscall&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/sysread&quot;&gt;sysread&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/sysseek&quot;&gt;sysseek&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/syswrite&quot;&gt;syswrite&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/tell&quot;&gt;tell&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/telldir&quot;&gt;telldir&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/truncate&quot;&gt;truncate&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/warn&quot;&gt;warn&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/closedir&quot;&gt;closedir&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/dbmclose&quot;&gt;dbmclose&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/dbmopen&quot;&gt;dbmopen&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/fileno&quot;&gt;fileno&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/flock&quot;&gt;flock&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/format&quot;&gt;format&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/getc&quot;&gt;getc&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/readline&quot;&gt;readline&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;functions/rewinddir&quot;&gt;rewinddir&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/say&quot;&gt;say&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/seek&quot;&gt;seek&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/seekdir&quot;&gt;seekdir&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/select&quot;&gt;select&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/syscall&quot;&gt;syscall&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/sysread&quot;&gt;sysread&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/sysseek&quot;&gt;sysseek&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/syswrite&quot;&gt;syswrite&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/tell&quot;&gt;tell&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/telldir&quot;&gt;telldir&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/truncate&quot;&gt;truncate&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/warn&quot;&gt;warn&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="87eeeb61a45746c1e4aa6912afa3ede8279ba591" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/bless&quot;&gt;bless&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/dbmclose&quot;&gt;dbmclose&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/dbmopen&quot;&gt;dbmopen&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/package&quot;&gt;package&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/ref&quot;&gt;ref&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/tied&quot;&gt;tied&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/untie&quot;&gt;untie&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/bless&quot;&gt;bless&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/dbmclose&quot;&gt;dbmclose&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/dbmopen&quot;&gt;dbmopen&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/package&quot;&gt;package&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/ref&quot;&gt;ref&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/tied&quot;&gt;tied&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/untie&quot;&gt;untie&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="186c8b49686cf00b57846ac6e0a6189c67859e46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/bless&quot;&gt;bless&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;blessed&lt;/code&gt; , and &lt;code&gt;&lt;a href=&quot;functions/ref&quot;&gt;ref&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/bless&quot;&gt;bless&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;blessed&lt;/code&gt; ，和 &lt;code&gt;&lt;a href=&quot;functions/ref&quot;&gt;ref&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e42ab85ddf7e214b95aa21f7531a192c1d57730b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/caller&quot;&gt;caller&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/package&quot;&gt;package&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/caller&quot;&gt;caller&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/package&quot;&gt;package&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cf8f43e0b8956b059b663b7f40fee566ba68ac70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/chdir&quot;&gt;chdir&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/chmod&quot;&gt;chmod&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/chown&quot;&gt;chown&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/chroot&quot;&gt;chroot&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/link&quot;&gt;link&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/lstat&quot;&gt;lstat&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/mkdir&quot;&gt;mkdir&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/rename&quot;&gt;rename&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/rmdir&quot;&gt;rmdir&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/symlink&quot;&gt;symlink&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/truncate&quot;&gt;truncate&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/utime&quot;&gt;utime&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/-x&quot;&gt;-X&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/chdir&quot;&gt;chdir&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/chmod&quot;&gt;chmod&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/chown&quot;&gt;chown&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/chroot&quot;&gt;chroot&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/link&quot;&gt;link&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/lstat&quot;&gt;lstat&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/mkdir&quot;&gt;mkdir&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/rename&quot;&gt;rename&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/rmdir&quot;&gt;rmdir&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/symlink&quot;&gt;symlink&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/truncate&quot;&gt;truncate&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/utime&quot;&gt;utime&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/-x&quot;&gt;-X&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6373bbda016aaa1ddc91fd37de2c7931943ff130" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/chdir&quot;&gt;chdir&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/chomp&quot;&gt;chomp&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/chop&quot;&gt;chop&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/defined&quot;&gt;defined&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/delete&quot;&gt;delete&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/exists&quot;&gt;exists&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/lstat&quot;&gt;lstat&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/push&quot;&gt;push&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/splice&quot;&gt;splice&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/truncate&quot;&gt;truncate&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/unshift&quot;&gt;unshift&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/chdir&quot;&gt;chdir&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/chomp&quot;&gt;chomp&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/chop&quot;&gt;chop&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/defined&quot;&gt;defined&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/delete&quot;&gt;delete&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/exists&quot;&gt;exists&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/lstat&quot;&gt;lstat&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/push&quot;&gt;push&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/splice&quot;&gt;splice&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/truncate&quot;&gt;truncate&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/unshift&quot;&gt;unshift&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d63027fffa2a332cfddfd08f9068272d0ce52382" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/chomp&quot;&gt;chomp&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/chop&quot;&gt;chop&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/crypt&quot;&gt;crypt&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/fc&quot;&gt;fc&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/hex&quot;&gt;hex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/index&quot;&gt;index&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/lc&quot;&gt;lc&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/lcfirst&quot;&gt;lcfirst&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/length&quot;&gt;length&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/oct&quot;&gt;oct&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/ord&quot;&gt;ord&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/q&quot;&gt;q//&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/qq&quot;&gt;qq//&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/reverse&quot;&gt;reverse&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/rindex&quot;&gt;rindex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/substr&quot;&gt;substr&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr///&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/uc&quot;&gt;uc&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/ucfirst&quot;&gt;ucfirst&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/y&quot;&gt;y///&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/chomp&quot;&gt;chomp&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/chop&quot;&gt;chop&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/crypt&quot;&gt;crypt&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/fc&quot;&gt;fc&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/hex&quot;&gt;hex&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/index&quot;&gt;index&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/lc&quot;&gt;lc&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/lcfirst&quot;&gt;lcfirst&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/oct&quot;&gt;oct&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/ord&quot;&gt;ord&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/q&quot;&gt;q//&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/qq&quot;&gt;qq//&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/reverse&quot;&gt;reverse&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/rindex&quot;&gt;rindex&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/substr&quot;&gt;substr&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr///&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/uc&quot;&gt;uc&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/ucfirst&quot;&gt;ucfirst&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/y&quot;&gt;y///&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2034a8bc4d2ddd556732a850eb5d8558c3aad776" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr()&lt;/a&gt;&lt;/code&gt; must be given an EBCDIC code number argument to yield a desired character return value on an EBCDIC platform. For example:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr()&lt;/a&gt;&lt;/code&gt; 必须为 chr（）提供EBCDIC代码编号参数，以在EBCDIC平台上产生所需的字符返回值。例如：</target>
        </trans-unit>
        <trans-unit id="f9c20fb8e247561b866ffc6fcee4160c028a6d32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/defined&quot;&gt;defined&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/formline&quot;&gt;formline&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/lock&quot;&gt;lock&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/prototype&quot;&gt;prototype&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/reset&quot;&gt;reset&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/scalar&quot;&gt;scalar&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/defined&quot;&gt;defined&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/formline&quot;&gt;formline&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/lock&quot;&gt;lock&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/prototype&quot;&gt;prototype&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/reset&quot;&gt;reset&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/scalar&quot;&gt;scalar&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9f8069965d653903f6587480e5a0a31354565107" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/delete&quot;&gt;delete&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/exists&quot;&gt;exists&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/delete&quot;&gt;delete&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/exists&quot;&gt;exists&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="971c23718c054d86a80726532c2350b4d61c91a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; raises an exception. Inside an &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; the error message is stuffed into &lt;code&gt;$@&lt;/code&gt; and the &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; is terminated with the undefined value. If the exception is outside of all enclosing &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;s, then the uncaught exception prints LIST to &lt;code&gt;STDERR&lt;/code&gt; and exits with a non-zero value. If you need to exit the process with a specific exit code, see &lt;a href=&quot;#exit&quot;&gt;exit&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; 引发异常。在 &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; 内部，错误消息填充到 &lt;code&gt;$@&lt;/code&gt; ，并且 &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; 以未定义的值终止。如果该异常在所有封闭的 &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; 之外，则未捕获的异常将LIST打印到 &lt;code&gt;STDERR&lt;/code&gt; 并以非零值退出。如果您需要使用特定的退出代码退出流程，请参见&lt;a href=&quot;#exit&quot;&gt; exit&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cdfcd08c97279f178046afe1b06078d3bfda0672" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; will force the native VMS exit status to be an SS$_ABORT code if neither of the $! or $? status values are ones that would cause the native status to be interpreted as being what VMS classifies as SEVERE_ERROR severity for DCL error handling.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; 如果两个都没有$， die将强制本机VMS退出状态为SS $ _ABORT代码。或$？状态值是那些会导致将本机状态解释为VMS分类为SEVERE_ERROR严重性以进行DCL错误处理的值。</target>
        </trans-unit>
        <trans-unit id="c2e997695a43950b1946c87d7c74c4aff97e924f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt; BLOCK&lt;/code&gt; does</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt; BLOCK&lt;/code&gt; 做</target>
        </trans-unit>
        <trans-unit id="a1fa01aff43e15c0a20de4c6319df39310438748" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/package&quot;&gt;package&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/package&quot;&gt;package&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cf602825444127f538f868168b880e7c17e4f910" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/push&quot;&gt;push&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/splice&quot;&gt;splice&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/unshift&quot;&gt;unshift&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/push&quot;&gt;push&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/splice&quot;&gt;splice&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/unshift&quot;&gt;unshift&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0dde3e0b8af5305503cc41b40f558203bf6499aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/endgrent&quot;&gt;endgrent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/endhostent&quot;&gt;endhostent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/endnetent&quot;&gt;endnetent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/endpwent&quot;&gt;endpwent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getgrent&quot;&gt;getgrent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getgrgid&quot;&gt;getgrgid&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getgrnam&quot;&gt;getgrnam&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getlogin&quot;&gt;getlogin&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getpwent&quot;&gt;getpwent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getpwnam&quot;&gt;getpwnam&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getpwuid&quot;&gt;getpwuid&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/setgrent&quot;&gt;setgrent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/setpwent&quot;&gt;setpwent&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/endgrent&quot;&gt;endgrent&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/endhostent&quot;&gt;endhostent&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/endnetent&quot;&gt;endnetent&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/endpwent&quot;&gt;endpwent&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/getgrent&quot;&gt;getgrent&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/getgrgid&quot;&gt;getgrgid&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/getgrnam&quot;&gt;getgrnam&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/getlogin&quot;&gt;getlogin&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/getpwent&quot;&gt;getpwent&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/getpwnam&quot;&gt;getpwnam&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/getpwuid&quot;&gt;getpwuid&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/setgrent&quot;&gt;setgrent&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/setpwent&quot;&gt;setpwent&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c701cf0d605693b06a942d567adc64697f8eadbb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/endprotoent&quot;&gt;endprotoent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/endservent&quot;&gt;endservent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/gethostbyaddr&quot;&gt;gethostbyaddr&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/gethostbyname&quot;&gt;gethostbyname&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/gethostent&quot;&gt;gethostent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getnetbyaddr&quot;&gt;getnetbyaddr&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getnetbyname&quot;&gt;getnetbyname&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getnetent&quot;&gt;getnetent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getprotobyname&quot;&gt;getprotobyname&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getprotobynumber&quot;&gt;getprotobynumber&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getprotoent&quot;&gt;getprotoent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getservbyname&quot;&gt;getservbyname&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getservbyport&quot;&gt;getservbyport&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getservent&quot;&gt;getservent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/sethostent&quot;&gt;sethostent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/setnetent&quot;&gt;setnetent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/setprotoent&quot;&gt;setprotoent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/setservent&quot;&gt;setservent&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/endprotoent&quot;&gt;endprotoent&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/endservent&quot;&gt;endservent&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/gethostbyaddr&quot;&gt;gethostbyaddr&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/gethostbyname&quot;&gt;gethostbyname&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/gethostent&quot;&gt;gethostent&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/getnetbyaddr&quot;&gt;getnetbyaddr&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/getnetbyname&quot;&gt;getnetbyname&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/getnetent&quot;&gt;getnetent&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/getprotobyname&quot;&gt;getprotobyname&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/getprotobynumber&quot;&gt;getprotobynumber&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/getprotoent&quot;&gt;getprotoent&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/getservbyname&quot;&gt;getservbyname&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/getservbyport&quot;&gt;getservbyport&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/getservent&quot;&gt;getservent&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/sethostent&quot;&gt;sethostent&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/setnetent&quot;&gt;setnetent&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/setprotoent&quot;&gt;setprotoent&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/setservent&quot;&gt;setservent&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="444bad2147131524490c06fd7ed189d21e9cf1be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; BLOCK&lt;/code&gt; does</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; BLOCK&lt;/code&gt; 做</target>
        </trans-unit>
        <trans-unit id="9ec05314a43a26efee7891cae4ea24501c56383e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; behaves differently depending on the internal encoding of the string, sometimes treating its argument as a string of bytes, and sometimes as a string of characters.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; 的行为取决于字符串的内部编码，有时将其自变量视为字节字符串，有时视为字符串。</target>
        </trans-unit>
        <trans-unit id="cab5c8442d933f2e75cd6762dd7bfcc3ab2593ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;ed strings (when accessible) are considered to be filenames: &lt;code&gt;f (&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; 7)&lt;/code&gt; and &lt;code&gt;f &lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; 7\b&lt;/code&gt; access the body of the 7th &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;ed string (in the order of execution). The bodies of the currently executed &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; and of &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;ed strings that define subroutines are saved and thus accessible.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; 字符串（可访问时）被视为文件名： &lt;code&gt;f (&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; 7)&lt;/code&gt; 和 &lt;code&gt;f &lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; 7\b&lt;/code&gt; 访问第7个 &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; 字符串的主体（按执行顺序）。当前执行的 &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; 和定义子例程的 &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; ed字符串的主体被保存，因此可以访问。</target>
        </trans-unit>
        <trans-unit id="4938bb543bbc2773e23fdb85fc0bad70327b6cc9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;ed strings are compiled in the package in which the eval() was compiled. (Assignments to &lt;code&gt;$SIG{}&lt;/code&gt; , however, assume the signal handler specified is in the &lt;code&gt;main&lt;/code&gt; package. Qualify the signal handler name if you wish to have a signal handler in a package.) For an example, examine</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; 字符串在编译eval（）的程序包中进行编译。（但是，分配给 &lt;code&gt;$SIG{}&lt;/code&gt; 是假定指定的信号处理程序在 &lt;code&gt;main&lt;/code&gt; 包中。如果希望在程序包中包含信号处理程序，请限定信号处理程序的名称。）例如，请查看</target>
        </trans-unit>
        <trans-unit id="bed6a22bb9761da407775198d594671570c1eb06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/evalbytes&quot;&gt;evalbytes&lt;/a&gt;&lt;/code&gt; fixes that to work the way one would expect:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/evalbytes&quot;&gt;evalbytes&lt;/a&gt;&lt;/code&gt; 修复了该问题，使其可以像人们期望的那样工作：</target>
        </trans-unit>
        <trans-unit id="689ed7a5f25b13235d58a1bf5add86b3304f247a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/evalbytes&quot;&gt;evalbytes&lt;/a&gt;&lt;/code&gt; is only available with the &lt;code&gt;&quot;evalbytes&quot;&lt;/code&gt; feature (see &lt;a href=&quot;feature&quot;&gt;feature&lt;/a&gt;) or if prefixed with &lt;code&gt;CORE::&lt;/code&gt; . &lt;code&gt;&lt;a href=&quot;functions/__sub__&quot;&gt;__SUB__&lt;/a&gt;&lt;/code&gt; is only available with the &lt;code&gt;&quot;current_sub&quot;&lt;/code&gt; feature or if prefixed with &lt;code&gt;CORE::&lt;/code&gt; . Both the &lt;code&gt;&quot;evalbytes&quot;&lt;/code&gt; and &lt;code&gt;&quot;current_sub&quot;&lt;/code&gt; features are enabled automatically with a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.16&lt;/code&gt; (or higher) declaration in the current scope.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/evalbytes&quot;&gt;evalbytes&lt;/a&gt;&lt;/code&gt; 仅可用于 &lt;code&gt;&quot;evalbytes&quot;&lt;/code&gt; 功能（请参阅&lt;a href=&quot;feature&quot;&gt; feature&lt;/a&gt;），或者以 &lt;code&gt;CORE::&lt;/code&gt; 为前缀。 &lt;code&gt;&lt;a href=&quot;functions/__sub__&quot;&gt;__SUB__&lt;/a&gt;&lt;/code&gt; 仅可用于 &lt;code&gt;&quot;current_sub&quot;&lt;/code&gt; 功能，或者以 &lt;code&gt;CORE::&lt;/code&gt; 为前缀。两个 &lt;code&gt;&quot;evalbytes&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;current_sub&quot;&lt;/code&gt; 特征与一个自动启用 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.16&lt;/code&gt; （或更高）的声明在当前范围内。</target>
        </trans-unit>
        <trans-unit id="6761c9a39c23e52f7069fc11948131c9ace80ad7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt; LIST&lt;/code&gt; without the use of indirect object syntax (&lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt; PROGRAM LIST&lt;/code&gt; ) may fall back to trying the shell if the first &lt;code&gt;spawn()&lt;/code&gt; fails. (Win32)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt; LIST&lt;/code&gt; ，而无需使用间接对象语法（的 &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt; PROGRAM LIST&lt;/code&gt; ）可回退到试图壳，如果第一 &lt;code&gt;spawn()&lt;/code&gt; 失败。（Win32的）</target>
        </trans-unit>
        <trans-unit id="284665f5fe88016ead454e392440b324b913043c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; resets file pointers, which is a problem when called from a child process (created by &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork()&lt;/a&gt;&lt;/code&gt;) in &lt;code&gt;BEGIN&lt;/code&gt; . A workaround is to use &lt;code&gt;POSIX::_exit&lt;/code&gt; . (Solaris)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; 复位文件指针，其（通过创建是从一个子进程调用时的问题 &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork()&lt;/a&gt;&lt;/code&gt; ）在 &lt;code&gt;BEGIN&lt;/code&gt; 。一种解决方法是使用 &lt;code&gt;POSIX::_exit&lt;/code&gt; 。（Solaris）</target>
        </trans-unit>
        <trans-unit id="76b61913c43c1185bbdb2e0e0dd8b3af5f081161" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/fc&quot;&gt;fc&lt;/a&gt;&lt;/code&gt; is available only if the &lt;code&gt;&quot;fc&quot;&lt;/code&gt; feature is enabled or if it is prefixed with &lt;code&gt;CORE::&lt;/code&gt; . The &lt;code&gt;&quot;fc&quot;&lt;/code&gt; feature is enabled automatically with a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.16&lt;/code&gt; (or higher) declaration in the current scope.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/fc&quot;&gt;fc&lt;/a&gt;&lt;/code&gt; 仅当启用 &lt;code&gt;&quot;fc&quot;&lt;/code&gt; 功能或其前缀为 &lt;code&gt;CORE::&lt;/code&gt; fc才可用。的 &lt;code&gt;&quot;fc&quot;&lt;/code&gt; 特征与自动启用 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.16&lt;/code&gt; （或更高）的声明在当前范围内。</target>
        </trans-unit>
        <trans-unit id="9f8bfcf789b65edee6c0ea5d97ffb5d56eb94268" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork()&lt;/a&gt;&lt;/code&gt; failures in io_* tests</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork()&lt;/a&gt;&lt;/code&gt; io_ *测试中的 fork（）故障</target>
        </trans-unit>
        <trans-unit id="9d01f3a00631549ba30fc14956cad336db066915" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/gethostbyname&quot;&gt;gethostbyname('localhost')&lt;/a&gt;&lt;/code&gt; does not work everywhere: you may have to use &lt;code&gt;&lt;a href=&quot;functions/gethostbyname&quot;&gt;gethostbyname('127.0.0.1')&lt;/a&gt;&lt;/code&gt;. (Irix 5)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/gethostbyname&quot;&gt;gethostbyname('localhost')&lt;/a&gt;&lt;/code&gt; 不适用于任何地方：您可能必须使用 &lt;code&gt;&lt;a href=&quot;functions/gethostbyname&quot;&gt;gethostbyname('127.0.0.1')&lt;/a&gt;&lt;/code&gt; 。（虹彩5）</target>
        </trans-unit>
        <trans-unit id="e2ef5e14433d72564433190724fdd966ef50b051" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/glob&quot;&gt;glob&lt;/a&gt;&lt;/code&gt; (aka the &lt;code&gt;&amp;lt;*&amp;gt;&lt;/code&gt; )</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/glob&quot;&gt;glob&lt;/a&gt;&lt;/code&gt; （又名 &lt;code&gt;&amp;lt;*&amp;gt;&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="564d9f4c1be0a741d6c529a881ccab285f1e964e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/gmtime&quot;&gt;gmtime&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/time&quot;&gt;time&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/times&quot;&gt;times&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/gmtime&quot;&gt;gmtime&lt;/a&gt;&lt;/code&gt; 的， &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/time&quot;&gt;time&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/times&quot;&gt;times&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f03b71bee32ce86bd94c982679218f4e1f02d81a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/map&quot;&gt;map&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/qw&quot;&gt;qw//&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/reverse&quot;&gt;reverse&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/sort&quot;&gt;sort&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/map&quot;&gt;map&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/qw&quot;&gt;qw//&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/reverse&quot;&gt;reverse&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/sort&quot;&gt;sort&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9b3086a8c4fc89913fc262d257bf79bcbe20f793" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join()&lt;/a&gt;&lt;/code&gt; does three things: it waits for a thread to exit, cleans up after it, and returns any data the thread may have produced. But what if you're not interested in the thread's return values, and you don't really care when the thread finishes? All you want is for the thread to get cleaned up after when it's done.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join()&lt;/a&gt;&lt;/code&gt; 做三件事：等待线程退出，在线程清除后清理，并返回该线程可能产生的任何数据。但是，如果您对线程的返回值不感兴趣，又不在乎线程何时完成，该怎么办？您想要的只是在完成后清理线程。</target>
        </trans-unit>
        <trans-unit id="2a03f921016bbb0b86e43c0578f72502ceddcfba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join&lt;/a&gt;&lt;/code&gt; waits for a thread to end and returns any values the thread exited with. &lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join&lt;/a&gt;&lt;/code&gt; will block until the thread has ended, though it won't block if the thread has already terminated.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join&lt;/a&gt;&lt;/code&gt; 等待线程结束，并返回退出线程的所有值。 &lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join&lt;/a&gt;&lt;/code&gt; 将在线程结束之前一直阻塞，但是如果线程已经终止则不会阻塞。</target>
        </trans-unit>
        <trans-unit id="9e758149070ab91db0253a2bd5469b500fbd3e2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill()&lt;/a&gt;&lt;/code&gt; doesn't have the semantics of &lt;code&gt;raise()&lt;/code&gt; , i.e. it doesn't send a signal to the identified process like it does on Unix platforms. Instead &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt;($sig, $pid)&lt;/code&gt; terminates the process identified by &lt;code&gt;$pid&lt;/code&gt; , and makes it exit immediately with exit status $sig. As in Unix, if $sig is 0 and the specified process exists, it returns true without actually terminating it. (Win32)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill()&lt;/a&gt;&lt;/code&gt; 不具有 &lt;code&gt;raise()&lt;/code&gt; 的语义，即它不会像在Unix平台上那样向已标识的进程发送信号。相反， &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt;($sig, $pid)&lt;/code&gt; 终止由 &lt;code&gt;$pid&lt;/code&gt; 标识的进程，并使其以退出状态$ sig立即退出。与Unix中一样，如果$ sig为0并且指定的进程存在，则它返回true而不实际终止它。（Win32的）</target>
        </trans-unit>
        <trans-unit id="e88c251677de5696731dc7c1c2ad099fd58e07b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt;('KILL', ...)&lt;/code&gt; can be used to terminate a pseudo-process by passing it the ID returned by fork(). The outcome of kill on a pseudo-process is unpredictable and it should not be used except under dire circumstances, because the operating system may not guarantee integrity of the process resources when a running thread is terminated. The process which implements the pseudo-processes can be blocked and the Perl interpreter hangs. Note that using &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt;('KILL', ...)&lt;/code&gt; on a pseudo-process() may typically cause memory leaks, because the thread that implements the pseudo-process does not get a chance to clean up its resources.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt;('KILL', ...)&lt;/code&gt; 通过将fork（）返回的ID传递给 kill，可以使用 kill（'KILL'，...）终止伪进程。伪进程被杀死的结果是不可预测的，除非在严峻的情况下，否则不应使用它，因为终止正在运行的线程时，操作系统可能无法保证进程资源的完整性。可以阻止实现伪进程的进程，并且Perl解释器将挂起。请注意，在伪process（ &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt;('KILL', ...)&lt;/code&gt; 上使用&lt;a href=&quot;functions/kill&quot;&gt; kill&lt;/a&gt;（'KILL'，...）通常会导致内存泄漏，因为实现伪进程的线程没有机会清理其资源。</target>
        </trans-unit>
        <trans-unit id="75df60b5e7c4116a6ef3b294e7033ff0dcfbf3d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt;('TERM', ...)&lt;/code&gt; can also be used on pseudo-processes, but the signal will not be delivered while the pseudo-process is blocked by a system call, e.g. waiting for a socket to connect, or trying to read from a socket with no data available. Starting in Perl 5.14 the parent process will not wait for children to exit once they have been signalled with &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt;('TERM', ...)&lt;/code&gt; to avoid deadlock during process exit. You will have to explicitly call waitpid() to make sure the child has time to clean-up itself, but you are then also responsible that the child is not blocking on I/O either.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt;('TERM', ...)&lt;/code&gt; 也可以在伪进程上使用，但是当伪进程被系统调用阻塞（例如，等待套接字连接或尝试读取）时，将不会传递信号从没有可用数据的套接字中获取。从Perl 5.14开始，父进程将不再等待子进程退出，一旦它们发出了 &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt;('TERM', ...)&lt;/code&gt; 信号，以避免进程退出时出现死锁。您将必须显式调用waitpid（）来确保子进程有时间自行清理，但是您还要负责该子进程也不会阻塞I / O。</target>
        </trans-unit>
        <trans-unit id="1b5183176d6cbdda12e7a690d422cfcbde120be5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt;(-9, $pid)&lt;/code&gt; will terminate the process specified by &lt;code&gt;$pid&lt;/code&gt; and recursively all child processes owned by it. This is different from the Unix semantics, where the signal will be delivered to all processes in the same process group as the process specified by $pid. (Win32)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt;(-9, $pid)&lt;/code&gt; 将终止 &lt;code&gt;$pid&lt;/code&gt; 指定的进程，并递归终止其拥有的所有子进程。这与Unix语义不同，在Unix语义中，信号将传递到与$ pid指定的进程相同的进程组中的所有进程。（Win32的）</target>
        </trans-unit>
        <trans-unit id="87d6ace4d35779bb92de39a74ae12ac82c622c36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; cannot be used to exit a block that returns a value such as &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; {}&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt; {}&lt;/code&gt; , or &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt; {}&lt;/code&gt; , and should not be used to exit a grep() or map() operation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; 不能用于退出返回诸如 &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; {}&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt; {}&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt; {}&lt;/code&gt; 之类的值的块，并且不应用于退出grep（）或map（）操作。</target>
        </trans-unit>
        <trans-unit id="070d6d718d052c422333dfc4a73c9ff557369c01" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/next&quot;&gt;next&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;functions/redo&quot;&gt;redo&lt;/a&gt;&lt;/code&gt; may appear within a &lt;code&gt;&lt;a href=&quot;functions/continue&quot;&gt;continue&lt;/a&gt;&lt;/code&gt; block; &lt;code&gt;&lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/redo&quot;&gt;redo&lt;/a&gt;&lt;/code&gt; behave as if they had been executed within the main block. So will &lt;code&gt;&lt;a href=&quot;functions/next&quot;&gt;next&lt;/a&gt;&lt;/code&gt;, but since it will execute a &lt;code&gt;&lt;a href=&quot;functions/continue&quot;&gt;continue&lt;/a&gt;&lt;/code&gt; block, it may be more entertaining.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/next&quot;&gt;next&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;functions/redo&quot;&gt;redo&lt;/a&gt;&lt;/code&gt; 可能出现在 &lt;code&gt;&lt;a href=&quot;functions/continue&quot;&gt;continue&lt;/a&gt;&lt;/code&gt; 块中； &lt;code&gt;&lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;functions/redo&quot;&gt;redo&lt;/a&gt;&lt;/code&gt; 的行为就像在主块中执行一样。 &lt;code&gt;&lt;a href=&quot;functions/next&quot;&gt;next&lt;/a&gt;&lt;/code&gt; 也会如此，但是由于它将执行一个 &lt;code&gt;&lt;a href=&quot;functions/continue&quot;&gt;continue&lt;/a&gt;&lt;/code&gt; 块，因此可能会更有趣。</target>
        </trans-unit>
        <trans-unit id="f7dc8f5385a1d957a4ec078883a408036e64e47d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local($x)&lt;/a&gt;&lt;/code&gt; saves away the old value of the global variable &lt;code&gt;$x&lt;/code&gt; and assigns a new value for the duration of the subroutine</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local($x)&lt;/a&gt;&lt;/code&gt; 节省了全局变量 &lt;code&gt;$x&lt;/code&gt; 的旧值，并为子例程的持续时间分配了一个新值</target>
        </trans-unit>
        <trans-unit id="ae121069d9f20b53a610cdeaf9dee9016adf3eb8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/lock&quot;&gt;lock()&lt;/a&gt;&lt;/code&gt; blocks the thread until the variable being locked is available. When &lt;code&gt;&lt;a href=&quot;functions/lock&quot;&gt;lock()&lt;/a&gt;&lt;/code&gt; returns, your thread can be sure that no other thread can lock that variable until the block containing the lock exits.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/lock&quot;&gt;lock()&lt;/a&gt;&lt;/code&gt; 阻塞线程，直到被锁定的变量可用为止。当 &lt;code&gt;&lt;a href=&quot;functions/lock&quot;&gt;lock()&lt;/a&gt;&lt;/code&gt; 返回时，您的线程可以确保在包含该锁的块退出之前，没有其他线程可以锁定该变量。</target>
        </trans-unit>
        <trans-unit id="170941b48e14e3f5099948bab33b3c9d8dbcb576" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/lock&quot;&gt;lock&lt;/a&gt;&lt;/code&gt; places a lock on a variable until the lock goes out of scope.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/lock&quot;&gt;lock&lt;/a&gt;&lt;/code&gt; 在变量上放置锁，直到锁超出范围。</target>
        </trans-unit>
        <trans-unit id="3509688406236324d230070a551af253bd14269a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m//&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr//&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/quotemeta&quot;&gt;quotemeta&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/study&quot;&gt;study&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m//&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr//&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/quotemeta&quot;&gt;quotemeta&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/study&quot;&gt;study&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a3e6cff15cdccdd24c02ad5ce98693ac4145238a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/pattern/msixpogcdualn&lt;/a&gt;&lt;/code&gt; searches a string for a pattern match, applying the given options.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/pattern/msixpogcdualn&lt;/a&gt;&lt;/code&gt; 应用给定的选项在字符串中搜索模式匹配。</target>
        </trans-unit>
        <trans-unit id="1944b24caa2d31a689377ec13306300ad9daf001" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/msgctl&quot;&gt;msgctl&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/msgget&quot;&gt;msgget&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/msgrcv&quot;&gt;msgrcv&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/msgsnd&quot;&gt;msgsnd&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/semctl&quot;&gt;semctl&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/semget&quot;&gt;semget&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/semop&quot;&gt;semop&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/shmctl&quot;&gt;shmctl&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/shmget&quot;&gt;shmget&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/shmread&quot;&gt;shmread&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/shmwrite&quot;&gt;shmwrite&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/msgctl&quot;&gt;msgctl&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/msgget&quot;&gt;msgget&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/msgrcv&quot;&gt;msgrcv&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/msgsnd&quot;&gt;msgsnd&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/semctl&quot;&gt;semctl&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/semget&quot;&gt;semget&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/semop&quot;&gt;semop&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/shmctl&quot;&gt;shmctl&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/shmget&quot;&gt;shmget&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/shmread&quot;&gt;shmread&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/shmwrite&quot;&gt;shmwrite&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a23ddf8844c8d314770e265090c4032565505efe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my($x)&lt;/a&gt;&lt;/code&gt; creates a new variable that is only visible in the current subroutine. This is done at compile-time, so it is called lexical or static scoping. my() always affects private variables, also called lexical variables or (improperly) static(ly scoped) variables.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my($x)&lt;/a&gt;&lt;/code&gt; 创建一个仅在当前子例程中可见的新变量。这是在编译时完成的，因此称为词汇或静态作用域。 my（）始终会影响私有变量，也称为词法变量或（不适当地）静态（作用域）变量。</target>
        </trans-unit>
        <trans-unit id="07257377a06fc9758ae4feb8af6d3a0dabc51822" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local()&lt;/a&gt;&lt;/code&gt; give list context to the right hand side of &lt;code&gt;=&lt;/code&gt; . The &amp;lt;$fh&amp;gt; read operation, like so many of Perl's functions and operators, can tell which context it was called in and behaves appropriately. In general, the scalar() function can help. This function does nothing to the data itself (contrary to popular myth) but rather tells its argument to behave in whatever its scalar fashion is. If that function doesn't have a defined scalar behavior, this of course doesn't help you (such as with sort()).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my()&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local()&lt;/a&gt;&lt;/code&gt; 在 &lt;code&gt;=&lt;/code&gt; 的右侧给出列表上下文。&amp;lt;$ fh&amp;gt;读取操作与Perl的许多函数和运算符一样，可以告诉它在哪个上下文中被调用并表现出正确的行为。通常，scalar（）函数可以提供帮助。此函数对数据本身不执行任何操作（与流行的说法相反），而是告诉其参数以标量方式进行操作。如果该函数没有定义的标量行为，那么这当然对您没有帮助（例如sort（））。</target>
        </trans-unit>
        <trans-unit id="13eda9e72a33666b731b864d91f6ba22b818ca17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; variables are scoped to the current block, not to the current function. If you write &lt;code&gt;{&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt; $x;} $x;&lt;/code&gt; , the second &lt;code&gt;$x&lt;/code&gt; does not refer to the one declared inside the block.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; 变量的作用域是当前块，而不是当前函数。如果您写 &lt;code&gt;{&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt; $x;} $x;&lt;/code&gt; ，第二个 &lt;code&gt;$x&lt;/code&gt; 不引用在块内声明的那个。</target>
        </trans-unit>
        <trans-unit id="a1b3aead5cdbc6341c36d8eaad29039df26dd3a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/next&quot;&gt;next&lt;/a&gt;&lt;/code&gt; cannot be used to exit a block which returns a value such as &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; {}&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt; {}&lt;/code&gt; , or &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt; {}&lt;/code&gt; , and should not be used to exit a grep() or map() operation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/next&quot;&gt;next&lt;/a&gt;&lt;/code&gt; 不能用于退出返回诸如 &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; {}&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt; {}&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt; {}&lt;/code&gt; 之类的值的块，并且不应用于退出grep（）或map（）操作。</target>
        </trans-unit>
        <trans-unit id="7816c0bc56e1301d1d13bec1cdf1c4a410856929" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; feature 'unicode_strings'&lt;/code&gt; tells the compiler to use the traditional Perl rules wherein the native character set rules is used unless it is clear to Perl that Unicode is desired. This can lead to some surprises when the behavior suddenly changes. (See &lt;a href=&quot;perlunicode#The-%22Unicode-Bug%22&quot;&gt;The Unicode Bug in perlunicode&lt;/a&gt; for details.) For this reason, if you are potentially using Unicode in your program, the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'unicode_strings'&lt;/code&gt; subpragma is &lt;b&gt;strongly&lt;/b&gt; recommended.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; feature 'unicode_strings'&lt;/code&gt; 告诉编译器使用传统的Perl规则，其中使用本机字符集规则，除非Perl清楚需要Unicode。当行为突然改变时，这可能会导致一些意外。（有关详细信息，请参见&lt;a href=&quot;perlunicode#The-%22Unicode-Bug%22&quot;&gt; perlunicode中的Unicode Bug&lt;/a&gt;。）因此，如果您可能在程序中使用Unicode，则&lt;b&gt;强烈&lt;/b&gt;建议 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'unicode_strings'&lt;/code&gt; 编译。&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="ac81d61c42a23c6729598734f402a23c1c56eea8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; feature&lt;/code&gt; with no features specified will reset to the default group. To disable</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; feature&lt;/code&gt; 指定功能的任何功能都将重置为默认组。禁用</target>
        </trans-unit>
        <trans-unit id="f43198e234dd55ddea949ef71cd04c5b9a67bbf2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; re '/flags'&lt;/code&gt; will turn off the effect of &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re '/flags'&lt;/code&gt; for the given flags.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; re '/flags'&lt;/code&gt; 将关闭给定标志 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re '/flags'&lt;/code&gt; 的效果。</target>
        </trans-unit>
        <trans-unit id="72bc29863e56cfa45bbea04dcee585c67952579a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt; FH, &quot;-|&quot;&lt;/code&gt; , in other words, opening pipes to itself.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt; FH, &quot;-|&quot;&lt;/code&gt; ，换句话说就是打开管道。</target>
        </trans-unit>
        <trans-unit id="15d8b4a76f4f6129fa4264c69c3f0d9f88979d3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/opendir&quot;&gt;opendir&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/sysopen&quot;&gt;sysopen&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/opendir&quot;&gt;opendir&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/sysopen&quot;&gt;sysopen&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9d47a7f890bd33e4ea969830dac3cb0ad060f6a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/ord&quot;&gt;ord()&lt;/a&gt;&lt;/code&gt; will return EBCDIC code number values on an EBCDIC platform. For example:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/ord&quot;&gt;ord()&lt;/a&gt;&lt;/code&gt; 将在EBCDIC平台上返回EBCDIC代码编号值。例如：</target>
        </trans-unit>
        <trans-unit id="7c53ed24bd7c69198eac1389d9414a4a91ac2d6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; differs from &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; vars&lt;/code&gt; , which allows use of an unqualified name</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; 与 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; vars&lt;/code&gt; 不同，后者允许使用非限定名称</target>
        </trans-unit>
        <trans-unit id="b02441caa31363d63a0257ab42958956b8ab58eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; has the same scoping rules as &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt;, meaning that it is only valid within a lexical scope. Unlike &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt;, which both declare new (lexical) variables, &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; only creates an alias to an existing variable: a package variable of the same name.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; 具有与 &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; 相同的作用域规则，这意味着它仅在词汇范围内有效。与 &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; 都声明新的（词法）变量不同， &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; 只为现有变量创建一个别名：同名的包变量。</target>
        </trans-unit>
        <trans-unit id="6774d0bb994ddfaf2ef8c1d60b6b78ab041154fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; makes a lexical alias to a package (i.e. global) variable of the same name in the current package for use within the current lexical scope.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; 为当前包中具有相同名称的包（即全局）变量创建词法别名，以在当前词法范围内使用。</target>
        </trans-unit>
        <trans-unit id="94b4e2f1cfd6c489237ee0bdbdd2d311d7ce5f54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; subroutines</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; 子程序</target>
        </trans-unit>
        <trans-unit id="de5857e8b84e30eef502f98ccf74513442f8930b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; are two functions for transforming data according to a user-defined template, between the guarded way Perl stores values and some well-defined representation as might be required in the environment of a Perl program. Unfortunately, they're also two of the most misunderstood and most often overlooked functions that Perl provides. This tutorial will demystify them for you.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; 是用于根据用户定义的模板转换数据的两个功能，这是在Perl的保护方式存储值和Perl程序环境中可能需要的一些定义明确的表示之间。不幸的是，它们也是Perl提供的最容易被误解且最常被忽视的功能中的两个。本教程将为您揭开它们的神秘面纱。</target>
        </trans-unit>
        <trans-unit id="94c05b5f8252da7d1c99d5e4040b8c3c6ee106ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/syscall&quot;&gt;syscall&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/sysread&quot;&gt;sysread&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/sysseek&quot;&gt;sysseek&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/syswrite&quot;&gt;syswrite&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/vec&quot;&gt;vec&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/syscall&quot;&gt;syscall&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/sysread&quot;&gt;sysread&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/sysseek&quot;&gt;sysseek&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/syswrite&quot;&gt;syswrite&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/vec&quot;&gt;vec&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b2252b2bedd63bcabdecf7bfe44b0f5112b8e9d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos&lt;/a&gt;&lt;/code&gt; directly accesses the location used by the regexp engine to store the offset, so assigning to &lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos&lt;/a&gt;&lt;/code&gt; will change that offset, and so will also influence the &lt;code&gt;\G&lt;/code&gt; zero-width assertion in regular expressions. Both of these effects take place for the next match, so you can't affect the position with &lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos&lt;/a&gt;&lt;/code&gt; during the current match, such as in &lt;code&gt;(?{pos() = 5})&lt;/code&gt; or &lt;code&gt;s//pos() = 5/e&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos&lt;/a&gt;&lt;/code&gt; 直接访问正则表达式引擎用于存储偏移量的位置，因此将 &lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos&lt;/a&gt;&lt;/code&gt; 赋值将更改该偏移量，因此也将影响正则表达式中 &lt;code&gt;\G&lt;/code&gt; 零宽度的断言。这两种效果都会在下一场比赛中发生，因此您无法在当前比赛中影响 &lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos&lt;/a&gt;&lt;/code&gt; 的位置，例如 &lt;code&gt;(?{pos() = 5})&lt;/code&gt; 或 &lt;code&gt;s//pos() = 5/e&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d1950ccdf48f077e739f5814af32f11a43773eb1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr/pattern/msixpodualn&lt;/a&gt;&lt;/code&gt; lets you store a regex in a variable, or pass one around. Modifiers as for &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m//&lt;/a&gt;&lt;/code&gt;, and are stored within the regex.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr/pattern/msixpodualn&lt;/a&gt;&lt;/code&gt; ，您可以将正则表达式存储在变量中，或在其中传递一个。 &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m//&lt;/a&gt;&lt;/code&gt; 修饰符，并存储在正则表达式中。</target>
        </trans-unit>
        <trans-unit id="2d062bdc19be018775cd04b7fe47df8c33090f46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr&lt;/a&gt;&lt;/code&gt; must return a compiled regexp, or a ref to a compiled regexp (such as &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr//&lt;/a&gt;&lt;/code&gt; returns), and any further overloading on the return value will be ignored.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr&lt;/a&gt;&lt;/code&gt; 必须返回已编译的正则表达式或对已编译的正则表达式的引用（例如 &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr//&lt;/a&gt;&lt;/code&gt; return），并且返回值上的任何进一步的重载都将被忽略。</target>
        </trans-unit>
        <trans-unit id="6bf9c5016beeb9680d1e1288d3394e4a396bd820" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/quotemeta&quot;&gt;quotemeta()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;\Q&lt;/code&gt; are fully described in &lt;a href=&quot;functions/quotemeta&quot;&gt;quotemeta&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/quotemeta&quot;&gt;quotemeta()&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;\Q&lt;/code&gt; 在&lt;a href=&quot;functions/quotemeta&quot;&gt; quotemeta中&lt;/a&gt;有完整描述。</target>
        </trans-unit>
        <trans-unit id="188d3fd2d5601f204ee3fcff4baf277b1b9145a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/qx&quot;&gt;qx&lt;/a&gt;&lt;/code&gt; (aka the backtick operator), &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/qx&quot;&gt;qx&lt;/a&gt;&lt;/code&gt; （又名反引号运算符）， &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9d74cdbd617ac6784cd0523ea76bbc823fe5c46d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/rand&quot;&gt;rand($x)&lt;/a&gt;&lt;/code&gt; returns a number such that &lt;code&gt;0 &amp;lt;= &lt;a href=&quot;functions/rand&quot;&gt;rand&lt;/a&gt;($x) &amp;lt; $x&lt;/code&gt; . Thus what you want to have perl figure out is a random number in the range from 0 to the difference between your</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/rand&quot;&gt;rand($x)&lt;/a&gt;&lt;/code&gt; 返回一个数字，使得 &lt;code&gt;0 &amp;lt;= &lt;a href=&quot;functions/rand&quot;&gt;rand&lt;/a&gt;($x) &amp;lt; $x&lt;/code&gt; 。因此，您想让perl知道的是一个随机数，范围是从0到您的</target>
        </trans-unit>
        <trans-unit id="8f4bf1581c291b9f8ecef59847322f94dde9b542" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/read&quot;&gt;read()&lt;/a&gt;&lt;/code&gt; reads characters and returns the number of characters. &lt;code&gt;&lt;a href=&quot;functions/seek&quot;&gt;seek()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/tell&quot;&gt;tell()&lt;/a&gt;&lt;/code&gt; operate on byte counts, as do &lt;code&gt;&lt;a href=&quot;functions/sysread&quot;&gt;sysread()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/sysseek&quot;&gt;sysseek()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/read&quot;&gt;read()&lt;/a&gt;&lt;/code&gt; 读取字符并返回字符数。 &lt;code&gt;&lt;a href=&quot;functions/seek&quot;&gt;seek()&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;functions/tell&quot;&gt;tell()&lt;/a&gt;&lt;/code&gt; 都对字节数进行操作， &lt;code&gt;&lt;a href=&quot;functions/sysread&quot;&gt;sysread()&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;functions/sysseek&quot;&gt;sysseek()&lt;/a&gt;&lt;/code&gt; 也是如此。</target>
        </trans-unit>
        <trans-unit id="6a5c571597ad186dd4a954192a5cebc8d822206f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/readlink&quot;&gt;readlink&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/readlink&quot;&gt;readlink&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7456d57d98baaffed623ce4bd4263a163b2aec05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/redo&quot;&gt;redo&lt;/a&gt;&lt;/code&gt; cannot be used to retry a block that returns a value such as &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; {}&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt; {}&lt;/code&gt; , or &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt; {}&lt;/code&gt; , and should not be used to exit a grep() or map() operation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/redo&quot;&gt;redo&lt;/a&gt;&lt;/code&gt; 不能用于重试返回诸如 &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; {}&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt; {}&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt; {}&lt;/code&gt; 之类的值的块，并且不应用于退出grep（）或map（）操作。</target>
        </trans-unit>
        <trans-unit id="eb6696e29c58ecf1f6ae5ba2682cd87e761d86df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; has special additional dark magic: if you invoke your &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; replacement as &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt; Foo::Bar&lt;/code&gt; , it will actually receive the argument &lt;code&gt;&quot;Foo/Bar.pm&quot;&lt;/code&gt; in @_. See &lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; 具有特殊的附加黑魔法：如果您按 &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt; Foo::Bar&lt;/code&gt; Foo :: Bar调用 &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; 替换，它实际上将在@_中接收参数 &lt;code&gt;&quot;Foo/Bar.pm&quot;&lt;/code&gt; 。参见&lt;a href=&quot;functions/require&quot;&gt; require&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c933e5af38fe33f1b42e9ea2b143d4921f5f23a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s/pattern/replacement/msixpogcedual&lt;/a&gt;&lt;/code&gt; substitutes matches of 'pattern' with 'replacement'. Modifiers as for &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m//&lt;/a&gt;&lt;/code&gt;, with two additions:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s/pattern/replacement/msixpogcedual&lt;/a&gt;&lt;/code&gt; 用&amp;ldquo; pattern&amp;rdquo;和&amp;ldquo; replacement&amp;rdquo;替换匹配的&amp;ldquo; pattern&amp;rdquo;。和 &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m//&lt;/a&gt;&lt;/code&gt; 一样的修饰符，有两个附加值：</target>
        </trans-unit>
        <trans-unit id="7e44cb588e50026d5be597d045d8bc89c8231d12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/say&quot;&gt;say()&lt;/a&gt;&lt;/code&gt; acts just like &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print()&lt;/a&gt;&lt;/code&gt; except $\ will be localized to &lt;code&gt;\n&lt;/code&gt; so you need do nothing special to handle &lt;code&gt;&lt;a href=&quot;functions/say&quot;&gt;say()&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;PRINT()&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/say&quot;&gt;say()&lt;/a&gt;&lt;/code&gt; 的行为就像 &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print()&lt;/a&gt;&lt;/code&gt; 除了$ \将被定位于 &lt;code&gt;\n&lt;/code&gt; 所以你需要做什么特别的手柄 &lt;code&gt;&lt;a href=&quot;functions/say&quot;&gt;say()&lt;/a&gt;&lt;/code&gt; 在 &lt;code&gt;PRINT()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d4a80adc896ab22ad4c977a28b9890609696de0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/say&quot;&gt;say&lt;/a&gt;&lt;/code&gt; is available only if the &lt;code&gt;&quot;say&quot;&lt;/code&gt; feature is enabled or if it is prefixed with &lt;code&gt;CORE::&lt;/code&gt; . The &lt;code&gt;&quot;say&quot;&lt;/code&gt; feature is enabled automatically with a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.10&lt;/code&gt; (or higher) declaration in the current scope.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/say&quot;&gt;say&lt;/a&gt;&lt;/code&gt; 仅当启用 &lt;code&gt;&quot;say&quot;&lt;/code&gt; 功能或其前缀为 &lt;code&gt;CORE::&lt;/code&gt; say才可用。当前版本中的 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.10&lt;/code&gt; v5.10（或更高版本）声明会自动启用 &lt;code&gt;&quot;say&quot;&lt;/code&gt; 功能。</target>
        </trans-unit>
        <trans-unit id="6ed0487d19fc343d28196f6e778281c685c1bcbb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/scalar&quot;&gt;scalar&lt;/a&gt; &lt;a href=&quot;functions/reverse&quot;&gt;reverse&lt;/a&gt;()&lt;/code&gt; reverses by character rather than by byte.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/scalar&quot;&gt;scalar&lt;/a&gt; &lt;a href=&quot;functions/reverse&quot;&gt;reverse&lt;/a&gt;()&lt;/code&gt; 按字符而不是字节进行反转。</target>
        </trans-unit>
        <trans-unit id="c50e5b6f97f253b98726d473e85bc3e447a2bd4a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/setpriority&quot;&gt;setpriority&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/getpriority&quot;&gt;getpriority&lt;/a&gt;&lt;/code&gt; are not compatible with earlier ports by Andreas Kaiser. See &lt;code&gt;&quot;setpriority, getpriority&quot;&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/setpriority&quot;&gt;setpriority&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;functions/getpriority&quot;&gt;getpriority&lt;/a&gt;&lt;/code&gt; 与Andreas Kaiser的早期端口不兼容。请参见 &lt;code&gt;&quot;setpriority, getpriority&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f9af6569137d1fe40ea10409b241d51eaf476898" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/setpriority&quot;&gt;setpriority&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getpriority&quot;&gt;getpriority&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/setpriority&quot;&gt;setpriority&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/getpriority&quot;&gt;getpriority&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9e768f6c25fd89661888a8fb28b195577438c085" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/splice&quot;&gt;splice&lt;/a&gt;&lt;/code&gt; can be used, for example, to implement n-ary queue processing:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/splice&quot;&gt;splice&lt;/a&gt;&lt;/code&gt; 例如，可以使用 splice来实现n元队列处理：</target>
        </trans-unit>
        <trans-unit id="177c757ab59e714a32d57425c159cf8b95290093" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt; /regex/, string&lt;/code&gt; splits &lt;code&gt;string&lt;/code&gt; into a list of substrings and returns that list. The regex determines the character sequence that &lt;code&gt;string&lt;/code&gt; is split with respect to. For example, to split a string into words, use</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt; /regex/, string&lt;/code&gt; 将字符串拆分为子 &lt;code&gt;string&lt;/code&gt; 列表，然后返回该列表。正则表达式确定 &lt;code&gt;string&lt;/code&gt; 相对于的字符序列。例如，要将字符串拆分为单词，请使用</target>
        </trans-unit>
        <trans-unit id="acccb47a52b54e1b968bac1688412424630d4600" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; declares a lexically scoped variable, just like &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt;. However, those variables will never be reinitialized, contrary to lexical variables that are reinitialized each time their enclosing block is entered. See &lt;a href=&quot;perlsub#Persistent-Private-Variables&quot;&gt;Persistent Private Variables in perlsub&lt;/a&gt; for details.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; 声明了一个词法范围的变量，就像 &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; 一样。但是，这些变量将永远不会重新初始化，这与每次进入其封闭块时都会重新初始化的词法变量相反。有关详细信息，请参见&lt;a href=&quot;perlsub#Persistent-Private-Variables&quot;&gt; perlsub中的持久专用变量&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3e1f128d19018432959490e63d61d5b5b7fb3f6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; is available only if the &lt;code&gt;&quot;state&quot;&lt;/code&gt; feature is enabled or if it is prefixed with &lt;code&gt;CORE::&lt;/code&gt; . The &lt;code&gt;&quot;state&quot;&lt;/code&gt; feature is enabled automatically with a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.10&lt;/code&gt; (or higher) declaration in the current scope.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; 仅在启用 &lt;code&gt;&quot;state&quot;&lt;/code&gt; 功能或以 &lt;code&gt;CORE::&lt;/code&gt; 为前缀的状态下，状态才可用。当前 &lt;code&gt;&quot;state&quot;&lt;/code&gt; 的 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.10&lt;/code&gt; （或更高版本）声明会自动启用 &amp;ldquo;状态&amp;rdquo;功能。</target>
        </trans-unit>
        <trans-unit id="d3d682a66def88db6f77999cda09b21cb1cbfe7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; variables are enabled only when the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature &quot;state&quot;&lt;/code&gt; pragma is in effect, unless the keyword is written as &lt;code&gt;CORE::state&lt;/code&gt; . See also &lt;a href=&quot;feature&quot;&gt;feature&lt;/a&gt;. Alternately, include a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.10&lt;/code&gt; or later to the current scope.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; 仅当 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature &quot;state&quot;&lt;/code&gt; 编译指示有效时才启用状态变量，除非关键字写为 &lt;code&gt;CORE::state&lt;/code&gt; 。另请参阅&lt;a href=&quot;feature&quot;&gt;功能&lt;/a&gt;。或者， &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.10&lt;/code&gt; 或更高版本包含在当前范围内。</target>
        </trans-unit>
        <trans-unit id="5fa9d870fbe303bfda0361e0eb1503a4bc2827ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt; LIST&lt;/code&gt; without the use of indirect object syntax (&lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt; PROGRAM LIST&lt;/code&gt; ) may fall back to trying the shell if the first &lt;code&gt;spawn()&lt;/code&gt; fails. (Win32)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt; LIST&lt;/code&gt; 无需使用间接对象语法（的 &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt; PROGRAM LIST&lt;/code&gt; ）可以回退到试图壳如果第一 &lt;code&gt;spawn()&lt;/code&gt; 失败。 （Win32的）</target>
        </trans-unit>
        <trans-unit id="a13394de1a0017f2e3c646b4e6f9372f06700bd0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; also provides direct control over whether shell wildcard processing may take place, whereas backticks do not.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; 还直接控制是否可以进行外壳通配符处理，而反引号则不会。</target>
        </trans-unit>
        <trans-unit id="ca56f2cd326f61f2e21ca153383b807ee7a157d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/time&quot;&gt;time&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/time&quot;&gt;time&lt;/a&gt;&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="325d8cb9dc74553e44ba1cf66fe60ddd2554335d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/umask&quot;&gt;umask&lt;/a&gt;&lt;/code&gt; works but the correct permissions are set only when the file is finally closed. (AmigaOS)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/umask&quot;&gt;umask&lt;/a&gt;&lt;/code&gt; 有效，但是只有在文件最终关闭时才设置正确的权限。（AmigaOS）</target>
        </trans-unit>
        <trans-unit id="4b210b1883c3e9bcbba5d5fb87e463314c1e4390" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is always treated as numeric, and in particular is changed to &lt;code&gt;0&lt;/code&gt; before incrementing (so that a post-increment of an undef value will return &lt;code&gt;0&lt;/code&gt; rather than &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 始终被视为数字，尤其是在递增之前将其更改为 &lt;code&gt;0&lt;/code&gt; （这样，undef值的后递增将返回 &lt;code&gt;0&lt;/code&gt; 而不是 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="e5aefccb12996eadd8d801e9cfdf76ddf4f796d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink&lt;/a&gt;&lt;/code&gt; will delete a file if at all possible, even if it requires changing file protection (though it won't try to change the protection of the parent directory). You can tell whether you've got explicit delete access to a file by using the &lt;code&gt;VMS::Filespec::candelete&lt;/code&gt; operator. For instance, in order to delete only files to which you have delete access, you could say something like</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink&lt;/a&gt;&lt;/code&gt; 即使需要更改文件保护， unlink也会删除文件（尽管它不会尝试更改父目录的保护）。您可以使用 &lt;code&gt;VMS::Filespec::candelete&lt;/code&gt; 运算符来判断是否具有对文件的明确删除访问权限。例如，为了只删除具有删除访问权限的文件，您可以说类似</target>
        </trans-unit>
        <trans-unit id="c89b142c4cf303af585f44aa959a9f2d33f1baea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink&lt;/a&gt;&lt;/code&gt; will delete the highest version of a file only; in order to delete all versions, you need to say</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink&lt;/a&gt;&lt;/code&gt; 只会删除文件的最高版本；为了删除所有版本，您需要说</target>
        </trans-unit>
        <trans-unit id="2b9d97894178af5ea2b4ade814baff596e23579c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; does the reverse of &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt;: it takes a string and expands it out into a list of values. (In scalar context, it returns merely the first value produced.)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; 与 &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; 的作用相反：它接受一个字符串并将其扩展为值列表。（在标量上下文中，它仅返回产生的第一个值。）</target>
        </trans-unit>
        <trans-unit id="44eb6a0f9a45c3ab4602cb7e40deb8c651427714" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; also lexically enables all features available in the requested version as defined by the &lt;code&gt;feature&lt;/code&gt; pragma, disabling any features not in the requested version's feature bundle. See &lt;a href=&quot;feature&quot;&gt;feature&lt;/a&gt;. Similarly, if the specified Perl version is greater than or equal to 5.12.0, strictures are enabled lexically as with &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict&lt;/code&gt; . Any explicit use of &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; strict&lt;/code&gt; overrides &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; , even if it comes before it. Later use of &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; will override all behavior of a previous &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; , possibly removing the &lt;code&gt;strict&lt;/code&gt; and &lt;code&gt;feature&lt;/code&gt; added by &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; . &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; does not load the</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; 还可以按词法启用由 &lt;code&gt;feature&lt;/code&gt; 编译指示定义的请求版本中的所有可用功能，从而禁用请求版本的功能包中未包含的所有功能。请参阅&lt;a href=&quot;feature&quot;&gt;功能&lt;/a&gt;。类似地，如果指定的Perl版本大于或等于5.12.0，则与 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict&lt;/code&gt; 一样在词法上启用约束。显式使用 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; strict&lt;/code&gt; 覆盖都将 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; ，即使它在它之前。以后使用 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; 将覆盖以前 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; 所有行为，可能会删除 &lt;code&gt;strict&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; VERSION添加了strict和 &lt;code&gt;feature&lt;/code&gt; 。 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; VERSION不会加载</target>
        </trans-unit>
        <trans-unit id="02af597e7e1c634b880fabc11ab8447d438ffc44" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; bytes&lt;/code&gt; is usually a failed attempt to do something useful. Just forget about it.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; bytes&lt;/code&gt; 通常是做一些有用的尝试的失败尝试。忘掉它。</target>
        </trans-unit>
        <trans-unit id="65794f2e0db80cf66382b2a3fac13f64df20f1dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; encoding ...&lt;/code&gt; is not thread-safe (i.e., do not use in threaded applications).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; encoding ...&lt;/code&gt; 不是线程安全的（即，不要在线程应用程序中使用）。</target>
        </trans-unit>
        <trans-unit id="39eeb7ec51146733b1a7cf9eb0196f712de28471" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'fc'&lt;/code&gt; tells the compiler to enable the &lt;code&gt;&lt;a href=&quot;functions/fc&quot;&gt;fc&lt;/a&gt;&lt;/code&gt; function, which implements Unicode casefolding.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'fc'&lt;/code&gt; 告诉编译器启用 &lt;code&gt;&lt;a href=&quot;functions/fc&quot;&gt;fc&lt;/a&gt;&lt;/code&gt; 函数，该函数实现Unicode大小写折叠。</target>
        </trans-unit>
        <trans-unit id="21d0ae3670893615eaeba861a2b7ada5d23d8df4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'say'&lt;/code&gt; tells the compiler to enable the Perl 6 style &lt;code&gt;&lt;a href=&quot;functions/say&quot;&gt;say&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'say'&lt;/code&gt; 告诉编译器启用Perl 6风格的 &lt;code&gt;&lt;a href=&quot;functions/say&quot;&gt;say&lt;/a&gt;&lt;/code&gt; 函数。</target>
        </trans-unit>
        <trans-unit id="119202774744694437463c0ae2e1f969fd53e6b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'state'&lt;/code&gt; tells the compiler to enable &lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; variables.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'state'&lt;/code&gt; 告诉编译器启用 &lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; 变量。</target>
        </trans-unit>
        <trans-unit id="be9193ee0a2139b1ba978d5f6b9763f7962eb6c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'switch'&lt;/code&gt; tells the compiler to enable the Perl 6 given/when construct.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'switch'&lt;/code&gt; 告诉编译器启用Perl 6给定/何时构造。</target>
        </trans-unit>
        <trans-unit id="ee3886237fa1a19506e8ee6eb3def8d571370298" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'unicode_strings'&lt;/code&gt; tells the compiler to use Unicode rules in all string operations executed within its scope (unless they are also within the scope of either &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; bytes&lt;/code&gt; ). The same applies to all regular expressions compiled within the scope, even if executed outside it. It does not change the internal representation of strings, but only how they are interpreted.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'unicode_strings'&lt;/code&gt; 告诉编译器在其范围内执行的所有字符串操作中使用Unicode规则（除非它们也在 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; bytes&lt;/code&gt; 的范围内）。这同样适用于在范围内编译的所有正则表达式，即使在范围外执行也是如此。它不会更改字符串的内部表示，而只会更改字符串的解释方式。</target>
        </trans-unit>
        <trans-unit id="3cba69074857ea47c3dfb8655f441c068164911d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re 'debug'&lt;/code&gt; enables you to see the gory details of how the Perl regular expression engine works. In order to understand this typically voluminous output, one must not only have some idea about how regular expression matching works in general, but also know how Perl's regular expressions are internally compiled into an automaton. These matters are explored in some detail in &lt;a href=&quot;perldebguts#Debugging-Regular-Expressions&quot;&gt;Debugging Regular Expressions in perldebguts&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re 'debug'&lt;/code&gt; 使您可以查看Perl正则表达式引擎如何工作的详细信息。为了理解这种通常庞大的输出，不仅必须对正则表达式匹配的总体工作原理有所了解，而且还必须知道Perl的正则表达式如何在内部编译成自动机。在&lt;a href=&quot;perldebguts#Debugging-Regular-Expressions&quot;&gt;调试Perldebguts中的正则表达式中将&lt;/a&gt;详细探讨这些问题。</target>
        </trans-unit>
        <trans-unit id="4ec77985991c1d1d32691bbc003d4e51cd7aeda5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; utf8&lt;/code&gt; wasn't implicitly declared so you have to &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; utf8&lt;/code&gt; to do</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; utf8&lt;/code&gt; 并不是隐式声明的，因此您必须 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; utf8&lt;/code&gt; 来做</target>
        </trans-unit>
        <trans-unit id="443f944da102d55c2affc8a5f885238902623e07" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; a Perl module if a condition holds (also can &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt;&lt;/code&gt; a module)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; Perl模块，如果条件成立（也可以 &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt;&lt;/code&gt; 一个模块）</target>
        </trans-unit>
        <trans-unit id="b3ad26005d5e68b2cb4e1547e6cbf20e087acbfc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/vec&quot;&gt;vec&lt;/a&gt;&lt;/code&gt; may also be assigned to, in which case parentheses are needed to give the expression the correct precedence as in</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/vec&quot;&gt;vec&lt;/a&gt;&lt;/code&gt; 也可以将 vec分配给这种情况，在这种情况下，需要括号以赋予表达式正确的优先级，如</target>
        </trans-unit>
        <trans-unit id="253b8837541eb997903db67737154769342d214c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/wantarray&quot;&gt;wantarray()&lt;/a&gt;&lt;/code&gt;'s result is unspecified in the top level of a file, in a &lt;code&gt;BEGIN&lt;/code&gt; , &lt;code&gt;UNITCHECK&lt;/code&gt; , &lt;code&gt;CHECK&lt;/code&gt; , &lt;code&gt;INIT&lt;/code&gt; or &lt;code&gt;END&lt;/code&gt; block, or in a &lt;code&gt;DESTROY&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/wantarray&quot;&gt;wantarray()&lt;/a&gt;&lt;/code&gt; 的结果未在文件的顶级， &lt;code&gt;BEGIN&lt;/code&gt; ， &lt;code&gt;UNITCHECK&lt;/code&gt; ， &lt;code&gt;CHECK&lt;/code&gt; ， &lt;code&gt;INIT&lt;/code&gt; 或 &lt;code&gt;END&lt;/code&gt; 块中或在 &lt;code&gt;DESTROY&lt;/code&gt; 方法中指定。</target>
        </trans-unit>
        <trans-unit id="4ce182871cf42859bea7be5ff4b5b81a1a95e11f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/warn&quot;&gt;warn()&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;carp()&lt;/code&gt; a message to STDERR.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/warn&quot;&gt;warn()&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;carp()&lt;/code&gt; 向STDERR发送消息。</target>
        </trans-unit>
        <trans-unit id="f0df496d8f100a8113c0eb03aaaf8ccef33e1b68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; cannot be used to exit a block that returns a value such as &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt; {}&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;sub&quot;&gt;sub&lt;/a&gt; {}&lt;/code&gt; , or &lt;code&gt;&lt;a href=&quot;do&quot;&gt;do&lt;/a&gt; {}&lt;/code&gt; , and should not be used to exit a grep() or map() operation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; 不能用于退出返回诸如 &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt; {}&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;sub&quot;&gt;sub&lt;/a&gt; {}&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;do&quot;&gt;do&lt;/a&gt; {}&lt;/code&gt; 之类的值的块，并且不应用于退出grep（）或map（）操作。</target>
        </trans-unit>
        <trans-unit id="263d020f345cd227424dc536345012174cded3ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;last&quot;&gt;last&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;next&quot;&gt;next&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;redo&quot;&gt;redo&lt;/a&gt;&lt;/code&gt; may appear within a &lt;code&gt;&lt;a href=&quot;continue&quot;&gt;continue&lt;/a&gt;&lt;/code&gt; block; &lt;code&gt;&lt;a href=&quot;last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;redo&quot;&gt;redo&lt;/a&gt;&lt;/code&gt; behave as if they had been executed within the main block. So will &lt;code&gt;&lt;a href=&quot;next&quot;&gt;next&lt;/a&gt;&lt;/code&gt;, but since it will execute a &lt;code&gt;&lt;a href=&quot;continue&quot;&gt;continue&lt;/a&gt;&lt;/code&gt; block, it may be more entertaining.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;next&quot;&gt;next&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;redo&quot;&gt;redo&lt;/a&gt;&lt;/code&gt; 可能出现在 &lt;code&gt;&lt;a href=&quot;continue&quot;&gt;continue&lt;/a&gt;&lt;/code&gt; 块中； &lt;code&gt;&lt;a href=&quot;last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;redo&quot;&gt;redo&lt;/a&gt;&lt;/code&gt; 的行为就像在主块中执行一样。 &lt;code&gt;&lt;a href=&quot;next&quot;&gt;next&lt;/a&gt;&lt;/code&gt; 也会如此，但是由于它将执行一个 &lt;code&gt;&lt;a href=&quot;continue&quot;&gt;continue&lt;/a&gt;&lt;/code&gt; 块，因此可能会更有趣。</target>
        </trans-unit>
        <trans-unit id="3be37cb59b6af284f0f98885aeb6b517a5b6cbcd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;next&quot;&gt;next&lt;/a&gt;&lt;/code&gt; cannot be used to exit a block which returns a value such as &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt; {}&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;sub&quot;&gt;sub&lt;/a&gt; {}&lt;/code&gt; , or &lt;code&gt;&lt;a href=&quot;do&quot;&gt;do&lt;/a&gt; {}&lt;/code&gt; , and should not be used to exit a grep() or map() operation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;next&quot;&gt;next&lt;/a&gt;&lt;/code&gt; 不能用于退出返回诸如 &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt; {}&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;sub&quot;&gt;sub&lt;/a&gt; {}&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;do&quot;&gt;do&lt;/a&gt; {}&lt;/code&gt; 之类的值的块，并且不应用于退出grep（）或map（）操作。</target>
        </trans-unit>
        <trans-unit id="94d58e96273d9ce3f45d93ab3d9b2a258a040437" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; differs from &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; vars&lt;/code&gt; , which allows use of an unqualified name</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; 与 &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; vars&lt;/code&gt; 不同，后者允许使用非限定名称</target>
        </trans-unit>
        <trans-unit id="512b743a5a3af3616073c2971298e6db67fcaac9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; has the same scoping rules as &lt;code&gt;&lt;a href=&quot;my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;state&quot;&gt;state&lt;/a&gt;&lt;/code&gt;, meaning that it is only valid within a lexical scope. Unlike &lt;code&gt;&lt;a href=&quot;my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;state&quot;&gt;state&lt;/a&gt;&lt;/code&gt;, which both declare new (lexical) variables, &lt;code&gt;&lt;a href=&quot;our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; only creates an alias to an existing variable: a package variable of the same name.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; 具有与 &lt;code&gt;&lt;a href=&quot;my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; 相同的作用域规则，这意味着它仅在词汇范围内有效。与 &lt;code&gt;&lt;a href=&quot;my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; 都声明新的（词法）变量不同， &lt;code&gt;&lt;a href=&quot;our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; 只为现有变量创建一个别名：同名的包变量。</target>
        </trans-unit>
        <trans-unit id="ba2bf5f5b3a22314641f3499a065d97485a642e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; makes a lexical alias to a package (i.e. global) variable of the same name in the current package for use within the current lexical scope.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; 为当前包中具有相同名称的包（即全局）变量创建词法别名，以在当前词法范围内使用。</target>
        </trans-unit>
        <trans-unit id="360ca70694e71b7a9eee09a8d981b1ad1ac44c90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;pos&quot;&gt;pos&lt;/a&gt;&lt;/code&gt; directly accesses the location used by the regexp engine to store the offset, so assigning to &lt;code&gt;&lt;a href=&quot;pos&quot;&gt;pos&lt;/a&gt;&lt;/code&gt; will change that offset, and so will also influence the &lt;code&gt;\G&lt;/code&gt; zero-width assertion in regular expressions. Both of these effects take place for the next match, so you can't affect the position with &lt;code&gt;&lt;a href=&quot;pos&quot;&gt;pos&lt;/a&gt;&lt;/code&gt; during the current match, such as in &lt;code&gt;(?{pos() = 5})&lt;/code&gt; or &lt;code&gt;s//pos() = 5/e&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;pos&quot;&gt;pos&lt;/a&gt;&lt;/code&gt; 直接访问正则表达式引擎用于存储偏移量的位置，因此将 &lt;code&gt;&lt;a href=&quot;pos&quot;&gt;pos&lt;/a&gt;&lt;/code&gt; 赋值将更改该偏移量，因此也将影响正则表达式中 &lt;code&gt;\G&lt;/code&gt; 零宽度的断言。这两种效果都会在下一场比赛中发生，因此您无法在当前比赛中影响 &lt;code&gt;&lt;a href=&quot;pos&quot;&gt;pos&lt;/a&gt;&lt;/code&gt; 的位置，例如 &lt;code&gt;(?{pos() = 5})&lt;/code&gt; 或 &lt;code&gt;s//pos() = 5/e&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="44ebaa7ec2b209fa20d273b0a5a9b7503aacc295" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;redo&quot;&gt;redo&lt;/a&gt;&lt;/code&gt; cannot be used to retry a block that returns a value such as &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt; {}&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;sub&quot;&gt;sub&lt;/a&gt; {}&lt;/code&gt; , or &lt;code&gt;&lt;a href=&quot;do&quot;&gt;do&lt;/a&gt; {}&lt;/code&gt; , and should not be used to exit a grep() or map() operation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;redo&quot;&gt;redo&lt;/a&gt;&lt;/code&gt; 不能用于重试返回诸如 &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt; {}&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;sub&quot;&gt;sub&lt;/a&gt; {}&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;do&quot;&gt;do&lt;/a&gt; {}&lt;/code&gt; 之类的值的块，并且不应用于退出grep（）或map（）操作。</target>
        </trans-unit>
        <trans-unit id="aa29c0555345e4686ed8d3d71e3aea4b37c87e34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;splice&quot;&gt;splice&lt;/a&gt;&lt;/code&gt; can be used, for example, to implement n-ary queue processing:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;splice&quot;&gt;splice&lt;/a&gt;&lt;/code&gt; 例如，可以使用 splice来实现n元队列处理：</target>
        </trans-unit>
        <trans-unit id="6aaa7b64b8ed8213795d79c3e9d1a11a7dd50c6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; declares a lexically scoped variable, just like &lt;code&gt;&lt;a href=&quot;my&quot;&gt;my&lt;/a&gt;&lt;/code&gt;. However, those variables will never be reinitialized, contrary to lexical variables that are reinitialized each time their enclosing block is entered. See &lt;a href=&quot;../perlsub#Persistent-Private-Variables&quot;&gt;Persistent Private Variables in perlsub&lt;/a&gt; for details.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; 声明了一个词法范围的变量，就像 &lt;code&gt;&lt;a href=&quot;my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; 一样。但是，这些变量将永远不会重新初始化，这与每次进入其封闭块时都会重新初始化的词法变量相反。有关详细信息，请参见&lt;a href=&quot;../perlsub#Persistent-Private-Variables&quot;&gt; perlsub中的持久专用变量&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8157faa8c3a3d05ba145b1d8aefaa265faaa9f67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; variables are enabled only when the &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; feature &quot;state&quot;&lt;/code&gt; pragma is in effect, unless the keyword is written as &lt;code&gt;CORE::state&lt;/code&gt; . See also &lt;a href=&quot;../feature&quot;&gt;feature&lt;/a&gt;. Alternately, include a &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; v5.10&lt;/code&gt; or later to the current scope.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; 仅当 &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; feature &quot;state&quot;&lt;/code&gt; 编译指示有效时才启用状态变量，除非关键字写为 &lt;code&gt;CORE::state&lt;/code&gt; 。另请参阅&lt;a href=&quot;../feature&quot;&gt;功能&lt;/a&gt;。或者， &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; v5.10&lt;/code&gt; 或更高版本包含在当前范围内。</target>
        </trans-unit>
        <trans-unit id="2245bc251bbc1b43fe683a1a16bb66eec96c8cbd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; does the reverse of &lt;code&gt;&lt;a href=&quot;pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt;: it takes a string and expands it out into a list of values. (In scalar context, it returns merely the first value produced.)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; 与 &lt;code&gt;&lt;a href=&quot;pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; 的作用相反：它接受一个字符串并将其扩展为值列表。（在标量上下文中，它仅返回产生的第一个值。）</target>
        </trans-unit>
        <trans-unit id="736c80794a09df674ddc9a935c317db522374fbb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; also lexically enables all features available in the requested version as defined by the &lt;code&gt;feature&lt;/code&gt; pragma, disabling any features not in the requested version's feature bundle. See &lt;a href=&quot;../feature&quot;&gt;feature&lt;/a&gt;. Similarly, if the specified Perl version is greater than or equal to 5.12.0, strictures are enabled lexically as with &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; strict&lt;/code&gt; . Any explicit use of &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; strict&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;no&quot;&gt;no&lt;/a&gt; strict&lt;/code&gt; overrides &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; , even if it comes before it. Later use of &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; will override all behavior of a previous &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; , possibly removing the &lt;code&gt;strict&lt;/code&gt; and &lt;code&gt;feature&lt;/code&gt; added by &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; . &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; does not load the</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; 还可以按词法启用由 &lt;code&gt;feature&lt;/code&gt; 编译指示定义的请求版本中的所有可用功能，从而禁用请求版本的功能包中未包含的所有功能。请参阅&lt;a href=&quot;../feature&quot;&gt;功能&lt;/a&gt;。类似地，如果指定的Perl版本大于或等于5.12.0，则与 &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; strict&lt;/code&gt; 一样在词法上启用约束。显式使用 &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; strict&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;no&quot;&gt;no&lt;/a&gt; strict&lt;/code&gt; 覆盖都将 &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; ，即使它在它之前。以后使用 &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; 将覆盖以前 &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; 所有行为，可能会删除 &lt;code&gt;strict&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; VERSION添加了strict和 &lt;code&gt;feature&lt;/code&gt; 。 &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; VERSION不会加载</target>
        </trans-unit>
        <trans-unit id="5d689d705b1e08b377f1d5deb4d1a473e7ddec22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;vec&quot;&gt;vec&lt;/a&gt;&lt;/code&gt; may also be assigned to, in which case parentheses are needed to give the expression the correct precedence as in</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;vec&quot;&gt;vec&lt;/a&gt;&lt;/code&gt; 也可以将 vec分配给这种情况，在这种情况下，需要括号以赋予表达式正确的优先级，如</target>
        </trans-unit>
        <trans-unit id="355259eee85060ecf231fded7ccdc9659e1111c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;wantarray&quot;&gt;wantarray()&lt;/a&gt;&lt;/code&gt;'s result is unspecified in the top level of a file, in a &lt;code&gt;BEGIN&lt;/code&gt; , &lt;code&gt;UNITCHECK&lt;/code&gt; , &lt;code&gt;CHECK&lt;/code&gt; , &lt;code&gt;INIT&lt;/code&gt; or &lt;code&gt;END&lt;/code&gt; block, or in a &lt;code&gt;DESTROY&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;wantarray&quot;&gt;wantarray()&lt;/a&gt;&lt;/code&gt; 的结果未在文件的顶级， &lt;code&gt;BEGIN&lt;/code&gt; ， &lt;code&gt;UNITCHECK&lt;/code&gt; ， &lt;code&gt;CHECK&lt;/code&gt; ， &lt;code&gt;INIT&lt;/code&gt; 或 &lt;code&gt;END&lt;/code&gt; 块中或在 &lt;code&gt;DESTROY&lt;/code&gt; 方法中指定。</target>
        </trans-unit>
        <trans-unit id="8d50b5f9e52f09d2ccae3273ada4191283911c0e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;=encoding&lt;/code&gt; affects the whole document, and must occur only once.</source>
          <target state="translated">&lt;code&gt;=encoding&lt;/code&gt; 会影响整个文档，并且只能出现一次。</target>
        </trans-unit>
        <trans-unit id="d07322f9284a7fc6a66d31dacd87d358ae453c9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;=item&lt;/code&gt; determines the type of the list.</source>
          <target state="translated">&lt;code&gt;=item&lt;/code&gt; 确定列表的类型。</target>
        </trans-unit>
        <trans-unit id="ebad7dcfcec37e214976c00e96b70065437ad740" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;=item&lt;/code&gt; without any parameters is deprecated. It should either be followed by &lt;code&gt;*&lt;/code&gt; to indicate an unordered list, by a number (optionally followed by a dot) to indicate an ordered (numbered) list or simple text for a definition list.</source>
          <target state="translated">&lt;code&gt;=item&lt;/code&gt; 不建议使用不带任何参数的= item。应该在其后加上 &lt;code&gt;*&lt;/code&gt; 表示无序列表，再跟一个数字（可选地后跟一个圆点）表示一个有序（编号）列表或定义列表的简单文本。</target>
        </trans-unit>
        <trans-unit id="1f73e36fe3dcbab1d5cadecc12ae9b6f4e28981d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;=~&lt;/code&gt; determines to which variable the regex is applied. In its absence, $_ is used.</source>
          <target state="translated">&lt;code&gt;=~&lt;/code&gt; 确定将正则表达式应用于哪个变量。如果没有，则使用$ _。</target>
        </trans-unit>
        <trans-unit id="36fefbdb7ea0230f31629f2921135e5559c380fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;? :&lt;/code&gt; has higher precedence than assignment. In JavaScript, one can write:</source>
          <target state="translated">&lt;code&gt;? :&lt;/code&gt; 优先级高于分配。在JavaScript中，可以编写：</target>
        </trans-unit>
        <trans-unit id="99cbd52c428d14570a189a38a8c217073b6fca54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;?pattern?&lt;/code&gt; is like &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/pattern/&lt;/a&gt;&lt;/code&gt; but matches only once. No alternate delimiters can be used. Must be reset with reset().</source>
          <target state="translated">&lt;code&gt;?pattern?&lt;/code&gt; 就像 &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/pattern/&lt;/a&gt;&lt;/code&gt; 但是只匹配一次。不能使用其他分隔符。必须使用reset（）进行重置。</target>
        </trans-unit>
        <trans-unit id="f1ade0011806b926bc0fc0aa0bd8d231bc768280" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;/code&gt; , &lt;code&gt;x&lt;/code&gt; , and &lt;code&gt;X&lt;/code&gt; , where it is equivalent to &lt;code&gt;0&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;@&lt;/code&gt; ， &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;X&lt;/code&gt; ，它等于 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="30f3fd756e106eca16f05f980cc57eeeafcf0a6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@DB::dbline&lt;/code&gt; is an alias for &lt;code&gt;@{&quot;::_&amp;lt;current_file&quot;}&lt;/code&gt; , which holds the lines of the currently-selected file (compiled by Perl), either explicitly chosen with the debugger's &lt;code&gt;f&lt;/code&gt; command, or implicitly by flow of execution.</source>
          <target state="translated">&lt;code&gt;@DB::dbline&lt;/code&gt; 是 &lt;code&gt;@{&quot;::_&amp;lt;current_file&quot;}&lt;/code&gt; 的别名，该别名包含当前选定文件（由Perl编译）的行，这些行可以通过调试器的 &lt;code&gt;f&lt;/code&gt; 命令显式选择，也可以通过以下流程隐式地选择：执行。</target>
        </trans-unit>
        <trans-unit id="c5133137a39f1db792f2a0a17dd56d1204b81d6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ANSI&lt;/code&gt; C requires &lt;code&gt;extern&lt;/code&gt; where C++ requires 'extern &lt;code&gt;C&lt;/code&gt; '. This variable can be used in Configure to do the right thing.</source>
          <target state="translated">&lt;code&gt;ANSI&lt;/code&gt; C需要 &lt;code&gt;extern&lt;/code&gt; ，而C ++需要'extern &lt;code&gt;C&lt;/code&gt; '。可以在&amp;ldquo;配置&amp;rdquo;中使用此变量以执行正确的操作。</target>
        </trans-unit>
        <trans-unit id="84ae3437c7a9c9b775fbb010803709f69f626606" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ARGV&lt;/code&gt; must be capitalized. &lt;code&gt;$ARGV[0]&lt;/code&gt; is C's &lt;code&gt;argv[1]&lt;/code&gt; , and &lt;code&gt;argv[0]&lt;/code&gt; ends up in &lt;code&gt;$0&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;ARGV&lt;/code&gt; 必须大写。 &lt;code&gt;$ARGV[0]&lt;/code&gt; 是C的 &lt;code&gt;argv[1]&lt;/code&gt; ，而 &lt;code&gt;argv[0]&lt;/code&gt; 结尾于 &lt;code&gt;$0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f57ccf257a33b046ff0968824b0efb78efa3559e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ARG_MAX&lt;/code&gt;&lt;code&gt;CHAR_BIT&lt;/code&gt;&lt;code&gt;CHAR_MAX&lt;/code&gt;&lt;code&gt;CHAR_MIN&lt;/code&gt;&lt;code&gt;CHILD_MAX&lt;/code&gt;&lt;code&gt;INT_MAX&lt;/code&gt;&lt;code&gt;INT_MIN&lt;/code&gt;&lt;code&gt;LINK_MAX&lt;/code&gt;&lt;code&gt;LONG_MAX&lt;/code&gt;&lt;code&gt;LONG_MIN&lt;/code&gt;&lt;code&gt;MAX_CANON&lt;/code&gt;&lt;code&gt;MAX_INPUT&lt;/code&gt;&lt;code&gt;MB_LEN_MAX&lt;/code&gt;&lt;code&gt;NAME_MAX&lt;/code&gt;&lt;code&gt;NGROUPS_MAX&lt;/code&gt;&lt;code&gt;OPEN_MAX&lt;/code&gt;&lt;code&gt;PATH_MAX&lt;/code&gt;&lt;code&gt;PIPE_BUF&lt;/code&gt;&lt;code&gt;SCHAR_MAX&lt;/code&gt;&lt;code&gt;SCHAR_MIN&lt;/code&gt;&lt;code&gt;SHRT_MAX&lt;/code&gt;&lt;code&gt;SHRT_MIN&lt;/code&gt;&lt;code&gt;SSIZE_MAX&lt;/code&gt;&lt;code&gt;STREAM_MAX&lt;/code&gt;&lt;code&gt;TZNAME_MAX&lt;/code&gt;&lt;code&gt;UCHAR_MAX&lt;/code&gt;&lt;code&gt;UINT_MAX&lt;/code&gt;&lt;code&gt;ULONG_MAX&lt;/code&gt;&lt;code&gt;USHRT_MAX&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ARG_MAX&lt;/code&gt;&lt;code&gt;CHAR_BIT&lt;/code&gt;&lt;code&gt;CHAR_MAX&lt;/code&gt;&lt;code&gt;CHAR_MIN&lt;/code&gt;&lt;code&gt;CHILD_MAX&lt;/code&gt;&lt;code&gt;INT_MAX&lt;/code&gt;&lt;code&gt;INT_MIN&lt;/code&gt;&lt;code&gt;LINK_MAX&lt;/code&gt;&lt;code&gt;LONG_MAX&lt;/code&gt;&lt;code&gt;LONG_MIN&lt;/code&gt;&lt;code&gt;MAX_CANON&lt;/code&gt;&lt;code&gt;MAX_INPUT&lt;/code&gt;&lt;code&gt;MB_LEN_MAX&lt;/code&gt;&lt;code&gt;NAME_MAX&lt;/code&gt;&lt;code&gt;NGROUPS_MAX&lt;/code&gt;&lt;code&gt;OPEN_MAX&lt;/code&gt;&lt;code&gt;PATH_MAX&lt;/code&gt;&lt;code&gt;PIPE_BUF&lt;/code&gt;&lt;code&gt;SCHAR_MAX&lt;/code&gt;&lt;code&gt;SCHAR_MIN&lt;/code&gt;&lt;code&gt;SHRT_MAX&lt;/code&gt;&lt;code&gt;SHRT_MIN&lt;/code&gt;&lt;code&gt;SSIZE_MAX&lt;/code&gt;&lt;code&gt;STREAM_MAX&lt;/code&gt;&lt;code&gt;TZNAME_MAX&lt;/code&gt;&lt;code&gt;UCHAR_MAX&lt;/code&gt;&lt;code&gt;UINT_MAX&lt;/code&gt;&lt;code&gt;ULONG_MAX&lt;/code&gt;&lt;code&gt;USHRT_MAX&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5b9569dc4638e876dd19281624e240989316c5dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AUTOLOAD&lt;/code&gt; ed Constants</source>
          <target state="translated">&lt;code&gt;AUTOLOAD&lt;/code&gt; 常量</target>
        </trans-unit>
        <trans-unit id="490e142f631947b7b6f2c788b456711e34efe3fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AUTOLOAD&lt;/code&gt; is called as a regular method, and the caller will not know the difference. Whatever value your &lt;code&gt;AUTOLOAD&lt;/code&gt; method returns is returned to the caller.</source>
          <target state="translated">&lt;code&gt;AUTOLOAD&lt;/code&gt; 被称为常规方法，并且调用者将不知道它们之间的区别。您的 &lt;code&gt;AUTOLOAD&lt;/code&gt; 方法返回的任何值都将返回给调用方。</target>
        </trans-unit>
        <trans-unit id="ffbb9ec120ba361b6f5460b94c314d64b448bf2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;App::Prove&lt;/code&gt; provides support for 3rd-party plugins. These are currently loaded at run-time,</source>
          <target state="translated">&lt;code&gt;App::Prove&lt;/code&gt; 提供对第三方插件的支持。这些当前在运行时加载，</target>
        </trans-unit>
        <trans-unit id="ba0aceb7a30a93c5c7447ecd145d2662ec296f25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Archive::Tar&lt;/code&gt; needs to know the current directory, and it will run &lt;code&gt;Cwd::cwd()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Archive::Tar&lt;/code&gt; 需要知道当前目录，它将运行 &lt;code&gt;Cwd::cwd()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="80986d664cffa01e81fccf03bfedaa80a88cc119" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Archive::Tar&lt;/code&gt; uses byte semantics for any files it reads from or writes to disk. This is not a problem if you only deal with files and never look at their content or work solely with byte strings. But if you use Unicode strings with character semantics, some additional steps need to be taken.</source>
          <target state="translated">&lt;code&gt;Archive::Tar&lt;/code&gt; 对从磁盘读取或写入磁盘的任何文件使用字节语义。如果您仅处理文件而从不查看其内容或仅使用字节字符串，则这不是问题。但是，如果您将Unicode字符串与字符语义一起使用，则需要采取一些其他步骤。</target>
        </trans-unit>
        <trans-unit id="af577fe124da7ba0dc1016ca3a04b7143e372d17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AutoLoader&lt;/code&gt; is maintained by the perl5-porters. Please direct any questions to the canonical mailing list. Anything that is applicable to the CPAN release can be sent to its maintainer, though.</source>
          <target state="translated">&lt;code&gt;AutoLoader&lt;/code&gt; 由perl5- porter维护。如有任何疑问，请直接向规范邮件列表发送。但是，适用于CPAN版本的所有内容都可以发送到其维护者。</target>
        </trans-unit>
        <trans-unit id="9437eb281e77849a5563ad2a499e675a1a043b61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AutoSplit&lt;/code&gt; is maintained by the perl5-porters. Please direct any questions to the canonical mailing list. Anything that is applicable to the CPAN release can be sent to its maintainer, though.</source>
          <target state="translated">&lt;code&gt;AutoSplit&lt;/code&gt; 由perl5- porter维护。如有任何疑问，请直接向规范邮件列表发送。但是，适用于CPAN版本的所有内容都可以发送到其维护者。</target>
        </trans-unit>
        <trans-unit id="65bd4577edcd6e179bc6b12ccaafd7f126175140" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AutoSplit&lt;/code&gt; will also emit general diagnostics for inability to create directories or files.</source>
          <target state="translated">&lt;code&gt;AutoSplit&lt;/code&gt; 也将发出无法创建目录或文件的常规诊断信息。</target>
        </trans-unit>
        <trans-unit id="20ce0b283187c41b4404a6e80e30e87f1a557756" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AutoSplit&lt;/code&gt; will inform the user if it is necessary to create the top-level directory specified in the invocation. It is preferred that the script or installation process that invokes &lt;code&gt;AutoSplit&lt;/code&gt; have created the full directory path ahead of time. This warning may indicate that the module is being split into an incorrect path.</source>
          <target state="translated">&lt;code&gt;AutoSplit&lt;/code&gt; 如果需要创建调用中指定的顶级目录，AutoSplit将通知用户。最好是调用 &lt;code&gt;AutoSplit&lt;/code&gt; 的脚本或安装过程提前创建了完整的目录路径。此警告可能表明模块正在拆分为错误的路径。</target>
        </trans-unit>
        <trans-unit id="f791bf59fe665ab5ea1fc7f801f5eda72d0e8745" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AutoSplit&lt;/code&gt; will warn the user of all subroutines whose name causes potential file naming conflicts on machines with drastically limited (8 characters or less) file name length. Since the subroutine name is used as the file name, these warnings can aid in portability to such systems.</source>
          <target state="translated">&lt;code&gt;AutoSplit&lt;/code&gt; 将警告用户所有子例程，这些子例程的名称会导致文件名长度受到极大限制（不超过8个字符）的计算机上潜在的文件命名冲突。由于将子例程名称用作文件名，因此这些警告可以帮助移植到此类系统。</target>
        </trans-unit>
        <trans-unit id="faa7c90636b4810f5846981b5d1192d23e75d7a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;B38400&lt;/code&gt;&lt;code&gt;B75&lt;/code&gt;&lt;code&gt;B200&lt;/code&gt;&lt;code&gt;B134&lt;/code&gt;&lt;code&gt;B300&lt;/code&gt;&lt;code&gt;B1800&lt;/code&gt;&lt;code&gt;B150&lt;/code&gt;&lt;code&gt;B0&lt;/code&gt;&lt;code&gt;B19200&lt;/code&gt;&lt;code&gt;B1200&lt;/code&gt;&lt;code&gt;B9600&lt;/code&gt;&lt;code&gt;B600&lt;/code&gt;&lt;code&gt;B4800&lt;/code&gt;&lt;code&gt;B50&lt;/code&gt;&lt;code&gt;B2400&lt;/code&gt;&lt;code&gt;B110&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;B38400&lt;/code&gt;&lt;code&gt;B75&lt;/code&gt;&lt;code&gt;B200&lt;/code&gt;&lt;code&gt;B134&lt;/code&gt;&lt;code&gt;B300&lt;/code&gt;&lt;code&gt;B1800&lt;/code&gt;&lt;code&gt;B150&lt;/code&gt;&lt;code&gt;B0&lt;/code&gt;&lt;code&gt;B19200&lt;/code&gt;&lt;code&gt;B1200&lt;/code&gt;&lt;code&gt;B9600&lt;/code&gt;&lt;code&gt;B600&lt;/code&gt;&lt;code&gt;B4800&lt;/code&gt;&lt;code&gt;B50&lt;/code&gt;&lt;code&gt;B2400&lt;/code&gt;&lt;code&gt;B110&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3a64c66bf4fc7c70ea27f75add0d37d3a321bd35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;B::Deparse,-p&lt;/code&gt; will print</source>
          <target state="translated">&lt;code&gt;B::Deparse,-p&lt;/code&gt; 将打印</target>
        </trans-unit>
        <trans-unit id="12d99aa8d0dc3a4437e4a861de4e6a98166d8c06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;B::Generate&lt;/code&gt; directly supports the creation of custom ops by name.</source>
          <target state="translated">&lt;code&gt;B::Generate&lt;/code&gt; 直接支持按名称创建自定义操作。</target>
        </trans-unit>
        <trans-unit id="69143927686bc3bd43e1bf2779ecba7d882ac562" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;B::OP&lt;/code&gt; , &lt;code&gt;B::UNOP&lt;/code&gt; , &lt;code&gt;B::UNOP_AUX&lt;/code&gt; , &lt;code&gt;B::BINOP&lt;/code&gt; , &lt;code&gt;B::LOGOP&lt;/code&gt; , &lt;code&gt;B::LISTOP&lt;/code&gt; , &lt;code&gt;B::PMOP&lt;/code&gt; , &lt;code&gt;B::SVOP&lt;/code&gt; , &lt;code&gt;B::PADOP&lt;/code&gt; , &lt;code&gt;B::PVOP&lt;/code&gt; , &lt;code&gt;B::LOOP&lt;/code&gt; , &lt;code&gt;B::COP&lt;/code&gt; , &lt;code&gt;B::METHOP&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;B::OP&lt;/code&gt; ， &lt;code&gt;B::UNOP&lt;/code&gt; ， &lt;code&gt;B::UNOP_AUX&lt;/code&gt; ， &lt;code&gt;B::BINOP&lt;/code&gt; ， &lt;code&gt;B::LOGOP&lt;/code&gt; ， &lt;code&gt;B::LISTOP&lt;/code&gt; ， &lt;code&gt;B::PMOP&lt;/code&gt; ， &lt;code&gt;B::SVOP&lt;/code&gt; ， &lt;code&gt;B::PADOP&lt;/code&gt; ， &lt;code&gt;B::PVOP&lt;/code&gt; ， &lt;code&gt;B::LOOP&lt;/code&gt; ， &lt;code&gt;B::COP&lt;/code&gt; ， &lt;code&gt;B::METHOP&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0b9f3bb0f0c441b31c591f3a04a947cf1db2ac5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BEGIN&lt;/code&gt; and &lt;code&gt;END&lt;/code&gt; blocks may be used to capture control before or after the implicit loop, just as in</source>
          <target state="translated">&lt;code&gt;BEGIN&lt;/code&gt; 和 &lt;code&gt;END&lt;/code&gt; 块可用于捕获隐式循环之前或之后的控制，就像在</target>
        </trans-unit>
        <trans-unit id="6e70ee8bd7cbef3858d58171f0cc99eaf7a63c68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BEGIN&lt;/code&gt; and &lt;code&gt;END&lt;/code&gt; blocks may be used to capture control before or after the implicit program loop, just as in</source>
          <target state="translated">&lt;code&gt;BEGIN&lt;/code&gt; 和 &lt;code&gt;END&lt;/code&gt; 块可用于在隐式程序循环之前或之后捕获控制，就像在</target>
        </trans-unit>
        <trans-unit id="f8b758038b5498a90bd251e1abc1bf4be0e55d71" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BEGIN&lt;/code&gt; and &lt;code&gt;UNITCHECK&lt;/code&gt; blocks are not directly related to the phase of the interpreter. They can be created and executed during any phase.</source>
          <target state="translated">&lt;code&gt;BEGIN&lt;/code&gt; 和 &lt;code&gt;UNITCHECK&lt;/code&gt; 块与解释器的阶段没有直接关系。它们可以在任何阶段创建和执行。</target>
        </trans-unit>
        <trans-unit id="499245d6aeb6a133d5fe34cee30f454c408a297d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BINMODE&lt;/code&gt; , &lt;code&gt;CLEAR&lt;/code&gt; , &lt;code&gt;CLOSE&lt;/code&gt; , &lt;code&gt;DELETE&lt;/code&gt; , &lt;code&gt;DESTROY&lt;/code&gt; , &lt;code&gt;EOF&lt;/code&gt; , &lt;code&gt;EXISTS&lt;/code&gt; , &lt;code&gt;EXTEND&lt;/code&gt; , &lt;code&gt;FETCH&lt;/code&gt; , &lt;code&gt;FETCHSIZE&lt;/code&gt; , &lt;code&gt;FILENO&lt;/code&gt; , &lt;code&gt;FIRSTKEY&lt;/code&gt; , &lt;code&gt;GETC&lt;/code&gt; , &lt;code&gt;NEXTKEY&lt;/code&gt; , &lt;code&gt;OPEN&lt;/code&gt; , &lt;code&gt;POP&lt;/code&gt; , &lt;code&gt;PRINT&lt;/code&gt; , &lt;code&gt;PRINTF&lt;/code&gt; , &lt;code&gt;PUSH&lt;/code&gt; , &lt;code&gt;READ&lt;/code&gt; , &lt;code&gt;READLINE&lt;/code&gt; , &lt;code&gt;SCALAR&lt;/code&gt; , &lt;code&gt;SEEK&lt;/code&gt; , &lt;code&gt;SHIFT&lt;/code&gt; , &lt;code&gt;SPLICE&lt;/code&gt; , &lt;code&gt;STORE&lt;/code&gt; , &lt;code&gt;STORESIZE&lt;/code&gt; , &lt;code&gt;TELL&lt;/code&gt; , &lt;code&gt;TIEARRAY&lt;/code&gt; , &lt;code&gt;TIEHANDLE&lt;/code&gt; , &lt;code&gt;TIEHASH&lt;/code&gt; , &lt;code&gt;TIESCALAR&lt;/code&gt; , &lt;code&gt;UNSHIFT&lt;/code&gt; , &lt;code&gt;UNTIE&lt;/code&gt; , &lt;code&gt;WRITE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;BINMODE&lt;/code&gt; ， &lt;code&gt;CLEAR&lt;/code&gt; ， &lt;code&gt;CLOSE&lt;/code&gt; ， &lt;code&gt;DELETE&lt;/code&gt; ， &lt;code&gt;DESTROY&lt;/code&gt; ， &lt;code&gt;EOF&lt;/code&gt; ， &lt;code&gt;EXISTS&lt;/code&gt; ， &lt;code&gt;EXTEND&lt;/code&gt; ， &lt;code&gt;FETCH&lt;/code&gt; ， &lt;code&gt;FETCHSIZE&lt;/code&gt; ， &lt;code&gt;FILENO&lt;/code&gt; ， &lt;code&gt;FIRSTKEY&lt;/code&gt; ， &lt;code&gt;GETC&lt;/code&gt; ， &lt;code&gt;NEXTKEY&lt;/code&gt; ， &lt;code&gt;OPEN&lt;/code&gt; ， &lt;code&gt;POP&lt;/code&gt; ， &lt;code&gt;PRINT&lt;/code&gt; ， &lt;code&gt;PRINTF&lt;/code&gt; ， &lt;code&gt;PUSH&lt;/code&gt; ， &lt;code&gt;READ&lt;/code&gt; ，READ， &lt;code&gt;READLINE&lt;/code&gt; ， &lt;code&gt;SCALAR&lt;/code&gt; ， &lt;code&gt;SEEK&lt;/code&gt; ， &lt;code&gt;SHIFT&lt;/code&gt; ， &lt;code&gt;SPLICE&lt;/code&gt; ， &lt;code&gt;STORE&lt;/code&gt; ， &lt;code&gt;STORESIZE&lt;/code&gt; ， &lt;code&gt;TELL&lt;/code&gt; ， &lt;code&gt;TIEARRAY&lt;/code&gt; ， &lt;code&gt;TIEHANDLE&lt;/code&gt; ， &lt;code&gt;TIEHASH&lt;/code&gt; ， &lt;code&gt;TIESCALAR&lt;/code&gt; ， &lt;code&gt;UNSHIFT&lt;/code&gt; ， &lt;code&gt;UNTIE&lt;/code&gt; ，拆线， &lt;code&gt;WRITE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="30054059d16923fe6138b013ad38390b2d287c04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BINMODE&lt;/code&gt; , &lt;code&gt;CLEARERR&lt;/code&gt; , &lt;code&gt;CLOSE&lt;/code&gt; , &lt;code&gt;EOF&lt;/code&gt; , &lt;code&gt;ERROR&lt;/code&gt; , &lt;code&gt;FDOPEN&lt;/code&gt; , &lt;code&gt;FILENO&lt;/code&gt; , &lt;code&gt;FILL&lt;/code&gt; , &lt;code&gt;FLUSH&lt;/code&gt; , &lt;code&gt;OPEN&lt;/code&gt; , &lt;code&gt;POPPED&lt;/code&gt; , &lt;code&gt;PUSHED&lt;/code&gt; , &lt;code&gt;READ&lt;/code&gt; , &lt;code&gt;SEEK&lt;/code&gt; , &lt;code&gt;SETLINEBUF&lt;/code&gt; , &lt;code&gt;SYSOPEN&lt;/code&gt; , &lt;code&gt;TELL&lt;/code&gt; , &lt;code&gt;UNREAD&lt;/code&gt; , &lt;code&gt;UTF8&lt;/code&gt; , &lt;code&gt;WRITE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;BINMODE&lt;/code&gt; ， &lt;code&gt;CLEARERR&lt;/code&gt; ， &lt;code&gt;CLOSE&lt;/code&gt; ， &lt;code&gt;EOF&lt;/code&gt; ， &lt;code&gt;ERROR&lt;/code&gt; ， &lt;code&gt;FDOPEN&lt;/code&gt; ， &lt;code&gt;FILENO&lt;/code&gt; ， &lt;code&gt;FILL&lt;/code&gt; ， &lt;code&gt;FLUSH&lt;/code&gt; ， &lt;code&gt;OPEN&lt;/code&gt; ， &lt;code&gt;POPPED&lt;/code&gt; ， &lt;code&gt;PUSHED&lt;/code&gt; ， &lt;code&gt;READ&lt;/code&gt; ， &lt;code&gt;SEEK&lt;/code&gt; ， &lt;code&gt;SETLINEBUF&lt;/code&gt; ， &lt;code&gt;SYSOPEN&lt;/code&gt; ， &lt;code&gt;TELL&lt;/code&gt; ， &lt;code&gt;UNREAD&lt;/code&gt; ， &lt;code&gt;UTF8&lt;/code&gt; ， &lt;code&gt;WRITE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bea30947e2c1475164f5299445eaca2bdacb962b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BRKINT&lt;/code&gt;&lt;code&gt;ICRNL&lt;/code&gt;&lt;code&gt;IGNBRK&lt;/code&gt;&lt;code&gt;IGNCR&lt;/code&gt;&lt;code&gt;IGNPAR&lt;/code&gt;&lt;code&gt;INLCR&lt;/code&gt;&lt;code&gt;INPCK&lt;/code&gt;&lt;code&gt;ISTRIP&lt;/code&gt;&lt;code&gt;IXOFF&lt;/code&gt;&lt;code&gt;IXON&lt;/code&gt;&lt;code&gt;PARMRK&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;BRKINT&lt;/code&gt;&lt;code&gt;ICRNL&lt;/code&gt;&lt;code&gt;IGNBRK&lt;/code&gt;&lt;code&gt;IGNCR&lt;/code&gt;&lt;code&gt;IGNPAR&lt;/code&gt;&lt;code&gt;INLCR&lt;/code&gt;&lt;code&gt;INPCK&lt;/code&gt;&lt;code&gt;ISTRIP&lt;/code&gt;&lt;code&gt;IXOFF&lt;/code&gt;&lt;code&gt;IXON&lt;/code&gt;&lt;code&gt;PARMRK&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1a86a4f316865f4d27f2b761993dbe11e226b269" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BUFSIZ&lt;/code&gt;&lt;code&gt;EOF&lt;/code&gt;&lt;code&gt;FILENAME_MAX&lt;/code&gt;&lt;code&gt;L_ctermid&lt;/code&gt;&lt;code&gt;L_cuserid&lt;/code&gt;&lt;code&gt;L_tmpname&lt;/code&gt;&lt;code&gt;TMP_MAX&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;BUFSIZ&lt;/code&gt;&lt;code&gt;EOF&lt;/code&gt;&lt;code&gt;FILENAME_MAX&lt;/code&gt;&lt;code&gt;L_ctermid&lt;/code&gt;&lt;code&gt;L_cuserid&lt;/code&gt;&lt;code&gt;L_tmpname&lt;/code&gt;&lt;code&gt;TMP_MAX&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9b5d3888afaab4aeac99edeb07406b18608b6c50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CHECK&lt;/code&gt; code blocks are run just after the &lt;b&gt;initial&lt;/b&gt; Perl compile phase ends and before the run time begins, in LIFO order. &lt;code&gt;CHECK&lt;/code&gt; code blocks are used in the Perl compiler suite to save the compiled state of the program.</source>
          <target state="translated">&lt;code&gt;CHECK&lt;/code&gt; 代码块仅在&lt;b&gt;初始&lt;/b&gt; Perl编译阶段结束之后且在运行时间开始之前按照LIFO顺序运行。在Perl编译器套件中使用 &lt;code&gt;CHECK&lt;/code&gt; 代码块来保存程序的编译状态。</target>
        </trans-unit>
        <trans-unit id="45e02246fa126d7ef5ff5b0718b1e93bd87149d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CLK_TCK&lt;/code&gt;&lt;code&gt;CLOCKS_PER_SEC&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;CLK_TCK&lt;/code&gt;&lt;code&gt;CLOCKS_PER_SEC&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a61a7563f8241ebae52535c87c69347ca5c0ae09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CLOCAL&lt;/code&gt;&lt;code&gt;CREAD&lt;/code&gt;&lt;code&gt;CSIZE&lt;/code&gt;&lt;code&gt;CS5&lt;/code&gt;&lt;code&gt;CS6&lt;/code&gt;&lt;code&gt;CS7&lt;/code&gt;&lt;code&gt;CS8&lt;/code&gt;&lt;code&gt;CSTOPB&lt;/code&gt;&lt;code&gt;HUPCL&lt;/code&gt;&lt;code&gt;PARENB&lt;/code&gt;&lt;code&gt;PARODD&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;CLOCAL&lt;/code&gt;&lt;code&gt;CREAD&lt;/code&gt;&lt;code&gt;CSIZE&lt;/code&gt;&lt;code&gt;CS5&lt;/code&gt;&lt;code&gt;CS6&lt;/code&gt;&lt;code&gt;CS7&lt;/code&gt;&lt;code&gt;CS8&lt;/code&gt;&lt;code&gt;CSTOPB&lt;/code&gt;&lt;code&gt;HUPCL&lt;/code&gt;&lt;code&gt;PARENB&lt;/code&gt;&lt;code&gt;PARODD&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bb14449092af20fb2f25b23f9f6ea74cda3c921f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CLONE&lt;/code&gt; , &lt;code&gt;CLONE_SKIP&lt;/code&gt; ,</source>
          <target state="translated">&lt;code&gt;CLONE&lt;/code&gt; ， &lt;code&gt;CLONE_SKIP&lt;/code&gt; ，</target>
        </trans-unit>
        <trans-unit id="03c199db2c255ea797ffcbc3258a9caf85ffeeae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CPAN.pm&lt;/code&gt; comes with a collection of example YAML files. Note that these are really just examples and should not be used without care because they cannot fit everybody's purpose. After all, the authors of the packages that ask questions had a need to ask, so you should watch their questions and adjust the examples to your environment and your needs. You have been warned:-)</source>
          <target state="translated">&lt;code&gt;CPAN.pm&lt;/code&gt; 带有示例YAML文件的集合。请注意，这些实际上仅是示例，不应谨慎使用，因为它们无法满足每个人的目的。毕竟，提出问题的软件包的作者有必要提出问题，因此您应该注意他们的问题，并根据您的环境和需求调整示例。你被警告了：-）</target>
        </trans-unit>
        <trans-unit id="e958779cdd01a7b3327f2eef63836bcd8b19e2ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CYGWIN&lt;/code&gt; setting, permissions use the standard WinNT security descriptors and access control lists. Without one of these options, these tests will fail (listing not updated yet):</source>
          <target state="translated">&lt;code&gt;CYGWIN&lt;/code&gt; 设置，权限使用标准的WinNT安全描述符和访问控制列表。没有这些选项之一，这些测试将失败（列表尚未更新）：</target>
        </trans-unit>
        <trans-unit id="715067c3d15ba3a25c4c578ac95ae803c5d463ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CYGWIN&lt;/code&gt; setting, the additional mode bits are stored as extended file attributes. On WinNT with the default</source>
          <target state="translated">&lt;code&gt;CYGWIN&lt;/code&gt; 设置时，附加模式位存储为扩展文件属性。在具有默认设置的WinNT上</target>
        </trans-unit>
        <trans-unit id="b40e8c070cd96353a84f0cdb4689a540da128600" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Carp&lt;/code&gt; takes care not to clobber the status variables &lt;code&gt;$!&lt;/code&gt; and &lt;code&gt;$^E&lt;/code&gt; in the course of assembling its error messages. This means that a &lt;code&gt;$SIG{__DIE__}&lt;/code&gt; or &lt;code&gt;$SIG{__WARN__}&lt;/code&gt; handler can capture the error information held in those variables, if it is required to augment the error message, and if the code calling &lt;code&gt;Carp&lt;/code&gt; left useful values there. Of course, &lt;code&gt;Carp&lt;/code&gt; can't guarantee the latter.</source>
          <target state="translated">&lt;code&gt;Carp&lt;/code&gt; 注意不要破坏状态变量 &lt;code&gt;$!&lt;/code&gt; 和 &lt;code&gt;$^E&lt;/code&gt; 在组装其错误消息的过程中。这意味着，如果需要增加错误消息，并且调用 &lt;code&gt;Carp&lt;/code&gt; 的代码在那里保留了有用的值，则 &lt;code&gt;$SIG{__DIE__}&lt;/code&gt; 或 &lt;code&gt;$SIG{__WARN__}&lt;/code&gt; 处理程序可以捕获这些变量中保存的错误信息。当然， &lt;code&gt;Carp&lt;/code&gt; 不能保证后者。</target>
        </trans-unit>
        <trans-unit id="31407ed8968a4b0da65b3add4e603dd893f9f016" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Class::Accessor&lt;/code&gt; does a lot less than &lt;code&gt;Moose&lt;/code&gt; , and is a nice alternative if you find &lt;code&gt;Moose&lt;/code&gt; overwhelming. It's been around a long time and is well battle-tested. It also has a minimal &lt;code&gt;Moose&lt;/code&gt; compatibility mode which makes moving from &lt;code&gt;Class::Accessor&lt;/code&gt; to &lt;code&gt;Moose&lt;/code&gt; easy.</source>
          <target state="translated">&lt;code&gt;Class::Accessor&lt;/code&gt; 比 &lt;code&gt;Moose&lt;/code&gt; 做得少得多，如果您发现 &lt;code&gt;Moose&lt;/code&gt; 势不可挡，它是一个不错的选择。它已经存在了很长一段时间，并且经过了反复的测试。它还具有最小的 &lt;code&gt;Moose&lt;/code&gt; 兼容模式，这使得从 &lt;code&gt;Class::Accessor&lt;/code&gt; 到 &lt;code&gt;Moose&lt;/code&gt; 的迁移变得容易。</target>
        </trans-unit>
        <trans-unit id="b2cba69d28533f7c1088e666571bd50781732c27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Class::Struct&lt;/code&gt; can create your class at compile time. The main reason for doing this is obvious, so your class acts like every other class in Perl. Creating your class at compile time will make the order of events similar to using any other class ( or Perl module ).</source>
          <target state="translated">&lt;code&gt;Class::Struct&lt;/code&gt; 可以在编译时创建您的类。这样做的主要原因很明显，因此您的类的行为类似于Perl中的其他所有类。在编译时创建类将使事件的顺序类似于使用任何其他类（或Perl模块）。</target>
        </trans-unit>
        <trans-unit id="3b9402d618b4323955fa7151700c933e1781cb7e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Class::Struct&lt;/code&gt; exports a single function, &lt;code&gt;struct&lt;/code&gt; . Given a list of element names and types, and optionally a class name, &lt;code&gt;struct&lt;/code&gt; creates a Perl 5 class that implements a &quot;struct-like&quot; data structure.</source>
          <target state="translated">&lt;code&gt;Class::Struct&lt;/code&gt; 导出单个函数 &lt;code&gt;struct&lt;/code&gt; 。给定元素名称和类型的列表，以及可选的类名称， &lt;code&gt;struct&lt;/code&gt; 创建一个Perl 5类，该类实现&amp;ldquo;类结构&amp;rdquo;数据结构。</target>
        </trans-unit>
        <trans-unit id="89fc00057d2a2d9fb02cae29f782ec7d03780bcf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Class::Tiny&lt;/code&gt; is the absolute minimal option. It has no dependencies, and almost no syntax to learn. It's a good option for a super minimal environment and for throwing something together quickly without having to worry about details.</source>
          <target state="translated">&lt;code&gt;Class::Tiny&lt;/code&gt; 是绝对的最小选项。它没有依赖关系，几乎没有语法可以学习。对于超小型环境以及无需担心细节即可快速将某些东西放在一起的情况，这是一个不错的选择。</target>
        </trans-unit>
        <trans-unit id="55d6cd736729017df34ed5101a1c462435573300" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Compress::Raw::Bzip2&lt;/code&gt; provides an interface to the in-memory compression/uncompression functions from the bzip2 compression library.</source>
          <target state="translated">&lt;code&gt;Compress::Raw::Bzip2&lt;/code&gt; 提供了bzip2压缩库中内存压缩/解压缩功能的接口。</target>
        </trans-unit>
        <trans-unit id="a8725a0495b722c17e9e3c10477740f81c48584e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CvGV($cv)&lt;/code&gt; return one of the globs associated to a subroutine reference $cv.</source>
          <target state="translated">&lt;code&gt;CvGV($cv)&lt;/code&gt; 返回与子例程引用$ cv相关的全局之一。</target>
        </trans-unit>
        <trans-unit id="57151d3af80dd94fc75fda2ca627813262903784" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DATA&lt;/code&gt; may be a reference to a list or a list. If specified the contents of &lt;code&gt;DATA&lt;/code&gt; and a termination string &lt;code&gt;&quot;.\r\n&quot;&lt;/code&gt; is sent to the server. And the result will be true if the data was accepted.</source>
          <target state="translated">&lt;code&gt;DATA&lt;/code&gt; 可以是对列表或列表的引用。如果指定了 &lt;code&gt;DATA&lt;/code&gt; 的内容，则终止字符串 &lt;code&gt;&quot;.\r\n&quot;&lt;/code&gt; 发送到服务器。如果数据被接受，结果将为true。</target>
        </trans-unit>
        <trans-unit id="0c191c78cba51d1e084cbee694f95f10d6ca9950" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DB::DB&lt;/code&gt; , &lt;code&gt;DB::sub&lt;/code&gt; , &lt;code&gt;DB::lsub&lt;/code&gt; , &lt;code&gt;DB::goto&lt;/code&gt; , &lt;code&gt;DB::postponed&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;DB::DB&lt;/code&gt; ， &lt;code&gt;DB::sub&lt;/code&gt; ， &lt;code&gt;DB::lsub&lt;/code&gt; ， &lt;code&gt;DB::goto&lt;/code&gt; ， &lt;code&gt;DB::postponed&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="075e4f0cb45fda33f92fa95b6e40a79ce5b91179" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DB::dump_trace(skip[,count])&lt;/code&gt; skips the specified number of frames and returns a list containing information about the calling frames (all of them, if &lt;code&gt;count&lt;/code&gt; is missing). Each entry is reference to a hash with keys &lt;code&gt;context&lt;/code&gt; (either &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;$&lt;/code&gt; , or &lt;code&gt;@&lt;/code&gt; ), &lt;code&gt;&lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt;&lt;/code&gt; (subroutine name, or info about &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;), &lt;code&gt;args&lt;/code&gt; (&lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; or a reference to an array), &lt;code&gt;file&lt;/code&gt; , and &lt;code&gt;line&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;DB::dump_trace(skip[,count])&lt;/code&gt; 跳过指定的帧数，并返回一个列表，其中包含有关调用帧的信息（如果缺少 &lt;code&gt;count&lt;/code&gt; ，则全部包含这些信息）。每个条目都是对具有键 &lt;code&gt;context&lt;/code&gt; （ &lt;code&gt;.&lt;/code&gt; ， &lt;code&gt;$&lt;/code&gt; 或 &lt;code&gt;@&lt;/code&gt; ）， &lt;code&gt;&lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt;&lt;/code&gt; （子例程名称或有关 &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; 的信息）， &lt;code&gt;args&lt;/code&gt; （ &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 或对数组的引用）， &lt;code&gt;file&lt;/code&gt; 和 &lt;code&gt;line&lt;/code&gt; 的哈希的引用。</target>
        </trans-unit>
        <trans-unit id="d1b69e03ccf8a3fb70092f79bbc9b211347aa723" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DB::print_trace(FH, skip[, count[, short]])&lt;/code&gt; prints formatted info about caller frames. The last two functions may be convenient as arguments to &lt;code&gt;&amp;lt;&lt;/code&gt; , &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt; commands.</source>
          <target state="translated">&lt;code&gt;DB::print_trace(FH, skip[, count[, short]])&lt;/code&gt; 打印有关呼叫者帧的格式化信息。最后两个函数可以方便地用作 &lt;code&gt;&amp;lt;&lt;/code&gt; ， &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt; 命令的参数。</target>
        </trans-unit>
        <trans-unit id="bc91551827219e284d49468303a5e0aa60fb1666" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DBL_DIG&lt;/code&gt;&lt;code&gt;DBL_EPSILON&lt;/code&gt;&lt;code&gt;DBL_MANT_DIG&lt;/code&gt;&lt;code&gt;DBL_MAX&lt;/code&gt;&lt;code&gt;DBL_MAX_10_EXP&lt;/code&gt;&lt;code&gt;DBL_MAX_EXP&lt;/code&gt;&lt;code&gt;DBL_MIN&lt;/code&gt;&lt;code&gt;DBL_MIN_10_EXP&lt;/code&gt;&lt;code&gt;DBL_MIN_EXP&lt;/code&gt;&lt;code&gt;FLT_DIG&lt;/code&gt;&lt;code&gt;FLT_EPSILON&lt;/code&gt;&lt;code&gt;FLT_MANT_DIG&lt;/code&gt;&lt;code&gt;FLT_MAX&lt;/code&gt;&lt;code&gt;FLT_MAX_10_EXP&lt;/code&gt;&lt;code&gt;FLT_MAX_EXP&lt;/code&gt;&lt;code&gt;FLT_MIN&lt;/code&gt;&lt;code&gt;FLT_MIN_10_EXP&lt;/code&gt;&lt;code&gt;FLT_MIN_EXP&lt;/code&gt;&lt;code&gt;FLT_RADIX&lt;/code&gt;&lt;code&gt;FLT_ROUNDS&lt;/code&gt;&lt;code&gt;LDBL_DIG&lt;/code&gt;&lt;code&gt;LDBL_EPSILON&lt;/code&gt;&lt;code&gt;LDBL_MANT_DIG&lt;/code&gt;&lt;code&gt;LDBL_MAX&lt;/code&gt;&lt;code&gt;LDBL_MAX_10_EXP&lt;/code&gt;&lt;code&gt;LDBL_MAX_EXP&lt;/code&gt;&lt;code&gt;LDBL_MIN&lt;/code&gt;&lt;code&gt;LDBL_MIN_10_EXP&lt;/code&gt;&lt;code&gt;LDBL_MIN_EXP&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;DBL_DIG&lt;/code&gt;&lt;code&gt;DBL_EPSILON&lt;/code&gt;&lt;code&gt;DBL_MANT_DIG&lt;/code&gt;&lt;code&gt;DBL_MAX&lt;/code&gt;&lt;code&gt;DBL_MAX_10_EXP&lt;/code&gt;&lt;code&gt;DBL_MAX_EXP&lt;/code&gt;&lt;code&gt;DBL_MIN&lt;/code&gt;&lt;code&gt;DBL_MIN_10_EXP&lt;/code&gt;&lt;code&gt;DBL_MIN_EXP&lt;/code&gt;&lt;code&gt;FLT_DIG&lt;/code&gt;&lt;code&gt;FLT_EPSILON&lt;/code&gt;&lt;code&gt;FLT_MANT_DIG&lt;/code&gt;&lt;code&gt;FLT_MAX&lt;/code&gt;&lt;code&gt;FLT_MAX_10_EXP&lt;/code&gt;&lt;code&gt;FLT_MAX_EXP&lt;/code&gt;&lt;code&gt;FLT_MIN&lt;/code&gt;&lt;code&gt;FLT_MIN_10_EXP&lt;/code&gt;&lt;code&gt;FLT_MIN_EXP&lt;/code&gt;&lt;code&gt;FLT_RADIX&lt;/code&gt;&lt;code&gt;FLT_ROUNDS&lt;/code&gt;&lt;code&gt;LDBL_DIG&lt;/code&gt;&lt;code&gt;LDBL_EPSILON&lt;/code&gt;&lt;code&gt;LDBL_MANT_DIG&lt;/code&gt;&lt;code&gt;LDBL_MAX&lt;/code&gt;&lt;code&gt;LDBL_MAX_10_EXP&lt;/code&gt;&lt;code&gt;LDBL_MAX_EXP&lt;/code&gt;&lt;code&gt;LDBL_MIN&lt;/code&gt;&lt;code&gt;LDBL_MIN_10_EXP&lt;/code&gt;&lt;code&gt;LDBL_MIN_EXP&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1b3719fb91a61fd372e24aedc14bb9ddcd95db3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DIRFEXT&lt;/code&gt; - the extension used for the directory file, &lt;code&gt;.dir&lt;/code&gt; everywhere but VMS, where it is &lt;code&gt;.sdbm_dir&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;DIRFEXT&lt;/code&gt; -用于目录文件的扩展名， &lt;code&gt;.dir&lt;/code&gt; 除了VMS以外都是 &lt;code&gt;.sdbm_dir&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3555867fff7bf3b3dfb31146dcde0447b537ad4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DOES&lt;/code&gt; and &lt;code&gt;isa&lt;/code&gt; are similar, in that if either is true, you know that the object or class on which you call the method can perform specific behavior. However, &lt;code&gt;DOES&lt;/code&gt; is different from &lt;code&gt;isa&lt;/code&gt; in that it does not care</source>
          <target state="translated">&lt;code&gt;DOES&lt;/code&gt; 和 &lt;code&gt;isa&lt;/code&gt; 是相似的，如果两者都为真，则说明调用该方法的对象或类可以执行特定的行为。但是， &lt;code&gt;DOES&lt;/code&gt; 与 &lt;code&gt;isa&lt;/code&gt; 的不同之处在于它不在乎</target>
        </trans-unit>
        <trans-unit id="327aba9e69c6dc314afbb9d3770b24a3db484053" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DOES&lt;/code&gt; checks if the object or class performs the role &lt;code&gt;ROLE&lt;/code&gt; . A role is a named group of specific behavior (often methods of particular names and signatures), similar to a class, but not necessarily a complete class by itself. For example, logging or serialization may be roles.</source>
          <target state="translated">&lt;code&gt;DOES&lt;/code&gt; 检查对象或类是否执行 &lt;code&gt;ROLE&lt;/code&gt; 角色。角色是特定行为的命名组（通常是特定名称和签名的方法），类似于类，但本身不一定是完整的类。例如，日志记录或序列化可能是角色。</target>
        </trans-unit>
        <trans-unit id="09ae5f8ffa73c825371cccb10b034527e0663899" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Data::Dumper&lt;/code&gt; cheats with CODE references. If a code reference is encountered in the structure being processed (and if you haven't set the &lt;code&gt;Deparse&lt;/code&gt; flag), an anonymous subroutine that contains the string '&quot;DUMMY&quot;' will be inserted in its place, and a warning will be printed if &lt;code&gt;Purity&lt;/code&gt; is set. You can &lt;code&gt;&lt;a href=&quot;../functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; the result, but bear in mind that the anonymous sub that gets created is just a placeholder. Someday, perl will have a switch to cache-on-demand the string representation of a compiled piece of code, I hope. If you have prior knowledge of all the code refs that your data structures are likely to have, you can use the &lt;code&gt;Seen&lt;/code&gt; method to pre-seed the internal reference table and make the dumped output point to them, instead. See &lt;a href=&quot;#EXAMPLES&quot;&gt;EXAMPLES&lt;/a&gt; above.</source>
          <target state="translated">&lt;code&gt;Data::Dumper&lt;/code&gt; 作弊与CODE参考。如果在正在处理的结构中遇到代码引用（并且尚未设置 &lt;code&gt;Deparse&lt;/code&gt; 标志），则将在其位置插入一个包含字符串&amp;ldquo; DUMMY&amp;rdquo;的匿名子例程，如果出现，则会打印警告。设定 &lt;code&gt;Purity&lt;/code&gt; 。您可以 &lt;code&gt;&lt;a href=&quot;../functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; 结果，但请记住，创建的匿名子项只是一个占位符。希望有一天，perl可以切换到按需缓存已编译代码的字符串表示形式。如果您对数据结构可能具有的所有代码引用有先验知识，则可以使用 &lt;code&gt;Seen&lt;/code&gt; 方法，可以预先设置内部参考表并转储输出指向它们。请参阅上面的&lt;a href=&quot;#EXAMPLES&quot;&gt;示例&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="112c6262b9b29bb95ce2b06c9288ae4abb8f9636" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Devel::DProf&lt;/code&gt; produces a special file, called</source>
          <target state="translated">&lt;code&gt;Devel::DProf&lt;/code&gt; 生成一个特殊文件，名为</target>
        </trans-unit>
        <trans-unit id="a2c422f548b824872d70a71251455f906761cf0e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Devel::FastProf&lt;/code&gt; is another Perl line profiler. This was written with a view to getting a faster line profiler, than is possible with for example &lt;code&gt;Devel::SmallProf&lt;/code&gt; , because it's written in &lt;code&gt;C&lt;/code&gt; . To use &lt;code&gt;Devel::FastProf&lt;/code&gt; , supply the &lt;code&gt;-d&lt;/code&gt; argument to Perl:</source>
          <target state="translated">&lt;code&gt;Devel::FastProf&lt;/code&gt; 是另一个Perl行分析器。编写此文件是为了获得比 &lt;code&gt;Devel::SmallProf&lt;/code&gt; 更快的线路分析器，因为它是用 &lt;code&gt;C&lt;/code&gt; 编写的。要使用 &lt;code&gt;Devel::FastProf&lt;/code&gt; ，请向Perl 提供 &lt;code&gt;-d&lt;/code&gt; 参数：</target>
        </trans-unit>
        <trans-unit id="40154257a8b82c38bcca59cdc00939ace9931afc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Devel::FastProf&lt;/code&gt; writes statistics to the file</source>
          <target state="translated">&lt;code&gt;Devel::FastProf&lt;/code&gt; 将统计信息写入文件</target>
        </trans-unit>
        <trans-unit id="29ccdf5a561326d39cd32316fbd7ceef38fc88e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Devel::NYTProf&lt;/code&gt; is the &lt;b&gt;next generation&lt;/b&gt; of Perl code profiler, fixing many shortcomings in other tools and implementing many cool features. First of all it can be used as either a</source>
          <target state="translated">&lt;code&gt;Devel::NYTProf&lt;/code&gt; 是&lt;b&gt;下一代&lt;/b&gt; Perl代码分析器，它修复了其他工具中的许多缺点并实现了许多很酷的功能。首先，它可以用作</target>
        </trans-unit>
        <trans-unit id="c5797923d69aa381e05603f605d5a631ec973775" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Devel::PPPort&lt;/code&gt; contains two functions, &lt;code&gt;WriteFile&lt;/code&gt; and &lt;code&gt;GetFileContents&lt;/code&gt; . &lt;code&gt;WriteFile&lt;/code&gt; 's only purpose is to write the</source>
          <target state="translated">&lt;code&gt;Devel::PPPort&lt;/code&gt; 包含两个函数 &lt;code&gt;WriteFile&lt;/code&gt; 和 &lt;code&gt;GetFileContents&lt;/code&gt; 。 &lt;code&gt;WriteFile&lt;/code&gt; 的唯一目的是编写</target>
        </trans-unit>
        <trans-unit id="018354f48ba5b78747f51bd5947259fe8ee3715c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Devel::PPPort&lt;/code&gt; generates a C header file</source>
          <target state="translated">&lt;code&gt;Devel::PPPort&lt;/code&gt; 生成一个C头文件</target>
        </trans-unit>
        <trans-unit id="a06bb951efbe313b213cf2bad4e278dbcedc8fd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Devel::Profiler&lt;/code&gt; generates a tmon.out file which is compatible with the &lt;code&gt;dprofpp&lt;/code&gt; program, thus saving the construction of a dedicated statistics reader program. &lt;code&gt;dprofpp&lt;/code&gt; usage is therefore identical to the above example.</source>
          <target state="translated">&lt;code&gt;Devel::Profiler&lt;/code&gt; 生成一个与 &lt;code&gt;dprofpp&lt;/code&gt; 程序兼容的tmon.out文件，从而节省了专用统计读取器程序的结构。因此， &lt;code&gt;dprofpp&lt;/code&gt; 的用法与上述示例相同。</target>
        </trans-unit>
        <trans-unit id="4e8fab08ab7193519be5833e52c406d22be75acb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Devel::SmallProf&lt;/code&gt; writes it's output into a file called</source>
          <target state="translated">&lt;code&gt;Devel::SmallProf&lt;/code&gt; 将其输出写入一个名为</target>
        </trans-unit>
        <trans-unit id="0825c0fbe9eac3bd9846a860cced812e78501c17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Dump&lt;/code&gt; , &lt;code&gt;mstat&lt;/code&gt; , &lt;code&gt;DeadCode&lt;/code&gt; , &lt;code&gt;DumpArray&lt;/code&gt; , &lt;code&gt;DumpWithOP&lt;/code&gt; and &lt;code&gt;DumpProg&lt;/code&gt; , &lt;code&gt;fill_mstats&lt;/code&gt; , &lt;code&gt;mstats_fillhash&lt;/code&gt; , &lt;code&gt;mstats2hash&lt;/code&gt; by default. Additionally available &lt;code&gt;SvREFCNT&lt;/code&gt; , &lt;code&gt;SvREFCNT_inc&lt;/code&gt; and &lt;code&gt;SvREFCNT_dec&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;Dump&lt;/code&gt; 默认情况下Dump， &lt;code&gt;mstat&lt;/code&gt; ， &lt;code&gt;DeadCode&lt;/code&gt; ， &lt;code&gt;DumpArray&lt;/code&gt; ， &lt;code&gt;DumpWithOP&lt;/code&gt; 和 &lt;code&gt;DumpProg&lt;/code&gt; ， &lt;code&gt;fill_mstats&lt;/code&gt; ， &lt;code&gt;mstats_fillhash&lt;/code&gt; ， &lt;code&gt;mstats2hash&lt;/code&gt; 。其他可用的 &lt;code&gt;SvREFCNT&lt;/code&gt; ， &lt;code&gt;SvREFCNT_inc&lt;/code&gt; 和 &lt;code&gt;SvREFCNT_dec&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d9c7ca6f8b76a10f9d5318c6941ff36f70c99beb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Dup&lt;/code&gt; uses &lt;code&gt;Getarg&lt;/code&gt; to retrieve the argument originally passed to &lt;code&gt;Pushed&lt;/code&gt; , so you must implement this function if your layer has an extra argument to &lt;code&gt;Pushed&lt;/code&gt; and will ever be &lt;code&gt;Dup&lt;/code&gt; ed.</source>
          <target state="translated">&lt;code&gt;Dup&lt;/code&gt; 使用 &lt;code&gt;Getarg&lt;/code&gt; 检索最初传递给 &lt;code&gt;Pushed&lt;/code&gt; 的参数，因此，如果您的图层对 &lt;code&gt;Pushed&lt;/code&gt; 有一个额外的参数并且将被 &lt;code&gt;Dup&lt;/code&gt; ed使用，则必须实现此功能。</target>
        </trans-unit>
        <trans-unit id="1dbfb1d06fc3039522251007d62aa0c69bf6fa5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&amp;lt;gt&amp;gt;&lt;/code&gt; -- a literal &amp;gt; (greater than)</source>
          <target state="translated">&lt;code&gt;E&amp;lt;gt&amp;gt;&lt;/code&gt; -文字&amp;gt;（大于）</target>
        </trans-unit>
        <trans-unit id="9ab5736f8b7db61936bca7cf554720a007684208" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&amp;lt;lt&amp;gt;&lt;/code&gt; -- a literal &amp;lt; (less than)</source>
          <target state="translated">&lt;code&gt;E&amp;lt;lt&amp;gt;&lt;/code&gt; -文字&amp;lt;（小于）</target>
        </trans-unit>
        <trans-unit id="3fd01da0fa74c94e7d191b89b539691222f4b42b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&amp;lt;sol&amp;gt;&lt;/code&gt; -- a literal / (</source>
          <target state="translated">&lt;code&gt;E&amp;lt;sol&amp;gt;&lt;/code&gt; -文字/（</target>
        </trans-unit>
        <trans-unit id="3d6f8bc422c538eb3aeae22e52038748fa18df75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&amp;lt;verbar&amp;gt;&lt;/code&gt; -- a literal | (</source>
          <target state="translated">&lt;code&gt;E&amp;lt;verbar&amp;gt;&lt;/code&gt; -文字| （</target>
        </trans-unit>
        <trans-unit id="cf0f76c73d09691fd92de4db3ba41dd7d0cb9322" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E2BIG&lt;/code&gt;&lt;code&gt;EACCES&lt;/code&gt;&lt;code&gt;EADDRINUSE&lt;/code&gt;&lt;code&gt;EADDRNOTAVAIL&lt;/code&gt;&lt;code&gt;EAFNOSUPPORT&lt;/code&gt;&lt;code&gt;EAGAIN&lt;/code&gt;&lt;code&gt;EALREADY&lt;/code&gt;&lt;code&gt;EBADF&lt;/code&gt;&lt;code&gt;EBADMSG&lt;/code&gt;&lt;code&gt;EBUSY&lt;/code&gt;&lt;code&gt;ECANCELED&lt;/code&gt;&lt;code&gt;ECHILD&lt;/code&gt;&lt;code&gt;ECONNABORTED&lt;/code&gt;&lt;code&gt;ECONNREFUSED&lt;/code&gt;&lt;code&gt;ECONNRESET&lt;/code&gt;&lt;code&gt;EDEADLK&lt;/code&gt;&lt;code&gt;EDESTADDRREQ&lt;/code&gt;&lt;code&gt;EDOM&lt;/code&gt;&lt;code&gt;EDQUOT&lt;/code&gt;&lt;code&gt;EEXIST&lt;/code&gt;&lt;code&gt;EFAULT&lt;/code&gt;&lt;code&gt;EFBIG&lt;/code&gt;&lt;code&gt;EHOSTDOWN&lt;/code&gt;&lt;code&gt;EHOSTUNREACH&lt;/code&gt;&lt;code&gt;EIDRM&lt;/code&gt;&lt;code&gt;EILSEQ&lt;/code&gt;&lt;code&gt;EINPROGRESS&lt;/code&gt;&lt;code&gt;EINTR&lt;/code&gt;&lt;code&gt;EINVAL&lt;/code&gt;&lt;code&gt;EIO&lt;/code&gt;&lt;code&gt;EISCONN&lt;/code&gt;&lt;code&gt;EISDIR&lt;/code&gt;&lt;code&gt;ELOOP&lt;/code&gt;&lt;code&gt;EMFILE&lt;/code&gt;&lt;code&gt;EMLINK&lt;/code&gt;&lt;code&gt;EMSGSIZE&lt;/code&gt;&lt;code&gt;ENAMETOOLONG&lt;/code&gt;&lt;code&gt;ENETDOWN&lt;/code&gt;&lt;code&gt;ENETRESET&lt;/code&gt;&lt;code&gt;ENETUNREACH&lt;/code&gt;&lt;code&gt;ENFILE&lt;/code&gt;&lt;code&gt;ENOBUFS&lt;/code&gt;&lt;code&gt;ENODATA&lt;/code&gt;&lt;code&gt;ENODEV&lt;/code&gt;&lt;code&gt;ENOENT&lt;/code&gt;&lt;code&gt;ENOEXEC&lt;/code&gt;&lt;code&gt;ENOLCK&lt;/code&gt;&lt;code&gt;ENOLINK&lt;/code&gt;&lt;code&gt;ENOMEM&lt;/code&gt;&lt;code&gt;ENOMSG&lt;/code&gt;&lt;code&gt;ENOPROTOOPT&lt;/code&gt;&lt;code&gt;ENOSPC&lt;/code&gt;&lt;code&gt;ENOSR&lt;/code&gt;&lt;code&gt;ENOSTR&lt;/code&gt;&lt;code&gt;ENOSYS&lt;/code&gt;&lt;code&gt;ENOTBLK&lt;/code&gt;&lt;code&gt;ENOTCONN&lt;/code&gt;&lt;code&gt;ENOTDIR&lt;/code&gt;&lt;code&gt;ENOTEMPTY&lt;/code&gt;&lt;code&gt;ENOTRECOVERABLE&lt;/code&gt;&lt;code&gt;ENOTSOCK&lt;/code&gt;&lt;code&gt;ENOTSUP&lt;/code&gt;&lt;code&gt;ENOTTY&lt;/code&gt;&lt;code&gt;ENXIO&lt;/code&gt;&lt;code&gt;EOPNOTSUPP&lt;/code&gt;&lt;code&gt;EOTHER&lt;/code&gt;&lt;code&gt;EOVERFLOW&lt;/code&gt;&lt;code&gt;EOWNERDEAD&lt;/code&gt;&lt;code&gt;EPERM&lt;/code&gt;&lt;code&gt;EPFNOSUPPORT&lt;/code&gt;&lt;code&gt;EPIPE&lt;/code&gt;&lt;code&gt;EPROCLIM&lt;/code&gt;&lt;code&gt;EPROTO&lt;/code&gt;&lt;code&gt;EPROTONOSUPPORT&lt;/code&gt;&lt;code&gt;EPROTOTYPE&lt;/code&gt;&lt;code&gt;ERANGE&lt;/code&gt;&lt;code&gt;EREMOTE&lt;/code&gt;&lt;code&gt;ERESTART&lt;/code&gt;&lt;code&gt;EROFS&lt;/code&gt;&lt;code&gt;ESHUTDOWN&lt;/code&gt;&lt;code&gt;ESOCKTNOSUPPORT&lt;/code&gt;&lt;code&gt;ESPIPE&lt;/code&gt;&lt;code&gt;ESRCH&lt;/code&gt;&lt;code&gt;ESTALE&lt;/code&gt;&lt;code&gt;ETIME&lt;/code&gt;&lt;code&gt;ETIMEDOUT&lt;/code&gt;&lt;code&gt;ETOOMANYREFS&lt;/code&gt;&lt;code&gt;ETXTBSY&lt;/code&gt;&lt;code&gt;EUSERS&lt;/code&gt;&lt;code&gt;EWOULDBLOCK&lt;/code&gt;&lt;code&gt;EXDEV&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;E2BIG&lt;/code&gt;&lt;code&gt;EACCES&lt;/code&gt;&lt;code&gt;EADDRINUSE&lt;/code&gt;&lt;code&gt;EADDRNOTAVAIL&lt;/code&gt;&lt;code&gt;EAFNOSUPPORT&lt;/code&gt;&lt;code&gt;EAGAIN&lt;/code&gt;&lt;code&gt;EALREADY&lt;/code&gt;&lt;code&gt;EBADF&lt;/code&gt;&lt;code&gt;EBADMSG&lt;/code&gt;&lt;code&gt;EBUSY&lt;/code&gt;&lt;code&gt;ECANCELED&lt;/code&gt;&lt;code&gt;ECHILD&lt;/code&gt;&lt;code&gt;ECONNABORTED&lt;/code&gt;&lt;code&gt;ECONNREFUSED&lt;/code&gt;&lt;code&gt;ECONNRESET&lt;/code&gt;&lt;code&gt;EDEADLK&lt;/code&gt;&lt;code&gt;EDESTADDRREQ&lt;/code&gt;&lt;code&gt;EDOM&lt;/code&gt;&lt;code&gt;EDQUOT&lt;/code&gt;&lt;code&gt;EEXIST&lt;/code&gt;&lt;code&gt;EFAULT&lt;/code&gt;&lt;code&gt;EFBIG&lt;/code&gt;&lt;code&gt;EHOSTDOWN&lt;/code&gt;&lt;code&gt;EHOSTUNREACH&lt;/code&gt;&lt;code&gt;EIDRM&lt;/code&gt;&lt;code&gt;EILSEQ&lt;/code&gt;&lt;code&gt;EINPROGRESS&lt;/code&gt;&lt;code&gt;EINTR&lt;/code&gt;&lt;code&gt;EINVAL&lt;/code&gt;&lt;code&gt;EIO&lt;/code&gt;&lt;code&gt;EISCONN&lt;/code&gt;&lt;code&gt;EISDIR&lt;/code&gt;&lt;code&gt;ELOOP&lt;/code&gt;&lt;code&gt;EMFILE&lt;/code&gt;&lt;code&gt;EMLINK&lt;/code&gt;&lt;code&gt;EMSGSIZE&lt;/code&gt;&lt;code&gt;ENAMETOOLONG&lt;/code&gt;&lt;code&gt;ENETDOWN&lt;/code&gt;&lt;code&gt;ENETRESET&lt;/code&gt;&lt;code&gt;ENETUNREACH&lt;/code&gt;&lt;code&gt;ENFILE&lt;/code&gt;&lt;code&gt;ENOBUFS&lt;/code&gt;&lt;code&gt;ENODATA&lt;/code&gt;&lt;code&gt;ENODEV&lt;/code&gt;&lt;code&gt;ENOENT&lt;/code&gt;&lt;code&gt;ENOEXEC&lt;/code&gt;&lt;code&gt;ENOLCK&lt;/code&gt;&lt;code&gt;ENOLINK&lt;/code&gt;&lt;code&gt;ENOMEM&lt;/code&gt;&lt;code&gt;ENOMSG&lt;/code&gt;&lt;code&gt;ENOPROTOOPT&lt;/code&gt;&lt;code&gt;ENOSPC&lt;/code&gt;&lt;code&gt;ENOSR&lt;/code&gt;&lt;code&gt;ENOSTR&lt;/code&gt;&lt;code&gt;ENOSYS&lt;/code&gt;&lt;code&gt;ENOTBLK&lt;/code&gt;&lt;code&gt;ENOTCONN&lt;/code&gt;&lt;code&gt;ENOTDIR&lt;/code&gt;&lt;code&gt;ENOTEMPTY&lt;/code&gt;&lt;code&gt;ENOTRECOVERABLE&lt;/code&gt;&lt;code&gt;ENOTSOCK&lt;/code&gt;&lt;code&gt;ENOTSUP&lt;/code&gt;&lt;code&gt;ENOTTY&lt;/code&gt;&lt;code&gt;ENXIO&lt;/code&gt;&lt;code&gt;EOPNOTSUPP&lt;/code&gt;&lt;code&gt;EOTHER&lt;/code&gt;&lt;code&gt;EOVERFLOW&lt;/code&gt;&lt;code&gt;EOWNERDEAD&lt;/code&gt;&lt;code&gt;EPERM&lt;/code&gt;&lt;code&gt;EPFNOSUPPORT&lt;/code&gt;&lt;code&gt;EPIPE&lt;/code&gt;&lt;code&gt;EPROCLIM&lt;/code&gt;&lt;code&gt;EPROTO&lt;/code&gt;&lt;code&gt;EPROTONOSUPPORT&lt;/code&gt;&lt;code&gt;EPROTOTYPE&lt;/code&gt;&lt;code&gt;ERANGE&lt;/code&gt;&lt;code&gt;EREMOTE&lt;/code&gt;&lt;code&gt;ERESTART&lt;/code&gt;&lt;code&gt;EROFS&lt;/code&gt;&lt;code&gt;ESHUTDOWN&lt;/code&gt;&lt;code&gt;ESOCKTNOSUPPORT&lt;/code&gt;&lt;code&gt;ESPIPE&lt;/code&gt;&lt;code&gt;ESRCH&lt;/code&gt;&lt;code&gt;ESTALE&lt;/code&gt;&lt;code&gt;ETIME&lt;/code&gt;&lt;code&gt;ETIMEDOUT&lt;/code&gt;&lt;code&gt;ETOOMANYREFS&lt;/code&gt;&lt;code&gt;ETXTBSY&lt;/code&gt;&lt;code&gt;EUSERS&lt;/code&gt;&lt;code&gt;EWOULDBLOCK&lt;/code&gt;&lt;code&gt;EXDEV&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="066e414ca2cf611148c4eaa3ea046c8780dfdec3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ECHO&lt;/code&gt;&lt;code&gt;ECHOE&lt;/code&gt;&lt;code&gt;ECHOK&lt;/code&gt;&lt;code&gt;ECHONL&lt;/code&gt;&lt;code&gt;ICANON&lt;/code&gt;&lt;code&gt;IEXTEN&lt;/code&gt;&lt;code&gt;ISIG&lt;/code&gt;&lt;code&gt;NOFLSH&lt;/code&gt;&lt;code&gt;TOSTOP&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ECHO&lt;/code&gt;&lt;code&gt;ECHOE&lt;/code&gt;&lt;code&gt;ECHOK&lt;/code&gt;&lt;code&gt;ECHONL&lt;/code&gt;&lt;code&gt;ICANON&lt;/code&gt;&lt;code&gt;IEXTEN&lt;/code&gt;&lt;code&gt;ISIG&lt;/code&gt;&lt;code&gt;NOFLSH&lt;/code&gt;&lt;code&gt;TOSTOP&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fe83a5d58b657664921e554e17730ddbd2574a33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ENTER&lt;/code&gt; and &lt;code&gt;LEAVE&lt;/code&gt; localise a block of code - they make sure that all variables are tidied up, everything that has been localised gets its previous value returned, and so on. Think of them as the &lt;code&gt;{&lt;/code&gt; and &lt;code&gt;}&lt;/code&gt; of a Perl block.</source>
          <target state="translated">&lt;code&gt;ENTER&lt;/code&gt; 和 &lt;code&gt;LEAVE&lt;/code&gt; 本地化代码块-它们确保整理所有变量，已本地化的所有内容都将返回其先前的值，依此类推。将它们视为Perl块的 &lt;code&gt;{&lt;/code&gt; 和 &lt;code&gt;}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="61a8af2f6135bd8dc2ab3b9aec3837519c83b6b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EXIT_FAILURE&lt;/code&gt;&lt;code&gt;EXIT_SUCCESS&lt;/code&gt;&lt;code&gt;MB_CUR_MAX&lt;/code&gt;&lt;code&gt;RAND_MAX&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;EXIT_FAILURE&lt;/code&gt;&lt;code&gt;EXIT_SUCCESS&lt;/code&gt;&lt;code&gt;MB_CUR_MAX&lt;/code&gt;&lt;code&gt;RAND_MAX&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="605c0049ae6513fbc634a4505a4d59b4c8b6360e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Errno&lt;/code&gt; also makes &lt;code&gt;%!&lt;/code&gt; magic such that each element of &lt;code&gt;%!&lt;/code&gt; has a non-zero value only if &lt;code&gt;$!&lt;/code&gt; is set to that value. For example:</source>
          <target state="translated">&lt;code&gt;Errno&lt;/code&gt; 也赚了 &lt;code&gt;%!&lt;/code&gt; 魔法如此 &lt;code&gt;%!&lt;/code&gt; 每个元素！仅在 &lt;code&gt;$!&lt;/code&gt; 时具有非零值！设置为该值。例如：</target>
        </trans-unit>
        <trans-unit id="6b8723a06751f4affdad686aeca30d6d66626d33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Errno&lt;/code&gt; defines and conditionally exports all the error constants defined in your system &lt;code&gt;errno.h&lt;/code&gt; include file. It has a single export tag, &lt;code&gt;:POSIX&lt;/code&gt; , which will export all POSIX defined error numbers.</source>
          <target state="translated">&lt;code&gt;Errno&lt;/code&gt; 定义并有条件地导出系统 &lt;code&gt;errno.h&lt;/code&gt; 包含文件中定义的所有错误常量。它具有一个导出标记 &lt;code&gt;:POSIX&lt;/code&gt; ，它将导出所有POSIX定义的错误号。</target>
        </trans-unit>
        <trans-unit id="5f1cc0e4d1cb179935b0274da71cd837a55e146a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Exporter&lt;/code&gt; is definitely not the only module with symbol exporter capabilities. At CPAN, you may find a bunch of them. Some are lighter. Some provide improved APIs and features. Pick the one that fits your needs. The following is a sample list of such modules.</source>
          <target state="translated">&lt;code&gt;Exporter&lt;/code&gt; 器绝对不是具有符号导出器功能的唯一模块。在CPAN中，您可能会发现很多。有些更轻。有些提供了改进的API和功能。选择一个适合您的需求。以下是此类模块的示例列表。</target>
        </trans-unit>
        <trans-unit id="ad37da909ccfa2e26ad205000545574039f2e3e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ExtUtils::Embed&lt;/code&gt; exports the following functions:</source>
          <target state="translated">&lt;code&gt;ExtUtils::Embed&lt;/code&gt; 导出以下功能：</target>
        </trans-unit>
        <trans-unit id="095ec01183ac1e1d6ca1341429cec2f459043f2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ExtUtils::Embed&lt;/code&gt; provides utility functions for embedding a Perl interpreter and extensions in your C/C++ applications. Typically, an application</source>
          <target state="translated">&lt;code&gt;ExtUtils::Embed&lt;/code&gt; 提供实用程序功能，用于在您的C / C ++应用程序中嵌入Perl解释器和扩展。通常，一个应用程序</target>
        </trans-unit>
        <trans-unit id="64d2ca71037114349d1ec282c3de1a1216361065" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ExtUtils::Mksymlists&lt;/code&gt; produces files used by the linker under some OSs during the creation of shared libraries for dynamic extensions. It is normally called from a MakeMaker-generated Makefile when the extension is built. The linker option file is generated by calling the function &lt;code&gt;Mksymlists&lt;/code&gt; , which is exported by default from &lt;code&gt;ExtUtils::Mksymlists&lt;/code&gt; . It takes one argument, a list of key-value pairs, in which the following keys are recognized:</source>
          <target state="translated">&lt;code&gt;ExtUtils::Mksymlists&lt;/code&gt; 在创建用于动态扩展的共享库期间，ExtUtils :: Mksymlists会在某些操作系统下生成链接器使用的文件。构建扩展名时，通常从MakeMaker生成的Makefile中调用它。链接器选项文件是通过调用函数 &lt;code&gt;Mksymlists&lt;/code&gt; 生成的，该函数默认情况下从 &lt;code&gt;ExtUtils::Mksymlists&lt;/code&gt; 。它采用一个参数，即键-值对的列表，其中识别以下键：</target>
        </trans-unit>
        <trans-unit id="fb003f490e341e53319aa009e2735722b16763d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ExtUtils::ParseXS&lt;/code&gt; will compile XS code into C code by embedding the constructs necessary to let C functions manipulate Perl values and creates the glue necessary to let Perl access those functions. The compiler uses typemaps to determine how to map C function parameters and variables to Perl values.</source>
          <target state="translated">&lt;code&gt;ExtUtils::ParseXS&lt;/code&gt; 将通过嵌入使C函数操纵Perl值所需的结构并将XS代码编译为C代码，从而创建使Perl访问这些函数所需的粘合。编译器使用类型映射来确定如何将C函数参数和变量映射到Perl值。</target>
        </trans-unit>
        <trans-unit id="f2053c192b87e9cd9de753eaf699903f70648eb9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;F&lt;/code&gt; packs an &lt;code&gt;NV&lt;/code&gt; , which is the floating point type used by Perl internally.</source>
          <target state="translated">&lt;code&gt;F&lt;/code&gt; 打包了 &lt;code&gt;NV&lt;/code&gt; ，这是Perl内部使用的浮点类型。</target>
        </trans-unit>
        <trans-unit id="52ff85342a730577020c88364b60274499bd7643" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FAULT&lt;/code&gt; means that you never expect to call the function in scalar (or list) context, and that if &lt;code&gt;Memoize&lt;/code&gt; detects such a call, it should abort the program. The error message is one of</source>
          <target state="translated">&lt;code&gt;FAULT&lt;/code&gt; 意味着您永远不会期望在标量（或列表）上下文中调用该函数，并且如果 &lt;code&gt;Memoize&lt;/code&gt; 检测到此类调用，则它将中止程序。错误消息是以下之一</target>
        </trans-unit>
        <trans-unit id="593b33d10d7aff28fb80e58f50c81f1f8eb33924" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FD_CLOEXEC&lt;/code&gt;&lt;code&gt;F_DUPFD&lt;/code&gt;&lt;code&gt;F_GETFD&lt;/code&gt;&lt;code&gt;F_GETFL&lt;/code&gt;&lt;code&gt;F_GETLK&lt;/code&gt;&lt;code&gt;F_OK&lt;/code&gt;&lt;code&gt;F_RDLCK&lt;/code&gt;&lt;code&gt;F_SETFD&lt;/code&gt;&lt;code&gt;F_SETFL&lt;/code&gt;&lt;code&gt;F_SETLK&lt;/code&gt;&lt;code&gt;F_SETLKW&lt;/code&gt;&lt;code&gt;F_UNLCK&lt;/code&gt;&lt;code&gt;F_WRLCK&lt;/code&gt;&lt;code&gt;O_ACCMODE&lt;/code&gt;&lt;code&gt;O_APPEND&lt;/code&gt;&lt;code&gt;O_CREAT&lt;/code&gt;&lt;code&gt;O_EXCL&lt;/code&gt;&lt;code&gt;O_NOCTTY&lt;/code&gt;&lt;code&gt;O_NONBLOCK&lt;/code&gt;&lt;code&gt;O_RDONLY&lt;/code&gt;&lt;code&gt;O_RDWR&lt;/code&gt;&lt;code&gt;O_TRUNC&lt;/code&gt;&lt;code&gt;O_WRONLY&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;FD_CLOEXEC&lt;/code&gt;&lt;code&gt;F_DUPFD&lt;/code&gt;&lt;code&gt;F_GETFD&lt;/code&gt;&lt;code&gt;F_GETFL&lt;/code&gt;&lt;code&gt;F_GETLK&lt;/code&gt;&lt;code&gt;F_OK&lt;/code&gt;&lt;code&gt;F_RDLCK&lt;/code&gt;&lt;code&gt;F_SETFD&lt;/code&gt;&lt;code&gt;F_SETFL&lt;/code&gt;&lt;code&gt;F_SETLK&lt;/code&gt;&lt;code&gt;F_SETLKW&lt;/code&gt;&lt;code&gt;F_UNLCK&lt;/code&gt;&lt;code&gt;F_WRLCK&lt;/code&gt;&lt;code&gt;O_ACCMODE&lt;/code&gt;&lt;code&gt;O_APPEND&lt;/code&gt;&lt;code&gt;O_CREAT&lt;/code&gt;&lt;code&gt;O_EXCL&lt;/code&gt;&lt;code&gt;O_NOCTTY&lt;/code&gt;&lt;code&gt;O_NONBLOCK&lt;/code&gt;&lt;code&gt;O_RDONLY&lt;/code&gt;&lt;code&gt;O_RDWR&lt;/code&gt;&lt;code&gt;O_TRUNC&lt;/code&gt;&lt;code&gt;O_WRONLY&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4a95b90939671fa2f4ef6a0875777e47ba033a12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FE_DOWNWARD&lt;/code&gt;&lt;code&gt;FE_TONEAREST&lt;/code&gt;&lt;code&gt;FE_TOWARDZERO&lt;/code&gt;&lt;code&gt;FE_UPWARD&lt;/code&gt; on systems that support them.</source>
          <target state="translated">&lt;code&gt;FE_DOWNWARD&lt;/code&gt; &lt;code&gt;FE_TONEAREST&lt;/code&gt; &lt;code&gt;FE_TOWARDZERO&lt;/code&gt; &lt;code&gt;FE_UPWARD&lt;/code&gt; 在支持它们的系统上。</target>
        </trans-unit>
        <trans-unit id="586830fc1c312d09452cbf05bb392121d4a4d3f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FE_TONEAREST&lt;/code&gt; is like &lt;a href=&quot;#round&quot;&gt;round&lt;/a&gt;, &lt;code&gt;FE_TOWARDZERO&lt;/code&gt; is like &lt;a href=&quot;#trunc&quot;&gt;trunc&lt;/a&gt; [C99].</source>
          <target state="translated">&lt;code&gt;FE_TONEAREST&lt;/code&gt; 是像&lt;a href=&quot;#round&quot;&gt;圆形&lt;/a&gt;， &lt;code&gt;FE_TOWARDZERO&lt;/code&gt; 就像&lt;a href=&quot;#trunc&quot;&gt;TRUNC&lt;/a&gt; [C99]。</target>
        </trans-unit>
        <trans-unit id="c79284936684717b45799224f65c1741c4f9ad4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FILE&lt;/code&gt; . It will generate one on each call and push a new stdio layer. So don't call it repeatedly on the same file. &lt;code&gt;PerlIO_findFILE()&lt;/code&gt; will retrieve the stdio layer once it has been generated by &lt;code&gt;PerlIO_exportFILE()&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;FILE&lt;/code&gt; 。它将在每次调用时生成一个，并推送一个新的stdio层。因此，请勿在同一文件上重复调用它。一旦 &lt;code&gt;PerlIO_exportFILE()&lt;/code&gt; 生成了stdio层， &lt;code&gt;PerlIO_findFILE()&lt;/code&gt; 将检索该stdio层。</target>
        </trans-unit>
        <trans-unit id="08a48df125b434d844372c25a7cae987e2df5288" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FILTER_ONLY&lt;/code&gt; takes a sequence of specifiers that install separate (and possibly multiple) filters that act on only parts of the source code. For example:</source>
          <target state="translated">&lt;code&gt;FILTER_ONLY&lt;/code&gt; 采用一系列说明符，这些说明符安装了仅对部分源代码起作用的单独的（可能是多个）过滤器。例如：</target>
        </trans-unit>
        <trans-unit id="d138ad5224141350319092d75597c48fba6ef1a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FP_ILOGB0&lt;/code&gt;&lt;code&gt;FP_ILOGBNAN&lt;/code&gt;&lt;code&gt;FP_INFINITE&lt;/code&gt;&lt;code&gt;FP_NAN&lt;/code&gt;&lt;code&gt;FP_NORMAL&lt;/code&gt;&lt;code&gt;FP_SUBNORMAL&lt;/code&gt;&lt;code&gt;FP_ZERO&lt;/code&gt;&lt;code&gt;INFINITY&lt;/code&gt;&lt;code&gt;NAN&lt;/code&gt;&lt;code&gt;Inf&lt;/code&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;code&gt;M_1_PI&lt;/code&gt;&lt;code&gt;M_2_PI&lt;/code&gt;&lt;code&gt;M_2_SQRTPI&lt;/code&gt;&lt;code&gt;M_E&lt;/code&gt;&lt;code&gt;M_LN10&lt;/code&gt;&lt;code&gt;M_LN2&lt;/code&gt;&lt;code&gt;M_LOG10E&lt;/code&gt;&lt;code&gt;M_LOG2E&lt;/code&gt;&lt;code&gt;M_PI&lt;/code&gt;&lt;code&gt;M_PI_2&lt;/code&gt;&lt;code&gt;M_PI_4&lt;/code&gt;&lt;code&gt;M_SQRT1_2&lt;/code&gt;&lt;code&gt;M_SQRT2&lt;/code&gt; on systems with C99 support.</source>
          <target state="translated">&lt;code&gt;FP_ILOGB0&lt;/code&gt; &lt;code&gt;FP_ILOGBNAN&lt;/code&gt; &lt;code&gt;FP_INFINITE&lt;/code&gt; &lt;code&gt;FP_NAN&lt;/code&gt; &lt;code&gt;FP_NORMAL&lt;/code&gt; &lt;code&gt;FP_SUBNORMAL&lt;/code&gt; &lt;code&gt;FP_ZERO&lt;/code&gt; &lt;code&gt;INFINITY&lt;/code&gt; &lt;code&gt;NAN&lt;/code&gt; &lt;code&gt;Inf&lt;/code&gt; &lt;code&gt;NaN&lt;/code&gt; 的 &lt;code&gt;M_1_PI&lt;/code&gt; &lt;code&gt;M_2_PI&lt;/code&gt; &lt;code&gt;M_2_SQRTPI&lt;/code&gt; &lt;code&gt;M_E&lt;/code&gt; &lt;code&gt;M_LN10&lt;/code&gt; &lt;code&gt;M_LN2&lt;/code&gt; &lt;code&gt;M_LOG10E&lt;/code&gt; &lt;code&gt;M_LOG2E&lt;/code&gt; &lt;code&gt;M_PI&lt;/code&gt; &lt;code&gt;M_PI_2&lt;/code&gt; &lt;code&gt;M_PI_4&lt;/code&gt; &lt;code&gt;M_SQRT1_2&lt;/code&gt; &lt;code&gt;M_SQRT2&lt;/code&gt; 与C99支持系统。</target>
        </trans-unit>
        <trans-unit id="5914c8ad1ae38c828bbfd3aecb0f6eeb99e7051a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Fatal&lt;/code&gt; clobbers the context in which a function is called and always makes it a scalar context, except when the &lt;code&gt;:void&lt;/code&gt; tag is used. This problem does not exist in &lt;a href=&quot;autodie&quot;&gt;autodie&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Fatal&lt;/code&gt; 破坏了调用函数的上下文，并且始终使它成为标量上下文，除非使用 &lt;code&gt;:void&lt;/code&gt; 标记。这个问题在&lt;a href=&quot;autodie&quot;&gt;autodie&lt;/a&gt;中不存在。</target>
        </trans-unit>
        <trans-unit id="740df548a189ece2edf4fd0c968a33bedfb05cdc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Fatal&lt;/code&gt; provides a way to conveniently replace functions which normally return a false value when they fail with equivalents which raise exceptions if they are not successful. This lets you use these functions without having to test their return values explicitly on each call. Exceptions can be caught using &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval{}&lt;/a&gt;&lt;/code&gt;. See &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt; and &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt; for details.</source>
          <target state="translated">&lt;code&gt;Fatal&lt;/code&gt; 提供了一种方法，可以方便地替换通常会在失败时返回错误值的函数，并替换为如果失败则引发异常的等效项。这使您可以使用这些函数，而不必在每次调用时显式测试它们的返回值。可以使用 &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval{}&lt;/a&gt;&lt;/code&gt; 捕获异常。有关详细信息，请参见&lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt;和&lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c009d428e974071ae1eba2560f4e3bf7b63b8111" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;File::Fetch&lt;/code&gt; currently only supports proxies with LWP::UserAgent. You will need to set your environment variables accordingly. For example, to use an ftp proxy:</source>
          <target state="translated">&lt;code&gt;File::Fetch&lt;/code&gt; 当前仅支持具有LWP :: UserAgent的代理。您将需要相应地设置环境变量。例如，使用ftp代理：</target>
        </trans-unit>
        <trans-unit id="512e6b725fa0815ed1040c15e359675815185001" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;File::Fetch&lt;/code&gt; is relatively smart about things. When trying to write a file to disk, it removes the &lt;code&gt;query parameters&lt;/code&gt; (see the &lt;code&gt;output_file&lt;/code&gt; method for details) from the file name before creating it. In most cases this suffices.</source>
          <target state="translated">&lt;code&gt;File::Fetch&lt;/code&gt; 在事情上相对聪明。尝试将文件写入磁盘时，它会在创建文件之前从文件名中删除 &lt;code&gt;query parameters&lt;/code&gt; （有关详细信息，请参见 &lt;code&gt;output_file&lt;/code&gt; 方法）。在大多数情况下，这就足够了。</target>
        </trans-unit>
        <trans-unit id="4909eac8bb27d566be5a1e97826bcb6d6ddbfad1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;File::GlobMapper&lt;/code&gt; has been kept simple deliberately, so it isn't intended to solve all filename mapping operations. Under the hood &lt;code&gt;File::Glob&lt;/code&gt; (or for older versions of Perl, &lt;code&gt;File::BSDGlob&lt;/code&gt; ) is used to match the files, so you will never have the flexibility of full Perl regular expression.</source>
          <target state="translated">&lt;code&gt;File::GlobMapper&lt;/code&gt; 刻意保持简单，因此它并非旨在解决所有文件名映射操作。引擎盖下 &lt;code&gt;File::Glob&lt;/code&gt; （或较旧版本的Perl的 &lt;code&gt;File::BSDGlob&lt;/code&gt; ）用于匹配的文件，所以你永远不会有完全的Perl的正则表达式的灵活性。</target>
        </trans-unit>
        <trans-unit id="e96810d8a56c73c1a6b5cbdf2dd4d391587af778" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;File::Path&lt;/code&gt; blindly exports &lt;code&gt;mkpath&lt;/code&gt; and &lt;code&gt;rmtree&lt;/code&gt; into the current namespace. These days, this is considered bad style, but to change it now would break too much code. Nonetheless, you are invited to specify what it is you are expecting to use:</source>
          <target state="translated">&lt;code&gt;File::Path&lt;/code&gt; 盲目将 &lt;code&gt;mkpath&lt;/code&gt; 和 &lt;code&gt;rmtree&lt;/code&gt; 导出到当前名称空间中。这些天来，这被认为是不好的风格，但是现在更改它会破坏太多的代码。尽管如此，仍邀请您指定期望使用的内容：</target>
        </trans-unit>
        <trans-unit id="8f095bddf521d070185d41c8d087a14cb54a167a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;File::Spec&lt;/code&gt; is available in the standard distribution as of version 5.004_05. &lt;code&gt;File::Spec::Functions&lt;/code&gt; is only in &lt;code&gt;File::Spec&lt;/code&gt; 0.7 and later, and some versions of Perl come with version 0.6. If &lt;code&gt;File::Spec&lt;/code&gt; is not updated to 0.7 or later, you must use the object-oriented interface from &lt;code&gt;File::Spec&lt;/code&gt; (or upgrade &lt;code&gt;File::Spec&lt;/code&gt; ).</source>
          <target state="translated">&lt;code&gt;File::Spec&lt;/code&gt; 在5.004_05版本的标准发行版中可用。 &lt;code&gt;File::Spec::Functions&lt;/code&gt; 仅在 &lt;code&gt;File::Spec&lt;/code&gt; 0.7和更高版本中，并且某些版本的Perl带有0.6版。如果 &lt;code&gt;File::Spec&lt;/code&gt; 未更新到0.7或更高版本，则必须使用 &lt;code&gt;File::Spec&lt;/code&gt; 的面向对象接口（或升级 &lt;code&gt;File::Spec&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="12cef216bb5c87c8ac2becb4baf424b0884bc7fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;File::Temp&lt;/code&gt; can be used to create and open temporary files in a safe way. There is both a function interface and an object-oriented interface. The File::Temp constructor or the tempfile() function can be used to return the name and the open filehandle of a temporary file. The tempdir() function can be used to create a temporary directory.</source>
          <target state="translated">&lt;code&gt;File::Temp&lt;/code&gt; 可用于以安全的方式创建和打开临时文件。既有功能接口又有面向对象的接口。File :: Temp构造函数或tempfile（）函数可用于返回名称和临时文件的打开文件句柄。tempdir（）函数可用于创建临时目录。</target>
        </trans-unit>
        <trans-unit id="b8558d37d33da0f50296d5712fa3cb21fddb903f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;File&lt;/code&gt; is a &lt;b&gt;superclass&lt;/b&gt; of &lt;code&gt;File::MP3&lt;/code&gt; , and &lt;code&gt;File::MP3&lt;/code&gt; is a &lt;b&gt;subclass&lt;/b&gt; of &lt;code&gt;File&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;File&lt;/code&gt; 是一个&lt;b&gt;超类&lt;/b&gt;的 &lt;code&gt;File::MP3&lt;/code&gt; ，以及 &lt;code&gt;File::MP3&lt;/code&gt; 是一个&lt;b&gt;子类&lt;/b&gt;的 &lt;code&gt;File&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6762671e9c43ce6002652e67bfefcf6a5cd02a7b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FileHandle::fdopen&lt;/code&gt; is like &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; except that its first parameter is not a filename but rather a file handle name, a FileHandle object, or a file descriptor number.</source>
          <target state="translated">&lt;code&gt;FileHandle::fdopen&lt;/code&gt; 类似于 &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; ,不同之处在于其第一个参数不是文件名而是文件句柄名称，FileHandle对象或文件描述符号。</target>
        </trans-unit>
        <trans-unit id="adf43c6bdb788ed60b52a38acf298d9b6cfa527d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FileHandle::new&lt;/code&gt; creates a &lt;code&gt;FileHandle&lt;/code&gt; , which is a reference to a newly created symbol (see the &lt;code&gt;Symbol&lt;/code&gt; package). If it receives any parameters, they are passed to &lt;code&gt;FileHandle::open&lt;/code&gt; ; if the open fails, the &lt;code&gt;FileHandle&lt;/code&gt; object is destroyed. Otherwise, it is returned to the caller.</source>
          <target state="translated">&lt;code&gt;FileHandle::new&lt;/code&gt; 创建一个 &lt;code&gt;FileHandle&lt;/code&gt; ，它是对新创建符号的引用（请参见 &lt;code&gt;Symbol&lt;/code&gt; 包）。如果它收到任何参数，则将它们传递给 &lt;code&gt;FileHandle::open&lt;/code&gt; ；如果打开失败，则 &lt;code&gt;FileHandle&lt;/code&gt; 对象将被销毁。否则，它将返回给调用方。</target>
        </trans-unit>
        <trans-unit id="159fd7914013643c7a2e528eb234604b29dc9ae3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FileHandle::new_from_fd&lt;/code&gt; creates a &lt;code&gt;FileHandle&lt;/code&gt; like &lt;code&gt;new&lt;/code&gt; does. It requires two parameters, which are passed to &lt;code&gt;FileHandle::fdopen&lt;/code&gt; ; if the fdopen fails, the &lt;code&gt;FileHandle&lt;/code&gt; object is destroyed. Otherwise, it is returned to the caller.</source>
          <target state="translated">&lt;code&gt;FileHandle::new_from_fd&lt;/code&gt; 和 &lt;code&gt;new&lt;/code&gt; 一样创建 &lt;code&gt;FileHandle&lt;/code&gt; 。它需要两个参数，这些参数将传递给 &lt;code&gt;FileHandle::fdopen&lt;/code&gt; ; 如果fdopen失败，则 &lt;code&gt;FileHandle&lt;/code&gt; 对象将被销毁。否则，它将返回给调用方。</target>
        </trans-unit>
        <trans-unit id="34df48f6115c1c0a13e4731820d5124ecd1a9681" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FileHandle::open&lt;/code&gt; accepts one parameter or two. With one parameter, it is just a front end for the built-in &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; function. With two parameters, the first parameter is a filename that may include whitespace or other special characters, and the second parameter is the open mode, optionally followed by a file permission value.</source>
          <target state="translated">&lt;code&gt;FileHandle::open&lt;/code&gt; 接受一个或两个参数。使用一个参数，它只是内置 &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; 功能的前端。具有两个参数，第一个参数是可以包含空格或其他特殊字符的文件名，第二个参数是打开模式，可以选择后面跟一个文件许可权值。</target>
        </trans-unit>
        <trans-unit id="56c84e89afe3961306a15f3cf682c3985e27fc10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GetFileContents&lt;/code&gt; behaves like &lt;code&gt;WriteFile&lt;/code&gt; above, but returns the contents of the would-be file rather than writing it out.</source>
          <target state="translated">&lt;code&gt;GetFileContents&lt;/code&gt; 的行为类似于上面的 &lt;code&gt;WriteFile&lt;/code&gt; ，但返回的是可能文件的内容，而不是将其写出。</target>
        </trans-unit>
        <trans-unit id="7ea3c82b309767ea7a2165759e9837e13524a01e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GetFileContents&lt;/code&gt; can be used to retrieve the file contents rather than writing it out.</source>
          <target state="translated">&lt;code&gt;GetFileContents&lt;/code&gt; 可用于检索文件内容，而不是将其写出。</target>
        </trans-unit>
        <trans-unit id="ad777db936a77fb5cda72b69a2424837a3dead8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Getopt::Long&lt;/code&gt; upgraded to version 2.35</source>
          <target state="translated">&lt;code&gt;Getopt::Long&lt;/code&gt; 升级至2.35版</target>
        </trans-unit>
        <trans-unit id="645ac4cb7e7a0e4213f8a71c7bffc87052ad8695" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HASH&lt;/code&gt; allows you to specify that a particular hash that you supply will be used as the cache. You can tie this hash beforehand to give it any behavior you want.</source>
          <target state="translated">&lt;code&gt;HASH&lt;/code&gt; 允许您指定您提供的特定哈希将用作缓存。您可以预先绑定此哈希，以使其具有所需的任何行为。</target>
        </trans-unit>
        <trans-unit id="58f7a794ce300f67c1868cdef889a2449308b6e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOST&lt;/code&gt; is optional. If &lt;code&gt;HOST&lt;/code&gt; is not given then it may instead be passed as the &lt;code&gt;Host&lt;/code&gt; option described below.</source>
          <target state="translated">&lt;code&gt;HOST&lt;/code&gt; 是可选的。如果未指定 &lt;code&gt;HOST&lt;/code&gt; ,则可以将其作为下面描述的 &lt;code&gt;Host&lt;/code&gt; 选项传递。</target>
        </trans-unit>
        <trans-unit id="2bea88b5fbb79a39447dd7dee6828fe13741dd7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOST&lt;/code&gt; is optional. If &lt;code&gt;HOST&lt;/code&gt; is not given then it may instead be passed as the &lt;code&gt;Host&lt;/code&gt; option described below. If neither is given then the &lt;code&gt;POP3_Hosts&lt;/code&gt; specified in &lt;code&gt;Net::Config&lt;/code&gt; will be used.</source>
          <target state="translated">&lt;code&gt;HOST&lt;/code&gt; 是可选的。如果未指定 &lt;code&gt;HOST&lt;/code&gt; ,则可以将其作为下面描述的 &lt;code&gt;Host&lt;/code&gt; 选项传递。如果两者均未给出， &lt;code&gt;POP3_Hosts&lt;/code&gt; 使用 &lt;code&gt;Net::Config&lt;/code&gt; 指定的POP3_Hosts。</target>
        </trans-unit>
        <trans-unit id="6ef5e2b3a132260f1a90da7111d14884da83c5f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOST&lt;/code&gt; is optional. If &lt;code&gt;HOST&lt;/code&gt; is not given then it may instead be passed as the &lt;code&gt;Host&lt;/code&gt; option described below. If neither is given then the &lt;code&gt;SMTP_Hosts&lt;/code&gt; specified in &lt;code&gt;Net::Config&lt;/code&gt; will be used.</source>
          <target state="translated">&lt;code&gt;HOST&lt;/code&gt; 是可选的。如果未指定 &lt;code&gt;HOST&lt;/code&gt; ,则可以将其作为下面描述的 &lt;code&gt;Host&lt;/code&gt; 选项传递。如果两者均未给出， &lt;code&gt;SMTP_Hosts&lt;/code&gt; 使用 &lt;code&gt;Net::Config&lt;/code&gt; 指定的SMTP_Hosts。</target>
        </trans-unit>
        <trans-unit id="e137f247fee18cceb87509d47cf2081b7b55b920" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Hash::Util::FieldHash&lt;/code&gt; addresses these issues on several levels.</source>
          <target state="translated">&lt;code&gt;Hash::Util::FieldHash&lt;/code&gt; 在多个级别上解决了这些问题。</target>
        </trans-unit>
        <trans-unit id="f60ded3e01c5263ba32e63f38adc7c79d39cfd47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Hash::Util::FieldHash&lt;/code&gt; offers a number of functions in support of &lt;a href=&quot;#The-Inside-out-Technique&quot;&gt;The Inside-out Technique&lt;/a&gt; of class construction.</source>
          <target state="translated">&lt;code&gt;Hash::Util::FieldHash&lt;/code&gt; 提供了许多功能来支持类构造的&amp;ldquo; &lt;a href=&quot;#The-Inside-out-Technique&quot;&gt;由内而外&amp;rdquo;技术&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="95d63c605b89445d7ec7678a1b23fa305e23d9ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Hash::Util&lt;/code&gt; and &lt;code&gt;Hash::Util::FieldHash&lt;/code&gt; contain special functions for manipulating hashes that don't really warrant a keyword.</source>
          <target state="translated">&lt;code&gt;Hash::Util&lt;/code&gt; 和 &lt;code&gt;Hash::Util::FieldHash&lt;/code&gt; 包含一些特殊功能，用于处理实际上不需要保证关键字的哈希。</target>
        </trans-unit>
        <trans-unit id="17c547e32204db6e5f3d81ca13c7bb8402e0a164" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Hash::Util&lt;/code&gt; contains a set of functions that support &lt;a href=&quot;#Restricted-hashes&quot;&gt;restricted hashes&lt;/a&gt;. These are described in this document. &lt;code&gt;Hash::Util::FieldHash&lt;/code&gt; contains an (unrelated) set of functions that support the use of hashes in</source>
          <target state="translated">&lt;code&gt;Hash::Util&lt;/code&gt; 包含一组支持&lt;a href=&quot;#Restricted-hashes&quot;&gt;受限哈希&lt;/a&gt;的函数。这些在本文描述。 &lt;code&gt;Hash::Util::FieldHash&lt;/code&gt; 包含一组（不相关的）函数，这些函数支持在</target>
        </trans-unit>
        <trans-unit id="8136f764d1a688860eb12b8f894dd5ef02bf2211" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;INIT&lt;/code&gt; blocks are run just before the Perl runtime begins execution, in &quot;first in, first out&quot; (FIFO) order.</source>
          <target state="translated">&lt;code&gt;INIT&lt;/code&gt; 块在Perl运行时开始执行之前按&amp;ldquo;先进先出&amp;rdquo;（FIFO）顺序运行。</target>
        </trans-unit>
        <trans-unit id="049029b01299e7df2890b6b0dfade6fe1eb0300f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;INSTALLDIRS&lt;/code&gt; =vendor or equivalent. See &lt;code&gt;INSTALL&lt;/code&gt; for details.</source>
          <target state="translated">&lt;code&gt;INSTALLDIRS&lt;/code&gt; =供应商或同等产品。有关详细信息，请参见 &lt;code&gt;INSTALL&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bee0fffaa1deb24214806a0db486b288afec1012" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IO::Dir&lt;/code&gt; also provides an interface to reading directories via a tied hash. The tied hash extends the interface beyond just the directory reading routines by the use of &lt;code&gt;&lt;a href=&quot;../functions/lstat&quot;&gt;lstat&lt;/a&gt;&lt;/code&gt;, from the &lt;code&gt;File::stat&lt;/code&gt; package, &lt;code&gt;&lt;a href=&quot;../functions/unlink&quot;&gt;unlink&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../functions/rmdir&quot;&gt;rmdir&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../functions/utime&quot;&gt;utime&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;IO::Dir&lt;/code&gt; 还提供了通过绑定哈希读取目录的接口。绑定的哈希通过使用 &lt;code&gt;&lt;a href=&quot;../functions/lstat&quot;&gt;lstat&lt;/a&gt;&lt;/code&gt; 从 &lt;code&gt;File::stat&lt;/code&gt; 包， &lt;code&gt;&lt;a href=&quot;../functions/unlink&quot;&gt;unlink&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../functions/rmdir&quot;&gt;rmdir&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;../functions/utime&quot;&gt;utime&lt;/a&gt;&lt;/code&gt; 扩展了接口，不仅限于目录读取例程。</target>
        </trans-unit>
        <trans-unit id="c5cd121c621a4892a83a568405af04eb41cfd019" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IO::File&lt;/code&gt; inherits from &lt;code&gt;IO::Handle&lt;/code&gt; and &lt;code&gt;IO::Seekable&lt;/code&gt; . It extends these classes with methods that are specific to file handles.</source>
          <target state="translated">&lt;code&gt;IO::File&lt;/code&gt; 继承自 &lt;code&gt;IO::Handle&lt;/code&gt; 和 &lt;code&gt;IO::Seekable&lt;/code&gt; 。它使用特定于文件句柄的方法扩展了这些类。</target>
        </trans-unit>
        <trans-unit id="181d096ff73f80c5fefbd49a6a2ace18cb883e5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IO::Handle&lt;/code&gt; is the base class for all other IO handle classes. It is not intended that objects of &lt;code&gt;IO::Handle&lt;/code&gt; would be created directly, but instead &lt;code&gt;IO::Handle&lt;/code&gt; is inherited from by several other classes in the IO hierarchy.</source>
          <target state="translated">&lt;code&gt;IO::Handle&lt;/code&gt; 是所有其他IO句柄类的基类。不打算直接创建 &lt;code&gt;IO::Handle&lt;/code&gt; 对象，而是 &lt;code&gt;IO::Handle&lt;/code&gt; 由IO层次结构中的其他几个类继承。</target>
        </trans-unit>
        <trans-unit id="d968d8f7d184fabf28c8b22db7363ce4a8a51514" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IO::Pipe&lt;/code&gt; provides an interface to creating pipes between processes.</source>
          <target state="translated">&lt;code&gt;IO::Pipe&lt;/code&gt; 提供了在进程之间创建管道的接口。</target>
        </trans-unit>
        <trans-unit id="121507ef92369be28eeae4949c989ca1be6ada6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IO::Poll&lt;/code&gt; is a simple interface to the system level poll routine.</source>
          <target state="translated">&lt;code&gt;IO::Poll&lt;/code&gt; 是系统级轮询例程的简单接口。</target>
        </trans-unit>
        <trans-unit id="b762583822e0aaee851ce4fa15cdffd15a962862" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IO::Seekable&lt;/code&gt; does not have a constructor of its own as it is intended to be inherited by other &lt;code&gt;IO::Handle&lt;/code&gt; based objects. It provides methods which allow seeking of the file descriptors.</source>
          <target state="translated">&lt;code&gt;IO::Seekable&lt;/code&gt; 没有自己的构造函数，因为它打算被其他基于 &lt;code&gt;IO::Handle&lt;/code&gt; 的对象继承。它提供了允许查找文件描述符的方法。</target>
        </trans-unit>
        <trans-unit id="db1b75ece72a66c0d61b6aa7b994a4cee97c3529" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IO::Socket::INET&lt;/code&gt; provides an object interface to creating and using sockets in the AF_INET domain. It is built upon the &lt;a href=&quot;../socket&quot;&gt;IO::Socket&lt;/a&gt; interface and inherits all the methods defined by &lt;a href=&quot;../socket&quot;&gt;IO::Socket&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;IO::Socket::INET&lt;/code&gt; 提供了一个对象接口，用于在AF_INET域中创建和使用套接字。它基于&lt;a href=&quot;../socket&quot;&gt;IO :: Socket&lt;/a&gt;接口构建，并继承了&lt;a href=&quot;../socket&quot;&gt;IO :: Socket&lt;/a&gt;定义的所有方法。</target>
        </trans-unit>
        <trans-unit id="ac39f2a91093d9b2c233aa1a1fa7511814ecbb5a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IO::Socket::UNIX&lt;/code&gt; provides an object interface to creating and using sockets in the AF_UNIX domain. It is built upon the &lt;a href=&quot;../socket&quot;&gt;IO::Socket&lt;/a&gt; interface and inherits all the methods defined by &lt;a href=&quot;../socket&quot;&gt;IO::Socket&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;IO::Socket::UNIX&lt;/code&gt; 提供了一个对象接口，用于在AF_UNIX域中创建和使用套接字。它基于&lt;a href=&quot;../socket&quot;&gt;IO :: Socket&lt;/a&gt;接口构建，并继承了&lt;a href=&quot;../socket&quot;&gt;IO :: Socket&lt;/a&gt;定义的所有方法。</target>
        </trans-unit>
        <trans-unit id="10cce9491bc1ee060453ba6f15ad058333b7daa9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IO::Socket&lt;/code&gt; only defines methods for those operations which are common to all types of socket. Operations which are specified to a socket in a particular domain have methods defined in sub classes of &lt;code&gt;IO::Socket&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;IO::Socket&lt;/code&gt; 只为所有类型的套接字通用的那些操作定义方法。在特定域中指定给套接字的操作具有在 &lt;code&gt;IO::Socket&lt;/code&gt; 子类中定义的方法</target>
        </trans-unit>
        <trans-unit id="dd4122d764f9adaaacb15138a9de4abe82a136c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IO::Socket&lt;/code&gt; provides an object interface to creating and using sockets. It is built upon the &lt;a href=&quot;handle&quot;&gt;IO::Handle&lt;/a&gt; interface and inherits all the methods defined by &lt;a href=&quot;handle&quot;&gt;IO::Handle&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;IO::Socket&lt;/code&gt; 提供了创建和使用套接字的对象接口。它建立在&lt;a href=&quot;handle&quot;&gt;IO :: Handle&lt;/a&gt;接口的基础上，并继承了&lt;a href=&quot;handle&quot;&gt;IO :: Handle&lt;/a&gt;定义的所有方法。</target>
        </trans-unit>
        <trans-unit id="c8213ac1eede062f215203877643d19e45fea00f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IO::Socket&lt;/code&gt; will export all functions (and constants) defined by &lt;a href=&quot;../socket&quot;&gt;Socket&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;IO::Socket&lt;/code&gt; 将导出&lt;a href=&quot;../socket&quot;&gt;Socket&lt;/a&gt;定义的所有函数（和常量）。</target>
        </trans-unit>
        <trans-unit id="cd83dcf6db900152f50ebff530a4285e2ee66534" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IO::Zlib&lt;/code&gt; provides an IO:: style interface to &lt;a href=&quot;../compress/zlib&quot;&gt;Compress::Zlib&lt;/a&gt; and hence to gzip/zlib compressed files. It provides many of the same methods as the &lt;a href=&quot;handle&quot;&gt;IO::Handle&lt;/a&gt; interface.</source>
          <target state="translated">&lt;code&gt;IO::Zlib&lt;/code&gt; 为&lt;a href=&quot;../compress/zlib&quot;&gt;Compress &lt;/a&gt;:: Zlib提供了IO ::样式接口，从而为gzip / zlib压缩文件提供了接口。它提供了许多与&lt;a href=&quot;handle&quot;&gt;IO :: Handle&lt;/a&gt;接口相同的方法。</target>
        </trans-unit>
        <trans-unit id="d042d00c63eebc013a6991f1938ad31a79350e86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IO&lt;/code&gt; provides a simple mechanism to load several of the IO modules in one go. The IO modules belonging to the core are:</source>
          <target state="translated">&lt;code&gt;IO&lt;/code&gt; 提供了一种简单的机制，可以一次性加载多个IO模块。属于核心的IO模块是：</target>
        </trans-unit>
        <trans-unit id="39b3396d21c463d28843aca7f77f27ca180d2d8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IPC::SysV&lt;/code&gt; defines and conditionally exports all the constants defined in your system include files which are needed by the SysV IPC calls. Common ones include</source>
          <target state="translated">&lt;code&gt;IPC::SysV&lt;/code&gt; 定义并有条件地导出系统中包含的所有常量，这些都是SysV IPC调用所需的文件。常见的包括</target>
        </trans-unit>
        <trans-unit id="1562c285ab3451fd66d7a87fd5d4aa1e870611f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ITIMER_PROF&lt;/code&gt; counts time when either the process virtual time or when the operating system is running on behalf of the process (such as I/O). (This time is also known as the</source>
          <target state="translated">&lt;code&gt;ITIMER_PROF&lt;/code&gt; 对进程虚拟时间或操作系统代表进程（例如I / O）运行时的时间进行计数。（此时间也称为</target>
        </trans-unit>
        <trans-unit id="916bb6dbaa0ac1eb30ba18d51c95fd8868d21c77" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ITIMER_REAL&lt;/code&gt; results in &lt;code&gt;&lt;a href=&quot;../functions/alarm&quot;&gt;alarm()&lt;/a&gt;&lt;/code&gt;-like behaviour. Time is counted in</source>
          <target state="translated">&lt;code&gt;ITIMER_REAL&lt;/code&gt; 导致类似 &lt;code&gt;&lt;a href=&quot;../functions/alarm&quot;&gt;alarm()&lt;/a&gt;&lt;/code&gt; 的行为。时间算在内</target>
        </trans-unit>
        <trans-unit id="b3514de407012b9ae61544516605c3b826d3bb18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ITIMER_VIRTUAL&lt;/code&gt; counts time in (process)</source>
          <target state="translated">&lt;code&gt;ITIMER_VIRTUAL&lt;/code&gt; 计入（处理）中的时间</target>
        </trans-unit>
        <trans-unit id="0f6ee03b655d23ae15f7f2e38af35133c2a4bc9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;KEY&lt;/code&gt; does not already have a message queue associated with it, and &lt;code&gt;&lt;i&gt;FLAGS&lt;/i&gt; &amp;amp; IPC_CREAT&lt;/code&gt; is true.</source>
          <target state="translated">&lt;code&gt;KEY&lt;/code&gt; 尚未与之关联的消息队列，并且 &lt;code&gt;&lt;i&gt;FLAGS&lt;/i&gt; &amp;amp; IPC_CREAT&lt;/code&gt; 为true。</target>
        </trans-unit>
        <trans-unit id="c5066360834717c79b8e3ffa4cb0f67c9b492685" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;KEY&lt;/code&gt; does not already have a semaphore identifier associated with it, and &lt;code&gt;&lt;i&gt;FLAGS&lt;/i&gt; &amp;amp; IPC_CREAT&lt;/code&gt; is true.</source>
          <target state="translated">&lt;code&gt;KEY&lt;/code&gt; 尚未与之关联的信号灯标识符，并且 &lt;code&gt;&lt;i&gt;FLAGS&lt;/i&gt; &amp;amp; IPC_CREAT&lt;/code&gt; 为true。</target>
        </trans-unit>
        <trans-unit id="207e986bdced98f163af9eb0b72ea2467c1786de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;KEY&lt;/code&gt; does not already have a shared memory segment associated with it, and &lt;code&gt;&lt;i&gt;FLAGS&lt;/i&gt; &amp;amp; IPC_CREAT&lt;/code&gt; is true.</source>
          <target state="translated">&lt;code&gt;KEY&lt;/code&gt; 尚未与之关联的共享内存段，并且 &lt;code&gt;&lt;i&gt;FLAGS&lt;/i&gt; &amp;amp; IPC_CREAT&lt;/code&gt; 为true。</target>
        </trans-unit>
        <trans-unit id="ecd4729fb1227e456d3b0559a1c30aa293feb4dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;KEY&lt;/code&gt; is equal to &lt;code&gt;IPC_PRIVATE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;KEY&lt;/code&gt; 等于 &lt;code&gt;IPC_PRIVATE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="424cc25eb593661c978d8429628c32197f526490" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;L&amp;lt;/&quot;sec&quot;&amp;gt;&lt;/code&gt; or &lt;code&gt;L&amp;lt;/sec&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;L&amp;lt;/&quot;sec&quot;&amp;gt;&lt;/code&gt; 或 &lt;code&gt;L&amp;lt;/sec&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="49c6e0dffc5ce09a6e54b619b6e6a27123a96c0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;L&amp;lt;name/&quot;sec&quot;&amp;gt;&lt;/code&gt; or &lt;code&gt;L&amp;lt;name/sec&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;L&amp;lt;name/&quot;sec&quot;&amp;gt;&lt;/code&gt; 或 &lt;code&gt;L&amp;lt;name/sec&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d7cfda930437215fcc4324e241d8c8fa32a8d9ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;L&amp;lt;text|/&quot;sec&quot;&amp;gt;&lt;/code&gt; or &lt;code&gt;L&amp;lt;text|/sec&amp;gt;&lt;/code&gt; or &lt;code&gt;L&amp;lt;text|&quot;sec&quot;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;L&amp;lt;text|/&quot;sec&quot;&amp;gt;&lt;/code&gt; 或 &lt;code&gt;L&amp;lt;text|/sec&amp;gt;&lt;/code&gt; 或 &lt;code&gt;L&amp;lt;text|&quot;sec&quot;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="469caa270c3821b85844c5da0bf1d2d3e7023d6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;L&amp;lt;text|name/&quot;sec&quot;&amp;gt;&lt;/code&gt; or &lt;code&gt;L&amp;lt;text|name/sec&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;L&amp;lt;text|name/&quot;sec&quot;&amp;gt;&lt;/code&gt; 或 &lt;code&gt;L&amp;lt;text|name/sec&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7e6362a82e5577816d56f0e78605608fc1269151" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LANG&lt;/code&gt; is the &quot;catch-all&quot; locale environment variable. If it is set, it is used as the last resort after the overall &lt;code&gt;LC_ALL&lt;/code&gt; and the category-specific &lt;code&gt;LC_&lt;i&gt;foo&lt;/i&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LANG&lt;/code&gt; 是&amp;ldquo;包罗万象&amp;rdquo;的语言环境环境变量。如果已设置，则将其用作整体 &lt;code&gt;LC_ALL&lt;/code&gt; 和特定于类别的 &lt;code&gt;LC_&lt;i&gt;foo&lt;/i&gt;&lt;/code&gt; 之后的最后手段。</target>
        </trans-unit>
        <trans-unit id="cbe0cb20951383c21785bc33780d8bd2ac85ed7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LC_ALL&lt;/code&gt; is the &quot;override-all&quot; locale environment variable. If set, it overrides all the rest of the locale environment variables.</source>
          <target state="translated">&lt;code&gt;LC_ALL&lt;/code&gt; 是&amp;ldquo;全部覆盖&amp;rdquo;区域设置环境变量。如果设置，它将覆盖所有其余的区域设置环境变量。</target>
        </trans-unit>
        <trans-unit id="2a605bd93ba14e29e4f244383a9eb2e02ef1549c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LC_ALL&lt;/code&gt;&lt;code&gt;LC_COLLATE&lt;/code&gt;&lt;code&gt;LC_CTYPE&lt;/code&gt;&lt;code&gt;LC_MONETARY&lt;/code&gt;&lt;code&gt;LC_NUMERIC&lt;/code&gt;&lt;code&gt;LC_TIME&lt;/code&gt;&lt;code&gt;LC_MESSAGES&lt;/code&gt; on systems that support them.</source>
          <target state="translated">&lt;code&gt;LC_ALL&lt;/code&gt; &lt;code&gt;LC_COLLATE&lt;/code&gt; &lt;code&gt;LC_CTYPE&lt;/code&gt; &lt;code&gt;LC_MONETARY&lt;/code&gt; &lt;code&gt;LC_NUMERIC&lt;/code&gt; &lt;code&gt;LC_TIME&lt;/code&gt; &lt;code&gt;LC_MESSAGES&lt;/code&gt; 在支持它们的系统上。</target>
        </trans-unit>
        <trans-unit id="dbb846da3ade953702217e651317e4e13b66b385" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LDLOADLIBS&lt;/code&gt; is an environment variable used by the linker to link modules &lt;code&gt;/ext&lt;/code&gt; modules to glibc. Currently, that environment variable is not getting populated by a combination of &lt;code&gt;Config&lt;/code&gt; entries and &lt;code&gt;ExtUtil::MakeMaker&lt;/code&gt; . While there may be a bug somewhere in Perl's configuration or &lt;code&gt;ExtUtil::MakeMaker&lt;/code&gt; causing the problem, the most likely cause is an incomplete understanding of Sun Studio by this author. Further investigation is needed to get this working better.</source>
          <target state="translated">&lt;code&gt;LDLOADLIBS&lt;/code&gt; 是链接器用来将模块 &lt;code&gt;/ext&lt;/code&gt; 模块链接到glibc 的环境变量。当前，该环境变量尚未通过 &lt;code&gt;Config&lt;/code&gt; 条目和 &lt;code&gt;ExtUtil::MakeMaker&lt;/code&gt; 的组合来填充。虽然可能是Perl的配置或 &lt;code&gt;ExtUtil::MakeMaker&lt;/code&gt; 某个错误导致了该问题，但最有可能的原因是该作者对Sun Studio的理解不完整。需要进一步调查以使此功能更好地工作。</target>
        </trans-unit>
        <trans-unit id="c5b9a4de9a3ae26621d0664f9d7809fc1540d360" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_ALERT&lt;/code&gt; - action must be taken immediately</source>
          <target state="translated">&lt;code&gt;LOG_ALERT&lt;/code&gt; -必须立即采取行动</target>
        </trans-unit>
        <trans-unit id="237f0827d3b068adf7a9e035db022146d0403fad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_AUDIT&lt;/code&gt; - audit daemon (IRIX); falls back to &lt;code&gt;LOG_AUTH&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;LOG_AUDIT&lt;/code&gt; -审核守护程序（IRIX）; 退回到 &lt;code&gt;LOG_AUTH&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f42cb5530d45add6db1cc3521ca69ba4aa90a4c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_AUTH&lt;/code&gt; - security/authorization messages</source>
          <target state="translated">&lt;code&gt;LOG_AUTH&lt;/code&gt; -安全/授权消息</target>
        </trans-unit>
        <trans-unit id="3bbcebef65476f32b381cbd6c89052eca4c688cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_AUTHPRIV&lt;/code&gt; - security/authorization messages (private)</source>
          <target state="translated">&lt;code&gt;LOG_AUTHPRIV&lt;/code&gt; -安全/授权消息（私有）</target>
        </trans-unit>
        <trans-unit id="66c8e15153bb0c1370176e3d28f81ed1595261c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_CONSOLE&lt;/code&gt; - &lt;code&gt;/dev/console&lt;/code&gt; output (FreeBSD); falls back to &lt;code&gt;LOG_USER&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;LOG_CONSOLE&lt;/code&gt; - &lt;code&gt;/dev/console&lt;/code&gt; 输出（FreeBSD的）; 退回到 &lt;code&gt;LOG_USER&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4e27b059f195281b93d28d6c22b89428b572bc11" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_CRIT&lt;/code&gt; - critical conditions</source>
          <target state="translated">&lt;code&gt;LOG_CRIT&lt;/code&gt; -关键条件</target>
        </trans-unit>
        <trans-unit id="ba52df2842e88f76f3ea0623ac07d547b385a40d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_CRON&lt;/code&gt; - clock daemons (&lt;b&gt;cron&lt;/b&gt; and &lt;b&gt;at&lt;/b&gt;)</source>
          <target state="translated">&lt;code&gt;LOG_CRON&lt;/code&gt; -时钟守护程序（&lt;b&gt;cron&lt;/b&gt;和&lt;b&gt;at&lt;/b&gt;）</target>
        </trans-unit>
        <trans-unit id="2dbc2c1ef0a0587ee5b98f17edb40e479195a525" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_DAEMON&lt;/code&gt; - system daemons without separate facility value</source>
          <target state="translated">&lt;code&gt;LOG_DAEMON&lt;/code&gt; -没有单独设施值的系统守护程序</target>
        </trans-unit>
        <trans-unit id="db33909f631279fc62be328b4a3cd8cd3c40aa86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_DEBUG&lt;/code&gt; - debug-level message</source>
          <target state="translated">&lt;code&gt;LOG_DEBUG&lt;/code&gt; -调试级别的消息</target>
        </trans-unit>
        <trans-unit id="547e87ee1a00b634dd9ca9748f7b928c07f9c109" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_EMERG&lt;/code&gt; - system is unusable</source>
          <target state="translated">&lt;code&gt;LOG_EMERG&lt;/code&gt; -系统无法使用</target>
        </trans-unit>
        <trans-unit id="84f38a55790519e7289c11e43a4b3e68d8bf1ff3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_ERR&lt;/code&gt; - error conditions</source>
          <target state="translated">&lt;code&gt;LOG_ERR&lt;/code&gt; -错误条件</target>
        </trans-unit>
        <trans-unit id="923dddf491efec34b2f743e971b8ab73b788823c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_FTP&lt;/code&gt; - FTP daemon</source>
          <target state="translated">&lt;code&gt;LOG_FTP&lt;/code&gt; -FTP守护程序</target>
        </trans-unit>
        <trans-unit id="2810346d0bc86bf8fd5e7cc51a029ebc1866a38a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_INFO&lt;/code&gt; - informational message</source>
          <target state="translated">&lt;code&gt;LOG_INFO&lt;/code&gt; -参考消息</target>
        </trans-unit>
        <trans-unit id="810d439031214499a1a46da8644f07fba574bb75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_INSTALL&lt;/code&gt; - installer subsystem (Mac OS X); falls back to &lt;code&gt;LOG_USER&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;LOG_INSTALL&lt;/code&gt; -安装程序子系统（Mac OS X）；退回到 &lt;code&gt;LOG_USER&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a72f3a1f407764857c6cbddf292afebce5708e26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_KERN&lt;/code&gt; - kernel messages</source>
          <target state="translated">&lt;code&gt;LOG_KERN&lt;/code&gt; -内核消息</target>
        </trans-unit>
        <trans-unit id="145dd6e7d02588995730762df479040434b90e87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_LAUNCHD&lt;/code&gt; - launchd - general bootstrap daemon (Mac OS X); falls back to &lt;code&gt;LOG_DAEMON&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;LOG_LAUNCHD&lt;/code&gt; -已启动-常规引导守护程序（Mac OS X）；退回到 &lt;code&gt;LOG_DAEMON&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="214ec5d4b6bc561d6ad7defc22b80f3e2275f46e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_LFMT&lt;/code&gt; - logalert facility; falls back to &lt;code&gt;LOG_USER&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;LOG_LFMT&lt;/code&gt; -logalert工具；退回到 &lt;code&gt;LOG_USER&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9f9e78f2c8460f654b3f822d56b4a20c7f97a05c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_LOCAL0&lt;/code&gt; through &lt;code&gt;LOG_LOCAL7&lt;/code&gt; - reserved for local use</source>
          <target state="translated">&lt;code&gt;LOG_LOCAL0&lt;/code&gt; 至 &lt;code&gt;LOG_LOCAL7&lt;/code&gt; -保留供本地使用</target>
        </trans-unit>
        <trans-unit id="9d106db2a7093dbbcdde8fcb1a2d6d87e9b01b80" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_LPR&lt;/code&gt; - line printer subsystem</source>
          <target state="translated">&lt;code&gt;LOG_LPR&lt;/code&gt; -行式打印机子系统</target>
        </trans-unit>
        <trans-unit id="fc9ecbaae62209484725350ec9107688a7090a3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_MAIL&lt;/code&gt; - mail subsystem</source>
          <target state="translated">&lt;code&gt;LOG_MAIL&lt;/code&gt; -邮件子系统</target>
        </trans-unit>
        <trans-unit id="68a0b196a5afe3c65a5416f6289f9e5ab591cf16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_NETINFO&lt;/code&gt; - NetInfo subsystem (Mac OS X); falls back to &lt;code&gt;LOG_DAEMON&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;LOG_NETINFO&lt;/code&gt; -NetInfo子系统（Mac OS X）; 退回到 &lt;code&gt;LOG_DAEMON&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f43420fd0cb94acf50948f76eec025cbaa77e17e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_NEWS&lt;/code&gt; - USENET news subsystem</source>
          <target state="translated">&lt;code&gt;LOG_NEWS&lt;/code&gt; -USENET新闻子系统</target>
        </trans-unit>
        <trans-unit id="2ec24d33b2ae9e7047498fb9e3d3584709723001" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_NOTICE&lt;/code&gt; - normal, but significant, condition</source>
          <target state="translated">&lt;code&gt;LOG_NOTICE&lt;/code&gt; -正常但重要的状况</target>
        </trans-unit>
        <trans-unit id="e6a5a7e6bfe7417ec509bcbeaa879f188f7d835f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_NTP&lt;/code&gt; - NTP subsystem (FreeBSD, NetBSD); falls back to &lt;code&gt;LOG_DAEMON&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;LOG_NTP&lt;/code&gt; -NTP子系统（FreeBSD，NetBSD）; 退回到 &lt;code&gt;LOG_DAEMON&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c8ed9c91dc90bf6651bc34dcf127ecc62698e74f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_RAS&lt;/code&gt; - Remote Access Service (VPN / PPP) (Mac OS X); falls back to &lt;code&gt;LOG_AUTH&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;LOG_RAS&lt;/code&gt; -远程访问服务（VPN / PPP）（Mac OS X）；退回到 &lt;code&gt;LOG_AUTH&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1d1370c52935d36881489c690df052afe5808f6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_REMOTEAUTH&lt;/code&gt; - remote authentication/authorization (Mac OS X); falls back to &lt;code&gt;LOG_AUTH&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;LOG_REMOTEAUTH&lt;/code&gt; -远程身份验证/授权（Mac OS X）；退回到 &lt;code&gt;LOG_AUTH&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="99ed180210288ab3e370d1a6d5c442e1922fb0b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_SECURITY&lt;/code&gt; - security subsystems (firewalling, etc.) (FreeBSD); falls back to &lt;code&gt;LOG_AUTH&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;LOG_SECURITY&lt;/code&gt; -安全子系统（防火墙等）（FreeBSD）；退回到 &lt;code&gt;LOG_AUTH&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="250b3c4116937e10b2dd4bb886f3a9692745b1a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_SYSLOG&lt;/code&gt; - messages generated internally by &lt;b&gt;syslogd&lt;/b&gt;</source>
          <target state="translated">&lt;code&gt;LOG_SYSLOG&lt;/code&gt; - &lt;b&gt;syslogd&lt;/b&gt;内部生成的消息&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="5693d6936c597501156c3bfbaa61d338dc924d55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_USER&lt;/code&gt; (default) - generic user-level messages</source>
          <target state="translated">&lt;code&gt;LOG_USER&lt;/code&gt; （默认）-通用用户级消息</target>
        </trans-unit>
        <trans-unit id="b501add985d47c9765f5bd1b490e959970b698de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_UUCP&lt;/code&gt; - UUCP subsystem</source>
          <target state="translated">&lt;code&gt;LOG_UUCP&lt;/code&gt; -UUCP子系统</target>
        </trans-unit>
        <trans-unit id="3014983e7b8fc4728dedbc24c3bba2111d82a818" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_WARNING&lt;/code&gt; - warning conditions</source>
          <target state="translated">&lt;code&gt;LOG_WARNING&lt;/code&gt; -警告条件</target>
        </trans-unit>
        <trans-unit id="1433a08249bc65ea23ef55820e06c9d207bedd84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LaTeX&lt;/code&gt; docs</source>
          <target state="translated">&lt;code&gt;LaTeX&lt;/code&gt; 文档</target>
        </trans-unit>
        <trans-unit id="29ef25139769a76305576be8c28dfb5626feb920" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;List::Util::XS&lt;/code&gt; can be used as a dependency to ensure List::Util was installed using a C compiler and that the XS version is installed.</source>
          <target state="translated">&lt;code&gt;List::Util::XS&lt;/code&gt; 可用作依赖项，以确保使用C编译器安装List :: Util并已安装XS版本。</target>
        </trans-unit>
        <trans-unit id="0f6594b32e1bb13da602c72066748f19da6777cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;List::Util&lt;/code&gt; contains a selection of subroutines that people have expressed would be nice to have in the perl core, but the usage would not really be high enough to warrant the use of a keyword, and the size so small such that being individual extensions would be wasteful.</source>
          <target state="translated">&lt;code&gt;List::Util&lt;/code&gt; 包含人们表达的选择的子例程，这些子例程可以在perl内核中很好地使用，但是使用率真的不足以保证使用关键字，并且其大小如此之小以至于可以作为单独的扩展名会很浪费。</target>
        </trans-unit>
        <trans-unit id="caed75c6b696cf9b38470cf4de8d8d2a229b0fa1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MEMORY&lt;/code&gt; means that return values from the function will be cached in an ordinary Perl hash variable. The hash variable will not persist after the program exits. This is the default.</source>
          <target state="translated">&lt;code&gt;MEMORY&lt;/code&gt; 意味着该函数的返回值将被缓存在一个普通的Perl哈希变量中。程序退出后，哈希变量将不会保留。这是默认值。</target>
        </trans-unit>
        <trans-unit id="48f95b732cd622ecaa5f9f2a904a2e8c470bada2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MERGE&lt;/code&gt; normally means that the memoized function does not distinguish between list and sclar context, and that return values in both contexts should be stored together. Both &lt;code&gt;LIST_CACHE =&amp;gt;
MERGE&lt;/code&gt; and &lt;code&gt;SCALAR_CACHE =&amp;gt; MERGE&lt;/code&gt; mean the same thing.</source>
          <target state="translated">&lt;code&gt;MERGE&lt;/code&gt; 通常意味着备注函数不会区分列表上下文和声明上下文，并且应将两个上下文中的返回值存储在一起。无论 &lt;code&gt;LIST_CACHE =&amp;gt; MERGE&lt;/code&gt; 和 &lt;code&gt;SCALAR_CACHE =&amp;gt; MERGE&lt;/code&gt; 意味着同样的事情。</target>
        </trans-unit>
        <trans-unit id="591b83ff43053b950080d0a4ce9c5949d6f3c019" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MESSAGE-SPEC&lt;/code&gt; is either a single message-id, a single message number, or a reference to a list of two message numbers.</source>
          <target state="translated">&lt;code&gt;MESSAGE-SPEC&lt;/code&gt; 是单个消息ID，单个消息号或对两个消息号列表的引用。</target>
        </trans-unit>
        <trans-unit id="6b4436b9064bf3c37f88daa98294a385d8b90cd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MESSAGE&lt;/code&gt; can be either an array of lines or a reference to an array.</source>
          <target state="translated">&lt;code&gt;MESSAGE&lt;/code&gt; 可以是行数组或对数组的引用。</target>
        </trans-unit>
        <trans-unit id="e653378310d2f1452e27b8ec6a9a29dcc48a85bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MODE&lt;/code&gt; is optional; the default is &lt;code&gt;LOCK_EX&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;MODE&lt;/code&gt; 是可选的；默认值为 &lt;code&gt;LOCK_EX&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="54cc55c9fcc474e1b57012d8a54afe281f15b529" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MODIFY_&amp;lt;reftype&amp;gt;_ATTRIBUTES&lt;/code&gt; has to return a list of all &quot;bad attributes&quot;. If there are any bad attributes &lt;code&gt;&lt;a href=&quot;functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; croaks.</source>
          <target state="translated">&lt;code&gt;MODIFY_&amp;lt;reftype&amp;gt;_ATTRIBUTES&lt;/code&gt; 必须返回所有&amp;ldquo;不良属性&amp;rdquo;的列表。如果有任何不好的属性，请 &lt;code&gt;&lt;a href=&quot;functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; 杂音。</target>
        </trans-unit>
        <trans-unit id="c9365cb8b2d631f82760b183dda9cef7c6a3f7bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MSGNUM&lt;/code&gt; is a numeric id of an article in the current newsgroup, and will change the current article pointer. &lt;code&gt;MSGID&lt;/code&gt; is the message id of an article as shown in that article's header. It is anticipated that the client will obtain the &lt;code&gt;MSGID&lt;/code&gt; from a list provided by the &lt;code&gt;newnews&lt;/code&gt; command, from references contained within another article, or from the message-id provided in the response to some other commands.</source>
          <target state="translated">&lt;code&gt;MSGNUM&lt;/code&gt; 是当前新闻组中文章的数字ID，它将更改当前文章指针。 &lt;code&gt;MSGID&lt;/code&gt; 是该文章的标题中显示的该文章的消息ID。可以预期，客户端将从 &lt;code&gt;newnews&lt;/code&gt; 命令提供的列表，另一文章中包含的引用，或从对某些其他命令的响应中提供的消息ID中获得 &lt;code&gt;MSGID&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0b82f8a8dfe207b711438bcea7b057597e325f09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Math::BigFloat&lt;/code&gt; exports nothing by default, but can export the &lt;code&gt;bpi()&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;Math::BigFloat&lt;/code&gt; 默认情况下不导出任何内容，但是可以导出 &lt;code&gt;bpi()&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="3eb8ec3365756417fe447a7e9bec6396a236661f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Math::BigInt&lt;/code&gt; exports nothing by default, but can export the following methods:</source>
          <target state="translated">&lt;code&gt;Math::BigInt&lt;/code&gt; 默认情况下不导出任何内容，但是可以导出以下方法：</target>
        </trans-unit>
        <trans-unit id="86796664240378317064dfe323481f8be1c41b3b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Math::Trig&lt;/code&gt; defines many trigonometric functions not defined by the core Perl which defines only the &lt;code&gt;&lt;a href=&quot;../functions/sin&quot;&gt;sin()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../functions/cos&quot;&gt;cos()&lt;/a&gt;&lt;/code&gt;. The constant &lt;b&gt;pi&lt;/b&gt; is also defined as are a few convenience functions for angle conversions, and</source>
          <target state="translated">&lt;code&gt;Math::Trig&lt;/code&gt; 定义了许多三角函数，而核心Perl并未定义，三角函数仅定义 &lt;code&gt;&lt;a href=&quot;../functions/sin&quot;&gt;sin()&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;../functions/cos&quot;&gt;cos()&lt;/a&gt;&lt;/code&gt; 。常数&lt;b&gt;pi&lt;/b&gt;也定义为角度转换的一些便利函数，并且</target>
        </trans-unit>
        <trans-unit id="b2bc5499f96f8d490fa45681e115f5659299bf42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module::Load&lt;/code&gt; cannot do implicit imports, only explicit imports. (in other words, you always have to specify explicitly what you wish to import from a module, even if the functions are in that modules' &lt;code&gt;@EXPORT&lt;/code&gt; )</source>
          <target state="translated">&lt;code&gt;Module::Load&lt;/code&gt; 不能执行隐式导入，只能执行显式导入。（换句话说，即使函数位于该模块的 &lt;code&gt;@EXPORT&lt;/code&gt; 中，也始终必须明确指定要从该模块导入的内容）</target>
        </trans-unit>
        <trans-unit id="90453d3a96e2d1be5968891ad0e49d8b22e92f79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module::Load&lt;/code&gt; eliminates the need for this overhead and will just DWYM.</source>
          <target state="translated">&lt;code&gt;Module::Load&lt;/code&gt; 消除了这种开销，而只是DWYM。</target>
        </trans-unit>
        <trans-unit id="74208c2657c1b301aa548767a2ba31ea449e885f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module::Load&lt;/code&gt; eliminates the need to know whether you are trying to require either a file or a module.</source>
          <target state="translated">&lt;code&gt;Module::Load&lt;/code&gt; 无需知道您是要文件还是模块。</target>
        </trans-unit>
        <trans-unit id="5481b4ff4d996da71a1f92b3cdbdc34272a5f78f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module::Load&lt;/code&gt; imports the two functions - &lt;code&gt;load&lt;/code&gt; and &lt;code&gt;autoload&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Module::Load&lt;/code&gt; 导入两个函数 &lt;code&gt;load&lt;/code&gt; 和 &lt;code&gt;autoload&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f7473e15d5603885d58a7bd80f8714e73bf8218f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Moo&lt;/code&gt; does not implement most of &lt;code&gt;Moose&lt;/code&gt; 's introspection API, so it's often faster when loading your modules. Additionally, none of its dependencies require XS, so it can be installed on machines without a compiler.</source>
          <target state="translated">&lt;code&gt;Moo&lt;/code&gt; 没有实现 &lt;code&gt;Moose&lt;/code&gt; 的大多数自省API，因此在加载模块时通常更快。另外，它的依赖性都不需要XS，因此可以在没有编译器的情况下安装在计算机上。</target>
        </trans-unit>
        <trans-unit id="dc1aeb4ab86751cc99266670857f5c4535affec0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Moose&lt;/code&gt; also has several dependencies on other modules. Most of these are small stand-alone modules, a number of which have been spun off from &lt;code&gt;Moose&lt;/code&gt; . &lt;code&gt;Moose&lt;/code&gt; itself, and some of its dependencies, require a compiler. If you need to install your software on a system without a compiler, or if having</source>
          <target state="translated">&lt;code&gt;Moose&lt;/code&gt; 还对其他模块有几个依赖关系。这些模块中的大多数都是小型独立模块，其中许多模块是从 &lt;code&gt;Moose&lt;/code&gt; 分离出来的。 &lt;code&gt;Moose&lt;/code&gt; 本身及其某些依赖项需要编译器。如果您需要在没有编译器的系统上安装软件，或者</target>
        </trans-unit>
        <trans-unit id="236ade4b13836c1f86dfc2aa8501e99d8d969296" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Moose&lt;/code&gt; can make your code slower to load. &lt;code&gt;Moose&lt;/code&gt; itself is not small, and it does a</source>
          <target state="translated">&lt;code&gt;Moose&lt;/code&gt; 会使您的代码加载速度变慢。 &lt;code&gt;Moose&lt;/code&gt; 本身并不小，它确实</target>
        </trans-unit>
        <trans-unit id="d7a89c86bfe3cc38e7ff728cc8fb18a11f892bbe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Moose&lt;/code&gt; describes itself using its own introspection API. Besides being a cool trick, this means that you can extend &lt;code&gt;Moose&lt;/code&gt; using &lt;code&gt;Moose&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;Moose&lt;/code&gt; 使用自己的自省API进行自我描述。除了是一个很酷的技巧外，这还意味着您可以使用 &lt;code&gt;Moose&lt;/code&gt; 本身来扩展 &lt;code&gt;Moose&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6b75944d26f71c7f1f78e35ade72b0fdfacfa23b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Moose&lt;/code&gt; is a very powerful tool, and we can't cover all of its features here. We encourage you to learn more by reading the &lt;code&gt;Moose&lt;/code&gt; documentation, starting with &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fsearch.cpan.org%2fperldoc%3fMoose%3a%3aManual&quot;&gt;Moose::Manual&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Moose&lt;/code&gt; 是一个非常强大的工具，我们无法在此处介绍其所有功能。我们鼓励您阅读 &lt;code&gt;Moose&lt;/code&gt; 文档（从&lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fsearch.cpan.org%2fperldoc%3fMoose%3a%3aManual&quot;&gt;Moose :: Manual&lt;/a&gt;开始）以了解更多信息。</target>
        </trans-unit>
        <trans-unit id="2ad6b90e9460494e0239b0e0b30a64740a8f84e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Moose&lt;/code&gt; is the maximal option. It has a lot of features, a big ecosystem, and a thriving user base. We also covered &lt;a href=&quot;http://search.cpan.org/perldoc/Moo&quot;&gt;Moo&lt;/a&gt; briefly. &lt;code&gt;Moo&lt;/code&gt; is &lt;code&gt;Moose&lt;/code&gt; lite, and a reasonable alternative when Moose doesn't work for your application.</source>
          <target state="translated">&lt;code&gt;Moose&lt;/code&gt; 是最大的选择。它具有许多功能，庞大的生态系统和蓬勃发展的用户群。我们还简要介绍了&lt;a href=&quot;http://search.cpan.org/perldoc/Moo&quot;&gt;Moo&lt;/a&gt;。 &lt;code&gt;Moo&lt;/code&gt; 是 &lt;code&gt;Moose&lt;/code&gt; 精简版，当Moose不适合您的应用程序时，Moo是一个合理的选择。</target>
        </trans-unit>
        <trans-unit id="69708ad78153d7b9062269d7ac8687dc72ab47ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Moose&lt;/code&gt; lets you define roles the same way you define classes:</source>
          <target state="translated">&lt;code&gt;Moose&lt;/code&gt; 使您可以像定义类一样定义角色：</target>
        </trans-unit>
        <trans-unit id="e59d283b9fa45eb6da20d38a50354a5f65a3e45d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Moose&lt;/code&gt; provides a complete, modern OO system. Its biggest influence is the Common Lisp Object System, but it also borrows ideas from Smalltalk and several other languages. &lt;code&gt;Moose&lt;/code&gt; was created by Stevan Little, and draws heavily from his work on the Perl 6 OO design.</source>
          <target state="translated">&lt;code&gt;Moose&lt;/code&gt; 提供了一个完整的现代OO系统。它的最大影响是Common Lisp对象系统，但它也借鉴了Smalltalk和其他几种语言的想法。 &lt;code&gt;Moose&lt;/code&gt; 由Stevan Little创建，并从他的Perl 6 OO设计工作中大量汲取了灵感。</target>
        </trans-unit>
        <trans-unit id="21aebae246ecd61c624d79bdc52a34c79b45d7da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Moose&lt;/code&gt; provides a layer of declarative &quot;sugar&quot; for defining classes. That sugar is just a set of exported functions that make declaring how your class works simpler and more palatable. This lets you describe</source>
          <target state="translated">&lt;code&gt;Moose&lt;/code&gt; 为定义类提供了一层声明式&amp;ldquo;糖&amp;rdquo;。那个糖只是一组导出的函数，这些函数使您的类的工作更简单，更可口。这可以让您描述</target>
        </trans-unit>
        <trans-unit id="d09bb13c02237f1d2d9dae9e2adb440884c74285" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Moose&lt;/code&gt; provides a number of features:</source>
          <target state="translated">&lt;code&gt;Moose&lt;/code&gt; 提供许多功能：</target>
        </trans-unit>
        <trans-unit id="6eb64932f264053a0590719161b8cb976f4e1ab4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NDBM_File&lt;/code&gt; establishes a connection between a Perl hash variable and a file in NDBM_File format;. You can manipulate the data in the file just as if it were in a Perl hash, but when your program exits, the data will remain in the file, to be used the next time your program runs.</source>
          <target state="translated">&lt;code&gt;NDBM_File&lt;/code&gt; 在Perl哈希变量和NDBM_File格式的文件之间建立连接。您可以像处理Perl哈希一样处理文件中的数据，但是当程序退出时，数据将保留在文件中，以在程序下次运行时使用。</target>
        </trans-unit>
        <trans-unit id="78074d9d3ae7622ec364fb434528c04975ac104b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NDBM_File&lt;/code&gt; has the same problem and the same solution. (Use &lt;code&gt;Memoize::NDBM_File instead of plain NDBM_File.&lt;/code&gt; )</source>
          <target state="translated">&lt;code&gt;NDBM_File&lt;/code&gt; 具有相同的问题和相同的解决方案。（使用 &lt;code&gt;Memoize::NDBM_File instead of plain NDBM_File.&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="0581baa5ac844265bc3183d530bf4c339e0bc42a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NEXT::ACTUAL&lt;/code&gt; is most commonly used in &lt;code&gt;AUTOLOAD&lt;/code&gt; methods, as a means to decline an &lt;code&gt;AUTOLOAD&lt;/code&gt; request, but preserve the normal exception-on-failure semantics:</source>
          <target state="translated">&lt;code&gt;NEXT::ACTUAL&lt;/code&gt; 在 &lt;code&gt;AUTOLOAD&lt;/code&gt; 方法中最常用，它是拒绝 &lt;code&gt;AUTOLOAD&lt;/code&gt; 请求的一种方法，但保留了正常的异常失败语义：</target>
        </trans-unit>
        <trans-unit id="18cf8906396d05eba42604b1fd34e916339ab3a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NFC&lt;/code&gt; , &lt;code&gt;NFD&lt;/code&gt; , &lt;code&gt;NFKC&lt;/code&gt; , &lt;code&gt;NFKD&lt;/code&gt; : by default.</source>
          <target state="translated">&lt;code&gt;NFC&lt;/code&gt; ， &lt;code&gt;NFD&lt;/code&gt; ， &lt;code&gt;NFKC&lt;/code&gt; ， &lt;code&gt;NFKD&lt;/code&gt; ：默认情况下。</target>
        </trans-unit>
        <trans-unit id="1fcf6d595cbf17a9e9ccb45668aea52548b0452a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NYTProf&lt;/code&gt; will generate a report database into the file</source>
          <target state="translated">&lt;code&gt;NYTProf&lt;/code&gt; 将在文件中生成报告数据库</target>
        </trans-unit>
        <trans-unit id="b04556879f1638536b2cd2ee09dcb8a1ebf97cd9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Net::Cmd&lt;/code&gt; exports six subroutines, five of these, &lt;code&gt;CMD_INFO&lt;/code&gt; , &lt;code&gt;CMD_OK&lt;/code&gt; , &lt;code&gt;CMD_MORE&lt;/code&gt; , &lt;code&gt;CMD_REJECT&lt;/code&gt; and &lt;code&gt;CMD_ERROR&lt;/code&gt; , correspond to possible results of &lt;code&gt;response&lt;/code&gt; and &lt;code&gt;status&lt;/code&gt; . The sixth is &lt;code&gt;CMD_PENDING&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;Net::Cmd&lt;/code&gt; 导出六个子例程，其中五个 &lt;code&gt;CMD_INFO&lt;/code&gt; ， &lt;code&gt;CMD_OK&lt;/code&gt; ， &lt;code&gt;CMD_MORE&lt;/code&gt; ， &lt;code&gt;CMD_REJECT&lt;/code&gt; 和 &lt;code&gt;CMD_ERROR&lt;/code&gt; 对应于可能的 &lt;code&gt;response&lt;/code&gt; 结果和 &lt;code&gt;status&lt;/code&gt; 。第六个是 &lt;code&gt;CMD_PENDING&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7845d03a9a449a6da30d7bde75f56559c5b3510e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Net::Cmd&lt;/code&gt; is a collection of methods that can be inherited by a sub class of &lt;code&gt;IO::Handle&lt;/code&gt; . These methods implement the functionality required for a command based protocol, for example FTP and SMTP.</source>
          <target state="translated">&lt;code&gt;Net::Cmd&lt;/code&gt; 是可以由 &lt;code&gt;IO::Handle&lt;/code&gt; 的子类继承的方法的集合。这些方法实现了基于命令的协议（例如FTP和SMTP）所需的功能。</target>
        </trans-unit>
        <trans-unit id="254926e3b1fdaf67c80f0581067758f47f75089e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Net::Config&lt;/code&gt; defines the following methods. They are methods as they are invoked as class methods. This is because &lt;code&gt;Net::Config&lt;/code&gt; inherits from &lt;code&gt;Net::LocalCfg&lt;/code&gt; so you can override these methods if you want.</source>
          <target state="translated">&lt;code&gt;Net::Config&lt;/code&gt; 定义以下方法。它们是作为类方法调用的方法。这是因为 &lt;code&gt;Net::Config&lt;/code&gt; 继承自 &lt;code&gt;Net::LocalCfg&lt;/code&gt; 因此您可以根据需要覆盖这些方法。</target>
        </trans-unit>
        <trans-unit id="f3230cee7f2d481ff129124c06c210e7e3836e6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Net::Config&lt;/code&gt; holds configuration data for the modules in the libnet distribution. During installation you will be asked for these values.</source>
          <target state="translated">&lt;code&gt;Net::Config&lt;/code&gt; 保存libnet发行版中模块的配置数据。在安装过程中，将要求您提供这些值。</target>
        </trans-unit>
        <trans-unit id="eee62aba7ead75933aba5287b1dfcee92f69a920" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Net::FTP&lt;/code&gt; inherits from &lt;code&gt;Net::Cmd&lt;/code&gt; so methods defined in &lt;code&gt;Net::Cmd&lt;/code&gt; may be used to send commands to the remote FTP server in addition to the methods documented here.</source>
          <target state="translated">&lt;code&gt;Net::FTP&lt;/code&gt; 继承自 &lt;code&gt;Net::Cmd&lt;/code&gt; 因此除了此处记录的方法外， &lt;code&gt;Net::Cmd&lt;/code&gt; 定义的方法还可用于向远程FTP服务器发送命令。</target>
        </trans-unit>
        <trans-unit id="a4c9a6d1ddcfaa49ab8c11cb11394dcdd82b4a1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Net::FTP&lt;/code&gt; is a class implementing a simple FTP client in Perl as described in RFC959. It provides wrappers for a subset of the RFC959 commands.</source>
          <target state="translated">&lt;code&gt;Net::FTP&lt;/code&gt; 是在Perl中实现简单FTP客户端的类，如RFC959中所述。它为RFC959命令的子集提供包装。</target>
        </trans-unit>
        <trans-unit id="71138c73e8a250c76baad4423032ba6d1dba47d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Net::NNTP&lt;/code&gt; inherits from &lt;code&gt;Net::Cmd&lt;/code&gt; so methods defined in &lt;code&gt;Net::Cmd&lt;/code&gt; may be used to send commands to the remote NNTP server in addition to the methods documented here.</source>
          <target state="translated">&lt;code&gt;Net::NNTP&lt;/code&gt; 继承自 &lt;code&gt;Net::Cmd&lt;/code&gt; 因此除了此处记录的方法外， &lt;code&gt;Net::Cmd&lt;/code&gt; 定义的方法还可用于向远程NNTP服务器发送命令。</target>
        </trans-unit>
        <trans-unit id="847fafd47105bd72c7111b1635378a14aed1d84c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Net::NNTP&lt;/code&gt; is a class implementing a simple NNTP client in Perl as described in RFC977 and RFC4642.</source>
          <target state="translated">&lt;code&gt;Net::NNTP&lt;/code&gt; 是一个在Perl中实现简单NNTP客户端的类，如RFC977和RFC4642中所述。</target>
        </trans-unit>
        <trans-unit id="b36382e0a9620da9ee21409f3e9c9cfe391785b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Net::Netrc&lt;/code&gt; also implements security checks just like the ftp program, these checks are, first that the .netrc file must be owned by the user and second the ownership permissions should be such that only the owner has read and write access. If these conditions are not met then a warning is output and the .netrc file is not read.</source>
          <target state="translated">&lt;code&gt;Net::Netrc&lt;/code&gt; 也像ftp程序一样实现安全检查，这些检查是，首先，.netrc文件必须由用户拥有，其次，所有权许可应使得只有所有者才具有读取和写入访问权限。如果不满足这些条件，则会输出警告，并且不会读取.netrc文件。</target>
        </trans-unit>
        <trans-unit id="0b6f3d9adca182bb8079550cf17f428b2b3341d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Net::Netrc&lt;/code&gt; is a class implementing a simple interface to the .netrc file used as by the ftp program.</source>
          <target state="translated">&lt;code&gt;Net::Netrc&lt;/code&gt; 是一个类，它实现对ftp程序使用的.netrc文件的简单接口。</target>
        </trans-unit>
        <trans-unit id="123002683b26209fd1f35593f9b8871fd3c658e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Net::POP3&lt;/code&gt; inherits from &lt;code&gt;Net::Cmd&lt;/code&gt; so methods defined in &lt;code&gt;Net::Cmd&lt;/code&gt; may be used to send commands to the remote POP3 server in addition to the methods documented here.</source>
          <target state="translated">&lt;code&gt;Net::POP3&lt;/code&gt; 从继承 &lt;code&gt;Net::Cmd&lt;/code&gt; 所以在定义的方法 &lt;code&gt;Net::Cmd&lt;/code&gt; 可以用于将命令发送到所述远程POP3服务器除了这里记录的方法。</target>
        </trans-unit>
        <trans-unit id="3751bae0845dc1c96565bcff89564528bd51714a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Net::SMTP&lt;/code&gt; inherits from &lt;code&gt;Net::Cmd&lt;/code&gt; so methods defined in &lt;code&gt;Net::Cmd&lt;/code&gt; may be used to send commands to the remote SMTP server in addition to the methods documented here.</source>
          <target state="translated">&lt;code&gt;Net::SMTP&lt;/code&gt; 从继承 &lt;code&gt;Net::Cmd&lt;/code&gt; 所以在定义的方法 &lt;code&gt;Net::Cmd&lt;/code&gt; 可以用于将命令发送到远程SMTP服务器除了这里记录的方法。</target>
        </trans-unit>
        <trans-unit id="86cd710654ff51cb16031bcacedac62e6d1b9ee9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Net::Time&lt;/code&gt; provides subroutines that obtain the time on a remote machine.</source>
          <target state="translated">&lt;code&gt;Net::Time&lt;/code&gt; 提供了获取远程计算机上时间的子例程。</target>
        </trans-unit>
        <trans-unit id="9d533e43a84604b97d548da9e6f5ca63912a9518" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NextPermute&lt;/code&gt; uses string order and &lt;code&gt;NextPermuteNum&lt;/code&gt; numeric order, so you can enumerate all the permutations of &lt;code&gt;0..9&lt;/code&gt; like this:</source>
          <target state="translated">&lt;code&gt;NextPermute&lt;/code&gt; 使用字符串顺序和 &lt;code&gt;NextPermuteNum&lt;/code&gt; 数字顺序，因此您可以像这样枚举 &lt;code&gt;0..9&lt;/code&gt; 的所有排列：</target>
        </trans-unit>
        <trans-unit id="dfe4c93e326640f663cc60745323069016a9e294" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OPLIST&lt;/code&gt; is a list of operations to pass to &lt;code&gt;&lt;a href=&quot;../functions/semop&quot;&gt;semop&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;OPLIST&lt;/code&gt; is a concatenation of smaller lists, each which has three values. The first is the semaphore number, the second is the operation and the last is a flags value. See &lt;a href=&quot;../functions/semop&quot;&gt;semop&lt;/a&gt; for more details. For example</source>
          <target state="translated">&lt;code&gt;OPLIST&lt;/code&gt; 是要传递给 &lt;code&gt;&lt;a href=&quot;../functions/semop&quot;&gt;semop&lt;/a&gt;&lt;/code&gt; 的操作的列表。 &lt;code&gt;OPLIST&lt;/code&gt; 是较小列表的串联，每个列表具有三个值。第一个是信号灯号，第二个是操作，最后一个是标志值。有关更多详细信息，请参见&lt;a href=&quot;../functions/semop&quot;&gt;semop&lt;/a&gt;。例如</target>
        </trans-unit>
        <trans-unit id="33efd347724e242d7141f46f188fed712b7cdd02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OPTIONS&lt;/code&gt; are passed in a hash like fashion, using key and value pairs. Possible options are:</source>
          <target state="translated">&lt;code&gt;OPTIONS&lt;/code&gt; 使用键和值对以类似哈希的方式传递选项。可能的选项是：</target>
        </trans-unit>
        <trans-unit id="fb585ad0e412320d6c5d24d7d6c5a3fe34ee3eee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OPTS&lt;/code&gt; is any combination of the following options:</source>
          <target state="translated">&lt;code&gt;OPTS&lt;/code&gt; 是以下选项的任意组合：</target>
        </trans-unit>
        <trans-unit id="3a55a8fa7d94a2bdb8c9858e6a20e3b3750fcc3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PAGFEXT&lt;/code&gt; - the extension used for the page file, usually &lt;code&gt;.pag&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;PAGFEXT&lt;/code&gt; -用于页面文件的扩展名，通常是 &lt;code&gt;.pag&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="daa83b7935dfe2d0f82e9741ba0c0dcca3ce6ca4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PAIRMAX&lt;/code&gt; - the maximum size of a stored hash entry, including the length of both the key and value.</source>
          <target state="translated">&lt;code&gt;PAIRMAX&lt;/code&gt; -存储的哈希条目的最大大小，包括键和值的长度。</target>
        </trans-unit>
        <trans-unit id="27156ff4eef82c7929a4d4dc40be3d7c530fea3b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PL_errgv&lt;/code&gt; is a perl global of type &lt;code&gt;GV *&lt;/code&gt; that points to the symbol table entry containing the error. &lt;code&gt;ERRSV&lt;/code&gt; therefore refers to the C equivalent of &lt;code&gt;$@&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;PL_errgv&lt;/code&gt; 是 &lt;code&gt;GV *&lt;/code&gt; 类型的perl全局变量，它指向包含错误的符号表条目。因此， &lt;code&gt;ERRSV&lt;/code&gt; 引用 &lt;code&gt;$@&lt;/code&gt; 的C等效项。</target>
        </trans-unit>
        <trans-unit id="28d846ceba760df481e858497307461291dc972a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PL_modglobal&lt;/code&gt; is a general purpose, interpreter global HV for use by extensions that need to keep information on a per-interpreter basis. In a pinch, it can also be used as a symbol table for extensions to share data among each other. It is a good idea to use keys prefixed by the package name of the extension that owns the data.</source>
          <target state="translated">&lt;code&gt;PL_modglobal&lt;/code&gt; 是通用的解释器全局HV，供需要在每个解释器基础上保留信息的扩展使用。在紧要关头，它也可用作扩展彼此共享数据的符号表。使用拥有数据扩展名的程序包名称作为前缀的键是一个好主意。</target>
        </trans-unit>
        <trans-unit id="e462043426a8fdcde1b169905e3026ac756f8a1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;POPn&lt;/code&gt; takes the SV from the top of the stack and obtains its NV either directly (if &lt;code&gt;SvNOK&lt;/code&gt; is set) or by calling the &lt;code&gt;sv_2nv&lt;/code&gt; function. &lt;code&gt;TOPs&lt;/code&gt; takes the next SV from the top of the stack - yes, &lt;code&gt;POPn&lt;/code&gt; uses &lt;code&gt;TOPs&lt;/code&gt; - but doesn't remove it. We then use &lt;code&gt;SvNV&lt;/code&gt; to get the NV from &lt;code&gt;leftsv&lt;/code&gt; in the same way as before - yes, &lt;code&gt;POPn&lt;/code&gt; uses &lt;code&gt;SvNV&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;POPn&lt;/code&gt; 从堆栈顶部获取SV，并直接（如果已设置 &lt;code&gt;SvNOK&lt;/code&gt; ）或通过调用 &lt;code&gt;sv_2nv&lt;/code&gt; 函数获得其NV 。 &lt;code&gt;TOPs&lt;/code&gt; 需要从堆栈的顶部的下一个SV -是的， &lt;code&gt;POPn&lt;/code&gt; 使用 &lt;code&gt;TOPs&lt;/code&gt; -但不会将其删除。然后，我们使用 &lt;code&gt;SvNV&lt;/code&gt; 以与以前相同的方式从 &lt;code&gt;leftsv&lt;/code&gt; 获取NV-是的， &lt;code&gt;POPn&lt;/code&gt; 使用 &lt;code&gt;SvNV&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="db32ebddf13e6153c4db2e4b19915086fc3c701a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PerlIO *&lt;/code&gt; takes the place of FILE *. Like FILE * it should be treated as opaque (it is probably safe to assume it is a pointer to something).</source>
          <target state="translated">&lt;code&gt;PerlIO *&lt;/code&gt; 代替FILE *。像FILE *一样，应将其视为不透明的（可以肯定地认为它是指向某物的指针）。</target>
        </trans-unit>
        <trans-unit id="76de88c3c738162ebd05f1c0526d5c7e44fc7ef4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PerlIO::scalar&lt;/code&gt; only exists to use XSLoader to load C code that provides support for treating a scalar as an &quot;in memory&quot; file. One does not need to explicitly &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; PerlIO::scalar&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;PerlIO::scalar&lt;/code&gt; 仅存在于使用XSLoader加载C代码的过程中，该C代码提供了将标量视为&amp;ldquo;内存中&amp;rdquo;文件的支持。不需要显式 &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; PerlIO::scalar&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="342cc2bd74a057131e7a555a6c648fe333fad065" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Perl_op_dump&lt;/code&gt; can be used to dump an &lt;code&gt;OP&lt;/code&gt; structure or any of its derivatives, and produces output similar to &lt;code&gt;perl -Dx&lt;/code&gt; ; in fact, &lt;code&gt;Perl_dump_eval&lt;/code&gt; will dump the main root of the code being evaluated, exactly like &lt;code&gt;-Dx&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;Perl_op_dump&lt;/code&gt; 可用于转储 &lt;code&gt;OP&lt;/code&gt; 结构或其任何派生结构，并产生类似于 &lt;code&gt;perl -Dx&lt;/code&gt; 的输出；实际上， &lt;code&gt;Perl_dump_eval&lt;/code&gt; 将转储正在评估的代码的主根，就像 &lt;code&gt;-Dx&lt;/code&gt; 一样。</target>
        </trans-unit>
        <trans-unit id="525331da57907ca499d00faca6f8395614de9884" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RECURSIVE_TEST_FILES&lt;/code&gt; can be used to include all directories recursively under &lt;code&gt;t&lt;/code&gt; that contain &lt;code&gt;.t&lt;/code&gt; files. It will be ignored if you provide your own &lt;code&gt;TESTS&lt;/code&gt; attribute, defaults to false.</source>
          <target state="translated">&lt;code&gt;RECURSIVE_TEST_FILES&lt;/code&gt; 可用于以递归方式包含 &lt;code&gt;t&lt;/code&gt; 下包含 &lt;code&gt;.t&lt;/code&gt; 文件的所有目录。如果您提供自己的 &lt;code&gt;TESTS&lt;/code&gt; 属性，它将被忽略，默认为false。</target>
        </trans-unit>
        <trans-unit id="30e1beb351b718ad1963f84891a8a519c473da70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R_OK&lt;/code&gt;&lt;code&gt;SEEK_CUR&lt;/code&gt;&lt;code&gt;SEEK_END&lt;/code&gt;&lt;code&gt;SEEK_SET&lt;/code&gt;&lt;code&gt;STDIN_FILENO&lt;/code&gt;&lt;code&gt;STDOUT_FILENO&lt;/code&gt;&lt;code&gt;STDERR_FILENO&lt;/code&gt;&lt;code&gt;W_OK&lt;/code&gt;&lt;code&gt;X_OK&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;R_OK&lt;/code&gt;&lt;code&gt;SEEK_CUR&lt;/code&gt;&lt;code&gt;SEEK_END&lt;/code&gt;&lt;code&gt;SEEK_SET&lt;/code&gt;&lt;code&gt;STDIN_FILENO&lt;/code&gt;&lt;code&gt;STDOUT_FILENO&lt;/code&gt;&lt;code&gt;STDERR_FILENO&lt;/code&gt;&lt;code&gt;W_OK&lt;/code&gt;&lt;code&gt;X_OK&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="16450031490ec1497810c7f8a187e46a6f98921a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Role::Tiny&lt;/code&gt; provides some of the same features as Moose's role system, but in a much smaller package. Most notably, it doesn't support any sort of attribute declaration, so you have to do that by hand. Still, it's useful, and works well with &lt;code&gt;Class::Accessor&lt;/code&gt; and &lt;code&gt;Class::Tiny&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Role::Tiny&lt;/code&gt; 提供了一些与Moose角色系统相同的功能，但封装更小。最值得注意的是，它不支持任何类型的属性声明，因此您必须手动执行此操作。尽管如此，它还是有用的，并且可以与 &lt;code&gt;Class::Accessor&lt;/code&gt; 和 &lt;code&gt;Class::Tiny&lt;/code&gt; 一起很好地工作。</target>
        </trans-unit>
        <trans-unit id="d1843e3a2f66bfd9e3c971214ca68246db523585" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SA_NOCLDSTOP&lt;/code&gt;&lt;code&gt;SA_NOCLDWAIT&lt;/code&gt;&lt;code&gt;SA_NODEFER&lt;/code&gt;&lt;code&gt;SA_ONSTACK&lt;/code&gt;&lt;code&gt;SA_RESETHAND&lt;/code&gt;&lt;code&gt;SA_RESTART&lt;/code&gt;&lt;code&gt;SA_SIGINFO&lt;/code&gt;&lt;code&gt;SIGABRT&lt;/code&gt;&lt;code&gt;SIGALRM&lt;/code&gt;&lt;code&gt;SIGCHLD&lt;/code&gt;&lt;code&gt;SIGCONT&lt;/code&gt;&lt;code&gt;SIGFPE&lt;/code&gt;&lt;code&gt;SIGHUP&lt;/code&gt;&lt;code&gt;SIGILL&lt;/code&gt;&lt;code&gt;SIGINT&lt;/code&gt;&lt;code&gt;SIGKILL&lt;/code&gt;&lt;code&gt;SIGPIPE&lt;/code&gt;&lt;code&gt;SIGQUIT&lt;/code&gt;&lt;code&gt;SIGSEGV&lt;/code&gt;&lt;code&gt;SIGSTOP&lt;/code&gt;&lt;code&gt;SIGTERM&lt;/code&gt;&lt;code&gt;SIGTSTP&lt;/code&gt;&lt;code&gt;SIGTTIN&lt;/code&gt;&lt;code&gt;SIGTTOU&lt;/code&gt;&lt;code&gt;SIGUSR1&lt;/code&gt;&lt;code&gt;SIGUSR2&lt;/code&gt;&lt;code&gt;SIG_BLOCK&lt;/code&gt;&lt;code&gt;SIG_DFL&lt;/code&gt;&lt;code&gt;SIG_ERR&lt;/code&gt;&lt;code&gt;SIG_IGN&lt;/code&gt;&lt;code&gt;SIG_SETMASK&lt;/code&gt;&lt;code&gt;SIG_UNBLOCK&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;SA_NOCLDSTOP&lt;/code&gt;&lt;code&gt;SA_NOCLDWAIT&lt;/code&gt;&lt;code&gt;SA_NODEFER&lt;/code&gt;&lt;code&gt;SA_ONSTACK&lt;/code&gt;&lt;code&gt;SA_RESETHAND&lt;/code&gt;&lt;code&gt;SA_RESTART&lt;/code&gt;&lt;code&gt;SA_SIGINFO&lt;/code&gt;&lt;code&gt;SIGABRT&lt;/code&gt;&lt;code&gt;SIGALRM&lt;/code&gt;&lt;code&gt;SIGCHLD&lt;/code&gt;&lt;code&gt;SIGCONT&lt;/code&gt;&lt;code&gt;SIGFPE&lt;/code&gt;&lt;code&gt;SIGHUP&lt;/code&gt;&lt;code&gt;SIGILL&lt;/code&gt;&lt;code&gt;SIGINT&lt;/code&gt;&lt;code&gt;SIGKILL&lt;/code&gt;&lt;code&gt;SIGPIPE&lt;/code&gt;&lt;code&gt;SIGQUIT&lt;/code&gt;&lt;code&gt;SIGSEGV&lt;/code&gt;&lt;code&gt;SIGSTOP&lt;/code&gt;&lt;code&gt;SIGTERM&lt;/code&gt;&lt;code&gt;SIGTSTP&lt;/code&gt;&lt;code&gt;SIGTTIN&lt;/code&gt;&lt;code&gt;SIGTTOU&lt;/code&gt;&lt;code&gt;SIGUSR1&lt;/code&gt;&lt;code&gt;SIGUSR2&lt;/code&gt;&lt;code&gt;SIG_BLOCK&lt;/code&gt;&lt;code&gt;SIG_DFL&lt;/code&gt;&lt;code&gt;SIG_ERR&lt;/code&gt;&lt;code&gt;SIG_IGN&lt;/code&gt;&lt;code&gt;SIG_SETMASK&lt;/code&gt;&lt;code&gt;SIG_UNBLOCK&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="38c777a85cb32d1057baca8609cbf656119cb80c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SA_SIGINFO&lt;/code&gt; can have segmentation faults.</source>
          <target state="translated">&lt;code&gt;SA_SIGINFO&lt;/code&gt; 可能存在分段错误。</target>
        </trans-unit>
        <trans-unit id="7e2c7e6ad929d3573c5856ceff8f9188c27a5b2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SCALAR&lt;/code&gt; , &lt;code&gt;UNTIE&lt;/code&gt; and &lt;code&gt;DESTROY&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;SCALAR&lt;/code&gt; ， &lt;code&gt;UNTIE&lt;/code&gt; 和 &lt;code&gt;DESTROY&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="25561b5fed7a4a64f8e1bdca87ed1d440245d47f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SCALAR&lt;/code&gt; is only defined in &lt;b&gt;Tie::StdHash&lt;/b&gt; and &lt;b&gt;Tie::ExtraHash&lt;/b&gt;.</source>
          <target state="translated">&lt;code&gt;SCALAR&lt;/code&gt; 只能在&lt;b&gt;Tie :: StdHash&lt;/b&gt;和&lt;b&gt;Tie :: ExtraHash中&lt;/b&gt;定义SCALAR。</target>
        </trans-unit>
        <trans-unit id="0e0b10cd155805605b61be127d2cd70120b9eb93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SCALAR_CACHE&lt;/code&gt; , &lt;code&gt;LIST_CACHE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;SCALAR_CACHE&lt;/code&gt; ， &lt;code&gt;LIST_CACHE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="71b1d8651e236ece05cb9bdc8409196d019d2844" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SDBM_File&lt;/code&gt; doesn't supply an &lt;code&gt;EXISTS&lt;/code&gt; method, so included in this package is a glue module called &lt;code&gt;Memoize::SDBM_File&lt;/code&gt; which does provide one. Use this instead of plain &lt;code&gt;SDBM_File&lt;/code&gt; to store your cache table on disk in an &lt;code&gt;SDBM_File&lt;/code&gt; database:</source>
          <target state="translated">&lt;code&gt;SDBM_File&lt;/code&gt; 不提供 &lt;code&gt;EXISTS&lt;/code&gt; 方法，因此此软件包中包含一个名为 &lt;code&gt;Memoize::SDBM_File&lt;/code&gt; 的粘合模块，它确实提供了一个方法。使用此文件而不是普通的 &lt;code&gt;SDBM_File&lt;/code&gt; 将缓存表存储在 &lt;code&gt;SDBM_File&lt;/code&gt; 数据库的磁盘上：</target>
        </trans-unit>
        <trans-unit id="3d15d291ef03c3a83408298c576b7a0813776c00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SDBM_File&lt;/code&gt; establishes a connection between a Perl hash variable and a file in SDBM_File format. You can manipulate the data in the file just as if it were in a Perl hash, but when your program exits, the data will remain in the file, to be used the next time your program runs.</source>
          <target state="translated">&lt;code&gt;SDBM_File&lt;/code&gt; 在Perl哈希变量和SDBM_File格式的文件之间建立连接。您可以像处理Perl哈希一样处理文件中的数据，但是当程序退出时，数据将保留在文件中，以在程序下次运行时使用。</target>
        </trans-unit>
        <trans-unit id="c4a6a48f7293646b32f7105b9bdea7360532c924" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SINCE&lt;/code&gt; is a time value and &lt;code&gt;DISTRIBUTIONS&lt;/code&gt; is either a distribution pattern or a reference to a list of distribution patterns. The result is the same as &lt;code&gt;list&lt;/code&gt; , but the groups return will be limited to those created after &lt;code&gt;SINCE&lt;/code&gt; and, if specified, in one of the distribution areas in &lt;code&gt;DISTRIBUTIONS&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;SINCE&lt;/code&gt; 是时间值，而 &lt;code&gt;DISTRIBUTIONS&lt;/code&gt; 是分布模式或对分布模式列表的引用。结果与 &lt;code&gt;list&lt;/code&gt; 相同，但返回的组将限于 &lt;code&gt;SINCE&lt;/code&gt; 之后创建的组，如果指定，则在 &lt;code&gt;DISTRIBUTIONS&lt;/code&gt; 中的一个分布区域中创建。</target>
        </trans-unit>
        <trans-unit id="a5bd8292a055ab0f605f05aa8dacaa769a46c577" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SINCE&lt;/code&gt; is a time value. &lt;code&gt;GROUPS&lt;/code&gt; is either a group pattern or a reference to a list of group patterns. &lt;code&gt;DISTRIBUTIONS&lt;/code&gt; is either a distribution pattern or a reference to a list of distribution patterns.</source>
          <target state="translated">&lt;code&gt;SINCE&lt;/code&gt; 是时间值。 &lt;code&gt;GROUPS&lt;/code&gt; 是组模式或对组模式列表的引用。 &lt;code&gt;DISTRIBUTIONS&lt;/code&gt; 既可以是分发模式，也可以是对分发模式列表的引用。</target>
        </trans-unit>
        <trans-unit id="8363925a9881c16e7bf7ee6b67ca48639f9f465b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;STDIN&lt;/code&gt; and &lt;code&gt;STDOUT&lt;/code&gt; were not set under the filter option. And &lt;code&gt;STDIN=&amp;gt;&lt;i&gt;ENCODING&lt;/i&gt;&lt;/code&gt; and &lt;code&gt;STDOUT=&amp;gt;&lt;i&gt;ENCODING&lt;/i&gt;&lt;/code&gt; didn't work like non-filter version.</source>
          <target state="translated">&lt;code&gt;STDIN&lt;/code&gt; 未在过滤器选项下设置STDIN和 &lt;code&gt;STDOUT&lt;/code&gt; 。而且 &lt;code&gt;STDIN=&amp;gt;&lt;i&gt;ENCODING&lt;/i&gt;&lt;/code&gt; 和 &lt;code&gt;STDOUT=&amp;gt;&lt;i&gt;ENCODING&lt;/i&gt;&lt;/code&gt; 不能像非过滤器版本那样工作。</target>
        </trans-unit>
        <trans-unit id="1592372e2b3fafd08547f899651586efb80ed37d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;STRLEN&lt;/code&gt; is an integer type (Size_t, usually defined as size_t in</source>
          <target state="translated">&lt;code&gt;STRLEN&lt;/code&gt; 是整数类型（Size_t，通常在其中定义为size_t</target>
        </trans-unit>
        <trans-unit id="b33a48675865d3f493065a917725902bcbf05b26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SVf_READONLY&lt;/code&gt; has been supported here only since perl 5.20. To work with earlier versions as well, use &lt;code&gt;SVf_READONLY|SVs_PADTMP&lt;/code&gt; . &lt;code&gt;SVf_READONLY&lt;/code&gt; does not cause the SV in the pad slot to be marked read-only, but simply tells &lt;code&gt;pad_alloc&lt;/code&gt; that it</source>
          <target state="translated">&lt;code&gt;SVf_READONLY&lt;/code&gt; perl 5.20开始才支持SVf_READONLY。要同时使用早期版本，请使用 &lt;code&gt;SVf_READONLY|SVs_PADTMP&lt;/code&gt; 。 &lt;code&gt;SVf_READONLY&lt;/code&gt; 不会引起垫插槽SV被标记为只读，但只是告诉 &lt;code&gt;pad_alloc&lt;/code&gt; 它</target>
        </trans-unit>
        <trans-unit id="bb24ce9f24ade09b2570ac0d0a13adb33f9e68a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;S_IRGRP&lt;/code&gt;&lt;code&gt;S_IROTH&lt;/code&gt;&lt;code&gt;S_IRUSR&lt;/code&gt;&lt;code&gt;S_IRWXG&lt;/code&gt;&lt;code&gt;S_IRWXO&lt;/code&gt;&lt;code&gt;S_IRWXU&lt;/code&gt;&lt;code&gt;S_ISGID&lt;/code&gt;&lt;code&gt;S_ISUID&lt;/code&gt;&lt;code&gt;S_IWGRP&lt;/code&gt;&lt;code&gt;S_IWOTH&lt;/code&gt;&lt;code&gt;S_IWUSR&lt;/code&gt;&lt;code&gt;S_IXGRP&lt;/code&gt;&lt;code&gt;S_IXOTH&lt;/code&gt;&lt;code&gt;S_IXUSR&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;S_IRGRP&lt;/code&gt;&lt;code&gt;S_IROTH&lt;/code&gt;&lt;code&gt;S_IRUSR&lt;/code&gt;&lt;code&gt;S_IRWXG&lt;/code&gt;&lt;code&gt;S_IRWXO&lt;/code&gt;&lt;code&gt;S_IRWXU&lt;/code&gt;&lt;code&gt;S_ISGID&lt;/code&gt;&lt;code&gt;S_ISUID&lt;/code&gt;&lt;code&gt;S_IWGRP&lt;/code&gt;&lt;code&gt;S_IWOTH&lt;/code&gt;&lt;code&gt;S_IWUSR&lt;/code&gt;&lt;code&gt;S_IXGRP&lt;/code&gt;&lt;code&gt;S_IXOTH&lt;/code&gt;&lt;code&gt;S_IXUSR&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b84604732402ed69ebf71e2ffc9500c3d2f8b6a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;S_ISBLK&lt;/code&gt;&lt;code&gt;S_ISCHR&lt;/code&gt;&lt;code&gt;S_ISDIR&lt;/code&gt;&lt;code&gt;S_ISFIFO&lt;/code&gt;&lt;code&gt;S_ISREG&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;S_ISBLK&lt;/code&gt;&lt;code&gt;S_ISCHR&lt;/code&gt;&lt;code&gt;S_ISDIR&lt;/code&gt;&lt;code&gt;S_ISFIFO&lt;/code&gt;&lt;code&gt;S_ISREG&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3f1705fa73ffb1ed6f77c7dd48f4a003fbc42fe8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Scalar::Util&lt;/code&gt; contains a selection of subroutines that people have expressed would be nice to have in the perl core, but the usage would not really be high enough to warrant the use of a keyword, and the size so small such that being individual extensions would be wasteful.</source>
          <target state="translated">&lt;code&gt;Scalar::Util&lt;/code&gt; 包含人们表达的选择子程序的选择，这些子程序可以很好地包含在perl内核中，但是使用率实际上不足以保证使用关键字，并且其大小如此小以至于可以作为单独的扩展名使用会很浪费。</target>
        </trans-unit>
        <trans-unit id="7320b904a1348ab8ee29f736d629145b7d946f83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Scalar::Util&lt;/code&gt; contains both perl and C implementations of many of its functions so that those without access to a C compiler may still use it. However some of the functions are only available when a C compiler was available to compile the XS version of the extension.</source>
          <target state="translated">&lt;code&gt;Scalar::Util&lt;/code&gt; 包含其许多功能的perl和C实现，因此那些无法访问C编译器的人仍可以使用它。但是，某些功能仅在C编译器可用于编译扩展的XS版本时才可用。</target>
        </trans-unit>
        <trans-unit id="ca83b0ae7229fc1620219a7b3cf85ca6438cc57e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Script_Extensions&lt;/code&gt; is thus an improved &lt;code&gt;Script&lt;/code&gt; , in which there are fewer characters in the &lt;code&gt;Common&lt;/code&gt; script, and correspondingly more in other scripts. It is new in Unicode version 6.0, and its data are likely to change significantly in later releases, as things get sorted out. New code should probably be using &lt;code&gt;Script_Extensions&lt;/code&gt; and not plain &lt;code&gt;Script&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;Script_Extensions&lt;/code&gt; 因此是一种改进的 &lt;code&gt;Script&lt;/code&gt; ，其中 &lt;code&gt;Common&lt;/code&gt; 脚本中的字符较少，而其他脚本中的字符相应地更多。它是Unicode 6.0版中的新功能，随着情况的发展，其数据在以后的版本中可能会发生重大变化。新代码可能应该使用 &lt;code&gt;Script_Extensions&lt;/code&gt; 而不是普通 &lt;code&gt;Script&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="74e8ac4ebbca5c842f8180e58a17ee29b6639f38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SelfLoader&lt;/code&gt; is maintained by the perl5-porters. Please direct any questions to the canonical mailing list. Anything that is applicable to the CPAN release can be sent to its maintainer, though.</source>
          <target state="translated">&lt;code&gt;SelfLoader&lt;/code&gt; 由perl5- porter维护。如有任何疑问，请直接向规范邮件列表发送。但是，适用于CPAN版本的所有内容都可以发送到其维护者。</target>
        </trans-unit>
        <trans-unit id="91ded624fc9abf9da5cffcd42e02847813bc5525" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Socket&lt;/code&gt; - networking constants and support functions</source>
          <target state="translated">&lt;code&gt;Socket&lt;/code&gt; -网络常量和支持功能</target>
        </trans-unit>
        <trans-unit id="7cd3abf31dc1b8226d37ec0f945580ebc843bb88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Socket&lt;/code&gt; a low-level module used by, among other things, the &lt;a href=&quot;io/socket&quot;&gt;IO::Socket&lt;/a&gt; family of modules. The following examples demonstrate some low-level uses but a practical program would likely use the higher-level API provided by &lt;code&gt;IO::Socket&lt;/code&gt; or similar instead.</source>
          <target state="translated">&lt;code&gt;Socket&lt;/code&gt; &lt;a href=&quot;io/socket&quot;&gt;IO :: Socket&lt;/a&gt;系列模块使用的低级模块。以下示例演示了一些低级用法，但实际程序可能会使用 &lt;code&gt;IO::Socket&lt;/code&gt; 或类似方法提供的高级API 。</target>
        </trans-unit>
        <trans-unit id="25b8cacd499f22c2ad5bc02ef2c976505abecd19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Storable::drop_utf8&lt;/code&gt; is a blunt tool. There is no facility either to return &lt;b&gt;all&lt;/b&gt; strings as utf8 sequences, or to attempt to convert utf8 data back to 8 bit and &lt;code&gt;croak()&lt;/code&gt; if the conversion fails.</source>
          <target state="translated">&lt;code&gt;Storable::drop_utf8&lt;/code&gt; 是一个钝器。没有任何设施可以将&lt;b&gt;所有&lt;/b&gt;字符串作为utf8序列返回，也无法尝试将utf8数据转换回8位，如果转换失败，则将其转换为 &lt;code&gt;croak()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0e51b3fbdef231165af8ecaa2816829d5a028adf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Storable&lt;/code&gt; isn't a tied hash class at all. You can use it to store a hash to disk and retrieve it again, but you can't modify the hash while it's on the disk. So if you want to store your cache table in a &lt;code&gt;Storable&lt;/code&gt; database, use &lt;code&gt;Memoize::Storable&lt;/code&gt; , which puts a hashlike front-end onto &lt;code&gt;Storable&lt;/code&gt; . The hash table is actually kept in memory, and is loaded from your &lt;code&gt;Storable&lt;/code&gt; file at the time you memoize the function, and stored back at the time you unmemoize the function (or when your program exits):</source>
          <target state="translated">&lt;code&gt;Storable&lt;/code&gt; 根本不是绑定的哈希类。您可以使用它来将哈希存储到磁盘并再次检索它，但是当哈希在磁盘上时无法修改。因此，如果要将缓存表存储在 &lt;code&gt;Storable&lt;/code&gt; 数据库中，请使用 &lt;code&gt;Memoize::Storable&lt;/code&gt; ，它将类似哈希的前端放置到 &lt;code&gt;Storable&lt;/code&gt; 上。哈希表实际上保留在内存中，并在您记住该功能时从您的 &lt;code&gt;Storable&lt;/code&gt; 文件加载，并在您取消对该功能进行记忆时（或在程序退出时）将其存储回：</target>
        </trans-unit>
        <trans-unit id="473d743079fad427614a4cd2d0a5d15458b01a56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Strict&lt;/code&gt; will optionally police the values supplied with other options to ensure they are compliant with RFC1952.</source>
          <target state="translated">&lt;code&gt;Strict&lt;/code&gt; 可以选择管理其他选项提供的值，以确保它们符合RFC1952。</target>
        </trans-unit>
        <trans-unit id="2634e7ecab96eac51ac5f6841ce76af5900ddfef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SvPVX(cv)&lt;/code&gt; contains just the sub name itself, not including the package. For an AUTOLOAD routine in UNIVERSAL or one of its superclasses, &lt;code&gt;CvSTASH(cv)&lt;/code&gt; returns NULL during a method call on a nonexistent package.</source>
          <target state="translated">&lt;code&gt;SvPVX(cv)&lt;/code&gt; 仅包含子名称本身，不包括包。对于UNIVERSAL或 &lt;code&gt;CvSTASH(cv)&lt;/code&gt; 类之一中的AUTOLOAD例程，CvSTASH（cv）在对不存在的包进行方法调用期间返回NULL。</target>
        </trans-unit>
        <trans-unit id="e4284263287abb62d9067e62403bfa7c57791af7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Symbol::delete_package&lt;/code&gt; is a bit too powerful. It undefines every symbol that lives in the specified package. Since perl, for performance reasons, does not perform a symbol table lookup each time a function is called or a global variable is accessed, some code that has already been loaded and that makes use of symbols in package &lt;code&gt;Foo&lt;/code&gt; may stop working after you delete &lt;code&gt;Foo&lt;/code&gt; , even if you reload the &lt;code&gt;Foo&lt;/code&gt; module afterwards.</source>
          <target state="translated">&lt;code&gt;Symbol::delete_package&lt;/code&gt; 有点强大。它取消定义存在于指定包中的每个符号。由于出于性能原因，perl不会在每次调用函数或访问全局变量时都执行符号表查找，因此在删除 &lt;code&gt;Foo&lt;/code&gt; 之后，某些已经加载并且使用 &lt;code&gt;Foo&lt;/code&gt; 包中的符号的代码可能会停止工作，即使您随后重新加载 &lt;code&gt;Foo&lt;/code&gt; 模块也是如此。</target>
        </trans-unit>
        <trans-unit id="1d33e995b16d967301c7242758ce1abfd4f052c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Symbol::delete_package&lt;/code&gt; wipes out a whole package namespace. Note this routine is not exported by default--you may want to import it explicitly.</source>
          <target state="translated">&lt;code&gt;Symbol::delete_package&lt;/code&gt; 擦除整个程序包名称空间。请注意，默认情况下不会导出此例程-您可能需要显式导入。</target>
        </trans-unit>
        <trans-unit id="2881407c50abb98d95f598118df2cf0beb51f77a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Symbol::geniosym&lt;/code&gt; creates an anonymous IO handle. This can be assigned into an existing glob without affecting the non-IO portions of the glob.</source>
          <target state="translated">&lt;code&gt;Symbol::geniosym&lt;/code&gt; 创建一个匿名IO句柄。可以将其分配给现有的glob，而不会影响glob的非IO部分。</target>
        </trans-unit>
        <trans-unit id="6304710bfcc18035fc96ecea6a7a7d1b4365f2cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Symbol::gensym&lt;/code&gt; creates an anonymous glob and returns a reference to it. Such a glob reference can be used as a file or directory handle.</source>
          <target state="translated">&lt;code&gt;Symbol::gensym&lt;/code&gt; 创建一个匿名glob并返回对其的引用。这样的全局引用可以用作文件或目录句柄。</target>
        </trans-unit>
        <trans-unit id="3b1df54b779d123e961a097198a5d301ff9a76cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Symbol::qualify&lt;/code&gt; turns unqualified symbol names into qualified variable names (e.g. &quot;myvar&quot; -&amp;gt; &quot;MyPackage::myvar&quot;). If it is given a second parameter, &lt;code&gt;qualify&lt;/code&gt; uses it as the default package; otherwise, it uses the package of its caller. Regardless, global variable names (e.g. &quot;STDOUT&quot;, &quot;ENV&quot;, &quot;SIG&quot;) are always qualified with &quot;main::&quot;.</source>
          <target state="translated">&lt;code&gt;Symbol::qualify&lt;/code&gt; 将不合格的符号名称转换为合格的变量名称（例如&amp;ldquo; myvar&amp;rdquo;-&amp;gt;&amp;ldquo; MyPackage :: myvar&amp;rdquo;）。如果为它提供了第二个参数， &lt;code&gt;qualify&lt;/code&gt; 会将其用作默认程序包；否则，将其用作默认程序包。否则，它将使用其调用者的程序包。无论如何，全局变量名称（例如&amp;ldquo; STDOUT&amp;rdquo;，&amp;ldquo; ENV&amp;rdquo;，&amp;ldquo; SIG&amp;rdquo;）始终用&amp;ldquo; main ::&amp;rdquo;限定。</target>
        </trans-unit>
        <trans-unit id="36d3940d34d2f6d97b8cbcc2b62c6ada7464408e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Symbol::qualify_to_ref&lt;/code&gt; is just like &lt;code&gt;Symbol::qualify&lt;/code&gt; except that it returns a glob ref rather than a symbol name, so you can use the result even if &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict 'refs'&lt;/code&gt; is in effect.</source>
          <target state="translated">&lt;code&gt;Symbol::qualify_to_ref&lt;/code&gt; 就像 &lt;code&gt;Symbol::qualify&lt;/code&gt; 只不过它返回的是全局引用而不是符号名称，因此即使 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict 'refs'&lt;/code&gt; ，您也可以使用结果。</target>
        </trans-unit>
        <trans-unit id="3b97cf7d30005de1a6539396647cc18ee3bfc6e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Sys::Syslog&lt;/code&gt; exports the following &lt;code&gt;Exporter&lt;/code&gt; tags:</source>
          <target state="translated">&lt;code&gt;Sys::Syslog&lt;/code&gt; 导出以下 &lt;code&gt;Exporter&lt;/code&gt; 标签：</target>
        </trans-unit>
        <trans-unit id="c813dc28c2bae993e91667c602bb5be44271d404" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Sys::Syslog&lt;/code&gt; is a core module, part of the standard Perl distribution since 1990. At this time, modules as we know them didn't exist, the Perl library was a collection of</source>
          <target state="translated">&lt;code&gt;Sys::Syslog&lt;/code&gt; 是核心模块，自1990年以来就是标准Perl发行版的一部分。这时，我们所知道的模块不存在，Perl库是</target>
        </trans-unit>
        <trans-unit id="7568cb65c9c188200eec96ea14f56d0d837a835e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Sys::Syslog&lt;/code&gt; is an interface to the UNIX &lt;code&gt;syslog(3)&lt;/code&gt; program. Call &lt;code&gt;syslog()&lt;/code&gt; with a string priority and a list of &lt;code&gt;&lt;a href=&quot;../functions/printf&quot;&gt;printf()&lt;/a&gt;&lt;/code&gt; args just like &lt;code&gt;syslog(3)&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;Sys::Syslog&lt;/code&gt; 是UNIX &lt;code&gt;syslog(3)&lt;/code&gt; 程序的接口。像字符串 &lt;code&gt;syslog(3)&lt;/code&gt; 一样，以字符串优先级和 &lt;code&gt;&lt;a href=&quot;../functions/printf&quot;&gt;printf()&lt;/a&gt;&lt;/code&gt; 参数列表调用 &lt;code&gt;syslog()&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="5764b6680823ce2de6ec417f2c5a5cac4de54ba1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Sys::Syslog&lt;/code&gt; version v0.07 and older passed the &lt;code&gt;$message&lt;/code&gt; as the formatting string to &lt;code&gt;&lt;a href=&quot;../functions/sprintf&quot;&gt;sprintf()&lt;/a&gt;&lt;/code&gt; even when no formatting arguments were provided. If the code calling &lt;code&gt;syslog()&lt;/code&gt; might execute with older versions of this module, make sure to call the function as &lt;code&gt;syslog($priority, &quot;%s&quot;, $message)&lt;/code&gt; instead of &lt;code&gt;syslog($priority,
$message)&lt;/code&gt; . This protects against hostile formatting sequences that might show up if $message contains tainted data.</source>
          <target state="translated">&lt;code&gt;Sys::Syslog&lt;/code&gt; v0.07及更早版本将 &lt;code&gt;$message&lt;/code&gt; 作为格式字符串传递给 &lt;code&gt;&lt;a href=&quot;../functions/sprintf&quot;&gt;sprintf()&lt;/a&gt;&lt;/code&gt; ,即使未提供格式参数也是如此。如果调用 &lt;code&gt;syslog()&lt;/code&gt; 的代码可以在该模块的旧版本中执行，请确保将函数调用为 &lt;code&gt;syslog($priority, &quot;%s&quot;, $message)&lt;/code&gt; 而不是 &lt;code&gt;syslog($priority, $message)&lt;/code&gt; 。如果$ message包含受污染的数据，这可以防止出现有害的格式化序列。</target>
        </trans-unit>
        <trans-unit id="1f5313b78f03141f017e23634ef660fed87d25a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TAP::Base&lt;/code&gt; provides callback management.</source>
          <target state="translated">&lt;code&gt;TAP::Base&lt;/code&gt; 提供回调管理。</target>
        </trans-unit>
        <trans-unit id="3ad2ff19a7b9905abe9ca7c29a86e5aac4455383" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TAP::Harness&lt;/code&gt; is designed to be easy to configure.</source>
          <target state="translated">&lt;code&gt;TAP::Harness&lt;/code&gt; 旨在易于配置。</target>
        </trans-unit>
        <trans-unit id="f98ff2be528a35677bb4032abf8db41c2f2dfe55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TAP::Object&lt;/code&gt; provides a default constructor and exception model for all &lt;code&gt;TAP::*&lt;/code&gt; classes. Exceptions are raised using &lt;a href=&quot;../carp&quot;&gt;Carp&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;TAP::Object&lt;/code&gt; 为所有 &lt;code&gt;TAP::*&lt;/code&gt; 类提供默认的构造函数和异常模型。使用&lt;a href=&quot;../carp&quot;&gt;Carp&lt;/a&gt;会引发异常。</target>
        </trans-unit>
        <trans-unit id="de08af296bc81bae0a502eeab38906f9d38f6946" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TAP::Parser::Aggregator&lt;/code&gt; collects parser objects and allows reporting/querying their aggregate results.</source>
          <target state="translated">&lt;code&gt;TAP::Parser::Aggregator&lt;/code&gt; 收集解析器对象，并允许报告/查询其聚合结果。</target>
        </trans-unit>
        <trans-unit id="a3b643e4bccf3d2c6b004d8c272aaeaacb6b03e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TAP::Parser::Grammar&lt;/code&gt; tokenizes lines from a &lt;a href=&quot;iterator&quot;&gt;TAP::Parser::Iterator&lt;/a&gt; and constructs &lt;a href=&quot;result&quot;&gt;TAP::Parser::Result&lt;/a&gt; subclasses to represent the tokens.</source>
          <target state="translated">&lt;code&gt;TAP::Parser::Grammar&lt;/code&gt; 对&lt;a href=&quot;iterator&quot;&gt;TAP :: Parser :: Iterator中的&lt;/a&gt;行进行标记化，并构造&lt;a href=&quot;result&quot;&gt;TAP :: Parser :: Result&lt;/a&gt;子类来表示标记。</target>
        </trans-unit>
        <trans-unit id="8b8f01afae57ad3cba82a74e20949b48d80c17d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TAP::Parser::Multiplexer&lt;/code&gt; gathers input from multiple TAP::Parsers. Internally it calls select on the input file handles for those parsers to wait for one or more of them to have input available.</source>
          <target state="translated">&lt;code&gt;TAP::Parser::Multiplexer&lt;/code&gt; 收集来自多个TAP :: Parsers的输入。在内部，它在输入文件句柄上调用select，以使这些解析器等待一个或多个解析器具有可用的输入。</target>
        </trans-unit>
        <trans-unit id="adb9813c19e749dc873795d47deb2d1cf1c465d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TAP::Parser::Result-&amp;gt;new&lt;/code&gt; is never called, $tokens are reblessed. This</source>
          <target state="translated">&lt;code&gt;TAP::Parser::Result-&amp;gt;new&lt;/code&gt; 从未调用TAP :: Parser :: Result-&amp;gt; new，$ tokens被拒绝。这个</target>
        </trans-unit>
        <trans-unit id="8722f3aa3dc33f241bd8fa9f537d5593b8612d2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TAP::Parser&lt;/code&gt; is designed to produce a proper parse of TAP output. For an example of how to run tests through this module, see the simple harnesses &lt;code&gt;examples/&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;TAP::Parser&lt;/code&gt; 旨在产生TAP输出的正确解析。有关如何通过此模块运行测试的示例，请参见简单的工具 &lt;code&gt;examples/&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eb94de0078d3867d1d98a2ebe12069e8acf7897b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TAP::Parser&lt;/code&gt; plugins let you change the way TAP is</source>
          <target state="translated">&lt;code&gt;TAP::Parser&lt;/code&gt; 插件可让您更改TAP的方式</target>
        </trans-unit>
        <trans-unit id="a472c92eb1c8099613c1ca25abb3493a801d9a6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TCSADRAIN&lt;/code&gt;&lt;code&gt;TCSANOW&lt;/code&gt;&lt;code&gt;TCOON&lt;/code&gt;&lt;code&gt;TCIOFLUSH&lt;/code&gt;&lt;code&gt;TCOFLUSH&lt;/code&gt;&lt;code&gt;TCION&lt;/code&gt;&lt;code&gt;TCIFLUSH&lt;/code&gt;&lt;code&gt;TCSAFLUSH&lt;/code&gt;&lt;code&gt;TCIOFF&lt;/code&gt;&lt;code&gt;TCOOFF&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;TCSADRAIN&lt;/code&gt;&lt;code&gt;TCSANOW&lt;/code&gt;&lt;code&gt;TCOON&lt;/code&gt;&lt;code&gt;TCIOFLUSH&lt;/code&gt;&lt;code&gt;TCOFLUSH&lt;/code&gt;&lt;code&gt;TCION&lt;/code&gt;&lt;code&gt;TCIFLUSH&lt;/code&gt;&lt;code&gt;TCSAFLUSH&lt;/code&gt;&lt;code&gt;TCIOFF&lt;/code&gt;&lt;code&gt;TCOOFF&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5c88141d29e69da723c81825ed4aa28f85fe2dcb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TMP&lt;/code&gt; or &lt;code&gt;TEMP&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;TMP&lt;/code&gt; 或 &lt;code&gt;TEMP&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bb68f2209ae08b4353f90118c698f56aaac40566" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Test::Harness&lt;/code&gt; sets these before executing the individual tests.</source>
          <target state="translated">&lt;code&gt;Test::Harness&lt;/code&gt; 在执行各个测试之前会设置这些。</target>
        </trans-unit>
        <trans-unit id="eedf6734cec83fdc2822657eca30ba2f340abb82" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Text::Wrap::fill()&lt;/code&gt; is a simple multi-paragraph formatter. It formats each paragraph separately and then joins them together when it's done. It will destroy any whitespace in the original text. It breaks text into paragraphs by looking for whitespace after a newline. In other respects, it acts like wrap().</source>
          <target state="translated">&lt;code&gt;Text::Wrap::fill()&lt;/code&gt; 是一个简单的多段格式器。它分别格式化每个段落，然后在完成后将它们连接在一起。它将破坏原始文本中的任何空格。它通过在换行符后寻找空格将文本分成段落。在其他方面，它的作用类似于wrap（）。</target>
        </trans-unit>
        <trans-unit id="5d81942a81d54f92e87b372edc3a62cc7826a722" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Text::Wrap::wrap()&lt;/code&gt; has a number of variables that control its behavior. Because other modules might be using &lt;code&gt;Text::Wrap::wrap()&lt;/code&gt; it is suggested that you leave these variables alone! If you can't do that, then use &lt;code&gt;&lt;a href=&quot;../functions/local&quot;&gt;local&lt;/a&gt;($Text::Wrap::VARIABLE) = YOURVALUE&lt;/code&gt; when you change the values so that the original value is restored. This &lt;code&gt;&lt;a href=&quot;../functions/local&quot;&gt;local()&lt;/a&gt;&lt;/code&gt; trick will not work if you import the variable into your own namespace.</source>
          <target state="translated">&lt;code&gt;Text::Wrap::wrap()&lt;/code&gt; 具有许多控制其行为的变量。由于其他模块可能正在使用 &lt;code&gt;Text::Wrap::wrap()&lt;/code&gt; ，因此建议您不要使用这些变量！如果不能这样做， &lt;code&gt;&lt;a href=&quot;../functions/local&quot;&gt;local&lt;/a&gt;($Text::Wrap::VARIABLE) = YOURVALUE&lt;/code&gt; 在更改值时使用&lt;a href=&quot;../functions/local&quot;&gt;local&lt;/a&gt;（$ Text :: Wrap :: VARIABLE）= YOURVALUE，以便恢复原始值。如果将变量导入自己的名称空间，则此 &lt;code&gt;&lt;a href=&quot;../functions/local&quot;&gt;local()&lt;/a&gt;&lt;/code&gt; 技巧将不起作用。</target>
        </trans-unit>
        <trans-unit id="9f1615c49151b3deef2ed2f37c67cec6329aa12f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Text::Wrap::wrap()&lt;/code&gt; is a very simple paragraph formatter. It formats a single paragraph at a time by breaking lines at word boundaries. Indentation is controlled for the first line (&lt;code&gt;$initial_tab&lt;/code&gt; ) and all subsequent lines (&lt;code&gt;$subsequent_tab&lt;/code&gt; ) independently. Please note: &lt;code&gt;$initial_tab&lt;/code&gt; and &lt;code&gt;$subsequent_tab&lt;/code&gt; are the literal strings that will be used: it is unlikely you would want to pass in a number.</source>
          <target state="translated">&lt;code&gt;Text::Wrap::wrap()&lt;/code&gt; 是一个非常简单的段落格式化程序。它通过在单词边界处折行来一次格式化单个段落。第一行（ &lt;code&gt;$initial_tab&lt;/code&gt; ）和所有后续行（ &lt;code&gt;$subsequent_tab&lt;/code&gt; ）的缩进分别控制。请注意： &lt;code&gt;$initial_tab&lt;/code&gt; 和 &lt;code&gt;$subsequent_tab&lt;/code&gt; 是将要使用的文字字符串：您不太可能希望输入数字。</target>
        </trans-unit>
        <trans-unit id="fbadf232b07d6755d5f86328062ab50e3309a385" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Text::Wrap::wrap()&lt;/code&gt; starts its work by expanding all the tabs in its input into spaces. The last thing it does it to turn spaces back into tabs. If you do not want tabs in your results, set &lt;code&gt;$Text::Wrap::unexpand&lt;/code&gt; to a false value. Likewise if you do not want to use 8-character tabstops, set &lt;code&gt;$Text::Wrap::tabstop&lt;/code&gt; to the number of characters you do want for your tabstops.</source>
          <target state="translated">&lt;code&gt;Text::Wrap::wrap()&lt;/code&gt; 通过将输入中的所有选项卡扩展到空格来开始工作。它要做的最后一件事是将空格重新变成制表符。如果您不希望在结果中使用制表符，请将 &lt;code&gt;$Text::Wrap::unexpand&lt;/code&gt; 设置为错误值。同样，如果您不想使用8个字符的 &lt;code&gt;$Text::Wrap::tabstop&lt;/code&gt; 符，请将$ Text :: Wrap :: tabstop设置为所需的制表符字符数。</target>
        </trans-unit>
        <trans-unit id="467f24162cc06d04d5ab812af9c45bbabafd7b6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Thread-&amp;amp;gt;new&lt;/code&gt; returns a thread object representing the newly created thread.</source>
          <target state="translated">&lt;code&gt;Thread-&amp;amp;gt;new&lt;/code&gt; 返回代表新创建线程的线程对象。</target>
        </trans-unit>
        <trans-unit id="b370124e5ee91deba09a04327dc32dee66471f55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tie::File&lt;/code&gt; maintains an internal table of the byte offset of each record it has seen in the file.</source>
          <target state="translated">&lt;code&gt;Tie::File&lt;/code&gt; 维护一个内部表，该表包含在文件中看到的每个记录的字节偏移。</target>
        </trans-unit>
        <trans-unit id="9815aecf90eb2e223c97ce6c8d16c9260911c408" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tie::File&lt;/code&gt; promises that the following sequence of operations will be safe:</source>
          <target state="translated">&lt;code&gt;Tie::File&lt;/code&gt; 保证以下操作顺序是安全的：</target>
        </trans-unit>
        <trans-unit id="2d63721817865519a8d0f071612094f774c55373" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tie::File&lt;/code&gt; represents a regular text file as a Perl array. Each element in the array corresponds to a record in the file. The first line of the file is element 0 of the array; the second line is element 1, and so on.</source>
          <target state="translated">&lt;code&gt;Tie::File&lt;/code&gt; 将常规文本文件表示为Perl数组。数组中的每个元素对应于文件中的一条记录。文件的第一行是数组的元素0；第二行是元素1，依此类推。</target>
        </trans-unit>
        <trans-unit id="b4a3d66b09517db449a91c4ca42dd41163f93bba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tie::File&lt;/code&gt; tries to guess when deferred writing might be helpful, and to turn it on and off automatically.</source>
          <target state="translated">&lt;code&gt;Tie::File&lt;/code&gt; 尝试猜测何时推迟写入可能会有所帮助，并自动将其打开和关闭。</target>
        </trans-unit>
        <trans-unit id="014103b958bc396d81fb1efdb14e81091ca5d049" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tie::File&lt;/code&gt; version 0.96 is copyright (C) 2003 Mark Jason Dominus.</source>
          <target state="translated">&lt;code&gt;Tie::File&lt;/code&gt; 版本0.96的版权（C）2003 Mark Jason Dominus。</target>
        </trans-unit>
        <trans-unit id="a3a9d266a8d034b3093885f52948252f982c081d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tie::File&lt;/code&gt; version 0.98 comes with ABSOLUTELY NO WARRANTY. For details, see the license.</source>
          <target state="translated">&lt;code&gt;Tie::File&lt;/code&gt; 版本0.98附带绝对没有保证。有关详细信息，请参阅许可证。</target>
        </trans-unit>
        <trans-unit id="765e809d133387f24d23e5776c542da23425f9d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tie::Scalar&lt;/code&gt; provides all the necessary methods, but one should realize they do not do anything useful. Calling &lt;code&gt;Tie::Scalar::FETCH&lt;/code&gt; or &lt;code&gt;Tie::Scalar::STORE&lt;/code&gt; results in a (trappable) croak. And if you inherit from &lt;code&gt;Tie::Scalar&lt;/code&gt; , you</source>
          <target state="translated">&lt;code&gt;Tie::Scalar&lt;/code&gt; 提供了所有必要的方法，但是应该意识到它们没有做任何有用的事情。调用 &lt;code&gt;Tie::Scalar::FETCH&lt;/code&gt; 或 &lt;code&gt;Tie::Scalar::STORE&lt;/code&gt; 导致（可陷阱）嘶哑。如果您继承自 &lt;code&gt;Tie::Scalar&lt;/code&gt; ，则您</target>
        </trans-unit>
        <trans-unit id="9908dcbb0c04058ac728c44f2b059df9c83be077" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tk::Canvas&lt;/code&gt; ) for which the linker option file will be produced.</source>
          <target state="translated">&lt;code&gt;Tk::Canvas&lt;/code&gt; ），将为其生成链接器选项文件。</target>
        </trans-unit>
        <trans-unit id="a924c42dbac826b648276a4a5da21c2db2545b5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UCS-2&lt;/code&gt; is an exception. Unlike others, this is an alias of UCS-2BE. UCS-2 is already registered by IANA and others that way.</source>
          <target state="translated">&lt;code&gt;UCS-2&lt;/code&gt; 是一个例外。与其他人不同，这是UCS-2BE的别名。UCS-2已由IANA和其他机构注册。</target>
        </trans-unit>
        <trans-unit id="3b8d5cd56952f7e9b2404061a72c2a7e45a2683c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UNITCHECK&lt;/code&gt; , &lt;code&gt;CHECK&lt;/code&gt; and &lt;code&gt;INIT&lt;/code&gt; code blocks are useful to catch the transition between the compilation phase and the execution phase of the main program.</source>
          <target state="translated">&lt;code&gt;UNITCHECK&lt;/code&gt; ， &lt;code&gt;CHECK&lt;/code&gt; 和 &lt;code&gt;INIT&lt;/code&gt; 代码块对于捕获主程序的编译阶段和执行阶段之间的过渡非常有用。</target>
        </trans-unit>
        <trans-unit id="d34178e964cf584fdf5806f55c96a0bc4853575e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UNITCHECK&lt;/code&gt; blocks are run just after the unit which defined them has been compiled. The main program file and each module it loads are compilation units, as are string &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;s, run-time code compiled using the &lt;code&gt;(?{ })&lt;/code&gt; construct in a regex, calls to &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt; FILE&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt; FILE&lt;/code&gt; , and code after the &lt;code&gt;-e&lt;/code&gt; switch on the command line.</source>
          <target state="translated">&lt;code&gt;UNITCHECK&lt;/code&gt; 块在定义它们的单元编译后立即运行。主程序文件及其加载的每个模块都是编译单元，字符串 &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; 也是它们，在正则表达式中使用 &lt;code&gt;(?{ })&lt;/code&gt; 构造编译的运行时代码，调用 &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt; FILE&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt; FILE&lt;/code&gt; ，以及 &lt;code&gt;-e&lt;/code&gt; 之后的代码在命令行上切换。</target>
        </trans-unit>
        <trans-unit id="29082300972578ac172b3bcf60b3baedc1711b19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UNIVERSAL&lt;/code&gt; is the base class from which all blessed references inherit. See &lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;UNIVERSAL&lt;/code&gt; 是所有受祝福引用都继承自的基类。参见&lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="40ee2201428c064e4abefc93cea2f5adb84494a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UNIVERSAL&lt;/code&gt; provides the following methods:</source>
          <target state="translated">&lt;code&gt;UNIVERSAL&lt;/code&gt; 提供以下方法：</target>
        </trans-unit>
        <trans-unit id="8236e4ed6563ca685881ecd85fb5fbeb9a8352ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UTF-8&lt;/code&gt; is internally known as &lt;code&gt;utf-8-strict&lt;/code&gt; . The tutorial uses UTF-8 consistently, even where utf8 is actually used internally, because the distinction can be hard to make, and is mostly irrelevant.</source>
          <target state="translated">&lt;code&gt;UTF-8&lt;/code&gt; 内部称为 &lt;code&gt;utf-8-strict&lt;/code&gt; 。本教程始终使用UTF-8，即使在内部实际使用utf8的情况下，也是如此，因为区分起来很难，而且几乎没有关系。</target>
        </trans-unit>
        <trans-unit id="3f8de8fd8fcf48c479a5f2548a2ea84553cbb55d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UTF-8&lt;/code&gt; is the official standard. &lt;code&gt;utf8&lt;/code&gt; is Perl's way of being liberal in what it accepts. If you have to communicate with things that aren't so liberal, you may want to consider using &lt;code&gt;UTF-8&lt;/code&gt; . If you have to communicate with things that are too liberal, you may have to use &lt;code&gt;utf8&lt;/code&gt; . The full explanation is in &lt;a href=&quot;encode&quot;&gt;Encode&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;UTF-8&lt;/code&gt; 是官方标准。 &lt;code&gt;utf8&lt;/code&gt; 是Perl接受的自由方式。如果您必须与不太自由的事物进行交流，则可以考虑使用 &lt;code&gt;UTF-8&lt;/code&gt; 。如果您必须与过于自由的事物进行交流，则可能必须使用 &lt;code&gt;utf8&lt;/code&gt; 。完整的解释在&lt;a href=&quot;encode&quot;&gt;Encode中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d7a0fc4be9864abfdfe213f730a836cf153d3d57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Unix&lt;/code&gt; has a few filetypes that aren't supported on other platforms, like &lt;code&gt;Win32&lt;/code&gt; . If we encounter a &lt;code&gt;hardlink&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../functions/symlink&quot;&gt;symlink&lt;/a&gt;&lt;/code&gt; we'll just try to make a copy of the original file, rather than throwing an error.</source>
          <target state="translated">&lt;code&gt;Unix&lt;/code&gt; 具有其他平台（例如 &lt;code&gt;Win32&lt;/code&gt; )不支持的一些文件类型。如果遇到 &lt;code&gt;hardlink&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;../functions/symlink&quot;&gt;symlink&lt;/a&gt;&lt;/code&gt; 或符号链接，我们将尝试制作原始文件的副本，而不是抛出错误。</target>
        </trans-unit>
        <trans-unit id="6d74c9b056759689807d86e862d255692b030b97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VEOF&lt;/code&gt;&lt;code&gt;VEOL&lt;/code&gt;&lt;code&gt;VERASE&lt;/code&gt;&lt;code&gt;VINTR&lt;/code&gt;&lt;code&gt;VKILL&lt;/code&gt;&lt;code&gt;VQUIT&lt;/code&gt;&lt;code&gt;VSUSP&lt;/code&gt;&lt;code&gt;VSTART&lt;/code&gt;&lt;code&gt;VSTOP&lt;/code&gt;&lt;code&gt;VMIN&lt;/code&gt;&lt;code&gt;VTIME&lt;/code&gt;&lt;code&gt;NCCS&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;VEOF&lt;/code&gt;&lt;code&gt;VEOL&lt;/code&gt;&lt;code&gt;VERASE&lt;/code&gt;&lt;code&gt;VINTR&lt;/code&gt;&lt;code&gt;VKILL&lt;/code&gt;&lt;code&gt;VQUIT&lt;/code&gt;&lt;code&gt;VSUSP&lt;/code&gt;&lt;code&gt;VSTART&lt;/code&gt;&lt;code&gt;VSTOP&lt;/code&gt;&lt;code&gt;VMIN&lt;/code&gt;&lt;code&gt;VTIME&lt;/code&gt;&lt;code&gt;NCCS&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e64ceff700bffb9b0e49ed00840d8567272b98d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VERSION&lt;/code&gt; can be called as either a class (static) method or an object method.</source>
          <target state="translated">&lt;code&gt;VERSION&lt;/code&gt; 可以称为类（静态）方法或对象方法。</target>
        </trans-unit>
        <trans-unit id="53e5c5bf9414f45f9ee6cd495857a6d0af8135b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VERSION&lt;/code&gt; will return the value of the variable &lt;code&gt;$VERSION&lt;/code&gt; in the package the object is blessed into. If &lt;code&gt;REQUIRE&lt;/code&gt; is given then it will do a comparison and die if the package version is not greater than or equal to &lt;code&gt;REQUIRE&lt;/code&gt; , or if either &lt;code&gt;$VERSION&lt;/code&gt; or &lt;code&gt;REQUIRE&lt;/code&gt; is not a &quot;lax&quot; version number (as defined by the &lt;a href=&quot;version&quot;&gt;version&lt;/a&gt; module).</source>
          <target state="translated">&lt;code&gt;VERSION&lt;/code&gt; 将在对象被祝福到的包中返回变量 &lt;code&gt;$VERSION&lt;/code&gt; 的值。如果给出 &lt;code&gt;REQUIRE&lt;/code&gt; ，则它将进行比较，如果软件包的版本不大于或等于 &lt;code&gt;REQUIRE&lt;/code&gt; ，或者 &lt;code&gt;$VERSION&lt;/code&gt; 或 &lt;code&gt;REQUIRE&lt;/code&gt; 都不是&amp;ldquo;宽松&amp;rdquo;版本号（由&lt;a href=&quot;version&quot;&gt;版本&lt;/a&gt;模块定义），它将终止。</target>
        </trans-unit>
        <trans-unit id="d09d07e4d00536d5b65342f6fda4e06e40de674a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WEXITSTATUS(${^CHILD_ERROR_NATIVE})&lt;/code&gt; returns the normal exit status of the child process (only meaningful if &lt;code&gt;WIFEXITED(${^CHILD_ERROR_NATIVE})&lt;/code&gt; is true)</source>
          <target state="translated">&lt;code&gt;WEXITSTATUS(${^CHILD_ERROR_NATIVE})&lt;/code&gt; 返回子进程的正常退出状态（仅在 &lt;code&gt;WIFEXITED(${^CHILD_ERROR_NATIVE})&lt;/code&gt; 为true 时才有意义）</target>
        </trans-unit>
        <trans-unit id="50caa072d18e392639ac8cbf2652792fc96e056a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WIFEXITED(${^CHILD_ERROR_NATIVE})&lt;/code&gt; returns true if the child process exited normally (&lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; or by falling off the end of &lt;code&gt;main()&lt;/code&gt; )</source>
          <target state="translated">&lt;code&gt;WIFEXITED(${^CHILD_ERROR_NATIVE})&lt;/code&gt; 如果子进程正常退出返回true（ &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; 或脱落年底 &lt;code&gt;main()&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="4a10acdd8d4b5cbcaa19166a65359a79e72c10ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WIFEXITED&lt;/code&gt;&lt;code&gt;WEXITSTATUS&lt;/code&gt;&lt;code&gt;WIFSIGNALED&lt;/code&gt;&lt;code&gt;WTERMSIG&lt;/code&gt;&lt;code&gt;WIFSTOPPED&lt;/code&gt;&lt;code&gt;WSTOPSIG&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;WIFEXITED&lt;/code&gt;&lt;code&gt;WEXITSTATUS&lt;/code&gt;&lt;code&gt;WIFSIGNALED&lt;/code&gt;&lt;code&gt;WTERMSIG&lt;/code&gt;&lt;code&gt;WIFSTOPPED&lt;/code&gt;&lt;code&gt;WSTOPSIG&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="913c2440e3192214324c69c5042c74731bd768ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WIFSIGNALED(${^CHILD_ERROR_NATIVE})&lt;/code&gt; returns true if the child process terminated because of a signal</source>
          <target state="translated">&lt;code&gt;WIFSIGNALED(${^CHILD_ERROR_NATIVE})&lt;/code&gt; 如果子进程由于信号而终止，则WIFSIGNALED（$ {^ CHILD_ERROR_NATIVE}）返回true</target>
        </trans-unit>
        <trans-unit id="d31cf55751c90a24957243f3a757494178f490f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WIFSTOPPED(${^CHILD_ERROR_NATIVE})&lt;/code&gt; returns true if the child process is currently stopped (can happen only if you specified the WUNTRACED flag to &lt;code&gt;&lt;a href=&quot;functions/waitpid&quot;&gt;waitpid()&lt;/a&gt;&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;WIFSTOPPED(${^CHILD_ERROR_NATIVE})&lt;/code&gt; 如果子进程当前正在停止，则WIFSTOPPED（$ {^ CHILD_ERROR_NATIVE}）返回true（仅当您将WUNTRACED标志指定为 &lt;code&gt;&lt;a href=&quot;functions/waitpid&quot;&gt;waitpid()&lt;/a&gt;&lt;/code&gt; 时,这种情况才会发生）</target>
        </trans-unit>
        <trans-unit id="5e0ae9473f56b8cede4edc36cb20deb25c332b79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WNOHANG&lt;/code&gt;&lt;code&gt;WUNTRACED&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;WNOHANG&lt;/code&gt;&lt;code&gt;WUNTRACED&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d6b1ff61466d78e7b46ba9478c03225a6e4901f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WSTOPSIG(${^CHILD_ERROR_NATIVE})&lt;/code&gt; returns the signal the child process was stopped for (only meaningful if &lt;code&gt;WIFSTOPPED(${^CHILD_ERROR_NATIVE})&lt;/code&gt; is true)</source>
          <target state="translated">&lt;code&gt;WSTOPSIG(${^CHILD_ERROR_NATIVE})&lt;/code&gt; 返回停止子进程的信号（仅在 &lt;code&gt;WIFSTOPPED(${^CHILD_ERROR_NATIVE})&lt;/code&gt; 为true 时才有意义）</target>
        </trans-unit>
        <trans-unit id="6fce0cd0fb21ad8f415dada694b22cfb2560526f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WTERMSIG(${^CHILD_ERROR_NATIVE})&lt;/code&gt; returns the signal the child process terminated for (only meaningful if &lt;code&gt;WIFSIGNALED(${^CHILD_ERROR_NATIVE})&lt;/code&gt; is true)</source>
          <target state="translated">&lt;code&gt;WTERMSIG(${^CHILD_ERROR_NATIVE})&lt;/code&gt; 返回终止子进程的信号（仅当 &lt;code&gt;WIFSIGNALED(${^CHILD_ERROR_NATIVE})&lt;/code&gt; 为true 时才有意义）</target>
        </trans-unit>
        <trans-unit id="9280239300b5e2da4b3afad680afacc165216bc6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WriteFile&lt;/code&gt; takes one optional argument. When called with one argument, it expects to be passed a filename. When called with no arguments, it defaults to the filename</source>
          <target state="translated">&lt;code&gt;WriteFile&lt;/code&gt; 使用一个可选参数。当使用一个参数调用时，它希望传递一个文件名。不带参数调用时，默认为文件名</target>
        </trans-unit>
        <trans-unit id="4bc2f93eb05588029257a866afb2ec29cefadaab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;XXX&lt;/code&gt; To do: Since compatibility can depend on compile time options (such as bincompat, longlong, etc.) it should (perhaps) be set by Configure, but currently it isn't. Currently, we read a hard-wired value from</source>
          <target state="translated">&lt;code&gt;XXX&lt;/code&gt; 要做的事情：由于兼容性可能取决于编译时选项（例如bincompat，longlong等），因此（也许）应由Configure进行设置，但目前不是。目前，我们从</target>
        </trans-unit>
        <trans-unit id="1d73e9513462d0441d882a14aedf29b4d48f493f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Y&lt;/code&gt; or &lt;code&gt;N&lt;/code&gt; designating if</source>
          <target state="translated">&lt;code&gt;Y&lt;/code&gt; 或 &lt;code&gt;N&lt;/code&gt; 指定是否</target>
        </trans-unit>
        <trans-unit id="63907946795eb9d983c7251fc87f03561c9ef960" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Zip64&lt;/code&gt; will be automatically set, as needed, if working with the one-shot interface when the input is either a filename or a scalar reference.</source>
          <target state="translated">&lt;code&gt;Zip64&lt;/code&gt; 如果在输入是文件名或标量引用的情况下使用单发界面，则会根据需要自动设置Zip64。</target>
        </trans-unit>
        <trans-unit id="9c080ff6a40a2d784f921c0451433798850e94e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[ ITEMS ]&lt;/code&gt; makes a new, anonymous array, and returns a reference to that array. &lt;code&gt;{ ITEMS }&lt;/code&gt; makes a new, anonymous hash, and returns a reference to that hash.</source>
          <target state="translated">&lt;code&gt;[ ITEMS ]&lt;/code&gt; 创建一个新的匿名数组，并返回对该数组的引用。 &lt;code&gt;{ ITEMS }&lt;/code&gt; 创建一个新的匿名哈希，并返回对该哈希的引用。</target>
        </trans-unit>
        <trans-unit id="1e197e33c6ccb5f4067a4525a2143eb1d616cb64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[[:ascii:]]&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;[[:ascii:]]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2cfa2d0098181bbefe03441d8231e81eb9677e4d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\A&lt;/code&gt; only matches at the beginning of the string. If the &lt;code&gt;/m&lt;/code&gt; modifier isn't used, then &lt;code&gt;/\A/&lt;/code&gt; is equivalent to &lt;code&gt;/^/&lt;/code&gt; . However, if the &lt;code&gt;/m&lt;/code&gt; modifier is used, then &lt;code&gt;/^/&lt;/code&gt; matches internal newlines, but the meaning of &lt;code&gt;/\A/&lt;/code&gt; isn't changed by the &lt;code&gt;/m&lt;/code&gt; modifier. &lt;code&gt;\A&lt;/code&gt; matches at the beginning of the string regardless whether the &lt;code&gt;/m&lt;/code&gt; modifier is used.</source>
          <target state="translated">&lt;code&gt;\A&lt;/code&gt; 仅匹配字符串的开头。如果未使用 &lt;code&gt;/m&lt;/code&gt; 修饰符，则 &lt;code&gt;/\A/&lt;/code&gt; 等效于 &lt;code&gt;/^/&lt;/code&gt; 。但是，如果使用了 &lt;code&gt;/m&lt;/code&gt; 修饰符，则 &lt;code&gt;/^/&lt;/code&gt; 匹配内部换行符，但 &lt;code&gt;/m&lt;/code&gt; 的含义不会更改 &lt;code&gt;/\A/&lt;/code&gt; 的含义。 &lt;code&gt;\A&lt;/code&gt; 匹配字符串的开头，无论是否使用 &lt;code&gt;/m&lt;/code&gt; 修饰符。</target>
        </trans-unit>
        <trans-unit id="fef23e4d1b4ae86eeb209dd5770450d03008a5b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\F&lt;/code&gt; can be used to casefold all characters following, up to the next &lt;code&gt;\E&lt;/code&gt; or the end of the pattern. It provides the functionality similar to the &lt;code&gt;&lt;a href=&quot;functions/fc&quot;&gt;fc&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">&lt;code&gt;\F&lt;/code&gt; 可以用于折叠所有字符，直到下一个 &lt;code&gt;\E&lt;/code&gt; 或模式结尾。它提供的功能类似于 &lt;code&gt;&lt;a href=&quot;functions/fc&quot;&gt;fc&lt;/a&gt;&lt;/code&gt; 函数。</target>
        </trans-unit>
        <trans-unit id="29175559120891c17a696d6942f87d50d6868998" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\G&lt;/code&gt; is also invaluable in processing fixed-length records with regexps. Suppose we have a snippet of coding region DNA, encoded as base pair letters &lt;code&gt;ATCGTTGAAT...&lt;/code&gt; and we want to find all the stop codons &lt;code&gt;TGA&lt;/code&gt; . In a coding region, codons are 3-letter sequences, so we can think of the DNA snippet as a sequence of 3-letter records. The naive regexp</source>
          <target state="translated">&lt;code&gt;\G&lt;/code&gt; 在使用正则表达式处理定长记录时也非常有用。假设我们有一个编码区DNA的片段，编码为碱基对字母 &lt;code&gt;ATCGTTGAAT...&lt;/code&gt; ，我们想找到所有的终止密码子 &lt;code&gt;TGA&lt;/code&gt; 。在编码区中，密码子是3个字母的序列，因此我们可以将DNA片段视为3个字母的记录的序列。天真的regexp</target>
        </trans-unit>
        <trans-unit id="bc01fdb07dcb48f3990f7e9986cc181c1d1aa3c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\G&lt;/code&gt; is usually used only in combination with the &lt;code&gt;/g&lt;/code&gt; modifier. If the &lt;code&gt;/g&lt;/code&gt; modifier is used and the match is done in scalar context, Perl remembers where in the source string the last match ended, and the next time, it will start the match from where it ended the previous time.</source>
          <target state="translated">&lt;code&gt;\G&lt;/code&gt; 通常仅与 &lt;code&gt;/g&lt;/code&gt; 修饰符结合使用。如果使用了 &lt;code&gt;/g&lt;/code&gt; 修饰符，并且匹配是在标量上下文中完成的，则Perl会记住上一次匹配在源字符串中的结束位置，下次，它将从上一次结束的位置开始进行匹配。</target>
        </trans-unit>
        <trans-unit id="fab760e95f43824629065b7030ad07437049f251" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\G&lt;/code&gt; matches the point where the previous match on that string ended, or the beginning of that string if there was no previous match.</source>
          <target state="translated">&lt;code&gt;\G&lt;/code&gt; 匹配该字符串上一次匹配结束的点，如果没有先前的匹配，则匹配该字符串的开头。</target>
        </trans-unit>
        <trans-unit id="caee3f50983ee96aea6298365c6e4a735aeffd91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\L&lt;/code&gt; , &lt;code&gt;\U&lt;/code&gt; , &lt;code&gt;\F&lt;/code&gt; , and &lt;code&gt;\Q&lt;/code&gt; can stack, in which case you need one &lt;code&gt;\E&lt;/code&gt; for each. For example:</source>
          <target state="translated">&lt;code&gt;\L&lt;/code&gt; ， &lt;code&gt;\U&lt;/code&gt; ， &lt;code&gt;\F&lt;/code&gt; 和 &lt;code&gt;\Q&lt;/code&gt; 可以堆叠，在这种情况下，每个需要一个 &lt;code&gt;\E&lt;/code&gt; 例如：</target>
        </trans-unit>
        <trans-unit id="88b715a8c878ff64b76422f5de0db4d867e6df23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\N&lt;/code&gt; , available starting in v5.12, like the dot, matches any character that is not a newline. The difference is that &lt;code&gt;\N&lt;/code&gt; is not influenced by the</source>
          <target state="translated">&lt;code&gt;\N&lt;/code&gt; 从v5.12开始可用，例如点，可以匹配不是换行符的任何字符。区别在于 &lt;code&gt;\N&lt;/code&gt; 不受</target>
        </trans-unit>
        <trans-unit id="80779fa1da204f29defd5bf097dbba87c9107e16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\N&lt;/code&gt; within a bracketed character class must be of the forms &lt;code&gt;\N{&lt;i&gt;name&lt;/i&gt;}&lt;/code&gt; or &lt;code&gt;\N{U+&lt;i&gt;hex char&lt;/i&gt;}&lt;/code&gt;, and NOT be the form that matches non-newlines, for the same reason that a dot &lt;code&gt;.&lt;/code&gt; inside a bracketed character class loses its special meaning: it matches nearly anything, which generally isn't what you want to happen.</source>
          <target state="translated">&lt;code&gt;\N&lt;/code&gt; 加括号的字符类中必须是形式的 &lt;code&gt;\N{&lt;i&gt;name&lt;/i&gt;}&lt;/code&gt; 或 &lt;code&gt;\N{U+&lt;i&gt;hex char&lt;/i&gt;}&lt;/code&gt; 和NOT是匹配的非换行符，出于同样的原因，一个点的形式 &lt;code&gt;.&lt;/code&gt; 放在方括号中的字符类将失去其特殊含义：它几乎匹配任何内容，通常这不是您想要发生的事情。</target>
        </trans-unit>
        <trans-unit id="2706754019f77a1fbbc94bb64673d2224cda545c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\N{U+&lt;i&gt;hexadecimal number&lt;/i&gt;}&lt;/code&gt; means the Unicode character whose Unicode code point is</source>
          <target state="translated">&lt;code&gt;\N{U+&lt;i&gt;hexadecimal number&lt;/i&gt;}&lt;/code&gt; 表示Unicode代码点为的Unicode字符</target>
        </trans-unit>
        <trans-unit id="3d883253a04efed05a5ba1744b87b2c80c0e4bf3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\Q&lt;/code&gt; , &lt;code&gt;\L&lt;/code&gt; , &lt;code&gt;\l&lt;/code&gt; , &lt;code&gt;\U&lt;/code&gt; , &lt;code&gt;\u&lt;/code&gt; and &lt;code&gt;\E&lt;/code&gt; are actually part of double-quotish syntax, and not part of regexp syntax proper. They will work if they appear in a regular expression embedded directly in a program, but not when contained in a string that is interpolated in a pattern.</source>
          <target state="translated">&lt;code&gt;\Q&lt;/code&gt; ， &lt;code&gt;\L&lt;/code&gt; ， &lt;code&gt;\l&lt;/code&gt; ， &lt;code&gt;\U&lt;/code&gt; ， &lt;code&gt;\u&lt;/code&gt; 和 &lt;code&gt;\E&lt;/code&gt; 实际上是双引号语法的一部分，而不是正则表达式语法的一部分。如果它们出现在直接嵌入程序中的正则表达式中，则它们将起作用，但是当包含在模式中插入的字符串中时，它们将不会起作用。</target>
        </trans-unit>
        <trans-unit id="b7ed1242ac7474e94b7458c0ba21e510aab5efa0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\Q&lt;/code&gt; , &lt;code&gt;\U&lt;/code&gt; , &lt;code&gt;\u&lt;/code&gt; , &lt;code&gt;\L&lt;/code&gt; , &lt;code&gt;\l&lt;/code&gt; , &lt;code&gt;\F&lt;/code&gt; (possibly paired with &lt;code&gt;\E&lt;/code&gt; ) are converted to corresponding Perl constructs. Thus, &lt;code&gt;&quot;$foo\Qbaz$bar&quot;&lt;/code&gt; is converted to &lt;code&gt;$foo . (&lt;a href=&quot;functions/quotemeta&quot;&gt;quotemeta&lt;/a&gt;(&quot;baz&quot; . $bar))&lt;/code&gt; internally. The other escape sequences such as &lt;code&gt;\200&lt;/code&gt; and &lt;code&gt;\t&lt;/code&gt; and backslashed characters such as &lt;code&gt;\\&lt;/code&gt; and &lt;code&gt;\-&lt;/code&gt; are replaced with appropriate expansions.</source>
          <target state="translated">&lt;code&gt;\Q&lt;/code&gt; ， &lt;code&gt;\U&lt;/code&gt; ， &lt;code&gt;\u&lt;/code&gt; ， &lt;code&gt;\L&lt;/code&gt; ， &lt;code&gt;\l&lt;/code&gt; ， &lt;code&gt;\F&lt;/code&gt; （可能与 &lt;code&gt;\E&lt;/code&gt; 配对）被转换为相应的Perl构造。因此， &lt;code&gt;&quot;$foo\Qbaz$bar&quot;&lt;/code&gt; 将转换为 &lt;code&gt;$foo . (&lt;a href=&quot;functions/quotemeta&quot;&gt;quotemeta&lt;/a&gt;(&quot;baz&quot; . $bar))&lt;/code&gt; 内部。其他转义序列（例如 &lt;code&gt;\200&lt;/code&gt; 和 &lt;code&gt;\t&lt;/code&gt; 和反斜杠字符（例如 &lt;code&gt;\\&lt;/code&gt; 和 &lt;code&gt;\-&lt;/code&gt; )将替换为适当的扩展名。</target>
        </trans-unit>
        <trans-unit id="ad0b64315a3fe9c58415fa16564b8e316472bbe7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\Q&lt;/code&gt; is used to quote (disable) pattern metacharacters, up to the next &lt;code&gt;\E&lt;/code&gt; or the end of the pattern. &lt;code&gt;\Q&lt;/code&gt; adds a backslash to any character that could have special meaning to Perl. In the ASCII range, it quotes every character that isn't a letter, digit, or underscore. See &lt;a href=&quot;functions/quotemeta&quot;&gt;quotemeta&lt;/a&gt; for details on what gets quoted for non-ASCII code points. Using this ensures that any character between &lt;code&gt;\Q&lt;/code&gt; and &lt;code&gt;\E&lt;/code&gt; will be matched literally, not interpreted as a metacharacter by the regex engine.</source>
          <target state="translated">&lt;code&gt;\Q&lt;/code&gt; 用于引用（禁用）模式元字符，直至下一个 &lt;code&gt;\E&lt;/code&gt; 或模式结尾。 &lt;code&gt;\Q&lt;/code&gt; 在可能对Perl具有特殊含义的任何字符上添加一个反斜杠。在ASCII范围内，它引用不是字母，数字或下划线的每个字符。有关非ASCII代码点引用内容的详细信息，请参见&lt;a href=&quot;functions/quotemeta&quot;&gt;quotemeta&lt;/a&gt;。使用此选项可确保 &lt;code&gt;\Q&lt;/code&gt; 和 &lt;code&gt;\E&lt;/code&gt; 之间的任何字符都将按字面意义进行匹配，而正则表达式引擎不会将其解释为元字符。</target>
        </trans-unit>
        <trans-unit id="96fdb89c706826e363f4d1a15c85386d62762386" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\R&lt;/code&gt; matches a</source>
          <target state="translated">&lt;code&gt;\R&lt;/code&gt; 匹配一个</target>
        </trans-unit>
        <trans-unit id="8ffa61af84fa5204640b2d3a9297ad766cd2302f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\R&lt;/code&gt; matches anything that can be considered a newline under Unicode rules. It can match a multi-character sequence. It cannot be used inside a bracketed character class; use &lt;code&gt;\v&lt;/code&gt; instead (vertical whitespace). It uses the platform's native character set, and does not consider any locale that may otherwise be in use. Details are discussed in &lt;a href=&quot;perlrebackslash&quot;&gt;perlrebackslash&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;\R&lt;/code&gt; 匹配在Unicode规则下可以视为换行符的任何内容。它可以匹配一个多字符序列。不能在带括号的字符类中使用；使用 &lt;code&gt;\v&lt;/code&gt; 代替（垂直空格）。它使用平台的本机字符集，并且不考虑可能会使用的任何语言环境。有关详细信息，请&lt;a href=&quot;perlrebackslash&quot;&gt;参见perlrebackslash&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9c079457c2c94c9296bb94d74fe70faff7c8e990" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\X&lt;/code&gt; is an abbreviation for a character class that comprises a Unicode</source>
          <target state="translated">&lt;code&gt;\X&lt;/code&gt; 是包含Unicode的字符类的缩写</target>
        </trans-unit>
        <trans-unit id="55e23bb607e060dee7b3f1229c353a21e48fea15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\X&lt;/code&gt; matches quite well what normal (non-Unicode-programmer) usage would consider a single character. As an example, consider a G with some sort of diacritic mark, such as an arrow. There is no such single character in Unicode, but one can be composed by using a G followed by a Unicode &quot;COMBINING UPWARDS ARROW BELOW&quot;, and would be displayed by Unicode-aware software as if it were a single character.</source>
          <target state="translated">&lt;code&gt;\X&lt;/code&gt; 与正常情况下（非Unicode程序员）使用单个字符的匹配非常好。例如，考虑带有某种变音符号的G，例如箭头。Unicode中没有这样的单个字符，但是可以使用G后面跟一个Unicode&amp;ldquo; COMBINING UPWARDS ARROW BELOW&amp;rdquo;，然后由Unicode感知软件将其显示为单个字符来组成一个字符。</target>
        </trans-unit>
        <trans-unit id="34d7b3ea79034dbcabd4d97597212e6ab2de3c37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\b&lt;/code&gt; . This matches a boundary between a word character and a non-word character &lt;code&gt;\w\W&lt;/code&gt; or &lt;code&gt;\W\w&lt;/code&gt; :</source>
          <target state="translated">&lt;code&gt;\b&lt;/code&gt; 。这匹配单词字符和非单词字符 &lt;code&gt;\w\W&lt;/code&gt; 或 &lt;code&gt;\W\w&lt;/code&gt; 之间的边界：</target>
        </trans-unit>
        <trans-unit id="d75241b44033641bce1ae791eaa2652fadc31474" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\b&lt;/code&gt; and &lt;code&gt;\B&lt;/code&gt; assume there's a non-word character before the beginning and after the end of the source string; so &lt;code&gt;\b&lt;/code&gt; will match at the beginning (or end) of the source string if the source string begins (or ends) with a word character. Otherwise, &lt;code&gt;\B&lt;/code&gt; will match.</source>
          <target state="translated">&lt;code&gt;\b&lt;/code&gt; 和 &lt;code&gt;\B&lt;/code&gt; 假定在源字符串的开头和结尾之前有一个非单词字符；因此，如果源字符串以单词字符开头（或结尾）， &lt;code&gt;\b&lt;/code&gt; 将在源字符串的开头（或结尾）匹配。否则， &lt;code&gt;\B&lt;/code&gt; 将匹配。</target>
        </trans-unit>
        <trans-unit id="6dc4a462570407b89d8c1b47db7b8c34eb82f528" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\b&lt;/code&gt; is the backspace character only inside a character class. Outside a character class, &lt;code&gt;\b&lt;/code&gt; alone is a word-character/non-word-character boundary, and &lt;code&gt;\b{}&lt;/code&gt; is some other type of boundary.</source>
          <target state="translated">&lt;code&gt;\b&lt;/code&gt; 是仅在字符类内部的退格字符。在字符类之外，单独的 &lt;code&gt;\b&lt;/code&gt; 是单词字符/非单词字符的边界，而 &lt;code&gt;\b{}&lt;/code&gt; 是其他类型的边界。</target>
        </trans-unit>
        <trans-unit id="7c4c255a44ab388eea9df94821b04725a1eb1239" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\b&lt;/code&gt; when not immediately followed by a &lt;code&gt;&quot;{&quot;&lt;/code&gt; matches at any place between a word (something matched by &lt;code&gt;\w&lt;/code&gt; ) and a non-word character (&lt;code&gt;\W&lt;/code&gt; ); &lt;code&gt;\B&lt;/code&gt; when not immediately followed by a &lt;code&gt;&quot;{&quot;&lt;/code&gt; matches at any place between characters where &lt;code&gt;\b&lt;/code&gt; doesn't match. To get better word matching of natural language text, see \b{wb} below.</source>
          <target state="translated">&lt;code&gt;\b&lt;/code&gt; 当单词（由 &lt;code&gt;\w&lt;/code&gt; 匹配的内容）与非单词字符（ &lt;code&gt;\W&lt;/code&gt; ）之间的任意位置不立即匹配时，则不紧跟 &lt;code&gt;&quot;{&quot;&lt;/code&gt; ； &lt;code&gt;\B&lt;/code&gt; 当没有紧跟一个 &lt;code&gt;&quot;{&quot;&lt;/code&gt; 匹配在其中的字符之间的任何地方 &lt;code&gt;\b&lt;/code&gt; 不匹配。为了更好地匹配自然语言文本，请参见下面的\ b {wb}。</target>
        </trans-unit>
        <trans-unit id="5781002df3a961ccd9eb514485a027a250771de9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\b{...}&lt;/code&gt; , available starting in v5.22, matches a boundary (between two characters, or before the first character of the string, or after the final character of the string) based on the Unicode rules for the boundary type specified inside the braces. The currently known boundary types are given a few paragraphs below. &lt;code&gt;\B{...}&lt;/code&gt; matches at any place between characters where &lt;code&gt;\b{...}&lt;/code&gt; of the same type doesn't match.</source>
          <target state="translated">&lt;code&gt;\b{...}&lt;/code&gt; 从v5.22开始可用的\ b {...}根据边界类型的Unicode规则匹配边界（两个字符之间，或字符串的第一个字符之前，或字符串的最后一个字符之后）大括号内指定。下面几段给出了当前已知的边界类型。 &lt;code&gt;\B{...}&lt;/code&gt; 在相同类型的 &lt;code&gt;\b{...}&lt;/code&gt; 不匹配的字符之间的任何位置匹配。</target>
        </trans-unit>
        <trans-unit id="3e43fb282e8b27b2619badf10578d9a503c1e675" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\c&lt;/code&gt; is used to denote a control character; the character following &lt;code&gt;\c&lt;/code&gt; determines the value of the construct. For example the value of &lt;code&gt;\cA&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr(1)&lt;/a&gt;&lt;/code&gt;, and the value of &lt;code&gt;\cb&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr(2)&lt;/a&gt;&lt;/code&gt;, etc. The gory details are in &lt;a href=&quot;perlop#Regexp-Quote-Like-Operators&quot;&gt;Regexp Quote-Like Operators in perlop&lt;/a&gt;. A complete list of what &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr(1)&lt;/a&gt;&lt;/code&gt;, etc. means for ASCII and EBCDIC platforms is in &lt;a href=&quot;perlebcdic#OPERATOR-DIFFERENCES&quot;&gt;OPERATOR DIFFERENCES in perlebcdic&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;\c&lt;/code&gt; 用于表示控制字符； &lt;code&gt;\c&lt;/code&gt; 后面的字符确定构造的值。例如， &lt;code&gt;\cA&lt;/code&gt; 的值是 &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr(1)&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;\cb&lt;/code&gt; 的值是 &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr(2)&lt;/a&gt;&lt;/code&gt; ，等等。详细信息&lt;a href=&quot;perlop#Regexp-Quote-Like-Operators&quot;&gt;在perlop&lt;/a&gt;中的Regexp Quote-Like运算符中。&lt;a href=&quot;perlebcdic#OPERATOR-DIFFERENCES&quot;&gt;在perlebcdic的OPERATOR DIFFERENCES中&lt;/a&gt;，有关ASCII和EBCDIC平台的 &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr(1)&lt;/a&gt;&lt;/code&gt; 等含义的完整列表。</target>
        </trans-unit>
        <trans-unit id="11a0ca0d9ef67cf04ea6ca6b5bd701f43d0336bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\d&lt;/code&gt; matches a single character considered to be a decimal</source>
          <target state="translated">&lt;code&gt;\d&lt;/code&gt; 与被认为是十进制的单个字符匹配</target>
        </trans-unit>
        <trans-unit id="428b825cb343a5c9509774542fc16bc60189535f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\g-&lt;i&gt;N&lt;/i&gt;&lt;/code&gt; (starting in Perl 5.10.0) is used for relative addressing. (It can be written as &lt;code&gt;\g{-&lt;i&gt;N&lt;/i&gt;&lt;/code&gt;.) It refers to the</source>
          <target state="translated">&lt;code&gt;\g-&lt;i&gt;N&lt;/i&gt;&lt;/code&gt; （从Perl 5.10.0开始）用于相对寻址。（可以写为 &lt;code&gt;\g{-&lt;i&gt;N&lt;/i&gt;&lt;/code&gt; 。）它是指</target>
        </trans-unit>
        <trans-unit id="ad3328b2720f5bc3f94fe796543159d6af46703a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\g1&lt;/code&gt; , &lt;code&gt;\g2&lt;/code&gt; ,... Backreferences are simply matching variables that can be used</source>
          <target state="translated">&lt;code&gt;\g1&lt;/code&gt; ， &lt;code&gt;\g2&lt;/code&gt; ，...向后引用只是可以使用的匹配变量</target>
        </trans-unit>
        <trans-unit id="c33ee556e38924ce3e6215adbca979c4cfab3cbe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\g{&lt;i&gt;name&lt;/i&gt;}&lt;/code&gt; (starting in Perl 5.10.0) can be used to back refer to a named capture group, dispensing completely with having to think about capture buffer positions.</source>
          <target state="translated">&lt;code&gt;\g{&lt;i&gt;name&lt;/i&gt;}&lt;/code&gt; （从Perl 5.10.0开始）可用于反向引用已命名的捕获组，从而省去了必须考虑捕获缓冲区位置的麻烦。</target>
        </trans-unit>
        <trans-unit id="3acb4bd92904b84995c318e676ce7b840ab01ca4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\h&lt;/code&gt; matches any character considered horizontal whitespace; this includes the platform's space and tab characters and several others listed in the table below. &lt;code&gt;\H&lt;/code&gt; matches any character not considered horizontal whitespace. They use the platform's native character set, and do not consider any locale that may otherwise be in use.</source>
          <target state="translated">&lt;code&gt;\h&lt;/code&gt; 匹配被视为水平空白的任何字符；这包括平台的空格和制表符以及下表中列出的其他几个字符。 &lt;code&gt;\H&lt;/code&gt; 匹配任何不被视为水平空白的字符。他们使用平台的本机字符集，并且不考虑可能会使用的任何语言环境。</target>
        </trans-unit>
        <trans-unit id="f48e53b9236a29c7807d180f9e942a8de2e93b26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\n&lt;/code&gt; matches a logical newline. Perl converts between &lt;code&gt;\n&lt;/code&gt; and your OS's native newline character when reading from or writing to text files.</source>
          <target state="translated">&lt;code&gt;\n&lt;/code&gt; 匹配逻辑换行符。在读取或写入文本文件时，Perl在 &lt;code&gt;\n&lt;/code&gt; 和操作系统的本机换行符之间转换。</target>
        </trans-unit>
        <trans-unit id="c47a61f1d11f4dbc31ff29f399c1b03054d85480" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\pP&lt;/code&gt; (where &lt;code&gt;P&lt;/code&gt; is a single letter) and &lt;code&gt;\p{Property}&lt;/code&gt; are used to match a character that matches the given Unicode property; properties include things like &quot;letter&quot;, or &quot;thai character&quot;. Capitalizing the sequence to &lt;code&gt;\PP&lt;/code&gt; and &lt;code&gt;\P{Property}&lt;/code&gt; make the sequence match a character that doesn't match the given Unicode property. For more details, see &lt;a href=&quot;perlrecharclass#Backslash-sequences&quot;&gt;Backslash sequences in perlrecharclass&lt;/a&gt; and &lt;a href=&quot;perlunicode#Unicode-Character-Properties&quot;&gt;Unicode Character Properties in perlunicode&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;\pP&lt;/code&gt; （其中 &lt;code&gt;P&lt;/code&gt; 是单个字母）和 &lt;code&gt;\p{Property}&lt;/code&gt; 用于匹配与给定Unicode属性匹配的字符；属性包括&amp;ldquo;字母&amp;rdquo;或&amp;ldquo;泰国字符&amp;rdquo;之类的内容。将序列大写为 &lt;code&gt;\PP&lt;/code&gt; 和 &lt;code&gt;\P{Property}&lt;/code&gt; 可使序列匹配与给定Unicode属性不匹配的字符。有关详细信息，请参阅&lt;a href=&quot;perlrecharclass#Backslash-sequences&quot;&gt;在perlrecharclass反斜杠序列&lt;/a&gt;，并&lt;a href=&quot;perlunicode#Unicode-Character-Properties&quot;&gt;在perlunicode Unicode字符属性&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d84c55ace76e1ff0519f5aac6666720a80072bd4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\pP&lt;/code&gt; and &lt;code&gt;\p{Prop}&lt;/code&gt; are character classes to match characters that fit given Unicode properties. One letter property names can be used in the &lt;code&gt;\pP&lt;/code&gt; form, with the property name following the &lt;code&gt;\p&lt;/code&gt; , otherwise, braces are required. When using braces, there is a single form, which is just the property name enclosed in the braces, and a compound form which looks like &lt;code&gt;\p{name=value}&lt;/code&gt; , which means to match if the property &quot;name&quot; for the character has that particular &quot;value&quot;. For instance, a match for a number can be written as &lt;code&gt;/\pN/&lt;/code&gt; or as &lt;code&gt;/\p{Number}/&lt;/code&gt; , or as &lt;code&gt;/\p{Number=True}/&lt;/code&gt; . Lowercase letters are matched by the property</source>
          <target state="translated">&lt;code&gt;\pP&lt;/code&gt; 和 &lt;code&gt;\p{Prop}&lt;/code&gt; 是字符类，用于匹配适合给定Unicode属性的字符。可以以 &lt;code&gt;\pP&lt;/code&gt; 格式使用一个字母的属性名称，该属性名称后跟 &lt;code&gt;\p&lt;/code&gt; ，否则必须使用花括号。使用花括号时，只有一个形式，即括号中包含的属性名称，而复合形式看起来像 &lt;code&gt;\p{name=value}&lt;/code&gt; ，这意味着如果字符的属性&amp;ldquo; name&amp;rdquo;具有该特定的&amp;ldquo;值&amp;rdquo;。例如，数字的匹配项可以写为 &lt;code&gt;/\pN/&lt;/code&gt; 或 &lt;code&gt;/\p{Number}/&lt;/code&gt; 或 &lt;code&gt;/\p{Number=True}/&lt;/code&gt; 。小写字母由属性匹配</target>
        </trans-unit>
        <trans-unit id="85149b0f3a91ea78c71d331abbaa6fc18476f335" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\p{Blank}&lt;/code&gt; and &lt;code&gt;\p{HorizSpace}&lt;/code&gt; are synonyms.</source>
          <target state="translated">&lt;code&gt;\p{Blank}&lt;/code&gt; 和 &lt;code&gt;\p{HorizSpace}&lt;/code&gt; 是同义词。</target>
        </trans-unit>
        <trans-unit id="25c9fecf27d0a09b0629761f6ae905625678010b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\p{PosixPunct}&lt;/code&gt; and &lt;code&gt;[[:punct:]]&lt;/code&gt; in the ASCII range match all non-controls, non-alphanumeric, non-space characters: &lt;code&gt;[-!&quot;#$%&amp;amp;'()*+,./:;&amp;lt;=&amp;gt;?@[\\\]^_`{|}~]&lt;/code&gt; (although if a locale is in effect, it could alter the behavior of &lt;code&gt;[[:punct:]]&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;\p{PosixPunct}&lt;/code&gt; ASCII范围内的\ p {PosixPunct}和 &lt;code&gt;[[:punct:]]&lt;/code&gt; 与所有非控件，非字母数字，非空格字符匹配： &lt;code&gt;[-!&quot;#$%&amp;amp;'()*+,./:;&amp;lt;=&amp;gt;?@[\\\]^_`{|}~]&lt;/code&gt; （尽管有效的语言环境可能会改变 &lt;code&gt;[[:punct:]]&lt;/code&gt; 的行为）。</target>
        </trans-unit>
        <trans-unit id="755edd19d42bc00d2d42f52db8c39e41d61b74f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\p{XPerlSpace}&lt;/code&gt; and &lt;code&gt;\p{Space}&lt;/code&gt; match identically starting with Perl v5.18. In earlier versions, these differ only in that in non-locale matching, &lt;code&gt;\p{XPerlSpace}&lt;/code&gt; did not match the vertical tab, &lt;code&gt;\cK&lt;/code&gt; . Same for the two ASCII-only range forms.</source>
          <target state="translated">&lt;code&gt;\p{XPerlSpace}&lt;/code&gt; 从Perl v5.18开始，\ p {XPerlSpace}和 &lt;code&gt;\p{Space}&lt;/code&gt; 完全相同。在早期版本中，这些区别仅在于非语言环境匹配 &lt;code&gt;\p{XPerlSpace}&lt;/code&gt; 与垂直选项卡 &lt;code&gt;\cK&lt;/code&gt; 不匹配。对于两个仅ASCII范围形式相同。</target>
        </trans-unit>
        <trans-unit id="40bf92acce79d5b5002afaba6916dbd6bb155338" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\p{XPosixPunct}&lt;/code&gt; and (under Unicode rules) &lt;code&gt;[[:punct:]]&lt;/code&gt;, match what &lt;code&gt;\p{PosixPunct}&lt;/code&gt; matches in the ASCII range, plus what &lt;code&gt;\p{Punct}&lt;/code&gt; matches. This is different than strictly matching according to &lt;code&gt;\p{Punct}&lt;/code&gt; . Another way to say it is that if Unicode rules are in effect, &lt;code&gt;[[:punct:]]&lt;/code&gt; matches all characters that Unicode considers punctuation, plus all ASCII-range characters that Unicode considers symbols.</source>
          <target state="translated">&lt;code&gt;\p{XPosixPunct}&lt;/code&gt; 和（根据Unicode规则） &lt;code&gt;[[:punct:]]&lt;/code&gt; ，匹配 &lt;code&gt;\p{PosixPunct}&lt;/code&gt; 在ASCII范围内匹配的内容，再匹配 &lt;code&gt;\p{Punct}&lt;/code&gt; 。这与根据 &lt;code&gt;\p{Punct}&lt;/code&gt; 严格匹配不同。换句话说，如果Unicode规则有效，则 &lt;code&gt;[[:punct:]]&lt;/code&gt; 匹配Unicode认为标点的所有字符，以及Unicode认为符号的所有ASCII范围字符。</target>
        </trans-unit>
        <trans-unit id="cf3cef3a5e22571510fa5a04adc6bd52e2e9e07c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\s&lt;/code&gt; matches [\t\n\f\r ] and, starting in Perl v5.18, the vertical tab, &lt;code&gt;\cK&lt;/code&gt; . (See note &lt;code&gt;[1]&lt;/code&gt; below for a discussion of this.) Note that this list doesn't include the non-breaking space.</source>
          <target state="translated">&lt;code&gt;\s&lt;/code&gt; 匹配[\ t \ n \ f \ r]，从Perl v5.18开始，垂直标签为 &lt;code&gt;\cK&lt;/code&gt; 。（有关此内容的讨论，请参见下面的注释 &lt;code&gt;[1]&lt;/code&gt; 。）请注意，此列表不包含不间断的空格。</target>
        </trans-unit>
        <trans-unit id="41ad191b59c68476309e8cdff37277905b3d644e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\s&lt;/code&gt; matches any single character considered whitespace.</source>
          <target state="translated">&lt;code&gt;\s&lt;/code&gt; 匹配被视为空格的任何单个字符。</target>
        </trans-unit>
        <trans-unit id="164846db6b825e570c0d7edc2e8e99d0a8cd9c3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\s&lt;/code&gt; matches exactly the characters shown with an &quot;s&quot; column in the table below.</source>
          <target state="translated">&lt;code&gt;\s&lt;/code&gt; 完全匹配下表中用&amp;ldquo; s&amp;rdquo;列显示的字符。</target>
        </trans-unit>
        <trans-unit id="dfe6b3493a7e126712936240780ab43a7647b5c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\s&lt;/code&gt; matches exactly the code points above 255 shown with an &quot;s&quot; column in the table below.</source>
          <target state="translated">&lt;code&gt;\s&lt;/code&gt; 与下表中用&amp;ldquo; s&amp;rdquo;列显示的255以上的代码点完全匹配。</target>
        </trans-unit>
        <trans-unit id="53c42afe9cf980295f6ccaddc4816a2d0390a04f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\s&lt;/code&gt; matches whatever the locale considers to be whitespace.</source>
          <target state="translated">&lt;code&gt;\s&lt;/code&gt; 匹配任何语言环境认为是空格的地方。</target>
        </trans-unit>
        <trans-unit id="e17398607beae9e16f5d507bd2de1c2792253d60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\v&lt;/code&gt; matches any character considered vertical whitespace; this includes the platform's carriage return and line feed characters (newline) plus several other characters, all listed in the table below. &lt;code&gt;\V&lt;/code&gt; matches any character not considered vertical whitespace. They use the platform's native character set, and do not consider any locale that may otherwise be in use.</source>
          <target state="translated">&lt;code&gt;\v&lt;/code&gt; 匹配被视为垂直空格的任何字符；这包括平台的回车符和换行符（换行符）以及其他几个字符，所有这些字符均列在下表中。 &lt;code&gt;\V&lt;/code&gt; 匹配任何不被视为垂直空格的字符。他们使用平台的本机字符集，并且不考虑可能会使用的任何语言环境。</target>
        </trans-unit>
        <trans-unit id="e84d6b7c93d52f35bcd484412e96304ddb465e55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\w&lt;/code&gt; can be used to match a Japanese ideograph, for instance; and &lt;code&gt;[[:digit:]]&lt;/code&gt; a Bengali number.</source>
          <target state="translated">&lt;code&gt;\w&lt;/code&gt; 可用于匹配日本表意文字；和 &lt;code&gt;[[:digit:]]&lt;/code&gt; 孟加拉数字。</target>
        </trans-unit>
        <trans-unit id="12b56560fcb8e649f2853269006af953eb9769e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\w&lt;/code&gt; is a character class that matches any single</source>
          <target state="translated">&lt;code&gt;\w&lt;/code&gt; 是与任何单个字符匹配的字符类</target>
        </trans-unit>
        <trans-unit id="48cb702e25188808179cd08641633cb28eaa0eac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\w&lt;/code&gt; matches [a-zA-Z0-9_].</source>
          <target state="translated">&lt;code&gt;\w&lt;/code&gt; 匹配[a-zA-Z0-9_]。</target>
        </trans-unit>
        <trans-unit id="a2fd3f12a256fac6c8c475c41016b746e332589d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\w&lt;/code&gt; matches exactly what &lt;code&gt;\p{Word}&lt;/code&gt; matches.</source>
          <target state="translated">&lt;code&gt;\w&lt;/code&gt; 与 &lt;code&gt;\p{Word}&lt;/code&gt; 匹配。</target>
        </trans-unit>
        <trans-unit id="fbdee4d0daab297bf0961e4ccefe2a5955a8d76f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\w&lt;/code&gt; matches the 63 characters [a-zA-Z0-9_].</source>
          <target state="translated">&lt;code&gt;\w&lt;/code&gt; 匹配63个字符[a-zA-Z0-9_]。</target>
        </trans-unit>
        <trans-unit id="eb954d084b4018682f968a2007d9fb696787dd4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\w&lt;/code&gt; matches the platform's native underscore character plus whatever the locale considers to be alphanumeric.</source>
          <target state="translated">&lt;code&gt;\w&lt;/code&gt; 与平台的本机下划线字符以及语言环境认为是字母数字的任何字符匹配。</target>
        </trans-unit>
        <trans-unit id="1175cf96f88bb9109cfcdb274bab554078c0da6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\w&lt;/code&gt; matches the same as &lt;code&gt;\p{Word}&lt;/code&gt; matches in this range. That is, it matches Thai letters, Greek letters, etc. This includes connector punctuation (like the underscore) which connect two words together, or diacritics, such as a &lt;code&gt;COMBINING TILDE&lt;/code&gt; and the modifier letters, which are generally used to add auxiliary markings to letters.</source>
          <target state="translated">&lt;code&gt;\w&lt;/code&gt; 在此范围内与 &lt;code&gt;\p{Word}&lt;/code&gt; 匹配相同。也就是说，它匹配泰语字母，希腊字母等。这包括将两个单词连接在一起的连接器标点符号（例如下划线），或变音符号，例如 &lt;code&gt;COMBINING TILDE&lt;/code&gt; 和修饰符字母，通常用于在其上添加辅助标记字母。</target>
        </trans-unit>
        <trans-unit id="fdf252af84459ebbc3355f5052e1c483febc2e96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\x{}&lt;/code&gt; and &lt;code&gt;\o{}&lt;/code&gt; can also be used to specify code points at compile time in double-quotish strings, but, for backward compatibility with older Perls, the same rules apply as with &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr()&lt;/a&gt;&lt;/code&gt; for code points less than 256.</source>
          <target state="translated">&lt;code&gt;\x{}&lt;/code&gt; 和 &lt;code&gt;\o{}&lt;/code&gt; 也可以用于在编译时以双引号字符串指定代码点，但是，为了与较早的Perls向后兼容，对于小于256的代码点，应使用与 &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr()&lt;/a&gt;&lt;/code&gt; 相同的规则。</target>
        </trans-unit>
        <trans-unit id="5fe4cad9ff217e9c6a9d88999a2c91a4805e6cd4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\z&lt;/code&gt; and &lt;code&gt;\Z&lt;/code&gt; match at the end of the string. If the &lt;code&gt;/m&lt;/code&gt; modifier isn't used, then &lt;code&gt;/\Z/&lt;/code&gt; is equivalent to &lt;code&gt;/$/&lt;/code&gt; ; that is, it matches at the end of the string, or one before the newline at the end of the string. If the &lt;code&gt;/m&lt;/code&gt; modifier is used, then &lt;code&gt;/$/&lt;/code&gt; matches at internal newlines, but the meaning of &lt;code&gt;/\Z/&lt;/code&gt; isn't changed by the &lt;code&gt;/m&lt;/code&gt; modifier. &lt;code&gt;\Z&lt;/code&gt; matches at the end of the string (or just before a trailing newline) regardless whether the &lt;code&gt;/m&lt;/code&gt; modifier is used.</source>
          <target state="translated">&lt;code&gt;\z&lt;/code&gt; 和 &lt;code&gt;\Z&lt;/code&gt; 在字符串末尾匹配。如果未使用 &lt;code&gt;/m&lt;/code&gt; 修饰符，则 &lt;code&gt;/\Z/&lt;/code&gt; 等效于 &lt;code&gt;/$/&lt;/code&gt; ;也就是说，它在字符串的末尾匹配，或者在字符串的末尾在换行符之前匹配。如果使用了 &lt;code&gt;/m&lt;/code&gt; 修饰符，则 &lt;code&gt;/$/&lt;/code&gt; 在内部换行符处匹配，但 &lt;code&gt;/m&lt;/code&gt; &lt;code&gt;/\Z/&lt;/code&gt; 不会改变/ \ Z /的含义。不管是否使用 &lt;code&gt;/m&lt;/code&gt; 修饰符， &lt;code&gt;\Z&lt;/code&gt; 将在字符串末尾（或紧跟在换行符之后）匹配。</target>
        </trans-unit>
        <trans-unit id="38f47b559e51c9cb06b7531b5b8a212ee7a07836" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\z&lt;/code&gt; is just like &lt;code&gt;\Z&lt;/code&gt; , except that it does not match before a trailing newline. &lt;code&gt;\z&lt;/code&gt; matches at the end of the string only, regardless of the modifiers used, and not just before a newline. It is how to anchor the match to the true end of the string under all conditions.</source>
          <target state="translated">&lt;code&gt;\z&lt;/code&gt; 就像 &lt;code&gt;\Z&lt;/code&gt; ，只不过它在尾随换行符之前不匹配。 &lt;code&gt;\z&lt;/code&gt; 仅在字符串的末尾匹配，而与使用的修饰符无关，并且不仅在换行符之前。这是在所有条件下如何将匹配项锚定到字符串的真实结尾的方法。</target>
        </trans-unit>
        <trans-unit id="a3a70aedbc9fae24b3656fb271fb5a35b52ef808" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;]&lt;/code&gt; is the offset of the start of the substring matched by</source>
          <target state="translated">&lt;code&gt;]&lt;/code&gt; 是匹配的子字符串开头的偏移量</target>
        </trans-unit>
        <trans-unit id="e1d7f97ecc73edc5732b4917233d89a3115636be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;^&lt;/code&gt; and &lt;code&gt;$&lt;/code&gt; in regular expression patterns are supposed to match all these, but don't. These characters also don't, but should, affect &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt;&lt;code&gt;$.&lt;/code&gt; , and script line numbers.</source>
          <target state="translated">&lt;code&gt;^&lt;/code&gt; 正则表达式模式中的^和 &lt;code&gt;$&lt;/code&gt; 应该匹配所有这些，但不匹配。这些字符也不会但应该影响 &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; &lt;code&gt;$.&lt;/code&gt; 以及脚本行号。</target>
        </trans-unit>
        <trans-unit id="fb2224dcf7ebf0b526271854823f3d301837385c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_PC_CHOWN_RESTRICTED&lt;/code&gt;&lt;code&gt;_PC_LINK_MAX&lt;/code&gt;&lt;code&gt;_PC_MAX_CANON&lt;/code&gt;&lt;code&gt;_PC_MAX_INPUT&lt;/code&gt;&lt;code&gt;_PC_NAME_MAX&lt;/code&gt;&lt;code&gt;_PC_NO_TRUNC&lt;/code&gt;&lt;code&gt;_PC_PATH_MAX&lt;/code&gt;&lt;code&gt;_PC_PIPE_BUF&lt;/code&gt;&lt;code&gt;_PC_VDISABLE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;_PC_CHOWN_RESTRICTED&lt;/code&gt;&lt;code&gt;_PC_LINK_MAX&lt;/code&gt;&lt;code&gt;_PC_MAX_CANON&lt;/code&gt;&lt;code&gt;_PC_MAX_INPUT&lt;/code&gt;&lt;code&gt;_PC_NAME_MAX&lt;/code&gt;&lt;code&gt;_PC_NO_TRUNC&lt;/code&gt;&lt;code&gt;_PC_PATH_MAX&lt;/code&gt;&lt;code&gt;_PC_PIPE_BUF&lt;/code&gt;&lt;code&gt;_PC_VDISABLE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="63011a4008ee629a0f26075a9a743d3b2b2ede8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_POSIX_ARG_MAX&lt;/code&gt;&lt;code&gt;_POSIX_CHILD_MAX&lt;/code&gt;&lt;code&gt;_POSIX_CHOWN_RESTRICTED&lt;/code&gt;&lt;code&gt;_POSIX_JOB_CONTROL&lt;/code&gt;&lt;code&gt;_POSIX_LINK_MAX&lt;/code&gt;&lt;code&gt;_POSIX_MAX_CANON&lt;/code&gt;&lt;code&gt;_POSIX_MAX_INPUT&lt;/code&gt;&lt;code&gt;_POSIX_NAME_MAX&lt;/code&gt;&lt;code&gt;_POSIX_NGROUPS_MAX&lt;/code&gt;&lt;code&gt;_POSIX_NO_TRUNC&lt;/code&gt;&lt;code&gt;_POSIX_OPEN_MAX&lt;/code&gt;&lt;code&gt;_POSIX_PATH_MAX&lt;/code&gt;&lt;code&gt;_POSIX_PIPE_BUF&lt;/code&gt;&lt;code&gt;_POSIX_SAVED_IDS&lt;/code&gt;&lt;code&gt;_POSIX_SSIZE_MAX&lt;/code&gt;&lt;code&gt;_POSIX_STREAM_MAX&lt;/code&gt;&lt;code&gt;_POSIX_TZNAME_MAX&lt;/code&gt;&lt;code&gt;_POSIX_VDISABLE&lt;/code&gt;&lt;code&gt;_POSIX_VERSION&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;_POSIX_ARG_MAX&lt;/code&gt;&lt;code&gt;_POSIX_CHILD_MAX&lt;/code&gt;&lt;code&gt;_POSIX_CHOWN_RESTRICTED&lt;/code&gt;&lt;code&gt;_POSIX_JOB_CONTROL&lt;/code&gt;&lt;code&gt;_POSIX_LINK_MAX&lt;/code&gt;&lt;code&gt;_POSIX_MAX_CANON&lt;/code&gt;&lt;code&gt;_POSIX_MAX_INPUT&lt;/code&gt;&lt;code&gt;_POSIX_NAME_MAX&lt;/code&gt;&lt;code&gt;_POSIX_NGROUPS_MAX&lt;/code&gt;&lt;code&gt;_POSIX_NO_TRUNC&lt;/code&gt;&lt;code&gt;_POSIX_OPEN_MAX&lt;/code&gt;&lt;code&gt;_POSIX_PATH_MAX&lt;/code&gt;&lt;code&gt;_POSIX_PIPE_BUF&lt;/code&gt;&lt;code&gt;_POSIX_SAVED_IDS&lt;/code&gt;&lt;code&gt;_POSIX_SSIZE_MAX&lt;/code&gt;&lt;code&gt;_POSIX_STREAM_MAX&lt;/code&gt;&lt;code&gt;_POSIX_TZNAME_MAX&lt;/code&gt;&lt;code&gt;_POSIX_VDISABLE&lt;/code&gt;&lt;code&gt;_POSIX_VERSION&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3d0338a6cffd158f71c4a073e1191fe24d695975" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_SC_ARG_MAX&lt;/code&gt;&lt;code&gt;_SC_CHILD_MAX&lt;/code&gt;&lt;code&gt;_SC_CLK_TCK&lt;/code&gt;&lt;code&gt;_SC_JOB_CONTROL&lt;/code&gt;&lt;code&gt;_SC_NGROUPS_MAX&lt;/code&gt;&lt;code&gt;_SC_OPEN_MAX&lt;/code&gt;&lt;code&gt;_SC_PAGESIZE&lt;/code&gt;&lt;code&gt;_SC_SAVED_IDS&lt;/code&gt;&lt;code&gt;_SC_STREAM_MAX&lt;/code&gt;&lt;code&gt;_SC_TZNAME_MAX&lt;/code&gt;&lt;code&gt;_SC_VERSION&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;_SC_ARG_MAX&lt;/code&gt;&lt;code&gt;_SC_CHILD_MAX&lt;/code&gt;&lt;code&gt;_SC_CLK_TCK&lt;/code&gt;&lt;code&gt;_SC_JOB_CONTROL&lt;/code&gt;&lt;code&gt;_SC_NGROUPS_MAX&lt;/code&gt;&lt;code&gt;_SC_OPEN_MAX&lt;/code&gt;&lt;code&gt;_SC_PAGESIZE&lt;/code&gt;&lt;code&gt;_SC_SAVED_IDS&lt;/code&gt;&lt;code&gt;_SC_STREAM_MAX&lt;/code&gt;&lt;code&gt;_SC_TZNAME_MAX&lt;/code&gt;&lt;code&gt;_SC_VERSION&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0c4507a34314e4717b1cc2380be0c570f4cf8cc5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__DATA__&lt;/code&gt; , &lt;code&gt;__END__&lt;/code&gt; , &lt;code&gt;and&lt;/code&gt; , &lt;code&gt;cmp&lt;/code&gt; , &lt;code&gt;default&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/dump&quot;&gt;dump&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;else&lt;/code&gt; , &lt;code&gt;elsif&lt;/code&gt; , &lt;code&gt;eq&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;for&lt;/code&gt; , &lt;code&gt;foreach&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/format&quot;&gt;format&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;ge&lt;/code&gt; , &lt;code&gt;given&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;gt&lt;/code&gt; , &lt;code&gt;if&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;le&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;lt&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/map&quot;&gt;map&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;ne&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/next&quot;&gt;next&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;or&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/package&quot;&gt;package&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/q&quot;&gt;q&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/qq&quot;&gt;qq&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/qw&quot;&gt;qw&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/qx&quot;&gt;qx&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/redo&quot;&gt;redo&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/return&quot;&gt;return&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/say&quot;&gt;say&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/sort&quot;&gt;sort&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;unless&lt;/code&gt; , &lt;code&gt;until&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;when&lt;/code&gt; , &lt;code&gt;while&lt;/code&gt; , &lt;code&gt;x&lt;/code&gt; , &lt;code&gt;xor&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/y&quot;&gt;y&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__DATA__&lt;/code&gt; ， &lt;code&gt;__END__&lt;/code&gt; ， &lt;code&gt;and&lt;/code&gt; ， &lt;code&gt;cmp&lt;/code&gt; ， &lt;code&gt;default&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/dump&quot;&gt;dump&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;else&lt;/code&gt; ， &lt;code&gt;elsif&lt;/code&gt; ， &lt;code&gt;eq&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;for&lt;/code&gt; ， &lt;code&gt;foreach&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/format&quot;&gt;format&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;ge&lt;/code&gt; ， &lt;code&gt;given&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt; 的， &lt;code&gt;gt&lt;/code&gt; ， &lt;code&gt;if&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;le&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;lt&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/map&quot;&gt;map&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;ne&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/next&quot;&gt;next&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;or&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/package&quot;&gt;package&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; 的， &lt;code&gt;&lt;a href=&quot;functions/q&quot;&gt;q&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/qq&quot;&gt;qq&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/qw&quot;&gt;qw&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/qx&quot;&gt;qx&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/redo&quot;&gt;redo&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/return&quot;&gt;return&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/say&quot;&gt;say&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/sort&quot;&gt;sort&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;unless&lt;/code&gt; ， &lt;code&gt;until&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;when&lt;/code&gt; ， &lt;code&gt;while&lt;/code&gt; ， &lt;code&gt;x&lt;/code&gt; ， &lt;code&gt;xor&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/y&quot;&gt;y&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f436bfdadc0a4193ec468e3af9c90fc24e2967c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__DIE__&lt;/code&gt; /&lt;code&gt;__WARN__&lt;/code&gt; handlers are very special in one respect: they may be called to report (probable) errors found by the parser. In such a case the parser may be in inconsistent state, so any attempt to evaluate Perl code from such a handler will probably result in a segfault. This means that warnings or errors that result from parsing Perl should be used with extreme caution, like this:</source>
          <target state="translated">&lt;code&gt;__DIE__&lt;/code&gt; / &lt;code&gt;__WARN__&lt;/code&gt; 处理程序在一个方面非常特殊：可以调用它们来报告解析器发现的（可能）错误。在这种情况下，解析器可能处于不一致状态，因此任何从此类处理程序评估Perl代码的尝试都可能导致段错误。这意味着在解析Perl时产生的警告或错误应格外小心，例如：</target>
        </trans-unit>
        <trans-unit id="c5d0b679130382dce8fe2a86280667432e82e672" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_fieldhash&lt;/code&gt; is the internal function used to create field hashes. It takes two arguments, a hashref and a mode. If the mode is boolean false, the hash is not changed but tested if it is a field hash. If the hash isn't a field hash the return value is boolean false. If it is, the return value indicates the mode of field hash. When called with a boolean true mode, it turns the given hash into a field hash of this mode, returning the mode of the created field hash. &lt;code&gt;_fieldhash&lt;/code&gt; does not erase the given hash.</source>
          <target state="translated">&lt;code&gt;_fieldhash&lt;/code&gt; 是用于创建字段哈希的内部函数。它有两个参数，一个hashref和一个模式。如果模式为boolean false，则不更改哈希值，但会测试它是否是字段哈希值。如果哈希值不是字段哈希值，则返回值为布尔值false。如果是，则返回值指示字段哈希的模式。当使用布尔值true模式调用时，它将给定的哈希转换为该模式的字段哈希，并返回创建的字段哈希的模式。 &lt;code&gt;_fieldhash&lt;/code&gt; 不会擦除给定的哈希。</target>
        </trans-unit>
        <trans-unit id="2e8e054b1c07b425b270bb9c7e13c794d2d9092f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;`&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;`&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="aa85beb7344aca10b8cc8699807de44f549b3521" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;``&lt;/code&gt; and pipe-&lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; do not work under DOS.</source>
          <target state="translated">&lt;code&gt;``&lt;/code&gt; 和管道 &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; 在DOS下不起作用。</target>
        </trans-unit>
        <trans-unit id="8e8938480285fe7482d06df8890143549cb42503" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a*&lt;/code&gt; = match 'a' 0 or more times, i.e., any number of times</source>
          <target state="translated">&lt;code&gt;a*&lt;/code&gt; =匹配'a'0次或多次，即任意次数</target>
        </trans-unit>
        <trans-unit id="21b92f8e0d8dad1b0caf50f135db9b635632e760" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a*&lt;/code&gt; means: match 'a' 0 or more times, i.e., any number of times</source>
          <target state="translated">&lt;code&gt;a*&lt;/code&gt; 表示：匹配&amp;ldquo; a&amp;rdquo; 0次或多次，即任意次数</target>
        </trans-unit>
        <trans-unit id="5ab7362646f1c360bc9715cbf44b1a07df61dc33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a*?&lt;/code&gt; means: match 'a' 0 or more times, i.e., any number of times, but as few times as possible</source>
          <target state="translated">&lt;code&gt;a*?&lt;/code&gt; 表示：匹配&amp;ldquo; a&amp;rdquo; 0次或多次，即任意次数，但次数尽可能少</target>
        </trans-unit>
        <trans-unit id="53ca230acfe7cf51016cf1f4619d8d0fb5d9ddc1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a+&lt;/code&gt; = match 'a' 1 or more times, i.e., at least once</source>
          <target state="translated">&lt;code&gt;a+&lt;/code&gt; =匹配&amp;ldquo; a&amp;rdquo; 1次或更多次，即至少一次</target>
        </trans-unit>
        <trans-unit id="57839f788d53642fe08867e5699ec952e95d5a35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a+&lt;/code&gt; means: match 'a' 1 or more times, i.e., at least once</source>
          <target state="translated">&lt;code&gt;a+&lt;/code&gt; 表示：匹配&amp;ldquo; a&amp;rdquo; 1次或更多次，即至少匹配一次</target>
        </trans-unit>
        <trans-unit id="07e81ca192d31fdf9434c5f46dda1eb5e709a3b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a+?&lt;/code&gt; means: match 'a' 1 or more times, i.e., at least once, but as few times as possible</source>
          <target state="translated">&lt;code&gt;a+?&lt;/code&gt; 表示：匹配&amp;ldquo; a&amp;rdquo; 1次或更多次，即至少匹配一次，但次数越少越好</target>
        </trans-unit>
        <trans-unit id="5abe405e15c76b256da476c55e02d7cd0a2d157a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a.out&lt;/code&gt; -style build</source>
          <target state="translated">&lt;code&gt;a.out&lt;/code&gt; 样式的构建</target>
        </trans-unit>
        <trans-unit id="230edf66068099823e9804e4de860018cd863dad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a?&lt;/code&gt; = match 'a' 1 or 0 times</source>
          <target state="translated">&lt;code&gt;a?&lt;/code&gt; =匹配'a'1或0次</target>
        </trans-unit>
        <trans-unit id="9da27773f632fe6532ea60454a7e99563c5df049" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a?&lt;/code&gt; means: match 'a' 1 or 0 times</source>
          <target state="translated">&lt;code&gt;a?&lt;/code&gt; 表示：匹配&amp;ldquo; a&amp;rdquo; 1或0次</target>
        </trans-unit>
        <trans-unit id="d95b02ff02305f1ba01c669bd763805726d17747" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a??&lt;/code&gt; means: match 'a' 0 or 1 times. Try 0 first, then 1.</source>
          <target state="translated">&lt;code&gt;a??&lt;/code&gt; 表示：匹配&amp;ldquo; a&amp;rdquo; 0或1次。首先尝试0，然后尝试1。</target>
        </trans-unit>
        <trans-unit id="40fc80bf6fcacd730498ea7c90f9cf90dcfb60ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;and&lt;/code&gt; , &lt;code&gt;AUTOLOAD&lt;/code&gt; , &lt;code&gt;BEGIN&lt;/code&gt; , &lt;code&gt;CHECK&lt;/code&gt; , &lt;code&gt;cmp&lt;/code&gt; , &lt;code&gt;CORE&lt;/code&gt; , &lt;code&gt;__DATA__&lt;/code&gt; , &lt;code&gt;default&lt;/code&gt; , &lt;code&gt;DESTROY&lt;/code&gt; , &lt;code&gt;else&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/elseif&quot;&gt;elseif&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;elsif&lt;/code&gt; , &lt;code&gt;END&lt;/code&gt; , &lt;code&gt;__END__&lt;/code&gt; , &lt;code&gt;eq&lt;/code&gt; , &lt;code&gt;for&lt;/code&gt; , &lt;code&gt;foreach&lt;/code&gt; , &lt;code&gt;ge&lt;/code&gt; , &lt;code&gt;given&lt;/code&gt; , &lt;code&gt;gt&lt;/code&gt; , &lt;code&gt;if&lt;/code&gt; , &lt;code&gt;INIT&lt;/code&gt; , &lt;code&gt;le&lt;/code&gt; , &lt;code&gt;lt&lt;/code&gt; , &lt;code&gt;ne&lt;/code&gt; , &lt;code&gt;not&lt;/code&gt; , &lt;code&gt;or&lt;/code&gt; , &lt;code&gt;UNITCHECK&lt;/code&gt; , &lt;code&gt;unless&lt;/code&gt; , &lt;code&gt;until&lt;/code&gt; , &lt;code&gt;when&lt;/code&gt; , &lt;code&gt;while&lt;/code&gt; , &lt;code&gt;x&lt;/code&gt; , &lt;code&gt;xor&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;and&lt;/code&gt; ， &lt;code&gt;AUTOLOAD&lt;/code&gt; ， &lt;code&gt;BEGIN&lt;/code&gt; ， &lt;code&gt;CHECK&lt;/code&gt; ， &lt;code&gt;cmp&lt;/code&gt; ， &lt;code&gt;CORE&lt;/code&gt; ， &lt;code&gt;__DATA__&lt;/code&gt; ， &lt;code&gt;default&lt;/code&gt; ， &lt;code&gt;DESTROY&lt;/code&gt; ， &lt;code&gt;else&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/elseif&quot;&gt;elseif&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;elsif&lt;/code&gt; ， &lt;code&gt;END&lt;/code&gt; ， &lt;code&gt;__END__&lt;/code&gt; ， &lt;code&gt;eq&lt;/code&gt; ， &lt;code&gt;for&lt;/code&gt; ， &lt;code&gt;foreach&lt;/code&gt; ， &lt;code&gt;ge&lt;/code&gt; ， &lt;code&gt;given&lt;/code&gt; ， &lt;code&gt;gt&lt;/code&gt; ， &lt;code&gt;if&lt;/code&gt; ， &lt;code&gt;INIT&lt;/code&gt; ， &lt;code&gt;le&lt;/code&gt; ， &lt;code&gt;lt&lt;/code&gt; ， &lt;code&gt;ne&lt;/code&gt; ， &lt;code&gt;not&lt;/code&gt; ， &lt;code&gt;or&lt;/code&gt; ， &lt;code&gt;UNITCHECK&lt;/code&gt; ， &lt;code&gt;unless&lt;/code&gt; ， &lt;code&gt;until&lt;/code&gt; ， &lt;code&gt;when&lt;/code&gt; ， &lt;code&gt;while&lt;/code&gt; ， &lt;code&gt;x&lt;/code&gt; ， &lt;code&gt;xor&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="237ce529899dd468665989ad0de897e59c5ea0d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;anyinflate&lt;/code&gt; expects at least two parameters, &lt;code&gt;$input_filename_or_reference&lt;/code&gt; and &lt;code&gt;$output_filename_or_reference&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;anyinflate&lt;/code&gt; 至少需要两个参数 &lt;code&gt;$input_filename_or_reference&lt;/code&gt; 和 &lt;code&gt;$output_filename_or_reference&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8a199cbe1000a9f2232c1b768205f8a71916e5c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;anyuncompress&lt;/code&gt; expects at least two parameters, &lt;code&gt;$input_filename_or_reference&lt;/code&gt; and &lt;code&gt;$output_filename_or_reference&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;anyuncompress&lt;/code&gt; 需要至少两个参数 &lt;code&gt;$input_filename_or_reference&lt;/code&gt; 和 &lt;code&gt;$output_filename_or_reference&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="594b23475e0e1b9413cc86129d116de9c7483b21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;argc&lt;/code&gt; is the number of args (in addition to $self) to pass to the method.</source>
          <target state="translated">&lt;code&gt;argc&lt;/code&gt; 是传递给该方法的args数目（除$ self外）。</target>
        </trans-unit>
        <trans-unit id="eecb8a104e58709e3b9705ed1f8707f7f5de3bcb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;as_number()&lt;/code&gt; is an alias for &lt;code&gt;as_int()&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;as_number()&lt;/code&gt; 是一个别名 &lt;code&gt;as_int()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3d961a102b3d98060a65c3134d4e3d1aa8466353" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;as_number()&lt;/code&gt; is an alias to this method. &lt;code&gt;as_number&lt;/code&gt; was introduced in v1.22, while &lt;code&gt;as_int()&lt;/code&gt; was only introduced in v1.68.</source>
          <target state="translated">&lt;code&gt;as_number()&lt;/code&gt; 是此方法的别名。 &lt;code&gt;as_number&lt;/code&gt; 中引入了as_number，而 &lt;code&gt;as_int()&lt;/code&gt; 中仅引入了as_int （）。</target>
        </trans-unit>
        <trans-unit id="71746fcdf6fe99a0ad5a137467eb6e68086bdb69" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;async&lt;/code&gt; creates a thread to execute the block immediately following it. This block is treated as an anonymous sub, and so must have a semi-colon after the closing brace. Like &lt;code&gt;Thread-&amp;amp;gt;new&lt;/code&gt; , &lt;code&gt;async&lt;/code&gt; returns a thread object.</source>
          <target state="translated">&lt;code&gt;async&lt;/code&gt; 创建一个线程以立即执行紧随其后的块。该块被视为匿名子，因此在右括号后必须使用分号。像 &lt;code&gt;Thread-&amp;amp;gt;new&lt;/code&gt; 一样， &lt;code&gt;async&lt;/code&gt; 返回线程对象。</target>
        </trans-unit>
        <trans-unit id="8f0efd0ea8940854ffa84069ded342e116934964" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;async&lt;/code&gt; creates a thread to execute the block immediately following it. This block is treated as an anonymous subroutine, and so must have a semicolon after the closing brace. Like &lt;code&gt;threads-&amp;gt;create()&lt;/code&gt; , &lt;code&gt;async&lt;/code&gt; returns a</source>
          <target state="translated">&lt;code&gt;async&lt;/code&gt; 创建一个线程以立即执行紧随其后的块。该块被视为匿名子例程，因此在右括号后必须使用分号。像 &lt;code&gt;threads-&amp;gt;create()&lt;/code&gt; 一样， &lt;code&gt;async&lt;/code&gt; 返回一个</target>
        </trans-unit>
        <trans-unit id="20e239fdae6920d9515de44e7fcc79dd92cfa709" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;auto_help&lt;/code&gt; will be enabled if the calling program explicitly specified a version number higher than 2.32 in the &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; statement.</source>
          <target state="translated">&lt;code&gt;auto_help&lt;/code&gt; 如果调用程序在 &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;../functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; 语句中显式指定了高于2.32的版本号，则将启用auto_help。</target>
        </trans-unit>
        <trans-unit id="44063872f18d367e632a96d4c2413f4a5756f7e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;auto_version&lt;/code&gt; will be enabled if the calling program explicitly specified a version number higher than 2.32 in the &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; statement.</source>
          <target state="translated">&lt;code&gt;auto_version&lt;/code&gt; 如果调用程序在 &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;../functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; 语句中显式指定了高于2.32的版本号，则将启用auto_version。</target>
        </trans-unit>
        <trans-unit id="1347f069f43387e1b93d21850e69034397cebbe6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;autobundle&lt;/code&gt; writes a bundle file into the &lt;code&gt;$CPAN::Config-&amp;gt;{cpan_home}/Bundle&lt;/code&gt; directory. The file contains a list of all modules that are both available from CPAN and currently installed within @INC. Duplicates of each distribution are suppressed. The name of the bundle file is based on the current date and a counter, e.g.</source>
          <target state="translated">&lt;code&gt;autobundle&lt;/code&gt; 将捆绑文件写入 &lt;code&gt;$CPAN::Config-&amp;gt;{cpan_home}/Bundle&lt;/code&gt; 目录。该文件包含所有模块的列表，这些模块都可以从CPAN获得，并且当前已安装在@INC中。抑制每个分布的重复。捆绑文件的名称基于当前日期和计数器，例如</target>
        </trans-unit>
        <trans-unit id="24b650573b7b7b2cbf42f22f273aca6f48d4d98e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;autodie&lt;/code&gt; can be enabled for all of Perl's built-ins, including &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; with:</source>
          <target state="translated">&lt;code&gt;autodie&lt;/code&gt; 可以为所有Perl的内置插件，其中包括启用 &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; 有：</target>
        </trans-unit>
        <trans-unit id="92fad0431ea3a38aae4174e77bf5178a3d0e649d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;autodie&lt;/code&gt; may not work correctly if used inside a file with a name that looks like a string eval, such as</source>
          <target state="translated">&lt;code&gt;autodie&lt;/code&gt; 如果在名称类似于字符串eval的文件中使用autodie，则autodie可能无法正常工作，例如</target>
        </trans-unit>
        <trans-unit id="454c5cd48c87ed2210f01705090343cf6b8e7234" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;autodie&lt;/code&gt; performs no checking of called context to determine whether to throw an exception; the explicitness of error handling with &lt;code&gt;autodie&lt;/code&gt; is a deliberate feature.</source>
          <target state="translated">&lt;code&gt;autodie&lt;/code&gt; 不检查被调用的上下文以确定是否抛出异常；使用 &lt;code&gt;autodie&lt;/code&gt; 进行错误处理的显式性是故意的。</target>
        </trans-unit>
        <trans-unit id="c0331eb04d953ce3ea3a3439a3951a3642b45368" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;autodie&lt;/code&gt; uses the &lt;a href=&quot;http://search.cpan.org/perldoc/IPC::System::Simple&quot;&gt;IPC::System::Simple&lt;/a&gt; module to change &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt;. See its documentation for further information.</source>
          <target state="translated">&lt;code&gt;autodie&lt;/code&gt; 使用&lt;a href=&quot;http://search.cpan.org/perldoc/IPC::System::Simple&quot;&gt;IPC :: System :: Simple&lt;/a&gt;模块更改 &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; 。有关更多信息，请参见其文档。</target>
        </trans-unit>
        <trans-unit id="0e6a31e9af4af180479c7899fb188e9a03c0bf8e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;autoftp&lt;/code&gt; is a program that can retrieve, send, or list files via the FTP protocol in a non-interactive manner.</source>
          <target state="translated">&lt;code&gt;autoftp&lt;/code&gt; 是一个程序，可以以非交互方式通过FTP协议检索，发送或列出文件。</target>
        </trans-unit>
        <trans-unit id="2bc7ee78e0a3ef2c6ca2c0dc57cbee30b57d77f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;autoload&lt;/code&gt; imports the default functions automatically, but &lt;code&gt;load&lt;/code&gt; do not import any functions.</source>
          <target state="translated">&lt;code&gt;autoload&lt;/code&gt; 自动导入默认功能，但是 &lt;code&gt;load&lt;/code&gt; 不导入任何功能。</target>
        </trans-unit>
        <trans-unit id="232241e3903140051e2046c8f6440d532e004aca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;autoload&lt;/code&gt; is usable under &lt;code&gt;&lt;a href=&quot;../functions/begin&quot;&gt;BEGIN{};&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;autoload&lt;/code&gt; 可在 &lt;code&gt;&lt;a href=&quot;../functions/begin&quot;&gt;BEGIN{};&lt;/a&gt;&lt;/code&gt; 下使用；。</target>
        </trans-unit>
        <trans-unit id="3895a69d42fb934afc4c8b2a1c096fa7c3b874a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;av_fetch&lt;/code&gt; and the corresponding hash functions &lt;code&gt;hv_fetch&lt;/code&gt; and &lt;code&gt;hv_fetch_ent&lt;/code&gt; actually return an undefined mortal value whose magic has been initialized using &lt;code&gt;mg_copy&lt;/code&gt; . Note the value so returned does not need to be deallocated, as it is already mortal. [MAYCHANGE] But you will need to call &lt;code&gt;mg_get()&lt;/code&gt; on the returned value in order to actually invoke the perl level &quot;FETCH&quot; method on the underlying TIE object. Similarly, you may also call &lt;code&gt;mg_set()&lt;/code&gt; on the return value after possibly assigning a suitable value to it using &lt;code&gt;sv_setsv&lt;/code&gt; , which will invoke the &quot;STORE&quot; method on the TIE object. [/MAYCHANGE]</source>
          <target state="translated">&lt;code&gt;av_fetch&lt;/code&gt; 和相应的哈希函数 &lt;code&gt;hv_fetch&lt;/code&gt; 和 &lt;code&gt;hv_fetch_ent&lt;/code&gt; 实际上返回一个未定义的凡人值，其魔力已使用 &lt;code&gt;mg_copy&lt;/code&gt; 初始化。请注意，这样返回的值不需要重新分配，因为它已经是致命的了。 [MAYCHANGE]但是您将需要在返回值上调用 &lt;code&gt;mg_get()&lt;/code&gt; 以便在基础TIE对象上实际调用perl级别的&amp;ldquo; FETCH&amp;rdquo;方法。同样，在可能使用 &lt;code&gt;sv_setsv&lt;/code&gt; 为其分配了合适的值之后，也可以在返回值上调用 &lt;code&gt;mg_set()&lt;/code&gt; ，这将在TIE对象上调用&amp;ldquo; STORE&amp;rdquo;方法。 [/ MAYCHANGE]</target>
        </trans-unit>
        <trans-unit id="370ecf3fa40e8e270cd9e8d46abf508006b8748f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a{n,m}+&lt;/code&gt; means: match at least &lt;code&gt;n&lt;/code&gt; times, not more than &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m&lt;/a&gt;&lt;/code&gt; times, as many times as possible, and don't give anything up. &lt;code&gt;a?+&lt;/code&gt; is short for &lt;code&gt;a{0,1}+&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;a{n,m}+&lt;/code&gt; 意思是：匹配至少 &lt;code&gt;n&lt;/code&gt; 次，最多不超过 &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m&lt;/a&gt;&lt;/code&gt; 次，并且不放弃任何东西。 &lt;code&gt;a?+&lt;/code&gt; 是 &lt;code&gt;a{0,1}+&lt;/code&gt; 缩写</target>
        </trans-unit>
        <trans-unit id="85e375a004d6e03b949adf214a1f3c21deb80331" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a{n,m}&lt;/code&gt; = match at least &lt;code&gt;n&lt;/code&gt; times, but not more than &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m&lt;/a&gt;&lt;/code&gt; times.</source>
          <target state="translated">&lt;code&gt;a{n,m}&lt;/code&gt; =至少匹配 &lt;code&gt;n&lt;/code&gt; 次，但不超过 &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m&lt;/a&gt;&lt;/code&gt; 次。</target>
        </trans-unit>
        <trans-unit id="dc66155533b942e5ab8f7ec970fd9b80f6477f47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a{n,m}&lt;/code&gt; means: match at least &lt;code&gt;n&lt;/code&gt; times, but not more than &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m&lt;/a&gt;&lt;/code&gt; times.</source>
          <target state="translated">&lt;code&gt;a{n,m}&lt;/code&gt; 表示：匹配至少 &lt;code&gt;n&lt;/code&gt; 次，但不超过 &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m&lt;/a&gt;&lt;/code&gt; 次。</target>
        </trans-unit>
        <trans-unit id="2e5c7c3b0091b46feced5840b89ec76e6c84ecde" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a{n,m}?&lt;/code&gt; means: match at least &lt;code&gt;n&lt;/code&gt; times, not more than &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m&lt;/a&gt;&lt;/code&gt; times, as few times as possible</source>
          <target state="translated">&lt;code&gt;a{n,m}?&lt;/code&gt; 意思是：至少匹配 &lt;code&gt;n&lt;/code&gt; 次，不超过 &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m&lt;/a&gt;&lt;/code&gt; 次，尽可能少地匹配</target>
        </trans-unit>
        <trans-unit id="c2b5ef56170764cdecbc0d347e679c1d12841cae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a{n,}+&lt;/code&gt; means: match at least &lt;code&gt;n&lt;/code&gt; times, but as many times as possible, and don't give anything up. &lt;code&gt;a*+&lt;/code&gt; is short for &lt;code&gt;a{0,}+&lt;/code&gt; and &lt;code&gt;a++&lt;/code&gt; is short for &lt;code&gt;a{1,}+&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;a{n,}+&lt;/code&gt; 意思是：至少匹配 &lt;code&gt;n&lt;/code&gt; 次，但匹配次数尽可能多，并且不放弃任何内容。 &lt;code&gt;a*+&lt;/code&gt; 表示 &lt;code&gt;a{0,}+&lt;/code&gt; 缩写，而 &lt;code&gt;a++&lt;/code&gt; 表示 &lt;code&gt;a{1,}+&lt;/code&gt; 缩写。</target>
        </trans-unit>
        <trans-unit id="b2e64ab97f56cca83c147d8db97bd5f38b759239" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a{n,}&lt;/code&gt; = match at least &lt;code&gt;n&lt;/code&gt; or more times</source>
          <target state="translated">&lt;code&gt;a{n,}&lt;/code&gt; =至少匹配 &lt;code&gt;n&lt;/code&gt; 次或更多次</target>
        </trans-unit>
        <trans-unit id="55d47f9ce037822c6fc7d0cc1f2af2151924474e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a{n,}&lt;/code&gt; means: match at least &lt;code&gt;n&lt;/code&gt; or more times</source>
          <target state="translated">&lt;code&gt;a{n,}&lt;/code&gt; 表示：至少匹配 &lt;code&gt;n&lt;/code&gt; 次或更多次</target>
        </trans-unit>
        <trans-unit id="4796e3b46c1c24af1a67d6416b09b75dcbb56116" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a{n,}?&lt;/code&gt; means: match at least &lt;code&gt;n&lt;/code&gt; times, but as few times as possible</source>
          <target state="translated">&lt;code&gt;a{n,}?&lt;/code&gt; 表示：至少匹配 &lt;code&gt;n&lt;/code&gt; 次，但尽可能少地匹配</target>
        </trans-unit>
        <trans-unit id="e98166d002c5d2230a03efe89288ff0c20693e55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a{n}+&lt;/code&gt; means: match exactly &lt;code&gt;n&lt;/code&gt; times. It is just there for notational consistency.</source>
          <target state="translated">&lt;code&gt;a{n}+&lt;/code&gt; 表示：精确匹配 &lt;code&gt;n&lt;/code&gt; 次。只是为了保持符号一致。</target>
        </trans-unit>
        <trans-unit id="aff6bf2bdc74bd6dd9dac4febf280883951ce36b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a{n}&lt;/code&gt; = match exactly &lt;code&gt;n&lt;/code&gt; times</source>
          <target state="translated">&lt;code&gt;a{n}&lt;/code&gt; =精确匹配 &lt;code&gt;n&lt;/code&gt; 次</target>
        </trans-unit>
        <trans-unit id="488e096629b1696be9c45608edaf6f60d2af36fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a{n}&lt;/code&gt; means: match exactly &lt;code&gt;n&lt;/code&gt; times</source>
          <target state="translated">&lt;code&gt;a{n}&lt;/code&gt; 表示：精确匹配 &lt;code&gt;n&lt;/code&gt; 次</target>
        </trans-unit>
        <trans-unit id="cca987a62d500844e024a8db45998e5cb0a2b3e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a{n}?&lt;/code&gt; means: match exactly &lt;code&gt;n&lt;/code&gt; times. Because we match exactly &lt;code&gt;n&lt;/code&gt; times, &lt;code&gt;a{n}?&lt;/code&gt; is equivalent to &lt;code&gt;a{n}&lt;/code&gt; and is just there for notational consistency.</source>
          <target state="translated">&lt;code&gt;a{n}?&lt;/code&gt; 表示：完全匹配 &lt;code&gt;n&lt;/code&gt; 次。因为我们恰好匹配 &lt;code&gt;n&lt;/code&gt; 次，所以 &lt;code&gt;a{n}?&lt;/code&gt; 等价于 &lt;code&gt;a{n}&lt;/code&gt; ，只是为了保持符号一致。</target>
        </trans-unit>
        <trans-unit id="f52c5653f4696bd55e9f87cb851ed5b97df1c68e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bailout&lt;/code&gt; methods</source>
          <target state="translated">&lt;code&gt;bailout&lt;/code&gt; 方法</target>
        </trans-unit>
        <trans-unit id="85746857608dedc350be9624fa95666d17cbadec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;base&lt;/code&gt; will also initialize the fields if one of the base classes has it. Multiple inheritance of fields is &lt;b&gt;NOT&lt;/b&gt; supported, if two or more base classes each have inheritable fields the 'base' pragma will croak. See &lt;a href=&quot;fields&quot;&gt;fields&lt;/a&gt; for a description of this feature.</source>
          <target state="translated">&lt;code&gt;base&lt;/code&gt; 也将初始化场如果一个基类有它。&lt;b&gt;不&lt;/b&gt;支持字段的多重继承，如果两个或多个基类每个都有可继承的字段，则&amp;ldquo; base&amp;rdquo;杂注将崩溃。请参阅&lt;a href=&quot;fields&quot;&gt;字段&lt;/a&gt;以了解此功能。</target>
        </trans-unit>
        <trans-unit id="191bfc9558f7a150df37f22495b9090b9cec45da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;baseex&lt;/code&gt; is the error message or object. If it is a reference, it will be used as-is. Otherwise it is used as a string, and if it does not end with a newline then it will be extended with some indication of the current location in the code, as described for &lt;a href=&quot;#mess_sv&quot;&gt;mess_sv&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;baseex&lt;/code&gt; 是错误消息或对象。如果它是参考，它将按原样使用。否则，它将用作字符串，并且如果不以换行符结尾，则将使用对代码中当前位置的某种指示来对其进行扩展，如&lt;a href=&quot;#mess_sv&quot;&gt;mess_sv所述&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4b66a2dfa7d8acaa040a7d0a40556f020987bdaa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;basemsg&lt;/code&gt; is the initial message or object. If it is a reference, it will be used as-is and will be the result of this function. Otherwise it is used as a string, and if it already ends with a newline, it is taken to be complete, and the result of this function will be the same string. If the message does not end with a newline, then a segment such as &lt;code&gt;at
foo.pl line 37&lt;/code&gt; will be appended, and possibly other clauses indicating the current state of execution. The resulting message will end with a dot and a newline.</source>
          <target state="translated">&lt;code&gt;basemsg&lt;/code&gt; 是初始消息或对象。如果它是参考，它将按原样使用，并将作为此函数的结果。否则，它将用作字符串，并且如果它已经以换行符结尾，则将其视为完整字符串，并且此函数的结果将是相同的字符串。如果消息不是以换行符结尾，则将附加一段，例如 &lt;code&gt;at foo.pl line 37&lt;/code&gt; ，并且可能还有其他子句指示当前的执行状态。结果消息将以点和换行符结尾。</target>
        </trans-unit>
        <trans-unit id="1cb5487d902affd230109c249c6cfd2461d057fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;basename()&lt;/code&gt; returns the last level of a filepath even if the last level is clearly directory. In effect, it is acting like &lt;code&gt;&lt;a href=&quot;../functions/pop&quot;&gt;pop()&lt;/a&gt;&lt;/code&gt; for paths. This differs from &lt;code&gt;fileparse()&lt;/code&gt; 's behaviour.</source>
          <target state="translated">&lt;code&gt;basename()&lt;/code&gt; 即使最后一级显然是目录，basename（）也会返回文件路径的最后一级。实际上，它的作用类似于 &lt;code&gt;&lt;a href=&quot;../functions/pop&quot;&gt;pop()&lt;/a&gt;&lt;/code&gt; 的路径。这与 &lt;code&gt;fileparse()&lt;/code&gt; 的行为不同。</target>
        </trans-unit>
        <trans-unit id="c350e4c9f21cb0a1a08b12c3f3a234fd3306d7d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bigint&lt;/code&gt; is just a thin wrapper around various modules of the Math::BigInt family. Think of it as the head of the family, who runs the shop, and orders the others to do the work.</source>
          <target state="translated">&lt;code&gt;bigint&lt;/code&gt; 只是Math :: BigInt系列的各个模块的薄包装。可以将其视为一家之主，由他经营商店，并命令其他人进行这项工作。</target>
        </trans-unit>
        <trans-unit id="d9ef559a5aee4fc6060476dc9dce6429a54a1fad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bigint&lt;/code&gt; overrides these routines with versions that can also handle big integer values. Under Perl prior to version v5.9.4, however, this will not happen unless you specifically ask for it with the two import tags &quot;hex&quot; and &quot;oct&quot; - and then it will be global and cannot be disabled inside a scope with &quot;no bigint&quot;:</source>
          <target state="translated">&lt;code&gt;bigint&lt;/code&gt; 使用也可以处理大整数值的版本覆盖这些例程。但是，在v5.9.4之前的Perl版本中，除非您使用两个导入标签&amp;ldquo; hex&amp;rdquo;和&amp;ldquo; oct&amp;rdquo;明确要求，否则不会发生这种情况-然后它将是全局的，并且不能在带有&amp;ldquo; no&amp;rdquo;的作用域内禁用bigint&amp;rdquo;：</target>
        </trans-unit>
        <trans-unit id="9648bd882ff18dacc401ac93a3cbc5bdbf4c9d3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bigint&lt;/code&gt; works by overloading handling of integer and floating point literals, converting them to &lt;a href=&quot;math/bigint&quot;&gt;Math::BigInt&lt;/a&gt; objects.</source>
          <target state="translated">&lt;code&gt;bigint&lt;/code&gt; 的工作方式是重载整数和浮点文字的处理，然后将它们转换为&lt;a href=&quot;math/bigint&quot;&gt;Math :: BigInt&lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="e67fd9272e03c0fff199bea83aa5f87ef9db2f07" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bignum&lt;/code&gt; is just a thin wrapper around various modules of the Math::BigInt family. Think of it as the head of the family, who runs the shop, and orders the others to do the work.</source>
          <target state="translated">&lt;code&gt;bignum&lt;/code&gt; 只是Math :: BigInt系列的各个模块的薄包装。可以将其视为一家之主，由他经营商店，并命令其他人进行这项工作。</target>
        </trans-unit>
        <trans-unit id="4484da561486fa621b4d5b400e117645932edd50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bignum&lt;/code&gt; works by overloading handling of integer and floating point literals, converting them to &lt;a href=&quot;math/bigint&quot;&gt;Math::BigInt&lt;/a&gt; or &lt;a href=&quot;math/bigfloat&quot;&gt;Math::BigFloat&lt;/a&gt; objects.</source>
          <target state="translated">&lt;code&gt;bignum&lt;/code&gt; 的工作方式是重载整数和浮点文字的处理，然后将它们转换为&lt;a href=&quot;math/bigint&quot;&gt;Math :: BigInt&lt;/a&gt;或&lt;a href=&quot;math/bigfloat&quot;&gt;Math :: BigFloat&lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="0997be7992ad036fe88c07a1a2c5ae3b3d710948" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bigrat&lt;/code&gt; is just a thin wrapper around various modules of the Math::BigInt family. Think of it as the head of the family, who runs the shop, and orders the others to do the work.</source>
          <target state="translated">&lt;code&gt;bigrat&lt;/code&gt; 只是Math :: BigInt系列的各个模块的薄包装。可以将其视为一家之主，由他经营商店，并命令其他人进行这项工作。</target>
        </trans-unit>
        <trans-unit id="f1cc1a07b43faefb3cad91d623e619dcf6f61922" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bigrat&lt;/code&gt; works by overloading handling of integer and floating point literals, converting them to &lt;a href=&quot;math/bigint&quot;&gt;Math::BigInt&lt;/a&gt; or &lt;a href=&quot;math/bigrat&quot;&gt;Math::BigRat&lt;/a&gt; objects.</source>
          <target state="translated">&lt;code&gt;bigrat&lt;/code&gt; 的工作方式是重载整数和浮点文字的处理，然后将它们转换为&lt;a href=&quot;math/bigint&quot;&gt;Math :: BigInt&lt;/a&gt;或&lt;a href=&quot;math/bigrat&quot;&gt;Math :: BigRat&lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="10db204f6c1bcb2f5fdc7fee81a4199ba0a57f7e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;blocking&lt;/code&gt; will return the value of the previous setting, or the current setting if &lt;code&gt;BOOL&lt;/code&gt; is not given.</source>
          <target state="translated">&lt;code&gt;blocking&lt;/code&gt; 将返回先前设置的值，或者如果未给出 &lt;code&gt;BOOL&lt;/code&gt; 则返回当前设置的值。</target>
        </trans-unit>
        <trans-unit id="f9c9b344df6b3d92130baeb97d1162148eeccf12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bmodpow&lt;/code&gt; also supports negative exponents.</source>
          <target state="translated">&lt;code&gt;bmodpow&lt;/code&gt; 还支持负指数。</target>
        </trans-unit>
        <trans-unit id="cf87ddfc025679a4d593ab2adfc2fee4551858ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bnorm()&lt;/code&gt; on a BigInt object is now effectively a no-op, since the numbers are always stored in normalized form. If passed a string, creates a BigInt object from the input.</source>
          <target state="translated">&lt;code&gt;bnorm()&lt;/code&gt; 现在，BigInt对象上的bnorm（）实际上是无操作的，因为数字始终以规范化形式存储。如果传递了字符串，则从输入中创建一个BigInt对象。</target>
        </trans-unit>
        <trans-unit id="798cacd9e526afca183dccd1f959cca59d152f9d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bpow()&lt;/code&gt; (and the rounding functions) now modifies the first argument and returns it, unlike the old code which left it alone and only returned the result. This is to be consistent with &lt;code&gt;badd()&lt;/code&gt; etc. The first three will modify $x, the last one won't:</source>
          <target state="translated">&lt;code&gt;bpow()&lt;/code&gt; （和舍入函数）现在修改第一个参数并返回它，这与旧的代码不同，旧的代码将其保留为一，仅返回结果。这与 &lt;code&gt;badd()&lt;/code&gt; 等保持一致。前三个将修改$ x，后一个则不会：</target>
        </trans-unit>
        <trans-unit id="849aa8872c1c17a134807b61340d2432f9319b23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bpow()&lt;/code&gt; now modifies the first argument, unlike the old code which left it alone and only returned the result. This is to be consistent with &lt;code&gt;badd()&lt;/code&gt; etc. The first will modify $x, the second one won't:</source>
          <target state="translated">&lt;code&gt;bpow()&lt;/code&gt; 现在修改第一个参数，这与旧的代码不同，旧的代码将其保留为单独状态并仅返回结果。这与 &lt;code&gt;badd()&lt;/code&gt; 等保持一致。第一个将修改$ x，第二个将不会：</target>
        </trans-unit>
        <trans-unit id="a80a75fc2d5e34cc7d42f63e584e793a52a18a8e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;break&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/caller&quot;&gt;caller&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/continue&quot;&gt;continue&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/dump&quot;&gt;dump&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/evalbytes&quot;&gt;evalbytes&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;__FILE__&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;__LINE__&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/next&quot;&gt;next&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;__PACKAGE__&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/redo&quot;&gt;redo&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/return&quot;&gt;return&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/__sub__&quot;&gt;__SUB__&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/wantarray&quot;&gt;wantarray&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;break&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/caller&quot;&gt;caller&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/continue&quot;&gt;continue&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/dump&quot;&gt;dump&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/evalbytes&quot;&gt;evalbytes&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;__FILE__&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;__LINE__&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/next&quot;&gt;next&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;__PACKAGE__&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/redo&quot;&gt;redo&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/return&quot;&gt;return&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/__sub__&quot;&gt;__SUB__&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/wantarray&quot;&gt;wantarray&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d37b9dd4d4b04a787d223ae6bcbe782e25d34036" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;break&lt;/code&gt; is available only if you enable the experimental &lt;code&gt;&quot;switch&quot;&lt;/code&gt; feature or use the &lt;code&gt;CORE::&lt;/code&gt; prefix. The &lt;code&gt;&quot;switch&quot;&lt;/code&gt; feature also enables the &lt;code&gt;default&lt;/code&gt; , &lt;code&gt;given&lt;/code&gt; and &lt;code&gt;when&lt;/code&gt; statements, which are documented in &lt;a href=&quot;perlsyn#Switch-Statements&quot;&gt;Switch Statements in perlsyn&lt;/a&gt;. The &lt;code&gt;&quot;switch&quot;&lt;/code&gt; feature is enabled automatically with a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.10&lt;/code&gt; (or higher) declaration in the current scope. In Perl v5.14 and earlier, &lt;code&gt;&lt;a href=&quot;functions/continue&quot;&gt;continue&lt;/a&gt;&lt;/code&gt; required the &lt;code&gt;&quot;switch&quot;&lt;/code&gt; feature, like the other keywords.</source>
          <target state="translated">&lt;code&gt;break&lt;/code&gt; 仅当启用实验性 &lt;code&gt;&quot;switch&quot;&lt;/code&gt; 功能或使用 &lt;code&gt;CORE::&lt;/code&gt; 前缀时，break才可用。该 &lt;code&gt;&quot;switch&quot;&lt;/code&gt; 功能也使得 &lt;code&gt;default&lt;/code&gt; ， &lt;code&gt;given&lt;/code&gt; 和 &lt;code&gt;when&lt;/code&gt; 声明，这是在记录&lt;a href=&quot;perlsyn#Switch-Statements&quot;&gt;中perlsyn switch语句&lt;/a&gt;。的 &lt;code&gt;&quot;switch&quot;&lt;/code&gt; 的功能与自动启用 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.10&lt;/code&gt; （或更高）的声明在当前范围内。在Perl v5.14和更早版本中， &lt;code&gt;&lt;a href=&quot;functions/continue&quot;&gt;continue&lt;/a&gt;&lt;/code&gt; 需要 &lt;code&gt;&quot;switch&quot;&lt;/code&gt; 功能，就像其他关键字一样。</target>
        </trans-unit>
        <trans-unit id="3d28a27314909fae3508f8ed1164a5ec5399fbac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bsearch()&lt;/code&gt; not supplied. For doing binary search on wordlists, see &lt;a href=&quot;search/dict&quot;&gt;Search::Dict&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;bsearch()&lt;/code&gt; 未提供bsearch（）。有关对单词表进行二进制搜索的信息，请参见&lt;a href=&quot;search/dict&quot;&gt;Search :: Dict&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dc1b1c495b5749e6b5ca6c410c06a5dadd577616" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bsqrt()&lt;/code&gt; works only good if the result is a big integer, e.g. the square root of 144 is 12, but from 12 the square root is 3, regardless of rounding mode. The reason is that the result is always truncated to an integer.</source>
          <target state="translated">&lt;code&gt;bsqrt()&lt;/code&gt; 仅在结果为大整数时才有效，例如144的平方根为12，但无论舍入模式如何，从12的平方根均为3。原因是结果总是被截断为整数。</target>
        </trans-unit>
        <trans-unit id="e6f4bf676cc3a699b15481fc4a058909b15b5eda" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bunzip2&lt;/code&gt; expects at least two parameters, &lt;code&gt;$input_filename_or_reference&lt;/code&gt; and &lt;code&gt;$output_filename_or_reference&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;bunzip2&lt;/code&gt; 需要至少两个参数 &lt;code&gt;$input_filename_or_reference&lt;/code&gt; 和 &lt;code&gt;$output_filename_or_reference&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e79e566033f6f8c25d3096a1053f32dc8e50d7c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bzip2&lt;/code&gt; expects at least two parameters, &lt;code&gt;$input_filename_or_reference&lt;/code&gt; and &lt;code&gt;$output_filename_or_reference&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;bzip2&lt;/code&gt; 需要至少两个参数 &lt;code&gt;$input_filename_or_reference&lt;/code&gt; 和 &lt;code&gt;$output_filename_or_reference&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8b53f1266a06652ab4c19a127fb6358e6d1bc2de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;can&lt;/code&gt; cannot know whether an object will be able to provide a method through AUTOLOAD (unless the object's class has overridden &lt;code&gt;can&lt;/code&gt; appropriately), so a return value of</source>
          <target state="translated">&lt;code&gt;can&lt;/code&gt; 无法知道一个对象是否将能够通过AUTOLOAD是提供一种方法（除非对象的类已经重写 &lt;code&gt;can&lt;/code&gt; 适当地），所以返回值</target>
        </trans-unit>
        <trans-unit id="dfd77132ceb27f8ce6ebaf76ddb70f3498008f48" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;can&lt;/code&gt; checks if the object or class has a method called &lt;code&gt;METHOD&lt;/code&gt; . If it does, then it returns a reference to the sub. If it does not, then it returns</source>
          <target state="translated">&lt;code&gt;can&lt;/code&gt; 检查对象或类是否具有称为 &lt;code&gt;METHOD&lt;/code&gt; 的方法。如果是，则返回对子的引用。如果不是，则返回</target>
        </trans-unit>
        <trans-unit id="4425b178b213ffd266cc097cac94373284912ece" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;can_load&lt;/code&gt; keeps its results in a cache, so it will not load the same module twice, nor will it attempt to load a module that has already failed to load before. By default, &lt;code&gt;can_load&lt;/code&gt; will check its cache, but you can override that by setting &lt;code&gt;nocache&lt;/code&gt; to true.</source>
          <target state="translated">&lt;code&gt;can_load&lt;/code&gt; 将其结果保存在缓存中，因此它不会两次加载同一模块，也不会尝试加载之前已失败的模块。默认情况下， &lt;code&gt;can_load&lt;/code&gt; 将检查其缓存，但是您可以通过将 &lt;code&gt;nocache&lt;/code&gt; 设置为true 来覆盖它。</target>
        </trans-unit>
        <trans-unit id="80eef2d6b11e6af56916a4d9fed0cb49b43cc441" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;can_load&lt;/code&gt; takes the following arguments:</source>
          <target state="translated">&lt;code&gt;can_load&lt;/code&gt; 采用以下参数：</target>
        </trans-unit>
        <trans-unit id="8c301228074969b093786c28df06529f261955aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;can_load&lt;/code&gt; will take a list of modules, optionally with version numbers and determine if it is able to load them. If it can load *ALL* of them, it will. If one or more are unloadable, none will be loaded.</source>
          <target state="translated">&lt;code&gt;can_load&lt;/code&gt; 将获取模块列表，并可选地列出版本号，并确定是否能够加载它们。如果它可以全部加载*，那么它将。如果一个或多个可卸载，则不会加载任何一个。</target>
        </trans-unit>
        <trans-unit id="a478303bf076c83556297908a48dd42d425490d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;can_run&lt;/code&gt; takes only one argument: the name of a binary you wish to locate. &lt;code&gt;can_run&lt;/code&gt; works much like the unix binary &lt;code&gt;which&lt;/code&gt; or the bash command &lt;code&gt;type&lt;/code&gt; , which scans through your path, looking for the requested binary.</source>
          <target state="translated">&lt;code&gt;can_run&lt;/code&gt; 仅接受一个参数：您要查找的二进制文件的名称。 &lt;code&gt;can_run&lt;/code&gt; 很像Unix的二进制 &lt;code&gt;which&lt;/code&gt; 或bash命令 &lt;code&gt;type&lt;/code&gt; ，它通过你的路径扫描，寻找所需的二进制文件。</target>
        </trans-unit>
        <trans-unit id="ebc99e95e5b60b47d7f6807a79b190e2a3f9be43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;change()&lt;/code&gt; handles &lt;code&gt;long_contraction&lt;/code&gt; explicitly only. If &lt;code&gt;long_contraction&lt;/code&gt; is not specified in &lt;code&gt;change()&lt;/code&gt; , even though &lt;code&gt;UCA_Version&lt;/code&gt; is changed, &lt;code&gt;long_contraction&lt;/code&gt; will not be changed.</source>
          <target state="translated">&lt;code&gt;change()&lt;/code&gt; &lt;code&gt;long_contraction&lt;/code&gt; 显式处理long_contraction。如果 &lt;code&gt;long_contraction&lt;/code&gt; 在未指定 &lt;code&gt;change()&lt;/code&gt; ，即使 &lt;code&gt;UCA_Version&lt;/code&gt; 改变， &lt;code&gt;long_contraction&lt;/code&gt; 不会改变。</target>
        </trans-unit>
        <trans-unit id="f558974fb9e8f6fa2958daad656d8e76c141ee94" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;charblocks()&lt;/code&gt; returns a reference to a hash with the known block names as the keys, and the code point ranges (see &lt;a href=&quot;#charblock()&quot;&gt;charblock()&lt;/a&gt;) as the values.</source>
          <target state="translated">&lt;code&gt;charblocks()&lt;/code&gt; 返回对哈希的引用，该哈希以已知的块名称作为键，而代码点范围（请参见&lt;a href=&quot;#charblock()&quot;&gt;charblock（）&lt;/a&gt;）作为值。</target>
        </trans-unit>
        <trans-unit id="f837d8bad7cfec5d4bd3123e3e4f4763462fd63b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;charnames::string_vianame()&lt;/code&gt; was introduced in v5.14. Prior to that, &lt;code&gt;charnames::vianame()&lt;/code&gt; should work, but only if the argument is of the form &lt;code&gt;&quot;U+...&quot;&lt;/code&gt; . Your best bet there for runtime Unicode by character name is probably:</source>
          <target state="translated">&lt;code&gt;charnames::string_vianame()&lt;/code&gt; 在v5.14中引入。在此之前， &lt;code&gt;charnames::vianame()&lt;/code&gt; 应该起作用，但前提是参数的形式为 &lt;code&gt;&quot;U+...&quot;&lt;/code&gt; 。最好通过字符名称在此处运行时Unicode的最佳选择是：</target>
        </trans-unit>
        <trans-unit id="ead2be91e2308e7b32a2e10b2c8928960675c93d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;charscripts()&lt;/code&gt; returns a reference to a hash with the known script names as the keys, and the code point ranges (see &lt;a href=&quot;#charscript()&quot;&gt;charscript()&lt;/a&gt;) as the values.</source>
          <target state="translated">&lt;code&gt;charscripts()&lt;/code&gt; 返回对哈希的引用，该哈希以已知的脚本名称作为键，而代码点范围（请参见&lt;a href=&quot;#charscript()&quot;&gt;charscript（）&lt;/a&gt;）作为值。</target>
        </trans-unit>
        <trans-unit id="61c2d5d27e775d5bf2acdbed6ec527b752b22f7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;check&lt;/code&gt; takes a list of arguments, as follows:</source>
          <target state="translated">&lt;code&gt;check&lt;/code&gt; 采用参数列表，如下所示：</target>
        </trans-unit>
        <trans-unit id="61a6a6f073c5f32501789dfae5a4e3b8efb86cc3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;check&lt;/code&gt; will return when it fails, or a hashref with lowercase keys of parsed arguments when it succeeds.</source>
          <target state="translated">&lt;code&gt;check&lt;/code&gt; 将在失败时返回，或者在成功时返回带有已解析参数的小写字母的hashref。</target>
        </trans-unit>
        <trans-unit id="7bc394e8518231d46cc35fa58854fec4567f4a31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;check_install&lt;/code&gt; allows you to verify if a certain module is installed or not. You may call it with the following arguments:</source>
          <target state="translated">&lt;code&gt;check_install&lt;/code&gt; 允许您验证是否安装了某个模块。您可以使用以下参数来调用它：</target>
        </trans-unit>
        <trans-unit id="40f4747e95e85b4a1c67cb7b51c9949e228f03f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;clear&lt;/code&gt; clears the current in-memory archive. This effectively gives you a 'blank' object, ready to be filled again. Note that &lt;code&gt;clear&lt;/code&gt; only has effect on the object, not the underlying tarfile.</source>
          <target state="translated">&lt;code&gt;clear&lt;/code&gt; 清除当前的内存存档。这实际上为您提供了一个&amp;ldquo;空白&amp;rdquo;对象，准备再次填充。请注意， &lt;code&gt;clear&lt;/code&gt; 仅对对象有效，而对基础tarfile不起作用。</target>
        </trans-unit>
        <trans-unit id="8b1ff99d5c7ed83e6f2dcc9a357801da554024fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cmp&lt;/code&gt; and</source>
          <target state="translated">&lt;code&gt;cmp&lt;/code&gt; 和</target>
        </trans-unit>
        <trans-unit id="3dbfc6b5ac858f99cbcc4507d320823e6f6fa5ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cmpthese&lt;/code&gt; can also be passed the data structure that timethese() returns:</source>
          <target state="translated">&lt;code&gt;cmpthese&lt;/code&gt; 也可以传递timethese（）返回的数据结构：</target>
        </trans-unit>
        <trans-unit id="cb5332ff0a73638efd42ab63fc32fe9bd7dbabeb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;comment&lt;/code&gt; methods</source>
          <target state="translated">&lt;code&gt;comment&lt;/code&gt; 方法</target>
        </trans-unit>
        <trans-unit id="1da23c990c0b340d65a11e6c4dd9a9fbcf9e8cbb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;compexcl()&lt;/code&gt; is included for backwards compatibility, but as of Perl 5.12 and more modern Unicode versions, for most purposes it is probably more convenient to use one of the following instead:</source>
          <target state="translated">&lt;code&gt;compexcl()&lt;/code&gt; 包括compexcl（）是为了向后兼容，但是从Perl 5.12和更现代的Unicode版本开始，对于大多数目的，使用以下其中一种可能更方便：</target>
        </trans-unit>
        <trans-unit id="86a708da1901bbb301c133e94da37987c89cff89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cond_signal&lt;/code&gt; will normally generate a warning if you attempt to use it on an unlocked variable. On the rare occasions where doing this may be sensible, you can suppress the warning with:</source>
          <target state="translated">&lt;code&gt;cond_signal&lt;/code&gt; 如果您尝试在未锁定的变量上使用cond_signal，通常会生成警告。在极少数情况下，这样做可能是明智的，您可以通过以下方式禁止显示警告：</target>
        </trans-unit>
        <trans-unit id="096889c63611c83b225ce2ede691d1f2be6bc5be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cons&lt;/code&gt; - This option is ignored, since the failover mechanism will drop down to the console automatically if all other media fail.</source>
          <target state="translated">&lt;code&gt;cons&lt;/code&gt; -此选项将被忽略，因为如果所有其他媒体都发生故障，则故障转移机制将自动降至控制台。</target>
        </trans-unit>
        <trans-unit id="b45a4c8bee9a24fa02b0048a41bb38158983a350" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;croak()&lt;/code&gt; only when your module absolutely cannot figure out what to do. (&lt;code&gt;croak()&lt;/code&gt; is a better version of &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die()&lt;/a&gt;&lt;/code&gt; for use within modules, which reports its errors from the perspective of the caller. See &lt;a href=&quot;carp&quot;&gt;Carp&lt;/a&gt; for details of &lt;code&gt;croak()&lt;/code&gt; , &lt;code&gt;carp()&lt;/code&gt; and other useful routines.)</source>
          <target state="translated">&lt;code&gt;croak()&lt;/code&gt; 仅当您的模块绝对无法确定要做什么时，才选择croak（）。（ &lt;code&gt;croak()&lt;/code&gt; 是在模块内使用的 &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die()&lt;/a&gt;&lt;/code&gt; 的更好版本，它从调用者的角度报告其错误。有关 &lt;code&gt;croak()&lt;/code&gt; ， &lt;code&gt;carp()&lt;/code&gt; 和其他有用例程的详细信息，请参阅&lt;a href=&quot;carp&quot;&gt;Carp&lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="f6b8a9015ad51073a532bf2517dde18f5bf47fd8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;croak&lt;/code&gt; s on error.</source>
          <target state="translated">&lt;code&gt;croak&lt;/code&gt; S ON错误。</target>
        </trans-unit>
        <trans-unit id="d0dde23af6c8093917aed5e9b5c89f44d6c944ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dMY_CXT&lt;/code&gt; may be quite expensive to calculate, and to avoid the overhead of invoking it in each function it is possible to pass the declaration onto other functions using the &lt;code&gt;aMY_CXT&lt;/code&gt; /&lt;code&gt;pMY_CXT&lt;/code&gt; macros, eg</source>
          <target state="translated">&lt;code&gt;dMY_CXT&lt;/code&gt; 的计算可能非常昂贵，并且为避免在每个函数中调用它的开销，可以使用 &lt;code&gt;aMY_CXT&lt;/code&gt; / &lt;code&gt;pMY_CXT&lt;/code&gt; 宏将声明传递给其他函数，例如</target>
        </trans-unit>
        <trans-unit id="4109496804f1ccff0cccb7a3ca87fce4ed59e63f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dTHR&lt;/code&gt; was introduced in perl 5.005 to support the older thread model. The older thread model now uses the &lt;code&gt;THX&lt;/code&gt; mechanism to pass context pointers around, so &lt;code&gt;dTHR&lt;/code&gt; is not useful any more. Perl 5.6.0 and later still have it for backward source compatibility, but it is defined to be a no-op.</source>
          <target state="translated">&lt;code&gt;dTHR&lt;/code&gt; 在perl 5.005中引入了dTHR，以支持较早的线程模型。现在，较旧的线程模型使用 &lt;code&gt;THX&lt;/code&gt; 机制来传递上下文指针，因此 &lt;code&gt;dTHR&lt;/code&gt; 不再有用。Perl 5.6.0及更高版本仍然具有向后兼容源的功能，但将其定义为&amp;ldquo;无操作&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="ead45fe5123d73507a0666226aa4b62056b56233" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;default&lt;/code&gt; behaves exactly like &lt;code&gt;when(1 == 1)&lt;/code&gt; , which is to say that it always matches.</source>
          <target state="translated">&lt;code&gt;default&lt;/code&gt; 的行为与 &lt;code&gt;when(1 == 1)&lt;/code&gt; 完全一样，也就是说，它总是匹配的。</target>
        </trans-unit>
        <trans-unit id="4e4008378ece0030f25890322578641b9c803138" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;defer&lt;/code&gt; , &lt;code&gt;flush&lt;/code&gt; , &lt;code&gt;discard&lt;/code&gt; , and &lt;code&gt;autodefer&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;defer&lt;/code&gt; ， &lt;code&gt;flush&lt;/code&gt; ， &lt;code&gt;discard&lt;/code&gt; 和 &lt;code&gt;autodefer&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="84b466c384022ad6a6c0ee4613433ddf76214dd5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;deflate&lt;/code&gt; expects at least two parameters, &lt;code&gt;$input_filename_or_reference&lt;/code&gt; and &lt;code&gt;$output_filename_or_reference&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;deflate&lt;/code&gt; 至少需要两个参数 &lt;code&gt;$input_filename_or_reference&lt;/code&gt; 和 &lt;code&gt;$output_filename_or_reference&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="557a8972e18c8311f342ad928d9daccc79114ada" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;detach()&lt;/code&gt; can also be called as a class method to allow a thread to detach itself:</source>
          <target state="translated">&lt;code&gt;detach()&lt;/code&gt; 也可以作为类方法来调用，以允许线程自行分离：</target>
        </trans-unit>
        <trans-unit id="666fcacf663b1020377f259716313e99a0eb4f48" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;detach&lt;/code&gt; tells a thread that it is never going to be joined i.e. that all traces of its existence can be removed once it stops running. Errors in detached threads will not be visible anywhere - if you want to catch them, you should use $SIG{__DIE__} or something like that.</source>
          <target state="translated">&lt;code&gt;detach&lt;/code&gt; 告诉线程它永远不会被连接，即一旦它停止运行就可以删除存在的所有痕迹。分离线程中的错误在任何地方都不可见-如果要捕获它们，则应使用$ SIG {__ DIE__}或类似的东西。</target>
        </trans-unit>
        <trans-unit id="d15b8c42099321a9dbc082b929829cf8884cb2c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;done_testing()&lt;/code&gt; is, in effect, used when you'd want to use &lt;code&gt;no_plan&lt;/code&gt; , but safer. You'd use it like so:</source>
          <target state="translated">&lt;code&gt;done_testing()&lt;/code&gt; 实际上，done_testing（）是在您希望使用 &lt;code&gt;no_plan&lt;/code&gt; 时使用的，但更安全。您将像这样使用它：</target>
        </trans-unit>
        <trans-unit id="96ac2e7a1323e3e95635e4b26ab827cf6f59afef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dprofpp&lt;/code&gt; will produce some quite detailed reporting on the activity of the &lt;code&gt;wordmatch&lt;/code&gt; program. The wallclock, user and system, times are at the top of the analysis, and after this are the main columns defining which define the report. Check the &lt;code&gt;dprofpp&lt;/code&gt; docs for details of the many options it supports.</source>
          <target state="translated">&lt;code&gt;dprofpp&lt;/code&gt; 将针对 &lt;code&gt;wordmatch&lt;/code&gt; 程序的活动生成一些非常详细的报告。挂钟，用户和系统时间在分析的顶部，之后是定义报告的主要列。检查 &lt;code&gt;dprofpp&lt;/code&gt; 文档，以了解其支持的许多选项的详细信息。</target>
        </trans-unit>
        <trans-unit id="698546fdd428508dc98fcd9f8400a97d365533e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;encode_language_tag&lt;/code&gt; returns undef if given anything other than a formally valid language tag.</source>
          <target state="translated">&lt;code&gt;encode_language_tag&lt;/code&gt; 如果给定了除形式上有效的语言标记之外的任何内容，encode_language_tag将返回undef。</target>
        </trans-unit>
        <trans-unit id="51fbe3f0825cfe73fe04528e4db975b00a52f6e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enter&lt;/code&gt; and &lt;code&gt;leave&lt;/code&gt; are scoping ops, and their job is to perform any housekeeping every time you enter and leave a block: lexical variables are tidied up, unreferenced variables are destroyed, and so on. Every program will have those first three lines: &lt;code&gt;leave&lt;/code&gt; is a list, and its children are all the statements in the block. Statements are delimited by &lt;code&gt;nextstate&lt;/code&gt; , so a block is a collection of &lt;code&gt;nextstate&lt;/code&gt; ops, with the ops to be performed for each statement being the children of &lt;code&gt;nextstate&lt;/code&gt; . &lt;code&gt;enter&lt;/code&gt; is a single op which functions as a marker.</source>
          <target state="translated">&lt;code&gt;enter&lt;/code&gt; 和 &lt;code&gt;leave&lt;/code&gt; 是作用域操作，每次进入和离开一个块时，它们的工作就是执行任何内部管理：整理词法变量，销毁未引用的变量，依此类推。每个程序都将具有前三行： &lt;code&gt;leave&lt;/code&gt; 是一个列表，其子代是该块中的所有语句。语句由 &lt;code&gt;nextstate&lt;/code&gt; 分隔，因此块是 &lt;code&gt;nextstate&lt;/code&gt; 操作的集合，每个语句要执行的操作是 &lt;code&gt;nextstate&lt;/code&gt; 的子代。 &lt;code&gt;enter&lt;/code&gt; 是充当标记的单个操作。</target>
        </trans-unit>
        <trans-unit id="66996551ac21df55b2bc452ee7dc1f32731364d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;equal&lt;/code&gt; tests whether two thread objects represent the same thread and returns true if they do.</source>
          <target state="translated">&lt;code&gt;equal&lt;/code&gt; 测试两个线程对象是否表示同一线程，如果相等则返回true。</target>
        </trans-unit>
        <trans-unit id="dce2d19eb1b9a11a41c8b0d6eda83832900f64ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eval_pv&lt;/code&gt; is used to compile the anonymous subroutine, which will be the return value as well (read more about &lt;code&gt;eval_pv&lt;/code&gt; in &lt;a href=&quot;perlapi#eval_pv&quot;&gt;eval_pv in perlapi&lt;/a&gt;). Once this code reference is in hand, it can be mixed in with all the previous examples we've shown.</source>
          <target state="translated">&lt;code&gt;eval_pv&lt;/code&gt; 用于编译匿名子例程，该例程也是返回值（有关更多信息，请 &lt;code&gt;eval_pv&lt;/code&gt; 中&lt;a href=&quot;perlapi#eval_pv&quot;&gt;eval_pv中的eval_pv&lt;/a&gt;）。掌握了此代码参考之后，就可以将其与我们前面显示的所有示例混合使用。</target>
        </trans-unit>
        <trans-unit id="179018de7994d8b6f7b55507310a9615bad0e417" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;expect: &amp;lt;array&amp;gt;&lt;/code&gt; is a short notation for this &lt;code&gt;eexpect&lt;/code&gt; :</source>
          <target state="translated">&lt;code&gt;expect: &amp;lt;array&amp;gt;&lt;/code&gt; 是此 &lt;code&gt;eexpect&lt;/code&gt; 的简写：</target>
        </trans-unit>
        <trans-unit id="deecc348c11dde7ab1e03c51382e2279d9a03d0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extproc&lt;/code&gt; on the first line</source>
          <target state="translated">&lt;code&gt;extproc&lt;/code&gt; 第一行上的extproc</target>
        </trans-unit>
        <trans-unit id="19dbee10355caceed0f77948f5b13c6093e8c93f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extract_archive&lt;/code&gt; will return a list of files it extracted. If the archive extraction fails for any reason, &lt;code&gt;extract_archive&lt;/code&gt; will return false. Please use the &lt;code&gt;error&lt;/code&gt; method to find the cause of the failure.</source>
          <target state="translated">&lt;code&gt;extract_archive&lt;/code&gt; 将返回它提取的文件列表。如果档案提取由于任何原因失败，则 &lt;code&gt;extract_archive&lt;/code&gt; 将返回false。请使用 &lt;code&gt;error&lt;/code&gt; 方法查找失败原因。</target>
        </trans-unit>
        <trans-unit id="ca87326018240d68425ad1527419ad3fb2334b21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extract_bracketed&lt;/code&gt; , &lt;code&gt;extract_quotelike&lt;/code&gt; or &lt;code&gt;extract_codeblock&lt;/code&gt; encountered a closing bracket where none was expected.</source>
          <target state="translated">&lt;code&gt;extract_bracketed&lt;/code&gt; ， &lt;code&gt;extract_quotelike&lt;/code&gt; 或 &lt;code&gt;extract_codeblock&lt;/code&gt; 遇到了一个不希望出现的右括号。</target>
        </trans-unit>
        <trans-unit id="72a77e28ef0d2e144274c8fbd24790f3d60b8b70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extract_bracketed&lt;/code&gt; , &lt;code&gt;extract_quotelike&lt;/code&gt; or &lt;code&gt;extract_codeblock&lt;/code&gt; found a valid bracket delimiter, but it was the wrong species. This usually indicates a nesting error, but may indicate incorrect quoting or escaping.</source>
          <target state="translated">&lt;code&gt;extract_bracketed&lt;/code&gt; ， &lt;code&gt;extract_quotelike&lt;/code&gt; 或 &lt;code&gt;extract_codeblock&lt;/code&gt; 找到有效的括号定界符，但这是错误的种类。这通常表示嵌套错误，但可能表示引用或转义不正确。</target>
        </trans-unit>
        <trans-unit id="f1c61a56ae758be3198ca7d3e691e7f13c95604c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extract_bracketed&lt;/code&gt; , &lt;code&gt;extract_quotelike&lt;/code&gt; or &lt;code&gt;extract_codeblock&lt;/code&gt; ran out of characters in the text before closing one or more levels of nested brackets.</source>
          <target state="translated">&lt;code&gt;extract_bracketed&lt;/code&gt; 在关闭一层或多层嵌套括号之前，extract_bracketed， &lt;code&gt;extract_quotelike&lt;/code&gt; 或 &lt;code&gt;extract_codeblock&lt;/code&gt; 用尽了文本中的字符。</target>
        </trans-unit>
        <trans-unit id="bfcf9f5f74cb5d8d60170baf76820bbca368d16b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extract_bracketed&lt;/code&gt; attempted to match an embedded quoted substring, but failed to find a closing quote to match it.</source>
          <target state="translated">&lt;code&gt;extract_bracketed&lt;/code&gt; 尝试匹配嵌入的带引号的子字符串，但找不到匹配的结束引号。</target>
        </trans-unit>
        <trans-unit id="bfae41ac82a57d25a5fa6795b1393b8584c13411" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extract_bracketed&lt;/code&gt; extracts a balanced-bracket-delimited substring (using any one (or more) of the user-specified delimiter brackets: '(..)', '{..}', '[..]', or '&amp;lt;..&amp;gt;'). Optionally it will also respect quoted unbalanced brackets (see below).</source>
          <target state="translated">&lt;code&gt;extract_bracketed&lt;/code&gt; 提取由括号分隔的，由用户指定的定界括号中的任意一个（或多个）的子字符串：&amp;ldquo;（..）&amp;rdquo;，&amp;ldquo; {..}&amp;rdquo;，&amp;ldquo; [..]&amp;rdquo;或&amp;ldquo; &amp;lt;&amp;rdquo;。 。&amp;gt;'）。也可以选择引用不平衡括号（请参阅下文）。</target>
        </trans-unit>
        <trans-unit id="833ede635970a6e5a4797a94bd40b236c96804f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extract_bracketed&lt;/code&gt; or &lt;code&gt;extract_codeblock&lt;/code&gt; was expecting a particular kind of bracket at the start of the text, and didn't find it.</source>
          <target state="translated">&lt;code&gt;extract_bracketed&lt;/code&gt; 或 &lt;code&gt;extract_codeblock&lt;/code&gt; 在文本开始处期望使用一种特定的括号，但未找到。</target>
        </trans-unit>
        <trans-unit id="36f0769606e5c4df36d78fd7ab228e7c6b52a6d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extract_codeblock&lt;/code&gt; attempts to recognize and extract a balanced bracket delimited substring that may contain unbalanced brackets inside Perl quotes or quotelike operations. That is, &lt;code&gt;extract_codeblock&lt;/code&gt; is like a combination of &lt;code&gt;&quot;extract_bracketed&quot;&lt;/code&gt; and &lt;code&gt;&quot;extract_quotelike&quot;&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;extract_codeblock&lt;/code&gt; 尝试识别并提取平衡括号定界的子字符串，该子字符串可能在Perl引号或类似quotes的操作中包含不平衡的括号。也就是说， &lt;code&gt;extract_codeblock&lt;/code&gt; 类似于 &lt;code&gt;&quot;extract_bracketed&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;extract_quotelike&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="694f659fbf30e806d0fa08eafebb27223e5e1129" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extract_codeblock&lt;/code&gt; failed to find a closing bracket to match the outermost opening bracket.</source>
          <target state="translated">&lt;code&gt;extract_codeblock&lt;/code&gt; 无法找到与最外面的开括号匹配的右括号。</target>
        </trans-unit>
        <trans-unit id="2f9d1a3929e3f32a4e394299c676fec1e2f105c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extract_codeblock&lt;/code&gt; failed to find any of the outermost opening brackets that were specified.</source>
          <target state="translated">&lt;code&gt;extract_codeblock&lt;/code&gt; 无法找到指定的任何最外面的左括号。</target>
        </trans-unit>
        <trans-unit id="8bdacc14c0fedd54fcae38c1a59283dd12b5836e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extract_codeblock&lt;/code&gt; or &lt;code&gt;extract_quotelike&lt;/code&gt; found one of the quotelike operators &lt;code&gt;&lt;a href=&quot;../functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../functions/tr&quot;&gt;tr&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../functions/y&quot;&gt;y&lt;/a&gt;&lt;/code&gt; followed by only one block.</source>
          <target state="translated">&lt;code&gt;extract_codeblock&lt;/code&gt; 或 &lt;code&gt;extract_quotelike&lt;/code&gt; 找到了单引号运算符 &lt;code&gt;&lt;a href=&quot;../functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../functions/tr&quot;&gt;tr&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;../functions/y&quot;&gt;y&lt;/a&gt;&lt;/code&gt; 之一,后面仅是一个块。</target>
        </trans-unit>
        <trans-unit id="2826adf3635e5637db1b98091d6fce40bd4513f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extract_codeblock&lt;/code&gt; takes the same initial three parameters as &lt;code&gt;extract_bracketed&lt;/code&gt; : a text to process, a set of delimiter brackets to look for, and a prefix to match first. It also takes an optional fourth parameter, which allows the outermost delimiter brackets to be specified separately (see below).</source>
          <target state="translated">&lt;code&gt;extract_codeblock&lt;/code&gt; 的初始三个参数与 &lt;code&gt;extract_bracketed&lt;/code&gt; 相同：要处理的文本，要查找的一组定括号，以及首先匹配的前缀。它还带有一个可选的第四个参数，该参数允许单独指定最外面的定界符括号（请参见下文）。</target>
        </trans-unit>
        <trans-unit id="da20ba6f0882f09698a1ff177d4124f0036f0383" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extract_delimited&lt;/code&gt; takes up to four scalars (the input text, the delimiters, a prefix pattern to be skipped, and any escape characters) and extracts the initial substring of the text that is appropriately delimited. If the delimiter string has multiple characters, the first one encountered in the text is taken to delimit the substring. The third argument specifies a prefix pattern that is to be skipped (but must be present!) before the substring is extracted. The final argument specifies the escape character to be used for each delimiter.</source>
          <target state="translated">&lt;code&gt;extract_delimited&lt;/code&gt; 最多使用四个标量（输入文本，定界符，要跳过的前缀模式以及任何转义字符），并提取适当定界的文本的初始子字符串。如果定界符字符串包含多个字符，则将文本中遇到的第一个字符定界为子字符串。第三个参数指定在提取子字符串之前将被跳过（但必须存在！）的前缀模式。最后一个参数指定每个分隔符使用的转义字符。</target>
        </trans-unit>
        <trans-unit id="9a4b075e70a63982d5b04d16716a200671436a06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extract_quotelike&lt;/code&gt; and &quot;here documents&quot;</source>
          <target state="translated">&lt;code&gt;extract_quotelike&lt;/code&gt; 和&amp;ldquo;这里文档&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="5c7ff486ca0937ffab3f029877d80d0f77ca3ff8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extract_quotelike&lt;/code&gt; attempts to recognize, extract, and segment any one of the various Perl quotes and quotelike operators (see</source>
          <target state="translated">&lt;code&gt;extract_quotelike&lt;/code&gt; 尝试识别，提取和分段各种Perl引号和quotelike运算符中的任何一个（请参见</target>
        </trans-unit>
        <trans-unit id="c59ff49a4b5f6ba09b71fdea263cb8784806bf34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extract_quotelike&lt;/code&gt; can successfully extract &quot;here documents&quot; from an input string, but with an important caveat in list contexts.</source>
          <target state="translated">&lt;code&gt;extract_quotelike&lt;/code&gt; 可以从输入字符串中成功提取&amp;ldquo;此处文档&amp;rdquo;，但在列表上下文中有一个重要警告。</target>
        </trans-unit>
        <trans-unit id="eb113a6f5a0b8ca2853b562185e3dd6bf68a942d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extract_quotelike&lt;/code&gt; didn't find one of the quotelike operators &lt;code&gt;&lt;a href=&quot;../functions/q&quot;&gt;q&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../functions/qq&quot;&gt;qq&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../functions/qw&quot;&gt;qw&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../functions/qx&quot;&gt;qx&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../functions/tr&quot;&gt;tr&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../functions/y&quot;&gt;y&lt;/a&gt;&lt;/code&gt; at the start of the substring it was extracting.</source>
          <target state="translated">&lt;code&gt;extract_quotelike&lt;/code&gt; 在要提取的子字符串的开头未找到quotelike运算符 &lt;code&gt;&lt;a href=&quot;../functions/q&quot;&gt;q&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../functions/qq&quot;&gt;qq&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../functions/qw&quot;&gt;qw&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../functions/qx&quot;&gt;qx&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../functions/tr&quot;&gt;tr&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;../functions/y&quot;&gt;y&lt;/a&gt;&lt;/code&gt; 之一。</target>
        </trans-unit>
        <trans-unit id="639f29c8f92e2cdfb541e8edc25037e7eac4fd9f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extract_quotelike&lt;/code&gt; or &lt;code&gt;extract_codeblock&lt;/code&gt; found one of the quotelike operators &lt;code&gt;&lt;a href=&quot;../functions/q&quot;&gt;q&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../functions/qq&quot;&gt;qq&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../functions/qw&quot;&gt;qw&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../functions/qx&quot;&gt;qx&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../functions/tr&quot;&gt;tr&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../functions/y&quot;&gt;y&lt;/a&gt;&lt;/code&gt; without a suitable block after it.</source>
          <target state="translated">&lt;code&gt;extract_quotelike&lt;/code&gt; 或 &lt;code&gt;extract_codeblock&lt;/code&gt; 找到了quotelike运算符 &lt;code&gt;&lt;a href=&quot;../functions/q&quot;&gt;q&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../functions/qq&quot;&gt;qq&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../functions/qw&quot;&gt;qw&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../functions/qx&quot;&gt;qx&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../functions/tr&quot;&gt;tr&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;../functions/y&quot;&gt;y&lt;/a&gt;&lt;/code&gt; 之一,之后没有合适的块。</target>
        </trans-unit>
        <trans-unit id="39ce38c6b480941e81870d18e2d86b4e985230f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extract_quotelike&lt;/code&gt; takes two arguments: the text to be processed and a prefix to be matched at the very beginning of the text. If no prefix is specified, optional whitespace is the default. If no text is given, &lt;code&gt;$_&lt;/code&gt; is used.</source>
          <target state="translated">&lt;code&gt;extract_quotelike&lt;/code&gt; 具有两个参数：要处理的文本和在文本开头要匹配的前缀。如果未指定前缀，则默认为可选空格。如果未给出任何文本，则使用 &lt;code&gt;$_&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5cd291985f40d2410dcdccea5aef6741ed9a4c95" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extract_quotelike&lt;/code&gt; was unable to find a closing delimiter to match the one that opened the quote-like operation.</source>
          <target state="translated">&lt;code&gt;extract_quotelike&lt;/code&gt; 无法找到结束定界符来匹配打开了类似报价操作的定界符。</target>
        </trans-unit>
        <trans-unit id="ab932311516affb26a779abd90bbf158ec7ed4da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extract_tagged&lt;/code&gt; did not find a suitable opening tag (after any specified prefix was removed).</source>
          <target state="translated">&lt;code&gt;extract_tagged&lt;/code&gt; 找不到合适的开始标记（在删除任何指定的前缀之后）。</target>
        </trans-unit>
        <trans-unit id="d49b4a8e3f85ed5cd73910afb7ee2c747a5c1b85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extract_tagged&lt;/code&gt; extracts and segments text between (balanced) specified tags.</source>
          <target state="translated">&lt;code&gt;extract_tagged&lt;/code&gt; 提取并分割（平衡的）指定标签之间的文本。</target>
        </trans-unit>
        <trans-unit id="637bdb2768eba3ece0f28cf5c91285d816ae9df3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extract_tagged&lt;/code&gt; found a nested opening tag that was not matched by a corresponding nested closing tag (and the failure mode was not &quot;MAX&quot; or &quot;PARA&quot;).</source>
          <target state="translated">&lt;code&gt;extract_tagged&lt;/code&gt; 找到了与相应的嵌套结束标签不匹配的嵌套开始标签（并且失败模式不是&amp;ldquo; MAX&amp;rdquo;或&amp;ldquo; PARA&amp;rdquo;）。</target>
        </trans-unit>
        <trans-unit id="907d9c187b04ce8805d54962d6f295d6dafa82c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extract_tagged&lt;/code&gt; found a nested tag that appeared in the &quot;reject&quot; list (and the failure mode was not &quot;MAX&quot; or &quot;PARA&quot;).</source>
          <target state="translated">&lt;code&gt;extract_tagged&lt;/code&gt; 找到了一个嵌套标签，该标签出现在&amp;ldquo;拒绝&amp;rdquo;列表中（并且失败模式不是&amp;ldquo; MAX&amp;rdquo;或&amp;ldquo; PARA&amp;rdquo;）。</target>
        </trans-unit>
        <trans-unit id="2c6e6b22bc490e070f19db3dd2c598898377ca76" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extract_tagged&lt;/code&gt; matched the specified opening tag and tried to modify the matched text to produce a matching closing tag (because none was specified). It failed to generate the closing tag, almost certainly because the opening tag did not start with a bracket of some kind.</source>
          <target state="translated">&lt;code&gt;extract_tagged&lt;/code&gt; 匹配指定的开始标记，并尝试修改匹配的文本以产生匹配的结束标记（因为未指定任何结束标记）。它未能生成结束标记，几乎可以肯定是因为开始标记不是以某种括号开头。</target>
        </trans-unit>
        <trans-unit id="618b7e2d79570afb079bf76fc8475883cfbcb511" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extract_tagged&lt;/code&gt; reached the end of the text without finding a closing tag to match the original opening tag (and the failure mode was not &quot;MAX&quot; or &quot;PARA&quot;).</source>
          <target state="translated">&lt;code&gt;extract_tagged&lt;/code&gt; 到达了文本的结尾，而没有找到与原始的开始标记匹配的结束标记（并且失败模式不是&amp;ldquo; MAX&amp;rdquo;或&amp;ldquo; PARA&amp;rdquo;）。</target>
        </trans-unit>
        <trans-unit id="dc8016033fd7e7766b06e4030e83ba977c1f1697" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extract_variable&lt;/code&gt; extracts any valid Perl variable or variable-involved expression, including scalars, arrays, hashes, array accesses, hash look-ups, method calls through objects, subroutine calls through subroutine references, etc.</source>
          <target state="translated">&lt;code&gt;extract_variable&lt;/code&gt; 提取任何有效的Perl变量或涉及变量的表达式，包括标量，数组，哈希，数组访问，哈希查找，通过对象的方法调用，通过子例程引用的子例程调用等。</target>
        </trans-unit>
        <trans-unit id="9b44e96da00224d0d2ec78bc381db1051d7b97be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extract_variable&lt;/code&gt; found a '$', '@', or '%' indicating a variable, but that character was not followed by a legal Perl identifier.</source>
          <target state="translated">&lt;code&gt;extract_variable&lt;/code&gt; 找到了表示变量的'$'，'@'或'％'，但是该字符后没有合法的Perl标识符。</target>
        </trans-unit>
        <trans-unit id="73dce7208a693c0dcdcc44097a9a03bc9f5f50c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extract_variable&lt;/code&gt; was expecting one of '$', '@', or '%' at the start of a variable, but didn't find any of them.</source>
          <target state="translated">&lt;code&gt;extract_variable&lt;/code&gt; 期望变量开头为&amp;ldquo; $&amp;rdquo;，&amp;ldquo; @&amp;rdquo;或&amp;ldquo;％&amp;rdquo;之一，但未找到任何一个。</target>
        </trans-unit>
        <trans-unit id="f7183702bf36011a80e32e87169e8ae3121aaff7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fdopen&lt;/code&gt; is like an ordinary &lt;code&gt;&lt;a href=&quot;../functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; except that its first parameter is not a filename but rather a file handle name, an IO::Handle object, or a file descriptor number. (For the documentation of the &lt;code&gt;&lt;a href=&quot;../functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; method, see &lt;a href=&quot;file&quot;&gt;IO::File&lt;/a&gt;.)</source>
          <target state="translated">&lt;code&gt;fdopen&lt;/code&gt; 类似于普通的 &lt;code&gt;&lt;a href=&quot;../functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; 不同之处在于它的第一个参数不是文件名而是文件句柄名称，IO :: Handle对象或文件描述符号。（有关 &lt;code&gt;&lt;a href=&quot;../functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; 方法的文档，请参见&lt;a href=&quot;file&quot;&gt;IO :: File&lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="d03fc961bee53ba972305eb9fb700a55c4e14e62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fill_mstats($buf)&lt;/code&gt; is a much cheaper call (both speedwise and memory-wise) which collects the statistic into $buf in machine-readable form. At a later moment you may need to call &lt;code&gt;mstats2hash($buf, %hash)&lt;/code&gt; to use this information to fill %hash.</source>
          <target state="translated">&lt;code&gt;fill_mstats($buf)&lt;/code&gt; 是一个便宜得多的调用（包括速度和内存），它以机器可读的形式将统计信息收集到$ buf中。稍后，您可能需要调用 &lt;code&gt;mstats2hash($buf, %hash)&lt;/code&gt; 来使用此信息填充％hash。</target>
        </trans-unit>
        <trans-unit id="a7e5d4f5538cc74799b8419786d322d044582dea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;find()&lt;/code&gt; does a depth-first search over the given &lt;code&gt;@directories&lt;/code&gt; in the order they are given. For each file or directory found, it calls the &lt;code&gt;&amp;amp;wanted&lt;/code&gt; subroutine. (See below for details on how to use the &lt;code&gt;&amp;amp;wanted&lt;/code&gt; function). Additionally, for each directory found, it will &lt;code&gt;&lt;a href=&quot;../functions/chdir&quot;&gt;chdir()&lt;/a&gt;&lt;/code&gt; into that directory and continue the search, invoking the &lt;code&gt;&amp;amp;wanted&lt;/code&gt; function on each file or subdirectory in the directory.</source>
          <target state="translated">&lt;code&gt;find()&lt;/code&gt; 按照给定的 &lt;code&gt;@directories&lt;/code&gt; 顺序进行深度优先搜索。对于找到的每个文件或目录，它都调用 &lt;code&gt;&amp;amp;wanted&lt;/code&gt; 子例程。（有关如何使用 &lt;code&gt;&amp;amp;wanted&lt;/code&gt; 功能的详细信息，请参见下文）。此外，对于找到的每个目录，它将 &lt;code&gt;&lt;a href=&quot;../functions/chdir&quot;&gt;chdir()&lt;/a&gt;&lt;/code&gt; 进入该目录并继续搜索，并在目录中的每个文件或子目录上调用 &lt;code&gt;&amp;amp;wanted&lt;/code&gt; 函数。</target>
        </trans-unit>
        <trans-unit id="e26ed17cfa2816485cbc28d5fbb0568e82932f2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;finddepth()&lt;/code&gt; works just like &lt;code&gt;find()&lt;/code&gt; except that it invokes the &lt;code&gt;&amp;amp;wanted&lt;/code&gt; function for a directory</source>
          <target state="translated">&lt;code&gt;finddepth()&lt;/code&gt; 的作用与 &lt;code&gt;find()&lt;/code&gt; 相同，只是它为目录调用 &lt;code&gt;&amp;amp;wanted&lt;/code&gt; 函数。</target>
        </trans-unit>
        <trans-unit id="29620a24a0df648a414eb9cf851d4bf4806d6e4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;flags&lt;/code&gt; allows only &lt;code&gt;PERL_SCAN_TRAILING&lt;/code&gt; , which allows for trailing non-numeric text on an otherwise successful</source>
          <target state="translated">&lt;code&gt;flags&lt;/code&gt; 仅允许 &lt;code&gt;PERL_SCAN_TRAILING&lt;/code&gt; ，这允许在非成功文本上尾随非数字文本</target>
        </trans-unit>
        <trans-unit id="aaeb70073109db72816d4b058f24b70066251071" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;flags&lt;/code&gt; can be set to SVf_UTF8 if &lt;code&gt;name&lt;/code&gt; is a UTF8 string, or the return value of SvUTF8(sv). It can also take the GV_ADDMULTI flag, which means to pretend that the GV has been seen before (i.e., suppress &quot;Used once&quot; warnings).</source>
          <target state="translated">&lt;code&gt;flags&lt;/code&gt; 如果 &lt;code&gt;name&lt;/code&gt; 是UTF8字符串或SvUTF8（sv）的返回值，则可以将标志设置为SVf_UTF8 。它还可以采用GV_ADDMULTI标志，这意味着要假装以前已经看到过GV（即，禁止显示&amp;ldquo; Used一次&amp;rdquo;警告）。</target>
        </trans-unit>
        <trans-unit id="65e3f0cb7744b6ea7a16d5b8162ae81c50f936d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;flush&lt;/code&gt; causes perl to flush any buffered data at the perlio api level. Any unread data in the buffer will be discarded, and any unwritten data will be written to the underlying file descriptor. Returns &quot;0 but true&quot; on success, &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; on error.</source>
          <target state="translated">&lt;code&gt;flush&lt;/code&gt; 使perl在perlio api级别刷新所有缓冲的数据。缓冲区中所有未读取的数据都将被丢弃，所有未写入的数据将被写入基础文件描述符。成功返回&amp;ldquo; 0但为真&amp;rdquo;，错误返回 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8e9905682a79a998de7ff1e83caeeafa645f241b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;flush_cache(function)&lt;/code&gt; will flush out the caches, discarding</source>
          <target state="translated">&lt;code&gt;flush_cache(function)&lt;/code&gt; 将刷新缓存，丢弃</target>
        </trans-unit>
        <trans-unit id="3b5d6c6cb2f1fedfbb1c398cf830e60872b2d25d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;follow_skip==0&lt;/code&gt; causes File::Find to die if any file is about to be processed a second time.</source>
          <target state="translated">&lt;code&gt;follow_skip==0&lt;/code&gt; 导致File :: Find死亡，如果有任何文件将要第二次处理。</target>
        </trans-unit>
        <trans-unit id="245a14cc849e45d0f21aa3c6a45e6687f9b1b64a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;follow_skip==1&lt;/code&gt; , which is the default, causes all files which are neither directories nor symbolic links to be ignored if they are about to be processed a second time. If a directory or a symbolic link are about to be processed a second time, File::Find dies.</source>
          <target state="translated">&lt;code&gt;follow_skip==1&lt;/code&gt; ，这是默认设置，如果要第二次处理的文件既不是目录也不是符号链接，则这些文件将被忽略。如果将要再次处理目录或符号链接，则File :: Find将消失。</target>
        </trans-unit>
        <trans-unit id="08a84133d805b081624353f19b1e15e4f4f2316a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;follow_skip==2&lt;/code&gt; causes File::Find to ignore any duplicate files and directories but to proceed normally otherwise.</source>
          <target state="translated">&lt;code&gt;follow_skip==2&lt;/code&gt; 导致File :: Find忽略任何重复的文件和目录，但否则继续正常进行。</target>
        </trans-unit>
        <trans-unit id="b488c92ca6be1e23d4299b935b09ca768ca7bd88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;foo&lt;/code&gt; ).</source>
          <target state="translated">&lt;code&gt;foo&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="af037f92dbe22f9677ccba3af252180c69239c0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;foreach&lt;/code&gt; probably won't do what you expect if VAR is a tied or other special variable. Don't do that either.</source>
          <target state="translated">&lt;code&gt;foreach&lt;/code&gt; 如果VAR是绑定变量或其他特殊变量，foreach可能不会达到您的期望。也不要那样做。</target>
        </trans-unit>
        <trans-unit id="3a4a74a3423620b717e8515966c608ea94d077f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;from_to()&lt;/code&gt; returns the length of the converted string in octets on success, and &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; on error.</source>
          <target state="translated">&lt;code&gt;from_to()&lt;/code&gt; 成功时返回转换后的字符串的长度（以八位字节为单位），错误时返回 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ee56073a87e8cb2ec407581f4115873a117f0638" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gen_delimited_pat&lt;/code&gt; may also be called with an optional second argument, which specifies the &quot;escape&quot; character(s) to be used for each delimiter. For example to match a Pascal-style string (where ' is the delimiter and '' is a literal ' within the string):</source>
          <target state="translated">&lt;code&gt;gen_delimited_pat&lt;/code&gt; 也可以使用可选的第二个参数来调用，该参数指定要用于每个定界符的&amp;ldquo;转义&amp;rdquo;字符。例如，匹配Pascal样式的字符串（其中'是定界符，而'是字符串中的文字'）：</target>
        </trans-unit>
        <trans-unit id="6a3889013df238b89a769a62665a92aecb6580a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gen_extract_tagged&lt;/code&gt; generates a new anonymous subroutine which extracts text between (balanced) specified tags. In other words, it generates a function identical in function to &lt;code&gt;extract_tagged&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;gen_extract_tagged&lt;/code&gt; 生成一个新的匿名子例程，该例程提取（平衡的）指定标签之间的文本。换句话说，它将生成一个功能与 &lt;code&gt;extract_tagged&lt;/code&gt; 相同的函数。</target>
        </trans-unit>
        <trans-unit id="94fc46087afc34909f3ff50b3a35f51dd87159b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;get&lt;/code&gt; downloads a distribution file and untars or unzips it, &lt;code&gt;make&lt;/code&gt; builds it, &lt;code&gt;test&lt;/code&gt; runs the test suite, and &lt;code&gt;install&lt;/code&gt; installs it.</source>
          <target state="translated">&lt;code&gt;get&lt;/code&gt; 下载一个分发文件并解压缩或解压缩， &lt;code&gt;make&lt;/code&gt; 构建， &lt;code&gt;test&lt;/code&gt; 运行测试套件，然后 &lt;code&gt;install&lt;/code&gt; 安装。</target>
        </trans-unit>
        <trans-unit id="597f829bafddc48835ebea8c700b577d34cea8b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;get_handle&lt;/code&gt; appends the return value of this to the end of the list of classes it will try using. Unless you override this method, your project class will inherit Locale::Maketext's &lt;code&gt;fallback_language_classes&lt;/code&gt; , which currently returns an empty list, &lt;code&gt;()&lt;/code&gt; . By setting this to some value (namely, the name of a loadable language class), you can be sure that &lt;code&gt;get_handle&lt;/code&gt; will always manage to construct a language handle.</source>
          <target state="translated">&lt;code&gt;get_handle&lt;/code&gt; 将此返回值附加到它将尝试使用的类列表的末尾。除非您重写此方法，否则您的项目类将继承Locale :: Maketext的 &lt;code&gt;fallback_language_classes&lt;/code&gt; ，该类当前返回一个空列表 &lt;code&gt;()&lt;/code&gt; 。通过将此值设置为某个值（即可加载语言类的名称），可以确保 &lt;code&gt;get_handle&lt;/code&gt; 将始终设法构造语言句柄。</target>
        </trans-unit>
        <trans-unit id="07d51dfcba73441795cbac2c1e95e837ccfcfefe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;get_handle&lt;/code&gt; appends the return value of this to the end of whatever list of languages you pass &lt;code&gt;get_handle&lt;/code&gt; . Unless you override this method, your project class will inherit Locale::Maketext's &lt;code&gt;fallback_languages&lt;/code&gt; , which currently returns &lt;code&gt;('i-default', 'en', 'en-US')&lt;/code&gt; . (&quot;i-default&quot; is defined in RFC 2277).</source>
          <target state="translated">&lt;code&gt;get_handle&lt;/code&gt; 将此返回值附加到您传递 &lt;code&gt;get_handle&lt;/code&gt; 的任何语言列表的末尾。除非您重写此方法，否则您的项目类将继承Locale :: Maketext的 &lt;code&gt;fallback_languages&lt;/code&gt; ，当前返回 &lt;code&gt;('i-default', 'en', 'en-US')&lt;/code&gt; 。（&amp;ldquo; i-default&amp;rdquo;在RFC 2277中定义）。</target>
        </trans-unit>
        <trans-unit id="cf569ccd5c0de9aae2bc67f8d6ef04eaf70c3485" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git&lt;/code&gt; only supports &lt;code&gt;git://&lt;/code&gt; style urls.</source>
          <target state="translated">&lt;code&gt;git&lt;/code&gt; 仅支持 &lt;code&gt;git://&lt;/code&gt; 样式网址。</target>
        </trans-unit>
        <trans-unit id="f85aa8588ef6572feba5f3f7196b55f9be2ff8a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gnu_compat&lt;/code&gt; controls whether &lt;code&gt;--opt=&lt;/code&gt; is allowed, and what it should do. Without &lt;code&gt;gnu_compat&lt;/code&gt; , &lt;code&gt;--opt=&lt;/code&gt; gives an error. With &lt;code&gt;gnu_compat&lt;/code&gt; , &lt;code&gt;--opt=&lt;/code&gt; will give option &lt;code&gt;opt&lt;/code&gt; and empty value. This is the way GNU getopt_long() does it.</source>
          <target state="translated">&lt;code&gt;gnu_compat&lt;/code&gt; 控制是否允许 &lt;code&gt;--opt=&lt;/code&gt; 以及它应该做什么。如果没有 &lt;code&gt;gnu_compat&lt;/code&gt; ，-- opt &lt;code&gt;--opt=&lt;/code&gt; 会给出错误。使用 &lt;code&gt;gnu_compat&lt;/code&gt; 时，-- &lt;code&gt;opt&lt;/code&gt; &lt;code&gt;--opt=&lt;/code&gt; 将提供选项opt和空值。这就是GNU getopt_long（）做到的方式。</target>
        </trans-unit>
        <trans-unit id="da23eeb6ab9c230c23432ea70d9c9e7b965fbe5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gunzip&lt;/code&gt; expects at least two parameters, &lt;code&gt;$input_filename_or_reference&lt;/code&gt; and &lt;code&gt;$output_filename_or_reference&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;gunzip&lt;/code&gt; 需要至少两个参数 &lt;code&gt;$input_filename_or_reference&lt;/code&gt; 和 &lt;code&gt;$output_filename_or_reference&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="19b8e8c4b2f2968447ed1a4e47f9c92d6075290d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gv&lt;/code&gt; is the scalar to be converted.</source>
          <target state="translated">&lt;code&gt;gv&lt;/code&gt; 是要转换的标量。</target>
        </trans-unit>
        <trans-unit id="29db96deb265ac3c7d7d0953f53bc03ef4c2f394" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gzip&lt;/code&gt; expects at least two parameters, &lt;code&gt;$input_filename_or_reference&lt;/code&gt; and &lt;code&gt;$output_filename_or_reference&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;gzip&lt;/code&gt; 需要至少两个参数 &lt;code&gt;$input_filename_or_reference&lt;/code&gt; 和 &lt;code&gt;$output_filename_or_reference&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="40e77ef19371ab42dd3ee159db29ed1de58b556a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;help&lt;/code&gt; will get you into the documentation, but here are the most useful commands:</source>
          <target state="translated">&lt;code&gt;help&lt;/code&gt; 将带您进入文档，但以下是最有用的命令：</target>
        </trans-unit>
        <trans-unit id="f33ba501199bdab9a127e2b1f7b1b40f51678514" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;host&lt;/code&gt; - sets the hostname to send the messages to. Defaults to the local host.</source>
          <target state="translated">&lt;code&gt;host&lt;/code&gt; -设置要将消息发送到的主机名。默认为本地主机。</target>
        </trans-unit>
        <trans-unit id="49c02ec2bc6d085cd003b0ab590c3cedf46f1d70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;i!&lt;/code&gt; and &lt;code&gt;I!&lt;/code&gt; are also allowed, but only for completeness' sake: they are identical to &lt;code&gt;i&lt;/code&gt; and &lt;code&gt;I&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;i!&lt;/code&gt; 和 &lt;code&gt;I!&lt;/code&gt; 也允许，但仅出于完整性考虑：它们与 &lt;code&gt;i&lt;/code&gt; 和 &lt;code&gt;I&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="38745558cff56e73757d72d93d0e833b8ab829ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;id()&lt;/code&gt; also uses a caching technique that makes it faster when the id of an object is requested often, but slower if it is needed only once or twice.</source>
          <target state="translated">&lt;code&gt;id()&lt;/code&gt; 还使用了一种缓存技术，该缓存技术可以在经常请求对象的id时提高速度，而在仅需要一次或两次时才需要降低速度。</target>
        </trans-unit>
        <trans-unit id="1014df6f9393ccdb9b982a8f0cdabec78db82f15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;if&lt;/code&gt; executes the statement once</source>
          <target state="translated">&lt;code&gt;if&lt;/code&gt; 执行一次语句</target>
        </trans-unit>
        <trans-unit id="b896458be3e65959268ad7eb2dbf0a7972aba118" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import_extra()&lt;/code&gt; is called by &lt;code&gt;&lt;a href=&quot;../../functions/import&quot;&gt;import()&lt;/a&gt;&lt;/code&gt;. It provides an opportunity for you to add behaviors to your module based on its import list.</source>
          <target state="translated">&lt;code&gt;import_extra()&lt;/code&gt; 由 &lt;code&gt;&lt;a href=&quot;../../functions/import&quot;&gt;import()&lt;/a&gt;&lt;/code&gt; 调用。它为您提供了一个机会，可以根据其导入列表将行为添加到模块中。</target>
        </trans-unit>
        <trans-unit id="bf041671b0859bae0d069d4abdaaec3333d3078b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;inflate&lt;/code&gt; expects at least two parameters, &lt;code&gt;$input_filename_or_reference&lt;/code&gt; and &lt;code&gt;$output_filename_or_reference&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;inflate&lt;/code&gt; 需要至少两个参数 &lt;code&gt;$input_filename_or_reference&lt;/code&gt; 和 &lt;code&gt;$output_filename_or_reference&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a48e2284b44cc7c2c571d6415bc1d2a1c3a3bad6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iosock&lt;/code&gt; is a very limited &lt;a href=&quot;../io/socket/inet&quot;&gt;IO::Socket::INET&lt;/a&gt; based mechanism for retrieving &lt;code&gt;http&lt;/code&gt; schemed urls. It doesn't follow redirects for instance.</source>
          <target state="translated">&lt;code&gt;iosock&lt;/code&gt; 是一种非常有限的基于&lt;a href=&quot;../io/socket/inet&quot;&gt;IO :: Socket :: INET&lt;/a&gt;的机制，用于检索 &lt;code&gt;http&lt;/code&gt; 计划的url。例如，它不遵循重定向。</target>
        </trans-unit>
        <trans-unit id="f75f4cb95b2a1340b2264c404136042989b18f8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is_deeply()&lt;/code&gt; can do that better and with diagnostics.</source>
          <target state="translated">&lt;code&gt;is_deeply()&lt;/code&gt; 可以更好地进行诊断。</target>
        </trans-unit>
        <trans-unit id="fa45eb9c353e9becb0910ea19cd26aa2cc1efcb2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is_deeply()&lt;/code&gt; compares the dereferenced values of references, the references themselves (except for their type) are ignored. This means aspects such as blessing and ties are not considered &quot;different&quot;.</source>
          <target state="translated">&lt;code&gt;is_deeply()&lt;/code&gt; 比较引用的解引用值，引用本身（类型除外）将被忽略。这意味着祝福和纽带等方面不被视为&amp;ldquo;不同&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="3ac9608b72d885f105d8ded955f2852bb1f4026f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is_deeply()&lt;/code&gt; currently has very limited handling of function reference and globs. It merely checks if they have the same referent. This may improve in the future.</source>
          <target state="translated">&lt;code&gt;is_deeply()&lt;/code&gt; 当前对函数引用和glob的处理非常有限。它仅检查它们是否具有相同的引用对象。将来可能会有所改善。</target>
        </trans-unit>
        <trans-unit id="9fee01bdd14b870e8f587577165aaba8174b5f56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is_loaded&lt;/code&gt; tells you if &lt;code&gt;PACKAGE&lt;/code&gt; has been marked as loaded yet. &lt;code&gt;PACKAGE&lt;/code&gt; can be a bareword or string.</source>
          <target state="translated">&lt;code&gt;is_loaded&lt;/code&gt; 告诉您 &lt;code&gt;PACKAGE&lt;/code&gt; 是否已标记为已加载。 &lt;code&gt;PACKAGE&lt;/code&gt; 可以是空词或字符串。</target>
        </trans-unit>
        <trans-unit id="908cf7f802a6484de1a86d6a37939c96ffeeea32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is_negative()&lt;/code&gt; is an alias for &lt;code&gt;is_neg()&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;is_negative()&lt;/code&gt; 是一个别名 &lt;code&gt;is_neg()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="57e24bd0e67b03038233cb69159892773438e44e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is_our&lt;/code&gt; indicates that the name to check is an 'our' declaration.</source>
          <target state="translated">&lt;code&gt;is_our&lt;/code&gt; 表示要检查的名称是&amp;ldquo;我们的&amp;rdquo;声明。</target>
        </trans-unit>
        <trans-unit id="83a514d3b918898f19b078949b55c4b50405311f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is_positive()&lt;/code&gt; and &lt;code&gt;is_negative()&lt;/code&gt; are aliases to &lt;code&gt;is_pos()&lt;/code&gt; and &lt;code&gt;is_neg()&lt;/code&gt; , respectively. &lt;code&gt;is_positive()&lt;/code&gt; and &lt;code&gt;is_negative()&lt;/code&gt; were introduced in v1.36, while &lt;code&gt;is_pos()&lt;/code&gt; and &lt;code&gt;is_neg()&lt;/code&gt; were only introduced in v1.68.</source>
          <target state="translated">&lt;code&gt;is_positive()&lt;/code&gt; 和 &lt;code&gt;is_negative()&lt;/code&gt; 是别名 &lt;code&gt;is_pos()&lt;/code&gt; 和 &lt;code&gt;is_neg()&lt;/code&gt; ，分别。 &lt;code&gt;is_positive()&lt;/code&gt; 和 &lt;code&gt;is_negative()&lt;/code&gt; 在v1.36进行了介绍，而 &lt;code&gt;is_pos()&lt;/code&gt; 和 &lt;code&gt;is_neg()&lt;/code&gt; 在v1.68只引入。</target>
        </trans-unit>
        <trans-unit id="36dbe9a547bda60465b84e97fa8c4255f94a0b23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is_positive()&lt;/code&gt; is an alias for &lt;code&gt;is_pos()&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;is_positive()&lt;/code&gt; 是一个别名 &lt;code&gt;is_pos()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c7ebfddb80039ad6fdcb40b1907d93271e7168e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is_shared&lt;/code&gt; checks if the specified variable is shared or not. If shared, returns the variable's internal ID (similar to &lt;code&gt;refaddr()&lt;/code&gt; (see &lt;a href=&quot;../scalar/util&quot;&gt;Scalar::Util&lt;/a&gt;). Otherwise, returns &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;is_shared&lt;/code&gt; 检查指定的变量是否共享。如果是共享的，则返回变量的内部ID（类似于 &lt;code&gt;refaddr()&lt;/code&gt; （请参见&lt;a href=&quot;../scalar/util&quot;&gt;Scalar :: Util&lt;/a&gt;）；否则，返回 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1bd3e625f9dccecad6923a6b9bcad7bcf170e05e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;isa&lt;/code&gt; methods behave appropriately).</source>
          <target state="translated">&lt;code&gt;isa&lt;/code&gt; 方法的行为正确）。</target>
        </trans-unit>
        <trans-unit id="05461b3d98ad64340381f43af6ab96dfd13c6be0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iterator_factory_class&lt;/code&gt; can be customized, as described in &lt;a href=&quot;#new&quot;&gt;new&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;iterator_factory_class&lt;/code&gt; 如&lt;a href=&quot;#new&quot;&gt;new中&lt;/a&gt;所述，可以定制iterator_factory_class。</target>
        </trans-unit>
        <trans-unit id="778b80cfdd673f8fb55921afdf3d3a38219c358b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lib&lt;/code&gt; is maintained by the perl5-porters. Please direct any questions to the canonical mailing list. Anything that is applicable to the CPAN release can be sent to its maintainer, though.</source>
          <target state="translated">&lt;code&gt;lib&lt;/code&gt; 由perl5-porters维护。如有任何疑问，请直接向规范邮件列表发送。但是，适用于CPAN版本的所有内容都可以发送到其维护者。</target>
        </trans-unit>
        <trans-unit id="a79ceaa8331c46467666b58e2fedd38e6ff4a586" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lib&lt;/code&gt; will warn about this. The sole exceptions are files with the &lt;code&gt;.par&lt;/code&gt; extension which are intended to be used as libraries.</source>
          <target state="translated">&lt;code&gt;lib&lt;/code&gt; 将对此发出警告。唯一的例外是带有 &lt;code&gt;.par&lt;/code&gt; 扩展名的文件，这些文件旨在用作库。</target>
        </trans-unit>
        <trans-unit id="7dbdb4f0306520f7abe5482b14dfce7a7aa50e8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;load_handlers&lt;/code&gt; will attempt to load the &lt;code&gt;MySourceHandler&lt;/code&gt; class by looking in &lt;code&gt;@INC&lt;/code&gt; for it in this order:</source>
          <target state="translated">&lt;code&gt;load_handlers&lt;/code&gt; 将尝试通过按以下顺序在 &lt;code&gt;@INC&lt;/code&gt; 中查找来加载 &lt;code&gt;MySourceHandler&lt;/code&gt; 类：</target>
        </trans-unit>
        <trans-unit id="781e302076091acf759d87fc441e0a784931b032" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;localeconv()&lt;/code&gt; takes no arguments, and returns &lt;b&gt;a reference to&lt;/b&gt; a hash. The keys of this hash are variable names for formatting, such as &lt;code&gt;decimal_point&lt;/code&gt; and &lt;code&gt;thousands_sep&lt;/code&gt; . The values are the corresponding, er, values. See &lt;a href=&quot;posix#localeconv&quot;&gt;localeconv in POSIX&lt;/a&gt; for a longer example listing the categories an implementation might be expected to provide; some provide more and others fewer. You don't need an explicit &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; , because &lt;code&gt;localeconv()&lt;/code&gt; always observes the current locale.</source>
          <target state="translated">&lt;code&gt;localeconv()&lt;/code&gt; 不接受任何参数，并返回&lt;b&gt;对&lt;/b&gt;哈希&lt;b&gt;的引用&lt;/b&gt;。这个哈希键是格式化的变量名，如 &lt;code&gt;decimal_point&lt;/code&gt; 和 &lt;code&gt;thousands_sep&lt;/code&gt; 。这些值是相应的er值。请参阅&lt;a href=&quot;posix#localeconv&quot;&gt;POSIX&lt;/a&gt;中的localeconv，以获得一个更长的示例，其中列出了可能期望实现提供的类别。一些提供更多而其他提供更少。您不需要显式的 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; ，因为 &lt;code&gt;localeconv()&lt;/code&gt; 始终遵守当前语言环境。</target>
        </trans-unit>
        <trans-unit id="ea4a29ff759286dc4a0d846a54fba072c0f2b509" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lseek()&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/tell&quot;&gt;tell()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/sysseek&quot;&gt;sysseek()&lt;/a&gt;&lt;/code&gt; only work with files opened in binary mode.</source>
          <target state="translated">&lt;code&gt;lseek()&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/tell&quot;&gt;tell()&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;functions/sysseek&quot;&gt;sysseek()&lt;/a&gt;&lt;/code&gt; 仅适用于以二进制模式打开的文件。</target>
        </trans-unit>
        <trans-unit id="883ccb60af102a63dca29d53e2d458e06fa1f4e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lynx&lt;/code&gt; can only fetch remote files by dumping its contents to &lt;code&gt;STDOUT&lt;/code&gt; , which we in turn capture. If that content is a 'custom' error file (like, say, a &lt;code&gt;404 handler&lt;/code&gt;), you will get that contents instead.</source>
          <target state="translated">&lt;code&gt;lynx&lt;/code&gt; 只能通过将其内容转储到 &lt;code&gt;STDOUT&lt;/code&gt; 来获取远程文件，然后我们将其捕获。如果该内容是&amp;ldquo;自定义&amp;rdquo;错误文件（例如 &lt;code&gt;404 handler&lt;/code&gt; ），则将获取该内容。</target>
        </trans-unit>
        <trans-unit id="d886031ca39127136a93f5c58154011b1571ac4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;make_path&lt;/code&gt; was instructed to give the group ownership of created directories to the symbolic name [group], but &lt;code&gt;&lt;a href=&quot;../functions/getgrnam&quot;&gt;getgrnam&lt;/a&gt;&lt;/code&gt; did not return the corresponding numeric gid. The directory will be created, but group ownership will not be changed.</source>
          <target state="translated">&lt;code&gt;make_path&lt;/code&gt; 指示make_path将创建目录的组所有权赋予符号名[group]，但 &lt;code&gt;&lt;a href=&quot;../functions/getgrnam&quot;&gt;getgrnam&lt;/a&gt;&lt;/code&gt; 不会返回相应的数字gid。将创建目录，但组所有权不会更改。</target>
        </trans-unit>
        <trans-unit id="3237359a6cb04586bfde967ca0039e3278fe9e70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;make_path&lt;/code&gt; was instructed to give the ownership of created directories to the symbolic name [owner], but &lt;code&gt;&lt;a href=&quot;../functions/getpwnam&quot;&gt;getpwnam&lt;/a&gt;&lt;/code&gt; did not return the corresponding numeric uid. The directory will be created, but ownership will not be changed.</source>
          <target state="translated">&lt;code&gt;make_path&lt;/code&gt; 指示make_path将创建的目录的所有权赋予符号名称[owner]，但 &lt;code&gt;&lt;a href=&quot;../functions/getpwnam&quot;&gt;getpwnam&lt;/a&gt;&lt;/code&gt; 没有返回相应的数字uid。将创建目录，但不会更改所有权。</target>
        </trans-unit>
        <trans-unit id="1fc7e268861ebf6c487de7b9a430854e30e76cb0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;make_path&lt;/code&gt; was not given any paths to create. This message is only emitted if the routine is called with the traditional interface. The modern interface will remain silent if given nothing to do.</source>
          <target state="translated">&lt;code&gt;make_path&lt;/code&gt; 为make_path提供任何创建路径。仅当使用传统接口调用例程时，才发出此消息。如果无事可做，现代界面将保持沉默。</target>
        </trans-unit>
        <trans-unit id="2755c6f5063eb2e334da849c0ce6318b9f39c061" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;make_path&lt;/code&gt; was unable to create the path. Probably some sort of permissions error at the point of departure, or insufficient resources (such as free inodes on Unix).</source>
          <target state="translated">&lt;code&gt;make_path&lt;/code&gt; 无法创建路径。可能在离开时出现某种权限错误，或者资源不足（例如Unix上的免费inode）。</target>
        </trans-unit>
        <trans-unit id="07a8fe35478388c546b0d41c18eefc372419fd9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;maketext&lt;/code&gt; and other methods to do with accessing %Lexicon data for a given language handle.</source>
          <target state="translated">&lt;code&gt;maketext&lt;/code&gt; 和其他用于访问给定语言句柄的％Lexicon数据的方法。</target>
        </trans-unit>
        <trans-unit id="8d3d67fea62a065d10c5926428fdebd26c6a5f56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mantissa()&lt;/code&gt; and &lt;code&gt;exponent()&lt;/code&gt; return the said parts of the BigInt such that:</source>
          <target state="translated">&lt;code&gt;mantissa()&lt;/code&gt; 和 &lt;code&gt;exponent()&lt;/code&gt; 返回BigInt的所述部分，使得：</target>
        </trans-unit>
        <trans-unit id="8b922a1e8b8a437e6a25aad879f34f0de9830b8d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mask&lt;/code&gt; is recognised as an alias for this parameter.</source>
          <target state="translated">&lt;code&gt;mask&lt;/code&gt; 被识别为该参数的别名。</target>
        </trans-unit>
        <trans-unit id="03355b926946894926cfadae3a6b81818310b791" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;memoize&lt;/code&gt; knows that if the normalized version of the arguments is the same for two argument lists, then it can safely look up the value that it computed for one argument list and return it as the result of calling the function with the other argument list, even if the argument lists look different.</source>
          <target state="translated">&lt;code&gt;memoize&lt;/code&gt; 知道，如果两个参数列表的参数规范化版本相同，则它可以安全地查找为一个参数列表计算的值，并将其返回给另一个参数列表调用该函数，甚至如果参数列表看起来不同。</target>
        </trans-unit>
        <trans-unit id="588d0d71e67f680f937b2933e4e80482741a6b27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;meth&lt;/code&gt; is the name of the method to call.</source>
          <target state="translated">&lt;code&gt;meth&lt;/code&gt; 是要调用的方法的名称。</target>
        </trans-unit>
        <trans-unit id="c382bf574ac941794f4ceb11f1a7cf0a554b70e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;miniperl -MCross -MConfig -we 1&lt;/code&gt; should run okay, and it will provide right</source>
          <target state="translated">&lt;code&gt;miniperl -MCross -MConfig -we 1&lt;/code&gt; 应该可以正常运行，它将提供正确的</target>
        </trans-unit>
        <trans-unit id="4fffeff3899ad34654b8fd715931df104143ede2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;minlen&lt;/code&gt;&lt;code&gt;minlenret&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;minlen&lt;/code&gt;&lt;code&gt;minlenret&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e7ff8f6ef90463a78a4980b3e772f012f8f89756" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;minlenret&lt;/code&gt; is the minimum length (in characters) of the string that would be found in $&amp;amp; after a match.</source>
          <target state="translated">&lt;code&gt;minlenret&lt;/code&gt; 是匹配后在$＆中找到的字符串的最小长度（以字符为单位）。</target>
        </trans-unit>
        <trans-unit id="fa93a538eb746e066effec46888283ca286ffddb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mode&lt;/code&gt; may have the values &lt;code&gt;deterministic&lt;/code&gt; for the case where all questions come in the order written down and &lt;code&gt;anyorder&lt;/code&gt; for the case where the questions may come in any order. The default mode is &lt;code&gt;deterministic&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;mode&lt;/code&gt; 可能具有的值 &lt;code&gt;deterministic&lt;/code&gt; 的情况下，所有的问题进来写下来和秩序 &lt;code&gt;anyorder&lt;/code&gt; 对于其中的问题可能会在任何顺序的情况。默认模式是 &lt;code&gt;deterministic&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="77a292f2351d2499cb4d3956fe35448489fd6cf1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;my_popen&lt;/code&gt; uses</source>
          <target state="translated">&lt;code&gt;my_popen&lt;/code&gt; 使用</target>
        </trans-unit>
        <trans-unit id="fe304a6dc30cae0afd16e8b92b6cd1cd7ce95c7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;my_strlcat()&lt;/code&gt; appends string &lt;code&gt;src&lt;/code&gt; to the end of &lt;code&gt;dst&lt;/code&gt; . It will append at most &lt;code&gt;size - strlen(dst) - 1&lt;/code&gt; characters. It will then &lt;code&gt;NUL&lt;/code&gt; -terminate, unless &lt;code&gt;size&lt;/code&gt; is 0 or the original &lt;code&gt;dst&lt;/code&gt; string was longer than &lt;code&gt;size&lt;/code&gt; (in practice this should not happen as it means that either &lt;code&gt;size&lt;/code&gt; is incorrect or that &lt;code&gt;dst&lt;/code&gt; is not a proper &lt;code&gt;NUL&lt;/code&gt; -terminated string).</source>
          <target state="translated">&lt;code&gt;my_strlcat()&lt;/code&gt; 将字符串 &lt;code&gt;src&lt;/code&gt; 附加到 &lt;code&gt;dst&lt;/code&gt; 的末尾。它将附加最大 &lt;code&gt;size - strlen(dst) - 1&lt;/code&gt; 字符。然后它将以 &lt;code&gt;NUL&lt;/code&gt; 终止，除非 &lt;code&gt;size&lt;/code&gt; 为0或原始 &lt;code&gt;dst&lt;/code&gt; 字符串长于 &lt;code&gt;size&lt;/code&gt; （实际上不应发生这种情况，因为这意味着 &lt;code&gt;size&lt;/code&gt; 不正确或 &lt;code&gt;dst&lt;/code&gt; 不是以 &lt;code&gt;NUL&lt;/code&gt; 终止的正确字符串）。</target>
        </trans-unit>
        <trans-unit id="cdedecbe5c820473f669d0af506ce2015ddd5193" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;my_strlcpy()&lt;/code&gt; copies up to &lt;code&gt;size - 1&lt;/code&gt; characters from the string &lt;code&gt;src&lt;/code&gt; to &lt;code&gt;dst&lt;/code&gt; , &lt;code&gt;NUL&lt;/code&gt; -terminating the result if &lt;code&gt;size&lt;/code&gt; is not 0.</source>
          <target state="translated">&lt;code&gt;my_strlcpy()&lt;/code&gt; 最多将 &lt;code&gt;size - 1&lt;/code&gt; 字符从字符串 &lt;code&gt;src&lt;/code&gt; 复制到 &lt;code&gt;dst&lt;/code&gt; ， &lt;code&gt;NUL&lt;/code&gt; -如果 &lt;code&gt;size&lt;/code&gt; 不为0 则终止结果。</target>
        </trans-unit>
        <trans-unit id="7c4001332f8ab98ef832acfc949829d1eb7d7cb2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;n&lt;/code&gt; , &lt;code&gt;N&lt;/code&gt; , &lt;code&gt;v&lt;/code&gt; and &lt;code&gt;V&lt;/code&gt; accept the &lt;code&gt;!&lt;/code&gt; modifier to represent signed 16-/32-bit integers in big-/little-endian order. This is portable only when all platforms sharing packed data use the same binary representation for signed integers; for example, when all platforms use two's-complement representation.</source>
          <target state="translated">&lt;code&gt;n&lt;/code&gt; ， &lt;code&gt;N&lt;/code&gt; ， &lt;code&gt;v&lt;/code&gt; 和 &lt;code&gt;V&lt;/code&gt; 接受 &lt;code&gt;!&lt;/code&gt; 修饰符，以大/小端顺序表示带符号的16/32位整数。仅当所有共享打包数据的平台对带符号整数使用相同的二进制表示形式时，此方法才是可移植的。例如，当所有平台都使用二进制补码表示时。</target>
        </trans-unit>
        <trans-unit id="ee6a21fed22915a331be3383e5b5b4032f977a5a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; and &lt;code&gt;len&lt;/code&gt; give the name. The name must be unqualified; that is, it must not include the package name. If &lt;code&gt;gv&lt;/code&gt; is a stash element, it is the caller's responsibility to ensure that the name passed to this function matches the name of the element. If it does not match, perl's internal bookkeeping will get out of sync.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; 和 &lt;code&gt;len&lt;/code&gt; 给出名字。名称不能为空。也就是说，它不能包含软件包名称。如果 &lt;code&gt;gv&lt;/code&gt; 是stash元素，则调用者有责任确保传递给此函数的名称与该元素的名称匹配。如果不匹配，perl的内部簿记将不同步。</target>
        </trans-unit>
        <trans-unit id="e95c68737e4cdbac2fa96320e25fc1fa20440782" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ndelay&lt;/code&gt; - Open the connection immediately (normally, the connection is opened when the first message is logged).</source>
          <target state="translated">&lt;code&gt;ndelay&lt;/code&gt; -立即打开连接（通常，在记录第一条消息时打开连接）。</target>
        </trans-unit>
        <trans-unit id="7953c406c8ff699f7523d2c0fa454774e594fafa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;new()&lt;/code&gt; is a synonym for &lt;code&gt;create()&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;new()&lt;/code&gt; 是 &lt;code&gt;create()&lt;/code&gt; 的同义词。</target>
        </trans-unit>
        <trans-unit id="da2a9ff681510122f5292361c80d05ba72747aae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;new&lt;/code&gt; creates a new semaphore, and initializes its count to the specified number (which must be an integer). If no number is specified, the semaphore's count defaults to 1.</source>
          <target state="translated">&lt;code&gt;new&lt;/code&gt; 创建一个新的信号量，并将其计数初始化为指定的数字（必须为整数）。如果未指定任何数字，则信号量的计数默认为1。</target>
        </trans-unit>
        <trans-unit id="efedbfabb0d57daca4e55f1c80323100b61e0eb9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;new&lt;/code&gt; is the constructor for &lt;code&gt;IO::Dir&lt;/code&gt; objects. It accepts one optional argument which, if given, &lt;code&gt;new&lt;/code&gt; will pass to &lt;code&gt;&lt;a href=&quot;../functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;new&lt;/code&gt; 是 &lt;code&gt;IO::Dir&lt;/code&gt; 对象的构造函数。它接受一个可选参数，如果给定，则 &lt;code&gt;new&lt;/code&gt; 将传递给 &lt;code&gt;&lt;a href=&quot;../functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="35ebed1aa25ba5c1ac9f9e4c204e2addbac198e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;new&lt;/code&gt; starts a new thread of execution in the referenced subroutine. The optional list is passed as parameters to the subroutine. Execution continues in both the subroutine and the code after the &lt;code&gt;new&lt;/code&gt; call.</source>
          <target state="translated">&lt;code&gt;new&lt;/code&gt; 在引用的子例程中启动一个新的执行线程。可选列表作为参数传递给子例程。 &lt;code&gt;new&lt;/code&gt; 调用之后，子例程和代码中的执行继续。</target>
        </trans-unit>
        <trans-unit id="a92dfd8fef1985419787a429944b6929b7d15145" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;noeol&lt;/code&gt; - When set to true, no end of line character (&lt;code&gt;\n&lt;/code&gt; ) will be appended to the message. This can be useful for some buggy syslog daemons.</source>
          <target state="translated">&lt;code&gt;noeol&lt;/code&gt; -设置为true时，行尾字符（ &lt;code&gt;\n&lt;/code&gt; ）不会附加到消息中。这对于某些有问题的syslog守护程序可能很有用。</target>
        </trans-unit>
        <trans-unit id="a7da13afac64a19ada71fa128b3727ac19b9a817" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nofatal&lt;/code&gt; - When set to true, &lt;code&gt;openlog()&lt;/code&gt; and &lt;code&gt;syslog()&lt;/code&gt; will only emit warnings instead of dying if the connection to the syslog can't be established.</source>
          <target state="translated">&lt;code&gt;nofatal&lt;/code&gt; -设置为true时，如果无法建立与syslog的连接，则 &lt;code&gt;openlog()&lt;/code&gt; 和 &lt;code&gt;syslog()&lt;/code&gt; 只会发出警告，而不是死亡。</target>
        </trans-unit>
        <trans-unit id="6d145b40dff849bfb7be76022f83e7b4e1ab3e8b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nonul&lt;/code&gt; - When set to true, no &lt;code&gt;NUL&lt;/code&gt; character (&lt;code&gt;\0&lt;/code&gt; ) will be appended to the message. This can be useful for some buggy syslog daemons.</source>
          <target state="translated">&lt;code&gt;nonul&lt;/code&gt; -设置为true时，不会在消息后附加 &lt;code&gt;NUL&lt;/code&gt; 字符（ &lt;code&gt;\0&lt;/code&gt; ）。这对于某些有问题的syslog守护程序可能很有用。</target>
        </trans-unit>
        <trans-unit id="23eced03bcdab870ab9edcbe9dc4bb03fa8ec64e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;normal&lt;/code&gt; is a string like &quot;ToLower&quot; which means the swash %utf8::ToLower.</source>
          <target state="translated">&lt;code&gt;normal&lt;/code&gt; 是一个类似于&amp;ldquo; ToLower&amp;rdquo;的字符串，它表示斜率％utf8 :: ToLower。</target>
        </trans-unit>
        <trans-unit id="e54ce6f923598d61f4c291c2231596a77ff50261" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;normalization&lt;/code&gt; is performed after &lt;code&gt;preprocess&lt;/code&gt; (if defined).</source>
          <target state="translated">&lt;code&gt;normalization&lt;/code&gt; 在 &lt;code&gt;preprocess&lt;/code&gt; （如果已定义）之后执行。</target>
        </trans-unit>
        <trans-unit id="6c787cbcd0d732de5ebfc6c56bc124a3d88f16c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;normalize&lt;/code&gt; and other some functions: on request.</source>
          <target state="translated">&lt;code&gt;normalize&lt;/code&gt; 和其他一些功能：根据要求。</target>
        </trans-unit>
        <trans-unit id="f38203e290e1449681c9a41b7d479b27b8df21db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nowait&lt;/code&gt; - Don't wait for child processes that may have been created while logging the message. (The GNU C library does not create a child process, so this option has no effect on Linux.)</source>
          <target state="translated">&lt;code&gt;nowait&lt;/code&gt; -不要等待记录消息时可能已经创建的子进程。（GNU C库不会创建子进程，因此此选项在Linux上无效。）</target>
        </trans-unit>
        <trans-unit id="4694888bc88f2c3c8dc0bbded8e50a8bc2b38846" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nparens&lt;/code&gt; , &lt;code&gt;lastparen&lt;/code&gt; , and &lt;code&gt;lastcloseparen&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;nparens&lt;/code&gt; ， &lt;code&gt;lastparen&lt;/code&gt; 和 &lt;code&gt;lastcloseparen&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8104bc44857c778695c79d0d1e8b5b9a2c1281a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;num()&lt;/code&gt; returns the numeric value of the input Unicode string; or &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if it doesn't think the entire string has a completely valid, safe numeric value.</source>
          <target state="translated">&lt;code&gt;num()&lt;/code&gt; 返回输入的Unicode字符串的数值；或 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; (如果它认为整个字符串不具有完全有效的安全数字值）。</target>
        </trans-unit>
        <trans-unit id="3a7b6da46d3ad3066f3c734bb010fb7646c3f1c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;num&lt;/code&gt; errs on the side of safety, and there may be valid strings of decimal digits that it doesn't recognize. Note that Unicode defines a number of &quot;digit&quot; characters that aren't &quot;decimal digit&quot; characters. &quot;Decimal digits&quot; have the property that they have a positional value, i.e., there is a units position, a 10's position, a 100's, etc, AND they are arranged in Unicode in blocks of 10 contiguous code points. The Chinese digits, for example, are not in such a contiguous block, and so Unicode doesn't view them as decimal digits, but merely digits, and so &lt;code&gt;\d&lt;/code&gt; will not match them. A single-character string containing one of these digits will have its decimal value returned by &lt;code&gt;num&lt;/code&gt; , but any longer string containing only these digits will return &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;num&lt;/code&gt; 犯错安全的一侧，并有可能成为十进制数字有效字符串，它不承认。请注意，Unicode定义了许多不是&amp;ldquo;十进制数字&amp;rdquo;字符的&amp;ldquo;数字&amp;rdquo;字符。 &amp;ldquo;十进制数字&amp;rdquo;具有以下属性：它们具有位置值，即存在单位位置，10的位置，100的位置等，并且它们以Unicode的形式排列在10个连续代码点的块中。例如，中文数字不在这种连续的块中，因此Unicode不会将它们视为十进制数字，而只能将其视为数字，因此 &lt;code&gt;\d&lt;/code&gt; 将不与它们匹配。包含这些数字之一的单字符字符串将使用 &lt;code&gt;num&lt;/code&gt; 返回其十进制值，但任何仅包含这些数字的更长字符串将返回 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="be874a64ffa774adf425ae056b0282a20c6623c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;o debug&lt;/code&gt; without an argument lists the valid package names and the current set of packages in debugging mode. &lt;code&gt;o debug&lt;/code&gt; has built-in completion support.</source>
          <target state="translated">&lt;code&gt;o debug&lt;/code&gt; 不带参数的调试将列出有效的程序包名称以及调试模式下的当前程序包集。 &lt;code&gt;o debug&lt;/code&gt; 具有内置的完成支持。</target>
        </trans-unit>
        <trans-unit id="466246a0ea0bcd1da5e37ea4ea93b6e2eb95b97a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ok()&lt;/code&gt; is given an expression (in this case &lt;code&gt;$foo eq $bar&lt;/code&gt; ). If it's true, the test passed. If it's false, it didn't. That's about it.</source>
          <target state="translated">&lt;code&gt;ok()&lt;/code&gt; 给ok（）一个表达式（在本例中 &lt;code&gt;$foo eq $bar&lt;/code&gt; ）。如果属实，则测试通过。如果它是错误的，则不是。就是这样</target>
        </trans-unit>
        <trans-unit id="23ab5a47d8307c5982472639709641b589ddb9e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ok()&lt;/code&gt; prints out either &quot;ok&quot; or &quot;not ok&quot; along with a test number (it keeps track of that for you).</source>
          <target state="translated">&lt;code&gt;ok()&lt;/code&gt; 会打印出&amp;ldquo; ok&amp;rdquo;或&amp;ldquo; not ok&amp;rdquo;以及测试编号（它会为您跟踪该编号）。</target>
        </trans-unit>
        <trans-unit id="02f0e19d76f2346c39f954fb30c54feae693b547" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ok(...)&lt;/code&gt; 's special handing of strings which look like they might be regexes can also cause unexpected behavior. An innocent:</source>
          <target state="translated">&lt;code&gt;ok(...)&lt;/code&gt; 看起来像是正则表达式的字符串的特殊处理也可能导致意外行为。天真：</target>
        </trans-unit>
        <trans-unit id="b9453067bce99ddb6c0b34c1ad76b7773aa72eb9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ok(...)&lt;/code&gt; 's use of string &lt;code&gt;eq&lt;/code&gt; can sometimes cause odd problems when comparing numbers, especially if you're casting a string to a number:</source>
          <target state="translated">&lt;code&gt;ok(...)&lt;/code&gt; 的字符串 &lt;code&gt;eq&lt;/code&gt; 有时在比较数字时会引起奇怪的问题，尤其是当您将字符串转换为数字时：</target>
        </trans-unit>
        <trans-unit id="7a6826999eb95521e6d8d3b9f0c51592f03d979f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;onfail&lt;/code&gt; hook might be used simply to print out the version of your package and/or how to report problems. It might also be used to generate extremely sophisticated diagnostics for a particularly bizarre test failure. However it's not a panacea. Core dumps or other unrecoverable errors prevent the &lt;code&gt;onfail&lt;/code&gt; hook from running. (It is run inside an &lt;code&gt;END&lt;/code&gt; block.) Besides, &lt;code&gt;onfail&lt;/code&gt; is probably over-kill in most cases. (Your test code should be simpler than the code it is testing, yes?)</source>
          <target state="translated">&lt;code&gt;onfail&lt;/code&gt; 挂钩可能仅用于打印软件包的版本和/或如何报告问题。它也可以用于生成极其复杂的诊断，以解决特别奇怪的测试失败。但是，它不是万能药。核心转储或其他不可恢复的错误会阻止 &lt;code&gt;onfail&lt;/code&gt; 挂钩运行。（它在 &lt;code&gt;END&lt;/code&gt; 块中运行。）此外，在大多数情况下， &lt;code&gt;onfail&lt;/code&gt; 可能会导致过多的故障。（您的测试代码应该比正在测试的代码简单，是吗？）</target>
        </trans-unit>
        <trans-unit id="cc7349d9655c667539e75d17a6e784d90202513f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;os2_stat&lt;/code&gt; special-cases</source>
          <target state="translated">&lt;code&gt;os2_stat&lt;/code&gt; 特殊情况</target>
        </trans-unit>
        <trans-unit id="0ae20ae53e9337f9b303890d15d0d3b627b7ddae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;overrideOut&lt;/code&gt; can perform it algorithmically. This parameter works like &lt;code&gt;overrideCJK&lt;/code&gt; , so see there for examples.</source>
          <target state="translated">&lt;code&gt;overrideOut&lt;/code&gt; 可以通过算法执行。此参数的工作方式类似于 &lt;code&gt;overrideCJK&lt;/code&gt; ，因此请参见示例。</target>
        </trans-unit>
        <trans-unit id="018daadf3e8c264d84f963dafe9df6707fe0f4db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;p&lt;/code&gt; contains the pointer to the UTF-8 string encoding the character that is being converted. This routine assumes that the character at &lt;code&gt;p&lt;/code&gt; is well-formed.</source>
          <target state="translated">&lt;code&gt;p&lt;/code&gt; 包含指向UTF-8字符串的指针，该字符串编码正在转换的字符。该例程假定 &lt;code&gt;p&lt;/code&gt; 处的字符格式正确。</target>
        </trans-unit>
        <trans-unit id="c11c698ac9fefb8ffaa9a6b715e3d39e29a9a669" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pTHX_&lt;/code&gt; is one of a number of macros (in</source>
          <target state="translated">&lt;code&gt;pTHX_&lt;/code&gt; 是许多宏之一（在</target>
        </trans-unit>
        <trans-unit id="5576100284e538d6e57d1d31b55e0b0abbd897e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pat&lt;/code&gt; and &lt;code&gt;args&lt;/code&gt; are a sprintf-style format pattern and encapsulated argument list. These are used to generate a string message. If the message does not end with a newline, then it will be extended with some indication of the current location in the code, as described for &lt;a href=&quot;#mess_sv&quot;&gt;mess_sv&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;pat&lt;/code&gt; 和 &lt;code&gt;args&lt;/code&gt; 是sprintf样式的格式模式和封装的参数列表。这些用于生成字符串消息。如果消息不是以换行符结尾，则将使用代码中当前位置的某种指示来对其进行扩展，如&lt;a href=&quot;#mess_sv&quot;&gt;mess_sv所述&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cad345d37c7dffa7c8f4f00e258549543dd5b66f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path&lt;/code&gt; - equivalent to &lt;code&gt;$stream_location&lt;/code&gt; , sets the stream location. Defaults to standard Unix location, or &lt;code&gt;_PATH_LOG&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; -相当于 &lt;code&gt;$stream_location&lt;/code&gt; ，将流位置。默认为标准Unix位置或 &lt;code&gt;_PATH_LOG&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d2b3947fbb2cde48071637c1ce2c9e11e4a635a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pattern&lt;/code&gt; would match if anchored at the given position, and it matches</source>
          <target state="translated">&lt;code&gt;pattern&lt;/code&gt; 如果锚定在给定位置，则模式将匹配，并且匹配</target>
        </trans-unit>
        <trans-unit id="363c3b041828e47609537312596fa6f5289a7cc3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;perl_parse&lt;/code&gt; is actually a wrapper around &lt;code&gt;S_parse_body&lt;/code&gt; , as defined in</source>
          <target state="translated">&lt;code&gt;perl_parse&lt;/code&gt; 实际上是 &lt;code&gt;S_parse_body&lt;/code&gt; 的包装，如</target>
        </trans-unit>
        <trans-unit id="f98336dcec32bd23880560249be78854ad195f7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;perldoc&lt;/code&gt; also searches directories specified by the &lt;code&gt;PERL5LIB&lt;/code&gt; (or &lt;code&gt;PERLLIB&lt;/code&gt; if &lt;code&gt;PERL5LIB&lt;/code&gt; is not defined) and &lt;code&gt;PATH&lt;/code&gt; environment variables. (The latter is so that embedded pods for executables, such as &lt;code&gt;perldoc&lt;/code&gt; itself, are available.)</source>
          <target state="translated">&lt;code&gt;perldoc&lt;/code&gt; 还搜索由 &lt;code&gt;PERL5LIB&lt;/code&gt; （如果 &lt;code&gt;PERL5LIB&lt;/code&gt; &lt;code&gt;PERLLIB&lt;/code&gt; 则为PERLLIB）和 &lt;code&gt;PATH&lt;/code&gt; 环境变量指定的目录。（后者是为了提供可执行的嵌入式Pod，例如 &lt;code&gt;perldoc&lt;/code&gt; 本身。）</target>
        </trans-unit>
        <trans-unit id="845299ed0481bf59a19162b1d7d0d6134de3b1f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;perldoc&lt;/code&gt; is also a useful tool for browsing information contained in the documentation, especially in conjunction with a pager like &lt;code&gt;less&lt;/code&gt; (recent versions of which have Windows support). You may have to set the PAGER environment variable to use a specific pager. &quot;perldoc -f foo&quot; will print information about the perl operator &quot;foo&quot;.</source>
          <target state="translated">&lt;code&gt;perldoc&lt;/code&gt; 还是浏览文档中包含的信息的有用工具，尤其是与 &lt;code&gt;less&lt;/code&gt; 喜欢的寻呼机（其最新版本具有Windows支持）结合使用时。您可能必须将PAGER环境变量设置为使用特定的寻呼机。&amp;ldquo; perldoc -f foo&amp;rdquo;将打印有关perl运算符&amp;ldquo; foo&amp;rdquo;的信息。</target>
        </trans-unit>
        <trans-unit id="08ef34f009dc3c8dfa646a2efd211a1e35cb6acf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;perldoc&lt;/code&gt; will use, in order of preference, the pager defined in &lt;code&gt;PERLDOC_PAGER&lt;/code&gt; , &lt;code&gt;MANPAGER&lt;/code&gt; , or &lt;code&gt;PAGER&lt;/code&gt; before trying to find a pager on its own. (&lt;code&gt;MANPAGER&lt;/code&gt; is not used if &lt;code&gt;perldoc&lt;/code&gt; was told to display plain text or unformatted pod.)</source>
          <target state="translated">&lt;code&gt;perldoc&lt;/code&gt; 在尝试自行查找传呼机之前，perldoc将按照优先顺序使用在 &lt;code&gt;PERLDOC_PAGER&lt;/code&gt; ， &lt;code&gt;MANPAGER&lt;/code&gt; 或 &lt;code&gt;PAGER&lt;/code&gt; 中定义的传呼机。（如果告诉 &lt;code&gt;perldoc&lt;/code&gt; 显示纯文本或未格式化的窗格，则不使用 &lt;code&gt;MANPAGER&lt;/code&gt; 。）</target>
        </trans-unit>
        <trans-unit id="2849be26c68f462d616e31ee18a116b7064450b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;perror&lt;/code&gt; - Write the message to standard error output as well to the system log (added in &lt;code&gt;Sys::Syslog&lt;/code&gt; 0.22).</source>
          <target state="translated">&lt;code&gt;perror&lt;/code&gt; -将消息写到标准错误输出以及系统日志中（添加到 &lt;code&gt;Sys::Syslog&lt;/code&gt; 0.22中）。</target>
        </trans-unit>
        <trans-unit id="1c7d63b44a36159d8e1d4d4335b3daf634e99588" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pid&lt;/code&gt; - Include PID with each message.</source>
          <target state="translated">&lt;code&gt;pid&lt;/code&gt; -在每条消息中包含PID。</target>
        </trans-unit>
        <trans-unit id="809c4b7facc3eb780b2058815a2dcb35dc65ca46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;plan&lt;/code&gt; methods</source>
          <target state="translated">&lt;code&gt;plan&lt;/code&gt; 方法</target>
        </trans-unit>
        <trans-unit id="fdb276cbb4ba5fc7d3b0e940bad1ed0150bce045" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;port&lt;/code&gt; - sets the TCP or UDP port to connect to. Defaults to the first standard syslog port available on the system.</source>
          <target state="translated">&lt;code&gt;port&lt;/code&gt; -设置要连接的TCP或UDP端口。默认为系统上可用的第一个标准syslog端口。</target>
        </trans-unit>
        <trans-unit id="81ec803c3dc008a3da16774edaa8dc9ffe50879f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;postok&lt;/code&gt; will return</source>
          <target state="translated">&lt;code&gt;postok&lt;/code&gt; 将返回</target>
        </trans-unit>
        <trans-unit id="2d01a0fab20d0ff1f998f75c0cb1da085f4f2052" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pragma&lt;/code&gt; methods</source>
          <target state="translated">&lt;code&gt;pragma&lt;/code&gt; 方法</target>
        </trans-unit>
        <trans-unit id="826665825a05ce6bea816703958f3affe8424f0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;precision()&lt;/code&gt; sets or gets the global or local precision, aka at which digit before or after the dot to round all results. A set global precision also applies to all newly created numbers!</source>
          <target state="translated">&lt;code&gt;precision()&lt;/code&gt; 设置或获取全局或局部精度，也就是在点之前或之后的数字将所有结果取整。设置的全局精度也适用于所有新创建的数字！</target>
        </trans-unit>
        <trans-unit id="7976cc4186db8951c059e488dda4302f51af45d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;precomp&lt;/code&gt;&lt;code&gt;prelen&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;precomp&lt;/code&gt;&lt;code&gt;prelen&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a05fc7c2ec9c9f8d0b33a7a4310351fcbd1f41e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prefix&lt;/code&gt; means: where to install the resulting perl library. Giving correct prefix you may avoid the need to specify &lt;code&gt;PERLLIB_PREFIX&lt;/code&gt; , see &lt;a href=&quot;#PERLLIB_PREFIX&quot;&gt;PERLLIB_PREFIX&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;prefix&lt;/code&gt; 表示：将生成的perl库安装在何处。提供正确的前缀可以避免指定 &lt;code&gt;PERLLIB_PREFIX&lt;/code&gt; 的需要，请参阅&lt;a href=&quot;#PERLLIB_PREFIX&quot;&gt;PERLLIB_PREFIX&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0aaf8a737c0d23218299cfdec2230f7a8f0c080c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pregexec()&lt;/code&gt; is the main entry point for running a regex. It contains support for initialising the regex interpreter's state, running &lt;code&gt;re_intuit_start()&lt;/code&gt; if needed, and running the interpreter on the string from various start positions as needed. When it is necessary to use the regex interpreter &lt;code&gt;pregexec()&lt;/code&gt; calls &lt;code&gt;regtry()&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;pregexec()&lt;/code&gt; 是运行正则表达式的主要入口点。它包含以下方面的支持：初始化正则表达式解释器的状态，如果需要，运行 &lt;code&gt;re_intuit_start()&lt;/code&gt; ，并根据需要在各个起始位置的字符串上运行解释器。必要时使用正则表达式解释器 &lt;code&gt;pregexec()&lt;/code&gt; 调用 &lt;code&gt;regtry()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5650857d710e489383ebef502cde7faf3c94b385" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;preprocess&lt;/code&gt; is performed before &lt;code&gt;normalization&lt;/code&gt; (if defined).</source>
          <target state="translated">&lt;code&gt;preprocess&lt;/code&gt; 在 &lt;code&gt;normalization&lt;/code&gt; （如果定义）之前执行预处理。</target>
        </trans-unit>
        <trans-unit id="27df3d04b2fd880e0c0f8504356cc9a3aee349a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prop_aliases&lt;/code&gt; does know about the Perl extensions to Unicode properties, such as &lt;code&gt;Any&lt;/code&gt; and &lt;code&gt;XPosixAlpha&lt;/code&gt; , and the single form equivalents to Unicode properties such as &lt;code&gt;XDigit&lt;/code&gt; , &lt;code&gt;Greek&lt;/code&gt; , &lt;code&gt;In_Greek&lt;/code&gt; , and &lt;code&gt;Is_Greek&lt;/code&gt; . The final example demonstrates that the &lt;code&gt;&quot;Is_&quot;&lt;/code&gt; prefix is recognized for these extensions; it is needed to resolve ambiguities. For example, &lt;code&gt;prop_aliases('lc')&lt;/code&gt; returns the list &lt;code&gt;(&lt;a href=&quot;../functions/lc&quot;&gt;lc&lt;/a&gt;, Lowercase_Mapping)&lt;/code&gt; , but &lt;code&gt;prop_aliases('islc')&lt;/code&gt; returns &lt;code&gt;(Is_LC, Cased_Letter)&lt;/code&gt; . This is because &lt;code&gt;islc&lt;/code&gt; is a Perl extension which is short for &lt;code&gt;General_Category=Cased Letter&lt;/code&gt; . The lists returned for the Perl extensions will not include the &lt;code&gt;&quot;Is_&quot;&lt;/code&gt; prefix (whether or not the input had it) unless needed to resolve ambiguities, as shown in the &lt;code&gt;&quot;islc&quot;&lt;/code&gt; example, where the returned list had one element containing &lt;code&gt;&quot;Is_&quot;&lt;/code&gt; , and the other without.</source>
          <target state="translated">&lt;code&gt;prop_aliases&lt;/code&gt; 确实了解Perl对Unicode属性的扩展，例如 &lt;code&gt;Any&lt;/code&gt; 和 &lt;code&gt;XPosixAlpha&lt;/code&gt; ，以及与Unicode属性的单形式等效项，例如 &lt;code&gt;XDigit&lt;/code&gt; ， &lt;code&gt;Greek&lt;/code&gt; ， &lt;code&gt;In_Greek&lt;/code&gt; 和 &lt;code&gt;Is_Greek&lt;/code&gt; 。最后的示例说明了这些扩展名可以识别为 &lt;code&gt;&quot;Is_&quot;&lt;/code&gt; 前缀。需要解决歧义。例如， &lt;code&gt;prop_aliases('lc')&lt;/code&gt; 返回列表 &lt;code&gt;(&lt;a href=&quot;../functions/lc&quot;&gt;lc&lt;/a&gt;, Lowercase_Mapping)&lt;/code&gt; &lt;code&gt;prop_aliases('islc')&lt;/code&gt; ），而prop_aliases（'islc'）返回 &lt;code&gt;(Is_LC, Cased_Letter)&lt;/code&gt; 。这是因为 &lt;code&gt;islc&lt;/code&gt; 是Perl扩展名，它是 &lt;code&gt;General_Category=Cased Letter&lt;/code&gt; 的缩写。除非需要解决歧义，否则为Perl扩展返回的列表将不包含 &lt;code&gt;&quot;Is_&quot;&lt;/code&gt; 前缀（无论输入是否具有），如 &lt;code&gt;&quot;islc&quot;&lt;/code&gt; 示例所示，其中返回的列表具有一个包含 &lt;code&gt;&quot;Is_&quot;&lt;/code&gt; 元素，而另一个没有。</target>
        </trans-unit>
        <trans-unit id="84247d6d8b5f4deb4e612831eb63153e1c94e8c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prop_aliases&lt;/code&gt; does not know about any user-defined properties, and will return &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if called with one of those. Likewise for Perl internal properties, with the exception of &quot;Perl_Decimal_Digit&quot; which it does know about (and which is documented below in &lt;a href=&quot;#prop_invmap()&quot;&gt;prop_invmap()&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;prop_aliases&lt;/code&gt; 不知道任何用户定义的属性，如果使用其中之一调用，将返回 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。同样，对于Perl内部属性，除了它确实知道的&amp;ldquo; Perl_Decimal_Digit&amp;rdquo;（以及在&lt;a href=&quot;#prop_invmap()&quot;&gt;prop_invmap（）中记录的内容&lt;/a&gt;）之外。</target>
        </trans-unit>
        <trans-unit id="aaf618289fe95f5c6591702e1bf3bea4922c7495" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prop_invlist&lt;/code&gt; does not know about any user-defined nor Perl internal-only properties, and will return &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if called with one of those.</source>
          <target state="translated">&lt;code&gt;prop_invlist&lt;/code&gt; 不知道任何用户定义的属性或Perl仅供内部使用的属性，并且如果使用其中之一进行调用将返回 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9f5aeeb87bafc369250d5ed39e16fa0a2f0af855" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prop_invlist&lt;/code&gt; returns an inversion list (described below) that defines all the code points for the binary Unicode property (or &quot;property=value&quot; pair) given by the input parameter string:</source>
          <target state="translated">&lt;code&gt;prop_invlist&lt;/code&gt; 返回一个反转列表（如下所述），该列表定义了输入参数字符串给定的二进制Unicode属性（或&amp;ldquo; property = value&amp;rdquo;对）的所有代码点：</target>
        </trans-unit>
        <trans-unit id="fa989c8b4b5a95be8ec4aa8facd791849d814072" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prop_invmap&lt;/code&gt; does not know about any user-defined properties, and will return &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if called with one of those.</source>
          <target state="translated">&lt;code&gt;prop_invmap&lt;/code&gt; 不知道任何用户定义的属性，如果使用其中之一调用，则会返回 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="46b5d2b41a100d477c28d52672a39b5906a388f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prop_invmap&lt;/code&gt; is called with the name of the desired property. The name is loosely matched, meaning that differences in case, white-space, hyphens, and underscores are not meaningful (except for the trailing underscore in the old-form grandfathered-in property &lt;code&gt;&quot;L_&quot;&lt;/code&gt; , which is better written as &lt;code&gt;&quot;LC&quot;&lt;/code&gt; , or even better, &lt;code&gt;&quot;Gc=LC&quot;&lt;/code&gt; ).</source>
          <target state="translated">&lt;code&gt;prop_invmap&lt;/code&gt; 使用所需属性的名称调用prop_invmap。该名称是松散匹配的，这意味着大小写，空格，连字符和下划线的区别没有意义（旧式 &lt;code&gt;&quot;L_&quot;&lt;/code&gt; 属性&amp;ldquo; L_&amp;rdquo;中的尾随下划线除外，最好将其写为 &lt;code&gt;&quot;LC&quot;&lt;/code&gt; ，甚至更好， &lt;code&gt;&quot;Gc=LC&quot;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="3074dd56d5e2ce626fd458ce5170ea74b97c7854" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prop_invmap&lt;/code&gt; is used to get the complete mapping definition for a property, in the form of an inversion map. An inversion map consists of two parallel arrays. One is an ordered list of code points that mark range beginnings, and the other gives the value (or mapping) that all code points in the corresponding range have.</source>
          <target state="translated">&lt;code&gt;prop_invmap&lt;/code&gt; 用于以反向映射的形式获取属性的完整映射定义。反转图由两个并行数组组成。一个是标记范围起点的代码点的有序列表，另一个是对应范围内所有代码点所具有的值（或映射）。</target>
        </trans-unit>
        <trans-unit id="65de781e7dc1c905cffccb28d15af3c75f99eaef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prop_value_aliases&lt;/code&gt; does not know about any user-defined properties, and will return &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if called with one of those.</source>
          <target state="translated">&lt;code&gt;prop_value_aliases&lt;/code&gt; 不了解任何用户定义的属性，如果使用其中之一调用，则将返回 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="13aedd3349055ca063b2a3be5fc3130232f4fe52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prop_values&lt;/code&gt; does not know about any user-defined properties, and will return &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if called with one of those.</source>
          <target state="translated">&lt;code&gt;prop_values&lt;/code&gt; 不知道任何用户定义的属性，如果使用其中之一进行调用将返回 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="48fe37f0dcf25b4c9fbcdaa8fe00af0106f0a081" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rawdeflate&lt;/code&gt; expects at least two parameters, &lt;code&gt;$input_filename_or_reference&lt;/code&gt; and &lt;code&gt;$output_filename_or_reference&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;rawdeflate&lt;/code&gt; 至少需要两个参数 &lt;code&gt;$input_filename_or_reference&lt;/code&gt; 和 &lt;code&gt;$output_filename_or_reference&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0e8c618e9a88333bd82066b9c07a4093fb94d4fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rawinflate&lt;/code&gt; expects at least two parameters, &lt;code&gt;$input_filename_or_reference&lt;/code&gt; and &lt;code&gt;$output_filename_or_reference&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;rawinflate&lt;/code&gt; 至少需要两个参数 &lt;code&gt;$input_filename_or_reference&lt;/code&gt; 和 &lt;code&gt;$output_filename_or_reference&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5b1f960c44856903d77b260a19d1e06dab18de4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;re_intuit_start()&lt;/code&gt; is responsible for handling start points and no-match optimisations as determined by the results of the analysis done by &lt;code&gt;study_chunk()&lt;/code&gt; (and described in &lt;a href=&quot;#Peep-hole-Optimisation-and-Analysis&quot;&gt;Peep-hole Optimisation and Analysis&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;re_intuit_start()&lt;/code&gt; 负责处理起点和不匹配的优化，这由 &lt;code&gt;study_chunk()&lt;/code&gt; 完成的分析结果确定（并在&amp;ldquo; &lt;a href=&quot;#Peep-hole-Optimisation-and-Analysis&quot;&gt;窥孔优化和分析&amp;rdquo;中进行了介绍&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="6225c296acfc5e3b5f6f0c2e8719d05816704086" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;readme&lt;/code&gt; displays the README file of the associated distribution. &lt;code&gt;Look&lt;/code&gt; gets and untars (if not yet done) the distribution file, changes to the appropriate directory and opens a subshell process in that directory. &lt;code&gt;perldoc&lt;/code&gt; displays the module's pod documentation in html or plain text format.</source>
          <target state="translated">&lt;code&gt;readme&lt;/code&gt; 文件显示关联发行版的README文件。 &lt;code&gt;Look&lt;/code&gt; 分发文件的获取和解压缩（如果尚未完成），更改为适当的目录，然后在该目录中打开一个子Shell进程。 &lt;code&gt;perldoc&lt;/code&gt; 以html或纯文本格式显示模块的pod文档。</target>
        </trans-unit>
        <trans-unit id="616eedbf531a925f329a14e071a3cf7f343db86b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rearrange&lt;/code&gt; and &lt;code&gt;hangul_terminator&lt;/code&gt; parameters are neglected. &lt;code&gt;katakana_before_hiragana&lt;/code&gt; and &lt;code&gt;upper_before_lower&lt;/code&gt; don't affect matching and searching, as it doesn't matter whether greater or less.</source>
          <target state="translated">&lt;code&gt;rearrange&lt;/code&gt; 和 &lt;code&gt;hangul_terminator&lt;/code&gt; 参数被忽略。 &lt;code&gt;katakana_before_hiragana&lt;/code&gt; 和 &lt;code&gt;upper_before_lower&lt;/code&gt; 不影响匹配和搜索，因为它并不不论大或小。</target>
        </trans-unit>
        <trans-unit id="5a7e3a62ac5d117a96b72d8dcabc1b9d96e467f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reg()&lt;/code&gt; is the start of the parse process. It is responsible for parsing an arbitrary chunk of pattern up to either the end of the string, or the first closing parenthesis it encounters in the pattern. This means it can be used to parse the top-level regex, or any section inside of a grouping parenthesis. It also handles the &quot;special parens&quot; that perl's regexes have. For instance when parsing &lt;code&gt;/x(?:foo)y/&lt;/code&gt;&lt;code&gt;reg()&lt;/code&gt; will at one point be called to parse from the &quot;?&quot; symbol up to and including the &quot;)&quot;.</source>
          <target state="translated">&lt;code&gt;reg()&lt;/code&gt; 是解析过程的开始。它负责解析模式的任意块，直到字符串的末尾或在模式中遇到的第一个右括号。这意味着它可用于解析顶级正则表达式或分组括号内的任何部分。它还处理perl的正则表达式所具有的&amp;ldquo;特殊内容&amp;rdquo;。例如，当解析 &lt;code&gt;/x(?:foo)y/&lt;/code&gt; &lt;code&gt;reg()&lt;/code&gt; 时,将在某一时刻从&amp;ldquo;？&amp;rdquo;进行解析。直到（包括）&amp;ldquo;）的符号。</target>
        </trans-unit>
        <trans-unit id="0c957111983f253e3076925e4631813db6c2822e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;regbranch()&lt;/code&gt; in turn calls &lt;code&gt;regpiece()&lt;/code&gt; which handles &quot;things&quot; followed by a quantifier. In order to parse the &quot;things&quot;, &lt;code&gt;regatom()&lt;/code&gt; is called. This is the lowest level routine, which parses out constant strings, character classes, and the various special symbols like &lt;code&gt;$&lt;/code&gt; . If &lt;code&gt;regatom()&lt;/code&gt; encounters a &quot;(&quot; character it in turn calls &lt;code&gt;reg()&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;regbranch()&lt;/code&gt; 依次调用 &lt;code&gt;regpiece()&lt;/code&gt; ，后者处理后跟量词的&amp;ldquo;事物&amp;rdquo;。为了解析&amp;ldquo;事物&amp;rdquo;， &lt;code&gt;regatom()&lt;/code&gt; 。这是最低级别的例程，它解析常量字符串，字符类以及各种特殊符号（如 &lt;code&gt;$&lt;/code&gt; )。如果 &lt;code&gt;regatom()&lt;/code&gt; 遇到&amp;ldquo;（&amp;rdquo;字符，则依次调用 &lt;code&gt;reg()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0e0285a40e365527c3360c8043442411516f88d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;regmatch&lt;/code&gt; is the main &quot;recursive loop&quot; of the interpreter. It is basically a giant switch statement that implements a state machine, where the possible states are the regops themselves, plus a number of additional intermediate and failure states. A few of the states are implemented as subroutines but the bulk are inline code.</source>
          <target state="translated">&lt;code&gt;regmatch&lt;/code&gt; 是解释器的主要&amp;ldquo;递归循环&amp;rdquo;。从根本上讲，它是一个巨型的switch语句，用于实现状态机，其中可能的状态是regop本身，再加上许多其他的中间状态和故障状态。一些状态被实现为子例程，但大部分是内联代码。</target>
        </trans-unit>
        <trans-unit id="34320379070d5c0b4b993f583fcab86440065756" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;regnode_1&lt;/code&gt; structures have the same header, followed by a single four-byte argument; &lt;code&gt;regnode_2&lt;/code&gt; structures contain two two-byte arguments instead:</source>
          <target state="translated">&lt;code&gt;regnode_1&lt;/code&gt; 结构具有相同的标头，后跟一个四个字节的参数； &lt;code&gt;regnode_2&lt;/code&gt; 结构改为包含两个两个字节的参数：</target>
        </trans-unit>
        <trans-unit id="e4dba4a9bca93381c17cd610e0197a487dcb2427" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;regnode_string&lt;/code&gt; structures, used for literal strings, follow the header with a one-byte length and then the string data. Strings are padded on the end with zero bytes so that the total length of the node is a multiple of four bytes:</source>
          <target state="translated">&lt;code&gt;regnode_string&lt;/code&gt; 用于文字字符串的regnode_string结构在标头后跟一个字节的长度，然后是字符串数据。最后用零字节填充字符串，以使节点的总长度为四个字节的倍数：</target>
        </trans-unit>
        <trans-unit id="8da61c4024c5fde5d0d5083c10881096ea875b8c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;regtry()&lt;/code&gt; is the entry point into the regex interpreter. It expects as arguments a pointer to a &lt;code&gt;regmatch_info&lt;/code&gt; structure and a pointer to a string. It returns an integer 1 for success and a 0 for failure. It is basically a set-up wrapper around &lt;code&gt;regmatch()&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;regtry()&lt;/code&gt; 是正则表达式解释器的入口。它期望将指向 &lt;code&gt;regmatch_info&lt;/code&gt; 结构的指针和指向字符串的指针作为参数。它返回一个整数1表示成功，返回0表示失败。它基本上是 &lt;code&gt;regmatch()&lt;/code&gt; 的设置包装器。</target>
        </trans-unit>
        <trans-unit id="d191563625501cd0dd042566cf3df9fdb6af17ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;remove_tree&lt;/code&gt; , after having deleted everything and restored the permissions of a directory, was unable to chdir back to the parent. The program halts to avoid a race condition from occurring.</source>
          <target state="translated">&lt;code&gt;remove_tree&lt;/code&gt; 删除了所有内容并恢复了目录的权限后，无法chdir返回到父目录。程序停止运行以避免发生竞争情况。</target>
        </trans-unit>
        <trans-unit id="0e30094b13da141ed1e37ede35a62255c66728a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;remove_tree&lt;/code&gt; , after having deleted everything in a directory, attempted to restore its permissions to the original state but failed. The directory may wind up being left behind.</source>
          <target state="translated">&lt;code&gt;remove_tree&lt;/code&gt; 删除目录中的所有内容后，尝试将其权限恢复到原始状态，但失败。目录可能会被遗忘。</target>
        </trans-unit>
        <trans-unit id="ae7b650aa563617f4ec9fe94e5aa32c051a39081" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;remove_tree&lt;/code&gt; attempted to change the permissions on the current directory to ensure that subsequent unlinkings would not run into problems, but was unable to do so. The permissions remain as they were, and the program will carry on, doing the best it can.</source>
          <target state="translated">&lt;code&gt;remove_tree&lt;/code&gt; 尝试更改当前目录的权限，以确保后续的取消链接不会出现问题，但无法这样做。权限将保持原样，程序将继续尽其所能。</target>
        </trans-unit>
        <trans-unit id="95bc3df474e248a2e04291479bd3fa33e8cd5330" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;remove_tree&lt;/code&gt; attempted to determine the initial directory by calling &lt;code&gt;Cwd::getcwd&lt;/code&gt; , but the call failed for some reason. No attempt will be made to delete anything.</source>
          <target state="translated">&lt;code&gt;remove_tree&lt;/code&gt; 尝试通过调用 &lt;code&gt;Cwd::getcwd&lt;/code&gt; 来确定初始目录，但是由于某种原因，调用失败。不会尝试删除任何内容。</target>
        </trans-unit>
        <trans-unit id="0c6ce072680f1019c3f3f85b4a8ee961eafa33e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;remove_tree&lt;/code&gt; attempted to force the permissions of a file to ensure it could be deleted, but failed to do so. It will, however, still attempt to unlink the file.</source>
          <target state="translated">&lt;code&gt;remove_tree&lt;/code&gt; 尝试强制文件的权限以确保可以删除该文件，但未能这样做。但是，它将仍然尝试取消链接文件。</target>
        </trans-unit>
        <trans-unit id="49be99d75fc1d4ab8517776a2c9c7bb74ae38eb5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;remove_tree&lt;/code&gt; attempted to remove a directory, but failed. This may because some objects that were unable to be removed remain in the directory, or a permissions issue. The directory will be left behind.</source>
          <target state="translated">&lt;code&gt;remove_tree&lt;/code&gt; 尝试删除目录，但失败。这可能是因为某些无法删除的对象保留在目录中，或者出现权限问题。该目录将被留下。</target>
        </trans-unit>
        <trans-unit id="e7616985ed5b969eec07392de1388ed772d59985" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;remove_tree&lt;/code&gt; attempted to set the working directory in order to begin deleting the objects therein, but was unsuccessful. This is usually a permissions issue. The routine will continue to delete other things, but this directory will be left intact.</source>
          <target state="translated">&lt;code&gt;remove_tree&lt;/code&gt; 试图设置工作目录以便开始删除其中的对象，但未成功。这通常是权限问题。该例程将继续删除其他内容，但此目录将保持不变。</target>
        </trans-unit>
        <trans-unit id="721db6f7a6d0b1be4b6b64fdeb2aa4c3fac630d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;remove_tree&lt;/code&gt; attempted to stat the initial directory (after having successfully obtained its name via &lt;code&gt;getcwd&lt;/code&gt; ), however, the call failed for some reason. No attempt will be made to delete anything.</source>
          <target state="translated">&lt;code&gt;remove_tree&lt;/code&gt; 尝试统计初始目录（通过 &lt;code&gt;getcwd&lt;/code&gt; 成功获取其名称后），但是，由于某种原因，调用失败。不会尝试删除任何内容。</target>
        </trans-unit>
        <trans-unit id="9e2cfce733e90f2119a65972900f218ea1224963" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;remove_tree&lt;/code&gt; failed to remove a file. Probably a permissions issue.</source>
          <target state="translated">&lt;code&gt;remove_tree&lt;/code&gt; 无法删除文件。可能是权限问题。</target>
        </trans-unit>
        <trans-unit id="7780e89fe07af9e10d0c6e4dc374ef9437694de0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;remove_tree&lt;/code&gt; recorded the device and inode of a directory, and then moved into it. It then performed a &lt;code&gt;&lt;a href=&quot;../functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; on the current directory and detected that the device and inode were no longer the same. As this is at the heart of the race condition problem, the program will die at this point.</source>
          <target state="translated">&lt;code&gt;remove_tree&lt;/code&gt; 记录设备和目录的inode，然后移入其中。然后，它在当前目录上执行 &lt;code&gt;&lt;a href=&quot;../functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; ，并检测到设备和inode不再相同。由于这是争用条件问题的核心，因此程序将在此时死亡。</target>
        </trans-unit>
        <trans-unit id="7c936a52751bd20d0155292a8ba2362d698dcd12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;remove_tree&lt;/code&gt; tried to read the contents of the directory in order to acquire the names of the directory entries to be unlinked, but was unsuccessful. This is usually a permissions issue. The program will continue, but the files in this directory will remain after the call.</source>
          <target state="translated">&lt;code&gt;remove_tree&lt;/code&gt; 尝试读取目录的内容，以获取要取消链接的目录条目的名称，但未成功。这通常是权限问题。该程序将继续，但是该目录中的文件将在调用后保留。</target>
        </trans-unit>
        <trans-unit id="b0893a833dba2da63d1689754e9baa173690a309" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;remove_tree&lt;/code&gt; was unable to stat the parent directory after have returned from the child. Since there is no way of knowing if we returned to where we think we should be (by comparing device and inode) the only way out is to &lt;code&gt;croak&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;remove_tree&lt;/code&gt; 从子级返回后，remove_tree无法统计父目录。由于无法知道我们是否返回了我们认为应该到达的位置（通过比较设备和inode），因此唯一的出路便是 &lt;code&gt;croak&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fd69d2d3e18f341cf60a46af272519b5c3cf1a79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;require_ok&lt;/code&gt; will guess whether the input is a module name or a filename.</source>
          <target state="translated">&lt;code&gt;require_ok&lt;/code&gt; 将猜测输入的是模块名称还是文件名。</target>
        </trans-unit>
        <trans-unit id="8505e44467f89d3c5f13e3b0f5be5320e0760bab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;requires&lt;/code&gt; can tell you what other modules a particular module requires. This is particularly useful when you're intending to write a module for public release and are listing its prerequisites.</source>
          <target state="translated">&lt;code&gt;requires&lt;/code&gt; 可以告诉您特定模块还需要哪些其他模块。当您打算编写要公开发布的模块并列出其先决条件时，这特别有用。</target>
        </trans-unit>
        <trans-unit id="d7622f99d032d83f40f152407bc369319dc35bc1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;requires&lt;/code&gt; takes but one argument: the name of a module. It will then first check if it can actually load this module, and return undef if it can't. Otherwise, it will return a list of modules and pragmas that would have been loaded on the module's behalf.</source>
          <target state="translated">&lt;code&gt;requires&lt;/code&gt; 需要一个参数：模块的名称。然后它将首先检查它是否可以实际加载该模块，如果不能，则返回undef。否则，它将返回将代表该模块加载的模块和编译指示的列表。</target>
        </trans-unit>
        <trans-unit id="6e6e70e552e6b050c1d411581b7b701935fc2d73" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;resolve_alias()&lt;/code&gt; does not need &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; Encode::Alias&lt;/code&gt; ; it can be imported via &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; Encode qw(resolve_alias)&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;resolve_alias()&lt;/code&gt; 不需要 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; Encode::Alias&lt;/code&gt; ; 可以通过 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; Encode qw(resolve_alias)&lt;/code&gt; 导入。</target>
        </trans-unit>
        <trans-unit id="409864670ba5b3a51d91aefad2f1baba7ffb1971" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;run&lt;/code&gt; takes 4 arguments:</source>
          <target state="translated">&lt;code&gt;run&lt;/code&gt; 需要4个参数：</target>
        </trans-unit>
        <trans-unit id="6e5e870ed1d46dfd7cef6254dbdde44232014c54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;run&lt;/code&gt; will return a simple &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; when called in scalar context. In list context, you will be returned a list of the following items:</source>
          <target state="translated">&lt;code&gt;run&lt;/code&gt; 在标量上下文中运行时，run将返回简单的 &lt;code&gt;true&lt;/code&gt; 或 &lt;code&gt;false&lt;/code&gt; 。在列表上下文中，将返回以下项目的列表：</target>
        </trans-unit>
        <trans-unit id="71adfc24f9d2e25fb176cec5e34573530b5011a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;run&lt;/code&gt; will try to execute your command using the following logic:</source>
          <target state="translated">&lt;code&gt;run&lt;/code&gt; 将尝试使用以下逻辑来执行您的命令：</target>
        </trans-unit>
        <trans-unit id="61bf1af5a461bb65504ae6074130c8cb94c99510" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;run_forked&lt;/code&gt; is designed to survive and successfully terminate almost any long running task, even a fork bomb in case your system has the resources to survive during given timeout.</source>
          <target state="translated">&lt;code&gt;run_forked&lt;/code&gt; 旨在生存并成功终止几乎所有长时间运行的任务，甚至包括分叉炸弹，以防您的系统在给定的超时时间内有生存的资源。</target>
        </trans-unit>
        <trans-unit id="dc5d98ab787a66354808b7b8789a0245cef29116" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;run_forked&lt;/code&gt; is used to execute some program or a coderef, optionally feed it with some input, get its return code and output (both stdout and stderr into separate buffers). In addition, it allows to terminate the program if it takes too long to finish.</source>
          <target state="translated">&lt;code&gt;run_forked&lt;/code&gt; 用于执行某些程序或coderef，可以选择向其提供一些输入，获取其返回代码和输出（将stdout和stderr放入单独的缓冲区中）。另外，如果完成时间太长，它可以终止程序。</target>
        </trans-unit>
        <trans-unit id="420efc1f7e2a39e2d481baf8e0b32a892ee30985" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;run_forked&lt;/code&gt; will return a HASHREF with the following keys:</source>
          <target state="translated">&lt;code&gt;run_forked&lt;/code&gt; 将返回带有以下键的HASHREF：</target>
        </trans-unit>
        <trans-unit id="44468ed2da13e6b0326d22ae098610e252ce2bf0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;same_language_tag&lt;/code&gt; works by just seeing whether &lt;code&gt;encode_language_tag($lang1)&lt;/code&gt; is the same as &lt;code&gt;encode_language_tag($lang2)&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;same_language_tag&lt;/code&gt; 的工作原理是只看到是否 &lt;code&gt;encode_language_tag($lang1)&lt;/code&gt; 相同 &lt;code&gt;encode_language_tag($lang2)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d48e38b365ce4bf6a3953fa6b04bb2ccda99aa7b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;search_invlist&lt;/code&gt; is used to search an inversion list returned by &lt;code&gt;prop_invlist&lt;/code&gt; or &lt;code&gt;prop_invmap&lt;/code&gt; for a particular &lt;a href=&quot;#code-point-argument&quot;&gt;code point argument&lt;/a&gt;. &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned if the code point is not found in the inversion list (this happens only when it is not a legal &lt;a href=&quot;#code-point-argument&quot;&gt;code point argument&lt;/a&gt;, or is less than the list's first element). A warning is raised in the first instance.</source>
          <target state="translated">&lt;code&gt;search_invlist&lt;/code&gt; 用于搜索 &lt;code&gt;prop_invlist&lt;/code&gt; 或 &lt;code&gt;prop_invmap&lt;/code&gt; 返回的反转列表以查找特定的&lt;a href=&quot;#code-point-argument&quot;&gt;代码点参数&lt;/a&gt;。如果在反转列表中未找到代码点，则返回 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; （仅当它不是合法的&lt;a href=&quot;#code-point-argument&quot;&gt;代码点参数&lt;/a&gt;或小于列表的第一个元素时才会发生）。首先会发出警告。</target>
        </trans-unit>
        <trans-unit id="9e70016d81c26851fdc1268a308e2475dcb72857" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;set&lt;/code&gt; accepts either a stat object, as returned by the &lt;code&gt;&lt;a href=&quot;../functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; method, or a list of</source>
          <target state="translated">&lt;code&gt;set&lt;/code&gt; 接受 &lt;code&gt;&lt;a href=&quot;../functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; 方法返回的stat对象或列表</target>
        </trans-unit>
        <trans-unit id="c710408719efbb408db55c8531da370f8ff3d836" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;set&lt;/code&gt; will set the following values of the &lt;code&gt;&lt;a href=&quot;../functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; structure associated with the message queue.</source>
          <target state="translated">&lt;code&gt;set&lt;/code&gt; 将设置与消息队列关联的 &lt;code&gt;&lt;a href=&quot;../functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; 结构的以下值。</target>
        </trans-unit>
        <trans-unit id="ed728d4e7f99edf863813e9844924ed524fa1809" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;set&lt;/code&gt; will set the following values of the &lt;code&gt;&lt;a href=&quot;../functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; structure associated with the semaphore set.</source>
          <target state="translated">&lt;code&gt;set&lt;/code&gt; 将设置与信号量集关联的 &lt;code&gt;&lt;a href=&quot;../functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; 结构的以下值。</target>
        </trans-unit>
        <trans-unit id="c1d152a9c3ab9b89b16e2ee46596cf4f0fc19888" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setlogsock($sock_type, $stream_location)&lt;/code&gt; (added in Perl 5.004_02)</source>
          <target state="translated">&lt;code&gt;setlogsock($sock_type, $stream_location)&lt;/code&gt; （在Perl 5.004_02中添加）</target>
        </trans-unit>
        <trans-unit id="583013ce20407688d7c0e999267ffc67b0502e8c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setlogsock($sock_type, $stream_location, $sock_timeout)&lt;/code&gt; (added in &lt;code&gt;Sys::Syslog&lt;/code&gt; 0.25)</source>
          <target state="translated">&lt;code&gt;setlogsock($sock_type, $stream_location, $sock_timeout)&lt;/code&gt; （已添加到 &lt;code&gt;Sys::Syslog&lt;/code&gt; 0.25中）</target>
        </trans-unit>
        <trans-unit id="87975c40147558f5f2ec4bebf437a9d770df0f75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setlogsock(\%options)&lt;/code&gt; (added in &lt;code&gt;Sys::Syslog&lt;/code&gt; 0.28)</source>
          <target state="translated">&lt;code&gt;setlogsock(\%options)&lt;/code&gt; （已添加到 &lt;code&gt;Sys::Syslog&lt;/code&gt; 0.28中）</target>
        </trans-unit>
        <trans-unit id="0bd0c1e5dd9ea33cf369c7adb90355be92008a07" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;share()&lt;/code&gt; allows you to &lt;code&gt;share($hashref-&amp;gt;{key})&lt;/code&gt; and &lt;code&gt;share($arrayref-&amp;gt;[idx])&lt;/code&gt; without giving any error message. But the &lt;code&gt;$hashref-&amp;gt;{key}&lt;/code&gt; or &lt;code&gt;$arrayref-&amp;gt;[idx]&lt;/code&gt; is &lt;b&gt;not&lt;/b&gt; shared, causing the error &quot;lock can only be used on shared values&quot; to occur when you attempt to &lt;code&gt;&lt;a href=&quot;../functions/lock&quot;&gt;lock($hashref-&amp;gt;{key})&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../functions/lock&quot;&gt;lock($arrayref-&amp;gt;[idx])&lt;/a&gt;&lt;/code&gt; in another thread.</source>
          <target state="translated">&lt;code&gt;share()&lt;/code&gt; 允许您 &lt;code&gt;share($hashref-&amp;gt;{key})&lt;/code&gt; 和 &lt;code&gt;share($arrayref-&amp;gt;[idx])&lt;/code&gt; 而不给出任何错误消息。但 &lt;code&gt;$hashref-&amp;gt;{key}&lt;/code&gt; 或 &lt;code&gt;$arrayref-&amp;gt;[idx]&lt;/code&gt; 是&lt;b&gt;不&lt;/b&gt;共享，从而导致错误&amp;ldquo;锁只能在共享的值用的&amp;rdquo;当您尝试发生 &lt;code&gt;&lt;a href=&quot;../functions/lock&quot;&gt;lock($hashref-&amp;gt;{key})&lt;/a&gt;&lt;/code&gt; 或在另一个线程中 &lt;code&gt;&lt;a href=&quot;../functions/lock&quot;&gt;lock($arrayref-&amp;gt;[idx])&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="81400b21c44e81d3c85b6d25672fdb393b6c9649" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;share&lt;/code&gt; takes a variable and marks it as shared:</source>
          <target state="translated">&lt;code&gt;share&lt;/code&gt; 接受一个变量并将其标记为shared：</target>
        </trans-unit>
        <trans-unit id="7b5f83dec6e18c4adabc00639c9878d8824925ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;share&lt;/code&gt; will return the shared rvalue, but always as a reference.</source>
          <target state="translated">&lt;code&gt;share&lt;/code&gt; 将返回共享的右值，但始终作为参考。</target>
        </trans-unit>
        <trans-unit id="ce12ad32c52f4a291a29b41a4671200a88ca0b1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;shared_clone&lt;/code&gt; takes a reference, and returns a shared version of its argument, performing a deep copy on any non-shared elements. Any shared elements in the argument are used as is (i.e., they are not cloned).</source>
          <target state="translated">&lt;code&gt;shared_clone&lt;/code&gt; 获取一个引用，并返回其参数的共享版本，对任何非共享元素执行深层复制。参数中的任何共享元素均按原样使用（即，它们不会被克隆）。</target>
        </trans-unit>
        <trans-unit id="8658f86d4777991376871c792874bcf7ea900b4a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;special&lt;/code&gt; is a string, normally &lt;code&gt;NULL&lt;/code&gt; or &lt;code&gt;&quot;&quot;&lt;/code&gt; . &lt;code&gt;NULL&lt;/code&gt; means to not use any special mappings; &lt;code&gt;&quot;&quot;&lt;/code&gt; means to use the special mappings. Values other than these two are treated as the name of the hash containing the special mappings, like &lt;code&gt;&quot;utf8::ToSpecLower&quot;&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;special&lt;/code&gt; 是一个字符串，通常为 &lt;code&gt;NULL&lt;/code&gt; 或 &lt;code&gt;&quot;&quot;&lt;/code&gt; 。 &lt;code&gt;NULL&lt;/code&gt; 表示不使用任何特殊映射。 &lt;code&gt;&quot;&quot;&lt;/code&gt; 表示使用特殊映射。除这两个值以外的其他值均视为包含特殊映射的哈希名称，例如 &lt;code&gt;&quot;utf8::ToSpecLower&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="da4c96f14b329fe16bad75b1f046bad021a838c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;splitOnLastStarter()&lt;/code&gt; should be called with a pre-normalized parameter &lt;code&gt;$normalized&lt;/code&gt; , that is in the same form as &lt;code&gt;$form&lt;/code&gt; you want.</source>
          <target state="translated">&lt;code&gt;splitOnLastStarter()&lt;/code&gt; 应该使用预规范化的参数 &lt;code&gt;$normalized&lt;/code&gt; 调用splitOnLastStarter（），该参数的形式与您想要的 &lt;code&gt;$form&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="05ad3d7e63ac0b923f42fda199d17cb36805c894" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;split_command&lt;/code&gt; will return a series of @cmds each processing part of the args. Collectively they will process all the arguments. Each individual line in @cmds will not be longer than the $self-&amp;gt;max_exec_len being careful to take into account macro expansion.</source>
          <target state="translated">&lt;code&gt;split_command&lt;/code&gt; 将在args的每个处理部分返回一系列@cmds。他们将共同处理所有参数。@cmds中的每一行都不会超过$ self-&amp;gt; max_exec_len，请小心考虑宏扩展。</target>
        </trans-unit>
        <trans-unit id="9992eebbce269337eb7319fad7e4bae82773d69d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;stash&lt;/code&gt; is the parent stash/package, if any.</source>
          <target state="translated">&lt;code&gt;stash&lt;/code&gt; 是父存储/程序包（如果有）。</target>
        </trans-unit>
        <trans-unit id="442fca8656f150edfde3e5013ba8d6ad88bb942b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;state &lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt;&lt;/code&gt; vs &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt; &lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;state &lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt;&lt;/code&gt; 与 &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt; &lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9f9a328ccbc35b2b8e9066fa880a1d90d69b6a5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;strict 'subs'&lt;/code&gt; , with Perl 5.6.1, erroneously permitted to use an unquoted compound identifier (e.g. &lt;code&gt;Foo::Bar&lt;/code&gt; ) as a hash key (before &lt;code&gt;=&amp;gt;&lt;/code&gt; or inside curlies), but without forcing it always to a literal string.</source>
          <target state="translated">&lt;code&gt;strict 'subs'&lt;/code&gt; 在Perl 5.6.1中，严格的'subs'被错误地允许使用未加引号的复合标识符（例如 &lt;code&gt;Foo::Bar&lt;/code&gt; ）作为哈希键（在 &lt;code&gt;=&amp;gt;&lt;/code&gt; 之前或在curlies中），但没有将其始终强制为文字字符串。</target>
        </trans-unit>
        <trans-unit id="e7d0dc79bd558fb009a4a67ce8058c54beea585e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;strtod&lt;/code&gt; respects any POSIX &lt;code&gt;setlocale()&lt;/code&gt;&lt;code&gt;LC_TIME&lt;/code&gt; settings, regardless of whether or not it is called from Perl code that is within the scope of &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;strtod&lt;/code&gt; 遵守任何POSIX &lt;code&gt;setlocale()&lt;/code&gt; &lt;code&gt;LC_TIME&lt;/code&gt; 设置，无论是否从 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; 范围内的Perl代码中调用它。</target>
        </trans-unit>
        <trans-unit id="e6c9831d319071b95082e8dc2f29b6eca1f78c11" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;strtol&lt;/code&gt; should respect any POSIX</source>
          <target state="translated">&lt;code&gt;strtol&lt;/code&gt; 应该尊重任何POSIX</target>
        </trans-unit>
        <trans-unit id="07d9fc447173aa1507860d93adda713683bb7035" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;struct&lt;/code&gt; always creates a constructor called &lt;code&gt;new&lt;/code&gt; . That constructor may take a list of initializers for the various elements of the new struct.</source>
          <target state="translated">&lt;code&gt;struct&lt;/code&gt; 总是创建一个名为 &lt;code&gt;new&lt;/code&gt; 的构造函数。该构造函数可以为新结构的各个元素获取一个初始化程序列表。</target>
        </trans-unit>
        <trans-unit id="55f3f10d3365e07935bc666c63b8354aa30d2606" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;strxfrm()&lt;/code&gt; takes a string and maps it into a transformed string for use in char-by-char comparisons against other transformed strings during collation. &quot;Under the hood&quot;, locale-affected Perl comparison operators call &lt;code&gt;strxfrm()&lt;/code&gt; for both operands, then do a char-by-char comparison of the transformed strings. By calling &lt;code&gt;strxfrm()&lt;/code&gt; explicitly and using a non locale-affected comparison, the example attempts to save a couple of transformations. But in fact, it doesn't save anything: Perl magic (see &lt;a href=&quot;perlguts#Magic-Variables&quot;&gt;Magic Variables in perlguts&lt;/a&gt;) creates the transformed version of a string the first time it's needed in a comparison, then keeps this version around in case it's needed again. An example rewritten the easy way with &lt;code&gt;cmp&lt;/code&gt; runs just about as fast. It also copes with null characters embedded in strings; if you call &lt;code&gt;strxfrm()&lt;/code&gt; directly, it treats the first null it finds as a terminator. don't expect the transformed strings it produces to be portable across systems--or even from one revision of your operating system to the next. In short, don't call &lt;code&gt;strxfrm()&lt;/code&gt; directly: let Perl do it for you.</source>
          <target state="translated">&lt;code&gt;strxfrm()&lt;/code&gt; 接受一个字符串，并将其映射到一个转换后的字符串中，以便在整理期间与其他转换后的字符串进行逐个字符比较。受内部影响的Perl比较运算符&amp;ldquo;在 &lt;code&gt;strxfrm()&lt;/code&gt; 针对两个操作数调用strxfrm（），然后对转换后的字符串进行逐字符比较。通过显式调用 &lt;code&gt;strxfrm()&lt;/code&gt; 并使用不受区域设置影响的比较，该示例尝试保存一些转换。但是实际上，它并不能保存任何东西：Perl magic（请参阅&lt;a href=&quot;perlguts#Magic-Variables&quot;&gt;perlguts中的Magic Variables&lt;/a&gt;）在第一次比较时会创建字符串的转换版本，然后保留该版本，以防再次需要时使用。一个示例用 &lt;code&gt;cmp&lt;/code&gt; 重写了简单方法运行速度差不多。它还可以处理字符串中嵌入的空字符。如果直接调用 &lt;code&gt;strxfrm()&lt;/code&gt; ，它将把找到的第一个null视为终止符。不要期望它产生的转换后的字符串可以跨系统移植，甚至不能从操作系统的一个版本移植到下一个版本。简而言之，不要直接调用 &lt;code&gt;strxfrm()&lt;/code&gt; ：让Perl为您完成。</target>
        </trans-unit>
        <trans-unit id="eae013383db419ee7073c6ec936d1ee516677026" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;subbeg&lt;/code&gt;&lt;code&gt;sublen&lt;/code&gt;&lt;code&gt;saved_copy&lt;/code&gt;&lt;code&gt;suboffset&lt;/code&gt;&lt;code&gt;subcoffset&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;subbeg&lt;/code&gt;&lt;code&gt;sublen&lt;/code&gt;&lt;code&gt;saved_copy&lt;/code&gt;&lt;code&gt;suboffset&lt;/code&gt;&lt;code&gt;subcoffset&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5bbbc9ec3becb0729e14cb1a39b889ca48e69af5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;subtest()&lt;/code&gt; runs the &amp;amp;code as its own little test with its own plan and its own result. The main test counts this as a single test using the result of the whole subtest to determine if its ok or not ok.</source>
          <target state="translated">&lt;code&gt;subtest()&lt;/code&gt; 使用自己的计划和结果将＆code作为自己的小测试运行。主测试使用整个子测试的结果将其计为单个测试，以确定其是否正常。</target>
        </trans-unit>
        <trans-unit id="40bfa9180cd766541f95ecd65e0c84670fed2bea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;subtest&lt;/code&gt; also, and optionally, accepts arguments which will be passed to the subtests reference.</source>
          <target state="translated">&lt;code&gt;subtest&lt;/code&gt; 也可以选择接受参数，这些参数将传递给子测试引用。</target>
        </trans-unit>
        <trans-unit id="53945fe0e229f2a3d9e218abb1d550e5ef4cb623" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;success&lt;/code&gt; , &lt;code&gt;warning&lt;/code&gt; , or &lt;code&gt;fatal&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;success&lt;/code&gt; ， &lt;code&gt;warning&lt;/code&gt; 或 &lt;code&gt;fatal&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5edbfcf499afde359ec82161688eeb181e0cc64e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;summary&lt;/code&gt; prints the summary report after all tests are run. The first argument is an aggregate to summarise. An optional second argument may be set to a true value to indicate that the summary is being output as a result of an interrupted test run.</source>
          <target state="translated">&lt;code&gt;summary&lt;/code&gt; 在运行所有测试后打印摘要报告。第一个参数是一个汇总。可以将可选的第二个参数设置为true值，以指示由于测试运行中断而正在输出摘要。</target>
        </trans-unit>
        <trans-unit id="b7d76fa49c169f566fa1c1da718f1e7b2ad5c1be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sv&lt;/code&gt; , &lt;code&gt;av&lt;/code&gt; , &lt;code&gt;hv&lt;/code&gt; , etc. represent variables of their respective types.</source>
          <target state="translated">&lt;code&gt;sv&lt;/code&gt; ， &lt;code&gt;av&lt;/code&gt; ， &lt;code&gt;hv&lt;/code&gt; 等表示它们各自类型的变量。</target>
        </trans-unit>
        <trans-unit id="40e738adb0309ebb6a8435f716aa40a76e770938" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sv&lt;/code&gt; and &lt;code&gt;mg&lt;/code&gt; are the tied thingy and the tie magic.</source>
          <target state="translated">&lt;code&gt;sv&lt;/code&gt; 和 &lt;code&gt;mg&lt;/code&gt; 是捆绑物和领带魔术。</target>
        </trans-unit>
        <trans-unit id="a9c898bb2d89a58d12a4afd52693893972cc7118" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sv_utf8_upgrade&lt;/code&gt; , &lt;code&gt;sv_utf8_upgrade_nomg&lt;/code&gt; , and &lt;code&gt;sv_utf8_upgrade_flags&lt;/code&gt; are implemented in terms of this function.</source>
          <target state="translated">&lt;code&gt;sv_utf8_upgrade&lt;/code&gt; ， &lt;code&gt;sv_utf8_upgrade_nomg&lt;/code&gt; 和 &lt;code&gt;sv_utf8_upgrade_flags&lt;/code&gt; 是根据此功能实现的。</target>
        </trans-unit>
        <trans-unit id="157cb2f67b5c943efab75ae716b270926cd23e22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sv_vsetpvfn&lt;/code&gt; is an analogue of &lt;code&gt;vsprintf&lt;/code&gt; , but it allows you to specify either a pointer to a variable argument list or the address and length of an array of SVs. The last argument points to a boolean; on return, if that boolean is true, then locale-specific information has been used to format the string, and the string's contents are therefore untrustworthy (see &lt;a href=&quot;perlsec&quot;&gt;perlsec&lt;/a&gt;). This pointer may be NULL if that information is not important. Note that this function requires you to specify the length of the format.</source>
          <target state="translated">&lt;code&gt;sv_vsetpvfn&lt;/code&gt; 是 &lt;code&gt;vsprintf&lt;/code&gt; 的类似物，但是它允许您指定指向变量参数列表的指针或SV数组的地址和长度。最后一个参数指向一个布尔值；返回时，如果该布尔值为true，则使用了特定于语言环境的信息来格式化字符串，因此字符串的内容是不可信任的（请参阅&lt;a href=&quot;perlsec&quot;&gt;perlsec&lt;/a&gt;）。如果该信息不重要，则此指针可以为NULL。请注意，此功能要求您指定格式的长度。</target>
        </trans-unit>
        <trans-unit id="6192b1f9a09d1e08c5d741af54f3f7df0fea1f0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;swashp&lt;/code&gt; is a pointer to the swash to use.</source>
          <target state="translated">&lt;code&gt;swashp&lt;/code&gt; 是要使用的swash的指针。</target>
        </trans-unit>
        <trans-unit id="df2da7c9c32ace5dff26064e81dc2ec6cc09498f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sync&lt;/code&gt; synchronizes a file's in-memory state with that on the physical medium. &lt;code&gt;sync&lt;/code&gt; does not operate at the perlio api level, but operates on the file descriptor (similar to sysread, sysseek and systell). This means that any data held at the perlio api level will not be synchronized. To synchronize data that is buffered at the perlio api level you must use the flush method. &lt;code&gt;sync&lt;/code&gt; is not implemented on all platforms. Returns &quot;0 but true&quot; on success, &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; on error, &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; for an invalid handle. See</source>
          <target state="translated">&lt;code&gt;sync&lt;/code&gt; 将文件的内存状态与物理介质上的状态同步。 &lt;code&gt;sync&lt;/code&gt; 不是在perlio api级别上运行，而是在文件描述符上运行（类似于sysread，sysseek和systell）。这意味着保存在perlio api级别的任何数据都不会同步。要同步在perlio api级别上缓冲的数据，您必须使用flush方法。并非在所有平台上都实现 &lt;code&gt;sync&lt;/code&gt; 。返回&amp;ldquo;0，但真正的&amp;rdquo;成功， &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 上的错误， &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 为无效句柄。看到</target>
        </trans-unit>
        <trans-unit id="8dae47b8de1a6666d5c99c3d891e28c5d893f5b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;talk&lt;/code&gt; is a reference to an array that contains alternating questions and answers. Questions are regular expressions and answers are literal strings. The Expect module watches the stream from the execution of the external program (&lt;code&gt;perl Makefile.PL&lt;/code&gt; , &lt;code&gt;perl
Build.PL&lt;/code&gt; , &lt;code&gt;make&lt;/code&gt; , etc.).</source>
          <target state="translated">&lt;code&gt;talk&lt;/code&gt; 是对包含交替的问题和答案的数组的引用。问题是正则表达式，答案是文字字符串。Expect模块从外部程序（ &lt;code&gt;perl Makefile.PL&lt;/code&gt; ， &lt;code&gt;perl Build.PL&lt;/code&gt; ， &lt;code&gt;make&lt;/code&gt; 等）的执行中监视流。</target>
        </trans-unit>
        <trans-unit id="5a08a149b1432446a1f11c65976e031610a41451" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;test&lt;/code&gt; methods</source>
          <target state="translated">&lt;code&gt;test&lt;/code&gt; 方法</target>
        </trans-unit>
        <trans-unit id="0ad3f8e851285dfbe4f6b91f450bb2505e866a09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;test_fail&lt;/code&gt; exists as a convenience function that can be called instead. It takes one argument, the offset from the current line that the line that causes the fail is on.</source>
          <target state="translated">&lt;code&gt;test_fail&lt;/code&gt; 作为方便函数存在，可以调用它。它采用一个参数，即导致失败的行在当前行上的偏移量。</target>
        </trans-unit>
        <trans-unit id="90da6b1102889759293d832aa8ea25d7abcef86c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;threads-&amp;gt;list()&lt;/code&gt; returns a list of thread objects, one for each thread that's currently running and not detached. Handy for a number of things, including cleaning up at the end of your program (from the main Perl thread, of course):</source>
          <target state="translated">&lt;code&gt;threads-&amp;gt;list()&lt;/code&gt; 返回线程对象的列表，每个当前正在运行但未分离的线程一个。在很多事情上都很方便，包括在程序结束时进行清理（当然是从Perl主线程）：</target>
        </trans-unit>
        <trans-unit id="37fe7f59563dbe7257cc9d61b178eb076121ea2f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tid()&lt;/code&gt; is a thread object method that returns the thread ID of the thread the object represents. Thread IDs are integers, with the main thread in a program being 0. Currently Perl assigns a unique TID to every thread ever created in your program, assigning the first thread to be created a TID of 1, and increasing the TID by 1 for each new thread that's created. When used as a class method, &lt;code&gt;threads-&amp;gt;tid()&lt;/code&gt; can be used by a thread to get its own TID.</source>
          <target state="translated">&lt;code&gt;tid()&lt;/code&gt; 是一个线程对象方法，它返回该对象表示的线程的线程ID。线程ID是整数，程序中的主线程为0。当前，Perl为程序中创建的每个线程分配一个唯一的TID，将要创建的第一个线程的TID分配为1，并将每个线程的TID增加1。创建的新线程。当用作类方法时，线程可以使用 &lt;code&gt;threads-&amp;gt;tid()&lt;/code&gt; 获得自己的TID。</target>
        </trans-unit>
        <trans-unit id="81be08d630009f1394c690c301f7f5a7b2339e69" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;timelocal()&lt;/code&gt; and &lt;code&gt;timegm()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;timelocal()&lt;/code&gt; 和 &lt;code&gt;timegm()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7d00ab1ec67e662b179958a94aeba2124bbb15e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;timelocal_nocheck()&lt;/code&gt; and &lt;code&gt;timegm_nocheck()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;timelocal_nocheck()&lt;/code&gt; 和 &lt;code&gt;timegm_nocheck()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fa1f26ad06e5c0601fee78fd543cafca65d09238" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;timeout&lt;/code&gt; - equivalent to &lt;code&gt;$sock_timeout&lt;/code&gt; , sets the socket timeout in seconds. Defaults to 0 on all systems except Mac OS X where it is set to 0.25 sec.</source>
          <target state="translated">&lt;code&gt;timeout&lt;/code&gt; -相当于 &lt;code&gt;$sock_timeout&lt;/code&gt; ，设置以秒为套接字超时。除Mac OS X设置为0.25秒外，所有系统上的默认值均为0。</target>
        </trans-unit>
        <trans-unit id="1223429184be3c4a3e3dbe7bc07b1c04c106dc15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;timeout&lt;/code&gt; denotes a timeout in seconds. Floating-point timeouts are OK. With &lt;code&gt;mode=deterministic&lt;/code&gt; , the timeout denotes the timeout per question; with &lt;code&gt;mode=anyorder&lt;/code&gt; it denotes the timeout per byte received from the stream or questions.</source>
          <target state="translated">&lt;code&gt;timeout&lt;/code&gt; 表示以秒为单位的超时。浮点超时是可以的。使用 &lt;code&gt;mode=deterministic&lt;/code&gt; 时，超时表示每个问题的超时；与 &lt;code&gt;mode=anyorder&lt;/code&gt; 一起,它表示从流或问题接收到的每个字节的超时。</target>
        </trans-unit>
        <trans-unit id="dd0df4bd3a02dfe65598daa77dcdc6e0c0b22412" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;todo()&lt;/code&gt; is about finding the right package to look for &lt;code&gt;$TODO&lt;/code&gt; in. It's pretty good at guessing the right package to look at. It first looks for the caller based on &lt;code&gt;$Level + 1&lt;/code&gt; , since &lt;code&gt;todo()&lt;/code&gt; is usually called inside a test function. As a last resort it will use &lt;code&gt;exported_to()&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;todo()&lt;/code&gt; 关于找到合适的包来寻找 &lt;code&gt;$TODO&lt;/code&gt; 。它很好地猜测了要看的合适包。它首先根据 &lt;code&gt;$Level + 1&lt;/code&gt; 查找调用方，因为 &lt;code&gt;todo()&lt;/code&gt; 通常在测试函数中调用。作为最后的手段，它将使用 &lt;code&gt;exported_to()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="480a9cfa214732ba9a24ba357b41b6de49286344" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;todo_output&lt;/code&gt; is used instead of &lt;code&gt;failure_output()&lt;/code&gt; for the diagnostics of a failing TODO test. These will not be seen by the user.</source>
          <target state="translated">&lt;code&gt;todo_output&lt;/code&gt; 对于失败的TODO测试，使用todo_output代替 &lt;code&gt;failure_output()&lt;/code&gt; 。这些将不会被用户看到。</target>
        </trans-unit>
        <trans-unit id="45f6fa502080435164a069d25ad4e047384a776b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type&lt;/code&gt; - equivalent to &lt;code&gt;$sock_type&lt;/code&gt; , selects the socket type (or &quot;mechanism&quot;). An array reference can be passed to specify several mechanisms to try, in the given order.</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; -等同于 &lt;code&gt;$sock_type&lt;/code&gt; ，选择插座型（或&amp;ldquo;机构&amp;rdquo;）。可以传递数组引用以指定给定顺序的几种尝试机制。</target>
        </trans-unit>
        <trans-unit id="201b469f2e38039b039595a7bfd410577149a7cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;u&lt;/code&gt; , where it is equivalent to 1 (or 45, which here is equivalent).</source>
          <target state="translated">&lt;code&gt;u&lt;/code&gt; ，它等于1（或45，在这里等效）。</target>
        </trans-unit>
        <trans-unit id="74ef1be18f87901f5ccbe85addef0901d51f67cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unknown&lt;/code&gt; methods</source>
          <target state="translated">&lt;code&gt;unknown&lt;/code&gt; 方法</target>
        </trans-unit>
        <trans-unit id="8613fe9e8f4b7f5c053abd048c52ac7b66243a9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unmemoize&lt;/code&gt; accepts a reference to, or the name of a previously memoized function, and undoes whatever it did to provide the memoized version in the first place, including making the name refer to the unmemoized version if appropriate. It returns a reference to the unmemoized version of the function.</source>
          <target state="translated">&lt;code&gt;unmemoize&lt;/code&gt; 接受对先前记忆功能的引用或名称，并且首先撤消其提供记忆版本的操作，包括在适当的情况下使名称引用未记忆版本。它返回对该函数的未存储版本的引用。</target>
        </trans-unit>
        <trans-unit id="d37e0040afc632f6d7e9f0edcbcd7999ecda8585" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unwrapped|made|tested successfully&lt;/code&gt; or something similar. Another situation where CPAN refuses to act is an &lt;code&gt;install&lt;/code&gt; if the corresponding &lt;code&gt;test&lt;/code&gt; was not successful.</source>
          <target state="translated">&lt;code&gt;unwrapped|made|tested successfully&lt;/code&gt; 或类似。如果相应的 &lt;code&gt;test&lt;/code&gt; 不成功，则CPAN拒绝采取行动的另一种情况是 &lt;code&gt;install&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c76e8afb9eb470c6542de95c6fdb923fa4e1dc22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unzip&lt;/code&gt; expects at least two parameters, &lt;code&gt;$input_filename_or_reference&lt;/code&gt; and &lt;code&gt;$output_filename_or_reference&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;unzip&lt;/code&gt; 至少需要两个参数 &lt;code&gt;$input_filename_or_reference&lt;/code&gt; 和 &lt;code&gt;$output_filename_or_reference&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7ba4443e83dc26256681811989a51344cf04a795" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;user&lt;/code&gt; and &lt;code&gt;uid&lt;/code&gt; are aliases of &lt;code&gt;owner&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;user&lt;/code&gt; 和 &lt;code&gt;uid&lt;/code&gt; 是 &lt;code&gt;owner&lt;/code&gt; 的别名。</target>
        </trans-unit>
        <trans-unit id="61f1ed7e3d101e35e8cb1464b06fde105ee5daff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ustrp&lt;/code&gt; is a pointer to the character buffer to put the conversion result to. &lt;code&gt;lenp&lt;/code&gt; is a pointer to the length of the result.</source>
          <target state="translated">&lt;code&gt;ustrp&lt;/code&gt; 是指向转换结果放入的字符缓冲区的指针。 &lt;code&gt;lenp&lt;/code&gt; 是指向结果长度的指针。</target>
        </trans-unit>
        <trans-unit id="8bd04fa099b83f91457c14073be07a2b7a9907c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;utf8::encode&lt;/code&gt; is like &lt;code&gt;utf8::upgrade&lt;/code&gt; , but the UTF8 flag is cleared. See &lt;a href=&quot;perlunicode&quot;&gt;perlunicode&lt;/a&gt; for more on the UTF8 flag and the C API functions &lt;code&gt;sv_utf8_upgrade&lt;/code&gt; , &lt;code&gt;sv_utf8_downgrade&lt;/code&gt; , &lt;code&gt;sv_utf8_encode&lt;/code&gt; , and &lt;code&gt;sv_utf8_decode&lt;/code&gt; , which are wrapped by the Perl functions &lt;code&gt;utf8::upgrade&lt;/code&gt; , &lt;code&gt;utf8::downgrade&lt;/code&gt; , &lt;code&gt;utf8::encode&lt;/code&gt; and &lt;code&gt;utf8::decode&lt;/code&gt; . Also, the functions utf8::is_utf8, utf8::valid, utf8::encode, utf8::decode, utf8::upgrade, and utf8::downgrade are actually internal, and thus always available, without a &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt; utf8&lt;/code&gt; statement.</source>
          <target state="translated">&lt;code&gt;utf8::encode&lt;/code&gt; 类似于 &lt;code&gt;utf8::upgrade&lt;/code&gt; ，但已清除UTF8标志。见&lt;a href=&quot;perlunicode&quot;&gt;perlunicode&lt;/a&gt;更多的UTF8标志和C API函数 &lt;code&gt;sv_utf8_upgrade&lt;/code&gt; ， &lt;code&gt;sv_utf8_downgrade&lt;/code&gt; ， &lt;code&gt;sv_utf8_encode&lt;/code&gt; 和 &lt;code&gt;sv_utf8_decode&lt;/code&gt; ，其由Perl函数包裹 &lt;code&gt;utf8::upgrade&lt;/code&gt; ， &lt;code&gt;utf8::downgrade&lt;/code&gt; ， &lt;code&gt;utf8::encode&lt;/code&gt; 和 &lt;code&gt;utf8::decode&lt;/code&gt; 。同样，函数utf8 :: is_utf8，utf8 :: valid，utf8 :: encode，utf8 :: decode，utf8 :: upgrade和utf8 :: downgrade实际上是内部的，因此始终可用，而 &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt; utf8&lt;/code&gt; 语句。</target>
        </trans-unit>
        <trans-unit id="5c0f365565ea0f61a34ffea2e594515494b47b89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;utf8::unicode_to_native()&lt;/code&gt; and &lt;code&gt;utf8::native_to_unicode()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;utf8::unicode_to_native()&lt;/code&gt; 和 &lt;code&gt;utf8::native_to_unicode()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="322d02f8ccba9a276f3a31a9c308a4604cffd341" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;utf8::unicode_to_native()&lt;/code&gt; is used so that the Perl code is portable to EBCDIC platforms. You can omit it if you're</source>
          <target state="translated">&lt;code&gt;utf8::unicode_to_native()&lt;/code&gt; ，以便Perl代码可移植到EBCDIC平台。您可以忽略它</target>
        </trans-unit>
        <trans-unit id="11ec83e2e9ef7c3f580ec8c19b91c726b07fd6f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;void&lt;/code&gt; . This practice is now deprecated, and may be not supported at some future version. Use the return value &lt;code&gt;SV *&lt;/code&gt; in such cases. (Currently &lt;code&gt;xsubpp&lt;/code&gt; contains some heuristic code which tries to disambiguate between &quot;truly-void&quot; and &quot;old-practice-declared-as-void&quot; functions. Hence your code is at mercy of this heuristics unless you use &lt;code&gt;SV *&lt;/code&gt; as return value.)</source>
          <target state="translated">&lt;code&gt;void&lt;/code&gt; 。现在已弃用此做法，将来的某些版本可能不支持此做法。在这种情况下，请使用返回值 &lt;code&gt;SV *&lt;/code&gt; 。（当前， &lt;code&gt;xsubpp&lt;/code&gt; 包含一些启发式代码，这些代码试图在&amp;ldquo;真正无效&amp;rdquo;和&amp;ldquo;老实践声明为无效&amp;rdquo;函数之间进行歧义。因此，除非您使用 &lt;code&gt;SV *&lt;/code&gt; 作为返回值，否则您的代码将受此启发式的影响。）</target>
        </trans-unit>
        <trans-unit id="e091f4a7021829a7a3620da2c2a10b4eed1eec79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;while&lt;/code&gt; repeats the statement</source>
          <target state="translated">&lt;code&gt;while&lt;/code&gt; 重复该语句时</target>
        </trans-unit>
        <trans-unit id="50ccd06f1dd27edc527ebd4684db2ea14ab08f07" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;wrap()&lt;/code&gt; compresses trailing whitespace into one newline, and &lt;code&gt;fill()&lt;/code&gt; deletes all trailing whitespace.</source>
          <target state="translated">&lt;code&gt;wrap()&lt;/code&gt; 将尾随的空白压缩到一个换行符，而 &lt;code&gt;fill()&lt;/code&gt; 删除所有尾随的空白。</target>
        </trans-unit>
        <trans-unit id="3ec46baadad1061a82a3fe84c7b3bdcb20c88b10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;wrapped&lt;/code&gt;&lt;code&gt;wraplen&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;wrapped&lt;/code&gt;&lt;code&gt;wraplen&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cf9f7426eb12c72cfe1066d3cb1703d1a365da78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;writemain()&lt;/code&gt; takes an argument list of directories containing archive libraries that relate to perl modules and should be linked into a new perl binary. It writes a corresponding</source>
          <target state="translated">&lt;code&gt;writemain()&lt;/code&gt; 接受目录的参数列表，该目录包含与perl模块相关的存档库，应链接到新的perl二进制文件中。它写了一个对应的</target>
        </trans-unit>
        <trans-unit id="1585b59da49174f182f412bb70b4355173d36595" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; and &lt;code&gt;X&lt;/code&gt; accept the &lt;code&gt;!&lt;/code&gt; modifier to act as alignment commands: they jump forward or back to the closest position aligned at a multiple of &lt;code&gt;count&lt;/code&gt; characters. For example, to pack() or unpack() a C structure like</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;X&lt;/code&gt; 接受 &lt;code&gt;!&lt;/code&gt; 修饰符，用作对齐命令：它们向前或向后跳转到以多个 &lt;code&gt;count&lt;/code&gt; 字符对齐的最近位置。例如，要打包（）或解包（）一个C结构，例如</target>
        </trans-unit>
        <trans-unit id="7e4cad6d660d7f4a7c0baea9ffb828f6306a6484" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; means &quot;skip a byte&quot; when &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt;ing; when &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt;ing, it means &quot;introduce a null byte&quot; - that's probably not what you mean if you're dealing with plain text.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 表示 &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; 时&amp;ldquo;跳过一个字节&amp;rdquo; ；当 &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; 荷兰国际集团，它的意思是&amp;ldquo;引进一个空字节&amp;rdquo; -这可能不是你的意思是，如果你正在处理的纯文本。</target>
        </trans-unit>
        <trans-unit id="e1dc3716ea8b4a3c4500628aaf4e0c7696cd52fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xsinit()&lt;/code&gt; uses the xsi_* functions to generate most of its code.</source>
          <target state="translated">&lt;code&gt;xsinit()&lt;/code&gt; 使用xsi_ *函数生成其大部分代码。</target>
        </trans-unit>
        <trans-unit id="128b946d69152a1f151c55bf6ce61c0c49ec7ac8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xsubpp&lt;/code&gt; variables and internal functions</source>
          <target state="translated">&lt;code&gt;xsubpp&lt;/code&gt; 变量和内部函数</target>
        </trans-unit>
        <trans-unit id="c0a014552c003a1e76f63cc934b125b95e0ed6d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yyparse&lt;/code&gt; , the parser, lives in</source>
          <target state="translated">&lt;code&gt;yyparse&lt;/code&gt; 解析器yyparse居住在</target>
        </trans-unit>
        <trans-unit id="86a8316320772d083e312e9c2712b98b8a990576" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;zip&lt;/code&gt; expects at least two parameters, &lt;code&gt;$input_filename_or_reference&lt;/code&gt; and &lt;code&gt;$output_filename_or_reference&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;zip&lt;/code&gt; 需要至少两个参数 &lt;code&gt;$input_filename_or_reference&lt;/code&gt; 和 &lt;code&gt;$output_filename_or_reference&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="aa9997ee07cb992ab27678e726038881ca04b2d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{&lt;/code&gt; starts both hash references and blocks, so &lt;code&gt;map { ...&lt;/code&gt; could be either the start of map BLOCK LIST or map EXPR, LIST. Because Perl doesn't look ahead for the closing &lt;code&gt;}&lt;/code&gt; it has to take a guess at which it's dealing with based on what it finds just after the &lt;code&gt;{&lt;/code&gt;. Usually it gets it right, but if it doesn't it won't realize something is wrong until it gets to the &lt;code&gt;}&lt;/code&gt; and encounters the missing (or unexpected) comma. The syntax error will be reported close to the &lt;code&gt;}&lt;/code&gt;, but you'll need to change something near the &lt;code&gt;{&lt;/code&gt; such as using a unary &lt;code&gt;+&lt;/code&gt; or semicolon to give Perl some help:</source>
          <target state="translated">&lt;code&gt;{&lt;/code&gt; 会同时启动哈希引用和块，因此 &lt;code&gt;map { ...&lt;/code&gt; 可以是map BLOCK LIST或map EXPR，LIST的开始。因为Perl并没有期待结束 &lt;code&gt;}&lt;/code&gt; ,所以必须根据 &lt;code&gt;{&lt;/code&gt; 之后的发现来猜测它要处理的内容。通常情况下，它正确无误，但如果不正确，直到到达 &lt;code&gt;}&lt;/code&gt; 并遇到缺失（或意外）逗号时，它才会意识到出了问题。语法错误将在 &lt;code&gt;}&lt;/code&gt; 附近报告，但您需要在 &lt;code&gt;{&lt;/code&gt; 附近进行更改，例如使用一元 &lt;code&gt;+&lt;/code&gt; 或分号为Perl提供帮助：</target>
        </trans-unit>
        <trans-unit id="0cd290126c35f35fc479ffe56d6b6254d337e17d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;}&lt;/code&gt;, then Perl uses the translations of</source>
          <target state="translated">&lt;code&gt;}&lt;/code&gt; ，然后Perl使用以下语言的翻译</target>
        </trans-unit>
        <trans-unit id="6094cc9ff960a73a386684d75df1b2bb88685e24" translate="yes" xml:space="preserve">
          <source>= -1, something interesting happens when it encounters an invalid character.</source>
          <target state="translated">= -1，遇到无效字符时会发生一些有趣的事情。</target>
        </trans-unit>
        <trans-unit id="95c890966f60daadce1620989a28ff084f43d99b" translate="yes" xml:space="preserve">
          <source>= 1. When</source>
          <target state="translated">= 1.何时</target>
        </trans-unit>
        <trans-unit id="7dd648593099ecae45709a4626d725e1810fbd4b" translate="yes" xml:space="preserve">
          <source>?....?= . The parts that RFC 2047 forbids to encode are left as is and long lines are folded within 76 bytes per line.</source>
          <target state="translated">？....？= RFC 2047禁止编码的部分保持原样，并且长行被折叠为每行76个字节。</target>
        </trans-unit>
        <trans-unit id="d1366a3067fee46eb14eef8f2f316e5f38df3c4f" translate="yes" xml:space="preserve">
          <source>?:\JUST_ADD\view.exe</source>
          <target state="translated">?:\JUST_ADD\view.exe</target>
        </trans-unit>
        <trans-unit id="b79900189f259297171d1e45127a682acacd788e" translate="yes" xml:space="preserve">
          <source>?=),</source>
          <target state="translated">?=),</target>
        </trans-unit>
        <trans-unit id="4975709a996fa9b7e1ddb66e5180bce67c8d47ae" translate="yes" xml:space="preserve">
          <source>@+</source>
          <target state="translated">@+</target>
        </trans-unit>
        <trans-unit id="ce4580a08b328e135e8ec88a9d66dd4a93b8a8e8" translate="yes" xml:space="preserve">
          <source>@-</source>
          <target state="translated">@-</target>
        </trans-unit>
        <trans-unit id="754891735fac8c3066a07c36d22a346ee1c40ce8" translate="yes" xml:space="preserve">
          <source>@ARG</source>
          <target state="translated">@ARG</target>
        </trans-unit>
        <trans-unit id="1fe7c7755c50a190c523c3b1fcb23fe7a59fb1d9" translate="yes" xml:space="preserve">
          <source>@ARGV</source>
          <target state="translated">@ARGV</target>
        </trans-unit>
        <trans-unit id="f9dae5e61c647f83e0f197da0f3c40b160b62b37" translate="yes" xml:space="preserve">
          <source>@CARP_NOT</source>
          <target state="translated">@CARP_NOT</target>
        </trans-unit>
        <trans-unit id="d2679734ab2cc1a1383b43572c627a2a4a786046" translate="yes" xml:space="preserve">
          <source>@EXPORT</source>
          <target state="translated">@EXPORT</target>
        </trans-unit>
        <trans-unit id="935219ed0644ee8e535456d71cde263f06c07d6f" translate="yes" xml:space="preserve">
          <source>@F</source>
          <target state="translated">@F</target>
        </trans-unit>
        <trans-unit id="39bf41a4cd083c6ae641220a6f38628a92b8c395" translate="yes" xml:space="preserve">
          <source>@INC</source>
          <target state="translated">@INC</target>
        </trans-unit>
        <trans-unit id="86e1dd598d092bf5b80c27bd2b6ae9c16e5e0c7d" translate="yes" xml:space="preserve">
          <source>@LAST_MATCH_END</source>
          <target state="translated">@LAST_MATCH_END</target>
        </trans-unit>
        <trans-unit id="f583b3cef6a6f01f053f249151fd446d413e0372" translate="yes" xml:space="preserve">
          <source>@LAST_MATCH_START</source>
          <target state="translated">@LAST_MATCH_START</target>
        </trans-unit>
        <trans-unit id="dee27aa9c706f064e962a3f3512b8abd08138be2" translate="yes" xml:space="preserve">
          <source>@_</source>
          <target state="translated">@_</target>
        </trans-unit>
        <trans-unit id="42d68da353f4ee79e3d0efb49913bbbc2bfb30e2" translate="yes" xml:space="preserve">
          <source>@a is an array with three elements, and each one is a reference to another array.</source>
          <target state="translated">@a是一个包含三个元素的数组，每个元素都是对另一个数组的引用。</target>
        </trans-unit>
        <trans-unit id="0b43abc97824c06b15af6b73f75f3917997f9c60" translate="yes" xml:space="preserve">
          <source>@dl_library_path is initialised to hold the list of 'normal' directories (</source>
          <target state="translated">@dl_library_path初始化为包含&amp;ldquo;普通&amp;rdquo;目录的列表（</target>
        </trans-unit>
        <trans-unit id="9f0e33f7f6545d4dff610e53e6f0b71945335437" translate="yes" xml:space="preserve">
          <source>@dl_library_path should also be initialised with any other directories that can be determined from the environment at runtime (such as LD_LIBRARY_PATH for SunOS).</source>
          <target state="translated">@dl_library_path也应该使用在运行时可以从环境中确定的任何其他目录（例如，SunOS的LD_LIBRARY_PATH）进行初始化。</target>
        </trans-unit>
        <trans-unit id="c50e636a2b33daee08498b2ec237c8cf65cae7cb" translate="yes" xml:space="preserve">
          <source>@list = requires( MODULE );</source>
          <target state="translated">@list = require（MODULE）;</target>
        </trans-unit>
        <trans-unit id="2b5fee7ea42b8b01c834815b53c906e15aa53eaf" translate="yes" xml:space="preserve">
          <source>@os_flavor is the style of operating system this is, usually corresponding to the MM_*.pm file we're using.</source>
          <target state="translated">@os_flavor是这种操作系统的样式，通常对应于我们正在使用的MM _ *。pm文件。</target>
        </trans-unit>
        <trans-unit id="bce99a33d22d4c2dffd2eeac8a8e4c5d9894b283" translate="yes" xml:space="preserve">
          <source>@suffixes work as in &lt;code&gt;fileparse()&lt;/code&gt; except all regex metacharacters are quoted.</source>
          <target state="translated">@后缀的工作方式与 &lt;code&gt;fileparse()&lt;/code&gt; 相同，只是所有正则表达式元字符都被引用了。</target>
        </trans-unit>
        <trans-unit id="317b12ea1477d9e9b136839fa7ac896988adc6ac" translate="yes" xml:space="preserve">
          <source>@test_files</source>
          <target state="translated">@test_files</target>
        </trans-unit>
        <trans-unit id="2563b52b2c674ef6e847cc65202d47f3d3604f00" translate="yes" xml:space="preserve">
          <source>@test_libs are run in alphabetical order.</source>
          <target state="translated">@test_libs按字母顺序运行。</target>
        </trans-unit>
        <trans-unit id="6dcd4ce23d88e2ee9568ba546c007c63d9131c1b" translate="yes" xml:space="preserve">
          <source>A</source>
          <target state="translated">A</target>
        </trans-unit>
        <trans-unit id="313a7fe99a568a50c330c2db6c46b2f1743f3e95" translate="yes" xml:space="preserve">
          <source>A &quot;balanced-bracket-delimited substring&quot; is a substring bounded by matched brackets, such that any other (left or right) delimiter bracket</source>
          <target state="translated">一个 &quot;平衡括号分隔的子串 &quot;是一个由匹配的括号限定的子串,这样任何其他(左或右)定界符括号</target>
        </trans-unit>
        <trans-unit id="f251b2b1824e87d1320c2c41c33a42711d82807a" translate="yes" xml:space="preserve">
          <source>A &quot;delimiter bracket&quot; is a bracket in list of delimiters passed as &lt;code&gt;extract_bracketed&lt;/code&gt; 's second argument. Delimiter brackets are specified by giving either the left or right (or both!) versions of the required bracket(s). Note that the order in which two or more delimiter brackets are specified is not significant.</source>
          <target state="translated">&amp;ldquo;定界符括号&amp;rdquo;是作为 &lt;code&gt;extract_bracketed&lt;/code&gt; 的第二个参数传递的定界符列表中的括号。通过给出所需括号的左或右（或两者！）版本来指定定界括号。请注意，指定两个或多个定界括号的顺序并不重要。</target>
        </trans-unit>
        <trans-unit id="8b2d100a2729032ea387e666018839a1da0e8c93" translate="yes" xml:space="preserve">
          <source>A &quot;layer&quot; is composed of two parts:</source>
          <target state="translated">一个 &quot;层 &quot;由两部分组成。</target>
        </trans-unit>
        <trans-unit id="756b059631bfde6d82f3c717b79716728efe722a" translate="yes" xml:space="preserve">
          <source>A &quot;macro&quot; 1 signals that the constant is always defined, so the &lt;code&gt;#if&lt;/code&gt; /&lt;code&gt;#endif&lt;/code&gt; test is omitted.</source>
          <target state="translated">&amp;ldquo;宏&amp;rdquo; 1表示始终定义该常数，因此省略了 &lt;code&gt;#if&lt;/code&gt; / &lt;code&gt;#endif&lt;/code&gt; 测试。</target>
        </trans-unit>
        <trans-unit id="1cb023ba582a7a015faea89ec15dc62641da6a16" translate="yes" xml:space="preserve">
          <source>A &quot;picture&quot; line giving the format for one output line.</source>
          <target state="translated">一个 &quot;图片 &quot;行,给出一个输出行的格式。</target>
        </trans-unit>
        <trans-unit id="4bc2e7f2e34238799324926fcafe5bd02066c9e0" translate="yes" xml:space="preserve">
          <source>A &amp;ldquo;constructor&amp;rdquo; for a &lt;b&gt;referent&lt;/b&gt; that isn&amp;rsquo;t really an &lt;b&gt;object&lt;/b&gt;, like an anonymous array or a hash (or a sonata, for that matter). For example, a pair of braces acts as a composer for a hash, and a pair of brackets acts as a composer for an array. See the section &amp;ldquo;Creating References&amp;rdquo; in Camel chapter 8, &amp;ldquo;References&amp;rdquo;.</source>
          <target state="translated">&lt;b&gt;引用对象的&lt;/b&gt; &amp;ldquo;构造函数&amp;rdquo; 实际上不是&lt;b&gt;对象&lt;/b&gt;，例如匿名数组或哈希（就此而言，奏鸣曲）。例如，一对大括号充当哈希的编写器，而一对括号充当数组的编写器。请参阅骆驼第8章&amp;ldquo;参考&amp;rdquo;中的&amp;ldquo;创建参考&amp;rdquo;部分。</target>
        </trans-unit>
        <trans-unit id="5775eb71cdc3ede48fee03da70ab6b5ce985e619" translate="yes" xml:space="preserve">
          <source>A &amp;ldquo;page&amp;rdquo; from the manuals, typically accessed via the</source>
          <target state="translated">手册中的&amp;ldquo;页面&amp;rdquo;，通常可通过</target>
        </trans-unit>
        <trans-unit id="6a5409d36bd9ef539cfe14ba7c067e7ccfc9c3b3" translate="yes" xml:space="preserve">
          <source>A &amp;ldquo;pointer value&amp;rdquo;, which is Perl Internals Talk for a &lt;code&gt;char*&lt;/code&gt; .</source>
          <target state="translated">一个&amp;ldquo;指针值&amp;rdquo;，它是Perl Internals Talk中的一个 &lt;code&gt;char*&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="34a072b3ed907a60cfcde96be105ecbc6bbfc2bd" translate="yes" xml:space="preserve">
          <source>A &amp;ldquo;version&amp;rdquo; or &amp;ldquo;vector&amp;rdquo; &lt;b&gt;string&lt;/b&gt; specified with a &lt;code&gt;v&lt;/code&gt; followed by a series of decimal integers in dot notation, for instance, &lt;code&gt;v1.20.300.4000&lt;/code&gt; . Each number turns into a &lt;b&gt;character&lt;/b&gt; with the specified ordinal value. (The &lt;code&gt;v&lt;/code&gt; is optional when there are at least three integers.)</source>
          <target state="translated">用 &lt;code&gt;v&lt;/code&gt; 指定的&amp;ldquo;版本&amp;rdquo;或&amp;ldquo;向量&amp;rdquo; &lt;b&gt;字符串&lt;/b&gt;，后跟一系列点表示形式的十进制整数，例如 &lt;code&gt;v1.20.300.4000&lt;/code&gt; 。每个数字都会变成具有指定序数值的&lt;b&gt;字符&lt;/b&gt;。（当至少有三个整数时， &lt;code&gt;v&lt;/code&gt; 是可选的。）&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="9b175ccd55b8cb24fce37d2a53ada08e5f179945" translate="yes" xml:space="preserve">
          <source>A &amp;ldquo;wildcard&amp;rdquo; match on &lt;b&gt;filenames&lt;/b&gt;. See the &lt;code&gt;&lt;a href=&quot;functions/glob&quot;&gt;glob&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">&lt;b&gt;文件名&lt;/b&gt;上的&amp;ldquo;通配符&amp;rdquo;匹配。请参阅 &lt;code&gt;&lt;a href=&quot;functions/glob&quot;&gt;glob&lt;/a&gt;&lt;/code&gt; 函数。</target>
        </trans-unit>
        <trans-unit id="084adee5c9094841f2603af0ff0ac058d61aaa79" translate="yes" xml:space="preserve">
          <source>A 'my $pack_lexical' statement makes the variable $pack_lexical local _only_ to the file up to the &lt;code&gt;__DATA__&lt;/code&gt; token. Subroutines declared elsewhere _cannot_ see these types of variables, just as if you declared subroutines in the package but in another file, they cannot see these variables.</source>
          <target state="translated">&amp;ldquo; my $ pack_lexical&amp;rdquo;语句使变量$ pack_lexical local _only_成为文件，直到 &lt;code&gt;__DATA__&lt;/code&gt; 令牌为止。_cannot_在其他地方声明的子例程将看到这些类型的变量，就像您在包中但在另一个文件中声明了子例程一样，它们看不到这些变量。</target>
        </trans-unit>
        <trans-unit id="ededfcca2c8bd4e7eb6351a42ed32e72537533cd" translate="yes" xml:space="preserve">
          <source>A (file)glob evaluates its (embedded) argument only when it is starting a new list. All values must be read before it will start over. In list context, this isn't important because you automatically get them all anyway. However, in scalar context the operator returns the next value each time it's called, or &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; when the list has run out. As with filehandle reads, an automatic &lt;code&gt;&lt;a href=&quot;functions/defined&quot;&gt;defined&lt;/a&gt;&lt;/code&gt; is generated when the glob occurs in the test part of a &lt;code&gt;while&lt;/code&gt; , because legal glob returns (for example, a file called</source>
          <target state="translated">（file）glob仅在开始新列表时才评估其（嵌入式）参数。必须重新读取所有值，然后才能重新开始。在列表上下文中，这并不重要，因为无论如何您都会自动获取它们。但是，在标量上下文中，运算符每次调用时都会返回下一个值，或者在列表用完时返回 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。与文件句柄读取，自动 &lt;code&gt;&lt;a href=&quot;functions/defined&quot;&gt;defined&lt;/a&gt;&lt;/code&gt; 时，圆顶封装在一个的测试部分时，将生成 &lt;code&gt;while&lt;/code&gt; ，因为合法的glob返回（例如，称为文件</target>
        </trans-unit>
        <trans-unit id="cc6e3b905b08fc1fe3e1757559d1f8c510fb5e73" translate="yes" xml:space="preserve">
          <source>A (very) lightweight introduction in the use of the perl debugger, and a pointer to existing, deeper sources of information on the subject of debugging perl programs.</source>
          <target state="translated">一个(非常)轻量级的perl调试器使用介绍,以及一个指向现有的、更深入的关于perl程序调试主题的信息源的指针。</target>
        </trans-unit>
        <trans-unit id="61ac1d8d5b46f4c8322e0f808eeb9e2cdf4d41ab" translate="yes" xml:space="preserve">
          <source>A 64-bit native application will run much more efficiently on Itanium hardware.</source>
          <target state="translated">64位原生应用在Itanium硬件上的运行效率会更高。</target>
        </trans-unit>
        <trans-unit id="4f93189e72cc0f75abc0b3834c32b379484b25ed" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;DB_File&lt;/b&gt; wrapper that has the ability to lock and unlock the database while it is being used. Avoids the tie-before-flock problem by simply re-tie-ing the database when you get or drop a lock. Because of the flexibility in dropping and re-acquiring the lock in the middle of a session, this can be massaged into a system that will work with long updates and/or reads if the application follows the hints in the POD documentation.</source>
          <target state="translated">一个&lt;b&gt;DB_File&lt;/b&gt;包装器，具有在使用时锁定和解锁数据库的功能。通过在获得或释放锁时简单地重新绑定数据库，避免了先行绑定问题。由于在会话中间可以灵活地删除和重新获取锁，因此，如果应用程序遵循POD文档中的提示，则可以将其压缩到一个可以进行长时间更新和/或读取的系统中。</target>
        </trans-unit>
        <trans-unit id="1b51e848321e977ce5d13c2818c175d0f41effb3" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;DB_File&lt;/b&gt; wrapper which creates copies of the database file for read access, so that you have a kind of a multiversioning concurrent read system. However, updates are still serial. Use for databases where reads may be lengthy and consistency problems may occur.</source>
          <target state="translated">一个&lt;b&gt;DB_File&lt;/b&gt;包装器，用于创建数据库文件的副本以进行读取访问，因此您具有一种多版本并发读取系统。但是，更新仍然是串行的。用于读取可能很长且可能会出现一致性问题的数据库。</target>
        </trans-unit>
        <trans-unit id="a028dc9e0b2f7388284cb78c959a40269b50fa27" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;Pod parser&lt;/b&gt; is a module meant for parsing Pod (regardless of whether this involves calling callbacks or building a parse tree or directly formatting it). A &lt;b&gt;Pod formatter&lt;/b&gt; (or &lt;b&gt;Pod translator&lt;/b&gt;) is a module or program that converts Pod to some other format (HTML, plaintext, TeX, PostScript, RTF). A &lt;b&gt;Pod processor&lt;/b&gt; might be a formatter or translator, or might be a program that does something else with the Pod (like counting words, scanning for index points, etc.).</source>
          <target state="translated">一个&lt;b&gt;吊舱解析器&lt;/b&gt;是指用于解析波德模块（无论这是否涉及调用回调或构建解析树或者直接格式化）。甲&lt;b&gt;波德格式化器&lt;/b&gt;（或&lt;b&gt;波德译者&lt;/b&gt;）是一个模块或程序，其将波德某些其他格式（HTML，明文，TeX的，在PostScript，RTF）。一个&lt;b&gt;主机处理器&lt;/b&gt;可以是格式化或翻译，或者可能是一个程序，做别的东西与波德（如计数的话，扫描指数点等）。</target>
        </trans-unit>
        <trans-unit id="75e0b45072c8738547ff8a165f7f145bc64c09c0" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;bit shift&lt;/b&gt; that divides a number by some power of 2.</source>
          <target state="translated">甲&lt;b&gt;比特移位&lt;/b&gt;，通过2一些力量把一个号码。</target>
        </trans-unit>
        <trans-unit id="12a4a3ed2cee1e69194024985900709da0279c32" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;bit shift&lt;/b&gt; that multiplies the number by some power of 2.</source>
          <target state="translated">甲&lt;b&gt;位移位&lt;/b&gt;即乘以2的一些力量数量。</target>
        </trans-unit>
        <trans-unit id="835a63b1a5a99de9e5e4d92a77a7c97441fd9cb5" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;blank line&lt;/b&gt; is a line consisting entirely of zero or more spaces (ASCII 32) or tabs (ASCII 9), and terminated by a newline or end-of-file. A &lt;b&gt;non-blank line&lt;/b&gt; is a line containing one or more characters other than space or tab (and terminated by a newline or end-of-file).</source>
          <target state="translated">甲&lt;b&gt;空白行&lt;/b&gt;是全部由零个或多个空格（ASCII 32）或突出部（ASCII 9）的线，和一个换行或文件结束终止的。阿&lt;b&gt;非空白行&lt;/b&gt;是含有除空格或制表其他（和一个换行或结束文件终止）一个或多个字符的线。</target>
        </trans-unit>
        <trans-unit id="3728bf609a9f402c616e07291d2f146bcd65679f" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;character class&lt;/b&gt; allows a set of possible characters, rather than just a single character, to match at a particular point in a regex. Character classes are denoted by brackets &lt;code&gt;[...]&lt;/code&gt; , with the set of characters to be possibly matched inside. Here are some examples:</source>
          <target state="translated">一个&lt;b&gt;字符类&lt;/b&gt;允许一组可能的字符，而不仅仅是单个字符，匹配在正则表达式中的特定点。字符类由括号表示 &lt;code&gt;[...]&lt;/code&gt; ，与所述的字符集被可能匹配的内部。这里有些例子：</target>
        </trans-unit>
        <trans-unit id="669c2da4b19c631926975e69d3d84a786a63080d" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;character&lt;/b&gt; or &lt;b&gt;string&lt;/b&gt; that keeps two surrounding strings from being confused with each other. The &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; function works on separators. Not to be confused with &lt;b&gt;delimiters&lt;/b&gt; or &lt;b&gt;terminators&lt;/b&gt;. The &amp;ldquo;or&amp;rdquo; in the previous sentence separated the two alternatives.</source>
          <target state="translated">防止两个周围的字符串相互混淆的&lt;b&gt;字符&lt;/b&gt;或&lt;b&gt;字符串&lt;/b&gt;。该 &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; 功能适用于分离器。不要与&lt;b&gt;分隔符&lt;/b&gt;或&lt;b&gt;终止&lt;/b&gt;&lt;b&gt;符&lt;/b&gt;混淆。上一句话中的&amp;ldquo;或&amp;rdquo;将这两种选择分开。</target>
        </trans-unit>
        <trans-unit id="ccc52a9bce5d37da72e4313c9442e3059934389e" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;character&lt;/b&gt; or &lt;b&gt;string&lt;/b&gt; that marks the end of another string. The &lt;code&gt;$/&lt;/code&gt; variable contains the string that terminates a &lt;code&gt;&lt;a href=&quot;functions/readline&quot;&gt;readline&lt;/a&gt;&lt;/code&gt; operation, which &lt;code&gt;&lt;a href=&quot;functions/chomp&quot;&gt;chomp&lt;/a&gt;&lt;/code&gt; deletes from the end. Not to be confused with &lt;b&gt;delimiters&lt;/b&gt; or &lt;b&gt;separators&lt;/b&gt;. The period at the end of this sentence is a terminator.</source>
          <target state="translated">甲&lt;b&gt;字符&lt;/b&gt;或&lt;b&gt;字符串&lt;/b&gt;的是马克另一个字符串的结尾。的 &lt;code&gt;$/&lt;/code&gt; 变量包含终止字符串 &lt;code&gt;&lt;a href=&quot;functions/readline&quot;&gt;readline&lt;/a&gt;&lt;/code&gt; 操作，这 &lt;code&gt;&lt;a href=&quot;functions/chomp&quot;&gt;chomp&lt;/a&gt;&lt;/code&gt; 从末端删除。不要与&lt;b&gt;分隔符&lt;/b&gt;或&lt;b&gt;分隔&lt;/b&gt;&lt;b&gt;符&lt;/b&gt;混淆。该句末的句号是终止符。</target>
        </trans-unit>
        <trans-unit id="c2ccb7e4dc3cd3bdbacbf8b76f79619db792d436" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;character&lt;/b&gt; or &lt;b&gt;string&lt;/b&gt; that sets bounds to an arbitrarily sized textual object, not to be confused with a &lt;b&gt;separator&lt;/b&gt; or &lt;b&gt;terminator&lt;/b&gt;. &amp;ldquo;To delimit&amp;rdquo; really just means &amp;ldquo;to surround&amp;rdquo; or &amp;ldquo;to enclose&amp;rdquo; (like these parentheses are doing).</source>
          <target state="translated">设置边界到任意大小的文本对象的&lt;b&gt;字符&lt;/b&gt;或&lt;b&gt;字符串&lt;/b&gt;，不要与&lt;b&gt;分隔符&lt;/b&gt;或&lt;b&gt;终止&lt;/b&gt;&lt;b&gt;符&lt;/b&gt;混淆。&amp;ldquo;定界&amp;rdquo;实际上只是意味着&amp;ldquo;包围&amp;rdquo;或&amp;ldquo;包围&amp;rdquo;（就像这些括号一样）。</target>
        </trans-unit>
        <trans-unit id="ea08291e93224eb22a8479c3ec9c014b05bce7f2" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;character&lt;/b&gt; that is</source>
          <target state="translated">一个&lt;b&gt;字符&lt;/b&gt;是</target>
        </trans-unit>
        <trans-unit id="5cba1f2a968bf42f9b6478a5e49fa1b60b1a7141" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;character&lt;/b&gt; that moves your cursor but doesn&amp;rsquo;t otherwise put anything on your screen. Typically refers to any of: space, tab, line feed, carriage return, or form feed. In Unicode, matches many other characters that Unicode considers whitespace, including the ɴ-ʙʀ .</source>
          <target state="translated">一个可以移动光标但不会在屏幕上放置任何内容的&lt;b&gt;字符&lt;/b&gt;。通常指以下任何一种：空格，制表符，换行符，回车符或换页符。在Unicode中，匹配Unicode认为空格的许多其他字符，包括ɴ-ʙʀ。</target>
        </trans-unit>
        <trans-unit id="2aa2a649bec9b1fd1ac1866bab10ba2afe8f796b" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;class&lt;/b&gt; defines the behavior of a category of objects. A class is a name for a category (like &quot;File&quot;), and a class also defines the behavior of objects in that category.</source>
          <target state="translated">一个&lt;b&gt;类&lt;/b&gt;定义对象的类别的行为。类是类别（如&amp;ldquo;文件&amp;rdquo;）的名称，并且类别还定义该类别中对象的行为。</target>
        </trans-unit>
        <trans-unit id="1a75079cb5fa51afe9c7f949ddf0f69d6f477b63" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;class&lt;/b&gt; that defines some of its &lt;b&gt;methods&lt;/b&gt; in terms of a more generic class, called a &lt;b&gt;base class&lt;/b&gt;. Note that classes aren&amp;rsquo;t classified exclusively into base classes or derived classes: a class can function as both a derived class and a base class simultaneously, which is kind of classy.</source>
          <target state="translated">一个&lt;b&gt;类&lt;/b&gt;定义了它的一些&lt;b&gt;方法&lt;/b&gt;更泛型类的术语，叫做&lt;b&gt;基类&lt;/b&gt;。请注意，类并非仅分类为基类或派生类：类可以同时充当派生类和基类，这是一种类。</target>
        </trans-unit>
        <trans-unit id="99d0667db3792046333bf54560031cc7b2ecf43e" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;command&lt;/b&gt; to the computer about what to do next, like a step in a recipe: &amp;ldquo;Add marmalade to batter and mix until mixed.&amp;rdquo; A statement is distinguished from a &lt;b&gt;declaration&lt;/b&gt;, which doesn&amp;rsquo;t tell the computer to do anything, but just to learn something.</source>
          <target state="translated">一个&lt;b&gt;命令&lt;/b&gt;约下一步该怎么做，例如食谱中的一个步骤的计算机：&amp;ldquo;添加果酱面糊拌匀，直到混合。&amp;rdquo; 声明和声明是有区别的，&lt;b&gt;声明&lt;/b&gt;不告诉计算机要做任何事情，而只是学习一些东西。</target>
        </trans-unit>
        <trans-unit id="0c8b51997be5611d837a8ab6c5cb1982a471c7f6" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;command&lt;/b&gt;-line &lt;b&gt;interpreter&lt;/b&gt;. The program that interactively gives you a prompt, accepts one or more &lt;b&gt;lines&lt;/b&gt; of input, and executes the programs you mentioned, feeding each of them their proper &lt;b&gt;arguments&lt;/b&gt; and input data. Shells can also execute scripts containing such commands. Under Unix, typical shells include the Bourne shell (</source>
          <target state="translated">甲&lt;b&gt;命令&lt;/b&gt; -line &lt;b&gt;解释&lt;/b&gt;。该程序以交互方式为您提供提示，接受一行或多&lt;b&gt;行&lt;/b&gt;输入，并执行您提到的程序，并为它们中的每一个提供适当的&lt;b&gt;参数&lt;/b&gt;和输入数据。Shell也可以执行包含此类命令的脚本。在Unix下，典型的shell包括Bourne shell（</target>
        </trans-unit>
        <trans-unit id="52e02137a3f5dfcbaf26aaed0daa92b24d1f6a82" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;conditional&lt;/b&gt; or &lt;b&gt;loop&lt;/b&gt; that you put after the &lt;b&gt;statement&lt;/b&gt; instead of before, if you know what we mean.</source>
          <target state="translated">一个&lt;b&gt;条件&lt;/b&gt;或&lt;b&gt;循环&lt;/b&gt;，你的后摆&lt;b&gt;声明&lt;/b&gt;，而不是之前，如果你知道我们的意思。</target>
        </trans-unit>
        <trans-unit id="8b7c0791290fe9b8909bf7acee3f40cc62fd3b4d" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;constructor&lt;/b&gt; creates a new object. In Perl, a class's constructor is just another method, unlike some other languages, which provide syntax for constructors. Most Perl classes use &lt;code&gt;new&lt;/code&gt; as the name for their constructor:</source>
          <target state="translated">一个&lt;b&gt;构造函数&lt;/b&gt;创建一个新对象。在Perl中，类的构造函数只是另一种方法，与其他一些为构造函数提供语法的语言不同。大多数Perl类使用 &lt;code&gt;new&lt;/code&gt; 作为其构造函数的名称：</target>
        </trans-unit>
        <trans-unit id="7959cb1d43e022aebe37e1efd0d8727ca1bc0118" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;cracker&lt;/b&gt; who is not a &lt;b&gt;hacker&lt;/b&gt; but knows just enough to run canned scripts. A &lt;b&gt;cargo-cult&lt;/b&gt; programmer.</source>
          <target state="translated">一个&lt;b&gt;黑客&lt;/b&gt;谁不是&lt;b&gt;黑客&lt;/b&gt;，但知道刚够运行罐头脚本。一个&lt;b&gt;狂热的&lt;/b&gt;程序员。</target>
        </trans-unit>
        <trans-unit id="eb0c56375aec608f2fe483b5d49fe200437f6d13" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;data paragraph&lt;/b&gt;. This is a paragraph that</source>
          <target state="translated">一个&lt;b&gt;数据段&lt;/b&gt;。这是一段</target>
        </trans-unit>
        <trans-unit id="f4407d7bf8b4e86a5ab3d8b6cfe6f792d1bff9b9" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;file&lt;/b&gt; that defines a &lt;b&gt;package&lt;/b&gt; of (almost) the same name, which can either &lt;b&gt;export&lt;/b&gt; symbols or function as an &lt;b&gt;object&lt;/b&gt; class. (A module&amp;rsquo;s main</source>
          <target state="translated">甲&lt;b&gt;文件&lt;/b&gt;定义了&lt;b&gt;包&lt;/b&gt;（几乎）相同的名称，其中的既可以&lt;b&gt;导出&lt;/b&gt;符号或功能作为一个&lt;b&gt;对象&lt;/b&gt;类。（一个模块的主要</target>
        </trans-unit>
        <trans-unit id="560dff37fc95faf8528a7887fa6dc08d1b06155b" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;file&lt;/b&gt; that is specially marked to tell the &lt;b&gt;operating system&lt;/b&gt; that it&amp;rsquo;s okay to run this file as a program. Usually shortened to &amp;ldquo;executable&amp;rdquo;.</source>
          <target state="translated">一个&lt;b&gt;文件&lt;/b&gt;被特殊标记来告诉&lt;b&gt;操作系统&lt;/b&gt;，它的好来运行这个文件的程序。通常缩写为&amp;ldquo;可执行&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="832195e4157a51d08607c1f931cf313eaae32121" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;file&lt;/b&gt; that&amp;rsquo;s not a &lt;b&gt;directory&lt;/b&gt;, a &lt;b&gt;device&lt;/b&gt;, a named &lt;b&gt;pipe&lt;/b&gt; or &lt;b&gt;socket&lt;/b&gt;, or a &lt;b&gt;symbolic link&lt;/b&gt;. Perl uses the &lt;code&gt;&amp;ndash;f&lt;/code&gt; file test operator to identify regular files. Sometimes called a &amp;ldquo;plain&amp;rdquo; file.</source>
          <target state="translated">一个&lt;b&gt;文件&lt;/b&gt;，这不是一个&lt;b&gt;目录&lt;/b&gt;，一个&lt;b&gt;设备&lt;/b&gt;，一个命名&lt;b&gt;管道&lt;/b&gt;或&lt;b&gt;插座&lt;/b&gt;，或&lt;b&gt;符号链接&lt;/b&gt;。Perl使用 &lt;code&gt;&amp;ndash;f&lt;/code&gt; 文件测试操作符来识别常规文件。有时称为&amp;ldquo;普通&amp;rdquo;文件。</target>
        </trans-unit>
        <trans-unit id="ed2a6a7fae032e7b7f63170d07ec12a9d190796a" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;function&lt;/b&gt; call directly to the &lt;b&gt;operating system&lt;/b&gt;. Many of the important subroutines and functions you use aren&amp;rsquo;t direct system calls, but are built up in one or more layers above the system call level. In general, Perl programmers don&amp;rsquo;t need to worry about the distinction. However, if you do happen to know which Perl functions are really syscalls, you can predict which of these will set the &lt;code&gt;$!&lt;/code&gt; (&lt;code&gt;$ERRNO&lt;/code&gt; ) variable on failure. Unfortunately, beginning programmers often confusingly employ the term &amp;ldquo;system call&amp;rdquo; to mean what happens when you call the Perl &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; function, which actually involves many syscalls. To avoid any confusion, we nearly always say &amp;ldquo;syscall&amp;rdquo; for something you could call indirectly via Perl&amp;rsquo;s &lt;code&gt;&lt;a href=&quot;functions/syscall&quot;&gt;syscall&lt;/a&gt;&lt;/code&gt; function, and never for something you would call with Perl&amp;rsquo;s &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">一个&lt;b&gt;函数&lt;/b&gt;直接调用&lt;b&gt;操作系统&lt;/b&gt;。您使用的许多重要子例程和函数不是直接的系统调用，而是建立在系统调用级别之上的一层或多层中。通常，Perl程序员无需担心这种区别。但是，如果您确实知道哪些Perl函数确实是系统调用，则可以预测其中的哪一个会设置 &lt;code&gt;$!&lt;/code&gt; （ &lt;code&gt;$ERRNO&lt;/code&gt; ）变量失败。不幸的是，初学者经常混淆使用&amp;ldquo;系统调用&amp;rdquo;一词来表示当您调用Perl &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; 时发生的情况函数，实际上涉及许多系统调用。为了避免混淆，我们几乎总是说的东西&amp;ldquo;系统调用&amp;rdquo;，你可以通过Perl的间接调用 &lt;code&gt;&lt;a href=&quot;functions/syscall&quot;&gt;syscall&lt;/a&gt;&lt;/code&gt; 的功能，永不的东西，你会用Perl的调用 &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; 功能。</target>
        </trans-unit>
        <trans-unit id="d9dedded5626e20b474bf02bc245fb0066d03ede" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;function&lt;/b&gt; that is predefined in the language. Even when hidden by &lt;b&gt;overriding&lt;/b&gt;, you can always get at a built- in function by &lt;b&gt;qualifying&lt;/b&gt; its name with the &lt;code&gt;CORE::&lt;/code&gt; pseudopackage.</source>
          <target state="translated">用该语言预定义的&lt;b&gt;功能&lt;/b&gt;。即使被&lt;b&gt;覆盖&lt;/b&gt;隐藏，也可以通过使用 &lt;code&gt;CORE::&lt;/code&gt; 伪包&lt;b&gt;限定&lt;/b&gt;其名称来始终获得内置函数。</target>
        </trans-unit>
        <trans-unit id="017327ec6f67ab86c897b578939f74863c44350b" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;grapheme&lt;/b&gt; consisting of either a carriage return followed by a line feed or any character with the Unicode Vertical Space &lt;b&gt;character property&lt;/b&gt;.</source>
          <target state="translated">一个&lt;b&gt;字形，&lt;/b&gt;由回车，换行符或具有Unicode Vertical Space &lt;b&gt;字符属性的&lt;/b&gt;任何字符组成。</target>
        </trans-unit>
        <trans-unit id="8ef4c16c3e84bcc76d6d7f8f70086c0645d39a22" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;handler&lt;/b&gt; that you register with some other part of your program in the hope that the other part of your program will &lt;b&gt;trigger&lt;/b&gt; your handler when some event of interest transpires.</source>
          <target state="translated">您向程序的其他部分注册的&lt;b&gt;处理&lt;/b&gt;程序，希望当出现某些感兴趣的事件时，程序的另一部分将&lt;b&gt;触发&lt;/b&gt;您的处理程序。</target>
        </trans-unit>
        <trans-unit id="9a3af3525966bde47d8478ba5aa28630e345cb9d" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;lexical variable&lt;/b&gt; lexical&amp;gt;that is declared with a &lt;b&gt;class&lt;/b&gt; type: &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt; Pony $bill&lt;/code&gt; .</source>
          <target state="translated">一个&lt;b&gt;词法变量&lt;/b&gt;即声明了一个词汇&amp;gt; &lt;b&gt;类&lt;/b&gt;型： &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt; Pony $bill&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3c3163207648959163d9c84cb3f038389746ed27" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;line&lt;/b&gt; in a file consists of zero or more non-newline characters, terminated by either a newline or the end of the file.</source>
          <target state="translated">文件中的&lt;b&gt;一行&lt;/b&gt;由零个或多个非换行符组成，以换行符或文件末尾结尾。</target>
        </trans-unit>
        <trans-unit id="e216248dbe62e4deb5d290410cf6cba07540c708" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;list value&lt;/b&gt; with zero elements, represented in Perl by &lt;code&gt;()&lt;/code&gt; .</source>
          <target state="translated">甲&lt;b&gt;列表值&lt;/b&gt;为零的元素，通过在Perl表示 &lt;code&gt;()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="45d256991d914c75f7b2e344bf10f0577b5147db" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;method&lt;/b&gt; of an &lt;b&gt;object&lt;/b&gt;, as opposed to a &lt;b&gt;class method&lt;/b&gt;.</source>
          <target state="translated">甲&lt;b&gt;方法&lt;/b&gt;一个的&lt;b&gt;对象&lt;/b&gt;，相对于一个&lt;b&gt;类的方法&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="cd9f719db48a7ef2cd4cdce77f9516eff0561abe" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;method&lt;/b&gt; used to indirectly inspect or update an &lt;b&gt;object&lt;/b&gt;&amp;rsquo;s state (its &lt;b&gt;instance variables&lt;/b&gt;).</source>
          <target state="translated">甲&lt;b&gt;方法&lt;/b&gt;用于间接检查或更新&lt;b&gt;对象&lt;/b&gt;的状态（它的&lt;b&gt;实例变量&lt;/b&gt;）。</target>
        </trans-unit>
        <trans-unit id="3f76f67b831d3545d647111a95485f14adb897eb" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;method&lt;/b&gt; whose &lt;b&gt;invocant&lt;/b&gt; is a &lt;b&gt;package&lt;/b&gt; name, not an &lt;b&gt;object&lt;/b&gt; reference. A method associated with the class as a whole. Also see &lt;b&gt;instance method&lt;/b&gt;.</source>
          <target state="translated">一种&lt;b&gt;方法，&lt;/b&gt;其&lt;b&gt;调用方&lt;/b&gt;是&lt;b&gt;程序包&lt;/b&gt;名称，而不是&lt;b&gt;对象&lt;/b&gt;引用。与整个类关联的方法。另请参见&lt;b&gt;实例方法&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="67eb1a20651dea215f187f74f8fc385e50d58eac" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;method&lt;/b&gt; whose &lt;b&gt;invocant&lt;/b&gt; is an &lt;b&gt;object&lt;/b&gt;, not a &lt;b&gt;package&lt;/b&gt; name. Every object of a class shares all the methods of that class, so an instance method applies to all instances of the class, rather than applying to a particular instance. Also see &lt;b&gt;class method&lt;/b&gt;.</source>
          <target state="translated">甲&lt;b&gt;方法&lt;/b&gt;，其&lt;b&gt;调用者&lt;/b&gt;为&lt;b&gt;对象&lt;/b&gt;，而不是一个&lt;b&gt;包&lt;/b&gt;的名称。类的每个对象都共享该类的所有方法，因此实例方法适用于该类的所有实例，而不是适用于特定实例。另请参见&lt;b&gt;类方法&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="9a608f9301d7c9b44868aa9a54155b51fc141a42" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;mortal&lt;/b&gt; SV.</source>
          <target state="translated">一个&lt;b&gt;凡人&lt;/b&gt; SV。</target>
        </trans-unit>
        <trans-unit id="53f7bde55489a9151bd15ee3f737a362e089a682" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;namespace&lt;/b&gt; for global &lt;b&gt;variables&lt;/b&gt;, &lt;b&gt;subroutines&lt;/b&gt;, and the like, such that they can be kept separate from like-named &lt;b&gt;symbols&lt;/b&gt; in other namespaces. In a sense, only the package is global, since the symbols in the package&amp;rsquo;s symbol table are only accessible from code &lt;b&gt;compiled&lt;/b&gt; outside the package by naming the package. But in another sense, all package symbols are also globals&amp;mdash;they&amp;rsquo;re just well-organized globals.</source>
          <target state="translated">一个&lt;b&gt;命名空间&lt;/b&gt;为全局&lt;b&gt;变量&lt;/b&gt;，&lt;b&gt;子程序&lt;/b&gt;，等等，使得它们可以分开存放名称相似的&lt;b&gt;符号&lt;/b&gt;在其他命名空间。从某种意义上说，只有程序包是全局的，因为只能通过命名程序包才能从程序包外部&lt;b&gt;编译&lt;/b&gt;的代码访问程序包的符号表中的符号。但是从另一种意义上说，所有包装符号也是全局变量，它们只是组织良好的全局变量。</target>
        </trans-unit>
        <trans-unit id="28abc12d5fd2eda36e36f614d582aeb865b478e3" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;newline sequence&lt;/b&gt; is usually a platform-dependent concept, but Pod parsers should understand it to mean any of CR (ASCII 13), LF (ASCII 10), or a CRLF (ASCII 13 followed immediately by ASCII 10), in addition to any other system-specific meaning. The first CR/CRLF/LF sequence in the file may be used as the basis for identifying the newline sequence for parsing the rest of the file.</source>
          <target state="translated">甲&lt;b&gt;行序列&lt;/b&gt;通常是依赖于平台的概念，但波德解析器应该理解为是指任何CR（ASCII 13），LF（ASCII 10），或一个CRLF的（ASCII 13立即通过ASCII 10随后），除了任何其他系统特定的含义。文件中的第一个CR / CRLF / LF序列可以用作标识换行序列的基础，以解析文件的其余部分。</target>
        </trans-unit>
        <trans-unit id="28a5d8434506c4b65f1bc6f82e7222a2e44f2923" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;pipe&lt;/b&gt; with a name embedded in the &lt;b&gt;filesystem&lt;/b&gt; so that it can be accessed by two unrelated &lt;b&gt;processes&lt;/b&gt;.</source>
          <target state="translated">在&lt;b&gt;文件系统中&lt;/b&gt;嵌入名称的&lt;b&gt;管道&lt;/b&gt;，以便两个不相关的&lt;b&gt;进程&lt;/b&gt;可以访问它。&lt;b&gt;&lt;/b&gt;&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="b07ce80ba704512a4daf926d6423f21ae6d581f7" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;pod&lt;/b&gt; directive. See Camel chapter 23, &amp;ldquo;Plain Old Documentation&amp;rdquo;.</source>
          <target state="translated">一个&lt;b&gt;pod&lt;/b&gt;指令。请参见骆驼第23章，&amp;ldquo;普通旧文档&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="a7bb769998e6fdfcf3ee0c66d7f29c1ed39a8790" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;pumpkin&lt;/b&gt; holder, the person in charge of pumping the pump, or at least priming it. Must be willing to play the part of the Great Pumpkin now and then.</source>
          <target state="translated">一个&lt;b&gt;南瓜&lt;/b&gt;持有人，该负责人抽泵，或至少吸它的。必须不时地愿意扮演大南瓜的角色。</target>
        </trans-unit>
        <trans-unit id="e6f9796d5e8ba560b9616a39b17ea2e32ae9ff4b" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;regular expression&lt;/b&gt; component potentially matching a &lt;b&gt;substring&lt;/b&gt; containing one or more characters and treated as an indivisible syntactic unit by any following &lt;b&gt;quantifier&lt;/b&gt;. (Contrast with an &lt;b&gt;assertion&lt;/b&gt; that matches something of &lt;b&gt;zero width&lt;/b&gt; and may not be quantified.)</source>
          <target state="translated">甲&lt;b&gt;正则表达式&lt;/b&gt;成分潜在匹配一个&lt;b&gt;子串&lt;/b&gt;包含一个或多个字符，并且作为一个不可分割的句法单元通过任何以下处理&lt;b&gt;量词&lt;/b&gt;。（与一个&lt;b&gt;断言&lt;/b&gt;匹配，该&lt;b&gt;断言&lt;/b&gt;匹配&lt;b&gt;零宽度的&lt;/b&gt;东西，可能无法量化。）</target>
        </trans-unit>
        <trans-unit id="a4efc9f0f784617b2ff5677e0ce1302bbda5d4d6" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;regular expression&lt;/b&gt; subpattern whose real purpose is to execute some Perl code&amp;mdash;for example, the &lt;code&gt;(?{...})&lt;/code&gt; and &lt;code&gt;(??{...})&lt;/code&gt; subpatterns.</source>
          <target state="translated">甲&lt;b&gt;正则表达式&lt;/b&gt;的子模式，其真正目的是为了执行一些Perl代码，例如，所述 &lt;code&gt;(?{...})&lt;/code&gt; 和 &lt;code&gt;(??{...})&lt;/code&gt; 的子模式。</target>
        </trans-unit>
        <trans-unit id="b7ffd563f4456054759e7694e65ebb89f76facae" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;scalar&lt;/b&gt;&lt;b&gt;value&lt;/b&gt; containing the actual address of a &lt;b&gt;referent&lt;/b&gt;, such that the referent&amp;rsquo;s &lt;b&gt;reference&lt;/b&gt; count accounts for it. (Some hard references are held internally, such as the implicit reference from one of a &lt;b&gt;typeglob&lt;/b&gt;&amp;rsquo;s variable slots to its corresponding referent.) A hard reference is different from a &lt;b&gt;symbolic reference&lt;/b&gt;.</source>
          <target state="translated">甲&lt;b&gt;标&lt;/b&gt;&lt;b&gt;值&lt;/b&gt;包含的实际地址&lt;b&gt;所指&lt;/b&gt;，使得所指的&lt;b&gt;参考&lt;/b&gt;计数占它。（某些内部硬引用是内部保留的，例如从&lt;b&gt;typeglob&lt;/b&gt;的可变插槽之一到其对应引用的隐式引用。）硬引用不同于&lt;b&gt;符号引用&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="5022eeaf3b922dfb2c6df5364e9c4781dc19e0ff" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;stash&lt;/b&gt; is a hash that contains all variables that are defined within a package. Each key of the stash is a symbol name (shared by all the different types of objects that have the same name), and each value in the hash table is a GV (Glob Value). This GV in turn contains references to the various objects of that name, including (but not limited to) the following:</source>
          <target state="translated">一个&lt;b&gt;藏匿处&lt;/b&gt;是包含在一个包中定义的所有变量的哈希值。存储区的每个键都是符号名称（由具有相同名称的所有不同类型的对象共享），哈希表中的每个值都是GV（全局值）。该GV依次包含对该名称各个对象的引用，包括（但不限于）以下内容：</target>
        </trans-unit>
        <trans-unit id="92b538532d72576aaeda7a7cef805a1cba7aaa2a" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;string&lt;/b&gt; containing no characters, not to be confused with a string containing a &lt;b&gt;null character&lt;/b&gt;, which has a positive length and is &lt;b&gt;true&lt;/b&gt;.</source>
          <target state="translated">一个不包含任何字符的&lt;b&gt;字符串&lt;/b&gt;，请勿与包含一个正长度且为&lt;b&gt;true&lt;/b&gt;的&lt;b&gt;空字符&lt;/b&gt;的字符串混淆。&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="f0d02500198bfb1874e50da33c4e532a6d834d3e" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;string&lt;/b&gt; or &lt;b&gt;file&lt;/b&gt; containing primarily printable characters.</source>
          <target state="translated">一个主要包含可打印字符的&lt;b&gt;字符串&lt;/b&gt;或&lt;b&gt;文件&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="963346bf337afa73872e46c5b7ebdcda13950ed0" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;subpattern&lt;/b&gt; whose &lt;b&gt;quantifier&lt;/b&gt; wants to match as many things as possible.</source>
          <target state="translated">一种&lt;b&gt;子模式，&lt;/b&gt;其&lt;b&gt;量词&lt;/b&gt;希望匹配尽可能多的内容。</target>
        </trans-unit>
        <trans-unit id="b40a047ee9609abd7c464a0e25538925a09e0994" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;subroutine&lt;/b&gt; or &lt;b&gt;method&lt;/b&gt; that Perl calls when your program needs to respond to some internal event, such as a &lt;b&gt;signal&lt;/b&gt;, or an encounter with an operator subject to &lt;b&gt;operator overloading&lt;/b&gt;. See also &lt;b&gt;callback&lt;/b&gt;.</source>
          <target state="translated">一个&lt;b&gt;子程序&lt;/b&gt;或&lt;b&gt;方法&lt;/b&gt;是Perl调用当程序需要以应对一些内部事件，如&lt;b&gt;信号&lt;/b&gt;，或与运营商受到的遭遇&lt;b&gt;运算符重载&lt;/b&gt;。另请参阅&lt;b&gt;callback&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="b88557bd91c6ee2c1cde6ebbe7211914850d4976" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;subroutine&lt;/b&gt; that, instead of being content to be called in the normal fashion, sits around waiting for a bolt out of the blue before it will deign to &lt;b&gt;execute&lt;/b&gt;. Under Perl, bolts out of the blue are called signals, and you send them with the &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt;&lt;/code&gt; built-in. See the &lt;code&gt;%SIG&lt;/code&gt; hash in Camel chapter 25, &amp;ldquo;Special Names&amp;rdquo; and the section &amp;ldquo;Signals&amp;rdquo; in Camel chapter 15, &amp;ldquo;Interprocess Communication&amp;rdquo;.</source>
          <target state="translated">一个&lt;b&gt;子例程&lt;/b&gt;，而不是满足于通常的&lt;b&gt;调用&lt;/b&gt;方式，而是围着等待一个螺栓，然后&lt;b&gt;执行&lt;/b&gt;。在Perl下，突然出现的信号称为信号，您可以使用内置的 &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt;&lt;/code&gt; 命令发送信号。请参见骆驼第25章&amp;ldquo;特殊名称&amp;rdquo;中的 &lt;code&gt;%SIG&lt;/code&gt; 哈希值和骆驼第15章&amp;ldquo;进程间通信&amp;rdquo;中的&amp;ldquo;信号&amp;rdquo;部分。</target>
        </trans-unit>
        <trans-unit id="322f029b3b0fb52a6b3d088717d1bec9ab25e434" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;subroutine&lt;/b&gt;.</source>
          <target state="translated">一个&lt;b&gt;子程序&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="76724a25473397cad776a8c2a824ea6f3262e159" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;symbol&lt;/b&gt; such as &lt;code&gt;+&lt;/code&gt; or &lt;code&gt;/&lt;/code&gt; that tells Perl to do the arithmetic you were supposed to learn in grade school.</source>
          <target state="translated">一个&lt;b&gt;符号&lt;/b&gt;，如 &lt;code&gt;+&lt;/code&gt; 或 &lt;code&gt;/&lt;/code&gt; 这告诉Perl做你应该在小学学习算术。</target>
        </trans-unit>
        <trans-unit id="d32877203298997d4e4d665fab49d7f32caf1082" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;value&lt;/b&gt; chosen for you if you don&amp;rsquo;t supply a value of your own.</source>
          <target state="translated">一个&lt;b&gt;价值&lt;/b&gt;选择你，如果你不提供自己的值。</target>
        </trans-unit>
        <trans-unit id="87af2986b4851cce0bdd68d60a1169a1374d676b" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;value&lt;/b&gt; that indicates the position of a particular &lt;b&gt;array&lt;/b&gt;&lt;b&gt;element&lt;/b&gt; in an array.</source>
          <target state="translated">一个&lt;b&gt;值&lt;/b&gt;，指示特定&lt;b&gt;数组&lt;/b&gt;&lt;b&gt;元素&lt;/b&gt;在数组中的位置。</target>
        </trans-unit>
        <trans-unit id="56587e718c7ecb23875006ffccf7c7d756c6fa62" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;value&lt;/b&gt; that you might find on the right side of an &lt;b&gt;assignment&lt;/b&gt;. See also &lt;b&gt;lvalue&lt;/b&gt;.</source>
          <target state="translated">一个&lt;b&gt;值&lt;/b&gt;，你可能会发现上右侧的&lt;b&gt;分配&lt;/b&gt;。另请参见&lt;b&gt;左值&lt;/b&gt;。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
