<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="985fbcc4acdc3a7d9cb06fa3db4de16008517d11" translate="yes" xml:space="preserve">
          <source>Converts a time as returned by the time function to a 9-element list with the time analyzed for the local time zone. Typically used as follows:</source>
          <target state="translated">将时间函数返回的时间转换为9个元素的列表,并分析当地时区的时间。典型的使用方法如下:</target>
        </trans-unit>
        <trans-unit id="df456bac0ead4ef5d6822c04fb63b24887c0fcbb" translate="yes" xml:space="preserve">
          <source>Converts die(...) to croak(...)</source>
          <target state="translated">将die(...)转换为croak(...)</target>
        </trans-unit>
        <trans-unit id="ab7d6db5ad0a6af07725954c367981536f9b78b6" translate="yes" xml:space="preserve">
          <source>Converts files from pod format (see &lt;a href=&quot;../perlpod&quot;&gt;perlpod&lt;/a&gt;) to HTML format. It can automatically generate indexes and cross-references, and it keeps a cache of things it knows how to cross-reference.</source>
          <target state="translated">将文件从pod格式（请参阅&lt;a href=&quot;../perlpod&quot;&gt;perlpod&lt;/a&gt;）转换为HTML格式。它可以自动生成索引和交叉引用，并保留其知道如何交叉引用的内容的缓存。</target>
        </trans-unit>
        <trans-unit id="0d36251afb146d0c47c8632d04ba280e7678c879" translate="yes" xml:space="preserve">
          <source>Converts files from pod format (see &lt;a href=&quot;perlpod&quot;&gt;perlpod&lt;/a&gt;) to HTML format.</source>
          <target state="translated">将文件从pod格式（请参阅&lt;a href=&quot;perlpod&quot;&gt;perlpod&lt;/a&gt;）转换为HTML格式。</target>
        </trans-unit>
        <trans-unit id="dfd74c889d6e099e89654c47c5263e1449534293" translate="yes" xml:space="preserve">
          <source>Converts files from pod format (see &lt;a href=&quot;perlpod&quot;&gt;perlpod&lt;/a&gt;) to HTML format. It can automatically generate indexes and cross-references, and it keeps a cache of things it knows how to cross-reference.</source>
          <target state="translated">将文件从pod格式（请参阅&lt;a href=&quot;perlpod&quot;&gt;perlpod&lt;/a&gt;）转换为HTML格式。它可以自动生成索引和交叉引用，并保留其知道如何交叉引用的内容的缓存。</target>
        </trans-unit>
        <trans-unit id="c4c3911f04371bd3f5a9edcc045060266cb007b3" translate="yes" xml:space="preserve">
          <source>Converts in-place the character sequence to the corresponding octet sequence in</source>
          <target state="translated">将原地的字符序列转换为相应的八位数序列。</target>
        </trans-unit>
        <trans-unit id="1f8d941153ff67ac1c72faf751cbeb55c8bc3ffd" translate="yes" xml:space="preserve">
          <source>Converts in-place the internal representation of the string from</source>
          <target state="translated">原地转换字符串的内部表示法,从</target>
        </trans-unit>
        <trans-unit id="d8b721335ac74a399b53a4c7b83d6d6e77dad793" translate="yes" xml:space="preserve">
          <source>Converts in-place the internal representation of the string from an octet sequence in the native encoding (Latin-1 or EBCDIC) to</source>
          <target state="translated">将字符串的内部表示法从本地编码(Latin-1或EBCDIC)的八位数序列就地转换为字符串的内部表示法。</target>
        </trans-unit>
        <trans-unit id="693d5393f2c198b06d62ba43ecdf4f6431cd33c1" translate="yes" xml:space="preserve">
          <source>Converts package specifiers from ' to ::</source>
          <target state="translated">将''转换为:''的软件包指定符。</target>
        </trans-unit>
        <trans-unit id="75d0a666542f6f624e396b88276d95cb7e5e33ef" translate="yes" xml:space="preserve">
          <source>Converts the PV of an SV to UTF-8, but then turns the &lt;code&gt;SvUTF8&lt;/code&gt; flag off so that it looks like octets again.</source>
          <target state="translated">将SV的PV转换为UTF-8，然后关闭 &lt;code&gt;SvUTF8&lt;/code&gt; 标志，使其再次看起来像八位字节。</target>
        </trans-unit>
        <trans-unit id="8e31e6f885da29a23f47b2b49d056556f7053dad" translate="yes" xml:space="preserve">
          <source>Converts the PV of an SV to its UTF-8-encoded form. Forces the SV to string form if it is not already. Always sets the SvUTF8 flag to avoid future validity checks even if all the bytes are invariant in UTF-8. If &lt;code&gt;flags&lt;/code&gt; has &lt;code&gt;SV_GMAGIC&lt;/code&gt; bit set, will &lt;code&gt;mg_get&lt;/code&gt; on &lt;code&gt;sv&lt;/code&gt; if appropriate, else not.</source>
          <target state="translated">将SV的PV转换为其UTF-8编码形式。如果尚未将SV强制转换为字符串形式。始终设置SvUTF8标志以避免将来的有效性检查，即使UTF-8中的所有字节都是不变的。如果 &lt;code&gt;flags&lt;/code&gt; 有 &lt;code&gt;SV_GMAGIC&lt;/code&gt; 位设置，将 &lt;code&gt;mg_get&lt;/code&gt; 在 &lt;code&gt;sv&lt;/code&gt; 如果合适，否则不行。</target>
        </trans-unit>
        <trans-unit id="5b78ec6a6d5c3e3e13ee70410dac93444fc75b30" translate="yes" xml:space="preserve">
          <source>Converts the PV of an SV to its UTF-8-encoded form. Forces the SV to string form if it is not already. Will &lt;code&gt;mg_get&lt;/code&gt; on &lt;code&gt;sv&lt;/code&gt; if appropriate. Always sets the &lt;code&gt;SvUTF8&lt;/code&gt; flag to avoid future validity checks even if the whole string is the same in UTF-8 as not. Returns the number of bytes in the converted string</source>
          <target state="translated">将SV的PV转换为其UTF-8编码形式。如果尚未将SV强制为字符串形式，则将其强制设置为字符串形式。如果合适的话，将在 &lt;code&gt;sv&lt;/code&gt; 上进行 &lt;code&gt;mg_get&lt;/code&gt; 操作。始终设置 &lt;code&gt;SvUTF8&lt;/code&gt; 标志以避免将来的有效性检查，即使整个字符串在UTF-8中相同也是如此。返回转换后的字符串中的字节数</target>
        </trans-unit>
        <trans-unit id="2eaeedbacb6754f3bf67d2ff185622d62fb661fa" translate="yes" xml:space="preserve">
          <source>Converts the PV of an SV to its UTF-8-encoded form. Forces the SV to string form if it is not already. Will &lt;code&gt;mg_get&lt;/code&gt; on &lt;code&gt;sv&lt;/code&gt; if appropriate. Always sets the SvUTF8 flag to avoid future validity checks even if the whole string is the same in UTF-8 as not. Returns the number of bytes in the converted string</source>
          <target state="translated">将SV的PV转换为其UTF-8编码形式。如果尚未将SV强制转换为字符串形式。如果合适，将在 &lt;code&gt;sv&lt;/code&gt; 上进行 &lt;code&gt;mg_get&lt;/code&gt; 。始终设置SvUTF8标志以避免将来的有效性检查，即使整个字符串在UTF-8中相同也不一样。返回转换后的字符串中的字节数</target>
        </trans-unit>
        <trans-unit id="d858a4518b8e2b0edbb72d67957101032b8b2eb8" translate="yes" xml:space="preserve">
          <source>Converts the UTF-8 encoded character at &lt;code&gt;p&lt;/code&gt; to its foldcase version, and stores that in UTF-8 in &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt;, and its length in bytes in &lt;code&gt;lenp&lt;/code&gt; . Note that the buffer pointed to by &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; needs to be at least &lt;code&gt;UTF8_MAXBYTES_CASE+1&lt;/code&gt; bytes since the foldcase version may be longer than the original character.</source>
          <target state="translated">将 &lt;code&gt;p&lt;/code&gt; 处的UTF-8编码字符转换为折叠格式，并将其存储在 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 中的UTF-8中，并将其长度存储在 &lt;code&gt;lenp&lt;/code&gt; 中的字节中。请注意， &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 所指向的缓冲区至少必须为 &lt;code&gt;UTF8_MAXBYTES_CASE+1&lt;/code&gt; 个字节，因为折叠版本可能比原始字符长。</target>
        </trans-unit>
        <trans-unit id="52e572e9590b1d15237c9891ad99225648f02174" translate="yes" xml:space="preserve">
          <source>Converts the UTF-8 encoded character at &lt;code&gt;p&lt;/code&gt; to its lowercase version, and stores that in UTF-8 in &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt;, and its length in bytes in &lt;code&gt;lenp&lt;/code&gt; . Note that the buffer pointed to by &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; needs to be at least &lt;code&gt;UTF8_MAXBYTES_CASE+1&lt;/code&gt; bytes since the lowercase version may be longer than the original character.</source>
          <target state="translated">将 &lt;code&gt;p&lt;/code&gt; 处的UTF-8编码字符转换为小写版本，并将其存储在 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 中的UTF-8中，并将其长度存储在 &lt;code&gt;lenp&lt;/code&gt; 中的字节中。请注意， &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 所指向的缓冲区必须至少为 &lt;code&gt;UTF8_MAXBYTES_CASE+1&lt;/code&gt; 个字节，因为小写版本可能比原始字符长。</target>
        </trans-unit>
        <trans-unit id="1a058c8fc2f6f2b47b13e70622269534e295cc45" translate="yes" xml:space="preserve">
          <source>Converts the UTF-8 encoded character at &lt;code&gt;p&lt;/code&gt; to its titlecase version, and stores that in UTF-8 in &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt;, and its length in bytes in &lt;code&gt;lenp&lt;/code&gt; . Note that the buffer pointed to by &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; needs to be at least &lt;code&gt;UTF8_MAXBYTES_CASE+1&lt;/code&gt; bytes since the titlecase version may be longer than the original character.</source>
          <target state="translated">将 &lt;code&gt;p&lt;/code&gt; 处的UTF-8编码字符转换为其标题格式，并将其存储在 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 中的UTF-8中，并将其长度存储在 &lt;code&gt;lenp&lt;/code&gt; 中的字节中。请注意， &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 所指向的缓冲区必须至少为 &lt;code&gt;UTF8_MAXBYTES_CASE+1&lt;/code&gt; 个字节，因为标题的版本可能比原始字符长。</target>
        </trans-unit>
        <trans-unit id="fe4a9e2cd918385161f10e124e4741e692641e86" translate="yes" xml:space="preserve">
          <source>Converts the UTF-8 encoded character at &lt;code&gt;p&lt;/code&gt; to its uppercase version, and stores that in UTF-8 in &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt;, and its length in bytes in &lt;code&gt;lenp&lt;/code&gt; . Note that the buffer pointed to by &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; needs to be at least &lt;code&gt;UTF8_MAXBYTES_CASE+1&lt;/code&gt; bytes since the uppercase version may be longer than the original character.</source>
          <target state="translated">将 &lt;code&gt;p&lt;/code&gt; 处的UTF-8编码字符转换为大写版本，并将其存储在 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 中的UTF-8中，并将其长度存储在 &lt;code&gt;lenp&lt;/code&gt; 中的字节中。注意，由于大写版本可能比原始字符长，因此 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 所指向的缓冲区至少必须为 &lt;code&gt;UTF8_MAXBYTES_CASE+1&lt;/code&gt; 个字节。</target>
        </trans-unit>
        <trans-unit id="c3a3eb4c108a356b7fa84675b8535c22195fbd62" translate="yes" xml:space="preserve">
          <source>Converts the Unicode code point &lt;code&gt;cp&lt;/code&gt; to its foldcase version, and stores that in UTF-8 in &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt;, and its length in bytes in &lt;code&gt;lenp&lt;/code&gt; . Note that the buffer pointed to by &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; needs to be at least &lt;code&gt;UTF8_MAXBYTES_CASE+1&lt;/code&gt; bytes since the foldcase version may be longer than the original character.</source>
          <target state="translated">将Unicode代码点 &lt;code&gt;cp&lt;/code&gt; 转换为其折叠格式，并将其存储在 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 中的UTF-8中，并将其长度存储在 &lt;code&gt;lenp&lt;/code&gt; 中的字节中。请注意， &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 所指向的缓冲区至少必须为 &lt;code&gt;UTF8_MAXBYTES_CASE+1&lt;/code&gt; 个字节，因为折叠版本可能比原始字符长。</target>
        </trans-unit>
        <trans-unit id="d979a580aaef23727c36debd38227c49408a9b47" translate="yes" xml:space="preserve">
          <source>Converts the Unicode code point &lt;code&gt;cp&lt;/code&gt; to its lowercase version, and stores that in UTF-8 in &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt;, and its length in bytes in &lt;code&gt;lenp&lt;/code&gt; . Note that the buffer pointed to by &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; needs to be at least &lt;code&gt;UTF8_MAXBYTES_CASE+1&lt;/code&gt; bytes since the lowercase version may be longer than the original character.</source>
          <target state="translated">将Unicode代码点 &lt;code&gt;cp&lt;/code&gt; 转换为其小写版本，并将其存储在 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 中的UTF-8中，并将其长度存储在 &lt;code&gt;lenp&lt;/code&gt; 中的字节中。请注意， &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 所指向的缓冲区必须至少为 &lt;code&gt;UTF8_MAXBYTES_CASE+1&lt;/code&gt; 个字节，因为小写版本可能比原始字符长。</target>
        </trans-unit>
        <trans-unit id="26f7f9dab73dba77fbe7d1b19eddf8f73d1b5671" translate="yes" xml:space="preserve">
          <source>Converts the Unicode code point &lt;code&gt;cp&lt;/code&gt; to its titlecase version, and stores that in UTF-8 in &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt;, and its length in bytes in &lt;code&gt;lenp&lt;/code&gt; . Note that the buffer pointed to by &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; needs to be at least &lt;code&gt;UTF8_MAXBYTES_CASE+1&lt;/code&gt; bytes since the titlecase version may be longer than the original character.</source>
          <target state="translated">将Unicode代码点 &lt;code&gt;cp&lt;/code&gt; 转换为其标题格式，并将其存储在 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 中的UTF-8中，并将其长度存储在 &lt;code&gt;lenp&lt;/code&gt; 中的字节中。请注意， &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 所指向的缓冲区必须至少为 &lt;code&gt;UTF8_MAXBYTES_CASE+1&lt;/code&gt; 个字节，因为标题的版本可能比原始字符长。</target>
        </trans-unit>
        <trans-unit id="45a23ff030e1856fb80fa2a5c1977970b50af607" translate="yes" xml:space="preserve">
          <source>Converts the Unicode code point &lt;code&gt;cp&lt;/code&gt; to its uppercase version, and stores that in UTF-8 in &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt;, and its length in bytes in &lt;code&gt;lenp&lt;/code&gt; . Note that the buffer pointed to by &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; needs to be at least &lt;code&gt;UTF8_MAXBYTES_CASE+1&lt;/code&gt; bytes since the uppercase version may be longer than the original character.</source>
          <target state="translated">将Unicode代码点 &lt;code&gt;cp&lt;/code&gt; 转换为其大写版本，并将其存储在 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 中的UTF-8中，并将其长度存储在 &lt;code&gt;lenp&lt;/code&gt; 中的字节中。注意，由于大写版本可能比原始字符长，因此 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 所指向的缓冲区至少必须为 &lt;code&gt;UTF8_MAXBYTES_CASE+1&lt;/code&gt; 个字节。</target>
        </trans-unit>
        <trans-unit id="f8097462e85183f3c9faef5d4fec919ea319a39c" translate="yes" xml:space="preserve">
          <source>Converts the code point &lt;code&gt;cp&lt;/code&gt; to its foldcase version, and stores that in UTF-8 in &lt;code&gt;s&lt;/code&gt;, and its length in bytes in &lt;code&gt;lenp&lt;/code&gt;. The code point is interpreted as native if less than 256; otherwise as Unicode. Note that the buffer pointed to by &lt;code&gt;s&lt;/code&gt; needs to be at least &lt;code&gt;UTF8_MAXBYTES_CASE+1&lt;/code&gt; bytes since the foldcase version may be longer than the original character.</source>
          <target state="translated">将代码点 &lt;code&gt;cp&lt;/code&gt; 转换为其折叠式版本，并将其存储在 &lt;code&gt;s&lt;/code&gt; 中的UTF-8中，并将其长度存储在 &lt;code&gt;lenp&lt;/code&gt; 中的字节中。如果小于256，则将代码点解释为本地。否则为Unicode。请注意， &lt;code&gt;s&lt;/code&gt; 所指向的缓冲区至少必须为 &lt;code&gt;UTF8_MAXBYTES_CASE+1&lt;/code&gt; 个字节，因为折叠版本可能比原始字符长。</target>
        </trans-unit>
        <trans-unit id="98c279219ed2c9c77a4fae80805c92f142a82c9e" translate="yes" xml:space="preserve">
          <source>Converts the code point &lt;code&gt;cp&lt;/code&gt; to its lowercase version, and stores that in UTF-8 in &lt;code&gt;s&lt;/code&gt;, and its length in bytes in &lt;code&gt;lenp&lt;/code&gt;. The code point is interpreted as native if less than 256; otherwise as Unicode. Note that the buffer pointed to by &lt;code&gt;s&lt;/code&gt; needs to be at least &lt;code&gt;UTF8_MAXBYTES_CASE+1&lt;/code&gt; bytes since the lowercase version may be longer than the original character.</source>
          <target state="translated">将代码点 &lt;code&gt;cp&lt;/code&gt; 转换为其小写版本，并将其存储在 &lt;code&gt;s&lt;/code&gt; 中的UTF-8中，并将其长度存储在 &lt;code&gt;lenp&lt;/code&gt; 中的字节中。如果小于256，则将代码点解释为本地。否则为Unicode。请注意， &lt;code&gt;s&lt;/code&gt; 所指向的缓冲区必须至少为 &lt;code&gt;UTF8_MAXBYTES_CASE+1&lt;/code&gt; 个字节，因为小写版本可能比原始字符长。</target>
        </trans-unit>
        <trans-unit id="3850a49df670b959fd8174aa8194fed81fdb3b4c" translate="yes" xml:space="preserve">
          <source>Converts the code point &lt;code&gt;cp&lt;/code&gt; to its titlecase version, and stores that in UTF-8 in &lt;code&gt;s&lt;/code&gt;, and its length in bytes in &lt;code&gt;lenp&lt;/code&gt;. The code point is interpreted as native if less than 256; otherwise as Unicode. Note that the buffer pointed to by &lt;code&gt;s&lt;/code&gt; needs to be at least &lt;code&gt;UTF8_MAXBYTES_CASE+1&lt;/code&gt; bytes since the titlecase version may be longer than the original character.</source>
          <target state="translated">将代码点 &lt;code&gt;cp&lt;/code&gt; 转换为其标题格式，并将其存储在 &lt;code&gt;s&lt;/code&gt; 中的UTF-8中，并将其长度存储在 &lt;code&gt;lenp&lt;/code&gt; 中的字节中。如果小于256，则将代码点解释为本地。否则为Unicode。请注意， &lt;code&gt;s&lt;/code&gt; 所指向的缓冲区至少必须为 &lt;code&gt;UTF8_MAXBYTES_CASE+1&lt;/code&gt; 个字节，因为标题案例的版本可能比原始字符长。</target>
        </trans-unit>
        <trans-unit id="8c66579aeff1d471f0c33592b1adf5992873aea8" translate="yes" xml:space="preserve">
          <source>Converts the code point &lt;code&gt;cp&lt;/code&gt; to its uppercase version, and stores that in UTF-8 in &lt;code&gt;s&lt;/code&gt;, and its length in bytes in &lt;code&gt;lenp&lt;/code&gt;. The code point is interpreted as native if less than 256; otherwise as Unicode. Note that the buffer pointed to by &lt;code&gt;s&lt;/code&gt; needs to be at least &lt;code&gt;UTF8_MAXBYTES_CASE+1&lt;/code&gt; bytes since the uppercase version may be longer than the original character.</source>
          <target state="translated">将代码点 &lt;code&gt;cp&lt;/code&gt; 转换为其大写版本，并将其存储在 &lt;code&gt;s&lt;/code&gt; 中的UTF-8中，并将其长度存储在 &lt;code&gt;lenp&lt;/code&gt; 中的字节中。如果小于256，则将代码点解释为本地。否则为Unicode。注意，由于大写版本可能比原始字符长，因此 &lt;code&gt;s&lt;/code&gt; 所指向的缓冲区至少必须为 &lt;code&gt;UTF8_MAXBYTES_CASE+1&lt;/code&gt; 个字节。</target>
        </trans-unit>
        <trans-unit id="c3d6ca1c2f0c8dcb86d38412b232b00c790cee63" translate="yes" xml:space="preserve">
          <source>Converts the distdir into a shell archive.</source>
          <target state="translated">将distdir转换为shell存档。</target>
        </trans-unit>
        <trans-unit id="e0af1756ce1d87737fd5451d001ec50660202c47" translate="yes" xml:space="preserve">
          <source>Converts the first UTF-8 encoded character in the sequence starting at &lt;code&gt;p&lt;/code&gt; and extending no further than &lt;code&gt;e - 1&lt;/code&gt; to its foldcase version, and stores that in UTF-8 in &lt;code&gt;s&lt;/code&gt;, and its length in bytes in &lt;code&gt;lenp&lt;/code&gt;. Note that the buffer pointed to by &lt;code&gt;s&lt;/code&gt; needs to be at least &lt;code&gt;UTF8_MAXBYTES_CASE+1&lt;/code&gt; bytes since the foldcase version may be longer than the original character.</source>
          <target state="translated">将序列中的第一个UTF-8编码字符转换为从 &lt;code&gt;p&lt;/code&gt; 开始并且不超过 &lt;code&gt;e - 1&lt;/code&gt; 扩展到其折叠格式版本，并将其存储在UTF-8中的 &lt;code&gt;s&lt;/code&gt; 中，并将其长度存储在 &lt;code&gt;lenp&lt;/code&gt; 中的字节中。请注意， &lt;code&gt;s&lt;/code&gt; 所指向的缓冲区至少必须为 &lt;code&gt;UTF8_MAXBYTES_CASE+1&lt;/code&gt; 个字节，因为折叠版本可能比原始字符长。</target>
        </trans-unit>
        <trans-unit id="f99daf2bc15fda2ed7b2a7e9b9f4caeeb417a72f" translate="yes" xml:space="preserve">
          <source>Converts the first UTF-8 encoded character in the sequence starting at &lt;code&gt;p&lt;/code&gt; and extending no further than &lt;code&gt;e - 1&lt;/code&gt; to its lowercase version, and stores that in UTF-8 in &lt;code&gt;s&lt;/code&gt;, and its length in bytes in &lt;code&gt;lenp&lt;/code&gt;. Note that the buffer pointed to by &lt;code&gt;s&lt;/code&gt; needs to be at least &lt;code&gt;UTF8_MAXBYTES_CASE+1&lt;/code&gt; bytes since the lowercase version may be longer than the original character.</source>
          <target state="translated">将序列中的第一个UTF-8编码字符转换为从 &lt;code&gt;p&lt;/code&gt; 开始并且不超过 &lt;code&gt;e - 1&lt;/code&gt; 扩展到其小写版本，并将其存储在 &lt;code&gt;s&lt;/code&gt; 中的UTF-8中，并将其长度以 &lt;code&gt;lenp&lt;/code&gt; 中的字节为单位。请注意， &lt;code&gt;s&lt;/code&gt; 所指向的缓冲区必须至少为 &lt;code&gt;UTF8_MAXBYTES_CASE+1&lt;/code&gt; 个字节，因为小写版本可能比原始字符长。</target>
        </trans-unit>
        <trans-unit id="9e8c486399b5de37ba2c9f97ea84309ec70622b1" translate="yes" xml:space="preserve">
          <source>Converts the first UTF-8 encoded character in the sequence starting at &lt;code&gt;p&lt;/code&gt; and extending no further than &lt;code&gt;e - 1&lt;/code&gt; to its titlecase version, and stores that in UTF-8 in &lt;code&gt;s&lt;/code&gt;, and its length in bytes in &lt;code&gt;lenp&lt;/code&gt;. Note that the buffer pointed to by &lt;code&gt;s&lt;/code&gt; needs to be at least &lt;code&gt;UTF8_MAXBYTES_CASE+1&lt;/code&gt; bytes since the titlecase version may be longer than the original character.</source>
          <target state="translated">将序列中的第一个UTF-8编码字符转换为从 &lt;code&gt;p&lt;/code&gt; 开始并且不超过 &lt;code&gt;e - 1&lt;/code&gt; 扩展到其标题大小写版本，并将其存储在UTF-8中的 &lt;code&gt;s&lt;/code&gt; 中，并将其长度存储在 &lt;code&gt;lenp&lt;/code&gt; 中的字节。请注意， &lt;code&gt;s&lt;/code&gt; 所指向的缓冲区至少必须为 &lt;code&gt;UTF8_MAXBYTES_CASE+1&lt;/code&gt; 个字节，因为标题案例的版本可能比原始字符长。</target>
        </trans-unit>
        <trans-unit id="b2ac1b02ca0f125c6b467ff6b8e731fe7a74404f" translate="yes" xml:space="preserve">
          <source>Converts the first UTF-8 encoded character in the sequence starting at &lt;code&gt;p&lt;/code&gt; and extending no further than &lt;code&gt;e - 1&lt;/code&gt; to its uppercase version, and stores that in UTF-8 in &lt;code&gt;s&lt;/code&gt;, and its length in bytes in &lt;code&gt;lenp&lt;/code&gt;. Note that the buffer pointed to by &lt;code&gt;s&lt;/code&gt; needs to be at least &lt;code&gt;UTF8_MAXBYTES_CASE+1&lt;/code&gt; bytes since the uppercase version may be longer than the original character.</source>
          <target state="translated">将序列中的第一个UTF-8编码字符转换为从 &lt;code&gt;p&lt;/code&gt; 开始并且不超过 &lt;code&gt;e - 1&lt;/code&gt; 扩展到其大写版本，并将其存储在 &lt;code&gt;s&lt;/code&gt; 中的UTF-8中，并将其长度存储在 &lt;code&gt;lenp&lt;/code&gt; 中的字节中。注意，由于大写版本可能比原始字符长，因此 &lt;code&gt;s&lt;/code&gt; 所指向的缓冲区至少必须为 &lt;code&gt;UTF8_MAXBYTES_CASE+1&lt;/code&gt; 个字节。</target>
        </trans-unit>
        <trans-unit id="f49877f487db8e329200edc79f26d5291cbf1d27" translate="yes" xml:space="preserve">
          <source>Converts the given Perl data structure to a UTF-8 encoded, binary string (that is, the string contains octets only). Croaks on error.</source>
          <target state="translated">将给定的Perl数据结构转换为UTF-8编码的二进制字符串(即字符串只包含八位数)。出错时呱呱叫。</target>
        </trans-unit>
        <trans-unit id="a0abed8595dd2404bc98da1fe213fd7b681c1852" translate="yes" xml:space="preserve">
          <source>Converts the given Perl value or data structure to its JSON representation. Croaks on error.</source>
          <target state="translated">将给定的Perl值或数据结构转换为JSON表示。出错时呱呱叫。</target>
        </trans-unit>
        <trans-unit id="0cf90c7998d2448281ddcaab8fbf0e0504c17afc" translate="yes" xml:space="preserve">
          <source>Converts the name of a C source file to the most natural name of an output object file to create from it. For instance, on Unix the source file</source>
          <target state="translated">将 C 源文件的名称转换为要从它创建的输出对象文件的最自然名称。例如,在Unix上,源文件的名称是</target>
        </trans-unit>
        <trans-unit id="294bcf2fccd9227784487d719b1402d9277e26d7" translate="yes" xml:space="preserve">
          <source>Converts the name of an object file to the most natural name of a output library file to create from it. For instance, on Mac OS X the object file</source>
          <target state="translated">将对象文件的名称转换为要从它创建的输出库文件的最自然名称。例如,在 Mac OS X 上,对象文件的名称是</target>
        </trans-unit>
        <trans-unit id="a88553ec1e53f9448f2a6cf55dbbb5a77e63eaea" translate="yes" xml:space="preserve">
          <source>Converts the name of an object file to the most natural name of an executable file to create from it. For instance, on Mac OS X the object file</source>
          <target state="translated">将对象文件的名称转换为要创建的可执行文件的最自然名称。例如,在Mac OS X上,对象文件的名称是</target>
        </trans-unit>
        <trans-unit id="ed753865139ba3992c02391f12d141bc1df3515b" translate="yes" xml:space="preserve">
          <source>Converts the offset from a count of UTF-8 chars from the start of the string, to a count of the equivalent number of bytes; if &lt;code&gt;lenp&lt;/code&gt; is non-zero, it does the same to &lt;code&gt;lenp&lt;/code&gt;, but this time starting from &lt;code&gt;offset&lt;/code&gt;, rather than from the start of the string. Handles type coercion. &lt;code&gt;flags&lt;/code&gt; is passed to &lt;code&gt;SvPV_flags&lt;/code&gt;, and usually should be &lt;code&gt;SV_GMAGIC|SV_CONST_RETURN&lt;/code&gt; to handle magic.</source>
          <target state="translated">将偏移量从字符串开头的UTF-8个字符的计数转换为等效字节数的计数；如果 &lt;code&gt;lenp&lt;/code&gt; 不为零，则它与 &lt;code&gt;lenp&lt;/code&gt; 相同，但这一次是从 &lt;code&gt;offset&lt;/code&gt; 开始，而不是从字符串的开头开始。处理类型强制。 &lt;code&gt;flags&lt;/code&gt; 被传递给 &lt;code&gt;SvPV_flags&lt;/code&gt; ，通常应该使用 &lt;code&gt;SV_GMAGIC|SV_CONST_RETURN&lt;/code&gt; 来处理魔术。</target>
        </trans-unit>
        <trans-unit id="bd026beb328c8d2f6c169ba8bd729c19b9c13311" translate="yes" xml:space="preserve">
          <source>Converts the offset from a count of UTF-8 chars from the start of the string, to a count of the equivalent number of bytes; if lenp is non-zero, it does the same to lenp, but this time starting from the offset, rather than from the start of the string. Handles type coercion.</source>
          <target state="translated">将偏移量从字符串开始的UTF-8字符数转换为等效的字节数;如果lenp非零,则对lenp做同样的处理,但这次是从偏移量开始,而不是从字符串开始。处理类型胁迫。</target>
        </trans-unit>
        <trans-unit id="00d51fe700c6a5db38a413be18aee4d817d83eb5" translate="yes" xml:space="preserve">
          <source>Converts the offset from a count of bytes from the start of the string, to a count of the equivalent number of UTF-8 chars. Handles type coercion.</source>
          <target state="translated">将偏移量从字符串开始的字节数转换为等量的UTF-8字符数。处理类型胁迫。</target>
        </trans-unit>
        <trans-unit id="29fc75feba3b4414c8baae81dd1c2325b9e8ab51" translate="yes" xml:space="preserve">
          <source>Converts the specified Latin1 character to lowercase. The results are undefined if the input doesn't fit in a byte.</source>
          <target state="translated">将指定的Latin1字符转换为小写。如果输入的字符不适合放在一个字节中,那么结果就没有定义。</target>
        </trans-unit>
        <trans-unit id="2c20384152ac3c169167a164a1d915c66eb3398e" translate="yes" xml:space="preserve">
          <source>Converts the specified character to foldcase. If the input is anything but an ASCII uppercase character, that input character itself is returned. Variant &lt;code&gt;toFOLD_A&lt;/code&gt; is equivalent. (There is no equivalent &lt;code&gt;to_FOLD_L1&lt;/code&gt; for the full Latin1 range, as the full generality of &lt;a href=&quot;#toFOLD_uni&quot;&gt;toFOLD_uni&lt;/a&gt; is needed there.)</source>
          <target state="translated">将指定的字符转换为折叠式字符。如果输入不是ASCII大写字符，则返回该输入字符本身。变异 &lt;code&gt;toFOLD_A&lt;/code&gt; 是等价的。（对于整个Latin1范围，没有等效的 &lt;code&gt;to_FOLD_L1&lt;/code&gt; ，因为在那里需要&lt;a href=&quot;#toFOLD_uni&quot;&gt;toFOLD_uni&lt;/a&gt;的全部通用性。）</target>
        </trans-unit>
        <trans-unit id="a9cd398fca2b6c81e897731d04dc9dce419bd557" translate="yes" xml:space="preserve">
          <source>Converts the specified character to foldcase. If the input is anything but an ASCII uppercase character, that input character itself is returned. Variant &lt;code&gt;toFOLD_A&lt;/code&gt; is equivalent. (There is no equivalent &lt;code&gt;to_FOLD_L1&lt;/code&gt; for the full Latin1 range, as the full generality of &lt;a href=&quot;#toFOLD_uvchr&quot;&gt;&quot;toFOLD_uvchr&quot;&lt;/a&gt; is needed there.)</source>
          <target state="translated">将指定的字符转换为折叠式字符。如果输入不是ASCII大写字符，则返回该输入字符本身。变异 &lt;code&gt;toFOLD_A&lt;/code&gt; 是等价的。（对于整个Latin1范围，没有等效的 &lt;code&gt;to_FOLD_L1&lt;/code&gt; ，因为在那里需要&lt;a href=&quot;#toFOLD_uvchr&quot;&gt;&amp;ldquo; toFOLD_uvchr&amp;rdquo;&lt;/a&gt;的完全通用性。）</target>
        </trans-unit>
        <trans-unit id="7775e6edae290c80035bdde5ee180cafb1a95c9a" translate="yes" xml:space="preserve">
          <source>Converts the specified character to lowercase using the current locale's rules, if possible; otherwise returns the input character itself.</source>
          <target state="translated">如果可能的话,使用当前locale的规则将指定的字符转换为小写,否则返回输入字符本身。</target>
        </trans-unit>
        <trans-unit id="6f3b386523ea039f2b6d6f2c24bea443697341ca" translate="yes" xml:space="preserve">
          <source>Converts the specified character to lowercase. If the input is anything but an ASCII uppercase character, that input character itself is returned. Variant &lt;code&gt;toLOWER_A&lt;/code&gt; is equivalent.</source>
          <target state="translated">将指定字符转换为小写。如果输入不是ASCII大写字符，则返回该输入字符本身。 &lt;code&gt;toLOWER_A&lt;/code&gt; 变体是等效的。</target>
        </trans-unit>
        <trans-unit id="4c7f73f6dc4ef675e0ea0c8a1169c8b80eea8488" translate="yes" xml:space="preserve">
          <source>Converts the specified character to titlecase. If the input is anything but an ASCII lowercase character, that input character itself is returned. Variant &lt;code&gt;toTITLE_A&lt;/code&gt; is equivalent. (There is no &lt;code&gt;toTITLE_L1&lt;/code&gt; for the full Latin1 range, as the full generality of &lt;a href=&quot;#toTITLE_uni&quot;&gt;toTITLE_uni&lt;/a&gt; is needed there. Titlecase is not a concept used in locale handling, so there is no functionality for that.)</source>
          <target state="translated">将指定的字符转换为大写。如果输入不是ASCII小写字符，则返回该输入字符本身。变体 &lt;code&gt;toTITLE_A&lt;/code&gt; 是等效的。（对于整个Latin1范围，没有 &lt;code&gt;toTITLE_L1&lt;/code&gt; ，因为在那里需要&lt;a href=&quot;#toTITLE_uni&quot;&gt;toTITLE_uni&lt;/a&gt;的全部通用性。Titlecase不是在语言环境处理中使用的概念，因此没有功能。）</target>
        </trans-unit>
        <trans-unit id="58b4954fed755e782bc5e907470ddb42c12019e5" translate="yes" xml:space="preserve">
          <source>Converts the specified character to titlecase. If the input is anything but an ASCII lowercase character, that input character itself is returned. Variant &lt;code&gt;toTITLE_A&lt;/code&gt; is equivalent. (There is no &lt;code&gt;toTITLE_L1&lt;/code&gt; for the full Latin1 range, as the full generality of &lt;a href=&quot;#toTITLE_uvchr&quot;&gt;&quot;toTITLE_uvchr&quot;&lt;/a&gt; is needed there. Titlecase is not a concept used in locale handling, so there is no functionality for that.)</source>
          <target state="translated">将指定的字符转换为大写。如果输入不是ASCII小写字符，则返回该输入字符本身。变体 &lt;code&gt;toTITLE_A&lt;/code&gt; 是等效的。（对于整个Latin1范围，没有 &lt;code&gt;toTITLE_L1&lt;/code&gt; ，因为在那里需要&lt;a href=&quot;#toTITLE_uvchr&quot;&gt;&amp;ldquo; toTITLE_uvchr&amp;rdquo;&lt;/a&gt;的完全通用性。Titlecase不是在语言环境处理中使用的概念，因此没有功能。）</target>
        </trans-unit>
        <trans-unit id="38943cd0db5a909d68224b0f5858aec10b5fbd97" translate="yes" xml:space="preserve">
          <source>Converts the specified character to uppercase. If the input is anything but an ASCII lowercase character, that input character itself is returned. Variant &lt;code&gt;toUPPER_A&lt;/code&gt; is equivalent.</source>
          <target state="translated">将指定字符转换为大写。如果输入不是ASCII小写字符，则返回该输入字符本身。变异 &lt;code&gt;toUPPER_A&lt;/code&gt; 是等价的。</target>
        </trans-unit>
        <trans-unit id="cbfe95a5d57e473ed974a2c8dd7b4c3a3dc6f133" translate="yes" xml:space="preserve">
          <source>Converts the tarfile into a uuencoded file</source>
          <target state="translated">将tar文件转换为Uuencoded文件。</target>
        </trans-unit>
        <trans-unit id="bdd1ddbbeb7d012a889f8c34ef17fb66387fbf89" translate="yes" xml:space="preserve">
          <source>Converts the value pointed to by &lt;code&gt;offsetp&lt;/code&gt; from a count of UTF-8 chars from the start of the string, to a count of the equivalent number of bytes; if &lt;code&gt;lenp&lt;/code&gt; is non-zero, it does the same to &lt;code&gt;lenp&lt;/code&gt;, but this time starting from the offset, rather than from the start of the string. Handles magic and type coercion.</source>
          <target state="translated">从字符串的开头将 &lt;code&gt;offsetp&lt;/code&gt; 指向的值从UTF-8字符的计数转换为等效字节数的计数；如果 &lt;code&gt;lenp&lt;/code&gt; 不为零，则它与 &lt;code&gt;lenp&lt;/code&gt; 相同，但这一次是从偏移量开始，而不是从字符串的开头开始。处理魔术和强制类型。</target>
        </trans-unit>
        <trans-unit id="9aba6510751c0ff024357be5e7c7a1a2cd44d36b" translate="yes" xml:space="preserve">
          <source>Converts the value pointed to by &lt;code&gt;offsetp&lt;/code&gt; from a count of bytes from the start of the string, to a count of the equivalent number of UTF-8 chars. Handles magic and type coercion.</source>
          <target state="translated">将 &lt;code&gt;offsetp&lt;/code&gt; 指向的值从字符串开头的字节数转换为相等数量的UTF-8字符数。处理魔术和强制类型。</target>
        </trans-unit>
        <trans-unit id="8105a421b149b241dd9345f828f8405806dc4509" translate="yes" xml:space="preserve">
          <source>Converts the value pointed to by offsetp from a count of UTF-8 chars from the start of the string, to a count of the equivalent number of bytes; if lenp is non-zero, it does the same to lenp, but this time starting from the offset, rather than from the start of the string. Handles magic and type coercion.</source>
          <target state="translated">将 offsetp 指向的值从字符串开始的 UTF-8 字符数转换为等效的字节数;如果 lenp 为非零,则对 lenp 做同样的处理,但这次是从偏移量开始,而不是从字符串开始。处理魔术和类型强制。</target>
        </trans-unit>
        <trans-unit id="40b55cad996caa19ed6d279ac88d5fa4b681b529" translate="yes" xml:space="preserve">
          <source>Converts the value pointed to by offsetp from a count of bytes from the start of the string, to a count of the equivalent number of UTF-8 chars. Handles magic and type coercion.</source>
          <target state="translated">将offsetp指向的值从字符串开始的字节数转换为等价的UTF-8字符数。处理魔术和类型强制。</target>
        </trans-unit>
        <trans-unit id="a94cae48bcd262bf43c14789dbb77de7e197a13e" translate="yes" xml:space="preserve">
          <source>Cookie support requires &lt;a href=&quot;HTTP::CookieJar&quot;&gt;HTTP::CookieJar&lt;/a&gt; or an equivalent class.</source>
          <target state="translated">Cookie支持需要&lt;a href=&quot;HTTP::CookieJar&quot;&gt;HTTP :: CookieJar&lt;/a&gt;或等效类。</target>
        </trans-unit>
        <trans-unit id="a9134f42b0fc69f710ef38795745edc87cc85d2d" translate="yes" xml:space="preserve">
          <source>Cooperative multitasking systems have running threads give up control if one of two things happen. If a thread calls a yield function, it gives up control. It also gives up control if the thread does something that would cause it to block, such as perform I/O. In a cooperative multitasking implementation, one thread can starve all the others for CPU time if it so chooses.</source>
          <target state="translated">合作多任务系统中,如果发生两件事之一,运行中的线程就会放弃控制权。如果一个线程调用了一个屈服函数,它就会放弃控制权。如果线程做了一些会导致它阻塞的事情,比如执行I/O,它也会放弃控制权。在合作式多任务实现中,如果一个线程愿意,它可以饿死所有其他线程的CPU时间。</target>
        </trans-unit>
        <trans-unit id="10d83a55361a3918a7093423f8f0834e129f7b3a" translate="yes" xml:space="preserve">
          <source>CopLABEL</source>
          <target state="translated">CopLABEL</target>
        </trans-unit>
        <trans-unit id="9ed50c23b4ede350f18d8db4e8ff034aa250a769" translate="yes" xml:space="preserve">
          <source>CopLABEL_len</source>
          <target state="translated">CopLABEL_len</target>
        </trans-unit>
        <trans-unit id="655a812ae11b9e6af06dd6e85f2025b415ae5ab9" translate="yes" xml:space="preserve">
          <source>CopLABEL_len_flags</source>
          <target state="translated">CopLABEL_len_flags</target>
        </trans-unit>
        <trans-unit id="d032796f15a64112e4e06fa18894fca88d7a2f99" translate="yes" xml:space="preserve">
          <source>Copied from &lt;a href=&quot;../ipc/cmd#%24path-%3d-can_run(-PROGRAM-)%3b&quot;&gt;IPC::Cmd&lt;/a&gt;, but modified into a method (and removed &lt;code&gt;$INSTANCES&lt;/code&gt; capability).</source>
          <target state="translated">从&lt;a href=&quot;../ipc/cmd#%24path-%3d-can_run(-PROGRAM-)%3b&quot;&gt;IPC :: Cmd&lt;/a&gt;复制，但修改为方法（并删除了 &lt;code&gt;$INSTANCES&lt;/code&gt; 功能）。</target>
        </trans-unit>
        <trans-unit id="d6cb73f711cd94d86a39f2870124b76ef387e79a" translate="yes" xml:space="preserve">
          <source>Copied from &lt;a href=&quot;IPC::Cmd#%24path-%3D-can_run%28-PROGRAM-%29%3B&quot;&gt;IPC::Cmd&lt;/a&gt;, but modified into a method (and removed &lt;code&gt;$INSTANCES&lt;/code&gt; capability).</source>
          <target state="translated">从&lt;a href=&quot;IPC::Cmd#%24path-%3D-can_run%28-PROGRAM-%29%3B&quot;&gt;IPC :: Cmd&lt;/a&gt;复制，但修改为方法（并删除了 &lt;code&gt;$INSTANCES&lt;/code&gt; 功能）。</target>
        </trans-unit>
        <trans-unit id="58da612a1bc6d614d12d58ef8797a656a94e658e" translate="yes" xml:space="preserve">
          <source>Copies a double into a new SV, optionally blessing the SV. The &lt;code&gt;rv&lt;/code&gt; argument will be upgraded to an RV. That RV will be modified to point to the new SV. The &lt;code&gt;classname&lt;/code&gt; argument indicates the package for the blessing. Set &lt;code&gt;classname&lt;/code&gt; to &lt;code&gt;NULL&lt;/code&gt; to avoid the blessing. The new SV will have a reference count of 1, and the RV will be returned.</source>
          <target state="translated">将double复制到新的SV中，可以选择祝福SV。该 &lt;code&gt;rv&lt;/code&gt; 参数将被升级为RV。该RV将被修改为指向新的SV。在 &lt;code&gt;classname&lt;/code&gt; 参数指示包的祝福。将 &lt;code&gt;classname&lt;/code&gt; 设置为 &lt;code&gt;NULL&lt;/code&gt; 以避免加持。新的SV的参考计数为1，并且将返回RV。</target>
        </trans-unit>
        <trans-unit id="b94b7919e525faa91a8e77599fe71995afad6761" translate="yes" xml:space="preserve">
          <source>Copies a double into the given SV, upgrading first if necessary. Does not handle 'set' magic. See also &lt;code&gt;&lt;a href=&quot;#sv_setnv_mg&quot;&gt;&quot;sv_setnv_mg&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将double复制到给定的SV中，如有必要，请先进行升级。不处理&amp;ldquo;定型&amp;rdquo;魔法。另请参见 &lt;code&gt;&lt;a href=&quot;#sv_setnv_mg&quot;&gt;&quot;sv_setnv_mg&quot;&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c347bb9b827a2334958f6bf2f2ca6f534daeac0e" translate="yes" xml:space="preserve">
          <source>Copies a double into the given SV, upgrading first if necessary. Does not handle 'set' magic. See also &lt;code&gt;sv_setnv_mg&lt;/code&gt; .</source>
          <target state="translated">将double复制到给定的SV中，必要时先进行升级。不处理&amp;ldquo;定型&amp;rdquo;魔法。另请参见 &lt;code&gt;sv_setnv_mg&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4d8cefbf6ac5594c3f2b292003c3193edf554f91" translate="yes" xml:space="preserve">
          <source>Copies a pointer into a new SV, optionally blessing the SV. The &lt;code&gt;rv&lt;/code&gt; argument will be upgraded to an RV. That RV will be modified to point to the new SV. If the &lt;code&gt;pv&lt;/code&gt; argument is &lt;code&gt;NULL&lt;/code&gt;, then &lt;code&gt;PL_sv_undef&lt;/code&gt; will be placed into the SV. The &lt;code&gt;classname&lt;/code&gt; argument indicates the package for the blessing. Set &lt;code&gt;classname&lt;/code&gt; to &lt;code&gt;NULL&lt;/code&gt; to avoid the blessing. The new SV will have a reference count of 1, and the RV will be returned.</source>
          <target state="translated">将指针复制到新的SV中，可以选择祝福SV。该 &lt;code&gt;rv&lt;/code&gt; 参数将被升级为RV。该RV将被修改为指向新的SV。如果 &lt;code&gt;pv&lt;/code&gt; 参数为 &lt;code&gt;NULL&lt;/code&gt; ，则 &lt;code&gt;PL_sv_undef&lt;/code&gt; 将被放置到SV中。在 &lt;code&gt;classname&lt;/code&gt; 参数指示包的祝福。将 &lt;code&gt;classname&lt;/code&gt; 设置为 &lt;code&gt;NULL&lt;/code&gt; 以避免加持。新的SV的参考计数为1，并且将返回RV。</target>
        </trans-unit>
        <trans-unit id="b27095a6cd52e5d6134280b02b569beed020d999" translate="yes" xml:space="preserve">
          <source>Copies a pointer into a new SV, optionally blessing the SV. The &lt;code&gt;rv&lt;/code&gt; argument will be upgraded to an RV. That RV will be modified to point to the new SV. If the &lt;code&gt;pv&lt;/code&gt; argument is NULL then &lt;code&gt;PL_sv_undef&lt;/code&gt; will be placed into the SV. The &lt;code&gt;classname&lt;/code&gt; argument indicates the package for the blessing. Set &lt;code&gt;classname&lt;/code&gt; to &lt;code&gt;NULL&lt;/code&gt; to avoid the blessing. The new SV will have a reference count of 1, and the RV will be returned.</source>
          <target state="translated">将指针复制到新的SV中，可以选择祝福SV。该 &lt;code&gt;rv&lt;/code&gt; 参数将被升级为RV。该RV将被修改为指向新的SV。如果 &lt;code&gt;pv&lt;/code&gt; 参数为NULL，则 &lt;code&gt;PL_sv_undef&lt;/code&gt; 将被放置到SV中。在 &lt;code&gt;classname&lt;/code&gt; 参数指示包的祝福。将 &lt;code&gt;classname&lt;/code&gt; 设置为 &lt;code&gt;NULL&lt;/code&gt; 以避免加持。新的SV的参考计数为1，并且将返回RV。</target>
        </trans-unit>
        <trans-unit id="9db7fa22d38286362b6e5e7c37f0e85f91f79d46" translate="yes" xml:space="preserve">
          <source>Copies a string (possibly containing embedded &lt;code&gt;NUL&lt;/code&gt; characters) into an SV. The &lt;code&gt;len&lt;/code&gt; parameter indicates the number of bytes to be copied. If the &lt;code&gt;ptr&lt;/code&gt; argument is NULL the SV will become undefined. Does not handle 'set' magic. See &lt;code&gt;&lt;a href=&quot;#sv_setpvn_mg&quot;&gt;&quot;sv_setpvn_mg&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将字符串（可能包含嵌入的 &lt;code&gt;NUL&lt;/code&gt; 字符）复制到SV中。该 &lt;code&gt;len&lt;/code&gt; 参数指示要复制的字节数。如果 &lt;code&gt;ptr&lt;/code&gt; 参数为NULL，则SV将变得不确定。不处理&amp;ldquo;定型&amp;rdquo;魔法。请参见 &lt;code&gt;&lt;a href=&quot;#sv_setpvn_mg&quot;&gt;&quot;sv_setpvn_mg&quot;&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1786cfa4001f16d4465ff1be0891e50c99f2c03f" translate="yes" xml:space="preserve">
          <source>Copies a string (possibly containing embedded &lt;code&gt;NUL&lt;/code&gt; characters) into an SV. The &lt;code&gt;len&lt;/code&gt; parameter indicates the number of bytes to be copied. If the &lt;code&gt;ptr&lt;/code&gt; argument is NULL the SV will become undefined. Does not handle 'set' magic. See &lt;code&gt;sv_setpvn_mg&lt;/code&gt; .</source>
          <target state="translated">将字符串（可能包含嵌入的 &lt;code&gt;NUL&lt;/code&gt; 字符）复制到SV中。该 &lt;code&gt;len&lt;/code&gt; 参数指示要复制的字节数。如果 &lt;code&gt;ptr&lt;/code&gt; 参数为NULL，则SV将变得不确定。不处理&amp;ldquo;定型&amp;rdquo;魔法。参见 &lt;code&gt;sv_setpvn_mg&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d174a878d53f27a45b16e4832647c4bb0c4f91eb" translate="yes" xml:space="preserve">
          <source>Copies a string into a new SV, optionally blessing the SV. The length of the string must be specified with &lt;code&gt;n&lt;/code&gt; . The &lt;code&gt;rv&lt;/code&gt; argument will be upgraded to an RV. That RV will be modified to point to the new SV. The &lt;code&gt;classname&lt;/code&gt; argument indicates the package for the blessing. Set &lt;code&gt;classname&lt;/code&gt; to &lt;code&gt;NULL&lt;/code&gt; to avoid the blessing. The new SV will have a reference count of 1, and the RV will be returned.</source>
          <target state="translated">将字符串复制到新的SV中，可以选择祝福该SV。字符串的长度必须用 &lt;code&gt;n&lt;/code&gt; 指定。该 &lt;code&gt;rv&lt;/code&gt; 参数将被升级为RV。该RV将被修改为指向新的SV。在 &lt;code&gt;classname&lt;/code&gt; 参数指示包的祝福。将 &lt;code&gt;classname&lt;/code&gt; 设置为 &lt;code&gt;NULL&lt;/code&gt; 以避免加持。新的SV的参考计数为1，并且将返回RV。</target>
        </trans-unit>
        <trans-unit id="9c09401eaad1ab5a3afa704ed6c9a679f18a844f" translate="yes" xml:space="preserve">
          <source>Copies a string into a new SV, optionally blessing the SV. The length of the string must be specified with &lt;code&gt;n&lt;/code&gt;. The &lt;code&gt;rv&lt;/code&gt; argument will be upgraded to an RV. That RV will be modified to point to the new SV. The &lt;code&gt;classname&lt;/code&gt; argument indicates the package for the blessing. Set &lt;code&gt;classname&lt;/code&gt; to &lt;code&gt;NULL&lt;/code&gt; to avoid the blessing. The new SV will have a reference count of 1, and the RV will be returned.</source>
          <target state="translated">将字符串复制到新的SV中，可以选择祝福该SV。字符串的长度必须用 &lt;code&gt;n&lt;/code&gt; 指定。该 &lt;code&gt;rv&lt;/code&gt; 参数将被升级为RV。该RV将被修改为指向新的SV。在 &lt;code&gt;classname&lt;/code&gt; 参数指示包的祝福。将 &lt;code&gt;classname&lt;/code&gt; 设置为 &lt;code&gt;NULL&lt;/code&gt; 以避免加持。新的SV的参考计数为1，并且将返回RV。</target>
        </trans-unit>
        <trans-unit id="49dd945a738053707e8153a3f6568b4727f3f0a6" translate="yes" xml:space="preserve">
          <source>Copies a string into an SV. The string must be terminated with a &lt;code&gt;NUL&lt;/code&gt; character, and not contain embeded &lt;code&gt;NUL&lt;/code&gt;'s. Does not handle 'set' magic. See &lt;code&gt;&lt;a href=&quot;#sv_setpv_mg&quot;&gt;&quot;sv_setpv_mg&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将字符串复制到SV中。该字符串必须以 &lt;code&gt;NUL&lt;/code&gt; 字符结尾，并且不包含嵌入的 &lt;code&gt;NUL&lt;/code&gt; 。不处理&amp;ldquo;定型&amp;rdquo;魔法。参见 &lt;code&gt;&lt;a href=&quot;#sv_setpv_mg&quot;&gt;&quot;sv_setpv_mg&quot;&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2cc17ff1663cdcd5ccc34774a29afbe226d6bde7" translate="yes" xml:space="preserve">
          <source>Copies a string into an SV. The string must be terminated with a &lt;code&gt;NUL&lt;/code&gt; character. Does not handle 'set' magic. See &lt;code&gt;sv_setpv_mg&lt;/code&gt; .</source>
          <target state="translated">将字符串复制到SV中。该字符串必须以 &lt;code&gt;NUL&lt;/code&gt; 字符结尾。不处理&amp;ldquo;定型&amp;rdquo;魔法。参见 &lt;code&gt;sv_setpv_mg&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d6a11e59627d7c63a1013ba97863b31a87ec51fe" translate="yes" xml:space="preserve">
          <source>Copies a stringified representation of the source SV into the destination SV. Automatically performs any necessary &lt;code&gt;mg_get&lt;/code&gt; and coercion of numeric values into strings. Guaranteed to preserve &lt;code&gt;UTF8&lt;/code&gt; flag even from overloaded objects. Similar in nature to &lt;code&gt;sv_2pv[_flags]&lt;/code&gt; but operates directly on an SV instead of just the string. Mostly uses &lt;code&gt;sv_2pv_flags&lt;/code&gt; to do its work, except when that would lose the UTF-8'ness of the PV.</source>
          <target state="translated">将源SV的字符串化表示复制到目标SV中。自动将所有必要的 &lt;code&gt;mg_get&lt;/code&gt; 和数字值强制转换为字符串。保证即使过载对象也保留 &lt;code&gt;UTF8&lt;/code&gt; 标志。本质上与 &lt;code&gt;sv_2pv[_flags]&lt;/code&gt; 类似，但直接在SV上运行，而不仅仅是字符串。多数情况下，使用 &lt;code&gt;sv_2pv_flags&lt;/code&gt; 来完成其工作，除非那样会丢失PV的UTF-8状态。</target>
        </trans-unit>
        <trans-unit id="acd7e631f37132f2461a9f4128a317eb4d34d689" translate="yes" xml:space="preserve">
          <source>Copies a stringified representation of the source SV into the destination SV. Automatically performs any necessary mg_get and coercion of numeric values into strings. Guaranteed to preserve UTF8 flag even from overloaded objects. Similar in nature to sv_2pv[_flags] but operates directly on an SV instead of just the string. Mostly uses sv_2pv_flags to do its work, except when that would lose the UTF-8'ness of the PV.</source>
          <target state="translated">将源SV的字符串化表示复制到目标SV中。自动执行任何必要的mg_get和胁迫数值为字符串。保证即使是重载对象也能保留UTF8标志。类似于sv_2pv[_flags]的性质,但是直接对SV进行操作,而不仅仅是字符串。大多数情况下使用 sv_2pv_flags 来完成它的工作,除非这样做会丢失 PV 的 UTF-8'ness。</target>
        </trans-unit>
        <trans-unit id="1ceb5498aa08b64599a670ddd20b40acf24c2850" translate="yes" xml:space="preserve">
          <source>Copies all the files that are in the MANIFEST file to a newly created directory with the name &lt;code&gt;$(DISTNAME)-$(VERSION)&lt;/code&gt;. If that directory exists, it will be removed first.</source>
          <target state="translated">将清单文件中的所有文件复制到名称 &lt;code&gt;$(DISTNAME)-$(VERSION)&lt;/code&gt; 的新创建的目录中。如果该目录存在，它将首先被删除。</target>
        </trans-unit>
        <trans-unit id="6f5a43cdae0ae6da25d7ce8fda19fe8a78a5ff5d" translate="yes" xml:space="preserve">
          <source>Copies an integer into a new SV, optionally blessing the SV. The &lt;code&gt;rv&lt;/code&gt; argument will be upgraded to an RV. That RV will be modified to point to the new SV. The &lt;code&gt;classname&lt;/code&gt; argument indicates the package for the blessing. Set &lt;code&gt;classname&lt;/code&gt; to &lt;code&gt;NULL&lt;/code&gt; to avoid the blessing. The new SV will have a reference count of 1, and the RV will be returned.</source>
          <target state="translated">将整数复制到新的SV中，可以选择祝福SV。该 &lt;code&gt;rv&lt;/code&gt; 参数将被升级为RV。该RV将被修改为指向新的SV。在 &lt;code&gt;classname&lt;/code&gt; 参数指示包的祝福。将 &lt;code&gt;classname&lt;/code&gt; 设置为 &lt;code&gt;NULL&lt;/code&gt; 以避免加持。新的SV的参考计数为1，并且将返回RV。</target>
        </trans-unit>
        <trans-unit id="035a875cdd2dd0f2c08c39190b65075e75bdab43" translate="yes" xml:space="preserve">
          <source>Copies an integer into the given SV, also updating its string value. Does not handle 'set' magic. See &lt;code&gt;&lt;a href=&quot;#sv_setpviv_mg&quot;&gt;&quot;sv_setpviv_mg&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将整数复制到给定的SV中，同时也更新其字符串值。不处理&amp;ldquo;定型&amp;rdquo;魔法。参见 &lt;code&gt;&lt;a href=&quot;#sv_setpviv_mg&quot;&gt;&quot;sv_setpviv_mg&quot;&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="87655bfb9567748496e5eaf66f62a786876d2425" translate="yes" xml:space="preserve">
          <source>Copies an integer into the given SV, also updating its string value. Does not handle 'set' magic. See &lt;code&gt;sv_setpviv_mg&lt;/code&gt; .</source>
          <target state="translated">将整数复制到给定的SV中，同时也更新其字符串值。不处理&amp;ldquo;定型&amp;rdquo;魔法。参见 &lt;code&gt;sv_setpviv_mg&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="00c29852534f30e2ae4ff46e83a4cb8a255e227c" translate="yes" xml:space="preserve">
          <source>Copies an integer into the given SV, upgrading first if necessary. Does not handle 'set' magic. See also &lt;code&gt;&lt;a href=&quot;#sv_setiv_mg&quot;&gt;&quot;sv_setiv_mg&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将整数复制到给定的SV中，如有必要，请先进行升级。不处理&amp;ldquo;定型&amp;rdquo;魔法。另请参见 &lt;code&gt;&lt;a href=&quot;#sv_setiv_mg&quot;&gt;&quot;sv_setiv_mg&quot;&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1f2eb4580cc9eaa76949e7acc7122330f226683c" translate="yes" xml:space="preserve">
          <source>Copies an integer into the given SV, upgrading first if necessary. Does not handle 'set' magic. See also &lt;code&gt;sv_setiv_mg&lt;/code&gt; .</source>
          <target state="translated">将整数复制到给定的SV中，必要时先进行升级。不处理&amp;ldquo;定型&amp;rdquo;魔法。另请参见 &lt;code&gt;sv_setiv_mg&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9a3984d0cef29ac256b94baf888dc25a6bab8951" translate="yes" xml:space="preserve">
          <source>Copies an unsigned integer into a new SV, optionally blessing the SV. The &lt;code&gt;rv&lt;/code&gt; argument will be upgraded to an RV. That RV will be modified to point to the new SV. The &lt;code&gt;classname&lt;/code&gt; argument indicates the package for the blessing. Set &lt;code&gt;classname&lt;/code&gt; to &lt;code&gt;NULL&lt;/code&gt; to avoid the blessing. The new SV will have a reference count of 1, and the RV will be returned.</source>
          <target state="translated">将无符号整数复制到新的SV中，可以选择祝福SV。该 &lt;code&gt;rv&lt;/code&gt; 参数将被升级为RV。该RV将被修改为指向新的SV。在 &lt;code&gt;classname&lt;/code&gt; 参数指示包的祝福。将 &lt;code&gt;classname&lt;/code&gt; 设置为 &lt;code&gt;NULL&lt;/code&gt; 以避免加持。新的SV的参考计数为1，并且将返回RV。</target>
        </trans-unit>
        <trans-unit id="bf21fd661c0e322e6f19efa95b15c51044cd7011" translate="yes" xml:space="preserve">
          <source>Copies an unsigned integer into the given SV, upgrading first if necessary. Does not handle 'set' magic. See also &lt;code&gt;&lt;a href=&quot;#sv_setuv_mg&quot;&gt;&quot;sv_setuv_mg&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将无符号整数复制到给定的SV中，如有必要，请先进行升级。不处理&amp;ldquo;定型&amp;rdquo;魔法。另请参见 &lt;code&gt;&lt;a href=&quot;#sv_setuv_mg&quot;&gt;&quot;sv_setuv_mg&quot;&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="817708bbdae5a3bc2e1729daf57c7384a8ed11df" translate="yes" xml:space="preserve">
          <source>Copies an unsigned integer into the given SV, upgrading first if necessary. Does not handle 'set' magic. See also &lt;code&gt;sv_setuv_mg&lt;/code&gt; .</source>
          <target state="translated">将无符号整数复制到给定的SV中，必要时先进行升级。不处理&amp;ldquo;定型&amp;rdquo;魔法。另请参见 &lt;code&gt;sv_setuv_mg&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f42b69b0be33ffa2663dc670be8d62b1f6b76a37" translate="yes" xml:space="preserve">
          <source>Copies each directory tree of %from_to to its corresponding value preserving timestamps and permissions.</source>
          <target state="translated">将%from_to的每个目录树复制到相应的值上,保留时间戳和权限。</target>
        </trans-unit>
        <trans-unit id="547ef09412d01381bdd77f45cd22559f6b5f129c" translate="yes" xml:space="preserve">
          <source>Copies each key of %from_to to its corresponding value efficiently. Filenames with the extension .pm are autosplit into the $autosplit_dir. Any destination directories are created.</source>
          <target state="translated">高效地将%from_to中的每个键复制到相应的值。扩展名为.pm的文件名会自动分割到$autosplit_dir中。任何目标目录都会被创建。</target>
        </trans-unit>
        <trans-unit id="846bdfea43a2a2af6a08ab0e57282654afad7efa" translate="yes" xml:space="preserve">
          <source>Copies each key of %from_to to its corresponding value efficiently. If an $autosplit_dir is provided, all .pm files will be autosplit into it. Any destination directories are created.</source>
          <target state="translated">将%from_to中的每个键有效地复制到相应的值中。如果提供了$autosplit_dir,所有的.pm文件将被自动分割到它里面。任何目标目录都会被创建。</target>
        </trans-unit>
        <trans-unit id="8b4556d985cc8c666fe1310a61eb0e2bd704d901" translate="yes" xml:space="preserve">
          <source>Copies sources to the destination. Multiple sources are allowed if destination is an existing directory.</source>
          <target state="translated">将源文件复制到目的地。如果目的地是一个现有的目录,则允许多个来源。</target>
        </trans-unit>
        <trans-unit id="22aa8bfe9c7cb3953e35f5697eea8150b160ffab" translate="yes" xml:space="preserve">
          <source>Copies the contents of the source SV &lt;code&gt;ssv&lt;/code&gt; into the destination SV &lt;code&gt;dsv&lt;/code&gt; . The source SV may be destroyed if it is mortal, so don't use this function if the source SV needs to be reused. Does not handle 'set' magic on destination SV. Calls 'get' magic on source SV. Loosely speaking, it performs a copy-by-value, obliterating any previous content of the destination.</source>
          <target state="translated">将源SV &lt;code&gt;ssv&lt;/code&gt; 的内容复制到目标SV &lt;code&gt;dsv&lt;/code&gt; 中。如果源SV是致命的，则它可能会被破坏，因此，如果需要重新使用源SV，请不要使用此功能。不处理目标SV上的&amp;ldquo;设置&amp;rdquo;魔法。在源SV上调用&amp;ldquo;获取&amp;rdquo;魔法。松散地说，它执行按值复制，抹去了目标的所有先前内容。</target>
        </trans-unit>
        <trans-unit id="60fc994ce68e4c7b21a4843b708d86bf7c3db663" translate="yes" xml:space="preserve">
          <source>Copies the contents of the source SV &lt;code&gt;ssv&lt;/code&gt; into the destination SV &lt;code&gt;dsv&lt;/code&gt; . The source SV may be destroyed if it is mortal, so don't use this function if the source SV needs to be reused. Does not handle 'set' magic. Loosely speaking, it performs a copy-by-value, obliterating any previous content of the destination. If the &lt;code&gt;flags&lt;/code&gt; parameter has the &lt;code&gt;SV_GMAGIC&lt;/code&gt; bit set, will &lt;code&gt;mg_get&lt;/code&gt; on &lt;code&gt;ssv&lt;/code&gt; if appropriate, else not. If the &lt;code&gt;flags&lt;/code&gt; parameter has the &lt;code&gt;SV_NOSTEAL&lt;/code&gt; bit set then the buffers of temps will not be stolen. &amp;lt;sv_setsv&amp;gt; and &lt;code&gt;sv_setsv_nomg&lt;/code&gt; are implemented in terms of this function.</source>
          <target state="translated">将源SV &lt;code&gt;ssv&lt;/code&gt; 的内容复制到目标SV &lt;code&gt;dsv&lt;/code&gt; 中。如果源SV是致命的，则它可能会被破坏，因此，如果需要重新使用源SV，请不要使用此功能。不处理&amp;ldquo;定型&amp;rdquo;魔法。松散地说，它执行按值复制，抹去了目标的所有先前内容。如果 &lt;code&gt;flags&lt;/code&gt; 参数设置了 &lt;code&gt;SV_GMAGIC&lt;/code&gt; 位，则在适当的情况下将在 &lt;code&gt;mg_get&lt;/code&gt; 上进行 &lt;code&gt;ssv&lt;/code&gt; ，否则不进行。如果 &lt;code&gt;flags&lt;/code&gt; 参数将 &lt;code&gt;SV_NOSTEAL&lt;/code&gt; 位置1，则临时缓冲区将不会被盗。 &amp;lt;sv_setsv&amp;gt;和 &lt;code&gt;sv_setsv_nomg&lt;/code&gt; 是根据此功能实现的。</target>
        </trans-unit>
        <trans-unit id="bfd4ac89279f1d7ef22b929b0fc9f1db3272fc1c" translate="yes" xml:space="preserve">
          <source>Copies the contents of the source SV &lt;code&gt;ssv&lt;/code&gt; into the destination SV &lt;code&gt;dsv&lt;/code&gt;. The source SV may be destroyed if it is mortal, so don't use this function if the source SV needs to be reused. Does not handle 'set' magic on destination SV. Calls 'get' magic on source SV. Loosely speaking, it performs a copy-by-value, obliterating any previous content of the destination.</source>
          <target state="translated">将源SV &lt;code&gt;ssv&lt;/code&gt; 的内容复制到目标SV &lt;code&gt;dsv&lt;/code&gt; 中。如果源SV是致命的，则它可能会被破坏，因此如果需要重新使用源SV，请不要使用此功能。不处理目标SV上的&amp;ldquo;设置&amp;rdquo;魔法。在源SV上调用&amp;ldquo;获取&amp;rdquo;魔法。松散地说，它执行按值复制，抹去了目的地的所有先前内容。</target>
        </trans-unit>
        <trans-unit id="0f5d08695c3b8b6e6fe3ea6463bfc7eb79623e32" translate="yes" xml:space="preserve">
          <source>Copies the contents of the source SV &lt;code&gt;ssv&lt;/code&gt; into the destination SV &lt;code&gt;dsv&lt;/code&gt;. The source SV may be destroyed if it is mortal, so don't use this function if the source SV needs to be reused. Does not handle 'set' magic. Loosely speaking, it performs a copy-by-value, obliterating any previous content of the destination. If the &lt;code&gt;flags&lt;/code&gt; parameter has the &lt;code&gt;SV_GMAGIC&lt;/code&gt; bit set, will &lt;code&gt;mg_get&lt;/code&gt; on &lt;code&gt;ssv&lt;/code&gt; if appropriate, else not. If the &lt;code&gt;flags&lt;/code&gt; parameter has the &lt;code&gt;SV_NOSTEAL&lt;/code&gt; bit set then the buffers of temps will not be stolen. &lt;code&gt;sv_setsv&lt;/code&gt; and &lt;code&gt;sv_setsv_nomg&lt;/code&gt; are implemented in terms of this function.</source>
          <target state="translated">将源SV &lt;code&gt;ssv&lt;/code&gt; 的内容复制到目标SV &lt;code&gt;dsv&lt;/code&gt; 中。如果源SV是致命的，则它可能会被破坏，因此如果需要重新使用源SV，请不要使用此功能。不处理&amp;ldquo;定型&amp;rdquo;魔法。松散地说，它执行按值复制，抹去了目的地的所有先前内容。如果 &lt;code&gt;flags&lt;/code&gt; 参数有 &lt;code&gt;SV_GMAGIC&lt;/code&gt; 位设置，将 &lt;code&gt;mg_get&lt;/code&gt; 上 &lt;code&gt;ssv&lt;/code&gt; 如果合适，否则不行。如果 &lt;code&gt;flags&lt;/code&gt; 参数将 &lt;code&gt;SV_NOSTEAL&lt;/code&gt; 位置1，则临时缓冲区将不会被盗。 &lt;code&gt;sv_setsv&lt;/code&gt; 和 &lt;code&gt;sv_setsv_nomg&lt;/code&gt; 是根据此功能实现的。</target>
        </trans-unit>
        <trans-unit id="847212512bee6cfe3c2fc61106e5643ef825dc7e" translate="yes" xml:space="preserve">
          <source>Copies the files that are the keys in %src to the $dest_dir. %src is typically returned by the maniread() function.</source>
          <target state="translated">将%src中的文件复制到$dest_dir中。%src 通常由 maniread()函数返回。</target>
        </trans-unit>
        <trans-unit id="044df6f54a0ed69d56933cce4e18e906d8d34a2e" translate="yes" xml:space="preserve">
          <source>Copies the magic from one SV to another. See &lt;code&gt;&lt;a href=&quot;#sv_magic&quot;&gt;&quot;sv_magic&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将魔术从一个SV复制到另一个。参见 &lt;code&gt;&lt;a href=&quot;#sv_magic&quot;&gt;&quot;sv_magic&quot;&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1e68b585bfbe265f09cd9d4efb3e0feed1b83417" translate="yes" xml:space="preserve">
          <source>Copies the magic from one SV to another. See &lt;code&gt;sv_magic&lt;/code&gt; .</source>
          <target state="translated">将魔术从一个SV复制到另一个。参见 &lt;code&gt;sv_magic&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="844182ad4ab003932666f9c6d69d92cbb8e46845" translate="yes" xml:space="preserve">
          <source>Coping with duplicate mappings</source>
          <target state="translated">应对重复的映射</target>
        </trans-unit>
        <trans-unit id="af74f7c5362aaee985bf8cda3dd75fc80751ce51" translate="yes" xml:space="preserve">
          <source>Copy</source>
          <target state="translated">Copy</target>
        </trans-unit>
        <trans-unit id="10cde56ca7c49175bf1a8d45b0645111f523dc1c" translate="yes" xml:space="preserve">
          <source>Copy C files</source>
          <target state="translated">复制C文件</target>
        </trans-unit>
        <trans-unit id="82e1de5d54543510504259bd75e1005b5001c11a" translate="yes" xml:space="preserve">
          <source>Copy Constructor</source>
          <target state="translated">复制构造函数</target>
        </trans-unit>
        <trans-unit id="5534252cfc67f8ea30c5aeb4b712455aa3844020" translate="yes" xml:space="preserve">
          <source>Copy files or filehandles</source>
          <target state="translated">复制文件或文件柄</target>
        </trans-unit>
        <trans-unit id="8f8861ebe6be1c187f524367a7e8796012ce6621" translate="yes" xml:space="preserve">
          <source>Copy it from there to %PlatformSDKDir%\Bin</source>
          <target state="translated">从那里复制到%PlatformSDKDir%/Bin。</target>
        </trans-unit>
        <trans-unit id="352f0bd6f1cdae18ed953337da21951855d0f9a6" translate="yes" xml:space="preserve">
          <source>Copy method did not return a reference</source>
          <target state="translated">复制方法没有返回一个引用</target>
        </trans-unit>
        <trans-unit id="262ea28b5df50512a45d54b1fa1054f3be93e5d2" translate="yes" xml:space="preserve">
          <source>Copy on Write</source>
          <target state="translated">抄写</target>
        </trans-unit>
        <trans-unit id="d970d36bc75453aa42adc5b64a75a188af0598ee" translate="yes" xml:space="preserve">
          <source>Copy some of the magic from an existing SV to new localized version of that SV. Container magic (</source>
          <target state="translated">将现有SV中的部分魔法复制到该SV的新本地化版本中。容器魔法 (</target>
        </trans-unit>
        <trans-unit id="a4bc97f3ddf500700682ce93b45d0b65e29cc177" translate="yes" xml:space="preserve">
          <source>Copy some of the magic from an existing SV to new localized version of that SV. Container magic (eg %ENV, $1, tie) gets copied, value magic doesn't (eg taint, pos).</source>
          <target state="translated">从现有的SV中复制一些魔法到该SV的新的本地化版本。容器魔法(例如 %ENV,$1,tie)会被复制,值魔法不会(例如 taint,pos)。</target>
        </trans-unit>
        <trans-unit id="42604f529925528ec27a34a4e43701bf63839bc5" translate="yes" xml:space="preserve">
          <source>Copy the internal log into the supplied buffer:</source>
          <target state="translated">将内部日志复制到提供的缓冲区中。</target>
        </trans-unit>
        <trans-unit id="6d73bd4397739daf068f0e0c81f47887b133737c" translate="yes" xml:space="preserve">
          <source>Copy the miniperl executable from the native build done earlier to replace the cross compiled miniperl.</source>
          <target state="translated">将之前完成的原生构建中的miniperl可执行文件复制过来,替换交叉编译的miniperl。</target>
        </trans-unit>
        <trans-unit id="944d3ba1daacc35a1c39f04db6c6016f8a5e0184" translate="yes" xml:space="preserve">
          <source>Copy your Perl executable to a BS2000 LLM using bs2cp:</source>
          <target state="translated">使用bs2cp将Perl可执行文件复制到BS2000 LLM中。</target>
        </trans-unit>
        <trans-unit id="2d7ed2211bbc181246d723daf7d8159780f901a4" translate="yes" xml:space="preserve">
          <source>Copy your header files and C files to this directory</source>
          <target state="translated">将你的头文件和C文件复制到这个目录下。</target>
        </trans-unit>
        <trans-unit id="be72b9f84ea202319d1aaeea02d8c8fc9a6e56b3" translate="yes" xml:space="preserve">
          <source>CopyD</source>
          <target state="translated">CopyD</target>
        </trans-unit>
        <trans-unit id="92a77adaed078f2efbdf1b062b243fce26d45fb9" translate="yes" xml:space="preserve">
          <source>CopyFile</source>
          <target state="translated">CopyFile</target>
        </trans-unit>
        <trans-unit id="c335801fea1f2d1dbebf6f8eeca0204e33a6e925" translate="yes" xml:space="preserve">
          <source>CopyFileW</source>
          <target state="translated">CopyFileW</target>
        </trans-unit>
        <trans-unit id="28830f956cb6be1523be78bd0ea03d1e23d2db4f" translate="yes" xml:space="preserve">
          <source>Copying and distribution of this file, with or without modification, are permitted in any medium without royalty provided the copyright notice and this notice are preserved. This file is offered as-is, without any warranty.</source>
          <target state="translated">允许在任何媒体上复制和分发本文件,无论是否修改,只要保留版权声明和本声明,就不收取版权费。本文件按原样提供,不作任何保证。</target>
        </trans-unit>
        <trans-unit id="704f751eff0d0b505d7bf92d8e801e4d308664b6" translate="yes" xml:space="preserve">
          <source>Copying and pasting code without understanding it, while superstitiously believing in its value. This term originated from preindustrial cultures dealing with the detritus of explorers and colonizers of technologically advanced cultures. See</source>
          <target state="translated">在不了解代码的情况下复制和粘贴代码,同时迷信其价值。这个词起源于工业化前的文化,处理技术先进文化的探险家和殖民者的残渣。见</target>
        </trans-unit>
        <trans-unit id="f48221dc8de0edb298f93c3d9ea0b286f39f81ac" translate="yes" xml:space="preserve">
          <source>Copying private information out of your system. Even something as simple as your user name is of value to others. Much useful information could be gleaned from your environment variables for example.</source>
          <target state="translated">将私人信息从系统中复制出来。即使是像你的用户名这样简单的东西,对其他人也是有价值的。许多有用的信息可以从你的环境变量中收集,例如:。</target>
        </trans-unit>
        <trans-unit id="ba61f765e33a7dbdaa5dc699f7442584180fbf0c" translate="yes" xml:space="preserve">
          <source>Copyright &amp;copy; 2012 Tom Christiansen.</source>
          <target state="translated">版权所有&amp;copy;2012 Tom Christiansen。</target>
        </trans-unit>
        <trans-unit id="937d2f60d09c53d79a1381de58ec4983d7faadb3" translate="yes" xml:space="preserve">
          <source>Copyright (C) 1990-2011 by Larry Wall and others.</source>
          <target state="translated">Copyright (C)1990-2011 by Larry Wall and others.</target>
        </trans-unit>
        <trans-unit id="fb8450e1f5cfd8fc44ca561023832e2026e0d699" translate="yes" xml:space="preserve">
          <source>Copyright (C) 1990-2012 by Larry Wall and others.</source>
          <target state="translated">Copyright (C)1990-2012 by Larry Wall and others.</target>
        </trans-unit>
        <trans-unit id="866e8b342f220185b06062e3c92301f53f840c56" translate="yes" xml:space="preserve">
          <source>Copyright (C) 1991-2, RSA Data Security, Inc. Created 1991. All rights reserved.</source>
          <target state="translated">Copyright (C)1991-2,RSA Data Security,Inc.1991年创建。保留所有权利。</target>
        </trans-unit>
        <trans-unit id="ce84d927d25243b7f0ba50259fa0282961655ce2" translate="yes" xml:space="preserve">
          <source>Copyright (C) 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006 by Larry Wall and others</source>
          <target state="translated">版权(C)1993年、1994年、1995年、1996年、1997年、1998年、1999年、2000年、2001年、2002年、2003年、2004年、2005年、2006年,作者:Larry Wall和其他人。</target>
        </trans-unit>
        <trans-unit id="8fd1a6d880564bdc3ea1e763f953df5ebac7e46e" translate="yes" xml:space="preserve">
          <source>Copyright (C) 1994-2013 Larry Wall</source>
          <target state="translated">Copyright (C)1994-2013 Larry Wall</target>
        </trans-unit>
        <trans-unit id="1c0c559930ca4225e8816cff4ee2873c1c41a1ac" translate="yes" xml:space="preserve">
          <source>Copyright (C) 1995, 1996, 1997, 1998 Doug MacEachern and Jon Orwant. All Rights Reserved.</source>
          <target state="translated">(C)1995,1996,1997,1998 Doug MacEachern and Jon Orwant.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="7753d654bde6f35fbc641ca93c36723f4450d986" translate="yes" xml:space="preserve">
          <source>Copyright (C) 1995-1997 Graham Barr. All rights reserved.</source>
          <target state="translated">Copyright (C)1995-1997 Graham Barr.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="41e6822b76c3ea6316f06f0f3f825f11c9d89a53" translate="yes" xml:space="preserve">
          <source>Copyright (C) 1995-1998 Graham Barr. All rights reserved.</source>
          <target state="translated">Copyright (C)1995-1998 Graham Barr.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="6877a06b4904ba628ac816ce402dd1d4d2264364" translate="yes" xml:space="preserve">
          <source>Copyright (C) 1995-2004 Graham Barr. All rights reserved.</source>
          <target state="translated">Copyright (C)1995-2004 Graham Barr.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="857fb05adcf7c1dddb22d4d67a1472d9f664056c" translate="yes" xml:space="preserve">
          <source>Copyright (C) 1995-2006 Graham Barr. All rights reserved.</source>
          <target state="translated">Copyright (C)1995-2006 Graham Barr.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="292274a2b01d4df1c901b9114cee5b641d729f45" translate="yes" xml:space="preserve">
          <source>Copyright (C) 1996-2002,2005,2006 David Muir Sharnoff. Copyright (C) 2005 Aristotle Pagaltzis Copyright (C) 2012-2013 Google, Inc. This module may be modified, used, copied, and redistributed at your own risk. Although allowed by the preceding license, please do not publicly redistribute modified versions of this code with the name &quot;Text::Tabs&quot; unless it passes the unmodified Text::Tabs test suite.</source>
          <target state="translated">Copyright (C)1996-2002,2005,2006 David Muir Sharnoff.Copyright (C)2005 Aristotle Pagaltzis Copyright (C)2012-2013 Google,Inc.本模块可被修改,使用,复制和再分配,风险自负。尽管前述许可允许,但请不要公开以 &quot;Text::Tabs &quot;为名重新发布修改后的代码,除非它通过了未修改的Text::Tabs测试套件。</target>
        </trans-unit>
        <trans-unit id="02bb538e3acc9fba7e66a4108eaa2f54189885d2" translate="yes" xml:space="preserve">
          <source>Copyright (C) 1996-2009 David Muir Sharnoff. Copyright (C) 2012-2013 Google, Inc. This module may be modified, used, copied, and redistributed at your own risk. Although allowed by the preceding license, please do not publicly redistribute modified versions of this code with the name &quot;Text::Wrap&quot; unless it passes the unmodified Text::Wrap test suite.</source>
          <target state="translated">Copyright (C)1996-2009 David Muir Sharnoff.Copyright (C)2012-2013 Google,Inc.本模块可被修改、使用、复制和重新分发,风险自负。尽管前述许可允许,但请不要公开重新发布修改后的代码,并将其命名为 &quot;Text::Wrap&quot;,除非它通过了未修改的Text::Wrap测试套件。</target>
        </trans-unit>
        <trans-unit id="77d8ad6518ef8e3ffa4a429ac08f118904c382ac" translate="yes" xml:space="preserve">
          <source>Copyright (C) 1997, 1999 Tom Phoenix</source>
          <target state="translated">版权所有 (C)1997,1999 Tom Phoenix</target>
        </trans-unit>
        <trans-unit id="1083441a53a840968b1bebc2c93ec7991242dee9" translate="yes" xml:space="preserve">
          <source>Copyright (C) 1997-1998 Graham Barr. All rights reserved.</source>
          <target state="translated">Copyright (C)1997-1998 Graham Barr.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="be9f862b37f5ff7749d0f77ebafa51e2d36343e3" translate="yes" xml:space="preserve">
          <source>Copyright (C) 1997-1998 Graham Barr. All rights reserved. This document is free; you can redistribute it and/or modify it under the terms of the Artistic License.</source>
          <target state="translated">Copyright (C)1997-1998 Graham Barr.保留所有权利。本文件是免费的;你可以在艺术许可证的条款下重新发布和/或修改它。</target>
        </trans-unit>
        <trans-unit id="67e16ccb30ea63aa1d756ce57f18d2d7b5847ff8" translate="yes" xml:space="preserve">
          <source>Copyright (C) 1998, 2002, 2003 Jon Orwant. All Rights Reserved.</source>
          <target state="translated">Copyright (C)1998,2002,2003 Jon Orwant.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="2f3882c23e70d777b1c7cf53d7458484280606e5" translate="yes" xml:space="preserve">
          <source>Copyright (C) 1998-2011 Graham Barr. All rights reserved.</source>
          <target state="translated">Copyright (C)1998-2011 Graham Barr.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="ac17252dff0b280d0c8f5d0cae17c03cf4f1f4e7" translate="yes" xml:space="preserve">
          <source>Copyright (C) 2001 Tim Jenness All Rights Reserved. This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">Copyright (C)2001 Tim Jenness All Rights Reserved.这个程序是自由软件;你可以在与Perl本身相同的条款下重新发布它和/或修改它。</target>
        </trans-unit>
        <trans-unit id="b56e1884f3cbf3a76b762137b786be31a436b8d8" translate="yes" xml:space="preserve">
          <source>Copyright (C) 2002,2004 Tim Jenness, Christian Soeller, Hugo van der Sanden. All Rights Reserved.</source>
          <target state="translated">版权(C)2002,2004 Tim Jenness,Christian Soeller,Hugo van der Sanden.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="b90a8995c2bc16a451a02631a6a11820b0642403" translate="yes" xml:space="preserve">
          <source>Copyright (C) 2002-2009 Richard Clamp. All Rights Reserved.</source>
          <target state="translated">Copyright (C)2002-2009 Richard Clamp.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="066dc5f0420738b9ed994bc87aed4131e1192b32" translate="yes" xml:space="preserve">
          <source>Copyright (C) 2003-2015 Mark Shelor</source>
          <target state="translated">版权所有 (C)2003-2015 马克-谢勒</target>
        </trans-unit>
        <trans-unit id="aeee9599c383e12d06e553cf6c3403d56e08b09d" translate="yes" xml:space="preserve">
          <source>Copyright (C) 2003-2018 Mark Shelor</source>
          <target state="translated">版权所有 (C)2003-2018 马克-谢勒。</target>
        </trans-unit>
        <trans-unit id="0502d4fa0143a2c2aeda7cbf651d8608a825434d" translate="yes" xml:space="preserve">
          <source>Copyright (C) 2003-2018 Mark Shelor &amp;lt;mshelor@cpan.org&amp;gt;.</source>
          <target state="translated">版权所有（C）2003-2018 Mark Shelor &amp;lt;mshelor@cpan.org&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="1c7f20037aad67be66061eee55047374368b5f2e" translate="yes" xml:space="preserve">
          <source>Copyright (C) 2004, 2008 Matthijs van Duin. All rights reserved. Copyright (C) 2014 cPanel Inc. All rights reserved. This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">Copyright (C)2004,2008 Matthijs van Duin.保留所有权利。Copyright (C)2014 cPanel Inc.保留所有权利。本程序是自由软件;您可以在与 Perl 本身相同的条款下重新发布它和/或修改它。</target>
        </trans-unit>
        <trans-unit id="5def902ce53af0d66c9ae0b1a9f55a7bc540b36c" translate="yes" xml:space="preserve">
          <source>Copyright (C) 2006-2007 by (Anno Siegel)</source>
          <target state="translated">版权所有(C)2006-2007年由(Anno Siegel)</target>
        </trans-unit>
        <trans-unit id="f4f599478a7c763fffedd920a5a166712ac6ea8e" translate="yes" xml:space="preserve">
          <source>Copyright (C) 2009 Andrew Main (Zefram) &amp;lt;zefram@fysh.org&amp;gt;</source>
          <target state="translated">版权所有（C）2009 Andrew Main（Zefram）&amp;lt;zefram@fysh.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="2597f7c9797e32e397b520f2e02fb8d631f3e3ed" translate="yes" xml:space="preserve">
          <source>Copyright (C) 2009, 2011</source>
          <target state="translated">Copyright (C)2009,2011</target>
        </trans-unit>
        <trans-unit id="8755b65f04050e00fc905ef449a5227ff56b3960" translate="yes" xml:space="preserve">
          <source>Copyright (C) 2009-2018 H.Merijn Brand</source>
          <target state="translated">Copyright (C)2009-2018 H.Merijn Brand版权所有。</target>
        </trans-unit>
        <trans-unit id="d16dc4251e47686ff5ed08ba79678470456a743a" translate="yes" xml:space="preserve">
          <source>Copyright (C) 2011, 2012, 2013 Andrew Main (Zefram) &amp;lt;zefram@fysh.org&amp;gt;</source>
          <target state="translated">版权所有（C）2011、2012、2013 Andrew Main（Zefram）&amp;lt;zefram@fysh.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="9326d4f57f4fa1c3e9f86b0671cfa7872b37e761" translate="yes" xml:space="preserve">
          <source>Copyright (C) 2013 Chris Williams. All Rights Reserved.</source>
          <target state="translated">Copyright (C)2013 Chris Williams.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="a34a8c3d3fd945b8553d77b9f5cafa050b50ccee" translate="yes" xml:space="preserve">
          <source>Copyright (C) 2013 by Andy Broad.</source>
          <target state="translated">Copyright (C)2013 by Andy Broad.</target>
        </trans-unit>
        <trans-unit id="0551f76556b474feb10743502865de368f761620" translate="yes" xml:space="preserve">
          <source>Copyright (C) 2013-2014 Steve Hay. All rights reserved.</source>
          <target state="translated">Copyright (C)2013-2014 Steve Hay.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="016fd5abd1ea817b47a90095ca3a306b9a33d928" translate="yes" xml:space="preserve">
          <source>Copyright (C) 2013-2014, 2016 Steve Hay. All rights reserved.</source>
          <target state="translated">Copyright (C)2013-2014,2016 Steve Hay.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="93afe488be39b6063bfa0185b33d708710721012" translate="yes" xml:space="preserve">
          <source>Copyright (C) 2013-2016 Steve Hay. All rights reserved.</source>
          <target state="translated">Copyright (C)2013-2016 Steve Hay.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="86d9fdb32937bc9db16969d1b1948baa828b947e" translate="yes" xml:space="preserve">
          <source>Copyright (C) 2013-2017 Steve Hay. All rights reserved.</source>
          <target state="translated">Copyright (C)2013-2017 Steve Hay.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="4bc94f608b1f4e23b4db6754569f00b1355b17fd" translate="yes" xml:space="preserve">
          <source>Copyright (C) 2014 Steve Hay. All rights reserved.</source>
          <target state="translated">Copyright (C)2014 Steve Hay.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="9518f36c932f3c018246afa392632645480f7348" translate="yes" xml:space="preserve">
          <source>Copyright (C)2008 Paul Fenwick</source>
          <target state="translated">(C)2008保罗-芬威克版权所有</target>
        </trans-unit>
        <trans-unit id="4ea3a71dcc2d03195129ea498ff706e80bf76ea5" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1989, 1993 The Regents of the University of California. All rights reserved.</source>
          <target state="translated">Copyright (c)1989,1993 The Regents of the University of California.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="c99e15fbe5fafed3fe83907c942a8467ca2f0856" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1995 Graham Barr &amp;amp; Nick Ing-Simmons. All rights reserved. This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">版权所有（c）1995 Graham Barr＆Nick Ing-Simmons。版权所有。该程序是免费软件；您可以按照与Perl本身相同的条款重新分发和/或修改它。</target>
        </trans-unit>
        <trans-unit id="95d67aab425ae8ab541cdf2624605b8e79d554fe" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1995-2011 Paul Marquess. All rights reserved. Copyright (c) 2011-2014 Reini Urban. All rights reserved.</source>
          <target state="translated">Copyright (c)1995-2011 Paul Marquess.保留所有权利。Copyright (c)2011-2014 Reini Urban.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="3b1e4b28da9d24208be1220cbdcb97feece0e3cc" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1995-2011 Paul Marquess. All rights reserved. Copyright (c) 2011-2014 Reini Urban. All rights reserved. Copyright (c) 2014-2017 cPanel Inc. All rights reserved.</source>
          <target state="translated">Copyright (c)1995-2011 Paul Marquess.保留所有权利。Copyright (c)2011-2014 Reini Urban.保留所有权利。Copyright (c)2014-2017 cPanel Inc.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="f9a66947e2ff3697bb460252be39f2139fd2dfb8" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1995-2012 Paul Marquess. All rights reserved. This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">Copyright (c)1995-2012 Paul Marquess.保留所有权利。本程序是自由软件;你可以在与Perl本身相同的条款下重新发布它和/或修改它。</target>
        </trans-unit>
        <trans-unit id="a331cc5bbf130d1638077c14f80eecf3e2a52eaf" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1995-2014 Paul Marquess. All rights reserved.</source>
          <target state="translated">Copyright (c)1995-2014 Paul Marquess.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="b61425b030b32e8ed61c022396c8c58d243f0944" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1995-2019 Paul Marquess. All rights reserved.</source>
          <target state="translated">Copyright (c)1995-2019 Paul Marquess.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="b7ac532ad19d4f605cd728f4e86e5df193f612bd" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1995-2020 Paul Marquess. All rights reserved. This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">Copyright (c)1995-2020 Paul Marquess.保留所有权利。这个程序是自由软件;你可以在与Perl本身相同的条款下重新发布它和/或修改它。</target>
        </trans-unit>
        <trans-unit id="733de8f3f1ca09b5c9786044fb092e7f4c05f294" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1995-98 Ilya Zakharevich. All rights reserved. This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">Copyright (c)1995-98 Ilya Zakharevich.保留所有权利。这个程序是自由软件;你可以在与Perl本身相同的条款下重新发布它和/或修改它。</target>
        </trans-unit>
        <trans-unit id="df77495d41e20942244bf412d31846952ede8477" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1996 by Eryq. All rights reserved. Copyright (c) 1999,2001 by ZeeGee Software Inc. All rights reserved.</source>
          <target state="translated">Copyright (c)1996 by Eryq.保留所有权利。Copyright (c)1999,2001 by ZeeGee Software Inc.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="ecaed13460704998ba577e4c2d2468a151c24b30" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1996, 1997 Malcolm Beattie Copyright (c) 2008, 2010, 2013, 2014 Reini Urban</source>
          <target state="translated">Copyright (c)1996,1997 Malcolm Beattie Copyright (c)2008,2010,2013,2014 Reini Urban。</target>
        </trans-unit>
        <trans-unit id="1feb9747b49165f4eb65853775088ee0251ff609" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1996-2002 Douglas E. Wegscheid. All rights reserved.</source>
          <target state="translated">Copyright (c)1996-2002 Douglas E.Wegscheid.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="cc400f4ad8917f7b799fd3975597a9810d8ce636" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1996-2014 Gurusamy Sarathy. All rights reserved. This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">Copyright (c)1996-2014 Gurusamy Sarathy.保留所有权利。本程序是自由软件;您可以在与Perl本身相同的条款下重新发布它和/或修改它。</target>
        </trans-unit>
        <trans-unit id="c4372c6404dcb6a5725b8387daab2fc54f5c69b6" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1996-2019 Gurusamy Sarathy. All rights reserved. This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">Copyright (c)1996-2019 Gurusamy Sarathy.保留所有权利。本程序是自由软件;您可以在与Perl本身相同的条款下重新发布它和/或修改它。</target>
        </trans-unit>
        <trans-unit id="485f651d515be5bba642d42e474826a93f61bb6b" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1996-8 Graham Barr &amp;lt;gbarr@pobox.com&amp;gt;. All rights reserved. This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">版权所有（c）1996-8 Graham Barr &amp;lt;gbarr@pobox.com&amp;gt;。版权所有。该程序是免费软件；您可以按照与Perl本身相同的条款重新分发和/或修改它。</target>
        </trans-unit>
        <trans-unit id="08e4cdda088cf550ea65b3bf4dc89aba9b493bbc" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1997-2003 Graham Barr &amp;lt;gbarr@pobox.com&amp;gt;. All rights reserved. This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">版权所有（c）1997-2003 Graham Barr &amp;lt;gbarr@pobox.com&amp;gt;。版权所有。该程序是免费软件；您可以按照与Perl本身相同的条款重新分发和/或修改它。</target>
        </trans-unit>
        <trans-unit id="4887e8376b496893469d0bac43718dbc07ae1822" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1997-2003 Graham Barr, 2003-2007 David Rolsky. All rights reserved. This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">Copyright (c)1997-2003 Graham Barr,2003-2007 David Rolsky.保留所有权利。这个程序是自由软件;你可以在与Perl本身相同的条款下重新发布它和/或修改它。</target>
        </trans-unit>
        <trans-unit id="d7245b2dcd573952f48717b9921c61d1e9b2c21e" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1997-2007 Graham Barr &amp;lt;gbarr@pobox.com&amp;gt;. All rights reserved. This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">版权所有（c）1997-2007 Graham Barr &amp;lt;gbarr@pobox.com&amp;gt;。版权所有。该程序是免费软件；您可以按照与Perl本身相同的条款重新分发和/或修改它。</target>
        </trans-unit>
        <trans-unit id="6d6af5defc144adda44580441213764dbdd5a579" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1997-2010 Tom Christiansen, Nathan Torkington, and other authors as noted. All rights reserved.</source>
          <target state="translated">版权所有(c)1997-2010 Tom Christiansen、Nathan Torkington和其他作者,如有注明。保留所有权利。</target>
        </trans-unit>
        <trans-unit id="96ab04550bbdbe3276e7b627e8ac745ea70c4e50" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1997-2013 Tom Christiansen, Nathan Torkington, and other authors as noted. All rights reserved.</source>
          <target state="translated">版权所有(c)1997-2013 Tom Christiansen,Nathan Torkington,以及其他作者,如有注明。保留所有权利。</target>
        </trans-unit>
        <trans-unit id="b85bffc2f702e5a69d96edf1040c8231c9905e16" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1997-8 Graham Barr &amp;lt;gbarr@pobox.com&amp;gt;. All rights reserved. This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">版权所有（c）1997-8 Graham Barr &amp;lt;gbarr@pobox.com&amp;gt;。版权所有。该程序是免费软件；您可以按照与Perl本身相同的条款重新分发和/或修改它。</target>
        </trans-unit>
        <trans-unit id="f7a94533b6d04a11dc7e8f73fc628424ecae3fb0" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1997-8 Graham Barr. All rights reserved. This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">Copyright (c)1997-8 Graham Barr.保留所有权利。这个程序是自由软件;你可以在与Perl本身相同的条款下重新发布它和/或修改它。</target>
        </trans-unit>
        <trans-unit id="422bbbfa2ebf0ecbc7060450d7441d3ab485a17c" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1998+ Sean M. Burke. All rights reserved.</source>
          <target state="translated">Copyright (c)1998+Sean M.Burke.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="4c5d0fa3fbcbb72648eeb53bb25226cd8e07fc2d" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1998-2000 Joshua Nathaniel Pritikin.</source>
          <target state="translated">Copyright (c)1998-2000 Joshua Nathaniel Pritikin.</target>
        </trans-unit>
        <trans-unit id="f70857aa7efdb3e62785ad1d300160624d1ca8c4" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1998-2004 Sean M. Burke. All rights reserved.</source>
          <target state="translated">Copyright (c)1998-2004 Sean M.Burke.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="7bf33c9fe762000df4df0dfadc70c956cdf17ba0" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1998-2004 Tom Hughes &amp;lt;</source>
          <target state="translated">版权所有（c）1998-2004 Tom Hughes &amp;lt;</target>
        </trans-unit>
        <trans-unit id="e0ae8e826ee43e27b9f80f2f471b56b206c7c868" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1999 Tuomas J. Lukka &amp;lt;lukka@iki.fi&amp;gt;. All rights reserved. This program is free software; you can redistribute it and/or modify it under the same terms as perl itself.</source>
          <target state="translated">版权所有（c）1999 Tuomas J.Lukka &amp;lt;lukka@iki.fi&amp;gt;。版权所有。该程序是免费软件；您可以使用与perl本身相同的术语来重新分发和/或修改它。</target>
        </trans-unit>
        <trans-unit id="a6b26641bc7ea8de46aed22323cf3dc2c633f52e" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1999-2004 Sean M. Burke. All rights reserved.</source>
          <target state="translated">Copyright (c)1999-2004 Sean M.Burke.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="61d2f566b03b65ebb8a473ade4f6c05ec2e7b7d6" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2000 Mark Kvale All rights reserved.</source>
          <target state="translated">Copyright (c)2000 Mark Kvale All rights reserved.</target>
        </trans-unit>
        <trans-unit id="6b673e87d8f650dc2b158ddb165b6c82449af2bd" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2000 Mark Kvale. All rights reserved. Now maintained by Perl porters.</source>
          <target state="translated">Copyright (c)2000 Mark Kvale.保留所有权利。现在由 Perl 移植者维护。</target>
        </trans-unit>
        <trans-unit id="956588c9cff385547adb21a72fd25e005bd741ba" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2001+ Sean M. Burke. All rights reserved.</source>
          <target state="translated">Copyright (c)2001+Sean M.Burke.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="101703b452cff466c3017bb8ed36a01aa5987d0f" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2001, Colin McMillen. All rights reserved.</source>
          <target state="translated">Copyright (c)2001,Colin McMillen.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="4be1efc0ccc0981f45abf323878167441401a846" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2001-2002 Michael G. Schwern.</source>
          <target state="translated">Copyright (c)2001-2002 Michael G.Schwern.</target>
        </trans-unit>
        <trans-unit id="745610c91808a145be6f46517082d4e57524612c" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2001-2004 Sean M. Burke. All rights reserved.</source>
          <target state="translated">Copyright (c)2001-2004 Sean M.Burke.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="a0d7b58f298fb119d28129c1f5191e2b7fc5f22e" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2001-2015, brian d foy, All Rights Reserved.</source>
          <target state="translated">Copyright (c)2001-2015,brian d foy,All Rights Reserved.</target>
        </trans-unit>
        <trans-unit id="4d2e5910aa37852371584102aaa9bb817151d32c" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2001-2018, brian d foy, All Rights Reserved.</source>
          <target state="translated">Copyright (c)2001-2018,brian d foy,All Rights Reserved.</target>
        </trans-unit>
        <trans-unit id="943b9de4d5b00b8ab9c8008e42e2cad2c939e815" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2002 Sean M. Burke.</source>
          <target state="translated">Copyright (c)2002 Sean M.Burke.</target>
        </trans-unit>
        <trans-unit id="27329c3ca1bd874414fcb99c62900358075672d6" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2002 Sean M. Burke. All rights reserved.</source>
          <target state="translated">Copyright (c)2002 Sean M.Burke.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="2b28a7c47cb1fc722aa93ca95ba51f4648d81356" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2002, 2003, 2004, 2005, 2006, 2007, 2008 Jarkko Hietaniemi. All rights reserved.</source>
          <target state="translated">版权(c)2002、2003、2004、2005、2006、2007、2008 Jarkko Hietaniemi。保留所有权利。</target>
        </trans-unit>
        <trans-unit id="999355b8d02ad239f1c7f43da46147f2a00c43e4" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2002, 2003, 2004, 2012 Elizabeth Mattijsen. All rights reserved. This library is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">Copyright (c)2002,2003,2004,2012 Elizabeth Mattijsen.保留所有权利。这个库是自由软件;你可以在与Perl本身相同的条款下重新发布它和/或修改它。</target>
        </trans-unit>
        <trans-unit id="baaf0433379f30ce563209428329e2d5328a5310" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2002,3,4 Sean M. Burke. All rights reserved.</source>
          <target state="translated">Copyright (c)2002,3,4 Sean M.Burke.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="bfb8ae6b5304e536dda7306d8f5e5b4e96abc310" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2002-2003, Rob Brown. All rights reserved.</source>
          <target state="translated">Copyright (c)2002-2003,Rob Brown.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="d3cf30d649786ddcd606f40863280a1c98090473" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2002-2004 Sean M. Burke.</source>
          <target state="translated">Copyright (c)2002-2004 Sean M.Burke.</target>
        </trans-unit>
        <trans-unit id="370a5e83a0a375fc863482e0f23b23bcc8829b4b" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2002-2007 Sean M. Burke.</source>
          <target state="translated">Copyright (c)2002-2007 Sean M.Burke.</target>
        </trans-unit>
        <trans-unit id="d20f5965d8d31028f9af0d7c9c2319d612d7cf7c" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2002-2007 by D.H. aka PodMaster</source>
          <target state="translated">Copyright (c)2002-2007 by D.H.aka PodMaster.</target>
        </trans-unit>
        <trans-unit id="1a96f1bac6842e525db311ea1fddc129e4e8347c" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2003-2005 Allison Randal.</source>
          <target state="translated">Copyright (c)2003-2005 Allison Randal.</target>
        </trans-unit>
        <trans-unit id="739c0eceb4f80af2e4cb7f48ed65f0a345752cc6" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2003-2005 Ken Williams. All rights reserved.</source>
          <target state="translated">Copyright (c)2003-2005 Ken Williams.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="2afe6350b059d07cb75bd42fe8c3e717187f030d" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2003-2015 Mark Shelor &amp;lt;mshelor@cpan.org&amp;gt;.</source>
          <target state="translated">版权所有（c）2003-2015 Mark Shelor &amp;lt;mshelor@cpan.org&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="8cbc77258020bb73d4d2613484c0c85b25c299f1" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2004 Sean M. Burke.</source>
          <target state="translated">Copyright (c)2004 Sean M.Burke.</target>
        </trans-unit>
        <trans-unit id="68da7dd6a77efed4cbb3653f046ac6a3a62b384b" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2004 by the Perl 5 Porters. All rights reserved.</source>
          <target state="translated">Copyright (c)2004 by the Perl 5 Porters.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="81397d758a65133b90ab0602bb70a5a4dd4563d7" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2004,2007 by the Perl 5 Porters. All rights reserved.</source>
          <target state="translated">Copyright (c)2004,2007 by the Perl 5 Porters.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="3c8167cf442af8fc4f64de836da6cfdb60bde4e8" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2004-14 by the Perl 5 Porters. All rights reserved.</source>
          <target state="translated">Copyright (c)2004-14 by the Perl 5 Porters.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="6b274ec54ed3e9fc14376e565d4163bda3b1ca64" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2004-2005 Nokia. All rights reserved.</source>
          <target state="translated">Copyright (c)2004-2005 Nokia.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="00c3184f7198be0bfec2c01f0ef09d44048c6235" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2004-2013 by the Perl 5 Porters. All rights reserved.</source>
          <target state="translated">Copyright (c)2004-2013 by the Perl 5 Porters.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="08da8c434007b220b2ae85c8f6ae67bced13a749" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2005 Paul Marquess. All rights reserved. This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">Copyright (c)2005 Paul Marquess.保留所有权利。这个程序是自由软件;你可以在与Perl本身相同的条款下重新发布它和/或修改它。</target>
        </trans-unit>
        <trans-unit id="626531bda13f14d08f7f1720b4b85c8df8972de4" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2005-2014 Paul Marquess. All rights reserved.</source>
          <target state="translated">Copyright (c)2005-2014 Paul Marquess.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="7067bb260cbe9d156e966bd0d89cda731173e719" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2005-2019 Paul Marquess. All rights reserved.</source>
          <target state="translated">Copyright (c)2005-2019 Paul Marquess.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="f4b7861e56dd95d2fb72c43ec9bcffc12d2604f4" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2006-2007 Jarkko Hietaniemi.</source>
          <target state="translated">Copyright (c)2006-2007 Jarkko Hietaniemi.</target>
        </trans-unit>
        <trans-unit id="ca4bb54bc6b524ec7b6211da633ce092f06642b6" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2007-10 Max Maischein &lt;code&gt;&amp;lt;corion@cpan.org&amp;gt;&lt;/code&gt; Based on the idea of &lt;code&gt;base.pm&lt;/code&gt; , which was introduced with Perl 5.004_04.</source>
          <target state="translated">版权（C）2007-10最大Maischein &lt;code&gt;&amp;lt;corion@cpan.org&amp;gt;&lt;/code&gt; 基于的想法 &lt;code&gt;base.pm&lt;/code&gt; ，将其用Perl 5.004_04引入。</target>
        </trans-unit>
        <trans-unit id="99b55113ec04a69f163df98ad79820c69bf73427" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2007-2011, Andy Armstrong &lt;code&gt;&amp;lt;andy@hexten.net&amp;gt;&lt;/code&gt; . All rights reserved.</source>
          <target state="translated">版权所有（c）2007-2011，Andy Armstrong &lt;code&gt;&amp;lt;andy@hexten.net&amp;gt;&lt;/code&gt; 。版权所有。</target>
        </trans-unit>
        <trans-unit id="6a55e4c26d6630b98cecfc85f608ab5cf48d4519" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2007-2011, Andy Armstrong &lt;code&gt;&amp;lt;andy@hexten.net&amp;gt;&lt;/code&gt;. All rights reserved.</source>
          <target state="translated">版权所有（c）2007-2011，Andy Armstrong &lt;code&gt;&amp;lt;andy@hexten.net&amp;gt;&lt;/code&gt; 。版权所有。</target>
        </trans-unit>
        <trans-unit id="7703f636c33f5dfb9894245718a8a216d831820b" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2007-2017 Max Maischein &lt;code&gt;&amp;lt;corion@cpan.org&amp;gt;&lt;/code&gt; Based on the idea of &lt;code&gt;base.pm&lt;/code&gt;, which was introduced with Perl 5.004_04.</source>
          <target state="translated">版权（C）2007年至2017年最大Maischein &lt;code&gt;&amp;lt;corion@cpan.org&amp;gt;&lt;/code&gt; 基于的想法 &lt;code&gt;base.pm&lt;/code&gt; ，将其用Perl 5.004_04引入。</target>
        </trans-unit>
        <trans-unit id="edf65b9e5034d506f64cda4d822d94cf071d2118" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2008 Graham Barr &amp;lt;gbarr@pobox.com&amp;gt;. All rights reserved. This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">版权所有（c）2008 Graham Barr &amp;lt;gbarr@pobox.com&amp;gt;。版权所有。该程序是免费软件；您可以按照与Perl本身相同的条款重新分发和/或修改它。</target>
        </trans-unit>
        <trans-unit id="ed957028639d6d4c042dc0481e28ac4f7c14da8c" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2011 Mark Allen. All rights reserved.</source>
          <target state="translated">Copyright (c)2011 Mark Allen.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="d2961ceaca647df086cd88aa0aa9059e913775ed" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2011 brian d foy. All rights reserved.</source>
          <target state="translated">Copyright (c)2011 brian d foy.All rights reserved.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="434fd723792e461d443ecf11246cd1bd00296f79" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2011-2019 Paul Marquess. All rights reserved.</source>
          <target state="translated">Copyright (c)2011-2019 Paul Marquess.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="2a5b051ccd36b98d80623ef946212cc37718831b" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2012, Steve Peters. All rights reserved.</source>
          <target state="translated">Copyright (c)2012,Steve Peters.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="cccb94d0a658cb5b6364733adf2a74cb6a27df14" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2016, cPanel Inc. All rights reserved.</source>
          <target state="translated">Copyright (c)2016,cPanel Inc.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="9f3010163b4c6b1b513600848bac5972441cab52" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2017 Mark Allen.</source>
          <target state="translated">Copyright (c)2017 Mark Allen.</target>
        </trans-unit>
        <trans-unit id="7a8a04711fdbb0e9a1f2a763d0ad79331ab4d83a" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2017-2018, Reini Urban. All rights reserved.</source>
          <target state="translated">Copyright (c)2017-2018,Reini Urban.版权归作者所有。</target>
        </trans-unit>
        <trans-unit id="0a0578f5c0a1861e0a6616062cbeff94f9471da0" translate="yes" xml:space="preserve">
          <source>Copyright 1995-1997,2002-2004 Gisle Aas.</source>
          <target state="translated">Copyright 1995-1997,2002-2004 Gisle Aas.</target>
        </trans-unit>
        <trans-unit id="40d0702e44bca347009394197d44a9e6c4610d74" translate="yes" xml:space="preserve">
          <source>Copyright 1995-1999, 2001-2004, 2010 Gisle Aas.</source>
          <target state="translated">Copyright 1995-1999,2001-2004,2010 Gisle Aas.</target>
        </trans-unit>
        <trans-unit id="ff3ab6ee42d1ea131108bec0a223d6275afc6193" translate="yes" xml:space="preserve">
          <source>Copyright 1995-2015 (c) perl5 porters.</source>
          <target state="translated">Copyright 1995-2015 (c)perl5 porters.</target>
        </trans-unit>
        <trans-unit id="f0d261837294050f7db24cdd54684bb6c0bb4914" translate="yes" xml:space="preserve">
          <source>Copyright 1996 Zenin</source>
          <target state="translated">Copyright 1996 Zenin</target>
        </trans-unit>
        <trans-unit id="9f586c7c8d64bfd9e85b5c08564c28475c2476d0" translate="yes" xml:space="preserve">
          <source>Copyright 1996 Zenin. Copyright 1996, 1997, 1998, 2000, 2001, 2002, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014 Russ Allbery &amp;lt;rra@cpan.org&amp;gt;. Copyright 2012 Kurt Starsinic &amp;lt;kstarsinic@gmail.com&amp;gt;. This program is free software; you may redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">版权所有1996 Zenin。版权所有1996、1997、1998、2000、2001、2002、2005、2006、2008、2009、2010、2011、2012、2013、2014 Russ Allbery &amp;lt;rra@cpan.org&amp;gt;。版权所有2012 Kurt Starsinic &amp;lt;kstarsinic@gmail.com&amp;gt;。该程序是免费软件；您可以按照与Perl本身相同的条款重新分发和/或修改它。</target>
        </trans-unit>
        <trans-unit id="7632e07208ee68dabeb6776a6c67da02df7ea374" translate="yes" xml:space="preserve">
          <source>Copyright 1996-1998, 2000-2002, 2005-2006, 2008-2018, 2020 Russ Allbery &amp;lt;rra@cpan.org&amp;gt;</source>
          <target state="translated">版权所有1996-1998、2000-2002、2005-2006、2008-2018、2020 Russ Allbery &amp;lt;rra@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="2578ceec7e839432122171b06d2ebf101a0829d8" translate="yes" xml:space="preserve">
          <source>Copyright 1997 - 2001 Damian Conway. All Rights Reserved.</source>
          <target state="translated">版权所有1997-2001年Damian Conway。保留所有权利。</target>
        </trans-unit>
        <trans-unit id="e24c0d040bccb06d10ccb3a57cbbc46e6ed0dddf" translate="yes" xml:space="preserve">
          <source>Copyright 1998 The Perl Journal.</source>
          <target state="translated">Copyright 1998 The Perl Journal.</target>
        </trans-unit>
        <trans-unit id="d52fcfe7bec45098d75b5470bde1a0d7ed1a805a" translate="yes" xml:space="preserve">
          <source>Copyright 1998, 1999, 2000, 2001, 2012 by Mark Jason Dominus</source>
          <target state="translated">1998、1999、2000、2001、2012年,马克-杰森-多米努斯版权所有。</target>
        </trans-unit>
        <trans-unit id="25fd40d58410cd1696c803df7d48f5ed2513b4fb" translate="yes" xml:space="preserve">
          <source>Copyright 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2012, 2013 Russ Allbery &amp;lt;rra@stanford.edu&amp;gt;.</source>
          <target state="translated">版权所有1999、2000、2001、2002、2003、2004、2005、2006、2007、2008、2009、2010、2012、2013 Russ Allbery &amp;lt;rra@stanford.edu&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="beb00d2f951db1eb5afb7de8fb7c0bdeb6824fdf" translate="yes" xml:space="preserve">
          <source>Copyright 1999, 2000, 2001, 2002, 2004, 2006, 2008, 2009, 2012, 2013 Russ Allbery &amp;lt;rra@stanford.edu&amp;gt;.</source>
          <target state="translated">版权所有1999、2000、2001、2002、2004、2006、2008、2009、2012、2013 Russ Allbery &amp;lt;rra@stanford.edu&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="a467ad5fa2d0aa209d23ad0c1537c33c44052bff" translate="yes" xml:space="preserve">
          <source>Copyright 1999, 2000, 2001, 2004, 2006, 2008, 2010 Russ Allbery &amp;lt;rra@stanford.edu&amp;gt;.</source>
          <target state="translated">版权所有1999、2000、2001、2004、2006、2008、2010 Russ Allbery &amp;lt;rra@stanford.edu&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="d116660891649b2a4f34cbcb8ed7ded670e6b71e" translate="yes" xml:space="preserve">
          <source>Copyright 1999, 2000, 2001, 2004, 2006, 2008, 2010, 2012, 2013 Russ Allbery &amp;lt;rra@stanford.edu&amp;gt;.</source>
          <target state="translated">版权所有1999、2000、2001、2004、2006、2008、2010、2012、2013 Russ Allbery &amp;lt;rra@stanford.edu&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="ddbd1e59ee3c4fb0b62059719b54651f34736f7a" translate="yes" xml:space="preserve">
          <source>Copyright 1999, 2000, 2001, 2004, 2006, 2008, 2010, 2015, 2018 Russ Allbery &amp;lt;rra@cpan.org&amp;gt;</source>
          <target state="translated">版权所有1999、2000、2001、2004、2006、2008、2010、2015、2018 Russ Allbery &amp;lt;rra@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="3b5d92e90abbe2d5c568afb5c521beac86f1e04e" translate="yes" xml:space="preserve">
          <source>Copyright 1999, 2001, 2002, 2004, 2006, 2008, 2009 Russ Allbery &amp;lt;rra@stanford.edu&amp;gt;.</source>
          <target state="translated">版权所有1999、2001、2002、2004、2006、2008、2009 Russ Allbery &amp;lt;rra@stanford.edu&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="24528ac4ae30b0fed790404fa53cadcc8ddc8c0c" translate="yes" xml:space="preserve">
          <source>Copyright 1999, 2001, 2004, 2006, 2008, 2009 Russ Allbery &amp;lt;rra@stanford.edu&amp;gt;.</source>
          <target state="translated">版权所有1999、2001、2004、2006、2008、2009 Russ Allbery &amp;lt;rra@stanford.edu&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="7b2d43a23e11d1e64b9ff8dddf2e2017709a8fc7" translate="yes" xml:space="preserve">
          <source>Copyright 1999, 2001, 2004, 2006, 2008, 2009, 2018-2019 Russ Allbery &amp;lt;rra@cpan.org&amp;gt;</source>
          <target state="translated">版权所有1999、2001、2004、2006、2008、2009、2018-2019 Russ Allbery &amp;lt;rra@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="ac651f4e373098f44dbad6df5212ef6215119173" translate="yes" xml:space="preserve">
          <source>Copyright 1999, 2001-2002, 2004, 2006, 2008-2009, 2014-2015, 2018-2019 Russ Allbery &amp;lt;rra@cpan.org&amp;gt;</source>
          <target state="translated">版权所有1999、2001-2002、2004、2006、2008-2009、2014-2015、2018-2019 Russ Allbery &amp;lt;rra@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="8a100799724a4b6d936cd9d5990968808cfd03b2" translate="yes" xml:space="preserve">
          <source>Copyright 1999-2001, 2004, 2006, 2008, 2010, 2012-2019 Russ Allbery &amp;lt;rra@cpan.org&amp;gt;</source>
          <target state="translated">版权所有1999-2001、2004、2006、2008、2010、2012-2019 Russ Allbery &amp;lt;rra@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="090e412130a80144ab6d150a99138925239dd2c1" translate="yes" xml:space="preserve">
          <source>Copyright 1999-2002, 2004, 2006, 2008-2009, 2012-2016, 2018-2019 Russ Allbery &amp;lt;rra@cpan.org&amp;gt;</source>
          <target state="translated">版权所有1999-2002、2004、2006、2008-2009、2012-2016、2018-2019 Russ Allbery &amp;lt;rra@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="c01dd2da073419fb93fde9e4635be90d2c245d22" translate="yes" xml:space="preserve">
          <source>Copyright 1999-2010, 2012-2019 Russ Allbery &amp;lt;rra@cpan.org&amp;gt;</source>
          <target state="translated">版权所有1999-2010、2012-2019 Russ Allbery &amp;lt;rra@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="afd8603ca97a02bd01a88b91850074e2c2f9eec2" translate="yes" xml:space="preserve">
          <source>Copyright 2000 by Joe Smith &amp;lt;Joe.Smith@inwap.com&amp;gt;</source>
          <target state="translated">乔&amp;middot;史密斯（Joe Smith）版权所有2000 &amp;lt;Joe.Smith@inwap.com&amp;gt;</target>
        </trans-unit>
        <trans-unit id="233c7c72bfb3a12d36d9a0b1a2a2236732bf795f" translate="yes" xml:space="preserve">
          <source>Copyright 2000 by Joe Smith &amp;lt;Joe.Smith@inwap.com&amp;gt;. Copyright 2001, 2004, 2008 by Russ Allbery &amp;lt;rra@stanford.edu&amp;gt;.</source>
          <target state="translated">Joe Smith &amp;lt;Joe.Smith@inwap.com&amp;gt;版权所有2000。Russ Allbery &amp;lt;rra@stanford.edu&amp;gt;版权所有2001、2004、2008。</target>
        </trans-unit>
        <trans-unit id="bac1b99511dfac3f040f153e32b31825485f6b22" translate="yes" xml:space="preserve">
          <source>Copyright 2001 by Jarkko Hietaniemi</source>
          <target state="translated">2001年版权所有,作者:Jarkko Hietaniemi。</target>
        </trans-unit>
        <trans-unit id="a45d4f360838ff53efe27568ac995966a9f842f5" translate="yes" xml:space="preserve">
          <source>Copyright 2001 by Michael G Schwern &amp;lt;schwern@pobox.com&amp;gt;.</source>
          <target state="translated">Michael G Schwern版权所有2001，&amp;lt;schwern@pobox.com&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="243e24d63f4c77f51a7da60344b71df40a623886" translate="yes" xml:space="preserve">
          <source>Copyright 2001, 2004, 2008, 2014, 2018-2019 by Russ Allbery &amp;lt;rra@cpan.org&amp;gt;</source>
          <target state="translated">Russ Allbery版权所有2001、2004、2008、2014、2018-2019 &amp;lt;rra@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="39f328bf52bbb81edfba43d285c298d3543ac18c" translate="yes" xml:space="preserve">
          <source>Copyright 2001, 2008, 2009 Russ Allbery &amp;lt;rra@stanford.edu&amp;gt;.</source>
          <target state="translated">版权所有2001、2008、2009 Russ Allbery &amp;lt;rra@stanford.edu&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="9b8bbb1250710cf3e64d5c4a0c509eaf7f1ba3ef" translate="yes" xml:space="preserve">
          <source>Copyright 2001, 2008, 2009, 2014, 2018-2019 Russ Allbery &amp;lt;rra@cpan.org&amp;gt;</source>
          <target state="translated">版权所有2001、2008、2009、2014、2018-2019 Russ Allbery &amp;lt;rra@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="7c959eb5c2acf1300054205c4d9f5d4cbb02d027" translate="yes" xml:space="preserve">
          <source>Copyright 2001, Larry Wall.</source>
          <target state="translated">2001年,拉里-沃尔版权所有。</target>
        </trans-unit>
        <trans-unit id="0e90130d5f5b2ccf88af0b6d57add0a492ab06a4" translate="yes" xml:space="preserve">
          <source>Copyright 2001-2008 by Michael G Schwern &amp;lt;schwern@pobox.com&amp;gt;.</source>
          <target state="translated">Michael G Schwern版权所有2001-2008 &amp;lt;schwern@pobox.com&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="758760659ae9e9da078236b8c96e4f04f45e80be" translate="yes" xml:space="preserve">
          <source>Copyright 2001-2011 Jarkko Hietaniemi &amp;lt;jhi@iki.fi&amp;gt;. Now maintained by Perl 5 Porters.</source>
          <target state="translated">版权所有2001-2011 Jarkko Hietaniemi &amp;lt;jhi@iki.fi&amp;gt;。现在由Perl 5 Porters维护。</target>
        </trans-unit>
        <trans-unit id="24f4f8eae6a435477fe3bf3b0fd15810a567f325" translate="yes" xml:space="preserve">
          <source>Copyright 2002-2008 by chromatic &amp;lt;chromatic@wgz.org&amp;gt; and Michael G Schwern &amp;lt;schwern@pobox.com&amp;gt;.</source>
          <target state="translated">chromical &amp;lt;色度@ chromus @ wgz.org&amp;gt;和Michael G Schwern &amp;lt;schwern@pobox.com&amp;gt;版权所有2002-2008。</target>
        </trans-unit>
        <trans-unit id="9ad00efbd2d58cad6bbe8ee8a6e69c0624704508" translate="yes" xml:space="preserve">
          <source>Copyright 2002-2014 Dan Kogai</source>
          <target state="translated">Copyright 2002-2014 Dan Kogai</target>
        </trans-unit>
        <trans-unit id="adff1afaa96bc6908438762288df7e0c84cec743" translate="yes" xml:space="preserve">
          <source>Copyright 2002-2014 by Ken Williams, David Golden and other contributors. All rights reserved.</source>
          <target state="translated">版权2002-2014,作者:Ken Williams、David Golden和其他撰稿人。保留所有权利。</target>
        </trans-unit>
        <trans-unit id="3366261e225d525ccf331af7c5d9d27fc6080f98" translate="yes" xml:space="preserve">
          <source>Copyright 2003 by Fergal Daly &amp;lt;fergal@esatclear.ie&amp;gt;.</source>
          <target state="translated">Fergal Daly于2003年版权所有&amp;lt;fergal@esatclear.ie&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="718ed72e455fb194df80ae2d0693e8d68c4004c0" translate="yes" xml:space="preserve">
          <source>Copyright 2003, 2004, 2005, 2006 by Audrey Tang &amp;lt;cpan@audreyt.org&amp;gt;.</source>
          <target state="translated">唐（Audrey Tang）&amp;lt;cpan@audreyt.org&amp;gt;版权所有2003、2004、2005、2006。</target>
        </trans-unit>
        <trans-unit id="47cc7baae0ca8566017026f9e5d9a9c09d54b447" translate="yes" xml:space="preserve">
          <source>Copyright 2004, 2005, 2006, 2007 by Audrey Tang &amp;lt;cpan@audreyt.org&amp;gt;.</source>
          <target state="translated">唐（Audrey Tang）版权所有2004、2005、2006、2007 &amp;lt;cpan@audreyt.org&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="03f9138fcf89a29043a1e2a727cfe2c79ab79b5d" translate="yes" xml:space="preserve">
          <source>Copyright 2006 Yves Orton and 2007 &amp;AElig;var Arnfj&amp;ouml;r&amp;eth; Bjarmason.</source>
          <target state="translated">版权所有2006 Yves Orton和2007&amp;AElig;varArnfj&amp;ouml;r&amp;eth;Bjarmason。</target>
        </trans-unit>
        <trans-unit id="a7b10ddec953c21d4f38ad07fa70d878c1a1f6b9" translate="yes" xml:space="preserve">
          <source>Copyright 2006-2008 Curtis &quot;Ovid&quot; Poe, all rights reserved.</source>
          <target state="translated">Copyright 2006-2008 Curtis &quot;Ovid&quot; Poe,all rights reserved.</target>
        </trans-unit>
        <trans-unit id="2dc2b4cddeffd8148859258dfa192ac667c79bfb" translate="yes" xml:space="preserve">
          <source>Copyright 2007-2011 Andy Armstrong.</source>
          <target state="translated">Copyright 2007-2011 Andy Armstrong.</target>
        </trans-unit>
        <trans-unit id="95fd608fb95f61ebaeed78c224300578e02d3cbc" translate="yes" xml:space="preserve">
          <source>Copyright 2007-2016 by Makamaka Hannyaharamitu</source>
          <target state="translated">Copyright 2007-2016 by Makamaka Hannyaharamitu</target>
        </trans-unit>
        <trans-unit id="eeaf3232c6892ccf2f411117d77f548428dc4ef2" translate="yes" xml:space="preserve">
          <source>Copyright 2008-2009, Paul Fenwick &amp;lt;pjf@perltraining.com.au&amp;gt;</source>
          <target state="translated">保罗&amp;middot;芬威克（Paul Fenwick）版权所有2008-2009 &amp;lt;pjf@perltraining.com.au&amp;gt;</target>
        </trans-unit>
        <trans-unit id="ed57f807f6cd399f874157dc6f47cc4ad80bc1c1" translate="yes" xml:space="preserve">
          <source>Copyright 2009, 2010, 2011, 2012 Steffen Mueller</source>
          <target state="translated">Copyright 2009,2010,2011,2012 Steffen Mueller 版权所有。</target>
        </trans-unit>
        <trans-unit id="db6309490a8640af4f1db92336383400562c93f9" translate="yes" xml:space="preserve">
          <source>Copyright 2009, 2010, 2011, 2012, 2013 Steffen Mueller</source>
          <target state="translated">Copyright 2009,2010,2011,2012,2013 Steffen Mueller 版权所有。</target>
        </trans-unit>
        <trans-unit id="d5ae870926a768b3515300b0c2762a895ed39488" translate="yes" xml:space="preserve">
          <source>Copyright 2009, Paul Fenwick &amp;lt;pjf@perltraining.com.au&amp;gt;</source>
          <target state="translated">保罗&amp;middot;芬威克（Paul Fenwick）版权所有2009，&amp;lt;pjf@perltraining.com.au&amp;gt;</target>
        </trans-unit>
        <trans-unit id="470ff1b0088118a619903de417d61e25a76a26fe" translate="yes" xml:space="preserve">
          <source>Copyright 2010 Gisle Aas &amp;lt;gisle@aas.no&amp;gt;.</source>
          <target state="translated">版权所有2010 Gisle Aas &amp;lt;gisle@aas.no&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="89e11a684bc042f1a47ed7e5bae86532e911624b" translate="yes" xml:space="preserve">
          <source>Copyright 2010 Grant McLean &amp;lt;grantm@cpan.org&amp;gt;</source>
          <target state="translated">版权所有2010 Grant McLean &amp;lt;grantm@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="4da493f5c04edefe46b0fd74ae429ad56b0dc531" translate="yes" xml:space="preserve">
          <source>Copyright 2010, brian d foy &lt;code&gt;&amp;lt;brian.d.foy@gmail.com&amp;gt;&lt;/code&gt;</source>
          <target state="translated">版权所有2010，brian d foy &lt;code&gt;&amp;lt;brian.d.foy@gmail.com&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="882804b5e2455de26a56484655756b73f9c3c24c" translate="yes" xml:space="preserve">
          <source>Copyright 2012 Kurt Starsinic &amp;lt;kstarsinic@gmail.com&amp;gt;</source>
          <target state="translated">版权所有2012 Kurt Starsinic &amp;lt;kstarsinic@gmail.com&amp;gt;</target>
        </trans-unit>
        <trans-unit id="e3c7a676f0887df21fe81b395cf11fc7368f7d1e" translate="yes" xml:space="preserve">
          <source>Copyright 2012 Steffen Mueller</source>
          <target state="translated">Copyright 2012 Steffen Mueller</target>
        </trans-unit>
        <trans-unit id="b47a4389c364b8abd358a0f467c39b15dbdea1cb" translate="yes" xml:space="preserve">
          <source>Copyright 2013 Tom Christiansen.</source>
          <target state="translated">Copyright 2013 Tom Christiansen.</target>
        </trans-unit>
        <trans-unit id="8031568ddd17a83b7a8dfb0cc0d11c57b99c8bf5" translate="yes" xml:space="preserve">
          <source>Copyright 2013 Tom Christiansen; now maintained by Perl5 Porters</source>
          <target state="translated">Copyright 2013 Tom Christiansen;现在由Perl5 Porters维护。</target>
        </trans-unit>
        <trans-unit id="b951bce65acbd67018019b10bb81e33ccc60d11d" translate="yes" xml:space="preserve">
          <source>Copyright 2013, Niels Thykier &amp;lt;niels@thykier.net&amp;gt;</source>
          <target state="translated">Niels Thykier 2013年版权&amp;lt;niels@thykier.net&amp;gt;</target>
        </trans-unit>
        <trans-unit id="3fc6b2cb7ab5d9efbf84acd03fa3649e70d1847c" translate="yes" xml:space="preserve">
          <source>Copyright 2013, Paul Fenwick &amp;lt;pjf@cpan.org&amp;gt;</source>
          <target state="translated">保罗&amp;middot;芬威克（Paul Fenwick）版权所有2013，&amp;lt;pjf@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="21801acb19692862df55d9017fbd3c4f5516f172" translate="yes" xml:space="preserve">
          <source>Copyright 2013-2014, Niels Thykier &amp;lt;niels@thykier.net&amp;gt;</source>
          <target state="translated">Niels Thykier 2013-2014年版权所有&amp;lt;niels@thykier.net&amp;gt;</target>
        </trans-unit>
        <trans-unit id="4786894b545727c883bdf43c95311939ade0e3f4" translate="yes" xml:space="preserve">
          <source>Copyright 2017 Chad Granum &amp;lt;exodist@cpan.org&amp;gt;.</source>
          <target state="translated">版权所有2017 Chad Granum &amp;lt;exodist@cpan.org&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="f9295a11bcb81c418c49ad8ae7c1c3bdd2ce5532" translate="yes" xml:space="preserve">
          <source>Copyright 2019 Chad Granum &amp;lt;exodist@cpan.org&amp;gt;.</source>
          <target state="translated">版权所有2019 Chad Granum &amp;lt;exodist@cpan.org&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="f64383541384dc3e2eb364fd68051f5f3748d4e0" translate="yes" xml:space="preserve">
          <source>Copyright Mark Fowler &amp;lt;mark@twoshortplanks.com&amp;gt; 2002, 2004.</source>
          <target state="translated">版权Mark Fowler &amp;lt;mark@twoshortplanks.com&amp;gt; 2002、2004。</target>
        </trans-unit>
        <trans-unit id="2e7c31625c0b13304190ac801e54ebae59236c4f" translate="yes" xml:space="preserve">
          <source>Copyright Mark Fowler &amp;lt;mark@twoshortplanks.com&amp;gt; 2002.</source>
          <target state="translated">版权所有Mark Fowler &amp;lt;mark@twoshortplanks.com&amp;gt; 2002。</target>
        </trans-unit>
        <trans-unit id="a9f33cf7a4a5fda17e447238e45c4abe5cf41f08" translate="yes" xml:space="preserve">
          <source>Copyright(C) 2001-2012, SADAHIRO Tomoyuki. Japan. All rights reserved.</source>
          <target state="translated">Copyright(C)2001-2012,SADAHIRO Tomoyuki.日本。版权所有,不得转载。</target>
        </trans-unit>
        <trans-unit id="31e40e06c4bcb283edebf594f2bd7378bcf58ce9" translate="yes" xml:space="preserve">
          <source>Copyrights</source>
          <target state="translated">Copyrights</target>
        </trans-unit>
        <trans-unit id="97c1dd3ec24454b864720faa54a3abda989f1564" translate="yes" xml:space="preserve">
          <source>Core Images</source>
          <target state="translated">核心图像</target>
        </trans-unit>
        <trans-unit id="99bb4f655f44c04dddda9615c8eb20527c7cc996" translate="yes" xml:space="preserve">
          <source>Core Layers</source>
          <target state="translated">核心层</target>
        </trans-unit>
        <trans-unit id="bc6e3a410aa372c2487ec123aa51c13c61ba9355" translate="yes" xml:space="preserve">
          <source>Core Modules</source>
          <target state="translated">核心模块</target>
        </trans-unit>
        <trans-unit id="783102c8987eec788fa90e6f2de9f84f1caf1885" translate="yes" xml:space="preserve">
          <source>Core Perl does not have any support for the wide and multibyte characters of the C standards, except under UTF-8 locales, so this might be a rather useless function.</source>
          <target state="translated">Core Perl对C标准的宽字符和多字节字符没有任何支持,除了在UTF-8区位下,所以这可能是一个相当无用的功能。</target>
        </trans-unit>
        <trans-unit id="c52e9d3706f331479207f6f779422514dbec3f79" translate="yes" xml:space="preserve">
          <source>Core Perl does not have any support for wide and multibyte locales, except Unicode UTF-8 locales. This function, in conjunction with &lt;a href=&quot;#mblen&quot;&gt;&quot;mblen&quot;&lt;/a&gt; and &lt;a href=&quot;#mbtowc&quot;&gt;&quot;mbtowc&quot;&lt;/a&gt; may be used to roll your own decoding/encoding of other types of multi-byte locales.</source>
          <target state="translated">除了Unicode UTF-8语言环境外，Core Perl对宽和多字节语言环境不提供任何支持。将此功能与&lt;a href=&quot;#mblen&quot;&gt;&amp;ldquo; mblen&amp;rdquo;&lt;/a&gt;和&lt;a href=&quot;#mbtowc&quot;&gt;&amp;ldquo; mbtowc&amp;rdquo;&lt;/a&gt;结合使用，可用于滚动自己对其他类型的多字节语言环境的解码/编码。</target>
        </trans-unit>
        <trans-unit id="ecdfc58f36a3a3ab655bf6bb72db9be59e7989ff" translate="yes" xml:space="preserve">
          <source>Core Perl does not have any support for wide and multibyte locales, except Unicode UTF-8 locales. This function, in conjunction with &lt;a href=&quot;#mblen&quot;&gt;&quot;mblen&quot;&lt;/a&gt; and &lt;a href=&quot;#wctomb&quot;&gt;&quot;wctomb&quot;&lt;/a&gt; may be used to roll your own decoding/encoding of other types of multi-byte locales.</source>
          <target state="translated">除了Unicode UTF-8语言环境外，Core Perl对宽和多字节语言环境不提供任何支持。将此功能与&lt;a href=&quot;#mblen&quot;&gt;&amp;ldquo; mblen&amp;rdquo;&lt;/a&gt;和&lt;a href=&quot;#wctomb&quot;&gt;&amp;ldquo; wctomb&amp;rdquo;&lt;/a&gt;结合使用，可用于滚动自己对其他类型的多字节语言环境的解码/编码。</target>
        </trans-unit>
        <trans-unit id="f023f0947e152c9c42261c0584838fe8e5bafb0b" translate="yes" xml:space="preserve">
          <source>Core Perl does not have any support for wide and multibyte locales, except Unicode UTF-8 locales. This function, in conjunction with &lt;a href=&quot;#mbtowc&quot;&gt;&quot;mbtowc&quot;&lt;/a&gt; and &lt;a href=&quot;#wctomb&quot;&gt;&quot;wctomb&quot;&lt;/a&gt; may be used to roll your own decoding/encoding of other types of multi-byte locales.</source>
          <target state="translated">除了Unicode UTF-8语言环境外，Core Perl对宽和多字节语言环境不提供任何支持。将此功能与&lt;a href=&quot;#mbtowc&quot;&gt;&amp;ldquo; mbtowc&amp;rdquo;&lt;/a&gt;和&lt;a href=&quot;#wctomb&quot;&gt;&amp;ldquo; wctomb&amp;rdquo;&lt;/a&gt;结合使用，可以用于对其他类型的多字节语言环境进行自己的解码/编码。</target>
        </trans-unit>
        <trans-unit id="54b87e196a65aa25a514c9ea7b2551d2cd6978d7" translate="yes" xml:space="preserve">
          <source>Core Perl modules</source>
          <target state="translated">核心Perl模块</target>
        </trans-unit>
        <trans-unit id="67d35c68c7df776a652523a80899e489b317a9b0" translate="yes" xml:space="preserve">
          <source>Core modules</source>
          <target state="translated">核心模块</target>
        </trans-unit>
        <trans-unit id="b41c28c0f7e25aefbda46cf16116c078111d0aa5" translate="yes" xml:space="preserve">
          <source>Corion</source>
          <target state="translated">Corion</target>
        </trans-unit>
        <trans-unit id="b871e801521c88cc33f85d25cf4f5ef9feb511d6" translate="yes" xml:space="preserve">
          <source>Correction of decomposition mapping</source>
          <target state="translated">分解映射的校正</target>
        </trans-unit>
        <trans-unit id="ce831d7b130ca37b50a0ab62dd64d0056aa444db" translate="yes" xml:space="preserve">
          <source>Correspondingly, sending a signal to a thread does not disrupt the operation the thread is currently working on: The signal will be acted upon after the current operation has completed. For instance, if the thread is</source>
          <target state="translated">相应地,向线程发送信号不会中断线程当前正在进行的操作。信号将在当前操作完成后被执行。例如,如果线程正在</target>
        </trans-unit>
        <trans-unit id="047ac09c3f9816fdf9a6f40a8d473086bec80bc0" translate="yes" xml:space="preserve">
          <source>Corrupt malloc ptr 0x%x at 0x%x</source>
          <target state="translated">在0x%x处的malloc ptr 0x%x损坏。</target>
        </trans-unit>
        <trans-unit id="3f8b9d99ddda3913df8a052e5b5a900e1ab7b1fe" translate="yes" xml:space="preserve">
          <source>Corrupted regexp opcode %d &amp;gt; %d</source>
          <target state="translated">regexp操作码％d&amp;gt;％d损坏</target>
        </trans-unit>
        <trans-unit id="2b32803a1d0993fe28fa24b5a8189be7f5f005ae" translate="yes" xml:space="preserve">
          <source>Cory G Watson &amp;lt;gphat@cpan.org&amp;gt;</source>
          <target state="translated">科里&amp;middot;沃森（Cory G Watson）&amp;lt;gphat@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="036377b72eb8c30e98a03653d8eae51b1ebaf45b" translate="yes" xml:space="preserve">
          <source>Cosimo Streppone</source>
          <target state="translated">Cosimo Streppone</target>
        </trans-unit>
        <trans-unit id="1bf429f94068620b112aca3888b58aecbc2eadee" translate="yes" xml:space="preserve">
          <source>Costa Rica</source>
          <target state="translated">哥斯达黎加</target>
        </trans-unit>
        <trans-unit id="5d25cbf547052ef26b7bd5b301c3044498d75c9a" translate="yes" xml:space="preserve">
          <source>Could it be a module instead?</source>
          <target state="translated">会不会是一个模块呢?</target>
        </trans-unit>
        <trans-unit id="b18f107cb83dab5134d06883d2264ef67ecdb419" translate="yes" xml:space="preserve">
          <source>Count after length/code in unpack</source>
          <target state="translated">解包时长度/代码后的计数</target>
        </trans-unit>
        <trans-unit id="09e55edb3e65ad6732e40f6cd984478db5d78fce" translate="yes" xml:space="preserve">
          <source>Counting Repetitions</source>
          <target state="translated">重复计数</target>
        </trans-unit>
        <trans-unit id="6638251b6bc95fa3de20882497e46af5dda04835" translate="yes" xml:space="preserve">
          <source>Counting bytes and watching alignments in lengthy structures is bound to be a drag. Isn't there a way we can create the template with a simple program? Here's a C program that does the trick:</source>
          <target state="translated">在冗长的结构中计算字节和观察排列,势必是一种拖累。难道我们没有办法用一个简单的程序来创建模板吗?这里有一个C程序可以做到这一点。</target>
        </trans-unit>
        <trans-unit id="1cfd2770db664059c57a58368f587a061ac0b45a" translate="yes" xml:space="preserve">
          <source>Counting the number of entries in a hash via &lt;code&gt;&lt;a href=&quot;functions/scalar&quot;&gt;scalar(keys(%hash))&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/scalar&quot;&gt;scalar(values(%hash)&lt;/a&gt;&lt;/code&gt;) is inefficient since it needs to iterate through all the entries with FIRSTKEY/NEXTKEY.</source>
          <target state="translated">通过 &lt;code&gt;&lt;a href=&quot;functions/scalar&quot;&gt;scalar(keys(%hash))&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;functions/scalar&quot;&gt;scalar(values(%hash)&lt;/a&gt;&lt;/code&gt; ）计算哈希中的条目数效率很低，因为它需要使用FIRSTKEY / NEXTKEY遍历所有条目。</target>
        </trans-unit>
        <trans-unit id="a9fbf133f89422a1af93b09dc8287feab55a339f" translate="yes" xml:space="preserve">
          <source>Counting the number of entries in a hash via &lt;code&gt;scalar(keys(%hash))&lt;/code&gt; or &lt;code&gt;scalar(values(%hash)&lt;/code&gt;) is inefficient since it needs to iterate through all the entries with FIRSTKEY/NEXTKEY.</source>
          <target state="translated">通过 &lt;code&gt;scalar(keys(%hash))&lt;/code&gt; 或 &lt;code&gt;scalar(values(%hash)&lt;/code&gt; ）计算哈希中的条目数效率很低，因为它需要使用FIRSTKEY / NEXTKEY遍历所有条目。</target>
        </trans-unit>
        <trans-unit id="b4d6e94a784b6e291943d7b2c4e0fc93520909e7" translate="yes" xml:space="preserve">
          <source>Counting the opening parentheses to get the correct number for a backreference is error-prone as soon as there is more than one capturing group. A more convenient technique became available with Perl 5.10: relative backreferences. To refer to the immediately preceding capture group one now may write &lt;code&gt;\g{-1}&lt;/code&gt; , the next but last is available via &lt;code&gt;\g{-2}&lt;/code&gt; , and so on.</source>
          <target state="translated">一旦有多个捕获组，计算开括号以获得正确数量的反向引用就容易出错。Perl 5.10提供了更方便的技术：相对反向引用。现在要引用紧接的捕获组，可以写 &lt;code&gt;\g{-1}&lt;/code&gt; ，下一个但最后一个可以通过 &lt;code&gt;\g{-2}&lt;/code&gt; ，依此类推。</target>
        </trans-unit>
        <trans-unit id="7b240ac72954506fbc34fcaa37ffd84861c892f2" translate="yes" xml:space="preserve">
          <source>Counting the opening parentheses to get the correct number for a backreference is error-prone as soon as there is more than one capturing group. A more convenient technique became available with Perl 5.10: relative backreferences. To refer to the immediately preceding capture group one now may write &lt;code&gt;\g{-1}&lt;/code&gt;, the next but last is available via &lt;code&gt;\g{-2}&lt;/code&gt;, and so on.</source>
          <target state="translated">只要有一个以上的捕获组，对开括号进行计数以获取正确的反向引用编号就很容易出错。Perl 5.10提供了更方便的技术：相对反向引用。现在要引用紧接的捕获组，可以写 &lt;code&gt;\g{-1}&lt;/code&gt; ，下一个但最后一个可以通过 &lt;code&gt;\g{-2}&lt;/code&gt; ，依此类推。</target>
        </trans-unit>
        <trans-unit id="2815297cdc53ede6ff2cb024503f24e17cc60a88" translate="yes" xml:space="preserve">
          <source>Coverity</source>
          <target state="translated">Coverity</target>
        </trans-unit>
        <trans-unit id="9fbbe918826f27bbfcf0ae0fdd88d18c0d6bd29a" translate="yes" xml:space="preserve">
          <source>Coverity (&lt;a href=&quot;http://www.coverity.com/&quot;&gt;http://www.coverity.com/&lt;/a&gt;) is a product similar to lint and as a testbed for their product they periodically check several open source projects, and they give out accounts to open source developers to the defect databases.</source>
          <target state="translated">Coverity（&lt;a href=&quot;http://www.coverity.com/&quot;&gt;http://www.coverity.com/&lt;/a&gt;）是一种类似于lint的产品，并且作为其产品的测试平台，他们定期检查几个开源项目，并向缺陷数据库提供给开源开发人员的帐户。</target>
        </trans-unit>
        <trans-unit id="30f10fb60094a5736894608b7733f1893682a3ec" translate="yes" xml:space="preserve">
          <source>Cppsym.U</source>
          <target state="translated">Cppsym.U</target>
        </trans-unit>
        <trans-unit id="3c994601f5c096741ef6b921aec442ccfe446155" translate="yes" xml:space="preserve">
          <source>Craig A. Berry &amp;lt;</source>
          <target state="translated">克雷格&amp;middot;贝里&amp;lt;</target>
        </trans-unit>
        <trans-unit id="ff29a3f5615f3495a2fbd2f2c12fd6ad75a52e48" translate="yes" xml:space="preserve">
          <source>Craig A. Berry &amp;lt;cberry@cpan.org&amp;gt;</source>
          <target state="translated">克雷格&amp;middot;贝瑞（Craig A.Berry）&amp;lt;cberry@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="54a6b3cbb3d667a31506391ab1089678fc2cb05b" translate="yes" xml:space="preserve">
          <source>Craig A. Berry &amp;lt;craigberry@mac.com&amp;gt;</source>
          <target state="translated">克雷格&amp;middot;贝瑞（Craig A.Berry）&amp;lt;craigberry@mac.com&amp;gt;</target>
        </trans-unit>
        <trans-unit id="90495fde21f2664b226d3779177a5a5d60e2d00f" translate="yes" xml:space="preserve">
          <source>Craig Berry &amp;lt;cberry@cpan.org&amp;gt;</source>
          <target state="translated">克雷格&amp;middot;贝瑞（Craig Berry）&amp;lt;cberry@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="5b047d6207a259e1009477acb2c928e68e9b31a5" translate="yes" xml:space="preserve">
          <source>Create =&amp;gt; $sCreate</source>
          <target state="translated">创建=&amp;gt; $ sCreate</target>
        </trans-unit>
        <trans-unit id="71755b496661c6122fa97329a48e579018d2ac98" translate="yes" xml:space="preserve">
          <source>Create =&amp;gt; $uCreate</source>
          <target state="translated">创建=&amp;gt; $ uCreate</target>
        </trans-unit>
        <trans-unit id="bc0ab8ae6a58789d929998f40f61b38762dd7253" translate="yes" xml:space="preserve">
          <source>Create VMS linker options files specifying universal symbols for this extension's shareable image(s), and listing other shareable images or libraries to which it should be linked.</source>
          <target state="translated">创建VMS链接器选项文件,指定该扩展的可共享图像的通用符号,并列出它应该被链接到的其他可共享图像或库。</target>
        </trans-unit>
        <trans-unit id="5ebece852ecc4ea6150b191a89b2f264b38241db" translate="yes" xml:space="preserve">
          <source>Create VMS linker options files specifying universal symbols for this extension's shareable image, and listing other shareable images or libraries to which it should be linked.</source>
          <target state="translated">创建VMS链接器选项文件,指定该扩展的可共享图像的通用符号,并列出其他应链接到的可共享图像或库。</target>
        </trans-unit>
        <trans-unit id="02cd22cf6983deda3bb052ea3365661fc9cd4123" translate="yes" xml:space="preserve">
          <source>Create a &quot;symlink&quot; or copy your bash.exe to sh.exe in your &lt;code&gt;($DJDIR)/bin&lt;/code&gt; directory.</source>
          <target state="translated">创建一个&amp;ldquo;符号链接&amp;rdquo;或将您的bash.exe复制到 &lt;code&gt;($DJDIR)/bin&lt;/code&gt; 目录中的sh.exe。</target>
        </trans-unit>
        <trans-unit id="ccf384c670bc8c1dc42f45cfc2716f6083067246" translate="yes" xml:space="preserve">
          <source>Create a BigRat from a hexadecimal number in string form.</source>
          <target state="translated">以字符串形式从十六进制数创建一个BigRat。</target>
        </trans-unit>
        <trans-unit id="885c3d66adccc7986bf87a9cb149b2896c42f0a4" translate="yes" xml:space="preserve">
          <source>Create a BigRat from an binary number in string form.</source>
          <target state="translated">从二进制数中创建一个字符串形式的BigRat。</target>
        </trans-unit>
        <trans-unit id="18cde0b66e2ee12909d4ed1d9eb6ea9c47f3f1a9" translate="yes" xml:space="preserve">
          <source>Create a BigRat from an hexadecimal, binary or octal number in string form.</source>
          <target state="translated">从一个十六进制、二进制或八进制的数字中创建一个字符串形式的BigRat。</target>
        </trans-unit>
        <trans-unit id="68207e6d27eea555446488765c1ad6f8b4bc1e31" translate="yes" xml:space="preserve">
          <source>Create a BigRat from an octal number in string form.</source>
          <target state="translated">从八进制数中创建一个字符串形式的BigRat。</target>
        </trans-unit>
        <trans-unit id="7d5f5a17f51263cd6a62c0f6bda55c2863c92e75" translate="yes" xml:space="preserve">
          <source>Create a GitHub fork of the perl5 repository and add it as a remote, if you haven't already, as described in the GitHub documentation at &lt;a href=&quot;https://help.github.com/en/articles/working-with-forks&quot;&gt;https://help.github.com/en/articles/working-with-forks&lt;/a&gt;.</source>
          <target state="translated">创建一个perl5存储库的GitHub分支并将其添加为远程（如果尚未添加），如GitHub文档中&lt;a href=&quot;https://help.github.com/en/articles/working-with-forks&quot;&gt;https://help.github.com/en/articles/working-with-forks所述&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="42c39c96c183164007b9faac9826235e887fff8f" translate="yes" xml:space="preserve">
          <source>Create a Zip64 zip file/buffer. This option is used if you want to store files larger than 4 Gig or store more than 64K files in a single zip archive.</source>
          <target state="translated">创建一个Zip64压缩文件/缓冲区。如果你想存储大于4G的文件,或者在一个压缩包中存储超过64K的文件,可以使用这个选项。</target>
        </trans-unit>
        <trans-unit id="473f8f658940e07568176b34bfa435fa80921f41" translate="yes" xml:space="preserve">
          <source>Create a Zip64 zip file/buffer. This option is used if you want to store files larger than 4 Gig or store more than 64K files in a single zip archive..</source>
          <target state="translated">创建一个Zip64压缩文件/缓冲区。如果你想存储大于4GB的文件或在一个压缩包中存储超过64K的文件,就会用到这个选项。</target>
        </trans-unit>
        <trans-unit id="11130cde618dc2de912450499554a974016ed7af" translate="yes" xml:space="preserve">
          <source>Create a batch file to run your program, and codify it in &lt;code&gt;ALTERNATE_SHEBANG&lt;/code&gt; (see the</source>
          <target state="translated">创建一个批处理文件以运行您的程序，然后将其编入 &lt;code&gt;ALTERNATE_SHEBANG&lt;/code&gt; 中（请参阅</target>
        </trans-unit>
        <trans-unit id="559b9195328e7612ac1eb177497f4f357dbf9afa" translate="yes" xml:space="preserve">
          <source>Create a branch based on blead to commit your change to, which will later be used to send it to the Perl issue tracker.</source>
          <target state="translated">创建一个基于 blead 的分支来提交你的修改,稍后将用于将其发送到 Perl 问题跟踪器中。</target>
        </trans-unit>
        <trans-unit id="8c0b214afdd6fe6bf72b44a42a4899d94c7a80e0" translate="yes" xml:space="preserve">
          <source>Create a branch for your change</source>
          <target state="translated">为您的变化创建一个分支</target>
        </trans-unit>
        <trans-unit id="bc3d1ef79a98971d38e02b76ce890553cad199f4" translate="yes" xml:space="preserve">
          <source>Create a class for the language your internal keys are in. Name the class after the language-tag for that language, in lowercase, with dashes changed to underscores. Assuming your project's first language is US English, you should call this Projname::L10N::en_us. It should consist minimally of:</source>
          <target state="translated">为你的内部键所使用的语言创建一个类。以该语言的语言标签命名该类,用小写,破折号改为下划线。假设你的项目的第一语言是美国英语,你应该把它叫做 Projname::L10N::en_us。它应该由以下几个部分组成</target>
        </trans-unit>
        <trans-unit id="af5af99f136ed2ceb6678c03a38a42040f4ea033" translate="yes" xml:space="preserve">
          <source>Create a class for your localization project. This is the name of the class that you'll use in the idiom:</source>
          <target state="translated">为你的本地化项目创建一个类。这是您将在成语中使用的类的名称。</target>
        </trans-unit>
        <trans-unit id="cd58dbbf0cc8ddf76fe7850dd53f265323bc2bbc" translate="yes" xml:space="preserve">
          <source>Create a dialog box containing MESSAGE. FLAGS specifies the required icon and buttons according to the following table:</source>
          <target state="translated">创建一个包含MESSAGE的对话框。FLAGS根据下表指定所需的图标和按钮。</target>
        </trans-unit>
        <trans-unit id="d140dda80edfdc914d774a5fe6e3ebbdbcd954b7" translate="yes" xml:space="preserve">
          <source>Create a directory from a template. The template must end in X's that are replaced by the routine.</source>
          <target state="translated">从模板中创建一个目录。模板必须以X结尾,由例程替换。</target>
        </trans-unit>
        <trans-unit id="87942e6092afa4288ce7b6b61b23174e2b70e314" translate="yes" xml:space="preserve">
          <source>Create a directory from the supplied template. This template is similar to that described for tempfile(). `X' characters at the end of the template are replaced with random letters to construct the directory name. At least four `X' characters must be in the template.</source>
          <target state="translated">从提供的模板中创建一个目录。这个模板类似于tempfile()的模板。模板末尾的 &quot;X &quot;字符被随机字母替换,以构建目录名。模板中至少要有四个 &quot;X &quot;字符。</target>
        </trans-unit>
        <trans-unit id="51bd75d11db7f05fdf7c0ba2ed86acfccab7e7b6" translate="yes" xml:space="preserve">
          <source>Create a directory in tmpdir() (see &lt;a href=&quot;File::Spec&quot;&gt;File::Spec&lt;/a&gt;).</source>
          <target state="translated">在tmpdir（）中创建一个目录（请参阅&lt;a href=&quot;File::Spec&quot;&gt;File :: Spec&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="97bd03e560de52beb6792bf090df2f8c408c1b3d" translate="yes" xml:space="preserve">
          <source>Create a directory in tmpdir() (see L&amp;lt;:spec&amp;gt;).</source>
          <target state="translated">在tmpdir（）中创建目录（请参见L &amp;lt;：spec&amp;gt;）。</target>
        </trans-unit>
        <trans-unit id="4362437c4dee6826064eba29335269a256a16b4f" translate="yes" xml:space="preserve">
          <source>Create a module Makefile</source>
          <target state="translated">创建一个模块Makefile</target>
        </trans-unit>
        <trans-unit id="50c598518f68bf9f28b1793bfb579fbc50559040" translate="yes" xml:space="preserve">
          <source>Create a new &lt;code&gt;App::Prove&lt;/code&gt; . Optionally a hash ref of attribute initializers may be passed.</source>
          <target state="translated">创建一个新的 &lt;code&gt;App::Prove&lt;/code&gt; 。可选地，可以传递属性初始化器的哈希引用。</target>
        </trans-unit>
        <trans-unit id="6b6e150ff08c5aa688659bba4e8d4b94edfdd8d2" translate="yes" xml:space="preserve">
          <source>Create a new &lt;code&gt;App::Prove&lt;/code&gt;. Optionally a hash ref of attribute initializers may be passed.</source>
          <target state="translated">创建一个新的 &lt;code&gt;App::Prove&lt;/code&gt; 。可选地，可以传递属性初始值设定项的哈希引用。</target>
        </trans-unit>
        <trans-unit id="637b03561b650422dbca5301699123a3114e7256" translate="yes" xml:space="preserve">
          <source>Create a new Math::BigRat object. Input can come in various forms:</source>
          <target state="translated">创建一个新的Math::BigRat对象。输入可以有多种形式。</target>
        </trans-unit>
        <trans-unit id="964c34cf0109bb75b1929b4e05143fbe530008bc" translate="yes" xml:space="preserve">
          <source>Create a new Perl external subroutine named $perl_name using $symref as a pointer to the function which implements the routine. This is simply a direct call to newXS()/newXS_flags(). Returns a reference to the installed function.</source>
          <target state="translated">使用$symref作为实现该例程的函数的指针,创建一个名为$perl_name的新Perl外部子程序。这只是对newXS()/newXS_flags()的直接调用。返回一个安装函数的引用。</target>
        </trans-unit>
        <trans-unit id="37ec6f7cf703eb7c8d20ea11f3b6a2d9d8f1bdf2" translate="yes" xml:space="preserve">
          <source>Create a new Perl external subroutine named $perl_name using $symref as a pointer to the function which implements the routine. This is simply a direct call to newXSUB(). Returns a reference to the installed function.</source>
          <target state="translated">使用$symref作为实现该例程的函数的指针,创建一个名为$perl_name的新Perl外部子程序。这只是对newXSUB()的直接调用。返回对安装的函数的引用。</target>
        </trans-unit>
        <trans-unit id="8b815122ea1b53bab2fea52aa82c0738dc639ea2" translate="yes" xml:space="preserve">
          <source>Create a new SigSet object. This object will be destroyed automatically when it is no longer needed. Arguments may be supplied to initialize the set.</source>
          <target state="translated">创建一个新的SigSet对象。当不再需要该对象时,该对象将被自动销毁。可以提供参数来初始化该集。</target>
        </trans-unit>
        <trans-unit id="8f2191aaab0a2fe03dd235f940c62b8ea3693cca" translate="yes" xml:space="preserve">
          <source>Create a new Termios object. This object will be destroyed automatically when it is no longer needed. A Termios object corresponds to the &lt;code&gt;termios&lt;/code&gt; C struct. &lt;code&gt;new()&lt;/code&gt; mallocs a new one, &lt;code&gt;getattr()&lt;/code&gt; fills it from a file descriptor, and &lt;code&gt;setattr()&lt;/code&gt; sets a file descriptor's parameters to match Termios' contents.</source>
          <target state="translated">创建一个新的Termios对象。不再需要该对象时，它将自动销毁。Termios对象与 &lt;code&gt;termios&lt;/code&gt; C结构相对应。 &lt;code&gt;new()&lt;/code&gt; 分配一个新变量， &lt;code&gt;getattr()&lt;/code&gt; 从文件描述符中填充它， &lt;code&gt;setattr()&lt;/code&gt; 设置文件描述符的参数以匹配Termios的内容。</target>
        </trans-unit>
        <trans-unit id="e8e14e0bd357803bf052153bab4c0a139ecb8716" translate="yes" xml:space="preserve">
          <source>Create a new cache object. This object can hold an arbitrary number of POD documents of class Pod::Cache::Item.</source>
          <target state="translated">创建一个新的缓存对象。这个对象可以容纳任意数量的POD类Pod::Cache::Item文档。</target>
        </trans-unit>
        <trans-unit id="7234e7b8446d88bd6969be5e67b0f7bcc7d431e8" translate="yes" xml:space="preserve">
          <source>Create a new directory called Mytest2 at the same level as the directory Mytest. In the Mytest2 directory, create another directory called mylib, and cd into that directory.</source>
          <target state="translated">在Mytest目录下创建一个名为Mytest2的新目录。在Mytest2目录下,创建另一个名为mylib的目录,并将其cd到该目录下。</target>
        </trans-unit>
        <trans-unit id="31384a4a0ee35aebb04c1c58d30d768f683e1f93" translate="yes" xml:space="preserve">
          <source>Create a new directory with the name &lt;code&gt;DIR&lt;/code&gt; . If &lt;code&gt;RECURSE&lt;/code&gt; is</source>
          <target state="translated">创建一个名为 &lt;code&gt;DIR&lt;/code&gt; 的新目录。如果 &lt;code&gt;RECURSE&lt;/code&gt; 是</target>
        </trans-unit>
        <trans-unit id="572e54dfcc54b1e4d85e51872c27d8e949f4490b" translate="yes" xml:space="preserve">
          <source>Create a new directory with the name &lt;code&gt;DIR&lt;/code&gt;. If &lt;code&gt;RECURSE&lt;/code&gt; is</source>
          <target state="translated">创建一个名为 &lt;code&gt;DIR&lt;/code&gt; 的新目录。如果 &lt;code&gt;RECURSE&lt;/code&gt; 是</target>
        </trans-unit>
        <trans-unit id="d7b61de6466590ec52305327e27f85b32bce01c7" translate="yes" xml:space="preserve">
          <source>Create a new file with mode 0640. Set up the file for writing.</source>
          <target state="translated">建立一个新的文件,模式为0640。设置文件的写法。</target>
        </trans-unit>
        <trans-unit id="a881eb9aa6d20d6d909d029e4c81928e7bc18391" translate="yes" xml:space="preserve">
          <source>Create a new file. This returns a file descriptor like the ones returned by &lt;code&gt;POSIX::open&lt;/code&gt; . Use &lt;code&gt;POSIX::close&lt;/code&gt; to close the file.</source>
          <target state="translated">创建一个新文件。这将返回一个文件描述符，类似于 &lt;code&gt;POSIX::open&lt;/code&gt; 返回的文件描述符。使用 &lt;code&gt;POSIX::close&lt;/code&gt; 关闭文件。</target>
        </trans-unit>
        <trans-unit id="445fc1101f8551e9cb43686f8e600dc459f919c4" translate="yes" xml:space="preserve">
          <source>Create a new file. This returns a file descriptor like the ones returned by &lt;code&gt;POSIX::open&lt;/code&gt;. Use &lt;code&gt;POSIX::close&lt;/code&gt; to close the file.</source>
          <target state="translated">创建一个新文件。这将返回一个文件描述符，类似于 &lt;code&gt;POSIX::open&lt;/code&gt; 返回的文件描述符。使用 &lt;code&gt;POSIX::close&lt;/code&gt; 关闭文件。</target>
        </trans-unit>
        <trans-unit id="74dd602c7c6a1f1cb930e156dfc79f8193fd0b55" translate="yes" xml:space="preserve">
          <source>Create a new instance of the specified class.</source>
          <target state="translated">创建一个新的指定类的实例。</target>
        </trans-unit>
        <trans-unit id="64f6acc53d3851191bdd2749b905728b84f85fc2" translate="yes" xml:space="preserve">
          <source>Create a new instance.</source>
          <target state="translated">创建一个新的实例。</target>
        </trans-unit>
        <trans-unit id="6cc585773d59263f24bc1ca5a399b6f4d519e67f" translate="yes" xml:space="preserve">
          <source>Create a new list object. Properties may be specified through a hash reference like this:</source>
          <target state="translated">创建一个新的列表对象。属性可以通过像这样的哈希引用来指定。</target>
        </trans-unit>
        <trans-unit id="9ba7c62c943cded5489456e206c446db08d870de" translate="yes" xml:space="preserve">
          <source>Create a new object.</source>
          <target state="translated">创建一个新对象。</target>
        </trans-unit>
        <trans-unit id="4fc5237945662db949fd60b133121cf759a76543" translate="yes" xml:space="preserve">
          <source>Create a new object. Any arguments passed to &lt;code&gt;new&lt;/code&gt; will be passed on to the &lt;a href=&quot;#_initialize&quot;&gt;&quot;_initialize&quot;&lt;/a&gt; method. Returns a new object.</source>
          <target state="translated">创建一个新对象。传递给 &lt;code&gt;new&lt;/code&gt; 的所有参数都将传递给&lt;a href=&quot;#_initialize&quot;&gt;&amp;ldquo; _initialize&amp;rdquo;&lt;/a&gt;方法。返回一个新对象。</target>
        </trans-unit>
        <trans-unit id="fcb9d9d9881e78822adfe0bbac4eee7555066ecb" translate="yes" xml:space="preserve">
          <source>Create a new object. Any arguments passed to &lt;code&gt;new&lt;/code&gt; will be passed on to the &lt;a href=&quot;#_initialize&quot;&gt;_initialize&lt;/a&gt; method. Returns a new object.</source>
          <target state="translated">创建一个新对象。传递给 &lt;code&gt;new&lt;/code&gt; 的所有参数都将传递给&lt;a href=&quot;#_initialize&quot;&gt;_initialize&lt;/a&gt;方法。返回一个新对象。</target>
        </trans-unit>
        <trans-unit id="0a8a658289cee30e5b27a60292e471ac179b2181" translate="yes" xml:space="preserve">
          <source>Create a new padlist, updating the global variables for the currently-compiling padlist to point to the new padlist. The following flags can be OR'ed together:</source>
          <target state="translated">创建一个新的padlist,更新当前编译的padlist的全局变量以指向新的padlist。以下标志可以一起被OR'ed。</target>
        </trans-unit>
        <trans-unit id="a381cf88627871500783405f1261bcbd1a0d062f" translate="yes" xml:space="preserve">
          <source>Create a new ping object. All of the parameters are optional and can be passed as hash ref. All options besides the first 7 must be passed as hash ref.</source>
          <target state="translated">创建一个新的ping对象。所有的参数都是可选的,并且可以作为哈希值传递。除了前7个选项外,其他所有选项都必须以hash ref的形式传递。</target>
        </trans-unit>
        <trans-unit id="ee2261993683f4a99c0cc5814cbab351173c8386" translate="yes" xml:space="preserve">
          <source>Create a new ping object. All of the parameters are optional. $proto specifies the protocol to use when doing a ping. The current choices are &quot;tcp&quot;, &quot;udp&quot;, &quot;icmp&quot;, &quot;stream&quot;, &quot;syn&quot;, or &quot;external&quot;. The default is &quot;tcp&quot;.</source>
          <target state="translated">创建一个新的ping对象。所有的参数都是可选的。$proto 指定在进行 ping 时要使用的协议,目前的选择是 &quot;tcp&quot;、&quot;udp&quot;、&quot;icmp&quot;、&quot;stream&quot;、&quot;syn &quot;或 &quot;external&quot;。当前的选择是 &quot;tcp&quot;、&quot;udp&quot;、&quot;icmp&quot;、&quot;stream&quot;、&quot;syn &quot;或 &quot;external&quot;。默认为 &quot;tcp&quot;。</target>
        </trans-unit>
        <trans-unit id="3430e716a61ae83b9e144c2c5c8622a75ae88917" translate="yes" xml:space="preserve">
          <source>Create a new semaphore set associated with &lt;code&gt;KEY&lt;/code&gt; . &lt;code&gt;NSEMS&lt;/code&gt; is the number of semaphores in the set. A new set is created if</source>
          <target state="translated">创建一个与 &lt;code&gt;KEY&lt;/code&gt; 关联的新信号量集。 &lt;code&gt;NSEMS&lt;/code&gt; 是集合中信号量的数量。如果创建新集</target>
        </trans-unit>
        <trans-unit id="5300bc6a8a043332f6fab7d1d3b3ef9d63c43aec" translate="yes" xml:space="preserve">
          <source>Create a new semaphore set associated with &lt;code&gt;KEY&lt;/code&gt;. &lt;code&gt;NSEMS&lt;/code&gt; is the number of semaphores in the set. A new set is created if</source>
          <target state="translated">创建一个与 &lt;code&gt;KEY&lt;/code&gt; 关联的新信号量集。 &lt;code&gt;NSEMS&lt;/code&gt; 是集合中信号量的数量。如果创建了一个新的集合</target>
        </trans-unit>
        <trans-unit id="4a7ef28ba91fedd9a746c8523a72dbcb8eb69fb7" translate="yes" xml:space="preserve">
          <source>Create a perl subroutine for the specified macros rather than autoload with the constant() subroutine. These macros are assumed to have a return type of &lt;b&gt;char *&lt;/b&gt;, e.g., -s sec_rgy_wildcard_name,sec_rgy_wildcard_sid.</source>
          <target state="translated">为指定的宏创建一个perl子例程，而不是使用constant（）子例程自动加载。假定这些宏具有&lt;b&gt;char *&lt;/b&gt;的返回类型，例如-s sec_rgy_wildcard_name，sec_rgy_wildcard_sid。</target>
        </trans-unit>
        <trans-unit id="481a60ee3395b3b1cf7945f04080acc645acd340" translate="yes" xml:space="preserve">
          <source>Create a reverse hash:</source>
          <target state="translated">创建一个反向哈希。</target>
        </trans-unit>
        <trans-unit id="f0e04e4f20e56fddcf662a44731769084042c59e" translate="yes" xml:space="preserve">
          <source>Create a set with &lt;code&gt;SIGUSR1&lt;/code&gt; .</source>
          <target state="translated">使用 &lt;code&gt;SIGUSR1&lt;/code&gt; 创建一个集合。</target>
        </trans-unit>
        <trans-unit id="65d8873759f47cb342c9acff3cf8e18b7ab92e14" translate="yes" xml:space="preserve">
          <source>Create a set with &lt;code&gt;SIGUSR1&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;SIGUSR1&lt;/code&gt; 创建一个集合。</target>
        </trans-unit>
        <trans-unit id="3ac62f075bf8001f6525a8640c77b2f7fb60c81b" translate="yes" xml:space="preserve">
          <source>Create a temporary directory using an object oriented interface.</source>
          <target state="translated">使用面向对象的接口创建一个临时目录。</target>
        </trans-unit>
        <trans-unit id="5a37b1975e7c41c6df80b11015d351a2c6a99815" translate="yes" xml:space="preserve">
          <source>Create a temporary directory using the supplied template, but attempt to remove it (and all files inside it) when the program exits. Note that an attempt will be made to remove all files from the directory even if they were not created by this module (otherwise why ask to clean it up?). The directory removal is made with the rmtree() function from the &lt;a href=&quot;File::Path&quot;&gt;File::Path&lt;/a&gt; module. Of course, if the template is not specified, the temporary directory will be created in tmpdir() and will also be removed at program exit.</source>
          <target state="translated">使用提供的模板创建一个临时目录，但是在程序退出时尝试将其删除（以及其中的所有文件）。请注意，即使文件不是由该模块创建的，也将尝试从目录中删除所有文件（否则为什么要对其进行清理？）。目录删除是通过&lt;a href=&quot;File::Path&quot;&gt;File :: Path&lt;/a&gt;模块中的rmtree（）函数完成的。当然，如果未指定模板，则将在tmpdir（）中创建临时目录，并且还将在程序退出时将其删除。</target>
        </trans-unit>
        <trans-unit id="303ec3c6180101ba95b912105da0ce7bfcb1deb4" translate="yes" xml:space="preserve">
          <source>Create a temporary directory using the supplied template, but attempt to remove it (and all files inside it) when the program exits. Note that an attempt will be made to remove all files from the directory even if they were not created by this module (otherwise why ask to clean it up?). The directory removal is made with the rmtree() function from the L&amp;lt;:path&amp;gt; module. Of course, if the template is not specified, the temporary directory will be created in tmpdir() and will also be removed at program exit.</source>
          <target state="translated">使用提供的模板创建一个临时目录，但是在程序退出时尝试将其删除（以及其中的所有文件）。请注意，即使文件不是由该模块创建的，也将尝试从目录中删除所有文件（否则为什么要对其进行清理？）。使用L &amp;lt;：path&amp;gt;模块的rmtree（）函数删除目录。当然，如果未指定模板，则将在tmpdir（）中创建临时目录，并且还将在程序退出时将其删除。</target>
        </trans-unit>
        <trans-unit id="55698f6a3601555bd654382a0b288d1302315bd9" translate="yes" xml:space="preserve">
          <source>Create a temporary file in the current directory using the supplied template. Trailing `X' characters are replaced with random letters to generate the filename. At least four `X' characters must be present at the end of the template.</source>
          <target state="translated">使用提供的模板在当前目录下创建一个临时文件。后面的 &quot;X &quot;字符用随机字母代替,以生成文件名。模板末尾必须至少有四个 &quot;X &quot;字符。</target>
        </trans-unit>
        <trans-unit id="3d32940649f45ad367c9176393ba5a579442cb0b" translate="yes" xml:space="preserve">
          <source>Create a temporary file in the directory specified for temporary files, as specified by the tmpdir() function in &lt;a href=&quot;File::Spec&quot;&gt;File::Spec&lt;/a&gt;.</source>
          <target state="translated">在为临时文件指定的目录中创建一个临时文件，如&lt;a href=&quot;File::Spec&quot;&gt;File :: Spec中&lt;/a&gt;的tmpdir（）函数所指定。</target>
        </trans-unit>
        <trans-unit id="bc36137f6fa982d9a92b93d4881687f9cba40176" translate="yes" xml:space="preserve">
          <source>Create a temporary file in the directory specified for temporary files, as specified by the tmpdir() function in L&amp;lt;:spec&amp;gt;.</source>
          <target state="translated">在为临时文件指定的目录中创建一个临时文件，如L &amp;lt;：spec&amp;gt;中的tmpdir（）函数所指定。</target>
        </trans-unit>
        <trans-unit id="24495d1f7765573877dcd812b1a4948cc60660ee" translate="yes" xml:space="preserve">
          <source>Create a temporary file object.</source>
          <target state="translated">创建一个临时文件对象。</target>
        </trans-unit>
        <trans-unit id="7c0fc4a47822586341f44d1070a0fffe92259da6" translate="yes" xml:space="preserve">
          <source>Create an ARexx host for your script / program.</source>
          <target state="translated">为您的脚本/程序创建一个ARexx主机。</target>
        </trans-unit>
        <trans-unit id="69935c6719cc9d9adfa0d718baf1f913522468e6" translate="yes" xml:space="preserve">
          <source>Create an empty set.</source>
          <target state="translated">创建一个空集。</target>
        </trans-unit>
        <trans-unit id="36282f608207859c78f549fdddb59df654b98999" translate="yes" xml:space="preserve">
          <source>Create an interprocess channel. This returns file descriptors like those returned by &lt;code&gt;POSIX::open&lt;/code&gt; .</source>
          <target state="translated">创建一个进程间通道。返回的文件描述符类似于 &lt;code&gt;POSIX::open&lt;/code&gt; 返回的文件描述符。</target>
        </trans-unit>
        <trans-unit id="e5e03e5a04f360b1f255e67e4046f3888bc8a7df" translate="yes" xml:space="preserve">
          <source>Create an interprocess channel. This returns file descriptors like those returned by &lt;code&gt;POSIX::open&lt;/code&gt;.</source>
          <target state="translated">创建一个进程间通道。返回的文件描述符类似于 &lt;code&gt;POSIX::open&lt;/code&gt; 返回的文件描述符。</target>
        </trans-unit>
        <trans-unit id="ff79fe2c6259816c55880a8381a93476c6afdffb" translate="yes" xml:space="preserve">
          <source>Create an iterator. Expects one argument containing a filehandle.</source>
          <target state="translated">创建一个迭代器。期待一个包含文件柄的参数。</target>
        </trans-unit>
        <trans-unit id="616caec393d0885ab17bf7298761058cad98107e" translate="yes" xml:space="preserve">
          <source>Create an iterator. Expects one argument containing a hashref of the form:</source>
          <target state="translated">创建一个迭代器。期待一个参数,该参数包含一个形式的哈希夫。</target>
        </trans-unit>
        <trans-unit id="7016a4d543732a6745b00979a34621bd52cd3c30" translate="yes" xml:space="preserve">
          <source>Create an iterator. Provided by &lt;a href=&quot;../object&quot;&gt;TAP::Object&lt;/a&gt;.</source>
          <target state="translated">创建一个迭代器。由&lt;a href=&quot;../object&quot;&gt;TAP :: Object提供&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0ea44bf28584f175786037d8254e458ec9dd9dc5" translate="yes" xml:space="preserve">
          <source>Create an iterator. Provided by &lt;a href=&quot;TAP::Object&quot;&gt;TAP::Object&lt;/a&gt;.</source>
          <target state="translated">创建一个迭代器。由&lt;a href=&quot;TAP::Object&quot;&gt;TAP :: Object提供&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f2a61216ea6bd1172096b7e521d63d97ec506b32" translate="yes" xml:space="preserve">
          <source>Create an iterator. Takes one argument: an &lt;code&gt;$array_ref&lt;/code&gt;</source>
          <target state="translated">创建一个迭代器。接受一个参数： &lt;code&gt;$array_ref&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b2d5d5f750ed54bfd6f2d8da33d26daea2ebb512" translate="yes" xml:space="preserve">
          <source>Create an object to store the state of a deparsing operation and any options. The options are the same as those that can be given on the command line (see &lt;a href=&quot;#OPTIONS&quot;&gt;&quot;OPTIONS&quot;&lt;/a&gt;); options that are separated by commas after &lt;b&gt;-MO=Deparse&lt;/b&gt; should be given as separate strings.</source>
          <target state="translated">创建一个对象来存储解析操作和所有选项的状态。这些选项与可以在命令行上给出的选项相同（请参阅&lt;a href=&quot;#OPTIONS&quot;&gt;&amp;ldquo; OPTIONS&amp;rdquo;&lt;/a&gt;）；&lt;b&gt;-MO = Deparse&lt;/b&gt;之后用逗号分隔的选项应作为单独的字符串给出。</target>
        </trans-unit>
        <trans-unit id="d452463d593e43e7b412e932435358550d3459d0" translate="yes" xml:space="preserve">
          <source>Create an object to store the state of a deparsing operation and any options. The options are the same as those that can be given on the command line (see &lt;a href=&quot;#OPTIONS&quot;&gt;OPTIONS&lt;/a&gt;); options that are separated by commas after &lt;b&gt;-MO=Deparse&lt;/b&gt; should be given as separate strings.</source>
          <target state="translated">创建一个对象以存储解析操作和所有选项的状态。这些选项与可以在命令行上给出的选项相同（请参阅&lt;a href=&quot;#OPTIONS&quot;&gt;OPTIONS&lt;/a&gt;）；在&lt;b&gt;-MO = Deparse&lt;/b&gt;之后用逗号分隔的选项应作为单独的字符串给出。</target>
        </trans-unit>
        <trans-unit id="9112787448a0b0a1b976b8609db263871f034c88" translate="yes" xml:space="preserve">
          <source>Create and return a new interpreter by cloning the current one.</source>
          <target state="translated">通过克隆当前的解释器创建并返回一个新的解释器。</target>
        </trans-unit>
        <trans-unit id="681f59f5e6812683ee0d03597d9f2b4876cee8dc" translate="yes" xml:space="preserve">
          <source>Create header and footer blocks containing the text of the &quot;NAME&quot; section.</source>
          <target state="translated">创建包含 &quot;名称 &quot;部分文本的页眉和页脚块。</target>
        </trans-unit>
        <trans-unit id="dca3cdfdc4e09deba69010bedea95d1cd1f538b3" translate="yes" xml:space="preserve">
          <source>Create if nonexistent.</source>
          <target state="translated">如果不存在,则创建。</target>
        </trans-unit>
        <trans-unit id="88462160ded38bbe00b8b536b6d9dbb7a375a4b9" translate="yes" xml:space="preserve">
          <source>Create new installation system based on installperl links and Amiga protection bits now set correctly.</source>
          <target state="translated">基于installperl链接创建新的安装系统,现在Amiga保护位设置正确。</target>
        </trans-unit>
        <trans-unit id="2d5ca272bf9f8abe24e8b1f4fd428df6751e11d3" translate="yes" xml:space="preserve">
          <source>Create or remove directory trees</source>
          <target state="translated">创建或删除目录树</target>
        </trans-unit>
        <trans-unit id="896a63b966c3b07644d559d9c2dce6fddbbfbefe" translate="yes" xml:space="preserve">
          <source>Create simple getter/setters.</source>
          <target state="translated">创建简单的getter/setters。</target>
        </trans-unit>
        <trans-unit id="09b5614e18fec7e0ddfc36b2a94655c1a81db1b0" translate="yes" xml:space="preserve">
          <source>Create the extension</source>
          <target state="translated">创建分机</target>
        </trans-unit>
        <trans-unit id="8f40f57f9492b3e48f797cfcaf50c07df2a5569c" translate="yes" xml:space="preserve">
          <source>CreateFile</source>
          <target state="translated">CreateFile</target>
        </trans-unit>
        <trans-unit id="e5fb5385210935e8dcb069539d4949d49521e1e4" translate="yes" xml:space="preserve">
          <source>CreateFileW</source>
          <target state="translated">CreateFileW</target>
        </trans-unit>
        <trans-unit id="82149e5249dc1d6a3b9690dd546cd84a48533f50" translate="yes" xml:space="preserve">
          <source>Created - 18 Jan 2001</source>
          <target state="translated">创建于2001年1月18日</target>
        </trans-unit>
        <trans-unit id="33db1a73ae0e0d1852a295cdab91f536d92a8891" translate="yes" xml:space="preserve">
          <source>Created by Tom Hughes &amp;lt;</source>
          <target state="translated">由汤姆&amp;middot;休斯（Tom Hughes）创建&amp;lt;</target>
        </trans-unit>
        <trans-unit id="a77e312a87d9bf99a129ae7deca657dc396bc238" translate="yes" xml:space="preserve">
          <source>Created version 1.0 of this document.</source>
          <target state="translated">创建本文件的1.0版本。</target>
        </trans-unit>
        <trans-unit id="84bf65092e26b371444b5fc28387eb2e9d82921f" translate="yes" xml:space="preserve">
          <source>Creates a CPAN.pm autobundle with CPAN::Shell-&amp;gt;autobundle.</source>
          <target state="translated">使用CPAN :: Shell-&amp;gt; autobundle创建一个CPAN.pm自动捆绑。</target>
        </trans-unit>
        <trans-unit id="e6cdaaaee22d0c4e6b235592749143d45c2fe9b7" translate="yes" xml:space="preserve">
          <source>Creates a constant sub equivalent to Perl &lt;code&gt;sub FOO () { 123 }&lt;/code&gt; which is eligible for inlining at compile-time.</source>
          <target state="translated">创建一个等效于Perl &lt;code&gt;sub FOO () { 123 }&lt;/code&gt; 的常量子，该常量可以在编译时进行内联。</target>
        </trans-unit>
        <trans-unit id="5aded7133df03bc0422a1afeffcfd6cb49151a72" translate="yes" xml:space="preserve">
          <source>Creates a digest string exactly like the &lt;a href=&quot;http://man.he.net/man3/crypt&quot;&gt;crypt(3)&lt;/a&gt; function in the C library (assuming that you actually have a version there that has not been extirpated as a potential munition).</source>
          <target state="translated">创建一个与C库中的&lt;a href=&quot;http://man.he.net/man3/crypt&quot;&gt;crypt（3）&lt;/a&gt;函数完全相同的摘要字符串（假定您那里确实有一个尚未被淘汰的潜在弹药版本）。</target>
        </trans-unit>
        <trans-unit id="7f75da7fd0f98bc8dc84b4b1a932c3f5aea3cd14" translate="yes" xml:space="preserve">
          <source>Creates a digest string exactly like the crypt(3) function in the C library (assuming that you actually have a version there that has not been extirpated as a potential munition).</source>
          <target state="translated">创建一个与 C 库中 crypt(3)函数一模一样的摘要字符串 (假设你真的有一个没有被作为潜在弹药消灭的版本)。</target>
        </trans-unit>
        <trans-unit id="c1a27e7cadba2fd48b0875a29f86a14df4faced6" translate="yes" xml:space="preserve">
          <source>Creates a globally unique 128 bit integer that can be used as a persistent identifier in a distributed setting. To a very high degree of certainty this function returns a unique value. No other invocation, on the same or any other system (networked or not), should return the same value.</source>
          <target state="translated">创建一个全局唯一的128位整数,在分布式环境中可以作为一个持久性标识符使用。在很高的程度上,这个函数会返回一个唯一的值。在同一系统或任何其他系统(联网或不联网)上,其他调用都不应该返回相同的值。</target>
        </trans-unit>
        <trans-unit id="eac496469522ef212783107cb6f208d37140024c" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;IO::Handle&lt;/code&gt; object.</source>
          <target state="translated">创建一个新的 &lt;code&gt;IO::Handle&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="7484847414544410dbe69c81f60828adde826733" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;IO::Socket::IP&lt;/code&gt; object, containing a newly created socket handle according to the named arguments passed. The recognised arguments are:</source>
          <target state="translated">根据传递的命名参数，创建一个新的 &lt;code&gt;IO::Socket::IP&lt;/code&gt; 对象，其中包含一个新创建的套接字句柄。公认的参数是：</target>
        </trans-unit>
        <trans-unit id="950a7fce8052aa44e77d67eb7cce6a9b17f503cc" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;POSIX::SigAction&lt;/code&gt; object which corresponds to the C &lt;code&gt;struct sigaction&lt;/code&gt; . This object will be destroyed automatically when it is no longer needed. The first parameter is the handler, a sub reference. The second parameter is a &lt;code&gt;POSIX::SigSet&lt;/code&gt; object, it defaults to the empty set. The third parameter contains the &lt;code&gt;sa_flags&lt;/code&gt; , it defaults to 0.</source>
          <target state="translated">创建一个新的 &lt;code&gt;POSIX::SigAction&lt;/code&gt; 对象，该对象对应于C &lt;code&gt;struct sigaction&lt;/code&gt; 。不再需要该对象时，它将自动销毁。第一个参数是处理程序，即子引用。第二个参数是 &lt;code&gt;POSIX::SigSet&lt;/code&gt; 对象，它默认为空集。第三个参数包含 &lt;code&gt;sa_flags&lt;/code&gt; ，默认为0。</target>
        </trans-unit>
        <trans-unit id="c38efaff88563edf3b974e5af1829103af6520e3" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;POSIX::SigAction&lt;/code&gt; object which corresponds to the C &lt;code&gt;struct sigaction&lt;/code&gt;. This object will be destroyed automatically when it is no longer needed. The first parameter is the handler, a sub reference. The second parameter is a &lt;code&gt;POSIX::SigSet&lt;/code&gt; object, it defaults to the empty set. The third parameter contains the &lt;code&gt;sa_flags&lt;/code&gt;, it defaults to 0.</source>
          <target state="translated">创建一个新的 &lt;code&gt;POSIX::SigAction&lt;/code&gt; 对象，该对象对应于C &lt;code&gt;struct sigaction&lt;/code&gt; 。不再需要该对象时，它将自动销毁。第一个参数是处理程序，即子引用。第二个参数是 &lt;code&gt;POSIX::SigSet&lt;/code&gt; 对象，默认为空集。第三个参数包含 &lt;code&gt;sa_flags&lt;/code&gt; ，默认为0。</target>
        </trans-unit>
        <trans-unit id="3a046baa92e74817bc28338c57861df9a66ad3d9" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;autodie::Scope::Guard&lt;/code&gt;, which will invoke the given sub once it goes out of scope (i.e. its DESTROY handler is called).</source>
          <target state="translated">创建一个新的 &lt;code&gt;autodie::Scope::Guard&lt;/code&gt; ，一旦超出范围（即调用其DESTROY处理程序），它将调用给定的子项。</target>
        </trans-unit>
        <trans-unit id="9132e5fe04a353ade09ed27141c38800e9c90fdc" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;autodie::Scope::GuardStack&lt;/code&gt;. The stack is initially empty and must be inserted into &lt;code&gt;%^H&lt;/code&gt; by the creator.</source>
          <target state="translated">创建一个新的 &lt;code&gt;autodie::Scope::GuardStack&lt;/code&gt; 。堆栈最初是空的，创建者必须将其插入 &lt;code&gt;%^H&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4ae48dd26f42c4c2190d5e11959efe62c8e9e53c" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;autodie::exception&lt;/code&gt; object. Normally called directly from an autodying function. The &lt;code&gt;function&lt;/code&gt; argument is required, its the function we were trying to call that generated the exception. The &lt;code&gt;args&lt;/code&gt; parameter is optional.</source>
          <target state="translated">创建一个新的 &lt;code&gt;autodie::exception&lt;/code&gt; 对象。通常直接从自动染色函数调用。该 &lt;code&gt;function&lt;/code&gt; 是必需的参数，它的我们试图调用生成异常的函数。该 &lt;code&gt;args&lt;/code&gt; 参数是可选。</target>
        </trans-unit>
        <trans-unit id="4409ce2d7a51f583ec857ef63305d9c328af09b3" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;refcounted_he&lt;/code&gt; . This consists of a single key/value pair and a reference to an existing &lt;code&gt;refcounted_he&lt;/code&gt; chain (which may be empty), and thus forms a longer chain. When using the longer chain, the new key/value pair takes precedence over any entry for the same key further along the chain.</source>
          <target state="translated">创建一个新的 &lt;code&gt;refcounted_he&lt;/code&gt; 。它由单个键/值对和对现有 &lt;code&gt;refcounted_he&lt;/code&gt; 链（可能为空）的引用组成，因此形成了更长的链。当使用较长的链时，新的键/值对优先于沿链的同一键的任何条目。</target>
        </trans-unit>
        <trans-unit id="d24f6045f4a5ad4aafd034d97f210a1c9783f3c9" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;refcounted_he&lt;/code&gt;. This consists of a single key/value pair and a reference to an existing &lt;code&gt;refcounted_he&lt;/code&gt; chain (which may be empty), and thus forms a longer chain. When using the longer chain, the new key/value pair takes precedence over any entry for the same key further along the chain.</source>
          <target state="translated">创建一个新的 &lt;code&gt;refcounted_he&lt;/code&gt; 。它由单个键/值对和对现有 &lt;code&gt;refcounted_he&lt;/code&gt; 链（可能为空）的引用组成，因此形成了更长的链。当使用较长的链时，新的键/值对优先于沿链的同一键的任何条目。</target>
        </trans-unit>
        <trans-unit id="8ec4a2bcc46bbdc56e8f9146fd2af6f3bc1fb030" translate="yes" xml:space="preserve">
          <source>Creates a new AV and populates it with a list of SVs. The SVs are copied into the array, so they may be freed after the call to &lt;code&gt;av_make&lt;/code&gt;. The new AV will have a reference count of 1.</source>
          <target state="translated">创建一个新的AV，并用SV列表填充它。SV被复制到数组中，因此可以在调用 &lt;code&gt;av_make&lt;/code&gt; 之后释放它们。新的AV的参考计数为1。</target>
        </trans-unit>
        <trans-unit id="50f1aadb519c6f1717d95b45f0702486fa9496f0" translate="yes" xml:space="preserve">
          <source>Creates a new AV and populates it with a list of SVs. The SVs are copied into the array, so they may be freed after the call to av_make. The new AV will have a reference count of 1.</source>
          <target state="translated">创建一个新的AV,并在其中填充SVs列表。SVs会被复制到数组中,所以在调用av_make后,它们可能会被释放。新的AV的引用数为1。</target>
        </trans-unit>
        <trans-unit id="33114a24c831591f9857c8f08551925f33fb6511" translate="yes" xml:space="preserve">
          <source>Creates a new AV. The reference count is set to 1.</source>
          <target state="translated">创建一个新的AV。参考数设置为1。</target>
        </trans-unit>
        <trans-unit id="aa1ac2ca7a7bb62339b5b238de6e909b22341ab0" translate="yes" xml:space="preserve">
          <source>Creates a new BigInt object from a scalar or another BigInt object. The input is accepted as decimal, hex (with leading '0x') or binary (with leading '0b').</source>
          <target state="translated">从一个标量或另一个BigInt对象创建一个新的BigInt对象。输入是十进制、十六进制(前导'0x')或二进制(前导'0b')。</target>
        </trans-unit>
        <trans-unit id="cc0f0aa1d0ba94cb717a19862e381519302e9596" translate="yes" xml:space="preserve">
          <source>Creates a new BigInt object representing NaN (Not A Number). If used on an object, it will set it to NaN:</source>
          <target state="translated">创建一个新的BigInt对象,表示NaN(非数字)。如果在一个对象上使用,它将把它设置为NaN。</target>
        </trans-unit>
        <trans-unit id="9de9810e6c72332db75b8fa66a77cdf8fc6dc8ae" translate="yes" xml:space="preserve">
          <source>Creates a new BigInt object representing infinity. The optional argument is either '-' or '+', indicating whether you want infinity or minus infinity. If used on an object, it will set it to infinity:</source>
          <target state="translated">创建一个新的BigInt对象,表示无穷大。可选参数是'-'或'+',表示你想要的是无穷大还是减去无穷大。如果使用在一个对象上,它将把它设置为无穷大。</target>
        </trans-unit>
        <trans-unit id="ef067d4e1aa5d4de6db6fbb3fdb193a34b25bcd5" translate="yes" xml:space="preserve">
          <source>Creates a new BigInt object representing one. The optional argument is either '-' or '+', indicating whether you want one or minus one. If used on an object, it will set it to one:</source>
          <target state="translated">创建一个新的BigInt对象,代表1。可选参数是'-'或'+',表示你想要一还是减一。如果使用在一个对象上,它将把它设置为1。</target>
        </trans-unit>
        <trans-unit id="2d66a0e771c364720b98473ea0bd85073686ef36" translate="yes" xml:space="preserve">
          <source>Creates a new BigInt object representing zero. If used on an object, it will set it to zero:</source>
          <target state="translated">创建一个新的BigInt对象,代表零。如果在一个对象上使用,它将把它设置为零。</target>
        </trans-unit>
        <trans-unit id="d20d2a10f54e6100abf4b8bc65930a23b386ec56" translate="yes" xml:space="preserve">
          <source>Creates a new BigRat object representing NaN (Not A Number). If used on an object, it will set it to NaN:</source>
          <target state="translated">创建一个新的BigRat对象,表示NaN(Not A Number)。如果在一个对象上使用,它将把它设置为NaN。</target>
        </trans-unit>
        <trans-unit id="8e54fba1bcbca4c8eaaa9dd6e7ea9cb32b580444" translate="yes" xml:space="preserve">
          <source>Creates a new BigRat object representing infinity. The optional argument is either '-' or '+', indicating whether you want infinity or minus infinity. If used on an object, it will set it to infinity:</source>
          <target state="translated">创建一个新的BigRat对象,代表无穷大。可选参数是'-'或'+',表示你想要无穷大还是减去无穷大。如果用于一个对象,它将把它设置为无穷大。</target>
        </trans-unit>
        <trans-unit id="5f3a12ef28a2d888ef7332a28aa27fed8d7996d9" translate="yes" xml:space="preserve">
          <source>Creates a new BigRat object representing one. The optional argument is either '-' or '+', indicating whether you want one or minus one. If used on an object, it will set it to one:</source>
          <target state="translated">创建一个新的BigRat对象,代表一。可选参数是'-'或'+',表示你想要1还是减1。如果使用在一个对象上,它将把它设置为1。</target>
        </trans-unit>
        <trans-unit id="0281d7fc8fd0b71b7daaa747f8b92587af5a8942" translate="yes" xml:space="preserve">
          <source>Creates a new BigRat object representing zero. If used on an object, it will set it to zero:</source>
          <target state="translated">创建一个新的BigRat对象,代表零。如果在一个对象上使用,它将把它设置为零。</target>
        </trans-unit>
        <trans-unit id="f27ebfb7f2c2069457b323e2292201c271ad4602" translate="yes" xml:space="preserve">
          <source>Creates a new HV. The reference count is set to 1.</source>
          <target state="translated">创建一个新的 HV。参考数设置为1。</target>
        </trans-unit>
        <trans-unit id="e3dbd3e9bc9f1c096843db3964e5fc39735e0b91" translate="yes" xml:space="preserve">
          <source>Creates a new JSON::PP object that can be used to de/encode JSON strings. All boolean flags described below are by default</source>
          <target state="translated">创建一个新的JSON::PP对象,该对象可用于对JSON字符串进行解码。下面描述的所有布尔标志都是默认的。</target>
        </trans-unit>
        <trans-unit id="1c8d3aa8c2bcbf224a4651fe182a19a3da13957c" translate="yes" xml:space="preserve">
          <source>Creates a new Math::BigInt object from a scalar or another Math::BigInt object. The input is accepted as decimal, hexadecimal (with leading '0x') or binary (with leading '0b').</source>
          <target state="translated">从一个标量或另一个 Math::BigInt 对象创建一个新的 Math::BigInt 对象。输入可以接受十进制、十六进制(前导'0x')或二进制(前导'0b')。</target>
        </trans-unit>
        <trans-unit id="38601eac053171f7c46fcbecaee76fe95929b468" translate="yes" xml:space="preserve">
          <source>Creates a new Math::BigInt object representing NaN (Not A Number). If used as an instance method, assigns the value to the invocand.</source>
          <target state="translated">创建一个新的Math::BigInt对象,表示NaN(非数字)。如果作为实例方法使用,则将值分配给调用者。</target>
        </trans-unit>
        <trans-unit id="27fcba0723640eacf3b911df6ff2407445d0ce79" translate="yes" xml:space="preserve">
          <source>Creates a new Math::BigInt object representing PI. If used as an instance method, assigns the value to the invocand. With Math::BigInt this always returns 3.</source>
          <target state="translated">创建一个代表 PI 的新 Math::BigInt 对象。如果作为实例方法使用,则将值分配给调用者。对于Math::BigInt,它总是返回3。</target>
        </trans-unit>
        <trans-unit id="c1d745853d0d53682b8c1567b476dd27b0cc2176" translate="yes" xml:space="preserve">
          <source>Creates a new Math::BigInt object representing infinity. The optional argument is either '-' or '+', indicating whether you want infinity or minus infinity. If used as an instance method, assigns the value to the invocand.</source>
          <target state="translated">创建一个新的 Math::BigInt 对象,表示无穷大。可选参数是'-'或'+',表示你想要的是无穷大还是减无穷大。如果作为实例方法使用,则将该值分配给调用者。</target>
        </trans-unit>
        <trans-unit id="fa24f41898df927efcafe31997fa330266de41ec" translate="yes" xml:space="preserve">
          <source>Creates a new Math::BigInt object representing one. The optional argument is either '-' or '+', indicating whether you want plus one or minus one. If used as an instance method, assigns the value to the invocand.</source>
          <target state="translated">创建一个新的 Math::BigInt 对象,表示一。可选参数是'-'或'+',表示你想要加一还是减一。如果作为实例方法使用,则将值分配给调用者。</target>
        </trans-unit>
        <trans-unit id="5c4c9fc922e6f0fc2c8c0dc9a56aa12406f49a23" translate="yes" xml:space="preserve">
          <source>Creates a new SV and copies a floating point value into it. The reference count for the SV is set to 1.</source>
          <target state="translated">创建一个新的SV,并将一个浮点值复制到其中。SV的引用次数被设置为1。</target>
        </trans-unit>
        <trans-unit id="8a706dc63eba9f9d97a63992d45f33ffaa0260f8" translate="yes" xml:space="preserve">
          <source>Creates a new SV and copies a string (which may contain &lt;code&gt;NUL&lt;/code&gt; (&lt;code&gt;\0&lt;/code&gt; ) characters) into it. If utf8 is true, calls &lt;code&gt;SvUTF8_on&lt;/code&gt; on the new SV. Implemented as a wrapper around &lt;code&gt;newSVpvn_flags&lt;/code&gt; .</source>
          <target state="translated">创建一个新的SV并将一个字符串（可能包含 &lt;code&gt;NUL&lt;/code&gt; （ &lt;code&gt;\0&lt;/code&gt; ）字符）复制到其中。如果utf8为true， &lt;code&gt;SvUTF8_on&lt;/code&gt; 在新SV上调用SvUTF8_on。作为 &lt;code&gt;newSVpvn_flags&lt;/code&gt; 的包装器实现。</target>
        </trans-unit>
        <trans-unit id="ba2d40d3f42edeb3193c212e63e131081199c97e" translate="yes" xml:space="preserve">
          <source>Creates a new SV and copies a string (which may contain &lt;code&gt;NUL&lt;/code&gt; (&lt;code&gt;\0&lt;/code&gt; ) characters) into it. The reference count for the SV is set to 1. If &lt;code&gt;len&lt;/code&gt; is zero, Perl will compute the length using strlen(), (which means if you use this option, that &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; can't have embedded &lt;code&gt;NUL&lt;/code&gt; characters and has to have a terminating &lt;code&gt;NUL&lt;/code&gt; byte).</source>
          <target state="translated">创建一个新的SV并将一个字符串（可能包含 &lt;code&gt;NUL&lt;/code&gt; （ &lt;code&gt;\0&lt;/code&gt; ）字符）复制到其中。SV的引用计数设置为1。如果 &lt;code&gt;len&lt;/code&gt; 为零，则Perl将使用strlen（）计算长度（这意味着，如果使用此选项，则 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 不能嵌入 &lt;code&gt;NUL&lt;/code&gt; 字符，并且必须具有终止符 &lt;code&gt;NUL&lt;/code&gt; 字节）。</target>
        </trans-unit>
        <trans-unit id="b321a7140bf968fa858a05cea608e9cde629793f" translate="yes" xml:space="preserve">
          <source>Creates a new SV and copies a string (which may contain &lt;code&gt;NUL&lt;/code&gt; (&lt;code&gt;\0&lt;/code&gt; ) characters) into it. The reference count for the SV is set to 1. Note that if &lt;code&gt;len&lt;/code&gt; is zero, Perl will create a zero length string. You are responsible for ensuring that the source string is at least &lt;code&gt;len&lt;/code&gt; bytes long. If the &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; argument is NULL the new SV will be undefined. Currently the only flag bits accepted are &lt;code&gt;SVf_UTF8&lt;/code&gt; and &lt;code&gt;SVs_TEMP&lt;/code&gt; . If &lt;code&gt;SVs_TEMP&lt;/code&gt; is set, then &lt;code&gt;sv_2mortal()&lt;/code&gt; is called on the result before returning. If &lt;code&gt;SVf_UTF8&lt;/code&gt; is set, &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; is considered to be in UTF-8 and the &lt;code&gt;SVf_UTF8&lt;/code&gt; flag will be set on the new SV. &lt;code&gt;newSVpvn_utf8()&lt;/code&gt; is a convenience wrapper for this function, defined as</source>
          <target state="translated">创建一个新的SV并将一个字符串（可能包含 &lt;code&gt;NUL&lt;/code&gt; （ &lt;code&gt;\0&lt;/code&gt; ）字符）复制到其中。 SV的引用计数设置为1。请注意，如果 &lt;code&gt;len&lt;/code&gt; 为零，Perl将创建一个零长度的字符串。您有责任确保源字符串的长度至少为 &lt;code&gt;len&lt;/code&gt; 个字节。如果 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 参数为NULL，则新的SV将是未定义的。当前，唯一接受的标志位是 &lt;code&gt;SVf_UTF8&lt;/code&gt; 和 &lt;code&gt;SVs_TEMP&lt;/code&gt; 。如果设置了 &lt;code&gt;SVs_TEMP&lt;/code&gt; ，则在返回之前对结果调用 &lt;code&gt;sv_2mortal()&lt;/code&gt; 。如果设置了 &lt;code&gt;SVf_UTF8&lt;/code&gt; ，则 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 被认为是UTF-8，并且 &lt;code&gt;SVf_UTF8&lt;/code&gt; 标志将在新的SV上设置。 &lt;code&gt;newSVpvn_utf8()&lt;/code&gt; 是此函数的便捷包装，定义为</target>
        </trans-unit>
        <trans-unit id="0022d70bbbc5f9e0e3696df44121939198d270aa" translate="yes" xml:space="preserve">
          <source>Creates a new SV and copies a string (which may contain &lt;code&gt;NUL&lt;/code&gt; (&lt;code&gt;\0&lt;/code&gt;) characters) into it. If &lt;code&gt;utf8&lt;/code&gt; is true, calls &lt;code&gt;SvUTF8_on&lt;/code&gt; on the new SV. Implemented as a wrapper around &lt;code&gt;newSVpvn_flags&lt;/code&gt;.</source>
          <target state="translated">创建一个新的SV并将一个字符串（可能包含 &lt;code&gt;NUL&lt;/code&gt; （ &lt;code&gt;\0&lt;/code&gt; ）字符）复制到其中。如果 &lt;code&gt;utf8&lt;/code&gt; 为true， &lt;code&gt;SvUTF8_on&lt;/code&gt; 在新SV上调用SvUTF8_on。作为 &lt;code&gt;newSVpvn_flags&lt;/code&gt; 的包装器实现。</target>
        </trans-unit>
        <trans-unit id="1f7b0ca555fcea60e5705b3e8cf864c7c4c8e982" translate="yes" xml:space="preserve">
          <source>Creates a new SV and copies a string (which may contain &lt;code&gt;NUL&lt;/code&gt; (&lt;code&gt;\0&lt;/code&gt;) characters) into it. The reference count for the SV is set to 1. If &lt;code&gt;len&lt;/code&gt; is zero, Perl will compute the length using &lt;code&gt;strlen()&lt;/code&gt;, (which means if you use this option, that &lt;code&gt;s&lt;/code&gt; can't have embedded &lt;code&gt;NUL&lt;/code&gt; characters and has to have a terminating &lt;code&gt;NUL&lt;/code&gt; byte).</source>
          <target state="translated">创建一个新的SV并将一个字符串（可能包含 &lt;code&gt;NUL&lt;/code&gt; （ &lt;code&gt;\0&lt;/code&gt; ）字符）复制到其中。 SV的引用计数设置为1。如果 &lt;code&gt;len&lt;/code&gt; 为零，则Perl将使用 &lt;code&gt;strlen()&lt;/code&gt; 来计算长度（这意味着，如果使用此选项，则 &lt;code&gt;s&lt;/code&gt; 不能嵌入 &lt;code&gt;NUL&lt;/code&gt; 字符，并且必须具有终止符 &lt;code&gt;NUL&lt;/code&gt; 字节）。</target>
        </trans-unit>
        <trans-unit id="a716a607eac3dac42624b9af5f33cc0a768d3670" translate="yes" xml:space="preserve">
          <source>Creates a new SV and copies a string (which may contain &lt;code&gt;NUL&lt;/code&gt; (&lt;code&gt;\0&lt;/code&gt;) characters) into it. The reference count for the SV is set to 1. Note that if &lt;code&gt;len&lt;/code&gt; is zero, Perl will create a zero length string. You are responsible for ensuring that the source string is at least &lt;code&gt;len&lt;/code&gt; bytes long. If the &lt;code&gt;s&lt;/code&gt; argument is NULL the new SV will be undefined. Currently the only flag bits accepted are &lt;code&gt;SVf_UTF8&lt;/code&gt; and &lt;code&gt;SVs_TEMP&lt;/code&gt;. If &lt;code&gt;SVs_TEMP&lt;/code&gt; is set, then &lt;code&gt;sv_2mortal()&lt;/code&gt; is called on the result before returning. If &lt;code&gt;SVf_UTF8&lt;/code&gt; is set, &lt;code&gt;s&lt;/code&gt; is considered to be in UTF-8 and the &lt;code&gt;SVf_UTF8&lt;/code&gt; flag will be set on the new SV. &lt;code&gt;newSVpvn_utf8()&lt;/code&gt; is a convenience wrapper for this function, defined as</source>
          <target state="translated">创建一个新的SV并将一个字符串（可能包含 &lt;code&gt;NUL&lt;/code&gt; （ &lt;code&gt;\0&lt;/code&gt; ）字符）复制到其中。 SV的引用计数设置为1。请注意，如果 &lt;code&gt;len&lt;/code&gt; 为零，Perl将创建一个零长度的字符串。您有责任确保源字符串的长度至少为 &lt;code&gt;len&lt;/code&gt; 个字节。如果 &lt;code&gt;s&lt;/code&gt; 参数为NULL，则新的SV将是未定义的。当前，唯一接受的标志位是 &lt;code&gt;SVf_UTF8&lt;/code&gt; 和 &lt;code&gt;SVs_TEMP&lt;/code&gt; 。如果设置了 &lt;code&gt;SVs_TEMP&lt;/code&gt; ，则在返回之前在结果上调用 &lt;code&gt;sv_2mortal()&lt;/code&gt; 。如果设置了 &lt;code&gt;SVf_UTF8&lt;/code&gt; ，则 &lt;code&gt;s&lt;/code&gt; 被认为是UTF-8和 &lt;code&gt;SVf_UTF8&lt;/code&gt; 标志将在新的SV上设置。 &lt;code&gt;newSVpvn_utf8()&lt;/code&gt; 是此函数的便捷包装，定义为</target>
        </trans-unit>
        <trans-unit id="564cfa2529586958403f4ae104186110ddb6158c" translate="yes" xml:space="preserve">
          <source>Creates a new SV and copies a string into it, which may contain &lt;code&gt;NUL&lt;/code&gt; characters (&lt;code&gt;\0&lt;/code&gt; ) and other binary data. The reference count for the SV is set to 1. Note that if &lt;code&gt;len&lt;/code&gt; is zero, Perl will create a zero length (Perl) string. You are responsible for ensuring that the source buffer is at least &lt;code&gt;len&lt;/code&gt; bytes long. If the &lt;code&gt;buffer&lt;/code&gt; argument is NULL the new SV will be undefined.</source>
          <target state="translated">创建一个新的SV并将一个字符串复制到其中，其中可能包含 &lt;code&gt;NUL&lt;/code&gt; 字符（ &lt;code&gt;\0&lt;/code&gt; ）和其他二进制数据。SV的引用计数设置为1。请注意，如果 &lt;code&gt;len&lt;/code&gt; 为零，Perl将创建一个零长度（Perl）字符串。您有责任确保源缓冲区的长度至少为 &lt;code&gt;len&lt;/code&gt; 个字节。如果 &lt;code&gt;buffer&lt;/code&gt; 参数为NULL，则新的SV将是未定义的。</target>
        </trans-unit>
        <trans-unit id="75dc4ed3d94496525d9a214120df876b4eeddba3" translate="yes" xml:space="preserve">
          <source>Creates a new SV and copies a string into it, which may contain &lt;code&gt;NUL&lt;/code&gt; characters (&lt;code&gt;\0&lt;/code&gt;) and other binary data. The reference count for the SV is set to 1. Note that if &lt;code&gt;len&lt;/code&gt; is zero, Perl will create a zero length (Perl) string. You are responsible for ensuring that the source buffer is at least &lt;code&gt;len&lt;/code&gt; bytes long. If the &lt;code&gt;buffer&lt;/code&gt; argument is NULL the new SV will be undefined.</source>
          <target state="translated">创建一个新的SV并将一个字符串复制到其中，其中可能包含 &lt;code&gt;NUL&lt;/code&gt; 字符（ &lt;code&gt;\0&lt;/code&gt; ）和其他二进制数据。SV的引用计数设置为1。请注意，如果 &lt;code&gt;len&lt;/code&gt; 为零，则Perl将创建一个零长度（Perl）字符串。您有责任确保源缓冲区的长度至少为 &lt;code&gt;len&lt;/code&gt; 个字节。如果 &lt;code&gt;buffer&lt;/code&gt; 参数为NULL，则新的SV将是未定义的。</target>
        </trans-unit>
        <trans-unit id="9de1b0a97a64089b618097ac3dffb046bfdc6779" translate="yes" xml:space="preserve">
          <source>Creates a new SV and copies an integer into it. The reference count for the SV is set to 1.</source>
          <target state="translated">创建一个新的SV,并将一个整数复制到SV中。SV的引用次数设置为1。</target>
        </trans-unit>
        <trans-unit id="ad0aaf0d14999388a8de7db8b3ae47db90806dcf" translate="yes" xml:space="preserve">
          <source>Creates a new SV and copies an unsigned integer into it. The reference count for the SV is set to 1.</source>
          <target state="translated">创建一个新的SV,并将一个无符号整数复制到SV中。SV的引用次数被设置为1。</target>
        </trans-unit>
        <trans-unit id="e144449cf71b321cfaa7ad7d73caee74bd802815" translate="yes" xml:space="preserve">
          <source>Creates a new SV and initializes it with the string formatted like &lt;code&gt;&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">创建一个新的SV并使用 &lt;code&gt;&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt; 之类的格式初始化它。</target>
        </trans-unit>
        <trans-unit id="8dffba6ef9821600e45317acf44c91037855dd11" translate="yes" xml:space="preserve">
          <source>Creates a new SV and initializes it with the string formatted like &lt;code&gt;sv_catpvf&lt;/code&gt;.</source>
          <target state="translated">创建一个新的SV并使用 &lt;code&gt;sv_catpvf&lt;/code&gt; 之类的格式对其进行初始化。</target>
        </trans-unit>
        <trans-unit id="8fe580b8ead3e78b800fd8ca819c064553dc4b84" translate="yes" xml:space="preserve">
          <source>Creates a new SV containing the pad name.</source>
          <target state="translated">创建一个包含pad名称的新SV。</target>
        </trans-unit>
        <trans-unit id="fdde1c5ef502eaafbff9afbbccd3fe8baa5b7fc2" translate="yes" xml:space="preserve">
          <source>Creates a new SV for the existing RV, &lt;code&gt;rv&lt;/code&gt; , to point to. If &lt;code&gt;rv&lt;/code&gt; is not an RV then it will be upgraded to one. If &lt;code&gt;classname&lt;/code&gt; is non-null then the new SV will be blessed in the specified package. The new SV is returned and its reference count is 1. The reference count 1 is owned by &lt;code&gt;rv&lt;/code&gt; .</source>
          <target state="translated">创建为现有房车，新的SV &lt;code&gt;rv&lt;/code&gt; ，指向。如果 &lt;code&gt;rv&lt;/code&gt; 不是RV，则它将升级为一。如果 &lt;code&gt;classname&lt;/code&gt; 不为null，则新的SV将在指定的程序包中被祝福。返回新的SV，其参考计数为1。参考计数1由 &lt;code&gt;rv&lt;/code&gt; 拥有。</target>
        </trans-unit>
        <trans-unit id="7e2361bd2c7eea36fabc44e6e21c7f72c69373a1" translate="yes" xml:space="preserve">
          <source>Creates a new SV for the existing RV, &lt;code&gt;rv&lt;/code&gt;, to point to. If &lt;code&gt;rv&lt;/code&gt; is not an RV then it will be upgraded to one. If &lt;code&gt;classname&lt;/code&gt; is non-null then the new SV will be blessed in the specified package. The new SV is returned and its reference count is 1. The reference count 1 is owned by &lt;code&gt;rv&lt;/code&gt;. See also newRV_inc() and newRV_noinc() for creating a new RV properly.</source>
          <target state="translated">创建为现有房车，新的SV &lt;code&gt;rv&lt;/code&gt; ，指向。如果 &lt;code&gt;rv&lt;/code&gt; 不是RV，则它将升级为一。如果 &lt;code&gt;classname&lt;/code&gt; 不为null，则新的SV将在指定的程序包中被祝福。返回新的SV，其参考计数为1。参考计数1由 &lt;code&gt;rv&lt;/code&gt; 拥有。另请参见newRV_inc（）和newRV_noinc（）以正确创建新的RV。</target>
        </trans-unit>
        <trans-unit id="20afcc7c41f0b067ff4c82cda575bca113c7031c" translate="yes" xml:space="preserve">
          <source>Creates a new SV from the hash key structure. It will generate scalars that point to the shared string table where possible. Returns a new (undefined) SV if &lt;code&gt;hek&lt;/code&gt; is NULL.</source>
          <target state="translated">从哈希键结构创建一个新的SV。它将在可能的情况下生成指向共享字符串表的标量。如果 &lt;code&gt;hek&lt;/code&gt; 为NULL，则返回一个新的（未定义的）SV 。</target>
        </trans-unit>
        <trans-unit id="639f7c9a254704d094942032f6f23eecd10dcb3d" translate="yes" xml:space="preserve">
          <source>Creates a new SV from the hash key structure. It will generate scalars that point to the shared string table where possible. Returns a new (undefined) SV if the hek is NULL.</source>
          <target state="translated">从哈希键结构中创建一个新的SV。在可能的情况下,它将生成指向共享字符串表的标量。如果hek为NULL,则返回一个新的(未定义)SV。</target>
        </trans-unit>
        <trans-unit id="1cd7ce4c785336645dd9ca8151db8dfa4fd5a1c4" translate="yes" xml:space="preserve">
          <source>Creates a new SV which is a copy of the original SV (using &lt;code&gt;sv_setsv&lt;/code&gt; ). The new SV is marked as mortal. It will be destroyed &quot;soon&quot;, either by an explicit call to FREETMPS, or by an implicit call at places such as statement boundaries. See also &lt;code&gt;sv_newmortal&lt;/code&gt; and &lt;code&gt;sv_2mortal&lt;/code&gt; .</source>
          <target state="translated">创建一个新的SV，它是原始SV的副本（使用 &lt;code&gt;sv_setsv&lt;/code&gt; ）。新的SV被标记为凡人。通过显式调用FREETMPS或在语句边界之类的位置进行隐式调用，将很快&amp;ldquo;销毁&amp;rdquo;它。另请参见 &lt;code&gt;sv_newmortal&lt;/code&gt; 和 &lt;code&gt;sv_2mortal&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ef768ff23772ee46b4be28e816308edeb6cd7544" translate="yes" xml:space="preserve">
          <source>Creates a new SV which is a copy of the original SV (using &lt;code&gt;sv_setsv&lt;/code&gt;). The new SV is marked as mortal. It will be destroyed &quot;soon&quot;, either by an explicit call to &lt;code&gt;FREETMPS&lt;/code&gt;, or by an implicit call at places such as statement boundaries. See also &lt;code&gt;&lt;a href=&quot;#sv_newmortal&quot;&gt;&quot;sv_newmortal&quot;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#sv_2mortal&quot;&gt;&quot;sv_2mortal&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">创建一个新的SV，它是原始SV的副本（使用 &lt;code&gt;sv_setsv&lt;/code&gt; ）。新的SV被标记为凡人。通过显式调用 &lt;code&gt;FREETMPS&lt;/code&gt; 或在语句边界之类的位置进行隐式调用，将很快&amp;ldquo;销毁&amp;rdquo;它。另请参见 &lt;code&gt;&lt;a href=&quot;#sv_newmortal&quot;&gt;&quot;sv_newmortal&quot;&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;#sv_2mortal&quot;&gt;&quot;sv_2mortal&quot;&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="04a78f404d15207cad1d1bd98de9d1a89be2f47d" translate="yes" xml:space="preserve">
          <source>Creates a new SV which is an exact duplicate of the original SV. (Uses &lt;code&gt;sv_setsv&lt;/code&gt; .)</source>
          <target state="translated">创建一个新的SV，它与原始SV完全相同。（使用 &lt;code&gt;sv_setsv&lt;/code&gt; 。）</target>
        </trans-unit>
        <trans-unit id="e32da32e0a383e0bb47b1a2078f764f5d43a6533" translate="yes" xml:space="preserve">
          <source>Creates a new SV which is an exact duplicate of the original SV. (Uses &lt;code&gt;sv_setsv&lt;/code&gt;.)</source>
          <target state="translated">创建一个新的SV，该SV与原始SV完全相同。（使用 &lt;code&gt;sv_setsv&lt;/code&gt; 。）</target>
        </trans-unit>
        <trans-unit id="ca305828d7f4ebfbda10c3c9ad3e63a33d7dab4d" translate="yes" xml:space="preserve">
          <source>Creates a new SV with its &lt;code&gt;SvPVX_const&lt;/code&gt; pointing to a shared string in the string table. If the string does not already exist in the table, it is created first. Turns on the &lt;code&gt;SvIsCOW&lt;/code&gt; flag (or &lt;code&gt;READONLY&lt;/code&gt; and &lt;code&gt;FAKE&lt;/code&gt; in 5.16 and earlier). If the &lt;code&gt;hash&lt;/code&gt; parameter is non-zero, that value is used; otherwise the hash is computed. The string's hash can later be retrieved from the SV with the &lt;code&gt;SvSHARED_HASH()&lt;/code&gt; macro. The idea here is that as the string table is used for shared hash keys these strings will have &lt;code&gt;SvPVX_const == HeKEY&lt;/code&gt; and hash lookup will avoid string compare.</source>
          <target state="translated">创建一个新的SV，其 &lt;code&gt;SvPVX_const&lt;/code&gt; 指向字符串表中的共享字符串。如果该字符串在表中尚不存在，则将首先创建它。打开 &lt;code&gt;SvIsCOW&lt;/code&gt; 标志（或5.16和更早版本中的 &lt;code&gt;READONLY&lt;/code&gt; 和 &lt;code&gt;FAKE&lt;/code&gt; ）。如果 &lt;code&gt;hash&lt;/code&gt; 参数非零，则使用该值；否则，使用0。否则，将计算哈希值。稍后可以使用 &lt;code&gt;SvSHARED_HASH()&lt;/code&gt; 宏从SV中检索字符串的哈希值。这里的想法是，因为字符串表用于共享哈希键，所以这些字符串将具有 &lt;code&gt;SvPVX_const == HeKEY&lt;/code&gt; 并且哈希查找将避免字符串比较。</target>
        </trans-unit>
        <trans-unit id="f878a6fda000644884fdbc9cf596c38a8f7b65c4" translate="yes" xml:space="preserve">
          <source>Creates a new SV with its SvPVX_const pointing to a shared string in the string table. If the string does not already exist in the table, it is created first. Turns on the SvIsCOW flag (or READONLY and FAKE in 5.16 and earlier). If the &lt;code&gt;hash&lt;/code&gt; parameter is non-zero, that value is used; otherwise the hash is computed. The string's hash can later be retrieved from the SV with the &lt;code&gt;SvSHARED_HASH()&lt;/code&gt; macro. The idea here is that as the string table is used for shared hash keys these strings will have SvPVX_const == HeKEY and hash lookup will avoid string compare.</source>
          <target state="translated">创建一个新的SV，其SvPVX_const指向字符串表中的共享字符串。如果表中不存在该字符串，则会首先创建它。打开SvIsCOW标志（或5.16及更早版本中的READONLY和FAKE）。如果 &lt;code&gt;hash&lt;/code&gt; 参数非零，则使用该值；否则，使用0。否则计算哈希值。稍后可以使用 &lt;code&gt;SvSHARED_HASH()&lt;/code&gt; 宏从SV中检索字符串的哈希值。这里的想法是，由于将字符串表用于共享哈希键，因此这些字符串将具有SvPVX_const == HeKEY，并且哈希查找将避免字符串比较。</target>
        </trans-unit>
        <trans-unit id="c74397b44268e30b14c395c9db4f9d4c75043d98" translate="yes" xml:space="preserve">
          <source>Creates a new SV, of the type specified. The reference count for the new SV is set to 1.</source>
          <target state="translated">创建一个新的SV,类型为指定的SV。新SV的引用次数设置为1。</target>
        </trans-unit>
        <trans-unit id="8515b03b962934c971529fee07cf58fe4206e69f" translate="yes" xml:space="preserve">
          <source>Creates a new SV. A non-zero &lt;code&gt;len&lt;/code&gt; parameter indicates the number of bytes of preallocated string space the SV should have. An extra byte for a trailing &lt;code&gt;NUL&lt;/code&gt; is also reserved. (&lt;code&gt;SvPOK&lt;/code&gt; is not set for the SV even if string space is allocated.) The reference count for the new SV is set to 1.</source>
          <target state="translated">创建一个新的SV。 &lt;code&gt;len&lt;/code&gt; 参数非零表示SV应该具有的预分配字符串空间的字节数。还保留了尾随 &lt;code&gt;NUL&lt;/code&gt; 的额外字节。（即使分配了字符串空间，也不会为SV设置 &lt;code&gt;SvPOK&lt;/code&gt; 。）新SV的引用计数设置为1。</target>
        </trans-unit>
        <trans-unit id="d12e4b3cc81eba03f26cff30464e8b479b1d58a2" translate="yes" xml:space="preserve">
          <source>Creates a new SV. A non-zero &lt;code&gt;len&lt;/code&gt; parameter indicates the number of bytes of preallocated string space the SV should have. An extra byte for a trailing &lt;code&gt;NUL&lt;/code&gt; is also reserved. (SvPOK is not set for the SV even if string space is allocated.) The reference count for the new SV is set to 1.</source>
          <target state="translated">创建一个新的SV。 &lt;code&gt;len&lt;/code&gt; 参数非零表示SV应该具有的预分配字符串空间的字节数。还保留了尾随 &lt;code&gt;NUL&lt;/code&gt; 的额外字节。（即使分配了字符串空间，也不会为SV设置SvPOK。）新SV的引用计数设置为1。</target>
        </trans-unit>
        <trans-unit id="e9a57493668fe58cacf785eda42f6ca83298c5e7" translate="yes" xml:space="preserve">
          <source>Creates a new compression object.</source>
          <target state="translated">创建一个新的压缩对象。</target>
        </trans-unit>
        <trans-unit id="5d1118553623fb7729c552dfc670d49ec70f74e5" translate="yes" xml:space="preserve">
          <source>Creates a new empty queue.</source>
          <target state="translated">创建一个新的空队列。</target>
        </trans-unit>
        <trans-unit id="453a7438c9a0abf2f411dfc88ef08eeb919af43f" translate="yes" xml:space="preserve">
          <source>Creates a new factory class.</source>
          <target state="translated">创建一个新的工厂类。</target>
        </trans-unit>
        <trans-unit id="1df3f928ae77e486f8fc4331645875637263feb9" translate="yes" xml:space="preserve">
          <source>Creates a new factory class:</source>
          <target state="translated">创建一个新的工厂类。</target>
        </trans-unit>
        <trans-unit id="f4b3ad0f4845756e7eb366403f2b64a035efb137" translate="yes" xml:space="preserve">
          <source>Creates a new filename linked to the old filename. Returns true for success, false otherwise.</source>
          <target state="translated">创建一个与旧文件名相连的新文件名。成功则返回true,否则返回false。</target>
        </trans-unit>
        <trans-unit id="83f895542990ab6651e9706888c2de08e523dee6" translate="yes" xml:space="preserve">
          <source>Creates a new filename symbolically linked to the old filename. Returns &lt;code&gt;1&lt;/code&gt; for success, &lt;code&gt;0&lt;/code&gt; otherwise. On systems that don't support symbolic links, raises an exception. To check for that, use eval:</source>
          <target state="translated">创建符号链接到旧文件名的新文件名。成功返回 &lt;code&gt;1&lt;/code&gt; ，否则返回 &lt;code&gt;0&lt;/code&gt; 。在不支持符号链接的系统上，会引发异常。要进行检查，请使用eval：</target>
        </trans-unit>
        <trans-unit id="c51b3b07b0600d4054dee0c964ac75e53c578450" translate="yes" xml:space="preserve">
          <source>Creates a new message queue associated with &lt;code&gt;KEY&lt;/code&gt; . A new queue is created if</source>
          <target state="translated">创建一个与 &lt;code&gt;KEY&lt;/code&gt; 关联的新消息队列。如果创建新队列</target>
        </trans-unit>
        <trans-unit id="3dc7612c7cd290e9df1220e34987f01ca56d1c6b" translate="yes" xml:space="preserve">
          <source>Creates a new message queue associated with &lt;code&gt;KEY&lt;/code&gt;. A new queue is created if</source>
          <target state="translated">创建一个与 &lt;code&gt;KEY&lt;/code&gt; 关联的新消息队列。如果创建新队列</target>
        </trans-unit>
        <trans-unit id="461713b7ac316f2ff6250d361a767c15368c6dcc" translate="yes" xml:space="preserve">
          <source>Creates a new null SV which is mortal. The reference count of the SV is set to 1. It will be destroyed &quot;soon&quot;, either by an explicit call to &lt;code&gt;FREETMPS&lt;/code&gt;, or by an implicit call at places such as statement boundaries. See also &lt;code&gt;&lt;a href=&quot;#sv_mortalcopy&quot;&gt;&quot;sv_mortalcopy&quot;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#sv_2mortal&quot;&gt;&quot;sv_2mortal&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">创建一个新的空SV，它是凡人的。SV的引用计数设置为1。通过显式调用 &lt;code&gt;FREETMPS&lt;/code&gt; 或在诸如语句边界之类的位置进行隐式调用，将&amp;ldquo;很快&amp;rdquo;销毁该SV 。另请参见 &lt;code&gt;&lt;a href=&quot;#sv_mortalcopy&quot;&gt;&quot;sv_mortalcopy&quot;&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;#sv_2mortal&quot;&gt;&quot;sv_2mortal&quot;&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b254f69cf661a8637fb6b526c326443550777a61" translate="yes" xml:space="preserve">
          <source>Creates a new null SV which is mortal. The reference count of the SV is set to 1. It will be destroyed &quot;soon&quot;, either by an explicit call to FREETMPS, or by an implicit call at places such as statement boundaries. See also &lt;code&gt;sv_mortalcopy&lt;/code&gt; and &lt;code&gt;sv_2mortal&lt;/code&gt; .</source>
          <target state="translated">创建一个新的null SV，它是凡人。SV的引用计数设置为1。通过&amp;ldquo;显式&amp;rdquo;调用FREETMPS或在诸如语句边界之类的位置进行&amp;ldquo;隐式&amp;rdquo;调用，将&amp;ldquo;很快&amp;rdquo;销毁SV。另请参见 &lt;code&gt;sv_mortalcopy&lt;/code&gt; 和 &lt;code&gt;sv_2mortal&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2c5d61aab7b4b2bae3ae0cd3fa405a1453e48d56" translate="yes" xml:space="preserve">
          <source>Creates a new pad name list. &lt;code&gt;max&lt;/code&gt; is the highest index for which space is allocated.</source>
          <target state="translated">创建一个新的打击垫名称列表。 &lt;code&gt;max&lt;/code&gt; 是为其分配空间的最高索引。</target>
        </trans-unit>
        <trans-unit id="a518faeb54384b75b7b16380f67e97a55f19fb8d" translate="yes" xml:space="preserve">
          <source>Creates a new queue pre-populated with the provided list of items.</source>
          <target state="translated">用提供的项目列表创建一个新队列。</target>
        </trans-unit>
        <trans-unit id="97776043490921bb3f4e1a2aa4a3d94c8dd73946" translate="yes" xml:space="preserve">
          <source>Creates a new shared memory segment of &lt;code&gt;SIZE&lt;/code&gt; bytes size associated with &lt;code&gt;KEY&lt;/code&gt; . A new segment is created if</source>
          <target state="translated">创建一个与 &lt;code&gt;KEY&lt;/code&gt; 关联的 &lt;code&gt;SIZE&lt;/code&gt; 字节大小的新共享内存段。如果创建新的细分</target>
        </trans-unit>
        <trans-unit id="6a63ff372cab278153f32ae81b705206fe6507c1" translate="yes" xml:space="preserve">
          <source>Creates a new shared memory segment of &lt;code&gt;SIZE&lt;/code&gt; bytes size associated with &lt;code&gt;KEY&lt;/code&gt;. A new segment is created if</source>
          <target state="translated">创建一个与 &lt;code&gt;KEY&lt;/code&gt; 关联的 &lt;code&gt;SIZE&lt;/code&gt; 个字节大小的新共享内存段。如果创建新的细分</target>
        </trans-unit>
        <trans-unit id="ad8744084b0140499061b16f2e692d8d12d06891" translate="yes" xml:space="preserve">
          <source>Creates a new warnings category with the same name as the package where the call to the pragma is used.</source>
          <target state="translated">创建一个新的警告类别,其名称与使用该pragma调用的包相同。</target>
        </trans-unit>
        <trans-unit id="5a27d8b72cf141aebe58f87546d0d0c019b88e6f" translate="yes" xml:space="preserve">
          <source>Creates a single fieldhash. The argument must be a hash. Returns a reference to the given hash if successful, otherwise nothing.</source>
          <target state="translated">创建一个单一的字段哈希值。参数必须是一个哈希值。如果创建成功,返回给定哈希值的引用,否则不返回任何内容。</target>
        </trans-unit>
        <trans-unit id="0c4ee53a5914c71f28b61ea541caa04a7a24059a" translate="yes" xml:space="preserve">
          <source>Creates a symbol name &lt;code&gt;$maxlen&lt;/code&gt; or fewer characters long from &lt;code&gt;$name&lt;/code&gt; and returns it. If &lt;code&gt;$name&lt;/code&gt; is too long, it first tries to shorten it by removing duplicate characters, then by periodically removing non-underscore characters, and finally, if necessary, by periodically removing characters of any type. &lt;code&gt;$maxlen&lt;/code&gt; defaults to 31. Unless &lt;code&gt;$silent&lt;/code&gt; is true, a warning is output if &lt;code&gt;$name&lt;/code&gt; is altered in any way. This function may be called either as a static method or via an existing object, but in the latter case no check is made to insure that the resulting name is unique in the set of symbols. If the compiler has been instructed to do its own symbol shortening via &lt;code&gt;$Config{'useshortenedsymbols'}&lt;/code&gt;, a value of 2048 is assumed for &lt;code&gt;$maxlen&lt;/code&gt; as a way of bypassing the shortening done by this module.</source>
          <target state="translated">从 &lt;code&gt;$name&lt;/code&gt; 创建一个符号名 &lt;code&gt;$maxlen&lt;/code&gt; 或更少的字符，并返回它。如果 &lt;code&gt;$name&lt;/code&gt; 太长，它将首先尝试通过删除重复的字符来缩短它，然后通过定期删除非下划线字符，最后，如有必要，通过定期删除任何类型的字符来缩短它。 &lt;code&gt;$maxlen&lt;/code&gt; 默认为31。除非 &lt;code&gt;$silent&lt;/code&gt; 为true，否则如果 &lt;code&gt;$name&lt;/code&gt; 进行了任何更改，则会输出警告。可以通过静态方法或通过现有对象调用此函数，但是在后一种情况下，不进行检查以确保结果名称在符号集中是唯一的。如果已指示编译器通过进行自己的符号缩短 &lt;code&gt;$Config{'useshortenedsymbols'}&lt;/code&gt; ，将 &lt;code&gt;$maxlen&lt;/code&gt; 的值假定为2048 ，以绕过此模块进行的缩短。</target>
        </trans-unit>
        <trans-unit id="add57b347498049d55798b52551aa4252f3a0d96" translate="yes" xml:space="preserve">
          <source>Creates a symbol name from &lt;code&gt;$name&lt;/code&gt;, using the methods described under trimsym(), which is unique in this set of symbols, and returns the new name. &lt;code&gt;$name&lt;/code&gt; and its resultant are added to the set, and any future calls to addsym() specifying the same &lt;code&gt;$name&lt;/code&gt; will return the same result, regardless of the value of &lt;code&gt;$maxlen&lt;/code&gt; specified. Unless &lt;code&gt;$silent&lt;/code&gt; is true, warnings are output if &lt;code&gt;$name&lt;/code&gt; had to be trimmed or changed in order to avoid collision with an existing symbol name. &lt;code&gt;$maxlen&lt;/code&gt; and &lt;code&gt;$silent&lt;/code&gt; default to the values specified when this set of symbols was created. This method must be called via an existing object.</source>
          <target state="translated">使用 &lt;code&gt;$name&lt;/code&gt; trimsym（）下描述的方法在$ name中创建符号名称，该名称在此符号集中是唯一的，并返回新名称。 &lt;code&gt;$name&lt;/code&gt; 及其结果将添加到集合中，无论指定的 &lt;code&gt;$maxlen&lt;/code&gt; 值如何，以后对指定相同 &lt;code&gt;$name&lt;/code&gt; addsym（）的任何调用都将返回相同的结果。除非 &lt;code&gt;$silent&lt;/code&gt; 为true，否则如果必须修剪或更改 &lt;code&gt;$name&lt;/code&gt; 以避免与现有符号名称冲突，则会输出警告。 &lt;code&gt;$maxlen&lt;/code&gt; 和 &lt;code&gt;$silent&lt;/code&gt; 默认为创建此符号集时指定的值。必须通过现有对象调用此方法。</target>
        </trans-unit>
        <trans-unit id="6753f8b68917c94c7ceeba08d8a64a68bec41531" translate="yes" xml:space="preserve">
          <source>Creates a tar file from the list of files provided. The first argument can either be the name of the tar file to create or a reference to an open file handle (e.g. a GLOB reference).</source>
          <target state="translated">从提供的文件列表中创建一个 tar 文件。第一个参数可以是要创建的 tar 文件的名称,也可以是打开的文件句柄的引用(例如 GLOB 引用)。</target>
        </trans-unit>
        <trans-unit id="61b60c1bf0778c8239c58747b6aa38ba62bcc31e" translate="yes" xml:space="preserve">
          <source>Creates a trampoline for calling a core sub. Essentially, a tiny sub that figures out how we should be calling our core sub, puts in the arguments in the right way, and bounces our control over to it.</source>
          <target state="translated">创建一个用于调用核心子的蹦床。本质上,一个小的子程序,它能计算出我们应该如何调用核心子程序,以正确的方式输入参数,并将我们的控制权反弹给它。</target>
        </trans-unit>
        <trans-unit id="0c586f81366892d7608cff1caa98747fac265568" translate="yes" xml:space="preserve">
          <source>Creates a warnings category with the same name as the current package.</source>
          <target state="translated">创建一个与当前包同名的警告类别。</target>
        </trans-unit>
        <trans-unit id="70531cb628a95443a0bc996522c80ed3a1612eec" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;IO::File&lt;/code&gt; . If it receives any parameters, they are passed to the method &lt;code&gt;&lt;a href=&quot;../functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt;; if the open fails, the object is destroyed. Otherwise, it is returned to the caller.</source>
          <target state="translated">创建一个 &lt;code&gt;IO::File&lt;/code&gt; 。如果它接收到任何参数，则将它们传递给 &lt;code&gt;&lt;a href=&quot;../functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; 方法；如果打开失败，则对象被破坏。否则，它将返回给调用方。</target>
        </trans-unit>
        <trans-unit id="b8f206ecd7edeba7b8082544ed88fc391c7aee72" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;IO::File&lt;/code&gt; opened for read/write on a newly created temporary file. On systems where this is possible, the temporary file is anonymous (i.e. it is unlinked after creation, but held open). If the temporary file cannot be created or opened, the &lt;code&gt;IO::File&lt;/code&gt; object is destroyed. Otherwise, it is returned to the caller.</source>
          <target state="translated">创建一个 &lt;code&gt;IO::File&lt;/code&gt; 以便在新创建的临时文件上进行读写。在可能的系统上，该临时文件是匿名的（即，在创建后将其取消链接，但保持打开状态）。如果无法创建或打开临时文件，则 &lt;code&gt;IO::File&lt;/code&gt; 对象将被破坏。否则，它将返回给调用方。</target>
        </trans-unit>
        <trans-unit id="6affa57b67dc647897fe0a77e7fce2d6781f0cab" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;IO::File&lt;/code&gt;. If it receives any parameters, they are passed to the method &lt;code&gt;open&lt;/code&gt;; if the open fails, the object is destroyed. Otherwise, it is returned to the caller.</source>
          <target state="translated">创建一个 &lt;code&gt;IO::File&lt;/code&gt; 。如果它接收到任何参数，则将它们传递给 &lt;code&gt;open&lt;/code&gt; 方法；如果打开失败，则对象将被销毁。否则，它将返回给调用方。</target>
        </trans-unit>
        <trans-unit id="c5557a6d1ee1551613908cbc27f931101ce8ae4e" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;IO::Handle&lt;/code&gt; like &lt;code&gt;new&lt;/code&gt; does. It requires two parameters, which are passed to the method &lt;code&gt;fdopen&lt;/code&gt; ; if the fdopen fails, the object is destroyed. Otherwise, it is returned to the caller.</source>
          <target state="translated">像 &lt;code&gt;new&lt;/code&gt; 一样创建 &lt;code&gt;IO::Handle&lt;/code&gt; 。它需要两个参数，并传递给方法 &lt;code&gt;fdopen&lt;/code&gt; ；如果fdopen失败，则销毁该对象。否则，它将返回给调用方。</target>
        </trans-unit>
        <trans-unit id="5a2f27bbf06d86f3e10e12ddddc9b60c3e7fba7d" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;IO::Handle&lt;/code&gt; like &lt;code&gt;new&lt;/code&gt; does. It requires two parameters, which are passed to the method &lt;code&gt;fdopen&lt;/code&gt;; if the fdopen fails, the object is destroyed. Otherwise, it is returned to the caller.</source>
          <target state="translated">像 &lt;code&gt;new&lt;/code&gt; 一样创建一个 &lt;code&gt;IO::Handle&lt;/code&gt; 。它需要两个参数，这些参数将传递给方法 &lt;code&gt;fdopen&lt;/code&gt; ；如果fdopen失败，则对象被销毁。否则，它将返回给调用方。</target>
        </trans-unit>
        <trans-unit id="fc7d510d5075facd036fd1af77938045b2ecd2fd" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;IO::Pipe&lt;/code&gt; , which is a reference to a newly created symbol (see the &lt;code&gt;Symbol&lt;/code&gt; package). &lt;code&gt;IO::Pipe::new&lt;/code&gt; optionally takes two arguments, which should be objects blessed into &lt;code&gt;IO::Handle&lt;/code&gt; , or a subclass thereof. These two objects will be used for the system call to &lt;code&gt;&lt;a href=&quot;../functions/pipe&quot;&gt;pipe&lt;/a&gt;&lt;/code&gt;. If no arguments are given then method &lt;code&gt;handles&lt;/code&gt; is called on the new &lt;code&gt;IO::Pipe&lt;/code&gt; object.</source>
          <target state="translated">创建一个 &lt;code&gt;IO::Pipe&lt;/code&gt; ，它是对新创建的符号的引用（请参见 &lt;code&gt;Symbol&lt;/code&gt; 包）。 &lt;code&gt;IO::Pipe::new&lt;/code&gt; 可以选择接受两个参数，它们应该是受祝福的对象 &lt;code&gt;IO::Handle&lt;/code&gt; 或其子类。这两个对象将用于系统调用 &lt;code&gt;&lt;a href=&quot;../functions/pipe&quot;&gt;pipe&lt;/a&gt;&lt;/code&gt; 。如果未提供任何参数，则在新的 &lt;code&gt;IO::Pipe&lt;/code&gt; 对象上调用方法 &lt;code&gt;handles&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e2cf2eb3c37893576e75e50e1b21cb53d91cdaff" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;IO::Pipe&lt;/code&gt;, which is a reference to a newly created symbol (see the &lt;code&gt;Symbol&lt;/code&gt; package). &lt;code&gt;IO::Pipe::new&lt;/code&gt; optionally takes two arguments, which should be objects blessed into &lt;code&gt;IO::Handle&lt;/code&gt;, or a subclass thereof. These two objects will be used for the system call to &lt;code&gt;pipe&lt;/code&gt;. If no arguments are given then method &lt;code&gt;handles&lt;/code&gt; is called on the new &lt;code&gt;IO::Pipe&lt;/code&gt; object.</source>
          <target state="translated">创建一个 &lt;code&gt;IO::Pipe&lt;/code&gt; ，它是对新创建的符号的引用（请参见 &lt;code&gt;Symbol&lt;/code&gt; 包）。 &lt;code&gt;IO::Pipe::new&lt;/code&gt; 可以选择接受两个参数，它们应该是受祝福的对象 &lt;code&gt;IO::Handle&lt;/code&gt; 或其子类。这两个对象将用于系统调用 &lt;code&gt;pipe&lt;/code&gt; 。如果未提供任何参数，则在新的 &lt;code&gt;IO::Pipe&lt;/code&gt; 对象上调用方法 &lt;code&gt;handles&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="047841e1943658ae57257fef4f133cd272fd4811" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;IO::Socket::INET&lt;/code&gt; object, which is a reference to a newly created symbol (see the &lt;code&gt;Symbol&lt;/code&gt; package). &lt;code&gt;new&lt;/code&gt; optionally takes arguments, these arguments are in key-value pairs.</source>
          <target state="translated">创建一个 &lt;code&gt;IO::Socket::INET&lt;/code&gt; 对象，该对象是对新创建符号的引用（请参见 &lt;code&gt;Symbol&lt;/code&gt; 包）。 &lt;code&gt;new&lt;/code&gt; (可选）采用参数，这些参数位于键值对中。</target>
        </trans-unit>
        <trans-unit id="fab2be9faf86fae0e4bd5b1cd1283009b201bf09" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;IO::Socket::UNIX&lt;/code&gt; object, which is a reference to a newly created symbol (see the &lt;code&gt;Symbol&lt;/code&gt; package). &lt;code&gt;new&lt;/code&gt; optionally takes arguments, these arguments are in key-value pairs.</source>
          <target state="translated">创建一个 &lt;code&gt;IO::Socket::UNIX&lt;/code&gt; 对象，该对象是对新创建的符号的引用（请参见 &lt;code&gt;Symbol&lt;/code&gt; 包）。 &lt;code&gt;new&lt;/code&gt; (可选）采用参数，这些参数位于键值对中。</target>
        </trans-unit>
        <trans-unit id="a250b42b4dd05b62200f3a07cb3c80166c30a874" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;IO::Socket&lt;/code&gt; , which is a reference to a newly created symbol (see the &lt;code&gt;Symbol&lt;/code&gt; package). &lt;code&gt;new&lt;/code&gt; optionally takes arguments, these arguments are in key-value pairs. &lt;code&gt;new&lt;/code&gt; only looks for one key &lt;code&gt;Domain&lt;/code&gt; which tells new which domain the socket will be in. All other arguments will be passed to the configuration method of the package for that domain, See below.</source>
          <target state="translated">创建一个 &lt;code&gt;IO::Socket&lt;/code&gt; ，它是对新创建的符号的引用（请参见 &lt;code&gt;Symbol&lt;/code&gt; 包）。 &lt;code&gt;new&lt;/code&gt; (可选）采用参数，这些参数位于键值对中。 &lt;code&gt;new&lt;/code&gt; 只寻找一个键 &lt;code&gt;Domain&lt;/code&gt; ，它告诉new套接字将在哪个域中。所有其他参数将传递给该域的软件包的配置方法，请参见下文。</target>
        </trans-unit>
        <trans-unit id="bf9fe742fe41e423afb94e78fc451a07bcc0a51a" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;IO::Socket&lt;/code&gt;, which is a reference to a newly created symbol (see the &lt;a href=&quot;symbol&quot;&gt;Symbol&lt;/a&gt; package). &lt;code&gt;new&lt;/code&gt; optionally takes arguments, these arguments are defined in &lt;a href=&quot;IO::Socket#CONSTRUCTOR-ARGUMENTS&quot;&gt;&quot;CONSTRUCTOR ARGUMENTS&quot; in IO::Socket&lt;/a&gt;.</source>
          <target state="translated">创建一个 &lt;code&gt;IO::Socket&lt;/code&gt; ，它是对新创建的符号的引用（请参见&lt;a href=&quot;symbol&quot;&gt;Symbol&lt;/a&gt;包）。 &lt;code&gt;new&lt;/code&gt; 可以选择接受参数，这些参数&lt;a href=&quot;IO::Socket#CONSTRUCTOR-ARGUMENTS&quot;&gt;在IO :: Socket的&amp;ldquo; CONSTRUCTOR ARGUMENTS&amp;rdquo;中&lt;/a&gt;定义。</target>
        </trans-unit>
        <trans-unit id="f1fb9d0f6d66fb3d087378bdbe9232327d60e9d1" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;IO::Zlib&lt;/code&gt; object. If it receives any parameters, they are passed to the method &lt;code&gt;&lt;a href=&quot;../functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt;; if the open fails, the object is destroyed. Otherwise, it is returned to the caller.</source>
          <target state="translated">创建一个 &lt;code&gt;IO::Zlib&lt;/code&gt; 对象。如果它接收到任何参数，则将它们传递给 &lt;code&gt;&lt;a href=&quot;../functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; 方法；如果打开失败，则对象被破坏。否则，它将返回给调用方。</target>
        </trans-unit>
        <trans-unit id="378c7b01fe63573b0e705ba044a1718f2680df69" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;IO::Zlib&lt;/code&gt; object. If it receives any parameters, they are passed to the method &lt;code&gt;open&lt;/code&gt;; if the open fails, the object is destroyed. Otherwise, it is returned to the caller.</source>
          <target state="translated">创建一个 &lt;code&gt;IO::Zlib&lt;/code&gt; 对象。如果它接收到任何参数，则将它们传递给 &lt;code&gt;open&lt;/code&gt; 方法；如果打开失败，则对象将被销毁。否则，它将返回给调用方。</target>
        </trans-unit>
        <trans-unit id="119c0a1aef44d3b6314c9a2aeed4485068748984" translate="yes" xml:space="preserve">
          <source>Creates an RV wrapper for an SV. The reference count for the original SV is &lt;b&gt;not&lt;/b&gt; incremented.</source>
          <target state="translated">为SV创建RV包装器。原始SV的参考计数&lt;b&gt;不&lt;/b&gt;增加。</target>
        </trans-unit>
        <trans-unit id="9a2099bcbcca20ca005321683291f2d84f8f9fa9" translate="yes" xml:space="preserve">
          <source>Creates an RV wrapper for an SV. The reference count for the original SV is incremented.</source>
          <target state="translated">为SV创建一个RV封装器。原SV的引用数会递增。</target>
        </trans-unit>
        <trans-unit id="58eb0375eeededfea97443711d14c529a5eae786" translate="yes" xml:space="preserve">
          <source>Creates an empty &lt;code&gt;ExtUtils::XSSymset&lt;/code&gt; set of symbols. This function may be called as a static method or via an existing object. If &lt;code&gt;$maxlen&lt;/code&gt; or &lt;code&gt;$silent&lt;/code&gt; are specified, they are used as the defaults for maximum name length and warning behavior in future calls to addsym() or trimsym() via this object. If the compiler has been instructed to do its own symbol shortening via &lt;code&gt;$Config{'useshortenedsymbols'}&lt;/code&gt;, a value of 2048 is assumed for &lt;code&gt;$maxlen&lt;/code&gt; as a way of bypassing the shortening done by this module.</source>
          <target state="translated">创建一个空的 &lt;code&gt;ExtUtils::XSSymset&lt;/code&gt; 符号集。此函数可以称为静态方法，也可以通过现有对象调用。如果指定了 &lt;code&gt;$maxlen&lt;/code&gt; 或 &lt;code&gt;$silent&lt;/code&gt; ，它们将用作将来通过此对象调用addsym（）或trimsym（）时最大名称长度和警告行为的默认值。如果已通过 &lt;code&gt;$Config{'useshortenedsymbols'}&lt;/code&gt; 指示编译器进行自己的符号缩短，则将 &lt;code&gt;$maxlen&lt;/code&gt; 的值假定为2048 ，以绕过此模块进行的缩短。</target>
        </trans-unit>
        <trans-unit id="583c7b0e3437e1faffd9da7f44fbc7a044be2a1d" translate="yes" xml:space="preserve">
          <source>Creates an unnamed pair of sockets in the specified domain, of the specified type. DOMAIN, TYPE, and PROTOCOL are specified the same as for the syscall of the same name. If unimplemented, raises an exception. Returns true if successful.</source>
          <target state="translated">在指定的域中创建一对指定类型的未命名套接字。DOMAIN、TYPE和PROTOCOL的指定与同名syscall相同。如果未实现,则引发异常。如果成功,返回true。</target>
        </trans-unit>
        <trans-unit id="b4c7b237951a2abf470c6b1aaac5c511dc06f94c" translate="yes" xml:space="preserve">
          <source>Creates and initialises a new lexer/parser state object, supplying a context in which to lex and parse from a new source of Perl code. A pointer to the new state object is placed in &lt;a href=&quot;#PL_parser&quot;&gt;&quot;PL_parser&quot;&lt;/a&gt;. An entry is made on the save stack so that upon unwinding, the new state object will be destroyed and the former value of &lt;a href=&quot;#PL_parser&quot;&gt;&quot;PL_parser&quot;&lt;/a&gt; will be restored. Nothing else need be done to clean up the parsing context.</source>
          <target state="translated">创建并初始化一个新的词法分析器/解析器状态对象，并提供一个上下文，在该上下文中可以从新的Perl代码源进行词法分析。指向新状态对象的指针放置在&lt;a href=&quot;#PL_parser&quot;&gt;&amp;ldquo; PL_parser&amp;rdquo;中&lt;/a&gt;。在保存堆栈上创建一个条目，以便展开后，新的状态对象将被销毁，而&lt;a href=&quot;#PL_parser&quot;&gt;&amp;ldquo; PL_parser&amp;rdquo;&lt;/a&gt;的先前值将被恢复。无需任何其他操作即可清理解析上下文。</target>
        </trans-unit>
        <trans-unit id="3305aabab05db99f8bfc2b84c2d73fe46ce45fee" translate="yes" xml:space="preserve">
          <source>Creates and initialises a new lexer/parser state object, supplying a context in which to lex and parse from a new source of Perl code. A pointer to the new state object is placed in &lt;a href=&quot;#PL_parser&quot;&gt;PL_parser&lt;/a&gt;. An entry is made on the save stack so that upon unwinding the new state object will be destroyed and the former value of &lt;a href=&quot;#PL_parser&quot;&gt;PL_parser&lt;/a&gt; will be restored. Nothing else need be done to clean up the parsing context.</source>
          <target state="translated">创建并初始化新的词法分析器/解析器状态对象，并提供一个上下文，在该上下文中可以从新的Perl代码源进行词法分析。指向新状态对象的指针放在&lt;a href=&quot;#PL_parser&quot;&gt;PL_parser中&lt;/a&gt;。在保存堆栈上创建一个条目，以便在展开时将销毁新的状态对象，并恢复以前的&lt;a href=&quot;#PL_parser&quot;&gt;PL_parser&lt;/a&gt;值。无需任何其他操作即可清理解析上下文。</target>
        </trans-unit>
        <trans-unit id="df803de628287b19575ca3676b85b1777c806fdc" translate="yes" xml:space="preserve">
          <source>Creates and returns a clone of a full typemaps object.</source>
          <target state="translated">创建并返回一个完整类型图对象的克隆。</target>
        </trans-unit>
        <trans-unit id="0f3dfed1a964ab0db38fbf8138ec0f7abbedf2e8" translate="yes" xml:space="preserve">
          <source>Creates any number of field hashes. Arguments must be hash references. Returns the converted hashrefs in list context, their number in scalar context.</source>
          <target state="translated">创建任意数量的字段哈希。参数必须是哈希引用。在列表上下文中返回转换后的哈希值,在标量上下文中返回它们的数量。</target>
        </trans-unit>
        <trans-unit id="c592704db2b29209bd7ddf205e6af585a4f99b67" translate="yes" xml:space="preserve">
          <source>Creates directories, including any parent directories.</source>
          <target state="translated">创建目录,包括任何父目录。</target>
        </trans-unit>
        <trans-unit id="ad1d92000326b7959a82dfb9dc22227bf6a2e0c5" translate="yes" xml:space="preserve">
          <source>Creates header and footer blocks containing the text of the &lt;code&gt;NAME&lt;/code&gt; section. By default, no headers are generated.</source>
          <target state="translated">创建包含 &lt;code&gt;NAME&lt;/code&gt; 部分文本的页眉和页脚块。默认情况下，不生成头。</target>
        </trans-unit>
        <trans-unit id="530e5ca354f68101b7370c2ecfbbf80ed760e37a" translate="yes" xml:space="preserve">
          <source>Creates many idhashes from its hashref arguments. Returns those arguments that could be converted or their number in scalar context.</source>
          <target state="translated">从其hashref参数中创建许多idhash。返回那些可以转换的参数或它们在标量上下文中的数量。</target>
        </trans-unit>
        <trans-unit id="55ac5a2557b2039781c4e9099b909d61767bb34c" translate="yes" xml:space="preserve">
          <source>Creates the DIRECTORY and returns a true value on success. Check $^E on failure for extended error information.</source>
          <target state="translated">创建DIRECTORY并在成功时返回一个真值。失败时检查$^E以获取扩展的错误信息。</target>
        </trans-unit>
        <trans-unit id="66e7e1edb8d0a1f02ca58ab6d6a5ba76dcdca99d" translate="yes" xml:space="preserve">
          <source>Creates the FILE and returns a true value on success. Check $^E on failure for extended error information.</source>
          <target state="translated">创建FILE并在成功时返回一个真值。失败时检查$^E以获取扩展的错误信息。</target>
        </trans-unit>
        <trans-unit id="83ad3819309f6108b72bbb402ce3a8c80083d9b4" translate="yes" xml:space="preserve">
          <source>Creates the blibdirs target which creates all the directories we use in blib/.</source>
          <target state="translated">创建blibdirs目标,它可以创建我们在blib/中使用的所有目录。</target>
        </trans-unit>
        <trans-unit id="621a860874ef631fda40d3dbd09752ecf44fe523" translate="yes" xml:space="preserve">
          <source>Creates the directory cache in the given directory.</source>
          <target state="translated">在给定目录中创建目录缓存。</target>
        </trans-unit>
        <trans-unit id="de22bdbde2d4398a6a9a9d6284383fd915d03734" translate="yes" xml:space="preserve">
          <source>Creates the directory specified by FILENAME, with permissions specified by MASK (as modified by &lt;code&gt;&lt;a href=&quot;functions/umask&quot;&gt;umask&lt;/a&gt;&lt;/code&gt;). If it succeeds it returns true; otherwise it returns false and sets &lt;code&gt;$!&lt;/code&gt; (errno). MASK defaults to 0777 if omitted, and FILENAME defaults to &lt;code&gt;$_&lt;/code&gt; if omitted.</source>
          <target state="translated">创建由FILENAME指定的目录，并具有MASK指定的权限（由 &lt;code&gt;&lt;a href=&quot;functions/umask&quot;&gt;umask&lt;/a&gt;&lt;/code&gt; 修改）。如果成功，则返回true；否则，返回true。否则返回false并设置 &lt;code&gt;$!&lt;/code&gt; （errno）。如果省略，则MASK默认为0777，如果省略，则FILENAME默认为 &lt;code&gt;$_&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bb7b117514892c7c30b3fe9f7719849bbac44c0c" translate="yes" xml:space="preserve">
          <source>Creates the directory specified by FILENAME, with permissions specified by MASK (as modified by &lt;code&gt;&lt;a href=&quot;umask&quot;&gt;umask&lt;/a&gt;&lt;/code&gt;). If it succeeds it returns true; otherwise it returns false and sets &lt;code&gt;$!&lt;/code&gt; (errno). MASK defaults to 0777 if omitted, and FILENAME defaults to &lt;code&gt;$_&lt;/code&gt; if omitted.</source>
          <target state="translated">创建由FILENAME指定的目录，并具有MASK指定的权限（由 &lt;code&gt;&lt;a href=&quot;umask&quot;&gt;umask&lt;/a&gt;&lt;/code&gt; 修改）。如果成功，则返回true；否则，返回true。否则返回false并设置 &lt;code&gt;$!&lt;/code&gt; （errno）。如果省略，则MASK默认为0777，如果省略，则FILENAME默认为 &lt;code&gt;$_&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9f6746cdcfdb89d4e68c0e4318f28686ffd93175" translate="yes" xml:space="preserve">
          <source>Creates the directory specified by FILENAME, with permissions specified by MODE (as modified by &lt;a href=&quot;#umask-EXPR&quot;&gt;&lt;code&gt;umask&lt;/code&gt;&lt;/a&gt;). If it succeeds it returns true; otherwise it returns false and sets &lt;a href=&quot;perlvar#%24%21&quot;&gt;&lt;code&gt;$!&lt;/code&gt;&lt;/a&gt; (errno). MODE defaults to 0777 if omitted, and FILENAME defaults to &lt;a href=&quot;perlvar#%24_&quot;&gt;&lt;code&gt;$_&lt;/code&gt;&lt;/a&gt; if omitted.</source>
          <target state="translated">创建由FILENAME指定的目录，并由MODE指定权限（由&lt;a href=&quot;#umask-EXPR&quot;&gt; &lt;code&gt;umask&lt;/code&gt; &lt;/a&gt;修改）。如果成功，则返回true；否则，返回true。否则返回false并设置&lt;a href=&quot;perlvar#%24%21&quot;&gt; &lt;code&gt;$!&lt;/code&gt; &lt;/a&gt;（errno）。如果省略，则MODE默认为0777，如果省略，则FILENAME默认为&lt;a href=&quot;perlvar#%24_&quot;&gt; &lt;code&gt;$_&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3cac7695a4d3664891070ffa2341b3035d0f19e8" translate="yes" xml:space="preserve">
          <source>Creating Custom RE Engines</source>
          <target state="translated">创建自定义RE引擎</target>
        </trans-unit>
        <trans-unit id="76d93a113b300b303dad480ac2a300eb6051aa71" translate="yes" xml:space="preserve">
          <source>Creating New Variables</source>
          <target state="translated">创建新变量</target>
        </trans-unit>
        <trans-unit id="ca3daf69e2f937f89c7b4c76bccdabe68e3b34bf" translate="yes" xml:space="preserve">
          <source>Creating Threads</source>
          <target state="translated">创建线程</target>
        </trans-unit>
        <trans-unit id="00c8935ea8223dcafffacb17ecb8c41069921e4c" translate="yes" xml:space="preserve">
          <source>Creating Unicode</source>
          <target state="translated">创建Unicode</target>
        </trans-unit>
        <trans-unit id="fda34c4790cee1bd1ddb3e56f87276cd00a9e2e4" translate="yes" xml:space="preserve">
          <source>Creating a topic branch makes it easier for the maintainers to rebase or merge back into the master blead for a more linear history. If you don't work on a topic branch the maintainer has to manually cherry pick your changes onto blead before they can be applied.</source>
          <target state="translated">创建一个主题分支可以让维护者更容易地重新建立基础或合并回主blead,以获得一个更线性的历史。如果你不在一个主题分支上工作,维护者就必须在应用之前手动将你的修改挑到blead上。</target>
        </trans-unit>
        <trans-unit id="9a6874111f18f654b4c464c7232a28e3e371a0c4" translate="yes" xml:space="preserve">
          <source>Creating and Calling an Anonymous Subroutine in C</source>
          <target state="translated">在C语言中创建和调用匿名子程序。</target>
        </trans-unit>
        <trans-unit id="0fbcc36881be48da3eea5e9eb45091865bb12fa4" translate="yes" xml:space="preserve">
          <source>Creating numbers</source>
          <target state="translated">创建数字</target>
        </trans-unit>
        <trans-unit id="57dbae3986bf4e92740a80829b68126452d91265" translate="yes" xml:space="preserve">
          <source>Creating threads inside &lt;code&gt;BEGIN&lt;/code&gt; , &lt;code&gt;CHECK&lt;/code&gt; or &lt;code&gt;INIT&lt;/code&gt; blocks should not be relied upon. Depending on the Perl version and the application code, results may range from success, to (apparently harmless) warnings of leaked scalar, or all the way up to crashing of the Perl interpreter.</source>
          <target state="translated">不应该依赖在 &lt;code&gt;BEGIN&lt;/code&gt; ， &lt;code&gt;CHECK&lt;/code&gt; 或 &lt;code&gt;INIT&lt;/code&gt; 块内创建线程。根据Perl版本和应用程序代码，结果可能从成功到标量泄漏的警告（显然无害），甚至一直到Perl解释器崩溃为止。</target>
        </trans-unit>
        <trans-unit id="0daa386420cbd29b0115f08c5fd8d3d8cc8b2987" translate="yes" xml:space="preserve">
          <source>Creating your own context via &lt;code&gt;Test2::API::Context-&amp;gt;new()&lt;/code&gt; will almost never produce a desirable result. Use &lt;code&gt;context()&lt;/code&gt; which is exported by &lt;a href=&quot;Test2::API&quot;&gt;Test2::API&lt;/a&gt;.</source>
          <target state="translated">通过 &lt;code&gt;Test2::API::Context-&amp;gt;new()&lt;/code&gt; 创建自己的上下文几乎永远不会产生理想的结果。使用由&lt;a href=&quot;Test2::API&quot;&gt;Test2 :: API&lt;/a&gt;导出的 &lt;code&gt;context()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e13e0554f557ba882751e261b5a60777b337bea6" translate="yes" xml:space="preserve">
          <source>Creation</source>
          <target state="translated">Creation</target>
        </trans-unit>
        <trans-unit id="bfac50d6424b5166c3ee2808c85ae7c139b5182f" translate="yes" xml:space="preserve">
          <source>Credits</source>
          <target state="translated">Credits</target>
        </trans-unit>
        <trans-unit id="d7e0453bb4af87006533f4d77ad9546dac533db8" translate="yes" xml:space="preserve">
          <source>Croatia</source>
          <target state="translated">Croatia</target>
        </trans-unit>
        <trans-unit id="dbfe7362b2b881e1e5fb877d5c3a4872cad26c3a" translate="yes" xml:space="preserve">
          <source>Cross</source>
          <target state="translated">Cross</target>
        </trans-unit>
        <trans-unit id="beaa2e9dbdf1ef3ec15f5de471f07f4851c7dc4d" translate="yes" xml:space="preserve">
          <source>Cross-compilation</source>
          <target state="translated">Cross-compilation</target>
        </trans-unit>
        <trans-unit id="c43833b5347e1426f60796becda4f61af3fd0923" translate="yes" xml:space="preserve">
          <source>Cross-platform helper methods</source>
          <target state="translated">跨平台帮助方法</target>
        </trans-unit>
        <trans-unit id="4c38cec4e421449e48c795f66d14bddfe8e061c2" translate="yes" xml:space="preserve">
          <source>Cross-platform methods are being moved into &lt;a href=&quot;ExtUtils::MM_Any&quot;&gt;MM_Any&lt;/a&gt;. If you can't find something that used to be in here, look in MM_Any.</source>
          <target state="translated">跨平台方法被移到&lt;a href=&quot;ExtUtils::MM_Any&quot;&gt;MM_Any中&lt;/a&gt;。如果您找不到以前的东西，请查看MM_Any。</target>
        </trans-unit>
        <trans-unit id="011ef13d181b36064597a661d4df564056d4ff83" translate="yes" xml:space="preserve">
          <source>Cross-platform methods are being moved into MM_Any. If you can't find something that used to be in here, look in MM_Any.</source>
          <target state="translated">跨平台的方法被移到MM_Any中。如果你找不到以前在这里的东西,请到MM_Any里找。</target>
        </trans-unit>
        <trans-unit id="57799b23e7a710965dddb84cacd4ec89c1bbb1f6" translate="yes" xml:space="preserve">
          <source>Cross.U</source>
          <target state="translated">Cross.U</target>
        </trans-unit>
        <trans-unit id="ef9075f5545abec4dcc7e79d15c590cae4255eac" translate="yes" xml:space="preserve">
          <source>Cross.pm</source>
          <target state="translated">Cross.pm</target>
        </trans-unit>
        <trans-unit id="74c3c4ec5d65e9bc6995543581db9cbe363527f7" translate="yes" xml:space="preserve">
          <source>Cross/README</source>
          <target state="translated">Cross/README</target>
        </trans-unit>
        <trans-unit id="cef80d77f8c81ee5266d145a95eedb7c0a3f235f" translate="yes" xml:space="preserve">
          <source>Crypt</source>
          <target state="translated">Crypt</target>
        </trans-unit>
        <trans-unit id="ad96a37a856f346a15c53478f77eb332fbfa2f2b" translate="yes" xml:space="preserve">
          <source>Cryptographically signed modules</source>
          <target state="translated">加密签名的模块</target>
        </trans-unit>
        <trans-unit id="0141138dc5196a48315b4577e2fbfbeecad52362" translate="yes" xml:space="preserve">
          <source>Csym.U</source>
          <target state="translated">Csym.U</target>
        </trans-unit>
        <trans-unit id="52962f195b14aa22c7fc6a7f9b3d2ee383096fec" translate="yes" xml:space="preserve">
          <source>Cuddle &lt;code&gt;elsif&lt;/code&gt; , &lt;code&gt;else&lt;/code&gt; , and &lt;code&gt;&lt;a href=&quot;../functions/continue&quot;&gt;continue&lt;/a&gt;&lt;/code&gt; blocks. For example, print</source>
          <target state="translated">拥抱 &lt;code&gt;elsif&lt;/code&gt; ， &lt;code&gt;else&lt;/code&gt; ，然后 &lt;code&gt;&lt;a href=&quot;../functions/continue&quot;&gt;continue&lt;/a&gt;&lt;/code&gt; 块。例如，打印</target>
        </trans-unit>
        <trans-unit id="3de7497a0de5aacaf3b9fecfb3bf39933a680e0e" translate="yes" xml:space="preserve">
          <source>Cuddle &lt;code&gt;elsif&lt;/code&gt;, &lt;code&gt;else&lt;/code&gt;, and &lt;code&gt;continue&lt;/code&gt; blocks. For example, print</source>
          <target state="translated">拥抱 &lt;code&gt;elsif&lt;/code&gt; ， &lt;code&gt;else&lt;/code&gt; ，然后 &lt;code&gt;continue&lt;/code&gt; 块。例如，打印</target>
        </trans-unit>
        <trans-unit id="0ad7be9ec2b229fe5c72d975108d1ad1b6b06c3a" translate="yes" xml:space="preserve">
          <source>Cull allows you to collect results from other processes or threads on demand.</source>
          <target state="translated">Cull允许你根据需求从其他进程或线程收集结果。</target>
        </trans-unit>
        <trans-unit id="9e68fd6bc0e698abb0c35b379cb37b4a4220a6e5" translate="yes" xml:space="preserve">
          <source>Cull any IPC events (and process them).</source>
          <target state="translated">剔除任何IPC事件(并处理它们)。</target>
        </trans-unit>
        <trans-unit id="d64219b5f8b4b745bbd46c3a32d3c7d8682cff39" translate="yes" xml:space="preserve">
          <source>Curious/ambitious users are welcome to propose additional features they wish to see in &lt;b&gt;Pod::Checker&lt;/b&gt; and &lt;b&gt;podchecker&lt;/b&gt; and verify that the checks are consistent with &lt;a href=&quot;../perlpod&quot;&gt;perlpod&lt;/a&gt;.</source>
          <target state="translated">欢迎好奇/有抱负的用户提出他们希望在&lt;b&gt;Pod :: Checker&lt;/b&gt;和&lt;b&gt;podchecker中&lt;/b&gt;看到的其他功能，并确认检查是否与&lt;a href=&quot;../perlpod&quot;&gt;perlpod&lt;/a&gt;一致。</target>
        </trans-unit>
        <trans-unit id="617733113f006d19e74b25aa12d794a62a88b4a2" translate="yes" xml:space="preserve">
          <source>Curious/ambitious users are welcome to propose additional features they wish to see in &lt;b&gt;Pod::Checker&lt;/b&gt; and &lt;b&gt;podchecker&lt;/b&gt; and verify that the checks are consistent with &lt;a href=&quot;perlpod&quot;&gt;perlpod&lt;/a&gt;.</source>
          <target state="translated">欢迎好奇/有抱负的用户提出他们希望在&lt;b&gt;Pod :: Checker&lt;/b&gt;和&lt;b&gt;podchecker中&lt;/b&gt;看到的其他功能，并确认检查是否与&lt;a href=&quot;perlpod&quot;&gt;perlpod&lt;/a&gt;一致。</target>
        </trans-unit>
        <trans-unit id="006ddc5a877b60998acfe8e8f02afc5e5315300f" translate="yes" xml:space="preserve">
          <source>Curly Brackets</source>
          <target state="translated">卷曲括号</target>
        </trans-unit>
        <trans-unit id="c48ab463ed0ddf5261f0effba0a08bda055eaeb3" translate="yes" xml:space="preserve">
          <source>Curly brackets are required on &lt;code&gt;if&lt;/code&gt; 's and &lt;code&gt;while&lt;/code&gt; 's.</source>
          <target state="translated">&lt;code&gt;if&lt;/code&gt; 和 &lt;code&gt;while&lt;/code&gt; 时必须使用花括号。</target>
        </trans-unit>
        <trans-unit id="25cb75f4de27b7e8de98e7a40cc8ed9bcd201ef1" translate="yes" xml:space="preserve">
          <source>Curly brackets are required on &lt;code&gt;if&lt;/code&gt; s and &lt;code&gt;while&lt;/code&gt; s.</source>
          <target state="translated">&lt;code&gt;if&lt;/code&gt; s和 &lt;code&gt;while&lt;/code&gt; s，则需要使用花括号。</target>
        </trans-unit>
        <trans-unit id="c8ec64df899b63139abea2f56cacedaf27610e61" translate="yes" xml:space="preserve">
          <source>Curly brackets are required on &lt;code&gt;if&lt;/code&gt;'s and &lt;code&gt;while&lt;/code&gt;'s.</source>
          <target state="translated">&lt;code&gt;if&lt;/code&gt; 和 &lt;code&gt;while&lt;/code&gt; 时必须使用花括号。</target>
        </trans-unit>
        <trans-unit id="7c64e4e59ce80e921cd5f4be7b7a6b49b9ba946e" translate="yes" xml:space="preserve">
          <source>Curly brackets are required on &lt;code&gt;if&lt;/code&gt;s and &lt;code&gt;while&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;if&lt;/code&gt; s和 &lt;code&gt;while&lt;/code&gt; s，则必须使用花括号。</target>
        </trans-unit>
        <trans-unit id="733abadd7da2e8ee86b2f9fd64815600ddb4c9f3" translate="yes" xml:space="preserve">
          <source>Current API available since 0.05.</source>
          <target state="translated">目前的API从0.05开始提供。</target>
        </trans-unit>
        <trans-unit id="132fe4659a2b185389a8b22aaefc04607d41f11e" translate="yes" xml:space="preserve">
          <source>Current API available since 0.14</source>
          <target state="translated">目前的API从0.14开始可用</target>
        </trans-unit>
        <trans-unit id="9eca36f31721022b0833e71759529ffb7af59c3b" translate="yes" xml:space="preserve">
          <source>Current API available since 0.14.</source>
          <target state="translated">目前的API从0.14开始提供。</target>
        </trans-unit>
        <trans-unit id="fcf6b652bcdfb9f1d02b4a8e77d74fe1a86de2aa" translate="yes" xml:space="preserve">
          <source>Current API available since 0.15</source>
          <target state="translated">目前的API从0.15开始可用</target>
        </trans-unit>
        <trans-unit id="66ef4517b634be1aca295644dcb38cb9941d2ac4" translate="yes" xml:space="preserve">
          <source>Current API available since 0.15.</source>
          <target state="translated">目前的API从0.15开始提供。</target>
        </trans-unit>
        <trans-unit id="9ba0ffd4b3f7127883810edb9b6f993db6663d0a" translate="yes" xml:space="preserve">
          <source>Current EMX environment does not allow</source>
          <target state="translated">当前EMX环境不允许</target>
        </trans-unit>
        <trans-unit id="993eca74c49b7893afb4ab9ac873257ea5c190b4" translate="yes" xml:space="preserve">
          <source>Current EMX environment does not allow DLLs compiled using Unixish &lt;code&gt;a.out&lt;/code&gt; format to export symbols for data (or at least some types of data). This forces &lt;code&gt;omf&lt;/code&gt; -style compile of</source>
          <target state="translated">当前的EMX环境不允许使用Unixish &lt;code&gt;a.out&lt;/code&gt; 格式编译的DLL 导出数据符号（或至少某些类型的数据）。这迫使 &lt;code&gt;omf&lt;/code&gt; 风格的编译</target>
        </trans-unit>
        <trans-unit id="c3381fda04909080924114ca2bb61b70480aaea4" translate="yes" xml:space="preserve">
          <source>Current EMX environment does not allow DLLs compiled using Unixish &lt;code&gt;a.out&lt;/code&gt; format to export symbols for data (or at least some types of data). This forces &lt;code&gt;omf&lt;/code&gt;-style compile of</source>
          <target state="translated">当前的EMX环境不允许使用Unixish &lt;code&gt;a.out&lt;/code&gt; 格式编译的DLL导出数据符号（或至少某些类型的数据）。这迫使 &lt;code&gt;omf&lt;/code&gt; 风格的编译</target>
        </trans-unit>
        <trans-unit id="68015f6bd2846a758438e4878547c94c08e2b442" translate="yes" xml:space="preserve">
          <source>Current experiments</source>
          <target state="translated">目前的实验</target>
        </trans-unit>
        <trans-unit id="2bb8d55eba9da4a81fde3753ae5baa7eec0d36a4" translate="yes" xml:space="preserve">
          <source>Current line number for the last filehandle accessed.</source>
          <target state="translated">最后访问的文件柄的当前行号。</target>
        </trans-unit>
        <trans-unit id="5550dac4e1e7661323b4986a995e2ca80043241b" translate="yes" xml:space="preserve">
          <source>Current maintainer: Jesse Vincent. &amp;lt;jesse@bestpractical.com&amp;gt;</source>
          <target state="translated">目前的维护者：Jesse Vincent。&amp;lt;jesse@bestpractical.com&amp;gt;</target>
        </trans-unit>
        <trans-unit id="c2eb4542085ed4c82b742e8aee8a24a813f00ba2" translate="yes" xml:space="preserve">
          <source>Current maintainer: Mark Allen &lt;code&gt;&amp;lt;mallen@cpan.org&amp;gt;&lt;/code&gt;</source>
          <target state="translated">现任维护者：Mark Allen &lt;code&gt;&amp;lt;mallen@cpan.org&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0c582ebd636905458cf86a650443a01ac6fd3e11" translate="yes" xml:space="preserve">
          <source>Current maintainer: Mark Allen &lt;code&gt;&amp;lt;mallencpan.org&amp;gt;&lt;/code&gt;</source>
          <target state="translated">现任维护者：马克&amp;middot;艾伦 &lt;code&gt;&amp;lt;mallencpan.org&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e6ca95c5501f8b179689cb1932912593329e0e7f" translate="yes" xml:space="preserve">
          <source>Current maintainers are Richard Elberger &amp;lt;</source>
          <target state="translated">当前的维护者是Richard Elberger &amp;lt;</target>
        </trans-unit>
        <trans-unit id="829f444d461d0161d34db2510d06246d92acbe5d" translate="yes" xml:space="preserve">
          <source>Current position.</source>
          <target state="translated">现任职务:</target>
        </trans-unit>
        <trans-unit id="57b3ecd8cd4c7443afc115b419ddb924ddd90e1b" translate="yes" xml:space="preserve">
          <source>Current state of the interpreter.</source>
          <target state="translated">译员的现状。</target>
        </trans-unit>
        <trans-unit id="df893233f128ab6c4697175d320f8d120c1ab9e0" translate="yes" xml:space="preserve">
          <source>Current working directory</source>
          <target state="translated">当前工作目录</target>
        </trans-unit>
        <trans-unit id="e302e42f2ad866b21d8a9b42dc19e35d2b0fc490" translate="yes" xml:space="preserve">
          <source>Currently</source>
          <target state="translated">Currently</target>
        </trans-unit>
        <trans-unit id="196ba394fbe2cd700609c257874291b9dd014bf4" translate="yes" xml:space="preserve">
          <source>Currently $dir can only go down one level. &quot;foo&quot; is fine. &quot;foo/bar&quot; is not. &quot;../foo&quot; is right out.</source>
          <target state="translated">目前$dir只能下一层。&quot;foo &quot;可以。&quot;foo/bar &quot;不行。&quot;.../foo &quot;就可以了。</target>
        </trans-unit>
        <trans-unit id="7596cea97372e37b0806dba55a5df461274d6e60" translate="yes" xml:space="preserve">
          <source>Currently (October 2001), that's these three:</source>
          <target state="translated">目前(2001年10月),就是这三个。</target>
        </trans-unit>
        <trans-unit id="d0628d165c5886578d03829e62f234c1c39d03ea" translate="yes" xml:space="preserve">
          <source>Currently (as of perl version 5.004), use of the hash and array access functions requires the user to be aware of whether they are operating on &quot;normal&quot; hashes and arrays, or on their tied variants. The API may be changed to provide more transparent access to both tied and normal data types in future versions. [/MAYCHANGE]</source>
          <target state="translated">目前(从perl 5.004版本开始),使用哈希和数组访问函数需要用户知道他们是在 &quot;普通 &quot;哈希和数组上操作,还是在它们的绑定变体上操作。在未来的版本中,API可能会被修改,以提供对绑定和正常数据类型更透明的访问。[/MAYCHANGE]</target>
        </trans-unit>
        <trans-unit id="f13df8d5f32419cc90e83b3d1b4f89dcb9fb5bee" translate="yes" xml:space="preserve">
          <source>Currently &lt;a href=&quot;Module::Build&quot;&gt;Module::Build&lt;/a&gt; doesn't actually do anything with this flag - it's probably going to be up to higher-level tools like &lt;a href=&quot;cpan&quot;&gt;CPAN.pm&lt;/a&gt; to do something useful with it. It can potentially bring lots of security, packaging, and convenience improvements.</source>
          <target state="translated">当前，&lt;a href=&quot;Module::Build&quot;&gt;Module :: Build&lt;/a&gt;实际上并没有对该标志做任何事情-它可能取决于诸如&lt;a href=&quot;cpan&quot;&gt;CPAN.pm之&lt;/a&gt;类的更高级别的工具才能对其进行有用的处理。它可能会带来很多安全性，包装和便利性方面的改进。</target>
        </trans-unit>
        <trans-unit id="a2eb1a3bc586c516867d29f387fd017886e0b406" translate="yes" xml:space="preserve">
          <source>Currently I don't know of any portable pure perl way to do this. Suggestions welcome.</source>
          <target state="translated">目前我不知道有什么可移植的纯perl方式可以做到这一点。欢迎提出建议。</target>
        </trans-unit>
        <trans-unit id="0f42c93f8113a166a58ba8a04b9d7c468b7d0cf9" translate="yes" xml:space="preserve">
          <source>Currently Module::Build doesn't actually do anything with this flag - it's probably going to be up to higher-level tools like CPAN to do something useful with it. It can potentially bring lots of security, packaging, and convenience improvements.</source>
          <target state="translated">目前,Module::Build实际上并没有对这个标志做任何事情--这可能要由更高级别的工具,比如CPAN来对它做一些有用的事情。它可能会带来很多安全、打包和便利性方面的改进。</target>
        </trans-unit>
        <trans-unit id="d97947adc89187fe49c51cd883b8269beca4ae8c" translate="yes" xml:space="preserve">
          <source>Currently NAME is restricted to simple identifiers only. In other words, it must match &lt;code&gt;/^[_A-Za-z][_A-Za-z0-9]*\z/&lt;/code&gt; or its Unicode extension (see &lt;a href=&quot;utf8&quot;&gt;utf8&lt;/a&gt;), though it isn't extended by the locale (see &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt;).</source>
          <target state="translated">目前，NAME仅限于简单标识符。换句话说，它必须与 &lt;code&gt;/^[_A-Za-z][_A-Za-z0-9]*\z/&lt;/code&gt; 或其Unicode扩展名（请参见&lt;a href=&quot;utf8&quot;&gt;utf8&lt;/a&gt;）&lt;a href=&quot;perllocale&quot;&gt;匹配&lt;/a&gt;，尽管它不会由语言环境进行扩展（请参见perllocale）。</target>
        </trans-unit>
        <trans-unit id="34fd8b1bb88ea7e7337eda898bf08809510b09bf" translate="yes" xml:space="preserve">
          <source>Currently accepted extensions are:</source>
          <target state="translated">目前可接受的延期是:</target>
        </trans-unit>
        <trans-unit id="834c134ad81c4eaed0abb95e07ecfa3c6f7ccea9" translate="yes" xml:space="preserve">
          <source>Currently all versions of IBM's &quot;xlc&quot;, &quot;xlc_r&quot;, &quot;cc&quot;, &quot;cc_r&quot; or &quot;vac&quot; ANSI/C compiler will work for building Perl if that compiler works on your system.</source>
          <target state="translated">目前,IBM的 &quot;xlc&quot;、&quot;xlc_r&quot;、&quot;cc&quot;、&quot;cc_r &quot;或 &quot;vac &quot;ANSI/C编译器的所有版本都可以用于构建Perl,如果该编译器在你的系统上工作的话。</target>
        </trans-unit>
        <trans-unit id="074b7a0d7926b13bdd6a6c1a7f2bd6fd96a950ef" translate="yes" xml:space="preserve">
          <source>Currently doesn't do anything at all. This flag has been a no-op for many versions of perl, at least as far back as perl5.003_07. It's allowed here for backwards compatibility.</source>
          <target state="translated">目前根本没有任何作用。这个标志在许多版本的perl中都是不允许的,至少在perl5.003_07中是这样。为了向后兼容,这里允许使用这个标志。</target>
        </trans-unit>
        <trans-unit id="c6aff6e1789a080263345630866061a6188dd023" translate="yes" xml:space="preserve">
          <source>Currently experimental, strongly object-oriented, built for speed and intended as a toolkit for building micro web apps, custom frameworks or for tieing together existing Plack-compatible web applications with one central dispatcher.</source>
          <target state="translated">目前是实验性的,强烈的面向对象的,为速度而构建的,旨在作为一个工具箱,用于构建微型网络应用,自定义框架,或通过一个中央调度器将现有的Plack兼容的网络应用捆绑在一起。</target>
        </trans-unit>
        <trans-unit id="09e5d195957c36cd6b2d43df6986ebc708f4c278" translate="yes" xml:space="preserve">
          <source>Currently installation instructions are at &lt;a href=&quot;http://perlce.sourceforge.net/&quot;&gt;http://perlce.sourceforge.net/&lt;/a&gt;.</source>
          <target state="translated">当前的安装说明位于&lt;a href=&quot;http://perlce.sourceforge.net/&quot;&gt;http://perlce.sourceforge.net/&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5e0d0b77d9ca938b7c7fd7206793cd1d22b949a5" translate="yes" xml:space="preserve">
          <source>Currently internal buffer lengths are limited to 32-bit only.</source>
          <target state="translated">目前内部缓冲区长度只限于32位。</target>
        </trans-unit>
        <trans-unit id="2589b2340931b7a94577d8448f79f08344610895" translate="yes" xml:space="preserve">
          <source>Currently it is too complicated to parse your command for IO redirections. For capturing STDOUT or STDERR there is a work around however, since you can just inspect your buffers for the contents.</source>
          <target state="translated">目前,要解析你的命令以获取IO重定向太复杂了。不过对于捕获STDOUT或STDERR,有一个解决办法,因为你可以检查你的缓冲区的内容。</target>
        </trans-unit>
        <trans-unit id="ff8d2529e1e3a22abb227172a7478ebd10f009e6" translate="yes" xml:space="preserve">
          <source>Currently known values for ID MAJOR and MINOR are as follows:</source>
          <target state="translated">目前已知的ID MAJOR和MINOR值如下:</target>
        </trans-unit>
        <trans-unit id="d5ce11c20e5c9e26183b7df1f1d378e8843b7728" translate="yes" xml:space="preserve">
          <source>Currently loaded filename.</source>
          <target state="translated">当前加载的文件名。</target>
        </trans-unit>
        <trans-unit id="7d2f296985c3b0bc160e7e4678670038ad1661e2" translate="yes" xml:space="preserve">
          <source>Currently maintained by &amp;lt;perl5-porters@perl.org&amp;gt;</source>
          <target state="translated">当前由&amp;lt;perl5-porters@perl.org&amp;gt;维护</target>
        </trans-unit>
        <trans-unit id="5e94b5b9580ddc9978e1586fd290c6a0085eaca0" translate="yes" xml:space="preserve">
          <source>Currently maintained by Jonathan &quot;Duke&quot; Leto &amp;lt;jonathan@leto.net&amp;gt; &lt;a href=&quot;http://leto.net&quot;&gt;http://leto.net&lt;/a&gt;</source>
          <target state="translated">当前由Jonathan&amp;ldquo; Duke&amp;rdquo; Leto维护&amp;lt;jonathan@leto.net&amp;gt; &lt;a href=&quot;http://leto.net&quot;&gt;http://leto.net&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8f84d89a92a777c50292f613277c843d0fca069e" translate="yes" xml:space="preserve">
          <source>Currently maintained by Ken Williams &lt;code&gt;&amp;lt;KWILLIAMS@cpan.org&amp;gt;&lt;/code&gt; .</source>
          <target state="translated">目前由Ken Williams维护 &lt;code&gt;&amp;lt;KWILLIAMS@cpan.org&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="303806e236443c135c96fe60eb67d5ca0de67368" translate="yes" xml:space="preserve">
          <source>Currently maintained by Ken Williams &lt;code&gt;&amp;lt;KWILLIAMS@cpan.org&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">目前由Ken Williams维护 &lt;code&gt;&amp;lt;KWILLIAMS@cpan.org&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3d499a420a8ad407cfcc7909e99725791aecb83a" translate="yes" xml:space="preserve">
          <source>Currently maintained by Michael G Schwern &lt;code&gt;schwern@pobox.com&lt;/code&gt;</source>
          <target state="translated">目前由Michael G Schwern维护 &lt;code&gt;schwern@pobox.com&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="64518f708c077132fb6c81bb482b7c41112aa09f" translate="yes" xml:space="preserve">
          <source>Currently maintained by Michael G Schwern &lt;code&gt;schwern@pobox.com&lt;/code&gt; .</source>
          <target state="translated">目前由Michael G Schwern维护 &lt;code&gt;schwern@pobox.com&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2e7c33fcf31b3845a9002a34cbe57be49064440a" translate="yes" xml:space="preserve">
          <source>Currently maintained by Michael G Schwern &lt;code&gt;schwern@pobox.com&lt;/code&gt;.</source>
          <target state="translated">目前由Michael G Schwern维护 &lt;code&gt;schwern@pobox.com&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ac278ddc5ecea025d9c9b038420a6a20095c0d36" translate="yes" xml:space="preserve">
          <source>Currently maintained by Sullivan Beck (sbeck@cpan.org).</source>
          <target state="translated">目前由Sullivan Beck维护(sbeck@cpan.org)。</target>
        </trans-unit>
        <trans-unit id="832ca62474658800234e1409a0265d04df2848bc" translate="yes" xml:space="preserve">
          <source>Currently maintained by the Perl 5 Porters, &amp;lt;perl5-porters@perl.org&amp;gt;.</source>
          <target state="translated">当前由Perl 5 Porters维护，&amp;lt;perl5-porters@perl.org&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="70916c857e67092afc3818c0725979a17bb2bc7e" translate="yes" xml:space="preserve">
          <source>Currently maintained by the Perl Toolchain Gang.</source>
          <target state="translated">目前由Perl Toolchain Gang维护。</target>
        </trans-unit>
        <trans-unit id="22b5ae24b9fd013adf87b86fd8614fe4c5e78cae" translate="yes" xml:space="preserve">
          <source>Currently maintained by the perl 5 porters &amp;lt;perl5-porters@perl.org&amp;gt;.</source>
          <target state="translated">当前由perl 5搬运工&amp;lt;perl5-porters@perl.org&amp;gt;维护。</target>
        </trans-unit>
        <trans-unit id="d2e4606b64b025301662d7cf33e55d4e4c569938" translate="yes" xml:space="preserve">
          <source>Currently only 1 parameter is defined:</source>
          <target state="translated">目前只定义了1个参数。</target>
        </trans-unit>
        <trans-unit id="805cd2c1f1ca0def4cfd6434add453f59f15d8ad" translate="yes" xml:space="preserve">
          <source>Currently only &lt;code&gt;INDENT&lt;/code&gt; , &lt;code&gt;NAME&lt;/code&gt; , &lt;code&gt;DEFAULT_TYPE&lt;/code&gt; , &lt;code&gt;NAMES&lt;/code&gt; , &lt;code&gt;C_FILE&lt;/code&gt; and &lt;code&gt;XS_FILE&lt;/code&gt; are recognised.</source>
          <target state="translated">当前仅识别 &lt;code&gt;INDENT&lt;/code&gt; ， &lt;code&gt;NAME&lt;/code&gt; ， &lt;code&gt;DEFAULT_TYPE&lt;/code&gt; ， &lt;code&gt;NAMES&lt;/code&gt; ， &lt;code&gt;C_FILE&lt;/code&gt; 和 &lt;code&gt;XS_FILE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="38af29eda1cf784766a83c7759fdcfa53c50c531" translate="yes" xml:space="preserve">
          <source>Currently only &lt;code&gt;INDENT&lt;/code&gt;, &lt;code&gt;NAME&lt;/code&gt;, &lt;code&gt;DEFAULT_TYPE&lt;/code&gt;, &lt;code&gt;NAMES&lt;/code&gt;, &lt;code&gt;C_FILE&lt;/code&gt; and &lt;code&gt;XS_FILE&lt;/code&gt; are recognised.</source>
          <target state="translated">当前仅识别 &lt;code&gt;INDENT&lt;/code&gt; ， &lt;code&gt;NAME&lt;/code&gt; ， &lt;code&gt;DEFAULT_TYPE&lt;/code&gt; ， &lt;code&gt;NAMES&lt;/code&gt; ， &lt;code&gt;C_FILE&lt;/code&gt; 和 &lt;code&gt;XS_FILE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7d9f8fb10567a5f5b286e925fe020ed9ddbe898d" translate="yes" xml:space="preserve">
          <source>Currently only emitted when a printf-type format required more arguments than were supplied, but might be used in the future for other cases where we can statically determine that arguments to functions are missing, e.g. for the &lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt; function.</source>
          <target state="translated">当前仅在printf-type格式需要的参数数量超过提供的数量时发出，但将来可能在其他情况下使用，我们可以静态确定函数的参数丢失，例如&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;函数。</target>
        </trans-unit>
        <trans-unit id="a9fa4f92734e18558ac4e95d1e72e9882423ccbd" translate="yes" xml:space="preserve">
          <source>Currently only emitted when a printf-type format required more arguments than were supplied, but might be used in the future for other cases where we can statically determine that arguments to functions are missing, e.g. for the &lt;a href=&quot;perlfunc#pack&quot;&gt;&quot;pack&quot; in perlfunc&lt;/a&gt; function.</source>
          <target state="translated">当前仅在printf-type格式需要的参数比提供的参数更多时才发出，但是将来可能在其他情况下使用，我们可以静态确定函数的参数丢失，例如，对于&lt;a href=&quot;perlfunc#pack&quot;&gt;perlfunc&lt;/a&gt;函数中的&amp;ldquo; pack&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="c06671bbb84a6f3c0a5e03cc037107c5b937b959" translate="yes" xml:space="preserve">
          <source>Currently the base class does nothing and returns an empty string.</source>
          <target state="translated">目前基类什么都不做,返回一个空字符串。</target>
        </trans-unit>
        <trans-unit id="1e65fb55b89a16a6ff17064471534fc5b44c3a09" translate="yes" xml:space="preserve">
          <source>Currently the cache manager only keeps track of the build directory ($CPAN::Config-&amp;gt;{build_dir}). It is a simple FIFO mechanism that deletes complete directories below &lt;code&gt;build_dir&lt;/code&gt; as soon as the size of all directories there gets bigger than $CPAN::Config-&amp;gt;{build_cache} (in MB). The contents of this cache may be used for later re-installations that you intend to do manually, but will never be trusted by CPAN itself. This is due to the fact that the user might use these directories for building modules on different architectures.</source>
          <target state="translated">当前，缓存管理器仅跟踪构建目录（$ CPAN :: Config-&amp;gt; {build_dir}）。这是一种简单的FIFO机制，只要其中所有目录的大小大于$ CPAN :: Config-&amp;gt; {build_cache}（以MB为单位），就会删除 &lt;code&gt;build_dir&lt;/code&gt; 下的完整目录。此缓存的内容可用于以后打算手动进行的重新安装，但CPAN本身不会信任它。这是由于用户可能会使用这些目录在不同体系结构上构建模块。</target>
        </trans-unit>
        <trans-unit id="f062039e873cc7d52ba0fecd06981316ab3b8782" translate="yes" xml:space="preserve">
          <source>Currently the content of the &lt;code&gt;__DATA__&lt;/code&gt; block is not filtered.</source>
          <target state="translated">当前， &lt;code&gt;__DATA__&lt;/code&gt; 块的内容未过滤。</target>
        </trans-unit>
        <trans-unit id="85cb1004cde4eafeabb526e7c97d06160b9bc9ea" translate="yes" xml:space="preserve">
          <source>Currently the example could be something like this:</source>
          <target state="translated">目前,这个例子可以是这样的。</target>
        </trans-unit>
        <trans-unit id="9ed938fc9ec074335a5a14ff39713fa96e2a44d4" translate="yes" xml:space="preserve">
          <source>Currently the first argument to define_alias() can be specified in the following ways:</source>
          <target state="translated">目前define_alias()的第一个参数可以用以下方式指定。</target>
        </trans-unit>
        <trans-unit id="a9bf96de0559faf3b7e1d096d1d8a5e2e4453bbc" translate="yes" xml:space="preserve">
          <source>Currently the following two build types are tested on NetWare:</source>
          <target state="translated">目前在NetWare上测试了以下两种构建类型。</target>
        </trans-unit>
        <trans-unit id="27bda1314e744b16a23ac20d6ea98924b0ff0088" translate="yes" xml:space="preserve">
          <source>Currently the implementation is to create a single instance of the &lt;a href=&quot;Test2::API::Instance&quot;&gt;Test2::API::Instance&lt;/a&gt; Object. All class methods defer to the single instance. There is no public access to the singleton, and that is intentional. The class methods provided by this package provide the only functionality publicly exposed.</source>
          <target state="translated">当前，实现是创建&lt;a href=&quot;Test2::API::Instance&quot;&gt;Test2 :: API :: Instance&lt;/a&gt;对象的单个实例。所有类方法都遵循单个实例。没有公共访问单身人士，这是有意的。此包提供的类方法提供了公开公开的唯一功能。</target>
        </trans-unit>
        <trans-unit id="0dfd46b204fb5d45e8f29132257a9dee7ed55c16" translate="yes" xml:space="preserve">
          <source>Currently the mantissa is reduced as much as possible, favouring higher exponents over lower ones (e.g. returning 1e7 instead of 10e6 or 10000000e0). This might change in the future, so do not depend on it.</source>
          <target state="translated">目前,mantissa被尽可能地减少,有利于高指数而不是低指数(例如,返回1e7而不是10e6或10000000e0)。这种情况将来可能会改变,所以不要依赖它。</target>
        </trans-unit>
        <trans-unit id="272e78e92135f3b6c3f124be3274acb8250e5136" translate="yes" xml:space="preserve">
          <source>Currently the master repository is configured to forbid non-fast-forward merges. This means that the branches within can not be rebased and pushed as a single step.</source>
          <target state="translated">目前主仓库被配置为禁止非快进合并。这意味着里面的分支不能作为一个步骤进行重基和推送。</target>
        </trans-unit>
        <trans-unit id="cc52fa0221b520eb9cba69f5a8200cdef9bbc7cb" translate="yes" xml:space="preserve">
          <source>Currently the methods aren't as efficient as they could be, for reasons of clarity. This is probably a bad idea.</source>
          <target state="translated">目前这些方法的效率并不高,原因是不清楚。这可能是个坏主意。</target>
        </trans-unit>
        <trans-unit id="f8b020b4d907e7d336baf4a7bd1d21f0a642b241" translate="yes" xml:space="preserve">
          <source>Currently the only significant values are 'dmake' and 'nmake' for Windows users, instructing MakeMaker to generate a Makefile in the flavour of DMake (&quot;Dennis Vadura's Make&quot;) or Microsoft NMake respectively.</source>
          <target state="translated">目前对于Windows用户来说,唯一重要的值是'dmake'和'nmake',分别指示MakeMaker以DMake(&quot;Dennis Vadura的Make&quot;)或微软NMake的味道生成一个Makefile。</target>
        </trans-unit>
        <trans-unit id="b13896cce672efe66fde6e4733eeb0ddd56b420b" translate="yes" xml:space="preserve">
          <source>Currently the possible values for the OS name are</source>
          <target state="translated">目前,操作系统名称的可能值是</target>
        </trans-unit>
        <trans-unit id="f00b6778578143fea75a49ef468f9d31966e2d9a" translate="yes" xml:space="preserve">
          <source>Currently the value of &lt;code&gt;DISPLAY&lt;/code&gt; is ignored. It is recommended that it be set to be the hostname of the display, the server and screen in Unix notation. In the future the value of DISPLAY may be honored by Perl instead of using the default display.</source>
          <target state="translated">当前， &lt;code&gt;DISPLAY&lt;/code&gt; 的值被忽略。建议将其设置为Unix表示法的显示器，服务器和屏幕的主机名。将来，Perl可能会取代DISPLAY的值，而不是使用默认显示。</target>
        </trans-unit>
        <trans-unit id="8768013178cf8fe711f0d308fff8053c79e45b7a" translate="yes" xml:space="preserve">
          <source>Currently there is no way to specify more than one library on the command line. This means the following does not work:</source>
          <target state="translated">目前没有办法在命令行中指定多个库。这意味着下面的操作无法进行。</target>
        </trans-unit>
        <trans-unit id="a39b8349c59ac646b8af631b5ad977955e371ebf" translate="yes" xml:space="preserve">
          <source>Currently there is only one type of field hash, and only the boolean value of the mode makes a difference, but that may change.</source>
          <target state="translated">目前只有一种类型的字段哈希,只有模式的布尔值有区别,但这可能会改变。</target>
        </trans-unit>
        <trans-unit id="ae3b9b162a3784fe295b868497fbb629b1ddd426" translate="yes" xml:space="preserve">
          <source>Currently this OS-specific stuff consists of looking in the environment variables &quot;LANG&quot; and &quot;LANGUAGE&quot;; and on MSWin machines (where those variables are typically unused), this also tries using the module Win32::Locale to get a language-tag for whatever language/locale is currently selected in the &quot;Regional Settings&quot; (or &quot;International&quot;?) Control Panel. I welcome further suggestions for making this do the Right Thing under other operating systems that support localization.</source>
          <target state="translated">目前,这个操作系统特有的东西包括在环境变量 &quot;LANG &quot;和 &quot;LANGUAGE &quot;中查找;在MSWin机器上(这些变量通常未被使用),这也会尝试使用Win32::Locale模块来获取当前在 &quot;区域设置&quot;(或 &quot;国际&quot;?)控制面板中选择的语言/语言标签。我欢迎大家提出进一步的建议,让它在其他支持本地化的操作系统下做正确的事情。</target>
        </trans-unit>
        <trans-unit id="378c79aeaede8ea2bd5e71206224fcd13b58b934" translate="yes" xml:space="preserve">
          <source>Currently this always uses mergesort. See &lt;code&gt;&lt;a href=&quot;#sortsv_flags&quot;&gt;&quot;sortsv_flags&quot;&lt;/a&gt;&lt;/code&gt; for a more flexible routine.</source>
          <target state="translated">当前，这始终使用mergesort。有关更灵活的例程，请参见 &lt;code&gt;&lt;a href=&quot;#sortsv_flags&quot;&gt;&quot;sortsv_flags&quot;&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1b78daa9cb8c8ba0c96aabebf728d92ea741a97c" translate="yes" xml:space="preserve">
          <source>Currently this always uses mergesort. See sortsv_flags for a more flexible routine.</source>
          <target state="translated">目前总是使用mergesort。参见sortsv_flags以获得更灵活的例程。</target>
        </trans-unit>
        <trans-unit id="99139b870fbe31ffb01aeaae72d3575f4248f3e1" translate="yes" xml:space="preserve">
          <source>Currently this class works by just filtering out the non-Pod stuff from a given input file.</source>
          <target state="translated">目前这个类的工作原理只是从给定的输入文件中过滤出非Pod的东西。</target>
        </trans-unit>
        <trans-unit id="a2195c0949f8a5f7d55626e3a996d5f979acbacf" translate="yes" xml:space="preserve">
          <source>Currently this gives the same results as Linux does. Send email to &lt;a href=&quot;mailto:perlbug@perl.org&quot;&gt;mailto:perlbug@perl.org&lt;/a&gt; if you have examples of it needing to work differently.</source>
          <target state="translated">目前，这给出的结果与Linux相同。如果您有需要以其他方式工作的示例，请发送电子邮件至&lt;a href=&quot;mailto:perlbug@perl.org&quot;&gt;mailto：perlbug@perl.org&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8c05bed42565fb273b3a58a2b778911f3dba48d8" translate="yes" xml:space="preserve">
          <source>Currently this has only been tested on Unix and doesn't contain any of the Windows-specific code from the &lt;code&gt;Module::Build&lt;/code&gt; project. I'll do that next.</source>
          <target state="translated">目前，该代码仅在Unix上进行了测试，并且不包含 &lt;code&gt;Module::Build&lt;/code&gt; 项目中的任何Windows特定于Windows的代码。接下来，我会做。</target>
        </trans-unit>
        <trans-unit id="6c09a661f6643655325273d50b2f4ce06d5609d8" translate="yes" xml:space="preserve">
          <source>Currently this isn't used for anything, but it's provided (with default value of &lt;code&gt;(ref($language) &amp;amp;&amp;amp; $language-&amp;gt;{'encoding'})) or &quot;iso-8859-1&quot;&lt;/code&gt; ) as a sort of suggestion that it may be useful/necessary to associate encodings with your language handles (whether on a per-class or even per-handle basis.)</source>
          <target state="translated">目前，它什么都没用，但提供了它（默认值为 &lt;code&gt;(ref($language) &amp;amp;&amp;amp; $language-&amp;gt;{'encoding'})) or &quot;iso-8859-1&quot;&lt;/code&gt; ），它是一种建议将编码与您的语言句柄相关联（无论是基于每个类，甚至每个句柄）可能都是有用/必要的。</target>
        </trans-unit>
        <trans-unit id="2fe9e02e28a1376fbaaa825eb0420d6aa9001bf2" translate="yes" xml:space="preserve">
          <source>Currently this just takes the last bit of &lt;code&gt;&lt;a href=&quot;../functions/ref&quot;&gt;ref($language)&lt;/a&gt;&lt;/code&gt;, turns underscores to dashes, and returns it. So if $language is an object of class Hee::HOO::Haw::en_us, $language-&amp;gt;language_tag() returns &quot;en-us&quot;. (Yes, the usual representation for that language tag is &quot;en-US&quot;, but case is</source>
          <target state="translated">当前，这仅使用 &lt;code&gt;&lt;a href=&quot;../functions/ref&quot;&gt;ref($language)&lt;/a&gt;&lt;/code&gt; 的最后一位，将下划线变为破折号，然后将其返回。因此，如果$ language是Hee :: HOO :: Haw :: en_us类的对象，则$ language-&amp;gt; language_tag（）返回&amp;ldquo; en-us&amp;rdquo;。（是的，该语言标签的通常表示形式是&amp;ldquo; en-US&amp;rdquo;，但大小写是</target>
        </trans-unit>
        <trans-unit id="6f66e42fedd2402e63d6096207b558716fbf516e" translate="yes" xml:space="preserve">
          <source>Currently this just takes the last bit of &lt;code&gt;ref($language)&lt;/code&gt;, turns underscores to dashes, and returns it. So if $language is an object of class Hee::HOO::Haw::en_us, $language-&amp;gt;language_tag() returns &quot;en-us&quot;. (Yes, the usual representation for that language tag is &quot;en-US&quot;, but case is</source>
          <target state="translated">当前，这仅使用 &lt;code&gt;ref($language)&lt;/code&gt; 的最后一位，将下划线变为破折号，然后将其返回。因此，如果$ language是Hee :: HOO :: Haw :: en_us类的对象，则$ language-&amp;gt; language_tag（）返回&amp;ldquo; en-us&amp;rdquo;。（是的，该语言标签的通常表示形式是&amp;ldquo; en-US&amp;rdquo;，但大小写是</target>
        </trans-unit>
        <trans-unit id="79f7485198cd482639db4f4626a9508a51ae8d0f" translate="yes" xml:space="preserve">
          <source>Currently this module understands the following types. h2xs may only know a subset. The sizes of the numeric types are chosen by the &lt;code&gt;Configure&lt;/code&gt; script at compile time.</source>
          <target state="translated">当前，该模块可理解以下类型。h2xs可能只知道一个子集。数字类型的大小在编译时由&amp;ldquo; &lt;code&gt;Configure&lt;/code&gt; 脚本选择。</target>
        </trans-unit>
        <trans-unit id="93237539509fa03223f330e7d636de0f712ccf6d" translate="yes" xml:space="preserve">
          <source>Currently you need to write a plugin to get around this.</source>
          <target state="translated">目前你需要写一个插件来解决这个问题。</target>
        </trans-unit>
        <trans-unit id="d2d377b4476a6e188762144f586ad2d608b464a9" translate="yes" xml:space="preserve">
          <source>Currently, &lt;code&gt;given&lt;/code&gt; blocks can't always be used as proper expressions. This may be addressed in a future version of Perl.</source>
          <target state="translated">当前， &lt;code&gt;given&lt;/code&gt; 块不能总是用作适当的表达式。这可能会在Perl的将来版本中解决。</target>
        </trans-unit>
        <trans-unit id="be9be40cf2cf1e1fc15159dabb7ecc2afdb28f1e" translate="yes" xml:space="preserve">
          <source>Currently, Math::BigInt-&amp;gt;new() defaults to 0, while Math::BigInt-&amp;gt;new('') results in 'NaN'. This might change in the future, so use always the following explicit forms to get a zero or NaN:</source>
          <target state="translated">当前，Math :: BigInt-&amp;gt; new（）的默认值为0，而Math :: BigInt-&amp;gt; new（''）的结果为'NaN'。将来可能会改变，因此请始终使用以下显式形式获取零或NaN：</target>
        </trans-unit>
        <trans-unit id="5d26c1593e61e13dda079b542bc00ebe32e1e263" translate="yes" xml:space="preserve">
          <source>Currently, Math::BigInt::new() defaults to 0, while Math::BigInt::new('') results in 'NaN'. This might change in the future, so use always the following explicit forms to get a zero or NaN:</source>
          <target state="translated">目前,Math::BigInt::new()默认为0,而Math::BigInt::new('')的结果是'NaN'。这在将来可能会发生变化,所以总是使用下面的显式来获取0或NaN。</target>
        </trans-unit>
        <trans-unit id="5a3571347f1fb8b0138ff4086aa2cd9a390c3586" translate="yes" xml:space="preserve">
          <source>Currently, Perl deals with UTF-8 strings and non-UTF-8 strings slightly differently. A flag in the SV, &lt;code&gt;SVf_UTF8&lt;/code&gt; , indicates that the string is internally encoded as UTF-8. Without it, the byte value is the codepoint number and vice versa. This flag is only meaningful if the SV is &lt;code&gt;SvPOK&lt;/code&gt; or immediately after stringification via &lt;code&gt;SvPV&lt;/code&gt; or a similar macro. You can check and manipulate this flag with the following macros:</source>
          <target state="translated">当前，Perl处理UTF-8字符串和非UTF-8字符串的方式略有不同。SV中的标志 &lt;code&gt;SVf_UTF8&lt;/code&gt; 指示字符串在内部编码为UTF-8。没有它，字节值就是代码点编号，反之亦然。仅当SV为 &lt;code&gt;SvPOK&lt;/code&gt; 或通过 &lt;code&gt;SvPV&lt;/code&gt; 或类似宏进行字符串化之后，此标志才有意义。您可以使用以下宏检查和操作此标志：</target>
        </trans-unit>
        <trans-unit id="03db93d9a43bc80eb13a824e93de1d6eabb5c360" translate="yes" xml:space="preserve">
          <source>Currently, Perl deals with UTF-8 strings and non-UTF-8 strings slightly differently. A flag in the SV, &lt;code&gt;SVf_UTF8&lt;/code&gt;, indicates that the string is internally encoded as UTF-8. Without it, the byte value is the codepoint number and vice versa. This flag is only meaningful if the SV is &lt;code&gt;SvPOK&lt;/code&gt; or immediately after stringification via &lt;code&gt;SvPV&lt;/code&gt; or a similar macro. You can check and manipulate this flag with the following macros:</source>
          <target state="translated">当前，Perl处理UTF-8字符串和非UTF-8字符串的方式略有不同。SV中的标志 &lt;code&gt;SVf_UTF8&lt;/code&gt; 指示该字符串在内部编码为UTF-8。没有它，字节值就是代码点编号，反之亦然。仅当SV为 &lt;code&gt;SvPOK&lt;/code&gt; 或通过 &lt;code&gt;SvPV&lt;/code&gt; 或类似宏进行字符串化之后，此标志才有意义。您可以使用以下宏检查和操作此标志：</target>
        </trans-unit>
        <trans-unit id="cf064da20402a373389bd1e8534e66d897ddfb89" translate="yes" xml:space="preserve">
          <source>Currently, an unescaped &quot;~&quot; before a character other than a bracket or a comma is taken to mean just a &quot;~&quot; and that character. I.e., &quot;~X&quot; means the same as &quot;~~X&quot; -- i.e., one literal tilde, and then one literal &quot;X&quot;. However, by using &quot;~X&quot;, you are assuming that no future version of Maketext will use &quot;~X&quot; as a magic escape sequence. In practice this is not a great problem, since first off you can just write &quot;~~X&quot; and not worry about it; second off, I doubt I'll add lots of new magic characters to bracket notation; and third off, you aren't likely to want literal &quot;~&quot; characters in your messages anyway, since it's not a character with wide use in natural language text.</source>
          <target state="translated">目前,在括号或逗号以外的字符前未加括号的&quot;~&quot;被认为仅指&quot;~&quot;和该字符。也就是说,&quot;~X &quot;和&quot;~~X &quot;的意思是一样的--也就是说,先是一个字母 &quot;tilde&quot;,然后是一个字母 &quot;X&quot;。然而,使用&quot;~X&quot;,你是假设未来的Maketext版本不会使用&quot;~X &quot;作为一个神奇的转义序列。在实践中,这并不是一个很大的问题,因为首先,你可以直接写&quot;~~X &quot;而不用担心;其次,我怀疑我会在括号符号中添加很多新的魔法字符;第三,无论如何,你不可能在你的消息中想要字面的&quot;~&quot;字符,因为它不是一个在自然语言文本中广泛使用的字符。</target>
        </trans-unit>
        <trans-unit id="32c5c8dadaaaf31c38a9691666537875247237cb" translate="yes" xml:space="preserve">
          <source>Currently, bracket groups do not nest. That is, you &lt;b&gt;cannot&lt;/b&gt; say:</source>
          <target state="translated">当前，括号组不嵌套。也就是说，您&lt;b&gt;不能&lt;/b&gt;说：</target>
        </trans-unit>
        <trans-unit id="c35cdca66e034e7f9a47d31a205334d612013eef" translate="yes" xml:space="preserve">
          <source>Currently, for BigInts &lt;code&gt;$e&lt;/code&gt; is always 0, except +inf and -inf, where it is &lt;code&gt;+inf&lt;/code&gt; ; and for NaN, where it is &lt;code&gt;NaN&lt;/code&gt; ; and for &lt;code&gt;$x == 0&lt;/code&gt; , where it is &lt;code&gt;1&lt;/code&gt; (to be compatible with Math::BigFloat's internal representation of a zero as &lt;code&gt;0E1&lt;/code&gt; ).</source>
          <target state="translated">当前，对于BigInts， &lt;code&gt;$e&lt;/code&gt; 始终为0，但+ inf和-inf除外，其中 &lt;code&gt;+inf&lt;/code&gt; ；对于NaN来说，这里是 &lt;code&gt;NaN&lt;/code&gt; ；对于 &lt;code&gt;$x == 0&lt;/code&gt; ，其中为 &lt;code&gt;1&lt;/code&gt; （与Math :: BigFloat的内部零表示为 &lt;code&gt;0E1&lt;/code&gt; 兼容）。</target>
        </trans-unit>
        <trans-unit id="beb5d0250d9ace27aad40903e5fff21089b05d9e" translate="yes" xml:space="preserve">
          <source>Currently, on all platforms except MSWin32, all</source>
          <target state="translated">目前,在除MSWin32以外的所有平台上,所有的</target>
        </trans-unit>
        <trans-unit id="93a247e0eef683aaac7910c01f3f928a9e46d78c" translate="yes" xml:space="preserve">
          <source>Currently, only the &lt;code&gt;access&lt;/code&gt; sub-pragma is implemented. It enables (or disables) the use of access() when available, that is, on most UNIX systems and other POSIX environments. See details below.</source>
          <target state="translated">当前，仅实现 &lt;code&gt;access&lt;/code&gt; 子实用程序。当可用时，即在大多数UNIX系统和其他POSIX环境上，它启用（或禁用）access（）的使用。请参阅下面的详细信息。</target>
        </trans-unit>
        <trans-unit id="33e7ea9ec5cbd93ff2ecf3a4dad788833c2604db" translate="yes" xml:space="preserve">
          <source>Currently, the only significant value for &lt;code&gt;flags&lt;/code&gt; is &lt;code&gt;SVf_UTF8&lt;/code&gt;.</source>
          <target state="translated">当前， &lt;code&gt;flags&lt;/code&gt; 的唯一有效值是 &lt;code&gt;SVf_UTF8&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="12cb6e902a01a88f56d9045c1e314fafc987b2ba" translate="yes" xml:space="preserve">
          <source>Currently, the only significant value for &lt;code&gt;flags&lt;/code&gt; is SVf_UTF8.</source>
          <target state="translated">当前， &lt;code&gt;flags&lt;/code&gt; 的唯一有效值是SVf_UTF8。</target>
        </trans-unit>
        <trans-unit id="c22d9a7fee9cae91b42a0d8e2cfac398a39a9b2b" translate="yes" xml:space="preserve">
          <source>Currently, the only useful value for &lt;code&gt;flags&lt;/code&gt; is SVf_UTF8.</source>
          <target state="translated">当前， &lt;code&gt;flags&lt;/code&gt; 的唯一有用的值是SVf_UTF8。</target>
        </trans-unit>
        <trans-unit id="2b251ef9a6ee9de77a03ddc9608c4a3c0db1c0a0" translate="yes" xml:space="preserve">
          <source>Currently, the outermost formatting instruction wins, so for example underlined text inside a region of bold text is displayed as simply bold. There may be some better approach possible.</source>
          <target state="translated">目前,最外侧的格式化指令获胜,因此,例如粗体文字区域内的下划线文字被显示为简单的粗体。可能有一些更好的办法可能。</target>
        </trans-unit>
        <trans-unit id="3ca8600ba039585f9f853e2c43bcdff7d5ab9e0b" translate="yes" xml:space="preserve">
          <source>Currently, the subroutine can be identified statically if the RV that the &lt;code&gt;rv2cv&lt;/code&gt; is to operate on is provided by a suitable &lt;code&gt;gv&lt;/code&gt; or &lt;code&gt;const&lt;/code&gt; op. A &lt;code&gt;gv&lt;/code&gt; op is suitable if the GV's CV slot is populated. A &lt;code&gt;const&lt;/code&gt; op is suitable if the constant value must be an RV pointing to a CV. Details of this process may change in future versions of Perl. If the &lt;code&gt;rv2cv&lt;/code&gt; op has the &lt;code&gt;OPpENTERSUB_AMPER&lt;/code&gt; flag set then no attempt is made to identify the subroutine statically: this flag is used to suppress compile-time magic on a subroutine call, forcing it to use default runtime behaviour.</source>
          <target state="translated">当前，如果 &lt;code&gt;rv2cv&lt;/code&gt; 要操作的RV 由适当的 &lt;code&gt;gv&lt;/code&gt; 或 &lt;code&gt;const&lt;/code&gt; op 提供，则可以静态标识该子例程。甲 &lt;code&gt;gv&lt;/code&gt; 如果填充了GV的CV槽op是合适的。甲 &lt;code&gt;const&lt;/code&gt; op是合适的，如果恒定值必须是指向一个CV RV。在以后的Perl版本中，此过程的详细信息可能会更改。如果 &lt;code&gt;rv2cv&lt;/code&gt; op 设置了 &lt;code&gt;OPpENTERSUB_AMPER&lt;/code&gt; 标志，则不会尝试静态地标识子例程：此标志用于抑制子例程调用上的编译时魔术，从而迫使其使用默认的运行时行为。</target>
        </trans-unit>
        <trans-unit id="30ae0333cbf3155ee9a8d502bacd2883d5d9957f" translate="yes" xml:space="preserve">
          <source>Currently, there are no attributes conveyed.</source>
          <target state="translated">目前,还没有传达任何属性。</target>
        </trans-unit>
        <trans-unit id="67e7a7d4977369b6c724bdde229426278921cd59" translate="yes" xml:space="preserve">
          <source>Currently, this warning only appears if a character entity was found that does not have a Unicode character. This should be fixed to adhere to the original warning.</source>
          <target state="translated">目前,只有当发现一个没有Unicode字符的字符实体时,才会出现这个警告。这一点应该得到修正,以遵守原来的警告。</target>
        </trans-unit>
        <trans-unit id="1e2d2e7b351cedc7ed2289316efdff5558012869" translate="yes" xml:space="preserve">
          <source>Currently, we only allow opened filehandles or filenames, but not strings. The internals would need some reworking to facilitate stringified archives.</source>
          <target state="translated">目前,我们只允许打开文件柄或文件名,但不允许使用字符串。内部结构需要重新设计,以方便字符串化存档。</target>
        </trans-unit>
        <trans-unit id="810afe6a34891b144a1f9e0ce40e9fc1217c35e6" translate="yes" xml:space="preserve">
          <source>Currently, we only support this if the filehandle is an IO::Zlib object. Environments, like apache, will present you with an opened filehandle to an uploaded file, which might be a compressed archive.</source>
          <target state="translated">目前,我们只支持在filehandle是一个IO::Zlib对象的情况下这样做。像apache这样的环境,会向你展示一个已打开的上传文件的文件柄,它可能是一个压缩文件。</target>
        </trans-unit>
        <trans-unit id="261fc98a0206bd66bd4ad6212e54d2bfab7d8db4" translate="yes" xml:space="preserve">
          <source>Currently, whether or not the test suite passed with no 'problems' (such as TODO passed).</source>
          <target state="translated">目前,测试套件是否在没有 &quot;问题 &quot;的情况下通过(如TODO通过)。</target>
        </trans-unit>
        <trans-unit id="9c6db45396c2d46499bd75d3b569fe4bd724810e" translate="yes" xml:space="preserve">
          <source>Currently, you must be running at least perl v5.6.0 in order to run with MEDIUM or HIGH security. This is simply because the safety tests use functions from &lt;a href=&quot;fcntl&quot;&gt;Fcntl&lt;/a&gt; that are not available in older versions of perl. The problem is that the version number for Fcntl is the same in perl 5.6.0 and in 5.005_03 even though they are different versions.</source>
          <target state="translated">当前，您必须至少运行perl v5.6.0才能以MEDIUM或HIGH安全性运行。这仅仅是因为安全测试使用了&lt;a href=&quot;fcntl&quot;&gt;Fcntl&lt;/a&gt;中的功能，而这些功能在旧版本的perl中不可用。问题是，即使版本不同，Fcntl的版本号在perl 5.6.0和5.005_03中也相同。</target>
        </trans-unit>
        <trans-unit id="c505ffc91edd3f9012e8a66a72815302c62cb3ca" translate="yes" xml:space="preserve">
          <source>Currently, you must be running at least perl v5.6.0 in order to run with MEDIUM or HIGH security. This is simply because the safety tests use functions from L</source>
          <target state="translated">目前,你必须至少运行perl v5.6.0才能以中度或高度安全的方式运行。这只是因为安全测试使用了来自 L</target>
        </trans-unit>
        <trans-unit id="19f401a7406fb2ade217c4c2d091602740509bb8" translate="yes" xml:space="preserve">
          <source>Curtis &quot;Ovid&quot; Poe &amp;lt;ovid@cpan.org&amp;gt;</source>
          <target state="translated">柯蒂斯（Curtis&amp;ldquo; Ovid&amp;rdquo; Poe）&amp;lt;ovid@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="7afc80af35ce6ee31ebae219a53944bd2652c7da" translate="yes" xml:space="preserve">
          <source>Custom Layers</source>
          <target state="translated">自定义图层</target>
        </trans-unit>
        <trans-unit id="dbdaeda1e073966b4e479d9fff0e7793b0904106" translate="yes" xml:space="preserve">
          <source>Custom Operators</source>
          <target state="translated">自定义运营商</target>
        </trans-unit>
        <trans-unit id="6784d4d8f3fee4200a3147bca7df4cb94c88452f" translate="yes" xml:space="preserve">
          <source>Custom formatters can be loaded configured using the &lt;code&gt;formatter_class&lt;/code&gt; parameter to &lt;a href=&quot;#new&quot;&gt;&quot;new&quot;&lt;/a&gt;.</source>
          <target state="translated">可以使用 &lt;code&gt;formatter_class&lt;/code&gt; 参数将配置的自定义格式化程序加载为&lt;a href=&quot;#new&quot;&gt;&amp;ldquo; new&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d0eae33b0c090e3966d3c68512ada19e1528011c" translate="yes" xml:space="preserve">
          <source>Custom formatters can be loaded configured using the &lt;code&gt;formatter_class&lt;/code&gt; parameter to &lt;a href=&quot;#new&quot;&gt;new&lt;/a&gt;.</source>
          <target state="translated">可以使用 &lt;code&gt;formatter_class&lt;/code&gt; 参数将配置的自定义格式化程序加载为&lt;a href=&quot;#new&quot;&gt;new&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="53cff91188bebb2a553103fb8e7b63cd42bccaa2" translate="yes" xml:space="preserve">
          <source>Custom operator support is an experimental feature that allows you to define your own ops. This is primarily to allow the building of interpreters for other languages in the Perl core, but it also allows optimizations through the creation of &quot;macro-ops&quot; (ops which perform the functions of multiple ops which are usually executed together, such as &lt;code&gt;gvsv, gvsv, add&lt;/code&gt; .)</source>
          <target state="translated">自定义操作员支持是一项实验性功能，可让您定义自己的操作。这主要是为了在Perl内核中构建其他语言的解释器，但同时也允许通过创建&amp;ldquo;宏操作&amp;rdquo;（执行多个操作的功能的优化操作，这些操作通常一起执行，例如 &lt;code&gt;gvsv, gvsv, add&lt;/code&gt; 。）</target>
        </trans-unit>
        <trans-unit id="447aace8cf7194da338038473a7839a9a536ffef" translate="yes" xml:space="preserve">
          <source>Custom operator support is an experimental feature that allows you to define your own ops. This is primarily to allow the building of interpreters for other languages in the Perl core, but it also allows optimizations through the creation of &quot;macro-ops&quot; (ops which perform the functions of multiple ops which are usually executed together, such as &lt;code&gt;gvsv, gvsv, add&lt;/code&gt;.)</source>
          <target state="translated">自定义操作员支持是一项实验性功能，可让您定义自己的操作。这主要是为了在Perl内核中构建其他语言的解释器，但同时也允许通过创建&amp;ldquo;宏操作&amp;rdquo;（执行多个操作的功能的优化操作，这些操作通常一起执行，例如 &lt;code&gt;gvsv, gvsv, add&lt;/code&gt; 。）</target>
        </trans-unit>
        <trans-unit id="b8a0f9b4738b676273a2a999093c300569cd6824" translate="yes" xml:space="preserve">
          <source>Customization of the dist targets can be done by specifying a hash reference to the dist attribute of the WriteMakefile call. The following parameters are recognized:</source>
          <target state="translated">自定义dist目标可以通过指定一个对WriteMakefile调用的dist属性的哈希引用来完成。以下是被认可的参数。</target>
        </trans-unit>
        <trans-unit id="89573ca91f1cd12b68d7b52afaa6e74057482c25" translate="yes" xml:space="preserve">
          <source>Customize how TAP gets into the parser</source>
          <target state="translated">自定义TAP进入解析器的方式。</target>
        </trans-unit>
        <trans-unit id="a6236a7d285f303c997fe0bb85bdfdf676fff889" translate="yes" xml:space="preserve">
          <source>Customize how TAP results are output from the parser</source>
          <target state="translated">自定义TAP结果从解析器输出的方式。</target>
        </trans-unit>
        <trans-unit id="0b9b392a3be38eacab1a203c181ca6e780bde6d0" translate="yes" xml:space="preserve">
          <source>Customized option parser for Pod::Perldoc</source>
          <target state="translated">为Pod::Perldoc定制的选项解析器。</target>
        </trans-unit>
        <trans-unit id="88cc44eee1c5bcf56c439099a999101643d07be8" translate="yes" xml:space="preserve">
          <source>CvDEPTH</source>
          <target state="translated">CvDEPTH</target>
        </trans-unit>
        <trans-unit id="62b3350b3c7b679b4e2f011331e58301e9cb4f11" translate="yes" xml:space="preserve">
          <source>CvFLAGS</source>
          <target state="translated">CvFLAGS</target>
        </trans-unit>
        <trans-unit id="7572ef783079aa4791855006dd4c0a84306130a7" translate="yes" xml:space="preserve">
          <source>CvGV</source>
          <target state="translated">CvGV</target>
        </trans-unit>
        <trans-unit id="8a8357813e39cd0767538523e6c92a9253cc195f" translate="yes" xml:space="preserve">
          <source>CvPADLIST</source>
          <target state="translated">CvPADLIST</target>
        </trans-unit>
        <trans-unit id="013adcd6a07b8f61d8caa978ff261bf92132acf4" translate="yes" xml:space="preserve">
          <source>CvSTASH</source>
          <target state="translated">CvSTASH</target>
        </trans-unit>
        <trans-unit id="9abf76984e66dff232da624a368b395e1ebe497b" translate="yes" xml:space="preserve">
          <source>CvWEAKOUTSIDE</source>
          <target state="translated">CvWEAKOUTSIDE</target>
        </trans-unit>
        <trans-unit id="d0f3d41e3c41ddc6cbc9c2daec27882d80caea71" translate="yes" xml:space="preserve">
          <source>Cwd</source>
          <target state="translated">Cwd</target>
        </trans-unit>
        <trans-unit id="fd9825bfa4c850e67c2151a6f5292a3e86f0c912" translate="yes" xml:space="preserve">
          <source>Cwd - get pathname of current working directory</source>
          <target state="translated">Cwd-获取当前工作目录的路径名。</target>
        </trans-unit>
        <trans-unit id="160555969f1a8fde234517fab23669eee0ccbd1e" translate="yes" xml:space="preserve">
          <source>Cwd.xs</source>
          <target state="translated">Cwd.xs</target>
        </trans-unit>
        <trans-unit id="6946f4c8071effbeabbad50c4f3d087f9e9e6aa9" translate="yes" xml:space="preserve">
          <source>Cygwin</source>
          <target state="translated">Cygwin</target>
        </trans-unit>
        <trans-unit id="73fc7f50fdec5b6f0f95bef5f8e06196f92c8ab5" translate="yes" xml:space="preserve">
          <source>Cygwin = GNU+Cygnus+Windows (Don't leave UNIX without it)</source>
          <target state="translated">Cygwin=GNU+Cygnus+Windows (没有它不要离开UNIX)</target>
        </trans-unit>
        <trans-unit id="b410b02920a07e0c1b2f5517c0638087253c2758" translate="yes" xml:space="preserve">
          <source>Cygwin Configuration</source>
          <target state="translated">Cygwin配置</target>
        </trans-unit>
        <trans-unit id="f2fd19eff84130ae501b7f66fc64ed3790d3e356" translate="yes" xml:space="preserve">
          <source>Cygwin does an outstanding job of providing UNIX-like semantics on top of Win32 systems. However, in addition to the items noted above, there are some differences that you should know about. This is a very brief guide to portability, more information can be found in the Cygwin documentation.</source>
          <target state="translated">Cygwin在Win32系统之上提供类似UNIX的语义方面做得非常出色。然而,除了上面提到的项目之外,还有一些差异是你应该知道的。这是一个非常简短的可移植性指南,更多信息可以在Cygwin文档中找到。</target>
        </trans-unit>
        <trans-unit id="39bcb7dc63150f69c7968352d73ab68ec6457826" translate="yes" xml:space="preserve">
          <source>Cygwin does not initialize all original Win32 environment variables. See the bottom of this page &lt;a href=&quot;http://cygwin.com/cygwin-ug-net/setup-env.html&quot;&gt;http://cygwin.com/cygwin-ug-net/setup-env.html&lt;/a&gt; for &quot;Restricted Win32 environment&quot;.</source>
          <target state="translated">Cygwin不会初始化所有原始Win32环境变量。有关&amp;ldquo;受限制的Win32环境&amp;rdquo;，请参见本页底部&lt;a href=&quot;http://cygwin.com/cygwin-ug-net/setup-env.html&quot;&gt;http://cygwin.com/cygwin-ug-net/setup-env.html&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="32135bea5f5607e57bc37c6e1a44f11dca4b0e89" translate="yes" xml:space="preserve">
          <source>Cygwin does not initialize all original Win32 environment variables. See the bottom of this page &lt;a href=&quot;https://cygwin.com/cygwin-ug-net/setup-env.html&quot;&gt;https://cygwin.com/cygwin-ug-net/setup-env.html&lt;/a&gt; for &quot;Restricted Win32 environment&quot;.</source>
          <target state="translated">Cygwin不会初始化所有原始Win32环境变量。有关&amp;ldquo;受限Win32环境&amp;rdquo;的信息，请参见本页底部&lt;a href=&quot;https://cygwin.com/cygwin-ug-net/setup-env.html&quot;&gt;https://cygwin.com/cygwin-ug-net/setup-env.html&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="81c2c7aa1db1394160b27a38c6928b843acda7e8" translate="yes" xml:space="preserve">
          <source>Cygwin is covered by the GNU General Public License (but that shouldn't matter for Perl use). Cygwin contains (in addition to the shell) a comprehensive set of standard Unix toolkit utilities.</source>
          <target state="translated">Cygwin 受 GNU 通用公共许可证的保护(但这对于 Perl 的使用来说并不重要)。除了shell之外,Cygwin还包含了一套全面的标准Unix工具箱实用程序。</target>
        </trans-unit>
        <trans-unit id="8258ca2d192f15ab780ba7a84929a7edb3f631ab" translate="yes" xml:space="preserve">
          <source>Cygwin pathnames are separated by forward (</source>
          <target state="translated">Cygwin路径名用正向(</target>
        </trans-unit>
        <trans-unit id="9651770d389e8830b4b1e3539f723c1e80eca364" translate="yes" xml:space="preserve">
          <source>Cygwin processes have their own pid, which is different from the underlying windows pid. Most posix compliant Proc functions expect the cygwin pid, but several Win32::Process functions expect the winpid. E.g. &lt;code&gt;$$&lt;/code&gt; is the cygwin pid of</source>
          <target state="translated">Cygwin进程具有自己的pid，该pid与基础的Windows pid不同。大多数posix兼容的Proc函数都希望使用cygwin pid，但是几个Win32 :: Process函数都需要使用winpid。例如 &lt;code&gt;$$&lt;/code&gt; 是的cygwin pid</target>
        </trans-unit>
        <trans-unit id="05c0c2f636a8edb75c77d41c4c7bfc716236cfce" translate="yes" xml:space="preserve">
          <source>Cygwin uses 64-bit integers for internal size and position calculations, this will be correctly detected and defined by Configure.</source>
          <target state="translated">Cygwin使用64位整数进行内部大小和位置计算,这将由Configure正确检测和定义。</target>
        </trans-unit>
        <trans-unit id="93bc0332bfb8d6a365d2c9f29796c194d94c35ae" translate="yes" xml:space="preserve">
          <source>Cygwin vs. Windows errors</source>
          <target state="translated">Cygwin与Windows的错误</target>
        </trans-unit>
        <trans-unit id="69fc52b95df19dd4f32d13430d0c3f0606e37966" translate="yes" xml:space="preserve">
          <source>Cygwin vs. Windows process ids</source>
          <target state="translated">Cygwin与Windows进程ID的比较</target>
        </trans-unit>
        <trans-unit id="d140941c1521d2349d4bd6c64c31475654a7b43c" translate="yes" xml:space="preserve">
          <source>Cylindrical coordinates,</source>
          <target state="translated">圆柱坐标。</target>
        </trans-unit>
        <trans-unit id="b4d97c060a73217d3a51cb60b08ffcf8d4239756" translate="yes" xml:space="preserve">
          <source>Cyrillic encoding ISO-IR-111</source>
          <target state="translated">西里尔语编码 ISO-IR-111</target>
        </trans-unit>
        <trans-unit id="1fef42909247a6c230eeef66277f2b5e0e8f274e" translate="yes" xml:space="preserve">
          <source>Czech Republic</source>
          <target state="translated">捷克共和国</target>
        </trans-unit>
        <trans-unit id="50c9e8d5fc98727b4bbc93cf5d64a68db647f04f" translate="yes" xml:space="preserve">
          <source>D</source>
          <target state="translated">D</target>
        </trans-unit>
        <trans-unit id="96f0e31b49aae2a6d915ae3b613e4575c8b6a5d9" translate="yes" xml:space="preserve">
          <source>D. INSTALL</source>
          <target state="translated">D.安装</target>
        </trans-unit>
        <trans-unit id="7f2430aff77c078755160a61817f59ac5a442628" translate="yes" xml:space="preserve">
          <source>D. Wegscheid &amp;lt;wegscd@whirlpool.com&amp;gt; R. Schertler &amp;lt;roderick@argon.org&amp;gt; J. Hietaniemi &amp;lt;jhi@iki.fi&amp;gt; G. Aas &amp;lt;gisle@aas.no&amp;gt;</source>
          <target state="translated">D.Wegscheid &amp;lt;wegscd@whirlpool.com&amp;gt; R.Schertler &amp;lt;roderick@argon.org&amp;gt; J.Hietaniemi &amp;lt;jhi@iki.fi&amp;gt; G.Aas &amp;lt;gisle@aas.no&amp;gt;</target>
        </trans-unit>
        <trans-unit id="a856f8342e4097ec46ec2ae4d0ef67ea993ed17d" translate="yes" xml:space="preserve">
          <source>D&lt;b&gt;1&lt;/b&gt;h</source>
          <target state="translated">D&lt;b&gt;1&lt;/b&gt;h</target>
        </trans-unit>
        <trans-unit id="cbcb89e55acdd88dfeeed3c5a12d75530af183e0" translate="yes" xml:space="preserve">
          <source>DATA STRUCTURES</source>
          <target state="translated">数据结构</target>
        </trans-unit>
        <trans-unit id="65057e7a198e3179350e6ed9b0f04982f164814a" translate="yes" xml:space="preserve">
          <source>DATA TYPES</source>
          <target state="translated">数据类型</target>
        </trans-unit>
        <trans-unit id="8c76abdec41a7652375d00f4bf05256b82c68494" translate="yes" xml:space="preserve">
          <source>DATE</source>
          <target state="translated">DATE</target>
        </trans-unit>
        <trans-unit id="c12b32a0cc17b3f8909c76d7b1bfe6c328500bd4" translate="yes" xml:space="preserve">
          <source>DB</source>
          <target state="translated">DB</target>
        </trans-unit>
        <trans-unit id="d3a3e481c8bad23af4b07c6a711d820269aa05e1" translate="yes" xml:space="preserve">
          <source>DB - programmatic interface to the Perl debugging API</source>
          <target state="translated">DB-通往Perl调试API的程序性接口</target>
        </trans-unit>
        <trans-unit id="02b89c8f47620a4d50d693c8da52968959062472" translate="yes" xml:space="preserve">
          <source>DBM</source>
          <target state="translated">DBM</target>
        </trans-unit>
        <trans-unit id="f76a9cbb39dfd2541a72b35e7e8f4653016195c0" translate="yes" xml:space="preserve">
          <source>DBM Comparisons</source>
          <target state="translated">DBM比较</target>
        </trans-unit>
        <trans-unit id="ca5f67a0ba0d8efff1637f1da816838257659ffd" translate="yes" xml:space="preserve">
          <source>DBM FILTERS</source>
          <target state="translated">DBM过滤器</target>
        </trans-unit>
        <trans-unit id="84ae46ecb9dc4a66d14352d62f96a02e4cb51582" translate="yes" xml:space="preserve">
          <source>DBM Filter Low-level API</source>
          <target state="translated">DBM过滤器 低级API</target>
        </trans-unit>
        <trans-unit id="89d82ce9435d1c0ea4a6bc6721d2f5690a7f92ea" translate="yes" xml:space="preserve">
          <source>DBM Filters are useful for a class of problems where you</source>
          <target state="translated">DBM过滤器对于以下一类问题是有用的</target>
        </trans-unit>
        <trans-unit id="7578525c0394078f99ffd4a40edc277d75ad744f" translate="yes" xml:space="preserve">
          <source>DBM_Filter</source>
          <target state="translated">DBM_Filter</target>
        </trans-unit>
        <trans-unit id="b38c7d32f616c7556af3364ba66546ed0749f03b" translate="yes" xml:space="preserve">
          <source>DBM_Filter -- Filter DBM keys/values</source>
          <target state="translated">DBM_Filter --筛选DBM键/值。</target>
        </trans-unit>
        <trans-unit id="b6b9b1dec59c3a08e8723935d64f316cd6ef56cc" translate="yes" xml:space="preserve">
          <source>DBM_Filter::compress</source>
          <target state="translated">DBM_Filter::compress</target>
        </trans-unit>
        <trans-unit id="017e1847be264d3b84ccfa3271d40094dd0bf1eb" translate="yes" xml:space="preserve">
          <source>DBM_Filter::compress - filter for DBM_Filter</source>
          <target state="translated">DBM_Filter::compress-DBM_Filter的过滤器。</target>
        </trans-unit>
        <trans-unit id="e29bd395446d47ab211ec2e1146eefd14e1b20a3" translate="yes" xml:space="preserve">
          <source>DBM_Filter::encode</source>
          <target state="translated">DBM_Filter::encode</target>
        </trans-unit>
        <trans-unit id="f5e031e4b2f19789fcf7c2f3ba685f80663d177c" translate="yes" xml:space="preserve">
          <source>DBM_Filter::encode - filter for DBM_Filter</source>
          <target state="translated">DBM_Filter::encode-DBM_Filter的过滤器。</target>
        </trans-unit>
        <trans-unit id="fcb2034b0ecd24b1bee4254c842bbb672bdbc7d6" translate="yes" xml:space="preserve">
          <source>DBM_Filter::int32</source>
          <target state="translated">DBM_Filter::int32</target>
        </trans-unit>
        <trans-unit id="5fe5fd365abd08f6af165c5d6a16911995a685a9" translate="yes" xml:space="preserve">
          <source>DBM_Filter::int32 - filter for DBM_Filter</source>
          <target state="translated">DBM_Filter::int32-DBM_Filter的过滤器。</target>
        </trans-unit>
        <trans-unit id="4a3e906903359c539b73264aaf12312ed4cfcbb3" translate="yes" xml:space="preserve">
          <source>DBM_Filter::null</source>
          <target state="translated">DBM_Filter::null</target>
        </trans-unit>
        <trans-unit id="f2b61c34157f644580714175a9ac63fc9b039644" translate="yes" xml:space="preserve">
          <source>DBM_Filter::null - filter for DBM_Filter</source>
          <target state="translated">DBM_Filter::null-DBM_Filter的过滤器。</target>
        </trans-unit>
        <trans-unit id="9bc092e44e5524b9cfa3d26c271d34f1880924e0" translate="yes" xml:space="preserve">
          <source>DBM_Filter::utf8</source>
          <target state="translated">DBM_Filter::utf8</target>
        </trans-unit>
        <trans-unit id="1bfbf4c2c625b28768968c9e40b648dd9c14d44d" translate="yes" xml:space="preserve">
          <source>DBM_Filter::utf8 - filter for DBM_Filter</source>
          <target state="translated">DBM_Filter::utf8-DBM_Filter的过滤器。</target>
        </trans-unit>
        <trans-unit id="b02f6970eb3456617162054c6756321f766cb936" translate="yes" xml:space="preserve">
          <source>DB_BTREE</source>
          <target state="translated">DB_BTREE</target>
        </trans-unit>
        <trans-unit id="b33927ab202d8fc0904f1f9b9d856b0b54625b77" translate="yes" xml:space="preserve">
          <source>DB_File</source>
          <target state="translated">DB_File</target>
        </trans-unit>
        <trans-unit id="2c972e69463b8f58734f3a05c1368f9d2f81dba9" translate="yes" xml:space="preserve">
          <source>DB_File - Perl5 access to Berkeley DB version 1.x</source>
          <target state="translated">DB_File-Perl5 访问 Berkeley DB 1.x 版。</target>
        </trans-unit>
        <trans-unit id="39dffad4b26fe77aef729449dbd757ed61bcfd3a" translate="yes" xml:space="preserve">
          <source>DB_File tests failing on Tru64</source>
          <target state="translated">DB_File测试在Tru64上失败</target>
        </trans-unit>
        <trans-unit id="70c0dec73cd04aa605d8521bd81cda83ad9852d0" translate="yes" xml:space="preserve">
          <source>DB_HASH</source>
          <target state="translated">DB_HASH</target>
        </trans-unit>
        <trans-unit id="a90a8db476a6644718df5c14fa00dae64a074e16" translate="yes" xml:space="preserve">
          <source>DB_RECNO</source>
          <target state="translated">DB_RECNO</target>
        </trans-unit>
        <trans-unit id="1214b29ce37cdd875514a6b9e684feaa105d5701" translate="yes" xml:space="preserve">
          <source>DB_RECNO allows both fixed-length and variable-length flat text files to be manipulated using the same key/value pair interface as in DB_HASH and DB_BTREE. In this case the key will consist of a record (line) number.</source>
          <target state="translated">DB_RECNO允许使用与DB_HASH和DB_BTREE中相同的键/值对接口来操作固定长度和可变长度的平面文本文件。在这种情况下,键将由一个记录(行)号组成。</target>
        </trans-unit>
        <trans-unit id="54300d66c5de040df830a07fcc62363319edc6b3" translate="yes" xml:space="preserve">
          <source>DB_RECNO provides an interface to flat text files. Both variable and fixed length records are supported.</source>
          <target state="translated">DB_RECNO提供了一个平面文本文件的接口。同时支持可变和固定长度的记录。</target>
        </trans-unit>
        <trans-unit id="c84dd33284289aa30abfb4901524e660dc3f8fe1" translate="yes" xml:space="preserve">
          <source>DCL$PATH</source>
          <target state="translated">DCL$PATH</target>
        </trans-unit>
        <trans-unit id="0a9147164ebeee67def0458db65d380af3d847bd" translate="yes" xml:space="preserve">
          <source>DDD over gdb</source>
          <target state="translated">DDD over gdb</target>
        </trans-unit>
        <trans-unit id="bc02c571c975735551b89853409b435a7d2a911b" translate="yes" xml:space="preserve">
          <source>DEBUGGING</source>
          <target state="translated">DEBUGGING</target>
        </trans-unit>
        <trans-unit id="e5ed518114c601867e2002411abd0ab6c5204b58" translate="yes" xml:space="preserve">
          <source>DECIMAL PLACES IN NUMBER FORMATTING</source>
          <target state="translated">数字格式中的小数位。</target>
        </trans-unit>
        <trans-unit id="a13b287cbf68e2d072abe367ec3597bf2a1719da" translate="yes" xml:space="preserve">
          <source>DECLARATION_FOR_LC_NUMERIC_MANIPULATION</source>
          <target state="translated">DECLARATION_FOR_LC_NUMERIC_MANIPULATION</target>
        </trans-unit>
        <trans-unit id="5724e2ad6fe494700810dd95224d82adbc1f0212" translate="yes" xml:space="preserve">
          <source>DECLARING VERSIONS</source>
          <target state="translated">声明版本</target>
        </trans-unit>
        <trans-unit id="358d58239d98fa4218521cbacf3de57cd95c2f96" translate="yes" xml:space="preserve">
          <source>DEEP EVENT INTERCEPTION</source>
          <target state="translated">深度事件介入</target>
        </trans-unit>
        <trans-unit id="81f6de8d5c0ecb34b6b96adc9154a88c9ddbeca9" translate="yes" xml:space="preserve">
          <source>DEFAULT_TYPE</source>
          <target state="translated">DEFAULT_TYPE</target>
        </trans-unit>
        <trans-unit id="1a29c0a9e5d031b1085dd3a49cebd323e159b0e8" translate="yes" xml:space="preserve">
          <source>DEFINE</source>
          <target state="translated">DEFINE</target>
        </trans-unit>
        <trans-unit id="72e25783db89a734a8c44381188ac1bdfc0af08b" translate="yes" xml:space="preserve">
          <source>DEFINE_VERSION: -D line to set the module version when compiling</source>
          <target state="translated">DEFINE_VERSION:-D行,用于在编译时设置模块版本。</target>
        </trans-unit>
        <trans-unit id="fb047f1c6b1e76a02beec100d3b58403874139af" translate="yes" xml:space="preserve">
          <source>DEFINITIONS</source>
          <target state="translated">DEFINITIONS</target>
        </trans-unit>
        <trans-unit id="141ddc055875204119c8e805b6fc66def02e7928" translate="yes" xml:space="preserve">
          <source>DEFSV</source>
          <target state="translated">DEFSV</target>
        </trans-unit>
        <trans-unit id="3cc8567954f6ca3e5e003d24429635955d1d02f9" translate="yes" xml:space="preserve">
          <source>DEFUNCT</source>
          <target state="translated">DEFUNCT</target>
        </trans-unit>
        <trans-unit id="bc2641a83f190fb20fd0dea288e56be69c367a3f" translate="yes" xml:space="preserve">
          <source>DELETE this, key</source>
          <target state="translated">DELETE this,key</target>
        </trans-unit>
        <trans-unit id="83e39656dc7ac7175a510ee6558f6f575c96339a" translate="yes" xml:space="preserve">
          <source>DEPRECATED</source>
          <target state="translated">DEPRECATED</target>
        </trans-unit>
        <trans-unit id="e89c118ad5daaa7474bf247f474ec247a9347c0f" translate="yes" xml:space="preserve">
          <source>DEPRECATED FIELDS</source>
          <target state="translated">废弃的场地</target>
        </trans-unit>
        <trans-unit id="843aca6679538132ccb07a5bbb4015eab41705b8" translate="yes" xml:space="preserve">
          <source>DEPRECATED SETTER</source>
          <target state="translated">去掉的设置器</target>
        </trans-unit>
        <trans-unit id="e0dc4b2a8e17072634cdeee1910633cab2fa2010" translate="yes" xml:space="preserve">
          <source>DEPRECATED! It is planned to remove this function from a future release of Perl. Do not use it for new code; remove it from existing code.</source>
          <target state="translated">已取消! 计划在未来的Perl版本中删除这个函数。不要在新代码中使用它,请从现有代码中删除。</target>
        </trans-unit>
        <trans-unit id="a157b2a5a436f4b25182b22c822a40b087fde127" translate="yes" xml:space="preserve">
          <source>DEPRECATED!!!</source>
          <target state="translated">DEPRECATED!!!</target>
        </trans-unit>
        <trans-unit id="115aa5137a9a892800a38fc4d9843ec7fec593bb" translate="yes" xml:space="preserve">
          <source>DEPTH</source>
          <target state="translated">DEPTH</target>
        </trans-unit>
        <trans-unit id="0ceecbea9d37250860e1b3086c61f32787e7e837" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">DESCRIPTION</target>
        </trans-unit>
        <trans-unit id="482cfbb4d161895b916cfe86448be09cf453b56c" translate="yes" xml:space="preserve">
          <source>DESERIALISATION</source>
          <target state="translated">DESERIALISATION</target>
        </trans-unit>
        <trans-unit id="8d2fccfa70475aefbaa7a6f81f980ffa768ff6fa" translate="yes" xml:space="preserve">
          <source>DESIGN</source>
          <target state="translated">DESIGN</target>
        </trans-unit>
        <trans-unit id="e7e49a1a7cfc18f44f90aaf5e4c176c2211c9f16" translate="yes" xml:space="preserve">
          <source>DESIGNING AND WRITING YOUR MODULE</source>
          <target state="translated">设计和编写您的模块</target>
        </trans-unit>
        <trans-unit id="96f5f4aededb8b0c79d31ac8d55739d3fc116c52" translate="yes" xml:space="preserve">
          <source>DESTDIR</source>
          <target state="translated">DESTDIR</target>
        </trans-unit>
        <trans-unit id="02f56a7bf01c1a870e819952336349625f50e2b7" translate="yes" xml:space="preserve">
          <source>DESTROY</source>
          <target state="translated">DESTROY</target>
        </trans-unit>
        <trans-unit id="ba5ed7d43143f7f29b35bcc06e0ce24bc7a75fec" translate="yes" xml:space="preserve">
          <source>DESTROY created new reference to dead object '%s'</source>
          <target state="translated">DESTROY创建了对死对象'%s'的新引用。</target>
        </trans-unit>
        <trans-unit id="1ff5c6565199863ac272c46910743a376de19a9a" translate="yes" xml:space="preserve">
          <source>DESTROY this</source>
          <target state="translated">毁掉这个</target>
        </trans-unit>
        <trans-unit id="1adeca5b77bafcb12821be20b10405718f410b83" translate="yes" xml:space="preserve">
          <source>DESTRUCT</source>
          <target state="translated">DESTRUCT</target>
        </trans-unit>
        <trans-unit id="9120423983b0359c503c676dadecd6bf8702131f" translate="yes" xml:space="preserve">
          <source>DETAILS</source>
          <target state="translated">DETAILS</target>
        </trans-unit>
        <trans-unit id="f459e7c8f3245e0293226ce8877ab5f73ac59297" translate="yes" xml:space="preserve">
          <source>DG/&lt;code&gt;UX&lt;/code&gt;</source>
          <target state="translated">DG/&lt;code&gt;UX&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7563ce76d34297c6913b33a614a4437ccf7e6bb6" translate="yes" xml:space="preserve">
          <source>DIAGNOSTICS</source>
          <target state="translated">DIAGNOSTICS</target>
        </trans-unit>
        <trans-unit id="a5b9d804ae5fad3a77218682ff16189121bf6f54" translate="yes" xml:space="preserve">
          <source>DIR</source>
          <target state="translated">DIR</target>
        </trans-unit>
        <trans-unit id="d30f022e513ee2c57f70b560d5f72ef8e01c02c2" translate="yes" xml:space="preserve">
          <source>DIRECTORY may contain Unicode characters outside the system codepage. Once the directory has been created you can use Win32::GetANSIPathName() to get a name that can be passed to system calls and external programs.</source>
          <target state="translated">DIRECTORY可以包含系统代码页之外的Unicode字符。一旦目录被创建,你可以使用Win32::GetANSIPathName()来获得一个可以传递给系统调用和外部程序的名称。</target>
        </trans-unit>
        <trans-unit id="d963cb7accdf8bf2d3b0fee27a68f112e7214125" translate="yes" xml:space="preserve">
          <source>DISABLING IT</source>
          <target state="translated">禁用它</target>
        </trans-unit>
        <trans-unit id="4a65cdb95e95be516de50c8b8315a8164bd86d99" translate="yes" xml:space="preserve">
          <source>DISCOURAGED</source>
          <target state="translated">DISCOURAGED</target>
        </trans-unit>
        <trans-unit id="0cdc39cb56481d72aa568a84bea6c810de4cbfcf" translate="yes" xml:space="preserve">
          <source>DISCOURAGED HUB RELATED FIELDS</source>
          <target state="translated">沮丧的枢纽相关领域。</target>
        </trans-unit>
        <trans-unit id="13c3fe3ccbbec70a886eeec7ac7440dbb52d9f65" translate="yes" xml:space="preserve">
          <source>DISK_LOGGING_BINNING</source>
          <target state="translated">DISK_LOGGING_BINNING</target>
        </trans-unit>
        <trans-unit id="7a157185b184f1b227940b739033d65ef1f54cf4" translate="yes" xml:space="preserve">
          <source>DISK_LOGGING_DUMP</source>
          <target state="translated">DISK_LOGGING_DUMP</target>
        </trans-unit>
        <trans-unit id="e43b520692501f2766a76771617e6715d9cada70" translate="yes" xml:space="preserve">
          <source>DISK_LOGGING_START</source>
          <target state="translated">DISK_LOGGING_START</target>
        </trans-unit>
        <trans-unit id="8d19e9f6a0ca4f1a2ef5075a1546d0ab644f90bb" translate="yes" xml:space="preserve">
          <source>DISK_LOGGING_STOP</source>
          <target state="translated">DISK_LOGGING_STOP</target>
        </trans-unit>
        <trans-unit id="d61aaf2b8c8a0d55b1cee7b943d2035b67af0d4d" translate="yes" xml:space="preserve">
          <source>DISPLAYING</source>
          <target state="translated">DISPLAYING</target>
        </trans-unit>
        <trans-unit id="b002d7dc5791b5f7d3653bb259ad5fa45517956f" translate="yes" xml:space="preserve">
          <source>DISTNAME</source>
          <target state="translated">DISTNAME</target>
        </trans-unit>
        <trans-unit id="8ab64362e89ef843d26689df9812bdd13670995f" translate="yes" xml:space="preserve">
          <source>DISTRIBUTIONS THAT BREAK OR NEED TO BE UPGRADED</source>
          <target state="translated">损坏或需要升级的发行物。</target>
        </trans-unit>
        <trans-unit id="8a32fb235d338277900548bd5f6b17adb9b20f4f" translate="yes" xml:space="preserve">
          <source>DISTVNAME</source>
          <target state="translated">DISTVNAME</target>
        </trans-unit>
        <trans-unit id="d60841c8292d01cba89dff01641abdeaf831a7a7" translate="yes" xml:space="preserve">
          <source>DJGPP</source>
          <target state="translated">DJGPP</target>
        </trans-unit>
        <trans-unit id="7f70d69b899f50f51b56a174e2446671d41836a8" translate="yes" xml:space="preserve">
          <source>DJGPP is a port of GNU C/C++ compiler and development tools to 32-bit, protected-mode environment on Intel 32-bit CPUs running MS-DOS and compatible operating systems, by DJ Delorie &amp;lt;dj@delorie.com&amp;gt; and friends.</source>
          <target state="translated">DJGPP是DJ Delorie &amp;lt;dj@delorie.com&amp;gt;和朋友们向GNU C / C ++编译器和开发工具移植到运行MS-DOS和兼容操作系统的Intel 32位CPU上的32位保护模式环境的端口。</target>
        </trans-unit>
        <trans-unit id="a86cad8e45e49bf55ca8b0433d5c8c99cb119b2a" translate="yes" xml:space="preserve">
          <source>DLBASE</source>
          <target state="translated">DLBASE</target>
        </trans-unit>
        <trans-unit id="642afab1b1fcbae1610092fbaf72f88d297127c7" translate="yes" xml:space="preserve">
          <source>DLEXT</source>
          <target state="translated">DLEXT</target>
        </trans-unit>
        <trans-unit id="c7fcac2a520878c5b29e5384d7123ef0d8af803b" translate="yes" xml:space="preserve">
          <source>DLL forwarder generation</source>
          <target state="translated">DLL转发器的生成</target>
        </trans-unit>
        <trans-unit id="961816e97938085c744d70524c7f8b51961bbf33" translate="yes" xml:space="preserve">
          <source>DLL is loaded when</source>
          <target state="translated">DLL加载时</target>
        </trans-unit>
        <trans-unit id="b8fba0e1a3b69795fd7aeeb5df67e417334bbc08" translate="yes" xml:space="preserve">
          <source>DLL name mangling: 5.6.2 and beyond</source>
          <target state="translated">DLL名称混乱。5.6.2及以后</target>
        </trans-unit>
        <trans-unit id="5103efb394e8f4c78963cefb65d442857e85fbb9" translate="yes" xml:space="preserve">
          <source>DLL name mangling: pre 5.6.2</source>
          <target state="translated">DLL名称混乱:5.6.2之前。</target>
        </trans-unit>
        <trans-unit id="4199b473b62a8d487f588ef5f17c8e1e79fdfedc" translate="yes" xml:space="preserve">
          <source>DLLs in the system to be available</source>
          <target state="translated">系统中的DLL可用</target>
        </trans-unit>
        <trans-unit id="978758ab9cc6f96cf7ec21b1d65444522ce20560" translate="yes" xml:space="preserve">
          <source>DLLs was done due to misunderstanding of the OS/2 dynaloading model. OS/2 (effectively) maintains two different tables of loaded DLL:</source>
          <target state="translated">DLLs是由于对OS/2 dynaloading模型的误解。OS/2(有效地)维护了两个不同的加载DLL表。</target>
        </trans-unit>
        <trans-unit id="d29ac676a5bbf39131fc0934d6dded7512d8a28a" translate="yes" xml:space="preserve">
          <source>DL_FUNCS</source>
          <target state="translated">DL_FUNCS</target>
        </trans-unit>
        <trans-unit id="3fb25c876e55ff6368868869480f86c888666251" translate="yes" xml:space="preserve">
          <source>DL_VARS</source>
          <target state="translated">DL_VARS</target>
        </trans-unit>
        <trans-unit id="e72095491ba9a045230bfe18eae0af9d9f28e15a" translate="yes" xml:space="preserve">
          <source>DO NOT MIX MULTIPLE ENCODINGS</source>
          <target state="translated">请勿混合使用多种香料。</target>
        </trans-unit>
        <trans-unit id="321641aef17a94c7440c8b75a28914642814b302" translate="yes" xml:space="preserve">
          <source>DO NOT PUT TOO MANY SUSPECTS! Don't you try something like this!</source>
          <target state="translated">不要把太多的嫌疑人! 你不要尝试这样的东西!</target>
        </trans-unit>
        <trans-unit id="a4b1f89571502a08857610f6cdeeb35b2b2aaaaf" translate="yes" xml:space="preserve">
          <source>DO NOT USE this pragma in scripts that have multiple &lt;a href=&quot;threads&quot;&gt;threads&lt;/a&gt; active. The locale is not local to a single thread. Another thread may change the locale at any time, which could cause at a minimum that a given thread is operating in a locale it isn't expecting to be in. On some platforms, segfaults can also occur. The locale change need not be explicit; some operations cause perl to change the locale itself. You are vulnerable simply by having done a &lt;code&gt;&quot;use locale&quot;&lt;/code&gt;.</source>
          <target state="translated">不要在具有多个&lt;a href=&quot;threads&quot;&gt;线程&lt;/a&gt;活动的脚本中使用此编译指示。语言环境不是单个线程的本地语言。另一个线程可以随时更改语言环境，这至少可能导致给定线程正在其预期不在的语言环境中运行。在某些平台上，也可能发生段错误。语言环境更改不必是明确的；某些操作会导致perl更改语言环境本身。您仅通过完成 &lt;code&gt;&quot;use locale&quot;&lt;/code&gt; 就容易受到攻击。</target>
        </trans-unit>
        <trans-unit id="b3cd2cb59fe6d99c224725e9d49cb8e5811713a2" translate="yes" xml:space="preserve">
          <source>DOAP</source>
          <target state="translated">DOAP</target>
        </trans-unit>
        <trans-unit id="96cc00d75846a718bd722cef8a33a50a6d0f5535" translate="yes" xml:space="preserve">
          <source>DOCUMENTATION</source>
          <target state="translated">DOCUMENTATION</target>
        </trans-unit>
        <trans-unit id="6ec3afab8faec77e185bbb803869543c5a657284" translate="yes" xml:space="preserve">
          <source>DOCUMENTING YOUR MODULE</source>
          <target state="translated">记录您的模块</target>
        </trans-unit>
        <trans-unit id="02f41a445016e470834af06602c2bcd22847dea6" translate="yes" xml:space="preserve">
          <source>DOES</source>
          <target state="translated">DOES</target>
        </trans-unit>
        <trans-unit id="2b9d46deee31dec2356e6ea780da6061ac78b5eb" translate="yes" xml:space="preserve">
          <source>DOES($role)</source>
          <target state="translated">DOES($role)</target>
        </trans-unit>
        <trans-unit id="1f704c5a746c1169e4ea5016bf3a119ea03e6184" translate="yes" xml:space="preserve">
          <source>DOS also treats several filenames as special, such as</source>
          <target state="translated">DOS还将几个文件名视为特殊的,如</target>
        </trans-unit>
        <trans-unit id="2613d94608f3128686c4d00e8f6984910962bf29" translate="yes" xml:space="preserve">
          <source>DOS also treats several filenames as special, such as AUX, PRN, NUL, CON, COM1, LPT1, LPT2, etc. Unfortunately, sometimes these filenames won't even work if you include an explicit directory prefix. It is best to avoid such filenames, if you want your code to be portable to DOS and its derivatives. It's hard to know what these all are, unfortunately.</source>
          <target state="translated">DOS还将几个文件名视为特殊文件名,如AUX、PRN、NUL、CON、COM1、LPT1、LPT2等。不幸的是,有时这些文件名甚至不能工作,如果你包含一个明确的目录前缀。如果你想让你的代码可以移植到DOS及其派生版本中,最好避免使用这些文件名。不幸的是,很难知道这些都是什么。</target>
        </trans-unit>
        <trans-unit id="5340493a66303fc8d8a5c954e9bf8a43cd32f247" translate="yes" xml:space="preserve">
          <source>DOS and Derivatives</source>
          <target state="translated">DOS和衍生品</target>
        </trans-unit>
        <trans-unit id="9aa2dc24c805c53edba7676333ae68552dfd57a4" translate="yes" xml:space="preserve">
          <source>DOS like globbing and then some</source>
          <target state="translated">像DOS的globbing和一些</target>
        </trans-unit>
        <trans-unit id="7d8fd5f2c8edcce479637c27bb0e3ab518146c38" translate="yes" xml:space="preserve">
          <source>DOS specific subclass of ExtUtils::MM_Unix</source>
          <target state="translated">ExtUtils::MM_Unix的DOS子类。</target>
        </trans-unit>
        <trans-unit id="473d3acc2af8ba63261a26a1b7f5515a6891c343" translate="yes" xml:space="preserve">
          <source>DOS, OS/2, VMS, VOS, and Windows can work similarly to Unix with &lt;code&gt;/&lt;/code&gt; as path separator, or in their own idiosyncratic ways (such as having several root directories and various &quot;unrooted&quot; device files such NIL: and LPT:).</source>
          <target state="translated">DOS，OS / 2，VMS，VOS和Windows可以使用 &lt;code&gt;/&lt;/code&gt; 作为路径分隔符，或者以它们自己特有的方式（例如，具有多个根目录和各种&amp;ldquo;无根&amp;rdquo;设备文件，例如NIL：和LPT :）与Unix类似地工作。。</target>
        </trans-unit>
        <trans-unit id="f0c20586de860bc6f97df2e7ba37087e1172c10b" translate="yes" xml:space="preserve">
          <source>DO_UTF8</source>
          <target state="translated">DO_UTF8</target>
        </trans-unit>
        <trans-unit id="654efd9c9792936a130d6037516309b5bdddee38" translate="yes" xml:space="preserve">
          <source>DPMI is required for RSX.</source>
          <target state="translated">RSX需要DPMI。</target>
        </trans-unit>
        <trans-unit id="d06236ed2033a3b093acb45fc3a436ea6c180ce2" translate="yes" xml:space="preserve">
          <source>DSM 5</source>
          <target state="translated">DSM 5</target>
        </trans-unit>
        <trans-unit id="f98d27ba9b72edfc43798d7f1ed78687b2e3af30" translate="yes" xml:space="preserve">
          <source>DSM 6</source>
          <target state="translated">DSM 6</target>
        </trans-unit>
        <trans-unit id="53950eb900f2f4e44642ec5b04b999f300de3b20" translate="yes" xml:space="preserve">
          <source>DTrace Dynamic Tracing Guide</source>
          <target state="translated">DTrace动态跟踪指南</target>
        </trans-unit>
        <trans-unit id="2d2a24951ce705488575783be4472a26b333751c" translate="yes" xml:space="preserve">
          <source>DTrace is a framework for comprehensive system- and application-level tracing. Perl is a DTrace</source>
          <target state="translated">DTrace 是一个全面的系统级和应用级追踪框架。Perl 是一个 DTrace</target>
        </trans-unit>
        <trans-unit id="e40b5856dd8c24e8d723e8c4ea9c52cd2cd87d71" translate="yes" xml:space="preserve">
          <source>DTrace: Dynamic Tracing in Oracle Solaris, Mac OS X and FreeBSD</source>
          <target state="translated">DTrace:在Oracle Solaris、Mac OS X和FreeBSD中的动态跟踪。</target>
        </trans-unit>
        <trans-unit id="12c551f6b7505c3f3f92e74cd439cab122c22195" translate="yes" xml:space="preserve">
          <source>DUMB</source>
          <target state="translated">DUMB</target>
        </trans-unit>
        <trans-unit id="fac3a6812b938bfbdd2af221e2fba7ec856f466e" translate="yes" xml:space="preserve">
          <source>DUMP</source>
          <target state="translated">DUMP</target>
        </trans-unit>
        <trans-unit id="5dd03edb023c569611455b32eb75df8f09dbeaae" translate="yes" xml:space="preserve">
          <source>DUMP_PRE_OPTIMIZE</source>
          <target state="translated">DUMP_PRE_OPTIMIZE</target>
        </trans-unit>
        <trans-unit id="d5bf3f40de5d663351b116d65dea7bcc046dcb12" translate="yes" xml:space="preserve">
          <source>DWIM is an acronym for &amp;ldquo;Do What I Mean&amp;rdquo;, the principle that something should just do what you want it to do without an undue amount of fuss. A bit of code that does &amp;ldquo;dwimming&amp;rdquo; is a &amp;ldquo;dwimmer&amp;rdquo;. Dwimming can require a great deal of behind-the-scenes magic, which (if it doesn&amp;rsquo;t stay properly behind the scenes) is called a &lt;b&gt;dweomer&lt;/b&gt; instead.</source>
          <target state="translated">DWIM是&amp;ldquo;按我的意思做&amp;rdquo;的首字母缩略词，即某事应该按自己想要的去做而不会引起过多麻烦的原则。进行&amp;ldquo;微调&amp;rdquo;的一些代码就是&amp;ldquo;微调&amp;rdquo;。游泳可能需要大量的幕后魔术，而如果没有适当的幕后魔术，则称为&lt;b&gt;dweomer&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="6a4756a7fe215f542af5cbd20be5f1fc81af3aae" translate="yes" xml:space="preserve">
          <source>Dagfinn Ilmari Manns&amp;aring;ker &amp;lt;ilmari@ilmari.org&amp;gt;</source>
          <target state="translated">达格芬&amp;middot;伊尔马里&amp;middot;曼纳克（Dagfinn IlmariManns&amp;aring;ker）&amp;lt;ilmari@ilmari.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="85028126eeeaacb6fe3db27b148fabc61b38f172" translate="yes" xml:space="preserve">
          <source>Damian Conway</source>
          <target state="translated">Damian Conway</target>
        </trans-unit>
        <trans-unit id="84aeaa4ed1041b265c8434cc722f5bbd7d82bf67" translate="yes" xml:space="preserve">
          <source>Damian Conway (damian@conway.org)</source>
          <target state="translated">Damian Conway (damian@conway.org)</target>
        </trans-unit>
        <trans-unit id="56a7a2a736c65870e75794d64c28905d7b7353ac" translate="yes" xml:space="preserve">
          <source>Damian Conway (damian@conway.org). The maintainer of this module is now Rafael Garcia-Suarez (rgarciasuarez@gmail.com).</source>
          <target state="translated">Damian Conway (damian@conway.org)。该模块的维护者现在是Rafael Garcia-Suarez (rgarciasuarez@gmail.com)。</target>
        </trans-unit>
        <trans-unit id="7337fc3e62786bae0521c6629b00762523ec38bf" translate="yes" xml:space="preserve">
          <source>Damian Conway's &lt;a href=&quot;Text::Autoformat&quot;&gt;Text::Autoformat&lt;/a&gt; handles all of the thinking for you.</source>
          <target state="translated">达米安&amp;middot;康威（Damian Conway）的&lt;a href=&quot;Text::Autoformat&quot;&gt;Text :: Autoformat&lt;/a&gt;为您解决了所有问题。</target>
        </trans-unit>
        <trans-unit id="d1f605e1f77b8db2ab180142323e96f99783331d" translate="yes" xml:space="preserve">
          <source>Damian Conway's &lt;a href=&quot;http://search.cpan.org/perldoc/Text::Autoformat&quot;&gt;Text::Autoformat&lt;/a&gt; handles all of the thinking for you.</source>
          <target state="translated">达米安&amp;middot;康威（Damian Conway）的&lt;a href=&quot;http://search.cpan.org/perldoc/Text::Autoformat&quot;&gt;Text :: Autoformat&lt;/a&gt;为您处理所有想法。</target>
        </trans-unit>
        <trans-unit id="013100b61f75e2c83db9a81cfe4c655763dd9678" translate="yes" xml:space="preserve">
          <source>Damyan Ivanov &amp;lt;dam@cpan.org&amp;gt;</source>
          <target state="translated">达米扬&amp;middot;伊万诺夫（Damyan Ivanov）&amp;lt;dam@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="1b7acd7262a4bf00ef59ebb0ab8de0bdf3f6774a" translate="yes" xml:space="preserve">
          <source>Dan Sugalski &amp;lt;dan@sidhe.org&amp;gt;</source>
          <target state="translated">丹&amp;middot;苏加尔斯基&amp;lt;dan@sidhe.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="2db3f6d7414ff15624d9a6080d6aa063705cba8a" translate="yes" xml:space="preserve">
          <source>Dan Sugalski &amp;lt;dan@sidhe.org&amp;lt;gt&amp;gt;</source>
          <target state="translated">丹&amp;middot;苏加尔斯基&amp;lt;dan@sidhe.org &amp;lt;&amp;gt;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="e2aa4c3feca95cf46384d3bae7d9121f26ade970" translate="yes" xml:space="preserve">
          <source>Dancer2</source>
          <target state="translated">Dancer2</target>
        </trans-unit>
        <trans-unit id="f5fbfc9cec6cd72e230b1bbe73cbb08d9ccf37da" translate="yes" xml:space="preserve">
          <source>Daniel S. Lewart &amp;lt;</source>
          <target state="translated">丹尼尔&amp;middot;勒沃特&amp;lt;</target>
        </trans-unit>
        <trans-unit id="7fd1dfde23d6a5c5d15d0aee8437a3fd73417fd6" translate="yes" xml:space="preserve">
          <source>Daniel S. Sterling has written a script that uses &lt;code&gt;IO::Uncompress::UnZip&lt;/code&gt; to read a zip file and unzip its contents to disk.</source>
          <target state="translated">Daniel S. Sterling已编写了一个脚本，该脚本使用 &lt;code&gt;IO::Uncompress::UnZip&lt;/code&gt; 读取zip文件并将其内容解压缩到磁盘。</target>
        </trans-unit>
        <trans-unit id="8ed6fbf94844a47ecf83411b63cf050c8d28ac5b" translate="yes" xml:space="preserve">
          <source>Data Structures</source>
          <target state="translated">数据结构</target>
        </trans-unit>
        <trans-unit id="5cf272d33425f40ddbde3e44d761e3fc7c061ec7" translate="yes" xml:space="preserve">
          <source>Data Types and Data Type Utilities</source>
          <target state="translated">数据类型和数据类型实用程序</target>
        </trans-unit>
        <trans-unit id="6a99f8e09e7fe8334e0578359f60485516d4d7ce" translate="yes" xml:space="preserve">
          <source>Data after the &lt;code&gt;__DATA__&lt;/code&gt; token in a module is read using the FOOBAR::DATA filehandle. &lt;code&gt;__END__&lt;/code&gt; can still be used to denote the end of the &lt;code&gt;__DATA__&lt;/code&gt; section if followed by the token DATA - this is supported by the &lt;b&gt;SelfLoader&lt;/b&gt;. The &lt;code&gt;FOOBAR::DATA&lt;/code&gt; filehandle is left open if an &lt;code&gt;__END__&lt;/code&gt; followed by a DATA is found, with the filehandle positioned at the start of the line after the &lt;code&gt;__END__&lt;/code&gt; token. If no &lt;code&gt;__END__&lt;/code&gt; token is present, or an &lt;code&gt;__END__&lt;/code&gt; token with no DATA token on the same line, then the filehandle is closed.</source>
          <target state="translated">使用FOOBAR :: DATA文件句柄读取模块中 &lt;code&gt;__DATA__&lt;/code&gt; 令牌之后的数据。 &lt;code&gt;__END__&lt;/code&gt; 仍可用于表示 &lt;code&gt;__DATA__&lt;/code&gt; 节的末尾（如果其后跟令牌DATA）&lt;b&gt;-SelfLoader&lt;/b&gt;支持。该 &lt;code&gt;FOOBAR::DATA&lt;/code&gt; 如果文件句柄是开放 &lt;code&gt;__END__&lt;/code&gt; 接着通过数据发现，与位于后线的起点文件句柄 &lt;code&gt;__END__&lt;/code&gt; 令牌。如果不存在 &lt;code&gt;__END__&lt;/code&gt; 令牌，或者同一行中没有DATA令牌的 &lt;code&gt;__END__&lt;/code&gt; 令牌，则关闭文件句柄。</target>
        </trans-unit>
        <trans-unit id="b652ad0a603cd7b47d334614ee31233474c9ab8d" translate="yes" xml:space="preserve">
          <source>Data flows through filters in the same order they appear in the source file. The uudecode filter appeared before the uncompress filter, so the source file will be uudecoded before it's uncompressed.</source>
          <target state="translated">数据流经过滤器的顺序与它们在源文件中出现的顺序相同。uudecode过滤器出现在解压过滤器之前,所以源文件将在解压之前进行uudecode。</target>
        </trans-unit>
        <trans-unit id="0f54a276a0206593cde1683f28ef51b63c547eda" translate="yes" xml:space="preserve">
          <source>Data mode (the default if you redirect or pipe output). This prints out your configuration data, without mailing anything. You can use this with &lt;b&gt;-v&lt;/b&gt; to get more complete data.</source>
          <target state="translated">数据模式（如果您重定向或管道输出，则为默认模式）。这将打印出您的配置数据，而不发送任何邮件。您可以将其与&lt;b&gt;-v&lt;/b&gt;一起使用以获取更完整的数据。</target>
        </trans-unit>
        <trans-unit id="2d557701bc641745c6623ac4f8b0ca555597b2b1" translate="yes" xml:space="preserve">
          <source>Data mode (the default if you redirect or pipe output). This prints out your configuration data, without saving or mailing anything. You can use this with &lt;b&gt;-v&lt;/b&gt; to get more complete data.</source>
          <target state="translated">数据模式（如果您重定向或管道输出，则为默认模式）。这将打印出您的配置数据，而无需保存或发送任何邮件。您可以将其与&lt;b&gt;-v&lt;/b&gt;一起使用以获取更完整的数据。</target>
        </trans-unit>
        <trans-unit id="e6afd37625bc0367f512a035f9204374b0b5ded2" translate="yes" xml:space="preserve">
          <source>Data paragraphs are typically used for inlining non-Pod data that is to be used (typically passed through) when rendering the document to a specific format:</source>
          <target state="translated">数据段通常用于内联非Pod数据,这些数据要在将文档渲染成特定格式时使用(通常是通过)。</target>
        </trans-unit>
        <trans-unit id="94e20e5cd2604e57e9a0d23f02d2cd5d929f4af9" translate="yes" xml:space="preserve">
          <source>Data written to this layer should be UTF-8 encoded; data provided by this layer should be considered UTF-8 encoded. Can be set on any layer by &quot;:utf8&quot; dummy layer. Also set on &quot;:encoding&quot; layer.</source>
          <target state="translated">写入本层的数据应采用UTF-8编码;本层提供的数据应视为UTF-8编码。可以通过&quot;:utf8 &quot;虚层在任何一层上设置。也可以在&quot;:encoding &quot;层上设置。</target>
        </trans-unit>
        <trans-unit id="97f1bb92da1e5e7c46dc020b7ec63efc045c0a68" translate="yes" xml:space="preserve">
          <source>Data: Arrays</source>
          <target state="translated">日期:数组</target>
        </trans-unit>
        <trans-unit id="de5afcac5fbd23280f46d7161af449533e2cceda" translate="yes" xml:space="preserve">
          <source>Data: Dates</source>
          <target state="translated">日期:日期</target>
        </trans-unit>
        <trans-unit id="c411e3f24a5ba1334882780f16f3e9dbf1c659d9" translate="yes" xml:space="preserve">
          <source>Data: Hashes (Associative Arrays)</source>
          <target state="translated">数据。哈希值(关联数组)</target>
        </trans-unit>
        <trans-unit id="fa7113830ed5a59d6505a9385c9ea0bd8127836a" translate="yes" xml:space="preserve">
          <source>Data: Misc</source>
          <target state="translated">日期:Misc</target>
        </trans-unit>
        <trans-unit id="3e48ca0ae51772567ede6f2a3afe45cb0267ef60" translate="yes" xml:space="preserve">
          <source>Data: Numbers</source>
          <target state="translated">日期:数字</target>
        </trans-unit>
        <trans-unit id="58c8a967dc7612bd6e8f1483414d85eb62228a36" translate="yes" xml:space="preserve">
          <source>Data: Strings</source>
          <target state="translated">日期:字符串</target>
        </trans-unit>
        <trans-unit id="7d6e21c84e9451a0cec29192edeff8e21b85f25a" translate="yes" xml:space="preserve">
          <source>Data::Dumper</source>
          <target state="translated">Data::Dumper</target>
        </trans-unit>
        <trans-unit id="8c7c47d5705e647c7c4327d92117a5533391f0d0" translate="yes" xml:space="preserve">
          <source>Data::Dumper - stringified perl data structures, suitable for both printing and &lt;code&gt;&lt;a href=&quot;../functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Data :: Dumper-字符串化的perl数据结构，适用于打印和 &lt;code&gt;&lt;a href=&quot;../functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fef9e687e65f5d8221ce7ec7b5d6ce2858366c2e" translate="yes" xml:space="preserve">
          <source>Data::Dumper - stringified perl data structures, suitable for both printing and &lt;code&gt;eval&lt;/code&gt;</source>
          <target state="translated">Data :: Dumper-字符串化的perl数据结构，适用于打印和 &lt;code&gt;eval&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ff7ea8e9cb1cf0ef3310359653bd8d014b4e17b6" translate="yes" xml:space="preserve">
          <source>Data::Dumper doesn't restore the UTF8 flag; is it broken?</source>
          <target state="translated">Data::Dumper不能恢复UTF8标志,是不是坏了?</target>
        </trans-unit>
        <trans-unit id="ab7ab098392e93c21506df2dbe7e96ac2b061b9d" translate="yes" xml:space="preserve">
          <source>Data::Dumper will catalog all references encountered while dumping the values. Cross-references (in the form of names of substructures in perl syntax) will be inserted at all possible points, preserving any structural interdependencies in the original set of values. Structure traversal is depth-first, and proceeds in order from the first supplied value to the last.</source>
          <target state="translated">Data::Dumper 将对转储值时遇到的所有引用进行编目。交叉引用(在perl语法中以子结构名称的形式)将被插入到所有可能的点上,保留原始值集中的任何结构上的相互依赖关系。结构遍历是深度优先的,从第一个提供的值到最后一个值依次进行。</target>
        </trans-unit>
        <trans-unit id="2b8b99c4a4341af8f798f5df6b109d3c17485b41" translate="yes" xml:space="preserve">
          <source>Data::Peek</source>
          <target state="translated">Data::Peek</target>
        </trans-unit>
        <trans-unit id="5db04e397940af8e76d0eac5bf08574521dd22ae" translate="yes" xml:space="preserve">
          <source>Database Interfaces</source>
          <target state="translated">数据库接口</target>
        </trans-unit>
        <trans-unit id="a109465d898ba0dfa0c491af35be82208576d8f0" translate="yes" xml:space="preserve">
          <source>Database Ties</source>
          <target state="translated">数据库关系</target>
        </trans-unit>
        <trans-unit id="8562930b64d8c57b6dc3907022c61a4e6a5ac83f" translate="yes" xml:space="preserve">
          <source>Datatypes</source>
          <target state="translated">Datatypes</target>
        </trans-unit>
        <trans-unit id="08bd72896a609a3391d219b4992ef11ec132d222" translate="yes" xml:space="preserve">
          <source>Date Calculations</source>
          <target state="translated">日期计算</target>
        </trans-unit>
        <trans-unit id="b79e7a3976aeb6614f1bdda5b3b2eeb809fac6f4" translate="yes" xml:space="preserve">
          <source>Date Comparisons</source>
          <target state="translated">日期比较</target>
        </trans-unit>
        <trans-unit id="6cd8d0e8ff629adf381174818e2158887210c59a" translate="yes" xml:space="preserve">
          <source>Date Parsing</source>
          <target state="translated">日期解析</target>
        </trans-unit>
        <trans-unit id="27c49fc3479babc6dc4d9bc2dbc4c3a52288b570" translate="yes" xml:space="preserve">
          <source>Date comparisons are also possible, using the full suite of &quot;&amp;lt;&quot;, &quot;&amp;gt;&quot;, &quot;&amp;lt;=&quot;, &quot;&amp;gt;=&quot;, &quot;&amp;lt;=&amp;gt;&quot;, &quot;==&quot; and &quot;!=&quot;.</source>
          <target state="translated">使用完整的&amp;ldquo; &amp;lt;&amp;rdquo;，&amp;ldquo;&amp;gt;&amp;rdquo;，&amp;ldquo; &amp;lt;=&amp;rdquo;，&amp;ldquo;&amp;gt; =&amp;rdquo;，&amp;ldquo; &amp;lt;=&amp;gt;&amp;rdquo;，&amp;ldquo; ==&amp;rdquo;和&amp;ldquo;！=&amp;rdquo;进行日期比较也是可能的。</target>
        </trans-unit>
        <trans-unit id="73df32026317871c53f654bcdabd2dce42632974" translate="yes" xml:space="preserve">
          <source>Dave Rolsky &amp;lt;autarch@urth.org&amp;gt;</source>
          <target state="translated">戴夫&amp;middot;罗尔斯基（Dave Rolsky）&amp;lt;autarch@urth.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="0207ed4e4e6fb701fd9b7e1499e69dd1c82b52ab" translate="yes" xml:space="preserve">
          <source>David Cantrell</source>
          <target state="translated">David Cantrell</target>
        </trans-unit>
        <trans-unit id="07336554dae8f485f2a87eb2879f77cba49891f4" translate="yes" xml:space="preserve">
          <source>David E. Wheeler &lt;code&gt;dwheeler@cpan.org&lt;/code&gt;</source>
          <target state="translated">戴维&amp;middot;惠勒 &lt;code&gt;dwheeler@cpan.org&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="521eee15b4f0c924fd9e4158c46d830c281a9a18" translate="yes" xml:space="preserve">
          <source>David F. Skoll (</source>
          <target state="translated">David F.Skoll (</target>
        </trans-unit>
        <trans-unit id="0474fa39a613bd7eeec7bea46ccb23c0ca12e724" translate="yes" xml:space="preserve">
          <source>David Fiander and Peter Prymmer with thanks to Dennis Longnecker and William Raffloer for valuable reports, LPAR and PTF feedback. Thanks to Mike MacIsaac and Egon Terwedow for SG24-5944-00. Thanks to Ignasi Roca for pointing out the floating point problems. Thanks to John Goodyear for dynamic loading help.</source>
          <target state="translated">David Fiander和Peter Prymmer感谢Dennis Longnecker和William Raffloer提供的宝贵报告、LPAR和PTF反馈。感谢Mike MacIsaac和Egon Terwedow的SG24-5944-00。感谢Ignasi Roca指出的浮点问题。感谢John Goodyear提供的动态加载帮助。</target>
        </trans-unit>
        <trans-unit id="2723c98cfbb72ae38f478d52e32129d9547f0fba" translate="yes" xml:space="preserve">
          <source>David Golden</source>
          <target state="translated">大卫-戈登</target>
        </trans-unit>
        <trans-unit id="cd5088267e514d749afe6cca6fd8c81585cd5cf6" translate="yes" xml:space="preserve">
          <source>David Golden &amp;lt;dagolden@cpan.org&amp;gt;</source>
          <target state="translated">大卫&amp;middot;金（David Golden）&amp;lt;dagolden@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="deba347e322c03f87dfec124354df66a0d2c5023" translate="yes" xml:space="preserve">
          <source>David Golden &amp;lt;xdg@xdg.me&amp;gt;</source>
          <target state="translated">大卫&amp;middot;金（David Golden）&amp;lt;xdg@xdg.me&amp;gt;</target>
        </trans-unit>
        <trans-unit id="bcb25af33681aa0454630dbbe471750574b7de25" translate="yes" xml:space="preserve">
          <source>David Golden helps integrate this into the &lt;code&gt;CPAN.pm&lt;/code&gt; repos.</source>
          <target state="translated">David Golden帮助将其集成到 &lt;code&gt;CPAN.pm&lt;/code&gt; 仓库中。</target>
        </trans-unit>
        <trans-unit id="d950594e5e25062fc0607cb94f5625028946e5a7" translate="yes" xml:space="preserve">
          <source>David Golden, &amp;lt;dagolden@cpan.org&amp;gt;</source>
          <target state="translated">大卫&amp;middot;金（David Golden），&amp;lt;dagolden@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="75105a96462d4d37f10309058c6953d8e9f6b806" translate="yes" xml:space="preserve">
          <source>David Mitchell &amp;lt;davem@iabyn.com&amp;gt;</source>
          <target state="translated">大卫&amp;middot;米切尔（David Mitchell）&amp;lt;davem@iabyn.com&amp;gt;</target>
        </trans-unit>
        <trans-unit id="8d95407bff3307b97ca4e8eedc2eced84a4438ae" translate="yes" xml:space="preserve">
          <source>David Muir Sharnoff &amp;lt;cpan@dave.sharnoff.org&amp;gt; with help from Tim Pierce and many many others.</source>
          <target state="translated">大卫&amp;middot;缪尔&amp;middot;沙诺夫（David Muir Sharnoff）在蒂姆&amp;middot;皮尔斯（Tim Pierce）等许多人的帮助下，发往&amp;lt;cpan@dave.sharnoff.org&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="e8377f90fb8277814679b9bc2dc6627a930eb98a" translate="yes" xml:space="preserve">
          <source>David P.C. Wollmann, Richard Soderberg, Sean M. Burke, Tom Christiansen, Jim Cromie, and Jeffrey Goff for useful advice.</source>
          <target state="translated">David P.C.Wollmann、Richard Soderberg、Sean M.Burke、Tom Christiansen、Jim Cromie和Jeffrey Goff提供了有用的建议。</target>
        </trans-unit>
        <trans-unit id="6dc50b7e5578cabc8a56c27180f8325d04b836e0" translate="yes" xml:space="preserve">
          <source>David Richter,</source>
          <target state="translated">David Richter,</target>
        </trans-unit>
        <trans-unit id="c7b3466055eaf20f2cad818f5843a292b4ca2d80" translate="yes" xml:space="preserve">
          <source>David Steinbrunner</source>
          <target state="translated">David Steinbrunner</target>
        </trans-unit>
        <trans-unit id="583efca859c6e35e11e70eb4225906fa634078ce" translate="yes" xml:space="preserve">
          <source>David Steinbrunner &amp;lt;dsteinbrunner@pobox.com&amp;gt;</source>
          <target state="translated">戴维&amp;middot;斯坦布伦纳（David Steinbrunner）&amp;lt;dsteinbrunner@pobox.com&amp;gt;</target>
        </trans-unit>
        <trans-unit id="229d59d93e7e712ab429ce8580c0bd67e38e34f6" translate="yes" xml:space="preserve">
          <source>David Sundstrom &amp;lt;</source>
          <target state="translated">戴维&amp;middot;桑德斯特伦&amp;lt;</target>
        </trans-unit>
        <trans-unit id="632c23ecaf6ac85ca778d2377fb7021a54136742" translate="yes" xml:space="preserve">
          <source>David Wheeler</source>
          <target state="translated">David Wheeler</target>
        </trans-unit>
        <trans-unit id="3dbe6b5baed3a5f5d582c4616ad071fd90846cec" translate="yes" xml:space="preserve">
          <source>Dealing with Concatenated bzip2 files</source>
          <target state="translated">处理并列的bzip2文件</target>
        </trans-unit>
        <trans-unit id="f0503142592629f2769705a0fac2de70daef3980" translate="yes" xml:space="preserve">
          <source>Dealing with Endian-ness</source>
          <target state="translated">处理Endian-ness问题</target>
        </trans-unit>
        <trans-unit id="4b07c0c8522cdb2cc72776e062fea6abb7d94c76" translate="yes" xml:space="preserve">
          <source>Dealing with concatenated gzip files</source>
          <target state="translated">处理连载的gzip文件</target>
        </trans-unit>
        <trans-unit id="c3570d3bcf3e90fdaa0791aacca802822c577102" translate="yes" xml:space="preserve">
          <source>Deallocate the memory used by all arenas. Note that all the individual SV heads and bodies within the arenas must already have been freed.</source>
          <target state="translated">重新分配所有场馆使用的内存。请注意,所有场馆内的单个SV头和主体必须已经被释放。</target>
        </trans-unit>
        <trans-unit id="b05ceded49f425c214f9e2db173be8c8e1a3a8d6" translate="yes" xml:space="preserve">
          <source>Deallocates a backtrace received from get_c_bracktrace.</source>
          <target state="translated">重新分配从get_c_bracktrace接收到的反向跟踪。</target>
        </trans-unit>
        <trans-unit id="da8e6981129a80511c8976bfcddbe201d3626924" translate="yes" xml:space="preserve">
          <source>Dean Arnold &amp;lt;darnold AT presicient DOT com&amp;gt; - Stack size API</source>
          <target state="translated">Dean Arnold &amp;lt;darnold AT presicient DOT com&amp;gt;-堆栈大小API</target>
        </trans-unit>
        <trans-unit id="52cae2e43c8b90b4a803a754935d3f9c9fe43ef7" translate="yes" xml:space="preserve">
          <source>Dean Pearce &amp;lt;pearce@pythian.com&amp;gt;</source>
          <target state="translated">迪恩&amp;middot;皮尔斯（Dean Pearce）&amp;lt;pearce@pythian.com&amp;gt;</target>
        </trans-unit>
        <trans-unit id="698676bca323af4b1ac23716a3335d96db984890" translate="yes" xml:space="preserve">
          <source>Debian GNU/kFreeBSD</source>
          <target state="translated">Debian GNU/kFreeBSD</target>
        </trans-unit>
        <trans-unit id="36ea2a10971530d1f3b41de8bb6af5b551a6ff3c" translate="yes" xml:space="preserve">
          <source>Debian GNU/kFreeBSD systems also used LinuxThreads up until and including the 6.0 release, but after that moved to FreeBSD thread semantics, which are POSIX-like.</source>
          <target state="translated">Debian GNU/kFreeBSD系统在6.0版本之前,也一直使用LinuxThreads,但在那之后,转而使用FreeBSD的线程语义,类似POSIX。</target>
        </trans-unit>
        <trans-unit id="bd604d99e75e45d38bc7ac8fc714cde0097d901f" translate="yes" xml:space="preserve">
          <source>Debug</source>
          <target state="translated">Debug</target>
        </trans-unit>
        <trans-unit id="d7013dc1690e39306f211d819fa32173c56252c9" translate="yes" xml:space="preserve">
          <source>Debug Output</source>
          <target state="translated">调试输出</target>
        </trans-unit>
        <trans-unit id="5c4b9e36f90df0c09d1c303314621943c00786a6" translate="yes" xml:space="preserve">
          <source>Debug Viewer</source>
          <target state="translated">调试查看器</target>
        </trans-unit>
        <trans-unit id="b05fb520e7c0513f4478767235e0d3c4b22c35e6" translate="yes" xml:space="preserve">
          <source>Debug a given program using threads (experimental).</source>
          <target state="translated">使用线程调试给定程序(实验性)。</target>
        </trans-unit>
        <trans-unit id="5f7d3acbef3ce732ed02816b2d1048d41d127c3b" translate="yes" xml:space="preserve">
          <source>Debug a given program via the &lt;code&gt;Devel::ptkdb&lt;/code&gt; GUI.</source>
          <target state="translated">通过 &lt;code&gt;Devel::ptkdb&lt;/code&gt; GUI 调试给定程序。</target>
        </trans-unit>
        <trans-unit id="d5dc12bb0a737a0df5cc2f9d5aeb26402fd0d340" translate="yes" xml:space="preserve">
          <source>Debug information for events</source>
          <target state="translated">事件的调试信息</target>
        </trans-unit>
        <trans-unit id="bd4cb2194799882c3c66213892a49639bae1936c" translate="yes" xml:space="preserve">
          <source>Debug subroutine enter/exit.</source>
          <target state="translated">调试子程序enter/exit。</target>
        </trans-unit>
        <trans-unit id="4333709c02ad553298735787840db205447e4bf6" translate="yes" xml:space="preserve">
          <source>Debugger Commands</source>
          <target state="translated">调试器命令</target>
        </trans-unit>
        <trans-unit id="9914c0d0aed65ea8f1d64b044cdff2c3fddecc0d" translate="yes" xml:space="preserve">
          <source>Debugger Customization</source>
          <target state="translated">调试器自定义</target>
        </trans-unit>
        <trans-unit id="99ecabc4479d51c9a08930be819ce0858218cf75" translate="yes" xml:space="preserve">
          <source>Debugger Customization Functions</source>
          <target state="translated">调试器自定义功能</target>
        </trans-unit>
        <trans-unit id="666cf254f85ea5d057a4582c5d8d5fdd8a5b7e41" translate="yes" xml:space="preserve">
          <source>Debugger Input/Output</source>
          <target state="translated">调试器输入/输出</target>
        </trans-unit>
        <trans-unit id="9751ba81f798bbd7760a0c6d24e8d83eb20c30ba" translate="yes" xml:space="preserve">
          <source>Debugger Internal Variables</source>
          <target state="translated">调试器内部变量</target>
        </trans-unit>
        <trans-unit id="d026646d6b3410bc5de0b3ffc654c93e730dbd4e" translate="yes" xml:space="preserve">
          <source>Debugger Internals</source>
          <target state="translated">调试器内部</target>
        </trans-unit>
        <trans-unit id="895b27c88016513d278a0ce3dc0663fae3829d58" translate="yes" xml:space="preserve">
          <source>Debugging</source>
          <target state="translated">Debugging</target>
        </trans-unit>
        <trans-unit id="b77aa217c50f6fe5bfd3f17727cebc255c68a2ca" translate="yes" xml:space="preserve">
          <source>Debugging Compile-Time Statements</source>
          <target state="translated">调试编译时的语句</target>
        </trans-unit>
        <trans-unit id="56a3daa806e9216f2f247d92a9789167d765ab05" translate="yes" xml:space="preserve">
          <source>Debugging Memory Usage</source>
          <target state="translated">调试内存使用情况</target>
        </trans-unit>
        <trans-unit id="7f9818adf8fc8493412c933de791d9f5c9b959e2" translate="yes" xml:space="preserve">
          <source>Debugging Perl Memory Usage</source>
          <target state="translated">调试Perl的内存使用情况</target>
        </trans-unit>
        <trans-unit id="9e08887136b7961fe7c673b82471c4d25acee0d8" translate="yes" xml:space="preserve">
          <source>Debugging Regular Expressions</source>
          <target state="translated">调试正则表达式</target>
        </trans-unit>
        <trans-unit id="a55f46b26d2e609b7ed7dd3dcdfe13f913890ab9" translate="yes" xml:space="preserve">
          <source>Debugging Regular Expressions in perldebug</source>
          <target state="translated">调试perldebug中的正则表达式</target>
        </trans-unit>
        <trans-unit id="b148c2d0cd84634d55a9ffc8e11de74f37399218" translate="yes" xml:space="preserve">
          <source>Debugging Utilities</source>
          <target state="translated">调试工具</target>
        </trans-unit>
        <trans-unit id="ef6d58e6132c9b4c56f459b171bb00fc8fb32f2c" translate="yes" xml:space="preserve">
          <source>Debugging scripts</source>
          <target state="translated">调试脚本</target>
        </trans-unit>
        <trans-unit id="8057c32aee1676af868f8f55325f1ae849dbb6de" translate="yes" xml:space="preserve">
          <source>Debugging this module is more than a bit complex due to interference from the software producing the indices on CPAN, the mirroring process on CPAN, packaging, configuration, synchronicity, and even (gasp!) due to bugs within the CPAN.pm module itself.</source>
          <target state="translated">调试这个模块是比较复杂的,因为有来自CPAN上生成索引的软件、CPAN上的镜像过程、打包、配置、同步的干扰,甚至(喘气!)由于CPAN.pm模块本身的错误。</target>
        </trans-unit>
        <trans-unit id="4c252d05f2a4c1c2f4d8596766940f8f4c5ee4cf" translate="yes" xml:space="preserve">
          <source>December 15, 2003</source>
          <target state="translated">2003年12月15日</target>
        </trans-unit>
        <trans-unit id="f094f99267643c999093cfd79158b58c209161f0" translate="yes" xml:space="preserve">
          <source>December 9, 2003</source>
          <target state="translated">2003年12月9日</target>
        </trans-unit>
        <trans-unit id="8c401279896f59c9ac4daaaace09acb4863e72b5" translate="yes" xml:space="preserve">
          <source>December, 2001; by Nicholas Clark: make timestr() recognise the style 'none' and return an empty string. If cmpthese is calling timethese, make it pass the style in. (so that 'none' will suppress output). Make sub new dump its debugging output to STDERR, to be consistent with everything else. All bugs found while writing a regression test.</source>
          <target state="translated">2001 年 12 月;作者:Nicholas Clark:让 timestr()识别样式 'none' 并返回一个空字符串。如果 cmpthese 正在调用 timethese,让它把样式传递进来。(这样'none'将抑制输出)。让sub new把它的调试输出转储到stderr,以便与其他所有东西保持一致。在写回归测试时发现的所有bug。</target>
        </trans-unit>
        <trans-unit id="a39a923b41cc5f61bf60cc9e5e68a22cae934912" translate="yes" xml:space="preserve">
          <source>Decide what system you'll use for lexicon keys. If you insist, you can use opaque IDs (if you're nostalgic for &lt;code&gt;catgets&lt;/code&gt; ), but I have better suggestions in the section &quot;Entries in Each Lexicon&quot;, above. Assuming you opt for meaningful keys that double as values (like &quot;Minimum ([_1]) is larger than maximum ([_2])!\n&quot;), you'll have to settle on what language those should be in. For the sake of argument, I'll call this English, specifically American English, &quot;en-US&quot;.</source>
          <target state="translated">确定将用于词典密钥的系统。如果您坚持要使用，则可以使用不透明的ID（如果您对 &lt;code&gt;catgets&lt;/code&gt; 怀旧），但是在上面的&amp;ldquo;每个词典中的条目&amp;rdquo;部分中，我有更好的建议。假设您选择的有意义的键是值的两倍（例如&amp;ldquo;最小（[_1]）大于最大（[_2]）！\ n&amp;rdquo;），则必须确定这些键应使用的语言。为了论证，我将其称为英语，特别是美式英语&amp;ldquo; en-US&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="567ce25d672809d1e36ac1580aa83a91aefeaa93" translate="yes" xml:space="preserve">
          <source>Decide what system you'll use for lexicon keys. If you insist, you can use opaque IDs (if you're nostalgic for &lt;code&gt;catgets&lt;/code&gt;), but I have better suggestions in the section &quot;Entries in Each Lexicon&quot;, above. Assuming you opt for meaningful keys that double as values (like &quot;Minimum ([_1]) is larger than maximum ([_2])!\n&quot;), you'll have to settle on what language those should be in. For the sake of argument, I'll call this English, specifically American English, &quot;en-US&quot;.</source>
          <target state="translated">确定要用于词典键的系统。如果您坚持要使用，则可以使用不透明的ID（如果您对 &lt;code&gt;catgets&lt;/code&gt; 怀旧），但是在上面的&amp;ldquo;每个词典中的条目&amp;rdquo;部分中，我有更好的建议。假设您选择的有意义的键是值的两倍（例如&amp;ldquo;最小（[_1]）大于最大（[_2]）！\ n&amp;rdquo;），则必须确定这些语言应使用的语言。为了争辩，我将其称为英语，特别是美式英语&amp;ldquo; en-US&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="627c1324f2a01e7e93a53d162190cb7f279f5d01" translate="yes" xml:space="preserve">
          <source>Decimal Versions</source>
          <target state="translated">十进制版本</target>
        </trans-unit>
        <trans-unit id="9e82bc7f3f2f04809cb3fcc827abe4332a30b1d3" translate="yes" xml:space="preserve">
          <source>Decimal versions</source>
          <target state="translated">十进制版本</target>
        </trans-unit>
        <trans-unit id="0b3304a0f3839ca4da3ebeb706c419c3e30bd556" translate="yes" xml:space="preserve">
          <source>Decimal versions always work</source>
          <target state="translated">十进制版本总是有效的</target>
        </trans-unit>
        <trans-unit id="6b490c34cbacee1cfe2476b581d24f0aa6fa99fb" translate="yes" xml:space="preserve">
          <source>Decimal versions are regular &quot;decimal numbers&quot;, with some limitations. They &lt;b&gt;must&lt;/b&gt; be non-negative and &lt;b&gt;must&lt;/b&gt; begin and end with a digit. A single underscore &lt;b&gt;may&lt;/b&gt; be included, but &lt;b&gt;must&lt;/b&gt; be between two digits. They &lt;b&gt;must not&lt;/b&gt; use exponential notation (&quot;1.23e-2&quot;).</source>
          <target state="translated">十进制版本是常规的&amp;ldquo;十进制数&amp;rdquo;，但有一些限制。它们&lt;b&gt;必须&lt;/b&gt;为非负数，并且&lt;b&gt;必须&lt;/b&gt;以数字开头和结尾。单下划线&lt;b&gt;可以&lt;/b&gt;被包括在内，但&lt;b&gt;必须&lt;/b&gt;是两个数字之间。他们&lt;b&gt;不得&lt;/b&gt;使用指数表示法（&amp;ldquo; 1.23e-2&amp;rdquo;）。</target>
        </trans-unit>
        <trans-unit id="e65237c09174871af3b0c6f91fffc7ee7711c474" translate="yes" xml:space="preserve">
          <source>Decimal: regular decimal numbers (literal or in a string)</source>
          <target state="translated">十进制:有规律的十进制数(字面或字符串中的)。</target>
        </trans-unit>
        <trans-unit id="d6f37721bc043c8dd7475e584d1b0bdd4b256c24" translate="yes" xml:space="preserve">
          <source>Declaration</source>
          <target state="translated">Declaration</target>
        </trans-unit>
        <trans-unit id="c2604e0c48edbf848a6d96ba3a8037bd0dc24ff4" translate="yes" xml:space="preserve">
          <source>Declaration and Access of Arrays of Arrays</source>
          <target state="translated">数组数组的声明和访问</target>
        </trans-unit>
        <trans-unit id="ebfaff41dd116e96392e7550a2b66d9d22027082" translate="yes" xml:space="preserve">
          <source>Declaration of MORE ELABORATE RECORDS</source>
          <target state="translated">宣布更多的电子记录。</target>
        </trans-unit>
        <trans-unit id="5ec1670ea8c424f5ee15a9e695d0c44630da018c" translate="yes" xml:space="preserve">
          <source>Declaration of a HASH OF ARRAYS</source>
          <target state="translated">宣布 &quot;哈希 &quot;拍卖</target>
        </trans-unit>
        <trans-unit id="b8c8706e060a6811d69b8d2fd72320a3142d6844" translate="yes" xml:space="preserve">
          <source>Declaration of a HASH OF COMPLEX RECORDS</source>
          <target state="translated">复杂记录的申报。</target>
        </trans-unit>
        <trans-unit id="4ce4e4163cd30ea8c4a041080be1e50e00906890" translate="yes" xml:space="preserve">
          <source>Declaration of a HASH OF HASHES</source>
          <target state="translated">宣布 &quot;ASH OF HASHES</target>
        </trans-unit>
        <trans-unit id="968cb53513edaef6840cbb9bd46e4ba68cbf91c3" translate="yes" xml:space="preserve">
          <source>Declaration of an ARRAY OF ARRAYS</source>
          <target state="translated">阵列的宣布。</target>
        </trans-unit>
        <trans-unit id="43a23bde1fe732a75628839289c49e738219d5a3" translate="yes" xml:space="preserve">
          <source>Declaration of an ARRAY OF HASHES</source>
          <target state="translated">申报一揽子哈希方案</target>
        </trans-unit>
        <trans-unit id="b9b846963186dedc9a34aab11fab9a0a092e2d1b" translate="yes" xml:space="preserve">
          <source>Declarations</source>
          <target state="translated">Declarations</target>
        </trans-unit>
        <trans-unit id="ace74e4e37169605f0f6146d8b9c885b5f44e9a7" translate="yes" xml:space="preserve">
          <source>Declarative sugar</source>
          <target state="translated">声明性糖</target>
        </trans-unit>
        <trans-unit id="01b95bbd7c9d60ecf5c5308055fe69e1d280f03c" translate="yes" xml:space="preserve">
          <source>Declare &lt;code&gt;ExtUtils::Typemaps::Basic&lt;/code&gt; as a build-time dependency in &lt;code&gt;Makefile.PL&lt;/code&gt; (use &lt;code&gt;BUILD_REQUIRES&lt;/code&gt; ), or in your &lt;code&gt;Build.PL&lt;/code&gt; (use &lt;code&gt;build_requires&lt;/code&gt; ).</source>
          <target state="translated">在 &lt;code&gt;Makefile.PL&lt;/code&gt; （使用 &lt;code&gt;BUILD_REQUIRES&lt;/code&gt; ）或 &lt;code&gt;Build.PL&lt;/code&gt; （使用 &lt;code&gt;build_requires&lt;/code&gt; ）中，将 &lt;code&gt;ExtUtils::Typemaps::Basic&lt;/code&gt; 声明为构建时依赖项。</target>
        </trans-unit>
        <trans-unit id="8e68e7a80e82df2bb0b805b303daa1a53223a3c4" translate="yes" xml:space="preserve">
          <source>Declare &lt;code&gt;ExtUtils::Typemaps::Basic&lt;/code&gt; as a build-time dependency in &lt;code&gt;Makefile.PL&lt;/code&gt; (use &lt;code&gt;BUILD_REQUIRES&lt;/code&gt;), or in your &lt;code&gt;Build.PL&lt;/code&gt; (use &lt;code&gt;build_requires&lt;/code&gt;).</source>
          <target state="translated">在 &lt;code&gt;Makefile.PL&lt;/code&gt; （使用 &lt;code&gt;BUILD_REQUIRES&lt;/code&gt; ）或 &lt;code&gt;Build.PL&lt;/code&gt; （使用 &lt;code&gt;build_requires&lt;/code&gt; ）中，将 &lt;code&gt;ExtUtils::Typemaps::Basic&lt;/code&gt; 声明为构建时依赖项。</target>
        </trans-unit>
        <trans-unit id="1b76a6d1632adb267d07f45f92fbd92ddebb3c0e" translate="yes" xml:space="preserve">
          <source>Declare Just &lt;code&gt;SP&lt;/code&gt; . This is actually identical to &lt;code&gt;dSP&lt;/code&gt; , and declares a local copy of perl's stack pointer, available via the &lt;code&gt;SP&lt;/code&gt; macro. See &lt;code&gt;SP&lt;/code&gt; . (Available for backward source code compatibility with the old (Perl 5.005) thread model.)</source>
          <target state="translated">声明Just &lt;code&gt;SP&lt;/code&gt; 。这实际上与 &lt;code&gt;dSP&lt;/code&gt; 相同，并声明了可通过 &lt;code&gt;SP&lt;/code&gt; 宏获得的perl堆栈指针的本地副本。参见 &lt;code&gt;SP&lt;/code&gt; 。（可与旧的（Perl 5.005）线程模型实现向后源代码兼容性。）</target>
        </trans-unit>
        <trans-unit id="b56ed01b996629d074d0fdf6c6a216abc4bb396f" translate="yes" xml:space="preserve">
          <source>Declare Just &lt;code&gt;SP&lt;/code&gt;. This is actually identical to &lt;code&gt;dSP&lt;/code&gt;, and declares a local copy of perl's stack pointer, available via the &lt;code&gt;SP&lt;/code&gt; macro. See &lt;code&gt;&lt;a href=&quot;perlapi#SP&quot;&gt;&quot;SP&quot; in perlapi&lt;/a&gt;&lt;/code&gt;. (Available for backward source code compatibility with the old (Perl 5.005) thread model.)</source>
          <target state="translated">声明Just &lt;code&gt;SP&lt;/code&gt; 。这实际上与 &lt;code&gt;dSP&lt;/code&gt; 相同，并声明了可通过 &lt;code&gt;SP&lt;/code&gt; 宏获得的perl堆栈指针的本地副本。参见 &lt;code&gt;&lt;a href=&quot;perlapi#SP&quot;&gt;&quot;SP&quot; in perlapi&lt;/a&gt;&lt;/code&gt; 。（可提供与旧（Perl 5.005）线程模型的向后源代码兼容性。）</target>
        </trans-unit>
        <trans-unit id="dc1ce1b6356c80192e5bb53d511a5c94736f0701" translate="yes" xml:space="preserve">
          <source>Declare a picture format for use by the &lt;a href=&quot;#write-FILEHANDLE&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; function. For example:</source>
          <target state="translated">声明图片格式以供&lt;a href=&quot;#write-FILEHANDLE&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt;功能使用。例如：</target>
        </trans-unit>
        <trans-unit id="b246d2c3a34b0309dc705ab2bf6fd78585237723" translate="yes" xml:space="preserve">
          <source>Declare a picture format for use by the &lt;code&gt;&lt;a href=&quot;functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; function. For example:</source>
          <target state="translated">声明图片格式以供 &lt;code&gt;&lt;a href=&quot;functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; 功能使用。例如：</target>
        </trans-unit>
        <trans-unit id="1337e532e08b8945e760914191518070a82f311f" translate="yes" xml:space="preserve">
          <source>Declare a picture format for use by the &lt;code&gt;&lt;a href=&quot;write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; function. For example:</source>
          <target state="translated">声明图片格式以供 &lt;code&gt;&lt;a href=&quot;write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; 功能使用。例如：</target>
        </trans-unit>
        <trans-unit id="79b9fcb83aaabac99dc56e38a306c39d5ceed2f1" translate="yes" xml:space="preserve">
          <source>Declare a stack marker variable, &lt;code&gt;mark&lt;/code&gt; , for the XSUB. See &lt;code&gt;MARK&lt;/code&gt; and &lt;code&gt;dORIGMARK&lt;/code&gt; .</source>
          <target state="translated">为XSUB 声明一个堆栈标记变量 &lt;code&gt;mark&lt;/code&gt; 。请参阅 &lt;code&gt;MARK&lt;/code&gt; 和 &lt;code&gt;dORIGMARK&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0457b452b99c247b988486bf8f78e075ca965b20" translate="yes" xml:space="preserve">
          <source>Declare a stack marker variable, &lt;code&gt;mark&lt;/code&gt;, for the XSUB. See &lt;code&gt;&lt;a href=&quot;#MARK&quot;&gt;&quot;MARK&quot;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#dORIGMARK&quot;&gt;&quot;dORIGMARK&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">为XSUB声明一个堆栈标记变量 &lt;code&gt;mark&lt;/code&gt; 。参见 &lt;code&gt;&lt;a href=&quot;#MARK&quot;&gt;&quot;MARK&quot;&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;#dORIGMARK&quot;&gt;&quot;dORIGMARK&quot;&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2bc325f65b062b55c0a046c697861918ab5ba8a6" translate="yes" xml:space="preserve">
          <source>Declare a typedef named &lt;code&gt;my_cxt_t&lt;/code&gt; that is a structure that contains all the data that needs to be interpreter-local.</source>
          <target state="translated">声明一个名为 &lt;code&gt;my_cxt_t&lt;/code&gt; 的typedef ，它是一个结构，其中包含需要在解释器本地进行的所有数据。</target>
        </trans-unit>
        <trans-unit id="0f3343311ea82b57cf2a91faf914e7146706bc4b" translate="yes" xml:space="preserve">
          <source>Declare constants</source>
          <target state="translated">声明常量</target>
        </trans-unit>
        <trans-unit id="af8f77c9ea265ba763b66cb03c64c9e96fac9b16" translate="yes" xml:space="preserve">
          <source>Declare local variables for a multicall. See &lt;a href=&quot;perlcall#LIGHTWEIGHT-CALLBACKS&quot;&gt;&quot;LIGHTWEIGHT CALLBACKS&quot; in perlcall&lt;/a&gt;.</source>
          <target state="translated">声明多调用的局部变量。请参阅&lt;a href=&quot;perlcall#LIGHTWEIGHT-CALLBACKS&quot;&gt;perlcall中的&amp;ldquo;轻量级回调&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e90d1629cda5e7b6f31494a6b20b0b96a93f8fec" translate="yes" xml:space="preserve">
          <source>Declare local variables for a multicall. See &lt;a href=&quot;perlcall#LIGHTWEIGHT-CALLBACKS&quot;&gt;LIGHTWEIGHT CALLBACKS in perlcall&lt;/a&gt;.</source>
          <target state="translated">声明多调用的局部变量。请参阅&lt;a href=&quot;perlcall#LIGHTWEIGHT-CALLBACKS&quot;&gt;perlcall中的轻量级回调&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fe8095595a1e11e48a82985239de9e9b7e44058b" translate="yes" xml:space="preserve">
          <source>Declare struct-like datatypes as Perl classes</source>
          <target state="translated">将类似结构的数据类型声明为Perl类。</target>
        </trans-unit>
        <trans-unit id="241be854b7c926b421f57938c176fa2dc1fc4342" translate="yes" xml:space="preserve">
          <source>Declare variables needed to save &lt;code&gt;errno&lt;/code&gt; and any operating system specific error number, and save them for optional later restoration by &lt;code&gt;RESTORE_ERRNO&lt;/code&gt;.</source>
          <target state="translated">声明保存 &lt;code&gt;errno&lt;/code&gt; 和任何操作系统特定的错误号所需的变量，并保存它们以供以后由 &lt;code&gt;RESTORE_ERRNO&lt;/code&gt; 进行可选的还原。</target>
        </trans-unit>
        <trans-unit id="9b7cfb548ec82483872a79c2a5af52e54335bfc1" translate="yes" xml:space="preserve">
          <source>Declare variables needed to save &lt;code&gt;errno&lt;/code&gt; and any operating system specific error number.</source>
          <target state="translated">声明保存 &lt;code&gt;errno&lt;/code&gt; 所需的变量和任何特定于操作系统的错误号。</target>
        </trans-unit>
        <trans-unit id="fd95c3fe676cb80336a8b7970197ea750ed934e1" translate="yes" xml:space="preserve">
          <source>Declares a block of tests you expect to fail and $why. Perhaps it's because you haven't fixed a bug or haven't finished a new feature:</source>
          <target state="translated">声明一个你期望失败的测试块和$why。也许是因为你还没有修复一个bug或者没有完成一个新的功能。</target>
        </trans-unit>
        <trans-unit id="d4f6f2747e60da61911d87575aab690590f6d04d" translate="yes" xml:space="preserve">
          <source>Declares a local copy of perl's stack pointer for the XSUB, available via the &lt;code&gt;SP&lt;/code&gt; macro. See &lt;code&gt;&lt;a href=&quot;#SP&quot;&gt;&quot;SP&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">声明XSUB的perl堆栈指针的本地副本，可通过 &lt;code&gt;SP&lt;/code&gt; 宏使用。参见 &lt;code&gt;&lt;a href=&quot;#SP&quot;&gt;&quot;SP&quot;&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4b08be3bcb055a5bfcdfe0f7e147c5f7a01a9af4" translate="yes" xml:space="preserve">
          <source>Declares a local copy of perl's stack pointer for the XSUB, available via the &lt;code&gt;SP&lt;/code&gt; macro. See &lt;code&gt;SP&lt;/code&gt; .</source>
          <target state="translated">声明XSUB的perl堆栈指针的本地副本，可通过 &lt;code&gt;SP&lt;/code&gt; 宏使用。参见 &lt;code&gt;SP&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="775811626d86d0489442dc9b97620d79f2638c9b" translate="yes" xml:space="preserve">
          <source>Declares that no more items will be added to the queue.</source>
          <target state="translated">宣布不再将物品添加到队列中。</target>
        </trans-unit>
        <trans-unit id="a88496a0e111c684a669138708549e2de67d1e28" translate="yes" xml:space="preserve">
          <source>Declares that the stream accepts perl's</source>
          <target state="translated">声明该流接受perl的</target>
        </trans-unit>
        <trans-unit id="97a2147f033bc70f2e20dfc8e311b01cc7c8c8f3" translate="yes" xml:space="preserve">
          <source>Declares that this test will run an indeterminate number of tests.</source>
          <target state="translated">声明该测试将运行不确定次数的测试。</target>
        </trans-unit>
        <trans-unit id="6da56154a8de563d222245d4af173f8b457c59e3" translate="yes" xml:space="preserve">
          <source>Declares that you are done testing, no more tests will be run after this point.</source>
          <target state="translated">宣布你已经完成了测试,此后将不再运行测试。</target>
        </trans-unit>
        <trans-unit id="4f54a9ff18bfc2ace3b413b7376085dbd08ce71d" translate="yes" xml:space="preserve">
          <source>Declares the BLOCK or the rest of the compilation unit as being in the given namespace. The scope of the package declaration is either the supplied code BLOCK or, in the absence of a BLOCK, from the declaration itself through the end of current scope (the enclosing block, file, or &lt;a href=&quot;#eval-EXPR&quot;&gt;&lt;code&gt;eval&lt;/code&gt;&lt;/a&gt;). That is, the forms without a BLOCK are operative through the end of the current scope, just like the &lt;a href=&quot;#my-VARLIST&quot;&gt;&lt;code&gt;my&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#state-VARLIST&quot;&gt;&lt;code&gt;state&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#our-VARLIST&quot;&gt;&lt;code&gt;our&lt;/code&gt;&lt;/a&gt; operators. All unqualified dynamic identifiers in this scope will be in the given namespace, except where overridden by another &lt;a href=&quot;#package-NAMESPACE&quot;&gt;&lt;code&gt;package&lt;/code&gt;&lt;/a&gt; declaration or when they're one of the special identifiers that qualify into &lt;code&gt;main::&lt;/code&gt;, like &lt;code&gt;STDOUT&lt;/code&gt;, &lt;code&gt;ARGV&lt;/code&gt;, &lt;code&gt;ENV&lt;/code&gt;, and the punctuation variables.</source>
          <target state="translated">将BLOCK或编译单元的其余部分声明为位于给定的名称空间中。包声明的范围是提供的代码BLOCK，或者在没有BLOCK的情况下，从声明本身到当前范围的末尾（封闭的块，文件或&lt;a href=&quot;#eval-EXPR&quot;&gt; &lt;code&gt;eval&lt;/code&gt; &lt;/a&gt;）。也就是说，不带BLOCK的窗体在当前作用域的末尾都可以运行，就像&lt;a href=&quot;#my-VARLIST&quot;&gt; &lt;code&gt;my&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#state-VARLIST&quot;&gt; &lt;code&gt;state&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#our-VARLIST&quot;&gt; &lt;code&gt;our&lt;/code&gt; &lt;/a&gt;运算符一样。此范围内的所有不合格动态标识符都将位于给定的名称空间中，除非被另一个&lt;a href=&quot;#package-NAMESPACE&quot;&gt; &lt;code&gt;package&lt;/code&gt; &lt;/a&gt;声明覆盖或当它们是符合 &lt;code&gt;main::&lt;/code&gt; 的特殊标识符之一时（如 &lt;code&gt;STDOUT&lt;/code&gt; ， &lt;code&gt;ARGV&lt;/code&gt; )， &lt;code&gt;ENV&lt;/code&gt; 和标点符号变量。</target>
        </trans-unit>
        <trans-unit id="cd4907e397ad786d964786ed678ccb6ec918a061" translate="yes" xml:space="preserve">
          <source>Declares the BLOCK or the rest of the compilation unit as being in the given namespace. The scope of the package declaration is either the supplied code BLOCK or, in the absence of a BLOCK, from the declaration itself through the end of current scope (the enclosing block, file, or &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;). That is, the forms without a BLOCK are operative through the end of the current scope, just like the &lt;code&gt;&lt;a href=&quot;my&quot;&gt;my&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;state&quot;&gt;state&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; operators. All unqualified dynamic identifiers in this scope will be in the given namespace, except where overridden by another &lt;code&gt;&lt;a href=&quot;package&quot;&gt;package&lt;/a&gt;&lt;/code&gt; declaration or when they're one of the special identifiers that qualify into &lt;code&gt;main::&lt;/code&gt; , like &lt;code&gt;STDOUT&lt;/code&gt; , &lt;code&gt;ARGV&lt;/code&gt; , &lt;code&gt;ENV&lt;/code&gt; , and the punctuation variables.</source>
          <target state="translated">将BLOCK或编译单元的其余部分声明为位于给定的名称空间中。包声明的范围是提供的代码BLOCK，或者在没有BLOCK的情况下，从声明本身到当前范围的末尾（封闭的块，文件或 &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; ）。也就是说，不带BLOCK的窗体可以在当前作用域的末尾运行，就像 &lt;code&gt;&lt;a href=&quot;my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; 运算符一样。此范围内的所有不合格动态标识符都将位于给定的名称空间中，除非被另一个 &lt;code&gt;&lt;a href=&quot;package&quot;&gt;package&lt;/a&gt;&lt;/code&gt; 声明覆盖或当它们是符合 &lt;code&gt;main::&lt;/code&gt; 的特殊标识符之一时，例如 &lt;code&gt;STDOUT&lt;/code&gt; ， &lt;code&gt;ARGV&lt;/code&gt; ， &lt;code&gt;ENV&lt;/code&gt; 和标点符号变量。</target>
        </trans-unit>
        <trans-unit id="f8c0173916c6e4ea3e07071d4b7dde09c327c03c" translate="yes" xml:space="preserve">
          <source>Declares the BLOCK or the rest of the compilation unit as being in the given namespace. The scope of the package declaration is either the supplied code BLOCK or, in the absence of a BLOCK, from the declaration itself through the end of current scope (the enclosing block, file, or &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;). That is, the forms without a BLOCK are operative through the end of the current scope, just like the &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; operators. All unqualified dynamic identifiers in this scope will be in the given namespace, except where overridden by another &lt;code&gt;&lt;a href=&quot;functions/package&quot;&gt;package&lt;/a&gt;&lt;/code&gt; declaration or when they're one of the special identifiers that qualify into &lt;code&gt;main::&lt;/code&gt; , like &lt;code&gt;STDOUT&lt;/code&gt; , &lt;code&gt;ARGV&lt;/code&gt; , &lt;code&gt;ENV&lt;/code&gt; , and the punctuation variables.</source>
          <target state="translated">将BLOCK或编译单元的其余部分声明为位于给定的名称空间中。包声明的范围是提供的代码BLOCK，或者在没有BLOCK的情况下，从声明本身到当前范围的末尾（封闭的块，文件或 &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; ）。也就是说，不带BLOCK的窗体可以在当前作用域的末尾运行，就像 &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; 运算符一样。此范围内的所有不合格动态标识符都将位于给定的名称空间中，除非被另一个 &lt;code&gt;&lt;a href=&quot;functions/package&quot;&gt;package&lt;/a&gt;&lt;/code&gt; 声明覆盖或当它们是符合 &lt;code&gt;main::&lt;/code&gt; 的特殊标识符之一时，例如 &lt;code&gt;STDOUT&lt;/code&gt; ， &lt;code&gt;ARGV&lt;/code&gt; ， &lt;code&gt;ENV&lt;/code&gt; 和标点符号变量。</target>
        </trans-unit>
        <trans-unit id="f1da10a5e5d78d8ddd42db2cd6041c8878256f5e" translate="yes" xml:space="preserve">
          <source>Declaring &lt;code&gt;@EXPORT_OK&lt;/code&gt; and Friends</source>
          <target state="translated">声明 &lt;code&gt;@EXPORT_OK&lt;/code&gt; 和朋友</target>
        </trans-unit>
        <trans-unit id="bf1e27173b2b61ad7cc8d4e35225eb9ac31e3c57" translate="yes" xml:space="preserve">
          <source>Declaring @EXPORT_OK and Friends</source>
          <target state="translated">声明 @EXPORT_OK 和朋友们。</target>
        </trans-unit>
        <trans-unit id="b98580a35db5c923e11c6744129fa201631ed2c7" translate="yes" xml:space="preserve">
          <source>Declaring a Reference to a Variable</source>
          <target state="translated">声明对变量的引用</target>
        </trans-unit>
        <trans-unit id="fde084d9565bae036b5f20474e01a929023e39bf" translate="yes" xml:space="preserve">
          <source>Declaring a subroutine allows a subroutine name to be used as if it were a list operator from that point forward in the program. You can declare a subroutine without defining it by saying &lt;code&gt;sub name&lt;/code&gt; , thus:</source>
          <target state="translated">从该点开始，声明子例程将允许子例程名称像列表操作符一样使用。您可以通过说出 &lt;code&gt;sub name&lt;/code&gt; 来声明子例程而无需定义它，因此：</target>
        </trans-unit>
        <trans-unit id="af70fd7faa5a8c4e123052ec680cd7ad32f4f96e" translate="yes" xml:space="preserve">
          <source>Declaring a subroutine allows a subroutine name to be used as if it were a list operator from that point forward in the program. You can declare a subroutine without defining it by saying &lt;code&gt;sub name&lt;/code&gt;, thus:</source>
          <target state="translated">从该点开始，声明子例程将允许子例程名称被使用，就好像它是列表运算符一样。您可以通过说出 &lt;code&gt;sub name&lt;/code&gt; 来声明子例程而无需定义它，因此：</target>
        </trans-unit>
        <trans-unit id="8f6292752dbee798b8191ee9d716594ba4050a6c" translate="yes" xml:space="preserve">
          <source>Declaring references is experimental</source>
          <target state="translated">声明引用是试验性的</target>
        </trans-unit>
        <trans-unit id="df50d3b937b66b95438db0baeefd22f2c1fa73b6" translate="yes" xml:space="preserve">
          <source>Decode</source>
          <target state="translated">Decode</target>
        </trans-unit>
        <trans-unit id="2baf8b86f083c5626552d12ceb5f07d33eee642a" translate="yes" xml:space="preserve">
          <source>Decode a base64 string by calling the decode_base64() function. This function takes a single argument which is the string to decode and returns the decoded data.</source>
          <target state="translated">通过调用decode_base64()函数对base64字符串进行解码。这个函数接收一个参数,即要解码的字符串,并返回解码后的数据。</target>
        </trans-unit>
        <trans-unit id="75f02ff68d1ce18c3f179663e56def325e556748" translate="yes" xml:space="preserve">
          <source>Decode any taint switches from a Perl shebang line.</source>
          <target state="translated">解码Perl shebang行中的任何污点开关。</target>
        </trans-unit>
        <trans-unit id="109d6d8d7f79aeac2b306278d0d11f591a9ace1e" translate="yes" xml:space="preserve">
          <source>Decode everything you receive, encode everything you send out. (If it's text data.)</source>
          <target state="translated">解码你收到的一切,编码你发出的一切。(如果是文本数据。)</target>
        </trans-unit>
        <trans-unit id="b5e6108a9d4ff66d51565f4f28f46c751ad457f0" translate="yes" xml:space="preserve">
          <source>Decode method takes an unstructured field body of the email header (or &lt;a href=&quot;https://tools.ietf.org/html/rfc822&quot;&gt;RFC 822&lt;/a&gt; 'text' token) as its input and decodes each MIME encoded-word from input string to a sequence of bytes according to &lt;a href=&quot;https://tools.ietf.org/html/rfc2047&quot;&gt;RFC 2047&lt;/a&gt; and &lt;a href=&quot;https://tools.ietf.org/html/rfc2231&quot;&gt;RFC 2231&lt;/a&gt;. Subsequently, each sequence of bytes with the corresponding MIME charset is decoded with &lt;a href=&quot;encode&quot;&gt;the Encode module&lt;/a&gt; and finally, one output string is returned. Text parts of the input string which do not contain MIME encoded-word stay unmodified in the output string. Folded newlines between two consecutive MIME encoded-words are discarded, others are preserved in the output string. &lt;code&gt;MIME-B&lt;/code&gt; can decode Base64 variant, &lt;code&gt;MIME-Q&lt;/code&gt; can decode Quoted-Printable variant and &lt;code&gt;MIME-Header&lt;/code&gt; can decode both of them. If &lt;a href=&quot;encode&quot;&gt;Encode module&lt;/a&gt; does not support particular MIME charset or chosen variant then an action based on &lt;a href=&quot;encode#Handling-Malformed-Data&quot;&gt;CHECK flags&lt;/a&gt; is performed (by default, the MIME encoded-word is not decoded).</source>
          <target state="translated">解码方法将电子邮件标头的非结构化字段主体（或&lt;a href=&quot;https://tools.ietf.org/html/rfc822&quot;&gt;RFC 822&lt;/a&gt; &amp;ldquo;文本&amp;rdquo;令牌）作为其输入，并根据&lt;a href=&quot;https://tools.ietf.org/html/rfc2047&quot;&gt;RFC 2047&lt;/a&gt;和&lt;a href=&quot;https://tools.ietf.org/html/rfc2231&quot;&gt;RFC 2231将&lt;/a&gt;每个MIME编码的单词从输入字符串解码为字节序列。随后，使用&lt;a href=&quot;encode&quot;&gt;Encode模块&lt;/a&gt;对具有相应MIME字符集的每个字节序列进行解码，最后返回一个输出字符串。输入字符串中不包含MIME编码词的文本部分在输出字符串中保持不变。两个连续的MIME编码字之间的折叠换行符将被丢弃，其他的保留在输出字符串中。 &lt;code&gt;MIME-B&lt;/code&gt; 可以解码Base64变体， &lt;code&gt;MIME-Q&lt;/code&gt; 可以解码Quoted-Printable变体， &lt;code&gt;MIME-Header&lt;/code&gt; 可以将它们都解码。如果&amp;ldquo;&lt;a href=&quot;encode&quot;&gt;编码&amp;rdquo;模块&lt;/a&gt;不支持特定的MIME字符集或所选的变体，则将执行基于&lt;a href=&quot;encode#Handling-Malformed-Data&quot;&gt;CHECK标志&lt;/a&gt;的操作（默认情况下，不对MIME编码字进行解码）。</target>
        </trans-unit>
        <trans-unit id="4b9d36d83c06e37782d740af6424903230486d88" translate="yes" xml:space="preserve">
          <source>Decoding</source>
          <target state="translated">Decoding</target>
        </trans-unit>
        <trans-unit id="7569471cdb884355544f0d363051bcbdd3ab3bd3" translate="yes" xml:space="preserve">
          <source>Decoding can't happen reliably if you don't know how the data was encoded. If you get to choose, it's a good idea to standardize on UTF-8.</source>
          <target state="translated">如果你不知道数据是如何编码的,解码就无法可靠地发生。如果你可以选择,最好用UTF-8作为标准。</target>
        </trans-unit>
        <trans-unit id="abcb42a9bd28ce7905619e5495e33ddc378d15e2" translate="yes" xml:space="preserve">
          <source>Decoding does not need slurp mode if every line contains a multiple of four base64 chars:</source>
          <target state="translated">如果每一行都包含4个base64字符的倍数,解码就不需要slurp模式。</target>
        </trans-unit>
        <trans-unit id="8d2fb28c0e5d9fe827a3bd469e59cbc0c5460a44" translate="yes" xml:space="preserve">
          <source>Decomposition and Composition</source>
          <target state="translated">分解和组成</target>
        </trans-unit>
        <trans-unit id="65db77c0668ff68ab733a103249ba144ff3c7f06" translate="yes" xml:space="preserve">
          <source>Decomposition_Mapping</source>
          <target state="translated">Decomposition_Mapping</target>
        </trans-unit>
        <trans-unit id="1b059e79c07fd4e42a0c8736733855e555b987de" translate="yes" xml:space="preserve">
          <source>Decompress the file with &lt;code&gt;gzip -d yourmodule.tar.gz&lt;/code&gt;</source>
          <target state="translated">用 &lt;code&gt;gzip -d yourmodule.tar.gz&lt;/code&gt; 解压缩文件</target>
        </trans-unit>
        <trans-unit id="fecfe7ecbf358f7b0d7f78df884a86cc9366776a" translate="yes" xml:space="preserve">
          <source>Decrement OBJ by one.</source>
          <target state="translated">将OBJ减少一个。</target>
        </trans-unit>
        <trans-unit id="f9e1ce708a313bdfe9eca73b07a0b2fbd7af57f3" translate="yes" xml:space="preserve">
          <source>Decrement an SV's reference count, and if it drops to zero, call &lt;code&gt;sv_clear&lt;/code&gt; to invoke destructors and free up any memory used by the body; finally, deallocate the SV's head itself. Normally called via a wrapper macro &lt;code&gt;SvREFCNT_dec&lt;/code&gt; .</source>
          <target state="translated">减少SV的引用计数，如果它减少到零，则调用 &lt;code&gt;sv_clear&lt;/code&gt; 调用析构函数并释放主体使用的所有内存；最后，释放SV的头部本身。通常通过包装宏 &lt;code&gt;SvREFCNT_dec&lt;/code&gt; 调用。</target>
        </trans-unit>
        <trans-unit id="0301ed516f1d07e8a21a69cc6264de801d5caffc" translate="yes" xml:space="preserve">
          <source>Decrement an SV's reference count, and if it drops to zero, call &lt;code&gt;sv_clear&lt;/code&gt; to invoke destructors and free up any memory used by the body; finally, deallocating the SV's head itself. Normally called via a wrapper macro &lt;code&gt;SvREFCNT_dec&lt;/code&gt;.</source>
          <target state="translated">减少SV的引用计数，如果它减少到零，则调用 &lt;code&gt;sv_clear&lt;/code&gt; 调用析构函数并释放主体使用的所有内存；最后，释放SV的头部本身。通常通过包装宏 &lt;code&gt;SvREFCNT_dec&lt;/code&gt; 调用。</target>
        </trans-unit>
        <trans-unit id="3a67ea7e86c28199b5df339f2ac9cbaf49e99821" translate="yes" xml:space="preserve">
          <source>Decrement the refcnt of each remaining SV, possibly triggering a cleanup. This function may have to be called multiple times to free SVs which are in complex self-referential hierarchies.</source>
          <target state="translated">减少每个剩余SV的refcnt,可能会触发一次清理。这个函数可能需要被多次调用,以释放处于复杂自引用层次结构中的SV。</target>
        </trans-unit>
        <trans-unit id="48379b8bdd9f9af7d6fd4db51e4746e319410873" translate="yes" xml:space="preserve">
          <source>Decrements $x by 1 and returns the result.</source>
          <target state="translated">将$x减1并返回结果。</target>
        </trans-unit>
        <trans-unit id="20e7e93f2b8e3284df557787a48d088c384708e2" translate="yes" xml:space="preserve">
          <source>Decrements the reference count of a &lt;code&gt;refcounted_he&lt;/code&gt; by one. If the reference count reaches zero the structure's memory is freed, which (recursively) causes a reduction of its parent &lt;code&gt;refcounted_he&lt;/code&gt; 's reference count. It is safe to pass a null pointer to this function: no action occurs in this case.</source>
          <target state="translated">一个递减的引用计数 &lt;code&gt;refcounted_he&lt;/code&gt; 一个。如果引用计数达到零，则释放结构的内存，这（递归地）导致其父 &lt;code&gt;refcounted_he&lt;/code&gt; 的引用计数减少。将空指针传递给此函数是安全的：在这种情况下，不执行任何操作。</target>
        </trans-unit>
        <trans-unit id="3612310bbc1f4127c1a18f15130a21a6a5c81e03" translate="yes" xml:space="preserve">
          <source>Decrements the reference count of a &lt;code&gt;refcounted_he&lt;/code&gt; by one. If the reference count reaches zero the structure's memory is freed, which (recursively) causes a reduction of its parent &lt;code&gt;refcounted_he&lt;/code&gt;'s reference count. It is safe to pass a null pointer to this function: no action occurs in this case.</source>
          <target state="translated">一个递减的引用计数 &lt;code&gt;refcounted_he&lt;/code&gt; 一个。如果引用计数达到零，则释放结构的内存，这（递归地）导致其父 &lt;code&gt;refcounted_he&lt;/code&gt; 的引用计数减少。将空指针传递给此函数是安全的：在这种情况下，不执行任何操作。</target>
        </trans-unit>
        <trans-unit id="dcec4515414c7f15a726073898aabc532b3d39f1" translate="yes" xml:space="preserve">
          <source>Decrements the reference count of the given SV.</source>
          <target state="translated">递减给定SV的参考数。</target>
        </trans-unit>
        <trans-unit id="62e4640075315126f815222935c6969f332b1ca2" translate="yes" xml:space="preserve">
          <source>Decrements the reference count of the given SV. &lt;code&gt;sv&lt;/code&gt; may be &lt;code&gt;NULL&lt;/code&gt;.</source>
          <target state="translated">减少给定SV的参考计数。 &lt;code&gt;sv&lt;/code&gt; 可以为 &lt;code&gt;NULL&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fad89dfcee27e9d87d909c911b20e8fe884012e9" translate="yes" xml:space="preserve">
          <source>Deep Cloning</source>
          <target state="translated">深度克隆</target>
        </trans-unit>
        <trans-unit id="24ece4891188c5f90daafbf7513a856ab1bc6fde" translate="yes" xml:space="preserve">
          <source>Deep recursion on anonymous subroutine</source>
          <target state="translated">对匿名子程序进行深度递归。</target>
        </trans-unit>
        <trans-unit id="0684f5f69503944c8161b7b66b8eb933bef39fc3" translate="yes" xml:space="preserve">
          <source>Deep recursion on subroutine &quot;%s&quot;</source>
          <target state="translated">对子程序&quot;%s &quot;进行深度递归。</target>
        </trans-unit>
        <trans-unit id="6efd349441f7ae82ab76916d1a7dd281bab38a30" translate="yes" xml:space="preserve">
          <source>Deeper Customisation</source>
          <target state="translated">更深层次的定制化</target>
        </trans-unit>
        <trans-unit id="18e33bb9b61f0104150b716fc1f2c83fe5ab0477" translate="yes" xml:space="preserve">
          <source>Default Byte Order</source>
          <target state="translated">默认字节顺序</target>
        </trans-unit>
        <trans-unit id="c84353cad8816e49b138a483d1ebb30bfc16441f" translate="yes" xml:space="preserve">
          <source>Default Makefile Behaviour</source>
          <target state="translated">默认的Makefile行为</target>
        </trans-unit>
        <trans-unit id="f5a8076e567450c53999f5638b343fac686a825d" translate="yes" xml:space="preserve">
          <source>Default Parameter Values</source>
          <target state="translated">默认参数值</target>
        </trans-unit>
        <trans-unit id="4753d9b7084053c5089d49a71f2cde5d97a9c631" translate="yes" xml:space="preserve">
          <source>Default Parameters</source>
          <target state="translated">默认参数</target>
        </trans-unit>
        <trans-unit id="cc0e201c7029269ea6e8c9f6874c0179cc038bae" translate="yes" xml:space="preserve">
          <source>Default Test Directory</source>
          <target state="translated">默认测试目录</target>
        </trans-unit>
        <trans-unit id="44ec713d2a53a2de818adaf52eb763f357d09499" translate="yes" xml:space="preserve">
          <source>Default Warnings and Optional Warnings</source>
          <target state="translated">默认警告和可选警告</target>
        </trans-unit>
        <trans-unit id="0566f3b85322f529cf1661115aa7b73ed4d004bc" translate="yes" xml:space="preserve">
          <source>Default destinations</source>
          <target state="translated">默认目的地</target>
        </trans-unit>
        <trans-unit id="967dd37853ad5171b91867584cc350ce812dd723" translate="yes" xml:space="preserve">
          <source>Default exports</source>
          <target state="translated">默认出口</target>
        </trans-unit>
        <trans-unit id="e89a7a7b0da6771ef898ac79fc0a58004f639f43" translate="yes" xml:space="preserve">
          <source>Default host: '255.255.255.255' Default port: 9</source>
          <target state="translated">默认主机:'255.255.255.255' 默认端口。9</target>
        </trans-unit>
        <trans-unit id="47421e2559e43abd036e2b184dadd2357238a719" translate="yes" xml:space="preserve">
          <source>Default is &quot;\034&quot;, the same as SUBSEP in &lt;b&gt;awk&lt;/b&gt;. If your keys contain binary data there might not be any safe value for &lt;code&gt;$;&lt;/code&gt; .</source>
          <target state="translated">默认值为&amp;ldquo; \ 034&amp;rdquo;，与&lt;b&gt;awk中的&lt;/b&gt; SUBSEP相同。如果您的密钥包含二进制数据，则 &lt;code&gt;$;&lt;/code&gt; 可能没有任何安全值；。</target>
        </trans-unit>
        <trans-unit id="c0aa6ef0cc672da291e362ff35880df700587edb" translate="yes" xml:space="preserve">
          <source>Default is &quot;\034&quot;, the same as SUBSEP in &lt;b&gt;awk&lt;/b&gt;. If your keys contain binary data there might not be any safe value for &lt;code&gt;$;&lt;/code&gt;.</source>
          <target state="translated">默认值为&amp;ldquo; \ 034&amp;rdquo;，与&lt;b&gt;awk中的&lt;/b&gt;SUBSEP相同。如果您的密钥包含二进制数据，则 &lt;code&gt;$;&lt;/code&gt; 可能没有任何安全值；。</target>
        </trans-unit>
        <trans-unit id="ffe4ea797d5b8a7f8cfde90ab339db72e2e542a2" translate="yes" xml:space="preserve">
          <source>Default is 0.</source>
          <target state="translated">默认为0。</target>
        </trans-unit>
        <trans-unit id="3614d667188f70abf848a06aa0652a05a7980f2d" translate="yes" xml:space="preserve">
          <source>Default is 0;</source>
          <target state="translated">默认为0。</target>
        </trans-unit>
        <trans-unit id="117a6bf24c7268f690b354be18d70dcb8affc433" translate="yes" xml:space="preserve">
          <source>Default is 1;</source>
          <target state="translated">默认为1。</target>
        </trans-unit>
        <trans-unit id="94d18537fb9880b0b3a9844f6456e7041684d68a" translate="yes" xml:space="preserve">
          <source>Default is 4096.</source>
          <target state="translated">默认为4096。</target>
        </trans-unit>
        <trans-unit id="6e26841758dcad7e26700059748889a29326c77f" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;File-Fetch@example.com&lt;/code&gt; .</source>
          <target state="translated">默认值为 &lt;code&gt;File-Fetch@example.com&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8666a70fcb610a67383477674b4a80110f7122f6" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;File-Fetch@example.com&lt;/code&gt;.</source>
          <target state="translated">默认值为 &lt;code&gt;File-Fetch@example.com&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4b21f25856f196d843b44afb04b8ac6eaef661e6" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;File::Fetch/$VERSION&lt;/code&gt; .</source>
          <target state="translated">默认值为 &lt;code&gt;File::Fetch/$VERSION&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="15b68d169876a2d71d036d920e8b9cfaea9e56ef" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;File::Fetch/$VERSION&lt;/code&gt;.</source>
          <target state="translated">默认值为 &lt;code&gt;File::Fetch/$VERSION&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="da032bd647313ecd583e516886d8ef8538d9001f" translate="yes" xml:space="preserve">
          <source>Default is false, meaning that when you use &lt;code&gt;store&lt;/code&gt; as a template key, &lt;code&gt;check&lt;/code&gt; will put it both in the scalar you supplied, as well as in the hashref it returns.</source>
          <target state="translated">默认值为false，这意味着当您将 &lt;code&gt;store&lt;/code&gt; 用作模板键时， &lt;code&gt;check&lt;/code&gt; 会将其放入您提供的标量以及返回的hashref中。</target>
        </trans-unit>
        <trans-unit id="f23dbfcfc00cfaaa5823861693969bf14d49d57a" translate="yes" xml:space="preserve">
          <source>Default is for debugging mode to be disabled.</source>
          <target state="translated">默认为禁用调试模式。</target>
        </trans-unit>
        <trans-unit id="d09b4e9a70d326b80a3705a2d07cf6295402aa8f" translate="yes" xml:space="preserve">
          <source>Default is for files to be removed as requested by the caller.</source>
          <target state="translated">默认情况下是按照调用者的要求删除文件。</target>
        </trans-unit>
        <trans-unit id="9c92cef06212a1842160f64b786f629e6d8ef460" translate="yes" xml:space="preserve">
          <source>Default is for the file to be removed.</source>
          <target state="translated">默认为删除该文件。</target>
        </trans-unit>
        <trans-unit id="611ca2ae870bcb7431782f0c4440d0df69e48190" translate="yes" xml:space="preserve">
          <source>Default is to assume that any UID less than or equal to 10 is a root UID.</source>
          <target state="translated">默认情况下,任何小于或等于10的UID都是根UID。</target>
        </trans-unit>
        <trans-unit id="7fca13ec107ea72b752cc1954e7362fa3edfc913" translate="yes" xml:space="preserve">
          <source>Default is: &lt;code&gt; =&amp;gt; &lt;/code&gt; .</source>
          <target state="translated">默认值为： &lt;code&gt; =&amp;gt; &lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="35866a2a5fdc2090d8d496e4d4dd84bd92269324" translate="yes" xml:space="preserve">
          <source>Default is: &lt;code&gt; =&amp;gt; &lt;/code&gt;.</source>
          <target state="translated">默认值为： &lt;code&gt; =&amp;gt; &lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8820a54076d664561edd70760e8e08a8256672de" translate="yes" xml:space="preserve">
          <source>Default value is 0.</source>
          <target state="translated">默认值为0。</target>
        </trans-unit>
        <trans-unit id="ff65fb164557c4cda7887f6d0b88d9af2694a1c4" translate="yes" xml:space="preserve">
          <source>Default value is 1.</source>
          <target state="translated">默认值为1。</target>
        </trans-unit>
        <trans-unit id="041ad125ee75e430d661eb85a0aa9a66653995a9" translate="yes" xml:space="preserve">
          <source>Default value to use (instead of &lt;code&gt;croak&lt;/code&gt; ing with &quot;your vendor has not defined...&quot;) to return if the macro isn't defined. Specify a reference to an array with type followed by value(s).</source>
          <target state="translated">默认值使用（而不是 &lt;code&gt;croak&lt;/code&gt; ING以&amp;ldquo;你的供应商没有定义...&amp;rdquo;），如果没有定义的宏返回。用类型后跟值指定对数组的引用。</target>
        </trans-unit>
        <trans-unit id="deab2598c908ea4920f026abdf9ce2073e0c2a7c" translate="yes" xml:space="preserve">
          <source>Default value to use (instead of &lt;code&gt;croak&lt;/code&gt;ing with &quot;your vendor has not defined...&quot;) to return if the macro isn't defined. Specify a reference to an array with type followed by value(s).</source>
          <target state="translated">默认值使用（而不是 &lt;code&gt;croak&lt;/code&gt; ING以&amp;ldquo;你的供应商没有定义...&amp;rdquo;），如果没有定义的宏返回。指定对类型的数组的引用，后跟值。</target>
        </trans-unit>
        <trans-unit id="e034cbbe2b8762f796d4892d08bbfed1145d3ef8" translate="yes" xml:space="preserve">
          <source>Default values</source>
          <target state="translated">默认值</target>
        </trans-unit>
        <trans-unit id="fe91ba1dc4d3dc98854423373895e4709f7bcaf4" translate="yes" xml:space="preserve">
          <source>Default values defined in the CPAN/Config.pm file can be overridden in a user specific file: CPAN/MyConfig.pm. Such a file is best placed in &lt;code&gt;$HOME/.cpan/CPAN/MyConfig.pm&lt;/code&gt;, because &lt;code&gt;$HOME/.cpan&lt;/code&gt; is added to the search path of the CPAN module before the use() or require() statements. The mkmyconfig command writes this file for you.</source>
          <target state="translated">CPAN / Config.pm文件中定义的默认值可以在用户特定的文件CPAN / MyConfig.pm中覆盖。这样的文件最好放在 &lt;code&gt;$HOME/.cpan/CPAN/MyConfig.pm&lt;/code&gt; ，因为 &lt;code&gt;$HOME/.cpan&lt;/code&gt; 是在use（）或require（）语句之前添加到CPAN模块的搜索路径中的。mkmyconfig命令为您写入此文件。</target>
        </trans-unit>
        <trans-unit id="2390e056e940a5d1d57f0dfd7aeb859feb7ef003" translate="yes" xml:space="preserve">
          <source>Default values for XSUB arguments can be specified by placing an assignment statement in the parameter list. The default value may be a number, a string or the special string &lt;code&gt;NO_INIT&lt;/code&gt; . Defaults should always be used on the right-most parameters only.</source>
          <target state="translated">XSUB参数的默认值可以通过在参数列表中放置赋值语句来指定。默认值可以是数字，字符串或特殊字符串 &lt;code&gt;NO_INIT&lt;/code&gt; 。默认值应始终仅在最右边的参数上使用。</target>
        </trans-unit>
        <trans-unit id="81f772b9ae8c83ec514638c4d22cc36a230db694" translate="yes" xml:space="preserve">
          <source>Default values for XSUB arguments can be specified by placing an assignment statement in the parameter list. The default value may be a number, a string or the special string &lt;code&gt;NO_INIT&lt;/code&gt;. Defaults should always be used on the right-most parameters only.</source>
          <target state="translated">XSUB参数的默认值可以通过在参数列表中放置赋值语句来指定。默认值可以是数字，字符串或特殊字符串 &lt;code&gt;NO_INIT&lt;/code&gt; 。默认值应始终仅在最右边的参数上使用。</target>
        </trans-unit>
        <trans-unit id="e93ec1e1c96c3b1bf551ee05ccfc36409dcb85bd" translate="yes" xml:space="preserve">
          <source>Default: 8</source>
          <target state="translated">默认值:8</target>
        </trans-unit>
        <trans-unit id="ff08b56fbed2f2f2f7b04ba5e78bf45aaa623f3a" translate="yes" xml:space="preserve">
          <source>Defaults and how to override them</source>
          <target state="translated">默认值和如何覆盖它们</target>
        </trans-unit>
        <trans-unit id="e134e0139099634855fa20d262decd51a88d9996" translate="yes" xml:space="preserve">
          <source>Defaults to &quot;$(OBJECT)&quot; and is used in the ld command to specify what files to link/load from (also see dynamic_lib below for how to specify ld flags)</source>
          <target state="translated">默认值为&quot;$(OBJECT)&quot;,在ld命令中用于指定要链接/加载的文件(关于如何指定ld标志,请参见下面的dynamic_lib)</target>
        </trans-unit>
        <trans-unit id="7061416449de7f47367c9fcf92dab2f1e9008d0c" translate="yes" xml:space="preserve">
          <source>Defaults to &quot;unknown&quot;.</source>
          <target state="translated">默认值为 &quot;未知&quot;。</target>
        </trans-unit>
        <trans-unit id="3afa08668c5c5dc51326fee541b5ff3c6d50395f" translate="yes" xml:space="preserve">
          <source>Defaults to $(DIST_DEFAULT) which in turn defaults to tardist.</source>
          <target state="translated">默认值为$(DIST_DEFAULT),它又默认为tardist。</target>
        </trans-unit>
        <trans-unit id="1e15a7e04559718dd148ec2dcf10c3805456f2a3" translate="yes" xml:space="preserve">
          <source>Defaults to $(FIRST_MAKEFILE).old or $(FIRST_MAKEFILE)_old on VMS.</source>
          <target state="translated">VMS上默认为$(FIRST_MAKEFILE).old或$(FIRST_MAKEFILE)_old。</target>
        </trans-unit>
        <trans-unit id="2f77e97345b6f70484f890ef33fb548347411e97" translate="yes" xml:space="preserve">
          <source>Defaults to $Config{installprefixexp}, falling back to $Config{installprefix}, $Config{prefixexp} or $Config{prefix} should $Config{installprefixexp} not exist.</source>
          <target state="translated">默认值为$Config{installprefixexp},如果$Config{installprefixexp}不存在,则恢复为$Config{installprefixexp}、$Config{prefixexp}或$Config{prefix}。</target>
        </trans-unit>
        <trans-unit id="0d2a34019b39d0a59222f4965b474dc8e60e223a" translate="yes" xml:space="preserve">
          <source>Defaults to $Config{installprivlib}.</source>
          <target state="translated">默认为$Config{installprivlib}。</target>
        </trans-unit>
        <trans-unit id="297039d02dfbd310b72f4d214dc03d0177d0f5ba" translate="yes" xml:space="preserve">
          <source>Defaults to $Config{lddlflags}.</source>
          <target state="translated">默认值为$Config{ldlflags}。</target>
        </trans-unit>
        <trans-unit id="1f5b612bc652d3b75be02b22a0c9c551d13e7785" translate="yes" xml:space="preserve">
          <source>Defaults to $Config{ld}.</source>
          <target state="translated">默认值为$Config{ld}。</target>
        </trans-unit>
        <trans-unit id="b736bfe876455ba787df5366a5e321959e9a06ef" translate="yes" xml:space="preserve">
          <source>Defaults to $Config{make}, which may go looking for a Make program in your environment.</source>
          <target state="translated">默认为$Config{make},它可能会在你的环境中去寻找一个Make程序。</target>
        </trans-unit>
        <trans-unit id="2a196b84e1a65651cad69ebad41443f48567f9d9" translate="yes" xml:space="preserve">
          <source>Defaults to $Config{siteprefixexp}. Perls prior to 5.6.0 didn't have an explicit siteprefix in the Config. In those cases $Config{installprefix} will be used.</source>
          <target state="translated">默认值为$Config{siteprefixexp}。5.6.0之前的Perls在Config中没有明确的siteprefix,在这种情况下,将使用$Config{installprefix}。在这种情况下,将使用 $Config{installprefix}。</target>
        </trans-unit>
        <trans-unit id="e39813b2a929031c5d759deba757efe05e4152c9" translate="yes" xml:space="preserve">
          <source>Defaults to $Config{vendorprefixexp}.</source>
          <target state="translated">默认值为$Config{vendorprefixexp}。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
