<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="978247bca9d3403d64cf859ab2ed2b97f350fddd" translate="yes" xml:space="preserve">
          <source>(F) The regular expression pattern had too many occurrences of the specified modifier. Remove the extraneous ones.</source>
          <target state="translated">（F）正则表达式模式出现过多的指定修饰符。删除无关的。</target>
        </trans-unit>
        <trans-unit id="fb146807dd8bffd1d737ec18cf6785cbc786b9a1" translate="yes" xml:space="preserve">
          <source>(F) The return statement was executed in mainline code, that is, where there was no subroutine call to return out of. See &lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt;.</source>
          <target state="translated">（F）return语句是在主线代码中执行的，即没有子程序调用要退出。参见&lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6098a03f6f4d905a3c17e165f83f7e82f485e102" translate="yes" xml:space="preserve">
          <source>(F) The script run under suidperl was somehow illegal.</source>
          <target state="translated">（F）在suidperl下运行的脚本某种程度上是非法的。</target>
        </trans-unit>
        <trans-unit id="d1e6728e09976d12977cdb710ec12cd9d87f9a0b" translate="yes" xml:space="preserve">
          <source>(F) The script you specified can't be opened for the indicated reason.</source>
          <target state="translated">（F）由于指示的原因，无法打开您指定的脚本。</target>
        </trans-unit>
        <trans-unit id="c648c9167e0761d360e421e5c128edf829466521" translate="yes" xml:space="preserve">
          <source>(F) The second argument of 3-argument open() is not among the list of valid modes: &lt;code&gt;&amp;lt;&lt;/code&gt; , &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; , &lt;code&gt;+&amp;lt;&lt;/code&gt; , &lt;code&gt;+&amp;gt;&lt;/code&gt;, &lt;code&gt;+&amp;gt;&amp;gt;&lt;/code&gt; , &lt;code&gt;-|&lt;/code&gt;, &lt;code&gt;|-&lt;/code&gt;, &lt;code&gt;&amp;lt;&amp;amp;&lt;/code&gt; , &lt;code&gt;&amp;gt;&amp;amp;&lt;/code&gt;.</source>
          <target state="translated">（F）3-参数open（）的第二个参数不在有效模式列表中： &lt;code&gt;&amp;lt;&lt;/code&gt; ， &lt;code&gt;&amp;gt;&lt;/code&gt; ， &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; ， &lt;code&gt;+&amp;lt;&lt;/code&gt; ， &lt;code&gt;+&amp;gt;&lt;/code&gt; ， &lt;code&gt;+&amp;gt;&amp;gt;&lt;/code&gt; ， &lt;code&gt;-|&lt;/code&gt; ， &lt;code&gt;|-&lt;/code&gt; ， &lt;code&gt;&amp;lt;&amp;amp;&lt;/code&gt; ， &lt;code&gt;&amp;gt;&amp;amp;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="78f88cd4d7e8c9f262e06df604cf9589c1386aa8" translate="yes" xml:space="preserve">
          <source>(F) The second listed construct is no longer legal. Use the first one instead.</source>
          <target state="translated">（F）所列第二种构筑物不再合法。请改用第一个。</target>
        </trans-unit>
        <trans-unit id="73565677aef5a71d0d726d26b5138853a074975a" translate="yes" xml:space="preserve">
          <source>(F) The sort comparison routine specified doesn't seem to exist. Perhaps it's in a different package? See &lt;a href=&quot;functions/sort&quot;&gt;sort&lt;/a&gt;.</source>
          <target state="translated">（F）指定的排序比较例程似乎不存在。也许在不同的包装中？参见&lt;a href=&quot;functions/sort&quot;&gt;sort&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0114042314b08da396c0973351c4c1d64ff26560" translate="yes" xml:space="preserve">
          <source>(F) The sort comparison routine specified is declared but doesn't seem to have been defined yet. See &lt;a href=&quot;functions/sort&quot;&gt;sort&lt;/a&gt;.</source>
          <target state="translated">（F）指定的排序比较例程已声明，但似乎尚未定义。参见&lt;a href=&quot;functions/sort&quot;&gt;sort&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="02a44bb32e2ab71cac8eb5e93643e84ef0b50f70" translate="yes" xml:space="preserve">
          <source>(F) The subroutine in question in the CORE package requires its argument to be a hard reference to data of the specified type. Overloading is ignored, so a reference to an object that is not the specified type, but nonetheless has overloading to handle it, will still not be accepted.</source>
          <target state="translated">（F）在CORE包中有问题的子例程要求其参数必须是对指定类型数据的硬引用。重载将被忽略，因此仍将不接受对非指定类型但具有重载处理能力的对象的引用。</target>
        </trans-unit>
        <trans-unit id="131b2b4686de1d556c01d4dd1862fb8a2b9f3187" translate="yes" xml:space="preserve">
          <source>(F) The subroutine indicated hasn't been defined, or if it was, it has since been undefined.</source>
          <target state="translated">（F）所指示的子例程尚未定义，或者如果已定义，则此子例程尚未定义。</target>
        </trans-unit>
        <trans-unit id="0d461a2225c0d1f6184ed9b285bc83659756adc9" translate="yes" xml:space="preserve">
          <source>(F) The subroutine registered to handle constant overloading (see &lt;a href=&quot;overload&quot;&gt;overload&lt;/a&gt;) or a custom charnames handler (see &lt;a href=&quot;charnames#CUSTOM-TRANSLATORS&quot;&gt;CUSTOM TRANSLATORS in charnames&lt;/a&gt;) returned an undefined value.</source>
          <target state="translated">（F）为处理常量重载（请参见&lt;a href=&quot;overload&quot;&gt;overload&lt;/a&gt;）或自定义字符名处理程序（请参见&lt;a href=&quot;charnames#CUSTOM-TRANSLATORS&quot;&gt;charnames中的CUSTOM TRANSLATORS&lt;/a&gt;）而注册的子例程返回了未定义的值。</target>
        </trans-unit>
        <trans-unit id="c1f9080c71015e15b2ade1852b5bbb2f135fe334" translate="yes" xml:space="preserve">
          <source>(F) The syntax for lexically scoped subroutines requires that they have a name with which they can be found.</source>
          <target state="translated">（F）词法范围子例程的语法要求它们具有一个名称，可用于查找它们。</target>
        </trans-unit>
        <trans-unit id="86799c3802b5c3eb669f8d1b3abde88c1c85b55b" translate="yes" xml:space="preserve">
          <source>(F) The target of a msgrcv must be modifiable to be used as a receive buffer.</source>
          <target state="translated">（F）msgrcv的目标必须可修改才能用作接收缓冲区。</target>
        </trans-unit>
        <trans-unit id="c47bab31a98eb7d154cf82e3145e626849df19bc" translate="yes" xml:space="preserve">
          <source>(F) The two-character sequence &lt;code&gt;&quot;(*&quot;&lt;/code&gt; in this context in a regular expression pattern should be an indivisible token, with nothing intervening between the &lt;code&gt;&quot;(&quot;&lt;/code&gt; and the &lt;code&gt;&quot;*&quot;&lt;/code&gt; , but you separated them.</source>
          <target state="translated">（F）在这种情况下，以正则表达式模式显示的两个字符序列 &lt;code&gt;&quot;(*&quot;&lt;/code&gt; 应该是不可分割的标记，在 &lt;code&gt;&quot;(&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;*&quot;&lt;/code&gt; 之间没有任何介入，但是您将它们分开。</target>
        </trans-unit>
        <trans-unit id="4ac1f45a5d66d522a06ae2f21cbf7d78e02aefd3" translate="yes" xml:space="preserve">
          <source>(F) The two-character sequence &lt;code&gt;&quot;(?&quot;&lt;/code&gt; in this context in a regular expression pattern should be an indivisible token, with nothing intervening between the &lt;code&gt;&quot;(&quot;&lt;/code&gt; and the &lt;code&gt;&quot;?&quot;&lt;/code&gt; , but you separated them with whitespace.</source>
          <target state="translated">（F）在这种情况下，在正则表达式模式中，两个字符的序列 &lt;code&gt;&quot;(?&quot;&lt;/code&gt; 应该是不可分割的标记， &lt;code&gt;&quot;(&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;?&quot;&lt;/code&gt; 之间没有任何介入，但是您要用空格分隔它们。</target>
        </trans-unit>
        <trans-unit id="6338350125dc05e2da942c8c96cdce98dfcfd9d1" translate="yes" xml:space="preserve">
          <source>(F) The unexec() routine failed for some reason. See your local FSF representative, who probably put it there in the first place.</source>
          <target state="translated">（F）unexec（）例程由于某种原因而失败。咨询您当地的FSF代表，他们可能首先把它放在那儿。</target>
        </trans-unit>
        <trans-unit id="431a67d1b0cf465108eb9ceb89999cf7e8b51c44" translate="yes" xml:space="preserve">
          <source>(F) The unpack format P must have an explicit size, not &quot;*&quot;.</source>
          <target state="translated">（F）解压缩格式P必须具有明确的大小，而不是&amp;ldquo; *&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="90d726bde677246d10d511c73ddeeacfe08405ad" translate="yes" xml:space="preserve">
          <source>(F) The yacc parser wanted to grow its stack so it could continue parsing, but realloc() wouldn't give it more memory, virtual or otherwise.</source>
          <target state="translated">（F）yacc解析器想要增加其堆栈，以便可以继续解析，但是realloc（）不会为它提供更多的虚拟或其他内存。</target>
        </trans-unit>
        <trans-unit id="f44de810af73fea203323979aad815bcd7d9964d" translate="yes" xml:space="preserve">
          <source>(F) There has to be at least one argument to syscall() to specify the system call to call, silly dilly.</source>
          <target state="translated">（F）syscall（）必须至少有一个参数来指定要调用的系统调用，傻傻。</target>
        </trans-unit>
        <trans-unit id="a2f074a2e8ab346dbefe5fa4f7b6b35652a24964" translate="yes" xml:space="preserve">
          <source>(F) There is a hard limit to how big a character code point can be due to the fundamental properties of UTF-8, especially on EBCDIC platforms. The given code point exceeds that. The only work-around is to not use such a large code point.</source>
          <target state="translated">（F）由于UTF-8的基本特性，尤其是在EBCDIC平台上，字符代码点的大小有一个硬性限制。给定的代码点超出了该范围。唯一的解决方法是不使用这么大的代码点。</target>
        </trans-unit>
        <trans-unit id="9f380236fa00fb1337e61e1e26cdde838c333724" translate="yes" xml:space="preserve">
          <source>(F) There is currently a limit on the length of string which lookbehind can handle. This restriction may be eased in a future release.</source>
          <target state="translated">（F）当前，后方可以处理的字符串长度受到限制。在将来的版本中，可以放宽此限制。</target>
        </trans-unit>
        <trans-unit id="8990b5566ba1d2c523ac5cbce2e5c82b254a3379" translate="yes" xml:space="preserve">
          <source>(F) There is currently a limit to the size of the min and max values of the {min,max} construct. The &amp;lt;-- HERE shows whereabouts in the regular expression the problem was discovered. See &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;.</source>
          <target state="translated">（F）当前{min，max}构造的最小值和最大值的大小受到限制。&amp;lt;-HERE在正则表达式中显示发现问题的行踪。参见&lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9d7d3d2963c2637edd12f3dffba89994c2d2f7a9" translate="yes" xml:space="preserve">
          <source>(F) There was a syntax error within the &lt;code&gt;(?[ ])&lt;/code&gt; . This can happen if the expression inside the construct was completely empty, or if there are too many or few operands for the number of operators. Perl is not smart enough to give you a more precise indication as to what is wrong.</source>
          <target state="translated">（F） &lt;code&gt;(?[ ])&lt;/code&gt; 存在语法错误。如果构造内部的表达式完全为空，或者操作数太多或太少，可能会发生这种情况。Perl不够聪明，无法为您提供有关错误原因的更精确指示。</target>
        </trans-unit>
        <trans-unit id="4eb4ec6847fb1118e2525f7981c3417b2f856d1d" translate="yes" xml:space="preserve">
          <source>(F) These three characters may not appear in sequence in a double-quotish context. This message is raised only on non-ASCII platforms (a different error message is output on ASCII ones). If you were intending to specify a control character with this sequence, you'll have to use a different way to specify it.</source>
          <target state="translated">（F）这三个字符可能不会在双引号上下文中顺序出现。仅在非ASCII平台上引发此消息（在ASCII平台上输出不同的错误消息）。如果打算以此顺序指定控制字符，则必须使用其他方式来指定它。</target>
        </trans-unit>
        <trans-unit id="d0fbd9a1ce33856fbe443b09236ca0d2e6033730" translate="yes" xml:space="preserve">
          <source>(F) This attribute was never supported on &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt;&lt;/code&gt; declarations.</source>
          <target state="translated">（F） &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt;&lt;/code&gt; 声明中从未支持此属性。</target>
        </trans-unit>
        <trans-unit id="0873a290fa7a085e52a7a007966e3db2d08ff859" translate="yes" xml:space="preserve">
          <source>(F) This error is likely to occur if you run a perl5 script through a perl4 interpreter, especially if the next 2 tokens are &quot;use strict&quot; or &quot;my $var&quot; or &quot;our $var&quot;.</source>
          <target state="translated">（F）如果通过perl4解释器运行perl5脚本，则可能发生此错误，尤其是如果接下来的两个标记是&amp;ldquo;使用严格的&amp;rdquo;或&amp;ldquo;我的$ var&amp;rdquo;或&amp;ldquo;我们的$ var&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="072063c3c77b06ca14bcbe935ab879cda865cbc8" translate="yes" xml:space="preserve">
          <source>(F) This function requires the argument in that position to be of a certain type. Arrays must be @NAME or &lt;code&gt;@{EXPR}&lt;/code&gt; . Hashes must be %NAME or &lt;code&gt;%{EXPR}&lt;/code&gt; . No implicit dereferencing is allowed--use the {EXPR} forms as an explicit dereference. See &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt;.</source>
          <target state="translated">（F）此函数要求该位置的参数为某种类型。数组必须为@NAME或 &lt;code&gt;@{EXPR}&lt;/code&gt; 。哈希必须为％NAME或 &lt;code&gt;%{EXPR}&lt;/code&gt; 。不允许隐式取消引用-使用{EXPR}形式作为显式取消引用。参见&lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1150339443a2f3fcc56e05f6118226e750c50df8" translate="yes" xml:space="preserve">
          <source>(F) This machine doesn't have either waitpid() or wait4(), so only waitpid() without flags is emulated.</source>
          <target state="translated">（F）这台机器没有waitpid（）或wait4（），因此仅模拟不带标志的waitpid（）。</target>
        </trans-unit>
        <trans-unit id="fd0654da02073cc9adf857d0c5788597f5428534" translate="yes" xml:space="preserve">
          <source>(F) This machine doesn't implement the indicated function, apparently. At least, Configure doesn't think so.</source>
          <target state="translated">（F）很显然，这台机器未实现所指示的功能。至少，Configure并不这么认为。</target>
        </trans-unit>
        <trans-unit id="9d9555c2ff07536a7cbecd77280984ed7335b6ec" translate="yes" xml:space="preserve">
          <source>(F) This machine doesn't implement the select() system call.</source>
          <target state="translated">（F）本机未实现select（）系统调用。</target>
        </trans-unit>
        <trans-unit id="8dc3e365a694fcea3f4c0e265853724c37e64b9f" translate="yes" xml:space="preserve">
          <source>(F) This message occurs when a here document label has an initial quotation mark but the final quotation mark is missing. Perhaps you wrote:</source>
          <target state="translated">（F）当此处文档标签带有初始引号但缺少最终引号时，会出现此消息。也许您写道：</target>
        </trans-unit>
        <trans-unit id="a9c87d2ef6abbf95bce14ad28895eeb35849f28e" translate="yes" xml:space="preserve">
          <source>(F) To do aliasing via references, you must first enable the feature:</source>
          <target state="translated">（F）要通过引用进行别名，必须首先启用该功能：</target>
        </trans-unit>
        <trans-unit id="c4f74a0f4a79056501938fe765e53b471441e18b" translate="yes" xml:space="preserve">
          <source>(F) To use lexical subs, you must first enable them:</source>
          <target state="translated">（F）要使用词法子，必须首先启用它们：</target>
        </trans-unit>
        <trans-unit id="ce0b329dc2a2c16604936f52a5411eec19f03eb8" translate="yes" xml:space="preserve">
          <source>(F) To use subroutine signatures, you must first enable them:</source>
          <target state="translated">（F）要使用子例程签名，必须首先启用它们：</target>
        </trans-unit>
        <trans-unit id="9abc2a089bebce3d14588d841da52d24618c89c6" translate="yes" xml:space="preserve">
          <source>(F) Turning off the given modifier has the side effect of turning on another one. Perl currently doesn't allow this. Reword the regular expression to use the modifier you want to turn on (and place it before the minus), instead of the one you want to turn off.</source>
          <target state="translated">（F）关闭给定的修饰符具有打开另一个修饰符的副作用。Perl当前不允许这样做。重命名正则表达式以使用要打开的修饰符（并将其放在减号之前），而不是要关闭的修饰符。</target>
        </trans-unit>
        <trans-unit id="6197e8e862dcf3b1e9487203e3bdd41fc94f2119" translate="yes" xml:space="preserve">
          <source>(F) Unbackslashed parentheses must always be balanced in regular expressions. If you're a vi user, the % key is valuable for finding the matching parenthesis. The &amp;lt;-- HERE shows whereabouts in the regular expression the problem was discovered. See &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;.</source>
          <target state="translated">（F）在正则表达式中必须始终使反斜线括号保持平衡。如果您是vi用户，则％键对于查找匹配的括号非常有用。 &amp;lt;-HERE在正则表达式中显示发现问题的行踪。参见&lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ef132c317497935108203b678529cc021105f980" translate="yes" xml:space="preserve">
          <source>(F) Unlike with &quot;next&quot; or &quot;last&quot;, you're not allowed to goto an unspecified destination. See &lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt;.</source>
          <target state="translated">（F）与&amp;ldquo;下一个&amp;rdquo;或&amp;ldquo;最后一个&amp;rdquo;不同，您不允许进入未指定的目的地。参见&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a69241a833fdee19eac50524c07efa679cbe144b" translate="yes" xml:space="preserve">
          <source>(F) Using the &lt;code&gt;!~&lt;/code&gt; operator with &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///r&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr///r&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/y&quot;&gt;y///r&lt;/a&gt;&lt;/code&gt; is currently reserved for future use, as the exact behavior has not been decided. (Simply returning the boolean opposite of the modified string is usually not particularly useful.)</source>
          <target state="translated">（F）将 &lt;code&gt;!~&lt;/code&gt; 运算符与 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///r&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr///r&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;functions/y&quot;&gt;y///r&lt;/a&gt;&lt;/code&gt; 当前保留供将来使用，因为尚未确定确切的行为。（仅返回与修改后的字符串相反的布尔值通常不是特别有用。）</target>
        </trans-unit>
        <trans-unit id="9f376943797958f9715d499865da4a5eec3ac339" translate="yes" xml:space="preserve">
          <source>(F) When &lt;code&gt;&lt;a href=&quot;functions/vec&quot;&gt;vec&lt;/a&gt;&lt;/code&gt; is called in an lvalue context, the second argument must be greater than or equal to zero.</source>
          <target state="translated">（F）在左值上下文中调用 &lt;code&gt;&lt;a href=&quot;functions/vec&quot;&gt;vec&lt;/a&gt;&lt;/code&gt; 时，第二个参数必须大于或等于零。</target>
        </trans-unit>
        <trans-unit id="8d156b4640c10bcbe7a47acc356f8e9dc776289b" translate="yes" xml:space="preserve">
          <source>(F) When compiling a regex pattern, an unresolved named character or sequence was encountered. This can happen in any of several ways that bypass the lexer, such as using single-quotish context, or an extra backslash in double-quotish:</source>
          <target state="translated">（F）编译正则表达式模式时，遇到了无法解析的命名字符或序列。这可以通过绕过词法分析器的几种方式中的任何一种来发生，例如使用单引号上下文，或在双引号中使用额外的反斜杠：</target>
        </trans-unit>
        <trans-unit id="fe723f68464447de981e4ddb6e078b0eaf3c11d2" translate="yes" xml:space="preserve">
          <source>(F) When the &quot;array_base&quot; feature is disabled (e.g., under &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.16;&lt;/code&gt; ) the special variable &lt;code&gt;$[&lt;/code&gt; , which is deprecated, is now a fixed zero value.</source>
          <target state="translated">（F）禁用&amp;ldquo; array_base&amp;rdquo;功能（例如，在 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.16;&lt;/code&gt; ），不赞成使用的特殊变量 &lt;code&gt;$[&lt;/code&gt; 现在为固定的零值。</target>
        </trans-unit>
        <trans-unit id="f3c9b4275675f1ccb22d79246d69cfb1e07c9cda" translate="yes" xml:space="preserve">
          <source>(F) When trying to initialize the random seed for hashes, Perl could not get any randomness out of your system. This usually indicates Something Very Wrong.</source>
          <target state="translated">（F）尝试初始化哈希的随机种子时，Perl无法从系统中获得任何随机性。这通常表明存在严重问题。</target>
        </trans-unit>
        <trans-unit id="429d342ada3c44defc7898eb10baa70d3135766a" translate="yes" xml:space="preserve">
          <source>(F) When using the &lt;code&gt;&lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt;&lt;/code&gt; keyword to construct an anonymous subroutine, you must always specify a block of code. See &lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt;.</source>
          <target state="translated">（F）使用 &lt;code&gt;&lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt;&lt;/code&gt; 关键字构造匿名子例程时，必须始终指定代码块。参见&lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="27df7cdfafc4264c73dc05b85aa8988bb48958bd" translate="yes" xml:space="preserve">
          <source>(F) While calculating the method resolution order (MRO) of a package, Perl believes it found an infinite loop in the &lt;code&gt;@ISA&lt;/code&gt; hierarchy. This is a crude check that bails out after 100 levels of &lt;code&gt;@ISA&lt;/code&gt; depth.</source>
          <target state="translated">（F）在计算包的方法解析顺序（MRO）时，Perl认为它在 &lt;code&gt;@ISA&lt;/code&gt; 层次结构中发现了一个无限循环。这是一个粗略的检查，它在 &lt;code&gt;@ISA&lt;/code&gt; 深度达到100级别后才退出。</target>
        </trans-unit>
        <trans-unit id="4f646db7bb15defe8dcbadd597ceedd7f3094d3f" translate="yes" xml:space="preserve">
          <source>(F) While certain functions allow you to specify a filehandle or an &quot;indirect object&quot; before the argument list, this ain't one of them.</source>
          <target state="translated">（F）尽管某些函数允许您在参数列表之前指定文件句柄或&amp;ldquo;间接对象&amp;rdquo;，但这不是其中之一。</target>
        </trans-unit>
        <trans-unit id="7704c3dc27f023396cfb31711ae6b4d2c36c63ab" translate="yes" xml:space="preserve">
          <source>(F) While under the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; filetest&lt;/code&gt; pragma, switching the real and effective uids or gids failed.</source>
          <target state="translated">（F）在 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; filetest&lt;/code&gt; 编译指示的情况下，切换真实有效的uid或gid失败。</target>
        </trans-unit>
        <trans-unit id="1936a7a9cbb0a3cddb41548a792c3cf332475e2f" translate="yes" xml:space="preserve">
          <source>(F) While under the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; filetest&lt;/code&gt; pragma, we cannot switch the real and effective uids or gids.</source>
          <target state="translated">（F）在 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; filetest&lt;/code&gt; 编译指示的情况下，我们无法切换实际有效的uid或gid。</target>
        </trans-unit>
        <trans-unit id="88b481d25e0c70a1fc8e1c7329f7e69ee3d1c763" translate="yes" xml:space="preserve">
          <source>(F) While unpacking, the string buffer was already used up when an unpack length/code combination tried to obtain more data. This results in an undefined value for the length. See &lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;.</source>
          <target state="translated">（F）拆包时，当拆包长度/代码组合尝试获取更多数据时，字符串缓冲区已用完。这导致长度的不确定值。参见&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="085e32de8d9a6f788cee92e9844af3b934798795" translate="yes" xml:space="preserve">
          <source>(F) With &quot;strict subs&quot; in use, a bareword is only allowed as a subroutine identifier, in curly brackets or to the left of the &quot;=&amp;gt;&quot; symbol. Perhaps you need to predeclare a subroutine?</source>
          <target state="translated">（F）使用&amp;ldquo; strict subs&amp;rdquo;时，仅允许在大括号中或在&amp;ldquo; =&amp;gt;&amp;rdquo;符号左侧将裸字用作子例程标识符。也许您需要预先声明一个子例程？</target>
        </trans-unit>
        <trans-unit id="57b58322640707b7a82902e3e6f2ebe64dfc6537" translate="yes" xml:space="preserve">
          <source>(F) Within &lt;code&gt;(?[   ])&lt;/code&gt; , all constants interpreted as octal need to be exactly 3 digits long. This helps catch some ambiguities. If your constant is too short, add leading zeros, like</source>
          <target state="translated">（F）在 &lt;code&gt;(?[ ])&lt;/code&gt; ，所有解释为八进制的常量都必须正好是3位数字。这有助于捕捉一些歧义。如果您的常数太短，请添加前导零，例如</target>
        </trans-unit>
        <trans-unit id="ca2f25d275463356f7bf3b1dbff55ce157785fd6" translate="yes" xml:space="preserve">
          <source>(F) Within regular expression character classes ([]) the syntax beginning with &quot;[.&quot; and ending with &quot;.]&quot; is reserved for future extensions. If you need to represent those character sequences inside a regular expression character class, just quote the square brackets with the backslash: &quot;\[.&quot; and &quot;.\]&quot;. The &amp;lt;-- HERE shows whereabouts in the regular expression the problem was discovered. See &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;.</source>
          <target state="translated">（F）在正则表达式字符类（[]）中，语法以&amp;ldquo; [。&amp;rdquo;开头。并以&amp;ldquo;。]&amp;rdquo;结尾保留用于将来的扩展。如果需要在正则表达式字符类中表示这些字符序列，只需在方括号中加上反斜杠：&amp;ldquo; \ [。&amp;rdquo; 和&amp;ldquo;。\]&amp;rdquo;。&amp;lt;-HERE在正则表达式中显示发现问题的行踪。参见&lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="184842463e428b6f1dafd75047f736cd537b4170" translate="yes" xml:space="preserve">
          <source>(F) Within regular expression character classes ([]) the syntax beginning with &quot;[=&quot; and ending with &quot;=]&quot; is reserved for future extensions. If you need to represent those character sequences inside a regular expression character class, just quote the square brackets with the backslash: &quot;\[=&quot; and &quot;=\]&quot;. The &amp;lt;-- HERE shows whereabouts in the regular expression the problem was discovered. See &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;.</source>
          <target state="translated">（F）在正则表达式字符类（[]）中，以&amp;ldquo; [=&amp;rdquo;开始并以&amp;ldquo; =]结束&amp;rdquo;的语法保留给以后的扩展。如果您需要在正则表达式字符类中表示这些字符序列，只需在方括号中加上反斜杠：&amp;ldquo; \ [=&amp;rdquo;和&amp;ldquo; = \]&amp;rdquo;。 &amp;lt;-HERE在正则表达式中显示发现问题的行踪。参见&lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="23ace6fcb5c6042cbd75db4ef61b09d578c80b5d" translate="yes" xml:space="preserve">
          <source>(F) Wrong syntax of character name literal &lt;code&gt;\N{charname}&lt;/code&gt; within double-quotish context. This can also happen when there is a space (or comment) between the &lt;code&gt;\N&lt;/code&gt; and the &lt;code&gt;{&lt;/code&gt; in a regex with the &lt;code&gt;/x&lt;/code&gt; modifier. This modifier does not change the requirement that the brace immediately follow the &lt;code&gt;\N&lt;/code&gt; .</source>
          <target state="translated">（F）在双引号上下文中字符名称文字 &lt;code&gt;\N{charname}&lt;/code&gt; 语法错误。当 &lt;code&gt;\N&lt;/code&gt; 和 &lt;code&gt;{&lt;/code&gt; 之间的空格（或注释）在带有 &lt;code&gt;/x&lt;/code&gt; 修饰符的正则表达式中时，也会发生这种情况。此修饰符不会更改括号紧跟 &lt;code&gt;\N&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6085a2af88a6a17e8acce3a5bf453724b8738a30" translate="yes" xml:space="preserve">
          <source>(F) You aren't allowed to assign to the item indicated, or otherwise try to change it, such as with an auto-increment.</source>
          <target state="translated">（F）不允许您分配给指定的项目，或尝试进行其他更改，例如使用自动增量。</target>
        </trans-unit>
        <trans-unit id="2864db319e3825d1d1fe85827e0d4f48aac1fe06" translate="yes" xml:space="preserve">
          <source>(F) You assigned a magical array to a stash element, and then tried to use the subroutine from the same slot. You are asking Perl to do something it cannot do, details subject to change between Perl versions.</source>
          <target state="translated">（F）您为存储元素分配了一个魔术数组，然后尝试使用同一插槽中的子例程。您要Perl做一些它不能做的事情，细节可能会因Perl版本而异。</target>
        </trans-unit>
        <trans-unit id="48b3c575f41492c8a08aae2fc35e03de3a72fa07" translate="yes" xml:space="preserve">
          <source>(F) You attempted to force a different byte-order on a type that is already inside a group with a byte-order modifier. For example you cannot force little-endianness on a type that is inside a big-endian group.</source>
          <target state="translated">（F）您试图使用字节顺序修饰符对已经在组内的类型强制使用不同的字节顺序。例如，您不能在big-endian组内的类型上强制使用little-endianness。</target>
        </trans-unit>
        <trans-unit id="881171db5044f0b6f8f4e215fe9373ac4174c267" translate="yes" xml:space="preserve">
          <source>(F) You attempted to use a feature of printf that is accessible from only C. This usually means there's a better way to do it in Perl.</source>
          <target state="translated">（F）您试图使用仅可通过C访问的printf功能。这通常意味着在Perl中有更好的方法。</target>
        </trans-unit>
        <trans-unit id="728c161408cd75b5d520b698e4038e343ec4ac30" translate="yes" xml:space="preserve">
          <source>(F) You attempted to weaken something that was not a reference. Only references can be weakened.</source>
          <target state="translated">（F）您试图弱化不是参考的东西。只有参考可以被削弱。</target>
        </trans-unit>
        <trans-unit id="db53cc2ffe8f47dd52c929a1c646e99df3d56fdd" translate="yes" xml:space="preserve">
          <source>(F) You called &lt;code&gt;&lt;a href=&quot;functions/continue&quot;&gt;continue&lt;/a&gt;&lt;/code&gt;, but you're not inside a &lt;code&gt;when&lt;/code&gt; or &lt;code&gt;default&lt;/code&gt; block.</source>
          <target state="translated">（F）您调用了 &lt;code&gt;&lt;a href=&quot;functions/continue&quot;&gt;continue&lt;/a&gt;&lt;/code&gt; ，但您不在 &lt;code&gt;when&lt;/code&gt; 或 &lt;code&gt;default&lt;/code&gt; 块内。</target>
        </trans-unit>
        <trans-unit id="01c970d384c2616397c0a011951a34cd7d7f13a9" translate="yes" xml:space="preserve">
          <source>(F) You called &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; with a scalar argument that was not a reference to an unblessed hash or array.</source>
          <target state="translated">（F）您调用了 &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; 一个都带有标量参数，该标量参数不是对非哈希或数组的引用。</target>
        </trans-unit>
        <trans-unit id="6b094e996ef83ed82c43ddac6981b6045c764ee9" translate="yes" xml:space="preserve">
          <source>(F) You called &lt;code&gt;&lt;a href=&quot;functions/reset&quot;&gt;reset('E')&lt;/a&gt;&lt;/code&gt; or similar, which tried to reset all variables in the current package beginning with &quot;E&quot;. In the main package, that includes %ENV. Resetting %ENV is not supported on some systems, notably VMS.</source>
          <target state="translated">（F）您调用了 &lt;code&gt;&lt;a href=&quot;functions/reset&quot;&gt;reset('E')&lt;/a&gt;&lt;/code&gt; 或类似的名称，它试图重置以&amp;ldquo; E&amp;rdquo;开头的当前包中的所有变量。在主程序包中，其中包括％ENV。在某些系统上（特别是VMS）不支持重置％ENV。</target>
        </trans-unit>
        <trans-unit id="36ff677e364d25b1175bceb5641a5524d40444a4" translate="yes" xml:space="preserve">
          <source>(F) You called &lt;code&gt;break&lt;/code&gt; , but you're in a &lt;code&gt;foreach&lt;/code&gt; block rather than a &lt;code&gt;given&lt;/code&gt; block. You probably meant to use &lt;code&gt;&lt;a href=&quot;functions/next&quot;&gt;next&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">（F）您打电话给 &lt;code&gt;break&lt;/code&gt; ，但是您在一个 &lt;code&gt;foreach&lt;/code&gt; 块中，而不是在 &lt;code&gt;given&lt;/code&gt; 块中。您可能打算使用 &lt;code&gt;&lt;a href=&quot;functions/next&quot;&gt;next&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a94b23e66ba8af20ac0a9a060de4e6b205849b27" translate="yes" xml:space="preserve">
          <source>(F) You called &lt;code&gt;break&lt;/code&gt; , but you're not inside a &lt;code&gt;given&lt;/code&gt; block.</source>
          <target state="translated">（F）您打电话给 &lt;code&gt;break&lt;/code&gt; ，但您不在 &lt;code&gt;given&lt;/code&gt; 区块内。</target>
        </trans-unit>
        <trans-unit id="f14d8e7b888e9377c887b6f95ac5ca271482a594" translate="yes" xml:space="preserve">
          <source>(F) You called &lt;code&gt;perl -x/foo/bar&lt;/code&gt;, but</source>
          <target state="translated">[F）您调用了 &lt;code&gt;perl -x/foo/bar&lt;/code&gt; ，但是</target>
        </trans-unit>
        <trans-unit id="959aa754460eae6feb41ec2111629d96ea9088b3" translate="yes" xml:space="preserve">
          <source>(F) You called &lt;code&gt;perl -x&lt;/code&gt; , but no line was found in the file beginning with #! and containing the word &quot;perl&quot;.</source>
          <target state="translated">（F）您调用了 &lt;code&gt;perl -x&lt;/code&gt; ，但是在以＃开头的文件中未找到任何行！并包含&amp;ldquo; perl&amp;rdquo;一词。</target>
        </trans-unit>
        <trans-unit id="9bb41d38c25f72d107dd36f047a0576786e0f888" translate="yes" xml:space="preserve">
          <source>(F) You called a POSIX function with incorrect arguments. See &lt;a href=&quot;posix#FUNCTIONS&quot;&gt;FUNCTIONS in POSIX&lt;/a&gt; for more information.</source>
          <target state="translated">（F）您使用错误的参数调用了POSIX函数。有关更多信息，请参见&lt;a href=&quot;posix#FUNCTIONS&quot;&gt;POSIX中的FUNCTIONS&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3192604eca8b0e227b09ffeb639a165560966235" translate="yes" xml:space="preserve">
          <source>(F) You called a Win32 function with incorrect arguments. See &lt;a href=&quot;http://search.cpan.org/perldoc/Win32&quot;&gt;Win32&lt;/a&gt; for more information.</source>
          <target state="translated">（F）您使用错误的参数调用了Win32函数。有关更多信息，请参见&lt;a href=&quot;http://search.cpan.org/perldoc/Win32&quot;&gt;Win32&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7d88973c081ed5a972414a044844388eb37b6b45" translate="yes" xml:space="preserve">
          <source>(F) You called a method correctly, and it correctly indicated a package functioning as a class, but that package doesn't define that particular method, nor does any of its base classes. See &lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt;.</source>
          <target state="translated">（F）您正确地调用了一个方法，并且正确地指示了一个程序包充当类，但是该程序包未定义该特定方法，也未定义任何基类。参见&lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9f61b9ada30955bc47801192dbc7ef72d2b2b646" translate="yes" xml:space="preserve">
          <source>(F) You called a method on a class that did not exist, and the method could not be found in UNIVERSAL. This often means that a method requires a package that has not been loaded.</source>
          <target state="translated">（F）您在一个不存在的类上调用了一个方法，而该方法在UNIVERSAL中找不到。这通常意味着方法需要尚未加载的程序包。</target>
        </trans-unit>
        <trans-unit id="1336a6e6dba767fccca5ebd6cbbb62ddfc475b1a" translate="yes" xml:space="preserve">
          <source>(F) You can't allocate more than 2^31+&quot;small amount&quot; bytes. This error is most likely to be caused by a typo in the Perl program. e.g., &lt;code&gt;$arr[&lt;a href=&quot;functions/time&quot;&gt;time&lt;/a&gt;]&lt;/code&gt; instead of &lt;code&gt;$arr[$time]&lt;/code&gt; .</source>
          <target state="translated">（F）您分配的字节数不能超过2 ^ 31 +个&amp;ldquo;少量&amp;rdquo;。此错误最有可能是由Perl程序中的错字引起的。例如， &lt;code&gt;$arr[&lt;a href=&quot;functions/time&quot;&gt;time&lt;/a&gt;]&lt;/code&gt; 而不是 &lt;code&gt;$arr[$time]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7541195c06352428d79ecf0a2e278770c3c338dc" translate="yes" xml:space="preserve">
          <source>(F) You can't allocate more than 64K on an MS-DOS machine.</source>
          <target state="translated">（F）您不能在MS-DOS计算机上分配超过64K的内存。</target>
        </trans-unit>
        <trans-unit id="7c53fc87dcd05fe5f00ccdfcb49ee87c276ed05e" translate="yes" xml:space="preserve">
          <source>(F) You can't pack a string by supplying a checksum, because the checksumming process loses information, and you can't go the other way. See &lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;.</source>
          <target state="translated">（F）您不能通过提供校验和来打包字符串，因为校验和过程会丢失信息，并且您也无法采用其他方法。请参阅&lt;a href=&quot;functions/unpack&quot;&gt;解压缩&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="08f464b49db854661463a9bddef0641f9cff5fca" translate="yes" xml:space="preserve">
          <source>(F) You can't quantify a quantifier without intervening parentheses. So things like ** or +* or ?* are illegal. The &amp;lt;-- HERE shows whereabouts in the regular expression the problem was discovered.</source>
          <target state="translated">（F）您必须在没有括号的情况下对量词进行量化。因此，诸如**或+ *或？*之类的东西都是非法的。&amp;lt;-HERE在正则表达式中显示发现问题的行踪。</target>
        </trans-unit>
        <trans-unit id="753e95513d152b3ef3c87f9d85f4b69f49fd9049" translate="yes" xml:space="preserve">
          <source>(F) You can't specify a repeat count so large that it overflows your signed integers. See &lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;.</source>
          <target state="translated">（F）您不能指定太大的重复计数以至于溢出您的带符号整数。参见&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7a0bcac42f7bf3cb15b64e755518b6c3ad156ec2" translate="yes" xml:space="preserve">
          <source>(F) You can't undefine a routine that's currently running. You can, however, redefine it while it's running, and you can even undef the redefined subroutine while the old routine is running. Go figure.</source>
          <target state="translated">（F）您不能取消定义当前正在运行的例程。但是，您可以在运行时重新定义它，甚至可以在旧例程运行时取消对重新定义的子例程的定义。去搞清楚。</target>
        </trans-unit>
        <trans-unit id="ea506a10d071b33e6fc01bda3a808cecda0317de" translate="yes" xml:space="preserve">
          <source>(F) You can't use system(), exec(), or a piped open in a setuid or setgid script if &lt;code&gt;$ENV{PATH}&lt;/code&gt; contains a directory that is writable by the world. Also, the PATH must not contain any relative directory. See &lt;a href=&quot;perlsec&quot;&gt;perlsec&lt;/a&gt;.</source>
          <target state="translated">（F）如果 &lt;code&gt;$ENV{PATH}&lt;/code&gt; 包含可被世界写入的目录，则不能在setuid或setgid脚本中使用system（），exec（）或管道打开。另外，PATH不得包含任何相对目录。参见&lt;a href=&quot;perlsec&quot;&gt;perlsec&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e90d9e25e945b5713e6c94226c8cb00752fe5ab5" translate="yes" xml:space="preserve">
          <source>(F) You can't use system(), exec(), or a piped open in a setuid or setgid script if any of &lt;code&gt;$ENV{PATH}&lt;/code&gt; , &lt;code&gt;$ENV{IFS}&lt;/code&gt; , &lt;code&gt;$ENV{CDPATH}&lt;/code&gt; , &lt;code&gt;$ENV{ENV}&lt;/code&gt; , &lt;code&gt;$ENV{BASH_ENV}&lt;/code&gt; or &lt;code&gt;$ENV{TERM}&lt;/code&gt; are derived from data supplied (or potentially supplied) by the user. The script must set the path to a known value, using trustworthy data. See &lt;a href=&quot;perlsec&quot;&gt;perlsec&lt;/a&gt;.</source>
          <target state="translated">（F）如果 &lt;code&gt;$ENV{PATH}&lt;/code&gt; ， &lt;code&gt;$ENV{IFS}&lt;/code&gt; ， &lt;code&gt;$ENV{CDPATH}&lt;/code&gt; ， &lt;code&gt;$ENV{ENV}&lt;/code&gt; 任何一个，则不能在setuid或setgid脚本中使用system（），exec（）或管道打开ENV}， &lt;code&gt;$ENV{BASH_ENV}&lt;/code&gt; 或 &lt;code&gt;$ENV{TERM}&lt;/code&gt; 源自用户提供（或潜在提供）的数据。脚本必须使用可信赖的数据将路径设置为已知值。参见&lt;a href=&quot;perlsec&quot;&gt;perlsec&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a2d155a35fbe179a6def203f6dec66d58ac7b169" translate="yes" xml:space="preserve">
          <source>(F) You cannot put a repeat count of any kind right after the '/' code. See &lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;.</source>
          <target state="translated">（F）您不能在'/'代码后加上任何形式的重复计数。参见&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d0036f720d6af192b41b5e61e7134c67524c579b" translate="yes" xml:space="preserve">
          <source>(F) You defined a character name which ended in a space character. Remove the trailing space(s). Usually these names are defined in the &lt;code&gt;:alias&lt;/code&gt; import argument to &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; charnames&lt;/code&gt; , but they could be defined by a translator installed into &lt;code&gt;$^H{charnames}&lt;/code&gt; . See &lt;a href=&quot;charnames#CUSTOM-ALIASES&quot;&gt;CUSTOM ALIASES in charnames&lt;/a&gt;.</source>
          <target state="translated">（F）您定义了以空格字符结尾的字符名称。删除尾随空格。通常，这些名称在 &lt;code&gt;:alias&lt;/code&gt; import参数中定义以 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; charnames&lt;/code&gt; ，但是可以由安装在 &lt;code&gt;$^H{charnames}&lt;/code&gt; 的翻译器定义。请参阅&lt;a href=&quot;charnames#CUSTOM-ALIASES&quot;&gt;字符名称中的自定义别名&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f3b44bdb6c023b94037f6e9d1051841408750246" translate="yes" xml:space="preserve">
          <source>(F) You defined a character name which had multiple space characters in a row. Change them to single spaces. Usually these names are defined in the &lt;code&gt;:alias&lt;/code&gt; import argument to &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; charnames&lt;/code&gt; , but they could be defined by a translator installed into &lt;code&gt;$^H{charnames}&lt;/code&gt; . See &lt;a href=&quot;charnames#CUSTOM-ALIASES&quot;&gt;CUSTOM ALIASES in charnames&lt;/a&gt;.</source>
          <target state="translated">（F）您定义了一个字符名称，该名称连续有多个空格字符。将它们更改为单个空格。通常，这些名称在 &lt;code&gt;:alias&lt;/code&gt; import参数中定义以 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; charnames&lt;/code&gt; ，但是可以由安装在 &lt;code&gt;$^H{charnames}&lt;/code&gt; 的翻译器定义。请参阅&lt;a href=&quot;charnames#CUSTOM-ALIASES&quot;&gt;字符名称中的自定义别名&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4b7a33dd0652c526df86e81d06336bdd27b9973d" translate="yes" xml:space="preserve">
          <source>(F) You don't have System V message IPC on your system.</source>
          <target state="translated">（F）您的系统上没有System V消息IPC。</target>
        </trans-unit>
        <trans-unit id="29929620c9605299c2f9c77d2074fe7125d8bc7c" translate="yes" xml:space="preserve">
          <source>(F) You don't have System V semaphore IPC on your system.</source>
          <target state="translated">（F）您的系统上没有System V信号量IPC。</target>
        </trans-unit>
        <trans-unit id="c47629f7d67107091ad51fd87097bf44694305dd" translate="yes" xml:space="preserve">
          <source>(F) You don't have System V shared memory IPC on your system.</source>
          <target state="translated">（F）您的系统上没有System V共享内存IPC。</target>
        </trans-unit>
        <trans-unit id="c1f976fcf6bcf428955989210860a95e623785e6" translate="yes" xml:space="preserve">
          <source>(F) You either made a typo or have incorrectly put a &lt;code&gt;*&lt;/code&gt; quantifier after an open brace in your pattern. Check the pattern and review &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt; for details on legal verb patterns.</source>
          <target state="translated">（F）您输入了错字或在花括号中的右括号后错误地放置了 &lt;code&gt;*&lt;/code&gt; 量词。检查模式并查看&lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;以获取有关法律动词模式的详细信息。</target>
        </trans-unit>
        <trans-unit id="c95811d7212e7295e15b87ad9e57bf816525ebfd" translate="yes" xml:space="preserve">
          <source>(F) You had a (sub-)template that ends with a '/'. There must be another template code following the slash. See &lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;.</source>
          <target state="translated">（F）您有一个以'/'结尾的（子）模板。斜杠后必须有另一个模板代码。参见&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c5a10b0407273cd3af5f825d2181cc8e51638847" translate="yes" xml:space="preserve">
          <source>(F) You had a (un)pack template that specified a relative position before the beginning of the string being (un)packed. See &lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;.</source>
          <target state="translated">（F）您有一个（未打包）模板，该模板指定了要（未打包）字符串开头之前的相对位置。参见&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="aa4e3d887c8e937ba03881be0c0e64968d5e38b5" translate="yes" xml:space="preserve">
          <source>(F) You had a pack template that specified a relative position after the end of the string being unpacked. See &lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;.</source>
          <target state="translated">（F）您有一个打包模板，该模板指定了要解压缩的字符串结尾之后的相对位置。参见&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1f5244e28bff8422e1ce0fb0add00a7be0a2f69d" translate="yes" xml:space="preserve">
          <source>(F) You had a template that specified an absolute position outside the string being unpacked. See &lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;.</source>
          <target state="translated">（F）您有一个模板，该模板指定了要解压缩的字符串之外的绝对位置。参见&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="32831fac2b41a8125e84e4455d9a1b2e507b293a" translate="yes" xml:space="preserve">
          <source>(F) You had a template that specified an absolute position outside the string being unpacked. The string being unpacked was also invalid UTF-8. See &lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;.</source>
          <target state="translated">（F）您有一个模板，该模板指定了要解压缩的字符串之外的绝对位置。解压缩的字符串也是无效的UTF-8。参见&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="eeb640744c55f1f5964bb8c9a243b5f9078aad67" translate="yes" xml:space="preserve">
          <source>(F) You had an unpack template indicating a counted-length string, but you have also specified an explicit size for the string. See &lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;.</source>
          <target state="translated">（F）您有一个解包模板，该模板指示长度计的字符串，但是您还为该字符串指定了显式的大小。参见&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="770ea17de0451bebd0e7cdbfab2f0c7ee3f7dca1" translate="yes" xml:space="preserve">
          <source>(F) You had an unpack template that contained a '/', but this did not follow some unpack specification producing a numeric value. See &lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;.</source>
          <target state="translated">（F）您有一个包含'/'的解压缩模板，但是没有遵循某些解压缩规范生成数字值。参见&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="64dac83ad13dc2f2fb282fe54f89e4e69c1ffc0b" translate="yes" xml:space="preserve">
          <source>(F) You had something like this:</source>
          <target state="translated">（F）你有这样的事情：</target>
        </trans-unit>
        <trans-unit id="63929c2f80159e9b6d4a89129fd5ad2759397810" translate="yes" xml:space="preserve">
          <source>(F) You have configured Perl to use long doubles but the internals of the long double format are unknown; therefore the hexadecimal float output is impossible.</source>
          <target state="translated">（F）您已经将Perl配置为使用长双精度，但是长双精度格式的内部是未知的；因此十六进制浮点输出是不可能的。</target>
        </trans-unit>
        <trans-unit id="986a95b086a7fa1018fd31af64327ec4514a73be" translate="yes" xml:space="preserve">
          <source>(F) You have used a &lt;code&gt;default&lt;/code&gt; block that is neither inside a &lt;code&gt;foreach&lt;/code&gt; loop nor a &lt;code&gt;given&lt;/code&gt; block. (Note that this error is issued on exit from the &lt;code&gt;default&lt;/code&gt; block, so you won't get the error if you use an explicit &lt;code&gt;&lt;a href=&quot;functions/continue&quot;&gt;continue&lt;/a&gt;&lt;/code&gt;.)</source>
          <target state="translated">（F）您使用的 &lt;code&gt;default&lt;/code&gt; 块既不在 &lt;code&gt;foreach&lt;/code&gt; 循环内，也不在 &lt;code&gt;given&lt;/code&gt; 块内。（请注意，此错误是在 &lt;code&gt;default&lt;/code&gt; 块退出时发出的，因此，如果使用显式的 &lt;code&gt;&lt;a href=&quot;functions/continue&quot;&gt;continue&lt;/a&gt;&lt;/code&gt; ，则不会收到该错误。）</target>
        </trans-unit>
        <trans-unit id="73114e29140c870691510021d29c6b2748f1d357" translate="yes" xml:space="preserve">
          <source>(F) You have used a when() block that is neither inside a &lt;code&gt;foreach&lt;/code&gt; loop nor a &lt;code&gt;given&lt;/code&gt; block. (Note that this error is issued on exit from the &lt;code&gt;when&lt;/code&gt; block, so you won't get the error if the match fails, or if you use an explicit &lt;code&gt;&lt;a href=&quot;functions/continue&quot;&gt;continue&lt;/a&gt;&lt;/code&gt;.)</source>
          <target state="translated">（F）您使用的when（）块既不在 &lt;code&gt;foreach&lt;/code&gt; 循环内，也不在 &lt;code&gt;given&lt;/code&gt; 块内。（请注意，此错误是在 &lt;code&gt;when&lt;/code&gt; 块退出时发出的，因此，如果匹配失败或使用显式的 &lt;code&gt;&lt;a href=&quot;functions/continue&quot;&gt;continue&lt;/a&gt;&lt;/code&gt; ，则不会收到该错误。）</target>
        </trans-unit>
        <trans-unit id="c1d12edc9af1329055791fa975f785978a6fe123" translate="yes" xml:space="preserve">
          <source>(F) You manipulated Perl's symbol table directly, stored a reference in it, then tried to access that symbol via conventional Perl syntax. The access triggers Perl to autovivify that typeglob, but it there is no legal conversion from that type of reference to a typeglob.</source>
          <target state="translated">（F）您直接操作了Perl的符号表，在其中存储了引用，然后尝试通过常规Perl语法访问该符号。该访问会触发Perl自动激活该typeglob，但是没有从该引用类型到typeglob的合法转换。</target>
        </trans-unit>
        <trans-unit id="172ef62f0afe81a43b622ddd9e2ad513b1542d34" translate="yes" xml:space="preserve">
          <source>(F) You may have tried to use &lt;code&gt;\p&lt;/code&gt; which means a Unicode property (for example &lt;code&gt;\p{Lu}&lt;/code&gt; matches all uppercase letters). If you did mean to use a Unicode property, see &lt;a href=&quot;perluniprops#Properties-accessible-through-%5cp%7b%7d-and-%5cP%7b%7d&quot;&gt;Properties accessible through \p{} and \P{} in perluniprops&lt;/a&gt; for a complete list of available properties. If you didn't mean to use a Unicode property, escape the &lt;code&gt;\p&lt;/code&gt; , either by &lt;code&gt;\\p&lt;/code&gt; (just the &lt;code&gt;\p&lt;/code&gt; ) or by &lt;code&gt;\Q\p&lt;/code&gt; (the rest of the string, or until &lt;code&gt;\E&lt;/code&gt; ).</source>
          <target state="translated">（F）您可能尝试使用 &lt;code&gt;\p&lt;/code&gt; 表示Unicode属性（例如 &lt;code&gt;\p{Lu}&lt;/code&gt; 匹配所有大写字母）。如果确实要使用Unicode属性，请参阅&lt;a href=&quot;perluniprops#Properties-accessible-through-%5cp%7b%7d-and-%5cP%7b%7d&quot;&gt;perluniprops中可通过\ p {}和\ P {}&lt;/a&gt;访问的属性，以获取可用属性的完整列表。如果您不打算使用Unicode属性，请通过 &lt;code&gt;\\p&lt;/code&gt; （只是 &lt;code&gt;\p&lt;/code&gt; ）或 &lt;code&gt;\Q\p&lt;/code&gt; （字符串的其余部分，或者直到 &lt;code&gt;\E&lt;/code&gt; ）对 &lt;code&gt;\p&lt;/code&gt; 转义。</target>
        </trans-unit>
        <trans-unit id="2ab0f8bd6407fa0ac460e400a0fc822f40b04e5d" translate="yes" xml:space="preserve">
          <source>(F) You must now decide whether the final $ in a string was meant to be a literal dollar sign, or was meant to introduce a variable name that happens to be missing. So you have to put either the backslash or the name.</source>
          <target state="translated">（F）现在，您必须确定字符串中的最后$是要用作文字美元符号，还是要引入恰好丢失的变量名。因此，您必须输入反斜杠或名称。</target>
        </trans-unit>
        <trans-unit id="017640a4df4ec5a1fff70a3f979aaf8306e351e8" translate="yes" xml:space="preserve">
          <source>(F) You named a loop to break out of, but you're not currently in a loop of that name, not even if you count where you were called from. See &lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt;.</source>
          <target state="translated">（F）您命名了一个要中断的循环，但是即使您算上调用的来源，您当前也未处于该循环中。见&lt;a href=&quot;functions/last&quot;&gt;最后&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0bbf8f624ad11c82184c4daab6ece99ef66cc0b7" translate="yes" xml:space="preserve">
          <source>(F) You named a loop to continue, but you're not currently in a loop of that name, not even if you count where you were called from. See &lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt;.</source>
          <target state="translated">（F）您已命名一个要继续的循环，但是即使您算上调用的来源，您当前也没有处于该名称的循环中。见&lt;a href=&quot;functions/last&quot;&gt;最后&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2d97b67f8b84063019dd5d1ed5b19bfe68e5837e" translate="yes" xml:space="preserve">
          <source>(F) You named a loop to restart, but you're not currently in a loop of that name, not even if you count where you were called from. See &lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt;.</source>
          <target state="translated">（F）您已命名一个要重新启动的循环，但是即使您算上调用的来源，您当前也没有处于该名称的循环中。见&lt;a href=&quot;functions/last&quot;&gt;最后&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="052af7dabe34e4c84c44d4e5c1198944c66ee3de" translate="yes" xml:space="preserve">
          <source>(F) You omitted to close a (?(condition)...) block somewhere in the pattern. Add a closing parenthesis in the appropriate position. See &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;.</source>
          <target state="translated">（F）您省略了关闭模式中某处的（？（condition）...）块。在适当的位置添加右括号。参见&lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b0b841e2400aba7a2a1ddb959cb022ec8f614d12" translate="yes" xml:space="preserve">
          <source>(F) You passed a buffer of the wrong size to one of msgctl(), semctl() or shmctl(). In C parlance, the correct sizes are, respectively, sizeof(struct msqid_ds *), sizeof(struct semid_ds *), and sizeof(struct shmid_ds *).</source>
          <target state="translated">（F）您将错误大小的缓冲区传递给了msgctl（），semctl（）或shmctl（）中的一个。用C的话来说，正确的大小分别是sizeof（struct msqid_ds *），sizeof（struct semid_ds *）和sizeof（struct shmid_ds *）。</target>
        </trans-unit>
        <trans-unit id="90c0e43c4a1c808d4f05f79c8c654baf64954786" translate="yes" xml:space="preserve">
          <source>(F) You passed a reference to a blessed array to &lt;code&gt;&lt;a href=&quot;functions/push&quot;&gt;push&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt; or another array function. These only accept unblessed array references or arrays beginning explicitly with &lt;code&gt;@&lt;/code&gt; .</source>
          <target state="translated">（F）您传递了对有福数组的引用，以进行 &lt;code&gt;&lt;a href=&quot;functions/push&quot;&gt;push&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt; 或其他数组功能。这些仅接受无祝福的数组引用或以 &lt;code&gt;@&lt;/code&gt; 开头的数组。</target>
        </trans-unit>
        <trans-unit id="25d00ef574a2f7b0c3e62b36a8e331bdf6bd59c7" translate="yes" xml:space="preserve">
          <source>(F) You passed an invalid ANSI escape sequence to uncolor().</source>
          <target state="translated">（F）您将无效的ANSI转义序列传递给uncolor（）。</target>
        </trans-unit>
        <trans-unit id="2132dc15cb72c700e67c2378ba735195d57a87d1" translate="yes" xml:space="preserve">
          <source>(F) You passed an invalid alias name to coloralias(). Alias names must consist only of alphanumerics, &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt; , and &lt;code&gt;_&lt;/code&gt; .</source>
          <target state="translated">（F）您将无效的别名传递给coloralias（）。别名必须仅包含字母数字 &lt;code&gt;.&lt;/code&gt; ， &lt;code&gt;-&lt;/code&gt; 和 &lt;code&gt;_&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="143d1ad2d555a749ed30c447cfb171b8c70c4fb7" translate="yes" xml:space="preserve">
          <source>(F) You passed an invalid attribute name to color(), colored(), or coloralias().</source>
          <target state="translated">（F）您将无效的属性名称传递给color（），colored（）或coloralias（）。</target>
        </trans-unit>
        <trans-unit id="28faddfed8391fa3ce80e9cb9bc5d747d38fafe6" translate="yes" xml:space="preserve">
          <source>(F) You passed an invalid number (like an infinity or not-a-number) to &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">（F）您向 &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr&lt;/a&gt;&lt;/code&gt; 传递了无效数字（例如无穷大或非数字）。</target>
        </trans-unit>
        <trans-unit id="594bd752ab134bb72403c3fab7adee02d8229986" translate="yes" xml:space="preserve">
          <source>(F) You passed die() an empty string (the equivalent of &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt; &quot;&quot;&lt;/code&gt; ) or you called it with no args and &lt;code&gt;$@&lt;/code&gt; was empty.</source>
          <target state="translated">（F）您向die（）传递了一个空字符串（等效于 &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt; &quot;&quot;&lt;/code&gt; ），或者您不带参数地调用了该字符串，并且 &lt;code&gt;$@&lt;/code&gt; 为空。</target>
        </trans-unit>
        <trans-unit id="8f56a56432ce9593e2c4d6679ea27c55811678e0" translate="yes" xml:space="preserve">
          <source>(F) You probably mistyped a constant color name such as:</source>
          <target state="translated">（F）您可能输错了恒定的颜色名称，例如：</target>
        </trans-unit>
        <trans-unit id="2bb715e42afaafeaab9609fa39232b59a341c9d9" translate="yes" xml:space="preserve">
          <source>(F) You provided a class qualifier in a &quot;my&quot;, &quot;our&quot; or &quot;state&quot; declaration, but this class doesn't exist at this point in your program.</source>
          <target state="translated">（F）您在&amp;ldquo;我的&amp;rdquo;，&amp;ldquo;我们的&amp;rdquo;或&amp;ldquo;州&amp;rdquo;声明中提供了类限定符，但该类在您的程序中目前不存在。</target>
        </trans-unit>
        <trans-unit id="135a89e0b5c34079dc70d08e0834896303af80e6" translate="yes" xml:space="preserve">
          <source>(F) You said &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; utf8&lt;/code&gt; , but the program file doesn't comply with UTF-8 encoding rules. The message prints out the properly encoded characters just before the first bad one. If &lt;code&gt;utf8&lt;/code&gt; warnings are enabled, a warning is generated that gives more details about the type of malformation.</source>
          <target state="translated">（F）您说 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; utf8&lt;/code&gt; ，但是程序文件不符合UTF-8编码规则。该消息将在第一个错误字符之前打印出正确编码的字符。如果启用了 &lt;code&gt;utf8&lt;/code&gt; 警告，则会生成一条警告，其中提供有关格式错误类型的更多详细信息。</target>
        </trans-unit>
        <trans-unit id="83082be7dd4a60dd1c40f045ce110ed91cab0e75" translate="yes" xml:space="preserve">
          <source>(F) You said something like &quot;use Module 42&quot; but in the Module file there are neither package declarations nor a &lt;code&gt;$VERSION&lt;/code&gt; .</source>
          <target state="translated">（F）您说过类似&amp;ldquo;使用模块42&amp;rdquo;的内容，但是在模块文件中既没有包声明也没有 &lt;code&gt;$VERSION&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="36a56380658f5242a7507bf38a5ddff4c96e36f6" translate="yes" xml:space="preserve">
          <source>(F) You said something like &quot;use Module 42&quot; but the Module did not define a &lt;code&gt;$VERSION&lt;/code&gt; .</source>
          <target state="translated">（F）您说了类似&amp;ldquo;使用模块42&amp;rdquo;的内容，但该模块未定义 &lt;code&gt;$VERSION&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6727a3af6aad3293e460eca6be967915be18f62b" translate="yes" xml:space="preserve">
          <source>(F) You said something like &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt; $$ref&lt;/code&gt; , which Perl can't currently handle, because when it goes to restore the old value of whatever $ref pointed to after the scope of the local() is finished, it can't be sure that $ref will still be a reference.</source>
          <target state="translated">（F）您说过类似Perl目前无法处理的 &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt; $$ref&lt;/code&gt; 类的东西，因为当local（）的作用域完成后，当它恢复$ ref所指向的旧值时，它就无法执行确保$ ref仍然是引用。</target>
        </trans-unit>
        <trans-unit id="289f6f032228eeaa7948f842a54fd998e06700fb" translate="yes" xml:space="preserve">
          <source>(F) You said to &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt; (or &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt;) a file that couldn't be found. Perl looks for the file in all the locations mentioned in @INC, unless the file name included the full path to the file. Perhaps you need to set the PERL5LIB or PERL5OPT environment variable to say where the extra library is, or maybe the script needs to add the library name to @INC. Or maybe you just misspelled the name of the file. See &lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt; and &lt;a href=&quot;lib&quot;&gt;lib&lt;/a&gt;.</source>
          <target state="translated">（F）您说要 &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt; （或 &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; ）找不到的文件。Perl在@INC中提到的所有位置查找文件，除非文件名包含文件的完整路径。也许您需要设置PERL5LIB或PERL5OPT环境变量来说明额外的库在哪里，或者脚本需要将库名称添加到@INC。或者，也许您只是拼错了文件名。参见&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;和&lt;a href=&quot;lib&quot;&gt;lib&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="71e19f90d1bf0f904ac1689d02752c4c525ec6f7" translate="yes" xml:space="preserve">
          <source>(F) You said to goto a label that isn't mentioned anywhere that it's possible for us to go to. See &lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt;.</source>
          <target state="translated">（F）您说过要去一个我们可能去的地方都没有提到的标签。参见&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cbeef37c86bf57de503c6975c39d62c2487e2b63" translate="yes" xml:space="preserve">
          <source>(F) You should not use the &lt;code&gt;~~&lt;/code&gt; operator on an object that does not overload it: Perl refuses to use the object's underlying structure for the smart match.</source>
          <target state="translated">（F）不应在不会重载对象的对象上使用 &lt;code&gt;~~&lt;/code&gt; 运算符：Perl拒绝将对象的基础结构用于智能匹配。</target>
        </trans-unit>
        <trans-unit id="90bbbd2573c9b934040bfde52197420076284030" translate="yes" xml:space="preserve">
          <source>(F) You specified a *roff font (using &lt;code&gt;fixed&lt;/code&gt; , &lt;code&gt;fixedbold&lt;/code&gt; , etc.) that wasn't either one or two characters. Pod::Man doesn't support *roff fonts longer than two characters, although some *roff extensions do (the canonical versions of &lt;b&gt;nroff&lt;/b&gt; and &lt;b&gt;troff&lt;/b&gt; don't either).</source>
          <target state="translated">（F）您指定了一个* roff字体（使用 &lt;code&gt;fixed&lt;/code&gt; ， &lt;code&gt;fixedbold&lt;/code&gt; 等），它不是一个或两个字符。Pod :: Man不支持* roff字体长于两个字符，尽管某些* roff扩展名支持（不支持&lt;b&gt;nroff&lt;/b&gt;和&lt;b&gt;troff&lt;/b&gt;的规范版本）。</target>
        </trans-unit>
        <trans-unit id="450bd21ba19b8482651deb0214267431c0137ebc" translate="yes" xml:space="preserve">
          <source>(F) You specified a signal hook that was not recognized by Perl. Currently, Perl accepts &lt;code&gt;__DIE__&lt;/code&gt; and &lt;code&gt;__WARN__&lt;/code&gt; as valid signal hooks.</source>
          <target state="translated">（F）您指定了Perl无法识别的信号钩。当前，Perl接受 &lt;code&gt;__DIE__&lt;/code&gt; 和 &lt;code&gt;__WARN__&lt;/code&gt; 作为有效的信号挂钩。</target>
        </trans-unit>
        <trans-unit id="48c97511646a051e4bc7ac609e49772c63cce0a1" translate="yes" xml:space="preserve">
          <source>(F) You specified a signal name to the kill() function that was not recognized. Say &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt; -l&lt;/code&gt; in your shell to see the valid signal names on your system.</source>
          <target state="translated">（F）您为kill（）函数指定了无法识别的信号名称。在shell中说 &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt; -l&lt;/code&gt; 可以查看系统上的有效信号名称。</target>
        </trans-unit>
        <trans-unit id="201388e6f1104d74bede54e12238b69d3d4d9194" translate="yes" xml:space="preserve">
          <source>(F) You specified an illegal option to Perl. Don't do that. (If you think you didn't do that, check the #! line to see if it's supplying the bad switch on your behalf.)</source>
          <target state="translated">（F）您为Perl指定了非法选项。不要那样做 （如果您认为自己没有这样做，请检查＃！行，看看它是否代表您提供了错误的开关。）</target>
        </trans-unit>
        <trans-unit id="9a57bb24a1bf5dc631dda7c07d607e805d5664da" translate="yes" xml:space="preserve">
          <source>(F) You specified an unknown Unicode option. See &lt;a href=&quot;perlrun&quot;&gt;perlrun&lt;/a&gt; documentation of the &lt;code&gt;-C&lt;/code&gt; switch for the list of known options.</source>
          <target state="translated">（F）您指定了未知的Unicode选项。有关已知选项的列表，请参见 &lt;code&gt;-C&lt;/code&gt; 开关的&lt;a href=&quot;perlrun&quot;&gt;perlrun&lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="35c3af91c3bc45c10c340c011f66dc25543dec0e" translate="yes" xml:space="preserve">
          <source>(F) You started a regular expression with a quantifier. Backslash it if you meant it literally. The &amp;lt;-- HERE shows whereabouts in the regular expression the problem was discovered. See &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;.</source>
          <target state="translated">（F）您以量词开始了一个正则表达式。如果您是按字面意思说，请反斜杠。&amp;lt;-HERE在正则表达式中显示发现问题的行踪。参见&lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="507799b665e6a10af2b55203739355466004fe11" translate="yes" xml:space="preserve">
          <source>(F) You started to name a symbol by using a package prefix, and then didn't finish the symbol. In particular, you can't interpolate outside of quotes, so</source>
          <target state="translated">（F）您开始使用包前缀来命名符号，然后没有完成该符号。特别是，您不能在引号之外进行插值，因此</target>
        </trans-unit>
        <trans-unit id="f93aa5ed65e996505eaee4c164c9a8d7dc9e9fe3" translate="yes" xml:space="preserve">
          <source>(F) You tried compressing an infinity or not-a-number as an unsigned integer with BER, which makes no sense.</source>
          <target state="translated">（F）您尝试使用BER将无穷大或非数字压缩为无符号整数，这没有任何意义。</target>
        </trans-unit>
        <trans-unit id="59d76582aaaf9ff517a85e916071d330a17b0d19" translate="yes" xml:space="preserve">
          <source>(F) You tried converting an infinity or not-a-number to an integer, which makes no sense.</source>
          <target state="translated">（F）您尝试将无穷大或非数字转换为整数，这没有任何意义。</target>
        </trans-unit>
        <trans-unit id="47e88695dfd516f1761bfa22bc4fe434e7e797ca" translate="yes" xml:space="preserve">
          <source>(F) You tried printing an infinity or not-a-number as a character (%c), which makes no sense. Maybe you meant '%s', or just stringifying it?</source>
          <target state="translated">（F）您尝试将无穷大或非数字作为字符（％c）打印，这没有任何意义。也许您是说'％s'，或只是将其串化？</target>
        </trans-unit>
        <trans-unit id="a9d00903e902e5ca35aeab45ecd4569e2efdf08b" translate="yes" xml:space="preserve">
          <source>(F) You tried to &lt;code&gt;mro::set_mro(&quot;classname&quot;, &quot;foo&quot;)&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; mro 'foo'&lt;/code&gt; , where &lt;code&gt;foo&lt;/code&gt; is not a valid method resolution order (MRO). Currently, the only valid ones supported are &lt;code&gt;dfs&lt;/code&gt; and &lt;code&gt;c3&lt;/code&gt; , unless you have loaded a module that is a MRO plugin. See &lt;a href=&quot;mro&quot;&gt;mro&lt;/a&gt; and &lt;a href=&quot;perlmroapi&quot;&gt;perlmroapi&lt;/a&gt;.</source>
          <target state="translated">（F）您尝试使用 &lt;code&gt;mro::set_mro(&quot;classname&quot;, &quot;foo&quot;)&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; mro 'foo'&lt;/code&gt; ，其中 &lt;code&gt;foo&lt;/code&gt; 不是有效的方法解析顺序（MRO）。当前，除非已加载作为MRO插件的模块，否则仅支持 &lt;code&gt;dfs&lt;/code&gt; 和 &lt;code&gt;c3&lt;/code&gt; 。参见&lt;a href=&quot;mro&quot;&gt;mro&lt;/a&gt;和&lt;a href=&quot;perlmroapi&quot;&gt;perlmroapi&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="aa7f6b1d732dcf83c1aa6234e7d7f7ecce6c43e7" translate="yes" xml:space="preserve">
          <source>(F) You tried to access a key from a hash through the indicated typed variable but that key is not allowed by the package of the same type. The indicated package has restricted the set of allowed keys using the &lt;a href=&quot;fields&quot;&gt;fields&lt;/a&gt; pragma.</source>
          <target state="translated">（F）您试图通过指示的类型化变量从哈希访问键，但是相同类型的包不允许该键。指示的软件包使用&lt;a href=&quot;fields&quot;&gt;字段&lt;/a&gt; pragma 限制了允许的密钥集。</target>
        </trans-unit>
        <trans-unit id="47195ebb6653351cbaae3a7180b095fc18cc38a3" translate="yes" xml:space="preserve">
          <source>(F) You tried to activate a source filter (usually by loading a source filter module) within a string passed to &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;. This is not permitted under the &lt;code&gt;unicode_eval&lt;/code&gt; feature. Consider using &lt;code&gt;&lt;a href=&quot;functions/evalbytes&quot;&gt;evalbytes&lt;/a&gt;&lt;/code&gt; instead. See &lt;a href=&quot;feature&quot;&gt;feature&lt;/a&gt;.</source>
          <target state="translated">（F）您试图在传递给 &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; 的字符串中激活源过滤器（通常通过加载源过滤器模块）。 &lt;code&gt;unicode_eval&lt;/code&gt; 功能不允许这样做。考虑改用 &lt;code&gt;&lt;a href=&quot;functions/evalbytes&quot;&gt;evalbytes&lt;/a&gt;&lt;/code&gt; 。请参阅&lt;a href=&quot;feature&quot;&gt;功能&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0979a84524da47420a450a05cc6286627b8e6ab5" translate="yes" xml:space="preserve">
          <source>(F) You tried to assign a reference to a non integer to &lt;code&gt;$/&lt;/code&gt; . In older Perls this would have behaved similarly to setting it to a reference to a positive integer, where the integer was the address of the reference. As of Perl 5.20.0 this is a fatal error, to allow future versions of Perl to use non-integer refs for more interesting purposes.</source>
          <target state="translated">（F）您试图将对非整数的引用分配给 &lt;code&gt;$/&lt;/code&gt; 。在较早的Perls中，其行为类似于将其设置为对正整数的引用，其中整数是引用的地址。从Perl 5.20.0开始，这是一个致命错误，它允许将来的Perl版本使用非整数引用来达到更有趣的目的。</target>
        </trans-unit>
        <trans-unit id="05c6cffa95736f357898157f66e51fd53053fc37" translate="yes" xml:space="preserve">
          <source>(F) You tried to assign a reference to a reference constructor, but the two references were not of the same type. You cannot alias a scalar to an array, or an array to a hash; the two types must match.</source>
          <target state="translated">（F）您尝试将引用分配给引用构造函数，但是两个引用的类型不同。您不能将标量别名为数组，也不能将数组别名为哈希。两种类型必须匹配。</target>
        </trans-unit>
        <trans-unit id="feae1b83e32befce733c62d81ef3dde590f790af" translate="yes" xml:space="preserve">
          <source>(F) You tried to assign something that was not a reference to an lvalue reference (e.g., &lt;code&gt;\$x = $y&lt;/code&gt; ). If you meant to make $x an alias to $y, use &lt;code&gt;\$x = \$y&lt;/code&gt; .</source>
          <target state="translated">（F）您试图分配一个不是左值引用的引用（例如 &lt;code&gt;\$x = $y&lt;/code&gt; ）。如果要使$ x成为$ y的别名，请使用 &lt;code&gt;\$x = \$y&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bcf6d72d15130f5e32507d8a891d675aa5f0c530" translate="yes" xml:space="preserve">
          <source>(F) You tried to assign to &lt;code&gt;$&amp;gt;&lt;/code&gt; , and your operating system doesn't support the seteuid() system call (or equivalent), or at least Configure didn't think so.</source>
          <target state="translated">（F）您尝试分配给 &lt;code&gt;$&amp;gt;&lt;/code&gt; ，并且您的操作系统不支持seteuid（）系统调用（或等效方法），或者至少Configure并不这么认为。</target>
        </trans-unit>
        <trans-unit id="cfacbdc2d44b8f4af0928acfaab8ae34b69e5e5d" translate="yes" xml:space="preserve">
          <source>(F) You tried to assign to &lt;code&gt;$&amp;lt;&lt;/code&gt; , and your operating system doesn't support the setruid() system call (or equivalent), or at least Configure didn't think so.</source>
          <target state="translated">（F）您尝试分配给 &lt;code&gt;$&amp;lt;&lt;/code&gt; ，并且您的操作系统不支持setruid（）系统调用（或等效方法），或者至少Configure并不这么认为。</target>
        </trans-unit>
        <trans-unit id="07b5214173c1fa2dec75d7ced9e1c11bcff01d47" translate="yes" xml:space="preserve">
          <source>(F) You tried to assign to &lt;code&gt;$(&lt;/code&gt; , and your operating system doesn't support the setrgid() system call (or equivalent), or at least Configure didn't think so.</source>
          <target state="translated">（F）您尝试分配给 &lt;code&gt;$(&lt;/code&gt; ，并且您的操作系统不支持setrgid（）系统调用（或等效方法），或者至少Configure并不这么认为。</target>
        </trans-unit>
        <trans-unit id="27cc0abdc7428678a64dfbc5b3bcc85aae3fac52" translate="yes" xml:space="preserve">
          <source>(F) You tried to assign to &lt;code&gt;$)&lt;/code&gt; , and your operating system doesn't support the setegid() system call (or equivalent), or at least Configure didn't think so.</source>
          <target state="translated">（F）您试图分配给 &lt;code&gt;$)&lt;/code&gt; ，并且您的操作系统不支持setegid（）系统调用（或等效方法），或者至少Configure并不这么认为。</target>
        </trans-unit>
        <trans-unit id="063729041dab79b09fb939a66e0b04c3f02257d6" translate="yes" xml:space="preserve">
          <source>(F) You tried to call a subroutine in the &lt;code&gt;CORE::&lt;/code&gt; namespace with &lt;code&gt;&amp;amp;foo&lt;/code&gt; syntax or through a reference. Some subroutines in this package cannot yet be called that way, but must be called as barewords. Something like this will work:</source>
          <target state="translated">（F）您尝试使用 &lt;code&gt;&amp;amp;foo&lt;/code&gt; 语法或通过引用在 &lt;code&gt;CORE::&lt;/code&gt; 名称空间中调用子例程。该软件包中的某些子例程尚不能以这种方式调用，但必须称为裸字。这样的事情会起作用：</target>
        </trans-unit>
        <trans-unit id="1062f7f1f8f8cbe7aa7cef09d607ca1881742df4" translate="yes" xml:space="preserve">
          <source>(F) You tried to call a subroutine with &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt; &amp;amp;sub&lt;/code&gt; syntax, but the indicated subroutine hasn't been defined, or if it was, it has since been undefined.</source>
          <target state="translated">（F）您尝试使用 &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt; &amp;amp;sub&lt;/code&gt; 语法调用子例程，但是尚未定义所指示的子例程，或者如果已定义，则此子例程尚未定义。</target>
        </trans-unit>
        <trans-unit id="0ce29e49a729e65aceaaffa37f7a4fa3f8649782" translate="yes" xml:space="preserve">
          <source>(F) You tried to call perl with the &lt;b&gt;-e&lt;/b&gt; switch, but</source>
          <target state="translated">（F）您尝试使用&lt;b&gt;-e&lt;/b&gt;开关调用perl ，但是</target>
        </trans-unit>
        <trans-unit id="be9f09d2ff2c23282d5f09c489beb8e9761efd96" translate="yes" xml:space="preserve">
          <source>(F) You tried to call perl with the &lt;b&gt;-m&lt;/b&gt; switch, but you put something other than &quot;=&quot; after the module name.</source>
          <target state="translated">（F）您尝试使用&lt;b&gt;-m&lt;/b&gt;开关调用perl ，但在模块名称后放置了&amp;ldquo; =&amp;rdquo;以外的内容。</target>
        </trans-unit>
        <trans-unit id="e2ce51f1943a0f0fa57ff86c3a0165241043785c" translate="yes" xml:space="preserve">
          <source>(F) You tried to call require with no argument or with an undefined value as an argument. Require expects either a package name or a file-specification as an argument. See &lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;.</source>
          <target state="translated">（F）您试图不带任何参数或以未定义的值作为参数来调用require。Require期望将软件包名称或文件规范作为参数。参见&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5a9f81d54eaa0857272dc230f21139d9d054ad74" translate="yes" xml:space="preserve">
          <source>(F) You tried to create a custom alias for a character name, with the &lt;code&gt;:alias&lt;/code&gt; option to &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; charnames&lt;/code&gt; and the specified character in the indicated name isn't valid. See &lt;a href=&quot;charnames#CUSTOM-ALIASES&quot;&gt;CUSTOM ALIASES in charnames&lt;/a&gt;.</source>
          <target state="translated">（F）您试图为一个字符的名称创建一个自定义的别名，用 &lt;code&gt;:alias&lt;/code&gt; 选项 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; charnames&lt;/code&gt; ，并在指定名称的指定字符无效。请参阅&lt;a href=&quot;charnames#CUSTOM-ALIASES&quot;&gt;字符名称中的自定义别名&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cb1c335cee8792105441b5c173b1526bdb4e5bfe" translate="yes" xml:space="preserve">
          <source>(F) You tried to declare a magical variable as a lexical variable. This is not allowed, because the magic can be tied to only one location (namely the global variable) and it would be incredibly confusing to have variables in your program that looked like magical variables but weren't.</source>
          <target state="translated">（F）您试图将一个魔术变量声明为词汇变量。这是不允许的，因为魔术只能绑定到一个位置（即全局变量），而且程序中的变量看起来像魔术变量，但实际上不是，这会令人难以置信。</target>
        </trans-unit>
        <trans-unit id="3abca6da7dae4f5972582759d9d09fa3cfc29d0c" translate="yes" xml:space="preserve">
          <source>(F) You tried to define a customized To-mapping for lc(), lcfirst, uc(), or ucfirst() (or their string-inlined versions), but you specified an illegal mapping. See &lt;a href=&quot;perlunicode#User-Defined-Character-Properties&quot;&gt;User-Defined Character Properties in perlunicode&lt;/a&gt;.</source>
          <target state="translated">（F）您试图为lc（），lcfirst，uc（）或ucfirst（）（或其内联字符串的版本）定义自定义的To-mapping，但是您指定了非法映射。请参见&lt;a href=&quot;perlunicode#User-Defined-Character-Properties&quot;&gt;perlunicode中的用户定义字符属性&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dc6952412563288ba53cc3962bc954118ee75001" translate="yes" xml:space="preserve">
          <source>(F) You tried to divide a number by 0 to get the remainder. Most numbers don't take to this kindly.</source>
          <target state="translated">（F）您试图将数字除以0以得到余数。大多数数字对此并不友好。</target>
        </trans-unit>
        <trans-unit id="c363f0587d0a14de2c3546b6e3479714a4bd1d73" translate="yes" xml:space="preserve">
          <source>(F) You tried to divide a number by 0. Either something was wrong in your logic, or you need to put a conditional in to guard against meaningless input.</source>
          <target state="translated">（F）您试图将数字除以0。或者您的逻辑有误，或者您需要添加条件以防止无意义的输入。</target>
        </trans-unit>
        <trans-unit id="79f97edd419196ad91b287fc3875d20771a63514" translate="yes" xml:space="preserve">
          <source>(F) You tried to do a read/write/send/recv operation with a buffer length that is less than 0. This is difficult to imagine.</source>
          <target state="translated">（F）您试图用小于0的缓冲区长度执行读/写/发送/接收操作。这很难想象。</target>
        </trans-unit>
        <trans-unit id="5d5fa49bc349cb2da3a612a957baabb6bb7cb44e" translate="yes" xml:space="preserve">
          <source>(F) You tried to do something that the tainting mechanism didn't like. The tainting mechanism is turned on when you're running setuid or setgid, or when you specify &lt;b&gt;-T&lt;/b&gt; to turn it on explicitly. The tainting mechanism labels all data that's derived directly or indirectly from the user, who is considered to be unworthy of your trust. If any such data is used in a &quot;dangerous&quot; operation, you get this error. See &lt;a href=&quot;perlsec&quot;&gt;perlsec&lt;/a&gt; for more information.</source>
          <target state="translated">（F）您试图做一些污染机制不喜欢的事情。当您运行setuid或setgid时，或者当您指定&lt;b&gt;-T&lt;/b&gt;显式打开它时，将打开污染机制。污染机制会标记直接或间接从用户那里获得的所有数据，这些用户被认为不值得您信任。如果在&amp;ldquo;危险&amp;rdquo;操作中使用了任何此类数据，则会出现此错误。有关更多信息，请参见&lt;a href=&quot;perlsec&quot;&gt;perlsec&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="04f187132d8a09773787d4f0eb8c8a4d25f643e3" translate="yes" xml:space="preserve">
          <source>(F) You tried to do something with a function beginning with &quot;sem&quot;, &quot;shm&quot;, or &quot;msg&quot; but that System V IPC is not implemented in your machine. In some machines the functionality can exist but be unconfigured. Consult your system support.</source>
          <target state="translated">（F）您尝试使用以&amp;ldquo; sem&amp;rdquo;，&amp;ldquo; shm&amp;rdquo;或&amp;ldquo; msg&amp;rdquo;开头的功能执行某项操作，但您的计算机未实现System V IPC。在某些机器中，该功能可以存在但未配置。请咨询您的系统支持。</target>
        </trans-unit>
        <trans-unit id="13c297a61a3c3d6c0c21a7cb0243527c6f4c5662" translate="yes" xml:space="preserve">
          <source>(F) You tried to load a file with &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; that failed to compile once already. Perl will not try to compile this file again unless you delete its entry from %INC. See &lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt; and &lt;a href=&quot;perlvar#%25INC&quot;&gt;%INC in perlvar&lt;/a&gt;.</source>
          <target state="translated">（F）您试图加载文件， &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; 未能已经编译一次。Perl不会尝试再次编译该文件，除非您从％INC删除了它的条目。请参阅&lt;a href=&quot;perlvar#%25INC&quot;&gt;perlvar中的&lt;/a&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;和％INC。</target>
        </trans-unit>
        <trans-unit id="8eeebee53fd64e8fa425a2818094534b7e2fe3b9" translate="yes" xml:space="preserve">
          <source>(F) You tried to make an array value spring into existence, and the subscript was probably negative, even counting from end of the array backwards.</source>
          <target state="translated">（F）您试图使数组值出现，并且下标可能是负数，甚至从数组末尾算起也是如此。</target>
        </trans-unit>
        <trans-unit id="e0987c56bf948df518444d26a634fc6df08517ff" translate="yes" xml:space="preserve">
          <source>(F) You tried to pack something that didn't comply with UTF-8 encoding rules and perl was unable to guess how to make more progress.</source>
          <target state="translated">（F）您尝试打包不符合UTF-8编码规则的内容，而perl无法猜测如何取得更大的进步。</target>
        </trans-unit>
        <trans-unit id="0f6f111d30c67b93089bb856fd04d8aa1669c101" translate="yes" xml:space="preserve">
          <source>(F) You tried to repeat a constant value (often the undefined value) with an assignment operator, which implies modifying the value itself. Perhaps you need to copy the value to a temporary, and repeat that.</source>
          <target state="translated">（F）您试图用赋值运算符重复一个常数值（通常是未定义的值），这意味着修改了该值本身。也许您需要将值复制到一个临时文件，然后重复该操作。</target>
        </trans-unit>
        <trans-unit id="97c951a8f22898d3f91dcff55beaa3e8d25f28d1" translate="yes" xml:space="preserve">
          <source>(F) You tried to return a complete array or hash from an lvalue subroutine, but you called the subroutine in a way that made Perl think you meant to return only one value. You probably meant to write parentheses around the call to the subroutine, which tell Perl that the call should be in list context.</source>
          <target state="translated">（F）您试图从左值子例程返回完整的数组或哈希，但是您以使Perl认为只返回一个值的方式调用了子例程。您可能打算在对子例程的调用周围写上括号，该括号告诉Perl该调用应在列表上下文中。</target>
        </trans-unit>
        <trans-unit id="7cbcad7f90372b5f0f5329fee7ad6b12cb904275" translate="yes" xml:space="preserve">
          <source>(F) You tried to unpack something that didn't comply with UTF-8 encoding rules and perl was unable to guess how to make more progress.</source>
          <target state="translated">（F）您尝试解压缩不符合UTF-8编码规则的内容，而perl无法猜测如何取得更大的进步。</target>
        </trans-unit>
        <trans-unit id="d16c1fb00c3e18338d85bd099c7c6076f3f0b27e" translate="yes" xml:space="preserve">
          <source>(F) You tried to use &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt;&lt;/code&gt; to reach a label that was too deeply nested for Perl to reach. Perl is doing you a favor by refusing.</source>
          <target state="translated">（F）您试图使用 &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt;&lt;/code&gt; 到达一个嵌套太深的标签，以至于Perl无法到达。Perl通过拒绝帮您一个忙。</target>
        </trans-unit>
        <trans-unit id="febfe1b6997cda16c1efe794c7d1d646eec14e4f" translate="yes" xml:space="preserve">
          <source>(F) You tried to use a function with a malformed prototype. The syntax of function prototypes is given a brief compile-time check for obvious errors like invalid characters. A more rigorous check is run when the function is called. Perhaps the function's author was trying to write a subroutine signature but didn't enable that feature first (&lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'signatures'&lt;/code&gt; ), so the signature was instead interpreted as a bad prototype.</source>
          <target state="translated">（F）您尝试将函数与格式错误的原型一起使用。对函数原型的语法进行了简短的编译时检查，以检查诸如无效字符之类的明显错误。调用该函数时，将执行更严格的检查。也许函数的作者试图编写一个子例程签名，但没有首先启用该功能（ &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'signatures'&lt;/code&gt; ），因此该签名被解释为错误的原型。</target>
        </trans-unit>
        <trans-unit id="b9fc5831885091f728513fc59c94736c671b339f" translate="yes" xml:space="preserve">
          <source>(F) You tried to use a hash as a reference, as in &lt;code&gt;%foo-&amp;gt;{&quot;bar&quot;}&lt;/code&gt; or &lt;code&gt;%$ref-&amp;gt;{&quot;hello&quot;}&lt;/code&gt; . Versions of perl &amp;lt;= 5.22.0 used to allow this syntax, but shouldn't have. This was deprecated in perl 5.6.1.</source>
          <target state="translated">（F）您试图使用哈希作为引用，如 &lt;code&gt;%foo-&amp;gt;{&quot;bar&quot;}&lt;/code&gt; 或 &lt;code&gt;%$ref-&amp;gt;{&quot;hello&quot;}&lt;/code&gt; 。perl &amp;lt;= 5.22.0的版本用于允许使用此语法，但不应使用。在perl 5.6.1中已弃用该功能。</target>
        </trans-unit>
        <trans-unit id="1e2f9b7b8c68f866082676733ce65b571619374d" translate="yes" xml:space="preserve">
          <source>(F) You tried to use an array as a reference, as in &lt;code&gt;@foo-&amp;gt;[23]&lt;/code&gt; or &lt;code&gt;@$ref-&amp;gt;[99]&lt;/code&gt; . Versions of perl &amp;lt;= 5.22.0 used to allow this syntax, but shouldn't have. This was deprecated in perl 5.6.1.</source>
          <target state="translated">（F）您试图使用数组作为引用，如 &lt;code&gt;@$ref-&amp;gt;[99]&lt;/code&gt; &lt;code&gt;@foo-&amp;gt;[23]&lt;/code&gt; 或@ $ ref- &amp;gt; [99]所示。perl &amp;lt;= 5.22.0的版本用于允许使用此语法，但不应使用。在perl 5.6.1中已弃用该功能。</target>
        </trans-unit>
        <trans-unit id="24cc6e3d21667a912bda61be036ce6066d0637aa" translate="yes" xml:space="preserve">
          <source>(F) You tried to use an operator from a Safe compartment in which it's disallowed. See &lt;a href=&quot;safe&quot;&gt;Safe&lt;/a&gt;.</source>
          <target state="translated">（F）您试图从不允许使用的安全隔间中使用操作员。请参阅&lt;a href=&quot;safe&quot;&gt;安全&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="40d1498f8036d7e30b24a88e9cae05fc3f576e01" translate="yes" xml:space="preserve">
          <source>(F) You tried to use in open() a PerlIO layer that does not exist, e.g. open(FH, &quot;&amp;gt;:nosuchlayer&quot;, &quot;somefile&quot;).</source>
          <target state="translated">（F）您试图在open（）中使用一个不存在的PerlIO层，例如open（FH，&amp;ldquo;&amp;gt;：nosuchlayer&amp;rdquo;，&amp;ldquo; somefile&amp;rdquo;）。</target>
        </trans-unit>
        <trans-unit id="9f4e35f1e010f88b64cacafa7ea3fcc33b2acecb" translate="yes" xml:space="preserve">
          <source>(F) You tried, directly or indirectly, to change the value of a constant. You didn't, of course, try &quot;2 = 1&quot;, because the compiler catches that. But an easy way to do the same thing is:</source>
          <target state="translated">（F）您尝试直接或间接地更改常量的值。当然，您没有尝试&amp;ldquo; 2 = 1&amp;rdquo;，因为编译器捕获了这一点。但是执行相同操作的一种简单方法是：</target>
        </trans-unit>
        <trans-unit id="17178bf93c80f8ea86565fe1499ab0f0215d9498" translate="yes" xml:space="preserve">
          <source>(F) You used &lt;code&gt;\b{...}&lt;/code&gt; or &lt;code&gt;\B{...}&lt;/code&gt; and the &lt;code&gt;...&lt;/code&gt; is not known to Perl. The current valid ones are given in &lt;a href=&quot;perlrebackslash#%5cb%7b%7d%2c-%5cb%2c-%5cB%7b%7d%2c-%5cB&quot;&gt;\b{}, \b, \B{}, \B in perlrebackslash&lt;/a&gt;.</source>
          <target state="translated">（F）您使用 &lt;code&gt;\b{...}&lt;/code&gt; 或 &lt;code&gt;\B{...}&lt;/code&gt; ，而Perl不知道 &lt;code&gt;...&lt;/code&gt; 。当前有效的值&lt;a href=&quot;perlrebackslash#%5cb%7b%7d%2c-%5cb%2c-%5cB%7b%7d%2c-%5cB&quot;&gt;在perlrebackslash&lt;/a&gt;中的\ b {}，\ b，\ B {}，\ B中给出。</target>
        </trans-unit>
        <trans-unit id="702b13f2980954824b55e6d620953761dfec6874" translate="yes" xml:space="preserve">
          <source>(F) You used &lt;code&gt;\g0&lt;/code&gt; or similar in a regular expression. You may refer to capturing parentheses only with strictly positive integers (normal backreferences) or with strictly negative integers (relative backreferences). Using 0 does not make sense.</source>
          <target state="translated">（F）您在正则表达式中使用了 &lt;code&gt;\g0&lt;/code&gt; 或类似的字符。您可以仅使用严格的正整数（正常的反向引用）或严格的负整数（相对的反向引用）来引用捕获括号。使用0没有意义。</target>
        </trans-unit>
        <trans-unit id="28cd0b8032f22eb77e2386a88a5829b801122d86" translate="yes" xml:space="preserve">
          <source>(F) You used &lt;code&gt;\p{}&lt;/code&gt; or &lt;code&gt;\P{}&lt;/code&gt; but the character property by that name could not be found. Maybe you misspelled the name of the property? See &lt;a href=&quot;perluniprops#Properties-accessible-through-%5cp%7b%7d-and-%5cP%7b%7d&quot;&gt;Properties accessible through \p{} and \P{} in perluniprops&lt;/a&gt; for a complete list of available official properties.</source>
          <target state="translated">（F）您使用了 &lt;code&gt;\p{}&lt;/code&gt; 或 &lt;code&gt;\P{}&lt;/code&gt; 但找不到该名称的字符属性。也许您拼错了酒店的名称？有关可用的官方属性的完整列表，请&lt;a href=&quot;perluniprops#Properties-accessible-through-%5cp%7b%7d-and-%5cP%7b%7d&quot;&gt;参见perluniprops中可通过\ p {}和\ P {}&lt;/a&gt;访问的属性。</target>
        </trans-unit>
        <trans-unit id="69cb1a1b0ddbe26120fe67617ae019329d10084a" translate="yes" xml:space="preserve">
          <source>(F) You used a backslash-character combination which is not recognized by Perl inside character classes. This is a fatal error when the character class is used within &lt;code&gt;(?[ ])&lt;/code&gt; .</source>
          <target state="translated">（F）您在字符类中使用了Perl无法识别的反斜杠字符组合。在 &lt;code&gt;(?[ ])&lt;/code&gt; 使用字符类时，这是一个致命错误。</target>
        </trans-unit>
        <trans-unit id="88674912daafed33e23e5bb37c961244f5d46ca8" translate="yes" xml:space="preserve">
          <source>(F) You used a digit other than 0 or 1 in a binary number.</source>
          <target state="translated">（F）您在二进制数中使用了0或1以外的数字。</target>
        </trans-unit>
        <trans-unit id="4b39c10b6dd85043336773035730d4513ec9db56" translate="yes" xml:space="preserve">
          <source>(F) You used a pattern of the form &lt;code&gt;(*VERB)&lt;/code&gt; but did not terminate the pattern with a &lt;code&gt;)&lt;/code&gt;. Fix the pattern and retry.</source>
          <target state="translated">（F）您使用了 &lt;code&gt;(*VERB)&lt;/code&gt; 形式的模式，但未使用 &lt;code&gt;)&lt;/code&gt; 终止该模式。修复模式并重试。</target>
        </trans-unit>
        <trans-unit id="7c286ea7d129af178a83077af59d26bbd6fe4b54" translate="yes" xml:space="preserve">
          <source>(F) You used a pattern of the form &lt;code&gt;(*VERB:ARG)&lt;/code&gt; but did not terminate the pattern with a &lt;code&gt;)&lt;/code&gt;. Fix the pattern and retry.</source>
          <target state="translated">（F）您使用了 &lt;code&gt;(*VERB:ARG)&lt;/code&gt; 形式的模式，但未使用 &lt;code&gt;)&lt;/code&gt; 终止该模式。修复模式并重试。</target>
        </trans-unit>
        <trans-unit id="08e18a27e154c16efd7436c3b451a760941c2bb6" translate="yes" xml:space="preserve">
          <source>(F) You used a pattern that nested too many EVAL calls without consuming any text. Restructure the pattern so that text is consumed.</source>
          <target state="translated">（F）您使用了一个嵌套太多EVAL调用而不占用任何文本的模式。重组模式，以便使用文本。</target>
        </trans-unit>
        <trans-unit id="273539c3f0573d8bcba263a7480443d45af0fa1f" translate="yes" xml:space="preserve">
          <source>(F) You used a pattern that references itself without consuming any input text. You should check the pattern to ensure that recursive patterns either consume text or fail.</source>
          <target state="translated">（F）您使用了一种引用自己而不消耗任何输入文本的模式。您应该检查模式，以确保递归模式消耗文本或失败。</target>
        </trans-unit>
        <trans-unit id="68ce233d96cefbbfdc6b3133927eb00d22035acf" translate="yes" xml:space="preserve">
          <source>(F) You used a pattern that uses too many nested subpattern calls without consuming any text. Restructure the pattern so text is consumed before the nesting limit is exceeded.</source>
          <target state="translated">（F）您使用的模式使用过多的嵌套子模式调用，而不消耗任何文本。重组模式，以便在超出嵌套限制之前消耗文本。</target>
        </trans-unit>
        <trans-unit id="84bf3103d85b0b16b8ffe18d6ec37c090e0cdc12" translate="yes" xml:space="preserve">
          <source>(F) You used a regular expression extension that doesn't make sense. The &amp;lt;-- HERE shows whereabouts in the regular expression the problem was discovered. This may happen when using the &lt;code&gt;(?^...)&lt;/code&gt; construct to tell Perl to use the default regular expression modifiers, and you redundantly specify a default modifier. For other causes, see &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;.</source>
          <target state="translated">（F）您使用了没有意义的正则表达式扩展名。&amp;lt;-HERE在正则表达式中显示发现问题的行踪。当使用 &lt;code&gt;(?^...)&lt;/code&gt; 构造告诉Perl使用默认的正则表达式修饰符，而您多余地指定了默认修饰符时，可能会发生这种情况。其他原因，请参见&lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="20def0b0e786659bbca9da38b47e4d457fa52407" translate="yes" xml:space="preserve">
          <source>(F) You used a verb pattern that is not allowed an argument. Remove the argument or check that you are using the right verb.</source>
          <target state="translated">（F）您使用了不允许作为参数的动词模式。删除参数或检查您使用的是正确的动词。</target>
        </trans-unit>
        <trans-unit id="1cd989010970436dbc896d819901c9744f7f1b04" translate="yes" xml:space="preserve">
          <source>(F) You used a verb pattern that requires an argument. Supply an argument or check that you are using the right verb.</source>
          <target state="translated">（F）您使用了需要参数的动词模式。提供一个参数或检查您使用的是正确的动词。</target>
        </trans-unit>
        <trans-unit id="87f0d25e7c99816f9c2e0c94b9e0a10cd66687d3" translate="yes" xml:space="preserve">
          <source>(F) You used an 8 or 9 in an octal number.</source>
          <target state="translated">（F）您在八进制数字中使用了8或9。</target>
        </trans-unit>
        <trans-unit id="f3c5ae12861eacaae8c2de7411bb8cb7d61c50a1" translate="yes" xml:space="preserve">
          <source>(F) You used index/value array slice syntax (&lt;code&gt;%array[...]&lt;/code&gt; ) as the argument to &lt;code&gt;&lt;a href=&quot;functions/delete&quot;&gt;delete&lt;/a&gt;&lt;/code&gt;. You probably meant &lt;code&gt;@array[...]&lt;/code&gt; with an @ symbol instead.</source>
          <target state="translated">（F）您使用索引/值数组切片语法（ &lt;code&gt;%array[...]&lt;/code&gt; ）作为 &lt;code&gt;&lt;a href=&quot;functions/delete&quot;&gt;delete&lt;/a&gt;&lt;/code&gt; 的参数。您可能用@符号代替 &lt;code&gt;@array[...]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6d102d7f8864b00a70eec365c014ec3397d7e122" translate="yes" xml:space="preserve">
          <source>(F) You used key/value hash slice syntax (&lt;code&gt;%hash{...}&lt;/code&gt; ) as the argument to &lt;code&gt;&lt;a href=&quot;functions/delete&quot;&gt;delete&lt;/a&gt;&lt;/code&gt;. You probably meant &lt;code&gt;@hash{...}&lt;/code&gt; with an @ symbol instead.</source>
          <target state="translated">（F）您使用键/值哈希切片语法（ &lt;code&gt;%hash{...}&lt;/code&gt; ）作为 &lt;code&gt;&lt;a href=&quot;functions/delete&quot;&gt;delete&lt;/a&gt;&lt;/code&gt; 的参数。您可能用@符号代替 &lt;code&gt;@hash{...}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="58f6630fbd5815a4987fd285d7a5c9bdd5cd95c3" translate="yes" xml:space="preserve">
          <source>(F) You used local on a variable name that was previously declared as a lexical variable using &quot;my&quot; or &quot;state&quot;. This is not allowed. If you want to localize a package variable of the same name, qualify it with the package name.</source>
          <target state="translated">（F）您在变量名上使用了local，该变量名先前使用&amp;ldquo; my&amp;rdquo;或&amp;ldquo; state&amp;rdquo;声明为词法变量。这是不允许的。如果要本地化具有相同名称的程序包变量，请使用程序包名称对其进行限定。</target>
        </trans-unit>
        <trans-unit id="cff696f6bd7b034bed3ab8e4afe8a625f52be854" translate="yes" xml:space="preserve">
          <source>(F) You used something like &lt;code&gt;(?(DEFINE)...|..)&lt;/code&gt; which is illegal. The most likely cause of this error is that you left out a parenthesis inside of the &lt;code&gt;....&lt;/code&gt; part.</source>
          <target state="translated">（F）您使用了类似 &lt;code&gt;(?(DEFINE)...|..)&lt;/code&gt; 的非法内容。导致此错误的最可能原因是您在 &lt;code&gt;....&lt;/code&gt; 部分的内部省略了括号。</target>
        </trans-unit>
        <trans-unit id="86492b612355c2e310c2b964c4a510da9e5ab9da" translate="yes" xml:space="preserve">
          <source>(F) You used something like &lt;code&gt;\7&lt;/code&gt; in your regular expression, but there are not at least seven sets of capturing parentheses in the expression. If you wanted to have the character with ordinal 7 inserted into the regular expression, prepend zeroes to make it three digits long: &lt;code&gt;\007&lt;/code&gt;</source>
          <target state="translated">（F）您在正则表达式中使用了 &lt;code&gt;\7&lt;/code&gt; 类的东西，但是表达式中至少没有七组捕获括号。如果要在正则表达式中插入具有序数7​​的字符，请在数字前加上零使其长度为三位数： &lt;code&gt;\007&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f533704c7254c593ad8ccd5a7de5ca331a185c09" translate="yes" xml:space="preserve">
          <source>(F) You used something like &lt;code&gt;\g{-7}&lt;/code&gt; in your regular expression, but there are not at least seven sets of closed capturing parentheses in the expression before where the &lt;code&gt;\g{-7}&lt;/code&gt; was located.</source>
          <target state="translated">（F）您在正则表达式中使用了 &lt;code&gt;\g{-7}&lt;/code&gt; 类的东西，但是在 &lt;code&gt;\g{-7}&lt;/code&gt; 所在的位置中，表达式中至少没有七组封闭的捕获括号。</target>
        </trans-unit>
        <trans-unit id="20eedd26509d23438406f8c13451c8ecc8610ce2" translate="yes" xml:space="preserve">
          <source>(F) You used something like &lt;code&gt;\k'NAME'&lt;/code&gt; or &lt;code&gt;\k&amp;lt;NAME&amp;gt;&lt;/code&gt; in your regular expression, but there is no corresponding named capturing parentheses such as &lt;code&gt;(?'NAME'...)&lt;/code&gt; or &lt;code&gt;(?&amp;lt;NAME&amp;gt;...)&lt;/code&gt; . Check if the name has been spelled correctly both in the backreference and the declaration.</source>
          <target state="translated">[F）您在正则表达式中使用了 &lt;code&gt;\k'NAME'&lt;/code&gt; 或 &lt;code&gt;\k&amp;lt;NAME&amp;gt;&lt;/code&gt; 类的东西，但没有相应的命名捕获括号，例如 &lt;code&gt;(?'NAME'...)&lt;/code&gt; 或 &lt;code&gt;(?&amp;lt;NAME&amp;gt;...)&lt;/code&gt; 。检查名称是否在反向引用和声明中均正确拼写。</target>
        </trans-unit>
        <trans-unit id="c80f04cdcc45163f116540186291e21510a7399f" translate="yes" xml:space="preserve">
          <source>(F) You used the &lt;b&gt;-S&lt;/b&gt; switch, but the copies of the script to execute found in the PATH did not have correct permissions.</source>
          <target state="translated">（F）您使用了&lt;b&gt;-S&lt;/b&gt;开关，但是在PATH中找到的要执行的脚本副本没有正确的权限。</target>
        </trans-unit>
        <trans-unit id="cf0e35d4317159711f388b8204033a356b9197fc" translate="yes" xml:space="preserve">
          <source>(F) You used the &lt;b&gt;-S&lt;/b&gt; switch, but the script to execute could not be found in the PATH, or at least not with the correct permissions. The script exists in the current directory, but PATH prohibits running it.</source>
          <target state="translated">（F）您使用了&lt;b&gt;-S&lt;/b&gt;开关，但是在PATH中找不到执行脚本，或者至少没有正确的权限。该脚本存在于当前目录中，但是PATH禁止运行它。</target>
        </trans-unit>
        <trans-unit id="d1b02f0d7e4f51f01bc987ca2b98c94fb4a58c44" translate="yes" xml:space="preserve">
          <source>(F) You used the &lt;b&gt;-S&lt;/b&gt; switch, but the script to execute could not be found in the PATH.</source>
          <target state="translated">（F）您使用了&lt;b&gt;-S&lt;/b&gt;开关，但是在PATH中找不到要执行的脚本。</target>
        </trans-unit>
        <trans-unit id="3400c05a8a734061ea98fdbb159f248382c94c3e" translate="yes" xml:space="preserve">
          <source>(F) You used the syntax of a method call, but the slot filled by the object reference or package name contains an expression that returns a defined value which is neither an object reference nor a package name. Something like this will reproduce the error:</source>
          <target state="translated">（F）您使用了方法调用的语法，但是由对象引用或程序包名称填充的插槽包含一个表达式，该表达式返回一个既不是对象引用也不是程序包名称的定义值。这样的事情将重现该错误：</target>
        </trans-unit>
        <trans-unit id="41d63af3ce5594eb35bd2f491418feb32117eb7f" translate="yes" xml:space="preserve">
          <source>(F) You used the syntax of a method call, but the slot filled by the object reference or package name contains an undefined value. Something like this will reproduce the error:</source>
          <target state="translated">（F）您使用了方法调用的语法，但是由对象引用或程序包名称填充的插槽包含未定义的值。这样的事情将重现该错误：</target>
        </trans-unit>
        <trans-unit id="18b13e09d4e08845aab29b6147898169e828ddfb" translate="yes" xml:space="preserve">
          <source>(F) You wrote &lt;code&gt;&lt;a href=&quot;functions/bless&quot;&gt;bless&lt;/a&gt; $foo&lt;/code&gt; with one argument after somehow causing the current package to be freed. Perl cannot figure out what to do, so it throws up in hands in despair.</source>
          <target state="translated">（F）在以某种方式导致当前程序包被释放后，您用一个参数写了 &lt;code&gt;&lt;a href=&quot;functions/bless&quot;&gt;bless&lt;/a&gt; $foo&lt;/code&gt; 。Perl无法弄清楚该怎么办，因此它陷入绝望。</target>
        </trans-unit>
        <trans-unit id="b4a9f0f6a7db7e8f10359042617a936ea1fcd37f" translate="yes" xml:space="preserve">
          <source>(F) You wrote &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt; &amp;lt;file&amp;gt;&lt;/code&gt; when you should have written &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt; 'file'&lt;/code&gt; .</source>
          <target state="translated">（F）当您应该编写 &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt; 'file'&lt;/code&gt; '时，您编写了 &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt; &amp;lt;file&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="52e296f668c69ac58f1c4c9ce44e7c52c92191cd" translate="yes" xml:space="preserve">
          <source>(F) You wrote something like</source>
          <target state="translated">（F）你写了类似</target>
        </trans-unit>
        <trans-unit id="6c542e06a12f8da13ac9ec338769f631a3564f28" translate="yes" xml:space="preserve">
          <source>(F) You wrote something like &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr/a-z-0//&lt;/a&gt;&lt;/code&gt; which doesn't mean anything at all. To include a &lt;code&gt;-&lt;/code&gt; character in a transliteration, put it either first or last. (In the past, &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr/a-z-0//&lt;/a&gt;&lt;/code&gt; was synonymous with &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr/a-y//&lt;/a&gt;&lt;/code&gt;, which was probably not what you would have expected.)</source>
          <target state="translated">（F）您写了类似 &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr/a-z-0//&lt;/a&gt;&lt;/code&gt; 东西，这根本没有任何意义。要在音译中包含 &lt;code&gt;-&lt;/code&gt; 字符，请将其放在首尾。（过去， &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr/a-z-0//&lt;/a&gt;&lt;/code&gt; 是 &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr/a-y//&lt;/a&gt;&lt;/code&gt; 同义词，这可能与您期望的不一样。）</target>
        </trans-unit>
        <trans-unit id="e8e38ea2fa5e64902c76bc95fcce4e33ba6a342b" translate="yes" xml:space="preserve">
          <source>(F) You're on a system such as MS-DOS that gets confused if you try reading from a deleted (but still opened) file. You have to say &lt;code&gt;-i.bak&lt;/code&gt; , or some such.</source>
          <target state="translated">（F）您在诸如MS-DOS的系统上，如果尝试从已删除（但仍处于打开状态）的文件中进行读取，则会感到困惑。您必须说 &lt;code&gt;-i.bak&lt;/code&gt; 或类似的东西。</target>
        </trans-unit>
        <trans-unit id="7a83143d3c986b125503812901b1bff54ca36b16" translate="yes" xml:space="preserve">
          <source>(F) You're running under taint mode, and the &lt;code&gt;%ENV&lt;/code&gt; variable has been aliased to another hash, so it doesn't reflect anymore the state of the program's environment. This is potentially insecure.</source>
          <target state="translated">（F）您正在异味模式下运行，并且 &lt;code&gt;%ENV&lt;/code&gt; 变量已别名为另一个哈希，因此它不再反映程序环境的状态。这可能是不安全的。</target>
        </trans-unit>
        <trans-unit id="0a65946a393eb1b5a783157fd0c01027bbec212f" translate="yes" xml:space="preserve">
          <source>(F) You've mixed up your reference types. You have to dereference a reference of the type needed. You can use the ref() function to test the type of the reference, if need be.</source>
          <target state="translated">（F）您混合了参考类型。您必须取消引用所需类型的引用。如果需要，可以使用ref（）函数测试引用的类型。</target>
        </trans-unit>
        <trans-unit id="849a3a21e5e551e148cb4fd317c3f5abb5da518a" translate="yes" xml:space="preserve">
          <source>(F) You've omitted the closing parenthesis in a function prototype definition.</source>
          <target state="translated">（F）您已经省略了函数原型定义中的右括号。</target>
        </trans-unit>
        <trans-unit id="637d9c669950d2eb3b7bd08e20f94143e6b586fb" translate="yes" xml:space="preserve">
          <source>(F) You've said &quot;use strict&quot; or &quot;use strict vars&quot;, which indicates that all variables must either be lexically scoped (using &quot;my&quot; or &quot;state&quot;), declared beforehand using &quot;our&quot;, or explicitly qualified to say which package the global variable is in (using &quot;::&quot;).</source>
          <target state="translated">（F）您已经说过&amp;ldquo;使用严格&amp;rdquo;或&amp;ldquo;使用严格vars&amp;rdquo;，这表示所有变量必须在词法范围内（使用&amp;ldquo; my&amp;rdquo;或&amp;ldquo; state&amp;rdquo;），事先使用&amp;ldquo;我们的&amp;rdquo;声明或明确限定为说出全局变量在哪个包中（使用&amp;ldquo; ::&amp;rdquo;）。</target>
        </trans-unit>
        <trans-unit id="7630ca6246f34eae270881471cf277e175234aa6" translate="yes" xml:space="preserve">
          <source>(F) You've told Perl to dereference a string, something which &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict&lt;/code&gt; blocks to prevent it happening accidentally. See &lt;a href=&quot;perlref#Symbolic-references&quot;&gt;Symbolic references in perlref&lt;/a&gt;. This can be triggered by an &lt;code&gt;@&lt;/code&gt; or &lt;code&gt;$&lt;/code&gt; in a double-quoted string immediately before interpolating a variable, for example in &lt;code&gt;&quot;user @$twitter_id&quot;&lt;/code&gt; , which says to treat the contents of &lt;code&gt;$twitter_id&lt;/code&gt; as an array reference; use a &lt;code&gt;\&lt;/code&gt; to have a literal &lt;code&gt;@&lt;/code&gt; symbol followed by the contents of &lt;code&gt;$twitter_id&lt;/code&gt; : &lt;code&gt;&quot;user \@$twitter_id&quot;&lt;/code&gt; .</source>
          <target state="translated">（F）您已经告诉Perl取消引用字符串，该字符串 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict&lt;/code&gt; 块来防止意外发生。请参见&lt;a href=&quot;perlref#Symbolic-references&quot;&gt;perlref中的符号引用&lt;/a&gt;。可以在插补变量之前用双引号引起来的 &lt;code&gt;@&lt;/code&gt; 或 &lt;code&gt;$&lt;/code&gt; 来触发此操作，例如在 &lt;code&gt;&quot;user @$twitter_id&quot;&lt;/code&gt; ，该变量表示将 &lt;code&gt;$twitter_id&lt;/code&gt; 的内容视为数组引用；使用 &lt;code&gt;\&lt;/code&gt; 带有文字 &lt;code&gt;@&lt;/code&gt; 符号，后跟 &lt;code&gt;$twitter_id&lt;/code&gt; 的内容： &lt;code&gt;&quot;user \@$twitter_id&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="328d1834e87cd3a12d0d886781df832cd4442476" translate="yes" xml:space="preserve">
          <source>(F) You've used the &lt;code&gt;/e&lt;/code&gt; switch to evaluate the replacement for a substitution, but perl found a syntax error in the code to evaluate, most likely an unexpected right brace '}'.</source>
          <target state="translated">（F）您已经使用 &lt;code&gt;/e&lt;/code&gt; 开关来评估替换项，但是perl在代码中发现了语法错误来进行评估，很可能是意外的右括号'}'。</target>
        </trans-unit>
        <trans-unit id="494183ad4a67476ddc028be8b3568acd877e49b4" translate="yes" xml:space="preserve">
          <source>(F) Your C library apparently doesn't implement gethostent(), probably because if it did, it'd feel morally obligated to return every hostname on the Internet.</source>
          <target state="translated">（F）您的C库显然没有实现gethostent（），这可能是因为这样做确实会导致道德上返回Internet上的每个主机名。</target>
        </trans-unit>
        <trans-unit id="f385f8c5fde38f51661c7c67e8c893e31e564018" translate="yes" xml:space="preserve">
          <source>(F) Your Perl has not been configured to have PerlIO, and therefore you cannot use IO layers. To have PerlIO, Perl must be configured with 'useperlio'.</source>
          <target state="translated">（F）您的Perl尚未配置为具有PerlIO，因此无法使用IO层。要拥有PerlIO，必须为Perl配置&amp;ldquo; useperlio&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="614fec45449f413b67d662f4daef984b9091dd40" translate="yes" xml:space="preserve">
          <source>(F) Your format contains the ~~ repeat-until-blank sequence and a numeric field that will never go blank so that the repetition never terminates. You might use ^# instead. See &lt;a href=&quot;perlform&quot;&gt;perlform&lt;/a&gt;.</source>
          <target state="translated">（F）您的格式包含~~ repeat-until-blank序列和一个数字字段，该字段永远不会为空，因此重复不会终止。您可以改用^＃。参见&lt;a href=&quot;perlform&quot;&gt;perlform&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="97497e879f52c8e1b00a110160c36bbdbbd91f9e" translate="yes" xml:space="preserve">
          <source>(F) Your machine apparently doesn't implement fcntl(). What is this, a PDP-11 or something?</source>
          <target state="translated">（F）您的计算机显然未实现fcntl（）。这是什么，PDP-11或什么？</target>
        </trans-unit>
        <trans-unit id="ed49e7629179f8a9c2972ce9ac26fb47a729c581" translate="yes" xml:space="preserve">
          <source>(F) Your machine apparently doesn't implement ioctl(), which is pretty strange for a machine that supports C.</source>
          <target state="translated">（F）您的机器显然没有实现ioctl（），对于支持C的机器来说这很奇怪。</target>
        </trans-unit>
        <trans-unit id="af2bb18338059cab0ae7ced878d9e7fe5bd60c7e" translate="yes" xml:space="preserve">
          <source>(F) Your machine doesn't implement a file truncation mechanism that Configure knows about.</source>
          <target state="translated">（F）您的计算机未实现Configure知道的文件截断机制。</target>
        </trans-unit>
        <trans-unit id="b8f0f2fab8ba021c2aff30be6ec8130b769317ce" translate="yes" xml:space="preserve">
          <source>(F) Your machine doesn't implement the sockatmark() functionality, neither as a system call nor an ioctl call (SIOCATMARK).</source>
          <target state="translated">（F）您的计算机没有实现sockatmark（）功能，既不是系统调用也不是ioctl调用（SIOCATMARK）。</target>
        </trans-unit>
        <trans-unit id="0cd83d191af3ec605b7662460573c10840f0c873" translate="yes" xml:space="preserve">
          <source>(F) Your machine doesn't implement the umask function and you tried to use it to restrict permissions for yourself (EXPR &amp;amp; 0700).</source>
          <target state="translated">（F）您的计算机未实现umask函数，因此您尝试使用它来限制自己的权限（EXPR＆0700）。</target>
        </trans-unit>
        <trans-unit id="2b11a78ede1b18f203901e0ccba6fd091f9c8f08" translate="yes" xml:space="preserve">
          <source>(F) Your machine doesn't support dump/undump.</source>
          <target state="translated">（F）您的机器不支持转储/转储。</target>
        </trans-unit>
        <trans-unit id="0f0aad5b06b2c1ded7cc326569f66bf0ed1faab9" translate="yes" xml:space="preserve">
          <source>(F) Your machine doesn't support opendir() and readdir().</source>
          <target state="translated">（F）您的机器不支持opendir（）和readdir（）。</target>
        </trans-unit>
        <trans-unit id="645a9a2249bb1cbc3f97634aa27e2af51efd30d4" translate="yes" xml:space="preserve">
          <source>(F) Your machine doesn't support the Berkeley socket mechanism, or at least that's what Configure thought.</source>
          <target state="translated">（F）您的计算机不支持Berkeley套接字机制，或者至少这是Configure的想法。</target>
        </trans-unit>
        <trans-unit id="31a3fc23f65aaf3ad2d56cf49b721eeaf820b88a" translate="yes" xml:space="preserve">
          <source>(F) Your platform has very uncommon byte-order and integer size, so it was not possible to set up some or all fixed-width byte-order conversion functions. This is only a problem when you're using the '&amp;lt;' or '&amp;gt;' modifiers in (un)pack templates. See &lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;.</source>
          <target state="translated">（F）您的平台的字节序和整数大小非常少见，因此无法设置某些或所有固定宽度的字节序转换功能。只有在（un）pack模板中使用'&amp;lt;'或'&amp;gt;'修饰符时，这才是问题。参见&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="541c90b8476d8d95887f552667cf16bb69fc7f1b" translate="yes" xml:space="preserve">
          <source>(F) Your platform's byte-order is neither big-endian nor little-endian, or it has a very strange pointer size. Packing and unpacking big- or little-endian floating point values and pointers may not be possible. See &lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;.</source>
          <target state="translated">（F）您的平台的字节顺序既不是big-endian也不是little-endian，或者它的指针大小非常奇怪。可能无法打包大端或小端浮点值和指针。参见&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d9c5b20a54bcaff04c2df514716dd2603bfd867c" translate="yes" xml:space="preserve">
          <source>(F) Your program file begins with a Unicode Byte Order Mark (BOM) which declares it to be in a Unicode encoding that Perl cannot read.</source>
          <target state="translated">（F）您的程序文件以Unicode字节顺序标记（BOM）开头，该文件声明其为Perl无法读取的Unicode编码。</target>
        </trans-unit>
        <trans-unit id="726635fd3d169e64dfd076f6d649aff0097bea8b" translate="yes" xml:space="preserve">
          <source>(F) Your system has POSIX getpgrp(), which takes no argument, unlike the BSD version, which takes a pid.</source>
          <target state="translated">（F）您的系统具有POSIX getpgrp（），它不带任何参数，这与BSD版本的带pid不同。</target>
        </trans-unit>
        <trans-unit id="8f18f4da0bdd1b901a5d55a81a0199c8eef69a6b" translate="yes" xml:space="preserve">
          <source>(F) Your system has the setpgrp() from BSD 4.2, which takes no arguments, unlike POSIX setpgid(), which takes a process ID and process group ID.</source>
          <target state="translated">（F）您的系统具有BSD 4.2中的setpgrp（），它不带任何参数，这与POSIX setpgid（）不同，后者带一个进程ID和一个进程组ID。</target>
        </trans-unit>
        <trans-unit id="9006dfed724faaaccb8df3e81d3833ac06bf1592" translate="yes" xml:space="preserve">
          <source>(F) Your template contains ()-groups with a ridiculously deep nesting level.</source>
          <target state="translated">（F）您的模板包含（）-组，其嵌套级别非常高。</target>
        </trans-unit>
        <trans-unit id="087118c14335b46c69254da20edb7615b6c9b8ed" translate="yes" xml:space="preserve">
          <source>(F) Your version of executable does not support forking.</source>
          <target state="translated">（F）您的可执行文件版本不支持分支。</target>
        </trans-unit>
        <trans-unit id="d3516c882d9040351bf3f6df8288dc44dfe46801" translate="yes" xml:space="preserve">
          <source>(F) Your version of the C library apparently doesn't do times(). I suspect you're not running on Unix.</source>
          <target state="translated">（F）您的C库版本显然不执行times（）。我怀疑您不是在Unix上运行。</target>
        </trans-unit>
        <trans-unit id="ffd7e5c7e49e9ba2dc066dd9d3105fed188cee2a" translate="yes" xml:space="preserve">
          <source>(F) defined() is not useful on arrays because it checks for an undefined</source>
          <target state="translated">（F）define（）在数组上没有用，因为它检查未定义的</target>
        </trans-unit>
        <trans-unit id="f71023579259ca2a7a41517ed6b679b28ac0b1bb" translate="yes" xml:space="preserve">
          <source>(F) msgsnd() requires a string at least as long as sizeof(long).</source>
          <target state="translated">[F）msgsnd（）要求的字符串至少与sizeof（long）一样长。</target>
        </trans-unit>
        <trans-unit id="e56e499593a725d44c18e9aef5ea05ad1730051b" translate="yes" xml:space="preserve">
          <source>(F)(P) Error resolving overloading specified by a method name (as opposed to a subroutine reference): no such method callable via the package. If the method name is &lt;code&gt;???&lt;/code&gt;, this is an internal error.</source>
          <target state="translated">（F）（P）解决由方法名称（与子例程引用相对）指定的重载的错误：无法通过包调用此类方法。如果方法名称为 &lt;code&gt;???&lt;/code&gt; ， 这是一个内部错误。</target>
        </trans-unit>
        <trans-unit id="5d26c8170c015de2dca77a57b6b1f545e7a49095" translate="yes" xml:space="preserve">
          <source>(F)(W layer) You tried to do a read/write/send/recv/seek operation with an offset pointing outside the buffer. This is difficult to imagine. The sole exceptions to this are that zero padding will take place when going past the end of the string when either &lt;code&gt;&lt;a href=&quot;functions/sysread&quot;&gt;sysread()&lt;/a&gt;&lt;/code&gt;ing a file, or when seeking past the end of a scalar opened for I/O (in anticipation of future reads and to imitate the behavior with real files).</source>
          <target state="translated">[F] [W层）您尝试使用指向缓冲区外部的偏移量执行读/写/发送/接收/查找操作。这很难想象。唯一的例外是，当 &lt;code&gt;&lt;a href=&quot;functions/sysread&quot;&gt;sysread()&lt;/a&gt;&lt;/code&gt; 写入文件时，或在经过I / O打开的标量的末尾时（预期将来会进行读取和读取），在字符串末尾进行零填充将是零。模仿真实文件的行为）。</target>
        </trans-unit>
        <trans-unit id="03f12d5314d08da8cfff6947dcd2c877601a4f08" translate="yes" xml:space="preserve">
          <source>(File::Spec::VMS used to do this for us, but it's being removed)</source>
          <target state="translated">（File :: Spec :: VMS曾经为我们执行过此操作，但已将其删除）</target>
        </trans-unit>
        <trans-unit id="3570d6a58788aee334edb2e7327f6e3b68455403" translate="yes" xml:space="preserve">
          <source>(For the rest of this section, I'll assume that this &quot;first language class&quot; of Projname::L10N::en_us has _AUTO lexicon.)</source>
          <target state="translated">（在本节的其余部分中，我假定Projname :: L10N :: en_us的&amp;ldquo;第一语言类&amp;rdquo;具有_AUTO词典。）</target>
        </trans-unit>
        <trans-unit id="a64416081926d856c0cceb653fefbb7f8243edcc" translate="yes" xml:space="preserve">
          <source>(Formerly &quot;aka&quot;.)</source>
          <target state="translated">（以前称为&amp;ldquo; aka&amp;rdquo;。）</target>
        </trans-unit>
        <trans-unit id="229825b75900a4d42ff1f4e4b787d0018b60ed2b" translate="yes" xml:space="preserve">
          <source>(Formerly &quot;ava&quot;.)</source>
          <target state="translated">（以前为&amp;ldquo; ava&amp;rdquo;。）</target>
        </trans-unit>
        <trans-unit id="145f275077dc0a9c36ca7ac404684635eebe5874" translate="yes" xml:space="preserve">
          <source>(Formerly &quot;bam&quot;.)</source>
          <target state="translated">（以前是&amp;ldquo; bam&amp;rdquo;。）</target>
        </trans-unit>
        <trans-unit id="151d9a32a1799e105c76f41beaff824b866de3cc" translate="yes" xml:space="preserve">
          <source>(Formerly &quot;ewe&quot;.)</source>
          <target state="translated">（以前称为&amp;ldquo;母羊&amp;rdquo;。）</target>
        </trans-unit>
        <trans-unit id="ff99663ba1c41173da84204bb12f98f44eaebf31" translate="yes" xml:space="preserve">
          <source>(Formerly &quot;ful&quot;.)</source>
          <target state="translated">（以前为&amp;ldquo;完整&amp;rdquo;。）</target>
        </trans-unit>
        <trans-unit id="70d4261db30ac61e12879c5dba0a9a584db8093f" translate="yes" xml:space="preserve">
          <source>(Formerly &quot;ibo&quot;.)</source>
          <target state="translated">（以前称为&amp;ldquo; ibo&amp;rdquo;。）</target>
        </trans-unit>
        <trans-unit id="23caf59cef24559080d6b900edee142e1058c34c" translate="yes" xml:space="preserve">
          <source>(Formerly &quot;in&quot;.)</source>
          <target state="translated">（以前为&amp;ldquo;中&amp;rdquo;。）</target>
        </trans-unit>
        <trans-unit id="2f6de56d51f9d574d00c23416e10cd54e5961e26" translate="yes" xml:space="preserve">
          <source>(Formerly &quot;iw&quot;.)</source>
          <target state="translated">（以前称为&amp;ldquo; iw&amp;rdquo;。）</target>
        </trans-unit>
        <trans-unit id="caec1f1389ac5a0d3e8f324fc432925c3aa88b74" translate="yes" xml:space="preserve">
          <source>(Formerly &quot;jw&quot; because of a typo.)</source>
          <target state="translated">（由于打错，以前称为&amp;ldquo; jw&amp;rdquo;。）</target>
        </trans-unit>
        <trans-unit id="b6d00d4ba136ef92f276b8de7b8ffd74dad596ef" translate="yes" xml:space="preserve">
          <source>(Formerly &quot;kau&quot;.)</source>
          <target state="translated">（以前是&amp;ldquo; kau&amp;rdquo;。）</target>
        </trans-unit>
        <trans-unit id="7ee1dffce695b826e6c8a61ff3e93eceb234ede2" translate="yes" xml:space="preserve">
          <source>(Formerly &quot;kon&quot;.)</source>
          <target state="translated">（以前称为&amp;ldquo; kon&amp;rdquo;。）</target>
        </trans-unit>
        <trans-unit id="cc06b1078a9062cde8287663826e70f9317a366f" translate="yes" xml:space="preserve">
          <source>(Formerly &quot;lub&quot;.)</source>
          <target state="translated">（以前为&amp;ldquo; lub&amp;rdquo;。）</target>
        </trans-unit>
        <trans-unit id="301a2afa6110586dca748d29f337ed4353122c66" translate="yes" xml:space="preserve">
          <source>(Formerly &quot;lug&quot;.)</source>
          <target state="translated">（以前是&amp;ldquo; lug&amp;rdquo;。）</target>
        </trans-unit>
        <trans-unit id="f25cb0a1e9ff4edbe153a50fcdc4f1a4f7fdec97" translate="yes" xml:space="preserve">
          <source>(From the security viewpoint, testing for permissions before attempting to do something is silly anyway: if one tries this, there is potential for race conditions. Someone or something might change the permissions between the permissions check and the actual operation. Just try the operation.)</source>
          <target state="translated">（从安全的角度来看，尝试做某事之前对权限进行测试是很愚蠢的：如果尝试这样做，则有潜在的竞争条件。某人或某物可能会在权限检查和实际操作之间更改权限。只需尝试操作）</target>
        </trans-unit>
        <trans-unit id="5a92a9b5e358cf14ee485ba2e13c196b8e413a18" translate="yes" xml:space="preserve">
          <source>(Historical)</source>
          <target state="translated">(Historical)</target>
        </trans-unit>
        <trans-unit id="d1c22ff5f3432f13922dc3baee312a55d67a6376" translate="yes" xml:space="preserve">
          <source>(Historical) (Until 15th century or so.)</source>
          <target state="translated">（历史）（直到15世纪左右。）</target>
        </trans-unit>
        <trans-unit id="94ce260471d0e8e26d69af5c3e114969bf31b6a5" translate="yes" xml:space="preserve">
          <source>(Historical) NOT Chibchan (which is a language family).</source>
          <target state="translated">（历史记录）不是Chibchan（这是一个语言家族）。</target>
        </trans-unit>
        <trans-unit id="450bfa4db793d66c26a96917cf4502dda7f6eb78" translate="yes" xml:space="preserve">
          <source>(Historical) NOT Ladin! NOT Ladino!</source>
          <target state="translated">（历史）不是拉丹！不是拉丁裔！</target>
        </trans-unit>
        <trans-unit id="0dc609aff59e64ef2b9589b3bb38b0edd476d332" translate="yes" xml:space="preserve">
          <source>(Historical?)</source>
          <target state="translated">(Historical?)</target>
        </trans-unit>
        <trans-unit id="2fafd5db1f40260d40c67be6b45e5df8a0f716f8" translate="yes" xml:space="preserve">
          <source>(I don't dare make any comparison with Unicode Consortium and the Vogons here ;) Or, comparing Encode to Babel Fish is completely appropriate -- if you can only stick this into your ear :)</source>
          <target state="translated">（在这里，我不敢与Unicode联盟和Vogons进行任何比较；）或者，将Encode与Babel Fish进行比较是完全合适的-如果您只能将它放在耳朵里：）</target>
        </trans-unit>
        <trans-unit id="5332303ce804dacc543b9c5fb49ae58e3dd90ddc" translate="yes" xml:space="preserve">
          <source>(I.e. &lt;code&gt;ATTR(ANY)&lt;/code&gt; is a synonym for &lt;code&gt;:ATTR&lt;/code&gt; ).</source>
          <target state="translated">（即 &lt;code&gt;ATTR(ANY)&lt;/code&gt; 是 &lt;code&gt;:ATTR&lt;/code&gt; 的同义词）。</target>
        </trans-unit>
        <trans-unit id="293eff504cb4f9714b7272e90eaae9bc13bc379e" translate="yes" xml:space="preserve">
          <source>(If &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; is set, then this depends on the current locale.) Today it is more common to use the quotemeta() function or the &lt;code&gt;\Q&lt;/code&gt; metaquoting escape sequence to disable all metacharacters' special meanings like this:</source>
          <target state="translated">（如果 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale，则取决于当前的语言环境。）如今，更常见的是使用quotemeta（）函数或 &lt;code&gt;\Q&lt;/code&gt; 引号转义序列来禁用所有元字符的特殊含义，如下所示：</target>
        </trans-unit>
        <trans-unit id="6875a21292beabb9918b7735a9167aa85e103833" translate="yes" xml:space="preserve">
          <source>(If a curly bracket occurs in any other context and does not form part of a backslashed sequence like &lt;code&gt;\x{...}&lt;/code&gt; , it is treated as a regular character. However, a deprecation warning is raised for all such occurrences, and in Perl v5.26, literal uses of a curly bracket will be required to be escaped, say by preceding them with a backslash (&lt;code&gt;&quot;\{&quot;&lt;/code&gt; ) or enclosing them within square brackets (&lt;code&gt;&quot;[{]&quot;&lt;/code&gt; ). This change will allow for future syntax extensions (like making the lower bound of a quantifier optional), and better error checking of quantifiers.)</source>
          <target state="translated">（如果大括号在任何其他上下文中出现，并且不构成反斜杠序列的一部分，如 &lt;code&gt;\x{...}&lt;/code&gt; ，则将其视为常规字符。但是，对于所有此类情况，都会引发弃用警告，并且在在Perl v5.26中，必须转义大括号的使用，例如在大括号前加上反斜杠（ &lt;code&gt;&quot;\{&quot;&lt;/code&gt; ）或将其括在方括号（ &lt;code&gt;&quot;[{]&quot;&lt;/code&gt; ）之内。将来的语法扩展（例如使量词的下限为可选），以及对量词进行更好的错误检查。）</target>
        </trans-unit>
        <trans-unit id="11d2c8ee774262d31e40dea3f3a66aeaf4c1f22e" translate="yes" xml:space="preserve">
          <source>(If the entry doesn't exist, the return value is a single meaningless true value.)</source>
          <target state="translated">（如果该条目不存在，则返回值为单个无意义的真实值。）</target>
        </trans-unit>
        <trans-unit id="a6d5a526ef92e8ad93680d3a65aa7158c7c852ac" translate="yes" xml:space="preserve">
          <source>(If you don't receive a &quot;Can't locate ... in @INC&quot; error message, then Perl found the module name you asked for.)</source>
          <target state="translated">（如果没有收到&amp;ldquo;在@INC中找不到...&amp;rdquo;错误消息，则Perl找到了您要求的模块名称。）</target>
        </trans-unit>
        <trans-unit id="99a7a0acd725c26a5ae45acbbb16e8bc31a27fa0" translate="yes" xml:space="preserve">
          <source>(If you don't specify test scripts, the whole test suite will be run.)</source>
          <target state="translated">（如果不指定测试脚本，则将运行整个测试套件。）</target>
        </trans-unit>
        <trans-unit id="7985684dd316aed11b1adec084c4f73194c7d80c" translate="yes" xml:space="preserve">
          <source>(Implementationally, searching with limit_glob ends up setting limit_re and usually dir_prefix.)</source>
          <target state="translated">（实际上，使用limit_glob搜索最终会设置limit_re，通常是dir_prefix。）</target>
        </trans-unit>
        <trans-unit id="25ae98ab791d31d815cbe84ec98fe03b4f5b63bf" translate="yes" xml:space="preserve">
          <source>(In Perls earlier than 5.8.1 the &lt;b&gt;-C&lt;/b&gt; switch was a Win32-only switch that enabled the use of Unicode-aware &quot;wide system call&quot; Win32 APIs. This feature was practically unused, however, and the command line switch was therefore &quot;recycled&quot;.)</source>
          <target state="translated">（在5.8.1之前的Perls中，&lt;b&gt;-C&lt;/b&gt;开关是一个仅Win32的开关，它允许使用支持Unicode的&amp;ldquo;系统调用&amp;rdquo; Win32 API。但是，此功能实际上未使用，因此命令行开关是&amp;ldquo;回收&amp;rdquo;。）</target>
        </trans-unit>
        <trans-unit id="799a90307dde4c2a38f9dd856c0cad03bb288437" translate="yes" xml:space="preserve">
          <source>(In SGMLish jargon, all Pod commands are like block-level elements, whereas all Pod formatting codes are like inline-level elements.)</source>
          <target state="translated">（在SGMLish术语中，所有Pod命令都像块级元素，而所有Pod格式代码都像内联级元素。）</target>
        </trans-unit>
        <trans-unit id="e95f4a9528bab498d1e4961f121504ef2fd3aa68" translate="yes" xml:space="preserve">
          <source>(In the absence of an explicit &lt;code&gt;&lt;a href=&quot;functions/return&quot;&gt;return&lt;/a&gt;&lt;/code&gt;, a subroutine, eval, or do FILE automatically returns the value of the last expression evaluated.)</source>
          <target state="translated">（在没有显式 &lt;code&gt;&lt;a href=&quot;functions/return&quot;&gt;return&lt;/a&gt;&lt;/code&gt; 的情况下，子例程，eval或do FILE自动返回最后一个求值表达式的值。）</target>
        </trans-unit>
        <trans-unit id="e8700d073c05a7cd45f4c88312a6410a7ccaf3d2" translate="yes" xml:space="preserve">
          <source>(In the absence of an explicit &lt;code&gt;&lt;a href=&quot;return&quot;&gt;return&lt;/a&gt;&lt;/code&gt;, a subroutine, eval, or do FILE automatically returns the value of the last expression evaluated.)</source>
          <target state="translated">（在没有显式 &lt;code&gt;&lt;a href=&quot;return&quot;&gt;return&lt;/a&gt;&lt;/code&gt; 的情况下，子例程，eval或do FILE自动返回最后一个求值表达式的值。）</target>
        </trans-unit>
        <trans-unit id="cc1615ce00c8de68ce78f0baada446f5b951e3d5" translate="yes" xml:space="preserve">
          <source>(Internal) debug options, probably only useful if &lt;code&gt;-r&lt;/code&gt; included. The &lt;code&gt;t&lt;/code&gt; option prints the object on the top of the stack as it's being tracked. The &lt;code&gt;O&lt;/code&gt; option prints each operator as it's being processed in the execution order of the program.</source>
          <target state="translated">（内部）调试选项，仅在包含 &lt;code&gt;-r&lt;/code&gt; 时才有用。该 &lt;code&gt;t&lt;/code&gt; 选项打印对象的堆栈的顶部，因为它是被跟踪。所述 &lt;code&gt;O&lt;/code&gt; 因为它在程序的执行顺序被处理选项打印每个操作员。</target>
        </trans-unit>
        <trans-unit id="1252b953e861a258d910814cd08a40eaecd98f07" translate="yes" xml:space="preserve">
          <source>(Is &lt;code&gt;LATIN CAPITAL LETTER A WITH ACUTE&lt;/code&gt; equal to &lt;code&gt;LATIN CAPITAL LETTER A&lt;/code&gt; ?)</source>
          <target state="translated">（ &lt;code&gt;LATIN CAPITAL LETTER A WITH ACUTE&lt;/code&gt; &lt;code&gt;LATIN CAPITAL LETTER A&lt;/code&gt; 是否等于拉丁文大写字母A？）</target>
        </trans-unit>
        <trans-unit id="19a31d35fd3cf749a6f2c6f016dc26417e810410" translate="yes" xml:space="preserve">
          <source>(It also provides a kind of workaround for RT#60374: &quot;Safe.pm sort {} bug with -Dusethreads&quot;. See &lt;a href=&quot;http://rt.perl.org/rt3//Public/Bug/Display.html?id=60374&quot;&gt;http://rt.perl.org/rt3//Public/Bug/Display.html?id=60374&lt;/a&gt; for</source>
          <target state="translated">（它还为RT＃60374提供了一种解决方法：&amp;ldquo; Safe.pm sort-} -Dusethreads bug&amp;rdquo;。请参阅&lt;a href=&quot;http://rt.perl.org/rt3//Public/Bug/Display.html?id=60374&quot;&gt;http://rt.perl.org/rt3//Public/Bug/Display.html?id= 60374&lt;/a&gt;为</target>
        </trans-unit>
        <trans-unit id="4968103bd9c33fe0bd4b0d7710cba3cc4b7f7c59" translate="yes" xml:space="preserve">
          <source>(It is actually possible to get private functions by saying:</source>
          <target state="translated">（实际上可以通过说出私有功能：</target>
        </trans-unit>
        <trans-unit id="3a88f4a87692e147c08e6d72244cc2946d8b7c4d" translate="yes" xml:space="preserve">
          <source>(It is actually possible to get private functions by saying: &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt; $subref = &lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt; { ... }; &amp;amp;$subref;&lt;/code&gt; . But there's no way to call that directly as a method, because a method must have a name in the symbol table.)</source>
          <target state="translated">（实际上可以通过说： &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt; $subref = &lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt; { ... }; &amp;amp;$subref;&lt;/code&gt; 来获得私有函数。但是无法直接将其作为方法调用，因为方法必须在符号中包含名称表。）</target>
        </trans-unit>
        <trans-unit id="cf8c2c67bc6bba9cb24dd802da2b3ce6b1a21a6c" translate="yes" xml:space="preserve">
          <source>(It is planned to extend this behavior to ranges in &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr///&lt;/a&gt;&lt;/code&gt; in Perl v5.24.)</source>
          <target state="translated">（计划在Perl v5.24中将此行为扩展到 &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr///&lt;/a&gt;&lt;/code&gt; 中的范围。）</target>
        </trans-unit>
        <trans-unit id="78c0bd7f1dbfc5a721844457f76c5e9531be7aad" translate="yes" xml:space="preserve">
          <source>(Linux).</source>
          <target state="translated">(Linux).</target>
        </trans-unit>
        <trans-unit id="2c59eb0b5a3304e9ab1611d4757f5384660b82a6" translate="yes" xml:space="preserve">
          <source>(Mnemonic &quot;This is like that&quot;.)</source>
          <target state="translated">（助记符&amp;ldquo;就是这样&amp;rdquo;。）</target>
        </trans-unit>
        <trans-unit id="e10d101e5fb81d50e9082ec790450839ba188b38" translate="yes" xml:space="preserve">
          <source>(Mnemonic: &quot;This is ok.&quot;)</source>
          <target state="translated">（助记符：&amp;ldquo;没关系。&amp;rdquo;）</target>
        </trans-unit>
        <trans-unit id="7c3374f77fa09317b34268275f5b80bb4dc31f1f" translate="yes" xml:space="preserve">
          <source>(Mnemonic: &quot;This is that.&quot; &quot;This isn't that.&quot;)</source>
          <target state="translated">（助记符：&amp;ldquo;就是这个。&amp;rdquo;&amp;ldquo;不是那个。&amp;rdquo;）</target>
        </trans-unit>
        <trans-unit id="166c71891738ca1cf30d20d5d8c4636b572ccc9d" translate="yes" xml:space="preserve">
          <source>(NFD).</source>
          <target state="translated">(NFD).</target>
        </trans-unit>
        <trans-unit id="9c5bb3805c43c4b933ad7d21352d4e86ffa1e704" translate="yes" xml:space="preserve">
          <source>(NOT &quot;jp&quot;!)</source>
          <target state="translated">（不是&amp;ldquo; jp&amp;rdquo;！）</target>
        </trans-unit>
        <trans-unit id="492eff87c9da08b8f14d5953528b66319b80d30e" translate="yes" xml:space="preserve">
          <source>(No, (C) is not needed. No, &quot;all rights reserved&quot; is not needed.)</source>
          <target state="translated">（不，不需要（C）。不需要，不需要&amp;ldquo;保留所有权利&amp;rdquo;。）</target>
        </trans-unit>
        <trans-unit id="1355d9347b48e13a4ae0b109b3bbdbb9eb66ce25" translate="yes" xml:space="preserve">
          <source>(Note that a missing or undefined value means a different thing in the first slot than in the second. That's so that &lt;code&gt;batch_convert()&lt;/code&gt; with no arguments (or undef arguments) means &quot;go from @INC, into the current directory.)</source>
          <target state="translated">（请注意，缺少或未定义的值表示第一个插槽中的值与第二个插槽中的值不同。因此，不带参数（或undef参数）的 &lt;code&gt;batch_convert()&lt;/code&gt; ）意味着&amp;ldquo;从@INC进入当前目录。）</target>
        </trans-unit>
        <trans-unit id="1a3032eac7bfb2ffbaf6460506183b59585f63db" translate="yes" xml:space="preserve">
          <source>(Note that having *nixish full path to perl</source>
          <target state="translated">（请注意，有* nixish完整路径可以访问perl</target>
        </trans-unit>
        <trans-unit id="48e170a45cf8d2966c20a07ed3d690064ceb164c" translate="yes" xml:space="preserve">
          <source>(Note that in previous drafts of this document and of perlpod, formatting codes were referred to as &quot;interior sequences&quot;, and this term may still be found in the documentation for Pod parsers, and in error messages from Pod processors.)</source>
          <target state="translated">（请注意，在本文档和Perodod的早期草稿中，格式代码被称为&amp;ldquo;内部序列&amp;rdquo;，并且在Pod解析器的文档以及Pod处理器的错误消息中仍然可以找到该术语。）</target>
        </trans-unit>
        <trans-unit id="233b62f32598318b6eb6ae947a040ff4e967ade4" translate="yes" xml:space="preserve">
          <source>(Note that print doesn't do what you expect if the expression starts with '(' hence the &lt;code&gt;+&lt;/code&gt; )</source>
          <target state="translated">（请注意，如果表达式以'（'开头，因此 &lt;code&gt;+&lt;/code&gt; ），则print不会达到您的期望</target>
        </trans-unit>
        <trans-unit id="a685bbe2884ef5c0dd02e430c8f163847f3ce51d" translate="yes" xml:space="preserve">
          <source>(Note that processing of &lt;code&gt;PERL_RL&lt;/code&gt; for ornaments is in the discretion of the particular used &lt;code&gt;Term::ReadLine::*&lt;/code&gt; package).</source>
          <target state="translated">（请注意，对 &lt;code&gt;PERL_RL&lt;/code&gt; 装饰的处理取决于所使用的特定 &lt;code&gt;Term::ReadLine::*&lt;/code&gt; 包）。</target>
        </trans-unit>
        <trans-unit id="4e2778ef521ae1fa2d7ac34c4918dbf3558f6517" translate="yes" xml:space="preserve">
          <source>(Note that some of these may be moved to different libraries - eventually).</source>
          <target state="translated">（请注意，其中一些最终可能会移到其他库中）。</target>
        </trans-unit>
        <trans-unit id="546e022518f1e629160174e4ca81f514c17f6c71" translate="yes" xml:space="preserve">
          <source>(Note that the &lt;a href=&quot;bigint&quot;&gt;bigint&lt;/a&gt;, &lt;a href=&quot;bigrat&quot;&gt;bigrat&lt;/a&gt;, and &lt;a href=&quot;bignum&quot;&gt;bignum&lt;/a&gt; pragmas all support &lt;code&gt;&quot;NaN&quot;&lt;/code&gt; .)</source>
          <target state="translated">（请注意，&lt;a href=&quot;bigint&quot;&gt;bigint&lt;/a&gt;，&lt;a href=&quot;bigrat&quot;&gt;bigrat&lt;/a&gt;和&lt;a href=&quot;bignum&quot;&gt;bignum&lt;/a&gt;编译指示均支持 &lt;code&gt;&quot;NaN&quot;&lt;/code&gt; 。）</target>
        </trans-unit>
        <trans-unit id="01e9d2c00dfed840c5dac793116f604ce7782cdd" translate="yes" xml:space="preserve">
          <source>(Note that the command line there contains a literal atsign-I-N-C. This is handled as a special case by batch_convert, in order to save you having to enter the odd-looking &quot;&quot; as the first command-line parameter when you mean &quot;just use whatever's in @INC&quot;.)</source>
          <target state="translated">（请注意，该命令行中包含一个文字atsign-INC。batch_convert将其作为特殊情况处理，以免您在意思为&amp;ldquo; just&amp;rdquo;时必须输入看起来奇怪的&amp;ldquo;&amp;rdquo;作为第一个命令行参数。使用@INC中的所有内容。）</target>
        </trans-unit>
        <trans-unit id="bfb9a883d7456fdcdc1db6d793ab9a36440210e3" translate="yes" xml:space="preserve">
          <source>(Note that the newline is kept separate to avoid confusing the terminal as described above since a background color is being used.)</source>
          <target state="translated">（请注意，由于使用了背景色，因此换行符保持分开，以避免如上所述混淆终端。）</target>
        </trans-unit>
        <trans-unit id="4c2b89ad238aefa4861b3ead38cc3a950a87703f" translate="yes" xml:space="preserve">
          <source>(Note that the template &lt;code&gt;A*&lt;/code&gt; would only have packed &lt;code&gt;$str[0]&lt;/code&gt; in full length.)</source>
          <target state="translated">（请注意，模板 &lt;code&gt;A*&lt;/code&gt; 只会打包 &lt;code&gt;$str[0]&lt;/code&gt; 的完整长度。）</target>
        </trans-unit>
        <trans-unit id="fd7bd20183a190bf400bf50bbd6cbac4b1d932f4" translate="yes" xml:space="preserve">
          <source>(Note that these steps are usually handled automatically by the extension's Makefile).</source>
          <target state="translated">（请注意，这些步骤通常由扩展程序的Makefile自动处理）。</target>
        </trans-unit>
        <trans-unit id="c8eb1736f88b50ffbb2960f7c05438db21346262" translate="yes" xml:space="preserve">
          <source>(Note that we don't have to test for invariant characters in the examples above. The functions work on any well-formed UTF-8 input. It's just that its faster to avoid the function overhead when it's not needed.)</source>
          <target state="translated">（请注意，在上面的示例中，我们不必测试不变字符。该函数可在任何格式良好的UTF-8输入上使用。只是在不需要时避免函数开销的速度更快。）</target>
        </trans-unit>
        <trans-unit id="b024759505277f3f0c7ac6e37fe6694d87ea35be" translate="yes" xml:space="preserve">
          <source>(Note that you can put spaces in the template to make it more readable, but they don't translate to spaces in the output.) Here's what we got this time:</source>
          <target state="translated">（请注意，您可以在模板中放置空格以使其更具可读性，但是它们不会转换为输出中的空格。）这是我们这次得到的：</target>
        </trans-unit>
        <trans-unit id="dd2807f0715a16538be7069494b7b15e1777771e" translate="yes" xml:space="preserve">
          <source>(Note: &quot;mk man&quot; may produce some extraneous noise. Fear not.)</source>
          <target state="translated">（注意：&amp;ldquo; mk man&amp;rdquo;可能会产生一些外来噪音。请不要害怕。）</target>
        </trans-unit>
        <trans-unit id="d411461bb1f05ef733ec9e835ceb320d84309b23" translate="yes" xml:space="preserve">
          <source>(Note: If your rand function consistently returns numbers that are too large or too small, then your version of Perl was probably compiled with the wrong number of RANDBITS.)</source>
          <target state="translated">（注意：如果您的rand函数始终返回的数字太大或太小，则您的Perl版本可能是用错误的RANDBITS数编译的。）</target>
        </trans-unit>
        <trans-unit id="b57141d9afb7f420276d43eb36561546cdf1db1d" translate="yes" xml:space="preserve">
          <source>(Note: This subroutine is only available under Perl5.005)</source>
          <target state="translated">（注意：此子例程仅在Perl5.005下可用）</target>
        </trans-unit>
        <trans-unit id="8e437ce6a47a77b7e6aeb1d60b42f0b60edc4c11" translate="yes" xml:space="preserve">
          <source>(Note: the mod_perl apache module uses also this environment variable for its own purposes and extended its semantics. Refer to the mod_perl documentation for more information. Also, spawned threads do the equivalent of setting this variable to the value 1.)</source>
          <target state="translated">（注意：mod_perl apache模块也出于自身目的使用此环境变量并扩展了其语义。有关更多信息，请参阅mod_perl文档。此外，生成的线程等同于将此变量设置为值1。）</target>
        </trans-unit>
        <trans-unit id="c7cd3ff564af134bb07b5dd021a5faa1ebbc1ae5" translate="yes" xml:space="preserve">
          <source>(Note: we couldn't use MAKEFILE because dmake uses this for something else).</source>
          <target state="translated">（注意：我们无法使用MAKEFILE，因为dmake将此用于其他用途）。</target>
        </trans-unit>
        <trans-unit id="8407afebb21fd26808154e780e7ee32251329756" translate="yes" xml:space="preserve">
          <source>(Obviously, this call does not affect any currently extant threads.)</source>
          <target state="translated">（显然，此调用不会影响任何当前存在的线程。）</target>
        </trans-unit>
        <trans-unit id="412cad67f77110e218e2b89cee40a6217df882f1" translate="yes" xml:space="preserve">
          <source>(Of course you need lha or tar and gunzip for this.)</source>
          <target state="translated">（为此，您当然需要lha或tar和gunzip。）</target>
        </trans-unit>
        <trans-unit id="b58cef1c1013ff90df2979257338e5962a4f3f9d" translate="yes" xml:space="preserve">
          <source>(On EBCDIC platforms, Perl uses instead UTF-EBCDIC, which is a form of UTF-8 adapted for EBCDIC platforms. Below, we just talk about UTF-8. UTF-EBCDIC is like UTF-8, but the details are different. The macros hide the differences from you, just remember that the particular numbers and bit patterns presented below will differ in UTF-EBCDIC.)</source>
          <target state="translated">（在EBCDIC平台上，Perl改用UTF-EBCDIC，这是适用于EBCDIC平台的UTF-8形式。下面，我们仅讨论UTF-8。UTF-EBCDIC类似于UTF-8，但是细节有所不同。宏向您隐藏了差异，请记住以下呈现的特定数字和位模式在UTF-EBCDIC中会有所不同。）</target>
        </trans-unit>
        <trans-unit id="3a21ac78f3f37d985b7a09325ab452e0547af12a" translate="yes" xml:space="preserve">
          <source>(On systems that provide a handle for the loaded object such as SunOS and HPUX, $libref will be that handle. On other systems $libref will typically be $filename or a pointer to a buffer containing $filename. The application should not examine or alter $libref in any way.)</source>
          <target state="translated">（在提供诸如SunOS和HPUX之类的已加载对象句柄的系统上，$ libref将是该句柄。在其他系统上，$ libref通常将是$ filename或指向包含$ filename的缓冲区的指针。应用程序不应检查或以任何方式更改$ libref。）</target>
        </trans-unit>
        <trans-unit id="7916f8c996ac07822116110d01cd4bab3b6a88ec" translate="yes" xml:space="preserve">
          <source>(Only in Linux) Run all the tests using the memory leak + naughty memory access tool &quot;valgrind&quot;. The log files will be named</source>
          <target state="translated">（仅在Linux中）使用内存泄漏+顽皮的内存访问工具&amp;ldquo; valgrind&amp;rdquo;运行所有测试。日志文件将被命名</target>
        </trans-unit>
        <trans-unit id="09e5f8a81952c9376c925e7707e489da99abfd90" translate="yes" xml:space="preserve">
          <source>(Optional.) Flush the cache completely.</source>
          <target state="translated">（可选。）完全刷新缓存。</target>
        </trans-unit>
        <trans-unit id="5835997c11a74637b108798c0feb5cabefa73433" translate="yes" xml:space="preserve">
          <source>(P) &lt;code&gt;PerlIO_getname&lt;/code&gt; , a perl internal I/O function specific to VMS, was somehow called on another platform. This should not happen.</source>
          <target state="translated">（P） &lt;code&gt;PerlIO_getname&lt;/code&gt; 是VMS 专有的perl内部I / O函数，在另一个平台上被以某种方式调用。这不应该发生。</target>
        </trans-unit>
        <trans-unit id="dc58db7072e1f7fba8806dfea270837b51e8ed42" translate="yes" xml:space="preserve">
          <source>(P) A &quot;can't happen&quot; error, because safemalloc() should have caught it earlier.</source>
          <target state="translated">（P）一个&amp;ldquo;不可能发生&amp;rdquo;错误，因为safemalloc（）应该更早地捕获了它。</target>
        </trans-unit>
        <trans-unit id="58985825d348752b61027dc6b946271aad1faa56" translate="yes" xml:space="preserve">
          <source>(P) A child pseudo-process in the ithreads implementation on Windows was not scheduled within the time period allowed and therefore was not able to initialize properly.</source>
          <target state="translated">（P）Windows的ithreads实现中的子伪进程未在允许的时间内安排，因此无法正确初始化。</target>
        </trans-unit>
        <trans-unit id="63218668b70e4bf0756e321b27792ab7906efb49" translate="yes" xml:space="preserve">
          <source>(P) A dynamic loading library &lt;code&gt;.so&lt;/code&gt; or &lt;code&gt;.dll&lt;/code&gt; was being loaded into the process that was built against a different build of perl than the said library was compiled against. Reinstalling the XS module will likely fix this error.</source>
          <target state="translated">（P）正在将动态加载库 &lt;code&gt;.so&lt;/code&gt; 或 &lt;code&gt;.dll&lt;/code&gt; 加载到针对与编译该库不同的perl版本构建的进程中。重新安装XS模块可能会解决此错误。</target>
        </trans-unit>
        <trans-unit id="5cb0fd8cfa9d90cb793e9bd9036d1253df9aaebc" translate="yes" xml:space="preserve">
          <source>(P) A writable lexical variable became read-only somehow within the scope.</source>
          <target state="translated">（P）可写词法变量在范围内以某种方式变为只读。</target>
        </trans-unit>
        <trans-unit id="ac6b31d3aa966d7f9fe1cceebfa3f03e43340da8" translate="yes" xml:space="preserve">
          <source>(P) A zero scratch pad offset was detected internally. An attempt was made to free a target that had not been allocated to begin with.</source>
          <target state="translated">（P）内部检测到零刮擦偏移。试图释放尚未分配的目标。</target>
        </trans-unit>
        <trans-unit id="f7037268510ac900c0157c7edb67d795193fe594" translate="yes" xml:space="preserve">
          <source>(P) A zero scratch pad offset was detected internally. Most likely an operator needed a target but that target had not been allocated for whatever reason.</source>
          <target state="translated">（P）内部检测到零刮擦偏移。操作员很可能需要一个目标，但是出于任何原因都没有分配该目标。</target>
        </trans-unit>
        <trans-unit id="f41b76a04d15393859eb2e8a61af81282a466dfe" translate="yes" xml:space="preserve">
          <source>(P) An attempt was made to realloc NULL.</source>
          <target state="translated">（P）试图重新分配NULL。</target>
        </trans-unit>
        <trans-unit id="805d3fe43254643a25a16315e4e8615d2a57e279" translate="yes" xml:space="preserve">
          <source>(P) An error peculiar to OS/2. Most probably you're using an obsolete version of Perl, and this should not happen anyway.</source>
          <target state="translated">（P）OS / 2特有的错误。很可能您正在使用Perl的过时版本，无论如何都不会发生这种情况。</target>
        </trans-unit>
        <trans-unit id="75a4e6040f566b1917c1dda02aa011853538432b" translate="yes" xml:space="preserve">
          <source>(P) An error peculiar to VMS. After creating a mailbox to act as a pipe, Perl can't retrieve its name for later use.</source>
          <target state="translated">（P）VMS特有的错误。创建邮箱作为管道后，Perl无法检索其名称以供以后使用。</target>
        </trans-unit>
        <trans-unit id="882287f5af6799879ef1baa93da6c76fdaa28abc" translate="yes" xml:space="preserve">
          <source>(P) An error peculiar to VMS. Perl asked $GETSYI how big you want your mailbox buffers to be, and didn't get an answer.</source>
          <target state="translated">（P）VMS特有的错误。Perl问$ GETSYI您希望邮箱缓冲区有多大，但没有得到答案。</target>
        </trans-unit>
        <trans-unit id="c1300e185b7adf72debf6b8d06e28e06846c42df" translate="yes" xml:space="preserve">
          <source>(P) An error peculiar to VMS. Perl does its own command line redirection, and couldn't open the pipe into which to send data destined for stdout.</source>
          <target state="translated">（P）VMS特有的错误。Perl进行自己的命令行重定向，并且无法打开将发送到stdout的数据发送到的管道。</target>
        </trans-unit>
        <trans-unit id="812c62b1b2b29683f5d1ef78d1a198f61158a009" translate="yes" xml:space="preserve">
          <source>(P) An error peculiar to VMS. Perl thought stdin was a pipe, and tried to reopen it to accept binary data. Alas, it failed.</source>
          <target state="translated">（P）VMS特有的错误。Perl认为stdin是一个管道，并试图重新打开它以接受二进制数据。las，失败了。</target>
        </trans-unit>
        <trans-unit id="64bfa01bd1fda8165c6383ea96e2f2ebcaaf721a" translate="yes" xml:space="preserve">
          <source>(P) An error peculiar to VMS. Perl was reading values for %ENV before iterating over it, and someone else stuck a message in the stream of data Perl expected. Someone's very confused, or perhaps trying to subvert Perl's population of %ENV for nefarious purposes.</source>
          <target state="translated">（P）VMS特有的错误。Perl在对其进行迭代之前正在读取％ENV的值，并且其他人在Perl期望的数据流中粘贴了一条消息。有人很困惑，或者出于邪恶目的试图破坏Perl的％ENV。</target>
        </trans-unit>
        <trans-unit id="53209a59e0d1b2806deec370767fa6649c89edf1" translate="yes" xml:space="preserve">
          <source>(P) An error peculiar to VMS. Something untoward happened in a VMS system service or RTL routine; Perl's exit status should provide more details. The filename in &quot;at %s&quot; and the line number in &quot;line %d&quot; tell you which section of the Perl source code is distressed.</source>
          <target state="translated">（P）VMS特有的错误。VMS系统服务或RTL例程中发生了不可思议的事情；Perl的退出状态应提供更多详细信息。&amp;ldquo; ats％s&amp;rdquo;中的文件名和&amp;ldquo; line％d&amp;rdquo;中的行号告诉您Perl源代码的哪一部分令人苦恼。</target>
        </trans-unit>
        <trans-unit id="35d8e83a7783d51e07bff6cffe79f0723868552b" translate="yes" xml:space="preserve">
          <source>(P) An error peculiar to VMS. The internal routine my_pclose() tried to close a pipe which hadn't been opened. This should have been caught earlier as an attempt to close an unopened filehandle.</source>
          <target state="translated">（P）VMS特有的错误。内部例程my_pclose（）试图关闭尚未打开的管道。尝试关闭未打开的文件句柄时，应该早已捕获到该错误。</target>
        </trans-unit>
        <trans-unit id="48e66393ab9e9a726bdcc1954cc3fedc04585017" translate="yes" xml:space="preserve">
          <source>(P) An error peculiar to VMS. The process is suffering from exhausted quotas or other plumbing problems.</source>
          <target state="translated">（P）VMS特有的错误。该过程遭受配额用尽或其他管道问题的困扰。</target>
        </trans-unit>
        <trans-unit id="a4cf27c732ea51afc9bf41a95d1d1db092fbf143" translate="yes" xml:space="preserve">
          <source>(P) An internal error.</source>
          <target state="translated">（P）内部错误。</target>
        </trans-unit>
        <trans-unit id="400b3add9082d6a121c9c985001f90d62602e3f8" translate="yes" xml:space="preserve">
          <source>(P) An internal request asked to add a dirhandle entry to something that wasn't a symbol table entry.</source>
          <target state="translated">（P）内部请求，要求向不是符号表条目的对象添加目录句柄条目。</target>
        </trans-unit>
        <trans-unit id="deda62fc99ecdc478d72f62140a8bcf1ceb9272e" translate="yes" xml:space="preserve">
          <source>(P) An internal request asked to add a filehandle entry to something that wasn't a symbol table entry.</source>
          <target state="translated">（P）内部请求，要求将文件句柄条目添加到不是符号表条目的内容中。</target>
        </trans-unit>
        <trans-unit id="8d525d59c29627fcb4cf5fb45ef2ce2262a965b5" translate="yes" xml:space="preserve">
          <source>(P) An internal request asked to add a hash entry to something that wasn't a symbol table entry.</source>
          <target state="translated">（P）内部请求，要求将哈希条目添加到不是符号表条目的内容中。</target>
        </trans-unit>
        <trans-unit id="bd04872849093dc10c444b9351a52e79cccce00f" translate="yes" xml:space="preserve">
          <source>(P) An internal request asked to add a scalar entry to something that wasn't a symbol table entry.</source>
          <target state="translated">（P）内部请求，要求将标量条目添加到不是符号表条目的内容中。</target>
        </trans-unit>
        <trans-unit id="24d7c84eff9fb4b808ce29551b770d00f60aee1d" translate="yes" xml:space="preserve">
          <source>(P) An internal request asked to add an array entry to something that wasn't a symbol table entry.</source>
          <target state="translated">（P）内部请求，要求将数组条目添加到不是符号表条目的内容中。</target>
        </trans-unit>
        <trans-unit id="f9de1ed0d252c6ffe68f2b4950da362eb5449670" translate="yes" xml:space="preserve">
          <source>(P) An invalid scratch pad offset was detected internally.</source>
          <target state="translated">（P）内部检测到无效的暂存器偏移量。</target>
        </trans-unit>
        <trans-unit id="94844fe4c4b36fd08255764c95d3f23017373808" translate="yes" xml:space="preserve">
          <source>(P) Failed an internal consistency check trying to compile a grep.</source>
          <target state="translated">（P）尝试编译grep的内部一致性检查失败。</target>
        </trans-unit>
        <trans-unit id="f74e25267a599f76899b17127eca9205d07ea94d" translate="yes" xml:space="preserve">
          <source>(P) Failed an internal consistency check trying to compile a split.</source>
          <target state="translated">（P）尝试编译拆分的内部一致性检查失败。</target>
        </trans-unit>
        <trans-unit id="b8748d03b08df071f0c5d63147735eddb25341be" translate="yes" xml:space="preserve">
          <source>(P) Failed an internal consistency check while trying to reset a weak reference.</source>
          <target state="translated">（P）尝试重置弱引用时，内部一致性检查失败。</target>
        </trans-unit>
        <trans-unit id="76567e3a92c59ec49c3b6ebddac41922c02d8aa4" translate="yes" xml:space="preserve">
          <source>(P) Failed an internal consistency check while trying to reset all weak references to an object.</source>
          <target state="translated">（P）尝试重置对对象的所有弱引用时，内部一致性检查失败。</target>
        </trans-unit>
        <trans-unit id="ed1b58a13a98656d324ac0b4cf595de055626e6f" translate="yes" xml:space="preserve">
          <source>(P) For some reason you can't check the filesystem of the script for nosuid.</source>
          <target state="translated">（P）由于某种原因，您无法检查脚本文件系统中的nosuid。</target>
        </trans-unit>
        <trans-unit id="846d00ab81ca381fc30d174ab49bf08ea7bb02b1" translate="yes" xml:space="preserve">
          <source>(P) For some reason you can't fstat() the script even though you have it open already. Bizarre.</source>
          <target state="translated">（P）由于某种原因，即使您已经打开脚本，也无法fstat（）。奇怪</target>
        </trans-unit>
        <trans-unit id="ea00886ad348eaccaa4b809a63f6dfabfb44eb5e" translate="yes" xml:space="preserve">
          <source>(P) It is currently not permitted to load modules when creating a filehandle inside an %INC hook. This can happen with &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt; &lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;
$fh, '&amp;lt;', \$scalar&lt;/code&gt; , which implicitly loads PerlIO::scalar. Try loading PerlIO::scalar explicitly first.</source>
          <target state="translated">（P）当前不允许在％INC挂钩内创建文件句柄时加载模块。 &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt; &lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt; $fh, '&amp;lt;', \$scalar&lt;/code&gt; 可能会发生这种情况，这会隐式加载PerlIO :: scalar。尝试先显式加载PerlIO :: scalar。</target>
        </trans-unit>
        <trans-unit id="59c7b7c23f07a81243e56c544e381b40349dbee9" translate="yes" xml:space="preserve">
          <source>(P) One of the file test operators entered a code branch that calls an ACL related-function, but that function is not available on this platform. Earlier checks mean that it should not be possible to enter this branch on this platform.</source>
          <target state="translated">（P）一个文件测试操作员进入一个代码分支，该分支调用ACL相关功能，但是该功能在该平台上不可用。较早的检查意味着不应在此平台上进入此分支。</target>
        </trans-unit>
        <trans-unit id="bea433ac846e1206d3fed924939699290f5369d3" translate="yes" xml:space="preserve">
          <source>(P) One of the internal hash routines was passed a null HV pointer.</source>
          <target state="translated">（P）内部哈希例程之一传递了一个空HV指针。</target>
        </trans-unit>
        <trans-unit id="997d69797f4a80218beb1781ad0cef542ace556c" translate="yes" xml:space="preserve">
          <source>(P) Overloading resolution over @ISA tree may be broken by importation stubs. Stubs should never be implicitly created, but explicit calls to &lt;code&gt;can&lt;/code&gt; may break this.</source>
          <target state="translated">（P）输入存根可能会破坏@ISA树上的重载分辨率。绝对不能隐式地创建存根，但是对的显式调用 &lt;code&gt;can&lt;/code&gt; 会破坏这一点。</target>
        </trans-unit>
        <trans-unit id="a672aa452663f622bcb9efc632d9f5ddcc3bd368" translate="yes" xml:space="preserve">
          <source>(P) Perl detected an attempt to copy a value to an internal type that cannot be directly assigned to.</source>
          <target state="translated">（P）Perl检测到尝试将值复制到无法直接分配给内部类型的尝试。</target>
        </trans-unit>
        <trans-unit id="cd57912a82e894f3b76de7debf79b5b5081d6696" translate="yes" xml:space="preserve">
          <source>(P) Perl detected an attempt to copy an internal value that is not copiable.</source>
          <target state="translated">（P）Perl检测到尝试复制不可复制的内部值的尝试。</target>
        </trans-unit>
        <trans-unit id="6a935e8b954c1a4ac41a3601d70d606987e51088" translate="yes" xml:space="preserve">
          <source>(P) Perl got confused as to whether a hash was a plain hash or a symbol table hash when trying to update @ISA caches.</source>
          <target state="translated">（P）当试图更新@ISA缓存时，Perl对于哈希是普通哈希还是符号表哈希感到困惑。</target>
        </trans-unit>
        <trans-unit id="69c537dcfd79419e3fa221999b0a72efd880156d" translate="yes" xml:space="preserve">
          <source>(P) Perl tried to force the upgrade of an SV to a type which was actually inferior to its current type.</source>
          <target state="translated">（P）Perl试图强制将SV升级到实际上不如其当前类型的类型。</target>
        </trans-unit>
        <trans-unit id="e7c0cbe400246e10096bcf3fddb3870b7b8aa60f" translate="yes" xml:space="preserve">
          <source>(P) Perl was about to print an error message in &lt;code&gt;$@&lt;/code&gt; , but the &lt;code&gt;$@&lt;/code&gt; variable did not exist, even after an attempt to create it.</source>
          <target state="translated">（P）Perl即将在 &lt;code&gt;$@&lt;/code&gt; 打印一条错误消息，但是即使尝试创建 &lt;code&gt;$@&lt;/code&gt; 变量，该变量也不存在。</target>
        </trans-unit>
        <trans-unit id="09902ab0b7d22f2db928a38bcd7ddef2eb0376e9" translate="yes" xml:space="preserve">
          <source>(P) Perl's I/O implementation failed an internal consistency check. If you see this message, something is very wrong.</source>
          <target state="translated">（P）Perl的I / O实现未通过内部一致性检查。如果您看到此消息，则说明存在很大问题。</target>
        </trans-unit>
        <trans-unit id="e43882fe07c8f3adca275643c774aed874855180" translate="yes" xml:space="preserve">
          <source>(P) Some internal routine requested a goto (or something like it), and didn't supply the destination.</source>
          <target state="translated">（P）一些内部例程要求转到（或类似的东西），但没有提供目的地。</target>
        </trans-unit>
        <trans-unit id="f907e28fd9838bc3730b27bd659a35d1581d6e70" translate="yes" xml:space="preserve">
          <source>(P) Something requested a negative number of bytes of malloc.</source>
          <target state="translated">（P）某些请求的malloc字节为负数。</target>
        </trans-unit>
        <trans-unit id="8adc4f23f70bb97c8ac3d526ec641b16fd5b36e1" translate="yes" xml:space="preserve">
          <source>(P) Something requested a negative number of bytes of realloc.</source>
          <target state="translated">（P）某些请求重新分配的字节数为负。</target>
        </trans-unit>
        <trans-unit id="14449cff4b0537948fd6b4dcfdfdf4f30bae1ecd" translate="yes" xml:space="preserve">
          <source>(P) Something terrible went wrong in setting up for the split.</source>
          <target state="translated">（P）设置拆分时发生了可怕的错误。</target>
        </trans-unit>
        <trans-unit id="f4adbeb9044ce4d24ae898fd2352b57b5aad6c7f" translate="yes" xml:space="preserve">
          <source>(P) Something tried to allocate either more memory than possible or a negative amount.</source>
          <target state="translated">（P）某种东西试图分配比可能更多的内存或负数。</target>
        </trans-unit>
        <trans-unit id="c247a6fde86c0e187f27f20d8c6f2008bfaf717c" translate="yes" xml:space="preserve">
          <source>(P) Something tried to call utf16_to_utf8 with an odd (as opposed to even) byte length.</source>
          <target state="translated">（P）某些东西试图以奇数（而不是偶数）字节长度调用utf16_to_utf8。</target>
        </trans-unit>
        <trans-unit id="42ef3d2046a7280391a4513cfd91699254de4d54" translate="yes" xml:space="preserve">
          <source>(P) Something tried to call utf16_to_utf8_reversed with an odd (as opposed to even) byte length.</source>
          <target state="translated">（P）尝试用一个奇数（而不是偶数）字节长度调用utf16_to_utf8_reversed。</target>
        </trans-unit>
        <trans-unit id="bdb5ab246092cb7bbb51ab8f1c6cf89f85acb65b" translate="yes" xml:space="preserve">
          <source>(P) Something went badly awry in the regular expression parser. The &amp;lt;-- HERE shows whereabouts in the regular expression the problem was discovered.</source>
          <target state="translated">（P）在正则表达式解析器中出现了严重问题。&amp;lt;-HERE在正则表达式中显示发现问题的行踪。</target>
        </trans-unit>
        <trans-unit id="ea8f70d893419122544ad3e3db4bdeca611aeabc" translate="yes" xml:space="preserve">
          <source>(P) Something went badly wrong in the regular expression parser. The &amp;lt;-- HERE shows whereabouts in the regular expression the problem was discovered.</source>
          <target state="translated">（P）在正则表达式解析器中出现严重错误。&amp;lt;-HERE在正则表达式中显示发现问题的行踪。</target>
        </trans-unit>
        <trans-unit id="83e2a506e0dd76b2f90526cfa59329c0a5ec4759" translate="yes" xml:space="preserve">
          <source>(P) Something went wrong internally when Perl was trying to look up Unicode characters.</source>
          <target state="translated">（P）当Perl尝试查找Unicode字符时，内部发生了问题。</target>
        </trans-unit>
        <trans-unit id="1474b49d9c211359ca3383cf7b6b4bb61bdac491" translate="yes" xml:space="preserve">
          <source>(P) The attempt to translate a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; Module n.n LIST&lt;/code&gt; statement into its equivalent &lt;code&gt;BEGIN&lt;/code&gt; block found an internal inconsistency with the version number.</source>
          <target state="translated">（P）尝试将 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; Module n.n LIST&lt;/code&gt; 语句转换为等效的 &lt;code&gt;BEGIN&lt;/code&gt; 块，发现内部与版本号不一致。</target>
        </trans-unit>
        <trans-unit id="dc94ac47a124ec9565255f20ffb2b981be020dd0" translate="yes" xml:space="preserve">
          <source>(P) The compiler attempted to do a goto, or something weird like that.</source>
          <target state="translated">（P）编译器尝试执行goto或类似的操作。</target>
        </trans-unit>
        <trans-unit id="3140b066a825427b55fbacec7927b11990bb1c15" translate="yes" xml:space="preserve">
          <source>(P) The compiler got confused about which scratch pad it was allocating and freeing temporaries and lexicals from.</source>
          <target state="translated">（P）编译器对于正在分配哪个暂存器并从中释放临时单词和词汇感到困惑。</target>
        </trans-unit>
        <trans-unit id="7d8e4b6f9d2ec17cd7598513858301157c54c1d6" translate="yes" xml:space="preserve">
          <source>(P) The compiler is screwed up and attempted to use an op that isn't permitted at run time.</source>
          <target state="translated">（P）编译器被搞砸了，并尝试使用运行时不允许的op。</target>
        </trans-unit>
        <trans-unit id="2518e797a41a53cc3a16b842f80c3d5b229f2e05" translate="yes" xml:space="preserve">
          <source>(P) The foreach iterator got called in a non-loop context frame.</source>
          <target state="translated">（P）在非循环上下文框架中调用了foreach迭代器。</target>
        </trans-unit>
        <trans-unit id="3498aa56de14a6994bc9a9e1d9c5ef94fa5d2e1c" translate="yes" xml:space="preserve">
          <source>(P) The internal do_trans routines were called with invalid operational data.</source>
          <target state="translated">（P）内部do_trans例程使用无效的操作数据调用。</target>
        </trans-unit>
        <trans-unit id="c96999bf2ea96ec470ccdf365e03b2b91a727777" translate="yes" xml:space="preserve">
          <source>(P) The internal handling of magical variables has been cursed.</source>
          <target state="translated">（P）魔法变量的内部处理已受到诅咒。</target>
        </trans-unit>
        <trans-unit id="2d8dbaa150d0b56f4dea48ed2ced98b5683b26c4" translate="yes" xml:space="preserve">
          <source>(P) The internal pattern matching routines are out of their gourd.</source>
          <target state="translated">（P）内部模式匹配例程超出了他们的要求。</target>
        </trans-unit>
        <trans-unit id="69167b38f6d187d53564596eb06361602bf85982" translate="yes" xml:space="preserve">
          <source>(P) The internal pattern matching routines blew it big time.</source>
          <target state="translated">（P）内部模式匹配例程花费了很多时间。</target>
        </trans-unit>
        <trans-unit id="d7b029c21e38165a6d8e4ad7d9c98510fe286a1f" translate="yes" xml:space="preserve">
          <source>(P) The internal pp_match() routine was called with invalid operational data.</source>
          <target state="translated">（P）使用无效的操作数据调用了内部pp_match（）例程。</target>
        </trans-unit>
        <trans-unit id="30add7c219a2f4a5d23c5c04fcd6100dac0c68f5" translate="yes" xml:space="preserve">
          <source>(P) The internal pp_subst() routine was called with invalid operational data.</source>
          <target state="translated">（P）使用无效的操作数据调用了内部pp_subst（）例程。</target>
        </trans-unit>
        <trans-unit id="b882a632737f76c740564805feff4a10df851aee" translate="yes" xml:space="preserve">
          <source>(P) The internal routine that does assignment to a substr() was handed a NULL.</source>
          <target state="translated">（P）分配给substr（）的内部例程被传递为NULL。</target>
        </trans-unit>
        <trans-unit id="e4c3eb89b616edfda4b2360cf2603781020cca69" translate="yes" xml:space="preserve">
          <source>(P) The internal routine used to clear a typeglob's entries tried repeatedly, but each time something re-created entries in the glob. Most likely the glob contains an object with a reference back to the glob and a destructor that adds a new object to the glob.</source>
          <target state="translated">（P）用于清除Typeglob条目的内部例程反复尝试，但是每次在Glob中重新创建条目时都会尝试。极有可能该glob包含一个具有对该glob的引用的对象和一个将新对象添加到glob的析构函数。</target>
        </trans-unit>
        <trans-unit id="92453c370c98695c820b9c6b5a88b90716c045ab" translate="yes" xml:space="preserve">
          <source>(P) The internal sv_replace() function was handed a new SV with a reference count other than 1.</source>
          <target state="translated">（P）内部的sv_replace（）函数已传递给引用计数不是1的新SV。</target>
        </trans-unit>
        <trans-unit id="f1d10ef331590e88d3dd539acaa55182032de5ac" translate="yes" xml:space="preserve">
          <source>(P) The internal sv_upgrade routine adds &quot;members&quot; to an SV, making it into a more specialized kind of SV. The top several SV types are so specialized, however, that they cannot be interconverted. This message indicates that such a conversion was attempted.</source>
          <target state="translated">（P）内部sv_upgrade例程在SV上添加&amp;ldquo;成员&amp;rdquo;，使其成为一种更特殊的SV。排名前几的SV类型是如此专业，以至于它们无法相互转换。此消息表明尝试了这种转换。</target>
        </trans-unit>
        <trans-unit id="fe4ad75b272d3e52b9dbd964a661c89696cf6a16" translate="yes" xml:space="preserve">
          <source>(P) The interpreter's sanity check of the C function strxfrm() failed. In your current locale the returned transformation of the string &quot;ab&quot; is shorter than that of the string &quot;a&quot;, which makes no sense.</source>
          <target state="translated">（P）对C函数strxfrm（）的解释器的完整性检查失败。在您当前的语言环境中，返回的字符串&amp;ldquo; ab&amp;rdquo;的转换比字符串&amp;ldquo; a&amp;rdquo;的转换短，这没有任何意义。</target>
        </trans-unit>
        <trans-unit id="caa10dae4e81f1c4e0e1e7e1b36af901e8d7831d" translate="yes" xml:space="preserve">
          <source>(P) The lexer got into a bad state at a case modifier.</source>
          <target state="translated">（P）词法分析器的大小写修饰符进入错误状态。</target>
        </trans-unit>
        <trans-unit id="848a38b2b7a29c3f612333ad0dcbfb9242e0ae8a" translate="yes" xml:space="preserve">
          <source>(P) The lexer got into a bad state parsing a string with brackets.</source>
          <target state="translated">（P）词法分析器进入解析状态，使用括号括起来的字符串处于错误状态。</target>
        </trans-unit>
        <trans-unit id="d3f93ef0e44473b374c4208ea1b920c7d153d050" translate="yes" xml:space="preserve">
          <source>(P) The lexer got into a bad state while processing a case modifier.</source>
          <target state="translated">（P）在处理case修饰符时，词法分析器进入不良状态。</target>
        </trans-unit>
        <trans-unit id="da7064a484d4121a5b00bdc6875279cbbfef2172" translate="yes" xml:space="preserve">
          <source>(P) The library function frexp() failed, making printf(&quot;%f&quot;) impossible.</source>
          <target state="translated">（P）库函数frexp（）失败，使得printf（&amp;ldquo;％f&amp;rdquo;）成为不可能。</target>
        </trans-unit>
        <trans-unit id="2047dd7abae12bd27c2ecacda93d00652e347457" translate="yes" xml:space="preserve">
          <source>(P) The malloc package that comes with Perl had an internal failure.</source>
          <target state="translated">（P）Perl随附的malloc程序包发生内部故障。</target>
        </trans-unit>
        <trans-unit id="a82ab59c9c5dcdf998d55ef85b5159b7ebbb380e" translate="yes" xml:space="preserve">
          <source>(P) The parser got confused when trying to parse a &lt;code&gt;foreach&lt;/code&gt; loop.</source>
          <target state="translated">（P）尝试解析 &lt;code&gt;foreach&lt;/code&gt; 循环时，解析器感到困惑。</target>
        </trans-unit>
        <trans-unit id="877ff07afe0fa8916b2474462d22fd186ffa1d8d" translate="yes" xml:space="preserve">
          <source>(P) The regular expression engine got confused by what the regular expression compiler gave it.</source>
          <target state="translated">（P）正则表达式引擎对正则表达式编译器提供的内容感到困惑。</target>
        </trans-unit>
        <trans-unit id="b05f30c29b5504a8630326b5a95c517cd6fcc9f4" translate="yes" xml:space="preserve">
          <source>(P) The regular expression engine got passed a regexp program without a valid magic number.</source>
          <target state="translated">（P）正则表达式引擎通过了一个没有有效幻数的regexp程序。</target>
        </trans-unit>
        <trans-unit id="ac05e84171c5a8bb39254f819a30950f141e3ef7" translate="yes" xml:space="preserve">
          <source>(P) The regular expression parser is confused.</source>
          <target state="translated">（P）正则表达式解析器感到困惑。</target>
        </trans-unit>
        <trans-unit id="119df00ff55f6253a00a72f5c82ad4037497448f" translate="yes" xml:space="preserve">
          <source>(P) The savestack probably got out of sync. At least, there was an invalid enum on the top of it.</source>
          <target state="translated">（P）保存堆栈可能不同步。至少在其顶部有一个无效的枚举。</target>
        </trans-unit>
        <trans-unit id="94817271db547b761a2729d99f3078243552aaf1" translate="yes" xml:space="preserve">
          <source>(P) The savestack was requested to restore more localized values than there are in the savestack.</source>
          <target state="translated">（P）已请求保存堆栈恢复比保存堆栈中更多的本地化值。</target>
        </trans-unit>
        <trans-unit id="350c93f0480aff09e9937e383bb8379378cdb829" translate="yes" xml:space="preserve">
          <source>(P) The split was looping infinitely. (Obviously, a split shouldn't iterate more times than there are characters of input, which is what happened.) See &lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;.</source>
          <target state="translated">（P）分裂无限循环。（很明显，拆分不会迭代超过输入字符个数的次数，这就是发生的情况。）请参见&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="01af9b13bd2be8aa72ae4f732d759961b18d1add" translate="yes" xml:space="preserve">
          <source>(P) The substitution was looping infinitely. (Obviously, a substitution shouldn't iterate more times than there are characters of input, which is what happened.) See the discussion of substitution in &lt;a href=&quot;perlop#Regexp-Quote-Like-Operators&quot;&gt;Regexp Quote-Like Operators in perlop&lt;/a&gt;.</source>
          <target state="translated">（P）替换无限循环。（很明显，替换迭代的次数不应超过输入字符的次数，这是发生的情况。）请参阅&lt;a href=&quot;perlop#Regexp-Quote-Like-Operators&quot;&gt;perlop&lt;/a&gt;中Regexp Quote-Like运算符中有关替换的讨论。</target>
        </trans-unit>
        <trans-unit id="096d868e26e229c81806a37b4d321863d23fb558" translate="yes" xml:space="preserve">
          <source>(P) The sv_chop() routine was passed a position that is not within the scalar's string buffer.</source>
          <target state="translated">（P）sv_chop（）例程传递的位置不在标量的字符串缓冲区内。</target>
        </trans-unit>
        <trans-unit id="f0c3dd422524f0a60eae34855bb950f6397c39c4" translate="yes" xml:space="preserve">
          <source>(P) The sv_insert() routine was told to remove more string than there was string.</source>
          <target state="translated">（P）告诉sv_insert（）例程删除比字符串多的字符串。</target>
        </trans-unit>
        <trans-unit id="38d33b303598c9e06325c970fde5f0a3b07ab112" translate="yes" xml:space="preserve">
          <source>(P) This is counted as an internal error, because every machine should supply dbm nowadays, because Perl comes with SDBM. See &lt;a href=&quot;sdbm_file&quot;&gt;SDBM_File&lt;/a&gt;.</source>
          <target state="translated">（P）这被视为内部错误，因为当今每台机器都应提供dbm，因为Perl附带了SDBM。参见&lt;a href=&quot;sdbm_file&quot;&gt;SDBM_File&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="295b2a9153ab005fc6bfe5d09638e7e6f4db38db" translate="yes" xml:space="preserve">
          <source>(P) This is either an error in Perl, or, if you're using one, your &lt;a href=&quot;perlreapi&quot;&gt;custom regular expression engine&lt;/a&gt;. If not the latter, report the problem through the &lt;a href=&quot;perlbug&quot;&gt;perlbug&lt;/a&gt; utility.</source>
          <target state="translated">（P）这可能是Perl中的错误，或者，如果您使用的是&lt;a href=&quot;perlreapi&quot;&gt;自定义正则表达式引擎&lt;/a&gt;，则可能是错误。如果不是后者，请通过&lt;a href=&quot;perlbug&quot;&gt;perlbug&lt;/a&gt;实用工具报告问题。</target>
        </trans-unit>
        <trans-unit id="d3076b2ea244338df16e2de88ad9eb91a8ba0351" translate="yes" xml:space="preserve">
          <source>(P) This should have been caught by safemalloc() instead.</source>
          <target state="translated">（P）应该已经被safemalloc（）捕获了。</target>
        </trans-unit>
        <trans-unit id="e4b02809f13a7e683a603a83b856454cc2b6fb45" translate="yes" xml:space="preserve">
          <source>(P) We popped the context stack to a block context, and then discovered it wasn't a block context.</source>
          <target state="translated">（P）我们将上下文堆栈弹出到块上下文中，然后发现它不是块上下文。</target>
        </trans-unit>
        <trans-unit id="67d8a45c194a97910d1c643886c073df365d9011" translate="yes" xml:space="preserve">
          <source>(P) We popped the context stack to a context with the specified label, and then discovered it wasn't a context we know how to do a goto in.</source>
          <target state="translated">（P）我们将上下文堆栈弹出到具有指定标签的上下文中，然后发现它不是我们知道如何执行goto的上下文。</target>
        </trans-unit>
        <trans-unit id="e9ebc7c838cd5a3875cdad3a7c6c9f072bce59d6" translate="yes" xml:space="preserve">
          <source>(P) We popped the context stack to a subroutine or eval context, and then discovered it wasn't a subroutine or eval context.</source>
          <target state="translated">（P）我们将上下文堆栈弹出到子例程或eval上下文，然后发现它不是子例程或eval上下文。</target>
        </trans-unit>
        <trans-unit id="964d90b9224184fd0adab551116db2c863a30f22" translate="yes" xml:space="preserve">
          <source>(P) We popped the context stack to an eval context, and then discovered it wasn't an eval context.</source>
          <target state="translated">（P）我们将上下文堆栈弹出到一个eval上下文中，然后发现它不是一个eval上下文。</target>
        </trans-unit>
        <trans-unit id="127eed52ad96eb30e23e356e571f87ff81bd7d28" translate="yes" xml:space="preserve">
          <source>(P) When compiling a subroutine call in lvalue context, Perl failed an internal consistency check. It encountered a malformed op tree.</source>
          <target state="translated">（P）在左值上下文中编译子例程调用时，Perl在内部一致性检查中失败。它遇到了格式错误的op树。</target>
        </trans-unit>
        <trans-unit id="d7e51a2aafbbc975709738292192eb554947b44b" translate="yes" xml:space="preserve">
          <source>(P) When starting a new thread or returning values from a thread, Perl encountered an invalid data type.</source>
          <target state="translated">（P）当启动新线程或从线程返回值时，Perl遇到了无效的数据类型。</target>
        </trans-unit>
        <trans-unit id="1e351cc02c4c1cabcba7002000dd30dd6a44007b" translate="yes" xml:space="preserve">
          <source>(P) While attempting folding constants an exception other than an &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; failure was caught.</source>
          <target state="translated">（P）在尝试折叠常量时，发现了除 &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; 失败以外的异常。</target>
        </trans-unit>
        <trans-unit id="ae4a4729f26dd616cd92c61b327e9f0c4da6fef7" translate="yes" xml:space="preserve">
          <source>(P) While compiling a pattern that has embedded (?{}) or (??{}) code blocks, perl couldn't locate the code block that should have already been seen and compiled by perl before control passed to the regex compiler.</source>
          <target state="translated">（P）在编译嵌入了（？{}）或（?? {}）代码块的模式时，perl找不到在控制权传递给regex编译器之前perl应该已经看到并编译的代码块。</target>
        </trans-unit>
        <trans-unit id="57c898ec4afec8491cb4ea78bb151b1da05f1a80" translate="yes" xml:space="preserve">
          <source>(P) You somehow managed to call &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; on an array that does not keep a reference count on its arguments and cannot be made to do so. Such arrays are not even supposed to be accessible to Perl code, but are only used internally.</source>
          <target state="translated">（P）您以某种方式设法在未在其参数上保留引用计数且无法这样做的数组上调用 &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; 。这样的数组甚至不应该被Perl代码访问，而仅在内部使用。</target>
        </trans-unit>
        <trans-unit id="3a707edc44f9eebb1920dd1345721e9bcbf0761d" translate="yes" xml:space="preserve">
          <source>(P) You tried to make a hash value spring into existence, and it couldn't be created for some peculiar reason.</source>
          <target state="translated">（P）您试图使散列值突然出现，但由于某些特殊原因而无法创建它。</target>
        </trans-unit>
        <trans-unit id="2acb223751eaea719135c277317cce538283806b" translate="yes" xml:space="preserve">
          <source>(P) scan_num() got called on something that wasn't a number.</source>
          <target state="translated">（P）scan_num（）被调用的不是数字。</target>
        </trans-unit>
        <trans-unit id="9804aeb16f638b18a424d4091ee834ca399aa241" translate="yes" xml:space="preserve">
          <source>(Perl 5.12)</source>
          <target state="translated">（Perl 5.12）</target>
        </trans-unit>
        <trans-unit id="207ea73284ed8f6692ea30ffc773f62051322f05" translate="yes" xml:space="preserve">
          <source>(Perl 5.14)</source>
          <target state="translated">（Perl 5.14）</target>
        </trans-unit>
        <trans-unit id="525943c59305200a5d02df199b866dc663ad2b68" translate="yes" xml:space="preserve">
          <source>(Perl 5.20)</source>
          <target state="translated">（Perl 5.20）</target>
        </trans-unit>
        <trans-unit id="b39e3b1e2a984c1aea25ca987dbaa1937bebf239" translate="yes" xml:space="preserve">
          <source>(Plane, 2-dimensional) angles may be converted with the following functions.</source>
          <target state="translated">（平面二维）角度可以通过以下功能转换。</target>
        </trans-unit>
        <trans-unit id="6d01d5ab09b746324ccf3d6546898399023fc2a9" translate="yes" xml:space="preserve">
          <source>(Pod processors must tolerate a bare &quot;=item&quot; as if it were &quot;=item *&quot;.) Whether &quot;*&quot; is rendered as a literal asterisk, an &quot;o&quot;, or as some kind of real bullet character, is left up to the Pod formatter, and may depend on the level of nesting.</source>
          <target state="translated">（Pod处理器必须容忍裸露的&amp;ldquo; = item&amp;rdquo;，就好像它是&amp;ldquo; = item *&amp;rdquo;一样。）是否将&amp;ldquo; *&amp;rdquo;呈现为文字星号，&amp;ldquo; o&amp;rdquo;或某种真实的项目符号字符到Pod格式化程序，并且可能取决于嵌套的级别。</target>
        </trans-unit>
        <trans-unit id="0d718cdb08cf62fcc4a70ad7c7b8d99e27980ff3" translate="yes" xml:space="preserve">
          <source>(Pod processors must tolerate lines like &quot;=item 1&quot; as if they were &quot;=item 1.&quot;, with the period.)</source>
          <target state="translated">（Pod处理程序必须容忍&amp;ldquo; = item 1&amp;rdquo;之类的行，就好像它们是&amp;ldquo; = item 1&amp;rdquo;一样。）</target>
        </trans-unit>
        <trans-unit id="f64fe4546149791676ad2a3dfb0e3eb4198e04bc" translate="yes" xml:space="preserve">
          <source>(Prior to Perl 5.8,</source>
          <target state="translated">（在Perl 5.8之前，</target>
        </trans-unit>
        <trans-unit id="b441598b9df1e55e3cfbf86ddea17386bca0fa94" translate="yes" xml:space="preserve">
          <source>(Pronounced &quot;Tong-a&quot;, not &quot;Tong-ga&quot;)</source>
          <target state="translated">（发音为&amp;ldquo; Tong-a&amp;rdquo;，而不是&amp;ldquo; Tong-ga&amp;rdquo;）</target>
        </trans-unit>
        <trans-unit id="c37d9452a04d295d6cd42412f70e9c83dd294e38" translate="yes" xml:space="preserve">
          <source>(Putting &lt;code&gt;&lt;a href=&quot;../functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt; on the preceding line will work o.k.)</source>
          <target state="translated">（将 &lt;code&gt;&lt;a href=&quot;../functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;../functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt; 放在上一行就可以了）</target>
        </trans-unit>
        <trans-unit id="80c5f2dc304d953ccc1260685c05b0ca2ed17b70" translate="yes" xml:space="preserve">
          <source>(Re-)open the handle</source>
          <target state="translated">（重新）打开手柄</target>
        </trans-unit>
        <trans-unit id="4bb1d9a70b90b86b82ffe9b5019a5301b70833d8" translate="yes" xml:space="preserve">
          <source>(S ambiguous) &lt;code&gt;%&lt;/code&gt; , &lt;code&gt;&amp;amp;&lt;/code&gt; , and &lt;code&gt;*&lt;/code&gt; are both infix operators (modulus, bitwise and, and multiplication)</source>
          <target state="translated">（S模棱两可） &lt;code&gt;%&lt;/code&gt; ， &lt;code&gt;&amp;amp;&lt;/code&gt; 和 &lt;code&gt;*&lt;/code&gt; 都是中缀运算符（模，按位与和乘）</target>
        </trans-unit>
        <trans-unit id="ba72a5f44f5971c891c2fd430285b0abebdb16ba" translate="yes" xml:space="preserve">
          <source>(S ambiguous) You said something that may not be interpreted the way you thought. Normally it's pretty easy to disambiguate it by supplying a missing quote, operator, parenthesis pair or declaration.</source>
          <target state="translated">（模棱两可）您说的话可能无法以您的想法来解释。通常，通过提供缺少的引号，运算符，括号对或声明来消除歧义是很容易的。</target>
        </trans-unit>
        <trans-unit id="b14406b21054e52dd81c8f48e25c79121826f64b" translate="yes" xml:space="preserve">
          <source>(S ambiguous) You used a variable or subroutine call where the parser was expecting an operator. The parser has assumed you really meant to use an operator, but this is highly likely to be incorrect. For example, if you say &quot;*foo *foo&quot; it will be interpreted as if you said &quot;*foo * 'foo'&quot;.</source>
          <target state="translated">（模棱两可）您在解析器期望运算符的地方使用了变量或子例程调用。解析器已经假定您确实打算使用运算符，但这很可能是不正确的。例如，如果您说&amp;ldquo; * foo * foo&amp;rdquo;，它将被解释为就像您说&amp;ldquo; * foo *'foo'&amp;rdquo;一样。</target>
        </trans-unit>
        <trans-unit id="20f28b8cd59b7fde1bbe53142bdfdd74e32311c2" translate="yes" xml:space="preserve">
          <source>(S ambiguous) You wrote a unary operator followed by something that looks like a binary operator that could also have been interpreted as a term or unary operator. For instance, if you know that the rand function has a default argument of 1.0, and you write</source>
          <target state="translated">（模棱两可）您编写了一个一元运算符，后跟一个看起来像二元运算符的东西，也可以将其解释为术语或一元运算符。例如，如果您知道rand函数的默认参数为1.0，则可以编写</target>
        </trans-unit>
        <trans-unit id="4cb4be7b4dee0cb6392bc7950305e54795e02104" translate="yes" xml:space="preserve">
          <source>(S ambiguous) You wrote something like &lt;code&gt;-foo&lt;/code&gt; , which might be the string &lt;code&gt;&quot;-foo&quot;&lt;/code&gt; , or a call to the function &lt;code&gt;foo&lt;/code&gt; , negated. If you meant the string, just write &lt;code&gt;&quot;-foo&quot;&lt;/code&gt; . If you meant the function call, write &lt;code&gt;-foo()&lt;/code&gt; .</source>
          <target state="translated">（S模棱两可）您编写了 &lt;code&gt;-foo&lt;/code&gt; 之类的东西，它可能是字符串 &lt;code&gt;&quot;-foo&quot;&lt;/code&gt; 或对函数 &lt;code&gt;foo&lt;/code&gt; 的调用被否定了。如果您要输入字符串，则只需输入 &lt;code&gt;&quot;-foo&quot;&lt;/code&gt; 。如果要调用函数，请编写 &lt;code&gt;-foo()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f02755cefde1af1c27dd0cb99ea9f99ea9f1e541" translate="yes" xml:space="preserve">
          <source>(S debugging) An array was assigned to when it was being freed. Freed values are not supposed to be visible to Perl code. This can also happen if XS code calls &lt;code&gt;av_clear&lt;/code&gt; from a custom magic callback on the array.</source>
          <target state="translated">（S调试）在释放数组时将其分配给它。释放的值不应在Perl代码中可见。如果XS代码从阵列上的自定义魔术回调中调用 &lt;code&gt;av_clear&lt;/code&gt; ，也会发生这种情况。</target>
        </trans-unit>
        <trans-unit id="551faf713b9b368cef18d71f1242467c1dc199ba" translate="yes" xml:space="preserve">
          <source>(S debugging) Mortalized values are supposed to be freed by the free_tmps() routine. This indicates that something else is freeing the SV before the free_tmps() routine gets a chance, which means that the free_tmps() routine will be freeing an unreferenced scalar when it does try to free it.</source>
          <target state="translated">（S调试）应该通过free_tmps（）例程释放异常值。这表示在free_tmps（）例程获得机会之前，还有其他东西正在释放SV，这意味着free_tmps（）例程在尝试释放未引用的标量时将释放它。</target>
        </trans-unit>
        <trans-unit id="f9419ec0daa83f63af71a20505dc62e0dc7c7619" translate="yes" xml:space="preserve">
          <source>(S debugging) Perl was called with invalid debugger flags. Call perl with the &lt;b&gt;-D&lt;/b&gt; option with no flags to see the list of acceptable values. See also &lt;a href=&quot;perlrun#-Dletters&quot;&gt;-Dletters in perlrun&lt;/a&gt;.</source>
          <target state="translated">（S调试）使用无效的调试器标志调用Perl。使用不带标志的&lt;b&gt;-D&lt;/b&gt;选项调用perl 以查看可接受值的列表。另请参见&lt;a href=&quot;perlrun#-Dletters&quot;&gt;-Perlrun中的-Dletters&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="333e2ce052a2296c1c591334a8fbd00eae6ac9ad" translate="yes" xml:space="preserve">
          <source>(S debugging) Some internal routine called run() with a null opcode pointer.</source>
          <target state="translated">（S调试）某些内部例程称为run（），具有空操作码指针。</target>
        </trans-unit>
        <trans-unit id="a8eb46adbf1bf91afdc5d9260b400b6ae61cbd86" translate="yes" xml:space="preserve">
          <source>(S debugging) This indicates that something went wrong and Perl got</source>
          <target state="translated">（S调试）这表明出了点问题，Perl得到了</target>
        </trans-unit>
        <trans-unit id="c7d1bdb0654de294ea9a1042b05058e1ada0ef37" translate="yes" xml:space="preserve">
          <source>(S debugging) You can't use the &lt;b&gt;-D&lt;/b&gt; option unless the code to produce the desired output is compiled into Perl, which entails some overhead, which is why it's currently left out of your copy.</source>
          <target state="translated">（S调试）除非将产生所需输出的代码编译到Perl中，否则您不能使用&lt;b&gt;-D&lt;/b&gt;选项，这会带来一些开销，这就是为什么现在不将其包含在副本中的原因。</target>
        </trans-unit>
        <trans-unit id="b75aa65efb65e349d889b5d4a7352e6e8d9b2578" translate="yes" xml:space="preserve">
          <source>(S experimental::autoderef) &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; with a scalar argument is experimental and may change or be removed in a future Perl version. If you want to take the risk of using this feature, simply disable this warning:</source>
          <target state="translated">（Sexperiment :: autoderef） &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; 带有标量参数的参数都是实验性的，在以后的Perl版本中可能会更改或删除。如果您想冒险使用此功能，只需禁用此警告：</target>
        </trans-unit>
        <trans-unit id="82c91ac6f02fabc52ebf392a3dbee3d04110bb23" translate="yes" xml:space="preserve">
          <source>(S experimental::autoderef) &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; with a scalar argument is experimental and may change or be removed in a future Perl version. If you want to take the risk of using this feature, simply disable this warning:</source>
          <target state="translated">具有标量参数的（Sexperiment :: autoderef） &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; 是实验性的，在以后的Perl版本中可能会更改或删除。如果您想冒险使用此功能，只需禁用此警告：</target>
        </trans-unit>
        <trans-unit id="fce4a7b898b197069e9675f4e017f493007e0f79" translate="yes" xml:space="preserve">
          <source>(S experimental::autoderef) &lt;code&gt;&lt;a href=&quot;functions/pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt; with a scalar argument is experimental and may change or be removed in a future Perl version. If you want to take the risk of using this feature, simply disable this warning:</source>
          <target state="translated">带标量参数的（Sexperiment :: autoderef） &lt;code&gt;&lt;a href=&quot;functions/pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt; 是实验性的，在以后的Perl版本中可能会更改或删除。如果您想冒险使用此功能，只需禁用此警告：</target>
        </trans-unit>
        <trans-unit id="89683a4ed700756617a913ec4ebb33d06e0fd4cf" translate="yes" xml:space="preserve">
          <source>(S experimental::autoderef) &lt;code&gt;&lt;a href=&quot;functions/push&quot;&gt;push&lt;/a&gt;&lt;/code&gt; with a scalar argument is experimental and may change or be removed in a future Perl version. If you want to take the risk of using this feature, simply disable this warning:</source>
          <target state="translated">带标量参数的（Sexperiment :: autoderef） &lt;code&gt;&lt;a href=&quot;functions/push&quot;&gt;push&lt;/a&gt;&lt;/code&gt; 是实验性的，在以后的Perl版本中可能会更改或删除。如果您想冒险使用此功能，只需禁用此警告：</target>
        </trans-unit>
        <trans-unit id="0340dd38854b98f9867f6aa44ac6c8072fd08e4d" translate="yes" xml:space="preserve">
          <source>(S experimental::autoderef) &lt;code&gt;&lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt; with a scalar argument is experimental and may change or be removed in a future Perl version. If you want to take the risk of using this feature, simply disable this warning:</source>
          <target state="translated">标量参数的（Sexperiment :: autoderef） &lt;code&gt;&lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt; 是试验性的，在以后的Perl版本中可能会更改或删除。如果您想冒险使用此功能，只需禁用此警告：</target>
        </trans-unit>
        <trans-unit id="0c3d026a607b5e03927eeb3ed8eac149da6c99bc" translate="yes" xml:space="preserve">
          <source>(S experimental::autoderef) &lt;code&gt;&lt;a href=&quot;functions/splice&quot;&gt;splice&lt;/a&gt;&lt;/code&gt; with a scalar argument is experimental and may change or be removed in a future Perl version. If you want to take the risk of using this feature, simply disable this warning:</source>
          <target state="translated">具有标量参数的（Sexperiment :: autoderef） &lt;code&gt;&lt;a href=&quot;functions/splice&quot;&gt;splice&lt;/a&gt;&lt;/code&gt; 是实验性的，在以后的Perl版本中可能会更改或删除。如果您想冒险使用此功能，只需禁用此警告：</target>
        </trans-unit>
        <trans-unit id="e68fdb013728cb1d7ec62f969f221a60cf74a8d9" translate="yes" xml:space="preserve">
          <source>(S experimental::autoderef) &lt;code&gt;&lt;a href=&quot;functions/unshift&quot;&gt;unshift&lt;/a&gt;&lt;/code&gt; with a scalar argument is experimental and may change or be removed in a future Perl version. If you want to take the risk of using this feature, simply disable this warning:</source>
          <target state="translated">（Sexperiment :: autoderef）带标量参数的 &lt;code&gt;&lt;a href=&quot;functions/unshift&quot;&gt;unshift&lt;/a&gt;&lt;/code&gt; 是实验性的，在以后的Perl版本中可能会更改或删除。如果您想冒险使用此功能，只需禁用此警告：</target>
        </trans-unit>
        <trans-unit id="5021d69debf858b6240f2dd49bd775fbde8141b2" translate="yes" xml:space="preserve">
          <source>(S experimental::autoderef) &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt;&lt;/code&gt; with a scalar argument is experimental and may change or be removed in a future Perl version. If you want to take the risk of using this feature, simply disable this warning:</source>
          <target state="translated">具有标量参数的（Sexperiment :: autoderef） &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt;&lt;/code&gt; 是实验性的，在以后的Perl版本中可能会更改或删除。如果您想冒险使用此功能，只需禁用此警告：</target>
        </trans-unit>
        <trans-unit id="aa7538eaab4c50d4855c80a838be355a22d39ea7" translate="yes" xml:space="preserve">
          <source>(S experimental::bitwise) This warning is emitted if you use bitwise operators (&lt;code&gt;&amp;amp; | ^ ~ &amp;amp;. |. ^. ~.&lt;/code&gt; ) with the &quot;bitwise&quot; feature enabled. Simply suppress the warning if you want to use the feature, but know that in doing so you are taking the risk of using an experimental feature which may change or be removed in a future Perl version:</source>
          <target state="translated">（S实验性：:按位）如果使用启用了&amp;ldquo;按位&amp;rdquo;功能的按位运算符（ &lt;code&gt;&amp;amp; | ^ ~ &amp;amp;. |. ^. ~.&lt;/code&gt; ），则会发出此警告。如果要使用该功能，只需取消警告，但要知道这样做会冒着使用实验性功能的风险，该功能可能会在将来的Perl版本中更改或删除：</target>
        </trans-unit>
        <trans-unit id="c2908faa6b473b76e5180af87ee7c12baeda5af9" translate="yes" xml:space="preserve">
          <source>(S experimental::const_attr) The &quot;const&quot; attribute is experimental. If you want to use the feature, disable the warning with &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; warnings
'experimental::const_attr'&lt;/code&gt; , but know that in doing so you are taking the risk that your code may break in a future Perl version.</source>
          <target state="translated">（S实验性：: const_attr）&amp;ldquo; const&amp;rdquo;属性是实验性的。如果要使用该功能，请禁用 &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; warnings 'experimental::const_attr'&lt;/code&gt; ，但是要知道这样做会冒着在将来的Perl版本中破坏代码的风险。</target>
        </trans-unit>
        <trans-unit id="8ad53fcff910cd15cdb13953286e2f7c8bb9bd3d" translate="yes" xml:space="preserve">
          <source>(S experimental::lexical_subs) This warning is emitted if you declare a sub with &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt;. Simply suppress the warning if you want to use the feature, but know that in doing so you are taking the risk of using an experimental feature which may change or be removed in a future Perl version:</source>
          <target state="translated">（S实验性:: lexical_subs）如果用 &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; 声明一个子，则发出此警告。如果要使用该功能，只需取消警告，但要知道这样做会冒着使用实验性功能的风险，该功能可能会在将来的Perl版本中更改或删除：</target>
        </trans-unit>
        <trans-unit id="bbad5f4a6c653501b8412294c388aafb614684b0" translate="yes" xml:space="preserve">
          <source>(S experimental::lexical_topic) Lexical $_ is an experimental feature and its behavior may change or even be removed in any future release of perl. See the explanation under &lt;a href=&quot;perlvar#%24_&quot;&gt;$_ in perlvar&lt;/a&gt;.</source>
          <target state="translated">（S实验性:: lexical_topic）词法$ _是一项实验性功能，其行为可能会在将来的perl版本中更改甚至删除。请参阅&lt;a href=&quot;perlvar#%24_&quot;&gt;perlvar中$ _&lt;/a&gt;下的说明。</target>
        </trans-unit>
        <trans-unit id="eb4b3483c568e14f7629df3b582640ad8de933fc" translate="yes" xml:space="preserve">
          <source>(S experimental::postderef) This warning is emitted if you use the experimental postfix dereference syntax. Simply suppress the warning if you want to use the feature, but know that in doing so you are taking the risk of using an experimental feature which may change or be removed in a future Perl version:</source>
          <target state="translated">（S实验性:: postderef）如果使用实验性后缀取消引用语法，则发出此警告。如果要使用该功能，只需取消警告，但要知道这样做会冒着使用实验性功能的风险，该功能可能会在将来的Perl版本中更改或删除：</target>
        </trans-unit>
        <trans-unit id="b02c9ec0ec327279655983f9284490a1da3b67b2" translate="yes" xml:space="preserve">
          <source>(S experimental::re_strict) The things that are different when a regular expression pattern is compiled under &lt;code&gt;'strict'&lt;/code&gt; are subject to change in future Perl releases in incompatible ways. This means that a pattern that compiles today may not in a future Perl release. This warning is to alert you to that risk.</source>
          <target state="translated">（S实验性：: re_strict）在 &lt;code&gt;'strict'&lt;/code&gt; 下编译正则表达式模式时，不同之处可能在将来的Perl版本中以不兼容的方式进行更改。这意味着今天编译的模式可能不会在将来的Perl版本中。此警告旨在提醒您该风险。</target>
        </trans-unit>
        <trans-unit id="5a6ad942b8a18ebcd3138fccb9819c5b651d94b9" translate="yes" xml:space="preserve">
          <source>(S experimental::refaliasing) This warning is emitted if you use a reference constructor on the left-hand side of an assignment to alias one variable to another. Simply suppress the warning if you want to use the feature, but know that in doing so you are taking the risk of using an experimental feature which may change or be removed in a future Perl version:</source>
          <target state="translated">（S实验性：: refaliasing）如果在赋值的左侧使用引用构造函数将一个变量别名为另一个变量，则发出此警告。如果要使用该功能，只需取消警告，但要知道这样做会冒着使用实验性功能的风险，该功能可能会在将来的Perl版本中更改或删除：</target>
        </trans-unit>
        <trans-unit id="83fe71478e6e6f777d736c82b7741510c469859e" translate="yes" xml:space="preserve">
          <source>(S experimental::regex_sets) This warning is emitted if you use the syntax &lt;code&gt;(?[   ])&lt;/code&gt; in a regular expression. The details of this feature are subject to change. if you want to use it, but know that in doing so you are taking the risk of using an experimental feature which may change in a future Perl version, you can do this to silence the warning:</source>
          <target state="translated">（S实验性：: regex_sets）如果在正则表达式中使用语法 &lt;code&gt;(?[ ])&lt;/code&gt; ，则发出此警告。此功能的详细信息可能会更改。如果您想使用它，但又知道这样做会冒着使用实验性功能的风险，而该功能可能会在将来的Perl版本中进行更改，则可以这样做来使警告消失：</target>
        </trans-unit>
        <trans-unit id="916c9c164ebab2e4c58728f563414f67240a8b31" translate="yes" xml:space="preserve">
          <source>(S experimental::signatures) This warning is emitted if you unwrap a subroutine's arguments using a signature. Simply suppress the warning if you want to use the feature, but know that in doing so you are taking the risk of using an experimental feature which may change or be removed in a future Perl version:</source>
          <target state="translated">（S实验性：：签名）如果使用签名解包子例程的参数，则发出此警告。如果要使用该功能，只需取消警告，但要知道这样做会冒着使用实验性功能的风险，该功能可能会在将来的Perl版本中更改或删除：</target>
        </trans-unit>
        <trans-unit id="10c82f1f80af4babbfdb8f5c206b11f2776c58eb" translate="yes" xml:space="preserve">
          <source>(S experimental::smartmatch) &lt;code&gt;given&lt;/code&gt; depends on smartmatch, which is experimental, so its behavior may change or even be removed in any future release of perl. See the explanation under &lt;a href=&quot;perlsyn#Experimental-Details-on-given-and-when&quot;&gt;Experimental Details on given and when in perlsyn&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;given&lt;/code&gt; （Sexperiment :: smartmatch）取决于smartmatch，后者是实验性的，因此其行为可能会更改，甚至在以后的任何perl版本中都可能删除。&lt;a href=&quot;perlsyn#Experimental-Details-on-given-and-when&quot;&gt;在perlsyn中，有关给定值和时间的信息，&lt;/a&gt;请参见&amp;ldquo; 实验详细信息&amp;rdquo;下的说明。</target>
        </trans-unit>
        <trans-unit id="fdd3e5ba17d65712c94ebe035be28d22def4047d" translate="yes" xml:space="preserve">
          <source>(S experimental::smartmatch) &lt;code&gt;when&lt;/code&gt; depends on smartmatch, which is experimental. Additionally, it has several special cases that may not be immediately obvious, and their behavior may change or even be removed in any future release of perl. See the explanation under &lt;a href=&quot;perlsyn#Experimental-Details-on-given-and-when&quot;&gt;Experimental Details on given and when in perlsyn&lt;/a&gt;.</source>
          <target state="translated">（S实验性:: smartmatch） &lt;code&gt;when&lt;/code&gt; 取决于智能匹配，这是实验性的。此外，它还具有一些可能不会立即显而易见的特殊情况，并且它们的行为可能会更改，甚至在以后的任何perl版本中都会删除。&lt;a href=&quot;perlsyn#Experimental-Details-on-given-and-when&quot;&gt;在perlsyn中，有关给定值和时间的信息，&lt;/a&gt;请参见&amp;ldquo; 实验详细信息&amp;rdquo;下的说明。</target>
        </trans-unit>
        <trans-unit id="033e17323579638c31cc0cacd135190d1cc367d4" translate="yes" xml:space="preserve">
          <source>(S experimental::smartmatch) This warning is emitted if you use the smartmatch (&lt;code&gt;~~&lt;/code&gt; ) operator. This is currently an experimental feature, and its details are subject to change in future releases of Perl. Particularly, its current behavior is noticed for being unnecessarily complex and unintuitive, and is very likely to be overhauled.</source>
          <target state="translated">（S实验性：: smartmatch）如果使用smartmatch（ &lt;code&gt;~~&lt;/code&gt; ）运算符，则发出此警告。目前，这是一项实验性功能，其详细信息可能会在Perl的将来版本中更改。特别是，它的当前行为被认为是不必要的复杂和不直观的，并且很可能会被彻底检查。</target>
        </trans-unit>
        <trans-unit id="45f1db3c32640c6609bb45d36afb9afb2acf825b" translate="yes" xml:space="preserve">
          <source>(S experimental::win32_perlio) The &lt;code&gt;:win32&lt;/code&gt; PerlIO layer is experimental. If you want to take the risk of using this layer, simply disable this warning:</source>
          <target state="translated">（S实验性：: win32_perlio） &lt;code&gt;:win32&lt;/code&gt; PerlIO层是实验性的。如果您想冒险使用此层，只需禁用以下警告：</target>
        </trans-unit>
        <trans-unit id="1ad7ae419aa9f6d7c3d063d420951bea77afcdc1" translate="yes" xml:space="preserve">
          <source>(S glob) Something went wrong with the external program(s) used for &lt;code&gt;&lt;a href=&quot;functions/glob&quot;&gt;glob&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;*.c&amp;gt;&lt;/code&gt; . Usually, this means that you supplied a &lt;code&gt;&lt;a href=&quot;functions/glob&quot;&gt;glob&lt;/a&gt;&lt;/code&gt; pattern that caused the external program to fail and exit with a nonzero status. If the message indicates that the abnormal exit resulted in a coredump, this may also mean that your csh (C shell) is broken. If so, you should change all of the csh-related variables in config.sh: If you have tcsh, make the variables refer to it as if it were csh (e.g. &lt;code&gt;full_csh='/usr/bin/tcsh'&lt;/code&gt; ); otherwise, make them all empty (except that &lt;code&gt;d_csh&lt;/code&gt; should be &lt;code&gt;'undef'&lt;/code&gt; ) so that Perl will think csh is missing. In either case, after editing config.sh, run &lt;code&gt;./Configure -S&lt;/code&gt; and rebuild Perl.</source>
          <target state="translated">（S glob）用于 &lt;code&gt;&lt;a href=&quot;functions/glob&quot;&gt;glob&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&amp;lt;*.c&amp;gt;&lt;/code&gt; 的外部程序出了点问题。通常，这意味着您提供了一个 &lt;code&gt;&lt;a href=&quot;functions/glob&quot;&gt;glob&lt;/a&gt;&lt;/code&gt; 模式，该模式导致外部程序失败并以非零状态退出。如果该消息表明异常退出导致了核心转储，则也可能意味着您的csh（C Shell）已损坏。如果是这样，则应在config.sh中更改所有与csh相关的变量：如果具有tcsh，则使该变量像csh一样引用它（例如， &lt;code&gt;full_csh='/usr/bin/tcsh'&lt;/code&gt; ）；否则，将它们全部清空（除非 &lt;code&gt;d_csh&lt;/code&gt; 应该为 &lt;code&gt;'undef'&lt;/code&gt; ），以使Perl认为缺少csh。无论哪种情况，在编辑config.sh之后，运行 &lt;code&gt;./Configure -S&lt;/code&gt; 并重建Perl。</target>
        </trans-unit>
        <trans-unit id="57bf17f6ca7ff6190ebc8e4ef9abd1014fdeaf6c" translate="yes" xml:space="preserve">
          <source>(S inplace) The &lt;code&gt;-i&lt;/code&gt; option was passed on the command line, indicating that the script is intended to edit files in place, but no files were given. This is usually a mistake, since editing STDIN in place doesn't make sense, and can be confusing because it can make perl look like it is hanging when it is really just trying to read from STDIN. You should either pass a filename to edit, or remove &lt;code&gt;-i&lt;/code&gt; from the command line. See &lt;a href=&quot;perlrun&quot;&gt;perlrun&lt;/a&gt; for more details.</source>
          <target state="translated">（S到位） &lt;code&gt;-i&lt;/code&gt; 选项在命令行中传递，表明该脚本旨在编辑到位的文件，但未提供文件。这通常是一个错误，因为在原地编辑STDIN毫无意义，并且会造成混淆，因为当它实际上只是尝试从STDIN读取时，它会使perl看起来好像挂了一样。您应该传递文件名进行编辑，或者从命令行中删除 &lt;code&gt;-i&lt;/code&gt; 。有关更多详细信息，请参见&lt;a href=&quot;perlrun&quot;&gt;perlrun&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="99017d5c98c7111caeb37e0238149e19073d086b" translate="yes" xml:space="preserve">
          <source>(S inplace) The creation of the new file failed for the indicated reason.</source>
          <target state="translated">（S到位）由于指示的原因，新文件的创建失败。</target>
        </trans-unit>
        <trans-unit id="872e1ec2ecca53d6c460fabe9bfadbeb70a1e0ba" translate="yes" xml:space="preserve">
          <source>(S inplace) The implicit opening of a file through use of the &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; filehandle, either implicitly under the &lt;code&gt;-n&lt;/code&gt; or &lt;code&gt;-p&lt;/code&gt; command-line switches, or explicitly, failed for the indicated reason. Usually this is because you don't have read permission for a file which you named on the command line.</source>
          <target state="translated">（S到位）通过使用 &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; 文件句柄隐式打开文件（在 &lt;code&gt;-n&lt;/code&gt; 或 &lt;code&gt;-p&lt;/code&gt; 命令行开关下隐式打开，或由于指定的原因而显式失败）。通常是因为您没有在命令行上命名的文件的读取权限。</target>
        </trans-unit>
        <trans-unit id="f8aa0e126b59eedc4f1e3089d182b69944d541a6" translate="yes" xml:space="preserve">
          <source>(S inplace) The rename done by the &lt;b&gt;-i&lt;/b&gt; switch failed for some reason, probably because you don't have write permission to the directory.</source>
          <target state="translated">（S到位）&lt;b&gt;-i&lt;/b&gt;开关完成的重命名由于某种原因而失败，可能是因为您没有对该目录的写许可权。</target>
        </trans-unit>
        <trans-unit id="9f45d85e904ad8d2e46a8c11590e1868cde94827" translate="yes" xml:space="preserve">
          <source>(S inplace) You requested an inplace edit without creating a backup file. Perl was unable to remove the original file to replace it with the modified file. The file was left unmodified.</source>
          <target state="translated">（原位显示S）您请求进行原位编辑而不创建备份文件。Perl无法删除原始文件以将其替换为修改后的文件。该文件未修改。</target>
        </trans-unit>
        <trans-unit id="60e28fa03590d3c573412868f576acf564778e7d" translate="yes" xml:space="preserve">
          <source>(S inplace) You tried to use the &lt;b&gt;-i&lt;/b&gt; switch on a special file, such as a file in /dev, a FIFO or an uneditable directory. The file was ignored.</source>
          <target state="translated">（用S代替）您尝试在特殊文件（例如/ dev中的文件，FIFO或不可编辑的目录）上使用&lt;b&gt;-i&lt;/b&gt;开关。该文件被忽略。</target>
        </trans-unit>
        <trans-unit id="2d58b964b8e780d36834ab6bcf8bc11f8572521c" translate="yes" xml:space="preserve">
          <source>(S inplace) Your filesystem does not support filenames longer than 14 characters and Perl was unable to create a unique filename during inplace editing with the &lt;b&gt;-i&lt;/b&gt; switch. The file was ignored.</source>
          <target state="translated">（S inplace）您的文件系统不支持超过14个字符的文件名，并且在使用&lt;b&gt;-i&lt;/b&gt;开关进行就地编辑期间，Perl无法创建唯一的文件名。该文件被忽略。</target>
        </trans-unit>
        <trans-unit id="391d83c33870f4fffbee4cb34cb266106102f2c0" translate="yes" xml:space="preserve">
          <source>(S internal) A routine asked for a symbol from a symbol table that ought to have existed already, but for some reason it didn't, and had to be created on an emergency basis to prevent a core dump.</source>
          <target state="translated">（内部）例程从符号表中请求符号，该符号应该已经存在，但由于某种原因它不存在，因此必须在紧急情况下创建该例程以防止核心转储。</target>
        </trans-unit>
        <trans-unit id="3dc7deb3d33a3a9c91e8159223954b755e40e62e" translate="yes" xml:space="preserve">
          <source>(S internal) All SV objects are supposed to be allocated from arenas that will be garbage collected on exit. An SV was discovered to be outside any of those arenas.</source>
          <target state="translated">（S内部）所有SV对象都应该从竞技场分配，这些竞技场将在退出时进行垃圾回收。发现SV位于任何这些领域之外。</target>
        </trans-unit>
        <trans-unit id="132f16965edd70f073335bfeb30e9d71e26bb833" translate="yes" xml:space="preserve">
          <source>(S internal) An internal warning that the grammar is screwed up.</source>
          <target state="translated">（S内部）内部警告，提示语法已错误。</target>
        </trans-unit>
        <trans-unit id="a651039a1480d93c4c1be41913d07e3d50bc024f" translate="yes" xml:space="preserve">
          <source>(S internal) On exit, Perl found some strings remaining in the shared string table used for copy on write and for hash keys. The entries should have been freed, so this indicates a bug somewhere.</source>
          <target state="translated">（S内部）在退出时，Perl在共享字符串表中发现了一些剩余的字符串，这些字符串用于写时复制和哈希键。条目应已释放，因此这表明某个地方有错误。</target>
        </trans-unit>
        <trans-unit id="44bd489cb47ad43c0ef0a840eff3f0915249f1b4" translate="yes" xml:space="preserve">
          <source>(S internal) Perl maintains a reference-counted internal table of strings to optimize the storage and access of hash keys and other strings. This indicates someone tried to decrement the reference count of a string that can no longer be found in the table.</source>
          <target state="translated">（S内部）Perl维护一个引用计数的字符串内部表，以优化哈希键和其他字符串的存储和访问。这表明有人试图减少在表中找不到的字符串的引用计数。</target>
        </trans-unit>
        <trans-unit id="c67b1748ebb655c7aa8709c6bcede8a9561aabec" translate="yes" xml:space="preserve">
          <source>(S internal) Perl went to decrement the reference count of a scalar to see if it would go to 0, and discovered that it had already gone to 0 earlier, and should have been freed, and in fact, probably was freed. This could indicate that SvREFCNT_dec() was called too many times, or that SvREFCNT_inc() was called too few times, or that the SV was mortalized when it shouldn't have been, or that memory has been corrupted.</source>
          <target state="translated">（S内部）Perl减少了标量的引用计数，看它是否会变为0，并发现它早些时候已经变为0，应该已经释放了，实际上可能已经释放了。这可能表明SvREFCNT_dec（）被调用了太多次，或者SvREFCNT_inc（）被调用了太多次，或者该SV在不应该被调用时被破坏，或者该内存已损坏。</target>
        </trans-unit>
        <trans-unit id="a2edb81fff00f6b46e37c22621c10b69c421935c" translate="yes" xml:space="preserve">
          <source>(S internal) Perl's internal routine that handles &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt; formatting follows a slightly different set of rules when called from C or XS code. Specifically, formats consisting of digits followed by &quot;p&quot; (e.g., &quot;%7p&quot;) are reserved for future use. If you see this message, then an XS module tried to call that routine with one such reserved format.</source>
          <target state="translated">（S内部）从C或XS代码调用时，处理 &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt; 格式的Perl内部例程遵循一组略有不同的规则。具体来说，保留由数字后跟&amp;ldquo; p&amp;rdquo;（例如&amp;ldquo;％7p&amp;rdquo;）组成的格式，以备将来使用。如果看到此消息，则XS模块尝试使用一种这样的保留格式调用该例程。</target>
        </trans-unit>
        <trans-unit id="c37b27abb48e8eb5d7ca287f03d264501d8344b8" translate="yes" xml:space="preserve">
          <source>(S internal) Something went wrong in Perl's internal bookkeeping of scalars: not all scalar variables were deallocated by the time Perl exited. What this usually indicates is a memory leak, which is of course bad, especially if the Perl program is intended to be long-running.</source>
          <target state="translated">（S内部）Perl内部的标量记帐出错了：在Perl退出时，并不是所有的标量变量都被释放了。这通常表示存在内存泄漏，这当然是不好的，尤其是在Perl程序要长时间运行的情况下。</target>
        </trans-unit>
        <trans-unit id="5c5bd9dca59344b37ed2394cfbc1138baaa0eca0" translate="yes" xml:space="preserve">
          <source>(S internal) The behavior of &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each()&lt;/a&gt;&lt;/code&gt; after insertion is undefined; it may skip items, or visit items more than once. Consider using &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys()&lt;/a&gt;&lt;/code&gt; instead of &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">（S内部）插入后 &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each()&lt;/a&gt;&lt;/code&gt; ）的行为未定义；它可能会跳过项目，或多次访问项目。考虑使用 &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys()&lt;/a&gt;&lt;/code&gt; 而不是 &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each()&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="07ddb82bdff7ed7dd5c6b0c1d3a36605babafcf2" translate="yes" xml:space="preserve">
          <source>(S internal) The exit code detected an internal inconsistency in how many blocks were entered and left.</source>
          <target state="translated">（S内部）退出代码检测到内部不一致，输入和离开了多少个块。</target>
        </trans-unit>
        <trans-unit id="eaf5aad3008e85405951cb9dad4eae62767f907f" translate="yes" xml:space="preserve">
          <source>(S internal) The exit code detected an internal inconsistency in how many execution contexts were entered and left.</source>
          <target state="translated">（S内部）退出代码检测到输入和离开了多少个执行上下文的内部不一致。</target>
        </trans-unit>
        <trans-unit id="72f44f6876e80b1534971437fb4d17c299a6afa6" translate="yes" xml:space="preserve">
          <source>(S internal) The exit code detected an internal inconsistency in how many mortal scalars were allocated and freed.</source>
          <target state="translated">（S内部）退出代码检测到内部的不一致之处，即分配和释放了多少个普通标量。</target>
        </trans-unit>
        <trans-unit id="dceeb21ca1e86c504a62b53525d02f4f31a4a3a4" translate="yes" xml:space="preserve">
          <source>(S internal) The exit code detected an internal inconsistency in how many values were temporarily localized.</source>
          <target state="translated">（S内部）退出代码检测到内部临时存在多少个值不一致。</target>
        </trans-unit>
        <trans-unit id="190594aeb2c9a4483221fc4002c86f36ec9ff9b3" translate="yes" xml:space="preserve">
          <source>(S internal) The internal newSVsv() routine was called to duplicate a scalar that had previously been marked as free.</source>
          <target state="translated">（S内部）调用内部newSVsv（）例程来复制以前已标记为空闲的标量。</target>
        </trans-unit>
        <trans-unit id="7c7dc801e9fba6300ba40bd725a9fa40574c408e" translate="yes" xml:space="preserve">
          <source>(S internal) The reference counts got screwed up on symbol aliases.</source>
          <target state="translated">（S内部）引用计数在符号别名上弄乱了。</target>
        </trans-unit>
        <trans-unit id="805cf0addb046de8b660e0f8e96a1bc7d9fada35" translate="yes" xml:space="preserve">
          <source>(S internal) The symbol in question was declared but somehow went out of scope before it could possibly have been used.</source>
          <target state="translated">（S内部）声明了所涉及的符号，但是在某种程度上可能已被使用之前超出了范围。</target>
        </trans-unit>
        <trans-unit id="d1b252c576a82752a42dbb0fe4ed4264a3af151a" translate="yes" xml:space="preserve">
          <source>(S io) An error occurred when Perl implicitly closed a filehandle. This usually indicates your file system ran out of disk space.</source>
          <target state="translated">（S io）Perl隐式关闭文件句柄时发生错误。这通常表示文件系统磁盘空间不足。</target>
        </trans-unit>
        <trans-unit id="b3750e6f44fed9ab0221da58f719cb3c95d174e4" translate="yes" xml:space="preserve">
          <source>(S io) You tried to apply an encoding that did not exist to a filehandle, either with open() or binmode().</source>
          <target state="translated">（S io）您尝试使用open（）或binmode（）将不存在的编码应用于文件句柄。</target>
        </trans-unit>
        <trans-unit id="fa39a61a251f17784b259620eff68ff78d98ee28" translate="yes" xml:space="preserve">
          <source>(S malloc) An internal routine called free() on something that had already been freed.</source>
          <target state="translated">（S malloc）一个内部例程，它对已经被释放的对象调用free（）。</target>
        </trans-unit>
        <trans-unit id="5d0b521fec65b45130587042c2a612513012a191" translate="yes" xml:space="preserve">
          <source>(S malloc) An internal routine called free() on something that had never been malloc()ed in the first place. Mandatory, but can be disabled by setting environment variable &lt;code&gt;PERL_BADFREE&lt;/code&gt; to 0.</source>
          <target state="translated">（S malloc）一个内部程序，称为free（），它最初从未进行过malloc（）处理。强制性的，但是可以通过将环境变量 &lt;code&gt;PERL_BADFREE&lt;/code&gt; 设置为0 来禁用。</target>
        </trans-unit>
        <trans-unit id="d8c259ae60ee2d2d383dd4c7abe117aad0b9ac8c" translate="yes" xml:space="preserve">
          <source>(S malloc) An internal routine called realloc() on something that had already been freed.</source>
          <target state="translated">（S malloc）在已经释放的内容上的内部例程，称为realloc（）。</target>
        </trans-unit>
        <trans-unit id="a620f32bfd6072f137b8950d3d72d49ef7b5c6d6" translate="yes" xml:space="preserve">
          <source>(S malloc) An internal routine called realloc() on something that had never been malloc()ed in the first place. Mandatory, but can be disabled by setting the environment variable &lt;code&gt;PERL_BADFREE&lt;/code&gt; to 1.</source>
          <target state="translated">（S malloc）一个内部例程，称为realloc（），该例程最初从未进行过malloc（）处理。强制性的，但是可以通过将环境变量 &lt;code&gt;PERL_BADFREE&lt;/code&gt; 设置为1 来禁用。</target>
        </trans-unit>
        <trans-unit id="77bc07a55e926afe8aa19cc310695c60f70caab0" translate="yes" xml:space="preserve">
          <source>(S misc) With &quot;use strict&quot; in effect, you referred to a global variable that you apparently thought was imported from another module, because something else of the same name (usually a subroutine) is exported by that module. It usually means you put the wrong funny character on the front of your variable.</source>
          <target state="translated">（S misc）启用&amp;ldquo;严格使用&amp;rdquo;后，您引用了一个您显然认为是从另一个模块导入的全局变量，因为该模块导出了其他同名的东西（通常是子例程）。这通常意味着您将错误的有趣字符放在变量的前面。</target>
        </trans-unit>
        <trans-unit id="573a802cf81c9c779976f7aa813dbd3adec4e6c2" translate="yes" xml:space="preserve">
          <source>(S non_unicode) Perl allows strings to contain a superset of Unicode code points; each code point may be as large as what is storable in an unsigned integer on your system, but these may not be accepted by other languages/systems. This message occurs when you matched a string containing such a code point against a regular expression pattern, and the code point was matched against a Unicode property, &lt;code&gt;\p{...}&lt;/code&gt; or &lt;code&gt;\P{...}&lt;/code&gt; . Unicode properties are only defined on Unicode code points, so the result of this match is undefined by Unicode, but Perl (starting in v5.20) treats non-Unicode code points as if they were typical unassigned Unicode ones, and matched this one accordingly. Whether a given property matches these code points or not is specified in &lt;a href=&quot;perluniprops#Properties-accessible-through-%5cp%7b%7d-and-%5cP%7b%7d&quot;&gt;Properties accessible through \p{} and \P{} in perluniprops&lt;/a&gt;.</source>
          <target state="translated">（S non_unicode）Perl允许字符串包含Unicode代码点的超集；每个代码点可能与系统上无符号整数可存储的代码点一样大，但是其他语言/系统可能不接受这些代码点。当您将包含此类代码点的字符串与正则表达式模式匹配，并且代码点与Unicode属性 &lt;code&gt;\p{...}&lt;/code&gt; 或 &lt;code&gt;\P{...}&lt;/code&gt; 匹配时，会出现此消息。 Unicode属性仅在Unicode代码点上定义，因此Unicode不会定义此匹配的结果，但是Perl（从v5.20开始）将非Unicode代码点视为典型的未分配Unicode代码点，并对此进行了匹配。指定的属性是否与这些代码点匹配&lt;a href=&quot;perluniprops#Properties-accessible-through-%5cp%7b%7d-and-%5cP%7b%7d&quot;&gt;可通过perluniprops中的\ p {}和\ P {}访问的属性&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="19b283d9880fdba021f728f4ecad97414f4175d1" translate="yes" xml:space="preserve">
          <source>(S non_unicode) You had a code point above the Unicode maximum of U+10FFFF.</source>
          <target state="translated">（S non_unicode）您的代码点高于Unicode最大U + 10FFFF。</target>
        </trans-unit>
        <trans-unit id="0e65bd4350fe9dad8bab07ca1af0ee7abcc64cc0" translate="yes" xml:space="preserve">
          <source>(S non_unicode) You performed an operation requiring Unicode rules on a code point that is not in Unicode, so what it should do is not defined. Perl has chosen to have it do nothing, and warn you.</source>
          <target state="translated">（S non_unicode）您对非Unicode的代码点执行了要求Unicode规则的操作，因此未定义应执行的操作。Perl选择不执行任何操作，并警告您。</target>
        </trans-unit>
        <trans-unit id="65ce68f38fa2e28e569a079eebc3ab60a8c462a5" translate="yes" xml:space="preserve">
          <source>(S nonchar) Certain codepoints, such as U+FFFE and U+FFFF, are defined by the Unicode standard to be non-characters. Those are legal codepoints, but are reserved for internal use; so, applications shouldn't attempt to exchange them. An application may not be expecting any of these characters at all, and receiving them may lead to bugs. If you know what you are doing you can turn off this warning by &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; warnings 'nonchar';&lt;/code&gt; .</source>
          <target state="translated">（S非字符）某些代码点（例如U + FFFE和U + FFFF）由Unicode标准定义为非字符。这些是合法的代码点，但保留供内部使用。因此，应用程序不应尝试交换它们。应用程序可能根本不需要这些字符，而接收它们可能会导致错误。如果您知道自己在做什么，则可以通过 &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; warnings 'nonchar';&lt;/code&gt; 警告来关闭此警告。。</target>
        </trans-unit>
        <trans-unit id="0bc8b6a3ebad86f966480eeb67b327a6d89ff484" translate="yes" xml:space="preserve">
          <source>(S overflow) The hexadecimal, octal or binary number you have specified either as a literal or as an argument to hex() or oct() is too big for your architecture, and has been converted to a floating point number. On a 32-bit architecture the largest hexadecimal, octal or binary number representable without overflow is 0xFFFFFFFF, 037777777777, or 0b11111111111111111111111111111111 respectively. Note that Perl transparently promotes all numbers to a floating point representation internally--subject to loss of precision errors in subsequent operations.</source>
          <target state="translated">（S溢出）您指定为文字或作为hex（）或oct（）的参数指定的十六进制，八进制或二进制数对于您的体系结构而言太大，并且已转换为浮点数。在32位体系结构上，可表示且无溢出的最大十六进制，八进制或二进制数分别为0xFFFFFFFF，037777777777或0b11111111111111111111111111111111。请注意，Perl在内部透明地将所有数字提升为浮点表示形式-可能会在后续操作中损失精度错误。</target>
        </trans-unit>
        <trans-unit id="a81efe3b141644ae1c64ccda8162305de772f81a" translate="yes" xml:space="preserve">
          <source>(S overflow) The number you have passed to srand is too big to fit in your architecture's integer representation. The number has been replaced with the largest integer supported (0xFFFFFFFF on 32-bit architectures). This means you may be getting less randomness than you expect, because different random seeds above the maximum will return the same sequence of random numbers.</source>
          <target state="translated">（S溢出）您传递给rand的数字太大，无法容纳在体系结构的整数表示中。该数字已替换为支持的最大整数（在32位体系结构上为0xFFFFFFFF）。这意味着您获得的随机性可能比预期的要少，因为高于最大值的不同随机种子将返回相同的随机数序列。</target>
        </trans-unit>
        <trans-unit id="fa880c4ea294018cc8b7759e1f40c09681a9ecd0" translate="yes" xml:space="preserve">
          <source>(S precedence) The old irregular construct</source>
          <target state="translated">（S优先）旧的不规则构造</target>
        </trans-unit>
        <trans-unit id="f4f9f0dc0b34226bf8eba2562237c41d577c0e6a" translate="yes" xml:space="preserve">
          <source>(S printf) The %vd (s)printf format does not support version objects with alpha parts.</source>
          <target state="translated">（S printf）％vd（s）printf格式不支持带有Alpha部分的版本对象。</target>
        </trans-unit>
        <trans-unit id="4ce97a4246b6d12bea94b40f3a1725e34f3c6534" translate="yes" xml:space="preserve">
          <source>(S prototype) The subroutine being declared or defined had previously been declared or defined with a different function prototype.</source>
          <target state="translated">（S原型）之前已使用不同的函数原型声明或定义了要声明或定义的子例程。</target>
        </trans-unit>
        <trans-unit id="a74017dd7ef16cdde3163d002f96e226e9847a43" translate="yes" xml:space="preserve">
          <source>(S regexp) You used a regular expression with case-insensitive matching, and there is a bug in Perl in which the built-in regular expression folding rules are not accurate. This may lead to incorrect results. Please report this as a bug using the &lt;a href=&quot;perlbug&quot;&gt;perlbug&lt;/a&gt; utility.</source>
          <target state="translated">（S regexp）您使用了不区分大小写匹配的正则表达式，并且Perl中存在一个错误，即内置正则表达式折叠规则不正确。这可能会导致错误的结果。请使用&lt;a href=&quot;perlbug&quot;&gt;perlbug&lt;/a&gt;实用程序将此报告为错误。</target>
        </trans-unit>
        <trans-unit id="df864de1124aae42786167d97b20d0e1db294582" translate="yes" xml:space="preserve">
          <source>(S surrogate) You had a UTF-16 surrogate in a context where they are not considered acceptable. These code points, between U+D800 and U+DFFF (inclusive), are used by Unicode only for UTF-16. However, Perl internally allows all unsigned integer code points (up to the size limit available on your platform), including surrogates. But these can cause problems when being input or output, which is likely where this message came from. If you really really know what you are doing you can turn off this warning by &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; warnings 'surrogate';&lt;/code&gt; .</source>
          <target state="translated">（代理）您在不可接受的情况下使用了UTF-16代理。这些代码点在U + D800和U + DFFF（包括U + DFF）之间，仅Unicode用于UTF-16。但是，Perl内部允许所有无符号的整数代码点（最大为平台上可用的大小限制），包括代理。但是这些会在输入或输出时引起问题，这很可能是此消息的来源。如果您真的真的知道自己在做什么，则可以通过 &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; warnings 'surrogate';&lt;/code&gt; 来关闭此警告。。</target>
        </trans-unit>
        <trans-unit id="8c0f0ed56bf6fb19cc79ec8dfe5eb86e0e68ffff" translate="yes" xml:space="preserve">
          <source>(S surrogate) You performed an operation requiring Unicode rules on a Unicode surrogate. Unicode frowns upon the use of surrogates for anything but storing strings in UTF-16, but rules are (reluctantly) defined for the surrogates, and they are to do nothing for this operation. Because the use of surrogates can be dangerous, Perl warns.</source>
          <target state="translated">（S代理）您执行了需要对Unicode代理执行Unicode规则的操作。除了将字符串存储在UTF-16中之外，Unicode都不赞成使用替代项，但是为替代项定义了（勉强地）定义了规则，并且该操作不执行任何操作。Perl警告，因为使用代理人可能很危险。</target>
        </trans-unit>
        <trans-unit id="f6acf881691f06ec13f8292be3aba45678bee7bb" translate="yes" xml:space="preserve">
          <source>(S syntax) The Perl lexer knows whether to expect a term or an operator. If it sees what it knows to be a term when it was expecting to see an operator, it gives you this warning. Usually it indicates that an operator or delimiter was omitted, such as a semicolon.</source>
          <target state="translated">（S语法）Perl词法分析器知道是期望术语还是运算符。如果在希望看到运算符时看到了它所知道的术语，则会向您发出此警告。通常，它表示省略了运算符或分隔符，例如分号。</target>
        </trans-unit>
        <trans-unit id="4454450ae7b35ebe2cd2fbb1d446acb7866dd2eb" translate="yes" xml:space="preserve">
          <source>(S syntax) There is no keyword &quot;elseif&quot; in Perl because Larry thinks it's ugly. Your code will be interpreted as an attempt to call a method named &quot;elseif&quot; for the class returned by the following block. This is unlikely to be what you want.</source>
          <target state="translated">（S语法）Perl中没有关键字&amp;ldquo; elseif&amp;rdquo;，因为Larry认为它很丑陋。您的代码将被解释为试图为下一个块返回的类调用名为&amp;ldquo; elseif&amp;rdquo;的方法。这不太可能是您想要的。</target>
        </trans-unit>
        <trans-unit id="a8c2d78dc7d59678e13893fb1795ba6312ba8d4a" translate="yes" xml:space="preserve">
          <source>(S syntax) This is an educated guess made in conjunction with the message &quot;%s found where operator expected&quot;. Don't automatically put a semicolon on the previous line just because you saw this message.</source>
          <target state="translated">（S语法）这是与消息&amp;ldquo;在操作员期望的位置找到％s&amp;rdquo;一起进行的有根据的猜测。不要仅仅因为看到了此消息就自动在前一行加上分号。</target>
        </trans-unit>
        <trans-unit id="c2781a5a2d3b1c269fdba51833459c2daf2cf4b6" translate="yes" xml:space="preserve">
          <source>(S syntax) This is an educated guess made in conjunction with the message &quot;%s found where operator expected&quot;. It often means a subroutine or module name is being referenced that hasn't been declared yet. This may be because of ordering problems in your file, or because of a missing &quot;sub&quot;, &quot;package&quot;, &quot;require&quot;, or &quot;use&quot; statement. If you're referencing something that isn't defined yet, you don't actually have to define the subroutine or package before the current location. You can use an empty &quot;sub foo;&quot; or &quot;package FOO;&quot; to enter a &quot;forward&quot; declaration.</source>
          <target state="translated">（S语法）这是与消息&amp;ldquo;在操作员期望的位置找到％s&amp;rdquo;一起进行的有根据的猜测。这通常意味着正在引用尚未声明的子例程或模块名称。这可能是由于文件中的排序问题，或者是因为缺少&amp;ldquo; sub&amp;rdquo;，&amp;ldquo; package&amp;rdquo;，&amp;ldquo; require&amp;rdquo;或&amp;ldquo; use&amp;rdquo;语句。如果引用的是尚未定义的内容，则实际上不必在当前位置之前定义子例程或程序包。您可以使用一个空的&amp;ldquo; sub foo;&amp;rdquo;。或&amp;ldquo;包裹FOO；&amp;rdquo; 输入&amp;ldquo;转发&amp;rdquo;声明。</target>
        </trans-unit>
        <trans-unit id="f3181ebefec91564c2751781f26571979e02ab21" translate="yes" xml:space="preserve">
          <source>(S syntax) This is an educated guess made in conjunction with the message &quot;%s found where operator expected&quot;. Often the missing operator is a comma.</source>
          <target state="translated">（S语法）这是与消息&amp;ldquo;在操作员期望的位置找到％s&amp;rdquo;一起进行的有根据的猜测。通常缺少的运算符是逗号。</target>
        </trans-unit>
        <trans-unit id="a2b03541201cb492e4bcc13c8c07d39c4ca0f12c" translate="yes" xml:space="preserve">
          <source>(S utf8) Perl met a wide character (&amp;gt;255) when it wasn't expecting one. This warning is by default on for I/O (like print). The easiest way to quiet this warning is simply to add the &lt;code&gt;:utf8&lt;/code&gt; layer to the output, e.g. &lt;code&gt;&lt;a href=&quot;functions/binmode&quot;&gt;binmode&lt;/a&gt; STDOUT, ':utf8'&lt;/code&gt; . Another way to turn off the warning is to add &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; warnings 'utf8';&lt;/code&gt; but that is often closer to cheating. In general, you are supposed to explicitly mark the filehandle with an encoding, see &lt;a href=&quot;open&quot;&gt;open&lt;/a&gt; and &lt;a href=&quot;functions/binmode&quot;&gt;binmode&lt;/a&gt;.</source>
          <target state="translated">（Sutf8）Perl没想到会遇到一个宽字符（&amp;gt; 255）。对于I / O（如打印），默认情况下此警告处于打开状态。消除此警告的最简单方法是在输出中添加 &lt;code&gt;:utf8&lt;/code&gt; 层，例如 &lt;code&gt;&lt;a href=&quot;functions/binmode&quot;&gt;binmode&lt;/a&gt; STDOUT, ':utf8'&lt;/code&gt; 。关闭该警告的另一种方法是添加 &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; warnings 'utf8';&lt;/code&gt; 但这通常更接近作弊。通常，应该使用编码明确标记文件句柄，请参见&lt;a href=&quot;open&quot;&gt;open&lt;/a&gt;和&lt;a href=&quot;functions/binmode&quot;&gt;binmode&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="57855f2bd9937b267a6b6576a7d9eb1c1b15b09c" translate="yes" xml:space="preserve">
          <source>(S utf8) When reading in different encodings, Perl tries to map everything into Unicode characters. The bytes you read in are not legal in this encoding. For example</source>
          <target state="translated">（Sutf8）当以不同的编码读取时，Perl尝试将所有内容映射为Unicode字符。您读取的字节在此编码中是非法的。例如</target>
        </trans-unit>
        <trans-unit id="8cd0aaf1873d02e4abc5ce50af24301359e43db8" translate="yes" xml:space="preserve">
          <source>(S utf8)(F) Perl detected a string that didn't comply with UTF-8 encoding rules, even though it had the UTF8 flag on.</source>
          <target state="translated">（S utf8）（F）Perl检测到一个不符合UTF-8编码规则的字符串，即使它已启用UTF8标志。</target>
        </trans-unit>
        <trans-unit id="3683ce30134f0866ff8cc5b425b5c96153f23e84" translate="yes" xml:space="preserve">
          <source>(S) A module passed the flag 0x01 to DynaLoader::dl_load_file() to request that symbols from the stated file are made available globally within the process, but that functionality is not available on this platform. Whilst the module likely will still work, this may prevent the perl interpreter from loading other XS-based extensions which need to link directly to functions defined in the C or XS code in the stated file.</source>
          <target state="translated">（S）一个模块将标志0x01传递给DynaLoader :: dl_load_file（），以请求使所声明文件中的符号在该过程中全局可用，但该功能在该平台上不可用。尽管该模块可能仍然可以工作，但是这可能会阻止perl解释器加载其他基于XS的扩展，这些扩展需要直接链接至所述文件中C或XS代码中定义的功能。</target>
        </trans-unit>
        <trans-unit id="71fe0e7a0ef74c8ea97478433120256a495f7ddb" translate="yes" xml:space="preserve">
          <source>(S) A warning from the GDBM_File extension that a store failed.</source>
          <target state="translated">（S）来自GDBM_File扩展名的警告，指示存储失败。</target>
        </trans-unit>
        <trans-unit id="e2714b5f88acc5f800149b3163d506069fce696e" translate="yes" xml:space="preserve">
          <source>(S) A warning peculiar to VMS. Perl keeps track of the number of times you've called &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt;, to determine whether the current call to &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; should affect the current script or a subprocess (see &lt;a href=&quot;perlvms#exec-LIST&quot;&gt;exec LIST in perlvms&lt;/a&gt;). Somehow, this count has become scrambled, so Perl is making a guess and treating this &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; as a request to terminate the Perl script and execute the specified command.</source>
          <target state="translated">（S）VMS特有的警告。Perl会跟踪您调用 &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; 的次数，以确定当前对 &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; 的调用是否应该影响当前脚本或子&lt;a href=&quot;perlvms#exec-LIST&quot;&gt;进程&lt;/a&gt;（请参阅perlvms中的exec LIST）。不知何故，此计数变得混乱了，因此Perl进行猜测，并将此 &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; 视为终止Perl脚本并执行指定命令的请求。</target>
        </trans-unit>
        <trans-unit id="5b1ed1e9ebe7c3194ca76ef10180a3dddbee42ff" translate="yes" xml:space="preserve">
          <source>(S) A warning peculiar to VMS. Perl tried to read an element of %ENV from the CRTL's internal environment array and discovered the array was missing. You need to figure out where your CRTL misplaced its environ or define</source>
          <target state="translated">（S）VMS特有的警告。Perl尝试从CRTL的内部环境数组中读取％ENV元素，并发现该数组丢失。您需要弄清楚CRTL在哪里错放了它的环境或定义了</target>
        </trans-unit>
        <trans-unit id="80a50c6efc131c5760a3154b2ef75d4174884a2e" translate="yes" xml:space="preserve">
          <source>(S) A warning peculiar to VMS. Perl was unable to find the local timezone offset, so it's assuming that local system time is equivalent to UTC. If it's not, define the logical name</source>
          <target state="translated">（S）VMS特有的警告。Perl无法找到本地时区偏移量，因此假设本地系统时间等于UTC。如果不是，请定义逻辑名</target>
        </trans-unit>
        <trans-unit id="a0bdeb47a9bc2a4c86556ce039ed7dc145f5ba40" translate="yes" xml:space="preserve">
          <source>(S) A warning peculiar to VMS. The call to &lt;code&gt;sys$getuai&lt;/code&gt; underlying the &lt;code&gt;&lt;a href=&quot;functions/getpwnam&quot;&gt;getpwnam&lt;/a&gt;&lt;/code&gt; operator returned an invalid UIC.</source>
          <target state="translated">（S）VMS特有的警告。要将呼叫 &lt;code&gt;sys$getuai&lt;/code&gt; 底层 &lt;code&gt;&lt;a href=&quot;functions/getpwnam&quot;&gt;getpwnam&lt;/a&gt;&lt;/code&gt; 操作返回无效UIC。</target>
        </trans-unit>
        <trans-unit id="75067461356bbab9bcda2b924a0dbdd21fbc62b3" translate="yes" xml:space="preserve">
          <source>(S) A warning peculiar to VMS. This arises because of the difference between access checks under VMS and under the Unix model Perl assumes. Under VMS, access checks are done by filename, rather than by bits in the stat buffer, so that ACLs and other protections can be taken into account. Unfortunately, Perl assumes that the stat buffer contains all the necessary information, and passes it, instead of the filespec, to the access-checking routine. It will try to retrieve the filespec using the device name and FID present in the stat buffer, but this works only if you haven't made a subsequent call to the CRTL stat() routine, because the device name is overwritten with each call. If this warning appears, the name lookup failed, and the access-checking routine gave up and returned FALSE, just to be conservative. (Note: The access-checking routine knows about the Perl &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; operator and file tests, so you shouldn't ever see this warning in response to a Perl command; it arises only if some internal code takes stat buffers lightly.)</source>
          <target state="translated">（S）VMS特有的警告。这是由于VMS和Perl假定的Unix模型下的访问检查之间存在差异而引起的。在VMS下，访问检查是通过文件名而不是通过统计缓冲区中的位来完成的，因此可以考虑ACL和其他保护。不幸的是，Perl假定stat缓冲区包含所有必要的信息，并将其而不是filespec传递给访问检查例程。它将尝试使用stat缓冲区中存在的设备名称和FID检索filespec，但这仅在您未对CRTL stat（）例程进行后续调用的情况下有效，因为每次调用都会覆盖设备名称。如果出现此警告，则名称查找失败，并且为了保守起见，访问检查例程放弃并返回FALSE。 （注意：访问检查例程了解Perl &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; 运算符和文件测试，因此您永远不会在响应Perl命令时看到此警告；仅当某些内部代码稍微占用stat缓冲区时，它才会出现。）</target>
        </trans-unit>
        <trans-unit id="930a63fd0c5a6b7a74664583320d536530e1c47e" translate="yes" xml:space="preserve">
          <source>(S) An advisory indicating that the previous error may have been caused by a missing delimiter on a string or pattern, because it eventually ended earlier on the current line.</source>
          <target state="translated">（S）一条警告，指示先前的错误可能是由字符串或模式上缺少定界符引起的，因为该错误最终在当前行上更早结束。</target>
        </trans-unit>
        <trans-unit id="ea431a3e9652c10520b899d17d8c4d7d245822b1" translate="yes" xml:space="preserve">
          <source>(S) An uncaught die() was called when &lt;code&gt;PERL_EXIT_WARN&lt;/code&gt; was set in &lt;code&gt;PL_exit_flags&lt;/code&gt; .</source>
          <target state="translated">（S）在 &lt;code&gt;PERL_EXIT_WARN&lt;/code&gt; 中设置 &lt;code&gt;PL_exit_flags&lt;/code&gt; 时，调用了一个未捕获的die（）。</target>
        </trans-unit>
        <trans-unit id="32a226ec92183bc190d2e2015a61b567573815e2" translate="yes" xml:space="preserve">
          <source>(S) If you see this message, then something is seriously wrong with the internal bookkeeping of op trees. An op tree needed to be freed after a compilation error, but could not be found, so it was leaked instead.</source>
          <target state="translated">（S）如果您看到此消息，则说明运营树的内部簿记存在严重错误。编译错误后需要释放op树，但找不到它，因此它被泄漏了。</target>
        </trans-unit>
        <trans-unit id="e31315c4370c451df264360074e78b518d31127a" translate="yes" xml:space="preserve">
          <source>(S) PERL_HASH_SEED should match /^\s*(?:0x)?[0-9a-fA-F]+\s*\z/ but it contained a non hex character. This could mean you are not using the hash seed you think you are.</source>
          <target state="translated">（S）PERL_HASH_SEED应该匹配/ ^ \ s *（?: 0x）？[0-9a-fA-F] + \ s * \ z /，但其中包含非十六进制字符。这可能意味着您没有使用您认为的哈希种子。</target>
        </trans-unit>
        <trans-unit id="574ab9c7bf2103c1f692194c2ec8c32451ec0a86" translate="yes" xml:space="preserve">
          <source>(S) Perl was run with the environment variable PERL_PERTURB_KEYS defined but containing an unexpected value. The legal values of this setting are as follows.</source>
          <target state="translated">（S）Perl在定义了环境变量PERL_PERTURB_KEYS的情况下运行，但其中包含意外值。此设置的合法值如下。</target>
        </trans-unit>
        <trans-unit id="889f7fc12cf40635318289062b5183bc737b5bb0" translate="yes" xml:space="preserve">
          <source>(S) The implicit close() done by an open() got an error indication on the close(). This usually indicates your file system ran out of disk space.</source>
          <target state="translated">（S）由open（）完成的隐式close（）在close（）上显示错误指示。这通常表示文件系统磁盘空间不足。</target>
        </trans-unit>
        <trans-unit id="478dd644bf1500e4e55920ac078aec49bfb5ac11" translate="yes" xml:space="preserve">
          <source>(S) The whole warning message will look something like:</source>
          <target state="translated">（S）整个警告消息如下所示：</target>
        </trans-unit>
        <trans-unit id="e2cb7ac39677c13cdd8565b8127088c31a7d55a3" translate="yes" xml:space="preserve">
          <source>(S) You compiled perl with &lt;b&gt;-D&lt;/b&gt;PERL_DEBUG_READONLY_COW (see &lt;a href=&quot;perlguts#Copy-on-Write&quot;&gt;Copy on Write in perlguts&lt;/a&gt;), but a read-only shared string buffer could not be made mutable.</source>
          <target state="translated">（S）您使用&lt;b&gt;-D&lt;/b&gt; PERL_DEBUG_READONLY_COW 编译了perl （请参阅perlguts中的&lt;a href=&quot;perlguts#Copy-on-Write&quot;&gt;写入时复制&lt;/a&gt;），但是无法使只读共享字符串缓冲区可变。</target>
        </trans-unit>
        <trans-unit id="2cb363bd5bfb6e77492d1ab85ce15a97859f3690" translate="yes" xml:space="preserve">
          <source>(S) You compiled perl with &lt;b&gt;-D&lt;/b&gt;PERL_DEBUG_READONLY_COW (see &lt;a href=&quot;perlguts#Copy-on-Write&quot;&gt;Copy on Write in perlguts&lt;/a&gt;), but a shared string buffer could not be made read-only.</source>
          <target state="translated">（S）您使用&lt;b&gt;-D&lt;/b&gt; PERL_DEBUG_READONLY_COW 编译了perl （请参阅perlguts中的&lt;a href=&quot;perlguts#Copy-on-Write&quot;&gt;写入时复制&lt;/a&gt;），但是无法将共享字符串缓冲区设置为只读。</target>
        </trans-unit>
        <trans-unit id="1d1920922b4140b4a15e07f071743952f23ddb8a" translate="yes" xml:space="preserve">
          <source>(S) You compiled perl with &lt;b&gt;-D&lt;/b&gt;PERL_DEBUG_READONLY_OPS (see &lt;a href=&quot;perlhacktips&quot;&gt;perlhacktips&lt;/a&gt;), but a read-only op tree could not be made mutable before freeing the ops.</source>
          <target state="translated">（S）您使用&lt;b&gt;-D&lt;/b&gt; PERL_DEBUG_READONLY_OPS 编译了perl （请参阅&lt;a href=&quot;perlhacktips&quot;&gt;perlhacktips&lt;/a&gt;），但是在释放操作之前，不能使只读操作树可变。</target>
        </trans-unit>
        <trans-unit id="061be05d42d3006ace944036e5366426a28c702c" translate="yes" xml:space="preserve">
          <source>(S) You compiled perl with &lt;b&gt;-D&lt;/b&gt;PERL_DEBUG_READONLY_OPS (see &lt;a href=&quot;perlhacktips&quot;&gt;perlhacktips&lt;/a&gt;), but an op tree could not be made read-only.</source>
          <target state="translated">（S）您使用&lt;b&gt;-D&lt;/b&gt; PERL_DEBUG_READONLY_OPS 编译了perl （请参阅&lt;a href=&quot;perlhacktips&quot;&gt;perlhacktips&lt;/a&gt;），但是无法将操作树设为只读。</target>
        </trans-unit>
        <trans-unit id="c1fef223f2a1e28c0dc57c6acbeb950baf45e917" translate="yes" xml:space="preserve">
          <source>(S) exit() was called or the script otherwise finished gracefully when &lt;code&gt;PERL_EXIT_WARN&lt;/code&gt; was set in &lt;code&gt;PL_exit_flags&lt;/code&gt; .</source>
          <target state="translated">在 &lt;code&gt;PERL_EXIT_WARN&lt;/code&gt; 中设置 &lt;code&gt;PL_exit_flags&lt;/code&gt; 时，将调用（S）exit（）或以其他方式正常完成脚本。</target>
        </trans-unit>
        <trans-unit id="f4004e755db0df1ce4f775dedbbb5d6e581d62ef" translate="yes" xml:space="preserve">
          <source>(See &lt;a href=&quot;#Package-specific-Attribute-Handling&quot;&gt;Package-specific Attribute Handling&lt;/a&gt; below.)</source>
          <target state="translated">（请参阅下面&lt;a href=&quot;#Package-specific-Attribute-Handling&quot;&gt;的特定于包的属性处理&lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="db2ebfc2e96e7bb52d5fa31d7dbcc56ffaa4bd84" translate="yes" xml:space="preserve">
          <source>(See &lt;a href=&quot;#autochomp&quot;&gt;autochomp&lt;/a&gt;, below.) Records stored into the array will have the record separator string appended before they are written to the file, if they don't have one already. For example, if the record separator string is &lt;code&gt;&quot;\n&quot;&lt;/code&gt; , then the following two lines do exactly the same thing:</source>
          <target state="translated">（请参阅下面的&lt;a href=&quot;#autochomp&quot;&gt;autochomp&lt;/a&gt;。）如果还没有记录，存储在数组中的记录将在写入文件之前附加记录分隔符字符串。例如，如果记录分隔符字符串为 &lt;code&gt;&quot;\n&quot;&lt;/code&gt; ，那么以下两行将执行完全相同的操作：</target>
        </trans-unit>
        <trans-unit id="80430ec7983ecf81932712e8136d1fc6999e349e" translate="yes" xml:space="preserve">
          <source>(See &lt;a href=&quot;langtags/detect&quot;&gt;I18N::LangTags::Detect&lt;/a&gt;.)</source>
          <target state="translated">（请参阅&lt;a href=&quot;langtags/detect&quot;&gt;I18N :: LangTags :: Detect&lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="9b4e95ed885a0ff41d39b669580f7f1627edc618" translate="yes" xml:space="preserve">
          <source>(See &lt;a href=&quot;perlguts#Background-and-PERL_IMPLICIT_CONTEXT&quot;&gt;Background and PERL_IMPLICIT_CONTEXT in perlguts&lt;/a&gt; for the explanation of the &lt;code&gt;aTHX_&lt;/code&gt; . ) Hiding the short forms is very useful for avoiding all sorts of nasty (C preprocessor or otherwise) conflicts with other software packages (Perl defines about 2400 APIs with these short names, take or leave few hundred, so there certainly is room for conflict.)</source>
          <target state="translated">（见&lt;a href=&quot;perlguts#Background-and-PERL_IMPLICIT_CONTEXT&quot;&gt;背景和PERL_IMPLICIT_CONTEXT在perlguts&lt;/a&gt;为的解释 &lt;code&gt;aTHX_&lt;/code&gt; ）隐藏缩写形式是为了避免各种讨厌的非常有用的（C预处理器或其他方式）与其他软件包的Perl定义了关于2400级的API与这些短名称冲突（，拿走或离开几百，所以肯定有冲突的余地。）</target>
        </trans-unit>
        <trans-unit id="1b4d2cec47c211a6fd1862a5dc33ef6861851af3" translate="yes" xml:space="preserve">
          <source>(See &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt; for information about these.) When a Perl interpreter normally starts up, it tells the system it wants to use the system's default locale. This is often, but not necessarily, the &quot;C&quot; or &quot;POSIX&quot; locale. Absent a &lt;code&gt;&quot;use locale&quot;&lt;/code&gt; within the perl code, this mostly has no effect (but see &lt;a href=&quot;perllocale#Not-within-the-scope-of-%22use-locale%22&quot;&gt;Not within the scope of use locale in perllocale&lt;/a&gt;). Also, there is not a problem if the locale you want to use in your embedded Perl is the same as the system default. However, this doesn't work if you have set up and want to use a locale that isn't the system default one. Starting in Perl v5.20, you can tell the embedded Perl interpreter that the locale is already properly set up, and to skip doing its own normal initialization. It skips if the environment variable &lt;code&gt;PERL_SKIP_LOCALE_INIT&lt;/code&gt; is set (even if set to 0 or &lt;code&gt;&quot;&quot;&lt;/code&gt; ). A Perl that has this capability will define the C pre-processor symbol &lt;code&gt;HAS_SKIP_LOCALE_INIT&lt;/code&gt; . This allows code that has to work with multiple Perl versions to do some sort of work-around when confronted with an earlier Perl.</source>
          <target state="translated">（有关这些信息，请参阅&lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt;。）当Perl解释器正常启动时，它会告诉系统它要使用系统的默认语言环境。这通常是（但不一定是）&amp;ldquo; C&amp;rdquo;或&amp;ldquo; POSIX&amp;rdquo;语言环境。在perl代码中缺少 &lt;code&gt;&quot;use locale&quot;&lt;/code&gt; ，这几乎没有任何效果（但请参阅&lt;a href=&quot;perllocale#Not-within-the-scope-of-%22use-locale%22&quot;&gt;不在perllocale的使用区域设置范围内&lt;/a&gt;）。同样，如果要在嵌入式Perl中使用的语言环境与系统默认语言相同，也没有问题。但是，如果您已经设置并想使用不是系统默认语言环境的语言环境，则此方法将无效。从Perl v5.20开始，您可以告诉嵌入式Perl解释器该语言环境已经正确设置，并且可以跳过进行其自身的常规初始化。如果环境变量，则跳过 &lt;code&gt;PERL_SKIP_LOCALE_INIT&lt;/code&gt; 设置了PERL_SKIP_LOCALE_INIT（即使设置为0或 &lt;code&gt;&quot;&quot;&lt;/code&gt; ）。具有此功能的Perl将定义C预处理程序符号 &lt;code&gt;HAS_SKIP_LOCALE_INIT&lt;/code&gt; 。当遇到较早的Perl时，这允许必须与多个Perl版本一起使用的代码可以进行某种变通。</target>
        </trans-unit>
        <trans-unit id="04211e27763477afa3d80fad7386d1113f8c29cc" translate="yes" xml:space="preserve">
          <source>(See &lt;a href=&quot;pullparser&quot;&gt;Pod::Simple::PullParser&lt;/a&gt;)</source>
          <target state="translated">（请参阅&lt;a href=&quot;pullparser&quot;&gt;Pod :: Simple :: PullParser&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="4435bcd44112f5a4c17ae8f6e10e4a3691dca5ef" translate="yes" xml:space="preserve">
          <source>(Since 15th century or so.)</source>
          <target state="translated">（自15世纪左右开始。）</target>
        </trans-unit>
        <trans-unit id="b4d9f71359ebbc964034671e30ca00d3df8582af" translate="yes" xml:space="preserve">
          <source>(Since Perl 5.18.0) Set to &lt;code&gt;&quot;0&quot;&lt;/code&gt; or &lt;code&gt;&quot;NO&quot;&lt;/code&gt; then traversing keys will be repeatable from run to run for the same PERL_HASH_SEED. Insertion into a hash will not change the order, except to provide for more space in the hash. When combined with setting PERL_HASH_SEED this mode is as close to pre 5.18 behavior as you can get.</source>
          <target state="translated">（从Perl 5.18.0开始）设置为 &lt;code&gt;&quot;0&quot;&lt;/code&gt; 或 &lt;code&gt;&quot;NO&quot;&lt;/code&gt; 则对于相同的PERL_HASH_SEED，遍历遍历遍历键将是可重复的。插入到哈希中不会改变顺序，除非在哈希中提供更多空间。与设置PERL_HASH_SEED结合使用时，此模式将尽可能接近5.18之前的行为。</target>
        </trans-unit>
        <trans-unit id="d2d2fe6a723bb51fba068c1135525897877a8e21" translate="yes" xml:space="preserve">
          <source>(Since Perl 5.8.1) Test whether</source>
          <target state="translated">（自Perl 5.8.1开始）测试是否</target>
        </trans-unit>
        <trans-unit id="6850d529d135189d04f6ba7c3ffa3d4548be7012" translate="yes" xml:space="preserve">
          <source>(Since Perl 5.8.1, new semantics in Perl 5.18.0) Used to override the randomization of Perl's internal hash function. The value is expressed in hexadecimal, and may include a leading 0x. Truncated patterns are treated as though they are suffixed with sufficient 0's as required.</source>
          <target state="translated">（自Perl 5.8.1开始，Perl 5.18.0中的新语义）用于覆盖Perl内部哈希函数的随机化。该值以十六进制表示，并且可以包括前导0x。截断的模式将被视作根据需要以足够的0加上后缀。</target>
        </trans-unit>
        <trans-unit id="d4dd6a4d9045a95dea822358826542693a655004" translate="yes" xml:space="preserve">
          <source>(Since Perl 5.8.1.) Set to &lt;code&gt;&quot;1&quot;&lt;/code&gt; to display (to STDERR) information about the hash function, seed, and what type of key traversal randomization is in effect at the beginning of execution. This, combined with &lt;a href=&quot;#PERL_HASH_SEED&quot;&gt;PERL_HASH_SEED&lt;/a&gt; and &lt;a href=&quot;#PERL_PERTURB_KEYS&quot;&gt;PERL_PERTURB_KEYS&lt;/a&gt; is intended to aid in debugging nondeterministic behaviour caused by hash randomization.</source>
          <target state="translated">（自Perl 5.8.1开始。）设置为 &lt;code&gt;&quot;1&quot;&lt;/code&gt; 以显示（到STDERR）有关散列函数，种子以及在执行开始时有效的密钥遍历随机类型的信息。结合&lt;a href=&quot;#PERL_HASH_SEED&quot;&gt;PERL_HASH_SEED&lt;/a&gt;和&lt;a href=&quot;#PERL_PERTURB_KEYS&quot;&gt;PERL_PERTURB_KEYS&lt;/a&gt;可以帮助调试由哈希随机化引起的不确定行为。</target>
        </trans-unit>
        <trans-unit id="ab21d8a997435eb71526870278e4ae754b59af69" translate="yes" xml:space="preserve">
          <source>(Since Perl v5.8.0) This is the inverse of &lt;code&gt;utf8::native_to_unicode()&lt;/code&gt; , converting the other direction. Again, on ASCII platforms, this returns its input, but on EBCDIC platforms it will find the native platform code point, given any Unicode one.</source>
          <target state="translated">（自Perl v5.8.0起）这是 &lt;code&gt;utf8::native_to_unicode()&lt;/code&gt; 的反函数，它转换了另一个方向。同样，在ASCII平台上，这将返回其输入，但在EBCDIC平台上，给定任何Unicode，它将找到本机平台代码点。</target>
        </trans-unit>
        <trans-unit id="9ebd6e76ec162df6aa89bf8250ce7d3b6b762192" translate="yes" xml:space="preserve">
          <source>(Since Perl v5.8.0) This takes an unsigned integer (which represents the ordinal number of a character (or a code point) on the platform the program is being run on) and returns its Unicode equivalent value. Since ASCII platforms natively use the Unicode code points, this function returns its input on them. On EBCDIC platforms it converts from EBCDIC to Unicode.</source>
          <target state="translated">（从Perl v5.8.0开始）这将获取一个无符号整数（表示程序在其上运行的平台上的字符（或代码点）的序数），并返回其Unicode等效值。由于ASCII平台本机使用Unicode代码点，因此此函数在其上返回其输入。在EBCDIC平台上，它将从EBCDIC转换为Unicode。</target>
        </trans-unit>
        <trans-unit id="686aa4c3b90d79d336d163445d2df93abf9a03d8" translate="yes" xml:space="preserve">
          <source>(Solaris) or -Wl,-rpath</source>
          <target state="translated">（Solaris）或-Wl，-rpath</target>
        </trans-unit>
        <trans-unit id="627865a2c41acf779eb7c1e8aa654a6339214c81" translate="yes" xml:space="preserve">
          <source>(Some operating system distributions may ship the documentation in a different package; for instance, on Debian, you need to install the &lt;code&gt;perl-doc&lt;/code&gt; package.)</source>
          <target state="translated">（某些操作系统发行版可能会将文档放在不同的软件包中；例如，在Debian上，您需要安装 &lt;code&gt;perl-doc&lt;/code&gt; 软件包。）</target>
        </trans-unit>
        <trans-unit id="45a289765e403549d26dee90a83e5678b32695d7" translate="yes" xml:space="preserve">
          <source>(Sometimes spelled</source>
          <target state="translated">（有时是拼写的</target>
        </trans-unit>
        <trans-unit id="55d6e60f7d30af9ac2ff51cca36afde92d7e6b9d" translate="yes" xml:space="preserve">
          <source>(That's Latin for 'warnings'.)</source>
          <target state="translated">（这是拉丁语的&amp;ldquo;警告&amp;rdquo;。）</target>
        </trans-unit>
        <trans-unit id="9a5196ac2e2d06e81470d620bdd55bfb51d31a85" translate="yes" xml:space="preserve">
          <source>(That's all one line.) On my DEC Alpha running old 5.003_05, the incantation is a bit different:</source>
          <target state="translated">（全是一行。）在运行旧版本5.003_05的DEC Alpha上，咒语有些不同：</target>
        </trans-unit>
        <trans-unit id="a31a22e93d06d64611216361b6ec50e95eb2e83a" translate="yes" xml:space="preserve">
          <source>(That's currently the same as the following:)</source>
          <target state="translated">（当前与以下内容相同：）</target>
        </trans-unit>
        <trans-unit id="a818127754cf465cce438d8d1ac91ea89b761e67" translate="yes" xml:space="preserve">
          <source>(The &quot;Is&quot; is optional.)</source>
          <target state="translated">（&amp;ldquo; Is&amp;rdquo;是可选的。）</target>
        </trans-unit>
        <trans-unit id="5d3c7b6c512461eb6e8ea369d1cdd236b63c6e3b" translate="yes" xml:space="preserve">
          <source>(The -T is here to prevent '.' from being listed in @INC.) They should all have their own documentation installed and accessible via your system man(1) command. If you do not have a &lt;b&gt;find&lt;/b&gt; program, you can use the Perl &lt;b&gt;find2perl&lt;/b&gt; program instead, which generates Perl code as output you can run through perl. If you have a &lt;b&gt;man&lt;/b&gt; program but it doesn't find your modules, you'll have to fix your manpath. See &lt;a href=&quot;perl&quot;&gt;perl&lt;/a&gt; for details. If you have no system &lt;b&gt;man&lt;/b&gt; command, you might try the &lt;b&gt;perldoc&lt;/b&gt; program.</source>
          <target state="translated">（这里的-T是为了防止'。'在@INC中列出。）它们都应该安装自己的文档，并可以通过您的system man（1）命令进行访问。如果没有&lt;b&gt;find&lt;/b&gt;程序，则可以改用Perl &lt;b&gt;find2perl&lt;/b&gt;程序，该程序会生成Perl代码作为输出，您可以通过perl运行它。如果您有一个&lt;b&gt;man&lt;/b&gt;程序，但是找不到您的模块，则必须修复您的manpath。有关详细信息，请参见&lt;a href=&quot;perl&quot;&gt;perl&lt;/a&gt;。如果没有system &lt;b&gt;man&lt;/b&gt;命令，则可以尝试&lt;b&gt;perldoc&lt;/b&gt;程序。</target>
        </trans-unit>
        <trans-unit id="6c56b22e726e42ab07cb80338d6020076bf1402f" translate="yes" xml:space="preserve">
          <source>(The PlatformSDKDir might need to be set differently depending on which version you are using. Earlier versions installed into &quot;C:\Program Files\Microsoft SDK&quot;, while the latest versions install into version-specific locations such as &quot;C:\Program Files\Microsoft Platform SDK for Windows Server 2003 R2&quot;.)</source>
          <target state="translated">（根据所使用的版本，可能需要对PlatformSDKDir进行不同的设置。早期版本安装在&amp;ldquo; C：\ Program Files \ Microsoft SDK&amp;rdquo;中，而最新版本安装在特定于版本的位置，例如&amp;ldquo; C：\ Program Files \ Windows Server 2003 R2的Microsoft Platform SDK&amp;rdquo;。）</target>
        </trans-unit>
        <trans-unit id="e0d1d182df0efff18f3c4b3ee696c544779c1b65" translate="yes" xml:space="preserve">
          <source>(The Yao in Malawi?)</source>
          <target state="translated">（马拉维的姚明？）</target>
        </trans-unit>
        <trans-unit id="46fd0a21a0514730ee8dd0dce9c85d26b5a8396b" translate="yes" xml:space="preserve">
          <source>(The above documents supersede the collection of tricks that was formerly here in perlbot.)</source>
          <target state="translated">（以上文档取代了以前在perlbot中使用的所有技巧。）</target>
        </trans-unit>
        <trans-unit id="2d90a272ac545d8fb2fb65b0295acc24c14af7c1" translate="yes" xml:space="preserve">
          <source>(The above documents supersede the information that was formerly here in perlrepository.)</source>
          <target state="translated">（以上文档取代了以前在perlrepository中的信息。）</target>
        </trans-unit>
        <trans-unit id="99f2a233e4c798964e569888563b25720555e0bf" translate="yes" xml:space="preserve">
          <source>(The above documents supersede the tutorial that was formerly here in perlboot.)</source>
          <target state="translated">（以上文档取代了以前在perlboot中使用的教程。）</target>
        </trans-unit>
        <trans-unit id="ffa134634092fd33228ce058a5ecf5685892879a" translate="yes" xml:space="preserve">
          <source>(The above documents supersede the tutorial that was formerly here in perltooc.)</source>
          <target state="translated">（以上文档取代了以前在perltooc中使用的教程。）</target>
        </trans-unit>
        <trans-unit id="b8b48603f0c74c71b900d4a70be0c98f6b666085" translate="yes" xml:space="preserve">
          <source>(The above documents supersede the tutorial that was formerly here in perltoot.)</source>
          <target state="translated">（以上文档取代了以前在perltoot中使用的教程。）</target>
        </trans-unit>
        <trans-unit id="6c281b7ab089adf36f04b2a437ddf9ecf2800401" translate="yes" xml:space="preserve">
          <source>(The above were numbered only for concise reference below. It is not a requirement that these be passed as an actual list or array.)</source>
          <target state="translated">（上面的编号仅为了简洁参考，不要求将它们作为实际的列表或数组传递。）</target>
        </trans-unit>
        <trans-unit id="3c03be67d17d8a8bcdeda5d2a4ee5f01b74e7c60" translate="yes" xml:space="preserve">
          <source>(The clumsy construction of the template can be avoided - just read on!)</source>
          <target state="translated">（可以避免模板的笨拙构造，请继续阅读！）</target>
        </trans-unit>
        <trans-unit id="3719d4816b107705fe6b77df25c501df533b77b2" translate="yes" xml:space="preserve">
          <source>(The dlclose() function is also used by Solaris and some versions of Linux, and is a common choice when providing a &quot;wrapper&quot; on other mechanisms as is done in the OS/2 port.)</source>
          <target state="translated">（dlclose（）函数也由Solaris和Linux的某些版本使用，并且是在OS / 2端口中对其他机制提供&amp;ldquo;包装器&amp;rdquo;时的常见选择。）</target>
        </trans-unit>
        <trans-unit id="c51756c3454baa6c808057b69e36bc1ddf49b5cd" translate="yes" xml:space="preserve">
          <source>(The dlopen() function is also used by Solaris and some versions of Linux, and is a common choice when providing a &quot;wrapper&quot; on other mechanisms as is done in the OS/2 port.)</source>
          <target state="translated">（dlopen（）函数也由Solaris和Linux的某些版本使用，并且是在OS / 2端口中对其他机制提供&amp;ldquo;包装&amp;rdquo;时的常见选择。）</target>
        </trans-unit>
        <trans-unit id="e5b81b358edb613bfabb11ad57fbe83ee3c278d5" translate="yes" xml:space="preserve">
          <source>(The epoch was at 00:00 January 1, 1970 GMT.)</source>
          <target state="translated">（时期是格林尼治标准时间1970年1月1日00:00。）</target>
        </trans-unit>
        <trans-unit id="ddc748efe6e0366098cb313badf4a4144f645dbb" translate="yes" xml:space="preserve">
          <source>(The following is a comprehensive reference to open(): for a gentler introduction you may consider &lt;a href=&quot;../perlopentut&quot;&gt;perlopentut&lt;/a&gt;.)</source>
          <target state="translated">（以下内容是对open（）的全面参考：进行更温和的介绍，您可以考虑&lt;a href=&quot;../perlopentut&quot;&gt;perlopentut&lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="60da63d4ac98227f92f63c3e5cc4b7d4c01a3ac4" translate="yes" xml:space="preserve">
          <source>(The following is a comprehensive reference to open(): for a gentler introduction you may consider &lt;a href=&quot;perlopentut&quot;&gt;perlopentut&lt;/a&gt;.)</source>
          <target state="translated">（以下内容是对open（）的全面参考：进行更温和的介绍，您可以考虑&lt;a href=&quot;perlopentut&quot;&gt;perlopentut&lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="322a993a4a3f05f774083a52bcad3313b4b5636a" translate="yes" xml:space="preserve">
          <source>(The following section is borrowed directly from Tim Bunce's modules file, available at your nearest CPAN site.)</source>
          <target state="translated">（以下部分直接从您最近的CPAN站点上的Tim Bunce的modules文件中借用。）</target>
        </trans-unit>
        <trans-unit id="d3f429143d25c69a6917c8263dc5caaea3b147cc" translate="yes" xml:space="preserve">
          <source>(The low level &quot;unix&quot; layer may be replaced by a platform specific low level layer.)</source>
          <target state="translated">（低层&amp;ldquo; unix&amp;rdquo;层可以由平台特定的低层层代替。）</target>
        </trans-unit>
        <trans-unit id="bcd55cbdbab500567a14d4fb3999bcd145af54d6" translate="yes" xml:space="preserve">
          <source>(The my_perl is for threaded builds.) Just remember that every line, but the last one, should end with \n\</source>
          <target state="translated">（my_perl用于线程构建。）请记住，每行（但最后一行）应以\ n \结尾</target>
        </trans-unit>
        <trans-unit id="106619cccc96405763b2a52f9f0b9652d1b77415" translate="yes" xml:space="preserve">
          <source>(The only time that Perl considers a sequence of individual code points as a single logical character is in the &lt;code&gt;\X&lt;/code&gt; construct, already mentioned above. Therefore &quot;character&quot; in this discussion means a single Unicode code point.)</source>
          <target state="translated">（上面已经提到，Perl唯一一次将单个代码点的序列视为一个逻辑字符是在 &lt;code&gt;\X&lt;/code&gt; 构造中。因此，本次讨论中的&amp;ldquo;字符&amp;rdquo;表示单个Unicode代码点。）</target>
        </trans-unit>
        <trans-unit id="bead9ab0d2789e23ce7946c1d5b982dfb5f2f0b7" translate="yes" xml:space="preserve">
          <source>(The second line creates a scalar which has both a string value, and a numeric value.) This prints:</source>
          <target state="translated">（第二行创建一个标量，该标量既具有字符串值，又具有数字值。）将输出：</target>
        </trans-unit>
        <trans-unit id="dab919d3d01857133900354c7413bb583680fe89" translate="yes" xml:space="preserve">
          <source>(The way &lt;code&gt;&lt;a href=&quot;functions/study&quot;&gt;study&lt;/a&gt;&lt;/code&gt; works is this: a linked list of every character in the string to be searched is made, so we know, for example, where all the &lt;code&gt;'k'&lt;/code&gt; characters are. From each search string, the rarest character is selected, based on some static frequency tables constructed from some C programs and English text. Only those places that contain this &quot;rarest&quot; character are examined.)</source>
          <target state="translated">（ &lt;code&gt;&lt;a href=&quot;functions/study&quot;&gt;study&lt;/a&gt;&lt;/code&gt; 工作方式是这样的：创建要搜索的字符串中每个字符的链表，因此我们知道例如所有 &lt;code&gt;'k'&lt;/code&gt; 字符在哪里。从每个搜索字符串中选择最稀有的字符，基于一些由C程序和英文文本构成的静态频率表，仅检查包含该&amp;ldquo;稀有&amp;rdquo;字符的位置。）</target>
        </trans-unit>
        <trans-unit id="7ced848246a1f04fd36e4acde8058f5a24044623" translate="yes" xml:space="preserve">
          <source>(The way &lt;code&gt;&lt;a href=&quot;study&quot;&gt;study&lt;/a&gt;&lt;/code&gt; works is this: a linked list of every character in the string to be searched is made, so we know, for example, where all the &lt;code&gt;'k'&lt;/code&gt; characters are. From each search string, the rarest character is selected, based on some static frequency tables constructed from some C programs and English text. Only those places that contain this &quot;rarest&quot; character are examined.)</source>
          <target state="translated">（ &lt;code&gt;&lt;a href=&quot;study&quot;&gt;study&lt;/a&gt;&lt;/code&gt; 工作方式是这样的：创建要搜索的字符串中每个字符的链表，因此我们知道例如所有 &lt;code&gt;'k'&lt;/code&gt; 字符在哪里。从每个搜索字符串中选择最稀有的字符，基于一些由C程序和英文文本构成的静态频率表，仅检查包含该&amp;ldquo;稀有&amp;rdquo;字符的位置。）</target>
        </trans-unit>
        <trans-unit id="5b09b65f3d7615d9c8998b10512e61c03475522f" translate="yes" xml:space="preserve">
          <source>(There are other regexp modifiers that are available, such as &lt;code&gt;//o&lt;/code&gt; , but their specialized uses are beyond the scope of this introduction. )</source>
          <target state="translated">（还有其他可用的regexp修饰符，例如 &lt;code&gt;//o&lt;/code&gt; ，但它们的特殊用法不在本介绍的范围之内。）</target>
        </trans-unit>
        <trans-unit id="ef674054c4d10d9749658409ad9f36c9cb9aa7a4" translate="yes" xml:space="preserve">
          <source>(There is an expanded internal form that you may see in debug output: &lt;code&gt;\N{U+&lt;i&gt;code point&lt;/i&gt;.&lt;i&gt;code point&lt;/i&gt;...}&lt;/code&gt;. The &lt;code&gt;...&lt;/code&gt; means any number of these</source>
          <target state="translated">（有一个膨胀的内部形式，你可能在调试输出看到： &lt;code&gt;\N{U+&lt;i&gt;code point&lt;/i&gt;.&lt;i&gt;code point&lt;/i&gt;...}&lt;/code&gt; 。该 &lt;code&gt;...&lt;/code&gt; 是指任何数量的这些</target>
        </trans-unit>
        <trans-unit id="0cef4c08315032515ea7f0175f7b08a2c8696b06" translate="yes" xml:space="preserve">
          <source>(There is no entry in the Latin1 column for &lt;code&gt;isascii&lt;/code&gt; even though there is an &lt;code&gt;isASCII_L1&lt;/code&gt; , which is identical to &lt;code&gt;isASCII&lt;/code&gt; ; the latter name is clearer. There is no entry in the Latin1 column for &lt;code&gt;toupper&lt;/code&gt; because the result can be non-Latin1. You have to use &lt;code&gt;toUPPER_uni&lt;/code&gt; , as described in &lt;a href=&quot;perlapi#Character-case-changing&quot;&gt;Character case changing in perlapi&lt;/a&gt;.)</source>
          <target state="translated">（即使存在 &lt;code&gt;isASCII_L1&lt;/code&gt; ，它也与 &lt;code&gt;isASCII&lt;/code&gt; 相同，但在 &lt;code&gt;isascii&lt;/code&gt; 的Latin1列中没有条目；后者名称更清晰。在laupin1列中没有用于 &lt;code&gt;toupper&lt;/code&gt; 的条目，因为结果可能是非Latin1。您必须使用 &lt;code&gt;toUPPER_uni&lt;/code&gt; ，如perlapi中&lt;a href=&quot;perlapi#Character-case-changing&quot;&gt;字符大小写更改中所述&lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="1ab73e0519c8fdd4854befdfbc4691ec376d1901" translate="yes" xml:space="preserve">
          <source>(These instructions assume the host is 32-bit Windows. If you're on 64-bit Windows then change &quot;C:\Program Files&quot; to &quot;C:\Program Files (x86)&quot; throughout.)</source>
          <target state="translated">（这些说明假定主机是32位Windows。如果您使用的是64位Windows，则将&amp;ldquo; C：\ Program Files&amp;rdquo;更改为&amp;ldquo; C：\ Program Files（x86）&amp;rdquo;。）</target>
        </trans-unit>
        <trans-unit id="0284748ff040695be7f487fe1427820b8ae1d9fc" translate="yes" xml:space="preserve">
          <source>(This is an advanced feature. Skip this section on first reading.)</source>
          <target state="translated">（这是一项高级功能。初读时请跳过本节。）</target>
        </trans-unit>
        <trans-unit id="d1f86c64c0fb13e1165ca2bb3cf75fd21929ca61" translate="yes" xml:space="preserve">
          <source>(This is meant to be somewhat like the AUTOLOAD mechanism in Perl's function call system -- or, looked at another way, like the &lt;a href=&quot;../autoloader&quot;&gt;AutoLoader&lt;/a&gt; module.)</source>
          <target state="translated">（这在某种程度上类似于Perl函数调用系统中的AUTOLOAD机制，或者换句话说，如&lt;a href=&quot;../autoloader&quot;&gt;AutoLoader&lt;/a&gt;模块。）</target>
        </trans-unit>
        <trans-unit id="cdd641f1539ef2a67db69239bd635f29eb3affaa" translate="yes" xml:space="preserve">
          <source>(This is now used as a subroutine by &lt;code&gt;sv_magic&lt;/code&gt; .)</source>
          <target state="translated">（现在 &lt;code&gt;sv_magic&lt;/code&gt; 将其用作子例程。）</target>
        </trans-unit>
        <trans-unit id="450e46399e1dfa03e74a37b76c191403f7e21d97" translate="yes" xml:space="preserve">
          <source>(This is particularly useful for more complicated data).</source>
          <target state="translated">（这对于更复杂的数据特别有用）。</target>
        </trans-unit>
        <trans-unit id="c0bbb992fa49c3682d5cfd26de0a6cdfb574f0e9" translate="yes" xml:space="preserve">
          <source>(This is quite esoteric interface, mainly used to implement numerical algorithms.)</source>
          <target state="translated">（这是一个非常深奥的接口，主要用于实现数值算法。）</target>
        </trans-unit>
        <trans-unit id="b29c9a7ca2e6d2f17cba849bd676844ed769bc13" translate="yes" xml:space="preserve">
          <source>(This is the complete XSUB code for 4 Perl functions!) Four generated Perl function share names with corresponding C functions.</source>
          <target state="translated">（这是4个Perl函数的完整XSUB代码！）四个生成的Perl函数与相应的C函数共享名称。</target>
        </trans-unit>
        <trans-unit id="318b9e91985ebdb387e65919c8ceba9d2529e396" translate="yes" xml:space="preserve">
          <source>(This is the same thing as &lt;code&gt;[ab]&lt;/code&gt; .) You could also have said the equivalent:</source>
          <target state="translated">（这与 &lt;code&gt;[ab]&lt;/code&gt; 是同一件事。）您也可以说等效项：</target>
        </trans-unit>
        <trans-unit id="1e6c29bd9b75523af99513437a45caa1e768cad7" translate="yes" xml:space="preserve">
          <source>(This method tolerates &quot;AUTHORS&quot; instead of &quot;AUTHOR&quot; too.)</source>
          <target state="translated">（此方法也允许&amp;ldquo; AUTHORS&amp;rdquo;而不是&amp;ldquo; AUTHOR&amp;rdquo;。）</target>
        </trans-unit>
        <trans-unit id="78c00b9468e9dba0550ff01127712ff12d28b6f9" translate="yes" xml:space="preserve">
          <source>(This module's core code started out as a routine in Locale::Maketext; but I moved it here once I realized it was more generally useful.)</source>
          <target state="translated">（此模块的核心代码最初是Locale :: Maketext中的例程；但是，一旦我意识到它更有用，就将其移至此处。）</target>
        </trans-unit>
        <trans-unit id="1a99ed7428d19447b55d198902918f9e8b4e92a8" translate="yes" xml:space="preserve">
          <source>(This question has nothing to do with the web. See a different FAQ for that.)</source>
          <target state="translated">（此问题与网络无关。请参阅其他常见问题解答。）</target>
        </trans-unit>
        <trans-unit id="304b79906abb30b9dbd694d6901d36565f2ab06d" translate="yes" xml:space="preserve">
          <source>(This start line assumes you have the &lt;b&gt;env&lt;/b&gt; program. You can also put directly the path to your perl executable, like in &lt;code&gt;#!/usr/bin/perl&lt;/code&gt; ).</source>
          <target state="translated">（此开始行假定您具有&lt;b&gt;env&lt;/b&gt;程序。您也可以直接将路径放置到您的perl可执行文件中，例如 &lt;code&gt;#!/usr/bin/perl&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="c152a09f07eb9dbb0b701130511a2596b2120e15" translate="yes" xml:space="preserve">
          <source>(This will show as &quot;0.01&quot; in the Symbian Installer.)</source>
          <target state="translated">（这将在Symbian安装程序中显示为&amp;ldquo; 0.01&amp;rdquo;。）</target>
        </trans-unit>
        <trans-unit id="bb4dfbdc156e8445e31beb38de229226c0082c90" translate="yes" xml:space="preserve">
          <source>(This works on machines only for which the device number is negative under NFS.)</source>
          <target state="translated">（这仅适用于在NFS下设备号为负的机器。）</target>
        </trans-unit>
        <trans-unit id="13dfc15518eb94aba08b31ffe0fd3f4ae70409fd" translate="yes" xml:space="preserve">
          <source>(Those options are explained in &lt;a href=&quot;../man&quot;&gt;Pod::Man&lt;/a&gt;.)</source>
          <target state="translated">（这些选项在&lt;a href=&quot;../man&quot;&gt;Pod :: Man中&lt;/a&gt;进行了说明。）</target>
        </trans-unit>
        <trans-unit id="b61a3df860851afb8d19a9abbcf256db93652f70" translate="yes" xml:space="preserve">
          <source>(Thread comparison is based on thread IDs.)</source>
          <target state="translated">（线程比较基于线程ID。）</target>
        </trans-unit>
        <trans-unit id="17f7280a5bad35910c7f0b307524105ba8ca95ba" translate="yes" xml:space="preserve">
          <source>(Typically in Arabic script) (Historical)</source>
          <target state="translated">（通常为阿拉伯文字）（历史）</target>
        </trans-unit>
        <trans-unit id="1283ec6ec06063d7e56b0b05c2d76ce925324026" translate="yes" xml:space="preserve">
          <source>(Typically in Roman script)</source>
          <target state="translated">（通常是罗马文字）</target>
        </trans-unit>
        <trans-unit id="c7d55cf94c18a95511562bd57f04605173efed9a" translate="yes" xml:space="preserve">
          <source>(Unicode is also creating &lt;code&gt;CLDR&lt;/code&gt; , the &quot;Common Locale Data Repository&quot;, &lt;a href=&quot;http://cldr.unicode.org/&quot;&gt;http://cldr.unicode.org/&lt;/a&gt; which includes more types of information than are available in the POSIX locale system. At the time of this writing, there was no CPAN module that provides access to this XML-encoded data. However, many of its locales have the POSIX-only data extracted, and are available as UTF-8 locales at &lt;a href=&quot;http://unicode.org/Public/cldr/latest/&quot;&gt;http://unicode.org/Public/cldr/latest/&lt;/a&gt;.)</source>
          <target state="translated">（Unicode还创建了 &lt;code&gt;CLDR&lt;/code&gt; ，即&amp;ldquo;通用语言环境数据存储库&amp;rdquo;，&lt;a href=&quot;http://cldr.unicode.org/&quot;&gt;http：&lt;/a&gt;//cldr.unicode.org/，其中包含的信息类型比POSIX语言环境系统中提供的信息类型更多。在撰写本文时，还没有提供访问此XML编码数据的CPAN模块，但是，其许多语言环境都提取了仅POSIX的数据，并且可以在&lt;a href=&quot;http://unicode.org/Public/cldr/latest/&quot;&gt;http://unicode.org/Public/cldr/latest/中&lt;/a&gt;作为UTF-8语言环境使用。 ）</target>
        </trans-unit>
        <trans-unit id="0e08710827ea0d15fd7e296378d20798650f0348" translate="yes" xml:space="preserve">
          <source>(Usually the layers are identical on either side of a filehandle but for example with sockets there may be differences, or if you have been using the &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; pragma.)</source>
          <target state="translated">（通常，文件句柄的每一侧的层都是相同的，但是例如与套接字可能会有所不同，或者如果您一直在使用 &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; 编译指示。）</target>
        </trans-unit>
        <trans-unit id="1b63c10d2b8ed03b7bef283f8b978c67f239a105" translate="yes" xml:space="preserve">
          <source>(W ambiguous) A subroutine you have declared has the same name as a Perl keyword, and you have used the name without qualification for calling one or the other. Perl decided to call the builtin because the subroutine is not imported.</source>
          <target state="translated">（模棱两可）您声明的子例程与Perl关键字具有相同的名称，并且您使用该名称无条件调用一个或另一个。Perl决定调用内置函数，因为未导入子例程。</target>
        </trans-unit>
        <trans-unit id="ec602e75e96a29c94e711379b8e06128d6720d2b" translate="yes" xml:space="preserve">
          <source>(W ambiguous) You said something like '@foo' in a double-quoted string but there was no array &lt;code&gt;@foo&lt;/code&gt; in scope at the time. If you wanted a literal @foo, then write it as \@foo; otherwise find out what happened to the array you apparently lost track of.</source>
          <target state="translated">（模棱两可）您在双引号字符串中说了类似&amp;ldquo; @foo&amp;rdquo;的内容，但当时范围内没有数组 &lt;code&gt;@foo&lt;/code&gt; 。如果您想要一个文字@foo，则将其写为\ @foo;。否则，找出您显然无法追踪的阵列发生了什么。</target>
        </trans-unit>
        <trans-unit id="079495cf90b2c60d4ebdf405dac80f71d10905d4" translate="yes" xml:space="preserve">
          <source>(W ambiguous) You said something like &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/$\/&lt;/a&gt;&lt;/code&gt; in a regex. The regex &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/foo$\s+bar/m&lt;/a&gt;&lt;/code&gt; translates to: match the word 'foo', the output record separator (see &lt;a href=&quot;perlvar#%24%5c&quot;&gt;$\ in perlvar&lt;/a&gt;) and the letter 's' (one time or more) followed by the word 'bar'.</source>
          <target state="translated">（模棱两可）您在正则表达式中说了类似 &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/$\/&lt;/a&gt;&lt;/code&gt; 的内容。正则表达式 &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/foo$\s+bar/m&lt;/a&gt;&lt;/code&gt; 转换为：匹配单词'foo'，输出记录分隔符（请参阅&lt;a href=&quot;perlvar#%24%5c&quot;&gt;perlvar中的$ \&lt;/a&gt;）和字母's'（一次或多次），后跟单词'酒吧'。</target>
        </trans-unit>
        <trans-unit id="4b8760477957c4a179ee08cd792db91cf0a281a0" translate="yes" xml:space="preserve">
          <source>(W ambiguous) You wrote something like &lt;code&gt;${foo[2]}&lt;/code&gt; (where foo represents the name of a Perl keyword), which might be looking for element number 2 of the array named &lt;code&gt;@foo&lt;/code&gt; , in which case please write &lt;code&gt;$foo[2]&lt;/code&gt; , or you might have meant to pass an anonymous arrayref to the function named foo, and then do a scalar deref on the value it returns. If you meant that, write &lt;code&gt;${foo([2])}&lt;/code&gt; .</source>
          <target state="translated">（模棱两可）您编写了类似 &lt;code&gt;${foo[2]}&lt;/code&gt; （其中foo表示Perl关键字的名称）的内容，它可能正在查找名为 &lt;code&gt;@foo&lt;/code&gt; 的数组的元素编号2 ，在这种情况下，请写 &lt;code&gt;$foo[2]&lt;/code&gt; ，或者您可能打算将匿名arrayref传递给名为foo的函数，然后对其返回的值进行标量解引用。如果是那样，则写 &lt;code&gt;${foo([2])}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="084dca53c4497f5660abbcf6441688c678ff8a7d" translate="yes" xml:space="preserve">
          <source>(W ambiguous) You wrote something like &lt;code&gt;@{foo}&lt;/code&gt; , which might be asking for the variable &lt;code&gt;@foo&lt;/code&gt; , or it might be calling a function named foo, and dereferencing it as an array reference. If you wanted the variable, you can just write &lt;code&gt;@foo&lt;/code&gt; . If you wanted to call the function, write &lt;code&gt;@{foo()}&lt;/code&gt; ... or you could just not have a variable and a function with the same name, and save yourself a lot of trouble.</source>
          <target state="translated">（模棱两可）您编写了类似 &lt;code&gt;@{foo}&lt;/code&gt; ，它可能要求变量 &lt;code&gt;@foo&lt;/code&gt; ，或者它可能正在调用名为foo的函数，并将其作为数组引用取消引用。如果需要该变量，则只需编写 &lt;code&gt;@foo&lt;/code&gt; 即可。如果您想调用该函数，请编写 &lt;code&gt;@{foo()}&lt;/code&gt; ...否则您可能就没有一个变量和一个具有相同名称的函数，从而省去了很多麻烦。</target>
        </trans-unit>
        <trans-unit id="14fd4d715f9a8018aaf51fde0ef01572c3a9a9b2" translate="yes" xml:space="preserve">
          <source>(W bareword) The compiler found a bareword where it expected a conditional, which often indicates that an || or &amp;amp;&amp;amp; was parsed as part of the last argument of the previous construct, for example:</source>
          <target state="translated">（W裸字）编译器在期望条件的地方找到一个裸字，这通常表示||。或&amp;amp;&amp;amp;被解析为先前构造的最后一个参数的一部分，例如：</target>
        </trans-unit>
        <trans-unit id="0a75679f869cf803abbe9139fba47c479e66224b" translate="yes" xml:space="preserve">
          <source>(W bareword) You used a qualified bareword of the form &lt;code&gt;Foo::&lt;/code&gt; , but the compiler saw no other uses of that namespace before that point. Perhaps you need to predeclare a package?</source>
          <target state="translated">（W裸字）您使用了 &lt;code&gt;Foo::&lt;/code&gt; 形式的合格裸字，但是在此之前，编译器看不到该命名空间的其他用途。也许您需要预先声明一个包裹？</target>
        </trans-unit>
        <trans-unit id="53e1259f36617bd490deac8aa3d40862151e6ec1" translate="yes" xml:space="preserve">
          <source>(W closed) The filehandle you're attempting to flock() got itself closed some time before now. Check your control flow. flock() operates on filehandles. Are you attempting to call flock() on a dirhandle by the same name?</source>
          <target state="translated">（W已关闭）您尝试flock（）的文件句柄在此之前已关闭。检查您的控制流程。flock（）在文件句柄上运行。您是否正在尝试用相同的名称在目录句柄上调用flock（）？</target>
        </trans-unit>
        <trans-unit id="4d43ddfded45ebfd41dbbaee3290b1b238857a1d" translate="yes" xml:space="preserve">
          <source>(W closed) The filehandle you're printing on got itself closed sometime before now. Check your control flow.</source>
          <target state="translated">（W关闭）您正在打印的文件句柄在某个时候之前已经关闭。检查您的控制流程。</target>
        </trans-unit>
        <trans-unit id="6a4b270026fc2a66bf1429d325a9c5f91b820999" translate="yes" xml:space="preserve">
          <source>(W closed) The filehandle you're reading from got itself closed sometime before now. Check your control flow.</source>
          <target state="translated">（W已关闭）您正在读取的文件句柄在某个时候之前已自身关闭。检查您的控制流程。</target>
        </trans-unit>
        <trans-unit id="9024fe0f51607b2265a19aadf35a4c761bd88088" translate="yes" xml:space="preserve">
          <source>(W closed) The filehandle you're writing to got itself closed sometime before now. Check your control flow.</source>
          <target state="translated">（W已关闭）您正在编写的文件句柄在现在之前的某个时间已关闭。检查您的控制流程。</target>
        </trans-unit>
        <trans-unit id="cc80a0a86bde9f9811deb2b4047a08d7c517bb7e" translate="yes" xml:space="preserve">
          <source>(W closed) The socket you're sending to got itself closed sometime before now. Check your control flow.</source>
          <target state="translated">（W已关闭）您要发送的套接字在现在之前的某个时间已关闭。检查您的控制流程。</target>
        </trans-unit>
        <trans-unit id="7aec4135b79438ad14c3a964c4630183be1a1b09" translate="yes" xml:space="preserve">
          <source>(W closed) You tried to do a bind on a closed socket. Did you forget to check the return value of your socket() call? See &lt;a href=&quot;functions/bind&quot;&gt;bind&lt;/a&gt;.</source>
          <target state="translated">（W封闭）您试图在封闭的套接字上进行绑定。您是否忘记检查socket（）调用的返回值？参见&lt;a href=&quot;functions/bind&quot;&gt;bind&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a483bc728ce89a356e49e93e25f177a39d0d0bd2" translate="yes" xml:space="preserve">
          <source>(W closed) You tried to do a connect on a closed socket. Did you forget to check the return value of your socket() call? See &lt;a href=&quot;functions/connect&quot;&gt;connect&lt;/a&gt;.</source>
          <target state="translated">（W闭合）您试图在闭合的插座上进行连接。您是否忘记检查socket（）调用的返回值？请参阅&lt;a href=&quot;functions/connect&quot;&gt;连接&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="34608223004dc77e87fe9381938e96c7cf955ac4" translate="yes" xml:space="preserve">
          <source>(W closed) You tried to do a listen on a closed socket. Did you forget to check the return value of your socket() call? See &lt;a href=&quot;functions/listen&quot;&gt;listen&lt;/a&gt;.</source>
          <target state="translated">（W封闭）您试图在封闭的套接字上进行监听。您是否忘记检查socket（）调用的返回值？看&lt;a href=&quot;functions/listen&quot;&gt;听&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="71ee5dae4e8472748b97847b021b00dd16e56c28" translate="yes" xml:space="preserve">
          <source>(W closed) You tried to do a shutdown on a closed socket. Seems a bit superfluous.</source>
          <target state="translated">（W已关闭）您试图在已关闭的套接字上执行关闭操作。似乎有点多余。</target>
        </trans-unit>
        <trans-unit id="b0a054724012ff7380cc3bd3fbabe4c0f3adab15" translate="yes" xml:space="preserve">
          <source>(W closed) You tried to do an accept on a closed socket. Did you forget to check the return value of your socket() call? See &lt;a href=&quot;functions/accept&quot;&gt;accept&lt;/a&gt;.</source>
          <target state="translated">（W封闭）您试图在封闭的套接字上进行接受。您是否忘记检查socket（）调用的返回值？请参阅&lt;a href=&quot;functions/accept&quot;&gt;接受&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="686780402dcd5189e3de84bbbe7e8c3675a26cd5" translate="yes" xml:space="preserve">
          <source>(W closed) You tried to get a socket option on a closed socket. Did you forget to check the return value of your socket() call? See &lt;a href=&quot;functions/getsockopt&quot;&gt;getsockopt&lt;/a&gt;.</source>
          <target state="translated">（W已关闭）您试图在已关闭的套接字上获取套接字选项。您是否忘记检查socket（）调用的返回值？参见&lt;a href=&quot;functions/getsockopt&quot;&gt;getsockopt&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b5f3fe4ba1c0a3fcc1fd82dbadf8c0a68a06899b" translate="yes" xml:space="preserve">
          <source>(W closed) You tried to get a socket or peer socket name on a closed socket. Did you forget to check the return value of your socket() call?</source>
          <target state="translated">（W已关闭）您试图在已关闭的套接字上获取套接字或对等套接字的名称。您是否忘记检查socket（）调用的返回值？</target>
        </trans-unit>
        <trans-unit id="9dd893f13813e0686f88d28dcaa995ea58eff6c6" translate="yes" xml:space="preserve">
          <source>(W closed) You tried to read from a closed filehandle.</source>
          <target state="translated">（W已关闭）您尝试从关闭的文件句柄读取。</target>
        </trans-unit>
        <trans-unit id="b1bc9bc2878143204e9bd4f8c5b8ef8fc1a1d196" translate="yes" xml:space="preserve">
          <source>(W closed) You tried to set a socket option on a closed socket. Did you forget to check the return value of your socket() call? See &lt;a href=&quot;functions/setsockopt&quot;&gt;setsockopt&lt;/a&gt;.</source>
          <target state="translated">（W已关闭）您试图在已关闭的套接字上设置套接字选项。您是否忘记检查socket（）调用的返回值？请参阅&lt;a href=&quot;functions/setsockopt&quot;&gt;setsockopt&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6691ea148e323c92640a7e1d8e12d6db9b140e15" translate="yes" xml:space="preserve">
          <source>(W closure) An inner (nested)</source>
          <target state="translated">（W闭合）内部（嵌套）</target>
        </trans-unit>
        <trans-unit id="ac28de0cbad4c4dfc31aa274d0d0826540c4608a" translate="yes" xml:space="preserve">
          <source>(W closure) During compilation, an inner named subroutine or eval is attempting to capture an outer lexical subroutine that is not currently available. This can happen for one of two reasons. First, the lexical subroutine may be declared in an outer anonymous subroutine that has not yet been created. (Remember that named subs are created at compile time, while anonymous subs are created at run-time.) For example,</source>
          <target state="translated">（W闭合）在编译期间，内部命名子例程或eval试图捕获当前不可用的外部词汇子例程。发生这种情况有两个原因之一。首先，可以在尚未创建的外部匿名子例程中声明词汇子例程。（请记住，命名子是在编译时创建的，而匿名子是在运行时创建的。）例如，</target>
        </trans-unit>
        <trans-unit id="65c019298a1444d38d91fcf17700dfd268f80742" translate="yes" xml:space="preserve">
          <source>(W closure) During compilation, an inner named subroutine or eval is attempting to capture an outer lexical that is not currently available. This can happen for one of two reasons. First, the outer lexical may be declared in an outer anonymous subroutine that has not yet been created. (Remember that named subs are created at compile time, while anonymous subs are created at run-time.) For example,</source>
          <target state="translated">（W闭合）在编译期间，内部命名子例程或eval试图捕获当前不可用的外部词汇。发生这种情况有两个原因之一。首先，可以在尚未创建的外部匿名子例程中声明外部词汇。（请记住，命名子是在编译时创建的，而匿名子是在运行时创建的。）例如，</target>
        </trans-unit>
        <trans-unit id="f49f3db25d97d6915960909beefeac21238b6f2d" translate="yes" xml:space="preserve">
          <source>(W digit) In parsing an octal numeric constant, a character was unexpectedly encountered that isn't octal. The resulting value is as indicated.</source>
          <target state="translated">（W位）在解析八进制数字常量时，意外遇到了非八进制字符。结果值如所示。</target>
        </trans-unit>
        <trans-unit id="5e57358e7c1ec969e817e54f1e65d4d60ed6b951" translate="yes" xml:space="preserve">
          <source>(W digit) You may have tried to use a character other than 0 - 9 or A - F, a - f in a hexadecimal number. Interpretation of the hexadecimal number stopped before the illegal character.</source>
          <target state="translated">（W位）您可能尝试使用十六进制数字中的0-9或A-F，a-f以外的字符。十六进制数字的解释在非法字符之前停止。</target>
        </trans-unit>
        <trans-unit id="00a4e0b3bbab633922e651c73c2306c40de05654" translate="yes" xml:space="preserve">
          <source>(W digit) You may have tried to use a digit other than 0 or 1 in a binary number. Interpretation of the binary number stopped before the offending digit.</source>
          <target state="translated">（W位）您可能试图在二进制数字中使用0或1以外的数字。在有问题的数字之前停止解释二进制数字。</target>
        </trans-unit>
        <trans-unit id="84e6efe8b571226f1c56d898f3595c47df2fa3d9" translate="yes" xml:space="preserve">
          <source>(W digit) You may have tried to use an 8 or 9 in an octal number. Interpretation of the octal number stopped before the 8 or 9.</source>
          <target state="translated">（W位）您可能试图在八进制数字中使用8或9。八进制数字的解释在8或9之前停止。</target>
        </trans-unit>
        <trans-unit id="9fb9a032a154ac7b59a268710cf1949bc22fb256" translate="yes" xml:space="preserve">
          <source>(W exec) A system(), exec(), or piped open call could not execute the named program for the indicated reason. Typical reasons include: the permissions were wrong on the file, the file wasn't found in &lt;code&gt;$ENV{PATH}&lt;/code&gt; , the executable in question was compiled for another architecture, or the #! line in a script points to an interpreter that can't be run for similar reasons. (Or maybe your system doesn't support #! at all.)</source>
          <target state="translated">（W exec）由于指示的原因，system（），exec（）或管道打开调用无法执行指定的程序。典型的原因包括：文件权限错误，在 &lt;code&gt;$ENV{PATH}&lt;/code&gt; 找不到文件，有问题的可执行文件是为另一种体系结构编译的，或者是＃！脚本中的一行指向由于类似原因而无法运行的解释器。（或者您的系统根本不支持＃!。）</target>
        </trans-unit>
        <trans-unit id="40cf81f6b21e33cf0de9e73eab5064b147112369" translate="yes" xml:space="preserve">
          <source>(W exec) A warning peculiar to VMS. Waitpid() was asked to wait for a process which isn't a subprocess of the current process. While this is fine from VMS' perspective, it's probably not what you intended.</source>
          <target state="translated">（W执行）VMS特有的警告。Waitpid（）被要求等待一个不是当前进程的子进程的进程。从VMS的角度来看这很好，但这可能不是您想要的。</target>
        </trans-unit>
        <trans-unit id="0ee5ddf7eeab37551318e6033433b97f7d5d48d1" translate="yes" xml:space="preserve">
          <source>(W exec) You did an exec() with some statement after it other than a die(). This is almost always an error, because exec() never returns unless there was a failure. You probably wanted to use system() instead, which does return. To suppress this warning, put the exec() in a block by itself.</source>
          <target state="translated">（W exec）您执行了exec（），但之后执行了一条非die（）语句。这几乎总是一个错误，因为exec（）除非失败，否则从不返回。您可能想使用system（）代替，它会返回。为了消除此警告，请将exec（）单独放在一个块中。</target>
        </trans-unit>
        <trans-unit id="278e1a884eb3739698a7e8956cfbb36c8f5f87f4" translate="yes" xml:space="preserve">
          <source>(W exiting) You are exiting a format by unconventional means, such as a goto, or a loop control statement.</source>
          <target state="translated">（正在退出）正在通过非常规方式（例如goto或循环控制语句）退出格式。</target>
        </trans-unit>
        <trans-unit id="67609a2a97401f2b99b78611043cd7f013a46fee" translate="yes" xml:space="preserve">
          <source>(W exiting) You are exiting a rather special block construct (like a sort block or subroutine) by unconventional means, such as a goto, or a loop control statement. See &lt;a href=&quot;functions/sort&quot;&gt;sort&lt;/a&gt;.</source>
          <target state="translated">（W退出）您正在通过非常规方式（例如goto或循环控制语句）退出一个相当特殊的块构造（如sort块或子例程）。参见&lt;a href=&quot;functions/sort&quot;&gt;sort&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="423b0191e4cbf769af53341d336458806707caeb" translate="yes" xml:space="preserve">
          <source>(W exiting) You are exiting a subroutine by unconventional means, such as a goto, or a loop control statement.</source>
          <target state="translated">（W退出）您正在通过非常规方式（例如goto或循环控制语句）退出子例程。</target>
        </trans-unit>
        <trans-unit id="577ddf9c905e4347f8a9edb4c94bb3d05b393883" translate="yes" xml:space="preserve">
          <source>(W exiting) You are exiting a substitution by unconventional means, such as a return, a goto, or a loop control statement.</source>
          <target state="translated">（W退出）您正在通过非常规方式（例如return，goto或循环控制语句）退出替换。</target>
        </trans-unit>
        <trans-unit id="635b5ef261a420bb3046d7f8e4b7a552abb9ebd2" translate="yes" xml:space="preserve">
          <source>(W exiting) You are exiting an eval by unconventional means, such as a goto, or a loop control statement.</source>
          <target state="translated">（W退出）您正在通过非常规方式（例如goto或循环控制语句）退出评估。</target>
        </trans-unit>
        <trans-unit id="61f27ff7875edb61784c966ef6d387cd6a2988db" translate="yes" xml:space="preserve">
          <source>(W illegalproto) A character follows % or @ in a prototype. This is useless, since % and @ gobble the rest of the subroutine arguments.</source>
          <target state="translated">（W invalidproto）原型中的字符后跟％或@。这是没有用的，因为％和@吞噬了其余子例程参数。</target>
        </trans-unit>
        <trans-unit id="c9ffd9aa561f3b86a313e40b450bfafd500921a5" translate="yes" xml:space="preserve">
          <source>(W illegalproto) A grouping was started with &lt;code&gt;[&lt;/code&gt; but never closed with &lt;code&gt;]&lt;/code&gt;.</source>
          <target state="translated">（W invalidproto）分组从 &lt;code&gt;[&lt;/code&gt; 开始，但从未以 &lt;code&gt;]&lt;/code&gt; 结尾。</target>
        </trans-unit>
        <trans-unit id="6112a30e9d70cd7305832f9bcd92076f9f034086" translate="yes" xml:space="preserve">
          <source>(W illegalproto) An illegal character was found in a prototype declaration. Legal characters in prototypes are $, @, %, *, ;, [, ], &amp;amp;, \, and +. Perhaps you were trying to write a subroutine signature but didn't enable that feature first (&lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'signatures'&lt;/code&gt; ), so your signature was instead interpreted as a bad prototype.</source>
          <target state="translated">（W invalidproto）在原型声明中发现一个非法字符。原型中的合法字符为$，@，％，*，;，[，]，＆，\和+。也许您试图编写子例程签名，但没有先启用该功能（ &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'signatures'&lt;/code&gt; ），所以您的签名被解释为错误的原型。</target>
        </trans-unit>
        <trans-unit id="1db9799c8c1e3509096b870feae3fbef0c02c544" translate="yes" xml:space="preserve">
          <source>(W illegalproto) An illegal character was found in a prototype declaration. The '_' in a prototype must be followed by a ';', indicating the rest of the parameters are optional, or one of '@' or '%', since those two will accept 0 or more final parameters.</source>
          <target state="translated">（W invalidproto）在原型声明中发现一个非法字符。原型中的&amp;ldquo; _&amp;rdquo;后必须跟一个&amp;ldquo;;&amp;rdquo;，表示其余参数是可选的，或者是&amp;ldquo; @&amp;rdquo;或&amp;ldquo;％&amp;rdquo;之一，因为这两个参数将接受0个或多个最终参数。</target>
        </trans-unit>
        <trans-unit id="c7fd43abca207918c5fc4cdbdfec0cb27e79feb6" translate="yes" xml:space="preserve">
          <source>(W imprecision) The value you attempted to increment or decrement by one is too large for the underlying floating point representation to store accurately, hence the target of &lt;code&gt;++&lt;/code&gt; or &lt;code&gt;--&lt;/code&gt; is unchanged. Perl issues this warning because it has already switched from integers to floating point when values are too large for integers, and now even floating point is insufficient. You may wish to switch to using &lt;a href=&quot;math/bigint&quot;&gt;Math::BigInt&lt;/a&gt; explicitly.</source>
          <target state="translated">（W不精确度）您尝试递增或递减1的值太大，无法准确存储基础浮点表示形式，因此 &lt;code&gt;++&lt;/code&gt; 或 &lt;code&gt;--&lt;/code&gt; 的目标不变。Perl发出此警告的原因是，当值对于整数而言太大时，它已经从整数切换为浮点，并且现在甚至浮点都不足够。您可能希望明确地使用&lt;a href=&quot;math/bigint&quot;&gt;Math :: BigInt&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0380d4e9c21d75260f15f61e0e8d75fffecf52b7" translate="yes" xml:space="preserve">
          <source>(W internal) A warning peculiar to VMS. Perl tried to read a logical name or CLI symbol definition when preparing to iterate over %ENV, and didn't see the expected delimiter between key and value, so the line was ignored.</source>
          <target state="translated">（内部W）VMS特有的警告。当准备在％ENV上进行迭代时，Perl尝试读取逻辑名或CLI符号定义，并且没有看到键和值之间的预期分隔符，因此该行被忽略。</target>
        </trans-unit>
        <trans-unit id="e0b79079d3e5d0700f6c79112c4f181694c27e32" translate="yes" xml:space="preserve">
          <source>(W internal) A warning peculiar to VMS. Perl tried to read the CRTL's internal environ array, and encountered an element without the &lt;code&gt;=&lt;/code&gt; delimiter used to separate keys from values. The element is ignored.</source>
          <target state="translated">（内部W）VMS特有的警告。Perl尝试读取CRTL的内部环境数组，并遇到一个没有 &lt;code&gt;=&lt;/code&gt; 分隔符的元素，该分隔符用于将键与值分开。元素被忽略。</target>
        </trans-unit>
        <trans-unit id="587287ad8ceaf64ab8230f7bcf5670e31503bcc1" translate="yes" xml:space="preserve">
          <source>(W internal) A warning peculiar to VMS. While Perl was preparing to iterate over %ENV, it encountered a logical name or symbol definition which was too long, so it was truncated to the string shown.</source>
          <target state="translated">（内部W）VMS特有的警告。当Perl准备迭代％ENV时，它遇到了一个逻辑名称或符号定义，该定义太长，因此将其截断为所示的字符串。</target>
        </trans-unit>
        <trans-unit id="36ebe0800de98cf6f1b5bf24a60713b3518a1d0b" translate="yes" xml:space="preserve">
          <source>(W internal) Warnings peculiar to VMS. You tried to change or delete an element of the CRTL's internal environ array, but your copy of Perl wasn't built with a CRTL that contained the setenv() function. You'll need to rebuild Perl with a CRTL that does, or redefine</source>
          <target state="translated">（内部W）VMS特有的警告。您试图更改或删除CRTL内部环境数组的元素，但是Perl副本不是使用包含setenv（）函数的CRTL构建的。您需要使用具有此功能的CRTL重建Perl或重新定义它</target>
        </trans-unit>
        <trans-unit id="ef225bf78a4ffd17a5bb6a41738bbeb914a98db0" translate="yes" xml:space="preserve">
          <source>(W io) A filehandle represents an opened file, and when you opened the file it already went past any symlink you are presumably trying to look for. The operation returned &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;. Use a filename instead.</source>
          <target state="translated">（W io）一个文件句柄代表一个打开的文件，当您打开该文件时，它已经超过了任何符号链接，可能是您要查找的符号链接。该操作返回 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。请改用文件名。</target>
        </trans-unit>
        <trans-unit id="ee0ffa3b5e5e88aa061e31df24e098e285623887" translate="yes" xml:space="preserve">
          <source>(W io) A single call to write() produced more lines than can fit on a page. See &lt;a href=&quot;perlform&quot;&gt;perlform&lt;/a&gt;.</source>
          <target state="translated">（W io）一次调用write（）产生的行数超出了页面的容量。参见&lt;a href=&quot;perlform&quot;&gt;perlform&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3fae264d9cc122df4656cd9db14f53c587dced8a" translate="yes" xml:space="preserve">
          <source>(W io) The dirhandle you are doing a seekdir() on is either closed or not really a dirhandle. Check your control flow.</source>
          <target state="translated">（W io）您正在进行seekdir（）的操纵柄已关闭或不是真正的操纵柄。检查您的控制流程。</target>
        </trans-unit>
        <trans-unit id="4e5653964bb3ce999ffdd1f023f2acfeb0cb1b2b" translate="yes" xml:space="preserve">
          <source>(W io) The dirhandle you tried to close is either closed or not really a dirhandle. Check your control flow.</source>
          <target state="translated">（W io）您尝试关闭的把手是关闭的，或者不是真正的把手。检查您的控制流程。</target>
        </trans-unit>
        <trans-unit id="127a04276c120f78beaffbfc2313d45b73d1b33b" translate="yes" xml:space="preserve">
          <source>(W io) The dirhandle you tried to do a rewinddir() on is either closed or not really a dirhandle. Check your control flow.</source>
          <target state="translated">（W io）您尝试在其上执行rewinddir（）的方向盘已关闭或不是真正的方向盘。检查您的控制流程。</target>
        </trans-unit>
        <trans-unit id="1d737035b8d4f24c62b1ff52cc5128d37b308243" translate="yes" xml:space="preserve">
          <source>(W io) The dirhandle you tried to telldir() is either closed or not really a dirhandle. Check your control flow.</source>
          <target state="translated">（W io）您尝试告诉telldir（）的dirhandle已关闭或不是真正的dirhandle。检查您的控制流程。</target>
        </trans-unit>
        <trans-unit id="b257e2f649cabca0abfa99bff0088affded75975" translate="yes" xml:space="preserve">
          <source>(W io) The dirhandle you're reading from is either closed or not really a dirhandle. Check your control flow.</source>
          <target state="translated">（W io）您正在从中读取的操纵柄已关闭或不是真正的操纵柄。检查您的控制流程。</target>
        </trans-unit>
        <trans-unit id="cc52e3a1ee5048b6a45ffd6085a3f6b30e6d1327" translate="yes" xml:space="preserve">
          <source>(W io) You opened for reading a filehandle that got the same filehandle id as STDOUT or STDERR. This occurred because you closed STDOUT or STDERR previously.</source>
          <target state="translated">（打开）打开以读取与STDOUT或STDERR具有相同文件句柄ID的文件句柄。发生这种情况是因为您之前关闭了STDOUT或STDERR。</target>
        </trans-unit>
        <trans-unit id="16c9c24089f7631f92df6e520f74b47f2a676640" translate="yes" xml:space="preserve">
          <source>(W io) You opened for writing a filehandle that got the same filehandle id as STDIN. This occurred because you closed STDIN previously.</source>
          <target state="translated">（W io）您打开了一个文件句柄，该文件句柄具有与STDIN相同的文件句柄ID。这是因为您之前关闭了STDIN。</target>
        </trans-unit>
        <trans-unit id="48e33ef7ad3bda2c544d27c4a2b881dd4cce8a01" translate="yes" xml:space="preserve">
          <source>(W io) You tried to do an lstat on a filehandle. What did you mean by that? lstat() makes sense only on filenames. (Perl did a fstat() instead on the filehandle.)</source>
          <target state="translated">（W io）您试图在文件句柄上执行lstat。那是什么意思 lstat（）仅对文件名有意义。（Perl在文件句柄上执行了fstat（）。）</target>
        </trans-unit>
        <trans-unit id="324bb1ba42f01059dfedd40debd4b1a4374a4560" translate="yes" xml:space="preserve">
          <source>(W io) You tried to open a scalar reference for reading or writing, using the 3-arg open() syntax:</source>
          <target state="translated">（W io）您尝试使用3-arg open（）语法打开标量引用进行读取或写入：</target>
        </trans-unit>
        <trans-unit id="cd0af26043dd5c8a624dc3d3fd913fb0da71fce7" translate="yes" xml:space="preserve">
          <source>(W io) You tried to read from a filehandle opened only for writing, If you intended it to be a read/write filehandle, you needed to open it with &quot;+&amp;lt;&quot; or &quot;+&amp;gt;&quot; or &quot;+&amp;gt;&amp;gt;&quot; instead of with &quot;&amp;gt;&quot;. If you intended only to read from the file, use &quot;&amp;lt;&quot;. See &lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;. Another possibility is that you attempted to open filedescriptor 0 (also known as STDIN) for output (maybe you closed STDIN earlier?).</source>
          <target state="translated">（W io）您尝试从仅为写入而打开的文件句柄中进行读取，如果您希望将其作为读/写文件句柄，则需要使用&amp;ldquo; + &amp;lt;&amp;rdquo;或&amp;ldquo; +&amp;gt;&amp;rdquo;或&amp;ldquo; + &amp;gt;&amp;gt;&amp;rdquo;来打开它带有&amp;ldquo;&amp;gt;&amp;rdquo;。如果仅打算从文件中读取，请使用&amp;ldquo; &amp;lt;&amp;rdquo;。见&lt;a href=&quot;functions/open&quot;&gt;打开&lt;/a&gt;。另一种可能性是您试图打开文件描述符0（也称为STDIN）进行输出（也许您早些时候关闭了STDIN？）。</target>
        </trans-unit>
        <trans-unit id="8be59eeb719b1de30aae260c360f6b5c60cae180" translate="yes" xml:space="preserve">
          <source>(W io) You tried to write on a read-only filehandle. If you intended it to be a read-write filehandle, you needed to open it with &quot;+&amp;lt;&quot; or &quot;+&amp;gt;&quot; or &quot;+&amp;gt;&amp;gt;&quot; instead of with &quot;&amp;lt;&quot; or nothing. If you intended only to write the file, use &quot;&amp;gt;&quot; or &quot;&amp;gt;&amp;gt;&quot;. See &lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;.</source>
          <target state="translated">（W io）您试图在只读文件句柄上进行写操作。如果您打算将其用作读写文件句柄，则需要使用&amp;ldquo; + &amp;lt;&amp;rdquo;或&amp;ldquo; +&amp;gt;&amp;rdquo;或&amp;ldquo; + &amp;gt;&amp;gt;&amp;rdquo;而不是&amp;ldquo; &amp;lt;&amp;rdquo;或什么都不要打开它。如果仅打算写入文件，请使用&amp;ldquo;&amp;gt;&amp;rdquo;或&amp;ldquo; &amp;gt;&amp;gt;&amp;rdquo;。见&lt;a href=&quot;functions/open&quot;&gt;打开&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="968ea45fb72fa2c7bd5bcdf03ea7400fdcd81829" translate="yes" xml:space="preserve">
          <source>(W layer) An attempt was made to push an unknown layer onto the Perl I/O system. (Layers take care of transforming data between external and internal representations.) Note that some layers, such as &lt;code&gt;mmap&lt;/code&gt; , are not supported in all environments. If your program didn't explicitly request the failing operation, it may be the result of the value of the environment variable PERLIO.</source>
          <target state="translated">（W层）尝试将未知层推入Perl I / O系统。（各层负责在外部表示和内部表示之间转换数据。）请注意，并非在所有环境中都支持某些层，例如 &lt;code&gt;mmap&lt;/code&gt; 。如果您的程序未明确请求失败的操作，则可能是环境变量PERLIO的值导致的。</target>
        </trans-unit>
        <trans-unit id="3c622eaff4edeef916a3a7c575dcd4f69353b85c" translate="yes" xml:space="preserve">
          <source>(W layer) When pushing a layer with arguments onto the Perl I/O system you forgot the ) that closes the argument list. (Layers take care of transforming data between external and internal representations.) Perl stopped parsing the layer list at this point and did not attempt to push this layer. If your program didn't explicitly request the failing operation, it may be the result of the value of the environment variable PERLIO.</source>
          <target state="translated">（W层）将带有参数的层推入Perl I / O系统时，您忘记了关闭参数列表的）。（各层负责在外部表示和内部表示之间转换数据。）Perl在这一点上停止了对层列表的解析，并且没有尝试推送该层。如果您的程序未明确请求失败的操作，则可能是环境变量PERLIO的值导致的。</target>
        </trans-unit>
        <trans-unit id="ecde0fdfd45c81bcf2a4145082dc4dd084cab4f1" translate="yes" xml:space="preserve">
          <source>(W layer) When pushing layers onto the Perl I/O system, something other than a colon or whitespace was seen between the elements of a layer list. If the previous attribute had a parenthesised parameter list, perhaps that list was terminated too soon.</source>
          <target state="translated">（W层）将层推入Perl I / O系统时，在层列表的元素之间看不到冒号或空格。如果先前的属性具有带括号的参数列表，则该列表可能终止得太早了。</target>
        </trans-unit>
        <trans-unit id="b99a80d131d19e28dda9041e25eeb2f1f73775f2" translate="yes" xml:space="preserve">
          <source>(W locale) While in a single-byte locale (</source>
          <target state="translated">（W语言环境）在单字节语言环境中（</target>
        </trans-unit>
        <trans-unit id="0d7aae5004e480ec270f51ea7824d1434b43e076" translate="yes" xml:space="preserve">
          <source>(W locale) You are 1) running under &quot;&lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; &quot;; 2) the current locale is not a UTF-8 one; 3) you tried to do the designated case-change operation on the specified Unicode character; and 4) the result of this operation would mix Unicode and locale rules, which likely conflict. Mixing of different rule types is forbidden, so the operation was not done; instead the result is the indicated value, which is the best available that uses entirely Unicode rules. That turns out to almost always be the original character, unchanged.</source>
          <target state="translated">（W语言环境）您是1）在&amp;ldquo; &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; &amp;rdquo; 下运行； 2）当前语言环境不是UTF-8。 3）您尝试对指定的Unicode字符执行指定的大小写更改操作；和4）此操作的结果将混合Unicode和区域设置规则，这可能会发生冲突。禁止混合使用不同的规则类型，因此操作未完成；相反，结果是指示值，这是完全使用Unicode规则的最佳值。原来几乎总是原始字符，没有变化。</target>
        </trans-unit>
        <trans-unit id="9445c5833b7363d2fe4ae697fde2f870ddf47e7a" translate="yes" xml:space="preserve">
          <source>(W locale) You are matching a regular expression using locale rules, and a Unicode boundary is being matched, but the locale is not a Unicode one. This doesn't make sense. Perl will continue, assuming a Unicode (UTF-8) locale, but the results could well be wrong except if the locale happens to be ISO-8859-1 (Latin1) where this message is spurious and can be ignored.</source>
          <target state="translated">（W语言环境）您正在使用语言环境规则匹配正则表达式，并且正在匹配Unicode边界，但是语言环境不是Unicode语言环境。这没有道理。Perl会继续使用Unicode（UTF-8）语言环境，但是结果可能会出错，除非该语言环境是ISO-8859-1（Latin1）（该消息是虚假的并且可以忽略）。</target>
        </trans-unit>
        <trans-unit id="02905fbf32b02f6a8ace973ce43a92893403bf4f" translate="yes" xml:space="preserve">
          <source>(W locale) You are using the named locale, which is a non-UTF-8 one, and which perl has determined is not fully compatible with what it can handle. The second &lt;code&gt;%s&lt;/code&gt; gives a reason.</source>
          <target state="translated">（W语言环境）您使用的是命名语言环境，它是非UTF-8语言，并且perl确定与该语言不能完全兼容。第二个 &lt;code&gt;%s&lt;/code&gt; 给出了一个原因。</target>
        </trans-unit>
        <trans-unit id="03a33e2bd2daeb7394c123da8d1823f81a6f6a4f" translate="yes" xml:space="preserve">
          <source>(W misc) A &quot;my&quot; or &quot;state&quot; subroutine has been redeclared in the current scope or statement, effectively eliminating all access to the previous instance. This is almost always a typographical error. Note that the earlier subroutine will still exist until the end of the scope or until all closure references to it are destroyed.</source>
          <target state="translated">（W misc）在当前作用域或语句中已重新声明了&amp;ldquo; my&amp;rdquo;或&amp;ldquo; state&amp;rdquo;子例程，从而有效地消除了对先前实例的所有访问。这几乎总是印刷错误。请注意，较早的子例程将一直存在，直到范围的结尾或对它的所有闭包引用都被销毁为止。</target>
        </trans-unit>
        <trans-unit id="bbd888a8b12a9c45d7e56a1c333e4c20223eff1c" translate="yes" xml:space="preserve">
          <source>(W misc) A &quot;my&quot;, &quot;our&quot; or &quot;state&quot; variable has been redeclared in the current scope or statement, effectively eliminating all access to the previous instance. This is almost always a typographical error. Note that the earlier variable will still exist until the end of the scope or until all closure references to it are destroyed.</source>
          <target state="translated">（W misc）在当前作用域或语句中已重新声明了&amp;ldquo;我的&amp;rdquo;，&amp;ldquo;我们的&amp;rdquo;或&amp;ldquo;状态&amp;rdquo;变量，有效地消除了对先前实例的所有访问。这几乎总是印刷错误。请注意，较早的变量将一直存在，直到范围的结尾或对它的所有闭包引用都被销毁为止。</target>
        </trans-unit>
        <trans-unit id="0a437454e4e59c0c63ef790ff1715aba9f133c24" translate="yes" xml:space="preserve">
          <source>(W misc) A number has been passed as a bitmask argument to select(). Use the vec() function to construct the file descriptor bitmasks for select. See &lt;a href=&quot;functions/select&quot;&gt;select&lt;/a&gt;.</source>
          <target state="translated">（W misc）已将一个数字作为位掩码参数传递给select（）。使用vec（）函数构造用于选择的文件描述符位掩码。请参阅&lt;a href=&quot;functions/select&quot;&gt;select&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0c94ce8244014ff24661c0ca75a55652169dcad2" translate="yes" xml:space="preserve">
          <source>(W misc) A sub was declared as sub foo : prototype(A) : prototype(B) {}, for example. Since each sub can only have one prototype, the earlier declaration(s) are discarded while the last one is applied.</source>
          <target state="translated">（W misc）例如，将一个sub声明为sub foo：prototype（A）：prototype（B）{}。由于每个子项只能有一个原型，因此，在应用最后一个声明时，将放弃较早的声明。</target>
        </trans-unit>
        <trans-unit id="217c15d1789f3525b24856092f3f9184fdbf896a" translate="yes" xml:space="preserve">
          <source>(W misc) A warning peculiar to VMS. Perl tried to read the value of an %ENV element from a CLI symbol table, and found a resultant string longer than 1024 characters. The return value has been truncated to 1024 characters.</source>
          <target state="translated">（错误）VMS特有的警告。Perl尝试从CLI符号表中读取％ENV元素的值，并发现结果字符串长于1024个字符。返回值已被截断为1024个字符。</target>
        </trans-unit>
        <trans-unit id="dd11fcb880f23ae872f44fc2e5336ede26ae40f1" translate="yes" xml:space="preserve">
          <source>(W misc) Although &lt;a href=&quot;attributes&quot;&gt;attributes.pm&lt;/a&gt; allows this, turning the lvalue attribute on or off on a Perl subroutine that is already defined does not always work properly. It may or may not do what you want, depending on what code is inside the subroutine, with exact details subject to change between Perl versions. Only do this if you really know what you are doing.</source>
          <target state="translated">（W misc）尽管&lt;a href=&quot;attributes&quot;&gt;attribute.pm&lt;/a&gt;允许这样做，但是在已定义的Perl子例程上打开或关闭lvalue属性并不总是可以正常工作。它可能会或可能不会执行您想要的操作，具体取决于子例程内的代码，具体细节可能会在Perl版本之间进行更改。仅当您真正知道自己在做什么时才这样做。</target>
        </trans-unit>
        <trans-unit id="0776898ec0630aa335d5aaa8eb564217544bbcdc" translate="yes" xml:space="preserve">
          <source>(W misc) An undefined value was assigned to a typeglob, a la &lt;code&gt;*foo = &lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; . This does nothing. It's possible that you really mean &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt; *foo&lt;/code&gt; .</source>
          <target state="translated">（W misc）未定义的值已分配给typeglob，即la &lt;code&gt;*foo = &lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。这什么也没做。您可能真的是说 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt; *foo&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="12437cd31e238da3b2ced4a2306fbe6e5acf5a48" translate="yes" xml:space="preserve">
          <source>(W misc) In a conditional expression, you used &amp;lt;HANDLE&amp;gt;, &amp;lt;*&amp;gt; (glob), &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each()&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;functions/readdir&quot;&gt;readdir()&lt;/a&gt;&lt;/code&gt; as a boolean value. Each of these constructs can return a value of &quot;0&quot;; that would make the conditional expression false, which is probably not what you intended. When using these constructs in conditional expressions, test their values with the &lt;code&gt;&lt;a href=&quot;functions/defined&quot;&gt;defined&lt;/a&gt;&lt;/code&gt; operator.</source>
          <target state="translated">（W MISC）在条件表达式中，使用&amp;lt;HANDLE&amp;gt;，&amp;lt;*&amp;gt;（水珠）， &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each()&lt;/a&gt;&lt;/code&gt; ，或 &lt;code&gt;&lt;a href=&quot;functions/readdir&quot;&gt;readdir()&lt;/a&gt;&lt;/code&gt; 为一个布尔值。这些构造中的每一个都可以返回值&amp;ldquo; 0&amp;rdquo;。这会使条件表达式为假，这可能不是您想要的。在条件表达式中使用这些构造时，请使用 &lt;code&gt;&lt;a href=&quot;functions/defined&quot;&gt;defined&lt;/a&gt;&lt;/code&gt; 运算符测试它们的值。</target>
        </trans-unit>
        <trans-unit id="20059d974af22a8333d150a247e06378d470385d" translate="yes" xml:space="preserve">
          <source>(W misc) Remember that &quot;our&quot; does not localize the declared global variable. You have declared it again in the same lexical scope, which seems superfluous.</source>
          <target state="translated">（W misc）请记住，&amp;ldquo;我们的&amp;rdquo;不会本地化声明的全局变量。您已经在相同的词汇范围内再次声明了它，这似乎是多余的。</target>
        </trans-unit>
        <trans-unit id="5844b97950c2a1072e2ddb5f148dc77415c11973" translate="yes" xml:space="preserve">
          <source>(W misc) The &quot;const&quot; attribute has no effect except on anonymous closure prototypes. You applied it to a subroutine via &lt;a href=&quot;attributes&quot;&gt;attributes.pm&lt;/a&gt;. This is only useful inside an attribute handler for an anonymous subroutine.</source>
          <target state="translated">（W misc）&amp;ldquo; const&amp;rdquo;属性仅对匿名闭包原型无效。您通过&lt;a href=&quot;attributes&quot;&gt;attribute.pm&lt;/a&gt;将其应用于子例程。这仅在匿名子例程的属性处理程序内部有用。</target>
        </trans-unit>
        <trans-unit id="83ab71cdca9ba1d83ceb17577950410c9f6f3fff" translate="yes" xml:space="preserve">
          <source>(W misc) The pattern match (&lt;code&gt;//&lt;/code&gt; ), substitution (&lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt;), and transliteration (&lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr///&lt;/a&gt;&lt;/code&gt;) operators work on scalar values. If you apply one of them to an array or a hash, it will convert the array or hash to a scalar value (the length of an array, or the population info of a hash) and then work on that scalar value. This is probably not what you meant to do. See &lt;a href=&quot;functions/grep&quot;&gt;grep&lt;/a&gt; and &lt;a href=&quot;functions/map&quot;&gt;map&lt;/a&gt; for alternatives.</source>
          <target state="translated">（W misc）模式匹配（ &lt;code&gt;//&lt;/code&gt; ），替换（ &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt; ）和音译（ &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr///&lt;/a&gt;&lt;/code&gt; ）运算符可处理标量值。如果将它们之一应用于数组或哈希，它将把数组或哈希转换为标量值（数组的长度或哈希的填充信息），然后对该标量值进行处理。这可能不是您的本意。请参阅&lt;a href=&quot;functions/grep&quot;&gt;grep&lt;/a&gt;和&lt;a href=&quot;functions/map&quot;&gt;map&lt;/a&gt;以了解替代方法。</target>
        </trans-unit>
        <trans-unit id="a6cb938b0a50f702bbe4e1a83af4f783e4f29b59" translate="yes" xml:space="preserve">
          <source>(W misc) The version string contains invalid characters at the end, which are being ignored.</source>
          <target state="translated">（W misc）版本字符串的末尾包含无效字符，这些字符将被忽略。</target>
        </trans-unit>
        <trans-unit id="1ac1e31d222cc4c0e5cec20c46a1416397109637" translate="yes" xml:space="preserve">
          <source>(W misc) This prefix usually indicates that a DESTROY() method raised the indicated exception. Since destructors are usually called by the system at arbitrary points during execution, and often a vast number of times, the warning is issued only once for any number of failures that would otherwise result in the same message being repeated.</source>
          <target state="translated">（W misc）此前缀通常指示DESTROY（）方法引发了所指示的异常。由于析构函数通常在执行过程中由系统在任意点调用，并且通常调用次数很多，因此，警告对于任何数量的失败仅发出一次，否则将导致重复同一条消息。</target>
        </trans-unit>
        <trans-unit id="5c525d33b2f6cbb2cbaccf27a61558723ac97f2a" translate="yes" xml:space="preserve">
          <source>(W misc) Using the &lt;code&gt;:lvalue&lt;/code&gt; declarative syntax to make a Perl subroutine an lvalue subroutine after it has been defined is not permitted. To make the subroutine an lvalue subroutine, add the lvalue attribute to the definition, or put the &lt;code&gt;&lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt;
foo :lvalue;&lt;/code&gt; declaration before the definition.</source>
          <target state="translated">（错误）不允许使用 &lt;code&gt;:lvalue&lt;/code&gt; 声明性语法将Perl子例程定义为lvalue子例程。要使子例程成为左值子例程，可将左值属性添加到定义中，或将 &lt;code&gt;&lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt; foo :lvalue;&lt;/code&gt; 添加到子例程中。在定义之前声明。</target>
        </trans-unit>
        <trans-unit id="d7bb17126e54088f85c3c0ce7c1c0e874c4e1d14" translate="yes" xml:space="preserve">
          <source>(W misc) You are blessing a reference to a zero length string. This has the effect of blessing the reference into the package main. This is usually not what you want. Consider providing a default target package, e.g. bless($ref, $p || 'MyPackage');</source>
          <target state="translated">（W杂项）您正在祝福对零长度字符串的引用。这具有将引用保佑到包主体中的作用。这通常不是您想要的。考虑提供默认的目标程序包，例如bless（$ ref，$ p ||'MyPackage'）;</target>
        </trans-unit>
        <trans-unit id="ed823eb758d423a401df73e799d2788b33feee1c" translate="yes" xml:space="preserve">
          <source>(W misc) You assigned to an lvalue subroutine, but what the subroutine returned was a temporary scalar about to be discarded, so the assignment had no effect.</source>
          <target state="translated">（W misc）您已分配了一个左值子例程，但是该子例程返回的是即将被丢弃的临时标量，因此该分配无效。</target>
        </trans-unit>
        <trans-unit id="9b9202be79ef7c790da62232dde7b953dc21d5a6" translate="yes" xml:space="preserve">
          <source>(W misc) You attempted to specify an offset that was past the end of the array passed to splice(). Splicing will instead commence at the end of the array, rather than past it. If this isn't what you want, try explicitly pre-extending the array by assigning $#array = $offset. See &lt;a href=&quot;functions/splice&quot;&gt;splice&lt;/a&gt;.</source>
          <target state="translated">（W misc）您试图指定一个偏移量，该偏移量超出了传递给splice（）的数组的末尾。拼接将改为在数组的末尾开始，而不是过去。如果这不是您想要的，请尝试通过分配$＃array = $ offset显式地预先扩展数组。参见&lt;a href=&quot;functions/splice&quot;&gt;拼接&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e97344ac072c36fa30be5354dedbaf9a30a0a229" translate="yes" xml:space="preserve">
          <source>(W misc) You gave a single reference where Perl was expecting a list with an even number of elements (for assignment to a hash). This usually means that you used the anon hash constructor when you meant to use parens. In any case, a hash requires key/value &lt;b&gt;pairs&lt;/b&gt;.</source>
          <target state="translated">（W misc）您提供了一个参考，其中Perl期望一个具有偶数个元素的列表（用于分配给哈希）。这通常意味着您打算使用parens时使用了anon哈希构造函数。无论如何，散列都需要键/值&lt;b&gt;对&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="15abd042a39d9926d65656cbbe08be25424747c8" translate="yes" xml:space="preserve">
          <source>(W misc) You have a \E in a double-quotish string without a &lt;code&gt;\U&lt;/code&gt; , &lt;code&gt;\L&lt;/code&gt; or &lt;code&gt;\Q&lt;/code&gt; preceding it.</source>
          <target state="translated">（W MISC）你有一个。\ E在双quotish字符串不包含 &lt;code&gt;\U&lt;/code&gt; ， &lt;code&gt;\L&lt;/code&gt; 或 &lt;code&gt;\Q&lt;/code&gt; 它前面。</target>
        </trans-unit>
        <trans-unit id="1c0eea9ec7a19fa6b579515762f1950808cc9b1d" translate="yes" xml:space="preserve">
          <source>(W misc) You have attempted to weaken a reference that is already weak. Doing so has no effect.</source>
          <target state="translated">（W misc）您试图削弱已经很弱的参照。这样做没有效果。</target>
        </trans-unit>
        <trans-unit id="f563a1cd3b0e654993413a90e34bfc8ab4511a9c" translate="yes" xml:space="preserve">
          <source>(W misc) You have used a replacement list that is longer than the search list. So the additional elements in the replacement list are meaningless.</source>
          <target state="translated">（其他）您使用的替换列表比搜索列表长。因此，替换列表中的其他元素毫无意义。</target>
        </trans-unit>
        <trans-unit id="055eeb5e67fd76f17bce2fa389beccc4d1c206eb" translate="yes" xml:space="preserve">
          <source>(W misc) You have used the /d modifier where the searchlist has the same length as the replacelist. See &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt; for more information about the /d modifier.</source>
          <target state="translated">（错误）您使用了/ d修饰符，其中搜索列表的长度与替换列表的长度相同。有关/ d修饰符的更多信息，请参见&lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1c43982d36144a2ffd4995fa369c53951ebca965" translate="yes" xml:space="preserve">
          <source>(W misc) You probably referred to an imported subroutine &amp;amp;FOO as $FOO or some such.</source>
          <target state="translated">（W misc）您可能将导入的子例程＆FOO称为$ FOO或诸如此类。</target>
        </trans-unit>
        <trans-unit id="f28afcc36fb6d498d08aa34ce83936dd22526785" translate="yes" xml:space="preserve">
          <source>(W misc) You seem to have already declared the same global once before in the current lexical scope.</source>
          <target state="translated">（W misc）您似乎已经在当前词法范围内声明了相同的全局变量。</target>
        </trans-unit>
        <trans-unit id="5868eba0d9d25b18fa7c2e6fe83826d858642827" translate="yes" xml:space="preserve">
          <source>(W misc) You specified an odd number of elements to initialize a hash, which is odd, because hashes come in key/value pairs.</source>
          <target state="translated">（W misc）您指定了奇数个元素来初始化哈希，这是奇数，因为哈希以键/值对的形式出现。</target>
        </trans-unit>
        <trans-unit id="324ba9d70516662c8b6bfbd8be1d30db767f254c" translate="yes" xml:space="preserve">
          <source>(W misc) You tried to set the length of an array which has been freed. You can do this by storing a reference to the scalar representing the last index of an array and later assigning through that reference. For example</source>
          <target state="translated">（W misc）您试图设置已释放的数组的长度。您可以通过存储对标量的引用来表示此操作，该引用代表数组的最后一个索引，然后通过该引用进行赋值。例如</target>
        </trans-unit>
        <trans-unit id="10e6703969c96e985c2f8be5cfdd7a5050eb6807" translate="yes" xml:space="preserve">
          <source>(W misc) You tried to use a reference as an array index; this probably isn't what you mean, because references in numerical context tend to be huge numbers, and so usually indicates programmer error.</source>
          <target state="translated">（W misc）您试图将引用用作数组索引；这可能不是您的意思，因为数字上下文中的引用往往是巨大的数字，因此通常表示程序员错误。</target>
        </trans-unit>
        <trans-unit id="961c127b9cc0ad4bd43847fe65d18cac036115ef" translate="yes" xml:space="preserve">
          <source>(W misc) You undefined a subroutine which had previously been eligible for inlining. See &lt;a href=&quot;perlsub#Constant-Functions&quot;&gt;Constant Functions in perlsub&lt;/a&gt; for commentary and workarounds.</source>
          <target state="translated">（W misc）您未定义以前可以进行内联的子例程。请参阅&lt;a href=&quot;perlsub#Constant-Functions&quot;&gt;perlsub中的常量函数以&lt;/a&gt;获取注释和解决方法。</target>
        </trans-unit>
        <trans-unit id="dfe717cbd021e5996741b199692d40604f2ddd47" translate="yes" xml:space="preserve">
          <source>(W misc) You used a backslash-character combination which is not recognized by Perl. The character was understood literally, but this may change in a future version of Perl.</source>
          <target state="translated">（W misc）您使用了Perl无法识别的反斜杠字符组合。从字面上理解了该字符，但是在Perl的将来版本中可能会发生变化。</target>
        </trans-unit>
        <trans-unit id="2e717da40f4bea7168a3f5280e24fbfb5da1b933" translate="yes" xml:space="preserve">
          <source>(W misc) You used the obsolescent &lt;code&gt;&lt;a href=&quot;functions/dump&quot;&gt;dump()&lt;/a&gt;&lt;/code&gt; built-in function, without fully qualifying it as &lt;code&gt;CORE::dump()&lt;/code&gt; . Maybe it's a typo. See &lt;a href=&quot;functions/dump&quot;&gt;dump&lt;/a&gt;.</source>
          <target state="translated">（W misc）您使用了过时的 &lt;code&gt;&lt;a href=&quot;functions/dump&quot;&gt;dump()&lt;/a&gt;&lt;/code&gt; 内置函数，而没有完全将其限定为 &lt;code&gt;CORE::dump()&lt;/code&gt; 。也许是错字。参见&lt;a href=&quot;functions/dump&quot;&gt;dump&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c0cd06fc5e07405e0a5250c8e4b98b249ba297bf" translate="yes" xml:space="preserve">
          <source>(W misc, regexp) You wrote something like &lt;code&gt;\08&lt;/code&gt; , or &lt;code&gt;\179&lt;/code&gt; in a double-quotish string. All but the last digit is treated as a single character, specified in octal. The last digit is the next character in the string. To tell Perl that this is indeed what you want, you can use the &lt;code&gt;\o{ }&lt;/code&gt; syntax, or use exactly three digits to specify the octal for the character.</source>
          <target state="translated">（W misc，regexp）您在双引号字符串中编写了 &lt;code&gt;\08&lt;/code&gt; 或 &lt;code&gt;\179&lt;/code&gt; 类的内容。除最后一位数字外，所有其他数字均视为一个字符，以八进制指定。最后一位数字是字符串中的下一个字符。要告诉Perl这确实是您想要的，可以使用 &lt;code&gt;\o{ }&lt;/code&gt; 语法，或者使用恰好三位数字来指定字符的八进制。</target>
        </trans-unit>
        <trans-unit id="d87808370647207cb23c26a494895bd593e19c4c" translate="yes" xml:space="preserve">
          <source>(W missing) You called a function with fewer arguments than other arguments you supplied indicated would be needed.</source>
          <target state="translated">（缺少W）您调用的函数所用参数要少于您提供的指示的其他参数。</target>
        </trans-unit>
        <trans-unit id="6e8560a7cea10e56b2966a8252b5c47858339b3b" translate="yes" xml:space="preserve">
          <source>(W newline) A file operation was attempted on a filename, and that operation failed, PROBABLY because the filename contained a newline, PROBABLY because you forgot to chomp() it off. See &lt;a href=&quot;functions/chomp&quot;&gt;chomp&lt;/a&gt;.</source>
          <target state="translated">（换行符W）尝试对文件名执行文件操作，但该操作失败，可能是因为文件名包含换行符，可能是PROBABLY，因为您忘记了将其砍掉。见&lt;a href=&quot;functions/chomp&quot;&gt;排骨&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ecad68c5be5ba7eb54444965792ee7f2c653a4e2" translate="yes" xml:space="preserve">
          <source>(W numeric) The indicated string was fed as an argument to an operator that expected a numeric value instead. If you're fortunate the message will identify which operator was so unfortunate.</source>
          <target state="translated">（W数字）将指示的字符串作为参数提供给需要数字值的运算符。如果您很幸运，该消息将指出哪个操作员很不幸。</target>
        </trans-unit>
        <trans-unit id="ffa9508e53b0c92e963d1b02acbefd8a4acfe9fd" translate="yes" xml:space="preserve">
          <source>(W numeric) The indicated string was fed as an argument to the &lt;code&gt;++&lt;/code&gt; operator which expects either a number or a string matching &lt;code&gt;/^[a-zA-Z]*[0-9]*\z/&lt;/code&gt; . See &lt;a href=&quot;perlop#Auto-increment-and-Auto-decrement&quot;&gt;Auto-increment and Auto-decrement in perlop&lt;/a&gt; for details.</source>
          <target state="translated">（W数字）指示的字符串作为参数传递给 &lt;code&gt;++&lt;/code&gt; 运算符，该运算符期望数字或匹配 &lt;code&gt;/^[a-zA-Z]*[0-9]*\z/&lt;/code&gt; 的字符串。有关详细信息，请参见&lt;a href=&quot;perlop#Auto-increment-and-Auto-decrement&quot;&gt;perlop中的自动递增和自动递减&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e747973f9086868d39efd9610fcbe587d13511fb" translate="yes" xml:space="preserve">
          <source>(W numeric) You tried to execute the &lt;a href=&quot;perlop#Multiplicative-Operators&quot;&gt;x &lt;/a&gt; repetition operator &lt;code&gt;Inf&lt;/code&gt; (or &lt;code&gt;-Inf&lt;/code&gt; ) or &lt;code&gt;NaN&lt;/code&gt; times, which doesn't make sense.</source>
          <target state="translated">（W数字）您试图执行&lt;a href=&quot;perlop#Multiplicative-Operators&quot;&gt;x&lt;/a&gt;重复运算符 &lt;code&gt;Inf&lt;/code&gt; （或 &lt;code&gt;-Inf&lt;/code&gt; ）或 &lt;code&gt;NaN&lt;/code&gt; 次，但这没有任何意义。</target>
        </trans-unit>
        <trans-unit id="df9ed2c03344d23e71c3f63e7cd7233301c17e01" translate="yes" xml:space="preserve">
          <source>(W numeric) You tried to execute the &lt;a href=&quot;perlop#Multiplicative-Operators&quot;&gt;x &lt;/a&gt; repetition operator fewer than 0 times, which doesn't make sense.</source>
          <target state="translated">（W数字）您试图执行&lt;a href=&quot;perlop#Multiplicative-Operators&quot;&gt;x&lt;/a&gt;重复运算符少于0次，这没有意义。</target>
        </trans-unit>
        <trans-unit id="979df2325920e52daaa8be14ea206eccde22447a" translate="yes" xml:space="preserve">
          <source>(W once) Typographical errors often show up as unique variable names. If you had a good reason for having a unique name, then just mention it again somehow to suppress the message. The &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; declaration is also provided for this purpose.</source>
          <target state="translated">（一次W）印刷错误通常显示为唯一的变量名称。如果您有充分的理由拥有一个唯一的名称，则只需以某种方式再次提及它即可隐藏该消息。在 &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; 还提供用于此目的的声明。</target>
        </trans-unit>
        <trans-unit id="293cfd81dde512b2040983819ce42833b00e006e" translate="yes" xml:space="preserve">
          <source>(W overflow) Some portion of a version initialization is too large for the size of integers for your architecture. This is not a warning because there is no rational reason for a version to try and use an element larger than typically 2**32. This is usually caused by trying to use some odd mathematical operation as a version, like 100/9.</source>
          <target state="translated">（W溢出）对于您的体系结构，版本初始化的某些部分对于整数大小而言太大。这不是警告，因为没有合理的理由要求版本尝试使用大于2 ** 32的元素。这通常是由于尝试使用一些奇怪的数学运算作为版本（例如100/9）引起的。</target>
        </trans-unit>
        <trans-unit id="aa916c900301e3826afbb5c02eaae17fff9b2c9d" translate="yes" xml:space="preserve">
          <source>(W overflow) The hexadecimal floating point had internally more digits than could be output. This can be caused by unsupported long double formats, or by 64-bit integers not being available (needed to retrieve the digits under some configurations).</source>
          <target state="translated">（W溢出）十六进制浮点在内部具有比可以输出的位数更多的位数。这可能是由于不支持的长双精度格式或64位整数不可用（在某些配置下需要检索数字）引起的。</target>
        </trans-unit>
        <trans-unit id="138762264bdf623369c76bc48da2075b0cc318e5" translate="yes" xml:space="preserve">
          <source>(W overflow) The hexadecimal floating point has a larger exponent than the floating point supports.</source>
          <target state="translated">（W溢出）十六进制浮点的指数大于浮点支持的指数。</target>
        </trans-unit>
        <trans-unit id="7814ff9e669078b81e726ef3a3f6f5a884ba7aa0" translate="yes" xml:space="preserve">
          <source>(W overflow) The hexadecimal floating point has a smaller exponent than the floating point supports.</source>
          <target state="translated">（W溢出）十六进制浮点的指数小于浮点支持的指数。</target>
        </trans-unit>
        <trans-unit id="ffaf16a18b1f69a006ca7d0cf534ff6517d8ea76" translate="yes" xml:space="preserve">
          <source>(W overflow) The hexadecimal floating point literal had more bits in the mantissa (the part between the 0x and the exponent, also known as the fraction or the significand) than the floating point supports.</source>
          <target state="translated">（W溢出）十六进制浮点文字的尾数（0x和指数之间的部分，也称为分数或有效位数）比浮点支持的位数更多。</target>
        </trans-unit>
        <trans-unit id="afbfa3b5e713c7cfd0fd6a0d70917f864ae78219" translate="yes" xml:space="preserve">
          <source>(W overflow) You called &lt;code&gt;&lt;a href=&quot;functions/gmtime&quot;&gt;gmtime&lt;/a&gt;&lt;/code&gt; with a number that it could not handle: too large, too small, or NaN. The returned value is &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">（W溢出）您用无法处理的数字调用 &lt;code&gt;&lt;a href=&quot;functions/gmtime&quot;&gt;gmtime&lt;/a&gt;&lt;/code&gt; ：太大，太小或NaN。返回值是 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0d036704b2cebe975d7e914b35acf789231af606" translate="yes" xml:space="preserve">
          <source>(W overflow) You called &lt;code&gt;&lt;a href=&quot;functions/gmtime&quot;&gt;gmtime&lt;/a&gt;&lt;/code&gt; with a number that was larger than it can reliably handle and &lt;code&gt;&lt;a href=&quot;functions/gmtime&quot;&gt;gmtime&lt;/a&gt;&lt;/code&gt; probably returned the wrong date. This warning is also triggered with NaN (the special not-a-number value).</source>
          <target state="translated">（W溢出）您用一个大于它可以可靠处理的数字的值调用了 &lt;code&gt;&lt;a href=&quot;functions/gmtime&quot;&gt;gmtime&lt;/a&gt;&lt;/code&gt; ，并且 &lt;code&gt;&lt;a href=&quot;functions/gmtime&quot;&gt;gmtime&lt;/a&gt;&lt;/code&gt; 可能返回了错误的日期。NaN（特殊的非数字值）也会触发此警告。</target>
        </trans-unit>
        <trans-unit id="0a311f99c2c8b02930306682b9959eb1c20599da" translate="yes" xml:space="preserve">
          <source>(W overflow) You called &lt;code&gt;&lt;a href=&quot;functions/gmtime&quot;&gt;gmtime&lt;/a&gt;&lt;/code&gt; with a number that was smaller than it can reliably handle and &lt;code&gt;&lt;a href=&quot;functions/gmtime&quot;&gt;gmtime&lt;/a&gt;&lt;/code&gt; probably returned the wrong date.</source>
          <target state="translated">（W溢出）您用一个小于可以可靠处理的数字调用 &lt;code&gt;&lt;a href=&quot;functions/gmtime&quot;&gt;gmtime&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/gmtime&quot;&gt;gmtime&lt;/a&gt;&lt;/code&gt; 可能返回了错误的日期。</target>
        </trans-unit>
        <trans-unit id="36f5779623dfa6f6e7074bdae41e1e41b89f241a" translate="yes" xml:space="preserve">
          <source>(W overflow) You called &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt; with a number that it could not handle: too large, too small, or NaN. The returned value is &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">（W溢出）您用无法处理的数字呼叫了 &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt; ：太大，太小或NaN。返回值是 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="59105a430199971f3675bfeb1fffaf7e49ff1f30" translate="yes" xml:space="preserve">
          <source>(W overflow) You called &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt; with a number that was larger than it can reliably handle and &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt; probably returned the wrong date. This warning is also triggered with NaN (the special not-a-number value).</source>
          <target state="translated">（W溢出）您给 &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt; 打电话的号码大于它可以可靠处理的数字， &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt; 可能返回了错误的日期。NaN（特殊的非数字值）也会触发此警告。</target>
        </trans-unit>
        <trans-unit id="a93e07bf0c0bd6b674d691a637cbeb2110ed1a3d" translate="yes" xml:space="preserve">
          <source>(W overflow) You called &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt; with a number that was smaller than it can reliably handle and &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt; probably returned the wrong date.</source>
          <target state="translated">（W溢出）您以小于可以可靠处理的数字呼叫 &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt; 可能返回了错误的日期。</target>
        </trans-unit>
        <trans-unit id="5aa4610ff7a25c878af96eaca3bd3d08a52b4d72" translate="yes" xml:space="preserve">
          <source>(W overflow) You called &lt;code&gt;&lt;a href=&quot;functions/sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; with a number that was larger than it can reliably handle and &lt;code&gt;&lt;a href=&quot;functions/sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; probably slept for less time than requested.</source>
          <target state="translated">（W溢出）您用一个大于其可以可靠处理的数字的值来调用 &lt;code&gt;&lt;a href=&quot;functions/sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; ，并且 &lt;code&gt;&lt;a href=&quot;functions/sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; 时间可能比请求的时间少。</target>
        </trans-unit>
        <trans-unit id="d9fd3dde1b871c801c860d8a346caace3870778c" translate="yes" xml:space="preserve">
          <source>(W overload) The &lt;a href=&quot;overload&quot;&gt;overload&lt;/a&gt; pragma was passed an argument it did not recognize. Did you mistype an operator?</source>
          <target state="translated">（W重载）&lt;a href=&quot;overload&quot;&gt;重载&lt;/a&gt;编译指示传递了一个它无法识别的参数。您是否输错了运算符？</target>
        </trans-unit>
        <trans-unit id="e826b5fc0dae7ccc313c75bbbc79a59aff89f566" translate="yes" xml:space="preserve">
          <source>(W overload) The call to overload::constant contained an odd number of arguments. The arguments should come in pairs.</source>
          <target state="translated">（W重载）对重载::常量的调用包含奇数个参数。参数应成对出现。</target>
        </trans-unit>
        <trans-unit id="be93031fb1c1fd2693de7b970bf1f347826973be" translate="yes" xml:space="preserve">
          <source>(W overload) The second (fourth, sixth, ...) argument of overload::constant needs to be a code reference. Either an anonymous subroutine, or a reference to a subroutine.</source>
          <target state="translated">（W重载）重载::: constant的第二（第四，第六，...）参数需要作为代码引用。匿名子例程或对子例程的引用。</target>
        </trans-unit>
        <trans-unit id="bb652dad5fd63516cc2d111645fd00a245f45570" translate="yes" xml:space="preserve">
          <source>(W overload) You tried to overload a constant type the overload package is unaware of.</source>
          <target state="translated">（W重载）您试图重载过载包未意识到的常量类型。</target>
        </trans-unit>
        <trans-unit id="cdc892f77860c2fc237ce50d76efd0c8dceb00a4" translate="yes" xml:space="preserve">
          <source>(W pack) Each line in an uuencoded string starts with a length indicator which can't encode values above 63. So there is no point in asking for a line length bigger than that. Perl will behave as if you specified &lt;code&gt;u63&lt;/code&gt; as the format.</source>
          <target state="translated">（W pack）uuencoded字符串中的每一行都以一个长度指示符开头，该长度指示符不能对63以上的值进行编码。因此，要求行长度大于该长度是没有意义的。Perl的行为就像您将 &lt;code&gt;u63&lt;/code&gt; 指定为格式一样。</target>
        </trans-unit>
        <trans-unit id="eb6f8e362bfe003b879f383a4c911b9a8c85c57c" translate="yes" xml:space="preserve">
          <source>(W pack) You said</source>
          <target state="translated">（W pack）你说</target>
        </trans-unit>
        <trans-unit id="6a2168c56cd322bfb883a2fd9dbaf886812e847c" translate="yes" xml:space="preserve">
          <source>(W pack) You tried something like</source>
          <target state="translated">（W pack）您尝试过类似</target>
        </trans-unit>
        <trans-unit id="331cf753fae1a080c528f36a302470f474fb3136" translate="yes" xml:space="preserve">
          <source>(W pack) You tried to pass a temporary value (like the result of a function, or a computed expression) to the &quot;p&quot; pack() template. This means the result contains a pointer to a location that could become invalid anytime, even before the end of the current statement. Use literals or global values as arguments to the &quot;p&quot; pack() template to avoid this warning.</source>
          <target state="translated">（W pack）您试图将临时值（例如函数的结果或计算表达式）传递给&amp;ldquo; p&amp;rdquo; pack（）模板。这意味着结果包含一个指向可能随时变为无效的位置的指针，甚至在当前语句结束之前也是如此。使用文字或全局值作为&amp;ldquo; p&amp;rdquo; pack（）模板的参数，以避免出现此警告。</target>
        </trans-unit>
        <trans-unit id="512f02482767bcddc779471eaf5fc084e966f52c" translate="yes" xml:space="preserve">
          <source>(W parenthesis) You said something like</source>
          <target state="translated">（W括号）您说过类似</target>
        </trans-unit>
        <trans-unit id="ede1f656195c84e1f48728c83c4610d04755c430" translate="yes" xml:space="preserve">
          <source>(W pipe) A fork in a piped open failed with EAGAIN and will be retried after five seconds.</source>
          <target state="translated">（W管道）叉状开口叉因EAGAIN失败，将在五秒钟后重试。</target>
        </trans-unit>
        <trans-unit id="b5a7c11775d339fb6b5d17e9b9676b5723086198" translate="yes" xml:space="preserve">
          <source>(W pipe) You tried to say &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;(CMD, &quot;|cmd|&quot;)&lt;/code&gt; , which is not supported. You can try any of several modules in the Perl library to do this, such as IPC::Open2. Alternately, direct the pipe's output to a file using &quot;&amp;gt;&quot;, and then read it in under a different file handle.</source>
          <target state="translated">（W管道）您试图说不支持 &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;(CMD, &quot;|cmd|&quot;)&lt;/code&gt; 。您可以尝试Perl库中的几个模块中的任何一个来执行此操作，例如IPC :: Open2。或者，使用&amp;ldquo;&amp;gt;&amp;rdquo;将管道的输出定向到文件，然后在其他文件句柄下读取它。</target>
        </trans-unit>
        <trans-unit id="b9cd44d6f9338e432eca0100ebb8cf99a11652fc" translate="yes" xml:space="preserve">
          <source>(W pipe) You used the &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;(FH, &quot;| command&quot;)&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;(FH, &quot;command |&quot;)&lt;/code&gt; construction, but the command was missing or blank.</source>
          <target state="translated">（W管道）您使用了 &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;(FH, &quot;| command&quot;)&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;(FH, &quot;command |&quot;)&lt;/code&gt; 构造，但是该命令丢失或为空。</target>
        </trans-unit>
        <trans-unit id="33a8500596670f4af1c72a4fafc0180e0691f8b6" translate="yes" xml:space="preserve">
          <source>(W portable) The binary number you specified is larger than 2**32-1 (4294967295) and therefore non-portable between systems. See &lt;a href=&quot;perlport&quot;&gt;perlport&lt;/a&gt; for more on portability concerns.</source>
          <target state="translated">（W便携式）您指定的二进制数大于2 ** 32-1（4294967295），因此在系统之间不可移植。有关&lt;a href=&quot;perlport&quot;&gt;可移植性&lt;/a&gt;的更多信息，请参见perlport。</target>
        </trans-unit>
        <trans-unit id="09d1165dcd6590ca88ce45235db739b3730780ae" translate="yes" xml:space="preserve">
          <source>(W portable) The hexadecimal number you specified is larger than 2**32-1 (4294967295) and therefore non-portable between systems. See &lt;a href=&quot;perlport&quot;&gt;perlport&lt;/a&gt; for more on portability concerns.</source>
          <target state="translated">（W便携式）您指定的十六进制数大于2 ** 32-1（4294967295），因此在系统之间不可移植。有关&lt;a href=&quot;perlport&quot;&gt;可移植性&lt;/a&gt;的更多信息，请参见perlport。</target>
        </trans-unit>
        <trans-unit id="fc835297f2faad908ec35d66fe96ac88817ca399" translate="yes" xml:space="preserve">
          <source>(W portable) The octal number you specified is larger than 2**32-1 (4294967295) and therefore non-portable between systems. See &lt;a href=&quot;perlport&quot;&gt;perlport&lt;/a&gt; for more on portability concerns.</source>
          <target state="translated">（W便携式）您指定的八进制数字大于2 ** 32-1（4294967295），因此在系统之间不可移植。有关&lt;a href=&quot;perlport&quot;&gt;可移植性&lt;/a&gt;的更多信息，请参见perlport。</target>
        </trans-unit>
        <trans-unit id="64214d18f45799923abe2fb1d80cfb4e5a157cf3" translate="yes" xml:space="preserve">
          <source>(W portable) Using bit vector sizes larger than 32 is non-portable.</source>
          <target state="translated">（W便携式）使用大于32的位向量大小是不可移植的。</target>
        </trans-unit>
        <trans-unit id="d926270be302be5e7e03299af7637591efa9d859" translate="yes" xml:space="preserve">
          <source>(W precedence) Your program uses a bitwise logical operator in conjunction with a numeric comparison operator, like this :</source>
          <target state="translated">（W优先级）您的程序将按位逻辑运算符与数字比较运算符结合使用，如下所示：</target>
        </trans-unit>
        <trans-unit id="792bff25d5afceb382dc5952aa4d3237868dca22" translate="yes" xml:space="preserve">
          <source>(W printf) Perl does not understand the given format conversion. See &lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt;.</source>
          <target state="translated">（W printf）Perl不了解给定的格式转换。参见&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9c27ac7b8639b06bd0fbaa78cd260cb1fd460614" translate="yes" xml:space="preserve">
          <source>(W prototype) A prototype was declared in both the parentheses after the sub name and via the prototype attribute. The prototype in parentheses is useless, since it will be replaced by the prototype from the attribute before it's ever used.</source>
          <target state="translated">（W原型）在子名称后的括号中以及通过prototype属性声明了一个原型。括号中的原型是无用的，因为它将在使用之前被属性中的原型替换。</target>
        </trans-unit>
        <trans-unit id="33b95571f8339a2cc0606dafed862a4db48c3be9" translate="yes" xml:space="preserve">
          <source>(W prototype) You've called a function that has a prototype before the parser saw a definition or declaration for it, and Perl could not check that the call conforms to the prototype. You need to either add an early prototype declaration for the subroutine in question, or move the subroutine definition ahead of the call to get proper prototype checking. Alternatively, if you are certain that you're calling the function correctly, you may put an ampersand before the name to avoid the warning. See &lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt;.</source>
          <target state="translated">（W原型）您已经在解析器看到其定义或声明之前调用了具有原型的函数，并且Perl无法检查该调用是否符合该原型。您需要为有问题的子例程添加早期原型声明，或者将子例程定义移至调用之前以进行正确的原型检查。另外，如果确定正确调用了该函数，则可以在名称前加上一个＆符号，以避免出现警告。参见&lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="edd018a5f62f70fa66e12afd9da66c3f02d8c926" translate="yes" xml:space="preserve">
          <source>(W qw) qw() lists contain items separated by whitespace; as with literal strings, comment characters are not ignored, but are instead treated as literal data. (You may have used different delimiters than the parentheses shown here; braces are also frequently used.)</source>
          <target state="translated">（W qw）qw（）列表包含用空格分隔的项目；与文字字符串一样，不会忽略注释字符，而是将其视为文字数据。（您可能使用了与此处显示的括号不同的定界符；也经常使用大括号。）</target>
        </trans-unit>
        <trans-unit id="578fcce7799c47789b0adac33008237c84ca3a49" translate="yes" xml:space="preserve">
          <source>(W qw) qw() lists contain items separated by whitespace; therefore commas aren't needed to separate the items. (You may have used different delimiters than the parentheses shown here; braces are also frequently used.)</source>
          <target state="translated">（W qw）qw（）列表包含用空格分隔的项目；因此，不需要用逗号分隔项目。（您可能使用了与此处显示的括号不同的定界符；也经常使用大括号。）</target>
        </trans-unit>
        <trans-unit id="f98cb1c68560387dbc563580499439d4e545c148" translate="yes" xml:space="preserve">
          <source>(W recursion) This subroutine has called itself (directly or indirectly) 100 times more than it has returned. This probably indicates an infinite recursion, unless you're writing strange benchmark programs, in which case it indicates something else.</source>
          <target state="translated">（W递归）此子例程自身（直接或间接）的调用次数比返回的次数多100倍。除非您正在编写奇怪的基准程序，否则这可能表示无限递归，在这种情况下，它表示其他内容。</target>
        </trans-unit>
        <trans-unit id="47929167f9b9dbf125f892daabe93ee9bacbdfe6" translate="yes" xml:space="preserve">
          <source>(W redefine) You redefined a format. To suppress this warning, say</source>
          <target state="translated">（重新定义W）您重新定义了格式。要禁止显示此警告，请说</target>
        </trans-unit>
        <trans-unit id="7ea1097acd4664a0298a650f6b5ed50b0394a5e8" translate="yes" xml:space="preserve">
          <source>(W redefine) You redefined a subroutine. To suppress this warning, say</source>
          <target state="translated">（重新定义）重新定义了子例程。要禁止显示此警告，请说</target>
        </trans-unit>
        <trans-unit id="689f4b16660fc106afaec6518b73b97410cae44a" translate="yes" xml:space="preserve">
          <source>(W redefine)(S) You redefined a subroutine which had previously been eligible for inlining. See &lt;a href=&quot;perlsub#Constant-Functions&quot;&gt;Constant Functions in perlsub&lt;/a&gt; for commentary and workarounds.</source>
          <target state="translated">（W重新定义）（S）您重新定义了以前有资格进行内联的子例程。请参阅&lt;a href=&quot;perlsub#Constant-Functions&quot;&gt;perlsub中的常量函数以&lt;/a&gt;获取注释和解决方法。</target>
        </trans-unit>
        <trans-unit id="3855dda462903bfd0f1cb6416b2c27b1d50dfe13" translate="yes" xml:space="preserve">
          <source>(W redundant) You called a function with more arguments than other arguments you supplied indicated would be needed. Currently only emitted when a printf-type format required fewer arguments than were supplied, but might be used in the future for e.g. &lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;.</source>
          <target state="translated">（W冗余）您调用的函数所需要的参数要比提供的其他参数多。当前仅在printf-type格式需要的参数少于提供的参数时才发出，但将来可能会用于例如&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1214eb3b51b8ff26fb1eb34d1309ab5f40c42cad" translate="yes" xml:space="preserve">
          <source>(W regexp) (only under &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re 'strict'&lt;/code&gt; or within &lt;code&gt;(?[...])&lt;/code&gt; )</source>
          <target state="translated">（W regexp）（仅在 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re 'strict'&lt;/code&gt; 或 &lt;code&gt;(?[...])&lt;/code&gt; 以内）</target>
        </trans-unit>
        <trans-unit id="afe1f8b1a4d34adb7a2f8d5f9d1021945e4cb7e2" translate="yes" xml:space="preserve">
          <source>(W regexp) Minima should be less than or equal to maxima. If you really want your regexp to match something 0 times, just put {0}.</source>
          <target state="translated">（W regexp）最小值应小于或等于最大值。如果您确实希望您的正则表达式匹配0次，则只需输入{0}。</target>
        </trans-unit>
        <trans-unit id="310e10e88bd557a50ffed62c0a92ae3cc181eb6a" translate="yes" xml:space="preserve">
          <source>(W regexp) Named Unicode character escapes (&lt;code&gt;\N{...}&lt;/code&gt; ) may return a zero-length sequence. When such an escape is used in a character class its behavior is not well defined. Check that the correct escape has been used, and the correct charname handler is in scope.</source>
          <target state="translated">（W regexp）命名的Unicode字符转义（ &lt;code&gt;\N{...}&lt;/code&gt; ）可能返回零长度的序列。在字符类中使用这种转义符时，其行为没有得到很好的定义。检查是否使用了正确的转义符，并且作用域中包含正确的字符名处理程序。</target>
        </trans-unit>
        <trans-unit id="cac34d442feedb85a4f7352a0dc2a4c7f282aa35" translate="yes" xml:space="preserve">
          <source>(W regexp) Named Unicode character escapes &lt;code&gt;(\N{...})&lt;/code&gt; may return a multi-character sequence. Even though a character class is supposed to match just one character of input, perl will match the whole thing correctly, except when the class is inverted (&lt;code&gt;[^...]&lt;/code&gt;), or the escape is the beginning or final end point of a range. For these, what should happen isn't clear at all. In these circumstances, Perl discards all but the first character of the returned sequence, which is not likely what you want.</source>
          <target state="translated">（W regexp）命名的Unicode字符转义符 &lt;code&gt;(\N{...})&lt;/code&gt; 可能返回多字符序列。即使一个字符类应该只匹配输入的一个字符，但perl会正确地匹配整个内容，除非该类被倒置（ &lt;code&gt;[^...]&lt;/code&gt; ）或转义是a的开始或结束点范围。对于这些，到底发生了什么尚不清楚。在这种情况下，Perl会丢弃除返回序列的第一个字符以外的所有字符，这不太可能是您想要的。</target>
        </trans-unit>
        <trans-unit id="979a02ee883c9ec2b29353dd7dff24d69eb2d3ce" translate="yes" xml:space="preserve">
          <source>(W regexp) The &lt;code&gt;p&lt;/code&gt; modifier cannot be turned off once set. Trying to do so is futile.</source>
          <target state="translated">（W regexp）一旦设置 &lt;code&gt;p&lt;/code&gt; 修饰符就无法关闭。尝试这样做是徒劳的。</target>
        </trans-unit>
        <trans-unit id="8836615448ed9381b2dd52c5b2fbe6a905d13b4d" translate="yes" xml:space="preserve">
          <source>(W regexp) The character class constructs [: :], [= =], and [. .] go</source>
          <target state="translated">（W regexp）字符类构造[：：]，[= =]和[。。] 走</target>
        </trans-unit>
        <trans-unit id="9c9b13dc35d66abc0e2ef6aa56dcc54220fb0f95" translate="yes" xml:space="preserve">
          <source>(W regexp) The pattern you've specified would be an infinite loop if the regular expression engine didn't specifically check for that. The &amp;lt;-- HERE shows whereabouts in the regular expression the problem was discovered. See &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;.</source>
          <target state="translated">（W regexp）如果正则表达式引擎没有专门检查该模式，则您指定的模式将是一个无限循环。&amp;lt;-HERE在正则表达式中显示发现问题的行踪。参见&lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="34e218ab696b9069c9cee1fbdc8441bff0b2fd36" translate="yes" xml:space="preserve">
          <source>(W regexp) The regular expression engine uses recursion in complex situations where back-tracking is required. Recursion depth is limited to 32766, or perhaps less in architectures where the stack cannot grow arbitrarily. (&quot;Simple&quot; and &quot;medium&quot; situations are handled without recursion and are not subject to a limit.) Try shortening the string under examination; looping in Perl code (e.g. with &lt;code&gt;while&lt;/code&gt; ) rather than in the regular expression engine; or rewriting the regular expression so that it is simpler or backtracks less. (See &lt;a href=&quot;perlfaq2&quot;&gt;perlfaq2&lt;/a&gt; for information on</source>
          <target state="translated">（W regexp）正则表达式引擎在需要回溯的复杂情况下使用递归。递归深度限制为32766，或者在堆栈无法任意增长的体系结构中可能更少。 （&amp;ldquo;简单&amp;rdquo;和&amp;ldquo;中等&amp;rdquo;情况无需递归处理，不受限制。）尝试缩短正在检查的字符串；在Perl代码中循环（例如with &lt;code&gt;while&lt;/code&gt; ），而不是在正则表达式引擎中循环；或重写正则表达式，使其更简单或减少回溯。 （有关以下信息，请参见&lt;a href=&quot;perlfaq2&quot;&gt;perlfaq2&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e80a3d940f8d1e707b0bc892519eccf16aea2d95" translate="yes" xml:space="preserve">
          <source>(W regexp) You applied a regular expression quantifier in a place where it makes no sense, such as on a zero-width assertion. Try putting the quantifier inside the assertion instead. For example, the way to match &quot;abc&quot; provided that it is followed by three repetitions of &quot;xyz&quot; is &lt;code&gt;/abc(?=(?:xyz){3})/&lt;/code&gt; , not &lt;code&gt;/abc(?=xyz){3}/&lt;/code&gt; .</source>
          <target state="translated">（W regexp）您将正则表达式量词应用在没有意义的地方，例如零宽度断言。尝试将量词放在断言中。例如，匹配&amp;ldquo; abc&amp;rdquo;的方式是在后面加上三个重复的&amp;ldquo; xyz&amp;rdquo;的是 &lt;code&gt;/abc(?=(?:xyz){3})/&lt;/code&gt; ，而不是 &lt;code&gt;/abc(?=xyz){3}/&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="136a9995a2e015be707b998b2100f17123be4162" translate="yes" xml:space="preserve">
          <source>(W regexp) You have used an internal modifier such as (?-o) that has no meaning unless removed from the entire regexp:</source>
          <target state="translated">（W regexp）您使用了一个内部修饰符，例如（？-o），除非从整个regexp中删除，否则它没有任何意义：</target>
        </trans-unit>
        <trans-unit id="55d68e94b03df6dbd58f4c0d015f0fad8b599b8d" translate="yes" xml:space="preserve">
          <source>(W regexp) You have used an internal modifier such as (?o) that has no meaning unless applied to the entire regexp:</source>
          <target state="translated">（W regexp）您使用了没有意义的内部修饰符，例如（？o），除非应用于整个regexp：</target>
        </trans-unit>
        <trans-unit id="4dff6ec1a19e7de52b41046a33967e1771a1d39a" translate="yes" xml:space="preserve">
          <source>(W regexp) You specified something like these:</source>
          <target state="translated">（W regexp）您指定了以下内容：</target>
        </trans-unit>
        <trans-unit id="a554f4535489ad2df9ed3cca605416c0a1c6af75" translate="yes" xml:space="preserve">
          <source>(W regexp) You used a Unicode boundary (&lt;code&gt;\b{...}&lt;/code&gt; or &lt;code&gt;\B{...}&lt;/code&gt; ) in a portion of a regular expression where the character set modifiers &lt;code&gt;/a&lt;/code&gt; or &lt;code&gt;/aa&lt;/code&gt; are in effect. These two modifiers indicate an ASCII interpretation, and this doesn't make sense for a Unicode defintion. The generated regular expression will compile so that the boundary uses all of Unicode. No other portion of the regular expression is affected.</source>
          <target state="translated">（W regexp）您在正则表达式的一部分中使用了Unicode边界（ &lt;code&gt;\b{...}&lt;/code&gt; 或 &lt;code&gt;\B{...}&lt;/code&gt; ），其中字符集修饰符 &lt;code&gt;/a&lt;/code&gt; 或 &lt;code&gt;/aa&lt;/code&gt; 生效。这两个修饰符表示ASCII解释，这对于Unicode定义没有意义。生成的正则表达式将进行编译，以便边界使用所有Unicode。正则表达式的其他部分均不受影响。</target>
        </trans-unit>
        <trans-unit id="c858a1bb6c94f36a1ad78cfa5e12eef38835bc65" translate="yes" xml:space="preserve">
          <source>(W regexp) You used a backslash-character combination which is not recognized by Perl inside character classes. The character was understood literally, but this may change in a future version of Perl. The &amp;lt;-- HERE shows whereabouts in the regular expression the escape was discovered.</source>
          <target state="translated">（W regexp）您使用了反斜杠-字符组合，Perl在字符类中无法识别该组合。从字面上理解了该字符，但是在Perl的将来版本中可能会发生变化。&amp;lt;-HERE在正则表达式中显示发现逃生的行踪。</target>
        </trans-unit>
        <trans-unit id="f4b5c5f036648db103b8f6b0d672a6297b55d830" translate="yes" xml:space="preserve">
          <source>(W regexp) You used a backslash-character combination which is not recognized by Perl. The character(s) were understood literally, but this may change in a future version of Perl. The &amp;lt;-- HERE shows whereabouts in the regular expression the escape was discovered.</source>
          <target state="translated">（W regexp）您使用了Perl无法识别的反斜杠字符组合。从字面上理解了这些字符，但是在Perl的将来版本中可能会发生变化。&amp;lt;-HERE在正则表达式中显示发现逃生的行踪。</target>
        </trans-unit>
        <trans-unit id="726bc29b79e757efbbf6291f3feab7738f4156dd" translate="yes" xml:space="preserve">
          <source>(W regexp) You used the /c modifier in a substitution. The /c modifier is not presently meaningful in substitutions.</source>
          <target state="translated">（W regexp）您在替换中使用了/ c修饰符。/ c修饰符目前在替换中没有意义。</target>
        </trans-unit>
        <trans-unit id="f9138d3ceb624a8a5b53b139e9b01cf402ccd97d" translate="yes" xml:space="preserve">
          <source>(W regexp) You used the /c modifier with a regex operand, but didn't use the /g modifier. Currently, /c is meaningful only when /g is used. (This may change in the future.)</source>
          <target state="translated">（W regexp）您将/ c修饰符与正则表达式操作数一起使用，但未使用/ g修饰符。当前，仅当使用/ g时，/ c才有意义。（将来可能会改变。）</target>
        </trans-unit>
        <trans-unit id="05230a0b7de0944fc11913778fd1b00ae30b0de3" translate="yes" xml:space="preserve">
          <source>(W regexp) You used the /g modifier on the pattern for a &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; operator. Since &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; always tries to match the pattern repeatedly, the &lt;code&gt;/g&lt;/code&gt; has no effect.</source>
          <target state="translated">（W regexp）您在模式上使用了/ g修饰符作为 &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; 运算符。由于 &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; 总是尝试重复匹配模式，因此 &lt;code&gt;/g&lt;/code&gt; 无效。</target>
        </trans-unit>
        <trans-unit id="fce92f52ceba5999bee49caf7c2b501e30f4a70d" translate="yes" xml:space="preserve">
          <source>(W regexp)(F) A character class range must start and end at a literal character, not another character class like &lt;code&gt;\d&lt;/code&gt; or &lt;code&gt;[:alpha:]&lt;/code&gt;. The &quot;-&quot; in your false range is interpreted as a literal &quot;-&quot;. In a &lt;code&gt;(?[...])&lt;/code&gt; construct, this is an error, rather than a warning. Consider quoting the &quot;-&quot;, &quot;\-&quot;. The &amp;lt;-- HERE shows whereabouts in the regular expression the problem was discovered. See &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;.</source>
          <target state="translated">（W regexp）（F）字符类范围必须以文字字符开始和结束，而不是像 &lt;code&gt;\d&lt;/code&gt; 或 &lt;code&gt;[:alpha:]&lt;/code&gt; 这样的其他字符类。错误范围中的&amp;ldquo;-&amp;rdquo;被解释为文字&amp;ldquo;-&amp;rdquo;。在 &lt;code&gt;(?[...])&lt;/code&gt; 构造中，这是一个错误，而不是警告。考虑引用&amp;ldquo;-&amp;rdquo;，&amp;ldquo; \-&amp;rdquo;。 &amp;lt;-HERE在正则表达式中显示发现问题的行踪。参见&lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d8e9fa34a2adca3b8cdfab34d848f2df35e1e065" translate="yes" xml:space="preserve">
          <source>(W regexp)(F) The numeric escape (for example &lt;code&gt;\xHH&lt;/code&gt; ) of value &amp;lt; 256 didn't correspond to a single character through the conversion from the encoding specified by the encoding pragma. The escape was replaced with REPLACEMENT CHARACTER (U+FFFD) instead, except within &lt;code&gt;(?[   ])&lt;/code&gt; , where it is a fatal error. The &amp;lt;-- HERE shows whereabouts in the regular expression the escape was discovered.</source>
          <target state="translated">（W regexp）（F）值&amp;lt;256 的数字转义 &lt;code&gt;\xHH&lt;/code&gt; （例如\ xHH）与通过编码用法指定的编码转换而来的单个字符不对应。转义用替换字符（U + FFFD）代替，除了 &lt;code&gt;(?[ ])&lt;/code&gt; ，这是一个致命错误。&amp;lt;-HERE在正则表达式中显示发现逃生的行踪。</target>
        </trans-unit>
        <trans-unit id="ab5d2805454216bda7ba450af2c1070e6d07a77b" translate="yes" xml:space="preserve">
          <source>(W reserved) A lowercase attribute name was used that had a package-specific handler. That name might have a meaning to Perl itself some day, even though it doesn't yet. Perhaps you should use a mixed-case attribute name, instead. See &lt;a href=&quot;attributes&quot;&gt;attributes&lt;/a&gt;.</source>
          <target state="translated">（保留W）使用小写的属性名称，该名称具有特定于包的处理程序。该名称可能有一天对Perl本身具有含义，即使现在还没有。也许您应该使用大小写混合的名称。查看&lt;a href=&quot;attributes&quot;&gt;属性&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="28a74896a26f8e20c063399ec49864ab28f3d526" translate="yes" xml:space="preserve">
          <source>(W reserved) You used a bareword that might someday be claimed as a reserved word. It's best to put such a word in quotes, or capitalize it somehow, or insert an underbar into it. You might also declare it as a subroutine.</source>
          <target state="translated">（W保留）您使用了可能有一天被称为保留字的空词。最好在引号中加上这样的词，或以某种方式将其大写，或在其中插入下划线。您也可以将其声明为子例程。</target>
        </trans-unit>
        <trans-unit id="b7f56b2509559b232b5aa9bdc88fbfd521c4a370" translate="yes" xml:space="preserve">
          <source>(W semicolon) A nearby syntax error was probably caused by a missing semicolon, or possibly some other missing operator, such as a comma.</source>
          <target state="translated">（W分号）附近的语法错误可能是由于缺少分号或其他缺少的运算符（例如逗号）引起的。</target>
        </trans-unit>
        <trans-unit id="c490a0614ad09a273c847f914c444441bd43e759" translate="yes" xml:space="preserve">
          <source>(W signal) Perl has detected that it is being run with the SIGCHLD signal (sometimes known as SIGCLD) disabled. Since disabling this signal will interfere with proper determination of exit status of child processes, Perl has reset the signal to its default value. This situation typically indicates that the parent program under which Perl may be running (e.g. cron) is being very careless.</source>
          <target state="translated">（W信号）Perl已检测到正在禁用SIGCHLD信号（有时称为SIGCLD）的情况下运行它。由于禁用此信号将干扰子进程退出状态的正确确定，因此Perl已将信号重置为其默认值。这种情况通常表明Perl可能在其下运行的父程序（例如cron）非常粗心。</target>
        </trans-unit>
        <trans-unit id="d36a3561d6f20cf601cc8fdcd8a0b693b632d4af" translate="yes" xml:space="preserve">
          <source>(W signal) The signal handler named in %SIG doesn't, in fact, exist. Perhaps you put it into the wrong package?</source>
          <target state="translated">（W信号）实际上不存在％SIG中命名的信号处理程序。也许您把它放错了包装？</target>
        </trans-unit>
        <trans-unit id="ebc35d5a02e4c063b197676d1cbd12f47c19df5b" translate="yes" xml:space="preserve">
          <source>(W signal) You specified a signal name as a subscript to %SIG that was not recognized. Say &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt; -l&lt;/code&gt; in your shell to see the valid signal names on your system.</source>
          <target state="translated">（W信号）您将信号名称指定为无法识别的％SIG的下标。在shell中说 &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt; -l&lt;/code&gt; 可以查看系统上的有效信号名称。</target>
        </trans-unit>
        <trans-unit id="95ce3889bdccfd28d07038434edbc2f2493245c4" translate="yes" xml:space="preserve">
          <source>(W substr) You supplied a reference as the first argument to substr() used as an lvalue, which is pretty strange. Perhaps you forgot to dereference it first. See &lt;a href=&quot;functions/substr&quot;&gt;substr&lt;/a&gt;.</source>
          <target state="translated">（W substr）您提供了一个引用作为substr（）的第一个参数用作左值，这很奇怪。也许您忘了先取消引用它。参见&lt;a href=&quot;functions/substr&quot;&gt;substr&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="45bd593b8e5b2713b2a66073ce71b9f0acf28d3e" translate="yes" xml:space="preserve">
          <source>(W substr)(F) You tried to reference a substr() that pointed outside of a string. That is, the absolute value of the offset was larger than the length of the string. See &lt;a href=&quot;functions/substr&quot;&gt;substr&lt;/a&gt;. This warning is fatal if substr is used in an lvalue context (as the left hand side of an assignment or as a subroutine argument for example).</source>
          <target state="translated">（W substr）（F）您试图引用指向字符串外部的substr（）。即，偏移量的绝对值大于字符串的长度。参见&lt;a href=&quot;functions/substr&quot;&gt;substr&lt;/a&gt;。如果在左值上下文中使用substr（例如，作为赋值的左侧或作为子例程参数），则此警告是致命的。</target>
        </trans-unit>
        <trans-unit id="3d3783a27c8ae64e0627e00b19a488f16e27fa85" translate="yes" xml:space="preserve">
          <source>(W syntax) A format specified more picture fields than the next line supplied. See &lt;a href=&quot;perlform&quot;&gt;perlform&lt;/a&gt;.</source>
          <target state="translated">（W语法）一种格式指定的图片字段多于所提供的下一行。参见&lt;a href=&quot;perlform&quot;&gt;perlform&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5675d244b6de72370cd69ca41f42a80de4dd6d27" translate="yes" xml:space="preserve">
          <source>(W syntax) An underscore (underbar) in a numeric constant did not separate two digits.</source>
          <target state="translated">（W语法）数字常量中的下划线（下划线）未分隔两位。</target>
        </trans-unit>
        <trans-unit id="1928c9501e662b0f8de723a59ea0b97a4ece6c53" translate="yes" xml:space="preserve">
          <source>(W syntax) In an ordinary expression, backslash is a unary operator that creates a reference to its argument. The use of backslash to indicate a backreference to a matched substring is valid only as part of a regular expression pattern. Trying to do this in ordinary Perl code produces a value that prints out looking like SCALAR(0xdecaf). Use the $1 form instead.</source>
          <target state="translated">（W语法）在普通表达式中，反斜杠是一元运算符，可创建对其参数的引用。使用反斜杠表示对匹配子字符串的反向引用仅在正则表达式模式中有效。尝试在普通的Perl代码中执行此操作，将产生一个看起来像SCALAR（0xdecaf）的值。请改用$ 1表格。</target>
        </trans-unit>
        <trans-unit id="8f8213e084e20348a91dcc660ab8e17dcde1e497" translate="yes" xml:space="preserve">
          <source>(W syntax) In scalar context, you've used a hash key/value slice (indicated by %) to select a single element of a hash. Generally it's better to ask for a scalar value (indicated by $). The difference is that &lt;code&gt;$foo{&amp;amp;bar}&lt;/code&gt; always behaves like a scalar, both in the value it returns and when evaluating its argument, while &lt;code&gt;@foo{&amp;amp;bar}&lt;/code&gt; and provides a list context to its subscript, which can do weird things if you're expecting only one subscript. When called in list context, it also returns the key in addition to the value.</source>
          <target state="translated">（W语法）在标量上下文中，您已使用哈希键/值切片（以％表示）来选择哈希的单个元素。通常，最好索取标量值（用$表示）。区别在于 &lt;code&gt;$foo{&amp;amp;bar}&lt;/code&gt; 在返回值和评估其参数时总是表现得像标量，而 &lt;code&gt;@foo{&amp;amp;bar}&lt;/code&gt; 并为其下标提供列表上下文，如果您这样做，它可能会产生奇怪的结果只期望一个下标。在列表上下文中调用时，除值外，它还返回键。</target>
        </trans-unit>
        <trans-unit id="139c16302575faefa44e53211603b79b770480b6" translate="yes" xml:space="preserve">
          <source>(W syntax) In scalar context, you've used an array index/value slice (indicated by %) to select a single element of an array. Generally it's better to ask for a scalar value (indicated by $). The difference is that &lt;code&gt;$foo[&amp;amp;bar]&lt;/code&gt; always behaves like a scalar, both in the value it returns and when evaluating its argument, while &lt;code&gt;%foo[&amp;amp;bar]&lt;/code&gt; provides a list context to its subscript, which can do weird things if you're expecting only one subscript. When called in list context, it also returns the index (what &lt;code&gt;&amp;amp;bar&lt;/code&gt; returns) in addition to the value.</source>
          <target state="translated">（W语法）在标量上下文中，已使用数组索引/值切片（以％表示）选择数组的单个元素。通常，最好索取标量值（用$表示）。不同之处在于 &lt;code&gt;$foo[&amp;amp;bar]&lt;/code&gt; 在返回值和评估其参数时总是表现得像标量，而 &lt;code&gt;%foo[&amp;amp;bar]&lt;/code&gt; 为它的下标提供列表上下文，如果您要只期望一个下标。在列表上下文中调用时，除值外，它还返回索引（ &lt;code&gt;&amp;amp;bar&lt;/code&gt; 返回的内容）。</target>
        </trans-unit>
        <trans-unit id="d8bea33901ad329853cff0f65df1ca724eb5c0d4" translate="yes" xml:space="preserve">
          <source>(W syntax) Multidimensional arrays aren't written like &lt;code&gt;$foo[1,2,3]&lt;/code&gt; . They're written like &lt;code&gt;$foo[1][2][3]&lt;/code&gt; , as in C.</source>
          <target state="translated">（W语法）多维数组的写法不像 &lt;code&gt;$foo[1,2,3]&lt;/code&gt; 。它们像 &lt;code&gt;$foo[1][2][3]&lt;/code&gt; 一样被编写，就像在C中一样。</target>
        </trans-unit>
        <trans-unit id="04868e0f94e46c3fd4ce21403945fec70d551ecb" translate="yes" xml:space="preserve">
          <source>(W syntax) Outside of patterns, backreferences live on as variables. The use of backslashes is grandfathered on the right-hand side of a substitution, but stylistically it's better to use the variable form because other Perl programmers will expect it, and it works better if there are more than 9 backreferences.</source>
          <target state="translated">（W语法）在模式之外，后向引用作为变量存在。反斜杠的使用位于替换的右侧，但从风格上讲，最好使用变量形式，因为其他Perl程序员会期望使用这种形式，并且如果有9个以上的反向引用，它会更好。</target>
        </trans-unit>
        <trans-unit id="86e02829ec2db0aad141e5ff8b7b48fa26969bba" translate="yes" xml:space="preserve">
          <source>(W syntax) The &lt;code&gt;\c&lt;i&gt;X&lt;/i&gt;&lt;/code&gt; construct is intended to be a way to specify non-printable characters. You used it for a printable one, which is better written as simply itself, perhaps preceded by a backslash for non-word characters. Doing it the way you did is not portable between ASCII and EBCDIC platforms.</source>
          <target state="translated">（W语法） &lt;code&gt;\c&lt;i&gt;X&lt;/i&gt;&lt;/code&gt; 构造旨在作为一种指定不可打印字符的方法。您将其用于可打印的文本，最好将其写成简单的自身，或者在非单词字符前加反斜杠。以这种方式进行操作不能在ASCII和EBCDIC平台之间移植。</target>
        </trans-unit>
        <trans-unit id="1e1aacc7413fa4819361698891a0668505640b7d" translate="yes" xml:space="preserve">
          <source>(W syntax) The @ISA array contained the name of another package that doesn't seem to exist.</source>
          <target state="translated">（W语法）@ISA数组包含另一个似乎不存在的程序包的名称。</target>
        </trans-unit>
        <trans-unit id="f851398285267cd295332fc573c6ef5e8844f07f" translate="yes" xml:space="preserve">
          <source>(W syntax) The localization of lvalues such as &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local($x=10)&lt;/a&gt;&lt;/code&gt; is legal, but in fact the local() currently has no effect. This may change at some point in the future, but in the meantime such code is discouraged.</source>
          <target state="translated">（W语法）诸如 &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local($x=10)&lt;/a&gt;&lt;/code&gt; 这样的左值的本地化是合法的，但实际上local（）当前无效。将来可能会有所改变，但与此同时不鼓励使用此类代码。</target>
        </trans-unit>
        <trans-unit id="868eed42e719045825fe91387bc9673310dc7aec" translate="yes" xml:space="preserve">
          <source>(W syntax) The non-matching operator is !~, not !=~. !=~ will be interpreted as the != (numeric not equal) and ~ (1's complement) operators: probably not what you intended.</source>
          <target state="translated">（W语法）不匹配的运算符是！〜，而不是！=〜。！=〜将被解释为！=（数字不等于）和〜（1的补码）：可能不是您想要的。</target>
        </trans-unit>
        <trans-unit id="aabd129f499f5ee7efbffa7af96de54720d08c45" translate="yes" xml:space="preserve">
          <source>(W syntax) The package variables $a and $b are used for sort comparisons. You used $a or $b in as an operand to the &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; or &lt;code&gt;cmp&lt;/code&gt; operator inside a sort comparison block, and the variable had earlier been declared as a lexical variable. Either qualify the sort variable with the package name, or rename the lexical variable.</source>
          <target state="translated">（W语法）包变量$ a和$ b用于排序比较。您在排序比较块内将$ a或$ b用作 &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; 或 &lt;code&gt;cmp&lt;/code&gt; 运算符的操作数，并且该变量先前已声明为词法变量。用包名称限定sort变量，或重命名词汇变量。</target>
        </trans-unit>
        <trans-unit id="dc7dad0ebf00491f7af4d2d3eac617947a87a3f9" translate="yes" xml:space="preserve">
          <source>(W syntax) There is a possible problem with the mixing of a control flow operator (e.g. &lt;code&gt;&lt;a href=&quot;functions/return&quot;&gt;return&lt;/a&gt;&lt;/code&gt;) and a low-precedence operator like &lt;code&gt;or&lt;/code&gt; . Consider:</source>
          <target state="translated">（W语法）有一个带控制流程操作者的混合（例如，可能出现的问题 &lt;code&gt;&lt;a href=&quot;functions/return&quot;&gt;return&lt;/a&gt;&lt;/code&gt; ）和低优先级操作等 &lt;code&gt;or&lt;/code&gt; 。考虑：</target>
        </trans-unit>
        <trans-unit id="3163cc17558e27986562b985237677c957ba5433" translate="yes" xml:space="preserve">
          <source>(W syntax) You assigned a bareword as a signal handler name. Unfortunately, you already have a subroutine of that name declared, which means that Perl 5 will try to call the subroutine when the assignment is executed, which is probably not what you want. (If it IS what you want, put an &amp;amp; in front.)</source>
          <target state="translated">（W语法）您分配了一个裸词作为信号处理程序名称。不幸的是，您已经声明了该名称的子例程，这意味着Perl 5将在执行分配时尝试调用该子例程，这可能不是您想要的。（如果这是您想要的，请在前面加上＆。）</target>
        </trans-unit>
        <trans-unit id="3f6363d73db132f7df27b47f3074c7aeebcfa96a" translate="yes" xml:space="preserve">
          <source>(W syntax) You have used a pattern where Perl expected to find a string, as in the first argument to &lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join&lt;/a&gt;&lt;/code&gt;. Perl will treat the true or false result of matching the pattern against $_ as the string, which is probably not what you had in mind.</source>
          <target state="translated">（W语法）您使用了一种模式，其中Perl希望找到一个字符串，如 &lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join&lt;/a&gt;&lt;/code&gt; 的第一个参数一样。Perl会将与$ _匹配模式的正确或错误结果视为字符串，这可能与您的想法不符。</target>
        </trans-unit>
        <trans-unit id="9cd4a5c747e6ea0c6874c1cfe913ee77b669c12b" translate="yes" xml:space="preserve">
          <source>(W syntax) You said</source>
          <target state="translated">（W语法）您说</target>
        </trans-unit>
        <trans-unit id="4d42f0406bbe7b69e8abda38fcb04298e09064a5" translate="yes" xml:space="preserve">
          <source>(W syntax) You used &lt;code&gt;$[&lt;/code&gt; in a comparison, such as:</source>
          <target state="translated">（W语法）您在比较中使用了 &lt;code&gt;$[&lt;/code&gt; ，例如：</target>
        </trans-unit>
        <trans-unit id="33175e7b41467f7650bcaf1be588d001196cdd86" translate="yes" xml:space="preserve">
          <source>(W syntax) You used length() on either an array or a hash when you probably wanted a count of the items.</source>
          <target state="translated">（W语法）当您可能希望对项目进行计数时，可以在数组或哈希上使用length（）。</target>
        </trans-unit>
        <trans-unit id="5612f1be811be95b9ea2e71d0bc87cb76a68fc16" translate="yes" xml:space="preserve">
          <source>(W syntax) You used the push() or unshift() function with no arguments apart from the array, like &lt;code&gt;&lt;a href=&quot;functions/push&quot;&gt;push(@x)&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/unshift&quot;&gt;unshift(@foo)&lt;/a&gt;&lt;/code&gt;. That won't usually have any effect on the array, so is completely useless. It's possible in principle that push(@tied_array) could have some effect if the array is tied to a class which implements a PUSH method. If so, you can write it as &lt;code&gt;&lt;a href=&quot;functions/push&quot;&gt;push(@tied_array,())&lt;/a&gt;&lt;/code&gt; to avoid this warning.</source>
          <target state="translated">（W语法）您使用push（）或unshift（）函数时，除了数组之外没有任何参数，例如 &lt;code&gt;&lt;a href=&quot;functions/push&quot;&gt;push(@x)&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;functions/unshift&quot;&gt;unshift(@foo)&lt;/a&gt;&lt;/code&gt; 或unshift（@foo）。这通常不会对数组产生任何影响，因此完全没有用。从原理上讲，如果将数组绑定到实现PUSH方法的类，则push（@tied_array）可能会起作用。如果是这样，可以将其写为 &lt;code&gt;&lt;a href=&quot;functions/push&quot;&gt;push(@tied_array,())&lt;/a&gt;&lt;/code&gt; 以避免出现此警告。</target>
        </trans-unit>
        <trans-unit id="9d9cf6e3535b5c2226e9e739821bfc01062bb73b" translate="yes" xml:space="preserve">
          <source>(W syntax) You wrote your assignment operator backwards. The = must always come last, to avoid ambiguity with subsequent unary operators.</source>
          <target state="translated">（W语法）您向后编写了赋值运算符。=必须始终排在最后，以避免与后续的一元运算符产生歧义。</target>
        </trans-unit>
        <trans-unit id="0988dc3825f261bfe7e6ca09e93a7ef79f9698f8" translate="yes" xml:space="preserve">
          <source>(W syntax) You've run afoul of the rule that says that any list operator followed by parentheses turns into a function, with all the list operators arguments found inside the parentheses. See &lt;a href=&quot;perlop#Terms-and-List-Operators-(Leftward)&quot;&gt;Terms and List Operators (Leftward) in perlop&lt;/a&gt;.</source>
          <target state="translated">（W语法）您违反了该规则，该规则说任何列表运算符后跟括号都会变成一个函数，所有列表运算符参数都放在括号内。请参阅&lt;a href=&quot;perlop#Terms-and-List-Operators-(Leftward)&quot;&gt;perlop中的术语和列表运算符（向左）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8e677e4399169ad9de0bcb39499a466a52862aad" translate="yes" xml:space="preserve">
          <source>(W syntax) You've used a hash slice (indicated by @) to select a single element of a hash. Generally it's better to ask for a scalar value (indicated by $). The difference is that &lt;code&gt;$foo{&amp;amp;bar}&lt;/code&gt; always behaves like a scalar, both when assigning to it and when evaluating its argument, while &lt;code&gt;@foo{&amp;amp;bar}&lt;/code&gt; behaves like a list when you assign to it, and provides a list context to its subscript, which can do weird things if you're expecting only one subscript.</source>
          <target state="translated">（W语法）您已使用哈希切片（由@表示）选择哈希的单个元素。通常，最好索取标量值（用$表示）。不同之处在于 &lt;code&gt;$foo{&amp;amp;bar}&lt;/code&gt; 在分配给它和评估其参数时总是表现得像一个标量，而 &lt;code&gt;@foo{&amp;amp;bar}&lt;/code&gt; 分配给它时的表现就像一个列表，并为其下标提供列表上下文，如果您只期望一个下标，这可能会做奇怪的事情。</target>
        </trans-unit>
        <trans-unit id="95b0a75562e174b2496250be14ddc21db7f4d104" translate="yes" xml:space="preserve">
          <source>(W syntax) You've used an array slice (indicated by @) to select a single element of an array. Generally it's better to ask for a scalar value (indicated by $). The difference is that &lt;code&gt;$foo[&amp;amp;bar]&lt;/code&gt; always behaves like a scalar, both when assigning to it and when evaluating its argument, while &lt;code&gt;@foo[&amp;amp;bar]&lt;/code&gt; behaves like a list when you assign to it, and provides a list context to its subscript, which can do weird things if you're expecting only one subscript.</source>
          <target state="translated">（W语法）您已使用数组切片（由@表示）选择数组的单个元素。通常，最好索取标量值（用$表示）。区别在于 &lt;code&gt;$foo[&amp;amp;bar]&lt;/code&gt; 在分配给它和评估其参数时总是表现得像一个标量，而 &lt;code&gt;@foo[&amp;amp;bar]&lt;/code&gt; 分配给它时的表现就像一个列表，并为其下标提供列表上下文，如果您只期望一个下标，这可能会做奇怪的事情。</target>
        </trans-unit>
        <trans-unit id="641f51994699613e1549f7ef209d11a26e2b585e" translate="yes" xml:space="preserve">
          <source>(W syscalls) Embedded \0 characters in pathnames or other system call arguments produce a warning as of 5.20. The parts after the \0 were formerly ignored by system calls.</source>
          <target state="translated">（W系统调用）路径名或其他系统调用参数中的嵌入式\ 0字符从5.20开始产生警告。\ 0之后的部分以前被系统调用忽略。</target>
        </trans-unit>
        <trans-unit id="eea1d51b89def0acf7f618b47547913acc879ac7" translate="yes" xml:space="preserve">
          <source>(W taint, deprecated) You have supplied &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system()&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec()&lt;/a&gt;&lt;/code&gt; with multiple arguments and at least one of them is tainted. This used to be allowed but will become a fatal error in a future version of perl. Untaint your arguments. See &lt;a href=&quot;perlsec&quot;&gt;perlsec&lt;/a&gt;.</source>
          <target state="translated">（已弃用W taint）您已为 &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system()&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec()&lt;/a&gt;&lt;/code&gt; 提供了多个参数，并且至少其中一个被污染。以前允许这样做，但在perl的未来版本中将成为致命错误。取消您的论点。参见&lt;a href=&quot;perlsec&quot;&gt;perlsec&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="87212ba40dbca26f039d3c5f4668d06844b8cebb" translate="yes" xml:space="preserve">
          <source>(W uninitialized) An undefined value was used as if it were already defined. It was interpreted as a &quot;&quot; or a 0, but maybe it was a mistake. To suppress this warning assign a defined value to your variables.</source>
          <target state="translated">（W未初始化）使用未定义的值，就好像它已经被定义一样。它被解释为&amp;ldquo;&amp;rdquo;或0，但可能是一个错误。要消除此警告，请为变量分配一个已定义的值。</target>
        </trans-unit>
        <trans-unit id="c21109fd4c9277652f34f7607902e64df01bc950" translate="yes" xml:space="preserve">
          <source>(W unopened) An I/O operation was attempted on a filehandle that was never initialized. You need to do an open(), a sysopen(), or a socket() call, or call a constructor from the FileHandle package.</source>
          <target state="translated">（未打开W）对从未初始化的文件句柄尝试了I / O操作。您需要执行open（），sysopen（）或socket（）调用，或者从FileHandle包中调用构造函数。</target>
        </trans-unit>
        <trans-unit id="9d13ce165320d52b11e43e90a5f319b3dff07700" translate="yes" xml:space="preserve">
          <source>(W unopened) You tried binmode() on a filehandle that was never opened. Check your control flow and number of arguments.</source>
          <target state="translated">（未打开W）您在从未打开过的文件句柄上尝试过binmode（）。检查您的控制流和参数数量。</target>
        </trans-unit>
        <trans-unit id="33254325809ca0f089876420266f8d46dd3cd36e" translate="yes" xml:space="preserve">
          <source>(W unopened) You tried ioctl() on a filehandle that was never opened. Check your control flow and number of arguments.</source>
          <target state="translated">（W未打开）您在从未打开过的文件句柄上尝试过ioctl（）。检查您的控制流和参数数量。</target>
        </trans-unit>
        <trans-unit id="aecaf35d1f0c4447f15709cfdd62df13ce2bfd7b" translate="yes" xml:space="preserve">
          <source>(W unopened) You tried to close a filehandle that was never opened.</source>
          <target state="translated">（未打开W）您试图关闭一个从未打开过的文件句柄。</target>
        </trans-unit>
        <trans-unit id="dc1d8c0f0b969290f1a5f95acb33bce413ff9ddb" translate="yes" xml:space="preserve">
          <source>(W unopened) You tried to invoke a file test operator on a filehandle that isn't open. Check your control flow. See also &lt;a href=&quot;functions/-x&quot;&gt;-X&lt;/a&gt;.</source>
          <target state="translated">（未打开W）您试图在未打开的文件句柄上调用文件测试操作符。检查您的控制流程。另请参见&lt;a href=&quot;functions/-x&quot;&gt;-X&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4ba59f97dfd212a4396e40fc430b085c942e206e" translate="yes" xml:space="preserve">
          <source>(W unopened) You tried to read from a filehandle that was never opened.</source>
          <target state="translated">（未打开W）您尝试从一个从未打开过的文件句柄读取。</target>
        </trans-unit>
        <trans-unit id="7ca18c8e0d35c1b1ba436b62ea346403c379a134" translate="yes" xml:space="preserve">
          <source>(W unopened) You tried to use the seek() or sysseek() function on a filehandle that was either never opened or has since been closed.</source>
          <target state="translated">（未打开W）您试图在从未打开过或自从关闭过的文件句柄上使用seek（）或sysseek（）函数。</target>
        </trans-unit>
        <trans-unit id="a687149754f7310ab9223be0e7d36b0c518b5d3d" translate="yes" xml:space="preserve">
          <source>(W unopened) You tried to use the stat() function on a filehandle that was either never opened or has since been closed.</source>
          <target state="translated">（未打开W）您试图在从未打开过或自从关闭过的文件句柄上使用stat（）函数。</target>
        </trans-unit>
        <trans-unit id="7d9b36aee9bb72aee190203d53735cc95832569f" translate="yes" xml:space="preserve">
          <source>(W unopened) You tried to use the tell() function on a filehandle that was either never opened or has since been closed.</source>
          <target state="translated">（未打开W）您试图在从未打开过或自从关闭过的文件句柄上使用tell（）函数。</target>
        </trans-unit>
        <trans-unit id="b0b2a4cea9ad3f14457445c6831b6e0a484b46c2" translate="yes" xml:space="preserve">
          <source>(W unpack) You have applied the same modifier more than once after a type in a pack template. See &lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;.</source>
          <target state="translated">（解压缩）在打包模板中键入文字后，您多次应用了相同的修饰符。参见&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c76fe56910f2e01af3e35d2cf6edcb6541e9310e" translate="yes" xml:space="preserve">
          <source>(W unpack) You tried something like</source>
          <target state="translated">（解压）您尝试过类似</target>
        </trans-unit>
        <trans-unit id="f8d42c367e5bdfdeea5af0d3e04a3e7a34f2c9f5" translate="yes" xml:space="preserve">
          <source>(W untie) A copy of the object returned from &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; (or &lt;code&gt;&lt;a href=&quot;functions/tied&quot;&gt;tied&lt;/a&gt;&lt;/code&gt;) was still valid when &lt;code&gt;&lt;a href=&quot;functions/untie&quot;&gt;untie&lt;/a&gt;&lt;/code&gt; was called.</source>
          <target state="translated">（取消 &lt;code&gt;&lt;a href=&quot;functions/tied&quot;&gt;tied&lt;/a&gt;&lt;/code&gt; ）从调用 &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; （或tie）返回的对象的副本在调用 &lt;code&gt;&lt;a href=&quot;functions/untie&quot;&gt;untie&lt;/a&gt;&lt;/code&gt; 时仍然有效。</target>
        </trans-unit>
        <trans-unit id="46f9020a7dcd787c1bf1b13be87c622895afbd82" translate="yes" xml:space="preserve">
          <source>(W utf8) You passed a negative number to &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr&lt;/a&gt;&lt;/code&gt;. Negative numbers are not valid character numbers, so it returns the Unicode replacement character (U+FFFD).</source>
          <target state="translated">（Wutf8）您向 &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr&lt;/a&gt;&lt;/code&gt; 传递了一个负数。负数不是有效的字符数，因此它返回Unicode替换字符（U + FFFD）。</target>
        </trans-unit>
        <trans-unit id="66ebf288df73553c4980b27e84deb25ec3183f3c" translate="yes" xml:space="preserve">
          <source>(W utf8) You tried to open a reference to a scalar for read or append where the scalar contained code points over 0xFF. In-memory files model on-disk files and can only contain bytes.</source>
          <target state="translated">（W utf8）您试图打开对标量的引用以进行读取或追加，其中标量包含的代码点超过0xFF。内存文件模拟磁盘文件，并且只能包含字节。</target>
        </trans-unit>
        <trans-unit id="8848dabe5fdd98b21a0c9d16e12de50ff0059dae" translate="yes" xml:space="preserve">
          <source>(W void) A CHECK or INIT block is being defined during run time proper, when the opportunity to run them has already passed. Perhaps you are loading a file with &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt; when you should be using &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; instead. Or perhaps you should put the &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt; inside a BEGIN block.</source>
          <target state="translated">（无效）已在适当的运行时间定义了CHECK或INIT块，前提是已经超过了运行它们的机会。也许您在使用 &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt; 加载文件时应该使用 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; 代替。或者，您应该将 &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt; 放入BEGIN块中。</target>
        </trans-unit>
        <trans-unit id="90db3f1351f4d1a7f3df67accb71dce113e606f5" translate="yes" xml:space="preserve">
          <source>(W void) You did something without a side effect in a context that does nothing with the return value, such as a statement that doesn't return a value from a block, or the left side of a scalar comma operator. Very often this points not to stupidity on your part, but a failure of Perl to parse your program the way you thought it would. For example, you'd get this if you mixed up your C precedence with Python precedence and said</source>
          <target state="translated">（无效）在上下文中对返回值不执行任何操作，而没有副作用，例如，不从块返回值或标量逗号运算符左侧的语句。很多时候，这并不意味着您的愚蠢，而是Perl无法按照您认为的方式解析程序。例如，如果将C优先级与Python优先级混合并说</target>
        </trans-unit>
        <trans-unit id="8c28b024772920f2fbe93cb3859bc1a02354768f" translate="yes" xml:space="preserve">
          <source>(W void) You used sort in scalar context, as in :</source>
          <target state="translated">（无效）您在标量上下文中使用了sort，例如：</target>
        </trans-unit>
        <trans-unit id="d2694030ac2d81eb103264e70e38e170506566bf" translate="yes" xml:space="preserve">
          <source>(W) &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; overload&lt;/code&gt; was passed an argument it did not recognize. Did you mistype an operator?</source>
          <target state="translated">（W） &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; overload&lt;/code&gt; 传递了它无法识别的参数。您是否输错了运算符？</target>
        </trans-unit>
        <trans-unit id="21016a542724c1bfad5e9b7a16b1394b21adc2e5" translate="yes" xml:space="preserve">
          <source>(W) Pod::PlainText encountered a &lt;code&gt;=back&lt;/code&gt; command that didn't correspond to an &lt;code&gt;=over&lt;/code&gt; command.</source>
          <target state="translated">（W）Pod :: PlainText遇到了 &lt;code&gt;=back&lt;/code&gt; 命令，该命令与 &lt;code&gt;=over&lt;/code&gt; 命令不对应。</target>
        </trans-unit>
        <trans-unit id="26bfb80fa009b521734a344e5a06b87f176f5beb" translate="yes" xml:space="preserve">
          <source>(W) Something has gone wrong in internal &lt;code&gt;=item&lt;/code&gt; processing. These messages indicate a bug in Pod::Text; you should never see them.</source>
          <target state="translated">（W）内部 &lt;code&gt;=item&lt;/code&gt; 处理中出了点问题。这些消息表明Pod :: Text中存在错误；你永远都不会看到他们。</target>
        </trans-unit>
        <trans-unit id="501975fffba0edbf57d1160976c85133c54a7baf" translate="yes" xml:space="preserve">
          <source>(W) Something has gone wrong in internal &lt;code&gt;=item&lt;/code&gt; processing. This message indicates a bug in Pod::PlainText; you should never see it.</source>
          <target state="translated">（W）内部 &lt;code&gt;=item&lt;/code&gt; 处理中出了点问题。此消息表明Pod :: PlainText中存在错误；你永远都不会看到它。</target>
        </trans-unit>
        <trans-unit id="c30dd949e9f2b3a1878daa9c110c45e03e38a3c9" translate="yes" xml:space="preserve">
          <source>(W) The POD source contained a non-standard internal sequence (something of the form &lt;code&gt;X&amp;lt;&amp;gt;&lt;/code&gt; ) that Pod::PlainText didn't know about.</source>
          <target state="translated">（W）POD源包含Pod :: PlainText不知道的非标准内部序列（格式为 &lt;code&gt;X&amp;lt;&amp;gt;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="ea328e676adcf58b0759f1c04dd7eec880ac50e0" translate="yes" xml:space="preserve">
          <source>(W) The POD source contained an &lt;code&gt;E&amp;lt;&amp;gt;&lt;/code&gt; escape that Pod::PlainText didn't know about.</source>
          <target state="translated">（W）POD源包含Pod :: PlainText不知道的 &lt;code&gt;E&amp;lt;&amp;gt;&lt;/code&gt; 转义。</target>
        </trans-unit>
        <trans-unit id="0a887755cdd505b29af6782ffbf2c58e91dc679f" translate="yes" xml:space="preserve">
          <source>(W) The call to overload::constant contained an odd number of arguments. The arguments should come in pairs.</source>
          <target state="translated">（W）对重载::常量的调用包含奇数个参数。参数应成对出现。</target>
        </trans-unit>
        <trans-unit id="70cde34602e73ad7fd4f730db8c2bcf41f111987" translate="yes" xml:space="preserve">
          <source>(W) The given character is not a valid pack or unpack type but used to be silently ignored.</source>
          <target state="translated">（W）给定的字符不是有效的压缩或解压缩类型，但过去通常被忽略。</target>
        </trans-unit>
        <trans-unit id="e14f1e6bfcb9badd4f5af39b1f5de336049edc31" translate="yes" xml:space="preserve">
          <source>(W) The same, but in ANSI_COLORS_ALIASES. The color mapping was ignored.</source>
          <target state="translated">（W）相同，但是在ANSI_COLORS_ALIASES中。颜色映射被忽略。</target>
        </trans-unit>
        <trans-unit id="d96a0ecd53e817b1ae2d676c0119d14bcfa595eb" translate="yes" xml:space="preserve">
          <source>(W) The second (fourth, sixth, ...) argument of overload::constant needs to be a code reference. Either an anonymous subroutine, or a reference to a subroutine.</source>
          <target state="translated">（W）重载:::常数的第二（第四，第六，...）参数需要作为代码引用。匿名子例程或对子例程的引用。</target>
        </trans-unit>
        <trans-unit id="5eb1c96d7547fa58d3105399dbdfb8e95f920587" translate="yes" xml:space="preserve">
          <source>(W) The specified color mapping from ANSI_COLORS_ALIASES is not valid and could not be parsed. It was ignored.</source>
          <target state="translated">（W）从ANSI_COLORS_ALIASES指定的颜色映射无效，无法解析。它被忽略了。</target>
        </trans-unit>
        <trans-unit id="8acaee73233dd30d36c968a81b33d5c8ccba7c36" translate="yes" xml:space="preserve">
          <source>(W) This is a standard message issued by OS/2 applications, while *nix applications die in silence. It is considered a feature of the OS/2 port. One can easily disable this by appropriate sighandlers, see &lt;a href=&quot;perlipc#Signals&quot;&gt;Signals in perlipc&lt;/a&gt;. See also &quot;Process terminated by SIGTERM/SIGINT&quot; in &lt;a href=&quot;perlos2&quot;&gt;perlos2&lt;/a&gt;.</source>
          <target state="translated">（W）这是OS / 2应用程序发出的标准消息，而* nix应用程序则在无声的情况下死亡。它被认为是OS / 2端口的功能。可以通过适当的&lt;a href=&quot;perlipc#Signals&quot;&gt;信号处理&lt;/a&gt;程序轻松禁用此功能，请参阅perlipc中的Signals。另请参见&lt;a href=&quot;perlos2&quot;&gt;perlos2中的&lt;/a&gt; &amp;ldquo;进程被SIGTERM / SIGINT终止&amp;rdquo; 。</target>
        </trans-unit>
        <trans-unit id="1c10232da8d5a7a1db96c9e95d4de6579ffb3dcc" translate="yes" xml:space="preserve">
          <source>(W) This warning may be due to running a perl5 script through a perl4 interpreter, especially if the word that is being warned about is &quot;use&quot; or &quot;my&quot;.</source>
          <target state="translated">（W）此警告可能是由于通过perl4解释器运行perl5脚本引起的，尤其是当警告的单词是&amp;ldquo; use&amp;rdquo;或&amp;ldquo; my&amp;rdquo;时。</target>
        </trans-unit>
        <trans-unit id="1212f80ef134690b670704c90585c6d0920a4a27" translate="yes" xml:space="preserve">
          <source>(W) You did &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re;&lt;/code&gt; without any arguments. That isn't very useful.</source>
          <target state="translated">（W）您确实 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re;&lt;/code&gt; 没有任何争论。那不是很有用。</target>
        </trans-unit>
        <trans-unit id="e38b2fa8496c1774dd31b2c5fdb79143f6d43dd2" translate="yes" xml:space="preserve">
          <source>(W) You passed warn() an empty string (the equivalent of &lt;code&gt;&lt;a href=&quot;functions/warn&quot;&gt;warn&lt;/a&gt; &quot;&quot;&lt;/code&gt; ) or you called it with no args and &lt;code&gt;$@&lt;/code&gt; was empty.</source>
          <target state="translated">（W）您传递了warn（）一个空字符串（等效于 &lt;code&gt;&lt;a href=&quot;functions/warn&quot;&gt;warn&lt;/a&gt; &quot;&quot;&lt;/code&gt; ），或者您不带参数而调用了它，并且 &lt;code&gt;$@&lt;/code&gt; 为空。</target>
        </trans-unit>
        <trans-unit id="fc9c0aa78325e04e4fc87ad0e353fe824600632f" translate="yes" xml:space="preserve">
          <source>(W) You probably mistyped a constant color name such as:</source>
          <target state="translated">（W）您可能输错了恒定的颜色名称，例如：</target>
        </trans-unit>
        <trans-unit id="0ad31e97078c78dbc2769be19839fd69cffdfd38" translate="yes" xml:space="preserve">
          <source>(W) You probably said %hash{$key} when you meant $hash{$key} or @hash{@keys}. On the other hand, maybe you just meant %hash and got carried away.</source>
          <target state="translated">（W）您可能是说$ hash {$ key}或@hash {@keys}时说％hash {$ key}。另一方面，也许您只是说％hash而被迷住了。</target>
        </trans-unit>
        <trans-unit id="3978bcd1515ac8ee88075eadc0c3770c9967d932" translate="yes" xml:space="preserve">
          <source>(W) You specified an invalid alias name on the left hand of the equal sign in a color mapping in ANSI_COLORS_ALIASES. The color mapping was ignored.</source>
          <target state="translated">（W）您在ANSI_COLORS_ALIASES中的颜色映射中的等号的左侧指定了无效的别名。颜色映射被忽略。</target>
        </trans-unit>
        <trans-unit id="1568d1a0f3b426e26a4ff1c09af9fd2ef4f0d8e9" translate="yes" xml:space="preserve">
          <source>(W) You specified an invalid attribute name on the right hand of the equal sign in a color mapping in ANSI_COLORS_ALIASES. The color mapping was ignored.</source>
          <target state="translated">（W）您在ANSI_COLORS_ALIASES中的颜色映射中的等号右侧指定了无效的属性名称。颜色映射被忽略。</target>
        </trans-unit>
        <trans-unit id="66c0aa947d58238ebc42c6ae5df6940103cf64ea" translate="yes" xml:space="preserve">
          <source>(W) You tried to overload a constant type the overload package is unaware of.</source>
          <target state="translated">（W）您试图重载一个常量类型，而该重载程序包并未意识到。</target>
        </trans-unit>
        <trans-unit id="e6c02830c69ec718530355cc9c731ec126bc1ac4" translate="yes" xml:space="preserve">
          <source>(W) You tried to use an unknown subpragma of the &quot;re&quot; pragma.</source>
          <target state="translated">（W）您尝试使用&amp;ldquo; re&amp;rdquo;杂项的未知子杂项。</target>
        </trans-unit>
        <trans-unit id="237221ab401f92d00b4b13fe24041204327569ad" translate="yes" xml:space="preserve">
          <source>(We use $^X in these examples because it's tainted by default.)</source>
          <target state="translated">（我们在这些示例中使用$ ^ X，因为默认情况下它是被污染的。）</target>
        </trans-unit>
        <trans-unit id="ff0ae87e96bc4227f275a775529e881f38d9f545" translate="yes" xml:space="preserve">
          <source>(We used our knowledge that input conversion for &lt;code&gt;char *&lt;/code&gt; is a &quot;simple&quot; one, thus &lt;code&gt;host&lt;/code&gt; is initialized on the declaration line, and our assignment &lt;code&gt;h = host&lt;/code&gt; is not performed too early. Otherwise one would need to have the assignment &lt;code&gt;h = host&lt;/code&gt; in a CODE: or INIT: section.)</source>
          <target state="translated">（我们使用的知识是， &lt;code&gt;char *&lt;/code&gt; 的输入转换是一种&amp;ldquo;简单&amp;rdquo;的输入，因此 &lt;code&gt;host&lt;/code&gt; 在声明行上进行了初始化，因此分配 &lt;code&gt;h = host&lt;/code&gt; 时间不要太早。否则，需要分配 &lt;code&gt;h = host&lt;/code&gt; 在CODE：或INIT：部分中。）</target>
        </trans-unit>
        <trans-unit id="cfc6665de88f1833c4368f0118d03017f3a21353" translate="yes" xml:space="preserve">
          <source>(When dealing with floating-point comparisons, it is best to not check for equality, but rather that the difference between the expected and actual result is below a certain amount (called epsilon) which is 0.01 in this case)</source>
          <target state="translated">（在处理浮点比较时，最好不要检查是否相等，而是要使预期结果与实际结果之间的差异小于某个数量（在这种情况下为0.01）（称为epsilon））</target>
        </trans-unit>
        <trans-unit id="ccac8451a2611ae759c9faf841bb5018f12b19d2" translate="yes" xml:space="preserve">
          <source>(Where BASEEXT is the last component of NAME, and OBJ_EXT is $Config{obj_ext}.)</source>
          <target state="translated">（其中BASEEXT是NAME的最后一个组件，而OBJ_EXT是$ Config {obj_ext}。）</target>
        </trans-unit>
        <trans-unit id="e02fb51bf8e3169540ecbf91f4d22e75cb7830a9" translate="yes" xml:space="preserve">
          <source>(Where BASEEXT is the last component of NAME.)</source>
          <target state="translated">（其中BASEEXT是NAME的最后一个组成部分。）</target>
        </trans-unit>
        <trans-unit id="d0de3cd68244c0838e032c884108802a5c0e7328" translate="yes" xml:space="preserve">
          <source>(Why do we have separate numeric and string comparisons? Because we don't have special variable types, and Perl needs to know whether to sort numerically (where 99 is less than 100) or alphabetically (where 100 comes before 99).</source>
          <target state="translated">（为什么我们要分别进行数字和字符串比较？因为我们没有特殊的变量类型，所以Perl需要知道是按数字排序（其中99小于100）还是按字母排序（其中100在99之前）。</target>
        </trans-unit>
        <trans-unit id="c3a762aeddeefdae150565438093ccaddaaf9aad" translate="yes" xml:space="preserve">
          <source>(X) A general assertion failed. The file in question must be examined.</source>
          <target state="translated">（X）一般断言失败。有问题的文件必须检查。</target>
        </trans-unit>
        <trans-unit id="d6a423c5d83c10add2738bacaabc87962a7da812" translate="yes" xml:space="preserve">
          <source>(X) An attempt was made to extend an array, a list, or a string beyond the largest possible memory allocation.</source>
          <target state="translated">（X）试图将数组，列表或字符串扩展到最大可能的内存分配之外。</target>
        </trans-unit>
        <trans-unit id="28dc575d7faf81030a7009c3890586ad0bfb13c7" translate="yes" xml:space="preserve">
          <source>(X) See &lt;a href=&quot;perlrun#PERL_SIGNALS&quot;&gt;PERL_SIGNALS in perlrun&lt;/a&gt; for legal values.</source>
          <target state="translated">（X）有关合法值，请参见&lt;a href=&quot;perlrun#PERL_SIGNALS&quot;&gt;perlrun中的PERL_SIGNALS&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="25eb4cc27ccccf735eed888542e4498eb2a2aa6d" translate="yes" xml:space="preserve">
          <source>(X) The #! line (or local equivalent) in a Perl script contains the &lt;b&gt;-M&lt;/b&gt;, &lt;b&gt;-m&lt;/b&gt; or &lt;b&gt;-C&lt;/b&gt; option.</source>
          <target state="translated">（X）＃！Perl脚本中的行（或等效的本地行）包含&lt;b&gt;-M&lt;/b&gt;，&lt;b&gt;-m&lt;/b&gt;或&lt;b&gt;-C&lt;/b&gt;选项。</target>
        </trans-unit>
        <trans-unit id="04d47aff5005157bb16498793c9ad8c2d7a871aa" translate="yes" xml:space="preserve">
          <source>(X) The #! line (or local equivalent) in a Perl script contains the &lt;b&gt;-T&lt;/b&gt; option (or the &lt;b&gt;-t&lt;/b&gt; option), but Perl was not invoked with &lt;b&gt;-T&lt;/b&gt; in its command line. This is an error because, by the time Perl discovers a &lt;b&gt;-T&lt;/b&gt; in a script, it's too late to properly taint everything from the environment. So Perl gives up.</source>
          <target state="translated">（X）＃！Perl脚本中的命令行（或本地等效项）包含&lt;b&gt;-T&lt;/b&gt;选项（或&lt;b&gt;-t&lt;/b&gt;选项），但Perl并未在其命令行中用&lt;b&gt;-T&lt;/b&gt;调用。这是一个错误，因为在Perl 在脚本中发现&lt;b&gt;-T&lt;/b&gt;时，要适当地从环境中污染所有内容已经为时已晚。于是Perl放弃了。</target>
        </trans-unit>
        <trans-unit id="7d13ded5daf490cc1bc8bb6b0cd74a13b6c46c88" translate="yes" xml:space="preserve">
          <source>(X) The PERL5OPT environment variable may only be used to set the following switches: &lt;b&gt;-[CDIMUdmtw]&lt;/b&gt;.</source>
          <target state="translated">（X）PERL5OPT环境变量只能用于设置以下开关：&lt;b&gt;-[CDIMUdmtw]&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="8e8047249d025e2fe0c43d96f901bbedf4764fe8" translate="yes" xml:space="preserve">
          <source>(X) The malloc package that comes with Perl had an internal failure.</source>
          <target state="translated">（X）Perl随附的malloc程序包发生内部故障。</target>
        </trans-unit>
        <trans-unit id="65871f11cf57af573de156d366a86250bc7c9d6a" translate="yes" xml:space="preserve">
          <source>(X) The malloc() function returned 0, indicating there was insufficient remaining memory (or virtual memory) to satisfy the request. Perl has no option but to exit immediately.</source>
          <target state="translated">（X）malloc（）函数返回0，表示没有足够的剩余内存（或虚拟内存）来满足请求。Perl别无选择，只能立即退出。</target>
        </trans-unit>
        <trans-unit id="74578166360f01e0bd318023e9280f6c6b8eeab2" translate="yes" xml:space="preserve">
          <source>(X) You can't allocate more than 64K on an MS-DOS machine.</source>
          <target state="translated">（X）您不能在MS-DOS计算机上分配超过64K的内存。</target>
        </trans-unit>
        <trans-unit id="d5e67ac60b668e8e894b678df3573f0eedbd9863" translate="yes" xml:space="preserve">
          <source>(X)(F) The malloc() function returned 0, indicating there was insufficient remaining memory (or virtual memory) to satisfy the request.</source>
          <target state="translated">（X）（F）malloc（）函数返回0，表示剩余内存（或虚拟内存）不足，无法满足请求。</target>
        </trans-unit>
        <trans-unit id="0aa007c669bc8d719d70515c0e663390b1a05031" translate="yes" xml:space="preserve">
          <source>(Yes, I know this function is named a bit oddly. Call it historic reasons.)</source>
          <target state="translated">（是的，我知道此函数的名称有点奇怪。称之为历史原因。）</target>
        </trans-unit>
        <trans-unit id="8eb8ab7981d2a7c45a30aad058d8576bb511d1b4" translate="yes" xml:space="preserve">
          <source>(Yes, we know that some of these OSes may fall under the Unix category, but we are not a standards body.)</source>
          <target state="translated">（是的，我们知道其中一些操作系统可能属于Unix类别，但我们不是标准机构。）</target>
        </trans-unit>
        <trans-unit id="a64a87faab12fe29e48406c908901fff7a63848d" translate="yes" xml:space="preserve">
          <source>(You can force portability by specifying a Unicode range, which means that the endpoints are specified by &lt;a href=&quot;perlrecharclass#Character-Ranges&quot;&gt;\N{...} &lt;/a&gt;, but the meaning may still not be obvious.) The stricter rules require that ranges that start or stop with an ASCII character that is not a control have all their endpoints be the literal character, and not some escape sequence (like &lt;code&gt;&quot;\x41&quot;&lt;/code&gt; ), and the ranges must be all digits, or all uppercase letters, or all lowercase letters.</source>
          <target state="translated">（您可以通过指定Unicode范围来强制可移植性，这意味着端点由&lt;a href=&quot;perlrecharclass#Character-Ranges&quot;&gt;\ N {...}&lt;/a&gt;指定，但含义可能仍然不明显。）更严格的规则要求以ASCII开头或结尾的范围不是控件的字符，其所有端点都是文字字符，而不是某些转义序列（例如 &lt;code&gt;&quot;\x41&quot;&lt;/code&gt; ），并且范围必须是所有数字，全部大写字母或全部小写字母。</target>
        </trans-unit>
        <trans-unit id="40103a04e475e9541eab1f3aaae6dd08be353894" translate="yes" xml:space="preserve">
          <source>(You can't just say &lt;code&gt;$ENV{$key} = $ENV{$key}&lt;/code&gt; , since the Perl optimizer is smart enough to elide the expression.)</source>
          <target state="translated">（您不能只说 &lt;code&gt;$ENV{$key} = $ENV{$key}&lt;/code&gt; ，因为Perl优化器足够聪明，可以忽略表达式。）</target>
        </trans-unit>
        <trans-unit id="102826bc7aefa33ccb389fa417f4b040a4a419e3" translate="yes" xml:space="preserve">
          <source>(You can, of course, specify single characters by using, &lt;code&gt;\x{...}&lt;/code&gt; , &lt;code&gt;\N{...}&lt;/code&gt; , etc.)</source>
          <target state="translated">（您当然可以使用 &lt;code&gt;\x{...}&lt;/code&gt; ， &lt;code&gt;\N{...}&lt;/code&gt; 等来指定单个字符）</target>
        </trans-unit>
        <trans-unit id="e54f3a24beb63ca6443b7641e7e1af7bcf5e3c2b" translate="yes" xml:space="preserve">
          <source>(You may, in fact, want to start with localizing to</source>
          <target state="translated">（实际上，您可能想从本地化为</target>
        </trans-unit>
        <trans-unit id="4bb2b230b54ad6957c49b6580f615df0eff17f93" translate="yes" xml:space="preserve">
          <source>(added in &lt;code&gt;Sys::Syslog&lt;/code&gt; 0.21). HP-UX is a system which uses such a named pipe.</source>
          <target state="translated">（在 &lt;code&gt;Sys::Syslog&lt;/code&gt; 0.21中添加）。HP-UX是使用这种命名管道的系统。</target>
        </trans-unit>
        <trans-unit id="409526f33747b3d99190c22c4395e3c38ccf1ed4" translate="yes" xml:space="preserve">
          <source>(also known as 90 degrees).</source>
          <target state="translated">（也称为90度）。</target>
        </trans-unit>
        <trans-unit id="0975309405add43e0212a50c2f0bc405f3954769" translate="yes" xml:space="preserve">
          <source>(also see &lt;a href=&quot;#gen_delimited_pat&quot;&gt;gen_delimited_pat&lt;/a&gt; below).</source>
          <target state="translated">（另请参见下面的&lt;a href=&quot;#gen_delimited_pat&quot;&gt;gen_delimited_pa​​t&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="1cdc6cf7e203685897747bffc2262178c7977e11" translate="yes" xml:space="preserve">
          <source>(although &lt;code&gt;extract_tagged&lt;/code&gt; is not currently implemented that way, in order to preserve pre-5.005 compatibility).</source>
          <target state="translated">（尽管目前未以这种方式实现 &lt;code&gt;extract_tagged&lt;/code&gt; ，以保持5.005之前的兼容性）。</target>
        </trans-unit>
        <trans-unit id="f2cfa0da4ed10df5c469d6ab0c502d0727365ce2" translate="yes" xml:space="preserve">
          <source>(although in production code the substitutions might be done in the EBCDIC branch with the function call and separately in the ASCII branch without the expense of the identity map; in Perl v5.22, the identity map is optimized out so there is no expense, but the alternative above is simpler and is also available in v5.22).</source>
          <target state="translated">（尽管在生产代码中，可以使用功能调用在EBCDIC分支中进行替换，而在ASCII分支中进行替换，而无需花费标识映射；在Perl v5.22中，优化了标识映射，因此无需花费任何费用，但上述替代方法更简单，并且在v5.22中也可用）。</target>
        </trans-unit>
        <trans-unit id="4f9622103ba7043a2f17e986f7fa6b31d025760e" translate="yes" xml:space="preserve">
          <source>(and problematic) UTF-8 behaviour of Perl 5.8.0. (See &lt;a href=&quot;https://perldoc.perl.org/5.26.0/perl581delta.html#UTF-8-no-longer-default-under-UTF-8-locales&quot;&gt;UTF-8 no longer default under UTF-8 locales in perl581delta&lt;/a&gt;.)</source>
          <target state="translated">（和有问题的）Perl 5.8.0的UTF-8行为。（请参阅&lt;a href=&quot;https://perldoc.perl.org/5.26.0/perl581delta.html#UTF-8-no-longer-default-under-UTF-8-locales&quot;&gt;perl581delta中的UTF-8语言环境下的UTF-8不再是默认值&lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="692b42cc2b3e37f46870d9371dc5e76fada22536" translate="yes" xml:space="preserve">
          <source>(and you have to say &lt;code&gt;not_&lt;/code&gt; ; you can't use the bang &lt;code&gt;!&lt;/code&gt; form). This pseudo category is a shorthand for specifying both &lt;code&gt;:collate&lt;/code&gt; and &lt;code&gt;:ctype&lt;/code&gt; . Hence, in the negated form, it is nearly the same thing as saying</source>
          <target state="translated">（您必须说 &lt;code&gt;not_&lt;/code&gt; ；您不能使用bang &lt;code&gt;!&lt;/code&gt; 表单）。伪类别是同时指定 &lt;code&gt;:collate&lt;/code&gt; 和 &lt;code&gt;:ctype&lt;/code&gt; 的简写。因此，在否定形式中，这几乎与说</target>
        </trans-unit>
        <trans-unit id="6aeff3579e72696260e1169c528784c27ec7b978" translate="yes" xml:space="preserve">
          <source>(answer contributed by brian d foy)</source>
          <target state="translated">（答案由brian d foy提供）</target>
        </trans-unit>
        <trans-unit id="e5076fd75f69e901d6b296f3219688b4e49af9fb" translate="yes" xml:space="preserve">
          <source>(as is one for 5.005_53), and the new version is 5.6.1. Create a file</source>
          <target state="translated">（与5.005_53相同），新版本为5.6.1。建立档案</target>
        </trans-unit>
        <trans-unit id="2a87525a6c2a886c0eaf943b38e0ee76d77adf64" translate="yes" xml:space="preserve">
          <source>(as the filename of DUCET) is used. If you will prepare your own table file, any name other than</source>
          <target state="translated">（作为DUCET的文件名）。如果您准备自己的表文件，则使用除</target>
        </trans-unit>
        <trans-unit id="786ef72f31164be533ff5c7e4a7e63ae5230f32a" translate="yes" xml:space="preserve">
          <source>(assuming the default installation location was chosen).</source>
          <target state="translated">（假设选择了默认安装位置）。</target>
        </trans-unit>
        <trans-unit id="63c4a5f42cbbe3a05030f3bc9132df45a99212cd" translate="yes" xml:space="preserve">
          <source>(at least) the following lines</source>
          <target state="translated">（至少）以下几行</target>
        </trans-unit>
        <trans-unit id="b948cb7a3253ff3b0a5238bd22a6d610864b716f" translate="yes" xml:space="preserve">
          <source>(at the very end for binary compatibility).</source>
          <target state="translated">（最后是二进制兼容性）。</target>
        </trans-unit>
        <trans-unit id="48792f7a9033374771dbfb100ac3abb29a32dab5" translate="yes" xml:space="preserve">
          <source>(because either it starts with a &quot;_&quot;, or because none of its lexicons have &lt;code&gt;_AUTO =&amp;gt; 1,&lt;/code&gt; ), then we have failed to find a normal way to maketext</source>
          <target state="translated">（因为它以&amp;ldquo; _&amp;rdquo;开头，或者因为它的所有词典都没有 &lt;code&gt;_AUTO =&amp;gt; 1,&lt;/code&gt; ），所以我们无法找到正常的maketext方法</target>
        </trans-unit>
        <trans-unit id="f6d16baf27904d45d89ec1d9d7ed8281fa17d9fe" translate="yes" xml:space="preserve">
          <source>(because in particular, simply assigning a weak reference back to itself does not work to unweaken it; &lt;code&gt;$REF = $REF&lt;/code&gt; does not work).</source>
          <target state="translated">（特别是因为简单地给它分配一个弱引用并不能使其弱化； &lt;code&gt;$REF = $REF&lt;/code&gt; 不起作用）。</target>
        </trans-unit>
        <trans-unit id="4b16cab82b532af855df5c5a4ca92e48f90985fe" translate="yes" xml:space="preserve">
          <source>(but slightly more complicated). This tree reflects the way Perl parsed your code, but has nothing to do with the execution order. There is an additional &quot;thread&quot; going through the nodes of the tree which shows the order of execution of the nodes. In our simplified example above it looks like:</source>
          <target state="translated">（但稍微复杂一些）。该树反映了Perl解析代码的方式，但与执行顺序无关。在树的各个节点之间还有一个附加的&amp;ldquo;线程&amp;rdquo;，它显示了节点的执行顺序。在上面的简化示例中，它看起来像：</target>
        </trans-unit>
        <trans-unit id="4693cf64bd9a521498526ddc1119c6dfd5c3b552" translate="yes" xml:space="preserve">
          <source>(c) Tels &lt;a href=&quot;http://bloodgate.com&quot;&gt;http://bloodgate.com&lt;/a&gt; 2003, 2004 - based on BigInt code by Tels from 2001-2003.</source>
          <target state="translated">（c）Tels &lt;a href=&quot;http://bloodgate.com&quot;&gt;http://bloodgate.com&lt;/a&gt; 2003，2004-基于Tels在2001-2003年间的BigInt代码。</target>
        </trans-unit>
        <trans-unit id="f705994b685d7ab39803fc55afe57bb501708c2b" translate="yes" xml:space="preserve">
          <source>(const) data, and the &lt;code&gt;U&lt;/code&gt; is &amp;lt;undefined&amp;gt;, external symbols referred to.</source>
          <target state="translated">（const）数据，而 &lt;code&gt;U&lt;/code&gt; 是&amp;lt;undefined&amp;gt;，是指外部符号。</target>
        </trans-unit>
        <trans-unit id="f2d8cd4b2f49ebe16d34218b69e616c4bfb7685e" translate="yes" xml:space="preserve">
          <source>(contributed by Alex Beamish)</source>
          <target state="translated">（由Alex Beamish提供）</target>
        </trans-unit>
        <trans-unit id="8a01f14aa6ea03ae12033993b8340bb14bc9dc2b" translate="yes" xml:space="preserve">
          <source>(contributed by Anno Siegel)</source>
          <target state="translated">（由Anno Siegel贡献）</target>
        </trans-unit>
        <trans-unit id="fac38ab03b508c364ce52ea99dd09ac56e9be13a" translate="yes" xml:space="preserve">
          <source>(contributed by Ben Morrow)</source>
          <target state="translated">（由Ben Morrow提供）</target>
        </trans-unit>
        <trans-unit id="cab93540468b3299e5e7ff453d2c13989f42fd8e" translate="yes" xml:space="preserve">
          <source>(contributed by Brian McCauley)</source>
          <target state="translated">（由Brian McCauley提供）</target>
        </trans-unit>
        <trans-unit id="5866c9a649588b2bcaf84ab58628c670110cf84d" translate="yes" xml:space="preserve">
          <source>(contributed by Michael Carman)</source>
          <target state="translated">（由Michael Carman提供）</target>
        </trans-unit>
        <trans-unit id="11aa83d938cb90075d1401151f2508d1510688fe" translate="yes" xml:space="preserve">
          <source>(contributed by Peter J. Holzer, hjp-usenet2@hjp.at)</source>
          <target state="translated">（由Peter J. Holzer提供，hjp-usenet2 @ hjp.at）</target>
        </trans-unit>
        <trans-unit id="5dee00bc78a497a9d448541fd31f216ca89ba87a" translate="yes" xml:space="preserve">
          <source>(contributed by Shlomi Fish)</source>
          <target state="translated">（由Shlomi Fish提供）</target>
        </trans-unit>
        <trans-unit id="1e46d3c5ed3722672a09f39374a1a7ffdac24e1c" translate="yes" xml:space="preserve">
          <source>(contributed by Xho)</source>
          <target state="translated">（由Xho提供）</target>
        </trans-unit>
        <trans-unit id="b1ad773d61a232c565a534ba9591dd6ec671fc74" translate="yes" xml:space="preserve">
          <source>(contributed by brian d foy and Ben Morrow)</source>
          <target state="translated">（由brian d Foy和Ben Morrow贡献）</target>
        </trans-unit>
        <trans-unit id="da6037d0c8a0901dbdb8efa83408cf6cf316ca26" translate="yes" xml:space="preserve">
          <source>(contributed by brian d foy and Benjamin Goldberg)</source>
          <target state="translated">（由brian d Foy和Benjamin Goldberg贡献）</target>
        </trans-unit>
        <trans-unit id="b450df445d93e3c6b0f335b0c69c72d7b68c7ec1" translate="yes" xml:space="preserve">
          <source>(contributed by brian d foy and Dave Cross)</source>
          <target state="translated">（由brian d foy和Dave Cross贡献）</target>
        </trans-unit>
        <trans-unit id="5ecf6719df9ae48ff24c5100a5d4b1ef446cd95f" translate="yes" xml:space="preserve">
          <source>(contributed by brian d foy)</source>
          <target state="translated">（由brian d foy贡献）</target>
        </trans-unit>
        <trans-unit id="2c422c445de0783d3809d65cd3e3acd9a5e0e370" translate="yes" xml:space="preserve">
          <source>(contributed by brian d foy, updated Fri Jul 25 12:22:26 PDT 2008)</source>
          <target state="translated">（由brian d foy提供，PDT 2008年7月25日星期五12:22:26更新）</target>
        </trans-unit>
        <trans-unit id="9c413c8db2fc0e0a195f2df6b3cb2359816721c7" translate="yes" xml:space="preserve">
          <source>(copyright 2004, Published by O'Reilly Media, Inc.), Damian Conway provides a list of criteria to use when deciding if OO is the right fit for your problem:</source>
          <target state="translated">（版权归2004，由O'Reilly Media，Inc.发行），Damian Conway提供了确定OO是否适合您的问题时要使用的标准列表：</target>
        </trans-unit>
        <trans-unit id="ea2654366590f288ae6ebd7fdc54bceaf9e6545c" translate="yes" xml:space="preserve">
          <source>(currently the last two may hit a wrong location, but this may improve soon). Under Win* see &lt;a href=&quot;#SYNOPSIS&quot;&gt;SYNOPSIS&lt;/a&gt;.</source>
          <target state="translated">（当前的后两个位置可能不正确，但这很快就会改善）。在Win *下，请参阅&lt;a href=&quot;#SYNOPSIS&quot;&gt;提要&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="41e74bf7b4c32eb2f41eaf25ee2c6c323ec8d504" translate="yes" xml:space="preserve">
          <source>(cuttable). An atomic operation is an action that can&amp;rsquo;t be interrupted, not one forbidden in a nuclear-free zone.</source>
          <target state="translated">（可切割）。原子操作是不可中断的动作，不是无核区中禁止的动作。</target>
        </trans-unit>
        <trans-unit id="b3a9a8199852eb2a04185407b3827576c8e6172d" translate="yes" xml:space="preserve">
          <source>(defaults to the environment variable</source>
          <target state="translated">（默认为环境变量</target>
        </trans-unit>
        <trans-unit id="c979523d1a9c1a0d77ab7e430a7c98147073391d" translate="yes" xml:space="preserve">
          <source>(deprecated - use &lt;code&gt;(AV *)NULL&lt;/code&gt; instead)</source>
          <target state="translated">（不建议使用-使用 &lt;code&gt;(AV *)NULL&lt;/code&gt; 代替）</target>
        </trans-unit>
        <trans-unit id="887821ca73f1fcf6de46ded6b730b60d3beffd8e" translate="yes" xml:space="preserve">
          <source>(deprecated - use &lt;code&gt;(CV *)NULL&lt;/code&gt; instead)</source>
          <target state="translated">（不建议使用-使用 &lt;code&gt;(CV *)NULL&lt;/code&gt; 代替）</target>
        </trans-unit>
        <trans-unit id="b53d21700af9fd28a7f43adfe7247f1c0f49ab4c" translate="yes" xml:space="preserve">
          <source>(deprecated - use &lt;code&gt;(HV *)NULL&lt;/code&gt; instead)</source>
          <target state="translated">（不建议使用-使用 &lt;code&gt;(HV *)NULL&lt;/code&gt; 代替）</target>
        </trans-unit>
        <trans-unit id="4957206df9fb7ffd7b399b79b2a6449d69017a22" translate="yes" xml:space="preserve">
          <source>(do not forget to run &lt;code&gt;make regen_headers&lt;/code&gt; if you modify this file).</source>
          <target state="translated">（如果您修改此文件，请不要忘记运行 &lt;code&gt;make regen_headers&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="47d764752c9dc13917cf2e5897bbaac62c58fbf5" translate="yes" xml:space="preserve">
          <source>(e.g., the application may hang, or generate an error) due to mutexes that are needed to control functionality within the &lt;a href=&quot;threads&quot;&gt;threads&lt;/a&gt; module.</source>
          <target state="translated">（例如，应用程序可能会挂起或生成错误），这是由于控制&lt;a href=&quot;threads&quot;&gt;线程&lt;/a&gt;模块内功能所需的互斥锁所致。</target>
        </trans-unit>
        <trans-unit id="ae81a9ce14e07a570fbb453b8b2d8a4343210087" translate="yes" xml:space="preserve">
          <source>(engineers use</source>
          <target state="translated">（工程师使用</target>
        </trans-unit>
        <trans-unit id="4a54a48aa166f000450ddb5bbfffb162a4703f6a" translate="yes" xml:space="preserve">
          <source>(equal) if the operands are char-for-char identical. If you really want to know whether two strings--which &lt;code&gt;eq&lt;/code&gt; and &lt;code&gt;cmp&lt;/code&gt; may consider different--are equal as far as collation in the locale is concerned, see the discussion in &lt;a href=&quot;#Category-LC_COLLATE-%3a-Collation&quot;&gt;Category LC_COLLATE : Collation&lt;/a&gt;.</source>
          <target state="translated">（相等）如果操作数是逐字符相同的。如果您真的想知道就区域设置中的&lt;a href=&quot;#Category-LC_COLLATE-%3a-Collation&quot;&gt;排序规则&lt;/a&gt;而言，两个字符串（ &lt;code&gt;eq&lt;/code&gt; 和 &lt;code&gt;cmp&lt;/code&gt; 可能认为不同）是否相等，请参阅类别LC_COLLATE：排序规则中的讨论。</target>
        </trans-unit>
        <trans-unit id="7d245ed086c5e828978b1419867a15ebe5c96265" translate="yes" xml:space="preserve">
          <source>(explained in the next paragraph), separated by spaces. (Other than as used to separate elements, spaces are to be ignored.) Case distinctions in the condition list are not significant. Conditions preceded by &quot;NON_&quot; represent the negation of the condition.</source>
          <target state="translated">（在下一段中说明），以空格分隔。（除了用来分隔元素的空格外，将忽略空格。）条件列表中的大小写区别不大。以&amp;ldquo; NON_&amp;rdquo;开头的条件表示条件的否定。</target>
        </trans-unit>
        <trans-unit id="b7612ed7f2ab039566cbb6a180523b77c6c55c37" translate="yes" xml:space="preserve">
          <source>(for Win32 Perl)</source>
          <target state="translated">（对于Win32 Perl）</target>
        </trans-unit>
        <trans-unit id="52773988fa05986370e14e73b80f0d9b5d869e6f" translate="yes" xml:space="preserve">
          <source>(for pthreads platforms)</source>
          <target state="translated">（对于pthreads平台）</target>
        </trans-unit>
        <trans-unit id="f2baa49355f382d8855fa13bc94ef1ce38af8547" translate="yes" xml:space="preserve">
          <source>(have the directories with &lt;code&gt;*.exe&lt;/code&gt; on PATH, and &lt;code&gt;*.dll&lt;/code&gt; on LIBPATH);</source>
          <target state="translated">（在PATH上带有 &lt;code&gt;*.exe&lt;/code&gt; ，在LIBPATH 上带有 &lt;code&gt;*.dll&lt;/code&gt; 的目录）；</target>
        </trans-unit>
        <trans-unit id="8b307b3649a26281003eca21c9415192d0da1a2f" translate="yes" xml:space="preserve">
          <source>(have the directory on PATH);</source>
          <target state="translated">（在PATH上有该目录）；</target>
        </trans-unit>
        <trans-unit id="e78594face702b66af1259171d24ead963a0670c" translate="yes" xml:space="preserve">
          <source>(here the optional &lt;code&gt;IN&lt;/code&gt; keyword is omitted).</source>
          <target state="translated">（此处省略了可选的 &lt;code&gt;IN&lt;/code&gt; 关键字）。</target>
        </trans-unit>
        <trans-unit id="0ca1edf548683a8b18ee06ce8f4d27a28c75a756" translate="yes" xml:space="preserve">
          <source>(i.e. &lt;code&gt;A::foo&lt;/code&gt; is called twice).</source>
          <target state="translated">（即 &lt;code&gt;A::foo&lt;/code&gt; 被调用了两次）。</target>
        </trans-unit>
        <trans-unit id="8f8464e8307b268923dc0c2b5876277d2c0fd5db" translate="yes" xml:space="preserve">
          <source>(i.e., &lt;code&gt;(EXPR &amp;amp; 0700) &amp;gt; 0&lt;/code&gt; ), raises an exception. If umask(2) is not implemented and you are not trying to restrict access for yourself, returns &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">（即 &lt;code&gt;(EXPR &amp;amp; 0700) &amp;gt; 0&lt;/code&gt; ））引发异常。如果未实现umask（2），并且您不想自己限制访问，则返回 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8f5d49562cd8c87da892149a0b2d4a8af46e9d52" translate="yes" xml:space="preserve">
          <source>(i.e., &lt;code&gt;(EXPR &amp;amp; 0700) &amp;gt; 0&lt;/code&gt; ), raises an exception. If umask(2) is not implemented and you are not trying to restrict access for yourself, returns &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">（即 &lt;code&gt;(EXPR &amp;amp; 0700) &amp;gt; 0&lt;/code&gt; ））引发异常。如果未实现umask（2），并且您不想自己限制访问，则返回 &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="55c213fac91606d567b36164fd0c347d752bb458" translate="yes" xml:space="preserve">
          <source>(i.e., Unix) you can configure perl with &lt;code&gt;-Accflags=-DPERL_DEBUG_READONLY_COW&lt;/code&gt; and it will turn buffer violations into crashes. You will find it to be marvellously slow, so you may want to skip perl's own tests.</source>
          <target state="translated">（即Unix），可以使用 &lt;code&gt;-Accflags=-DPERL_DEBUG_READONLY_COW&lt;/code&gt; 配置perl，它将把违反缓冲区的行为变成崩溃。您会发现它运行起来非常慢，因此您可能要跳过perl自己的测试。</target>
        </trans-unit>
        <trans-unit id="ce300057bb6cbcc44d6adf16788915bba76efc18" translate="yes" xml:space="preserve">
          <source>(if &lt;a href=&quot;../cpan/meta&quot;&gt;CPAN::Meta&lt;/a&gt; is installed). Clients like &lt;a href=&quot;../cpan&quot;&gt;CPAN&lt;/a&gt; or &lt;a href=&quot;http://search.cpan.org/perldoc/CPANPLUS&quot;&gt;CPANPLUS&lt;/a&gt; will read this files to see what prerequisites must be fulfilled before building or testing the distribution. If you with to shut this feature off, set the &lt;code&gt;NO_MYMETA&lt;/code&gt;&lt;code&gt;WriteMakeFile()&lt;/code&gt; flag to true.</source>
          <target state="translated">（如果已安装&lt;a href=&quot;../cpan/meta&quot;&gt;CPAN :: Meta&lt;/a&gt;）。诸如&lt;a href=&quot;../cpan&quot;&gt;CPAN&lt;/a&gt;或&lt;a href=&quot;http://search.cpan.org/perldoc/CPANPLUS&quot;&gt;CPANPLUS之&lt;/a&gt;类的客户端将阅读此文件，以了解在构建或测试发行版之前必须满足哪些先决条件。如果要关闭此功能，请将 &lt;code&gt;NO_MYMETA&lt;/code&gt; &lt;code&gt;WriteMakeFile()&lt;/code&gt; 标志设置为true。</target>
        </trans-unit>
        <trans-unit id="74e7cc4a040d094131ce7adf1ccff6a9eb9bc3ff" translate="yes" xml:space="preserve">
          <source>(if it exists) are ignored.</source>
          <target state="translated">（如果存在）被忽略。</target>
        </trans-unit>
        <trans-unit id="8bd7b4287b1a4320a59f0e97575d78114f1f439c" translate="yes" xml:space="preserve">
          <source>(ignore multiple &lt;code&gt;warning L4085&lt;/code&gt; ).</source>
          <target state="translated">（忽略多个 &lt;code&gt;warning L4085&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="51361c690dc77f93fb8886da6627b841196647e3" translate="yes" xml:space="preserve">
          <source>(in a new</source>
          <target state="translated">（在新</target>
        </trans-unit>
        <trans-unit id="92af5b7be830c62c74b2cbee2ea3528c112d9b33" translate="yes" xml:space="preserve">
          <source>(in the CPAN distribution of this module) for how to create a class that supports object sharing.</source>
          <target state="translated">（在此模块的CPAN分发中）以了解如何创建支持对象共享的类。</target>
        </trans-unit>
        <trans-unit id="facc7193d5281131d9b0521947b073e2e6c2eb5b" translate="yes" xml:space="preserve">
          <source>(installed as</source>
          <target state="translated">（安装为</target>
        </trans-unit>
        <trans-unit id="70b861787e317f2c2b8cac2c8a1c5c4c08c57918" translate="yes" xml:space="preserve">
          <source>(installed as &lt;a href=&quot;perlamiga&quot;&gt;perlamiga&lt;/a&gt;).</source>
          <target state="translated">（安装为&lt;a href=&quot;perlamiga&quot;&gt;perlamiga&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="4a2fc6f0afe5ebafb971a5f6f6450a8a8966ee80" translate="yes" xml:space="preserve">
          <source>(installed as &lt;a href=&quot;perlcygwin&quot;&gt;perlcygwin&lt;/a&gt;), &lt;a href=&quot;http://www.cygwin.com/&quot;&gt;http://www.cygwin.com/&lt;/a&gt;</source>
          <target state="translated">（安装为&lt;a href=&quot;perlcygwin&quot;&gt;perlcygwin&lt;/a&gt;），&lt;a href=&quot;http://www.cygwin.com/&quot;&gt;http&lt;/a&gt;：//www.cygwin.com/</target>
        </trans-unit>
        <trans-unit id="d21126d258fc7e5193f50e33b705649c9f31bd37" translate="yes" xml:space="preserve">
          <source>(installed as &lt;a href=&quot;perlvos&quot;&gt;perlvos&lt;/a&gt;)</source>
          <target state="translated">（作为&lt;a href=&quot;perlvos&quot;&gt;perlvos&lt;/a&gt;安装）</target>
        </trans-unit>
        <trans-unit id="69a2857991e5de08a1db31d1251389885ffd8caa" translate="yes" xml:space="preserve">
          <source>(internal use only)</source>
          <target state="translated">（仅供内部使用）</target>
        </trans-unit>
        <trans-unit id="3745d664a5cb578c0bc49111f2af5da3e3f2d003" translate="yes" xml:space="preserve">
          <source>(just by the name of the IO function, like &quot;Read&quot;) with the</source>
          <target state="translated">（仅按IO功能的名称，例如&amp;ldquo;读取&amp;rdquo;），</target>
        </trans-unit>
        <trans-unit id="cd5c26a005439b782269db0e964b40fc7eca11de" translate="yes" xml:space="preserve">
          <source>(like &lt;code&gt;COMBINING ACUTE ACCENT&lt;/code&gt; ). This sequence of base character and modifiers is called a</source>
          <target state="translated">（如 &lt;code&gt;COMBINING ACUTE ACCENT&lt;/code&gt; ）。这个基本字符和修饰符的序列称为</target>
        </trans-unit>
        <trans-unit id="8620bf49ecd95e38b6d7494e30b7d9014d4bad52" translate="yes" xml:space="preserve">
          <source>(like &lt;code&gt;LATIN CAPITAL LETTER A&lt;/code&gt; ) followed by one or more</source>
          <target state="translated">（例如&amp;ldquo; &lt;code&gt;LATIN CAPITAL LETTER A&lt;/code&gt; ），然后是一个或多个</target>
        </trans-unit>
        <trans-unit id="898558423b918aeed50b4db293c37dc4600aa4d3" translate="yes" xml:space="preserve">
          <source>(may be system dependent). If you want to force the creation of a new perl, it is recommended that you delete this</source>
          <target state="translated">（可能取决于系统）。如果要强制创建新的Perl，建议您删除此</target>
        </trans-unit>
        <trans-unit id="b135c873a61fbd2b70216d59897dae798e688cac" translate="yes" xml:space="preserve">
          <source>(minimum) width</source>
          <target state="translated">（最小）宽度</target>
        </trans-unit>
        <trans-unit id="fb68136270e91ed8ffdbfd39c681ea2d1e249f38" translate="yes" xml:space="preserve">
          <source>(nearly all modules) this has three side effects:</source>
          <target state="translated">（几乎所有模块）这具有三个副作用：</target>
        </trans-unit>
        <trans-unit id="394df79e888bb4bc8d5dd0e24df5f278d4cdc8b9" translate="yes" xml:space="preserve">
          <source>(no extension) give an argument &lt;code&gt;n:/bin/blah.&lt;/code&gt; (dot appended) to system().</source>
          <target state="translated">（无扩展名）提供参数 &lt;code&gt;n:/bin/blah.&lt;/code&gt; （附加点）到system（）。</target>
        </trans-unit>
        <trans-unit id="e0f8b79485e24e1aa85b5719818060e99b9fac5a" translate="yes" xml:space="preserve">
          <source>(non-super) languages that are probably acceptable to the user, to be used</source>
          <target state="translated">用户可能会接受的（非超级）语言</target>
        </trans-unit>
        <trans-unit id="df56c4328df4065d33cb67c45603001892660f7c" translate="yes" xml:space="preserve">
          <source>(not locales). See the GNU &lt;code&gt;gettext&lt;/code&gt; library documentation for more information.</source>
          <target state="translated">（不是语言环境）。有关更多信息，请参见GNU &lt;code&gt;gettext&lt;/code&gt; 库文档。</target>
        </trans-unit>
        <trans-unit id="ca133eb8cde4644a55bd2dd3514979460453ef7d" translate="yes" xml:space="preserve">
          <source>(not simply older ones) set the &lt;code&gt;UNINST&lt;/code&gt; variable.</source>
          <target state="translated">（不只是较旧的变量）设置 &lt;code&gt;UNINST&lt;/code&gt; 变量。</target>
        </trans-unit>
        <trans-unit id="87ba0557f46520422b4ad12ed987b7a873c1f334" translate="yes" xml:space="preserve">
          <source>(not) +</source>
          <target state="translated">（不是）+</target>
        </trans-unit>
        <trans-unit id="a87bac478adeaad45a131a7a1ff824736853050d" translate="yes" xml:space="preserve">
          <source>(note that the argument &lt;code&gt;-my_opts&lt;/code&gt; is taken care of by the &lt;code&gt;extproc&lt;/code&gt; line in your script, see &lt;a href=&quot;#extproc-on-the-first-line&quot;&gt;extproc on the first line&lt;/a&gt;).</source>
          <target state="translated">（请注意， &lt;code&gt;-my_opts&lt;/code&gt; 参数由脚本中的 &lt;code&gt;extproc&lt;/code&gt; 行处理，请参见&lt;a href=&quot;#extproc-on-the-first-line&quot;&gt;第一行上的extproc&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="2252501faf83dd862f721d37d7fabacb6191045c" translate="yes" xml:space="preserve">
          <source>(note the capital 'O')?</source>
          <target state="translated">（注意大写的&amp;ldquo; O&amp;rdquo;）？</target>
        </trans-unit>
        <trans-unit id="943a0a81a1832953a2e589fda6975dd0742c8224" translate="yes" xml:space="preserve">
          <source>(or a later version). Note that all these utilities are known to be available from LEO:</source>
          <target state="translated">（或更高版本）。请注意，所有这些实用程序都可以从LEO获得：</target>
        </trans-unit>
        <trans-unit id="c1d876dbf1a11aabf97fb7b5ced558dd7fc14007" translate="yes" xml:space="preserve">
          <source>(or current directory) and working back up to five levels of '..'.</source>
          <target state="translated">（或当前目录），并最多备份五个级别的&amp;ldquo; ..&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="5d789ea9ecbca64db40cc5cf855ac5aab3b99f9f" translate="yes" xml:space="preserve">
          <source>(or equivalent) to check for executable image, and</source>
          <target state="translated">（或同等功能）以检查可执行映像，以及</target>
        </trans-unit>
        <trans-unit id="f682b3c18a9391cb4e366a7aa9b5a7cb465c2e8c" translate="yes" xml:space="preserve">
          <source>(or formerly</source>
          <target state="translated">（或以前</target>
        </trans-unit>
        <trans-unit id="d403fe550f70047da65adfbaaaa9a12d0ea25d65" translate="yes" xml:space="preserve">
          <source>(or something like that).</source>
          <target state="translated">（或类似的东西）。</target>
        </trans-unit>
        <trans-unit id="b78679543a880190c17b815dfea3958a0c6bb773" translate="yes" xml:space="preserve">
          <source>(or the second if the first character is a caret) character of a bracketed character class, it does not denote the end of the class (as you cannot have an empty class) and is considered part of the set of characters that can be matched without escaping.</source>
          <target state="translated">（或第二个字符，如果第一个字符是插入符号）放在方括号字符类中，则它不表示该类的末尾（因为您不能有空类），并且被认为是可以匹配的字符集的一部分没有逃脱。</target>
        </trans-unit>
        <trans-unit id="d8c8bb7d961236b850f553d2b4e51bb846fabeed" translate="yes" xml:space="preserve">
          <source>(or the value is discarded if</source>
          <target state="translated">（或者，如果</target>
        </trans-unit>
        <trans-unit id="a47590de5dce94882f3eb07aab9c1f1f12b27039" translate="yes" xml:space="preserve">
          <source>(or you could just use &lt;code&gt;VMS::Stdio::remove&lt;/code&gt; , if you've installed the VMS::Stdio extension distributed with Perl). If &lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink&lt;/a&gt;&lt;/code&gt; has to change the file protection to delete the file, and you interrupt it in midstream, the file may be left intact, but with a changed ACL allowing you delete access.</source>
          <target state="translated">（或者，如果您已经安装了与Perl一起分发的VMS :: Stdio扩展，则可以只使用 &lt;code&gt;VMS::Stdio::remove&lt;/code&gt; ）。如果 &lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink&lt;/a&gt;&lt;/code&gt; 必须更改文件保护以删除文件，并且您在中途中断了文件，则该文件可能会保留完整，但使用更改后的ACL可以删除访问权限。</target>
        </trans-unit>
        <trans-unit id="5cc4703905ea087120e18389a3b56b4989f1d0ce" translate="yes" xml:space="preserve">
          <source>(or your operating system's equivalent) could not be opened.</source>
          <target state="translated">（或您的操作系统的等效版本）无法打开。</target>
        </trans-unit>
        <trans-unit id="d217df85ffcaff01b34839a3630a0f8777e5129a" translate="yes" xml:space="preserve">
          <source>(or your platform's equivalent procedure) to verify that &lt;b&gt;perl&lt;/b&gt; and its libraries have been installed correctly. A correct installation is verified by output that looks like:</source>
          <target state="translated">（或您平台的等效过程）来验证&lt;b&gt;perl&lt;/b&gt;及其库是否已正确安装。如下所示的输出将验证正确的安装：</target>
        </trans-unit>
        <trans-unit id="17fc4954c0e2adfe4c1931803c04d50628b02fa1" translate="yes" xml:space="preserve">
          <source>(or, you don't have to do this yourself because this example is predefined)</source>
          <target state="translated">（或者，您不必自己执行此操作，因为此示例是预定义的）</target>
        </trans-unit>
        <trans-unit id="0f663554f9cc36dcf3f1877c497fb678b76cc2ed" translate="yes" xml:space="preserve">
          <source>(override) Because of the difficulty concatenating VMS filepaths we must pre-expand the DEST* variables.</source>
          <target state="translated">（重写）由于连接VMS文件路径很困难，因此我们必须预展开DEST *变量。</target>
        </trans-unit>
        <trans-unit id="3e64e5c52f4cbf325d544d16b24131a72496547d" translate="yes" xml:space="preserve">
          <source>(part of the standard perl distribution), which never really got finished. If you find it somewhere,</source>
          <target state="translated">（标准perl发行版的一部分），但从未真正完成。如果在某处找到</target>
        </trans-unit>
        <trans-unit id="922530c6dd5e24c25c5c1c085800263ea1126411" translate="yes" xml:space="preserve">
          <source>(partly contributed by Aaron Sherman)</source>
          <target state="translated">（由Aaron Sherman部分贡献）</target>
        </trans-unit>
        <trans-unit id="cd3adb25404edd24eec9d649c8bcb704ae0342ed" translate="yes" xml:space="preserve">
          <source>(portions of this answer contributed by Anno Siegel and brian d foy)</source>
          <target state="translated">（部分答案由Anno Siegel和brian d foy提供）</target>
        </trans-unit>
        <trans-unit id="3b2cc61f70b62caaa55962a8021228deb590a600" translate="yes" xml:space="preserve">
          <source>(rather than filename) based input and output. These are safe on the assumption that only pre-existing filehandles are available for use. Usually, to create new filehandles other ops such as open would need to be enabled, if you don't take into account the magical open of ARGV.</source>
          <target state="translated">（而不是文件名）基于输入和输出。假设只有预先存在的文件句柄可供使用，它们是安全的。通常，如果您不考虑ARGV的神奇打开功能，则需要创建其他文件操作（例如open）来创建新的文件句柄。</target>
        </trans-unit>
        <trans-unit id="2848ad6e5d5a5174fbf33c0f002b92ca3e779b91" translate="yes" xml:space="preserve">
          <source>(rho, theta, pi)</source>
          <target state="translated">（rho，theta，pi）</target>
        </trans-unit>
        <trans-unit id="301eec20fcb8d08c4b477b134f84eea526c7c5a2" translate="yes" xml:space="preserve">
          <source>(rho, theta, z)</source>
          <target state="translated">（rho，theta，z）</target>
        </trans-unit>
        <trans-unit id="6f1730b3336db772520f06bb063d6d6eb975d7d1" translate="yes" xml:space="preserve">
          <source>(see &lt;a href=&quot;#perl_.exe&quot;&gt;perl_.exe&lt;/a&gt;) by</source>
          <target state="translated">（请参阅&lt;a href=&quot;#perl_.exe&quot;&gt;perl_.exe&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="57d66dd0e5298b5e96ec3ad469013acc44ce6276" translate="yes" xml:space="preserve">
          <source>(see &lt;a href=&quot;#perl__.exe&quot;&gt;perl__.exe&lt;/a&gt;) if you want to use PM code in your application (as Perl/Tk or OpenGL Perl modules do) without having a text-mode window present.</source>
          <target state="translated">（请参阅&lt;a href=&quot;#perl__.exe&quot;&gt;perl __。exe&lt;/a&gt;），如果您想在应用程序中使用PM代码（如Perl / Tk或OpenGL Perl模块那样）而没有文本模式窗口。</target>
        </trans-unit>
        <trans-unit id="13897f93e1b34b9d187d47d10d0d7a7feddc3e26" translate="yes" xml:space="preserve">
          <source>(see &lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;) are for. (Avoid exec() (see &lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;) unless you know what you do).</source>
          <target state="translated">（请参阅&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;）用于。（除非您知道自己要做什么，否则请避免使用exec（）（请参阅&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="166724a371ebce21c3789346fabcb64d75a9043d" translate="yes" xml:space="preserve">
          <source>(see &lt;a href=&quot;perlvms&quot;&gt;perlvms&lt;/a&gt;) so that environ is not searched.</source>
          <target state="translated">（请参阅&lt;a href=&quot;perlvms&quot;&gt;perlvms&lt;/a&gt;），以便不搜索环境。</target>
        </trans-unit>
        <trans-unit id="54b36cc8bf5ee45ddbf22c302f0ff8899587445f" translate="yes" xml:space="preserve">
          <source>(see &lt;a href=&quot;perlvms&quot;&gt;perlvms&lt;/a&gt;) so that the environ array isn't the target of the change to %ENV which produced the warning.</source>
          <target state="translated">（请参阅&lt;a href=&quot;perlvms&quot;&gt;perlvms&lt;/a&gt;），以便环境数组不是产生警告的％ENV更改的目标。</target>
        </trans-unit>
        <trans-unit id="fdb75cfc3f651d35ec9dce7ef8ff84370b4689f6" translate="yes" xml:space="preserve">
          <source>(see &lt;a href=&quot;warnings&quot;&gt;warnings&lt;/a&gt;). In this mode of operation, Perl will raise the warning for all matches against a non-Unicode code point (not just the arguable ones), and it skips the optimizations that might cause the warning to not be output. (It currently still won't warn if the match isn't even attempted, like in the &lt;code&gt;&quot;foobar&quot;&lt;/code&gt; example above.)</source>
          <target state="translated">（请参阅&lt;a href=&quot;warnings&quot;&gt;警告&lt;/a&gt;）。在这种操作模式下，Perl将针对非Unicode代码点（不仅是可争论的代码点）的所有匹配项发出警告，并且跳过可能导致警告不输出的优化。（例如，即使上面的 &lt;code&gt;&quot;foobar&quot;&lt;/code&gt; 示例中没有尝试匹配，它仍然不会发出警告。）</target>
        </trans-unit>
        <trans-unit id="ae2592aa43fa906f33435791e9b2cf177d7b8878" translate="yes" xml:space="preserve">
          <source>(see Annex 8, UAX #15; and</source>
          <target state="translated">（请参阅UAX＃15附件8；以及</target>
        </trans-unit>
        <trans-unit id="bfe137530e41031a5af4ace868c82fe0baa9a25b" translate="yes" xml:space="preserve">
          <source>(see below) and/or</source>
          <target state="translated">（请参见下文）和/或</target>
        </trans-unit>
        <trans-unit id="2d2a37102316b6b5d1b884637aaaac148e2b754c" translate="yes" xml:space="preserve">
          <source>(see, it's even smart enough to fix my obvious date bug)</source>
          <target state="translated">（看，它甚至足够聪明，可以修复我明显的日期错误）</target>
        </trans-unit>
        <trans-unit id="219b75b05739b79a0aeb3aa178076f50dcc11a3c" translate="yes" xml:space="preserve">
          <source>(short for Posix Space) Starting in 5.18, this is identical in all its forms to the corresponding &lt;code&gt;isSPACE()&lt;/code&gt; macros. The locale forms of this macro are identical to their corresponding &lt;code&gt;isSPACE()&lt;/code&gt; forms in all Perl releases. In releases prior to 5.18, the non-locale forms differ from their &lt;code&gt;isSPACE()&lt;/code&gt; forms only in that the &lt;code&gt;isSPACE()&lt;/code&gt; forms don't match a Vertical Tab, and the &lt;code&gt;isPSXSPC()&lt;/code&gt; forms do. Otherwise they are identical. Thus this macro is analogous to what &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:space:]]/&lt;/a&gt;&lt;/code&gt; matches in a regular expression. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isPSXSPC_A&lt;/code&gt; , &lt;code&gt;isPSXSPC_L1&lt;/code&gt; , &lt;code&gt;isPSXSPC_uni&lt;/code&gt; , &lt;code&gt;isPSXSPC_utf8&lt;/code&gt; , &lt;code&gt;isPSXSPC_LC&lt;/code&gt; , &lt;code&gt;isPSXSPC_LC_uvchr&lt;/code&gt; , and &lt;code&gt;isPSXSPC_LC_utf8&lt;/code&gt; .</source>
          <target state="translated">（Posix Space的缩写）从5.18开始，其所有形式都与相应的 &lt;code&gt;isSPACE()&lt;/code&gt; 宏相同。在所有Perl版本中，此宏的语言环境形式与其对应的 &lt;code&gt;isSPACE()&lt;/code&gt; 形式相同。在5.18之前的版本中，非语言环境形式与它们的 &lt;code&gt;isSPACE()&lt;/code&gt; 形式的不同之处仅在于， &lt;code&gt;isSPACE()&lt;/code&gt; 形式与Vertical Tab不匹配，而 &lt;code&gt;isPSXSPC()&lt;/code&gt; 形式与。否则它们是相同的。因此，该宏类似于正则表达式中 &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:space:]]/&lt;/a&gt;&lt;/code&gt; 匹配的宏。请参阅&lt;a href=&quot;#Character-classification&quot;&gt;本节的顶部&lt;/a&gt;为变种的解释 &lt;code&gt;isPSXSPC_A&lt;/code&gt; ， &lt;code&gt;isPSXSPC_L1&lt;/code&gt; ， &lt;code&gt;isPSXSPC_uni&lt;/code&gt; ， &lt;code&gt;isPSXSPC_utf8&lt;/code&gt; ， &lt;code&gt;isPSXSPC_LC&lt;/code&gt; ， &lt;code&gt;isPSXSPC_LC_uvchr&lt;/code&gt; 和 &lt;code&gt;isPSXSPC_LC_utf8&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4bd5a16e31ac15e68b14071791ee2945208fa3f4" translate="yes" xml:space="preserve">
          <source>(so &lt;code&gt;!foo&lt;/code&gt; would match anything</source>
          <target state="translated">（所以 &lt;code&gt;!foo&lt;/code&gt; 可以匹配任何东西</target>
        </trans-unit>
        <trans-unit id="4c78e0c73b6b30ea430253f9fd658c00503bafdb" translate="yes" xml:space="preserve">
          <source>(that basically means POSIX fopen() style mode strings plus an optional number to indicate the compression level).</source>
          <target state="translated">（这基本上意味着POSIX fopen（）样式模式字符串加上一个可选数字以指示压缩级别）。</target>
        </trans-unit>
        <trans-unit id="4b9770fcc7679e51bf57c83553ccf77d479a096c" translate="yes" xml:space="preserve">
          <source>(that is, the loop is broken) when Perl detects that a repeated expression matched a zero-length substring. Thus</source>
          <target state="translated">当Perl检测到重复的表达式与零长度的子字符串匹配时（循环中断）。从而</target>
        </trans-unit>
        <trans-unit id="2c2b3767cd67fda7e4ff13d64bc55c53b4c03d5d" translate="yes" xml:space="preserve">
          <source>(that's not a misspelling!) has some good tips on optimization, too. Advice on benchmarking boils down to: benchmark and profile to make sure you're optimizing the right part, look for better algorithms instead of microtuning your code, and when all else fails consider just buying faster hardware. You will probably want to read the answer to the earlier question &quot;How do I profile my Perl programs?&quot; if you haven't done so already.</source>
          <target state="translated">（这不是拼写错误！）也有一些关于优化的好技巧。关于基准测试的建议可以归结为：基准测试和配置文件，以确保您在优化正确的部分，寻找更好的算法而不是微调代码，而当所有其他方法均失败时，请考虑购买更快的硬件。您可能希望阅读前面的问题&amp;ldquo;如何配置我的Perl程序？&amp;rdquo;的答案。如果您还没有这样做的话。</target>
        </trans-unit>
        <trans-unit id="afd3f53e28b683fb99368ef0532ecf0f00244306" translate="yes" xml:space="preserve">
          <source>(the Camel, 3rd edition) or elsewhere, &lt;code&gt;:raw&lt;/code&gt; is</source>
          <target state="translated">（骆驼，第三版）或其他地方， &lt;code&gt;:raw&lt;/code&gt; 是</target>
        </trans-unit>
        <trans-unit id="47fb842f1ec30dc0c1028b06b28202730238d4d6" translate="yes" xml:space="preserve">
          <source>(the bug, fixed in Perl 5.14, is described in &lt;a href=&quot;#BUGS&quot;&gt;BUGS&lt;/a&gt;). One can use this new interface as</source>
          <target state="translated">（该错误在Perl 5.14中修复，在&lt;a href=&quot;#BUGS&quot;&gt;BUGS中进行了&lt;/a&gt;描述）。可以将这个新界面用作</target>
        </trans-unit>
        <trans-unit id="d1c731c58fb8625c1995a9c0d6a37456f30eb3dd" translate="yes" xml:space="preserve">
          <source>(the natural logarithm base) to the power of EXPR. If EXPR is omitted, gives &lt;code&gt;&lt;a href=&quot;exp&quot;&gt;exp($_)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">（自然对数底）到EXPR的幂。如果省略EXPR，则给出 &lt;code&gt;&lt;a href=&quot;exp&quot;&gt;exp($_)&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9ca0b781f69e1f8267342418d798ec9abc7f7b5c" translate="yes" xml:space="preserve">
          <source>(the natural logarithm base) to the power of EXPR. If EXPR is omitted, gives &lt;code&gt;&lt;a href=&quot;functions/exp&quot;&gt;exp($_)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">（自然对数底）到EXPR的幂。如果省略EXPR，则给出 &lt;code&gt;&lt;a href=&quot;functions/exp&quot;&gt;exp($_)&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e56b737030fe6f76e87a3edfc44265d91450bf34" translate="yes" xml:space="preserve">
          <source>(this may not work on some bizarre filesystems). One should conscientiously choose between the</source>
          <target state="translated">（这可能不适用于某些奇怪的文件系统）。一个人应该认真选择</target>
        </trans-unit>
        <trans-unit id="97ab80c9e1fe35bb7e8323fbb0d7feb27b6cbb77" translate="yes" xml:space="preserve">
          <source>(treat these hex digits as line noise). After this is fixed the build should finish without a lot of fuss.</source>
          <target state="translated">（将这些十六进制数字作为线路噪声处理）。修复此问题后，构建应该完成，而不必大惊小怪。</target>
        </trans-unit>
        <trans-unit id="1d7a9fe8570b8bcea8b9fe9361ea9bf6600d2508" translate="yes" xml:space="preserve">
          <source>(unless a</source>
          <target state="translated">（除非一个</target>
        </trans-unit>
        <trans-unit id="4ec7a0d80a1ccd184b27056d454ee1153e6b5715" translate="yes" xml:space="preserve">
          <source>(used only by</source>
          <target state="translated">（仅由</target>
        </trans-unit>
        <trans-unit id="ac5be747962c1aeaac7e7c81736092a7bc08bb8b" translate="yes" xml:space="preserve">
          <source>(user + system time) spent by the process since the first call to clock() (the definition is &lt;b&gt;not&lt;/b&gt; &quot;since the start of the process&quot;, though if you are lucky these times may be quite close to each other, depending on the system). What this means is that you probably need to store the result of your first call to clock(), and subtract that value from the following results of clock().</source>
          <target state="translated">自第一次调用clock（）以来，进程所花费的（用户+系统时间）（定义&lt;b&gt;不是&lt;/b&gt; &amp;ldquo;自进程开始以来&amp;rdquo;，尽管如果幸运的话，这些时间可能彼此接近，具体取决于系统）。这意味着您可能需要存储第一次调用clock（）的结果，并从以下clock（）结果中减去该值。</target>
        </trans-unit>
        <trans-unit id="88e896a405e3f46934bf9370e95fa7933a886563" translate="yes" xml:space="preserve">
          <source>(using &lt;code&gt;Z_FULL_FLUSH&lt;/code&gt; ).</source>
          <target state="translated">（使用 &lt;code&gt;Z_FULL_FLUSH&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="02603cd1eae933c0c785a3f79537a20ecf4da31e" translate="yes" xml:space="preserve">
          <source>(where</source>
          <target state="translated">(where</target>
        </trans-unit>
        <trans-unit id="eb610507830351fb8e108f368c849e043989f99c" translate="yes" xml:space="preserve">
          <source>(whether an htmlname, or a number in any base) must consist only of alphanumeric characters -- that is,</source>
          <target state="translated">（无论是htmlname还是任何基数的数字）都只能由字母数字字符组成，也就是说，</target>
        </trans-unit>
        <trans-unit id="f4cc7c250419a5d866584f91196b41206d58a2e6" translate="yes" xml:space="preserve">
          <source>(which depend on the process)</source>
          <target state="translated">（取决于过程）</target>
        </trans-unit>
        <trans-unit id="a565a6a28b6032770c35f345aa4e5afd3ef5d6b8" translate="yes" xml:space="preserve">
          <source>(which do nothing, and return zero and -1, respectively) or for certain methods you may assume a default behaviour by using a NULL method. The Open method looks for help in the 'parent' layer. The following table summarizes the behaviour:</source>
          <target state="translated">（不执行任何操作，并分别返回零和-1），或者对于某些方法，您可以使用NULL方法来采取默认行为。Open方法在&amp;ldquo;父&amp;rdquo;层中寻求帮助。下表总结了行为：</target>
        </trans-unit>
        <trans-unit id="d1bfbda3f08bba5e0a64d2c55993b9b59a747e61" translate="yes" xml:space="preserve">
          <source>(which finds the range of code points in the block using &lt;code&gt;prop_invlist&lt;/code&gt; , gets the lower end of the range (0th element) and then looks up the old name for its block using &lt;code&gt;charblock&lt;/code&gt; ).</source>
          <target state="translated">（它使用 &lt;code&gt;prop_invlist&lt;/code&gt; 查找块中代码点的范围，获取范围的下限（第0个元素），然后使用 &lt;code&gt;charblock&lt;/code&gt; 查找其块的旧名称）。</target>
        </trans-unit>
        <trans-unit id="2bd9e615b04879bf500ca0444285c7b5f58ebaef" translate="yes" xml:space="preserve">
          <source>(which is part of the</source>
          <target state="translated">（这是</target>
        </trans-unit>
        <trans-unit id="11e91a933773803dea4f7027fc85914141f0b47a" translate="yes" xml:space="preserve">
          <source>(which is used instead)</source>
          <target state="translated">（改为使用）</target>
        </trans-unit>
        <trans-unit id="a6b9b21d617162cc10b61d0e599ca09bfc3a8860" translate="yes" xml:space="preserve">
          <source>(with a handful of exceptions). This is an unfortunate backwards compatibility feature and its use is &lt;b&gt;strongly &lt;a href=&quot;perlpolicy#discouraged&quot;&gt;discouraged&lt;/a&gt;&lt;/b&gt;. You should either prevent the exporting (by saying &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; POSIX ();&lt;/code&gt; , as usual) and then use fully qualified names (e.g. &lt;code&gt;POSIX::SEEK_END&lt;/code&gt; ), or give an explicit import list. If you do neither and opt for the default (as in &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; POSIX;&lt;/code&gt; ), you will import</source>
          <target state="translated">（有少数例外）。这是一个不幸的向后兼容功能，&lt;b&gt;强烈&lt;a href=&quot;perlpolicy#discouraged&quot;&gt;建议不要&lt;/a&gt;&lt;/b&gt;使用它。您应该阻止导出（通常说 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; POSIX ();&lt;/code&gt; ），然后使用完全限定的名称（例如 &lt;code&gt;POSIX::SEEK_END&lt;/code&gt; ），或者给出明确的导入列表。如果您既不选择也不选择默认值（如 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; POSIX;&lt;/code&gt; ），则将导入</target>
        </trans-unit>
        <trans-unit id="0e1ed24ac3f83e4bb613f4329aa059c4bf5a4c9c" translate="yes" xml:space="preserve">
          <source>(x, y, z)</source>
          <target state="translated">（x，y，z）</target>
        </trans-unit>
        <trans-unit id="b6f844fee20c55f354c3646d70d08bb8aafbffec" translate="yes" xml:space="preserve">
          <source>(you may need to manually add &lt;code&gt;PERLTYPE=-DPERL_CORE&lt;/code&gt; to this commandline on some versions of Perl; the symptom is that the command-line globbing does not work from OS/2 shells with the newly-compiled executable; check with</source>
          <target state="translated">（您可能需要在某些版本的Perl上手动将 &lt;code&gt;PERLTYPE=-DPERL_CORE&lt;/code&gt; 添加到此命令行；症状是使用新编译的可执行文件在OS / 2 shell中无法进行命令行glob；</target>
        </trans-unit>
        <trans-unit id="a4ad693788c41eaba8ea97f5859834b29c279024" translate="yes" xml:space="preserve">
          <source>(you probably need to add &lt;code&gt;-shared&lt;/code&gt; to the &amp;lt;-Alddlflags&amp;gt; line until RT #118199 is resolved)</source>
          <target state="translated">（你可能需要添加 &lt;code&gt;-shared&lt;/code&gt; 到&amp;lt;-Alddlflags&amp;gt;行直到RT＃118199解析）</target>
        </trans-unit>
        <trans-unit id="eb95089a2aff367522b36d81eeb4af3aa05259c5" translate="yes" xml:space="preserve">
          <source>) Nested backslashed delimiters, embedded balanced bracket delimiters (for the quotelike operators), and trailing modifiers are all caught. For example, in:</source>
          <target state="translated">）嵌套的反斜杠定界符，嵌入式平衡括号定界符（用于quotelike运算符）和尾随修饰符都被捕获。例如，在：</target>
        </trans-unit>
        <trans-unit id="93d1e11773c70e0093dfdf1605f54536a30c04cb" translate="yes" xml:space="preserve">
          <source>) add together two &lt;code&gt;gvsv&lt;/code&gt; s.</source>
          <target state="translated">）将两个 &lt;code&gt;gvsv&lt;/code&gt; 相加。</target>
        </trans-unit>
        <trans-unit id="487acab4d37dcb1f88d4268398b649368558f781" translate="yes" xml:space="preserve">
          <source>) and XS code (defined in</source>
          <target state="translated">）和XS代码（在</target>
        </trans-unit>
        <trans-unit id="2af0dc8b4d4fee8ec4a7da24968fc60d5db6f74b" translate="yes" xml:space="preserve">
          <source>) and for which I'll ignore the return value (that's the</source>
          <target state="translated">），而我将忽略其返回值（即</target>
        </trans-unit>
        <trans-unit id="5165405c0c57dc222008e31631e6e1160f7f0b2c" translate="yes" xml:space="preserve">
          <source>) and those are hidden inside</source>
          <target state="translated">），并且隐藏在里面</target>
        </trans-unit>
        <trans-unit id="1e5051ed7ca1b9ef31e15eb004126ec2dc0cfec0" translate="yes" xml:space="preserve">
          <source>) and widths (32-bit and 64-bit being the most common today). This affects your programs when they attempt to transfer numbers in binary format from one CPU architecture to another, usually either &quot;live&quot; via network connection, or by storing the numbers to secondary storage such as a disk file or tape.</source>
          <target state="translated">）和宽度（当今最常见的是32位和64位）。当程序尝试将二进制格式的数字从一种CPU架构转移到另一种CPU架构时，这通常会影响它们，通常是通过网络连接&amp;ldquo;实时&amp;rdquo;传输，或者将数字存储到诸如磁盘文件或磁带的辅助存储中。</target>
        </trans-unit>
        <trans-unit id="78d8c7b5bfb4d1d699ad80186c17bd61d5ef6810" translate="yes" xml:space="preserve">
          <source>) are accessed in the function and &lt;code&gt;dTHX&lt;/code&gt; is not used (the &lt;code&gt;dTHX&lt;/code&gt; includes the &lt;code&gt;dVAR&lt;/code&gt; if necessary). One notices the need for &lt;code&gt;dVAR&lt;/code&gt; only with the said compile-time define, because otherwise the Perl global variables are visible as-is.</source>
          <target state="translated">）在函数访问和 &lt;code&gt;dTHX&lt;/code&gt; 不使用（在 &lt;code&gt;dTHX&lt;/code&gt; 包括 &lt;code&gt;dVAR&lt;/code&gt; 如有必要）。有人注意到仅在具有所述编译时定义的 &lt;code&gt;dVAR&lt;/code&gt; 才需要dVAR，因为否则，Perl全局变量按原样可见。</target>
        </trans-unit>
        <trans-unit id="f0af76cebde929dc98391babdd9523facf0df1cb" translate="yes" xml:space="preserve">
          <source>) are also supported Since cygwin-1.7 non-POSIX pathnames are discouraged. Names may contain all printable characters.</source>
          <target state="translated">也支持），因为不建议使用cygwin-1.7非POSIX路径名。名称可能包含所有可打印字符。</target>
        </trans-unit>
        <trans-unit id="4d63c0b1ccaa850ba2ad69dd4a8ae1f8f0b54402" translate="yes" xml:space="preserve">
          <source>) are now created with the names which contain a checksum, thus allowing workaround for OS/2 scheme of caching DLLs.</source>
          <target state="translated">）现在使用包含校验和的名称创建，从而允许OS / 2缓存DLL方案变通。</target>
        </trans-unit>
        <trans-unit id="b9bcffac0b0e948cf7f6c750635e76e9488261a5" translate="yes" xml:space="preserve">
          <source>) are the same in both EBCDIC and UTF-EBCDIC. Often, documentation will use the term &quot;UTF-8&quot; to mean UTF-EBCDIC as well. This is the case in this document.</source>
          <target state="translated">）在EBCDIC和UTF-EBCDIC中都相同。通常，文档也会使用术语&amp;ldquo; UTF-8&amp;rdquo;来表示UTF-EBCDIC。在本文档中就是这种情况。</target>
        </trans-unit>
        <trans-unit id="b688477e2141565165881be5ad0bc5987114795f" translate="yes" xml:space="preserve">
          <source>) are the same in both EBCDIC and UTF-EBCDIC.)</source>
          <target state="translated">）在EBCDIC和UTF-EBCDIC中都相同。）</target>
        </trans-unit>
        <trans-unit id="b4703b8b08940fcfc8d37175488b06d9c5c2113f" translate="yes" xml:space="preserve">
          <source>) are to be ignored (because they cannot be linked against).</source>
          <target state="translated">）将被忽略（因为它们无法链接）。</target>
        </trans-unit>
        <trans-unit id="228c4d656c7c5862fd93efef71f5a4b7ea37cfce" translate="yes" xml:space="preserve">
          <source>) as a hashref containing match criteria that determine if the current distribution matches the YAML document or not.</source>
          <target state="translated">）作为包含匹配条件的hashref，该条件确定当前发行版是否与YAML文档匹配。</target>
        </trans-unit>
        <trans-unit id="0094c9f9603398d1e8131509fbaec9e6e56aa8b2" translate="yes" xml:space="preserve">
          <source>) associated with the module. If so, these will be entirely transparent to the user of the module. It is the responsibility of the</source>
          <target state="translated">）与模块相关联。如果是这样，这些对模块用户将完全透明。这是</target>
        </trans-unit>
        <trans-unit id="8680fc3067e5b942a71155614ce3702a9457283f" translate="yes" xml:space="preserve">
          <source>) but simply depends on the choice of tmpdir() returned by L&amp;lt;:spec&amp;gt;. On some implementations this location can be set using the C</source>
          <target state="translated">），但仅取决于L &amp;lt;：spec&amp;gt;返回的tmpdir（）的选择。在某些实现中，可以使用C设置此位置</target>
        </trans-unit>
        <trans-unit id="c5659f7b4fec9440dfdc3905af70739f39cad629" translate="yes" xml:space="preserve">
          <source>) can be computed by the great_circle_direction() function:</source>
          <target state="translated">）可以由great_circle_direction（）函数计算：</target>
        </trans-unit>
        <trans-unit id="5fe6bd925320e38dae70ff8e3655937d2767bfc3" translate="yes" xml:space="preserve">
          <source>) can be tacked onto this variable to generate a list of directories to search.</source>
          <target state="translated">）可以附加到此变量上，以生成要搜索的目录列表。</target>
        </trans-unit>
        <trans-unit id="a71d8063cc2fcb4f0ab849a5cf4c8ea8ac77b0fa" translate="yes" xml:space="preserve">
          <source>) contains references to many socket functions which need to be resolved when it's loaded. Most platforms will automatically know where to find the 'dependent' library (e.g.,</source>
          <target state="translated">）包含对许多套接字函数的引用，这些函数在加载时需要解决。大多数平台都会自动知道在哪里可以找到&amp;ldquo;依赖&amp;rdquo;库（例如，</target>
        </trans-unit>
        <trans-unit id="6380e7df837c25d9969247c6e203303247a8eb62" translate="yes" xml:space="preserve">
          <source>) for a thorough grounding and reference on the topic.</source>
          <target state="translated">），以获取有关该主题的全面基础和参考。</target>
        </trans-unit>
        <trans-unit id="1ef4dbc4e616fa1d18518cdf57dc3f1eed3a7798" translate="yes" xml:space="preserve">
          <source>) for the default perl executable, but for a more ambitious host (like the one that would do fork() emulation) all the extra work needed to pretend that different interpreters are actually different &quot;processes&quot;, would be done here.</source>
          <target state="translated">），以使用默认的perl可执行文件，但对于雄心勃勃的主机（例如将进行fork（）仿真的主机），所有需要假装不同的解释器实际上是不同的&amp;ldquo;进程&amp;rdquo;的额外工作将在此处完成。</target>
        </trans-unit>
        <trans-unit id="b34bf46ab4b61641e16b10e09bd70715019def08" translate="yes" xml:space="preserve">
          <source>) for your machine. If your compiler complains that certain functions are undefined, or that it can't locate</source>
          <target state="translated">）。如果您的编译器抱怨某些函数未定义，或者找不到</target>
        </trans-unit>
        <trans-unit id="0c582b687e9340adf76bd136bafc7a4e60851dd4" translate="yes" xml:space="preserve">
          <source>) from the database.</source>
          <target state="translated">）。</target>
        </trans-unit>
        <trans-unit id="116f8f88f4b3848fbd987990694e39bf840bb1eb" translate="yes" xml:space="preserve">
          <source>) guaranteed to be large enough to represent the size of any string that perl can handle.</source>
          <target state="translated">）保证足够大，以表示perl可以处理的任何字符串的大小。</target>
        </trans-unit>
        <trans-unit id="337e0c227846bd92d32db8132d6dfda91291a31c" translate="yes" xml:space="preserve">
          <source>) happens to do both these things.</source>
          <target state="translated">）碰巧同时做这两个事情。</target>
        </trans-unit>
        <trans-unit id="8ddfd9e5fba9d0bfae55c0a9cf8e0e887dd2de61" translate="yes" xml:space="preserve">
          <source>) if set, overrides the path to the perl executable that should be used to run the tests (the default being</source>
          <target state="translated">）（如果已设置），则会覆盖用于运行测试的perl可执行文件的路径（默认为</target>
        </trans-unit>
        <trans-unit id="ddd938892f2a1218d436a7ea869a8e613d6a7846" translate="yes" xml:space="preserve">
          <source>) if the constructor was called with UNLINK set to 1 (the default state if UNLINK is not specified).</source>
          <target state="translated">），如果在将UNLINK设置为1的情况下调用了构造函数（如果未指定UNLINK，则为默认状态）。</target>
        </trans-unit>
        <trans-unit id="475773772c97e29ee6060b95810ad4e1376538fc" translate="yes" xml:space="preserve">
          <source>) illustrating the creation, use and monitoring of a pool of</source>
          <target state="translated">）说明池的创建，使用和监控</target>
        </trans-unit>
        <trans-unit id="e7e44a7e4150f8fa3f3b373c79a37f8b07bb4a24" translate="yes" xml:space="preserve">
          <source>) into an SV whose reference is rv. SV is blessed if &lt;code&gt;classname&lt;/code&gt; is non-null.</source>
          <target state="translated">）转换为参考为rv的SV。如果 &lt;code&gt;classname&lt;/code&gt; 不为null，则SV被祝福。</target>
        </trans-unit>
        <trans-unit id="9dac485013a652075c8f1c4b7fb1d43f1f85a1a3" translate="yes" xml:space="preserve">
          <source>) into an executable:</source>
          <target state="translated">）成可执行文件：</target>
        </trans-unit>
        <trans-unit id="81b4f6fe6b33e8129f5b68846e0235e4b8d609db" translate="yes" xml:space="preserve">
          <source>) is a somewhat special case inasmuch as the concatenation of &lt;code&gt;$File::Find::dir&lt;/code&gt; , &lt;code&gt;'/'&lt;/code&gt; and &lt;code&gt;$_&lt;/code&gt; is not literally equal to &lt;code&gt;$File::Find::name&lt;/code&gt; . The table below summarizes all variants:</source>
          <target state="translated">）有点特殊，因为 &lt;code&gt;$File::Find::dir&lt;/code&gt; ， &lt;code&gt;'/'&lt;/code&gt; 和 &lt;code&gt;$_&lt;/code&gt; 的串联在字面上不等于 &lt;code&gt;$File::Find::name&lt;/code&gt; 。下表总结了所有变体：</target>
        </trans-unit>
        <trans-unit id="cf9470af5d5cf93f057397bef4222a4e4cd5a518" translate="yes" xml:space="preserve">
          <source>) is called instead, otherwise falling back to &lt;code&gt;&amp;amp;DB::sub&lt;/code&gt; (</source>
          <target state="translated">）调用，否则返回 &lt;code&gt;&amp;amp;DB::sub&lt;/code&gt; （</target>
        </trans-unit>
        <trans-unit id="23696ac6362c5f53fb63901a51bae770c8ae962d" translate="yes" xml:space="preserve">
          <source>) is either a text-string or a reference to a &lt;b&gt;Pod::InteriorSequence&lt;/b&gt; object. The nodes appear in the parse-tree in the order in which they were parsed from left-to-right.</source>
          <target state="translated">）是文本字符串或对&lt;b&gt;Pod :: InteriorSequence&lt;/b&gt;对象的引用。节点以从左到右的解析顺序出现在解析树中。</target>
        </trans-unit>
        <trans-unit id="5767c1b2b6c18556726990ab8b5bc59c494545e8" translate="yes" xml:space="preserve">
          <source>) is in that special format.</source>
          <target state="translated">）采用该特殊格式。</target>
        </trans-unit>
        <trans-unit id="32f86aa54464138379726463882cdceaf0bcc1f8" translate="yes" xml:space="preserve">
          <source>) is made instead, with &lt;code&gt;$DB::sub&lt;/code&gt; holding the name of the called subroutine. (This doesn't happen if the subroutine was compiled in the &lt;code&gt;DB&lt;/code&gt; package.)</source>
          <target state="translated">而是用 &lt;code&gt;$DB::sub&lt;/code&gt; 保存被调用子程序的名称。（如果子例程是在 &lt;code&gt;DB&lt;/code&gt; 包中编译的，则不会发生这种情况。）</target>
        </trans-unit>
        <trans-unit id="09c02d83fc25240c47808099a2e4f821d696cb01" translate="yes" xml:space="preserve">
          <source>) is used as a package separator for documentation for packages, and as usual, sometimes you need to give the section - &lt;code&gt;3&lt;/code&gt; above - to avoid shadowing by the</source>
          <target state="translated">）用作软件包文档的软件包分隔符，并且通常，有时您需要提供上面的 &lt;code&gt;3&lt;/code&gt; 部分，以免出现阴影。</target>
        </trans-unit>
        <trans-unit id="5971125402714a98c492903d9612cbceea13e6b3" translate="yes" xml:space="preserve">
          <source>) model. However, some previous functionality is not available. Further, the data sharing models between the two thread models are completely different, and anything to do with data sharing has to be thought differently. With</source>
          <target state="translated">）模型。但是，某些先前的功能不可用。此外，两个线程模型之间的数据共享模型完全不同，与数据共享有关的任何事物都必须以不同的方式考虑。用</target>
        </trans-unit>
        <trans-unit id="50d605006e5819d9ee72b0368f957bba921207fa" translate="yes" xml:space="preserve">
          <source>) of EXPR. If EXPR is omitted, returns the log of &lt;code&gt;$_&lt;/code&gt; . To get the log of another base, use basic algebra: The base-N log of a number is equal to the natural log of that number divided by the natural log of N. For example:</source>
          <target state="translated">）的EXPR。如果省略EXPR，则返回 &lt;code&gt;$_&lt;/code&gt; 的日志。要获取另一个底数的对数，请使用基本代数：一个数字的N底对数等于该数字的自然对数除以N的自然对数。例如：</target>
        </trans-unit>
        <trans-unit id="34c99e6b33b978b2a76257b1ec099dd28fe4c5af" translate="yes" xml:space="preserve">
          <source>) or autoloaded subroutine definitions (often ending in</source>
          <target state="translated">）或自动加载的子例程定义（通常以</target>
        </trans-unit>
        <trans-unit id="6268b6d7aba0dddbda46ab70ff997d6de27b91a4" translate="yes" xml:space="preserve">
          <source>) or small pieces of modules to be autoloaded (ending in</source>
          <target state="translated">）或要自动加载的小模块（结尾为</target>
        </trans-unit>
        <trans-unit id="e0b4a008b1b72c63ec0fe1bf922f01ecd1e7dcea" translate="yes" xml:space="preserve">
          <source>) regarding the license:</source>
          <target state="translated">）关于许可：</target>
        </trans-unit>
        <trans-unit id="a45f9f3bff2ba18d925d19d588022f6b22bbbb23" translate="yes" xml:space="preserve">
          <source>) result in single code points and are locale independent and unconditional, &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned (which means that the case mappings, if any, for the code point are those returned by &lt;a href=&quot;#charinfo()&quot;&gt;charinfo()&lt;/a&gt;).</source>
          <target state="translated">）会产生单个代码点，并且与语言环境无关且是无条件的，将返回 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; （这意味着代码点的大小写映射（如果有&lt;a href=&quot;#charinfo()&quot;&gt;）&lt;/a&gt;是charinfo（）返回的映射）。</target>
        </trans-unit>
        <trans-unit id="290a554d5dd4f4fd53f4f0c3f26a8b92afe46af9" translate="yes" xml:space="preserve">
          <source>) routine is available to get the current process group.</source>
          <target state="translated">）例程可用于获取当前进程组。</target>
        </trans-unit>
        <trans-unit id="fbfc535d542b663f5fc6309d86a766d1da4fdbb5" translate="yes" xml:space="preserve">
          <source>) routine is available to set the current process group.</source>
          <target state="translated">）例程可用于设置当前过程组。</target>
        </trans-unit>
        <trans-unit id="26e28f24fd9b1f154c2e8f05eec3ce59bdb7d39d" translate="yes" xml:space="preserve">
          <source>) see whether a scalar contains a string, an integer, or a floating-point number. But you can still peek and poke these if you will. See the next section.</source>
          <target state="translated">）查看标量是否包含字符串，整数或浮点数。但是如果您愿意的话，您仍然可以偷看和戳这些。请参阅下一节。</target>
        </trans-unit>
        <trans-unit id="edd28277fd127085fceb90541640e76ea071b695" translate="yes" xml:space="preserve">
          <source>) slashes, Universal Naming Codes (</source>
          <target state="translated">）斜杠，通用命名代码（</target>
        </trans-unit>
        <trans-unit id="6fe21bfd6516c2f8c1ce99da2c5ba6214935b065" translate="yes" xml:space="preserve">
          <source>) that hide the details of the interpreter's context. THX stands for &quot;thread&quot;, &quot;this&quot;, or &quot;thingy&quot;, as the case may be. (And no, George Lucas is not involved. :-) The first character could be 'p' for a &lt;b&gt;p&lt;/b&gt;rototype, 'a' for &lt;b&gt;a&lt;/b&gt;rgument, or 'd' for &lt;b&gt;d&lt;/b&gt;eclaration, so we have &lt;code&gt;pTHX&lt;/code&gt; , &lt;code&gt;aTHX&lt;/code&gt; and &lt;code&gt;dTHX&lt;/code&gt; , and their variants.</source>
          <target state="translated">），以隐藏解释器上下文的详细信息。THX代表&amp;ldquo;线程&amp;rdquo;，&amp;ldquo; this&amp;rdquo;或&amp;ldquo; thingy&amp;rdquo;（视情况而定）。（不，乔治&amp;middot;卢卡斯是不参与。:-)第一个字符可能是'P'为&lt;b&gt;p&lt;/b&gt; rototype， 'A'的&lt;b&gt;一个&lt;/b&gt; rgument，或'd'为&lt;b&gt;d&lt;/b&gt; eclaration，所以我们必须 &lt;code&gt;pTHX&lt;/code&gt; ， &lt;code&gt;aTHX&lt;/code&gt; 和 &lt;code&gt;dTHX&lt;/code&gt; ，及其变体。</target>
        </trans-unit>
        <trans-unit id="e97548e96f2ddff38307a0e5c64c9b937c5a39a0" translate="yes" xml:space="preserve">
          <source>) this is:</source>
          <target state="translated">） 这是：</target>
        </trans-unit>
        <trans-unit id="58d0b83faa9818666bc1ae3462657cd7ca7c19ae" translate="yes" xml:space="preserve">
          <source>) to &lt;code&gt;PATH&lt;/code&gt; ; copy &lt;code&gt;perl_.exe&lt;/code&gt; to &lt;code&gt;PATH&lt;/code&gt; as &lt;code&gt;perl_5.8.2.exe&lt;/code&gt; . Think whether you need backward-compatibility DLLs. In most cases you do not need to install them yet; but sometime this may simplify the following steps.</source>
          <target state="translated">）到 &lt;code&gt;PATH&lt;/code&gt; ; 将 &lt;code&gt;perl_.exe&lt;/code&gt; 作为 &lt;code&gt;perl_5.8.2.exe&lt;/code&gt; 复制到 &lt;code&gt;PATH&lt;/code&gt; 。考虑是否需要向后兼容的DLL。在大多数情况下，您无需安装它们。但是有时这可以简化以下步骤。</target>
        </trans-unit>
        <trans-unit id="ee8d0d482ba732e339db373655156b50d4f689fa" translate="yes" xml:space="preserve">
          <source>) variable.</source>
          <target state="translated">）变量。</target>
        </trans-unit>
        <trans-unit id="8d6ab57f146723c24d110d324d107fe798a11b43" translate="yes" xml:space="preserve">
          <source>) where there are no parameters (except $_[0], the language handle).</source>
          <target state="translated">），没有参数（语言句柄$ _ [0]除外）。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
