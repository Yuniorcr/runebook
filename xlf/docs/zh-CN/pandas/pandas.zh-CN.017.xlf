<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="pandas">
    <body>
      <group id="pandas">
        <trans-unit id="4898687bd28dcd5a9d7e71ae90321ee7a6f62f6e" translate="yes" xml:space="preserve">
          <source>Expanding window functions</source>
          <target state="translated">扩大窗口功能</target>
        </trans-unit>
        <trans-unit id="23fe2841f3b5f3b5917d4fcbd59d3f25ae891f70" translate="yes" xml:space="preserve">
          <source>Expanding window: Accumulating window over the values.</source>
          <target state="translated">展开窗口。累计窗口的数值。</target>
        </trans-unit>
        <trans-unit id="3a233e0339daf951dd297e72928414cfcc4f0f89" translate="yes" xml:space="preserve">
          <source>Expanding windows</source>
          <target state="translated">扩大窗口</target>
        </trans-unit>
        <trans-unit id="368af8e049410c8a7c94fbc184fbe2bfd5d462ef" translate="yes" xml:space="preserve">
          <source>Expanding.aggregate()</source>
          <target state="translated">Expanding.aggregate()</target>
        </trans-unit>
        <trans-unit id="43990b7ac8295d9269441df7b987f2d4d9b51923" translate="yes" xml:space="preserve">
          <source>Expanding.apply()</source>
          <target state="translated">Expanding.apply()</target>
        </trans-unit>
        <trans-unit id="4aee228837e363f06ecdd823126896ab0f489900" translate="yes" xml:space="preserve">
          <source>Expanding.corr()</source>
          <target state="translated">Expanding.corr()</target>
        </trans-unit>
        <trans-unit id="f4c56bd97a231d06792666c339793e451f8f9d15" translate="yes" xml:space="preserve">
          <source>Expanding.count()</source>
          <target state="translated">Expanding.count()</target>
        </trans-unit>
        <trans-unit id="f168d9ba8aeeaa26b8563691d9e9982d1b6af7ff" translate="yes" xml:space="preserve">
          <source>Expanding.cov()</source>
          <target state="translated">Expanding.cov()</target>
        </trans-unit>
        <trans-unit id="130aaa27cb652cb66c8524d57f9ee84fecafb68c" translate="yes" xml:space="preserve">
          <source>Expanding.kurt()</source>
          <target state="translated">Expanding.kurt()</target>
        </trans-unit>
        <trans-unit id="0ee90d9629a55a6beb5827afc2ce324906538c43" translate="yes" xml:space="preserve">
          <source>Expanding.max()</source>
          <target state="translated">Expanding.max()</target>
        </trans-unit>
        <trans-unit id="db4d847807cb58ffae83eb70e348775f842263cf" translate="yes" xml:space="preserve">
          <source>Expanding.mean()</source>
          <target state="translated">Expanding.mean()</target>
        </trans-unit>
        <trans-unit id="0d502b7022c87bb9a56e1b306f3ec1789b33e973" translate="yes" xml:space="preserve">
          <source>Expanding.median()</source>
          <target state="translated">Expanding.median()</target>
        </trans-unit>
        <trans-unit id="570ea5d9f73ff518eb416e752f2a25ef49a98c00" translate="yes" xml:space="preserve">
          <source>Expanding.min()</source>
          <target state="translated">Expanding.min()</target>
        </trans-unit>
        <trans-unit id="9be610746594a151709141149375a374a1bdd047" translate="yes" xml:space="preserve">
          <source>Expanding.quantile()</source>
          <target state="translated">Expanding.quantile()</target>
        </trans-unit>
        <trans-unit id="d06fc279224c4edfa5ec2ed3fcde0aeaaea22ef7" translate="yes" xml:space="preserve">
          <source>Expanding.skew()</source>
          <target state="translated">Expanding.skew()</target>
        </trans-unit>
        <trans-unit id="c9a3e12a9f97059a7b5acbf4137acb5323513c79" translate="yes" xml:space="preserve">
          <source>Expanding.std()</source>
          <target state="translated">Expanding.std()</target>
        </trans-unit>
        <trans-unit id="e45d311fff91d92a2419851792777474e5d5bfcc" translate="yes" xml:space="preserve">
          <source>Expanding.sum()</source>
          <target state="translated">Expanding.sum()</target>
        </trans-unit>
        <trans-unit id="1d63c3a9adb782b5e071a922036a6afea8e08c19" translate="yes" xml:space="preserve">
          <source>Expanding.var()</source>
          <target state="translated">Expanding.var()</target>
        </trans-unit>
        <trans-unit id="08befc3de77fdcd270394e66785aaa6922aaaffa" translate="yes" xml:space="preserve">
          <source>Expect to do some cleanup after you call this function. For example, you might need to manually assign column names if the column names are converted to NaN when you pass the</source>
          <target state="translated">在调用这个函数后,需要做一些清理工作。例如,如果你在传递给</target>
        </trans-unit>
        <trans-unit id="1a16025b92eeda3d982387bc4b964699efd2e9dd" translate="yes" xml:space="preserve">
          <source>Expect to do some cleanup after you call this function. For example, you might need to manually assign column names if the column names are converted to NaN when you pass the &lt;code&gt;header=0&lt;/code&gt; argument. We try to assume as little as possible about the structure of the table and push the idiosyncrasies of the HTML contained in the table to the user.</source>
          <target state="translated">期望在调用此函数后进行一些清理。例如，如果在传递 &lt;code&gt;header=0&lt;/code&gt; 参数时将列名转换为NaN，则可能需要手动分配列名。我们尝试尽可能少地假设表的结构，并将表中包含的HTML的特性推送给用户。</target>
        </trans-unit>
        <trans-unit id="e14fe67d8fcc086b16c1a194e2d8eed2c973cb74" translate="yes" xml:space="preserve">
          <source>Experienced users of relational databases like SQL will be familiar with the terminology used to describe join operations between two SQL-table like structures (&lt;code&gt;DataFrame&lt;/code&gt; objects). There are several cases to consider which are very important to understand:</source>
          <target state="translated">诸如SQL之类的关系数据库的经验丰富的用户将熟悉用于描述两个类似于SQL表的结构（ &lt;code&gt;DataFrame&lt;/code&gt; 对象）之间的联接操作的术语。需要考虑的几种情况非常重要：</target>
        </trans-unit>
        <trans-unit id="eeb0d8502a8e799ad1b732bb9fd135c7742a93ee" translate="yes" xml:space="preserve">
          <source>Experimental &lt;code&gt;NA&lt;/code&gt; scalar to denote missing values</source>
          <target state="translated">实验性 &lt;code&gt;NA&lt;/code&gt; 标量以表示缺失值</target>
        </trans-unit>
        <trans-unit id="4db31436187ed17e7a6e7ad81a6e68b0f552e2fe" translate="yes" xml:space="preserve">
          <source>Experimental NA scalar to denote missing values</source>
          <target state="translated">实验用NA标量表示缺失值</target>
        </trans-unit>
        <trans-unit id="c4077e07de84800317a513cbed87b752cbdfd854" translate="yes" xml:space="preserve">
          <source>Experimental: This is a new feature and still under development. We&amp;rsquo;ll be adding features and possibly making breaking changes in future releases. We&amp;rsquo;d love to hear your feedback.</source>
          <target state="translated">实验性：这是一项新功能，仍在开发中。我们将添加功能，并可能在将来的版本中进行重大更改。我们希望听到您的反馈。</target>
        </trans-unit>
        <trans-unit id="f0d9f40568c451c514c72a26ddb47e482adfb349" translate="yes" xml:space="preserve">
          <source>Experimental: the behaviour of &lt;code&gt;pd.NA&lt;/code&gt; can still change without warning.</source>
          <target state="translated">实验性： &lt;code&gt;pd.NA&lt;/code&gt; 的行为仍然可以更改而不会发出警告。</target>
        </trans-unit>
        <trans-unit id="09618f0dd260ba45b2ea50b92da3f4797b9d4245" translate="yes" xml:space="preserve">
          <source>Explain why the current behavior is wrong/not desired and what you expect instead.</source>
          <target state="translated">解释为什么当前的行为是错误的/不可取的,以及您期望的替代行为。</target>
        </trans-unit>
        <trans-unit id="29c4d818b13091b12fb7e1033100f74231f127be" translate="yes" xml:space="preserve">
          <source>Explicitly pass &lt;code&gt;sort=True&lt;/code&gt; to silence the warning and sort. Explicitly pass &lt;code&gt;sort=False&lt;/code&gt; to silence the warning and not sort.</source>
          <target state="translated">显式传递 &lt;code&gt;sort=True&lt;/code&gt; 可使警告和排序静音。显式传递 &lt;code&gt;sort=False&lt;/code&gt; 可使警告静音而不进行排序。</target>
        </trans-unit>
        <trans-unit id="f31f972030da5744bb3b442a7cad4c038c1a65e4" translate="yes" xml:space="preserve">
          <source>Explode a DataFrame from list-like columns to long format.</source>
          <target state="translated">将一个DataFrame从列表式的列扩展为长格式。</target>
        </trans-unit>
        <trans-unit id="1765275e14cafc2a48cc2d7ab9961baefded93a0" translate="yes" xml:space="preserve">
          <source>Exploded lists to rows of the subset columns; index will be duplicated for these rows.</source>
          <target state="translated">爆炸列表到行的子集列;索引将为这些行重复。</target>
        </trans-unit>
        <trans-unit id="e75086b1197d69eef128e13cf9b5f307968c6542" translate="yes" xml:space="preserve">
          <source>Exploded lists to rows; index will be duplicated for these rows.</source>
          <target state="translated">爆炸列表到行;这些行的索引将被重复。</target>
        </trans-unit>
        <trans-unit id="2ae732f4e79d2c9c2427de200400664d03468f56" translate="yes" xml:space="preserve">
          <source>Exploding a list-like column</source>
          <target state="translated">爆炸式列式</target>
        </trans-unit>
        <trans-unit id="acc52a56f6d6b750d6e6d6905467a920e7a18099" translate="yes" xml:space="preserve">
          <source>Exponential weighted moving average.</source>
          <target state="translated">指数加权移动平均线。</target>
        </trans-unit>
        <trans-unit id="1f1ad49e0789ca5aa1bab984b2f604c2a8652866" translate="yes" xml:space="preserve">
          <source>Exponential weighted moving stddev.</source>
          <target state="translated">指数加权移动stddev。</target>
        </trans-unit>
        <trans-unit id="8f4df549c7e9cdae3deb2abd3e0a3e1f39e87970" translate="yes" xml:space="preserve">
          <source>Exponential weighted moving variance.</source>
          <target state="translated">指数加权移动方差。</target>
        </trans-unit>
        <trans-unit id="8542de4d51bd3357b741df6010c4bb06697b5308" translate="yes" xml:space="preserve">
          <source>Exponential weighted sample correlation.</source>
          <target state="translated">指数加权样本相关性。</target>
        </trans-unit>
        <trans-unit id="bb5d9178a7bfb17ed9b276801fad601764f951b4" translate="yes" xml:space="preserve">
          <source>Exponential weighted sample covariance.</source>
          <target state="translated">指数加权样本协方差。</target>
        </trans-unit>
        <trans-unit id="e98be901a19c80a080f0a080be202f92c8452e81" translate="yes" xml:space="preserve">
          <source>ExponentialMovingWindow also has an &lt;code&gt;ignore_na&lt;/code&gt; argument, which determines how intermediate null values affect the calculation of the weights. When &lt;code&gt;ignore_na=False&lt;/code&gt; (the default), weights are calculated based on absolute positions, so that intermediate null values affect the result. When &lt;code&gt;ignore_na=True&lt;/code&gt;, weights are calculated by ignoring intermediate null values. For example, assuming &lt;code&gt;adjust=True&lt;/code&gt;, if &lt;code&gt;ignore_na=False&lt;/code&gt;, the weighted average of &lt;code&gt;3, NaN, 5&lt;/code&gt; would be calculated as</source>
          <target state="translated">ExponentialMovingWindow还具有 &lt;code&gt;ignore_na&lt;/code&gt; 参数，该参数确定中间空值如何影响权重的计算。当 &lt;code&gt;ignore_na=False&lt;/code&gt; （默认值）时，权重是根据绝对位置计算的，因此中间的空值会影响结果。当 &lt;code&gt;ignore_na=True&lt;/code&gt; 时，通过忽略中间空值来计算权重。例如，假设 &lt;code&gt;ignore_na=False&lt;/code&gt; &lt;code&gt;adjust=True&lt;/code&gt; ，如果ignore_na = False，则加权平均值 &lt;code&gt;3, NaN, 5&lt;/code&gt; 将计算为</target>
        </trans-unit>
        <trans-unit id="0b561fe12ded76528c8353cb627fc586812b6b42" translate="yes" xml:space="preserve">
          <source>Exponentially Weighted window</source>
          <target state="translated">指数加权窗口</target>
        </trans-unit>
        <trans-unit id="ee9907d4a5c6c186e893f351ce1555049f3bfb49" translate="yes" xml:space="preserve">
          <source>Exponentially Weighted window: Accumulating and exponentially weighted window over the values.</source>
          <target state="translated">指数加权窗口。累积和指数加权窗口的值。</target>
        </trans-unit>
        <trans-unit id="27b61858e311802d9821df6e8f7f62278093aa08" translate="yes" xml:space="preserve">
          <source>Exponentially weighted windows</source>
          <target state="translated">指数加权窗口</target>
        </trans-unit>
        <trans-unit id="8e4012c8848521a99f1fc5e0add133449f9151e9" translate="yes" xml:space="preserve">
          <source>Exponentially-weighted moving window functions</source>
          <target state="translated">指数加权移动窗口函数</target>
        </trans-unit>
        <trans-unit id="dc1b23811aee2bb6151cdb6c512450c9180a2c29" translate="yes" xml:space="preserve">
          <source>Exponentially-weighted window functions</source>
          <target state="translated">指数加权窗口函数</target>
        </trans-unit>
        <trans-unit id="5640f4f06484e90326af68b8842405638698556b" translate="yes" xml:space="preserve">
          <source>Export DataFrame object to Stata dta format.</source>
          <target state="translated">将DataFrame对象导出为Stata dta格式。</target>
        </trans-unit>
        <trans-unit id="a88921731e3a346e23b21872121af2be507a3bb1" translate="yes" xml:space="preserve">
          <source>Export Stata data files.</source>
          <target state="translated">导出Stata数据文件。</target>
        </trans-unit>
        <trans-unit id="979a61066306881f467e70677394214f90a9d9d8" translate="yes" xml:space="preserve">
          <source>Export the styles to applied to the current Styler.</source>
          <target state="translated">导出样式应用到当前的样式器。</target>
        </trans-unit>
        <trans-unit id="d348521d1d88385cae9661b52fbdcf517ee1784e" translate="yes" xml:space="preserve">
          <source>Export to Excel</source>
          <target state="translated">导出到Excel</target>
        </trans-unit>
        <trans-unit id="b2d2d958399f4ec4fff4557fbb342285481c2f91" translate="yes" xml:space="preserve">
          <source>Exporting data</source>
          <target state="translated">导出数据</target>
        </trans-unit>
        <trans-unit id="97b695b9b9cfde3612c21b3add972cc0f21f4e26" translate="yes" xml:space="preserve">
          <source>Expression</source>
          <target state="translated">Expression</target>
        </trans-unit>
        <trans-unit id="3644e278561f083b41bcc40d0fc7f0c847a45bae" translate="yes" xml:space="preserve">
          <source>Expression evaluation via &lt;a href=&quot;../reference/api/pandas.eval#pandas.eval&quot;&gt;&lt;code&gt;eval()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">通过&lt;a href=&quot;../reference/api/pandas.eval#pandas.eval&quot;&gt; &lt;code&gt;eval()&lt;/code&gt; 的&lt;/a&gt;表达式求值</target>
        </trans-unit>
        <trans-unit id="fb2d8930a1568c140d0b27f5310b0e87d35fb393" translate="yes" xml:space="preserve">
          <source>Expression evaluation via &lt;code&gt;eval()&lt;/code&gt;</source>
          <target state="translated">通过 &lt;code&gt;eval()&lt;/code&gt; 的表达式求值</target>
        </trans-unit>
        <trans-unit id="9d72e70163cadc5454c65c95a80c1d7eecfa870e" translate="yes" xml:space="preserve">
          <source>Expression evaluation via eval()</source>
          <target state="translated">通过eval()进行表达式评估</target>
        </trans-unit>
        <trans-unit id="ae5fccd8dcd8fc317f8edfc8259af86cd2967a29" translate="yes" xml:space="preserve">
          <source>Expressions</source>
          <target state="translated">Expressions</target>
        </trans-unit>
        <trans-unit id="590fc32280b4d9b7db21cb964a958d73ff33ae34" translate="yes" xml:space="preserve">
          <source>Expressions that would result in an object dtype or involve datetime operations (because of &lt;code&gt;NaT&lt;/code&gt;) must be evaluated in Python space. The main reason for this behavior is to maintain backwards compatibility with versions of NumPy &amp;lt; 1.7. In those versions of NumPy a call to &lt;code&gt;ndarray.astype(str)&lt;/code&gt; will truncate any strings that are more than 60 characters in length. Second, we can&amp;rsquo;t pass &lt;code&gt;object&lt;/code&gt; arrays to &lt;code&gt;numexpr&lt;/code&gt; thus string comparisons must be evaluated in Python space.</source>
          <target state="translated">必须在Python空间中评估会导致对象dtype或涉及日期时间操作（由于 &lt;code&gt;NaT&lt;/code&gt; ）的表达式。此行为的主要原因是为了与NumPy &amp;lt;1.7版本保持向后兼容性。在那些版本的NumPy中，对 &lt;code&gt;ndarray.astype(str)&lt;/code&gt; 的调用将截断长度超过60个字符的任何字符串。其次，我们无法将 &lt;code&gt;object&lt;/code&gt; 数组传递给 &lt;code&gt;numexpr&lt;/code&gt; ,因此字符串比较必须在Python空间中进行评估。</target>
        </trans-unit>
        <trans-unit id="e5c766e77be60c2c1f06320f97b05b85f6955357" translate="yes" xml:space="preserve">
          <source>Extending Example</source>
          <target state="translated">扩展示例</target>
        </trans-unit>
        <trans-unit id="13fbc5fe553d6748b16103c39324eed5e08f18cd" translate="yes" xml:space="preserve">
          <source>Extending by &lt;a href=&quot;#extending-extension-types&quot;&gt;extension type&lt;/a&gt;</source>
          <target state="translated">按&lt;a href=&quot;#extending-extension-types&quot;&gt;扩展名类型扩展&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5abf03223ae7acb7397a409585484ae2a894ee66" translate="yes" xml:space="preserve">
          <source>Extending by &lt;a href=&quot;#extending-register-accessors&quot;&gt;registering an accessor&lt;/a&gt;</source>
          <target state="translated">通过&lt;a href=&quot;#extending-register-accessors&quot;&gt;注册访问者进行&lt;/a&gt;扩展</target>
        </trans-unit>
        <trans-unit id="e4f6827bfdef254bc0230c90588223fe13ce0664" translate="yes" xml:space="preserve">
          <source>Extending pandas</source>
          <target state="translated">扩展大熊猫</target>
        </trans-unit>
        <trans-unit id="02c94538d1874480a4371b6ab14ef1e2eea48fb4" translate="yes" xml:space="preserve">
          <source>Extensibility</source>
          <target state="translated">Extensibility</target>
        </trans-unit>
        <trans-unit id="faf5b82e5b92082a1b30c201996f42e93d447ca7" translate="yes" xml:space="preserve">
          <source>Extensible method chains with &lt;a href=&quot;../getting_started/basics#basics-pipe&quot;&gt;pipe&lt;/a&gt;</source>
          <target state="translated">带&lt;a href=&quot;../getting_started/basics#basics-pipe&quot;&gt;管道的&lt;/a&gt;可扩展方法链</target>
        </trans-unit>
        <trans-unit id="8a0ba92ee468b44b7531201cb796d2991f18f4c6" translate="yes" xml:space="preserve">
          <source>Extension Arrays are only allowed to be 1-dimensional.</source>
          <target state="translated">扩展数组只允许是一维的。</target>
        </trans-unit>
        <trans-unit id="53bf06e6887fdc9a61f1de4a19bb985f66f3bdb4" translate="yes" xml:space="preserve">
          <source>Extension array for string data.</source>
          <target state="translated">字符串数据的扩展数组。</target>
        </trans-unit>
        <trans-unit id="f56814564426209446f0697e46ebe26660aafdae" translate="yes" xml:space="preserve">
          <source>Extension classes include categoricals, pandas sparse objects (i.e. classes represented within the pandas library and not ones external to it like scipy sparse matrices), and datetime-like arrays.</source>
          <target state="translated">扩展类包括分类、pandas稀疏对象(即在pandas库中表示的类,而不是像scipy稀疏矩阵那样的外部类),以及类似日期的数组。</target>
        </trans-unit>
        <trans-unit id="89fa2cacf1f0bb5ad2cb9bde4d5d26035b9ddd8e" translate="yes" xml:space="preserve">
          <source>Extension data types</source>
          <target state="translated">扩展数据类型</target>
        </trans-unit>
        <trans-unit id="e666a55adb34dbff222be3f41fac844588f83dc3" translate="yes" xml:space="preserve">
          <source>Extension dtype for boolean data.</source>
          <target state="translated">布尔数据的扩展d类型。</target>
        </trans-unit>
        <trans-unit id="8fe8beb4617a8808d366aab37d087c72ac92f692" translate="yes" xml:space="preserve">
          <source>Extension dtype for string data.</source>
          <target state="translated">字符串数据的扩展类型。</target>
        </trans-unit>
        <trans-unit id="9c68cdfbbd52323ff528c825ba660a53d3efe89d" translate="yes" xml:space="preserve">
          <source>Extension types</source>
          <target state="translated">扩展类型</target>
        </trans-unit>
        <trans-unit id="e37e0b59a280fb467047c66655b358959c8585ba" translate="yes" xml:space="preserve">
          <source>ExtensionArray</source>
          <target state="translated">ExtensionArray</target>
        </trans-unit>
        <trans-unit id="007c137be13ca0ff6ad175c21dd860477df48731" translate="yes" xml:space="preserve">
          <source>ExtensionArray or np.ndarray</source>
          <target state="translated">扩展数组或np.ndarray。</target>
        </trans-unit>
        <trans-unit id="ee4737cb3c3291e2fcd1d9780b8df729cb7e1c74" translate="yes" xml:space="preserve">
          <source>ExtensionArray wrapping a NumPy array.</source>
          <target state="translated">扩展数组包装了一个NumPy数组。</target>
        </trans-unit>
        <trans-unit id="73c8214adc4e356ab9711a4c29c3f470912f9f21" translate="yes" xml:space="preserve">
          <source>ExtensionArray._concat_same_type()</source>
          <target state="translated">ExtensionArray._concat_same_type()</target>
        </trans-unit>
        <trans-unit id="473ce1b45b952bb789f7a3973cef895eadf57990" translate="yes" xml:space="preserve">
          <source>ExtensionArray._formatter()</source>
          <target state="translated">ExtensionArray._formatter()</target>
        </trans-unit>
        <trans-unit id="5c880706226291e77e7c787650fc188b5d056fe1" translate="yes" xml:space="preserve">
          <source>ExtensionArray._formatting_values()</source>
          <target state="translated">ExtensionArray._formatting_values()</target>
        </trans-unit>
        <trans-unit id="f34701c11d9383b35cf486bafec95b8200365c2a" translate="yes" xml:space="preserve">
          <source>ExtensionArray._from_factorized()</source>
          <target state="translated">ExtensionArray._from_factorized()</target>
        </trans-unit>
        <trans-unit id="0698561bc647fab5d16fc14efecb5bb99162a143" translate="yes" xml:space="preserve">
          <source>ExtensionArray._from_sequence()</source>
          <target state="translated">ExtensionArray._from_sequence()</target>
        </trans-unit>
        <trans-unit id="56096dc10921ff4cc13449344add418a5a1fbfed" translate="yes" xml:space="preserve">
          <source>ExtensionArray._from_sequence_of_strings()</source>
          <target state="translated">ExtensionArray._from_sequence_of_strings()</target>
        </trans-unit>
        <trans-unit id="d23fb69bd3530327383e20b69683f917c968bbad" translate="yes" xml:space="preserve">
          <source>ExtensionArray._ndarray_values</source>
          <target state="translated">ExtensionArray._ndarray_values</target>
        </trans-unit>
        <trans-unit id="3a817dfb8dd670c9d2e9dfb92263b64a182e3c2e" translate="yes" xml:space="preserve">
          <source>ExtensionArray._reduce()</source>
          <target state="translated">ExtensionArray._reduce()</target>
        </trans-unit>
        <trans-unit id="718ad56001a394d3e76459366481485b6ddcc359" translate="yes" xml:space="preserve">
          <source>ExtensionArray._values_for_argsort()</source>
          <target state="translated">ExtensionArray._values_for_argsort()</target>
        </trans-unit>
        <trans-unit id="80c8b1f79556e273dfc89ebd4de5311df34df43f" translate="yes" xml:space="preserve">
          <source>ExtensionArray._values_for_factorize()</source>
          <target state="translated">ExtensionArray._values_for_factorize()</target>
        </trans-unit>
        <trans-unit id="d69c82c1ad7d33d8c5c81be00a1f64032850d17e" translate="yes" xml:space="preserve">
          <source>ExtensionArray.argsort()</source>
          <target state="translated">ExtensionArray.argsort()</target>
        </trans-unit>
        <trans-unit id="c5d13b93d5058d6e83bba5610c03ad94271d6ef2" translate="yes" xml:space="preserve">
          <source>ExtensionArray.astype()</source>
          <target state="translated">ExtensionArray.astype()</target>
        </trans-unit>
        <trans-unit id="d881662b6e88f86f370e542e5ffce1e952677572" translate="yes" xml:space="preserve">
          <source>ExtensionArray.copy()</source>
          <target state="translated">ExtensionArray.copy()</target>
        </trans-unit>
        <trans-unit id="c25ceeaf7cd5462dd83a44781b60b18565c34647" translate="yes" xml:space="preserve">
          <source>ExtensionArray.dropna()</source>
          <target state="translated">ExtensionArray.dropna()</target>
        </trans-unit>
        <trans-unit id="8232e429a1ae7ce87db05235484a878fb30467d7" translate="yes" xml:space="preserve">
          <source>ExtensionArray.dtype</source>
          <target state="translated">ExtensionArray.dtype</target>
        </trans-unit>
        <trans-unit id="d5f30bc91af1ee0c40cd82f3faef035c88e5e068" translate="yes" xml:space="preserve">
          <source>ExtensionArray.factorize()</source>
          <target state="translated">ExtensionArray.factorize()</target>
        </trans-unit>
        <trans-unit id="f17d5971a3025877406d8a41f9758ecb18d8e1c5" translate="yes" xml:space="preserve">
          <source>ExtensionArray.fillna()</source>
          <target state="translated">ExtensionArray.fillna()</target>
        </trans-unit>
        <trans-unit id="26a2b599bfc6c588c8d980a67deaa378a9f260ce" translate="yes" xml:space="preserve">
          <source>ExtensionArray.isna()</source>
          <target state="translated">ExtensionArray.isna()</target>
        </trans-unit>
        <trans-unit id="a8da76c9d853401065d5da408acc3f5e3aa94c73" translate="yes" xml:space="preserve">
          <source>ExtensionArray.nbytes</source>
          <target state="translated">ExtensionArray.nbytes</target>
        </trans-unit>
        <trans-unit id="c6a53b584b48dc3783f7608e38a82fbfc3b5a348" translate="yes" xml:space="preserve">
          <source>ExtensionArray.ndim</source>
          <target state="translated">ExtensionArray.ndim</target>
        </trans-unit>
        <trans-unit id="2621513560825cc090806820370827ebe13a52b8" translate="yes" xml:space="preserve">
          <source>ExtensionArray.ravel()</source>
          <target state="translated">ExtensionArray.ravel()</target>
        </trans-unit>
        <trans-unit id="cae96a0505b2bb407af83e96a074c69d888fe5fd" translate="yes" xml:space="preserve">
          <source>ExtensionArray.repeat()</source>
          <target state="translated">ExtensionArray.repeat()</target>
        </trans-unit>
        <trans-unit id="22ac86c9049a13a9b5d2cc23e98eb17c70be0a47" translate="yes" xml:space="preserve">
          <source>ExtensionArray.searchsorted()</source>
          <target state="translated">ExtensionArray.searchsorted()</target>
        </trans-unit>
        <trans-unit id="5f2bfd13a20d7db36de0dc5968073faa3a933741" translate="yes" xml:space="preserve">
          <source>ExtensionArray.shape</source>
          <target state="translated">ExtensionArray.shape</target>
        </trans-unit>
        <trans-unit id="a1e61288edbfdbaebc59f8c35cae46a720981ef8" translate="yes" xml:space="preserve">
          <source>ExtensionArray.shift()</source>
          <target state="translated">ExtensionArray.shift()</target>
        </trans-unit>
        <trans-unit id="1014a18c8b990251623dc4c139cff12c770a4af5" translate="yes" xml:space="preserve">
          <source>ExtensionArray.take is called by &lt;code&gt;Series.__getitem__&lt;/code&gt;, &lt;code&gt;.loc&lt;/code&gt;, &lt;code&gt;iloc&lt;/code&gt;, when</source>
          <target state="translated">ExtensionArray.take被称为 &lt;code&gt;Series.__getitem__&lt;/code&gt; ， &lt;code&gt;.loc&lt;/code&gt; ， &lt;code&gt;iloc&lt;/code&gt; ，当</target>
        </trans-unit>
        <trans-unit id="295aa54a63b343065fde06347d2d91692747b993" translate="yes" xml:space="preserve">
          <source>ExtensionArray.take is called by &lt;code&gt;Series.__getitem__&lt;/code&gt;, &lt;code&gt;.loc&lt;/code&gt;, &lt;code&gt;iloc&lt;/code&gt;, when &lt;code&gt;indices&lt;/code&gt; is a sequence of values. Additionally, it&amp;rsquo;s called by &lt;code&gt;Series.reindex()&lt;/code&gt;, or any other method that causes realignment, with a &lt;code&gt;fill_value&lt;/code&gt;.</source>
          <target state="translated">ExtensionArray.take被称为 &lt;code&gt;Series.__getitem__&lt;/code&gt; ， &lt;code&gt;.loc&lt;/code&gt; ， &lt;code&gt;iloc&lt;/code&gt; ，当 &lt;code&gt;indices&lt;/code&gt; 是值的序列。另外，它由 &lt;code&gt;Series.reindex()&lt;/code&gt; 或其他任何导致重新对齐的方法（带有 &lt;code&gt;fill_value&lt;/code&gt; )调用。</target>
        </trans-unit>
        <trans-unit id="2a878e0fac59c4a49ad22991013f4ce84a8371ef" translate="yes" xml:space="preserve">
          <source>ExtensionArray.take()</source>
          <target state="translated">ExtensionArray.take()</target>
        </trans-unit>
        <trans-unit id="fa80d49704c1f5509cc2d5797fe6e5770b1285d2" translate="yes" xml:space="preserve">
          <source>ExtensionArray.unique()</source>
          <target state="translated">ExtensionArray.unique()</target>
        </trans-unit>
        <trans-unit id="9188521c150dcccfc6df8a7a48f079f336c923d3" translate="yes" xml:space="preserve">
          <source>ExtensionArrays are limited to 1 dimension.</source>
          <target state="translated">ExtensionArrays限制为1维。</target>
        </trans-unit>
        <trans-unit id="66602c53ed25b3e51f8c59ce85a326a3a950f109" translate="yes" xml:space="preserve">
          <source>ExtensionDtype</source>
          <target state="translated">ExtensionDtype</target>
        </trans-unit>
        <trans-unit id="231ef721f0da6370f6d08f0b66f0066bef3d8314" translate="yes" xml:space="preserve">
          <source>ExtensionDtype.construct_array_type()</source>
          <target state="translated">ExtensionDtype.construct_array_type()</target>
        </trans-unit>
        <trans-unit id="cbeefe5c4f031587c157481d8c4838412feca0dd" translate="yes" xml:space="preserve">
          <source>ExtensionDtype.construct_from_string()</source>
          <target state="translated">ExtensionDtype.construct_from_string()</target>
        </trans-unit>
        <trans-unit id="cb70f3bcb5550094ff4d75978b1745a3c03407e4" translate="yes" xml:space="preserve">
          <source>ExtensionDtype.is_dtype()</source>
          <target state="translated">ExtensionDtype.is_dtype()</target>
        </trans-unit>
        <trans-unit id="9a5a2475399414f3534ef36879746a2dd8b764c5" translate="yes" xml:space="preserve">
          <source>ExtensionDtype.kind</source>
          <target state="translated">ExtensionDtype.kind</target>
        </trans-unit>
        <trans-unit id="2e14b102adfd9fb34a8c898ff1442f35e8f56571" translate="yes" xml:space="preserve">
          <source>ExtensionDtype.na_value</source>
          <target state="translated">ExtensionDtype.na_value</target>
        </trans-unit>
        <trans-unit id="0c2710203a9f29a3f6cae2b480c90729fb15affe" translate="yes" xml:space="preserve">
          <source>ExtensionDtype.name</source>
          <target state="translated">ExtensionDtype.name</target>
        </trans-unit>
        <trans-unit id="449a72da72656bcaa4b340d7f5acfd40870ec6fa" translate="yes" xml:space="preserve">
          <source>ExtensionDtype.names</source>
          <target state="translated">ExtensionDtype.names</target>
        </trans-unit>
        <trans-unit id="d2feb58bbdabeae745ea82cf7d2ecadced161772" translate="yes" xml:space="preserve">
          <source>ExtensionDtype.type</source>
          <target state="translated">ExtensionDtype.type</target>
        </trans-unit>
        <trans-unit id="de91e8f5aa51702df94221f4e5a4e07caeb2d019" translate="yes" xml:space="preserve">
          <source>ExtensionDtypes are required to be hashable. The base class provides a default implementation, which relies on the &lt;code&gt;_metadata&lt;/code&gt; class attribute. &lt;code&gt;_metadata&lt;/code&gt; should be a tuple containing the strings that define your data type. For example, with &lt;code&gt;PeriodDtype&lt;/code&gt; that&amp;rsquo;s the &lt;code&gt;freq&lt;/code&gt; attribute.</source>
          <target state="translated">ExtensionDtypes必须是可哈希的。基类提供了默认实现，该实现依赖于 &lt;code&gt;_metadata&lt;/code&gt; 类属性。 &lt;code&gt;_metadata&lt;/code&gt; 应该是一个元组，其中包含定义您的数据类型的字符串。例如，使用 &lt;code&gt;PeriodDtype&lt;/code&gt; 是 &lt;code&gt;freq&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="656bcfe284e2da39c77d4fdab55b16ad3c654719" translate="yes" xml:space="preserve">
          <source>Extensions</source>
          <target state="translated">Extensions</target>
        </trans-unit>
        <trans-unit id="792810ac7ae19283ec1f9b0cc73a7e92311d37d1" translate="yes" xml:space="preserve">
          <source>External compatibility</source>
          <target state="translated">外部兼容性</target>
        </trans-unit>
        <trans-unit id="a3eb6236080c1f682d8f9ea85a9f64cb61233db2" translate="yes" xml:space="preserve">
          <source>Extra options that make sense for a particular storage connection, e.g. host, port, username, password, etc., if using a URL that will be parsed by &lt;code&gt;fsspec&lt;/code&gt;, e.g., starting &amp;ldquo;s3://&amp;rdquo;, &amp;ldquo;gcs://&amp;rdquo;.</source>
          <target state="translated">如果使用将由 &lt;code&gt;fsspec&lt;/code&gt; 解析的URL，则对于特定的存储连接有意义的附加选项，例如主机，端口，用户名，密码等，例如，以&amp;ldquo; s3：//&amp;rdquo;，&amp;ldquo; gcs：//&amp;rdquo;开头。</target>
        </trans-unit>
        <trans-unit id="de7d1b1192cbed51ec726c852f26aaea4219528c" translate="yes" xml:space="preserve">
          <source>Extra options that make sense for a particular storage connection, e.g. host, port, username, password, etc., if using a URL that will be parsed by &lt;code&gt;fsspec&lt;/code&gt;, e.g., starting &amp;ldquo;s3://&amp;rdquo;, &amp;ldquo;gcs://&amp;rdquo;. An error will be raised if providing this argument with a local path or a file-like buffer. See the fsspec and backend storage implementation docs for the set of allowed keys and values.</source>
          <target state="translated">如果使用将由 &lt;code&gt;fsspec&lt;/code&gt; 解析的URL，则对于特定的存储连接有意义的附加选项，例如主机，端口，用户名，密码等，例如，以&amp;ldquo; s3：//&amp;rdquo;，&amp;ldquo; gcs：//&amp;rdquo;开头。如果为该参数提供本地路径或类似文件的缓冲区，则会引发错误。有关允许的键和值的集合，请参见fsspec和后端存储实现文档。</target>
        </trans-unit>
        <trans-unit id="55f993daa25bd5074393fc27f2361970b8452a0b" translate="yes" xml:space="preserve">
          <source>Extra options that make sense for a particular storage connection, e.g. host, port, username, password, etc., if using a URL that will be parsed by &lt;code&gt;fsspec&lt;/code&gt;, e.g., starting &amp;ldquo;s3://&amp;rdquo;, &amp;ldquo;gcs://&amp;rdquo;. An error will be raised if providing this argument with a non-fsspec URL. See the fsspec and backend storage implementation docs for the set of allowed keys and values.</source>
          <target state="translated">如果使用将由 &lt;code&gt;fsspec&lt;/code&gt; 解析的URL，则对于特定的存储连接有意义的附加选项，例如主机，端口，用户名，密码等，例如，以&amp;ldquo; s3：//&amp;rdquo;，&amp;ldquo; gcs：//&amp;rdquo;开头。如果为该参数提供非fsspec URL，则会引发错误。有关允许的键和值的集合，请参见fsspec和后端存储实现文档。</target>
        </trans-unit>
        <trans-unit id="6cc234b33050b36a27577513912905a91e396e06" translate="yes" xml:space="preserve">
          <source>Extract 3 random elements from the &lt;code&gt;Series&lt;/code&gt;&lt;code&gt;df['num_legs']&lt;/code&gt;: Note that we use</source>
          <target state="translated">从 &lt;code&gt;Series&lt;/code&gt; &lt;code&gt;df['num_legs']&lt;/code&gt; 提取3个随机元素：请注意，我们使用</target>
        </trans-unit>
        <trans-unit id="d8871d379ef5a388cc087108c344111259832f48" translate="yes" xml:space="preserve">
          <source>Extract 3 random elements from the &lt;code&gt;Series&lt;/code&gt;&lt;code&gt;df['num_legs']&lt;/code&gt;: Note that we use &lt;code&gt;random_state&lt;/code&gt; to ensure the reproducibility of the examples.</source>
          <target state="translated">从 &lt;code&gt;Series&lt;/code&gt; &lt;code&gt;df['num_legs']&lt;/code&gt; 提取3个随机元素：请注意，我们使用 &lt;code&gt;random_state&lt;/code&gt; 来确保示例的可重复性。</target>
        </trans-unit>
        <trans-unit id="4f22f50c3fcdbf02e9ea4708fc079e1901c86e42" translate="yes" xml:space="preserve">
          <source>Extract a subset of columns contained in &lt;code&gt;usecols&lt;/code&gt; from an SPSS file and avoid converting categorical columns into &lt;code&gt;pd.Categorical&lt;/code&gt;:</source>
          <target state="translated">从SPSS文件中提取 &lt;code&gt;usecols&lt;/code&gt; 中包含的列的子集，并避免将分类列转换为 &lt;code&gt;pd.Categorical&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="0947f692159d684c1372de24995397fc4725fd0e" translate="yes" xml:space="preserve">
          <source>Extract all matches in each subject (extractall)</source>
          <target state="translated">提取每个主题的所有匹配项(extractall)</target>
        </trans-unit>
        <trans-unit id="a9cc28dfa5e3a62bcfc74b1fa60c1914272eac1d" translate="yes" xml:space="preserve">
          <source>Extract capture groups in the regex</source>
          <target state="translated">在regex中提取捕获组</target>
        </trans-unit>
        <trans-unit id="d41f2c3a836fda251a32fc0e850e22516bd98228" translate="yes" xml:space="preserve">
          <source>Extract capture groups in the regex &lt;code&gt;pat&lt;/code&gt; as columns in a DataFrame.</source>
          <target state="translated">提取捕获组正则表达式 &lt;code&gt;pat&lt;/code&gt; 如在数据帧列。</target>
        </trans-unit>
        <trans-unit id="85e566ed8d5eaa3d640370b431d27a738a5303bf" translate="yes" xml:space="preserve">
          <source>Extract duplicated index elements.</source>
          <target state="translated">提取重复的索引元素。</target>
        </trans-unit>
        <trans-unit id="0c596be4c1daf9bf935f8694deb3c54326de1710" translate="yes" xml:space="preserve">
          <source>Extract element from each component at specified position.</source>
          <target state="translated">从每个组件的指定位置提取元素。</target>
        </trans-unit>
        <trans-unit id="744b4b33fae9f9e29abd38204a65372410ed487d" translate="yes" xml:space="preserve">
          <source>Extract element from lists, tuples, or strings in each element in the Series/Index.</source>
          <target state="translated">从Series/Index中每个元素的列表、元组或字符串中提取元素。</target>
        </trans-unit>
        <trans-unit id="c2f999c097d35cd7822024e5c0524dda06fe346b" translate="yes" xml:space="preserve">
          <source>Extract first match in each subject (extract)</source>
          <target state="translated">在每个科目中提取第一个匹配项(提取</target>
        </trans-unit>
        <trans-unit id="97fc28f4138b579eb07ab4da30c5782cefb1a15a" translate="yes" xml:space="preserve">
          <source>Extract matched groups.</source>
          <target state="translated">提取匹配组。</target>
        </trans-unit>
        <trans-unit id="bbfdead34054d5165239fdacbcfde126181ac28e" translate="yes" xml:space="preserve">
          <source>Extract the array stored within a Series.</source>
          <target state="translated">提取存储在系列中的数组。</target>
        </trans-unit>
        <trans-unit id="0c27059bf19e69ea10040d870a4f2e16ee4a7d44" translate="yes" xml:space="preserve">
          <source>Extracting a regular expression with more than one group returns a DataFrame with one column per group.</source>
          <target state="translated">提取一个多组的正则表达式,返回一个每组一列的DataFrame。</target>
        </trans-unit>
        <trans-unit id="730826a3806637d35bcd4820ffd03e1132a08419" translate="yes" xml:space="preserve">
          <source>Extracting a regular expression with one group returns a &lt;code&gt;DataFrame&lt;/code&gt; with one column if &lt;code&gt;expand=True&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;expand=True&lt;/code&gt; ,则抽取一组正则表达式将返回一列的 &lt;code&gt;DataFrame&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5ad5026b7dc3bacdd43b7f246a7f6d355abdaa47" translate="yes" xml:space="preserve">
          <source>Extracting substrings</source>
          <target state="translated">提取子序列</target>
        </trans-unit>
        <trans-unit id="fd6a5ecb0c6d5148842ac5a363fcb56a58341f32" translate="yes" xml:space="preserve">
          <source>FAIL</source>
          <target state="translated">FAIL</target>
        </trans-unit>
        <trans-unit id="79eecff6b62da41fcfcc6f0af3acd88c8b8b4c53" translate="yes" xml:space="preserve">
          <source>FRED</source>
          <target state="translated">FRED</target>
        </trans-unit>
        <trans-unit id="017ef19a9d298f725b1ec74fe5ece28ad72e6e0f" translate="yes" xml:space="preserve">
          <source>FY5253</source>
          <target state="translated">FY5253</target>
        </trans-unit>
        <trans-unit id="5c421e21100f33dcaf16b1ff70ecca0ef7659f07" translate="yes" xml:space="preserve">
          <source>FY5253.apply()</source>
          <target state="translated">FY5253.apply()</target>
        </trans-unit>
        <trans-unit id="5601fdf04bf11b9e0b92590ff68269e42840e58e" translate="yes" xml:space="preserve">
          <source>FY5253.apply_index()</source>
          <target state="translated">FY5253.apply_index()</target>
        </trans-unit>
        <trans-unit id="19bfede70046057b28680d716bbb18b980d4220d" translate="yes" xml:space="preserve">
          <source>FY5253.base</source>
          <target state="translated">FY5253.base</target>
        </trans-unit>
        <trans-unit id="8cec92b095723ba7ad895eac9b7789e3db48ba2a" translate="yes" xml:space="preserve">
          <source>FY5253.copy()</source>
          <target state="translated">FY5253.copy()</target>
        </trans-unit>
        <trans-unit id="7c187cb09c095fe96f994db6a0aebd3afc90048f" translate="yes" xml:space="preserve">
          <source>FY5253.freqstr</source>
          <target state="translated">FY5253.freqstr</target>
        </trans-unit>
        <trans-unit id="c955b39246415eca9108fe9bde93232b3ccff6db" translate="yes" xml:space="preserve">
          <source>FY5253.get_rule_code_suffix()</source>
          <target state="translated">FY5253.get_rule_code_suffix()</target>
        </trans-unit>
        <trans-unit id="5298a875486b7169ab5abdd1d7ba4d58e1c752c6" translate="yes" xml:space="preserve">
          <source>FY5253.get_year_end()</source>
          <target state="translated">FY5253.get_year_end()</target>
        </trans-unit>
        <trans-unit id="43012cb72b94b94c95e1b83d9b847e4c61a89f63" translate="yes" xml:space="preserve">
          <source>FY5253.isAnchored()</source>
          <target state="translated">FY5253.isAnchored()</target>
        </trans-unit>
        <trans-unit id="eb7a63fe669feea50eefdb7f8ae8bd5e19af6a3e" translate="yes" xml:space="preserve">
          <source>FY5253.kwds</source>
          <target state="translated">FY5253.kwds</target>
        </trans-unit>
        <trans-unit id="c1ca3e62768aad77a704433b5226bb17fc633bbd" translate="yes" xml:space="preserve">
          <source>FY5253.name</source>
          <target state="translated">FY5253.name</target>
        </trans-unit>
        <trans-unit id="b04023d1e1db1a1cd0708ec89c7776b9b0952f35" translate="yes" xml:space="preserve">
          <source>FY5253.nanos</source>
          <target state="translated">FY5253.nanos</target>
        </trans-unit>
        <trans-unit id="591dd42f1a57e74a3a2bfb62d5ecf8e4a9117c99" translate="yes" xml:space="preserve">
          <source>FY5253.normalize</source>
          <target state="translated">FY5253.normalize</target>
        </trans-unit>
        <trans-unit id="b63752f9c96232ad43a0804cc7f7094c5fcc2103" translate="yes" xml:space="preserve">
          <source>FY5253.onOffset()</source>
          <target state="translated">FY5253.onOffset()</target>
        </trans-unit>
        <trans-unit id="f422d1976fef0736bd1f85d70f5c7ac4c113494c" translate="yes" xml:space="preserve">
          <source>FY5253.rollback()</source>
          <target state="translated">FY5253.rollback()</target>
        </trans-unit>
        <trans-unit id="f814706653b1f30f15f5d614a94d92ced79db59a" translate="yes" xml:space="preserve">
          <source>FY5253.rollforward()</source>
          <target state="translated">FY5253.rollforward()</target>
        </trans-unit>
        <trans-unit id="4b3afd6bce6fff09096989fc47cc72ea709477b2" translate="yes" xml:space="preserve">
          <source>FY5253.rule_code</source>
          <target state="translated">FY5253.rule_code</target>
        </trans-unit>
        <trans-unit id="96cb254005259267e19e4bd82e0fd8fca2de6e97" translate="yes" xml:space="preserve">
          <source>FY5253Quarter</source>
          <target state="translated">FY5253Quarter</target>
        </trans-unit>
        <trans-unit id="784ec042450bf644e66f35a4a938f32413cf5031" translate="yes" xml:space="preserve">
          <source>FY5253Quarter.apply()</source>
          <target state="translated">FY5253Quarter.apply()</target>
        </trans-unit>
        <trans-unit id="b85f1c00dbdb6f30641a8700c8a806d459815e7e" translate="yes" xml:space="preserve">
          <source>FY5253Quarter.apply_index()</source>
          <target state="translated">FY5253Quarter.apply_index()</target>
        </trans-unit>
        <trans-unit id="2e92948513d2191885863cda33bc3fecaf39830d" translate="yes" xml:space="preserve">
          <source>FY5253Quarter.base</source>
          <target state="translated">FY5253Quarter.base</target>
        </trans-unit>
        <trans-unit id="1d6dd6043c56a8f1f6bc64560198b8cdf6404f02" translate="yes" xml:space="preserve">
          <source>FY5253Quarter.copy()</source>
          <target state="translated">FY5253Quarter.copy()</target>
        </trans-unit>
        <trans-unit id="627993ed976b336dd92237f82f9513a96b0b0816" translate="yes" xml:space="preserve">
          <source>FY5253Quarter.freqstr</source>
          <target state="translated">FY5253Quarter.freqstr</target>
        </trans-unit>
        <trans-unit id="9382fceeeaefa1d3a83c1e1088daa23f089bfd28" translate="yes" xml:space="preserve">
          <source>FY5253Quarter.get_weeks()</source>
          <target state="translated">FY5253Quarter.get_weeks()</target>
        </trans-unit>
        <trans-unit id="2bdc786f729da695a2417ae118b6f500217f6d61" translate="yes" xml:space="preserve">
          <source>FY5253Quarter.isAnchored()</source>
          <target state="translated">FY5253Quarter.isAnchored()</target>
        </trans-unit>
        <trans-unit id="131a83b6cb7a0cae58edaed29e72ebbac580d613" translate="yes" xml:space="preserve">
          <source>FY5253Quarter.kwds</source>
          <target state="translated">FY5253Quarter.kwds</target>
        </trans-unit>
        <trans-unit id="f92e5dbdb30c0e456c81014fb50c6ade607078d6" translate="yes" xml:space="preserve">
          <source>FY5253Quarter.name</source>
          <target state="translated">FY5253Quarter.name</target>
        </trans-unit>
        <trans-unit id="f878fd5b00ef03a1bd8c417ac65d2bd9dbd482e8" translate="yes" xml:space="preserve">
          <source>FY5253Quarter.nanos</source>
          <target state="translated">FY5253Quarter.nanos</target>
        </trans-unit>
        <trans-unit id="4721c95a94bd62217b65365ed8f55d5599d6550c" translate="yes" xml:space="preserve">
          <source>FY5253Quarter.normalize</source>
          <target state="translated">FY5253Quarter.normalize</target>
        </trans-unit>
        <trans-unit id="81f1f26d0714f6f53a686dd752c282d2237d0dfb" translate="yes" xml:space="preserve">
          <source>FY5253Quarter.onOffset()</source>
          <target state="translated">FY5253Quarter.onOffset()</target>
        </trans-unit>
        <trans-unit id="bff7ef0536dd5481b9739e743990ea675542ceda" translate="yes" xml:space="preserve">
          <source>FY5253Quarter.rollback()</source>
          <target state="translated">FY5253Quarter.rollback()</target>
        </trans-unit>
        <trans-unit id="3ad4ca001f2ee53912ae6b9d625be4d4cdb345d8" translate="yes" xml:space="preserve">
          <source>FY5253Quarter.rollforward()</source>
          <target state="translated">FY5253Quarter.rollforward()</target>
        </trans-unit>
        <trans-unit id="8c94940257d2280193600e2e070237d3ee04b4bd" translate="yes" xml:space="preserve">
          <source>FY5253Quarter.rule_code</source>
          <target state="translated">FY5253Quarter.rule_code</target>
        </trans-unit>
        <trans-unit id="fbc4787a7142002a26b9732c839c55435ddf8ea8" translate="yes" xml:space="preserve">
          <source>FY5253Quarter.year_has_extra_week()</source>
          <target state="translated">FY5253Quarter.year_has_extra_week()</target>
        </trans-unit>
        <trans-unit id="2ae45aa607f992e0b433a33fac2d171af1ea28c0" translate="yes" xml:space="preserve">
          <source>Faceted</source>
          <target state="translated">Faceted</target>
        </trans-unit>
        <trans-unit id="106e4b4674a42bd42b9cedf0e327049f1e090b77" translate="yes" xml:space="preserve">
          <source>Factorizing values</source>
          <target state="translated">价值因子化</target>
        </trans-unit>
        <trans-unit id="d0cbaa4d652fa9b69360beb1ca8205ae3f1f269c" translate="yes" xml:space="preserve">
          <source>Factory function for creating a subclass of &lt;code&gt;Styler&lt;/code&gt; with a custom template and Jinja environment.</source>
          <target state="translated">使用自定义模板和Jinja环境创建 &lt;code&gt;Styler&lt;/code&gt; 子类的工厂函数。</target>
        </trans-unit>
        <trans-unit id="cc1bde2b960f3e7b831f2aece43f8b4708c1aa49" translate="yes" xml:space="preserve">
          <source>Factory function for creating a subclass of &lt;code&gt;Styler&lt;/code&gt;.</source>
          <target state="translated">用于创建 &lt;code&gt;Styler&lt;/code&gt; 子类的工厂函数。</target>
        </trans-unit>
        <trans-unit id="88e656f0b4ab714a3cdccffc2dec1871c3dbee26" translate="yes" xml:space="preserve">
          <source>Fallback behavior</source>
          <target state="translated">回退行为</target>
        </trans-unit>
        <trans-unit id="97cdbdc7feff827efb082a6b6dd2727237cd49fd" translate="yes" xml:space="preserve">
          <source>False</source>
          <target state="translated">False</target>
        </trans-unit>
        <trans-unit id="b96deb3768dcebdce69efb10e87804c88b8a34e2" translate="yes" xml:space="preserve">
          <source>False : Do not sort the result.</source>
          <target state="translated">False:不对结果进行排序。</target>
        </trans-unit>
        <trans-unit id="a20a7910e54529a94e15496d9bf2c64deab106ce" translate="yes" xml:space="preserve">
          <source>False : Drop all duplicates.</source>
          <target state="translated">False:删除所有重复的内容。</target>
        </trans-unit>
        <trans-unit id="c98629c7d9f2b3ee2abb8a2b88c80ef6f13a8d9e" translate="yes" xml:space="preserve">
          <source>False : Mark all duplicates as &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">False：将所有重复项标记为 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9e574619f5888527dd4b46c8d21efb6599967561" translate="yes" xml:space="preserve">
          <source>False : do not sort the result.</source>
          <target state="translated">False:不对结果进行排序。</target>
        </trans-unit>
        <trans-unit id="4ea45601f3da5945d3494412d4956fc90a505760" translate="yes" xml:space="preserve">
          <source>False : returns an ndarray of integers.</source>
          <target state="translated">False:返回一个整数数组。</target>
        </trans-unit>
        <trans-unit id="5509abef56b320ae40870a70b29bce3da24aff93" translate="yes" xml:space="preserve">
          <source>False for ranks by high (1) to low (N)</source>
          <target state="translated">从高(1)到低(N)的等级为假。</target>
        </trans-unit>
        <trans-unit id="c38d18d61f60514622129b9d816256d1798e0944" translate="yes" xml:space="preserve">
          <source>False for ranks by high (1) to low (N).</source>
          <target state="translated">从高(1)到低(N)的等级为假。</target>
        </trans-unit>
        <trans-unit id="361d4af337668b944d87cc468ab35915ea6ead05" translate="yes" xml:space="preserve">
          <source>False to sort in descending order</source>
          <target state="translated">假的,以降序排序</target>
        </trans-unit>
        <trans-unit id="33c7b9e0c6640c191e80b0f42a3e0cb5599fe90c" translate="yes" xml:space="preserve">
          <source>False to sort in descending order Can also be a list to specify a directed ordering</source>
          <target state="translated">False以降序排序 也可以是一个列表来指定定向排序</target>
        </trans-unit>
        <trans-unit id="bdc736e0f1f9d6edd41b15cbab82015a10b79392" translate="yes" xml:space="preserve">
          <source>False to sort in descending order. Can also be a list to specify a directed ordering.</source>
          <target state="translated">False以降序排序。也可以是一个列表来指定定向排序。</target>
        </trans-unit>
        <trans-unit id="b71ab72067a97a3bff9c6ece7c76464ff712e84f" translate="yes" xml:space="preserve">
          <source>False, because &lt;code&gt;0&lt;/code&gt; is considered False.</source>
          <target state="translated">错误，因为 &lt;code&gt;0&lt;/code&gt; 被认为是错误。</target>
        </trans-unit>
        <trans-unit id="2f7fd33420282f75aebed8e9c5a1dc0497e87330" translate="yes" xml:space="preserve">
          <source>False, write a string representation of the object to the clipboard.</source>
          <target state="translated">False,将对象的字符串表示写到剪贴板上。</target>
        </trans-unit>
        <trans-unit id="beafa8310aa2a0b60e7b0a42d9d003a6d2af7e1c" translate="yes" xml:space="preserve">
          <source>False: negative values in</source>
          <target state="translated">假:负值</target>
        </trans-unit>
        <trans-unit id="83bc9e31cbcb5092f1db34d73fe09930c9c1ff11" translate="yes" xml:space="preserve">
          <source>False: negative values in &lt;code&gt;indices&lt;/code&gt; indicate positional indices from the right (the default). This is similar to &lt;a href=&quot;https://docs.scipy.org/doc/numpy/reference/generated/numpy.take.html#numpy.take&quot;&gt;&lt;code&gt;numpy.take()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">False： &lt;code&gt;indices&lt;/code&gt; 负值指示从右侧开始的位置索引（默认值）。这类似于&lt;a href=&quot;https://docs.scipy.org/doc/numpy/reference/generated/numpy.take.html#numpy.take&quot;&gt; &lt;code&gt;numpy.take()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dc15e7c9376a780ab20e2736f813431c67f47561" translate="yes" xml:space="preserve">
          <source>False: only update values that are NA in the original DataFrame.</source>
          <target state="translated">False:只更新原DataFrame中的NA值。</target>
        </trans-unit>
        <trans-unit id="c3332e1b039f3d9c21340c1bb2685d08ae322a82" translate="yes" xml:space="preserve">
          <source>Fama/French</source>
          <target state="translated">Fama/French</target>
        </trans-unit>
        <trans-unit id="874216e990eccdf7c6c0b4c9179b7cb8a56dd84f" translate="yes" xml:space="preserve">
          <source>Fast integer location scalar accessor.</source>
          <target state="translated">快速整数位置标量访问器。</target>
        </trans-unit>
        <trans-unit id="337ea8ca14b943e61d637c82f2c613bba294e211" translate="yes" xml:space="preserve">
          <source>Fast lookup of value from 1-dimensional ndarray.</source>
          <target state="translated">从一维ndarray中快速查找值。</target>
        </trans-unit>
        <trans-unit id="a10b648a47a4d5e7cf7d74b1e50dcb4a6bd8b633" translate="yes" xml:space="preserve">
          <source>Fast lookup of value from 1-dimensional ndarray. Only use this if you know what you&amp;rsquo;re doing.</source>
          <target state="translated">从一维ndarray快速查找值。仅当您知道自己在做什么时才使用此功能。</target>
        </trans-unit>
        <trans-unit id="bd36642eb449b970a92b19f21c93bab36201657f" translate="yes" xml:space="preserve">
          <source>Fast scalar value getting and setting</source>
          <target state="translated">快速获取和设置标量值</target>
        </trans-unit>
        <trans-unit id="36da1f60291065c6fc24d5741f89f6401195d25a" translate="yes" xml:space="preserve">
          <source>Fast shifting using the &lt;code&gt;shift&lt;/code&gt; method on pandas objects.</source>
          <target state="translated">在熊猫对象上使用 &lt;code&gt;shift&lt;/code&gt; 方法进行快速移位。</target>
        </trans-unit>
        <trans-unit id="4de292bd5560d050aa899dfa437d2faf6fcfb7e8" translate="yes" xml:space="preserve">
          <source>Fast writing/reading. Not-appendable, nor searchable</source>
          <target state="translated">快速书写/阅读。不可附录,也不可搜索</target>
        </trans-unit>
        <trans-unit id="173bea418fbf0fa2f7bbd5ce089223701237b5e4" translate="yes" xml:space="preserve">
          <source>Faster than &lt;code&gt;.sort_values().head(n)&lt;/code&gt; for small</source>
          <target state="translated">速度比 &lt;code&gt;.sort_values().head(n)&lt;/code&gt; 为小</target>
        </trans-unit>
        <trans-unit id="99538d966c9294a32b99f0efc0badb2deba8a351" translate="yes" xml:space="preserve">
          <source>Faster than &lt;code&gt;.sort_values().head(n)&lt;/code&gt; for small &lt;code&gt;n&lt;/code&gt; relative to the size of the &lt;code&gt;Series&lt;/code&gt; object.</source>
          <target state="translated">更快比 &lt;code&gt;.sort_values().head(n)&lt;/code&gt; 用于小 &lt;code&gt;n&lt;/code&gt; 相对的大小 &lt;code&gt;Series&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="afac290377288f0295ea44b55d47f15889846f80" translate="yes" xml:space="preserve">
          <source>Faster than &lt;code&gt;.sort_values(ascending=False).head(n)&lt;/code&gt; for small</source>
          <target state="translated">更快比 &lt;code&gt;.sort_values(ascending=False).head(n)&lt;/code&gt; 用于小</target>
        </trans-unit>
        <trans-unit id="825fdb617ed6728a4a54a249658aec3f6835cd72" translate="yes" xml:space="preserve">
          <source>Faster than &lt;code&gt;.sort_values(ascending=False).head(n)&lt;/code&gt; for small &lt;code&gt;n&lt;/code&gt; relative to the size of the &lt;code&gt;Series&lt;/code&gt; object.</source>
          <target state="translated">相对于 &lt;code&gt;Series&lt;/code&gt; 对象的大小，对于小 &lt;code&gt;n&lt;/code&gt; 而言，比 &lt;code&gt;.sort_values(ascending=False).head(n)&lt;/code&gt; 更快。</target>
        </trans-unit>
        <trans-unit id="0d9bf5551ad3e6450e13ede432ffe8987098c1fb" translate="yes" xml:space="preserve">
          <source>Feather</source>
          <target state="translated">Feather</target>
        </trans-unit>
        <trans-unit id="b0fdb754235635f8ea32eb98dd0e41c1153e1dba" translate="yes" xml:space="preserve">
          <source>Feather Format</source>
          <target state="translated">羽毛格式</target>
        </trans-unit>
        <trans-unit id="3b6756aaab93cc7e83b66ab195930a4e8dc51801" translate="yes" xml:space="preserve">
          <source>Feather is designed to faithfully serialize and de-serialize DataFrames, supporting all of the pandas dtypes, including extension dtypes such as categorical and datetime with tz.</source>
          <target state="translated">Feather被设计为忠实地序列化和去序列化DataFrames,支持所有的pandas dtypes,包括扩展dtypes,如分类和tz的datetime。</target>
        </trans-unit>
        <trans-unit id="c98089614faf4a2ece58e65c5d66c3c0d5a8cca8" translate="yes" xml:space="preserve">
          <source>Feather provides binary columnar serialization for data frames. It is designed to make reading and writing data frames efficient, and to make sharing data across data analysis languages easy.</source>
          <target state="translated">Feather为数据帧提供二进制列式序列化。它的设计目的是为了使数据帧的读写效率更高,并使数据分析语言之间的数据共享变得简单。</target>
        </trans-unit>
        <trans-unit id="c0bae807be9d78f92cf0d62e494d47b8de3238cc" translate="yes" xml:space="preserve">
          <source>Featuretools</source>
          <target state="translated">Featuretools</target>
        </trans-unit>
        <trans-unit id="1bd8f0c9372d96db7fc3b02fc7b5017c1b1fe9fc" translate="yes" xml:space="preserve">
          <source>Featuretools is a Python library for automated feature engineering built on top of pandas. It excels at transforming temporal and relational datasets into feature matrices for machine learning using reusable feature engineering &amp;ldquo;primitives&amp;rdquo;. Users can contribute their own primitives in Python and share them with the rest of the community.</source>
          <target state="translated">Featuretools是一个基于熊猫的自动功能工程的Python库。它擅长使用可重用的特征工程&amp;ldquo;基元&amp;rdquo;将时间和关系数据集转换为用于机器学习的特征矩阵。用户可以使用Python贡献自己的原语，并与社区的其他人共享。</target>
        </trans-unit>
        <trans-unit id="bc5fc74a0c921be17dde1b381a9a43609da45dab" translate="yes" xml:space="preserve">
          <source>Fedora</source>
          <target state="translated">Fedora</target>
        </trans-unit>
        <trans-unit id="e37089c94eb8cb4b17ffb0dece5eb4de66357210" translate="yes" xml:space="preserve">
          <source>Feel free to ask questions on the &lt;a href=&quot;https://groups.google.com/forum/?fromgroups#!forum/pydata&quot;&gt;mailing list&lt;/a&gt; or on &lt;a href=&quot;https://gitter.im/pydata/pandas&quot;&gt;Gitter&lt;/a&gt;.</source>
          <target state="translated">随时在&lt;a href=&quot;https://groups.google.com/forum/?fromgroups#!forum/pydata&quot;&gt;邮件列表&lt;/a&gt;或&lt;a href=&quot;https://gitter.im/pydata/pandas&quot;&gt;Gitter&lt;/a&gt;上提问。</target>
        </trans-unit>
        <trans-unit id="a483d7df7ab24a937de2380a830b243ab62c3a2a" translate="yes" xml:space="preserve">
          <source>Feel free to skip it, unless you are familiar with the implementation of the algorithm, or you discover some counter-intuitive behavior while writing the examples for the function.</source>
          <target state="translated">随意跳过它,除非你熟悉算法的实现,或者你在编写函数的例子时发现一些反直觉的行为。</target>
        </trans-unit>
        <trans-unit id="b7ea81880c7ea5074a817ce7e3f2f2fdbcfea6d9" translate="yes" xml:space="preserve">
          <source>Field delimiter.</source>
          <target state="translated">字段定界符:</target>
        </trans-unit>
        <trans-unit id="537a99a5583ab4fca05a8cb9d614bc5ab2272c0a" translate="yes" xml:space="preserve">
          <source>Field name to join on in left DataFrame.</source>
          <target state="translated">左边DataFrame中加入的字段名。</target>
        </trans-unit>
        <trans-unit id="09ce7cef8b0db07219e0a6af8f7d876b8cac156f" translate="yes" xml:space="preserve">
          <source>Field name to join on in right DataFrame.</source>
          <target state="translated">右边DataFrame中加入的字段名。</target>
        </trans-unit>
        <trans-unit id="e2428bb9f4638e33864108df0c94759242ddf4ce" translate="yes" xml:space="preserve">
          <source>Field name to join on. Must be found in both DataFrames. The data MUST be ordered. Furthermore this must be a numeric column, such as datetimelike, integer, or float. On or left_on/right_on must be given.</source>
          <target state="translated">要加入的字段名。必须在两个DataFrames中找到。数据必须是有序的。此外,这必须是一个数字列,如datetimelike、整数或float。必须给出On或left_on/right_on。</target>
        </trans-unit>
        <trans-unit id="9582e86f4774cdf2c342c747a46adc99527b29f4" translate="yes" xml:space="preserve">
          <source>Field names to join on in left DataFrame. Can be a vector or list of vectors of the length of the DataFrame to use a particular vector as the join key instead of columns</source>
          <target state="translated">左边DataFrame中要连接的字段名。可以是DataFrame长度的向量或向量列表,使用特定的向量作为连接键,而不是列。</target>
        </trans-unit>
        <trans-unit id="58709c58ced1664cb805d040ee2292fcb677b9c0" translate="yes" xml:space="preserve">
          <source>Field names to join on in left DataFrame. Can be a vector or list of vectors of the length of the DataFrame to use a particular vector as the join key instead of columns.</source>
          <target state="translated">左边DataFrame中要连接的字段名。可以是DataFrame长度的向量或向量列表,以使用特定的向量作为连接键而不是列。</target>
        </trans-unit>
        <trans-unit id="eba74cb6f01f4490a588ac70b9e868ab69dfb204" translate="yes" xml:space="preserve">
          <source>Field names to join on in right DataFrame or vector/list of vectors per left_on docs</source>
          <target state="translated">在右侧数据框或向量/向量列表中加入的字段名,根据left_on文档。</target>
        </trans-unit>
        <trans-unit id="350de40c47f3224884271b0f531823b5b6a271fa" translate="yes" xml:space="preserve">
          <source>Field names to join on in right DataFrame or vector/list of vectors per left_on docs.</source>
          <target state="translated">字段名要加入到右边的DataFrame或向量/向量列表中,根据left_on文档。</target>
        </trans-unit>
        <trans-unit id="0775d3111b928ff336ce0fae1112cd65453fb13f" translate="yes" xml:space="preserve">
          <source>Field names to join on. Must be found in both DataFrames.</source>
          <target state="translated">要加入的字段名。必须在两个DataFrames中找到。</target>
        </trans-unit>
        <trans-unit id="387353364130ed6d443806b5a300456ac5e8ff91" translate="yes" xml:space="preserve">
          <source>Field names to match on in the left DataFrame.</source>
          <target state="translated">字段名要在左边的DataFrame中匹配。</target>
        </trans-unit>
        <trans-unit id="7cc5b2b66482174b9fe56a7bbcc7ea8a9dc20f34" translate="yes" xml:space="preserve">
          <source>Field names to match on in the right DataFrame.</source>
          <target state="translated">字段名要在正确的DataFrame中匹配。</target>
        </trans-unit>
        <trans-unit id="bdeae7c8dead1bbc7e71d424f6decb56f17dc0a5" translate="yes" xml:space="preserve">
          <source>Field of array to use as the index, alternately a specific set of input labels to use</source>
          <target state="translated">使用数组的字段作为索引,或者使用一组特定的输入标签。</target>
        </trans-unit>
        <trans-unit id="b0fb6ba527e4e59b47a95ab446b49e9113056063" translate="yes" xml:space="preserve">
          <source>Field of array to use as the index, alternately a specific set of input labels to use.</source>
          <target state="translated">使用数组的字段作为索引,或者使用一组特定的输入标签。</target>
        </trans-unit>
        <trans-unit id="9f921bb637b152dee2457d31ff5ee759ea85df62" translate="yes" xml:space="preserve">
          <source>Fields to use as metadata for each record in resulting table.</source>
          <target state="translated">在生成的表格中,作为每个记录的元数据使用的字段。</target>
        </trans-unit>
        <trans-unit id="0c3a075dd5f38cadf6b9b7c5519436ae7fa103e1" translate="yes" xml:space="preserve">
          <source>Figure size in inches by default.</source>
          <target state="translated">图中尺寸默认为英寸。</target>
        </trans-unit>
        <trans-unit id="2d459b24c0fff89729feac3cd99d5f9cc5bff4cb" translate="yes" xml:space="preserve">
          <source>File mode to use (write or append).</source>
          <target state="translated">要使用的文件模式(写入或追加)。</target>
        </trans-unit>
        <trans-unit id="ef330c6183dfa3dd3515d0720fff6b7d9dd0ef5e" translate="yes" xml:space="preserve">
          <source>File mode to use (write or append). Append does not work with fsspec URLs.</source>
          <target state="translated">要使用的文件模式(写入或追加)。追加模式不适用于fsspec URLs。</target>
        </trans-unit>
        <trans-unit id="2bf921970eeddb890ebff0d8792330c78a4638b9" translate="yes" xml:space="preserve">
          <source>File path or HDFStore object.</source>
          <target state="translated">文件路径或HDFStore对象。</target>
        </trans-unit>
        <trans-unit id="f867daaac4e2cd95d46387c5829dc91e1389f80c" translate="yes" xml:space="preserve">
          <source>File path or Root Directory path. Will be used as Root Directory path while writing a partitioned dataset.</source>
          <target state="translated">文件路径或根目录路径。当写入分区数据集时,将被用作根目录路径。</target>
        </trans-unit>
        <trans-unit id="3b2d188c74673dc7f89a526316a160f1db07c29e" translate="yes" xml:space="preserve">
          <source>File path or existing ExcelWriter.</source>
          <target state="translated">文件路径或现有的ExcelWriter。</target>
        </trans-unit>
        <trans-unit id="313b1148aa9528548af7998cfbba677fcabeb3b9" translate="yes" xml:space="preserve">
          <source>File path or object, if None is provided the result is returned as a string. If a file object is passed it should be opened with &lt;code&gt;newline=&amp;rsquo;&amp;lsquo;&lt;/code&gt;, disabling universal newlines.</source>
          <target state="translated">文件路径或对象，如果提供None，则结果以字符串形式返回。如果传递了文件对象，则应使用 &lt;code&gt;newline=&amp;rsquo;&amp;lsquo;&lt;/code&gt; 打开它，从而禁用通用换行符。</target>
        </trans-unit>
        <trans-unit id="d67eaa07eecf81e15135eeaa544b3b8b8bffa17d" translate="yes" xml:space="preserve">
          <source>File path or object, if None is provided the result is returned as a string. If a non-binary file object is passed, it should be opened with</source>
          <target state="translated">文件路径或对象,如果提供了None,则返回结果为字符串。如果传递的是一个非二进制文件对象,则应以</target>
        </trans-unit>
        <trans-unit id="095f84ba38f5b35140a16b30636b5da81cd59592" translate="yes" xml:space="preserve">
          <source>File path or object. If not specified, the result is returned as a string.</source>
          <target state="translated">文件路径或对象。如果没有指定,结果将以字符串形式返回。</target>
        </trans-unit>
        <trans-unit id="20e72ab0bf82ca97709211f07f6e7471fe8797f8" translate="yes" xml:space="preserve">
          <source>File path where the pickled object will be loaded.</source>
          <target state="translated">加载腌制对象的文件路径。</target>
        </trans-unit>
        <trans-unit id="2e26c6c8f5ac7b5d57f95844c1203c4def0475be" translate="yes" xml:space="preserve">
          <source>File path where the pickled object will be stored.</source>
          <target state="translated">存储腌制对象的文件路径。</target>
        </trans-unit>
        <trans-unit id="4eb88901451342cc556b63073f34bc645ba8a848" translate="yes" xml:space="preserve">
          <source>File path, URL, or buffer where the pickled object will be loaded from.</source>
          <target state="translated">文件路径、URL或缓冲区,将从那里加载腌制对象。</target>
        </trans-unit>
        <trans-unit id="62fbca8d9970683097adf5d98619064d132fec07" translate="yes" xml:space="preserve">
          <source>File path.</source>
          <target state="translated">文件路径:</target>
        </trans-unit>
        <trans-unit id="d6f7325e2e9e26c6794496761a7c8ce3147c1856" translate="yes" xml:space="preserve">
          <source>Files with a &lt;code&gt;.xls&lt;/code&gt; extension will be written using &lt;code&gt;xlwt&lt;/code&gt; and those with a &lt;code&gt;.xlsx&lt;/code&gt; extension will be written using &lt;code&gt;xlsxwriter&lt;/code&gt; (if available) or &lt;code&gt;openpyxl&lt;/code&gt;.</source>
          <target state="translated">用文件 &lt;code&gt;.xls&lt;/code&gt; 的扩展将使用写入 &lt;code&gt;xlwt&lt;/code&gt; 和那些具有 &lt;code&gt;.xlsx&lt;/code&gt; 扩展将使用被写入 &lt;code&gt;xlsxwriter&lt;/code&gt; （如有）或 &lt;code&gt;openpyxl&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3858e73b7fc30664a8ec7b0eb85a44bfea6211b9" translate="yes" xml:space="preserve">
          <source>Files with an &amp;ldquo;implicit&amp;rdquo; index column</source>
          <target state="translated">具有&amp;ldquo;隐式&amp;rdquo;索引列的文件</target>
        </trans-unit>
        <trans-unit id="90f4f142c20f6d2cc2a4df24e090733d5de66367" translate="yes" xml:space="preserve">
          <source>Files with fixed width columns</source>
          <target state="translated">具有固定宽度列的文件</target>
        </trans-unit>
        <trans-unit id="c143458416a8969726c2447a1c5e9f3bbef28e02" translate="yes" xml:space="preserve">
          <source>Fill 0&amp;rsquo;s</source>
          <target state="translated">填0</target>
        </trans-unit>
        <trans-unit id="b351038351d12644063121e24b90ff37b41455d8" translate="yes" xml:space="preserve">
          <source>Fill NA values.</source>
          <target state="translated">填写NA值。</target>
        </trans-unit>
        <trans-unit id="b80990868950f517aa1173a925642b04f82ae8d3" translate="yes" xml:space="preserve">
          <source>Fill NA/NaN values using the specified method.</source>
          <target state="translated">使用指定方法填写NA/NAN值。</target>
        </trans-unit>
        <trans-unit id="f3703dd475408f0afbbeb8a80210486a209db623" translate="yes" xml:space="preserve">
          <source>Fill NA/NaN values with the specified value</source>
          <target state="translated">用指定的值填充NA/NAN值。</target>
        </trans-unit>
        <trans-unit id="c54389e04e9cf004d3212bd02d609d1328c2fc58" translate="yes" xml:space="preserve">
          <source>Fill NA/NaN values with the specified value.</source>
          <target state="translated">用指定的值填充NA/NAN值。</target>
        </trans-unit>
        <trans-unit id="1ad281031358606ee50cddf44b1809b3875fd386" translate="yes" xml:space="preserve">
          <source>Fill NaN Values of a Series.</source>
          <target state="translated">填充系列的NaN值。</target>
        </trans-unit>
        <trans-unit id="012f242cf29ad225c54b44a3d5b4edfd2db37cfa" translate="yes" xml:space="preserve">
          <source>Fill NaN values in the DataFrame using the specified method, which can be &amp;lsquo;backfill&amp;rsquo;.</source>
          <target state="translated">使用指定的方法（可以是&amp;ldquo;回填&amp;rdquo;）在DataFrame中填充NaN值。</target>
        </trans-unit>
        <trans-unit id="620143528e7eeceab027f4c36491dbefd2ac6f7e" translate="yes" xml:space="preserve">
          <source>Fill NaN values in the DataFrame using the specified method, which can be &amp;lsquo;bfill&amp;rsquo; and &amp;lsquo;ffill&amp;rsquo;.</source>
          <target state="translated">使用指定的方法在DataFrame中填充NaN值，可以是&amp;ldquo; bfill&amp;rdquo;和&amp;ldquo; ffill&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="b238ad9507ac3f809a2ab2e08a93025a62752747" translate="yes" xml:space="preserve">
          <source>Fill NaN values in the Series using the specified method, which can be &amp;lsquo;backfill&amp;rsquo;.</source>
          <target state="translated">使用指定的方法（可以是&amp;ldquo;回填&amp;rdquo;）在系列中填充NaN值。</target>
        </trans-unit>
        <trans-unit id="01169179363207d823dbfbfb25b9a2e49f9e7f71" translate="yes" xml:space="preserve">
          <source>Fill NaN values in the Series using the specified method, which can be &amp;lsquo;bfill&amp;rsquo; and &amp;lsquo;ffill&amp;rsquo;.</source>
          <target state="translated">使用指定的方法填充系列中的NaN值，可以是&amp;ldquo;填充&amp;rdquo;和&amp;ldquo;填充&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="86b9680d33b50b90915060223dd79eff0fbc58de" translate="yes" xml:space="preserve">
          <source>Fill NaN values in the resampled data with nearest neighbor starting from center.</source>
          <target state="translated">在重新采样的数据中,从中心开始用最近的邻居填充NaN值。</target>
        </trans-unit>
        <trans-unit id="8a1d65b8070d271997fcc108e84c419d8da901ee" translate="yes" xml:space="preserve">
          <source>Fill NaN values of a DataFrame.</source>
          <target state="translated">填充DataFrame的NaN值。</target>
        </trans-unit>
        <trans-unit id="845fb67b514306e502764974977b4e2cf3604a4c" translate="yes" xml:space="preserve">
          <source>Fill NaN values of a Series.</source>
          <target state="translated">填充一个系列的NaN值。</target>
        </trans-unit>
        <trans-unit id="3bf2513d8f583f24d1cf18e4cbea6b7f8b346740" translate="yes" xml:space="preserve">
          <source>Fill NaN values using an interpolation method.</source>
          <target state="translated">使用插值法填充NaN值。</target>
        </trans-unit>
        <trans-unit id="0d891bc00bafcca46ab866f09a35e42513e1ec32" translate="yes" xml:space="preserve">
          <source>Fill NaN values using interpolation.</source>
          <target state="translated">利用插值法填充NaN值。</target>
        </trans-unit>
        <trans-unit id="5567118bdf70946310fb9b109d9c8aa5b86ffff1" translate="yes" xml:space="preserve">
          <source>Fill NaN values using the specified method, which can be &amp;lsquo;backfill&amp;rsquo;.</source>
          <target state="translated">使用指定的方法（可以是&amp;ldquo;回填&amp;rdquo;）填充NaN值。</target>
        </trans-unit>
        <trans-unit id="6476bed1e703a5e80152dbeb86e69facac82ba3f" translate="yes" xml:space="preserve">
          <source>Fill NaN values with nearest neighbor starting from center.</source>
          <target state="translated">从中心开始用最近的邻居填充NaN值。</target>
        </trans-unit>
        <trans-unit id="239b7e96bf370e9a8793ec17c8fc251ade8f48f5" translate="yes" xml:space="preserve">
          <source>Fill existing missing (NaN) values, and any new element needed for successful DataFrame alignment, with this value before computation. If data in both corresponding DataFrame locations is missing the result will be missing.</source>
          <target state="translated">在计算前用这个值填充现有的缺失(NaN)值,以及成功的DataFrame对齐所需的任何新元素。如果两个对应的DataFrame位置的数据都缺失,则结果将缺失。</target>
        </trans-unit>
        <trans-unit id="ff5b02c3c75844d33026b20638aeda4514267b08" translate="yes" xml:space="preserve">
          <source>Fill existing missing (NaN) values, and any new element needed for successful Series alignment, with this value before computation. If data in both corresponding Series locations is missing the result of filling (at that location) will be missing.</source>
          <target state="translated">在计算前用该值填充现有的缺失(NaN)值,以及成功的Series对齐所需的任何新元素。如果两个对应的Series位置的数据都缺失,则填充的结果(在该位置)将缺失。</target>
        </trans-unit>
        <trans-unit id="80c8a1f9c96c84f9010d65f2ca63bb4847e17255" translate="yes" xml:space="preserve">
          <source>Fill existing missing (NaN) values, and any new element needed for successful Series alignment, with this value before computation. If data in both corresponding Series locations is missing the result will be missing.</source>
          <target state="translated">在计算前用该值填充现有的缺失(NaN)值,以及成功的Series对齐所需的任何新元素。如果两个对应的Series位置的数据都缺失,结果将缺失。</target>
        </trans-unit>
        <trans-unit id="72cd3e10098966c27a2fceeb8935d7975d2c98bc" translate="yes" xml:space="preserve">
          <source>Fill forward a reversed timeseries</source>
          <target state="translated">填充一个反向的时间序列</target>
        </trans-unit>
        <trans-unit id="86d9310e9c017c0a293c11fd233ec9441c4076d4" translate="yes" xml:space="preserve">
          <source>Fill from the nearest index value</source>
          <target state="translated">从最近的指数值开始填充</target>
        </trans-unit>
        <trans-unit id="8c7ce6d948d44dac6dfeaf8bf517f1c7d18be768" translate="yes" xml:space="preserve">
          <source>Fill missing values introduced by upsampling.</source>
          <target state="translated">填补上采样引入的缺失值。</target>
        </trans-unit>
        <trans-unit id="f7d07b8d33cc2312853bed471ecde65638350c5b" translate="yes" xml:space="preserve">
          <source>Fill missing values using different methods.</source>
          <target state="translated">使用不同的方法填补缺失的数值。</target>
        </trans-unit>
        <trans-unit id="dd6b45ab7ba3a6ee1147e740d05c4d0e23098774" translate="yes" xml:space="preserve">
          <source>Fill the DataFrame forward (that is, going down) along each column using linear interpolation.</source>
          <target state="translated">使用线性插值法沿每一列向前(即向下)填充DataFrame。</target>
        </trans-unit>
        <trans-unit id="af2e73645aaaa37322817e31676e49792ea4dd15" translate="yes" xml:space="preserve">
          <source>Fill value for missing values.</source>
          <target state="translated">缺失值的填充值。</target>
        </trans-unit>
        <trans-unit id="0286d23f77f50d8f5b13da8c7eaa2450be65daf5" translate="yes" xml:space="preserve">
          <source>Fill value for missing values. The default depends on dtype of the array. For object-dtype, &lt;code&gt;numpy.nan&lt;/code&gt; is used. For &lt;code&gt;StringDtype&lt;/code&gt;, &lt;code&gt;pandas.NA&lt;/code&gt; is used.</source>
          <target state="translated">填写缺失值的值。默认值取决于数组的dtype。对于object- &lt;code&gt;numpy.nan&lt;/code&gt; ，使用numpy.nan。对于 &lt;code&gt;StringDtype&lt;/code&gt; ，使用 &lt;code&gt;pandas.NA&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0b3c8650c44d3c0d5fac3904c2f1523aed116809" translate="yes" xml:space="preserve">
          <source>Fill value to use for NA-indices when</source>
          <target state="translated">填充值用于NA-指数,当</target>
        </trans-unit>
        <trans-unit id="0509ef51947892cfb19b054f43ccc493d4b39614" translate="yes" xml:space="preserve">
          <source>Fill value to use for NA-indices when &lt;code&gt;allow_fill&lt;/code&gt; is True. This may be &lt;code&gt;None&lt;/code&gt;, in which case the default NA value for the type, &lt;code&gt;self.dtype.na_value&lt;/code&gt;, is used.</source>
          <target state="translated">当 &lt;code&gt;allow_fill&lt;/code&gt; 为True 时，用于NA索引的填充值。这可能是 &lt;code&gt;None&lt;/code&gt; ，在这种情况下，将使用类型的默认NA值 &lt;code&gt;self.dtype.na_value&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="54d21db00ae179eebc6fa2f0769d5a8cc8da4b3a" translate="yes" xml:space="preserve">
          <source>Fill values backward</source>
          <target state="translated">向后填充值</target>
        </trans-unit>
        <trans-unit id="e253680a84dd7a1be68722647a844b23bac65289" translate="yes" xml:space="preserve">
          <source>Fill values forward</source>
          <target state="translated">向前填充值</target>
        </trans-unit>
        <trans-unit id="acec370e9c2d1616314d788ad14ea433b2c5ee3f" translate="yes" xml:space="preserve">
          <source>Filling NAs within groups with a value derived from each group.</source>
          <target state="translated">在各组内用从各组得出的数值填充新农合。</target>
        </trans-unit>
        <trans-unit id="fae1b11e487a49cc3f500a364d8b93960e2c5f23" translate="yes" xml:space="preserve">
          <source>Filling axis, method and limit</source>
          <target state="translated">填充轴、方法和极限</target>
        </trans-unit>
        <trans-unit id="2bc4fc692f3ae5787d1519710e12a362f206d7bc" translate="yes" xml:space="preserve">
          <source>Filling axis, method and limit.</source>
          <target state="translated">填充轴、方法和极限。</target>
        </trans-unit>
        <trans-unit id="2b2b64e4d6ffbf59c3c8ba2a743cda3ed72b4ec7" translate="yes" xml:space="preserve">
          <source>Filling forward / backward</source>
          <target state="translated">向前/向后填充</target>
        </trans-unit>
        <trans-unit id="720f8435075e534272838f7737e56f06a0e89d75" translate="yes" xml:space="preserve">
          <source>Filling in &lt;code&gt;NaN&lt;/code&gt; in a &lt;a href=&quot;pandas.series#pandas.Series&quot;&gt;&lt;code&gt;Series&lt;/code&gt;&lt;/a&gt; via linear interpolation.</source>
          <target state="translated">通过线性插值在&lt;a href=&quot;pandas.series#pandas.Series&quot;&gt; &lt;code&gt;Series&lt;/code&gt; &lt;/a&gt;填写 &lt;code&gt;NaN&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="364da3468aeaddc67bdf9a029fb9bfada31d4104" translate="yes" xml:space="preserve">
          <source>Filling in &lt;code&gt;NaN&lt;/code&gt; in a Series by padding, but filling at most two consecutive &lt;code&gt;NaN&lt;/code&gt; at a time.</source>
          <target state="translated">通过填充来填充系列中的 &lt;code&gt;NaN&lt;/code&gt; ，但一次最多填充两个连续的 &lt;code&gt;NaN&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="36dae5bd5ff9735cf59567c6eecb5edf838f9c67" translate="yes" xml:space="preserve">
          <source>Filling in &lt;code&gt;NaN&lt;/code&gt; in a Series via polynomial interpolation or splines: Both &amp;lsquo;polynomial&amp;rsquo; and &amp;lsquo;spline&amp;rsquo; methods require that you also specify an &lt;code&gt;order&lt;/code&gt; (int).</source>
          <target state="translated">通过多项式插值或样条曲线在序列中填写 &lt;code&gt;NaN&lt;/code&gt; ：&amp;ldquo;多项式&amp;rdquo;和&amp;ldquo;样条曲线&amp;rdquo;方法均要求您还指定一个 &lt;code&gt;order&lt;/code&gt; （int）。</target>
        </trans-unit>
        <trans-unit id="ba7ba42d91a9f6fdb44216bf2581a321997de5cd" translate="yes" xml:space="preserve">
          <source>Filling left and right side of strings in the Series/Index with an additional character.</source>
          <target state="translated">在Series/Index字符串的左右两边填充一个附加字符。</target>
        </trans-unit>
        <trans-unit id="5cf0129732b2592d4bc9cbea905a0fdc8181a407" translate="yes" xml:space="preserve">
          <source>Filling left and right side of strings in the Series/Index with an additional character. Equivalent to &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.center&quot;&gt;&lt;code&gt;str.center()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在系列/索引中的字符串的左侧和右侧使用其他字符填充。等效于&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.center&quot;&gt; &lt;code&gt;str.center()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="811887a667f91303bfe683ebc5d89c25b8a758b9" translate="yes" xml:space="preserve">
          <source>Filling left side of strings in the Series/Index with an additional character.</source>
          <target state="translated">在Series/Index中的字符串左侧填充一个附加字符。</target>
        </trans-unit>
        <trans-unit id="8c736ad6780ac3ac80ef59b551cb3689cad0a107" translate="yes" xml:space="preserve">
          <source>Filling left side of strings in the Series/Index with an additional character. Equivalent to &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.rjust&quot;&gt;&lt;code&gt;str.rjust()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">用其他字符填充&amp;ldquo;系列/索引&amp;rdquo;中字符串的左侧。等效于&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.rjust&quot;&gt; &lt;code&gt;str.rjust()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ad05a0f0992418b05509080d6ac6f73afcab4e55" translate="yes" xml:space="preserve">
          <source>Filling method for upsampling.</source>
          <target state="translated">上采样的填充方法。</target>
        </trans-unit>
        <trans-unit id="cff5861e1c1bd4e37340b1fd2f56e5b678207829" translate="yes" xml:space="preserve">
          <source>Filling missing data.</source>
          <target state="translated">填补缺失的数据。</target>
        </trans-unit>
        <trans-unit id="a71ddf48e5fc87844cc9033e90535193556eea1a" translate="yes" xml:space="preserve">
          <source>Filling missing values: fillna</source>
          <target state="translated">填补缺失值:fillna</target>
        </trans-unit>
        <trans-unit id="591c633fe1e0c4843a77818a3d273b2e5108eee5" translate="yes" xml:space="preserve">
          <source>Filling right side of strings in the Series/Index with an additional character.</source>
          <target state="translated">在Series/Index中的字符串右侧填充一个附加字符。</target>
        </trans-unit>
        <trans-unit id="ac10402a9e5bce560522e238f305710fdc6b5048" translate="yes" xml:space="preserve">
          <source>Filling right side of strings in the Series/Index with an additional character. Equivalent to &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.ljust&quot;&gt;&lt;code&gt;str.ljust()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在系列/索引中的字符串右侧填充其他字符。等效于&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.ljust&quot;&gt; &lt;code&gt;str.ljust()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3ee97f787d3462513e1a2aee066d2f58a29dc6b5" translate="yes" xml:space="preserve">
          <source>Filling while reindexing</source>
          <target state="translated">填充时重新索引</target>
        </trans-unit>
        <trans-unit id="0549c496a7ed86749b9c184bc8c5c01522d73491" translate="yes" xml:space="preserve">
          <source>Filling with a PandasObject</source>
          <target state="translated">填充一个PandasObject</target>
        </trans-unit>
        <trans-unit id="ea1a798c1780f4c5c4d6d36025c673cb49dac498" translate="yes" xml:space="preserve">
          <source>Fills both sides of strings with an arbitrary character.</source>
          <target state="translated">在字符串的两边填入一个任意的字符。</target>
        </trans-unit>
        <trans-unit id="a27c90ebe348dfe3ffc211ea99ea0a48a752f8e5" translate="yes" xml:space="preserve">
          <source>Fills both sides of strings with an arbitrary character. Equivalent to &lt;code&gt;Series.str.pad(side='both')&lt;/code&gt;.</source>
          <target state="translated">用任意字符填充字符串的两侧。等效于 &lt;code&gt;Series.str.pad(side='both')&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dc550ee2845042f5e8d1ff1a04a41f75b5f1c5bf" translate="yes" xml:space="preserve">
          <source>Fills boths sides of strings with an arbitrary character.</source>
          <target state="translated">在字符串的两边填入一个任意的字符。</target>
        </trans-unit>
        <trans-unit id="a3790f1af6bf86ff119f3eca7c76b2154b52e604" translate="yes" xml:space="preserve">
          <source>Fills boths sides of strings with an arbitrary character. Equivalent to &lt;code&gt;Series.str.pad(side='both')&lt;/code&gt;.</source>
          <target state="translated">用任意字符填充字符串的两边。等效于 &lt;code&gt;Series.str.pad(side='both')&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4a43da16217d034e574ff066c3012d9cdf0c66f8" translate="yes" xml:space="preserve">
          <source>Fills the left side of strings with an arbitrary character.</source>
          <target state="translated">在字符串的左侧填充一个任意的字符。</target>
        </trans-unit>
        <trans-unit id="106ddad8573bd02a956a989c9742c39ceb29806f" translate="yes" xml:space="preserve">
          <source>Fills the left side of strings with an arbitrary character. Equivalent to &lt;code&gt;Series.str.pad(side='left')&lt;/code&gt;.</source>
          <target state="translated">用任意字符填充字符串的左侧。等效于 &lt;code&gt;Series.str.pad(side='left')&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e6a9279066cf35c7e73adb2878aaafa11b9de5d8" translate="yes" xml:space="preserve">
          <source>Fills the right side of strings with an arbitrary character.</source>
          <target state="translated">在字符串的右边填充一个任意的字符。</target>
        </trans-unit>
        <trans-unit id="05003d915ba13fb5621018480e37ff2d17c1e5a5" translate="yes" xml:space="preserve">
          <source>Fills the right side of strings with an arbitrary character. Equivalent to &lt;code&gt;Series.str.pad(side='right')&lt;/code&gt;.</source>
          <target state="translated">用任意字符填充字符串的右侧。等效于 &lt;code&gt;Series.str.pad(side='right')&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4e5b8b3cd17ff18d6b2b9386a1b1dbb0a2f5d05a" translate="yes" xml:space="preserve">
          <source>Fills the specified sides of strings with an arbitrary character.</source>
          <target state="translated">用一个任意字符填充字符串的指定边。</target>
        </trans-unit>
        <trans-unit id="92bdbda9547944933870b63744d2169ce82e2877" translate="yes" xml:space="preserve">
          <source>Filter out data based on the group sum or mean.</source>
          <target state="translated">根据组的总和或平均值筛选出数据。</target>
        </trans-unit>
        <trans-unit id="9075edca21736af901d2add18e4d9491f2452b4d" translate="yes" xml:space="preserve">
          <source>Filtering</source>
          <target state="translated">Filtering</target>
        </trans-unit>
        <trans-unit id="da1af3c6a70664b7e6ab7a3eb382cfa0f8496e18" translate="yes" xml:space="preserve">
          <source>Filtering columns (&lt;code&gt;usecols&lt;/code&gt;)</source>
          <target state="translated">过滤列（ &lt;code&gt;usecols&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="a47ab8dd25aa5491b5bbc68a53a2862ea544de05" translate="yes" xml:space="preserve">
          <source>Filtering columns (usecols)</source>
          <target state="translated">过滤列(usecols)</target>
        </trans-unit>
        <trans-unit id="e24c8deea492863000f12c08bc2a43031bf33c9b" translate="yes" xml:space="preserve">
          <source>Filtering in SAS is done with an &lt;code&gt;if&lt;/code&gt; or &lt;code&gt;where&lt;/code&gt; statement, on one or more columns.</source>
          <target state="translated">SAS中的过滤是通过在一个或多个列上使用 &lt;code&gt;if&lt;/code&gt; 或 &lt;code&gt;where&lt;/code&gt; 语句完成的。</target>
        </trans-unit>
        <trans-unit id="7ceb04aaab45b86e456bdfc93c82ee8e289159f8" translate="yes" xml:space="preserve">
          <source>Filtering in SQL is done via a WHERE clause.</source>
          <target state="translated">SQL中的过滤是通过WHERE子句完成的。</target>
        </trans-unit>
        <trans-unit id="5e5eb30ddec11231f97abc85b225208163f15fac" translate="yes" xml:space="preserve">
          <source>Filtering in Stata is done with an &lt;code&gt;if&lt;/code&gt; clause on one or more columns.</source>
          <target state="translated">使用一个或多个列上的 &lt;code&gt;if&lt;/code&gt; 子句在Stata中进行过滤。</target>
        </trans-unit>
        <trans-unit id="ba995512865f28b893456e50621f593eb7467d9e" translate="yes" xml:space="preserve">
          <source>Filtration</source>
          <target state="translated">Filtration</target>
        </trans-unit>
        <trans-unit id="b87bbcc9bdc114b91d0f24808ac097e2ca40421a" translate="yes" xml:space="preserve">
          <source>Finally, &lt;a href=&quot;../reference/api/pandas.dataframe.apply#pandas.DataFrame.apply&quot;&gt;&lt;code&gt;apply()&lt;/code&gt;&lt;/a&gt; takes an argument &lt;code&gt;raw&lt;/code&gt; which is False by default, which converts each row or column into a Series before applying the function. When set to True, the passed function will instead receive an ndarray object, which has positive performance implications if you do not need the indexing functionality.</source>
          <target state="translated">最后，&lt;a href=&quot;../reference/api/pandas.dataframe.apply#pandas.DataFrame.apply&quot;&gt; &lt;code&gt;apply()&lt;/code&gt; &lt;/a&gt;的参数 &lt;code&gt;raw&lt;/code&gt; 缺省为False，它将在应用函数之前将每一行或每一列转换为Series。当设置为True时，传递的函数将改为接收ndarray对象，如果不需要索引功能，则对性能有积极影响。</target>
        </trans-unit>
        <trans-unit id="5dc208187b90ce718333f5acde9494b691e98374" translate="yes" xml:space="preserve">
          <source>Finally, &lt;a href=&quot;../reference/api/pandas.series.rename#pandas.Series.rename&quot;&gt;&lt;code&gt;rename()&lt;/code&gt;&lt;/a&gt; also accepts a scalar or list-like for altering the &lt;code&gt;Series.name&lt;/code&gt; attribute.</source>
          <target state="translated">最后，&lt;a href=&quot;../reference/api/pandas.series.rename#pandas.Series.rename&quot;&gt; &lt;code&gt;rename()&lt;/code&gt; &lt;/a&gt;还接受标量或类似列表的属性来更改 &lt;code&gt;Series.name&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="438e35bbd0819a6546277d92c231dafcfbc83738" translate="yes" xml:space="preserve">
          <source>Finally, Pandas has arrays that mostly overlap with NumPy</source>
          <target state="translated">最后,Pandas的数组与NumPy的数组大多重合。</target>
        </trans-unit>
        <trans-unit id="264e0b36e24059eef44455ffc6e4194b118e326e" translate="yes" xml:space="preserve">
          <source>Finally, arbitrary objects may be stored using the &lt;code&gt;object&lt;/code&gt; dtype, but should be avoided to the extent possible (for performance and interoperability with other libraries and methods. See &lt;a href=&quot;#basics-object-conversion&quot;&gt;object conversion&lt;/a&gt;).</source>
          <target state="translated">最后，可以使用 &lt;code&gt;object&lt;/code&gt; dtype存储任意对象，但应尽可能避免使用（为了提高性能以及与其他库和方法的互操作性，请参阅&lt;a href=&quot;#basics-object-conversion&quot;&gt;对象转换&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="e315058264895db88de5355ba1090da9b3b66ca2" translate="yes" xml:space="preserve">
          <source>Finally, as a small note on performance, because the &lt;code&gt;take&lt;/code&gt; method handles a narrower range of inputs, it can offer performance that is a good deal faster than fancy indexing.</source>
          <target state="translated">最后，作为性能的一个小注释，因为 &lt;code&gt;take&lt;/code&gt; 方法处理的输入范围较窄，所以它提供的性能比奇特的索引要快得多。</target>
        </trans-unit>
        <trans-unit id="074f531bafa15bb6667d0794076638395257fdec" translate="yes" xml:space="preserve">
          <source>Finally, commit your changes to your local repository with an explanatory message. &lt;em&gt;Pandas&lt;/em&gt; uses a convention for commit message prefixes and layout. Here are some common prefixes along with general guidelines for when to use them:</source>
          <target state="translated">最后，通过一条解释性消息将更改提交到本地存储库。&lt;em&gt;Pandas&lt;/em&gt;使用约定来提交消息前缀和布局。以下是一些常用前缀以及何时使用它们的一般准则：</target>
        </trans-unit>
        <trans-unit id="7a3a2030544dc52fa263a10f8f42aa1943fab2a3" translate="yes" xml:space="preserve">
          <source>Finally, make the pull request</source>
          <target state="translated">最后,提出拉动请求</target>
        </trans-unit>
        <trans-unit id="c55f8ca064057cf200a19007d9d9666c9fba515b" translate="yes" xml:space="preserve">
          <source>Finally, one can also add margins or normalize this output.</source>
          <target state="translated">最后,人们还可以添加页边距或将此输出标准化。</target>
        </trans-unit>
        <trans-unit id="64ddb11fd4bf1b481b4431a731120594f2f960ed" translate="yes" xml:space="preserve">
          <source>Finally, one can also set a seed for &lt;code&gt;sample&lt;/code&gt;&amp;rsquo;s random number generator using the &lt;code&gt;random_state&lt;/code&gt; argument, which will accept either an integer (as a seed) or a NumPy RandomState object.</source>
          <target state="translated">最后，还可以使用 &lt;code&gt;random_state&lt;/code&gt; 参数为 &lt;code&gt;sample&lt;/code&gt; 的随机数生成器设置种子，该种子将接受整数（作为种子）或NumPy RandomState对象。</target>
        </trans-unit>
        <trans-unit id="33c5b02a41a918e027be13f64b63bb5bbc6d912f" translate="yes" xml:space="preserve">
          <source>Finally, the</source>
          <target state="translated">最后,</target>
        </trans-unit>
        <trans-unit id="27fa23c49ed3ebd21d5b1052a32ea64c21623944" translate="yes" xml:space="preserve">
          <source>Finally, the &lt;code&gt;escape&lt;/code&gt; argument allows you to control whether the &amp;ldquo;&amp;lt;&amp;rdquo;, &amp;ldquo;&amp;gt;&amp;rdquo; and &amp;ldquo;&amp;amp;&amp;rdquo; characters escaped in the resulting HTML (by default it is &lt;code&gt;True&lt;/code&gt;). So to get the HTML without escaped characters pass &lt;code&gt;escape=False&lt;/code&gt;</source>
          <target state="translated">最后， &lt;code&gt;escape&lt;/code&gt; 参数允许您控制是否在结果HTML中转义了&amp;ldquo; &amp;lt;&amp;rdquo;，&amp;ldquo;&amp;gt;&amp;rdquo;和&amp;ldquo;＆&amp;rdquo;字符（默认情况下为 &lt;code&gt;True&lt;/code&gt; ）。因此，要获取没有转义字符的HTML，请通过 &lt;code&gt;escape=False&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="921496f8a7db5c07ef7a944cc63cfb57c8926a84" translate="yes" xml:space="preserve">
          <source>Finally, the &lt;code&gt;ind&lt;/code&gt; parameter determines the evaluation points for the plot of the estimated PDF:</source>
          <target state="translated">最后， &lt;code&gt;ind&lt;/code&gt; 参数确定估计的PDF图的评估点：</target>
        </trans-unit>
        <trans-unit id="1e31010aba724179340c4913069038c29972241b" translate="yes" xml:space="preserve">
          <source>Finally, the combination of &lt;code&gt;TimedeltaIndex&lt;/code&gt; with &lt;code&gt;DatetimeIndex&lt;/code&gt; allow certain combination operations that are NaT preserving:</source>
          <target state="translated">最后， &lt;code&gt;TimedeltaIndex&lt;/code&gt; 与 &lt;code&gt;DatetimeIndex&lt;/code&gt; 的组合允许保留NaT的某些组合操作：</target>
        </trans-unit>
        <trans-unit id="9128d56448c5b7e9d9b85e85dcc6a217e0b59284" translate="yes" xml:space="preserve">
          <source>Finally, the input shapes matched. &lt;code&gt;Styler.applymap&lt;/code&gt; calls the function on each scalar input, and the function returns a scalar output.</source>
          <target state="translated">最后，输入形状匹配。 &lt;code&gt;Styler.applymap&lt;/code&gt; 在每个标量输入上调用该函数，并且该函数返回标量输出。</target>
        </trans-unit>
        <trans-unit id="12f54b9b3b005a26c7c2ecc0c6daee2dfcf87447" translate="yes" xml:space="preserve">
          <source>Finally, the parser allows you to specify a custom &lt;code&gt;date_parser&lt;/code&gt; function to take full advantage of the flexibility of the date parsing API:</source>
          <target state="translated">最后，解析器允许您指定自定义 &lt;code&gt;date_parser&lt;/code&gt; 函数，以充分利用日期解析API的灵活性：</target>
        </trans-unit>
        <trans-unit id="cd1aa781f50f23e164927e65d59ce22a68a3edf2" translate="yes" xml:space="preserve">
          <source>Finally, the string alias &lt;code&gt;'Sparse[dtype]'&lt;/code&gt; may be used to specify a sparse dtype in many places</source>
          <target state="translated">最后，字符串别名 &lt;code&gt;'Sparse[dtype]'&lt;/code&gt; 可用于在许多地方指定稀疏dtype</target>
        </trans-unit>
        <trans-unit id="ba35679e402eac43d8224a5f31102d8e499a8f05" translate="yes" xml:space="preserve">
          <source>Finally, there are several &lt;a href=&quot;#visualization-tools&quot;&gt;plotting functions&lt;/a&gt; in &lt;code&gt;pandas.plotting&lt;/code&gt; that take a &lt;a href=&quot;../reference/api/pandas.series#pandas.Series&quot;&gt;&lt;code&gt;Series&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../reference/api/pandas.dataframe#pandas.DataFrame&quot;&gt;&lt;code&gt;DataFrame&lt;/code&gt;&lt;/a&gt; as an argument. These include:</source>
          <target state="translated">最后， &lt;code&gt;pandas.plotting&lt;/code&gt; 中有一些&lt;a href=&quot;#visualization-tools&quot;&gt;绘图函数&lt;/a&gt;，它们以&lt;a href=&quot;../reference/api/pandas.series#pandas.Series&quot;&gt; &lt;code&gt;Series&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../reference/api/pandas.dataframe#pandas.DataFrame&quot;&gt; &lt;code&gt;DataFrame&lt;/code&gt; &lt;/a&gt;作为参数。这些包括：</target>
        </trans-unit>
        <trans-unit id="7a177fd3fdc0105bc609d6b76a9d9bb3bc50eb75" translate="yes" xml:space="preserve">
          <source>Finally, this strategy will work with the other &lt;code&gt;pd.read_*(...)&lt;/code&gt; functions described in the &lt;a href=&quot;io#io&quot;&gt;io docs&lt;/a&gt;.</source>
          <target state="translated">最后，此策略将与&lt;a href=&quot;io#io&quot;&gt;io docs中&lt;/a&gt;描述的其他 &lt;code&gt;pd.read_*(...)&lt;/code&gt; 函数一起使用。</target>
        </trans-unit>
        <trans-unit id="5590c4de9e78bd5ff9604091f19c548b7d153de1" translate="yes" xml:space="preserve">
          <source>Finally, we expect certain styling functions to be common enough that we&amp;rsquo;ve included a few &amp;ldquo;built-in&amp;rdquo; to the &lt;code&gt;Styler&lt;/code&gt;, so you don&amp;rsquo;t have to write them yourself.</source>
          <target state="translated">最后，我们希望某些样式功能足够通用，以至于我们在 &lt;code&gt;Styler&lt;/code&gt; 中包括了一些&amp;ldquo;内置&amp;rdquo;功能，因此您不必自己编写它们。</target>
        </trans-unit>
        <trans-unit id="461e01cebb09ff495c3966513426443f9e44b706" translate="yes" xml:space="preserve">
          <source>Financial analysis in Python, by Thomas Wiecki</source>
          <target state="translated">用Python进行财务分析,Thomas Wiecki著。</target>
        </trans-unit>
        <trans-unit id="43c7f2b66340b9f72da6f9ec397c5d793b7efc1c" translate="yes" xml:space="preserve">
          <source>Find all occurrences of pattern or regular expression in the Series/Index.</source>
          <target state="translated">查找系列/索引中所有模式或正则表达式的出现。</target>
        </trans-unit>
        <trans-unit id="18d914d41d09d92c97e462c896bc6019f8705e89" translate="yes" xml:space="preserve">
          <source>Find indices where elements should be inserted to maintain order.</source>
          <target state="translated">找出应插入元素的索引,以保持顺序。</target>
        </trans-unit>
        <trans-unit id="e30620e483ba6d26d7ecfd6f8ec89e0c35c0173a" translate="yes" xml:space="preserve">
          <source>Find the indices into a sorted Index</source>
          <target state="translated">查找索引到一个排序的索引</target>
        </trans-unit>
        <trans-unit id="6777ff2908c662d8b35b2bcc5a8eff61cbc5d874" translate="yes" xml:space="preserve">
          <source>Find the indices into a sorted Index &lt;code&gt;self&lt;/code&gt; such that, if the corresponding elements in &lt;code&gt;value&lt;/code&gt; were inserted before the indices, the order of &lt;code&gt;self&lt;/code&gt; would be preserved.</source>
          <target state="translated">在已排序的索引 &lt;code&gt;self&lt;/code&gt; 找到索引，这样，如果将 &lt;code&gt;value&lt;/code&gt; 中的相应元素插入到索引之前，则将保留 &lt;code&gt;self&lt;/code&gt; 的顺序。</target>
        </trans-unit>
        <trans-unit id="d6b6454cea2b0b1249b955dfb60fef8f47683f20" translate="yes" xml:space="preserve">
          <source>Find the indices into a sorted Series</source>
          <target state="translated">在排序后的系列中查找指数</target>
        </trans-unit>
        <trans-unit id="4aa6ebd8fbaddbd5838a4bb02aa91f7c9b8903dc" translate="yes" xml:space="preserve">
          <source>Find the indices into a sorted Series &lt;code&gt;self&lt;/code&gt; such that, if the corresponding elements in &lt;code&gt;value&lt;/code&gt; were inserted before the indices, the order of &lt;code&gt;self&lt;/code&gt; would be preserved.</source>
          <target state="translated">将索引查找到排序后的Series &lt;code&gt;self&lt;/code&gt; 中,这样，如果将相应的 &lt;code&gt;value&lt;/code&gt; 元素插入到index之前，则会保留 &lt;code&gt;self&lt;/code&gt; 的顺序。</target>
        </trans-unit>
        <trans-unit id="947c1baad68b85d33786979f083cccc1ae161347" translate="yes" xml:space="preserve">
          <source>Find the indices into a sorted array</source>
          <target state="translated">查找排序数组中的索引</target>
        </trans-unit>
        <trans-unit id="716dfeeb0123c5721590db33ec916189d656c0ff" translate="yes" xml:space="preserve">
          <source>Find the indices into a sorted array &lt;code&gt;self&lt;/code&gt; (a) such that, if the corresponding elements in &lt;code&gt;value&lt;/code&gt; were inserted before the indices, the order of &lt;code&gt;self&lt;/code&gt; would be preserved.</source>
          <target state="translated">将索引找到到已排序的数组 &lt;code&gt;self&lt;/code&gt; （a）中，这样，如果将 &lt;code&gt;value&lt;/code&gt; 中的相应元素插入到索引之前，就会保留 &lt;code&gt;self&lt;/code&gt; 的顺序。</target>
        </trans-unit>
        <trans-unit id="e7b76997622a184c319f0f4883cd439078e1c8b3" translate="yes" xml:space="preserve">
          <source>Find the locations (indices) of the labels from the index for every entry in the &lt;code&gt;where&lt;/code&gt; argument.</source>
          <target state="translated">从索引中为 &lt;code&gt;where&lt;/code&gt; 参数中的每个条目查找标签的位置（索引）。</target>
        </trans-unit>
        <trans-unit id="517a7893ed2a96fe5193cf1a0eb7e6e9f21aa5c8" translate="yes" xml:space="preserve">
          <source>Find the unique value in an array.</source>
          <target state="translated">找出数组中的唯一值。</target>
        </trans-unit>
        <trans-unit id="bb9ce9325a8828ae6caeb2fdb3fe7c3703913154" translate="yes" xml:space="preserve">
          <source>Finer Control: Display Values</source>
          <target state="translated">更精细的控制。显示值</target>
        </trans-unit>
        <trans-unit id="71a6e6a60e22fb8666833e481ab865cee9d2db5a" translate="yes" xml:space="preserve">
          <source>Finer control: slicing</source>
          <target state="translated">更精细的控制:切片</target>
        </trans-unit>
        <trans-unit id="b74bdee9c34f37b6b9b0d20a8ca8a9bf6797f6e1" translate="yes" xml:space="preserve">
          <source>Finish</source>
          <target state="translated">Finish</target>
        </trans-unit>
        <trans-unit id="8527da08fc06bc9a94667e594a3fbac56fdfd9fb" translate="yes" xml:space="preserve">
          <source>First DataFrame to compare.</source>
          <target state="translated">第一个要比较的DataFrame。</target>
        </trans-unit>
        <trans-unit id="cf3c09cc589a3fe214655be233df3ffc15dc338e" translate="yes" xml:space="preserve">
          <source>First differences of the Series.</source>
          <target state="translated">系列的第一个差异。</target>
        </trans-unit>
        <trans-unit id="cc8761f1ada728e18a7ee585c85d0cb9a47387bd" translate="yes" xml:space="preserve">
          <source>First discrete difference for a Series.</source>
          <target state="translated">系列的第一次离散差。</target>
        </trans-unit>
        <trans-unit id="682b4cf0861faa16a4ac787fd346894847d9b0d2" translate="yes" xml:space="preserve">
          <source>First discrete difference of element.</source>
          <target state="translated">元素的第一次离散差异。</target>
        </trans-unit>
        <trans-unit id="457429c2078f20369b179701540ca68b6ea144e4" translate="yes" xml:space="preserve">
          <source>First discrete difference of object.</source>
          <target state="translated">对象的第一次离散差异。</target>
        </trans-unit>
        <trans-unit id="a1105d718a6f7fb0bb3a2d17c942d8d1d3df3280" translate="yes" xml:space="preserve">
          <source>First let&amp;rsquo;s create a few decent-sized arrays to play with:</source>
          <target state="translated">首先，让我们创建一些像样的数组来玩：</target>
        </trans-unit>
        <trans-unit id="df437b3e25df298d58bd8402e83550074ea9777a" translate="yes" xml:space="preserve">
          <source>First level of index to be swapped. Can pass level name as string. Type of parameters can be mixed.</source>
          <target state="translated">要交换的第一层索引。可以传递级别名称为字符串。参数类型可以混合。</target>
        </trans-unit>
        <trans-unit id="c605e6eb57ef134dfbf7f99647bb37b571e192ff" translate="yes" xml:space="preserve">
          <source>First some setup:</source>
          <target state="translated">首先是一些设置。</target>
        </trans-unit>
        <trans-unit id="5edd2a3124b74c24600512185419ac19a7013408" translate="yes" xml:space="preserve">
          <source>First we&amp;rsquo;re going to need to import the Cython magic function to IPython:</source>
          <target state="translated">首先，我们需要将Cython魔术函数导入IPython：</target>
        </trans-unit>
        <trans-unit id="86829af109eeb1096386b337d9177676af1fb4a1" translate="yes" xml:space="preserve">
          <source>First we&amp;rsquo;re going to need to import the Cython magic function to ipython:</source>
          <target state="translated">首先，我们需要将Cython魔术函数导入ipython：</target>
        </trans-unit>
        <trans-unit id="1202c2eab1bf3d61d38baddda864a5fd6c924cd8" translate="yes" xml:space="preserve">
          <source>First you will need &lt;a href=&quot;http://conda.pydata.org/docs/&quot;&gt;Conda&lt;/a&gt; to be installed and downloading and running the &lt;a href=&quot;http://conda.pydata.org/miniconda.html&quot;&gt;Miniconda&lt;/a&gt; will do this for you. The installer &lt;a href=&quot;http://conda.pydata.org/miniconda.html&quot;&gt;can be found here&lt;/a&gt;</source>
          <target state="translated">首先，您需要安装&lt;a href=&quot;http://conda.pydata.org/docs/&quot;&gt;Conda&lt;/a&gt;，然后下载并运行&lt;a href=&quot;http://conda.pydata.org/miniconda.html&quot;&gt;Miniconda&lt;/a&gt;将为您完成此任务。&lt;a href=&quot;http://conda.pydata.org/miniconda.html&quot;&gt;可以在这里找到&lt;/a&gt;安装程序</target>
        </trans-unit>
        <trans-unit id="e870e97435bbfd7c4b54ed2489fc4d8538372cf3" translate="yes" xml:space="preserve">
          <source>First, if</source>
          <target state="translated">首先,如果</target>
        </trans-unit>
        <trans-unit id="50022a74ee1f6e5c624643417ead03bbbbc7d9b0" translate="yes" xml:space="preserve">
          <source>First, if &lt;code&gt;to_replace&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt; are both lists, they &lt;strong&gt;must&lt;/strong&gt; be the same length.</source>
          <target state="translated">首先，如果 &lt;code&gt;to_replace&lt;/code&gt; 和 &lt;code&gt;value&lt;/code&gt; 都是列表，则它们的长度&lt;strong&gt;必须&lt;/strong&gt;相同。</target>
        </trans-unit>
        <trans-unit id="5bde2018e88f23e5d556a11f4266a70473c45311" translate="yes" xml:space="preserve">
          <source>First, let&amp;rsquo;s create a &lt;a href=&quot;../reference/api/pandas.dataframe#pandas.DataFrame&quot;&gt;&lt;code&gt;DataFrame&lt;/code&gt;&lt;/a&gt; with a slew of different dtypes:</source>
          <target state="translated">首先，让我们创建一个&lt;a href=&quot;../reference/api/pandas.dataframe#pandas.DataFrame&quot;&gt; &lt;code&gt;DataFrame&lt;/code&gt; &lt;/a&gt;不同dtypes的转换：</target>
        </trans-unit>
        <trans-unit id="b043a0b10b92a4156dd017939831dc8b187e8858" translate="yes" xml:space="preserve">
          <source>First, you need to have a development environment to be able to build pandas (see the docs on &lt;a href=&quot;#contributing-dev-env&quot;&gt;creating a development environment above&lt;/a&gt;).</source>
          <target state="translated">首先，您需要具有一个开发环境才能构建熊猫（请参阅上面的有关&lt;a href=&quot;#contributing-dev-env&quot;&gt;创建开发环境&lt;/a&gt;的文档）。</target>
        </trans-unit>
        <trans-unit id="6f4b61624a356e1d2a6d854c09b3e6ab5a6038cd" translate="yes" xml:space="preserve">
          <source>Fiscal year the Period lies in according to its starting-quarter.</source>
          <target state="translated">根据其起始季度,该时期所在的财政年度。</target>
        </trans-unit>
        <trans-unit id="a921a07410d343d8af5d9edc4954e39ceb63a08f" translate="yes" xml:space="preserve">
          <source>Fixed format</source>
          <target state="translated">固定格式</target>
        </trans-unit>
        <trans-unit id="a3a2293595d64a9075a54da78eadb9c323aa1782" translate="yes" xml:space="preserve">
          <source>Fixed format. Fast writing/reading. Not-appendable, nor searchable.</source>
          <target state="translated">固定格式。快速书写/阅读。不可附加,也不可搜索。</target>
        </trans-unit>
        <trans-unit id="096429582412b5dd03edcf30fb0fba792136ba19" translate="yes" xml:space="preserve">
          <source>Fixed-Width Text File</source>
          <target state="translated">固定宽度的文本文件</target>
        </trans-unit>
        <trans-unit id="58a760bff0046a4aa7f02ffceb04f7cca96f1c46" translate="yes" xml:space="preserve">
          <source>Flag indicating whether converted categorical data are ordered.</source>
          <target state="translated">表示转换后的分类数据是否有序的标志。</target>
        </trans-unit>
        <trans-unit id="9f95c149c4faaec5888d99c7f71ec74e2531b4c8" translate="yes" xml:space="preserve">
          <source>Flag indicating whether to convert missing values to their Stata representations. If False, missing values are replaced with nan. If True, columns containing missing values are returned with object data types and missing values are represented by StataMissingValue objects.</source>
          <target state="translated">表示是否将缺失值转换为Stata表示的标志。如果为False,缺失值用nan代替。如果为True,包含缺失值的列将以对象数据类型返回,缺失值由StataMissingValue对象表示。</target>
        </trans-unit>
        <trans-unit id="662a77030cc9860bb52adc75ba74b37ca13f8b74" translate="yes" xml:space="preserve">
          <source>Flag to ignore nan values during truth testing</source>
          <target state="translated">在真理测试中忽略nan值的标志</target>
        </trans-unit>
        <trans-unit id="c6f1432abac99bfba1ef88a26345c9f393063ebf" translate="yes" xml:space="preserve">
          <source>Flag to ignore nan values during truth testing.</source>
          <target state="translated">标志着在真理测试期间忽略nan值。</target>
        </trans-unit>
        <trans-unit id="5d728758adcdd5154d3be55552c1c061ef1489b2" translate="yes" xml:space="preserve">
          <source>Flags</source>
          <target state="translated">Flags</target>
        </trans-unit>
        <trans-unit id="7a792d280d5985b9aba1e46b641e583758229d62" translate="yes" xml:space="preserve">
          <source>Flags can be added to the pattern or regular expression. For instance, to find the pattern &amp;lsquo;MONKEY&amp;rsquo; ignoring the case:</source>
          <target state="translated">可以将标志添加到模式或正则表达式。例如，忽略大小写找到模式&amp;ldquo; MONKEY&amp;rdquo;：</target>
        </trans-unit>
        <trans-unit id="f81ce345a6136ee346ca93fc27e28c7f4ec3dfd8" translate="yes" xml:space="preserve">
          <source>Flags can be get or set using &lt;code&gt;.&lt;/code&gt;</source>
          <target state="translated">可以使用获取或设置标志 &lt;code&gt;.&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="32bf6637987ad863cda20b0727c09937149d4b27" translate="yes" xml:space="preserve">
          <source>Flags for the</source>
          <target state="translated">旗帜</target>
        </trans-unit>
        <trans-unit id="83c97a15e4943a077a1e1220e7137d2a81e85162" translate="yes" xml:space="preserve">
          <source>Flags for the &lt;code&gt;re&lt;/code&gt; module. For a complete list, &lt;a href=&quot;https://docs.python.org/3/howto/regex.html#compilation-flags&quot;&gt;see here&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;re&lt;/code&gt; 模块的标志。有关完整列表，&lt;a href=&quot;https://docs.python.org/3/howto/regex.html#compilation-flags&quot;&gt;请参见此处&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="432577bb2b22d5a9ee85382b4c6b054e1979f7e5" translate="yes" xml:space="preserve">
          <source>Flags from &lt;code&gt;re&lt;/code&gt; module, e.g.</source>
          <target state="translated">来自 &lt;code&gt;re&lt;/code&gt; 模块的标志，例如</target>
        </trans-unit>
        <trans-unit id="585436554646f7f4eacd66bdc3e594d3d286d018" translate="yes" xml:space="preserve">
          <source>Flags from &lt;code&gt;re&lt;/code&gt; module, e.g. &lt;code&gt;re.IGNORECASE&lt;/code&gt; (default is 0, which means no flags).</source>
          <target state="translated">来自 &lt;code&gt;re&lt;/code&gt; 模块的标志，例如 &lt;code&gt;re.IGNORECASE&lt;/code&gt; （默认为0，表示没有标志）。</target>
        </trans-unit>
        <trans-unit id="515107780eabce305acf354719927312071b81a1" translate="yes" xml:space="preserve">
          <source>Flags from the &lt;code&gt;re&lt;/code&gt; module, e.g. &lt;code&gt;re.IGNORECASE&lt;/code&gt;, that modify regular expression matching for things like case, spaces, etc. For more details, see &lt;a href=&quot;https://docs.python.org/3/library/re.html#module-re&quot;&gt;&lt;code&gt;re&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">来自 &lt;code&gt;re&lt;/code&gt; 模块的标志，例如 &lt;code&gt;re.IGNORECASE&lt;/code&gt; ，它为诸如大小写，空格等修改正则表达式匹配。有关更多详细信息，请参见&lt;a href=&quot;https://docs.python.org/3/library/re.html#module-re&quot;&gt; &lt;code&gt;re&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dcfae77bce37f455c591d98d47644be09b6c0eb9" translate="yes" xml:space="preserve">
          <source>Flags refer to attributes of the pandas object. Properties of the dataset (like the date is was recorded, the URL it was accessed from, etc.) should be stored in &lt;a href=&quot;api/pandas.dataframe.attrs#pandas.DataFrame.attrs&quot;&gt;&lt;code&gt;DataFrame.attrs&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">标志指的是熊猫对象的属性。数据集的属性（例如记录日期，访问数据的URL等）应存储在&lt;a href=&quot;api/pandas.dataframe.attrs#pandas.DataFrame.attrs&quot;&gt; &lt;code&gt;DataFrame.attrs&lt;/code&gt; 中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="45fbe0214264fb4b3fb9a64291506455d2cc6ac7" translate="yes" xml:space="preserve">
          <source>Flags refer to attributes of the pandas object. Properties of the dataset (like the date is was recorded, the URL it was accessed from, etc.) should be stored in &lt;a href=&quot;api/pandas.series.attrs#pandas.Series.attrs&quot;&gt;&lt;code&gt;Series.attrs&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">标志指的是熊猫对象的属性。数据集的属性（例如记录日期，访问数据的URL等）应存储在&lt;a href=&quot;api/pandas.series.attrs#pandas.Series.attrs&quot;&gt; &lt;code&gt;Series.attrs&lt;/code&gt; 中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a8051e3208891a231c29a0e104f1e90ec4adb9ea" translate="yes" xml:space="preserve">
          <source>Flags that apply to pandas objects.</source>
          <target state="translated">适用于pandas对象的标志。</target>
        </trans-unit>
        <trans-unit id="2d0543b37c8d9a7d6d7ae7b9c672da227d0ebd09" translate="yes" xml:space="preserve">
          <source>Flags to pass through to the re module, e.g. re.IGNORECASE.</source>
          <target state="translated">要传递给re模块的标志,例如re.IGNORECASE。</target>
        </trans-unit>
        <trans-unit id="50a90b005f85eea45da97271e0e67906807ec326" translate="yes" xml:space="preserve">
          <source>Flat file</source>
          <target state="translated">扁平文件</target>
        </trans-unit>
        <trans-unit id="89921b5e6fd8ba462fb65161fd0d92b815e1763c" translate="yes" xml:space="preserve">
          <source>Flatten Hierarchical columns</source>
          <target state="translated">扁平化层级列</target>
        </trans-unit>
        <trans-unit id="6604e7feff8b1c565f2050463260cfbad88bc664" translate="yes" xml:space="preserve">
          <source>Flattened array.</source>
          <target state="translated">扁平化阵列。</target>
        </trans-unit>
        <trans-unit id="6b8321e71ad02696b00c9740d5199653e2fe2cef" translate="yes" xml:space="preserve">
          <source>Flattened data of the Series.</source>
          <target state="translated">扁平化数据的系列。</target>
        </trans-unit>
        <trans-unit id="3ecb3394bc21b2c28a924bfb2ceb7ce3b4d4c89b" translate="yes" xml:space="preserve">
          <source>Flexible &lt;code&gt;apply&lt;/code&gt;</source>
          <target state="translated">灵活 &lt;code&gt;apply&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4dced8a2e2a4243ea94ec16f6aeac7e5e147302d" translate="yes" xml:space="preserve">
          <source>Flexible &lt;strong&gt;reshaping&lt;/strong&gt; and pivoting of data sets</source>
          <target state="translated">灵活地&lt;strong&gt;重塑&lt;/strong&gt;和旋转数据集</target>
        </trans-unit>
        <trans-unit id="592e2cd03ef0079de8be45e2ddd7d5de0cfd60a5" translate="yes" xml:space="preserve">
          <source>Flexible apply</source>
          <target state="translated">灵活应用</target>
        </trans-unit>
        <trans-unit id="df5806c6267d9b68d3103f1763eb955966fe3ab4" translate="yes" xml:space="preserve">
          <source>Flexible binary operations</source>
          <target state="translated">灵活的二进制操作</target>
        </trans-unit>
        <trans-unit id="a962b0d0790e6a702e910629104b3ccecaddc371" translate="yes" xml:space="preserve">
          <source>Flexible comparisons</source>
          <target state="translated">灵活的比较</target>
        </trans-unit>
        <trans-unit id="46b6264f81b90b7bece4c321b647a9b3f7639f96" translate="yes" xml:space="preserve">
          <source>Float64Index</source>
          <target state="translated">Float64Index</target>
        </trans-unit>
        <trans-unit id="3cd6667377c655b03847b3669898276edf87d560" translate="yes" xml:space="preserve">
          <source>Float64Index[source]</source>
          <target state="translated">Float64Index[source]</target>
        </trans-unit>
        <trans-unit id="0ff90825ac199f78375793c24aad512313a0021c" translate="yes" xml:space="preserve">
          <source>Floating point output precision in terms of number of places after the decimal, for regular formatting as well as scientific notation. Similar to &lt;code&gt;precision&lt;/code&gt; in &lt;code&gt;numpy.set_printoptions()&lt;/code&gt;. [default: 6] [currently: 6]</source>
          <target state="translated">浮点输出精度，以小数点后的位数表示，适用于常规格式以及科学计数法。类似 &lt;code&gt;precision&lt;/code&gt; 在 &lt;code&gt;numpy.set_printoptions()&lt;/code&gt; 。[默认值：6] [当前：6]</target>
        </trans-unit>
        <trans-unit id="e2282e1bead14d64d42d3dceedcd3f4eff4f5b8b" translate="yes" xml:space="preserve">
          <source>Floating point output precision in terms of number of places after the decimal, for regular formatting as well as scientific notation. Similar to numpy&amp;rsquo;s &lt;code&gt;precision&lt;/code&gt; print option</source>
          <target state="translated">浮点输出精度，以小数点后的位数表示，适用于常规格式以及科学计数法。类似于numpy的 &lt;code&gt;precision&lt;/code&gt; 打印选项</target>
        </trans-unit>
        <trans-unit id="6eec942e32d846e2fa7809236a660b9a8999826a" translate="yes" xml:space="preserve">
          <source>Floats: &lt;code&gt;'float16', 'float32', 'float64'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;'float16', 'float32', 'float64'&lt;/code&gt; ：&amp;ldquo; float16&amp;rdquo;，&amp;ldquo; float32&amp;rdquo;，&amp;ldquo; float64&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="7ebc44dc921c7e582f09164853c5caec040b7656" translate="yes" xml:space="preserve">
          <source>Floor the DatetimeIndex to the specified freq.</source>
          <target state="translated">将DatetimeIndex下限到指定的频率。</target>
        </trans-unit>
        <trans-unit id="d0059e1678d97210e084e848c2fa9149e58d0335" translate="yes" xml:space="preserve">
          <source>Floor the datetimes to the specified freq.</source>
          <target state="translated">将日期时间下限到指定的频率。</target>
        </trans-unit>
        <trans-unit id="b6ba0db1f814179114ec82fbf188b2eb5be2596e" translate="yes" xml:space="preserve">
          <source>Fold</source>
          <target state="translated">Fold</target>
        </trans-unit>
        <trans-unit id="8ad886bee58cb0e2df6198bed9df97c140aef480" translate="yes" xml:space="preserve">
          <source>Following table shows how &lt;code&gt;pandas&lt;/code&gt; data structures define constructor properties by default.</source>
          <target state="translated">下表显示了 &lt;code&gt;pandas&lt;/code&gt; 数据结构默认情况下如何定义构造函数属性。</target>
        </trans-unit>
        <trans-unit id="fd5d231e67319578d1a3c4c2e247df09cf9457a6" translate="yes" xml:space="preserve">
          <source>Following this naming convention isn&amp;rsquo;t strictly necessary, but strongly suggested for compatibility with Arrow.</source>
          <target state="translated">严格遵循此命名约定不是必需的，但强烈建议您遵循与Arrow的兼容性。</target>
        </trans-unit>
        <trans-unit id="41148d5ccad00f168e223acb6c377f90966dbedf" translate="yes" xml:space="preserve">
          <source>Follows Python list.append semantics for negative values.</source>
          <target state="translated">遵循Python list.append语义来处理负值。</target>
        </trans-unit>
        <trans-unit id="1c2807ca390019a864532a70bcdb665175f9740c" translate="yes" xml:space="preserve">
          <source>Font size for xticks and yticks.</source>
          <target state="translated">xticks和yticks的字体大小。</target>
        </trans-unit>
        <trans-unit id="f7880600348a091a43e2a84906d6002820643108" translate="yes" xml:space="preserve">
          <source>For</source>
          <target state="translated">For</target>
        </trans-unit>
        <trans-unit id="8b19e1de4cda57356fd0e9491c03c399045a6308" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;../reference/api/pandas.multiindex#pandas.MultiIndex&quot;&gt;&lt;code&gt;MultiIndex&lt;/code&gt;&lt;/a&gt;-ed objects to be indexed and sliced effectively, they need to be sorted. As with any index, you can use &lt;a href=&quot;../reference/api/pandas.dataframe.sort_index#pandas.DataFrame.sort_index&quot;&gt;&lt;code&gt;sort_index()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">为了有效索引和切片&lt;a href=&quot;../reference/api/pandas.multiindex#pandas.MultiIndex&quot;&gt; &lt;code&gt;MultiIndex&lt;/code&gt; &lt;/a&gt;对象，需要对它们进行排序。与任何索引一样，您可以使用&lt;a href=&quot;../reference/api/pandas.dataframe.sort_index#pandas.DataFrame.sort_index&quot;&gt; &lt;code&gt;sort_index()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4a2a4b82e2fed58f699c6191ef2108148460f22f" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;'cython'&lt;/code&gt; engine, there are no accepted &lt;code&gt;engine_kwargs&lt;/code&gt;</source>
          <target state="translated">对于 &lt;code&gt;'cython'&lt;/code&gt; 引擎，没有可接受的 &lt;code&gt;engine_kwargs&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="38c7248434584d02538a075ee040ab4ddd608656" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;'numba'&lt;/code&gt; engine, the engine can accept &lt;code&gt;nopython&lt;/code&gt;, &lt;code&gt;nogil&lt;/code&gt; and &lt;code&gt;parallel&lt;/code&gt; dictionary keys. The values must either be &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt;. The default &lt;code&gt;engine_kwargs&lt;/code&gt; for the &lt;code&gt;'numba'&lt;/code&gt; engine is &lt;code&gt;{'nopython': True, 'nogil': False, 'parallel': False}&lt;/code&gt; and will be applied to both the &lt;code&gt;func&lt;/code&gt; and the &lt;code&gt;apply&lt;/code&gt; rolling aggregation.</source>
          <target state="translated">对于 &lt;code&gt;'numba'&lt;/code&gt; 引擎，该引擎可以接受 &lt;code&gt;nopython&lt;/code&gt; ， &lt;code&gt;nogil&lt;/code&gt; 和 &lt;code&gt;parallel&lt;/code&gt; 字典键。值必须为 &lt;code&gt;True&lt;/code&gt; 或 &lt;code&gt;False&lt;/code&gt; 。默认 &lt;code&gt;engine_kwargs&lt;/code&gt; 为 &lt;code&gt;'numba'&lt;/code&gt; 引擎 &lt;code&gt;{'nopython': True, 'nogil': False, 'parallel': False}&lt;/code&gt; ，将被应用到两个 &lt;code&gt;func&lt;/code&gt; 和 &lt;code&gt;apply&lt;/code&gt; 滚动聚集。</target>
        </trans-unit>
        <trans-unit id="5a6e7e218bd118587d42e1c8ad4d844c1b22d85e" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;'numba'&lt;/code&gt; engine, the engine can accept &lt;code&gt;nopython&lt;/code&gt;, &lt;code&gt;nogil&lt;/code&gt; and &lt;code&gt;parallel&lt;/code&gt; dictionary keys. The values must either be &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt;. The default &lt;code&gt;engine_kwargs&lt;/code&gt; for the &lt;code&gt;'numba'&lt;/code&gt; engine is &lt;code&gt;{'nopython': True, 'nogil': False, 'parallel': False}&lt;/code&gt; and will be applied to the function</source>
          <target state="translated">对于 &lt;code&gt;'numba'&lt;/code&gt; 引擎，该引擎可以接受 &lt;code&gt;nopython&lt;/code&gt; ， &lt;code&gt;nogil&lt;/code&gt; 和 &lt;code&gt;parallel&lt;/code&gt; 字典键。值必须为 &lt;code&gt;True&lt;/code&gt; 或 &lt;code&gt;False&lt;/code&gt; 。 &lt;code&gt;'numba'&lt;/code&gt; 引擎的默认 &lt;code&gt;engine_kwargs&lt;/code&gt; 为 &lt;code&gt;{'nopython': True, 'nogil': False, 'parallel': False}&lt;/code&gt; ，并将应用于该函数</target>
        </trans-unit>
        <trans-unit id="9ecbbe90abea3befc6b730ae5340125aa55961ad" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;DataFrame&lt;/code&gt; objects which don&amp;rsquo;t have a meaningful index, you may wish to append them and ignore the fact that they may have overlapping indexes. To do this, use the &lt;code&gt;ignore_index&lt;/code&gt; argument:</source>
          <target state="translated">对于没有有意义索引的 &lt;code&gt;DataFrame&lt;/code&gt; 对象，您可能希望追加它们，而忽略它们可能具有重叠索引的事实。为此，请使用 &lt;code&gt;ignore_index&lt;/code&gt; 参数：</target>
        </trans-unit>
        <trans-unit id="1ad0cef1babda381b5f8503fa7264f9101ca8626" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;DataFrame&lt;/code&gt; objects, a string indicating a column to be used to group. Of course &lt;code&gt;df.groupby('A')&lt;/code&gt; is just syntactic sugar for &lt;code&gt;df.groupby(df['A'])&lt;/code&gt;, but it makes life simpler.</source>
          <target state="translated">对于 &lt;code&gt;DataFrame&lt;/code&gt; 对象，一个字符串，指示要用于分组的列。当然 &lt;code&gt;df.groupby('A')&lt;/code&gt; 只是 &lt;code&gt;df.groupby(df['A'])&lt;/code&gt; 语法糖，但它使生活变得更简单。</target>
        </trans-unit>
        <trans-unit id="7a72f46c3ee1715da977723aeb661f40da9944a1" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;DataFrame&lt;/code&gt; objects, a string indicating an index level to be used to group.</source>
          <target state="translated">对于 &lt;code&gt;DataFrame&lt;/code&gt; 对象，一个字符串，指示要用于分组的索引级别。</target>
        </trans-unit>
        <trans-unit id="969f496bd7921cbd52b49d76ab713f39bb39022e" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;DataFrame&lt;/code&gt; objects, a string indicating either a column name or an index level name to be used to group.</source>
          <target state="translated">对于 &lt;code&gt;DataFrame&lt;/code&gt; 对象，该字符串指示用于分组的列名称或索引级别名称。</target>
        </trans-unit>
        <trans-unit id="ffe73efb236ce9e3f0cfeceff72c6a2abea67a3f" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;DataFrames&lt;/code&gt;, likewise, &lt;code&gt;in&lt;/code&gt; applies to the column axis, testing for membership in the list of column names.</source>
          <target state="translated">同样，对于 &lt;code&gt;DataFrames&lt;/code&gt; ， &lt;code&gt;in&lt;/code&gt; 适用于列轴，测试列名称列表中的成员资格。</target>
        </trans-unit>
        <trans-unit id="9984200f780463c79a64f7c0606e7db30a20a03d" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;DataFrames&lt;/code&gt;, the stringified version of the column name is used</source>
          <target state="translated">对于 &lt;code&gt;DataFrames&lt;/code&gt; ，使用列名的字符串化版本</target>
        </trans-unit>
        <trans-unit id="cfc57f27ea09f1423e255ab9d0bbbf0bde6bf0ec" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;Index&lt;/code&gt; (not &lt;code&gt;MultiIndex&lt;/code&gt;), &lt;code&gt;index.name&lt;/code&gt; is used, with a fallback to &lt;code&gt;index&lt;/code&gt; if that is None.</source>
          <target state="translated">对于 &lt;code&gt;Index&lt;/code&gt; （不是 &lt;code&gt;MultiIndex&lt;/code&gt; ），使用 &lt;code&gt;index.name&lt;/code&gt; ，如果 &lt;code&gt;index&lt;/code&gt; 为None，则回退到index。</target>
        </trans-unit>
        <trans-unit id="70fe8260581c909fadf2b4845f8627f71b1b1198" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;MultiIndex&lt;/code&gt;, &lt;code&gt;mi.names&lt;/code&gt; is used. If any level has no name, then &lt;code&gt;level_&amp;lt;i&amp;gt;&lt;/code&gt; is used.</source>
          <target state="translated">对于 &lt;code&gt;MultiIndex&lt;/code&gt; ，使用 &lt;code&gt;mi.names&lt;/code&gt; 。如果任何级别没有名称，则使用 &lt;code&gt;level_&amp;lt;i&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9acd5abc7b9bd7dd1d488b166bb1139f12f68ace" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;PeriodIndex&lt;/code&gt; only, controls whether to use the start or end of &lt;code&gt;rule&lt;/code&gt;.</source>
          <target state="translated">仅对于 &lt;code&gt;PeriodIndex&lt;/code&gt; ，控制是否使用 &lt;code&gt;rule&lt;/code&gt; 的开始或结束。</target>
        </trans-unit>
        <trans-unit id="01e82820bab46ab1b92b92728e00a794620b065e" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;Series&lt;/code&gt; and &lt;code&gt;DataFrame&lt;/code&gt; objects, &lt;a href=&quot;../reference/api/pandas.dataframe.var#pandas.DataFrame.var&quot;&gt;&lt;code&gt;var()&lt;/code&gt;&lt;/a&gt; normalizes by &lt;code&gt;N-1&lt;/code&gt; to produce unbiased estimates of the sample variance, while NumPy&amp;rsquo;s &lt;code&gt;var&lt;/code&gt; normalizes by N, which measures the variance of the sample. Note that &lt;a href=&quot;../reference/api/pandas.dataframe.cov#pandas.DataFrame.cov&quot;&gt;&lt;code&gt;cov()&lt;/code&gt;&lt;/a&gt; normalizes by &lt;code&gt;N-1&lt;/code&gt; in both pandas and NumPy.</source>
          <target state="translated">对于 &lt;code&gt;Series&lt;/code&gt; 和 &lt;code&gt;DataFrame&lt;/code&gt; 对象，&lt;a href=&quot;../reference/api/pandas.dataframe.var#pandas.DataFrame.var&quot;&gt; &lt;code&gt;var()&lt;/code&gt; &lt;/a&gt;通过 &lt;code&gt;N-1&lt;/code&gt; 进行归一化以产生样本方差的无偏估计，而NumPy的 &lt;code&gt;var&lt;/code&gt; 通过N进行归一化，N用于衡量样本的方差。请注意，在熊猫和NumPy中，&lt;a href=&quot;../reference/api/pandas.dataframe.cov#pandas.DataFrame.cov&quot;&gt; &lt;code&gt;cov()&lt;/code&gt; &lt;/a&gt;均由 &lt;code&gt;N-1&lt;/code&gt; 归一化。</target>
        </trans-unit>
        <trans-unit id="c2158ff4cbb8118296adef253fb6732155c2715b" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;StringDtype&lt;/code&gt;, &lt;a href=&quot;../reference/series#api-series-str&quot;&gt;string accessor methods&lt;/a&gt; that return &lt;strong&gt;numeric&lt;/strong&gt; output will always return a nullable integer dtype, rather than either int or float dtype, depending on the presence of NA values. Methods returning &lt;strong&gt;boolean&lt;/strong&gt; output will return a nullable boolean dtype.</source>
          <target state="translated">对于 &lt;code&gt;StringDtype&lt;/code&gt; ，返回&lt;strong&gt;数值&lt;/strong&gt;输出的&lt;a href=&quot;../reference/series#api-series-str&quot;&gt;字符串访问器方法&lt;/a&gt;将始终返回可为空的整数dtype，而不是int或float dtype，这取决于NA值的存在。返回&lt;strong&gt;布尔&lt;/strong&gt;输出的方法将返回可为null的布尔dtype。&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="59c976e6e4b25103c60d93dfbad500ca5a068cf5" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;Styler.apply&lt;/code&gt; your function should take a Series or DataFrame (depending on the axis parameter), and return a Series or DataFrame with an identical shape where each value is a string with a CSS attribute-value pair.</source>
          <target state="translated">对于 &lt;code&gt;Styler.apply&lt;/code&gt; ,您的函数应采用Series或DataFrame（取决于axis参数），并返回具有相同形状的Series或DataFrame，其中每个值都是带有CSS属性值对的字符串。</target>
        </trans-unit>
        <trans-unit id="92339953f496b23ea822e700f216e9425cad8c74" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;Styler.applymap&lt;/code&gt; your function should take a scalar and return a single string with the CSS attribute-value pair.</source>
          <target state="translated">对于 &lt;code&gt;Styler.applymap&lt;/code&gt; ,您的函数应采用标量并返回带有CSS属性-值对的单个字符串。</target>
        </trans-unit>
        <trans-unit id="63191dcfce3b8b6e25642ded988ccc2599ce21d9" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;complex&lt;/code&gt; inputs, &lt;code&gt;1.2 + 1j&lt;/code&gt;, the absolute value is \(\sqrt{ a^2 + b^2 }\).</source>
          <target state="translated">对于 &lt;code&gt;complex&lt;/code&gt; 输入 &lt;code&gt;1.2 + 1j&lt;/code&gt; ，绝对值为\（\ sqrt {a ^ 2 + b ^ 2} \）。</target>
        </trans-unit>
        <trans-unit id="70debc113e01c43ddacf9e08578f152095caf5af" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;df2&lt;/code&gt;, the &lt;a href=&quot;../reference/api/pandas.dataframe#pandas.DataFrame&quot;&gt;&lt;code&gt;DataFrame&lt;/code&gt;&lt;/a&gt; with multiple dtypes, &lt;a href=&quot;../reference/api/pandas.dataframe.to_numpy#pandas.DataFrame.to_numpy&quot;&gt;&lt;code&gt;DataFrame.to_numpy()&lt;/code&gt;&lt;/a&gt; is relatively expensive.</source>
          <target state="translated">对于 &lt;code&gt;df2&lt;/code&gt; ，该&lt;a href=&quot;../reference/api/pandas.dataframe#pandas.DataFrame&quot;&gt; &lt;code&gt;DataFrame&lt;/code&gt; &lt;/a&gt;具有多个dtypes，&lt;a href=&quot;../reference/api/pandas.dataframe.to_numpy#pandas.DataFrame.to_numpy&quot;&gt; &lt;code&gt;DataFrame.to_numpy()&lt;/code&gt; &lt;/a&gt;是相对昂贵的。</target>
        </trans-unit>
        <trans-unit id="81030d9ab1703f3cc9f7ebeecfb57dcb67354169" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;df&lt;/code&gt;, our &lt;a href=&quot;../reference/api/pandas.dataframe#pandas.DataFrame&quot;&gt;&lt;code&gt;DataFrame&lt;/code&gt;&lt;/a&gt; of all floating-point values, &lt;a href=&quot;../reference/api/pandas.dataframe.to_numpy#pandas.DataFrame.to_numpy&quot;&gt;&lt;code&gt;DataFrame.to_numpy()&lt;/code&gt;&lt;/a&gt; is fast and doesn&amp;rsquo;t require copying data.</source>
          <target state="translated">对于 &lt;code&gt;df&lt;/code&gt; ，我们的&lt;a href=&quot;../reference/api/pandas.dataframe#pandas.DataFrame&quot;&gt; &lt;code&gt;DataFrame&lt;/code&gt; &lt;/a&gt;所有浮点值，&lt;a href=&quot;../reference/api/pandas.dataframe.to_numpy#pandas.DataFrame.to_numpy&quot;&gt; &lt;code&gt;DataFrame.to_numpy()&lt;/code&gt; &lt;/a&gt;是速度快，不需要复制数据。</target>
        </trans-unit>
        <trans-unit id="7d6d186fe28880ea81f2a38d1737448118a977e8" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;pytz&lt;/code&gt; time zones, it is incorrect to pass a time zone object directly into the &lt;code&gt;datetime.datetime&lt;/code&gt; constructor (e.g., &lt;code&gt;datetime.datetime(2011, 1, 1, tz=pytz.timezone('US/Eastern'))&lt;/code&gt;. Instead, the datetime needs to be localized using the &lt;code&gt;localize&lt;/code&gt; method on the &lt;code&gt;pytz&lt;/code&gt; time zone object.</source>
          <target state="translated">对于 &lt;code&gt;pytz&lt;/code&gt; 时区，将时区对象直接传递到 &lt;code&gt;datetime.datetime&lt;/code&gt; 构造函数（例如， &lt;code&gt;datetime.datetime(2011, 1, 1, tz=pytz.timezone('US/Eastern'))&lt;/code&gt; 不正确的。 datetime需要在 &lt;code&gt;pytz&lt;/code&gt; 时区对象上使用 &lt;code&gt;localize&lt;/code&gt; 方法进行本地化。</target>
        </trans-unit>
        <trans-unit id="bbc15e72871f4239431f203a522d34e3ddbd7bbf" translate="yes" xml:space="preserve">
          <source>For DataFrame objects, rank only numeric columns if set to True.</source>
          <target state="translated">对于DataFrame对象,如果设置为True,则只对数字列进行排序。</target>
        </trans-unit>
        <trans-unit id="91db5d1cbbb5e4c92797d308f60ee309d08c4097" translate="yes" xml:space="preserve">
          <source>For DataFrame objects, the keyword</source>
          <target state="translated">对于DataFrame对象,关键字</target>
        </trans-unit>
        <trans-unit id="9cce67030bcae3fa28751b9398f791cd48e516ab" translate="yes" xml:space="preserve">
          <source>For DataFrame objects, the keyword &lt;code&gt;on&lt;/code&gt; can be used to specify the column instead of the index for resampling.</source>
          <target state="translated">对于DataFrame对象，关键字 &lt;code&gt;on&lt;/code&gt; 可以用于指定列而不是用于重新采样的索引。</target>
        </trans-unit>
        <trans-unit id="b71ef4087864dce14de387ae8d781d013d56790d" translate="yes" xml:space="preserve">
          <source>For DataFrame, each expanding sum is computed column-wise.</source>
          <target state="translated">对于DataFrame,每个扩展的和都是按列计算的。</target>
        </trans-unit>
        <trans-unit id="b01b228ea2c64bd54f0f73ce17508220bd446e6a" translate="yes" xml:space="preserve">
          <source>For DataFrame, each rolling sum is computed column-wise.</source>
          <target state="translated">对于DataFrame,每一个滚动和都是按列计算的。</target>
        </trans-unit>
        <trans-unit id="cd6c1a399560afc76b4e569ced42902abd8b0203" translate="yes" xml:space="preserve">
          <source>For DataFrame, each window sum is computed column-wise.</source>
          <target state="translated">对于DataFrame,每个窗口的和是按列计算的。</target>
        </trans-unit>
        <trans-unit id="a5da9be849b2608642456c85cefd01d67cada570" translate="yes" xml:space="preserve">
          <source>For DataFrame, if not</source>
          <target state="translated">对于DataFrame,如果没有</target>
        </trans-unit>
        <trans-unit id="f21ec2bb0e16013b4766b86d5046d3b975a1bd8c" translate="yes" xml:space="preserve">
          <source>For DataFrame, if not &lt;code&gt;None&lt;/code&gt;, only use these columns to check for NaNs.</source>
          <target state="translated">对于DataFrame，如果不是 &lt;code&gt;None&lt;/code&gt; ，则仅使用这些列检查NaN。</target>
        </trans-unit>
        <trans-unit id="c075a5df8888360865d89b7245097779c7785e33" translate="yes" xml:space="preserve">
          <source>For DataFrame, it works in the same way:</source>
          <target state="translated">对于DataFrame,它的工作原理是一样的。</target>
        </trans-unit>
        <trans-unit id="64b2d4340bdb65dcde6ab187fa5e1497014440bf" translate="yes" xml:space="preserve">
          <source>For DataFrames exceeding max_rows/max_cols, the repr (and HTML repr) can show a truncated table (the default from 0.13), or switch to the view from df.info() (the behaviour in earlier versions of pandas). [default: truncate] [currently: truncate]</source>
          <target state="translated">对于超过max_rows/max_cols的DataFrames,repr(和HTML repr)可以显示一个截断的表(从0.13开始的默认值),或者从df.info()切换到视图(pandas早期版本的行为)。[默认:截断][当前:截断]。</target>
        </trans-unit>
        <trans-unit id="f55404d2565903c0cb15b888692658832061cb66" translate="yes" xml:space="preserve">
          <source>For DataFrames exceeding max_rows/max_cols, the repr (and HTML repr) can show a truncated table (the default), or switch to the view from df.info() (the behaviour in earlier versions of pandas). allowable settings, [&amp;lsquo;truncate&amp;rsquo;, &amp;lsquo;info&amp;rsquo;]</source>
          <target state="translated">对于超出max_rows / max_cols的DataFrame，repr（和HTML repr）可以显示截断的表（默认值），或者从df.info（）切换到视图（早期版本的熊猫的行为）。允许的设置，['truncate'，'info']</target>
        </trans-unit>
        <trans-unit id="abd0020733f34b336c7ad2f0e11739d018224f42" translate="yes" xml:space="preserve">
          <source>For DataFrames that have Series that are missing data (assuming that data is &lt;a href=&quot;https://en.wikipedia.org/wiki/Missing_data#Missing_at_random&quot;&gt;missing at random&lt;/a&gt;) the returned covariance matrix will be an unbiased estimate of the variance and covariance between the member Series.</source>
          <target state="translated">对于具有缺少数据的Series的DataFrame（假设数据&lt;a href=&quot;https://en.wikipedia.org/wiki/Missing_data#Missing_at_random&quot;&gt;随机丢失&lt;/a&gt;），返回的协方差矩阵将是成员Series之间的方差和协方差的无偏估计。</target>
        </trans-unit>
        <trans-unit id="d91c3c941e072373927ae861a8c378b45e3329fd" translate="yes" xml:space="preserve">
          <source>For DataFrames with multiple columns, filters should explicitly specify a column as the filter criterion.</source>
          <target state="translated">对于具有多列的DataFrames,过滤器应明确指定一列作为过滤标准。</target>
        </trans-unit>
        <trans-unit id="9068a5515b39e3a535269ea26c862f779bd7857f" translate="yes" xml:space="preserve">
          <source>For DataFrames, the given indices should be a 1d list or ndarray that specifies row or column positions.</source>
          <target state="translated">对于DataFrames,给定的索引应该是一个1d list或ndarray,指定行或列的位置。</target>
        </trans-unit>
        <trans-unit id="414dbb0aaf8c5064971faf2dbd38ab952e07a046" translate="yes" xml:space="preserve">
          <source>For DataFrames, the join method will be applied to both the index and the columns by default:</source>
          <target state="translated">对于DataFrames,连接方法将默认应用于索引和列。</target>
        </trans-unit>
        <trans-unit id="04863e2f92d104de2912b47a66a44d2952000792" translate="yes" xml:space="preserve">
          <source>For DatetimeArray</source>
          <target state="translated">对于DatetimeArray</target>
        </trans-unit>
        <trans-unit id="f9a6c0a346380d4a38720bcdb26a1b61bf486fb7" translate="yes" xml:space="preserve">
          <source>For DatetimeArray &lt;code&gt;values&lt;/code&gt; (or a Series or Index boxing one), &lt;code&gt;dtype&lt;/code&gt; and &lt;code&gt;freq&lt;/code&gt; will be extracted from &lt;code&gt;values&lt;/code&gt;, with precedence given to</source>
          <target state="translated">对于DatetimeArray &lt;code&gt;values&lt;/code&gt; （或&amp;ldquo;系列&amp;rdquo;或&amp;ldquo;索引&amp;rdquo;装箱值），将从 &lt;code&gt;values&lt;/code&gt; 提取 &lt;code&gt;dtype&lt;/code&gt; 和 &lt;code&gt;freq&lt;/code&gt; ，优先级为</target>
        </trans-unit>
        <trans-unit id="2f61866957f7d7301f34da0c17d93b8e0bc0a0e7" translate="yes" xml:space="preserve">
          <source>For Index, level should be 0, since there are no multiple levels.</source>
          <target state="translated">对于Index,级别应该是0,因为没有多个级别。</target>
        </trans-unit>
        <trans-unit id="cd12ec2ee5dac6dcc0938558080c7de32cf80dfb" translate="yes" xml:space="preserve">
          <source>For MultiIndex, level for which the labels will be removed.</source>
          <target state="translated">对于MultiIndex,将删除标签的级别。</target>
        </trans-unit>
        <trans-unit id="8eae3fa2918d301dfd457ba8e42908b628e9e5f7" translate="yes" xml:space="preserve">
          <source>For MultiIndex, level from which the labels will be removed.</source>
          <target state="translated">对于MultiIndex,将删除标签的级别。</target>
        </trans-unit>
        <trans-unit id="8c859c5d65dd092b51a2eee4b3c2651e816ab15f" translate="yes" xml:space="preserve">
          <source>For NumPy compatibility. No additional arguments are used.</source>
          <target state="translated">为了兼容NumPy。没有使用额外的参数。</target>
        </trans-unit>
        <trans-unit id="e45d187e976f5b24022aff48a05ad2a87a5a95ab" translate="yes" xml:space="preserve">
          <source>For NumPy dtypes, this will be a reference to the actual data stored in this Series or Index (assuming &lt;code&gt;copy=False&lt;/code&gt;). Modifying the result in place will modify the data stored in the Series or Index (not that we recommend doing that).</source>
          <target state="translated">对于NumPy dtype，这将是对存储在该Series或Index中的实际数据的引用（假设 &lt;code&gt;copy=False&lt;/code&gt; ）。在适当位置修改结果将修改存储在系列或索引中的数据（不建议这样做）。</target>
        </trans-unit>
        <trans-unit id="46d8136fe73fb92abf2169a76543dd967e628589" translate="yes" xml:space="preserve">
          <source>For PeriodIndex only (see PeriodIndex.asfreq).</source>
          <target state="translated">仅适用于PeriodIndex(见PeriodIndex.asfreq)。</target>
        </trans-unit>
        <trans-unit id="12625a6c070a7bf7dc66c0e42a1382b32332f97f" translate="yes" xml:space="preserve">
          <source>For PeriodIndex only, see PeriodIndex.asfreq</source>
          <target state="translated">仅对于PeriodIndex,请参见PeriodIndex.asfreq。</target>
        </trans-unit>
        <trans-unit id="e8790140b5ecf731d553340f444adbf8dc407c14" translate="yes" xml:space="preserve">
          <source>For Python 3.5 and earlier, the order of &lt;code&gt;**kwargs&lt;/code&gt; in a functions was not preserved. This means that the output column ordering would not be consistent. To ensure consistent ordering, the keys (and so output columns) will always be sorted for Python 3.5.</source>
          <target state="translated">对于Python 3.5及更早版本，未保留函数中 &lt;code&gt;**kwargs&lt;/code&gt; 的顺序。这意味着输出列的顺序将不一致。为确保顺序一致，对于Python 3.5，将始终对键（以及输出列）进行排序。</target>
        </trans-unit>
        <trans-unit id="560a573dd870506bf44d57c7bea8439b53270213" translate="yes" xml:space="preserve">
          <source>For Series and DataFrame, the same type is returned, containing booleans.</source>
          <target state="translated">对于Series和DataFrame,返回相同的类型,包含booleans。</target>
        </trans-unit>
        <trans-unit id="85ece3a2eeff9dc451c862701f6bdfa92323842a" translate="yes" xml:space="preserve">
          <source>For Series input, the output is a scalar indicating whether any element is True.</source>
          <target state="translated">对于Series输入,输出是一个标量,表示是否有元素为True。</target>
        </trans-unit>
        <trans-unit id="34631f63aeff7e4329e87b95098e1c5c60a9a74e" translate="yes" xml:space="preserve">
          <source>For Series, it&amp;rsquo;s name attribute must be set.</source>
          <target state="translated">对于Series，必须设置其name属性。</target>
        </trans-unit>
        <trans-unit id="be32919c1d5262c1392779e7670a68d0e9d6a276" translate="yes" xml:space="preserve">
          <source>For Series, its name attribute must be set.</source>
          <target state="translated">对于系列,必须设置其名称属性。</target>
        </trans-unit>
        <trans-unit id="f00f5a6c531a40dbd5d2921d98dd3f4c16cd5a12" translate="yes" xml:space="preserve">
          <source>For Series, only rows can be truncated.</source>
          <target state="translated">对于系列,只能截断行。</target>
        </trans-unit>
        <trans-unit id="5551e2e93a683cfa36af817dbfb8da081f29d5c7" translate="yes" xml:space="preserve">
          <source>For Series, returns a Series with boolean values. For DatetimeIndex, returns a boolean array.</source>
          <target state="translated">对于Series,返回一个带有布尔值的Series。对于DatetimeIndex,返回一个布尔数组。</target>
        </trans-unit>
        <trans-unit id="9f2b21676ad900d12ec0105fb422473304ed295a" translate="yes" xml:space="preserve">
          <source>For Series, the row labels are prefixed. For DataFrame, the column labels are prefixed.</source>
          <target state="translated">对于Series,行标签是有前缀的,对于DataFrame,列标签是有前缀的。对于DataFrame,列标签是有前缀的。</target>
        </trans-unit>
        <trans-unit id="ff9e287cffb3291ab844008474983151ffa9d6c4" translate="yes" xml:space="preserve">
          <source>For Series, the row labels are suffixed. For DataFrame, the column labels are suffixed.</source>
          <target state="translated">对于Series来说,行标签是后缀的;对于DataFrame来说,列标签是后缀的。对于DataFrame,列标签是后缀的。</target>
        </trans-unit>
        <trans-unit id="4c1d9ec189276d3e67196cf2df839e8b20b194c0" translate="yes" xml:space="preserve">
          <source>For Table formats, append the input data to the existing.</source>
          <target state="translated">对于表格式,将输入的数据追加到现有的。</target>
        </trans-unit>
        <trans-unit id="0d341912d1333fe0ddfead35b57a3b881f5ef665" translate="yes" xml:space="preserve">
          <source>For Windows developers, when using Python 3.5 and later, it is sufficient to install &lt;a href=&quot;https://visualstudio.com/&quot;&gt;Visual Studio 2017&lt;/a&gt; with the &lt;strong&gt;Python development workload&lt;/strong&gt; and the &lt;strong&gt;Python native development tools&lt;/strong&gt; option. Otherwise, the following links may be helpful.</source>
          <target state="translated">对于Windows开发人员，使用Python 3.5及更高版本时，只需使用&lt;strong&gt;Python开发工作负载&lt;/strong&gt;和&lt;strong&gt;Python本机开发工具&lt;/strong&gt;选项安装&lt;a href=&quot;https://visualstudio.com/&quot;&gt;Visual Studio 2017&lt;/a&gt;就足够了。否则，以下链接可能会有所帮助。&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="384f122eac1b5e433520d4e7209e7a595a37456d" translate="yes" xml:space="preserve">
          <source>For a &lt;code&gt;Series&lt;/code&gt;:</source>
          <target state="translated">对于 &lt;code&gt;Series&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="302a998d968637e1e2d466388207248153079cc3" translate="yes" xml:space="preserve">
          <source>For a DataFrame a dict can specify that different values should be replaced in different columns. For example, &lt;code&gt;{'a': 1, 'b': 'z'}&lt;/code&gt; looks for the value 1 in column &amp;lsquo;a&amp;rsquo; and the value &amp;lsquo;z&amp;rsquo; in column &amp;lsquo;b&amp;rsquo; and replaces these values with whatever is specified in</source>
          <target state="translated">对于DataFrame，字典可以指定在不同的列中替换不同的值。例如， &lt;code&gt;{'a': 1, 'b': 'z'}&lt;/code&gt; 在'a'列中查找值1，在'b'列中查找值'z'，并将这些值替换为</target>
        </trans-unit>
        <trans-unit id="90469ed06a05157905ae4315a937a34cb81acd34" translate="yes" xml:space="preserve">
          <source>For a DataFrame a dict can specify that different values should be replaced in different columns. For example, &lt;code&gt;{'a': 1, 'b': 'z'}&lt;/code&gt; looks for the value 1 in column &amp;lsquo;a&amp;rsquo; and the value &amp;lsquo;z&amp;rsquo; in column &amp;lsquo;b&amp;rsquo; and replaces these values with whatever is specified in &lt;code&gt;value&lt;/code&gt;. The &lt;code&gt;value&lt;/code&gt; parameter should not be &lt;code&gt;None&lt;/code&gt; in this case. You can treat this as a special case of passing two lists except that you are specifying the column to search in.</source>
          <target state="translated">对于DataFrame，字典可以指定在不同的列中替换不同的值。例如， &lt;code&gt;{'a': 1, 'b': 'z'}&lt;/code&gt; 在'a'列中查找值1，在'b'列中查找值'z'，并将这些值替换为 &lt;code&gt;value&lt;/code&gt; 中指定的值。在这种情况下， &lt;code&gt;value&lt;/code&gt; 参数不应为 &lt;code&gt;None&lt;/code&gt; 。您可以将其视为传递两个列表的特殊情况，除了您要指定要搜索的列。</target>
        </trans-unit>
        <trans-unit id="975433d26077a48b481dac8c960f9027d338c06a" translate="yes" xml:space="preserve">
          <source>For a DataFrame nested dictionaries, e.g., &lt;code&gt;{'a': {'b': np.nan}}&lt;/code&gt;, are read as follows: look in column &amp;lsquo;a&amp;rsquo; for the value &amp;lsquo;b&amp;rsquo; and replace it with NaN. The</source>
          <target state="translated">对于DataFrame嵌套的字典，例如 &lt;code&gt;{'a': {'b': np.nan}}&lt;/code&gt; 的读取方式如下：在列'a'中查找值'b'并将其替换为NaN。这</target>
        </trans-unit>
        <trans-unit id="5971d67c38f7055e4b38754e2d37c0bdf80184f1" translate="yes" xml:space="preserve">
          <source>For a DataFrame nested dictionaries, e.g., &lt;code&gt;{'a': {'b': np.nan}}&lt;/code&gt;, are read as follows: look in column &amp;lsquo;a&amp;rsquo; for the value &amp;lsquo;b&amp;rsquo; and replace it with NaN. The &lt;code&gt;value&lt;/code&gt; parameter should be &lt;code&gt;None&lt;/code&gt; to use a nested dict in this way. You can nest regular expressions as well. Note that column names (the top-level dictionary keys in a nested dictionary) &lt;strong&gt;cannot&lt;/strong&gt; be regular expressions.</source>
          <target state="translated">对于DataFrame嵌套的字典，例如 &lt;code&gt;{'a': {'b': np.nan}}&lt;/code&gt; ，其读取方式如下：在'a'列中查找值'b'并将其替换为NaN。该 &lt;code&gt;value&lt;/code&gt; 参数应该是 &lt;code&gt;None&lt;/code&gt; 以这种方式使用嵌套的字典。您也可以嵌套正则表达式。请注意，列名（嵌套字典中的顶级字典键）&lt;strong&gt;不能&lt;/strong&gt;为正则表达式。</target>
        </trans-unit>
        <trans-unit id="8846fb8a70acde641b5debfcd6c2ee0da0faa87b" translate="yes" xml:space="preserve">
          <source>For a DataFrame with MultiIndex, the keyword</source>
          <target state="translated">对于一个带有MultiIndex的DataFrame,关键字是</target>
        </trans-unit>
        <trans-unit id="da53ca74475e4a9020b470b13ae5f78ed4c4cf4f" translate="yes" xml:space="preserve">
          <source>For a DataFrame with MultiIndex, the keyword &lt;code&gt;level&lt;/code&gt; can be used to specify on which level the resampling needs to take place.</source>
          <target state="translated">对于具有MultiIndex的DataFrame，关键字 &lt;code&gt;level&lt;/code&gt; 可用于指定需要在哪个级别进行重采样。</target>
        </trans-unit>
        <trans-unit id="05d2cee46e85411966e39c0cf35bb8c9e7a30b92" translate="yes" xml:space="preserve">
          <source>For a DataFrame, a datetime-like column on which to calculate the rolling window, rather than the DataFrame&amp;rsquo;s index. Provided integer column is ignored and excluded from result since an integer index is not used to calculate the rolling window.</source>
          <target state="translated">对于DataFrame，是类似datetime的列，在该列上计算滚动窗口，而不是DataFrame的索引。由于不使用整数索引来计算滚动窗口，因此忽略提供的整数列并将其从结果中排除。</target>
        </trans-unit>
        <trans-unit id="3adb768ad47bdbf21cb17ce37e84d56719b00cf6" translate="yes" xml:space="preserve">
          <source>For a DataFrame, a datetime-like column or MultiIndex level on which to calculate the rolling window, rather than the DataFrame&amp;rsquo;s index. Provided integer column is ignored and excluded from result since an integer index is not used to calculate the rolling window.</source>
          <target state="translated">对于DataFrame，是类似于日期时间的列或MultiIndex级别，在该列或MultiIndex级别上计算滚动窗口，而不是DataFrame的索引。由于不使用整数索引来计算滚动窗口，因此将忽略提供的整数列并将其从结果中排除。</target>
        </trans-unit>
        <trans-unit id="789e72a4455aabb90352c01f28608019b93ca564" translate="yes" xml:space="preserve">
          <source>For a DataFrame, column to use instead of index for resampling. Column must be datetime-like.</source>
          <target state="translated">对于DataFrame来说,使用列代替索引进行重采样。列必须是类似于日期时间的。</target>
        </trans-unit>
        <trans-unit id="8a614643ff44ad2970706f562f41b720ffc8fa39" translate="yes" xml:space="preserve">
          <source>For a DataFrame, you can specify individual values by column:</source>
          <target state="translated">对于一个DataFrame,你可以按列指定各个值。</target>
        </trans-unit>
        <trans-unit id="113e89c2fe555fe85a489f03bec86465fd3730da" translate="yes" xml:space="preserve">
          <source>For a DatetimeIndex, string values in</source>
          <target state="translated">对于一个DatetimeIndex,字符串值在</target>
        </trans-unit>
        <trans-unit id="f3b3af660f1ff68f30d407b4b7cab096b6ec3c95" translate="yes" xml:space="preserve">
          <source>For a DatetimeIndex, string values in &lt;code&gt;values&lt;/code&gt; are converted to Timestamps.</source>
          <target state="translated">对于DatetimeIndex，值中的字符串 &lt;code&gt;values&lt;/code&gt; 将转换为Timestamps。</target>
        </trans-unit>
        <trans-unit id="bc2552180846e39cc3bac2f745d1892121c98a2e" translate="yes" xml:space="preserve">
          <source>For a MultiIndex, level (name or number) to use for resampling.</source>
          <target state="translated">对于一个MultiIndex,用于重新取样的级别(名称或编号)。</target>
        </trans-unit>
        <trans-unit id="3d4de0881cd69400ed50e4b7d5119d06373a73ed" translate="yes" xml:space="preserve">
          <source>For a MultiIndex, level (name or number) to use for resampling. &lt;code&gt;level&lt;/code&gt; must be datetime-like.</source>
          <target state="translated">对于MultiIndex，用于重采样的级别（名称或数字）。 &lt;code&gt;level&lt;/code&gt; 必须类似于日期时间。</target>
        </trans-unit>
        <trans-unit id="f9ea9f3629cc2bbd62665a7f2bb6bcfc1ae7f358" translate="yes" xml:space="preserve">
          <source>For a MultiIndex, the maximum is determined lexicographically.</source>
          <target state="translated">对于MultiIndex来说,最大值是用词法确定的。</target>
        </trans-unit>
        <trans-unit id="3b362023808b7faf5e55058a842072797e09a0f0" translate="yes" xml:space="preserve">
          <source>For a MultiIndex, the minimum is determined lexicographically.</source>
          <target state="translated">对于一个MultiIndex来说,最小值是用词法确定的。</target>
        </trans-unit>
        <trans-unit id="d2ffca1b2a30c570bc556bfb9c18184ceb152d94" translate="yes" xml:space="preserve">
          <source>For a Series with a MultiIndex, only remove the specified levels from the index. Removes all levels by default.</source>
          <target state="translated">对于带有多索引的系列,只从索引中删除指定的级别。默认情况下删除所有级别。</target>
        </trans-unit>
        <trans-unit id="3565de1af18de61c93f710bb157bdda48f297168" translate="yes" xml:space="preserve">
          <source>For a Series with a PeriodIndex, the keyword</source>
          <target state="translated">对于一个带有PeriodIndex的系列,关键字是</target>
        </trans-unit>
        <trans-unit id="e713123fa1502df74995a9180a5a8847d4a6ff81" translate="yes" xml:space="preserve">
          <source>For a Series with a PeriodIndex, the keyword &lt;code&gt;convention&lt;/code&gt; can be used to control whether to use the start or end of &lt;code&gt;rule&lt;/code&gt;.</source>
          <target state="translated">对于具有PeriodIndex的系列，关键字 &lt;code&gt;convention&lt;/code&gt; 可用于控制使用 &lt;code&gt;rule&lt;/code&gt; 的开始还是结束。</target>
        </trans-unit>
        <trans-unit id="4233f32e71fccd019269ae7f238dad5f61591155" translate="yes" xml:space="preserve">
          <source>For a Series, you can replace a single value or a list of values by another value:</source>
          <target state="translated">对于一个系列,你可以用另一个值替换一个值或一个值列表。</target>
        </trans-unit>
        <trans-unit id="fc88e84fa639481de82c00c03d459c3cafaed4ed" translate="yes" xml:space="preserve">
          <source>For a boolean mask,</source>
          <target state="translated">对于一个布尔掩码。</target>
        </trans-unit>
        <trans-unit id="cc73f9fd9d28a9a7ecb5ff5f13a97eb0bd6600bc" translate="yes" xml:space="preserve">
          <source>For a floating-point index, use &lt;code&gt;method='values'&lt;/code&gt;:</source>
          <target state="translated">对于浮点索引，请使用 &lt;code&gt;method='values'&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="edbcf39701f36432a165b73da7daf8ea06fe1727" translate="yes" xml:space="preserve">
          <source>For a grouped &lt;code&gt;DataFrame&lt;/code&gt;, you can rename in a similar manner:</source>
          <target state="translated">对于分组的 &lt;code&gt;DataFrame&lt;/code&gt; ，您可以通过类似的方式重命名：</target>
        </trans-unit>
        <trans-unit id="e71ee73fd0addbae7190921f688d9e2132e9193b" translate="yes" xml:space="preserve">
          <source>For a high level summary of the pandas fundamentals, see &lt;a href=&quot;dsintro#dsintro&quot;&gt;Intro to data structures&lt;/a&gt; and &lt;a href=&quot;basics#basics&quot;&gt;Essential basic functionality&lt;/a&gt;.</source>
          <target state="translated">有关熊猫基础知识的高级摘要，请参见&lt;a href=&quot;dsintro#dsintro&quot;&gt;数据结构简介&lt;/a&gt;和&lt;a href=&quot;basics#basics&quot;&gt;基本基本功能&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7d95f3d7f90e52ac53c1428810b948a8db5ccb8b" translate="yes" xml:space="preserve">
          <source>For a mix of numeric and non-numeric types, the output array will have object dtype.</source>
          <target state="translated">对于数字和非数字类型的混合,输出数组将有对象dtype。</target>
        </trans-unit>
        <trans-unit id="62ab9cf97e6a3766f107d39032568a41c805f7e7" translate="yes" xml:space="preserve">
          <source>For a more exhaustive treatment of sophisticated label-based indexing and slicing, see the &lt;a href=&quot;indexing#indexing&quot;&gt;section on indexing&lt;/a&gt;. We will address the fundamentals of reindexing / conforming to new sets of labels in the &lt;a href=&quot;basics#basics-reindexing&quot;&gt;section on reindexing&lt;/a&gt;.</source>
          <target state="translated">有关基于标签的复杂索引和切片的更详尽的处理，请参阅&amp;ldquo;&lt;a href=&quot;indexing#indexing&quot;&gt;索引&lt;/a&gt;&amp;rdquo;部分。我们将在&amp;ldquo;重新索引编制&amp;rdquo;&lt;a href=&quot;basics#basics-reindexing&quot;&gt;部分中介绍重新索引&lt;/a&gt;编制/符合新标签集的基础。</target>
        </trans-unit>
        <trans-unit id="eb3a633d57f9bef5f62cf2430f07381e7da87b13" translate="yes" xml:space="preserve">
          <source>For a non-numerical Series object, &lt;a href=&quot;../reference/api/pandas.series.describe#pandas.Series.describe&quot;&gt;&lt;code&gt;describe()&lt;/code&gt;&lt;/a&gt; will give a simple summary of the number of unique values and most frequently occurring values:</source>
          <target state="translated">对于非数字系列对象，&lt;a href=&quot;../reference/api/pandas.series.describe#pandas.Series.describe&quot;&gt; &lt;code&gt;describe()&lt;/code&gt; &lt;/a&gt;将给出唯一值和最常出现的值的数量的简单摘要：</target>
        </trans-unit>
        <trans-unit id="554dd416b4b1bc235371462326b25e8a16df1072" translate="yes" xml:space="preserve">
          <source>For a sequence</source>
          <target state="translated">对于一个序列</target>
        </trans-unit>
        <trans-unit id="01a90ba1096d0852fabe64494dde3b5ad3fccbce" translate="yes" xml:space="preserve">
          <source>For a sequence &lt;code&gt;where&lt;/code&gt;, a Series is returned. The first value is NaN, because the first element of &lt;code&gt;where&lt;/code&gt; is before the first index value.</source>
          <target state="translated">对于 &lt;code&gt;where&lt;/code&gt; 的序列，返回一个Series。第一个值是NaN，因为 &lt;code&gt;where&lt;/code&gt; 的第一个元素在第一个索引值之前。</target>
        </trans-unit>
        <trans-unit id="1565d1a0363ce87b3bfe0a8612d64cbe534ad0cc" translate="yes" xml:space="preserve">
          <source>For aggregated output, return object with group labels as the index. Only relevant for DataFrame input. as_index=False is effectively &amp;ldquo;SQL-style&amp;rdquo; grouped output.</source>
          <target state="translated">对于聚合输出，返回带有组标签的对象作为索引。仅与DataFrame输入有关。as_index = False实际上是&amp;ldquo; SQL风格&amp;rdquo;的分组输出。</target>
        </trans-unit>
        <trans-unit id="4be6aca2dc976b242c9a0ae7d88b2e70ea41f704" translate="yes" xml:space="preserve">
          <source>For all &lt;code&gt;orient&lt;/code&gt; values except &lt;code&gt;'table'&lt;/code&gt;, default is True.</source>
          <target state="translated">对于除 &lt;code&gt;'table'&lt;/code&gt; 以外的所有 &lt;code&gt;orient&lt;/code&gt; 值，默认值为True。</target>
        </trans-unit>
        <trans-unit id="71486b234bf1508cdb7b1870e03b25ac7454fab9" translate="yes" xml:space="preserve">
          <source>For all other cases, NumPy&amp;rsquo;s usual inference rules will be used.</source>
          <target state="translated">对于所有其他情况，将使用NumPy的常规推理规则。</target>
        </trans-unit>
        <trans-unit id="9803c06d2763e4a515660003892a64d59d75687d" translate="yes" xml:space="preserve">
          <source>For all other pandas objects, an Index of the appropriate type is returned.</source>
          <target state="translated">对于所有其他pandas对象,将返回一个适当类型的Index。</target>
        </trans-unit>
        <trans-unit id="e42bb69048a156d3d8fde243ee894a4f13f61637" translate="yes" xml:space="preserve">
          <source>For all remaining dtypes &lt;code&gt;.array&lt;/code&gt; will be a &lt;code&gt;arrays.NumpyExtensionArray&lt;/code&gt; wrapping the actual ndarray stored within. If you absolutely need a NumPy array (possibly with copying / coercing data), then use &lt;a href=&quot;pandas.series.to_numpy#pandas.Series.to_numpy&quot;&gt;&lt;code&gt;Series.to_numpy()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">对于所有剩余dtypes &lt;code&gt;.array&lt;/code&gt; 将是一个 &lt;code&gt;arrays.NumpyExtensionArray&lt;/code&gt; 包装内存储的实际ndarray。如果您绝对需要一个NumPy数组（可能需要复制/强制数据），请改用&lt;a href=&quot;pandas.series.to_numpy#pandas.Series.to_numpy&quot;&gt; &lt;code&gt;Series.to_numpy()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="96d6525e61f00fb8d7f030e51a96b9a38a78b86e" translate="yes" xml:space="preserve">
          <source>For all supported aggregation functions, see &lt;a href=&quot;../reference/window#api-functions-ewm&quot;&gt;Exponentially-weighted window functions&lt;/a&gt;.</source>
          <target state="translated">有关所有受支持的聚合函数，请参见&lt;a href=&quot;../reference/window#api-functions-ewm&quot;&gt;指数加权窗口函数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0555b08dfbf3347b8abec3821352f61907c113c8" translate="yes" xml:space="preserve">
          <source>For all supported aggregation functions, see &lt;a href=&quot;../reference/window#api-functions-expanding&quot;&gt;Expanding window functions&lt;/a&gt;.</source>
          <target state="translated">有关所有受支持的聚合功能，请参见&lt;a href=&quot;../reference/window#api-functions-expanding&quot;&gt;扩展窗口功能&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="578eda6fe4cc004a6022b44860b6576f83d68b5c" translate="yes" xml:space="preserve">
          <source>For all supported aggregation functions, see &lt;a href=&quot;../reference/window#api-functions-rolling&quot;&gt;Rolling window functions&lt;/a&gt;.</source>
          <target state="translated">有关所有受支持的聚合函数，请参见&lt;a href=&quot;../reference/window#api-functions-rolling&quot;&gt;滚动窗口函数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1566b7aba8446653c3586ca83d7e77ea3d405ed4" translate="yes" xml:space="preserve">
          <source>For all supported aggregation functions, see &lt;a href=&quot;../reference/window#api-functions-window&quot;&gt;Weighted window functions&lt;/a&gt;.</source>
          <target state="translated">有关所有受支持的聚合函数，请参见&lt;a href=&quot;../reference/window#api-functions-window&quot;&gt;加权窗口函数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f2506af2c3f808c81da44f555370d766836015a0" translate="yes" xml:space="preserve">
          <source>For ambiguous times, pandas supports explicitly specifying the keyword-only fold argument. Due to daylight saving time, one wall clock time can occur twice when shifting from summer to winter time; fold describes whether the datetime-like corresponds to the first (0) or the second time (1) the wall clock hits the ambiguous time. Fold is supported only for constructing from naive &lt;code&gt;datetime.datetime&lt;/code&gt; (see &lt;a href=&quot;https://docs.python.org/3/library/datetime.html&quot;&gt;datetime documentation&lt;/a&gt; for details) or from &lt;a href=&quot;../reference/api/pandas.timestamp#pandas.Timestamp&quot;&gt;&lt;code&gt;Timestamp&lt;/code&gt;&lt;/a&gt; or for constructing from components (see below). Only &lt;code&gt;dateutil&lt;/code&gt; timezones are supported (see &lt;a href=&quot;https://dateutil.readthedocs.io/en/stable/tz.html#dateutil.tz.enfold&quot;&gt;dateutil documentation&lt;/a&gt; for &lt;code&gt;dateutil&lt;/code&gt; methods that deal with ambiguous datetimes) as &lt;code&gt;pytz&lt;/code&gt; timezones do not support fold (see &lt;a href=&quot;http://pytz.sourceforge.net/index.html&quot;&gt;pytz documentation&lt;/a&gt; for details on how &lt;code&gt;pytz&lt;/code&gt; deals with ambiguous datetimes). To localize an ambiguous datetime with &lt;code&gt;pytz&lt;/code&gt;, please use &lt;a href=&quot;../reference/api/pandas.timestamp.tz_localize#pandas.Timestamp.tz_localize&quot;&gt;&lt;code&gt;Timestamp.tz_localize()&lt;/code&gt;&lt;/a&gt;. In general, we recommend to rely on &lt;a href=&quot;../reference/api/pandas.timestamp.tz_localize#pandas.Timestamp.tz_localize&quot;&gt;&lt;code&gt;Timestamp.tz_localize()&lt;/code&gt;&lt;/a&gt; when localizing ambiguous datetimes if you need direct control over how they are handled.</source>
          <target state="translated">在模棱两可的时期，pandas支持显式指定仅关键字的fold参数。由于夏令时，从夏季到冬季，一个挂钟时间可能会发生两次； fold描述类似datetime的时间是否对应壁钟碰到的第一时间（0）或第二时间（1）。仅从天真 &lt;code&gt;datetime.datetime&lt;/code&gt; （有关详细信息，请参见&lt;a href=&quot;https://docs.python.org/3/library/datetime.html&quot;&gt;datetime文档&lt;/a&gt;）或&lt;a href=&quot;../reference/api/pandas.timestamp#pandas.Timestamp&quot;&gt; &lt;code&gt;Timestamp&lt;/code&gt; &lt;/a&gt;进行构造，或从组件进行构造（请参见下文），都支持折叠。仅支持 &lt;code&gt;dateutil&lt;/code&gt; 时区（请参阅&lt;a href=&quot;https://dateutil.readthedocs.io/en/stable/tz.html#dateutil.tz.enfold&quot;&gt;dateutil文档，&lt;/a&gt;以 &lt;code&gt;dateutil&lt;/code&gt; 处理日期时间模棱两可的dateutil方法）为 &lt;code&gt;pytz&lt;/code&gt; 时区不支持倍（见&lt;a href=&quot;http://pytz.sourceforge.net/index.html&quot;&gt;pytz文档&lt;/a&gt;以了解如何 &lt;code&gt;pytz&lt;/code&gt; 不明确日期时间的交易）。要使用 &lt;code&gt;pytz&lt;/code&gt; 本地化不明确的日期时间，请使用&lt;a href=&quot;../reference/api/pandas.timestamp.tz_localize#pandas.Timestamp.tz_localize&quot;&gt; &lt;code&gt;Timestamp.tz_localize()&lt;/code&gt; &lt;/a&gt;。通常，如果您需要直接控制如何处理不明确的日期&lt;a href=&quot;../reference/api/pandas.timestamp.tz_localize#pandas.Timestamp.tz_localize&quot;&gt; &lt;code&gt;Timestamp.tz_localize()&lt;/code&gt; &lt;/a&gt;，我们建议您依赖Timestamp.tz_localize（）。</target>
        </trans-unit>
        <trans-unit id="77ea39534ac1f06e6a5a4da8436b19165b3cdf45" translate="yes" xml:space="preserve">
          <source>For an ordered or unique index, compute the slice indexer for input labels and step.</source>
          <target state="translated">对于一个有序或唯一的索引,计算输入标签和步骤的分片索引器。</target>
        </trans-unit>
        <trans-unit id="9d0316ddeacecfa8d43c002c574469ad7628692a" translate="yes" xml:space="preserve">
          <source>For any 3rd-party extension types, the array type will be an ExtensionArray.</source>
          <target state="translated">对于任何第三方扩展类型,数组类型将是一个ExtensionArray。</target>
        </trans-unit>
        <trans-unit id="3e2da3796382453766522a84a85cb19c666123e8" translate="yes" xml:space="preserve">
          <source>For applying more complex functions on a Series.</source>
          <target state="translated">用于在系列上应用更复杂的函数。</target>
        </trans-unit>
        <trans-unit id="cce66206c4d93fc802e5a5acc42d57f753764528" translate="yes" xml:space="preserve">
          <source>For arithmetic operations, this implementation will try to reconstruct a new &lt;code&gt;ExtensionArray&lt;/code&gt; with the result of the element-wise operation. Whether or not that succeeds depends on whether the operation returns a result that&amp;rsquo;s valid for the &lt;code&gt;ExtensionArray&lt;/code&gt;. If an &lt;code&gt;ExtensionArray&lt;/code&gt; cannot be reconstructed, an ndarray containing the scalars returned instead.</source>
          <target state="translated">对于算术运算，此实现将尝试使用逐元素运算的结果来重建新的 &lt;code&gt;ExtensionArray&lt;/code&gt; 。是否成功取决于操作是否返回对 &lt;code&gt;ExtensionArray&lt;/code&gt; 有效的结果。如果无法重构 &lt;code&gt;ExtensionArray&lt;/code&gt; ，则返回包含标量的ndarray。</target>
        </trans-unit>
        <trans-unit id="d48a831a802c0fa43131f28084da63dc537e014a" translate="yes" xml:space="preserve">
          <source>For array-like input, the &lt;code&gt;.dtype&lt;/code&gt; attribute will be extracted.</source>
          <target state="translated">对于类似数组的输入，将提取 &lt;code&gt;.dtype&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="53cc2f1833c58419b5ef08648eaf112ea8c4dc17" translate="yes" xml:space="preserve">
          <source>For axis, the convention is to use something like:</source>
          <target state="translated">对于轴线,惯例是使用类似以下的东西。</target>
        </trans-unit>
        <trans-unit id="da6740808a23207cdb9b153d35db3bfbad38923e" translate="yes" xml:space="preserve">
          <source>For backwards compatibility, &lt;code&gt;inplace&lt;/code&gt; defaults to &lt;code&gt;True&lt;/code&gt; if not specified. This will change in a future version of pandas - if your code depends on an inplace assignment you should update to explicitly set &lt;code&gt;inplace=True&lt;/code&gt;.</source>
          <target state="translated">为了向后兼容，如果未指定， &lt;code&gt;inplace&lt;/code&gt; 默认为 &lt;code&gt;True&lt;/code&gt; 。这将在将来的熊猫版本中更改-如果您的代码依赖于就地分配，则应更新为显式设置 &lt;code&gt;inplace=True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="88c22dc946f6f6d62702a43123a7fbb69a6a2685" translate="yes" xml:space="preserve">
          <source>For backwards-compatibility, &lt;a href=&quot;../reference/api/pandas.series#pandas.Series&quot;&gt;&lt;code&gt;Series&lt;/code&gt;&lt;/a&gt; infers these as either integer or float dtype</source>
          <target state="translated">为了向后兼容，&lt;a href=&quot;../reference/api/pandas.series#pandas.Series&quot;&gt; &lt;code&gt;Series&lt;/code&gt; 将它们&lt;/a&gt;推断为integer或float dtype</target>
        </trans-unit>
        <trans-unit id="2f7dde26fe01669de65775dcadba882c6971cd2a" translate="yes" xml:space="preserve">
          <source>For backwards-compatibility, &lt;code&gt;object&lt;/code&gt; dtype remains the default type we infer a list of strings to</source>
          <target state="translated">为了向后兼容， &lt;code&gt;object&lt;/code&gt; dtype仍是默认类型，我们推断出字符串列表以</target>
        </trans-unit>
        <trans-unit id="443c463e30a211dc4fb30ceb94018d434457809e" translate="yes" xml:space="preserve">
          <source>For boolean dtypes, this uses &lt;code&gt;operator.xor()&lt;/code&gt; rather than &lt;code&gt;operator.sub()&lt;/code&gt;. The result is calculated according to current dtype in Dataframe, however dtype of the result is always float64.</source>
          <target state="translated">对于布尔型dtype，它使用 &lt;code&gt;operator.xor()&lt;/code&gt; 而不是 &lt;code&gt;operator.sub()&lt;/code&gt; 。根据数据帧中的当前dtype计算结果，但是结果的dtype始终为float64。</target>
        </trans-unit>
        <trans-unit id="db854867e9508de92a0640906e60ab3f05fdd5c0" translate="yes" xml:space="preserve">
          <source>For boolean dtypes, this uses &lt;code&gt;operator.xor()&lt;/code&gt; rather than &lt;code&gt;operator.sub()&lt;/code&gt;. The result is calculated according to current dtype in Series, however dtype of the result is always float64.</source>
          <target state="translated">对于布尔型dtype，它使用 &lt;code&gt;operator.xor()&lt;/code&gt; 而不是 &lt;code&gt;operator.sub()&lt;/code&gt; 。根据Series中的当前dtype计算结果，但是结果的dtype始终为float64。</target>
        </trans-unit>
        <trans-unit id="3e21f801432cdd0a74665ee64582a8a6c3c72f43" translate="yes" xml:space="preserve">
          <source>For column(s)-on-column(s) operations.</source>
          <target state="translated">用于列与列之间的操作。</target>
        </trans-unit>
        <trans-unit id="d641e7cc7c11bb62c80879068b370f0f815e2e7f" translate="yes" xml:space="preserve">
          <source>For column(s)-on-columns(s) operations.</source>
          <target state="translated">用于列与列之间的操作。</target>
        </trans-unit>
        <trans-unit id="ce7ac8dd0ba62a33543b8e693127c8e65d8bb70d" translate="yes" xml:space="preserve">
          <source>For columns with spaces in their name, you can use backtick quoting.</source>
          <target state="translated">对于名称中带有空格的列,可以使用回车引号。</target>
        </trans-unit>
        <trans-unit id="bdd6dbeb2cda0ff9d70317a0dc2f55d6e242e112" translate="yes" xml:space="preserve">
          <source>For comparison methods,</source>
          <target state="translated">对于比较方法:</target>
        </trans-unit>
        <trans-unit id="cae4877c2954aa265da0deff1667bbfd19754912" translate="yes" xml:space="preserve">
          <source>For comparison, a full documentation build may take 15 minutes, but a single section may take 15 seconds. Subsequent builds, which only process portions you have changed, will be faster.</source>
          <target state="translated">相比之下,一个完整的文档构建可能需要15分钟,但一个部分可能需要15秒。随后的构建,只处理你修改的部分,会更快。</target>
        </trans-unit>
        <trans-unit id="e2d5198da410c5c9ecfaa69de0bbd6b29efde29a" translate="yes" xml:space="preserve">
          <source>For compatibility with &lt;a href=&quot;pandas.dataframe.to_csv#pandas.DataFrame.to_csv&quot;&gt;&lt;code&gt;to_csv()&lt;/code&gt;&lt;/a&gt;, to_excel serializes lists and dicts to strings before writing.</source>
          <target state="translated">为了与&lt;a href=&quot;pandas.dataframe.to_csv#pandas.DataFrame.to_csv&quot;&gt; &lt;code&gt;to_csv()&lt;/code&gt; &lt;/a&gt;兼容，to_excel在写入之前将列表和字典序列化为字符串。</target>
        </trans-unit>
        <trans-unit id="71ce00c30a542899b20549373acda54c03ba40ea" translate="yes" xml:space="preserve">
          <source>For compatibility with &lt;code&gt;numpy.take()&lt;/code&gt;. Has no effect on the output.</source>
          <target state="translated">为了与 &lt;code&gt;numpy.take()&lt;/code&gt; 兼容。对输出没有影响。</target>
        </trans-unit>
        <trans-unit id="892f3307167bf604ac2b5846510ad71c09ca1a90" translate="yes" xml:space="preserve">
          <source>For compatibility with &lt;code&gt;to_csv()&lt;/code&gt;, to_excel serializes lists and dicts to strings before writing.</source>
          <target state="translated">为了与 &lt;code&gt;to_csv()&lt;/code&gt; 兼容，to_excel在写入之前将列表和字典序列化为字符串。</target>
        </trans-unit>
        <trans-unit id="0c77fe1409d6ced69fda3a755edf5035461c118d" translate="yes" xml:space="preserve">
          <source>For compatibility with CSV writers, ExcelWriter serializes lists and dicts to strings before writing.</source>
          <target state="translated">为了与 CSV 写入器兼容,ExcelWriter 在写入前将列表和 dicts 序列化为字符串。</target>
        </trans-unit>
        <trans-unit id="421d19eba00bb25c4d4a87440dccf2018ca1e028" translate="yes" xml:space="preserve">
          <source>For compatibility with DataFrame.idxmax. Redundant for application on Series.</source>
          <target state="translated">与DataFrame.idxmax兼容。冗长,适用于系列。</target>
        </trans-unit>
        <trans-unit id="7a82d9cc16bb369d7fbfc0b3e272962659859f5e" translate="yes" xml:space="preserve">
          <source>For compatibility with DataFrame.idxmin. Redundant for application on Series.</source>
          <target state="translated">与DataFrame.idxmin兼容。冗长,适用于系列。</target>
        </trans-unit>
        <trans-unit id="682e58232ae1e457b9e2a1160071d2cc9dae7e41" translate="yes" xml:space="preserve">
          <source>For compatibility with NumPy. Only 0 or None are allowed.</source>
          <target state="translated">为了与NumPy兼容。只允许有0或无。</target>
        </trans-unit>
        <trans-unit id="fd040ea8536374d7db78bffe2fa7be28b925b715" translate="yes" xml:space="preserve">
          <source>For compatibility with other expanding methods. Has no effect on the computed median.</source>
          <target state="translated">为了与其他扩展方法兼容。对计算的中位数没有影响。</target>
        </trans-unit>
        <trans-unit id="0d526a6a537750ab15674ab070a52b26e13fe948" translate="yes" xml:space="preserve">
          <source>For compatibility with other expanding methods. Has no effect on the computed value.</source>
          <target state="translated">为了与其他扩展方法兼容。对计算值没有影响。</target>
        </trans-unit>
        <trans-unit id="62cf001ef6e381fc194a00eece8a3d83bd70384b" translate="yes" xml:space="preserve">
          <source>For compatibility with other expanding methods. Has no effect on the result.</source>
          <target state="translated">为了与其他扩展方法兼容。对结果没有影响。</target>
        </trans-unit>
        <trans-unit id="270f4f8a2d0ddf58665aae97b508e7592b296570" translate="yes" xml:space="preserve">
          <source>For compatibility with other rolling methods. Has no effect on the computed median.</source>
          <target state="translated">为了与其他滚动方法兼容。对计算的中位数没有影响。</target>
        </trans-unit>
        <trans-unit id="7d48069a518f252645211551d5b782a4d3ae50bd" translate="yes" xml:space="preserve">
          <source>For compatibility with other rolling methods. Has no effect on the computed value.</source>
          <target state="translated">为了与其他滚动方法兼容。对计算值没有影响。</target>
        </trans-unit>
        <trans-unit id="92fa9e8d7cc3b93a3c1a5a58e5c858192ccca880" translate="yes" xml:space="preserve">
          <source>For compatibility with other rolling methods. Has no effect on the result.</source>
          <target state="translated">为了与其他轧制方法兼容。对结果没有影响。</target>
        </trans-unit>
        <trans-unit id="ad87d7a33557969da44eab7eea542616525c83ca" translate="yes" xml:space="preserve">
          <source>For compatibility with other string methods. Not used.</source>
          <target state="translated">为了与其他字符串方法兼容。未使用。</target>
        </trans-unit>
        <trans-unit id="417878975f2d756def24125d3c196726898b78a2" translate="yes" xml:space="preserve">
          <source>For compatibility with other window methods. Has no effect on the computed value.</source>
          <target state="translated">为了与其他窗口方法兼容。对计算值没有影响。</target>
        </trans-unit>
        <trans-unit id="8aa6b928c51d22e554165d982b411595147cd7b1" translate="yes" xml:space="preserve">
          <source>For compatibility. Has no effect on the result.</source>
          <target state="translated">对于兼容性。对结果没有影响。</target>
        </trans-unit>
        <trans-unit id="2110c380ed7d3738432180be67c9c94da571483f" translate="yes" xml:space="preserve">
          <source>For complex types, define the subtypes. For &lt;code&gt;dict&lt;/code&gt; and &lt;code&gt;tuple&lt;/code&gt;, as more than one type is present, we use the brackets to help read the type (curly brackets for &lt;code&gt;dict&lt;/code&gt; and normal brackets for &lt;code&gt;tuple&lt;/code&gt;):</source>
          <target state="translated">对于复杂类型，请定义子类型。对于 &lt;code&gt;dict&lt;/code&gt; 和 &lt;code&gt;tuple&lt;/code&gt; ，由于存在不止一种类型，我们使用方括号来帮助读取类型（ &lt;code&gt;dict&lt;/code&gt; 的圆括号和 &lt;code&gt;tuple&lt;/code&gt; 的普通括号）：</target>
        </trans-unit>
        <trans-unit id="7f61a5d4675425ab94021a5387681bff1f104b47" translate="yes" xml:space="preserve">
          <source>For concatenation with a &lt;code&gt;Series&lt;/code&gt; or &lt;code&gt;DataFrame&lt;/code&gt;, it is possible to align the indexes before concatenation by setting the &lt;code&gt;join&lt;/code&gt;-keyword.</source>
          <target state="translated">对于与 &lt;code&gt;Series&lt;/code&gt; 或 &lt;code&gt;DataFrame&lt;/code&gt; 的串联，可以通过设置 &lt;code&gt;join&lt;/code&gt; -keyword在串联之前对齐索引。</target>
        </trans-unit>
        <trans-unit id="eaa1d48873e9f269ce084ff5f17780a27f97b08c" translate="yes" xml:space="preserve">
          <source>For consistency with pandas methods, you should raise an &lt;code&gt;AttributeError&lt;/code&gt; if the data passed to your accessor has an incorrect dtype.</source>
          <target state="translated">为了与pandas方法保持一致，如果传递给访问器的数据具有错误的dtype ，则应引发 &lt;code&gt;AttributeError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e478e047f30809e5637c5cd5a7d528652f15839b" translate="yes" xml:space="preserve">
          <source>For convenience, we provide the &lt;code&gt;Styler.from_custom_template&lt;/code&gt; method that does the same as the custom subclass.</source>
          <target state="translated">为了方便起见，我们提供了与自定义子类相同的 &lt;code&gt;Styler.from_custom_template&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="530ca33a011c894a0aad35a33c68166224cba548" translate="yes" xml:space="preserve">
          <source>For data grouped with &lt;code&gt;by&lt;/code&gt;, return a Series of the above or a numpy array:</source>
          <target state="translated">对于以 &lt;code&gt;by&lt;/code&gt; 分组的数据，返回上述Series或numpy数组：</target>
        </trans-unit>
        <trans-unit id="5b75696dcc2c895e64ec96df623092d2c62062db" translate="yes" xml:space="preserve">
          <source>For datetime64[ns] types, &lt;code&gt;NaT&lt;/code&gt; represents missing values. This is a pseudo-native sentinel value that can be represented by NumPy in a singular dtype (datetime64[ns]). pandas objects provide compatibility between &lt;code&gt;NaT&lt;/code&gt; and &lt;code&gt;NaN&lt;/code&gt;.</source>
          <target state="translated">对于datetime64 [ns]类型， &lt;code&gt;NaT&lt;/code&gt; 表示缺少的值。这是一个伪本机前哨值，可以由NumPy以单数dtype（datetime64 [ns]）表示。熊猫对象提供 &lt;code&gt;NaT&lt;/code&gt; 和 &lt;code&gt;NaN&lt;/code&gt; 之间的兼容性。</target>
        </trans-unit>
        <trans-unit id="165c51e954c9957a1abe9c5f2f1d2a62b2f81090" translate="yes" xml:space="preserve">
          <source>For datetimes,</source>
          <target state="translated">对于日期:</target>
        </trans-unit>
        <trans-unit id="712adfd871e02781142dacd9c5bf9f30bfb7ab0f" translate="yes" xml:space="preserve">
          <source>For datetimes, &lt;code&gt;NaT&lt;/code&gt; (Not a Time) is considered as an NA value.</source>
          <target state="translated">对于日期时间， &lt;code&gt;NaT&lt;/code&gt; （非时间）被视为NA值。</target>
        </trans-unit>
        <trans-unit id="1d718e4f35381c99658c499ed426b9114cf87bab" translate="yes" xml:space="preserve">
          <source>For dict-like &lt;code&gt;new_categories&lt;/code&gt;, extra keys are ignored and categories not in the dictionary are passed through</source>
          <target state="translated">对于类似dict的 &lt;code&gt;new_categories&lt;/code&gt; ，多余的键将被忽略，并且不在字典中的类别将通过</target>
        </trans-unit>
        <trans-unit id="d505a50b69e450b7efa269e808b1acbe1ca46c15" translate="yes" xml:space="preserve">
          <source>For documentation on pyarrow, see &lt;a href=&quot;https://arrow.apache.org/docs/python/index.html&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">有关pyarrow的文档，请参见&lt;a href=&quot;https://arrow.apache.org/docs/python/index.html&quot;&gt;此处&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="85601a197bfcb02f2dc37ddcbfa6b49628b0f64b" translate="yes" xml:space="preserve">
          <source>For downsampling, &lt;code&gt;closed&lt;/code&gt; can be set to &amp;lsquo;left&amp;rsquo; or &amp;lsquo;right&amp;rsquo; to specify which end of the interval is closed:</source>
          <target state="translated">对于下采样，可以将 &lt;code&gt;closed&lt;/code&gt; 设置为&amp;ldquo; left&amp;rdquo;或&amp;ldquo; right&amp;rdquo;，以指定关闭区间的哪一端：</target>
        </trans-unit>
        <trans-unit id="04df7995647b4f7420c27617fdceafceaebe390a" translate="yes" xml:space="preserve">
          <source>For each column/row the number of non-NA/null entries. If</source>
          <target state="translated">每一列/每一行的非NA/空条目数。如果</target>
        </trans-unit>
        <trans-unit id="0e896148fb1025cfcb3bd14a920fb320137f8a96" translate="yes" xml:space="preserve">
          <source>For each column/row the number of non-NA/null entries. If &lt;code&gt;level&lt;/code&gt; is specified returns a &lt;code&gt;DataFrame&lt;/code&gt;.</source>
          <target state="translated">对于每一列/行，非NA /空条目的数量。如果指定了 &lt;code&gt;level&lt;/code&gt; ,则返回 &lt;code&gt;DataFrame&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ee8537ea0c23406bcaff79eb4b083d0a0666a728" translate="yes" xml:space="preserve">
          <source>For each kind of plot (e.g. &lt;code&gt;line&lt;/code&gt;, &lt;code&gt;bar&lt;/code&gt;, &lt;code&gt;scatter&lt;/code&gt;) any additional arguments keywords are passed along to the corresponding matplotlib function (&lt;a href=&quot;https://matplotlib.org/api/_as_gen/matplotlib.axes.Axes.plot.html#matplotlib.axes.Axes.plot&quot;&gt;&lt;code&gt;ax.plot()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://matplotlib.org/api/_as_gen/matplotlib.axes.Axes.bar.html#matplotlib.axes.Axes.bar&quot;&gt;&lt;code&gt;ax.bar()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://matplotlib.org/api/_as_gen/matplotlib.axes.Axes.scatter.html#matplotlib.axes.Axes.scatter&quot;&gt;&lt;code&gt;ax.scatter()&lt;/code&gt;&lt;/a&gt;). These can be used to control additional styling, beyond what pandas provides.</source>
          <target state="translated">对于每种绘图（例如 &lt;code&gt;line&lt;/code&gt; ， &lt;code&gt;bar&lt;/code&gt; ， &lt;code&gt;scatter&lt;/code&gt; ），任何其他自变量关键字都将传递到相应的matplotlib函数（&lt;a href=&quot;https://matplotlib.org/api/_as_gen/matplotlib.axes.Axes.plot.html#matplotlib.axes.Axes.plot&quot;&gt; &lt;code&gt;ax.plot()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;https://matplotlib.org/api/_as_gen/matplotlib.axes.Axes.bar.html#matplotlib.axes.Axes.bar&quot;&gt; &lt;code&gt;ax.bar()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;https://matplotlib.org/api/_as_gen/matplotlib.axes.Axes.scatter.html#matplotlib.axes.Axes.scatter&quot;&gt; &lt;code&gt;ax.scatter()&lt;/code&gt; &lt;/a&gt;）。除了熊猫提供的样式外，这些样式还可用于控制其他样式。</target>
        </trans-unit>
        <trans-unit id="cf3b6a87dfe0995e3d922eddc4fa9a03403c193e" translate="yes" xml:space="preserve">
          <source>For each row in the left DataFrame:</source>
          <target state="translated">对于左侧DataFrame中的每一行。</target>
        </trans-unit>
        <trans-unit id="6c8f7af9b2a4abfa72e760e544079f542f23d1d2" translate="yes" xml:space="preserve">
          <source>For each string in the Series, extract groups from all matches of regular expression and return a DataFrame with one row for each match and one column for each group.</source>
          <target state="translated">对于Series中的每个字符串,从正则表达式的所有匹配中提取分组,并返回一个DataFrame,每个匹配为一行,每个分组为一列。</target>
        </trans-unit>
        <trans-unit id="0a8013b5a5cfc1ecec1d78fd3896b2b663275d0b" translate="yes" xml:space="preserve">
          <source>For each subject string in the Series, extract groups from all matches of regular expression pat.</source>
          <target state="translated">对于Series中的每个主题字符串,从正则表达式pat的所有匹配中提取分组。</target>
        </trans-unit>
        <trans-unit id="ba1438dd50f0f247483fe45f89b371bb933d5d9a" translate="yes" xml:space="preserve">
          <source>For each subject string in the Series, extract groups from all matches of regular expression pat. When each subject string in the Series has exactly one match, extractall(pat).xs(0, level=&amp;rsquo;match&amp;rsquo;) is the same as extract(pat).</source>
          <target state="translated">对于系列中的每个主题字符串，从正则表达式pat的所有匹配项中提取组。当系列中的每个主题字符串都具有一个完全匹配时，extractall（pat）.xs（0，level ='match'）与extract（pat）相同。</target>
        </trans-unit>
        <trans-unit id="8a667787b0b2314ce27d7dc11e4f2ed9fd830304" translate="yes" xml:space="preserve">
          <source>For each subject string in the Series, extract groups from the first match of regular expression</source>
          <target state="translated">对于Series中的每个主题字符串,从正则表达式的第一次匹配中提取分组</target>
        </trans-unit>
        <trans-unit id="cf885ae2709de792f6cfe528fc9715e262e95052" translate="yes" xml:space="preserve">
          <source>For each subject string in the Series, extract groups from the first match of regular expression &lt;code&gt;pat&lt;/code&gt;.</source>
          <target state="translated">对于系列中的每个主题字符串，从正则表达式 &lt;code&gt;pat&lt;/code&gt; 的第一个匹配项中提取组。</target>
        </trans-unit>
        <trans-unit id="3b263c3151928f3ce7454cfc3f55c4fb3140e1b7" translate="yes" xml:space="preserve">
          <source>For ease of implementation and consistency with operations between pandas and NumPy ndarrays, we recommend &lt;em&gt;not&lt;/em&gt; handling Series and Indexes in your binary ops. Instead, you should detect these cases and return &lt;code&gt;NotImplemented&lt;/code&gt;. When pandas encounters an operation like &lt;code&gt;op(Series, ExtensionArray)&lt;/code&gt;, pandas will</source>
          <target state="translated">为了便于实现并与pandas和NumPy ndarrays之间的操作保持一致，我们建议&lt;em&gt;不要&lt;/em&gt;在二进制操作中处理Series和Indexes。相反，您应该检测到这些情况并返回 &lt;code&gt;NotImplemented&lt;/code&gt; 。当熊猫遇到像 &lt;code&gt;op(Series, ExtensionArray)&lt;/code&gt; 这样的操作时，熊猫会</target>
        </trans-unit>
        <trans-unit id="0b428761c16dd513688f80f7e2d35def7bd81810" translate="yes" xml:space="preserve">
          <source>For element-wise operations.</source>
          <target state="translated">对于元素的操作。</target>
        </trans-unit>
        <trans-unit id="9efa8ddf7a616d448dd8c77c680a4296fa2076d4" translate="yes" xml:space="preserve">
          <source>For elementwise operations.</source>
          <target state="translated">对于元素方面的操作。</target>
        </trans-unit>
        <trans-unit id="37c305823aeeca0be506f34cc3e70904d41c758f" translate="yes" xml:space="preserve">
          <source>For example, (3, 5) will display the subplots using 3 columns and 5 rows, starting from the top-left.</source>
          <target state="translated">例如,(3,5)将使用3列5行,从左上角开始显示子图。</target>
        </trans-unit>
        <trans-unit id="e9b129c0fba20f5ef04003c663591ea8463c7535" translate="yes" xml:space="preserve">
          <source>For example, &lt;a href=&quot;https://dask.org&quot;&gt;Dask&lt;/a&gt;, a parallel computing library, has &lt;a href=&quot;https://docs.dask.org/en/latest/dataframe.html&quot;&gt;dask.dataframe&lt;/a&gt;, a pandas-like API for working with larger than memory datasets in parallel. Dask can use multiple threads or processes on a single machine, or a cluster of machines to process data in parallel.</source>
          <target state="translated">例如，&lt;a href=&quot;https://dask.org&quot;&gt;DASK&lt;/a&gt;，并行计算库，具有&lt;a href=&quot;https://docs.dask.org/en/latest/dataframe.html&quot;&gt;dask.dataframe&lt;/a&gt;，一个熊猫状API用于具有比在并行存储器的数据集更大的工作。Dask可以在单台机器或一台机器集群上使用多个线程或进程来并行处理数据。</target>
        </trans-unit>
        <trans-unit id="180f123bbf972f2172b8b06a94f7d25e2428e823" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;pd.NA&lt;/code&gt; propagates in arithmetic operations, similarly to &lt;code&gt;np.nan&lt;/code&gt;:</source>
          <target state="translated">例如， &lt;code&gt;pd.NA&lt;/code&gt; 通过算术运算传播，类似于 &lt;code&gt;np.nan&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="c115a20f4c461197761f6446cee18ae7403dd35a" translate="yes" xml:space="preserve">
          <source>For example, a bar plot can be created the following way:</source>
          <target state="translated">例如,可以通过以下方式创建一个条形图。</target>
        </trans-unit>
        <trans-unit id="74da2e0f3f8c3b1e02cb504bb3d9cefb8792c71f" translate="yes" xml:space="preserve">
          <source>For example, for the logical &amp;ldquo;or&amp;rdquo; operation (&lt;code&gt;|&lt;/code&gt;), if one of the operands is &lt;code&gt;True&lt;/code&gt;, we already know the result will be &lt;code&gt;True&lt;/code&gt;, regardless of the other value (so regardless the missing value would be &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt;). In this case, &lt;code&gt;pd.NA&lt;/code&gt; does not propagate:</source>
          <target state="translated">例如，对于逻辑&amp;ldquo;或&amp;rdquo;运算（ &lt;code&gt;|&lt;/code&gt; ），如果其中一个操作数为 &lt;code&gt;True&lt;/code&gt; ，则我们已经知道结果将为 &lt;code&gt;True&lt;/code&gt; ，而与其他值无关（因此无论缺失值是 &lt;code&gt;True&lt;/code&gt; 还是 &lt;code&gt;False&lt;/code&gt; ）。在这种情况下， &lt;code&gt;pd.NA&lt;/code&gt; 不会传播：</target>
        </trans-unit>
        <trans-unit id="67e85a7f7191a1ab3472f78358b6af5d8dd96860" translate="yes" xml:space="preserve">
          <source>For example, for two dates that are in British Summer Time (and so would normally be GMT+1), both the following asserts evaluate as true:</source>
          <target state="translated">例如,对于两个在英国夏令时的日期(因此通常是GMT+1),以下两个断言都评估为真。</target>
        </trans-unit>
        <trans-unit id="ab93ecae85bc77f392f050f7d7da5999a2438c2f" translate="yes" xml:space="preserve">
          <source>For example, having the right endpoint open is useful in many problems that require that there is no contamination from present information back to past information. This allows the rolling window to compute statistics &amp;ldquo;up to that point in time&amp;rdquo;, but not including that point in time.</source>
          <target state="translated">例如，在需要从当前信息到过去信息不存在污染的许多问题中，打开正确的端点很有用。这允许滚动窗口&amp;ldquo;直至该时间点&amp;rdquo;计算统计信息，但不包括该时间点。</target>
        </trans-unit>
        <trans-unit id="7bc0883976afb6fd2e8d1608bbacecae53f40d32" translate="yes" xml:space="preserve">
          <source>For example, if one of your columns is called &lt;code&gt;a a&lt;/code&gt; and you want to sum it with &lt;code&gt;b&lt;/code&gt;, your query should be &lt;code&gt;`a a` + b&lt;/code&gt;.</source>
          <target state="translated">例如，如果您的一列称为 &lt;code&gt;a a&lt;/code&gt; 并且您想将其与 &lt;code&gt;b&lt;/code&gt; 相加，则查询应为 &lt;code&gt;`a a` + b&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8837e09177570ef2fc18f8fe482af8df2c775edb" translate="yes" xml:space="preserve">
          <source>For example, if we have the following :class:&lt;code&gt;DataFrame&lt;/code&gt;:</source>
          <target state="translated">例如，如果我们有以下：class： &lt;code&gt;DataFrame&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="6ca22605cae37c216e28e1cb77d486844be5c2b8" translate="yes" xml:space="preserve">
          <source>For example, in the following case setting the value has no effect:</source>
          <target state="translated">例如,在以下情况下,设置该值没有任何效果。</target>
        </trans-unit>
        <trans-unit id="b1b1413b8890ab066d563b1385f683dd21254b13" translate="yes" xml:space="preserve">
          <source>For example, lists are considered iterators but not strings or datetime objects.</source>
          <target state="translated">例如,列表被认为是迭代器,但不是字符串或日期时间对象。</target>
        </trans-unit>
        <trans-unit id="279a52aeb05ecab7dc34b429cf7719ea2fbf16d7" translate="yes" xml:space="preserve">
          <source>For example, numeric containers will always use &lt;code&gt;NaN&lt;/code&gt; regardless of the missing value type chosen:</source>
          <target state="translated">例如，数字容器将始终使用 &lt;code&gt;NaN&lt;/code&gt; ,而不管所选的缺失值类型如何：</target>
        </trans-unit>
        <trans-unit id="464d922a7e68fc268ab6bbb6390b2b16e301b70a" translate="yes" xml:space="preserve">
          <source>For example, pandas supports:</source>
          <target state="translated">例如,大熊猫支持。</target>
        </trans-unit>
        <trans-unit id="055a735f82bf582d42d1192000e2da2f55f4b258" translate="yes" xml:space="preserve">
          <source>For example, suppose we wished to standardize the data within each group:</source>
          <target state="translated">例如,假设我们希望将每组内的数据标准化。</target>
        </trans-unit>
        <trans-unit id="96b628fab275ecfc77c43e9e5d58c18b31cbc026" translate="yes" xml:space="preserve">
          <source>For example, the above conjunction can be written without parentheses. Alternatively, you can use the &lt;code&gt;'python'&lt;/code&gt; parser to enforce strict Python semantics.</source>
          <target state="translated">例如，上面的连接可以写成不带括号。另外，您可以使用 &lt;code&gt;'python'&lt;/code&gt; 解析器强制执行严格的Python语义。</target>
        </trans-unit>
        <trans-unit id="9e6a6c303a99087c83038e8fde36d84f175775ba" translate="yes" xml:space="preserve">
          <source>For example, the memory usage of the &lt;code&gt;DataFrame&lt;/code&gt; below is shown when calling &lt;a href=&quot;../reference/api/pandas.dataframe.info#pandas.DataFrame.info&quot;&gt;&lt;code&gt;info()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">例如，调用&lt;a href=&quot;../reference/api/pandas.dataframe.info#pandas.DataFrame.info&quot;&gt; &lt;code&gt;info()&lt;/code&gt; &lt;/a&gt;时，将 &lt;code&gt;DataFrame&lt;/code&gt; 以下DataFrame的内存使用情况：</target>
        </trans-unit>
        <trans-unit id="1cb80fbe94eaef5ddb083f1c3b19d25468c88f28" translate="yes" xml:space="preserve">
          <source>For example, to back-propagate the last valid value to fill the &lt;code&gt;NaN&lt;/code&gt; values, pass &lt;code&gt;bfill&lt;/code&gt; as an argument to the &lt;code&gt;method&lt;/code&gt; keyword.</source>
          <target state="translated">例如，要反向传播最后一个有效值以填充 &lt;code&gt;NaN&lt;/code&gt; 值， &lt;code&gt;bfill&lt;/code&gt; 作为参数传递给 &lt;code&gt;method&lt;/code&gt; 关键字。</target>
        </trans-unit>
        <trans-unit id="b6d5779d89e47439b1710cbcaea1bead76736b3f" translate="yes" xml:space="preserve">
          <source>For example, to localize and convert a naive stamp to time zone aware.</source>
          <target state="translated">例如,将天真印记本地化并转换为时区感知。</target>
        </trans-unit>
        <trans-unit id="35e721fe6c3eeacb93a3450db759022142d159e0" translate="yes" xml:space="preserve">
          <source>For example, to read in a &lt;code&gt;MultiIndex&lt;/code&gt; index without names:</source>
          <target state="translated">例如，要读取不带名称的 &lt;code&gt;MultiIndex&lt;/code&gt; 索引，请执行以下操作：</target>
        </trans-unit>
        <trans-unit id="2faabbb8efeb51a51e437c62ae28599c9954e434" translate="yes" xml:space="preserve">
          <source>For example, to select &lt;code&gt;bool&lt;/code&gt; columns:</source>
          <target state="translated">例如，要选择 &lt;code&gt;bool&lt;/code&gt; 列：</target>
        </trans-unit>
        <trans-unit id="1bc6c73acb0d1f19b5693e06a33934d86173f09a" translate="yes" xml:space="preserve">
          <source>For example, to select all numeric and boolean columns while excluding unsigned integers:</source>
          <target state="translated">例如,选择所有数字和布尔值列,同时排除无符号整数。</target>
        </trans-unit>
        <trans-unit id="f4fe295591361842d5833db2be6f9819f1f994ac" translate="yes" xml:space="preserve">
          <source>For example, we can fit a regression using statsmodels. Their API expects a formula first and a &lt;code&gt;DataFrame&lt;/code&gt; as the second argument, &lt;code&gt;data&lt;/code&gt;. We pass in the function, keyword pair &lt;code&gt;(sm.ols, 'data')&lt;/code&gt; to &lt;code&gt;pipe&lt;/code&gt;:</source>
          <target state="translated">例如，我们可以使用statsmodels拟合回归。他们的API要求首先使用公式，然后将 &lt;code&gt;DataFrame&lt;/code&gt; 作为第二个参数 &lt;code&gt;data&lt;/code&gt; 。我们将关键字对 &lt;code&gt;(sm.ols, 'data')&lt;/code&gt; 的函数传递给 &lt;code&gt;pipe&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="52893b067b3f51c5e418dd1219158d210548e5cb" translate="yes" xml:space="preserve">
          <source>For example, when having missing values in a Series with the nullable integer dtype, it will use &lt;code&gt;pd.NA&lt;/code&gt;:</source>
          <target state="translated">例如，当在具有可为空的整数 &lt;code&gt;pd.NA&lt;/code&gt; 的Series中缺少值时，它将使用pd.NA：</target>
        </trans-unit>
        <trans-unit id="9030653cea0c8e5d577e02dac683c6b975cca384" translate="yes" xml:space="preserve">
          <source>For example, with a single value:</source>
          <target state="translated">例如,用单值。</target>
        </trans-unit>
        <trans-unit id="b80548da1794b78acac386b479af60bc8d680d48" translate="yes" xml:space="preserve">
          <source>For example, with tabular data (DataFrame) it is more semantically helpful to think of the &lt;strong&gt;index&lt;/strong&gt; (the rows) and the &lt;strong&gt;columns&lt;/strong&gt; rather than axis 0 and axis 1. Iterating through the columns of the DataFrame thus results in more readable code:</source>
          <target state="translated">例如，对于表格数据（DataFrame），考虑&lt;strong&gt;索引&lt;/strong&gt;（行）和&lt;strong&gt;列&lt;/strong&gt;而不是轴0和轴1 在语义上会有所帮助。因此，遍历DataFrame的列将产生更具可读性的代码：</target>
        </trans-unit>
        <trans-unit id="c46fc59b290c4826a3cc5386a362ae8c173d4231" translate="yes" xml:space="preserve">
          <source>For example, you might want to compare two &lt;code&gt;DataFrame&lt;/code&gt; and stack their differences side by side.</source>
          <target state="translated">例如，您可能要比较两个 &lt;code&gt;DataFrame&lt;/code&gt; 并并排堆叠它们的差异。</target>
        </trans-unit>
        <trans-unit id="2f42ece28b7e9e63b840a5e75141439ae2c615b2" translate="yes" xml:space="preserve">
          <source>For example.</source>
          <target state="translated">例如:</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例如:</target>
        </trans-unit>
        <trans-unit id="d4c2fcd64fb673a3f628441e0740432a8e29358c" translate="yes" xml:space="preserve">
          <source>For example: &lt;code&gt;fillna, ffill, bfill, shift.&lt;/code&gt;.</source>
          <target state="translated">例如： &lt;code&gt;fillna, ffill, bfill, shift.&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="852c46d829944b38ac825ba6035e46611acbb92c" translate="yes" xml:space="preserve">
          <source>For example: &lt;code&gt;head, tail&lt;/code&gt;.</source>
          <target state="translated">例如： &lt;code&gt;head, tail&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0e2a014e51b9811cdb8c29dcdc0fa6405e58b0d3" translate="yes" xml:space="preserve">
          <source>For example; we might have &lt;code&gt;trades&lt;/code&gt; and &lt;code&gt;quotes&lt;/code&gt; and we want to &lt;code&gt;asof&lt;/code&gt; merge them.</source>
          <target state="translated">例如; 我们可能有 &lt;code&gt;trades&lt;/code&gt; 和 &lt;code&gt;quotes&lt;/code&gt; ，我们希望 &lt;code&gt;asof&lt;/code&gt; 合并。</target>
        </trans-unit>
        <trans-unit id="91b2e9351ebfbbc5dedad682a1223e44fcc8a705" translate="yes" xml:space="preserve">
          <source>For examples that use the &lt;code&gt;StringIO&lt;/code&gt; class, make sure you import it according to your Python version, i.e. &lt;code&gt;from StringIO import StringIO&lt;/code&gt; for Python 2 and &lt;code&gt;from io import StringIO&lt;/code&gt; for Python 3.</source>
          <target state="translated">对于使用 &lt;code&gt;StringIO&lt;/code&gt; 类的示例，请确保根据您的Python版本 &lt;code&gt;from StringIO import StringIO&lt;/code&gt; ，即从StringIO导入 Python 2的StringIO和 &lt;code&gt;from io import StringIO&lt;/code&gt; Python 3的StringIO。</target>
        </trans-unit>
        <trans-unit id="0b492ff26ca6868cc19ebcd9584bb49a83b19653" translate="yes" xml:space="preserve">
          <source>For examples that use the &lt;code&gt;StringIO&lt;/code&gt; class, make sure you import it with &lt;code&gt;from io import StringIO&lt;/code&gt; for Python 3.</source>
          <target state="translated">对于使用 &lt;code&gt;StringIO&lt;/code&gt; 类的示例，请确保 &lt;code&gt;from io import StringIO&lt;/code&gt; for Python 3导入。</target>
        </trans-unit>
        <trans-unit id="9283b22c9244a562200262d59ce7ac558c716200" translate="yes" xml:space="preserve">
          <source>For explicit control over the matching and broadcasting behavior, see the section on &lt;a href=&quot;basics#basics-binop&quot;&gt;flexible binary operations&lt;/a&gt;.</source>
          <target state="translated">有关对匹配和广播行为的显式控制，请参见关于&lt;a href=&quot;basics#basics-binop&quot;&gt;灵活的二进制操作&lt;/a&gt;的部分。</target>
        </trans-unit>
        <trans-unit id="ea3aa86a7b39570367d49900d470e7176b05cd6d" translate="yes" xml:space="preserve">
          <source>For extension dtypes with arguments the following may be an adequate implementation.</source>
          <target state="translated">对于带参数的扩展dtypes,以下可能是一个适当的实现。</target>
        </trans-unit>
        <trans-unit id="4c684be8400a56e476dac6a264012c6b6dd3de56" translate="yes" xml:space="preserve">
          <source>For extension types, &lt;code&gt;to_numpy()&lt;/code&gt;&lt;em&gt;may&lt;/em&gt; require copying data and coercing the result to a NumPy type (possibly object), which may be expensive. When you need a no-copy reference to the underlying data, &lt;a href=&quot;pandas.series.array#pandas.Series.array&quot;&gt;&lt;code&gt;Series.array&lt;/code&gt;&lt;/a&gt; should be used instead.</source>
          <target state="translated">对于扩展类型， &lt;code&gt;to_numpy()&lt;/code&gt; &lt;em&gt;可能&lt;/em&gt;需要复制数据并将结果强制为NumPy类型（可能是对象），这可能会很昂贵。当需要对基础数据的无副本引用时，应改用&lt;a href=&quot;pandas.series.array#pandas.Series.array&quot;&gt; &lt;code&gt;Series.array&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="03b1f4bf9be095aecf99c6cb089e00e05b6c05b6" translate="yes" xml:space="preserve">
          <source>For extension types, like Categorical, the actual ExtensionArray is returned</source>
          <target state="translated">对于扩展类型,如Categorical,实际的ExtensionArray将被返回。</target>
        </trans-unit>
        <trans-unit id="fae567579428a20098b6a5f9391d3703064bf4b8" translate="yes" xml:space="preserve">
          <source>For finer-tuned control, see hierarchical indexing documentation along with the related stack/unstack methods.</source>
          <target state="translated">关于更精细的控制,请参见分层索引文档以及相关的堆栈/解堆方法。</target>
        </trans-unit>
        <trans-unit id="9b49eeebdd1bc77e11a74ab6654b10dab27ab314" translate="yes" xml:space="preserve">
          <source>For float arg, precision rounding might happen. To prevent unexpected behavior use a fixed-width exact type.</source>
          <target state="translated">对于float arg,可能会发生精确的四舍五入。为了防止意外的行为,使用固定宽度的精确类型。</target>
        </trans-unit>
        <trans-unit id="2425d9f00218ce8436b5df2b98dc0bfa0e2d7bcb" translate="yes" xml:space="preserve">
          <source>For frequencies that evenly subdivide 1 day, the &amp;ldquo;origin&amp;rdquo; of the aggregated intervals. For example, for &amp;lsquo;5min&amp;rsquo; frequency, base could range from 0 through 4. Defaults to 0.</source>
          <target state="translated">对于平均细分为1天的频率，则是汇总间隔的&amp;ldquo;起点&amp;rdquo;。例如，对于&amp;ldquo; 5min&amp;rdquo;频率，基数范围可以从0到4。默认值为0。</target>
        </trans-unit>
        <trans-unit id="902b44edc63b15cf2b27d7f9c8b037f4c244432a" translate="yes" xml:space="preserve">
          <source>For further details and examples see the &lt;code&gt;mask&lt;/code&gt; documentation in &lt;a href=&quot;../../user_guide/indexing#indexing-where-mask&quot;&gt;indexing&lt;/a&gt;.</source>
          <target state="translated">有关更多详细信息和示例，请参见&lt;a href=&quot;../../user_guide/indexing#indexing-where-mask&quot;&gt;indexing中&lt;/a&gt;的 &lt;code&gt;mask&lt;/code&gt; 文档。</target>
        </trans-unit>
        <trans-unit id="b2bcb4c081d2c20234d293359cc695af15e903af" translate="yes" xml:space="preserve">
          <source>For further details and examples see the &lt;code&gt;query&lt;/code&gt; documentation in &lt;a href=&quot;../../user_guide/indexing#indexing-query&quot;&gt;indexing&lt;/a&gt;.</source>
          <target state="translated">有关更多详细信息和示例，请参见&lt;a href=&quot;../../user_guide/indexing#indexing-query&quot;&gt;indexing中&lt;/a&gt;的 &lt;code&gt;query&lt;/code&gt; 文档。</target>
        </trans-unit>
        <trans-unit id="04f143995453a00fe6d03094e989011811f9955e" translate="yes" xml:space="preserve">
          <source>For further details and examples see the &lt;code&gt;where&lt;/code&gt; documentation in &lt;a href=&quot;../../user_guide/indexing#indexing-where-mask&quot;&gt;indexing&lt;/a&gt;.</source>
          <target state="translated">有关更多详细信息和示例，请参见&lt;a href=&quot;../../user_guide/indexing#indexing-where-mask&quot;&gt;索引中&lt;/a&gt;的 &lt;code&gt;where&lt;/code&gt; 文档。</target>
        </trans-unit>
        <trans-unit id="561b283987d4cf733b9db1d454e282ce47e5c4fb" translate="yes" xml:space="preserve">
          <source>For further details see Wikipedia&amp;rsquo;s entry for &lt;a href=&quot;https://en.wikipedia.org/wiki/Box_plot&quot;&gt;boxplot&lt;/a&gt;.</source>
          <target state="translated">有关更多详细信息，请参见Wikipedia的&lt;a href=&quot;https://en.wikipedia.org/wiki/Box_plot&quot;&gt;boxplot&lt;/a&gt;条目。</target>
        </trans-unit>
        <trans-unit id="0990c38a717ea76a4fa9438979f01efd090f8b2b" translate="yes" xml:space="preserve">
          <source>For getting &lt;em&gt;multiple&lt;/em&gt; indexers, using &lt;code&gt;.get_indexer&lt;/code&gt;:</source>
          <target state="translated">要获取&lt;em&gt;多个&lt;/em&gt;索引器，请使用 &lt;code&gt;.get_indexer&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="0bd9b0f46db1b41a174605df3b4f48986222dfc0" translate="yes" xml:space="preserve">
          <source>For getting a cross section using a label (equivalent to &lt;code&gt;df.xs('a')&lt;/code&gt;):</source>
          <target state="translated">要使用标签获取横截面（相当于 &lt;code&gt;df.xs('a')&lt;/code&gt; ）：</target>
        </trans-unit>
        <trans-unit id="032dcab4ce9d2e8b77bdeca4cad14954ff5577a1" translate="yes" xml:space="preserve">
          <source>For getting a cross section using a label:</source>
          <target state="translated">用于使用标签获取截面。</target>
        </trans-unit>
        <trans-unit id="118c5cc152fdfdcf7aa3b2bff7653d84abd6eb16" translate="yes" xml:space="preserve">
          <source>For getting a cross section using an integer position (equiv to &lt;code&gt;df.xs(1)&lt;/code&gt;):</source>
          <target state="translated">为了使用整数位置（ &lt;code&gt;df.xs(1)&lt;/code&gt; ）获取横截面：</target>
        </trans-unit>
        <trans-unit id="113519e4cc9b0efdd9900ae4c24a32a3db774fe2" translate="yes" xml:space="preserve">
          <source>For getting a scalar value:</source>
          <target state="translated">用于获取一个标量值。</target>
        </trans-unit>
        <trans-unit id="6fac7e1124f85b3137e77848161606d5662375f8" translate="yes" xml:space="preserve">
          <source>For getting a value explicitly:</source>
          <target state="translated">用于明确地获取一个值。</target>
        </trans-unit>
        <trans-unit id="2738da994f1d2422123b7b031dad5137a55cd5cb" translate="yes" xml:space="preserve">
          <source>For getting fast access to a scalar (equivalent to the prior method):</source>
          <target state="translated">用于快速访问一个标量(相当于前面的方法)。</target>
        </trans-unit>
        <trans-unit id="e1a207a7b28894f03e7b2c69ac4c08ae25438e03" translate="yes" xml:space="preserve">
          <source>For getting values with a boolean array:</source>
          <target state="translated">用于获取布尔数组的值。</target>
        </trans-unit>
        <trans-unit id="6fedd905694f9b08a1d2eb71c34703058e37022c" translate="yes" xml:space="preserve">
          <source>For historical reasons, &lt;code&gt;df.groupby(&quot;g&quot;).boxplot()&lt;/code&gt; is not equivalent to &lt;code&gt;df.boxplot(by=&quot;g&quot;)&lt;/code&gt;. See &lt;a href=&quot;visualization#visualization-box-return&quot;&gt;here&lt;/a&gt; for an explanation.</source>
          <target state="translated">由于历史原因， &lt;code&gt;df.groupby(&quot;g&quot;).boxplot()&lt;/code&gt; 不等同于 &lt;code&gt;df.boxplot(by=&quot;g&quot;)&lt;/code&gt; 。请参阅&lt;a href=&quot;visualization#visualization-box-return&quot;&gt;此处&lt;/a&gt;以获取解释。</target>
        </trans-unit>
        <trans-unit id="3225ed6fd0670309a94a939659df2b83e2c25cc5" translate="yes" xml:space="preserve">
          <source>For holidays that occur on fixed dates (e.g., US Memorial Day or July 4th) an observance rule determines when that holiday is observed if it falls on a weekend or some other non-observed day. Defined observance rules are:</source>
          <target state="translated">对于固定日期的节日(如美国纪念日或7月4日),如果该节日是在周末或其他不固定的日子,则由纪念规则决定何时举行。确定的纪念规则有:</target>
        </trans-unit>
        <trans-unit id="edc0d28fce40bea1f1bbc84b7706e65202ac0cbe" translate="yes" xml:space="preserve">
          <source>For homogeneous data, directly modifying the values via the &lt;code&gt;values&lt;/code&gt; attribute or advanced indexing.</source>
          <target state="translated">对于同类数据，可通过 &lt;code&gt;values&lt;/code&gt; 属性或高级索引直接修改值。</target>
        </trans-unit>
        <trans-unit id="6348b513eb36c3c730e52d3d6019959489fce286" translate="yes" xml:space="preserve">
          <source>For indexes, an ndarray of booleans is returned.</source>
          <target state="translated">对于索引,将返回一个布尔值的ndarray。</target>
        </trans-unit>
        <trans-unit id="428e2135af050a51cafb232e6421b79573443ff3" translate="yes" xml:space="preserve">
          <source>For information on key sorting by value, see &lt;a href=&quot;#basics-sort-value-key&quot;&gt;value sorting&lt;/a&gt;.</source>
          <target state="translated">有关按值对键进行排序的信息，请参见&lt;a href=&quot;#basics-sort-value-key&quot;&gt;值排序&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="23b7041567e33cbc564ac905e83c0e92b5fee08b" translate="yes" xml:space="preserve">
          <source>For instance,</source>
          <target state="translated">例如:</target>
        </trans-unit>
        <trans-unit id="2cea0e11e959437e39c83368983569ee0fc09951" translate="yes" xml:space="preserve">
          <source>For instance, a contrived way to transpose the DataFrame would be:</source>
          <target state="translated">例如,换位DataFrame的人为方法是。</target>
        </trans-unit>
        <trans-unit id="7360c98165ac7cbc45eafb9abb65b0f0fd420961" translate="yes" xml:space="preserve">
          <source>For instance, here is a boxplot representing five trials of 10 observations of a uniform random variable on [0,1).</source>
          <target state="translated">例如,这里是一个boxplot,表示在[0,1)上对一个均匀随机变量的10个观测值进行5次试验。</target>
        </trans-unit>
        <trans-unit id="73914a15d78531d14b7c4a1d527d11bb2e0734dc" translate="yes" xml:space="preserve">
          <source>For instance, you can use the &lt;code&gt;converters&lt;/code&gt; argument of &lt;a href=&quot;../reference/api/pandas.read_csv#pandas.read_csv&quot;&gt;&lt;code&gt;read_csv()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">例如，您可以使用&lt;a href=&quot;../reference/api/pandas.read_csv#pandas.read_csv&quot;&gt; &lt;code&gt;read_csv()&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;converters&lt;/code&gt; 参数：</target>
        </trans-unit>
        <trans-unit id="abc897209b2f98b7966665fa36a5eddbbc44f66d" translate="yes" xml:space="preserve">
          <source>For instance:</source>
          <target state="translated">例如:</target>
        </trans-unit>
        <trans-unit id="e4019291d8f62995f383f47da4c2a3a51becdabb" translate="yes" xml:space="preserve">
          <source>For interaction with Apache Arrow (pyarrow), a &lt;code&gt;__from_arrow__&lt;/code&gt; method can be implemented: this method receives a pyarrow Array or ChunkedArray as only argument and is expected to return the appropriate pandas ExtensionArray for this dtype and the passed values:</source>
          <target state="translated">为了与Apache Arrow（pyarrow）进行交互，可以实现 &lt;code&gt;__from_arrow__&lt;/code&gt; 方法：该方法将pyarrow Array或ChunkedArray作为唯一参数，并期望针对此dtype和传递的值返回适当的熊猫ExtensionArray：</target>
        </trans-unit>
        <trans-unit id="1d7adad8c65d360dc936e8663cd8abea67d035de" translate="yes" xml:space="preserve">
          <source>For internal compatibility with numpy arrays.</source>
          <target state="translated">为了与numpy数组内部兼容。</target>
        </trans-unit>
        <trans-unit id="3938742ad221462b3d5ac3cfbe2cc1e25f69fdff" translate="yes" xml:space="preserve">
          <source>For internal compatibility with the Index API.</source>
          <target state="translated">为了与Index API内部兼容。</target>
        </trans-unit>
        <trans-unit id="f8def0800904e304ec124f027edd8aa6dddd1377" translate="yes" xml:space="preserve">
          <source>For internal compatibility with with the Index API.</source>
          <target state="translated">为了与Index API的内部兼容性。</target>
        </trans-unit>
        <trans-unit id="de1cb23caf7dbeb301ffad25e4368576f7f6f007" translate="yes" xml:space="preserve">
          <source>For keyword arguments with a default value, the default will be listed after a comma at the end of the type. The exact form of the type in this case will be &amp;ldquo;int, default 0&amp;rdquo;. In some cases it may be useful to explain what the default argument means, which can be added after a comma &amp;ldquo;int, default -1, meaning all cpus&amp;rdquo;.</source>
          <target state="translated">对于具有默认值的关键字参数，默认值将在类型末尾的逗号后列出。在这种情况下，类型的确切形式为&amp;ldquo; int，默认为0&amp;rdquo;。在某些情况下，解释默认参数的含义可能很有用，可以在逗号&amp;ldquo; int，默认为-1，表示所有cpus&amp;rdquo;之后添加该参数。</target>
        </trans-unit>
        <trans-unit id="0adaeb3f1106850f9ae3027ebeacc87af327953c" translate="yes" xml:space="preserve">
          <source>For labeled, non-time series data, you may wish to produce a bar plot:</source>
          <target state="translated">对于有标签的非时间序列数据,您可能希望制作一个条形图。</target>
        </trans-unit>
        <trans-unit id="e6666e77264efaa6a460903552fe331ad87484b8" translate="yes" xml:space="preserve">
          <source>For lack of &lt;code&gt;NA&lt;/code&gt; (missing) support from the ground up in NumPy and Python in general, we were given the difficult choice between either:</source>
          <target state="translated">通常，由于NumPy和Python中根本没有 &lt;code&gt;NA&lt;/code&gt; （缺失）支持，因此我们在以下两种情况之间选择了困难的选择：</target>
        </trans-unit>
        <trans-unit id="5d68fbcf912c893f2905459001aa69261085393a" translate="yes" xml:space="preserve">
          <source>For large numbers that have been written with a thousands separator, you can set the &lt;code&gt;thousands&lt;/code&gt; keyword to a string of length 1 so that integers will be parsed correctly:</source>
          <target state="translated">对于使用千位分隔符编写的大数，可以将 &lt;code&gt;thousands&lt;/code&gt; 关键字设置为长度为1的字符串，以便可以正确解析整数：</target>
        </trans-unit>
        <trans-unit id="580124faf04e07758951c13003fe7c5950d2a2ce" translate="yes" xml:space="preserve">
          <source>For line-delimited json files, pandas can also return an iterator which reads in &lt;code&gt;chunksize&lt;/code&gt; lines at a time. This can be useful for large files or to read from a stream.</source>
          <target state="translated">对于以行分隔的json文件，pandas还可以返回一个迭代器，该迭代器一次读取 &lt;code&gt;chunksize&lt;/code&gt; 行。这对于大型文件或从流中读取可能很有用。</target>
        </trans-unit>
        <trans-unit id="e1fce633382ace0f95ce1ceb3a99b3d31f075e3c" translate="yes" xml:space="preserve">
          <source>For logical operations, &lt;code&gt;pd.NA&lt;/code&gt; follows the rules of the &lt;a href=&quot;https://en.wikipedia.org/wiki/Three-valued_logic&quot;&gt;three-valued logic&lt;/a&gt; (or &lt;em&gt;Kleene logic&lt;/em&gt;, similarly to R, SQL and Julia). This logic means to only propagate missing values when it is logically required.</source>
          <target state="translated">对于逻辑运算， &lt;code&gt;pd.NA&lt;/code&gt; 遵循&lt;a href=&quot;https://en.wikipedia.org/wiki/Three-valued_logic&quot;&gt;三值逻辑&lt;/a&gt;（或&lt;em&gt;Kleene逻辑&lt;/em&gt;，类似于R，SQL和Julia）的规则。此逻辑意味着仅在逻辑上需要时才传播缺失值。</target>
        </trans-unit>
        <trans-unit id="cd17cc9d2ee4b0595b6f4d1721e19135dac396b1" translate="yes" xml:space="preserve">
          <source>For many ExtensionArrays, there will be two representations of</source>
          <target state="translated">对于许多ExtensionArrays来说,会有两种表示方式,即</target>
        </trans-unit>
        <trans-unit id="a8a2566df3f5bed78f1243c5dc7500605adea3ed" translate="yes" xml:space="preserve">
          <source>For many ExtensionArrays, there will be two representations of &lt;code&gt;fill_value&lt;/code&gt;: a user-facing &amp;ldquo;boxed&amp;rdquo; scalar, and a low-level physical NA value. &lt;code&gt;fill_value&lt;/code&gt; should be the user-facing version, and the implementation should handle translating that to the physical version for processing the take if necessary.</source>
          <target state="translated">对于许多ExtensionArray，将使用 &lt;code&gt;fill_value&lt;/code&gt; 的两种表示形式：面向用户的&amp;ldquo;盒装&amp;rdquo;标量和一个低级物理NA值。 &lt;code&gt;fill_value&lt;/code&gt; 应该是面向用户的版本，如果有必要，实现应将其转换为物理版本以处理获取。</target>
        </trans-unit>
        <trans-unit id="df40cca3a7fe216c28d30fc0fdab0c7fa86ea96b" translate="yes" xml:space="preserve">
          <source>For many reasons we chose the latter. After years of production use it has proven, at least in my opinion, to be the best decision given the state of affairs in NumPy and Python in general. The special value &lt;code&gt;NaN&lt;/code&gt; (Not-A-Number) is used everywhere as the &lt;code&gt;NA&lt;/code&gt; value, and there are API functions &lt;code&gt;isna&lt;/code&gt; and &lt;code&gt;notna&lt;/code&gt; which can be used across the dtypes to detect NA values.</source>
          <target state="translated">由于多种原因，我们选择了后者。考虑到NumPy和Python的总体状态，经过多年的生产使用，至少在我看来，它已被证明是最好的决定。特殊值 &lt;code&gt;NaN&lt;/code&gt; （未-A-号）是处处用作 &lt;code&gt;NA&lt;/code&gt; 值，并有API函数 &lt;code&gt;isna&lt;/code&gt; 和 &lt;code&gt;notna&lt;/code&gt; 可跨越dtypes被用于检测NA的值。</target>
        </trans-unit>
        <trans-unit id="b5a3b988b41d8a805c3b5e20e1224d6a8d441736" translate="yes" xml:space="preserve">
          <source>For many use cases writing pandas in pure Python and NumPy is sufficient. In some computationally heavy applications however, it can be possible to achieve sizable speed-ups by offloading work to &lt;a href=&quot;http://cython.org/&quot;&gt;cython&lt;/a&gt;.</source>
          <target state="translated">对于许多用例，用纯Python和NumPy编写熊猫就足够了。但是，在某些计算量很大的应用中，可以通过将工作卸载到&lt;a href=&quot;http://cython.org/&quot;&gt;cython&lt;/a&gt;来实现相当大的加速。</target>
        </trans-unit>
        <trans-unit id="dd5148102e97f3a32e851da4f99458e933d3b280" translate="yes" xml:space="preserve">
          <source>For many use cases writing pandas in pure Python and NumPy is sufficient. In some computationally heavy applications however, it can be possible to achieve sizable speed-ups by offloading work to &lt;a href=&quot;https://cython.org/&quot;&gt;cython&lt;/a&gt;.</source>
          <target state="translated">对于许多用例，用纯Python和NumPy编写熊猫就足够了。但是，在某些计算量很大的应用中，可以通过将工作卸载到&lt;a href=&quot;https://cython.org/&quot;&gt;cython&lt;/a&gt;来实现相当大的加速。</target>
        </trans-unit>
        <trans-unit id="b71da563397dbd40337aa5b8a20ea61b78174cf4" translate="yes" xml:space="preserve">
          <source>For memory savings, this should be the most common value in the array.</source>
          <target state="translated">为了节省内存,这应该是数组中最常见的值。</target>
        </trans-unit>
        <trans-unit id="e8109079167e80b0f5a798a2cb12312edf4b9b2b" translate="yes" xml:space="preserve">
          <source>For mixed data types provided via a &lt;code&gt;DataFrame&lt;/code&gt;, the default is to return only an analysis of numeric columns. If the dataframe consists only of object and categorical data without any numeric columns, the default is to return an analysis of both the object and categorical columns. If &lt;code&gt;include='all'&lt;/code&gt; is provided as an option, the result will include a union of attributes of each type.</source>
          <target state="translated">对于通过 &lt;code&gt;DataFrame&lt;/code&gt; 提供的混合数据类型，默认值为仅返回对数字列的分析。如果数据框仅由对象和分类数据组成，而没有任何数字列，则默认值为返回对对象和分类列的分析。如果将 &lt;code&gt;include='all'&lt;/code&gt; 作为选项提供，则结果将包括每种类型的属性的并集。</target>
        </trans-unit>
        <trans-unit id="0cc4b2e84755ddb87399e5f342442911a74e62e0" translate="yes" xml:space="preserve">
          <source>For more complex examples (grouping for example), avoid using data without interpretation, like a matrix of random numbers with columns A, B, C, D&amp;hellip; And instead use a meaningful example, which makes it easier to understand the concept. Unless required by the example, use names of animals, to keep examples consistent. And numerical properties of them.</source>
          <target state="translated">对于更复杂的示例（例如，分组），请避免使用没有解释的数据，例如具有A，B，C，D列的随机数矩阵&amp;hellip;&amp;hellip;而应使用有意义的示例，这样可以更轻松地理解该概念。除非示例要求，否则请使用动物名，以使示例保持一致。以及它们的数值特性。</target>
        </trans-unit>
        <trans-unit id="4db1d203723f6466ff69cafd19c4560dc311a579" translate="yes" xml:space="preserve">
          <source>For more details see the API documentation for &lt;a href=&quot;pandas.eval#pandas.eval&quot;&gt;&lt;code&gt;eval()&lt;/code&gt;&lt;/a&gt;. For detailed examples see &lt;a href=&quot;../../user_guide/enhancingperf#enhancingperf-eval&quot;&gt;enhancing performance with eval&lt;/a&gt;.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;pandas.eval#pandas.eval&quot;&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;/a&gt;的API文档。有关详细示例，请参见&lt;a href=&quot;../../user_guide/enhancingperf#enhancingperf-eval&quot;&gt;使用eval增强性能&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6d3e7354134ce3638855035adb4756aa18bf7c5d" translate="yes" xml:space="preserve">
          <source>For more examples, see &lt;a href=&quot;../../user_guide/text#text-concatenate&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">有关更多示例，请参见&lt;a href=&quot;../../user_guide/text#text-concatenate&quot;&gt;此处&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9c247b7f185f53748afc3975b97cf3a23c3f6734" translate="yes" xml:space="preserve">
          <source>For more fine-grained control, use &lt;code&gt;iterator=True&lt;/code&gt; and specify &lt;code&gt;chunksize&lt;/code&gt; with each call to &lt;code&gt;read()&lt;/code&gt;.</source>
          <target state="translated">要获得更细粒度的控制，请使用 &lt;code&gt;iterator=True&lt;/code&gt; 并在每次调用 &lt;code&gt;read()&lt;/code&gt; 时指定 &lt;code&gt;chunksize&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="75d8a30e5a3e9e26068bd5b1759c6cd940d19352" translate="yes" xml:space="preserve">
          <source>For more formatting and styling options, see &lt;a href=&quot;#visualization-formatting&quot;&gt;formatting&lt;/a&gt; below.</source>
          <target state="translated">有关更多的格式和样式选项，请参阅下面的&lt;a href=&quot;#visualization-formatting&quot;&gt;格式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d53864eed4a499b958150462adab2efa03e17401" translate="yes" xml:space="preserve">
          <source>For more information about duplicate labels, see &lt;a href=&quot;duplicates#duplicates&quot;&gt;Duplicate Labels&lt;/a&gt;.</source>
          <target state="translated">有关重复标签的更多信息，请参见&lt;a href=&quot;duplicates#duplicates&quot;&gt;重复标签&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6f03fb9ac8d9595a76234b65ebd564c7f8bb01d3" translate="yes" xml:space="preserve">
          <source>For more information on &lt;code&gt;.at&lt;/code&gt;, &lt;code&gt;.iat&lt;/code&gt;, &lt;code&gt;.loc&lt;/code&gt;, and &lt;code&gt;.iloc&lt;/code&gt;, see the &lt;a href=&quot;../user_guide/indexing#indexing&quot;&gt;indexing documentation&lt;/a&gt;.</source>
          <target state="translated">有关更多信息 &lt;code&gt;.at&lt;/code&gt; ， &lt;code&gt;.iat&lt;/code&gt; ， &lt;code&gt;.loc&lt;/code&gt; 和 &lt;code&gt;.iloc&lt;/code&gt; ，看到&lt;a href=&quot;../user_guide/indexing#indexing&quot;&gt;索引文件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="694b804760792f5b924e7509fe507ab99681809a" translate="yes" xml:space="preserve">
          <source>For more information on the choices available when specifying the &lt;code&gt;format&lt;/code&gt; option, see the Python &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior&quot;&gt;datetime documentation&lt;/a&gt;.</source>
          <target state="translated">有关指定 &lt;code&gt;format&lt;/code&gt; 选项时可用选项的更多信息，请参见Python &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior&quot;&gt;datetime文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="94d6917d9571485c675da60239fd9c6c681d965d" translate="yes" xml:space="preserve">
          <source>For more information on the forms, see the &lt;a href=&quot;https://docs.python.org/3/library/unicodedata.html#unicodedata.normalize&quot;&gt;&lt;code&gt;unicodedata.normalize()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关表单的更多信息，请参见&lt;a href=&quot;https://docs.python.org/3/library/unicodedata.html#unicodedata.normalize&quot;&gt; &lt;code&gt;unicodedata.normalize()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="29357f73f549c2753f04d0dbde59a45aa498cd61" translate="yes" xml:space="preserve">
          <source>For more information see &lt;a href=&quot;https://cloud.google.com/bigquery/docs/reference/rest/v2/jobs#configuration.query&quot;&gt;BigQuery REST API Reference&lt;/a&gt;.</source>
          <target state="translated">有关更多信息，请参阅&lt;a href=&quot;https://cloud.google.com/bigquery/docs/reference/rest/v2/jobs#configuration.query&quot;&gt;BigQuery REST API Reference&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7fe06d20afcf584afd6d8be687c4bdbdf203fd1f" translate="yes" xml:space="preserve">
          <source>For more information see the &lt;a href=&quot;../../user_guide/io#io-hdf5&quot;&gt;user guide&lt;/a&gt;.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;../../user_guide/io#io-hdf5&quot;&gt;用户指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2738385b8c69531782ecb535c9514a1d8e2dcf48" translate="yes" xml:space="preserve">
          <source>For more information see the examples the SQLAlchemy &lt;a href=&quot;https://docs.sqlalchemy.org/en/latest/core/engines.html&quot;&gt;documentation&lt;/a&gt;</source>
          <target state="translated">有关更多信息，请参见SQLAlchemy&lt;a href=&quot;https://docs.sqlalchemy.org/en/latest/core/engines.html&quot;&gt;文档&lt;/a&gt;的示例。</target>
        </trans-unit>
        <trans-unit id="9540bf72078abdec18fd1e6942000ba9e55ad949" translate="yes" xml:space="preserve">
          <source>For more information see: &lt;a href=&quot;http://en.wikipedia.org/wiki/4-4-5_calendar&quot;&gt;http://en.wikipedia.org/wiki/4-4-5_calendar&lt;/a&gt;</source>
          <target state="translated">有关更多信息，请参见：&lt;a href=&quot;http://en.wikipedia.org/wiki/4-4-5_calendar&quot;&gt;http&lt;/a&gt; : //en.wikipedia.org/wiki/4-4-5_calendar</target>
        </trans-unit>
        <trans-unit id="7d8162d22a432e377c6c446ce8007c62ff5041c8" translate="yes" xml:space="preserve">
          <source>For more information see: &lt;a href=&quot;https://en.wikipedia.org/wiki/4-4-5_calendar&quot;&gt;https://en.wikipedia.org/wiki/4-4-5_calendar&lt;/a&gt;</source>
          <target state="translated">有关更多信息，请参见：&lt;a href=&quot;https://en.wikipedia.org/wiki/4-4-5_calendar&quot;&gt;https&lt;/a&gt; : //en.wikipedia.org/wiki/4-4-5_calendar</target>
        </trans-unit>
        <trans-unit id="b0494704c2cb9de594939f986fa369462e9cc13d" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;a href=&quot;http://python3statement.org/&quot;&gt;Python 3 statement&lt;/a&gt; and the &lt;a href=&quot;https://docs.python.org/3/howto/pyporting.html&quot;&gt;Porting to Python 3 guide&lt;/a&gt;.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;http://python3statement.org/&quot;&gt;Python 3语句&lt;/a&gt;和&lt;a href=&quot;https://docs.python.org/3/howto/pyporting.html&quot;&gt;Porting to Python 3 guide&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9866dac8fb4a1bccca6e4fe3e355cb710c5015a2" translate="yes" xml:space="preserve">
          <source>For more, see the &lt;a href=&quot;http://docs.pytest.org/en/latest/&quot;&gt;pytest&lt;/a&gt; documentation.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;http://docs.pytest.org/en/latest/&quot;&gt;pytest&lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="a373615513c61887ba3ada5e17c999e8311450d0" translate="yes" xml:space="preserve">
          <source>For most data types, pandas uses NumPy arrays as the concrete objects contained with a &lt;a href=&quot;api/pandas.index#pandas.Index&quot;&gt;&lt;code&gt;Index&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;api/pandas.series#pandas.Series&quot;&gt;&lt;code&gt;Series&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;api/pandas.dataframe#pandas.DataFrame&quot;&gt;&lt;code&gt;DataFrame&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对于大多数数据类型，pandas使用NumPy数组作为&lt;a href=&quot;api/pandas.index#pandas.Index&quot;&gt; &lt;code&gt;Index&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;api/pandas.series#pandas.Series&quot;&gt; &lt;code&gt;Series&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;api/pandas.dataframe#pandas.DataFrame&quot;&gt; &lt;code&gt;DataFrame&lt;/code&gt; &lt;/a&gt;包含的具体对象。</target>
        </trans-unit>
        <trans-unit id="bf82910e3187b0e3669f2a8c729d0ceaa8011d63" translate="yes" xml:space="preserve">
          <source>For multiple groupings, the result index will be a MultiIndex</source>
          <target state="translated">对于多个分组,结果索引将是一个MultiIndex。</target>
        </trans-unit>
        <trans-unit id="fc74d8fe9ecf9df39ac50ccaee4b3bfb5cd0f210" translate="yes" xml:space="preserve">
          <source>For multiple groupings, the result index will be a MultiIndex.</source>
          <target state="translated">对于多个分组,结果索引将是一个MultiIndex。</target>
        </trans-unit>
        <trans-unit id="320f4c2eda9f19083856a63be36aefd6affa724a" translate="yes" xml:space="preserve">
          <source>For negative values of</source>
          <target state="translated">对于负值的</target>
        </trans-unit>
        <trans-unit id="af4b5c80a1630537bb2f2a60ed680509fb86a2a1" translate="yes" xml:space="preserve">
          <source>For non-integer/boolean dtypes, an appropriate error is raised:</source>
          <target state="translated">对于非整数/boolean dtypes,会引发一个适当的错误。</target>
        </trans-unit>
        <trans-unit id="c7bdf4112ee3b72a8371413300cae34f0a234b00" translate="yes" xml:space="preserve">
          <source>For numeric data, the result&amp;rsquo;s index will include &lt;code&gt;count&lt;/code&gt;, &lt;code&gt;mean&lt;/code&gt;, &lt;code&gt;std&lt;/code&gt;, &lt;code&gt;min&lt;/code&gt;, &lt;code&gt;max&lt;/code&gt; as well as lower, &lt;code&gt;50&lt;/code&gt; and upper percentiles. By default the lower percentile is &lt;code&gt;25&lt;/code&gt; and the upper percentile is &lt;code&gt;75&lt;/code&gt;. The &lt;code&gt;50&lt;/code&gt; percentile is the same as the median.</source>
          <target state="translated">对于数字数据，结果的索引将包括 &lt;code&gt;count&lt;/code&gt; ， &lt;code&gt;mean&lt;/code&gt; ， &lt;code&gt;std&lt;/code&gt; ， &lt;code&gt;min&lt;/code&gt; ， &lt;code&gt;max&lt;/code&gt; 以及低， &lt;code&gt;50&lt;/code&gt; 和高百分比。默认情况下，较低的百分比是 &lt;code&gt;25&lt;/code&gt; ，较高的百分比是 &lt;code&gt;75&lt;/code&gt; 。在 &lt;code&gt;50&lt;/code&gt; 百分位是一样的中位数。</target>
        </trans-unit>
        <trans-unit id="cebdb9dc867edad981fd3ba5b173f48d66b1abd6" translate="yes" xml:space="preserve">
          <source>For object containers, pandas will use the value given:</source>
          <target state="translated">对于对象容器,pandas将使用给出的值。</target>
        </trans-unit>
        <trans-unit id="138f514bb9ae738a899ea24cc00269630443f802" translate="yes" xml:space="preserve">
          <source>For object data (e.g. strings or timestamps), the result&amp;rsquo;s index will include &lt;code&gt;count&lt;/code&gt;, &lt;code&gt;unique&lt;/code&gt;, &lt;code&gt;top&lt;/code&gt;, and &lt;code&gt;freq&lt;/code&gt;. The &lt;code&gt;top&lt;/code&gt; is the most common value. The &lt;code&gt;freq&lt;/code&gt; is the most common value&amp;rsquo;s frequency. Timestamps also include the &lt;code&gt;first&lt;/code&gt; and &lt;code&gt;last&lt;/code&gt; items.</source>
          <target state="translated">对于对象数据（例如字符串或时间戳记），结果的索引将包括 &lt;code&gt;count&lt;/code&gt; ， &lt;code&gt;unique&lt;/code&gt; ， &lt;code&gt;top&lt;/code&gt; 和 &lt;code&gt;freq&lt;/code&gt; 。该 &lt;code&gt;top&lt;/code&gt; 是最常见的值。该 &lt;code&gt;freq&lt;/code&gt; 是最常见的值的频率。时间戳记还包括 &lt;code&gt;first&lt;/code&gt; 项和 &lt;code&gt;last&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="52d6d6be2da24d462edefa2d8e7d22fe348ae398" translate="yes" xml:space="preserve">
          <source>For object-dtyped columns, if &lt;code&gt;infer_objects&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;, use the inference rules as during normal Series/DataFrame construction. Then, if possible, convert to &lt;code&gt;StringDtype&lt;/code&gt;, &lt;code&gt;BooleanDtype&lt;/code&gt; or an appropriate integer or floating extension type, otherwise leave as &lt;code&gt;object&lt;/code&gt;.</source>
          <target state="translated">对于类型为对象的列，如果 &lt;code&gt;infer_objects&lt;/code&gt; 为 &lt;code&gt;True&lt;/code&gt; ，则像在常规Series / DataFrame构造期间一样使用推理规则。然后，如果可能，将其转换为 &lt;code&gt;StringDtype&lt;/code&gt; ， &lt;code&gt;BooleanDtype&lt;/code&gt; 或适当的整数或浮动扩展类型，否则保留为 &lt;code&gt;object&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f554c9936ee765c581d5455dc5d85c303dfbd0f4" translate="yes" xml:space="preserve">
          <source>For objects to be considered file-like, they must be an iterator AND have either a</source>
          <target state="translated">对于被认为是类文件的对象,它们必须是一个迭代器,并且必须有一个</target>
        </trans-unit>
        <trans-unit id="465bdc736a1f8e5e2efd89ddbb84b0ec01f99c18" translate="yes" xml:space="preserve">
          <source>For objects to be considered file-like, they must be an iterator AND have either a &lt;code&gt;read&lt;/code&gt; and/or &lt;code&gt;write&lt;/code&gt; method as an attribute.</source>
          <target state="translated">对于被认为是类文件的对象，它们必须是迭代器，并且具有 &lt;code&gt;read&lt;/code&gt; 和/或 &lt;code&gt;write&lt;/code&gt; 方法作为属性。</target>
        </trans-unit>
        <trans-unit id="d4f63fafc623ee4603fb615753f5f7f47d3e6a06" translate="yes" xml:space="preserve">
          <source>For on-the-fly compression of the output dta. If string, specifies compression mode. If dict, value at key &amp;lsquo;method&amp;rsquo; specifies compression mode. Compression mode must be one of {&amp;lsquo;infer&amp;rsquo;, &amp;lsquo;gzip&amp;rsquo;, &amp;lsquo;bz2&amp;rsquo;, &amp;lsquo;zip&amp;rsquo;, &amp;lsquo;xz&amp;rsquo;, None}. If compression mode is &amp;lsquo;infer&amp;rsquo; and</source>
          <target state="translated">用于动态压缩输出dta。如果为字符串，则指定压缩模式。如果是dict，则&amp;ldquo;方法&amp;rdquo;键上的值指定压缩模式。压缩模式必须为{'infer'，'gzip'，'bz2'，'zip'，'xz'，None}中的一种。如果压缩模式为&amp;ldquo;推断&amp;rdquo;，则</target>
        </trans-unit>
        <trans-unit id="c0bce7f100e5b87dc20a7ff6f1130f3d1ed044c2" translate="yes" xml:space="preserve">
          <source>For on-the-fly decompression of on-disk data. If &amp;lsquo;infer&amp;rsquo; and</source>
          <target state="translated">用于对磁盘数据进行即时解压缩。如果&amp;ldquo;推断&amp;rdquo;并且</target>
        </trans-unit>
        <trans-unit id="5807479643017470f979a29619731b84195733dd" translate="yes" xml:space="preserve">
          <source>For on-the-fly decompression of on-disk data. If &amp;lsquo;infer&amp;rsquo; and &lt;code&gt;filepath_or_buffer&lt;/code&gt; is path-like, then detect compression from the following extensions: &amp;lsquo;.gz&amp;rsquo;, &amp;lsquo;.bz2&amp;rsquo;, &amp;lsquo;.zip&amp;rsquo;, or &amp;lsquo;.xz&amp;rsquo; (otherwise no decompression). If using &amp;lsquo;zip&amp;rsquo;, the ZIP file must contain only one data file to be read in. Set to None for no decompression.</source>
          <target state="translated">用于对磁盘数据进行即时解压缩。如果'infer'和 &lt;code&gt;filepath_or_buffer&lt;/code&gt; 与路径类似，则从以下扩展名检测压缩：'.gz'，'。bz2'，'。zip'或'.xz'（否则不进行解压缩）。如果使用&amp;ldquo; zip&amp;rdquo;，则ZIP文件必须仅包含一个要读取的数据文件。设置为&amp;ldquo;无&amp;rdquo;将不进行解压缩。</target>
        </trans-unit>
        <trans-unit id="4b1a54b61b3512074fd4f647bc4bc9c5a146e3bc" translate="yes" xml:space="preserve">
          <source>For on-the-fly decompression of on-disk data. If &amp;lsquo;infer&amp;rsquo;, then use gzip, bz2, xz or zip if path ends in &amp;lsquo;.gz&amp;rsquo;, &amp;lsquo;.bz2&amp;rsquo;, &amp;lsquo;.xz&amp;rsquo;, or &amp;lsquo;.zip&amp;rsquo; respectively, and no decompression otherwise. Set to None for no decompression.</source>
          <target state="translated">用于对磁盘数据进行即时解压缩。如果为&amp;ldquo;推断&amp;rdquo;，则如果路径分别以&amp;ldquo; .gz&amp;rdquo;，&amp;ldquo;。bz2&amp;rdquo;，&amp;ldquo;。xz&amp;rdquo;或&amp;ldquo; .zip&amp;rdquo;结尾，则使用gzip，bz2，xz或zip，否则不进行解压缩。设置为无不解压。</target>
        </trans-unit>
        <trans-unit id="acdaedcb04def73a0b184a8c9893ab1d4272fe4e" translate="yes" xml:space="preserve">
          <source>For on-the-fly decompression of on-disk data. If &amp;lsquo;infer&amp;rsquo;, then use gzip, bz2, zip or xz if path_or_buf is a string ending in &amp;lsquo;.gz&amp;rsquo;, &amp;lsquo;.bz2&amp;rsquo;, &amp;lsquo;.zip&amp;rsquo;, or &amp;lsquo;xz&amp;rsquo;, respectively, and no decompression otherwise. If using &amp;lsquo;zip&amp;rsquo;, the ZIP file must contain only one data file to be read in. Set to None for no decompression.</source>
          <target state="translated">用于对磁盘数据进行即时解压缩。如果为'infer'，则如果path_or_buf是分别以'.gz'，'。bz2'，'。zip'或'xz'结尾的字符串，则使用gzip，bz2，zip或xz，否则不进行解压缩。如果使用&amp;ldquo; zip&amp;rdquo;，则ZIP文件必须仅包含一个要读取的数据文件。设置为&amp;ldquo;无&amp;rdquo;将不进行解压缩。</target>
        </trans-unit>
        <trans-unit id="bac284fb6d67e7e42f7691c9b8fd8d01fd2e94a4" translate="yes" xml:space="preserve">
          <source>For on-the-fly decompression of on-disk data. If &amp;lsquo;infer&amp;rsquo;, then use gzip, bz2, zip, or xz if &lt;code&gt;filepath_or_buffer&lt;/code&gt; is path-like ending in &amp;lsquo;.gz&amp;rsquo;, &amp;lsquo;.bz2&amp;rsquo;, &amp;lsquo;.zip&amp;rsquo;, or &amp;lsquo;.xz&amp;rsquo;, respectively, and no decompression otherwise. If using &amp;lsquo;zip&amp;rsquo;, the ZIP file must contain only one data file to be read in. Set to &lt;code&gt;None&lt;/code&gt; for no decompression. Can also be a dict with key &lt;code&gt;'method'&lt;/code&gt; set to one of {&lt;code&gt;'zip'&lt;/code&gt;, &lt;code&gt;'gzip'&lt;/code&gt;, &lt;code&gt;'bz2'&lt;/code&gt;} and other key-value pairs are forwarded to &lt;code&gt;zipfile.ZipFile&lt;/code&gt;, &lt;code&gt;gzip.GzipFile&lt;/code&gt;, or &lt;code&gt;bz2.BZ2File&lt;/code&gt;. As an example, the following could be passed for faster compression and to create a reproducible gzip archive: &lt;code&gt;compression={'method': 'gzip', 'compresslevel': 1, 'mtime': 1}&lt;/code&gt;.</source>
          <target state="translated">用于对磁盘数据进行即时解压缩。如果为'infer'，则如果 &lt;code&gt;filepath_or_buffer&lt;/code&gt; 是类似路径的结尾分别为'.gz'，' 。bz2 '，'。zip'或'.xz'的路径，则使用gzip，bz2，zip或xz ，否则不进行解压缩。如果使用&amp;ldquo; zip&amp;rdquo;，则ZIP文件必须仅包含一个要读取的数据文件。设置为&amp;ldquo; &lt;code&gt;None&lt;/code&gt; 将不进行解压缩。也可以是将键 &lt;code&gt;'method'&lt;/code&gt; 设置为{ &lt;code&gt;'zip'&lt;/code&gt; ， &lt;code&gt;'gzip'&lt;/code&gt; ， &lt;code&gt;'bz2'&lt;/code&gt; }之一的字典，其他键值对将转发到 &lt;code&gt;zipfile.ZipFile&lt;/code&gt; ， &lt;code&gt;gzip.GzipFile&lt;/code&gt; 或 &lt;code&gt;bz2.BZ2File&lt;/code&gt; 。例如，可以传递以下内容以加快压缩速度并创建可复制的gzip存档： &lt;code&gt;compression={'method': 'gzip', 'compresslevel': 1, 'mtime': 1}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="987b76ecb692d8818b42d3971149d7bff3260d70" translate="yes" xml:space="preserve">
          <source>For periods that span over multiple days, the day at the beginning of the period is returned.</source>
          <target state="translated">对于跨越多日的期间,将返回期间开始的那一天。</target>
        </trans-unit>
        <trans-unit id="662b7bf8341d7b362e53abb22b5202de24ac90e2" translate="yes" xml:space="preserve">
          <source>For periods with a frequency higher than days, the last day of the period is returned.</source>
          <target state="translated">对于频率高于天数的周期,将返回该周期的最后一天。</target>
        </trans-unit>
        <trans-unit id="fb50d4d508cd8c1601d128cec14cf856355ecd7e" translate="yes" xml:space="preserve">
          <source>For pie plots it&amp;rsquo;s best to use square figures, i.e. a figure aspect ratio 1. You can create the figure with equal width and height, or force the aspect ratio to be equal after plotting by calling &lt;code&gt;ax.set_aspect('equal')&lt;/code&gt; on the returned &lt;code&gt;axes&lt;/code&gt; object.</source>
          <target state="translated">对于馅饼图，最好使用方的数字，即数字纵横比1可以创建具有相等的宽度和高度的图，或强制的纵横比是通过调用绘制后等于 &lt;code&gt;ax.set_aspect('equal')&lt;/code&gt; 上的返回的 &lt;code&gt;axes&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="f20cb9d6aaa1f319d0fbe424ca0488540400e731" translate="yes" xml:space="preserve">
          <source>For potential users coming from &lt;a href=&quot;https://en.wikipedia.org/wiki/SAS_(software)&quot;&gt;SAS&lt;/a&gt; this page is meant to demonstrate how different SAS operations would be performed in pandas.</source>
          <target state="translated">对于来自&lt;a href=&quot;https://en.wikipedia.org/wiki/SAS_(software)&quot;&gt;SAS的&lt;/a&gt;潜在用户，此页面旨在演示如何在熊猫中执行不同的SAS操作。</target>
        </trans-unit>
        <trans-unit id="91a32cce48835b020148b4ec8bdcadea3e77d396" translate="yes" xml:space="preserve">
          <source>For potential users coming from &lt;a href=&quot;https://en.wikipedia.org/wiki/Stata&quot;&gt;Stata&lt;/a&gt; this page is meant to demonstrate how different Stata operations would be performed in pandas.</source>
          <target state="translated">对于来自&lt;a href=&quot;https://en.wikipedia.org/wiki/Stata&quot;&gt;Stata的&lt;/a&gt;潜在用户，此页面旨在演示如何在熊猫中执行不同的Stata操作。</target>
        </trans-unit>
        <trans-unit id="e1d215f8c65e8806b64b9f99bdc1753adfd8238b" translate="yes" xml:space="preserve">
          <source>For regular NumPy types like int, and float, a PandasArray is returned.</source>
          <target state="translated">对于常规的NumPy类型,如int,和float,会返回一个PandasArray。</target>
        </trans-unit>
        <trans-unit id="d42b9c8d29b7e7711acb1a5fe60fadbbcd7180b4" translate="yes" xml:space="preserve">
          <source>For row and column slicing, any valid indexer to &lt;code&gt;.loc&lt;/code&gt; will work.</source>
          <target state="translated">对于行和列切片， &lt;code&gt;.loc&lt;/code&gt; 的任何有效索引器都将起作用。</target>
        </trans-unit>
        <trans-unit id="377224ee8831a7f9bc64d03588b90fd9349eee4d" translate="yes" xml:space="preserve">
          <source>For scalar input, returns a scalar boolean. For array input, returns an array of boolean indicating whether each corresponding element is missing.</source>
          <target state="translated">对于标量输入,返回一个标量布尔值。对于数组输入,返回一个布尔数组,表示是否缺少每个对应的元素。</target>
        </trans-unit>
        <trans-unit id="cd021b2414eea09b75e93e704e6c0735c3100766" translate="yes" xml:space="preserve">
          <source>For scalar input, returns a scalar boolean. For array input, returns an array of boolean indicating whether each corresponding element is valid.</source>
          <target state="translated">对于标量输入,返回一个标量布尔值。对于数组输入,返回一个表示每个对应元素是否有效的布尔数组。</target>
        </trans-unit>
        <trans-unit id="26ef0d221aa3ee784401e395fad8b9a1fa645619" translate="yes" xml:space="preserve">
          <source>For series, the &lt;code&gt;object.name&lt;/code&gt; is used. If that&amp;rsquo;s none, then the name is &lt;code&gt;values&lt;/code&gt;</source>
          <target state="translated">对于系列，使用 &lt;code&gt;object.name&lt;/code&gt; 。如果不是，则名称为 &lt;code&gt;values&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e95a8b1c1abb37ee88f9f6b1b08c0c63f911bad4" translate="yes" xml:space="preserve">
          <source>For slicing columns explicitly:</source>
          <target state="translated">用于明确地对列进行分片。</target>
        </trans-unit>
        <trans-unit id="55604cdd6ac5563ed96088ede0e1cfaa99d0864f" translate="yes" xml:space="preserve">
          <source>For slicing rows explicitly:</source>
          <target state="translated">用于明确地对行进行分片。</target>
        </trans-unit>
        <trans-unit id="22ee1a4d311a6da50dd1b6cd2e58ca99cdcd9710" translate="yes" xml:space="preserve">
          <source>For slightly more complex use cases like splitting the html document name from a url, a combination of parameter settings can be used.</source>
          <target state="translated">对于稍微复杂一点的使用情况,如将html文档名从url中分离出来,可以使用参数设置的组合。</target>
        </trans-unit>
        <trans-unit id="b1abd5590458316fea2deba3093e3133026d1e28" translate="yes" xml:space="preserve">
          <source>For some data types, pandas extends NumPy&amp;rsquo;s type system.</source>
          <target state="translated">对于某些数据类型，pandas扩展了NumPy的类型系统。</target>
        </trans-unit>
        <trans-unit id="43c07d95bb4022f21917c1c990ceda823946b9fb" translate="yes" xml:space="preserve">
          <source>For some data types, pandas extends NumPy&amp;rsquo;s type system. String aliases for these types can be found at &lt;a href=&quot;../user_guide/basics#basics-dtypes&quot;&gt;dtypes&lt;/a&gt;.</source>
          <target state="translated">对于某些数据类型，pandas扩展了NumPy的类型系统。这些类型的字符串别名可以在&lt;a href=&quot;../user_guide/basics#basics-dtypes&quot;&gt;dtypes中&lt;/a&gt;找到。</target>
        </trans-unit>
        <trans-unit id="4fb2e58956a12e840fd770705e79600c3e0befd1" translate="yes" xml:space="preserve">
          <source>For some frequencies you can specify an anchoring suffix:</source>
          <target state="translated">对于某些频率,您可以指定一个锚定后缀。</target>
        </trans-unit>
        <trans-unit id="913aa64e1ce56102d1c5030f84ccea1c91c13c65" translate="yes" xml:space="preserve">
          <source>For some problems knowledge of the future is available for analysis. For example, this occurs when each data point is a full time series read from an experiment, and the task is to extract underlying conditions. In these cases it can be useful to perform forward-looking rolling window computations. &lt;a href=&quot;../reference/api/pandas.api.indexers.fixedforwardwindowindexer#pandas.api.indexers.FixedForwardWindowIndexer&quot;&gt;&lt;code&gt;FixedForwardWindowIndexer&lt;/code&gt;&lt;/a&gt; class is available for this purpose. This &lt;a href=&quot;../reference/api/pandas.api.indexers.baseindexer#pandas.api.indexers.BaseIndexer&quot;&gt;&lt;code&gt;BaseIndexer&lt;/code&gt;&lt;/a&gt; subclass implements a closed fixed-width forward-looking rolling window, and we can use it as follows:</source>
          <target state="translated">对于某些问题，可以使用将来的知识进行分析。例如，当每个数据点都是从实验中读取的完整时间序列，并且任务是提取基本条件时，就会发生这种情况。在这些情况下，执行前瞻性滚动窗口计算可能会很有用。&lt;a href=&quot;../reference/api/pandas.api.indexers.fixedforwardwindowindexer#pandas.api.indexers.FixedForwardWindowIndexer&quot;&gt; &lt;code&gt;FixedForwardWindowIndexer&lt;/code&gt; &lt;/a&gt;类可用于此目的。这个&lt;a href=&quot;../reference/api/pandas.api.indexers.baseindexer#pandas.api.indexers.BaseIndexer&quot;&gt; &lt;code&gt;BaseIndexer&lt;/code&gt; &lt;/a&gt;子类实现了一个封闭的固定宽度的前瞻性滚动窗口，我们可以按以下方式使用它：</target>
        </trans-unit>
        <trans-unit id="0258efb49315dcf764074e050a7939adb88f9674" translate="yes" xml:space="preserve">
          <source>For the case when &lt;code&gt;n=0&lt;/code&gt;, the date is not moved if on an anchor point, otherwise it is rolled forward to the next anchor point.</source>
          <target state="translated">对于 &lt;code&gt;n=0&lt;/code&gt; 的情况，如果在锚点上，则日期不会移动，否则它将前滚到下一个锚点。</target>
        </trans-unit>
        <trans-unit id="b5a7819e8c98c63ecde6229bddc35e97e9662c1a" translate="yes" xml:space="preserve">
          <source>For the curious here is how the above &lt;code&gt;DataFrame&lt;/code&gt; was created:</source>
          <target state="translated">奇怪的是上面的 &lt;code&gt;DataFrame&lt;/code&gt; 是如何创建的：</target>
        </trans-unit>
        <trans-unit id="6c3b0ae4cbaee1f14bc076c6ff074b9aaae229c7" translate="yes" xml:space="preserve">
          <source>For the first approach, you define selected operators, e.g., &lt;code&gt;__add__&lt;/code&gt;, &lt;code&gt;__le__&lt;/code&gt;, etc. that you want your &lt;code&gt;ExtensionArray&lt;/code&gt; subclass to support.</source>
          <target state="translated">对于第一种方法，您定义希望 &lt;code&gt;ExtensionArray&lt;/code&gt; 子类支持的选定运算符，例如 &lt;code&gt;__add__&lt;/code&gt; ， &lt;code&gt;__le__&lt;/code&gt; 等。</target>
        </trans-unit>
        <trans-unit id="1c81b27627f32cfe756a965cb58b2ff932cbe811" translate="yes" xml:space="preserve">
          <source>For the meaning of</source>
          <target state="translated">意思是</target>
        </trans-unit>
        <trans-unit id="b0b6112cc4e69119fbb1bf4e165ae88af1e5ad40" translate="yes" xml:space="preserve">
          <source>For the meaning of &lt;code&gt;closed&lt;/code&gt; and &lt;code&gt;open&lt;/code&gt; see &lt;a href=&quot;pandas.interval#pandas.Interval&quot;&gt;&lt;code&gt;Interval&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关 &lt;code&gt;closed&lt;/code&gt; 和 &lt;code&gt;open&lt;/code&gt; 的含义，请参见&lt;a href=&quot;pandas.interval#pandas.Interval&quot;&gt; &lt;code&gt;Interval&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5b63fcc2be8c9dddee7b5f09e6db02dc77537bab" translate="yes" xml:space="preserve">
          <source>For the most part, pandas uses NumPy arrays and dtypes for Series or individual columns of a DataFrame. NumPy provides support for &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;bool&lt;/code&gt;, &lt;code&gt;timedelta64[ns]&lt;/code&gt; and &lt;code&gt;datetime64[ns]&lt;/code&gt; (note that NumPy does not support timezone-aware datetimes).</source>
          <target state="translated">在大多数情况下，pandas将NumPy数组和dtype用于DataFrame的Series或单个列。 NumPy提供对 &lt;code&gt;float&lt;/code&gt; ， &lt;code&gt;int&lt;/code&gt; ， &lt;code&gt;bool&lt;/code&gt; ， &lt;code&gt;timedelta64[ns]&lt;/code&gt; 和 &lt;code&gt;datetime64[ns]&lt;/code&gt; （请注意，NumPy不支持时区感知的日期时间）。</target>
        </trans-unit>
        <trans-unit id="2200afa6f056c494633f76e17ce4aeed95ab4537" translate="yes" xml:space="preserve">
          <source>For the rationale behind this behavior, see &lt;a href=&quot;advanced#advanced-endpoints-are-inclusive&quot;&gt;Endpoints are inclusive&lt;/a&gt;.</source>
          <target state="translated">有关此行为的基本原理，请参阅&lt;a href=&quot;advanced#advanced-endpoints-are-inclusive&quot;&gt;Endpoints inclusive&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c4211216a810ee93f4099dc95edf7510bbd94c0a" translate="yes" xml:space="preserve">
          <source>For this, use the &lt;a href=&quot;../reference/api/pandas.dataframe.combine_first#pandas.DataFrame.combine_first&quot;&gt;&lt;code&gt;combine_first()&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="translated">为此，请使用&lt;a href=&quot;../reference/api/pandas.dataframe.combine_first#pandas.DataFrame.combine_first&quot;&gt; &lt;code&gt;combine_first()&lt;/code&gt; &lt;/a&gt;方法：</target>
        </trans-unit>
        <trans-unit id="a40785b10f5cf0ad2bd96ac4af735fb41551f80c" translate="yes" xml:space="preserve">
          <source>For those offsets that are anchored to the start or end of specific frequency (&lt;code&gt;MonthEnd&lt;/code&gt;, &lt;code&gt;MonthBegin&lt;/code&gt;, &lt;code&gt;WeekEnd&lt;/code&gt;, etc), the following rules apply to rolling forward and backwards.</source>
          <target state="translated">对于锚定到特定频率（ &lt;code&gt;MonthEnd&lt;/code&gt; ， &lt;code&gt;MonthBegin&lt;/code&gt; ， &lt;code&gt;WeekEnd&lt;/code&gt; 等）的开始或结束的偏移，以下规则适用于向前和向后滚动。</target>
        </trans-unit>
        <trans-unit id="f668287786e3ee36069ddd780c615ea2fdf7b8d5" translate="yes" xml:space="preserve">
          <source>For time series data, it&amp;rsquo;s conventional to represent the time component in the index of a &lt;a href=&quot;../reference/api/pandas.series#pandas.Series&quot;&gt;&lt;code&gt;Series&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../reference/api/pandas.dataframe#pandas.DataFrame&quot;&gt;&lt;code&gt;DataFrame&lt;/code&gt;&lt;/a&gt; so manipulations can be performed with respect to the time element.</source>
          <target state="translated">对于时间序列数据，通常在&lt;a href=&quot;../reference/api/pandas.series#pandas.Series&quot;&gt; &lt;code&gt;Series&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../reference/api/pandas.dataframe#pandas.DataFrame&quot;&gt; &lt;code&gt;DataFrame&lt;/code&gt; &lt;/a&gt;的索引中表示时间成分，因此可以针对时间元素执行操作。</target>
        </trans-unit>
        <trans-unit id="74ac61de50539871dfbab253279ae8765fe97c4e" translate="yes" xml:space="preserve">
          <source>For timezone-aware data, the timezones may be retained with &lt;code&gt;dtype='object'&lt;/code&gt;</source>
          <target state="translated">对于时区感知数据，可以使用 &lt;code&gt;dtype='object'&lt;/code&gt; 保留时区</target>
        </trans-unit>
        <trans-unit id="75be1964312826cb48015a9c43b800814759e61f" translate="yes" xml:space="preserve">
          <source>For transfer of &lt;code&gt;DataFrame&lt;/code&gt; objects from &lt;code&gt;pandas&lt;/code&gt; to R, one option is to use HDF5 files, see &lt;a href=&quot;../../user_guide/io#io-external-compatibility&quot;&gt;External compatibility&lt;/a&gt; for an example.</source>
          <target state="translated">&lt;code&gt;DataFrame&lt;/code&gt; 对象从 &lt;code&gt;pandas&lt;/code&gt; 传输到R，一种选择是使用HDF5文件，请参阅&lt;a href=&quot;../../user_guide/io#io-external-compatibility&quot;&gt;外部兼容性&lt;/a&gt;示例。</target>
        </trans-unit>
        <trans-unit id="ff03dc61e8b56825526bfc637603ddd6f373fb81" translate="yes" xml:space="preserve">
          <source>For types other than these, the &lt;code&gt;'metadata'&lt;/code&gt; key can be omitted. Implementations can assume &lt;code&gt;None&lt;/code&gt; if the key is not present.</source>
          <target state="translated">对于这些类型以外的其他类型，可以省略 &lt;code&gt;'metadata'&lt;/code&gt; 键。如果密钥不存在，则实现可以假定 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="58dfc7ae211c2c37fc86999d80f329c7e353b158" translate="yes" xml:space="preserve">
          <source>For upsampling, you can specify a way to upsample and the &lt;code&gt;limit&lt;/code&gt; parameter to interpolate over the gaps that are created:</source>
          <target state="translated">对于上采样，您可以指定一种上采样的方法，并指定 &lt;code&gt;limit&lt;/code&gt; 参数以对创建的间隙进行插值：</target>
        </trans-unit>
        <trans-unit id="59129113fd44c434ea738ba42e4842a3b812fe08" translate="yes" xml:space="preserve">
          <source>Force Google BigQuery to re-authenticate the user. This is useful if multiple accounts are used.</source>
          <target state="translated">强制Google BigQuery重新认证用户。如果使用了多个账户,这很有用。</target>
        </trans-unit>
        <trans-unit id="c4804c6e847cb63899d9044dc2761688f1c5e4bc" translate="yes" xml:space="preserve">
          <source>Force encoded string to be ASCII.</source>
          <target state="translated">强制将字符串编码为ASCII码。</target>
        </trans-unit>
        <trans-unit id="cac22bd0e8a69bd849b7be8d79bbdfbf8b44d9d5" translate="yes" xml:space="preserve">
          <source>Forking</source>
          <target state="translated">Forking</target>
        </trans-unit>
        <trans-unit id="59597690649fd3cb38fcf1971a87905afe4dd2f4" translate="yes" xml:space="preserve">
          <source>Form of the output with new additional css classes,</source>
          <target state="translated">新增加的css类的输出形式。</target>
        </trans-unit>
        <trans-unit id="4414e35b15eeb7579a39fef63b8a78c106f2a378" translate="yes" xml:space="preserve">
          <source>Form the intersection of two Index objects.</source>
          <target state="translated">形成两个Index对象的交点。</target>
        </trans-unit>
        <trans-unit id="abe27f9f1159d82b0faf0bca0ea35285e1dc9c91" translate="yes" xml:space="preserve">
          <source>Form the union of two Index objects.</source>
          <target state="translated">形成两个Index对象的结合。</target>
        </trans-unit>
        <trans-unit id="3274c425c17a043f22ff3df0df8b6b0da09b1e17" translate="yes" xml:space="preserve">
          <source>Format Timedelta as ISO 8601 Duration like &lt;code&gt;P[n]Y[n]M[n]DT[n]H[n]M[n]S&lt;/code&gt;, where the &lt;code&gt;[n]&lt;/code&gt; s are replaced by the values.</source>
          <target state="translated">将Timedelta格式化为ISO 8601持续时间，例如 &lt;code&gt;P[n]Y[n]M[n]DT[n]H[n]M[n]S&lt;/code&gt; ，其中 &lt;code&gt;[n]&lt;/code&gt; s替换为值。</target>
        </trans-unit>
        <trans-unit id="11f20deeb76af0ec70327a877ea886ce6705aeb6" translate="yes" xml:space="preserve">
          <source>Format Timedelta as ISO 8601 Duration like &lt;code&gt;P[n]Y[n]M[n]DT[n]H[n]M[n]S&lt;/code&gt;, where the &lt;code&gt;[n]&lt;/code&gt; s are replaced by the values. See &lt;a href=&quot;https://en.wikipedia.org/wiki/ISO_8601#Durations&quot;&gt;https://en.wikipedia.org/wiki/ISO_8601#Durations&lt;/a&gt;</source>
          <target state="translated">将Timedelta格式化为ISO 8601持续时间，例如 &lt;code&gt;P[n]Y[n]M[n]DT[n]H[n]M[n]S&lt;/code&gt; ，其中 &lt;code&gt;[n]&lt;/code&gt; s替换为值。参见&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO_8601#Durations&quot;&gt;https://en.wikipedia.org/wiki/ISO_8601#Durations&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fae016f2914c8675c362c226a3a6aa1ba1140233" translate="yes" xml:space="preserve">
          <source>Format Timedelta as ISO 8601 Duration like &lt;code&gt;P[n]Y[n]M[n]DT[n]H[n]M[n]S&lt;/code&gt;, where the &lt;code&gt;[n]&lt;/code&gt; s are replaced by the values. See &lt;a href=&quot;https://en.wikipedia.org/wiki/ISO_8601#Durations&quot;&gt;https://en.wikipedia.org/wiki/ISO_8601#Durations&lt;/a&gt;.</source>
          <target state="translated">将Timedelta格式设置为ISO 8601持续时间，例如 &lt;code&gt;P[n]Y[n]M[n]DT[n]H[n]M[n]S&lt;/code&gt; ，其中 &lt;code&gt;[n]&lt;/code&gt; s替换为值。请参阅&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO_8601#Durations&quot;&gt;https://en.wikipedia.org/wiki/ISO_8601#Durations&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="de2e34068366c3b66447d1e40d8ed3cff721d57a" translate="yes" xml:space="preserve">
          <source>Format Type</source>
          <target state="translated">格式类型</target>
        </trans-unit>
        <trans-unit id="0f03fcd6106e5cd7bc9d8b548ad021e4187d3de4" translate="yes" xml:space="preserve">
          <source>Format specified values of</source>
          <target state="translated">格式化指定值</target>
        </trans-unit>
        <trans-unit id="27b42a61c9970832b8b186790fa35509873d2e8d" translate="yes" xml:space="preserve">
          <source>Format specified values of &lt;code&gt;self&lt;/code&gt; and return them.</source>
          <target state="translated">格式化指定的 &lt;code&gt;self&lt;/code&gt; 值并返回它们。</target>
        </trans-unit>
        <trans-unit id="6d34b872a816aa7076abe13f14e014dee1ff70d4" translate="yes" xml:space="preserve">
          <source>Format string for dates written into Excel files (e.g. &amp;lsquo;YYYY-MM-DD&amp;rsquo;)</source>
          <target state="translated">写入Excel文件的日期的格式字符串（例如'YYYY-MM-DD'）</target>
        </trans-unit>
        <trans-unit id="a5a8078c50729de9efd422a070a95e6d4a538396" translate="yes" xml:space="preserve">
          <source>Format string for dates written into Excel files (e.g. &amp;lsquo;YYYY-MM-DD&amp;rsquo;).</source>
          <target state="translated">用于写入Excel文件的日期的格式字符串（例如'YYYY-MM-DD'）。</target>
        </trans-unit>
        <trans-unit id="b020f5c5a2e9e8e57385dd78f284cb6b4b7505c3" translate="yes" xml:space="preserve">
          <source>Format string for datetime objects written into Excel files (e.g. &amp;lsquo;YYYY-MM-DD HH:MM:SS&amp;rsquo;)</source>
          <target state="translated">写入Excel文件的日期时间对象的格式字符串（例如'YYYY-MM-DD HH：MM：SS'）</target>
        </trans-unit>
        <trans-unit id="16af6f4e3a2e10fdde98c31918ba5eaa1d8d582c" translate="yes" xml:space="preserve">
          <source>Format string for datetime objects written into Excel files. (e.g. &amp;lsquo;YYYY-MM-DD HH:MM:SS&amp;rsquo;).</source>
          <target state="translated">写入Excel文件的日期时间对象的格式字符串。（例如'YYYY-MM-DD HH：MM：SS'）。</target>
        </trans-unit>
        <trans-unit id="d1f9c220a86b204985f6534d8f24dc3625fd9b63" translate="yes" xml:space="preserve">
          <source>Format string for datetime objects.</source>
          <target state="translated">日期时间对象的格式字符串。</target>
        </trans-unit>
        <trans-unit id="61792b236b0b98b0b29b2f1c1226613a42ed772e" translate="yes" xml:space="preserve">
          <source>Format string for floating point numbers.</source>
          <target state="translated">浮点数的格式字符串。</target>
        </trans-unit>
        <trans-unit id="12d5ff452c1eb10875717600710c2fc8385f11ce" translate="yes" xml:space="preserve">
          <source>Format string for floating point numbers. For example &lt;code&gt;float_format=&quot;%.2f&quot;&lt;/code&gt; will format 0.1234 to 0.12.</source>
          <target state="translated">浮点数格式字符串。例如 &lt;code&gt;float_format=&quot;%.2f&quot;&lt;/code&gt; 会将0.1234格式化为0.12。</target>
        </trans-unit>
        <trans-unit id="a40d6d0d1b61ff1361218c6ee4329d240e29e58d" translate="yes" xml:space="preserve">
          <source>Format string to convert Timestamp to string. See strftime documentation for more information on the format string: &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior&quot;&gt;https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior&lt;/a&gt;.</source>
          <target state="translated">格式化字符串以将时间戳转换为字符串。有关格式字符串的更多信息，请参见strftime文档：&lt;a href=&quot;https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior&quot;&gt;https&lt;/a&gt; : //docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior。</target>
        </trans-unit>
        <trans-unit id="ea5852d75118543757450d402f17dda1d0d4df2d" translate="yes" xml:space="preserve">
          <source>Format the text display value of cells.</source>
          <target state="translated">格式化单元格的文本显示值。</target>
        </trans-unit>
        <trans-unit id="2839f0ebcdc286bd3f69f57d9b80f1e60e2540ef" translate="yes" xml:space="preserve">
          <source>Format to use when storing object in HDFStore. Value can be one of:</source>
          <target state="translated">在HDFStore中存储对象时使用的格式。值可以是以下之一:</target>
        </trans-unit>
        <trans-unit id="5438a2d879f16b19a503d6ae97eb8801b8ce2d4b" translate="yes" xml:space="preserve">
          <source>Formatted values.</source>
          <target state="translated">格式化的数值。</target>
        </trans-unit>
        <trans-unit id="9caf844b46e108a2e316a48cc142a86b7fedc524" translate="yes" xml:space="preserve">
          <source>Formatter for floating point numbers. For example &lt;code&gt;float_format=&quot;%%.2f&quot;&lt;/code&gt; and &lt;code&gt;float_format=&quot;{:0.2f}&quot;.format&lt;/code&gt; will both result in 0.1234 being formatted as 0.12.</source>
          <target state="translated">浮点数的格式化程序。例如 &lt;code&gt;float_format=&quot;%%.2f&quot;&lt;/code&gt; 和 &lt;code&gt;float_format=&quot;{:0.2f}&quot;.format&lt;/code&gt; 都将导致0.1234被格式化为0.12。</target>
        </trans-unit>
        <trans-unit id="0e77f48cad9b746f1a5e6ce0b31be23cac89278f" translate="yes" xml:space="preserve">
          <source>Formatter for floating point numbers. For example &lt;code&gt;float_format=&quot;%.2f&quot;&lt;/code&gt; and &lt;code&gt;float_format=&quot;{:0.2f}&quot;.format&lt;/code&gt; will both result in 0.1234 being formatted as 0.12.</source>
          <target state="translated">浮点数的格式化程序。例如， &lt;code&gt;float_format=&quot;%.2f&quot;&lt;/code&gt; 和 &lt;code&gt;float_format=&quot;{:0.2f}&quot;.format&lt;/code&gt; 都将导致0.1234格式化为0.12。</target>
        </trans-unit>
        <trans-unit id="cf268a12d163a61d0b25d6155bb9831413a55f75" translate="yes" xml:space="preserve">
          <source>Formatter function to apply to columns&amp;rsquo; elements if they are floats, default None.</source>
          <target state="translated">如果列元素是浮点型，则套用格式化程序功能，默认为无。</target>
        </trans-unit>
        <trans-unit id="a1a3182087a75f77562965d92f3cc94f1e89d474" translate="yes" xml:space="preserve">
          <source>Formatter function to apply to columns&amp;rsquo; elements if they are floats. The result of this function must be a unicode string.</source>
          <target state="translated">Formatter函数应用于列的元素（如果它们是浮点型）。此函数的结果必须是unicode字符串。</target>
        </trans-unit>
        <trans-unit id="e679c684982ace527105df86559a12012c2c5b7b" translate="yes" xml:space="preserve">
          <source>Formatter function to apply to columns&amp;rsquo; elements if they are floats. This function must return a unicode string and will be applied only to the non-&lt;code&gt;NaN&lt;/code&gt; elements, with &lt;code&gt;NaN&lt;/code&gt; being handled by &lt;code&gt;na_rep&lt;/code&gt;.</source>
          <target state="translated">Formatter函数应用于列的元素（如果它们是浮点型）。此函数必须返回一个unicode字符串，并将仅应用于非 &lt;code&gt;NaN&lt;/code&gt; 元素，并且 &lt;code&gt;NaN&lt;/code&gt; 由 &lt;code&gt;na_rep&lt;/code&gt; 处理。</target>
        </trans-unit>
        <trans-unit id="153d92209f6160e2c7bf2b09525797a6d5ee079c" translate="yes" xml:space="preserve">
          <source>Formatter functions to apply to columns&amp;rsquo; elements by position or name. The result of each function must be a unicode string. List must be of length equal to the number of columns.</source>
          <target state="translated">格式化程序功能可按位置或名称应用于列的元素。每个函数的结果必须是一个unicode字符串。列表的长度必须等于列数。</target>
        </trans-unit>
        <trans-unit id="72f57b74b9d88606e29be585cee16804ea237812" translate="yes" xml:space="preserve">
          <source>Formatter functions to apply to columns&amp;rsquo; elements by position or name. The result of each function must be a unicode string. List/tuple must be of length equal to the number of columns.</source>
          <target state="translated">格式化程序功能可按位置或名称将其应用于列的元素。每个函数的结果必须是一个unicode字符串。列表/元组的长度必须等于列数。</target>
        </trans-unit>
        <trans-unit id="1df875b791663b3fee445ce8e30ff16d10c8bc6c" translate="yes" xml:space="preserve">
          <source>Formatting function for scalar values.</source>
          <target state="translated">标量值的格式化功能。</target>
        </trans-unit>
        <trans-unit id="fec6e6340feaf4c44dea2c9ea14eb0a4d79a89da" translate="yes" xml:space="preserve">
          <source>Formerly this could be achieved with the dedicated &lt;code&gt;DataFrame.lookup&lt;/code&gt; method which was deprecated in version 1.2.0.</source>
          <target state="translated">以前，这可以使用专用的 &lt;code&gt;DataFrame.lookup&lt;/code&gt; 方法实现，该方法在1.2.0版中已弃用。</target>
        </trans-unit>
        <trans-unit id="10b080ba15dc5aefcfefd804f4ca97b3cc0646e8" translate="yes" xml:space="preserve">
          <source>Fortunately, pandas offers more than one way to ensure that your column(s) contain only one &lt;code&gt;dtype&lt;/code&gt;. If you&amp;rsquo;re unfamiliar with these concepts, you can see &lt;a href=&quot;basics#basics-dtypes&quot;&gt;here&lt;/a&gt; to learn more about dtypes, and &lt;a href=&quot;basics#basics-object-conversion&quot;&gt;here&lt;/a&gt; to learn more about &lt;code&gt;object&lt;/code&gt; conversion in pandas.</source>
          <target state="translated">幸运的是，pandas提供了多种方法来确保您的列仅包含一个 &lt;code&gt;dtype&lt;/code&gt; 。如果您不熟悉这些概念，可以&lt;a href=&quot;basics#basics-dtypes&quot;&gt;在此处&lt;/a&gt;了解更多关于dtypes的信息，并&lt;a href=&quot;basics#basics-object-conversion&quot;&gt;在此处&lt;/a&gt;了解有关熊猫中 &lt;code&gt;object&lt;/code&gt; 转换的更多信息。</target>
        </trans-unit>
        <trans-unit id="3c976e6b46c484aaf12d4a3efc98fd6cb2858df6" translate="yes" xml:space="preserve">
          <source>Forward fill &lt;code&gt;NaN&lt;/code&gt; values.</source>
          <target state="translated">向前填充 &lt;code&gt;NaN&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="e86dc7f86849980e77b3a231273a8c263b89cb76" translate="yes" xml:space="preserve">
          <source>Forward fill NaN values in the resampled data.</source>
          <target state="translated">在重新采样的数据中向前填充NaN值。</target>
        </trans-unit>
        <trans-unit id="c053305e5069585c8d36770eff2795aee72f8356" translate="yes" xml:space="preserve">
          <source>Forward fill NaN values.</source>
          <target state="translated">向前填充NaN值。</target>
        </trans-unit>
        <trans-unit id="fc16c19e4a628a86db057e19b2fd0c18596d082d" translate="yes" xml:space="preserve">
          <source>Forward fill the values.</source>
          <target state="translated">向前填充值。</target>
        </trans-unit>
        <trans-unit id="e3037e63bf6849b84a9a65234ff16b35b8d4cade" translate="yes" xml:space="preserve">
          <source>Fraction</source>
          <target state="translated">Fraction</target>
        </trans-unit>
        <trans-unit id="7040945e333897a50c272ad699442b72485733c4" translate="yes" xml:space="preserve">
          <source>Fraction of axis items to return. Cannot be used with</source>
          <target state="translated">要返回的轴项的分数。不能与</target>
        </trans-unit>
        <trans-unit id="12bdf318c0d4581b90440467582f220b0fc4edf0" translate="yes" xml:space="preserve">
          <source>Fraction of axis items to return. Cannot be used with &lt;code&gt;n&lt;/code&gt;.</source>
          <target state="translated">要返回的轴项的分数。不能与 &lt;code&gt;n&lt;/code&gt; 一起使用。</target>
        </trans-unit>
        <trans-unit id="28c0b0ef782cf1fb30b3632ae56388c6b39f8cd5" translate="yes" xml:space="preserve">
          <source>Fraction of items to return. Cannot be used with</source>
          <target state="translated">要退回的物品的分数。不能与</target>
        </trans-unit>
        <trans-unit id="40128863b5b7df9bd5589b4004c946c4e2ca5c66" translate="yes" xml:space="preserve">
          <source>Frequencies</source>
          <target state="translated">Frequencies</target>
        </trans-unit>
        <trans-unit id="980c2bada0ad87425f81d3386eba272ab186114e" translate="yes" xml:space="preserve">
          <source>Frequency DateOffset or string.</source>
          <target state="translated">频率 DateOffset 或字符串。</target>
        </trans-unit>
        <trans-unit id="4e2052837c563f82cb90654bfccf98e57113fe07" translate="yes" xml:space="preserve">
          <source>Frequency String</source>
          <target state="translated">频率串</target>
        </trans-unit>
        <trans-unit id="eeaec262d8d1ec3e815468bf6c562b4984e6f093" translate="yes" xml:space="preserve">
          <source>Frequency alias. By default the freq is taken from</source>
          <target state="translated">频率的别名。默认情况下,频率取自</target>
        </trans-unit>
        <trans-unit id="2aa6132ea33484a73b5908ff5440273e93a2e9be" translate="yes" xml:space="preserve">
          <source>Frequency alias. By default the freq is taken from &lt;code&gt;start&lt;/code&gt; or &lt;code&gt;end&lt;/code&gt; if those are Period objects. Otherwise, the default is &lt;code&gt;&quot;D&quot;&lt;/code&gt; for daily frequency.</source>
          <target state="translated">频率别名。默认情况下，如果频率是Period对象，则从 &lt;code&gt;start&lt;/code&gt; 或 &lt;code&gt;end&lt;/code&gt; 获取频率。否则，默认为每日频率 &lt;code&gt;&quot;D&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="48b5cc5f2864213d55478931fee6feb9bd830124" translate="yes" xml:space="preserve">
          <source>Frequency associated with the PeriodIndex.</source>
          <target state="translated">与PeriodIndex相关的频率。</target>
        </trans-unit>
        <trans-unit id="29501b6e79441445d620b18c8d698ebe6a42d233" translate="yes" xml:space="preserve">
          <source>Frequency conversion</source>
          <target state="translated">频率转换</target>
        </trans-unit>
        <trans-unit id="0704c83dcc1e70b7b2e157acfe7c07f6efc4fcd6" translate="yes" xml:space="preserve">
          <source>Frequency conversion and resampling of time series.</source>
          <target state="translated">时间序列的频率转换和重新取样。</target>
        </trans-unit>
        <trans-unit id="fd55b561a9be69187040b96c77c0efdda5608660" translate="yes" xml:space="preserve">
          <source>Frequency conversion and resampling with PeriodIndex</source>
          <target state="translated">使用PeriodIndex进行频率转换和重采样。</target>
        </trans-unit>
        <trans-unit id="29900c0796afb4b609d4bcdb79b77a38a277aeab" translate="yes" xml:space="preserve">
          <source>Frequency increment to shift by. If None, the index is shifted by its own</source>
          <target state="translated">要移动的频率增量。如果无,则以自己的</target>
        </trans-unit>
        <trans-unit id="23edad8221b7cc76aa71e3a857e9e58b10925dd4" translate="yes" xml:space="preserve">
          <source>Frequency increment to shift by. If None, the index is shifted by its own &lt;code&gt;freq&lt;/code&gt; attribute. Offset aliases are valid strings, e.g., &amp;lsquo;D&amp;rsquo;, &amp;lsquo;W&amp;rsquo;, &amp;lsquo;M&amp;rsquo; etc.</source>
          <target state="translated">频移增量。如果为None，则索引将通过其自己的 &lt;code&gt;freq&lt;/code&gt; 属性移动。偏移别名是有效的字符串，例如'D'，'W'，'M'等。</target>
        </trans-unit>
        <trans-unit id="f2eb99c55cf2b7999d81428a54976938c2e82ab4" translate="yes" xml:space="preserve">
          <source>Frequency of the PeriodIndex.</source>
          <target state="translated">PeriodIndex的频率。</target>
        </trans-unit>
        <trans-unit id="5c23f3321bc4b11c6796901996eb842d300c1bd4" translate="yes" xml:space="preserve">
          <source>Frequency string indicating the ceiling resolution.</source>
          <target state="translated">表示最高分辨率的频率字符串。</target>
        </trans-unit>
        <trans-unit id="5e9a2151f10f781441f8595f589998cdfb32128d" translate="yes" xml:space="preserve">
          <source>Frequency string indicating the flooring resolution.</source>
          <target state="translated">表示地板分辨率的频率字符串。</target>
        </trans-unit>
        <trans-unit id="6d95ff4d3564e0f9adcc89106ee0ec52061252c0" translate="yes" xml:space="preserve">
          <source>Frequency string indicating the rounding resolution.</source>
          <target state="translated">表示四舍五入分辨率的频率字符串。</target>
        </trans-unit>
        <trans-unit id="b86a03713f6c521ae7559c485ac63724fc22e5a1" translate="yes" xml:space="preserve">
          <source>Frequency string.</source>
          <target state="translated">频率串。</target>
        </trans-unit>
        <trans-unit id="38627bd3804c3d1ef864563ce2ba5cc088ff5255" translate="yes" xml:space="preserve">
          <source>Frequency strings can have multiples, e.g. &amp;lsquo;5H&amp;rsquo;</source>
          <target state="translated">频率字符串可以有多个，例如&amp;ldquo; 5H&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="b3d68d4e36f22234f436146bef664e61b007edfd" translate="yes" xml:space="preserve">
          <source>Frequency strings can have multiples, e.g. &amp;lsquo;5H&amp;rsquo;.</source>
          <target state="translated">频率串可以有多个，例如&amp;ldquo; 5H&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="021618b637dd7059f0d0d646eeeec2971166407a" translate="yes" xml:space="preserve">
          <source>Frequency strings can have multiples, e.g. &amp;lsquo;5H&amp;rsquo;. See &lt;a href=&quot;../../user_guide/timeseries#timeseries-offset-aliases&quot;&gt;here&lt;/a&gt; for a list of frequency aliases.</source>
          <target state="translated">频率串可以有多个，例如&amp;ldquo; 5H&amp;rdquo;。有关频率别名的列表，请参见&lt;a href=&quot;../../user_guide/timeseries#timeseries-offset-aliases&quot;&gt;此处&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dd5245b787182c5c3241886586866da3a1ca5436" translate="yes" xml:space="preserve">
          <source>Frequency table like plyr in R</source>
          <target state="translated">频率表,如R中的plyr</target>
        </trans-unit>
        <trans-unit id="ca763ad9176c91fc7794e09187da2fcb49fe3f0c" translate="yes" xml:space="preserve">
          <source>Frequency tables can also be normalized to show percentages rather than counts using the &lt;code&gt;normalize&lt;/code&gt; argument:</source>
          <target state="translated">频率表也可以使用 &lt;code&gt;normalize&lt;/code&gt; 参数归一化以显示百分比，而不是计数：</target>
        </trans-unit>
        <trans-unit id="4f5fb89546fa56451bf07260d4420bcc62940bb0" translate="yes" xml:space="preserve">
          <source>Frequently Asked Questions (FAQ)</source>
          <target state="translated">常见问题解答(FAQ)</target>
        </trans-unit>
        <trans-unit id="608af1de5eb7b093505effa772485c6b312751be" translate="yes" xml:space="preserve">
          <source>Frequently Used Options</source>
          <target state="translated">常用选项</target>
        </trans-unit>
        <trans-unit id="3bed39d9fcf5eca17c8bb995860a91bb768245e6" translate="yes" xml:space="preserve">
          <source>Frequently used options</source>
          <target state="translated">常用选项</target>
        </trans-unit>
        <trans-unit id="560e7164ce49a408f1ebb47fcb371ee5c6e9f8c5" translate="yes" xml:space="preserve">
          <source>From a SciPy sparse matrix, use &lt;a href=&quot;../reference/api/pandas.dataframe.sparse.from_spmatrix#pandas.DataFrame.sparse.from_spmatrix&quot;&gt;&lt;code&gt;DataFrame.sparse.from_spmatrix()&lt;/code&gt;&lt;/a&gt;,</source>
          <target state="translated">在SciPy稀疏矩阵中，使用&lt;a href=&quot;../reference/api/pandas.dataframe.sparse.from_spmatrix#pandas.DataFrame.sparse.from_spmatrix&quot;&gt; &lt;code&gt;DataFrame.sparse.from_spmatrix()&lt;/code&gt; &lt;/a&gt;，</target>
        </trans-unit>
        <trans-unit id="9d2eac70ef0a5f5e96f1b013aeb45cdc42e5e4af" translate="yes" xml:space="preserve">
          <source>From a Series</source>
          <target state="translated">从系列</target>
        </trans-unit>
        <trans-unit id="bb0c3aeefe2ffa504c77d85a6e384a77a68918a9" translate="yes" xml:space="preserve">
          <source>From a dict of tuples</source>
          <target state="translated">从一个元组的dict</target>
        </trans-unit>
        <trans-unit id="1e7bf702e797484e049ea682828b5817b2627058" translate="yes" xml:space="preserve">
          <source>From a list of dataclasses</source>
          <target state="translated">从数据类的列表中</target>
        </trans-unit>
        <trans-unit id="468bec45e11c5a66c1fb8e184be8e3d05c1baa7b" translate="yes" xml:space="preserve">
          <source>From a list of dicts</source>
          <target state="translated">从字典清单上看</target>
        </trans-unit>
        <trans-unit id="28cb354d97006dfaaec5c6fea1e49e4243d115b9" translate="yes" xml:space="preserve">
          <source>From a list of namedtuples</source>
          <target state="translated">从一个命名元组列表中</target>
        </trans-unit>
        <trans-unit id="451a153d92dc2f516c333805f79c92ce119a1a2f" translate="yes" xml:space="preserve">
          <source>From an array-like, use the regular &lt;a href=&quot;../reference/api/pandas.series#pandas.Series&quot;&gt;&lt;code&gt;Series&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../reference/api/pandas.dataframe#pandas.DataFrame&quot;&gt;&lt;code&gt;DataFrame&lt;/code&gt;&lt;/a&gt; constructors with &lt;code&gt;SparseArray&lt;/code&gt; values.</source>
          <target state="translated">在类似数组的数组中，将常规&lt;a href=&quot;../reference/api/pandas.series#pandas.Series&quot;&gt; &lt;code&gt;Series&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../reference/api/pandas.dataframe#pandas.DataFrame&quot;&gt; &lt;code&gt;DataFrame&lt;/code&gt; &lt;/a&gt;构造函数与 &lt;code&gt;SparseArray&lt;/code&gt; 值一起使用。</target>
        </trans-unit>
        <trans-unit id="51dbe984842c639f798cf4c00682fec24a67ec27" translate="yes" xml:space="preserve">
          <source>From an internal implementation point of view, the relevant methods that an &lt;code&gt;Index&lt;/code&gt; must define are one or more of the following (depending on how incompatible the new object internals are with the &lt;code&gt;Index&lt;/code&gt; functions):</source>
          <target state="translated">从内部实现的角度来看， &lt;code&gt;Index&lt;/code&gt; 必须定义的相关方法是以下一种或多种方法（取决于新对象内部与 &lt;code&gt;Index&lt;/code&gt; 函数的不兼容程度）：</target>
        </trans-unit>
        <trans-unit id="838ded2482ca315552b6120806df84702ecc48c0" translate="yes" xml:space="preserve">
          <source>From dense to sparse, use &lt;a href=&quot;../reference/api/pandas.dataframe.astype#pandas.DataFrame.astype&quot;&gt;&lt;code&gt;DataFrame.astype()&lt;/code&gt;&lt;/a&gt; with a &lt;a href=&quot;../reference/api/pandas.sparsedtype#pandas.SparseDtype&quot;&gt;&lt;code&gt;SparseDtype&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">从密集到稀疏，将&lt;a href=&quot;../reference/api/pandas.dataframe.astype#pandas.DataFrame.astype&quot;&gt; &lt;code&gt;DataFrame.astype()&lt;/code&gt; &lt;/a&gt;与&lt;a href=&quot;../reference/api/pandas.sparsedtype#pandas.SparseDtype&quot;&gt; &lt;code&gt;SparseDtype&lt;/code&gt; &lt;/a&gt;一起使用。</target>
        </trans-unit>
        <trans-unit id="bef20bb92a4ecb1074f7231b2c6c18e79fd2c3d4" translate="yes" xml:space="preserve">
          <source>From dict of Series or dicts</source>
          <target state="translated">从系列词典或词典中提取</target>
        </trans-unit>
        <trans-unit id="d48ed2bf3909a1c94b6ec8e4895529dcba290c73" translate="yes" xml:space="preserve">
          <source>From dict of ndarrays / lists</source>
          <target state="translated">从ndarrays/list的dict来看</target>
        </trans-unit>
        <trans-unit id="195142b655d4793088d75afe93e4bcce5136989a" translate="yes" xml:space="preserve">
          <source>From dicts of Series, arrays, or dicts.</source>
          <target state="translated">从Series、数组或dicts的dicts。</target>
        </trans-unit>
        <trans-unit id="b7196b008f44353e6c5efec802c5f896714ff2ec" translate="yes" xml:space="preserve">
          <source>From sequence of (key, value) pairs read_csv, pandas.read_table, pandas.read_clipboard.</source>
          <target state="translated">从(key,value)对的序列read_csv,pandas.read_table,pandas.read_clipboard。</target>
        </trans-unit>
        <trans-unit id="15c35c73e4f646131a45ef32c98eb47188a3a6d9" translate="yes" xml:space="preserve">
          <source>From sparse to dense, use the &lt;code&gt;.sparse&lt;/code&gt; accessors</source>
          <target state="translated">从稀疏到密集，请使用 &lt;code&gt;.sparse&lt;/code&gt; 访问器</target>
        </trans-unit>
        <trans-unit id="c5b34c4f8143f7f702a3c6c7ead4e324ee97fc44" translate="yes" xml:space="preserve">
          <source>From structured or record array</source>
          <target state="translated">来自结构化或记录阵列</target>
        </trans-unit>
        <trans-unit id="b176f67b52be7bbe2819d54827855344efe72ae6" translate="yes" xml:space="preserve">
          <source>From timestamps to epoch</source>
          <target state="translated">从时间戳到时代</target>
        </trans-unit>
        <trans-unit id="bd42ec4c0ea951284451d92090bdf2f6f5e04270" translate="yes" xml:space="preserve">
          <source>From version 1.5 and up, matplotlib offers a range of pre-configured plotting styles. Setting the style can be used to easily give plots the general look that you want. Setting the style is as easy as calling &lt;code&gt;matplotlib.style.use(my_plot_style)&lt;/code&gt; before creating your plot. For example you could write &lt;code&gt;matplotlib.style.use('ggplot')&lt;/code&gt; for ggplot-style plots.</source>
          <target state="translated">从1.5版开始，matplotlib提供了一系列预配置的绘图样式。设置样式可以轻松地使绘图具有所需的一般外观。设置样式就像在创建绘图之前调用 &lt;code&gt;matplotlib.style.use(my_plot_style)&lt;/code&gt; 一样容易。例如，您可以为ggplot样式图编写 &lt;code&gt;matplotlib.style.use('ggplot')&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="478363baf36bf970827067c84760027bec65c3e3" translate="yes" xml:space="preserve">
          <source>Full documentation can be found &lt;a href=&quot;https://pandas-gbq.readthedocs.io/&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">完整的文档可以在&lt;a href=&quot;https://pandas-gbq.readthedocs.io/&quot;&gt;这里&lt;/a&gt;找到。</target>
        </trans-unit>
        <trans-unit id="e923820f9cb1be7bad0a168e65ed377bea0b69ef" translate="yes" xml:space="preserve">
          <source>Full numpy-like syntax:</source>
          <target state="translated">完全类似于numpy的语法。</target>
        </trans-unit>
        <trans-unit id="ee6da781dd3904b7e5324e87d8cdc1f6b64b8c1d" translate="yes" xml:space="preserve">
          <source>Full path to a group (without trailing &amp;lsquo;/&amp;rsquo;)</source>
          <target state="translated">群组的完整路径（不带尾部&amp;ldquo; /&amp;rdquo;）</target>
        </trans-unit>
        <trans-unit id="97a48a2d2308e44125bb4d91bbd3567af562fd7e" translate="yes" xml:space="preserve">
          <source>Full path to a group (without trailing &amp;lsquo;/&amp;rsquo;).</source>
          <target state="translated">群组的完整路径（不带尾部&amp;ldquo; /&amp;rdquo;）。</target>
        </trans-unit>
        <trans-unit id="11ffc7ddf9ec01349c70b6e01a334bdb40a54b4c" translate="yes" xml:space="preserve">
          <source>Full reStructuredText specification</source>
          <target state="translated">完整的reStructuredText规范</target>
        </trans-unit>
        <trans-unit id="47f6c7a8bbc55714acb71726d9a2028cdf551f0e" translate="yes" xml:space="preserve">
          <source>Fun stuff</source>
          <target state="translated">有趣的东西</target>
        </trans-unit>
        <trans-unit id="f1e410ad1472b42cb42cc98962428637290b6706" translate="yes" xml:space="preserve">
          <source>Function</source>
          <target state="translated">Function</target>
        </trans-unit>
        <trans-unit id="e78ad1b15dcf0a18aac08b8e177988aeb54619f9" translate="yes" xml:space="preserve">
          <source>Function / dict values must be unique (1-to-1). Labels not contained in a dict / Series will be left as-is. Extra labels listed don&amp;rsquo;t throw an error.</source>
          <target state="translated">功能/字典值必须唯一（1对1）。字典/系列中未包含的标签将保持原样。列出的其他标签不会引发错误。</target>
        </trans-unit>
        <trans-unit id="edac3e16cb277f3cd2986b45d81bff72a02fa44a" translate="yes" xml:space="preserve">
          <source>Function application</source>
          <target state="translated">功能应用</target>
        </trans-unit>
        <trans-unit id="4953fe85849a4b51652d26a6190276f3b0adedb3" translate="yes" xml:space="preserve">
          <source>Function application, GroupBy &amp;amp; window</source>
          <target state="translated">功能应用程序，GroupBy和窗口</target>
        </trans-unit>
        <trans-unit id="a091b8028bdfd2490bbdbbdf923aa3850451fd0e" translate="yes" xml:space="preserve">
          <source>Function application, groupby &amp;amp; window</source>
          <target state="translated">功能应用，分组和窗口</target>
        </trans-unit>
        <trans-unit id="a80564ae1eb2beea69c09657eb462f01bfee8a88" translate="yes" xml:space="preserve">
          <source>Function calls other than math functions.</source>
          <target state="translated">数学函数以外的函数调用。</target>
        </trans-unit>
        <trans-unit id="76af48c83189116cc762e906885f196893a97afa" translate="yes" xml:space="preserve">
          <source>Function is not implemented.</source>
          <target state="translated">功能未实施。</target>
        </trans-unit>
        <trans-unit id="b6e2f37f0394b81471cc213a2d7016e539b351b4" translate="yes" xml:space="preserve">
          <source>Function is not implemented. Use pd.to_datetime().</source>
          <target state="translated">函数没有实现。使用 pd.to_datetime()。</target>
        </trans-unit>
        <trans-unit id="ee853619be4d3ea5b8ad55dd4800636f60b9ee08" translate="yes" xml:space="preserve">
          <source>Function is used to convert the given Timestamp object into the ISO format.</source>
          <target state="translated">函数用于将给定的时间戳对象转换为ISO格式。</target>
        </trans-unit>
        <trans-unit id="1775156176b062accb65d8aaa3939cdd1c353130" translate="yes" xml:space="preserve">
          <source>Function of one argument that reduces all the values in a bin to a single number (e.g.</source>
          <target state="translated">一个参数的函数,将一个bin中的所有值还原为一个单一的数字(例如,)。</target>
        </trans-unit>
        <trans-unit id="e73952036e9be9558f2dca02b9e30a7942bfd1fe" translate="yes" xml:space="preserve">
          <source>Function of one argument that reduces all the values in a bin to a single number (e.g. &lt;code&gt;np.mean&lt;/code&gt;, &lt;code&gt;np.max&lt;/code&gt;, &lt;code&gt;np.sum&lt;/code&gt;, &lt;code&gt;np.std&lt;/code&gt;).</source>
          <target state="translated">一个自变量的功能，可将bin中的所有值减少为一个数字（例如 &lt;code&gt;np.mean&lt;/code&gt; ， &lt;code&gt;np.max&lt;/code&gt; ， &lt;code&gt;np.sum&lt;/code&gt; ， &lt;code&gt;np.std&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="5ed43094428b13e552f75bb19800d19e26830b08" translate="yes" xml:space="preserve">
          <source>Function that takes two scalars as inputs and returns an element.</source>
          <target state="translated">将两个标量作为输入并返回一个元素的函数。</target>
        </trans-unit>
        <trans-unit id="142d58ab1106ca3f8240ae97dc04e4232324301a" translate="yes" xml:space="preserve">
          <source>Function that takes two series as inputs and return a Series or a scalar. Used to merge the two dataframes column by columns.</source>
          <target state="translated">函数,将两个系列作为输入,并返回一个系列或一个标量。用于将两个数据框逐列合并。</target>
        </trans-unit>
        <trans-unit id="6ec927c6a3a44c57ebbeeaccb4cfeca58715e990" translate="yes" xml:space="preserve">
          <source>Function to apply to each column or row.</source>
          <target state="translated">适用于每一列或每一行的功能。</target>
        </trans-unit>
        <trans-unit id="704f42764f050d29a2a580580656f4dd4c090158" translate="yes" xml:space="preserve">
          <source>Function to apply to each group.</source>
          <target state="translated">适用于各组的功能。</target>
        </trans-unit>
        <trans-unit id="13a104de8c013e516c73b5bde235fc7ced562e5a" translate="yes" xml:space="preserve">
          <source>Function to apply to each subframe. Should return True or False.</source>
          <target state="translated">适用于每个子帧的函数。应该返回 True 或 False。</target>
        </trans-unit>
        <trans-unit id="d49c651fa62be8c001e03b6398849e32448686d9" translate="yes" xml:space="preserve">
          <source>Function to apply to the Series/DataFrame. &lt;code&gt;args&lt;/code&gt;, and &lt;code&gt;kwargs&lt;/code&gt; are passed into &lt;code&gt;func&lt;/code&gt;. Alternatively a &lt;code&gt;(callable, data_keyword)&lt;/code&gt; tuple where &lt;code&gt;data_keyword&lt;/code&gt; is a string indicating the keyword of &lt;code&gt;callable&lt;/code&gt; that expects the Series/DataFrame.</source>
          <target state="translated">应用于Series / DataFrame的函数。 &lt;code&gt;args&lt;/code&gt; 和 &lt;code&gt;kwargs&lt;/code&gt; 传递给 &lt;code&gt;func&lt;/code&gt; 。或者，一个 &lt;code&gt;(callable, data_keyword)&lt;/code&gt; 元组，其中 &lt;code&gt;data_keyword&lt;/code&gt; 是一个字符串，指示期望Series / DataFrame的 &lt;code&gt;callable&lt;/code&gt; 关键字。</target>
        </trans-unit>
        <trans-unit id="cc74e4c0ad913c56ace7ee8175764f419629352e" translate="yes" xml:space="preserve">
          <source>Function to apply to the Styler. Alternatively, a &lt;code&gt;(callable, keyword)&lt;/code&gt; tuple where &lt;code&gt;keyword&lt;/code&gt; is a string indicating the keyword of &lt;code&gt;callable&lt;/code&gt; that expects the Styler.</source>
          <target state="translated">应用于Styler的功能。或者， &lt;code&gt;(callable, keyword)&lt;/code&gt; 元组，其中 &lt;code&gt;keyword&lt;/code&gt; 是一个字符串，指示期望Styler 的 &lt;code&gt;callable&lt;/code&gt; 的关键字。</target>
        </trans-unit>
        <trans-unit id="f444ad2df723abe1ed532098b3d7e45813af9b74" translate="yes" xml:space="preserve">
          <source>Function to apply to this GroupBy object or, alternatively, a</source>
          <target state="translated">应用于此GroupBy对象的函数,或者,也可以应用于此GroupBy对象。</target>
        </trans-unit>
        <trans-unit id="23bacc378f21eac868fee1ea31be046691dd5073" translate="yes" xml:space="preserve">
          <source>Function to apply to this GroupBy object or, alternatively, a &lt;code&gt;(callable, data_keyword)&lt;/code&gt; tuple where &lt;code&gt;data_keyword&lt;/code&gt; is a string indicating the keyword of &lt;code&gt;callable&lt;/code&gt; that expects the GroupBy object.</source>
          <target state="translated">应用于此GroupBy对象或（可选） &lt;code&gt;(callable, data_keyword)&lt;/code&gt; 元组的 &lt;code&gt;data_keyword&lt;/code&gt; ，其中data_keyword是指示希望使用GroupBy对象的 &lt;code&gt;callable&lt;/code&gt; 关键字的字符串。</target>
        </trans-unit>
        <trans-unit id="39ff7f66d9f4dbeddbee4990b83c25b83dc44eef" translate="yes" xml:space="preserve">
          <source>Function to apply to this Resampler object or, alternatively, a</source>
          <target state="translated">函数应用于这个 Resampler 对象,或者,也可以应用于一个对象。</target>
        </trans-unit>
        <trans-unit id="9dee26726482f3a7276da8f145a7cb4652d03675" translate="yes" xml:space="preserve">
          <source>Function to apply to this Resampler object or, alternatively, a &lt;code&gt;(callable, data_keyword)&lt;/code&gt; tuple where &lt;code&gt;data_keyword&lt;/code&gt; is a string indicating the keyword of &lt;code&gt;callable&lt;/code&gt; that expects the Resampler object.</source>
          <target state="translated">应用于此Resampler对象或（可选） &lt;code&gt;(callable, data_keyword)&lt;/code&gt; 元组的 &lt;code&gt;data_keyword&lt;/code&gt; ，其中data_keyword是指示期望Resampler对象的 &lt;code&gt;callable&lt;/code&gt; 关键字的字符串。</target>
        </trans-unit>
        <trans-unit id="f90ee47a0b391d4586e24293aff42d41b421e638" translate="yes" xml:space="preserve">
          <source>Function to create a fixed frequency IntervalIndex.</source>
          <target state="translated">功能用于创建一个固定频率的 IntervalIndex。</target>
        </trans-unit>
        <trans-unit id="6a6b05ecfb5d80d3726eb6df8f3e820f01fcb088" translate="yes" xml:space="preserve">
          <source>Function to use for aggregating the data. If a function, must either work when passed a DataFrame or when passed to DataFrame.apply.</source>
          <target state="translated">用于聚合数据的函数。如果是函数,必须在传递给DataFrame或传递给DataFrame.apply时工作。</target>
        </trans-unit>
        <trans-unit id="9e33e26c4e1b172a8d6959e1cb71afa79a34061a" translate="yes" xml:space="preserve">
          <source>Function to use for aggregating the data. If a function, must either work when passed a Series or when passed to Series.apply.</source>
          <target state="translated">用于汇总数据的函数。如果是函数,必须在传递给Series.apply时或传递给Series.apply时工作。</target>
        </trans-unit>
        <trans-unit id="4128f18fca69a96ee57714dbd347b51c07c908de" translate="yes" xml:space="preserve">
          <source>Function to use for aggregating the data. If a function, must either work when passed a Series/Dataframe or when passed to Series/Dataframe.apply.</source>
          <target state="translated">用于汇总数据的函数。如果是函数,则必须在传递给 Series/Dataframe 时或传递给 Series/Dataframe.apply 时工作。</target>
        </trans-unit>
        <trans-unit id="fb8a7a8f8895024a39f151773776b9187da1c05a" translate="yes" xml:space="preserve">
          <source>Function to use for converting a sequence of string columns to an array of datetime instances. The default uses &lt;code&gt;dateutil.parser.parser&lt;/code&gt; to do the conversion. Pandas will try to call</source>
          <target state="translated">用于将字符串列序列转换为日期时间实例数组的函数。默认使用 &lt;code&gt;dateutil.parser.parser&lt;/code&gt; 进行转换。熊猫会尝试致电</target>
        </trans-unit>
        <trans-unit id="262d965883765f2bd1799b280b7f33844c253c56" translate="yes" xml:space="preserve">
          <source>Function to use for converting a sequence of string columns to an array of datetime instances. The default uses &lt;code&gt;dateutil.parser.parser&lt;/code&gt; to do the conversion. Pandas will try to call &lt;code&gt;date_parser&lt;/code&gt; in three different ways, advancing to the next if an exception occurs: 1) Pass one or more arrays (as defined by &lt;code&gt;parse_dates&lt;/code&gt;) as arguments; 2) concatenate (row-wise) the string values from the columns defined by &lt;code&gt;parse_dates&lt;/code&gt; into a single array and pass that; and 3) call &lt;code&gt;date_parser&lt;/code&gt; once for each row using one or more strings (corresponding to the columns defined by &lt;code&gt;parse_dates&lt;/code&gt;) as arguments.</source>
          <target state="translated">用于将字符串列序列转换为日期时间实例数组的函数。默认使用 &lt;code&gt;dateutil.parser.parser&lt;/code&gt; 进行转换。熊猫将尝试以三种不同的方式调用 &lt;code&gt;date_parser&lt;/code&gt; ，如果发生异常，则前进到下一个：1）将一个或多个数组（由 &lt;code&gt;parse_dates&lt;/code&gt; 定义）作为参数传递； 2）将 &lt;code&gt;parse_dates&lt;/code&gt; 定义的列中的字符串值连接（逐行）到单个数组中并将其传递； 3）使用一个或多个字符串（对应于 &lt;code&gt;parse_dates&lt;/code&gt; 定义的列）作为参数，为每一行调用 &lt;code&gt;date_parser&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="06931417a8c3c87be1386bec1e882c4da93d8560" translate="yes" xml:space="preserve">
          <source>Function to use for converting a sequence of string columns to an array of datetime instances. The default uses &lt;code&gt;dateutil.parser.parser&lt;/code&gt; to do the conversion. pandas will try to call date_parser in three different ways, advancing to the next if an exception occurs: 1) Pass one or more arrays (as defined by parse_dates) as arguments; 2) concatenate (row-wise) the string values from the columns defined by parse_dates into a single array and pass that; and 3) call date_parser once for each row using one or more strings (corresponding to the columns defined by parse_dates) as arguments.</source>
          <target state="translated">用于将字符串列序列转换为日期时间实例数组的函数。默认使用 &lt;code&gt;dateutil.parser.parser&lt;/code&gt; 进行转换。熊猫将尝试以三种不同的方式调用date_parser，如果发生异常，则前进到下一个：1）传递一个或多个数组（由parse_dates定义）作为参数；2）将parse_dates定义的列中的字符串值连接（逐行）到单个数组中，并将其传递给它；3）使用一个或多个字符串（对应于parse_dates定义的列）作为参数，为每一行调用date_parser。</target>
        </trans-unit>
        <trans-unit id="b0bbc6d6ba1a4e5c4f41ee18d817a7042c102770" translate="yes" xml:space="preserve">
          <source>Function to use for transforming the data. If a function, must either work when passed a DataFrame or when passed to DataFrame.apply.</source>
          <target state="translated">用于转换数据的函数。如果是函数,必须在传递给DataFrame或传递给DataFrame.apply时工作。</target>
        </trans-unit>
        <trans-unit id="39487fe2a1e885ac7a7ca5b5b4b174ca86c22317" translate="yes" xml:space="preserve">
          <source>Function to use for transforming the data. If a function, must either work when passed a DataFrame or when passed to DataFrame.apply. If func is both list-like and dict-like, dict-like behavior takes precedence.</source>
          <target state="translated">用于转换数据的函数。如果是函数,必须在传递给DataFrame时或传递给DataFrame.apply时工作。如果func既是list-like又是dict-like,则以dict-like行为优先。</target>
        </trans-unit>
        <trans-unit id="3bcef89ad9a8ddd55a53f46f2c926e9dbbbeea63" translate="yes" xml:space="preserve">
          <source>Function to use for transforming the data. If a function, must either work when passed a Series or when passed to Series.apply.</source>
          <target state="translated">用于转换数据的函数。如果是函数,必须在传递给Series.apply时或传递给Series.apply时工作。</target>
        </trans-unit>
        <trans-unit id="aa98328a1ae8d8de94d1d2dd602141e50d1b3e25" translate="yes" xml:space="preserve">
          <source>Function to use for transforming the data. If a function, must either work when passed a Series or when passed to Series.apply. If func is both list-like and dict-like, dict-like behavior takes precedence.</source>
          <target state="translated">用于转换数据的函数。如果是函数,必须在传递给Series.apply时或传递给Series.apply时工作。如果func既是list-like又是dict-like,则以dict-like行为优先。</target>
        </trans-unit>
        <trans-unit id="c7b3d071160f92e9defe001e7d5385571e245c98" translate="yes" xml:space="preserve">
          <source>Function will return &lt;code&gt;NaN&lt;/code&gt; for correlations of equal valued sequences; this is the result of a 0/0 division error.</source>
          <target state="translated">函数将为相等值序列的相关性返回 &lt;code&gt;NaN&lt;/code&gt; ；这是0/0除法错误的结果。</target>
        </trans-unit>
        <trans-unit id="8201f25c3556b63cc6851b272ff2bb738a415b90" translate="yes" xml:space="preserve">
          <source>Functionally, their behavior should be nearly identical to their dense counterparts.</source>
          <target state="translated">从功能上看,它们的行为应该与密集型的同类产品几乎相同。</target>
        </trans-unit>
        <trans-unit id="0c42a4d0ba5cbdb5b1c7cee6a8cc11c3803206e8" translate="yes" xml:space="preserve">
          <source>Functions or dict-like are transformations to apply to the index. Scalar or hashable sequence-like will alter the &lt;code&gt;Series.name&lt;/code&gt; attribute.</source>
          <target state="translated">函数或类似dict的转换是适用于索引的转换。标量或类似 &lt;code&gt;Series.name&lt;/code&gt; 序列将更改Series.name属性。</target>
        </trans-unit>
        <trans-unit id="0a8b514ba071637dc2eae1bbef0e3daa98c4e2db" translate="yes" xml:space="preserve">
          <source>Further information on any specific method can be obtained in the &lt;a href=&quot;../reference/index#api&quot;&gt;API reference&lt;/a&gt;.</source>
          <target state="translated">有关任何特定方法的更多信息，请&lt;a href=&quot;../reference/index#api&quot;&gt;参见API参考&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="33960d896ae62907f19482073a4f668f78b43f62" translate="yes" xml:space="preserve">
          <source>Further, operations among the scalars yield another scalar &lt;code&gt;Timedelta&lt;/code&gt;.</source>
          <target state="translated">此外，标量之间的运算会产生另一个标量 &lt;code&gt;Timedelta&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e4a6925877eb7edda6e9c45cc43cf5d72dcbb77f" translate="yes" xml:space="preserve">
          <source>Furthermore &lt;code&gt;ptrepack in.h5 out.h5&lt;/code&gt; will &lt;em&gt;repack&lt;/em&gt; the file to allow you to reuse previously deleted space. Alternatively, one can simply remove the file and write again, or use the &lt;code&gt;copy&lt;/code&gt; method.</source>
          <target state="translated">此外， &lt;code&gt;ptrepack in.h5 out.h5&lt;/code&gt; 将&lt;em&gt;重新打包&lt;/em&gt;文件，以允许您重复使用以前删除的空间。或者，您可以简单地删除文件并再次写入，或使用 &lt;code&gt;copy&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="64b02f12cf377018a98a9dbbd642420a521d1c1e" translate="yes" xml:space="preserve">
          <source>Furthermore one can run</source>
          <target state="translated">此外,我们可以运行</target>
        </trans-unit>
        <trans-unit id="9f32b632aa0c2e3a46632a14a40b988e84e0148d" translate="yes" xml:space="preserve">
          <source>Furthermore you can align a level of a MultiIndexed DataFrame with a Series.</source>
          <target state="translated">此外,您还可以将一个多索引数据框的级别与一个系列对齐。</target>
        </trans-unit>
        <trans-unit id="ba09a34a282e8cfe4b72a46471ed7b56f61361d3" translate="yes" xml:space="preserve">
          <source>Furthermore you can use partial string selection and the range will be inferred:</source>
          <target state="translated">此外,您还可以使用部分字符串选择,并且会推断出范围。</target>
        </trans-unit>
        <trans-unit id="a551a4e49b838725aa38f2446e3d1fbba5c7851e" translate="yes" xml:space="preserve">
          <source>Furthermore, &lt;code&gt;where&lt;/code&gt; aligns the input boolean condition (ndarray or DataFrame), such that partial selection with setting is possible. This is analogous to partial setting via &lt;code&gt;.loc&lt;/code&gt; (but on the contents rather than the axis labels).</source>
          <target state="translated">此外， &lt;code&gt;where&lt;/code&gt; 对齐输入布尔条件（ndarray或DataFrame）的情况下，可以通过设置进行部分选择。这类似于通过 &lt;code&gt;.loc&lt;/code&gt; 进行部分设置（但在内容而非轴标签上）。</target>
        </trans-unit>
        <trans-unit id="26329e4c5b41c63071fb03b9901ed5ec2432a59e" translate="yes" xml:space="preserve">
          <source>Furthermore, if you have a &lt;code&gt;Series&lt;/code&gt; with datetimelike values, then you can access these properties via the &lt;code&gt;.dt&lt;/code&gt; accessor, as detailed in the section on &lt;a href=&quot;basics#basics-dt-accessors&quot;&gt;.dt accessors&lt;/a&gt;.</source>
          <target state="translated">此外，如果你有一个 &lt;code&gt;Series&lt;/code&gt; 与datetimelike值，那么你可以通过访问这些属性 &lt;code&gt;.dt&lt;/code&gt; 访问，如在节中的详细&lt;a href=&quot;basics#basics-dt-accessors&quot;&gt;.DT存取&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="69360bdf1bb1c815af94063683809f16ec21002a" translate="yes" xml:space="preserve">
          <source>Furthermore, if you try to index something that is not fully lexsorted, this can raise:</source>
          <target state="translated">此外,如果你试图索引一些不完全的lexorted的东西,这可能会引发。</target>
        </trans-unit>
        <trans-unit id="6a2de15db87adefb16b25954ff170378e29734e3" translate="yes" xml:space="preserve">
          <source>Furthermore, you can &lt;em&gt;set&lt;/em&gt; the values using the following methods.</source>
          <target state="translated">此外，您可以使用以下方法&lt;em&gt;设置&lt;/em&gt;值。</target>
        </trans-unit>
        <trans-unit id="c050741b81f244f70f2367d0cc0ec4b36cd78cad" translate="yes" xml:space="preserve">
          <source>Furthermore, you can also specify multiple aggregation functions for each column separately.</source>
          <target state="translated">此外,您还可以为每一列分别指定多个聚合函数。</target>
        </trans-unit>
        <trans-unit id="047ca54032a1756c098d3bc1a941a0ed8e583df8" translate="yes" xml:space="preserve">
          <source>Future</source>
          <target state="translated">Future</target>
        </trans-unit>
        <trans-unit id="e19a59f9e8e15c4d1d11e2e68babca36e9d045c0" translate="yes" xml:space="preserve">
          <source>GROUP BY</source>
          <target state="translated">GROUP BY</target>
        </trans-unit>
        <trans-unit id="798198756ff1bfa44edf9d447d8302298b55d1f2" translate="yes" xml:space="preserve">
          <source>General (Either slicing style : depends on if the slice contains labels or positions)</source>
          <target state="translated">一般 (任何一种切片样式:取决于切片是否包含标签或位置)</target>
        </trans-unit>
        <trans-unit id="4081b8f9a028626a8abc9781488d7aad98742eab" translate="yes" xml:space="preserve">
          <source>General 2D labeled, size-mutable tabular structure with potentially heterogeneously-typed column</source>
          <target state="translated">一般的二维标签式、可改变大小的表格结构,具有潜在的异质类型列。</target>
        </trans-unit>
        <trans-unit id="57f2ab6aaa8943784f6f0b78910f4133f0520de6" translate="yes" xml:space="preserve">
          <source>General DataFrame combine</source>
          <target state="translated">通用数据框组合</target>
        </trans-unit>
        <trans-unit id="98ef0f4152a1d979296580f796428b16d22667e1" translate="yes" xml:space="preserve">
          <source>General function to concatenate DataFrame or Series objects.</source>
          <target state="translated">连接DataFrame或Series对象的一般函数。</target>
        </trans-unit>
        <trans-unit id="4cb5fd0bbde100c5b28a657a95eaed1a4ad8e85f" translate="yes" xml:space="preserve">
          <source>General functions</source>
          <target state="translated">一般职能</target>
        </trans-unit>
        <trans-unit id="0b5bb29a82c981f103a5f61cabcf8bd48c43388f" translate="yes" xml:space="preserve">
          <source>General parsing configuration</source>
          <target state="translated">一般解析配置</target>
        </trans-unit>
        <trans-unit id="f8545898f71e08221b10f2e0ab96079a755c679d" translate="yes" xml:space="preserve">
          <source>General plot style arguments</source>
          <target state="translated">一般剧情风格参数</target>
        </trans-unit>
        <trans-unit id="58cc07cd05c6958c9a8410023fc828dc507072f7" translate="yes" xml:space="preserve">
          <source>General purpose method to trim DataFrame values to given threshold(s).</source>
          <target state="translated">通用方法,将DataFrame的值修剪到给定的阈值。</target>
        </trans-unit>
        <trans-unit id="3eaf5b37af932297d69a43c5413cf092f404a995" translate="yes" xml:space="preserve">
          <source>General purpose method to trim Series values to given threshold(s).</source>
          <target state="translated">通用方法,将序列值修剪到给定的阈值。</target>
        </trans-unit>
        <trans-unit id="bf6bda4587aff077462187186bdf6576ccc550c7" translate="yes" xml:space="preserve">
          <source>General rules</source>
          <target state="translated">一般规则</target>
        </trans-unit>
        <trans-unit id="2f7132be444a9c9f8523f39e425eb87d35bf051d" translate="yes" xml:space="preserve">
          <source>General terminology translation</source>
          <target state="translated">一般术语翻译</target>
        </trans-unit>
        <trans-unit id="e3bbd1c83b028d0c18e790d49d124c58e3c9099b" translate="yes" xml:space="preserve">
          <source>General utility functions</source>
          <target state="translated">一般实用功能</target>
        </trans-unit>
        <trans-unit id="e9d9d0c2fbe32089f49833ef17574a0cc5c7ff9a" translate="yes" xml:space="preserve">
          <source>Generalization of pivot that can handle duplicate values for one index/column pair.</source>
          <target state="translated">pivot的通用化,可以处理一个索引/列对的重复值。</target>
        </trans-unit>
        <trans-unit id="e864efc51dcbe71c3be2f995f34a6766104d509d" translate="yes" xml:space="preserve">
          <source>Generally speaking, the &lt;code&gt;.str&lt;/code&gt; accessor is intended to work only on strings. With very few exceptions, other uses are not supported, and may be disabled at a later point.</source>
          <target state="translated">一般来说， &lt;code&gt;.str&lt;/code&gt; 访问器仅适用于字符串。除极少数例外外，其他用途均不受支持，以后可能会被禁用。</target>
        </trans-unit>
        <trans-unit id="9dc4857a5c0bd7e0b01c500f03d43c3402ae101b" translate="yes" xml:space="preserve">
          <source>Generally, we recommend using &lt;a href=&quot;../reference/api/pandas.stringdtype#pandas.StringDtype&quot;&gt;&lt;code&gt;StringDtype&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;text#text-types&quot;&gt;Text data types&lt;/a&gt; for more.</source>
          <target state="translated">通常，我们建议使用&lt;a href=&quot;../reference/api/pandas.stringdtype#pandas.StringDtype&quot;&gt; &lt;code&gt;StringDtype&lt;/code&gt; &lt;/a&gt;。有关更多信息，请参见&lt;a href=&quot;text#text-types&quot;&gt;文本数据类型&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9723f95b5d873d1d0432716fdc17d3ff53dac65f" translate="yes" xml:space="preserve">
          <source>Generally, you can intersect the desired labels with the current axis, and then reindex.</source>
          <target state="translated">一般来说,可以将所需的标签与当前轴相交,然后重新索引。</target>
        </trans-unit>
        <trans-unit id="57c4da3dc8fcaf4636cd99e0adac82f51a674c1c" translate="yes" xml:space="preserve">
          <source>Generate Embedded plots in excel files using Pandas, Vincent and xlsxwriter</source>
          <target state="translated">使用Pandas、Vincent和xlsxwriter在excel文件中生成嵌入式图。</target>
        </trans-unit>
        <trans-unit id="97aaccee0280623c7908ba738eb125f70fa8c65f" translate="yes" xml:space="preserve">
          <source>Generate Kernel Density Estimate plot using Gaussian kernels.</source>
          <target state="translated">使用高斯核生成核密度估计图。</target>
        </trans-unit>
        <trans-unit id="55bb3b6a0825402faffa6d15a4e5ec851195083a" translate="yes" xml:space="preserve">
          <source>Generate a DataFrame with default index.</source>
          <target state="translated">生成一个默认索引的DataFrame。</target>
        </trans-unit>
        <trans-unit id="219ad59288654be2d791655c7c1cdc5738d4811d" translate="yes" xml:space="preserve">
          <source>Generate a Series with duplicated entries.</source>
          <target state="translated">生成一个有重复条目的系列。</target>
        </trans-unit>
        <trans-unit id="d5ae7b7a1be28979841ab10c7f389a56db94e4bd" translate="yes" xml:space="preserve">
          <source>Generate a hexagonal binning plot of</source>
          <target state="translated">生成一个六边形的分选图。</target>
        </trans-unit>
        <trans-unit id="f8e2fd0b69d0700fdc99adbe82bc0b097e71b8b0" translate="yes" xml:space="preserve">
          <source>Generate a hexagonal binning plot of &lt;code&gt;x&lt;/code&gt; versus &lt;code&gt;y&lt;/code&gt;. If &lt;code&gt;C&lt;/code&gt; is &lt;code&gt;None&lt;/code&gt; (the default), this is a histogram of the number of occurrences of the observations at &lt;code&gt;(x[i], y[i])&lt;/code&gt;.</source>
          <target state="translated">生成 &lt;code&gt;x&lt;/code&gt; 与 &lt;code&gt;y&lt;/code&gt; 的六边形分箱图。如果 &lt;code&gt;C&lt;/code&gt; 为 &lt;code&gt;None&lt;/code&gt; （默认值），则这是 &lt;code&gt;(x[i], y[i])&lt;/code&gt; 处观测值出现次数的直方图。</target>
        </trans-unit>
        <trans-unit id="8c45a875a76fb480480e0754f59178b9694f259b" translate="yes" xml:space="preserve">
          <source>Generate a hexagonal binning plot.</source>
          <target state="translated">生成六边形分片图。</target>
        </trans-unit>
        <trans-unit id="7a09d459f15db9c183018d83be8c00048ad13270" translate="yes" xml:space="preserve">
          <source>Generate a matplotlib plot of Andrews curves, for visualising clusters of multivariate data.</source>
          <target state="translated">生成安德鲁斯曲线的matplotlib图,用于可视化多变量数据的聚类。</target>
        </trans-unit>
        <trans-unit id="910f71e6e699fa038e133873ca6183eec8514f9d" translate="yes" xml:space="preserve">
          <source>Generate a new DataFrame or Series with the index reset.</source>
          <target state="translated">重置索引后生成一个新的DataFrame或Series。</target>
        </trans-unit>
        <trans-unit id="e1b8bb8546d849110ebb781111358327c8d49294" translate="yes" xml:space="preserve">
          <source>Generate a pie plot for a Series.</source>
          <target state="translated">生成一个系列的饼图。</target>
        </trans-unit>
        <trans-unit id="7e7f4e98c69008bba302d5b7a908b67a16908b81" translate="yes" xml:space="preserve">
          <source>Generate a pie plot.</source>
          <target state="translated">生成饼图。</target>
        </trans-unit>
        <trans-unit id="dc7bcc3162c98da8a5d3f09b27d176f895415994" translate="yes" xml:space="preserve">
          <source>Generate a random sample from a given 1-D numpy array.</source>
          <target state="translated">从一个给定的1-D numpy数组中产生一个随机样本。</target>
        </trans-unit>
        <trans-unit id="de7da30319f200e71b5c69df93949125d5970388" translate="yes" xml:space="preserve">
          <source>Generate an pandas.Index with duplicate values.</source>
          <target state="translated">生成一个有重复值的pandas.Index。</target>
        </trans-unit>
        <trans-unit id="7548e1b4ba3d5faf268b55256de1d16a5a1494d4" translate="yes" xml:space="preserve">
          <source>Generate descriptive statistics of DataFrame columns.</source>
          <target state="translated">生成DataFrame列的描述性统计。</target>
        </trans-unit>
        <trans-unit id="7038c3cc7a3edb83499619ad3f141f927977174a" translate="yes" xml:space="preserve">
          <source>Generate descriptive statistics that summarize the central tendency, dispersion and shape of a dataset&amp;rsquo;s distribution, excluding &lt;code&gt;NaN&lt;/code&gt; values.</source>
          <target state="translated">生成描述性统计信息，以汇总数据集分布的集中趋势，离散度和形状（不包括 &lt;code&gt;NaN&lt;/code&gt; 值）。</target>
        </trans-unit>
        <trans-unit id="2ac750a2ce196d6ef9efeab728f8835f8717da84" translate="yes" xml:space="preserve">
          <source>Generate descriptive statistics.</source>
          <target state="translated">生成描述性统计数据。</target>
        </trans-unit>
        <trans-unit id="1c0e87508b56b35069661b33e123d8ab3c888671" translate="yes" xml:space="preserve">
          <source>Generate random samples from a DataFrame object.</source>
          <target state="translated">从DataFrame对象生成随机样本。</target>
        </trans-unit>
        <trans-unit id="76ba3c68ce4f31e83b645e6806741f73c57161bd" translate="yes" xml:space="preserve">
          <source>Generate sequences of fixed-frequency dates and time spans</source>
          <target state="translated">生成固定频率的日期和时间跨度的序列。</target>
        </trans-unit>
        <trans-unit id="8825d513eda107425c4db37ecc245cbce4bd8d15" translate="yes" xml:space="preserve">
          <source>Generates a random sample from a given 1-D numpy array.</source>
          <target state="translated">从一个给定的1-D numpy数组中产生一个随机样本。</target>
        </trans-unit>
        <trans-unit id="2d741fbb2d4c4f32c32f16ca7439fde75979f3cf" translate="yes" xml:space="preserve">
          <source>Generates descriptive statistics</source>
          <target state="translated">生成描述性统计数据</target>
        </trans-unit>
        <trans-unit id="5d2c5d4f49636f8f789c8d5262a478c477a1b588" translate="yes" xml:space="preserve">
          <source>Generates random samples from each group of a DataFrame object.</source>
          <target state="translated">从DataFrame对象的每一组中产生随机样本。</target>
        </trans-unit>
        <trans-unit id="0181548f4c6f346b95b4b58028d26bc14510fff8" translate="yes" xml:space="preserve">
          <source>Generates random samples from each group of a Series object.</source>
          <target state="translated">从Series对象的每一组中产生随机样本。</target>
        </trans-unit>
        <trans-unit id="afddf3622252f75e90b0a8f62cad90c906ef3a8b" translate="yes" xml:space="preserve">
          <source>Generating ranges of intervals</source>
          <target state="translated">生成区间的范围</target>
        </trans-unit>
        <trans-unit id="f317b4727f1d2350ad327ae413e1c55cba7f1d25" translate="yes" xml:space="preserve">
          <source>Generating ranges of time deltas</source>
          <target state="translated">生成时间三角洲的范围</target>
        </trans-unit>
        <trans-unit id="5dfb9b080c4a972cdca3ac39c4646147c92b34cc" translate="yes" xml:space="preserve">
          <source>Generating ranges of timestamps</source>
          <target state="translated">生成时间戳的范围</target>
        </trans-unit>
        <trans-unit id="d0bf3a03bd47b9dd9ed6c94d4c73789b10776bf3" translate="yes" xml:space="preserve">
          <source>Generator expressions</source>
          <target state="translated">生成器表达式</target>
        </trans-unit>
        <trans-unit id="fe74896cfd89c88da5527de0b77998e0973da7bc" translate="yes" xml:space="preserve">
          <source>Generator yielding sequence for each group.</source>
          <target state="translated">每组的生成器屈服序列。</target>
        </trans-unit>
        <trans-unit id="e6ffe0b73bdf76de6a54e29b687da0fb0cc766d3" translate="yes" xml:space="preserve">
          <source>Generator yielding sequence of (name, subsetted object)</source>
          <target state="translated">产生(名称,子集对象)序列的生成器</target>
        </trans-unit>
        <trans-unit id="ee1dd78f6508aeb6480d2fa7b1c1d9c323bcdca3" translate="yes" xml:space="preserve">
          <source>Generic offset class, defaults to absolute 24 hours</source>
          <target state="translated">通用偏移类,默认为绝对24小时。</target>
        </trans-unit>
        <trans-unit id="f52f26899659fbe64ac428f6f78a58c9560bf3e1" translate="yes" xml:space="preserve">
          <source>Generic rolling windows support specifying windows as a fixed number of observations or variable number of observations based on an offset. If a time based offset is provided, the corresponding time based index must be monotonic.</source>
          <target state="translated">通用滚动窗口支持将窗口指定为固定的观测次数或基于偏移的可变观测次数。如果提供了基于时间的偏移,相应的基于时间的指数必须是单调的。</target>
        </trans-unit>
        <trans-unit id="b01f6cccf5c430a83b24dca76d9975bcf356977c" translate="yes" xml:space="preserve">
          <source>Geopandas</source>
          <target state="translated">Geopandas</target>
        </trans-unit>
        <trans-unit id="cb776443950280f6cba9d022306b92a37aebde5d" translate="yes" xml:space="preserve">
          <source>Geopandas extends pandas data objects to include geographic information which support geometric operations. If your work entails maps and geographical coordinates, and you love pandas, you should take a close look at Geopandas.</source>
          <target state="translated">Geopandas扩展了pandas数据对象,包括支持几何运算的地理信息。如果你的工作涉及到地图和地理坐标,并且你喜欢熊猫,你应该仔细看看Geopandas。</target>
        </trans-unit>
        <trans-unit id="77547c7db8cb694b00c98eb040ef04ace0d4db71" translate="yes" xml:space="preserve">
          <source>Get Addition of dataframe and other, element-wise (binary operator</source>
          <target state="translated">获取数据框的加法和其他,元素的加法(二进制运算符)。</target>
        </trans-unit>
        <trans-unit id="ae2b7868a7d16c6026fb9f6641c4c055febc08c7" translate="yes" xml:space="preserve">
          <source>Get Addition of dataframe and other, element-wise (binary operator &lt;code&gt;add&lt;/code&gt;).</source>
          <target state="translated">获取数据帧和其他元素的 &lt;code&gt;add&lt;/code&gt; （二进制运算符add）。</target>
        </trans-unit>
        <trans-unit id="dadbf9ed77fbdc257016c633c7e291e7b73e7cd7" translate="yes" xml:space="preserve">
          <source>Get Addition of dataframe and other, element-wise (binary operator &lt;code&gt;radd&lt;/code&gt;).</source>
          <target state="translated">获取数据帧和其他元素的 &lt;code&gt;radd&lt;/code&gt; （二进制运算符radd）。</target>
        </trans-unit>
        <trans-unit id="6bbedad9f3c908607b8505ae592a88a030e340ea" translate="yes" xml:space="preserve">
          <source>Get Equal to of dataframe and other, element-wise (binary operator</source>
          <target state="translated">获取数据框和其他元素的等价物(二进制运算符)</target>
        </trans-unit>
        <trans-unit id="6881b850c3c986532c08fb363c53b2eb0225116b" translate="yes" xml:space="preserve">
          <source>Get Equal to of dataframe and other, element-wise (binary operator &lt;code&gt;eq&lt;/code&gt;).</source>
          <target state="translated">等于等于数据帧和其他逐元素（二进制运算符 &lt;code&gt;eq&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="c77b496dae5458decd6d61337be179d66f573e86" translate="yes" xml:space="preserve">
          <source>Get Exponential power of dataframe and other, element-wise (binary operator</source>
          <target state="translated">获取数据框等的指数幂,按元素排列(二进制运算符)。</target>
        </trans-unit>
        <trans-unit id="8eb4c6e43f6b5f7f1f412175306b6bb201708cee" translate="yes" xml:space="preserve">
          <source>Get Exponential power of dataframe and other, element-wise (binary operator &lt;code&gt;pow&lt;/code&gt;).</source>
          <target state="translated">获取数据帧和其他逐元素的指数幂（二进制运算符 &lt;code&gt;pow&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="9e2adf723c6a76eeacda639340be16ce67a6fb1b" translate="yes" xml:space="preserve">
          <source>Get Exponential power of dataframe and other, element-wise (binary operator &lt;code&gt;rpow&lt;/code&gt;).</source>
          <target state="translated">获取数据帧和其他逐元素的指数幂（二进制运算符 &lt;code&gt;rpow&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="a387d6ef2779dc8da01ee7b7b02fc33b7080eec7" translate="yes" xml:space="preserve">
          <source>Get Floating division of dataframe and other, element-wise (binary operator</source>
          <target state="translated">获取数据帧的浮动除法和其他的、元素式的(二进制运算符)。</target>
        </trans-unit>
        <trans-unit id="727dbad4ab0d8474a93248f1508b0cc0c9f1b307" translate="yes" xml:space="preserve">
          <source>Get Floating division of dataframe and other, element-wise (binary operator &lt;code&gt;rtruediv&lt;/code&gt;).</source>
          <target state="translated">获取数据帧和其他按元素划分的浮动划分（二进制运算符 &lt;code&gt;rtruediv&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="d8378a422387e375d08740b312f9be047a2f00a1" translate="yes" xml:space="preserve">
          <source>Get Floating division of dataframe and other, element-wise (binary operator &lt;code&gt;truediv&lt;/code&gt;).</source>
          <target state="translated">获取数据 &lt;code&gt;truediv&lt;/code&gt; 和其他元素的浮动划分（二进制运算符truediv）。</target>
        </trans-unit>
        <trans-unit id="adf5d0cd1d9d44e3201b0ca6ac261a1e94db8930" translate="yes" xml:space="preserve">
          <source>Get Greater than of dataframe and other, element-wise (binary operator</source>
          <target state="translated">获取数据框的Greater than和其他的,元素的(二进制运算符)。</target>
        </trans-unit>
        <trans-unit id="44b0e6b5f85380abfebaa39e25b3823f213b24b9" translate="yes" xml:space="preserve">
          <source>Get Greater than of dataframe and other, element-wise (binary operator &lt;code&gt;gt&lt;/code&gt;).</source>
          <target state="translated">获取大于dataframe和其他元素的值（二进制运算符 &lt;code&gt;gt&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="1789716a314c6c27ab80bccf203b620388ef058c" translate="yes" xml:space="preserve">
          <source>Get Greater than or equal to of dataframe and other, element-wise (binary operator</source>
          <target state="translated">获取大于或等于数据框和其他元素的值(二进制运算符)。</target>
        </trans-unit>
        <trans-unit id="b92efef83c131fe503d93b81d6d7dcfaa3ebbec3" translate="yes" xml:space="preserve">
          <source>Get Greater than or equal to of dataframe and other, element-wise (binary operator &lt;code&gt;ge&lt;/code&gt;).</source>
          <target state="translated">获取大于或等于dataframe和其他逐元素（二进制运算符 &lt;code&gt;ge&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="121c8cbd2377b6ae3bd23d3ba83cfdc395c6345e" translate="yes" xml:space="preserve">
          <source>Get Integer division of dataframe and other, element-wise (binary operator</source>
          <target state="translated">获取数据框的整数除法和其他,元素除法(二进制运算符)</target>
        </trans-unit>
        <trans-unit id="3b3323a949a6f3b8c35324c9770c44dcf422805f" translate="yes" xml:space="preserve">
          <source>Get Integer division of dataframe and other, element-wise (binary operator &lt;code&gt;floordiv&lt;/code&gt;).</source>
          <target state="translated">获取数据帧和其他逐元素的整数分割（二进制运算符 &lt;code&gt;floordiv&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="a9a9d2b9cdcb9c5d2b98c51cd705b440d80846d3" translate="yes" xml:space="preserve">
          <source>Get Integer division of dataframe and other, element-wise (binary operator &lt;code&gt;rfloordiv&lt;/code&gt;).</source>
          <target state="translated">获取数据帧和其他逐元素的整数分割（二进制运算符 &lt;code&gt;rfloordiv&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="f36701518cbfa3c0b9c90b169220c9733ada32df" translate="yes" xml:space="preserve">
          <source>Get Less than of dataframe and other, element-wise (binary operator</source>
          <target state="translated">获取数据框的Less than和其他,元素的(二进制运算符)。</target>
        </trans-unit>
        <trans-unit id="42cad2ed7313d6b9b23637df759f19fa00d341fc" translate="yes" xml:space="preserve">
          <source>Get Less than of dataframe and other, element-wise (binary operator &lt;code&gt;lt&lt;/code&gt;).</source>
          <target state="translated">获得小于dataframe和其他元素形式的值（二进制运算符 &lt;code&gt;lt&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="4d4eebd6e54ed6804fb2c1b2cfc7b4ce880339ed" translate="yes" xml:space="preserve">
          <source>Get Less than or equal to of dataframe and other, element-wise (binary operator</source>
          <target state="translated">获取小于或等于数据框和其他元素的(二进制运算符)。</target>
        </trans-unit>
        <trans-unit id="043ee0ad8a1d3fa93c2d6c75fa60bc7c570d85ef" translate="yes" xml:space="preserve">
          <source>Get Less than or equal to of dataframe and other, element-wise (binary operator &lt;code&gt;le&lt;/code&gt;).</source>
          <target state="translated">获取小于或等于dataframe和其他逐个元素（二进制运算符 &lt;code&gt;le&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="542e17e3c8bc21809597fbd75840335d0079cefb" translate="yes" xml:space="preserve">
          <source>Get Modulo of dataframe and other, element-wise (binary operator</source>
          <target state="translated">获取数据框等的模数,按元素排列(二进制运算符)。</target>
        </trans-unit>
        <trans-unit id="ce91129ba136f0463638b325f7b4a5fc85531dd6" translate="yes" xml:space="preserve">
          <source>Get Modulo of dataframe and other, element-wise (binary operator &lt;code&gt;mod&lt;/code&gt;).</source>
          <target state="translated">获取数据帧的Modulo以及其他元素（二进制运算符 &lt;code&gt;mod&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="2166c9895afda2fe3805a4ed6a37715f8be994ff" translate="yes" xml:space="preserve">
          <source>Get Modulo of dataframe and other, element-wise (binary operator &lt;code&gt;rmod&lt;/code&gt;).</source>
          <target state="translated">获取数据帧的Modulo以及其他元素（二进制运算符 &lt;code&gt;rmod&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="0625dfbb735d0db6b4fea0300af646f46515174f" translate="yes" xml:space="preserve">
          <source>Get Multiplication of dataframe and other, element-wise (binary operator</source>
          <target state="translated">获取数据框和其他元素的乘法(二进制运算符)</target>
        </trans-unit>
        <trans-unit id="a9db3feb3586f1258e403412cc555b754ab3c92a" translate="yes" xml:space="preserve">
          <source>Get Multiplication of dataframe and other, element-wise (binary operator &lt;code&gt;mul&lt;/code&gt;).</source>
          <target state="translated">获取数据帧和其他逐元素的乘法（二进制运算符 &lt;code&gt;mul&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="1388d2cf2af80e17317c08f9770b52a49f9c2f2d" translate="yes" xml:space="preserve">
          <source>Get Multiplication of dataframe and other, element-wise (binary operator &lt;code&gt;rmul&lt;/code&gt;).</source>
          <target state="translated">获取数据帧和其他逐元素的乘法（二进制运算符 &lt;code&gt;rmul&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="10032af7b310e99993d1c449de793839bac58e40" translate="yes" xml:space="preserve">
          <source>Get Not equal to of dataframe and other, element-wise (binary operator</source>
          <target state="translated">获取不等于数据框和其他元素的不等式(二进制运算符)</target>
        </trans-unit>
        <trans-unit id="8d2d574ef5c8590ffef550e6bdd72a846a37f4c8" translate="yes" xml:space="preserve">
          <source>Get Not equal to of dataframe and other, element-wise (binary operator &lt;code&gt;ne&lt;/code&gt;).</source>
          <target state="translated">获取不等于dataframe和其他按元素计的值（二进制运算符 &lt;code&gt;ne&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="4dd888c9ae85479d0c96d708bb637b60611e222f" translate="yes" xml:space="preserve">
          <source>Get Subtraction of dataframe and other, element-wise (binary operator</source>
          <target state="translated">获取数据框和其他元素的减法(二进制运算符)。</target>
        </trans-unit>
        <trans-unit id="5d7a3ecd88fdea915d9e5f10e4a4bf57cd19868a" translate="yes" xml:space="preserve">
          <source>Get Subtraction of dataframe and other, element-wise (binary operator &lt;code&gt;rsub&lt;/code&gt;).</source>
          <target state="translated">获取数据帧和其他逐元素减法（二进制运算符 &lt;code&gt;rsub&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="3146ba91d874f9eec6369574348eb7294ec036ef" translate="yes" xml:space="preserve">
          <source>Get Subtraction of dataframe and other, element-wise (binary operator &lt;code&gt;sub&lt;/code&gt;).</source>
          <target state="translated">获取数据帧和其他元素的减法（二进制运算符 &lt;code&gt;sub&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="5ffb03ddea42699557317c0964d22c0679b431fc" translate="yes" xml:space="preserve">
          <source>Get both the location for the requested label(s) and the resulting sliced index.</source>
          <target state="translated">获取请求的标签的位置和生成的索引。</target>
        </trans-unit>
        <trans-unit id="d7e7e84fb35f14833cafb97389a3676c8f6152f2" translate="yes" xml:space="preserve">
          <source>Get day of the month that a Period falls on.</source>
          <target state="translated">获取一个周期所在的月份的哪一天。</target>
        </trans-unit>
        <trans-unit id="f98146c87c9e6cee6313cc766cab7861c157fa71" translate="yes" xml:space="preserve">
          <source>Get index locations of values at particular time of day.</source>
          <target state="translated">获取一天中特定时间的值的索引位置。</target>
        </trans-unit>
        <trans-unit id="b396c868bb66ea9686b080a7f2d8b889c0c8eed0" translate="yes" xml:space="preserve">
          <source>Get index locations of values between particular times of day.</source>
          <target state="translated">获取一天中特定时间之间的值的索引位置。</target>
        </trans-unit>
        <trans-unit id="23dc3a30559b7e6e6eedb5f3c3b58fd37774290b" translate="yes" xml:space="preserve">
          <source>Get integer location, slice or boolean mask for requested label.</source>
          <target state="translated">获取请求标签的整数位置、片断或布尔掩码。</target>
        </trans-unit>
        <trans-unit id="1495512810109b6180c84bd6f543e79e38733811" translate="yes" xml:space="preserve">
          <source>Get item from object for given key (ex: DataFrame column).</source>
          <target state="translated">从给定键的对象中获取项目(例如:DataFrame列)。</target>
        </trans-unit>
        <trans-unit id="8b71bfe2d62d2b197499002a79677564b6bb8b4f" translate="yes" xml:space="preserve">
          <source>Get just the index locations for values at particular time of the day.</source>
          <target state="translated">只获取一天中特定时间的值的索引位置。</target>
        </trans-unit>
        <trans-unit id="71c260bc2dc68edd80f8a6e385cc5f4a28047b23" translate="yes" xml:space="preserve">
          <source>Get just the index locations for values between particular times of the day.</source>
          <target state="translated">只获取一天中特定时间之间的值的索引位置。</target>
        </trans-unit>
        <trans-unit id="3f38be46e955efcd2c6dea5438f9a31d9e68e604" translate="yes" xml:space="preserve">
          <source>Get level values by supplying</source>
          <target state="translated">通过提供</target>
        </trans-unit>
        <trans-unit id="573ad3e027b86128c73222c5a4a405ad9e017adb" translate="yes" xml:space="preserve">
          <source>Get level values by supplying &lt;code&gt;level&lt;/code&gt; as integer:</source>
          <target state="translated">通过将 &lt;code&gt;level&lt;/code&gt; 提供为整数来获取级别值：</target>
        </trans-unit>
        <trans-unit id="1111149ddd1953c3acf759b763c942dd6aebdb5c" translate="yes" xml:space="preserve">
          <source>Get level values by supplying level as either integer or name:</source>
          <target state="translated">通过提供等级作为整数或名称来获取等级值。</target>
        </trans-unit>
        <trans-unit id="3f551eb06d1ffbc835cc2d27b8e279a799c9f808" translate="yes" xml:space="preserve">
          <source>Get location and sliced index for requested label(s)/level(s).</source>
          <target state="translated">获取所请求的标签/级别的位置和切片索引。</target>
        </trans-unit>
        <trans-unit id="6a307c9491073aca10dcc83b9998b926c3f1eacf" translate="yes" xml:space="preserve">
          <source>Get location for a label or a tuple of labels as an integer, slice or boolean mask.</source>
          <target state="translated">以整数、片断或布尔掩码的形式获取标签或标签元组的位置。</target>
        </trans-unit>
        <trans-unit id="04948c999aacd8c60e4754df05b4fa1f888c796a" translate="yes" xml:space="preserve">
          <source>Get location for a label or a tuple of labels.</source>
          <target state="translated">获取一个标签或一组标签的位置。</target>
        </trans-unit>
        <trans-unit id="029e778ca715f569b320678ab17a54cf332a28ca" translate="yes" xml:space="preserve">
          <source>Get location for a label/slice/list/mask or a sequence of such.</source>
          <target state="translated">获取标签/切片/列表/掩码的位置或序列。</target>
        </trans-unit>
        <trans-unit id="e701aacc9cf17a9d8fb0fe0b04c4c9a2c0791ffa" translate="yes" xml:space="preserve">
          <source>Get location for a sequence of labels.</source>
          <target state="translated">获取标签序列的位置。</target>
        </trans-unit>
        <trans-unit id="824b3bc5f378073942323556dbc08c4d67ff1704" translate="yes" xml:space="preserve">
          <source>Get location for a single label.</source>
          <target state="translated">获取单个标签的位置。</target>
        </trans-unit>
        <trans-unit id="e8470b50a051d8c2a1e07f71b2068d0272a87805" translate="yes" xml:space="preserve">
          <source>Get minute of the hour component of the Period.</source>
          <target state="translated">获取周期的小时分量的分钟。</target>
        </trans-unit>
        <trans-unit id="61c884339a71957b8fa72a90bf638fe5fdb4f3e5" translate="yes" xml:space="preserve">
          <source>Get slice location given start label(s) and end label(s).</source>
          <target state="translated">获取给定的起始标签和结束标签的切片位置。</target>
        </trans-unit>
        <trans-unit id="3b74328d49b5994b7d4f9426591fe89e3cfd0532" translate="yes" xml:space="preserve">
          <source>Get the</source>
          <target state="translated">获取</target>
        </trans-unit>
        <trans-unit id="32e22c5444ec637133057a762bc46d660f56e619" translate="yes" xml:space="preserve">
          <source>Get the &amp;lsquo;info axis&amp;rsquo; (see Indexing for more)</source>
          <target state="translated">获取&amp;ldquo;信息轴&amp;rdquo;（有关更多信息，请参见索引）</target>
        </trans-unit>
        <trans-unit id="b6fc45b952a34180fe8692c511e1fbb4e6e6b7d4" translate="yes" xml:space="preserve">
          <source>Get the &amp;lsquo;info axis&amp;rsquo; (see Indexing for more).</source>
          <target state="translated">获取&amp;ldquo;信息轴&amp;rdquo;（有关更多信息，请参见索引）。</target>
        </trans-unit>
        <trans-unit id="e9b674ec2f37a30b7d5417d9d9378cd3eba5604d" translate="yes" xml:space="preserve">
          <source>Get the &lt;code&gt;n&lt;/code&gt; largest elements.</source>
          <target state="translated">获取最大的 &lt;code&gt;n&lt;/code&gt; 个元素。</target>
        </trans-unit>
        <trans-unit id="eca332631315a697ab2dadd0c683ad9188881f34" translate="yes" xml:space="preserve">
          <source>Get the &lt;code&gt;n&lt;/code&gt; smallest elements.</source>
          <target state="translated">获取 &lt;code&gt;n&lt;/code&gt; 个最小的元素。</target>
        </trans-unit>
        <trans-unit id="4601ee7e2fc8bf47de5b97b0291cc9199dcbd1f0" translate="yes" xml:space="preserve">
          <source>Get the Timestamp for the start of the period.</source>
          <target state="translated">获取期间开始的时间戳。</target>
        </trans-unit>
        <trans-unit id="07f7d1de1063ebe9947bb90e5cdae317654a67e9" translate="yes" xml:space="preserve">
          <source>Get the actual data stored within.</source>
          <target state="translated">获取其中存储的实际数据。</target>
        </trans-unit>
        <trans-unit id="99634341ab162b4a7396497551aed6dd030cfe5b" translate="yes" xml:space="preserve">
          <source>Get the day component of the Period.</source>
          <target state="translated">获取Period的日分量。</target>
        </trans-unit>
        <trans-unit id="4a98cce76b327ba3b387b56ccf083be789e26381" translate="yes" xml:space="preserve">
          <source>Get the day of the week.</source>
          <target state="translated">获取一周中的一天。</target>
        </trans-unit>
        <trans-unit id="189df6716b5a6b1d989b4c51ba0f2748cb480e4d" translate="yes" xml:space="preserve">
          <source>Get the day of the year.</source>
          <target state="translated">获得一年中的一天。</target>
        </trans-unit>
        <trans-unit id="3deee4a9d34c0e6128411af19bb5850492ac27ff" translate="yes" xml:space="preserve">
          <source>Get the hour component of the Period.</source>
          <target state="translated">获取Period的小时分量。</target>
        </trans-unit>
        <trans-unit id="62648ef6be87d89f5f8136953dd96632265809c2" translate="yes" xml:space="preserve">
          <source>Get the hour of the day component of the Period.</source>
          <target state="translated">获取Period的一天中的小时数。</target>
        </trans-unit>
        <trans-unit id="4f664bca93b0209423129c921a083c98b2152f5d" translate="yes" xml:space="preserve">
          <source>Get the minute component of the Period.</source>
          <target state="translated">获取周期的分量。</target>
        </trans-unit>
        <trans-unit id="e5068a6788db19fad22f4e850406d75cc69f2210" translate="yes" xml:space="preserve">
          <source>Get the mode(s) of each element along the selected axis.</source>
          <target state="translated">沿着选定的轴获取每个元素的模式。</target>
        </trans-unit>
        <trans-unit id="69e4c4ddf76d3ec246218509166a03502fe01840" translate="yes" xml:space="preserve">
          <source>Get the properties associated with this pandas object.</source>
          <target state="translated">获取与此pandas对象相关的属性。</target>
        </trans-unit>
        <trans-unit id="17b8d7dc3d99a3a7619e34b598ea2a54a9b136e0" translate="yes" xml:space="preserve">
          <source>Get the rows for the first 3 days:</source>
          <target state="translated">获得前3天的行。</target>
        </trans-unit>
        <trans-unit id="6a1dd6ed89163a698fe72b6a036b624ca3dfd259" translate="yes" xml:space="preserve">
          <source>Get the rows for the last 3 days:</source>
          <target state="translated">获取最近3天的行。</target>
        </trans-unit>
        <trans-unit id="e8d5ed0b60b1464f225b6afd929fe0b75bc9b685" translate="yes" xml:space="preserve">
          <source>Get the second component of the Period.</source>
          <target state="translated">获取周期的第二个分量。</target>
        </trans-unit>
        <trans-unit id="a7b83fc8ba8d64c22a2ea6d6c1df748bef59fdfc" translate="yes" xml:space="preserve">
          <source>Get the total number of days in the month that this period falls on.</source>
          <target state="translated">获取这个时期所在月份的总天数。</target>
        </trans-unit>
        <trans-unit id="8c6497692eca0d6502e69e194009ad5c889b26f0" translate="yes" xml:space="preserve">
          <source>Get the total number of days of the month that the Period falls in.</source>
          <target state="translated">获取该周期所在月份的总天数。</target>
        </trans-unit>
        <trans-unit id="ec5e090f583787b867bee0f65078446f1ea000fa" translate="yes" xml:space="preserve">
          <source>Get the week of the year on the given Period.</source>
          <target state="translated">在给定的周期内获得一年中的一周。</target>
        </trans-unit>
        <trans-unit id="2f4b514c04c85dbc73a28873d10a5448e0822974" translate="yes" xml:space="preserve">
          <source>Get value at specified row/column pair</source>
          <target state="translated">获取指定行/列的值</target>
        </trans-unit>
        <trans-unit id="e9db42f4395fcd5fb0233badf519ef8ac271a5f0" translate="yes" xml:space="preserve">
          <source>Get value within a Series</source>
          <target state="translated">在一个系列中获取价值</target>
        </trans-unit>
        <trans-unit id="f196f6bda0f581e85f5082a9236f74807e223dbe" translate="yes" xml:space="preserve">
          <source>Get value within a series</source>
          <target state="translated">在一个系列中获取数值</target>
        </trans-unit>
        <trans-unit id="59cd54cc529534492d232423983da9f637e45a87" translate="yes" xml:space="preserve">
          <source>Get values at several indexes</source>
          <target state="translated">获取多个指数的值</target>
        </trans-unit>
        <trans-unit id="13203bb9c3a173284d2d8adbcf5dfbfd5b23a1ad" translate="yes" xml:space="preserve">
          <source>Get values at several indexes and levels</source>
          <target state="translated">获取多个指数和级别的数值</target>
        </trans-unit>
        <trans-unit id="7737c7550574f5e4bba8b3eb93e76f282e82a8bd" translate="yes" xml:space="preserve">
          <source>Get values at specified column and axis</source>
          <target state="translated">获取指定列和轴的值</target>
        </trans-unit>
        <trans-unit id="c3cf089d4fdd1a573c5c5d9ef92841253297d6ed" translate="yes" xml:space="preserve">
          <source>Get values at specified index</source>
          <target state="translated">获取指定指数的数值</target>
        </trans-unit>
        <trans-unit id="1b70443afd4b6214bb9fbf7909cd12798c9821c6" translate="yes" xml:space="preserve">
          <source>Get values at specified index and level</source>
          <target state="translated">获取指定索引和级别的值</target>
        </trans-unit>
        <trans-unit id="3eef0696906c70598950c0cf85ca15d449e50d3d" translate="yes" xml:space="preserve">
          <source>Get values for a level of a MultiIndex.</source>
          <target state="translated">获取MultiIndex的一个级别的值。</target>
        </trans-unit>
        <trans-unit id="907aece8915b1fd3f6cf9d65eb58f61fcf680c08" translate="yes" xml:space="preserve">
          <source>Gets the number of days in the month.</source>
          <target state="translated">获取当月的天数。</target>
        </trans-unit>
        <trans-unit id="c39d2f841b730db156ae2ad4d2bc2d88e199c83f" translate="yes" xml:space="preserve">
          <source>Getting</source>
          <target state="translated">Getting</target>
        </trans-unit>
        <trans-unit id="f5e032919594a9cf02d07af96697f2910cd6272d" translate="yes" xml:space="preserve">
          <source>Getting and setting options</source>
          <target state="translated">获取和设置选项</target>
        </trans-unit>
        <trans-unit id="608052c50c86b3eb1e82a7ca328a285e362cdc4c" translate="yes" xml:space="preserve">
          <source>Getting data in/out</source>
          <target state="translated">输入/输出数据</target>
        </trans-unit>
        <trans-unit id="76e7a3a3f9c225fe820ba7e9cff10ea2a73b79a1" translate="yes" xml:space="preserve">
          <source>Getting started</source>
          <target state="translated">开始</target>
        </trans-unit>
        <trans-unit id="dc7206940ee12f67d6eae829d10799db2074f500" translate="yes" xml:space="preserve">
          <source>Getting started with Git</source>
          <target state="translated">开始使用Git</target>
        </trans-unit>
        <trans-unit id="141c851d4caafbc68efdb1a768132c88f34d77f5" translate="yes" xml:space="preserve">
          <source>Getting support</source>
          <target state="translated">获得支持</target>
        </trans-unit>
        <trans-unit id="f4dd5cea628dedba773ef68e17db081dfa538eb3" translate="yes" xml:space="preserve">
          <source>Getting the &amp;ldquo;raw data&amp;rdquo; inside a &lt;a href=&quot;../reference/api/pandas.dataframe#pandas.DataFrame&quot;&gt;&lt;code&gt;DataFrame&lt;/code&gt;&lt;/a&gt; is possibly a bit more complex. When your &lt;code&gt;DataFrame&lt;/code&gt; only has a single data type for all the columns, &lt;a href=&quot;../reference/api/pandas.dataframe.to_numpy#pandas.DataFrame.to_numpy&quot;&gt;&lt;code&gt;DataFrame.to_numpy()&lt;/code&gt;&lt;/a&gt; will return the underlying data:</source>
          <target state="translated">在&lt;a href=&quot;../reference/api/pandas.dataframe#pandas.DataFrame&quot;&gt; &lt;code&gt;DataFrame&lt;/code&gt; 中&lt;/a&gt;获取&amp;ldquo;原始数据&amp;rdquo;可能要复杂一些。当您的 &lt;code&gt;DataFrame&lt;/code&gt; 对于所有列仅具有单一数据类型时，&lt;a href=&quot;../reference/api/pandas.dataframe.to_numpy#pandas.DataFrame.to_numpy&quot;&gt; &lt;code&gt;DataFrame.to_numpy()&lt;/code&gt; &lt;/a&gt;将返回基础数据：</target>
        </trans-unit>
        <trans-unit id="21f6ceca1bbf6fe07b539a2f576e14d457783d96" translate="yes" xml:space="preserve">
          <source>Getting the &lt;code&gt;Index&lt;/code&gt; values of a &lt;code&gt;DataFrame&lt;/code&gt;:</source>
          <target state="translated">获取数据 &lt;code&gt;DataFrame&lt;/code&gt; 的 &lt;code&gt;Index&lt;/code&gt; 值：</target>
        </trans-unit>
        <trans-unit id="6581ebf227a8e26691ae34c23b5c2a21e509085d" translate="yes" xml:space="preserve">
          <source>Getting the examples pass the doctests in the validation script can sometimes be tricky. Here are some attention points:</source>
          <target state="translated">让例子通过验证脚本中的doctests有时会很棘手。这里有一些注意点。</target>
        </trans-unit>
        <trans-unit id="1be10a2c118e99a528e8d10b29eff17ab62e2d96" translate="yes" xml:space="preserve">
          <source>Getting values from an object with multi-axes selection uses the following notation (using &lt;code&gt;.loc&lt;/code&gt; as an example, but the following applies to &lt;code&gt;.iloc&lt;/code&gt; as well). Any of the axes accessors may be the null slice &lt;code&gt;:&lt;/code&gt;. Axes left out of the specification are assumed to be &lt;code&gt;:&lt;/code&gt;, e.g. &lt;code&gt;p.loc['a']&lt;/code&gt; is equivalent to &lt;code&gt;p.loc['a', :, :]&lt;/code&gt;.</source>
          <target state="translated">从具有多轴选择的对象获取值使用以下表示法（以 &lt;code&gt;.loc&lt;/code&gt; 为例，但以下内容也适用于 &lt;code&gt;.iloc&lt;/code&gt; ）。任何轴访问器都可以为null slice &lt;code&gt;:&lt;/code&gt; 。规格之外的轴假定为 &lt;code&gt;:&lt;/code&gt; ，例如 &lt;code&gt;p.loc['a']&lt;/code&gt; 等同于 &lt;code&gt;p.loc['a', :, :]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cd711296b40c18649d46559dd68b1ee0da737bc5" translate="yes" xml:space="preserve">
          <source>Given a 1d array, return an array of deterministic integers.</source>
          <target state="translated">给定一个1d数组,返回一个确定性整数数组。</target>
        </trans-unit>
        <trans-unit id="3a3796a0f5fe11d12313dd4f66af267c77c58905" translate="yes" xml:space="preserve">
          <source>Given a Series of points randomly sampled from an unknown distribution, estimate its PDF using KDE with automatic bandwidth determination and plot the results, evaluating them at 1000 equally spaced points (default):</source>
          <target state="translated">给定一个从未知分布中随机取样的点系列,使用KDE自动确定带宽来估计它的PDF,并绘制结果,在1000个等距的点上评估它们(默认)。</target>
        </trans-unit>
        <trans-unit id="3f46c4cef009aef06e3694e93a8139836dbe2191" translate="yes" xml:space="preserve">
          <source>Given a grouper, the function resamples it according to a string &amp;ldquo;string&amp;rdquo; -&amp;gt; &amp;ldquo;frequency&amp;rdquo;.</source>
          <target state="translated">给定一个石斑鱼，该函数根据字符串&amp;ldquo; string&amp;rdquo;-&amp;gt;&amp;ldquo; frequency&amp;rdquo;对其重新采样。</target>
        </trans-unit>
        <trans-unit id="a7c6bf9d23675574ea35af12d4bd450996ba46af" translate="yes" xml:space="preserve">
          <source>Given a table name and a SQLAlchemy connectable, returns a DataFrame. This function does not support DBAPI connections.</source>
          <target state="translated">给定一个表名和一个SQLAlchemy连接,返回一个DataFrame。该函数不支持DBAPI连接。</target>
        </trans-unit>
        <trans-unit id="b87d15eecdea8eb7653c12b4e51c23d4fea5052c" translate="yes" xml:space="preserve">
          <source>Given equal-length arrays of row and column labels, return an array of the values corresponding to each (row, col) pair.</source>
          <target state="translated">给定等长的行标签和列标签数组,返回每个(行,列)对对应的值的数组。</target>
        </trans-unit>
        <trans-unit id="fabde83b0c4b2113be9e8ecc3ebf7214a0f13ac7" translate="yes" xml:space="preserve">
          <source>Given the following time series</source>
          <target state="translated">给定以下时间序列</target>
        </trans-unit>
        <trans-unit id="0a2adc4aa886557fac5ae3f54e97e92a4f7cffca" translate="yes" xml:space="preserve">
          <source>Global flags applying to this object.</source>
          <target state="translated">适用于此对象的全局标志。</target>
        </trans-unit>
        <trans-unit id="6fcff4bc7b39ca253eddd5973a7f9609ada81a29" translate="yes" xml:space="preserve">
          <source>Global metadata applying to this dataset.</source>
          <target state="translated">适用于该数据集的全局元数据。</target>
        </trans-unit>
        <trans-unit id="453762880d5aba77583acd766f4497e2fda5fc63" translate="yes" xml:space="preserve">
          <source>Going forward, we are moving to a more &lt;em&gt;functional&lt;/em&gt; style using the &lt;a href=&quot;http://docs.pytest.org/en/latest/&quot;&gt;pytest&lt;/a&gt; framework, which offers a richer testing framework that will facilitate testing and developing. Thus, instead of writing test classes, we will write test functions like this:</source>
          <target state="translated">展望未来，我们将使用&lt;a href=&quot;http://docs.pytest.org/en/latest/&quot;&gt;pytest&lt;/a&gt;框架向更具&lt;em&gt;功能性的&lt;/em&gt;风格迈进，该框架提供了更丰富的测试框架，将有助于测试和开发。因此，代替编写测试类，我们将编写如下的测试函数：</target>
        </trans-unit>
        <trans-unit id="44e30797d5bd57312b121d1ba2c19ea22cf9065c" translate="yes" xml:space="preserve">
          <source>Going from long back to wide just takes some creative use of</source>
          <target state="translated">从长背到宽,只是需要一些创造性的运用。</target>
        </trans-unit>
        <trans-unit id="a5f07bcb9bd2209b6891a0a5088f4aee79499a3e" translate="yes" xml:space="preserve">
          <source>Going from long back to wide just takes some creative use of &lt;code&gt;unstack&lt;/code&gt;</source>
          <target state="translated">从长到大只需要创造性地利用 &lt;code&gt;unstack&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c0cda22631dd1ea825c1317ced801a160bf0d263" translate="yes" xml:space="preserve">
          <source>Google Big Query</source>
          <target state="translated">谷歌大查询</target>
        </trans-unit>
        <trans-unit id="2aa23a69a54076f50966d834705f7f8b7c75fb86" translate="yes" xml:space="preserve">
          <source>Google Big Query access</source>
          <target state="translated">谷歌大查询访问</target>
        </trans-unit>
        <trans-unit id="e7a072101b6dc4cffd92e0691a040783403ff051" translate="yes" xml:space="preserve">
          <source>Google BigQuery</source>
          <target state="translated">谷歌BigQuery</target>
        </trans-unit>
        <trans-unit id="baba5872dc3b988b52803423439f4bd3bf204801" translate="yes" xml:space="preserve">
          <source>Google BigQuery Account project ID. Optional when available from the environment.</source>
          <target state="translated">Google BigQuery账户项目ID。可选,当从环境中获得时。</target>
        </trans-unit>
        <trans-unit id="1e15a0e47310034f5db3e8c25f23a00ccb08922b" translate="yes" xml:space="preserve">
          <source>Google Cloud Storage access</source>
          <target state="translated">谷歌云存储访问</target>
        </trans-unit>
        <trans-unit id="d887b25f7c1a45f4ebe5a21e2237262384db2f4e" translate="yes" xml:space="preserve">
          <source>Google Finance</source>
          <target state="translated">谷歌金融</target>
        </trans-unit>
        <trans-unit id="000eb225364983805facb15a740de1dfd422fd39" translate="yes" xml:space="preserve">
          <source>Gotchas</source>
          <target state="translated">Gotchas</target>
        </trans-unit>
        <trans-unit id="55e73c0f5407b8794ebbf6f430bb0b67ff6270a1" translate="yes" xml:space="preserve">
          <source>Greater than of series and other.</source>
          <target state="translated">大于系列和其他。</target>
        </trans-unit>
        <trans-unit id="37b28639298b1f085109978610256242435a1984" translate="yes" xml:space="preserve">
          <source>Group By: split-apply-combine</source>
          <target state="translated">按组划分。split-apply-combine</target>
        </trans-unit>
        <trans-unit id="36e4d51c149b3d21c306bc1edf9124e952d77e5c" translate="yes" xml:space="preserve">
          <source>Group DataFrame columns, compute a set of metrics and return a named Series. The Series name is used as the name for the column index. This is especially useful in conjunction with reshaping operations such as stacking in which the column index name will be used as the name of the inserted column:</source>
          <target state="translated">对DataFrame列进行分组,计算出一组指标,并返回一个命名的Series。Series名称被用作列索引的名称。这在与重塑操作(如堆叠)结合使用时特别有用,因为在这些操作中,列索引名称将被用作插入列的名称。</target>
        </trans-unit>
        <trans-unit id="3ad5aa335bf8f7a15b17daec2eb082dce11e523f" translate="yes" xml:space="preserve">
          <source>Group DataFrame or Series using a mapper or by a Series of columns.</source>
          <target state="translated">使用一个映射器或按列的系列对DataFrame或Series进行分组。</target>
        </trans-unit>
        <trans-unit id="8291b5d6b85048869cd6ea6e9f4ffc88a7e8d37d" translate="yes" xml:space="preserve">
          <source>Group DataFrame using a mapper or by a Series of columns.</source>
          <target state="translated">使用一个映射器或通过一系列的列来分组DataFrame。</target>
        </trans-unit>
        <trans-unit id="5d14eb2dd66311c2062021949c071c58f2d5ad2c" translate="yes" xml:space="preserve">
          <source>Group Series using a mapper or by a Series of columns.</source>
          <target state="translated">使用映射器或按列的系列进行分组。</target>
        </trans-unit>
        <trans-unit id="936a26a0e5b573119c16b0b168b4db2a80507b68" translate="yes" xml:space="preserve">
          <source>Group by mapping, function, label, or list of labels.</source>
          <target state="translated">按映射、功能、标签或标签列表分组。</target>
        </trans-unit>
        <trans-unit id="257f9dba89392c25e6d298b31a0db2b62384f5f0" translate="yes" xml:space="preserve">
          <source>Group by: split-apply-combine</source>
          <target state="translated">组别:分割-应用-合并</target>
        </trans-unit>
        <trans-unit id="7296f39827af27186dc97498d3664bcda7a0278b" translate="yes" xml:space="preserve">
          <source>Group left DataFrame by group columns and merge piece by piece with right DataFrame</source>
          <target state="translated">将左边的DataFrame按组列进行分组,并与右边的DataFrame逐个合并。</target>
        </trans-unit>
        <trans-unit id="1f9820c3ad50c61829ca1a72ee875102ae297e1f" translate="yes" xml:space="preserve">
          <source>Group left DataFrame by group columns and merge piece by piece with right DataFrame.</source>
          <target state="translated">将左侧DataFrame按组列进行分组,并与右侧DataFrame逐一合并。</target>
        </trans-unit>
        <trans-unit id="52590aceb82999e5cffb23f0d3a8acd6d395ff36" translate="yes" xml:space="preserve">
          <source>Group right DataFrame by group columns and merge piece by piece with left DataFrame</source>
          <target state="translated">将右边的DataFrame按组列进行分组,并与左边的DataFrame逐块合并。</target>
        </trans-unit>
        <trans-unit id="d78b4a917ca3ef22a8eb634f30065e077612ce87" translate="yes" xml:space="preserve">
          <source>Group right DataFrame by group columns and merge piece by piece with left DataFrame.</source>
          <target state="translated">将右侧DataFrame按组列进行分组,并与左侧DataFrame逐个合并。</target>
        </trans-unit>
        <trans-unit id="5a98397137ec4e2773eeafe47898de4f7267c4f7" translate="yes" xml:space="preserve">
          <source>Group the index labels by a given array of values.</source>
          <target state="translated">按给定的数值数组对索引标签进行分组。</target>
        </trans-unit>
        <trans-unit id="ab60d1f2ebb48b9206dd44e2508b4b2d7b6004c8" translate="yes" xml:space="preserve">
          <source>Group where to start walking.</source>
          <target state="translated">组哪里开始走。</target>
        </trans-unit>
        <trans-unit id="41b5a96267dccb4d82371d385b32a0d7df0a44e1" translate="yes" xml:space="preserve">
          <source>Group where to start walking. If not supplied, the root group is used.</source>
          <target state="translated">开始行走的组。如果没有提供,则使用根组。</target>
        </trans-unit>
        <trans-unit id="63718ab0ad2dfd113729e407e5fdf344eb231fd5" translate="yes" xml:space="preserve">
          <source>GroupBy</source>
          <target state="translated">GroupBy</target>
        </trans-unit>
        <trans-unit id="84373419f62063ca22c67894c9fcd3ced0ccab74" translate="yes" xml:space="preserve">
          <source>GroupBy dropna</source>
          <target state="translated">GroupBy dropna</target>
        </trans-unit>
        <trans-unit id="3365b262c12d46ff24a3b1d2eedf97772022e503" translate="yes" xml:space="preserve">
          <source>GroupBy object attributes</source>
          <target state="translated">GroupBy对象属性</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
