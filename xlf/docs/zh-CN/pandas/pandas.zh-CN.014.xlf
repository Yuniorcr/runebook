<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="pandas">
    <body>
      <group id="pandas">
        <trans-unit id="67f55947a3407f40ea29d802d9e21cc6c662d3cc" translate="yes" xml:space="preserve">
          <source>An array of values to be printed in, e.g. the Series repr</source>
          <target state="translated">一个要打印的数值数组,例如:Series repr...。</target>
        </trans-unit>
        <trans-unit id="a4dee4090deedf2711f4fd67e3156127ced095b4" translate="yes" xml:space="preserve">
          <source>An array suitable for factorization. This should maintain order and be a supported dtype (Float64, Int64, UInt64, String, Object). By default, the extension array is cast to object dtype.</source>
          <target state="translated">一个适合于分解的数组,它应该保持顺序并且是支持的dtype(Float64,Int64,UInt64,String,Object)。这个数组应该保持顺序,并且是支持的dtype(Float64,Int64,UInt64,String,Object)。默认情况下,扩展数组会被转换为对象dtype。</target>
        </trans-unit>
        <trans-unit id="097e7ede4817318ab5b4cd1266acc311559067e1" translate="yes" xml:space="preserve">
          <source>An array-like containing the elements taken from the object.</source>
          <target state="translated">一个包含从对象中提取的元素的数组类。</target>
        </trans-unit>
        <trans-unit id="bfed5139494c5d4e24452c1dffe39e1f3454a1d3" translate="yes" xml:space="preserve">
          <source>An array-like object representing the respective bin for each value of</source>
          <target state="translated">一个类似数组的对象,代表了每个值的bin。</target>
        </trans-unit>
        <trans-unit id="6f3b93a374a21a89c8b42336f3e05092d94e1f9a" translate="yes" xml:space="preserve">
          <source>An array-like object representing the respective bin for each value of &lt;code&gt;x&lt;/code&gt;. The type depends on the value of &lt;code&gt;labels&lt;/code&gt;.</source>
          <target state="translated">代表 &lt;code&gt;x&lt;/code&gt; 的每个值的相应bin的类似数组的对象。类型取决于 &lt;code&gt;labels&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="369f3c1a328c09e7a1c230d26280769b2cb27ce2" translate="yes" xml:space="preserve">
          <source>An axes of the current figure.</source>
          <target state="translated">当前图的一个轴。</target>
        </trans-unit>
        <trans-unit id="56e46fa4c633f561daea2cf188be81ccfb1fdb29" translate="yes" xml:space="preserve">
          <source>An empty CategoricalDtype with a specific dtype can be created by providing an empty index. As follows,</source>
          <target state="translated">可以通过提供一个空的索引来创建一个具有特定dtype的空CategoricalDtype。具体如下:</target>
        </trans-unit>
        <trans-unit id="64078a9d289cfc61ae078d0baf4fb1f665b89e69" translate="yes" xml:space="preserve">
          <source>An equivalent &lt;a href=&quot;../reference/api/pandas.series.dropna#pandas.Series.dropna&quot;&gt;&lt;code&gt;dropna()&lt;/code&gt;&lt;/a&gt; is available for Series. DataFrame.dropna has considerably more options than Series.dropna, which can be examined &lt;a href=&quot;../reference/frame#api-dataframe-missing&quot;&gt;in the API&lt;/a&gt;.</source>
          <target state="translated">等效的&lt;a href=&quot;../reference/api/pandas.series.dropna#pandas.Series.dropna&quot;&gt; &lt;code&gt;dropna()&lt;/code&gt; &lt;/a&gt;可用于Series。与Series.dropna相比，DataFrame.dropna具有更多的选项，可以&lt;a href=&quot;../reference/frame#api-dataframe-missing&quot;&gt;在API中&lt;/a&gt;进行检查。</target>
        </trans-unit>
        <trans-unit id="3314fcfba8e2f2c60fe01eaa33c8eb7e82a66dc6" translate="yes" xml:space="preserve">
          <source>An example of an actual empty DataFrame. Notice the index is empty:</source>
          <target state="translated">一个实际的空DataFrame的例子。注意索引是空的。</target>
        </trans-unit>
        <trans-unit id="48e7cc0068ffad01dbdccc5fa78772b552a5e4d3" translate="yes" xml:space="preserve">
          <source>An example of how holidays and holiday calendars are defined:</source>
          <target state="translated">假期和节日日历如何定义的例子。</target>
        </trans-unit>
        <trans-unit id="2bc2df970445a0871f56ae75d87fda781efc92d2" translate="yes" xml:space="preserve">
          <source>An example where the category type is not preserved is if you take one single row: the resulting &lt;code&gt;Series&lt;/code&gt; is of dtype &lt;code&gt;object&lt;/code&gt;:</source>
          <target state="translated">如果您只一行，则不保留类别类型的示例是：产生的 &lt;code&gt;Series&lt;/code&gt; 是dtype &lt;code&gt;object&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="505929e337f583f52da37a04958fc64f74b14fe2" translate="yes" xml:space="preserve">
          <source>An example with subplots, so an array of axes is returned.</source>
          <target state="translated">一个带有子图的例子,所以返回一个轴数组。</target>
        </trans-unit>
        <trans-unit id="34f6871b726eeea0244b8db488d4065c2c5178d8" translate="yes" xml:space="preserve">
          <source>An exception on this basic propagation rule are &lt;em&gt;reductions&lt;/em&gt; (such as the mean or the minimum), where pandas defaults to skipping missing values. See &lt;a href=&quot;#missing-data-calculations&quot;&gt;above&lt;/a&gt; for more.</source>
          <target state="translated">此基本传播规则的一个例外是&lt;em&gt;减少&lt;/em&gt;（例如均值或最小值），其中熊猫默认为跳过缺失值。有关更多信息&lt;a href=&quot;#missing-data-calculations&quot;&gt;，&lt;/a&gt;请参见上文。</target>
        </trans-unit>
        <trans-unit id="81ebc4aa24c788287486c5587f8e4f8dda1446a5" translate="yes" xml:space="preserve">
          <source>An expanding window yields the value of an aggregation statistic with all the data available up to that point in time. Since these calculations are a special case of rolling statistics, they are implemented in pandas such that the following two calls are equivalent:</source>
          <target state="translated">扩大的窗口会产生一个聚合统计的值,其中包含了截至该时间点的所有数据。由于这些计算是滚动统计的一种特殊情况,它们在pandas中实现,因此以下两个调用是等价的。</target>
        </trans-unit>
        <trans-unit id="0242fdc195342aaa71b0edb5dd306570b29a2115" translate="yes" xml:space="preserve">
          <source>An exponentially weighted window is similar to an expanding window but with each prior point being exponentially weighted down relative to the current point.</source>
          <target state="translated">指数加权窗口类似于一个扩大的窗口,但每个先前的点相对于当前的点都是指数加权的。</target>
        </trans-unit>
        <trans-unit id="226454d30a9070403b645515633c958fb571aad3" translate="yes" xml:space="preserve">
          <source>An if-then on one column</source>
          <target state="translated">一列的if-then</target>
        </trans-unit>
        <trans-unit id="ec71265f99608c07b0017b838a24f938e5b92c3f" translate="yes" xml:space="preserve">
          <source>An if-then with assignment to 2 columns:</source>
          <target state="translated">一个if-then,分配给2列。</target>
        </trans-unit>
        <trans-unit id="897727e58a510bbf3b5dec014490adf2865d8c94" translate="yes" xml:space="preserve">
          <source>An immutable container for datetimes.</source>
          <target state="translated">一个不可更改的日期容器。</target>
        </trans-unit>
        <trans-unit id="3b7291cb25fc5cf793f30b4e32ceadabe5a35c03" translate="yes" xml:space="preserve">
          <source>An indexer into</source>
          <target state="translated">一个索引器进入</target>
        </trans-unit>
        <trans-unit id="56cc23fff6754e9e9184319751d93350980feda6" translate="yes" xml:space="preserve">
          <source>An indexer into &lt;code&gt;self&lt;/code&gt; that specifies which values are used in the formatting process.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; 索引器，用于指定格式化过程中使用的值。</target>
        </trans-unit>
        <trans-unit id="5f6b4be800bb58881690a2f9195dc6115ce189e9" translate="yes" xml:space="preserve">
          <source>An indexer into the target of the values not found. These correspond to the -1 in the indexer array.</source>
          <target state="translated">一个索引器进入目标的值没有找到。这些值对应于索引器数组中的-1。</target>
        </trans-unit>
        <trans-unit id="fd3728e55d62590bd20d4b70c4a0186859f72e80" translate="yes" xml:space="preserve">
          <source>An indicated for whether or not your array is being printed within a Series, DataFrame, or Index (True), or just by itself (False). This may be useful if you want scalar values to appear differently within a Series versus on its own (e.g. quoted or not).</source>
          <target state="translated">表示数组是否在系列、数据帧或索引中被打印(True),或者只是单独打印(False)。如果你想让标量值以不同的方式出现在Series中,而不是在它本身(例如,是否加引号),这可能会很有用。</target>
        </trans-unit>
        <trans-unit id="48e84c268d911a19a465c9ca0d9df0f4df316ca6" translate="yes" xml:space="preserve">
          <source>An instance of &amp;lsquo;ExtensionDtype&amp;rsquo;.</source>
          <target state="translated">&amp;ldquo; ExtensionDtype&amp;rdquo;的实例。</target>
        </trans-unit>
        <trans-unit id="1b823750dc87c78b9f72dbde378574755d0b86d5" translate="yes" xml:space="preserve">
          <source>An instance of &lt;code&gt;CategoricalDtype&lt;/code&gt; to use for this categorical</source>
          <target state="translated">用于此分类的 &lt;code&gt;CategoricalDtype&lt;/code&gt; 的实例</target>
        </trans-unit>
        <trans-unit id="8da1392006266e99cc98d20d028e2e6bbac3aea4" translate="yes" xml:space="preserve">
          <source>An instance of &lt;code&gt;CategoricalDtype&lt;/code&gt; to use for this categorical.</source>
          <target state="translated">用于此分类的 &lt;code&gt;CategoricalDtype&lt;/code&gt; 的实例。</target>
        </trans-unit>
        <trans-unit id="cf68fa4f030577ebc623df235e7d76bbcab774b5" translate="yes" xml:space="preserve">
          <source>An integer NumPy array that&amp;rsquo;s an indexer into the original ExtensionArray.</source>
          <target state="translated">一个整数NumPy数组，它是原始ExtensionArray的索引器。</target>
        </trans-unit>
        <trans-unit id="3cd8dd27fddbf105b49cbea3bca4904191d898c6" translate="yes" xml:space="preserve">
          <source>An integer array, where each integer points to a category in categories or dtype.categories, or else is -1 for NaN.</source>
          <target state="translated">一个整数组,其中每个整数都指向category或dtype.category中的一个类别,否则NaN为-1。</target>
        </trans-unit>
        <trans-unit id="19ea293f39c29163e601fc4a6cd3035e33e4e4a6" translate="yes" xml:space="preserve">
          <source>An integer e.g. &lt;code&gt;5&lt;/code&gt;.</source>
          <target state="translated">整数，例如 &lt;code&gt;5&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="67524ade1214f8c09adc58dabccd8b77c5503652" translate="yes" xml:space="preserve">
          <source>An integer ndarray that&amp;rsquo;s an indexer into</source>
          <target state="translated">整数ndarray，它是索引器</target>
        </trans-unit>
        <trans-unit id="fc8cf5c5e6a565b6547a8a9c047785beebbc0e82" translate="yes" xml:space="preserve">
          <source>An integer ndarray that&amp;rsquo;s an indexer into &lt;code&gt;uniques&lt;/code&gt;. &lt;code&gt;uniques.take(labels)&lt;/code&gt; will have the same values as &lt;code&gt;values&lt;/code&gt;.</source>
          <target state="translated">整数ndarray，是 &lt;code&gt;uniques&lt;/code&gt; 的索引器。 &lt;code&gt;uniques.take(labels)&lt;/code&gt; 将具有与values相同的 &lt;code&gt;values&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4f4b0e493707a633f44b15109cc3f05d465e496c" translate="yes" xml:space="preserve">
          <source>An integer ndarray with the factorized values.</source>
          <target state="translated">一个整数ndarray,包含因子值。</target>
        </trans-unit>
        <trans-unit id="f83f4368b934f5515e91954b47a7cf56c066614f" translate="yes" xml:space="preserve">
          <source>An integer, e.g. &lt;code&gt;5&lt;/code&gt;.</source>
          <target state="translated">整数，例如 &lt;code&gt;5&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e44037454fba4531deeb47c52aea3cfdde9aa97e" translate="yes" xml:space="preserve">
          <source>An ndarray containing the non- &lt;code&gt;fill_value&lt;/code&gt; values.</source>
          <target state="translated">包含非 &lt;code&gt;fill_value&lt;/code&gt; 值的ndarray。</target>
        </trans-unit>
        <trans-unit id="4009b73f727e2ff299e1c74f97b206fb8c97192c" translate="yes" xml:space="preserve">
          <source>An ndarray is returned with one &lt;a href=&quot;https://matplotlib.org/api/axes_api.html#matplotlib.axes.Axes&quot;&gt;&lt;code&gt;matplotlib.axes.Axes&lt;/code&gt;&lt;/a&gt; per column when &lt;code&gt;subplots=True&lt;/code&gt;.</source>
          <target state="translated">当subplots &lt;code&gt;subplots=True&lt;/code&gt; 时，返回的ndarray 每列带有一个&lt;a href=&quot;https://matplotlib.org/api/axes_api.html#matplotlib.axes.Axes&quot;&gt; &lt;code&gt;matplotlib.axes.Axes&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="98387f74c95263ee5465e0e9565177e28eedcb21" translate="yes" xml:space="preserve">
          <source>An ndarray that allows field access using attributes, analogous to typed columns in a spreadsheet.</source>
          <target state="translated">一个允许使用属性访问字段的ndarray,类似于电子表格中的键入列。</target>
        </trans-unit>
        <trans-unit id="c7e3e0c62088399ff46868c6c90f294672bac3f0" translate="yes" xml:space="preserve">
          <source>An ndarray with int64 dtype.</source>
          <target state="translated">一个int64 dtype的ndarray。</target>
        </trans-unit>
        <trans-unit id="5c296d52b57abbdb7cf83c5f1ad8c702810e4abb" translate="yes" xml:space="preserve">
          <source>An object of same type as caller if inplace=False, None otherwise.</source>
          <target state="translated">如果inplace=False,则与caller类型相同的对象,否则为None。</target>
        </trans-unit>
        <trans-unit id="5dea7de95a165275431f6c47303dee4b8deb91bb" translate="yes" xml:space="preserve">
          <source>An object of type DataFrame or None if &lt;code&gt;inplace=True&lt;/code&gt;.</source>
          <target state="translated">类型为DataFrame的对象；如果inplace &lt;code&gt;inplace=True&lt;/code&gt; 则为None 。</target>
        </trans-unit>
        <trans-unit id="fe513b607e08baa49759fbfbeaf3baafe0b60bab" translate="yes" xml:space="preserve">
          <source>An object of type Series or None if &lt;code&gt;inplace=True&lt;/code&gt;.</source>
          <target state="translated">类型为Series的对象，如果 &lt;code&gt;inplace=True&lt;/code&gt; ,则为None 。</target>
        </trans-unit>
        <trans-unit id="51883ce3490bc76950586f85485f1278c50f498a" translate="yes" xml:space="preserve">
          <source>An object to iterate over namedtuples for each row in the DataFrame with the first field possibly being the index and following fields being the column values.</source>
          <target state="translated">一个对象,用于迭代DataFrame中每一行的命名图元组,第一个字段可能是索引,后面的字段是列值。</target>
        </trans-unit>
        <trans-unit id="052502227b10596ea7bd7ff5a2b3a2aa47caedb4" translate="yes" xml:space="preserve">
          <source>An object-dtype &lt;a href=&quot;https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html#numpy.ndarray&quot;&gt;&lt;code&gt;numpy.ndarray&lt;/code&gt;&lt;/a&gt; with &lt;a href=&quot;../reference/api/pandas.timestamp#pandas.Timestamp&quot;&gt;&lt;code&gt;Timestamp&lt;/code&gt;&lt;/a&gt; objects, each with the correct &lt;code&gt;tz&lt;/code&gt;</source>
          <target state="translated">带有&lt;a href=&quot;../reference/api/pandas.timestamp#pandas.Timestamp&quot;&gt; &lt;code&gt;Timestamp&lt;/code&gt; &lt;/a&gt;对象的object- &lt;a href=&quot;https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html#numpy.ndarray&quot;&gt; &lt;code&gt;numpy.ndarray&lt;/code&gt; &lt;/a&gt;，每个对象具有正确的 &lt;code&gt;tz&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b8a84d9d31e0102802ac91d90e60c0e56c4ceda5" translate="yes" xml:space="preserve">
          <source>An obvious example would be the &lt;code&gt;head()&lt;/code&gt; and &lt;code&gt;tail()&lt;/code&gt; methods. As &lt;code&gt;tail()&lt;/code&gt; does the equivalent as &lt;code&gt;head()&lt;/code&gt; but at the end of the &lt;code&gt;Series&lt;/code&gt; or &lt;code&gt;DataFrame&lt;/code&gt; instead of at the beginning, it is good to let the users know about it.</source>
          <target state="translated">一个明显的例子是 &lt;code&gt;head()&lt;/code&gt; 和 &lt;code&gt;tail()&lt;/code&gt; 方法。因为 &lt;code&gt;tail()&lt;/code&gt; 与 &lt;code&gt;head()&lt;/code&gt; 等效，但是在 &lt;code&gt;Series&lt;/code&gt; 或 &lt;code&gt;DataFrame&lt;/code&gt; 的末尾而不是在开头，所以最好让用户知道它。</target>
        </trans-unit>
        <trans-unit id="a696766ba6d7491bfcf0381e2539f39a5dbc5820" translate="yes" xml:space="preserve">
          <source>An obvious one is aggregation via the &lt;a href=&quot;../reference/api/pandas.core.groupby.dataframegroupby.aggregate#pandas.core.groupby.DataFrameGroupBy.aggregate&quot;&gt;&lt;code&gt;aggregate()&lt;/code&gt;&lt;/a&gt; or equivalently &lt;code&gt;agg()&lt;/code&gt; method:</source>
          <target state="translated">一个明显的方法是通过&lt;a href=&quot;../reference/api/pandas.core.groupby.dataframegroupby.aggregate#pandas.core.groupby.DataFrameGroupBy.aggregate&quot;&gt; &lt;code&gt;aggregate()&lt;/code&gt; &lt;/a&gt;或等效的 &lt;code&gt;agg()&lt;/code&gt; 方法进行聚合：</target>
        </trans-unit>
        <trans-unit id="e62b228def8925744d823ef2ffef963d52366efd" translate="yes" xml:space="preserve">
          <source>An offset timedelta added to the origin.</source>
          <target state="translated">在原点上加了一个偏移量timedelta。</target>
        </trans-unit>
        <trans-unit id="87c7d0f96ed3a44693fa95fcadd9ff46eec98368" translate="yes" xml:space="preserve">
          <source>An ordered Categorical preserves the category ordering.</source>
          <target state="translated">一个有序的Categorical保留了类别排序。</target>
        </trans-unit>
        <trans-unit id="e058f1934a0a020951f26d4bb40826e28044d225" translate="yes" xml:space="preserve">
          <source>An unordered Categorical will return categories in the order of appearance.</source>
          <target state="translated">无序Categorical将按外观顺序返回类别。</target>
        </trans-unit>
        <trans-unit id="1849e019365762d627f3781fc4bcb161d4985b3b" translate="yes" xml:space="preserve">
          <source>An upsample sample of the &lt;code&gt;DataFrame&lt;/code&gt; with replacement: Note that</source>
          <target state="translated">带有替换的 &lt;code&gt;DataFrame&lt;/code&gt; 的上采样示例：请注意，</target>
        </trans-unit>
        <trans-unit id="bf50ebe3d358d4a0cb7c54e22cac343ba4920b60" translate="yes" xml:space="preserve">
          <source>An upsampled Series or DataFrame with &lt;code&gt;NaN&lt;/code&gt; values filled with their nearest value.</source>
          <target state="translated">使用 &lt;code&gt;NaN&lt;/code&gt; 值填充其最近值的上采样的Series或DataFrame 。</target>
        </trans-unit>
        <trans-unit id="522d724913802d245374eb55c76e079a834e2728" translate="yes" xml:space="preserve">
          <source>An upsampled Series or DataFrame with backward filled NaN values.</source>
          <target state="translated">具有向后填充NaN值的上采样系列或DataFrame。</target>
        </trans-unit>
        <trans-unit id="0b9e7068c1dbb32f1132f5aa9937793c25daf246" translate="yes" xml:space="preserve">
          <source>An upsampled Series or DataFrame with missing values filled.</source>
          <target state="translated">填充缺失值的上采样系列或DataFrame。</target>
        </trans-unit>
        <trans-unit id="c748a4f33b925ab2152a5b47a0a90bfe3acf1e05" translate="yes" xml:space="preserve">
          <source>An upsampled Series.</source>
          <target state="translated">一个上档次的系列。</target>
        </trans-unit>
        <trans-unit id="fd590ef748561f10fd881dfd052c3aedf1bcfb18" translate="yes" xml:space="preserve">
          <source>Analogous function for DataFrame.</source>
          <target state="translated">DataFrame的类似功能。</target>
        </trans-unit>
        <trans-unit id="547a3b4f2f0ecef974d0a9bb552ee6f3a31dc474" translate="yes" xml:space="preserve">
          <source>Analogous method for DataFrame.</source>
          <target state="translated">DataFrame的类似方法。</target>
        </trans-unit>
        <trans-unit id="887ab48cf55e9cca52da3c27725e2eda36702966" translate="yes" xml:space="preserve">
          <source>Analogous, but less strict, relying on re.search instead of re.match.</source>
          <target state="translated">类似,但不那么严格,依靠re.search而不是re.match。</target>
        </trans-unit>
        <trans-unit id="e85497ece22b07c717d81f1822015435311d6ee0" translate="yes" xml:space="preserve">
          <source>Analogous, but stricter, relying on re.match instead of re.search.</source>
          <target state="translated">类似,但更严格,依靠re.match而不是re.search。</target>
        </trans-unit>
        <trans-unit id="ec838aa4601a807389f44fb7f65bdd72acaf7034" translate="yes" xml:space="preserve">
          <source>Analogously, &lt;a href=&quot;../reference/api/pandas.dataframe.cov#pandas.DataFrame.cov&quot;&gt;&lt;code&gt;DataFrame.cov()&lt;/code&gt;&lt;/a&gt; to compute pairwise covariances among the series in the DataFrame, also excluding NA/null values.</source>
          <target state="translated">类似地，&lt;a href=&quot;../reference/api/pandas.dataframe.cov#pandas.DataFrame.cov&quot;&gt; &lt;code&gt;DataFrame.cov()&lt;/code&gt; &lt;/a&gt;用于计算DataFrame中序列之间的成对协方差，也排除NA / null值。</target>
        </trans-unit>
        <trans-unit id="f233cc5bad729ac5e35594372ae3552091446193" translate="yes" xml:space="preserve">
          <source>Analogously, all columns in an existing &lt;code&gt;DataFrame&lt;/code&gt; can be batch converted using &lt;a href=&quot;../reference/api/pandas.dataframe.astype#pandas.DataFrame.astype&quot;&gt;&lt;code&gt;DataFrame.astype()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">类似地，可以使用&lt;a href=&quot;../reference/api/pandas.dataframe.astype#pandas.DataFrame.astype&quot;&gt; &lt;code&gt;DataFrame.astype()&lt;/code&gt; &lt;/a&gt;批量转换现有 &lt;code&gt;DataFrame&lt;/code&gt; 中的所有列：</target>
        </trans-unit>
        <trans-unit id="83e7fb0526878aaf979ce612466ab216c7ea021c" translate="yes" xml:space="preserve">
          <source>Analyzes both numeric and object series, as well as &lt;code&gt;DataFrame&lt;/code&gt; column sets of mixed data types. The output will vary depending on what is provided. Refer to the notes below for more detail.</source>
          <target state="translated">分析数值和对象系列，以及混合数据类型的 &lt;code&gt;DataFrame&lt;/code&gt; 列集。输出将根据提供的内容而有所不同。有关更多详细信息，请参阅以下注释。</target>
        </trans-unit>
        <trans-unit id="3721206edca6d0bf891efcbfd1498e164a56fd21" translate="yes" xml:space="preserve">
          <source>Anchored offset semantics</source>
          <target state="translated">锚定偏移语义</target>
        </trans-unit>
        <trans-unit id="59ad3038577dec0f614176214f91d7903485271f" translate="yes" xml:space="preserve">
          <source>Anchored offsets</source>
          <target state="translated">锚定偏移</target>
        </trans-unit>
        <trans-unit id="32a8b1b862835a33c837de70caae292fe1ab7757" translate="yes" xml:space="preserve">
          <source>And also you can create string intervals</source>
          <target state="translated">你还可以创建字符串间隔</target>
        </trans-unit>
        <trans-unit id="626ce01756bed8e7f919ab8dbc6250276ae353e3" translate="yes" xml:space="preserve">
          <source>And crucially the input and output shapes of &lt;code&gt;func&lt;/code&gt; must match. If &lt;code&gt;x&lt;/code&gt; is the input then &lt;code&gt;func(x).shape == x.shape&lt;/code&gt;.</source>
          <target state="translated">至关重要的是， &lt;code&gt;func&lt;/code&gt; 的输入和输出形状必须匹配。如果 &lt;code&gt;x&lt;/code&gt; 是输入，则 &lt;code&gt;func(x).shape == x.shape&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8df9aa06083eae2dec150020929dac2e6f496afb" translate="yes" xml:space="preserve">
          <source>And now selection works as expected.</source>
          <target state="translated">而现在选择的工作与预期的一样。</target>
        </trans-unit>
        <trans-unit id="f9c5cc84e004a3bd81ce765ec1f8f0c42e365e49" translate="yes" xml:space="preserve">
          <source>And now with the color determined by a column as well.</source>
          <target state="translated">而现在的颜色也是由一列决定的。</target>
        </trans-unit>
        <trans-unit id="d05263930d64ce71f016b75882f2184c070183bb" translate="yes" xml:space="preserve">
          <source>And the dtypes:</source>
          <target state="translated">还有dtypes。</target>
        </trans-unit>
        <trans-unit id="7af088775c515e43d8f23ad06b9582bae5870862" translate="yes" xml:space="preserve">
          <source>And then import the data directly to a &lt;code&gt;DataFrame&lt;/code&gt; by calling:</source>
          <target state="translated">然后通过调用将数据直接导入到 &lt;code&gt;DataFrame&lt;/code&gt; 中：</target>
        </trans-unit>
        <trans-unit id="3d8064ecf537a6e821ad1ea7efc41aa58905083a" translate="yes" xml:space="preserve">
          <source>And then issue the following queries:</source>
          <target state="translated">然后发出以下查询。</target>
        </trans-unit>
        <trans-unit id="99154e7cb4d1188b5f8cb786e79b215b3aca2ab2" translate="yes" xml:space="preserve">
          <source>And you can explicitly force columns to be parsed as dates:</source>
          <target state="translated">而且你可以明确地强制列解析为日期。</target>
        </trans-unit>
        <trans-unit id="f8bea05e29d34e04e5494ec156767bb1de2b028e" translate="yes" xml:space="preserve">
          <source>And you&amp;rsquo;ll have the satisfaction of seeing your new and improved documentation!</source>
          <target state="translated">并且，您会满意地看到您的新文档和改进文档！</target>
        </trans-unit>
        <trans-unit id="74f5701e26bba2500f2b2914d8a67e75c3f5461b" translate="yes" xml:space="preserve">
          <source>Andrews Curves</source>
          <target state="translated">安德鲁斯曲线</target>
        </trans-unit>
        <trans-unit id="7ef069fc7103eb2d0caa86e898d238c4d0b17c83" translate="yes" xml:space="preserve">
          <source>Andrews curves</source>
          <target state="translated">安德鲁斯曲线</target>
        </trans-unit>
        <trans-unit id="ba237f0a79aa5d19454778b16d733f356f729ca4" translate="yes" xml:space="preserve">
          <source>Andrews curves allow one to plot multivariate data as a large number of curves that are created using the attributes of samples as coefficients for Fourier series, see the &lt;a href=&quot;https://en.wikipedia.org/wiki/Andrews_plot&quot;&gt;Wikipedia entry&lt;/a&gt; for more information. By coloring these curves differently for each class it is possible to visualize data clustering. Curves belonging to samples of the same class will usually be closer together and form larger structures.</source>
          <target state="translated">安德鲁斯曲线允许将多元数据绘制为大量曲线，这些曲线是使用样本的属性作为傅里叶级数的系数而创建的，有关更多信息，请参阅&lt;a href=&quot;https://en.wikipedia.org/wiki/Andrews_plot&quot;&gt;Wikipedia条目&lt;/a&gt;。通过为每个类别对这些曲线进行不同的着色，可以可视化数据聚类。属于同一类别的样本的曲线通常会更靠近在一起并形成较大的结构。</target>
        </trans-unit>
        <trans-unit id="4d55805f9339ee8baacbf8b6efb171e604e181d9" translate="yes" xml:space="preserve">
          <source>Andrews curves charts:</source>
          <target state="translated">安德鲁斯曲线图。</target>
        </trans-unit>
        <trans-unit id="30ed6a5ee55288b217480846194be4d815051fd3" translate="yes" xml:space="preserve">
          <source>Andrews curves have the functional form:</source>
          <target state="translated">安德鲁斯曲线具有函数形式。</target>
        </trans-unit>
        <trans-unit id="e67b6ac8de83b9e7a56a1832f17ebb5f5b37126f" translate="yes" xml:space="preserve">
          <source>Annotate a time-series plot</source>
          <target state="translated">对时间序列图进行注释</target>
        </trans-unit>
        <trans-unit id="25391dfd3db598e15c3fea71dae12d7d022c4400" translate="yes" xml:space="preserve">
          <source>Annotate a time-series plot #2</source>
          <target state="translated">注释时间序列图#2。</target>
        </trans-unit>
        <trans-unit id="7eecb4da37285619eb78112ef2dea0df8cf1a9a1" translate="yes" xml:space="preserve">
          <source>Another &lt;code&gt;DataFrame&lt;/code&gt;</source>
          <target state="translated">另一个数据 &lt;code&gt;DataFrame&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="17e4cf52e7f0ded798e994e5c852d6c9c54ade37" translate="yes" xml:space="preserve">
          <source>Another advantage to installing Anaconda is that you don&amp;rsquo;t need admin rights to install it. Anaconda can install in the user&amp;rsquo;s home directory, which makes it trivial to delete Anaconda if you decide (just delete that folder).</source>
          <target state="translated">安装Anaconda的另一个优点是您不需要管理员权限即可安装它。Anaconda可以安装在用户的主目录中，如果您决定（仅删除该文件夹），则删除Anaconda并不容易。</target>
        </trans-unit>
        <trans-unit id="5422f9b350b9eef6814666bddd7bac38094d585f" translate="yes" xml:space="preserve">
          <source>Another aggregation example is to compute the number of unique values of each group. This is similar to the &lt;code&gt;value_counts&lt;/code&gt; function, except that it only counts unique values.</source>
          <target state="translated">另一个聚合示例是计算每个组的唯一值的数量。这与 &lt;code&gt;value_counts&lt;/code&gt; 函数类似，除了它只计算唯一值。</target>
        </trans-unit>
        <trans-unit id="8e3fd703384b38d541e5d30bf03acd7bfe2af6a3" translate="yes" xml:space="preserve">
          <source>Another aggregation we can do is calculate the frequency in which the columns and rows occur together a.k.a. &amp;ldquo;cross tabulation&amp;rdquo;. To do this, we can pass &lt;code&gt;size&lt;/code&gt; to the &lt;code&gt;aggfunc&lt;/code&gt; parameter.</source>
          <target state="translated">我们可以做的另一种汇总方法是计算列和行一起出现的频率，也称为&amp;ldquo;交叉表&amp;rdquo;。为此，我们可以将 &lt;code&gt;size&lt;/code&gt; 传递给 &lt;code&gt;aggfunc&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="de1e56b8a1d248a4b551860ed017ab54b979f4ce" translate="yes" xml:space="preserve">
          <source>Another common data transform is to replace missing data with the group mean.</source>
          <target state="translated">另一种常见的数据变换是用组均值代替缺失数据。</target>
        </trans-unit>
        <trans-unit id="e187b9988e144e2ed5bc77c15bd2601cfa127b48" translate="yes" xml:space="preserve">
          <source>Another common dialect option is &lt;code&gt;skipinitialspace&lt;/code&gt;, to skip any whitespace after a delimiter:</source>
          <target state="translated">另一个常见的方言选项是 &lt;code&gt;skipinitialspace&lt;/code&gt; ，以跳过定界符后的所有空白：</target>
        </trans-unit>
        <trans-unit id="26082fd0dca13f4766b6c73783a141417c879c3a" translate="yes" xml:space="preserve">
          <source>Another common operation is the use of boolean vectors to filter the data. The operators are: &lt;code&gt;|&lt;/code&gt; for &lt;code&gt;or&lt;/code&gt;, &lt;code&gt;&amp;amp;&lt;/code&gt; for &lt;code&gt;and&lt;/code&gt;, and &lt;code&gt;~&lt;/code&gt; for &lt;code&gt;not&lt;/code&gt;. These &lt;strong&gt;must&lt;/strong&gt; be grouped by using parentheses, since by default Python will evaluate an expression such as &lt;code&gt;df['A'] &amp;gt; 2 &amp;amp; df['B'] &amp;lt; 3&lt;/code&gt; as &lt;code&gt;df['A'] &amp;gt; (2 &amp;amp; df['B']) &amp;lt; 3&lt;/code&gt;, while the desired evaluation order is &lt;code&gt;(df['A'] &amp;gt; 2) &amp;amp; (df['B'] &amp;lt; 3)&lt;/code&gt;.</source>
          <target state="translated">另一个常见的操作是使用布尔向量来过滤数据。运营商为： &lt;code&gt;|&lt;/code&gt; 对于 &lt;code&gt;or&lt;/code&gt; ， &lt;code&gt;&amp;amp;&lt;/code&gt; 对 &lt;code&gt;and&lt;/code&gt; ，和 &lt;code&gt;~&lt;/code&gt; 对 &lt;code&gt;not&lt;/code&gt; 。这些&lt;strong&gt;必须&lt;/strong&gt;使用括号进行分组，因为默认情况下，Python会评估 &lt;code&gt;df['A'] &amp;gt; 2 &amp;amp; df['B'] &amp;lt; 3&lt;/code&gt; 等表达式，作为 &lt;code&gt;df['A'] &amp;gt; (2 &amp;amp; df['B']) &amp;lt; 3&lt;/code&gt; ，而所需的评估顺序为 &lt;code&gt;(df['A'] &amp;gt; 2) &amp;amp; (df['B'] &amp;lt; 3)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7e1638d3363efdfbe5466eef1db2d2342c31fe3e" translate="yes" xml:space="preserve">
          <source>Another example</source>
          <target state="translated">另一个例子</target>
        </trans-unit>
        <trans-unit id="8eb9168ffa746a34166862e29eef223cf6e7fc0d" translate="yes" xml:space="preserve">
          <source>Another example is parameterizing &lt;code&gt;YearEnd&lt;/code&gt; with the specific ending month:</source>
          <target state="translated">另一个示例是使用特定的结束月份来参数 &lt;code&gt;YearEnd&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="6bf548e65fe08e2d9efb7d1570d115225047c55b" translate="yes" xml:space="preserve">
          <source>Another example that can be given is:</source>
          <target state="translated">另一个可以举的例子是:</target>
        </trans-unit>
        <trans-unit id="91f5725516ab9766afe5f216dacecbb152763c8d" translate="yes" xml:space="preserve">
          <source>Another example using integers for the index</source>
          <target state="translated">另一个使用整数作为索引的例子</target>
        </trans-unit>
        <trans-unit id="0d2797e7ac958d47d961dafa9ad1fe9d0457edde" translate="yes" xml:space="preserve">
          <source>Another fairly common situation is to have two like-indexed (or similarly indexed) &lt;code&gt;Series&lt;/code&gt; or &lt;code&gt;DataFrame&lt;/code&gt; objects and wanting to &amp;ldquo;patch&amp;rdquo; values in one object from values for matching indices in the other. Here is an example:</source>
          <target state="translated">另一个相当常见的情况是有两个相似索引（或相似索引）的 &lt;code&gt;Series&lt;/code&gt; 或 &lt;code&gt;DataFrame&lt;/code&gt; 对象，并希望从一个对象中的值&amp;ldquo;匹配&amp;rdquo;另一个对象中的值以匹配另一个对象。这是一个例子：</target>
        </trans-unit>
        <trans-unit id="99fe3c1c43dd19c24179ec0234b139bf85b0926e" translate="yes" xml:space="preserve">
          <source>Another method to draw a box plot.</source>
          <target state="translated">另一种画框图的方法。</target>
        </trans-unit>
        <trans-unit id="b7fb05f974d5e4f1dcdc574339cfabcbb4fee308" translate="yes" xml:space="preserve">
          <source>Another option is passing an &lt;code&gt;ax&lt;/code&gt; argument to &lt;a href=&quot;../reference/api/pandas.series.plot#pandas.Series.plot&quot;&gt;&lt;code&gt;Series.plot()&lt;/code&gt;&lt;/a&gt; to plot on a particular axis:</source>
          <target state="translated">另一个选择是将 &lt;code&gt;ax&lt;/code&gt; 参数传递给&lt;a href=&quot;../reference/api/pandas.series.plot#pandas.Series.plot&quot;&gt; &lt;code&gt;Series.plot()&lt;/code&gt; &lt;/a&gt;以在特定轴上绘制：</target>
        </trans-unit>
        <trans-unit id="e60689527debf465f79166d475eed3a102986f80" translate="yes" xml:space="preserve">
          <source>Another option to join using the key columns is to use the</source>
          <target state="translated">使用键列连接的另一个选择是使用</target>
        </trans-unit>
        <trans-unit id="8d6cbcf719f3b3ea4f2a3b7745ef11cb2d71916c" translate="yes" xml:space="preserve">
          <source>Another option to join using the key columns is to use the &lt;code&gt;on&lt;/code&gt; parameter. DataFrame.join always uses &lt;code&gt;other&lt;/code&gt;&amp;rsquo;s index but we can use any column in &lt;code&gt;df&lt;/code&gt;. This method preserves the original DataFrame&amp;rsquo;s index in the result.</source>
          <target state="translated">使用键列进行连接的另一种方法是使用 &lt;code&gt;on&lt;/code&gt; 参数。DataFrame.join始终使用 &lt;code&gt;other&lt;/code&gt; 索引，但我们可以使用 &lt;code&gt;df&lt;/code&gt; 中的任何列。此方法在结果中保留原始DataFrame的索引。</target>
        </trans-unit>
        <trans-unit id="de853957b004225a9e7c1703b6fa1c1a19d32eca" translate="yes" xml:space="preserve">
          <source>Another reason you might need to update your pull request is to solve conflicts with changes that have been merged into the master branch since you opened your pull request.</source>
          <target state="translated">另一个需要更新拉取请求的原因是为了解决与打开拉取请求后合并到主干分支的变更之间的冲突。</target>
        </trans-unit>
        <trans-unit id="6a612150532c7fe6c342298ec87a6f999d68d4dd" translate="yes" xml:space="preserve">
          <source>Another simple aggregation example is to compute the size of each group. This is included in GroupBy as the &lt;code&gt;size&lt;/code&gt; method. It returns a Series whose index are the group names and whose values are the sizes of each group.</source>
          <target state="translated">另一个简单的聚合示例是计算每个组的大小。这作为 &lt;code&gt;size&lt;/code&gt; 方法包含在GroupBy中。它返回一个Series，其索引是组名，其值是每个组的大小。</target>
        </trans-unit>
        <trans-unit id="d8277eea9ba2a8fe2d43bdb517499c36e3429110" translate="yes" xml:space="preserve">
          <source>Another use case is interpolation at &lt;em&gt;new&lt;/em&gt; values. Suppose you have 100 observations from some distribution. And let&amp;rsquo;s suppose that you&amp;rsquo;re particularly interested in what&amp;rsquo;s happening around the middle. You can mix pandas&amp;rsquo; &lt;code&gt;reindex&lt;/code&gt; and &lt;code&gt;interpolate&lt;/code&gt; methods to interpolate at the new values.</source>
          <target state="translated">另一个用例是在&lt;em&gt;新&lt;/em&gt;值处进行插值。假设您从某个分布中获得了100个观测值。假设您对中间的情况特别感兴趣。您可以混合使用pandas的 &lt;code&gt;reindex&lt;/code&gt; 和 &lt;code&gt;interpolate&lt;/code&gt; 方法以新值进行插值。</target>
        </trans-unit>
        <trans-unit id="793e6f6278c39bc84b59b1fcf436f7d5e22f1873" translate="yes" xml:space="preserve">
          <source>Another useful feature is the ability to pass Series methods to carry out some Series operation on each column or row:</source>
          <target state="translated">另一个有用的功能是可以通过Series方法对每一列或每一行进行一些Series操作。</target>
        </trans-unit>
        <trans-unit id="49a29c570a68be05f73d6d67e782885abc906516" translate="yes" xml:space="preserve">
          <source>Another useful operation is filtering out elements that belong to groups with only a couple members.</source>
          <target state="translated">另一个有用的操作是过滤掉属于只有几个成员的组的元素。</target>
        </trans-unit>
        <trans-unit id="601a59d48b50313e6a0246d5a8b5d4cb039f22aa" translate="yes" xml:space="preserve">
          <source>Another way to transform is to use the &lt;a href=&quot;../reference/api/pandas.wide_to_long#pandas.wide_to_long&quot;&gt;&lt;code&gt;wide_to_long()&lt;/code&gt;&lt;/a&gt; panel data convenience function. It is less flexible than &lt;a href=&quot;../reference/api/pandas.melt#pandas.melt&quot;&gt;&lt;code&gt;melt()&lt;/code&gt;&lt;/a&gt;, but more user-friendly.</source>
          <target state="translated">另一种转换方式是使用&lt;a href=&quot;../reference/api/pandas.wide_to_long#pandas.wide_to_long&quot;&gt; &lt;code&gt;wide_to_long()&lt;/code&gt; &lt;/a&gt;面板数据便捷功能。它不如&lt;a href=&quot;../reference/api/pandas.melt#pandas.melt&quot;&gt; &lt;code&gt;melt()&lt;/code&gt; &lt;/a&gt;灵活，但更易于使用。</target>
        </trans-unit>
        <trans-unit id="ace06966574dd2d3caf23eb77499be1418cc173c" translate="yes" xml:space="preserve">
          <source>Any &amp;ldquo;non-equality&amp;rdquo; comparisons of categorical data with a &lt;code&gt;Series&lt;/code&gt;, &lt;code&gt;np.array&lt;/code&gt;, &lt;code&gt;list&lt;/code&gt; or categorical data with different categories or ordering will raise a &lt;code&gt;TypeError&lt;/code&gt; because custom categories ordering could be interpreted in two ways: one with taking into account the ordering and one without.</source>
          <target state="translated">分类数据与具有不同类别或排序的 &lt;code&gt;Series&lt;/code&gt; ， &lt;code&gt;np.array&lt;/code&gt; ， &lt;code&gt;list&lt;/code&gt; 或分类数据的任何&amp;ldquo;非相等&amp;rdquo;比较都会引发 &lt;code&gt;TypeError&lt;/code&gt; ,因为自定义类别的排序可以通过两种方式来解释：一种考虑了排序，另一种考虑了一无。</target>
        </trans-unit>
        <trans-unit id="761b8ef2d59333534847568e8f26ec4f38bfe4e6" translate="yes" xml:space="preserve">
          <source>Any &lt;code&gt;Series&lt;/code&gt; passed will have their name attributes used unless row or column names for the cross-tabulation are specified</source>
          <target state="translated">除非为交叉列表指定行名或列名，否则任何传递的 &lt;code&gt;Series&lt;/code&gt; 都将使用其name属性。</target>
        </trans-unit>
        <trans-unit id="e120459c22f1dbb403235c4780f83dad81ca41f0" translate="yes" xml:space="preserve">
          <source>Any NA values will be NA in the result. Out of bounds values will be NA in the resulting Series or Categorical object.</source>
          <target state="translated">任何NA值在结果中都是NA。超出边界的值在结果的系列或分类对象中会是NA。</target>
        </trans-unit>
        <trans-unit id="cc4653e0dec663c993e1b8bf2c31902d8dc2b037" translate="yes" xml:space="preserve">
          <source>Any Series passed will have their name attributes used unless row or column names for the cross-tabulation are specified.</source>
          <target state="translated">除非指定了交叉表的行名或列名,否则传递的任何系列都将使用其名称属性。</target>
        </trans-unit>
        <trans-unit id="f5bd284889323e281cb4ecaaf6bfb79897b6487e" translate="yes" xml:space="preserve">
          <source>Any additional keyword arguments are passed through to &lt;code&gt;self.template.render&lt;/code&gt;. This is useful when you need to provide additional variables for a custom template.</source>
          <target state="translated">任何其他关键字参数都将传递到 &lt;code&gt;self.template.render&lt;/code&gt; 。当您需要为自定义模板提供其他变量时，这很有用。</target>
        </trans-unit>
        <trans-unit id="4b58be4313ae8aa3d58d0729ff39b777f4e27fe6" translate="yes" xml:space="preserve">
          <source>Any additional kwargs are passed to pyarrow.</source>
          <target state="translated">任何额外的kwargs都会传递给pyarrow。</target>
        </trans-unit>
        <trans-unit id="a89fec0f90fcdc7e46b4461a004174e6768d6604" translate="yes" xml:space="preserve">
          <source>Any additional kwargs are passed to the engine.</source>
          <target state="translated">任何额外的kwargs都会传递给引擎。</target>
        </trans-unit>
        <trans-unit id="63a7c5909c41c22e6a438441ca3c0a3ea341dcd3" translate="yes" xml:space="preserve">
          <source>Any datetime values with time zone information parsed via the</source>
          <target state="translated">任何带有时区信息的日期时间值,都是通过</target>
        </trans-unit>
        <trans-unit id="a1ea0cb81de2fbda6f191b29e37d3346f0da2baa" translate="yes" xml:space="preserve">
          <source>Any datetime values with time zone information parsed via the &lt;code&gt;parse_dates&lt;/code&gt; parameter will be converted to UTC.</source>
          <target state="translated">带有通过 &lt;code&gt;parse_dates&lt;/code&gt; 参数解析的时区信息的任何datetime值都将转换为UTC。</target>
        </trans-unit>
        <trans-unit id="af00ae2cb03d25dd2517c645ac88a8875aadfaed" translate="yes" xml:space="preserve">
          <source>Any datetime values with time zone information will be converted to UTC.</source>
          <target state="translated">任何带有时区信息的日期时间值将被转换为UTC。</target>
        </trans-unit>
        <trans-unit id="ea43faeb9100a22df9d3b18d94c6c6c5b6eb2404" translate="yes" xml:space="preserve">
          <source>Any expression that is a valid &lt;a href=&quot;../reference/api/pandas.eval#pandas.eval&quot;&gt;&lt;code&gt;pandas.eval()&lt;/code&gt;&lt;/a&gt; expression is also a valid &lt;a href=&quot;../reference/api/pandas.dataframe.eval#pandas.DataFrame.eval&quot;&gt;&lt;code&gt;DataFrame.eval()&lt;/code&gt;&lt;/a&gt; expression, with the added benefit that you don&amp;rsquo;t have to prefix the name of the &lt;a href=&quot;../reference/api/pandas.dataframe#pandas.DataFrame&quot;&gt;&lt;code&gt;DataFrame&lt;/code&gt;&lt;/a&gt; to the column(s) you&amp;rsquo;re interested in evaluating.</source>
          <target state="translated">任何有效的&lt;a href=&quot;../reference/api/pandas.eval#pandas.eval&quot;&gt; &lt;code&gt;pandas.eval()&lt;/code&gt; &lt;/a&gt;表达式也都是有效的&lt;a href=&quot;../reference/api/pandas.dataframe.eval#pandas.DataFrame.eval&quot;&gt; &lt;code&gt;DataFrame.eval()&lt;/code&gt; &lt;/a&gt;表达式，其好处是您不必将&lt;a href=&quot;../reference/api/pandas.dataframe#pandas.DataFrame&quot;&gt; &lt;code&gt;DataFrame&lt;/code&gt; &lt;/a&gt;的名称前缀在感兴趣的列上在评估中。</target>
        </trans-unit>
        <trans-unit id="1e663ab61febb52693bcac9468d4d94b81af4a99" translate="yes" xml:space="preserve">
          <source>Any function available via &lt;a href=&quot;groupby#groupby-dispatch&quot;&gt;dispatching&lt;/a&gt; is available as a method of the returned object, including &lt;code&gt;sum&lt;/code&gt;, &lt;code&gt;mean&lt;/code&gt;, &lt;code&gt;std&lt;/code&gt;, &lt;code&gt;sem&lt;/code&gt;, &lt;code&gt;max&lt;/code&gt;, &lt;code&gt;min&lt;/code&gt;, &lt;code&gt;median&lt;/code&gt;, &lt;code&gt;first&lt;/code&gt;, &lt;code&gt;last&lt;/code&gt;, &lt;code&gt;ohlc&lt;/code&gt;:</source>
          <target state="translated">任何经由可用的功能&lt;a href=&quot;groupby#groupby-dispatch&quot;&gt;调度&lt;/a&gt;可作为返回的对象的方法，包括 &lt;code&gt;sum&lt;/code&gt; ， &lt;code&gt;mean&lt;/code&gt; ， &lt;code&gt;std&lt;/code&gt; ， &lt;code&gt;sem&lt;/code&gt; ， &lt;code&gt;max&lt;/code&gt; ， &lt;code&gt;min&lt;/code&gt; ， &lt;code&gt;median&lt;/code&gt; ， &lt;code&gt;first&lt;/code&gt; ， &lt;code&gt;last&lt;/code&gt; ， &lt;code&gt;ohlc&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="5964cd2d7c79472697fe32851fce192640c6dbff" translate="yes" xml:space="preserve">
          <source>Any input passed containing Categorical data will have &lt;strong&gt;all&lt;/strong&gt; of its categories included in the cross-tabulation, even if the actual data does not contain any instances of a particular category.</source>
          <target state="translated">即使实际数据不包含任何特定类别的实例，传递的&lt;strong&gt;所有&lt;/strong&gt;包含类别数据的输入&lt;strong&gt;都&lt;/strong&gt;将其&lt;strong&gt;所有&lt;/strong&gt;类别包括在交叉列表中。</target>
        </trans-unit>
        <trans-unit id="ce16c259e759f906f8065019dbf4a811189652b6" translate="yes" xml:space="preserve">
          <source>Any nanosecond resolution will be lost.</source>
          <target state="translated">任何纳秒级的分辨率都会丢失。</target>
        </trans-unit>
        <trans-unit id="88b3008b4cbde9632f08d1bcac656be7c8544ebc" translate="yes" xml:space="preserve">
          <source>Any non-pandas PyTables objects that are not a group will be ignored.</source>
          <target state="translated">任何不是组的非pandas PyTables对象将被忽略。</target>
        </trans-unit>
        <trans-unit id="6fdcac39271359c12810d669a283ca70d643d2e4" translate="yes" xml:space="preserve">
          <source>Any object column, also if it contains numerical values such as &lt;code&gt;Decimal&lt;/code&gt; objects, is considered as a &amp;ldquo;nuisance&amp;rdquo; columns. They are excluded from aggregate functions automatically in groupby.</source>
          <target state="translated">任何对象列，即使包含数值（如 &lt;code&gt;Decimal&lt;/code&gt; 对象），也被视为&amp;ldquo;麻烦&amp;rdquo;列。它们在groupby中自动从聚合函数中排除。</target>
        </trans-unit>
        <trans-unit id="2f0fbb4621f7288331d98455b00a58d6031b42b4" translate="yes" xml:space="preserve">
          <source>Any orient option that encodes to a JSON object will not preserve the ordering of index and column labels during round-trip serialization. If you wish to preserve label ordering use the &lt;code&gt;split&lt;/code&gt; option as it uses ordered containers.</source>
          <target state="translated">在双向序列化期间，任何编码为JSON对象的orient选项都不会保留索引和列标签的顺序。如果希望保留标签顺序，请使用 &lt;code&gt;split&lt;/code&gt; 选项，因为它使用有序容器。</target>
        </trans-unit>
        <trans-unit id="d4ceb80800eb57e57ca5b1b17e4f4beb32b44748" translate="yes" xml:space="preserve">
          <source>Any other form of observational / statistical data sets. The data actually need not be labeled at all to be placed into a pandas data structure</source>
          <target state="translated">任何其他形式的观察/统计数据集。其实数据根本不需要贴上标签就可以放入pandas数据结构中。</target>
        </trans-unit>
        <trans-unit id="cf00b212bf8aed69a4cf5a5c69e5692c7a383077" translate="yes" xml:space="preserve">
          <source>Any other module used in the examples must be explicitly imported, one per line (as recommended in &lt;a href=&quot;https://www.python.org/dev/peps/pep-0008#imports&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 8#imports&lt;/strong&gt;&lt;/a&gt;) and avoiding aliases. Avoid excessive imports, but if needed, imports from the standard library go first, followed by third-party libraries (like matplotlib).</source>
          <target state="translated">必须显式导入示例中使用的任何其他模块，每行一个（如&lt;a href=&quot;https://www.python.org/dev/peps/pep-0008#imports&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 8＃imports中的&lt;/strong&gt;&lt;/a&gt;建议），并避免使用别名。避免过多的导入，但是如果需要的话，首先要从标准库中导入，然后是第三方库（如matplotlib）。</target>
        </trans-unit>
        <trans-unit id="3632ffd552cc1d333862f7fa1372c18be2ee605a" translate="yes" xml:space="preserve">
          <source>Any single or multiple element data structure, or list-like object.</source>
          <target state="translated">任何单元素或多元素数据结构,或类似列表的对象。</target>
        </trans-unit>
        <trans-unit id="6ba937ed25eac91be6494338327246df991da190" translate="yes" xml:space="preserve">
          <source>Any valid string path is acceptable. The string could be a URL. Valid URL schemes include http, ftp, s3, and file. For file URLs, a host is expected.</source>
          <target state="translated">任何有效的字符串路径都可以接受。该字符串可以是一个URL。有效的URL方案包括http、ftp、s3和file。对于文件URL,需要一个主机。</target>
        </trans-unit>
        <trans-unit id="e954390c5f626600a8327f64c43b3441dffdc0fc" translate="yes" xml:space="preserve">
          <source>Any valid string path is acceptable. The string could be a URL. Valid URL schemes include http, ftp, s3, and file. For file URLs, a host is expected. A local file could be: &lt;a href=&quot;file://localhost/path/to/table.csv&quot;&gt;file://localhost/path/to/table.csv&lt;/a&gt;.</source>
          <target state="translated">任何有效的字符串路径都是可以接受的。该字符串可以是URL。有效的URL方案包括http，ftp，s3和file。对于文件URL，需要一个主机。本地文件可以是：&lt;a href=&quot;file://localhost/path/to/table.csv&quot;&gt;file：//localhost/path/to/table.csv&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d4548d91026734d1a3e360f967c361b2d835711d" translate="yes" xml:space="preserve">
          <source>Any valid string path is acceptable. The string could be a URL. Valid URL schemes include http, ftp, s3, and file. For file URLs, a host is expected. A local file could be: &lt;code&gt;file://localhost/path/to/table.csv&lt;/code&gt;.</source>
          <target state="translated">任何有效的字符串路径都是可以接受的。该字符串可以是URL。有效的URL方案包括http，ftp，s3和file。对于文件URL，需要一个主机。本地文件可以是： &lt;code&gt;file://localhost/path/to/table.csv&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3680aacea1c49425f4ba9338e259c5d070cb7046" translate="yes" xml:space="preserve">
          <source>Any valid string path is acceptable. The string could be a URL. Valid URL schemes include http, ftp, s3, and file. For file URLs, a host is expected. A local file could be: &lt;code&gt;file://localhost/path/to/table.dta&lt;/code&gt;.</source>
          <target state="translated">任何有效的字符串路径都是可以接受的。该字符串可以是URL。有效的URL方案包括http，ftp，s3和file。对于文件URL，需要一个主机。本地文件可以是： &lt;code&gt;file://localhost/path/to/table.dta&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a9c7d7846c6e8605dcce2d8416166539c4565e50" translate="yes" xml:space="preserve">
          <source>Any valid string path is acceptable. The string could be a URL. Valid URL schemes include http, ftp, s3, and file. For file URLs, a host is expected. A local file could be: &lt;code&gt;file://localhost/path/to/table.feather&lt;/code&gt;.</source>
          <target state="translated">任何有效的字符串路径都是可以接受的。该字符串可以是URL。有效的URL方案包括http，ftp，s3和file。对于文件URL，需要一个主机。本地文件可以是： &lt;code&gt;file://localhost/path/to/table.feather&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f3fb17dd2ac024ef5d7baf9a3e21d8f07096da15" translate="yes" xml:space="preserve">
          <source>Any valid string path is acceptable. The string could be a URL. Valid URL schemes include http, ftp, s3, and file. For file URLs, a host is expected. A local file could be: &lt;code&gt;file://localhost/path/to/table.h5&lt;/code&gt;.</source>
          <target state="translated">任何有效的字符串路径都是可以接受的。该字符串可以是URL。有效的URL方案包括http，ftp，s3和file。对于文件URL，需要一个主机。本地文件可以是： &lt;code&gt;file://localhost/path/to/table.h5&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7b41054070a92e52620dfa7c505a3f87b483b55f" translate="yes" xml:space="preserve">
          <source>Any valid string path is acceptable. The string could be a URL. Valid URL schemes include http, ftp, s3, and file. For file URLs, a host is expected. A local file could be: &lt;code&gt;file://localhost/path/to/table.json&lt;/code&gt;.</source>
          <target state="translated">任何有效的字符串路径都是可以接受的。该字符串可以是URL。有效的URL方案包括http，ftp，s3和file。对于文件URL，需要一个主机。本地文件可以是： &lt;code&gt;file://localhost/path/to/table.json&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="813636175c3f3241b9e8c73750a187ce6a633ac3" translate="yes" xml:space="preserve">
          <source>Any valid string path is acceptable. The string could be a URL. Valid URL schemes include http, ftp, s3, and file. For file URLs, a host is expected. A local file could be: &lt;code&gt;file://localhost/path/to/table.orc&lt;/code&gt;.</source>
          <target state="translated">任何有效的字符串路径都是可以接受的。该字符串可以是一个URL。有效的URL方案包括http，ftp，s3和file。对于文件URL，需要一个主机。本地文件可以是： &lt;code&gt;file://localhost/path/to/table.orc&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="82a1068aa62d158902d0259159b4c681158e327c" translate="yes" xml:space="preserve">
          <source>Any valid string path is acceptable. The string could be a URL. Valid URL schemes include http, ftp, s3, and file. For file URLs, a host is expected. A local file could be: &lt;code&gt;file://localhost/path/to/table.parquet&lt;/code&gt;.</source>
          <target state="translated">任何有效的字符串路径都是可以接受的。该字符串可以是URL。有效的URL方案包括http，ftp，s3和file。对于文件URL，需要一个主机。本地文件可以是： &lt;code&gt;file://localhost/path/to/table.parquet&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="26bce3851691b4e1bdd4bed182b8228bda9df4d8" translate="yes" xml:space="preserve">
          <source>Any valid string path is acceptable. The string could be a URL. Valid URL schemes include http, ftp, s3, and file. For file URLs, a host is expected. A local file could be: &lt;code&gt;file://localhost/path/to/table.sas&lt;/code&gt;.</source>
          <target state="translated">任何有效的字符串路径都是可以接受的。该字符串可以是URL。有效的URL方案包括http，ftp，s3和file。对于文件URL，需要一个主机。本地文件可以是： &lt;code&gt;file://localhost/path/to/table.sas&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1a4dbceac8f3bec865509b44937581123348753b" translate="yes" xml:space="preserve">
          <source>Any valid string path is acceptable. The string could be a URL. Valid URL schemes include http, ftp, s3, and file. For file URLs, a host is expected. A local file could be: &lt;code&gt;file://localhost/path/to/table.xlsx&lt;/code&gt;.</source>
          <target state="translated">任何有效的字符串路径都是可以接受的。该字符串可以是URL。有效的URL方案包括http，ftp，s3和file。对于文件URL，需要一个主机。本地文件可以是： &lt;code&gt;file://localhost/path/to/table.xlsx&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fdd193f231be7ad0f1bb5337c5a29fa0d9772e04" translate="yes" xml:space="preserve">
          <source>Any valid string path is acceptable. The string could be a URL. Valid URL schemes include http, ftp, s3, gs, and file. For file URLs, a host is expected. A local file could be: &lt;a href=&quot;file://localhost/path/to/table.csv&quot;&gt;file://localhost/path/to/table.csv&lt;/a&gt;.</source>
          <target state="translated">任何有效的字符串路径都是可以接受的。该字符串可以是一个URL。有效的URL方案包括http，ftp，s3，gs和file。对于文件URL，需要一个主机。本地文件可以是：&lt;a href=&quot;file://localhost/path/to/table.csv&quot;&gt;file：//localhost/path/to/table.csv&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="00366c6fc9a41635a5c8f6337e9046154e5b33dd" translate="yes" xml:space="preserve">
          <source>Any valid string path is acceptable. The string could be a URL. Valid URL schemes include http, ftp, s3, gs, and file. For file URLs, a host is expected. A local file could be: &lt;code&gt;file://localhost/path/to/table.parquet&lt;/code&gt;. A file URL can also be a path to a directory that contains multiple partitioned parquet files. Both pyarrow and fastparquet support paths to directories as well as file URLs. A directory path could be: &lt;code&gt;file://localhost/path/to/tables&lt;/code&gt; or &lt;code&gt;s3://bucket/partition_dir&lt;/code&gt;</source>
          <target state="translated">任何有效的字符串路径都是可以接受的。该字符串可以是一个URL。有效的URL方案包括http，ftp，s3，gs和file。对于文件URL，需要一个主机。本地文件可以是： &lt;code&gt;file://localhost/path/to/table.parquet&lt;/code&gt; 。文件URL也可以是包含多个分区的镶木地板文件的目录的路径。pyarrow和fastparquet都支持目录以及文件URL的路径。目录路径可以是： &lt;code&gt;file://localhost/path/to/tables&lt;/code&gt; 或 &lt;code&gt;s3://bucket/partition_dir&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f4d34003e83d18cd0d53ef5b805c1eec2875fabf" translate="yes" xml:space="preserve">
          <source>Any value which falls outside all bins will be assigned a &lt;code&gt;NaN&lt;/code&gt; value.</source>
          <target state="translated">落在所有分档之外的任何值都将被分配一个 &lt;code&gt;NaN&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="50f51d463360f09f27480e4beb0e1a233b2405f0" translate="yes" xml:space="preserve">
          <source>Anywhere in the above &lt;code&gt;replace&lt;/code&gt; examples that you see a regular expression a compiled regular expression is valid as well.</source>
          <target state="translated">在上述 &lt;code&gt;replace&lt;/code&gt; 示例中的任何地方，只要您看到正则表达式，编译后的正则表达式也有效。</target>
        </trans-unit>
        <trans-unit id="ff8747f05b9c090689834e5b77ca26e52ec7fc5c" translate="yes" xml:space="preserve">
          <source>Apart from &lt;a href=&quot;../reference/api/pandas.series.min#pandas.Series.min&quot;&gt;&lt;code&gt;Series.min()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../reference/api/pandas.series.max#pandas.Series.max&quot;&gt;&lt;code&gt;Series.max()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../reference/api/pandas.series.mode#pandas.Series.mode&quot;&gt;&lt;code&gt;Series.mode()&lt;/code&gt;&lt;/a&gt;, the following operations are possible with categorical data:</source>
          <target state="translated">除了&lt;a href=&quot;../reference/api/pandas.series.min#pandas.Series.min&quot;&gt; &lt;code&gt;Series.min()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../reference/api/pandas.series.max#pandas.Series.max&quot;&gt; &lt;code&gt;Series.max()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../reference/api/pandas.series.mode#pandas.Series.mode&quot;&gt; &lt;code&gt;Series.mode()&lt;/code&gt; 之外&lt;/a&gt;，分类数据还可以进行以下操作：</target>
        </trans-unit>
        <trans-unit id="c94d227677d6c608740abe99f043bc116a355178" translate="yes" xml:space="preserve">
          <source>Append a collection of Index options together.</source>
          <target state="translated">将一个索引选项的集合附加在一起。</target>
        </trans-unit>
        <trans-unit id="cd01c0378f8b017bde9e68d3cdc3d5ad6cccb171" translate="yes" xml:space="preserve">
          <source>Append rows of</source>
          <target state="translated">附加的行数</target>
        </trans-unit>
        <trans-unit id="f6ae934ab327be0ffca6e997a261eff151fab1bb" translate="yes" xml:space="preserve">
          <source>Append rows of &lt;code&gt;other&lt;/code&gt; to the end of caller, returning a new object.</source>
          <target state="translated">将 &lt;code&gt;other&lt;/code&gt; 行附加到调用方的末尾，并返回一个新对象。</target>
        </trans-unit>
        <trans-unit id="2429169c5b6bb3564a6fe243957a7d5368028bde" translate="yes" xml:space="preserve">
          <source>Append the input data to the existing.</source>
          <target state="translated">将输入数据附加到现有的。</target>
        </trans-unit>
        <trans-unit id="89016439f19acb30e6533070052e850ed50424b7" translate="yes" xml:space="preserve">
          <source>Append to Table in file.</source>
          <target state="translated">附加到文件中的表。</target>
        </trans-unit>
        <trans-unit id="e46f7c7ab05c305ed0b5626f1d3ac5dd0983902d" translate="yes" xml:space="preserve">
          <source>Append to Table in file. Node must already exist and be Table format.</source>
          <target state="translated">附加到文件中的表。节点必须已经存在并且是表格式。</target>
        </trans-unit>
        <trans-unit id="3501f4188136b9d085ce3a53d966aa6af4477b9e" translate="yes" xml:space="preserve">
          <source>Append two dataframes with overlapping index (emulate R rbind)</source>
          <target state="translated">添加两个具有重叠索引的数据帧(模拟R rbind)。</target>
        </trans-unit>
        <trans-unit id="055084170214fcf77da5f3b5d798735046e029e5" translate="yes" xml:space="preserve">
          <source>Appending categories can be done by using the &lt;code&gt;add_categories()&lt;/code&gt; method:</source>
          <target state="translated">可以使用 &lt;code&gt;add_categories()&lt;/code&gt; 方法完成附加类别：</target>
        </trans-unit>
        <trans-unit id="6c8f2be7b7b368b9f0b3f8bf148b0cf0b16e4399" translate="yes" xml:space="preserve">
          <source>Appending new categories</source>
          <target state="translated">添加新类别</target>
        </trans-unit>
        <trans-unit id="d0d524f23186eee2587b4407d925996e831b953c" translate="yes" xml:space="preserve">
          <source>Appending rows to a DataFrame</source>
          <target state="translated">将行添加到DataFrame中</target>
        </trans-unit>
        <trans-unit id="dd4a773d9c99bbb0cd8cdd2ee9d1775422f2f11f" translate="yes" xml:space="preserve">
          <source>Appending to a store, while creating a unique index</source>
          <target state="translated">添加到一个商店,同时创建一个唯一的索引。</target>
        </trans-unit>
        <trans-unit id="f0778fd8226275ca77d069fcb393563333d98ad2" translate="yes" xml:space="preserve">
          <source>Applied when &lt;code&gt;cond&lt;/code&gt; returns false.</source>
          <target state="translated">当 &lt;code&gt;cond&lt;/code&gt; 返回false时应用。</target>
        </trans-unit>
        <trans-unit id="d70eff610bf93a16ebd8f22247d1faff4a91c226" translate="yes" xml:space="preserve">
          <source>Applied when &lt;code&gt;cond&lt;/code&gt; returns true.</source>
          <target state="translated">当 &lt;code&gt;cond&lt;/code&gt; 返回true时应用。</target>
        </trans-unit>
        <trans-unit id="cfea419c3b4e8b02ee586e70a28bf846e44cdda4" translate="yes" xml:space="preserve">
          <source>Apply</source>
          <target state="translated">Apply</target>
        </trans-unit>
        <trans-unit id="9b6dbedb0e02feab044cae1916b238a63f4b6ff9" translate="yes" xml:space="preserve">
          <source>Apply &lt;code&gt;func(self, *args, **kwargs)&lt;/code&gt;, and return the result.</source>
          <target state="translated">应用 &lt;code&gt;func(self, *args, **kwargs)&lt;/code&gt; ，并返回结果。</target>
        </trans-unit>
        <trans-unit id="a756249d2a30c9dcd0e53cb5e4774cfa97cd2969" translate="yes" xml:space="preserve">
          <source>Apply a function</source>
          <target state="translated">应用功能</target>
        </trans-unit>
        <trans-unit id="94497a0a4ca7a575b2592eda0a7d365fe2cdb86c" translate="yes" xml:space="preserve">
          <source>Apply a function &lt;code&gt;func&lt;/code&gt; with arguments to this GroupBy object and return the function&amp;rsquo;s result.</source>
          <target state="translated">将带有参数的函数 &lt;code&gt;func&lt;/code&gt; 应用于此GroupBy对象，并返回函数的结果。</target>
        </trans-unit>
        <trans-unit id="5143e9d4258b60419a7c7e5ffbf3fc7ca5ef63d1" translate="yes" xml:space="preserve">
          <source>Apply a function &lt;code&gt;func&lt;/code&gt; with arguments to this Resampler object and return the function&amp;rsquo;s result.</source>
          <target state="translated">将带有参数的函数 &lt;code&gt;func&lt;/code&gt; 应用于此Resampler对象，并返回函数的结果。</target>
        </trans-unit>
        <trans-unit id="2300bda8dfb36de22262ab09601b8c2095beace7" translate="yes" xml:space="preserve">
          <source>Apply a function along an axis of the DataFrame.</source>
          <target state="translated">沿着DataFrame的轴应用一个函数。</target>
        </trans-unit>
        <trans-unit id="bff7ddcf0f3f5f0835d4bd50c78c0e63b8bc94db" translate="yes" xml:space="preserve">
          <source>Apply a function along input axis of DataFrame.</source>
          <target state="translated">沿DataFrame的输入轴应用一个函数。</target>
        </trans-unit>
        <trans-unit id="4c3c648ff2f278f5dd00aebf40bbd60c48c34da9" translate="yes" xml:space="preserve">
          <source>Apply a function column-wise, row-wise, or table-wise, updating the HTML representation with the result.</source>
          <target state="translated">按列、按行或按表应用一个函数,用结果更新HTML表示。</target>
        </trans-unit>
        <trans-unit id="5545374adb1207e36072c9374a8663b76e0a0ad9" translate="yes" xml:space="preserve">
          <source>Apply a function column-wise, row-wise, or table-wise.</source>
          <target state="translated">按列、按行或按表应用一个函数。</target>
        </trans-unit>
        <trans-unit id="f47a1d2e3202baba633d75d32f2bd208fc9a2251" translate="yes" xml:space="preserve">
          <source>Apply a function elementwise on a whole DataFrame.</source>
          <target state="translated">在整个DataFrame上应用一个函数元素。</target>
        </trans-unit>
        <trans-unit id="1dba89c279b194e9feebdd7a247e60645e906873" translate="yes" xml:space="preserve">
          <source>Apply a function elementwise, updating the HTML representation with a style which is selected in accordance with the return value of a function.</source>
          <target state="translated">应用一个函数元素,用根据函数的返回值选择的样式更新HTML表示。</target>
        </trans-unit>
        <trans-unit id="d19bce463ae6d687c3211a328de06346c0198ddd" translate="yes" xml:space="preserve">
          <source>Apply a function elementwise, updating the HTML representation with the result.</source>
          <target state="translated">从元素上应用一个函数,用结果更新HTML表示。</target>
        </trans-unit>
        <trans-unit id="0c762bd1f744460a2567e125fdc50f3bec2a54ca" translate="yes" xml:space="preserve">
          <source>Apply a function elementwise.</source>
          <target state="translated">从元素上应用一个函数。</target>
        </trans-unit>
        <trans-unit id="56808cf04a4b5d8c8a2a7723a37a700858224edb" translate="yes" xml:space="preserve">
          <source>Apply a function groupby to a Series.</source>
          <target state="translated">将函数组by应用于一个系列。</target>
        </trans-unit>
        <trans-unit id="d4c4bba1dcb3f9de89516b647ace6d996d3dbaaf" translate="yes" xml:space="preserve">
          <source>Apply a function groupby to each row or column of a DataFrame.</source>
          <target state="translated">将函数groupby应用到DataFrame的每一行或每一列。</target>
        </trans-unit>
        <trans-unit id="e9fc9721d30f4b68442c02bc34a966d1181acedf" translate="yes" xml:space="preserve">
          <source>Apply a function row-/column-wise.</source>
          <target state="translated">按行/列应用一个函数。</target>
        </trans-unit>
        <trans-unit id="b2cfb8d5e20b73670b865ee96e6004e3d1273218" translate="yes" xml:space="preserve">
          <source>Apply a function row-wise, column-wise, or table-wise to modify the dataframe&amp;rsquo;s styling.</source>
          <target state="translated">按行，按列或按表应用函数以修改数据框的样式。</target>
        </trans-unit>
        <trans-unit id="8590e597670d8ae719ff88bcc2427073dc1b4754" translate="yes" xml:space="preserve">
          <source>Apply a function to a Dataframe elementwise.</source>
          <target state="translated">在Dataframe元素上应用一个函数。</target>
        </trans-unit>
        <trans-unit id="e513e0471347ab4f6e2d08cba5597f1ea52478ae" translate="yes" xml:space="preserve">
          <source>Apply a function to a Series.</source>
          <target state="translated">将一个函数应用于一个系列。</target>
        </trans-unit>
        <trans-unit id="3334bbea8770ad0831f1befb79be3cd156ba64bb" translate="yes" xml:space="preserve">
          <source>Apply a function to each row or column of a DataFrame.</source>
          <target state="translated">对DataFrame的每一行或每一列应用一个函数。</target>
        </trans-unit>
        <trans-unit id="77115550b5fd17c93f359d31ef6137b34d9d7cf3" translate="yes" xml:space="preserve">
          <source>Apply a function with arguments to a dataframe.</source>
          <target state="translated">将一个带有参数的函数应用到数据框中。</target>
        </trans-unit>
        <trans-unit id="09b993fe836e3dd31282b3bd112d72ca026c4a15" translate="yes" xml:space="preserve">
          <source>Apply a function with arguments to a series.</source>
          <target state="translated">将一个带参数的函数应用于一个系列。</target>
        </trans-unit>
        <trans-unit id="3c9a51106ddced340df3f5843f71f58f9abd45f3" translate="yes" xml:space="preserve">
          <source>Apply a key function before sorting</source>
          <target state="translated">在排序前应用按键功能</target>
        </trans-unit>
        <trans-unit id="2aa16d38d8218f1b1baf532dd1d351ef49f3f132" translate="yes" xml:space="preserve">
          <source>Apply a mapping correspondence on a &lt;a href=&quot;pandas.series#pandas.Series&quot;&gt;&lt;code&gt;Series&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;pandas.series#pandas.Series&quot;&gt; &lt;code&gt;Series&lt;/code&gt; &lt;/a&gt;上应用映射对应关系。</target>
        </trans-unit>
        <trans-unit id="6c06b035a5935e9638f3dfb494ff727245c715bc" translate="yes" xml:space="preserve">
          <source>Apply a mapping correspondence on an &lt;a href=&quot;pandas.index#pandas.Index&quot;&gt;&lt;code&gt;Index&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;pandas.index#pandas.Index&quot;&gt; &lt;code&gt;Index&lt;/code&gt; &lt;/a&gt;上应用映射对应关系。</target>
        </trans-unit>
        <trans-unit id="d01583cb8d2903e7fe2cd5193163018ea81e7e4c" translate="yes" xml:space="preserve">
          <source>Apply aggregate function to the GroupBy object.</source>
          <target state="translated">对GroupBy对象应用聚合函数。</target>
        </trans-unit>
        <trans-unit id="8ea3b2c3bc54183950189348a03fb84e06a7388c" translate="yes" xml:space="preserve">
          <source>Apply an arbitrary function to each expanding window.</source>
          <target state="translated">对每个展开的窗口应用一个任意的函数。</target>
        </trans-unit>
        <trans-unit id="a43b551c763d51d33cb1a4a45d132f0c9a3c811b" translate="yes" xml:space="preserve">
          <source>Apply an arbitrary function to each rolling window.</source>
          <target state="translated">对每个滚动窗口应用一个任意函数。</target>
        </trans-unit>
        <trans-unit id="f5255708f120370968ac378ac76421f03e0d4da4" translate="yes" xml:space="preserve">
          <source>Apply func(self, *args, **kwargs).</source>
          <target state="translated">Apply func(self,*args,**kwargs)。</target>
        </trans-unit>
        <trans-unit id="73b1bf9047c0fbd7a438063a2360b7174bc32b5f" translate="yes" xml:space="preserve">
          <source>Apply function</source>
          <target state="translated">应用功能</target>
        </trans-unit>
        <trans-unit id="975a062726ebd91c737ffbd4f9aff859e8879d00" translate="yes" xml:space="preserve">
          <source>Apply function &lt;code&gt;func&lt;/code&gt; group-wise and combine the results together.</source>
          <target state="translated">按组应用函数 &lt;code&gt;func&lt;/code&gt; 并将结果组合在一起。</target>
        </trans-unit>
        <trans-unit id="98b81f8e4ab1a47ad56803e26276ee21c2eb53ec" translate="yes" xml:space="preserve">
          <source>Apply function column-by-column to the GroupBy object.</source>
          <target state="translated">对GroupBy对象逐列应用函数。</target>
        </trans-unit>
        <trans-unit id="8d0ef4a774c2fd2bd037d0603074fe41267f7dfd" translate="yes" xml:space="preserve">
          <source>Apply function func group-wise and combine the results together.</source>
          <target state="translated">分组应用函数func,并将结果合并在一起。</target>
        </trans-unit>
        <trans-unit id="f176ab21606a6853ebdfa6d4ba690888f2ad592d" translate="yes" xml:space="preserve">
          <source>Apply function to each group instead of to the full GroupBy object.</source>
          <target state="translated">将函数应用于每个组,而不是整个GroupBy对象。</target>
        </trans-unit>
        <trans-unit id="86f732af265db12b2eb102d6e6f9778389e9596e" translate="yes" xml:space="preserve">
          <source>Apply function to each group instead of to the full Resampler object.</source>
          <target state="translated">将功能应用于每个组,而不是应用于整个 Resampler 对象。</target>
        </trans-unit>
        <trans-unit id="8ac449be0da05ed96379c1260bef7cae0d7fcaef" translate="yes" xml:space="preserve">
          <source>Apply function to the full GroupBy object instead of to each group.</source>
          <target state="translated">将函数应用于整个GroupBy对象,而不是每个组。</target>
        </trans-unit>
        <trans-unit id="b2dcac8637bce624d3a775a32300ec0de72a3d27" translate="yes" xml:space="preserve">
          <source>Apply more complex functions on a &lt;a href=&quot;pandas.series#pandas.Series&quot;&gt;&lt;code&gt;Series&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;pandas.series#pandas.Series&quot;&gt; &lt;code&gt;Series&lt;/code&gt; &lt;/a&gt;上应用更复杂的功能。</target>
        </trans-unit>
        <trans-unit id="ed84febd003c363f3e308dcc4d8477d2917ac1cd" translate="yes" xml:space="preserve">
          <source>Apply the &lt;code&gt;put&lt;/code&gt; method to its &lt;code&gt;values&lt;/code&gt; attribute if it has one.</source>
          <target state="translated">如果有 &lt;code&gt;put&lt;/code&gt; 方法，则将put方法应用于其 &lt;code&gt;values&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="19b7bebe80dac33f5c083223006251e29f821169" translate="yes" xml:space="preserve">
          <source>Apply the key function to the values before sorting. This is similar to the</source>
          <target state="translated">在排序前对值应用键函数。这类似于</target>
        </trans-unit>
        <trans-unit id="a1a8fca6486fa595be085c18782acb08805b6607" translate="yes" xml:space="preserve">
          <source>Apply the specified dropna operation before counting which row is the nth row. Needs to be None, &amp;lsquo;any&amp;rsquo; or &amp;lsquo;all&amp;rsquo;.</source>
          <target state="translated">在计数哪一行是第n行之前，请应用指定的dropna操作。必须为无，&amp;ldquo;任何&amp;rdquo;或&amp;ldquo;全部&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="638c6d2a7587d8005ada60281c53477503956b39" translate="yes" xml:space="preserve">
          <source>Apply to different items in a group</source>
          <target state="translated">适用于一组中的不同项目</target>
        </trans-unit>
        <trans-unit id="20c4ae9633b374fe07ad68b5b15991c9ca593c74" translate="yes" xml:space="preserve">
          <source>Apply to each column (&lt;code&gt;axis=0&lt;/code&gt; or &lt;code&gt;'index'&lt;/code&gt;), to each row (&lt;code&gt;axis=1&lt;/code&gt; or &lt;code&gt;'columns'&lt;/code&gt;), or to the entire DataFrame at once with &lt;code&gt;axis=None&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;axis=None&lt;/code&gt; 一次应用于每一列（ &lt;code&gt;axis=0&lt;/code&gt; 或 &lt;code&gt;'index'&lt;/code&gt; ），每一行（ &lt;code&gt;axis=1&lt;/code&gt; 或 &lt;code&gt;'columns'&lt;/code&gt; ）或整个DataFrame 。</target>
        </trans-unit>
        <trans-unit id="6c1f42a93170155651d27b44d07a7be5af4b1a70" translate="yes" xml:space="preserve">
          <source>Apply to each column (&lt;code&gt;axis=0&lt;/code&gt; or &lt;code&gt;'index'&lt;/code&gt;), to each row (&lt;code&gt;axis=1&lt;/code&gt; or &lt;code&gt;'columns'&lt;/code&gt;). Only used if</source>
          <target state="translated">适用于每一列（ &lt;code&gt;axis=0&lt;/code&gt; 或 &lt;code&gt;'index'&lt;/code&gt; ），适用于每一行（ &lt;code&gt;axis=1&lt;/code&gt; 或 &lt;code&gt;'columns'&lt;/code&gt; ）。仅在以下情况下使用</target>
        </trans-unit>
        <trans-unit id="4ebefbbfcf57bbe83f0efc38d25cd9216a11ca34" translate="yes" xml:space="preserve">
          <source>Applying &lt;code&gt;BusinessHour.rollforward&lt;/code&gt; and &lt;code&gt;rollback&lt;/code&gt; to out of business hours results in the next business hour start or previous day&amp;rsquo;s end. Different from other offsets, &lt;code&gt;BusinessHour.rollforward&lt;/code&gt; may output different results from &lt;code&gt;apply&lt;/code&gt; by definition.</source>
          <target state="translated">将 &lt;code&gt;BusinessHour.rollforward&lt;/code&gt; 和 &lt;code&gt;rollback&lt;/code&gt; 应用于非工作时间会导致下一个工作时间开始或前一天的结束。与其他偏移量不同， &lt;code&gt;BusinessHour.rollforward&lt;/code&gt; 可能输出与定义 &lt;code&gt;apply&lt;/code&gt; 不同的结果。</target>
        </trans-unit>
        <trans-unit id="0841b3b37339b4be975df62f1184e1804028fd17" translate="yes" xml:space="preserve">
          <source>Applying different functions to DataFrame columns</source>
          <target state="translated">对DataFrame列应用不同的功能</target>
        </trans-unit>
        <trans-unit id="bbc8689c03474f05527e52c05baf7bcf96feb9a4" translate="yes" xml:space="preserve">
          <source>Applying elementwise functions</source>
          <target state="translated">应用元素功能</target>
        </trans-unit>
        <trans-unit id="37208e93f5dc27f9fc49dcc3c1491328d95af6a7" translate="yes" xml:space="preserve">
          <source>Applying functions to the data:</source>
          <target state="translated">将功能应用到数据中。</target>
        </trans-unit>
        <trans-unit id="55f0b4738dc0459774c0beba3e8632ec8b5e1f7a" translate="yes" xml:space="preserve">
          <source>Applying multiple functions at once</source>
          <target state="translated">同时应用多个功能</target>
        </trans-unit>
        <trans-unit id="95ebb32e0401490911a17ef2f8171e457ea4cd24" translate="yes" xml:space="preserve">
          <source>Arbitrary functions can be applied along the axes of a DataFrame using the &lt;a href=&quot;../reference/api/pandas.dataframe.apply#pandas.DataFrame.apply&quot;&gt;&lt;code&gt;apply()&lt;/code&gt;&lt;/a&gt; method, which, like the descriptive statistics methods, takes an optional &lt;code&gt;axis&lt;/code&gt; argument:</source>
          <target state="translated">可以使用&lt;a href=&quot;../reference/api/pandas.dataframe.apply#pandas.DataFrame.apply&quot;&gt; &lt;code&gt;apply()&lt;/code&gt; &lt;/a&gt;方法沿DataFrame的轴应用任意函数，该方法与描述性统计方法一样，采用可选的 &lt;code&gt;axis&lt;/code&gt; 参数：</target>
        </trans-unit>
        <trans-unit id="2b90247298470303ce02272df923dc51603af1da" translate="yes" xml:space="preserve">
          <source>Arbitrary intervals can be represented as &lt;a href=&quot;api/pandas.interval#pandas.Interval&quot;&gt;&lt;code&gt;Interval&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">任意间隔可以表示为&lt;a href=&quot;api/pandas.interval#pandas.Interval&quot;&gt; &lt;code&gt;Interval&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="9136336b08be2ef8400d733db679b54eba6a1979" translate="yes" xml:space="preserve">
          <source>Arbitrary matrix data (homogeneously typed or heterogeneous) with row and column labels</source>
          <target state="translated">带有行和列标签的任意矩阵数据(同质类型或异质类型)。</target>
        </trans-unit>
        <trans-unit id="2745debaa64a20eedb49d9f14a0b807c87aa2d2a" translate="yes" xml:space="preserve">
          <source>Area</source>
          <target state="translated">Area</target>
        </trans-unit>
        <trans-unit id="3fe7d4b8402748ce4ead36ad9f491f45caf78b77" translate="yes" xml:space="preserve">
          <source>Area (cm^2)</source>
          <target state="translated">面积(cm^2)</target>
        </trans-unit>
        <trans-unit id="9271e9b58089fc598b037af141d3c853d91410d0" translate="yes" xml:space="preserve">
          <source>Area plot</source>
          <target state="translated">面积图</target>
        </trans-unit>
        <trans-unit id="2a8df98ea0a1a2b1cc7ea9fc6fe7f2ef81f17cdd" translate="yes" xml:space="preserve">
          <source>Area plot, or array of area plots if subplots is True.</source>
          <target state="translated">面积图,如果子图为真,则为面积图数组。</target>
        </trans-unit>
        <trans-unit id="085dff8849960bf8f4f6b108e7bc653f8ecb6301" translate="yes" xml:space="preserve">
          <source>Area plots are stacked by default. Set to False to create a unstacked plot.</source>
          <target state="translated">默认情况下,区域图是堆叠的。设置为 &quot;False &quot;可以创建一个不叠加的图。</target>
        </trans-unit>
        <trans-unit id="9d19efa680eea3f3d4c11af936730565283f52fc" translate="yes" xml:space="preserve">
          <source>Area plots are stacked by default. To produce an unstacked plot, pass &lt;code&gt;stacked=False&lt;/code&gt;:</source>
          <target state="translated">区域图默认情况下是堆叠的。要生成未 &lt;code&gt;stacked=False&lt;/code&gt; 图，请传递stack = False：</target>
        </trans-unit>
        <trans-unit id="7ce062b6b439a641079f6aa78d1ebdc9f858f9f1" translate="yes" xml:space="preserve">
          <source>Argument &amp;lsquo;first&amp;rsquo; puts NaNs at the beginning, &amp;lsquo;last&amp;rsquo; puts NaNs at the end.</source>
          <target state="translated">参数&amp;ldquo; first&amp;rdquo;将NaN放在开头，&amp;ldquo; last&amp;rdquo;将NaN放在结尾。</target>
        </trans-unit>
        <trans-unit id="1d7b7e7f81a20195a07a20cf7c92a2870acf2ccf" translate="yes" xml:space="preserve">
          <source>Argument to be converted.</source>
          <target state="translated">要转换的参数。</target>
        </trans-unit>
        <trans-unit id="1f7ec3385fe5b71b7b0948792155501c520c6606" translate="yes" xml:space="preserve">
          <source>Arguments and keyword arguments to be passed into func.</source>
          <target state="translated">要传递给func的参数和关键字参数。</target>
        </trans-unit>
        <trans-unit id="c1d55cd20685e74a62915468a85e839eca4e41e3" translate="yes" xml:space="preserve">
          <source>Arguments passed to</source>
          <target state="translated">传递给</target>
        </trans-unit>
        <trans-unit id="1fece9ebb467e36ae935eb7f9713ac9a4f47e841" translate="yes" xml:space="preserve">
          <source>Arguments passed to &lt;code&gt;func&lt;/code&gt;.</source>
          <target state="translated">参数传递给 &lt;code&gt;func&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="45f053dc732762c8c17889da40821807b746247b" translate="yes" xml:space="preserve">
          <source>Arithmetic</source>
          <target state="translated">Arithmetic</target>
        </trans-unit>
        <trans-unit id="74ab9b9b1ea4b2f27c0e988571bd9f7d90fe08a2" translate="yes" xml:space="preserve">
          <source>Arithmetic median of values</source>
          <target state="translated">数值的算术中位数</target>
        </trans-unit>
        <trans-unit id="77cf61da9c55f002d8350208d7a4be6efc2b4bf7" translate="yes" xml:space="preserve">
          <source>Arithmetic operations except for the left shift (&lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;) and right shift (&lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;) operators, e.g., &lt;code&gt;df + 2 * pi / s ** 4 % 42 - the_golden_ratio&lt;/code&gt;</source>
          <target state="translated">除左移（ &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt; ）和右移（ &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; ）运算符外的算术运算，例如 &lt;code&gt;df + 2 * pi / s ** 4 % 42 - the_golden_ratio&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="107004472b7ba4e5e31f3082ee1fb5a1239eec61" translate="yes" xml:space="preserve">
          <source>Array</source>
          <target state="translated">Array</target>
        </trans-unit>
        <trans-unit id="ee3ec50dc96a5f33e9baecc974b38ecc4a7e1f62" translate="yes" xml:space="preserve">
          <source>Array Class</source>
          <target state="translated">阵列类</target>
        </trans-unit>
        <trans-unit id="238a5476b2b099dbf0d0f2fd0cf448d18972ec8a" translate="yes" xml:space="preserve">
          <source>Array Type</source>
          <target state="translated">阵列类型</target>
        </trans-unit>
        <trans-unit id="8f816a1bf75bc1f0e0c9343ec7dea6a99739fdc0" translate="yes" xml:space="preserve">
          <source>Array of 1D containing data with</source>
          <target state="translated">包含数据的1D数组</target>
        </trans-unit>
        <trans-unit id="f0ee63133fe93106d055fbf2b3c6b7f07d4b60c5" translate="yes" xml:space="preserve">
          <source>Array of 1D containing data with &lt;code&gt;datetime.timedelta&lt;/code&gt; type.</source>
          <target state="translated">一维数组，其中包含 &lt;code&gt;datetime.timedelta&lt;/code&gt; 类型的数据。</target>
        </trans-unit>
        <trans-unit id="97f184768c169c289382d690a02f180ef372a498" translate="yes" xml:space="preserve">
          <source>Array of boolean (True/False) data with missing values.</source>
          <target state="translated">有缺失值的布尔(真/假)数据阵列。</target>
        </trans-unit>
        <trans-unit id="e8f91c450c43c0f85e2c3631ce43a8ff7eea347f" translate="yes" xml:space="preserve">
          <source>Array of booleans denoting where values in the original data are not NA.</source>
          <target state="translated">表示原始数据中的值不为NA的布尔值数组。</target>
        </trans-unit>
        <trans-unit id="2914ff2a577fc90dfcce0c3436118d9930be510c" translate="yes" xml:space="preserve">
          <source>Array of indices that sort &lt;code&gt;self&lt;/code&gt;. If NaN values are contained, NaN values are placed at the end.</source>
          <target state="translated">对 &lt;code&gt;self&lt;/code&gt; 进行排序的索引数组。如果包含NaN值，则将NaN值放在末尾。</target>
        </trans-unit>
        <trans-unit id="23c42fd58b9671c6cfb85ee65ff8c21c777b277c" translate="yes" xml:space="preserve">
          <source>Array of insertion points with the same shape as</source>
          <target state="translated">形状相同的插入点阵列。</target>
        </trans-unit>
        <trans-unit id="2d19e541771bdeca8f12189b199116e8c7fc52ee" translate="yes" xml:space="preserve">
          <source>Array of insertion points with the same shape as &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">具有与 &lt;code&gt;value&lt;/code&gt; 相同形状的插入点数组。</target>
        </trans-unit>
        <trans-unit id="16d602ccc2c74f67094dbd18d07b323b210f86d4" translate="yes" xml:space="preserve">
          <source>Array of integer (optional missing) values.</source>
          <target state="translated">数组整数(可选择缺失)值。</target>
        </trans-unit>
        <trans-unit id="942a9c2dde1bb5b33c155be51bf12da3f140ad4f" translate="yes" xml:space="preserve">
          <source>Array of tuples</source>
          <target state="translated">元组阵列</target>
        </trans-unit>
        <trans-unit id="11bbb09fda8f5c46d25f90c6287f9f7ea1cd3445" translate="yes" xml:space="preserve">
          <source>Array of tuples.</source>
          <target state="translated">元组阵列。</target>
        </trans-unit>
        <trans-unit id="7dedfdb628dade196c5ddb340bb8c452e1c4bca0" translate="yes" xml:space="preserve">
          <source>Array of values to aggregate according to the factors. Requires</source>
          <target state="translated">数组数值,根据系数进行汇总。需要</target>
        </trans-unit>
        <trans-unit id="9998edca027b5a55687972ba225c84eec75d6d8d" translate="yes" xml:space="preserve">
          <source>Array of values to aggregate according to the factors. Requires &lt;code&gt;aggfunc&lt;/code&gt; be specified.</source>
          <target state="translated">根据因素汇总的值数组。需要指定 &lt;code&gt;aggfunc&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4994f8305c8ede2a4fbbef9d44d5fdff597cc221" translate="yes" xml:space="preserve">
          <source>Array or Index</source>
          <target state="translated">阵列或索引</target>
        </trans-unit>
        <trans-unit id="23e3b01214e4ea46c8073e7bdc0f1cac5885fd0f" translate="yes" xml:space="preserve">
          <source>Array scalar view of the timedelta in nanoseconds.</source>
          <target state="translated">以纳秒为单位的时间轴阵列标量视图。</target>
        </trans-unit>
        <trans-unit id="665e2045baa91524bccba85eff2de47df0ac5839" translate="yes" xml:space="preserve">
          <source>Array to compare to this Array.</source>
          <target state="translated">要与这个数组进行比较的数组。</target>
        </trans-unit>
        <trans-unit id="23767dc7557f5945cbb8ba4d30fca848cfd29d35" translate="yes" xml:space="preserve">
          <source>Array type for storing data that come from a fixed set of values.</source>
          <target state="translated">用于存储来自固定值集的数据的阵列类型。</target>
        </trans-unit>
        <trans-unit id="a42a6e7ac57209c5e1202eb4dc0c09c59154dc55" translate="yes" xml:space="preserve">
          <source>Array view compatibility.</source>
          <target state="translated">阵列视图兼容性。</target>
        </trans-unit>
        <trans-unit id="009502c447ec7d96528d2a280ce25c93db16dfcc" translate="yes" xml:space="preserve">
          <source>Array-like containing Interval objects from which to build the IntervalArray.</source>
          <target state="translated">Array-like,包含Interval对象,用来构建IntervalArray。</target>
        </trans-unit>
        <trans-unit id="132b728c54772094b9970598280c64f833458c4c" translate="yes" xml:space="preserve">
          <source>Array-like containing Interval objects from which to build the IntervalIndex.</source>
          <target state="translated">Array-like,包含Interval对象,用于建立IntervalIndex。</target>
        </trans-unit>
        <trans-unit id="c67c3cba1438a75ab4caaa8ea41aa48a5268e770" translate="yes" xml:space="preserve">
          <source>Array-like to check.</source>
          <target state="translated">阵列式来检查。</target>
        </trans-unit>
        <trans-unit id="e16351d17e8649d8f461b8778533016da6c36375" translate="yes" xml:space="preserve">
          <source>Array/Index converted to the specified time zone.</source>
          <target state="translated">阵列/索引转换为指定时区。</target>
        </trans-unit>
        <trans-unit id="939b23db2d54a7a0d2e5d70a0277084f0eb7a9ed" translate="yes" xml:space="preserve">
          <source>As PEP-257 is quite open, and some other standards exist on top of it. In the case of pandas, the numpy docstring convention is followed. The conventions is explained in this document:</source>
          <target state="translated">由于PEP-257是相当开放的,在它的基础上还存在一些其他标准。在pandas的情况下,遵循numpy docstring的约定。这些约定在本文档中进行了解释。</target>
        </trans-unit>
        <trans-unit id="1b3282e1902c4717606f860bffc659d0d608212e" translate="yes" xml:space="preserve">
          <source>As a &lt;a href=&quot;../reference/api/pandas.dataframe#pandas.DataFrame&quot;&gt;&lt;code&gt;DataFrame&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;dict&lt;/code&gt; of errors with column names matching the &lt;code&gt;columns&lt;/code&gt; attribute of the plotting &lt;a href=&quot;../reference/api/pandas.dataframe#pandas.DataFrame&quot;&gt;&lt;code&gt;DataFrame&lt;/code&gt;&lt;/a&gt; or matching the &lt;code&gt;name&lt;/code&gt; attribute of the &lt;a href=&quot;../reference/api/pandas.series#pandas.Series&quot;&gt;&lt;code&gt;Series&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">作为&lt;a href=&quot;../reference/api/pandas.dataframe#pandas.DataFrame&quot;&gt; &lt;code&gt;DataFrame&lt;/code&gt; &lt;/a&gt;或错误 &lt;code&gt;dict&lt;/code&gt; ，其列名与绘图&lt;a href=&quot;../reference/api/pandas.dataframe#pandas.DataFrame&quot;&gt; &lt;code&gt;DataFrame&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;columns&lt;/code&gt; 属性匹配或与&lt;a href=&quot;../reference/api/pandas.series#pandas.Series&quot;&gt; &lt;code&gt;Series&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;name&lt;/code&gt; 属性匹配。</target>
        </trans-unit>
        <trans-unit id="193cb6516b5800f45e558cf3abb639026193906c" translate="yes" xml:space="preserve">
          <source>As a &lt;code&gt;str&lt;/code&gt; indicating which of the columns of plotting &lt;a href=&quot;../reference/api/pandas.dataframe#pandas.DataFrame&quot;&gt;&lt;code&gt;DataFrame&lt;/code&gt;&lt;/a&gt; contain the error values.</source>
          <target state="translated">作为 &lt;code&gt;str&lt;/code&gt; 指示在绘制&lt;a href=&quot;../reference/api/pandas.dataframe#pandas.DataFrame&quot;&gt; &lt;code&gt;DataFrame&lt;/code&gt; 的&lt;/a&gt;哪些列中包含错误值。</target>
        </trans-unit>
        <trans-unit id="4cb165dd4a7c021d82278dc00fa8bc1404690832" translate="yes" xml:space="preserve">
          <source>As a convenience, multiple assignments can be performed by using a multi-line string.</source>
          <target state="translated">为了方便起见,可以使用多行字符串进行多次赋值。</target>
        </trans-unit>
        <trans-unit id="3af5116e0a8812adf301ca218365b9890a8a3771" translate="yes" xml:space="preserve">
          <source>As a convenience, there is a new function on DataFrame called &lt;a href=&quot;../reference/api/pandas.dataframe.reset_index#pandas.DataFrame.reset_index&quot;&gt;&lt;code&gt;reset_index()&lt;/code&gt;&lt;/a&gt; which transfers the index values into the DataFrame&amp;rsquo;s columns and sets a simple integer index. This is the inverse operation of &lt;a href=&quot;../reference/api/pandas.dataframe.set_index#pandas.DataFrame.set_index&quot;&gt;&lt;code&gt;set_index()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">为方便起见，DataFrame上有一个名为&lt;a href=&quot;../reference/api/pandas.dataframe.reset_index#pandas.DataFrame.reset_index&quot;&gt; &lt;code&gt;reset_index()&lt;/code&gt; &lt;/a&gt;的新函数，该函数将索引值传输到DataFrame的列中并设置一个简单的整数索引。这是&lt;a href=&quot;../reference/api/pandas.dataframe.set_index#pandas.DataFrame.set_index&quot;&gt; &lt;code&gt;set_index()&lt;/code&gt; &lt;/a&gt;的逆运算。</target>
        </trans-unit>
        <trans-unit id="e27d143ad19e97f7227c73adf01cdc2e7f8d4b30" translate="yes" xml:space="preserve">
          <source>As a convenience, you can pass a list of arrays directly into &lt;code&gt;Series&lt;/code&gt; or &lt;code&gt;DataFrame&lt;/code&gt; to construct a &lt;code&gt;MultiIndex&lt;/code&gt; automatically:</source>
          <target state="translated">为了方便起见，您可以将数组列表直接传递到 &lt;code&gt;Series&lt;/code&gt; 或 &lt;code&gt;DataFrame&lt;/code&gt; 中以自动构造 &lt;code&gt;MultiIndex&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="40908edef1273fada9763b301bc2eba0152218c2" translate="yes" xml:space="preserve">
          <source>As a convenience, you can use the string &lt;code&gt;'category'&lt;/code&gt; in place of a &lt;code&gt;CategoricalDtype&lt;/code&gt; when you want the default behavior of the categories being unordered, and equal to the set values present in the array. In other words, &lt;code&gt;dtype='category'&lt;/code&gt; is equivalent to &lt;code&gt;dtype=CategoricalDtype()&lt;/code&gt;.</source>
          <target state="translated">为方便起见，当您希望 &lt;code&gt;CategoricalDtype&lt;/code&gt; 的默认行为是无序的并且等于数组中的设置值时，可以使用字符串 &lt;code&gt;'category'&lt;/code&gt; 代替CategoricalDtype。换句话说， &lt;code&gt;dtype='category'&lt;/code&gt; 等效于 &lt;code&gt;dtype=CategoricalDtype()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bda53a4c4e48eb257243eebaf80c6bd419c3f026" translate="yes" xml:space="preserve">
          <source>As a signal to other Python libraries that this column should be treated as a categorical variable (e.g. to use suitable statistical methods or plot types).</source>
          <target state="translated">作为给其他Python库的一个信号,这个列应该被当作一个分类变量来处理 (例如,使用合适的统计方法或情节类型)。</target>
        </trans-unit>
        <trans-unit id="eeda04bd648e1a55f1c9e82a86bf94e6e9f814e9" translate="yes" xml:space="preserve">
          <source>As an alternative to converters, the type for an entire column can be specified using the &lt;code&gt;dtype&lt;/code&gt; keyword, which takes a dictionary mapping column names to types. To interpret data with no type inference, use the type &lt;code&gt;str&lt;/code&gt; or &lt;code&gt;object&lt;/code&gt;.</source>
          <target state="translated">作为转换器的替代方法，可以使用 &lt;code&gt;dtype&lt;/code&gt; 关键字指定整个列的类型，该关键字采用将列名映射到类型的字典。要解释没有类型推断的数据，请使用类型 &lt;code&gt;str&lt;/code&gt; 或 &lt;code&gt;object&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f24f12dc6c724e0240d3a4576966a3668efd7b9c" translate="yes" xml:space="preserve">
          <source>As an example of fully-formed metadata:</source>
          <target state="translated">作为全格式元数据的一个例子。</target>
        </trans-unit>
        <trans-unit id="15b76b5fbc283dc7dd8bf4babf8457a89f16a027" translate="yes" xml:space="preserve">
          <source>As an example, imagine having a DataFrame with columns for stores, products, revenue and quantity sold. We&amp;rsquo;d like to do a groupwise calculation of &lt;em&gt;prices&lt;/em&gt; (i.e. revenue/quantity) per store and per product. We could do this in a multi-step operation, but expressing it in terms of piping can make the code more readable. First we set the data:</source>
          <target state="translated">例如，假设有一个DataFrame，其中包含用于商店，产品，收入和销售数量的列。我们想对每个商店和每个产品的&lt;em&gt;价格&lt;/em&gt;（即收入/数量）进行分组计算。我们可以通过多步骤操作来做到这一点，但是用管道表达方式可以使代码更具可读性。首先我们设置数据：</target>
        </trans-unit>
        <trans-unit id="a1525ca7fe147c0715500fdfdfa1cd1a3bf35fb6" translate="yes" xml:space="preserve">
          <source>As an interesting example, let&amp;rsquo;s look at Egypt where a Friday-Saturday weekend is observed.</source>
          <target state="translated">举一个有趣的例子，让我们看看观察到周五至周六周末的埃及。</target>
        </trans-unit>
        <trans-unit id="e9377f014c8844995e9b60ccba27bdb65175bc72" translate="yes" xml:space="preserve">
          <source>As data comes in many shapes and forms, pandas aims to be flexible with regard to handling missing data. While &lt;code&gt;NaN&lt;/code&gt; is the default missing value marker for reasons of computational speed and convenience, we need to be able to easily detect this value with data of different types: floating point, integer, boolean, and general object. In many cases, however, the Python &lt;code&gt;None&lt;/code&gt; will arise and we wish to also consider that &amp;ldquo;missing&amp;rdquo; or &amp;ldquo;not available&amp;rdquo; or &amp;ldquo;NA&amp;rdquo;.</source>
          <target state="translated">由于数据具有多种形状和形式，因此熊猫致力于在处理丢失的数据方面保持灵活性。尽管出于计算速度和便利性的原因， &lt;code&gt;NaN&lt;/code&gt; 是默认的缺失值标记，但我们需要能够使用不同类型的数据轻松地检测到该值：浮点，整数，布尔值和常规对象。但是，在许多情况下，Python &lt;code&gt;None&lt;/code&gt; 都将出现，我们也希望考虑&amp;ldquo;缺失&amp;rdquo;或&amp;ldquo;不可用&amp;rdquo;或&amp;ldquo; NA&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="d8934ae536cd293f4bfa00f46820585f3d7d9f8a" translate="yes" xml:space="preserve">
          <source>As described above, &lt;a href=&quot;../reference/api/pandas.get_option#pandas.get_option&quot;&gt;&lt;code&gt;get_option()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../reference/api/pandas.set_option#pandas.set_option&quot;&gt;&lt;code&gt;set_option()&lt;/code&gt;&lt;/a&gt; are available from the pandas namespace. To change an option, call &lt;code&gt;set_option('option regex', new_value)&lt;/code&gt;.</source>
          <target state="translated">如上所述，可从pandas名称空间获得&lt;a href=&quot;../reference/api/pandas.get_option#pandas.get_option&quot;&gt; &lt;code&gt;get_option()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../reference/api/pandas.set_option#pandas.set_option&quot;&gt; &lt;code&gt;set_option()&lt;/code&gt; &lt;/a&gt;。要更改选项，请调用 &lt;code&gt;set_option('option regex', new_value)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4d2d0f96875dd7e0a34e1fcbf0c70ac95946026f" translate="yes" xml:space="preserve">
          <source>As discussed in previous section, indexing a &lt;code&gt;DatetimeIndex&lt;/code&gt; with a partial string depends on the &amp;ldquo;accuracy&amp;rdquo; of the period, in other words how specific the interval is in relation to the resolution of the index. In contrast, indexing with &lt;code&gt;Timestamp&lt;/code&gt; or &lt;code&gt;datetime&lt;/code&gt; objects is exact, because the objects have exact meaning. These also follow the semantics of &lt;em&gt;including both endpoints&lt;/em&gt;.</source>
          <target state="translated">如前一节所述，用部分字符串为 &lt;code&gt;DatetimeIndex&lt;/code&gt; 编制索引取决于时间段的&amp;ldquo;准确性&amp;rdquo;，换句话说，区间与索引的分辨率有多具体。相反，使用 &lt;code&gt;Timestamp&lt;/code&gt; 或 &lt;code&gt;datetime&lt;/code&gt; 对象建立索引是准确的，因为这些对象具有确切的含义。这些还遵循&lt;em&gt;包括两个端点&lt;/em&gt;的语义。</target>
        </trans-unit>
        <trans-unit id="a5ec44a80f850f44f251d563c977905e8f27e176" translate="yes" xml:space="preserve">
          <source>As in the</source>
          <target state="translated">如在</target>
        </trans-unit>
        <trans-unit id="7c7defdfdc687af9373e54d8765f30c6fb017f90" translate="yes" xml:space="preserve">
          <source>As in the &lt;code&gt;asof&lt;/code&gt; function, if the label (a particular entry in &lt;code&gt;where&lt;/code&gt;) is not in the index, the latest index label upto the passed label is chosen and its index returned.</source>
          <target state="translated">与 &lt;code&gt;asof&lt;/code&gt; 函数一样，如果标签（ &lt;code&gt;where&lt;/code&gt; 中的特定条目）不在索引中，则选择直到已传递标签的最新索引标签，然后返回其索引。</target>
        </trans-unit>
        <trans-unit id="d0e54ad809afc4f8c8c6c4e0c4e5c908300c5421" translate="yes" xml:space="preserve">
          <source>As is customary, we import pandas and NumPy as follows. This means that we can refer to the libraries as &lt;code&gt;pd&lt;/code&gt; and &lt;code&gt;np&lt;/code&gt;, respectively, for the rest of the document.</source>
          <target state="translated">按照惯例，我们按以下方式导入pandas和NumPy。这意味着在本文档的其余部分中，我们可以分别将库称为 &lt;code&gt;pd&lt;/code&gt; 和 &lt;code&gt;np&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1d5f4fbf9647762a6718f8a6c10d79ebe7323f70" translate="yes" xml:space="preserve">
          <source>As is customary, we import pandas and NumPy as follows:</source>
          <target state="translated">按照惯例,我们导入pandas和NumPy如下。</target>
        </trans-unit>
        <trans-unit id="cac08938600fdec91aea0cf394ecc8ce6bd8eb32" translate="yes" xml:space="preserve">
          <source>As matplotlib does not directly support colormaps for line-based plots, the colors are selected based on an even spacing determined by the number of columns in the &lt;code&gt;DataFrame&lt;/code&gt;. There is no consideration made for background color, so some colormaps will produce lines that are not easily visible.</source>
          <target state="translated">由于matplotlib不直接支持基于线的图的颜色图，因此将根据由 &lt;code&gt;DataFrame&lt;/code&gt; 中的列数确定的均匀间距来选择颜色。没有考虑背景颜色，因此某些颜色图会产生不容易看到的线条。</target>
        </trans-unit>
        <trans-unit id="e916c69474e2fde3529f2f0c8c2b405a2f5da589" translate="yes" xml:space="preserve">
          <source>As mentioned above, &lt;code&gt;stack&lt;/code&gt; can be called with a &lt;code&gt;level&lt;/code&gt; argument to select which level in the columns to stack:</source>
          <target state="translated">如上所述，可以使用 &lt;code&gt;level&lt;/code&gt; 参数调用 &lt;code&gt;stack&lt;/code&gt; ，以选择要堆叠的列中的哪个级别：</target>
        </trans-unit>
        <trans-unit id="d17d1b1d55ae625081d9e9337da0a4b5f6833336" translate="yes" xml:space="preserve">
          <source>As mentioned in the &amp;ldquo;Notes&amp;rdquo; section, new extension types may be added in the future (by pandas or 3rd party libraries), causing the return value to no longer be a &lt;a href=&quot;pandas.arrays.pandasarray#pandas.arrays.PandasArray&quot;&gt;&lt;code&gt;arrays.PandasArray&lt;/code&gt;&lt;/a&gt;. Specify the</source>
          <target state="translated">如&amp;ldquo;注释&amp;rdquo;部分所述，将来可能会添加新的扩展类型（通过pandas或3rd party库），从而使返回值不再是&lt;a href=&quot;pandas.arrays.pandasarray#pandas.arrays.PandasArray&quot;&gt; &lt;code&gt;arrays.PandasArray&lt;/code&gt; &lt;/a&gt;。指定</target>
        </trans-unit>
        <trans-unit id="e4614d5f6b2a0e164e0e308f8950233642be2895" translate="yes" xml:space="preserve">
          <source>As mentioned when introducing the data structures in the &lt;a href=&quot;../getting_started/basics#basics&quot;&gt;last section&lt;/a&gt;, the primary function of indexing with &lt;code&gt;[]&lt;/code&gt; (a.k.a. &lt;code&gt;__getitem__&lt;/code&gt; for those familiar with implementing class behavior in Python) is selecting out lower-dimensional slices. The following table shows return type values when indexing pandas objects with &lt;code&gt;[]&lt;/code&gt;:</source>
          <target state="translated">正如在上&lt;a href=&quot;../getting_started/basics#basics&quot;&gt;一节&lt;/a&gt;介绍数据结构时所提到的，用 &lt;code&gt;[]&lt;/code&gt; 进行索引的主要功能（对于熟悉用Python实现类行为的人来说，又名 &lt;code&gt;__getitem__&lt;/code&gt; ）是选择低维切片。下表显示了使用 &lt;code&gt;[]&lt;/code&gt; 索引熊猫对象时的返回类型值：</target>
        </trans-unit>
        <trans-unit id="09c3041e49b3fceb88f511991f151b244d278c27" translate="yes" xml:space="preserve">
          <source>As mentioned when introducing the data structures in the &lt;a href=&quot;basics#basics&quot;&gt;last section&lt;/a&gt;, the primary function of indexing with &lt;code&gt;[]&lt;/code&gt; (a.k.a. &lt;code&gt;__getitem__&lt;/code&gt; for those familiar with implementing class behavior in Python) is selecting out lower-dimensional slices. The following table shows return type values when indexing pandas objects with &lt;code&gt;[]&lt;/code&gt;:</source>
          <target state="translated">正如在上&lt;a href=&quot;basics#basics&quot;&gt;一节&lt;/a&gt;介绍数据结构时所提到的那样，使用 &lt;code&gt;[]&lt;/code&gt; 进行索引的主要功能（对于熟悉用Python实现类行为的人来说，又名 &lt;code&gt;__getitem__&lt;/code&gt; ）是选择低维切片。下表显示了使用 &lt;code&gt;[]&lt;/code&gt; 索引熊猫对象时的返回类型值：</target>
        </trans-unit>
        <trans-unit id="3595e25caf68a6a4293add862067442573e5bc6a" translate="yes" xml:space="preserve">
          <source>As noted above, handling duplicates is an important feature when reading in raw data. That said, you may want to avoid introducing duplicates as part of a data processing pipeline (from methods like &lt;a href=&quot;../reference/api/pandas.concat#pandas.concat&quot;&gt;&lt;code&gt;pandas.concat()&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;rename()&lt;/code&gt;, etc.). Both &lt;code&gt;Series&lt;/code&gt; and &lt;code&gt;DataFrame&lt;/code&gt;&lt;em&gt;disallow&lt;/em&gt; duplicate labels by calling &lt;code&gt;.set_flags(allows_duplicate_labels=False)&lt;/code&gt;. (the default is to allow them). If there are duplicate labels, an exception will be raised.</source>
          <target state="translated">如上所述，在读取原始数据时，处理重复项是一项重要功能。就是说，您可能要避免在数据处理管道中引入重复项（例如&lt;a href=&quot;../reference/api/pandas.concat#pandas.concat&quot;&gt; &lt;code&gt;pandas.concat()&lt;/code&gt; &lt;/a&gt;， &lt;code&gt;rename()&lt;/code&gt; 等方法）。 &lt;code&gt;Series&lt;/code&gt; 和 &lt;code&gt;DataFrame&lt;/code&gt; 都通过调用 &lt;code&gt;.set_flags(allows_duplicate_labels=False)&lt;/code&gt; 来&lt;em&gt;禁止&lt;/em&gt;重复标签。 （默认设置是允许它们）。如果标签重复，则会引发异常。</target>
        </trans-unit>
        <trans-unit id="33a5ab22ba872f49b30202589e89d2bdb75660ed" translate="yes" xml:space="preserve">
          <source>As noted above, some operations support specifying a window based on a time offset:</source>
          <target state="translated">如上所述,有些操作支持根据时间偏移来指定窗口。</target>
        </trans-unit>
        <trans-unit id="7899dce97ab31d004dc7480ccbd9a5ebae6e590d" translate="yes" xml:space="preserve">
          <source>As of Numba version 0.20, pandas objects cannot be passed directly to Numba-compiled functions. Instead, one must pass the NumPy array underlying the pandas object to the Numba-compiled function as demonstrated below.</source>
          <target state="translated">从Numba 0.20版本开始,pandas对象不能直接传递给Numba编译的函数。取而代之的是,必须将pandas对象的NumPy数组传递给Numba编译的函数,如下所示。</target>
        </trans-unit>
        <trans-unit id="6f679e9628182b8712d03d77000ac9fe7f8682b9" translate="yes" xml:space="preserve">
          <source>As of pandas 0.11, pandas is not 100% thread safe. The known issues relate to the &lt;a href=&quot;../reference/api/pandas.dataframe.copy#pandas.DataFrame.copy&quot;&gt;&lt;code&gt;copy()&lt;/code&gt;&lt;/a&gt; method. If you are doing a lot of copying of &lt;code&gt;DataFrame&lt;/code&gt; objects shared among threads, we recommend holding locks inside the threads where the data copying occurs.</source>
          <target state="translated">从熊猫0.11开始，熊猫不是100％线程安全的。已知问题与&lt;a href=&quot;../reference/api/pandas.dataframe.copy#pandas.DataFrame.copy&quot;&gt; &lt;code&gt;copy()&lt;/code&gt; &lt;/a&gt;方法有关。如果您要复制线程之间共享的 &lt;code&gt;DataFrame&lt;/code&gt; 对象，则建议在发生数据复制的线程内部持有锁。</target>
        </trans-unit>
        <trans-unit id="f2f440cbc24f45cddbef328860e8b7553ecf4431" translate="yes" xml:space="preserve">
          <source>As one might expect, the majority of the time is now spent in &lt;code&gt;apply_integrate_f&lt;/code&gt;, so if we wanted to make anymore efficiencies we must continue to concentrate our efforts here.</source>
          <target state="translated">正如人们可能期望的那样，现在大部分时间都花在了 &lt;code&gt;apply_integrate_f&lt;/code&gt; 上，因此，如果我们想提高效率，就必须继续将精力集中在这里。</target>
        </trans-unit>
        <trans-unit id="ca0de0cc1b26797dae23d82b46c6ba5c562b070d" translate="yes" xml:space="preserve">
          <source>As part of &lt;a href=&quot;#contributing-ci&quot;&gt;Continuous Integration&lt;/a&gt; checks we run:</source>
          <target state="translated">作为&lt;a href=&quot;#contributing-ci&quot;&gt;持续集成&lt;/a&gt;检查的一部分，我们运行：</target>
        </trans-unit>
        <trans-unit id="faad7ef7c45cc09af88242e59189452288d712dc" translate="yes" xml:space="preserve">
          <source>As part of your implementation, we require that you defer to pandas when a pandas container (&lt;a href=&quot;../reference/api/pandas.series#pandas.Series&quot;&gt;&lt;code&gt;Series&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../reference/api/pandas.dataframe#pandas.DataFrame&quot;&gt;&lt;code&gt;DataFrame&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../reference/api/pandas.index#pandas.Index&quot;&gt;&lt;code&gt;Index&lt;/code&gt;&lt;/a&gt;) is detected in &lt;code&gt;inputs&lt;/code&gt;. If any of those is present, you should return &lt;code&gt;NotImplemented&lt;/code&gt;. Pandas will take care of unboxing the array from the container and re-calling the ufunc with the unwrapped input.</source>
          <target state="translated">作为实现的一部分，我们要求您在 &lt;code&gt;inputs&lt;/code&gt; 检测到熊猫容器（&lt;a href=&quot;../reference/api/pandas.series#pandas.Series&quot;&gt; &lt;code&gt;Series&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../reference/api/pandas.dataframe#pandas.DataFrame&quot;&gt; &lt;code&gt;DataFrame&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../reference/api/pandas.index#pandas.Index&quot;&gt; &lt;code&gt;Index&lt;/code&gt; &lt;/a&gt;）时，请遵循pandas的要求。如果存在任何这些，则应返回 &lt;code&gt;NotImplemented&lt;/code&gt; 。熊猫将负责将数组从容器中拆箱，并使用未包装的输入调用ufunc。</target>
        </trans-unit>
        <trans-unit id="20357f4f33a2c3c246cefd70f16aa9e7a93c86a5" translate="yes" xml:space="preserve">
          <source>As raw values (&lt;code&gt;list&lt;/code&gt;, &lt;code&gt;tuple&lt;/code&gt;, or &lt;code&gt;np.ndarray&lt;/code&gt;). Must be the same length as the plotting &lt;a href=&quot;../reference/api/pandas.dataframe#pandas.DataFrame&quot;&gt;&lt;code&gt;DataFrame&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;../reference/api/pandas.series#pandas.Series&quot;&gt;&lt;code&gt;Series&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">作为原始值（ &lt;code&gt;list&lt;/code&gt; ， &lt;code&gt;tuple&lt;/code&gt; 或 &lt;code&gt;np.ndarray&lt;/code&gt; ）。必须与绘制&lt;a href=&quot;../reference/api/pandas.dataframe#pandas.DataFrame&quot;&gt; &lt;code&gt;DataFrame&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;../reference/api/pandas.series#pandas.Series&quot;&gt; &lt;code&gt;Series&lt;/code&gt; 的&lt;/a&gt;长度相同。</target>
        </trans-unit>
        <trans-unit id="9891a7d50cc6445908ee3ad03eb488b958d8c93d" translate="yes" xml:space="preserve">
          <source>As these methods apply only to one-dimensional arrays, lists or scalars; they cannot be used directly on multi-dimensional objects such as DataFrames. However, with &lt;a href=&quot;../reference/api/pandas.dataframe.apply#pandas.DataFrame.apply&quot;&gt;&lt;code&gt;apply()&lt;/code&gt;&lt;/a&gt;, we can &amp;ldquo;apply&amp;rdquo; the function over each column efficiently:</source>
          <target state="translated">由于这些方法仅适用于一维数组，列表或标量；它们不能直接用于多维对象，例如DataFrames。但是，使用&lt;a href=&quot;../reference/api/pandas.dataframe.apply#pandas.DataFrame.apply&quot;&gt; &lt;code&gt;apply()&lt;/code&gt; &lt;/a&gt;，我们可以将函数有效地&amp;ldquo;应用&amp;rdquo;到每一列上：</target>
        </trans-unit>
        <trans-unit id="9a89661b1f02acecf5ace3c9e152793213304c68" translate="yes" xml:space="preserve">
          <source>As this behaviour is separate from the core conversion to numeric values, any errors raised during the downcasting will be surfaced regardless of the value of the &amp;lsquo;errors&amp;rsquo; input.</source>
          <target state="translated">由于此行为与将核心转换为数值的行为是分开的，因此无论&amp;ldquo;错误&amp;rdquo;输入的值如何，向下转换期间引发的任何错误都将浮出水面。</target>
        </trans-unit>
        <trans-unit id="c4701ce9a1acd3d7c1d5bf5dbec9270fb933ea01" translate="yes" xml:space="preserve">
          <source>As usual, &lt;strong&gt;both sides&lt;/strong&gt; of the slicers are included as this is label indexing.</source>
          <target state="translated">通常，切片器的&lt;strong&gt;两面&lt;/strong&gt;都包括在内，因为这是标签索引。</target>
        </trans-unit>
        <trans-unit id="bcea0c6d8618ee7b25644d3114a0b483908e9abb" translate="yes" xml:space="preserve">
          <source>As usual, the union of the two indices is taken, and non-overlapping values are filled with missing values.</source>
          <target state="translated">一样平常来说,取两个指数的联合,非重叠的值用缺失值来填补。</target>
        </trans-unit>
        <trans-unit id="f68ab1ca368968313c1894f1d059a6dc785e7642" translate="yes" xml:space="preserve">
          <source>As we have seen previously, the alias and the offset instance are fungible in most functions:</source>
          <target state="translated">正如我们之前所看到的,在大多数函数中,别名和偏移实例是可以互换的。</target>
        </trans-unit>
        <trans-unit id="cb135afb35545b147907c44c27fb473436d8a127" translate="yes" xml:space="preserve">
          <source>As well as for the index:</source>
          <target state="translated">以及对指数。</target>
        </trans-unit>
        <trans-unit id="6fa7ae672fa74972c03f30e00aa1e8a2373228a2" translate="yes" xml:space="preserve">
          <source>As with &lt;code&gt;DatetimeIndex&lt;/code&gt;, the endpoints will be included in the result. The example below slices data starting from 10:00 to 11:59.</source>
          <target state="translated">与 &lt;code&gt;DatetimeIndex&lt;/code&gt; 一样，端点将包含在结果中。下面的示例对从10:00到11:59开始的数据进行切片。</target>
        </trans-unit>
        <trans-unit id="0ae2a25a300117c181923849e5e5189dd72537c4" translate="yes" xml:space="preserve">
          <source>As with other methods, passing &lt;code&gt;as_index=False&lt;/code&gt;, will achieve a filtration, which returns the grouped row.</source>
          <target state="translated">与其他方法一样，传递 &lt;code&gt;as_index=False&lt;/code&gt; ，将实现过滤，该过滤返回分组的行。</target>
        </trans-unit>
        <trans-unit id="c4d201d604d8dbe0886bc1f92972296aa6b1f035" translate="yes" xml:space="preserve">
          <source>As with the &lt;code&gt;Series&lt;/code&gt; version, you can pass values for the &lt;code&gt;prefix&lt;/code&gt; and &lt;code&gt;prefix_sep&lt;/code&gt;. By default the column name is used as the prefix, and &amp;lsquo;_&amp;rsquo; as the prefix separator. You can specify &lt;code&gt;prefix&lt;/code&gt; and &lt;code&gt;prefix_sep&lt;/code&gt; in 3 ways:</source>
          <target state="translated">与 &lt;code&gt;Series&lt;/code&gt; 版本一样，您可以传递 &lt;code&gt;prefix&lt;/code&gt; 和 &lt;code&gt;prefix_sep&lt;/code&gt; 的值。默认情况下，列名用作前缀，&amp;ldquo; _&amp;rdquo;用作前缀分隔符。您可以通过3种方式指定 &lt;code&gt;prefix&lt;/code&gt; 和 &lt;code&gt;prefix_sep&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="dbe68f69ab8fa8237a092ab8977c826892318baa" translate="yes" xml:space="preserve">
          <source>As you can see (if you&amp;rsquo;ve read the rest of the documentation), the resulting object&amp;rsquo;s index has a &lt;a href=&quot;advanced#advanced-hierarchical&quot;&gt;hierarchical index&lt;/a&gt;. This means that we can now select out each chunk by key:</source>
          <target state="translated">如您所见（如果您已经阅读了文档的其余部分），结果对象的索引具有&lt;a href=&quot;advanced#advanced-hierarchical&quot;&gt;层次结构索引&lt;/a&gt;。这意味着我们现在可以通过键选择每个块：</target>
        </trans-unit>
        <trans-unit id="1801fc81bd7a149ea20b2ab1bb62370be6f1cdb5" translate="yes" xml:space="preserve">
          <source>As you can see, the columns &lt;code&gt;A&lt;/code&gt;, &lt;code&gt;B&lt;/code&gt;, &lt;code&gt;C&lt;/code&gt;, and &lt;code&gt;D&lt;/code&gt; are automatically tab completed. &lt;code&gt;E&lt;/code&gt; and &lt;code&gt;F&lt;/code&gt; are there as well; the rest of the attributes have been truncated for brevity.</source>
          <target state="translated">如您所见， &lt;code&gt;A&lt;/code&gt; ， &lt;code&gt;B&lt;/code&gt; ， &lt;code&gt;C&lt;/code&gt; 和 &lt;code&gt;D&lt;/code&gt; 列是自动制表符完成的。 &lt;code&gt;E&lt;/code&gt; 和 &lt;code&gt;F&lt;/code&gt; 也在那里；为了简洁起见，其余属性已被截断。</target>
        </trans-unit>
        <trans-unit id="618daa756c845f885d18abd41625a59d356e9bf8" translate="yes" xml:space="preserve">
          <source>As you can see, the columns &lt;code&gt;A&lt;/code&gt;, &lt;code&gt;B&lt;/code&gt;, &lt;code&gt;C&lt;/code&gt;, and &lt;code&gt;D&lt;/code&gt; are automatically tab completed. &lt;code&gt;E&lt;/code&gt; is there as well; the rest of the attributes have been truncated for brevity.</source>
          <target state="translated">如您所见， &lt;code&gt;A&lt;/code&gt; ， &lt;code&gt;B&lt;/code&gt; ， &lt;code&gt;C&lt;/code&gt; 和 &lt;code&gt;D&lt;/code&gt; 列是自动制表符完成的。 &lt;code&gt;E&lt;/code&gt; 也在那里；为了简洁起见，其余属性已被截断。</target>
        </trans-unit>
        <trans-unit id="4a626b65aa03b772e053a5bb2a0b5b426579d3a0" translate="yes" xml:space="preserve">
          <source>As you can see, the density (% of values that have not been &amp;ldquo;compressed&amp;rdquo;) is extremely low. This sparse object takes up much less memory on disk (pickled) and in the Python interpreter.</source>
          <target state="translated">如您所见，密度（未&amp;ldquo;压缩&amp;rdquo;的值的百分比）极低。这个稀疏对象占用磁盘（已腌制）和Python解释器中的内存少得多。</target>
        </trans-unit>
        <trans-unit id="d921ba536b3e4afbcf9e3f5c85e3dcf4967c04c6" translate="yes" xml:space="preserve">
          <source>As you can see, the result of the aggregation will have the group names as the new index along the grouped axis. In the case of multiple keys, the result is a &lt;a href=&quot;advanced#advanced-hierarchical&quot;&gt;MultiIndex&lt;/a&gt; by default, though this can be changed by using the &lt;code&gt;as_index&lt;/code&gt; option:</source>
          <target state="translated">如您所见，聚合的结果将以分组名称作为沿分组轴的新索引。对于多个键，默认情况下结果为&lt;a href=&quot;advanced#advanced-hierarchical&quot;&gt;MultiIndex&lt;/a&gt;，尽管可以使用 &lt;code&gt;as_index&lt;/code&gt; 选项更改：</target>
        </trans-unit>
        <trans-unit id="cc119df8143e9bdb4c41083085284e8d9a609e59" translate="yes" xml:space="preserve">
          <source>As you can see, this drops any rows where there was no match.</source>
          <target state="translated">正如你所看到的,这将删除所有没有匹配的行。</target>
        </trans-unit>
        <trans-unit id="9b834a23499e8c15822cc934dd05176b29187712" translate="yes" xml:space="preserve">
          <source>Assembling a datetime from multiple columns of a DataFrame. The keys can be common abbreviations like [&amp;lsquo;year&amp;rsquo;, &amp;lsquo;month&amp;rsquo;, &amp;lsquo;day&amp;rsquo;, &amp;lsquo;minute&amp;rsquo;, &amp;lsquo;second&amp;rsquo;, &amp;lsquo;ms&amp;rsquo;, &amp;lsquo;us&amp;rsquo;, &amp;lsquo;ns&amp;rsquo;]) or plurals of the same</source>
          <target state="translated">从DataFrame的多个列中组合一个日期时间。键可以是常见的缩写，例如['year'，'month'，'day'，'minute'，'second'，'ms'，'us'，'ns']）或相同的复数形式</target>
        </trans-unit>
        <trans-unit id="94c7d85a69a3e7fd29d61e52773708ef1ee4078c" translate="yes" xml:space="preserve">
          <source>Assembling datetime from multiple DataFrame columns</source>
          <target state="translated">从多个DataFrame列中组合数据时间。</target>
        </trans-unit>
        <trans-unit id="e3292c12a856a02722a46d87471ff4e6faefa104" translate="yes" xml:space="preserve">
          <source>AssertionError</source>
          <target state="translated">AssertionError</target>
        </trans-unit>
        <trans-unit id="283f18394b73b039f6d3a20ab0fcc53c7eac4a11" translate="yes" xml:space="preserve">
          <source>Assign a color to each category. Example: [&amp;lsquo;blue&amp;rsquo;, &amp;lsquo;green&amp;rsquo;].</source>
          <target state="translated">为每个类别分配颜色。示例：['blue'，'green']。</target>
        </trans-unit>
        <trans-unit id="0b1e500e0a5afdc981828f55bcdcfad2c7d393f0" translate="yes" xml:space="preserve">
          <source>Assign desired index to given axis.</source>
          <target state="translated">将所需的索引分配给给定的轴。</target>
        </trans-unit>
        <trans-unit id="a021f75ae7f14b71e657d6db0074fd6055230cdc" translate="yes" xml:space="preserve">
          <source>Assign new columns to a DataFrame.</source>
          <target state="translated">将新的列分配给DataFrame。</target>
        </trans-unit>
        <trans-unit id="c00b77f8a1e078f1116b30cd8725ae28b9c4a6c7" translate="yes" xml:space="preserve">
          <source>Assigning a &lt;code&gt;Categorical&lt;/code&gt; to parts of a column of other types will use the values:</source>
          <target state="translated">将&amp;ldquo; &lt;code&gt;Categorical&lt;/code&gt; 分配给其他类型的列的各部分将使用以下值：</target>
        </trans-unit>
        <trans-unit id="bc3b8d3cceb5ddcf3392fc04826930abcee54c4b" translate="yes" xml:space="preserve">
          <source>Assigning multiple columns within the same &lt;code&gt;assign&lt;/code&gt; is possible. For Python 3.6 and above, later items in &amp;lsquo;**kwargs&amp;rsquo; may refer to newly created or modified columns in &amp;lsquo;df&amp;rsquo;; items are computed and assigned into &amp;lsquo;df&amp;rsquo; in order. For Python 3.5 and below, the order of keyword arguments is not specified, you cannot refer to newly created or modified columns. All items are computed first, and then assigned in alphabetical order.</source>
          <target state="translated">可以在同一 &lt;code&gt;assign&lt;/code&gt; 内分配多个列。对于Python 3.6及更高版本，'** kwargs'中的后续项目可能引用'df'中新创建或修改的列；计算项目并将其按顺序分配到&amp;ldquo; df&amp;rdquo;。对于Python 3.5及以下版本，未指定关键字参数的顺序，因此无法引用新创建或修改的列。首先计算所有项目，然后按字母顺序分配。</target>
        </trans-unit>
        <trans-unit id="57239a199b05358cea86223cd3816d09d7e4a328" translate="yes" xml:space="preserve">
          <source>Assigning multiple columns within the same &lt;code&gt;assign&lt;/code&gt; is possible. Later items in &amp;lsquo;**kwargs&amp;rsquo; may refer to newly created or modified columns in &amp;lsquo;df&amp;rsquo;; items are computed and assigned into &amp;lsquo;df&amp;rsquo; in order.</source>
          <target state="translated">可以在同一 &lt;code&gt;assign&lt;/code&gt; 分配多个列。'** kwargs'中的后续项目可能引用'df'中新创建或修改的列；项目将按顺序计算并分配给&amp;ldquo; df&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="7561aba73eafa16d356e069588ac020eca6d4660" translate="yes" xml:space="preserve">
          <source>Assigning new columns in method chains</source>
          <target state="translated">在方法链中分配新列</target>
        </trans-unit>
        <trans-unit id="2d78c42a1e18dcaee15c7fdfad010ce0e9454cf6" translate="yes" xml:space="preserve">
          <source>Assigning to</source>
          <target state="translated">分配给</target>
        </trans-unit>
        <trans-unit id="d9c262fde6cbb3acac8e59aff9dcebb16fbdf33e" translate="yes" xml:space="preserve">
          <source>Assigning to &lt;code&gt;categories&lt;/code&gt; is a inplace operation!</source>
          <target state="translated">分配 &lt;code&gt;categories&lt;/code&gt; 是就地操作！</target>
        </trans-unit>
        <trans-unit id="9e6d4f35cb87d96ef8a4eab6ea9f2c53ae9904a9" translate="yes" xml:space="preserve">
          <source>Assigning to the &lt;code&gt;index&lt;/code&gt; or &lt;code&gt;columns&lt;/code&gt; attributes.</source>
          <target state="translated">分配给 &lt;code&gt;index&lt;/code&gt; 或 &lt;code&gt;columns&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="faea98a2a6fe70393f6626ce4e21abb41e5d1c17" translate="yes" xml:space="preserve">
          <source>Assignment is allowed though by default the original DataFrame is not modified.</source>
          <target state="translated">虽然默认情况下原始的DataFrame不会被修改,但允许转让。</target>
        </trans-unit>
        <trans-unit id="0a8074d78106ceedec166c0de30aa4dde93c6a85" translate="yes" xml:space="preserve">
          <source>Assigns values outside boundary to boundary values. Thresholds can be singular values or array like, and in the latter case the clipping is performed element-wise in the specified axis.</source>
          <target state="translated">将边界外的值指定为边界值。阈值可以是单值,也可以是类似数组的值,在后一种情况下,在指定的轴上按元素进行剪切。</target>
        </trans-unit>
        <trans-unit id="68035e390827bfef5b6a722908902bf830e33068" translate="yes" xml:space="preserve">
          <source>Assuming that</source>
          <target state="translated">假设</target>
        </trans-unit>
        <trans-unit id="4d1b3b84c9b22507a5f24e22d734e960126f5aa6" translate="yes" xml:space="preserve">
          <source>Assuming that &lt;code&gt;self&lt;/code&gt; is sorted:</source>
          <target state="translated">假设 &lt;code&gt;self&lt;/code&gt; 已排序：</target>
        </trans-unit>
        <trans-unit id="17a38dea37330e2a552db63fa600f01bcb06ac49" translate="yes" xml:space="preserve">
          <source>Assuming that the index is sorted, return the passed index label if it is in the index, or return the previous index label if the passed one is not in the index.</source>
          <target state="translated">假设索引是排序的,如果通过的索引标签在索引中,则返回它;如果通过的索引标签不在索引中,则返回之前的索引标签。</target>
        </trans-unit>
        <trans-unit id="ff7d232f972b6ac60243634f7849c72c039db298" translate="yes" xml:space="preserve">
          <source>Assuming the following data is in a &lt;code&gt;DataFrame&lt;/code&gt;&lt;code&gt;data&lt;/code&gt;, we can insert it into the database using &lt;a href=&quot;../reference/api/pandas.dataframe.to_sql#pandas.DataFrame.to_sql&quot;&gt;&lt;code&gt;to_sql()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">假设以下数据在 &lt;code&gt;DataFrame&lt;/code&gt; &lt;code&gt;data&lt;/code&gt; ，则可以使用&lt;a href=&quot;../reference/api/pandas.dataframe.to_sql#pandas.DataFrame.to_sql&quot;&gt; &lt;code&gt;to_sql()&lt;/code&gt; &lt;/a&gt;将其插入数据库中。</target>
        </trans-unit>
        <trans-unit id="847e9227f6008bb57a50a373b97aedb9329f39e7" translate="yes" xml:space="preserve">
          <source>Assuming the missing data are missing at random this results in an estimate for the covariance matrix which is unbiased. However, for many applications this estimate may not be acceptable because the estimated covariance matrix is not guaranteed to be positive semi-definite. This could lead to estimated correlations having absolute values which are greater than one, and/or a non-invertible covariance matrix. See &lt;a href=&quot;http://en.wikipedia.org/w/index.php?title=Estimation_of_covariance_matrices&quot;&gt;Estimation of covariance matrices&lt;/a&gt; for more details.</source>
          <target state="translated">假设丢失的数据是随机丢失的，这将导致对协方差矩阵的估计是无偏的。但是，对于许多应用而言，此估计可能不可接受，因为不能保证所估计的协方差矩阵为正半定值。这可能导致估计的相关具有绝对值大于1的绝对值和/或不可逆协方差矩阵。有关更多详细信息，请参见&lt;a href=&quot;http://en.wikipedia.org/w/index.php?title=Estimation_of_covariance_matrices&quot;&gt;协方差矩阵的估计&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="62161c7dd9e9f6b51907a0d81672d31756daf1aa" translate="yes" xml:space="preserve">
          <source>Assuming the missing data are missing at random this results in an estimate for the covariance matrix which is unbiased. However, for many applications this estimate may not be acceptable because the estimated covariance matrix is not guaranteed to be positive semi-definite. This could lead to estimated correlations having absolute values which are greater than one, and/or a non-invertible covariance matrix. See &lt;a href=&quot;https://en.wikipedia.org/w/index.php?title=Estimation_of_covariance_matrices&quot;&gt;Estimation of covariance matrices&lt;/a&gt; for more details.</source>
          <target state="translated">假设丢失的数据是随机丢失的，这将导致对协方差矩阵的估计是无偏的。但是，对于许多应用来说，此估计可能不可接受，因为不能保证所估计的协方差矩阵为正半定。这可能导致估计的相关具有绝对值大于1的绝对值和/或不可逆协方差矩阵。有关更多详细信息，请参见&lt;a href=&quot;https://en.wikipedia.org/w/index.php?title=Estimation_of_covariance_matrices&quot;&gt;协方差矩阵的估计&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a91294f5738999f135f72cf43572739567d1bb7e" translate="yes" xml:space="preserve">
          <source>Asymmetrical error bars are also supported, however raw error values must be provided in this case. For a &lt;code&gt;N&lt;/code&gt; length &lt;a href=&quot;../reference/api/pandas.series#pandas.Series&quot;&gt;&lt;code&gt;Series&lt;/code&gt;&lt;/a&gt;, a &lt;code&gt;2xN&lt;/code&gt; array should be provided indicating lower and upper (or left and right) errors. For a &lt;code&gt;MxN&lt;/code&gt;&lt;a href=&quot;../reference/api/pandas.dataframe#pandas.DataFrame&quot;&gt;&lt;code&gt;DataFrame&lt;/code&gt;&lt;/a&gt;, asymmetrical errors should be in a &lt;code&gt;Mx2xN&lt;/code&gt; array.</source>
          <target state="translated">还支持非对称误差线，但是在这种情况下必须提供原始误差值。对于 &lt;code&gt;N&lt;/code&gt; 长度的&lt;a href=&quot;../reference/api/pandas.series#pandas.Series&quot;&gt; &lt;code&gt;Series&lt;/code&gt; &lt;/a&gt;，应提供 &lt;code&gt;2xN&lt;/code&gt; 数组，指示上下误差（或左右误差）。对于 &lt;code&gt;MxN&lt;/code&gt; &lt;a href=&quot;../reference/api/pandas.dataframe#pandas.DataFrame&quot;&gt; &lt;code&gt;DataFrame&lt;/code&gt; &lt;/a&gt;，非对称错误应在 &lt;code&gt;Mx2xN&lt;/code&gt; 数组中。</target>
        </trans-unit>
        <trans-unit id="1096e85be1dda6b7f842b4c0a7fa3a4b79d6bea4" translate="yes" xml:space="preserve">
          <source>At that point, you get back the same thing you&amp;rsquo;d get with pandas, in this case a concrete pandas Series with the count of each &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">到那时，您会得到与熊猫相同的东西，在这种情况下，是一个具体的熊猫系列，每个 &lt;code&gt;name&lt;/code&gt; 的计数。</target>
        </trans-unit>
        <trans-unit id="8285d78da67fd75904fc813a6e40923d77fe6a15" translate="yes" xml:space="preserve">
          <source>At this point you should be able to import pandas from your locally built version:</source>
          <target state="translated">此时,你应该可以从你本地构建的版本中导入pandas。</target>
        </trans-unit>
        <trans-unit id="38a0725a9db4327acc5ab4a8b0e28950a3af0804" translate="yes" xml:space="preserve">
          <source>Attempt to convert values of non-string, non-numeric objects (like decimal.Decimal) to floating point, useful for SQL result sets</source>
          <target state="translated">尝试将非字符串、非数字对象的值(如decimal.Decimal)转换为浮点数,对SQL结果集很有用。</target>
        </trans-unit>
        <trans-unit id="3ee3af0ebb2a38402fd53e85cafa5fd36a8a970d" translate="yes" xml:space="preserve">
          <source>Attempt to convert values of non-string, non-numeric objects (like decimal.Decimal) to floating point, useful for SQL result sets.</source>
          <target state="translated">尝试将非字符串、非数字对象的值(如decimal.Decimal)转换为浮点数,对SQL结果集有用。</target>
        </trans-unit>
        <trans-unit id="c99086bed7a57f1848cf039b09832b569d18bb7d" translate="yes" xml:space="preserve">
          <source>Attempt to infer better dtypes for object columns.</source>
          <target state="translated">试图为对象列推断出更好的dtypes。</target>
        </trans-unit>
        <trans-unit id="9d60ed94e473dd535df1f10f852f3dd2c8dd3841" translate="yes" xml:space="preserve">
          <source>Attempting to use the the &lt;code&gt;xlwt&lt;/code&gt; engine will raise a &lt;code&gt;FutureWarning&lt;/code&gt; unless the option &lt;code&gt;io.excel.xls.writer&lt;/code&gt; is set to &lt;code&gt;&quot;xlwt&quot;&lt;/code&gt;. While this option is now deprecated and will also raise a &lt;code&gt;FutureWarning&lt;/code&gt;, it can be globally set and the warning suppressed. Users are recommended to write &lt;code&gt;.xlsx&lt;/code&gt; files using the &lt;code&gt;openpyxl&lt;/code&gt; engine instead.</source>
          <target state="translated">尝试使用该 &lt;code&gt;xlwt&lt;/code&gt; 引擎将引发 &lt;code&gt;FutureWarning&lt;/code&gt; 除非选项 &lt;code&gt;io.excel.xls.writer&lt;/code&gt; 设置为 &lt;code&gt;&quot;xlwt&quot;&lt;/code&gt; 。虽然现在不建议使用此选项，并且还会引发 &lt;code&gt;FutureWarning&lt;/code&gt; ，但是可以全局设置它，并禁止显示警告。建议用户改用 &lt;code&gt;openpyxl&lt;/code&gt; 引擎编写 &lt;code&gt;.xlsx&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="fd5dc03079d44b34bb699f1394078a605fdcb2fd" translate="yes" xml:space="preserve">
          <source>Attempts soft conversion of object-dtyped columns, leaving non-object and unconvertible columns unchanged. The inference rules are the same as during normal Series/DataFrame construction.</source>
          <target state="translated">试图对对象类型的列进行软转换,保持非对象和不可转换的列不变。推理规则与正常的Series/DataFrame构建过程中相同。</target>
        </trans-unit>
        <trans-unit id="dd95b409a19cffedeaa0c6241c16f85d21ca6316" translate="yes" xml:space="preserve">
          <source>Attempts to convert values of non-string, non-numeric objects (like decimal.Decimal) to floating point, useful for SQL result sets.</source>
          <target state="translated">试图将非字符串、非数字对象的值(如decimal.Decimal)转换为浮点数,对SQL结果集有用。</target>
        </trans-unit>
        <trans-unit id="1e19388759ea8f1a1e341460fa22ad603047fa05" translate="yes" xml:space="preserve">
          <source>Attempts to convert values of non-string, non-numeric objects (like decimal.Decimal) to floating point. Can result in loss of Precision.</source>
          <target state="translated">试图将非字符串、非数字对象(如 decimal.Decimal)的值转换为浮点数。可能导致精度损失。</target>
        </trans-unit>
        <trans-unit id="91bce955e5463a031508f84438b6f67b9451abdf" translate="yes" xml:space="preserve">
          <source>Attempts to convert values of non-string, non-numeric objects (like decimal.Decimal) to floating point. Useful for SQL result sets.</source>
          <target state="translated">试图将非字符串、非数字对象(如decimal.Decimal)的值转换为浮点数。对SQL结果集有用。</target>
        </trans-unit>
        <trans-unit id="a1d6277b8fc8c3dd96cfaf8b408a54965a2293ef" translate="yes" xml:space="preserve">
          <source>Attribute &amp;ldquo;dtype&amp;rdquo; are different [left]: int64 [right]: float64</source>
          <target state="translated">属性&amp;ldquo; dtype&amp;rdquo;不同[左]：int64 [右]：float64</target>
        </trans-unit>
        <trans-unit id="575bb8290ede2b9667d8e92089409003fa80b2b9" translate="yes" xml:space="preserve">
          <source>Attribute access</source>
          <target state="translated">属性访问</target>
        </trans-unit>
        <trans-unit id="90385977bc9ea5c42c50a4e0b51d0d672bc1f6e6" translate="yes" xml:space="preserve">
          <source>Attribute access, e.g., &lt;code&gt;df.a&lt;/code&gt;</source>
          <target state="translated">属性访问，例如 &lt;code&gt;df.a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e30390c6b25519953f15954ce4132cba67fdd587" translate="yes" xml:space="preserve">
          <source>AttributeError</source>
          <target state="translated">AttributeError</target>
        </trans-unit>
        <trans-unit id="a6652617f2c799eb11ee727b16c5646c48af6905" translate="yes" xml:space="preserve">
          <source>Attributes</source>
          <target state="translated">Attributes</target>
        </trans-unit>
        <trans-unit id="cc3307fda48a46f4a297fa8558a9d4ff399cabe1" translate="yes" xml:space="preserve">
          <source>Attributes and underlying data</source>
          <target state="translated">属性和基础数据</target>
        </trans-unit>
        <trans-unit id="f2b28266f71d078ffe1d8d07fba6914597acac20" translate="yes" xml:space="preserve">
          <source>Attributes can be set in two ways</source>
          <target state="translated">属性的设置有两种方式</target>
        </trans-unit>
        <trans-unit id="c7fa36005fcbd9c2ea2fe9205f82f8e8f278ceaf" translate="yes" xml:space="preserve">
          <source>Autocorrelation Plot</source>
          <target state="translated">自相关图</target>
        </trans-unit>
        <trans-unit id="b8d7914c349946ce3d48b12a1455ed9bca5fcf71" translate="yes" xml:space="preserve">
          <source>Autocorrelation plot</source>
          <target state="translated">自相关图</target>
        </trans-unit>
        <trans-unit id="028be73990bf81f759de9d600258cbd0dc48b3a4" translate="yes" xml:space="preserve">
          <source>Autocorrelation plot for time series.</source>
          <target state="translated">时间序列的自相关图。</target>
        </trans-unit>
        <trans-unit id="ddc919ceb03a7b8417436ebe51c0b46afd485fab" translate="yes" xml:space="preserve">
          <source>Autocorrelation plots are often used for checking randomness in time series. This is done by computing autocorrelations for data values at varying time lags. If time series is random, such autocorrelations should be near zero for any and all time-lag separations. If time series is non-random then one or more of the autocorrelations will be significantly non-zero. The horizontal lines displayed in the plot correspond to 95% and 99% confidence bands. The dashed line is 99% confidence band. See the &lt;a href=&quot;https://en.wikipedia.org/wiki/Correlogram&quot;&gt;Wikipedia entry&lt;/a&gt; for more about autocorrelation plots.</source>
          <target state="translated">自相关图通常用于检查时间序列中的随机性。通过在变化的时滞中计算数据值的自相关来完成此操作。如果时间序列是随机的，则对于任何和所有时滞间隔，此类自相关应接近零。如果时间序列不是随机的，则一个或多个自相关将明显为非零。图中显示的水平线对应于95％和99％的置信带。虚线是99％置信带。有关自相关图的更多信息，请参见&lt;a href=&quot;https://en.wikipedia.org/wiki/Correlogram&quot;&gt;Wikipedia条目&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f8a219b0276e739b8fdfb1dc1ab4123104c572aa" translate="yes" xml:space="preserve">
          <source>Automatic and explicit &lt;strong&gt;data alignment&lt;/strong&gt;: objects can be explicitly aligned to a set of labels, or the user can simply ignore the labels and let &lt;code&gt;Series&lt;/code&gt;, &lt;code&gt;DataFrame&lt;/code&gt;, etc. automatically align the data for you in computations</source>
          <target state="translated">自动和明确的&lt;strong&gt;数据对齐&lt;/strong&gt;：可以将对象明确地对齐到一组标签，或者用户可以简单地忽略标签并让 &lt;code&gt;Series&lt;/code&gt; ， &lt;code&gt;DataFrame&lt;/code&gt; 等自动为您对齐数据</target>
        </trans-unit>
        <trans-unit id="6622b5c394de57192d778bd3959c6342e89bf692" translate="yes" xml:space="preserve">
          <source>Automatic date tick adjustment</source>
          <target state="translated">自动调整日期刻度</target>
        </trans-unit>
        <trans-unit id="dda78c3ec3fa94913c6e1080bfe2d58282df5d9d" translate="yes" xml:space="preserve">
          <source>Automatic exclusion of &amp;ldquo;nuisance&amp;rdquo; columns</source>
          <target state="translated">自动排除&amp;ldquo;麻烦&amp;rdquo;列</target>
        </trans-unit>
        <trans-unit id="a3dab8eb939ee8925ea50e11dc137e6027628645" translate="yes" xml:space="preserve">
          <source>Automatically &amp;ldquo;sniffing&amp;rdquo; the delimiter</source>
          <target state="translated">自动&amp;ldquo;嗅探&amp;rdquo;定界符</target>
        </trans-unit>
        <trans-unit id="ad488fccb450082a4a1ac7a5822e9968a0e57780" translate="yes" xml:space="preserve">
          <source>Available EW functions: &lt;code&gt;mean()&lt;/code&gt;, &lt;code&gt;var()&lt;/code&gt;, &lt;code&gt;std()&lt;/code&gt;, &lt;code&gt;corr()&lt;/code&gt;, &lt;code&gt;cov()&lt;/code&gt;.</source>
          <target state="translated">可用的EW函数： &lt;code&gt;mean()&lt;/code&gt; ， &lt;code&gt;var()&lt;/code&gt; ， &lt;code&gt;std()&lt;/code&gt; ， &lt;code&gt;corr()&lt;/code&gt; ， &lt;code&gt;cov()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2931a9a21b541225c024193258e14ebcd1821756" translate="yes" xml:space="preserve">
          <source>Available cases:</source>
          <target state="translated">现有案例:</target>
        </trans-unit>
        <trans-unit id="91791fb1c671bc50f26bfde0c65300d3feece464" translate="yes" xml:space="preserve">
          <source>Available kwargs: {days, seconds, microseconds, milliseconds, minutes, hours, weeks}. Values for construction in compat with datetime.timedelta. Numpy ints and floats will be coerced to python ints and floats.</source>
          <target state="translated">可用的kwargs:{days,seconds,microseconds,milliseconds,minutes,hours,weeks}。在compatetime.timedelta中构建的值。Numpy的ints和floats将被强制转换成python的ints和floats。</target>
        </trans-unit>
        <trans-unit id="48315d4da6f457296128d582ea2ac7a8107a6caa" translate="yes" xml:space="preserve">
          <source>Available options</source>
          <target state="translated">可用选项</target>
        </trans-unit>
        <trans-unit id="057b4b33c8569c09b413019743ff85bf2e11c330" translate="yes" xml:space="preserve">
          <source>Available options:</source>
          <target state="translated">可用的选项:</target>
        </trans-unit>
        <trans-unit id="b2501da01385df19f1d86b0bed04e38fd63de7a5" translate="yes" xml:space="preserve">
          <source>Avoiding inconsistencies when writing to a store from multiple processes/threads</source>
          <target state="translated">避免从多个进程/线程写入存储空间时出现不一致的情况。</target>
        </trans-unit>
        <trans-unit id="570d8f848f14577f6db35c538f58ded1b980df07" translate="yes" xml:space="preserve">
          <source>Axis along which the function is applied:</source>
          <target state="translated">应用函数的轴。</target>
        </trans-unit>
        <trans-unit id="38050eaac2584f2816c6699a4e03069bbf38db0d" translate="yes" xml:space="preserve">
          <source>Axis along which the level(s) is removed:</source>
          <target state="translated">沿着移除水平仪的轴线。</target>
        </trans-unit>
        <trans-unit id="04388f6c2b31d163b02edafe90363be434b40e5d" translate="yes" xml:space="preserve">
          <source>Axis along which to fill missing values.</source>
          <target state="translated">填充缺失值的轴线。</target>
        </trans-unit>
        <trans-unit id="af3d9cf81d0ecd6ab4007608d578ff18fdd812f5" translate="yes" xml:space="preserve">
          <source>Axis for the function to be applied on.</source>
          <target state="translated">要应用功能的轴。</target>
        </trans-unit>
        <trans-unit id="558d7d6244767b206d2619baa97c003ee79bbeac" translate="yes" xml:space="preserve">
          <source>Axis grid lines.</source>
          <target state="translated">轴网格线。</target>
        </trans-unit>
        <trans-unit id="58aad5359979285a40cbf75418420c255020489c" translate="yes" xml:space="preserve">
          <source>Axis labels</source>
          <target state="translated">轴标签</target>
        </trans-unit>
        <trans-unit id="e4459d9afa7679398ad4d66b0656daae6713bba0" translate="yes" xml:space="preserve">
          <source>Axis to be sorted.</source>
          <target state="translated">待排序的轴。</target>
        </trans-unit>
        <trans-unit id="db1906fbeee0195046920ed075d5b0c52d721b71" translate="yes" xml:space="preserve">
          <source>Axis to direct sorting. The value &amp;lsquo;index&amp;rsquo; is accepted for compatibility with DataFrame.sort_values.</source>
          <target state="translated">轴直接排序。为了与DataFrame.sort_values兼容，可接受值&amp;ldquo;索引&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="862ef98b62dba3b71ef4b57ec3dd6a3acf52b3c2" translate="yes" xml:space="preserve">
          <source>Axis to direct sorting. This can only be 0 for Series.</source>
          <target state="translated">轴到直接排序。对于系列来说,这只能是0。</target>
        </trans-unit>
        <trans-unit id="da437f06c43e7aa9897ec00d2ab29db84eeb9c7f" translate="yes" xml:space="preserve">
          <source>Axis to interpolate along.</source>
          <target state="translated">沿着轴线进行插值。</target>
        </trans-unit>
        <trans-unit id="b9d77bb4e0a86d5d1f7eff95d4ee2e0930c4df3d" translate="yes" xml:space="preserve">
          <source>Axis to retrieve cross-section on.</source>
          <target state="translated">检索横截面的轴。</target>
        </trans-unit>
        <trans-unit id="3809ca7a13f05d63ec4d467aacddf1c13864454b" translate="yes" xml:space="preserve">
          <source>Axis to sample. Accepts axis number or name. Default is stat axis for given data type (0 for Series and DataFrames).</source>
          <target state="translated">要采样的轴。接受轴号或名称。默认值是给定数据类型的统计轴(系列和数据帧为0)。</target>
        </trans-unit>
        <trans-unit id="d2ae544f18e576798e0e3b3ba5c3c1bbae3a15b2" translate="yes" xml:space="preserve">
          <source>Axis to target with &lt;code&gt;mapper&lt;/code&gt;. Can be either the axis name (&amp;lsquo;index&amp;rsquo;, &amp;lsquo;columns&amp;rsquo;) or number (0, 1). The default is &amp;lsquo;index&amp;rsquo;.</source>
          <target state="translated">用 &lt;code&gt;mapper&lt;/code&gt; 定位的轴。可以是轴名称（&amp;ldquo;索引&amp;rdquo;，&amp;ldquo;列&amp;rdquo;）或数字（0、1）。默认值为&amp;ldquo;索引&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="60eb28a9f49cf47b0a8cc1e32d75b6c5cf627ed5" translate="yes" xml:space="preserve">
          <source>Axis to target. Can be either the axis name (&amp;lsquo;index&amp;rsquo;, &amp;lsquo;columns&amp;rsquo;) or number (0, 1).</source>
          <target state="translated">轴到目标。可以是轴名称（&amp;ldquo;索引&amp;rdquo;，&amp;ldquo;列&amp;rdquo;）或数字（0、1）。</target>
        </trans-unit>
        <trans-unit id="dd0361baee21e1b1202b20962818725f461d664b" translate="yes" xml:space="preserve">
          <source>Axis to truncate. Truncates the index (rows) by default.</source>
          <target state="translated">要截断的轴。默认情况下截断索引(行)。</target>
        </trans-unit>
        <trans-unit id="ae4f281df5a5d0ff3cad6371f76d5c29b6d953ec" translate="yes" xml:space="preserve">
          <source>B</source>
          <target state="translated">B</target>
        </trans-unit>
        <trans-unit id="ae5166b5a6bf18ff941620e3302ff37b11786413" translate="yes" xml:space="preserve">
          <source>BA, BY</source>
          <target state="translated">BA,BY</target>
        </trans-unit>
        <trans-unit id="89533a386d3e90e8377368c7d33936c8671d8779" translate="yes" xml:space="preserve">
          <source>BAS, BYS</source>
          <target state="translated">巴斯,比亚斯</target>
        </trans-unit>
        <trans-unit id="578a49fac35655f8a7cd81c0227ca8247bcee12c" translate="yes" xml:space="preserve">
          <source>BDay</source>
          <target state="translated">BDay</target>
        </trans-unit>
        <trans-unit id="70bcc0687642f6fc9c81360e6f3673a3778d04ea" translate="yes" xml:space="preserve">
          <source>BDay.apply()</source>
          <target state="translated">BDay.apply()</target>
        </trans-unit>
        <trans-unit id="38fb47316f1665a955e415da88e14cf8d35c0d5d" translate="yes" xml:space="preserve">
          <source>BDay.apply_index()</source>
          <target state="translated">BDay.apply_index()</target>
        </trans-unit>
        <trans-unit id="f668da582f90311e06eb85b4c863392d09ac0445" translate="yes" xml:space="preserve">
          <source>BDay.base</source>
          <target state="translated">BDay.base</target>
        </trans-unit>
        <trans-unit id="2e5b863d8240050f8f609a53d2573634a907b463" translate="yes" xml:space="preserve">
          <source>BDay.copy()</source>
          <target state="translated">BDay.copy()</target>
        </trans-unit>
        <trans-unit id="4aa6708ea2eed05450c22c6b1deb9009720040c2" translate="yes" xml:space="preserve">
          <source>BDay.freqstr</source>
          <target state="translated">BDay.freqstr</target>
        </trans-unit>
        <trans-unit id="4387a471f6aa72675640a612f972597e0ab2ef3a" translate="yes" xml:space="preserve">
          <source>BDay.isAnchored()</source>
          <target state="translated">BDay.isAnchored()</target>
        </trans-unit>
        <trans-unit id="e87c4a0f58c3cd8c92053e4c01058dd048960e93" translate="yes" xml:space="preserve">
          <source>BDay.kwds</source>
          <target state="translated">BDay.kwds</target>
        </trans-unit>
        <trans-unit id="371109edbd1e6fce60eb53f0e3d744a3486c4b54" translate="yes" xml:space="preserve">
          <source>BDay.name</source>
          <target state="translated">BDay.name</target>
        </trans-unit>
        <trans-unit id="42d2eb17788b1f93ff2bba8afe1564964febb8cc" translate="yes" xml:space="preserve">
          <source>BDay.nanos</source>
          <target state="translated">BDay.nanos</target>
        </trans-unit>
        <trans-unit id="56e71dfbe3149f5caa028d9ccdbf0499807b82fc" translate="yes" xml:space="preserve">
          <source>BDay.normalize</source>
          <target state="translated">BDay.normalize</target>
        </trans-unit>
        <trans-unit id="fde36cf02f1f883dd61753e8b8f46f384fd8a2c9" translate="yes" xml:space="preserve">
          <source>BDay.offset</source>
          <target state="translated">BDay.offset</target>
        </trans-unit>
        <trans-unit id="971b4a3e19d3ae8c701df3efd769b8f960ea8d7b" translate="yes" xml:space="preserve">
          <source>BDay.onOffset()</source>
          <target state="translated">BDay.onOffset()</target>
        </trans-unit>
        <trans-unit id="44cbb356f5795834d375c1ed778a95e2143e982e" translate="yes" xml:space="preserve">
          <source>BDay.rollback()</source>
          <target state="translated">BDay.rollback()</target>
        </trans-unit>
        <trans-unit id="c645b47c42f91be300f84a75327a4d7a92e7d3e1" translate="yes" xml:space="preserve">
          <source>BDay.rollforward()</source>
          <target state="translated">BDay.rollforward()</target>
        </trans-unit>
        <trans-unit id="4c136618fb56cf9ff4b6e161cde54e7fb0a4da32" translate="yes" xml:space="preserve">
          <source>BDay.rule_code</source>
          <target state="translated">BDay.rule_code</target>
        </trans-unit>
        <trans-unit id="2f0e7f3768f9d21ed94da9abe4f805dbad6e020e" translate="yes" xml:space="preserve">
          <source>BH</source>
          <target state="translated">BH</target>
        </trans-unit>
        <trans-unit id="1c50baa4b6f2c8346ae6645f25465fba26111845" translate="yes" xml:space="preserve">
          <source>BLD: Updates to the build process/scripts</source>
          <target state="translated">BLD:对构建过程/脚本的更新</target>
        </trans-unit>
        <trans-unit id="377bcd643607c406052375855c4a9a36a305c8ce" translate="yes" xml:space="preserve">
          <source>BM</source>
          <target state="translated">BM</target>
        </trans-unit>
        <trans-unit id="45cb448ccda5ba5bd7b24c304ad43117f0f1545f" translate="yes" xml:space="preserve">
          <source>BMS</source>
          <target state="translated">BMS</target>
        </trans-unit>
        <trans-unit id="1ab6400027a24921db9bda1ea459e4ebedfab6b5" translate="yes" xml:space="preserve">
          <source>BMonthBegin</source>
          <target state="translated">BMonthBegin</target>
        </trans-unit>
        <trans-unit id="83504f89e36bc5bd4a061677b8f16854a7d10372" translate="yes" xml:space="preserve">
          <source>BMonthBegin.apply()</source>
          <target state="translated">BMonthBegin.apply()</target>
        </trans-unit>
        <trans-unit id="ad4226df114f26a1b3a5bcbf5051028d17657cd4" translate="yes" xml:space="preserve">
          <source>BMonthBegin.apply_index()</source>
          <target state="translated">BMonthBegin.apply_index()</target>
        </trans-unit>
        <trans-unit id="9a71ee36783e7271d13c3602e2cf13bf6c50443e" translate="yes" xml:space="preserve">
          <source>BMonthBegin.base</source>
          <target state="translated">BMonthBegin.base</target>
        </trans-unit>
        <trans-unit id="f19d3d1fca7c9f7816afa37df91d1a2136cacea2" translate="yes" xml:space="preserve">
          <source>BMonthBegin.copy()</source>
          <target state="translated">BMonthBegin.copy()</target>
        </trans-unit>
        <trans-unit id="b36894f2391084d0a4f570770f6b7d436244adb3" translate="yes" xml:space="preserve">
          <source>BMonthBegin.freqstr</source>
          <target state="translated">BMonthBegin.freqstr</target>
        </trans-unit>
        <trans-unit id="d51bfda2d5b9b32dde7585e767507c15df6fb017" translate="yes" xml:space="preserve">
          <source>BMonthBegin.isAnchored()</source>
          <target state="translated">BMonthBegin.isAnchored()</target>
        </trans-unit>
        <trans-unit id="ead9bc8f26ab6b516fad35f962f22d914c50baff" translate="yes" xml:space="preserve">
          <source>BMonthBegin.kwds</source>
          <target state="translated">BMonthBegin.kwds</target>
        </trans-unit>
        <trans-unit id="b4f602da183da0c4971db8be98f97ba0b05925e1" translate="yes" xml:space="preserve">
          <source>BMonthBegin.name</source>
          <target state="translated">BMonthBegin.name</target>
        </trans-unit>
        <trans-unit id="0752010aab7475242f703198fb7477d6fbe21bc6" translate="yes" xml:space="preserve">
          <source>BMonthBegin.nanos</source>
          <target state="translated">BMonthBegin.nanos</target>
        </trans-unit>
        <trans-unit id="87fbc048ce1c0eb56438b7470975cef09cc8b927" translate="yes" xml:space="preserve">
          <source>BMonthBegin.normalize</source>
          <target state="translated">BMonthBegin.normalize</target>
        </trans-unit>
        <trans-unit id="12fef1a5e6701c70a293f0cd2f492af3b39ac4e2" translate="yes" xml:space="preserve">
          <source>BMonthBegin.onOffset()</source>
          <target state="translated">BMonthBegin.onOffset()</target>
        </trans-unit>
        <trans-unit id="0be58f0e18ca5c503615b148117c6659591ef3b0" translate="yes" xml:space="preserve">
          <source>BMonthBegin.rollback()</source>
          <target state="translated">BMonthBegin.rollback()</target>
        </trans-unit>
        <trans-unit id="dc00734ff65de7e51275ba27bacff91566fab0d6" translate="yes" xml:space="preserve">
          <source>BMonthBegin.rollforward()</source>
          <target state="translated">BMonthBegin.rollforward()</target>
        </trans-unit>
        <trans-unit id="1882f2ee5bbb1e5811cce1472c56173928d38300" translate="yes" xml:space="preserve">
          <source>BMonthBegin.rule_code</source>
          <target state="translated">BMonthBegin.rule_code</target>
        </trans-unit>
        <trans-unit id="bafb7d6e6e395608f4698d7a436f64848984968d" translate="yes" xml:space="preserve">
          <source>BMonthEnd</source>
          <target state="translated">BMonthEnd</target>
        </trans-unit>
        <trans-unit id="93aef6426c2905e7e864abc1d05aec74d099decd" translate="yes" xml:space="preserve">
          <source>BMonthEnd.apply()</source>
          <target state="translated">BMonthEnd.apply()</target>
        </trans-unit>
        <trans-unit id="8d733aac78064da7356434e2f247eb43b036bf0d" translate="yes" xml:space="preserve">
          <source>BMonthEnd.apply_index()</source>
          <target state="translated">BMonthEnd.apply_index()</target>
        </trans-unit>
        <trans-unit id="588d1d94be691d2661c59a082780912d9975069a" translate="yes" xml:space="preserve">
          <source>BMonthEnd.base</source>
          <target state="translated">BMonthEnd.base</target>
        </trans-unit>
        <trans-unit id="aea40f3239eb0cafbf172cd005bd9874cb93f880" translate="yes" xml:space="preserve">
          <source>BMonthEnd.copy()</source>
          <target state="translated">BMonthEnd.copy()</target>
        </trans-unit>
        <trans-unit id="ec201850a96522b991d05792f69605047996e83e" translate="yes" xml:space="preserve">
          <source>BMonthEnd.freqstr</source>
          <target state="translated">BMonthEnd.freqstr</target>
        </trans-unit>
        <trans-unit id="2b9af9d9dcccf4ba44b9b6ed70d24c176b952540" translate="yes" xml:space="preserve">
          <source>BMonthEnd.isAnchored()</source>
          <target state="translated">BMonthEnd.isAnchored()</target>
        </trans-unit>
        <trans-unit id="20cf33775806497e9afa6187a3ce470c6b09f0f7" translate="yes" xml:space="preserve">
          <source>BMonthEnd.kwds</source>
          <target state="translated">BMonthEnd.kwds</target>
        </trans-unit>
        <trans-unit id="b4261373c0bfbe930942c9169dbc3817613f5884" translate="yes" xml:space="preserve">
          <source>BMonthEnd.name</source>
          <target state="translated">BMonthEnd.name</target>
        </trans-unit>
        <trans-unit id="d969126bdf278de74603044ec851c7d1958f23df" translate="yes" xml:space="preserve">
          <source>BMonthEnd.nanos</source>
          <target state="translated">BMonthEnd.nanos</target>
        </trans-unit>
        <trans-unit id="d82f7b361ac9331042f4c1154faba469bfc81b56" translate="yes" xml:space="preserve">
          <source>BMonthEnd.normalize</source>
          <target state="translated">BMonthEnd.normalize</target>
        </trans-unit>
        <trans-unit id="cdbf86eaa44e013b7f1c79124f2e78f5e51186d0" translate="yes" xml:space="preserve">
          <source>BMonthEnd.onOffset()</source>
          <target state="translated">BMonthEnd.onOffset()</target>
        </trans-unit>
        <trans-unit id="13ffb2d489edb5588207c4c97ee50f778980046a" translate="yes" xml:space="preserve">
          <source>BMonthEnd.rollback()</source>
          <target state="translated">BMonthEnd.rollback()</target>
        </trans-unit>
        <trans-unit id="29ab63ff3d4fbadca4689c3ccc9961c2c945bfb9" translate="yes" xml:space="preserve">
          <source>BMonthEnd.rollforward()</source>
          <target state="translated">BMonthEnd.rollforward()</target>
        </trans-unit>
        <trans-unit id="30af282c5b3bead78940770aa617b462b3218cb1" translate="yes" xml:space="preserve">
          <source>BMonthEnd.rule_code</source>
          <target state="translated">BMonthEnd.rule_code</target>
        </trans-unit>
        <trans-unit id="70c2d9e13b091ccb84173001d65d13439b24d742" translate="yes" xml:space="preserve">
          <source>BQ</source>
          <target state="translated">BQ</target>
        </trans-unit>
        <trans-unit id="d8472d79b6d657697336aae5d693ce6a7b8f51f3" translate="yes" xml:space="preserve">
          <source>BQS</source>
          <target state="translated">BQS</target>
        </trans-unit>
        <trans-unit id="2dd7fe2f0e111468c8fb06c625f031c4e26c89de" translate="yes" xml:space="preserve">
          <source>BQuarterBegin</source>
          <target state="translated">BQuarterBegin</target>
        </trans-unit>
        <trans-unit id="cc8503b057ed0b42b2223b3b02dd54edff04eb71" translate="yes" xml:space="preserve">
          <source>BQuarterBegin.apply()</source>
          <target state="translated">BQuarterBegin.apply()</target>
        </trans-unit>
        <trans-unit id="03f0f88c9812bf0529c8995dc4e94b226540f03b" translate="yes" xml:space="preserve">
          <source>BQuarterBegin.apply_index()</source>
          <target state="translated">BQuarterBegin.apply_index()</target>
        </trans-unit>
        <trans-unit id="9bc8203026f657cb0433fac8b25e7d77e2bcaeb7" translate="yes" xml:space="preserve">
          <source>BQuarterBegin.base</source>
          <target state="translated">BQuarterBegin.base</target>
        </trans-unit>
        <trans-unit id="c6e78295cbf042fdb64088d9d795e2c38128eafb" translate="yes" xml:space="preserve">
          <source>BQuarterBegin.copy()</source>
          <target state="translated">BQuarterBegin.copy()</target>
        </trans-unit>
        <trans-unit id="6810c49d1554576585c134cfb92b3800fcaae2ca" translate="yes" xml:space="preserve">
          <source>BQuarterBegin.freqstr</source>
          <target state="translated">BQuarterBegin.freqstr</target>
        </trans-unit>
        <trans-unit id="ae785ff1caa5839c64e8192fcb2007f17811ac47" translate="yes" xml:space="preserve">
          <source>BQuarterBegin.isAnchored()</source>
          <target state="translated">BQuarterBegin.isAnchored()</target>
        </trans-unit>
        <trans-unit id="b41a0ccd75c16e573b8fd7abfa2b0a537372c7d3" translate="yes" xml:space="preserve">
          <source>BQuarterBegin.kwds</source>
          <target state="translated">BQuarterBegin.kwds</target>
        </trans-unit>
        <trans-unit id="3e3747ad39fc8dba0fdb8ff4df79320713cfa09e" translate="yes" xml:space="preserve">
          <source>BQuarterBegin.name</source>
          <target state="translated">BQuarterBegin.name</target>
        </trans-unit>
        <trans-unit id="e699ff5bff2f2d7956dd59d327e24d2a38e6ae25" translate="yes" xml:space="preserve">
          <source>BQuarterBegin.nanos</source>
          <target state="translated">BQuarterBegin.nanos</target>
        </trans-unit>
        <trans-unit id="6b68257de6cd776672e22f3f778599f900b1ca7b" translate="yes" xml:space="preserve">
          <source>BQuarterBegin.normalize</source>
          <target state="translated">BQuarterBegin.normalize</target>
        </trans-unit>
        <trans-unit id="1541ddb731454b991bc452afbe4f6dbbb66338a4" translate="yes" xml:space="preserve">
          <source>BQuarterBegin.onOffset()</source>
          <target state="translated">BQuarterBegin.onOffset()</target>
        </trans-unit>
        <trans-unit id="b473c14cd03bd8ca7f48223a01a37944f71058c8" translate="yes" xml:space="preserve">
          <source>BQuarterBegin.rollback()</source>
          <target state="translated">BQuarterBegin.rollback()</target>
        </trans-unit>
        <trans-unit id="c3ca8ba0bb9894428417cef1549214e635ce71a0" translate="yes" xml:space="preserve">
          <source>BQuarterBegin.rollforward()</source>
          <target state="translated">BQuarterBegin.rollforward()</target>
        </trans-unit>
        <trans-unit id="ae4229d9922ca2b4f573e09b52349dfd3ec80a9f" translate="yes" xml:space="preserve">
          <source>BQuarterBegin.rule_code</source>
          <target state="translated">BQuarterBegin.rule_code</target>
        </trans-unit>
        <trans-unit id="ee0f2f9fa29caae6fafd63c0f35120474440c449" translate="yes" xml:space="preserve">
          <source>BQuarterEnd</source>
          <target state="translated">BQuarterEnd</target>
        </trans-unit>
        <trans-unit id="884babd85f88a9c0ab97ddd7bd6db204d9a9d095" translate="yes" xml:space="preserve">
          <source>BQuarterEnd.apply()</source>
          <target state="translated">BQuarterEnd.apply()</target>
        </trans-unit>
        <trans-unit id="c642bdc5749f8b1de6a52573d5949fe410fbcf0f" translate="yes" xml:space="preserve">
          <source>BQuarterEnd.apply_index()</source>
          <target state="translated">BQuarterEnd.apply_index()</target>
        </trans-unit>
        <trans-unit id="1bc9be695a13e6d6d9e0c4f27054b33a2c04e54a" translate="yes" xml:space="preserve">
          <source>BQuarterEnd.base</source>
          <target state="translated">BQuarterEnd.base</target>
        </trans-unit>
        <trans-unit id="f79d238f6b96a962ad40b42d3d1e9f07ff633611" translate="yes" xml:space="preserve">
          <source>BQuarterEnd.copy()</source>
          <target state="translated">BQuarterEnd.copy()</target>
        </trans-unit>
        <trans-unit id="244da55f87b78e30b4932eb4742db8a3d04740fc" translate="yes" xml:space="preserve">
          <source>BQuarterEnd.freqstr</source>
          <target state="translated">BQuarterEnd.freqstr</target>
        </trans-unit>
        <trans-unit id="913536e49ed4a9415ed76a805a49119117a20a1c" translate="yes" xml:space="preserve">
          <source>BQuarterEnd.isAnchored()</source>
          <target state="translated">BQuarterEnd.isAnchored()</target>
        </trans-unit>
        <trans-unit id="6939bd82f0f3cfb62f4988da4e426e5691d7e3f3" translate="yes" xml:space="preserve">
          <source>BQuarterEnd.kwds</source>
          <target state="translated">BQuarterEnd.kwds</target>
        </trans-unit>
        <trans-unit id="4b507a844b9ebef6fdf53eae5d1342e8649bf071" translate="yes" xml:space="preserve">
          <source>BQuarterEnd.name</source>
          <target state="translated">BQuarterEnd.name</target>
        </trans-unit>
        <trans-unit id="46b29831cc18204f3a3ade3da7d143eff22fa80d" translate="yes" xml:space="preserve">
          <source>BQuarterEnd.nanos</source>
          <target state="translated">BQuarterEnd.nanos</target>
        </trans-unit>
        <trans-unit id="ce503ae4e5774b2e18f6993579c3cadc2b725992" translate="yes" xml:space="preserve">
          <source>BQuarterEnd.normalize</source>
          <target state="translated">BQuarterEnd.normalize</target>
        </trans-unit>
        <trans-unit id="756e2e9da7ae8c8417ecaaa6b8a6bc555675d615" translate="yes" xml:space="preserve">
          <source>BQuarterEnd.onOffset()</source>
          <target state="translated">BQuarterEnd.onOffset()</target>
        </trans-unit>
        <trans-unit id="da564479ebcb31505d0126e5208e399e7a01fb71" translate="yes" xml:space="preserve">
          <source>BQuarterEnd.rollback()</source>
          <target state="translated">BQuarterEnd.rollback()</target>
        </trans-unit>
        <trans-unit id="effb0e5231cc8e88af18d9b014de363dc8080b7f" translate="yes" xml:space="preserve">
          <source>BQuarterEnd.rollforward()</source>
          <target state="translated">BQuarterEnd.rollforward()</target>
        </trans-unit>
        <trans-unit id="befeb1a429c920aef4ee786e08148eaa49161150" translate="yes" xml:space="preserve">
          <source>BQuarterEnd.rule_code</source>
          <target state="translated">BQuarterEnd.rule_code</target>
        </trans-unit>
        <trans-unit id="df0f11b1cbf0c94d3ead344a7108999434fbd8d6" translate="yes" xml:space="preserve">
          <source>BUG: Bug fix</source>
          <target state="translated">BUG:错误修复</target>
        </trans-unit>
        <trans-unit id="ed372d25ab983682c8e0930d23f3a73aacc97b35" translate="yes" xml:space="preserve">
          <source>BY-group</source>
          <target state="translated">BY-group</target>
        </trans-unit>
        <trans-unit id="9e238df64af90be60a1e9693d4b685f6adc2e5d3" translate="yes" xml:space="preserve">
          <source>BYearBegin</source>
          <target state="translated">BYearBegin</target>
        </trans-unit>
        <trans-unit id="3737eb090c31a022aef3b162fb65dc9146f66101" translate="yes" xml:space="preserve">
          <source>BYearBegin.apply()</source>
          <target state="translated">BYearBegin.apply()</target>
        </trans-unit>
        <trans-unit id="056d88a7f937cfa52ea9912267c76c32b05b5bab" translate="yes" xml:space="preserve">
          <source>BYearBegin.apply_index()</source>
          <target state="translated">BYearBegin.apply_index()</target>
        </trans-unit>
        <trans-unit id="8eca5628265a22d597e7175bc09a7374fb9e8962" translate="yes" xml:space="preserve">
          <source>BYearBegin.base</source>
          <target state="translated">BYearBegin.base</target>
        </trans-unit>
        <trans-unit id="e5d3ca32286baaa144a588892569a5882c4275ce" translate="yes" xml:space="preserve">
          <source>BYearBegin.copy()</source>
          <target state="translated">BYearBegin.copy()</target>
        </trans-unit>
        <trans-unit id="7c88fbf4ee1dd1bf09a7fc8bb2be41a4a0b28d74" translate="yes" xml:space="preserve">
          <source>BYearBegin.freqstr</source>
          <target state="translated">BYearBegin.freqstr</target>
        </trans-unit>
        <trans-unit id="8592bbbd135037082e34811ba6cb7b2eb80907e8" translate="yes" xml:space="preserve">
          <source>BYearBegin.isAnchored()</source>
          <target state="translated">BYearBegin.isAnchored()</target>
        </trans-unit>
        <trans-unit id="bcc29f0796faa0db5cb2889cdda532ed24543f0b" translate="yes" xml:space="preserve">
          <source>BYearBegin.kwds</source>
          <target state="translated">BYearBegin.kwds</target>
        </trans-unit>
        <trans-unit id="f18c10b0b65b62a24f3da35788798f1373c2f13e" translate="yes" xml:space="preserve">
          <source>BYearBegin.name</source>
          <target state="translated">BYearBegin.name</target>
        </trans-unit>
        <trans-unit id="b4008b8291953497057e362b2840686211d18b86" translate="yes" xml:space="preserve">
          <source>BYearBegin.nanos</source>
          <target state="translated">BYearBegin.nanos</target>
        </trans-unit>
        <trans-unit id="912edcb593d2d242c1e24036fb45a73b2340ac95" translate="yes" xml:space="preserve">
          <source>BYearBegin.normalize</source>
          <target state="translated">BYearBegin.normalize</target>
        </trans-unit>
        <trans-unit id="0561f36ce44a730da0ea82523eb85d8b43907660" translate="yes" xml:space="preserve">
          <source>BYearBegin.onOffset()</source>
          <target state="translated">BYearBegin.onOffset()</target>
        </trans-unit>
        <trans-unit id="5c7a415cc7bc462f27f221d91ea83b15aba21b3a" translate="yes" xml:space="preserve">
          <source>BYearBegin.rollback()</source>
          <target state="translated">BYearBegin.rollback()</target>
        </trans-unit>
        <trans-unit id="2b265f3a6898fccc0f486221bf0f80f2d00ff185" translate="yes" xml:space="preserve">
          <source>BYearBegin.rollforward()</source>
          <target state="translated">BYearBegin.rollforward()</target>
        </trans-unit>
        <trans-unit id="edd272205139e71992f6533b051a96dcd18604ae" translate="yes" xml:space="preserve">
          <source>BYearBegin.rule_code</source>
          <target state="translated">BYearBegin.rule_code</target>
        </trans-unit>
        <trans-unit id="0fee7b2de6fbfdf8d1fbf0a9827f8fd9de59e54a" translate="yes" xml:space="preserve">
          <source>BYearEnd</source>
          <target state="translated">BYearEnd</target>
        </trans-unit>
        <trans-unit id="f5b961e54d023617cb494b1e17dca4cf1b7c0d91" translate="yes" xml:space="preserve">
          <source>BYearEnd.apply()</source>
          <target state="translated">BYearEnd.apply()</target>
        </trans-unit>
        <trans-unit id="55e78526b23b55ce0f39ed6200ac4191490a3c92" translate="yes" xml:space="preserve">
          <source>BYearEnd.apply_index()</source>
          <target state="translated">BYearEnd.apply_index()</target>
        </trans-unit>
        <trans-unit id="54a12a12395792a986e490963229ed101d73564b" translate="yes" xml:space="preserve">
          <source>BYearEnd.base</source>
          <target state="translated">BYearEnd.base</target>
        </trans-unit>
        <trans-unit id="5673f38572ad306cf9cbd99e9c350987a4cb92c8" translate="yes" xml:space="preserve">
          <source>BYearEnd.copy()</source>
          <target state="translated">BYearEnd.copy()</target>
        </trans-unit>
        <trans-unit id="ecb8a3037ad6fafe19674392d990d26771ef3de5" translate="yes" xml:space="preserve">
          <source>BYearEnd.freqstr</source>
          <target state="translated">BYearEnd.freqstr</target>
        </trans-unit>
        <trans-unit id="3bff57e5980b415bc3e5fb02d67eaba48e39514a" translate="yes" xml:space="preserve">
          <source>BYearEnd.isAnchored()</source>
          <target state="translated">BYearEnd.isAnchored()</target>
        </trans-unit>
        <trans-unit id="0a8d7606a7d0240772827bfed1e64ced3f6d65ce" translate="yes" xml:space="preserve">
          <source>BYearEnd.kwds</source>
          <target state="translated">BYearEnd.kwds</target>
        </trans-unit>
        <trans-unit id="11ea2ac2ad5ae2896ab1d96734d876ba39c538e2" translate="yes" xml:space="preserve">
          <source>BYearEnd.name</source>
          <target state="translated">BYearEnd.name</target>
        </trans-unit>
        <trans-unit id="9f3bf5cc1560ee6ca82e6b24ab464e8c406c5f93" translate="yes" xml:space="preserve">
          <source>BYearEnd.nanos</source>
          <target state="translated">BYearEnd.nanos</target>
        </trans-unit>
        <trans-unit id="b01052f37fc5cb55e358f49ea906b98c0ffb3425" translate="yes" xml:space="preserve">
          <source>BYearEnd.normalize</source>
          <target state="translated">BYearEnd.normalize</target>
        </trans-unit>
        <trans-unit id="48236773e7957e81dc0e4ea078d79e27a8b750df" translate="yes" xml:space="preserve">
          <source>BYearEnd.onOffset()</source>
          <target state="translated">BYearEnd.onOffset()</target>
        </trans-unit>
        <trans-unit id="2deea8490be7443539a3e38a853b53c4dd7d062b" translate="yes" xml:space="preserve">
          <source>BYearEnd.rollback()</source>
          <target state="translated">BYearEnd.rollback()</target>
        </trans-unit>
        <trans-unit id="170da2f03679a6c64fda69c019a315934dc11f9e" translate="yes" xml:space="preserve">
          <source>BYearEnd.rollforward()</source>
          <target state="translated">BYearEnd.rollforward()</target>
        </trans-unit>
        <trans-unit id="c77eeb234cb6c64c47b69db5e41cd1adbee744cb" translate="yes" xml:space="preserve">
          <source>BYearEnd.rule_code</source>
          <target state="translated">BYearEnd.rule_code</target>
        </trans-unit>
        <trans-unit id="23cbbf32aabe4a968bfc7e9f60a162c44d971426" translate="yes" xml:space="preserve">
          <source>Back in an interactive IPython session:</source>
          <target state="translated">回到IPython的互动环节。</target>
        </trans-unit>
        <trans-unit id="851d73cd99fe3de27b85d1a02dff66cc9a30db63" translate="yes" xml:space="preserve">
          <source>Backend to use instead of the backend specified in the option &lt;code&gt;plotting.backend&lt;/code&gt;. For instance, &amp;lsquo;matplotlib&amp;rsquo;. Alternatively, to specify the &lt;code&gt;plotting.backend&lt;/code&gt; for the whole session, set &lt;code&gt;pd.options.plotting.backend&lt;/code&gt;.</source>
          <target state="translated">后端使用而不是在选项中指定的后端 &lt;code&gt;plotting.backend&lt;/code&gt; 。例如，&amp;ldquo; matplotlib&amp;rdquo;。另外，指定 &lt;code&gt;plotting.backend&lt;/code&gt; 整个会话，集 &lt;code&gt;pd.options.plotting.backend&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9447b9237022e1638a61508ac8dd5ebf33ebb5fc" translate="yes" xml:space="preserve">
          <source>Backtick quoted variables are parsed as literal Python code and are converted internally to a Python valid identifier. This can lead to the following problems.</source>
          <target state="translated">Backtick引用的变量被解析为Python字面代码,并在内部转换为Python有效标识符。这可能导致以下问题。</target>
        </trans-unit>
        <trans-unit id="f5626aa3cb28fff5db5e5281b96c5b8d6470607d" translate="yes" xml:space="preserve">
          <source>Backward fill NaN values in the resampled data.</source>
          <target state="translated">在重新采样的数据中向后填充NaN值。</target>
        </trans-unit>
        <trans-unit id="8d7844c26cc0a288b277ef419f4ce63843d1d603" translate="yes" xml:space="preserve">
          <source>Backward fill the missing values in the dataset.</source>
          <target state="translated">向后填充数据集中的缺失值。</target>
        </trans-unit>
        <trans-unit id="76b814d2b638f1f90a41d9bf5e81f2ea628507a0" translate="yes" xml:space="preserve">
          <source>Backward fill the new missing values in the resampled data.</source>
          <target state="translated">向后填充重新采样数据中的新缺失值。</target>
        </trans-unit>
        <trans-unit id="0d1b09014608f534feed5fe656d7bcd70b970daf" translate="yes" xml:space="preserve">
          <source>Backward fill the values.</source>
          <target state="translated">向后填写数值。</target>
        </trans-unit>
        <trans-unit id="8fd78925dba59eef91afba0cdabe923520e5ee69" translate="yes" xml:space="preserve">
          <source>Backwards compatibility</source>
          <target state="translated">向后兼容性</target>
        </trans-unit>
        <trans-unit id="e496fd20136d4bb7828ebb0ab925b1bd977208e4" translate="yes" xml:space="preserve">
          <source>Bar</source>
          <target state="translated">Bar</target>
        </trans-unit>
        <trans-unit id="d8ba7250a3312316dd4dde33e404a17ad97e4564" translate="yes" xml:space="preserve">
          <source>Bar charts</source>
          <target state="translated">条形图</target>
        </trans-unit>
        <trans-unit id="60722378d992b90df959c8477ac087deff7fe316" translate="yes" xml:space="preserve">
          <source>Bar plots</source>
          <target state="translated">条形图</target>
        </trans-unit>
        <trans-unit id="d70189b4eaa35d4e593674bb9281eae7072ffc37" translate="yes" xml:space="preserve">
          <source>Base R</source>
          <target state="translated">基础R</target>
        </trans-unit>
        <trans-unit id="3c20df9d6f1d452d4a09b50a07faa412a80e661b" translate="yes" xml:space="preserve">
          <source>Base class for defining custom window boundaries.</source>
          <target state="translated">用于定义自定义窗口边界的基类。</target>
        </trans-unit>
        <trans-unit id="68c6d4b2ce34ea4512493ea7fb38dea3bf08d71d" translate="yes" xml:space="preserve">
          <source>Base class for window bounds calculations.</source>
          <target state="translated">窗口边界计算的基础类。</target>
        </trans-unit>
        <trans-unit id="972abc36d9bf845148d943cfd45af43b6a74318e" translate="yes" xml:space="preserve">
          <source>Based on the review you get on your pull request, you will probably need to make some changes to the code. In that case, you can make them in your branch, add a new commit to that branch, push it to GitHub, and the pull request will be automatically updated. Pushing them to GitHub again is done by:</source>
          <target state="translated">根据对你的拉取请求的审查,你可能需要对代码做一些修改。在这种情况下,你可以在你的分支中进行修改,然后在该分支中添加一个新的提交,推送到GitHub上,拉取请求就会自动更新。再把它们推送到GitHub的方法是。</target>
        </trans-unit>
        <trans-unit id="aa2c96dacf00c451ef465f6115a45a20bccf1256" translate="yes" xml:space="preserve">
          <source>Basic</source>
          <target state="translated">Basic</target>
        </trans-unit>
        <trans-unit id="b264c501851f381518b79889d8aaefcc6e03ff72" translate="yes" xml:space="preserve">
          <source>Basic MultiIndex slicing using slices, lists, and labels.</source>
          <target state="translated">使用切片、列表和标签进行基本的 MultiIndex 分片。</target>
        </trans-unit>
        <trans-unit id="20b19d89ef0aed3f2d4f1afed1d3f801c6b85aa5" translate="yes" xml:space="preserve">
          <source>Basic example</source>
          <target state="translated">基本例子</target>
        </trans-unit>
        <trans-unit id="b6c521d76dde722f0f0344b731691edeccd3c850" translate="yes" xml:space="preserve">
          <source>Basic grouping with apply</source>
          <target state="translated">基本分组与应用</target>
        </trans-unit>
        <trans-unit id="ebd0833fe19e60899fd8edf27cbfb6d8289964d0" translate="yes" xml:space="preserve">
          <source>Basic indexing on axis with MultiIndex</source>
          <target state="translated">在轴上使用MultiIndex进行基本索引</target>
        </trans-unit>
        <trans-unit id="d79655c1e33cfbd6a7943e513b25ae898a2fd8e5" translate="yes" xml:space="preserve">
          <source>Basic plot.</source>
          <target state="translated">基本情节。</target>
        </trans-unit>
        <trans-unit id="37e5fe27e7d9a3c22821ebd2278e8a145488792c" translate="yes" xml:space="preserve">
          <source>Basic plotting for DataFrame objects.</source>
          <target state="translated">DataFrame对象的基本绘图。</target>
        </trans-unit>
        <trans-unit id="3f5e0ff768136b7c8c5659c035724307ecd5cb4e" translate="yes" xml:space="preserve">
          <source>Basic plotting for Series objects.</source>
          <target state="translated">系列对象的基本绘图。</target>
        </trans-unit>
        <trans-unit id="64860fe1e7c29840fd05e60c7b76207877ef71fd" translate="yes" xml:space="preserve">
          <source>Basic plotting: &lt;code&gt;plot&lt;/code&gt;</source>
          <target state="translated">基本绘图： &lt;code&gt;plot&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3f49ba3b7780cd7131e520eaf920dcc70d2912a5" translate="yes" xml:space="preserve">
          <source>Basic plotting: plot</source>
          <target state="translated">基本绘图:绘图</target>
        </trans-unit>
        <trans-unit id="5fcebeefad3cdbbf8733aa928160dec7dc90c1a1" translate="yes" xml:space="preserve">
          <source>Basics</source>
          <target state="translated">Basics</target>
        </trans-unit>
        <trans-unit id="9379ee3df9ad3906a294879b1c55530c5dd7eafc" translate="yes" xml:space="preserve">
          <source>Be aware that &lt;code&gt;Categorical.set_categories()&lt;/code&gt; cannot know whether some category is omitted intentionally or because it is misspelled or (under Python3) due to a type difference (e.g., NumPy S1 dtype and Python strings). This can result in surprising behaviour!</source>
          <target state="translated">请注意， &lt;code&gt;Categorical.set_categories()&lt;/code&gt; 无法知道某个类别是故意省略还是由于类型差异（例如，NumPy S1 dtype和Python字符串）而拼写错误（或在Python3下）。这可能会导致令人惊讶的行为！</target>
        </trans-unit>
        <trans-unit id="34824a7d3d1e3f3fd68195b56986a80834a7369c" translate="yes" xml:space="preserve">
          <source>Be aware that a time zone definition across versions of time zone libraries may not be considered equal. This may cause problems when working with stored data that is localized using one version and operated on with a different version. See &lt;a href=&quot;io#io-hdf5-notes&quot;&gt;here&lt;/a&gt; for how to handle such a situation.</source>
          <target state="translated">请注意，跨时区库版本的时区定义可能不被认为是相等的。当处理使用一个版本本地化并使用另一版本进行操作的存储数据时，这可能会导致问题。有关如何处理此类情况的信息，请参见&lt;a href=&quot;io#io-hdf5-notes&quot;&gt;此处&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2d3e4d487288320037500217372859ddc7eb0235" translate="yes" xml:space="preserve">
          <source>Be aware that assigning new categories is an inplace operation, while most other operations under &lt;code&gt;Series.cat&lt;/code&gt; per default return a new &lt;code&gt;Series&lt;/code&gt; of dtype &lt;code&gt;category&lt;/code&gt;.</source>
          <target state="translated">请注意，分配新的类别是就地操作，而在大多数其他操作 &lt;code&gt;Series.cat&lt;/code&gt; 每默认返回一个新的 &lt;code&gt;Series&lt;/code&gt; D型的 &lt;code&gt;category&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9d172b920ebcb957dca08113a01cedfde898c35e" translate="yes" xml:space="preserve">
          <source>Be aware that assigning to</source>
          <target state="translated">请注意,分配给</target>
        </trans-unit>
        <trans-unit id="47705b59eb35418875a7da72261d664a2f0aca5b" translate="yes" xml:space="preserve">
          <source>Be aware that assigning to &lt;code&gt;categories&lt;/code&gt; is a inplace operation, while all methods return new categorical data per default (but can be called with &lt;code&gt;inplace=True&lt;/code&gt;).</source>
          <target state="translated">请注意，分配给 &lt;code&gt;categories&lt;/code&gt; 是一个就地操作，而所有方法默认都返回新的分类数据（但可以使用 &lt;code&gt;inplace=True&lt;/code&gt; 调用）。</target>
        </trans-unit>
        <trans-unit id="e5e5f583f65ddeddaf91049851b5901a3f2ba9d7" translate="yes" xml:space="preserve">
          <source>Be aware that for times in the future, correct conversion between time zones (and UTC) cannot be guaranteed by any time zone library because a timezone&amp;rsquo;s offset from UTC may be changed by the respective government.</source>
          <target state="translated">请注意，在将来的任何时间，任何时区库都无法保证时区（和UTC）之间的正确转换，因为时区与UTC的时差可能会由各自的政府更改。</target>
        </trans-unit>
        <trans-unit id="e3b7e70e200d0df4a10ee32a35a85a0962517159" translate="yes" xml:space="preserve">
          <source>Be aware that timezones (e.g., &lt;code&gt;pytz.timezone('US/Eastern')&lt;/code&gt;) are not necessarily equal across timezone versions. So if data is localized to a specific timezone in the HDFStore using one version of a timezone library and that data is updated with another version, the data will be converted to UTC since these timezones are not considered equal. Either use the same version of timezone library or use &lt;code&gt;tz_convert&lt;/code&gt; with the updated timezone definition.</source>
          <target state="translated">请注意，时区版本之间的时区（例如 &lt;code&gt;pytz.timezone('US/Eastern')&lt;/code&gt; ）不一定相等。因此，如果使用时区库的一个版本将数据本地化到HDFStore中的特定时区，并且使用另一个版本更新该数据，则由于这些时区不相等，因此数据将转换为UTC。请使用相同版本的时区库，或者将 &lt;code&gt;tz_convert&lt;/code&gt; 与更新的时区定义一起使用。</target>
        </trans-unit>
        <trans-unit id="609055a6070911660e1dd562284d9588085eec44" translate="yes" xml:space="preserve">
          <source>Be careful with DST changes. When there is sequential data, pandas can infer the DST time:</source>
          <target state="translated">要注意DST的变化。当有顺序数据时,大熊猫可以推断出DST时间。</target>
        </trans-unit>
        <trans-unit id="2c11270c924855e413440f8e3b4609087308179b" translate="yes" xml:space="preserve">
          <source>Be careful with DST changes. When there is sequential data, pandas can infer the DST time: &amp;gt;&amp;gt;&amp;gt; s = pd.to_datetime(pd.Series([&amp;lsquo;2018-10-28 01:30:00&amp;rsquo;, &amp;hellip; &amp;lsquo;2018-10-28 02:00:00&amp;rsquo;, &amp;hellip; &amp;lsquo;2018-10-28 02:30:00&amp;rsquo;, &amp;hellip; &amp;lsquo;2018-10-28 02:00:00&amp;rsquo;, &amp;hellip; &amp;lsquo;2018-10-28 02:30:00&amp;rsquo;, &amp;hellip; &amp;lsquo;2018-10-28 03:00:00&amp;rsquo;, &amp;hellip; &amp;lsquo;2018-10-28 03:30:00&amp;rsquo;])) &amp;gt;&amp;gt;&amp;gt; s.dt.tz_localize(&amp;lsquo;CET&amp;rsquo;, ambiguous=&amp;rsquo;infer&amp;rsquo;) 0 2018-10-28 01:30:00+02:00 1 2018-10-28 02:00:00+02:00 2 2018-10-28 02:30:00+02:00 3 2018-10-28 02:00:00+01:00 4 2018-10-28 02:30:00+01:00 5 2018-10-28 03:00:00+01:00 6 2018-10-28 03:30:00+01:00 dtype: datetime64[ns, CET]</source>
          <target state="translated">请注意DST更改。当存在顺序数据时，熊猫可以推断DST时间：&amp;gt;&amp;gt;&amp;gt; s = pd.to_datetime（pd.Series（['2018-10-28 01:30:00'，&amp;hellip;'2018-10-28 02:00 ：00'，&amp;hellip;'2018-10-28 02:30:00'，&amp;hellip;'2018-10-28 02:00:00'，&amp;hellip;'2018-10-28 02:30:00'，&amp;hellip;'2018- 10-28 03:00:00'，&amp;hellip;'2018-10-28 03:30:00']））&amp;gt;&amp;gt;&amp;gt; s.dt.tz_localize（'CET'，ambiguous ='infer'）0 2018-10- 28 01：30：00 + 02：00 1 2018-10-28 02：00：00 + 02：00 2 2018-10-28 02：30：00 + 02：00 3 2018-10-28 02:00： 00 + 01：00 4 2018-10-28 02：30：00 + 01：00 5 2018-10-28 03：00：00 + 01：00 6 2018-10-28 03：30：00 + 01：00 dtype：datetime64 [ns，CET]</target>
        </trans-unit>
        <trans-unit id="58db1e11851338be7a4d027e56e98d5cc57c9067" translate="yes" xml:space="preserve">
          <source>Be wary of conversions between libraries. For some time zones, &lt;code&gt;pytz&lt;/code&gt; and &lt;code&gt;dateutil&lt;/code&gt; have different definitions of the zone. This is more of a problem for unusual time zones than for &amp;lsquo;standard&amp;rsquo; zones like &lt;code&gt;US/Eastern&lt;/code&gt;.</source>
          <target state="translated">注意库之间的转换。对于某些时区， &lt;code&gt;pytz&lt;/code&gt; 和 &lt;code&gt;dateutil&lt;/code&gt; 具有不同的时区定义。对于非常规时区，这比诸如 &lt;code&gt;US/Eastern&lt;/code&gt; 等&amp;ldquo;标准&amp;rdquo;时区的问题更大。</target>
        </trans-unit>
        <trans-unit id="4a19905d915137043f272861c345d80f174c78e3" translate="yes" xml:space="preserve">
          <source>BeautifulSoup4</source>
          <target state="translated">BeautifulSoup4</target>
        </trans-unit>
        <trans-unit id="9f4662d87df2abc23a25c610f754172cf495d7ae" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;../reference/api/pandas.dataframe.iterrows#pandas.DataFrame.iterrows&quot;&gt;&lt;code&gt;iterrows()&lt;/code&gt;&lt;/a&gt; returns a Series for each row, it does &lt;strong&gt;not&lt;/strong&gt; preserve dtypes across the rows (dtypes are preserved across columns for DataFrames). For example,</source>
          <target state="translated">由于&lt;a href=&quot;../reference/api/pandas.dataframe.iterrows#pandas.DataFrame.iterrows&quot;&gt; &lt;code&gt;iterrows()&lt;/code&gt; &lt;/a&gt;返回一个系列的每一行，它并&lt;strong&gt;不能&lt;/strong&gt;保护整个行（dtypes跨列保存DataFrames）dtypes。例如，</target>
        </trans-unit>
        <trans-unit id="d1042dd4f767980dc1d002d91a41345fc47dbb7f" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;NaN&lt;/code&gt; is a float, a column of integers with even one missing values is cast to floating-point dtype (see &lt;a href=&quot;gotchas#gotchas-intna&quot;&gt;Support for integer NA&lt;/a&gt; for more). pandas provides a nullable integer array, which can be used by explicitly requesting the dtype:</source>
          <target state="translated">由于 &lt;code&gt;NaN&lt;/code&gt; 是浮点型，因此一列甚至缺少一个整数的整数列都将转换为浮点dtype（有关更多信息，请参见&lt;a href=&quot;gotchas#gotchas-intna&quot;&gt;对整数NA的支持&lt;/a&gt;）。pandas提供了一个可为空的整数数组，可以通过显式请求dtype来使用它：</target>
        </trans-unit>
        <trans-unit id="20c07225f14069f78c80dd8e6e480f98340b6213" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;iterrows&lt;/code&gt; returns a Series for each row, it does &lt;strong&gt;not&lt;/strong&gt; preserve dtypes across the rows (dtypes are preserved across columns for DataFrames). For example,</source>
          <target state="translated">由于 &lt;code&gt;iterrows&lt;/code&gt; 返回一个系列的每一行，它并&lt;strong&gt;不能&lt;/strong&gt;保护整个行（dtypes跨列保存DataFrames）dtypes。例如，</target>
        </trans-unit>
        <trans-unit id="a4b8d32d305ca1701d9bf393afa8b228de7a11fb" translate="yes" xml:space="preserve">
          <source>Because ExtensionArrays are 1D-only, this is a no-op.</source>
          <target state="translated">因为ExtensionArrays是只有1D的,所以这是不可能的。</target>
        </trans-unit>
        <trans-unit id="da34c08f88e8bb6d6dba825fee707cc3cc84528b" translate="yes" xml:space="preserve">
          <source>Because omitting the &lt;code&gt;dtype&lt;/code&gt; passes the data through to NumPy, a mixture of valid integers and NA will return a floating-point NumPy array.</source>
          <target state="translated">因为省略 &lt;code&gt;dtype&lt;/code&gt; 会将数据传递到NumPy，所以有效整数和NA的混合将返回浮点NumPy数组。</target>
        </trans-unit>
        <trans-unit id="4e0bc695914dfd50c8501f182e22075a61d425d1" translate="yes" xml:space="preserve">
          <source>Because the data was transposed the original inference stored all columns as object, which &lt;code&gt;infer_objects&lt;/code&gt; will correct.</source>
          <target state="translated">由于数据已转置，因此原始推断会将所有列存储为对象，因此 &lt;code&gt;infer_objects&lt;/code&gt; 会更正。</target>
        </trans-unit>
        <trans-unit id="ac5077f353928aee605f29241e2959e3e7293833" translate="yes" xml:space="preserve">
          <source>Because the index is a DatetimeIndex containing only dates, we can specify</source>
          <target state="translated">因为索引是一个只包含日期的DatetimeIndex,所以我们可以指定为</target>
        </trans-unit>
        <trans-unit id="f8529ce360e280e7510f8bfd6a73f0bc83ec8ae3" translate="yes" xml:space="preserve">
          <source>Because the index is a DatetimeIndex containing only dates, we can specify &lt;code&gt;before&lt;/code&gt; and &lt;code&gt;after&lt;/code&gt; as strings. They will be coerced to Timestamps before truncation.</source>
          <target state="translated">由于索引是一个仅包含日期的DatetimeIndex，因此我们可以将 &lt;code&gt;before&lt;/code&gt; 和 &lt;code&gt;after&lt;/code&gt; 指定为字符串。截断之前，它们将被强制为时间戳。</target>
        </trans-unit>
        <trans-unit id="b01b17515dc52f74847508a603ccaec2dfadf041" translate="yes" xml:space="preserve">
          <source>Before diving into all of the details of &lt;code&gt;concat&lt;/code&gt; and what it can do, here is a simple example:</source>
          <target state="translated">在深入探讨 &lt;code&gt;concat&lt;/code&gt; 的所有细节及其功能之前，这里有一个简单的示例：</target>
        </trans-unit>
        <trans-unit id="153a641c2542da7e48abc89edc3bd3e5063b15b3" translate="yes" xml:space="preserve">
          <source>Before pandas 1.0, &lt;code&gt;is_copy=False&lt;/code&gt; can be specified to ensure that the return value is an actual copy. Starting with pandas 1.0, &lt;code&gt;take&lt;/code&gt; always returns a copy, and the keyword is therefore deprecated.</source>
          <target state="translated">在pandas 1.0之前，可以指定 &lt;code&gt;is_copy=False&lt;/code&gt; 来确保返回值是实际的副本。从pandas 1.0开始， &lt;code&gt;take&lt;/code&gt; 始终会返回一个副本，因此不推荐使用该关键字。</target>
        </trans-unit>
        <trans-unit id="1e1481b0cb125c9de57525bb947c3a764abdd36e" translate="yes" xml:space="preserve">
          <source>Before using this function you should read the &lt;a href=&quot;../../user_guide/io#io-html-gotchas&quot;&gt;gotchas about the HTML parsing libraries&lt;/a&gt;.</source>
          <target state="translated">在使用此功能之前，您应该阅读&lt;a href=&quot;../../user_guide/io#io-html-gotchas&quot;&gt;有关HTML解析库的注意事项&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bb2ac0d675c87749b474554bd1087435d5361ba9" translate="yes" xml:space="preserve">
          <source>Before v.0.25.0, the &lt;code&gt;.str&lt;/code&gt;-accessor did only the most rudimentary type checks. Starting with v.0.25.0, the type of the Series is inferred and the allowed types (i.e. strings) are enforced more rigorously.</source>
          <target state="translated">在v.0.25.0之前， &lt;code&gt;.str&lt;/code&gt; -accessor仅执行最基本的类型检查。从v.0.25.0开始，将推断Series的类型，并更加严格地实施允许的类型（即字符串）。</target>
        </trans-unit>
        <trans-unit id="a35f84fc6a9fcd04d72c7020c621717cf4019182" translate="yes" xml:space="preserve">
          <source>Before version 0.23, argument &lt;code&gt;expand&lt;/code&gt; of the &lt;code&gt;extract&lt;/code&gt; method defaulted to &lt;code&gt;False&lt;/code&gt;. When &lt;code&gt;expand=False&lt;/code&gt;, &lt;code&gt;expand&lt;/code&gt; returns a &lt;code&gt;Series&lt;/code&gt;, &lt;code&gt;Index&lt;/code&gt;, or &lt;code&gt;DataFrame&lt;/code&gt;, depending on the subject and regular expression pattern. When &lt;code&gt;expand=True&lt;/code&gt;, it always returns a &lt;code&gt;DataFrame&lt;/code&gt;, which is more consistent and less confusing from the perspective of a user. &lt;code&gt;expand=True&lt;/code&gt; has been the default since version 0.23.0.</source>
          <target state="translated">0.23版本之前，争论 &lt;code&gt;expand&lt;/code&gt; 了的 &lt;code&gt;extract&lt;/code&gt; 方法默认为 &lt;code&gt;False&lt;/code&gt; 。当 &lt;code&gt;expand=False&lt;/code&gt; 时， &lt;code&gt;expand&lt;/code&gt; 根据主题和正则表达式模式返回 &lt;code&gt;Series&lt;/code&gt; ， &lt;code&gt;Index&lt;/code&gt; 或 &lt;code&gt;DataFrame&lt;/code&gt; 。当 &lt;code&gt;expand=True&lt;/code&gt; 时，它总是返回一个 &lt;code&gt;DataFrame&lt;/code&gt; ，从用户的角度来看，它是一致的，并且不会造成混乱。 &lt;code&gt;expand=True&lt;/code&gt; 从0.23.0版开始一直是默认设置。</target>
        </trans-unit>
        <trans-unit id="9bf84f47df15deb65dcaafd22525ef7378d80e70" translate="yes" xml:space="preserve">
          <source>Behaves as: - If True, require an exact format match. - If False, allow the format to match anywhere in the target string.</source>
          <target state="translated">表现为。-如果为真,要求格式完全匹配。-如果为False,允许在目标字符串的任何地方匹配格式。</target>
        </trans-unit>
        <trans-unit id="70cb647a88bd7c9c17d225eecdaf0f898261eb60" translate="yes" xml:space="preserve">
          <source>Behavior</source>
          <target state="translated">Behavior</target>
        </trans-unit>
        <trans-unit id="82090dfb4fc1641294eee9c8ddecab5ba9801a25" translate="yes" xml:space="preserve">
          <source>Behavior differences</source>
          <target state="translated">行为差异</target>
        </trans-unit>
        <trans-unit id="db4c65748b6944dfc89514f39e7e98e06a479d32" translate="yes" xml:space="preserve">
          <source>Behavior when the destination table exists. Value can be one of:</source>
          <target state="translated">目标表存在时的行为。数值可以是以下之一:</target>
        </trans-unit>
        <trans-unit id="e6c851aee5fe7ddc9fd242b1d2822afd8878ea8a" translate="yes" xml:space="preserve">
          <source>Below example shows how to define &lt;code&gt;SubclassedSeries&lt;/code&gt; and &lt;code&gt;SubclassedDataFrame&lt;/code&gt; overriding constructor properties.</source>
          <target state="translated">下面的示例演示如何定义 &lt;code&gt;SubclassedSeries&lt;/code&gt; 和 &lt;code&gt;SubclassedDataFrame&lt;/code&gt; 重写构造方法的属性。</target>
        </trans-unit>
        <trans-unit id="bc49f7d0108cf1fbe93126c806a7158f864eb3d6" translate="yes" xml:space="preserve">
          <source>Below is an example to define two original properties, &amp;ldquo;internal_cache&amp;rdquo; as a temporary property and &amp;ldquo;added_property&amp;rdquo; as a normal property</source>
          <target state="translated">下面是一个示例，用于定义两个原始属性，&amp;ldquo; internal_cache&amp;rdquo;作为临时属性，&amp;ldquo; addded_property&amp;rdquo;作为普通属性。</target>
        </trans-unit>
        <trans-unit id="e208bacb95e673417dac4953f6472677a8a1353e" translate="yes" xml:space="preserve">
          <source>Below is how to check if any of the values are &lt;code&gt;True&lt;/code&gt;:</source>
          <target state="translated">以下是检查任何值是否为 &lt;code&gt;True&lt;/code&gt; 的方法：</target>
        </trans-unit>
        <trans-unit id="927f40673764a27aad14fdedb385b31e3b85f976" translate="yes" xml:space="preserve">
          <source>Benefits</source>
          <target state="translated">Benefits</target>
        </trans-unit>
        <trans-unit id="393380ba1b2d97ae4342d1060cbda9fbc5d3c930" translate="yes" xml:space="preserve">
          <source>Bessel-corrected sample standard deviation</source>
          <target state="translated">贝塞尔校正的样本标准差</target>
        </trans-unit>
        <trans-unit id="2f5e512689d17eec8a59585a209e27e15d5fa7a8" translate="yes" xml:space="preserve">
          <source>Between times</source>
          <target state="translated">间隔时间</target>
        </trans-unit>
        <trans-unit id="ce35bc7834efceacada59a786825d7601c4db1b9" translate="yes" xml:space="preserve">
          <source>Bin values into discrete Intervals.</source>
          <target state="translated">将Bin值转换成离散的Intervals。</target>
        </trans-unit>
        <trans-unit id="5fc72aee41d01d45074eb0aa2e60d41ee3b83f12" translate="yes" xml:space="preserve">
          <source>Bin values into discrete intervals.</source>
          <target state="translated">Bin值成离散区间。</target>
        </trans-unit>
        <trans-unit id="eb3efbb2538732c7feb15bf3f60103e13f5819df" translate="yes" xml:space="preserve">
          <source>Bin values into equal-sized Intervals based on rank or sample quantiles.</source>
          <target state="translated">根据等级或样本量子化,将二进制值分成大小相等的区间。</target>
        </trans-unit>
        <trans-unit id="bf6c804967fb499c1c2a2b6edac39c7bfdb99cf2" translate="yes" xml:space="preserve">
          <source>Binary Excel (.xlsb) files</source>
          <target state="translated">二进制Excel(.xlsb)文件</target>
        </trans-unit>
        <trans-unit id="b158e20cafda564c944efe4e0262efb8cfc4b061" translate="yes" xml:space="preserve">
          <source>Binary files</source>
          <target state="translated">二进制文件</target>
        </trans-unit>
        <trans-unit id="3163bc413c6b649c8e32b9e7f1fb4a061ece9765" translate="yes" xml:space="preserve">
          <source>Binary operator functions</source>
          <target state="translated">二进制运算函数</target>
        </trans-unit>
        <trans-unit id="9cc1259e21c7e613999e790394c5c675e22538ae" translate="yes" xml:space="preserve">
          <source>Binary search is used to find the required insertion points.</source>
          <target state="translated">二元搜索是用来寻找所需的插入点。</target>
        </trans-unit>
        <trans-unit id="731725be9a708f2dd8d88373e360244813375620" translate="yes" xml:space="preserve">
          <source>Binary window functions</source>
          <target state="translated">二进制窗口功能</target>
        </trans-unit>
        <trans-unit id="c9e1a09d406049febfd861d17f5097dda4f8c03b" translate="yes" xml:space="preserve">
          <source>Binning data with &lt;code&gt;cut&lt;/code&gt; and &lt;code&gt;qcut&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;cut&lt;/code&gt; 和 &lt;code&gt;qcut&lt;/code&gt; 合并数据</target>
        </trans-unit>
        <trans-unit id="11f1cd67b59bf69c00a10d87943ca16817ce1b09" translate="yes" xml:space="preserve">
          <source>Binning data with cut and qcut</source>
          <target state="translated">用cut和qcut对数据进行分选</target>
        </trans-unit>
        <trans-unit id="7bde31cfca8ba562bc619cff686e2f052166fa00" translate="yes" xml:space="preserve">
          <source>Bins can be useful for going from a continuous variable to a categorical variable; instead of counting unique apparitions of values, divide the index in the specified number of half-open bins.</source>
          <target state="translated">Bins对于从一个连续变量到一个分类变量是很有用的;与其计算值的唯一出现,不如将指数划分在指定数量的半开仓中。</target>
        </trans-unit>
        <trans-unit id="b5af53214ca580337a00a6300345b0638be77215" translate="yes" xml:space="preserve">
          <source>Bitwise boolean</source>
          <target state="translated">位向布尔运算</target>
        </trans-unit>
        <trans-unit id="629e494c30e6f07e4716e2a084a5ec889bc9614e" translate="yes" xml:space="preserve">
          <source>Bitwise boolean operators like &lt;code&gt;==&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt; return a boolean &lt;code&gt;Series&lt;/code&gt;, which is almost always what you want anyways.</source>
          <target state="translated">像 &lt;code&gt;==&lt;/code&gt; 和 &lt;code&gt;!=&lt;/code&gt; 这样的按位布尔运算符会返回一个boolean &lt;code&gt;Series&lt;/code&gt; ，无论如何这几乎总是您想要的。</target>
        </trans-unit>
        <trans-unit id="ba6f603187f9f3e8876cd6b02ae3fca1ecc04c02" translate="yes" xml:space="preserve">
          <source>Blank cells include &lt;code&gt;blank&lt;/code&gt;</source>
          <target state="translated">空白单元格包括 &lt;code&gt;blank&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7ff440de8d23dfe665747a8cf3c9d62a3d1cf5ab" translate="yes" xml:space="preserve">
          <source>Blaze</source>
          <target state="translated">Blaze</target>
        </trans-unit>
        <trans-unit id="f06b7ff8dcee65d80f8bbc09f77519581c47c993" translate="yes" xml:space="preserve">
          <source>Blaze provides a standard API for doing computations with various in-memory and on-disk backends: NumPy, Pandas, SQLAlchemy, MongoDB, PyTables, PySpark.</source>
          <target state="translated">Blaze提供了一个标准的API,用于与各种内存和磁盘后端进行计算。NumPy,Pandas,SQLAlchemy,MongoDB,PyTables,PySpark。</target>
        </trans-unit>
        <trans-unit id="287774ec74cb6ddd4c419e7e15e9549f8e939989" translate="yes" xml:space="preserve">
          <source>Bokeh</source>
          <target state="translated">Bokeh</target>
        </trans-unit>
        <trans-unit id="80be675605bee4cb1ede9f567737e75867600672" translate="yes" xml:space="preserve">
          <source>Bokeh is a Python interactive visualization library for large datasets that natively uses the latest web technologies. Its goal is to provide elegant, concise construction of novel graphics in the style of Protovis/D3, while delivering high-performance interactivity over large data to thin clients.</source>
          <target state="translated">Bokeh是一个针对大型数据集的Python交互式可视化库,本机使用最新的网络技术。它的目标是以Protovis/D3的风格提供优雅、简洁的新颖图形结构,同时为瘦客户机提供大型数据的高性能交互性。</target>
        </trans-unit>
        <trans-unit id="a1a388e5090762aabac29940c81a256956fabc28" translate="yes" xml:space="preserve">
          <source>Boolean (with NA)</source>
          <target state="translated">布尔型(含NA)</target>
        </trans-unit>
        <trans-unit id="0dc421fcf453e80e2d84d33be1e5cac7ba51a33b" translate="yes" xml:space="preserve">
          <source>Boolean array positionally indicating where an overlap occurs.</source>
          <target state="translated">表示重叠位置的布尔数组。</target>
        </trans-unit>
        <trans-unit id="022b0ef129359bf4caefd05760bd350781ea6b2d" translate="yes" xml:space="preserve">
          <source>Boolean array to indicate which entries are not NA.</source>
          <target state="translated">布尔型数组,用于指示哪些条目不是NA。</target>
        </trans-unit>
        <trans-unit id="230d00294c22689962b1eba4502cf89c2732588c" translate="yes" xml:space="preserve">
          <source>Boolean data with missing values</source>
          <target state="translated">有缺失值的布尔数据</target>
        </trans-unit>
        <trans-unit id="68f3f11169411d53479639d67be61b5695cbb223" translate="yes" xml:space="preserve">
          <source>Boolean expressions consisting of only scalar values</source>
          <target state="translated">仅由标量值组成的布尔表达式。</target>
        </trans-unit>
        <trans-unit id="5c3a6c6f975fa74c13e061d4b56deac14c441f61" translate="yes" xml:space="preserve">
          <source>Boolean indexing</source>
          <target state="translated">布尔型索引</target>
        </trans-unit>
        <trans-unit id="dd9fff177f12842df4a793f24f32ba72815be25c" translate="yes" xml:space="preserve">
          <source>Boolean indicating if the IntervalIndex has overlapping intervals.</source>
          <target state="translated">表示IntervalIndex是否有重叠区间的布尔值。</target>
        </trans-unit>
        <trans-unit id="63f993a6d07b9658cc8fb2e02056076e92256399" translate="yes" xml:space="preserve">
          <source>Boolean indicator if the date belongs to a leap year.</source>
          <target state="translated">是否属于闰年的布尔指标。</target>
        </trans-unit>
        <trans-unit id="9d3bf18ce8c74ccadc928fc2d17fa77a03e0d0f7" translate="yes" xml:space="preserve">
          <source>Boolean inverse of isna.</source>
          <target state="translated">isna的布尔逆运算。</target>
        </trans-unit>
        <trans-unit id="8638002de3c20d4f7f02ef7937511690e4972eaf" translate="yes" xml:space="preserve">
          <source>Boolean inverse of notna.</source>
          <target state="translated">notna的布尔逆运算。</target>
        </trans-unit>
        <trans-unit id="16f1251288c90060da992539978775155b522ef0" translate="yes" xml:space="preserve">
          <source>Boolean inverse of pandas.isna.</source>
          <target state="translated">pandas.isna.Boolean反演。</target>
        </trans-unit>
        <trans-unit id="2c16ad7d9b91e2596bbc6b8ad524438b9b4c3961" translate="yes" xml:space="preserve">
          <source>Boolean inverse of pandas.notna.</source>
          <target state="translated">pandas.notna.Boolean反演。</target>
        </trans-unit>
        <trans-unit id="25e990b4649c2bc674f3ef76c7ea016d66a37722" translate="yes" xml:space="preserve">
          <source>Boolean list with the same length as the row axis</source>
          <target state="translated">布尔型列表,长度与行轴相同。</target>
        </trans-unit>
        <trans-unit id="a54f3fd197821f35d7cc4ec8c59ac98fe9d5c879" translate="yes" xml:space="preserve">
          <source>Boolean operations, e.g., &lt;code&gt;df &amp;lt; df2 and df3 &amp;lt; df4 or not df_bool&lt;/code&gt;</source>
          <target state="translated">布尔运算，例如 &lt;code&gt;df &amp;lt; df2 and df3 &amp;lt; df4 or not df_bool&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="02774d2bd49b309c70bcbf1cd2d7f51fdc3d2b2f" translate="yes" xml:space="preserve">
          <source>Boolean operators</source>
          <target state="translated">布尔运算符</target>
        </trans-unit>
        <trans-unit id="4e25cb936a813ba1158c4bece9543c9832c1230c" translate="yes" xml:space="preserve">
          <source>Boolean operators work as well:</source>
          <target state="translated">布尔运算符也可以使用。</target>
        </trans-unit>
        <trans-unit id="e8da9fdbd15b51adf76743209e5552d483d7a70d" translate="yes" xml:space="preserve">
          <source>Boolean reductions</source>
          <target state="translated">布尔还原</target>
        </trans-unit>
        <trans-unit id="d88eb78a78682585d0f6340eef365f08c7cda023" translate="yes" xml:space="preserve">
          <source>Boolean same-sized DataFrame showing places of NA elements.</source>
          <target state="translated">布尔型相同大小的DataFrame,显示NA元素的位置。</target>
        </trans-unit>
        <trans-unit id="228ee98f1665841fa8c54953f1a8a18247fd14e7" translate="yes" xml:space="preserve">
          <source>Boolean series for each duplicated rows.</source>
          <target state="translated">每个重复行的布尔系列。</target>
        </trans-unit>
        <trans-unit id="7133f12719661511054ab5e011b7efd42eff73c9" translate="yes" xml:space="preserve">
          <source>Boolean values</source>
          <target state="translated">布尔值</target>
        </trans-unit>
        <trans-unit id="f76f02336bf20b6f10d78001acc5acd0c87c9a72" translate="yes" xml:space="preserve">
          <source>Boolean: &lt;code&gt;'bool'&lt;/code&gt;</source>
          <target state="translated">布尔值： &lt;code&gt;'bool'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="61a088b0a156000801673ebe9758a3bc5e658a93" translate="yes" xml:space="preserve">
          <source>BooleanArray</source>
          <target state="translated">BooleanArray</target>
        </trans-unit>
        <trans-unit id="05be1cb89b188dd2668d313dc51362c7f07a69a4" translate="yes" xml:space="preserve">
          <source>BooleanArray implements Kleene logic (sometimes called three-value logic) for logical operations. See &lt;a href=&quot;../../user_guide/boolean#boolean-kleene&quot;&gt;Kleene logical operations&lt;/a&gt; for more.</source>
          <target state="translated">BooleanArray为逻辑运算实现Kleene逻辑（有时称为三值逻辑）。有关更多信息，请参见&lt;a href=&quot;../../user_guide/boolean#boolean-kleene&quot;&gt;Kleene逻辑运算&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fa24dfeb25a69f55e548d2d8a1d8b0fe1b9ed5b4" translate="yes" xml:space="preserve">
          <source>BooleanArray is considered experimental. The implementation and parts of the API may change without warning.</source>
          <target state="translated">BooleanArray被认为是实验性的。API的实现和部分内容可能会在没有警告的情况下发生变化。</target>
        </trans-unit>
        <trans-unit id="271e1728a4a5bbee1748a53bab0124ec76c5c451" translate="yes" xml:space="preserve">
          <source>BooleanDtype is considered experimental. The implementation and parts of the API may change without warning.</source>
          <target state="translated">BooleanDtype被认为是实验性的。API的实现和部分内容可能会在没有警告的情况下发生变化。</target>
        </trans-unit>
        <trans-unit id="6e8612ea969d1680a44a840e85c8e565c3ef8c43" translate="yes" xml:space="preserve">
          <source>Booleans are valid because they are int subclass.</source>
          <target state="translated">布尔运算是有效的,因为它们是int子类。</target>
        </trans-unit>
        <trans-unit id="5281b317ab6c3d15d836edf8a074eccb13a73c2b" translate="yes" xml:space="preserve">
          <source>Booleans indicating if dates belong to a leap year.</source>
          <target state="translated">表示日期是否属于闰年的布尔符。</target>
        </trans-unit>
        <trans-unit id="606e5cb4e58c7fa936ef9764e276cb734d04557e" translate="yes" xml:space="preserve">
          <source>Bootstrap Plot</source>
          <target state="translated">Bootstrap Plot</target>
        </trans-unit>
        <trans-unit id="edc4932a1f6f98b2ad009919062747c48d2e8738" translate="yes" xml:space="preserve">
          <source>Bootstrap plot</source>
          <target state="translated">引导图</target>
        </trans-unit>
        <trans-unit id="5a6577311d3635f544049b00b0211bbe161a25cb" translate="yes" xml:space="preserve">
          <source>Bootstrap plot on mean, median and mid-range statistics.</source>
          <target state="translated">平均数、中位数和中位数统计的引导图。</target>
        </trans-unit>
        <trans-unit id="51d7eabb0471ca5a5aa4668b09430d346cd8cda9" translate="yes" xml:space="preserve">
          <source>Bootstrap plots are used to visually assess the uncertainty of a statistic, such as mean, median, midrange, etc. A random subset of a specified size is selected from a data set, the statistic in question is computed for this subset and the process is repeated a specified number of times. Resulting plots and histograms are what constitutes the bootstrap plot.</source>
          <target state="translated">Bootstrap图用于直观地评估一个统计量的不确定性,如平均值、中位数、中值等。从一个数据集中选取一个指定大小的随机子集,计算这个子集的统计量,然后重复这个过程指定次数。结果图和直方图就是构成引导图。</target>
        </trans-unit>
        <trans-unit id="12cfcb28f21f551a1d596a8c9a1fead955dc64ca" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;Styler.apply&lt;/code&gt;, and &lt;code&gt;Styler.applymap&lt;/code&gt; accept a &lt;code&gt;subset&lt;/code&gt; keyword. This allows you to apply styles to specific rows or columns, without having to code that logic into your &lt;code&gt;style&lt;/code&gt; function.</source>
          <target state="translated">无论 &lt;code&gt;Styler.apply&lt;/code&gt; 和 &lt;code&gt;Styler.applymap&lt;/code&gt; 接受一个 &lt;code&gt;subset&lt;/code&gt; 的关键字。这使您可以将样式应用于特定的行或列，而不必将该逻辑编码到 &lt;code&gt;style&lt;/code&gt; 函数中。</target>
        </trans-unit>
        <trans-unit id="3cd3bdfe2b1dc36f3ce79debd7bbbf68aaa6c834" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;rename&lt;/code&gt; and &lt;code&gt;rename_axis&lt;/code&gt; support specifying a dictionary, &lt;code&gt;Series&lt;/code&gt; or a mapping function to map labels/names to new values.</source>
          <target state="translated">无论 &lt;code&gt;rename&lt;/code&gt; 和 &lt;code&gt;rename_axis&lt;/code&gt; 支持指定字典， &lt;code&gt;Series&lt;/code&gt; 或映射函数映射标签/名称为新值。</target>
        </trans-unit>
        <trans-unit id="667f44ad700147f40dc1bb44b2965c5c43206240" translate="yes" xml:space="preserve">
          <source>Both DataFrames must be sorted by the key.</source>
          <target state="translated">两个DataFrames必须按键排序。</target>
        </trans-unit>
        <trans-unit id="66bb145eb5891dc142843d18eaca9d3ef1f32bb9" translate="yes" xml:space="preserve">
          <source>Both NA and null values are automatically excluded from the calculation. (See the note below about bias from missing values.) A threshold can be set for the minimum number of observations for each value created. Comparisons with observations below this threshold will be returned as &lt;code&gt;NaN&lt;/code&gt;.</source>
          <target state="translated">NA和null值都会自动从计算中排除。 （请参阅以下有关缺失值偏差的注释。）可以为创建的每个值的最小观察次数设置阈值。与低于此阈值的观测值的比较将返回为 &lt;code&gt;NaN&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bb68bff5a80fa34bfffc6e32034333c4baa9edc6" translate="yes" xml:space="preserve">
          <source>Both Neg and Pos</source>
          <target state="translated">负数和正数</target>
        </trans-unit>
        <trans-unit id="f2fa5830ecadde34b34fbf3e55d0efb29828f1f2" translate="yes" xml:space="preserve">
          <source>Both Series and DataFrame objects have &lt;a href=&quot;../reference/api/pandas.dataframe.interpolate#pandas.DataFrame.interpolate&quot;&gt;&lt;code&gt;interpolate()&lt;/code&gt;&lt;/a&gt; that, by default, performs linear interpolation at missing data points.</source>
          <target state="translated">Series和DataFrame对象都具有&lt;a href=&quot;../reference/api/pandas.dataframe.interpolate#pandas.DataFrame.interpolate&quot;&gt; &lt;code&gt;interpolate()&lt;/code&gt; &lt;/a&gt;，默认情况下，该interpolate（）在丢失的数据点上执行线性插值。</target>
        </trans-unit>
        <trans-unit id="b21d8fbefafd41cf1c54d1572767377c17367ed7" translate="yes" xml:space="preserve">
          <source>Both of these &lt;a href=&quot;../reference/api/pandas.series#pandas.Series&quot;&gt;&lt;code&gt;Series&lt;/code&gt;&lt;/a&gt; time zone information can be manipulated via the &lt;code&gt;.dt&lt;/code&gt; accessor, see &lt;a href=&quot;basics#basics-dt-accessors&quot;&gt;the dt accessor section&lt;/a&gt;.</source>
          <target state="translated">这两个&lt;a href=&quot;../reference/api/pandas.series#pandas.Series&quot;&gt; &lt;code&gt;Series&lt;/code&gt; &lt;/a&gt;时区信息都可以通过 &lt;code&gt;.dt&lt;/code&gt; 访问器进行操作，请参见&lt;a href=&quot;basics#basics-dt-accessors&quot;&gt;dt访问器部分&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c5564daf8202c5e95c5a63616639ee79fba95d94" translate="yes" xml:space="preserve">
          <source>Both of those methods take a function (and some other keyword arguments) and applies your function to the DataFrame in a certain way. &lt;code&gt;Styler.applymap&lt;/code&gt; works through the DataFrame elementwise. &lt;code&gt;Styler.apply&lt;/code&gt; passes each column or row into your DataFrame one-at-a-time or the entire table at once, depending on the &lt;code&gt;axis&lt;/code&gt; keyword argument. For columnwise use &lt;code&gt;axis=0&lt;/code&gt;, rowwise use &lt;code&gt;axis=1&lt;/code&gt;, and for the entire table at once use &lt;code&gt;axis=None&lt;/code&gt;.</source>
          <target state="translated">这两个方法都使用一个函数（和一些其他关键字参数），并以某种方式将您的函数应用于DataFrame。 &lt;code&gt;Styler.applymap&lt;/code&gt; 通过DataFrame逐个元素地工作。 &lt;code&gt;Styler.apply&lt;/code&gt; 一次将每一列或每一行或一次一次将整个表传递到DataFrame中，具体取决于 &lt;code&gt;axis&lt;/code&gt; 关键字参数。对于按列使用 &lt;code&gt;axis=0&lt;/code&gt; ，按行使用 &lt;code&gt;axis=1&lt;/code&gt; ，对于整个表一次使用 &lt;code&gt;axis=None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="094ce0a835bcefce0415c862ffaf4ef5dc96b12f" translate="yes" xml:space="preserve">
          <source>Both outputs are &lt;code&gt;Int64&lt;/code&gt; dtype. Compare that with object-dtype</source>
          <target state="translated">两个输出均为 &lt;code&gt;Int64&lt;/code&gt; dtype。与object-dtype进行比较</target>
        </trans-unit>
        <trans-unit id="4b2296cefe9f0809fb53daac12fd608a8f64778f" translate="yes" xml:space="preserve">
          <source>Boundary values are included by default:</source>
          <target state="translated">默认情况下包括边界值。</target>
        </trans-unit>
        <trans-unit id="239ca5767afac9641593464ce02bc454d6ac07a9" translate="yes" xml:space="preserve">
          <source>Box</source>
          <target state="translated">Box</target>
        </trans-unit>
        <trans-unit id="d28c42106d6177d86bc2d2d91b4a0ff246b514e9" translate="yes" xml:space="preserve">
          <source>Box plots</source>
          <target state="translated">方块图</target>
        </trans-unit>
        <trans-unit id="3002a33c57607a53f08319e550edde845407d477" translate="yes" xml:space="preserve">
          <source>Boxplot can be colorized by passing &lt;code&gt;color&lt;/code&gt; keyword. You can pass a &lt;code&gt;dict&lt;/code&gt; whose keys are &lt;code&gt;boxes&lt;/code&gt;, &lt;code&gt;whiskers&lt;/code&gt;, &lt;code&gt;medians&lt;/code&gt; and &lt;code&gt;caps&lt;/code&gt;. If some keys are missing in the &lt;code&gt;dict&lt;/code&gt;, default colors are used for the corresponding artists. Also, boxplot has &lt;code&gt;sym&lt;/code&gt; keyword to specify fliers style.</source>
          <target state="translated">可以通过传递 &lt;code&gt;color&lt;/code&gt; 关键字来对Boxplot进行着色。您可以传递其格为 &lt;code&gt;boxes&lt;/code&gt; ， &lt;code&gt;whiskers&lt;/code&gt; ， &lt;code&gt;medians&lt;/code&gt; 和 &lt;code&gt;caps&lt;/code&gt; 的 &lt;code&gt;dict&lt;/code&gt; 。如果 &lt;code&gt;dict&lt;/code&gt; 中缺少某些键，则默认颜色用于相应的艺术家。此外，boxplot具有 &lt;code&gt;sym&lt;/code&gt; 关键字以指定传单样式。</target>
        </trans-unit>
        <trans-unit id="920fff947e3d237d1d68f0869033126af863a7f4" translate="yes" xml:space="preserve">
          <source>Boxplot can be drawn calling &lt;a href=&quot;../reference/api/pandas.series.plot.box#pandas.Series.plot.box&quot;&gt;&lt;code&gt;Series.plot.box()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../reference/api/pandas.dataframe.plot.box#pandas.DataFrame.plot.box&quot;&gt;&lt;code&gt;DataFrame.plot.box()&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../reference/api/pandas.dataframe.boxplot#pandas.DataFrame.boxplot&quot;&gt;&lt;code&gt;DataFrame.boxplot()&lt;/code&gt;&lt;/a&gt; to visualize the distribution of values within each column.</source>
          <target state="translated">可以通过调用&lt;a href=&quot;../reference/api/pandas.series.plot.box#pandas.Series.plot.box&quot;&gt; &lt;code&gt;Series.plot.box()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../reference/api/pandas.dataframe.plot.box#pandas.DataFrame.plot.box&quot;&gt; &lt;code&gt;DataFrame.plot.box()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../reference/api/pandas.dataframe.boxplot#pandas.DataFrame.boxplot&quot;&gt; &lt;code&gt;DataFrame.boxplot()&lt;/code&gt; &lt;/a&gt;来绘制Boxplot，以可视化每个列中值的分布。</target>
        </trans-unit>
        <trans-unit id="7e7f4106e6dc74b912bc74594b8d321fda3eee18" translate="yes" xml:space="preserve">
          <source>Boxplot for each quartile of a stratifying variable</source>
          <target state="translated">分层变量的每个四分位数的博平图</target>
        </trans-unit>
        <trans-unit id="dcb04674c1bc1045c67626e52198999ae63da9e0" translate="yes" xml:space="preserve">
          <source>Boxplots can be created for every column in the dataframe by &lt;code&gt;df.boxplot()&lt;/code&gt; or indicating the columns to be used:</source>
          <target state="translated">可以通过 &lt;code&gt;df.boxplot()&lt;/code&gt; 或指示要使用的列来为数据框中的每一列创建框线图：</target>
        </trans-unit>
        <trans-unit id="9c8ffe321aef10292008ce1489645fe86a84dc1e" translate="yes" xml:space="preserve">
          <source>Boxplots of variables distributions grouped by the values of a third variable can be created using the option &lt;code&gt;by&lt;/code&gt;. For instance:</source>
          <target state="translated">由第三变量的值进行分组变量分布的箱线图可以使用选项来创建 &lt;code&gt;by&lt;/code&gt; 。例如：</target>
        </trans-unit>
        <trans-unit id="29bb000243f005695909b0543b224a3db4e225d3" translate="yes" xml:space="preserve">
          <source>Brief primer on merge methods (relational algebra)</source>
          <target state="translated">简要介绍合并方法(关系代数)。</target>
        </trans-unit>
        <trans-unit id="52308f11211dd1ac661d43cfae2dc5cd35a8edc8" translate="yes" xml:space="preserve">
          <source>Broadcast across a level, matching Index values on the passed MultiIndex level</source>
          <target state="translated">在一个级别上进行广播,匹配通过的MultiIndex级别上的Index值。</target>
        </trans-unit>
        <trans-unit id="6e9ffc843b10d93241eaefde5b3725754f1680e5" translate="yes" xml:space="preserve">
          <source>Broadcast across a level, matching Index values on the passed MultiIndex level.</source>
          <target state="translated">在一个级别上进行广播,匹配通过的MultiIndex级别上的Index值。</target>
        </trans-unit>
        <trans-unit id="47550322284ff870e2b13609f5cf42fa9c88240f" translate="yes" xml:space="preserve">
          <source>Broadcast result of the transformation</source>
          <target state="translated">广播改造结果</target>
        </trans-unit>
        <trans-unit id="3ce9e4479d8cdea2aa38baf1a05a1b5769573c13" translate="yes" xml:space="preserve">
          <source>Broadcast values along this axis, if aligning two objects of different dimensions</source>
          <target state="translated">如果对准两个不同维度的对象,则沿此轴播报数值。</target>
        </trans-unit>
        <trans-unit id="7a789df99e8663d910cb24e375f9d4e96df36574" translate="yes" xml:space="preserve">
          <source>Broadcast values along this axis, if aligning two objects of different dimensions.</source>
          <target state="translated">如果将两个不同维度的对象对齐,则沿此轴广播值。</target>
        </trans-unit>
        <trans-unit id="2041dad0385130472aa38e9a5731188d130d6c64" translate="yes" xml:space="preserve">
          <source>Broadcasting behavior between higher- (e.g. DataFrame) and lower-dimensional (e.g. Series) objects.</source>
          <target state="translated">高维(如DataFrame)和低维(如Series)对象之间的广播行为。</target>
        </trans-unit>
        <trans-unit id="29a1d2a406525265da4b4a94b199835b01e2c242" translate="yes" xml:space="preserve">
          <source>Buffer to write to.</source>
          <target state="translated">要写入的缓冲区。</target>
        </trans-unit>
        <trans-unit id="df097c1839d8f2d1d0b45b61a1fad63542067dab" translate="yes" xml:space="preserve">
          <source>Buffer to write to. If None, the output is returned as a string.</source>
          <target state="translated">要写入的缓冲区。如果为None,则输出以字符串形式返回。</target>
        </trans-unit>
        <trans-unit id="368d060d1a46cde86273301cc77625cef0c36051" translate="yes" xml:space="preserve">
          <source>Bug report function</source>
          <target state="translated">错误报告功能</target>
        </trans-unit>
        <trans-unit id="c35d94d9fb34f3e421990757c2e9c3f3810b2803" translate="yes" xml:space="preserve">
          <source>Bug reports and enhancement requests</source>
          <target state="translated">错误报告和改进要求</target>
        </trans-unit>
        <trans-unit id="a4ab496194272dfc9dfa8b272a6e165f5f1e010c" translate="yes" xml:space="preserve">
          <source>Bug reports are an important part of making &lt;em&gt;pandas&lt;/em&gt; more stable. Having a complete bug report will allow others to reproduce the bug and provide insight into fixing. See &lt;a href=&quot;https://stackoverflow.com/help/mcve&quot;&gt;this stackoverflow article&lt;/a&gt; and &lt;a href=&quot;http://matthewrocklin.com/blog/work/2018/02/28/minimal-bug-reports&quot;&gt;this blogpost&lt;/a&gt; for tips on writing a good bug report.</source>
          <target state="translated">错误报告是使&lt;em&gt;熊猫&lt;/em&gt;更稳定的重要组成部分。拥有完整的错误报告将使其他人能够重现该错误并提供修复见解。请参阅&lt;a href=&quot;https://stackoverflow.com/help/mcve&quot;&gt;此stackoverflow文章&lt;/a&gt;和&lt;a href=&quot;http://matthewrocklin.com/blog/work/2018/02/28/minimal-bug-reports&quot;&gt;此博客&lt;/a&gt;文章，以获取有关编写良好的错误报告的提示。</target>
        </trans-unit>
        <trans-unit id="d6ffb54583c93a5c37eed48b29b14791e00518de" translate="yes" xml:space="preserve">
          <source>Bug reports must:</source>
          <target state="translated">错误报告必须。</target>
        </trans-unit>
        <trans-unit id="6939921e7058714b7d7daabe0956cc9c18239021" translate="yes" xml:space="preserve">
          <source>Build and install pandas</source>
          <target state="translated">建立和安装pandas</target>
        </trans-unit>
        <trans-unit id="a83219ecb58983f691ff0da5e97811189739c34e" translate="yes" xml:space="preserve">
          <source>Building Styles Summary</source>
          <target state="translated">建筑风格总结</target>
        </trans-unit>
        <trans-unit id="777f0cff593e574750b2f25949f15eaad9886ef9" translate="yes" xml:space="preserve">
          <source>Building criteria</source>
          <target state="translated">建筑标准</target>
        </trans-unit>
        <trans-unit id="233e4088744766fe25ce63da13f185d5e74832f9" translate="yes" xml:space="preserve">
          <source>Building master branch documentation</source>
          <target state="translated">建立主部门文件</target>
        </trans-unit>
        <trans-unit id="0ce9c4f324a40b6546390a83b25a305089ac3db2" translate="yes" xml:space="preserve">
          <source>Building styles</source>
          <target state="translated">建筑风格</target>
        </trans-unit>
        <trans-unit id="ac827cc13e078ada5ddfe46b0f806978b51bf586" translate="yes" xml:space="preserve">
          <source>Building the documentation</source>
          <target state="translated">建立文件</target>
        </trans-unit>
        <trans-unit id="9bd4120957934bd2a1de97a101b5f591bc61c7ce" translate="yes" xml:space="preserve">
          <source>Builtin style functions: style functions that are methods on &lt;code&gt;Styler&lt;/code&gt;</source>
          <target state="translated">内置样式函数：作为 &lt;code&gt;Styler&lt;/code&gt; 上方法的样式函数</target>
        </trans-unit>
        <trans-unit id="3d96d520546578343b9168251f31f50b6c392165" translate="yes" xml:space="preserve">
          <source>Builtin styles</source>
          <target state="translated">内置样式</target>
        </trans-unit>
        <trans-unit id="872e64e0d2d23fe2d59d73039387e3838ab9313c" translate="yes" xml:space="preserve">
          <source>Business hour</source>
          <target state="translated">工作时间</target>
        </trans-unit>
        <trans-unit id="935629b390eec3d2484049f90b0b65397dde0244" translate="yes" xml:space="preserve">
          <source>BusinessDay</source>
          <target state="translated">BusinessDay</target>
        </trans-unit>
        <trans-unit id="1783f25a9f385e15220ea7c4ec375b1b0b91a708" translate="yes" xml:space="preserve">
          <source>BusinessDay.apply()</source>
          <target state="translated">BusinessDay.apply()</target>
        </trans-unit>
        <trans-unit id="cc63930cda9d999809d2d02fa1a100e7f64a401d" translate="yes" xml:space="preserve">
          <source>BusinessDay.apply_index()</source>
          <target state="translated">BusinessDay.apply_index()</target>
        </trans-unit>
        <trans-unit id="0b89f384e1789d3fda45ddde884a48b6a7c6b4f8" translate="yes" xml:space="preserve">
          <source>BusinessDay.base</source>
          <target state="translated">BusinessDay.base</target>
        </trans-unit>
        <trans-unit id="ea3d018a7f06b4daa4abaa96b48ff750d2a7a3c9" translate="yes" xml:space="preserve">
          <source>BusinessDay.copy()</source>
          <target state="translated">BusinessDay.copy()</target>
        </trans-unit>
        <trans-unit id="5765617819c468117ed6b34269d06090100ed6ce" translate="yes" xml:space="preserve">
          <source>BusinessDay.freqstr</source>
          <target state="translated">BusinessDay.freqstr</target>
        </trans-unit>
        <trans-unit id="70dae1ab2ec500b06ab4ac87d9b906080e29be98" translate="yes" xml:space="preserve">
          <source>BusinessDay.isAnchored()</source>
          <target state="translated">BusinessDay.isAnchored()</target>
        </trans-unit>
        <trans-unit id="c9ec9551d3161fc8818424138a3c3853db6b919a" translate="yes" xml:space="preserve">
          <source>BusinessDay.kwds</source>
          <target state="translated">BusinessDay.kwds</target>
        </trans-unit>
        <trans-unit id="ab5f2d3898ff7d52d978faa9bb68d9c57fd241da" translate="yes" xml:space="preserve">
          <source>BusinessDay.name</source>
          <target state="translated">BusinessDay.name</target>
        </trans-unit>
        <trans-unit id="972d6b2a3fc2cd3c032fa77e87eba0600ee55ded" translate="yes" xml:space="preserve">
          <source>BusinessDay.nanos</source>
          <target state="translated">BusinessDay.nanos</target>
        </trans-unit>
        <trans-unit id="018f680e45fd8cf1a4dfea4c312a0f7fc74c16e3" translate="yes" xml:space="preserve">
          <source>BusinessDay.normalize</source>
          <target state="translated">BusinessDay.normalize</target>
        </trans-unit>
        <trans-unit id="b4f765db67f4c745d69c9bd9bb90f6c379da2c65" translate="yes" xml:space="preserve">
          <source>BusinessDay.offset</source>
          <target state="translated">BusinessDay.offset</target>
        </trans-unit>
        <trans-unit id="d7b74f817db5458b1da2962225177f049f99fc86" translate="yes" xml:space="preserve">
          <source>BusinessDay.onOffset()</source>
          <target state="translated">BusinessDay.onOffset()</target>
        </trans-unit>
        <trans-unit id="c422f7d85847a20433e9eadfb3eb320bac30cf97" translate="yes" xml:space="preserve">
          <source>BusinessDay.rollback()</source>
          <target state="translated">BusinessDay.rollback()</target>
        </trans-unit>
        <trans-unit id="296a6b2ab68578bebb7d1429c526b8600be1b0a0" translate="yes" xml:space="preserve">
          <source>BusinessDay.rollforward()</source>
          <target state="translated">BusinessDay.rollforward()</target>
        </trans-unit>
        <trans-unit id="c0f21ea00a491cde49e5ebdebbbf7f6bf52a3f9b" translate="yes" xml:space="preserve">
          <source>BusinessDay.rule_code</source>
          <target state="translated">BusinessDay.rule_code</target>
        </trans-unit>
        <trans-unit id="d79d814a814f9f2b1ec74ae659ddf0a5df6be0d2" translate="yes" xml:space="preserve">
          <source>BusinessHour</source>
          <target state="translated">BusinessHour</target>
        </trans-unit>
        <trans-unit id="667a05aa5fc944599927485cd4387b0f59cc03c3" translate="yes" xml:space="preserve">
          <source>BusinessHour.apply()</source>
          <target state="translated">BusinessHour.apply()</target>
        </trans-unit>
        <trans-unit id="8d4f38a4434c1baee272eddadec6f7da6db7126f" translate="yes" xml:space="preserve">
          <source>BusinessHour.apply_index()</source>
          <target state="translated">BusinessHour.apply_index()</target>
        </trans-unit>
        <trans-unit id="17b2c5e8ddf99e7fe071c97d9a8b82cd4378f43f" translate="yes" xml:space="preserve">
          <source>BusinessHour.base</source>
          <target state="translated">BusinessHour.base</target>
        </trans-unit>
        <trans-unit id="75dc37b0eb9341c041399e7eabe82b274c143127" translate="yes" xml:space="preserve">
          <source>BusinessHour.copy()</source>
          <target state="translated">BusinessHour.copy()</target>
        </trans-unit>
        <trans-unit id="d263183636d8500111d6d82cb40f081c391a5d47" translate="yes" xml:space="preserve">
          <source>BusinessHour.freqstr</source>
          <target state="translated">BusinessHour.freqstr</target>
        </trans-unit>
        <trans-unit id="ceca3248d259c3aee4d1db08d3afbe9bbb3e84f4" translate="yes" xml:space="preserve">
          <source>BusinessHour.isAnchored()</source>
          <target state="translated">BusinessHour.isAnchored()</target>
        </trans-unit>
        <trans-unit id="b0843b8f2c969b86ac6714add264e8e139894df0" translate="yes" xml:space="preserve">
          <source>BusinessHour.kwds</source>
          <target state="translated">BusinessHour.kwds</target>
        </trans-unit>
        <trans-unit id="093ae334e4d42821d51b95f3ba26b69f76d74d85" translate="yes" xml:space="preserve">
          <source>BusinessHour.name</source>
          <target state="translated">BusinessHour.name</target>
        </trans-unit>
        <trans-unit id="f9c4af650f260c9e9458b14a2a49f150f81fc298" translate="yes" xml:space="preserve">
          <source>BusinessHour.nanos</source>
          <target state="translated">BusinessHour.nanos</target>
        </trans-unit>
        <trans-unit id="e2e401e4adbb05da8c7578950c105fc77a0b99b9" translate="yes" xml:space="preserve">
          <source>BusinessHour.next_bday</source>
          <target state="translated">BusinessHour.next_bday</target>
        </trans-unit>
        <trans-unit id="2f7bd7b25d02e873d0680c78918511cd2440449f" translate="yes" xml:space="preserve">
          <source>BusinessHour.normalize</source>
          <target state="translated">BusinessHour.normalize</target>
        </trans-unit>
        <trans-unit id="55997971d70ddc97c5beeb830b001c9df21fa78d" translate="yes" xml:space="preserve">
          <source>BusinessHour.offset</source>
          <target state="translated">BusinessHour.offset</target>
        </trans-unit>
        <trans-unit id="dad6a169f51729e4958f03975d08350bf374cf02" translate="yes" xml:space="preserve">
          <source>BusinessHour.onOffset()</source>
          <target state="translated">BusinessHour.onOffset()</target>
        </trans-unit>
        <trans-unit id="0f1337fc2d214aaab0b2421a34cbc6ed4eaecc32" translate="yes" xml:space="preserve">
          <source>BusinessHour.rollback()</source>
          <target state="translated">BusinessHour.rollback()</target>
        </trans-unit>
        <trans-unit id="ad049355ce9c6e01cc3f8af0705ba5f89802a8c6" translate="yes" xml:space="preserve">
          <source>BusinessHour.rollforward()</source>
          <target state="translated">BusinessHour.rollforward()</target>
        </trans-unit>
        <trans-unit id="09ddcc1eebde9bcefd98f26f30a3e6bab8899bfb" translate="yes" xml:space="preserve">
          <source>BusinessHour.rule_code</source>
          <target state="translated">BusinessHour.rule_code</target>
        </trans-unit>
        <trans-unit id="ecc54d8554088c18ea99f68a14aaaa510e545301" translate="yes" xml:space="preserve">
          <source>BusinessMonthBegin</source>
          <target state="translated">BusinessMonthBegin</target>
        </trans-unit>
        <trans-unit id="3b04d4046eee0f4b086e00dfbfbedaf41630d8b4" translate="yes" xml:space="preserve">
          <source>BusinessMonthBegin.apply()</source>
          <target state="translated">BusinessMonthBegin.apply()</target>
        </trans-unit>
        <trans-unit id="8310d740e1145f6b64d5b06f9d600ac6a35c3589" translate="yes" xml:space="preserve">
          <source>BusinessMonthBegin.apply_index()</source>
          <target state="translated">BusinessMonthBegin.apply_index()</target>
        </trans-unit>
        <trans-unit id="6a0e5007f04cdd6aaa2ad0f4605653f092b83de1" translate="yes" xml:space="preserve">
          <source>BusinessMonthBegin.base</source>
          <target state="translated">BusinessMonthBegin.base</target>
        </trans-unit>
        <trans-unit id="0f8685980c4542c63d7ef33b50c4941d0085c380" translate="yes" xml:space="preserve">
          <source>BusinessMonthBegin.copy()</source>
          <target state="translated">BusinessMonthBegin.copy()</target>
        </trans-unit>
        <trans-unit id="8a3933d048ae7b49d7cbffdea703f91c8304719d" translate="yes" xml:space="preserve">
          <source>BusinessMonthBegin.freqstr</source>
          <target state="translated">BusinessMonthBegin.freqstr</target>
        </trans-unit>
        <trans-unit id="eadc1660f6f37d65886533e8c836be0345125b10" translate="yes" xml:space="preserve">
          <source>BusinessMonthBegin.isAnchored()</source>
          <target state="translated">BusinessMonthBegin.isAnchored()</target>
        </trans-unit>
        <trans-unit id="8f775117e3d2d9b3d1e3ab3cb3607da50368f87c" translate="yes" xml:space="preserve">
          <source>BusinessMonthBegin.kwds</source>
          <target state="translated">BusinessMonthBegin.kwds</target>
        </trans-unit>
        <trans-unit id="25feedbaa46b83106de019a064167e6717edaf20" translate="yes" xml:space="preserve">
          <source>BusinessMonthBegin.name</source>
          <target state="translated">BusinessMonthBegin.name</target>
        </trans-unit>
        <trans-unit id="c13fcc7606515cf41c6193d5f9268db2440aa587" translate="yes" xml:space="preserve">
          <source>BusinessMonthBegin.nanos</source>
          <target state="translated">BusinessMonthBegin.nanos</target>
        </trans-unit>
        <trans-unit id="f3f6922e73906e42d265ad23d7be0fa10860cd24" translate="yes" xml:space="preserve">
          <source>BusinessMonthBegin.normalize</source>
          <target state="translated">BusinessMonthBegin.normalize</target>
        </trans-unit>
        <trans-unit id="3123b8822fd6578b6c8951bd627b4a686193e386" translate="yes" xml:space="preserve">
          <source>BusinessMonthBegin.onOffset()</source>
          <target state="translated">BusinessMonthBegin.onOffset()</target>
        </trans-unit>
        <trans-unit id="4249607ebda76c678b5831b4130b4518ea76e802" translate="yes" xml:space="preserve">
          <source>BusinessMonthBegin.rollback()</source>
          <target state="translated">BusinessMonthBegin.rollback()</target>
        </trans-unit>
        <trans-unit id="83559ec26b3115ab310b5b7215ca3068027417ad" translate="yes" xml:space="preserve">
          <source>BusinessMonthBegin.rollforward()</source>
          <target state="translated">BusinessMonthBegin.rollforward()</target>
        </trans-unit>
        <trans-unit id="c14d592ac07e12570c56e9e0a4bce9772e6b95ba" translate="yes" xml:space="preserve">
          <source>BusinessMonthBegin.rule_code</source>
          <target state="translated">BusinessMonthBegin.rule_code</target>
        </trans-unit>
        <trans-unit id="b4d94da0e612d53d740022f4e81348ce5cd9b4c6" translate="yes" xml:space="preserve">
          <source>BusinessMonthEnd</source>
          <target state="translated">BusinessMonthEnd</target>
        </trans-unit>
        <trans-unit id="f63220872722e4b907275af8521ee956d0edbcb2" translate="yes" xml:space="preserve">
          <source>BusinessMonthEnd.apply()</source>
          <target state="translated">BusinessMonthEnd.apply()</target>
        </trans-unit>
        <trans-unit id="93ff73d790246ceaa8e543c66dcf1d8aff2484a5" translate="yes" xml:space="preserve">
          <source>BusinessMonthEnd.apply_index()</source>
          <target state="translated">BusinessMonthEnd.apply_index()</target>
        </trans-unit>
        <trans-unit id="1e2d33720bff64f9ce5ace35511e6d55cabd833a" translate="yes" xml:space="preserve">
          <source>BusinessMonthEnd.base</source>
          <target state="translated">BusinessMonthEnd.base</target>
        </trans-unit>
        <trans-unit id="c34e5f5118ecb11f5ac666d8aaf7487a2ef3cdb6" translate="yes" xml:space="preserve">
          <source>BusinessMonthEnd.copy()</source>
          <target state="translated">BusinessMonthEnd.copy()</target>
        </trans-unit>
        <trans-unit id="cf0d854810094b551c1ba7a1b81f5a3deac4adf7" translate="yes" xml:space="preserve">
          <source>BusinessMonthEnd.freqstr</source>
          <target state="translated">BusinessMonthEnd.freqstr</target>
        </trans-unit>
        <trans-unit id="2a1616dcf8cf64f9e012dd9fb6f5ba273076a5a8" translate="yes" xml:space="preserve">
          <source>BusinessMonthEnd.isAnchored()</source>
          <target state="translated">BusinessMonthEnd.isAnchored()</target>
        </trans-unit>
        <trans-unit id="37659218f13b60ddced35090ed6d7dcbb1446f98" translate="yes" xml:space="preserve">
          <source>BusinessMonthEnd.kwds</source>
          <target state="translated">BusinessMonthEnd.kwds</target>
        </trans-unit>
        <trans-unit id="5d24f45ad31d4820f7d8a7f34217052eed864d6d" translate="yes" xml:space="preserve">
          <source>BusinessMonthEnd.name</source>
          <target state="translated">BusinessMonthEnd.name</target>
        </trans-unit>
        <trans-unit id="417c600d94038d028f88e414d494d823c8e9cbee" translate="yes" xml:space="preserve">
          <source>BusinessMonthEnd.nanos</source>
          <target state="translated">BusinessMonthEnd.nanos</target>
        </trans-unit>
        <trans-unit id="30bd20fe9d2c9130d0aaa8fec3ef25fc6a4c6959" translate="yes" xml:space="preserve">
          <source>BusinessMonthEnd.normalize</source>
          <target state="translated">BusinessMonthEnd.normalize</target>
        </trans-unit>
        <trans-unit id="b8c6ec6758dc12908db900138a9c8a03623b682d" translate="yes" xml:space="preserve">
          <source>BusinessMonthEnd.onOffset()</source>
          <target state="translated">BusinessMonthEnd.onOffset()</target>
        </trans-unit>
        <trans-unit id="ee0c230238853c8292a8516de8210849afef9c4a" translate="yes" xml:space="preserve">
          <source>BusinessMonthEnd.rollback()</source>
          <target state="translated">BusinessMonthEnd.rollback()</target>
        </trans-unit>
        <trans-unit id="71eb4f303d2a973a726a2a4a1cbe1cc2b6f5bb2d" translate="yes" xml:space="preserve">
          <source>BusinessMonthEnd.rollforward()</source>
          <target state="translated">BusinessMonthEnd.rollforward()</target>
        </trans-unit>
        <trans-unit id="996e142c13feb8da325e4518c8e6af70549077a9" translate="yes" xml:space="preserve">
          <source>BusinessMonthEnd.rule_code</source>
          <target state="translated">BusinessMonthEnd.rule_code</target>
        </trans-unit>
        <trans-unit id="c697f9d39b1dadd1220f166ecf34f2aabcb19b19" translate="yes" xml:space="preserve">
          <source>But clearly this isn&amp;rsquo;t fast enough for us. Let&amp;rsquo;s take a look and see where the time is spent during this operation (limited to the most time consuming four calls) using the &lt;a href=&quot;http://ipython.org/ipython-doc/stable/api/generated/IPython.core.magics.execution.html#IPython.core.magics.execution.ExecutionMagics.prun&quot;&gt;prun ipython magic function&lt;/a&gt;:</source>
          <target state="translated">但是显然，这对我们来说还不够快。让我们看一下使用&lt;a href=&quot;http://ipython.org/ipython-doc/stable/api/generated/IPython.core.magics.execution.html#IPython.core.magics.execution.ExecutionMagics.prun&quot;&gt;prun ipython magic函数&lt;/a&gt;在此操作中花费的时间（限于耗时最多的四个调用）：</target>
        </trans-unit>
        <trans-unit id="c48f096fe6bb21672f881921466be545807bd00c" translate="yes" xml:space="preserve">
          <source>But clearly this isn&amp;rsquo;t fast enough for us. Let&amp;rsquo;s take a look and see where the time is spent during this operation (limited to the most time consuming four calls) using the &lt;a href=&quot;https://ipython.readthedocs.io/en/stable/interactive/magics.html#magic-prun&quot;&gt;prun ipython magic function&lt;/a&gt;:</source>
          <target state="translated">但是很显然，这对我们来说还不够快。让我们看一下使用&lt;a href=&quot;https://ipython.readthedocs.io/en/stable/interactive/magics.html#magic-prun&quot;&gt;prun ipython magic函数&lt;/a&gt;在此操作中花费的时间（限于耗时最多的四个调用）：</target>
        </trans-unit>
        <trans-unit id="5e8ca831478a6df33d6c8ed3d365c2b9fb5fab2d" translate="yes" xml:space="preserve">
          <source>But first, it&amp;rsquo;s worth considering &lt;em&gt;not using pandas&lt;/em&gt;. pandas isn&amp;rsquo;t the right tool for all situations. If you&amp;rsquo;re working with very large datasets and a tool like PostgreSQL fits your needs, then you should probably be using that. Assuming you want or need the expressiveness and power of pandas, let&amp;rsquo;s carry on.</source>
          <target state="translated">但是首先，值得考虑&lt;em&gt;不使用熊猫&lt;/em&gt;。熊猫并不是适用于所有情况的正确工具。如果您使用的是非常大的数据集，而PostgreSQL之类的工具可以满足您的需求，那么您可能应该使用它。假设您想要或需要熊猫的表现力和力量，那就继续吧。</target>
        </trans-unit>
        <trans-unit id="515d260916cde6de73eb736d451faf9682456694" translate="yes" xml:space="preserve">
          <source>But it turns out that assigning to the product of chained indexing has inherently unpredictable results. To see this, think about how the Python interpreter executes this code:</source>
          <target state="translated">但事实证明,赋值给链式索引的乘积本身就有不可预知的结果。要了解这一点,请思考一下Python解释器是如何执行这段代码的。</target>
        </trans-unit>
        <trans-unit id="63ba631a49a65341531cbcdb54e0dc6f8abdacf9" translate="yes" xml:space="preserve">
          <source>But it&amp;rsquo;s better to avoid applymap in that case.</source>
          <target state="translated">但是在这种情况下最好避免使用applymap。</target>
        </trans-unit>
        <trans-unit id="32938515c899eb3e4418b898186ca4a99f113a3d" translate="yes" xml:space="preserve">
          <source>But rather, use &lt;a href=&quot;../reference/api/pandas.series.to_numpy#pandas.Series.to_numpy&quot;&gt;&lt;code&gt;Series.to_numpy()&lt;/code&gt;&lt;/a&gt; to get the underlying &lt;code&gt;ndarray&lt;/code&gt;:</source>
          <target state="translated">而是使用&lt;a href=&quot;../reference/api/pandas.series.to_numpy#pandas.Series.to_numpy&quot;&gt; &lt;code&gt;Series.to_numpy()&lt;/code&gt; &lt;/a&gt;来获取底层的 &lt;code&gt;ndarray&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="4558d1a4b86f04724ec8d5c6cf11cdc7aa298b9c" translate="yes" xml:space="preserve">
          <source>But slicing &lt;code&gt;'A'&lt;/code&gt; returns a &lt;code&gt;DataFrame&lt;/code&gt;</source>
          <target state="translated">但是切片 &lt;code&gt;'A'&lt;/code&gt; 返回一个 &lt;code&gt;DataFrame&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0a15cce834d743eabb2d51100ec2353785344643" translate="yes" xml:space="preserve">
          <source>But suppose we wish to do time series operations with the variables. A better representation would be where the &lt;code&gt;columns&lt;/code&gt; are the unique variables and an &lt;code&gt;index&lt;/code&gt; of dates identifies individual observations. To reshape the data into this form, we use the &lt;a href=&quot;../reference/api/pandas.dataframe.pivot#pandas.DataFrame.pivot&quot;&gt;&lt;code&gt;DataFrame.pivot()&lt;/code&gt;&lt;/a&gt; method (also implemented as a top level function &lt;a href=&quot;../reference/api/pandas.pivot#pandas.pivot&quot;&gt;&lt;code&gt;pivot()&lt;/code&gt;&lt;/a&gt;):</source>
          <target state="translated">但是，假设我们希望对变量进行时间序列运算。更好的表示方式是， &lt;code&gt;columns&lt;/code&gt; 是唯一变量，而日期 &lt;code&gt;index&lt;/code&gt; 则标识各个观察值。为了将数据重塑为这种形式，我们使用&lt;a href=&quot;../reference/api/pandas.dataframe.pivot#pandas.DataFrame.pivot&quot;&gt; &lt;code&gt;DataFrame.pivot()&lt;/code&gt; &lt;/a&gt;方法（也实现为顶级功能ivot &lt;a href=&quot;../reference/api/pandas.pivot#pandas.pivot&quot;&gt; &lt;code&gt;pivot()&lt;/code&gt; &lt;/a&gt;）：</target>
        </trans-unit>
        <trans-unit id="a01152d94ee20841c94569c44053d7b5f2419fc2" translate="yes" xml:space="preserve">
          <source>But this code is handled differently:</source>
          <target state="translated">但这段代码的处理方式不同。</target>
        </trans-unit>
        <trans-unit id="c74231619a21f1c4733a38080ec29d5525701d7d" translate="yes" xml:space="preserve">
          <source>But, it&amp;rsquo;s rather verbose and can be untidy if you need to pass additional arguments. Using a bit of metaprogramming cleverness, GroupBy now has the ability to &amp;ldquo;dispatch&amp;rdquo; method calls to the groups:</source>
          <target state="translated">但是，它相当冗长，如果您需要传递其他参数，可能会很不整洁。通过使用一些元编程的技巧，GroupBy现在可以&amp;ldquo;分派&amp;rdquo;对组的方法调用：</target>
        </trans-unit>
        <trans-unit id="5c3ad5d1ad065d8cbcaad955862729d89b418d02" translate="yes" xml:space="preserve">
          <source>By &amp;ldquo;group by&amp;rdquo; we are referring to a process involving one or more of the following steps:</source>
          <target state="translated">&amp;ldquo;分组依据&amp;rdquo;是指涉及以下一个或多个步骤的过程：</target>
        </trans-unit>
        <trans-unit id="a39e1e6dfd224e52ae9e307f2bc2e41b31af593c" translate="yes" xml:space="preserve">
          <source>By converting an existing &lt;code&gt;Series&lt;/code&gt; or column to a &lt;code&gt;category&lt;/code&gt; dtype:</source>
          <target state="translated">通过将现有 &lt;code&gt;Series&lt;/code&gt; 或列转换为 &lt;code&gt;category&lt;/code&gt; dtype：</target>
        </trans-unit>
        <trans-unit id="e5838ce09c94d7654c93b358711beb0b899479d6" translate="yes" xml:space="preserve">
          <source>By converting to an object array of Timestamps, it preserves the time zone information. For example, when converting back to a Series:</source>
          <target state="translated">通过转换为Timestamps对象数组,它保留了时区信息。例如,当转换回一个Series.Timestamps对象数组时,它可以保留时区信息。</target>
        </trans-unit>
        <trans-unit id="01adc7e0359a60f85839ade2c482344c9e5154f2" translate="yes" xml:space="preserve">
          <source>By default (if you don&amp;rsquo;t specify &lt;code&gt;dtype&lt;/code&gt;), NumPy is used, and you&amp;rsquo;ll end up with a &lt;code&gt;float64&lt;/code&gt; dtype Series:</source>
          <target state="translated">默认情况下（如果不指定 &lt;code&gt;dtype&lt;/code&gt; ），将使用NumPy，最终将得到一个 &lt;code&gt;float64&lt;/code&gt; dtype系列：</target>
        </trans-unit>
        <trans-unit id="3c4439424daec8735287bf351da1049b4ef7cbb8" translate="yes" xml:space="preserve">
          <source>By default &lt;code&gt;NA&lt;/code&gt; values are excluded from group keys during the &lt;code&gt;groupby&lt;/code&gt; operation. However, in case you want to include &lt;code&gt;NA&lt;/code&gt; values in group keys, you could pass &lt;code&gt;dropna=False&lt;/code&gt; to achieve it.</source>
          <target state="translated">默认情况下，在 &lt;code&gt;groupby&lt;/code&gt; 操作期间， &lt;code&gt;NA&lt;/code&gt; 值从组密钥中排除。但是，如果要在组密钥中包含 &lt;code&gt;NA&lt;/code&gt; 值，则可以传递 &lt;code&gt;dropna=False&lt;/code&gt; 来实现。</target>
        </trans-unit>
        <trans-unit id="aabacc286aafebfdf91bcb8e2955cf85e7c22cf5" translate="yes" xml:space="preserve">
          <source>By default NaNs are put at the end, but use</source>
          <target state="translated">默认情况下,NaNs被放在最后,但使用</target>
        </trans-unit>
        <trans-unit id="63d06ecc791717f632c29fd787978c42dc76ae12" translate="yes" xml:space="preserve">
          <source>By default NaNs are put at the end, but use &lt;code&gt;na_position&lt;/code&gt; to place them at the beginning</source>
          <target state="translated">默认情况下，NaN放在末尾，但使用 &lt;code&gt;na_position&lt;/code&gt; 将它们放在开头</target>
        </trans-unit>
        <trans-unit id="d931c676b175c2e8cf9c3de4403e8c715a39bbaa" translate="yes" xml:space="preserve">
          <source>By default a &lt;a href=&quot;../reference/api/pandas.float64index#pandas.Float64Index&quot;&gt;&lt;code&gt;Float64Index&lt;/code&gt;&lt;/a&gt; will be automatically created when passing floating, or mixed-integer-floating values in index creation. This enables a pure label-based slicing paradigm that makes &lt;code&gt;[],ix,loc&lt;/code&gt; for scalar indexing and slicing work exactly the same.</source>
          <target state="translated">默认情况下，在创建索引时传递浮点或混合整数浮点值时，会自动创建&lt;a href=&quot;../reference/api/pandas.float64index#pandas.Float64Index&quot;&gt; &lt;code&gt;Float64Index&lt;/code&gt; &lt;/a&gt;。这将启用基于纯标签的切片范例，从而使标量索引和切片的 &lt;code&gt;[],ix,loc&lt;/code&gt; 完全相同。</target>
        </trans-unit>
        <trans-unit id="e897b82cbef804f4c65fda4cbb144b50dcb76763" translate="yes" xml:space="preserve">
          <source>By default integer types are &lt;code&gt;int64&lt;/code&gt; and float types are &lt;code&gt;float64&lt;/code&gt;, &lt;em&gt;regardless&lt;/em&gt; of platform (32-bit or 64-bit). The following will all result in &lt;code&gt;int64&lt;/code&gt; dtypes.</source>
          <target state="translated">默认情况下，整数类型为 &lt;code&gt;int64&lt;/code&gt; ,而float类型为 &lt;code&gt;float64&lt;/code&gt; ，&lt;em&gt;而不管&lt;/em&gt;平台（32位还是64位）如何。以下将导致 &lt;code&gt;int64&lt;/code&gt; dtype。</target>
        </trans-unit>
        <trans-unit id="062f4f4967acf3f9b81bcd83c4905eaa47f6679e" translate="yes" xml:space="preserve">
          <source>By default new columns will have &lt;code&gt;np.uint8&lt;/code&gt; dtype. To choose another dtype, use the &lt;code&gt;dtype&lt;/code&gt; argument:</source>
          <target state="translated">默认情况下，新列将具有 &lt;code&gt;np.uint8&lt;/code&gt; dtype。要选择另一个dtype，请使用 &lt;code&gt;dtype&lt;/code&gt; 参数：</target>
        </trans-unit>
        <trans-unit id="0c70123161ac84535dccfbf668ca0b92c905eacd" translate="yes" xml:space="preserve">
          <source>By default the display option is set to &lt;code&gt;True&lt;/code&gt; but can be explicitly overridden by passing the &lt;code&gt;memory_usage&lt;/code&gt; argument when invoking &lt;code&gt;df.info()&lt;/code&gt;.</source>
          <target state="translated">默认情况下，显示选项设置为 &lt;code&gt;True&lt;/code&gt; ,但是可以通过在调用 &lt;code&gt;df.info()&lt;/code&gt; 时传递 &lt;code&gt;memory_usage&lt;/code&gt; 参数来显式覆盖。</target>
        </trans-unit>
        <trans-unit id="aa98df1fa88fb86a70e1129c2b42bc8712f4b1b7" translate="yes" xml:space="preserve">
          <source>By default the group keys are sorted during the &lt;code&gt;groupby&lt;/code&gt; operation. You may however pass &lt;code&gt;sort=False&lt;/code&gt; for potential speedups:</source>
          <target state="translated">默认情况下，在 &lt;code&gt;groupby&lt;/code&gt; 操作期间对组密钥进行排序。但是，您可以通过 &lt;code&gt;sort=False&lt;/code&gt; 来获得潜在的加速效果：</target>
        </trans-unit>
        <trans-unit id="01a1710309fea69365770112b6581fe169c63605" translate="yes" xml:space="preserve">
          <source>By default the keys of the dict become the DataFrame columns:</source>
          <target state="translated">默认情况下,dict的键成为DataFrame的列。</target>
        </trans-unit>
        <trans-unit id="b0adde66c844a2a2964f3ce00f26b208447445d7" translate="yes" xml:space="preserve">
          <source>By default the labels are set to the right edge of the window, but a &lt;code&gt;center&lt;/code&gt; keyword is available so the labels can be set at the center.</source>
          <target state="translated">默认情况下，标签设置在窗口的右边缘，但是可以使用 &lt;code&gt;center&lt;/code&gt; 关键字，因此可以将标签设置在中心。</target>
        </trans-unit>
        <trans-unit id="6dec236557b8f06b4e564494bb4e1a63434f314d" translate="yes" xml:space="preserve">
          <source>By default the memory usage of the &lt;code&gt;DataFrame&lt;/code&gt;&amp;rsquo;s index is shown in the returned &lt;code&gt;Series&lt;/code&gt;, the memory usage of the index can be suppressed by passing the &lt;code&gt;index=False&lt;/code&gt; argument:</source>
          <target state="translated">默认情况下， &lt;code&gt;DataFrame&lt;/code&gt; 的索引的内存使用情况显示在返回的 &lt;code&gt;Series&lt;/code&gt; 中，可以通过传递 &lt;code&gt;index=False&lt;/code&gt; 参数来抑制索引的内存使用情况：</target>
        </trans-unit>
        <trans-unit id="ce247952cb8711d7922f7360888deb042b50567e" translate="yes" xml:space="preserve">
          <source>By default the parser removes the component date columns, but you can choose to retain them via the &lt;code&gt;keep_date_col&lt;/code&gt; keyword:</source>
          <target state="translated">默认情况下，解析器会删除组件日期列，但是您可以选择通过 &lt;code&gt;keep_date_col&lt;/code&gt; 关键字保留它们：</target>
        </trans-unit>
        <trans-unit id="3309043dd87fc9cec057a0a1137b28733c920f79" translate="yes" xml:space="preserve">
          <source>By default we are taking the asof of the quotes</source>
          <target state="translated">默认情况下,我们以引号中的&quot;......&quot;为准。</target>
        </trans-unit>
        <trans-unit id="2d34bf7db8b99571959e34c842fede5fccb464de" translate="yes" xml:space="preserve">
          <source>By default we are taking the asof of the quotes.</source>
          <target state="translated">默认情况下,我们是取引号的asof。</target>
        </trans-unit>
        <trans-unit id="1340caad148f1baf3252d2bf2dd252131035cd24" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;BusinessHour&lt;/code&gt; uses 9:00 - 17:00 as business hours. Adding &lt;code&gt;BusinessHour&lt;/code&gt; will increment &lt;code&gt;Timestamp&lt;/code&gt; by hourly frequency. If target &lt;code&gt;Timestamp&lt;/code&gt; is out of business hours, move to the next business hour then increment it. If the result exceeds the business hours end, the remaining hours are added to the next business day.</source>
          <target state="translated">默认情况下， &lt;code&gt;BusinessHour&lt;/code&gt; 使用9:00-17:00作为工作时间。添加 &lt;code&gt;BusinessHour&lt;/code&gt; 将按小时频率增加 &lt;code&gt;Timestamp&lt;/code&gt; 。如果目标 &lt;code&gt;Timestamp&lt;/code&gt; 不在工作时间，请移至下一个工作时间，然后增加它。如果结果超过工作时间结束，则剩余时间将添加到下一个工作日。</target>
        </trans-unit>
        <trans-unit id="08977435ad2d3323377d558af4046df6e0cc2e7a" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;NaN&lt;/code&gt; values are filled in a &lt;code&gt;forward&lt;/code&gt; direction. Use &lt;code&gt;limit_direction&lt;/code&gt; parameter to fill &lt;code&gt;backward&lt;/code&gt; or from &lt;code&gt;both&lt;/code&gt; directions.</source>
          <target state="translated">默认情况下， &lt;code&gt;NaN&lt;/code&gt; 值是 &lt;code&gt;forward&lt;/code&gt; 填充的。使用 &lt;code&gt;limit_direction&lt;/code&gt; 参数，以填补 &lt;code&gt;backward&lt;/code&gt; 或 &lt;code&gt;both&lt;/code&gt; 方向。</target>
        </trans-unit>
        <trans-unit id="0daaf9dfe51d985994c78a78a6d1aed67ed0a5d4" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;NaN&lt;/code&gt; values are filled whether they are inside (surrounded by) existing valid values, or outside existing valid values. The &lt;code&gt;limit_area&lt;/code&gt; parameter restricts filling to either inside or outside values.</source>
          <target state="translated">默认情况下，无论 &lt;code&gt;NaN&lt;/code&gt; 值是在现有有效值之内（由其包围）还是在现有有效值之外，都将被填充。所述 &lt;code&gt;limit_area&lt;/code&gt; 参数限制填充到内部或外部的值。</target>
        </trans-unit>
        <trans-unit id="29b34e028283b0a0d6a01d13c796f6b27e33c513" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;convert_dtypes&lt;/code&gt; will attempt to convert a Series (or each Series in a DataFrame) to dtypes that support &lt;code&gt;pd.NA&lt;/code&gt;. By using the options &lt;code&gt;convert_string&lt;/code&gt;, &lt;code&gt;convert_integer&lt;/code&gt;, &lt;code&gt;convert_boolean&lt;/code&gt; and &lt;code&gt;convert_boolean&lt;/code&gt;, it is possible to turn off individual conversions to &lt;code&gt;StringDtype&lt;/code&gt;, the integer extension types, &lt;code&gt;BooleanDtype&lt;/code&gt; or floating extension types, respectively.</source>
          <target state="translated">默认情况下， &lt;code&gt;convert_dtypes&lt;/code&gt; 将尝试将Series（或DataFrame中的每个Series）转换为支持 &lt;code&gt;pd.NA&lt;/code&gt; 的dtype。通过使用 &lt;code&gt;convert_string&lt;/code&gt; ， &lt;code&gt;convert_integer&lt;/code&gt; ， &lt;code&gt;convert_boolean&lt;/code&gt; 和 &lt;code&gt;convert_boolean&lt;/code&gt; 选项，可以分别关闭对 &lt;code&gt;StringDtype&lt;/code&gt; ，整数扩展类型， &lt;code&gt;BooleanDtype&lt;/code&gt; 或浮动扩展类型的单独转换。</target>
        </trans-unit>
        <trans-unit id="d6a4fa928a3e297e323b6cd143f237a1d5c0f0c6" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;dask.dataframe&lt;/code&gt; operations use a threadpool to do operations in parallel. We can also connect to a cluster to distribute the work on many machines. In this case we&amp;rsquo;ll connect to a local &amp;ldquo;cluster&amp;rdquo; made up of several processes on this single machine.</source>
          <target state="translated">默认情况下， &lt;code&gt;dask.dataframe&lt;/code&gt; 操作使用线程池并行执行操作。我们还可以连接到集群，以将工作分配到许多机器上。在这种情况下，我们将连接到由单个计算机上的多个进程组成的本地&amp;ldquo;集群&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="d04d0a928bca2c90083138cbd998c3db569f61a8" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;read_csv&lt;/code&gt; uses the Excel dialect and treats the double quote as the quote character, which causes it to fail when it finds a newline before it finds the closing double quote.</source>
          <target state="translated">默认情况下， &lt;code&gt;read_csv&lt;/code&gt; 使用Excel方言并将双引号视为引号字符，这导致它在找到换行符之前找到结尾的双引号时失败。</target>
        </trans-unit>
        <trans-unit id="e316e9976df4161ef7d97614a2f74833517fd1b2" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;read_fwf&lt;/code&gt; will try to infer the file&amp;rsquo;s &lt;code&gt;colspecs&lt;/code&gt; by using the first 100 rows of the file. It can do it only in cases when the columns are aligned and correctly separated by the provided &lt;code&gt;delimiter&lt;/code&gt; (default delimiter is whitespace).</source>
          <target state="translated">默认情况下， &lt;code&gt;read_fwf&lt;/code&gt; 将尝试通过使用文件的前100行来推断文件的 &lt;code&gt;colspecs&lt;/code&gt; 。仅当列通过提供的 &lt;code&gt;delimiter&lt;/code&gt; （默认定界符为空格）对齐并正确分隔时，才可以执行此操作。</target>
        </trans-unit>
        <trans-unit id="693e799ca877ea4e198db2f6c4c79704a7045d0e" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;sample&lt;/code&gt; will return each row at most once, but one can also sample with replacement using the &lt;code&gt;replace&lt;/code&gt; option:</source>
          <target state="translated">默认情况下， &lt;code&gt;sample&lt;/code&gt; 最多将返回每一行一次，但是也可以使用 &lt;code&gt;replace&lt;/code&gt; 选项进行替换并进行采样：</target>
        </trans-unit>
        <trans-unit id="31e3abc4ca3ee473e8fb372c7ec1cf7f1e564bef" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;where&lt;/code&gt; returns a modified copy of the data. There is an optional parameter &lt;code&gt;inplace&lt;/code&gt; so that the original data can be modified without creating a copy:</source>
          <target state="translated">默认情况下， &lt;code&gt;where&lt;/code&gt; 返回数据的修改后的副本。有一个可选的参数 &lt;code&gt;inplace&lt;/code&gt; 使原有的数据，而无需创建一个拷贝进行修改：</target>
        </trans-unit>
        <trans-unit id="6201125d9209238d2433714dcff1f4f6221a3bbb" translate="yes" xml:space="preserve">
          <source>By default, ExtensionArrays are not hashable. Immutable subclasses may override this behavior.</source>
          <target state="translated">默认情况下,ExtensionArrays是不可哈希的。不可变的子类可以覆盖这个行为。</target>
        </trans-unit>
        <trans-unit id="1f8438416c9e7646bc0a30016edf1e39b53ee108" translate="yes" xml:space="preserve">
          <source>By default, NA values are ignored.</source>
          <target state="translated">默认情况下,NA值会被忽略。</target>
        </trans-unit>
        <trans-unit id="7e64270efc9e1e6a3600f61cd03200247a11090d" translate="yes" xml:space="preserve">
          <source>By default, NA values in the Series are ignored. Using</source>
          <target state="translated">默认情况下,系列中的NA值会被忽略。使用</target>
        </trans-unit>
        <trans-unit id="e12265640338ad9cf4267b696443e1a968ed6d2a" translate="yes" xml:space="preserve">
          <source>By default, NA values in the Series are ignored. Using &lt;code&gt;na_rep&lt;/code&gt;, they can be given a representation:</source>
          <target state="translated">默认情况下，系列中的NA值将被忽略。使用 &lt;code&gt;na_rep&lt;/code&gt; ，可以给它们一个表示形式：</target>
        </trans-unit>
        <trans-unit id="256e58f854131ef5c37b519e638c3542260c29f3" translate="yes" xml:space="preserve">
          <source>By default, a histogram of the counts around each &lt;code&gt;(x, y)&lt;/code&gt; point is computed. You can specify alternative aggregations by passing values to the &lt;code&gt;C&lt;/code&gt; and &lt;code&gt;reduce_C_function&lt;/code&gt; arguments. &lt;code&gt;C&lt;/code&gt; specifies the value at each &lt;code&gt;(x, y)&lt;/code&gt; point and &lt;code&gt;reduce_C_function&lt;/code&gt; is a function of one argument that reduces all the values in a bin to a single number (e.g. &lt;code&gt;mean&lt;/code&gt;, &lt;code&gt;max&lt;/code&gt;, &lt;code&gt;sum&lt;/code&gt;, &lt;code&gt;std&lt;/code&gt;). In this example the positions are given by columns &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;, while the value is given by column &lt;code&gt;z&lt;/code&gt;. The bins are aggregated with NumPy&amp;rsquo;s &lt;code&gt;max&lt;/code&gt; function.</source>
          <target state="translated">默认情况下，将计算每个 &lt;code&gt;(x, y)&lt;/code&gt; 点周围的计数的直方图。您可以通过将值传递给 &lt;code&gt;C&lt;/code&gt; 和 &lt;code&gt;reduce_C_function&lt;/code&gt; 参数来指定备用聚合。 &lt;code&gt;C&lt;/code&gt; 指定每个 &lt;code&gt;(x, y)&lt;/code&gt; 点的值， &lt;code&gt;reduce_C_function&lt;/code&gt; 是一个参数的函数，该参数将bin中的所有值减小为一个数字（例如， &lt;code&gt;mean&lt;/code&gt; ， &lt;code&gt;max&lt;/code&gt; ， &lt;code&gt;sum&lt;/code&gt; ， &lt;code&gt;std&lt;/code&gt; ）。在此示例中，位置由列 &lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; 给出，而值由列 &lt;code&gt;z&lt;/code&gt; 给出。垃圾箱与NumPy的 &lt;code&gt;max&lt;/code&gt; 汇总 功能。</target>
        </trans-unit>
        <trans-unit id="4a62362e9ff12c226e3b4e9925328c62e64637ef" translate="yes" xml:space="preserve">
          <source>By default, an &amp;ldquo;Ambiguous&amp;rdquo; character&amp;rsquo;s width, such as &amp;ldquo;&amp;iexcl;&amp;rdquo; (inverted exclamation) in the example below, is taken to be 1.</source>
          <target state="translated">默认情况下，以下示例中的&amp;ldquo;歧义&amp;rdquo;字符的宽度为1。</target>
        </trans-unit>
        <trans-unit id="7909d660888d2baa10b3a5ae7e4bee9c5966e9d6" translate="yes" xml:space="preserve">
          <source>By default, astype always returns a newly allocated object. If copy is set to False and internal requirements on dtype are satisfied, the original data is used to create a new Index or the original Index is returned.</source>
          <target state="translated">默认情况下,astype总是返回一个新分配的对象。如果将copy设置为False,并且满足内部对dtype的要求,则使用原始数据创建新的Index,或者返回原始Index。</target>
        </trans-unit>
        <trans-unit id="7a20003412b6c9cf02b25e1df4c7702704b92baf" translate="yes" xml:space="preserve">
          <source>By default, columns get inserted at the end. The &lt;code&gt;insert&lt;/code&gt; function is available to insert at a particular location in the columns:</source>
          <target state="translated">默认情况下，列会插入到末尾。该 &lt;code&gt;insert&lt;/code&gt; 功能可在列的特定位置插入：</target>
        </trans-unit>
        <trans-unit id="e756a89cd949fe162e519ad9c13f140f9e1f8db9" translate="yes" xml:space="preserve">
          <source>By default, combining &lt;code&gt;Series&lt;/code&gt; or &lt;code&gt;DataFrames&lt;/code&gt; which contain the same categories results in &lt;code&gt;category&lt;/code&gt; dtype, otherwise results will depend on the dtype of the underlying categories. Merges that result in non-categorical dtypes will likely have higher memory usage. Use &lt;code&gt;.astype&lt;/code&gt; or &lt;code&gt;union_categoricals&lt;/code&gt; to ensure &lt;code&gt;category&lt;/code&gt; results.</source>
          <target state="translated">默认情况下，组合包含相同类别的 &lt;code&gt;Series&lt;/code&gt; 或 &lt;code&gt;DataFrames&lt;/code&gt; 会导致 &lt;code&gt;category&lt;/code&gt; dtype，否则结果将取决于基础类别的dtype。导致非分类dtypes的合并可能会具有更高的内存使用率。使用 &lt;code&gt;.astype&lt;/code&gt; 或 &lt;code&gt;union_categoricals&lt;/code&gt; 来确保 &lt;code&gt;category&lt;/code&gt; 结果。</target>
        </trans-unit>
        <trans-unit id="ac3dda3261727d8a3ccfff8795d3e7f0219ed5af" translate="yes" xml:space="preserve">
          <source>By default, each row has an equal probability of being selected, but if you want rows to have different probabilities, you can pass the &lt;code&gt;sample&lt;/code&gt; function sampling weights as &lt;code&gt;weights&lt;/code&gt;. These weights can be a list, a NumPy array, or a Series, but they must be of the same length as the object you are sampling. Missing values will be treated as a weight of zero, and inf values are not allowed. If weights do not sum to 1, they will be re-normalized by dividing all weights by the sum of the weights. For example:</source>
          <target state="translated">默认情况下，每行具有相等的被选择概率，但是如果您希望行具有不同的概率，则可以将 &lt;code&gt;sample&lt;/code&gt; 权重作为 &lt;code&gt;weights&lt;/code&gt; 传递给样本函数。这些权重可以是列表，NumPy数组或系列，但它们的长度必须与要采样的对象的长度相同。缺少的值将被视为权重为零，并且不允许使用inf值。如果权重之和不等于1，则将所有权重除以权重之和，将其重新归一化。例如：</target>
        </trans-unit>
        <trans-unit id="bca53cd02ae5e6785460debb4d4e721d53e196cb" translate="yes" xml:space="preserve">
          <source>By default, equal values are assigned a rank that is the average of the ranks of those values.</source>
          <target state="translated">默认情况下,相等的值被分配的等级是这些值的等级的平均值。</target>
        </trans-unit>
        <trans-unit id="3fdaa285fe423146b7e6b7f5beb4a32fafe70dee" translate="yes" xml:space="preserve">
          <source>By default, for each set of duplicated values, the first occurrence is set on False and all others on True.</source>
          <target state="translated">默认情况下,对于每一组重复的值,第一次出现的值设置为False,其他的值设置为True。</target>
        </trans-unit>
        <trans-unit id="40571deae9486030a562d81e703e1f060e8aa2ec" translate="yes" xml:space="preserve">
          <source>By default, for each set of duplicated values, the first occurrence is set on False and all others on True:</source>
          <target state="translated">默认情况下,对于每一组重复的值,第一次出现的值设置为False,其他的值设置为True。</target>
        </trans-unit>
        <trans-unit id="5d1dce940f1b44f893bdc84bf6ada06675ad9cca" translate="yes" xml:space="preserve">
          <source>By default, for each set of duplicated values, the first occurrence is set to False and all others to True:</source>
          <target state="translated">默认情况下,对于每一个重复的值集,第一次出现的值设置为False,而其他所有的值设置为True。</target>
        </trans-unit>
        <trans-unit id="cc78d782a98f40933a5748269b6f2dbe7d2fa892" translate="yes" xml:space="preserve">
          <source>By default, if two corresponding values are equal, they will be shown as &lt;code&gt;NaN&lt;/code&gt;. Furthermore, if all values in an entire row / column, the row / column will be omitted from the result. The remaining differences will be aligned on columns.</source>
          <target state="translated">默认情况下，如果两个对应的值相等，它们将显示为 &lt;code&gt;NaN&lt;/code&gt; 。此外，如果整个行/列中的所有值都将被从结果中省略。其余差异将在列上对齐。</target>
        </trans-unit>
        <trans-unit id="418bbaae1a86eb20c86f38b29c4f75943e2f17bf" translate="yes" xml:space="preserve">
          <source>By default, in the abstract class, just the name of the type is expected. But subclasses can overwrite this method to accept parameters.</source>
          <target state="translated">默认情况下,在抽象类中,只需要类型的名称。但是子类可以覆盖这个方法来接受参数。</target>
        </trans-unit>
        <trans-unit id="9c76721d2dfff1f023f6a2c3795ca3d478e28f6f" translate="yes" xml:space="preserve">
          <source>By default, it removes duplicate rows based on all columns.</source>
          <target state="translated">默认情况下,它根据所有列删除重复的行。</target>
        </trans-unit>
        <trans-unit id="1a19f2f1b6473c5c87cd7608ffd51dd19be2a8da" translate="yes" xml:space="preserve">
          <source>By default, it returns the index for the maximum value in each column.</source>
          <target state="translated">默认情况下,它返回每列中最大值的索引。</target>
        </trans-unit>
        <trans-unit id="f8b888f151383ac8275e4601bc2315e2bf98f8f4" translate="yes" xml:space="preserve">
          <source>By default, it returns the index for the minimum value in each column.</source>
          <target state="translated">默认情况下,它返回每列中最小值的索引。</target>
        </trans-unit>
        <trans-unit id="a9347fd0b06678e66b3a79c417772aa720790ce7" translate="yes" xml:space="preserve">
          <source>By default, it sorts in ascending order, to sort in descending order, use &lt;code&gt;ascending=False&lt;/code&gt;</source>
          <target state="translated">默认情况下，它以升序排序，要以降序排序，请使用 &lt;code&gt;ascending=False&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aa0a73dc4ec5cad042a76c1dbba0ec1b82215198" translate="yes" xml:space="preserve">
          <source>By default, iterates over rows and finds the maximum in each column. This is equivalent to &lt;code&gt;axis=None&lt;/code&gt; or &lt;code&gt;axis='index'&lt;/code&gt;.</source>
          <target state="translated">默认情况下，迭代行并在每一列中找到最大值。这等效于 &lt;code&gt;axis=None&lt;/code&gt; 或 &lt;code&gt;axis='index'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a8a683de412412c0a4069a9b28f4f2d4f9007925" translate="yes" xml:space="preserve">
          <source>By default, iterates over rows and finds the minimum in each column. This is equivalent to &lt;code&gt;axis=None&lt;/code&gt; or &lt;code&gt;axis='index'&lt;/code&gt;.</source>
          <target state="translated">默认情况下，遍历行并在每一列中查找最小值。这等效于 &lt;code&gt;axis=None&lt;/code&gt; 或 &lt;code&gt;axis='index'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1639c50c70632a374cb66254268072a2e44ecf3f" translate="yes" xml:space="preserve">
          <source>By default, iterates over rows and finds the product in each column. This is equivalent to &lt;code&gt;axis=None&lt;/code&gt; or &lt;code&gt;axis='index'&lt;/code&gt;.</source>
          <target state="translated">默认情况下，遍历行并在每一列中查找产品。这等效于 &lt;code&gt;axis=None&lt;/code&gt; 或 &lt;code&gt;axis='index'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="21a746c0b49750d2cc1f0c89dbd88b786bd37c49" translate="yes" xml:space="preserve">
          <source>By default, iterates over rows and finds the sum in each column. This is equivalent to &lt;code&gt;axis=None&lt;/code&gt; or &lt;code&gt;axis='index'&lt;/code&gt;.</source>
          <target state="translated">默认情况下，迭代行并在每一列中求和。这等效于 &lt;code&gt;axis=None&lt;/code&gt; 或 &lt;code&gt;axis='index'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="afd61ab61619ac5bd92d8d9fe230e9f2a8034365" translate="yes" xml:space="preserve">
          <source>By default, missing values are ignored. Using &lt;code&gt;na_rep&lt;/code&gt;, they can be given a representation:</source>
          <target state="translated">默认情况下，缺少的值将被忽略。使用 &lt;code&gt;na_rep&lt;/code&gt; ，可以给它们一个表示形式：</target>
        </trans-unit>
        <trans-unit id="68248fa2c7586bf043b9284f194aa1d0478263df" translate="yes" xml:space="preserve">
          <source>By default, missing values are not considered, and the mode of wings are both 0 and 2. Because the resulting DataFrame has two rows, the second row of &lt;code&gt;species&lt;/code&gt; and &lt;code&gt;legs&lt;/code&gt; contains &lt;code&gt;NaN&lt;/code&gt;.</source>
          <target state="translated">默认情况下，缺失值不考虑，和翅膀的模式都是0和2。因为得到的数据帧有两排，第二排 &lt;code&gt;species&lt;/code&gt; 和 &lt;code&gt;legs&lt;/code&gt; 包含 &lt;code&gt;NaN&lt;/code&gt; 的。</target>
        </trans-unit>
        <trans-unit id="0b3c4f268b612e4471ac10cc8e294acd2a6a25b4" translate="yes" xml:space="preserve">
          <source>By default, missing values are not considered, and the mode of wings are both 0 and 2. The second row of species and legs contains &lt;code&gt;NaN&lt;/code&gt;, because they have only one mode, but the DataFrame has two rows.</source>
          <target state="translated">默认情况下，不考虑缺失值，并且机翼的模式均为0和2。第二行的物种和分支包含 &lt;code&gt;NaN&lt;/code&gt; ，因为它们只有一种模式，而DataFrame有两行。</target>
        </trans-unit>
        <trans-unit id="52b104770b85bbded0c2643fae88773a9bfd3e25" translate="yes" xml:space="preserve">
          <source>By default, numbers with a thousands separator will be parsed as strings:</source>
          <target state="translated">默认情况下,带有千位分隔符的数字将被解析为字符串。</target>
        </trans-unit>
        <trans-unit id="9e52d7c7e2f5d2c520080c806d06efc8cc199f24" translate="yes" xml:space="preserve">
          <source>By default, one of pandas CI workers will fail if any unhandled warnings are emitted.</source>
          <target state="translated">默认情况下,如果发出任何未处理的警告,pandas的一个CI工作者将失败。</target>
        </trans-unit>
        <trans-unit id="737934007bfe3716034e084f87e08f29eacf7ecd" translate="yes" xml:space="preserve">
          <source>By default, pandas objects are time zone unaware:</source>
          <target state="translated">默认情况下,pandas对象是不知道时区的。</target>
        </trans-unit>
        <trans-unit id="960e23b908f80388807cdaa55b08c05bb824a74f" translate="yes" xml:space="preserve">
          <source>By default, pandas uses the &lt;a href=&quot;https://xlsxwriter.readthedocs.io&quot;&gt;XlsxWriter&lt;/a&gt; for &lt;code&gt;.xlsx&lt;/code&gt;, &lt;a href=&quot;https://openpyxl.readthedocs.io/&quot;&gt;openpyxl&lt;/a&gt; for &lt;code&gt;.xlsm&lt;/code&gt;, and &lt;a href=&quot;http://www.python-excel.org&quot;&gt;xlwt&lt;/a&gt; for &lt;code&gt;.xls&lt;/code&gt; files. If you have multiple engines installed, you can set the default engine through &lt;a href=&quot;options#options&quot;&gt;setting the config options&lt;/a&gt;&lt;code&gt;io.excel.xlsx.writer&lt;/code&gt; and &lt;code&gt;io.excel.xls.writer&lt;/code&gt;. pandas will fall back on &lt;a href=&quot;https://openpyxl.readthedocs.io/&quot;&gt;openpyxl&lt;/a&gt; for &lt;code&gt;.xlsx&lt;/code&gt; files if &lt;a href=&quot;https://xlsxwriter.readthedocs.io&quot;&gt;Xlsxwriter&lt;/a&gt; is not available.</source>
          <target state="translated">默认情况下，熊猫采用&lt;a href=&quot;https://xlsxwriter.readthedocs.io&quot;&gt;XlsxWriter&lt;/a&gt;为 &lt;code&gt;.xlsx&lt;/code&gt; ，&lt;a href=&quot;https://openpyxl.readthedocs.io/&quot;&gt;openpyxl&lt;/a&gt;为 &lt;code&gt;.xlsm&lt;/code&gt; ，并&lt;a href=&quot;http://www.python-excel.org&quot;&gt;xlwt&lt;/a&gt;为 &lt;code&gt;.xls&lt;/code&gt; 的文件。如果安装了多个引擎，则可以通过&lt;a href=&quot;options#options&quot;&gt;设置配置选项&lt;/a&gt; &lt;code&gt;io.excel.xlsx.writer&lt;/code&gt; 和 &lt;code&gt;io.excel.xls.writer&lt;/code&gt; 来设置默认引擎。如果&lt;a href=&quot;https://xlsxwriter.readthedocs.io&quot;&gt;Xlsxwriter&lt;/a&gt;不可用，大熊猫将退回&lt;a href=&quot;https://openpyxl.readthedocs.io/&quot;&gt;openpyxl上&lt;/a&gt;的 &lt;code&gt;.xlsx&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="80c9b91fa70430a08196d5ba84f8b25b9fc4bda6" translate="yes" xml:space="preserve">
          <source>By default, the dtype of the returned array will be the common NumPy dtype of all types in the DataFrame. For example, if the dtypes are &lt;code&gt;float16&lt;/code&gt; and &lt;code&gt;float32&lt;/code&gt;, the results dtype will be &lt;code&gt;float32&lt;/code&gt;. This may require copying data and coercing values, which may be expensive.</source>
          <target state="translated">默认情况下，返回数组的dtype将是DataFrame中所有类型的通用NumPy dtype。例如，如果dtype是 &lt;code&gt;float16&lt;/code&gt; 和 &lt;code&gt;float32&lt;/code&gt; ，则结果dtype将是 &lt;code&gt;float32&lt;/code&gt; 。这可能需要复制数据和强制值，这可能很昂贵。</target>
        </trans-unit>
        <trans-unit id="89550d5570c0fcb7339f2f78614453db411e74fc" translate="yes" xml:space="preserve">
          <source>By default, the first observed row of a duplicate set is considered unique, but each method has a &lt;code&gt;keep&lt;/code&gt; parameter to specify targets to be kept.</source>
          <target state="translated">默认情况下，观察到的重复集的第一行被认为是唯一的，但是每种方法都有一个 &lt;code&gt;keep&lt;/code&gt; 参数来指定要保留的目标。</target>
        </trans-unit>
        <trans-unit id="bce7d3e3969a0e089007f5e7eb85aa458579749e" translate="yes" xml:space="preserve">
          <source>By default, the median is always included.</source>
          <target state="translated">默认情况下,总是包括中位数。</target>
        </trans-unit>
        <trans-unit id="a664e0a2ad21f5c92d66ce1bbad60609f29dc8b2" translate="yes" xml:space="preserve">
          <source>By default, the original Index and original name is reused.</source>
          <target state="translated">默认情况下,会重复使用原来的Index和原名。</target>
        </trans-unit>
        <trans-unit id="cb4344cd41a25db846a02c4310caf07c5e8513ef" translate="yes" xml:space="preserve">
          <source>By default, the original Index is reused. To enforce a new Index:</source>
          <target state="translated">默认情况下,原始索引被重复使用。要执行一个新的索引。</target>
        </trans-unit>
        <trans-unit id="ce60b9647ac6ad38fbfd505b418b76b26ddbd9e7" translate="yes" xml:space="preserve">
          <source>By default, the parser includes the comments in the output:</source>
          <target state="translated">默认情况下,解析器在输出中包含注释。</target>
        </trans-unit>
        <trans-unit id="47018e8a9cd3ef91ff4bfe5c9fcc40df02bc384c" translate="yes" xml:space="preserve">
          <source>By default, the product of an empty or all-NA Series is &lt;code&gt;1&lt;/code&gt;</source>
          <target state="translated">默认情况下，空白或全NA系列的乘积为 &lt;code&gt;1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6807fba437e846fc2074f6114e49c4eb4f95dacc" translate="yes" xml:space="preserve">
          <source>By default, the result is set to the right edge of the window. This can be changed to the center of the window by setting &lt;code&gt;center=True&lt;/code&gt;.</source>
          <target state="translated">默认情况下，结果设置为窗口的右边缘。可以通过设置 &lt;code&gt;center=True&lt;/code&gt; 将其更改为窗口的中心。</target>
        </trans-unit>
        <trans-unit id="e0366bda9ea758a7ac62f36776d68fe488644ddd" translate="yes" xml:space="preserve">
          <source>By default, the resulting categories will be ordered as they appear in the</source>
          <target state="translated">默认情况下,所产生的类别将按照它们在</target>
        </trans-unit>
        <trans-unit id="4950f54276bc162c3b0ceabccf06b7f030b5a3dd" translate="yes" xml:space="preserve">
          <source>By default, the resulting categories will be ordered as they appear in the &lt;code&gt;categories&lt;/code&gt; of the data. If you want the categories to be lexsorted, use &lt;code&gt;sort_categories=True&lt;/code&gt; argument.</source>
          <target state="translated">默认情况下，结果类别将按照它们在数据 &lt;code&gt;categories&lt;/code&gt; 中的显示顺序进行排序。如果要按类别对类别进行分类，请使用 &lt;code&gt;sort_categories=True&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="8840fd3291d97fdd8eb4b3ab46479bfc1066d1a6" translate="yes" xml:space="preserve">
          <source>By default, the resulting categories will be ordered as they appear in the data. If you want the categories to be lexsorted, use &lt;code&gt;sort_categories=True&lt;/code&gt; argument.</source>
          <target state="translated">默认情况下，结果类别将按照它们在数据中的显示顺序进行排序。如果要按类别对类别进行分类，请使用 &lt;code&gt;sort_categories=True&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="1cb5d0ef37688aa89a58a81d6fcbe6d7ffceb008" translate="yes" xml:space="preserve">
          <source>By default, the sum of an empty or all-NA Series is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">默认情况下，空序列或全NA系列的总和为 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="783253e721567d41f884456e70eb7dede1bc10aa" translate="yes" xml:space="preserve">
          <source>By default, the value will be read from the pandas config module. Use a longtable environment instead of tabular. Requires adding a usepackage{longtable} to your LaTeX preamble.</source>
          <target state="translated">默认情况下,该值将从pandas配置模块中读取。使用longtable环境而不是tabular环境。需要在 LaTeX 序言中添加 usepackage{longtable}。</target>
        </trans-unit>
        <trans-unit id="dfc677900402355f9692b17deb1174d6da56e2da" translate="yes" xml:space="preserve">
          <source>By default, the value will be read from the pandas config module. When set to False prevents from escaping latex special characters in column names.</source>
          <target state="translated">默认情况下,该值将从pandas配置模块中读取。当设置为False时,可以防止在列名中转义乳胶特殊字符。</target>
        </trans-unit>
        <trans-unit id="c7bf0086e76134d3690184f97f4373e0cfe1f064" translate="yes" xml:space="preserve">
          <source>By default, there are no operators defined for the class &lt;a href=&quot;../reference/api/pandas.api.extensions.extensionarray#pandas.api.extensions.ExtensionArray&quot;&gt;&lt;code&gt;ExtensionArray&lt;/code&gt;&lt;/a&gt;. There are two approaches for providing operator support for your ExtensionArray:</source>
          <target state="translated">默认情况下，没有为&lt;a href=&quot;../reference/api/pandas.api.extensions.extensionarray#pandas.api.extensions.ExtensionArray&quot;&gt; &lt;code&gt;ExtensionArray&lt;/code&gt; &lt;/a&gt;类定义任何运算符。有两种方法可为您的ExtensionArray提供操作员支持：</target>
        </trans-unit>
        <trans-unit id="6952abece8099d0a47bebf623635c26a7f290c25" translate="yes" xml:space="preserve">
          <source>By far the majority of time is spend inside either &lt;code&gt;integrate_f&lt;/code&gt; or &lt;code&gt;f&lt;/code&gt;, hence we&amp;rsquo;ll concentrate our efforts cythonizing these two functions.</source>
          <target state="translated">到目前为止，大部分时间要么是内部支出 &lt;code&gt;integrate_f&lt;/code&gt; 或 &lt;code&gt;f&lt;/code&gt; ，因此，我们将集中力量cythonizing这两个功能。</target>
        </trans-unit>
        <trans-unit id="f3a912186ad9c21062fef4ecd97b9e34b9ce0f92" translate="yes" xml:space="preserve">
          <source>By file-like object, we refer to objects with a &lt;code&gt;read()&lt;/code&gt; method, such as a file handle (e.g. via builtin &lt;code&gt;open&lt;/code&gt; function) or &lt;code&gt;StringIO&lt;/code&gt;.</source>
          <target state="translated">通过类文件对象，我们使用 &lt;code&gt;read()&lt;/code&gt; 方法引用对象，例如文件句柄（例如，通过内置的 &lt;code&gt;open&lt;/code&gt; 函数）或 &lt;code&gt;StringIO&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ee7e2e9fdd8dbfa250ca1faea5939438c265fce9" translate="yes" xml:space="preserve">
          <source>By file-like object, we refer to objects with a &lt;code&gt;read()&lt;/code&gt; method, such as a file handler (e.g. via builtin &lt;code&gt;open&lt;/code&gt; function) or &lt;code&gt;StringIO&lt;/code&gt;.</source>
          <target state="translated">对于类似文件的对象，我们使用 &lt;code&gt;read()&lt;/code&gt; 方法引用对象，例如文件处理程序（例如，通过内置的 &lt;code&gt;open&lt;/code&gt; 函数）或 &lt;code&gt;StringIO&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cb87061cb61c9dbe3608367c7bfb2df479657ca6" translate="yes" xml:space="preserve">
          <source>By index</source>
          <target state="translated">按指数</target>
        </trans-unit>
        <trans-unit id="71ce708975e596182ba0d6ee75a08ace32225c46" translate="yes" xml:space="preserve">
          <source>By indexes and values</source>
          <target state="translated">通过指数和数值</target>
        </trans-unit>
        <trans-unit id="aad0def3a03240bac4e5846554a381b6038d2161" translate="yes" xml:space="preserve">
          <source>By integer slices, acting similar to numpy/Python:</source>
          <target state="translated">通过整数切片,作用类似于numpy/python。</target>
        </trans-unit>
        <trans-unit id="8f8974cae9313cca6647cdeac7256a03c1ba3d1d" translate="yes" xml:space="preserve">
          <source>By lists of integer position locations, similar to the NumPy/Python style:</source>
          <target state="translated">通过整数位置的列表,类似于NumPy/Python的风格。</target>
        </trans-unit>
        <trans-unit id="9da19fce9010d081ce71581b34437339d2cb1482" translate="yes" xml:space="preserve">
          <source>By passing a &lt;a href=&quot;../reference/api/pandas.categorical#pandas.Categorical&quot;&gt;&lt;code&gt;pandas.Categorical&lt;/code&gt;&lt;/a&gt; object to a &lt;code&gt;Series&lt;/code&gt; or assigning it to a &lt;code&gt;DataFrame&lt;/code&gt;.</source>
          <target state="translated">通过将&lt;a href=&quot;../reference/api/pandas.categorical#pandas.Categorical&quot;&gt; &lt;code&gt;pandas.Categorical&lt;/code&gt; &lt;/a&gt;对象传递给 &lt;code&gt;Series&lt;/code&gt; 或将其分配给 &lt;code&gt;DataFrame&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c6bd38e50f03284e01072e47789f3204990de5d0" translate="yes" xml:space="preserve">
          <source>By passing a dict to &lt;code&gt;aggregate&lt;/code&gt; you can apply a different aggregation to the columns of a &lt;code&gt;DataFrame&lt;/code&gt;:</source>
          <target state="translated">通过传递要 &lt;code&gt;aggregate&lt;/code&gt; 的字典，您可以将不同的聚合应用于 &lt;code&gt;DataFrame&lt;/code&gt; 的列：</target>
        </trans-unit>
        <trans-unit id="d8766b012333be2df133cb12672f9028c7dd5745" translate="yes" xml:space="preserve">
          <source>By passing a dict to &lt;code&gt;aggregate&lt;/code&gt; you can apply a different aggregation to the columns of a DataFrame:</source>
          <target state="translated">通过传递要 &lt;code&gt;aggregate&lt;/code&gt; 的字典，您可以将不同的聚合应用于DataFrame的列：</target>
        </trans-unit>
        <trans-unit id="484bc1b8ece9e461bb4da908ce530988bbaad293" translate="yes" xml:space="preserve">
          <source>By providing an integer each column is rounded to the same number of decimal places</source>
          <target state="translated">通过提供一个整数,每一列都被四舍五入到相同数量的小数点。</target>
        </trans-unit>
        <trans-unit id="fc7a9f05f2f01788200acbdfda14d7674ab91e45" translate="yes" xml:space="preserve">
          <source>By setting &lt;code&gt;keep&lt;/code&gt; on False, all duplicates are True.</source>
          <target state="translated">通过将 &lt;code&gt;keep&lt;/code&gt; 设置为False，所有重复项都为True。</target>
        </trans-unit>
        <trans-unit id="bb0b56ec0e3cfa6b7e57d60c9bf585f543fb6126" translate="yes" xml:space="preserve">
          <source>By setting &lt;code&gt;start_time&lt;/code&gt; to be later than &lt;code&gt;end_time&lt;/code&gt;, you can get the times that are &lt;em&gt;not&lt;/em&gt; between the two times.</source>
          <target state="translated">通过将 &lt;code&gt;start_time&lt;/code&gt; 设置为比 &lt;code&gt;end_time&lt;/code&gt; 晚，可以获取&lt;em&gt;不在&lt;/em&gt;两次之间的时间。</target>
        </trans-unit>
        <trans-unit id="31cce3ac3bf5ce5bf0e24e43824e86a5c10c1b98" translate="yes" xml:space="preserve">
          <source>By setting keep on &lt;code&gt;False&lt;/code&gt;, all duplicates are True:</source>
          <target state="translated">通过将keep设置为 &lt;code&gt;False&lt;/code&gt; ，所有重复项均为True：</target>
        </trans-unit>
        <trans-unit id="341df4957cd8cda1c372fdccf75df0f5637b0714" translate="yes" xml:space="preserve">
          <source>By setting the</source>
          <target state="translated">通过设置</target>
        </trans-unit>
        <trans-unit id="9e7a7a8a99a4192f750a5d020df3f30613f2dafe" translate="yes" xml:space="preserve">
          <source>By setting the &lt;code&gt;index&lt;/code&gt; parameter to False we can remove the index as the first element of the tuple:</source>
          <target state="translated">通过将 &lt;code&gt;index&lt;/code&gt; 参数设置为False，我们可以删除索引作为元组的第一个元素：</target>
        </trans-unit>
        <trans-unit id="07bdd506e2fa5925823a80c867753c32e8ce9b72" translate="yes" xml:space="preserve">
          <source>By specifying &lt;code&gt;dtype=&quot;category&quot;&lt;/code&gt; when constructing a &lt;code&gt;Series&lt;/code&gt;:</source>
          <target state="translated">通过在构造 &lt;code&gt;Series&lt;/code&gt; 时指定 &lt;code&gt;dtype=&quot;category&quot;&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="1ac8399f8229ba422815d58f476fc4120a9f6a1d" translate="yes" xml:space="preserve">
          <source>By specifying a &lt;code&gt;chunksize&lt;/code&gt; to &lt;code&gt;read_csv&lt;/code&gt;, the return value will be an iterable object of type &lt;code&gt;TextFileReader&lt;/code&gt;:</source>
          <target state="translated">通过为 &lt;code&gt;read_csv&lt;/code&gt; 指定一个 &lt;code&gt;chunksize&lt;/code&gt; ，返回值将是 &lt;code&gt;TextFileReader&lt;/code&gt; 类型的可迭代对象：</target>
        </trans-unit>
        <trans-unit id="177264efac13fc8448c53c739e204ceb09863ab6" translate="yes" xml:space="preserve">
          <source>By specifying list of row locations for the &lt;code&gt;header&lt;/code&gt; argument, you can read in a &lt;code&gt;MultiIndex&lt;/code&gt; for the columns. Specifying non-consecutive rows will skip the intervening rows.</source>
          <target state="translated">通过为 &lt;code&gt;header&lt;/code&gt; 参数指定行位置的列表，您可以为列读入 &lt;code&gt;MultiIndex&lt;/code&gt; 。指定不连续的行将跳过中间的行。</target>
        </trans-unit>
        <trans-unit id="88f3513544d9b024b8e345eecb0a4fa0d0edb050" translate="yes" xml:space="preserve">
          <source>By specifying the &lt;code&gt;names&lt;/code&gt; argument in conjunction with &lt;code&gt;header&lt;/code&gt; you can indicate other names to use and whether or not to throw away the header row (if any):</source>
          <target state="translated">通过将 &lt;code&gt;names&lt;/code&gt; 参数与 &lt;code&gt;header&lt;/code&gt; 一起指定，您可以指示要使用的其他名称以及是否丢弃标题行（如果有）：</target>
        </trans-unit>
        <trans-unit id="bb61eed413b7571d1e2f7631856a427792958d1e" translate="yes" xml:space="preserve">
          <source>By using &amp;lsquo;last&amp;rsquo;, the last occurrence of each set of duplicated values is set on False and all others on True.</source>
          <target state="translated">通过使用&amp;ldquo; last&amp;rdquo;，将每组重复值的最后一次出现设置为False，将所有其他重复值设置为True。</target>
        </trans-unit>
        <trans-unit id="72beadb893edbb6dbeabe25aa68f9aed772d4415" translate="yes" xml:space="preserve">
          <source>By using &amp;lsquo;last&amp;rsquo;, the last occurrence of each set of duplicated values is set on False and all others on True:</source>
          <target state="translated">通过使用&amp;ldquo; last&amp;rdquo;，将每组重复值的最后一次出现设置为False，将所有其他重复值设置为True：</target>
        </trans-unit>
        <trans-unit id="1292fb057cc0aedab8ef591dcf48d166e105aa63" translate="yes" xml:space="preserve">
          <source>By using &lt;code&gt;ngroup()&lt;/code&gt;, we can extract information about the groups in a way similar to &lt;a href=&quot;../reference/api/pandas.factorize#pandas.factorize&quot;&gt;&lt;code&gt;factorize()&lt;/code&gt;&lt;/a&gt; (as described further in the &lt;a href=&quot;reshaping#reshaping-factorize&quot;&gt;reshaping API&lt;/a&gt;) but which applies naturally to multiple columns of mixed type and different sources. This can be useful as an intermediate categorical-like step in processing, when the relationships between the group rows are more important than their content, or as input to an algorithm which only accepts the integer encoding. (For more information about support in pandas for full categorical data, see the &lt;a href=&quot;categorical#categorical&quot;&gt;Categorical introduction&lt;/a&gt; and the &lt;a href=&quot;../reference/arrays#api-arrays-categorical&quot;&gt;API documentation&lt;/a&gt;.)</source>
          <target state="translated">通过使用 &lt;code&gt;ngroup()&lt;/code&gt; ，我们可以以类似于&lt;a href=&quot;../reference/api/pandas.factorize#pandas.factorize&quot;&gt; &lt;code&gt;factorize()&lt;/code&gt; &lt;/a&gt;的方式提取有关组的信息（如在&lt;a href=&quot;reshaping#reshaping-factorize&quot;&gt;reshaping API&lt;/a&gt;中进一步描述的），但它自然适用于混合类型和不同来源的多个列。当组行之间的关系比它们的内容更重要时，这可用作处理中类似于类别的中间步骤，或者用作仅接受整数编码的算法的输入。（有关在熊猫中支持完整分类数据的更多信息，请参阅&lt;a href=&quot;categorical#categorical&quot;&gt;分类介绍&lt;/a&gt;和&lt;a href=&quot;../reference/arrays#api-arrays-categorical&quot;&gt;API文档&lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="bbe77e32b2efa939216c7aca9a6fdfa902b0ec8e" translate="yes" xml:space="preserve">
          <source>By using special functions, such as &lt;a href=&quot;../reference/api/pandas.cut#pandas.cut&quot;&gt;&lt;code&gt;cut()&lt;/code&gt;&lt;/a&gt;, which groups data into discrete bins. See the &lt;a href=&quot;reshaping#reshaping-tile-cut&quot;&gt;example on tiling&lt;/a&gt; in the docs.</source>
          <target state="translated">通过使用特殊功能，例如&lt;a href=&quot;../reference/api/pandas.cut#pandas.cut&quot;&gt; &lt;code&gt;cut()&lt;/code&gt; &lt;/a&gt;，它将数据分组为离散的bin。请参阅文档中&lt;a href=&quot;reshaping#reshaping-tile-cut&quot;&gt;有关平铺&lt;/a&gt;的示例。</target>
        </trans-unit>
        <trans-unit id="6b97704126311f378a2303c3a8a7b96aee5c49ed" translate="yes" xml:space="preserve">
          <source>By values</source>
          <target state="translated">按价值计算</target>
        </trans-unit>
        <trans-unit id="5c0bfe75dd4e4dfd97fc0ead3f533ab4a23d21e3" translate="yes" xml:space="preserve">
          <source>By-default copy the data, this is compat only and ignored.</source>
          <target state="translated">默认复制数据,这个只是compat,忽略不计。</target>
        </trans-unit>
        <trans-unit id="ef860d8694959dcd3b3f5294cfe1a27b62827ecf" translate="yes" xml:space="preserve">
          <source>Byte-Ordering issues</source>
          <target state="translated">字节排序问题</target>
        </trans-unit>
        <trans-unit id="3ba638c20786e72fa577a1972e832fde9043335e" translate="yes" xml:space="preserve">
          <source>Byte-ordering issues</source>
          <target state="translated">字节顺序问题</target>
        </trans-unit>
        <trans-unit id="d804821e42ba00da4ea51832ca1627ebb8e32fc3" translate="yes" xml:space="preserve">
          <source>Bytes consumed by a DataFrame.</source>
          <target state="translated">一个DataFrame消耗的字节数。</target>
        </trans-unit>
        <trans-unit id="b22afd5ad83b4943ef7a149feb3d6a97ab68e319" translate="yes" xml:space="preserve">
          <source>Bytes consumed by a Series.</source>
          <target state="translated">一个系列所消耗的字节数。</target>
        </trans-unit>
        <trans-unit id="979cc06d8e05220bd40ab32450a5945bc1ca766b" translate="yes" xml:space="preserve">
          <source>Bytes of memory consumed.</source>
          <target state="translated">消耗的内存字节数。</target>
        </trans-unit>
        <trans-unit id="32096c2e0eff33d844ee6d675407ace18289357d" translate="yes" xml:space="preserve">
          <source>C</source>
          <target state="translated">C</target>
        </trans-unit>
        <trans-unit id="d248e1897f1ef981f1dbf826833eb3bdd0f2002c" translate="yes" xml:space="preserve">
          <source>C (cpplint)</source>
          <target state="translated">C (cpplint)</target>
        </trans-unit>
        <trans-unit id="b91d0a73f174e5ad7105c342b7f6f26aba7dce48" translate="yes" xml:space="preserve">
          <source>CBM</source>
          <target state="translated">CBM</target>
        </trans-unit>
        <trans-unit id="962daff572e6227cf75119e27b8f12dd831ae7c5" translate="yes" xml:space="preserve">
          <source>CBMS</source>
          <target state="translated">CBMS</target>
        </trans-unit>
        <trans-unit id="bd50275cebf1e0d0a9a001828720ee71d19510c4" translate="yes" xml:space="preserve">
          <source>CBMonthBegin</source>
          <target state="translated">CBMonthBegin</target>
        </trans-unit>
        <trans-unit id="77314b7ad24fcacf554b1e85e13d43a0c742a765" translate="yes" xml:space="preserve">
          <source>CBMonthBegin.apply()</source>
          <target state="translated">CBMonthBegin.apply()</target>
        </trans-unit>
        <trans-unit id="e52fa093754db7363a045cf724818a00c2ec3c04" translate="yes" xml:space="preserve">
          <source>CBMonthBegin.apply_index()</source>
          <target state="translated">CBMonthBegin.apply_index()</target>
        </trans-unit>
        <trans-unit id="752361a98f257c5c4108068471fbfe972d25a065" translate="yes" xml:space="preserve">
          <source>CBMonthBegin.base</source>
          <target state="translated">CBMonthBegin.base</target>
        </trans-unit>
        <trans-unit id="be5b06d5b3154c3b599013d5bec8a19738a1f743" translate="yes" xml:space="preserve">
          <source>CBMonthBegin.cbday_roll</source>
          <target state="translated">CBMonthBegin.cbday_roll</target>
        </trans-unit>
        <trans-unit id="8df7ef3eb3c3c3a8aebb19bd5339cec8bb915337" translate="yes" xml:space="preserve">
          <source>CBMonthBegin.copy()</source>
          <target state="translated">CBMonthBegin.copy()</target>
        </trans-unit>
        <trans-unit id="f4c935e3e78c344662e07b15a01f980ccaf1e206" translate="yes" xml:space="preserve">
          <source>CBMonthBegin.freqstr</source>
          <target state="translated">CBMonthBegin.freqstr</target>
        </trans-unit>
        <trans-unit id="ff343ef3708d2f97f26ae07585aeafe61881b64f" translate="yes" xml:space="preserve">
          <source>CBMonthBegin.isAnchored()</source>
          <target state="translated">CBMonthBegin.isAnchored()</target>
        </trans-unit>
        <trans-unit id="e5910e66d3cee3946eea76cefc4e785dd13f576d" translate="yes" xml:space="preserve">
          <source>CBMonthBegin.kwds</source>
          <target state="translated">CBMonthBegin.kwds</target>
        </trans-unit>
        <trans-unit id="6dd50d5b382368371443c2ca16c45a6d040bcdae" translate="yes" xml:space="preserve">
          <source>CBMonthBegin.m_offset</source>
          <target state="translated">CBMonthBegin.m_offset</target>
        </trans-unit>
        <trans-unit id="dfd80afbc6f7db3c8598695a4577fc2b2e0c28c5" translate="yes" xml:space="preserve">
          <source>CBMonthBegin.month_roll</source>
          <target state="translated">CBMonthBegin.month_roll</target>
        </trans-unit>
        <trans-unit id="22bbca6df1edfbf8b14e4bf565d3656291920ae0" translate="yes" xml:space="preserve">
          <source>CBMonthBegin.name</source>
          <target state="translated">CBMonthBegin.name</target>
        </trans-unit>
        <trans-unit id="d851c28bc711ea8cea5efd4d49c67e538c818d99" translate="yes" xml:space="preserve">
          <source>CBMonthBegin.nanos</source>
          <target state="translated">CBMonthBegin.nanos</target>
        </trans-unit>
        <trans-unit id="79d6a8fc2610f5a0f8caa6e2708eeab049472494" translate="yes" xml:space="preserve">
          <source>CBMonthBegin.normalize</source>
          <target state="translated">CBMonthBegin.normalize</target>
        </trans-unit>
        <trans-unit id="83cefe4ed97ac2c669974e9b5d9e8173c2ff173d" translate="yes" xml:space="preserve">
          <source>CBMonthBegin.offset</source>
          <target state="translated">CBMonthBegin.offset</target>
        </trans-unit>
        <trans-unit id="4bffa90c943561b9c312b4cd2f433af248316007" translate="yes" xml:space="preserve">
          <source>CBMonthBegin.onOffset()</source>
          <target state="translated">CBMonthBegin.onOffset()</target>
        </trans-unit>
        <trans-unit id="5bed58d831e7aa03d7d82698be8866f56235f6e6" translate="yes" xml:space="preserve">
          <source>CBMonthBegin.rollback()</source>
          <target state="translated">CBMonthBegin.rollback()</target>
        </trans-unit>
        <trans-unit id="67f5f6845ba3e4340567c2a634e26197430e99ed" translate="yes" xml:space="preserve">
          <source>CBMonthBegin.rollforward()</source>
          <target state="translated">CBMonthBegin.rollforward()</target>
        </trans-unit>
        <trans-unit id="6a3d7c64b56e8e6ab4a6090d16ff2537383f40ab" translate="yes" xml:space="preserve">
          <source>CBMonthBegin.rule_code</source>
          <target state="translated">CBMonthBegin.rule_code</target>
        </trans-unit>
        <trans-unit id="c77122e4538cdad5f41377ecb3b357d3fa3deb80" translate="yes" xml:space="preserve">
          <source>CBMonthEnd</source>
          <target state="translated">CBMonthEnd</target>
        </trans-unit>
        <trans-unit id="f39a686445564b8e2ff14986c41a57ae444ee4d9" translate="yes" xml:space="preserve">
          <source>CBMonthEnd.apply()</source>
          <target state="translated">CBMonthEnd.apply()</target>
        </trans-unit>
        <trans-unit id="cb35aca995dec6219ccefb09aeb22860fa4f47ff" translate="yes" xml:space="preserve">
          <source>CBMonthEnd.apply_index()</source>
          <target state="translated">CBMonthEnd.apply_index()</target>
        </trans-unit>
        <trans-unit id="a8359819693c2d617b5a724c8093e8fae6113356" translate="yes" xml:space="preserve">
          <source>CBMonthEnd.base</source>
          <target state="translated">CBMonthEnd.base</target>
        </trans-unit>
        <trans-unit id="5a274c2c1cbc7f7a109212903746ed33d1e95e6e" translate="yes" xml:space="preserve">
          <source>CBMonthEnd.cbday_roll</source>
          <target state="translated">CBMonthEnd.cbday_roll</target>
        </trans-unit>
        <trans-unit id="0fb5ac2e0c54cf424a331453140502196b892eed" translate="yes" xml:space="preserve">
          <source>CBMonthEnd.copy()</source>
          <target state="translated">CBMonthEnd.copy()</target>
        </trans-unit>
        <trans-unit id="ae6ca3eab3b552d011c0f5e137fbf031af7f0437" translate="yes" xml:space="preserve">
          <source>CBMonthEnd.freqstr</source>
          <target state="translated">CBMonthEnd.freqstr</target>
        </trans-unit>
        <trans-unit id="545421d28f711fdbf618dcd31af5946cfc0c39f2" translate="yes" xml:space="preserve">
          <source>CBMonthEnd.isAnchored()</source>
          <target state="translated">CBMonthEnd.isAnchored()</target>
        </trans-unit>
        <trans-unit id="dd6522df4889a80b77691be240475aae857cd30f" translate="yes" xml:space="preserve">
          <source>CBMonthEnd.kwds</source>
          <target state="translated">CBMonthEnd.kwds</target>
        </trans-unit>
        <trans-unit id="333b9de7045ba768c8bb1926fe74004ba86f3edc" translate="yes" xml:space="preserve">
          <source>CBMonthEnd.m_offset</source>
          <target state="translated">CBMonthEnd.m_offset</target>
        </trans-unit>
        <trans-unit id="9b730695c3ba755a1b0e6570c1bf845615d918f3" translate="yes" xml:space="preserve">
          <source>CBMonthEnd.month_roll</source>
          <target state="translated">CBMonthEnd.month_roll</target>
        </trans-unit>
        <trans-unit id="1b958f9e84e73d514cc92a78755a314816fc07e8" translate="yes" xml:space="preserve">
          <source>CBMonthEnd.name</source>
          <target state="translated">CBMonthEnd.name</target>
        </trans-unit>
        <trans-unit id="0813e73972541105b10b8f6e7f0b8fa268431253" translate="yes" xml:space="preserve">
          <source>CBMonthEnd.nanos</source>
          <target state="translated">CBMonthEnd.nanos</target>
        </trans-unit>
        <trans-unit id="197dda086a2ab80418236cb346b2470554272afc" translate="yes" xml:space="preserve">
          <source>CBMonthEnd.normalize</source>
          <target state="translated">CBMonthEnd.normalize</target>
        </trans-unit>
        <trans-unit id="24249caa55e583123b6ef0891011c48c10cb5b43" translate="yes" xml:space="preserve">
          <source>CBMonthEnd.offset</source>
          <target state="translated">CBMonthEnd.offset</target>
        </trans-unit>
        <trans-unit id="171753e7829a35df6ad9f764beca8f2076527339" translate="yes" xml:space="preserve">
          <source>CBMonthEnd.onOffset()</source>
          <target state="translated">CBMonthEnd.onOffset()</target>
        </trans-unit>
        <trans-unit id="d0c5377e414fbd9eb91e7ed826182f7b477e3973" translate="yes" xml:space="preserve">
          <source>CBMonthEnd.rollback()</source>
          <target state="translated">CBMonthEnd.rollback()</target>
        </trans-unit>
        <trans-unit id="34e1afaf180fc00524d731b74031f4289e65dae6" translate="yes" xml:space="preserve">
          <source>CBMonthEnd.rollforward()</source>
          <target state="translated">CBMonthEnd.rollforward()</target>
        </trans-unit>
        <trans-unit id="3477bfa987be5737e96ecd908b6b32ea1833a3b8" translate="yes" xml:space="preserve">
          <source>CBMonthEnd.rule_code</source>
          <target state="translated">CBMonthEnd.rule_code</target>
        </trans-unit>
        <trans-unit id="0edd95404ab2003a5242069e0ba9233cc511db53" translate="yes" xml:space="preserve">
          <source>CDay</source>
          <target state="translated">CDay</target>
        </trans-unit>
        <trans-unit id="ccd03003c78be7580fefa52975897f8191ffcfca" translate="yes" xml:space="preserve">
          <source>CDay.apply()</source>
          <target state="translated">CDay.apply()</target>
        </trans-unit>
        <trans-unit id="b470978595d6e1c292c999dffa69b85b1d801534" translate="yes" xml:space="preserve">
          <source>CDay.apply_index()</source>
          <target state="translated">CDay.apply_index()</target>
        </trans-unit>
        <trans-unit id="251320c1201b002fa0c12c6f5761904f987e19da" translate="yes" xml:space="preserve">
          <source>CDay.base</source>
          <target state="translated">CDay.base</target>
        </trans-unit>
        <trans-unit id="909eaf36761b1da1e6183ebc68da39170364b6cc" translate="yes" xml:space="preserve">
          <source>CDay.copy()</source>
          <target state="translated">CDay.copy()</target>
        </trans-unit>
        <trans-unit id="4f1131cf3e0ce01669eb0b455907792764621989" translate="yes" xml:space="preserve">
          <source>CDay.freqstr</source>
          <target state="translated">CDay.freqstr</target>
        </trans-unit>
        <trans-unit id="b2a9682ba54c0f9c6b5b55638019aaeeaeec4f25" translate="yes" xml:space="preserve">
          <source>CDay.isAnchored()</source>
          <target state="translated">CDay.isAnchored()</target>
        </trans-unit>
        <trans-unit id="e547563390cac2bd9f0aeab25d109136678f5011" translate="yes" xml:space="preserve">
          <source>CDay.kwds</source>
          <target state="translated">CDay.kwds</target>
        </trans-unit>
        <trans-unit id="8a315575e630eb97654c6b2d472c351de06f9d18" translate="yes" xml:space="preserve">
          <source>CDay.name</source>
          <target state="translated">CDay.name</target>
        </trans-unit>
        <trans-unit id="7a90130b3ef5726c3fbbf57afac7dfbbb9643486" translate="yes" xml:space="preserve">
          <source>CDay.nanos</source>
          <target state="translated">CDay.nanos</target>
        </trans-unit>
        <trans-unit id="3d376ecf8b8df644741f59bd1fdedcd13568e628" translate="yes" xml:space="preserve">
          <source>CDay.normalize</source>
          <target state="translated">CDay.normalize</target>
        </trans-unit>
        <trans-unit id="242f378c192b8ba237d3682f7ce8e85a66300879" translate="yes" xml:space="preserve">
          <source>CDay.offset</source>
          <target state="translated">CDay.offset</target>
        </trans-unit>
        <trans-unit id="f801ef71ce0c88d51a58283222dbd727099d22b7" translate="yes" xml:space="preserve">
          <source>CDay.onOffset()</source>
          <target state="translated">CDay.onOffset()</target>
        </trans-unit>
        <trans-unit id="8b273063ddfeb00f3fbd6561dca6f8ed38547146" translate="yes" xml:space="preserve">
          <source>CDay.rollback()</source>
          <target state="translated">CDay.rollback()</target>
        </trans-unit>
        <trans-unit id="5c714e93c993d2b534ccf64051eb9749aef36a69" translate="yes" xml:space="preserve">
          <source>CDay.rollforward()</source>
          <target state="translated">CDay.rollforward()</target>
        </trans-unit>
        <trans-unit id="4a6a1ac178e6eb5cce7c58829139508d71d5d253" translate="yes" xml:space="preserve">
          <source>CDay.rule_code</source>
          <target state="translated">CDay.rule_code</target>
        </trans-unit>
        <trans-unit id="aac367e4df21201d2296d58ff096308fac8a2fb0" translate="yes" xml:space="preserve">
          <source>CLN: Code cleanup</source>
          <target state="translated">CLN:代码清理</target>
        </trans-unit>
        <trans-unit id="f2b08eccd5042e525d0e617f3a848548d4c3357c" translate="yes" xml:space="preserve">
          <source>CSS class(es) to apply to the resulting html table.</source>
          <target state="translated">要应用于生成的html表格的CSS类。</target>
        </trans-unit>
        <trans-unit id="21444efa9494abd66434381371c755d1d31f0244" translate="yes" xml:space="preserve">
          <source>CSS classes</source>
          <target state="translated">CSS类</target>
        </trans-unit>
        <trans-unit id="4142c31f9ade153d88101f69671f6996dd2f0036" translate="yes" xml:space="preserve">
          <source>CSS classes are attached to the generated HTML</source>
          <target state="translated">CSS类被附加到生成的HTML中</target>
        </trans-unit>
        <trans-unit id="3281188351b89c8e2db28d6da7af4992d415de90" translate="yes" xml:space="preserve">
          <source>CSV</source>
          <target state="translated">CSV</target>
        </trans-unit>
        <trans-unit id="1cd2cecf23747420eb42a5ddd994b11118a8c1de" translate="yes" xml:space="preserve">
          <source>CSV &amp;amp; text files</source>
          <target state="translated">CSV和文本文件</target>
        </trans-unit>
        <trans-unit id="08ac1a43bfb669a0baeea979968eae0d8a36bd81" translate="yes" xml:space="preserve">
          <source>Calculate TimedeltaArray of difference between index values and index converted to PeriodArray at specified freq.</source>
          <target state="translated">计算指数值和指数转换为PeriodArray之间的差值的TimedeltaArray,在指定的频率。</target>
        </trans-unit>
        <trans-unit id="7dec92724bea9c197938d6867a141e34292bb9ff" translate="yes" xml:space="preserve">
          <source>Calculate TimedeltaArray of difference between index values and index converted to PeriodArray at specified freq. Used for vectorized offsets</source>
          <target state="translated">在指定的频率下,计算索引值和索引转换为PeriodArray之间的差值的TimedeltaArray。用于向量化偏移</target>
        </trans-unit>
        <trans-unit id="1200a2936b9146e16056c6538ec7c61d1d6de5c5" translate="yes" xml:space="preserve">
          <source>Calculate TimedeltaArray of difference between index values and index converted to PeriodArray at specified freq. Used for vectorized offsets.</source>
          <target state="translated">在指定的频率下,计算索引值和索引转换为PeriodArray之间的差值的TimedeltaArray。用于向量化偏移。</target>
        </trans-unit>
        <trans-unit id="bde74733c1f31ddd656c1cde0448ed456d768ed4" translate="yes" xml:space="preserve">
          <source>Calculate expanding correlation.</source>
          <target state="translated">计算扩大相关性。</target>
        </trans-unit>
        <trans-unit id="3af71107d6ea63e2dc273d016489e108b1b493b3" translate="yes" xml:space="preserve">
          <source>Calculate expanding standard deviation.</source>
          <target state="translated">计算扩大标准差。</target>
        </trans-unit>
        <trans-unit id="360cd8f64bc341187c26f909121fea2f8941bf9e" translate="yes" xml:space="preserve">
          <source>Calculate expanding sum of given DataFrame or Series.</source>
          <target state="translated">计算给定DataFrame或Series的膨胀和。</target>
        </trans-unit>
        <trans-unit id="4fbfd75732f526f1460c8ce11d8b4958a0d20cd0" translate="yes" xml:space="preserve">
          <source>Calculate exponential power.</source>
          <target state="translated">计算指数幂。</target>
        </trans-unit>
        <trans-unit id="fcfd95e8eecd4ead623d85fb6ced50f9877e17d6" translate="yes" xml:space="preserve">
          <source>Calculate its length</source>
          <target state="translated">计算其长度</target>
        </trans-unit>
        <trans-unit id="fa636e61add750ce57ec7f6c8748ec75f2d60b3a" translate="yes" xml:space="preserve">
          <source>Calculate modulo (remainder after division).</source>
          <target state="translated">计算模数(除法后的余数)。</target>
        </trans-unit>
        <trans-unit id="c32ca9f7650397fac2e8291af70409209eba6776" translate="yes" xml:space="preserve">
          <source>Calculate pairwise combinations of columns within a DataFrame. If</source>
          <target state="translated">计算DataFrame中列的配对组合。如果</target>
        </trans-unit>
        <trans-unit id="300da0bcbdd41544d489526f5cac8618a2355bc7" translate="yes" xml:space="preserve">
          <source>Calculate pairwise combinations of columns within a DataFrame. If &lt;code&gt;other&lt;/code&gt; is not specified, defaults to &lt;code&gt;True&lt;/code&gt;, otherwise defaults to &lt;code&gt;False&lt;/code&gt;. Not relevant for &lt;a href=&quot;pandas.series#pandas.Series&quot;&gt;&lt;code&gt;Series&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">计算DataFrame中列的成对组合。如果未指定 &lt;code&gt;other&lt;/code&gt; ，则默认为 &lt;code&gt;True&lt;/code&gt; ，否则默认为 &lt;code&gt;False&lt;/code&gt; 。与&lt;a href=&quot;pandas.series#pandas.Series&quot;&gt; &lt;code&gt;Series&lt;/code&gt; &lt;/a&gt;不相关。</target>
        </trans-unit>
        <trans-unit id="840ddbfd478e8cf567a549418e380e3ddcc887e3" translate="yes" xml:space="preserve">
          <source>Calculate pct_change of each value to previous entry in group.</source>
          <target state="translated">计算每一个值与组中前一个值的pct_change。</target>
        </trans-unit>
        <trans-unit id="36f62b2b16cb4b434c58dea980f12708c03f13e5" translate="yes" xml:space="preserve">
          <source>Calculate rolling correlation.</source>
          <target state="translated">计算滚动关联度。</target>
        </trans-unit>
        <trans-unit id="850f20e99de1936bda32ceeff70170b6406276a1" translate="yes" xml:space="preserve">
          <source>Calculate rolling standard deviation.</source>
          <target state="translated">计算滚动标准差。</target>
        </trans-unit>
        <trans-unit id="54f04ca990edc89de8494f94d3cb57d9fe234352" translate="yes" xml:space="preserve">
          <source>Calculate rolling sum of given DataFrame or Series.</source>
          <target state="translated">计算给定DataFrame或Series的滚动和。</target>
        </trans-unit>
        <trans-unit id="42c970e014af3ef2fbaa4a9f91c5c5a60993764d" translate="yes" xml:space="preserve">
          <source>Calculate slice bound that corresponds to given label.</source>
          <target state="translated">计算对应于给定标签的切片边界。</target>
        </trans-unit>
        <trans-unit id="897a0bcc51e675340eb8de452d794c61bbe86ad4" translate="yes" xml:space="preserve">
          <source>Calculate the absolute value element-wise.</source>
          <target state="translated">按元素计算绝对值。</target>
        </trans-unit>
        <trans-unit id="4085961c15d89a811239e096d578fa42188f4fb1" translate="yes" xml:space="preserve">
          <source>Calculate the expanding maximum.</source>
          <target state="translated">计算扩大的最大值。</target>
        </trans-unit>
        <trans-unit id="8a13032e0ec1e2ec55a47ef780f2a8d8a8b246c9" translate="yes" xml:space="preserve">
          <source>Calculate the expanding mean of the values.</source>
          <target state="translated">计算数值的扩大平均值。</target>
        </trans-unit>
        <trans-unit id="8406bf60930113c031af4f23a867ce417712eee3" translate="yes" xml:space="preserve">
          <source>Calculate the expanding median.</source>
          <target state="translated">计算扩大中位数。</target>
        </trans-unit>
        <trans-unit id="f8c750dd6530f857067e77496ee393d943531bc6" translate="yes" xml:space="preserve">
          <source>Calculate the expanding minimum.</source>
          <target state="translated">计算扩大的最小值。</target>
        </trans-unit>
        <trans-unit id="18b74859926373a8c97237bf6ba4212f83b6bfdd" translate="yes" xml:space="preserve">
          <source>Calculate the expanding quantile.</source>
          <target state="translated">计算扩大分位数。</target>
        </trans-unit>
        <trans-unit id="63c9a6f2667f67990f1ec55040b35c0ee42dbb4e" translate="yes" xml:space="preserve">
          <source>Calculate the expanding sample covariance.</source>
          <target state="translated">计算扩大样本协方差。</target>
        </trans-unit>
        <trans-unit id="86b7fe0db43c4dde98e144646b3830fc9aa7c6be" translate="yes" xml:space="preserve">
          <source>Calculate the first day of the month for each entry in a DatetimeIndex</source>
          <target state="translated">计算DatetimeIndex中每个条目的每月第一天。</target>
        </trans-unit>
        <trans-unit id="edb7c7f61b8473e791ed672a9771d92d89e9b853" translate="yes" xml:space="preserve">
          <source>Calculate the rolling maximum.</source>
          <target state="translated">计算滚动最大值。</target>
        </trans-unit>
        <trans-unit id="56f887c8ccbd530c971b5a68cbae83b79086bd95" translate="yes" xml:space="preserve">
          <source>Calculate the rolling mean of the values.</source>
          <target state="translated">计算数值的滚动平均值。</target>
        </trans-unit>
        <trans-unit id="8e584dbbac651d0160592120f9ae199795f612ba" translate="yes" xml:space="preserve">
          <source>Calculate the rolling median.</source>
          <target state="translated">计算滚动中位数。</target>
        </trans-unit>
        <trans-unit id="a3d5f9af24012fcf43bbee8db6ac3031a2d5f0aa" translate="yes" xml:space="preserve">
          <source>Calculate the rolling minimum.</source>
          <target state="translated">计算滚动的最小值。</target>
        </trans-unit>
        <trans-unit id="c00eabfef7ffbb75614ac3d3e272c17d70a5a64f" translate="yes" xml:space="preserve">
          <source>Calculate the rolling quantile.</source>
          <target state="translated">计算滚动分位数。</target>
        </trans-unit>
        <trans-unit id="ef2658f86ca889438eede93a778ad39ed078d2de" translate="yes" xml:space="preserve">
          <source>Calculate the rolling sample covariance.</source>
          <target state="translated">计算滚动样本协方差。</target>
        </trans-unit>
        <trans-unit id="cad97d8d1c39809e78c3e237d0b6512d9b67a1cd" translate="yes" xml:space="preserve">
          <source>Calculate the window mean of the values.</source>
          <target state="translated">计算数值的窗口平均值。</target>
        </trans-unit>
        <trans-unit id="5a9d8c86d4c1d289a0acbebb41be6ce393f46d71" translate="yes" xml:space="preserve">
          <source>Calculate unbiased expanding kurtosis.</source>
          <target state="translated">计算无偏的扩大峰度。</target>
        </trans-unit>
        <trans-unit id="78fa4f8c9ad5717a24fc8615d7126266a8e4e0fe" translate="yes" xml:space="preserve">
          <source>Calculate unbiased expanding variance.</source>
          <target state="translated">计算无偏的扩大方差。</target>
        </trans-unit>
        <trans-unit id="8772816555c47d2670666f6b36cd6cd7ebdfd55c" translate="yes" xml:space="preserve">
          <source>Calculate unbiased rolling kurtosis.</source>
          <target state="translated">计算无偏的滚动峰度。</target>
        </trans-unit>
        <trans-unit id="2c5a9dc3b40f3101ec8c2b35747025814d6a2665" translate="yes" xml:space="preserve">
          <source>Calculate unbiased rolling variance.</source>
          <target state="translated">计算无偏的滚动方差。</target>
        </trans-unit>
        <trans-unit id="9b8132c43c37d9c64f7ce4d1d12e63ceda728a88" translate="yes" xml:space="preserve">
          <source>Calculate unbiased window variance.</source>
          <target state="translated">计算无偏的窗口方差。</target>
        </trans-unit>
        <trans-unit id="c47f3fa51d4804c0519adbb04b58d8b08a868110" translate="yes" xml:space="preserve">
          <source>Calculate window boundaries based on a non-fixed offset such as a BusinessDay</source>
          <target state="translated">根据非固定的偏移量(如工作日)计算窗口边界。</target>
        </trans-unit>
        <trans-unit id="761048fb6f9fbb79430edd1287f1c862a4cba8d1" translate="yes" xml:space="preserve">
          <source>Calculate window standard deviation.</source>
          <target state="translated">计算窗口标准差。</target>
        </trans-unit>
        <trans-unit id="fee6592d4e67645efaff4667f77e78e210964e36" translate="yes" xml:space="preserve">
          <source>Calculate window sum of given DataFrame or Series.</source>
          <target state="translated">计算给定DataFrame或Series的窗口和。</target>
        </trans-unit>
        <trans-unit id="5d4f0817d00f660a767de2d1e73b1708a0f418e8" translate="yes" xml:space="preserve">
          <source>Calculates the difference of a DataFrame element compared with another element in the DataFrame (default is the element in the same column of the previous row).</source>
          <target state="translated">计算DataFrame元素与DataFrame中另一个元素的差异(默认是前一行同一列的元素)。</target>
        </trans-unit>
        <trans-unit id="79bdeeb839dd5f5c1ec4e3fe7964d6d2696e3171" translate="yes" xml:space="preserve">
          <source>Calculates the difference of a Dataframe element compared with another element in the Dataframe (default is element in previous row).</source>
          <target state="translated">计算Dataframe元素与Dataframe中另一个元素的差异(默认为前一行的元素)。</target>
        </trans-unit>
        <trans-unit id="8f697e36345c82dbbb291b1235a7bcfab769bbb7" translate="yes" xml:space="preserve">
          <source>Calculates the difference of a Series element compared with another element in the Series (default is element in previous row).</source>
          <target state="translated">计算一个系列元素与另一个系列元素的差值(默认为前一行的元素)。</target>
        </trans-unit>
        <trans-unit id="8cc60680c3d3b5d1cb926d911a592d51f9801006" translate="yes" xml:space="preserve">
          <source>Calculations with missing data</source>
          <target state="translated">有缺失数据的计算</target>
        </trans-unit>
        <trans-unit id="829008f6ad591390ea8eb6200bd65cb8bb7bf12e" translate="yes" xml:space="preserve">
          <source>Calendar to integrate.</source>
          <target state="translated">日历要整合。</target>
        </trans-unit>
        <trans-unit id="64af04d5ab99c3aa23103e7a2cc0bb2ba2f5888d" translate="yes" xml:space="preserve">
          <source>Call &lt;code&gt;func&lt;/code&gt; on self producing a DataFrame with transformed values and that has the same axis length as self.</source>
          <target state="translated">在self上调用 &lt;code&gt;func&lt;/code&gt; 会生成具有转换后的值且具有与self相同的轴长的DataFrame。</target>
        </trans-unit>
        <trans-unit id="577e8d8f1be91acc70ee418e90120da3d5eee628" translate="yes" xml:space="preserve">
          <source>Call &lt;code&gt;func&lt;/code&gt; on self producing a DataFrame with transformed values.</source>
          <target state="translated">自我调用 &lt;code&gt;func&lt;/code&gt; 会生成具有转换后值的DataFrame。</target>
        </trans-unit>
        <trans-unit id="ec17e54a8e78ba4c5a96f25a2f55f7c4cc217ddc" translate="yes" xml:space="preserve">
          <source>Call &lt;code&gt;func&lt;/code&gt; on self producing a Series with transformed values and that has the same axis length as self.</source>
          <target state="translated">在self上调用 &lt;code&gt;func&lt;/code&gt; 会产生具有转换值的Series，并且其轴长度与self相同。</target>
        </trans-unit>
        <trans-unit id="447a475eb8a61bd03099346762318ba0e6d1a380" translate="yes" xml:space="preserve">
          <source>Call &lt;code&gt;func&lt;/code&gt; on self producing a Series with transformed values.</source>
          <target state="translated">调用 &lt;code&gt;func&lt;/code&gt; 自我产生具有转换值的系列。</target>
        </trans-unit>
        <trans-unit id="c1592bc17cab8932829b88b325d09cea84fba959" translate="yes" xml:space="preserve">
          <source>Call &lt;code&gt;re.findall&lt;/code&gt; on each element, returning DataFrame with one row for each match and one column for each regex capture group</source>
          <target state="translated">在每个元素上调用 &lt;code&gt;re.findall&lt;/code&gt; ，返回DataFrame，其中每个匹配项包含一行，而每个正则表达式捕获组则包含一列</target>
        </trans-unit>
        <trans-unit id="4da3e69182b46038202d54c61121ef6a2aa14f47" translate="yes" xml:space="preserve">
          <source>Call &lt;code&gt;re.match&lt;/code&gt; on each element, returning matched groups as list</source>
          <target state="translated">在每个元素上调用 &lt;code&gt;re.match&lt;/code&gt; ，将匹配的组作为列表返回</target>
        </trans-unit>
        <trans-unit id="169a415683d699feaa71299ffba4ddf4c6a34115" translate="yes" xml:space="preserve">
          <source>Call &lt;code&gt;re.search&lt;/code&gt; on each element, returning DataFrame with one row for each element and one column for each regex capture group</source>
          <target state="translated">对每个元素调用 &lt;code&gt;re.search&lt;/code&gt; ，返回DataFrame，其中每个元素一行，每个正则表达式捕获组一行</target>
        </trans-unit>
        <trans-unit id="b00f1260e91882892b28121f785e3861bbd453b0" translate="yes" xml:space="preserve">
          <source>Call function producing a like-indexed DataFrame on each group and return a DataFrame having the same indexes as the original object filled with the transformed values</source>
          <target state="translated">调用函数在每个组上生成一个类似索引的DataFrame,并返回一个与原始对象具有相同索引的DataFrame,其中填充了转换后的值。</target>
        </trans-unit>
        <trans-unit id="cd8499b64b7e76060d3a1b4ea5424d18b2ceca4c" translate="yes" xml:space="preserve">
          <source>Call function producing a like-indexed Series on each group and return a Series having the same indexes as the original object filled with the transformed values</source>
          <target state="translated">调用函数在每个组上生成一个相同索引的Series,并返回一个与原始对象具有相同索引的Series,其中填充了变换后的值。</target>
        </trans-unit>
        <trans-unit id="bdb72433f4270083c8853ddb3da4a76c8207ea8f" translate="yes" xml:space="preserve">
          <source>Call function producing a like-indexed Series on each group and return a Series with the transformed values.</source>
          <target state="translated">调用函数在每个组上生成一个类似索引的Series,并返回一个转换值的Series。</target>
        </trans-unit>
        <trans-unit id="eef266f410d282365eeaef6f6541415ad4d67585" translate="yes" xml:space="preserve">
          <source>Call self as a function.</source>
          <target state="translated">将self作为函数调用。</target>
        </trans-unit>
        <trans-unit id="66e6f2e7fd9cfff2eadea78bb1e57630d5ca513c" translate="yes" xml:space="preserve">
          <source>Call with not arguments to get a listing for all registered options.</source>
          <target state="translated">调用非参数,以获得所有注册选项的列表。</target>
        </trans-unit>
        <trans-unit id="e55d13fa69e7f82c84df44c8c823d6b406b57e51" translate="yes" xml:space="preserve">
          <source>Callable that returns a boolean Series</source>
          <target state="translated">可调用,返回一个布尔值Series</target>
        </trans-unit>
        <trans-unit id="bdc9be9c9fa405052b15a51bb1a1ce89e7d70906" translate="yes" xml:space="preserve">
          <source>Callable[[Any], str]</source>
          <target state="translated">可调用[[Any],str]</target>
        </trans-unit>
        <trans-unit id="2d31314d01bb388db9ebbd2aee0dad743991a939" translate="yes" xml:space="preserve">
          <source>Caller.</source>
          <target state="translated">Caller.</target>
        </trans-unit>
        <trans-unit id="d27c6a255a41f7f9dd1bdf3025adb912cab3da7c" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;.compute&lt;/code&gt; causes the full task graph to be executed. This includes reading the data, selecting the columns, and doing the &lt;code&gt;value_counts&lt;/code&gt;. The execution is done &lt;em&gt;in parallel&lt;/em&gt; where possible, and Dask tries to keep the overall memory footprint small. You can work with datasets that are much larger than memory, as long as each partition (a regular pandas DataFrame) fits in memory.</source>
          <target state="translated">调用 &lt;code&gt;.compute&lt;/code&gt; 将导致执行完整任务图。这包括读取数据，选择列以及执行 &lt;code&gt;value_counts&lt;/code&gt; 。在可能的情况下，&lt;em&gt;并行&lt;/em&gt;执行该执行，Dask尝试使整体内存占用量保持较小。只要每个分区（常规pandas DataFrame）都适合内存，就可以使用比内存大得多的数据集。</target>
        </trans-unit>
        <trans-unit id="747d0e40b4d16bb8039df11373ff262c1de48eec" translate="yes" xml:space="preserve">
          <source>Calling a DataFrame&amp;rsquo;s &lt;a href=&quot;../reference/api/pandas.dataframe.plot.bar#pandas.DataFrame.plot.bar&quot;&gt;&lt;code&gt;plot.bar()&lt;/code&gt;&lt;/a&gt; method produces a multiple bar plot:</source>
          <target state="translated">调用DataFrame的&lt;a href=&quot;../reference/api/pandas.dataframe.plot.bar#pandas.DataFrame.plot.bar&quot;&gt; &lt;code&gt;plot.bar()&lt;/code&gt; &lt;/a&gt;方法会生成多条图：</target>
        </trans-unit>
        <trans-unit id="2f23426d9525ea2bddbfac92691f7afacf174b5a" translate="yes" xml:space="preserve">
          <source>Calling object with DataFrame data.</source>
          <target state="translated">调用DataFrame数据的对象。</target>
        </trans-unit>
        <trans-unit id="4974f7b15c8997f459d81350abfb253b6a3d346b" translate="yes" xml:space="preserve">
          <source>Calling object with DataFrames.</source>
          <target state="translated">用DataFrames调用对象。</target>
        </trans-unit>
        <trans-unit id="1ee2e652b90c42a69eda5f79342a0b1a333e012b" translate="yes" xml:space="preserve">
          <source>Calling object with Series data.</source>
          <target state="translated">使用Series数据调用对象。</target>
        </trans-unit>
        <trans-unit id="bb4a54fa51f71d8e249d77ad8a0277a922b576da" translate="yes" xml:space="preserve">
          <source>Calling object with a DataFrame.</source>
          <target state="translated">用DataFrame调用对象。</target>
        </trans-unit>
        <trans-unit id="2f908f58ee504c24947256630c6c1dce6269da91" translate="yes" xml:space="preserve">
          <source>Calling object with a Series.</source>
          <target state="translated">用Series调用对象。</target>
        </trans-unit>
        <trans-unit id="bebb024ff35bea7821d88061d262e15bebf744bf" translate="yes" xml:space="preserve">
          <source>Calling object, as there is only one level in the Index.</source>
          <target state="translated">调用对象,因为索引中只有一级。</target>
        </trans-unit>
        <trans-unit id="d590b1042b60e0970ad65e26a6699d8ebc936ed5" translate="yes" xml:space="preserve">
          <source>Calling on an &lt;code&gt;Index&lt;/code&gt; with a regex with exactly one capture group returns a &lt;code&gt;DataFrame&lt;/code&gt; with one column if &lt;code&gt;expand=True&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;expand=True&lt;/code&gt; ,则使用正则表达式和正好具有一个捕获组的 &lt;code&gt;Index&lt;/code&gt; 调用一个返回带有一列的 &lt;code&gt;DataFrame&lt;/code&gt; 的。</target>
        </trans-unit>
        <trans-unit id="2b6a282d75ff920f4c4664dc3ac148fcd48f0941" translate="yes" xml:space="preserve">
          <source>Calling on an &lt;code&gt;Index&lt;/code&gt; with a regex with more than one capture group returns a &lt;code&gt;DataFrame&lt;/code&gt; if &lt;code&gt;expand=True&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;expand=True&lt;/code&gt; ,则使用具有多个捕获组的正则表达式调用 &lt;code&gt;Index&lt;/code&gt; 返回一个 &lt;code&gt;DataFrame&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9ab0de4c215386754c266357a84881160dda184f" translate="yes" xml:space="preserve">
          <source>Calling the DataFrame without the list of column names would display all columns (akin to SQL&amp;rsquo;s &lt;code&gt;*&lt;/code&gt;).</source>
          <target state="translated">调用不带列名列表的DataFrame将显示所有列（类似于SQL的 &lt;code&gt;*&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="9a9b1820789105336d5540378d418f29fa2792f3" translate="yes" xml:space="preserve">
          <source>Calling the standard Python &lt;code&gt;len&lt;/code&gt; function on the GroupBy object just returns the length of the &lt;code&gt;groups&lt;/code&gt; dict, so it is largely just a convenience:</source>
          <target state="translated">在GroupBy对象上调用标准Python &lt;code&gt;len&lt;/code&gt; 函数仅返回 &lt;code&gt;groups&lt;/code&gt; dict的长度，因此在很大程度上只是一个方便：</target>
        </trans-unit>
        <trans-unit id="31e074f4754f2dae3a164e7883eab76b93c18c9a" translate="yes" xml:space="preserve">
          <source>Calling this method does not change the ordering of the values.</source>
          <target state="translated">调用此方法不会改变值的排序。</target>
        </trans-unit>
        <trans-unit id="099d4c5b1d999ebde497cb7de984c1445edc8da6" translate="yes" xml:space="preserve">
          <source>Can also accept a Numba JIT function with &lt;code&gt;engine='numba'&lt;/code&gt; specified.</source>
          <target state="translated">也可以接受指定了 &lt;code&gt;engine='numba'&lt;/code&gt; 的Numba JIT函数。</target>
        </trans-unit>
        <trans-unit id="dd6ed607530b2cbedb74d85e10d900571348ec4f" translate="yes" xml:space="preserve">
          <source>Can also accept a Numba JIT function with &lt;code&gt;engine='numba'&lt;/code&gt; specified. Only passing a single function is supported with this engine.</source>
          <target state="translated">也可以接受指定了 &lt;code&gt;engine='numba'&lt;/code&gt; 的Numba JIT函数。此引擎仅支持传递单个功能。</target>
        </trans-unit>
        <trans-unit id="3d68a3863769d405d2d9edfaa0dde04b6102a30a" translate="yes" xml:space="preserve">
          <source>Can also add a layer of hierarchical indexing on the concatenation axis, which may be useful if the labels are the same (or overlapping) on the passed axis number.</source>
          <target state="translated">还可以在连接轴上添加一层层次索引,如果传递的轴号上的标签相同(或重叠),这可能是有用的。</target>
        </trans-unit>
        <trans-unit id="b0eaf587976d5bd06acf92837e4d9ecf0cea9c98" translate="yes" xml:space="preserve">
          <source>Can be &amp;ldquo;&amp;gt;&amp;rdquo;, &amp;ldquo;&amp;lt;&amp;rdquo;, &amp;ldquo;little&amp;rdquo;, or &amp;ldquo;big&amp;rdquo;. default is</source>
          <target state="translated">可以是&amp;ldquo;&amp;gt;&amp;rdquo;，&amp;ldquo; &amp;lt;&amp;rdquo;，&amp;ldquo;小&amp;rdquo;或&amp;ldquo;大&amp;rdquo;。默认是</target>
        </trans-unit>
        <trans-unit id="b5919c621028ad19e82becc9a3bb5215ebce7eb4" translate="yes" xml:space="preserve">
          <source>Can be &amp;ldquo;&amp;gt;&amp;rdquo;, &amp;ldquo;&amp;lt;&amp;rdquo;, &amp;ldquo;little&amp;rdquo;, or &amp;ldquo;big&amp;rdquo;. default is &lt;code&gt;sys.byteorder&lt;/code&gt;.</source>
          <target state="translated">可以是&amp;ldquo;&amp;gt;&amp;rdquo;，&amp;ldquo; &amp;lt;&amp;rdquo;，&amp;ldquo;小&amp;rdquo;或&amp;ldquo;大&amp;rdquo;。默认值为 &lt;code&gt;sys.byteorder&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cb3c9ad081211024fca4d3eb6a9219ec67535ab9" translate="yes" xml:space="preserve">
          <source>Can be any valid input to groupby</source>
          <target state="translated">可以是groupby的任何有效输入</target>
        </trans-unit>
        <trans-unit id="0b7bb8ebbe69455dedb0203673d5a093a8f33019" translate="yes" xml:space="preserve">
          <source>Can be any valid input to groupby.</source>
          <target state="translated">可以是groupby的任何有效输入。</target>
        </trans-unit>
        <trans-unit id="e4283d456b8e46842ad260f227901d59c9c21e50" translate="yes" xml:space="preserve">
          <source>Can be applied to a second style with &lt;code&gt;Styler.use&lt;/code&gt;.</source>
          <target state="translated">可以通过 &lt;code&gt;Styler.use&lt;/code&gt; 应用于第二种样式。</target>
        </trans-unit>
        <trans-unit id="4aca382222f840171413dec4e13d7f9683e7b728" translate="yes" xml:space="preserve">
          <source>Can be ufunc (a NumPy function that applies to the entire Series) or a Python function that only works on single values.</source>
          <target state="translated">可以是ufunc (一个适用于整个Series的NumPy函数),也可以是一个只适用于单个值的Python函数。</target>
        </trans-unit>
        <trans-unit id="5a844d92fe4d043fa4adb5ec6a8fd4daeedba6f7" translate="yes" xml:space="preserve">
          <source>Can choose to replace values other than NA. Return True for values that should be updated.</source>
          <target state="translated">可以选择替换NA以外的值。对于应该更新的值,返回True。</target>
        </trans-unit>
        <trans-unit id="77b464d81361cebd15b5a778a02ad6759080a317" translate="yes" xml:space="preserve">
          <source>Can evaluate an expression or function to create new values for a column.</source>
          <target state="translated">可以评估一个表达式或函数,为一列创建新的值。</target>
        </trans-unit>
        <trans-unit id="892d52c41927e6a10480a6f220ef511fb4bb239d" translate="yes" xml:space="preserve">
          <source>Can only compare identically-labeled (i.e. same shape, identical row and column labels) DataFrames</source>
          <target state="translated">只能比较相同标签(即相同的形状,相同的行和列标签)的DataFrames。</target>
        </trans-unit>
        <trans-unit id="6e345e095342b6afcb0ec105cc7a85b8ad1511f9" translate="yes" xml:space="preserve">
          <source>Cannot be set if</source>
          <target state="translated">在以下情况下不能设置</target>
        </trans-unit>
        <trans-unit id="7a38a967680be46b805ca59a37a68e56e0128428" translate="yes" xml:space="preserve">
          <source>Cannot be set if &lt;code&gt;pat&lt;/code&gt; is a compiled regex</source>
          <target state="translated">如果 &lt;code&gt;pat&lt;/code&gt; 是已编译的正则表达式，则无法设置</target>
        </trans-unit>
        <trans-unit id="91e9089813b34c7e6940e72b56c35b56fe3c19e9" translate="yes" xml:space="preserve">
          <source>Cannot be set to False if</source>
          <target state="translated">在以下情况下不能设置为False</target>
        </trans-unit>
        <trans-unit id="18357ac154b52d09a4800eac362a21679c4a9c27" translate="yes" xml:space="preserve">
          <source>Cannot be set to False if &lt;code&gt;pat&lt;/code&gt; is a compiled regex or &lt;code&gt;repl&lt;/code&gt; is a callable.</source>
          <target state="translated">如果 &lt;code&gt;pat&lt;/code&gt; 是已编译的正则表达式或 &lt;code&gt;repl&lt;/code&gt; 是可调用的，则不能设置为False 。</target>
        </trans-unit>
        <trans-unit id="e2fbecc6c186b50d28c2ebcf72d3a73235b725fe" translate="yes" xml:space="preserve">
          <source>Caption to attach to the table.</source>
          <target state="translated">附在表中的标题。</target>
        </trans-unit>
        <trans-unit id="1201f5be65e0b58542aaf0a90394b6f142fa1fdc" translate="yes" xml:space="preserve">
          <source>Captions</source>
          <target state="translated">Captions</target>
        </trans-unit>
        <trans-unit id="eaad57de04203ff12d8e6b908882f8cdb382e2bf" translate="yes" xml:space="preserve">
          <source>Capture group names are used for column names of the result.</source>
          <target state="translated">采集组名称用于结果的列名。</target>
        </trans-unit>
        <trans-unit id="cd48dc81ac51ede2775f66c3afe277ea32fa170f" translate="yes" xml:space="preserve">
          <source>Cast a numpy array to a specified type.</source>
          <target state="translated">将一个numpy数组转换为指定类型。</target>
        </trans-unit>
        <trans-unit id="3afe62d80f9ae3682ad4518813aa5e7b262d3ae9" translate="yes" xml:space="preserve">
          <source>Cast a pandas object to a specified dtype &lt;code&gt;dtype&lt;/code&gt;.</source>
          <target state="translated">将pandas对象转换为指定的dtype &lt;code&gt;dtype&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c78c90568308a9135347c4d827e900aa8183c86f" translate="yes" xml:space="preserve">
          <source>Cast all columns to int32:</source>
          <target state="translated">将所有的柱子都转为int32。</target>
        </trans-unit>
        <trans-unit id="90996126ba85ca200dc1a975fde0e43153df3134" translate="yes" xml:space="preserve">
          <source>Cast argument to a specified dtype.</source>
          <target state="translated">将参数投向指定的dtype。</target>
        </trans-unit>
        <trans-unit id="3396252038d98a6a09fc0a5da74a8c2ca78fb94b" translate="yes" xml:space="preserve">
          <source>Cast col1 to int32 using a dictionary:</source>
          <target state="translated">使用字典将col1转为int32。</target>
        </trans-unit>
        <trans-unit id="f134c1795b16936f211817a0716ac33c86717fbd" translate="yes" xml:space="preserve">
          <source>Cast index labels to a different type:</source>
          <target state="translated">将索引标签投向不同的类型。</target>
        </trans-unit>
        <trans-unit id="8d6327b68c07c079752f6d880a38a051ff806038" translate="yes" xml:space="preserve">
          <source>Cast to</source>
          <target state="translated">投向</target>
        </trans-unit>
        <trans-unit id="df4955fa99651a21d032c65acbbb0b2d0d394eef" translate="yes" xml:space="preserve">
          <source>Cast to DatetimeArray/Index.</source>
          <target state="translated">铸成DatetimeArray/Index。</target>
        </trans-unit>
        <trans-unit id="5a35ea3e433645048284145bb0f9f063bec2576a" translate="yes" xml:space="preserve">
          <source>Cast to DatetimeIndex of Timestamps, at &lt;em&gt;beginning&lt;/em&gt; of period.</source>
          <target state="translated">在时段&lt;em&gt;开始&lt;/em&gt;时转换为时间戳的DatetimeIndex 。</target>
        </trans-unit>
        <trans-unit id="cb88a879f730800091a568064ba604663179f10f" translate="yes" xml:space="preserve">
          <source>Cast to DatetimeIndex of timestamps, at &lt;em&gt;beginning&lt;/em&gt; of period.</source>
          <target state="translated">在时段&lt;em&gt;开始时&lt;/em&gt;将其强制转换为时间戳的DatetimeIndex 。</target>
        </trans-unit>
        <trans-unit id="919bd6cbab254b7def740b5d6fbffb81a6d4c2bf" translate="yes" xml:space="preserve">
          <source>Cast to PeriodArray/Index at a particular frequency.</source>
          <target state="translated">在特定频率下投向PeriodArray/Index。</target>
        </trans-unit>
        <trans-unit id="2540a54a523dac3fc5ab168d60f203efda48fb82" translate="yes" xml:space="preserve">
          <source>Cast to a NumPy array with &amp;lsquo;dtype&amp;rsquo;.</source>
          <target state="translated">转换为具有'dtype'的NumPy数组。</target>
        </trans-unit>
        <trans-unit id="8528ae94e2e148afb1dc7ce9973ecc62392671c1" translate="yes" xml:space="preserve">
          <source>Categorical</source>
          <target state="translated">Categorical</target>
        </trans-unit>
        <trans-unit id="b6c0e85b6e1038f0193aeaf324e427617c7aa526" translate="yes" xml:space="preserve">
          <source>Categorical : when the input is a Categorical dtype</source>
          <target state="translated">Categorical:当输入为Categorical dtype时。</target>
        </trans-unit>
        <trans-unit id="2db2cf1f98b2571e6cd3afec358ae7e56af5c5b4" translate="yes" xml:space="preserve">
          <source>Categorical &lt;code&gt;Series&lt;/code&gt; or columns in a &lt;code&gt;DataFrame&lt;/code&gt; can be created in several ways:</source>
          <target state="translated">可以通过几种方式在 &lt;code&gt;DataFrame&lt;/code&gt; 中创建分类 &lt;code&gt;Series&lt;/code&gt; 或列：</target>
        </trans-unit>
        <trans-unit id="f551e258210d980d4f7d3ad8ad3ef24cbf7011aa" translate="yes" xml:space="preserve">
          <source>Categorical accessor</source>
          <target state="translated">分类配件</target>
        </trans-unit>
        <trans-unit id="af1d455769f1a79e43b75ac1eff2ba880612d5f4" translate="yes" xml:space="preserve">
          <source>Categorical components</source>
          <target state="translated">分类组件</target>
        </trans-unit>
        <trans-unit id="65644ced85eb53271f5518bd55233d23dc99918f" translate="yes" xml:space="preserve">
          <source>Categorical data</source>
          <target state="translated">分类数据</target>
        </trans-unit>
        <trans-unit id="19d6cdafff3fc1da5d0931715fd4f855fa672756" translate="yes" xml:space="preserve">
          <source>Categorical data can be stored in a &lt;a href=&quot;api/pandas.categorical#pandas.Categorical&quot;&gt;&lt;code&gt;pandas.Categorical&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">分类数据可以存储在&lt;a href=&quot;api/pandas.categorical#pandas.Categorical&quot;&gt; &lt;code&gt;pandas.Categorical&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cdb8f01dbe0f362a09bb2b77d5049a54c88051aa" translate="yes" xml:space="preserve">
          <source>Categorical data has a &lt;code&gt;categories&lt;/code&gt; and a &lt;code&gt;ordered&lt;/code&gt; property, which list their possible values and whether the ordering matters or not. These properties are exposed as &lt;code&gt;s.cat.categories&lt;/code&gt; and &lt;code&gt;s.cat.ordered&lt;/code&gt;. If you don&amp;rsquo;t manually specify categories and ordering, they are inferred from the passed arguments.</source>
          <target state="translated">分类数据具有 &lt;code&gt;categories&lt;/code&gt; 和 &lt;code&gt;ordered&lt;/code&gt; 属性，它们列出了它们的可能值以及排序是否重要。这些属性显示为 &lt;code&gt;s.cat.categories&lt;/code&gt; 和 &lt;code&gt;s.cat.ordered&lt;/code&gt; 。如果您不手动指定类别和顺序，则可以从传递的参数中推断出它们。</target>
        </trans-unit>
        <trans-unit id="b33c43d6eb71e2e4b34c3ec86e32d5202d00541c" translate="yes" xml:space="preserve">
          <source>Categorical data has a specific &lt;code&gt;category&lt;/code&gt;&lt;a href=&quot;../getting_started/basics#basics-dtypes&quot;&gt;dtype&lt;/a&gt;:</source>
          <target state="translated">分类数据具有特定的 &lt;code&gt;category&lt;/code&gt; &lt;a href=&quot;../getting_started/basics#basics-dtypes&quot;&gt;dtype&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="5f1d74df2e1dc7c3da3c014d263de5c7c0474518" translate="yes" xml:space="preserve">
          <source>Categorical data has a specific &lt;code&gt;category&lt;/code&gt;&lt;a href=&quot;basics#basics-dtypes&quot;&gt;dtype&lt;/a&gt;:</source>
          <target state="translated">分类数据具有特定的 &lt;code&gt;category&lt;/code&gt; &lt;a href=&quot;basics#basics-dtypes&quot;&gt;dtype&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="723414d82453ef0fa3d7a9edd6643a01c879b6e2" translate="yes" xml:space="preserve">
          <source>Categorical index</source>
          <target state="translated">分类指数</target>
        </trans-unit>
        <trans-unit id="68c2a4833dc02975a1de4ba06c33ead027af2d1f" translate="yes" xml:space="preserve">
          <source>Categorical is not a numpy array</source>
          <target state="translated">Categorical不是一个numpy数组。</target>
        </trans-unit>
        <trans-unit id="491163921e6191ccb53eb4db02988471d04ad6ca" translate="yes" xml:space="preserve">
          <source>Categorical label contains more than 32,000 characters</source>
          <target state="translated">分类标签包含超过32,000个字符。</target>
        </trans-unit>
        <trans-unit id="e6668b44f374a0f1d4ce2fd1406b90791d8fee77" translate="yes" xml:space="preserve">
          <source>Categorical or None</source>
          <target state="translated">绝对或无</target>
        </trans-unit>
        <trans-unit id="9a92e20f74b258b0f3628d165ccda3f3a1e3cfb7" translate="yes" xml:space="preserve">
          <source>Categorical variables read through an iterator may not have the same categories and dtype. This occurs when a variable stored in a DTA file is associated to an incomplete set of value labels that only label a strict subset of the values.</source>
          <target state="translated">通过迭代器读取的分类变量可能没有相同的类别和dtype。当一个存储在DTA文件中的变量与一个不完整的值标签集相关联时,就会发生这种情况,而这些值标签集只标注了一个严格的值子集。</target>
        </trans-unit>
        <trans-unit id="6a9c358f5e731dc533e11b16b1323e1b27a2624f" translate="yes" xml:space="preserve">
          <source>Categorical variables represented as instance of pandas&amp;rsquo;s &lt;code&gt;Categorical&lt;/code&gt; class can be used as group keys. If so, the order of the levels will be preserved:</source>
          <target state="translated">表示为熊猫的 &lt;code&gt;Categorical&lt;/code&gt; 类实例的类别变量可用作组键。如果是这样，将保留级别的顺序：</target>
        </trans-unit>
        <trans-unit id="fc52e9accb416b542a49ce50b0ebcd44071552f6" translate="yes" xml:space="preserve">
          <source>Categorical with new categories added or None if &lt;code&gt;inplace=True&lt;/code&gt;.</source>
          <target state="translated">添加了新类别的类别，如果 &lt;code&gt;inplace=True&lt;/code&gt; ,则为None 。</target>
        </trans-unit>
        <trans-unit id="8aa08bd63fb30e802a2ec632ea06635a8eba86d5" translate="yes" xml:space="preserve">
          <source>Categorical with removed categories or None if &lt;code&gt;inplace=True&lt;/code&gt;.</source>
          <target state="translated">类别已删除的类别；如果 &lt;code&gt;inplace=True&lt;/code&gt; ,则为None 。</target>
        </trans-unit>
        <trans-unit id="9dd90a498e42dc2f0680e4bd847b44d1af00ce2b" translate="yes" xml:space="preserve">
          <source>Categorical with reordered categories or None if inplace.</source>
          <target state="translated">有重新排序的分类,如果在原地,则为无。</target>
        </trans-unit>
        <trans-unit id="4dfde3fdeea80e7c40dd5d23fcc06817d22febe4" translate="yes" xml:space="preserve">
          <source>Categorical with unused categories dropped or None if &lt;code&gt;inplace=True&lt;/code&gt;.</source>
          <target state="translated">具有未使用类别的分类被删除；如果 &lt;code&gt;inplace=True&lt;/code&gt; ,则分类为None 。</target>
        </trans-unit>
        <trans-unit id="4e7fc16052b6e3846ce87315fd3a672bfcb7f9b1" translate="yes" xml:space="preserve">
          <source>Categorical()</source>
          <target state="translated">Categorical()</target>
        </trans-unit>
        <trans-unit id="f0e818e7cb07757fb84ec5842fa6045c96ccb9bf" translate="yes" xml:space="preserve">
          <source>Categorical, CategoricalIndex, or Series with dtype=&amp;rsquo;category&amp;rsquo;.</source>
          <target state="translated">具有dtype ='category'的Categorical，CategoricalIndex或Series。</target>
        </trans-unit>
        <trans-unit id="1394f5c3380caf0dd8d74771b41257faf3596ce1" translate="yes" xml:space="preserve">
          <source>Categorical-dtype specific methods and attributes are available under the &lt;code&gt;Series.cat&lt;/code&gt; accessor.</source>
          <target state="translated">在 &lt;code&gt;Series.cat&lt;/code&gt; 访问器下可以使用特定于类别dtype的方法和属性。</target>
        </trans-unit>
        <trans-unit id="5a0d2f1a806c404f4d559514b89f48083f9d193d" translate="yes" xml:space="preserve">
          <source>Categorical.__array__()</source>
          <target state="translated">Categorical.__array__()</target>
        </trans-unit>
        <trans-unit id="e5bfe1ba592c8308c10b368c5366a52c1abbc641" translate="yes" xml:space="preserve">
          <source>Categorical.categories</source>
          <target state="translated">Categorical.categories</target>
        </trans-unit>
        <trans-unit id="65b67237a2d8a8dc5d769e16d4c1a18fa721763e" translate="yes" xml:space="preserve">
          <source>Categorical.codes</source>
          <target state="translated">Categorical.codes</target>
        </trans-unit>
        <trans-unit id="50d64782ecc617772b51a0f12a3a0bdcaabe17c1" translate="yes" xml:space="preserve">
          <source>Categorical.dtype</source>
          <target state="translated">Categorical.dtype</target>
        </trans-unit>
        <trans-unit id="696b10a3829c28bae2e28b2c055e4203f716754b" translate="yes" xml:space="preserve">
          <source>Categorical.from_codes()</source>
          <target state="translated">Categorical.from_codes()</target>
        </trans-unit>
        <trans-unit id="e86cdad0b5d5ce67f3ac07f2bb694ace1c428acd" translate="yes" xml:space="preserve">
          <source>Categorical.ordered</source>
          <target state="translated">Categorical.ordered</target>
        </trans-unit>
        <trans-unit id="7bf923a9b309df1570f3eae0d18eb6349ca22527" translate="yes" xml:space="preserve">
          <source>Categorical: &lt;code&gt;'categorical'&lt;/code&gt;</source>
          <target state="translated">类别： &lt;code&gt;'categorical'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9b70053f969e0425da037b442dcf24227286d85f" translate="yes" xml:space="preserve">
          <source>CategoricalDtype</source>
          <target state="translated">CategoricalDtype</target>
        </trans-unit>
        <trans-unit id="c4035a91edeb10313ddd45340ece7cd7954d76e0" translate="yes" xml:space="preserve">
          <source>CategoricalDtype()</source>
          <target state="translated">CategoricalDtype()</target>
        </trans-unit>
        <trans-unit id="c169a4bff5395ea24ffc600e37c2644bb8fc0508" translate="yes" xml:space="preserve">
          <source>CategoricalDtype.categories</source>
          <target state="translated">CategoricalDtype.categories</target>
        </trans-unit>
        <trans-unit id="f59c0d1c108467a32cbc26cc8dd83280810b949e" translate="yes" xml:space="preserve">
          <source>CategoricalDtype.ordered</source>
          <target state="translated">CategoricalDtype.ordered</target>
        </trans-unit>
        <trans-unit id="bfddf732e2e8da032626c8952317e320dfe0372f" translate="yes" xml:space="preserve">
          <source>CategoricalIndex</source>
          <target state="translated">CategoricalIndex</target>
        </trans-unit>
        <trans-unit id="962fee8c3e84b8294ce901be56be7c636081e66a" translate="yes" xml:space="preserve">
          <source>CategoricalIndex, like Categorical, can only take on a limited, and usually fixed, number of possible values (</source>
          <target state="translated">CategoricalIndex和Categorical一样,只能取一个有限的,通常是固定的,可能的数值 (</target>
        </trans-unit>
        <trans-unit id="15bec1bea4e1a753bad82ce87a7c9c7a32ef767c" translate="yes" xml:space="preserve">
          <source>CategoricalIndex, like Categorical, can only take on a limited, and usually fixed, number of possible values (&lt;code&gt;categories&lt;/code&gt;). Also, like Categorical, it might have an order, but numerical operations (additions, divisions, &amp;hellip;) are not possible.</source>
          <target state="translated">与Categorical一样，CategoricalIndex只能采用有限数量的（通常是固定的）可能的值（ &lt;code&gt;categories&lt;/code&gt; ）。此外，像分类法一样，它可能具有顺序，但是数字运算（加法，除法&amp;hellip;&amp;hellip;）是不可能的。</target>
        </trans-unit>
        <trans-unit id="38accf3e9af13df9f5a6bae403b50a85984e0470" translate="yes" xml:space="preserve">
          <source>CategoricalIndex.add_categories()</source>
          <target state="translated">CategoricalIndex.add_categories()</target>
        </trans-unit>
        <trans-unit id="cb65a60124086f38594e9292efeb5b732ef5ec90" translate="yes" xml:space="preserve">
          <source>CategoricalIndex.as_ordered()</source>
          <target state="translated">CategoricalIndex.as_ordered()</target>
        </trans-unit>
        <trans-unit id="512b6d0f45c49486470124cbeb418be60f404666" translate="yes" xml:space="preserve">
          <source>CategoricalIndex.as_unordered()</source>
          <target state="translated">CategoricalIndex.as_unordered()</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
