<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="phoenix">
    <body>
      <group id="phoenix">
        <trans-unit id="a6cf1d8af5af2a25fd80f311ae513c176bc7fe41" translate="yes" xml:space="preserve">
          <source>Broadcasts message on given topic only for the current node.</source>
          <target state="translated">只对当前节点广播指定主题的消息。</target>
        </trans-unit>
        <trans-unit id="7502e5d44055067546fa115fcbb0ed4dfdcfae02" translate="yes" xml:space="preserve">
          <source>Broadcasts message on given topic to a given node.</source>
          <target state="translated">将给定主题的消息广播到给定节点。</target>
        </trans-unit>
        <trans-unit id="1ba7c5fe02bf40bcee64e896b6cd0ddf2b71ca36" translate="yes" xml:space="preserve">
          <source>Broadcasts message on given topic, to a single node</source>
          <target state="translated">将给定主题的消息广播到一个节点上。</target>
        </trans-unit>
        <trans-unit id="da681bfc05555f8cac2c5c0c250337cfb697db18" translate="yes" xml:space="preserve">
          <source>Broadcasts message on given topic, to a single node.</source>
          <target state="translated">将给定主题的消息广播到单个节点。</target>
        </trans-unit>
        <trans-unit id="baaf416dc33a67c455e18b0b538a1ae5730c71d0" translate="yes" xml:space="preserve">
          <source>Broadcasts message on given topic.</source>
          <target state="translated">播放指定主题的信息。</target>
        </trans-unit>
        <trans-unit id="1edade3815a385432e990fc315fdd6e6c7f1f398" translate="yes" xml:space="preserve">
          <source>Broadcasts message to all but &lt;code&gt;from_pid&lt;/code&gt; on given topic</source>
          <target state="translated">向除给定主题外的 &lt;code&gt;from_pid&lt;/code&gt; 广播消息</target>
        </trans-unit>
        <trans-unit id="abc20b7ef90b188eb547d7592ee2970a9b5990ac" translate="yes" xml:space="preserve">
          <source>Broadcasts message to all but &lt;code&gt;from_pid&lt;/code&gt; on given topic, to a single node</source>
          <target state="translated">将消息从给定主题上的所有消息（除了 &lt;code&gt;from_pid&lt;/code&gt; 之外)广播到单个节点</target>
        </trans-unit>
        <trans-unit id="5000b61642c547143460a6ec6ae2892cc6264673" translate="yes" xml:space="preserve">
          <source>Broadcasts message to all but &lt;code&gt;from_pid&lt;/code&gt; on given topic, to a single node.</source>
          <target state="translated">将消息发送给给定主题上的 &lt;code&gt;from_pid&lt;/code&gt; 以外的所有消息，并传播给单个节点。</target>
        </trans-unit>
        <trans-unit id="f95185ce0e58abc03f073ee2890ea397829aef49" translate="yes" xml:space="preserve">
          <source>Broadcasts message to all but &lt;code&gt;from_pid&lt;/code&gt; on given topic, to a single node. See &lt;a href=&quot;phoenix.pubsub#broadcast/3&quot;&gt;&lt;code&gt;Phoenix.PubSub.broadcast/3&lt;/code&gt;&lt;/a&gt; for usage details</source>
          <target state="translated">将消息发送给给定主题上的 &lt;code&gt;from_pid&lt;/code&gt; 以外的所有消息，并传播给单个节点。有关用法的详细信息，请参见&lt;a href=&quot;phoenix.pubsub#broadcast/3&quot;&gt; &lt;code&gt;Phoenix.PubSub.broadcast/3&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e35e10e515b1d4d457f40e4fc28748a3276eba76" translate="yes" xml:space="preserve">
          <source>Broadcasts message to all but &lt;code&gt;from_pid&lt;/code&gt; on given topic, to a single node. See &lt;a href=&quot;phoenix.pubsub#broadcast/3&quot;&gt;&lt;code&gt;Phoenix.PubSub.broadcast/3&lt;/code&gt;&lt;/a&gt; for usage details.</source>
          <target state="translated">将消息发送给给定主题上的 &lt;code&gt;from_pid&lt;/code&gt; 以外的所有消息，并传播给单个节点。有关用法的详细信息，请参见&lt;a href=&quot;phoenix.pubsub#broadcast/3&quot;&gt; &lt;code&gt;Phoenix.PubSub.broadcast/3&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="01215d649649c533e41cf42ecf38e606611b58b5" translate="yes" xml:space="preserve">
          <source>Broadcasts message to all but &lt;code&gt;from_pid&lt;/code&gt; on given topic.</source>
          <target state="translated">向除了给定主题的 &lt;code&gt;from_pid&lt;/code&gt; 以外的所有消息广播消息。</target>
        </trans-unit>
        <trans-unit id="50197b0c83c20aa8e60756157bf676b3db8808b4" translate="yes" xml:space="preserve">
          <source>Broadcasts message to all but &lt;code&gt;from_pid&lt;/code&gt; on given topic. See &lt;a href=&quot;phoenix.pubsub#broadcast/3&quot;&gt;&lt;code&gt;Phoenix.PubSub.broadcast/3&lt;/code&gt;&lt;/a&gt; for usage details</source>
          <target state="translated">向除了给定主题的 &lt;code&gt;from_pid&lt;/code&gt; 以外的所有消息广播消息。有关用法的详细信息，请参见&lt;a href=&quot;phoenix.pubsub#broadcast/3&quot;&gt; &lt;code&gt;Phoenix.PubSub.broadcast/3&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4cfdbf59168f78dca54b31b9369a0c8edad45fdd" translate="yes" xml:space="preserve">
          <source>Broadcasts message to all but &lt;code&gt;from_pid&lt;/code&gt; on given topic. See &lt;a href=&quot;phoenix.pubsub#broadcast/3&quot;&gt;&lt;code&gt;Phoenix.PubSub.broadcast/3&lt;/code&gt;&lt;/a&gt; for usage details.</source>
          <target state="translated">向除了给定主题的 &lt;code&gt;from_pid&lt;/code&gt; 以外的所有消息广播消息。有关用法的详细信息，请参见&lt;a href=&quot;phoenix.pubsub#broadcast/3&quot;&gt; &lt;code&gt;Phoenix.PubSub.broadcast/3&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4fd7d8094ed0d9f9ef4449c65cd3960417e593cb" translate="yes" xml:space="preserve">
          <source>Broadcasts the given topic, message, and dispatcher to all nodes in the cluster (except the current node itself).</source>
          <target state="translated">将给定的主题、消息和调度器广播到集群中的所有节点(除了当前节点本身)。</target>
        </trans-unit>
        <trans-unit id="6744e87a8381641b4cde9705dfef9ee31801e255" translate="yes" xml:space="preserve">
          <source>Broadcasts the given topic, message, and dispatcher to given node in the cluster (it may point to itself).</source>
          <target state="translated">将给定的主题、消息和调度器广播到集群中的给定节点(它可能指向自己)。</target>
        </trans-unit>
        <trans-unit id="1646c55126644c477caa78a9ea90873bf19aa804" translate="yes" xml:space="preserve">
          <source>Browser address bar</source>
          <target state="translated">浏览器地址栏</target>
        </trans-unit>
        <trans-unit id="293663a57177870794dca0c1751bd172ff6f1289" translate="yes" xml:space="preserve">
          <source>Browsers implement a storage by using cookies. When a cookie is set in the response, the browser stores it and sends it in the next request.</source>
          <target state="translated">浏览器通过使用cookie实现存储。当在响应中设置了cookie时,浏览器将其存储并在下一个请求中发送。</target>
        </trans-unit>
        <trans-unit id="4759bf14d7a511508e86c343c934894b6e8db533" translate="yes" xml:space="preserve">
          <source>Builder</source>
          <target state="translated">Builder</target>
        </trans-unit>
        <trans-unit id="aaf7c10bf0a579e313e284fd389aa7a72d36e686" translate="yes" xml:space="preserve">
          <source>Builds a dynamic query expression</source>
          <target state="translated">构建一个动态查询表达式</target>
        </trans-unit>
        <trans-unit id="035a00799962cb493238a0a62db95718dd0c9cc9" translate="yes" xml:space="preserve">
          <source>Builds a dynamic query expression.</source>
          <target state="translated">构建一个动态查询表达式。</target>
        </trans-unit>
        <trans-unit id="a45afaca9c91a1c32a9e917eca46a915988a9f39" translate="yes" xml:space="preserve">
          <source>Builds a query for the association in the given struct or structs</source>
          <target state="translated">在给定的一个或多个结构中建立一个关联查询。</target>
        </trans-unit>
        <trans-unit id="407385801b1e85882900e84e2dc6b09dd54a44e4" translate="yes" xml:space="preserve">
          <source>Builds a query for the association in the given struct or structs.</source>
          <target state="translated">在给定的一个或多个结构中建立一个关联查询。</target>
        </trans-unit>
        <trans-unit id="ced66bf8e021e21edfee88e91fd8bee8dc689ca4" translate="yes" xml:space="preserve">
          <source>Builds a socket</source>
          <target state="translated">建立一个插座</target>
        </trans-unit>
        <trans-unit id="178c31d3a9ba9e5ac041bf5f2cadc37f2969f838" translate="yes" xml:space="preserve">
          <source>Builds a socket for the given &lt;code&gt;socket_module&lt;/code&gt; with given id and assigns.</source>
          <target state="translated">使用给定的id和 &lt;code&gt;socket_module&lt;/code&gt; 为给定的socket_module构建一个套接字。</target>
        </trans-unit>
        <trans-unit id="00c87893c8631edef27f3833e1cc0e8b5a8eb090" translate="yes" xml:space="preserve">
          <source>Builds a socket for the given &lt;code&gt;socket_module&lt;/code&gt;.</source>
          <target state="translated">为给定的 &lt;code&gt;socket_module&lt;/code&gt; 构建一个套接字。</target>
        </trans-unit>
        <trans-unit id="bd5e1205dff465d478f5f9f203d29a49c4f9a0ff" translate="yes" xml:space="preserve">
          <source>Builds a socket with given id and assigns</source>
          <target state="translated">用给定的id建立一个套接字,并将其赋值给用户。</target>
        </trans-unit>
        <trans-unit id="5643a36079c84d62291717bceeaf757f27684fd6" translate="yes" xml:space="preserve">
          <source>Builds a socket with given id and assigns.</source>
          <target state="translated">用给定的id建立一个socket并分配。</target>
        </trans-unit>
        <trans-unit id="0c373ae3deb56451e196d972839aac1b1465029f" translate="yes" xml:space="preserve">
          <source>Builds a socket.</source>
          <target state="translated">构建一个插座。</target>
        </trans-unit>
        <trans-unit id="564d64573cd800ede3483cc31acb71f2c69da51b" translate="yes" xml:space="preserve">
          <source>Builds a struct from the given &lt;code&gt;assoc&lt;/code&gt; in &lt;code&gt;struct&lt;/code&gt;</source>
          <target state="translated">构建从给定的一个struct &lt;code&gt;assoc&lt;/code&gt; 命令在 &lt;code&gt;struct&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="115a32a9ade32b44e729b841088b442f63153188" translate="yes" xml:space="preserve">
          <source>Builds a struct from the given &lt;code&gt;assoc&lt;/code&gt; in &lt;code&gt;struct&lt;/code&gt;.</source>
          <target state="translated">构建从给定的一个struct &lt;code&gt;assoc&lt;/code&gt; 命令的 &lt;code&gt;struct&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="30d7f140361dec14b5a789c34dc36ebfd35298f6" translate="yes" xml:space="preserve">
          <source>Built-in parsers</source>
          <target state="translated">内置解析器</target>
        </trans-unit>
        <trans-unit id="2ceca089ad01522602de57710545e1b64e4bc0c5" translate="yes" xml:space="preserve">
          <source>But this will:</source>
          <target state="translated">但这将。</target>
        </trans-unit>
        <trans-unit id="ea82b8be34e753ff3545fe49a87a72c5afed7850" translate="yes" xml:space="preserve">
          <source>But we can do even better.</source>
          <target state="translated">但我们可以做得更好。</target>
        </trans-unit>
        <trans-unit id="9e406fe622b4eda4c4473214a0111281d422b230" translate="yes" xml:space="preserve">
          <source>By abiding by the plug contract, we turn an application request into a series of explicit transformations. It doesn't stop there. To really see how effective Plug's design is, let's imagine a scenario where we need to check a series of conditions and then either redirect or halt if a condition fails. Without plug, we would end up with something like this:</source>
          <target state="translated">通过遵守插件合同,我们将一个应用请求变成了一系列显式转换。它并没有止步于此。为了真正了解Plug的设计有多有效,让我们想象一下这样的场景:我们需要检查一系列条件,然后在条件失败时重定向或停止。如果没有Plug,我们最终的结果会是这样的。</target>
        </trans-unit>
        <trans-unit id="7243e4810458725050916d2e8378cd9f6cbc328c" translate="yes" xml:space="preserve">
          <source>By calling &lt;code&gt;validate_confirmation(changeset, :email)&lt;/code&gt;, this validation will check if both &quot;email&quot; and &quot;email_confirmation&quot; in the parameter map matches. Note this validation only looks at the parameters themselves, never the fields in the schema. As such as, the &quot;email_confirmation&quot; field does not need to be added as a virtual field in your schema.</source>
          <target state="translated">通过调用 &lt;code&gt;validate_confirmation(changeset, :email)&lt;/code&gt; ，此验证将检查参数映射中的&amp;ldquo; email&amp;rdquo;和&amp;ldquo; email_confirmation&amp;rdquo;是否匹配。请注意，此验证仅查看参数本身，而不查看架构中的字段。这样，无需在架构中将&amp;ldquo; email_confirmation&amp;rdquo;字段添加为虚拟字段。</target>
        </trans-unit>
        <trans-unit id="5e1685f14dba3d96347d988739d528f81ec0f3c1" translate="yes" xml:space="preserve">
          <source>By calling &lt;code&gt;validate_confirmation(changeset, :email)&lt;/code&gt;, this validation will check if both &amp;ldquo;email&amp;rdquo; and &amp;ldquo;email_confirmation&amp;rdquo; in the parameter map matches.</source>
          <target state="translated">通过调用 &lt;code&gt;validate_confirmation(changeset, :email)&lt;/code&gt; ，此验证将检查参数映射中的&amp;ldquo; email&amp;rdquo;和&amp;ldquo; email_confirmation&amp;rdquo;是否匹配。</target>
        </trans-unit>
        <trans-unit id="ca040f86a7a9a63986f64b5484e3ee6a9854bab7" translate="yes" xml:space="preserve">
          <source>By convention your LiveView modules and &lt;code&gt;leex&lt;/code&gt; templates should be placed in &lt;code&gt;lib/my_web_app/live/&lt;/code&gt; directory.</source>
          <target state="translated">按照约定，您的LiveView模块和 &lt;code&gt;leex&lt;/code&gt; 模板应放在 &lt;code&gt;lib/my_web_app/live/&lt;/code&gt; 目录中。</target>
        </trans-unit>
        <trans-unit id="7b322784d8ac8280252213806912d05a2861cc48" translate="yes" xml:space="preserve">
          <source>By default Phoenix accepts requests on port 4000. If we point our favorite web browser at &lt;a href=&quot;http://localhost:4000&quot;&gt;http://localhost:4000&lt;/a&gt;, we should see the Phoenix Framework welcome page.</source>
          <target state="translated">默认情况下，Phoenix接受端口4000上的请求。如果我们将喜欢的Web浏览器指向&lt;a href=&quot;http://localhost:4000&quot;&gt;http：// localhost：4000&lt;/a&gt;，则应该看到Phoenix框架欢迎页面。</target>
        </trans-unit>
        <trans-unit id="7458ccb7537b49709f337c42a52a8d18b06137c5" translate="yes" xml:space="preserve">
          <source>By default Phoenix provides &lt;code&gt;Phoenix.Socket.V2.JSONSerializer&lt;/code&gt; that encodes to JSON and decodes JSON messages.</source>
          <target state="translated">默认情况下，Phoenix提供了 &lt;code&gt;Phoenix.Socket.V2.JSONSerializer&lt;/code&gt; ，它编码为JSON并解码JSON消息。</target>
        </trans-unit>
        <trans-unit id="b28227eb91b2bb0b9444ee88ec1ee79badeb0458" translate="yes" xml:space="preserve">
          <source>By default a signed or encrypted cookie is only valid for a day, unless a &lt;code&gt;:max_age&lt;/code&gt; is specified.</source>
          <target state="translated">缺省情况下，除非指定 &lt;code&gt;:max_age&lt;/code&gt; ，否则签名或加密的cookie仅在一天内有效。</target>
        </trans-unit>
        <trans-unit id="e9d25e3382cf972188531ef5c5e971bdc86ce025" translate="yes" xml:space="preserve">
          <source>By default clients expect HTTPS servers to listen on port 443. It is possible to specify a different port in HTTPS URLs, but for public servers it is often preferable to stick to the default. In particular, HSTS requires that the site be reachable on port 443 using HTTPS.</source>
          <target state="translated">默认情况下,客户希望HTTPS服务器监听443端口。可以在HTTPS URL中指定不同的端口,但对于公共服务器来说,通常最好使用默认端口。特别是,HSTS要求使用HTTPS的网站可以在443端口上到达。</target>
        </trans-unit>
        <trans-unit id="613c82ed180dfa43f74844e64751cc1af3c94f2d" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;ecto.migrate&lt;/code&gt; will execute all pending migrations. We can exercise more control over which migrations we run by specifying some options when we run the task.</source>
          <target state="translated">默认情况下， &lt;code&gt;ecto.migrate&lt;/code&gt; 将执行所有挂起的迁移。通过在运行任务时指定一些选项，我们可以更好地控制运行哪些迁移。</target>
        </trans-unit>
        <trans-unit id="5882dbfbfa27da2fbdedfbff9e1a63f338d24168" translate="yes" xml:space="preserve">
          <source>By default, CSRF tokens are generated through &lt;a href=&quot;../plug/1.5.0/plug.csrfprotection&quot;&gt;&lt;code&gt;Plug.CSRFProtection&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">默认情况下，CSRF令牌是通过&lt;a href=&quot;../plug/1.5.0/plug.csrfprotection&quot;&gt; &lt;code&gt;Plug.CSRFProtection&lt;/code&gt; &lt;/a&gt;生成的。</target>
        </trans-unit>
        <trans-unit id="1465a06e31b181be9371171ee37758b5f937a222" translate="yes" xml:space="preserve">
          <source>By default, CSRF tokens are generated through &lt;a href=&quot;../plug/1.7.1/plug.csrfprotection&quot;&gt;&lt;code&gt;Plug.CSRFProtection&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">默认情况下，CSRF令牌是通过&lt;a href=&quot;../plug/1.7.1/plug.csrfprotection&quot;&gt; &lt;code&gt;Plug.CSRFProtection&lt;/code&gt; &lt;/a&gt;生成的。</target>
        </trans-unit>
        <trans-unit id="bf44902d066daac00377756f269ce94379621c08" translate="yes" xml:space="preserve">
          <source>By default, Controllers render templates in a view with a similar name to the controller. For example, &lt;code&gt;MyApp.UserController&lt;/code&gt; will render templates inside the &lt;code&gt;MyApp.UserView&lt;/code&gt;. This information can be changed any time by using &lt;a href=&quot;#render/3&quot;&gt;&lt;code&gt;render/3&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#render/4&quot;&gt;&lt;code&gt;render/4&lt;/code&gt;&lt;/a&gt; or the &lt;a href=&quot;#put_view/2&quot;&gt;&lt;code&gt;put_view/2&lt;/code&gt;&lt;/a&gt; function:</source>
          <target state="translated">默认情况下，Controllers在视图中以与控制器相似的名称呈现模板。例如， &lt;code&gt;MyApp.UserController&lt;/code&gt; 将在 &lt;code&gt;MyApp.UserView&lt;/code&gt; 内部呈现模板。可以使用&lt;a href=&quot;#render/3&quot;&gt; &lt;code&gt;render/3&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#render/4&quot;&gt; &lt;code&gt;render/4&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#put_view/2&quot;&gt; &lt;code&gt;put_view/2&lt;/code&gt; &lt;/a&gt;函数随时更改此信息：</target>
        </trans-unit>
        <trans-unit id="ff81ed45b7465077f0238ae3712c251b02aef2c1" translate="yes" xml:space="preserve">
          <source>By default, Controllers render templates in a view with a similar name to the controller. For example, &lt;code&gt;MyAppWeb.UserController&lt;/code&gt; will render templates inside the &lt;code&gt;MyAppWeb.UserView&lt;/code&gt;. This information can be changed any time by using the &lt;a href=&quot;#put_view/2&quot;&gt;&lt;code&gt;put_view/2&lt;/code&gt;&lt;/a&gt; function:</source>
          <target state="translated">默认情况下，Controllers在视图中渲染模板的名称与Controller相似。例如， &lt;code&gt;MyAppWeb.UserController&lt;/code&gt; 将在 &lt;code&gt;MyAppWeb.UserView&lt;/code&gt; 内部呈现模板。可以使用&lt;a href=&quot;#put_view/2&quot;&gt; &lt;code&gt;put_view/2&lt;/code&gt; &lt;/a&gt;函数随时更改此信息：</target>
        </trans-unit>
        <trans-unit id="fb8b2e95adce99468ff6ee3a4e3e9908aa0c3110" translate="yes" xml:space="preserve">
          <source>By default, Ecto will generate a foreign key constraint with name &quot;comments_post_id_fkey&quot; (the name is configurable).</source>
          <target state="translated">默认情况下,Ecto会生成一个外键约束,名称为 &quot;comments_post_id_fkey&quot;(名称可配置)。</target>
        </trans-unit>
        <trans-unit id="a268cfeb224349d5d90c3cd123f25da9e6f77fd2" translate="yes" xml:space="preserve">
          <source>By default, Ecto will generate a foreign key constraint with name &amp;ldquo;comments_post_id_fkey&amp;rdquo; (the name is configurable).</source>
          <target state="translated">默认情况下，Ecto将生成一个名为&amp;ldquo; comments_post_id_fkey&amp;rdquo;（名称是可配置的）的外键约束。</target>
        </trans-unit>
        <trans-unit id="fae9065c91907a74dc22def221d61623cee30465" translate="yes" xml:space="preserve">
          <source>By default, JSON encoding is used to broker messages to and from clients. A custom serializer may be given as a module which implements the &lt;code&gt;encode!/1&lt;/code&gt; and &lt;code&gt;decode!/2&lt;/code&gt; functions defined by the &lt;a href=&quot;phoenix.transports.serializer&quot;&gt;&lt;code&gt;Phoenix.Transports.Serializer&lt;/code&gt;&lt;/a&gt; behaviour.</source>
          <target state="translated">默认情况下，JSON编码用于代理往返客户端的消息。可以将自定义序列化器作为一个模块来实现，该模块实现&lt;a href=&quot;phoenix.transports.serializer&quot;&gt; &lt;code&gt;Phoenix.Transports.Serializer&lt;/code&gt; &lt;/a&gt;行为定义的 &lt;code&gt;encode!/1&lt;/code&gt; 和 &lt;code&gt;decode!/2&lt;/code&gt; 功能。</target>
        </trans-unit>
        <trans-unit id="a824dc4ed53d783f7a9975983ce7ef8b0506c3fb" translate="yes" xml:space="preserve">
          <source>By default, Phoenix applications depend on the following packages:</source>
          <target state="translated">默认情况下,Phoenix应用程序依赖于以下包。</target>
        </trans-unit>
        <trans-unit id="817d20452cd8be58fa983c6be832a701e9567224" translate="yes" xml:space="preserve">
          <source>By default, Phoenix implements this protocol for integers, binaries, atoms, and structs. For structs, a key &lt;code&gt;:id&lt;/code&gt; is assumed, but you may provide a specific implementation.</source>
          <target state="translated">默认情况下，Phoenix对整数，二进制，原子和结构实现此协议。对于结构，假定键为 &lt;code&gt;:id&lt;/code&gt; ，但您可以提供特定的实现。</target>
        </trans-unit>
        <trans-unit id="c77f53dd306fa81c812f2682c1de5d50bfe6516e" translate="yes" xml:space="preserve">
          <source>By default, Phoenix instruments the following events:</source>
          <target state="translated">默认情况下,Phoenix会对以下事件进行记录。</target>
        </trans-unit>
        <trans-unit id="8ebcd9b5c38954d3163ccd8ecd9a117876eeae4e" translate="yes" xml:space="preserve">
          <source>By default, Phoenix supports both websockets and longpoll transports. For example:</source>
          <target state="translated">默认情况下,Phoenix同时支持web套接字和longpoll传输。例如</target>
        </trans-unit>
        <trans-unit id="b9937c50f71e8e049a8c05f9b659bcecef64cbe5" translate="yes" xml:space="preserve">
          <source>By default, Phoenix supports both websockets and longpoll when invoking &lt;a href=&quot;phoenix.endpoint#socket/3&quot;&gt;&lt;code&gt;Phoenix.Endpoint.socket/3&lt;/code&gt;&lt;/a&gt; in your endpoint:</source>
          <target state="translated">默认情况下，在端点中调用&lt;a href=&quot;phoenix.endpoint#socket/3&quot;&gt; &lt;code&gt;Phoenix.Endpoint.socket/3&lt;/code&gt; &lt;/a&gt;时，Phoenix同时支持websockets和longpoll ：</target>
        </trans-unit>
        <trans-unit id="0d60b41ba4d3734cc2576fa292a00f2228e477c4" translate="yes" xml:space="preserve">
          <source>By default, Plug and Phoenix will treat all exceptions as 500 errors. However, Plug provides a protocol called &lt;a href=&quot;../plug/plug.exception&quot;&gt;&lt;code&gt;Plug.Exception&lt;/code&gt;&lt;/a&gt; where we are able to customize the status and add actions that exception structs can returns on the debug error page.</source>
          <target state="translated">默认情况下，Plug and Phoenix将所有异常视为500个错误。但是，Plug提供了一个称为&lt;a href=&quot;../plug/plug.exception&quot;&gt; &lt;code&gt;Plug.Exception&lt;/code&gt; &lt;/a&gt;的协议，在其中我们可以自定义状态并添加异常结构可以在调试错误页面上返回的操作。</target>
        </trans-unit>
        <trans-unit id="0c1d03b3d76d48b7871af950bfe31f58d6df0dd3" translate="yes" xml:space="preserve">
          <source>By default, Plug tests checks for invalid header keys, e.g. header keys which include uppercase letters, and raises a &lt;a href=&quot;plug.conn.invalidheadererror&quot;&gt;&lt;code&gt;Plug.Conn.InvalidHeaderError&lt;/code&gt;&lt;/a&gt; when it finds one. To disable it, set :validate_header_keys_during_test to false on the app config.</source>
          <target state="translated">默认情况下，插件测试会检查无效的标题键（例如，包含大写字母的标题键），并在找到一个时引发&lt;a href=&quot;plug.conn.invalidheadererror&quot;&gt; &lt;code&gt;Plug.Conn.InvalidHeaderError&lt;/code&gt; &lt;/a&gt;。要禁用它，请在应用程序配置上将：validate_header_keys_during_test设置为false。</target>
        </trans-unit>
        <trans-unit id="87e508d57d6e986caca30d7f130a816e1bf801e1" translate="yes" xml:space="preserve">
          <source>By default, a &lt;code&gt;.leex&lt;/code&gt; template does not track changes. Change tracking can be enabled by including a changed map in the assigns with the key &lt;code&gt;__changed__&lt;/code&gt; and passing &lt;code&gt;true&lt;/code&gt; to the dynamic parts. The map should contain the name of any changed field as key and the boolean true as value. If a field is not listed in &lt;code&gt;:changed&lt;/code&gt;, then it is always considered unchanged.</source>
          <target state="translated">默认情况下， &lt;code&gt;.leex&lt;/code&gt; 模板不跟踪更改。可以通过以下方式启用更改跟踪：使用键 &lt;code&gt;__changed__&lt;/code&gt; 将更改后的映射包含在分配中，并将 &lt;code&gt;true&lt;/code&gt; 传递给动态部件。映射应包含任何已更改字段的名称作为键，并包含布尔值true作为值。如果 &lt;code&gt;:changed&lt;/code&gt; 中未列出字段，则始终将其视为不变。</target>
        </trans-unit>
        <trans-unit id="ab07041e506b7bff5fdaf86b0c2088b2b5296fa8" translate="yes" xml:space="preserve">
          <source>By default, a schema will automatically generate a primary key which is named &lt;code&gt;id&lt;/code&gt; and of type &lt;code&gt;:integer&lt;/code&gt;. The &lt;code&gt;field&lt;/code&gt; macro defines a field in the schema with given name and type. &lt;code&gt;has_many&lt;/code&gt; associates many posts with the user schema. Schemas are regular structs and can be created and manipulated directly using Elixir&amp;rsquo;s struct API:</source>
          <target state="translated">默认情况下，模式将自动生成一个名为 &lt;code&gt;id&lt;/code&gt; 且类型为 &lt;code&gt;:integer&lt;/code&gt; 的主键。该 &lt;code&gt;field&lt;/code&gt; 宏定义与给定的名称和类型的架构的字段。 &lt;code&gt;has_many&lt;/code&gt; 将许多帖子与用户架构相关联。模式是常规结构，可以使用Elixir的struct API直接创建和操作：</target>
        </trans-unit>
        <trans-unit id="d5de1c1bf1cac87b445c38e02f249e16480fea34" translate="yes" xml:space="preserve">
          <source>By default, a schema will automatically generate a primary key which is named &lt;code&gt;id&lt;/code&gt; and of type &lt;code&gt;:integer&lt;/code&gt;. The &lt;code&gt;field&lt;/code&gt; macro defines a field in the schema with given name and type. &lt;code&gt;has_many&lt;/code&gt; associates many posts with the user schema. Schemas are regular structs and can be created and manipulated directly using Elixir's struct API:</source>
          <target state="translated">默认情况下，模式将自动生成一个名为 &lt;code&gt;id&lt;/code&gt; 且类型为 &lt;code&gt;:integer&lt;/code&gt; 的主键。该 &lt;code&gt;field&lt;/code&gt; 宏定义与给定的名称和类型的架构的字段。 &lt;code&gt;has_many&lt;/code&gt; 将许多帖子与用户架构相关联。模式是常规结构，可以使用Elixir的struct API直接创建和操作：</target>
        </trans-unit>
        <trans-unit id="61acb587c73bad3e159ceb6a0a03220e2c7382be" translate="yes" xml:space="preserve">
          <source>By default, all LiveView assigns are stateful, which enables change tracking and stateful interactions. In some cases, it's useful to mark assigns as temporary, meaning they will be reset to a default value after each update. This allows otherwise large but infrequently updated values to be discarded after the client has been patched.</source>
          <target state="translated">默认情况下,所有的LiveView赋值都是有状态的,这可以实现变化跟踪和有状态的交互。在某些情况下,将赋值标记为临时赋值是很有用的,这意味着它们将在每次更新后被重置为默认值。这允许在客户机打上补丁后,丢弃原本很大但不经常更新的值。</target>
        </trans-unit>
        <trans-unit id="1c4aff495dda98b8a45419a1da698d7619905941" translate="yes" xml:space="preserve">
          <source>By default, all forms marked with &lt;code&gt;phx-change&lt;/code&gt; will recover input values automatically after the user has reconnected or the LiveView has remounted after a crash. This is achieved by the client triggering the same &lt;code&gt;phx-change&lt;/code&gt; to the server as soon as the mount has been completed.</source>
          <target state="translated">默认情况下，所有标记有 &lt;code&gt;phx-change&lt;/code&gt; 的表单将在用户重新连接或崩溃后重新安装LiveView之后自动恢复输入值。这是通过客户端在安装完成后立即触发服务器的相同 &lt;code&gt;phx-change&lt;/code&gt; 来实现的。</target>
        </trans-unit>
        <trans-unit id="fdb33692f4f922ef8e7384f9894f6b6f566404f3" translate="yes" xml:space="preserve">
          <source>By default, both Postgres and MySQL return the amount of entries inserted on &lt;a href=&quot;#c:insert_all/3&quot;&gt;&lt;code&gt;insert_all/3&lt;/code&gt;&lt;/a&gt;. However, when the &lt;code&gt;:on_conflict&lt;/code&gt; option is specified, Postgres will only return a row if it was affected while MySQL returns at least the number of entries attempted.</source>
          <target state="translated">默认情况下，Postgres和MySQL都返回在&lt;a href=&quot;#c:insert_all/3&quot;&gt; &lt;code&gt;insert_all/3&lt;/code&gt; &lt;/a&gt;上插入的条目数。但是，当指定 &lt;code&gt;:on_conflict&lt;/code&gt; 选项时，Postgres仅在受影响的情况下才返回一行，而MySQL返回至少尝试输入的条目数。</target>
        </trans-unit>
        <trans-unit id="59909984c65d4777ed0f3ee8c76c0bcc4eb4ad05" translate="yes" xml:space="preserve">
          <source>By default, both Postgres and MySQL will return the number of entries inserted on &lt;a href=&quot;#c:insert_all/3&quot;&gt;&lt;code&gt;insert_all/3&lt;/code&gt;&lt;/a&gt;. However, when the &lt;code&gt;:on_conflict&lt;/code&gt; option is specified, Postgres and MySQL will return different results.</source>
          <target state="translated">默认情况下，Postgres和MySQL都将返回插入在&lt;a href=&quot;#c:insert_all/3&quot;&gt; &lt;code&gt;insert_all/3&lt;/code&gt; &lt;/a&gt;上的条目数。但是，当指定 &lt;code&gt;:on_conflict&lt;/code&gt; 选项时，Postgres和MySQL将返回不同的结果。</target>
        </trans-unit>
        <trans-unit id="de233bf5f3f9c757c065d4cd8e84316010e764d2" translate="yes" xml:space="preserve">
          <source>By default, broadcasted events are pushed directly to the client, but intercepting events gives your channel a chance to customize the event for the client to append extra information or filter the message from being delivered.</source>
          <target state="translated">默认情况下,广播的事件会直接推送给客户端,但拦截事件让你的频道有机会为客户端定制事件,以附加额外的信息或过滤消息的传递。</target>
        </trans-unit>
        <trans-unit id="254a23963f3f147ec81ad839e431fa169765b357" translate="yes" xml:space="preserve">
          <source>By default, channel &lt;code&gt;&quot;join&quot;&lt;/code&gt; and &lt;code&gt;&quot;handle_in&quot;&lt;/code&gt; events are logged, using the level &lt;code&gt;:info&lt;/code&gt; and &lt;code&gt;:debug&lt;/code&gt;, respectively. Logs can be customized per event type or disabled by setting the &lt;code&gt;:log_join&lt;/code&gt; and &lt;code&gt;:log_handle_in&lt;/code&gt; options when using &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Phoenix.Channel&lt;/code&gt;&lt;/a&gt;. For example, the following configuration logs join events as &lt;code&gt;:info&lt;/code&gt;, but disables logging for incoming events:</source>
          <target state="translated">默认情况下，分别使用级别 &lt;code&gt;:info&lt;/code&gt; 和 &lt;code&gt;:debug&lt;/code&gt; 记录通道 &lt;code&gt;&quot;join&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;handle_in&quot;&lt;/code&gt; 事件。使用&lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Phoenix.Channel&lt;/code&gt; &lt;/a&gt;时，可以按事件类型自定义日志，也可以通过设置 &lt;code&gt;:log_join&lt;/code&gt; 和 &lt;code&gt;:log_handle_in&lt;/code&gt; 选项禁用日志。例如，以下配置将连接事件记录为 &lt;code&gt;:info&lt;/code&gt; ，但禁用记录传入事件：</target>
        </trans-unit>
        <trans-unit id="f8484b7b776d9e09863af72b8186c36040033470" translate="yes" xml:space="preserve">
          <source>By default, channel &lt;code&gt;&quot;join&quot;&lt;/code&gt; and &lt;code&gt;&quot;handle_in&quot;&lt;/code&gt; events are logged, using the level &lt;code&gt;:info&lt;/code&gt; and &lt;code&gt;:debug&lt;/code&gt;, respectively. Logs can be customized per event type or disabled by setting the &lt;code&gt;:log_join&lt;/code&gt; and &lt;code&gt;:log_handle_in&lt;/code&gt; options when using &lt;a href=&quot;phoenix.channel#content&quot;&gt;&lt;code&gt;Phoenix.Channel&lt;/code&gt;&lt;/a&gt;. For example, the following configuration logs join events as &lt;code&gt;:info&lt;/code&gt;, but disables logging for incoming events:</source>
          <target state="translated">默认情况下，分别使用级别 &lt;code&gt;:info&lt;/code&gt; 和 &lt;code&gt;:debug&lt;/code&gt; 记录通道 &lt;code&gt;&quot;join&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;handle_in&quot;&lt;/code&gt; 事件。使用&lt;a href=&quot;phoenix.channel#content&quot;&gt; &lt;code&gt;Phoenix.Channel&lt;/code&gt; &lt;/a&gt;时，可以按事件类型自定义日志，也可以通过设置 &lt;code&gt;:log_join&lt;/code&gt; 和 &lt;code&gt;:log_handle_in&lt;/code&gt; 选项禁用日志。例如，以下配置将连接事件记录为 &lt;code&gt;:info&lt;/code&gt; ，但禁用记录传入事件：</target>
        </trans-unit>
        <trans-unit id="1ca53f1e429a7e8e5d0c5c79ee63faddaf99433f" translate="yes" xml:space="preserve">
          <source>By default, data output in templates is not considered safe:</source>
          <target state="translated">默认情况下,模板中的数据输出不被认为是安全的。</target>
        </trans-unit>
        <trans-unit id="77127032563b63331ed75935691a8dae8644ce22" translate="yes" xml:space="preserve">
          <source>By default, it looks for an implementation of the protocol, otherwise checks if the exception has the &lt;code&gt;:plug_status&lt;/code&gt; field or simply returns 500.</source>
          <target state="translated">默认情况下，它寻找协议的实现，否则检查异常是否具有 &lt;code&gt;:plug_status&lt;/code&gt; 字段或仅返回500。</target>
        </trans-unit>
        <trans-unit id="ce7df1ce09d3b95a15af132d0783bd3b431787b6" translate="yes" xml:space="preserve">
          <source>By default, it will keep the latest version and 2 previous versions as well as any digest created in the last hour.</source>
          <target state="translated">默认情况下,它将保留最新的版本和之前的两个版本,以及过去一小时内创建的任何摘要。</target>
        </trans-unit>
        <trans-unit id="11600f5b12cbb0d0ad9196a9238995486e684451" translate="yes" xml:space="preserve">
          <source>By default, mix phoenix.gen.secret generates a key 64 characters long.</source>
          <target state="translated">默认情况下,mix phoenix.gen.secret 会生成一个 64 个字符长的密钥。</target>
        </trans-unit>
        <trans-unit id="e92996c56130e46f9f7c2c9e0e901205927e690b" translate="yes" xml:space="preserve">
          <source>By default, mix phx.gen.secret generates a key 64 characters long.</source>
          <target state="translated">默认情况下,mix phx.gen.secret 会生成一个 64 个字符的密钥。</target>
        </trans-unit>
        <trans-unit id="353508c1c264732db28501a9fc2634a94f25d0dc" translate="yes" xml:space="preserve">
          <source>By default, only the headers &quot;accept&quot;, &quot;accept-language&quot;, and &quot;authorization&quot; are recycled. However, a custom set of headers can be specified by passing a list of strings representing its names as the second argument of the function.</source>
          <target state="translated">默认情况下,只回收 &quot;accept&quot;、&quot;accept-language &quot;和 &quot;authorization &quot;这三个头文件,但可以通过传递代表其名称的字符串列表作为函数的第二个参数来指定一组自定义头文件。然而,可以通过传递一个代表其名称的字符串列表作为函数的第二个参数来指定一组自定义的头信息。</target>
        </trans-unit>
        <trans-unit id="32ca330b1e616b81662ec4d4ef124c9e56ff4955" translate="yes" xml:space="preserve">
          <source>By default, the bound element will be the event listener, but a window-level binding may be provided via &lt;code&gt;phx-window-keydown&lt;/code&gt; or &lt;code&gt;phx-window-keyup&lt;/code&gt;, for example:</source>
          <target state="translated">默认情况下，bound元素将是事件侦听器，但是可以通过 &lt;code&gt;phx-window-keydown&lt;/code&gt; 或 &lt;code&gt;phx-window-keyup&lt;/code&gt; 提供窗口级绑定，例如：</target>
        </trans-unit>
        <trans-unit id="c9e053035a992ad440134b8fe6bb2bb506296826" translate="yes" xml:space="preserve">
          <source>By default, the connection&amp;rsquo;s query params are included in the generated path. Custom query params may be used instead by providing a map of your own params. You may also retrieve only the request path by passing an empty map of params.</source>
          <target state="translated">默认情况下，连接的查询参数包含在生成的路径中。通过提供您自己的参数的映射，可以代替使用自定义查询参数。您还可以通过传递空的参数映射来仅检索请求路径。</target>
        </trans-unit>
        <trans-unit id="dc77640e4a2742fe3831fd03e1b3f00201d9e0fe" translate="yes" xml:space="preserve">
          <source>By default, the controller and view will be namespaced by the schema name. You can customize the web module namespace by passing the &lt;code&gt;--web&lt;/code&gt; flag with a module name, for example:</source>
          <target state="translated">默认情况下，控制器和视图将以架构名称命名。您可以通过传递 &lt;code&gt;--web&lt;/code&gt; 标志和模块名称来自定义Web模块名称空间，例如：</target>
        </trans-unit>
        <trans-unit id="b870fd1613d7bc837c7fb85e712119ea8176da56" translate="yes" xml:space="preserve">
          <source>By default, the derived implementation will also use the &lt;code&gt;:id&lt;/code&gt; key. In case the user does not contain an &lt;code&gt;:id&lt;/code&gt; key, the key can be specified with an option:</source>
          <target state="translated">默认情况下，派生的实现还将使用 &lt;code&gt;:id&lt;/code&gt; 键。如果用户不包含 &lt;code&gt;:id&lt;/code&gt; 密钥，则可以使用以下选项指定密钥：</target>
        </trans-unit>
        <trans-unit id="6be2b1eb23fbc16e7a226a21b99ee26314570865" translate="yes" xml:space="preserve">
          <source>By default, the following classes are applied to the LiveView's parent container:</source>
          <target state="translated">默认情况下,以下类被应用到LiveView的父容器中。</target>
        </trans-unit>
        <trans-unit id="187e85e94e6e51510fec3d96b7fd25a22058656c" translate="yes" xml:space="preserve">
          <source>By default, the given path is a websocket upgrade endpoint, with long-polling fallback. The transports can be configured within the Socket handler. See &lt;a href=&quot;phoenix.socket&quot;&gt;&lt;code&gt;Phoenix.Socket&lt;/code&gt;&lt;/a&gt; for more information on defining socket handlers.</source>
          <target state="translated">默认情况下，给定路径是一个websocket升级终结点，具有长轮询回退。可以在Socket处理程序中配置传输。有关定义套接字处理程序的更多信息，请参见&lt;a href=&quot;phoenix.socket&quot;&gt; &lt;code&gt;Phoenix.Socket&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8cffecad488a51df44b450abba6b6b9f9d67a8a9" translate="yes" xml:space="preserve">
          <source>By default, the supervisor also starts &lt;a href=&quot;http://hexdocs.pm/telemetry_poller&quot;&gt;&lt;code&gt;:telemetry_poller&lt;/code&gt;&lt;/a&gt;. By simply adding &lt;code&gt;:telemetry_poller&lt;/code&gt; as a dependency, you can receive VM-related events on a specified interval.</source>
          <target state="translated">默认情况下，主管还启动&lt;a href=&quot;http://hexdocs.pm/telemetry_poller&quot;&gt; &lt;code&gt;:telemetry_poller&lt;/code&gt; &lt;/a&gt;。通过简单地添加 &lt;code&gt;:telemetry_poller&lt;/code&gt; 作为依赖项，您可以在指定的时间间隔接收与VM相关的事件。</target>
        </trans-unit>
        <trans-unit id="d9160dbef59f808f39d5df46c819a7932402cb60" translate="yes" xml:space="preserve">
          <source>By default, the table name for the migration and schema will be the plural name provided for the resource. To customize this value, a &lt;code&gt;--table&lt;/code&gt; option may be provided. For example:</source>
          <target state="translated">默认情况下，迁移和架构的表名将是为资源提供的复数名称。要自定义此值，可以提供 &lt;code&gt;--table&lt;/code&gt; 选项。例如：</target>
        </trans-unit>
        <trans-unit id="aed634d9ceb20a9d053ba889b712738bbbb07763" translate="yes" xml:space="preserve">
          <source>By default, the type is sent as itself, without calling dumping to keep the higher level representation. But it can be set to &lt;code&gt;:dump&lt;/code&gt; so that it is dumped before being encoded.</source>
          <target state="translated">默认情况下，该类型将作为其自身发送，而不会调用转储以保留更高级别的表示形式。但是可以将其设置为 &lt;code&gt;:dump&lt;/code&gt; ,以便在编码之前将其转储。</target>
        </trans-unit>
        <trans-unit id="65eb1af1ae0923f8dbb330cf00e76aff94323f0f" translate="yes" xml:space="preserve">
          <source>By default, you can generate a route to this LiveView by using the &lt;code&gt;live_path&lt;/code&gt; helper:</source>
          <target state="translated">默认情况下，您可以使用 &lt;code&gt;live_path&lt;/code&gt; 帮助器生成到该LiveView的路由：</target>
        </trans-unit>
        <trans-unit id="27e1f8f9c425229e754f86165235a0e052207991" translate="yes" xml:space="preserve">
          <source>By defining a schema, Ecto automatically defines a struct with the schema fields:</source>
          <target state="translated">通过定义一个模式,Ecto会自动定义一个包含模式字段的结构。</target>
        </trans-unit>
        <trans-unit id="3a48f1bb556b62393b3498d5b941e3dd785c0778" translate="yes" xml:space="preserve">
          <source>By defining our own clause in &lt;code&gt;render&lt;/code&gt;, it takes higher priority than the template, but the template is still there, which you can verify by simply removing the newly added clause.</source>
          <target state="translated">通过在 &lt;code&gt;render&lt;/code&gt; 中定义我们自己的子句，它比模板具有更高的优先级，但是模板仍然存在，您可以通过简单地删除新添加的子句来进行验证。</target>
        </trans-unit>
        <trans-unit id="d7ba6941e0aa76ed33228ec903b82bbbca9adfcd" translate="yes" xml:space="preserve">
          <source>By having structs as data, we guarantee they are light-weight, serializable structures. In many languages, the data is often represented by large, complex objects, with entwined state transactions, which makes serialization, maintenance and understanding hard;</source>
          <target state="translated">将结构体作为数据,我们保证它们是轻量级的、可序列化的结构。在很多语言中,数据往往用大而复杂的对象来表示,状态事务缠绕在一起,这使得序列化、维护和理解变得困难。</target>
        </trans-unit>
        <trans-unit id="f4bc19b49e4a07e4321e1dff4210dbd266193562" translate="yes" xml:space="preserve">
          <source>By implementing the Plug API, &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Plug.Builder&lt;/code&gt;&lt;/a&gt; guarantees this module is a plug and can be handed to a web server or used as part of another pipeline.</source>
          <target state="translated">通过实现Plug API，&lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Plug.Builder&lt;/code&gt; &lt;/a&gt;保证此模块是一个插件，可以将其传递到Web服务器或用作另一个管道的一部分。</target>
        </trans-unit>
        <trans-unit id="5d18c6cc02b3eab9bdf12392d843e6b7776d6e77" translate="yes" xml:space="preserve">
          <source>By implementing the Plug API, &lt;a href=&quot;plug.builder#content&quot;&gt;&lt;code&gt;Plug.Builder&lt;/code&gt;&lt;/a&gt; guarantees this module is a plug and can be handed to a web server or used as part of another pipeline.</source>
          <target state="translated">通过实现Plug API，&lt;a href=&quot;plug.builder#content&quot;&gt; &lt;code&gt;Plug.Builder&lt;/code&gt; &lt;/a&gt;保证此模块是一个插件，可以将其传递到Web服务器或用作另一个管道的一部分。</target>
        </trans-unit>
        <trans-unit id="c6de9b3db655a99c3d4b4309b93931d50969516f" translate="yes" xml:space="preserve">
          <source>By joining the channel, we can interact with it directly. The given channel is joined in a separate process which is linked to the test process.</source>
          <target state="translated">通过加入通道,我们可以直接与它进行交互。给定的通道是在一个单独的进程中加入的,而这个进程是与测试进程相连的。</target>
        </trans-unit>
        <trans-unit id="15d49075ed5c0e6dd1b4db97f04e6473b219d915" translate="yes" xml:space="preserve">
          <source>By looking at &lt;code&gt;templates&lt;/code&gt; and &lt;code&gt;views&lt;/code&gt; directories, we can see Phoenix provides features for handling layouts and error pages out of the box.</source>
          <target state="translated">通过查看 &lt;code&gt;templates&lt;/code&gt; 和 &lt;code&gt;views&lt;/code&gt; 目录，我们可以看到Phoenix提供了开箱即用的布局和错误页面处理功能。</target>
        </trans-unit>
        <trans-unit id="2d6b0b5f2d1997a9e84246f2b1cde0fcfc91f0a5" translate="yes" xml:space="preserve">
          <source>By passing the &lt;code&gt;:read_only&lt;/code&gt; option, none of the functions that perform write operations, such as &lt;a href=&quot;#c:insert/2&quot;&gt;&lt;code&gt;insert/2&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#c:insert_all/3&quot;&gt;&lt;code&gt;insert_all/3&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#c:update_all/3&quot;&gt;&lt;code&gt;update_all/3&lt;/code&gt;&lt;/a&gt;, and friends will be defined.</source>
          <target state="translated">通过传递 &lt;code&gt;:read_only&lt;/code&gt; 选项，将不会定义执行写入操作的函数，例如&lt;a href=&quot;#c:insert/2&quot;&gt; &lt;code&gt;insert/2&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#c:insert_all/3&quot;&gt; &lt;code&gt;insert_all/3&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#c:update_all/3&quot;&gt; &lt;code&gt;update_all/3&lt;/code&gt; &lt;/a&gt;和friends。</target>
        </trans-unit>
        <trans-unit id="fc5e58f6ff24d96d8e1ca4804c017b524da88c87" translate="yes" xml:space="preserve">
          <source>By pattern matching on the result we can differentiate different conditions:</source>
          <target state="translated">通过对结果的模式匹配,我们可以区分不同的条件。</target>
        </trans-unit>
        <trans-unit id="cd7b6be11c6c28e20310f4737672f3064202b8e2" translate="yes" xml:space="preserve">
          <source>By preloading an association using a custom query you can confine the behavior of &lt;a href=&quot;#cast_assoc/3&quot;&gt;&lt;code&gt;cast_assoc/3&lt;/code&gt;&lt;/a&gt;. This opens up the possibility to work on a subset of the data, instead of all associations in the database.</source>
          <target state="translated">通过使用自定义查询预加载关联，您可以限制&lt;a href=&quot;#cast_assoc/3&quot;&gt; &lt;code&gt;cast_assoc/3&lt;/code&gt; &lt;/a&gt;的行为。这样就可以处理数据的子集，而不是数据库中的所有关联。</target>
        </trans-unit>
        <trans-unit id="8e673cd4ab0a0e5f4be3dfe7dce5d6983c785cd5" translate="yes" xml:space="preserve">
          <source>By subscribing to the topic, we can use &lt;a href=&quot;#assert_broadcast/3&quot;&gt;&lt;code&gt;assert_broadcast/3&lt;/code&gt;&lt;/a&gt; to verify a message has been sent through the pubsub layer.</source>
          <target state="translated">通过订阅该主题，我们可以使用&lt;a href=&quot;#assert_broadcast/3&quot;&gt; &lt;code&gt;assert_broadcast/3&lt;/code&gt; &lt;/a&gt;来验证消息已通过pubsub层发送。</target>
        </trans-unit>
        <trans-unit id="884dc2f8b0b466fe198be5c7bd6bd41e505f7e51" translate="yes" xml:space="preserve">
          <source>CA Issued Certificate</source>
          <target state="translated">憑證機構簽發的證書</target>
        </trans-unit>
        <trans-unit id="30e8b6877367ea06f0a354b20f564c6bed06a78f" translate="yes" xml:space="preserve">
          <source>CSRF Protection</source>
          <target state="translated">CSRF保护</target>
        </trans-unit>
        <trans-unit id="c9df88380d1dd3b25943e604a5a2f036a0a907bb" translate="yes" xml:space="preserve">
          <source>CSRF protection</source>
          <target state="translated">CSRF保护</target>
        </trans-unit>
        <trans-unit id="d5fee4e9e6db4d2f1fdc95f2b2f4a8761758bd65" translate="yes" xml:space="preserve">
          <source>Cache mechanisms</source>
          <target state="translated">缓存机制</target>
        </trans-unit>
        <trans-unit id="f09eed70310275a028d61c137230810723d6a233" translate="yes" xml:space="preserve">
          <source>Cache query metadata</source>
          <target state="translated">缓存查询元数据</target>
        </trans-unit>
        <trans-unit id="ecc64d6e4ad82a6e9d7bfc0b0383a45d3af2b452" translate="yes" xml:space="preserve">
          <source>Cache query metadata that is passed to &lt;a href=&quot;#c:execute/5&quot;&gt;&lt;code&gt;execute/5&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">缓存传递给&lt;a href=&quot;#c:execute/5&quot;&gt; &lt;code&gt;execute/5&lt;/code&gt; 的&lt;/a&gt;查询元数据。</target>
        </trans-unit>
        <trans-unit id="48398225bbff206393302c005c06fcbdd9039c32" translate="yes" xml:space="preserve">
          <source>Calculate the given &lt;code&gt;aggregate&lt;/code&gt; over the given &lt;code&gt;field&lt;/code&gt;</source>
          <target state="translated">计算给定 &lt;code&gt;field&lt;/code&gt; 上的给定 &lt;code&gt;aggregate&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b72c65ee7e44cc973d557eb132bd0a8e45fcd8e0" translate="yes" xml:space="preserve">
          <source>Calculate the given &lt;code&gt;aggregate&lt;/code&gt; over the given &lt;code&gt;field&lt;/code&gt;.</source>
          <target state="translated">计算给定 &lt;code&gt;field&lt;/code&gt; 上的给定 &lt;code&gt;aggregate&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fef3963b2932aeb8fa841bfd89ca5f61f2bbc9b4" translate="yes" xml:space="preserve">
          <source>Calculate the given &lt;code&gt;aggregate&lt;/code&gt;.</source>
          <target state="translated">计算给定的 &lt;code&gt;aggregate&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0f33ada32fda260381cb7928e58ebbc783a59470" translate="yes" xml:space="preserve">
          <source>Calculates the average for the given entry</source>
          <target state="translated">计算给定条目的平均值</target>
        </trans-unit>
        <trans-unit id="8baedf935b7484427c37b3b58d7a6070653c5e22" translate="yes" xml:space="preserve">
          <source>Calculates the average for the given entry.</source>
          <target state="translated">计算给定条目的平均值。</target>
        </trans-unit>
        <trans-unit id="a460f7839239c78344810ed4fdb957f96e65e250" translate="yes" xml:space="preserve">
          <source>Calculates the maximum for the given entry</source>
          <target state="translated">计算给定条目的最大值</target>
        </trans-unit>
        <trans-unit id="afe02f125fcee88cdab42d83a2afbfd814eca2cd" translate="yes" xml:space="preserve">
          <source>Calculates the maximum for the given entry.</source>
          <target state="translated">计算给定条目的最大值。</target>
        </trans-unit>
        <trans-unit id="95498afa39bf4d0b12b115d63e8fce6b69579abe" translate="yes" xml:space="preserve">
          <source>Calculates the minimum for the given entry</source>
          <target state="translated">计算给定条目的最小值</target>
        </trans-unit>
        <trans-unit id="2d13608c2125ea28acdc9d31a66697e03fe7c6a7" translate="yes" xml:space="preserve">
          <source>Calculates the minimum for the given entry.</source>
          <target state="translated">计算给定条目的最小值。</target>
        </trans-unit>
        <trans-unit id="135e5a276ffc4d7b681841fc4f3cad6bc49c7edc" translate="yes" xml:space="preserve">
          <source>Calculates the sum for the given entry</source>
          <target state="translated">计算给定条目的总和</target>
        </trans-unit>
        <trans-unit id="dc20f2648334718a3dd5af85d7705b07facd7151" translate="yes" xml:space="preserve">
          <source>Calculates the sum for the given entry.</source>
          <target state="translated">计算给定条目的总和。</target>
        </trans-unit>
        <trans-unit id="9c55980c2341959b5f21335c4bd5c0891fa74196" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;ecto.type#c:embed_as/1&quot;&gt;&lt;code&gt;Ecto.Type.embed_as/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;ecto.type#c:embed_as/1&quot;&gt; &lt;code&gt;Ecto.Type.embed_as/1&lt;/code&gt; 的&lt;/a&gt;回调实现。</target>
        </trans-unit>
        <trans-unit id="ec3adcd8037a9604f9cd349ab4d20dc5a17412f7" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;ecto.type#c:equal?/2&quot;&gt;&lt;code&gt;Ecto.Type.equal?/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;ecto.type#c:equal?/2&quot;&gt; &lt;code&gt;Ecto.Type.equal?/2&lt;/code&gt; 的&lt;/a&gt;回调实现。</target>
        </trans-unit>
        <trans-unit id="d12af7746d2dd412b78d3fae8ef21a84dd3affb8" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;https://hexdocs.pm/elixir/Access.html#c:fetch/2&quot;&gt;&lt;code&gt;Access.fetch/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://hexdocs.pm/elixir/Access.html#c:fetch/2&quot;&gt; &lt;code&gt;Access.fetch/2&lt;/code&gt; 的&lt;/a&gt;回调实现。</target>
        </trans-unit>
        <trans-unit id="54edfce776f3272812893f8747f90228568372f7" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;https://hexdocs.pm/elixir/Access.html#c:get_and_update/3&quot;&gt;&lt;code&gt;Access.get_and_update/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://hexdocs.pm/elixir/Access.html#c:get_and_update/3&quot;&gt; &lt;code&gt;Access.get_and_update/3&lt;/code&gt; 的&lt;/a&gt;回调实现。</target>
        </trans-unit>
        <trans-unit id="f613055a34d5b0cc54d3942a8067e73b97f688f0" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;https://hexdocs.pm/elixir/Access.html#c:pop/2&quot;&gt;&lt;code&gt;Access.pop/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://hexdocs.pm/elixir/Access.html#c:pop/2&quot;&gt; &lt;code&gt;Access.pop/2&lt;/code&gt; 的&lt;/a&gt;回调实现。</target>
        </trans-unit>
        <trans-unit id="d0f41563b10c703cb7b2e9ba5e91a7b2ccbecf74" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;https://hexdocs.pm/elixir/Application.html#c:start/2&quot;&gt;&lt;code&gt;Application.start/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://hexdocs.pm/elixir/Application.html#c:start/2&quot;&gt; &lt;code&gt;Application.start/2&lt;/code&gt; 的&lt;/a&gt;回调实现。</target>
        </trans-unit>
        <trans-unit id="d39e0ddeef9186f868e4ff28dde24c9443d6a437" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;https://hexdocs.pm/elixir/Exception.html#c:blame/2&quot;&gt;&lt;code&gt;Exception.blame/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://hexdocs.pm/elixir/Exception.html#c:blame/2&quot;&gt; &lt;code&gt;Exception.blame/2&lt;/code&gt; 的&lt;/a&gt;回调实现。</target>
        </trans-unit>
        <trans-unit id="68c58dafe95ef3747136785a32cb0be3190d5a95" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;https://hexdocs.pm/elixir/Exception.html#c:exception/1&quot;&gt;&lt;code&gt;Exception.exception/1&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://hexdocs.pm/elixir/Exception.html#c:exception/1&quot;&gt; &lt;code&gt;Exception.exception/1&lt;/code&gt; 的&lt;/a&gt;回调实现</target>
        </trans-unit>
        <trans-unit id="f2aeddeb86c19d9930349a6b7fa2dda563422a7d" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;https://hexdocs.pm/elixir/Exception.html#c:exception/1&quot;&gt;&lt;code&gt;Exception.exception/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://hexdocs.pm/elixir/Exception.html#c:exception/1&quot;&gt; &lt;code&gt;Exception.exception/1&lt;/code&gt; 的&lt;/a&gt;回调实现。</target>
        </trans-unit>
        <trans-unit id="032a4efc6854da59dd9e469ea8f84cad45395207" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;https://hexdocs.pm/elixir/Exception.html#c:message/1&quot;&gt;&lt;code&gt;Exception.message/1&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://hexdocs.pm/elixir/Exception.html#c:message/1&quot;&gt; &lt;code&gt;Exception.message/1&lt;/code&gt; 的&lt;/a&gt;回调实现</target>
        </trans-unit>
        <trans-unit id="1218946b31c04832e0e62cf1bdb9c7d81085c97b" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;https://hexdocs.pm/elixir/Exception.html#c:message/1&quot;&gt;&lt;code&gt;Exception.message/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://hexdocs.pm/elixir/Exception.html#c:message/1&quot;&gt; &lt;code&gt;Exception.message/1&lt;/code&gt; 的&lt;/a&gt;回调实现。</target>
        </trans-unit>
        <trans-unit id="043fff358e410d756d69b64693e0aee209f5665a" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html#c:init/1&quot;&gt;&lt;code&gt;GenServer.init/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html#c:init/1&quot;&gt; &lt;code&gt;GenServer.init/1&lt;/code&gt; 的&lt;/a&gt;回调实现。</target>
        </trans-unit>
        <trans-unit id="3cdf88d24ddc0b7e4c16c41e315078007b184333" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html#c:init/1&quot;&gt;&lt;code&gt;Supervisor.init/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html#c:init/1&quot;&gt; &lt;code&gt;Supervisor.init/1&lt;/code&gt; 的&lt;/a&gt;回调实现。</target>
        </trans-unit>
        <trans-unit id="8f43379e08ef8f5a8ca98adb45861d96f7192f12" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Task.html#c:run/1&quot;&gt;&lt;code&gt;Mix.Task.run/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://hexdocs.pm/mix/Mix.Task.html#c:run/1&quot;&gt; &lt;code&gt;Mix.Task.run/1&lt;/code&gt; 的&lt;/a&gt;回调实现。</target>
        </trans-unit>
        <trans-unit id="e47ec3f11d8a914105cb3fef07dbb6ed1c63a4d8" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;phoenix.socket.transport#c:default_config/0&quot;&gt;&lt;code&gt;Phoenix.Socket.Transport.default_config/0&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;phoenix.socket.transport#c:default_config/0&quot;&gt; &lt;code&gt;Phoenix.Socket.Transport.default_config/0&lt;/code&gt; 的&lt;/a&gt;回调实现。</target>
        </trans-unit>
        <trans-unit id="a1708e191eed33380ca67b6028fd8573fdbb644c" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;phoenix.template.engine#c:compile/2&quot;&gt;&lt;code&gt;Phoenix.Template.Engine.compile/2&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;phoenix.template.engine#c:compile/2&quot;&gt; &lt;code&gt;Phoenix.Template.Engine.compile/2&lt;/code&gt; 的&lt;/a&gt;回调实现</target>
        </trans-unit>
        <trans-unit id="ea5ea27a2af7e749a7ba629623c5843bcae054f6" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;phoenix.template.engine#c:compile/2&quot;&gt;&lt;code&gt;Phoenix.Template.Engine.compile/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;phoenix.template.engine#c:compile/2&quot;&gt; &lt;code&gt;Phoenix.Template.Engine.compile/2&lt;/code&gt; 的&lt;/a&gt;回调实现。</target>
        </trans-unit>
        <trans-unit id="4b21277ad35de9d0bbc697bf34687df68d1dd7ec" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;plug#c:call/2&quot;&gt;&lt;code&gt;Plug.call/2&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;plug#c:call/2&quot;&gt; &lt;code&gt;Plug.call/2&lt;/code&gt; 的&lt;/a&gt;回调实现</target>
        </trans-unit>
        <trans-unit id="ae8f3a29268323ceeca5abc36851ba2c103c086b" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;plug#c:call/2&quot;&gt;&lt;code&gt;Plug.call/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;plug#c:call/2&quot;&gt; &lt;code&gt;Plug.call/2&lt;/code&gt; 的&lt;/a&gt;回调实现。</target>
        </trans-unit>
        <trans-unit id="6712d82f4b88479c43c2c73eaf562611fb7e23fa" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;plug#c:init/1&quot;&gt;&lt;code&gt;Plug.init/1&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;plug#c:init/1&quot;&gt; &lt;code&gt;Plug.init/1&lt;/code&gt; 的&lt;/a&gt;回调实现</target>
        </trans-unit>
        <trans-unit id="022af9f513221b7f1f63492515611dcd449eb5e8" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;plug#c:init/1&quot;&gt;&lt;code&gt;Plug.init/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;plug#c:init/1&quot;&gt; &lt;code&gt;Plug.init/1&lt;/code&gt; 的&lt;/a&gt;回调实现。</target>
        </trans-unit>
        <trans-unit id="6457b9900e28960d880713e0be6cfde4ec5db930" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;plug.parsers#c:init/1&quot;&gt;&lt;code&gt;Plug.Parsers.init/1&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;plug.parsers#c:init/1&quot;&gt; &lt;code&gt;Plug.Parsers.init/1&lt;/code&gt; 的&lt;/a&gt;回调实现</target>
        </trans-unit>
        <trans-unit id="c66ea58bed6e4b9609840eaf39b2b719bd12d7ac" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;plug.parsers#c:init/1&quot;&gt;&lt;code&gt;Plug.Parsers.init/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;plug.parsers#c:init/1&quot;&gt; &lt;code&gt;Plug.Parsers.init/1&lt;/code&gt; 的&lt;/a&gt;回调实现。</target>
        </trans-unit>
        <trans-unit id="99de215287a8ed32e9b3a733cfa29574666cd932" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;plug.parsers#c:parse/5&quot;&gt;&lt;code&gt;Plug.Parsers.parse/5&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;plug.parsers#c:parse/5&quot;&gt; &lt;code&gt;Plug.Parsers.parse/5&lt;/code&gt; 的&lt;/a&gt;回调实现。</target>
        </trans-unit>
        <trans-unit id="b0c139f555137accf02a451a8b1663007120c24c" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;plug.session.store#c:delete/3&quot;&gt;&lt;code&gt;Plug.Session.Store.delete/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;plug.session.store#c:delete/3&quot;&gt; &lt;code&gt;Plug.Session.Store.delete/3&lt;/code&gt; 的&lt;/a&gt;回调实现。</target>
        </trans-unit>
        <trans-unit id="ce7ff51daa4d07514d97a7f84deeb51eb9f9702b" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;plug.session.store#c:get/3&quot;&gt;&lt;code&gt;Plug.Session.Store.get/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;plug.session.store#c:get/3&quot;&gt; &lt;code&gt;Plug.Session.Store.get/3&lt;/code&gt; 的&lt;/a&gt;回调实现。</target>
        </trans-unit>
        <trans-unit id="743aca979f7635146ef099e5301227c6a2bd0171" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;plug.session.store#c:init/1&quot;&gt;&lt;code&gt;Plug.Session.Store.init/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;plug.session.store#c:init/1&quot;&gt; &lt;code&gt;Plug.Session.Store.init/1&lt;/code&gt; 的&lt;/a&gt;回调实现。</target>
        </trans-unit>
        <trans-unit id="54dabbe6b1c738df92a743cc1b137377ef2dc1db" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;plug.session.store#c:put/4&quot;&gt;&lt;code&gt;Plug.Session.Store.put/4&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;plug.session.store#c:put/4&quot;&gt; &lt;code&gt;Plug.Session.Store.put/4&lt;/code&gt; 的&lt;/a&gt;回调实现。</target>
        </trans-unit>
        <trans-unit id="6d2edbcfbb5ce6be0b7a5d8fb89fc814b48c2518" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;code&gt;c:Ecto.Association.on_repo_change/5&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;c:Ecto.Association.on_repo_change/5&lt;/code&gt; 的回调实现。</target>
        </trans-unit>
        <trans-unit id="07b60a7f444177c89dd1e016b817202d912a922b" translate="yes" xml:space="preserve">
          <source>Callback invoked to start the supervisor and during hot code upgrades</source>
          <target state="translated">在启动主管和热代码升级期间调用回调。</target>
        </trans-unit>
        <trans-unit id="9fbe07680545fab8c38f764f99ebaad2d192e475" translate="yes" xml:space="preserve">
          <source>Callback invoked to start the supervisor and during hot code upgrades.</source>
          <target state="translated">启动主管和热码升级时调用回调。</target>
        </trans-unit>
        <trans-unit id="9e77a644b6afd00c56c701efd50e212887f5f4c3" translate="yes" xml:space="preserve">
          <source>Callback to convert the options specified in the field macro into parameters to be used in other callbacks.</source>
          <target state="translated">回调,将字段宏中指定的选项转换为参数,用于其他回调。</target>
        </trans-unit>
        <trans-unit id="e40111572fe515536aee3325186cd5acdee91825" translate="yes" xml:space="preserve">
          <source>Callback to start the Cowboy endpoint</source>
          <target state="translated">回调启动Cowboy端点</target>
        </trans-unit>
        <trans-unit id="f3236f24f016b3d9c0833c991bdcf855546f8e62" translate="yes" xml:space="preserve">
          <source>Callback to start the Cowboy endpoint.</source>
          <target state="translated">回调启动牛仔端点。</target>
        </trans-unit>
        <trans-unit id="9fdc2cfe374fa5bde1e4e458854875e1709add1c" translate="yes" xml:space="preserve">
          <source>Callbacks</source>
          <target state="translated">Callbacks</target>
        </trans-unit>
        <trans-unit id="d0fbe0f7bb361f1569fe6ed513feb13674ba7d95" translate="yes" xml:space="preserve">
          <source>Callbacks are invoked in the reverse order they are defined (callbacks defined first are invoked last).</source>
          <target state="translated">回调的调用顺序与其定义的顺序相反(先定义的回调最后被调用)。</target>
        </trans-unit>
        <trans-unit id="5cbc1e632b5dae84c35ee72ee8e331091acf6f0f" translate="yes" xml:space="preserve">
          <source>Callbacks cycle</source>
          <target state="translated">回调周期</target>
        </trans-unit>
        <trans-unit id="dbbd41fef703690543f89a69dc32d3a42905a61c" translate="yes" xml:space="preserve">
          <source>Called as needed and after merges.</source>
          <target state="translated">根据需要和合并后调用。</target>
        </trans-unit>
        <trans-unit id="1c4fe82ac39bdc87aed411ead9e3ccd0583d7d31" translate="yes" xml:space="preserve">
          <source>Called to autogenerate a value for id/embed_id/binary_id</source>
          <target state="translated">调用来自动生成id/embed_id/binary_id的值。</target>
        </trans-unit>
        <trans-unit id="8f68520c1312f30f81829bba3fe8b77ba247f167" translate="yes" xml:space="preserve">
          <source>Called to autogenerate a value for id/embed_id/binary_id.</source>
          <target state="translated">调用来自动生成id/embed_id/binary_id的值。</target>
        </trans-unit>
        <trans-unit id="807d052993a5d1a26888e1636080fc2b67e8ed03" translate="yes" xml:space="preserve">
          <source>Called when an application is started</source>
          <target state="translated">在应用程序启动时调用</target>
        </trans-unit>
        <trans-unit id="f0ca56a7a06bc47a8cf3a0a7612d281facc7aec4" translate="yes" xml:space="preserve">
          <source>Called when an application is started.</source>
          <target state="translated">在应用程序启动时调用。</target>
        </trans-unit>
        <trans-unit id="ce2d907fe48d4de6aa4d76bcc22f81b26e6168bd" translate="yes" xml:space="preserve">
          <source>Callers should only subscribe to a given topic a single time. Duplicate subscriptions for a Pid/topic pair are allowed and will cause duplicate events to be sent; however, when using &lt;a href=&quot;phoenix.pubsub#unsubscribe/2&quot;&gt;&lt;code&gt;Phoenix.PubSub.unsubscribe/2&lt;/code&gt;&lt;/a&gt;, all duplicate subscriptions will be dropped.</source>
          <target state="translated">呼叫者仅应一次订阅给定主题。允许重复订阅Pid /主题对，这将导致重复事件的发送；但是，使用&lt;a href=&quot;phoenix.pubsub#unsubscribe/2&quot;&gt; &lt;code&gt;Phoenix.PubSub.unsubscribe/2&lt;/code&gt; 时&lt;/a&gt;，所有重复的订阅都将被删除。</target>
        </trans-unit>
        <trans-unit id="7c9a634c7a8d3becce10c69bdfff8821034955bf" translate="yes" xml:space="preserve">
          <source>Callers should only subscribe to a given topic a single time. Duplicate subscriptions for a Pid/topic pair are allowed and will cause duplicate events to be sent; however, when using &lt;a href=&quot;phoenix.pubsub#unsubscribe/3&quot;&gt;&lt;code&gt;Phoenix.PubSub.unsubscribe/3&lt;/code&gt;&lt;/a&gt;, all duplicate subscriptions will be dropped.</source>
          <target state="translated">呼叫者仅应一次订阅给定主题。允许重复订阅Pid /主题对，这将导致重复事件的发送；但是，使用&lt;a href=&quot;phoenix.pubsub#unsubscribe/3&quot;&gt; &lt;code&gt;Phoenix.PubSub.unsubscribe/3&lt;/code&gt; 时&lt;/a&gt;，将删除所有重复的订阅。</target>
        </trans-unit>
        <trans-unit id="7fe75a5900b2020c4e0694bc0f4aaeb8dac07e20" translate="yes" xml:space="preserve">
          <source>Calls the Endpoint and Router pipelines for the current route.</source>
          <target state="translated">调用当前途径的端点和路由器管道。</target>
        </trans-unit>
        <trans-unit id="9b37b3a10ada22f7da28908a66918d9fb5908b72" translate="yes" xml:space="preserve">
          <source>Calls the Endpoint and Router pipelines.</source>
          <target state="translated">调用端点和路由器管道。</target>
        </trans-unit>
        <trans-unit id="51473715b3055d8b5369d919c4ebe6516370cc8a" translate="yes" xml:space="preserve">
          <source>Calls the Endpoint and bypasses Router match</source>
          <target state="translated">调用Endpoint并绕过Router match。</target>
        </trans-unit>
        <trans-unit id="370acfef3703e3f90e392daddd10376201a01d84" translate="yes" xml:space="preserve">
          <source>Calls the Endpoint and bypasses Router match.</source>
          <target state="translated">调用Endpoint并绕过Router匹配。</target>
        </trans-unit>
        <trans-unit id="2c8a321e9e8f0812c9a814f2adbd7dffb9fb3d96" translate="yes" xml:space="preserve">
          <source>Calls the Endpoint and the given Router pipelines.</source>
          <target state="translated">调用Endpoint和给定的Router管道。</target>
        </trans-unit>
        <trans-unit id="e76046a2aebeed485708e63cd36fd8ac2928f09e" translate="yes" xml:space="preserve">
          <source>Can also be a &quot;MFA&quot; (module, function, arguments) tuple. That function will receive the connection and should return a map (with string keys) to be merged into the session. For example, &lt;code&gt;{MyModule, :my_function, []}&lt;/code&gt; means &lt;code&gt;MyModule.my_function(conn)&lt;/code&gt; is called.</source>
          <target state="translated">也可以是&amp;ldquo; MFA&amp;rdquo;（模块，函数，参数）元组。该函数将接收连接，并应返回一个映射（带有字符串键）以合并到会话中。例如， &lt;code&gt;{MyModule, :my_function, []}&lt;/code&gt; 表示调用 &lt;code&gt;MyModule.my_function(conn)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="88e062532b66a1ad5e10fd38139c1c81ab87fb66" translate="yes" xml:space="preserve">
          <source>Can return &lt;code&gt;:up&lt;/code&gt;, &lt;code&gt;:down&lt;/code&gt; or &lt;code&gt;{:error, term}&lt;/code&gt; in case anything goes wrong.</source>
          <target state="translated">如果出现任何问题，可以返回 &lt;code&gt;:up&lt;/code&gt; ， &lt;code&gt;:down&lt;/code&gt; 或 &lt;code&gt;{:error, term}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a5c2f31f12329b480874d41c2cb0a6bf9acc6f3c" translate="yes" xml:space="preserve">
          <source>Case sensitivity</source>
          <target state="translated">案件敏感性</target>
        </trans-unit>
        <trans-unit id="e0f540f92c7222f2992e0ffca4cb3124cdab0766" translate="yes" xml:space="preserve">
          <source>Casting</source>
          <target state="translated">Casting</target>
        </trans-unit>
        <trans-unit id="db6a2272ded0700644f24cfe5b5b0309474bb690" translate="yes" xml:space="preserve">
          <source>Casts a value to the given type</source>
          <target state="translated">将一个值转换为给定类型</target>
        </trans-unit>
        <trans-unit id="3b890ef0afa0f6d0ec2387b3100aa57cd59d471f" translate="yes" xml:space="preserve">
          <source>Casts a value to the given type.</source>
          <target state="translated">将一个值转换为给定类型。</target>
        </trans-unit>
        <trans-unit id="39961a9c776d161601bfe01b5f9a4f0958708e12" translate="yes" xml:space="preserve">
          <source>Casts the given association with the changeset parameters</source>
          <target state="translated">将给定的关联与变化集参数进行串联。</target>
        </trans-unit>
        <trans-unit id="be9379c9eea53b656902efc6e1b5e1e99a20af64" translate="yes" xml:space="preserve">
          <source>Casts the given association with the changeset parameters.</source>
          <target state="translated">将给定的关联与变化集参数进行绑定。</target>
        </trans-unit>
        <trans-unit id="e95ccfe299647f87c0cba2bbfe94e26e86ce5050" translate="yes" xml:space="preserve">
          <source>Casts the given embed with the changeset parameters</source>
          <target state="translated">使用变化集参数来创建给定的嵌入。</target>
        </trans-unit>
        <trans-unit id="f7f50157aaf9bbd054614b39e14e8c260e3e785a" translate="yes" xml:space="preserve">
          <source>Casts the given embed with the changeset parameters.</source>
          <target state="translated">用变化集的参数铸造给定的嵌入。</target>
        </trans-unit>
        <trans-unit id="506cc20e1151fcc429a938ede7c283a878d6e44b" translate="yes" xml:space="preserve">
          <source>Casts the given input to the ParameterizedType with the given parameters.</source>
          <target state="translated">用给定的参数将给定的输入转为ParameterizedType。</target>
        </trans-unit>
        <trans-unit id="98f8af8a0284595a1a3d48928fba619382632646" translate="yes" xml:space="preserve">
          <source>Casts the given input to the custom type</source>
          <target state="translated">将给定的输入转换为自定义类型。</target>
        </trans-unit>
        <trans-unit id="8755ddad47681604b78b876fd901374c259a26c8" translate="yes" xml:space="preserve">
          <source>Casts the given input to the custom type.</source>
          <target state="translated">将给定的输入转换为自定义类型。</target>
        </trans-unit>
        <trans-unit id="c0dc7b80874914239cf81ad7d06a8bba507b97e8" translate="yes" xml:space="preserve">
          <source>Casts the given value to the given type at the database level</source>
          <target state="translated">在数据库级别将给定的值转换为给定的类型。</target>
        </trans-unit>
        <trans-unit id="d48a0c8cc72b886950ec9ba2adae18a1f5adf08f" translate="yes" xml:space="preserve">
          <source>Casts the given value to the given type at the database level.</source>
          <target state="translated">在数据库层将给定的值转换为给定的类型。</target>
        </trans-unit>
        <trans-unit id="e8438762801637aaa4831a4bdbf6654a398aeee5" translate="yes" xml:space="preserve">
          <source>Casts to UUID</source>
          <target state="translated">套用到UUID</target>
        </trans-unit>
        <trans-unit id="314cfcee4efb4546ed893c42c5d11295a20cc005" translate="yes" xml:space="preserve">
          <source>Casts to UUID.</source>
          <target state="translated">转换为UUID。</target>
        </trans-unit>
        <trans-unit id="712fa742793fb2c31cc8448917481b50249986ba" translate="yes" xml:space="preserve">
          <source>Causes the multi to fail with the given value</source>
          <target state="translated">在给定的值下,导致多重失败。</target>
        </trans-unit>
        <trans-unit id="aacc9b97d22fcfe1b20f63b5787c16d8ed4f97e2" translate="yes" xml:space="preserve">
          <source>Causes the multi to fail with the given value.</source>
          <target state="translated">导致给定值的多重失败。</target>
        </trans-unit>
        <trans-unit id="de9f4f86265b2aecfbaf0e7cc573428a522d7477" translate="yes" xml:space="preserve">
          <source>Change the plug Plug.Session to use that attribute:</source>
          <target state="translated">将插件Plug.Session改为使用该属性。</target>
        </trans-unit>
        <trans-unit id="41aa9b871d64ac5d948470838490441a4a2f0c5b" translate="yes" xml:space="preserve">
          <source>Change tracking also works when accessing map/struct fields. Take this template:</source>
          <target state="translated">在访问地图/结构字段时,变更跟踪也能发挥作用。以这个模板为例。</target>
        </trans-unit>
        <trans-unit id="3b656dadab30c48171de90c0d4d7d8047516e885" translate="yes" xml:space="preserve">
          <source>Change tracking requirement</source>
          <target state="translated">变更跟踪要求</target>
        </trans-unit>
        <trans-unit id="1a9a7a310e9346ab3eec5877a2adbd3127520d90" translate="yes" xml:space="preserve">
          <source>Changed attributes will only be added if the change does not have the same value as the field in the data.</source>
          <target state="translated">只有当改变的属性与数据中的字段的值不相同时,才会添加改变的属性。</target>
        </trans-unit>
        <trans-unit id="3f55b9615f358dd1b0d1cd5f8bd5031b0d7c32d5" translate="yes" xml:space="preserve">
          <source>Changes all empty parameters to nils (&quot;&quot; -&amp;gt; nil)</source>
          <target state="translated">将所有空参数更改为nils（&amp;ldquo;&amp;rdquo;-&amp;gt; nil）</target>
        </trans-unit>
        <trans-unit id="1240b51d036bf14642c6213923da9a6da0fcd9a6" translate="yes" xml:space="preserve">
          <source>Changes all empty parameters to nils (&amp;ldquo;&amp;rdquo; -&amp;gt; nil).</source>
          <target state="translated">将所有空参数更改为nils（&amp;ldquo;&amp;rdquo;-&amp;gt; nil）。</target>
        </trans-unit>
        <trans-unit id="e85e8376066e6efa07d004cd93aa1d6c124968fb" translate="yes" xml:space="preserve">
          <source>Changes empty parameters of &lt;code&gt;required_key&lt;/code&gt; (recursively) to nils</source>
          <target state="translated">更改的空参数 &lt;code&gt;required_key&lt;/code&gt; （递归）尼尔斯</target>
        </trans-unit>
        <trans-unit id="ba2dbae392ef539a56ff20bd536d56826af3e21a" translate="yes" xml:space="preserve">
          <source>Changeset actions</source>
          <target state="translated">变更集动作</target>
        </trans-unit>
        <trans-unit id="4ff4e9ed29935614b3b0a4860d00f7c7fab653fd" translate="yes" xml:space="preserve">
          <source>Changesets</source>
          <target state="translated">Changesets</target>
        </trans-unit>
        <trans-unit id="15fe687723b50a7f1c89b99b8e32c64ca13bf776" translate="yes" xml:space="preserve">
          <source>Changesets allow developers to filter, cast, and validate changes before we apply them to the data. Imagine the given schema:</source>
          <target state="translated">变更集允许开发人员在我们将其应用于数据之前进行过滤、铸造和验证更改。想象一下给定的模式。</target>
        </trans-unit>
        <trans-unit id="106dc8111d962bf3fa4d30e3e04971c906cf60bd" translate="yes" xml:space="preserve">
          <source>Changesets allow filtering, casting, validation and definition of constraints when manipulating structs.</source>
          <target state="translated">变更集允许在操作结构时进行过滤、铸造、验证和定义约束。</target>
        </trans-unit>
        <trans-unit id="4826b62fc4c9e7e5326175150a971664f8ce5fbd" translate="yes" xml:space="preserve">
          <source>Changesets allow working with both kinds of data:</source>
          <target state="translated">变更集允许处理两种数据。</target>
        </trans-unit>
        <trans-unit id="44fa2c5bfbc3ec51c158e325fdf0f62d5ff5e9a9" translate="yes" xml:space="preserve">
          <source>Changesets and Validations</source>
          <target state="translated">变更集和验证</target>
        </trans-unit>
        <trans-unit id="97d4b08927d9aa72714889f4f73366760107150c" translate="yes" xml:space="preserve">
          <source>Changesets are also capable of transforming database constraints, like unique indexes and foreign key checks, into errors. Allowing developers to keep their database consistent while still providing proper feedback to end users. Check &lt;a href=&quot;ecto.changeset#unique_constraint/3&quot;&gt;&lt;code&gt;Ecto.Changeset.unique_constraint/3&lt;/code&gt;&lt;/a&gt; for some examples as well as the other &lt;code&gt;_constraint&lt;/code&gt; functions.</source>
          <target state="translated">变更集还能够将数据库约束（例如唯一索引和外键检查）转换为错误。允许开发人员在保持数据库一致性的同时仍向最终用户提供适当的反馈。检查&lt;a href=&quot;ecto.changeset#unique_constraint/3&quot;&gt; &lt;code&gt;Ecto.Changeset.unique_constraint/3&lt;/code&gt; &lt;/a&gt;中的一些示例以及其他 &lt;code&gt;_constraint&lt;/code&gt; 函数。</target>
        </trans-unit>
        <trans-unit id="eaabb4b1610b2670ddb90bb9b3f51b64b7f6fc71" translate="yes" xml:space="preserve">
          <source>Changesets can also be used with data in a plain map, by following the same API:</source>
          <target state="translated">变更集也可以和普通地图中的数据一起使用,遵循同样的API。</target>
        </trans-unit>
        <trans-unit id="02c97d5d2f0f30db43c46780b79195892e097895" translate="yes" xml:space="preserve">
          <source>Changesets define a pipeline of transformations our data needs to undergo before it will be ready for our application to use. These transformations might include type-casting, user input validation, and filtering out any extraneous parameters. Often we'll use changesets to validate user input before writing it to the database. Ecto Repos are also changeset-aware, which allows them not only to refuse invalid data, but also perform the minimal database updates possible by inspecting the changeset to know which fields have changed.</source>
          <target state="translated">变更集定义了我们的数据在准备好供我们的应用程序使用之前需要进行转换的管道。这些转换可能包括类型转换,用户输入验证,以及过滤掉任何无关的参数。通常情况下,我们会在将用户输入写入数据库之前使用变化集来验证用户输入。Ecto Repos还具有变化集感知功能,这使得它们不仅可以拒绝无效数据,而且还可以通过检查变化集来了解哪些字段发生了变化,从而执行尽可能少的数据库更新。</target>
        </trans-unit>
        <trans-unit id="f35e945b11b533c908a172bde59cd90a6810e709" translate="yes" xml:space="preserve">
          <source>Changesets do not support this type of constraints. When working with deferred constraints, a violation while invoking &lt;code&gt;Repo.insert/2&lt;/code&gt; or &lt;code&gt;Repo.update/2&lt;/code&gt; won&amp;rsquo;t return &lt;code&gt;{:error, changeset}&lt;/code&gt;, but rather raise an error at the end of the transaction.</source>
          <target state="translated">变更集不支持此类约束。使用延迟约束时，在调用 &lt;code&gt;Repo.insert/2&lt;/code&gt; 或 &lt;code&gt;Repo.update/2&lt;/code&gt; 时发生违规不会返回 &lt;code&gt;{:error, changeset}&lt;/code&gt; ，而是在事务结束时引发错误。</target>
        </trans-unit>
        <trans-unit id="53fb625fd2838e7e76530b2f06cf50c9d96a7cdb" translate="yes" xml:space="preserve">
          <source>Changesets do not support this type of constraints. When working with deferred constraints, a violation while invoking &lt;code&gt;Repo.insert/2&lt;/code&gt; or &lt;code&gt;Repo.update/2&lt;/code&gt; won't return &lt;code&gt;{:error, changeset}&lt;/code&gt;, but rather raise an error at the end of the transaction.</source>
          <target state="translated">变更集不支持此类约束。使用延迟约束时，在调用 &lt;code&gt;Repo.insert/2&lt;/code&gt; 或 &lt;code&gt;Repo.update/2&lt;/code&gt; 时发生违规不会返回 &lt;code&gt;{:error, changeset}&lt;/code&gt; ，而是在事务结束时引发错误。</target>
        </trans-unit>
        <trans-unit id="a4d719c687cbb64610b4daa85e8756d9334b9d25" translate="yes" xml:space="preserve">
          <source>Changesets have an action field which is usually set by &lt;a href=&quot;ecto.repo&quot;&gt;&lt;code&gt;Ecto.Repo&lt;/code&gt;&lt;/a&gt; whenever one of the operations such as &lt;code&gt;insert&lt;/code&gt; or &lt;code&gt;update&lt;/code&gt; is called:</source>
          <target state="translated">每次调用 &lt;code&gt;insert&lt;/code&gt; 或 &lt;code&gt;update&lt;/code&gt; 等操作之一时，变更集都有一个通常由&lt;a href=&quot;ecto.repo&quot;&gt; &lt;code&gt;Ecto.Repo&lt;/code&gt; &lt;/a&gt;设置的操作字段：</target>
        </trans-unit>
        <trans-unit id="24788605a643b294a485fe7186f622e7d307dc0a" translate="yes" xml:space="preserve">
          <source>Channel testing</source>
          <target state="translated">渠道测试</target>
        </trans-unit>
        <trans-unit id="e554fb4eb7fab7c704e73d8c51fda0b3df2886d9" translate="yes" xml:space="preserve">
          <source>Channels can reply, synchronously, to any &lt;code&gt;handle_in/3&lt;/code&gt; event. To match pushes with replies, clients must include a unique &lt;code&gt;ref&lt;/code&gt; with every message and the channel server will reply with a matching ref where the client can pick up the callback for the matching reply.</source>
          <target state="translated">通道可以同步回复任何 &lt;code&gt;handle_in/3&lt;/code&gt; 事件。为了使推送与回复匹配，客户端必须在每条消息中都包含唯一的 &lt;code&gt;ref&lt;/code&gt; ，并且通道服务器将使用匹配的引用进行回复，客户端可以在其中为匹配的回复选择回调。</target>
        </trans-unit>
        <trans-unit id="aa5494fe46265f9955154bc7bf0d7c3b9f070d29" translate="yes" xml:space="preserve">
          <source>Channels can send two types of message back to a transport: &lt;a href=&quot;phoenix.socket.message&quot;&gt;&lt;code&gt;Phoenix.Socket.Message&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;phoenix.socket.reply&quot;&gt;&lt;code&gt;Phoenix.Socket.Reply&lt;/code&gt;&lt;/a&gt;. Those messages are encoded in the channel into a format defined by the transport. That&amp;rsquo;s why transports are required to pass a serializer that abides to the behaviour described in &lt;a href=&quot;phoenix.transports.serializer&quot;&gt;&lt;code&gt;Phoenix.Transports.Serializer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">通道可以将两种类型的消息发送回传输：&lt;a href=&quot;phoenix.socket.message&quot;&gt; &lt;code&gt;Phoenix.Socket.Message&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;phoenix.socket.reply&quot;&gt; &lt;code&gt;Phoenix.Socket.Reply&lt;/code&gt; &lt;/a&gt;。这些消息在通道中编码为传输定义的格式。这就是为什么需要传输来传递遵循&lt;a href=&quot;phoenix.transports.serializer&quot;&gt; &lt;code&gt;Phoenix.Transports.Serializer&lt;/code&gt; 中&lt;/a&gt;描述的行为的序列化器。</target>
        </trans-unit>
        <trans-unit id="b3d27d901eb026cad065e54c8192d31e835b640f" translate="yes" xml:space="preserve">
          <source>Channels provide a means for bidirectional communication from clients that integrate with the &lt;a href=&quot;../phoenix_pubsub/1.0.2/phoenix.pubsub&quot;&gt;&lt;code&gt;Phoenix.PubSub&lt;/code&gt;&lt;/a&gt; layer for soft-realtime functionality.</source>
          <target state="translated">通道提供了一种与来自&lt;a href=&quot;../phoenix_pubsub/1.0.2/phoenix.pubsub&quot;&gt; &lt;code&gt;Phoenix.PubSub&lt;/code&gt; &lt;/a&gt;层的客户端进行双向通信的方式，以实现软实时功能。</target>
        </trans-unit>
        <trans-unit id="c5f16f980902be918678b9a56abce231c6af160b" translate="yes" xml:space="preserve">
          <source>Channels provide a means for bidirectional communication from clients that integrate with the &lt;a href=&quot;../phoenix_pubsub/phoenix.pubsub&quot;&gt;&lt;code&gt;Phoenix.PubSub&lt;/code&gt;&lt;/a&gt; layer for soft-realtime functionality.</source>
          <target state="translated">通道提供了一种与来自&lt;a href=&quot;../phoenix_pubsub/phoenix.pubsub&quot;&gt; &lt;code&gt;Phoenix.PubSub&lt;/code&gt; &lt;/a&gt;层的客户端进行双向通信的方式，以实现软实时功能。</target>
        </trans-unit>
        <trans-unit id="b2ae9471e7a712ab94fdb6bad36baf383fd99d00" translate="yes" xml:space="preserve">
          <source>Check &lt;a href=&quot;#datetime_select/3&quot;&gt;&lt;code&gt;datetime_select/3&lt;/code&gt;&lt;/a&gt; for more information on options and supported values.</source>
          <target state="translated">检查&lt;a href=&quot;#datetime_select/3&quot;&gt; &lt;code&gt;datetime_select/3&lt;/code&gt; &lt;/a&gt;以获取有关选项和支持的值的更多信息。</target>
        </trans-unit>
        <trans-unit id="0876127fa1f23c598e6ebc5194c252ea6036daa6" translate="yes" xml:space="preserve">
          <source>Check &lt;a href=&quot;#get_csrf_token/0&quot;&gt;&lt;code&gt;get_csrf_token/0&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#delete_csrf_token/0&quot;&gt;&lt;code&gt;delete_csrf_token/0&lt;/code&gt;&lt;/a&gt; for retrieving and deleting CSRF tokens.</source>
          <target state="translated">检查&lt;a href=&quot;#get_csrf_token/0&quot;&gt; &lt;code&gt;get_csrf_token/0&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#delete_csrf_token/0&quot;&gt; &lt;code&gt;delete_csrf_token/0&lt;/code&gt; &lt;/a&gt;以获取和删除CSRF令牌。</target>
        </trans-unit>
        <trans-unit id="36e8d73c5d9d7c1e6dd7e543b8d5b6cf640ee771" translate="yes" xml:space="preserve">
          <source>Check &lt;a href=&quot;#scope/2&quot;&gt;&lt;code&gt;scope/2&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#resources/4&quot;&gt;&lt;code&gt;resources/4&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">有关更多信息，请检查&lt;a href=&quot;#scope/2&quot;&gt; &lt;code&gt;scope/2&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#resources/4&quot;&gt; &lt;code&gt;resources/4&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="78921fd5a32a35386391dc343718e4bd2cd828f9" translate="yes" xml:space="preserve">
          <source>Check &lt;a href=&quot;ecto.schema#embeds_one/3&quot;&gt;&lt;code&gt;Ecto.Schema.embeds_one/3&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;ecto.schema#embeds_many/3&quot;&gt;&lt;code&gt;Ecto.Schema.embeds_many/3&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">检查&lt;a href=&quot;ecto.schema#embeds_one/3&quot;&gt; &lt;code&gt;Ecto.Schema.embeds_one/3&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;ecto.schema#embeds_many/3&quot;&gt; &lt;code&gt;Ecto.Schema.embeds_many/3&lt;/code&gt; &lt;/a&gt;了解更多信息。</target>
        </trans-unit>
        <trans-unit id="e2e590821015449553f7a083a040bba81687e098" translate="yes" xml:space="preserve">
          <source>Checking side-effects</source>
          <target state="translated">检查副作用</target>
        </trans-unit>
        <trans-unit id="6ac6252bbede5055777cad6522cdba3a204e3385" translate="yes" xml:space="preserve">
          <source>Checks for a check constraint in the given field</source>
          <target state="translated">检查给定字段中的检查约束。</target>
        </trans-unit>
        <trans-unit id="a007ae3fcb27398cfb2f8cfb88cd969c756755f6" translate="yes" xml:space="preserve">
          <source>Checks for a check constraint in the given field.</source>
          <target state="translated">检查给定字段中的检查约束。</target>
        </trans-unit>
        <trans-unit id="18d676cde979db601a52e91aaaf4476188fb0ed4" translate="yes" xml:space="preserve">
          <source>Checks for a unique constraint in the given field</source>
          <target state="translated">检查给定字段中是否有唯一的约束。</target>
        </trans-unit>
        <trans-unit id="649662d24fed594a5b98f75686d3faa9f43db79a" translate="yes" xml:space="preserve">
          <source>Checks for a unique constraint in the given field or list of fields.</source>
          <target state="translated">检查给定字段或字段列表中是否有唯一的约束。</target>
        </trans-unit>
        <trans-unit id="aa59f930724fcdea67d084d926d28fc4c15f4c03" translate="yes" xml:space="preserve">
          <source>Checks for a unique constraint in the given field.</source>
          <target state="translated">检查给定字段中是否有唯一的约束条件。</target>
        </trans-unit>
        <trans-unit id="1806f8814a9a2a5f10b61db2ed93331ad1ccc220" translate="yes" xml:space="preserve">
          <source>Checks for an exclusion constraint in the given field</source>
          <target state="translated">检查给定字段中是否有排他性约束。</target>
        </trans-unit>
        <trans-unit id="fa586f48c4ea975ae752e15729708ae4eb86c327" translate="yes" xml:space="preserve">
          <source>Checks for an exclusion constraint in the given field.</source>
          <target state="translated">检查给定字段中是否有排除约束。</target>
        </trans-unit>
        <trans-unit id="75666e8b3dce3b6bb93ea5456967b9687a782186" translate="yes" xml:space="preserve">
          <source>Checks for foreign key constraint in the given field</source>
          <target state="translated">检查给定字段中的外键约束。</target>
        </trans-unit>
        <trans-unit id="b3b2e641330818474410be9363a7acfdf6f7e027" translate="yes" xml:space="preserve">
          <source>Checks for foreign key constraint in the given field.</source>
          <target state="translated">检查给定字段中的外键约束。</target>
        </trans-unit>
        <trans-unit id="5fa1bef6695916bf62ca3fc0e50a6cca0de72c75" translate="yes" xml:space="preserve">
          <source>Checks if Endpoint&amp;rsquo;s web server has been configured to start</source>
          <target state="translated">检查是否已将Endpoint的Web服务器配置为启动</target>
        </trans-unit>
        <trans-unit id="771534d55fe1b3aac38a312bfe67507aff81041f" translate="yes" xml:space="preserve">
          <source>Checks if Endpoint&amp;rsquo;s web server has been configured to start.</source>
          <target state="translated">检查Endpoint的Web服务器是否已配置为启动。</target>
        </trans-unit>
        <trans-unit id="847a3f2e0a09c5f75b7436eacfe07fdda8f96913" translate="yes" xml:space="preserve">
          <source>Checks if Endpoint's web server has been configured to start.</source>
          <target state="translated">检查Endpoint的Web服务器是否已被配置为启动。</target>
        </trans-unit>
        <trans-unit id="963f346febde4845b780cb252e5679ea119288ec" translate="yes" xml:space="preserve">
          <source>Checks if a given type matches with a primitive type that can be found in queries</source>
          <target state="translated">检查给定类型是否与查询中可以找到的基元类型匹配。</target>
        </trans-unit>
        <trans-unit id="5e9a8212ae6f7073ddffb09a0d0e0eae45982cea" translate="yes" xml:space="preserve">
          <source>Checks if a given type matches with a primitive type that can be found in queries.</source>
          <target state="translated">检查给定类型是否与查询中可以找到的基元类型匹配。</target>
        </trans-unit>
        <trans-unit id="c8de4dbd68477598dffed3dcaf6a30c4ed80304c" translate="yes" xml:space="preserve">
          <source>Checks if an association is loaded</source>
          <target state="translated">检查是否加载了关联</target>
        </trans-unit>
        <trans-unit id="6d1a314f9be25f92609b0bf832c30f5da98f3a76" translate="yes" xml:space="preserve">
          <source>Checks if an association is loaded.</source>
          <target state="translated">检查是否加载了关联。</target>
        </trans-unit>
        <trans-unit id="92874536f2bd61a01795ca88b0a59254d1460cf5" translate="yes" xml:space="preserve">
          <source>Checks if set has a non-empty delta</source>
          <target state="translated">检查集合是否有一个非空的delta。</target>
        </trans-unit>
        <trans-unit id="5da5d365962f5490f61e15a84082285451a63d49" translate="yes" xml:space="preserve">
          <source>Checks if set has a non-empty delta.</source>
          <target state="translated">检查是否有非空的delta。</target>
        </trans-unit>
        <trans-unit id="564a0175282bccd2d3d63e852b826ecb9098e420" translate="yes" xml:space="preserve">
          <source>Checks if the given &lt;code&gt;selector&lt;/code&gt; with &lt;code&gt;text_filter&lt;/code&gt; is on &lt;code&gt;view&lt;/code&gt;.</source>
          <target state="translated">检查带有 &lt;code&gt;text_filter&lt;/code&gt; 的给定 &lt;code&gt;selector&lt;/code&gt; 是否在 &lt;code&gt;view&lt;/code&gt; 上。</target>
        </trans-unit>
        <trans-unit id="b45c07482c336ba440a9fdb88056674d4c21bc6b" translate="yes" xml:space="preserve">
          <source>Checks if the given atom can be used as base type</source>
          <target state="translated">确认给定的原子是否可以作为基本类型使用。</target>
        </trans-unit>
        <trans-unit id="f3e31e2d1943a777f5e51ad6c5913e9026f39c24" translate="yes" xml:space="preserve">
          <source>Checks if the given atom can be used as base type.</source>
          <target state="translated">确认给定的原子是否可以作为基本类型使用。</target>
        </trans-unit>
        <trans-unit id="f087876ed1366027b27ce3f6d468eff9f6993be5" translate="yes" xml:space="preserve">
          <source>Checks if the given atom can be used as composite type</source>
          <target state="translated">确认给定原子是否可以作为复合类型使用。</target>
        </trans-unit>
        <trans-unit id="c182b160ab8eb55a3f19b370e22b4a383096218f" translate="yes" xml:space="preserve">
          <source>Checks if the given atom can be used as composite type.</source>
          <target state="translated">确认给定原子是否可以作为复合类型使用。</target>
        </trans-unit>
        <trans-unit id="d0246439706f8cb02cffdfb4545b9983204e9f4a" translate="yes" xml:space="preserve">
          <source>Checks if the given element exists on the page.</source>
          <target state="translated">检查页面上是否存在给定的元素。</target>
        </trans-unit>
        <trans-unit id="ec2ead142ebe4a2acd898e340f5a641a34de0cd1" translate="yes" xml:space="preserve">
          <source>Checks if the given value is nil</source>
          <target state="translated">检查给定值是否为nil</target>
        </trans-unit>
        <trans-unit id="ba10eedbcbac96de733b45e57696f86fd9e2ae1a" translate="yes" xml:space="preserve">
          <source>Checks if the given value is nil.</source>
          <target state="translated">检查给定值是否为nil。</target>
        </trans-unit>
        <trans-unit id="1ff1fb2e41e4abad270b1d1faf934efc56ffec15" translate="yes" xml:space="preserve">
          <source>Checks if the left-value is included in the right one</source>
          <target state="translated">检查左值是否包含在右值中。</target>
        </trans-unit>
        <trans-unit id="012a92f0ea9c7b9bd332b5b0280f7b3e079b95d6" translate="yes" xml:space="preserve">
          <source>Checks if the left-value is included in the right one.</source>
          <target state="translated">检查左值是否包含在右值中。</target>
        </trans-unit>
        <trans-unit id="ff79efe7f70ca6c7a26880d90f9fdcf1b5e2e115" translate="yes" xml:space="preserve">
          <source>Checks if there exists an entry that matches the given query</source>
          <target state="translated">检查是否存在与给定查询匹配的条目。</target>
        </trans-unit>
        <trans-unit id="01ba608b03c189712dac599e833b596871fe995e" translate="yes" xml:space="preserve">
          <source>Checks if there exists an entry that matches the given query.</source>
          <target state="translated">检查是否存在与给定查询匹配的条目。</target>
        </trans-unit>
        <trans-unit id="389242c9a730035773dd2bfb10ced2e95b92bbe5" translate="yes" xml:space="preserve">
          <source>Checks if two terms are equal</source>
          <target state="translated">检查两个术语是否相等</target>
        </trans-unit>
        <trans-unit id="38a69d5cc36841de8cb46e3c595f0840ce93f8d2" translate="yes" xml:space="preserve">
          <source>Checks if two terms are equal.</source>
          <target state="translated">检查两个术语是否相等。</target>
        </trans-unit>
        <trans-unit id="fdde16246d41643a71fab5ae2a319f1ca2bec878" translate="yes" xml:space="preserve">
          <source>Checks if two terms are semantically equal</source>
          <target state="translated">检查两个术语是否在语义上相等。</target>
        </trans-unit>
        <trans-unit id="6646b3291804effbb7f740fa536c58d472e9a65b" translate="yes" xml:space="preserve">
          <source>Checks if two terms are semantically equal.</source>
          <target state="translated">检查两个术语是否在语义上相等。</target>
        </trans-unit>
        <trans-unit id="3706563a91c576d80ebc42e1e60ed72b66677397" translate="yes" xml:space="preserve">
          <source>Checks if we have a primitive type</source>
          <target state="translated">检查我们是否有一个基元类型</target>
        </trans-unit>
        <trans-unit id="d94cdaa6c65db405671997b233631e33f3635ec0" translate="yes" xml:space="preserve">
          <source>Checks if we have a primitive type.</source>
          <target state="translated">检查我们是否有一个基元类型。</target>
        </trans-unit>
        <trans-unit id="ce70e4262eea85373e3f962f772047eb2b5cf584" translate="yes" xml:space="preserve">
          <source>Checks out a connection for the duration of the function</source>
          <target state="translated">在函数的持续时间内检查出一个连接。</target>
        </trans-unit>
        <trans-unit id="f8d5ddc97e30fb43102d8e232102ad0e94918cbc" translate="yes" xml:space="preserve">
          <source>Checks out a connection for the duration of the function.</source>
          <target state="translated">在函数的持续时间内检查出一个连接。</target>
        </trans-unit>
        <trans-unit id="b4191a0c935af45665f885d48471cec8420ff8f6" translate="yes" xml:space="preserve">
          <source>Checks out a connection for the duration of the given function</source>
          <target state="translated">在给定函数的持续时间内检查出一个连接。</target>
        </trans-unit>
        <trans-unit id="432c332c21e1ebe651f69db561aa30d3341e739c" translate="yes" xml:space="preserve">
          <source>Checks out a connection for the duration of the given function.</source>
          <target state="translated">在给定函数的持续时间内检查出一个连接。</target>
        </trans-unit>
        <trans-unit id="4d6f1ecf827d3f23473f3bbd2470ba23b02f45dd" translate="yes" xml:space="preserve">
          <source>Checks the Websocket subprotocols request header against the allowed subprotocols.</source>
          <target state="translated">根据允许的子协议检查 Websocket 子协议请求头。</target>
        </trans-unit>
        <trans-unit id="b26ef7e7f2c927fed219263f4d0d0a8b4e9f30af" translate="yes" xml:space="preserve">
          <source>Checks the associated field does not exist</source>
          <target state="translated">检查相关字段是否存在</target>
        </trans-unit>
        <trans-unit id="bd86aa766094ca0b2d939788a04bc10d840c8eda" translate="yes" xml:space="preserve">
          <source>Checks the associated field does not exist.</source>
          <target state="translated">检查相关字段是否存在。</target>
        </trans-unit>
        <trans-unit id="6501c966cafe6555cac818a9fd8b0d64fb1327f4" translate="yes" xml:space="preserve">
          <source>Checks the associated field exists</source>
          <target state="translated">检查相关字段是否存在</target>
        </trans-unit>
        <trans-unit id="10b1ca019610fea359d98628c9db1be68d7b49da" translate="yes" xml:space="preserve">
          <source>Checks the associated field exists.</source>
          <target state="translated">检查相关字段是否存在。</target>
        </trans-unit>
        <trans-unit id="f90bf014a68be0e1e612c9cab06f18981fe73e91" translate="yes" xml:space="preserve">
          <source>Checks the origin request header against the list of allowed origins</source>
          <target state="translated">根据允许的起源列表检查起源请求头。</target>
        </trans-unit>
        <trans-unit id="9bf75f3781d0dbe77c4656080b8da67d7099adab" translate="yes" xml:space="preserve">
          <source>Checks the origin request header against the list of allowed origins.</source>
          <target state="translated">根据允许的起源列表检查起源请求头。</target>
        </trans-unit>
        <trans-unit id="d01c2aab6be8cde7caad416de7bc0d04d65e24c6" translate="yes" xml:space="preserve">
          <source>Checks to see if the &lt;code&gt;required_key&lt;/code&gt; is present</source>
          <target state="translated">检查是否存在 &lt;code&gt;required_key&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c4e66d6a6903255b0703717c7e856b65d04f4679" translate="yes" xml:space="preserve">
          <source>Checks to see if the required_key is present (can be empty)</source>
          <target state="translated">检查是否存在 required_key (可以为空)</target>
        </trans-unit>
        <trans-unit id="b142803c5465bab9124b00891727a126ba33d366" translate="yes" xml:space="preserve">
          <source>Children are returned in the order they appear in the rendered HTML.</source>
          <target state="translated">孩子们会按照他们在渲染的HTML中出现的顺序返回。</target>
        </trans-unit>
        <trans-unit id="6929a94fa1722ac5684bbfa4457c2e9ae0947c95" translate="yes" xml:space="preserve">
          <source>Cipher Suites</source>
          <target state="translated">密码套房</target>
        </trans-unit>
        <trans-unit id="b090f344738a81b88d35ff78ee37412da844f371" translate="yes" xml:space="preserve">
          <source>Clears a key from the flash.</source>
          <target state="translated">清除闪光灯中的按键。</target>
        </trans-unit>
        <trans-unit id="3f908ace8be79c6747236457248fd8f0a02cf607" translate="yes" xml:space="preserve">
          <source>Clears all flash messages</source>
          <target state="translated">清除所有闪光信息</target>
        </trans-unit>
        <trans-unit id="dcfd4db63de578c0ce575e1784274c31299c16f5" translate="yes" xml:space="preserve">
          <source>Clears all flash messages.</source>
          <target state="translated">清除所有闪光信息。</target>
        </trans-unit>
        <trans-unit id="b5587a1be7dabdd4ea76580016a9a98fe251614b" translate="yes" xml:space="preserve">
          <source>Clears the entire session</source>
          <target state="translated">清理整个会议</target>
        </trans-unit>
        <trans-unit id="ba79f95b8ce1750f56350e7f99c4a89ccd2f2fde" translate="yes" xml:space="preserve">
          <source>Clears the entire session.</source>
          <target state="translated">清理整个会话。</target>
        </trans-unit>
        <trans-unit id="e1d43b78047ef86816aa8de85514822df9397e4e" translate="yes" xml:space="preserve">
          <source>Clears the flash.</source>
          <target state="translated">清除闪光。</target>
        </trans-unit>
        <trans-unit id="8349eb1eacd2b2432ee3a410d4c08f5f24e21e78" translate="yes" xml:space="preserve">
          <source>Clears up the flash storage</source>
          <target state="translated">清理闪存</target>
        </trans-unit>
        <trans-unit id="c7267abbc6b07fa0a184e7ba7bef3624af318696" translate="yes" xml:space="preserve">
          <source>Clears up the flash storage.</source>
          <target state="translated">清理闪存。</target>
        </trans-unit>
        <trans-unit id="7db198a937ac58d5e998c1fdbce3834a5ff9eca3" translate="yes" xml:space="preserve">
          <source>Click Events</source>
          <target state="translated">点击事件</target>
        </trans-unit>
        <trans-unit id="60cf063996c1b9df2a4517de67012a483badcb20" translate="yes" xml:space="preserve">
          <source>Client hooks</source>
          <target state="translated">客户端钩子</target>
        </trans-unit>
        <trans-unit id="6dc111d8da02e06dcfa7f3b586b2d25ecc95c4de" translate="yes" xml:space="preserve">
          <source>Client-server communication</source>
          <target state="translated">客户端-服务器通信</target>
        </trans-unit>
        <trans-unit id="6192be022a56d51376cfc6e08fa20fe84d29d186" translate="yes" xml:space="preserve">
          <source>Client-side</source>
          <target state="translated">Client-side</target>
        </trans-unit>
        <trans-unit id="a4fc1028434897d0d9b57e73e4734c9104f06a17" translate="yes" xml:space="preserve">
          <source>Clients are expected to send the Channel Transport protocol version that they expect to be talking to. The version can be retrieved on the server from &lt;code&gt;Phoenix.Channel.Transport.protocol_version/0&lt;/code&gt;. If no version is provided, the Transport adapters should default to assume a &lt;code&gt;&quot;1.0.0&quot;&lt;/code&gt; version number. See &lt;code&gt;web/static/js/phoenix.js&lt;/code&gt; for an example transport client implementation.</source>
          <target state="translated">客户端应发送希望与之交谈的通道传输协议版本。可以从 &lt;code&gt;Phoenix.Channel.Transport.protocol_version/0&lt;/code&gt; 在服务器上检索该版本。如果未提供任何版本，则传输适配器应默认采用 &lt;code&gt;&quot;1.0.0&quot;&lt;/code&gt; 版本号。有关传输客户端实现的示例，请参见 &lt;code&gt;web/static/js/phoenix.js&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bb642ce3e7dd820f226a0eb2901f439ddb01422d" translate="yes" xml:space="preserve">
          <source>Clients can be implemented for other protocols and encodings by abiding by the &lt;a href=&quot;phoenix.socket.message&quot;&gt;&lt;code&gt;Phoenix.Socket.Message&lt;/code&gt;&lt;/a&gt; format.</source>
          <target state="translated">通过遵守&lt;a href=&quot;phoenix.socket.message&quot;&gt; &lt;code&gt;Phoenix.Socket.Message&lt;/code&gt; &lt;/a&gt;格式，可以为其他协议和编码实现客户端。</target>
        </trans-unit>
        <trans-unit id="1084b5d1689adfabc4b29c44836fe5d9e843e847" translate="yes" xml:space="preserve">
          <source>Clients must join a channel to send and receive PubSub events on that channel. Your channels must implement a &lt;code&gt;join/3&lt;/code&gt; callback that authorizes the socket for the given topic. For example, you could check if the user is allowed to join that particular room.</source>
          <target state="translated">客户端必须加入频道才能在该频道上发送和接收PubSub事件。您的频道必须实现 &lt;code&gt;join/3&lt;/code&gt; 回调，该回调可授权给定主题的套接字。例如，您可以检查是否允许用户加入该特定房间。</target>
        </trans-unit>
        <trans-unit id="e3e91ba77145ff728ca9d0eac7d3d982a8f9407e" translate="yes" xml:space="preserve">
          <source>Closing channels is synchronous and has a default timeout of 5000 milliseconds.</source>
          <target state="translated">关闭通道是同步的,默认超时5000毫秒。</target>
        </trans-unit>
        <trans-unit id="211a906235b1f831858d7b7ecaa5593d162a799c" translate="yes" xml:space="preserve">
          <source>Closing socket is synchronous and has a default timeout of 5000 milliseconds.</source>
          <target state="translated">关闭socket是同步的,默认超时5000毫秒。</target>
        </trans-unit>
        <trans-unit id="3e8feceb74b432c8991b667a9c81c5f8e448eea1" translate="yes" xml:space="preserve">
          <source>Colocating templates</source>
          <target state="translated">合用模板</target>
        </trans-unit>
        <trans-unit id="a59323355e7bcb25157e9c8251a4dbc71cc359d9" translate="yes" xml:space="preserve">
          <source>Combines result sets of multiple queries. The &lt;code&gt;select&lt;/code&gt; of each query must be exactly the same, with the same types in the same order.</source>
          <target state="translated">合并多个查询的结果集。每个查询的 &lt;code&gt;select&lt;/code&gt; 必须完全相同，并且类型相同且顺序相同。</target>
        </trans-unit>
        <trans-unit id="6e3d3bf1961b8057b125fc05310e2099de8793b0" translate="yes" xml:space="preserve">
          <source>Command line options</source>
          <target state="translated">命令行选项</target>
        </trans-unit>
        <trans-unit id="4ab6bd65a3f415745443c9f59c3ccefed58137d8" translate="yes" xml:space="preserve">
          <source>Commands invoked to prepare a query for &lt;code&gt;all&lt;/code&gt;, &lt;code&gt;update_all&lt;/code&gt; and &lt;code&gt;delete_all&lt;/code&gt;</source>
          <target state="translated">调用命令以准备查询 &lt;code&gt;all&lt;/code&gt; ， &lt;code&gt;update_all&lt;/code&gt; 和 &lt;code&gt;delete_all&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="196b5fd56be1b957e32ac7a8b4599e84def88107" translate="yes" xml:space="preserve">
          <source>Commands invoked to prepare a query for &lt;code&gt;all&lt;/code&gt;, &lt;code&gt;update_all&lt;/code&gt; and &lt;code&gt;delete_all&lt;/code&gt;.</source>
          <target state="translated">调用命令以为 &lt;code&gt;all&lt;/code&gt; ， &lt;code&gt;update_all&lt;/code&gt; 和 &lt;code&gt;delete_all&lt;/code&gt; 准备查询。</target>
        </trans-unit>
        <trans-unit id="2844301d97258408e0b56ee5fddb3e205580943f" translate="yes" xml:space="preserve">
          <source>Commands invoked to prepare a query.</source>
          <target state="translated">为准备查询而调用的命令。</target>
        </trans-unit>
        <trans-unit id="79b9d1e12cf78bff3e5126e9af3c55d4704a30ae" translate="yes" xml:space="preserve">
          <source>Common configuration</source>
          <target state="translated">通用配置</target>
        </trans-unit>
        <trans-unit id="b4da77b60ddb851ca91679487f66b5c5a58ccc10" translate="yes" xml:space="preserve">
          <source>Communication with the hook from the server can be done by reading data attributes on the hook element, or by using &lt;code&gt;push_event&lt;/code&gt; on the server and &lt;code&gt;handleEvent&lt;/code&gt; on the client.</source>
          <target state="translated">可以通过读取hook元素上的数据属性，或通过使用服务器上的 &lt;code&gt;push_event&lt;/code&gt; 和客户端上的 &lt;code&gt;handleEvent&lt;/code&gt; 来与服务器上的钩子进行通信。</target>
        </trans-unit>
        <trans-unit id="bfd58ee3a270f3a931009900e1008d549bbd7453" translate="yes" xml:space="preserve">
          <source>Community</source>
          <target state="translated">Community</target>
        </trans-unit>
        <trans-unit id="17421e6e6e98cfbe7a994fbcda25e417477a715d" translate="yes" xml:space="preserve">
          <source>Compacts a sets causal history</source>
          <target state="translated">压实一组因果史</target>
        </trans-unit>
        <trans-unit id="387a836476bd6348742ec8318b4d33ea95c699a4" translate="yes" xml:space="preserve">
          <source>Compacts a sets causal history.</source>
          <target state="translated">夯实一个集合的因果历史。</target>
        </trans-unit>
        <trans-unit id="689d04b0d0b115ca5fb5f7a16877d0c6bb47657f" translate="yes" xml:space="preserve">
          <source>Comparison operators: &lt;code&gt;==&lt;/code&gt;, &lt;code&gt;!=&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">比较运算符： &lt;code&gt;==&lt;/code&gt; ， &lt;code&gt;!=&lt;/code&gt; ， &lt;code&gt;&amp;lt;=&lt;/code&gt; ， &lt;code&gt;&amp;gt;=&lt;/code&gt; ， &lt;code&gt;&amp;lt;&lt;/code&gt; ， &lt;code&gt;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="918bcba54fa026c44f1439f7ab9003c0124cef3c" translate="yes" xml:space="preserve">
          <source>Compartmentalizing markup and events with &lt;code&gt;render&lt;/code&gt;, &lt;code&gt;live_render&lt;/code&gt;, and &lt;code&gt;live_component&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;render&lt;/code&gt; ， &lt;code&gt;live_render&lt;/code&gt; 和 &lt;code&gt;live_component&lt;/code&gt; 对标记和事件进行分区</target>
        </trans-unit>
        <trans-unit id="3993a075f65ea9d57f80c74dc0601a16a30c7c44" translate="yes" xml:space="preserve">
          <source>Compile-time configuration</source>
          <target state="translated">编译时配置</target>
        </trans-unit>
        <trans-unit id="1732a6d3f04e93c72bd4b9dfb702a0241b040d30" translate="yes" xml:space="preserve">
          <source>Compile-time usage</source>
          <target state="translated">编译时使用情况</target>
        </trans-unit>
        <trans-unit id="b43a18b461359f050a29f398ede2e96a808b8612" translate="yes" xml:space="preserve">
          <source>Compiles Phoenix source files that support code reloading.</source>
          <target state="translated">编译Phoenix源文件,支持代码重载。</target>
        </trans-unit>
        <trans-unit id="30bc423bb2cee749c72b094a1a1ffbbd38821f9a" translate="yes" xml:space="preserve">
          <source>Compiles a plug pipeline</source>
          <target state="translated">编制一个插件管道</target>
        </trans-unit>
        <trans-unit id="e9e8fa12309768a3e1cb93436c2d3b7b30a47e37" translate="yes" xml:space="preserve">
          <source>Compiles a plug pipeline.</source>
          <target state="translated">编制一个插件管道。</target>
        </trans-unit>
        <trans-unit id="b2e575ea9a9d857d6127db02e0797a8f845cd20f" translate="yes" xml:space="preserve">
          <source>Complex constraints</source>
          <target state="translated">复杂的制约因素</target>
        </trans-unit>
        <trans-unit id="9289473eeedaee09d76c8cf1b6994d8550debf46" translate="yes" xml:space="preserve">
          <source>Components</source>
          <target state="translated">Components</target>
        </trans-unit>
        <trans-unit id="61ad8d08839edaa60a290fd60feaea502067b874" translate="yes" xml:space="preserve">
          <source>Components are a mechanism to compartmentalize state, markup, and events in LiveView.</source>
          <target state="translated">组件是一种在LiveView中对状态、标记和事件进行分类的机制。</target>
        </trans-unit>
        <trans-unit id="ef0ea54f7bf365485bc86939f503cb32aa67473d" translate="yes" xml:space="preserve">
          <source>Components are defined by using &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Phoenix.LiveComponent&lt;/code&gt;&lt;/a&gt; and are used by calling &lt;a href=&quot;phoenix.liveview.helpers#live_component/3&quot;&gt;&lt;code&gt;Phoenix.LiveView.Helpers.live_component/3&lt;/code&gt;&lt;/a&gt; in a parent LiveView. Components run inside the LiveView process, but may have their own state and event handling.</source>
          <target state="translated">通过使用&lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Phoenix.LiveComponent&lt;/code&gt; &lt;/a&gt;定义组件，并通过在父LiveView中调用&lt;a href=&quot;phoenix.liveview.helpers#live_component/3&quot;&gt; &lt;code&gt;Phoenix.LiveView.Helpers.live_component/3&lt;/code&gt; &lt;/a&gt;来使用组件。组件在LiveView进程内部运行，但是可能具有自己的状态和事件处理。</target>
        </trans-unit>
        <trans-unit id="a61d88321aaa2265b05d3307f6d82fcf04ba645c" translate="yes" xml:space="preserve">
          <source>Components come in two shapes, stateless or stateful. The component above is a stateless component. Of course, the component above is not any different compared to a regular function. However, as we will see, components do provide their own exclusive feature set.</source>
          <target state="translated">组件有两种形态,无状态和有状态。上面的组件就是一个无状态的组件。当然,上面的组件与普通的函数相比,并没有任何不同。然而,正如我们将看到的,组件确实提供了自己独有的功能集。</target>
        </trans-unit>
        <trans-unit id="824202a9d631b91d01f0aa367477e1e79210f424" translate="yes" xml:space="preserve">
          <source>Components have their own &lt;code&gt;mount&lt;/code&gt; and &lt;code&gt;handle_event&lt;/code&gt; callbacks, as well as their own state with change tracking support. Components are also lightweight as they &quot;run&quot; in the same process as the parent &lt;code&gt;LiveView&lt;/code&gt;. However, this means an error in a component would cause the whole view to fail to render. See &lt;a href=&quot;phoenix.livecomponent&quot;&gt;&lt;code&gt;Phoenix.LiveComponent&lt;/code&gt;&lt;/a&gt; for a complete rundown on components.</source>
          <target state="translated">组件具有自己的 &lt;code&gt;mount&lt;/code&gt; 和 &lt;code&gt;handle_event&lt;/code&gt; 回调，以及具有更改跟踪支持的自身状态。组件在与父 &lt;code&gt;LiveView&lt;/code&gt; 相同的过程中&amp;ldquo;运行&amp;rdquo;时，重量也很轻。但是，这意味着组件中的错误将导致整个视图无法渲染。有关组件的完整&lt;a href=&quot;phoenix.livecomponent&quot;&gt; &lt;code&gt;Phoenix.LiveComponent&lt;/code&gt; &lt;/a&gt;，请参见Phoenix.LiveComponent。</target>
        </trans-unit>
        <trans-unit id="80029706257f6bb5bf751796fe48f206d839010b" translate="yes" xml:space="preserve">
          <source>Components must only contain HTML tags at their root. At least one HTML tag must be present. It is not possible to have components that render only text or text mixed with tags at the root.</source>
          <target state="translated">组件的根部必须只包含HTML标签。至少必须有一个HTML标签。不可能有只渲染文本或文本与根部标签混合的组件。</target>
        </trans-unit>
        <trans-unit id="f8c2b863c07cfef68051076ce1f2fcd3a7775d8e" translate="yes" xml:space="preserve">
          <source>Components require at least one HTML tag</source>
          <target state="translated">组件至少需要一个HTML标签</target>
        </trans-unit>
        <trans-unit id="160e7d38bdd6d8bd71eb9ce1b70c379e002b9b0e" translate="yes" xml:space="preserve">
          <source>Composing casts</source>
          <target state="translated">组成铸件</target>
        </trans-unit>
        <trans-unit id="51c4e7e67d8ce6dd5ce03ffdf7dcbcd8ccb2b24b" translate="yes" xml:space="preserve">
          <source>Composing queries uses the same syntax as creating a query. The difference is that, instead of passing a schema like &lt;code&gt;User&lt;/code&gt; on the right side of &lt;code&gt;in&lt;/code&gt;, we passed the query itself.</source>
          <target state="translated">组成查询的语法与创建查询的语法相同。不同之处在于，我们没有传递诸如 &lt;code&gt;in&lt;/code&gt; 之类的 &lt;code&gt;User&lt;/code&gt; 之类的架构，而是传递了查询本身。</target>
        </trans-unit>
        <trans-unit id="f024ecebf7e716ebba68f23ecf0097530cb0ba47" translate="yes" xml:space="preserve">
          <source>Composite types, such as &lt;code&gt;:array&lt;/code&gt;, are also supported:</source>
          <target state="translated">还支持复合类型，例如 &lt;code&gt;:array&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="ca5e00120498b815c12de59fd45e93f8086a8bfc" translate="yes" xml:space="preserve">
          <source>Composition</source>
          <target state="translated">Composition</target>
        </trans-unit>
        <trans-unit id="ed2ff637c10fb1755e29c0eb2376d67d8e5a91b4" translate="yes" xml:space="preserve">
          <source>Comprehensions</source>
          <target state="translated">Comprehensions</target>
        </trans-unit>
        <trans-unit id="754164850f38c1ecdaf6b8ed894cb192bc36c5f4" translate="yes" xml:space="preserve">
          <source>Configuration</source>
          <target state="translated">Configuration</target>
        </trans-unit>
        <trans-unit id="fd39b3c73364e5cbcaa44c4b6b54b470d09a0303" translate="yes" xml:space="preserve">
          <source>Configure the server to choose a cipher based on its own preferences rather than the client's (&lt;code&gt;honor_cipher_order&lt;/code&gt; set to &lt;code&gt;true&lt;/code&gt;); when specifying a custom cipher list, ensure the ciphers are listed in descending order of preference</source>
          <target state="translated">将服务器配置为根据其自身的偏好而不是客户端的偏好来选择密码（ &lt;code&gt;honor_cipher_order&lt;/code&gt; 设置为 &lt;code&gt;true&lt;/code&gt; ）；指定自定义密码列表时，请确保按优先级降序列出密码</target>
        </trans-unit>
        <trans-unit id="0094bc74195c0ce7d0dd3d154aa59e783fd72fdf" translate="yes" xml:space="preserve">
          <source>Configures and validates the options given to the &lt;code&gt;:ssl&lt;/code&gt; application</source>
          <target state="translated">配置和验证给 &lt;code&gt;:ssl&lt;/code&gt; 应用程序提供的选项</target>
        </trans-unit>
        <trans-unit id="56ec8a61db64af5a01bc5e526abfe3c1561050d8" translate="yes" xml:space="preserve">
          <source>Configures and validates the options given to the &lt;code&gt;:ssl&lt;/code&gt; application.</source>
          <target state="translated">配置并验证给予 &lt;code&gt;:ssl&lt;/code&gt; 应用程序的选项。</target>
        </trans-unit>
        <trans-unit id="ffe444e22547ee9f84bad3b053149c9ec3dab7f5" translate="yes" xml:space="preserve">
          <source>Configures the session</source>
          <target state="translated">配置会话</target>
        </trans-unit>
        <trans-unit id="8d1eeb71dc4b14892934e634b5b3675174b1ea15" translate="yes" xml:space="preserve">
          <source>Configures the session.</source>
          <target state="translated">配置会话。</target>
        </trans-unit>
        <trans-unit id="4765f177d51788fc512d290e0c38dd80dfe5dd67" translate="yes" xml:space="preserve">
          <source>Connect info are only sent when the client connects to the server and only remain available during mount. &lt;code&gt;nil&lt;/code&gt; is returned when called in a disconnected state and a &lt;a href=&quot;https://hexdocs.pm/elixir/RuntimeError.html&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; is raised if called after mount.</source>
          <target state="translated">连接信息仅在客户端连接到服务器时发送，并且仅在安装期间保持可用。在断开连接状态下调用时，将返回 &lt;code&gt;nil&lt;/code&gt; ;如果在安装后调用，则会引发&lt;a href=&quot;https://hexdocs.pm/elixir/RuntimeError.html&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="49de342bd826df7e0023dee547fe1abefc5286de" translate="yes" xml:space="preserve">
          <source>Connect params are only sent when the client connects to the server and only remain available during mount. &lt;code&gt;nil&lt;/code&gt; is returned when called in a disconnected state and a &lt;a href=&quot;https://hexdocs.pm/elixir/RuntimeError.html&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; is raised if called after mount.</source>
          <target state="translated">仅当客户端连接到服务器时才发送连接参数，并且仅在安装期间保持可用。在断开连接状态下调用时，将返回 &lt;code&gt;nil&lt;/code&gt; ;如果在安装后调用，则会引发&lt;a href=&quot;https://hexdocs.pm/elixir/RuntimeError.html&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6512ee1541e9a6c52d5bf7cf465332e8df25ea3c" translate="yes" xml:space="preserve">
          <source>Connection</source>
          <target state="translated">Connection</target>
        </trans-unit>
        <trans-unit id="623f71d860d9d5252b3bc03398edbc723671e7b8" translate="yes" xml:space="preserve">
          <source>Connection fields</source>
          <target state="translated">连接字段</target>
        </trans-unit>
        <trans-unit id="ad13d05763aa9834d363dfca9b25f6880b260ce0" translate="yes" xml:space="preserve">
          <source>Connects the Phoenix.Socket for a LiveView client.</source>
          <target state="translated">为LiveView客户端连接Phoenix.Socket。</target>
        </trans-unit>
        <trans-unit id="42532c5ec85156dd2636fd9d43331282c462a13d" translate="yes" xml:space="preserve">
          <source>Connects to the socket.</source>
          <target state="translated">连接到插座。</target>
        </trans-unit>
        <trans-unit id="825d466786d2b398b37d8973f0e317876f33b62a" translate="yes" xml:space="preserve">
          <source>Consider the case where the application layout allows views to dynamically render a section of script tags in the head of the document. Some views may wish to inject certain scripts, while others will not.</source>
          <target state="translated">考虑到这样的情况:应用程序布局允许视图在文档头部动态呈现一段脚本标签。一些视图可能希望注入某些脚本,而其他视图则不希望。</target>
        </trans-unit>
        <trans-unit id="0ec4a9286270cbc6f1229b77dcc30015580bc8f8" translate="yes" xml:space="preserve">
          <source>Consider using &lt;a href=&quot;plug.csrfprotection&quot;&gt;&lt;code&gt;Plug.CSRFProtection&lt;/code&gt;&lt;/a&gt; when using &lt;a href=&quot;plug.session#content&quot;&gt;&lt;code&gt;Plug.Session&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">使用&lt;a href=&quot;plug.csrfprotection&quot;&gt; &lt;code&gt;Plug.CSRFProtection&lt;/code&gt; &lt;/a&gt;时，请考虑使用&lt;a href=&quot;plug.session#content&quot;&gt; &lt;code&gt;Plug.Session&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e040a458f46532a90ec69fa0b4bfc33ba151c98b" translate="yes" xml:space="preserve">
          <source>Containers</source>
          <target state="translated">Containers</target>
        </trans-unit>
        <trans-unit id="cc11b3a28fa30ae6d3d3ad1438824cbd5224ba5c" translate="yes" xml:space="preserve">
          <source>Context</source>
          <target state="translated">Context</target>
        </trans-unit>
        <trans-unit id="049c25129edc0e21a3c2b9240307623c8b16b3e6" translate="yes" xml:space="preserve">
          <source>Contexts</source>
          <target state="translated">Contexts</target>
        </trans-unit>
        <trans-unit id="70047afe3e810a0b6eea22e32c29f411e2ee4eae" translate="yes" xml:space="preserve">
          <source>Contexts are dedicated modules that expose and group related functionality. For example, anytime you call Elixir's standard library, be it &lt;a href=&quot;https://hexdocs.pm/logger/Logger.html#info/1&quot;&gt;&lt;code&gt;Logger.info/1&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://hexdocs.pm/elixir/Stream.html#map/2&quot;&gt;&lt;code&gt;Stream.map/2&lt;/code&gt;&lt;/a&gt;, you are accessing different contexts. Internally, Elixir's logger is made of multiple modules, but we never interact with those modules directly. We call the &lt;a href=&quot;https://hexdocs.pm/logger/Logger.html&quot;&gt;&lt;code&gt;Logger&lt;/code&gt;&lt;/a&gt; module the context, exactly because it exposes and groups all of the logging functionality.</source>
          <target state="translated">上下文是专用模块，用于公开和分组相关功能。例如，无论何时调用Elixir的标准库（无论是&lt;a href=&quot;https://hexdocs.pm/logger/Logger.html#info/1&quot;&gt; &lt;code&gt;Logger.info/1&lt;/code&gt; &lt;/a&gt;还是&lt;a href=&quot;https://hexdocs.pm/elixir/Stream.html#map/2&quot;&gt; &lt;code&gt;Stream.map/2&lt;/code&gt; )&lt;/a&gt;，您都在访问不同的上下文。在内部，Elixir的记录器由多个模块组成，但是我们永远不会直接与这些模块进行交互。我们将&lt;a href=&quot;https://hexdocs.pm/logger/Logger.html&quot;&gt; &lt;code&gt;Logger&lt;/code&gt; &lt;/a&gt;模块称为上下文，正是因为它公开并分组了所有日志记录功能。</target>
        </trans-unit>
        <trans-unit id="eb108ef25a0e4f3e8c59003c81d1e76fee6ec74d" translate="yes" xml:space="preserve">
          <source>Control frames only supported when using websockets.</source>
          <target state="translated">只有在使用websockets时才支持控制框架。</target>
        </trans-unit>
        <trans-unit id="ed6760f37bf8055787e8b1d64d4c0d6c88aee901" translate="yes" xml:space="preserve">
          <source>Controller actions are just functions. We can name them anything we like as long as they follow Elixir's naming rules. The only requirement we must fulfill is that the action name matches a route defined in the router.</source>
          <target state="translated">控制器动作只是函数。只要遵循Elixir的命名规则,我们可以给它们起任何名字。我们必须满足的唯一要求是,动作名称必须与路由器中定义的路由相匹配。</target>
        </trans-unit>
        <trans-unit id="e8aeaea5b25aa2c5fea23cc8ad0bae1d555609a9" translate="yes" xml:space="preserve">
          <source>Controller plugs</source>
          <target state="translated">控制器插头</target>
        </trans-unit>
        <trans-unit id="0e9fb656787fc07e5d6a64599e65e1ccb74bd114" translate="yes" xml:space="preserve">
          <source>Controller testing</source>
          <target state="translated">控制器测试</target>
        </trans-unit>
        <trans-unit id="fd28161568c4e8e181bf8b34d2eb64190067fd07" translate="yes" xml:space="preserve">
          <source>Controllers</source>
          <target state="translated">Controllers</target>
        </trans-unit>
        <trans-unit id="23b977aa3bde982b9c4ecc028c9359ca00bb0cdb" translate="yes" xml:space="preserve">
          <source>Controllers are Elixir modules, and actions are Elixir functions defined in them. The purpose of actions is to gather any data and perform any tasks needed for rendering. Our route specifies that we need a &lt;code&gt;HelloWeb.HelloController&lt;/code&gt; module with an &lt;code&gt;index/2&lt;/code&gt; action.</source>
          <target state="translated">控制器是Elixir模块，动作是其中定义的Elixir函数。动作的目的是收集任何数据并执行渲染所需的任何任务。我们的路线指定我们需要一个带有 &lt;code&gt;index/2&lt;/code&gt; 操作的 &lt;code&gt;HelloWeb.HelloController&lt;/code&gt; 模块。</target>
        </trans-unit>
        <trans-unit id="2b5353d03e9a8cd11fd0e1a2f7c28e676caa2a91" translate="yes" xml:space="preserve">
          <source>Controllers are plugs</source>
          <target state="translated">控制器是插头</target>
        </trans-unit>
        <trans-unit id="af452210db5ef164e5270ab6a3485524d2fd8cda" translate="yes" xml:space="preserve">
          <source>Controllers are used to group common functionality in the same (pluggable) module.</source>
          <target state="translated">控制器用于在同一(可插拔)模块中对通用功能进行分组。</target>
        </trans-unit>
        <trans-unit id="0889440db85bfe21930387ce72d6b8151ec94606" translate="yes" xml:space="preserve">
          <source>Controllers have several ways of rendering content. The simplest is to render some plain text using the &lt;code&gt;text/2&lt;/code&gt; function which Phoenix provides.</source>
          <target state="translated">控制器有几种呈现内容的方式。最简单的方法是使用Phoenix提供的 &lt;code&gt;text/2&lt;/code&gt; 函数渲染一些纯文本。</target>
        </trans-unit>
        <trans-unit id="9bb0128974f09f06e681a8725deaa05f012c4805" translate="yes" xml:space="preserve">
          <source>Conveniences for building plugs.</source>
          <target state="translated">方便建设插头。</target>
        </trans-unit>
        <trans-unit id="9f91a588298f951eb275c2b2ec86df49dc80af8f" translate="yes" xml:space="preserve">
          <source>Conveniences for decoding and encoding url encoded queries.</source>
          <target state="translated">方便对url编码查询进行解码和编码。</target>
        </trans-unit>
        <trans-unit id="9c580d5a405e26c0a35b518f00ed173cab85f11c" translate="yes" xml:space="preserve">
          <source>Conveniences for encoding and decoding cookies.</source>
          <target state="translated">编码和解码cookie的便利性。</target>
        </trans-unit>
        <trans-unit id="2505b6a64d4b3e7e31f84accd462c05c58ce0713" translate="yes" xml:space="preserve">
          <source>Conveniences for generating HTML.</source>
          <target state="translated">生成HTML的便利性。</target>
        </trans-unit>
        <trans-unit id="1fefd886f0cee1b93efa1f72cccf15d683e4b0d7" translate="yes" xml:space="preserve">
          <source>Conveniences for inflecting and working with names in Phoenix.</source>
          <target state="translated">为凤凰城的导流和姓名工作提供便利。</target>
        </trans-unit>
        <trans-unit id="0a307a909b8251b2b8e81fa6e9fbc145135eec4f" translate="yes" xml:space="preserve">
          <source>Conveniences for testing Phoenix LiveViews.</source>
          <target state="translated">为测试凤凰直播视界提供便利。</target>
        </trans-unit>
        <trans-unit id="2079e29298a5fa010672ca1e6447077dbdee3382" translate="yes" xml:space="preserve">
          <source>Conveniences for testing Phoenix channels.</source>
          <target state="translated">为测试凤凰频道提供便利。</target>
        </trans-unit>
        <trans-unit id="5c778784530bdea24896902b3d11dadd17f8d90a" translate="yes" xml:space="preserve">
          <source>Conveniences for testing Phoenix endpoints and connection related helpers.</source>
          <target state="translated">为测试Phoenix端点和连接相关助手提供方便。</target>
        </trans-unit>
        <trans-unit id="c12f2b1bee63bacdcd8fb3213ef55235c074301e" translate="yes" xml:space="preserve">
          <source>Conveniences for testing plugs.</source>
          <target state="translated">方便测试插头。</target>
        </trans-unit>
        <trans-unit id="a6a11d3bfeded6baca8d0d4108499315d32aad3d" translate="yes" xml:space="preserve">
          <source>Conveniences for working with links and URLs in HTML.</source>
          <target state="translated">在HTML中处理链接和URL的便利性。</target>
        </trans-unit>
        <trans-unit id="e159c91ac2413f8fae02215e9f482d2e98915e2b" translate="yes" xml:space="preserve">
          <source>Conveniences for working with status codes.</source>
          <target state="translated">方便使用状态码。</target>
        </trans-unit>
        <trans-unit id="6fc83fdc7bfefcb73b9fa9ddd4eb4f1ae8d72b66" translate="yes" xml:space="preserve">
          <source>Conveniences for writing Ecto related Mix tasks.</source>
          <target state="translated">方便编写Ecto相关的Mix任务。</target>
        </trans-unit>
        <trans-unit id="afe5a05896c4b4d309eff51672348166ee60bc0d" translate="yes" xml:space="preserve">
          <source>Conversely, if the request matches any of the routes defined by the &lt;code&gt;resources/2&lt;/code&gt; macro, the router will pipe it through the &lt;code&gt;:api&lt;/code&gt; pipeline - which currently does nothing - before it dispatches further to the correct action of the &lt;code&gt;HelloWeb.ReviewController&lt;/code&gt;.</source>
          <target state="translated">相反，如果请求与 &lt;code&gt;resources/2&lt;/code&gt; 宏定义的任何路由匹配，则路由器将通过 &lt;code&gt;:api&lt;/code&gt; 管道（目前不执行任何操作）将其通过管道进行传递，然后再进一步调度到 &lt;code&gt;HelloWeb.ReviewController&lt;/code&gt; 的正确操作。</target>
        </trans-unit>
        <trans-unit id="2c99813ce575b22d947e4753c2a53d28fdd0fe4e" translate="yes" xml:space="preserve">
          <source>Converting Certificates and Keys</source>
          <target state="translated">转换证书和密钥</target>
        </trans-unit>
        <trans-unit id="95129317525bffbcf31b7a71e10603f34ad6de04" translate="yes" xml:space="preserve">
          <source>Converts String to camel case</source>
          <target state="translated">将字符串转换为骆驼皮箱</target>
        </trans-unit>
        <trans-unit id="9db2742f372bacc07fdf355480784f0de6ba2f9d" translate="yes" xml:space="preserve">
          <source>Converts String to camel case.</source>
          <target state="translated">将字符串转换为骆驼皮箱。</target>
        </trans-unit>
        <trans-unit id="93bd3d691babe59b7646592085998365cd346593" translate="yes" xml:space="preserve">
          <source>Converts String to underscore case</source>
          <target state="translated">将字符串转换为下划线大小写</target>
        </trans-unit>
        <trans-unit id="382099623de39c9a305a1c8582eb895d87ef6188" translate="yes" xml:space="preserve">
          <source>Converts String to underscore case.</source>
          <target state="translated">将字符串转换为下划线大小写。</target>
        </trans-unit>
        <trans-unit id="27264d44d355d6d25a79ad27fa899bdc74730105" translate="yes" xml:space="preserve">
          <source>Converts a binary UUID into a string</source>
          <target state="translated">将二进制UUID转换为字符串。</target>
        </trans-unit>
        <trans-unit id="ef60b50efc17b6764635f82f50428935079c6bee" translate="yes" xml:space="preserve">
          <source>Converts a binary UUID into a string.</source>
          <target state="translated">将二进制UUID转换为字符串。</target>
        </trans-unit>
        <trans-unit id="9c7adaf7aed01dd8443b57d8556b7c61a17d42d4" translate="yes" xml:space="preserve">
          <source>Converts a data structure into a &lt;a href=&quot;phoenix.html.form&quot;&gt;&lt;code&gt;Phoenix.HTML.Form&lt;/code&gt;&lt;/a&gt; struct</source>
          <target state="translated">将数据结构转换为&lt;a href=&quot;phoenix.html.form&quot;&gt; &lt;code&gt;Phoenix.HTML.Form&lt;/code&gt; &lt;/a&gt;结构</target>
        </trans-unit>
        <trans-unit id="5f0924e039579284f4949a209838800577578bd0" translate="yes" xml:space="preserve">
          <source>Converts a data structure into a &lt;a href=&quot;phoenix.html.form&quot;&gt;&lt;code&gt;Phoenix.HTML.Form&lt;/code&gt;&lt;/a&gt; struct.</source>
          <target state="translated">将数据结构转换为&lt;a href=&quot;phoenix.html.form&quot;&gt; &lt;code&gt;Phoenix.HTML.Form&lt;/code&gt; &lt;/a&gt;结构。</target>
        </trans-unit>
        <trans-unit id="2488392ad7a5f3949b70e58d9fbf8cfc02210a0a" translate="yes" xml:space="preserve">
          <source>Converts a data structure into a &lt;a href=&quot;phoenix.html.form#t:t/0&quot;&gt;&lt;code&gt;Phoenix.HTML.Form&lt;/code&gt;&lt;/a&gt; struct.</source>
          <target state="translated">将数据结构转换为&lt;a href=&quot;phoenix.html.form#t:t/0&quot;&gt; &lt;code&gt;Phoenix.HTML.Form&lt;/code&gt; &lt;/a&gt;结构。</target>
        </trans-unit>
        <trans-unit id="394f609c550517ae5582344720070e6dd46f20bf" translate="yes" xml:space="preserve">
          <source>Converts a data structure into an &lt;a href=&quot;ecto.query&quot;&gt;&lt;code&gt;Ecto.Query&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">将数据结构转换为&lt;a href=&quot;ecto.query&quot;&gt; &lt;code&gt;Ecto.Query&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f596d3623d5e3b391e0231a81f3148bc79da5b44" translate="yes" xml:space="preserve">
          <source>Converts a log entry into iodata</source>
          <target state="translated">将日志条目转换为iodata</target>
        </trans-unit>
        <trans-unit id="dbfac8e7ad86b07e68ffea270a88c3ab47488d9c" translate="yes" xml:space="preserve">
          <source>Converts a log entry into iodata.</source>
          <target state="translated">将一个日志条目转换为碘数据。</target>
        </trans-unit>
        <trans-unit id="cf24d3bfd1d0adf2c069e4995cacd8de41852380" translate="yes" xml:space="preserve">
          <source>Converts a map with string keys into a message struct</source>
          <target state="translated">将一个带有字符串键的映射转换成一个消息结构。</target>
        </trans-unit>
        <trans-unit id="e1ef56d44b9b008f114784704498cd7afff2ab48" translate="yes" xml:space="preserve">
          <source>Converts a map with string keys into a message struct.</source>
          <target state="translated">将一个带有字符串键的映射转换为一个消息结构。</target>
        </trans-unit>
        <trans-unit id="c33e6bed7be119b7b0930fe1c8868021fea8977b" translate="yes" xml:space="preserve">
          <source>Converts a module, without the suffix, to a template root.</source>
          <target state="translated">将一个没有后缀的模块转换为模板根。</target>
        </trans-unit>
        <trans-unit id="b7649d80868b367f86ce5318ad508d0226a84911" translate="yes" xml:space="preserve">
          <source>Converts a query into a subquery</source>
          <target state="translated">将一个查询转换为一个子查询</target>
        </trans-unit>
        <trans-unit id="7ab3d4d922c75660ac90a3c041fe3d0ae49fd685" translate="yes" xml:space="preserve">
          <source>Converts a query into a subquery.</source>
          <target state="translated">将一个查询转换为一个子查询。</target>
        </trans-unit>
        <trans-unit id="fbf8235c9b84e1cf4dcffaa3063769e32049314d" translate="yes" xml:space="preserve">
          <source>Converts a safe result into a string.</source>
          <target state="translated">将安全结果转换为字符串。</target>
        </trans-unit>
        <trans-unit id="a137d6416d0106481b1951e108ca4eae747e5a67" translate="yes" xml:space="preserve">
          <source>Converts a string representing a UUID into a binary</source>
          <target state="translated">将代表UUID的字符串转换为二进制数。</target>
        </trans-unit>
        <trans-unit id="3140ee13801e4c00a1ff530b15f1f6a6f3a6c1b3" translate="yes" xml:space="preserve">
          <source>Converts a string representing a UUID into a binary.</source>
          <target state="translated">将代表UUID的字符串转换为二进制。</target>
        </trans-unit>
        <trans-unit id="cbb7cf8eb57b429a02944a066a417de565b7469f" translate="yes" xml:space="preserve">
          <source>Converts a string to camel case.</source>
          <target state="translated">将字符串转换为骆驼壳。</target>
        </trans-unit>
        <trans-unit id="26ce8b0a474898457e495afaf507882370bba2fc" translate="yes" xml:space="preserve">
          <source>Converts a string to underscore case.</source>
          <target state="translated">将字符串转换为下划线大小写。</target>
        </trans-unit>
        <trans-unit id="b3df0bdacb4443f553b22c73314bcdc4d5486b30" translate="yes" xml:space="preserve">
          <source>Converts an attribute/form field into its humanize version</source>
          <target state="translated">将属性/表单字段转换为人性化的版本</target>
        </trans-unit>
        <trans-unit id="19c50d9e2906eb74159ce3992723820e814393d9" translate="yes" xml:space="preserve">
          <source>Converts an attribute/form field into its humanize version.</source>
          <target state="translated">将属性/表单字段转换为其人性化版本。</target>
        </trans-unit>
        <trans-unit id="c9733a54bd8f688547630970dbc222882b82e07b" translate="yes" xml:space="preserve">
          <source>Converts the field in the given form based on the data structure into a &lt;a href=&quot;phoenix.html.form&quot;&gt;&lt;code&gt;Phoenix.HTML.Form&lt;/code&gt;&lt;/a&gt; struct</source>
          <target state="translated">将基于数据结构的给定形式的字段转换为&lt;a href=&quot;phoenix.html.form&quot;&gt; &lt;code&gt;Phoenix.HTML.Form&lt;/code&gt; &lt;/a&gt;结构</target>
        </trans-unit>
        <trans-unit id="f80eee5cfebe6a00f029edb30bd90143409e8bcd" translate="yes" xml:space="preserve">
          <source>Converts the field in the given form based on the data structure into a &lt;a href=&quot;phoenix.html.form&quot;&gt;&lt;code&gt;Phoenix.HTML.Form&lt;/code&gt;&lt;/a&gt; struct.</source>
          <target state="translated">将基于数据结构的给定格式的字段转换为&lt;a href=&quot;phoenix.html.form&quot;&gt; &lt;code&gt;Phoenix.HTML.Form&lt;/code&gt; &lt;/a&gt;结构。</target>
        </trans-unit>
        <trans-unit id="fd5b3fd023291fd444a733da409ce77d409e34ad" translate="yes" xml:space="preserve">
          <source>Converts the field in the given form based on the data structure into a list of &lt;a href=&quot;phoenix.html.form#t:t/0&quot;&gt;&lt;code&gt;Phoenix.HTML.Form&lt;/code&gt;&lt;/a&gt; structs.</source>
          <target state="translated">根据数据结构将给定格式的字段转换为&lt;a href=&quot;phoenix.html.form#t:t/0&quot;&gt; &lt;code&gt;Phoenix.HTML.Form&lt;/code&gt; &lt;/a&gt;结构的列表。</target>
        </trans-unit>
        <trans-unit id="7c3ce48bee964440fa19b570f3113c68531a8ac5" translate="yes" xml:space="preserve">
          <source>Converts the given &lt;code&gt;data&lt;/code&gt; into an &lt;a href=&quot;ecto.query&quot;&gt;&lt;code&gt;Ecto.Query&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">将给定 &lt;code&gt;data&lt;/code&gt; 转换为&lt;a href=&quot;ecto.query&quot;&gt; &lt;code&gt;Ecto.Query&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d2e1170df570845c7769ccab0dfe55c41e9f204e" translate="yes" xml:space="preserve">
          <source>Converts the given &lt;code&gt;data&lt;/code&gt; into an &lt;a href=&quot;ecto.query&quot;&gt;&lt;code&gt;Ecto.Query&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">将给定的 &lt;code&gt;data&lt;/code&gt; 转换为&lt;a href=&quot;ecto.query&quot;&gt; &lt;code&gt;Ecto.Query&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a4eb22565028bee8e57f2538f8a2280b334b9223" translate="yes" xml:space="preserve">
          <source>Converts the template path into the template name.</source>
          <target state="translated">将模板路径转换为模板名称。</target>
        </trans-unit>
        <trans-unit id="2145883a02bd851ae88a6f4c3355513dfdce656f" translate="yes" xml:space="preserve">
          <source>Cost of stateful components</source>
          <target state="translated">有状态组件的成本</target>
        </trans-unit>
        <trans-unit id="87779649d0bc969867c2ebc36aca44610a78a40f" translate="yes" xml:space="preserve">
          <source>Could be configured with:</source>
          <target state="translated">可配置有:</target>
        </trans-unit>
        <trans-unit id="1d9bb1fefb027c333b59cf87a86b727eef409e8b" translate="yes" xml:space="preserve">
          <source>Counts the distinct values in given entry</source>
          <target state="translated">对给定条目中的不同值进行计数</target>
        </trans-unit>
        <trans-unit id="2de639a472b6b9495362bab1a9c12f1367933775" translate="yes" xml:space="preserve">
          <source>Counts the distinct values in given entry.</source>
          <target state="translated">对给定条目中的不同值进行计数。</target>
        </trans-unit>
        <trans-unit id="5075701de21a11711a31e4e2bb5ce2e539c5f1a6" translate="yes" xml:space="preserve">
          <source>Counts the entries in the table</source>
          <target state="translated">统计表中的条目</target>
        </trans-unit>
        <trans-unit id="5335fb3a68b01d2c891c9707977fc5953efe5ecb" translate="yes" xml:space="preserve">
          <source>Counts the entries in the table.</source>
          <target state="translated">对表中的条目进行计数。</target>
        </trans-unit>
        <trans-unit id="60cab376ddb9984f252e1e5dc8b0676b16a76836" translate="yes" xml:space="preserve">
          <source>Counts the given entry</source>
          <target state="translated">对给定的条目进行计数</target>
        </trans-unit>
        <trans-unit id="8b583bcad8995030f3efb2a4003bf44dbfe7f84f" translate="yes" xml:space="preserve">
          <source>Counts the given entry.</source>
          <target state="translated">对给定的条目进行计数。</target>
        </trans-unit>
        <trans-unit id="1876139b7bf3518c493b5eb0ca99f3080dac4817" translate="yes" xml:space="preserve">
          <source>Create &lt;code&gt;lib/hello_web/templates/hello/index.html.eex&lt;/code&gt; and make it look like this:</source>
          <target state="translated">创建 &lt;code&gt;lib/hello_web/templates/hello/index.html.eex&lt;/code&gt; 并使其如下所示：</target>
        </trans-unit>
        <trans-unit id="6f3b0737e02ceebda5bb8873005e6a1ce1384b34" translate="yes" xml:space="preserve">
          <source>Create an IPTables rule to forward packets arriving on port 443 to the port on which the Elixir application is running</source>
          <target state="translated">创建一个IPTables规则,将到达443端口的数据包转发到Elixir应用程序运行的端口。</target>
        </trans-unit>
        <trans-unit id="6667c873b195491c47b83841b5d1a221b1d01d60" translate="yes" xml:space="preserve">
          <source>Create the storage for the given repository.</source>
          <target state="translated">为给定的存储库创建存储。</target>
        </trans-unit>
        <trans-unit id="d1f5d6dc55285577b611a56099866fe7a5540361" translate="yes" xml:space="preserve">
          <source>Creates a connection to be used in upcoming requests</source>
          <target state="translated">创建一个连接,以便在即将到来的请求中使用。</target>
        </trans-unit>
        <trans-unit id="a5620a9d32b1815c7e1e4a69d7c0269ff6490d80" translate="yes" xml:space="preserve">
          <source>Creates a connection to be used in upcoming requests with a preset method, path and body</source>
          <target state="translated">使用预设的方法、路径和主体创建一个连接,以便在即将到来的请求中使用。</target>
        </trans-unit>
        <trans-unit id="2ea17fb47f2e2bc29906e1a835f386b622c5e0fc" translate="yes" xml:space="preserve">
          <source>Creates a connection to be used in upcoming requests with a preset method, path and body.</source>
          <target state="translated">使用预设的方法、路径和主体创建一个连接,以便在即将到来的请求中使用。</target>
        </trans-unit>
        <trans-unit id="6ca5933e33322f2725154605349ac03436e17d81" translate="yes" xml:space="preserve">
          <source>Creates a connection to be used in upcoming requests.</source>
          <target state="translated">创建一个连接,以便在即将到来的请求中使用。</target>
        </trans-unit>
        <trans-unit id="70b94307a4dc9f10ac59815d5581c6cf154df836" translate="yes" xml:space="preserve">
          <source>Creates a new Ecto project within an umbrella project.</source>
          <target state="translated">在一个伞形项目中创建一个新的Ecto项目。</target>
        </trans-unit>
        <trans-unit id="4ee543683371c801678c35510a84f0d50112834c" translate="yes" xml:space="preserve">
          <source>Creates a new Phoenix project.</source>
          <target state="translated">创建一个新的凤凰城项目。</target>
        </trans-unit>
        <trans-unit id="784d5191d3a9b5906409d3610a3e60bef7215313" translate="yes" xml:space="preserve">
          <source>Creates a new Phoenix web project within an umbrella project.</source>
          <target state="translated">在一个伞形项目中创建一个新的凤凰网项目。</target>
        </trans-unit>
        <trans-unit id="655bf80f22d5ac7bdc88e18fa1d2f5c44bf8a2a4" translate="yes" xml:space="preserve">
          <source>Creates a new set for the replica</source>
          <target state="translated">为副本创建一个新的套装</target>
        </trans-unit>
        <trans-unit id="6c3c516ff83fdb7b3890a578438dd63e0ad4b906" translate="yes" xml:space="preserve">
          <source>Creates a new set for the replica.</source>
          <target state="translated">为副本创建一个新的套装。</target>
        </trans-unit>
        <trans-unit id="903417493612112fb660a9adcb58f5b243ad96cb" translate="yes" xml:space="preserve">
          <source>Creates a private key and a self-signed certificate in PEM format. These files can be referenced in the &lt;code&gt;certfile&lt;/code&gt; and &lt;code&gt;keyfile&lt;/code&gt; parameters of an HTTPS Endpoint.</source>
          <target state="translated">创建PEM格式的私钥和自签名证书。可以在HTTPS端点的 &lt;code&gt;certfile&lt;/code&gt; 和 &lt;code&gt;keyfile&lt;/code&gt; 参数中引用这些文件。</target>
        </trans-unit>
        <trans-unit id="1cb0bb19ce2b3aec84766cc9b34cd1b86693717c" translate="yes" xml:space="preserve">
          <source>Creates a query</source>
          <target state="translated">创建一个查询</target>
        </trans-unit>
        <trans-unit id="9964ed477088ce9376af7d997db469e2c481c304" translate="yes" xml:space="preserve">
          <source>Creates a query.</source>
          <target state="translated">创建一个查询。</target>
        </trans-unit>
        <trans-unit id="a92e7e3e21980465afda5df639077acd5e141d84" translate="yes" xml:space="preserve">
          <source>Creates a test connection</source>
          <target state="translated">创建一个测试连接</target>
        </trans-unit>
        <trans-unit id="918f746fe680a623785f18e086e4d2e620665b7f" translate="yes" xml:space="preserve">
          <source>Creates a test connection.</source>
          <target state="translated">创建一个测试连接。</target>
        </trans-unit>
        <trans-unit id="8db62c40dd78a09a060d952689268f9b49ea9f86" translate="yes" xml:space="preserve">
          <source>Creates an HTML tag with given name, content, and attributes</source>
          <target state="translated">用给定的名称、内容和属性创建一个HTML标签。</target>
        </trans-unit>
        <trans-unit id="3c2bcae89a9be8a6c6feb5e8cc3b8e46a02f681c" translate="yes" xml:space="preserve">
          <source>Creates an HTML tag with given name, content, and attributes.</source>
          <target state="translated">用给定的名称、内容和属性创建一个HTML标签。</target>
        </trans-unit>
        <trans-unit id="058d15dfe83b62882d54c2ff61d2e4edaf0d99a4" translate="yes" xml:space="preserve">
          <source>Creates an HTML tag with the given name and options</source>
          <target state="translated">用给定的名称和选项创建一个HTML标签。</target>
        </trans-unit>
        <trans-unit id="27795a4c9e11b853e78c13b85bd3773163ca27e4" translate="yes" xml:space="preserve">
          <source>Creates an HTML tag with the given name and options.</source>
          <target state="translated">用给定的名称和选项创建一个HTML标签。</target>
        </trans-unit>
        <trans-unit id="295e8002fe94af556c61be9eb91674d5beffbd44" translate="yes" xml:space="preserve">
          <source>Creates the storage given by options</source>
          <target state="translated">创建由选项给出的存储空间</target>
        </trans-unit>
        <trans-unit id="5092de28cfa9bf4a13d1673eb10f6c4ffa40c2cf" translate="yes" xml:space="preserve">
          <source>Creates the storage given by options.</source>
          <target state="translated">创建由选项给出的存储空间。</target>
        </trans-unit>
        <trans-unit id="6fddd8f570b73edf6ee6aedf1e1d2ce52b9a828f" translate="yes" xml:space="preserve">
          <source>Creating New Pipelines</source>
          <target state="translated">创建新管道</target>
        </trans-unit>
        <trans-unit id="fe2674b19a4ef350832065f14e6baacfe810c2e3" translate="yes" xml:space="preserve">
          <source>Creating our own Mix task</source>
          <target state="translated">创建我们自己的混合任务</target>
        </trans-unit>
        <trans-unit id="3d4716c204e14d61e0edc2d892b38e427e83183b" translate="yes" xml:space="preserve">
          <source>Cross-context data</source>
          <target state="translated">跨背景数据</target>
        </trans-unit>
        <trans-unit id="6fefc4554f3bb27eee0508ae30ee9670eba6ade5" translate="yes" xml:space="preserve">
          <source>Cross-context dependencies</source>
          <target state="translated">跨背景依赖性</target>
        </trans-unit>
        <trans-unit id="6e51d2e5aed57b208ac929160777789364e28e92" translate="yes" xml:space="preserve">
          <source>Cross-host protection</source>
          <target state="translated">跨主机保护</target>
        </trans-unit>
        <trans-unit id="bb429da394c6fd75bb855fb4e738199598fe54a0" translate="yes" xml:space="preserve">
          <source>Currently it is possible to join on:</source>
          <target state="translated">目前可以加入上。</target>
        </trans-unit>
        <trans-unit id="45672bcfb95487b9a1fe832c5ef8aef6e8144968" translate="yes" xml:space="preserve">
          <source>Currently used as a wrapper function for &lt;a href=&quot;../plug/1.5.1/plug.csrfprotection&quot;&gt;&lt;code&gt;Plug.CSRFProtection&lt;/code&gt;&lt;/a&gt; and mainly serves as a function plug in &lt;code&gt;YourApp.Router&lt;/code&gt;.</source>
          <target state="translated">当前用作&lt;a href=&quot;../plug/1.5.1/plug.csrfprotection&quot;&gt; &lt;code&gt;Plug.CSRFProtection&lt;/code&gt; &lt;/a&gt;的包装函数，主要用作 &lt;code&gt;YourApp.Router&lt;/code&gt; 中的函数插件。</target>
        </trans-unit>
        <trans-unit id="9e8527b505d4d3ff1f51bd74f2ccae06781c8af7" translate="yes" xml:space="preserve">
          <source>Currently used as a wrapper function for &lt;a href=&quot;../plug/plug.csrfprotection&quot;&gt;&lt;code&gt;Plug.CSRFProtection&lt;/code&gt;&lt;/a&gt; and mainly serves as a function plug in &lt;code&gt;YourApp.Router&lt;/code&gt;.</source>
          <target state="translated">当前用作&lt;a href=&quot;../plug/plug.csrfprotection&quot;&gt; &lt;code&gt;Plug.CSRFProtection&lt;/code&gt; &lt;/a&gt;的包装函数，主要用作 &lt;code&gt;YourApp.Router&lt;/code&gt; 中的函数插件。</target>
        </trans-unit>
        <trans-unit id="dc6957b2308908d930700a3fc3c2b95aecb98c34" translate="yes" xml:space="preserve">
          <source>Currently, the &lt;code&gt;:api&lt;/code&gt; pipeline only defines &lt;code&gt;plug :accepts, [&quot;json&quot;]&lt;/code&gt;.</source>
          <target state="translated">当前， &lt;code&gt;:api&lt;/code&gt; 管道仅定义了 &lt;code&gt;plug :accepts, [&quot;json&quot;]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b0e856d3cac9ea58a4f2fe05ca46f1dc55eefce3" translate="yes" xml:space="preserve">
          <source>Custom Banners</source>
          <target state="translated">定制横幅</target>
        </trans-unit>
        <trans-unit id="8910f91b530d92a694e424d7330f749443421ac3" translate="yes" xml:space="preserve">
          <source>Custom Diffie-Hellman Parameters</source>
          <target state="translated">自定义Diffie-Hellman参数</target>
        </trans-unit>
        <trans-unit id="8394a6d089573458fed901e2364c860b5809ed9b" translate="yes" xml:space="preserve">
          <source>Custom Error Pages</source>
          <target state="translated">自定义错误页面</target>
        </trans-unit>
        <trans-unit id="30f552fb7d2523e7c921d75d7494408388c644e4" translate="yes" xml:space="preserve">
          <source>Custom Events</source>
          <target state="translated">自定义活动</target>
        </trans-unit>
        <trans-unit id="4cb6610e5fe1ba6a9df3dbf15438243872b7bb0f" translate="yes" xml:space="preserve">
          <source>Custom Exceptions</source>
          <target state="translated">自定义异常</target>
        </trans-unit>
        <trans-unit id="eb28204576a2e213094f3931ed41fe053faca307" translate="yes" xml:space="preserve">
          <source>Custom Template Engines</source>
          <target state="translated">自定义模板引擎</target>
        </trans-unit>
        <trans-unit id="2ad7995578312dcb09b4588cadcc8d6e2f426a4f" translate="yes" xml:space="preserve">
          <source>Custom URL Generation</source>
          <target state="translated">自定义URL生成</target>
        </trans-unit>
        <trans-unit id="15c7584e3aa4d76e12311bbd0dca1b00c9c3931c" translate="yes" xml:space="preserve">
          <source>Custom body reader</source>
          <target state="translated">定制机身阅读器</target>
        </trans-unit>
        <trans-unit id="c2f2a16fff225306736a35106079f78ddaa48623" translate="yes" xml:space="preserve">
          <source>Custom channel implementations cannot be tested with &lt;a href=&quot;phoenix.channeltest&quot;&gt;&lt;code&gt;Phoenix.ChannelTest&lt;/code&gt;&lt;/a&gt; and are currently considered experimental. The underlying API may be changed at any moment.</source>
          <target state="translated">自定义渠道的实现无法使用&lt;a href=&quot;phoenix.channeltest&quot;&gt; &lt;code&gt;Phoenix.ChannelTest&lt;/code&gt; &lt;/a&gt;进行测试，目前被认为是实验性的。底层API可能随时更改。</target>
        </trans-unit>
        <trans-unit id="a9b3d50b9cbecd1c2335b3dee818de27f68cbef9" translate="yes" xml:space="preserve">
          <source>Custom channels</source>
          <target state="translated">自定义通道</target>
        </trans-unit>
        <trans-unit id="7e21c9d3fe8c1579e1cd153dea9fb31d60cb8f21" translate="yes" xml:space="preserve">
          <source>Custom dispatch options</source>
          <target state="translated">自定义发送选项</target>
        </trans-unit>
        <trans-unit id="c047062656465c310928cc009c6d3064733926db" translate="yes" xml:space="preserve">
          <source>Custom dispatching</source>
          <target state="translated">定制派遣</target>
        </trans-unit>
        <trans-unit id="a79178c5b084f44fa3889f0d755f1d4399127ea8" translate="yes" xml:space="preserve">
          <source>Custom media types</source>
          <target state="translated">自定义媒体类型</target>
        </trans-unit>
        <trans-unit id="3a766c13565fe19675393ce2a7b6137d5d93894a" translate="yes" xml:space="preserve">
          <source>Custom parameters</source>
          <target state="translated">自定义参数</target>
        </trans-unit>
        <trans-unit id="d80fc8ccc23b2e9580041e5c8771b1057edcb042" translate="yes" xml:space="preserve">
          <source>Custom serializers may be configured in the socket.</source>
          <target state="translated">可以在插座中配置自定义序列器。</target>
        </trans-unit>
        <trans-unit id="4b4b6c5cdc1d2d58f4c757a35dc8aa9f75bf0e91" translate="yes" xml:space="preserve">
          <source>Custom sockets and transports</source>
          <target state="translated">定制插座和运输工具</target>
        </trans-unit>
        <trans-unit id="592888624942f64ddca66ef92a9ecf07af58ad65" translate="yes" xml:space="preserve">
          <source>Custom status codes</source>
          <target state="translated">自定义状态码</target>
        </trans-unit>
        <trans-unit id="03c69cf1ba719cfa330283492e4177050d830b2f" translate="yes" xml:space="preserve">
          <source>Custom styles</source>
          <target state="translated">自定义风格</target>
        </trans-unit>
        <trans-unit id="f7efae42f4cccc2527f00c7304e9225bf67da76b" translate="yes" xml:space="preserve">
          <source>Custom transports</source>
          <target state="translated">定制运输</target>
        </trans-unit>
        <trans-unit id="01968668870202b08c982a5f347b7df980dee05e" translate="yes" xml:space="preserve">
          <source>Custom type</source>
          <target state="translated">自定义类型</target>
        </trans-unit>
        <trans-unit id="81ef71c7c4675a503829d703092a4f5cab2a4d3a" translate="yes" xml:space="preserve">
          <source>Custom types</source>
          <target state="translated">自定义类型</target>
        </trans-unit>
        <trans-unit id="cb0f0b880fc41f72fa4da44b365d92d0e1e98258" translate="yes" xml:space="preserve">
          <source>Custom types and primary keys</source>
          <target state="translated">自定义类型和主键</target>
        </trans-unit>
        <trans-unit id="69a7d510ecf32ff0355d3b76dd97f825ed970bf0" translate="yes" xml:space="preserve">
          <source>Custom types are represented by user-defined modules</source>
          <target state="translated">定制类型由用户定义的模块来表示</target>
        </trans-unit>
        <trans-unit id="6eafee3e694a6d6c7ed59b8497b3079202604841" translate="yes" xml:space="preserve">
          <source>Custom types are represented by user-defined modules.</source>
          <target state="translated">自定义类型由用户定义的模块来表示。</target>
        </trans-unit>
        <trans-unit id="b3653020c71c4777d50b6793ad417b1e51a7f288" translate="yes" xml:space="preserve">
          <source>Customising the context, schema, tables and migrations</source>
          <target state="translated">自定义上下文、模式、表和迁移。</target>
        </trans-unit>
        <trans-unit id="b07356911684fcc96e48e208b012d821acafcf51" translate="yes" xml:space="preserve">
          <source>DER-encoded files contain binary data. Common file extensions are &lt;code&gt;.crt&lt;/code&gt; for certificates and &lt;code&gt;.key&lt;/code&gt; for keys.</source>
          <target state="translated">DER编码的文件包含二进制数据。通用文件扩展名是 &lt;code&gt;.crt&lt;/code&gt; （证书）和 &lt;code&gt;.key&lt;/code&gt; （密钥）。</target>
        </trans-unit>
        <trans-unit id="899aa8f2fba2b494f0348110cdaa1426a374a618" translate="yes" xml:space="preserve">
          <source>DOM Patching</source>
          <target state="translated">DOM修补</target>
        </trans-unit>
        <trans-unit id="4dbca882b37a7c4c2bfde552e8d99b4bb7e720ea" translate="yes" xml:space="preserve">
          <source>DOM patching and temporary assigns</source>
          <target state="translated">DOM修补和临时分配</target>
        </trans-unit>
        <trans-unit id="c13d188b3282dee3affd5deb83976d7618f628a2" translate="yes" xml:space="preserve">
          <source>Data Persistence</source>
          <target state="translated">数据持久性</target>
        </trans-unit>
        <trans-unit id="e1aa668724cef525e095f5266a0e6ca216f30dc2" translate="yes" xml:space="preserve">
          <source>Data attributes</source>
          <target state="translated">日期属性</target>
        </trans-unit>
        <trans-unit id="22ee43137eb33104fa6bb25df0d11793f36f2af6" translate="yes" xml:space="preserve">
          <source>Data attributes are added as a keyword list passed to the &lt;code&gt;data&lt;/code&gt; key. The following data attributes are supported:</source>
          <target state="translated">数据属性作为传递到 &lt;code&gt;data&lt;/code&gt; 键的关键字列表添加。支持以下数据属性：</target>
        </trans-unit>
        <trans-unit id="dfbea07707e01cf3d5cd2917e0db646244e80fb4" translate="yes" xml:space="preserve">
          <source>Database type</source>
          <target state="translated">数据库类型</target>
        </trans-unit>
        <trans-unit id="2b0147a202c0652436982e4210c99e4db43e1984" translate="yes" xml:space="preserve">
          <source>Databases like MongoDB have native support for embeds. Databases like PostgreSQL uses a mixture of JSONB (&lt;code&gt;embeds_one/3&lt;/code&gt;) and ARRAY columns to provide this functionality.</source>
          <target state="translated">像MongoDB这样的数据库具有对嵌入的本地支持。PostgreSQL之类的数据库使用JSONB（ &lt;code&gt;embeds_one/3&lt;/code&gt; ）和ARRAY列的混合物来提供此功能。</target>
        </trans-unit>
        <trans-unit id="348c5694e0d7d8db4752697a7c185717753760e0" translate="yes" xml:space="preserve">
          <source>Date/time intervals: &lt;a href=&quot;#datetime_add/3&quot;&gt;&lt;code&gt;datetime_add/3&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#date_add/3&quot;&gt;&lt;code&gt;date_add/3&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#from_now/2&quot;&gt;&lt;code&gt;from_now/2&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ago/2&quot;&gt;&lt;code&gt;ago/2&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">日期/时间间隔：&lt;a href=&quot;#datetime_add/3&quot;&gt; &lt;code&gt;datetime_add/3&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#date_add/3&quot;&gt; &lt;code&gt;date_add/3&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#from_now/2&quot;&gt; &lt;code&gt;from_now/2&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#ago/2&quot;&gt; &lt;code&gt;ago/2&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4b49d95452b9e3f848c81d1495d9817e624bbefc" translate="yes" xml:space="preserve">
          <source>Debounce and Throttle special behavior</source>
          <target state="translated">反弹和节流的特殊行为</target>
        </trans-unit>
        <trans-unit id="f32a6d38c05f0b1a313df80e1bd2e914cfe8619d" translate="yes" xml:space="preserve">
          <source>Debugging Client Events</source>
          <target state="translated">调试客户端事件</target>
        </trans-unit>
        <trans-unit id="dc28334dbb2ee4b63b89c25268676f3540cb8080" translate="yes" xml:space="preserve">
          <source>Decodes iodata into &lt;a href=&quot;phoenix.socket.message&quot;&gt;&lt;code&gt;Phoenix.Socket.Message&lt;/code&gt;&lt;/a&gt; struct</source>
          <target state="translated">将iodata解码为&lt;a href=&quot;phoenix.socket.message&quot;&gt; &lt;code&gt;Phoenix.Socket.Message&lt;/code&gt; &lt;/a&gt;结构</target>
        </trans-unit>
        <trans-unit id="53208e29b0c02dae50868ef8eb853e68e9f52795" translate="yes" xml:space="preserve">
          <source>Decodes iodata into &lt;a href=&quot;phoenix.socket.message&quot;&gt;&lt;code&gt;Phoenix.Socket.Message&lt;/code&gt;&lt;/a&gt; struct.</source>
          <target state="translated">将iodata解码为&lt;a href=&quot;phoenix.socket.message&quot;&gt; &lt;code&gt;Phoenix.Socket.Message&lt;/code&gt; &lt;/a&gt;结构。</target>
        </trans-unit>
        <trans-unit id="5022d1fa92e4a008b4f97389512658b390541e37" translate="yes" xml:space="preserve">
          <source>Decodes the given binary</source>
          <target state="translated">解码给定的二进制</target>
        </trans-unit>
        <trans-unit id="a4fc2ef19091b283310f075f39eebdbc574b872c" translate="yes" xml:space="preserve">
          <source>Decodes the given binary.</source>
          <target state="translated">对给定的二进制进行解码。</target>
        </trans-unit>
        <trans-unit id="2cf36e2a8c8c57a5b892035925a389f0221c6e5a" translate="yes" xml:space="preserve">
          <source>Decodes the given cookies as given in a request header</source>
          <target state="translated">对请求头中给定的cookie进行解码。</target>
        </trans-unit>
        <trans-unit id="d138261ed7bfce68ab9d9284286314a08d6fb068" translate="yes" xml:space="preserve">
          <source>Decodes the given cookies as given in a request header.</source>
          <target state="translated">对请求头中给定的cookie进行解码。</target>
        </trans-unit>
        <trans-unit id="ca8311e42f92d6b90a66d2da6614569a1aefd83a" translate="yes" xml:space="preserve">
          <source>Decodes the given cookies as given in either a request or response header.</source>
          <target state="translated">对请求或响应头中给出的cookie进行解码。</target>
        </trans-unit>
        <trans-unit id="165d936d32d794f4a22a59a865476cf0fb810a18" translate="yes" xml:space="preserve">
          <source>Decodes the given tuple and stores it in the accumulator.</source>
          <target state="translated">对给定的元组进行解码,并将其存储在累加器中。</target>
        </trans-unit>
        <trans-unit id="67791571081f15deaa98bef144e603752a37648d" translate="yes" xml:space="preserve">
          <source>Decodes the given tuple and stores it in the accumulator. It parses the key and stores the value into the current accumulator</source>
          <target state="translated">解码给定的元组并将其存储在累加器中。它解析键并将其值存储到当前的累加器中。</target>
        </trans-unit>
        <trans-unit id="6e49719641c1902ad6eefa0319fd41e19a3586ac" translate="yes" xml:space="preserve">
          <source>Decodes the given tuple and stores it in the accumulator. It parses the key and stores the value into the current accumulator.</source>
          <target state="translated">解码给定的元组并将其存储在累加器中。它解析键并将值存储到当前的累加器中。</target>
        </trans-unit>
        <trans-unit id="6ee990d02025019ecfcb5edf1b4c4ec39e936da7" translate="yes" xml:space="preserve">
          <source>Decodes the original data from the token and verifies its integrity</source>
          <target state="translated">对令牌的原始数据进行解码,并验证其完整性。</target>
        </trans-unit>
        <trans-unit id="f049b89b24eb9935b3ca98ad1fb0f9d2cd9f68e8" translate="yes" xml:space="preserve">
          <source>Decodes the original data from the token and verifies its integrity.</source>
          <target state="translated">解码令牌中的原始数据,并验证其完整性。</target>
        </trans-unit>
        <trans-unit id="75c3a4309a68aab2ae1c45fc6b0180e2877459be" translate="yes" xml:space="preserve">
          <source>Decrypts the original data from the token and verifies its integrity.</source>
          <target state="translated">对令牌中的原始数据进行解密,并验证其完整性。</target>
        </trans-unit>
        <trans-unit id="3756df3c62f47f45ddc117d75f48aa29a7d1dddb" translate="yes" xml:space="preserve">
          <source>Default options</source>
          <target state="translated">默认选项</target>
        </trans-unit>
        <trans-unit id="4da88ad909650175990a0a974e2ffa17afb351c7" translate="yes" xml:space="preserve">
          <source>Deferred constraints</source>
          <target state="translated">推迟的制约因素</target>
        </trans-unit>
        <trans-unit id="34eb2207fae4118dc031e43bd682836d552cd605" translate="yes" xml:space="preserve">
          <source>Define a scope with the given path</source>
          <target state="translated">用给定的路径定义一个作用域</target>
        </trans-unit>
        <trans-unit id="8a24bfbfe4b950fbe1f98d96017ddb61058636dd" translate="yes" xml:space="preserve">
          <source>Define a scope with the given path.</source>
          <target state="translated">用给定的路径定义一个作用域。</target>
        </trans-unit>
        <trans-unit id="0ced961e1fc2c779109475084148a80717b33982" translate="yes" xml:space="preserve">
          <source>Defines &quot;RESTful&quot; routes for a resource.</source>
          <target state="translated">为资源定义 &quot;RESTful &quot;路由。</target>
        </trans-unit>
        <trans-unit id="c555127295a2b019c70780dc39a214d0b9c44313" translate="yes" xml:space="preserve">
          <source>Defines &amp;ldquo;RESTful&amp;rdquo; routes for a resource</source>
          <target state="translated">为资源定义&amp;ldquo; RESTful&amp;rdquo;路由</target>
        </trans-unit>
        <trans-unit id="e546933a6e0a686579d2072a045b2b24d13e1704" translate="yes" xml:space="preserve">
          <source>Defines &amp;ldquo;RESTful&amp;rdquo; routes for a resource.</source>
          <target state="translated">为资源定义&amp;ldquo; RESTful&amp;rdquo;路由。</target>
        </trans-unit>
        <trans-unit id="e813bf25abf682ba0e9eab4d5891d8518a52aacb" translate="yes" xml:space="preserve">
          <source>Defines a LiveView route.</source>
          <target state="translated">定义LiveView途径。</target>
        </trans-unit>
        <trans-unit id="d29baddf329cf4df77e0fcaa04d26f8d7bf3e15a" translate="yes" xml:space="preserve">
          <source>Defines a Phoenix Channel.</source>
          <target state="translated">定义了凤凰频道。</target>
        </trans-unit>
        <trans-unit id="235705cdc0369983f9f6de9af060949e5f16a26a" translate="yes" xml:space="preserve">
          <source>Defines a Phoenix endpoint.</source>
          <target state="translated">定义一个Phoenix端点。</target>
        </trans-unit>
        <trans-unit id="dea58b4fafe180816f5fde43f615b9aea00c40bf" translate="yes" xml:space="preserve">
          <source>Defines a Phoenix router.</source>
          <target state="translated">定义一个Phoenix路由器。</target>
        </trans-unit>
        <trans-unit id="6390ec122493c1583a174fe9ac5e369023b0024b" translate="yes" xml:space="preserve">
          <source>Defines a behaviour for &lt;a href=&quot;phoenix.socket.message&quot;&gt;&lt;code&gt;Phoenix.Socket.Message&lt;/code&gt;&lt;/a&gt; serialization.</source>
          <target state="translated">定义&lt;a href=&quot;phoenix.socket.message&quot;&gt; &lt;code&gt;Phoenix.Socket.Message&lt;/code&gt; &lt;/a&gt;序列化的行为。</target>
        </trans-unit>
        <trans-unit id="2d792c91b226ca5abb5305609b372b30da2cb4da" translate="yes" xml:space="preserve">
          <source>Defines a channel matching the given topic and transports</source>
          <target state="translated">定义一个与给定主题相匹配的通道,并传输</target>
        </trans-unit>
        <trans-unit id="3fa26eb70159f8ab640869d100ff7fbb8ebe0a73" translate="yes" xml:space="preserve">
          <source>Defines a channel matching the given topic and transports.</source>
          <target state="translated">定义一个与给定主题和传输相匹配的通道。</target>
        </trans-unit>
        <trans-unit id="af64f873d5500ce120a33c0e800349fe35b237d0" translate="yes" xml:space="preserve">
          <source>Defines a field on the schema with given name and type</source>
          <target state="translated">在模式中定义一个给定名称和类型的字段。</target>
        </trans-unit>
        <trans-unit id="efd699e27ca43fdec598faa06974044bb2a848bd" translate="yes" xml:space="preserve">
          <source>Defines a field on the schema with given name and type.</source>
          <target state="translated">在模式中定义一个给定名称和类型的字段。</target>
        </trans-unit>
        <trans-unit id="f5407c8df5253b536e5c0092684631c55cd4cddc" translate="yes" xml:space="preserve">
          <source>Defines a list of plugs (and pipelines) to send the connection through.</source>
          <target state="translated">定义要发送连接的插头(和管道)列表。</target>
        </trans-unit>
        <trans-unit id="67fbef7f15ed2faf874560243ca0083838e6bee5" translate="yes" xml:space="preserve">
          <source>Defines a message dispatched over transport to channels and vice-versa.</source>
          <target state="translated">定义了通过传输向通道发送的消息,反之亦然。</target>
        </trans-unit>
        <trans-unit id="28d7d8b620546f752b3959eef610fcd5b88b94e5" translate="yes" xml:space="preserve">
          <source>Defines a message sent from pubsub to channels and vice-versa.</source>
          <target state="translated">定义了从pubsub到channels的消息,反之亦然。</target>
        </trans-unit>
        <trans-unit id="b678f4e27bfbccbb54653172d4d94b97d52dd042" translate="yes" xml:space="preserve">
          <source>Defines a mount-point for a Socket module to handle channel definitions</source>
          <target state="translated">为Socket模块定义了一个挂载点,用于处理通道定义。</target>
        </trans-unit>
        <trans-unit id="28cde125da30c3d4b8b02c57be5bbe5f2584445c" translate="yes" xml:space="preserve">
          <source>Defines a mount-point for a Socket module to handle channel definitions.</source>
          <target state="translated">定义一个Socket模块的挂载点,用于处理通道定义。</target>
        </trans-unit>
        <trans-unit id="2ea9f414a6265695d3c3e707a27efc7759441b20" translate="yes" xml:space="preserve">
          <source>Defines a pipeline to send the connection through</source>
          <target state="translated">定义一个管道来发送连接。</target>
        </trans-unit>
        <trans-unit id="67004c69d07a77e0364830f2e64643972bb5c715" translate="yes" xml:space="preserve">
          <source>Defines a pipeline to send the connection through.</source>
          <target state="translated">定义一个要发送连接的管道。</target>
        </trans-unit>
        <trans-unit id="626377c188b161f8ee92a6f60c67907ced021330" translate="yes" xml:space="preserve">
          <source>Defines a plug inside a pipeline</source>
          <target state="translated">在管道内定义一个插头</target>
        </trans-unit>
        <trans-unit id="74844af7ddd6384b64831149a05b11c4fde3ff06" translate="yes" xml:space="preserve">
          <source>Defines a plug inside a pipeline.</source>
          <target state="translated">在管道内定义一个插头。</target>
        </trans-unit>
        <trans-unit id="8682bc32fd5509667c0e1dce1a301a5e6250f8b7" translate="yes" xml:space="preserve">
          <source>Defines a plug pipeline</source>
          <target state="translated">定义一个堵塞管道</target>
        </trans-unit>
        <trans-unit id="72233b14665ba28dfb9fa2ca6d5bec41f35d1fe6" translate="yes" xml:space="preserve">
          <source>Defines a plug pipeline.</source>
          <target state="translated">定义一个插头管道。</target>
        </trans-unit>
        <trans-unit id="7aaae2212cb7e4596cdbd559a955ffac90ed46ce" translate="yes" xml:space="preserve">
          <source>Defines a reply sent from channels to transports.</source>
          <target state="translated">定义了从信道到传输的回复。</target>
        </trans-unit>
        <trans-unit id="5df899000fa3205a84a1083055e157624bb5913b" translate="yes" xml:space="preserve">
          <source>Defines a repository.</source>
          <target state="translated">定义一个存储库。</target>
        </trans-unit>
        <trans-unit id="8910a742cc5c74828188debf44ec1420d5d8e4e1" translate="yes" xml:space="preserve">
          <source>Defines a schema struct with a source name and field definitions</source>
          <target state="translated">定义一个包含源名称和字段定义的模式结构。</target>
        </trans-unit>
        <trans-unit id="ab322b11466dcd7175f28e1be2949b280aaf773f" translate="yes" xml:space="preserve">
          <source>Defines a schema struct with a source name and field definitions.</source>
          <target state="translated">定义一个包含源名称和字段定义的模式结构。</target>
        </trans-unit>
        <trans-unit id="8d20d470d617c99121e5f459af0d902f39b06c39" translate="yes" xml:space="preserve">
          <source>Defines a schema.</source>
          <target state="translated">定义一个模式。</target>
        </trans-unit>
        <trans-unit id="73e2ef4d927292ff9b405a59dcb7fae197bf1c2c" translate="yes" xml:space="preserve">
          <source>Defines a scope in which routes can be nested</source>
          <target state="translated">定义一个可以嵌套路由的范围。</target>
        </trans-unit>
        <trans-unit id="36cbf44758b5984aef0b549664bbe669a4c4938f" translate="yes" xml:space="preserve">
          <source>Defines a scope in which routes can be nested.</source>
          <target state="translated">定义一个可以嵌套路由的范围。</target>
        </trans-unit>
        <trans-unit id="33f13eac830e5d11dbbc012b15c928e78e648963" translate="yes" xml:space="preserve">
          <source>Defines a scope with the given path and alias</source>
          <target state="translated">用给定的路径和别名定义一个作用域。</target>
        </trans-unit>
        <trans-unit id="66efb298c9aabf9ccbc899061404636e728d9ff4" translate="yes" xml:space="preserve">
          <source>Defines a scope with the given path and alias.</source>
          <target state="translated">用给定的路径和别名定义一个作用域。</target>
        </trans-unit>
        <trans-unit id="6075960a9e3871d4098ed3ef627f906f411517cd" translate="yes" xml:space="preserve">
          <source>Defines a socket and its state.</source>
          <target state="translated">定义一个套接字及其状态。</target>
        </trans-unit>
        <trans-unit id="40a2893ccaafecb4be3a8b5b85cdff7f0a543871" translate="yes" xml:space="preserve">
          <source>Defines a transport with configuration</source>
          <target state="translated">定义了一个带有配置的传输</target>
        </trans-unit>
        <trans-unit id="2e9243ed85aceecaa626c37b6242e99524b81dbb" translate="yes" xml:space="preserve">
          <source>Defines a transport with configuration.</source>
          <target state="translated">定义一个带配置的传输。</target>
        </trans-unit>
        <trans-unit id="1045219e4b28301c00581a67c31b46173d004740" translate="yes" xml:space="preserve">
          <source>Defines a websocket/longpoll mount-point for a socket.</source>
          <target state="translated">定义一个套接字的websocket/longpoll挂载点。</target>
        </trans-unit>
        <trans-unit id="b6f7548bed405a22c425526cc2c285184b3f2c22" translate="yes" xml:space="preserve">
          <source>Defines an embedded schema with the given field definitions</source>
          <target state="translated">用给定的字段定义定义一个嵌入式模式。</target>
        </trans-unit>
        <trans-unit id="8fa803bf79623a181b5123498ee6f231f614a1bb" translate="yes" xml:space="preserve">
          <source>Defines an embedded schema with the given field definitions.</source>
          <target state="translated">用给定的字段定义定义一个嵌入式模式。</target>
        </trans-unit>
        <trans-unit id="f2e1039f6e296b404c3b628cd0bcb31c1f64121b" translate="yes" xml:space="preserve">
          <source>Defines functions and the &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Ecto.Type&lt;/code&gt;&lt;/a&gt; behaviour for implementing basic custom types.</source>
          <target state="translated">定义用于实现基本自定义类型的函数和&lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Ecto.Type&lt;/code&gt; &lt;/a&gt;行为。</target>
        </trans-unit>
        <trans-unit id="6432ba9d89cda272407151bb646031fa0b43a2f7" translate="yes" xml:space="preserve">
          <source>Defines functions and the &lt;a href=&quot;ecto.type#content&quot;&gt;&lt;code&gt;Ecto.Type&lt;/code&gt;&lt;/a&gt; behaviour for implementing custom types.</source>
          <target state="translated">定义用于实现自定义类型的函数和&lt;a href=&quot;ecto.type#content&quot;&gt; &lt;code&gt;Ecto.Type&lt;/code&gt; &lt;/a&gt;行为。</target>
        </trans-unit>
        <trans-unit id="07165df5c35d63325209e3672605c7d1ef21e2bf" translate="yes" xml:space="preserve">
          <source>Defines the HTML safe protocol.</source>
          <target state="translated">定义了HTML安全协议。</target>
        </trans-unit>
        <trans-unit id="c60dd928ec133683effed99436f649bb52ba9ed6" translate="yes" xml:space="preserve">
          <source>Defines the Phoenix.HTML.Form struct</source>
          <target state="translated">定义Phoenix.HTML.Form结构。</target>
        </trans-unit>
        <trans-unit id="9b73046e41b83e8632e11734a79b46f80bd80e3c" translate="yes" xml:space="preserve">
          <source>Defines the Phoenix.HTML.Form struct.</source>
          <target state="translated">定义Phoenix.HTML.Form结构。</target>
        </trans-unit>
        <trans-unit id="a93ad99653849b671aa30e521a85ba4371f460d4" translate="yes" xml:space="preserve">
          <source>Defines the view layer of a Phoenix application.</source>
          <target state="translated">定义Phoenix应用程序的视图层。</target>
        </trans-unit>
        <trans-unit id="07465682294918bcade97a592701eab8d7bc4fa5" translate="yes" xml:space="preserve">
          <source>Defines which Channel events to intercept for &lt;code&gt;handle_out/3&lt;/code&gt; callbacks</source>
          <target state="translated">定义要为 &lt;code&gt;handle_out/3&lt;/code&gt; 回调拦截的Channel事件</target>
        </trans-unit>
        <trans-unit id="642d24d790a544e7a3090f37c45010edab2614c2" translate="yes" xml:space="preserve">
          <source>Defines which Channel events to intercept for &lt;code&gt;handle_out/3&lt;/code&gt; callbacks.</source>
          <target state="translated">定义要为 &lt;code&gt;handle_out/3&lt;/code&gt; 回调拦截的Channel事件。</target>
        </trans-unit>
        <trans-unit id="e3314166cec5f4c7b8773a376d51e5529a69824d" translate="yes" xml:space="preserve">
          <source>Defines windows which can be used with &lt;a href=&quot;ecto.query.windowapi&quot;&gt;&lt;code&gt;Ecto.Query.WindowAPI&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">定义可与&lt;a href=&quot;ecto.query.windowapi&quot;&gt; &lt;code&gt;Ecto.Query.WindowAPI&lt;/code&gt; &lt;/a&gt;一起使用的窗口</target>
        </trans-unit>
        <trans-unit id="b2601687aa8ec4a6c14723b50e590b550da8746d" translate="yes" xml:space="preserve">
          <source>Defines windows which can be used with &lt;a href=&quot;ecto.query.windowapi&quot;&gt;&lt;code&gt;Ecto.Query.WindowAPI&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">定义可与&lt;a href=&quot;ecto.query.windowapi&quot;&gt; &lt;code&gt;Ecto.Query.WindowAPI&lt;/code&gt; &lt;/a&gt;一起使用的窗口。</target>
        </trans-unit>
        <trans-unit id="7404bbfa3bf1eaa2f779cbe4fdcea4586867f84e" translate="yes" xml:space="preserve">
          <source>Defining custom functions using macros and fragment</source>
          <target state="translated">使用宏和片段定义自定义函数。</target>
        </trans-unit>
        <trans-unit id="847c4e031bd354c6f6d6aff9d13bbd0981a8abc3" translate="yes" xml:space="preserve">
          <source>Defining embedded schema in such a way will define a &lt;code&gt;Parent.Child&lt;/code&gt; module with the appropriate struct. In order to properly cast the embedded schema. When casting the inline-defined embedded schemas you need to use the &lt;code&gt;:with&lt;/code&gt; option of &lt;a href=&quot;ecto.changeset#cast_embed/3&quot;&gt;&lt;code&gt;Ecto.Changeset.cast_embed/3&lt;/code&gt;&lt;/a&gt; to provide the proper function to do the casting. For example:</source>
          <target state="translated">以这种方式定义嵌入式架构将定义具有适当结构的 &lt;code&gt;Parent.Child&lt;/code&gt; 模块。为了正确地转换嵌入式架构。强制转换内联定义的嵌入式架构时，您需要使用&lt;a href=&quot;ecto.changeset#cast_embed/3&quot;&gt; &lt;code&gt;Ecto.Changeset.cast_embed/3&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;:with&lt;/code&gt; 选项提供正确的功能来进行强制转换。例如：</target>
        </trans-unit>
        <trans-unit id="e25d056469e7205f8c1dba96e0a56fc8a4f8df72" translate="yes" xml:space="preserve">
          <source>Defining embedded schema in such a way will define a &lt;code&gt;Parent.Child&lt;/code&gt; module with the appropriate struct. In order to properly cast the embedded schema. When casting the inline-defined embedded schemas you need to use the &lt;code&gt;:with&lt;/code&gt; option of &lt;code&gt;cast_embed/3&lt;/code&gt; to provide the proper function to do the casting. For example:</source>
          <target state="translated">以这种方式定义嵌入式架构将定义具有适当结构的 &lt;code&gt;Parent.Child&lt;/code&gt; 模块。为了正确地转换嵌入式架构。强制转换内联定义的嵌入式模式时，您需要使用 &lt;code&gt;cast_embed/3&lt;/code&gt; 的 &lt;code&gt;:with&lt;/code&gt; 选项提供正确的功能来进行强制转换。例如：</target>
        </trans-unit>
        <trans-unit id="b730af78856042c2e6f0560a02fc09cd866d3de9" translate="yes" xml:space="preserve">
          <source>Defining the type of each field is not mandatory, but it is preferable.</source>
          <target state="translated">定义每个字段的类型不是强制性的,但最好是这样。</target>
        </trans-unit>
        <trans-unit id="dc3c2b2ee76ee6e2f89d0ec2d1f82252edeb9f34" translate="yes" xml:space="preserve">
          <source>Delete compiled/compressed asset files that are no longer in use based on specified criteria</source>
          <target state="translated">根据指定的标准删除不再使用的编译/压缩资产文件。</target>
        </trans-unit>
        <trans-unit id="28b5a017f49a91de5c9274f70107efe0891cca63" translate="yes" xml:space="preserve">
          <source>Delete compiled/compressed asset files that are no longer in use based on specified criteria.</source>
          <target state="translated">根据指定标准删除不再使用的编译/压缩资产文件。</target>
        </trans-unit>
        <trans-unit id="f7ce913ca1d09f09cb1227e93e044948b65eb687" translate="yes" xml:space="preserve">
          <source>Deletes &lt;code&gt;key&lt;/code&gt; from session.</source>
          <target state="translated">从会话中删除 &lt;code&gt;key&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="13214aab7bd1d6ebe1a36dd15784fd2dbb158e70" translate="yes" xml:space="preserve">
          <source>Deletes a change with the given key</source>
          <target state="translated">删除给定键的变化</target>
        </trans-unit>
        <trans-unit id="deca0e88c2adbf1fa7421afbd9abd2be33eec20f" translate="yes" xml:space="preserve">
          <source>Deletes a change with the given key.</source>
          <target state="translated">删除给定键的变化。</target>
        </trans-unit>
        <trans-unit id="aadb3bc757b2c5aaaedfe0cb46c185ffae746461" translate="yes" xml:space="preserve">
          <source>Deletes a request cookie</source>
          <target state="translated">删除一个请求cookie</target>
        </trans-unit>
        <trans-unit id="7b00727b0e36527b1754c79a189a2e6ba8d90811" translate="yes" xml:space="preserve">
          <source>Deletes a request cookie.</source>
          <target state="translated">删除一个请求cookie。</target>
        </trans-unit>
        <trans-unit id="2d06cbcc573807b201eb7218d2ae670db20fd2bc" translate="yes" xml:space="preserve">
          <source>Deletes a request header if present</source>
          <target state="translated">删除请求头(如果存在)。</target>
        </trans-unit>
        <trans-unit id="abea7b5b79304c193dfacc3e6ac3b8b34beb66ab" translate="yes" xml:space="preserve">
          <source>Deletes a request header if present.</source>
          <target state="translated">如果存在,则删除请求头。</target>
        </trans-unit>
        <trans-unit id="6c7f349096886a817007251d959a39bd17bbf943" translate="yes" xml:space="preserve">
          <source>Deletes a response cookie</source>
          <target state="translated">删除响应cookie</target>
        </trans-unit>
        <trans-unit id="720063bae4bfc2808217c51052678716d5abe047" translate="yes" xml:space="preserve">
          <source>Deletes a response cookie.</source>
          <target state="translated">删除响应cookie。</target>
        </trans-unit>
        <trans-unit id="a8142ba1aa22d293febaab12665e6bb2b86e39aa" translate="yes" xml:space="preserve">
          <source>Deletes a response header if present</source>
          <target state="translated">删除响应头(如果存在)。</target>
        </trans-unit>
        <trans-unit id="e48fc1e7e71688c5551c72a64f5da6856955070a" translate="yes" xml:space="preserve">
          <source>Deletes a response header if present.</source>
          <target state="translated">如果存在,则删除响应头。</target>
        </trans-unit>
        <trans-unit id="a6425e65d9f201eb8a2b6e3490740623a09142db" translate="yes" xml:space="preserve">
          <source>Deletes a single struct with the given filters</source>
          <target state="translated">删除一个带有过滤器的结构体。</target>
        </trans-unit>
        <trans-unit id="cf31e7ca3f3b34e927478bb8d3ccd25fdbb569ec" translate="yes" xml:space="preserve">
          <source>Deletes a single struct with the given filters.</source>
          <target state="translated">删除给定过滤器的单个结构。</target>
        </trans-unit>
        <trans-unit id="c49793fda674028caa019b541a37af5245caf970" translate="yes" xml:space="preserve">
          <source>Deletes a struct using its primary key</source>
          <target state="translated">使用主键删除一个结构体</target>
        </trans-unit>
        <trans-unit id="6b0f350c369eba34b55c12b3bb595615937f6ff5" translate="yes" xml:space="preserve">
          <source>Deletes a struct using its primary key.</source>
          <target state="translated">使用主键删除一个结构体。</target>
        </trans-unit>
        <trans-unit id="99a7bdafb4a5add3ba4ed6cbb69eceaaa881d322" translate="yes" xml:space="preserve">
          <source>Deletes all entries matching the given query</source>
          <target state="translated">删除所有与给定查询匹配的条目</target>
        </trans-unit>
        <trans-unit id="f37192814b4bbe90dc78941307f5bc02d3f80812" translate="yes" xml:space="preserve">
          <source>Deletes all entries matching the given query.</source>
          <target state="translated">删除所有与查询匹配的条目。</target>
        </trans-unit>
        <trans-unit id="07d5b14db379714d12e9bdc4a09310e477552c02" translate="yes" xml:space="preserve">
          <source>Deletes any CSRF token set</source>
          <target state="translated">删除任何CSRF令牌集</target>
        </trans-unit>
        <trans-unit id="6708e2a5d51b61df92adbc1eb9bc52a77c891cd1" translate="yes" xml:space="preserve">
          <source>Deletes any CSRF token set.</source>
          <target state="translated">删除任何CSRF标记集。</target>
        </trans-unit>
        <trans-unit id="efbcf3247e62f0f6be7f09d7f602f1dd662b28fe" translate="yes" xml:space="preserve">
          <source>Deletes the CSRF token from the process dictionary</source>
          <target state="translated">从进程字典中删除CSRF标记。</target>
        </trans-unit>
        <trans-unit id="b0cf0913b96035e4ec0da1dc517a91bd41b65b68" translate="yes" xml:space="preserve">
          <source>Deletes the CSRF token from the process dictionary.</source>
          <target state="translated">从进程字典中删除CSRF标记。</target>
        </trans-unit>
        <trans-unit id="9b584ac24f3db38d0aae3ca2dfe9ae4e52297571" translate="yes" xml:space="preserve">
          <source>Deletes the session for the given &lt;code&gt;key&lt;/code&gt;</source>
          <target state="translated">删除给定 &lt;code&gt;key&lt;/code&gt; 的会话</target>
        </trans-unit>
        <trans-unit id="492ad3e1227c0240a2139106742d9007e1dbf985" translate="yes" xml:space="preserve">
          <source>Deletes the session for the given &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">删除给定 &lt;code&gt;key&lt;/code&gt; 的会话。</target>
        </trans-unit>
        <trans-unit id="7f2a493d27d308a215e6776d97101f6bfa8d94bd" translate="yes" xml:space="preserve">
          <source>Deleting a cookie requires the same options as to when the cookie was put. Check &lt;a href=&quot;#put_resp_cookie/4&quot;&gt;&lt;code&gt;put_resp_cookie/4&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">删除Cookie所需的选项与放置Cookie的时间相同。检查&lt;a href=&quot;#put_resp_cookie/4&quot;&gt; &lt;code&gt;put_resp_cookie/4&lt;/code&gt; &lt;/a&gt;了解更多信息。</target>
        </trans-unit>
        <trans-unit id="5c0dee643023491858c39cbb20fc351077ecd61a" translate="yes" xml:space="preserve">
          <source>Dependencies in your software are often unavoidable, but we can do our best to limit them where possible and lessen the maintenance burden when a dependency is necessary. So far, we've done a great job isolating the two main contexts of our application from each other, but now we have a necessary dependency to handle.</source>
          <target state="translated">软件中的依赖关系通常是不可避免的,但我们可以尽可能地限制它们,并在必要的依赖关系时减轻维护负担。到目前为止,我们已经很好地隔离了应用程序的两个主要上下文,但现在我们有一个必要的依赖关系要处理。</target>
        </trans-unit>
        <trans-unit id="0829d3fed8071950ec7a9ea9d8e675b4eee7e5df" translate="yes" xml:space="preserve">
          <source>Depending on the given &lt;code&gt;type&lt;/code&gt; performs a structural or semantical comparison.</source>
          <target state="translated">根据给定的 &lt;code&gt;type&lt;/code&gt; 执行结构或语义比较。</target>
        </trans-unit>
        <trans-unit id="2922454c19f8dd8d1a608e68152a3e8f074c6ba1" translate="yes" xml:space="preserve">
          <source>Deploy a reverse proxy or load balancer process, such as Nginx or HAProxy (see &lt;a href=&quot;#offloading-tls&quot;&gt;Offloading TLS&lt;/a&gt;, below); the proxy listens on port 443 and passes the traffic to the Elixir application running on an unprivileged port</source>
          <target state="translated">部署反向代理或负载平衡器过程，例如Nginx或HAProxy（请参阅下面的&amp;ldquo;&lt;a href=&quot;#offloading-tls&quot;&gt;分流TLS&amp;rdquo;&lt;/a&gt;）；代理侦听端口443并将流量传递给在非特权端口上运行的Elixir应用程序</target>
        </trans-unit>
        <trans-unit id="6e1db24871bf8ee75c657ace9b8d1cf48f6fca6f" translate="yes" xml:space="preserve">
          <source>Deployment - in-depth guides about deployment</source>
          <target state="translated">部署 ----关于部署的深入指南</target>
        </trans-unit>
        <trans-unit id="8d60002ce0cbb84509bdb53ded6e6959b0d1b953" translate="yes" xml:space="preserve">
          <source>Deprecated version of conn/0. Use build_conn/0 instead</source>
          <target state="translated">废弃的conn/0版本,使用build_conn/0代替</target>
        </trans-unit>
        <trans-unit id="667efcfdd5df9fec932f221c6a4bed3f5f15f7d3" translate="yes" xml:space="preserve">
          <source>Deprecated version of conn/3. Use build_conn/3 instead</source>
          <target state="translated">废弃的conn/3版本。使用 build_conn/3 来代替</target>
        </trans-unit>
        <trans-unit id="bc57df81bc6a4fdaad15a199a65b4ba7da132b5f" translate="yes" xml:space="preserve">
          <source>Developers interested in implementing custom transports must invoke the socket API defined in this module. This module also provides many conveniences that invokes the underlying socket API to make it easier to build custom transports.</source>
          <target state="translated">有兴趣实现自定义传输的开发者必须调用本模块中定义的socket API。该模块还提供了许多方便,调用底层的套接字API,使其更容易构建自定义传输。</target>
        </trans-unit>
        <trans-unit id="a43d5127d4822c6c5a9fb2f275c5aaedaf9e424f" translate="yes" xml:space="preserve">
          <source>Developers typically invoke &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html#init/2&quot;&gt;&lt;code&gt;Supervisor.init/2&lt;/code&gt;&lt;/a&gt; at the end of their init callback to return the proper supervision flags.</source>
          <target state="translated">开发人员通常在其init回调的末尾调用&lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html#init/2&quot;&gt; &lt;code&gt;Supervisor.init/2&lt;/code&gt; &lt;/a&gt;以返回适当的监督标志。</target>
        </trans-unit>
        <trans-unit id="de2b2421a912bbeefc48a7805363b92f8c8dfa95" translate="yes" xml:space="preserve">
          <source>Dictates how the type should be treated inside embeds.</source>
          <target state="translated">决定如何处理嵌入中的类型。</target>
        </trans-unit>
        <trans-unit id="d10727ff07a61c20d90a8ead7e945824b521a56e" translate="yes" xml:space="preserve">
          <source>Diffie Hellman parameters</source>
          <target state="translated">Diffie Hellman参数</target>
        </trans-unit>
        <trans-unit id="5239c7e690be047b1c40d1686ed6392e481c3ddb" translate="yes" xml:space="preserve">
          <source>Digests and compress static files.</source>
          <target state="translated">对静态文件进行摘要和压缩。</target>
        </trans-unit>
        <trans-unit id="b81ec068f62bb915dba55bc19790a31a98f55818" translate="yes" xml:space="preserve">
          <source>Digests and compresses static files.</source>
          <target state="translated">对静态文件进行消化和压缩。</target>
        </trans-unit>
        <trans-unit id="99ebbad0bfd4667f6a336c3b334aa0d4e3d8ddc7" translate="yes" xml:space="preserve">
          <source>Digests and compresses the static files and saves them in the given output path</source>
          <target state="translated">对静态文件进行消化和压缩,并将其保存在给定的输出路径中。</target>
        </trans-unit>
        <trans-unit id="7a8caf6ea516252bee7fd92867f23b995212ceca" translate="yes" xml:space="preserve">
          <source>Digests and compresses the static files and saves them in the given output path.</source>
          <target state="translated">对静态文件进行消化和压缩,并将其保存在给定的输出路径中。</target>
        </trans-unit>
        <trans-unit id="bcbc4cc8e3f388ccae89b1884e0b6507830e2f84" translate="yes" xml:space="preserve">
          <source>Direct usage</source>
          <target state="translated">直接使用</target>
        </trans-unit>
        <trans-unit id="07461fdd8bbd77721cfe447edf9e4bd20cbd0023" translate="yes" xml:space="preserve">
          <source>Directory structure</source>
          <target state="translated">目录结构</target>
        </trans-unit>
        <trans-unit id="48921431448fdab71760c6030086e16e79e9c560" translate="yes" xml:space="preserve">
          <source>Disable logging: &lt;code&gt;use Phoenix.Socket, log: false&lt;/code&gt; or &lt;code&gt;socket &quot;/foo&quot;, MySocket, websocket: [log: false]&lt;/code&gt; in your endpoint</source>
          <target state="translated">禁用日志记录：在端点中 &lt;code&gt;use Phoenix.Socket, log: false&lt;/code&gt; 或 &lt;code&gt;socket &quot;/foo&quot;, MySocket, websocket: [log: false]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="641d0e62de0ede81f52d31e9ab7917ccf950ae23" translate="yes" xml:space="preserve">
          <source>Disable logging: In your endpoint &lt;code&gt;plug Plug.Telemetry, ..., log: Logger.level | false&lt;/code&gt;</source>
          <target state="translated">禁用日志记录：在端点 &lt;code&gt;plug Plug.Telemetry, ..., log: Logger.level | false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a8825a6a930b9d113a3458154e71d4ad4c4a501e" translate="yes" xml:space="preserve">
          <source>Disable logging: Pass &lt;code&gt;log: false&lt;/code&gt; to the router macro, for example: &lt;code&gt;get(&quot;/page&quot;, PageController, :index, log: false)&lt;/code&gt;</source>
          <target state="translated">禁用日志记录：将 &lt;code&gt;log: false&lt;/code&gt; 传递到路由器宏，例如： &lt;code&gt;get(&quot;/page&quot;, PageController, :index, log: false)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f3d4f3e80f755e56b4e3aacddd584ddf506f0562" translate="yes" xml:space="preserve">
          <source>Disable logging: Set &lt;code&gt;render_errors: [log: false]&lt;/code&gt; on your endpoint configuration</source>
          <target state="translated">禁用日志记录：在端点配置上设置 &lt;code&gt;render_errors: [log: false]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7d602b65c08d4c643c673620d08a73542d64e7cc" translate="yes" xml:space="preserve">
          <source>Disable logging: This event cannot be disabled</source>
          <target state="translated">禁用日志。此事件不能被禁用</target>
        </trans-unit>
        <trans-unit id="d16fe5c27095e50264e4ea24af8d6061c35cdd9d" translate="yes" xml:space="preserve">
          <source>Disable logging: This event is not logged</source>
          <target state="translated">禁用日志。此事件不被记录</target>
        </trans-unit>
        <trans-unit id="03bf0a54b86fdf600ed47b76df6625dec956b028" translate="yes" xml:space="preserve">
          <source>Disabling</source>
          <target state="translated">Disabling</target>
        </trans-unit>
        <trans-unit id="7fac5cf3ba2ec0a4d1df773e6887af7dea9803dd" translate="yes" xml:space="preserve">
          <source>Disconnecting all instances of a given live user</source>
          <target state="translated">断开给定用户的所有实例的连接</target>
        </trans-unit>
        <trans-unit id="96b5232fa4c733e97f037f875fd5a92f8e94d41c" translate="yes" xml:space="preserve">
          <source>Dispatches &lt;a href=&quot;phoenix.socket.message&quot;&gt;&lt;code&gt;Phoenix.Socket.Message&lt;/code&gt;&lt;/a&gt; to a channel</source>
          <target state="translated">将&lt;a href=&quot;phoenix.socket.message&quot;&gt; &lt;code&gt;Phoenix.Socket.Message&lt;/code&gt; &lt;/a&gt;调度到一个通道</target>
        </trans-unit>
        <trans-unit id="fe9d02a45e91f54e19c7f2226499f19d70de1a13" translate="yes" xml:space="preserve">
          <source>Dispatches &lt;a href=&quot;phoenix.socket.message&quot;&gt;&lt;code&gt;Phoenix.Socket.Message&lt;/code&gt;&lt;/a&gt; to a channel.</source>
          <target state="translated">将&lt;a href=&quot;phoenix.socket.message&quot;&gt; &lt;code&gt;Phoenix.Socket.Message&lt;/code&gt; &lt;/a&gt;调度到一个通道。</target>
        </trans-unit>
        <trans-unit id="1c1adafd96d807fa9fb86cd4d2da33f8d9cc603e" translate="yes" xml:space="preserve">
          <source>Dispatches the connection to the given endpoint</source>
          <target state="translated">将连接发送到给定的端点</target>
        </trans-unit>
        <trans-unit id="fba471690dad6774fb53979ac504840f01b87f88" translate="yes" xml:space="preserve">
          <source>Dispatches the connection to the given endpoint.</source>
          <target state="translated">派遣连接到给定的端点。</target>
        </trans-unit>
        <trans-unit id="ddc1527261174a3bf196eb7378ee28cfde1c8cf2" translate="yes" xml:space="preserve">
          <source>Dispatches to the current endpoint</source>
          <target state="translated">派遣到当前端点</target>
        </trans-unit>
        <trans-unit id="42be31ad4915b519b26d800f35414ec31eb0e7a5" translate="yes" xml:space="preserve">
          <source>Dispatches to the current endpoint.</source>
          <target state="translated">派遣到当前端点。</target>
        </trans-unit>
        <trans-unit id="5f8b1bea9f9d0843e3db8ee304f3d8d863a0d537" translate="yes" xml:space="preserve">
          <source>Dispatches to the path only if the request is a DELETE request. See &lt;a href=&quot;#match/3&quot;&gt;&lt;code&gt;match/3&lt;/code&gt;&lt;/a&gt; for more examples</source>
          <target state="translated">仅在请求为DELETE请求时才分派到路径。有关更多示例，请参见&lt;a href=&quot;#match/3&quot;&gt; &lt;code&gt;match/3&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="349715d24abcab00378c6953ef63281898d5f0fc" translate="yes" xml:space="preserve">
          <source>Dispatches to the path only if the request is a DELETE request. See &lt;a href=&quot;#match/3&quot;&gt;&lt;code&gt;match/3&lt;/code&gt;&lt;/a&gt; for more examples.</source>
          <target state="translated">仅在请求为DELETE请求时才分派到路径。有关更多示例，请参见&lt;a href=&quot;#match/3&quot;&gt; &lt;code&gt;match/3&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9efbcffe2d3f8f6f005a51ab5bedcf5e13902b73" translate="yes" xml:space="preserve">
          <source>Dispatches to the path only if the request is a GET request. See &lt;a href=&quot;#match/3&quot;&gt;&lt;code&gt;match/3&lt;/code&gt;&lt;/a&gt; for more examples</source>
          <target state="translated">仅当请求是GET请求时才分派到路径。有关更多示例，请参见&lt;a href=&quot;#match/3&quot;&gt; &lt;code&gt;match/3&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d1fdf8470e12c39b6e23854035c4ed2bcdd13ba3" translate="yes" xml:space="preserve">
          <source>Dispatches to the path only if the request is a GET request. See &lt;a href=&quot;#match/3&quot;&gt;&lt;code&gt;match/3&lt;/code&gt;&lt;/a&gt; for more examples.</source>
          <target state="translated">仅当请求是GET请求时才分派到路径。有关更多示例，请参见&lt;a href=&quot;#match/3&quot;&gt; &lt;code&gt;match/3&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4158087588093b1ab228f794cda3e9b4c4bb7b97" translate="yes" xml:space="preserve">
          <source>Dispatches to the path only if the request is a HEAD request. See &lt;a href=&quot;#match/3&quot;&gt;&lt;code&gt;match/3&lt;/code&gt;&lt;/a&gt; for more examples.</source>
          <target state="translated">仅当请求是HEAD请求时才分派到路径。有关更多示例，请参见&lt;a href=&quot;#match/3&quot;&gt; &lt;code&gt;match/3&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="26451cb29dcd04808f58ada5f73009b82391d2da" translate="yes" xml:space="preserve">
          <source>Dispatches to the path only if the request is a PATCH request. See &lt;a href=&quot;#match/3&quot;&gt;&lt;code&gt;match/3&lt;/code&gt;&lt;/a&gt; for more examples</source>
          <target state="translated">仅在请求是PATCH请求时才分派到路径。有关更多示例，请参见&lt;a href=&quot;#match/3&quot;&gt; &lt;code&gt;match/3&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eb9fffe149738fbaf0d808506ca784dcbbf146b1" translate="yes" xml:space="preserve">
          <source>Dispatches to the path only if the request is a PATCH request. See &lt;a href=&quot;#match/3&quot;&gt;&lt;code&gt;match/3&lt;/code&gt;&lt;/a&gt; for more examples.</source>
          <target state="translated">仅在请求是PATCH请求时才分派到路径。有关更多示例，请参见&lt;a href=&quot;#match/3&quot;&gt; &lt;code&gt;match/3&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="759d5edd2913b0fd955b74910f524889cf96caf8" translate="yes" xml:space="preserve">
          <source>Dispatches to the path only if the request is a POST request. See &lt;a href=&quot;#match/3&quot;&gt;&lt;code&gt;match/3&lt;/code&gt;&lt;/a&gt; for more examples</source>
          <target state="translated">仅当请求是POST请求时才分派到路径。有关更多示例，请参见&lt;a href=&quot;#match/3&quot;&gt; &lt;code&gt;match/3&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e7375e61dd2d04843b22f96071660e356c62a62e" translate="yes" xml:space="preserve">
          <source>Dispatches to the path only if the request is a POST request. See &lt;a href=&quot;#match/3&quot;&gt;&lt;code&gt;match/3&lt;/code&gt;&lt;/a&gt; for more examples.</source>
          <target state="translated">仅当请求是POST请求时才分派到路径。有关更多示例，请参见&lt;a href=&quot;#match/3&quot;&gt; &lt;code&gt;match/3&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="633336dc61440b815025525888e0681e8339cd0a" translate="yes" xml:space="preserve">
          <source>Dispatches to the path only if the request is a PUT request. See &lt;a href=&quot;#match/3&quot;&gt;&lt;code&gt;match/3&lt;/code&gt;&lt;/a&gt; for more examples</source>
          <target state="translated">仅当请求是PUT请求时才分派到路径。有关更多示例，请参见&lt;a href=&quot;#match/3&quot;&gt; &lt;code&gt;match/3&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="53fd2e3f0afad2fe34f350bf859d9130b5fc0d22" translate="yes" xml:space="preserve">
          <source>Dispatches to the path only if the request is a PUT request. See &lt;a href=&quot;#match/3&quot;&gt;&lt;code&gt;match/3&lt;/code&gt;&lt;/a&gt; for more examples.</source>
          <target state="translated">仅当请求是PUT请求时才分派到路径。有关更多示例，请参见&lt;a href=&quot;#match/3&quot;&gt; &lt;code&gt;match/3&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="114a23fd1f7e23090c953828c5b91b00fe01f39a" translate="yes" xml:space="preserve">
          <source>Dispatches to the path only if the request is an OPTIONS request. See &lt;a href=&quot;#match/3&quot;&gt;&lt;code&gt;match/3&lt;/code&gt;&lt;/a&gt; for more examples</source>
          <target state="translated">仅在请求是OPTIONS请求时才分派到路径。有关更多示例，请参见&lt;a href=&quot;#match/3&quot;&gt; &lt;code&gt;match/3&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8029cdf2d25f0c8a87e355c232a05cf294c3e2a6" translate="yes" xml:space="preserve">
          <source>Dispatches to the path only if the request is an OPTIONS request. See &lt;a href=&quot;#match/3&quot;&gt;&lt;code&gt;match/3&lt;/code&gt;&lt;/a&gt; for more examples.</source>
          <target state="translated">仅在请求是OPTIONS请求时才分派到路径。有关更多示例，请参见&lt;a href=&quot;#match/3&quot;&gt; &lt;code&gt;match/3&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="844b37d9d4baf2003a9abb5cf8a72c3e2f8e0680" translate="yes" xml:space="preserve">
          <source>Do not use this function to validate associations are required, instead pass the &lt;code&gt;:required&lt;/code&gt; option to &lt;a href=&quot;#cast_assoc/3&quot;&gt;&lt;code&gt;cast_assoc/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">不要使用此函数来验证是否需要关联，而是将 &lt;code&gt;:required&lt;/code&gt; 选项传递给&lt;a href=&quot;#cast_assoc/3&quot;&gt; &lt;code&gt;cast_assoc/3&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b8ddfcafdc2874eee39ec3c72be3effd8080893b" translate="yes" xml:space="preserve">
          <source>Does not raise on attempts to interpolate with &lt;code&gt;#{}&lt;/code&gt;, but rather shows those characters literally, so it should be preferred over &lt;code&gt;~e&lt;/code&gt;.</source>
          <target state="translated">不会尝试使用 &lt;code&gt;#{}&lt;/code&gt; 进行插值，而是直接显示这些字符，因此，它应优先于 &lt;code&gt;~e&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3bf8f5d49b9dd2bf889c2090ea30f0b66efc80e7" translate="yes" xml:space="preserve">
          <source>Drop the storage for the given repository.</source>
          <target state="translated">删除给定存储库的存储。</target>
        </trans-unit>
        <trans-unit id="3696edaf2ed1c056e2a9e610b35c66b8c9c81a65" translate="yes" xml:space="preserve">
          <source>Drops the storage given by options</source>
          <target state="translated">丢弃了选项给出的存储空间</target>
        </trans-unit>
        <trans-unit id="7132740a80c40ddcb7bc2c507f7136ce65c76081" translate="yes" xml:space="preserve">
          <source>Drops the storage given by options.</source>
          <target state="translated">丢弃选项给出的存储。</target>
        </trans-unit>
        <trans-unit id="bbfee27654e557ca6d136983cc0d993192098a89" translate="yes" xml:space="preserve">
          <source>Due to the prevalence of the pipe operator in Elixir, Ecto also supports a pipe-based syntax:</source>
          <target state="translated">由于Elixir中管道操作符的盛行,Ecto也支持基于管道的语法。</target>
        </trans-unit>
        <trans-unit id="879d8e7702bee3188afc919ead832f9d53f02deb" translate="yes" xml:space="preserve">
          <source>Dump CSRF state so it can be loaded in another process.</source>
          <target state="translated">转储CSRF状态,以便在另一个进程中加载。</target>
        </trans-unit>
        <trans-unit id="30bbef50b4671de3933513ba08c2e94c67829796" translate="yes" xml:space="preserve">
          <source>Dumps a value to the given type</source>
          <target state="translated">将一个值转储到给定类型</target>
        </trans-unit>
        <trans-unit id="b1a432d1d1196aa0d7f96d5eec91e28e3d91508c" translate="yes" xml:space="preserve">
          <source>Dumps a value to the given type.</source>
          <target state="translated">将一个值转储到给定类型。</target>
        </trans-unit>
        <trans-unit id="07afdd411a4cf789bb5131067a1bb6630f065a34" translate="yes" xml:space="preserve">
          <source>Dumps the &lt;code&gt;value&lt;/code&gt; for &lt;code&gt;type&lt;/code&gt; considering it will be embedded in &lt;code&gt;format&lt;/code&gt;.</source>
          <target state="translated">转储 &lt;code&gt;type&lt;/code&gt; 的 &lt;code&gt;value&lt;/code&gt; ，因为它将以 &lt;code&gt;format&lt;/code&gt; 嵌入。</target>
        </trans-unit>
        <trans-unit id="83f6d0b27c5e6c2d4dad8c11cfdd14a299984099" translate="yes" xml:space="preserve">
          <source>Dumps the CSRF state from the connection.</source>
          <target state="translated">从连接中转储CSRF状态。</target>
        </trans-unit>
        <trans-unit id="158591d0eb0fd833637e72dedfa9e328e663c7c7" translate="yes" xml:space="preserve">
          <source>Dumps the given struct defined by an embedded schema.</source>
          <target state="translated">转储一个由嵌入式模式定义的给定结构。</target>
        </trans-unit>
        <trans-unit id="0417dafea29d5dfc870d3de69a4c4e148be3b40e" translate="yes" xml:space="preserve">
          <source>Dumps the given term into an Ecto native type</source>
          <target state="translated">将给定的术语转储到一个Ecto本地类型中。</target>
        </trans-unit>
        <trans-unit id="553ee57bc177891a45abc3f403d26305442b25e5" translate="yes" xml:space="preserve">
          <source>Dumps the given term into an Ecto native type.</source>
          <target state="translated">将给定的术语转储到一个Ecto本地类型中。</target>
        </trans-unit>
        <trans-unit id="46f3545d74684749addefc8accbfca66690a037c" translate="yes" xml:space="preserve">
          <source>Duplicate Join Subscriptions</source>
          <target state="translated">重复加入订阅</target>
        </trans-unit>
        <trans-unit id="c7d8d30b4b4cc0ebefd2ef7f85457a3500a15419" translate="yes" xml:space="preserve">
          <source>Duplicate Subscriptions</source>
          <target state="translated">重复订阅</target>
        </trans-unit>
        <trans-unit id="073c74bdd08ac89c82d34b21985574c996b8040f" translate="yes" xml:space="preserve">
          <source>Duplicated operations are not allowed.</source>
          <target state="translated">不允许重复操作。</target>
        </trans-unit>
        <trans-unit id="3d84a8fb6491809cf5b86e43b269bdce2884814b" translate="yes" xml:space="preserve">
          <source>During a regular controller request, this exception will be converted to a 404 exception and rendered as a custom error page, as &lt;a href=&quot;../phoenix/custom_error_pages&quot;&gt;detailed here&lt;/a&gt;. To understand how a LiveView reacts to exceptions, we need to consider two scenarios: exceptions on mount and during any event.</source>
          <target state="translated">在常规控制器请求期间，此异常将转换为404异常，并呈现为自定义错误页面，如此&lt;a href=&quot;../phoenix/custom_error_pages&quot;&gt;处所述&lt;/a&gt;。要了解LiveView如何对异常做出反应，我们需要考虑两种情况：挂载和任何事件期间的异常。</target>
        </trans-unit>
        <trans-unit id="ddc07840a9dd97e5d9b21c437fa120c0b5258fa6" translate="yes" xml:space="preserve">
          <source>During casting, all &lt;code&gt;permitted&lt;/code&gt; parameters whose values match the specified type information will have their key name converted to an atom and stored together with the value as a change in the &lt;code&gt;:changes&lt;/code&gt; field of the changeset. All parameters that are not explicitly permitted are ignored.</source>
          <target state="translated">在转换期间，所有 &lt;code&gt;permitted&lt;/code&gt; 的值与指定的类型信息匹配的参数都将其键名转换为原子，并与值一起存储在变更集的 &lt;code&gt;:changes&lt;/code&gt; 字段中。所有未明确允许的参数将被忽略。</target>
        </trans-unit>
        <trans-unit id="c86666453246d5cdf625e92d8cf6fc31a015a7ad" translate="yes" xml:space="preserve">
          <source>During the request, files are represented with a &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Plug.Upload&lt;/code&gt;&lt;/a&gt; struct that contains three fields:</source>
          <target state="translated">在请求期间，文件由包含三个字段的&lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Plug.Upload&lt;/code&gt; &lt;/a&gt;结构表示：</target>
        </trans-unit>
        <trans-unit id="95239208a8ce56b0b9fafb46e146ac7d94cee756" translate="yes" xml:space="preserve">
          <source>During the request, files are represented with a &lt;a href=&quot;plug.upload#content&quot;&gt;&lt;code&gt;Plug.Upload&lt;/code&gt;&lt;/a&gt; struct that contains three fields:</source>
          <target state="translated">在请求期间，文件由包含三个字段的&lt;a href=&quot;plug.upload#content&quot;&gt; &lt;code&gt;Plug.Upload&lt;/code&gt; &lt;/a&gt;结构表示：</target>
        </trans-unit>
        <trans-unit id="3ca7327a7bd2f5353024f65ee68945fbf10eccf7" translate="yes" xml:space="preserve">
          <source>Dynamic configuration</source>
          <target state="translated">动态配置</target>
        </trans-unit>
        <trans-unit id="57d1ea9ebb2927a523b2fa1ba48aa25e8ceb8c49" translate="yes" xml:space="preserve">
          <source>Dynamic instrumentation</source>
          <target state="translated">动态仪器</target>
        </trans-unit>
        <trans-unit id="63f95847c9a172342fffe74ea0e9ee86b32d1f29" translate="yes" xml:space="preserve">
          <source>Dynamic is also supported as each field in an update, for example:</source>
          <target state="translated">例如,作为更新中的每个字段,也支持动态。</target>
        </trans-unit>
        <trans-unit id="9e83e2e52edf976173e31c30aa0305db62232df4" translate="yes" xml:space="preserve">
          <source>Dynamic is also supported inside updates, for example:</source>
          <target state="translated">比如说更新里面也支持动态。</target>
        </trans-unit>
        <trans-unit id="aca0e11faafc714e1107582dd050cac6083af393" translate="yes" xml:space="preserve">
          <source>Dynamic query expressions allows developers to build queries expression bit by bit so they are later interpolated in a query.</source>
          <target state="translated">动态查询表达式允许开发人员一点一点地建立查询表达式,以便以后在查询中进行插值。</target>
        </trans-unit>
        <trans-unit id="e0b2275f70cca30ac774d384ecf147236ae66404" translate="yes" xml:space="preserve">
          <source>Dynamics are also supported in &lt;a href=&quot;#order_by/2&quot;&gt;&lt;code&gt;order_by/2&lt;/code&gt;&lt;/a&gt; clauses inside &lt;a href=&quot;#windows/2&quot;&gt;&lt;code&gt;windows/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#windows/2&quot;&gt; &lt;code&gt;windows/2&lt;/code&gt; &lt;/a&gt;内的&lt;a href=&quot;#order_by/2&quot;&gt; &lt;code&gt;order_by/2&lt;/code&gt; &lt;/a&gt;子句也支持动态功能。</target>
        </trans-unit>
        <trans-unit id="5964d4d90ea5ad8021798b3b8082d961c70ba442" translate="yes" xml:space="preserve">
          <source>Dynamics are also supported in &lt;code&gt;partition_by/2&lt;/code&gt; clauses inside &lt;a href=&quot;#windows/2&quot;&gt;&lt;code&gt;windows/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#windows/2&quot;&gt; &lt;code&gt;windows/2&lt;/code&gt; &lt;/a&gt;内的 &lt;code&gt;partition_by/2&lt;/code&gt; 子句也支持动态。</target>
        </trans-unit>
        <trans-unit id="afdc3801b103c98d5b428f8b1cd450b0eb1163c6" translate="yes" xml:space="preserve">
          <source>Dynamics can be interpolated inside keyword lists at the root of &lt;code&gt;group_by&lt;/code&gt;. For example, you can write:</source>
          <target state="translated">可以在 &lt;code&gt;group_by&lt;/code&gt; 根目录的关键字列表中内插动态。例如，您可以编写：</target>
        </trans-unit>
        <trans-unit id="0e2abb291b3116e93b04e0612abec56e0c0fff78" translate="yes" xml:space="preserve">
          <source>Dynamics can be interpolated inside keyword lists at the root of &lt;code&gt;order_by&lt;/code&gt;. For example, you can write:</source>
          <target state="translated">可以在 &lt;code&gt;order_by&lt;/code&gt; 根目录的关键字列表中内插动力学。例如，您可以编写：</target>
        </trans-unit>
        <trans-unit id="77bf054b1752c47ccf22f28d3dd4a195ee74c2d7" translate="yes" xml:space="preserve">
          <source>Each &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Plug.Router&lt;/code&gt;&lt;/a&gt; has a plug pipeline, defined by &lt;a href=&quot;plug.builder&quot;&gt;&lt;code&gt;Plug.Builder&lt;/code&gt;&lt;/a&gt;, and by default it requires two plugs: &lt;code&gt;:match&lt;/code&gt; and &lt;code&gt;:dispatch&lt;/code&gt;. &lt;code&gt;:match&lt;/code&gt; is responsible for finding a matching route which is then forwarded to &lt;code&gt;:dispatch&lt;/code&gt;. This means users can easily hook into the router mechanism and add behaviour before match, before dispatch, or after both. All of the options given to &lt;code&gt;use Plug.Router&lt;/code&gt; are forwarded to &lt;a href=&quot;plug.builder&quot;&gt;&lt;code&gt;Plug.Builder&lt;/code&gt;&lt;/a&gt;. See the &lt;a href=&quot;plug.builder&quot;&gt;&lt;code&gt;Plug.Builder&lt;/code&gt;&lt;/a&gt; module for more information on the &lt;code&gt;plug&lt;/code&gt; macro and on the available options.</source>
          <target state="translated">每个&lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Plug.Router&lt;/code&gt; &lt;/a&gt;都有一个由&lt;a href=&quot;plug.builder&quot;&gt; &lt;code&gt;Plug.Builder&lt;/code&gt; &lt;/a&gt;定义的插件管道，默认情况下，它需要两个插件 &lt;code&gt;:match&lt;/code&gt; 和 &lt;code&gt;:dispatch&lt;/code&gt; 。 &lt;code&gt;:match&lt;/code&gt; 负责查找匹配的路由，然后将其转发到 &lt;code&gt;:dispatch&lt;/code&gt; 。这意味着用户可以轻松地加入路由器机制，并在匹配之前，分派之前或之后添加行为。给出的所有 &lt;code&gt;use Plug.Router&lt;/code&gt; 的选项都转发到&lt;a href=&quot;plug.builder&quot;&gt; &lt;code&gt;Plug.Builder&lt;/code&gt; &lt;/a&gt;。有关 &lt;code&gt;plug&lt;/code&gt; 宏和可用选项的更多信息，请参见&lt;a href=&quot;plug.builder&quot;&gt; &lt;code&gt;Plug.Builder&lt;/code&gt; &lt;/a&gt;模块。</target>
        </trans-unit>
        <trans-unit id="933904af8bf3dbaf33d220a1dd41c4a3cbf4454e" translate="yes" xml:space="preserve">
          <source>Each Phoenix endpoint defines its own &lt;a href=&quot;#instrument/3&quot;&gt;&lt;code&gt;instrument/3&lt;/code&gt;&lt;/a&gt; macro. This macro is called like this:</source>
          <target state="translated">每个Phoenix端点都定义了自己的&lt;a href=&quot;#instrument/3&quot;&gt; &lt;code&gt;instrument/3&lt;/code&gt; &lt;/a&gt;宏。该宏的调用方式如下：</target>
        </trans-unit>
        <trans-unit id="d2b643fec057644ebdc3a745c9f3b74028c8c0a8" translate="yes" xml:space="preserve">
          <source>Each element of the plug pipeline (according to the type signature of this function) has the form:</source>
          <target state="translated">插件管道的每个元素(根据该函数的类型签名)都有如下形式:</target>
        </trans-unit>
        <trans-unit id="eb685d1d5301b54bb6fdbd19bd3a4def62faa983" translate="yes" xml:space="preserve">
          <source>Each join accepts the following options:</source>
          <target state="translated">每次加入都接受以下选项:</target>
        </trans-unit>
        <trans-unit id="c50d21214c659115473b7563f287066d99833476" translate="yes" xml:space="preserve">
          <source>Each message also has a &lt;code&gt;ref&lt;/code&gt; field which is used to track responses.</source>
          <target state="translated">每条消息还具有一个 &lt;code&gt;ref&lt;/code&gt; 字段，用于跟踪响应。</target>
        </trans-unit>
        <trans-unit id="5aa672af278f7f1f607abd1ee4459962a777b4db" translate="yes" xml:space="preserve">
          <source>Each of these actions takes two parameters, which will be provided by Phoenix behind the scenes.</source>
          <target state="translated">每一个动作都需要两个参数,这些参数将由凤凰卫视在后台提供。</target>
        </trans-unit>
        <trans-unit id="119f627331a3a8e751b39858eaa8477c8c12ea77" translate="yes" xml:space="preserve">
          <source>Each of these plugs have a specific responsibility that we will learn later. The last plug is precisely the &lt;code&gt;HelloWeb.Router&lt;/code&gt; module. This allows the endpoint to delegate all further request processing to the router. As we now know, its main responsibility is to map verb/path pairs to controllers. The controller then tells a view to render a template.</source>
          <target state="translated">这些插件中的每一个都有特定的职责，我们将在以后学习。最后一个插件正是 &lt;code&gt;HelloWeb.Router&lt;/code&gt; 模块。这允许端点将所有进一步的请求处理委托给路由器。众所周知，它的主要职责是将动词/路径对映射到控制器。然后，控制器告诉视图渲染模板。</target>
        </trans-unit>
        <trans-unit id="1b807df4c8b8158b0d38aaa1ec1fe7695f9efe52" translate="yes" xml:space="preserve">
          <source>Each parser also accepts options to be given directly to it by using tuples. For example, to support file uploads it is common pass the &lt;code&gt;:length&lt;/code&gt;, &lt;code&gt;:read_length&lt;/code&gt; and &lt;code&gt;:read_timeout&lt;/code&gt; option to the multipart parser:</source>
          <target state="translated">每个解析器还接受使用元组直接赋予它的选项。例如，为了支持文件上传，通常将 &lt;code&gt;:length&lt;/code&gt; ， &lt;code&gt;:read_length&lt;/code&gt; 和 &lt;code&gt;:read_timeout&lt;/code&gt; read_timeout选项传递给多部分解析器：</target>
        </trans-unit>
        <trans-unit id="74203beff6b2286d00dc12283d432f9cab89c9ed" translate="yes" xml:space="preserve">
          <source>Each parser also accepts options to be given directly to it by using tuples. For example, to support file uploads it is common to pass the &lt;code&gt;:length&lt;/code&gt;, &lt;code&gt;:read_length&lt;/code&gt; and &lt;code&gt;:read_timeout&lt;/code&gt; option to the multipart parser:</source>
          <target state="translated">每个解析器还接受使用元组直接赋予它的选项。例如，为了支持文件上传，通常将 &lt;code&gt;:length&lt;/code&gt; ， &lt;code&gt;:read_length&lt;/code&gt; 和 &lt;code&gt;:read_timeout&lt;/code&gt; read_timeout选项传递给多部分解析器：</target>
        </trans-unit>
        <trans-unit id="4137e6a78f65b04c761ff22f86213d0d80a2eb7e" translate="yes" xml:space="preserve">
          <source>Each repository in Ecto defines a &lt;code&gt;start_link/0&lt;/code&gt; function that needs to be invoked before using the repository. In general, this function is not called directly, but used as part of your application supervision tree.</source>
          <target state="translated">Ecto中的每个存储库都定义了一个 &lt;code&gt;start_link/0&lt;/code&gt; 函数，在使用该存储库之前需要先调用该函数。通常，不直接调用此函数，而是将其用作应用程序监视树的一部分。</target>
        </trans-unit>
        <trans-unit id="42676af9c1801515132454954363e3968139cf8c" translate="yes" xml:space="preserve">
          <source>Each route needs to return a connection, as per the Plug spec. A catch-all &lt;code&gt;match&lt;/code&gt; is recommended to be defined as in the example above, otherwise routing fails with a function clause error.</source>
          <target state="translated">根据插件规范，每个路由都需要返回一个连接。建议像上面的示例中那样定义一个包罗万象的 &lt;code&gt;match&lt;/code&gt; 项，否则路由失败，并出现函数子句错误。</target>
        </trans-unit>
        <trans-unit id="894c9d3de1257a3f179af52621c4783a296b6fb9" translate="yes" xml:space="preserve">
          <source>Each route receives a &lt;code&gt;conn&lt;/code&gt; variable containing a &lt;a href=&quot;plug.conn&quot;&gt;&lt;code&gt;Plug.Conn&lt;/code&gt;&lt;/a&gt; struct and it needs to return a connection, as per the Plug spec. A catch-all &lt;code&gt;match&lt;/code&gt; is recommended to be defined as in the example above, otherwise routing fails with a function clause error.</source>
          <target state="translated">每条路由都会收到一个包含&lt;a href=&quot;plug.conn&quot;&gt; &lt;code&gt;Plug.Conn&lt;/code&gt; &lt;/a&gt;结构的 &lt;code&gt;conn&lt;/code&gt; 变量，并且需要根据Plug规范返回一个连接。建议像上面的示例中那样定义一个包罗万象的 &lt;code&gt;match&lt;/code&gt; 项，否则路由失败，并出现函数子句错误。</target>
        </trans-unit>
        <trans-unit id="1d1ee628d1aaf1fd735f2bc3b4b03f73d749beb5" translate="yes" xml:space="preserve">
          <source>Each socket connection is started by the transport and the process that controls the socket likely belongs to the transport. However, some sockets spawn new processes, such as &lt;a href=&quot;phoenix.socket&quot;&gt;&lt;code&gt;Phoenix.Socket&lt;/code&gt;&lt;/a&gt; which spawns channels, and this gives the ability to start a supervision tree associated to the socket.</source>
          <target state="translated">每个套接字连接都由传输启动，控制套接字的过程很可能属于传输。但是，某些套接字会生成新进程，例如&lt;a href=&quot;phoenix.socket&quot;&gt; &lt;code&gt;Phoenix.Socket&lt;/code&gt; &lt;/a&gt;会生成通道，这使您可以启动与该套接字关联的监督树。</target>
        </trans-unit>
        <trans-unit id="d74bf00f382d6c0c01c5f57c8e40a23243e4cd23" translate="yes" xml:space="preserve">
          <source>Earlier we looked at the &quot;stop&quot; event emitted by &lt;a href=&quot;../plug/plug.telemetry&quot;&gt;&lt;code&gt;Plug.Telemetry&lt;/code&gt;&lt;/a&gt;, and used it to count the number of HTTP requests. In reality, it's only somewhat helpful to be able to see just the total number of requests. What if you wanted to see the number of requests per route, or per route &lt;em&gt;and&lt;/em&gt; method?</source>
          <target state="translated">之前，我们研究了&lt;a href=&quot;../plug/plug.telemetry&quot;&gt; &lt;code&gt;Plug.Telemetry&lt;/code&gt; &lt;/a&gt;发出的&amp;ldquo; stop&amp;rdquo;事件，并使用它来计算HTTP请求的数量。实际上，仅查看请求总数仅对有所帮助。如果您想查看每个路由或每个路由&lt;em&gt;和&lt;/em&gt;方法的请求数怎么办？</target>
        </trans-unit>
        <trans-unit id="dcdf26136c50360b65e21c593b2aa25573fb61b1" translate="yes" xml:space="preserve">
          <source>Ecto</source>
          <target state="translated">Ecto</target>
        </trans-unit>
        <trans-unit id="0492f9fdbc91050ab2b943399a8e4779fdb3d363" translate="yes" xml:space="preserve">
          <source>Ecto Repos are the interface into a storage system, be it a Database like PostgreSQL or an external service like a RESTful API. The Repo module's purpose is to take care of the finer details of persistence and data querying for us. As the caller, we only care about fetching and persisting data. The Repo takes care of the underlying Database adapter communication, connection pooling, and error translation for database constraint violations.</source>
          <target state="translated">Ecto Repos是进入存储系统的接口,无论是PostgreSQL这样的数据库,还是RESTful API这样的外部服务。Repo模块的目的是为我们处理持久化和数据查询的细节。作为调用者,我们只关心数据的获取和持久化。Repo负责底层的数据库适配器通信、连接池以及数据库约束违反的错误翻译。</target>
        </trans-unit>
        <trans-unit id="e0808b72726eab51305183dbafca6b5b8cd62cd6" translate="yes" xml:space="preserve">
          <source>Ecto allows a limited set of expressions inside queries. In the query below, for example, we use &lt;code&gt;u.age&lt;/code&gt; to access a field, the &lt;code&gt;&amp;gt;&lt;/code&gt; comparison operator and the literal &lt;code&gt;0&lt;/code&gt;:</source>
          <target state="translated">Ecto在查询中允许使用有限的表达式集。例如，在下面的查询中，我们使用 &lt;code&gt;u.age&lt;/code&gt; 访问字段， &lt;code&gt;&amp;gt;&lt;/code&gt; 比较运算符和文字 &lt;code&gt;0&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="94f3cb6465c4dd9c65e9f19e4a6c3ad6ff98581a" translate="yes" xml:space="preserve">
          <source>Ecto allows developers to say that a table in their Ecto schema map to a different column in their database:</source>
          <target state="translated">Ecto允许开发人员说Ecto模式中的一个表映射到数据库中的不同列。</target>
        </trans-unit>
        <trans-unit id="5d4a9811baed7299e2ea6c61843ab6a75b227d42" translate="yes" xml:space="preserve">
          <source>Ecto also provides support for other databases and it has many learning resources available. Please check out &lt;a href=&quot;https://github.com/elixir-ecto/ecto&quot;&gt;Ecto's README&lt;/a&gt; for general information.</source>
          <target state="translated">Ecto还提供对其他数据库的支持，并且具有许多可用的学习资源。请查看&lt;a href=&quot;https://github.com/elixir-ecto/ecto&quot;&gt;Ecto的自述文件&lt;/a&gt;以获取一般信息。</target>
        </trans-unit>
        <trans-unit id="bc4695641349036d0b21011fb2419472a4f2177b" translate="yes" xml:space="preserve">
          <source>Ecto also supports &lt;a href=&quot;http://en.wikipedia.org/wiki/Optimistic_concurrency_control&quot;&gt;optimistic locking&lt;/a&gt; but not through queries. For more information on optimistic locking, have a look at the &lt;a href=&quot;ecto.changeset#optimistic_lock/3&quot;&gt;&lt;code&gt;Ecto.Changeset.optimistic_lock/3&lt;/code&gt;&lt;/a&gt; function</source>
          <target state="translated">Ecto还支持&lt;a href=&quot;http://en.wikipedia.org/wiki/Optimistic_concurrency_control&quot;&gt;乐观锁定，&lt;/a&gt;但不支持通过查询。有关乐观锁定的更多信息，请查看&lt;a href=&quot;ecto.changeset#optimistic_lock/3&quot;&gt; &lt;code&gt;Ecto.Changeset.optimistic_lock/3&lt;/code&gt; &lt;/a&gt;函数</target>
        </trans-unit>
        <trans-unit id="78e75eefbb051064232265b26e39eac152d1d962" translate="yes" xml:space="preserve">
          <source>Ecto also supports &lt;a href=&quot;https://en.wikipedia.org/wiki/Optimistic_concurrency_control&quot;&gt;optimistic locking&lt;/a&gt; but not through queries. For more information on optimistic locking, have a look at the &lt;a href=&quot;ecto.changeset#optimistic_lock/3&quot;&gt;&lt;code&gt;Ecto.Changeset.optimistic_lock/3&lt;/code&gt;&lt;/a&gt; function</source>
          <target state="translated">Ecto还支持&lt;a href=&quot;https://en.wikipedia.org/wiki/Optimistic_concurrency_control&quot;&gt;乐观锁定，&lt;/a&gt;但不支持通过查询。有关乐观锁定的更多信息，请查看&lt;a href=&quot;ecto.changeset#optimistic_lock/3&quot;&gt; &lt;code&gt;Ecto.Changeset.optimistic_lock/3&lt;/code&gt; &lt;/a&gt;函数</target>
        </trans-unit>
        <trans-unit id="8e1c9f9a91281d88321b17b86669b0b0f5795ef0" translate="yes" xml:space="preserve">
          <source>Ecto also supports composite primary keys, which is where you need to use &lt;code&gt;primary_key: true&lt;/code&gt; for the fields in your schema. This usually goes along with setting &lt;code&gt;@primary_key false&lt;/code&gt; to disable generation of additional primary key fields.</source>
          <target state="translated">Ecto还支持复合主键，这是您需要在架构中的字段上使用 &lt;code&gt;primary_key: true&lt;/code&gt; 的地方。这通常与将 &lt;code&gt;@primary_key false&lt;/code&gt; 设置为false一起使用以禁用其他主键字段的生成。</target>
        </trans-unit>
        <trans-unit id="d260b9af1a7917d7e4d184502a29c53ba67c3e54" translate="yes" xml:space="preserve">
          <source>Ecto also supports composite primary keys.</source>
          <target state="translated">Ecto还支持复合主键。</target>
        </trans-unit>
        <trans-unit id="a4adc50452a5297dcd0585501140d5cb5dfc117e" translate="yes" xml:space="preserve">
          <source>Ecto also supports defining associations in terms of other associations via the &lt;code&gt;:through&lt;/code&gt; option. Let&amp;rsquo;s see an example:</source>
          <target state="translated">Ecto还支持通过 &lt;code&gt;:through&lt;/code&gt; 选项根据其他关联定义关联。让我们来看一个例子：</target>
        </trans-unit>
        <trans-unit id="b2c285947a548bb0bf3241ebf045d9796075a325" translate="yes" xml:space="preserve">
          <source>Ecto also supports defining associations in terms of other associations via the &lt;code&gt;:through&lt;/code&gt; option. Let's see an example:</source>
          <target state="translated">Ecto还支持通过 &lt;code&gt;:through&lt;/code&gt; 选项根据其他关联定义关联。让我们来看一个例子：</target>
        </trans-unit>
        <trans-unit id="1b37c67383eec60d8334adc3fc230ee78bce3dc6" translate="yes" xml:space="preserve">
          <source>Ecto also supports embeds. While associations keep parent and child entries in different tables, embeds stores the child along side the parent.</source>
          <target state="translated">Ecto还支持嵌入。关联将父项和子项保存在不同的表中,而嵌入则将子项与父项一起保存。</target>
        </trans-unit>
        <trans-unit id="908f4eba6dd75fb3bf8e7ee20ba68b4314aa6545" translate="yes" xml:space="preserve">
          <source>Ecto also supports many of the windows functions found in SQL databases. See &lt;a href=&quot;ecto.query.windowapi&quot;&gt;&lt;code&gt;Ecto.Query.WindowAPI&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">Ecto还支持SQL数据库中的许多Windows函数。有关更多信息，请参见&lt;a href=&quot;ecto.query.windowapi&quot;&gt; &lt;code&gt;Ecto.Query.WindowAPI&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5c35ea8a0006f885d97bfefda29f8a7f60b833a9" translate="yes" xml:space="preserve">
          <source>Ecto and SQL</source>
          <target state="translated">Ecto和SQL</target>
        </trans-unit>
        <trans-unit id="543e777ba71274048b82434d7ca3c6e914af7361" translate="yes" xml:space="preserve">
          <source>Ecto automatically applies the action for you when you call Repo.insert/update/delete, but if you want to show errors manually you can also set the action yourself, either directly on the &lt;code&gt;Ecto.Changeset&lt;/code&gt; struct field or by using &lt;code&gt;Ecto.Changeset.apply_action/2&lt;/code&gt;.</source>
          <target state="translated">当您调用Repo.insert / update / delete时，Ecto会自动为您应用操作，但是如果您想手动显示错误，您也可以直接在 &lt;code&gt;Ecto.Changeset&lt;/code&gt; 结构字段上或使用 &lt;code&gt;Ecto.Changeset.apply_action/2&lt;/code&gt; 自己设置操作。 apply_action / 2。</target>
        </trans-unit>
        <trans-unit id="1f049343842e4a513055f3ab397ff02c6dedf67a" translate="yes" xml:space="preserve">
          <source>Ecto changesets provide both validations and constraints which are ultimately turned into errors in case something goes wrong.</source>
          <target state="translated">Ecto 变更集提供了验证和约束,而这些验证和约束最终会在出现问题时变成错误。</target>
        </trans-unit>
        <trans-unit id="0e6a7ceb26ad9821e6a3b4856e571db0d01d37ac" translate="yes" xml:space="preserve">
          <source>Ecto generators will automatically open the generated files if you have &lt;code&gt;ECTO_EDITOR&lt;/code&gt; set in your environment variable.</source>
          <target state="translated">如果你有外生发电机将自动打开生成的文件 &lt;code&gt;ECTO_EDITOR&lt;/code&gt; 在您的环境变量设置。</target>
        </trans-unit>
        <trans-unit id="68384cbbdc911478cd5e5264d1bb10fb91095ea3" translate="yes" xml:space="preserve">
          <source>Ecto is split into 4 main components:</source>
          <target state="translated">Ecto主要分为4个部分。</target>
        </trans-unit>
        <trans-unit id="385eb8af979a59dc0f9156a0bfa4ed70dc78dd78" translate="yes" xml:space="preserve">
          <source>Ecto provides many tasks to help your workflow as well as code generators. You can find all available tasks by typing &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Help.html&quot;&gt;&lt;code&gt;mix help&lt;/code&gt;&lt;/a&gt; inside a project with Ecto listed as a dependency.</source>
          <target state="translated">Ecto提供了许多任务来帮助您的工作流程以及代码生成器。您可以通过在项目中键入Ecto作为依赖项的&lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Help.html&quot;&gt; &lt;code&gt;mix help&lt;/code&gt; &lt;/a&gt;来找到所有可用任务。</target>
        </trans-unit>
        <trans-unit id="88ef839ecd01e6c797ad024ae6bd2fdc011a46c1" translate="yes" xml:space="preserve">
          <source>Ecto provides many tasks to help your workflow as well as code generators. You can find all available tasks by typing &lt;code&gt;mix help&lt;/code&gt; inside a project with Ecto listed as a dependency.</source>
          <target state="translated">Ecto提供了许多任务来帮助您的工作流程以及代码生成器。您可以通过在项目中键入Ecto作为依赖项的 &lt;code&gt;mix help&lt;/code&gt; 来找到所有可用任务。</target>
        </trans-unit>
        <trans-unit id="369659805b6b5fab30fa846f0eaaf2f98192e800" translate="yes" xml:space="preserve">
          <source>Ecto provides two types of custom types: basic types and parameterized types. Basic types are simple, requiring only four callbacks to be implemented, and are enough for most occasions. Parameterized types can be customized on the field definition and provide a wilder variety of callbacks.</source>
          <target state="translated">Ecto提供了两种类型的自定义类型:基本类型和参数化类型。基本类型很简单,只需要实现四个回调,对于大多数场合来说已经足够了。参数化类型可以在字段定义上进行自定义,并提供更多的回调。</target>
        </trans-unit>
        <trans-unit id="3681d1859c813fd536d00578ddf22cb6924eeddb" translate="yes" xml:space="preserve">
          <source>Ecto queries are composable. For example, the query above can actually be defined in two parts:</source>
          <target state="translated">Ecto查询是可以组合的。例如,上面的查询实际上可以定义为两个部分。</target>
        </trans-unit>
        <trans-unit id="2da1bf196269568f33d7352b70b059cbe9365ba2" translate="yes" xml:space="preserve">
          <source>Ecto requires developers to specify the key &lt;code&gt;:ecto_repos&lt;/code&gt; in their application configuration before using tasks like &lt;code&gt;ecto.create&lt;/code&gt; and &lt;code&gt;ecto.migrate&lt;/code&gt;. For example:</source>
          <target state="translated">Ecto要求开发人员在使用诸如 &lt;code&gt;ecto.create&lt;/code&gt; 和 &lt;code&gt;ecto.migrate&lt;/code&gt; 之类的任务之前，在其应用程序配置中指定key &lt;code&gt;:ecto_repos&lt;/code&gt; ecto_repos。例如：</target>
        </trans-unit>
        <trans-unit id="57fe82e5d326d604eaf902fbd96b05f22011ae2d" translate="yes" xml:space="preserve">
          <source>Ecto schemas are responsible for mapping Elixir values to external data sources, as well as mapping external data back into Elixir data-structures. We can also define relationships to other schemas in our applications. For example, our &lt;code&gt;User&lt;/code&gt; schema might have many &lt;code&gt;Post&lt;/code&gt;'s, and each &lt;code&gt;Post&lt;/code&gt; would belong to a &lt;code&gt;User&lt;/code&gt;. Ecto also handles data validation and type casting with changesets, which we'll discuss in a moment.</source>
          <target state="translated">Ecto模式负责将Elixir值映射到外部数据源，以及将外部数据映射回Elixir数据结构。我们还可以在应用程序中定义与其他模式的关系。例如，我们的 &lt;code&gt;User&lt;/code&gt; 模式可能有多个 &lt;code&gt;Post&lt;/code&gt; ，每个 &lt;code&gt;Post&lt;/code&gt; 都属于一个 &lt;code&gt;User&lt;/code&gt; 。 Ecto还处理数据验证和带有变更集的类型转换，我们将在稍后讨论。</target>
        </trans-unit>
        <trans-unit id="8dbcbd860697ee680b407b4da15a4ae66b5238c6" translate="yes" xml:space="preserve">
          <source>Ecto schemas at their core are simply Elixir structs. Our &lt;code&gt;schema&lt;/code&gt; block is what tells Ecto how to cast our &lt;code&gt;%User{}&lt;/code&gt; struct fields to and from the external &lt;code&gt;users&lt;/code&gt; table. Often, the ability to simply cast data to and from the database isn't enough and extra data validation is required. This is where Ecto Changesets come in. Let's dive in!</source>
          <target state="translated">Ecto模式的核心只是Elixir结构。我们的 &lt;code&gt;schema&lt;/code&gt; 块告诉了Ecto如何将 &lt;code&gt;%User{}&lt;/code&gt; 结构字段与外部 &lt;code&gt;users&lt;/code&gt; 表进行转换。通常，仅将数据投射到数据库或从数据库投射数据的能力是不够的，并且需要额外的数据验证。这就是Ecto变更集的加入之处。让我们深入研究吧！</target>
        </trans-unit>
        <trans-unit id="e4ecd730cb9b1dd813d32119673f0aa61b875ab1" translate="yes" xml:space="preserve">
          <source>Ecto supports defining associations on schemas:</source>
          <target state="translated">Ecto支持在模式上定义关联。</target>
        </trans-unit>
        <trans-unit id="8ef0e4fa90c3d01b7b8393d6382b1801000cca1e" translate="yes" xml:space="preserve">
          <source>Ecto supports following values for &lt;code&gt;interval&lt;/code&gt; option: &lt;code&gt;&quot;year&quot;&lt;/code&gt;, &lt;code&gt;&quot;month&quot;&lt;/code&gt;, &lt;code&gt;&quot;week&quot;&lt;/code&gt;, &lt;code&gt;&quot;day&quot;&lt;/code&gt;, &lt;code&gt;&quot;hour&quot;&lt;/code&gt;, &lt;code&gt;&quot;minute&quot;&lt;/code&gt;, &lt;code&gt;&quot;second&quot;&lt;/code&gt;, &lt;code&gt;&quot;millisecond&quot;&lt;/code&gt;, and &lt;code&gt;&quot;microsecond&quot;&lt;/code&gt;.</source>
          <target state="translated">Ecto支持以下 &lt;code&gt;interval&lt;/code&gt; 选项值： &lt;code&gt;&quot;year&quot;&lt;/code&gt; ， &lt;code&gt;&quot;month&quot;&lt;/code&gt; ， &lt;code&gt;&quot;week&quot;&lt;/code&gt; ， &lt;code&gt;&quot;day&quot;&lt;/code&gt; ， &lt;code&gt;&quot;hour&quot;&lt;/code&gt; ， &lt;code&gt;&quot;minute&quot;&lt;/code&gt; ， &lt;code&gt;&quot;second&quot;&lt;/code&gt; ， &lt;code&gt;&quot;millisecond&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;microsecond&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8f5b97a18c2bf62f93a37d4e1e34d2d1add2db9c" translate="yes" xml:space="preserve">
          <source>Ecto supports two ID types, called &lt;code&gt;:id&lt;/code&gt; and &lt;code&gt;:binary_id&lt;/code&gt;, which are often used as the type for primary keys and associations.</source>
          <target state="translated">Ecto支持两种ID类型 &lt;code&gt;:id&lt;/code&gt; 和 &lt;code&gt;:binary_id&lt;/code&gt; ，它们通常用作主键和关联的类型。</target>
        </trans-unit>
        <trans-unit id="7bc84d3797619e14b14938d446893ee596cbd55d" translate="yes" xml:space="preserve">
          <source>Ecto tasks</source>
          <target state="translated">Ecto任务</target>
        </trans-unit>
        <trans-unit id="fc4991eabecdb96fb9a632710bae981cce077544" translate="yes" xml:space="preserve">
          <source>Ecto telemetry events</source>
          <target state="translated">Ecto遥测事件</target>
        </trans-unit>
        <trans-unit id="20a84ad3515a8a2de63286eb205c801c7f85ca64" translate="yes" xml:space="preserve">
          <source>Ecto type</source>
          <target state="translated">Ecto型</target>
        </trans-unit>
        <trans-unit id="739fdc6f801f8cd9bb885970f4e968f7c6d0a112" translate="yes" xml:space="preserve">
          <source>Ecto will ensure &lt;code&gt;^title&lt;/code&gt; is cast to the given type and enforce such type at the database level. If the value is returned in a &lt;code&gt;select&lt;/code&gt;, Ecto will also enforce the proper type throughout.</source>
          <target state="translated">Ecto将确保将 &lt;code&gt;^title&lt;/code&gt; 强制转换为给定类型，并在数据库级别强制实施该类型。如果在 &lt;code&gt;select&lt;/code&gt; 中返回值，则Ecto还将在整个过程中强制使用正确的类型。</target>
        </trans-unit>
        <trans-unit id="109e0f72e455dc2c107b7ea7e25da2f337435680" translate="yes" xml:space="preserve">
          <source>Ecto.Adapter &lt;small&gt;behaviour&lt;/small&gt;</source>
          <target state="translated">Ecto.Adapter &lt;small&gt;行为&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="c7b3436e4efa478386e69de3f89bccf78a5331ed" translate="yes" xml:space="preserve">
          <source>Ecto.Adapter.Queryable &lt;small&gt;behaviour&lt;/small&gt;</source>
          <target state="translated">Ecto.Adapter.Queryable &lt;small&gt;行为&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="28222015c5ff8c27111fd36a355d891862e983ed" translate="yes" xml:space="preserve">
          <source>Ecto.Adapter.Schema &lt;small&gt;behaviour&lt;/small&gt;</source>
          <target state="translated">Ecto.Adapter.Schema &lt;small&gt;行为&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="220b9623a8e6a7a65e78d057a3d212aeb1b2de12" translate="yes" xml:space="preserve">
          <source>Ecto.Adapter.Storage &lt;small&gt;behaviour&lt;/small&gt;</source>
          <target state="translated">Ecto.Adapter.Storage &lt;small&gt;行为&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="642d5ee61cdbf3b8b6100f8fd20b4c8ab0ab3603" translate="yes" xml:space="preserve">
          <source>Ecto.Adapter.Transaction &lt;small&gt;behaviour&lt;/small&gt;</source>
          <target state="translated">Ecto.Adapter.Transaction &lt;small&gt;行为&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="ca20f1fc38a83abc4fe1f015f1e4a61f6d344ca3" translate="yes" xml:space="preserve">
          <source>Ecto.Association.BelongsTo</source>
          <target state="translated">Ecto.Association.BelongsTo</target>
        </trans-unit>
        <trans-unit id="bab53a05091b2ada117882673397ba808e865699" translate="yes" xml:space="preserve">
          <source>Ecto.Association.Has</source>
          <target state="translated">Ecto.Association.Has</target>
        </trans-unit>
        <trans-unit id="5b5db5b2170f1ce4d827994851108a6d1ee7d5b2" translate="yes" xml:space="preserve">
          <source>Ecto.Association.HasThrough</source>
          <target state="translated">Ecto.Association.HasThrough</target>
        </trans-unit>
        <trans-unit id="19e40c29077106de6b4120c7850a32444efff935" translate="yes" xml:space="preserve">
          <source>Ecto.Association.ManyToMany</source>
          <target state="translated">Ecto.Association.ManyToMany</target>
        </trans-unit>
        <trans-unit id="3e9d659ba5926e1ffb6a9e2eb6ce68fe1b43f568" translate="yes" xml:space="preserve">
          <source>Ecto.Association.NotLoaded</source>
          <target state="translated">Ecto.Association.NotLoaded</target>
        </trans-unit>
        <trans-unit id="f5d903958036e8e9d5b98f8ead032495c636fa97" translate="yes" xml:space="preserve">
          <source>Ecto.CastError</source>
          <target state="translated">Ecto.CastError</target>
        </trans-unit>
        <trans-unit id="359261cc36e3c68943f7642959e3a7879245c174" translate="yes" xml:space="preserve">
          <source>Ecto.CastError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">Ecto.CastError &lt;small&gt;异常&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="87f7561d3d03785d252cdce4cff69685e660886d" translate="yes" xml:space="preserve">
          <source>Ecto.ChangeError</source>
          <target state="translated">Ecto.ChangeError</target>
        </trans-unit>
        <trans-unit id="eecc0c345ee7d1bc75637e20508b14c21e90d5ae" translate="yes" xml:space="preserve">
          <source>Ecto.ChangeError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">Ecto.ChangeError &lt;small&gt;异常&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="67418d61e9ba76e8391116ba7958917020d802e6" translate="yes" xml:space="preserve">
          <source>Ecto.Changeset</source>
          <target state="translated">Ecto.Changeset</target>
        </trans-unit>
        <trans-unit id="04974eb9c173298cc8ee0461a1b8ea7c060f1a7b" translate="yes" xml:space="preserve">
          <source>Ecto.ConstraintError</source>
          <target state="translated">Ecto.ConstraintError</target>
        </trans-unit>
        <trans-unit id="8a42dff4520c0f3dad83eab70460eba2239a1c5f" translate="yes" xml:space="preserve">
          <source>Ecto.ConstraintError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">Ecto.ConstraintError &lt;small&gt;异常&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="15dd79c790b1073f4f86a8ad069050bdc650ecfa" translate="yes" xml:space="preserve">
          <source>Ecto.Enum</source>
          <target state="translated">Ecto.Enum</target>
        </trans-unit>
        <trans-unit id="9ce1aee0af48a2f8651b751987fa8bc0f4e35a20" translate="yes" xml:space="preserve">
          <source>Ecto.InvalidChangesetError</source>
          <target state="translated">Ecto.InvalidChangesetError</target>
        </trans-unit>
        <trans-unit id="ce67b142a1bb80cf9c2a2867d44ea6a8c3578c02" translate="yes" xml:space="preserve">
          <source>Ecto.InvalidChangesetError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">Ecto.InvalidChangesetError &lt;small&gt;异常&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="c5d1477ae3fb400821f1242b9bb3dc4a61c20190" translate="yes" xml:space="preserve">
          <source>Ecto.InvalidURLError</source>
          <target state="translated">Ecto.InvalidURLError</target>
        </trans-unit>
        <trans-unit id="4f08c43270c41104629098a7c2219b5dc40b37cf" translate="yes" xml:space="preserve">
          <source>Ecto.InvalidURLError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">Ecto.InvalidURLError &lt;small&gt;异常&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="70da37d2af0a5953603574326abc9ac655050e10" translate="yes" xml:space="preserve">
          <source>Ecto.LogEntry</source>
          <target state="translated">Ecto.LogEntry</target>
        </trans-unit>
        <trans-unit id="35c9fc73d2d00ac9bcf8cdabe8534e91ab794279" translate="yes" xml:space="preserve">
          <source>Ecto.MigrationError</source>
          <target state="translated">Ecto.MigrationError</target>
        </trans-unit>
        <trans-unit id="a9ceb2554ab2c7eeb30e6a3c180ef6e2b319e425" translate="yes" xml:space="preserve">
          <source>Ecto.MigrationError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">Ecto.MigrationError &lt;small&gt;异常&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="e4ca20044e173c84dd6302ce5e5cf9074c593be6" translate="yes" xml:space="preserve">
          <source>Ecto.Multi</source>
          <target state="translated">Ecto.Multi</target>
        </trans-unit>
        <trans-unit id="9907ae967fed0c4dc1e86c3721c118b3891d1fea" translate="yes" xml:space="preserve">
          <source>Ecto.MultiplePrimaryKeyError</source>
          <target state="translated">Ecto.MultiplePrimaryKeyError</target>
        </trans-unit>
        <trans-unit id="c1f9b9fe432a00f35560ba356a40f39920f1f051" translate="yes" xml:space="preserve">
          <source>Ecto.MultiplePrimaryKeyError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">Ecto.MultiplePrimaryKeyError &lt;small&gt;异常&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="24182395079f3e39b19794e38a815c33b9b1dfef" translate="yes" xml:space="preserve">
          <source>Ecto.MultipleResultsError</source>
          <target state="translated">Ecto.MultipleResultsError</target>
        </trans-unit>
        <trans-unit id="7a94e3e2049d8814ddba5b9ced7f31db2e7e29c7" translate="yes" xml:space="preserve">
          <source>Ecto.MultipleResultsError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">Ecto.MultipleResultsError &lt;small&gt;异常&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="b4b837c1b562905d62ed1b14e00149c2ac6f6807" translate="yes" xml:space="preserve">
          <source>Ecto.NoPrimaryKeyFieldError</source>
          <target state="translated">Ecto.NoPrimaryKeyFieldError</target>
        </trans-unit>
        <trans-unit id="d7ea505a6cd593eabd8c281c2d19d2e9112b9283" translate="yes" xml:space="preserve">
          <source>Ecto.NoPrimaryKeyFieldError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">Ecto.NoPrimaryKeyFieldError &lt;small&gt;异常&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="5a80b5c4c8ef26db11186fd6e9a5e8f2d97f9f5b" translate="yes" xml:space="preserve">
          <source>Ecto.NoPrimaryKeyValueError</source>
          <target state="translated">Ecto.NoPrimaryKeyValueError</target>
        </trans-unit>
        <trans-unit id="0338e60f705ec07827b6de702273e130cc6ecba3" translate="yes" xml:space="preserve">
          <source>Ecto.NoPrimaryKeyValueError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">Ecto.NoPrimaryKeyValueError &lt;small&gt;异常&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="67d9f373ca10f601f6578faac7affe911846f2c7" translate="yes" xml:space="preserve">
          <source>Ecto.NoResultsError</source>
          <target state="translated">Ecto.NoResultsError</target>
        </trans-unit>
        <trans-unit id="3b3df04e61c31360e8b11f8666b9fe1d610f05b1" translate="yes" xml:space="preserve">
          <source>Ecto.NoResultsError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">Ecto.NoResultsError &lt;small&gt;异常&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="f2d1ad11b52c91d3aa2182b2b9d4baac748baa68" translate="yes" xml:space="preserve">
          <source>Ecto.ParameterizedType &lt;small&gt;behaviour&lt;/small&gt;</source>
          <target state="translated">Ecto.ParameterizedType&lt;small&gt;行为&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="9c2609bbb3bacd4e67c3f9412afeeeadf7ac8e15" translate="yes" xml:space="preserve">
          <source>Ecto.Query</source>
          <target state="translated">Ecto.Query</target>
        </trans-unit>
        <trans-unit id="c13b3224c69630c615aec89551d2087bc042356a" translate="yes" xml:space="preserve">
          <source>Ecto.Query metadata fields (stored in cache)</source>
          <target state="translated">Ecto.查询元数据字段(存储在缓存中)</target>
        </trans-unit>
        <trans-unit id="541f8c403ffae2f4def036ce1baec276f67f4d63" translate="yes" xml:space="preserve">
          <source>Ecto.Query.API</source>
          <target state="translated">Ecto.Query.API</target>
        </trans-unit>
        <trans-unit id="3bbd7e221f68e1527e309cad7aba8114992aab8d" translate="yes" xml:space="preserve">
          <source>Ecto.Query.CastError</source>
          <target state="translated">Ecto.Query.CastError</target>
        </trans-unit>
        <trans-unit id="60b00c79bb2a8de43e5fae787ea603d53a3c8a03" translate="yes" xml:space="preserve">
          <source>Ecto.Query.CastError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">Ecto.Query.CastError &lt;small&gt;异常&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="322683d4c482d9d4887697a585690a94b1c37b60" translate="yes" xml:space="preserve">
          <source>Ecto.Query.CompileError</source>
          <target state="translated">Ecto.Query.CompileError</target>
        </trans-unit>
        <trans-unit id="f6bb3386062941386362beaf0414a6747bab26f7" translate="yes" xml:space="preserve">
          <source>Ecto.Query.CompileError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">Ecto.Query.CompileError &lt;small&gt;异常&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="7dafa0a51a47382e1e63f70ed8f204dca6da2b81" translate="yes" xml:space="preserve">
          <source>Ecto.Query.WindowAPI</source>
          <target state="translated">Ecto.Query.WindowAPI</target>
        </trans-unit>
        <trans-unit id="bc2486ab3f1e159284df09db70205a20ecc2201b" translate="yes" xml:space="preserve">
          <source>Ecto.QueryError</source>
          <target state="translated">Ecto.QueryError</target>
        </trans-unit>
        <trans-unit id="4c241d42a8511f3b16e8e651c93c41a6e57fd732" translate="yes" xml:space="preserve">
          <source>Ecto.QueryError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">Ecto.QueryError &lt;small&gt;异常&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="8bd6a5e6bbbba374ec54882523a3dd6aa01f6bf0" translate="yes" xml:space="preserve">
          <source>Ecto.Queryable</source>
          <target state="translated">Ecto.Queryable</target>
        </trans-unit>
        <trans-unit id="5f5fb9bbe4d236231c4e0c9a1f430c532e1b61df" translate="yes" xml:space="preserve">
          <source>Ecto.Queryable &lt;small&gt;protocol&lt;/small&gt;</source>
          <target state="translated">可查询&lt;small&gt;协议&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="23d0b05d82025970e8643b6c2b44b5c9cc5422bf" translate="yes" xml:space="preserve">
          <source>Ecto.Queryable.t (0)</source>
          <target state="translated">Ecto.Queryable.t (0)</target>
        </trans-unit>
        <trans-unit id="2c66da9b2fb68c8d72ed4f1fdd408f25acf7b28f" translate="yes" xml:space="preserve">
          <source>Ecto.Queryable.to_query (1)</source>
          <target state="translated">Ecto.Queryable.to_query (1)</target>
        </trans-unit>
        <trans-unit id="b2b785210b6db93332cdd4d8ac8b14e9a6c8f2ec" translate="yes" xml:space="preserve">
          <source>Ecto.Repo</source>
          <target state="translated">Ecto.Repo</target>
        </trans-unit>
        <trans-unit id="abe003d38251fd11493b7aebc84a41065c8194a8" translate="yes" xml:space="preserve">
          <source>Ecto.Repo &lt;small&gt;behaviour&lt;/small&gt;</source>
          <target state="translated">Ecto.Repo &lt;small&gt;行为&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="1c38674c5108afb7eaab34bd7a717b13c34f6ea4" translate="yes" xml:space="preserve">
          <source>Ecto.Schema</source>
          <target state="translated">Ecto.Schema</target>
        </trans-unit>
        <trans-unit id="7213ca12b7254752de375b48ed69b6ac5c7591bd" translate="yes" xml:space="preserve">
          <source>Ecto.Schema metadata fields</source>
          <target state="translated">Ecto.Schema元数据字段</target>
        </trans-unit>
        <trans-unit id="9a7f68db592f84a9943fcb5b898c5e74891071ee" translate="yes" xml:space="preserve">
          <source>Ecto.Schema.Metadata</source>
          <target state="translated">Ecto.Schema.Metadata</target>
        </trans-unit>
        <trans-unit id="5755ba5b43e2e121bb26c6314858c4dc73dcc16c" translate="yes" xml:space="preserve">
          <source>Ecto.StaleEntryError</source>
          <target state="translated">Ecto.StaleEntryError</target>
        </trans-unit>
        <trans-unit id="d751e1a6e5e77ee622ddb5ffa9aab3299c04d4ac" translate="yes" xml:space="preserve">
          <source>Ecto.StaleEntryError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">Ecto.StaleEntryError &lt;small&gt;异常&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="ee0b6d1251bf780cf3082c668fa6afbd815e531c" translate="yes" xml:space="preserve">
          <source>Ecto.SubQuery</source>
          <target state="translated">Ecto.SubQuery</target>
        </trans-unit>
        <trans-unit id="5c5767f0467eff752742c91059c0f52a0d6da85b" translate="yes" xml:space="preserve">
          <source>Ecto.SubQueryError</source>
          <target state="translated">Ecto.SubQueryError</target>
        </trans-unit>
        <trans-unit id="af82c0bc574ed28a1bae0825f4ff83faf8642aa4" translate="yes" xml:space="preserve">
          <source>Ecto.SubQueryError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">Ecto.SubQueryError &lt;small&gt;异常&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="bb89049cf6c1b37baa9267def3cd2d5e6e580a10" translate="yes" xml:space="preserve">
          <source>Ecto.Type</source>
          <target state="translated">Ecto.Type</target>
        </trans-unit>
        <trans-unit id="fd40802d5250133cf255ced53966159d4b5335d7" translate="yes" xml:space="preserve">
          <source>Ecto.Type &lt;small&gt;behaviour&lt;/small&gt;</source>
          <target state="translated">Ecto.Type &lt;small&gt;行为&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="7e1d464328ab2db0790a29e4a5a61c2b51b36dc9" translate="yes" xml:space="preserve">
          <source>Ecto.UUID</source>
          <target state="translated">Ecto.UUID</target>
        </trans-unit>
        <trans-unit id="c056be8aab94fcb1ffce2c4acd9f91211f770257" translate="yes" xml:space="preserve">
          <source>Edit the &lt;code&gt;index&lt;/code&gt; action of the &lt;code&gt;PageController&lt;/code&gt; module &lt;code&gt;lib/hello_web/controllers/page_controller.ex&lt;/code&gt; to look like this.</source>
          <target state="translated">编辑 &lt;code&gt;PageController&lt;/code&gt; 模块 &lt;code&gt;lib/hello_web/controllers/page_controller.ex&lt;/code&gt; 的 &lt;code&gt;index&lt;/code&gt; 操作，如下所示。</target>
        </trans-unit>
        <trans-unit id="df2b3ee4bfa707fe0f750730a7b1a6f4a93c4959" translate="yes" xml:space="preserve">
          <source>Edit the &lt;code&gt;index&lt;/code&gt; action of the &lt;code&gt;PageController&lt;/code&gt; module &lt;code&gt;lib/hello_web/controllers/page_controller.ex&lt;/code&gt; to look like this:</source>
          <target state="translated">编辑 &lt;code&gt;PageController&lt;/code&gt; 模块 &lt;code&gt;lib/hello_web/controllers/page_controller.ex&lt;/code&gt; 的 &lt;code&gt;index&lt;/code&gt; 操作，如下所示：</target>
        </trans-unit>
        <trans-unit id="24d2c6ee0d223c25a12683979befa7a65fe24c29" translate="yes" xml:space="preserve">
          <source>Editor's note: The secure transport protocol used by HTTPS is nowadays referred to as TLS. However, the application in the Erlang/OTP standard library that implements it is called &lt;code&gt;:ssl&lt;/code&gt;, for historical reasons. In this document we will refer to the protocol as 'TLS' and to the Erlang/OTP implementation as &lt;code&gt;:ssl&lt;/code&gt;, and its configuration parameters as &lt;code&gt;:ssl&lt;/code&gt; options.</source>
          <target state="translated">编者注：HTTPS使用的安全传输协议如今称为TLS。但是，出于历史原因，实现它的Erlang / OTP标准库中的应用程序称为 &lt;code&gt;:ssl&lt;/code&gt; 。在本文档中，我们将协议称为&amp;ldquo; TLS&amp;rdquo;，将Erlang / OTP实现称为 &lt;code&gt;:ssl&lt;/code&gt; ，并将其配置参数称为 &lt;code&gt;:ssl&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="d62ae5f7d8336b6f25bf7adf6c0d96bc0d469ed1" translate="yes" xml:space="preserve">
          <source>Elixir 1.6 or later</source>
          <target state="translated">Elixir 1.6或更高版本</target>
        </trans-unit>
        <trans-unit id="48a392d4dd03f72886070df034eefe1945afb9a6" translate="yes" xml:space="preserve">
          <source>Elixir code compiles to Erlang byte code to run on the Erlang virtual machine. Without Erlang, Elixir code has no virtual machine to run on, so we need to install Erlang as well.</source>
          <target state="translated">Elixir代码编译成Erlang字节码,在Erlang虚拟机上运行。如果没有Erlang,Elixir代码就没有虚拟机可以运行,所以我们也需要安装Erlang。</target>
        </trans-unit>
        <trans-unit id="89da4ae8705734d089eebf908c9384226bc5e8ac" translate="yes" xml:space="preserve">
          <source>Elixir developers tend to write assertive code. This means that, if we expect &lt;code&gt;leave&lt;/code&gt; to always return true, we can explicitly match on its result, as we did above:</source>
          <target state="translated">Elixir开发人员倾向于编写断言代码。这意味着，如果我们希望 &lt;code&gt;leave&lt;/code&gt; 始终返回true，则可以像上面所做的那样显式地匹配其结果：</target>
        </trans-unit>
        <trans-unit id="026c6b92fad7460b172761c6bdef80e0cc65a934" translate="yes" xml:space="preserve">
          <source>Elixir provides a macro called &lt;code&gt;defexception&lt;/code&gt; for defining custom exceptions. Exceptions are represented as structs, and structs need to be defined inside of modules.</source>
          <target state="translated">Elixir提供了一个称为 &lt;code&gt;defexception&lt;/code&gt; 的宏，用于定义自定义异常。异常表示为结构，并且需要在模块内部定义结构。</target>
        </trans-unit>
        <trans-unit id="6bddcb552c6a1068cf1e007274938eab003f3107" translate="yes" xml:space="preserve">
          <source>Elixir type</source>
          <target state="translated">酏剂类型</target>
        </trans-unit>
        <trans-unit id="2f0de64ee8f6d9722cf5b6928af715bb95ebc664" translate="yes" xml:space="preserve">
          <source>Embedded schemas are defined similarly to source-based schemas. For example, you can use an embedded schema to represent your UI, mapping and validating its inputs, and then you convert such embedded schema to other schemas that are persisted to the database:</source>
          <target state="translated">嵌入式模式的定义与基于源的模式类似。例如,你可以使用一个嵌入式模式来表示你的UI,映射和验证它的输入,然后你将这种嵌入式模式转换为其他模式,并持久化到数据库中。</target>
        </trans-unit>
        <trans-unit id="d321b43810ec712e82ac71b26aa2669c35cc9ab5" translate="yes" xml:space="preserve">
          <source>Embedded schemas by default set the primary key type to &lt;code&gt;:binary_id&lt;/code&gt; but such can be configured with the &lt;code&gt;@primary_key&lt;/code&gt; attribute.</source>
          <target state="translated">默认情况下，嵌入式模式将主键类型设置为 &lt;code&gt;:binary_id&lt;/code&gt; ,但可以使用 &lt;code&gt;@primary_key&lt;/code&gt; 属性进行配置。</target>
        </trans-unit>
        <trans-unit id="a74c4dff63d6eb182129f486224163ded7dd1010" translate="yes" xml:space="preserve">
          <source>Embeds</source>
          <target state="translated">Embeds</target>
        </trans-unit>
        <trans-unit id="15ec2a27c2b613ef9d1246405878528dbe70f066" translate="yes" xml:space="preserve">
          <source>Empty values</source>
          <target state="translated">空值</target>
        </trans-unit>
        <trans-unit id="e12c4bc51c7f80baf2d58cd60b0b72befe9d7fc3" translate="yes" xml:space="preserve">
          <source>Emulates the client closing the channel</source>
          <target state="translated">模拟客户端关闭通道</target>
        </trans-unit>
        <trans-unit id="0a0d1d460ed7ae24bb26447eb441939d7594f965" translate="yes" xml:space="preserve">
          <source>Emulates the client closing the channel.</source>
          <target state="translated">模拟客户关闭通道。</target>
        </trans-unit>
        <trans-unit id="556d7fd9dce7e339a9e21896427d0e9df9216df4" translate="yes" xml:space="preserve">
          <source>Emulates the client closing the socket.</source>
          <target state="translated">模拟客户端关闭套接字。</target>
        </trans-unit>
        <trans-unit id="ed1383e73a934ae5dd38c4adeabafed7e4cdc135" translate="yes" xml:space="preserve">
          <source>Emulates the client leaving the channel</source>
          <target state="translated">模拟客户离开通道</target>
        </trans-unit>
        <trans-unit id="17db6b3bc54f57ff281b3281cff48c1f91f0d117" translate="yes" xml:space="preserve">
          <source>Emulates the client leaving the channel.</source>
          <target state="translated">模拟客户离开通道。</target>
        </trans-unit>
        <trans-unit id="4833d68fa15ee9411ff3f9f19c84f736625b93d0" translate="yes" xml:space="preserve">
          <source>Enables CSRF protection</source>
          <target state="translated">启用CSRF保护。</target>
        </trans-unit>
        <trans-unit id="840448d9ff6144dc12b1d62bf7566dd85976712b" translate="yes" xml:space="preserve">
          <source>Enables CSRF protection.</source>
          <target state="translated">启用CSRF保护。</target>
        </trans-unit>
        <trans-unit id="36f7f260eacff8ce7935340ac25cfe6dfe22d818" translate="yes" xml:space="preserve">
          <source>Enables or disables recursive mode for CTEs.</source>
          <target state="translated">启用或禁用CTE的递归模式。</target>
        </trans-unit>
        <trans-unit id="f8799496bdebb6c82bf62ad19b164afe03dd7054" translate="yes" xml:space="preserve">
          <source>Encodes &lt;a href=&quot;phoenix.socket.message&quot;&gt;&lt;code&gt;Phoenix.Socket.Message&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;phoenix.socket.reply&quot;&gt;&lt;code&gt;Phoenix.Socket.Reply&lt;/code&gt;&lt;/a&gt; structs to push format.</source>
          <target state="translated">对&lt;a href=&quot;phoenix.socket.message&quot;&gt; &lt;code&gt;Phoenix.Socket.Message&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;phoenix.socket.reply&quot;&gt; &lt;code&gt;Phoenix.Socket.Reply&lt;/code&gt; &lt;/a&gt;结构进行编码以推送格式。</target>
        </trans-unit>
        <trans-unit id="4439d359c8275177c11416f7d623055571b3b559" translate="yes" xml:space="preserve">
          <source>Encodes &lt;a href=&quot;phoenix.socket.message&quot;&gt;&lt;code&gt;Phoenix.Socket.Message&lt;/code&gt;&lt;/a&gt; struct to transport representation</source>
          <target state="translated">编码&lt;a href=&quot;phoenix.socket.message&quot;&gt; &lt;code&gt;Phoenix.Socket.Message&lt;/code&gt; &lt;/a&gt;结构以传输表示形式</target>
        </trans-unit>
        <trans-unit id="de8975568caf53f64c1b972bddcfaff03aef75ee" translate="yes" xml:space="preserve">
          <source>Encodes a &lt;a href=&quot;phoenix.socket.broadcast&quot;&gt;&lt;code&gt;Phoenix.Socket.Broadcast&lt;/code&gt;&lt;/a&gt; struct to fastlane format.</source>
          <target state="translated">将&lt;a href=&quot;phoenix.socket.broadcast&quot;&gt; &lt;code&gt;Phoenix.Socket.Broadcast&lt;/code&gt; &lt;/a&gt;结构编码为fastlane格式。</target>
        </trans-unit>
        <trans-unit id="0656ea21559636a3ee2df0a652e60ed7a5acf9cf" translate="yes" xml:space="preserve">
          <source>Encodes a basic authentication header.</source>
          <target state="translated">编码一个基本的认证头。</target>
        </trans-unit>
        <trans-unit id="33640f5ec22b24bf0f0de171e9a5b8b2a0b764cc" translate="yes" xml:space="preserve">
          <source>Encodes and signs data into a token you can send to clients.</source>
          <target state="translated">将数据编码并签署成一个你可以发送给客户的令牌。</target>
        </trans-unit>
        <trans-unit id="4136cdced053cd2d3ad4a24cfaebe880c4880600" translate="yes" xml:space="preserve">
          <source>Encodes data and signs it resulting in a token you can send to clients</source>
          <target state="translated">对数据进行编码和签名,从而得到一个可以发送给客户的令牌。</target>
        </trans-unit>
        <trans-unit id="5bd32fbf8fb4988c6f06bf34be67709564d0ac19" translate="yes" xml:space="preserve">
          <source>Encodes data and signs it resulting in a token you can send to clients.</source>
          <target state="translated">对数据进行编码,并对其进行签名,从而产生一个您可以发送给客户的令牌。</target>
        </trans-unit>
        <trans-unit id="fc00694b284fbf0ca6ed4b59333c21bf7da11346" translate="yes" xml:space="preserve">
          <source>Encodes the HTML templates to iodata</source>
          <target state="translated">将HTML模板编码为iodata。</target>
        </trans-unit>
        <trans-unit id="bfb6909ba137b13bf90db64457d8678c524bc153" translate="yes" xml:space="preserve">
          <source>Encodes the HTML templates to iodata.</source>
          <target state="translated">将HTML模板编码为iodata。</target>
        </trans-unit>
        <trans-unit id="bfa7ce5698a8c9a272f9b42da04c2bba3f9d1ada" translate="yes" xml:space="preserve">
          <source>Encodes the given cookies as expected in a response header</source>
          <target state="translated">将给定的cookie按照预期的方式编码到响应头中。</target>
        </trans-unit>
        <trans-unit id="f48a0503bd24012813e0aede68caa5bd3d5aa5e1" translate="yes" xml:space="preserve">
          <source>Encodes the given cookies as expected in a response header.</source>
          <target state="translated">将给定的cookie按预期在响应头中进行编码。</target>
        </trans-unit>
        <trans-unit id="cb350517064b72d7a25e5f65ef89d41643ca3680" translate="yes" xml:space="preserve">
          <source>Encodes the given map or list of tuples</source>
          <target state="translated">对给定的地图或元组列表进行编码。</target>
        </trans-unit>
        <trans-unit id="c1ab5b445561e7ceefe285404758fbc9608784a0" translate="yes" xml:space="preserve">
          <source>Encodes the given map or list of tuples.</source>
          <target state="translated">对给定的地图或图元组列表进行编码。</target>
        </trans-unit>
        <trans-unit id="96e127ce8d6455e372c5fd56ea665af369ae1ea3" translate="yes" xml:space="preserve">
          <source>Encodes, encrypts, and signs data into a token you can send to clients.</source>
          <target state="translated">对数据进行编码、加密和签名,使其成为你可以发送给客户的令牌。</target>
        </trans-unit>
        <trans-unit id="21b846476300f853d85d13d5947f9d2d00aa2516" translate="yes" xml:space="preserve">
          <source>Encoding and decoding</source>
          <target state="translated">编码和解码</target>
        </trans-unit>
        <trans-unit id="a020f6241ab7166f95774e91599ed46cf2bafaa1" translate="yes" xml:space="preserve">
          <source>Encoding keyword lists preserves the order of the fields:</source>
          <target state="translated">对关键字列表进行编码,可以保留字段的顺序。</target>
        </trans-unit>
        <trans-unit id="7a2e6e7d7f545bf8d74f9cf21ea1d5f909b9251c" translate="yes" xml:space="preserve">
          <source>Encoding named lists:</source>
          <target state="translated">对命名列表进行编码。</target>
        </trans-unit>
        <trans-unit id="506c5c945e0ce764f280c5d79fc55cd83adbe7a0" translate="yes" xml:space="preserve">
          <source>Encoding nested structures:</source>
          <target state="translated">对嵌套结构进行编码。</target>
        </trans-unit>
        <trans-unit id="e39e65881d4977227aa7c0bf1f34afafa18ef093" translate="yes" xml:space="preserve">
          <source>Encrypted Keys</source>
          <target state="translated">加密钥匙</target>
        </trans-unit>
        <trans-unit id="ec278d1a15f13618c39a6bd06f27ddc94e905d46" translate="yes" xml:space="preserve">
          <source>Endpoint API</source>
          <target state="translated">端点API</target>
        </trans-unit>
        <trans-unit id="bf921ae468046a48c903c965f5551969f48378ce" translate="yes" xml:space="preserve">
          <source>Endpoint configuration</source>
          <target state="translated">端点配置</target>
        </trans-unit>
        <trans-unit id="ee8e5c078cab8ccf1fa5878d9e0a129082bd3e77" translate="yes" xml:space="preserve">
          <source>Endpoint configuration is split into two categories. Compile-time configuration means the configuration is read during compilation and changing it at runtime has no effect. The compile-time configuration is mostly related to error handling and instrumentation.</source>
          <target state="translated">端点配置分为两类。编译时配置是指在编译时读取配置,在运行时更改配置没有影响。编译时的配置主要与错误处理和仪表有关。</target>
        </trans-unit>
        <trans-unit id="e59e51cf292e385731745bc10fe86792b75ae2e2" translate="yes" xml:space="preserve">
          <source>Endpoint configuration is split into two categories. Compile-time configuration means the configuration is read during compilation and changing it at runtime has no effect. The compile-time configuration is mostly related to error handling.</source>
          <target state="translated">端点配置分为两类。编译时配置是指在编译时读取配置,在运行时更改配置没有影响。编译时的配置主要与错误处理有关。</target>
        </trans-unit>
        <trans-unit id="f9103b209ad4262626a56b31bf69751829e6c4da" translate="yes" xml:space="preserve">
          <source>Endpoint plugs</source>
          <target state="translated">端点插头</target>
        </trans-unit>
        <trans-unit id="86c04bf06c2268868838496ad24090854ec6e5c4" translate="yes" xml:space="preserve">
          <source>Endpoint testing</source>
          <target state="translated">端点测试</target>
        </trans-unit>
        <trans-unit id="b71c52711a24936e87649f5f6c786f704fc55482" translate="yes" xml:space="preserve">
          <source>Endpoints</source>
          <target state="translated">Endpoints</target>
        </trans-unit>
        <trans-unit id="48909b7ad855199bfe59cea5c9a40d133ce3f9b8" translate="yes" xml:space="preserve">
          <source>Endpoints must be explicitly started as part of your application supervision tree. Endpoints are added by default to the supervision tree in generated applications. Endpoints can be added to the supervision tree as follows:</source>
          <target state="translated">端点必须作为应用程序监督树的一部分被明确启动。默认情况下,端点会被添加到生成的应用程序的监督树中。端点可以按以下方式添加到监督树中。</target>
        </trans-unit>
        <trans-unit id="5c89cf1414c123163db3e4ada4ca9be796ba6f04" translate="yes" xml:space="preserve">
          <source>Endpoints organize all the plugs common to every request, and apply them before dispatching into the router with its custom pipelines. We added a plug to the endpoint like this:</source>
          <target state="translated">端点组织了每个请求所共有的所有插件,并在派遣到路由器与其自定义管道之前应用它们。我们在端点中添加了这样一个插件。</target>
        </trans-unit>
        <trans-unit id="83aa16682d0c2ba817fe74261af7a04ddcc5cc37" translate="yes" xml:space="preserve">
          <source>Enforce UTF-8</source>
          <target state="translated">执行UTF-8</target>
        </trans-unit>
        <trans-unit id="c1849eb0be9af6564e6d0e3b62d673d25b59cf17" translate="yes" xml:space="preserve">
          <source>Engines must implement the &lt;code&gt;compile/2&lt;/code&gt; function, that receives the template file and the template name and outputs the template quoted expression:</source>
          <target state="translated">引擎必须实现 &lt;code&gt;compile/2&lt;/code&gt; 函数，该函数接收模板文件和模板名称并输出模板引用的表达式：</target>
        </trans-unit>
        <trans-unit id="196d7b3309d1e5eb9850884afec4c4bae3450d0c" translate="yes" xml:space="preserve">
          <source>Ensure all applications necessary to run the adapter are started</source>
          <target state="translated">确保运行适配器所需的所有应用程序都已启动。</target>
        </trans-unit>
        <trans-unit id="97c96b97adefd31804b306b76be9c18601ec510f" translate="yes" xml:space="preserve">
          <source>Ensure all applications necessary to run the adapter are started.</source>
          <target state="translated">确保运行适配器所需的所有应用程序被启动。</target>
        </trans-unit>
        <trans-unit id="6880556f20877e4f8a52af36bc2d3b199805feb2" translate="yes" xml:space="preserve">
          <source>Ensures the connection is recycled if it wasn&amp;rsquo;t already</source>
          <target state="translated">如果尚未建立连接，请确保该连接被回收</target>
        </trans-unit>
        <trans-unit id="0e60a03980aee027fe1691a01cc5bb11c0cbee85" translate="yes" xml:space="preserve">
          <source>Ensures the connection is recycled if it wasn&amp;rsquo;t already.</source>
          <target state="translated">如果尚未建立连接，请确保该连接被回收。</target>
        </trans-unit>
        <trans-unit id="11fb9b2b2a3e23b06b060112d12641a59b79933d" translate="yes" xml:space="preserve">
          <source>Ensures the connection is recycled if it wasn't already.</source>
          <target state="translated">确保连接被回收,如果它还没有被回收。</target>
        </trans-unit>
        <trans-unit id="7f320b643659b7061b5946fbb621cc2591e2c14e" translate="yes" xml:space="preserve">
          <source>Ensures the given module is an Ecto.Repo</source>
          <target state="translated">确保给定模块是Ecto.Repo。</target>
        </trans-unit>
        <trans-unit id="6c59a3a6076875ecee6278d9f31718bdc8f04fc7" translate="yes" xml:space="preserve">
          <source>Ensures the given module is an Ecto.Repo.</source>
          <target state="translated">确保给定的模块是Ecto.Repo.Repo.RPO.Ltd.的。</target>
        </trans-unit>
        <trans-unit id="2ad5a4781c158db980d641100598f0a814961f62" translate="yes" xml:space="preserve">
          <source>Equivalent to multiple &lt;a href=&quot;#put_private/3&quot;&gt;&lt;code&gt;put_private/3&lt;/code&gt;&lt;/a&gt; calls.</source>
          <target state="translated">等效于多个&lt;a href=&quot;#put_private/3&quot;&gt; &lt;code&gt;put_private/3&lt;/code&gt; &lt;/a&gt;调用。</target>
        </trans-unit>
        <trans-unit id="665844873eba6677ffd80e2288163b49c7de89ff" translate="yes" xml:space="preserve">
          <source>Equivalent to multiple calls to &lt;a href=&quot;#assign/3&quot;&gt;&lt;code&gt;assign/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">等效于多次调用&lt;a href=&quot;#assign/3&quot;&gt; &lt;code&gt;assign/3&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d371f28bfea1e852f448381bb4f0bdfccaa7149e" translate="yes" xml:space="preserve">
          <source>Equivalent to:</source>
          <target state="translated">相当于:</target>
        </trans-unit>
        <trans-unit id="9ab4301ae8f07d25a150a12958e525ce0e1ef8f9" translate="yes" xml:space="preserve">
          <source>Erlang 20 or later</source>
          <target state="translated">Erlang 20或以后</target>
        </trans-unit>
        <trans-unit id="836dcbdc17cb5c2729dc6c2705c7fbc99072ecc4" translate="yes" xml:space="preserve">
          <source>Error and exception handling</source>
          <target state="translated">错误和异常处理</target>
        </trans-unit>
        <trans-unit id="73631d7f0356fdbdeaa36f8e5dbad89c6aa15dc4" translate="yes" xml:space="preserve">
          <source>Error handling</source>
          <target state="translated">错误处理</target>
        </trans-unit>
        <trans-unit id="40e1851b3b8efb947753dcaeb2301a6cd175949c" translate="yes" xml:space="preserve">
          <source>Error pages</source>
          <target state="translated">错误页面</target>
        </trans-unit>
        <trans-unit id="96b4673ef94aee0279f00bdec8bef7af091ed539" translate="yes" xml:space="preserve">
          <source>Error raised when CSRF token is invalid.</source>
          <target state="translated">当CSRF标记无效时产生错误。</target>
        </trans-unit>
        <trans-unit id="cd4dd7806db221ae8f85315297f1933628bac6af" translate="yes" xml:space="preserve">
          <source>Error raised when no response is sent in a request</source>
          <target state="translated">当请求中没有发送响应时出现错误。</target>
        </trans-unit>
        <trans-unit id="80aac7a600595cc614c5a8707716e2680a856d60" translate="yes" xml:space="preserve">
          <source>Error raised when non-XHR requests are used for Javascript responses.</source>
          <target state="translated">当Javascript响应使用非XHR请求时发生错误。</target>
        </trans-unit>
        <trans-unit id="4fd4c12633060915842a7adbf471e8f2c4de38a5" translate="yes" xml:space="preserve">
          <source>Error raised when the cookie exceeds the maximum size of 4096 bytes.</source>
          <target state="translated">当cookie超过4096字节的最大大小时,出现错误。</target>
        </trans-unit>
        <trans-unit id="d0075b7b1699d63ab98e1352564607df567a7b11" translate="yes" xml:space="preserve">
          <source>Error raised when the request body cannot be parsed.</source>
          <target state="translated">当请求体无法解析时产生错误。</target>
        </trans-unit>
        <trans-unit id="c83423323bd0f9e7dca7dc133f2e9d8c07a67c72" translate="yes" xml:space="preserve">
          <source>Error raised when the request body is malformed.</source>
          <target state="translated">当请求体格式不正确时,发生错误。</target>
        </trans-unit>
        <trans-unit id="355600e5fa5b646a0b7fd10a605ecbb4bd27c88c" translate="yes" xml:space="preserve">
          <source>Error raised when the request is too large.</source>
          <target state="translated">当请求量过大时产生错误。</target>
        </trans-unit>
        <trans-unit id="6e12f9a35ca688371e35697f765ed55461d289eb" translate="yes" xml:space="preserve">
          <source>Error raised when trying to modify or send an already sent response</source>
          <target state="translated">当试图修改或发送已发送的响应时出现错误。</target>
        </trans-unit>
        <trans-unit id="296513012a971b48d8b833aad634bbe05b65f96e" translate="yes" xml:space="preserve">
          <source>Error raised when trying to send a header that has errors, for example:</source>
          <target state="translated">例如,当试图发送一个有错误的头时引发的错误。</target>
        </trans-unit>
        <trans-unit id="1fb1c6eeb587a027f982759e60a4eb8840df9ee8" translate="yes" xml:space="preserve">
          <source>Escapes HTML content to be inserted a JavaScript string.</source>
          <target state="translated">逃逸HTML内容,插入一个JavaScript字符串。</target>
        </trans-unit>
        <trans-unit id="dc34dec098a3cabb258f8143fef111fe3392d935" translate="yes" xml:space="preserve">
          <source>Escapes the HTML entities in the given term, returning iodata.</source>
          <target state="translated">转移给定术语中的HTML实体,返回iodata。</target>
        </trans-unit>
        <trans-unit id="777544a1e5e3a2890c9d11e0670e4f90afe4ee49" translate="yes" xml:space="preserve">
          <source>Escapes the given HTML to iodata</source>
          <target state="translated">将给定的HTML逃逸到iodata中</target>
        </trans-unit>
        <trans-unit id="55a6457b3b6b83f90cbc23a5b6f6ef249a6e461d" translate="yes" xml:space="preserve">
          <source>Escapes the given HTML to iodata.</source>
          <target state="translated">将给定的HTML逃逸到iodata中。</target>
        </trans-unit>
        <trans-unit id="d428b221d3f388b6985a15759340115a82a01a85" translate="yes" xml:space="preserve">
          <source>Escapes the given HTML to string</source>
          <target state="translated">将给定的HTML转为字符串</target>
        </trans-unit>
        <trans-unit id="9aae0e2d943bc79363acc16d6ad4f9539adf131a" translate="yes" xml:space="preserve">
          <source>Escapes the given HTML to string.</source>
          <target state="translated">将给定的HTML转为字符串。</target>
        </trans-unit>
        <trans-unit id="a43c02952028f58987da67d94d91c06959d88ae7" translate="yes" xml:space="preserve">
          <source>Establishing the socket connection</source>
          <target state="translated">建立插座连接</target>
        </trans-unit>
        <trans-unit id="8700cd4e26a53398fa836080d8b671414211c9bd" translate="yes" xml:space="preserve">
          <source>Evaluates to true if the provided subquery returns 1 or more rows.</source>
          <target state="translated">如果所提供的子查询返回1条或更多的记录,则评价为true。</target>
        </trans-unit>
        <trans-unit id="fdf79b8896d2f81e42819bef253ab78ee4c76232" translate="yes" xml:space="preserve">
          <source>Evaluates whether all values returned from the provided subquery match in a comparison operation.</source>
          <target state="translated">评价在比较操作中,从提供的子查询中返回的所有值是否匹配。</target>
        </trans-unit>
        <trans-unit id="818dc1bf0883b7b0cc6401f2614dc09f23ea8627" translate="yes" xml:space="preserve">
          <source>Even though 404 has been overridden, the &lt;code&gt;:not_found&lt;/code&gt; atom can still be used to set the status to 404 as well as the new atom &lt;code&gt;:actually_this_was_found&lt;/code&gt; inflected from the reason phrase &quot;Actually This Was Found&quot;.</source>
          <target state="translated">即使404已被覆盖，但 &lt;code&gt;:not_found&lt;/code&gt; 原子仍然可以用于将状态设置为404，新的原子 &lt;code&gt;:actually_this_was_found&lt;/code&gt; 也可以从原因短语&amp;ldquo; Actually This Is Founded&amp;rdquo;中得到体现。</target>
        </trans-unit>
        <trans-unit id="b0a62606f152b68877966f1c848b191cb7d5bb8c" translate="yes" xml:space="preserve">
          <source>Even though 404 has been overridden, the &lt;code&gt;:not_found&lt;/code&gt; atom can still be used to set the status to 404 as well as the new atom &lt;code&gt;:actually_this_was_found&lt;/code&gt; inflected from the reason phrase &amp;ldquo;Actually This Was Found&amp;rdquo;.</source>
          <target state="translated">即使404已被覆盖，但 &lt;code&gt;:not_found&lt;/code&gt; 原子仍然可以用于将状态设置为404，新的原子 &lt;code&gt;:actually_this_was_found&lt;/code&gt; 也可以从原因短语&amp;ldquo; Actually This Is Founded&amp;rdquo;中得到体现。</target>
        </trans-unit>
        <trans-unit id="074292ad9299496428c36249f30a1b739828e4f3" translate="yes" xml:space="preserve">
          <source>Events and updates pushed by server - such as notifications, dashboards, etc;</source>
          <target state="translated">由服务器推送的事件和更新--如通知、仪表盘等。</target>
        </trans-unit>
        <trans-unit id="d5ea65ec4b8c12689983e971d1e328837a8835e4" translate="yes" xml:space="preserve">
          <source>Events considerations</source>
          <target state="translated">活动考虑因素</target>
        </trans-unit>
        <trans-unit id="ab36676f1a0bc49dcaa9c690d2a0dbaa36bbae83" translate="yes" xml:space="preserve">
          <source>Every occurence of the &lt;code&gt;?&lt;/code&gt; character will be interpreted as a place for additional argument. If the literal character &lt;code&gt;?&lt;/code&gt; is required, it can be escaped with &lt;code&gt;\\?&lt;/code&gt; (one escape for strings, another for fragment).</source>
          <target state="translated">每次发生 &lt;code&gt;?&lt;/code&gt; 字符将被解释为附加参数的地方。如果是文字字符 &lt;code&gt;?&lt;/code&gt; 是必需的，可以使用 &lt;code&gt;\\?&lt;/code&gt; 进行转义吗？（一个用于字符串的转义，另一个用于片段的转义）。</target>
        </trans-unit>
        <trans-unit id="06148d94ade3c0c8e812063e3f93749008214d86" translate="yes" xml:space="preserve">
          <source>Every time &lt;a href=&quot;#pipe_through/1&quot;&gt;&lt;code&gt;pipe_through/1&lt;/code&gt;&lt;/a&gt; is called, the new pipelines are appended to the ones previously given.</source>
          <target state="translated">每次调用&lt;a href=&quot;#pipe_through/1&quot;&gt; &lt;code&gt;pipe_through/1&lt;/code&gt; 时&lt;/a&gt;，新管道都会附加到先前给定的管道上。</target>
        </trans-unit>
        <trans-unit id="cc375270d6fb2850d086f0d0640e1fd77b05a5b0" translate="yes" xml:space="preserve">
          <source>Every time a stateful component is rendered, both &lt;a href=&quot;#c:preload/1&quot;&gt;&lt;code&gt;preload/1&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#c:update/2&quot;&gt;&lt;code&gt;update/2&lt;/code&gt;&lt;/a&gt; are called. To understand why both callbacks are necessary, imagine that you implement a component and the component needs to load some state from the database. For example:</source>
          <target state="translated">每次呈现有状态组件时，都会调用&lt;a href=&quot;#c:preload/1&quot;&gt; &lt;code&gt;preload/1&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#c:update/2&quot;&gt; &lt;code&gt;update/2&lt;/code&gt; &lt;/a&gt;。要了解为什么两个回调都是必需的，请想象您实现了一个组件，并且该组件需要从数据库中加载某些状态。例如：</target>
        </trans-unit>
        <trans-unit id="fc3685f8a3ac8c0bf5bdecefe13889f6e26ac09c" translate="yes" xml:space="preserve">
          <source>Every time the &lt;code&gt;MyApp.Address.changeset/2&lt;/code&gt; function is invoked, it must return a changeset. Once the parent changeset is given to an &lt;a href=&quot;ecto.repo&quot;&gt;&lt;code&gt;Ecto.Repo&lt;/code&gt;&lt;/a&gt; function, all entries will be inserted/updated/deleted within the same transaction.</source>
          <target state="translated">每次调用 &lt;code&gt;MyApp.Address.changeset/2&lt;/code&gt; 函数时，它都必须返回一个变更集。将父变更集提供给&lt;a href=&quot;ecto.repo&quot;&gt; &lt;code&gt;Ecto.Repo&lt;/code&gt; &lt;/a&gt;函数后，所有条目都将在同一事务中插入/更新/删除。</target>
        </trans-unit>
        <trans-unit id="0e8f95beda0ca71a4e23af9a8fcd9870cd58bde0" translate="yes" xml:space="preserve">
          <source>Every time the &lt;code&gt;MyApp.Address.changeset/2&lt;/code&gt; function is invoked, it must return a changeset. This changeset will be applied to your Repo with the proper action accordingly.</source>
          <target state="translated">每次调用 &lt;code&gt;MyApp.Address.changeset/2&lt;/code&gt; 函数时，它都必须返回一个变更集。此变更集将通过相应的操作应用于您的Repo。</target>
        </trans-unit>
        <trans-unit id="290663b1782b5ce0b5e5b56fd01c5c1316fbf708" translate="yes" xml:space="preserve">
          <source>Every time the &lt;code&gt;fetch&lt;/code&gt; callback is invoked, it is done from a separate process. Given those processes run asynchronously, it is often necessary to guarantee they have been shutdown at the end of every test. This can be done by using ExUnit's &lt;code&gt;on_exit&lt;/code&gt; hook plus &lt;code&gt;fetchers_pids&lt;/code&gt; function:</source>
          <target state="translated">每次调用 &lt;code&gt;fetch&lt;/code&gt; 回调时，它都是从一个单独的进程完成的。鉴于这些进程是异步运行的，通常有必要确保它们在每次测试结束时都已关闭。这可以通过使用ExUnit的完成 &lt;code&gt;on_exit&lt;/code&gt; 钩加 &lt;code&gt;fetchers_pids&lt;/code&gt; 功能：</target>
        </trans-unit>
        <trans-unit id="7e1b63ef1a964c3fad03cd79a94213f2054d50df" translate="yes" xml:space="preserve">
          <source>Every time there is a new message, you would append it to the &lt;code&gt;@messages&lt;/code&gt; assign and re-render all messages.</source>
          <target state="translated">每当有新消息时，您都可以将其附加到 &lt;code&gt;@messages&lt;/code&gt; 分配并重新呈现所有消息。</target>
        </trans-unit>
        <trans-unit id="0635cb9ca58a4094467b83d74344825171cb1066" translate="yes" xml:space="preserve">
          <source>Every time you join a channel, you need to choose which particular topic you want to listen to. The topic is just an identifier, but by convention it is often made of two parts: &lt;code&gt;&quot;topic:subtopic&quot;&lt;/code&gt;. Using the &lt;code&gt;&quot;topic:subtopic&quot;&lt;/code&gt; approach pairs nicely with the &lt;a href=&quot;phoenix.socket#channel/2&quot;&gt;&lt;code&gt;Phoenix.Socket.channel/2&lt;/code&gt;&lt;/a&gt; allowing you to match on all topics starting with a given prefix:</source>
          <target state="translated">每次加入频道时，您都需要选择要收听的特定主题。主题只是一个标识符，但按照惯例，它通常由两部分组成： &lt;code&gt;&quot;topic:subtopic&quot;&lt;/code&gt; 。使用 &lt;code&gt;&quot;topic:subtopic&quot;&lt;/code&gt; 方法可以与&lt;a href=&quot;phoenix.socket#channel/2&quot;&gt; &lt;code&gt;Phoenix.Socket.channel/2&lt;/code&gt; &lt;/a&gt;很好地配对，从而使您可以匹配以给定前缀开头的所有主题：</target>
        </trans-unit>
        <trans-unit id="76c3074c4726c5b0a0c12202067bba3916d6bea0" translate="yes" xml:space="preserve">
          <source>Every time you join a channel, you need to choose which particular topic you want to listen to. The topic is just an identifier, but by convention it is often made of two parts: &lt;code&gt;&quot;topic:subtopic&quot;&lt;/code&gt;. Using the &lt;code&gt;&quot;topic:subtopic&quot;&lt;/code&gt; approach pairs nicely with the &lt;a href=&quot;phoenix.socket#channel/3&quot;&gt;&lt;code&gt;Phoenix.Socket.channel/3&lt;/code&gt;&lt;/a&gt; allowing you to match on all topics starting with a given prefix by using a splat (the &lt;code&gt;*&lt;/code&gt; character) as the last character in the topic pattern:</source>
          <target state="translated">每次加入频道时，您都需要选择要收听的特定主题。主题只是一个标识符，但按照惯例，它通常由两部分组成： &lt;code&gt;&quot;topic:subtopic&quot;&lt;/code&gt; 。使用 &lt;code&gt;&quot;topic:subtopic&quot;&lt;/code&gt; 方法与&lt;a href=&quot;phoenix.socket#channel/3&quot;&gt; &lt;code&gt;Phoenix.Socket.channel/3&lt;/code&gt; &lt;/a&gt;可以很好地配对，从而允许您通过使用splat（ &lt;code&gt;*&lt;/code&gt; 字符）作为主题模式中的最后一个字符来匹配以给定前缀开头的所有主题：</target>
        </trans-unit>
        <trans-unit id="682f1b801bb2578a3d62730460ad8900a34791db" translate="yes" xml:space="preserve">
          <source>Examining Routes</source>
          <target state="translated">检验路线</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="654d7a479004b2b26e7de7b5ed9cd79a331ded80" translate="yes" xml:space="preserve">
          <source>Example Usage</source>
          <target state="translated">使用实例</target>
        </trans-unit>
        <trans-unit id="5d036abf17a95029249be5aac0478db70ae0589a" translate="yes" xml:space="preserve">
          <source>Example of generated files:</source>
          <target state="translated">生成文件的例子。</target>
        </trans-unit>
        <trans-unit id="f6ebfe315ec41fe5880d8cb59f91359c8d74ad8b" translate="yes" xml:space="preserve">
          <source>Example: Adding a comment to a post</source>
          <target state="translated">例子:在文章中添加评论</target>
        </trans-unit>
        <trans-unit id="09f5a191bd1aa3c4c2a2bf0180871d036a7576ef" translate="yes" xml:space="preserve">
          <source>Example: Adding tags to a post</source>
          <target state="translated">例子:为文章添加标签</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="d566c7c0b5a5e7655a937e7a2e0f690197fca27b" translate="yes" xml:space="preserve">
          <source>Examples and detailed documentation for each of those are available in the &lt;a href=&quot;ecto.query&quot;&gt;&lt;code&gt;Ecto.Query&lt;/code&gt;&lt;/a&gt; module. Functions supported in queries are listed in &lt;a href=&quot;ecto.query.api&quot;&gt;&lt;code&gt;Ecto.Query.API&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;ecto.query&quot;&gt; &lt;code&gt;Ecto.Query&lt;/code&gt; &lt;/a&gt;模块中提供了每个示例的示例和详细文档。&lt;a href=&quot;ecto.query.api&quot;&gt; &lt;code&gt;Ecto.Query.API&lt;/code&gt; &lt;/a&gt;中列出了查询支持的功能。</target>
        </trans-unit>
        <trans-unit id="0cad0d61f681eb1c78a7b0c3f38376aef13625b3" translate="yes" xml:space="preserve">
          <source>Except expression returns only unique rows as if each query returned distinct results. This may cause performance penalty. If you need just to take the difference of multiple result sets without removing duplicate rows consider using &lt;a href=&quot;#except_all/2&quot;&gt;&lt;code&gt;except_all/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">除了表达式外，它仅返回唯一的行，就像每个查询返回不同的结果一样。这可能会导致性能下降。如果只需要取多个结果集之差而不删除重复的行，请考虑使用&lt;a href=&quot;#except_all/2&quot;&gt; &lt;code&gt;except_all/2&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9fd0138bf7042fceaf302abbce31b378dd7675d9" translate="yes" xml:space="preserve">
          <source>Exception actions are functions that can be triggered by the error page, it is basically a list of maps defining a &lt;code&gt;label&lt;/code&gt; and a &lt;code&gt;handler&lt;/code&gt; to be executed.</source>
          <target state="translated">异常操作是可以由错误页面触发的函数，它基本上是定义 &lt;code&gt;label&lt;/code&gt; 和要执行的 &lt;code&gt;handler&lt;/code&gt; 的映射列表。</target>
        </trans-unit>
        <trans-unit id="c64d530f7d597c09275505d5c9c0d4f66100c4ec" translate="yes" xml:space="preserve">
          <source>Exception raised when a template cannot be found.</source>
          <target state="translated">当找不到模板时发出异常。</target>
        </trans-unit>
        <trans-unit id="4bfb3c666085af96fb301a2c7a36585a27fc21e9" translate="yes" xml:space="preserve">
          <source>Exception raised when no route is found.</source>
          <target state="translated">未找到路径时发生异常。</target>
        </trans-unit>
        <trans-unit id="edaffb4e607a48e8d13f8aaef5358d5af5c6588b" translate="yes" xml:space="preserve">
          <source>Exception raised when the URI is malformed on matching.</source>
          <target state="translated">当URI在匹配时出现畸形时引发异常。</target>
        </trans-unit>
        <trans-unit id="cd3dfbe79fda3a9d92de67b1bd4f1dc9f60ab723" translate="yes" xml:space="preserve">
          <source>Exceptions</source>
          <target state="translated">Exceptions</target>
        </trans-unit>
        <trans-unit id="e61e0d78bf2564fbb3047a564384748705a23809" translate="yes" xml:space="preserve">
          <source>Exceptions during connected render:</source>
          <target state="translated">连接渲染过程中出现异常。</target>
        </trans-unit>
        <trans-unit id="119db8230eac960cae56a2a3ca8a57446a92b51a" translate="yes" xml:space="preserve">
          <source>Exceptions during disconnected render:</source>
          <target state="translated">断线渲染期间的异常。</target>
        </trans-unit>
        <trans-unit id="82e3d75bbaed299f1252375875124b45bcba439c" translate="yes" xml:space="preserve">
          <source>Exceptions on events (&lt;code&gt;handle_info&lt;/code&gt;, &lt;code&gt;handle_event&lt;/code&gt;, etc)</source>
          <target state="translated">事件异常（ &lt;code&gt;handle_info&lt;/code&gt; ， &lt;code&gt;handle_event&lt;/code&gt; 等）</target>
        </trans-unit>
        <trans-unit id="f96c9a7121b72610eba85c9c28bd3012612ebfae" translate="yes" xml:space="preserve">
          <source>Exceptions on mount</source>
          <target state="translated">装载的例外情况</target>
        </trans-unit>
        <trans-unit id="7bc817333cbc1bf3d1de15d9550396d9326905ac" translate="yes" xml:space="preserve">
          <source>Excluded hosts tuple</source>
          <target state="translated">排除主机元组</target>
        </trans-unit>
        <trans-unit id="5eab5b7fe3dcdd0495cd43577dcd643b59994032" translate="yes" xml:space="preserve">
          <source>Executes a previously prepared query</source>
          <target state="translated">执行之前准备好的查询</target>
        </trans-unit>
        <trans-unit id="d81e8be29cc9dcb9a67e4318db7a32eb8dbb7f4a" translate="yes" xml:space="preserve">
          <source>Executes a previously prepared query.</source>
          <target state="translated">执行之前准备好的查询。</target>
        </trans-unit>
        <trans-unit id="0020e8f63dedbf5b6f61e98b567f1e0eaed81a9d" translate="yes" xml:space="preserve">
          <source>Exit reasons when stopping a channel</source>
          <target state="translated">停止通道时的退出原因</target>
        </trans-unit>
        <trans-unit id="8db046f31b1079906be240e807a41ffe4cfff43f" translate="yes" xml:space="preserve">
          <source>Expected scenarios</source>
          <target state="translated">预期的情况</target>
        </trans-unit>
        <trans-unit id="edcdd1f5abd2799866e34eea3610d6b92c1f5229" translate="yes" xml:space="preserve">
          <source>Expression examples</source>
          <target state="translated">表达式示例</target>
        </trans-unit>
        <trans-unit id="1bbb977db38c4f253c4cea64b8d8a87132fc3861" translate="yes" xml:space="preserve">
          <source>Expressions example</source>
          <target state="translated">表达式示例</target>
        </trans-unit>
        <trans-unit id="3ee48fdc5db523f40497a2ed53ecc18e5f483f7e" translate="yes" xml:space="preserve">
          <source>Expressions examples</source>
          <target state="translated">表达式示例</target>
        </trans-unit>
        <trans-unit id="512ffac0536256b0a077954b2b56ec3d00cd8027" translate="yes" xml:space="preserve">
          <source>Extend presence information with additional data.</source>
          <target state="translated">用附加数据扩展存在信息。</target>
        </trans-unit>
        <trans-unit id="93374886ac70b6fcf67cc4422c2dd8f97aa99cba" translate="yes" xml:space="preserve">
          <source>External values and Elixir expressions can be injected into a query expression with &lt;code&gt;^&lt;/code&gt;:</source>
          <target state="translated">可以使用 &lt;code&gt;^&lt;/code&gt; 将外部值和Elixir表达式注入查询表达式中：</target>
        </trans-unit>
        <trans-unit id="f4ee136a95ce0e250b26a775c6a4f304eb49e9fb" translate="yes" xml:space="preserve">
          <source>External vs internal data</source>
          <target state="translated">外部与内部数据</target>
        </trans-unit>
        <trans-unit id="6511da3c8f61a40e2990f69eb890c195756508e6" translate="yes" xml:space="preserve">
          <source>Extracting tag values from Plug.Conn</source>
          <target state="translated">从Plug.Conn中提取标签值</target>
        </trans-unit>
        <trans-unit id="1d55c1fe9b22bbea495440d9e994c00b34d01cff" translate="yes" xml:space="preserve">
          <source>Extracts connection information from &lt;code&gt;conn&lt;/code&gt; and returns a map.</source>
          <target state="translated">从 &lt;code&gt;conn&lt;/code&gt; 中提取连接信息并返回一个映射。</target>
        </trans-unit>
        <trans-unit id="44e6613f45ea30af9e65d715a73b23d35854f291" translate="yes" xml:space="preserve">
          <source>Extracts the resource name from an alias</source>
          <target state="translated">从别名中提取资源名称</target>
        </trans-unit>
        <trans-unit id="b9a7f83f64bd9961bbffb73d9a101603d5fc422d" translate="yes" xml:space="preserve">
          <source>Extracts the resource name from an alias.</source>
          <target state="translated">从别名中提取资源名称。</target>
        </trans-unit>
        <trans-unit id="f06ac061a76b4ebd4a18e48b816bda1ba2a2c77c" translate="yes" xml:space="preserve">
          <source>Extracts the set&amp;rsquo;s elements from ets into a mergeable list</source>
          <target state="translated">将集合中的元素从ets中提取到可合并列表中</target>
        </trans-unit>
        <trans-unit id="3b06a14d516933eb29357d012c46511d38c29b2b" translate="yes" xml:space="preserve">
          <source>Extracts the set&amp;rsquo;s elements from ets into a mergeable list.</source>
          <target state="translated">将集合的元素从ets中提取到可合并列表中。</target>
        </trans-unit>
        <trans-unit id="3e4e6627a5b44408d225b0820df0658946bef555" translate="yes" xml:space="preserve">
          <source>Extracts the set's elements from ets into a mergeable list.</source>
          <target state="translated">从ets中提取集合的元素到一个可合并的列表中。</target>
        </trans-unit>
        <trans-unit id="03688ba6aa340b87549088aa5739944cb6b1dc73" translate="yes" xml:space="preserve">
          <source>FAQ</source>
          <target state="translated">FAQ</target>
        </trans-unit>
        <trans-unit id="c6ddde0f8bb7bc8c99d7a19d12b92c112294da97" translate="yes" xml:space="preserve">
          <source>Fails if the result is not safe. In such cases, you can invoke &lt;a href=&quot;#html_escape/1&quot;&gt;&lt;code&gt;html_escape/1&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#raw/1&quot;&gt;&lt;code&gt;raw/1&lt;/code&gt;&lt;/a&gt; accordingly before.</source>
          <target state="translated">如果结果不安全，将失败。在这种情况下，您可以在之前相应地调用&lt;a href=&quot;#html_escape/1&quot;&gt; &lt;code&gt;html_escape/1&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#raw/1&quot;&gt; &lt;code&gt;raw/1&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cd676bc8d0bb7e9a6ce51caa1747e0a5855e3e9e" translate="yes" xml:space="preserve">
          <source>Fetchable fields</source>
          <target state="translated">可检索字段</target>
        </trans-unit>
        <trans-unit id="e284d893dbc745af72e66058a0b6fcabca9a0795" translate="yes" xml:space="preserve">
          <source>Fetches a change from the given changeset</source>
          <target state="translated">从给定的变化集中获取一个变化。</target>
        </trans-unit>
        <trans-unit id="df9d063215383f5d43ff6bd8f28d50b17f990df3" translate="yes" xml:space="preserve">
          <source>Fetches a change from the given changeset.</source>
          <target state="translated">从给定的变化集中获取一个变化。</target>
        </trans-unit>
        <trans-unit id="fcadf1bd67677a18f8d7729c638f9317d92bc9ab" translate="yes" xml:space="preserve">
          <source>Fetches a single result from the query</source>
          <target state="translated">从查询中获取单个结果</target>
        </trans-unit>
        <trans-unit id="6b017414662aa05a81aef4aa976822b02de76df8" translate="yes" xml:space="preserve">
          <source>Fetches a single result from the query.</source>
          <target state="translated">从查询中获取单个结果。</target>
        </trans-unit>
        <trans-unit id="08719e85d959bee2a1ad16c16f9a61c7c481cd87" translate="yes" xml:space="preserve">
          <source>Fetches a single struct from the data store where the primary key matches the given id</source>
          <target state="translated">从数据存储中获取一个主键与给定id匹配的结构体。</target>
        </trans-unit>
        <trans-unit id="0bd85e97f228082f7016f38d8dc8a785d578d92e" translate="yes" xml:space="preserve">
          <source>Fetches a single struct from the data store where the primary key matches the given id.</source>
          <target state="translated">从数据存储中获取一个主键与给定id匹配的结构体。</target>
        </trans-unit>
        <trans-unit id="11876e00e55507ddc1f33effa9a28d5147b077b6" translate="yes" xml:space="preserve">
          <source>Fetches all entries from the data store matching the given query</source>
          <target state="translated">从数据存储中获取与给定查询相匹配的所有条目。</target>
        </trans-unit>
        <trans-unit id="d5e5f6e8487bddc32e7596312ed1bb5dac35bd0a" translate="yes" xml:space="preserve">
          <source>Fetches all entries from the data store matching the given query.</source>
          <target state="translated">从数据存储中获取与给定查询相匹配的所有条目。</target>
        </trans-unit>
        <trans-unit id="3163fd5d81253261c2a50f52a695753603eb3406" translate="yes" xml:space="preserve">
          <source>Fetches cookies from the request headers</source>
          <target state="translated">从请求头中获取cookies</target>
        </trans-unit>
        <trans-unit id="0fe8d31a288e49b7e5cacce395d79fb5e4019e40" translate="yes" xml:space="preserve">
          <source>Fetches cookies from the request headers.</source>
          <target state="translated">从请求头中获取cookie。</target>
        </trans-unit>
        <trans-unit id="64380f0b804c02ac2677f51e3be474a17762a74b" translate="yes" xml:space="preserve">
          <source>Fetches query parameters from the query string</source>
          <target state="translated">从查询字符串中获取查询参数</target>
        </trans-unit>
        <trans-unit id="39f3908de6fa352816ba9add06ec6c62e6ec9216" translate="yes" xml:space="preserve">
          <source>Fetches query parameters from the query string.</source>
          <target state="translated">从查询字符串中获取查询参数。</target>
        </trans-unit>
        <trans-unit id="72610977b91bc4b48f625242dcbbf84a8ecf4f4c" translate="yes" xml:space="preserve">
          <source>Fetches the LiveView and merges with the controller flash.</source>
          <target state="translated">获取LiveView并与控制器flash合并。</target>
        </trans-unit>
        <trans-unit id="03d548c192ce1d24785783d7cd261cf87725704e" translate="yes" xml:space="preserve">
          <source>Fetches the flash storage</source>
          <target state="translated">获取闪存</target>
        </trans-unit>
        <trans-unit id="0d58eda1295145111b598fd2ee9110335edd72a9" translate="yes" xml:space="preserve">
          <source>Fetches the flash storage.</source>
          <target state="translated">获取闪存。</target>
        </trans-unit>
        <trans-unit id="faff5731b0098ef6d06e0e3b0ab84e1f24767239" translate="yes" xml:space="preserve">
          <source>Fetches the given field from changes or from the data</source>
          <target state="translated">从变化或数据中获取给定字段。</target>
        </trans-unit>
        <trans-unit id="00c47ed90a14976a1fe975f63cadebf282fe500b" translate="yes" xml:space="preserve">
          <source>Fetches the given field from changes or from the data.</source>
          <target state="translated">从变化或数据中获取给定字段。</target>
        </trans-unit>
        <trans-unit id="274968e4217f4aac81cf7e7d092480224b04e65a" translate="yes" xml:space="preserve">
          <source>Fetches the session from the session store. Will also fetch cookies</source>
          <target state="translated">从会话存储中获取会话。也会获取cookie。</target>
        </trans-unit>
        <trans-unit id="0b70c54cb87368611ee01ded3dee3728ea2684c7" translate="yes" xml:space="preserve">
          <source>Fetches the session from the session store. Will also fetch cookies.</source>
          <target state="translated">从会话存储中获取会话。也会获取cookie。</target>
        </trans-unit>
        <trans-unit id="0eb0f2ebbd898fe11ee1adea5bfdeebe9c932ccf" translate="yes" xml:space="preserve">
          <source>Fetching Presence Information</source>
          <target state="translated">获取存在信息</target>
        </trans-unit>
        <trans-unit id="b7725b2aa5514d3fb80276bbee807899c2709959" translate="yes" xml:space="preserve">
          <source>Ff there is no such row, instead return default (which must be of the same type as value). Both offset and default are evaluated with respect to the current row. If omitted, offset defaults to 1 and default to null.</source>
          <target state="translated">Ff没有这样的行,返回默认值(必须是和value相同的类型)。偏移量和缺省值都是相对于当前行进行计算的,如果省略,偏移量默认为1,缺省值默认为null。如果省略,偏移量默认为1,默认值为空。</target>
        </trans-unit>
        <trans-unit id="9f345d16da1171009c2d07d7e162059e89a99f42" translate="yes" xml:space="preserve">
          <source>Fields that are not present in the schema (or &lt;code&gt;types&lt;/code&gt; map) are ignored. If any of the values has invalid type, an error is raised.</source>
          <target state="translated">模式（或 &lt;code&gt;types&lt;/code&gt; 映射）中不存在的字段将被忽略。如果任何值的类型无效，则会引发错误。</target>
        </trans-unit>
        <trans-unit id="f315ee9e3108a80c179abb06fe33569d756f7ff5" translate="yes" xml:space="preserve">
          <source>File handling</source>
          <target state="translated">文件处理</target>
        </trans-unit>
        <trans-unit id="b563507a845353e1d9b91b6064b7fe3ba43015a7" translate="yes" xml:space="preserve">
          <source>Filtering associations</source>
          <target state="translated">筛选关联</target>
        </trans-unit>
        <trans-unit id="7dcc155505178bbe138e3135c40148f03651670f" translate="yes" xml:space="preserve">
          <source>Filters out those present on downed replicas.</source>
          <target state="translated">过滤掉那些存在于被击落副本上的。</target>
        </trans-unit>
        <trans-unit id="282e4e63202755b322d3a8585cfcb3887e04ec08" translate="yes" xml:space="preserve">
          <source>Finally customize LiveView to use it in your &lt;code&gt;assets/js/app.js&lt;/code&gt;, right before the &lt;code&gt;liveSocket.connect()&lt;/code&gt; call:</source>
          <target state="translated">最后，在 &lt;code&gt;liveSocket.connect()&lt;/code&gt; 调用之前，自定义LiveView以在您的 &lt;code&gt;assets/js/app.js&lt;/code&gt; 中使用它：</target>
        </trans-unit>
        <trans-unit id="8e9555e0facd6e903d9ec04caa3ca1e02ec43549" translate="yes" xml:space="preserve">
          <source>Finally, &lt;code&gt;options&lt;/code&gt; is a keyword list of options given to the &lt;code&gt;Repo&lt;/code&gt; operation that triggered the adapter call. Any option is allowed, as this is a mechanism to allow users of Ecto to customize how the adapter behaves per operation.</source>
          <target state="translated">最后， &lt;code&gt;options&lt;/code&gt; 是提供给触发适配器调用的 &lt;code&gt;Repo&lt;/code&gt; 操作的选项的关键字列表。允许使用任何选项，因为这是允许Ecto用户自定义适配器每次操作行为的机制。</target>
        </trans-unit>
        <trans-unit id="b2346c7af5d6980b8986c812d4411f43cd6d5d34" translate="yes" xml:space="preserve">
          <source>Finally, Phoenix ships with a &lt;a href=&quot;mix.tasks.phx.routes&quot;&gt;&lt;code&gt;mix phx.routes&lt;/code&gt;&lt;/a&gt; task that nicely formats all routes in a given router. We can use it to verify all routes included in the router above:</source>
          <target state="translated">最后，Phoenix附带了&lt;a href=&quot;mix.tasks.phx.routes&quot;&gt; &lt;code&gt;mix phx.routes&lt;/code&gt; &lt;/a&gt;任务，可以很好地格式化给定路由器中的所有路由。我们可以使用它来验证上述路由器中包括的所有路由：</target>
        </trans-unit>
        <trans-unit id="8e5a408906e0f613586519b719c8fb8988afdde0" translate="yes" xml:space="preserve">
          <source>Finally, Phoenix ships with a &lt;code&gt;mix phx.routes&lt;/code&gt; task that nicely formats all routes in a given router. We can use it to verify all routes included in the router above:</source>
          <target state="translated">最后，Phoenix附带了 &lt;code&gt;mix phx.routes&lt;/code&gt; 任务，可以很好地格式化给定路由器中的所有路由。我们可以使用它来验证上述路由器中包括的所有路由：</target>
        </trans-unit>
        <trans-unit id="f99f4376e4980be4bbc9016c10d32de768a5d866" translate="yes" xml:space="preserve">
          <source>Finally, a diff of presence join and leave events will be sent to the client as they happen in real-time with the &quot;presence_diff&quot; event. The diff structure will be a map of &lt;code&gt;:joins&lt;/code&gt; and &lt;code&gt;:leaves&lt;/code&gt; of the form:</source>
          <target state="translated">最终，当存在时加入和离开事件的差异将通过&amp;ldquo; presence_diff&amp;rdquo;事件实时发生，并发送给客户端。diff结构将是形式为 &lt;code&gt;:joins&lt;/code&gt; 和 &lt;code&gt;:leaves&lt;/code&gt; 的映射：</target>
        </trans-unit>
        <trans-unit id="ef21b0ab2a337cbb5d3cb905bb5c0c2daaee7d04" translate="yes" xml:space="preserve">
          <source>Finally, a diff of presence join and leave events will be sent to the client as they happen in real-time with the &amp;ldquo;presence_diff&amp;rdquo; event. The diff structure will be a map of &lt;code&gt;:joins&lt;/code&gt; and &lt;code&gt;:leaves&lt;/code&gt; of the form:</source>
          <target state="translated">最终，在线状态&amp;ldquo;加入和离开&amp;rdquo;事件的差异将通过&amp;ldquo; presence_diff&amp;rdquo;事件实时发生，并发送给客户端。diff结构将是形式为 &lt;code&gt;:joins&lt;/code&gt; 和 &lt;code&gt;:leaves&lt;/code&gt; 的映射：</target>
        </trans-unit>
        <trans-unit id="8d783e0fbd65008c8d3daf828f44798d62b28819" translate="yes" xml:space="preserve">
          <source>Finally, a general &lt;code&gt;match&lt;/code&gt; function is also supported:</source>
          <target state="translated">最后，还支持常规 &lt;code&gt;match&lt;/code&gt; 功能：</target>
        </trans-unit>
        <trans-unit id="cbd538abc008943a66a235a940fcc360a92892be" translate="yes" xml:space="preserve">
          <source>Finally, controllers are plugs too, so we can do:</source>
          <target state="translated">最后,控制器也是插头,所以我们可以做。</target>
        </trans-unit>
        <trans-unit id="2b46f1f43d8d8a7d1e56f9f95c1017883c532945" translate="yes" xml:space="preserve">
          <source>Finally, ensure you have placed a CSRF meta tag inside the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; tag in your layout (&lt;code&gt;lib/my_app_web/templates/layout/root.html.leex&lt;/code&gt;), before &lt;code&gt;app.js&lt;/code&gt; is included like so:</source>
          <target state="translated">最后，在像这样包含 &lt;code&gt;app.js&lt;/code&gt; 之前，请确保已在布局的 &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; 标记（ &lt;code&gt;lib/my_app_web/templates/layout/root.html.leex&lt;/code&gt; ）内放置了CSRF元标记。</target>
        </trans-unit>
        <trans-unit id="371bdbfa9b024c89cc2bf0370822b67c2b7ebd0c" translate="yes" xml:space="preserve">
          <source>Finally, every time a message is pushed to the channel, a reference is returned. We can use this reference to assert a particular reply was sent from the server:</source>
          <target state="translated">最后,每次有消息推送到通道上,都会返回一个引用。我们可以用这个引用来断言某个特定的回复是由服务器发送的。</target>
        </trans-unit>
        <trans-unit id="0fba42c006127501a9d4eee7b63ae677c340c271" translate="yes" xml:space="preserve">
          <source>Finally, for the simple cases, preloading can also be done after a collection was fetched:</source>
          <target state="translated">最后,对于简单的情况,也可以在取到集合后进行预加载。</target>
        </trans-unit>
        <trans-unit id="b9c2275b05254f6a0d55c69f791dee63e59b770f" translate="yes" xml:space="preserve">
          <source>Finally, if the values are a list or a map, we use the keys for grouping:</source>
          <target state="translated">最后,如果值是一个列表或地图,我们使用键进行分组。</target>
        </trans-unit>
        <trans-unit id="b286b8732a55a3c412fbebef0eb11876e873f238" translate="yes" xml:space="preserve">
          <source>Finally, if we happen to have another repo called &lt;code&gt;OurCustom.Repo&lt;/code&gt; that we want to create the database for, we can run this.</source>
          <target state="translated">最后，如果碰巧要创建数据库的另一个 &lt;code&gt;OurCustom.Repo&lt;/code&gt; ，则可以运行它。</target>
        </trans-unit>
        <trans-unit id="be70f9966d578a92f0d14739730beade1450e72e" translate="yes" xml:space="preserve">
          <source>Finally, if you need an escape hatch, Ecto provides fragments (see &lt;a href=&quot;ecto.query.api#fragment/1&quot;&gt;&lt;code&gt;Ecto.Query.API.fragment/1&lt;/code&gt;&lt;/a&gt;) to inject SQL (and non-SQL) fragments into queries. Also, most adapters provide direct APIs for queries, like &lt;code&gt;Ecto.Adapters.SQL.query/4&lt;/code&gt;, allowing developers to completely bypass Ecto queries.</source>
          <target state="translated">最后，如果需要转义，则Ecto提供了片段（请参阅&lt;a href=&quot;ecto.query.api#fragment/1&quot;&gt; &lt;code&gt;Ecto.Query.API.fragment/1&lt;/code&gt; &lt;/a&gt;），以将SQL（和非SQL）片段注入查询中。此外，大多数适配器都为查询提供直接API，例如 &lt;code&gt;Ecto.Adapters.SQL.query/4&lt;/code&gt; ，从而使开发人员可以完全绕过Ecto查询。</target>
        </trans-unit>
        <trans-unit id="c676eb935e678c18bf53e1829daa12f72d228abc" translate="yes" xml:space="preserve">
          <source>Finally, if you visit &lt;a href=&quot;http://localhost:4000/users/new&quot;&gt;http://localhost:4000/users/new&lt;/a&gt; and attempt to save an empty email address, you'll see the proper validation error message. If you enter valid information, the data will be casted and persisted properly.</source>
          <target state="translated">最后，如果您访问&lt;a href=&quot;http://localhost:4000/users/new&quot;&gt;http：// localhost：4000 / users / new&lt;/a&gt;并尝试保存一个空的电子邮件地址，则会看到正确的验证错误消息。如果输入有效信息，则数据将被强制转换并正确保存。</target>
        </trans-unit>
        <trans-unit id="c54bd870ba91bed90da9cf9fe6df9617b5f4d992" translate="yes" xml:space="preserve">
          <source>Finally, let's define in the same file the action we redirect to, which simply renders the index, but now under a new address:</source>
          <target state="translated">最后,让我们在同一个文件中定义我们重定向的动作,它只是简单地渲染索引,但现在在一个新的地址下。</target>
        </trans-unit>
        <trans-unit id="fb326081c925d409dc6bd594e7dc1cace66c40ec" translate="yes" xml:space="preserve">
          <source>Finally, note that &lt;a href=&quot;#c:preload/1&quot;&gt;&lt;code&gt;preload/1&lt;/code&gt;&lt;/a&gt; must return an updated &lt;code&gt;list_of_assigns&lt;/code&gt;, keeping the assigns in the same order as they were given.</source>
          <target state="translated">最后，请注意&lt;a href=&quot;#c:preload/1&quot;&gt; &lt;code&gt;preload/1&lt;/code&gt; &lt;/a&gt;必须返回更新的 &lt;code&gt;list_of_assigns&lt;/code&gt; ，并保持分配顺序与给定顺序相同。</target>
        </trans-unit>
        <trans-unit id="7e3918893207e1a11baa9a23cc96cc1200d507b6" translate="yes" xml:space="preserve">
          <source>Finally, note that you can optionally assert on the path you are being redirected to by passing a third argument:</source>
          <target state="translated">最后,请注意,你可以通过传递第三个参数来选择性地断言你被重定向到的路径。</target>
        </trans-unit>
        <trans-unit id="a1c37bfd43a0c8a580f8703749716c5f562cabd0" translate="yes" xml:space="preserve">
          <source>Finally, open up the new file in &lt;code&gt;priv/repo/migrations&lt;/code&gt; to ensure the &lt;code&gt;views&lt;/code&gt; attribute will have a default value:</source>
          <target state="translated">最后，在 &lt;code&gt;priv/repo/migrations&lt;/code&gt; 中打开新文件，以确保 &lt;code&gt;views&lt;/code&gt; 属性将具有默认值：</target>
        </trans-unit>
        <trans-unit id="5211a28dd43f79dbabf7887d2a6fa7e2af5965c5" translate="yes" xml:space="preserve">
          <source>Finally, schemas can also have virtual fields by passing the &lt;code&gt;virtual: true&lt;/code&gt; option. These fields are not persisted to the database and can optionally not be type checked by declaring type &lt;code&gt;:any&lt;/code&gt;.</source>
          <target state="translated">最后，通过传递 &lt;code&gt;virtual: true&lt;/code&gt; 选项，架构也可以具有虚拟字段。这些字段不会持久保存到数据库中，并且可以选择通过声明type &lt;code&gt;:any&lt;/code&gt; 进行类型检查。</target>
        </trans-unit>
        <trans-unit id="1fa6676483e22da547429578149cf2518f2c1700" translate="yes" xml:space="preserve">
          <source>Finally, there is a &lt;code&gt;lib/hello_web/gettext.ex&lt;/code&gt; file which provides internationalization through &lt;a href=&quot;https://hexdocs.pm/gettext/Gettext.html&quot;&gt;Gettext&lt;/a&gt;. If you are not worried about internationalization, you can safely skip this file and its contents.</source>
          <target state="translated">最后，有一个 &lt;code&gt;lib/hello_web/gettext.ex&lt;/code&gt; 文件，它通过&lt;a href=&quot;https://hexdocs.pm/gettext/Gettext.html&quot;&gt;Gettext&lt;/a&gt;提供国际化。如果您不担心国际化，则可以安全地跳过此文件及其内容。</target>
        </trans-unit>
        <trans-unit id="c3c3d8b92a64a4d3df3c071e9b5af6207dda5c2c" translate="yes" xml:space="preserve">
          <source>Finally, we recommend developers to invoke &lt;a href=&quot;#delete_csrf_token/0&quot;&gt;&lt;code&gt;delete_csrf_token/0&lt;/code&gt;&lt;/a&gt; every time after they log a user in, to avoid CSRF fixation attacks.</source>
          <target state="translated">最后，我们建议开发人员在登录用户后每次调用&lt;a href=&quot;#delete_csrf_token/0&quot;&gt; &lt;code&gt;delete_csrf_token/0&lt;/code&gt; &lt;/a&gt;，以避免CSRF固定攻击。</target>
        </trans-unit>
        <trans-unit id="2c43349bb4ac520e541fbd1852e3cd8d312b498b" translate="yes" xml:space="preserve">
          <source>Find plug Plug.Session in your endpoint.ex</source>
          <target state="translated">在你的endpoint.ex中找到插件Plug.Session。</target>
        </trans-unit>
        <trans-unit id="b73ca976670bde4f271b308abb888552353aeaf5" translate="yes" xml:space="preserve">
          <source>First &lt;a href=&quot;#c:mount/1&quot;&gt;&lt;code&gt;mount/1&lt;/code&gt;&lt;/a&gt; is called only with the socket. &lt;code&gt;mount/1&lt;/code&gt; can be used to set any initial state. Then &lt;a href=&quot;#c:update/2&quot;&gt;&lt;code&gt;update/2&lt;/code&gt;&lt;/a&gt; is invoked with all of the assigns given to &lt;code&gt;live_component/3&lt;/code&gt;. The default implementation of &lt;a href=&quot;#c:update/2&quot;&gt;&lt;code&gt;update/2&lt;/code&gt;&lt;/a&gt; simply merges all assigns into the socket. Then, after the component is updated, &lt;a href=&quot;#c:render/1&quot;&gt;&lt;code&gt;render/1&lt;/code&gt;&lt;/a&gt; is called with all assigns.</source>
          <target state="translated">First &lt;a href=&quot;#c:mount/1&quot;&gt; &lt;code&gt;mount/1&lt;/code&gt; &lt;/a&gt;仅与套接字一起调用。 &lt;code&gt;mount/1&lt;/code&gt; 可用于设置任何初始状态。然后，使用为 &lt;code&gt;live_component/3&lt;/code&gt; 分配的所有分配调用&lt;a href=&quot;#c:update/2&quot;&gt; &lt;code&gt;update/2&lt;/code&gt; &lt;/a&gt;。&lt;a href=&quot;#c:update/2&quot;&gt; &lt;code&gt;update/2&lt;/code&gt; &lt;/a&gt;的默认实现只是将所有分配合并到套接字中。然后，在更新组件之后，&lt;a href=&quot;#c:render/1&quot;&gt; &lt;code&gt;render/1&lt;/code&gt; &lt;/a&gt;使用所有分配调用render / 1。</target>
        </trans-unit>
        <trans-unit id="2fb913814f9b7285d0192f83ab9917d27d52ce09" translate="yes" xml:space="preserve">
          <source>First &lt;code&gt;priv/static&lt;/code&gt; which should look similar to this:</source>
          <target state="translated">首先的 &lt;code&gt;priv/static&lt;/code&gt; 应该看起来像这样：</target>
        </trans-unit>
        <trans-unit id="e7cede9ba10374814edb7d62667128e5b3c78ad0" translate="yes" xml:space="preserve">
          <source>First add &lt;code&gt;nprogress&lt;/code&gt; as a dependency in your &lt;code&gt;assets/package.json&lt;/code&gt;:</source>
          <target state="translated">首先在您的 &lt;code&gt;assets/package.json&lt;/code&gt; 中添加 &lt;code&gt;nprogress&lt;/code&gt; 作为依赖项：</target>
        </trans-unit>
        <trans-unit id="500092afa233e9b7ad3757e9635614d60d69c53f" translate="yes" xml:space="preserve">
          <source>First, let&amp;rsquo;s fetch the post with all existing comments:</source>
          <target state="translated">首先，让我们以所有现有评论获取帖子：</target>
        </trans-unit>
        <trans-unit id="a5e339d4995b9e83dffba1422acecfda7bc67bf4" translate="yes" xml:space="preserve">
          <source>First, let's fetch the post with all existing comments:</source>
          <target state="translated">首先,让我们取来帖子的所有现有评论。</target>
        </trans-unit>
        <trans-unit id="1b50d8bca129a23480c52a1cafd6c77d1ebfc656" translate="yes" xml:space="preserve">
          <source>First, we imported &lt;code&gt;Ecto.Query&lt;/code&gt;, which imports the &lt;code&gt;from&lt;/code&gt; macro of Ecto's Query DSL. Next, we built a query which selects all the email addresses in our users table. Let's try another example.</source>
          <target state="translated">首先，我们导入了 &lt;code&gt;Ecto.Query&lt;/code&gt; ，它导入了Ecto的Query DSL的 &lt;code&gt;from&lt;/code&gt; 宏。接下来，我们构建了一个查询，该查询选择了用户表中的所有电子邮件地址。让我们尝试另一个示例。</target>
        </trans-unit>
        <trans-unit id="6e459a6ded02965db8df0071fdfd3d7b1875edfa" translate="yes" xml:space="preserve">
          <source>First, when invoking the LiveView socket, you need to declare the &lt;code&gt;connect_info&lt;/code&gt; you want to receive. Typically, it includes at least the session but it may include other keys, such as &lt;code&gt;:peer_data&lt;/code&gt;. See &lt;a href=&quot;../phoenix/phoenix.endpoint#socket/3&quot;&gt;&lt;code&gt;Phoenix.Endpoint.socket/3&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">首先，在调用LiveView套接字时，需要声明要接收的 &lt;code&gt;connect_info&lt;/code&gt; 。通常，它至少包括会话，但是可以包括其他键，例如 &lt;code&gt;:peer_data&lt;/code&gt; 。参见&lt;a href=&quot;../phoenix/phoenix.endpoint#socket/3&quot;&gt; &lt;code&gt;Phoenix.Endpoint.socket/3&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="ee8bc1d6f4e54cdc9694ec216fc67ec9e5fb51a3" translate="yes" xml:space="preserve">
          <source>Flash Messages</source>
          <target state="translated">闪存信息</target>
        </trans-unit>
        <trans-unit id="db0a693e52d129229b723bca090f9d3722799b28" translate="yes" xml:space="preserve">
          <source>Floats: &lt;code&gt;1.0&lt;/code&gt;, &lt;code&gt;2.0&lt;/code&gt;, &lt;code&gt;3.0&lt;/code&gt;</source>
          <target state="translated">浮： &lt;code&gt;1.0&lt;/code&gt; ， &lt;code&gt;2.0&lt;/code&gt; ， &lt;code&gt;3.0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2e24e66624310195aa269428d97e5d4fa35caf29" translate="yes" xml:space="preserve">
          <source>Focus and Blur Events</source>
          <target state="translated">聚焦和模糊事件</target>
        </trans-unit>
        <trans-unit id="fc842ed4801897e6ac162506660d498d3b515aec" translate="yes" xml:space="preserve">
          <source>Focus and blur events may be bound to DOM elements that emit such events, using the &lt;code&gt;phx-blur&lt;/code&gt;, and &lt;code&gt;phx-focus&lt;/code&gt; bindings, for example:</source>
          <target state="translated">使用 &lt;code&gt;phx-blur&lt;/code&gt; 和 &lt;code&gt;phx-focus&lt;/code&gt; 绑定，可以将焦点和模糊事件绑定到发出此类事件的DOM元素，例如：</target>
        </trans-unit>
        <trans-unit id="24c5b95a720b25dc4f067d270d142d5db32666a5" translate="yes" xml:space="preserve">
          <source>Focus/Blur Events</source>
          <target state="translated">焦点/模糊事件</target>
        </trans-unit>
        <trans-unit id="eed803ddcc9363811db01399b52e2893f0aedd1d" translate="yes" xml:space="preserve">
          <source>Follow the Phoenix Framework on &lt;a href=&quot;https://twitter.com/elixirphoenix&quot;&gt;Twitter&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;https://twitter.com/elixirphoenix&quot;&gt;Twitter上&lt;/a&gt;遵循Phoenix框架。</target>
        </trans-unit>
        <trans-unit id="bc10d408aec45d7fef9a9b92519db1255ca722e4" translate="yes" xml:space="preserve">
          <source>Follows the redirect from a &lt;code&gt;render_*&lt;/code&gt; action.</source>
          <target state="translated">遵循来自 &lt;code&gt;render_*&lt;/code&gt; 操作的重定向。</target>
        </trans-unit>
        <trans-unit id="6d702e59f6da409d30f01ac24ca19a1531facd89" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;has_many :through&lt;/code&gt; - it behaves similarly to a regular &lt;code&gt;has_many&lt;/code&gt; but note that the IDs received are of the last association. Imagine for example a post has many comments and each comment has an author. Therefore, a post may have many comments_authors, written as &lt;code&gt;has_many :comments_authors, through: [:comments, :author]&lt;/code&gt;. When preloading authors with a custom function via &lt;code&gt;:comments_authors&lt;/code&gt;, the function will receive the IDs of the authors as the last step</source>
          <target state="translated">对于 &lt;code&gt;has_many :through&lt;/code&gt; 它的行为与常规 &lt;code&gt;has_many&lt;/code&gt; 类似，但请注意，收到的ID具有最后的关联。想象一下，例如，一个帖子有很多评论，每个评论都有一个作者。因此，后期可能有许多comments_authors，写成 &lt;code&gt;has_many :comments_authors, through: [:comments, :author]&lt;/code&gt; 。通过 &lt;code&gt;:comments_authors&lt;/code&gt; 用自定义函数预加载作者时，该函数将接收作者的ID作为最后一步</target>
        </trans-unit>
        <trans-unit id="ad82d88c263f197ac3ab09327378400e810ffc46" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;has_many :through&lt;/code&gt; - it behaves similarly to a regular &lt;code&gt;has_many&lt;/code&gt; but note that the IDs received are the ones from the closest parent and not the furthest one. Imagine for example a post has many comments and each comment has an author. Therefore, a post may have many comments_authors, written as &lt;code&gt;has_many :comments_authors, through: [:comments, :author]&lt;/code&gt;. When preloading authors with a custom function via &lt;code&gt;:comments_authors&lt;/code&gt;, the function will receive the IDs of the comments and not of the posts. That&amp;rsquo;s because through associations are still loaded step by step</source>
          <target state="translated">对于 &lt;code&gt;has_many :through&lt;/code&gt; 它的行为与常规 &lt;code&gt;has_many&lt;/code&gt; 相似，但请注意，收到的ID是来自最近的父ID，而不是最远的ID。想象一下，例如，一个帖子有很多评论，每个评论都有一个作者。因此，一个帖子可能有许多 &lt;code&gt;has_many :comments_authors, through: [:comments, :author]&lt;/code&gt; 写成的has_many：comments_authors的comment_authors：[：comments，：author]。通过 &lt;code&gt;:comments_authors&lt;/code&gt; 使用自定义功能预加载作者时，该功能将接收评论的ID，而不是帖子的ID。那是因为通过关联仍然会逐步加载</target>
        </trans-unit>
        <trans-unit id="ffb76a65010dd96e5304011352d8d89308a77ae9" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;has_many&lt;/code&gt; and &lt;code&gt;belongs_to&lt;/code&gt; - the function receives the IDs of the parent association and it must return a list of maps or structs with the associated entries. The associated map/struct must contain the &quot;foreign_key&quot; field. For example, if a post has many comments, when preloading the comments with a custom function, the function will receive a list of &quot;post_ids&quot; as argument and it must return maps or structs representing the comments. The maps/structs must include the &lt;code&gt;:post_id&lt;/code&gt; field</source>
          <target state="translated">对于 &lt;code&gt;has_many&lt;/code&gt; 和 &lt;code&gt;belongs_to&lt;/code&gt; -函数接收父关联的ID，并且它必须返回带有关联条目的映射或结构列表。关联的映射/结构必须包含&amp;ldquo; foreign_key&amp;rdquo;字段。例如，如果一个帖子包含很多注释，则在使用自定义函数预加载注释时，该函数将收到&amp;ldquo; post_ids&amp;rdquo;列表作为参数，并且它必须返回表示注释的映射或结构。地图/结构必须包含 &lt;code&gt;:post_id&lt;/code&gt; 字段</target>
        </trans-unit>
        <trans-unit id="63600b6a2d1ec5af0fc9e5cad2bc261fd1af2888" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;has_many&lt;/code&gt; and &lt;code&gt;belongs_to&lt;/code&gt; - the function receives the IDs of the parent association and it must return a list of maps or structs with the associated entries. The associated map/struct must contain the &amp;ldquo;foreign_key&amp;rdquo; field. For example, if a post has many comments, when preloading the comments with a custom function, the function will receive a list of &amp;ldquo;post_ids&amp;rdquo; as argument and it must return maps or structs representing the comments. The maps/structs must include the &lt;code&gt;:post_id&lt;/code&gt; field</source>
          <target state="translated">对于 &lt;code&gt;has_many&lt;/code&gt; 和 &lt;code&gt;belongs_to&lt;/code&gt; -该函数接收父关联的ID，并且它必须返回带有关联条目的映射或结构列表。关联的映射/结构必须包含&amp;ldquo; foreign_key&amp;rdquo;字段。例如，如果帖子中有很多评论，则在使用自定义函数预加载评论时，该函数将接收&amp;ldquo; post_ids&amp;rdquo;列表作为参数，并且它必须返回表示评论的映射或结构。地图/结构必须包含 &lt;code&gt;:post_id&lt;/code&gt; 字段</target>
        </trans-unit>
        <trans-unit id="c8a4d730c3f703463989c4fcb32605397783f881" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;many_to_many&lt;/code&gt; - the function receives the IDs of the parent association and it must return a tuple with the parent id as first element and the association map or struct as second. For example, if a post has many tags, when preloading the tags with a custom function, the function will receive a list of &quot;post_ids&quot; as argument and it must return a tuple in the format of &lt;code&gt;{post_id, tag}&lt;/code&gt;</source>
          <target state="translated">对于 &lt;code&gt;many_to_many&lt;/code&gt; -该函数接收父关联的ID，并且它必须返回一个元组，其父ID作为第一个元素，而关联映射或struct作为第二个元素。例如，如果一个帖子包含许多标签，则在使用自定义函数预加载标签时，该函数将收到&amp;ldquo; post_ids&amp;rdquo;列表作为参数，并且必须返回 &lt;code&gt;{post_id, tag}&lt;/code&gt; 格式的元组</target>
        </trans-unit>
        <trans-unit id="354d0273d07d15de05f231450470ee0eae6bac34" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;many_to_many&lt;/code&gt; - the function receives the IDs of the parent association and it must return a tuple with the parent id as first element and the association map or struct as second. For example, if a post has many tags, when preloading the tags with a custom function, the function will receive a list of &amp;ldquo;post_ids&amp;rdquo; as argument and it must return a tuple in the format of &lt;code&gt;{post_id, tag}&lt;/code&gt;</source>
          <target state="translated">对于 &lt;code&gt;many_to_many&lt;/code&gt; -该函数接收父级关联的ID，并且它必须返回一个以父级ID为第一个元素，关联映射或结构为第二个的元组。例如，如果一个帖子有很多标签，则在使用自定义函数预加载标签时，该函数将收到&amp;ldquo; post_ids&amp;rdquo;列表作为参数，并且必须返回 &lt;code&gt;{post_id, tag}&lt;/code&gt; 格式的元组</target>
        </trans-unit>
        <trans-unit id="ab02655daa3427bb066f0ca4f1a125c696573e23" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;{:array, CustomType}&lt;/code&gt; or &lt;code&gt;{:map, CustomType}&lt;/code&gt; the returned keyword list will be erased and the default error will be shown.</source>
          <target state="translated">对于 &lt;code&gt;{:array, CustomType}&lt;/code&gt; 或 &lt;code&gt;{:map, CustomType}&lt;/code&gt; ，返回的关键字列表将被删除，并显示默认错误。</target>
        </trans-unit>
        <trans-unit id="bf7cc044c113cf8e5e48b53bc0a83f10daddc97b" translate="yes" xml:space="preserve">
          <source>For a complete guide on HTTPS and best pratices, see &lt;a href=&quot;https&quot;&gt;our Plug HTTPS Guide&lt;/a&gt;.</source>
          <target state="translated">有关HTTPS和最佳实践的完整指南，请参见《&lt;a href=&quot;https&quot;&gt;Plug HTTPS指南》&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="20523aba079cc2fef42cacf60a4081c3373e6471" translate="yes" xml:space="preserve">
          <source>For a given topic, the client may only establish a single channel subscription. When attempting to create a duplicate subscription, &lt;a href=&quot;#dispatch/3&quot;&gt;&lt;code&gt;dispatch/3&lt;/code&gt;&lt;/a&gt; will close the existing channel, log a warning, and spawn a new channel for the topic. When sending the &lt;code&gt;&quot;phx_close&quot;&lt;/code&gt; event from the closed channel, the message will contain the &lt;code&gt;ref&lt;/code&gt; the client sent when joining. This allows the client to uniquely identify &lt;code&gt;&quot;phx_close&quot;&lt;/code&gt; and &lt;code&gt;&quot;phx_error&quot;&lt;/code&gt; messages when force-closing a channel on duplicate joins.</source>
          <target state="translated">对于给定的主题，客户端只能建立单个频道订阅。尝试创建重复订阅时，&lt;a href=&quot;#dispatch/3&quot;&gt; &lt;code&gt;dispatch/3&lt;/code&gt; &lt;/a&gt;将关闭现有频道，记录警告，并为该主题生成一个新频道。从关闭的通道发送 &lt;code&gt;&quot;phx_close&quot;&lt;/code&gt; 事件时，该消息将包含加入时客户端发送的 &lt;code&gt;ref&lt;/code&gt; 。这样，当在重复连接上强制关闭通道时，客户端可以唯一地标识 &lt;code&gt;&quot;phx_close&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;phx_error&quot;&lt;/code&gt; 消息。</target>
        </trans-unit>
        <trans-unit id="4bade354c9ba82812949a02768fabd726d9aaec1" translate="yes" xml:space="preserve">
          <source>For a keyword query the &lt;code&gt;:join&lt;/code&gt; keyword can be changed to &lt;code&gt;:inner_join&lt;/code&gt;, &lt;code&gt;:left_join&lt;/code&gt;, &lt;code&gt;:right_join&lt;/code&gt;, &lt;code&gt;:cross_join&lt;/code&gt;, &lt;code&gt;:full_join&lt;/code&gt;, &lt;code&gt;:inner_lateral_join&lt;/code&gt; or &lt;code&gt;:left_lateral_join&lt;/code&gt;. &lt;code&gt;:join&lt;/code&gt; is equivalent to &lt;code&gt;:inner_join&lt;/code&gt;.</source>
          <target state="translated">对于关键字查询，可以将 &lt;code&gt;:join&lt;/code&gt; 关键字更改为 &lt;code&gt;:inner_join&lt;/code&gt; ， &lt;code&gt;:left_join&lt;/code&gt; ， &lt;code&gt;:right_join&lt;/code&gt; ， &lt;code&gt;:cross_join&lt;/code&gt; ， &lt;code&gt;:full_join&lt;/code&gt; ， &lt;code&gt;:inner_lateral_join&lt;/code&gt; 或 &lt;code&gt;:left_lateral_join&lt;/code&gt; 。 &lt;code&gt;:join&lt;/code&gt; 等效于 &lt;code&gt;:inner_join&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="97fb5f4da825119777d3cd4c3b7b5a1dc6727a3a" translate="yes" xml:space="preserve">
          <source>For a list of valid content mime-types, please see the &lt;a href=&quot;https://github.com/elixir-plug/mime/blob/master/priv/mime.types&quot;&gt;mime.types&lt;/a&gt; documentation from the mime type library.</source>
          <target state="translated">有关有效内容mime类型的列表，请参阅mime类型库中的&lt;a href=&quot;https://github.com/elixir-plug/mime/blob/master/priv/mime.types&quot;&gt;mime.types&lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="13fa3b4c889e783b80aba2740c5d064e7244dcf1" translate="yes" xml:space="preserve">
          <source>For a post to match in the above example it must be visited at least as much as the average post in all categories.</source>
          <target state="translated">在上面的例子中,一个帖子的访问量必须至少和所有类别的平均帖子一样多。</target>
        </trans-unit>
        <trans-unit id="092362cd5c107f7d58b5a88b716fd6f320a6243c" translate="yes" xml:space="preserve">
          <source>For a regular application:</source>
          <target state="translated">对于常规应用。</target>
        </trans-unit>
        <trans-unit id="673a530e87febb813a7a46d378a8f00c25c57993" translate="yes" xml:space="preserve">
          <source>For actual upserts, where an insert or update may happen, the situation is slightly more complex, as the database does not actually inform us if an insert or update happened. Let&amp;rsquo;s insert a post with the same title but use a query to update the body column in case of conflicts:</source>
          <target state="translated">对于可能发生插入或更新的实际ups，情况会稍微复杂一些，因为数据库实际上不会通知我们是否发生了插入或更新。让我们插入具有相同标题的帖子，但是在发生冲突的情况下使用查询来更新正文列：</target>
        </trans-unit>
        <trans-unit id="32ff300c68a5dfad5204cf92bbf5f1e21f8c1612" translate="yes" xml:space="preserve">
          <source>For actual upserts, where an insert or update may happen, the situation is slightly more complex, as the database does not actually inform us if an insert or update happened. Let's insert a post with the same title but use a query to update the body column in case of conflicts:</source>
          <target state="translated">对于实际的upserts,可能会发生插入或更新,情况稍微复杂一些,因为数据库实际上并没有通知我们是否发生了插入或更新。让我们插入一篇标题相同的文章,但使用查询来更新正文列,以防发生冲突。</target>
        </trans-unit>
        <trans-unit id="c3c16917a25c77cede6337fcf8da5b4b380b867e" translate="yes" xml:space="preserve">
          <source>For all kinds of page loading events, all but &lt;code&gt;&quot;element&quot;&lt;/code&gt; will receive an additional &lt;code&gt;to&lt;/code&gt; key in the info metadata pointing to the href associated with the page load.</source>
          <target state="translated">对于所有类型的页面加载事件，除 &lt;code&gt;&quot;element&quot;&lt;/code&gt; 之外的所有事件都将收到一个额外 &lt;code&gt;to&lt;/code&gt; key，以键入指向与页面加载关联的href的信息元数据。</target>
        </trans-unit>
        <trans-unit id="7a13facc0573c1f5cd17a8b774fa022f5c62da50" translate="yes" xml:space="preserve">
          <source>For an umbrella application:</source>
          <target state="translated">对于雨伞的应用。</target>
        </trans-unit>
        <trans-unit id="962775a35a8e3effc603b8ed3f7045d2def77954" translate="yes" xml:space="preserve">
          <source>For associations with cardinality one, &lt;code&gt;nil&lt;/code&gt; can be used to remove the existing entry. For associations with many entries, an empty list may be given instead.</source>
          <target state="translated">对于基数为1的关联，可以使用 &lt;code&gt;nil&lt;/code&gt; 删除现有条目。对于具有许多条目的关联，可能会给出一个空列表。</target>
        </trans-unit>
        <trans-unit id="0d675f9e27fb9e8e0ca2759e0f26a064b102571e" translate="yes" xml:space="preserve">
          <source>For both suites we&amp;rsquo;ve specified ceritifcate curves secp256r1, ecp384r1 and secp521r1. Since OWASP doesn&amp;rsquo;t perscribe curves we&amp;rsquo;ve based the selection on the following Mozilla recommendations: https://wiki.mozilla.org/Security/Server_Side_TLS#Cipher_names_correspondence_table</source>
          <target state="translated">对于这两个套件，我们都指定了曲线secp256r1，ecp384r1和secp521r1。由于OWASP不会绘制曲线，因此我们基于以下Mozilla建议进行了选择：https://wiki.mozilla.org/Security/Server_Side_TLS#Cipher_names_correspondence_table</target>
        </trans-unit>
        <trans-unit id="eb99d644dfcf16338551e4823aea9b3594dc6c41" translate="yes" xml:space="preserve">
          <source>For both suites we've specified certificate curves secp256r1, ecp384r1 and secp521r1. Since OWASP doesn't prescribe curves we've based the selection on &lt;a href=&quot;https://wiki.mozilla.org/Security/Server_Side_TLS#Cipher_names_correspondence_table&quot;&gt;Mozilla's recommendations&lt;/a&gt;</source>
          <target state="translated">对于这两个套件，我们都指定了证书曲线secp256r1，ecp384r1和secp521r1。由于OWASP并未规定曲线，因此我们基于&lt;a href=&quot;https://wiki.mozilla.org/Security/Server_Side_TLS#Cipher_names_correspondence_table&quot;&gt;Mozilla的建议进行&lt;/a&gt;了选择</target>
        </trans-unit>
        <trans-unit id="3f6bbe3b038afe3e8f9ff34c83ffef5985f40d11" translate="yes" xml:space="preserve">
          <source>For calendar types with and without microseconds, the precision is enforced when persisting to the DB. For example, casting &lt;code&gt;~T[09:00:00]&lt;/code&gt; as &lt;code&gt;:time_usec&lt;/code&gt; will succeed and result in &lt;code&gt;~T[09:00:00.000000]&lt;/code&gt;, but persisting a type without microseconds as &lt;code&gt;:time_usec&lt;/code&gt; will fail. Similarly, casting &lt;code&gt;~T[09:00:00.000000]&lt;/code&gt; as &lt;code&gt;:time&lt;/code&gt; will succeed, but persisting will not. This is the same behaviour as seen in other types, where casting has to be done explicitly and is never performed implicitly when loading from or dumping to the database.</source>
          <target state="translated">对于具有和不具有微秒的日历类型，在保留到数据库时将强制执行精度。例如，将 &lt;code&gt;:time_usec&lt;/code&gt; &lt;code&gt;~T[09:00:00]&lt;/code&gt; 强制转换为：time_usec将会成功，并导致〜T &lt;code&gt;~T[09:00:00.000000]&lt;/code&gt; ，但是将类型保留为不带微秒的类型，因为 &lt;code&gt;:time_usec&lt;/code&gt; 将会失败。同样，将 &lt;code&gt;~T[09:00:00.000000]&lt;/code&gt; 为 &lt;code&gt;:time&lt;/code&gt; 会成功，但持久化不会成功。这与其他类型中的行为相同，在其他类型中，必须显式进行强制转换，而从数据库中加载或转储至数据库时，决不能隐式执行。</target>
        </trans-unit>
        <trans-unit id="2973a602c365a52563d58be264616b79cb7c18bd" translate="yes" xml:space="preserve">
          <source>For convenience, trims whitespace at the end of the token. Returns &lt;code&gt;false&lt;/code&gt; if the token is invalid.</source>
          <target state="translated">为了方便起见，在令牌末尾修剪空白。如果令牌无效，则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a4f08b434d1b24246ad947903380678d6f4a6b89" translate="yes" xml:space="preserve">
          <source>For details, see &lt;a href=&quot;https://hexdocs.pm/telemetry/&quot;&gt;the telemetry documentation&lt;/a&gt;.</source>
          <target state="translated">有关详细信息，请参阅&lt;a href=&quot;https://hexdocs.pm/telemetry/&quot;&gt;遥测文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="48ba684854b00976fec853af461168b1953a4696" translate="yes" xml:space="preserve">
          <source>For developers interested in real-time visualizations for their Telemetry metrics, you may be interested in installing &lt;a href=&quot;https://hexdocs.pm/phoenix_live_dashboard&quot;&gt;&lt;code&gt;LiveDashboard&lt;/code&gt;&lt;/a&gt;. LiveDashboard acts as a Telemetry.Metrics reporter to render your data as beautiful, real-time charts on the dashboard.</source>
          <target state="translated">对于对遥测度量标准实时可视化感兴趣的开发人员，您可能对安装&lt;a href=&quot;https://hexdocs.pm/phoenix_live_dashboard&quot;&gt; &lt;code&gt;LiveDashboard&lt;/code&gt; &lt;/a&gt;感兴趣。LiveDashboard充当Telemetry.Metrics报告程序，可将您的数据呈现为仪表板上的精美实时图表。</target>
        </trans-unit>
        <trans-unit id="514d7ef5662d3b01249f86c0c31d4d15ac5d464f" translate="yes" xml:space="preserve">
          <source>For dynamically configuring the endpoint, such as loading data from environment variables or configuration files, Phoenix invokes the &lt;code&gt;init/2&lt;/code&gt; callback on the endpoint, passing a &lt;code&gt;:supervivsor&lt;/code&gt; atom as first argument and the endpoint configuration as second.</source>
          <target state="translated">为了动态配置端点（例如从环境变量或配置文件加载数据），Phoenix会在端点上调用 &lt;code&gt;init/2&lt;/code&gt; 回调，并将 &lt;code&gt;:supervivsor&lt;/code&gt; 原子作为第一个参数，并将端点配置作为第二个参数。</target>
        </trans-unit>
        <trans-unit id="2f8c675d666ad72551f01bb83bb87c5a8e014d43" translate="yes" xml:space="preserve">
          <source>For dynamically configuring the endpoint, such as loading data from environment variables or configuration files, Phoenix invokes the &lt;code&gt;init/2&lt;/code&gt; callback on the endpoint, passing the atom &lt;code&gt;:supervisor&lt;/code&gt; as the first argument and the endpoint configuration as second.</source>
          <target state="translated">为了动态配置端点（例如从环境变量或配置文件加载数据），Phoenix会在端点上调用 &lt;code&gt;init/2&lt;/code&gt; 回调，并将atom &lt;code&gt;:supervisor&lt;/code&gt; 作为第一个参数，并将端点配置作为第二个参数。</target>
        </trans-unit>
        <trans-unit id="5709951e137fc3ffdad400784eca314b6bb7339b" translate="yes" xml:space="preserve">
          <source>For each LiveView in the root of a template, &lt;a href=&quot;#c:mount/3&quot;&gt;&lt;code&gt;mount/3&lt;/code&gt;&lt;/a&gt; is invoked twice: once to do the initial page load and again to establish the live socket.</source>
          <target state="translated">对于模板根目录中的每个LiveView，都会调用&lt;a href=&quot;#c:mount/3&quot;&gt; &lt;code&gt;mount/3&lt;/code&gt; &lt;/a&gt;两次：一次执行初始页面加载，再一次建立活动套接字。</target>
        </trans-unit>
        <trans-unit id="83f8140a10617f209a9bbd2bf22394889c256c68" translate="yes" xml:space="preserve">
          <source>For each file under the given input path, Phoenix will generate a digest and also compress in &lt;code&gt;.gz&lt;/code&gt; format. The filename and its digest will be used to generate the cache manifest file. It also avoids duplication, checking for already digested files.</source>
          <target state="translated">对于给定输入路径下的每个文件，Phoenix将生成一个摘要，并以 &lt;code&gt;.gz&lt;/code&gt; 格式进行压缩。文件名及其摘要将用于生成缓存清单文件。它还避免重复，检查已摘要的文件。</target>
        </trans-unit>
        <trans-unit id="18d9a991082460c8bd6c583a8988c97a924a27a3" translate="yes" xml:space="preserve">
          <source>For each message received from the client, the transport must call &lt;a href=&quot;#c:handle_in/2&quot;&gt;&lt;code&gt;handle_in/2&lt;/code&gt;&lt;/a&gt; on the socket. For each informational message the transport receives, it should call &lt;a href=&quot;#c:handle_info/2&quot;&gt;&lt;code&gt;handle_info/2&lt;/code&gt;&lt;/a&gt; on the socket.</source>
          <target state="translated">对于从客户端收到的每个消息，传输必须在套接字上调用&lt;a href=&quot;#c:handle_in/2&quot;&gt; &lt;code&gt;handle_in/2&lt;/code&gt; &lt;/a&gt;。对于传输收到的每条参考消息，它都应在套接字上调用&lt;a href=&quot;#c:handle_info/2&quot;&gt; &lt;code&gt;handle_info/2&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="447756883e51de19d636b53e26dcc7baf4d56194" translate="yes" xml:space="preserve">
          <source>For each request, Phoenix checks if any of the modules previously compiled requires recompilation via &lt;code&gt;__phoenix_recompile__?/0&lt;/code&gt; and then calls &lt;code&gt;mix compile&lt;/code&gt; for sources exclusive to the &lt;code&gt;web&lt;/code&gt; directory.</source>
          <target state="translated">对于每个请求，Phoenix都会检查以前编译过的任何模块是否需要通过 &lt;code&gt;__phoenix_recompile__?/0&lt;/code&gt; 重新编译，然后针对特定于 &lt;code&gt;web&lt;/code&gt; 目录的源调用 &lt;code&gt;mix compile&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d6fc0dc53e4e25ba42c0881b47aaaa466ec949e0" translate="yes" xml:space="preserve">
          <source>For each request, Phoenix goes through all modules and checks if any of them implement a &lt;code&gt;__phoenix_recompile__?/0&lt;/code&gt; function. If they do and it returns true, the module source file is touched, forcing it to be recompiled. For this functionality to work, Phoenix requires you to add the &lt;code&gt;:phoenix&lt;/code&gt; compiler to your list of compilers:</source>
          <target state="translated">对于每个请求，Phoenix都会遍历所有模块，并检查它们是否实现了 &lt;code&gt;__phoenix_recompile__?/0&lt;/code&gt; 函数。如果它们这样做并且返回true，则将触碰模块源文件，迫使其重新编译。为了使用此功能，Phoenix要求您将 &lt;code&gt;:phoenix&lt;/code&gt; 编译器添加到编译器列表中：</target>
        </trans-unit>
        <trans-unit id="358da0baaab9435646b120f9050f3589abaf1432" translate="yes" xml:space="preserve">
          <source>For encoding and decoding of embeds, please read the docs for &lt;a href=&quot;#embeds_one/3&quot;&gt;&lt;code&gt;embeds_one/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关嵌入的编码和解码，请阅读&lt;a href=&quot;#embeds_one/3&quot;&gt; &lt;code&gt;embeds_one/3&lt;/code&gt; &lt;/a&gt;的文档。</target>
        </trans-unit>
        <trans-unit id="24fd662edb2d9324292b3a643376afdaa9efedac" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;field :foo, :string&lt;/code&gt; behaves the same for every field. On the other hand, &lt;code&gt;field :foo, Ecto.Enum, values: [:foo, :bar, :baz]&lt;/code&gt; will likely have a different set of values per field.</source>
          <target state="translated">例如， &lt;code&gt;field :foo, :string&lt;/code&gt; 在每个字段中的行为都相同。另一方面， &lt;code&gt;field :foo, Ecto.Enum, values: [:foo, :bar, :baz]&lt;/code&gt; 可能每个字段具有一组不同的值。</target>
        </trans-unit>
        <trans-unit id="f485276f616bd26adc829af0ee47c57b85d1ff61" translate="yes" xml:space="preserve">
          <source>For example, PostgreSQL will store embeds on top of JSONB columns, which means types in embedded schemas won&amp;rsquo;t go through the usual dump-&amp;gt;DB-&amp;gt;load cycle but rather encode-&amp;gt;DB-&amp;gt;decode-&amp;gt;cast. This means that, when using embedded schemas with databases like PG or MySQL, make sure all of your types can be JSON encoded/decoded correctly. Ecto provides this guarantee for all built-in types.</source>
          <target state="translated">例如，PostgreSQL将在JSONB列的顶部存储嵌入内容，这意味着嵌入式模式中的类型将不会经历通常的dump-&amp;gt; DB-&amp;gt; load周期，而是会经历encode-&amp;gt; DB-&amp;gt; decode-&amp;gt; cast。这意味着，当将嵌入式模式与PG或MySQL等数据库一起使用时，请确保所有类型都可以正确进行JSON编码/解码。Ecto为所有内置类型提供此保证。</target>
        </trans-unit>
        <trans-unit id="99769121a189d81523d323cd7f2adb019f95f488" translate="yes" xml:space="preserve">
          <source>For example, PostgreSQL will store embeds on top of JSONB columns, which means types in embedded schemas won't go through the usual dump-&amp;gt;DB-&amp;gt;load cycle but rather encode-&amp;gt;DB-&amp;gt;decode-&amp;gt;cast. This means that, when using embedded schemas with databases like PG or MySQL, make sure all of your types can be JSON encoded/decoded correctly. Ecto provides this guarantee for all built-in types.</source>
          <target state="translated">例如，PostgreSQL将在JSONB列的顶部存储嵌入内容，这意味着嵌入式模式中的类型将不会经历通常的dump-&amp;gt; DB-&amp;gt; load周期，而是会经历encode-&amp;gt; DB-&amp;gt; decode-&amp;gt; cast。这意味着，当将嵌入式模式与PG或MySQL等数据库一起使用时，请确保所有类型都可以正确进行JSON编码/解码。Ecto为所有内置类型提供此保证。</target>
        </trans-unit>
        <trans-unit id="62d7117a3b1a1721c1d5300823fd83a08ec0eb56" translate="yes" xml:space="preserve">
          <source>For example, a developer using MySQL may write:</source>
          <target state="translated">例如,使用MySQL的开发人员可以写。</target>
        </trans-unit>
        <trans-unit id="7c337aa19ed63d216ce92de1e0fb06effb6d7cd3" translate="yes" xml:space="preserve">
          <source>For example, assuming the &lt;code&gt;conditions&lt;/code&gt; variable defined in the previous section, the following is forbidden because it is not at the root of a &lt;code&gt;where&lt;/code&gt;:</source>
          <target state="translated">例如，假设在上一节中定义了 &lt;code&gt;conditions&lt;/code&gt; 变量，那么以下内容将被禁止，因为它不是 &lt;code&gt;where&lt;/code&gt; 的根：</target>
        </trans-unit>
        <trans-unit id="17b027db9ca188624206f2420c11e61eb142d7dd" translate="yes" xml:space="preserve">
          <source>For example, if &lt;code&gt;:on_conflict&lt;/code&gt; is set to &lt;code&gt;:nothing&lt;/code&gt;, Postgres will return 0 if no new entry was added while MySQL will still return the amount of entries attempted to be inserted, even if no entry was added. Even worse, if &lt;code&gt;:on_conflict&lt;/code&gt; is query, MySQL will return the number of attempted entries plus the number of entries modified by the UPDATE query.</source>
          <target state="translated">例如，如果 &lt;code&gt;:on_conflict&lt;/code&gt; 设置为 &lt;code&gt;:nothing&lt;/code&gt; ，则如果未添加任何新条目，则Postgres将返回0，而MySQL仍将返回尝试插入的条目数量，即使未添加任何条目也是如此。更糟糕的是，如果 &lt;code&gt;:on_conflict&lt;/code&gt; 是查询，MySQL将返回尝试的条目数加上UPDATE查询修改的条目数。</target>
        </trans-unit>
        <trans-unit id="3ad70964b6903a03710c190caf3acb0e49049573" translate="yes" xml:space="preserve">
          <source>For example, if a plug called &lt;code&gt;my_plug&lt;/code&gt; needs to store a &lt;code&gt;:hello&lt;/code&gt; key, it would store it as &lt;code&gt;:my_plug_hello&lt;/code&gt;:</source>
          <target state="translated">例如，如果名为 &lt;code&gt;my_plug&lt;/code&gt; 的插件需要存储 &lt;code&gt;:hello&lt;/code&gt; 密钥，则将其存储为 &lt;code&gt;:my_plug_hello&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="c680c9e8f22ccafd93e44ffae3a885cef74b7437" translate="yes" xml:space="preserve">
          <source>For example, if some plug needs to store a &lt;code&gt;:hello&lt;/code&gt; key, it should do so as &lt;code&gt;:plug_hello&lt;/code&gt;:</source>
          <target state="translated">例如，如果某些插件需要存储 &lt;code&gt;:hello&lt;/code&gt; 密钥，则应将其存储为 &lt;code&gt;:plug_hello&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="82eebeb72ec6bad21c5433a1a0c1a4c3b29d9905" translate="yes" xml:space="preserve">
          <source>For example, if the following &lt;a href=&quot;https://hexdocs.pm/telemetry_metrics/Telemetry.Metrics.html#summary/2&quot;&gt;&lt;code&gt;Telemetry.Metrics.summary/2&lt;/code&gt;&lt;/a&gt; call is added to the &lt;code&gt;metrics/0&lt;/code&gt; function of your Telemetry supervisor:</source>
          <target state="translated">例如，如果以下&lt;a href=&quot;https://hexdocs.pm/telemetry_metrics/Telemetry.Metrics.html#summary/2&quot;&gt; &lt;code&gt;Telemetry.Metrics.summary/2&lt;/code&gt; &lt;/a&gt;调用被添加到Telemetry主管的 &lt;code&gt;metrics/0&lt;/code&gt; 函数中：</target>
        </trans-unit>
        <trans-unit id="006def01634026aded69a8ee382525c00514fe89" translate="yes" xml:space="preserve">
          <source>For example, if the following input triggered a change event:</source>
          <target state="translated">例如,如果以下输入触发了一个变化事件。</target>
        </trans-unit>
        <trans-unit id="e00b78c86932b468ed1c0282ff390e363c8b55c0" translate="yes" xml:space="preserve">
          <source>For example, if you are building an application where a user may belong to one or more organizations, when accessing the organization page, you may want to check that the user has access to it like this:</source>
          <target state="translated">例如,如果你正在构建一个用户可能属于一个或多个组织的应用程序,当访问组织页面时,你可能希望像这样检查用户是否有访问权。</target>
        </trans-unit>
        <trans-unit id="0e32ff022a18e7a5dfb1a6022b7b3dbe20b34556" translate="yes" xml:space="preserve">
          <source>For example, if you are rendering SVG, the SVG will be interpreted as HTML. This may work just fine for most components but you may run into corner cases. For example, the &lt;code&gt;&amp;lt;image&amp;gt;&lt;/code&gt; SVG tag may be rewritten to the &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; tag, since &lt;code&gt;&amp;lt;image&amp;gt;&lt;/code&gt; is an obsolete HTML tag.</source>
          <target state="translated">例如，如果要渲染SVG，则SVG将被解释为HTML。对于大多数组件来说，这可能工作得很好，但是您可能会遇到一些麻烦的情况。例如，由于 &lt;code&gt;&amp;lt;image&amp;gt;&lt;/code&gt; 是过时的HTML标签，因此 &lt;code&gt;&amp;lt;image&amp;gt;&lt;/code&gt; SVG标签可以重写为 &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; 标签。</target>
        </trans-unit>
        <trans-unit id="b67a51b0929c3bd20516b18e930c9d65453e2f33" translate="yes" xml:space="preserve">
          <source>For example, if you are running your application behind a proxy, the browser will send a request to the proxy with &lt;code&gt;www.example.com&lt;/code&gt; but the proxy will request you using an internal IP. In such cases, it is common for proxies to attach information such as &lt;code&gt;&quot;x-forwarded-host&quot; that contains the original
host.

This may also happen on redirects. If you have a POST request to&lt;/code&gt;foo.example.com&lt;code&gt;that redirects with status&lt;/code&gt;bar.example.com&lt;code&gt;with status 407. The token and
the server will be running on different versions.

You can pass the&lt;/code&gt;:allow_hosts&lt;code&gt;option to control any host that you may want
to allow. The values in&lt;/code&gt;:allow_hosts&lt;code&gt;may either be a full host name or a
host suffix. For example:&lt;/code&gt;[&amp;ldquo;www.example.com&amp;rdquo;, &amp;ldquo;.subdomain.example.com&amp;rdquo;]&lt;code&gt;will allow the exact host of&lt;/code&gt;&amp;rdquo;www.example.com&amp;rdquo;&lt;code&gt;and any host that ends with&lt;/code&gt;&amp;rdquo;.subdomain.example.com&amp;rdquo;&lt;code&gt;.

## Options

  *&lt;/code&gt;:session_key&lt;code&gt;- the name of the key in session to store the token under
  *&lt;/code&gt;:allow_hosts&lt;code&gt;- a list with hosts to allow on cross-host tokens
  *&lt;/code&gt;:with&lt;code&gt;- should be one of&lt;/code&gt;:exception&lt;code&gt;or&lt;/code&gt;:clear_session&lt;code&gt;. Defaults to&lt;/code&gt;:exception&lt;code&gt;.
    *&lt;/code&gt;:exception&lt;code&gt;-  for invalid requests, this plug will raise
    [&lt;/code&gt;Plug.CSRFProtection.InvalidCSRFTokenError&lt;code&gt;](Plug.CSRFProtection.InvalidCSRFTokenError.html).
    *&lt;/code&gt;:clear_session&lt;code&gt;-  for invalid requests, this plug will set an empty
    session for only this request. Also any changes to the session during this
    request will be ignored.

## Disabling

You may disable this plug by doing&lt;/code&gt;Plug.Conn.put_private(conn, :plug_skip_csrf_protection, true)&lt;code&gt;. This was made
available for disabling [&lt;/code&gt;Plug.CSRFProtection&lt;code&gt;](Plug.CSRFProtection.html#content) in tests and not for dynamically
skipping [&lt;/code&gt;Plug.CSRFProtection&lt;code&gt;](Plug.CSRFProtection.html#content) in production code. If you want specific routes to
skip [&lt;/code&gt;Plug.CSRFProtection&lt;code&gt;](Plug.CSRFProtection.html#content), then use a different stack of plugs for that route that
does not include [&lt;/code&gt;Plug.CSRFProtection`](Plug.CSRFProtection.html#content). ## Examples plug Plug.Session, &amp;hellip; plug :fetch_session plug Plug.CSRFProtection</source>
          <target state="translated">例如，如果您正在代理后运行应用程序，浏览器将通过 &lt;code&gt;www.example.com&lt;/code&gt; 向代理发送请求，但代理将使用内部IP请求您。在这种情况下，代理通常会附加 &lt;code&gt;&quot;x-forwarded-host&quot; that contains the original host. This may also happen on redirects. If you have a POST request to&lt;/code&gt; 信息，例如&amp;ldquo; x-forwarded-host&amp;rdquo;。这也可能在重定向上发生。如果您有对 foo.example.com 的POST请求， &lt;code&gt;that redirects with status&lt;/code&gt; 请求以状态 bar.example.com 重定向，状态 &lt;code&gt;with status 407. The token and the server will be running on different versions. You can pass the&lt;/code&gt; ：allow_hosts &lt;code&gt;option to control any host that you may want to allow. The values in&lt;/code&gt; ：allow_hosts中的值 &lt;code&gt;may either be a full host name or a host suffix. For example:&lt;/code&gt; [&amp;ldquo; www.example.com&amp;rdquo;，&amp;ldquo;。subdomain.example.com&amp;rdquo;] &lt;code&gt;will allow the exact host of&lt;/code&gt; &amp;ldquo; www.example.com&amp;rdquo; 的确切主机 &lt;code&gt;and any host that ends with&lt;/code&gt; &amp;ldquo; .subdomain.example.com&amp;rdquo; 结尾的主机 &lt;code&gt;. ## Options *&lt;/code&gt; ：session_key可以 &lt;code&gt;- the name of the key in session to store the token under *&lt;/code&gt; ：allow_hosts &lt;code&gt;- a list with hosts to allow on cross-host tokens *&lt;/code&gt; ：有 &lt;code&gt;- should be one of&lt;/code&gt; ：异常 &lt;code&gt;or&lt;/code&gt; ：clear_session &lt;code&gt;. Defaults to&lt;/code&gt; ：exception &lt;code&gt;. *&lt;/code&gt; ：exception- &lt;code&gt;- for invalid requests, this plug will raise [&lt;/code&gt; Plug.CSRFProtection.InvalidCSRFTokenError &lt;code&gt;](Plug.CSRFProtection.InvalidCSRFTokenError.html). *&lt;/code&gt; ：clear_session &lt;code&gt;- for invalid requests, this plug will set an empty session for only this request. Also any changes to the session during this request will be ignored. ## Disabling You may disable this plug by doing&lt;/code&gt; Plug.Conn.put_private（conn，：plug_skip_csrf_protection，true）来禁用此插件 &lt;code&gt;. This was made available for disabling [&lt;/code&gt; &lt;code&gt;](Plug.CSRFProtection.html#content) in tests and not for dynamically skipping [&lt;/code&gt; 禁用[ Plug.CSRFProtection ]（Plug.CSRFProtection.html＃content），而不用于动态跳过 &lt;code&gt;](Plug.CSRFProtection.html#content) in production code. If you want specific routes to skip [&lt;/code&gt; [ Plug.CSRFProtection ]（Plug.CSRFProtection.html＃content）。如果您希望特定的路由跳过[ Plug.CSRFProtection &lt;code&gt;](Plug.CSRFProtection.html#content), then use a different stack of plugs for that route that does not include [&lt;/code&gt; Plug.CSRFProtection`]（Plug.CSRFProtection.html＃content）。##示例插件Plug.Session，&amp;hellip;插件：fetch_session插件Plug.CSRFProtection</target>
        </trans-unit>
        <trans-unit id="0e91726d425116538b0449faff1e3e0fef303282" translate="yes" xml:space="preserve">
          <source>For example, if you are running your application behind a proxy, the browser will send a request to the proxy with &lt;code&gt;www.example.com&lt;/code&gt; but the proxy will request you using an internal IP. In such cases, it is common for proxies to attach information such as &lt;code&gt;&quot;x-forwarded-host&quot;&lt;/code&gt; that contains the original host.</source>
          <target state="translated">例如，如果您正在代理后运行应用程序，浏览器将通过 &lt;code&gt;www.example.com&lt;/code&gt; 向代理发送请求，但代理将使用内部IP请求您。在这种情况下，代理通常会附加包含原始主机的信息，例如 &lt;code&gt;&quot;x-forwarded-host&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f1191fda5c146bc7cb8bf9725ef9a87de1ba7566" translate="yes" xml:space="preserve">
          <source>For example, if you are using Phoenix with Gettext and you want to localize the list of months, you can pass &lt;code&gt;:options&lt;/code&gt; to the &lt;code&gt;:month&lt;/code&gt; key:</source>
          <target state="translated">例如，如果您将Phoenix与Gettext一起使用，并且想要对月份列表进行本地化，则可以将 &lt;code&gt;:options&lt;/code&gt; 传递给 &lt;code&gt;:month&lt;/code&gt; 键：</target>
        </trans-unit>
        <trans-unit id="f5c675e9e5c373385484112272b4a043bbd839e6" translate="yes" xml:space="preserve">
          <source>For example, if you don&amp;rsquo;t need all fields to be returned as part of a struct, you can filter it to include only certain fields by using &lt;a href=&quot;#struct/2&quot;&gt;&lt;code&gt;struct/2&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">例如，如果您不需要将所有字段都作为结构的一部分返回，则可以使用&lt;a href=&quot;#struct/2&quot;&gt; &lt;code&gt;struct/2&lt;/code&gt; 将&lt;/a&gt;其过滤为仅包括某些字段：</target>
        </trans-unit>
        <trans-unit id="cc5dc01c081354dfaf44b568f55f3ebe9329dee7" translate="yes" xml:space="preserve">
          <source>For example, if you don&amp;rsquo;t need all fields to be returned or neither need a struct, you can use &lt;a href=&quot;#map/2&quot;&gt;&lt;code&gt;map/2&lt;/code&gt;&lt;/a&gt; to achieve both:</source>
          <target state="translated">例如，如果您不需要返回所有字段或不需要结构，则可以使用&lt;a href=&quot;#map/2&quot;&gt; &lt;code&gt;map/2&lt;/code&gt; &lt;/a&gt;来实现这两者：</target>
        </trans-unit>
        <trans-unit id="c811ae0696ce6f951b2bc3002197b8ae16be70c6" translate="yes" xml:space="preserve">
          <source>For example, if you don't need all fields to be returned as part of a struct, you can filter it to include only certain fields by using &lt;a href=&quot;#struct/2&quot;&gt;&lt;code&gt;struct/2&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">例如，如果您不需要将所有字段都作为结构的一部分返回，则可以使用&lt;a href=&quot;#struct/2&quot;&gt; &lt;code&gt;struct/2&lt;/code&gt; 将&lt;/a&gt;其过滤为仅包括某些字段：</target>
        </trans-unit>
        <trans-unit id="1352717ed362aac86319e5ca0446d68b801172fa" translate="yes" xml:space="preserve">
          <source>For example, if you don't need all fields to be returned or neither need a struct, you can use &lt;a href=&quot;#map/2&quot;&gt;&lt;code&gt;map/2&lt;/code&gt;&lt;/a&gt; to achieve both:</source>
          <target state="translated">例如，如果您不需要返回所有字段或不需要结构，则可以使用&lt;a href=&quot;#map/2&quot;&gt; &lt;code&gt;map/2&lt;/code&gt; &lt;/a&gt;来实现这两者：</target>
        </trans-unit>
        <trans-unit id="faabac0b1b9774ddff9e4dfa11ab8cece152fb06" translate="yes" xml:space="preserve">
          <source>For example, if you perform user authentication and confirmation on every HTTP request via Plugs, such as this:</source>
          <target state="translated">例如,如果你通过Plugs对每个HTTP请求进行用户认证和确认,比如这样。</target>
        </trans-unit>
        <trans-unit id="046786477a40d0ce576e85622a62582fe169703c" translate="yes" xml:space="preserve">
          <source>For example, if you want to provide your own date structures, the type function should return &lt;code&gt;:date&lt;/code&gt;.</source>
          <target state="translated">例如，如果要提供自己的日期结构，则类型函数应返回 &lt;code&gt;:date&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="63f893c204bf57366a50335dff3f7ef0e2a67659" translate="yes" xml:space="preserve">
          <source>For example, if you want to render the &quot;test.html&quot; template from inside our layout, you can invoke &lt;code&gt;render/3&lt;/code&gt; directly from the layout:</source>
          <target state="translated">例如，如果要从布局内部渲染&amp;ldquo; test.html&amp;rdquo;模板，则可以直接从布局中调用 &lt;code&gt;render/3&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="4a490502a537fa70cbfe7862a7fdc9d9d25a4ab0" translate="yes" xml:space="preserve">
          <source>For example, if your database does not support autoincrementing primary keys and requires something like UUID or a RecordID, you can configure and use &lt;code&gt;:binary_id&lt;/code&gt; as your primary key type as follows:</source>
          <target state="translated">例如，如果您的数据库不支持自动递增主键，并且需要诸如UUID或RecordID之类的东西，则可以如下配置和使用 &lt;code&gt;:binary_id&lt;/code&gt; 作为主键类型：</target>
        </trans-unit>
        <trans-unit id="84cde3c3ecfdee20a150817b154d085461422ad2" translate="yes" xml:space="preserve">
          <source>For example, imagine a user has many addresses relationship where post data is sent as follows</source>
          <target state="translated">例如,想象一个用户有很多地址关系,其中帖子数据的发送情况如下所示</target>
        </trans-unit>
        <trans-unit id="df1b9f8c3f5e06f384cb183c3f248319b297f218" translate="yes" xml:space="preserve">
          <source>For example, imagine a user with id &lt;code&gt;123&lt;/code&gt; online from two different devices, as well as a user with id &lt;code&gt;456&lt;/code&gt; online from just one device. The following presence information might be returned:</source>
          <target state="translated">例如，假设有一个ID &lt;code&gt;123&lt;/code&gt; 的用户从两个不同的设备在线，以及一个ID &lt;code&gt;456&lt;/code&gt; 的用户仅从一个设备在线。可能会返回以下状态信息：</target>
        </trans-unit>
        <trans-unit id="886c455d893cac0662c17c0b5a315859b743e334" translate="yes" xml:space="preserve">
          <source>For example, imagine creating a resource and replying with the created record:</source>
          <target state="translated">例如,想象一下,创建一个资源,并用创建的记录来回复。</target>
        </trans-unit>
        <trans-unit id="533f158f4a4f3c3fed2c4251950886b68baf1969" translate="yes" xml:space="preserve">
          <source>For example, imagine you are testing an authentication plug in isolation, but you need to invoke the Endpoint plugs and &lt;code&gt;:browser&lt;/code&gt; pipeline of your Router for session and flash related dependencies:</source>
          <target state="translated">例如，假设您正在测试隔离身份验证插件，但是您需要为与会话和闪存相关的依赖关系调用路由器的Endpoint插件和 &lt;code&gt;:browser&lt;/code&gt; 管道：</target>
        </trans-unit>
        <trans-unit id="24497d20f39de0bd9301b7b9d03a2a9115d64d94" translate="yes" xml:space="preserve">
          <source>For example, imagine you are testing an authentication plug in isolation, but you need to invoke the Endpoint plugs and router pipelines to set up session and flash related dependencies. One option is to invoke an existing route that uses the proper pipelines. You can do so by passing the connection and the router name to &lt;code&gt;bypass_through&lt;/code&gt;:</source>
          <target state="translated">例如，假设您正在测试隔离的身份验证插件，但是您需要调用Endpoint插件和路由器管道来设置与会话和闪存相关的依赖关系。一种选择是调用使用适当管道的现有路由。您可以通过将连接和路由器名称传递给 &lt;code&gt;bypass_through&lt;/code&gt; 来实现：</target>
        </trans-unit>
        <trans-unit id="312cb0dfd039de29c00e0856eca1a9c8f1e81784" translate="yes" xml:space="preserve">
          <source>For example, imagine you have a &lt;code&gt;UserTable&lt;/code&gt; LiveView to show all users in the system and you define it in the router as:</source>
          <target state="translated">例如，假设您有一个 &lt;code&gt;UserTable&lt;/code&gt; LiveView可以显示系统中的所有用户，然后在路由器中将其定义为：</target>
        </trans-unit>
        <trans-unit id="aac8a83570404c4e6f7c186ab35c3410f263360e" translate="yes" xml:space="preserve">
          <source>For example, imagine you have a blog. The URL for a single post is: &quot;/blog/posts/:post_id&quot;. In the post page, you have comments and they are paginated. You use &lt;a href=&quot;phoenix.liveview.helpers#live_patch/2&quot;&gt;&lt;code&gt;live_patch/2&lt;/code&gt;&lt;/a&gt; to update the shown comments every time the user paginates, updating the URL to &quot;/blog/posts/:post_id?page=X&quot;. In this example, you will access &lt;code&gt;&quot;post_id&quot;&lt;/code&gt; on &lt;a href=&quot;phoenix.liveview#c:mount/3&quot;&gt;&lt;code&gt;mount/3&lt;/code&gt;&lt;/a&gt; and the page of comments on &lt;a href=&quot;phoenix.liveview#c:handle_params/3&quot;&gt;&lt;code&gt;handle_params/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">例如，假设您有一个博客。单个帖子的URL是：&amp;ldquo; / blog / posts /：post_id&amp;rdquo;。在帖子页面中，您有评论，它们是分页的。每次用户分页时，都使用&lt;a href=&quot;phoenix.liveview.helpers#live_patch/2&quot;&gt; &lt;code&gt;live_patch/2&lt;/code&gt; &lt;/a&gt;更新显示的注释，从而将URL更新为&amp;ldquo; / blog / posts /：post_id？page = X&amp;rdquo;。在此示例中，您将在&lt;a href=&quot;phoenix.liveview#c:mount/3&quot;&gt; &lt;code&gt;mount/3&lt;/code&gt; &lt;/a&gt;上访问 &lt;code&gt;&quot;post_id&quot;&lt;/code&gt; ，并在&lt;a href=&quot;phoenix.liveview#c:handle_params/3&quot;&gt; &lt;code&gt;handle_params/3&lt;/code&gt; &lt;/a&gt;上访问注释页面。</target>
        </trans-unit>
        <trans-unit id="d35abbc4af6b641142df2d7b6e8cb714b2e59096" translate="yes" xml:space="preserve">
          <source>For example, imagine you have a set of conditions you want to build your query on:</source>
          <target state="translated">例如,想象一下,你有一组你想建立查询的条件。</target>
        </trans-unit>
        <trans-unit id="516ae4f5f949a9c47d47f2088c9c4b9dee4d07e3" translate="yes" xml:space="preserve">
          <source>For example, in &lt;code&gt;lib/hello_web/router.ex&lt;/code&gt; we could change the action name in the default route that Phoenix gives us in a new app from index:</source>
          <target state="translated">例如，在 &lt;code&gt;lib/hello_web/router.ex&lt;/code&gt; 中,我们可以更改Phoenix在新应用程序中通过索引为我们提供的默认路由中的动作名称：</target>
        </trans-unit>
        <trans-unit id="a0265adc038f7ef1d21b2a50447a6f63af71366e" translate="yes" xml:space="preserve">
          <source>For example, in a template you may write:</source>
          <target state="translated">例如,在一个模板中,你可以写。</target>
        </trans-unit>
        <trans-unit id="22f5586e5ae6cb9013888e85871da5acf72d0949" translate="yes" xml:space="preserve">
          <source>For example, let's rewrite the &lt;code&gt;show&lt;/code&gt; action from &lt;code&gt;PageController&lt;/code&gt; to return text instead. For that, we could do the following.</source>
          <target state="translated">例如，让我们重写 &lt;code&gt;PageController&lt;/code&gt; 的 &lt;code&gt;show&lt;/code&gt; 动作以返回文本。为此，我们可以执行以下操作。</target>
        </trans-unit>
        <trans-unit id="66a53e369f8b4df3920a8220219a3d7f53280435" translate="yes" xml:space="preserve">
          <source>For example, let's say two users try to leave the organization at the same time. In this case, both of them see the &quot;Leave&quot; button, but our &lt;code&gt;leave&lt;/code&gt; function call will succeed only for one of them:</source>
          <target state="translated">例如，假设有两个用户尝试同时离开组织。在这种情况下，他们两个都看到&amp;ldquo; Leave&amp;rdquo;按钮，但是我们的 &lt;code&gt;leave&lt;/code&gt; 函数调用仅对其中一个成功：</target>
        </trans-unit>
        <trans-unit id="8eebd42f8b90a67c493e81c5b014f284666e7e5e" translate="yes" xml:space="preserve">
          <source>For example, one could set the accepts header for json requests as follows:</source>
          <target state="translated">例如,可以对json请求的accepts头设置如下。</target>
        </trans-unit>
        <trans-unit id="a0404b9a4be72b8fa2ca4aa38b64953ae3c079e9" translate="yes" xml:space="preserve">
          <source>For example, the following &lt;code&gt;:banner&lt;/code&gt; option:</source>
          <target state="translated">例如，以下 &lt;code&gt;:banner&lt;/code&gt; 选项：</target>
        </trans-unit>
        <trans-unit id="83e3418ad418cbae8b838f55a7f3c5eff7a23b6e" translate="yes" xml:space="preserve">
          <source>For example, the following is forbidden because it is not at the root of a &lt;code&gt;where&lt;/code&gt;:</source>
          <target state="translated">例如，以下内容是禁止的，因为它不是 &lt;code&gt;where&lt;/code&gt; 的根：</target>
        </trans-unit>
        <trans-unit id="dca79318412c2101b9352f778075ffdd922f7e05" translate="yes" xml:space="preserve">
          <source>For example, the markup for a controlled input for phone-number formatting could be written like this:</source>
          <target state="translated">例如,电话号码格式化的受控输入的标记可以这样写。</target>
        </trans-unit>
        <trans-unit id="6471f878df0f8a31f0a9c6ed9c1a0970d2b7f6cc" translate="yes" xml:space="preserve">
          <source>For example, the route above will match on the path &lt;code&gt;&quot;/api/v1/pages/:id&quot;&lt;/code&gt; and the named route will be &lt;code&gt;api_v1_page_path&lt;/code&gt;, as expected from the values given to &lt;a href=&quot;#scope/2&quot;&gt;&lt;code&gt;scope/2&lt;/code&gt;&lt;/a&gt; option.</source>
          <target state="translated">例如，上面的路由将在路径 &lt;code&gt;&quot;/api/v1/pages/:id&quot;&lt;/code&gt; 上 &lt;code&gt;api_v1_page_path&lt;/code&gt; ，并且命名的路由将是api_v1_page_path，这是根据&lt;a href=&quot;#scope/2&quot;&gt; &lt;code&gt;scope/2&lt;/code&gt; &lt;/a&gt;选项给出的值所期望的。</target>
        </trans-unit>
        <trans-unit id="d2fc813eb5dfb8f4978194599eab4ecab416b2e4" translate="yes" xml:space="preserve">
          <source>For example, the route:</source>
          <target state="translated">例如,路线。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
