<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="erlang">
    <body>
      <group id="erlang">
        <trans-unit id="86e2273f77bf539265f22779e89def4d1e137223" translate="yes" xml:space="preserve">
          <source>Converts a specified system time into universal date and time.</source>
          <target state="translated">将指定的系统时间转换为通用日期和时间。</target>
        </trans-unit>
        <trans-unit id="b9047711ffafd954061a4ff560477522f40ff5a0" translate="yes" xml:space="preserve">
          <source>Converts a system time into an RFC 3339 timestamp. The data format of RFC 3339 timestamps is described by &lt;code&gt;&lt;a href=&quot;https://www.ietf.org/rfc/rfc3339.txt&quot;&gt;RFC 3339&lt;/a&gt;&lt;/code&gt;. The data format of offsets is also described by RFC 3339.</source>
          <target state="translated">将系统时间转换为RFC 3339时间戳。RFC 3339描述了 &lt;code&gt;&lt;a href=&quot;https://www.ietf.org/rfc/rfc3339.txt&quot;&gt;RFC 3339&lt;/a&gt;&lt;/code&gt; 时间戳的数据格式。偏移量的数据格式也由RFC 3339描述。</target>
        </trans-unit>
        <trans-unit id="b7e9dd9508e2c39877496657c329846a877e0d31" translate="yes" xml:space="preserve">
          <source>Converts a tree into an ordered list of key-value tuples.</source>
          <target state="translated">将一棵树转换为一个有序的键值元组列表。</target>
        </trans-unit>
        <trans-unit id="3cb5b309f842678e3138568709158663d4f05758" translate="yes" xml:space="preserve">
          <source>Converts a universal time value to a DateAndTime list. The universal time value on the same format as defined in calendar(3).</source>
          <target state="translated">将一个通用时间值转换为DateAndTime列表。万能时间值的格式与 calendar(3)中定义的格式相同。</target>
        </trans-unit>
        <trans-unit id="44610c486b007dccd01686705bd878b96af721f7" translate="yes" xml:space="preserve">
          <source>Converts an Audit Trail Log to a readable format and prints it on stdio. &lt;code&gt;LogName&lt;/code&gt; defaults to &quot;snmpa_log&quot;. &lt;code&gt;LogFile&lt;/code&gt; defaults to &quot;snmpa.log&quot;.</source>
          <target state="translated">将审核跟踪日志转换为可读格式，然后将其打印在stdio上。 &lt;code&gt;LogName&lt;/code&gt; 默认为&amp;ldquo; snmpa_log&amp;rdquo;。 &lt;code&gt;LogFile&lt;/code&gt; 默认为&amp;ldquo; snmpa.log&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="855f17949eff9ef2a56873298af733ac4424a459" translate="yes" xml:space="preserve">
          <source>Converts an Audit Trail Log to a readable format and prints it on stdio. &lt;code&gt;LogName&lt;/code&gt; defaults to &quot;snmpm_log&quot;. &lt;code&gt;LogFile&lt;/code&gt; defaults to &quot;snmpm.log&quot;.</source>
          <target state="translated">将审核跟踪日志转换为可读格式，然后将其打印在stdio上。 &lt;code&gt;LogName&lt;/code&gt; 默认为&amp;ldquo; snmpm_log&amp;rdquo;。 &lt;code&gt;LogFile&lt;/code&gt; 默认为&amp;ldquo; snmpm.log&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="d09de86e162e58adfdf8aa6b99c1c2b2436bec29" translate="yes" xml:space="preserve">
          <source>Converts an Audit Trail Log to a readable format and prints it on stdio. See &lt;code&gt;&lt;a href=&quot;snmp#log_to_txt&quot;&gt;log_to_txt&lt;/a&gt;&lt;/code&gt; above for more info.</source>
          <target state="translated">将审核跟踪日志转换为可读格式，并将其打印在stdio上。有关更多信息，请参见上面的 &lt;code&gt;&lt;a href=&quot;snmp#log_to_txt&quot;&gt;log_to_txt&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8bae9d85a62fe1487e08368bcd49bfd302d2ae46" translate="yes" xml:space="preserve">
          <source>Converts an Audit Trail Log to a readable text file, where each item has a trailing TAB character, and any TAB character in the body of an item has been replaced by ESC TAB.</source>
          <target state="translated">将审计跟踪日志转换为可读的文本文件,其中每个项目都有一个尾部的TAB字符,并且项目正文中的任何TAB字符都被ESC TAB取代。</target>
        </trans-unit>
        <trans-unit id="6407d7573450480a43841483687b2066534de1d4" translate="yes" xml:space="preserve">
          <source>Converts an Audit Trail Log to a readable text file. &lt;code&gt;OutFile&lt;/code&gt; defaults to &quot;./snmpa_log.txt&quot;. &lt;code&gt;LogName&lt;/code&gt; defaults to &quot;snmpa_log&quot;. &lt;code&gt;LogFile&lt;/code&gt; defaults to &quot;snmpa.log&quot;.</source>
          <target state="translated">将审核跟踪日志转换为可读的文本文件。 &lt;code&gt;OutFile&lt;/code&gt; 默认为&amp;ldquo; ./snmpa_log.txt&amp;rdquo;。 &lt;code&gt;LogName&lt;/code&gt; 默认为&amp;ldquo; snmpa_log&amp;rdquo;。 &lt;code&gt;LogFile&lt;/code&gt; 默认为&amp;ldquo; snmpa.log&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="4a4749069e0860dabc6772436a87d3702f360468" translate="yes" xml:space="preserve">
          <source>Converts an Audit Trail Log to a readable text file. &lt;code&gt;OutFile&lt;/code&gt; defaults to &quot;./snmpm_log.txt&quot;. &lt;code&gt;LogName&lt;/code&gt; defaults to &quot;snmpm_log&quot;. &lt;code&gt;LogFile&lt;/code&gt; defaults to &quot;snmpm.log&quot;.</source>
          <target state="translated">将审核跟踪日志转换为可读的文本文件。 &lt;code&gt;OutFile&lt;/code&gt; 默认为&amp;ldquo; ./snmpm_log.txt&amp;rdquo;。 &lt;code&gt;LogName&lt;/code&gt; 默认为&amp;ldquo; snmpm_log&amp;rdquo;。 &lt;code&gt;LogFile&lt;/code&gt; 默认为&amp;ldquo; snmpm.log&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="c69a0f77b8803477b1e6776d7a1bb3d3c0bc094b" translate="yes" xml:space="preserve">
          <source>Converts an I/O list to a &lt;code&gt;NULL&lt;/code&gt;-terminated C string.</source>
          <target state="translated">将I / O列表转换为以 &lt;code&gt;NULL&lt;/code&gt; 结尾的C字符串。</target>
        </trans-unit>
        <trans-unit id="d4542321b52f3b249fe4a9fc8bb1d134f192d307" translate="yes" xml:space="preserve">
          <source>Converts an I/O list to a binary term.</source>
          <target state="translated">将一个I/O列表转换为一个二进制项。</target>
        </trans-unit>
        <trans-unit id="0cd1b632c0f7d3c49a8760c8c66f3f9227324f8e" translate="yes" xml:space="preserve">
          <source>Converts an RFC 3339 timestamp into system time. The data format of RFC 3339 timestamps is described by &lt;code&gt;&lt;a href=&quot;https://www.ietf.org/rfc/rfc3339.txt&quot;&gt;RFC 3339&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将RFC 3339时间戳转换为系统时间。RFC 3339描述了 &lt;code&gt;&lt;a href=&quot;https://www.ietf.org/rfc/rfc3339.txt&quot;&gt;RFC 3339&lt;/a&gt;&lt;/code&gt; 时间戳的数据格式。</target>
        </trans-unit>
        <trans-unit id="80c5eccf9f5585f258ac0b089be3e34de5083396" translate="yes" xml:space="preserve">
          <source>Converts an RFC or OpenSSL name string to an &lt;code&gt;&lt;a href=&quot;#type-erl_cipher_suite&quot;&gt;erl_cipher_suite()&lt;/a&gt;&lt;/code&gt; Returns an error if the cipher suite is not supported or the name is not a valid cipher suite name.</source>
          <target state="translated">如果不支持密码套件或名称不是有效的密码套件名称， &lt;code&gt;&lt;a href=&quot;#type-erl_cipher_suite&quot;&gt;erl_cipher_suite()&lt;/a&gt;&lt;/code&gt; RFC或OpenSSL名称字符串转换为erl_cipher_suite（）返回错误。</target>
        </trans-unit>
        <trans-unit id="436ce67ed4ae1e6d1d08fcc7ee35ade849809623" translate="yes" xml:space="preserve">
          <source>Converts an error reason term to a human-readable error message string.</source>
          <target state="translated">将错误原因项转换为人类可读的错误信息字符串。</target>
        </trans-unit>
        <trans-unit id="b0190a8fc737581b2fc55ce54e92f66829eed5e0" translate="yes" xml:space="preserve">
          <source>Converts an ordered list of pairs &lt;code&gt;{Index, Value}&lt;/code&gt; to a corresponding extendible array. &lt;code&gt;Default&lt;/code&gt; is used as the value for uninitialized entries of the array. If &lt;code&gt;Orddict&lt;/code&gt; is not a proper, ordered list of pairs whose first elements are non-negative integers, the call fails with reason &lt;code&gt;badarg&lt;/code&gt;.</source>
          <target state="translated">将对 &lt;code&gt;{Index, Value}&lt;/code&gt; 对的有序列表转换为相应的可扩展数组。 &lt;code&gt;Default&lt;/code&gt; 值用作未初始化的数组条目的值。如果 &lt;code&gt;Orddict&lt;/code&gt; 不是首个元素为非负整数的对的有序对列表，则调用失败，原因为 &lt;code&gt;badarg&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c10eec4e502b365ef4e5594f5785f4e077cb5da9" translate="yes" xml:space="preserve">
          <source>Converts dictionary &lt;code&gt;Dict&lt;/code&gt; to a list representation.</source>
          <target state="translated">将字典 &lt;code&gt;Dict&lt;/code&gt; 转换为列表表示形式。</target>
        </trans-unit>
        <trans-unit id="63f8d2749b9b43b8731889827061f53cc3715c4c" translate="yes" xml:space="preserve">
          <source>Converts from Universal Coordinated Time (UTC) to local time. &lt;code&gt;DateTime&lt;/code&gt; must refer to a date after Jan 1, 1970.</source>
          <target state="translated">从世界标准时间（UTC）转换为本地时间。 &lt;code&gt;DateTime&lt;/code&gt; 必须引用1970年1月1日之后的日期。</target>
        </trans-unit>
        <trans-unit id="8defd82fa5f7d6ce3e60e851f99d6ec003926ec5" translate="yes" xml:space="preserve">
          <source>Converts from local time to Universal Coordinated Time (UTC). &lt;code&gt;DateTime1&lt;/code&gt; must refer to a local date after Jan 1, 1970.</source>
          <target state="translated">从本地时间转换为世界标准时间（UTC）。 &lt;code&gt;DateTime1&lt;/code&gt; 必须引用1970年1月1日之后的本地日期。</target>
        </trans-unit>
        <trans-unit id="437ae2c22b6420ff691c19f94386cd9dac1a557d" translate="yes" xml:space="preserve">
          <source>Converts local date and time to Universal Time Coordinated (UTC) as &lt;code&gt;erlang:localtime_to_universaltime/1&lt;/code&gt;, but the caller decides if Daylight Saving Time is active.</source>
          <target state="translated">以 &lt;code&gt;erlang:localtime_to_universaltime/1&lt;/code&gt; 的形式将本地日期和时间转换为世界标准时间（UTC），但调用者确定夏令时是否处于活动状态。</target>
        </trans-unit>
        <trans-unit id="b7d11b281131992f5a69ef6f70b21b233494b317" translate="yes" xml:space="preserve">
          <source>Converts local date and time to Universal Time Coordinated (UTC), if supported by the underlying OS. Otherwise no conversion is done and &lt;code&gt;Localtime&lt;/code&gt; is returned. Example:</source>
          <target state="translated">如果基础操作系统支持，则将本地日期和时间转换为世界标准时间（UTC）。否则，不进行任何转换，并返回 &lt;code&gt;Localtime&lt;/code&gt; 。例：</target>
        </trans-unit>
        <trans-unit id="42dad5f3bbaccb71751ef56cb55798afb7217e1a" translate="yes" xml:space="preserve">
          <source>Converts process state when code is changed.</source>
          <target state="translated">代码改变时转换过程状态。</target>
        </trans-unit>
        <trans-unit id="d1a5f372eceb663bbc2387e5d0247261f4cf3353" translate="yes" xml:space="preserve">
          <source>Converts the &lt;code&gt;Key&lt;/code&gt;-&lt;code&gt;Value&lt;/code&gt; list &lt;code&gt;List&lt;/code&gt; to a dictionary.</source>
          <target state="translated">将 &lt;code&gt;Key&lt;/code&gt; - &lt;code&gt;Value&lt;/code&gt; 列表 &lt;code&gt;List&lt;/code&gt; 转换为字典。</target>
        </trans-unit>
        <trans-unit id="2c2286ba70004482733a2bd5e59bdfad16d01aa4" translate="yes" xml:space="preserve">
          <source>Converts the &lt;code&gt;Key&lt;/code&gt;-&lt;code&gt;Value&lt;/code&gt; list &lt;code&gt;List&lt;/code&gt; to dictionary &lt;code&gt;Dict&lt;/code&gt;.</source>
          <target state="translated">转换 &lt;code&gt;Key&lt;/code&gt; - &lt;code&gt;Value&lt;/code&gt; 列表 &lt;code&gt;List&lt;/code&gt; 字典 &lt;code&gt;Dict&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7e032917e179da03880eb03f488aeb0d54464040" translate="yes" xml:space="preserve">
          <source>Converts the &lt;code&gt;Time&lt;/code&gt; value of time unit &lt;code&gt;FromUnit&lt;/code&gt; to the corresponding &lt;code&gt;ConvertedTime&lt;/code&gt; value of time unit &lt;code&gt;ToUnit&lt;/code&gt;. The result is rounded using the floor function.</source>
          <target state="translated">转换 &lt;code&gt;Time&lt;/code&gt; 的时间单位的值 &lt;code&gt;FromUnit&lt;/code&gt; 到相应 &lt;code&gt;ConvertedTime&lt;/code&gt; 时间单元的值 &lt;code&gt;ToUnit&lt;/code&gt; 。使用下限功能对结果进行四舍五入。</target>
        </trans-unit>
        <trans-unit id="a24c488c0c31d2338dee81449f3ea0f0507d20cc" translate="yes" xml:space="preserve">
          <source>Converts the &lt;code&gt;scheme&lt;/code&gt; and &lt;code&gt;host&lt;/code&gt; components to lower case as they are not case sensitive.</source>
          <target state="translated">将 &lt;code&gt;scheme&lt;/code&gt; 和 &lt;code&gt;host&lt;/code&gt; 组件转换为小写，因为它们不区分大小写。</target>
        </trans-unit>
        <trans-unit id="fb25498dd3f10707e6e90a24b8b2e81ecbaed3cf" translate="yes" xml:space="preserve">
          <source>Converts the &lt;code&gt;val&lt;/code&gt; value of time unit &lt;code&gt;from&lt;/code&gt; to the corresponding value of time unit &lt;code&gt;to&lt;/code&gt;. The result is rounded using the floor function.</source>
          <target state="translated">将时间单位的 &lt;code&gt;val&lt;/code&gt; 值 &lt;code&gt;from&lt;/code&gt; 转换为时间单位的对应值 &lt;code&gt;to&lt;/code&gt; 。使用下限功能对结果进行四舍五入。</target>
        </trans-unit>
        <trans-unit id="4510ab03333a581f82387273a2c88b0d52bb33fb" translate="yes" xml:space="preserve">
          <source>Converts the Erlang data structure &lt;code&gt;Data&lt;/code&gt; into an abstract form of type &lt;code&gt;AbsTerm&lt;/code&gt;.</source>
          <target state="translated">将Erlang数据结构 &lt;code&gt;Data&lt;/code&gt; 转换为 &lt;code&gt;AbsTerm&lt;/code&gt; 类型的抽象形式。</target>
        </trans-unit>
        <trans-unit id="d950d9e5aed82f8047007b097bcbffda0369c8f4" translate="yes" xml:space="preserve">
          <source>Converts the Erlang data structure &lt;code&gt;Data&lt;/code&gt; into an abstract form of type &lt;code&gt;AbsTerm&lt;/code&gt;. This function is the inverse of &lt;code&gt;&lt;a href=&quot;#normalise-1&quot;&gt;normalise/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将Erlang数据结构 &lt;code&gt;Data&lt;/code&gt; 转换为 &lt;code&gt;AbsTerm&lt;/code&gt; 类型的抽象形式。此函数是 &lt;code&gt;&lt;a href=&quot;#normalise-1&quot;&gt;normalise/1&lt;/a&gt;&lt;/code&gt; 的反函数。</target>
        </trans-unit>
        <trans-unit id="e395dda944ab01db119fef36bca7915ec33edd1e" translate="yes" xml:space="preserve">
          <source>Converts the abstract form &lt;code&gt;AbsTerm&lt;/code&gt; of a term into a conventional Erlang data structure (that is, the term itself). This function is the inverse of &lt;code&gt;&lt;a href=&quot;#abstract-1&quot;&gt;abstract/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将术语的抽象形式 &lt;code&gt;AbsTerm&lt;/code&gt; 转换为常规的Erlang数据结构（即术语本身）。此函数是 &lt;code&gt;&lt;a href=&quot;#abstract-1&quot;&gt;abstract/1&lt;/a&gt;&lt;/code&gt; 的逆函数。</target>
        </trans-unit>
        <trans-unit id="30859b7b50c6c7f774ed525a89e8156ddddb1c8a" translate="yes" xml:space="preserve">
          <source>Converts the array to a list, skipping default-valued entries.</source>
          <target state="translated">将数组转换为一个列表,跳过默认值的条目。</target>
        </trans-unit>
        <trans-unit id="156ba84f4759edf95442838a8529181cd9fdc9c9" translate="yes" xml:space="preserve">
          <source>Converts the array to a list.</source>
          <target state="translated">将数组转换为列表。</target>
        </trans-unit>
        <trans-unit id="a8786ea3cb21dee36cb670bd298c8885b3b28abb" translate="yes" xml:space="preserve">
          <source>Converts the array to an ordered list of pairs &lt;code&gt;{Index, Value}&lt;/code&gt;, skipping default-valued entries.</source>
          <target state="translated">将数组转换为成对的 &lt;code&gt;{Index, Value}&lt;/code&gt; 对的有序列表，跳过默认值的条目。</target>
        </trans-unit>
        <trans-unit id="b9751f01789cd1d702a0db27c8c4aa8f9e5ee95e" translate="yes" xml:space="preserve">
          <source>Converts the array to an ordered list of pairs &lt;code&gt;{Index, Value}&lt;/code&gt;.</source>
          <target state="translated">将数组转换为 &lt;code&gt;{Index, Value}&lt;/code&gt; 对的有序列表。</target>
        </trans-unit>
        <trans-unit id="ae5eda0eade347b2e1efcec2215811b745cdb720" translate="yes" xml:space="preserve">
          <source>Converts the binary digit representation, in big endian or little endian, of a positive integer in &lt;code&gt;Subject&lt;/code&gt; to an Erlang &lt;code&gt;integer()&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;Subject&lt;/code&gt; 中正整数的二进制数字表示形式（大端或小端 &lt;code&gt;integer()&lt;/code&gt; 转换为Erlang integer（）。</target>
        </trans-unit>
        <trans-unit id="af5964c93e079b28d791aeec6fa56eec7fc79f2b" translate="yes" xml:space="preserve">
          <source>Converts the hexadecimal value &lt;code&gt;HexValue&lt;/code&gt; into its decimal equivalent (&lt;code&gt;DecValue&lt;/code&gt;).</source>
          <target state="translated">将十六进制值 &lt;code&gt;HexValue&lt;/code&gt; 转换为其等效的十进制（ &lt;code&gt;DecValue&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="63e01ac8ec77cae37426e78bfbebf72c74bc0a70" translate="yes" xml:space="preserve">
          <source>Converts the integer &lt;code&gt;Int&lt;/code&gt; to the corresponding symbolic value of the enumerated object or type &lt;code&gt;Name&lt;/code&gt; in a MIB. The MIB must be loaded.</source>
          <target state="translated">将整数 &lt;code&gt;Int&lt;/code&gt; 转换为枚举对象的相应符号值，或者将其转换为MIB中的 &lt;code&gt;Name&lt;/code&gt; 。必须加载MIB​​。</target>
        </trans-unit>
        <trans-unit id="26b2f4c415a7cb6dad0188583ceec8e57f411f37" translate="yes" xml:space="preserve">
          <source>Converts the path into a canonical form.</source>
          <target state="translated">将路径转换为规范形式。</target>
        </trans-unit>
        <trans-unit id="3f6a56d29a0f78edfb20a5f1f9e4a1b98299ed43" translate="yes" xml:space="preserve">
          <source>Converts the symbolic value &lt;code&gt;Enum&lt;/code&gt; to the corresponding integer of the enumerated object or type &lt;code&gt;Name&lt;/code&gt; in a MIB. The MIB must be loaded.</source>
          <target state="translated">将符号值 &lt;code&gt;Enum&lt;/code&gt; 转换为MIB中枚举对象或类型 &lt;code&gt;Name&lt;/code&gt; 的相应整数。必须加载MIB​​。</target>
        </trans-unit>
        <trans-unit id="e4f81994fed009c24d31efd799e2d47a74a60f1f" translate="yes" xml:space="preserve">
          <source>Cookie</source>
          <target state="translated">Cookie</target>
        </trans-unit>
        <trans-unit id="2971238809214ab7b85ffb9592337bc95eb124ab" translate="yes" xml:space="preserve">
          <source>Cookie to use for the &lt;code&gt;etop&lt;/code&gt; node. Must be same as the cookie on the measured node.</source>
          <target state="translated">用于 &lt;code&gt;etop&lt;/code&gt; 节点的Cookie 。必须与被测节点上的cookie相同。</target>
        </trans-unit>
        <trans-unit id="7da4dde6513da93a5dcad631070ab8e072183ec0" translate="yes" xml:space="preserve">
          <source>Cookie, &lt;code&gt;cookie&lt;/code&gt;</source>
          <target state="translated">饼干， &lt;code&gt;cookie&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e491b0025460c5c41338119a277f4c2a46f4dd99" translate="yes" xml:space="preserve">
          <source>Coordinated Universal Time. UTC almost aligns with &lt;code&gt;&lt;a href=&quot;#UT1&quot;&gt;UT1&lt;/a&gt;&lt;/code&gt;. However, UTC uses the SI definition of a second, which has not exactly the same length as the second used by UT1. This means that UTC slowly drifts from UT1. To keep UTC relatively in sync with UT1, leap seconds are inserted, and potentially also deleted. That is, an UTC day can be 86400, 86401, or 86399 seconds long.</source>
          <target state="translated">协调世界时。UTC与 &lt;code&gt;&lt;a href=&quot;#UT1&quot;&gt;UT1&lt;/a&gt;&lt;/code&gt; 几乎对齐。但是，UTC使用秒的SI定义，该长度与UT1使用的秒的长度不完全相同。这意味着UTC从UT1缓慢漂移。为了使UTC与UT1保持相对同步，插入了leap秒，并可能将其删除。也就是说，UTC日可以是86400、86401或86399秒。</target>
        </trans-unit>
        <trans-unit id="53a7ee50168f599afc7f3b9cb05bc45ab4373c87" translate="yes" xml:space="preserve">
          <source>Coordination of system startup.</source>
          <target state="translated">协调系统的启动。</target>
        </trans-unit>
        <trans-unit id="3f79bdfc6fc8ca4944309bfa334d2be30ea169f7" translate="yes" xml:space="preserve">
          <source>Copies &lt;code&gt;ByteCount&lt;/code&gt; bytes from &lt;code&gt;Source&lt;/code&gt; to &lt;code&gt;Destination&lt;/code&gt;. &lt;code&gt;Source&lt;/code&gt; and &lt;code&gt;Destination&lt;/code&gt; refer to either filenames or IO devices from, for example, &lt;code&gt;open/2&lt;/code&gt;. &lt;code&gt;ByteCount&lt;/code&gt; defaults to &lt;code&gt;infinity&lt;/code&gt;, denoting an infinite number of bytes.</source>
          <target state="translated">将 &lt;code&gt;ByteCount&lt;/code&gt; 字节从 &lt;code&gt;Source&lt;/code&gt; 复制到 &lt;code&gt;Destination&lt;/code&gt; 。 &lt;code&gt;Source&lt;/code&gt; 和 &lt;code&gt;Destination&lt;/code&gt; 是指文件名或IO设备（例如， &lt;code&gt;open/2&lt;/code&gt; )。 &lt;code&gt;ByteCount&lt;/code&gt; 默认为 &lt;code&gt;infinity&lt;/code&gt; ，表示无限数量的字节。</target>
        </trans-unit>
        <trans-unit id="a1b4b8e14982541a374a13ccccea965b85c55095" translate="yes" xml:space="preserve">
          <source>Copies configuration data.</source>
          <target state="translated">复制配置数据。</target>
        </trans-unit>
        <trans-unit id="aaaefc2993463a2512d584fd667d4840b664e6c5" translate="yes" xml:space="preserve">
          <source>Copies the attributes from &lt;code&gt;Source&lt;/code&gt; to &lt;code&gt;Target&lt;/code&gt;.</source>
          <target state="translated">将属性从 &lt;code&gt;Source&lt;/code&gt; 复制到 &lt;code&gt;Target&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f63224a59d9ecbe38be1047a6f2890f9c5bb283f" translate="yes" xml:space="preserve">
          <source>Copies the files &lt;code&gt;epmd&lt;/code&gt;, &lt;code&gt;run_erl&lt;/code&gt;, and &lt;code&gt;to_erl&lt;/code&gt; from the directory &lt;code&gt;tmp/erts-5.10.4/bin&lt;/code&gt; to the directory &lt;code&gt;tmp/bin&lt;/code&gt;.</source>
          <target state="translated">将文件 &lt;code&gt;epmd&lt;/code&gt; ， &lt;code&gt;run_erl&lt;/code&gt; 和 &lt;code&gt;to_erl&lt;/code&gt; 从目录 &lt;code&gt;tmp/erts-5.10.4/bin&lt;/code&gt; 复制到目录 &lt;code&gt;tmp/bin&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="994ec6352ef05c4c4cc8a25f503f1e75a519aa5e" translate="yes" xml:space="preserve">
          <source>Copies the list of user annotations from &lt;code&gt;Source&lt;/code&gt; to &lt;code&gt;Target&lt;/code&gt;.</source>
          <target state="translated">将用户注释列表从 &lt;code&gt;Source&lt;/code&gt; 复制到 &lt;code&gt;Target&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="65a7e6942be302a1e6741aca1d710de60c3cb150" translate="yes" xml:space="preserve">
          <source>Copies the position information from &lt;code&gt;Source&lt;/code&gt; to &lt;code&gt;Target&lt;/code&gt;.</source>
          <target state="translated">将位置信息从 &lt;code&gt;Source&lt;/code&gt; 复制到 &lt;code&gt;Target&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9254f9f106c9eab630ece726b75cfac5692fbd61" translate="yes" xml:space="preserve">
          <source>Copies the pre- and postcomments from &lt;code&gt;Source&lt;/code&gt; to &lt;code&gt;Target&lt;/code&gt;.</source>
          <target state="translated">将前注释和后注释从 &lt;code&gt;Source&lt;/code&gt; 复制到 &lt;code&gt;Target&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6aaea841c41e1d87ec7e5e6f69cf10aa27c351b7" translate="yes" xml:space="preserve">
          <source>Copies the previously created file &lt;code&gt;plain.boot&lt;/code&gt; to &lt;code&gt;tmp/bin/start.boot&lt;/code&gt;.</source>
          <target state="translated">将先前创建的文件 &lt;code&gt;plain.boot&lt;/code&gt; 复制到 &lt;code&gt;tmp/bin/start.boot&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f831e18f3d39d06a4db85c2a93c55cd8de3583f9" translate="yes" xml:space="preserve">
          <source>Coptic</source>
          <target state="translated">Coptic</target>
        </trans-unit>
        <trans-unit id="3158bd8e8f1a6b1e234a8ec9a9287c13f4847eaa" translate="yes" xml:space="preserve">
          <source>Copy that script to another location (and preferably another name).</source>
          <target state="translated">将该脚本复制到另一个位置(最好是另一个名字)。</target>
        </trans-unit>
        <trans-unit id="b1da74f4d1e408f055ba57cd4463c16dd10ff645" translate="yes" xml:space="preserve">
          <source>Copy the compiled code (&lt;code&gt;messenger.beam&lt;/code&gt;) to the directory on each computer where you start Erlang.</source>
          <target state="translated">将已编译的代码（ &lt;code&gt;messenger.beam&lt;/code&gt; ）复制到启动Erlang的每台计算机上的目录中。</target>
        </trans-unit>
        <trans-unit id="686e8534f5ffab1dc11dbbfb65a78998a0371944" translate="yes" xml:space="preserve">
          <source>Copyright &amp;copy; 1996-2020 Ericsson AB. All Rights Reserved.</source>
          <target state="translated">版权所有&amp;copy;1996-2020爱立信AB。版权所有。</target>
        </trans-unit>
        <trans-unit id="493c9f7a17fedbf5ca23e80ed9fffb6cd1b18186" translate="yes" xml:space="preserve">
          <source>Copyright &amp;copy; 1997-2020 Ericsson AB. All Rights Reserved.</source>
          <target state="translated">版权所有&amp;copy;1997-2020爱立信AB。版权所有。</target>
        </trans-unit>
        <trans-unit id="d40f7e4069ac28959fc2a95c1676b33f01e1b196" translate="yes" xml:space="preserve">
          <source>Copyright &amp;copy; 1998-2020 Ericsson AB. All Rights Reserved.</source>
          <target state="translated">版权所有&amp;copy;1998-2020爱立信AB。版权所有。</target>
        </trans-unit>
        <trans-unit id="805e352693883aad6adb7e2614dcc5f6795c0056" translate="yes" xml:space="preserve">
          <source>Copyright &amp;copy; 1999-2020 Ericsson AB. All Rights Reserved.</source>
          <target state="translated">版权所有&amp;copy;1999-2020爱立信AB。版权所有。</target>
        </trans-unit>
        <trans-unit id="ea440522aa43f7d30bf819ccc42db17b01af0f70" translate="yes" xml:space="preserve">
          <source>Copyright &amp;copy; 2000-2020 Ericsson AB. All Rights Reserved.</source>
          <target state="translated">版权所有&amp;copy;2000-2020爱立信AB。版权所有。</target>
        </trans-unit>
        <trans-unit id="a4a92f30d4d470cefd432372feb27916abd7643e" translate="yes" xml:space="preserve">
          <source>Copyright &amp;copy; 2001-2020 Ericsson AB. All Rights Reserved.</source>
          <target state="translated">版权所有&amp;copy;2001-2020爱立信AB。版权所有。</target>
        </trans-unit>
        <trans-unit id="d53375843055bcac5c37ca7759cbee35419c17b5" translate="yes" xml:space="preserve">
          <source>Copyright &amp;copy; 2002-2020 Ericsson AB. All Rights Reserved.</source>
          <target state="translated">版权所有&amp;copy;2002-2020爱立信AB。版权所有。</target>
        </trans-unit>
        <trans-unit id="a961bd87bbe0fc3f78cc3ccbfe4f1ae906ed132f" translate="yes" xml:space="preserve">
          <source>Copyright &amp;copy; 2003-2020 Ericsson AB. All Rights Reserved.</source>
          <target state="translated">版权所有&amp;copy;2003-2020爱立信AB。版权所有。</target>
        </trans-unit>
        <trans-unit id="4a51b460ca3b1156e802ed71f8edded6c429e341" translate="yes" xml:space="preserve">
          <source>Copyright &amp;copy; 2004-2020 Ericsson AB. All Rights Reserved.</source>
          <target state="translated">版权所有&amp;copy;2004-2020爱立信AB。版权所有。</target>
        </trans-unit>
        <trans-unit id="2e2b2b30994cd37af4088a3b0f8625482c877484" translate="yes" xml:space="preserve">
          <source>Copyright &amp;copy; 2005-2020 Ericsson AB. All Rights Reserved.</source>
          <target state="translated">版权所有&amp;copy;2005-2020爱立信AB。版权所有。</target>
        </trans-unit>
        <trans-unit id="8dca0216b290b26b530cd679f35fc84c2be58755" translate="yes" xml:space="preserve">
          <source>Copyright &amp;copy; 2006-2020 Ericsson AB. All Rights Reserved.</source>
          <target state="translated">版权所有&amp;copy;2006-2020爱立信AB。版权所有。</target>
        </trans-unit>
        <trans-unit id="d102126ca3c11b4a1a121c25029c3c762b0f8a7d" translate="yes" xml:space="preserve">
          <source>Copyright &amp;copy; 2008-2020 Ericsson AB, All Rights Reserved</source>
          <target state="translated">版权所有&amp;copy;2008-2020爱立信AB，保留所有权利</target>
        </trans-unit>
        <trans-unit id="66f042c17e407cf1790703a61834558fffbd3910" translate="yes" xml:space="preserve">
          <source>Copyright &amp;copy; 2009-2020 Ericsson AB, All Rights Reserved</source>
          <target state="translated">版权所有&amp;copy;2009-2020爱立信AB，保留所有权利</target>
        </trans-unit>
        <trans-unit id="6b8e539c31f9bbd9c02d41654007856b6b9a2fa9" translate="yes" xml:space="preserve">
          <source>Copyright &amp;copy; 2011-2020 Ericsson AB. All Rights Reserved.</source>
          <target state="translated">版权所有&amp;copy;2011-2020爱立信AB。版权所有。</target>
        </trans-unit>
        <trans-unit id="50377f1235016739a9091cabf4b80c8bd321146f" translate="yes" xml:space="preserve">
          <source>Copyright &amp;copy; 2012-2020 Ericsson AB. All Rights Reserved.</source>
          <target state="translated">版权所有&amp;copy;2012-2020爱立信AB。版权所有。</target>
        </trans-unit>
        <trans-unit id="9494a30c6c0d72c226d1a3d8b5167d2513e550be" translate="yes" xml:space="preserve">
          <source>Copyright &amp;copy; 2019-2020 Ericsson AB. All Rights Reserved.</source>
          <target state="translated">版权所有&amp;copy;2019-2020爱立信AB。版权所有。</target>
        </trans-unit>
        <trans-unit id="5f1d8b9bee4667bcc40aecccd07f43b97f790ef3" translate="yes" xml:space="preserve">
          <source>Corba callback - skeleton for a Corba callback module.</source>
          <target state="translated">Corba回调-Corba回调模块的骨架。</target>
        </trans-unit>
        <trans-unit id="a9c4ae8cd097c1e80f5ee6338d868d74d81f3539" translate="yes" xml:space="preserve">
          <source>Core Erlang abstract syntax trees.</source>
          <target state="translated">核心Erlang抽象语法树。</target>
        </trans-unit>
        <trans-unit id="bb1155ea6dfb2e6734b59ecb5db4238bac82256a" translate="yes" xml:space="preserve">
          <source>Core dumps</source>
          <target state="translated">核心转储</target>
        </trans-unit>
        <trans-unit id="53687537dcdac44aafe7c0181fa68bbea3912973" translate="yes" xml:space="preserve">
          <source>Correctly handling user tags and their spreading might take some effort, as Erlang programs tend to send and receive messages so that sometimes the user tag gets lost due to various things, like double receives or communication with a port (ports do not handle user tags, in the same way as they do not handle regular sequential trace tokens).</source>
          <target state="translated">正确处理用户标签及其传播可能需要一些努力,因为Erlang程序倾向于发送和接收消息,所以有时用户标签会因为各种事情而丢失,比如双接收或与端口的通信(端口不会处理用户标签,就像它们不会处理普通的顺序跟踪标记一样)。</target>
        </trans-unit>
        <trans-unit id="c00f28e597516e2fadc6acc88d431837c71a5037" translate="yes" xml:space="preserve">
          <source>Correlation of Accounting Records</source>
          <target state="translated">会计记录的相关性</target>
        </trans-unit>
        <trans-unit id="3cf1477c64bba28b284e94d37ba420962eff72bc" translate="yes" xml:space="preserve">
          <source>Corresponding to each generic instruction, there is a family of specific instructions. The types that an instance of a specific instruction can handle are encoded in the instruction names. For example, &lt;code&gt;move_xy&lt;/code&gt; takes an X register number as the first operand and a Y register number as the second operand. &lt;code&gt;move_cx&lt;/code&gt; takes a tagged Erlang term as the first operand and an X register number as the second operand.</source>
          <target state="translated">对应于每条通用指令，都有一系列特定的指令。特定指令实例可以处理的类型在指令名称中进行了编码。例如， &lt;code&gt;move_xy&lt;/code&gt; 将X寄存器号作为第一个操作数，将Y寄存器号作为第二个操作数。 &lt;code&gt;move_cx&lt;/code&gt; 将带标签的Erlang项作为第一个操作数，将X寄存器号作为第二个操作数。</target>
        </trans-unit>
        <trans-unit id="7b36836828d03b5b0255f57ebdd9b389534bae82" translate="yes" xml:space="preserve">
          <source>Could not create a new process due to that some system limit was reached. Typically the process table was full.</source>
          <target state="translated">由于达到系统限制,无法创建新的进程。通常情况下,进程表已满。</target>
        </trans-unit>
        <trans-unit id="0960b5709cc5b92983bafb956896bf61e0215c9f" translate="yes" xml:space="preserve">
          <source>CountOp ::= &lt;code&gt;#&lt;/code&gt;</source>
          <target state="translated">CountOp :: = &lt;code&gt;#&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3b9490c95f9e5501e62a069ac8002a3ea055aff7" translate="yes" xml:space="preserve">
          <source>Counter Functions</source>
          <target state="translated">计数器功能</target>
        </trans-unit>
        <trans-unit id="34e1f9cc0f4623df7f42811befbafaa620d8b7e6" translate="yes" xml:space="preserve">
          <source>Counters are 64 bit signed integers.</source>
          <target state="translated">计数器是64位有符号的整数。</target>
        </trans-unit>
        <trans-unit id="bb73fe83afdd13616b3d480bb791e8604f7f266d" translate="yes" xml:space="preserve">
          <source>Counters are initialized to zero.</source>
          <target state="translated">计数器初始化为零。</target>
        </trans-unit>
        <trans-unit id="fb4e344acb233fa4c7cf7a274a1c1ddc9a5b3b06" translate="yes" xml:space="preserve">
          <source>Counters are not tied to the current process and are automatically garbage collected when they are no longer referenced.</source>
          <target state="translated">计数器不与当前进程绑定,当不再引用时,会自动进行垃圾回收。</target>
        </trans-unit>
        <trans-unit id="d4ead8043855e4ce027ab3ed15b364b5db674e37" translate="yes" xml:space="preserve">
          <source>Counters will be sequentially consistent. If write operation A is done sequentially before write operation B, then a concurrent reader may see the result of none of them, only A, or both A and B. It cannot see the result of only B.</source>
          <target state="translated">计数器将顺序一致。如果写操作A在写操作B之前依次完成,那么一个并发读者可能看不到其中任何一个操作的结果,只能看到A,或者同时看到A和B,不能只看到B的结果。</target>
        </trans-unit>
        <trans-unit id="8cd23fb47dbfccec15632ce95cd392ad7905e720" translate="yes" xml:space="preserve">
          <source>Counters wrap around at overflow and underflow operations.</source>
          <target state="translated">计数器在溢流和欠流操作时环绕。</target>
        </trans-unit>
        <trans-unit id="196a079a45954aaa35e3967fb3c58f42d5fb0e74" translate="yes" xml:space="preserve">
          <source>Cover analysis is performed by examining the contents of the Cover database. The output is determined by two parameters, &lt;code&gt;Level&lt;/code&gt; and &lt;code&gt;Analysis&lt;/code&gt;. &lt;code&gt;Analysis&lt;/code&gt; is either &lt;code&gt;coverage&lt;/code&gt; or &lt;code&gt;calls&lt;/code&gt; and determines the type of the analysis. &lt;code&gt;Level&lt;/code&gt; is either &lt;code&gt;module&lt;/code&gt;, &lt;code&gt;function&lt;/code&gt;, &lt;code&gt;clause&lt;/code&gt;, or &lt;code&gt;line&lt;/code&gt; and determines the level of the analysis.</source>
          <target state="translated">封面分析是通过检查Cover数据库的内容执行的。输出由两个参数 &lt;code&gt;Level&lt;/code&gt; 和 &lt;code&gt;Analysis&lt;/code&gt; 决定。 &lt;code&gt;Analysis&lt;/code&gt; 是 &lt;code&gt;coverage&lt;/code&gt; 或 &lt;code&gt;calls&lt;/code&gt; 并确定分析的类型。 &lt;code&gt;Level&lt;/code&gt; 可以是 &lt;code&gt;module&lt;/code&gt; ， &lt;code&gt;function&lt;/code&gt; ， &lt;code&gt;clause&lt;/code&gt; 或 &lt;code&gt;line&lt;/code&gt; ,并确定分析的级别。</target>
        </trans-unit>
        <trans-unit id="ad356f294fc230007682c0d5e6322d0dd5a35dfa" translate="yes" xml:space="preserve">
          <source>Cover can be used in a distributed Erlang system. One of the nodes in the system must then be selected as the &lt;strong&gt;main node&lt;/strong&gt;, and all Cover commands must be executed from this node. The error reason &lt;code&gt;not_main_node&lt;/code&gt; is returned if an interface function is called on one of the remote nodes.</source>
          <target state="translated">Cover可以在分布式Erlang系统中使用。然后必须选择系统中的一个节点作为&lt;strong&gt;主节点&lt;/strong&gt;，并且必须从该节点执行所有Cover命令。如果在远程节点之一上调用接口函数，则会返回错误原因 &lt;code&gt;not_main_node&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="efdd1d19388f1ad40db411f5e79d2444791778f7" translate="yes" xml:space="preserve">
          <source>Cover uses the concept of &lt;strong&gt;executable lines&lt;/strong&gt;, which is lines of code containing an executable expression such as a matching or a function call. A blank line or a line containing a comment, function head or pattern in a &lt;code&gt;case&lt;/code&gt;- or &lt;code&gt;receive&lt;/code&gt; statement is not executable.</source>
          <target state="translated">Cover使用&lt;strong&gt;可执行行&lt;/strong&gt;的概念，这是包含可执行表达式（例如匹配项或函数调用）的代码行。空行或在 &lt;code&gt;case&lt;/code&gt; 包含注释，函数头或模式的行-或 &lt;code&gt;receive&lt;/code&gt; 语句不可执行。</target>
        </trans-unit>
        <trans-unit id="3fcd2bb254eeffbc48003d0a3ca69db8f1888904" translate="yes" xml:space="preserve">
          <source>Coverage Analysis</source>
          <target state="translated">覆盖面分析</target>
        </trans-unit>
        <trans-unit id="9bfb19cbf3bb0aab18db0895fdeb9ba88ec76995" translate="yes" xml:space="preserve">
          <source>Coverage analysis can be used to verify test cases, making sure all relevant code is covered, and may also be helpful when looking for bottlenecks in the code.</source>
          <target state="translated">覆盖率分析可以用来验证测试用例,确保所有相关的代码都被覆盖,当寻找代码中的瓶颈时,可能也很有帮助。</target>
        </trans-unit>
        <trans-unit id="c0830cd94be5900ba1bffd8f332ea958d6b1ca39" translate="yes" xml:space="preserve">
          <source>Coverage analysis can be used to verify test cases, making sure all relevant code is covered, and may be helpful when looking for bottlenecks in the code.</source>
          <target state="translated">覆盖率分析可以用来验证测试用例,确保所有相关的代码都被覆盖,当寻找代码中的瓶颈时可能会有帮助。</target>
        </trans-unit>
        <trans-unit id="339ecd56868008dda34959860ad98a9cbad45333" translate="yes" xml:space="preserve">
          <source>Coverage data for a module can not be imported from the same file twice unless the module is first reset or compiled. The check is based on the filename, so you can easily fool the system by renaming your export file.</source>
          <target state="translated">一个模块的覆盖数据不能从同一个文件中导入两次,除非该模块先被重置或编译。这个检查是基于文件名的,所以你可以通过重命名你的导出文件来轻松骗过系统。</target>
        </trans-unit>
        <trans-unit id="ead1d71d616866a06acac54055345b0739743db8" translate="yes" xml:space="preserve">
          <source>Coverage data for a module cannot be imported from the same file twice unless the module is first reset or compiled. The check is based on the filename, so you can easily fool the system by renaming your export file.</source>
          <target state="translated">一个模块的覆盖数据不能从同一个文件中导入两次,除非该模块先被重置或编译。这个检查是基于文件名的,所以你可以很容易地通过重命名你的导出文件来欺骗系统。</target>
        </trans-unit>
        <trans-unit id="53e1c73d3025c9ba7db0f50cede6dcb299dae9b6" translate="yes" xml:space="preserve">
          <source>Coverage data from several export files can be imported into one system. The coverage data is then added up when analysing.</source>
          <target state="translated">可以将多个导出文件的覆盖数据导入到一个系统中。然后在分析时将覆盖数据相加。</target>
        </trans-unit>
        <trans-unit id="7be519b1caa12a3e695df4c814afc26c98548ab4" translate="yes" xml:space="preserve">
          <source>CpuTopology</source>
          <target state="translated">CpuTopology</target>
        </trans-unit>
        <trans-unit id="942ce37bef054ef0162c019c98c5ece4ef66735e" translate="yes" xml:space="preserve">
          <source>Crash dumps are written mainly for one of two reasons: either the built-in function &lt;code&gt;erlang:halt/1&lt;/code&gt; is called explicitly with a string argument from running Erlang code, or the runtime system has detected an error that cannot be handled. The most usual reason that the system cannot handle the error is that the cause is external limitations, such as running out of memory. A crash dump caused by an internal error can be caused by the system reaching limits in the emulator itself (like the number of atoms in the system, or too many simultaneous ETS tables). Usually the emulator or the operating system can be reconfigured to avoid the crash, which is why interpreting the crash dump correctly is important.</source>
          <target state="translated">崩溃转储的编写主要出于以下两个原因之一：内置函数 &lt;code&gt;erlang:halt/1&lt;/code&gt; 被正在运行的Erlang代码中的字符串参数显式调用，或者运行时系统检测到无法处理的错误。系统无法处理该错误的最常见原因是原因是外部限制，例如内存不足。由内部错误引起的崩溃转储可能由系统达到仿真器本身的限制（例如系统中的原子数，或同时存在多个ETS表）引起。通常，可以重新配置模拟器或操作系统以避免崩溃，这就是为什么正确解释崩溃转储很重要的原因。</target>
        </trans-unit>
        <trans-unit id="12ab06985e17c5931448d1baa17c79e49f8bc6d5" translate="yes" xml:space="preserve">
          <source>Crash report</source>
          <target state="translated">碰撞报告</target>
        </trans-unit>
        <trans-unit id="3b71b3b8b62acb796f6cb5f664f8995c89e2bb0b" translate="yes" xml:space="preserve">
          <source>Crashdump Viewer</source>
          <target state="translated">崩溃检视器</target>
        </trans-unit>
        <trans-unit id="b80b23aa30365e3ee781a9ad495bb06de144c359" translate="yes" xml:space="preserve">
          <source>Crashdump Viewer can also be started from an Erlang node by calling &lt;code&gt;&lt;a href=&quot;crashdump_viewer#start-0&quot;&gt;crashdump_viewer:start/0&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;crashdump_viewer#start-1&quot;&gt;crashdump_viewer:start/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">也可以通过调用 &lt;code&gt;&lt;a href=&quot;crashdump_viewer#start-0&quot;&gt;crashdump_viewer:start/0&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;crashdump_viewer#start-1&quot;&gt;crashdump_viewer:start/1&lt;/a&gt;&lt;/code&gt; 从Erlang节点启动Crashdump Viewer 。</target>
        </trans-unit>
        <trans-unit id="03e24416b1576aaa95d50494fe2395104590e567" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;Collector&lt;/code&gt;</source>
          <target state="translated">创建 &lt;code&gt;Collector&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="576130bba7f989833665a2f72ce7512a8617b48b" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;TAGS&lt;/code&gt; file covering all files in the Erlang distribution.</source>
          <target state="translated">创建一个 &lt;code&gt;TAGS&lt;/code&gt; 文件，覆盖Erlang发行版中的所有文件。</target>
        </trans-unit>
        <trans-unit id="d0f8df8c888de8a3bd9cdc165da46a0f09f382a5" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;TAGS&lt;/code&gt; file for the file &lt;code&gt;File&lt;/code&gt;.</source>
          <target state="translated">为文件 &lt;code&gt;File&lt;/code&gt; 创建一个 &lt;code&gt;TAGS&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="3b14f67d7675d11117b996c7df1829ee3c6b3c6f" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;Viewer&lt;/code&gt; (this can do step #1 for you)</source>
          <target state="translated">创建一个 &lt;code&gt;Viewer&lt;/code&gt; （这可以为您执行第1步）</target>
        </trans-unit>
        <trans-unit id="9353b65c45876c9662f86e278aa391060668807c" translate="yes" xml:space="preserve">
          <source>Create a TAGS file for all files in any directory in &lt;code&gt;DirList&lt;/code&gt;.</source>
          <target state="translated">为 &lt;code&gt;DirList&lt;/code&gt; 中任何目录中的所有文件创建一个TAGS文件。</target>
        </trans-unit>
        <trans-unit id="49ef8a48a0d1b0f6ec81d02ef8769d5531eca62a" translate="yes" xml:space="preserve">
          <source>Create a TAGS file for all files in directory &lt;code&gt;Dir&lt;/code&gt;.</source>
          <target state="translated">为目录 &lt;code&gt;Dir&lt;/code&gt; 中的所有文件创建一个TAGS文件。</target>
        </trans-unit>
        <trans-unit id="f56b6af13850a8163d0186d918c2c0f48693de6b" translate="yes" xml:space="preserve">
          <source>Create a TAGS file for the files in the list &lt;code&gt;FileList&lt;/code&gt;.</source>
          <target state="translated">为列表 &lt;code&gt;FileList&lt;/code&gt; 中的文件创建一个TAGS文件。</target>
        </trans-unit>
        <trans-unit id="18089c54168cf5a3629777d0b2cf1bf27f995a2a" translate="yes" xml:space="preserve">
          <source>Create a Unique Name</source>
          <target state="translated">创建一个独特的名字</target>
        </trans-unit>
        <trans-unit id="3a55e82bc9e7e596b91ba6bd50d6d53955686f63" translate="yes" xml:space="preserve">
          <source>Create a approximation match filter.</source>
          <target state="translated">创建一个近似匹配过滤器。</target>
        </trans-unit>
        <trans-unit id="26fbd2c6aae8ec5ccd5e77ba7ff45e2fc09b5dcb" translate="yes" xml:space="preserve">
          <source>Create a delete modification operation.</source>
          <target state="translated">创建一个删除修改操作。</target>
        </trans-unit>
        <trans-unit id="592ba770df0fc69f0d8f91848d06fab9dd80da1a" translate="yes" xml:space="preserve">
          <source>Create a equality filter.</source>
          <target state="translated">创建一个平等过滤器。</target>
        </trans-unit>
        <trans-unit id="104dca53ee40e67e3da9db935bb2ef911a20ea4e" translate="yes" xml:space="preserve">
          <source>Create a file named &lt;code&gt;People.asn&lt;/code&gt; containing the following:</source>
          <target state="translated">创建一个名为 &lt;code&gt;People.asn&lt;/code&gt; 的文件，其中包含以下内容：</target>
        </trans-unit>
        <trans-unit id="aa9362425e0f52900c3b1c7a297acca7bc3b1802" translate="yes" xml:space="preserve">
          <source>Create a file named for example &lt;code&gt;&quot;/home/me/ssl/ssl_test@myhost.conf&quot;&lt;/code&gt;:</source>
          <target state="translated">创建一个名为 &lt;code&gt;&quot;/home/me/ssl/ssl_test@myhost.conf&quot;&lt;/code&gt; 的文件：</target>
        </trans-unit>
        <trans-unit id="626ae4b32ed0297e0e02224f9d4bd60936c2f4c7" translate="yes" xml:space="preserve">
          <source>Create a filter where at least one of the &lt;code&gt;Filter&lt;/code&gt; must be true.</source>
          <target state="translated">创建一个过滤器，其中至少一个 &lt;code&gt;Filter&lt;/code&gt; 必须为true。</target>
        </trans-unit>
        <trans-unit id="eb6d57a79998511e07b54cdefd1310681bce30d0" translate="yes" xml:space="preserve">
          <source>Create a filter which filters on attribute type presence.</source>
          <target state="translated">创建一个过滤器,对属性类型的存在进行过滤。</target>
        </trans-unit>
        <trans-unit id="6f117e5f3c76f2155cda189d839be9a2f6ccd7a8" translate="yes" xml:space="preserve">
          <source>Create a filter which filters on substrings.</source>
          <target state="translated">创建一个过滤器,对子串进行过滤。</target>
        </trans-unit>
        <trans-unit id="2af57efe8be9015cf93a4381075bc27b04923ced" translate="yes" xml:space="preserve">
          <source>Create a fixed-size array with entries 0-9 set to &lt;code&gt;undefined&lt;/code&gt;:</source>
          <target state="translated">创建一个固定大小的数组，将条目0-9设置为 &lt;code&gt;undefined&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="e6b5bde089c628dca52fbe378d899423d334a24a" translate="yes" xml:space="preserve">
          <source>Create a greater or equal filter.</source>
          <target state="translated">创建一个较大或相等的过滤器。</target>
        </trans-unit>
        <trans-unit id="fb8c3e6b2cd3f1984966b77dac5f0549d29a98f7" translate="yes" xml:space="preserve">
          <source>Create a less or equal filter.</source>
          <target state="translated">创建一个较小或相等的过滤器。</target>
        </trans-unit>
        <trans-unit id="15bd8fbac38fa9c0984b59ad0bf37e2cc73e15f8" translate="yes" xml:space="preserve">
          <source>Create a map with the engine information and the algorithm used by the engine:</source>
          <target state="translated">创建一个包含引擎信息和引擎使用的算法的地图。</target>
        </trans-unit>
        <trans-unit id="ca227920feb2ce51d78f1c0a629898a8200d2064" translate="yes" xml:space="preserve">
          <source>Create a name that Erlang processes can use to communicate with your service:</source>
          <target state="translated">创建一个Erlang进程可以用来与你的服务进行通信的名称。</target>
        </trans-unit>
        <trans-unit id="af3e7657b6e8e7dd28c1ffffe3198d42d1052799" translate="yes" xml:space="preserve">
          <source>Create a new I/O Queue that can be used to store data. &lt;code&gt;opts&lt;/code&gt; has to be set to &lt;code&gt;ERL_NIF_IOQ_NORMAL&lt;/code&gt;.</source>
          <target state="translated">创建一个新的I / O队列，可用于存储数据。 &lt;code&gt;opts&lt;/code&gt; 必须设置为 &lt;code&gt;ERL_NIF_IOQ_NORMAL&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="169e354b1af335f2d6d0cea00aa63ab3421af184" translate="yes" xml:space="preserve">
          <source>Create a new array of &lt;code&gt;Arity&lt;/code&gt; number of atomics. All atomics in the array are initially set to zero.</source>
          <target state="translated">创建一个新的 &lt;code&gt;Arity&lt;/code&gt; 原子数数组。数组中的所有原子最初都设置为零。</target>
        </trans-unit>
        <trans-unit id="cad7d3cbbe8fca69478c918e70eab52abbb2a5ab" translate="yes" xml:space="preserve">
          <source>Create a new counter array of &lt;code&gt;Size&lt;/code&gt; counters. All counters in the array are initially set to zero.</source>
          <target state="translated">创建一个新的 &lt;code&gt;Size&lt;/code&gt; 计数器计数器数组。数组中的所有计数器最初都设置为零。</target>
        </trans-unit>
        <trans-unit id="46b916c064fe8d38b498d3fcb234d266338cef27" translate="yes" xml:space="preserve">
          <source>Create a new mib-server data instance.</source>
          <target state="translated">创建一个新的mib-server数据实例。</target>
        </trans-unit>
        <trans-unit id="8ac9b36a6b6d05960d255fea988bf61a43df4603" translate="yes" xml:space="preserve">
          <source>Create a normal I/O Queue</source>
          <target state="translated">创建一个正常的I/O队列</target>
        </trans-unit>
        <trans-unit id="2f46c9e6e6117dcb60428ee1062ff3b6dabce009" translate="yes" xml:space="preserve">
          <source>Create a normal deviate with mean -3 and variance 0.5:</source>
          <target state="translated">创建一个平均数为-3,方差为0.5的正态偏差。</target>
        </trans-unit>
        <trans-unit id="e46c48fdfaf4fe9b91274a2ccb2050ab1670a35b" translate="yes" xml:space="preserve">
          <source>Create a permanent process. Make sure this process is supervised (so that if it does die, this will be noticed).</source>
          <target state="translated">创建一个永久性的流程。确保这个过程受到监督(这样,如果它真的死了,就会被注意到)。</target>
        </trans-unit>
        <trans-unit id="f87ed9893eaef61ee75bc97a64e50d1418764cc2" translate="yes" xml:space="preserve">
          <source>Create a pid that Erlang processes can use to communicate with your service:</source>
          <target state="translated">创建一个PID,让Erlang进程可以用来和你的服务进行通信。</target>
        </trans-unit>
        <trans-unit id="c7b0fa9220e00137cf0bc4e2e31c93ebb119a475" translate="yes" xml:space="preserve">
          <source>Create a replace modification operation.</source>
          <target state="translated">创建一个替换修改操作。</target>
        </trans-unit>
        <trans-unit id="3d45a2c96eb33d1c31c88316fe809698322a2e08" translate="yes" xml:space="preserve">
          <source>Create a socket and a context for the socket.</source>
          <target state="translated">创建一个套接字和套接字的上下文。</target>
        </trans-unit>
        <trans-unit id="167585982f8da70a58a94ae2e3bfa5af72e56e80" translate="yes" xml:space="preserve">
          <source>Create a standard normal deviate:</source>
          <target state="translated">创建一个标准的正态偏差。</target>
        </trans-unit>
        <trans-unit id="5216d75c5df4629d1b73067f76cfce5b66bfe412" translate="yes" xml:space="preserve">
          <source>Create a syntax tree for a constant term.</source>
          <target state="translated">为一个常量词创建一个语法树。</target>
        </trans-unit>
        <trans-unit id="c0794c144895e84308d76814fd04b93125d0f8b9" translate="yes" xml:space="preserve">
          <source>Create a table</source>
          <target state="translated">创建一个表格</target>
        </trans-unit>
        <trans-unit id="f6dbf3a807d7799ba3ba9cc144e351dd2f48eeb9" translate="yes" xml:space="preserve">
          <source>Create a target system. Gives the same result as &lt;code&gt;{ok,TargetSpec}=reltool:get_target_spec(Server)&lt;/code&gt; and &lt;code&gt;reltool:eval_target_spec(TargetSpec,RootDir,TargetDir)&lt;/code&gt;.</source>
          <target state="translated">创建目标系统。给出与 &lt;code&gt;{ok,TargetSpec}=reltool:get_target_spec(Server)&lt;/code&gt; 和 &lt;code&gt;reltool:eval_target_spec(TargetSpec,RootDir,TargetDir)&lt;/code&gt; 相同的结果。</target>
        </trans-unit>
        <trans-unit id="5b4661b932081042d7e59011b3cd56447329c978" translate="yes" xml:space="preserve">
          <source>Create a variable.</source>
          <target state="translated">创建一个变量。</target>
        </trans-unit>
        <trans-unit id="e6c1a7f631413b443c4fcbeac8e165d247ffa369" translate="yes" xml:space="preserve">
          <source>Create an add modification operation.</source>
          <target state="translated">创建一个添加修改操作。</target>
        </trans-unit>
        <trans-unit id="8e098465fc21b3ee187bc574354b7f571e444f4b" translate="yes" xml:space="preserve">
          <source>Create an atom term from the string &lt;code&gt;name&lt;/code&gt; with length &lt;code&gt;len&lt;/code&gt;. &lt;code&gt;NULL&lt;/code&gt; characters are treated as any other characters. If &lt;code&gt;len&lt;/code&gt; exceeds the maximum length allowed for an atom (255 characters), &lt;code&gt;enif_make_atom&lt;/code&gt; invokes &lt;code&gt;&lt;a href=&quot;#enif_make_badarg&quot;&gt; enif_make_badarg&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">从长度为 &lt;code&gt;len&lt;/code&gt; 的字符串 &lt;code&gt;name&lt;/code&gt; 创建一个原子项。 &lt;code&gt;NULL&lt;/code&gt; 字符被视为其他任何字符。如果 &lt;code&gt;len&lt;/code&gt; 超过一个原子允许的最大长度（255个字符），则 &lt;code&gt;enif_make_atom&lt;/code&gt; 调用 &lt;code&gt;&lt;a href=&quot;#enif_make_badarg&quot;&gt; enif_make_badarg&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8bcb60f4b46b1aab468530c8da3961437ff030ed" translate="yes" xml:space="preserve">
          <source>Create an atom term from the string &lt;code&gt;name&lt;/code&gt; with length &lt;code&gt;len&lt;/code&gt;. &lt;code&gt;NULL&lt;/code&gt; characters are treated as any other characters. If &lt;code&gt;len&lt;/code&gt; exceeds the maximum length allowed for an atom (255 characters), &lt;code&gt;enif_make_atom&lt;/code&gt; invokes &lt;code&gt;&lt;a href=&quot;#enif_make_badarg&quot;&gt;enif_make_badarg&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">从长度为 &lt;code&gt;len&lt;/code&gt; 的字符串 &lt;code&gt;name&lt;/code&gt; 创建一个原子项。 &lt;code&gt;NULL&lt;/code&gt; 字符被视为其他任何字符。如果 &lt;code&gt;len&lt;/code&gt; 超出原子允许的最大长度（255个字符），则 &lt;code&gt;enif_make_atom&lt;/code&gt; 调用 &lt;code&gt;&lt;a href=&quot;#enif_make_badarg&quot;&gt;enif_make_badarg&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="494380e57adec53b6d78cc348c505392001d3be7" translate="yes" xml:space="preserve">
          <source>Create an endpoint (socket) for communication based on an already existing file descriptor. The function attempts to retrieve domain, type and protocol from the system. This is however not possible on all platforms, and in those cases it expects it in &lt;code&gt;Opts&lt;/code&gt;.</source>
          <target state="translated">基于已经存在的文件描述符创建用于通信的端点（套接字）。该功能尝试从系统中检索域，类型和协议。但是，这并非在所有平台上都可行，在某些情况下，它期望在 &lt;code&gt;Opts&lt;/code&gt; 中实现。</target>
        </trans-unit>
        <trans-unit id="7c543866e80f615ff98adff052c89a7d1a3314ef" translate="yes" xml:space="preserve">
          <source>Create an entry for the agent community config file, &lt;code&gt;community.conf&lt;/code&gt;.</source>
          <target state="translated">为代理程序社区配置文件 &lt;code&gt;community.conf&lt;/code&gt; 创建一个条目。</target>
        </trans-unit>
        <trans-unit id="96294eddd7e82ccb5f9f3fea84fa35d82ea3e2e8" translate="yes" xml:space="preserve">
          <source>Create an entry for the agent config file, &lt;code&gt;agent.conf&lt;/code&gt;.</source>
          <target state="translated">为代理配置文件 &lt;code&gt;agent.conf&lt;/code&gt; 创建一个条目。</target>
        </trans-unit>
        <trans-unit id="3622e4df7bb98f7c0e9a1b7f0b270a249d2c6768" translate="yes" xml:space="preserve">
          <source>Create an entry for the agent context config file, &lt;code&gt;context.conf&lt;/code&gt;.</source>
          <target state="translated">为代理程序上下文配置文件 &lt;code&gt;context.conf&lt;/code&gt; 创建一个条目。</target>
        </trans-unit>
        <trans-unit id="a744ad6cabf9c4df0b77946b7ea111301f0b5a6c" translate="yes" xml:space="preserve">
          <source>Create an entry for the agent notify config file, &lt;code&gt;notify.conf&lt;/code&gt;.</source>
          <target state="translated">为代理通知配置文件创建一个条目 &lt;code&gt;notify.conf&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f277c38709e78c33b32871eef7515dbba489ce4e" translate="yes" xml:space="preserve">
          <source>Create an entry for the agent standard config file, &lt;code&gt;standard.conf&lt;/code&gt;.</source>
          <target state="translated">为代理程序标准配置文件 &lt;code&gt;standard.conf&lt;/code&gt; 创建一个条目。</target>
        </trans-unit>
        <trans-unit id="909182dd39b2dba6ce86d742c5bd8832cf9ab4e9" translate="yes" xml:space="preserve">
          <source>Create an entry for the agent target_addr config file, &lt;code&gt;target_addr.conf&lt;/code&gt;.</source>
          <target state="translated">为代理程序target_addr配置文件 &lt;code&gt;target_addr.conf&lt;/code&gt; 创建一个条目。</target>
        </trans-unit>
        <trans-unit id="0708fd06ec0c4accb75e9a38e0a900c7aff0b6ea" translate="yes" xml:space="preserve">
          <source>Create an entry for the agent target_params config file, &lt;code&gt;target_params.conf&lt;/code&gt;.</source>
          <target state="translated">为代理程序target_params配置文件 &lt;code&gt;target_params.conf&lt;/code&gt; 创建一个条目。</target>
        </trans-unit>
        <trans-unit id="167e10bac7fde97e4577a6263411c62598730af6" translate="yes" xml:space="preserve">
          <source>Create an entry for the agent vacm config file, &lt;code&gt;vacm.conf&lt;/code&gt;.</source>
          <target state="translated">为代理程序vacm配置文件 &lt;code&gt;vacm.conf&lt;/code&gt; 创建一个条目。</target>
        </trans-unit>
        <trans-unit id="5e0e053e31ff71edc57858165a8224a29c0b7c7a" translate="yes" xml:space="preserve">
          <source>Create an entry for the manager agents config file, &lt;code&gt;agents.conf&lt;/code&gt;.</source>
          <target state="translated">为管理器代理程序配置文件 &lt;code&gt;agents.conf&lt;/code&gt; 创建一个条目。</target>
        </trans-unit>
        <trans-unit id="52ba889102b3003d42a0e5d8433fbe5dd160295f" translate="yes" xml:space="preserve">
          <source>Create an entry for the manager config file, &lt;code&gt;manager.conf&lt;/code&gt;.</source>
          <target state="translated">为管理器配置文件 &lt;code&gt;manager.conf&lt;/code&gt; 创建一个条目。</target>
        </trans-unit>
        <trans-unit id="387f5f0ed16d86f926eb2d5e718122abf31198c4" translate="yes" xml:space="preserve">
          <source>Create an entry for the manager users config file, &lt;code&gt;users.conf&lt;/code&gt;.</source>
          <target state="translated">为经理用户配置文件 &lt;code&gt;users.conf&lt;/code&gt; 创建一个条目。</target>
        </trans-unit>
        <trans-unit id="22b76d17e4d4f86232216e86751b3954396f653e" translate="yes" xml:space="preserve">
          <source>Create an extendible array and set entry 17 to &lt;code&gt;true&lt;/code&gt;, causing the array to grow automatically:</source>
          <target state="translated">创建一个可扩展数组并将条目17设置为 &lt;code&gt;true&lt;/code&gt; ，使该数组自动增长：</target>
        </trans-unit>
        <trans-unit id="887a94ea85fe183307ad062151c77132f2e8cf11" translate="yes" xml:space="preserve">
          <source>Create and match Erlang terms.</source>
          <target state="translated">创建和匹配Erlang术语。</target>
        </trans-unit>
        <trans-unit id="c9526735e1932da5dddfb4c79329ed09c865fcbc" translate="yes" xml:space="preserve">
          <source>Create or open a mib storage table.</source>
          <target state="translated">创建或打开一个mib存储表。</target>
        </trans-unit>
        <trans-unit id="94e1abef5c17b22a55c1ec83059b25bbc1ec62b7" translate="yes" xml:space="preserve">
          <source>Create tables</source>
          <target state="translated">创建表格</target>
        </trans-unit>
        <trans-unit id="01b71e02e19512fce5f4679c0c39089b386b3a93" translate="yes" xml:space="preserve">
          <source>Create the actual target system from a specification generated by &lt;code&gt;reltool:get_target_spec/1&lt;/code&gt;. The creation of the specification for a target system is performed in two steps. In the first step a complete specification will be generated. It will likely contain much more files than you are interested in in your target system. In the second step the specification will be filtered according to your filters. There you have the ability to specify filters per application as well as system wide filters. You can also select a &lt;code&gt;profile&lt;/code&gt; for your system. Depending on the &lt;code&gt;profile&lt;/code&gt;, different default filters will be used.</source>
          <target state="translated">根据由 &lt;code&gt;reltool:get_target_spec/1&lt;/code&gt; 生成的规范创建实际的目标系统。目标系统规范的创建分两个步骤进行。第一步，将生成一个完整的规范。它可能包含比目标系统感兴趣的文件更多的文件。在第二步中，将根据您的过滤器过滤规格。您可以在其中为每个应用程序指定过滤器以及系统范围的过滤器。您也可以为系统选择一个 &lt;code&gt;profile&lt;/code&gt; 。根据 &lt;code&gt;profile&lt;/code&gt; ，将使用不同的默认过滤器。</target>
        </trans-unit>
        <trans-unit id="f5624dc4a9ee17945dae101fbcc78b7c74c77664" translate="yes" xml:space="preserve">
          <source>Created by calling &lt;code&gt;&lt;a href=&quot;#enif_alloc_env&quot;&gt; enif_alloc_env&lt;/a&gt;&lt;/code&gt;. This environment can be used to store terms between NIF calls and to send terms with &lt;code&gt;&lt;a href=&quot;#enif_send&quot;&gt;enif_send&lt;/a&gt;&lt;/code&gt;. A process independent environment with all its terms is valid until you explicitly invalidate it with &lt;code&gt;&lt;a href=&quot;#enif_free_env&quot;&gt;enif_free_env&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;enif_send&lt;/code&gt;.</source>
          <target state="translated">通过调用 &lt;code&gt;&lt;a href=&quot;#enif_alloc_env&quot;&gt; enif_alloc_env&lt;/a&gt;&lt;/code&gt; 创建。此环境可用于在NIF调用之间存储术语，并使用 &lt;code&gt;&lt;a href=&quot;#enif_send&quot;&gt;enif_send&lt;/a&gt;&lt;/code&gt; 发送术语。具有所有术语的与进程无关的环境是有效的，直到您使用 &lt;code&gt;&lt;a href=&quot;#enif_free_env&quot;&gt;enif_free_env&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;enif_send&lt;/code&gt; 显式使它无效为止。</target>
        </trans-unit>
        <trans-unit id="f0797d02b20b103e20318e116156be01cb8f6dec" translate="yes" xml:space="preserve">
          <source>Created by calling &lt;code&gt;&lt;a href=&quot;#enif_alloc_env&quot;&gt;enif_alloc_env&lt;/a&gt;&lt;/code&gt;. This environment can be used to store terms between NIF calls and to send terms with &lt;code&gt;&lt;a href=&quot;#enif_send&quot;&gt;enif_send&lt;/a&gt;&lt;/code&gt;. A process-independent environment with all its terms is valid until you explicitly invalidate it with &lt;code&gt;&lt;a href=&quot;#enif_free_env&quot;&gt;enif_free_env&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;enif_send&lt;/code&gt;.</source>
          <target state="translated">通过调用 &lt;code&gt;&lt;a href=&quot;#enif_alloc_env&quot;&gt;enif_alloc_env&lt;/a&gt;&lt;/code&gt; 创建。此环境可用于在NIF调用之间存储术语，并通过 &lt;code&gt;&lt;a href=&quot;#enif_send&quot;&gt;enif_send&lt;/a&gt;&lt;/code&gt; 发送术语。具有所有术语的独立于进程的环境都是有效的，直到您使用 &lt;code&gt;&lt;a href=&quot;#enif_free_env&quot;&gt;enif_free_env&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;enif_send&lt;/code&gt; 显式使它无效。</target>
        </trans-unit>
        <trans-unit id="514cd8927b8143838017c5dfe7094be254454e25" translate="yes" xml:space="preserve">
          <source>Created using &lt;code&gt;&lt;a href=&quot;#iterator-1&quot;&gt;maps:iterator/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;#iterator-1&quot;&gt;maps:iterator/1&lt;/a&gt;&lt;/code&gt; 创建。</target>
        </trans-unit>
        <trans-unit id="487b42466390101a31015a0a69a464d4392cb7f7" translate="yes" xml:space="preserve">
          <source>Creates a &quot;floating&quot; document. The result represents the same set of layouts as &lt;code&gt;D&lt;/code&gt;; however, a floating document may be moved relative to other floating documents immediately beside or above it, according to their relative horizontal and vertical priorities. These priorities are set with the &lt;code&gt;Hp&lt;/code&gt; and &lt;code&gt;Vp&lt;/code&gt; parameters; if omitted, both default to zero.</source>
          <target state="translated">创建一个&amp;ldquo;浮动&amp;rdquo;文档。结果表示与 &lt;code&gt;D&lt;/code&gt; 相同的布局集；但是，根据其相对的水平和垂直优先级，浮动文档可以相对于其他浮动文档紧挨在其旁边或上方移动。这些优先级由 &lt;code&gt;Hp&lt;/code&gt; 和 &lt;code&gt;Vp&lt;/code&gt; 参数设置。如果省略，则默认均为零。</target>
        </trans-unit>
        <trans-unit id="76da5355d0bb349914f29a6facbd4856daa7a1e0" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;&lt;a href=&quot;#family&quot;&gt;family of subsets&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;family(F,&amp;nbsp;T)&lt;/code&gt; is equivalent to &lt;code&gt;from_term(F,&amp;nbsp;T)&lt;/code&gt; if the result is a family. If no &lt;code&gt;&lt;a href=&quot;#type&quot;&gt;type&lt;/a&gt;&lt;/code&gt; is explicitly specified, &lt;code&gt;[{atom,&amp;nbsp;[atom]}]&lt;/code&gt; is used as the family type.</source>
          <target state="translated">创建一个 &lt;code&gt;&lt;a href=&quot;#family&quot;&gt;family of subsets&lt;/a&gt;&lt;/code&gt; 。如果结果是家族 &lt;code&gt;from_term(F,&amp;nbsp;T)&lt;/code&gt; 则 &lt;code&gt;family(F,&amp;nbsp;T)&lt;/code&gt; 等效于from_term（F，T）。如果未明确指定 &lt;code&gt;&lt;a href=&quot;#type&quot;&gt;type&lt;/a&gt;&lt;/code&gt; ，则将 &lt;code&gt;[{atom,&amp;nbsp;[atom]}]&lt;/code&gt; 用作族类型。</target>
        </trans-unit>
        <trans-unit id="b6edc4af33935bd0b68c80bc42ab073b0ee98d9c" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;&lt;a href=&quot;#family&quot;&gt;family&lt;/a&gt;&lt;/code&gt; from the directed graph &lt;code&gt;Graph&lt;/code&gt;. Each vertex a of &lt;code&gt;Graph&lt;/code&gt; is represented by a pair (a, {b[1], ..., b[n]}), where the b[i]:s are the out-neighbors of a. If no type is explicitly specified, [{atom, [atom]}] is used as type of the family. It is assumed that &lt;code&gt;Type&lt;/code&gt; is a &lt;code&gt;&lt;a href=&quot;#valid_type&quot;&gt;valid type&lt;/a&gt;&lt;/code&gt; of the external set of the family.</source>
          <target state="translated">从有向图 &lt;code&gt;Graph&lt;/code&gt; 创建 &lt;code&gt;&lt;a href=&quot;#family&quot;&gt;family&lt;/a&gt;&lt;/code&gt; 。的各顶点一 &lt;code&gt;Graph&lt;/code&gt; 由一对表示（A，{B [1]，...，B [n]的}），其中B [I]：s为a的外邻居。如果未明确指定类型，则将[{atom，[atom]}]]用作族的类型。假定 &lt;code&gt;Type&lt;/code&gt; 是该族的外部集的 &lt;code&gt;&lt;a href=&quot;#valid_type&quot;&gt;valid type&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6a9b6fde7ab651cb67957b3b32ef78fb6f2aa16e" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;&lt;a href=&quot;#function&quot;&gt;function&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;a_function(F,&amp;nbsp;T)&lt;/code&gt; is equivalent to &lt;code&gt;from_term(F,&amp;nbsp;T)&lt;/code&gt; if the result is a function. If no &lt;code&gt;&lt;a href=&quot;#type&quot;&gt;type&lt;/a&gt;&lt;/code&gt; is explicitly specified, &lt;code&gt;[{atom,&amp;nbsp;atom}]&lt;/code&gt; is used as the function type.</source>
          <target state="translated">创建一个 &lt;code&gt;&lt;a href=&quot;#function&quot;&gt;function&lt;/a&gt;&lt;/code&gt; 。如果结果为函数 &lt;code&gt;from_term(F,&amp;nbsp;T)&lt;/code&gt; 则 &lt;code&gt;a_function(F,&amp;nbsp;T)&lt;/code&gt; 等效于from_term（F，T）。如果未明确指定任何 &lt;code&gt;&lt;a href=&quot;#type&quot;&gt;type&lt;/a&gt;&lt;/code&gt; ，则将 &lt;code&gt;[{atom,&amp;nbsp;atom}]&lt;/code&gt; 用作函数类型。</target>
        </trans-unit>
        <trans-unit id="92a3f67c331a810da94f44e76d0a71a350e0ecc2" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;&lt;a href=&quot;#relation&quot;&gt;relation&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;relation(R,&amp;nbsp;T)&lt;/code&gt; is equivalent to &lt;code&gt;from_term(R,&amp;nbsp;T)&lt;/code&gt;, if T is a &lt;code&gt;&lt;a href=&quot;#type&quot;&gt;type&lt;/a&gt;&lt;/code&gt; and the result is a relation. If &lt;code&gt;Type&lt;/code&gt; is an integer N, then &lt;code&gt;[{atom,&amp;nbsp;...,&amp;nbsp;atom}])&lt;/code&gt;, where the tuple size is N, is used as type of the relation. If no type is explicitly specified, the size of the first tuple of &lt;code&gt;Tuples&lt;/code&gt; is used if there is such a tuple. &lt;code&gt;relation([])&lt;/code&gt; is equivalent to &lt;code&gt;relation([],&amp;nbsp;2)&lt;/code&gt;.</source>
          <target state="translated">创建一个 &lt;code&gt;&lt;a href=&quot;#relation&quot;&gt;relation&lt;/a&gt;&lt;/code&gt; 。 &lt;code&gt;relation(R,&amp;nbsp;T)&lt;/code&gt; 等同于 &lt;code&gt;from_term(R,&amp;nbsp;T)&lt;/code&gt; ，如果T是一个 &lt;code&gt;&lt;a href=&quot;#type&quot;&gt;type&lt;/a&gt;&lt;/code&gt; ，其结果是一个关系。如果 &lt;code&gt;Type&lt;/code&gt; 是整数N，则将元组大小为N的 &lt;code&gt;[{atom,&amp;nbsp;...,&amp;nbsp;atom}])&lt;/code&gt; 用作关系的类型。如果未明确指定任何类型，则如果存在这样的元组，则使用元 &lt;code&gt;Tuples&lt;/code&gt; 的第一个元组的大小。 &lt;code&gt;relation([])&lt;/code&gt; 等效于 &lt;code&gt;relation([],&amp;nbsp;2)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0ee66a3d76be00ae1ad9942ed1e1ea86d7420db9" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;gen_server&lt;/code&gt; process as part of a supervision tree. This function is to be called, directly or indirectly, by the supervisor. For example, it ensures that the &lt;code&gt;gen_server&lt;/code&gt; process is linked to the supervisor.</source>
          <target state="translated">创建 &lt;code&gt;gen_server&lt;/code&gt; 进程作为监督树的一部分。主管将直接或间接调用此功能。例如，它确保 &lt;code&gt;gen_server&lt;/code&gt; 进程链接到主管。</target>
        </trans-unit>
        <trans-unit id="8202fea2f1acb64c08fd10322bdad688d5f51273" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;gen_statem&lt;/code&gt; process according to OTP design principles (using &lt;code&gt;&lt;a href=&quot;proc_lib&quot;&gt;proc_lib&lt;/a&gt;&lt;/code&gt; primitives) that is linked to the calling process. This is essential when the &lt;code&gt;gen_statem&lt;/code&gt; must be part of a supervision tree so it gets linked to its supervisor.</source>
          <target state="translated">根据OTP设计原则（使用 &lt;code&gt;&lt;a href=&quot;proc_lib&quot;&gt;proc_lib&lt;/a&gt;&lt;/code&gt; 原语）创建 &lt;code&gt;gen_statem&lt;/code&gt; 流程，该流程链接到调用流程。当 &lt;code&gt;gen_statem&lt;/code&gt; 必须是监督树的一部分，以便将其链接到其监督者时，这是必不可少的。</target>
        </trans-unit>
        <trans-unit id="1de6640bed7630d72fc1f6681948477e8ed3569d" translate="yes" xml:space="preserve">
          <source>Creates a Mnesia table called &lt;code&gt;Name&lt;/code&gt; according to argument &lt;code&gt;TabDef&lt;/code&gt;. This list must be a list of &lt;code&gt;{Item, Value}&lt;/code&gt; tuples, where the following values are allowed:</source>
          <target state="translated">根据参数 &lt;code&gt;TabDef&lt;/code&gt; 创建一个名为 &lt;code&gt;Name&lt;/code&gt; 的Mnesia表。此列表必须是 &lt;code&gt;{Item, Value}&lt;/code&gt; 元组的列表，其中允许以下值：</target>
        </trans-unit>
        <trans-unit id="3de38f4db79206c004fe13707342e67487ea7ae4" translate="yes" xml:space="preserve">
          <source>Creates a PEM binary.</source>
          <target state="translated">创建一个PEM二进制。</target>
        </trans-unit>
        <trans-unit id="cb6ed58c35d7e30533553719153fe432e02abef9" translate="yes" xml:space="preserve">
          <source>Creates a PEM entry that can be feed to &lt;code&gt;pem_encode/1&lt;/code&gt;.</source>
          <target state="translated">创建一个可以馈给 &lt;code&gt;pem_encode/1&lt;/code&gt; 的PEM条目。</target>
        </trans-unit>
        <trans-unit id="858272cee3e49d9b882d89cab8d5412193f867b6" translate="yes" xml:space="preserve">
          <source>Creates a UTF Byte Order Mark (BOM) as a binary from the supplied &lt;code&gt;InEncoding&lt;/code&gt;. The BOM is, if supported at all, expected to be placed first in UTF encoded files or messages.</source>
          <target state="translated">根据提供的 &lt;code&gt;InEncoding&lt;/code&gt; 创建一个UTF字节顺序标记（BOM）作为二进制文件。如果完全支持BOM，则应将其放在UTF编码的文件或消息中的第一位。</target>
        </trans-unit>
        <trans-unit id="54fe50ce4821eaeb39b368b96edc03d43b167421" translate="yes" xml:space="preserve">
          <source>Creates a binary term that is memory-managed by a resource object &lt;code&gt;obj&lt;/code&gt; obtained by &lt;code&gt;&lt;a href=&quot;#enif_alloc_resource&quot;&gt; enif_alloc_resource&lt;/a&gt;&lt;/code&gt;. The returned binary term consists of &lt;code&gt;size&lt;/code&gt; bytes pointed to by &lt;code&gt;data&lt;/code&gt;. This raw binary data must be kept readable and unchanged until the destructor of the resource is called. The binary data can be stored external to the resource object, in which case the destructor is responsible for releasing the data.</source>
          <target state="translated">创建一个二进制项，该二进制项由 &lt;code&gt;&lt;a href=&quot;#enif_alloc_resource&quot;&gt; enif_alloc_resource&lt;/a&gt;&lt;/code&gt; 获得的资源对象 &lt;code&gt;obj&lt;/code&gt; 进行内存管理。返回的二进制项由 &lt;code&gt;data&lt;/code&gt; 指向的 &lt;code&gt;size&lt;/code&gt; 字节组成。在调用资源的析构函数之前，此原始二进制数据必须保持可读性和不变性。二进制数据可以存储在资源对象的外部，在这种情况下，析构函数负责释放数据。</target>
        </trans-unit>
        <trans-unit id="4dc50a97b5e83bf2afd996a7ed6d7c2811c083ad" translate="yes" xml:space="preserve">
          <source>Creates a binary term that is memory-managed by a resource object &lt;code&gt;obj&lt;/code&gt; obtained by &lt;code&gt;&lt;a href=&quot;#enif_alloc_resource&quot;&gt;enif_alloc_resource&lt;/a&gt;&lt;/code&gt;. The returned binary term consists of &lt;code&gt;size&lt;/code&gt; bytes pointed to by &lt;code&gt;data&lt;/code&gt;. This raw binary data must be kept readable and unchanged until the destructor of the resource is called. The binary data can be stored external to the resource object, in which case the destructor is responsible for releasing the data.</source>
          <target state="translated">创建一个二进制项，该二进制项由 &lt;code&gt;&lt;a href=&quot;#enif_alloc_resource&quot;&gt;enif_alloc_resource&lt;/a&gt;&lt;/code&gt; 获得的资源对象 &lt;code&gt;obj&lt;/code&gt; 进行内存管理。返回的二进制项由 &lt;code&gt;data&lt;/code&gt; 指向的 &lt;code&gt;size&lt;/code&gt; 字节组成。在调用资源的析构函数之前，此原始二进制数据必须保持可读性和不变。二进制数据可以存储在资源对象的外部，在这种情况下，析构函数负责释放数据。</target>
        </trans-unit>
        <trans-unit id="3fd4437ddbde12d7ea32b68f63f865c080cac6ad" translate="yes" xml:space="preserve">
          <source>Creates a binary with the content of &lt;code&gt;Subject&lt;/code&gt; duplicated &lt;code&gt;N&lt;/code&gt; times.</source>
          <target state="translated">创建一个具有重复 &lt;code&gt;N&lt;/code&gt; 次的 &lt;code&gt;Subject&lt;/code&gt; 内容的二进制文件。</target>
        </trans-unit>
        <trans-unit id="96976114dc99117119cb26cc796818c0795df90d" translate="yes" xml:space="preserve">
          <source>Creates a breakpoint at &lt;code&gt;Line&lt;/code&gt; in &lt;code&gt;Module&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;Module&lt;/code&gt; 中的 &lt;code&gt;Line&lt;/code&gt; 创建一个断点。</target>
        </trans-unit>
        <trans-unit id="1f0a5e91b4f9c5b02c4e276e0cbd742f0fb47b2b" translate="yes" xml:space="preserve">
          <source>Creates a breakpoint at the first line of every clause of function &lt;code&gt;Module:Name/Arity&lt;/code&gt;.</source>
          <target state="translated">在功能 &lt;code&gt;Module:Name/Arity&lt;/code&gt; 的每个子句的第一行创建一个断点。</target>
        </trans-unit>
        <trans-unit id="9bd86a6e5cd5756f5a89d5836096f4dcae978a4d" translate="yes" xml:space="preserve">
          <source>Creates a condition variable and returns a pointer to it.</source>
          <target state="translated">创建一个条件变量并返回一个指向它的指针。</target>
        </trans-unit>
        <trans-unit id="efc2f571a607db5e8a1352cc2fc06595bc8d8bc5" translate="yes" xml:space="preserve">
          <source>Creates a data constructor node with the specified type and subtrees. (Cf. &lt;code&gt;data_type/1&lt;/code&gt;.) An exception is thrown if the length of &lt;code&gt;Elements&lt;/code&gt; is invalid for the given &lt;code&gt;Type&lt;/code&gt;; see &lt;code&gt;data_es/1&lt;/code&gt; for arity constraints on constructor types.</source>
          <target state="translated">创建具有指定类型和子树的数据构造器节点。（参见 &lt;code&gt;data_type/1&lt;/code&gt; 。）如果 &lt;code&gt;Elements&lt;/code&gt; 的长度对于给定的 &lt;code&gt;Type&lt;/code&gt; 无效，则抛出异常；否则为false。有关构造函数类型的限制，请参见 &lt;code&gt;data_es/1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="55e25bc415e3ff34c3fc2d5ee04a94290dc29e85" translate="yes" xml:space="preserve">
          <source>Creates a digital signature.</source>
          <target state="translated">创建一个数字签名。</target>
        </trans-unit>
        <trans-unit id="9c9282509eb20f50f2ca3fbaba1cde454f58bd56" translate="yes" xml:space="preserve">
          <source>Creates a digraph where the vertices are the &lt;code&gt;&lt;a href=&quot;#strong_components&quot;&gt;strongly connected components&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;Digraph&lt;/code&gt; as returned by &lt;code&gt;&lt;a href=&quot;#strong_components-1&quot;&gt; strong_components/1&lt;/a&gt;&lt;/code&gt;. If X and Y are two different strongly connected components, and vertices x and y exist in X and Y, respectively, such that there is an edge &lt;code&gt;&lt;a href=&quot;#emanate&quot;&gt;emanating&lt;/a&gt;&lt;/code&gt; from x and &lt;code&gt;&lt;a href=&quot;#incident&quot;&gt;incident&lt;/a&gt;&lt;/code&gt; on y, then an edge emanating from X and incident on Y is created.</source>
          <target state="translated">创建一个有向图，其中顶点是 &lt;code&gt;&lt;a href=&quot;#strong_components&quot;&gt;strongly connected components&lt;/a&gt;&lt;/code&gt; 的 &lt;code&gt;Digraph&lt;/code&gt; 通过如返回 &lt;code&gt;&lt;a href=&quot;#strong_components-1&quot;&gt; strong_components/1&lt;/a&gt;&lt;/code&gt; 。如果X和Y是两个不同的强连通分量，并且顶点x和y分别存在于X和Y中，从而存在从x &lt;code&gt;&lt;a href=&quot;#emanate&quot;&gt;emanating&lt;/a&gt;&lt;/code&gt; 并 &lt;code&gt;&lt;a href=&quot;#incident&quot;&gt;incident&lt;/a&gt;&lt;/code&gt; 在y上的边，则创建了从X发出并入射在Y上的边。 。</target>
        </trans-unit>
        <trans-unit id="177b168cc30c65fba15c3150ae4d0c07a9a72d3e" translate="yes" xml:space="preserve">
          <source>Creates a digraph where the vertices are the &lt;code&gt;&lt;a href=&quot;#strong_components&quot;&gt;strongly connected components&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;Digraph&lt;/code&gt; as returned by &lt;code&gt;&lt;a href=&quot;#strong_components-1&quot;&gt;strong_components/1&lt;/a&gt;&lt;/code&gt;. If X and Y are two different strongly connected components, and vertices x and y exist in X and Y, respectively, such that there is an edge &lt;code&gt;&lt;a href=&quot;#emanate&quot;&gt;emanating&lt;/a&gt;&lt;/code&gt; from x and &lt;code&gt;&lt;a href=&quot;#incident&quot;&gt;incident&lt;/a&gt;&lt;/code&gt; on y, then an edge emanating from X and incident on Y is created.</source>
          <target state="translated">创建一个有向图，其中顶点是 &lt;code&gt;&lt;a href=&quot;#strong_components&quot;&gt;strongly connected components&lt;/a&gt;&lt;/code&gt; 的 &lt;code&gt;Digraph&lt;/code&gt; 通过如返回 &lt;code&gt;&lt;a href=&quot;#strong_components-1&quot;&gt;strong_components/1&lt;/a&gt;&lt;/code&gt; 。如果X和Y是两个不同的强连接分量，并且顶点X和y分别存在于X和Y中，从而存在从x &lt;code&gt;&lt;a href=&quot;#emanate&quot;&gt;emanating&lt;/a&gt;&lt;/code&gt; 并 &lt;code&gt;&lt;a href=&quot;#incident&quot;&gt;incident&lt;/a&gt;&lt;/code&gt; 在y上的边，则创建从X发出并入射在Y上的边。</target>
        </trans-unit>
        <trans-unit id="c04f0bf0c1dccf27f3a1ba968e20fb6b1e972f5f" translate="yes" xml:space="preserve">
          <source>Creates a directed graph from &lt;code&gt;&lt;a href=&quot;#family&quot;&gt;family&lt;/a&gt;&lt;/code&gt;&lt;code&gt;Family&lt;/code&gt;. For each pair (a, {b[1], ..., b[n]}) of &lt;code&gt;Family&lt;/code&gt;, vertex a and the edges (a, b[i]) for 1 &amp;lt;= i &amp;lt;= n are added to a newly created directed graph.</source>
          <target state="translated">从创建有向图 &lt;code&gt;&lt;a href=&quot;#family&quot;&gt;family&lt;/a&gt;&lt;/code&gt; &lt;code&gt;Family&lt;/code&gt; 。对于 &lt;code&gt;Family&lt;/code&gt; 的每对（a，{b [1]，...，b [n]}），将顶点a和1 &amp;lt;= i &amp;lt;= n的边（a，b [i]）添加到a新创建的有向图。</target>
        </trans-unit>
        <trans-unit id="d6fc8fee02e92845ea3295f84f11702cc881f652" translate="yes" xml:space="preserve">
          <source>Creates a directory specified by &lt;code&gt;Name&lt;/code&gt;. &lt;code&gt;Name&lt;/code&gt; must be a full path to a new directory. The directory can only be created in an existing directory.</source>
          <target state="translated">创建一个由 &lt;code&gt;Name&lt;/code&gt; 指定的目录。 &lt;code&gt;Name&lt;/code&gt; 必须是新目录的完整路径。该目录只能在现有目录中创建。</target>
        </trans-unit>
        <trans-unit id="5955484063cfe956af5dad94ea9452772c35cd00" translate="yes" xml:space="preserve">
          <source>Creates a distribution point for CRLs issued by the same issuer as &lt;code&gt;Cert&lt;/code&gt;. Can be used as input to &lt;code&gt;&lt;a href=&quot;#pkix_crls_validate-3&quot;&gt;pkix_crls_validate/3 &lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">为由与 &lt;code&gt;Cert&lt;/code&gt; 相同的发行者发行的CRL创建分发点。可用作 &lt;code&gt;&lt;a href=&quot;#pkix_crls_validate-3&quot;&gt;pkix_crls_validate/3 &lt;/a&gt;&lt;/code&gt; 的输入</target>
        </trans-unit>
        <trans-unit id="d4dd26b5ef04ee592cf19bdd431a1a3655f1df57" translate="yes" xml:space="preserve">
          <source>Creates a distribution point for CRLs issued by the same issuer as &lt;code&gt;Cert&lt;/code&gt;. Can be used as input to &lt;code&gt;&lt;a href=&quot;#pkix_crls_validate-3&quot;&gt;pkix_crls_validate/3&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">为由与 &lt;code&gt;Cert&lt;/code&gt; 相同的发行者发行的CRL创建分发点。可用作 &lt;code&gt;&lt;a href=&quot;#pkix_crls_validate-3&quot;&gt;pkix_crls_validate/3&lt;/a&gt;&lt;/code&gt; 的输入</target>
        </trans-unit>
        <trans-unit id="93f92f374d2f586a13b40862e10990d1a1684578" translate="yes" xml:space="preserve">
          <source>Creates a driver monitor and works in many ways as &lt;code&gt;erlang:monitor/2&lt;/code&gt; in ERTS, does for processes. When a driver changes state, the monitor results in a monitor message that is sent to the calling process. &lt;code&gt;MonitorRef&lt;/code&gt; returned by this function is included in the message sent.</source>
          <target state="translated">创建一个驱动程序监视器，并以多种方式工作，就像ERTS中的 &lt;code&gt;erlang:monitor/2&lt;/code&gt; 一样，用于进程。当驱动程序更改状态时，监视器将生成一条监视器消息，该消息将发送到调用进程。此函数返回的 &lt;code&gt;MonitorRef&lt;/code&gt; 包含在发送的消息中。</target>
        </trans-unit>
        <trans-unit id="8c0e2f95b58b703238ace5268c022d91dddef908" translate="yes" xml:space="preserve">
          <source>Creates a driver monitor if the condition specified in &lt;code&gt;MonitorOption&lt;/code&gt; is true. The valid options are:</source>
          <target state="translated">如果 &lt;code&gt;MonitorOption&lt;/code&gt; 中指定的条件为true，则创建驱动程序监视器。有效选项是：</target>
        </trans-unit>
        <trans-unit id="3f037d732a6c2f9ebb012224ab4b46ee884e3984" translate="yes" xml:space="preserve">
          <source>Creates a driver monitor if the return value is to be &lt;code&gt;{ok, pending_driver}&lt;/code&gt;.</source>
          <target state="translated">如果返回值是 &lt;code&gt;{ok, pending_driver}&lt;/code&gt; 则创建一个驱动程序监视器。</target>
        </trans-unit>
        <trans-unit id="5eae0bd06c002d04175cbff01ea3db44f3d9b74d" translate="yes" xml:space="preserve">
          <source>Creates a filter where all &lt;code&gt;Filter&lt;/code&gt; must be true.</source>
          <target state="translated">创建一个过滤器，其中所有 &lt;code&gt;Filter&lt;/code&gt; 必须为true。</target>
        </trans-unit>
        <trans-unit id="5fd4e4258189efddb1dac03781a6ef83372e401b" translate="yes" xml:space="preserve">
          <source>Creates a fixed &quot;best&quot; abstract layout for a syntax tree. This is similar to the &lt;code&gt;layout/2&lt;/code&gt; function, except that here, the final layout has been selected with respect to the given options. The atom &lt;code&gt;empty&lt;/code&gt; is returned if no such layout could be produced. For information on the options, see the &lt;code&gt;format/2&lt;/code&gt; function.</source>
          <target state="translated">为语法树创建固定的&amp;ldquo;最佳&amp;rdquo;抽象布局。这类似于 &lt;code&gt;layout/2&lt;/code&gt; 函数，除了这里已根据给定的选项选择了最终布局。如果无法生成这样的布局，则返回原子 &lt;code&gt;empty&lt;/code&gt; 。有关选项的信息，请参见 &lt;code&gt;format/2&lt;/code&gt; 功能。</target>
        </trans-unit>
        <trans-unit id="aad48c5e7cfe9ae5866cafe81aaea1eaa3791015" translate="yes" xml:space="preserve">
          <source>Creates a fixed-size array. See also &lt;code&gt;&lt;a href=&quot;#fix-1&quot;&gt;fix/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">创建一个固定大小的数组。另请参见 &lt;code&gt;&lt;a href=&quot;#fix-1&quot;&gt;fix/1&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="df58523ae34fbde91d6f98be0aefaae2ce2b6e9b" translate="yes" xml:space="preserve">
          <source>Creates a floating-point term from a &lt;code&gt;double&lt;/code&gt;. If argument &lt;code&gt;double&lt;/code&gt; is not finite or is NaN, &lt;code&gt;enif_make_double&lt;/code&gt; invokes &lt;code&gt;&lt;a href=&quot;#enif_make_badarg&quot;&gt; enif_make_badarg&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;double&lt;/code&gt; 创建一个浮点项。如果参数 &lt;code&gt;double&lt;/code&gt; 不是有限值或NaN，则 &lt;code&gt;enif_make_double&lt;/code&gt; 调用 &lt;code&gt;&lt;a href=&quot;#enif_make_badarg&quot;&gt; enif_make_badarg&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="76eff20ff3e006eb53d7bdce2970decfc91750c8" translate="yes" xml:space="preserve">
          <source>Creates a floating-point term from a &lt;code&gt;double&lt;/code&gt;. If argument &lt;code&gt;double&lt;/code&gt; is not finite or is NaN, &lt;code&gt;enif_make_double&lt;/code&gt; invokes &lt;code&gt;&lt;a href=&quot;#enif_make_badarg&quot;&gt;enif_make_badarg&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;double&lt;/code&gt; 创建一个浮点项。如果参数 &lt;code&gt;double&lt;/code&gt; 不是有限值或NaN，则 &lt;code&gt;enif_make_double&lt;/code&gt; 调用 &lt;code&gt;&lt;a href=&quot;#enif_make_badarg&quot;&gt;enif_make_badarg&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dca62271e9846db2f3e57ee9be4c324cb3d68aef" translate="yes" xml:space="preserve">
          <source>Creates a key, or just changes to it, if it is already there. Works like a combination of &lt;code&gt;mkdir&lt;/code&gt; and &lt;code&gt;cd&lt;/code&gt;. Calls the Win32 API function &lt;code&gt;RegCreateKeyEx()&lt;/code&gt;.</source>
          <target state="translated">创建一个密钥，或仅对其进行更改（如果已存在）。就像 &lt;code&gt;mkdir&lt;/code&gt; 和 &lt;code&gt;cd&lt;/code&gt; 的组合一样工作。调用Win32 API函数 &lt;code&gt;RegCreateKeyEx()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fb5207c76ff31838885f4aaf7e199e878e56bf7f" translate="yes" xml:space="preserve">
          <source>Creates a key-value pair with the specified &lt;code&gt;key&lt;/code&gt; and floating point value &lt;code&gt;f&lt;/code&gt;. If an object already exists with the same &lt;code&gt;key&lt;/code&gt;, the new value replaces the old one. If the previous value was a binary or string, it is freed with &lt;code&gt;free()&lt;/code&gt;.</source>
          <target state="translated">用指定的 &lt;code&gt;key&lt;/code&gt; 和浮点值 &lt;code&gt;f&lt;/code&gt; 创建一个键值对。如果一个对象已经具有相同的 &lt;code&gt;key&lt;/code&gt; ，则新值将替换旧值。如果先前的值是二进制或字符串，则使用 &lt;code&gt;free()&lt;/code&gt; 释放它。</target>
        </trans-unit>
        <trans-unit id="f5252d544c60e4dcc9831941c968a7defd8d6b71" translate="yes" xml:space="preserve">
          <source>Creates a key-value pair with the specified &lt;code&gt;key&lt;/code&gt; and integer value &lt;code&gt;i&lt;/code&gt;. If an object already exists with the same &lt;code&gt;key&lt;/code&gt;, the new value replaces the old one. If the previous value was a binary or string, it is freed with &lt;code&gt;free()&lt;/code&gt;.</source>
          <target state="translated">创建具有指定 &lt;code&gt;key&lt;/code&gt; 和整数值 &lt;code&gt;i&lt;/code&gt; 的键值对。如果一个对象已经具有相同的 &lt;code&gt;key&lt;/code&gt; ，则新值将替换旧值。如果先前的值是二进制或字符串，则使用 &lt;code&gt;free()&lt;/code&gt; 释放它。</target>
        </trans-unit>
        <trans-unit id="f3df3b3c5a894545c959663f3d753ce56e0ee470" translate="yes" xml:space="preserve">
          <source>Creates a key-value pair with the specified &lt;code&gt;key&lt;/code&gt; whose &quot;value&quot; is the binary object pointed to by &lt;code&gt;p&lt;/code&gt;. If an object already exists with the same &lt;code&gt;key&lt;/code&gt;, the new value replaces the old one. If the previous value was a binary or string, it is freed with &lt;code&gt;free()&lt;/code&gt;.</source>
          <target state="translated">用指定的 &lt;code&gt;key&lt;/code&gt; 创建一个键-值对，其&amp;ldquo;值&amp;rdquo;是 &lt;code&gt;p&lt;/code&gt; 指向的二进制对象。如果一个对象已经具有相同的 &lt;code&gt;key&lt;/code&gt; ，则新值将替换旧值。如果先前的值是二进制或字符串，则使用 &lt;code&gt;free()&lt;/code&gt; 释放它。</target>
        </trans-unit>
        <trans-unit id="daec5695fa911551ee2d74ca5d12d2de073855ed" translate="yes" xml:space="preserve">
          <source>Creates a key-value pair with the specified &lt;code&gt;key&lt;/code&gt; whose &quot;value&quot; is the specified string &lt;code&gt;s&lt;/code&gt;. If an object already exists with the same &lt;code&gt;key&lt;/code&gt;, the new value replaces the old one. If the previous value was a binary or string, it is freed with &lt;code&gt;free()&lt;/code&gt;.</source>
          <target state="translated">用指定 &lt;code&gt;key&lt;/code&gt; 创建一个键值对，其&amp;ldquo;值&amp;rdquo;是指定的字符串 &lt;code&gt;s&lt;/code&gt; 。如果一个对象已经具有相同的 &lt;code&gt;key&lt;/code&gt; ，则新值将替换旧值。如果先前的值是二进制或字符串，则使用 &lt;code&gt;free()&lt;/code&gt; 释放它。</target>
        </trans-unit>
        <trans-unit id="16d914d1139dca09b6640753aa71244f722ee9fb" translate="yes" xml:space="preserve">
          <source>Creates a key-value pair with the specified &lt;code&gt;key&lt;/code&gt; whose value is specified by &lt;code&gt;v&lt;/code&gt;. If an object already exists with the same &lt;code&gt;key&lt;/code&gt;, the new value replaces the old one. If the previous value was a binary or string, it is freed with &lt;code&gt;free()&lt;/code&gt;.</source>
          <target state="translated">用指定的 &lt;code&gt;key&lt;/code&gt; 创建一个键-值对，其值由 &lt;code&gt;v&lt;/code&gt; 指定。如果一个对象已经具有相同的 &lt;code&gt;key&lt;/code&gt; ，则新值将替换旧值。如果先前的值是二进制或字符串，则使用 &lt;code&gt;free()&lt;/code&gt; 释放它。</target>
        </trans-unit>
        <trans-unit id="f3032b78251e0fd04578b11b1e3602d47371a273" translate="yes" xml:space="preserve">
          <source>Creates a link between the calling process and another process (or port) &lt;code&gt;PidOrPort&lt;/code&gt;, if there is not such a link already. If a process attempts to create a link to itself, nothing is done. Returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">如果还没有这样的链接，则在调用进程与另一个进程（或端口） &lt;code&gt;PidOrPort&lt;/code&gt; 之间创建链接。如果某个进程尝试创建到自身的链接，则不会执行任何操作。返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c54504590752c7a529f29fe7ef21bbe1f8c01bf6" translate="yes" xml:space="preserve">
          <source>Creates a link between the calling process and another process (or port) &lt;code&gt;PidOrPort&lt;/code&gt;. If the link already exists or a process attempts to create a link to itself, nothing is done. Returns &lt;code&gt;true&lt;/code&gt; if the link is set up.</source>
          <target state="translated">在调用进程和另一个进程（或端口） &lt;code&gt;PidOrPort&lt;/code&gt; 之间创建链接。如果该链接已经存在，或者某个进程尝试创建到其自身的链接，则不执行任何操作。如果已建立链接，则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="357ea49c3cb007e9b97cbf534577b2dc67a39b82" translate="yes" xml:space="preserve">
          <source>Creates a list cell &lt;code&gt;[head | tail]&lt;/code&gt;.</source>
          <target state="translated">创建一个列表单元格 &lt;code&gt;[head | tail]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="298fb27a25b7aad82b2d52d5a29a8c62cab17e55" translate="yes" xml:space="preserve">
          <source>Creates a list containing the characters of the &lt;code&gt;NULL&lt;/code&gt;-terminated string &lt;code&gt;string&lt;/code&gt; with encoding &lt;code&gt;&lt;a href=&quot;#ErlNifCharEncoding&quot;&gt;encoding&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">创建一个包含的字符列表 &lt;code&gt;NULL&lt;/code&gt; 封端的字符串 &lt;code&gt;string&lt;/code&gt; 与编码 &lt;code&gt;&lt;a href=&quot;#ErlNifCharEncoding&quot;&gt;encoding&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c11084e2d9e7c1478099163426980638c7a37b71" translate="yes" xml:space="preserve">
          <source>Creates a list containing the characters of the string &lt;code&gt;string&lt;/code&gt; with length &lt;code&gt;len&lt;/code&gt; and encoding &lt;code&gt;&lt;a href=&quot;#ErlNifCharEncoding&quot;&gt;encoding&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;NULL&lt;/code&gt; characters are treated as any other characters.</source>
          <target state="translated">创建一个列表，该列表包含长度为 &lt;code&gt;len&lt;/code&gt; 和编码 &lt;code&gt;&lt;a href=&quot;#ErlNifCharEncoding&quot;&gt;encoding&lt;/a&gt;&lt;/code&gt; 的字符串 &lt;code&gt;string&lt;/code&gt; 的字符。 &lt;code&gt;NULL&lt;/code&gt; 字符被视为其他任何字符。</target>
        </trans-unit>
        <trans-unit id="ada4a8b45d9a446bceb699fc801432d8ee62571d" translate="yes" xml:space="preserve">
          <source>Creates a list from a &lt;code&gt;NULL&lt;/code&gt;-terminated string.</source>
          <target state="translated">从以 &lt;code&gt;NULL&lt;/code&gt; 终止的字符串创建列表。</target>
        </trans-unit>
        <trans-unit id="f41e60335b704cf16f78792df8f3fe633a6736a1" translate="yes" xml:space="preserve">
          <source>Creates a list from a sequence of bytes.</source>
          <target state="translated">从一个字节序列创建一个列表。</target>
        </trans-unit>
        <trans-unit id="dda6423d352eebc300ea54dde6d2ae3cfde6a16a" translate="yes" xml:space="preserve">
          <source>Creates a local binding &lt;code&gt;Var = Arg&lt;/code&gt; in &lt;code&gt;Expr&lt;/code&gt;. (This is the same as &lt;code&gt;(fun(Var)-&amp;gt;(Expr)end)(Arg)&lt;/code&gt;.) Note that the binding is not exported outside of &lt;code&gt;Expr&lt;/code&gt;, and that within &lt;code&gt;Expr&lt;/code&gt;, this binding of &lt;code&gt;Var&lt;/code&gt; will shadow any binding of &lt;code&gt;Var&lt;/code&gt; in the surrounding scope.</source>
          <target state="translated">在 &lt;code&gt;Expr&lt;/code&gt; 中创建局部绑定 &lt;code&gt;Var = Arg&lt;/code&gt; 。 （这与 &lt;code&gt;(fun(Var)-&amp;gt;(Expr)end)(Arg)&lt;/code&gt; 相同。）请注意，绑定未导出到 &lt;code&gt;Expr&lt;/code&gt; 之外，而在 &lt;code&gt;Expr&lt;/code&gt; 内，此 &lt;code&gt;Var&lt;/code&gt; 绑定将遮蔽 &lt;code&gt;Var&lt;/code&gt; 中的任何绑定。周围的范围。</target>
        </trans-unit>
        <trans-unit id="ab877aeb736aaca90aa45e02594b2c2f74d1920f" translate="yes" xml:space="preserve">
          <source>Creates a mapping from corresponding short names to full function names. Names are represented by nested tuples of atoms and integers (cf. &lt;code&gt;analyze_function_name/1&lt;/code&gt;). The result is a list containing a pair &lt;code&gt;{ShortName, Name}&lt;/code&gt; for each element &lt;code&gt;Name&lt;/code&gt; in the given list, where the corresponding &lt;code&gt;ShortName&lt;/code&gt; is the rightmost-innermost part of &lt;code&gt;Name&lt;/code&gt;. The list thus represents a finite mapping from unqualified names to the corresponding qualified names.</source>
          <target state="translated">创建从对应的短名称到全功能名称的映射。名称由原子和整数的嵌套元组表示（请参阅 &lt;code&gt;analyze_function_name/1&lt;/code&gt; ）。结果是一个列表，其中包含给定列表中每个元素 &lt;code&gt;Name&lt;/code&gt; 对的 &lt;code&gt;{ShortName, Name}&lt;/code&gt; 对，其中对应的 &lt;code&gt;ShortName&lt;/code&gt; 是 &lt;code&gt;Name&lt;/code&gt; 的最右端。因此，该列表表示从非限定名称到对应限定名称的有限映射。</target>
        </trans-unit>
        <trans-unit id="2de4ad32ef1eac7c5103daac43c5da1dd5bc836f" translate="yes" xml:space="preserve">
          <source>Creates a maximal &lt;code&gt;&lt;a href=&quot;#subgraph&quot;&gt;subgraph&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;Digraph&lt;/code&gt; having as vertices those vertices of &lt;code&gt;Digraph&lt;/code&gt; that are mentioned in &lt;code&gt;Vertices&lt;/code&gt;.</source>
          <target state="translated">创建的最大 &lt;code&gt;&lt;a href=&quot;#subgraph&quot;&gt;subgraph&lt;/a&gt;&lt;/code&gt; 的 &lt;code&gt;Digraph&lt;/code&gt; 具有与顶点的那些顶点 &lt;code&gt;Digraph&lt;/code&gt; 被中提到 &lt;code&gt;Vertices&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a95ed6ebbfb460cf3ec0130982c718ede634c03a" translate="yes" xml:space="preserve">
          <source>Creates a meta-representation of a syntax tree. The result represents an Erlang expression &quot;&lt;code&gt;MetaTree&lt;/code&gt;&quot; which, if evaluated, will yield a new syntax tree representing the same source code text as &lt;code&gt;Tree&lt;/code&gt; (although the actual data representation may be different). The expression represented by &lt;code&gt;MetaTree&lt;/code&gt; is &lt;strong&gt;implementation independent&lt;/strong&gt; with regard to the data structures used by the abstract syntax tree implementation.</source>
          <target state="translated">创建语法树的元表示。结果表示一个Erlang表达式&amp;ldquo; &lt;code&gt;MetaTree&lt;/code&gt; &amp;rdquo;，如果对其进行评估，将生成一个新语法树，该语法树表示与 &lt;code&gt;Tree&lt;/code&gt; 相同的源代码文本（尽管实际数据表示形式可能有所不同）。关于抽象语法树实现所使用的数据结构， &lt;code&gt;MetaTree&lt;/code&gt; 表示的表达式是&lt;strong&gt;独立&lt;/strong&gt;于实现的。</target>
        </trans-unit>
        <trans-unit id="b3f1e612a3fa26bfe63165309b3ea4260c5ea19d" translate="yes" xml:space="preserve">
          <source>Creates a meta-representation of a syntax tree. The result represents an Erlang expression &quot;&lt;code&gt;MetaTree&lt;/code&gt;&quot; which, if evaluated, will yield a new syntax tree representing the same source code text as &lt;code&gt;Tree&lt;/code&gt; (although the actual data representation may be different). The expression represented by &lt;code&gt;MetaTree&lt;/code&gt; is &lt;strong&gt;implementation independent&lt;/strong&gt; with regard to the data structures used by the abstract syntax tree implementation. Comments attached to nodes of &lt;code&gt;Tree&lt;/code&gt; will be preserved, but other attributes are lost.</source>
          <target state="translated">创建语法树的元表示。结果表示一个Erlang表达式&amp;ldquo; &lt;code&gt;MetaTree&lt;/code&gt; &amp;rdquo;，如果对其进行评估，将生成一个新语法树，该语法树表示与 &lt;code&gt;Tree&lt;/code&gt; 相同的源代码文本（尽管实际数据表示形式可能有所不同）。关于抽象句法树实现所使用的数据结构， &lt;code&gt;MetaTree&lt;/code&gt; 表示的表达式是与&lt;strong&gt;实现无关的&lt;/strong&gt;。附加到 &lt;code&gt;Tree&lt;/code&gt; 节点的注释将保留，但其他属性将丢失。</target>
        </trans-unit>
        <trans-unit id="839ffd31c5e5be24772b09505d667165e74961a9" translate="yes" xml:space="preserve">
          <source>Creates a monitor if the return value is &lt;code&gt;{ok, pending_driver}&lt;/code&gt; or &lt;code&gt;{ok, pending_process}&lt;/code&gt;.</source>
          <target state="translated">如果返回值为 &lt;code&gt;{ok, pending_driver}&lt;/code&gt; 或 &lt;code&gt;{ok, pending_process}&lt;/code&gt; ，则创建一个监视器。</target>
        </trans-unit>
        <trans-unit id="820e489956427e4b5a2498ff24e41655a8413026" translate="yes" xml:space="preserve">
          <source>Creates a mutex and returns a pointer to it.</source>
          <target state="translated">创建一个mutex并返回一个指向它的指针。</target>
        </trans-unit>
        <trans-unit id="07d783e6948e29bd4e8f9a62e120884de2903e26" translate="yes" xml:space="preserve">
          <source>Creates a new array according to the specified otions. By default, the array is extendible and has initial size zero. Array indices start at &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">根据指定的otions创建一个新的数组。默认情况下，数组是可扩展的，初始大小为零。数组索引从 &lt;code&gt;0&lt;/code&gt; 开始。</target>
        </trans-unit>
        <trans-unit id="c5554b65fbf26bfde095ea554d00bf899e1f0e4d" translate="yes" xml:space="preserve">
          <source>Creates a new array according to the specified size and options. If &lt;code&gt;Size&lt;/code&gt; is not a non-negative integer, the call fails with reason &lt;code&gt;badarg&lt;/code&gt;. By default, the array has fixed size. Notice that any size specifications in &lt;code&gt;Options&lt;/code&gt; override parameter &lt;code&gt;Size&lt;/code&gt;.</source>
          <target state="translated">根据指定的大小和选项创建一个新数组。如果 &lt;code&gt;Size&lt;/code&gt; 不是一个非负整数，则调用失败，原因为 &lt;code&gt;badarg&lt;/code&gt; 。默认情况下，数组的大小固定。请注意，&amp;ldquo; &lt;code&gt;Options&lt;/code&gt; 中的任何尺寸规格都会覆盖参数&amp;ldquo; &lt;code&gt;Size&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8d2c121977271ec2e9fd89ca4810ffb1f7caf785" translate="yes" xml:space="preserve">
          <source>Creates a new collection of annotations given a location.</source>
          <target state="translated">创建一个给定位置的新注释集合。</target>
        </trans-unit>
        <trans-unit id="cce28d1b508ba0e41cdbad20e4ad9de7a1d25745" translate="yes" xml:space="preserve">
          <source>Creates a new database on disc. Various files are created in the local Mnesia directory of each node. Notice that the directory must be unique for each node. Two nodes must never share the same directory. If possible, use a local disc device to improve performance.</source>
          <target state="translated">在光盘上创建一个新的数据库。在每个节点的本地Mnesia目录下创建各种文件。注意,每个节点的目录必须是唯一的。两个节点决不能共享同一个目录。如果可能的话,使用本地磁盘设备来提高性能。</target>
        </trans-unit>
        <trans-unit id="88a4c05a8072d74776cc1dfddb905e149147496e" translate="yes" xml:space="preserve">
          <source>Creates a new dictionary.</source>
          <target state="translated">创建一个新的字典。</target>
        </trans-unit>
        <trans-unit id="c0741d4a21f8bc795e7586a6a2939804e641c3ef" translate="yes" xml:space="preserve">
          <source>Creates a new port executing the same driver code as the port creating the new port.</source>
          <target state="translated">创建一个新的 port,执行与创建新 port 的 port 相同的驱动程序代码。</target>
        </trans-unit>
        <trans-unit id="a32798a39cac160b7d9160696c3c08a4062a3c40" translate="yes" xml:space="preserve">
          <source>Creates a new process identifier in the argument &lt;code&gt;pid&lt;/code&gt;. This process identifier refers to a conseptual process residing on the C-node identified by the argument &lt;code&gt;ec&lt;/code&gt;. On success &lt;code&gt;0&lt;/code&gt; is returned. On failure &lt;code&gt;ERL_ERROR&lt;/code&gt; is returned and &lt;code&gt;erl_errno&lt;/code&gt; is set.</source>
          <target state="translated">在参数 &lt;code&gt;pid&lt;/code&gt; 中创建一个新的进程标识符。该过程标识符是指驻留在由参数 &lt;code&gt;ec&lt;/code&gt; 标识的C节点上的概念过程。成功时，将返回 &lt;code&gt;0&lt;/code&gt; 。失败 &lt;code&gt;ERL_ERROR&lt;/code&gt; 将返回 &lt;code&gt;erl_errno&lt;/code&gt; 并设置erl_errno。</target>
        </trans-unit>
        <trans-unit id="a4f62427282324c401d395f61082988ceb0d7d34" translate="yes" xml:space="preserve">
          <source>Creates a new reference in the argument &lt;code&gt;ref&lt;/code&gt;. This reference originates from the C-node identified by the argument &lt;code&gt;ec&lt;/code&gt;. On success &lt;code&gt;0&lt;/code&gt; is returned. On failure &lt;code&gt;ERL_ERROR&lt;/code&gt; is returned and &lt;code&gt;erl_errno&lt;/code&gt; is set.</source>
          <target state="translated">在参数 &lt;code&gt;ref&lt;/code&gt; 中创建一个新引用。该引用源自参数 &lt;code&gt;ec&lt;/code&gt; 标识的C节点。成功时，将返回 &lt;code&gt;0&lt;/code&gt; 。失败 &lt;code&gt;ERL_ERROR&lt;/code&gt; 将返回 &lt;code&gt;erl_errno&lt;/code&gt; 并设置erl_errno。</target>
        </trans-unit>
        <trans-unit id="e25e828a4560d491b0f9a4c74e6f0ec747d062a4" translate="yes" xml:space="preserve">
          <source>Creates a new resource type that does not already exist.</source>
          <target state="translated">创建一个不存在的新资源类型。</target>
        </trans-unit>
        <trans-unit id="65c7ecc7145666f9e8527c947576c65679d62af6" translate="yes" xml:space="preserve">
          <source>Creates a new snmp index structure. The &lt;code&gt;key_types()&lt;/code&gt; type is described above.</source>
          <target state="translated">创建一个新的snmp索引结构。所述 &lt;code&gt;key_types()&lt;/code&gt; 类型如上所述。</target>
        </trans-unit>
        <trans-unit id="c51c1f1c50b0a20da598b48973d35b50c7b217d5" translate="yes" xml:space="preserve">
          <source>Creates a new table and returns a table identifier that can be used in subsequent operations. The table identifier can be sent to other processes so that a table can be shared between different processes within a node.</source>
          <target state="translated">创建一个新的表,并返回一个可用于后续操作的表标识符。表标识符可以发送给其他进程,这样一个节点内的不同进程就可以共享一个表。</target>
        </trans-unit>
        <trans-unit id="5e33afc7d7384af7641f1f2346aa9553b3c9a984" translate="yes" xml:space="preserve">
          <source>Creates a new thread.</source>
          <target state="translated">创建一个新的线程。</target>
        </trans-unit>
        <trans-unit id="63760b005669ecdd0238b403635a0181ace1b547" translate="yes" xml:space="preserve">
          <source>Creates a new tuple of the specified &lt;code&gt;Arity&lt;/code&gt;, where all elements are &lt;code&gt;InitialValue&lt;/code&gt;, for example:</source>
          <target state="translated">创建一个指定 &lt;code&gt;Arity&lt;/code&gt; 的新元组，其中所有元素均为 &lt;code&gt;InitialValue&lt;/code&gt; ，例如：</target>
        </trans-unit>
        <trans-unit id="bbde9b8f1bebedce361140db667277cbb6a0dbed" translate="yes" xml:space="preserve">
          <source>Creates a new, empty process group. The group is globally visible on all nodes. If the group exists, nothing happens.</source>
          <target state="translated">创建一个新的、空的进程组。该组在所有节点上都是全局可见的。如果该组存在,则不会发生任何事情。</target>
        </trans-unit>
        <trans-unit id="86b6449f65fda1f3edf00469bef65360c86b7abb" translate="yes" xml:space="preserve">
          <source>Creates a new, extendible array with initial size zero.</source>
          <target state="translated">创建一个新的、可扩展的数组,初始大小为0。</target>
        </trans-unit>
        <trans-unit id="72f09cdd742eaadc1f7e3c1bc84738390481b910" translate="yes" xml:space="preserve">
          <source>Creates a normal form (minimal) representation of a property. If &lt;code&gt;PropertyIn&lt;/code&gt; is &lt;code&gt;{Key, true}&lt;/code&gt;, where &lt;code&gt;Key&lt;/code&gt; is an atom, &lt;code&gt;Key&lt;/code&gt; is returned, otherwise the whole term &lt;code&gt;PropertyIn&lt;/code&gt; is returned.</source>
          <target state="translated">创建属性的普通形式（最小）表示形式。如果 &lt;code&gt;PropertyIn&lt;/code&gt; 是 &lt;code&gt;{Key, true}&lt;/code&gt; ，其中 &lt;code&gt;Key&lt;/code&gt; 是原子，则返回 &lt;code&gt;Key&lt;/code&gt; ，否则返回整个术语 &lt;code&gt;PropertyIn&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="17761c3096de5b1704c7f003e29b60e041bde506" translate="yes" xml:space="preserve">
          <source>Creates a normal form (minimal) representation of a simple key/value property. Returns &lt;code&gt;Key&lt;/code&gt; if &lt;code&gt;Value&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;Key&lt;/code&gt; is an atom, otherwise a tuple &lt;code&gt;{Key, Value}&lt;/code&gt; is returned.</source>
          <target state="translated">创建简单键/值属性的标准形式（最小值）表示形式。如果 &lt;code&gt;Value&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; 并且 &lt;code&gt;Key&lt;/code&gt; 是一个原子，则返回 &lt;code&gt;Key&lt;/code&gt; ，否则返回元组 &lt;code&gt;{Key, Value}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0cba4487f45bf4cc583ec1f492c5c82b68d8c8a2" translate="yes" xml:space="preserve">
          <source>Creates a port data lock associated with the &lt;code&gt;port&lt;/code&gt;.</source>
          <target state="translated">创建具有相关联的端口的数据锁 &lt;code&gt;port&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="adb54340aaa458238a7b696b3696df65a8505329" translate="yes" xml:space="preserve">
          <source>Creates a port id with creation 0.</source>
          <target state="translated">创建一个创建0的端口id。</target>
        </trans-unit>
        <trans-unit id="c5e127e2c74f7f35b36b6905309ba2bc85781425" translate="yes" xml:space="preserve">
          <source>Creates a process at a remote node.</source>
          <target state="translated">在远程节点创建一个进程。</target>
        </trans-unit>
        <trans-unit id="de1ddce85e84f7a171c60b0bf09a3ebf0a06e45a" translate="yes" xml:space="preserve">
          <source>Creates a process id with creation 0.</source>
          <target state="translated">创建一个创建0的进程id。</target>
        </trans-unit>
        <trans-unit id="fde9fca843eb904c8635192960181019157f804e" translate="yes" xml:space="preserve">
          <source>Creates a query cursor and makes the calling process the owner of the cursor. The cursor is to be used as argument to &lt;code&gt;&lt;a href=&quot;#next_answers-1&quot;&gt; next_answers/1,2&lt;/a&gt;&lt;/code&gt; and (eventually) &lt;code&gt;&lt;a href=&quot;#delete_cursor-1&quot;&gt;delete_cursor/1&lt;/a&gt;&lt;/code&gt;. Calls &lt;code&gt; erlang:spawn_opt/2&lt;/code&gt; to spawn and link to a process that evaluates the query handle. The value of option &lt;code&gt;spawn_options&lt;/code&gt; is used as last argument when calling &lt;code&gt;spawn_opt/2&lt;/code&gt;. Defaults to &lt;code&gt;[link]&lt;/code&gt;.</source>
          <target state="translated">创建查询游标，并使调用过程成为游标的所有者。游标将用作 &lt;code&gt;&lt;a href=&quot;#next_answers-1&quot;&gt; next_answers/1,2&lt;/a&gt;&lt;/code&gt; 和（最终） &lt;code&gt;&lt;a href=&quot;#delete_cursor-1&quot;&gt;delete_cursor/1&lt;/a&gt;&lt;/code&gt; 的参数。调用 &lt;code&gt; erlang:spawn_opt/2&lt;/code&gt; 生成并链接到评估查询句柄的进程。选项 &lt;code&gt;spawn_options&lt;/code&gt; 的值在调用 &lt;code&gt;spawn_opt/2&lt;/code&gt; 时用作最后一个参数。默认为 &lt;code&gt;[link]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7c4ee5a50020d5550c7976d2516abc01af86f5e6" translate="yes" xml:space="preserve">
          <source>Creates a query cursor and makes the calling process the owner of the cursor. The cursor is to be used as argument to &lt;code&gt;&lt;a href=&quot;#next_answers-1&quot;&gt;next_answers/1,2&lt;/a&gt;&lt;/code&gt; and (eventually) &lt;code&gt;&lt;a href=&quot;#delete_cursor-1&quot;&gt;delete_cursor/1&lt;/a&gt;&lt;/code&gt;. Calls &lt;code&gt;erlang:spawn_opt/2&lt;/code&gt; to spawn and link to a process that evaluates the query handle. The value of option &lt;code&gt;spawn_options&lt;/code&gt; is used as last argument when calling &lt;code&gt;spawn_opt/2&lt;/code&gt;. Defaults to &lt;code&gt;[link]&lt;/code&gt;.</source>
          <target state="translated">创建查询游标，并使调用过程成为游标的所有者。游标将用作 &lt;code&gt;&lt;a href=&quot;#next_answers-1&quot;&gt;next_answers/1,2&lt;/a&gt;&lt;/code&gt; 和（最终） &lt;code&gt;&lt;a href=&quot;#delete_cursor-1&quot;&gt;delete_cursor/1&lt;/a&gt;&lt;/code&gt; 的参数。调用 &lt;code&gt;erlang:spawn_opt/2&lt;/code&gt; 生成并链接到评估查询句柄的进程。选项 &lt;code&gt;spawn_options&lt;/code&gt; 的值在调用 &lt;code&gt;spawn_opt/2&lt;/code&gt; 时用作最后一个参数。默认为 &lt;code&gt;[link]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d083664e567b14703e598226c7fd8268df0cd244" translate="yes" xml:space="preserve">
          <source>Creates a reference like &lt;code&gt;&lt;a href=&quot;erlang#make_ref-0&quot;&gt; erlang:make_ref/0&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">创建类似 &lt;code&gt;&lt;a href=&quot;erlang#make_ref-0&quot;&gt; erlang:make_ref/0&lt;/a&gt;&lt;/code&gt; 的引用。</target>
        </trans-unit>
        <trans-unit id="847ce1382a0d2a69dbc5c3b528acab4ae456f658" translate="yes" xml:space="preserve">
          <source>Creates a reference like &lt;code&gt;&lt;a href=&quot;erlang#make_ref-0&quot;&gt;erlang:make_ref/0&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">创建类似 &lt;code&gt;&lt;a href=&quot;erlang#make_ref-0&quot;&gt;erlang:make_ref/0&lt;/a&gt;&lt;/code&gt; 的引用。</target>
        </trans-unit>
        <trans-unit id="adb009b61efaa2ac13ccba310cf5b508653e1bb2" translate="yes" xml:space="preserve">
          <source>Creates a release package file &lt;code&gt;Name.tar.gz&lt;/code&gt;. This file must be uncompressed and unpacked on the target system using &lt;code&gt;&lt;a href=&quot;release_handler&quot;&gt;release_handler&lt;/a&gt;&lt;/code&gt; before the new release can be installed.</source>
          <target state="translated">创建一个发布包文件 &lt;code&gt;Name.tar.gz&lt;/code&gt; 。必须先使用 &lt;code&gt;&lt;a href=&quot;release_handler&quot;&gt;release_handler&lt;/a&gt;&lt;/code&gt; 在目标系统上对该文件进行解压缩和解压缩，然后才能安装新发行版。</target>
        </trans-unit>
        <trans-unit id="1f1ef04adb151d906731affbc6b3aa58794bcd99" translate="yes" xml:space="preserve">
          <source>Creates a row in a table. &lt;code&gt;Row&lt;/code&gt; is a tuple with values for all columns, including the index columns.</source>
          <target state="translated">在表中创建一行。 &lt;code&gt;Row&lt;/code&gt; 是一个元组，具有所有列（包括索引列）的值。</target>
        </trans-unit>
        <trans-unit id="23bad72d544bff3d37d12314497e05ae06051750" translate="yes" xml:space="preserve">
          <source>Creates a send handle from a transport handle. The send handle is intended to be used by megaco_udp:send_message/2.</source>
          <target state="translated">从一个传输句柄创建一个发送句柄。这个发送句柄将被megaco_udp:send_message/2使用。</target>
        </trans-unit>
        <trans-unit id="feb2966e454d2cddfd471ac6227998209c41218e" translate="yes" xml:space="preserve">
          <source>Creates a set from the &lt;code&gt;&lt;a href=&quot;#external_set&quot;&gt;external set&lt;/a&gt;&lt;/code&gt;&lt;code&gt;ExternalSet&lt;/code&gt; and the &lt;code&gt;&lt;a href=&quot;#type&quot;&gt;type&lt;/a&gt;&lt;/code&gt;&lt;code&gt;Type&lt;/code&gt;. It is assumed that &lt;code&gt;Type&lt;/code&gt; is a &lt;code&gt;&lt;a href=&quot;#valid_type&quot;&gt;valid type&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;ExternalSet&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;&lt;a href=&quot;#external_set&quot;&gt;external set&lt;/a&gt;&lt;/code&gt; &lt;code&gt;ExternalSet&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;#type&quot;&gt;type&lt;/a&gt;&lt;/code&gt; &lt;code&gt;Type&lt;/code&gt; 创建一个集合。假设 &lt;code&gt;Type&lt;/code&gt; 是一个 &lt;code&gt;&lt;a href=&quot;#valid_type&quot;&gt;valid type&lt;/a&gt;&lt;/code&gt; 的 &lt;code&gt;ExternalSet&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7b9fa8ffed55deaebce06cde67d6df839c667690" translate="yes" xml:space="preserve">
          <source>Creates a stand-alone event manager process, that is, an event manager that is not part of a supervision tree (and thus has no supervisor) and atomically sets up a monitor to the newly created process.</source>
          <target state="translated">创建一个独立的事件管理器进程,也就是一个不属于监督树的事件管理器(因此没有监督者),并原子地给新创建的进程设置一个监视器。</target>
        </trans-unit>
        <trans-unit id="aa3ee3d7956152b7151bb76dd675486fdb54280d" translate="yes" xml:space="preserve">
          <source>Creates a stand-alone event manager process, that is, an event manager that is not part of a supervision tree and thus has no supervisor.</source>
          <target state="translated">创建一个独立的事件管理器进程,也就是一个不属于监督树的事件管理器,因此没有监督者。</target>
        </trans-unit>
        <trans-unit id="fbe3d036c70cb02b3148667c9d4d4ce5df4f445f" translate="yes" xml:space="preserve">
          <source>Creates a standalone &lt;code&gt;gen_server&lt;/code&gt; process, that is, a &lt;code&gt;gen_server&lt;/code&gt; process that is not part of a supervision tree (and thus has no supervisor) and atomically sets up a monitor to the newly created server.</source>
          <target state="translated">创建一个独立的 &lt;code&gt;gen_server&lt;/code&gt; 进程，即不属于监督树（因此没有监督者）的 &lt;code&gt;gen_server&lt;/code&gt; 进程，并自动为新创建的服务器设置一个监视器。</target>
        </trans-unit>
        <trans-unit id="93bf01489d33f15e965877fe965310b0c6b532e6" translate="yes" xml:space="preserve">
          <source>Creates a standalone &lt;code&gt;gen_server&lt;/code&gt; process, that is, a &lt;code&gt;gen_server&lt;/code&gt; process that is not part of a supervision tree and thus has no supervisor.</source>
          <target state="translated">创建一个独立的 &lt;code&gt;gen_server&lt;/code&gt; 进程，即不属于监督树的 &lt;code&gt;gen_server&lt;/code&gt; 进程，因此没有监督者。</target>
        </trans-unit>
        <trans-unit id="aaae9c612e8dea5330210d3a27a7c3914f5578df" translate="yes" xml:space="preserve">
          <source>Creates a standalone &lt;code&gt;gen_statem&lt;/code&gt; process according to OTP design principles (using &lt;code&gt;&lt;a href=&quot;proc_lib&quot;&gt;proc_lib&lt;/a&gt;&lt;/code&gt; primitives) and atomically sets up a monitor to the newly created process. As it does not get linked to the calling process, this start function cannot be used by a supervisor to start a child.</source>
          <target state="translated">根据OTP设计原则（使用 &lt;code&gt;&lt;a href=&quot;proc_lib&quot;&gt;proc_lib&lt;/a&gt;&lt;/code&gt; 原语）创建一个独立的 &lt;code&gt;gen_statem&lt;/code&gt; 进程，并自动为新创建的进程设置一个监视器。由于它没有链接到调用过程，因此管理员无法使用此启动功能来启动孩子。</target>
        </trans-unit>
        <trans-unit id="6d8ca22ab41c05167e7335066e2aa65e1b49a3fb" translate="yes" xml:space="preserve">
          <source>Creates a standalone &lt;code&gt;gen_statem&lt;/code&gt; process according to OTP design principles (using &lt;code&gt;&lt;a href=&quot;proc_lib&quot;&gt;proc_lib&lt;/a&gt;&lt;/code&gt; primitives). As it does not get linked to the calling process, this start function cannot be used by a supervisor to start a child.</source>
          <target state="translated">根据OTP设计原则（使用 &lt;code&gt;&lt;a href=&quot;proc_lib&quot;&gt;proc_lib&lt;/a&gt;&lt;/code&gt; 原语）创建独立的 &lt;code&gt;gen_statem&lt;/code&gt; 进程。由于它未链接到调用过程，因此管理员无法使用此启动功能来启动孩子。</target>
        </trans-unit>
        <trans-unit id="1dd858a3fb79b7d4485a066b730950af270b60c0" translate="yes" xml:space="preserve">
          <source>Creates a state object for &lt;code&gt;random number generation&lt;/code&gt;, in order to generate cryptographically unpredictable random numbers, and saves it in the process dictionary before returning it as well. See also &lt;code&gt;&lt;a href=&quot;#rand_seed_alg_s-2&quot;&gt;rand_seed_alg_s/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">创建一个用于 &lt;code&gt;random number generation&lt;/code&gt; 的状态对象，以便生成密码学上不可预测的随机数，并将其保存在流程字典中，然后再返回它。另请参阅 &lt;code&gt;&lt;a href=&quot;#rand_seed_alg_s-2&quot;&gt;rand_seed_alg_s/2&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2a5a9d9103e300d2a289356d68c5f9098c903fe9" translate="yes" xml:space="preserve">
          <source>Creates a state object for &lt;code&gt;random number generation&lt;/code&gt;, in order to generate cryptographically unpredictable random numbers. See also &lt;code&gt;&lt;a href=&quot;#rand_seed_alg-1&quot;&gt;rand_seed_alg/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">创建一个用于 &lt;code&gt;random number generation&lt;/code&gt; 的状态对象，以便生成密码学上不可预测的随机数。另请参阅 &lt;code&gt;&lt;a href=&quot;#rand_seed_alg-1&quot;&gt;rand_seed_alg/1&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7091ca7a677aba0763bdf1ce5a6ee3b8305401a5" translate="yes" xml:space="preserve">
          <source>Creates a subscription for event notifications by sending an RFC 5277 create-subscription RPC to the server. The calling process receives events as messages of type &lt;code&gt;&lt;a href=&quot;#type-notification&quot;&gt;notification()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">通过将RFC 5277创建预订RPC发送到服务器，为事件通知创建预订。调用过程接收事件，作为类型为 &lt;code&gt;&lt;a href=&quot;#type-notification&quot;&gt;notification()&lt;/a&gt;&lt;/code&gt; 的消息。</target>
        </trans-unit>
        <trans-unit id="e0cf7909fce5c245f936b7bce9582daefac7d434" translate="yes" xml:space="preserve">
          <source>Creates a subscription for event notifications.</source>
          <target state="translated">创建事件通知的订阅。</target>
        </trans-unit>
        <trans-unit id="dd3e64bf9d81977c2ed55aaacc7a7a661762e7a8" translate="yes" xml:space="preserve">
          <source>Creates a supervisor bridge process, linked to the calling process, which calls &lt;code&gt;Module:init/1&lt;/code&gt; to start the subsystem. To ensure a synchronized startup procedure, this function does not return until &lt;code&gt;Module:init/1&lt;/code&gt; has returned.</source>
          <target state="translated">创建链接到调用过程的主管桥过程，该过程调用 &lt;code&gt;Module:init/1&lt;/code&gt; 来启动子系统。为了确保同步启动过程，该函数在返回 &lt;code&gt;Module:init/1&lt;/code&gt; 之前不会返回。</target>
        </trans-unit>
        <trans-unit id="866c83a2b0809be7645faf06354bfb4935e9080f" translate="yes" xml:space="preserve">
          <source>Creates a supervisor process as part of a supervision tree. For example, the function ensures that the supervisor is linked to the calling process (its supervisor).</source>
          <target state="translated">作为监督树的一部分,创建一个监督者进程。例如,该函数确保监督者与调用进程(其监督者)相联系。</target>
        </trans-unit>
        <trans-unit id="c8bbaea3ff9e8edc0c0466b2b7fd84a74a12321f" translate="yes" xml:space="preserve">
          <source>Creates a symbolic link &lt;code&gt;New&lt;/code&gt; to the file or directory &lt;code&gt;Existing&lt;/code&gt; on platforms supporting symbolic links (most Unix systems and Windows, beginning with Vista). &lt;code&gt;Existing&lt;/code&gt; does not need to exist. Returns &lt;code&gt;ok&lt;/code&gt; if the link is successfully created, otherwise &lt;code&gt;{error, Reason}&lt;/code&gt;. On platforms not supporting symbolic links, &lt;code&gt;{error, enotsup}&lt;/code&gt; is returned.</source>
          <target state="translated">创建文件或目录的 &lt;code&gt;New&lt;/code&gt; 符号链接在支持符号链接的平台上 &lt;code&gt;Existing&lt;/code&gt; （大多数Unix系统和Windows，从Vista开始）。 &lt;code&gt;Existing&lt;/code&gt; 不需要存在。如果成功创建了链接，则返回 &lt;code&gt;ok&lt;/code&gt; ，否则返回 &lt;code&gt;{error, Reason}&lt;/code&gt; 。在不支持符号链接的平台上 &lt;code&gt;{error, enotsup}&lt;/code&gt; 将返回{error，enotsup}。</target>
        </trans-unit>
        <trans-unit id="0836b339ca7921d4e52788f773049b5e4a6d650a" translate="yes" xml:space="preserve">
          <source>Creates a symbolic link pointing to &lt;code&gt;Target&lt;/code&gt; with the name &lt;code&gt;Name&lt;/code&gt;.</source>
          <target state="translated">创建一个名称为 &lt;code&gt;Name&lt;/code&gt; 的指向 &lt;code&gt;Target&lt;/code&gt; 的符号链接。</target>
        </trans-unit>
        <trans-unit id="3fc40f9bba218d354eac56479f94caa5904544eb" translate="yes" xml:space="preserve">
          <source>Creates a syntax tree corresponding to an Erlang term. &lt;code&gt;Term&lt;/code&gt; must be a literal term, i.e., one that can be represented as a source code literal. Thus, it may not contain a process identifier, port, reference, binary or function value as a subterm.</source>
          <target state="translated">创建与Erlang术语相对应的语法树。 &lt;code&gt;Term&lt;/code&gt; 必须是文字术语，即可以表示为源代码文字的术语。因此，它可能不包含过程标识符，端口，引用，二进制或函数值作为子项。</target>
        </trans-unit>
        <trans-unit id="eb896b4900e317ace8a010d364131f02017b3144" translate="yes" xml:space="preserve">
          <source>Creates a syntax tree with the given annotations, type and subtrees. See &lt;code&gt;make_tree/2&lt;/code&gt; for details.</source>
          <target state="translated">创建具有给定注释，类型和子树的语法树。有关详细信息，请参见 &lt;code&gt;make_tree/2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ebe77a6907349c876e761fc8d819b0edd3180411" translate="yes" xml:space="preserve">
          <source>Creates a syntax tree with the given subtrees, and the same type and annotations as the &lt;code&gt;Old&lt;/code&gt; node. This is equivalent to &lt;code&gt;ann_make_tree(get_ann(Node), type(Node), Groups)&lt;/code&gt;, but potentially more efficient.</source>
          <target state="translated">使用给定的子树以及与 &lt;code&gt;Old&lt;/code&gt; 节点相同的类型和注释创建语法树。这等效于 &lt;code&gt;ann_make_tree(get_ann(Node), type(Node), Groups)&lt;/code&gt; ，但可能会更有效。</target>
        </trans-unit>
        <trans-unit id="10ac1d68623c6bff8dcc74c234a0bb3a8d8b9df0" translate="yes" xml:space="preserve">
          <source>Creates a syntax tree with the given type and subtrees, and the same annotations as the &lt;code&gt;Old&lt;/code&gt; node. This is equivalent to &lt;code&gt;ann_make_tree(get_ann(Node), Type, Groups)&lt;/code&gt;, but potentially more efficient.</source>
          <target state="translated">创建具有给定类型和子树以及与 &lt;code&gt;Old&lt;/code&gt; 节点相同的注释的语法树。这等效于 &lt;code&gt;ann_make_tree(get_ann(Node), Type, Groups)&lt;/code&gt; ，但可能更有效。</target>
        </trans-unit>
        <trans-unit id="689494f6a28f963f4e70af912bc0659fd87e9500" translate="yes" xml:space="preserve">
          <source>Creates a syntax tree with the given type and subtrees. &lt;code&gt;Type&lt;/code&gt; must be a node type name (cf. &lt;code&gt;type/1&lt;/code&gt;) that does not denote a leaf node type (cf. &lt;code&gt;is_leaf/1&lt;/code&gt;). &lt;code&gt;Groups&lt;/code&gt; must be a &lt;strong&gt;nonempty&lt;/strong&gt; list of groups of syntax trees, representing the subtrees of a node of the given type, in left-to-right order as they would occur in the printed program text, grouped by category as done by &lt;code&gt;subtrees/1&lt;/code&gt;.</source>
          <target state="translated">创建具有给定类型和子树的语法树。 &lt;code&gt;Type&lt;/code&gt; 必须是不表示叶节点类型（参见 &lt;code&gt;is_leaf/1&lt;/code&gt; ）的节点类型名称（参见 &lt;code&gt;type/1&lt;/code&gt; / 1）。 &lt;code&gt;Groups&lt;/code&gt; 必须是语法树组的&lt;strong&gt;非空&lt;/strong&gt;列表，以从左到右的顺序代表给定类型的节点的子树，就像它们在打印的程序文本中出现的那样，按类别分组，如 &lt;code&gt;subtrees/1&lt;/code&gt; 一样。</target>
        </trans-unit>
        <trans-unit id="3e07908b54f7fe73a277ef1e2a6412c62aa1cd6c" translate="yes" xml:space="preserve">
          <source>Creates a syntax tree with the given type and subtrees. &lt;code&gt;Type&lt;/code&gt; must be a node type name (see &lt;code&gt;&lt;a href=&quot;#type-1&quot;&gt;type/1&lt;/a&gt;&lt;/code&gt;) that does not denote a leaf node type (see &lt;code&gt;&lt;a href=&quot;#is_leaf-1&quot;&gt;is_leaf/1&lt;/a&gt;&lt;/code&gt;). &lt;code&gt;Groups&lt;/code&gt; must be a &lt;strong&gt;nonempty&lt;/strong&gt; list of groups of syntax trees, representing the subtrees of a node of the given type, in left-to-right order as they would occur in the printed program text, grouped by category as done by &lt;code&gt;&lt;a href=&quot;#subtrees-1&quot;&gt;subtrees/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">创建具有给定类型和子树的语法树。 &lt;code&gt;Type&lt;/code&gt; 必须是不表示叶节点类型（请参见 &lt;code&gt;&lt;a href=&quot;#is_leaf-1&quot;&gt;is_leaf/1&lt;/a&gt;&lt;/code&gt; ）的节点类型名称（请参见 &lt;code&gt;&lt;a href=&quot;#type-1&quot;&gt;type/1&lt;/a&gt;&lt;/code&gt; / 1）。 &lt;code&gt;Groups&lt;/code&gt; 必须是语法树组的&lt;strong&gt;非空&lt;/strong&gt;列表，以给定类型的节点的子树从左到右的顺序表示给定类型的节点的子树，就像它们出现在打印程序文本中一样，按类别分组，如 &lt;code&gt;&lt;a href=&quot;#subtrees-1&quot;&gt;subtrees/1&lt;/a&gt;&lt;/code&gt; 一样。</target>
        </trans-unit>
        <trans-unit id="07e0659b98aa3b0aa10cd14e752014ee10bdc65b" translate="yes" xml:space="preserve">
          <source>Creates a syntax tree with the same type and attributes as the given tree. This is equivalent to &lt;code&gt;copy_attrs(Node, make_tree(type(Node), Groups))&lt;/code&gt;.</source>
          <target state="translated">创建与给定树具有相同类型和属性的语法树。这等效于 &lt;code&gt;copy_attrs(Node, make_tree(type(Node), Groups))&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7195dd92664f36741bfa7be572d1cc2463e69293" translate="yes" xml:space="preserve">
          <source>Creates a table. If the table already exist, the old copy is destroyed.</source>
          <target state="translated">创建一个表。如果该表已经存在,则销毁旧的副本。</target>
        </trans-unit>
        <trans-unit id="9bf20ede78e7852e571d76efe17e542fb83c6c6a" translate="yes" xml:space="preserve">
          <source>Creates a tar file and archives the files whose names are specified in &lt;code&gt;FileList&lt;/code&gt; into it. The files can either be read from disk or be specified as binaries.</source>
          <target state="translated">创建一个tar文件，并将其名称在 &lt;code&gt;FileList&lt;/code&gt; 中指定的文件存档。可以从磁盘读取文件，也可以将其指定为二进制文件。</target>
        </trans-unit>
        <trans-unit id="579a6ea59d9b071fec8a873736fe9ef4041b22e5" translate="yes" xml:space="preserve">
          <source>Creates a tar file for writing (any existing file with the same name is truncated).</source>
          <target state="translated">创建一个用于写入的 tar 文件(任何同名的现有文件都会被截断)。</target>
        </trans-unit>
        <trans-unit id="f0f0cfeaa53efda6c741bd1f1a69f63974ec131d" translate="yes" xml:space="preserve">
          <source>Creates a term identifying the given monitor received from &lt;code&gt;&lt;a href=&quot;#enif_monitor_process&quot;&gt;enif_monitor_process &lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">创建一个术语，以标识从 &lt;code&gt;&lt;a href=&quot;#enif_monitor_process&quot;&gt;enif_monitor_process &lt;/a&gt;&lt;/code&gt; 接收的给定监视器。</target>
        </trans-unit>
        <trans-unit id="5635e00e7f72e993e0cad1b9222de14aee0dbc71" translate="yes" xml:space="preserve">
          <source>Creates a term that is the result of decoding the binary data at &lt;code&gt;data&lt;/code&gt;, which must be encoded according to the Erlang external term format. No more than &lt;code&gt;size&lt;/code&gt; bytes are read from &lt;code&gt;data&lt;/code&gt;. Argument &lt;code&gt;opts&lt;/code&gt; corresponds to the second argument to &lt;code&gt;&lt;a href=&quot;erlang#binary_to_term-2&quot;&gt; erlang:binary_to_term/2&lt;/a&gt;&lt;/code&gt; and must be either &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;ERL_NIF_BIN2TERM_SAFE&lt;/code&gt;.</source>
          <target state="translated">创建一个术语，其在二进制数据的解码结果 &lt;code&gt;data&lt;/code&gt; ，其必须根据二郎外部术语格式进行编码。从 &lt;code&gt;data&lt;/code&gt; 读取的字节数不超过 &lt;code&gt;size&lt;/code&gt; 。参数 &lt;code&gt;opts&lt;/code&gt; 对应于第二参数 &lt;code&gt;&lt;a href=&quot;erlang#binary_to_term-2&quot;&gt; erlang:binary_to_term/2&lt;/a&gt;&lt;/code&gt; ，而且必须是 &lt;code&gt;0&lt;/code&gt; 或 &lt;code&gt;ERL_NIF_BIN2TERM_SAFE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7d434dbfde7e4d2e8d62d4dd945feed28f504839" translate="yes" xml:space="preserve">
          <source>Creates a term that is the result of decoding the binary data at &lt;code&gt;data&lt;/code&gt;, which must be encoded according to the Erlang external term format. No more than &lt;code&gt;size&lt;/code&gt; bytes are read from &lt;code&gt;data&lt;/code&gt;. Argument &lt;code&gt;opts&lt;/code&gt; corresponds to the second argument to &lt;code&gt;&lt;a href=&quot;erlang#binary_to_term-2&quot;&gt;erlang:binary_to_term/2&lt;/a&gt;&lt;/code&gt; and must be either &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;ERL_NIF_BIN2TERM_SAFE&lt;/code&gt;.</source>
          <target state="translated">创建一个术语，其在二进制数据的解码结果 &lt;code&gt;data&lt;/code&gt; ，其必须根据二郎外部术语格式进行编码。从 &lt;code&gt;data&lt;/code&gt; 中读取的字节数不超过 &lt;code&gt;size&lt;/code&gt; 。参数 &lt;code&gt;opts&lt;/code&gt; 对应于第二参数 &lt;code&gt;&lt;a href=&quot;erlang#binary_to_term-2&quot;&gt;erlang:binary_to_term/2&lt;/a&gt;&lt;/code&gt; ，而且必须是 &lt;code&gt;0&lt;/code&gt; 或 &lt;code&gt;ERL_NIF_BIN2TERM_SAFE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8e00dc22c6777e1bb38d18ce1a12473a3573c031" translate="yes" xml:space="preserve">
          <source>Creates a thread-specific data key.</source>
          <target state="translated">创建一个线程特定的数据键。</target>
        </trans-unit>
        <trans-unit id="f15a7ddbbda2089c68ae4ec3b71c3141567010b8" translate="yes" xml:space="preserve">
          <source>Creates a tuple containing the elements of array &lt;code&gt;arr&lt;/code&gt; of length &lt;code&gt;cnt&lt;/code&gt;.</source>
          <target state="translated">创建一个元组，其中包含长度为 &lt;code&gt;cnt&lt;/code&gt; 的数组 &lt;code&gt;arr&lt;/code&gt; 的元素。</target>
        </trans-unit>
        <trans-unit id="3e5410565ec30b2edfa2affc70222b904afaa490" translate="yes" xml:space="preserve">
          <source>Creates a tuple of size &lt;code&gt;Arity&lt;/code&gt;, where each element has value &lt;code&gt;DefaultValue&lt;/code&gt;, and then fills in values from &lt;code&gt;InitList&lt;/code&gt;. Each list element in &lt;code&gt;InitList&lt;/code&gt; must be a two-tuple, where the first element is a position in the newly created tuple and the second element is any term. If a position occurs more than once in the list, the term corresponding to the last occurrence is used. Example:</source>
          <target state="translated">创建一个 &lt;code&gt;Arity&lt;/code&gt; 大小的元组，其中每个元素都具有值 &lt;code&gt;DefaultValue&lt;/code&gt; ，然后从 &lt;code&gt;InitList&lt;/code&gt; 中填充值。 &lt;code&gt;InitList&lt;/code&gt; 中的每个列表元素必须是一个二元组，其中第一个元素是新创建的元组中的位置，第二个元素是任何一项。如果一个位置在列表中出现多次，则使用与最后一次出现相对应的术语。例：</target>
        </trans-unit>
        <trans-unit id="e50392cd62d058868f4cdefae43496785814cb07" translate="yes" xml:space="preserve">
          <source>Creates a tuple term of arity &lt;code&gt;cnt&lt;/code&gt;. Expects &lt;code&gt;cnt&lt;/code&gt; number of arguments (after &lt;code&gt;cnt&lt;/code&gt;) of type &lt;code&gt;ERL_NIF_TERM&lt;/code&gt; as the elements of the tuple.</source>
          <target state="translated">创建Arnt &lt;code&gt;cnt&lt;/code&gt; 元组项。预计 &lt;code&gt;cnt&lt;/code&gt; 数量的参数（后 &lt;code&gt;cnt&lt;/code&gt; 类型） &lt;code&gt;ERL_NIF_TERM&lt;/code&gt; 作为元组的元素。</target>
        </trans-unit>
        <trans-unit id="f2b2ddd6342ac2699535f633b0efbdd8e35fd3b5" translate="yes" xml:space="preserve">
          <source>Creates a tuple term with length indicated by the function name. Prefer these functions (macros) over the variadic &lt;code&gt;enif_make_tuple&lt;/code&gt; to get a compile-time error if the number of arguments does not match.</source>
          <target state="translated">创建一个元组项，其长度由函数名指示。如果参数数量不匹配，则首选这些函数（宏）而不是可变的 &lt;code&gt;enif_make_tuple&lt;/code&gt; 以获得编译时错误。</target>
        </trans-unit>
        <trans-unit id="e3f1da2cdf6f6cef3399dce63667d84270e36980" translate="yes" xml:space="preserve">
          <source>Creates a zip archive containing the files specified in &lt;code&gt;FileList&lt;/code&gt;.</source>
          <target state="translated">创建一个zip存档，其中包含 &lt;code&gt;FileList&lt;/code&gt; 中指定的文件。</target>
        </trans-unit>
        <trans-unit id="a8f74f70e344babf0c4d619e89e05255ddfecd89" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;&lt;a href=&quot;#sets_definition&quot;&gt;unordered set&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;set(L,&amp;nbsp;T)&lt;/code&gt; is equivalent to &lt;code&gt;from_term(L,&amp;nbsp;T)&lt;/code&gt;, if the result is an unordered set. If no &lt;code&gt;&lt;a href=&quot;#type&quot;&gt;type&lt;/a&gt;&lt;/code&gt; is explicitly specified, &lt;code&gt;[atom]&lt;/code&gt; is used as the set type.</source>
          <target state="translated">创建一个 &lt;code&gt;&lt;a href=&quot;#sets_definition&quot;&gt;unordered set&lt;/a&gt;&lt;/code&gt; 。如果结果是无序集合，则 &lt;code&gt;set(L,&amp;nbsp;T)&lt;/code&gt; 等效于 &lt;code&gt;from_term(L,&amp;nbsp;T)&lt;/code&gt; 。如果未明确指定 &lt;code&gt;&lt;a href=&quot;#type&quot;&gt;type&lt;/a&gt;&lt;/code&gt; ，则将 &lt;code&gt;[atom]&lt;/code&gt; 用作设置类型。</target>
        </trans-unit>
        <trans-unit id="fcb7599f16aa40dddb835fd23c40042a3b270afa" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;&lt;a href=&quot;#xref_server&quot;&gt;Xref server&lt;/a&gt;&lt;/code&gt; with a given name. The default &lt;code&gt;&lt;a href=&quot;#mode&quot;&gt;mode&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;functions&lt;/code&gt;. Options that are not recognized by Xref are passed on to &lt;code&gt;gen_server:start/4&lt;/code&gt;.</source>
          <target state="translated">创建具有给定名称的外部 &lt;code&gt;&lt;a href=&quot;#xref_server&quot;&gt;Xref server&lt;/a&gt;&lt;/code&gt; 。默认 &lt;code&gt;&lt;a href=&quot;#mode&quot;&gt;mode&lt;/a&gt;&lt;/code&gt; 是 &lt;code&gt;functions&lt;/code&gt; 。Xref无法识别的选项将传递给 &lt;code&gt;gen_server:start/4&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d47f820e9d90fb5c7944ddecf5e94c713525d84e" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;&lt;a href=&quot;#xref_server&quot;&gt;Xref server&lt;/a&gt;&lt;/code&gt;. The process may optionally be given a name. The default &lt;code&gt;&lt;a href=&quot;#mode&quot;&gt;mode&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;functions&lt;/code&gt;. Options that are not recognized by Xref are passed on to &lt;code&gt;gen_server:start/4&lt;/code&gt;.</source>
          <target state="translated">创建一个外部 &lt;code&gt;&lt;a href=&quot;#xref_server&quot;&gt;Xref server&lt;/a&gt;&lt;/code&gt; 。可以选择为过程指定名称。默认 &lt;code&gt;&lt;a href=&quot;#mode&quot;&gt;mode&lt;/a&gt;&lt;/code&gt; 是 &lt;code&gt;functions&lt;/code&gt; 。Xref无法识别的选项将传递给 &lt;code&gt;gen_server:start/4&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="583b48168151c4ec4de9502e657094cb5cab09e5" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;&lt;a href=&quot;https://www.ietf.org/rfc/rfc3986.txt&quot;&gt;RFC 3986&lt;/a&gt;&lt;/code&gt; compliant &lt;code&gt;URIString&lt;/code&gt; (percent-encoded), based on the components of &lt;code&gt;URIMap&lt;/code&gt;. If the &lt;code&gt;URIMap&lt;/code&gt; is invalid, an error tuple is returned.</source>
          <target state="translated">基于 &lt;code&gt;URIMap&lt;/code&gt; 的组件，创建与 &lt;code&gt;&lt;a href=&quot;https://www.ietf.org/rfc/rfc3986.txt&quot;&gt;RFC 3986&lt;/a&gt;&lt;/code&gt; 兼容的 &lt;code&gt;URIString&lt;/code&gt; （百分比编码）。如果 &lt;code&gt;URIMap&lt;/code&gt; 无效，则返回错误元组。</target>
        </trans-unit>
        <trans-unit id="63153686d4bc0db7f060834fd1f87c6115bc7792" translate="yes" xml:space="preserve">
          <source>Creates an Erlang float.</source>
          <target state="translated">创建一个Erlang float。</target>
        </trans-unit>
        <trans-unit id="4f978ee5509e98cf55c3115895bd200b1566d0fc" translate="yes" xml:space="preserve">
          <source>Creates an Erlang integer.</source>
          <target state="translated">创建一个Erlang整数。</target>
        </trans-unit>
        <trans-unit id="191483ffcc7600c4fcae1ed92d90d497767e75d2" translate="yes" xml:space="preserve">
          <source>Creates an Erlang list from an array of Erlang terms, such that each element in the list corresponds to one element in the array.</source>
          <target state="translated">从一个Erlang术语数组中创建一个Erlang列表,使列表中的每个元素对应于数组中的一个元素。</target>
        </trans-unit>
        <trans-unit id="4b2299f3fba082d9169f6ba903a5806fa73f9eb7" translate="yes" xml:space="preserve">
          <source>Creates an Erlang port identifier.</source>
          <target state="translated">创建一个 Erlang 端口标识符。</target>
        </trans-unit>
        <trans-unit id="3c0ba93c1bd133e21c268a5b5839539dacaf6636" translate="yes" xml:space="preserve">
          <source>Creates an Erlang process identifier (pid). The resulting pid can be used by Erlang processes wishing to communicate with the C-node.</source>
          <target state="translated">创建一个Erlang进程标识符(pid)。产生的pid可以被希望与C节点通信的Erlang进程使用。</target>
        </trans-unit>
        <trans-unit id="2776c21bd7ba9cb8b5e4e8cb0876d08a4b49aaa1" translate="yes" xml:space="preserve">
          <source>Creates an Erlang reference, with 82 bits.</source>
          <target state="translated">创建一个82位的Erlang引用。</target>
        </trans-unit>
        <trans-unit id="df7d735bf27fec1303042780f07aef91cbdd7ddc" translate="yes" xml:space="preserve">
          <source>Creates an Erlang tuple from an array of Erlang terms.</source>
          <target state="translated">从一个Erlang术语数组中创建一个Erlang元组。</target>
        </trans-unit>
        <trans-unit id="efed25071848e0d88e4c3fbd67b9e2cffce5206e" translate="yes" xml:space="preserve">
          <source>Creates an Erlang unsigned integer.</source>
          <target state="translated">创建一个Erlang无符号整数。</target>
        </trans-unit>
        <trans-unit id="473f1063dff110a5559d8049419ebc8b2cb96bef" translate="yes" xml:space="preserve">
          <source>Creates an MD5 context, to be used in the following calls to &lt;code&gt;md5_update/2&lt;/code&gt;.</source>
          <target state="translated">创建一个MD5上下文，将在以下对 &lt;code&gt;md5_update/2&lt;/code&gt; 的调用中使用。</target>
        </trans-unit>
        <trans-unit id="d8eb2a44f5539cd2ca41d1f973d2f0864f1fff06" translate="yes" xml:space="preserve">
          <source>Creates an SCTP socket and binds it to the local addresses specified by all &lt;code&gt;{ip,IP}&lt;/code&gt; (or synonymously &lt;code&gt;{ifaddr,IP}&lt;/code&gt;) options (this feature is called SCTP multi-homing). The default &lt;code&gt;IP&lt;/code&gt; and &lt;code&gt;Port&lt;/code&gt; are &lt;code&gt;any&lt;/code&gt; and &lt;code&gt;0&lt;/code&gt;, meaning bind to all local addresses on any free port.</source>
          <target state="translated">创建一个SCTP套接字，并将其绑定到所有 &lt;code&gt;{ip,IP}&lt;/code&gt; （或同义 &lt;code&gt;{ifaddr,IP}&lt;/code&gt; ）选项指定的本地地址（此功能称为SCTP多宿主）。默认的 &lt;code&gt;IP&lt;/code&gt; 和 &lt;code&gt;Port&lt;/code&gt; 为 &lt;code&gt;any&lt;/code&gt; 和 &lt;code&gt;0&lt;/code&gt; ，表示绑定到任何空闲端口上的所有本地地址。</target>
        </trans-unit>
        <trans-unit id="da7b5a33db5696669dd9b21257123de8073c2a38" translate="yes" xml:space="preserve">
          <source>Creates an SSL listen socket.</source>
          <target state="translated">创建一个SSL监听套接字。</target>
        </trans-unit>
        <trans-unit id="084420eef5bf85128d4ce8ba812eb269a1127451" translate="yes" xml:space="preserve">
          <source>Creates an abstract &quot;implicit fun&quot; expression. If &lt;code&gt;Arity&lt;/code&gt; is &lt;code&gt;none&lt;/code&gt;, this is equivalent to &lt;code&gt;implicit_fun(Name)&lt;/code&gt;, otherwise it is equivalent to &lt;code&gt;implicit_fun(arity_qualifier(Name, Arity))&lt;/code&gt;.</source>
          <target state="translated">创建一个抽象的&amp;ldquo;隐式乐趣&amp;rdquo;表达式。如果 &lt;code&gt;Arity&lt;/code&gt; 为 &lt;code&gt;none&lt;/code&gt; ，则等效于hidden_​​fun &lt;code&gt;implicit_fun(Name)&lt;/code&gt; ，否则等效于 &lt;code&gt;implicit_fun(arity_qualifier(Name, Arity))&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f7c1e44e24ff54f7bb9db92ed78b13712f1437d1" translate="yes" xml:space="preserve">
          <source>Creates an abstract &quot;implicit fun&quot; expression. The result represents &quot;&lt;code&gt;fun Name&lt;/code&gt;&quot;. &lt;code&gt;Name&lt;/code&gt; should represent either &lt;code&gt;F/A&lt;/code&gt; or &lt;code&gt;M:F/A&lt;/code&gt;</source>
          <target state="translated">创建一个抽象的&amp;ldquo;隐式乐趣&amp;rdquo;表达式。结果表示&amp;ldquo; &lt;code&gt;fun Name&lt;/code&gt; &amp;rdquo;。 &lt;code&gt;Name&lt;/code&gt; 应代表 &lt;code&gt;F/A&lt;/code&gt; 或 &lt;code&gt;M:F/A&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="835626171d6cd772dd4d48436c4f222f610d7e5c" translate="yes" xml:space="preserve">
          <source>Creates an abstract (subtype) constraint. The result represents &quot;&lt;code&gt;Name :: Type&lt;/code&gt;&quot;.</source>
          <target state="translated">创建一个抽象（子类型）约束。结果表示&amp;ldquo; &lt;code&gt;Name :: Type&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="dafffec769cb5790590e7cb2f6b5bf77de3225a1" translate="yes" xml:space="preserve">
          <source>Creates an abstract annotated type expression. The result represents &quot;&lt;code&gt;Name :: Type&lt;/code&gt;&quot;.</source>
          <target state="translated">创建一个带抽象注释的类型表达式。结果表示&amp;ldquo; &lt;code&gt;Name :: Type&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="12e04945628dedccb1a13a15b05997f7d2f8bbb0" translate="yes" xml:space="preserve">
          <source>Creates an abstract arity qualifier. The result represents &quot;&lt;code&gt;Body/Arity&lt;/code&gt;&quot;.</source>
          <target state="translated">创建一个抽象arity限定符。结果表示&amp;ldquo; &lt;code&gt;Body/Arity&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="6c8fba064ff6303bfe2e9aad18f9badac729e788" translate="yes" xml:space="preserve">
          <source>Creates an abstract atom literal. The print name of the atom is the character sequence represented by &lt;code&gt;Name&lt;/code&gt;.</source>
          <target state="translated">创建一个抽象原子文字。原子的打印名称是 &lt;code&gt;Name&lt;/code&gt; 表示的字符序列。</target>
        </trans-unit>
        <trans-unit id="ea457b10e6abbbc6a4a432001072f5e41532d315" translate="yes" xml:space="preserve">
          <source>Creates an abstract binary comprehension. If &lt;code&gt;Body&lt;/code&gt; is &lt;code&gt;[E1, ..., En]&lt;/code&gt;, the result represents &quot;&lt;code&gt;&amp;lt;&amp;lt;Template || E1, ..., En&amp;gt;&amp;gt;&lt;/code&gt;&quot;.</source>
          <target state="translated">创建抽象的二进制理解。如果 &lt;code&gt;Body&lt;/code&gt; 为 &lt;code&gt;[E1, ..., En]&lt;/code&gt; ，则结果表示&amp;ldquo; &lt;code&gt;&amp;lt;&amp;lt;Template || E1, ..., En&amp;gt;&amp;gt;&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="0569b531dfcd6e93b5cb428a974558352428e1e9" translate="yes" xml:space="preserve">
          <source>Creates an abstract binary template field. If &lt;code&gt;Size&lt;/code&gt; is &lt;code&gt;none&lt;/code&gt;, this is equivalent to &quot;&lt;code&gt;binary_field(Body, Types)&lt;/code&gt;&quot;, otherwise it is equivalent to &quot;&lt;code&gt;binary_field(size_qualifier(Body, Size), Types)&lt;/code&gt;&quot;.</source>
          <target state="translated">创建一个抽象的二进制模板字段。如果 &lt;code&gt;Size&lt;/code&gt; 为 &lt;code&gt;none&lt;/code&gt; ，则等效于&amp;ldquo; &lt;code&gt;binary_field(Body, Types)&lt;/code&gt; &amp;rdquo;，否则等效于&amp;ldquo; &lt;code&gt;binary_field(size_qualifier(Body, Size), Types)&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="babf65b247cc883d815ca63ddcf8ca4c9eef934a" translate="yes" xml:space="preserve">
          <source>Creates an abstract binary template field. If &lt;code&gt;Types&lt;/code&gt; is the empty list, the result simply represents &quot;&lt;code&gt;Body&lt;/code&gt;&quot;, otherwise, if &lt;code&gt;Types&lt;/code&gt; is &lt;code&gt;[T1, ..., Tn]&lt;/code&gt;, the result represents &quot;&lt;code&gt;Body/T1-...-Tn&lt;/code&gt;&quot;.</source>
          <target state="translated">创建一个抽象的二进制模板字段。如果 &lt;code&gt;Types&lt;/code&gt; 为空列表，则结果仅表示&amp;ldquo; &lt;code&gt;Body&lt;/code&gt; &amp;rdquo;，否则，如果 &lt;code&gt;Types&lt;/code&gt; 为 &lt;code&gt;[T1, ..., Tn]&lt;/code&gt; ，则结果表示&amp;ldquo; &lt;code&gt;Body/T1-...-Tn&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="17b4f371f7a9d93e40933428d9d92d0e88afc990" translate="yes" xml:space="preserve">
          <source>Creates an abstract binary-object template. If &lt;code&gt;Fields&lt;/code&gt; is &lt;code&gt;[F1, ..., Fn]&lt;/code&gt;, the result represents &quot;&lt;code&gt;&amp;lt;&amp;lt;F1, ..., Fn&amp;gt;&amp;gt;&lt;/code&gt;&quot;.</source>
          <target state="translated">创建一个抽象的二进制对象模板。如果 &lt;code&gt;Fields&lt;/code&gt; 为 &lt;code&gt;[F1, ..., Fn]&lt;/code&gt; ，则结果表示为&amp;ldquo; &lt;code&gt;&amp;lt;&amp;lt;F1, ..., Fn&amp;gt;&amp;gt;&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="f521788daee45400ab2ec6983542d99a8ad23656" translate="yes" xml:space="preserve">
          <source>Creates an abstract binary-template. A binary object is in this context a sequence of an arbitrary number of bits. (The number of bits used to be evenly divisible by 8, but after the introduction of bit strings in the Erlang language, the choice was made to use the binary template for all bit strings.) It is specified by zero or more bit-string template &lt;strong&gt;segments&lt;/strong&gt; of arbitrary lengths (in number of bits). If &lt;code&gt;Segments&lt;/code&gt; is &lt;code&gt;[S1, ..., Sn]&lt;/code&gt;, the result represents &quot;&lt;code&gt;#{S1, ..., Sn}#&lt;/code&gt;&quot;. All the &lt;code&gt;Si&lt;/code&gt; must have type &lt;code&gt;bitstr&lt;/code&gt;.</source>
          <target state="translated">创建一个抽象的二进制模板。在这种情况下，二进制对象是任意数量的位的序列。 （以前的位数可以被8整除，但是在用Erlang语言引入位串之后，选择对所有位串使用二进制模板。）由零个或多个位串指定任意长度（以位数为单位）的模板&lt;strong&gt;段&lt;/strong&gt;。如果 &lt;code&gt;Segments&lt;/code&gt; 为 &lt;code&gt;[S1, ..., Sn]&lt;/code&gt; ，则结果表示为&amp;ldquo; &lt;code&gt;#{S1, ..., Sn}#&lt;/code&gt; &amp;rdquo;。所有 &lt;code&gt;Si&lt;/code&gt; 必须具有 &lt;code&gt;bitstr&lt;/code&gt; 类型。</target>
        </trans-unit>
        <trans-unit id="2b07cc9ca8ad0b6e88f6616ceef053c6d205f0bf" translate="yes" xml:space="preserve">
          <source>Creates an abstract binary_generator. The result represents &quot;&lt;code&gt;Pattern &amp;lt;- Body&lt;/code&gt;&quot;.</source>
          <target state="translated">创建一个抽象binary_generator。结果表示&amp;ldquo; &lt;code&gt;Pattern &amp;lt;- Body&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="42124f2d5db288ba0b5a345ef938641a63e59915" translate="yes" xml:space="preserve">
          <source>Creates an abstract bit-string template. These can only occur as components of an abstract binary-template (see &lt;code&gt;&lt;a href=&quot;#c_binary-1&quot;&gt;c_binary/1&lt;/a&gt;&lt;/code&gt;). The result represents &quot;&lt;code&gt;#&amp;lt;Value&amp;gt;(Size, Unit, Type, Flags)&lt;/code&gt;&quot;, where &lt;code&gt;Unit&lt;/code&gt; must represent a positive integer constant, &lt;code&gt;Type&lt;/code&gt; must represent a constant atom (one of &lt;code&gt;'integer'&lt;/code&gt;, &lt;code&gt;'float'&lt;/code&gt;, or &lt;code&gt;'binary'&lt;/code&gt;), and &lt;code&gt;Flags&lt;/code&gt; must represent a constant list &lt;code&gt;&quot;[F1, ..., Fn]&quot;&lt;/code&gt; where all the &lt;code&gt;Fi&lt;/code&gt; are atoms.</source>
          <target state="translated">创建一个抽象的位字符串模板。这些只能作为抽象二进制模板的组件出现（请参阅 &lt;code&gt;&lt;a href=&quot;#c_binary-1&quot;&gt;c_binary/1&lt;/a&gt;&lt;/code&gt; ）。结果表示&amp;ldquo; &lt;code&gt;#&amp;lt;Value&amp;gt;(Size, Unit, Type, Flags)&lt;/code&gt; &amp;rdquo;，其中 &lt;code&gt;Unit&lt;/code&gt; 必须表示一个正整数常量， &lt;code&gt;Type&lt;/code&gt; 必须表示一个常量原子（ &lt;code&gt;'integer'&lt;/code&gt; ， &lt;code&gt;'float'&lt;/code&gt; 或 &lt;code&gt;'binary'&lt;/code&gt; ） ，并且 &lt;code&gt;Flags&lt;/code&gt; 必须代表一个常数列表 &lt;code&gt;&quot;[F1, ..., Fn]&quot;&lt;/code&gt; ，其中所有 &lt;code&gt;Fi&lt;/code&gt; 都是原子。</target>
        </trans-unit>
        <trans-unit id="7e53f415c83f50d9fe8c723dcec74e52f5dfab96" translate="yes" xml:space="preserve">
          <source>Creates an abstract bitstring type. The result represents &quot;&lt;code&gt;&amp;lt;&amp;lt;_:M, _:_*N&amp;gt;&amp;gt;&lt;/code&gt;&quot;.</source>
          <target state="translated">创建一个抽象的位串类型。结果表示&amp;ldquo; &lt;code&gt;&amp;lt;&amp;lt;_:M, _:_*N&amp;gt;&amp;gt;&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="c50511f1e02a5e24191b00c95aa6bc7f755fa017" translate="yes" xml:space="preserve">
          <source>Creates an abstract block expression. If &lt;code&gt;Body&lt;/code&gt; is &lt;code&gt;[B1, ..., Bn]&lt;/code&gt;, the result represents &quot;&lt;code&gt;begin B1, ..., Bn end&lt;/code&gt;&quot;.</source>
          <target state="translated">创建一个抽象块表达式。如果 &lt;code&gt;Body&lt;/code&gt; 为 &lt;code&gt;[B1, ..., Bn]&lt;/code&gt; ，则结果表示&amp;ldquo; &lt;code&gt;begin B1, ..., Bn end&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="6aabfcec58137ab5938034a41442e825f1f1cbff" translate="yes" xml:space="preserve">
          <source>Creates an abstract case-expression. If &lt;code&gt;Clauses&lt;/code&gt; is &lt;code&gt;[C1, ..., Cn]&lt;/code&gt;, the result represents &quot;&lt;code&gt;case Argument of C1 ... Cn end&lt;/code&gt;&quot;. &lt;code&gt;Clauses&lt;/code&gt; must not be empty.</source>
          <target state="translated">创建一个抽象的case-expression。如果 &lt;code&gt;Clauses&lt;/code&gt; 为 &lt;code&gt;[C1, ..., Cn]&lt;/code&gt; ，则结果表示&amp;ldquo; &lt;code&gt;case Argument of C1 ... Cn end&lt;/code&gt; &amp;rdquo;。 &lt;code&gt;Clauses&lt;/code&gt; 不能为空。</target>
        </trans-unit>
        <trans-unit id="9aad8d999a0ec5a66d3d5fb014e08bd4f893bd46" translate="yes" xml:space="preserve">
          <source>Creates an abstract case-expression. If &lt;code&gt;Clauses&lt;/code&gt; is &lt;code&gt;[C1, ..., Cn]&lt;/code&gt;, the result represents &quot;&lt;code&gt;case Argument of C1; ...; Cn end&lt;/code&gt;&quot;. More exactly, if each &lt;code&gt;Ci&lt;/code&gt; represents &quot;&lt;code&gt;(Pi) Gi -&amp;gt; Bi&lt;/code&gt;&quot;, then the result represents &quot;&lt;code&gt;case Argument of P1 G1 -&amp;gt; B1; ...; Pn Gn -&amp;gt; Bn end&lt;/code&gt;&quot;.</source>
          <target state="translated">创建一个抽象的case-expression。如果 &lt;code&gt;Clauses&lt;/code&gt; 为 &lt;code&gt;[C1, ..., Cn]&lt;/code&gt; ，则结果表示&amp;ldquo; &lt;code&gt;case Argument of C1; ...; Cn end&lt;/code&gt; &amp;rdquo;。更确切地说，如果每个 &lt;code&gt;Ci&lt;/code&gt; 表示&amp;ldquo; &lt;code&gt;(Pi) Gi -&amp;gt; Bi&lt;/code&gt; &amp;rdquo;，则结果表示&amp;ldquo; &lt;code&gt;case Argument of P1 G1 -&amp;gt; B1; ...; Pn Gn -&amp;gt; Bn end&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="a5eb7728ad56ba1c31c330c0429d95749a10ff7c" translate="yes" xml:space="preserve">
          <source>Creates an abstract catch-expression. The result represents &quot;&lt;code&gt;catch Body&lt;/code&gt;&quot;.</source>
          <target state="translated">创建一个抽象的catch-expression。结果表示&amp;ldquo; &lt;code&gt;catch Body&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="e676e8493acde1b3137b39b086f6394152ca6a6c" translate="yes" xml:space="preserve">
          <source>Creates an abstract catch-expression. The result represents &quot;&lt;code&gt;catch Expr&lt;/code&gt;&quot;.</source>
          <target state="translated">创建一个抽象的catch-expression。结果表示&amp;ldquo; &lt;code&gt;catch Expr&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="c58e3a291028f2d62c60b0107e30c3ccf05b5801" translate="yes" xml:space="preserve">
          <source>Creates an abstract character literal. If the local implementation of Erlang defines &lt;code&gt;char()&lt;/code&gt; as a subset of &lt;code&gt;integer()&lt;/code&gt;, this function is equivalent to &lt;code&gt;c_int/1&lt;/code&gt;. Otherwise, if the given value is an integer, it will be converted to the character with the corresponding code. The lexical representation of a character is &quot;&lt;code&gt;$Char&lt;/code&gt;&quot;, where &lt;code&gt;Char&lt;/code&gt; is a single printing character or an escape sequence.</source>
          <target state="translated">创建一个抽象字符文字。如果Erlang的本地实现将 &lt;code&gt;char()&lt;/code&gt; 定义为 &lt;code&gt;integer()&lt;/code&gt; 的子集，则此函数等效于 &lt;code&gt;c_int/1&lt;/code&gt; 。否则，如果给定值是整数，则将使用相应的代码将其转换为字符。字符的词法表示为&amp;ldquo; &lt;code&gt;$Char&lt;/code&gt; &amp;rdquo;，其中 &lt;code&gt;Char&lt;/code&gt; 是单个打印字符或转义序列。</target>
        </trans-unit>
        <trans-unit id="207f4cfe984139f18e850a4fcaad70a3bcdb8001" translate="yes" xml:space="preserve">
          <source>Creates an abstract character literal. The result represents &quot;&lt;code&gt;$Name&lt;/code&gt;&quot;, where &lt;code&gt;Name&lt;/code&gt; corresponds to &lt;code&gt;Value&lt;/code&gt;.</source>
          <target state="translated">创建一个抽象字符文字。结果表示&amp;ldquo; &lt;code&gt;$Name&lt;/code&gt; &amp;rdquo;，其中 &lt;code&gt;Name&lt;/code&gt; 对应于 &lt;code&gt;Value&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4f833ef022432d8da1fe484b32c93e14857a41e8" translate="yes" xml:space="preserve">
          <source>Creates an abstract class qualifier. The result represents &quot;&lt;code&gt;Class:Body:Stacktrace&lt;/code&gt;&quot;.</source>
          <target state="translated">创建一个抽象类限定符。结果表示&amp;ldquo; &lt;code&gt;Class:Body:Stacktrace&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="84bc02522e752e2d0cef9c061c5916e7db10cde2" translate="yes" xml:space="preserve">
          <source>Creates an abstract class qualifier. The result represents &quot;&lt;code&gt;Class:Body&lt;/code&gt;&quot;.</source>
          <target state="translated">创建一个抽象类限定符。结果表示&amp;ldquo; &lt;code&gt;Class:Body&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="81034555579d8487c9fc20029ffcb0c28cef7c7a" translate="yes" xml:space="preserve">
          <source>Creates an abstract clause. If &lt;code&gt;Patterns&lt;/code&gt; is &lt;code&gt;[P1, ..., Pn]&lt;/code&gt; and &lt;code&gt;Body&lt;/code&gt; is &lt;code&gt;[B1, ..., Bm]&lt;/code&gt;, then if &lt;code&gt;Guard&lt;/code&gt; is &lt;code&gt;none&lt;/code&gt;, the result represents &quot;&lt;code&gt;(P1, ..., Pn) -&amp;gt; B1, ..., Bm&lt;/code&gt;&quot;, otherwise, unless &lt;code&gt;Guard&lt;/code&gt; is a list, the result represents &quot;&lt;code&gt;(P1, ..., Pn) when Guard -&amp;gt; B1, ..., Bm&lt;/code&gt;&quot;.</source>
          <target state="translated">创建一个抽象子句。如果 &lt;code&gt;Patterns&lt;/code&gt; 为 &lt;code&gt;[P1, ..., Pn]&lt;/code&gt; ， &lt;code&gt;Body&lt;/code&gt; 为 &lt;code&gt;[B1, ..., Bm]&lt;/code&gt; ，则如果 &lt;code&gt;Guard&lt;/code&gt; 为 &lt;code&gt;none&lt;/code&gt; ，则结果表示&amp;ldquo; &lt;code&gt;(P1, ..., Pn) -&amp;gt; B1, ..., Bm&lt;/code&gt; &amp;ldquo;，否则，除非 &lt;code&gt;Guard&lt;/code&gt; 是一个列表，否则 &lt;code&gt;(P1, ..., Pn) when Guard -&amp;gt; B1, ..., Bm&lt;/code&gt; &amp;rdquo; 时，结果表示&amp;ldquo; （P1，...，Pn）。</target>
        </trans-unit>
        <trans-unit id="66e368a140c34afb002b5b12cf7b9745c56e5a9c" translate="yes" xml:space="preserve">
          <source>Creates an abstract comment with the given padding and text. If &lt;code&gt;Strings&lt;/code&gt; is a (possibly empty) list &lt;code&gt;[&quot;Txt1&quot;, ..., &quot;TxtN&quot;]&lt;/code&gt;, the result represents the source code text</source>
          <target state="translated">使用给定的填充和文本创建抽象注释。如果 &lt;code&gt;Strings&lt;/code&gt; 是（可能为空）列表 &lt;code&gt;[&quot;Txt1&quot;, ..., &quot;TxtN&quot;]&lt;/code&gt; ，则结果表示源代码文本</target>
        </trans-unit>
        <trans-unit id="e9201601d7bbdc657460d6a69c27b8f10006714e" translate="yes" xml:space="preserve">
          <source>Creates an abstract cond-expression. If &lt;code&gt;Clauses&lt;/code&gt; is &lt;code&gt;[C1, ..., Cn]&lt;/code&gt;, the result represents &quot;&lt;code&gt;cond C1; ...; Cn end&lt;/code&gt;&quot;. More exactly, if each &lt;code&gt;Ci&lt;/code&gt; represents &quot;&lt;code&gt;() Ei -&amp;gt; Bi&lt;/code&gt;&quot;, then the result represents &quot;&lt;code&gt;cond E1 -&amp;gt; B1; ...; En -&amp;gt; Bn end&lt;/code&gt;&quot;.</source>
          <target state="translated">创建一个抽象的cond表达式。如果 &lt;code&gt;Clauses&lt;/code&gt; 为 &lt;code&gt;[C1, ..., Cn]&lt;/code&gt; ，则结果表示&amp;ldquo; &lt;code&gt;cond C1; ...; Cn end&lt;/code&gt; &amp;rdquo;。更确切地说，如果每个 &lt;code&gt;Ci&lt;/code&gt; 表示&amp;ldquo; &lt;code&gt;() Ei -&amp;gt; Bi&lt;/code&gt; &amp;rdquo;，则结果表示&amp;ldquo; &lt;code&gt;cond E1 -&amp;gt; B1; ...; En -&amp;gt; Bn end&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="18be81fbb275c2d2cd3bb6a3d29a5211080105eb" translate="yes" xml:space="preserve">
          <source>Creates an abstract conjunction. If &lt;code&gt;List&lt;/code&gt; is &lt;code&gt;[E1, ..., En]&lt;/code&gt;, the result represents &quot;&lt;code&gt;E1, ..., En&lt;/code&gt;&quot;.</source>
          <target state="translated">创建抽象合取。如果 &lt;code&gt;List&lt;/code&gt; 为 &lt;code&gt;[E1, ..., En]&lt;/code&gt; ，则结果表示&amp;ldquo; &lt;code&gt;E1, ..., En&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="68812f150e4ce4bc8b605bfd733f04f83073fabf" translate="yes" xml:space="preserve">
          <source>Creates an abstract constrained function type. If &lt;code&gt;FunctionConstraint&lt;/code&gt; is &lt;code&gt;[C1, ..., Cn]&lt;/code&gt;, the result represents &quot;&lt;code&gt;FunctionType when C1, ...Cn&lt;/code&gt;&quot;.</source>
          <target state="translated">创建一个抽象约束函数类型。如果 &lt;code&gt;FunctionConstraint&lt;/code&gt; 为 &lt;code&gt;[C1, ..., Cn]&lt;/code&gt; ，则结果表示&amp;ldquo; &lt;code&gt;FunctionType when C1, ...Cn&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="ef7c9dd12ba2a241f4b1592d340c378a367dee37" translate="yes" xml:space="preserve">
          <source>Creates an abstract disjunction. If &lt;code&gt;List&lt;/code&gt; is &lt;code&gt;[E1, ..., En]&lt;/code&gt;, the result represents &quot;&lt;code&gt;E1; ...; En&lt;/code&gt;&quot;.</source>
          <target state="translated">创建抽象析取。如果 &lt;code&gt;List&lt;/code&gt; 为 &lt;code&gt;[E1, ..., En]&lt;/code&gt; ，则结果表示为&amp;ldquo; &lt;code&gt;E1; ...; En&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="891769788cc873e1ee9f54ee8a786d8512fae68c" translate="yes" xml:space="preserve">
          <source>Creates an abstract document layout for a syntax tree. The result represents a set of possible layouts (cf. module &lt;code&gt;prettypr&lt;/code&gt;). For information on the options, see &lt;code&gt;&lt;a href=&quot;#format-2&quot;&gt;format/2&lt;/a&gt;&lt;/code&gt;; note, however, that the &lt;code&gt;paper&lt;/code&gt; and &lt;code&gt;ribbon&lt;/code&gt; options are ignored by this function.</source>
          <target state="translated">为语法树创建抽象文档布局。结果表示一组可能的布局（请参阅模块 &lt;code&gt;prettypr&lt;/code&gt; ）。有关选项的信息，请参见 &lt;code&gt;&lt;a href=&quot;#format-2&quot;&gt;format/2&lt;/a&gt;&lt;/code&gt; ;。但是请注意，此功能将忽略 &lt;code&gt;paper&lt;/code&gt; 和 &lt;code&gt;ribbon&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="49f9d829cba60f3565f71542c299979cdce5e112" translate="yes" xml:space="preserve">
          <source>Creates an abstract empty list. The result represents &quot;&lt;code&gt;[]&lt;/code&gt;&quot;. The empty list is traditionally called &quot;nil&quot;.</source>
          <target state="translated">创建一个抽象的空列表。结果表示&amp;ldquo; &lt;code&gt;[]&lt;/code&gt; &amp;rdquo;。空列表传统上称为&amp;ldquo; nil&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="65f712d88bd6b7406826dcf8cef508883dc77900" translate="yes" xml:space="preserve">
          <source>Creates an abstract end-of-file marker. This represents the end of input when reading a sequence of source code forms. An end-of-file marker is itself regarded as a source code form (namely, the last in any sequence in which it occurs). It has no defined lexical form.</source>
          <target state="translated">创建一个抽象的文件结束标记。当读取源代码形式序列时,它代表输入的结束。文件结束标记本身被视为一个源代码形式(即,在任何出现它的序列中的最后一个)。它没有定义的词法形式。</target>
        </trans-unit>
        <trans-unit id="d4cb88d35368e0ecdf273be2a7fc9db5b385a2f8" translate="yes" xml:space="preserve">
          <source>Creates an abstract error marker. The result represents an occurrence of an error in the source code, with an associated Erlang I/O ErrorInfo structure given by &lt;code&gt;Error&lt;/code&gt; (see module &lt;code&gt;io(3)&lt;/code&gt; for details). Error markers are regarded as source code forms, but have no defined lexical form.</source>
          <target state="translated">创建一个抽象错误标记。结果表示源代码中发生了错误，并带有由 &lt;code&gt;Error&lt;/code&gt; 提供的关联的Erlang I / O ErrorInfo结构 &lt;code&gt;io(3)&lt;/code&gt; 有关详细信息，请参见模块io（3））。错误标记被视为源代码形式，但没有定义的词汇形式。</target>
        </trans-unit>
        <trans-unit id="9c097d2adf5de6db2856bb87f4aa4ddb2bb12ab7" translate="yes" xml:space="preserve">
          <source>Creates an abstract floating-point literal. The lexical representation is the decimal floating-point numeral of &lt;code&gt;Value&lt;/code&gt;.</source>
          <target state="translated">创建一个抽象的浮点文字。词汇表示形式是 &lt;code&gt;Value&lt;/code&gt; 的十进制浮点数。</target>
        </trans-unit>
        <trans-unit id="dffc1ad90d61c9c88a64c7db289aa11beee6ef41" translate="yes" xml:space="preserve">
          <source>Creates an abstract fun of any type. The result represents &quot;&lt;code&gt;fun()&lt;/code&gt;&quot;.</source>
          <target state="translated">创建任何类型的抽象乐趣。结果表示&amp;ldquo; &lt;code&gt;fun()&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="38be302ebc9ac43f32215cfd1f9a277279ec1d7d" translate="yes" xml:space="preserve">
          <source>Creates an abstract fun-expression. If &lt;code&gt;Clauses&lt;/code&gt; is &lt;code&gt;[C1, ..., Cn]&lt;/code&gt;, the result represents &quot;&lt;code&gt;fun C1; ...; Cn end&lt;/code&gt;&quot;. More exactly, if each &lt;code&gt;Ci&lt;/code&gt; represents &quot;&lt;code&gt;(Pi1, ..., Pim) Gi -&amp;gt; Bi&lt;/code&gt;&quot;, then the result represents &quot;&lt;code&gt;fun (P11, ..., P1m) G1 -&amp;gt; B1; ...; (Pn1, ..., Pnm) Gn -&amp;gt; Bn end&lt;/code&gt;&quot;.</source>
          <target state="translated">创建一个抽象的fun-expression。如果 &lt;code&gt;Clauses&lt;/code&gt; 为 &lt;code&gt;[C1, ..., Cn]&lt;/code&gt; ，则结果表示&amp;ldquo; &lt;code&gt;fun C1; ...; Cn end&lt;/code&gt; &amp;rdquo;。更确切地说，如果每个 &lt;code&gt;Ci&lt;/code&gt; 表示&amp;ldquo; &lt;code&gt;(Pi1, ..., Pim) Gi -&amp;gt; Bi&lt;/code&gt; &amp;ldquo;，则结果表示&amp;ldquo; &lt;code&gt;fun (P11, ..., P1m) G1 -&amp;gt; B1; ...; (Pn1, ..., Pnm) Gn -&amp;gt; Bn end&lt;/code&gt; &amp;ldquo;。</target>
        </trans-unit>
        <trans-unit id="41da69e386b6502bc0c2dc763ce9b87bea7d440c" translate="yes" xml:space="preserve">
          <source>Creates an abstract fun-expression. If &lt;code&gt;Variables&lt;/code&gt; is &lt;code&gt;[V1, ..., Vn]&lt;/code&gt;, the result represents &quot;&lt;code&gt;fun (V1, ..., Vn) -&amp;gt; Body&lt;/code&gt;&quot;. All the &lt;code&gt;Vi&lt;/code&gt; must have type &lt;code&gt;var&lt;/code&gt;.</source>
          <target state="translated">创建一个抽象的fun-expression。如果 &lt;code&gt;Variables&lt;/code&gt; 为 &lt;code&gt;[V1, ..., Vn]&lt;/code&gt; ，则结果表示&amp;ldquo; &lt;code&gt;fun (V1, ..., Vn) -&amp;gt; Body&lt;/code&gt; &amp;rdquo;。所有的 &lt;code&gt;Vi&lt;/code&gt; 必须具有 &lt;code&gt;var&lt;/code&gt; 类型。</target>
        </trans-unit>
        <trans-unit id="aeb3add7a9bca476e6b43e52fa7922b59509c520" translate="yes" xml:space="preserve">
          <source>Creates an abstract function application expression. If &lt;code&gt;Arguments&lt;/code&gt; is &lt;code&gt;[A1, ..., An]&lt;/code&gt;, the result represents &quot;&lt;code&gt;Operator(A1, ..., An)&lt;/code&gt;&quot;.</source>
          <target state="translated">创建一个抽象函数应用程序表达式。如果 &lt;code&gt;Arguments&lt;/code&gt; 为 &lt;code&gt;[A1, ..., An]&lt;/code&gt; ，则结果表示&amp;ldquo; &lt;code&gt;Operator(A1, ..., An)&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="9930fa6a0b55c0aa436a4173e201a457d331a460" translate="yes" xml:space="preserve">
          <source>Creates an abstract function application expression. If &lt;code&gt;Module&lt;/code&gt; is &lt;code&gt;none&lt;/code&gt;, this is call is equivalent to &lt;code&gt;application(Function, Arguments)&lt;/code&gt;, otherwise it is equivalent to &lt;code&gt;application(module_qualifier(Module, Function), Arguments)&lt;/code&gt;.</source>
          <target state="translated">创建一个抽象函数应用程序表达式。如果 &lt;code&gt;Module&lt;/code&gt; 为 &lt;code&gt;none&lt;/code&gt; ，则此调用等效于 &lt;code&gt;application(Function, Arguments)&lt;/code&gt; ，否则等效于 &lt;code&gt;application(module_qualifier(Module, Function), Arguments)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="167a3fab52a9312a9847c42aea31da50fe051191" translate="yes" xml:space="preserve">
          <source>Creates an abstract function application. If &lt;code&gt;Arguments&lt;/code&gt; is &lt;code&gt;[A1, ..., An]&lt;/code&gt;, the result represents &quot;&lt;code&gt;apply Operator(A1, ..., An)&lt;/code&gt;&quot;.</source>
          <target state="translated">创建一个抽象函数应用程序。如果 &lt;code&gt;Arguments&lt;/code&gt; 是 &lt;code&gt;[A1, ..., An]&lt;/code&gt; ，则结果表示&amp;ldquo; &lt;code&gt;apply Operator(A1, ..., An)&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="3f37e6998dc5e1764d8b7a058ea93c03472bdee2" translate="yes" xml:space="preserve">
          <source>Creates an abstract function definition. If &lt;code&gt;Clauses&lt;/code&gt; is &lt;code&gt;[C1, ..., Cn]&lt;/code&gt;, the result represents &quot;&lt;code&gt;Name C1; ...; Name Cn.&lt;/code&gt;&quot;. More exactly, if each &lt;code&gt;Ci&lt;/code&gt; represents &quot;&lt;code&gt;(Pi1, ..., Pim) Gi -&amp;gt; Bi&lt;/code&gt;&quot;, then the result represents &quot;&lt;code&gt;Name(P11, ..., P1m) G1 -&amp;gt; B1; ...; Name(Pn1, ..., Pnm) Gn -&amp;gt; Bn.&lt;/code&gt;&quot;. Function definitions are source code forms.</source>
          <target state="translated">创建一个抽象函数定义。如果 &lt;code&gt;Clauses&lt;/code&gt; 是 &lt;code&gt;[C1, ..., Cn]&lt;/code&gt; ，则结果表示&amp;ldquo; &lt;code&gt;Name C1; ...; Name Cn.&lt;/code&gt; &amp;rdquo;。更确切地说，如果每个 &lt;code&gt;Ci&lt;/code&gt; 表示&amp;ldquo; &lt;code&gt;(Pi1, ..., Pim) Gi -&amp;gt; Bi&lt;/code&gt; &amp;ldquo;，则结果表示&amp;ldquo; &lt;code&gt;Name(P11, ..., P1m) G1 -&amp;gt; B1; ...; Name(Pn1, ..., Pnm) Gn -&amp;gt; Bn.&lt;/code&gt; &amp;rdquo;。函数定义是源代码形式。</target>
        </trans-unit>
        <trans-unit id="dc2c8422546828287140eb9060211654f8399789" translate="yes" xml:space="preserve">
          <source>Creates an abstract function type. If &lt;code&gt;Arguments&lt;/code&gt; is &lt;code&gt;[T1, ..., Tn]&lt;/code&gt;, then if it occurs within a function specification, the result represents &quot;&lt;code&gt;(T1, ...Tn) -&amp;gt; Return&lt;/code&gt;&quot;; otherwise it represents &quot;&lt;code&gt;fun((T1, ...Tn) -&amp;gt; Return)&lt;/code&gt;&quot;. If &lt;code&gt;Arguments&lt;/code&gt; is &lt;code&gt;any_arity&lt;/code&gt;, it represents &quot;&lt;code&gt;fun((...) -&amp;gt; Return)&lt;/code&gt;&quot;.</source>
          <target state="translated">创建一个抽象函数类型。如果 &lt;code&gt;Arguments&lt;/code&gt; 是 &lt;code&gt;[T1, ..., Tn]&lt;/code&gt; ，那么如果它出现在函数说明中，则结果表示为&amp;ldquo; &lt;code&gt;(T1, ...Tn) -&amp;gt; Return&lt;/code&gt; &amp;rdquo;; 否则代表&amp;ldquo; &lt;code&gt;fun((T1, ...Tn) -&amp;gt; Return)&lt;/code&gt; &amp;rdquo;。如果 &lt;code&gt;Arguments&lt;/code&gt; 是 &lt;code&gt;any_arity&lt;/code&gt; ，则表示&amp;ldquo; &lt;code&gt;fun((...) -&amp;gt; Return)&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="041d383752a274d8de433a68899114890ae51a00" translate="yes" xml:space="preserve">
          <source>Creates an abstract generator. The result represents &quot;&lt;code&gt;Pattern &amp;lt;- Body&lt;/code&gt;&quot;.</source>
          <target state="translated">创建一个抽象生成器。结果表示&amp;ldquo; &lt;code&gt;Pattern &amp;lt;- Body&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="82eb024c4b6985c500722f2a0e37c19377935ed5" translate="yes" xml:space="preserve">
          <source>Creates an abstract if-expression. If &lt;code&gt;Clauses&lt;/code&gt; is &lt;code&gt;[C1, ..., Cn]&lt;/code&gt;, the result represents &quot;&lt;code&gt;if C1; ...; Cn end&lt;/code&gt;&quot;. More exactly, if each &lt;code&gt;Ci&lt;/code&gt; represents &quot;&lt;code&gt;() Gi -&amp;gt; Bi&lt;/code&gt;&quot;, then the result represents &quot;&lt;code&gt;if G1 -&amp;gt; B1; ...; Gn -&amp;gt; Bn end&lt;/code&gt;&quot;.</source>
          <target state="translated">创建抽象的if表达式。如果 &lt;code&gt;Clauses&lt;/code&gt; 为 &lt;code&gt;[C1, ..., Cn]&lt;/code&gt; ，则结果表示&amp;ldquo; &lt;code&gt;if C1; ...; Cn end&lt;/code&gt; &amp;rdquo;。更确切地说，如果每个 &lt;code&gt;Ci&lt;/code&gt; 表示&amp;ldquo; &lt;code&gt;() Gi -&amp;gt; Bi&lt;/code&gt; &amp;rdquo;，则结果表示&amp;ldquo; &lt;code&gt;if G1 -&amp;gt; B1; ...; Gn -&amp;gt; Bn end&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="e7a602aabae686c29caa74f9c1f3166738b04954" translate="yes" xml:space="preserve">
          <source>Creates an abstract infix operator expression. The result represents &quot;&lt;code&gt;Left Operator Right&lt;/code&gt;&quot;.</source>
          <target state="translated">创建一个抽象的中缀运算符表达式。结果表示&amp;ldquo; &lt;code&gt;Left Operator Right&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="d792abfd2e2e78ff8c79c91857e2bf3824e18163" translate="yes" xml:space="preserve">
          <source>Creates an abstract integer literal. The lexical representation is the canonical decimal numeral of &lt;code&gt;Value&lt;/code&gt;.</source>
          <target state="translated">创建一个抽象的整数文字。词汇表示形式是 &lt;code&gt;Value&lt;/code&gt; 的规范十进制数字。</target>
        </trans-unit>
        <trans-unit id="f49dcd26ea98719db55c1b12e9b313415eecbfd1" translate="yes" xml:space="preserve">
          <source>Creates an abstract inter-module call. If &lt;code&gt;Arguments&lt;/code&gt; is &lt;code&gt;[A1, ..., An]&lt;/code&gt;, the result represents &quot;&lt;code&gt;call Module:Name(A1, ..., An)&lt;/code&gt;&quot;.</source>
          <target state="translated">创建一个抽象的模块间调用。如果 &lt;code&gt;Arguments&lt;/code&gt; 是 &lt;code&gt;[A1, ..., An]&lt;/code&gt; ，则结果表示&amp;ldquo; &lt;code&gt;call Module:Name(A1, ..., An)&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="30c0baad0fef48a44a9f19c293ffcbe04773bc8d" translate="yes" xml:space="preserve">
          <source>Creates an abstract let-expression. If &lt;code&gt;Variables&lt;/code&gt; is &lt;code&gt;[V1, ..., Vn]&lt;/code&gt;, the result represents &quot;&lt;code&gt;let &amp;lt;V1, ..., Vn&amp;gt; = Argument in Body&lt;/code&gt;&quot;. All the &lt;code&gt;Vi&lt;/code&gt; must have type &lt;code&gt;var&lt;/code&gt;.</source>
          <target state="translated">创建一个抽象的let表达式。如果 &lt;code&gt;Variables&lt;/code&gt; 为 &lt;code&gt;[V1, ..., Vn]&lt;/code&gt; ，则结果表示&amp;ldquo; &lt;code&gt;let &amp;lt;V1, ..., Vn&amp;gt; = Argument in Body&lt;/code&gt; &amp;rdquo;。所有的 &lt;code&gt;Vi&lt;/code&gt; 必须具有 &lt;code&gt;var&lt;/code&gt; 类型。</target>
        </trans-unit>
        <trans-unit id="7c8e0a520161fd353d059f6a1def19ce4bcc8717" translate="yes" xml:space="preserve">
          <source>Creates an abstract letrec-expression. If &lt;code&gt;Definitions&lt;/code&gt; is &lt;code&gt;[{V1, F1}, ..., {Vn, Fn}]&lt;/code&gt;, the result represents &quot;&lt;code&gt;letrec V1 = F1 ... Vn = Fn in Body&lt;/code&gt;. All the &lt;code&gt;Vi&lt;/code&gt; must have type &lt;code&gt;var&lt;/code&gt; and represent function names. All the &lt;code&gt;Fi&lt;/code&gt; must have type &lt;code&gt;'fun'&lt;/code&gt;.</source>
          <target state="translated">创建一个抽象的letrec-expression。如果 &lt;code&gt;Definitions&lt;/code&gt; 为 &lt;code&gt;[{V1, F1}, ..., {Vn, Fn}]&lt;/code&gt; ，则结果 &lt;code&gt;letrec V1 = F1 ... Vn = Fn in Body&lt;/code&gt; 表示为&amp;ldquo; letrec V1 = F1 ... Vn = Fn。所有 &lt;code&gt;Vi&lt;/code&gt; 必须具有 &lt;code&gt;var&lt;/code&gt; 类型并表示函数名称。所有 &lt;code&gt;Fi&lt;/code&gt; 必须具有类型 &lt;code&gt;'fun'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1e7fa57ca507a10ba5dc6835ed5313a0a540c355" translate="yes" xml:space="preserve">
          <source>Creates an abstract list comprehension. If &lt;code&gt;Body&lt;/code&gt; is &lt;code&gt;[E1, ..., En]&lt;/code&gt;, the result represents &quot;&lt;code&gt;[Template || E1, ..., En]&lt;/code&gt;&quot;.</source>
          <target state="translated">创建抽象列表理解。如果 &lt;code&gt;Body&lt;/code&gt; 为 &lt;code&gt;[E1, ..., En]&lt;/code&gt; ，则结果表示为 &lt;code&gt;[Template || E1, ..., En]&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="a8745b2fdde923052c4271190141750aff8fd473" translate="yes" xml:space="preserve">
          <source>Creates an abstract list constructor skeleton. Does not fold constant literals, i.e., the result always has type &lt;code&gt;cons&lt;/code&gt;, representing &quot;&lt;code&gt;[Head | Tail]&lt;/code&gt;&quot;.</source>
          <target state="translated">创建一个抽象列表构造函数框架。不折叠常量文字，即结果始终为 &lt;code&gt;cons&lt;/code&gt; 类型，表示&amp;ldquo; &lt;code&gt;[Head | Tail]&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="04c11bd87fe06f368572dfe1401681d8c1c7ae29" translate="yes" xml:space="preserve">
          <source>Creates an abstract list constructor. The result represents &quot;&lt;code&gt;[Head | Tail]&lt;/code&gt;&quot;. Note that if both &lt;code&gt;Head&lt;/code&gt; and &lt;code&gt;Tail&lt;/code&gt; have type &lt;code&gt;literal&lt;/code&gt;, then the result will also have type &lt;code&gt;literal&lt;/code&gt;, and annotations on &lt;code&gt;Head&lt;/code&gt; and &lt;code&gt;Tail&lt;/code&gt; are lost.</source>
          <target state="translated">创建一个抽象列表构造函数。结果表示&amp;ldquo; &lt;code&gt;[Head | Tail]&lt;/code&gt; &amp;rdquo;。请注意，如果 &lt;code&gt;Head&lt;/code&gt; 和 &lt;code&gt;Tail&lt;/code&gt; 都具有 &lt;code&gt;literal&lt;/code&gt; 类型，那么结果也将具有 &lt;code&gt;literal&lt;/code&gt; 类型，并且 &lt;code&gt;Head&lt;/code&gt; 和 &lt;code&gt;Tail&lt;/code&gt; 上的注释将丢失。</target>
        </trans-unit>
        <trans-unit id="256875db0dc8765061ddf506034961469a33bc4e" translate="yes" xml:space="preserve">
          <source>Creates an abstract list from the elements in &lt;code&gt;List&lt;/code&gt; and the optional &lt;code&gt;Tail&lt;/code&gt;. If &lt;code&gt;Tail&lt;/code&gt; is &lt;code&gt;none&lt;/code&gt;, the result will represent a nil-terminated list, otherwise it represents &quot;&lt;code&gt;[... | Tail]&lt;/code&gt;&quot;.</source>
          <target state="translated">根据 &lt;code&gt;List&lt;/code&gt; 中的元素和可选的 &lt;code&gt;Tail&lt;/code&gt; 创建一个抽象列表。如果 &lt;code&gt;Tail&lt;/code&gt; 为 &lt;code&gt;none&lt;/code&gt; ，则结果将表示一个以nil结尾的列表，否则它将表示&amp;ldquo; &lt;code&gt;[... | Tail]&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="95e42fb2a1b45bfb5cf5dee763884dbb09a6e51b" translate="yes" xml:space="preserve">
          <source>Creates an abstract macro application. If &lt;code&gt;Arguments&lt;/code&gt; is &lt;code&gt;none&lt;/code&gt;, the result represents &quot;&lt;code&gt;?Name&lt;/code&gt;&quot;, otherwise, if &lt;code&gt;Arguments&lt;/code&gt; is &lt;code&gt;[A1, ..., An]&lt;/code&gt;, the result represents &quot;&lt;code&gt;?Name(A1, ..., An)&lt;/code&gt;&quot;.</source>
          <target state="translated">创建一个抽象宏应用程序。如果 &lt;code&gt;Arguments&lt;/code&gt; 为 &lt;code&gt;none&lt;/code&gt; ，则结果表示&amp;ldquo; &lt;code&gt;?Name&lt;/code&gt; &amp;rdquo;，否则，如果 &lt;code&gt;Arguments&lt;/code&gt; 为 &lt;code&gt;[A1, ..., An]&lt;/code&gt; ，则结果表示&amp;ldquo; &lt;code&gt;?Name(A1, ..., An)&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="091726dc9460c97475a9026e131e6e9ec000d00d" translate="yes" xml:space="preserve">
          <source>Creates an abstract map assoc field. The result represents &quot;&lt;code&gt;Name =&amp;gt; Value&lt;/code&gt;&quot;.</source>
          <target state="translated">创建抽象地图assoc字段。结果表示&amp;ldquo; &lt;code&gt;Name =&amp;gt; Value&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="5c5c02787a5e021dcdf5b36510de1be879d2a289" translate="yes" xml:space="preserve">
          <source>Creates an abstract map exact field. The result represents &quot;&lt;code&gt;Name := Value&lt;/code&gt;&quot;.</source>
          <target state="translated">创建一个抽象地图精确字段。结果表示&amp;ldquo; &lt;code&gt;Name := Value&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="259175d543a553c6a5cddb9861d1d60443901dae" translate="yes" xml:space="preserve">
          <source>Creates an abstract map expression. If &lt;code&gt;Fields&lt;/code&gt; is &lt;code&gt;[F1, ..., Fn]&lt;/code&gt;, then if &lt;code&gt;Argument&lt;/code&gt; is &lt;code&gt;none&lt;/code&gt;, the result represents &quot;&lt;code&gt;#{F1, ..., Fn}&lt;/code&gt;&quot;, otherwise it represents &quot;&lt;code&gt;Argument#{F1, ..., Fn}&lt;/code&gt;&quot;.</source>
          <target state="translated">创建一个抽象地图表达式。如果 &lt;code&gt;Fields&lt;/code&gt; 为 &lt;code&gt;[F1, ..., Fn]&lt;/code&gt; ，那么如果 &lt;code&gt;Argument&lt;/code&gt; 为 &lt;code&gt;none&lt;/code&gt; ，则结果表示为&amp;ldquo; &lt;code&gt;#{F1, ..., Fn}&lt;/code&gt; &amp;rdquo;，否则为&amp;ldquo; &lt;code&gt;Argument#{F1, ..., Fn}&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="600a70115dc8900da1c0e9b8440b5eecea8e5e17" translate="yes" xml:space="preserve">
          <source>Creates an abstract map type assoc field. The result represents &quot;&lt;code&gt;Name =&amp;gt; Value&lt;/code&gt;&quot;.</source>
          <target state="translated">创建一个抽象地图类型assoc字段。结果表示&amp;ldquo; &lt;code&gt;Name =&amp;gt; Value&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="380c6902de00a0de91f987502332aec04c6ea1d8" translate="yes" xml:space="preserve">
          <source>Creates an abstract map type exact field. The result represents &quot;&lt;code&gt;Name := Value&lt;/code&gt;&quot;.</source>
          <target state="translated">创建一个抽象地图类型精确字段。结果表示&amp;ldquo; &lt;code&gt;Name := Value&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="448269bfd57dc79fbba50ce6d811e3ed7adbbcde" translate="yes" xml:space="preserve">
          <source>Creates an abstract match-expression. The result represents &quot;&lt;code&gt;Pattern = Body&lt;/code&gt;&quot;.</source>
          <target state="translated">创建一个抽象的match-expression。结果表示&amp;ldquo; &lt;code&gt;Pattern = Body&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="1e1d5f5935a7fe1ef85b0f321d80187c79bb5186" translate="yes" xml:space="preserve">
          <source>Creates an abstract module definition. The result represents</source>
          <target state="translated">创建一个抽象的模块定义。结果表示</target>
        </trans-unit>
        <trans-unit id="0d7184b4933e111d5f580a3cea57948829b36311" translate="yes" xml:space="preserve">
          <source>Creates an abstract module qualifier. The result represents &quot;&lt;code&gt;Module:Body&lt;/code&gt;&quot;.</source>
          <target state="translated">创建一个抽象模块限定符。结果表示&amp;ldquo; &lt;code&gt;Module:Body&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="1139792cb4f07eacb0b2193c4553fdfee2e68039" translate="yes" xml:space="preserve">
          <source>Creates an abstract module-qualified &quot;implicit fun&quot; expression. If &lt;code&gt;Module&lt;/code&gt; is &lt;code&gt;none&lt;/code&gt;, this is equivalent to &lt;code&gt;implicit_fun(Name, Arity)&lt;/code&gt;, otherwise it is equivalent to &lt;code&gt;implicit_fun(module_qualifier(Module, arity_qualifier(Name, Arity))&lt;/code&gt;.</source>
          <target state="translated">创建一个抽象模块限定的&amp;ldquo;隐式乐趣&amp;rdquo;表达式。如果 &lt;code&gt;Module&lt;/code&gt; 为 &lt;code&gt;none&lt;/code&gt; ，则等效于 &lt;code&gt;implicit_fun(Name, Arity)&lt;/code&gt; ，否则等效于 &lt;code&gt;implicit_fun(module_qualifier(Module, arity_qualifier(Name, Arity))&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a59d06044b354abc164d78db131dc67e359b1e54" translate="yes" xml:space="preserve">
          <source>Creates an abstract named fun-expression. If &lt;code&gt;Clauses&lt;/code&gt; is &lt;code&gt;[C1, ..., Cn]&lt;/code&gt;, the result represents &quot;&lt;code&gt;fun Name C1; ...; Name Cn end&lt;/code&gt;&quot;. More exactly, if each &lt;code&gt;Ci&lt;/code&gt; represents &quot;&lt;code&gt;(Pi1, ..., Pim) Gi -&amp;gt; Bi&lt;/code&gt;&quot;, then the result represents &quot;&lt;code&gt;fun Name(P11, ..., P1m) G1 -&amp;gt; B1; ...; Name(Pn1, ..., Pnm) Gn -&amp;gt; Bn end&lt;/code&gt;&quot;.</source>
          <target state="translated">创建一个名为fun-expression的抽象。如果 &lt;code&gt;Clauses&lt;/code&gt; 为 &lt;code&gt;[C1, ..., Cn]&lt;/code&gt; ，则结果表示&amp;ldquo; &lt;code&gt;fun Name C1; ...; Name Cn end&lt;/code&gt; &amp;rdquo;。更确切地说，如果每个 &lt;code&gt;Ci&lt;/code&gt; 表示&amp;ldquo; &lt;code&gt;(Pi1, ..., Pim) Gi -&amp;gt; Bi&lt;/code&gt; &amp;rdquo;，则结果表示&amp;ldquo; &lt;code&gt;fun Name(P11, ..., P1m) G1 -&amp;gt; B1; ...; Name(Pn1, ..., Pnm) Gn -&amp;gt; Bn end&lt;/code&gt; &amp;ldquo;。</target>
        </trans-unit>
        <trans-unit id="e8a54ed39352b3751958826e81d471d9932d1f13" translate="yes" xml:space="preserve">
          <source>Creates an abstract operator. The name of the operator is the character sequence represented by &lt;code&gt;Name&lt;/code&gt;. This is analogous to the print name of an atom, but an operator is never written within single-quotes; e.g., the result of &lt;code&gt;operator('++')&lt;/code&gt; represents &quot;&lt;code&gt;++&lt;/code&gt;&quot; rather than &quot;&lt;code&gt;'++'&lt;/code&gt;&quot;.</source>
          <target state="translated">创建一个抽象运算符。运算符的名称是 &lt;code&gt;Name&lt;/code&gt; 表示的字符序列。这类似于原子的打印名称，但绝不会在单引号内编写运算符；例如， &lt;code&gt;operator('++')&lt;/code&gt; 的结果表示&amp;ldquo; &lt;code&gt;++&lt;/code&gt; &amp;rdquo;，而不是&amp;ldquo; &lt;code&gt;'++'&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="9ab86c61038a93d4be142eb9f8db6bbde5e409da" translate="yes" xml:space="preserve">
          <source>Creates an abstract operator. The name of the operator is the character sequence represented by &lt;code&gt;Name&lt;/code&gt;. This is analogous to the print name of an atom, but an operator is never written within single-quotes; e.g., the result of &lt;code&gt;operator(&lt;/code&gt;++')' represents &quot;&lt;code&gt;++&lt;/code&gt;&quot; rather than &quot;`++''&quot;.</source>
          <target state="translated">创建一个抽象运算符。运算符的名称是 &lt;code&gt;Name&lt;/code&gt; 表示的字符序列。这类似于原子的打印名称，但是绝不会在单引号内编写运算符；例如， &lt;code&gt;operator(&lt;/code&gt; ++'）'的结果表示&amp;ldquo; &lt;code&gt;++&lt;/code&gt; &amp;rdquo;，而不是&amp;ldquo;`++&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="e905702f0d86684df46e58dd26f3489aa00b2b51" translate="yes" xml:space="preserve">
          <source>Creates an abstract parenthesised expression. The result represents &quot;&lt;code&gt;(Body)&lt;/code&gt;&quot;, independently of the context.</source>
          <target state="translated">创建一个抽象的带括号的表达式。结果表示&amp;ldquo; &lt;code&gt;(Body)&lt;/code&gt; &amp;rdquo;，与上下文无关。</target>
        </trans-unit>
        <trans-unit id="0e46be42c59b31006335a85758a1210f8d4f1083" translate="yes" xml:space="preserve">
          <source>Creates an abstract pattern alias. The result represents &quot;&lt;code&gt;Variable = Pattern&lt;/code&gt;&quot;.</source>
          <target state="translated">创建一个抽象模式别名。结果表示&amp;ldquo; &lt;code&gt;Variable = Pattern&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="8c4eec2b6e72da76c6479671e85bec640fd6041d" translate="yes" xml:space="preserve">
          <source>Creates an abstract piece of source code text. The result represents exactly the sequence of characters in &lt;code&gt;String&lt;/code&gt;. This is useful in cases when one wants full control of the resulting output, e.g., for the appearance of floating-point numbers or macro definitions.</source>
          <target state="translated">创建一段抽象的源代码文本。结果精确地表示 &lt;code&gt;String&lt;/code&gt; 中的字符序列。这在需要完全控制结果输出的情况下很有用，例如，浮点数或宏定义的出现。</target>
        </trans-unit>
        <trans-unit id="76e01a72d6ea9466f420d51372b2e5113ec05f36" translate="yes" xml:space="preserve">
          <source>Creates an abstract prefix operator expression. The result represents &quot;&lt;code&gt;Operator Argument&lt;/code&gt;&quot;.</source>
          <target state="translated">创建一个抽象前缀运算符表达式。结果表示&amp;ldquo; &lt;code&gt;Operator Argument&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="c53926e096c83aa1d0d9257ef6509cc64aba8d93" translate="yes" xml:space="preserve">
          <source>Creates an abstract primitive operation call. If &lt;code&gt;Arguments&lt;/code&gt; is &lt;code&gt;[A1, ..., An]&lt;/code&gt;, the result represents &quot;&lt;code&gt;primop Name(A1, ..., An)&lt;/code&gt;&quot;. &lt;code&gt;Name&lt;/code&gt; must be an atom literal.</source>
          <target state="translated">创建一个抽象的原始操作调用。如果 &lt;code&gt;Arguments&lt;/code&gt; 是 &lt;code&gt;[A1, ..., An]&lt;/code&gt; ，则结果表示&amp;ldquo; &lt;code&gt;primop Name(A1, ..., An)&lt;/code&gt; &amp;rdquo;。 &lt;code&gt;Name&lt;/code&gt; 必须是原子文字。</target>
        </trans-unit>
        <trans-unit id="34b890b0e60654369a8cb996d08f0ed12ce204ce" translate="yes" xml:space="preserve">
          <source>Creates an abstract program attribute. If &lt;code&gt;Arguments&lt;/code&gt; is &lt;code&gt;[A1, ..., An]&lt;/code&gt;, the result represents &quot;&lt;code&gt;-Name(A1, ..., An).&lt;/code&gt;&quot;. Otherwise, if &lt;code&gt;Arguments&lt;/code&gt; is &lt;code&gt;none&lt;/code&gt;, the result represents &quot;&lt;code&gt;-Name.&lt;/code&gt;&quot;. The latter form makes it possible to represent preprocessor directives such as &quot;&lt;code&gt;-endif.&lt;/code&gt;&quot;. Attributes are source code forms.</source>
          <target state="translated">创建一个抽象程序属性。如果 &lt;code&gt;Arguments&lt;/code&gt; 是 &lt;code&gt;[A1, ..., An]&lt;/code&gt; ，则结果表示&amp;ldquo; &lt;code&gt;-Name(A1, ..., An).&lt;/code&gt; &amp;rdquo;。否则，如果 &lt;code&gt;Arguments&lt;/code&gt; 为 &lt;code&gt;none&lt;/code&gt; ，则结果表示&amp;ldquo; &lt;code&gt;-Name.&lt;/code&gt; &amp;rdquo;。后一种形式可以表示预处理程序指令，例如&amp;ldquo; &lt;code&gt;-endif.&lt;/code&gt; &amp;rdquo;。属性是源代码形式。</target>
        </trans-unit>
        <trans-unit id="98ef46b456408a140a11f06e33f2d282d5e9124c" translate="yes" xml:space="preserve">
          <source>Creates an abstract range type. The result represents &quot;&lt;code&gt;Low .. High&lt;/code&gt;&quot;.</source>
          <target state="translated">创建一个抽象范围类型。结果表示&amp;ldquo; &lt;code&gt;Low .. High&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="a2f794214a28f5e8fe2c66ddaf8173699c40deea" translate="yes" xml:space="preserve">
          <source>Creates an abstract receive-expression. If &lt;code&gt;Clauses&lt;/code&gt; is &lt;code&gt;[C1, ..., Cn]&lt;/code&gt;, the result represents &quot;&lt;code&gt;receive C1 ... Cn after Timeout -&amp;gt; Action end&lt;/code&gt;&quot;.</source>
          <target state="translated">创建一个抽象的接收表达式。如果 &lt;code&gt;Clauses&lt;/code&gt; 为 &lt;code&gt;[C1, ..., Cn]&lt;/code&gt; ，则结果表示&amp;ldquo; &lt;code&gt;receive C1 ... Cn after Timeout -&amp;gt; Action end&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="bd47f745c9d429b72002b984a22111ea33553367" translate="yes" xml:space="preserve">
          <source>Creates an abstract receive-expression. If &lt;code&gt;Timeout&lt;/code&gt; is &lt;code&gt;none&lt;/code&gt;, the result represents &quot;&lt;code&gt;receive C1; ...; Cn end&lt;/code&gt;&quot; (the &lt;code&gt;Action&lt;/code&gt; argument is ignored). Otherwise, if &lt;code&gt;Clauses&lt;/code&gt; is &lt;code&gt;[C1, ..., Cn]&lt;/code&gt; and &lt;code&gt;Action&lt;/code&gt; is &lt;code&gt;[A1, ..., Am]&lt;/code&gt;, the result represents &quot;&lt;code&gt;receive C1; ...; Cn after Timeout -&amp;gt; A1, ..., Am end&lt;/code&gt;&quot;. More exactly, if each &lt;code&gt;Ci&lt;/code&gt; represents &quot;&lt;code&gt;(Pi) Gi -&amp;gt; Bi&lt;/code&gt;&quot;, then the result represents &quot;&lt;code&gt;receive P1 G1 -&amp;gt; B1; ...; Pn Gn -&amp;gt; Bn ... end&lt;/code&gt;&quot;.</source>
          <target state="translated">创建一个抽象的接收表达式。如果 &lt;code&gt;Timeout&lt;/code&gt; 为 &lt;code&gt;none&lt;/code&gt; ，则结果表示&amp;ldquo; &lt;code&gt;receive C1; ...; Cn end&lt;/code&gt; &amp;rdquo;（忽略 &lt;code&gt;Action&lt;/code&gt; 参数）。否则，如果 &lt;code&gt;Clauses&lt;/code&gt; 为 &lt;code&gt;[C1, ..., Cn]&lt;/code&gt; 并且 &lt;code&gt;Action&lt;/code&gt; 为 &lt;code&gt;[A1, ..., Am]&lt;/code&gt; ，则结果表示&amp;ldquo; &lt;code&gt;receive C1; ...; Cn after Timeout -&amp;gt; A1, ..., Am end&lt;/code&gt; &amp;rdquo;。更确切地说，如果每个 &lt;code&gt;Ci&lt;/code&gt; 表示&amp;ldquo; &lt;code&gt;(Pi) Gi -&amp;gt; Bi&lt;/code&gt; &amp;rdquo;，则结果表示&amp;ldquo; &lt;code&gt;receive P1 G1 -&amp;gt; B1; ...; Pn Gn -&amp;gt; Bn ... end&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="56705efe321ce96bf31dd94193f5b038702bb40b" translate="yes" xml:space="preserve">
          <source>Creates an abstract record expression. If &lt;code&gt;Fields&lt;/code&gt; is &lt;code&gt;[F1, ..., Fn]&lt;/code&gt;, then if &lt;code&gt;Argument&lt;/code&gt; is &lt;code&gt;none&lt;/code&gt;, the result represents &quot;&lt;code&gt;#Type{F1, ..., Fn}&lt;/code&gt;&quot;, otherwise it represents &quot;&lt;code&gt;Argument#Type{F1, ..., Fn}&lt;/code&gt;&quot;.</source>
          <target state="translated">创建一个抽象记录表达式。如果 &lt;code&gt;Fields&lt;/code&gt; 为 &lt;code&gt;[F1, ..., Fn]&lt;/code&gt; ，则如果 &lt;code&gt;Argument&lt;/code&gt; 为 &lt;code&gt;none&lt;/code&gt; ，则结果表示为&amp;ldquo; &lt;code&gt;#Type{F1, ..., Fn}&lt;/code&gt; &amp;rdquo;，否则为&amp;ldquo; &lt;code&gt;Argument#Type{F1, ..., Fn}&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="634c8fa5ca7283a9c3b05d9c7848fc9720f48642" translate="yes" xml:space="preserve">
          <source>Creates an abstract record field access expression. The result represents &quot;&lt;code&gt;Argument#Type.Field&lt;/code&gt;&quot;.</source>
          <target state="translated">创建一个抽象记录字段访问表达式。结果表示&amp;ldquo; &lt;code&gt;Argument#Type.Field&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="fac5aec135faac3fe06fa2ed0089d60d73e0a2e7" translate="yes" xml:space="preserve">
          <source>Creates an abstract record field index expression. The result represents &quot;&lt;code&gt;#Type.Field&lt;/code&gt;&quot;.</source>
          <target state="translated">创建一个抽象记录字段索引表达式。结果表示&amp;ldquo; &lt;code&gt;#Type.Field&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="b9029c9d9797f9990c469081c0138f8d1f4fbd4a" translate="yes" xml:space="preserve">
          <source>Creates an abstract record field specification. If &lt;code&gt;Value&lt;/code&gt; is &lt;code&gt;none&lt;/code&gt;, the result represents simply &quot;&lt;code&gt;Name&lt;/code&gt;&quot;, otherwise it represents &quot;&lt;code&gt;Name = Value&lt;/code&gt;&quot;.</source>
          <target state="translated">创建抽象记录字段规范。如果 &lt;code&gt;Value&lt;/code&gt; 为 &lt;code&gt;none&lt;/code&gt; ，则结果仅表示&amp;ldquo; &lt;code&gt;Name&lt;/code&gt; &amp;rdquo;，否则表示&amp;ldquo; &lt;code&gt;Name = Value&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="202999e52c796f5d3cbc46d120a4084b83eb7ea6" translate="yes" xml:space="preserve">
          <source>Creates an abstract record type field. The result represents &quot;&lt;code&gt;Name :: Type&lt;/code&gt;&quot;.</source>
          <target state="translated">创建一个抽象记录类型字段。结果表示&amp;ldquo; &lt;code&gt;Name :: Type&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="8be92fd21b8c3dfeaaa8f931d13503774f089039" translate="yes" xml:space="preserve">
          <source>Creates an abstract record type. If &lt;code&gt;Fields&lt;/code&gt; is &lt;code&gt;[F1, ..., Fn]&lt;/code&gt;, the result represents &quot;&lt;code&gt;#Name{F1, ..., Fn}&lt;/code&gt;&quot;.</source>
          <target state="translated">创建抽象记录类型。如果 &lt;code&gt;Fields&lt;/code&gt; 为 &lt;code&gt;[F1, ..., Fn]&lt;/code&gt; ，则结果表示为&amp;ldquo; &lt;code&gt;#Name{F1, ..., Fn}&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="86deea0e3964768cfe86297e1e3abe153069a918" translate="yes" xml:space="preserve">
          <source>Creates an abstract sequence of &quot;source code forms&quot;. If &lt;code&gt;Forms&lt;/code&gt; is &lt;code&gt;[F1, ..., Fn]&lt;/code&gt;, where each &lt;code&gt;Fi&lt;/code&gt; is a form (see &lt;code&gt;&lt;a href=&quot;#is_form-1&quot;&gt;is_form/1&lt;/a&gt;&lt;/code&gt;, the result represents</source>
          <target state="translated">创建&amp;ldquo;源代码形式&amp;rdquo;的抽象序列。如果 &lt;code&gt;Forms&lt;/code&gt; 是 &lt;code&gt;[F1, ..., Fn]&lt;/code&gt; ，其中每个 &lt;code&gt;Fi&lt;/code&gt; 都是一个表单（请参见 &lt;code&gt;&lt;a href=&quot;#is_form-1&quot;&gt;is_form/1&lt;/a&gt;&lt;/code&gt; ，则结果表示</target>
        </trans-unit>
        <trans-unit id="7f724dc76cffd1d5dd8c2d1af0682ca80d487275" translate="yes" xml:space="preserve">
          <source>Creates an abstract sequencing expression. The result represents &quot;&lt;code&gt;do Argument Body&lt;/code&gt;&quot;.</source>
          <target state="translated">创建一个抽象的排序表达式。结果表示&amp;ldquo; &lt;code&gt;do Argument Body&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="6f43eb7b9ad935e7996add1f28ac96ebb6a7a10a" translate="yes" xml:space="preserve">
          <source>Creates an abstract size qualifier. The result represents &quot;&lt;code&gt;Body:Size&lt;/code&gt;&quot;.</source>
          <target state="translated">创建一个抽象大小限定符。结果表示&amp;ldquo; &lt;code&gt;Body:Size&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="82995b73aac28e978e53e2b1a6594d44549911ff" translate="yes" xml:space="preserve">
          <source>Creates an abstract string literal. Equivalent to creating an abstract list of the corresponding character literals (cf. &lt;code&gt;is_c_string/1&lt;/code&gt;), but is typically more efficient. The lexical representation of a string is &quot;&lt;code&gt;&quot;Chars&quot;&lt;/code&gt;&quot;, where &lt;code&gt;Chars&lt;/code&gt; is a sequence of printing characters or spaces.</source>
          <target state="translated">创建一个抽象字符串文字。等效于创建相应字符文字的抽象列表（请参见 &lt;code&gt;is_c_string/1&lt;/code&gt; ），但通常更为有效。字符串的词汇表示形式为&amp;ldquo; &lt;code&gt;&quot;Chars&quot;&lt;/code&gt; &amp;ldquo;，其中 &lt;code&gt;Chars&lt;/code&gt; 是打印字符或空格的序列。</target>
        </trans-unit>
        <trans-unit id="7fdef7f527b0216eb47ba82d13b0a68ffc10336a" translate="yes" xml:space="preserve">
          <source>Creates an abstract string literal. The result represents &lt;code&gt;&quot;Text&quot;&lt;/code&gt; (including the surrounding double-quotes), where &lt;code&gt;Text&lt;/code&gt; corresponds to the sequence of characters in &lt;code&gt;Value&lt;/code&gt;, but not representing a &lt;strong&gt;specific&lt;/strong&gt; string literal.</source>
          <target state="translated">创建一个抽象字符串文字。结果表示 &lt;code&gt;&quot;Text&quot;&lt;/code&gt; （包括周围的双引号），其中 &lt;code&gt;Text&lt;/code&gt; 对应于 &lt;code&gt;Value&lt;/code&gt; 中的字符序列，但不表示&lt;strong&gt;特定的&lt;/strong&gt;字符串文字。</target>
        </trans-unit>
        <trans-unit id="692c4205e4b74cb4685f8c70e302325ffb8182b6" translate="yes" xml:space="preserve">
          <source>Creates an abstract try-expression. If &lt;code&gt;Body&lt;/code&gt; is &lt;code&gt;[B1, ..., Bn]&lt;/code&gt;, &lt;code&gt;Clauses&lt;/code&gt; is &lt;code&gt;[C1, ..., Cj]&lt;/code&gt;, &lt;code&gt;Handlers&lt;/code&gt; is &lt;code&gt;[H1, ..., Hk]&lt;/code&gt;, and &lt;code&gt;After&lt;/code&gt; is &lt;code&gt;[A1, ..., Am]&lt;/code&gt;, the result represents &quot;&lt;code&gt;try B1, ..., Bn of C1; ...; Cj catch H1; ...; Hk after A1, ..., Am end&lt;/code&gt;&quot;. More exactly, if each &lt;code&gt;Ci&lt;/code&gt; represents &quot;&lt;code&gt;(CPi) CGi -&amp;gt; CBi&lt;/code&gt;&quot;, and each &lt;code&gt;Hi&lt;/code&gt; represents &quot;&lt;code&gt;(HPi) HGi -&amp;gt; HBi&lt;/code&gt;&quot;, then the result represents &quot;&lt;code&gt;try B1, ..., Bn of CP1 CG1 -&amp;gt; CB1; ...; CPj CGj -&amp;gt; CBj catch HP1 HG1 -&amp;gt; HB1; ...; HPk HGk -&amp;gt; HBk after A1, ..., Am end&lt;/code&gt;&quot;; see &lt;code&gt;&lt;a href=&quot;#case_expr-2&quot;&gt;case_expr/2&lt;/a&gt;&lt;/code&gt;. If &lt;code&gt;Clauses&lt;/code&gt; is the empty list, the &lt;code&gt;of ...&lt;/code&gt; section is left out. If &lt;code&gt;After&lt;/code&gt; is the empty list, the &lt;code&gt;after ...&lt;/code&gt; section is left out. If &lt;code&gt;Handlers&lt;/code&gt; is the empty list, and &lt;code&gt;After&lt;/code&gt; is nonempty, the &lt;code&gt;catch ...&lt;/code&gt; section is left out.</source>
          <target state="translated">创建一个抽象的try-expression。如果 &lt;code&gt;Body&lt;/code&gt; 为 &lt;code&gt;[B1, ..., Bn]&lt;/code&gt; ， &lt;code&gt;Clauses&lt;/code&gt; 为 &lt;code&gt;[C1, ..., Cj]&lt;/code&gt; ， &lt;code&gt;Handlers&lt;/code&gt; 为 &lt;code&gt;[H1, ..., Hk]&lt;/code&gt; ， &lt;code&gt;After&lt;/code&gt; 为 &lt;code&gt;[A1, ..., Am]&lt;/code&gt; ，结果表示&amp;ldquo; &lt;code&gt;try B1, ..., Bn of C1; ...; Cj catch H1; ...; Hk after A1, ..., Am end&lt;/code&gt; &amp;rdquo;。更确切地说，如果每个 &lt;code&gt;Ci&lt;/code&gt; 代表&amp;ldquo; &lt;code&gt;(CPi) CGi -&amp;gt; CBi&lt;/code&gt; &amp;rdquo;，每个 &lt;code&gt;Hi&lt;/code&gt; 代表&amp;ldquo; &lt;code&gt;(HPi) HGi -&amp;gt; HBi&lt;/code&gt; &amp;rdquo;，则结果代表&amp;ldquo; &lt;code&gt;try B1, ..., Bn of CP1 CG1 -&amp;gt; CB1; ...; CPj CGj -&amp;gt; CBj catch HP1 HG1 -&amp;gt; HB1; ...; HPk HGk -&amp;gt; HBk after A1, ..., Am end&lt;/code&gt; &amp;ldquo;；请参见 &lt;code&gt;&lt;a href=&quot;#case_expr-2&quot;&gt;case_expr/2&lt;/a&gt;&lt;/code&gt; 。如果 &lt;code&gt;Clauses&lt;/code&gt; 是空列表，则 &lt;code&gt;of ...&lt;/code&gt; 部分被忽略。如果 &lt;code&gt;After&lt;/code&gt; 是空列表，则 &lt;code&gt;after ...&lt;/code&gt; 的部分被忽略。如果 &lt;code&gt;Handlers&lt;/code&gt; 是空列表，则 &lt;code&gt;After&lt;/code&gt; 是非空的，则 &lt;code&gt;catch ...&lt;/code&gt; 部分被省略。</target>
        </trans-unit>
        <trans-unit id="8af3078219015b17491e248e631bab0c671aae5f" translate="yes" xml:space="preserve">
          <source>Creates an abstract try-expression. If &lt;code&gt;Variables&lt;/code&gt; is &lt;code&gt;[V1, ..., Vn]&lt;/code&gt; and &lt;code&gt;ExceptionVars&lt;/code&gt; is &lt;code&gt;[X1, ..., Xm]&lt;/code&gt;, the result represents &quot;&lt;code&gt;try Argument of &amp;lt;V1, ..., Vn&amp;gt; -&amp;gt; Body catch &amp;lt;X1, ..., Xm&amp;gt; -&amp;gt; Handler&lt;/code&gt;&quot;. All the &lt;code&gt;Vi&lt;/code&gt; and &lt;code&gt;Xi&lt;/code&gt; must have type &lt;code&gt;var&lt;/code&gt;.</source>
          <target state="translated">创建一个抽象的try-expression。如果 &lt;code&gt;Variables&lt;/code&gt; 是 &lt;code&gt;[V1, ..., Vn]&lt;/code&gt; 而 &lt;code&gt;ExceptionVars&lt;/code&gt; 是 &lt;code&gt;[X1, ..., Xm]&lt;/code&gt; ，则结果表示&amp;ldquo; &lt;code&gt;try Argument of &amp;lt;V1, ..., Vn&amp;gt; -&amp;gt; Body catch &amp;lt;X1, ..., Xm&amp;gt; -&amp;gt; Handler&lt;/code&gt; &amp;rdquo;。所有的 &lt;code&gt;Vi&lt;/code&gt; 和 &lt;code&gt;Xi&lt;/code&gt; 必须具有 &lt;code&gt;var&lt;/code&gt; 类型。</target>
        </trans-unit>
        <trans-unit id="6ef9b7271444ebf591e5c89458d957bf83826f64" translate="yes" xml:space="preserve">
          <source>Creates an abstract tuple skeleton. Does not fold constant literals, i.e., the result always has type &lt;code&gt;tuple&lt;/code&gt;, representing &quot;&lt;code&gt;{E1, ..., En}&lt;/code&gt;&quot;, if &lt;code&gt;Elements&lt;/code&gt; is &lt;code&gt;[E1, ..., En]&lt;/code&gt;.</source>
          <target state="translated">创建一个抽象的元组骨架。不折叠常量文字，即，如果 &lt;code&gt;Elements&lt;/code&gt; 为 &lt;code&gt;[E1, ..., En]&lt;/code&gt; ，则结果始终为 &lt;code&gt;tuple&lt;/code&gt; 类型，表示&amp;ldquo; &lt;code&gt;{E1, ..., En}&lt;/code&gt; &amp;rdquo; 。</target>
        </trans-unit>
        <trans-unit id="8762231d2ff99df6ecd7e9cf0885e8b7a7387ce3" translate="yes" xml:space="preserve">
          <source>Creates an abstract tuple. If &lt;code&gt;Elements&lt;/code&gt; is &lt;code&gt;[E1, ..., En]&lt;/code&gt;, the result represents &quot;&lt;code&gt;{E1, ..., En}&lt;/code&gt;&quot;. Note that if all nodes in &lt;code&gt;Elements&lt;/code&gt; have type &lt;code&gt;literal&lt;/code&gt;, or if &lt;code&gt;Elements&lt;/code&gt; is empty, then the result will also have type &lt;code&gt;literal&lt;/code&gt; and annotations on nodes in &lt;code&gt;Elements&lt;/code&gt; are lost.</source>
          <target state="translated">创建一个抽象元组。如果 &lt;code&gt;Elements&lt;/code&gt; 为 &lt;code&gt;[E1, ..., En]&lt;/code&gt; ，则结果表示&amp;ldquo; &lt;code&gt;{E1, ..., En}&lt;/code&gt; &amp;rdquo;。请注意，如果 &lt;code&gt;Elements&lt;/code&gt; 中的所有节点的类型都为 &lt;code&gt;literal&lt;/code&gt; ，或者 &lt;code&gt;Elements&lt;/code&gt; 为空，那么结果也将具有 &lt;code&gt;literal&lt;/code&gt; 类型，并且 &lt;code&gt;Elements&lt;/code&gt; 中的节点上的注释都将丢失。</target>
        </trans-unit>
        <trans-unit id="32c25fa61dd8077987521091cf93cb3e37e6266f" translate="yes" xml:space="preserve">
          <source>Creates an abstract tuple. If &lt;code&gt;Elements&lt;/code&gt; is &lt;code&gt;[X1, ..., Xn]&lt;/code&gt;, the result represents &quot;&lt;code&gt;{X1, ..., Xn}&lt;/code&gt;&quot;.</source>
          <target state="translated">创建一个抽象元组。如果 &lt;code&gt;Elements&lt;/code&gt; 为 &lt;code&gt;[X1, ..., Xn]&lt;/code&gt; ，则结果表示为&amp;ldquo; &lt;code&gt;{X1, ..., Xn}&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="ea3d542f33bce3d60893927e4e25b0a20f14ab0b" translate="yes" xml:space="preserve">
          <source>Creates an abstract type application expression. If &lt;code&gt;Arguments&lt;/code&gt; is &lt;code&gt;[T1, ..., Tn]&lt;/code&gt;, the result represents &quot;&lt;code&gt;TypeName(T1, ...Tn)&lt;/code&gt;&quot;.</source>
          <target state="translated">创建抽象类型应用程序表达式。如果 &lt;code&gt;Arguments&lt;/code&gt; 是 &lt;code&gt;[T1, ..., Tn]&lt;/code&gt; ，则结果表示&amp;ldquo; &lt;code&gt;TypeName(T1, ...Tn)&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="cc30675763f9ecabc8a2c88e8fef73041299d5e4" translate="yes" xml:space="preserve">
          <source>Creates an abstract type application expression. If &lt;code&gt;Module&lt;/code&gt; is &lt;code&gt;none&lt;/code&gt;, this is call is equivalent to &lt;code&gt;type_application(TypeName, Arguments)&lt;/code&gt;, otherwise it is equivalent to &lt;code&gt;type_application(module_qualifier(Module, TypeName), Arguments)&lt;/code&gt;.</source>
          <target state="translated">创建抽象类型应用程序表达式。如果 &lt;code&gt;Module&lt;/code&gt; 为 &lt;code&gt;none&lt;/code&gt; ，则此调用等效于 &lt;code&gt;type_application(TypeName, Arguments)&lt;/code&gt; ，否则等效于 &lt;code&gt;type_application(module_qualifier(Module, TypeName), Arguments)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="90b484bdab94d4e8ccfe7341dfea651dd2521687" translate="yes" xml:space="preserve">
          <source>Creates an abstract type map. If &lt;code&gt;Fields&lt;/code&gt; is &lt;code&gt;[F1, ..., Fn]&lt;/code&gt;, the result represents &quot;&lt;code&gt;#{F1, ..., Fn}&lt;/code&gt;&quot;; otherwise, if &lt;code&gt;Fields&lt;/code&gt; is &lt;code&gt;any_size&lt;/code&gt;, it represents &quot;&lt;code&gt;map()&lt;/code&gt;&quot;.</source>
          <target state="translated">创建一个抽象类型映射。如果 &lt;code&gt;Fields&lt;/code&gt; 为 &lt;code&gt;[F1, ..., Fn]&lt;/code&gt; ，则结果表示为&amp;ldquo; &lt;code&gt;#{F1, ..., Fn}&lt;/code&gt; &amp;rdquo;; 否则，如果 &lt;code&gt;Fields&lt;/code&gt; 为 &lt;code&gt;any_size&lt;/code&gt; ，则表示&amp;ldquo; &lt;code&gt;map()&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="28bf6813fef956774399c8f84dea7fd47317689b" translate="yes" xml:space="preserve">
          <source>Creates an abstract type tuple. If &lt;code&gt;Elements&lt;/code&gt; is &lt;code&gt;[T1, ..., Tn]&lt;/code&gt;, the result represents &quot;&lt;code&gt;{T1, ..., Tn}&lt;/code&gt;&quot;; otherwise, if &lt;code&gt;Elements&lt;/code&gt; is &lt;code&gt;any_size&lt;/code&gt;, it represents &quot;&lt;code&gt;tuple()&lt;/code&gt;&quot;.</source>
          <target state="translated">创建一个抽象类型元组。如果 &lt;code&gt;Elements&lt;/code&gt; 为 &lt;code&gt;[T1, ..., Tn]&lt;/code&gt; ，则结果表示为&amp;ldquo; &lt;code&gt;{T1, ..., Tn}&lt;/code&gt; &amp;rdquo;；否则，如果 &lt;code&gt;Elements&lt;/code&gt; 为 &lt;code&gt;any_size&lt;/code&gt; ，则表示&amp;ldquo; &lt;code&gt;tuple()&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="30f7f6abbb972c03249bf304beca71aca0d5cfba" translate="yes" xml:space="preserve">
          <source>Creates an abstract type union. If &lt;code&gt;Types&lt;/code&gt; is &lt;code&gt;[T1, ..., Tn]&lt;/code&gt;, the result represents &quot;&lt;code&gt;T1 | ... | Tn&lt;/code&gt;&quot;.</source>
          <target state="translated">创建一个抽象类型联合。如果 &lt;code&gt;Types&lt;/code&gt; 为 &lt;code&gt;[T1, ..., Tn]&lt;/code&gt; ，则结果表示&amp;ldquo; &lt;code&gt;T1 | ... | Tn&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="c67c91f11f9b521865759f85fe172a212034b353" translate="yes" xml:space="preserve">
          <source>Creates an abstract typed record field specification. The result represents &quot;&lt;code&gt;Field :: Type&lt;/code&gt;&quot;.</source>
          <target state="translated">创建抽象类型的记录字段规范。结果表示&amp;ldquo; &lt;code&gt;Field :: Type&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="05e4740343800b739ac94e145ebe249dd3caadbc" translate="yes" xml:space="preserve">
          <source>Creates an abstract universal pattern (&quot;&lt;code&gt;_&lt;/code&gt;&quot;). The lexical representation is a single underscore character. Note that this is &lt;strong&gt;not&lt;/strong&gt; a variable, lexically speaking.</source>
          <target state="translated">创建一个抽象的通用模式（&amp;ldquo; &lt;code&gt;_&lt;/code&gt; &amp;rdquo;）。词汇表示形式是单个下划线字符。请注意，从词法上来讲，这&lt;strong&gt;不是&lt;/strong&gt;变量。</target>
        </trans-unit>
        <trans-unit id="bcde5e9c4cf46772e5d81718da0e6f591561baed" translate="yes" xml:space="preserve">
          <source>Creates an abstract user type. If &lt;code&gt;Arguments&lt;/code&gt; is &lt;code&gt;[T1, ..., Tn]&lt;/code&gt;, the result represents &quot;&lt;code&gt;TypeName(T1, ...Tn)&lt;/code&gt;&quot;.</source>
          <target state="translated">创建抽象用户类型。如果 &lt;code&gt;Arguments&lt;/code&gt; 是 &lt;code&gt;[T1, ..., Tn]&lt;/code&gt; ，则结果表示&amp;ldquo; &lt;code&gt;TypeName(T1, ...Tn)&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="0f7f583484cf1f65d6dee0b70d67372dc62cff68" translate="yes" xml:space="preserve">
          <source>Creates an abstract value list. If &lt;code&gt;Elements&lt;/code&gt; is &lt;code&gt;[E1, ..., En]&lt;/code&gt;, the result represents &quot;&lt;code&gt;&amp;lt;E1, ..., En&amp;gt;&lt;/code&gt;&quot;.</source>
          <target state="translated">创建一个抽象值列表。如果 &lt;code&gt;Elements&lt;/code&gt; 为 &lt;code&gt;[E1, ..., En]&lt;/code&gt; ，则结果表示&amp;ldquo; &lt;code&gt;&amp;lt;E1, ..., En&amp;gt;&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="9fc0ebd5fb3d924104140985a3bcaeec3e045998" translate="yes" xml:space="preserve">
          <source>Creates an abstract variable with the given name. &lt;code&gt;Name&lt;/code&gt; may be any atom or string that represents a lexically valid variable name, but &lt;strong&gt;not&lt;/strong&gt; a single underscore character; see &lt;code&gt;&lt;a href=&quot;#underscore-0&quot;&gt;underscore/0&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">用给定名称创建一个抽象变量。 &lt;code&gt;Name&lt;/code&gt; 可以是表示词汇上有效的变量名称的任何原子或字符串，但&lt;strong&gt;不能&lt;/strong&gt;是单个下划线字符；参见 &lt;code&gt;&lt;a href=&quot;#underscore-0&quot;&gt;underscore/0&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="10ef172d2f14b38544ea1a3332803b0e13af097b" translate="yes" xml:space="preserve">
          <source>Creates an abstract variable. A variable is identified by its name, given by the &lt;code&gt;Name&lt;/code&gt; parameter.</source>
          <target state="translated">创建一个抽象变量。变量由其名称标识，该名称由 &lt;code&gt;Name&lt;/code&gt; 参数给出。</target>
        </trans-unit>
        <trans-unit id="c51c1fb70fbc9a3d5b73ac5924eaf0411ab0bbdd" translate="yes" xml:space="preserve">
          <source>Creates an abstract warning marker. The result represents an occurrence of a possible problem in the source code, with an associated Erlang I/O ErrorInfo structure given by &lt;code&gt;Error&lt;/code&gt; (see module &lt;code&gt;io(3)&lt;/code&gt; for details). Warning markers are regarded as source code forms, but have no defined lexical form.</source>
          <target state="translated">创建一个抽象警告标记。结果表示源代码中可能发生了问题，并带有由 &lt;code&gt;Error&lt;/code&gt; 提供的关联的Erlang I / O ErrorInfo结构 &lt;code&gt;io(3)&lt;/code&gt; 有关详细信息，请参见模块io（3））。警告标记被视为源代码形式，但没有定义的词汇形式。</target>
        </trans-unit>
        <trans-unit id="e5041da5711232189970a68506bce9207378325e" translate="yes" xml:space="preserve">
          <source>Creates an an abstract clause. If &lt;code&gt;Patterns&lt;/code&gt; is &lt;code&gt;[P1, ..., Pn]&lt;/code&gt;, the result represents &quot;&lt;code&gt;&amp;lt;P1, ..., Pn&amp;gt; when Guard -&amp;gt; Body&lt;/code&gt;&quot;.</source>
          <target state="translated">创建一个抽象子句。如果 &lt;code&gt;Patterns&lt;/code&gt; 为 &lt;code&gt;[P1, ..., Pn]&lt;/code&gt; ，则结果表示&amp;ldquo; &lt;code&gt;&amp;lt;P1, ..., Pn&amp;gt; when Guard -&amp;gt; Body&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="c06389832f0f750abaaa40194d233c64f5377bf1" translate="yes" xml:space="preserve">
          <source>Creates an atom term from the &lt;code&gt;NULL&lt;/code&gt;-terminated C-string &lt;code&gt;name&lt;/code&gt; with ISO Latin-1 encoding. If the length of &lt;code&gt;name&lt;/code&gt; exceeds the maximum length allowed for an atom (255 characters), &lt;code&gt;enif_make_atom&lt;/code&gt; invokes &lt;code&gt;&lt;a href=&quot;#enif_make_badarg&quot;&gt; enif_make_badarg&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">使用ISO Latin-1编码从以 &lt;code&gt;NULL&lt;/code&gt; 终止的C字符串 &lt;code&gt;name&lt;/code&gt; 创建一个原子项。如果 &lt;code&gt;name&lt;/code&gt; 的长度超过一个原子允许的最大长度（255个字符），则 &lt;code&gt;enif_make_atom&lt;/code&gt; 调用 &lt;code&gt;&lt;a href=&quot;#enif_make_badarg&quot;&gt; enif_make_badarg&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="492f8b473cc7bfc11bc1a8bcfb3f18170e7f0353" translate="yes" xml:space="preserve">
          <source>Creates an atom term from the &lt;code&gt;NULL&lt;/code&gt;-terminated C-string &lt;code&gt;name&lt;/code&gt; with ISO Latin-1 encoding. If the length of &lt;code&gt;name&lt;/code&gt; exceeds the maximum length allowed for an atom (255 characters), &lt;code&gt;enif_make_atom&lt;/code&gt; invokes &lt;code&gt;&lt;a href=&quot;#enif_make_badarg&quot;&gt;enif_make_badarg&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">使用ISO Latin-1编码从以 &lt;code&gt;NULL&lt;/code&gt; 终止的C字符串 &lt;code&gt;name&lt;/code&gt; 创建一个原子项。如果 &lt;code&gt;name&lt;/code&gt; 的长度超过一个原子允许的最大长度（255个字符），则 &lt;code&gt;enif_make_atom&lt;/code&gt; 调用 &lt;code&gt;&lt;a href=&quot;#enif_make_badarg&quot;&gt;enif_make_badarg&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d890021d23ae70b2da3f4d414d0d3909bb885262" translate="yes" xml:space="preserve">
          <source>Creates an atom.</source>
          <target state="translated">创建一个原子。</target>
        </trans-unit>
        <trans-unit id="4eeb3c69485a53b007fbd1974f35761a85d73e3e" translate="yes" xml:space="preserve">
          <source>Creates an element of &lt;code id=&quot;from_term&quot;&gt;&lt;a href=&quot;#sets_definition&quot;&gt;Sets&lt;/a&gt;&lt;/code&gt; by traversing term &lt;code&gt;Term&lt;/code&gt;, sorting lists, removing duplicates, and deriving or verifying a &lt;code&gt;&lt;a href=&quot;#valid_type&quot;&gt;valid type&lt;/a&gt;&lt;/code&gt; for the so obtained external set. An explicitly specified &lt;code&gt;&lt;a href=&quot;#type&quot;&gt;type&lt;/a&gt;&lt;/code&gt;&lt;code&gt;Type&lt;/code&gt; can be used to limit the depth of the traversal; an atomic type stops the traversal, as shown by the following example where &lt;code&gt;&quot;foo&quot;&lt;/code&gt; and &lt;code&gt;{&quot;foo&quot;}&lt;/code&gt; are left unmodified:</source>
          <target state="translated">通过遍历术语 &lt;code&gt;Term&lt;/code&gt; ，对列表进行排序，删除重复项以及为如此获得的外部集合派生或验证 &lt;code&gt;&lt;a href=&quot;#valid_type&quot;&gt;valid type&lt;/a&gt;&lt;/code&gt; 来创建 &lt;code id=&quot;from_term&quot;&gt;&lt;a href=&quot;#sets_definition&quot;&gt;Sets&lt;/a&gt;&lt;/code&gt; 的元素。明确指定的 &lt;code&gt;&lt;a href=&quot;#type&quot;&gt;type&lt;/a&gt;&lt;/code&gt; &lt;code&gt;Type&lt;/code&gt; 可以被用来限制遍历的深度;原子类型将停止遍历，如以下示例所示，其中 &lt;code&gt;&quot;foo&quot;&lt;/code&gt; 和 &lt;code&gt;{&quot;foo&quot;}&lt;/code&gt; 保持不变：</target>
        </trans-unit>
        <trans-unit id="2ad4a29a2c901455a1d8003f3bbfce2d0c81764e" translate="yes" xml:space="preserve">
          <source>Creates an endpoint (socket) for communication.</source>
          <target state="translated">创建一个用于通信的端点(socket)。</target>
        </trans-unit>
        <trans-unit id="24f0e8c1230fcfe12e4014c4084e77b36ac37da5" translate="yes" xml:space="preserve">
          <source>Creates an error exception with the term &lt;code&gt;reason&lt;/code&gt; to be returned from a NIF, and associates it with environment &lt;code&gt;env&lt;/code&gt;. Once a NIF or any function it calls invokes &lt;code&gt;enif_raise_exception&lt;/code&gt;, the runtime ensures that the exception it creates is raised when the NIF returns, even if the NIF attempts to return a non-exception term instead.</source>
          <target state="translated">创建一个错误异常，其中包含要从NIF返回的术语&amp;ldquo; &lt;code&gt;reason&lt;/code&gt; ，并将其与环境 &lt;code&gt;env&lt;/code&gt; 关联。一旦NIF或它调用的任何函数调用 &lt;code&gt;enif_raise_exception&lt;/code&gt; ，运行时就会确保在NIF返回时引发它创建的异常，即使NIF尝试返回非异常项也是如此。</target>
        </trans-unit>
        <trans-unit id="af4234d40cf1cc497ac9c6fede70ffe792bb8897" translate="yes" xml:space="preserve">
          <source>Creates an escript from a list of sections. The sections can be specified in any order. An escript begins with an optional &lt;code id=&quot;create_2&quot;&gt;Header&lt;/code&gt; followed by a mandatory &lt;code&gt;Body&lt;/code&gt;. If the header is present, it does always begin with a &lt;code&gt;shebang&lt;/code&gt;, possibly followed by a &lt;code&gt;comment&lt;/code&gt; and &lt;code&gt;emu_args&lt;/code&gt;. The &lt;code&gt;shebang&lt;/code&gt; defaults to &lt;code&gt;&quot;/usr/bin/env escript&quot;&lt;/code&gt;. The &lt;code&gt;comment&lt;/code&gt; defaults to &lt;code&gt;&quot;This is an -*- erlang -*- file&quot;&lt;/code&gt;. The created escript can either be returned as a binary or written to file.</source>
          <target state="translated">从部分列表创建脚本。可以按任何顺序指定这些部分。一个escript以一个可选的 &lt;code id=&quot;create_2&quot;&gt;Header&lt;/code&gt; 开头，后跟一个强制性的 &lt;code&gt;Body&lt;/code&gt; 。如果存在标头，则始终始终以 &lt;code&gt;shebang&lt;/code&gt; 开头，可能后跟 &lt;code&gt;comment&lt;/code&gt; 和 &lt;code&gt;emu_args&lt;/code&gt; 。在 &lt;code&gt;shebang&lt;/code&gt; 默认为 &lt;code&gt;&quot;/usr/bin/env escript&quot;&lt;/code&gt; 。该 &lt;code&gt;comment&lt;/code&gt; 默认为 &lt;code&gt;&quot;This is an -*- erlang -*- file&quot;&lt;/code&gt; 。创建的脚本可以以二进制形式返回或写入文件。</target>
        </trans-unit>
        <trans-unit id="9c833168da1cb78652eb4f49974bba9bd5111968" translate="yes" xml:space="preserve">
          <source>Creates an escript from a list of sections. The sections can be specified in any order. An escript begins with an optional &lt;code&gt;Header&lt;/code&gt; followed by a mandatory &lt;code&gt;Body&lt;/code&gt;. If the header is present, it does always begin with a &lt;code&gt;shebang&lt;/code&gt;, possibly followed by a &lt;code&gt;comment&lt;/code&gt; and &lt;code&gt;emu_args&lt;/code&gt;. The &lt;code&gt;shebang&lt;/code&gt; defaults to &lt;code&gt;&quot;/usr/bin/env escript&quot;&lt;/code&gt;. The &lt;code&gt;comment&lt;/code&gt; defaults to &lt;code&gt;&quot;This is an -*- erlang -*- file&quot;&lt;/code&gt;. The created escript can either be returned as a binary or written to file.</source>
          <target state="translated">从部分列表创建脚本。可以按任何顺序指定这些部分。一个escript以一个可选的 &lt;code&gt;Header&lt;/code&gt; 开头，后跟一个强制性的 &lt;code&gt;Body&lt;/code&gt; 。如果存在标头，则始终始终以 &lt;code&gt;shebang&lt;/code&gt; 开头，可能后跟 &lt;code&gt;comment&lt;/code&gt; 和 &lt;code&gt;emu_args&lt;/code&gt; 。在 &lt;code&gt;shebang&lt;/code&gt; 默认为 &lt;code&gt;&quot;/usr/bin/env escript&quot;&lt;/code&gt; 。该 &lt;code&gt;comment&lt;/code&gt; 默认为 &lt;code&gt;&quot;This is an -*- erlang -*- file&quot;&lt;/code&gt; 。创建的脚本可以以二进制形式返回或写入文件。</target>
        </trans-unit>
        <trans-unit id="3d173fe0f7759feb7dc2bbed992255535a92f8be" translate="yes" xml:space="preserve">
          <source>Creates an event manager process as part of a supervision tree. The function is to be called, directly or indirectly, by the supervisor. For example, it ensures that the event manager is linked to the supervisor.</source>
          <target state="translated">创建一个事件管理器流程作为监督树的一部分。该函数要被监督者直接或间接调用。例如,它确保事件管理器与监督者相连。</target>
        </trans-unit>
        <trans-unit id="1c90f534131cc174b3206dd2e139733568eb24bb" translate="yes" xml:space="preserve">
          <source>Creates an exported function &lt;code&gt;test()&lt;/code&gt; (unless testing is turned off, and the module does not already contain a test() function), that can be used to run all the unit tests defined in the module</source>
          <target state="translated">创建一个导出的函数 &lt;code&gt;test()&lt;/code&gt; （除非关闭了测试，并且该模块尚未包含test（）函数），该函数可用于运行模块中定义的所有单元测试</target>
        </trans-unit>
        <trans-unit id="996175fe2aeef93a0d528b7948d396ddc999e67c" translate="yes" xml:space="preserve">
          <source>Creates an extendible (non-fixed-size) array.</source>
          <target state="translated">创建一个可扩展的(非固定大小)阵列。</target>
        </trans-unit>
        <trans-unit id="3cd6a9b0734eb4c8fba600849b3ff2876cefafb7" translate="yes" xml:space="preserve">
          <source>Creates an extensible match filter. For example,</source>
          <target state="translated">创建一个可扩展的匹配过滤器。例如:</target>
        </trans-unit>
        <trans-unit id="df710f8aff9b8c868bc0330e5c07e0fcf71259a2" translate="yes" xml:space="preserve">
          <source>Creates an initial &lt;code&gt;RELEASES&lt;/code&gt; file to be used by the release handler. This file must exist to install new releases.</source>
          <target state="translated">创建一个初始 &lt;code&gt;RELEASES&lt;/code&gt; 文件，供发布处理程序使用。该文件必须存在才能安装新版本。</target>
        </trans-unit>
        <trans-unit id="ed88b874a3e515121e7898a3bb9328dddac8e876" translate="yes" xml:space="preserve">
          <source>Creates an integer term from a &lt;code&gt;long int&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;long int&lt;/code&gt; 创建一个整数项。</target>
        </trans-unit>
        <trans-unit id="59f3723b140384fba3baa35447c51ef7d56ac6b9" translate="yes" xml:space="preserve">
          <source>Creates an integer term from a signed 64-bit integer.</source>
          <target state="translated">从一个有符号的64位整数创建一个整数项。</target>
        </trans-unit>
        <trans-unit id="6ee1bbc4f4408f4526c1fe0885cb61f7f3a8a59c" translate="yes" xml:space="preserve">
          <source>Creates an integer term from an &lt;code&gt;unsigned int&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;unsigned int&lt;/code&gt; 创建一个整数项。</target>
        </trans-unit>
        <trans-unit id="82cb1a943b0e6e9fbd368b47ee58826ba75abc28" translate="yes" xml:space="preserve">
          <source>Creates an integer term from an &lt;code&gt;unsigned long int&lt;/code&gt;.</source>
          <target state="translated">根据一个 &lt;code&gt;unsigned long int&lt;/code&gt; 创建一个整数项。</target>
        </trans-unit>
        <trans-unit id="58483ead7c7f33cf6de25f82adfa851b2f7810da" translate="yes" xml:space="preserve">
          <source>Creates an integer term from an unsigned 64-bit integer.</source>
          <target state="translated">从一个无符号的64位整数创建一个整数项。</target>
        </trans-unit>
        <trans-unit id="68bc5a614884cd8500bcca9c15eb422298d688a5" translate="yes" xml:space="preserve">
          <source>Creates an integer term.</source>
          <target state="translated">创建一个整数项。</target>
        </trans-unit>
        <trans-unit id="321828120e52ab0256abf04af1e405775a9f0c86" translate="yes" xml:space="preserve">
          <source>Creates an iterator for the map &lt;code&gt;map&lt;/code&gt; by initializing the structure pointed to by &lt;code&gt;iter&lt;/code&gt;. Argument &lt;code&gt;entry&lt;/code&gt; determines the start position of the iterator: &lt;code&gt;ERL_NIF_MAP_ITERATOR_FIRST&lt;/code&gt; or &lt;code&gt;ERL_NIF_MAP_ITERATOR_LAST&lt;/code&gt;.</source>
          <target state="translated">通过初始化 &lt;code&gt;iter&lt;/code&gt; 指向的结构为地图 &lt;code&gt;map&lt;/code&gt; 创建迭代器。参数 &lt;code&gt;entry&lt;/code&gt; 确定迭代器的开始位置： &lt;code&gt;ERL_NIF_MAP_ITERATOR_FIRST&lt;/code&gt; 或 &lt;code&gt;ERL_NIF_MAP_ITERATOR_LAST&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="879756ef285a8987efdb7f7c21fd4f435c340061" translate="yes" xml:space="preserve">
          <source>Creates an old Erlang reference, with only 18 bits - use &lt;code&gt;erl_mk_long_ref&lt;/code&gt; instead.</source>
          <target state="translated">创建仅18位的旧Erlang引用-改用 &lt;code&gt;erl_mk_long_ref&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="40a5d9d2fbb5d3e467d56a186e5444d123f9b950" translate="yes" xml:space="preserve">
          <source>Creates an opaque handle to a memory-managed resource object obtained by &lt;code&gt;&lt;a href=&quot;#enif_alloc_resource&quot;&gt; enif_alloc_resource&lt;/a&gt;&lt;/code&gt;. No ownership transfer is done, as the resource object still needs to be released by &lt;code&gt;&lt;a href=&quot;#enif_release_resource&quot;&gt; enif_release_resource&lt;/a&gt;&lt;/code&gt;. However, notice that the call to &lt;code&gt;enif_release_resource&lt;/code&gt; can occur immediately after obtaining the term from &lt;code&gt;enif_make_resource&lt;/code&gt;, in which case the resource object is deallocated when the term is garbage collected. For more details, see the &lt;code&gt;&lt;a href=&quot;#enif_resource_example&quot;&gt;example of creating and returning a resource object&lt;/a&gt;&lt;/code&gt; in the User's Guide.</source>
          <target state="translated">创建一个由 &lt;code&gt;&lt;a href=&quot;#enif_alloc_resource&quot;&gt; enif_alloc_resource&lt;/a&gt;&lt;/code&gt; 获得的内存管理资源对象的不透明句柄。没有所有权转移完成，因为资源对象仍需要由 &lt;code&gt;&lt;a href=&quot;#enif_release_resource&quot;&gt; enif_release_resource&lt;/a&gt;&lt;/code&gt; 释放。但是，请注意，从 &lt;code&gt;enif_make_resource&lt;/code&gt; 获得术语后，可以立即进行对 &lt;code&gt;enif_release_resource&lt;/code&gt; 的调用，在这种情况下，当垃圾回收术语时，资源对象将被释放。有关更多详细信息，请参见《用户指南》中 &lt;code&gt;&lt;a href=&quot;#enif_resource_example&quot;&gt;example of creating and returning a resource object&lt;/a&gt;&lt;/code&gt; 的示例。</target>
        </trans-unit>
        <trans-unit id="1398e6d518802b854f857855606e54bf791750f3" translate="yes" xml:space="preserve">
          <source>Creates an opaque handle to a memory-managed resource object obtained by &lt;code&gt;&lt;a href=&quot;#enif_alloc_resource&quot;&gt;enif_alloc_resource&lt;/a&gt;&lt;/code&gt;. No ownership transfer is done, as the resource object still needs to be released by &lt;code&gt;&lt;a href=&quot;#enif_release_resource&quot;&gt;enif_release_resource&lt;/a&gt;&lt;/code&gt;. However, notice that the call to &lt;code&gt;enif_release_resource&lt;/code&gt; can occur immediately after obtaining the term from &lt;code&gt;enif_make_resource&lt;/code&gt;, in which case the resource object is deallocated when the term is garbage collected. For more details, see the &lt;code&gt;&lt;a href=&quot;#enif_resource_example&quot;&gt;example of creating and returning a resource object&lt;/a&gt;&lt;/code&gt; in the User's Guide.</source>
          <target state="translated">为由 &lt;code&gt;&lt;a href=&quot;#enif_alloc_resource&quot;&gt;enif_alloc_resource&lt;/a&gt;&lt;/code&gt; 获得的内存管理资源对象创建一个不透明句柄。由于所有权对象仍需要由 &lt;code&gt;&lt;a href=&quot;#enif_release_resource&quot;&gt;enif_release_resource&lt;/a&gt;&lt;/code&gt; 释放，因此不会进行所有权转移。但是，请注意，从 &lt;code&gt;enif_make_resource&lt;/code&gt; 获得术语后，可以立即进行 &lt;code&gt;enif_release_resource&lt;/code&gt; 的调用，在这种情况下，当垃圾项被回收时，资源对象将被释放。有关更多详细信息，请参见《用户指南》中 &lt;code&gt;&lt;a href=&quot;#enif_resource_example&quot;&gt;example of creating and returning a resource object&lt;/a&gt;&lt;/code&gt; 的示例。</target>
        </trans-unit>
        <trans-unit id="e0c1f1bc138ba0aedb26a0ac2e09891550938ee2" translate="yes" xml:space="preserve">
          <source>Creates an ordinary list containing the elements of array &lt;code&gt;arr&lt;/code&gt; of length &lt;code&gt;cnt&lt;/code&gt;.</source>
          <target state="translated">创建一个普通列表，其中包含长度为 &lt;code&gt;cnt&lt;/code&gt; 的数组 &lt;code&gt;arr&lt;/code&gt; 的元素。</target>
        </trans-unit>
        <trans-unit id="424838f33b10028179989c2466495e43158071b0" translate="yes" xml:space="preserve">
          <source>Creates an ordinary list term of length &lt;code&gt;cnt&lt;/code&gt;. Expects &lt;code&gt;cnt&lt;/code&gt; number of arguments (after &lt;code&gt;cnt&lt;/code&gt;) of type &lt;code&gt;ERL_NIF_TERM&lt;/code&gt; as the elements of the list.</source>
          <target state="translated">创建一个长度为 &lt;code&gt;cnt&lt;/code&gt; 的普通列表项。预计 &lt;code&gt;cnt&lt;/code&gt; 数量的参数（后 &lt;code&gt;cnt&lt;/code&gt; 类型） &lt;code&gt;ERL_NIF_TERM&lt;/code&gt; 作为列表的元素。</target>
        </trans-unit>
        <trans-unit id="ec00fc4d844910f87529878dd3f50bb3250751fc" translate="yes" xml:space="preserve">
          <source>Creates an ordinary list term with length indicated by the function name. Prefer these functions (macros) over the variadic &lt;code&gt;enif_make_list&lt;/code&gt; to get a compile-time error if the number of arguments does not match.</source>
          <target state="translated">创建一个普通列表项，其长度由函数名称指示。如果参数数量不匹配，则 &lt;code&gt;enif_make_list&lt;/code&gt; 这些函数（宏）而不是可变的enif_make_list以获得编译时错误。</target>
        </trans-unit>
        <trans-unit id="d42f110da5befd264b5c717621184c5829a7f103" translate="yes" xml:space="preserve">
          <source>Creates an rwlock and returns a pointer to it.</source>
          <target state="translated">创建一个rwlock并返回指向它的指针。</target>
        </trans-unit>
        <trans-unit id="08ad5cdecff62fd69686f7dc811751af1ed7c10e" translate="yes" xml:space="preserve">
          <source>Creates an unbound Erlang variable. The variable can later be bound through pattern matching or assignment.</source>
          <target state="translated">创建一个未绑定的Erlang变量。以后可以通过模式匹配或赋值来绑定这个变量。</target>
        </trans-unit>
        <trans-unit id="9ae93852bb589aacdc0794cd6528853e88f7a6ef" translate="yes" xml:space="preserve">
          <source>Creates and listens on socket with the specified name.</source>
          <target state="translated">创建并监听指定名称的套接字。</target>
        </trans-unit>
        <trans-unit id="05aa7c506fab05715d5421a38b5678d627262f3f" translate="yes" xml:space="preserve">
          <source>Creates and returns a copy of the Erlang term &lt;code&gt;term&lt;/code&gt;.</source>
          <target state="translated">创建并返回Erlang术语 &lt;code&gt;term&lt;/code&gt; 的副本。</target>
        </trans-unit>
        <trans-unit id="541b49d95c7c98f75efa71ddefbb84f83a17d0d0" translate="yes" xml:space="preserve">
          <source>Creates and returns an empty Erlang list. Notice that &lt;code&gt;NULL&lt;/code&gt; is not used to represent an empty list; Use this function instead.</source>
          <target state="translated">创建并返回一个空的Erlang列表。注意， &lt;code&gt;NULL&lt;/code&gt; 不用于表示一个空列表。请改用此功能。</target>
        </trans-unit>
        <trans-unit id="75748c9686ac2a763485bd0ca048c9b400674342" translate="yes" xml:space="preserve">
          <source>Creates breakpoints at the first line of every clause of function &lt;code&gt;Module:Name/Arity&lt;/code&gt;.</source>
          <target state="translated">在功能 &lt;code&gt;Module:Name/Arity&lt;/code&gt; 的每个子句的第一行创建断点。</target>
        </trans-unit>
        <trans-unit id="323578245e4970070c46439f663622d62dab311c" translate="yes" xml:space="preserve">
          <source>Creates certificate configuration(s) consisting of certificate and its private key plus CA certificate bundle, for a client and a server, intended to facilitate automated testing of applications using X509-certificates, often through SSL/TLS. The test data can be used when you have control over both the client and the server in a test scenario.</source>
          <target state="translated">为客户端和服务器创建证书配置,包括证书及其私钥和 CA 证书包,目的是方便使用 X509 证书(通常通过 SSL/TLS)对应用程序进行自动测试。当您在测试场景中对客户端和服务器都有控制权时,可以使用测试数据。</target>
        </trans-unit>
        <trans-unit id="8a5bb60284b6d9b200a3d5c6a903d56a7949b0b3" translate="yes" xml:space="preserve">
          <source>Creates monitor between the current process and a port identified by &lt;code&gt;Item&lt;/code&gt;, which can be a &lt;code&gt;port()&lt;/code&gt; (only local), an atom &lt;code&gt;RegisteredName&lt;/code&gt; or a tuple &lt;code&gt;{RegisteredName, Node}&lt;/code&gt; for a registered port, located on this node. Note, that attempt to monitor a remote port will result in &lt;code&gt;badarg&lt;/code&gt;.</source>
          <target state="translated">在当前进程和 &lt;code&gt;Item&lt;/code&gt; 标识的端口之间创建监视器，该端口可以是 &lt;code&gt;port()&lt;/code&gt; （仅限本地），原子 &lt;code&gt;RegisteredName&lt;/code&gt; 或位于该节点上的已注册端口的元组 &lt;code&gt;{RegisteredName, Node}&lt;/code&gt; 。请注意，尝试监视远程端口将导致 &lt;code&gt;badarg&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="54e51ca9f5d895d929b7864f1a5bdd9ac748d14c" translate="yes" xml:space="preserve">
          <source>Creates monitor between the current process and another process identified by &lt;code&gt;Item&lt;/code&gt;, which can be a &lt;code&gt;pid()&lt;/code&gt; (local or remote), an atom &lt;code&gt;RegisteredName&lt;/code&gt; or a tuple &lt;code&gt;{RegisteredName, Node}&lt;/code&gt; for a registered process, located elsewhere.</source>
          <target state="translated">在当前进程和 &lt;code&gt;Item&lt;/code&gt; 标识的另一个进程之间创建监视器，该进程可以是 &lt;code&gt;pid()&lt;/code&gt; （本地或远程），原子 &lt;code&gt;RegisteredName&lt;/code&gt; 或用于已注册进程的元组 &lt;code&gt;{RegisteredName, Node}&lt;/code&gt; ，位于其他位置。</target>
        </trans-unit>
        <trans-unit id="cb53b88201cfb3bd06e7053454da2720554a9474" translate="yes" xml:space="preserve">
          <source>Creates or extends a configuration file, which can be used for restoring a specific configuration later.</source>
          <target state="translated">创建或扩展一个配置文件,该文件可用于以后恢复特定的配置。</target>
        </trans-unit>
        <trans-unit id="31646868d5cdc972e8aef50b6bf9211b0d7b8924" translate="yes" xml:space="preserve">
          <source>Creates or takes over a resource type identified by the string &lt;code&gt;name&lt;/code&gt; and gives it the destructor function pointed to by &lt;code&gt;&lt;a href=&quot;#ErlNifResourceDtor&quot;&gt;dtor&lt;/a&gt;&lt;/code&gt;. Argument &lt;code&gt;flags&lt;/code&gt; can have the following values:</source>
          <target state="translated">创建或接管由字符串 &lt;code&gt;name&lt;/code&gt; 标识的资源类型，并将其赋予 &lt;code&gt;&lt;a href=&quot;#ErlNifResourceDtor&quot;&gt;dtor&lt;/a&gt;&lt;/code&gt; 指向的析构函数。参数 &lt;code&gt;flags&lt;/code&gt; 可以具有以下值：</target>
        </trans-unit>
        <trans-unit id="d7dda1b4beebacf30c8aa2fe84ee80b222943599" translate="yes" xml:space="preserve">
          <source>Creates state object for &lt;code&gt;random number generation&lt;/code&gt;, in order to generate cryptographically strong random numbers (based on OpenSSL's &lt;code&gt;BN_rand_range&lt;/code&gt;), and saves it in the process dictionary before returning it as well. See also &lt;code&gt;rand:seed/1&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#rand_seed_s-0&quot;&gt;rand_seed_s/0&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">创建用于 &lt;code&gt;random number generation&lt;/code&gt; 状态对象，以便生成具有加密强度的随机数（基于OpenSSL的 &lt;code&gt;BN_rand_range&lt;/code&gt; ），并将其保存在进程字典中，然后再返回它。另请参阅 &lt;code&gt;rand:seed/1&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;#rand_seed_s-0&quot;&gt;rand_seed_s/0&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="43bab212ce8b7603cd7c220b5681c1069e65646a" translate="yes" xml:space="preserve">
          <source>Creates state object for &lt;code&gt;random number generation&lt;/code&gt;, in order to generate cryptographically strong random numbers, and saves it in the process dictionary before returning it as well. See also &lt;code&gt;rand:seed/1&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#rand_seed_alg_s-1&quot;&gt;rand_seed_alg_s/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">创建用于 &lt;code&gt;random number generation&lt;/code&gt; 状态对象，以生成具有加密强度的随机数，并将其保存在进程字典中，然后再返回它。另请参见 &lt;code&gt;rand:seed/1&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;#rand_seed_alg_s-1&quot;&gt;rand_seed_alg_s/1&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1131d9cff498b627d19dca18fed2560e3534fcf7" translate="yes" xml:space="preserve">
          <source>Creates state object for &lt;code&gt;random number generation&lt;/code&gt;, in order to generate cryptographically strong random numbers. See also &lt;code&gt;rand:seed/1&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#rand_seed_alg_s-1&quot;&gt;rand_seed_alg_s/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">创建状态对象以 &lt;code&gt;random number generation&lt;/code&gt; ，以便生成具有加密强度的随机数。另请参阅 &lt;code&gt;rand:seed/1&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;#rand_seed_alg_s-1&quot;&gt;rand_seed_alg_s/1&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3e82881ca2e0b49898eecacd0d7604ef4a6914de" translate="yes" xml:space="preserve">
          <source>Creates state object for &lt;code&gt;random number generation&lt;/code&gt;, in order to generate cryptographically strongly random numbers (based on OpenSSL's &lt;code&gt;BN_rand_range&lt;/code&gt;). See also &lt;code&gt;rand:seed_s/1&lt;/code&gt;.</source>
          <target state="translated">创建状态对象以 &lt;code&gt;random number generation&lt;/code&gt; ，以便生成基于密码的强随机数（基于OpenSSL的 &lt;code&gt;BN_rand_range&lt;/code&gt; ）。另请参阅 &lt;code&gt;rand:seed_s/1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6888253e0b7a145a185b3ba4f096d285f6876f19" translate="yes" xml:space="preserve">
          <source>Creates state object for &lt;code&gt;random number generation&lt;/code&gt;, in order to generate cryptographically strongly random numbers. See also &lt;code&gt;rand:seed_s/1&lt;/code&gt;.</source>
          <target state="translated">创建状态对象以 &lt;code&gt;random number generation&lt;/code&gt; ，以便生成密码学上高度随机的数。另请参阅 &lt;code&gt;rand:seed_s/1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2ec20a9c0aeef53fc162b5af5f934121d0f49bd4" translate="yes" xml:space="preserve">
          <source>Creates stub module source files corresponding to the given stub descriptors. The returned value is the list of names of the created files. See &lt;code&gt;merge_sources/3&lt;/code&gt; for more information about stub descriptors.</source>
          <target state="translated">创建与给定的存根描述符相对应的存根模块源文件。返回的值是所创建文件的名称列表。有关存根描述符的更多信息，请参见 &lt;code&gt;merge_sources/3&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5f216c367364fda5c8b1daca48829d78620b9016" translate="yes" xml:space="preserve">
          <source>Creates the &lt;code&gt;&lt;a href=&quot;#function&quot;&gt;function&lt;/a&gt;&lt;/code&gt; that maps each element of set &lt;code&gt;Set&lt;/code&gt; onto &lt;code&gt;AnySet&lt;/code&gt;.</source>
          <target state="translated">创建 &lt;code&gt;&lt;a href=&quot;#function&quot;&gt;function&lt;/a&gt;&lt;/code&gt; 这组中的每个元素映射 &lt;code&gt;Set&lt;/code&gt; 到 &lt;code&gt;AnySet&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e059a51bae21ba25bf1564ab677a430187512486" translate="yes" xml:space="preserve">
          <source>Creates the directory &lt;code&gt;Dir&lt;/code&gt; at the remote server.</source>
          <target state="translated">在远程服务器上创建目录 &lt;code&gt;Dir&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="49c1e26c85443cdd066c1bfc69dbb272040a3e28" translate="yes" xml:space="preserve">
          <source>Creates the directory &lt;code&gt;tmp/bin&lt;/code&gt;.</source>
          <target state="translated">创建目录 &lt;code&gt;tmp/bin&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="29a43abd6d3ef1afa9834431f2aea97b4af3dc21" translate="yes" xml:space="preserve">
          <source>Creates the directory &lt;code&gt;tmp/log&lt;/code&gt;, which is used if the system is started as embedded with the &lt;code&gt;bin/start&lt;/code&gt; script.</source>
          <target state="translated">创建目录 &lt;code&gt;tmp/log&lt;/code&gt; ，如果系统以 &lt;code&gt;bin/start&lt;/code&gt; 脚本嵌入的形式启动，则使用该目录。</target>
        </trans-unit>
        <trans-unit id="1242ba000e579b3f18105ae3515b7c2029bda8b4" translate="yes" xml:space="preserve">
          <source>Creates the file &lt;code&gt;mysystem.tar.gz&lt;/code&gt; by a call to &lt;code&gt;systools:make_tar/2&lt;/code&gt;. That file has the following contents:</source>
          <target state="translated">通过调用 &lt;code&gt;systools:make_tar/2&lt;/code&gt; 创建文件 &lt;code&gt;mysystem.tar.gz&lt;/code&gt; 。该文件具有以下内容：</target>
        </trans-unit>
        <trans-unit id="0dbd27d9c55aa28b1313e1dd14a2bc4e49b1ad90" translate="yes" xml:space="preserve">
          <source>Creates the file &lt;code&gt;tmp/releases/start_erl.data&lt;/code&gt; with the contents &quot;5.10.4 FIRST&quot;. This file is to be passed as data file to the &lt;code&gt;start_erl&lt;/code&gt; script.</source>
          <target state="translated">创建内容为&amp;ldquo; 5.10.4 FIRST&amp;rdquo; 的文件 &lt;code&gt;tmp/releases/start_erl.data&lt;/code&gt; 。该文件将作为数据文件传递到 &lt;code&gt;start_erl&lt;/code&gt; 脚本。</target>
        </trans-unit>
        <trans-unit id="3b4390f853df6f28b17e4ba1ebb9d05dc580b685" translate="yes" xml:space="preserve">
          <source>Creates the necessary objects in the database if they do not exist. It does not destroy any old values.</source>
          <target state="translated">在数据库中创建必要的对象,如果它们不存在。它不会销毁任何旧值。</target>
        </trans-unit>
        <trans-unit id="e3b42fd99b688b644487e5d667423613942d0cb0" translate="yes" xml:space="preserve">
          <source>Creates the temporary directory &lt;code&gt;tmp&lt;/code&gt; and extracts the tar file &lt;code&gt;mysystem.tar.gz&lt;/code&gt; into that directory.</source>
          <target state="translated">创建临时目录 &lt;code&gt;tmp&lt;/code&gt; 并将tar文件 &lt;code&gt;mysystem.tar.gz&lt;/code&gt; 解压缩到该目录中。</target>
        </trans-unit>
        <trans-unit id="e46d8ed007fb666c603ffcda41f6332deeaca0a5" translate="yes" xml:space="preserve">
          <source>Creating Boot Scripts</source>
          <target state="translated">创建启动脚本</target>
        </trans-unit>
        <trans-unit id="c59b056a38d881a7e118a06083a114b38564ad7b" translate="yes" xml:space="preserve">
          <source>Creating Maps</source>
          <target state="translated">创建地图</target>
        </trans-unit>
        <trans-unit id="f4b67855361a8b2e9f81b2db81957703a25e60f9" translate="yes" xml:space="preserve">
          <source>Creating New AVPs</source>
          <target state="translated">创建新的AVP</target>
        </trans-unit>
        <trans-unit id="f21c8568842d0493084955f3cdba40f654290e45" translate="yes" xml:space="preserve">
          <source>Creating New Commands</source>
          <target state="translated">创建新命令</target>
        </trans-unit>
        <trans-unit id="170dc7892cbd89649aafc3ee101e4f79c68d86f1" translate="yes" xml:space="preserve">
          <source>Creating New Diameter Applications</source>
          <target state="translated">创建新的直径应用</target>
        </trans-unit>
        <trans-unit id="6564cfcbd3d733741140bb0ed278c6747abecc97" translate="yes" xml:space="preserve">
          <source>Creating User and Installation Directory</source>
          <target state="translated">创建用户和安装目录</target>
        </trans-unit>
        <trans-unit id="acc159238b6a4c5f95cf17043326dd88d6db4527" translate="yes" xml:space="preserve">
          <source>Creating a cycle in an acyclic graph exits the process with a &lt;code&gt;cyclic&lt;/code&gt; message.</source>
          <target state="translated">在非循环图中创建循环将以 &lt;code&gt;cyclic&lt;/code&gt; 消息退出该过程。</target>
        </trans-unit>
        <trans-unit id="89a689799f55f47bff5aa438aaad99cc9cac6e80" translate="yes" xml:space="preserve">
          <source>Creating a listen port (or similar)</source>
          <target state="translated">创建一个监听端口(或类似的)。</target>
        </trans-unit>
        <trans-unit id="b0dabb9d644563afda7ef75dbf9ddb689a53e1eb" translate="yes" xml:space="preserve">
          <source>Creating a record is best illustrated by an example:</source>
          <target state="translated">创建记录最好的说明就是一个例子。</target>
        </trans-unit>
        <trans-unit id="4fae37d386ff8866a46ba586ca71d2e627fa9120" translate="yes" xml:space="preserve">
          <source>Creating an SSH File from Public-Key Data</source>
          <target state="translated">从公钥数据创建SSH文件</target>
        </trans-unit>
        <trans-unit id="0785396cd17353a334d2c5694f1cf8c789487db7" translate="yes" xml:space="preserve">
          <source>Creating and populating the database tables.</source>
          <target state="translated">创建和填充数据库表。</target>
        </trans-unit>
        <trans-unit id="145ac23a36c43a39cd691c79fd62d7dddf447eb7" translate="yes" xml:space="preserve">
          <source>Creating the Mnesia Table</source>
          <target state="translated">创建Mnesia表</target>
        </trans-unit>
        <trans-unit id="5e25b92d6d20894d4a780032d07e9aaf3726169e" translate="yes" xml:space="preserve">
          <source>Creating timers using &lt;code&gt;erlang:send_after/3&lt;/code&gt; and &lt;code&gt;erlang:start_timer/3&lt;/code&gt; , is much more efficient than using the timers provided by the &lt;code&gt;timer&lt;/code&gt; module in STDLIB. The &lt;code&gt;timer&lt;/code&gt; module uses a separate process to manage the timers. That process can easily become overloaded if many processes create and cancel timers frequently (especially when using the SMP emulator).</source>
          <target state="translated">使用 &lt;code&gt;erlang:send_after/3&lt;/code&gt; 和 &lt;code&gt;erlang:start_timer/3&lt;/code&gt; 创建计时器比使用STDLIB中的 &lt;code&gt;timer&lt;/code&gt; 模块提供的计时器效率更高。所述 &lt;code&gt;timer&lt;/code&gt; 模块使用一个单独的进程来管理定时器。如果许多进程频繁创建和取消计时器（特别是在使用SMP仿真器时），则该进程很容易变得过载。</target>
        </trans-unit>
        <trans-unit id="9b1713e614bfa64505cab74f954065c912e39254" translate="yes" xml:space="preserve">
          <source>Creating timers using &lt;code&gt;erlang:send_after/3&lt;/code&gt; and &lt;code&gt;erlang:start_timer/3&lt;/code&gt;, is much more efficient than using the timers provided by the &lt;code&gt;timer&lt;/code&gt; module in STDLIB. The &lt;code&gt;timer&lt;/code&gt; module uses a separate process to manage the timers. That process can easily become overloaded if many processes create and cancel timers frequently (especially when using the SMP emulator).</source>
          <target state="translated">使用 &lt;code&gt;erlang:send_after/3&lt;/code&gt; 和 &lt;code&gt;erlang:start_timer/3&lt;/code&gt; 创建计时器比使用STDLIB中的 &lt;code&gt;timer&lt;/code&gt; 模块提供的计时器效率更高。所述 &lt;code&gt;timer&lt;/code&gt; 模块使用一个单独的进程来管理定时器。如果许多进程频繁创建和取消计时器（特别是在使用SMP仿真器时），则该进程很容易变得过载。</target>
        </trans-unit>
        <trans-unit id="6aa5b3a37ae261965ea4b5b3df412ec4344bb445" translate="yes" xml:space="preserve">
          <source>Creating user and installation directory</source>
          <target state="translated">创建用户和安装目录</target>
        </trans-unit>
        <trans-unit id="7765e538bf9103295574c09ce7f7fcfef216b64e" translate="yes" xml:space="preserve">
          <source>Creation number, &lt;code&gt;creation&lt;/code&gt;</source>
          <target state="translated">创建编号， &lt;code&gt;creation&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d57e5125b47935cf8ac81241bb717e5fa6ce7626" translate="yes" xml:space="preserve">
          <source>Creation of extra HTML pages for improved overview.</source>
          <target state="translated">创建额外的HTML页面,以改进概述。</target>
        </trans-unit>
        <trans-unit id="d2ed565ee349ff7cd7603b0b26cec60ef4763f9c" translate="yes" xml:space="preserve">
          <source>Creation of match specifications that activates sequential tracing.</source>
          <target state="translated">创建激活顺序跟踪的匹配规格。</target>
        </trans-unit>
        <trans-unit id="8e6d441d9714522bb21b83364fa2a5d00b6eb8ec" translate="yes" xml:space="preserve">
          <source>Cross Building the System</source>
          <target state="translated">交叉构建系统</target>
        </trans-unit>
        <trans-unit id="d28bb00927e29c8f107524a09cae08d7de3f341c" translate="yes" xml:space="preserve">
          <source>Cross reference data are read from BEAM files, so the first step when checking an edited module is to compile it:</source>
          <target state="translated">交叉引用数据是从BEAM文件中读取的,所以在检查编辑好的模块时,第一步就是编译。</target>
        </trans-unit>
        <trans-unit id="e02bbbbb5d915bb1cab92b79ffa9a44140cffe21" translate="yes" xml:space="preserve">
          <source>Crypto Functions</source>
          <target state="translated">加密功能</target>
        </trans-unit>
        <trans-unit id="cea135803a486e2ab3919a67e1639444facffa92" translate="yes" xml:space="preserve">
          <source>Crypto Old API</source>
          <target state="translated">加密旧API</target>
        </trans-unit>
        <trans-unit id="597ce542d5c5a26a702c01810f8144c67ba147bb" translate="yes" xml:space="preserve">
          <source>Crypto operations for open_tar</source>
          <target state="translated">open_tar的加密操作</target>
        </trans-unit>
        <trans-unit id="7c804c33db286558bb634271d46f72ed27582aa7" translate="yes" xml:space="preserve">
          <source>Cuneiform</source>
          <target state="translated">Cuneiform</target>
        </trans-unit>
        <trans-unit id="7fef8120d67245c18d2d3c23d1ec55c168fe972d" translate="yes" xml:space="preserve">
          <source>Currency symbol</source>
          <target state="translated">货币符号</target>
        </trans-unit>
        <trans-unit id="34cc41fbff089733660a5c7a52b02d1836254094" translate="yes" xml:space="preserve">
          <source>Currenlty we use the legacy BIF &lt;code&gt;erlang:load_module&lt;/code&gt; which is now implemented in Erlang by calling the above two functions in sequence. Function &lt;code&gt;finish_loading&lt;/code&gt; is limited to only accepts a list with one module state as we do not yet use the multi module loading feature.</source>
          <target state="translated">当前，我们使用旧的BIF &lt;code&gt;erlang:load_module&lt;/code&gt; ，现在通过依次调用上述两个函数在Erlang中实现。函数 &lt;code&gt;finish_loading&lt;/code&gt; 被限制为仅接受具有一个模块状态的列表，因为我们尚未使用多模块加载功能。</target>
        </trans-unit>
        <trans-unit id="e989237523ba010c0d10879eecc16b45e92314bb" translate="yes" xml:space="preserve">
          <source>Current &lt;code&gt;&lt;a href=&quot;#Erlang_System_Time&quot;&gt;Erlang system time&lt;/a&gt;&lt;/code&gt; is determined by adding the current &lt;code&gt;&lt;a href=&quot;erlang#monotonic_time-0&quot;&gt;Erlang monotonic time&lt;/a&gt;&lt;/code&gt; with current &lt;code&gt;&lt;a href=&quot;erlang#time_offset-0&quot;&gt;time offset&lt;/a&gt;&lt;/code&gt;. The time offset is managed differently depending on which time warp mode you use.</source>
          <target state="translated">当前的 &lt;code&gt;&lt;a href=&quot;#Erlang_System_Time&quot;&gt;Erlang system time&lt;/a&gt;&lt;/code&gt; 是通过将当前的 &lt;code&gt;&lt;a href=&quot;erlang#monotonic_time-0&quot;&gt;Erlang monotonic time&lt;/a&gt;&lt;/code&gt; 与当前 &lt;code&gt;&lt;a href=&quot;erlang#time_offset-0&quot;&gt;time offset&lt;/a&gt;&lt;/code&gt; 相加来确定的。根据使用的时间扭曲模式，对时间偏移进行不同的管理。</target>
        </trans-unit>
        <trans-unit id="2d4f83c5e935e58877a3a6722d680b007abadef7" translate="yes" xml:space="preserve">
          <source>Current and Old Code</source>
          <target state="translated">现行和旧法典</target>
        </trans-unit>
        <trans-unit id="8151c464f241134b4f4d456f4cc69f33b94855fd" translate="yes" xml:space="preserve">
          <source>Current application version.</source>
          <target state="translated">当前应用版本。</target>
        </trans-unit>
        <trans-unit id="cf39aa5e331eed7a6bf834b4ebc28d6ec6f1c853" translate="yes" xml:space="preserve">
          <source>Current receiver window size of the association</source>
          <target state="translated">当前关联的接收窗口大小</target>
        </trans-unit>
        <trans-unit id="721e0705b7675f25ef29c6358e2988e03f1c3289" translate="yes" xml:space="preserve">
          <source>Current release version.</source>
          <target state="translated">目前的版本。</target>
        </trans-unit>
        <trans-unit id="ef2faf8e1221a945fc56ac8e4b776673e42a06e1" translate="yes" xml:space="preserve">
          <source>Current transaction id.</source>
          <target state="translated">当前交易ID:</target>
        </trans-unit>
        <trans-unit id="8048afd676e1d54238c0ef0391a67671b912e602" translate="yes" xml:space="preserve">
          <source>Currently &lt;code&gt;*type&lt;/code&gt; is one of:</source>
          <target state="translated">当前 &lt;code&gt;*type&lt;/code&gt; 是以下之一：</target>
        </trans-unit>
        <trans-unit id="56ac9a2e7b60275674a03750d103a56f2d845c92" translate="yes" xml:space="preserve">
          <source>Currently null characters at the end of the filename will be accepted by primitive file operations. Such filenames are however still documented as invalid. The implementation will also change in the future and reject such filenames.</source>
          <target state="translated">目前,原始文件操作将接受文件名结尾的空字符。然而,这样的文件名仍然被记录为无效。将来的实现也会改变,会拒绝这种文件名。</target>
        </trans-unit>
        <trans-unit id="acd42bbf6c8ec5c400e38290f8728a0c7540dc0c" translate="yes" xml:space="preserve">
          <source>Currently only one option is supported:</source>
          <target state="translated">目前只支持一个选项。</target>
        </trans-unit>
        <trans-unit id="8f17c4623d28ec0d0cfef9cc6eb14d9f6060ac47" translate="yes" xml:space="preserve">
          <source>Currently recognised options are all options recognised by &lt;code&gt;&lt;a href=&quot;#term_to_binary-2&quot;&gt;term_to_binary/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">当前识别的选项是 &lt;code&gt;&lt;a href=&quot;#term_to_binary-2&quot;&gt;term_to_binary/2&lt;/a&gt;&lt;/code&gt; 识别的所有选项。</target>
        </trans-unit>
        <trans-unit id="fd68810dc863c4a7d9b2c793b7f75aaa4ee6d862" translate="yes" xml:space="preserve">
          <source>Currently recognized options:</source>
          <target state="translated">目前公认的备选方案:</target>
        </trans-unit>
        <trans-unit id="a5181790af2ec6a90e131628be0b3852a277b935" translate="yes" xml:space="preserve">
          <source>Currently supported key value pairs</source>
          <target state="translated">目前支持的键值对</target>
        </trans-unit>
        <trans-unit id="158a48fbb6ad39cf031aace300bbe96b2c330142" translate="yes" xml:space="preserve">
          <source>Currently the &lt;code&gt;@&lt;/code&gt; carrier pool is used by default, but this will most likely change.</source>
          <target state="translated">当前默认情况下使用 &lt;code&gt;@&lt;/code&gt; 运营商池，但这很可能会改变。</target>
        </trans-unit>
        <trans-unit id="42c9b0cc2314b1c7df76b62723f58c907cbd131e" translate="yes" xml:space="preserve">
          <source>Currently the only available option is &lt;code&gt;{exception_on_need_dict,boolean()}&lt;/code&gt; which controls whether the function should throw an exception when a preset dictionary is required for decompression. When set to false, a &lt;code&gt;need_dictionary&lt;/code&gt; tuple will be returned instead. See &lt;code&gt;&lt;a href=&quot;#inflateSetDictionary-2&quot;&gt; inflateSetDictionary/2&lt;/a&gt;&lt;/code&gt; for details.</source>
          <target state="translated">当前唯一可用的选项是 &lt;code&gt;{exception_on_need_dict,boolean()}&lt;/code&gt; ，它控制在需要预设字典进行解压缩时函数是否应引发异常。当设置为false时，将返回 &lt;code&gt;need_dictionary&lt;/code&gt; 元组。有关详细信息，请参见 &lt;code&gt;&lt;a href=&quot;#inflateSetDictionary-2&quot;&gt; inflateSetDictionary/2&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="44c9fa252343877c40fdea0565278a68f8944c21" translate="yes" xml:space="preserve">
          <source>Currently the only available option is &lt;code&gt;{exception_on_need_dict,boolean()}&lt;/code&gt; which controls whether the function should throw an exception when a preset dictionary is required for decompression. When set to false, a &lt;code&gt;need_dictionary&lt;/code&gt; tuple will be returned instead. See &lt;code&gt;&lt;a href=&quot;#inflateSetDictionary-2&quot;&gt;inflateSetDictionary/2&lt;/a&gt;&lt;/code&gt; for details.</source>
          <target state="translated">当前唯一可用的选项是 &lt;code&gt;{exception_on_need_dict,boolean()}&lt;/code&gt; ，它控制在需要预设字典进行解压缩时函数是否应引发异常。当设置为false时，将返回 &lt;code&gt;need_dictionary&lt;/code&gt; 元组。有关详细信息，请参见 &lt;code&gt;&lt;a href=&quot;#inflateSetDictionary-2&quot;&gt;inflateSetDictionary/2&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cddb5907e1b47e25c8d0e68d2ed7d4f395d9f17a" translate="yes" xml:space="preserve">
          <source>Currently the sanity check is limited to verifying runtime dependencies found in the &lt;code&gt;.app&lt;/code&gt; files of all applications. More checks will be introduced in the future. This implies that the return type &lt;strong&gt;will&lt;/strong&gt; change in the future.</source>
          <target state="translated">当前，完整性检查仅限于验证在所有应用程序的 &lt;code&gt;.app&lt;/code&gt; 文件中找到的运行时依赖项。将来会引入更多检查。这意味着返回类型&lt;strong&gt;将来会&lt;/strong&gt;更改。</target>
        </trans-unit>
        <trans-unit id="737645ebed390b24709e100a5775b6cedd472f19" translate="yes" xml:space="preserve">
          <source>Currently there are only two meaningful values for &lt;code&gt;flags&lt;/code&gt;: &lt;code&gt;0&lt;/code&gt; means that data is returned in a list, and &lt;code&gt;PORT_CONTROL_FLAG_BINARY&lt;/code&gt; means data is returned as a binary from &lt;code&gt;control&lt;/code&gt;.</source>
          <target state="translated">当前， &lt;code&gt;flags&lt;/code&gt; 只有两个有意义的值： &lt;code&gt;0&lt;/code&gt; 表示在列表中返回数据，而 &lt;code&gt;PORT_CONTROL_FLAG_BINARY&lt;/code&gt; 表示从 &lt;code&gt;control&lt;/code&gt; 作为二进制返回数据。</target>
        </trans-unit>
        <trans-unit id="fb2ff8f97dba7df6390ca52f47c9b879a4000832" translate="yes" xml:space="preserve">
          <source>Currently these processor states are identified as busy:</source>
          <target state="translated">目前这些处理器的状态被确定为忙。</target>
        </trans-unit>
        <trans-unit id="916446c740392d0ed2dafd488094d55ee7d3cce2" translate="yes" xml:space="preserve">
          <source>Currently these processor states are identified as non-busy:</source>
          <target state="translated">目前,这些处理器状态被确定为非繁忙状态。</target>
        </trans-unit>
        <trans-unit id="b85f8e32cb97e7d50798a57c99f2a062a1c32801" translate="yes" xml:space="preserve">
          <source>Currently unused; reserved for future use.</source>
          <target state="translated">目前未使用;留待将来使用。</target>
        </trans-unit>
        <trans-unit id="aaa2fba5f3b84e45c450abdd52ebbc2ea6fac546" translate="yes" xml:space="preserve">
          <source>Currently, &lt;code&gt;Description&lt;/code&gt; looks like this: &lt;code&gt;{ErrorDescription, StackTrace}&lt;/code&gt;. Applications should not depend on the exact contents of &lt;code&gt;Description&lt;/code&gt; as it could change in the future.</source>
          <target state="translated">当前， &lt;code&gt;Description&lt;/code&gt; 看起来像这样： &lt;code&gt;{ErrorDescription, StackTrace}&lt;/code&gt; 。应用程序不应依赖于 &lt;code&gt;Description&lt;/code&gt; 的确切内容，因为它将来可能会更改。</target>
        </trans-unit>
        <trans-unit id="805f1f3d2b5cdce02a09f56980a6492f2ff9d873" translate="yes" xml:space="preserve">
          <source>Currently, the &lt;code&gt;::&lt;/code&gt; constraint (read as &amp;laquo;is a subtype of&amp;raquo;) is the only guard constraint that can be used in the &lt;code&gt;when&lt;/code&gt; part of a &lt;code&gt;-spec&lt;/code&gt; attribute.</source>
          <target state="translated">当前， &lt;code&gt;::&lt;/code&gt; 约束（读作&amp;laquo;是它的子类型）是 &lt;code&gt;-spec&lt;/code&gt; 属性的 &lt;code&gt;when&lt;/code&gt; 部分中可以使用的唯一保护约束。</target>
        </trans-unit>
        <trans-unit id="6b33a3652332788030a08fc93e5cbe5362eca702" translate="yes" xml:space="preserve">
          <source>Currently, the &lt;code&gt;test&lt;/code&gt; functions have many limitations. Essentially, they will mostly work for old specifications based on the 1997 standard for ASN.1, but not for most modern-style applications. Another limitation is that the &lt;code&gt;test&lt;/code&gt; functions may not work if options that change code generations strategies such as the options &lt;code&gt;macro_name_prefix&lt;/code&gt; and &lt;code&gt;record_name_prefix&lt;/code&gt; have been used.</source>
          <target state="translated">当前， &lt;code&gt;test&lt;/code&gt; 功能有许多限制。从本质上讲，它们将大部分适用于基于1997年ASN.1标准的旧规范，但不适用于大多数现代风格的应用程序。另一个限制是，如果使用了更改代码生成策略的选项（如选项 &lt;code&gt;macro_name_prefix&lt;/code&gt; 和 &lt;code&gt;record_name_prefix&lt;/code&gt; ），则 &lt;code&gt;test&lt;/code&gt; 功能可能无法使用。</target>
        </trans-unit>
        <trans-unit id="44933733aa28b6d8531f1ae7ccd8a964ec602e20" translate="yes" xml:space="preserve">
          <source>Currently, the &lt;code&gt;value&lt;/code&gt; function has many limitations. Essentially, it will mostly work for old specifications based on the 1997 standard for ASN.1, but not for most modern-style applications. Another limitation is that the &lt;code&gt;value&lt;/code&gt; function may not work if options that change code generations strategies such as the options &lt;code&gt;macro_name_prefix&lt;/code&gt; and &lt;code&gt;record_name_prefix&lt;/code&gt; have been used.</source>
          <target state="translated">当前， &lt;code&gt;value&lt;/code&gt; 函数具有许多限制。本质上，它主要适用于基于1997年ASN.1标准的旧规范，但不适用于大多数现代风格的应用程序。另一个限制是，如果使用了更改代码生成策略的选项（例如，选项 &lt;code&gt;macro_name_prefix&lt;/code&gt; 和 &lt;code&gt;record_name_prefix&lt;/code&gt; ），则 &lt;code&gt;value&lt;/code&gt; 函数可能不起作用。</target>
        </trans-unit>
        <trans-unit id="f987ed3a963a27fa289e8fd0d8f52a7557bdded2" translate="yes" xml:space="preserve">
          <source>Currently, the internal data structure used is the same as the record-based data structures used traditionally in the Beam compiler.</source>
          <target state="translated">目前,内部使用的数据结构与Beam编译器中传统使用的基于记录的数据结构相同。</target>
        </trans-unit>
        <trans-unit id="9dedb8bdaf7eadde90818d8da0963f5eaacb758f" translate="yes" xml:space="preserve">
          <source>Currently, there is only one type of activity event:</source>
          <target state="translated">目前,活动事件只有一种类型。</target>
        </trans-unit>
        <trans-unit id="72d7c957925632fbd0795c722d5cf79313ad5ffa" translate="yes" xml:space="preserve">
          <source>Currently, this function supports two kinds of &lt;code&gt;LockItem&lt;/code&gt;:</source>
          <target state="translated">当前，此功能支持两种 &lt;code&gt;LockItem&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="7a052b758ff7895ca2a0244f6ec652c1451bb702" translate="yes" xml:space="preserve">
          <source>Currently, two code generation directives are recognized:</source>
          <target state="translated">目前,承认两种代码生成指令。</target>
        </trans-unit>
        <trans-unit id="0c7eadb776ef13c1255dc3e615481ec6ba8e1ec5" translate="yes" xml:space="preserve">
          <source>Curve definition details.</source>
          <target state="translated">曲线定义细节。</target>
        </trans-unit>
        <trans-unit id="c534cb2c111128e5604f4d3c947fbaeb811a9730" translate="yes" xml:space="preserve">
          <source>Customizes the hostname verification of the peer certificate, as different protocols that use TLS such as HTTP or LDAP may want to do it differently, for possible options see &lt;code&gt;public_key:pkix_verify_hostname/3&lt;/code&gt;</source>
          <target state="translated">自定义对等证书的主机名验证，因为使用TLS的不同协议（例如HTTP或LDAP）可能希望做不同的事情，有关可能的选项，请参见 &lt;code&gt;public_key:pkix_verify_hostname/3&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ae741815264dad90e13c7bc07c21c7c5c96ea669" translate="yes" xml:space="preserve">
          <source>Cygwin, the very latest is usually best. Get all the development tools and of course all the basic ditto. Make sure to get jar and also make sure &lt;strong&gt;not&lt;/strong&gt; to install a Cygwin'ish Java, since the Cygwin jar command is used but Sun's Java compiler and virtual machine.</source>
          <target state="translated">Cygwin，最新的通常是最好的。获取所有开发工具，当然还有所有基本同上。确保使用jar，也&lt;strong&gt;不要&lt;/strong&gt;安装Cygwin'ish Java，因为使用了Cygwin jar命令，但使用了Sun的Java编译器和虚拟机。</target>
        </trans-unit>
        <trans-unit id="5330ddfa4df379999c1bfc18ba91ec4dcf678d1d" translate="yes" xml:space="preserve">
          <source>Cypriot</source>
          <target state="translated">Cypriot</target>
        </trans-unit>
        <trans-unit id="1cb0955565a00adf2d4dd0f3ab0976a162bd4df5" translate="yes" xml:space="preserve">
          <source>Cyrillic</source>
          <target state="translated">Cyrillic</target>
        </trans-unit>
        <trans-unit id="21fc8b66c0a4c09f396ed00049bf845395e89b65" translate="yes" xml:space="preserve">
          <source>Cyrillic &quot;I&quot; has usually no lowercase form.</source>
          <target state="translated">西里尔字母 &quot;I &quot;通常没有小写形式。</target>
        </trans-unit>
        <trans-unit id="c980e1393e0a3ddf6199ac5dcf65c0343125a297" translate="yes" xml:space="preserve">
          <source>D. Ungar. Generation scavenging: A non-disruptive high performance storage reclamation algorithm. SIGSOFT Softw. Eng. Notes, 9(3):157&amp;ndash;167, Apr. 1984.</source>
          <target state="translated">D.安加尔 生成清除：一种无中断的高性能存储回收算法。SIGSOFT软件。。笔记，9（3）：157-167，1984年4月。</target>
        </trans-unit>
        <trans-unit id="65057e7a198e3179350e6ed9b0f04982f164814a" translate="yes" xml:space="preserve">
          <source>DATA TYPES</source>
          <target state="translated">数据类型</target>
        </trans-unit>
        <trans-unit id="eb30a0c1b7deea5450760581dfaa4d7500b03e11" translate="yes" xml:space="preserve">
          <source>DER encodes a PKIX x509 certificate or part of such a certificate. This function must be used for encoding certificates or parts of certificates that are decoded/created in the &lt;code&gt;otp&lt;/code&gt; format, whereas for the plain format this function directly calls &lt;code&gt;der_encode/2&lt;/code&gt;.</source>
          <target state="translated">DER对PKIX x509证书或该证书的一部分进行编码。此函数必须用于对证书或以 &lt;code&gt;otp&lt;/code&gt; 格式解码/创建的证书部分进行编码，而对于纯格式，此函数直接调用 &lt;code&gt;der_encode/2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a51c8a7474cf4e4cb63af9b321a04d90edaa3a6f" translate="yes" xml:space="preserve">
          <source>DER encoding rule. Only when using option &lt;code&gt;-bber&lt;/code&gt;.</source>
          <target state="translated">DER编码规则。仅在使用选项 &lt;code&gt;-bber&lt;/code&gt; 时。</target>
        </trans-unit>
        <trans-unit id="b7de8c553aef404024fa14705d12334a38a9ba56" translate="yes" xml:space="preserve">
          <source>DER encoding rule. Only when using option &lt;code&gt;-ber&lt;/code&gt;.</source>
          <target state="translated">DER编码规则。仅在使用选项 &lt;code&gt;-ber&lt;/code&gt; 时。</target>
        </trans-unit>
        <trans-unit id="84dcd5feea6dee4fae3ce05cdc83a12f1d7ea1d4" translate="yes" xml:space="preserve">
          <source>DHkeys | ECkey | RSAkey</source>
          <target state="translated">DHkeys | ECkey | RSAkeys</target>
        </trans-unit>
        <trans-unit id="d6e732ecd4e11af8a698fbf4ea97940ed4e92352" translate="yes" xml:space="preserve">
          <source>DNS Types</source>
          <target state="translated">DNS类型</target>
        </trans-unit>
        <trans-unit id="0282a2e2726b5fdbd89b48e12c5edb38b5d2c29e" translate="yes" xml:space="preserve">
          <source>DOUBLE PRECISION</source>
          <target state="translated">双倍精度</target>
        </trans-unit>
        <trans-unit id="39a267a22efad1284bb718be8389935545f40c42" translate="yes" xml:space="preserve">
          <source>DPA will not be answered with error: a peer that wants to a avoid a race can wait for pending answers before sending DPR.</source>
          <target state="translated">DPA不会得到错误的回答:想要避开竞赛的对等体可以等待待定的回答再发送DPR。</target>
        </trans-unit>
        <trans-unit id="837847eadad8a02e0a26e0a89d32d4849dab0375" translate="yes" xml:space="preserve">
          <source>DPR is answered by diameter.</source>
          <target state="translated">DPR由直径来回答。</target>
        </trans-unit>
        <trans-unit id="4fe6dfc7b5bf41007c92822040a3771600344912" translate="yes" xml:space="preserve">
          <source>DPR is sent by diameter in response to configuration changes requiring a connection to be broken. The user can also send DPR.</source>
          <target state="translated">DPR是按直径发送的,以响应配置的变化,需要断开连接。用户也可以发送DPR。</target>
        </trans-unit>
        <trans-unit id="bd47f7b25396b802c6cc872b07c8e74aa8f561f7" translate="yes" xml:space="preserve">
          <source>DSA Private Key</source>
          <target state="translated">DSA私钥</target>
        </trans-unit>
        <trans-unit id="9a31ff9ff5352d6a802a866e324e994ce8276420" translate="yes" xml:space="preserve">
          <source>DSS</source>
          <target state="translated">DSS</target>
        </trans-unit>
        <trans-unit id="35cc006848ec06e9bab464320bbc5c7a0c755095" translate="yes" xml:space="preserve">
          <source>DSS is available with OpenSSL versions compatible with Erlang CRYPTO if not disabled by configuration. To dynamically check availability, check that the atom &lt;code&gt;dss&lt;/code&gt; is present in the list returned by &lt;code&gt;&lt;a href=&quot;crypto#supports-1&quot;&gt;crypto:supports(public_keys)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">如果未通过配置禁用DSS，则可使用与Erlang CRYPTO兼容的OpenSSL版本。要动态检查可用性，请检查 &lt;code&gt;&lt;a href=&quot;crypto#supports-1&quot;&gt;crypto:supports(public_keys)&lt;/a&gt;&lt;/code&gt; 返回的列表中是否存在原子 &lt;code&gt;dss&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="09b8851812229eed3f9b811b8227211258143355" translate="yes" xml:space="preserve">
          <source>DTLS is not supported by &lt;code&gt;&lt;a href=&quot;diameter_sctp&quot;&gt;diameter_sctp(3)&lt;/a&gt;&lt;/code&gt;. See also 2.1.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;diameter_sctp&quot;&gt;diameter_sctp(3)&lt;/a&gt;&lt;/code&gt; 不支持DTLS 。另请参阅2.1。</target>
        </trans-unit>
        <trans-unit id="2778aadf7efa4d7ec17ee2e140d3c4805c86ad10" translate="yes" xml:space="preserve">
          <source>DTLS versions supported by default. Overridden by a version option on &lt;code&gt;&lt;a href=&quot;#connect-2&quot;&gt;connect/[2,3,4]&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#listen-2&quot;&gt;listen/2&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;#ssl_accept-2&quot;&gt;ssl_accept/[1,2,3]&lt;/a&gt;&lt;/code&gt;. For the negotiated DTLS version, see &lt;code&gt;&lt;a href=&quot;#connection_information-1&quot;&gt;connection_information/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">默认情况下支持DTLS版本。由 &lt;code&gt;&lt;a href=&quot;#connect-2&quot;&gt;connect/[2,3,4]&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;#listen-2&quot;&gt;listen/2&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;#ssl_accept-2&quot;&gt;ssl_accept/[1,2,3]&lt;/a&gt;&lt;/code&gt; 上的版本选项覆盖。有关协商的DTLS版本，请参阅 &lt;code&gt;&lt;a href=&quot;#connection_information-1&quot;&gt;connection_information/1&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5c878c8fed5fcdc756ccbbc9774c4fbc9fd17e38" translate="yes" xml:space="preserve">
          <source>DTLS versions supported with current application environment and crypto library configuration. Overridden by a version option on &lt;code&gt;&lt;a href=&quot;#connect-2&quot;&gt; connect/[2,3,4]&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#listen-2&quot;&gt; listen/2&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;#ssl_accept-2&quot;&gt;ssl_accept/[1,2,3]&lt;/a&gt;&lt;/code&gt;. For the negotiated DTLS version, see &lt;code&gt;&lt;a href=&quot;#connection_information-1&quot;&gt;connection_information/1 &lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">当前应用程序环境和加密库配置支持的DTLS版本。由 &lt;code&gt;&lt;a href=&quot;#connect-2&quot;&gt; connect/[2,3,4]&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;#listen-2&quot;&gt; listen/2&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;#ssl_accept-2&quot;&gt;ssl_accept/[1,2,3]&lt;/a&gt;&lt;/code&gt; 上的版本选项覆盖。有关协商的DTLS版本，请参阅 &lt;code&gt;&lt;a href=&quot;#connection_information-1&quot;&gt;connection_information/1 &lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="079040b89595a1905052492b01d234e9da8e65c0" translate="yes" xml:space="preserve">
          <source>DTimeout = &lt;code&gt;non_neg_integer() | infinity&lt;/code&gt;</source>
          <target state="translated">DTimeout = &lt;code&gt;non_neg_integer() | infinity&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="681894808986453e11139b64095d07555db3bc0c" translate="yes" xml:space="preserve">
          <source>DWA is sent and received by diameter.</source>
          <target state="translated">DWA按直径发送和接收。</target>
        </trans-unit>
        <trans-unit id="115bb573277942e2c0241eacb3cfcfbd168c16cc" translate="yes" xml:space="preserve">
          <source>DWR is sent and received by diameter. Callbacks notify the user of transitions into and out of the OKAY state.</source>
          <target state="translated">DWR由直径发送和接收。回调通知用户进入和退出OKAY状态的转换。</target>
        </trans-unit>
        <trans-unit id="2c032387dabc5379db4535651cdfc5d97977abd1" translate="yes" xml:space="preserve">
          <source>Daemon Options (Server Options)</source>
          <target state="translated">守护进程选项(服务器选项</target>
        </trans-unit>
        <trans-unit id="121a37f5f85a3a162018e843c756b5a8c8364e27" translate="yes" xml:space="preserve">
          <source>Daemons</source>
          <target state="translated">Daemons</target>
        </trans-unit>
        <trans-unit id="a226281af8814d9035b30a81dd3aee4c07b2ffbc" translate="yes" xml:space="preserve">
          <source>Daemons uses all files stored in the &lt;code&gt;&lt;a href=&quot;#SYSDIR&quot;&gt;SYSDIR&lt;/a&gt;&lt;/code&gt; directory.</source>
          <target state="translated">守护程序使用存储在 &lt;code&gt;&lt;a href=&quot;#SYSDIR&quot;&gt;SYSDIR&lt;/a&gt;&lt;/code&gt; 目录中的所有文件。</target>
        </trans-unit>
        <trans-unit id="f643970ffdf0593ff82c6a1d7e6aa468e3c41266" translate="yes" xml:space="preserve">
          <source>Dash punctuation</source>
          <target state="translated">破折号标点</target>
        </trans-unit>
        <trans-unit id="464a2f282d12b45929fd78bb794d8a4f9f946bb8" translate="yes" xml:space="preserve">
          <source>Data :: &lt;code&gt;&lt;a href=&quot;#type-data&quot;&gt;data()&lt;/a&gt;&lt;/code&gt;) -&amp;gt;</source>
          <target state="translated">数据:: &lt;code&gt;&lt;a href=&quot;#type-data&quot;&gt;data()&lt;/a&gt;&lt;/code&gt; ）-&amp;gt;</target>
        </trans-unit>
        <trans-unit id="c9d432b62d16bce12eca345de774a1915e302cce" translate="yes" xml:space="preserve">
          <source>Data :: &lt;code&gt;&lt;a href=&quot;#type-data&quot;&gt;data()&lt;/a&gt;&lt;/code&gt;,</source>
          <target state="translated">数据:: &lt;code&gt;&lt;a href=&quot;#type-data&quot;&gt;data()&lt;/a&gt;&lt;/code&gt; ，</target>
        </trans-unit>
        <trans-unit id="bb7a48866e7195b13e5763e1f37eb88ea2c4df1d" translate="yes" xml:space="preserve">
          <source>Data :: iodata()) -&amp;gt;</source>
          <target state="translated">数据:: iodata（））-&amp;gt;</target>
        </trans-unit>
        <trans-unit id="b922291aa68d5ce0abb7037b3282f3856db7513f" translate="yes" xml:space="preserve">
          <source>Data Files</source>
          <target state="translated">数据文件</target>
        </trans-unit>
        <trans-unit id="112ef38c4c4b9fefb686eebf1834cbe900350455" translate="yes" xml:space="preserve">
          <source>Data Structure</source>
          <target state="translated">数据结构</target>
        </trans-unit>
        <trans-unit id="57fc64bb8f382f10196af5681a5427d64937f4ad" translate="yes" xml:space="preserve">
          <source>Data Transfer (RFC 4254, section 5.2)</source>
          <target state="translated">数据传输(RFC 4254,5.2节)</target>
        </trans-unit>
        <trans-unit id="c18842877f84be9bb3ae10673c4e60242f22c160" translate="yes" xml:space="preserve">
          <source>Data Types</source>
          <target state="translated">数据类型</target>
        </trans-unit>
        <trans-unit id="9c31b6f7739d67773b06fe3449c57ddcbffeb92e" translate="yes" xml:space="preserve">
          <source>Data connect time-out. The time the client waits for the server to connect to the data socket.</source>
          <target state="translated">数据连接超时。客户端等待服务器连接到数据插座的时间。</target>
        </trans-unit>
        <trans-unit id="7e10a82b8b559dc5b779041b441a1c0dfe49471b" translate="yes" xml:space="preserve">
          <source>Data directory for a test suite. This directory contains any files used by the test suite, for example, extra Erlang modules, binaries, or data files.</source>
          <target state="translated">测试套件的数据目录。这个目录包含测试套件使用的任何文件,例如,额外的 Erlang 模块、二进制文件或数据文件。</target>
        </trans-unit>
        <trans-unit id="32937a8d06658ffd3c1365a3cd1340aa2557de5c" translate="yes" xml:space="preserve">
          <source>Data for input buffering. For details about the input buffering, see the source code in directory &lt;code&gt;kernel/examples&lt;/code&gt;. That certainly goes beyond the scope of this section.</source>
          <target state="translated">用于输入缓冲的数据。有关输入缓冲的详细信息，请参见目录 &lt;code&gt;kernel/examples&lt;/code&gt; 中的源代码。这当然超出了本节的范围。</target>
        </trans-unit>
        <trans-unit id="e054cdd9c9da7b3b2bb7291300fc3a7629888a95" translate="yes" xml:space="preserve">
          <source>Data for the default user. Passed to the user when calling the callback functions.</source>
          <target state="translated">默认用户的数据。调用回调函数时传递给用户。</target>
        </trans-unit>
        <trans-unit id="7d4d62945035570e86162babf629385f4d6e4d3a" translate="yes" xml:space="preserve">
          <source>Data has arrived on the channel. This event is sent as a result of calling &lt;code&gt;&lt;a href=&quot;ssh_connection#send-3&quot;&gt; ssh_connection:send/[3,4,5]&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">数据已到达通道。由于调用 &lt;code&gt;&lt;a href=&quot;ssh_connection#send-3&quot;&gt; ssh_connection:send/[3,4,5]&lt;/a&gt;&lt;/code&gt; 而发送此事件。</target>
        </trans-unit>
        <trans-unit id="6f1f7cf962006e0b1b007924871539bc66d2db55" translate="yes" xml:space="preserve">
          <source>Data has arrived on the channel. This event is sent as a result of calling &lt;code&gt;&lt;a href=&quot;ssh_connection#send-3&quot;&gt;ssh_connection:send/[3,4,5]&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">数据已到达通道。由于调用 &lt;code&gt;&lt;a href=&quot;ssh_connection#send-3&quot;&gt;ssh_connection:send/[3,4,5]&lt;/a&gt;&lt;/code&gt; 而发送此事件。</target>
        </trans-unit>
        <trans-unit id="18ec80ede503c1dd6ab3e54fbee9d4ce77824bf0" translate="yes" xml:space="preserve">
          <source>Data in Mnesia is organized as a set of tables. Each table has a name that must be an atom. Each table is made up of Erlang records. The user is responsible for the record definitions. Each table also has a set of properties. The following are some of the properties that are associated with each table:</source>
          <target state="translated">Mnesia中的数据被组织成一组表格。每个表都有一个名称,必须是一个原子。每个表由Erlang记录组成。用户负责记录的定义。每个表也有一组属性。以下是与每个表相关的一些属性。</target>
        </trans-unit>
        <trans-unit id="050ed4cd10f635788adfce66e75cb6851926924f" translate="yes" xml:space="preserve">
          <source>Data in subsequent &lt;code&gt;write/2&lt;/code&gt; calls is buffered until at least &lt;code&gt;Size&lt;/code&gt; bytes are buffered, or until the oldest buffered data is &lt;code&gt;Delay&lt;/code&gt; milliseconds old. Then all buffered data is written in one operating system call. The buffered data is also flushed before some other file operation than &lt;code&gt;write/2&lt;/code&gt; is executed.</source>
          <target state="translated">缓冲随后的 &lt;code&gt;write/2&lt;/code&gt; 调用中的数据，直到至少缓冲了 &lt;code&gt;Size&lt;/code&gt; 字节，或者直到最早的缓冲数据为 &lt;code&gt;Delay&lt;/code&gt; 毫秒。然后将所有缓冲的数据写入一个操作系统调用中。在执行除 &lt;code&gt;write/2&lt;/code&gt; 以外的其他文件操作之前，还将刷新缓冲的数据。</target>
        </trans-unit>
        <trans-unit id="129e2ba95fe6bc450fdea60f77c548e87bd22110" translate="yes" xml:space="preserve">
          <source>Data is organized as a set of dynamic tables, which can store tuples. Each table is created by a process. When the process terminates, the table is automatically destroyed. Every table has access rights set at creation.</source>
          <target state="translated">数据被组织成一组动态表,可以存储元组。每个表由一个进程创建。当进程终止时,表会自动销毁。每个表在创建时都设置了访问权限。</target>
        </trans-unit>
        <trans-unit id="7c825ea984ebfeb20bfb18c3c089c4b5d7fc910e" translate="yes" xml:space="preserve">
          <source>Data model</source>
          <target state="translated">数据模型</target>
        </trans-unit>
        <trans-unit id="d88a58f92c3b91a26c430ae94296edf843a1b410" translate="yes" xml:space="preserve">
          <source>Data retrieval and matching can be performed efficiently if the key for the record is known. Conversely, if the key is unknown, all records in a table must be searched. The larger the table, the more time consuming it becomes. To remedy this problem, &lt;code&gt;Mnesia&lt;/code&gt; indexing capabilities are used to improve data retrieval and matching of records.</source>
          <target state="translated">如果知道记录的密钥，则可以有效地执行数据检索和匹配。相反，如果键未知，则必须搜索表中的所有记录。该表越大，则消耗的时间越多。为了解决此问题， &lt;code&gt;Mnesia&lt;/code&gt; 索引功能用于改善数据检索和记录的匹配。</target>
        </trans-unit>
        <trans-unit id="e543437de0f5b43e761c9966043280a2df286e1d" translate="yes" xml:space="preserve">
          <source>Data sent between distributed Erlang nodes is encoded in the Erlang external format. You must therefore encode and decode Erlang terms into byte streams if you want to use the distribution protocol to communicate between a C program and Erlang.</source>
          <target state="translated">分布式Erlang节点之间发送的数据是以Erlang外部格式编码的。因此,如果你想使用分布式协议在C程序和Erlang之间进行通信,你必须将Erlang术语编码并解码成字节流。</target>
        </trans-unit>
        <trans-unit id="c4cf6ed152b81374d28ee381b50a64523c29ef6c" translate="yes" xml:space="preserve">
          <source>Data stored by mnesia is not handled.</source>
          <target state="translated">mnesia存储的数据不做处理。</target>
        </trans-unit>
        <trans-unit id="b6be514c02654c4ded06230fc9559da237b0aa77" translate="yes" xml:space="preserve">
          <source>Data types</source>
          <target state="translated">数据类型</target>
        </trans-unit>
        <trans-unit id="61074f1c958d6cdd32dad889b3d58a2d0704cbe3" translate="yes" xml:space="preserve">
          <source>Database</source>
          <target state="translated">Database</target>
        </trans-unit>
        <trans-unit id="19d8f0b6010c96f619023ff00641c7c3986b2380" translate="yes" xml:space="preserve">
          <source>Database configuration data</source>
          <target state="translated">数据库配置数据</target>
        </trans-unit>
        <trans-unit id="ba3cf0c65905f3020e42210451d47c186c957bf0" translate="yes" xml:space="preserve">
          <source>Database schema can be dynamically reconfigured at runtime.</source>
          <target state="translated">数据库模式可以在运行时动态重新配置。</target>
        </trans-unit>
        <trans-unit id="5a37f5cd3de7b52eecd6446ee73d36b86dc95de0" translate="yes" xml:space="preserve">
          <source>Database transactions can be distributed, and many functions can be called within one transaction.</source>
          <target state="translated">数据库事务可以是分布式的,在一个事务中可以调用很多函数。</target>
        </trans-unit>
        <trans-unit id="612ad2902cebaa30546804c4eb91a7062d9969d4" translate="yes" xml:space="preserve">
          <source>Datagrams with a TTL of 1 are not forwarded beyond the local network. Defaults to &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">TTL为1的数据报不会转发到本地网络之外。默认为 &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f7538dd652995f96d0d74319f2536cbba7e113a3" translate="yes" xml:space="preserve">
          <source>Date and Time Source</source>
          <target state="translated">日期和时间来源</target>
        </trans-unit>
        <trans-unit id="99c601ebd68e151e7d8f1e57867ae003d0a2d8c1" translate="yes" xml:space="preserve">
          <source>Date and time of a startTime/stopTime element in an RFC 5277 create-subscription request. Of XML primitive type &lt;code&gt;dateTime&lt;/code&gt;, which has the (informal) form</source>
          <target state="translated">RFC 5277创建-订阅请求中的startTime / stopTime元素的日期和时间。XML基本类型 &lt;code&gt;dateTime&lt;/code&gt; ，具有（非正式）形式</target>
        </trans-unit>
        <trans-unit id="2b99e0cca5062728f6965685da68dc39fcfdf9d3" translate="yes" xml:space="preserve">
          <source>Date and time of the request (&lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc1123.txt&quot;&gt;RFC 1123&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">请求的日期和时间（ &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc1123.txt&quot;&gt;RFC 1123&lt;/a&gt;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="3b6dde365cc5d32622a9c6a2695cee0bd68562c2" translate="yes" xml:space="preserve">
          <source>Deactivates the fragmentation properties of a table. The number of fragments must be &lt;code&gt;1&lt;/code&gt;. No other table can refer to this table in its foreign key.</source>
          <target state="translated">停用表的碎片属性。片段数必须为 &lt;code&gt;1&lt;/code&gt; 。没有其他表可以在其外键中引用该表。</target>
        </trans-unit>
        <trans-unit id="f459ca6dc8c73dd3f58100639885a5b029445022" translate="yes" xml:space="preserve">
          <source>Deadlocks can occur when concurrent processes set and release locks on the same records. &lt;code&gt;Mnesia&lt;/code&gt; employs a &quot;wait-die&quot; strategy to resolve these situations. If &lt;code&gt;Mnesia&lt;/code&gt; suspects that a deadlock can occur when a transaction tries to set a lock, the transaction is forced to release all its locks and sleep for a while. The Fun in the transaction is evaluated once more.</source>
          <target state="translated">当并发进程在同一记录上设置和释放锁时，可能会发生死锁。 &lt;code&gt;Mnesia&lt;/code&gt; 采用&amp;ldquo;等待死亡&amp;rdquo;策略来解决这些情况。如果 &lt;code&gt;Mnesia&lt;/code&gt; 怀疑在事务尝试设置锁时会发生死锁，则该事务将被迫释放其所有锁并休眠一段时间。再次评估交易中的乐趣。</target>
        </trans-unit>
        <trans-unit id="d42fada4b4db8ee772a6efb71b440f23f712ab2a" translate="yes" xml:space="preserve">
          <source>Deallocate disabled breakpoint structures.</source>
          <target state="translated">重新分配被禁用的断点结构。</target>
        </trans-unit>
        <trans-unit id="414719a92983e826f45ea35ed4ef0944d0fd279a" translate="yes" xml:space="preserve">
          <source>Deallocates the dynamically allocated content of the buffer referred by &lt;code&gt;x&lt;/code&gt;. After deallocation, the &lt;code&gt;buff&lt;/code&gt; field is set to &lt;code&gt;NULL&lt;/code&gt;.</source>
          <target state="translated">释放由 &lt;code&gt;x&lt;/code&gt; 引用的缓冲区的动态分配内容。释放之后， &lt;code&gt;buff&lt;/code&gt; 字段设置为 &lt;code&gt;NULL&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a82cc6c2e66b72d85b8a41e42d8d7ecc2b401e77" translate="yes" xml:space="preserve">
          <source>Deallocations in a carrier, while it remains in the pool, is always performed the owner. That is, all pooled carriers are employed by their owners.</source>
          <target state="translated">载体中的交易分配,虽然仍在池中,但总是由所有者来执行。也就是说,所有入池的承运人都是由其所有者雇佣的。</target>
        </trans-unit>
        <trans-unit id="27b709fc2bb3a86f7f88fe651e9e8a0d28e88b36" translate="yes" xml:space="preserve">
          <source>Debug = &lt;code&gt;trace | debug | disable&lt;/code&gt;</source>
          <target state="translated">调试= &lt;code&gt;trace | debug | disable&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0050ab1b7359d130843a319c89dbe0a79ecc63c9" translate="yes" xml:space="preserve">
          <source>Debug Information</source>
          <target state="translated">调试信息</target>
        </trans-unit>
        <trans-unit id="035f7b677e61f61b074b00eff0b92ad9e09f27f0" translate="yes" xml:space="preserve">
          <source>Debug events from other modules are still not logged.</source>
          <target state="translated">其他模块的调试事件仍然没有被记录。</target>
        </trans-unit>
        <trans-unit id="32e9e821173db8cfa7b505ab8a20a84321f18828" translate="yes" xml:space="preserve">
          <source>Debug only handler</source>
          <target state="translated">仅调试处理程序</target>
        </trans-unit>
        <trans-unit id="fa4563928cc0c50665178b278c9e71ebacafdf3f" translate="yes" xml:space="preserve">
          <source>Debug option that can be used when starting a &lt;code&gt;gen_statem&lt;/code&gt; server through, &lt;code&gt;&lt;a href=&quot;#enter_loop-4&quot;&gt;enter_loop/4-6&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">通过 &lt;code&gt;&lt;a href=&quot;#enter_loop-4&quot;&gt;enter_loop/4-6&lt;/a&gt;&lt;/code&gt; 启动 &lt;code&gt;gen_statem&lt;/code&gt; 服务器时可以使用的调试选项。</target>
        </trans-unit>
        <trans-unit id="defb6560167477af27e95859deec8f3b47d74a9a" translate="yes" xml:space="preserve">
          <source>Debugger emulates the stack trace by keeping track of recently called interpreted functions. (The real stack trace cannot be used, as it shows which functions of Debugger have been called, rather than which interpreted functions.)</source>
          <target state="translated">Debugger通过跟踪最近调用的解释函数来模拟堆栈跟踪(不能使用真实的堆栈跟踪,因为它显示了Debugger的哪些函数被调用,而不是哪些解释函数)。不能使用真正的堆栈跟踪,因为它显示的是Debugger的哪些函数被调用,而不是哪些解释函数。</target>
        </trans-unit>
        <trans-unit id="e221f45c707889daf1073188d65f869a0b39cbcc" translate="yes" xml:space="preserve">
          <source>Debugger is a graphical user interface for the Erlang interpreter, which can be used for debugging and testing of Erlang programs. For example, breakpoints can be set, code can be single-stepped and variable values can be displayed and changed.</source>
          <target state="translated">调试器是Erlang解释器的图形化用户界面,可用于Erlang程序的调试和测试。例如,可以设置断点,可以单步执行代码,可以显示和更改变量值。</target>
        </trans-unit>
        <trans-unit id="dd4100fe3414e35ff8a037e54e112a9534b3b212" translate="yes" xml:space="preserve">
          <source>Debugger might at some point start tracing on the processes that execute the interpreted code. This means that a conflict occurs if tracing by other means is started on any of these processes.</source>
          <target state="translated">调试器可能会在某些时候开始跟踪执行解释代码的进程。这意味着,如果在这些进程中的任何一个进程上通过其他方式启动跟踪,就会发生冲突。</target>
        </trans-unit>
        <trans-unit id="5b6c664f9525b0123e3fae0ff71a9ebc0fd17090" translate="yes" xml:space="preserve">
          <source>Debugger/Interpreter Interface.</source>
          <target state="translated">调试器/解释器接口。</target>
        </trans-unit>
        <trans-unit id="c8d857648ac1598a30ac096be9d255c19f1bd6cc" translate="yes" xml:space="preserve">
          <source>Debugging &lt;code&gt;Mnesia&lt;/code&gt; applications</source>
          <target state="translated">调试 &lt;code&gt;Mnesia&lt;/code&gt; 应用程序</target>
        </trans-unit>
        <trans-unit id="23e452f4c5d3a6408023724c090fc801cfc07a47" translate="yes" xml:space="preserve">
          <source>Debugging a &lt;code&gt;Mnesia&lt;/code&gt; application can be difficult for various reasons, primarily related to difficulties in understanding how the transaction and table load mechanisms work. Another source of confusion can be the semantics of nested transactions.</source>
          <target state="translated">出于各种原因，调试 &lt;code&gt;Mnesia&lt;/code&gt; 应用程序可能会很困难，这主要与理解事务和表加载机制的工作原理上的困难有关。混乱的另一个来源可能是嵌套事务的语义。</target>
        </trans-unit>
        <trans-unit id="f141f05e4d2cf41fd5dfedfa20ad5cf22dab2e01" translate="yes" xml:space="preserve">
          <source>Debugging using the dbg toolkit.</source>
          <target state="translated">使用dbg工具箱进行调试。</target>
        </trans-unit>
        <trans-unit id="53aa84241bad4437942b340d201b730aaf881f35" translate="yes" xml:space="preserve">
          <source>Debugs a single process. The module &lt;code&gt;Module&lt;/code&gt; is interpreted and &lt;code&gt;apply(Module,Name,Args)&lt;/code&gt; is called. This opens an Attach Process window. For details, see the User's Guide.</source>
          <target state="translated">调试单个进程。解释模块 &lt;code&gt;Module&lt;/code&gt; 并调用 &lt;code&gt;apply(Module,Name,Args)&lt;/code&gt; 。这将打开&amp;ldquo;附加过程&amp;rdquo;窗口。有关详细信息，请参见《用户指南》。</target>
        </trans-unit>
        <trans-unit id="bf7aef8b1f8e55b262892d6132d56b930c207ed6" translate="yes" xml:space="preserve">
          <source>Debugs the escript. Starts the debugger, loads the module containing the &lt;code&gt;main/1&lt;/code&gt; function into the debugger, sets a breakpoint in &lt;code&gt;main/1&lt;/code&gt;, and invokes &lt;code&gt;main/1&lt;/code&gt;. If the module is precompiled, it must be explicitly compiled with option &lt;code&gt;debug_info&lt;/code&gt;.</source>
          <target state="translated">调试脚本。启动调试器，将包含 &lt;code&gt;main/1&lt;/code&gt; 函数的模块加载到调试器中，在 &lt;code&gt;main/1&lt;/code&gt; 中设置一个断点，然后调用 &lt;code&gt;main/1&lt;/code&gt; 。如果模块是预编译的，则必须使用选项 &lt;code&gt;debug_info&lt;/code&gt; 对其进行显式编译。</target>
        </trans-unit>
        <trans-unit id="cae5faece6cb296b0cc299ed6ddc1b6ca04b9323" translate="yes" xml:space="preserve">
          <source>Decide that the processing of these action requests will take a long time and that the originator should get an immediate 'TransactionPending' reply as interim response. The actual processing of these action requests instead should be delegated to the the handle_trans_long_request/3 callback function with the req_data() as one of its arguments.</source>
          <target state="translated">决定这些动作请求的处理需要很长的时间,发起者应该立即得到一个 &quot;TransactionPending &quot;的回复作为临时响应。这些操作请求的实际处理应该委托给handle_trans_long_request/3回调函数,并将req_data()作为其参数之一。</target>
        </trans-unit>
        <trans-unit id="296147e1f16d0d671fd62dba38df0f0bf940898e" translate="yes" xml:space="preserve">
          <source>Decide that these action requests shall be ignored completely.</source>
          <target state="translated">决定对这些行动请求完全不予理会。</target>
        </trans-unit>
        <trans-unit id="2a286603a091ca4a3c3ca6602558d954b8dc8447" translate="yes" xml:space="preserve">
          <source>Decide where the installation should be located on the target machine, run the &lt;code&gt;Install&lt;/code&gt; script on the build machine, and package the installed installation. The installation just need to be unpacked at the right location on the target machine:</source>
          <target state="translated">确定安装应在目标计算机上的何处，在构建计算机上运行 &lt;code&gt;Install&lt;/code&gt; 脚本，并打包已安装的安装。只需要在目标机器上的正确位置解压缩安装包即可：</target>
        </trans-unit>
        <trans-unit id="c9ab7948100760fa565d60c416761db66c9caa9e" translate="yes" xml:space="preserve">
          <source>Decimal digits (same as \d)</source>
          <target state="translated">小数点(同/d)</target>
        </trans-unit>
        <trans-unit id="65da61a3f57995f3366c218b64218e59bec3ca92" translate="yes" xml:space="preserve">
          <source>Decimal notation (for example, &lt;code&gt;&quot;1.5e3&lt;/code&gt;) for REAL values. The NR1, NR2, and NR3 formats as explained in ISO 6093 are supported.</source>
          <target state="translated">REAL值的十进制表示法（例如， &lt;code&gt;&quot;1.5e3&lt;/code&gt; ）支持ISO 6093中说明的NR1，NR2和NR3格式。</target>
        </trans-unit>
        <trans-unit id="5b7088c3751cc4ef1491042690b4e5593015c436" translate="yes" xml:space="preserve">
          <source>Decimal number</source>
          <target state="translated">小数</target>
        </trans-unit>
        <trans-unit id="ff8fb402b4aaa54b8767c9b731bf29abc3194900" translate="yes" xml:space="preserve">
          <source>Decode (parse) a property parameter construct.</source>
          <target state="translated">解码(解析)一个属性参数构造。</target>
        </trans-unit>
        <trans-unit id="5979cd6b56fae3871f3bbb815be4ed934b7900cd" translate="yes" xml:space="preserve">
          <source>Decode a Diameter message.</source>
          <target state="translated">对Diameter信息进行解码。</target>
        </trans-unit>
        <trans-unit id="1990206866d59651ba6e0898f7b484e1912dfa30" translate="yes" xml:space="preserve">
          <source>Decode a megaco message.</source>
          <target state="translated">解码巨型信息。</target>
        </trans-unit>
        <trans-unit id="bf4991dbaad8678edd6c2c6beff475c6105cefe5" translate="yes" xml:space="preserve">
          <source>Decode and encode of Diameter messages.</source>
          <target state="translated">Diameter信息的解码和编码。</target>
        </trans-unit>
        <trans-unit id="5389a6cf55e52d30448954b8ae3ea1f1432bb5b8" translate="yes" xml:space="preserve">
          <source>Decode using &lt;code&gt;&lt;a href=&quot;#ei_decode_bitstring&quot;&gt;ei_decode_bitstring()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;#ei_decode_bitstring&quot;&gt;ei_decode_bitstring()&lt;/a&gt;&lt;/code&gt; 进行解码。</target>
        </trans-unit>
        <trans-unit id="53d51a3495166acde35e261f9db58105513239d1" translate="yes" xml:space="preserve">
          <source>Decode using &lt;code&gt;&lt;a href=&quot;#ei_decode_double&quot;&gt;ei_decode_double()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;#ei_decode_double&quot;&gt;ei_decode_double()&lt;/a&gt;&lt;/code&gt; 进行解码。</target>
        </trans-unit>
        <trans-unit id="bcbf60508de2e8fb6c0acf89a32b1b712fd3a558" translate="yes" xml:space="preserve">
          <source>Decode using &lt;code&gt;&lt;a href=&quot;#ei_decode_fun&quot;&gt;ei_decode_fun()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;#ei_decode_fun&quot;&gt;ei_decode_fun()&lt;/a&gt;&lt;/code&gt; 进行解码。</target>
        </trans-unit>
        <trans-unit id="01c8261c254cdb936f5be62cc8f13caf8d459017" translate="yes" xml:space="preserve">
          <source>Decode using &lt;code&gt;&lt;a href=&quot;#ei_decode_map_header&quot;&gt;ei_decode_map_header()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;#ei_decode_map_header&quot;&gt;ei_decode_map_header()&lt;/a&gt;&lt;/code&gt; 进行解码。</target>
        </trans-unit>
        <trans-unit id="9f3a6e0157cb514cf0def5168dd2f421d12c22b9" translate="yes" xml:space="preserve">
          <source>Decode using &lt;code&gt;&lt;a href=&quot;#ei_decode_pid&quot;&gt;ei_decode_pid()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;#ei_decode_pid&quot;&gt;ei_decode_pid()&lt;/a&gt;&lt;/code&gt; 进行解码。</target>
        </trans-unit>
        <trans-unit id="48762c869554a6a51f6c435837ed775765ad7d46" translate="yes" xml:space="preserve">
          <source>Decode using &lt;code&gt;&lt;a href=&quot;#ei_decode_port&quot;&gt;ei_decode_port()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;#ei_decode_port&quot;&gt;ei_decode_port()&lt;/a&gt;&lt;/code&gt; 进行解码。</target>
        </trans-unit>
        <trans-unit id="f19abf998e57f78935af7fae2b826e6525341e9b" translate="yes" xml:space="preserve">
          <source>Decode using &lt;code&gt;&lt;a href=&quot;#ei_decode_ref&quot;&gt;ei_decode_ref()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;#ei_decode_ref&quot;&gt;ei_decode_ref()&lt;/a&gt;&lt;/code&gt; 进行解码。</target>
        </trans-unit>
        <trans-unit id="b6ef12b27e8e946e95d0764bca7213989b88a750" translate="yes" xml:space="preserve">
          <source>Decode using &lt;code&gt;&lt;a href=&quot;#ei_decode_tuple_header&quot;&gt;ei_decode_tuple_header()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;#ei_decode_tuple_header&quot;&gt;ei_decode_tuple_header()&lt;/a&gt;&lt;/code&gt; 进行解码。</target>
        </trans-unit>
        <trans-unit id="cbefe080e7b29f1f4487c5c6caa2cf553d04f704" translate="yes" xml:space="preserve">
          <source>Decode using either &lt;code&gt;&lt;a href=&quot;#ei_decode_atom&quot;&gt;ei_decode_atom()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#ei_decode_atom_as&quot;&gt;ei_decode_atom_as()&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;#ei_decode_boolean&quot;&gt;ei_decode_boolean()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;#ei_decode_atom&quot;&gt;ei_decode_atom()&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;#ei_decode_atom_as&quot;&gt;ei_decode_atom_as()&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;#ei_decode_boolean&quot;&gt;ei_decode_boolean()&lt;/a&gt;&lt;/code&gt; 进行解码。</target>
        </trans-unit>
        <trans-unit id="780c6e7733d523f8f1e17b8cd26231f2ae329703" translate="yes" xml:space="preserve">
          <source>Decode using either &lt;code&gt;&lt;a href=&quot;#ei_decode_binary&quot;&gt;ei_decode_binary()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#ei_decode_bitstring&quot;&gt;ei_decode_bitstring()&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;#ei_decode_iodata&quot;&gt;ei_decode_iodata()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;#ei_decode_binary&quot;&gt;ei_decode_binary()&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;#ei_decode_bitstring&quot;&gt;ei_decode_bitstring()&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;#ei_decode_iodata&quot;&gt;ei_decode_iodata()&lt;/a&gt;&lt;/code&gt; 进行解码。</target>
        </trans-unit>
        <trans-unit id="cc811fee38ef1940feb418a6dd8003d3c56dbdc7" translate="yes" xml:space="preserve">
          <source>Decode using either &lt;code&gt;&lt;a href=&quot;#ei_decode_char&quot;&gt;ei_decode_char()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#ei_decode_long&quot;&gt;ei_decode_long()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#ei_decode_longlong&quot;&gt;ei_decode_longlong()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#ei_decode_ulong&quot;&gt;ei_decode_ulong()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#ei_decode_ulonglong&quot;&gt;ei_decode_ulonglong()&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;#ei_decode_bignum&quot;&gt;ei_decode_bignum()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;#ei_decode_char&quot;&gt;ei_decode_char()&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;#ei_decode_long&quot;&gt;ei_decode_long()&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;#ei_decode_longlong&quot;&gt;ei_decode_longlong()&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;#ei_decode_ulong&quot;&gt;ei_decode_ulong()&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;#ei_decode_ulonglong&quot;&gt;ei_decode_ulonglong()&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;#ei_decode_bignum&quot;&gt;ei_decode_bignum()&lt;/a&gt;&lt;/code&gt; 进行解码。</target>
        </trans-unit>
        <trans-unit id="d7887d699141fadcb44c1491d2061239868a97f7" translate="yes" xml:space="preserve">
          <source>Decode using either &lt;code&gt;&lt;a href=&quot;#ei_decode_list_header&quot;&gt;ei_decode_list_header()&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;#ei_decode_iodata&quot;&gt;ei_decode_iodata()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;#ei_decode_list_header&quot;&gt;ei_decode_list_header()&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;#ei_decode_iodata&quot;&gt;ei_decode_iodata()&lt;/a&gt;&lt;/code&gt; 进行解码。</target>
        </trans-unit>
        <trans-unit id="39ebc6221ef61a3b7e94784fab9c1a7efaf347a5" translate="yes" xml:space="preserve">
          <source>Decode using either &lt;code&gt;&lt;a href=&quot;#ei_decode_string&quot;&gt;ei_decode_string()&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;#ei_decode_iodata&quot;&gt;ei_decode_iodata()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;#ei_decode_string&quot;&gt;ei_decode_string()&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;#ei_decode_iodata&quot;&gt;ei_decode_iodata()&lt;/a&gt;&lt;/code&gt; 进行解码。</target>
        </trans-unit>
        <trans-unit id="04c29a268c6d05fb4c10fd39847cdca8507e1edf" translate="yes" xml:space="preserve">
          <source>Decodes PEM binary data and returns entries as ASN.1 DER encoded entities.</source>
          <target state="translated">对PEM二进制数据进行解码,并以ASN.1 DER编码实体返回条目。</target>
        </trans-unit>
        <trans-unit id="859246fe87085f9c7b8882c6761358eb6c4bc19a" translate="yes" xml:space="preserve">
          <source>Decodes a GCC &lt;code&gt;long long&lt;/code&gt; or Visual C++ &lt;code&gt;__int64&lt;/code&gt; (64-bit) integer from the binary format.</source>
          <target state="translated">从二进制格式解码GCC &lt;code&gt;long long&lt;/code&gt; 或Visual C ++ &lt;code&gt;__int64&lt;/code&gt; （64位）整数。</target>
        </trans-unit>
        <trans-unit id="7360a27688e20855a0fb8a33b91983575b01f93c" translate="yes" xml:space="preserve">
          <source>Decodes a GCC &lt;code&gt;long long&lt;/code&gt; or Visual C++ &lt;code&gt;__int64&lt;/code&gt; (64-bit) integer from the binary format. This function is missing in the VxWorks port.</source>
          <target state="translated">从二进制格式解码GCC &lt;code&gt;long long&lt;/code&gt; 或Visual C ++ &lt;code&gt;__int64&lt;/code&gt; （64位）整数。VxWorks端口中缺少此功能。</target>
        </trans-unit>
        <trans-unit id="30180248cea8d3e26590f2263e9fdb501e5d1190" translate="yes" xml:space="preserve">
          <source>Decodes a GCC &lt;code&gt;unsigned long long&lt;/code&gt; or Visual C++ &lt;code&gt;unsigned __int64&lt;/code&gt; (64-bit) integer from the binary format.</source>
          <target state="translated">从二进制格式解码GCC &lt;code&gt;unsigned long long&lt;/code&gt; 或Visual C ++ &lt;code&gt;unsigned __int64&lt;/code&gt; （64位）整数。</target>
        </trans-unit>
        <trans-unit id="21f60563405db4b9a7e0be854cf6438cd4beb732" translate="yes" xml:space="preserve">
          <source>Decodes a GCC &lt;code&gt;unsigned long long&lt;/code&gt; or Visual C++ &lt;code&gt;unsigned __int64&lt;/code&gt; (64-bit) integer from the binary format. This function is missing in the VxWorks port.</source>
          <target state="translated">从二进制格式解码GCC &lt;code&gt;unsigned long long&lt;/code&gt; 或Visual C ++ &lt;code&gt;unsigned __int64&lt;/code&gt; （64位）整数。VxWorks端口中缺少此功能。</target>
        </trans-unit>
        <trans-unit id="7cf4297100116a8fb69569a7970b478b23af9197" translate="yes" xml:space="preserve">
          <source>Decodes a PEM entry. &lt;code&gt;pem_decode/1&lt;/code&gt; returns a list of PEM entries. Notice that if the PEM entry is of type 'SubjectPublickeyInfo', it is further decoded to an &lt;code&gt;rsa_public_key()&lt;/code&gt; or &lt;code&gt;dsa_public_key()&lt;/code&gt;.</source>
          <target state="translated">解码PEM条目。 &lt;code&gt;pem_decode/1&lt;/code&gt; 返回PEM条目的列表。请注意，如果PEM条目的类型为'SubjectPublickeyInfo'，则将其进一步解码为 &lt;code&gt;rsa_public_key()&lt;/code&gt; 或 &lt;code&gt;dsa_public_key()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4c631891ab5871d7e6d4723fb99481871fcd5f1a" translate="yes" xml:space="preserve">
          <source>Decodes a base64-encoded string to plain ASCII. See &lt;code&gt;&lt;a href=&quot;https://www.ietf.org/html/rfc4648&quot;&gt;RFC 4648&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将base64编码的字符串解码为纯ASCII。参见 &lt;code&gt;&lt;a href=&quot;https://www.ietf.org/html/rfc4648&quot;&gt;RFC 4648&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="54df9fe6765c80fb1da36d250dde56be4a72dc0e" translate="yes" xml:space="preserve">
          <source>Decodes a binary from the binary format. Parameter &lt;code&gt;len&lt;/code&gt; is set to the actual size of the binary. Notice that &lt;code&gt;ei_decode_binary()&lt;/code&gt; assumes that there is enough room for the binary. The size required can be fetched by &lt;code&gt;&lt;a href=&quot;#ei_get_type&quot;&gt;ei_get_type()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">从二进制格式解码二进制。参数 &lt;code&gt;len&lt;/code&gt; 设置为二进制的实际大小。请注意， &lt;code&gt;ei_decode_binary()&lt;/code&gt; 假定二进制文件有足够的空间。所需的大小可以通过 &lt;code&gt;&lt;a href=&quot;#ei_get_type&quot;&gt;ei_get_type()&lt;/a&gt;&lt;/code&gt; 获取。</target>
        </trans-unit>
        <trans-unit id="5a65748944fa474016b5ec91a3fa3dbe7b3d0391" translate="yes" xml:space="preserve">
          <source>Decodes a binary from the binary format. Parameter &lt;code&gt;len&lt;/code&gt; is set to the actual size of the binary. Notice that &lt;code&gt;ei_decode_binary()&lt;/code&gt; assumes that there is enough room for the binary. The size required can be fetched by &lt;code&gt;ei_get_type()&lt;/code&gt;.</source>
          <target state="translated">从二进制格式解码二进制。参数 &lt;code&gt;len&lt;/code&gt; 设置为二进制的实际大小。请注意， &lt;code&gt;ei_decode_binary()&lt;/code&gt; 假定二进制文件有足够的空间。所需大小可通过 &lt;code&gt;ei_get_type()&lt;/code&gt; 获取。</target>
        </trans-unit>
        <trans-unit id="e4f35749e9af57da021caccd287c0ff3e3f3beaa" translate="yes" xml:space="preserve">
          <source>Decodes a bit string from the binary format.</source>
          <target state="translated">从二进制格式解码一个位串。</target>
        </trans-unit>
        <trans-unit id="3c1c6c809be0674c11595d06cc3faa64fd8fd808" translate="yes" xml:space="preserve">
          <source>Decodes a boolean value from the binary format. A boolean is actually an atom, &lt;code&gt;true&lt;/code&gt; decodes 1 and &lt;code&gt;false&lt;/code&gt; decodes 0.</source>
          <target state="translated">从二进制格式解码布尔值。布尔实际上是一个原子， &lt;code&gt;true&lt;/code&gt; 解码为1， &lt;code&gt;false&lt;/code&gt; 解码为0。</target>
        </trans-unit>
        <trans-unit id="08cdc88e69d314abed9e3c385ce7668438ddadd6" translate="yes" xml:space="preserve">
          <source>Decodes a char (8-bit) integer between 0-255 from the binary format. For historical reasons the returned integer is of type &lt;code&gt;char&lt;/code&gt;. Your C code is to consider the returned value to be of type &lt;code&gt;unsigned char&lt;/code&gt; even if the C compilers and system can define &lt;code&gt;char&lt;/code&gt; to be signed.</source>
          <target state="translated">从二进制格式解码0-255之间的char（8位）整数。由于历史原因，返回的整数为 &lt;code&gt;char&lt;/code&gt; 类型。即使C编译器和系统可以定义要签名的 &lt;code&gt;char&lt;/code&gt; ，您的C代码也应将返回值视为 &lt;code&gt;unsigned char&lt;/code&gt; 类型。</target>
        </trans-unit>
        <trans-unit id="41180dad3719b82aebc88aab4177009231fe2259" translate="yes" xml:space="preserve">
          <source>Decodes a double-precision (64-bit) floating point number from the binary format.</source>
          <target state="translated">从二进制格式解码一个双精度(64位)浮点数。</target>
        </trans-unit>
        <trans-unit id="001f04a1f509db28199eaa2770679f16ba8e53e0" translate="yes" xml:space="preserve">
          <source>Decodes a fun from the binary format. Parameter &lt;code&gt;p&lt;/code&gt; is to be &lt;code&gt;NULL&lt;/code&gt; or point to an &lt;code&gt;erlang_fun&lt;/code&gt; structure. This is the only decode function that allocates memory. When the &lt;code&gt;erlang_fun&lt;/code&gt; is no longer needed, it is to be freed with &lt;code&gt;free_fun&lt;/code&gt;. (This has to do with the arbitrary size of the environment for a fun.)</source>
          <target state="translated">解码二进制格式的乐趣。参数 &lt;code&gt;p&lt;/code&gt; 为 &lt;code&gt;NULL&lt;/code&gt; 或指向 &lt;code&gt;erlang_fun&lt;/code&gt; 结构。这是唯一分配内存的解码功能。当不再需要 &lt;code&gt;erlang_fun&lt;/code&gt; 时，将使用 &lt;code&gt;free_fun&lt;/code&gt; 将其释放。（这与环境的任意大小有关，这很有趣。）</target>
        </trans-unit>
        <trans-unit id="18d6f4fae8bbc75abc1803bbb8636e607ae242c5" translate="yes" xml:space="preserve">
          <source>Decodes a list header from the binary format. The number of elements is returned in &lt;code&gt;arity&lt;/code&gt;. The &lt;code&gt;arity+1&lt;/code&gt; elements follow (the last one is the tail of the list, normally an empty list). If &lt;code&gt;arity&lt;/code&gt; is &lt;code&gt;0&lt;/code&gt;, it is an empty list.</source>
          <target state="translated">从二进制格式解码列表头。元素的数量以 &lt;code&gt;arity&lt;/code&gt; 返回。随后是 &lt;code&gt;arity+1&lt;/code&gt; 元素（最后一个是列表的尾部，通常是一个空列表）。如果 &lt;code&gt;arity&lt;/code&gt; 为 &lt;code&gt;0&lt;/code&gt; ，则为空列表。</target>
        </trans-unit>
        <trans-unit id="e4dc7debd8402c2755243e2193f8347f31d3b550" translate="yes" xml:space="preserve">
          <source>Decodes a list of bytes into an SNMP Message, but does not decode the data part of the Message. That means, data is still a list of bytes, normally an encoded &lt;code&gt;PDU&lt;/code&gt; (v1 and V2) or an encoded and possibly encrypted &lt;code&gt;scopedPDU&lt;/code&gt; (v3).</source>
          <target state="translated">将字节列表解码为SNMP消息，但不解码消息的数据部分。这意味着，数据仍然是字节列表，通常是已编码的 &lt;code&gt;PDU&lt;/code&gt; （v1和V2）或已编码并且可能已加密的 &lt;code&gt;scopedPDU&lt;/code&gt; （v3）。</target>
        </trans-unit>
        <trans-unit id="c1d12aa0e48e3eab7e11f37288dcdbefcb70069b" translate="yes" xml:space="preserve">
          <source>Decodes a list of bytes into an SNMP Message. Note, if there is a v3 message, the &lt;code&gt;msgSecurityParameters&lt;/code&gt; are not decoded. They must be explicitly decoded by a call to a security model specific decoding function, e.g. &lt;code&gt;dec_usm_security_parameters/1&lt;/code&gt;. Also note, if the &lt;code&gt;scopedPDU&lt;/code&gt; is encrypted, the OCTET STRING encoded &lt;code&gt;encryptedPDU&lt;/code&gt; will be present in the &lt;code&gt;data&lt;/code&gt; field.</source>
          <target state="translated">将字节列表解码为SNMP消息。注意，如果有v3消息，则不会解码 &lt;code&gt;msgSecurityParameters&lt;/code&gt; 。必须通过调用特定于安全模型的解码函数（例如 &lt;code&gt;dec_usm_security_parameters/1&lt;/code&gt; )来明确解码它们。还要注意，如果范围 &lt;code&gt;scopedPDU&lt;/code&gt; 被加密，则OCTET STRING编码的 &lt;code&gt;encryptedPDU&lt;/code&gt; PDU将出现在 &lt;code&gt;data&lt;/code&gt; 字段中。</target>
        </trans-unit>
        <trans-unit id="eed8e6a0090a3e1c9e82b10392971ae046e1aabd" translate="yes" xml:space="preserve">
          <source>Decodes a list of bytes into an SNMP Pdu.</source>
          <target state="translated">将一个字节列表解码为SNMP Pdu。</target>
        </trans-unit>
        <trans-unit id="3227a1ecb10582ae4a970b8da90cc8679f737c65" translate="yes" xml:space="preserve">
          <source>Decodes a list of bytes into an SNMP ScopedPdu.</source>
          <target state="translated">将一个字节列表解码为SNMP ScopedPdu。</target>
        </trans-unit>
        <trans-unit id="16ff1ac99b297ea5e89d5914e343d66e3ee9ec7e" translate="yes" xml:space="preserve">
          <source>Decodes a list of bytes into an SNMP UsmSecurityParameters</source>
          <target state="translated">将一个字节列表解码为SNMP UsmSecurityParameters。</target>
        </trans-unit>
        <trans-unit id="8068464b2954e18d56690f482b5c83beb3d2da91" translate="yes" xml:space="preserve">
          <source>Decodes a list of bytes into either a scoped pdu record, or - if the scoped pdu was encrypted - to a list of bytes.</source>
          <target state="translated">将一个字节列表解码为一个范围内的pdu记录,或者--如果范围内的pdu是加密的--解码为一个字节列表。</target>
        </trans-unit>
        <trans-unit id="36fa4c2c8d3ce5469f81bf8e2f01e1bad6585546" translate="yes" xml:space="preserve">
          <source>Decodes a long integer from the binary format. If the code is 64 bits, the function &lt;code&gt;ei_decode_long()&lt;/code&gt; is the same as &lt;code&gt;ei_decode_longlong()&lt;/code&gt;.</source>
          <target state="translated">从二进制格式解码一个长整数。如果代码是64位，则函数 &lt;code&gt;ei_decode_long()&lt;/code&gt; 与 &lt;code&gt;ei_decode_longlong()&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="e8d6a14f70482ed0b2481e5cdb79122c9ab1d3a9" translate="yes" xml:space="preserve">
          <source>Decodes a map header from the binary format. The number of key-value pairs is returned in &lt;code&gt;*arity&lt;/code&gt;. Keys and values follow in this order: &lt;code&gt;K1, V1, K2, V2, ..., Kn, Vn&lt;/code&gt;. This makes a total of &lt;code&gt;arity*2&lt;/code&gt; terms. If &lt;code&gt;arity&lt;/code&gt; is zero, it is an empty map. A correctly encoded map does not have duplicate keys.</source>
          <target state="translated">从二进制格式解码地图头。键值对的数量以 &lt;code&gt;*arity&lt;/code&gt; 返回。键和值的顺序如下： &lt;code&gt;K1, V1, K2, V2, ..., Kn, Vn&lt;/code&gt; 。这使得总共 &lt;code&gt;arity*2&lt;/code&gt; 项。如果 &lt;code&gt;arity&lt;/code&gt; 为零，则为空映射。正确编码的地图没有重复的键。</target>
        </trans-unit>
        <trans-unit id="c244de9d7a979fe86f4311c5e29a18ed06b4f05f" translate="yes" xml:space="preserve">
          <source>Decodes a port identifier from the binary format.</source>
          <target state="translated">将二进制格式的端口标识符解码。</target>
        </trans-unit>
        <trans-unit id="390f19f5072e66d22cafbd8e00edafa3efd84727" translate="yes" xml:space="preserve">
          <source>Decodes a possibly hexadecimal encoded URI.</source>
          <target state="translated">解码一个可能是十六进制编码的URI。</target>
        </trans-unit>
        <trans-unit id="57fa03cd41899fa37eecf042311c2997f929caf8" translate="yes" xml:space="preserve">
          <source>Decodes a process identifier (pid) from the binary format.</source>
          <target state="translated">从二进制格式解码一个进程标识符(pid)。</target>
        </trans-unit>
        <trans-unit id="6e65c52d8708b823530a12d41213dc66d5de21df" translate="yes" xml:space="preserve">
          <source>Decodes a public-key ASN.1 DER encoded entity.</source>
          <target state="translated">解码一个公钥ASN.1 DER编码的实体。</target>
        </trans-unit>
        <trans-unit id="a78b5544642de9f1463b92f1892b4542c5bd2718" translate="yes" xml:space="preserve">
          <source>Decodes a reference from the binary format.</source>
          <target state="translated">将二进制格式的引用解码。</target>
        </trans-unit>
        <trans-unit id="53687e2100a0b085a62eeaff413256b5b8d3a1ca" translate="yes" xml:space="preserve">
          <source>Decodes a string from the binary format. A string in Erlang is a list of integers between 0 and 255. Notice that as the string is just a list, sometimes lists are encoded as strings by &lt;code&gt;term_to_binary/1&lt;/code&gt;, even if it was not intended.</source>
          <target state="translated">从二进制格式解码字符串。Erlang中的字符串是一个介于0到255之间的整数的列表。请注意，由于该字符串只是一个列表，因此有时列表会被 &lt;code&gt;term_to_binary/1&lt;/code&gt; 编码为字符串，即使这不是故意的。</target>
        </trans-unit>
        <trans-unit id="497185de18750b89c2dbb7f8891741f766d7a724" translate="yes" xml:space="preserve">
          <source>Decodes a term from the binary format. The term is return in &lt;code&gt;t&lt;/code&gt; as a &lt;code&gt;ETERM*&lt;/code&gt;, so &lt;code&gt;t&lt;/code&gt; is actually an &lt;code&gt;ETERM**&lt;/code&gt; (see &lt;code&gt;&lt;a href=&quot;erl_eterm&quot;&gt;erl_eterm&lt;/a&gt;&lt;/code&gt;). The term is later to be deallocated.</source>
          <target state="translated">从二进制格式解码术语。该术语以 &lt;code&gt;ETERM*&lt;/code&gt; 形式返回 &lt;code&gt;t&lt;/code&gt; ，因此 &lt;code&gt;t&lt;/code&gt; 实际上是 &lt;code&gt;ETERM**&lt;/code&gt; （请参阅 &lt;code&gt;&lt;a href=&quot;erl_eterm&quot;&gt;erl_eterm&lt;/a&gt;&lt;/code&gt; ）。该术语稍后将被取消分配。</target>
        </trans-unit>
        <trans-unit id="72bc36a07ace28f24722303e8c818612988dd260" translate="yes" xml:space="preserve">
          <source>Decodes a term of the type &lt;code&gt;iodata()&lt;/code&gt;. The &lt;code&gt;iodata()&lt;/code&gt; term will be flattened an written into the buffer pointed to by the &lt;code&gt;outbuf&lt;/code&gt; argument. The byte size of the &lt;code&gt;iodata&lt;/code&gt; is written into the integer variable pointed to by the &lt;code&gt;size&lt;/code&gt; argument. Both &lt;code&gt;size&lt;/code&gt; and &lt;code&gt;outbuf&lt;/code&gt; can be set to &lt;code&gt;NULL&lt;/code&gt;. The integer pointed to by the &lt;code&gt;index&lt;/code&gt; argument is updated to refer to the term following after the &lt;code&gt;iodata()&lt;/code&gt; term regardless of the the state of the &lt;code&gt;size&lt;/code&gt; and the &lt;code&gt;outbuf&lt;/code&gt; arguments.</source>
          <target state="translated">解码 &lt;code&gt;iodata()&lt;/code&gt; 类型的术语。所述 &lt;code&gt;iodata()&lt;/code&gt; 项将变平的写入由指向的缓冲 &lt;code&gt;outbuf&lt;/code&gt; 中的参数。 &lt;code&gt;iodata&lt;/code&gt; 的字节大小将写入 &lt;code&gt;size&lt;/code&gt; 参数指向的整数变量中。无论 &lt;code&gt;size&lt;/code&gt; 和 &lt;code&gt;outbuf&lt;/code&gt; 中可以设置为 &lt;code&gt;NULL&lt;/code&gt; 。由 &lt;code&gt;index&lt;/code&gt; 参数指向的整数将更新，以引用 &lt;code&gt;iodata()&lt;/code&gt; 术语之后的术语，而不管 &lt;code&gt;size&lt;/code&gt; 和 &lt;code&gt;outbuf&lt;/code&gt; 参数的状态如何。</target>
        </trans-unit>
        <trans-unit id="cb0d9eb8b1a6bcff439c067b3ce8a53cabf5ed5b" translate="yes" xml:space="preserve">
          <source>Decodes a tuple header, the number of elements is returned in &lt;code&gt;arity&lt;/code&gt;. The tuple elements follow in order in the buffer.</source>
          <target state="translated">解码一个元组标头，以 &lt;code&gt;arity&lt;/code&gt; 返回元素的数量。元组元素在缓冲区中顺序排列。</target>
        </trans-unit>
        <trans-unit id="f14b0a560a116b63aebf997d631c247b62167904" translate="yes" xml:space="preserve">
          <source>Decodes all percent-encoded triplets in the input that can be both a &lt;code&gt;uri_string()&lt;/code&gt; and a &lt;code&gt;uri_map()&lt;/code&gt;. Note, that this function performs raw decoding and it shall be used on already parsed URI components. Applying this function directly on a standard URI can effectively change it.</source>
          <target state="translated">解码输入中所有百分比编码的三元组，它们可以是 &lt;code&gt;uri_string()&lt;/code&gt; 和 &lt;code&gt;uri_map()&lt;/code&gt; 。注意，该功能执行原始解码，并且应在已解析的URI组件上使用。直接在标准URI上应用此功能可以有效地对其进行更改。</target>
        </trans-unit>
        <trans-unit id="31233f35dd3238479772605c79734e7f70a5729e" translate="yes" xml:space="preserve">
          <source>Decodes an ASN.1 DER-encoded PKIX certificate. Option &lt;code&gt;otp&lt;/code&gt; uses the customized ASN.1 specification OTP-PKIX.asn1 for decoding and also recursively decode most of the standard parts.</source>
          <target state="translated">解码ASN.1 DER编码的PKIX证书。选项 &lt;code&gt;otp&lt;/code&gt; 使用定制的ASN.1规范OTP-PKIX.asn1进行解码，并且还递归解码大多数标准部分。</target>
        </trans-unit>
        <trans-unit id="cdf2a0e43fcb6c36f9d5916f9aef94c5705fc226" translate="yes" xml:space="preserve">
          <source>Decodes an Erlang trace token from the binary format.</source>
          <target state="translated">从二进制格式解码一个Erlang跟踪标记。</target>
        </trans-unit>
        <trans-unit id="b7ce3a579d78e2a9c6e4166acfedf2e1ffc94b57" translate="yes" xml:space="preserve">
          <source>Decodes an SSH file-binary. In the case of &lt;code&gt;known_hosts&lt;/code&gt; or &lt;code&gt;auth_keys&lt;/code&gt;, the binary can include one or more lines of the file. Returns a list of public keys and their attributes, possible attribute values depends on the file type represented by the binary.</source>
          <target state="translated">解码SSH文件二进制文件。如果是 &lt;code&gt;known_hosts&lt;/code&gt; 或 &lt;code&gt;auth_keys&lt;/code&gt; ，则二进制文件可以包含文件的一行或多行。返回公共密钥及其属性的列表，可能的属性值取决于二进制表示的文件类型。</target>
        </trans-unit>
        <trans-unit id="7f8da18d3e38384c6097ce6ff967087c8f9501e3" translate="yes" xml:space="preserve">
          <source>Decodes an atom from the binary format. The &lt;code&gt;NULL&lt;/code&gt;-terminated name of the atom is placed at &lt;code&gt;p&lt;/code&gt;. At most &lt;code&gt;MAXATOMLEN&lt;/code&gt; bytes can be placed in the buffer.</source>
          <target state="translated">从二进制格式解码原子。原子的以 &lt;code&gt;NULL&lt;/code&gt; 结尾的名称位于 &lt;code&gt;p&lt;/code&gt; 处。至多 &lt;code&gt;MAXATOMLEN&lt;/code&gt; 字节可以被放置在缓冲器中。</target>
        </trans-unit>
        <trans-unit id="7c8d3960a361efe78e33180447e637e944683649" translate="yes" xml:space="preserve">
          <source>Decodes an atom from the binary format. The &lt;code&gt;NULL&lt;/code&gt;-terminated name of the atom is placed in buffer at &lt;code&gt;p&lt;/code&gt; of length &lt;code&gt;plen&lt;/code&gt; bytes.</source>
          <target state="translated">从二进制格式解码原子。该 &lt;code&gt;NULL&lt;/code&gt; 的原子的封端的名称在被置于缓冲器 &lt;code&gt;p&lt;/code&gt; 长度的 &lt;code&gt;plen&lt;/code&gt; 字节。</target>
        </trans-unit>
        <trans-unit id="9f6e85127a2a679440088c560edc3bd683f74e24" translate="yes" xml:space="preserve">
          <source>Decodes an integer in the binary format to a GMP &lt;code&gt;mpz_t&lt;/code&gt; integer. To use this function, the &lt;code&gt;ei&lt;/code&gt; library must be configured and compiled to use the GMP library.</source>
          <target state="translated">将二进制格式的整数解码为GMP &lt;code&gt;mpz_t&lt;/code&gt; 整数。要使用此功能，必须将 &lt;code&gt;ei&lt;/code&gt; 库配置并编译为使用GMP库。</target>
        </trans-unit>
        <trans-unit id="704c48c66f011d8937953dfaeb16c97c0a406c38" translate="yes" xml:space="preserve">
          <source>Decodes an unsigned long integer from the binary format. If the code is 64 bits, the function &lt;code&gt;ei_decode_ulong()&lt;/code&gt; is the same as &lt;code&gt;ei_decode_ulonglong()&lt;/code&gt;.</source>
          <target state="translated">从二进制格式解码一个无符号的长整数。如果代码是64位，则函数 &lt;code&gt;ei_decode_ulong()&lt;/code&gt; 与 &lt;code&gt;ei_decode_ulonglong()&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="04a3f3a375c17646372842a7a97e427866c348d2" translate="yes" xml:space="preserve">
          <source>Decodes any term, or at least tries to. If the term pointed at by &lt;code&gt;*index&lt;/code&gt; in &lt;code&gt;buf&lt;/code&gt; fits in the &lt;code&gt;term&lt;/code&gt; union, it is decoded, and the appropriate field in &lt;code&gt;term-&amp;gt;value&lt;/code&gt; is set, and &lt;code&gt;*index&lt;/code&gt; is incremented by the term size.</source>
          <target state="translated">解码任何术语，或至少尝试这么做。如果长期指着由 &lt;code&gt;*index&lt;/code&gt; 在 &lt;code&gt;buf&lt;/code&gt; 在千篇一律 &lt;code&gt;term&lt;/code&gt; 联盟，它被解码，并在相应的字段 &lt;code&gt;term-&amp;gt;value&lt;/code&gt; 被设置，并且 &lt;code&gt;*index&lt;/code&gt; 由项大小递增。</target>
        </trans-unit>
        <trans-unit id="5927a995775d2a1e5671d1f98ef2ea5cef8e5c35" translate="yes" xml:space="preserve">
          <source>Decodes percent-encoded triplets that correspond to characters in the unreserved set.</source>
          <target state="translated">解码与未保留集中的字符相对应的百分比编码三联。</target>
        </trans-unit>
        <trans-unit id="757e6ea7683958a3319067002a2a837818f66225" translate="yes" xml:space="preserve">
          <source>Decodes the binary &lt;code&gt;Bin&lt;/code&gt; according to the packet protocol specified by &lt;code&gt;Type&lt;/code&gt;. Similar to the packet handling done by sockets with option &lt;code&gt;{packet,Type}.&lt;/code&gt;</source>
          <target state="translated">根据 &lt;code&gt;Type&lt;/code&gt; 指定的数据包协议对二进制 &lt;code&gt;Bin&lt;/code&gt; 进行解码。与套接字使用选项 &lt;code&gt;{packet,Type}.&lt;/code&gt; 进行的数据包处理类似。</target>
        </trans-unit>
        <trans-unit id="9631a2823874b272e99656b5b1df620f055a8804" translate="yes" xml:space="preserve">
          <source>Decodes the reply.</source>
          <target state="translated">对答复进行解码。</target>
        </trans-unit>
        <trans-unit id="582f2e4b062a05b30bb370cfaeb8199d7d3e14f5" translate="yes" xml:space="preserve">
          <source>Decodes the version magic number for the Erlang binary term format. It must be the first token in a binary term.</source>
          <target state="translated">解码Erlang二进制术语格式的版本魔术号。它必须是二进制术语中的第一个标记。</target>
        </trans-unit>
        <trans-unit id="457b6089f13c7bd6c468bbfc9e50e82656d5d08c" translate="yes" xml:space="preserve">
          <source>Decoding percent-encoded triplets</source>
          <target state="translated">解码百分比编码的三联体</target>
        </trans-unit>
        <trans-unit id="40f0b9334f2e3eebaf1b21997bec63be1900f3f0" translate="yes" xml:space="preserve">
          <source>Decompress a megaco component.</source>
          <target state="translated">解压一个megaco组件。</target>
        </trans-unit>
        <trans-unit id="706dab7ea27ed4fc5d61d3a4e180c1715d801b88" translate="yes" xml:space="preserve">
          <source>Decompresses as much data as possible. It can introduce some output latency (reading input without producing any output).</source>
          <target state="translated">尽可能多的解压数据。它可能会引入一些输出延迟(读取输入而不产生任何输出)。</target>
        </trans-unit>
        <trans-unit id="2f754c77be056a6af30b62b885defffc77916070" translate="yes" xml:space="preserve">
          <source>Decreases the suspend count on the process identified by &lt;code&gt;Suspendee&lt;/code&gt;. &lt;code&gt;Suspendee&lt;/code&gt; is previously to have been suspended through &lt;code&gt;&lt;a href=&quot;#suspend_process-2&quot;&gt; erlang:suspend_process/2&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#suspend_process-1&quot;&gt; erlang:suspend_process/1&lt;/a&gt;&lt;/code&gt; by the process calling &lt;code&gt;erlang:resume_process(Suspendee)&lt;/code&gt;. When the suspend count on &lt;code&gt;Suspendee&lt;/code&gt; reaches zero, &lt;code&gt;Suspendee&lt;/code&gt; is resumed, that is, its state is changed from suspended into the state it had before it was suspended.</source>
          <target state="translated">减少对鉴定过程中的暂停次数 &lt;code&gt;Suspendee&lt;/code&gt; 。 &lt;code&gt;Suspendee&lt;/code&gt; 预先已通过悬浮 &lt;code&gt;&lt;a href=&quot;#suspend_process-2&quot;&gt; erlang:suspend_process/2&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;#suspend_process-1&quot;&gt; erlang:suspend_process/1&lt;/a&gt;&lt;/code&gt; 由过程调用 &lt;code&gt;erlang:resume_process(Suspendee)&lt;/code&gt; 。当挂起计数上 &lt;code&gt;Suspendee&lt;/code&gt; 达到零， &lt;code&gt;Suspendee&lt;/code&gt; 恢复，也就是说，它的状态从暂停到它有它暂停之前的状态改变。</target>
        </trans-unit>
        <trans-unit id="d3c2e891bd405268b62e1ff3212dcae02a02f258" translate="yes" xml:space="preserve">
          <source>Decreases the suspend count on the process identified by &lt;code&gt;Suspendee&lt;/code&gt;. &lt;code&gt;Suspendee&lt;/code&gt; is previously to have been suspended through &lt;code&gt;&lt;a href=&quot;#suspend_process-2&quot;&gt;erlang:suspend_process/2&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#suspend_process-1&quot;&gt;erlang:suspend_process/1&lt;/a&gt;&lt;/code&gt; by the process calling &lt;code&gt;erlang:resume_process(Suspendee)&lt;/code&gt;. When the suspend count on &lt;code&gt;Suspendee&lt;/code&gt; reaches zero, &lt;code&gt;Suspendee&lt;/code&gt; is resumed, that is, its state is changed from suspended into the state it had before it was suspended.</source>
          <target state="translated">减少对鉴定过程中的暂停次数 &lt;code&gt;Suspendee&lt;/code&gt; 。 &lt;code&gt;Suspendee&lt;/code&gt; 预先已通过悬浮 &lt;code&gt;&lt;a href=&quot;#suspend_process-2&quot;&gt;erlang:suspend_process/2&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;#suspend_process-1&quot;&gt;erlang:suspend_process/1&lt;/a&gt;&lt;/code&gt; 由过程调用 &lt;code&gt;erlang:resume_process(Suspendee)&lt;/code&gt; 。当挂起计数上 &lt;code&gt;Suspendee&lt;/code&gt; 达到零， &lt;code&gt;Suspendee&lt;/code&gt; 恢复，也就是说，它的状态从暂停到它有它暂停之前的状态改变。</target>
        </trans-unit>
        <trans-unit id="ac71c47ca533a8bc1bfd074ab38eca1bec247cb6" translate="yes" xml:space="preserve">
          <source>Decrements map iterator to point to the previous key-value entry.</source>
          <target state="translated">递减映射迭代器,指向前一个键值条目。</target>
        </trans-unit>
        <trans-unit id="d2ae2edc6a46722a52429b9c14a03465a9f41a38" translate="yes" xml:space="preserve">
          <source>Decrements the reference count of the port data lock passed as argument (&lt;code&gt;pdl&lt;/code&gt;).</source>
          <target state="translated">减少作为参数（ &lt;code&gt;pdl&lt;/code&gt; ）传递的端口数据锁的引用计数。</target>
        </trans-unit>
        <trans-unit id="754079185976b455e02dde4af4135c24c88cca6b" translate="yes" xml:space="preserve">
          <source>Decrements the reference count on &lt;code&gt;bin&lt;/code&gt; and returns the reference count reached after the decrement.</source>
          <target state="translated">减少 &lt;code&gt;bin&lt;/code&gt; 上的参考计数，并返回减少后达到的参考计数。</target>
        </trans-unit>
        <trans-unit id="23ae8738dc251a0b810d394196602b268b00e4c4" translate="yes" xml:space="preserve">
          <source>Decrypt &lt;code&gt;CipherText&lt;/code&gt; according to &lt;code&gt;Type&lt;/code&gt; block cipher.</source>
          <target state="translated">根据 &lt;code&gt;Type&lt;/code&gt; 块密码解密 &lt;code&gt;CipherText&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="83b484422c8b577358aefdc578e61594c216e34f" translate="yes" xml:space="preserve">
          <source>Decrypt &lt;code&gt;CipherText&lt;/code&gt; according to &lt;code&gt;Type&lt;/code&gt; block cipher. &lt;code&gt;IVec&lt;/code&gt; is an arbitrary initializing vector.</source>
          <target state="translated">根据 &lt;code&gt;Type&lt;/code&gt; 块密码解密 &lt;code&gt;CipherText&lt;/code&gt; 。 &lt;code&gt;IVec&lt;/code&gt; 是任意初始化向量。</target>
        </trans-unit>
        <trans-unit id="9525efb2590aee5a65243f5e0df7ad4ceb63df47" translate="yes" xml:space="preserve">
          <source>Decrypts &lt;code&gt;CipherText&lt;/code&gt; according to the stream cipher &lt;code&gt;Type&lt;/code&gt; specified in stream_init/3. &lt;code&gt;PlainText&lt;/code&gt; can be any number of bytes. The initial &lt;code&gt;State&lt;/code&gt; is created using &lt;code&gt;&lt;a href=&quot;#stream_init-2&quot;&gt;stream_init&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;NewState&lt;/code&gt; must be passed into the next call to &lt;code&gt;stream_decrypt&lt;/code&gt;.</source>
          <target state="translated">根据stream_init / 3中指定的流密码 &lt;code&gt;Type&lt;/code&gt; 解密 &lt;code&gt;CipherText&lt;/code&gt; 。 &lt;code&gt;PlainText&lt;/code&gt; 可以是任意数量的字节。初始 &lt;code&gt;State&lt;/code&gt; 是使用 &lt;code&gt;&lt;a href=&quot;#stream_init-2&quot;&gt;stream_init&lt;/a&gt;&lt;/code&gt; 创建的。必须将 &lt;code&gt;NewState&lt;/code&gt; 传递到下一个对 &lt;code&gt;stream_decrypt&lt;/code&gt; 的调用中。</target>
        </trans-unit>
        <trans-unit id="503569633da92548476a9ed57790d601574d1b5f" translate="yes" xml:space="preserve">
          <source>Decrypts &lt;code&gt;EncryptFileName&lt;/code&gt;, previously generated with &lt;code&gt;&lt;a href=&quot;#encrypt_config_file-2&quot;&gt;ct:encrypt_config_file/2,3&lt;/a&gt;&lt;/code&gt;. The original file contents is saved in the target file. The encryption key, a string, must be available in a text file named &lt;code&gt;.ct_config.crypt&lt;/code&gt;, either in the current directory, or the home directory of the user (it is searched for in that order).</source>
          <target state="translated">解密 &lt;code&gt;EncryptFileName&lt;/code&gt; ，以前使用 &lt;code&gt;&lt;a href=&quot;#encrypt_config_file-2&quot;&gt;ct:encrypt_config_file/2,3&lt;/a&gt;&lt;/code&gt; 生成。原始文件内容保存在目标文件中。加密密钥（字符串）必须在名为 &lt;code&gt;.ct_config.crypt&lt;/code&gt; 的文本文件中可用，该文本文件位于当前目录或用户的主目录中（按此顺序搜索）。</target>
        </trans-unit>
        <trans-unit id="0caecc0fc0bc550c01ffb41bca39a694068d649b" translate="yes" xml:space="preserve">
          <source>Decrypts &lt;code&gt;EncryptFileName&lt;/code&gt;, previously generated with &lt;code&gt;&lt;a href=&quot;#encrypt_config_file-2&quot;&gt;ct:encrypt_config_file/2,3&lt;/a&gt;&lt;/code&gt;. The original file contents is saved in the target file. The key must have the same value as that used for encryption.</source>
          <target state="translated">解密 &lt;code&gt;EncryptFileName&lt;/code&gt; ，以前使用 &lt;code&gt;&lt;a href=&quot;#encrypt_config_file-2&quot;&gt;ct:encrypt_config_file/2,3&lt;/a&gt;&lt;/code&gt; 生成。原始文件内容保存在目标文件中。密钥必须与用于加密的密钥具有相同的值。</target>
        </trans-unit>
        <trans-unit id="0f472612ecfb687801d1f1da0c8ddb8694716270" translate="yes" xml:space="preserve">
          <source>Decrypts the &lt;code&gt;CipherText&lt;/code&gt;, encrypted with &lt;code&gt;&lt;a href=&quot;#private_encrypt-4&quot;&gt;private_encrypt/4&lt;/a&gt;&lt;/code&gt;(or equivalent function) using the &lt;code&gt;PrivateKey&lt;/code&gt;, and returns the plaintext (message digest). This is a low level signature verification operation used for instance by older versions of the SSL protocol. See also &lt;code&gt;public_key:decrypt_public/[2,3]&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;PrivateKey&lt;/code&gt; 解密使用 &lt;code&gt;&lt;a href=&quot;#private_encrypt-4&quot;&gt;private_encrypt/4&lt;/a&gt;&lt;/code&gt; （或等效功能）加密的 &lt;code&gt;CipherText&lt;/code&gt; ，并返回纯文本（消息摘要）。这是低级签名验证操作，例如，较早版本的SSL协议使用该操作。另请参见 &lt;code&gt;public_key:decrypt_public/[2,3]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="14b6972ed8f83c5df6839e4f4a7a44d4f21da901" translate="yes" xml:space="preserve">
          <source>Decrypts the &lt;code&gt;CipherText&lt;/code&gt;, encrypted with &lt;code&gt;&lt;a href=&quot;#public_encrypt-4&quot;&gt;public_encrypt/4&lt;/a&gt;&lt;/code&gt; (or equivalent function) using the &lt;code&gt;PrivateKey&lt;/code&gt;, and returns the plaintext (message digest). This is a low level signature verification operation used for instance by older versions of the SSL protocol. See also &lt;code&gt;public_key:decrypt_private/[2,3]&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;PrivateKey&lt;/code&gt; 解密用 &lt;code&gt;&lt;a href=&quot;#public_encrypt-4&quot;&gt;public_encrypt/4&lt;/a&gt;&lt;/code&gt; （或等效函数）加密的 &lt;code&gt;CipherText&lt;/code&gt; ，并返回纯文本（消息摘要）。这是低级签名验证操作，例如，较早版本的SSL协议使用该操作。另请参见 &lt;code&gt;public_key:decrypt_private/[2,3]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e296f6426e6e16a531ee764e8d6f8a16573adfb8" translate="yes" xml:space="preserve">
          <source>Default :: Type) -&amp;gt;</source>
          <target state="translated">默认::类型）-&amp;gt;</target>
        </trans-unit>
        <trans-unit id="0455a1833e2e0886438d3f2c531b19ac46a6d41f" translate="yes" xml:space="preserve">
          <source>Default &lt;code&gt;Category&lt;/code&gt; is &lt;code&gt;default&lt;/code&gt;, default &lt;code&gt;Importance&lt;/code&gt; is &lt;code&gt;?STD_IMPORTANCE&lt;/code&gt;, and default value for &lt;code&gt;FormatArgs&lt;/code&gt; is &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">默认 &lt;code&gt;Category&lt;/code&gt; 是 &lt;code&gt;default&lt;/code&gt; ，默认 &lt;code&gt;Importance&lt;/code&gt; 是 &lt;code&gt;?STD_IMPORTANCE&lt;/code&gt; 的，并且默认值 &lt;code&gt;FormatArgs&lt;/code&gt; 是 &lt;code&gt;[]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3ae7604c9686fc42d1d93be79893ac976923929b" translate="yes" xml:space="preserve">
          <source>Default &lt;code&gt;Characters&lt;/code&gt; is the set of nonbreakable whitespace codepoints, defined as Pattern_White_Space in &lt;code&gt;&lt;a href=&quot;http://unicode.org/reports/tr31/&quot;&gt;Unicode Standard Annex #31&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;By default, Dir&lt;/code&gt; is &lt;code&gt;both&lt;/code&gt;.</source>
          <target state="translated">默认 &lt;code&gt;Characters&lt;/code&gt; 是不可破坏的空白代码点的集合，在 &lt;code&gt;&lt;a href=&quot;http://unicode.org/reports/tr31/&quot;&gt;Unicode Standard Annex #31&lt;/a&gt;&lt;/code&gt; 定义为Pattern_White_Space 。 &lt;code&gt;By default, Dir&lt;/code&gt; 是 &lt;code&gt;both&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="23e5055a981cbd9b798977736837eb5085328aa8" translate="yes" xml:space="preserve">
          <source>Default Callback Modules for Handling Configuration Data</source>
          <target state="translated">用于处理配置数据的默认回调模块</target>
        </trans-unit>
        <trans-unit id="e39eb9bd6709f45de32fec4660c82ff8892161e4" translate="yes" xml:space="preserve">
          <source>Default Compiler Options</source>
          <target state="translated">默认编译器选项</target>
        </trans-unit>
        <trans-unit id="0a132ae1aff547fd2cd28ac84945bb4864a55ae5" translate="yes" xml:space="preserve">
          <source>Default callback module for the client's and server's database operations in the ssh application</source>
          <target state="translated">在ssh应用程序中,用于客户端和服务器数据库操作的默认回调模块。</target>
        </trans-unit>
        <trans-unit id="0babd07ca0518fcff88ffc718f89e61d45435792" translate="yes" xml:space="preserve">
          <source>Default extensions included in CA certificates if not otherwise specified are:</source>
          <target state="translated">如果没有特别说明,CA证书中默认的扩展名包括:</target>
        </trans-unit>
        <trans-unit id="2ba6be86a95eed9103c8ba22b4e2e2d89c5ea6c4" translate="yes" xml:space="preserve">
          <source>Default extensions included in the server peer cert if not otherwise specified are:</source>
          <target state="translated">如果没有另外指定,服务器对等证书中包括的默认扩展是:</target>
        </trans-unit>
        <trans-unit id="697433a75c2d172b286a11dbe7054814dcf6047f" translate="yes" xml:space="preserve">
          <source>Default formatter for Logger.</source>
          <target state="translated">记录仪的默认格式化。</target>
        </trans-unit>
        <trans-unit id="1e96ff76b5e815c9a94c65caf80a80fbe40ea55d" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;%hot&lt;/code&gt;. The directives will be applied to declarations of the specific instruction that follow. Here is an example:</source>
          <target state="translated">默认为 &lt;code&gt;%hot&lt;/code&gt; 。这些指令将应用于后面的特定指令的声明。这是一个例子：</target>
        </trans-unit>
        <trans-unit id="47c9719405207b7b96f782974e156d8b8a3c9316" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;10 timutes&lt;/code&gt;.</source>
          <target state="translated">默认值是 &lt;code&gt;10 timutes&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d32a66e97b47395a45626f30911e0e437a9215bd" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;1000&lt;/code&gt;.</source>
          <target state="translated">默认值为 &lt;code&gt;1000&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fd4610fb0d08031a60e5fbdd5587057a34a9c1ea" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;100&lt;/code&gt;.</source>
          <target state="translated">默认值为 &lt;code&gt;100&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="08361928cb756b9749640168efc42d85af0b54b3" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;21&lt;/code&gt;.</source>
          <target state="translated">默认值为 &lt;code&gt;21&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b9c5a16d8900764ce1ca9321bcfe740555ac97eb" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;30000&lt;/code&gt;.</source>
          <target state="translated">默认值为 &lt;code&gt;30000&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e19233f2a52cea852bb5913ca613845f588c4cc8" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;5000&lt;/code&gt;.</source>
          <target state="translated">默认值为 &lt;code&gt;5000&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="da64d6a89dcf8de6c2eb3c74416287db71b2e35d" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;60000&lt;/code&gt; (milliseconds).</source>
          <target state="translated">默认值为 &lt;code&gt;60000&lt;/code&gt; （毫秒）。</target>
        </trans-unit>
        <trans-unit id="e0ce2a7c73e9820b57dc327203cf3422cc3eeb90" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;[&quot;./&quot;]&lt;/code&gt;.</source>
          <target state="translated">默认值为 &lt;code&gt;[&quot;./&quot;]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c13e8f1cbac90a1d2b6c7da13a6f8e97dd112230" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">默认值为 &lt;code&gt;[]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="66bf5e643d1d7909b87604dfdd961ff4bb2e6012" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;[v1,v2,v3]&lt;/code&gt;.</source>
          <target state="translated">默认值为 &lt;code&gt;[v1,v2,v3]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0e172a976e8c8e94d98a45e1bb8cd57e11ca26de" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;[{module, snmpa_mib_storage_ets}]&lt;/code&gt;.</source>
          <target state="translated">默认值为 &lt;code&gt;[{module, snmpa_mib_storage_ets}]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e779f763de4578f46a70b430b682e575084a0472" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;any&lt;/code&gt;</source>
          <target state="translated">默认为 &lt;code&gt;any&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fea0f3a6dc1b09df0cdef2240c99a5b2f8a43c35" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;any&lt;/code&gt;. &lt;code&gt;any&lt;/code&gt; is denoted &lt;strong&gt;*&lt;/strong&gt; in the Apache-like configuration file.</source>
          <target state="translated">默认值为 &lt;code&gt;any&lt;/code&gt; 。在类似Apache的配置文件中， &lt;code&gt;any&lt;/code&gt; 符号都用&lt;strong&gt;*&lt;/strong&gt;表示。</target>
        </trans-unit>
        <trans-unit id="7c69e3fab0c4ad5ef506a17d1762b197d25a78c1" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;auto&lt;/code&gt;.</source>
          <target state="translated">默认为 &lt;code&gt;auto&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b84dbd79a23eccbbbdd90c5513d52cd8ca4b4fc9" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;default&lt;/code&gt;.</source>
          <target state="translated">默认为 &lt;code&gt;default&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a383f9c193f8c6dcc6fe8502b629d4740cbb9e21" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;disable&lt;/code&gt;.</source>
          <target state="translated">默认为 &lt;code&gt;disable&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b16e15890d3d5add9f5075d6403813ccbaeb0554" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">默认值为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7f73e512a2700ceb3d71963efdf25b6344aefa1b" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;ignore&lt;/code&gt;.</source>
          <target state="translated">默认值为 &lt;code&gt;ignore&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bdc6f3d08785b591338ece524784ab638a0b8ee0" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;inet&lt;/code&gt; (IPv4).</source>
          <target state="translated">默认值为 &lt;code&gt;inet&lt;/code&gt; （IPv4）。</target>
        </trans-unit>
        <trans-unit id="72775a8429605b8ef9d6b123fec4c36cc6f5fdfc" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;inet&lt;/code&gt;, legacy option &lt;code&gt;inet6fb4&lt;/code&gt; no longer makes sense and will be translated to inet.</source>
          <target state="translated">默认值为 &lt;code&gt;inet&lt;/code&gt; ，旧选项 &lt;code&gt;inet6fb4&lt;/code&gt; 不再有意义，它将转换为inet。</target>
        </trans-unit>
        <trans-unit id="4642a28be0677b49caece36e6a6a6474b29cec81" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;infinity&lt;/code&gt;.</source>
          <target state="translated">默认值为 &lt;code&gt;infinity&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cc7faf8763de4e5866168e70e2de648588322733" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;ip_comm&lt;/code&gt;.</source>
          <target state="translated">默认值为 &lt;code&gt;ip_comm&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8782ff1b608f7224777249a71bf09d550bc8bf1d" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;keep&lt;/code&gt;.</source>
          <target state="translated">默认值为 &lt;code&gt;keep&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2c4c5118c3f5d8412fe0c9b8e75e982f7543b402" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;master&lt;/code&gt;.</source>
          <target state="translated">默认为 &lt;code&gt;master&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b3c1a88abd35aadb6735da1abb4e7f4fcffc3915" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;none&lt;/code&gt;.</source>
          <target state="translated">默认为 &lt;code&gt;none&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7701c684b76eb27396b6b989eb599f71cb73da6a" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;normal&lt;/code&gt;.</source>
          <target state="translated">默认为 &lt;code&gt;normal&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="476ab15348b30627aed06f4843dfc24e65769b47" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;passive&lt;/code&gt;.</source>
          <target state="translated">默认为 &lt;code&gt;passive&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a9ae6d5a6ab3c7108d958b405e37b1852d151d6f" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;permanent&lt;/code&gt; for the agent and &lt;code&gt;transient&lt;/code&gt; for the manager.</source>
          <target state="translated">默认值是 &lt;code&gt;permanent&lt;/code&gt; 的代理和 &lt;code&gt;transient&lt;/code&gt; 的经理。</target>
        </trans-unit>
        <trans-unit id="3fa6b78325906162002fd6f0f1f33926a394148b" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;pretty&lt;/code&gt;. If the error log is meant to be read directly by a human, &lt;code&gt;pretty&lt;/code&gt; is the best option.</source>
          <target state="translated">默认是 &lt;code&gt;pretty&lt;/code&gt; 。如果错误日志是要由人类直接读取的，那么 &lt;code&gt;pretty&lt;/code&gt; 是最好的选择。</target>
        </trans-unit>
        <trans-unit id="824599c90eea676a9778f94d7198ac68ab300a0e" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;read_write&lt;/code&gt;.</source>
          <target state="translated">默认值为 &lt;code&gt;read_write&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c9a8fadbbddfb4128a6f4b12d0a2163d03f0aaee" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;silence&lt;/code&gt;.</source>
          <target state="translated">默认值为 &lt;code&gt;silence&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="583cb8385b57b5034b1e17607ea57c59b73db1a5" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;snmpa_error_logger&lt;/code&gt;.</source>
          <target state="translated">默认值为 &lt;code&gt;snmpa_error_logger&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="02aea9736fd88d112465ccdc39b2acdaa303ea9a" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;snmpa_net_if&lt;/code&gt;.</source>
          <target state="translated">默认值为 &lt;code&gt;snmpa_net_if&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8333409a41829e3578d30c5a2a664b88443d2adc" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;snmpa_net_if_filter&lt;/code&gt;.</source>
          <target state="translated">默认值为 &lt;code&gt;snmpa_net_if_filter&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f3f17ded661bc594c2577d8869f7955e1dec73ed" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;snmpm_net_if&lt;/code&gt;.</source>
          <target state="translated">默认值为 &lt;code&gt;snmpm_net_if&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4bf4f4ced8cd0dbd7342f8e0a33f2371634694d0" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;snmpm_net_if_filter&lt;/code&gt;.</source>
          <target state="translated">默认值为 &lt;code&gt;snmpm_net_if_filter&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ddefbc20a121faa07ee1502fcea283b5b5348943" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;snmpm_user_default&lt;/code&gt;.</source>
          <target state="translated">默认值为 &lt;code&gt;snmpm_user_default&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="98566a980e52f27b9521d262f661e39d3666ac32" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;stream&lt;/code&gt; for all port types and &lt;code&gt;use_stdio&lt;/code&gt; for spawned ports.</source>
          <target state="translated">对于所有端口类型，默认为 &lt;code&gt;stream&lt;/code&gt; ；对于衍生端口，默认为 &lt;code&gt;use_stdio&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f0ecd2bb96adff619cc4f4a9fad4c2005a003cb0" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">默认值为 &lt;code&gt;string&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="039d36752eeb0d82eb069457f07a973a6abe9ceb" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;temporary&lt;/code&gt;.</source>
          <target state="translated">默认是 &lt;code&gt;temporary&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1aa3539f64ee2e4fbc7c9c9a66ad5a7207dece79" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;terminate&lt;/code&gt;.</source>
          <target state="translated">默认为 &lt;code&gt;terminate&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ed3bc5199c2686242ae7e3ed5925c3d673b0c871" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;true&lt;/code&gt; (in which case the &lt;code&gt;mibs_cache_opts()&lt;/code&gt; default values apply).</source>
          <target state="translated">默认值为 &lt;code&gt;true&lt;/code&gt; （在这种情况下，将应用 &lt;code&gt;mibs_cache_opts()&lt;/code&gt; 默认值）。</target>
        </trans-unit>
        <trans-unit id="d6280f20eddaf95212e23f7edad94611d8e1ed85" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">默认值为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1253ee2d3a07d43671dc921b852a1fa5eea9c9a7" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">默认值是 &lt;code&gt;undefined&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1eecd316e90841ac2787732bb944207775a8dc08" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;volatile&lt;/code&gt;.</source>
          <target state="translated">默认值为 &lt;code&gt;volatile&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1bb1c08d29b235663689779ac34a672deb282ea2" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;{os_sup, error_report, [Tag]}&lt;/code&gt; which will send the event to the error logger using &lt;code&gt;error_logger:error_report(Tag, Msg)&lt;/code&gt;. &lt;code&gt;Tag&lt;/code&gt; is the value of &lt;code&gt;os_sup_errortag&lt;/code&gt;, see below.</source>
          <target state="translated">默认值为 &lt;code&gt;{os_sup, error_report, [Tag]}&lt;/code&gt; ，它将使用 &lt;code&gt;error_logger:error_report(Tag, Msg)&lt;/code&gt; 将事件发送到错误记录器。 &lt;code&gt;Tag&lt;/code&gt; 是 &lt;code&gt;os_sup_errortag&lt;/code&gt; 的值，请参见下文。</target>
        </trans-unit>
        <trans-unit id="6c4ecf6fb8d5be6f69f1fc0017367a0d5c711bc1" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;{time, local}&lt;/code&gt;.</source>
          <target state="translated">默认值为 &lt;code&gt;{time, local}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d208a95fdc67c4fd0bd4148b35827256b12320f8" translate="yes" xml:space="preserve">
          <source>Default is [{&quot;html&quot;,&quot;text/html&quot;},{&quot;htm&quot;,&quot;text/html&quot;}].</source>
          <target state="translated">默认为[{&quot;html&quot;,&quot;text/html&quot;},{&quot;htm&quot;,&quot;text/html&quot;}]。</target>
        </trans-unit>
        <trans-unit id="5d8623ebaa6d15c1de36a7c88d7fa400d0bde5d5" translate="yes" xml:space="preserve">
          <source>Default is the &lt;code&gt;pid&lt;/code&gt; of the process calling the request function (&lt;code&gt;self()&lt;/code&gt;).</source>
          <target state="translated">默认值为调用请求函数（ &lt;code&gt;self()&lt;/code&gt; ）的进程的 &lt;code&gt;pid&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="783669ec8b6d87f9bb3c77a3c2c1798cfbb74182" translate="yes" xml:space="preserve">
          <source>Default is the result of the call: &lt;code&gt;erlang:nodes()&lt;/code&gt;.</source>
          <target state="translated">默认是调用的结果： &lt;code&gt;erlang:nodes()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b71f9247e18ef64c373b1e8d97d0a1f2636d8a9e" translate="yes" xml:space="preserve">
          <source>Default is the string &lt;code&gt;&quot;HTTP/1.1&quot;&lt;/code&gt;.</source>
          <target state="translated">默认值为字符串 &lt;code&gt;&quot;HTTP/1.1&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="18601ac2fc7e17710f0915e6b5ef05bb27887ee0" translate="yes" xml:space="preserve">
          <source>Default is the value of option &lt;code&gt;timeout&lt;/code&gt;.</source>
          <target state="translated">默认值为选项 &lt;code&gt;timeout&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="cc208dc708b71e87679976d29c68a033547cde17" translate="yes" xml:space="preserve">
          <source>Default mode is &lt;code&gt;interactive&lt;/code&gt; and extra &lt;code&gt;-mode&lt;/code&gt; flags are ignored.</source>
          <target state="translated">默认模式是 &lt;code&gt;interactive&lt;/code&gt; ，多余的 &lt;code&gt;-mode&lt;/code&gt; 标志被忽略。</target>
        </trans-unit>
        <trans-unit id="836f7284a59cd3d69df487640b2cf6b694a06d08" translate="yes" xml:space="preserve">
          <source>Default mode is &lt;code&gt;interactive&lt;/code&gt;.</source>
          <target state="translated">默认模式为 &lt;code&gt;interactive&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1b39ce8d2a520c8a3189fbf2ba97367df84a7024" translate="yes" xml:space="preserve">
          <source>Default module is &lt;code&gt;snmpa_mib_data_tttn&lt;/code&gt;.</source>
          <target state="translated">默认模块是 &lt;code&gt;snmpa_mib_data_tttn&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4361c6aead9bf47c00983b19bb5ca98e6c0b9e32" translate="yes" xml:space="preserve">
          <source>Default module is &lt;code&gt;snmpa_mib_storage_ets&lt;/code&gt;.</source>
          <target state="translated">默认模块是 &lt;code&gt;snmpa_mib_storage_ets&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5c80fcde5171c6815b1e3964a4d234c76dddfa21" translate="yes" xml:space="preserve">
          <source>Default option &lt;code&gt;verify_fun&lt;/code&gt; in &lt;code&gt;verify_peer mode&lt;/code&gt;:</source>
          <target state="translated">默认选项 &lt;code&gt;verify_fun&lt;/code&gt; 在 &lt;code&gt;verify_peer mode&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="31429f346872d95ecb9c76abf4b205c65c1f8ca7" translate="yes" xml:space="preserve">
          <source>Default option &lt;code&gt;verify_fun&lt;/code&gt; in mode &lt;code&gt;verify_none&lt;/code&gt;:</source>
          <target state="translated">缺省选项 &lt;code&gt;verify_fun&lt;/code&gt; 在 &lt;code&gt;verify_none&lt;/code&gt; 模式下：</target>
        </trans-unit>
        <trans-unit id="aff9b6a0cc8d187932f4b11c2a77c60d5fec8eeb" translate="yes" xml:space="preserve">
          <source>Default reply data.</source>
          <target state="translated">默认回复数据。</target>
        </trans-unit>
        <trans-unit id="b63a0128b981003c7392f66006bc8c7ac20272c5" translate="yes" xml:space="preserve">
          <source>Default system error handler.</source>
          <target state="translated">默认的系统错误处理程序。</target>
        </trans-unit>
        <trans-unit id="6345856a0e8a3d956cb3c0995f0d25360c0d6319" translate="yes" xml:space="preserve">
          <source>Default template: &lt;code&gt;[[logger_formatter,header],&quot;\n&quot;,msg,&quot;\n&quot;]&lt;/code&gt;</source>
          <target state="translated">默认模板： &lt;code&gt;[[logger_formatter,header],&quot;\n&quot;,msg,&quot;\n&quot;]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1942e11960cdd6259d20b87d5f9bc7a4248b22d5" translate="yes" xml:space="preserve">
          <source>Default template: &lt;code&gt;[time,&quot; &quot;,level,&quot;: &quot;,msg,&quot;\n&quot;]&lt;/code&gt;</source>
          <target state="translated">默认模板： &lt;code&gt;[time,&quot; &quot;,level,&quot;: &quot;,msg,&quot;\n&quot;]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="664fc60eaa20c7a7e9d4be3ec2ea124a631c3101" translate="yes" xml:space="preserve">
          <source>Default template: &lt;code&gt;[time,&quot; &quot;,level,&quot;:\n&quot;,msg,&quot;\n&quot;]&lt;/code&gt;</source>
          <target state="translated">默认模板： &lt;code&gt;[time,&quot; &quot;,level,&quot;:\n&quot;,msg,&quot;\n&quot;]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="61a2b276c7fde0e02f0fb3993af1f245686b3e4f" translate="yes" xml:space="preserve">
          <source>Default value for the receive buffer option is &lt;code&gt;{recbuf, 8192}&lt;/code&gt;.</source>
          <target state="translated">接收缓冲区选项的默认值为 &lt;code&gt;{recbuf, 8192}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6f32e1785986f4e170072de77fe30bc73ea07e4e" translate="yes" xml:space="preserve">
          <source>Default value is &lt;code&gt;true&lt;/code&gt; which is compatible with other implementations not supporting ext-info.</source>
          <target state="translated">默认值为 &lt;code&gt;true&lt;/code&gt; ，它与不支持ext-info的其他实现兼容。</target>
        </trans-unit>
        <trans-unit id="825d33c0e6c00fe0704eb917d81ad7fed913518e" translate="yes" xml:space="preserve">
          <source>Default value is defined by &lt;code&gt;gen_udp&lt;/code&gt;.</source>
          <target state="translated">默认值由 &lt;code&gt;gen_udp&lt;/code&gt; 定义。</target>
        </trans-unit>
        <trans-unit id="c8765aedbac4aa3ec544b11551b448c12b41e250" translate="yes" xml:space="preserve">
          <source>Default values are used when specifications are missing. The default values are described in &lt;code&gt;&lt;a href=&quot;#Defaults&quot;&gt;Defaults&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">缺少规格时使用默认值。的默认值中描述 &lt;code&gt;&lt;a href=&quot;#Defaults&quot;&gt;Defaults&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="32a4bde0d9736765660a5f74143c3437da772412" translate="yes" xml:space="preserve">
          <source>Default values can be omitted from the map:</source>
          <target state="translated">可以省略地图中的默认值。</target>
        </trans-unit>
        <trans-unit id="fc39e685b2778c4e98cf974180c49b56c36d42a5" translate="yes" xml:space="preserve">
          <source>Default values defined in &lt;code&gt;ct_telnet&lt;/code&gt;:</source>
          <target state="translated">在 &lt;code&gt;ct_telnet&lt;/code&gt; 中定义的默认值：</target>
        </trans-unit>
        <trans-unit id="b7183d64a08aa8ed12db72af8178cbcbead5abc2" translate="yes" xml:space="preserve">
          <source>Default values:</source>
          <target state="translated">默认值:</target>
        </trans-unit>
        <trans-unit id="7f0559e313c328246d0decbb94ea54afe197ded0" translate="yes" xml:space="preserve">
          <source>Default. Means that no other state is active.</source>
          <target state="translated">默认值。表示没有其他状态。</target>
        </trans-unit>
        <trans-unit id="70adfbfcb94190bf4179c1b1656700b9b3dc5706" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;10&lt;/code&gt;</source>
          <target state="translated">默认值： &lt;code&gt;10&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d00f49230f8eb1c5a5adb3964d423b4453b7a085" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;20&lt;/code&gt;</source>
          <target state="translated">默认值： &lt;code&gt;20&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6c3230c6cb67eb67fb80df55aa548813d92e446d" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;5&lt;/code&gt;</source>
          <target state="translated">默认值： &lt;code&gt;5&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f0d2ade6dd141a227cc25a3824eb535788748499" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;[name,id,tries,colls,ratio,time,duration]&lt;/code&gt;</source>
          <target state="translated">默认值： &lt;code&gt;[name,id,tries,colls,ratio,time,duration]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3da629c4c0d822fd8ecf65c6b3b3727cc9e5c7ea" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;[{tries, 0}, {colls, 0}, {time, 0}]&lt;/code&gt;</source>
          <target state="translated">默认值： &lt;code&gt;[{tries, 0}, {colls, 0}, {time, 0}]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="614188609a5c964071cad1f8bd6a9a468d7e820f" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">默认值： &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8d44b52badae592255cd6418c71a1a5eea3c03a9" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;on&lt;/code&gt;</source>
          <target state="translated">默认值： &lt;code&gt;on&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f73ad54e1062b8542a391081f27b1fffcc0b45f6" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;runtime&lt;/code&gt; (&lt;code&gt;reductions&lt;/code&gt; if &lt;code&gt;tracing=off&lt;/code&gt;)</source>
          <target state="translated">默认值： &lt;code&gt;runtime&lt;/code&gt; （如果 &lt;code&gt;tracing=off&lt;/code&gt; 则 &lt;code&gt;reductions&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="2b30d6df2867f1947ef6baaea120ba39f3c9fc74" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;time&lt;/code&gt;</source>
          <target state="translated">默认值： &lt;code&gt;time&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4d0b83b26a1706be41ebbd280d1bc7d8f1a895a8" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">默认值： &lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="36a3365955b62edce26a680e752008adf273fb56" translate="yes" xml:space="preserve">
          <source>Defaults to 0.</source>
          <target state="translated">默认值为0。</target>
        </trans-unit>
        <trans-unit id="1c473c06b282c91c0a27085833e241188b333237" translate="yes" xml:space="preserve">
          <source>Defaults to 1000.</source>
          <target state="translated">默认值为1000。</target>
        </trans-unit>
        <trans-unit id="5ead577e24307a5c99c0f4ecf428d17e8652a018" translate="yes" xml:space="preserve">
          <source>Defaults to 10000.</source>
          <target state="translated">默认值为10000。</target>
        </trans-unit>
        <trans-unit id="7f84e3e77aef438713e4f9a144685be7927ee808" translate="yes" xml:space="preserve">
          <source>Defaults to 24 if &lt;code&gt;pixel_height&lt;/code&gt; is not defined.</source>
          <target state="translated">如果 &lt;code&gt;pixel_height&lt;/code&gt; 则默认为24 。</target>
        </trans-unit>
        <trans-unit id="8bbf4adabf764efed0ba9a7d683910f655b556c3" translate="yes" xml:space="preserve">
          <source>Defaults to 30000 for a connecting transport and 60000 for a listening transport.</source>
          <target state="translated">连接传输的默认值为30000,监听传输的默认值为60000。</target>
        </trans-unit>
        <trans-unit id="11e018035b675d6f670c8f153947ef8ac85b7eb7" translate="yes" xml:space="preserve">
          <source>Defaults to 5000.</source>
          <target state="translated">默认值为5000。</target>
        </trans-unit>
        <trans-unit id="4bbad1989c36321a1ecee068995c94a0209bd094" translate="yes" xml:space="preserve">
          <source>Defaults to 80 if &lt;code&gt;pixel_width&lt;/code&gt; is not defined.</source>
          <target state="translated">如果 &lt;code&gt;pixel_width&lt;/code&gt; 则默认为80 。</target>
        </trans-unit>
        <trans-unit id="f5c4b70cd07c6f3fefad18281c5f031ba151a7d6" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;$ROOT/bin/start.boot&lt;/code&gt;.</source>
          <target state="translated">默认为 &lt;code&gt;$ROOT/bin/start.boot&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c8fe4a5bec5903fc3d46f4989fc56e7929f7b1f3" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;$T&lt;/code&gt;.</source>
          <target state="translated">默认为 &lt;code&gt;$T&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e2065f7c8a0f6845b78a98fceca8a4f710d9e7f8" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">默认为 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="53178f9f32a4938924c6d5d4ab9abd83467d70a6" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;1000&lt;/code&gt; messages.</source>
          <target state="translated">默认为 &lt;code&gt;1000&lt;/code&gt; 条消息。</target>
        </trans-unit>
        <trans-unit id="c5488a8a32c4ac6ccbcf58d027426545f1e03865" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;1000&lt;/code&gt; milliseconds.</source>
          <target state="translated">默认为 &lt;code&gt;1000&lt;/code&gt; 毫秒。</target>
        </trans-unit>
        <trans-unit id="bc6c9c0faafb4bc4adbcca4ac898a06ee21bc36c" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;1048576&lt;/code&gt; bytes for a wrap log, and &lt;code&gt;infinity&lt;/code&gt; for a halt log.</source>
          <target state="translated">包装日志的默认值是 &lt;code&gt;1048576&lt;/code&gt; 字节，暂停日志的默认值是 &lt;code&gt;infinity&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e0b128b4dbe959f1b84e447f04848fbb51f90d3d" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;10&lt;/code&gt; messages.</source>
          <target state="translated">默认为 &lt;code&gt;10&lt;/code&gt; 条消息。</target>
        </trans-unit>
        <trans-unit id="b2a703753b27a0abf40f8e330a438a4f253fe3b4" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;10&lt;/code&gt;.</source>
          <target state="translated">默认为 &lt;code&gt;10&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d47d43bbd8194f05aa2126c9fdf11bf2b90aa118" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;16777215&lt;/code&gt;, the maximum value of the 24-bit Message Length field in a Diameter Header.</source>
          <target state="translated">默认值为 &lt;code&gt;16777215&lt;/code&gt; ，这是Diameter Header中24位消息长度字段的最大值。</target>
        </trans-unit>
        <trans-unit id="1a6c0cd8935293fffa738c3dfa86f1e14e633bed" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;20000&lt;/code&gt; messages.</source>
          <target state="translated">默认为 &lt;code&gt;20000&lt;/code&gt; 条消息。</target>
        </trans-unit>
        <trans-unit id="2de0a05f7ab44eb3cd29a70953439937d9eef436" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;200&lt;/code&gt; messages.</source>
          <target state="translated">默认为 &lt;code&gt;200&lt;/code&gt; 条消息。</target>
        </trans-unit>
        <trans-unit id="b52f6e63c8d7d612910b88c453e883f91b6e2c7e" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;3000000&lt;/code&gt; bytes.</source>
          <target state="translated">默认为 &lt;code&gt;3000000&lt;/code&gt; 字节。</target>
        </trans-unit>
        <trans-unit id="39c4e7562e40896a6282525b2fe9825858f52bcd" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;5000&lt;/code&gt; milliseconds.</source>
          <target state="translated">默认为 &lt;code&gt;5000&lt;/code&gt; 毫秒。</target>
        </trans-unit>
        <trans-unit id="38ec9d7c90bd0b8b43c9b1964f5331ccd2daca47" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;500&lt;/code&gt; events.</source>
          <target state="translated">默认为 &lt;code&gt;500&lt;/code&gt; 个事件。</target>
        </trans-unit>
        <trans-unit id="84a70ef8900e3c61b55b0755742c9a14cd6b1aaf" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;[]&lt;/code&gt; and defines other modules that &lt;code&gt;Mod&lt;/code&gt; is dependent on. In the &lt;code&gt;relup&lt;/code&gt; file, instructions for suspending processes using &lt;code&gt;Mod&lt;/code&gt; come before instructions for suspending processes using modules in &lt;code&gt;DepMods&lt;/code&gt; when upgrading, and conversely when downgrading. In case of circular dependencies, the order of the instructions in the &lt;code&gt;appup&lt;/code&gt; file is kept.</source>
          <target state="translated">默认为 &lt;code&gt;[]&lt;/code&gt; ,并定义 &lt;code&gt;Mod&lt;/code&gt; 依赖的其他模块。在 &lt;code&gt;relup&lt;/code&gt; 文件中，使用 &lt;code&gt;Mod&lt;/code&gt; 挂起进程的说明先于使用 &lt;code&gt;DepMods&lt;/code&gt; 中的模块挂起进程的说明，而升级时则相反。在循环依赖的情况下，指令在 &lt;code&gt;appup&lt;/code&gt; 文件中的顺序保持不变。</target>
        </trans-unit>
        <trans-unit id="4cbe92557a6b56a9c2102b63e42df44493fb47be" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">默认为 &lt;code&gt;[]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2a92a35d8c1a6f0b0941ef0143cd19e8c46e8ed1" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;[]&lt;/code&gt;. See &lt;code&gt;ssl:connect/[2,3,4]&lt;/code&gt; for available options.</source>
          <target state="translated">默认为 &lt;code&gt;[]&lt;/code&gt; 。有关可用选项，请参见 &lt;code&gt;ssl:connect/[2,3,4]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6be1bea9f2514a3d8277595da41e2022a0e549b7" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;[raw,append,delayed_write]&lt;/code&gt;.</source>
          <target state="translated">默认为 &lt;code&gt;[raw,append,delayed_write]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ccd1ad72444be1eb8a1d63fdae5010212ed0d0d8" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;[{okay, 3}, {suspect, 1}]&lt;/code&gt;. Not specifying a key is equivalent to specifying the default value for that key.</source>
          <target state="translated">默认为 &lt;code&gt;[{okay, 3}, {suspect, 1}]&lt;/code&gt; 。不指定键等同于指定该键的默认值。</target>
        </trans-unit>
        <trans-unit id="30360ea7f303c3cd8c7ce3d6ef99f716a4cadc07" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;all&lt;/code&gt;.</source>
          <target state="translated">默认为 &lt;code&gt;all&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6956921398952b340157481518ec2a6f6b5babc3" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;answer_3xxx&lt;/code&gt;.</source>
          <target state="translated">默认为 &lt;code&gt;answer_3xxx&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="522d41ffd33ecb3637b56d627f0a78545dcaee56" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;brutal_purge&lt;/code&gt;. It controls what action to take with processes executing old code before loading the new module version. If the value is &lt;code&gt;brutal_purge&lt;/code&gt;, the processes are killed. If the value is &lt;code&gt;soft_purge&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;release_handler#install_release-1&quot;&gt;release_handler:install_release/1&lt;/a&gt;&lt;/code&gt; returns &lt;code&gt;{error,{old_processes,Mod}}&lt;/code&gt;.</source>
          <target state="translated">默认为 &lt;code&gt;brutal_purge&lt;/code&gt; 。它控制加载新模块版本之前执行旧代码的进程应采取的措施。如果值为 &lt;code&gt;brutal_purge&lt;/code&gt; ，则将终止进程。如果值为 &lt;code&gt;soft_purge&lt;/code&gt; ，则 &lt;code&gt;&lt;a href=&quot;release_handler#install_release-1&quot;&gt;release_handler:install_release/1&lt;/a&gt;&lt;/code&gt; 返回 &lt;code&gt;{error,{old_processes,Mod}}&lt;/code&gt; }。</target>
        </trans-unit>
        <trans-unit id="0a685290bcc48a7e59c7a736b4e662bd2a18eaf0" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;brutal_purge&lt;/code&gt;. It controls what action to take with processes that are executing old code when the new module version has been loaded. If the value is &lt;code&gt;brutal_purge&lt;/code&gt;, the code is purged when the release is made permanent and the processes are killed. If the value is &lt;code&gt;soft_purge&lt;/code&gt;, the release handler purges the old code when no remaining processes execute the code.</source>
          <target state="translated">默认为 &lt;code&gt;brutal_purge&lt;/code&gt; 。它控制了在加载新模块版本后对执行旧代码的进程采取什么措施。如果值为 &lt;code&gt;brutal_purge&lt;/code&gt; ，则在永久释放版本并终止进程时清除代码。如果值为 &lt;code&gt;soft_purge&lt;/code&gt; ，则在没有其余进程执行代码时，释放处理程序将清除旧代码。</target>
        </trans-unit>
        <trans-unit id="1ce18033e169b0fa040a8fe4b8fb2a3259652384" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;discard&lt;/code&gt;.</source>
          <target state="translated">默认为 &lt;code&gt;discard&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d172a78785b796eefeba8e42a879c1b464b9ce05" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;dynamic&lt;/code&gt;. It specifies if the code is &quot;dynamic&quot;, that is, if a process using the module spontaneously switches to new code, or if it is &quot;static&quot;. When doing an advanced update and upgrade, the new version of a dynamic module is loaded before the process is asked to change code. When downgrading, the process is asked to change code before loading the new version. For static modules, the new version is loaded before the process is asked to change code, both in the case of upgrading and downgrading. Callback modules are dynamic.</source>
          <target state="translated">默认为 &lt;code&gt;dynamic&lt;/code&gt; 。它指定代码是否是&amp;ldquo;动态的&amp;rdquo;，即使用模块的过程是否自发地切换到新代码，或者它是&amp;ldquo;静态的&amp;rdquo;。在进行高级更新和升级时，将在要求流程更改代码之前加载动态模块的新版本。降级时，要求过程在加载新版本之前更改代码。对于静态模块，无论是升级还是降级，都将在要求过程更改代码之前加载新版本。回调模块是动态的。</target>
        </trans-unit>
        <trans-unit id="0831256ce8ef8f30045566bf51dfd4ab6890b884" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;exit&lt;/code&gt;.</source>
          <target state="translated">默认 &lt;code&gt;exit&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7fbda095b52b5b96b9b43ccc9c243712ed4abb0f" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">默认为 &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f8652ebd1a1875dc842cac2cb6d36ca46a049174" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">默认为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="13e845a66ccbf484a674c19236ac835a8dbf0d48" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;false&lt;/code&gt;. If &lt;code&gt;true&lt;/code&gt;, the kernel does not send packets through any gateway, only sends them to directly connected hosts.</source>
          <target state="translated">默认为 &lt;code&gt;false&lt;/code&gt; 。如果为 &lt;code&gt;true&lt;/code&gt; ，则内核不通过任何网关发送数据包，仅将其发送到直接连接的主机。</target>
        </trans-unit>
        <trans-unit id="953a4643aa59d388cab6a73448461aed4568ab26" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;false&lt;/code&gt;. If true, the local binding address &lt;code&gt;{IP,Port}&lt;/code&gt; of the socket can be reused immediately. No waiting in state &lt;code&gt;CLOSE_WAIT&lt;/code&gt; is performed (can be required for high-throughput servers).</source>
          <target state="translated">默认为 &lt;code&gt;false&lt;/code&gt; 。如果为true，则可以立即重用套接字的本地绑定地址 &lt;code&gt;{IP,Port}&lt;/code&gt; 。在状态没有等待 &lt;code&gt;CLOSE_WAIT&lt;/code&gt; 被执行（可能需要用于高通量服务器）。</target>
        </trans-unit>
        <trans-unit id="2b50d011aa069d4af8ec8336db6fa786b360f117" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;full&lt;/code&gt;. If hello is specified the handshake will pause after the hello message and give the user a possibility make decisions based on hello extensions before continuing or aborting the handshake by calling &lt;code&gt;&lt;a href=&quot;#handshake_continue-3&quot;&gt; handshake_continue/3&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#handshake_cancel-1&quot;&gt; handshake_cancel/1&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">默认为 &lt;code&gt;full&lt;/code&gt; 。如果指定了hello，则握手将在hello消息后暂停，并使用户有可能基于hello扩展做出决定，然后通过调用 &lt;code&gt;&lt;a href=&quot;#handshake_continue-3&quot;&gt; handshake_continue/3&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;#handshake_cancel-1&quot;&gt; handshake_cancel/1&lt;/a&gt;&lt;/code&gt; 来继续或中止握手</target>
        </trans-unit>
        <trans-unit id="51f12c6b9e7f3c496c03d562f8756b10481cbc99" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;full&lt;/code&gt;. If hello is specified the handshake will pause after the hello message and give the user a possibility make decisions based on hello extensions before continuing or aborting the handshake by calling &lt;code&gt;&lt;a href=&quot;#handshake_continue-3&quot;&gt;handshake_continue/3&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#handshake_cancel-1&quot;&gt;handshake_cancel/1&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">默认为 &lt;code&gt;full&lt;/code&gt; 。如果指定了hello，则握手将在hello消息后暂停，并使用户可以通过调用 &lt;code&gt;&lt;a href=&quot;#handshake_continue-3&quot;&gt;handshake_continue/3&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;#handshake_cancel-1&quot;&gt;handshake_cancel/1&lt;/a&gt;&lt;/code&gt; 在继续或中止握手之前基于hello扩展做出决策。</target>
        </trans-unit>
        <trans-unit id="d64473e391bdc8d6853b0b1bf47b391002dabe55" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;infinity&lt;/code&gt;.</source>
          <target state="translated">默认为 &lt;code&gt;infinity&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3dde1c87b65d849ab2915477ed46c20097e08ca7" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;info&lt;/code&gt;.</source>
          <target state="translated">默认为 &lt;code&gt;info&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="91b5b1db30cf17391f9c5cd9c36ba6d052eed19f" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;log&lt;/code&gt;.</source>
          <target state="translated">默认为 &lt;code&gt;log&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="12f4b8f32191c9efec9785c028c7ded872158457" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;nodes&lt;/code&gt;.</source>
          <target state="translated">默认为 &lt;code&gt;nodes&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="44ef1bb45491ec49e2b4015ff47beff4ee1c84a9" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;none&lt;/code&gt;.</source>
          <target state="translated">默认为 &lt;code&gt;none&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="64c15a0676a1710adfb24403c5eb21ac4c1a0577" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;notice&lt;/code&gt;.</source>
          <target state="translated">默认为 &lt;code&gt;notice&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="21dc9a6188d73b09b12c39b4abc2ac66a03b8178" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;permanent&lt;/code&gt;</source>
          <target state="translated">默认为 &lt;code&gt;permanent&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="76b542066932542bfc670d29aecd968556be0aa1" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;plain&lt;/code&gt;.</source>
          <target state="translated">默认为 &lt;code&gt;plain&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6370e4b386b614ba3ca8765ee7664772eb41be5e" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;record&lt;/code&gt;.</source>
          <target state="translated">默认为 &lt;code&gt;record&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="37ae4e511bffa217f91b088c6056f729e5169368" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;soft&lt;/code&gt; and defines the type of code change. If it is set to &lt;code&gt;{advanced,Extra}&lt;/code&gt;, implemented processes using &lt;code&gt;gen_server&lt;/code&gt;, &lt;code&gt;gen_fsm&lt;/code&gt;, &lt;code&gt;gen_statem&lt;/code&gt;, or &lt;code&gt;gen_event&lt;/code&gt; transform their internal state by calling the callback function &lt;code&gt;code_change&lt;/code&gt;. Special processes call the callback function &lt;code&gt;system_code_change/4&lt;/code&gt;. In both cases, the term &lt;code&gt;Extra&lt;/code&gt; is passed as an argument to the callback function.</source>
          <target state="translated">默认为 &lt;code&gt;soft&lt;/code&gt; ，定义代码更改的类型。如果将其设置为 &lt;code&gt;{advanced,Extra}&lt;/code&gt; ，则使用 &lt;code&gt;gen_server&lt;/code&gt; ， &lt;code&gt;gen_fsm&lt;/code&gt; ， &lt;code&gt;gen_statem&lt;/code&gt; 或 &lt;code&gt;gen_event&lt;/code&gt; 实施的进程通过调用回调函数 &lt;code&gt;code_change&lt;/code&gt; 来转换其内部状态。特殊进程调用回调函数 &lt;code&gt;system_code_change/4&lt;/code&gt; 。在这两种情况下，术语 &lt;code&gt;Extra&lt;/code&gt; 都作为参数传递给回调函数。</target>
        </trans-unit>
        <trans-unit id="1cbe17feaca5bcbebdcbde389010ac911bbd0da8" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;standard_io&lt;/code&gt;, unless parameter &lt;code&gt;&lt;a href=&quot;#file&quot;&gt;file&lt;/a&gt;&lt;/code&gt; is given, in which case it defaults to &lt;code&gt;file&lt;/code&gt;.</source>
          <target state="translated">除非指定参数 &lt;code&gt;&lt;a href=&quot;#file&quot;&gt;file&lt;/a&gt;&lt;/code&gt; ，否则默认为 &lt;code&gt;standard_io&lt;/code&gt; ，在这种情况下，默认为 &lt;code&gt;file&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6ab3749d50e935fc08d94fe0b73cec333149500f" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;standard_io&lt;/code&gt;.</source>
          <target state="translated">默认为 &lt;code&gt;standard_io&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bf41c398ba20486556be07ab32b7f1a10f221b9a" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">默认为 &lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7d8e8d434788e741ceea90a49c2191883f6866ab" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">默认为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6366779b5031d46bbff9126998c0755304c858d9" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;unlimited&lt;/code&gt;.</source>
          <target state="translated">默认为 &lt;code&gt;unlimited&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="61c90f48d9e1f957f14bfc5f2e0ef0326213a09f" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;wrap&lt;/code&gt;.</source>
          <target state="translated">默认为 &lt;code&gt;wrap&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9f554b569e3783882152719d411d4f24f5791213" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;{0,32}&lt;/code&gt;.</source>
          <target state="translated">默认为 &lt;code&gt;{0,32}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d52403308fbf6f5d6e4000acda24e540e0fdd24b" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;{gen_tcp, tcp, tcp_closed, tcp_error, tcp_passive}&lt;/code&gt; for TLS (for backward compatibility a four tuple will be converted to a five tuple with the last element &quot;second_element&quot;_passive) and &lt;code&gt;{gen_udp, udp, udp_closed, udp_error}&lt;/code&gt; for DTLS (might also be changed to five tuple in the future). Can be used to customize the transport layer. The tag values should be the values used by the underlying transport in its active mode messages. For TLS the callback module must implement a reliable transport protocol, behave as &lt;code&gt;gen_tcp&lt;/code&gt;, and have functions corresponding to &lt;code&gt;inet:setopts/2&lt;/code&gt;, &lt;code&gt;inet:getopts/2&lt;/code&gt;, &lt;code&gt;inet:peername/1&lt;/code&gt;, &lt;code&gt;inet:sockname/1&lt;/code&gt;, and &lt;code&gt;inet:port/1&lt;/code&gt;. The callback &lt;code&gt;gen_tcp&lt;/code&gt; is treated specially and calls &lt;code&gt;inet&lt;/code&gt; directly. For DTLS this feature must be considered exprimental.</source>
          <target state="translated">对于TLS &lt;code&gt;{gen_tcp, tcp, tcp_closed, tcp_error, tcp_passive}&lt;/code&gt; 默认值为{gen_tcp，tcp，tcp_closed，tcp_error，tcp_passive}（为了向后兼容，会将四个元组转换为最后一个元素为&amp;ldquo; second_element&amp;rdquo; _passive的五个元组），对于DTLS &lt;code&gt;{gen_udp, udp, udp_closed, udp_error}&lt;/code&gt; 为{gen_udp，udp，udp，udp_closed，udp_error}（将来也可能会更改为五个元组）。可用于自定义传输层。标签值应该是基础传输在其活动模式消息中使用的值。对于TLS，回调模块必须实现可靠的传输协议，其行为类似于 &lt;code&gt;gen_tcp&lt;/code&gt; ，并且具有与 &lt;code&gt;inet:setopts/2&lt;/code&gt; ， &lt;code&gt;inet:getopts/2&lt;/code&gt; ， &lt;code&gt;inet:peername/1&lt;/code&gt; ， &lt;code&gt;inet:sockname/1&lt;/code&gt; 和 &lt;code&gt;inet:port/1&lt;/code&gt; 。回调 &lt;code&gt;gen_tcp&lt;/code&gt; 被特殊对待并直接调用 &lt;code&gt;inet&lt;/code&gt; 。对于DTLS，必须将此功能视为试验性的。</target>
        </trans-unit>
        <trans-unit id="7fb1ef1e580384d5c0064df41fd2d7b87d8c60d0" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;{gen_tcp, tcp, tcp_closed, tcp_error}&lt;/code&gt; for TLS and &lt;code&gt;{gen_udp, udp, udp_closed, udp_error}&lt;/code&gt; for DTLS. Can be used to customize the transport layer. For TLS the callback module must implement a reliable transport protocol, behave as &lt;code&gt;gen_tcp&lt;/code&gt;, and have functions corresponding to &lt;code&gt;inet:setopts/2&lt;/code&gt;, &lt;code&gt;inet:getopts/2&lt;/code&gt;, &lt;code&gt;inet:peername/1&lt;/code&gt;, &lt;code&gt;inet:sockname/1&lt;/code&gt;, and &lt;code&gt;inet:port/1&lt;/code&gt;. The callback &lt;code&gt;gen_tcp&lt;/code&gt; is treated specially and calls &lt;code&gt;inet&lt;/code&gt; directly. For DTLS this feature must be considered exprimental.</source>
          <target state="translated">对于TLS，默认为 &lt;code&gt;{gen_tcp, tcp, tcp_closed, tcp_error}&lt;/code&gt; ，对于DTLS &lt;code&gt;{gen_udp, udp, udp_closed, udp_error}&lt;/code&gt; 为{gen_udp，udp，udp_closed，udp_error}。可用于自定义传输层。对于TLS，回调模块必须实现可靠的传输协议，其行为类似于 &lt;code&gt;gen_tcp&lt;/code&gt; ，并且具有与 &lt;code&gt;inet:setopts/2&lt;/code&gt; ， &lt;code&gt;inet:getopts/2&lt;/code&gt; ， &lt;code&gt;inet:peername/1&lt;/code&gt; ， &lt;code&gt;inet:sockname/1&lt;/code&gt; 和 &lt;code&gt;inet:port/1&lt;/code&gt; 。回调 &lt;code&gt;gen_tcp&lt;/code&gt; 被特殊对待并直接调用 &lt;code&gt;inet&lt;/code&gt; 。对于DTLS，必须将此功能视为试用版。</target>
        </trans-unit>
        <trans-unit id="a36ef8c8b579780ece8b57014d59a14f703045e8" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;{logger_formatter,DefaultFormatterConfig}&lt;/code&gt;. See the &lt;code&gt;&lt;a href=&quot;logger_formatter&quot;&gt; logger_formatter(3)&lt;/a&gt;&lt;/code&gt; manual page for information about this formatter and its default configuration.</source>
          <target state="translated">默认为 &lt;code&gt;{logger_formatter,DefaultFormatterConfig}&lt;/code&gt; 。有关此格式化程序及其默认配置的信息，请参见 &lt;code&gt;&lt;a href=&quot;logger_formatter&quot;&gt; logger_formatter(3)&lt;/a&gt;&lt;/code&gt; 手册页。</target>
        </trans-unit>
        <trans-unit id="2723d088669af374903ede951d5315f3e4ecad63" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;{logger_formatter,DefaultFormatterConfig}&lt;/code&gt;. See the &lt;code&gt;&lt;a href=&quot;logger_formatter&quot;&gt;logger_formatter(3)&lt;/a&gt;&lt;/code&gt; manual page for information about this formatter and its default configuration.</source>
          <target state="translated">默认为 &lt;code&gt;{logger_formatter,DefaultFormatterConfig}&lt;/code&gt; 。有关此格式化程序及其默认配置的信息，请参见 &lt;code&gt;&lt;a href=&quot;logger_formatter&quot;&gt;logger_formatter(3)&lt;/a&gt;&lt;/code&gt; 手册页。</target>
        </trans-unit>
        <trans-unit id="4a4877b25aeb0557874f2771ad048204daff2dd2" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;strong&gt;os:getenv(&quot;TERM&quot;)&lt;/strong&gt; or &lt;strong&gt;vt100&lt;/strong&gt; if it is undefined.</source>
          <target state="translated">如果未定义，则默认为&lt;strong&gt;os：getenv（&amp;ldquo; TERM&amp;rdquo;）&lt;/strong&gt;或&lt;strong&gt;vt100&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="5bf4902176ebacf7b6ef04639b3c0bc58a615080" translate="yes" xml:space="preserve">
          <source>Defaults to a single callback returning &lt;code&gt;dpr&lt;/code&gt;.</source>
          <target state="translated">默认为返回 &lt;code&gt;dpr&lt;/code&gt; 的单个回调。</target>
        </trans-unit>
        <trans-unit id="1aeb7bf956c8442264330fd75732dcf182cccf24" translate="yes" xml:space="preserve">
          <source>Defaults to all &lt;code&gt;alloc_util&lt;/code&gt; allocators.</source>
          <target state="translated">默认为所有 &lt;code&gt;alloc_util&lt;/code&gt; 分配器。</target>
        </trans-unit>
        <trans-unit id="37dbc06bd156f28851c4999406ea15a140e43c22" translate="yes" xml:space="preserve">
          <source>Defaults to an empty string, meaning that timestamps are displayed in local time. However, for backwards compatibility, if the SASL configuration parameter &lt;code&gt; utc_log&lt;/code&gt;&lt;code&gt;=true&lt;/code&gt;, the default is changed to &lt;code&gt;&quot;Z&quot;&lt;/code&gt;, meaning that timestamps are displayed in UTC.</source>
          <target state="translated">默认为空字符串，表示时间戳以本地时间显示。但是，为了向后兼容，如果SASL配置参数 &lt;code&gt; utc_log&lt;/code&gt; &lt;code&gt;=true&lt;/code&gt; ，则默认值更改为 &lt;code&gt;&quot;Z&quot;&lt;/code&gt; ，这意味着时间戳记以UTC显示。</target>
        </trans-unit>
        <trans-unit id="f0ac5143a00f5ce7d18a4cc13733dda455bb1a8f" translate="yes" xml:space="preserve">
          <source>Defaults to an empty string, meaning that timestamps are displayed in local time. However, for backwards compatibility, if the SASL configuration parameter &lt;code&gt;utc_log&lt;/code&gt;&lt;code&gt;=true&lt;/code&gt;, the default is changed to &lt;code&gt;&quot;Z&quot;&lt;/code&gt;, meaning that timestamps are displayed in UTC.</source>
          <target state="translated">默认为空字符串，表示时间戳以本地时间显示。但是，为了向后兼容，如果SASL配置参数 &lt;code&gt;utc_log&lt;/code&gt; &lt;code&gt;=true&lt;/code&gt; ，则默认值更改为 &lt;code&gt;&quot;Z&quot;&lt;/code&gt; ，这意味着时间戳记以UTC显示。</target>
        </trans-unit>
        <trans-unit id="5f72ec9715cf0c8fe6b53ad5118ecaee6a1444fb" translate="yes" xml:space="preserve">
          <source>Defaults to false. When revocation status can not be determined, and this option is set to true, details of why no CRLs where accepted are included in the return value.</source>
          <target state="translated">默认值为false。当无法确定撤销状态,且该选项被设置为 &quot;true &quot;时,返回值中会包含没有接受CRL的详细原因。</target>
        </trans-unit>
        <trans-unit id="5da63f3b55682aa18c5a32ed0247c3aeb64b241f" translate="yes" xml:space="preserve">
          <source>Defaults to false. When revocation status cannot be determined, and this option is set to true, details of why no CRLs where accepted are included in the return value.</source>
          <target state="translated">默认值为false。当无法确定撤销状态,且该选项被设置为 &quot;true &quot;时,返回值中会包含没有接受CRL的详细原因。</target>
        </trans-unit>
        <trans-unit id="a9c571aa87a4ea8780cc596adc181a13cc52660d" translate="yes" xml:space="preserve">
          <source>Defaults to the empty list.</source>
          <target state="translated">默认为空列表。</target>
        </trans-unit>
        <trans-unit id="5c6daa2ef0293bdd73305dd1ac0a4f531b1e327a" translate="yes" xml:space="preserve">
          <source>Defaults to the global value, see &lt;code&gt;&lt;a href=&quot;#use_registry-1&quot;&gt;use_registry/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">默认为全局值，请参见 &lt;code&gt;&lt;a href=&quot;#use_registry-1&quot;&gt;use_registry/1&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1a602b5bd8602734698e6b74c4b2eb3bebd9ec5f" translate="yes" xml:space="preserve">
          <source>Defaults to the same name as the handler identity, in the current directory.</source>
          <target state="translated">默认为与当前目录下的处理人身份相同的名称。</target>
        </trans-unit>
        <trans-unit id="5c1b598a9dd6b020bfbeff63f48d339b7d94c998" translate="yes" xml:space="preserve">
          <source>Defaults to true. Changing this results in non-standard behaviour, but can be useful in case peers are known to be behave badly.</source>
          <target state="translated">默认值为true。更改此选项会导致非标准行为,但在已知对等体行为不良的情况下会很有用。</target>
        </trans-unit>
        <trans-unit id="0982d7e5e82334b22ff94f51c5370cd83faae268" translate="yes" xml:space="preserve">
          <source>Define a schema</source>
          <target state="translated">定义一个模式</target>
        </trans-unit>
        <trans-unit id="882b400816f92577d672d3e508d0aa21feed8f76" translate="yes" xml:space="preserve">
          <source>Define event transforms and trace patterns</source>
          <target state="translated">定义事件转换和跟踪模式</target>
        </trans-unit>
        <trans-unit id="4d666916161b40fc59569c57c3349af6fa63e5cc" translate="yes" xml:space="preserve">
          <source>Defined return values (&lt;code&gt;Res&lt;/code&gt;):</source>
          <target state="translated">定义的返回值（ &lt;code&gt;Res&lt;/code&gt; ）：</target>
        </trans-unit>
        <trans-unit id="4bffcbb88c92d5f5e8def19813cd6f8415452e0d" translate="yes" xml:space="preserve">
          <source>Defines IN, OUT, and IN OUT Parameter Modes for stored procedures.</source>
          <target state="translated">为存储过程定义IN、OUT和IN OUT参数模式。</target>
        </trans-unit>
        <trans-unit id="5d39f449b4476d977b2d160efea17cdc9d0fc162" translate="yes" xml:space="preserve">
          <source>Defines Name as the prefix to be added to record and constant names (followed by a &lt;code&gt;'_'&lt;/code&gt; character) in the generated dictionary module and hrl. Can occur at most once. The section has empty content.</source>
          <target state="translated">将Name定义为要添加到记录的前缀，并在生成的字典模块和hrl中添加常量名称（后跟 &lt;code&gt;'_'&lt;/code&gt; 字符）。最多可以发生一次。该部分内容为空。</target>
        </trans-unit>
        <trans-unit id="609bc29f4c403d67eaebd3cb403a0166271c206a" translate="yes" xml:space="preserve">
          <source>Defines a macro &lt;code&gt;Macro&lt;/code&gt; to have the value &lt;code&gt;Value&lt;/code&gt;. &lt;code&gt;Macro&lt;/code&gt; is of type atom, and &lt;code&gt;Value&lt;/code&gt; can be any term. The default &lt;code&gt;Value&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">将宏 &lt;code&gt;Macro&lt;/code&gt; 定义为具有值 &lt;code&gt;Value&lt;/code&gt; 。 &lt;code&gt;Macro&lt;/code&gt; 是原子类型，并且 &lt;code&gt;Value&lt;/code&gt; 可以是任何术语。默认 &lt;code&gt;Value&lt;/code&gt; 是 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3bac3f71adee6ba32f5f8a7e3e619bf2d31d8a7d" translate="yes" xml:space="preserve">
          <source>Defines a macro with the specified value. The value can be any Erlang term. Depending on the platform, the value may need to be quoted if the shell itself interprets certain characters. On Unix, terms containing tuples and lists must be quoted. Terms containing spaces must be quoted on all platforms.</source>
          <target state="translated">定义一个具有指定值的宏。这个值可以是任何Erlang术语。根据不同的平台,如果shell本身对某些字符进行解释,那么这个值可能需要加引号。在Unix上,包含元组和列表的术语必须加引号。在所有平台上,包含空格的术语都必须加引号。</target>
        </trans-unit>
        <trans-unit id="87b45348a5a65ba584d87598b64a79625d78869a" translate="yes" xml:space="preserve">
          <source>Defines a macro.</source>
          <target state="translated">定义一个宏。</target>
        </trans-unit>
        <trans-unit id="5067743fbb5608af4e82f23863d916044fcd2d5d" translate="yes" xml:space="preserve">
          <source>Defines a record in the shell. &lt;code&gt;RecordName&lt;/code&gt; is an atom and &lt;code&gt;RecordDefinition&lt;/code&gt; lists the field names and the default values. Usually record definitions are made known to the shell by use of the &lt;code&gt;rr/1,2,3&lt;/code&gt; commands described below, but sometimes it is handy to define records on the fly.</source>
          <target state="translated">在外壳中定义一条记录。 &lt;code&gt;RecordName&lt;/code&gt; 是一个原子，而 &lt;code&gt;RecordDefinition&lt;/code&gt; 列出了字段名称和默认值。通常，通过使用下面描述的 &lt;code&gt;rr/1,2,3&lt;/code&gt; 命令使外壳知道记录定义，但是有时方便地动态定义记录。</target>
        </trans-unit>
        <trans-unit id="9a226b7a7b33a171b2ec57540c6cfc0682e53d67" translate="yes" xml:space="preserve">
          <source>Defines a set of hosts to be denied access to a given directory, for example:</source>
          <target state="translated">定义了一组拒绝访问给定目录的主机,例如。</target>
        </trans-unit>
        <trans-unit id="59ff54c12b14765a3537d0b0c2c65171ac69c20e" translate="yes" xml:space="preserve">
          <source>Defines a set of hosts to be granted access to a given directory, for example:</source>
          <target state="translated">定义了一组被授予访问给定目录的主机,例如。</target>
        </trans-unit>
        <trans-unit id="1aaa5c87233a02bd21805f36049c813ccf7f2391" translate="yes" xml:space="preserve">
          <source>Defines a subsystem in the daemon.</source>
          <target state="translated">在守护进程中定义一个子系统。</target>
        </trans-unit>
        <trans-unit id="074ed9c9032b75b4b0e85e61d2ac39b09ac35dbf" translate="yes" xml:space="preserve">
          <source>Defines an error report module, implementing the &lt;code&gt;&lt;a href=&quot;snmpa_error_report&quot;&gt;snmpa_error_report&lt;/a&gt;&lt;/code&gt; behaviour. Two modules are provided with the toolkit: &lt;code&gt;snmpa_error_logger&lt;/code&gt; and &lt;code&gt;snmpa_error_io&lt;/code&gt;.</source>
          <target state="translated">定义一个错误报告模块，实现 &lt;code&gt;&lt;a href=&quot;snmpa_error_report&quot;&gt;snmpa_error_report&lt;/a&gt;&lt;/code&gt; 行为。该工具包提供了两个模块： &lt;code&gt;snmpa_error_logger&lt;/code&gt; 和 &lt;code&gt;snmpa_error_io&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c6b4ecfe0e81da96273a7bb0d22856dbd7f7a054" translate="yes" xml:space="preserve">
          <source>Defines how old the entries in the cache will be allowed to become before they are GC'ed (assuming GC is performed). Each entry in the cache is &quot;touched&quot; whenever it is accessed.</source>
          <target state="translated">定义缓存中的条目在被GC'ed之前的年龄(假设执行了GC)。缓存中的每个条目在被访问时都会被 &quot;触及&quot;。</target>
        </trans-unit>
        <trans-unit id="8048465e6b8105c68df3237f5826618a0928119c" translate="yes" xml:space="preserve">
          <source>Defines how the client delivers the result of an asynchronous request (&lt;code&gt;sync&lt;/code&gt; has the value &lt;code&gt;false&lt;/code&gt;).</source>
          <target state="translated">定义客户端如何传递异步请求的结果（ &lt;code&gt;sync&lt;/code&gt; 的值为 &lt;code&gt;false&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="325860f7335ea21a55d12345565d8cbbe5c59b03" translate="yes" xml:space="preserve">
          <source>Defines if a &quot;full result&quot; is to be returned to the caller (that is, the body, the headers, and the entire status line) or not (the body and the status code).</source>
          <target state="translated">定义是否将 &quot;完整结果 &quot;返回给调用者(即主体、头文件和整个状态行)或不返回(主体和状态代码)。</target>
        </trans-unit>
        <trans-unit id="b2500a87e36c92d6066a1bdba062a6613b175ba4" translate="yes" xml:space="preserve">
          <source>Defines if access logs are to be written according to the &lt;code&gt;common&lt;/code&gt; log format or the extended common log format. The &lt;code&gt;common&lt;/code&gt; format is one line looking like this: &lt;code&gt;remotehost rfc931 authuser [date] &quot;request&quot; status bytes&lt;/code&gt;.</source>
          <target state="translated">定义是根据 &lt;code&gt;common&lt;/code&gt; 日志格式还是扩展的公共日志格式写入访问日志。的 &lt;code&gt;common&lt;/code&gt; 格式是一个线看起来像这样： &lt;code&gt;remotehost rfc931 authuser [date] &quot;request&quot; status bytes&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="71a5abb240fe4b4d8e7cf100b1eec791e00989d5" translate="yes" xml:space="preserve">
          <source>Defines if the body is to be delivered as a string or binary. This option is only valid for the synchronous request.</source>
          <target state="translated">定义body是以字符串还是二进制形式传送。这个选项只对同步请求有效。</target>
        </trans-unit>
        <trans-unit id="ee2ef90cd00730b5bd40d9417a7056e8275b7c19" translate="yes" xml:space="preserve">
          <source>Defines if the headers provided by the user are to be made lower case or to be regarded as case sensitive.</source>
          <target state="translated">定义用户提供的标题是小写还是区分大小写。</target>
        </trans-unit>
        <trans-unit id="6766740e1750090ffa239838dcb00c9a031e0757" translate="yes" xml:space="preserve">
          <source>Defines if the mib server shall perform cache gc automatically or leave it to the user (see &lt;code&gt;&lt;a href=&quot;snmpa#gc_mibs_cache&quot;&gt;gc_mibs_cache/0,1,2,3&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">定义mib服务器将自动执行缓存gc还是将其留给用户（请参阅 &lt;code&gt;&lt;a href=&quot;snmpa#gc_mibs_cache&quot;&gt;gc_mibs_cache/0,1,2,3&lt;/a&gt;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="af70eeb1554459fba2775708e0df2d3c1b28492b" translate="yes" xml:space="preserve">
          <source>Defines if the node is to be restarted (&lt;code&gt;init:restart()&lt;/code&gt;) or rebooted (&lt;code&gt;init:reboot()&lt;/code&gt;) if there is an error during the installation. Default is &lt;code&gt;restart&lt;/code&gt;.</source>
          <target state="translated">定义是否在安装过程中发生错误时重新启动节点（ &lt;code&gt;init:restart()&lt;/code&gt; ）或重新启动节点（ &lt;code&gt;init:reboot()&lt;/code&gt; ）。默认为 &lt;code&gt;restart&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="280e3e6348482ff07568b5ca3c33d57dc63eeb97" translate="yes" xml:space="preserve">
          <source>Defines mnesia_frag_hash callback behavior</source>
          <target state="translated">定义mnesia_frag_hash回调行为。</target>
        </trans-unit>
        <trans-unit id="0a24f69fae69d369096b47e94b88ca5713eb2906" translate="yes" xml:space="preserve">
          <source>Defines options specific for the SNMP agent local database.</source>
          <target state="translated">定义SNMP代理本地数据库的特定选项。</target>
        </trans-unit>
        <trans-unit id="448e51bc79def417e8e31e1bb15194cd78eb1614" translate="yes" xml:space="preserve">
          <source>Defines options specific for the SNMP agent mib server cache.</source>
          <target state="translated">定义了SNMP代理mib服务器缓存的特定选项。</target>
        </trans-unit>
        <trans-unit id="9a3e410d52d2f46576687ddea235ff538ee44a63" translate="yes" xml:space="preserve">
          <source>Defines options specific for the SNMP agent mib server.</source>
          <target state="translated">定义了SNMP代理mib服务器的特定选项。</target>
        </trans-unit>
        <trans-unit id="4c3978c256e0b33ce03888b7171e8a1bbb4a9300" translate="yes" xml:space="preserve">
          <source>Defines options specific for the SNMP agent network interface entity.</source>
          <target state="translated">定义SNMP代理网络接口实体的特定选项。</target>
        </trans-unit>
        <trans-unit id="c13862dc02952f1cb8a5acf655e61278d4c4d6f0" translate="yes" xml:space="preserve">
          <source>Defines options specific for the SNMP agent symbolic store.</source>
          <target state="translated">定义了SNMP代理符号存储的特定选项。</target>
        </trans-unit>
        <trans-unit id="7c2fd7fdb90197f87c9cc1fb0ec6b3858f3ed452" translate="yes" xml:space="preserve">
          <source>Defines options specific for the SNMP agent target cache.</source>
          <target state="translated">定义了SNMP代理目标缓存的特定选项。</target>
        </trans-unit>
        <trans-unit id="14ac5b70bd36656ab02243121fbe4f2970c88813" translate="yes" xml:space="preserve">
          <source>Defines options specific for the SNMP manager network interface entity.</source>
          <target state="translated">定义SNMP管理器网络接口实体的特定选项。</target>
        </trans-unit>
        <trans-unit id="2ccf672aecad512841e5a57a27a445c20cfeef4e" translate="yes" xml:space="preserve">
          <source>Defines specific config related options for the SNMP agent.</source>
          <target state="translated">定义了SNMP代理的特定配置相关选项。</target>
        </trans-unit>
        <trans-unit id="aa7e46ce4026b52c7aac7efcdf2cbb26cf6993c0" translate="yes" xml:space="preserve">
          <source>Defines specific config related options for the SNMP manager.</source>
          <target state="translated">定义了SNMP管理器的特定配置相关选项。</target>
        </trans-unit>
        <trans-unit id="8f84dd3a08af774339e18ca1f21b53eb0e7c6242" translate="yes" xml:space="preserve">
          <source>Defines test case groups. For details, see section &lt;code&gt;&lt;a href=&quot;write_test_chapter#test_case_groups&quot;&gt;Test Case Groups&lt;/a&gt;&lt;/code&gt; in the User's Guide.</source>
          <target state="translated">定义测试用例组。有关详细信息，请参见《用户指南》中的&amp;ldquo; &lt;code&gt;&lt;a href=&quot;write_test_chapter#test_case_groups&quot;&gt;Test Case Groups&lt;/a&gt;&lt;/code&gt; &amp;rdquo;部分。</target>
        </trans-unit>
        <trans-unit id="485d2ed24e2a155e448ab4d850db85d797d4fb60" translate="yes" xml:space="preserve">
          <source>Defines the &lt;code&gt;StopAction&lt;/code&gt;, the command given to the Erlang shell when the service is stopped. Default is none.</source>
          <target state="translated">定义 &lt;code&gt;StopAction&lt;/code&gt; ，即服务停止时提供给Erlang shell的命令。默认为无。</target>
        </trans-unit>
        <trans-unit id="d7960cdd45e01d2dab8818d58ee4d9fe2fd5b051" translate="yes" xml:space="preserve">
          <source>Defines the API for the TLS session cache so that the data storage scheme can be replaced by defining a new callback module implementing this API.</source>
          <target state="translated">定义了TLS会话缓存的API,所以可以通过定义一个新的回调模块实现这个API来替换数据存储方案。</target>
        </trans-unit>
        <trans-unit id="104598b87946384fe60c79195fbf234f082e25d4" translate="yes" xml:space="preserve">
          <source>Defines the Erlang priority for all SNMP processes.</source>
          <target state="translated">定义所有SNMP进程的Erlang优先级。</target>
        </trans-unit>
        <trans-unit id="8f0d40e70791382078ed18bc5d93727975b29f06" translate="yes" xml:space="preserve">
          <source>Defines the backend data module of the SNMP agent mib-server as defined by the &lt;code&gt;&lt;a href=&quot;snmpa_mib_data&quot;&gt;snmpa_mib_data&lt;/a&gt;&lt;/code&gt; behaviour.</source>
          <target state="translated">定义 &lt;code&gt;&lt;a href=&quot;snmpa_mib_data&quot;&gt;snmpa_mib_data&lt;/a&gt;&lt;/code&gt; 行为定义的SNMP代理mib-server的后端数据模块。</target>
        </trans-unit>
        <trans-unit id="f20654fac01a093493a55b44820caee23d32ca77" translate="yes" xml:space="preserve">
          <source>Defines the contents of the AVPs of the application having type Grouped. The section content consists of definitions of the form specified in section 4.4 of RFC 6733, &quot;Grouped AVP Values&quot;.</source>
          <target state="translated">定义具有Grouped类型的应用程序的AVP的内容。本节内容由RFC 6733的4.4节 &quot;分组AVP值 &quot;中规定的形式的定义组成。</target>
        </trans-unit>
        <trans-unit id="9c5293b3b68519245baa953556f9af9803aee324" translate="yes" xml:space="preserve">
          <source>Defines the directory where the error log files are located. Default is the directory specified by application environment variable &lt;code&gt;error_logger_mf_dir&lt;/code&gt;, see &lt;code&gt;sasl(6)&lt;/code&gt;.</source>
          <target state="translated">定义错误日志文件所在的目录。缺省值为应用程序环境变量 &lt;code&gt;error_logger_mf_dir&lt;/code&gt; 指定的目录，请参见 &lt;code&gt;sasl(6)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="57e9a96f66a3597508e408cc9b1db67da3b5a149" translate="yes" xml:space="preserve">
          <source>Defines the email-address of the server administrator to be included in any error messages returned by the server.</source>
          <target state="translated">定义服务器管理员的电子邮件地址,以包含在服务器返回的任何错误信息中。</target>
        </trans-unit>
        <trans-unit id="1971dd05fb820ceb119f867d7bba2219ab320c0c" translate="yes" xml:space="preserve">
          <source>Defines the file format of the log files. See &lt;code&gt;disk_log&lt;/code&gt; for details. If the internal file format is used, the log file is repaired after a crash. When a log file is repaired, data can disappear. When the external file format is used, &lt;code&gt;httpd&lt;/code&gt; does not start if the log file is broken. Default is &lt;code&gt;external&lt;/code&gt;.</source>
          <target state="translated">定义日志文件的文件格式。有关详细信息，请参见 &lt;code&gt;disk_log&lt;/code&gt; 。如果使用内部文件格式，则崩溃后将修复日志文件。修复日志文件后，数据可能会消失。使用外部文件格式时，如果日志文件损坏，则 &lt;code&gt;httpd&lt;/code&gt; 不会启动。默认为 &lt;code&gt;external&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0af5f2ebae883739d70328318a316e60a38383d2" translate="yes" xml:space="preserve">
          <source>Defines the filename of the (&lt;code&gt;disk_log(3)&lt;/code&gt;) access log file logging incoming requests. If the filename does not begin with a slash (/), it is assumed to be relative to the &lt;code&gt;server_root&lt;/code&gt;.</source>
          <target state="translated">定义（ &lt;code&gt;disk_log(3)&lt;/code&gt; ）访问日志文件的文件名，记录进入的请求。如果文件名不是以斜杠（/）开头，则假定它是相对于 &lt;code&gt;server_root&lt;/code&gt; 的。</target>
        </trans-unit>
        <trans-unit id="d526e5aeea7dd1b9e33230d2275f05f27246ebdc" translate="yes" xml:space="preserve">
          <source>Defines the filename of the (&lt;code&gt;disk_log(3)&lt;/code&gt;) access log file logging incoming security events, that is, authenticated requests. If the filename does not begin with a slash (/), it is assumed to be relative to the &lt;code&gt;server_root&lt;/code&gt;.</source>
          <target state="translated">定义（ &lt;code&gt;disk_log(3)&lt;/code&gt; ）访问日志文件的文件名，该文件记录传入的安全事件，即已验证的请求。如果文件名不是以斜杠（/）开头，则假定它是相对于 &lt;code&gt;server_root&lt;/code&gt; 的。</target>
        </trans-unit>
        <trans-unit id="86d70bbcc0a147ca704973c5dc64036c808d341b" translate="yes" xml:space="preserve">
          <source>Defines the filename of the (&lt;code&gt;disk_log(3)&lt;/code&gt;) error log file to be used to log server errors. If the filename does not begin with a slash (/), it is assumed to be relative to the &lt;code&gt;server_root&lt;/code&gt;.</source>
          <target state="translated">定义（ &lt;code&gt;disk_log(3)&lt;/code&gt; ）错误日志文件的文件名，用于记录服务器错误。如果文件名不是以斜杠（/）开头，则假定它是相对于 &lt;code&gt;server_root&lt;/code&gt; 的。</target>
        </trans-unit>
        <trans-unit id="55f4b8f35c452cba8012ebe699f5425c2a16a4f3" translate="yes" xml:space="preserve">
          <source>Defines the filename of the access log file to be used to log incoming requests. If the filename does not begin with a slash (/), it is assumed to be relative to the &lt;code&gt;server_root&lt;/code&gt;.</source>
          <target state="translated">定义用于记录传入请求的访问日志文件的文件名。如果文件名不是以斜杠（/）开头，则假定它是相对于 &lt;code&gt;server_root&lt;/code&gt; 的。</target>
        </trans-unit>
        <trans-unit id="959470a7f81f8e8fc99dcd53c272fad9068d2081" translate="yes" xml:space="preserve">
          <source>Defines the filename of the access log file to be used to log security events. If the filename does not begin with a slash (/), it is assumed to be relative to the &lt;code&gt;server_root&lt;/code&gt;.</source>
          <target state="translated">定义用于记录安全事件的访问日志文件的文件名。如果文件名不是以斜杠（/）开头，则假定它是相对于 &lt;code&gt;server_root&lt;/code&gt; 的。</target>
        </trans-unit>
        <trans-unit id="6cf62a9b1727457d61e84c994aea05b03a058888" translate="yes" xml:space="preserve">
          <source>Defines the filename of the error log file to be used to log server errors. If the filename does not begin with a slash (/), it is assumed to be relative to the &lt;code&gt;server_root&lt;/code&gt;.</source>
          <target state="translated">定义用于记录服务器错误的错误日志文件的文件名。如果文件名不是以斜杠（/）开头，则假定它是相对于 &lt;code&gt;server_root&lt;/code&gt; 的。</target>
        </trans-unit>
        <trans-unit id="ef21ceaaccc3147ba6258bf28c3cde06871c6a53" translate="yes" xml:space="preserve">
          <source>Defines the groups the server may choose among when diffie-hellman-group-exchange is negotiated. See &lt;code&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc4419&quot;&gt;RFC 4419&lt;/a&gt;&lt;/code&gt; for details. The three variants of this option are:</source>
          <target state="translated">定义在协商diffie-hellman-group-exchange时服务器可以选择的组。有关详细信息，请参见 &lt;code&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc4419&quot;&gt;RFC 4419&lt;/a&gt;&lt;/code&gt; 。此选项的三个变体是：</target>
        </trans-unit>
        <trans-unit id="ab4548577e3f634d029a94551c958280d1aef8c0" translate="yes" xml:space="preserve">
          <source>Defines the home directory of the server, where log files, and so on, can be stored. Relative paths specified in other properties refer to this directory.</source>
          <target state="translated">定义服务器的主目录,日志文件等可以存放在这里。在其他属性中指定的相对路径指的就是这个目录。</target>
        </trans-unit>
        <trans-unit id="0a7f2deb640efc11655ad58c1e08a8d07db2a0a7" translate="yes" xml:space="preserve">
          <source>Defines the integer Number as the Diameter Application Id of the application in question. Can occur at most once and is required if the dictionary defines &lt;code&gt;@messages&lt;/code&gt;. The section has empty content.</source>
          <target state="translated">将整数Number定义为相关应用程序的Diameter Application ID。最多可以出现一次，如果字典定义了 &lt;code&gt;@messages&lt;/code&gt; ，则为必填项。该部分内容为空。</target>
        </trans-unit>
        <trans-unit id="cba064339a08067bd7b4f8344d541dba8844bc39" translate="yes" xml:space="preserve">
          <source>Defines the integer Number as the Vendor-Id of the AVPs listed in the section content, overriding the &lt;code&gt;@vendor&lt;/code&gt; default. The section content consists of AVP names.</source>
          <target state="translated">将整数Number定义为本节内容中列出的AVP的Vendor-Id，覆盖 &lt;code&gt;@vendor&lt;/code&gt; 的默认值。本节内容由AVP名称组成。</target>
        </trans-unit>
        <trans-unit id="97e9a050435e4cb94bd1bfaf574e64f41d29828a" translate="yes" xml:space="preserve">
          <source>Defines the integer Number as the the default Vendor-Id of AVPs for which the V flag is set. Name documents the owner of the application but is otherwise unused. Can occur at most once and is required if an AVP sets the V flag and is not otherwise assigned a Vendor-Id. The section has empty content.</source>
          <target state="translated">定义整数Number作为设置V标志的AVP的默认Vendor-Id。名称记录了应用程序的所有者,但在其他方面没有使用。最多可以出现一次,如果一个AVP设置了V标志,并且没有分配Vendor-Id,则需要该名称。该部分内容为空。</target>
        </trans-unit>
        <trans-unit id="36635f36f495b397ab94de01559c1253375a6250" translate="yes" xml:space="preserve">
          <source>Defines the look of the value of the server header.</source>
          <target state="translated">定义服务器头的值的样子。</target>
        </trans-unit>
        <trans-unit id="4a4cc0d55d17b53fdd8841ae9e10cabb12e632c0" translate="yes" xml:space="preserve">
          <source>Defines the maximum number of varbinds allowed in a Get-BULK response.</source>
          <target state="translated">定义Get-BULK响应中允许的最大varbinds数量。</target>
        </trans-unit>
        <trans-unit id="fea976ab8e649b0432e4d40f897c877b5a06f322" translate="yes" xml:space="preserve">
          <source>Defines the messages of the application. The section content consists of definitions of the form specified in section 3.2 of RFC 6733, &quot;Command Code Format Specification&quot;.</source>
          <target state="translated">定义了应用程序的消息。该部分内容由RFC 6733《命令码格式规范》第3.2节规定的格式定义组成。</target>
        </trans-unit>
        <trans-unit id="2f4213047735b7141ee1fb4cc97bef31b0c6a085" translate="yes" xml:space="preserve">
          <source>Defines the mib storage module of the SNMP agent as defined by the &lt;code&gt;&lt;a href=&quot;snmpa_mib_storage&quot;&gt;snmpa_mib_storage&lt;/a&gt;&lt;/code&gt; behaviour.</source>
          <target state="translated">定义 &lt;code&gt;&lt;a href=&quot;snmpa_mib_storage&quot;&gt;snmpa_mib_storage&lt;/a&gt;&lt;/code&gt; 行为定义的SNMP代理的mib存储模块。</target>
        </trans-unit>
        <trans-unit id="c3903fd03c41c6d69e0d18f172887c0b2fa22a5f" translate="yes" xml:space="preserve">
          <source>Defines the name of a dictionary module containing AVP definitions that should be imported into the current dictionary. The section content consists of the names of those AVPs whose definitions should be imported from the dictionary, an empty list causing all to be imported. Any listed AVPs must not be defined in the current dictionary and it is an error to inherit the same AVP from more than one dictionary.</source>
          <target state="translated">定义一个包含AVP定义的字典模块的名称,这些定义应该被导入到当前的字典中。该部分内容由那些其定义应从字典中导入的AVP的名称组成,一个空列表导致所有的AVP被导入。任何列出的 AVPs 必须在当前字典中没有定义,从一个以上的字典中继承相同的 AVP 是一个错误。</target>
        </trans-unit>
        <trans-unit id="3f4467cb29ca7960e7e163c5021247118933225f" translate="yes" xml:space="preserve">
          <source>Defines the name of the generated dictionary module. Can occur at most once and defaults to the name of the dictionary file minus any extension. The section has empty content.</source>
          <target state="translated">定义生成的字典模块的名称,最多可以出现一次,默认为字典文件的名称减去任何扩展名。最多可出现一次,默认为字典文件的名称减去任何扩展名。该部分内容为空。</target>
        </trans-unit>
        <trans-unit id="e2fdd5a12c59d8afe49345bf972c80a83a8bc45b" translate="yes" xml:space="preserve">
          <source>Defines the name, code, type and flags of individual AVPs. The section consists of definitions of the form</source>
          <target state="translated">定义各个AVP的名称、代码、类型和标志。本节包括以下形式的定义</target>
        </trans-unit>
        <trans-unit id="ab5cdae0cb5c3dabdd06a687f16e3f89a532b66f" translate="yes" xml:space="preserve">
          <source>Defines the read-eval-print loop used in a daemon when a shell is requested by the client. The default is to use the Erlang shell: &lt;code&gt;{shell, start, []}&lt;/code&gt;</source>
          <target state="translated">定义客户端请求外壳程序时守护程序中使用的read-eval-print循环。默认使用Erlang shell： &lt;code&gt;{shell, start, []}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cf4efecb956b1360f45ade9fb0fc9274b8cb5370" translate="yes" xml:space="preserve">
          <source>Defines the repair option for the persistent database (if and how the table is repaired when opened).</source>
          <target state="translated">定义持久化数据库的修复选项(打开表时是否以及如何修复)。</target>
        </trans-unit>
        <trans-unit id="87d444381fbb569ddfcc73fb8ed2f3bb3f13be7a" translate="yes" xml:space="preserve">
          <source>Defines the system name.</source>
          <target state="translated">定义系统名称。</target>
        </trans-unit>
        <trans-unit id="21694ea9ad4a13cb778434d22cbe1ad230770b82" translate="yes" xml:space="preserve">
          <source>Defines the system version.</source>
          <target state="translated">定义系统版本。</target>
        </trans-unit>
        <trans-unit id="a7de61fb83cf32538184916c9eaa313b33cb0f63" translate="yes" xml:space="preserve">
          <source>Defines the time-out for all calls to &lt;code&gt;sys:change_code&lt;/code&gt;. If no value is specified or &lt;code&gt;default&lt;/code&gt; is specified, the default value defined in &lt;code&gt;sys&lt;/code&gt; is used.</source>
          <target state="translated">定义所有对 &lt;code&gt;sys:change_code&lt;/code&gt; 的调用的超时。如果没有指定值或 &lt;code&gt;default&lt;/code&gt; 被指定时，在所定义的默认值 &lt;code&gt;sys&lt;/code&gt; 被使用。</target>
        </trans-unit>
        <trans-unit id="d5bb4f3815504953241eadc8eb3b0acdc9b38fad" translate="yes" xml:space="preserve">
          <source>Defines the time-out for all calls to &lt;code&gt;sys:suspend&lt;/code&gt;. If no value is specified, the values defined by the &lt;code&gt;Timeout&lt;/code&gt; parameter of the &lt;code&gt;upgrade&lt;/code&gt; or &lt;code&gt;suspend&lt;/code&gt; instructions are used. If &lt;code&gt;default&lt;/code&gt; is specified, the default value defined in &lt;code&gt;sys&lt;/code&gt; is used.</source>
          <target state="translated">定义对 &lt;code&gt;sys:suspend&lt;/code&gt; 的所有调用的超时。如果未指定任何值，则使用 &lt;code&gt;upgrade&lt;/code&gt; 或 &lt;code&gt;suspend&lt;/code&gt; 指令的 &lt;code&gt;Timeout&lt;/code&gt; 参数定义的值。如果 &lt;code&gt;default&lt;/code&gt; 指定，在定义的默认值 &lt;code&gt;sys&lt;/code&gt; 使用。</target>
        </trans-unit>
        <trans-unit id="3662633757f8ed2e24fca068aa6e42751f922afc" translate="yes" xml:space="preserve">
          <source>Defines the time-out when suspending processes. If no value or &lt;code&gt;default&lt;/code&gt; is specified, the default value for &lt;code&gt;sys:suspend&lt;/code&gt; is used.</source>
          <target state="translated">定义挂起进程时的超时。如果未指定任何值或 &lt;code&gt;default&lt;/code&gt; 值，则使用 &lt;code&gt;sys:suspend&lt;/code&gt; 的默认值。</target>
        </trans-unit>
        <trans-unit id="0afeec46159c21d9d1f3d16e08bb62a44c8ff02a" translate="yes" xml:space="preserve">
          <source>Defines the top directory for the documents that are available on the HTTP server.</source>
          <target state="translated">定义HTTP服务器上可用文档的顶级目录。</target>
        </trans-unit>
        <trans-unit id="c7b451ec2118fb4f5138f4688f3823998c040b27" translate="yes" xml:space="preserve">
          <source>Defines the type of packets to use for a socket. Possible values:</source>
          <target state="translated">定义套接字要使用的数据包类型。可能的值。</target>
        </trans-unit>
        <trans-unit id="4ec3fffa7b0947c4ef27ec8336dce45a785d4d18" translate="yes" xml:space="preserve">
          <source>Defines users to grant access to a given directory using a secret password.</source>
          <target state="translated">定义用户使用秘密密码授予对指定目录的访问权限。</target>
        </trans-unit>
        <trans-unit id="2de485f70c3131c57b114f992349842acaf84733" translate="yes" xml:space="preserve">
          <source>Defines values of AVP Name having type Enumerated. Section content consists of names and corresponding integer values. Integer values can be prefixed with 0x to be interpreted as hexadecimal.</source>
          <target state="translated">定义类型为Enumerated的AVP Name的值。部分内容由名称和相应的整数值组成。整数值可以以0x为前缀,解释为十六进制。</target>
        </trans-unit>
        <trans-unit id="1c20651b75ec09f9f46020166ca4d95a65ce0b7d" translate="yes" xml:space="preserve">
          <source>Defines what to do if the agent is unable to open an existing database file. &lt;code&gt;terminate&lt;/code&gt; means that the agent/manager will terminate, &lt;code&gt;create&lt;/code&gt; means that the agent/manager will remove the faulty file(s) and create new ones, and &lt;code&gt;create_db_and_dir&lt;/code&gt; means that the agent/manager will create the database file along with any missing parent directories for the database file.</source>
          <target state="translated">定义代理无法打开现有数据库文件时的处理方法。 &lt;code&gt;terminate&lt;/code&gt; 表示代理程序/管理器将终止， &lt;code&gt;create&lt;/code&gt; 表示代理程序/管理器将删除错误的文件并创建新文件， &lt;code&gt;create_db_and_dir&lt;/code&gt; 表示代理程序/管理器将创建数据库文件以及所有丢失的父目录数据库文件。</target>
        </trans-unit>
        <trans-unit id="204105b23aab7c26919ca77988f289f12f1f0f7f" translate="yes" xml:space="preserve">
          <source>Defines when parsing the Host-Port part of an URI with an IPv6 address with brackets, if those brackets are to be retained (&lt;code&gt;true&lt;/code&gt;) or stripped (&lt;code&gt;false&lt;/code&gt;).</source>
          <target state="translated">定义在解析带有括号的带有IPv6地址的URI的Host-Port部分时，是否保留这些括号（ &lt;code&gt;true&lt;/code&gt; ）或剥离这些括号（ &lt;code&gt;false&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="3528e0db282039856a935ef9dd79f095c319462c" translate="yes" xml:space="preserve">
          <source>Defines where the SNMP agent configuration files are stored.</source>
          <target state="translated">定义SNMP代理配置文件的存储位置。</target>
        </trans-unit>
        <trans-unit id="babf4b2c7dfdcfc9d7a2ec2be86154c0beabe2f5" translate="yes" xml:space="preserve">
          <source>Defines where the SNMP agent internal db files are stored.</source>
          <target state="translated">定义SNMP代理内部db文件的存储位置。</target>
        </trans-unit>
        <trans-unit id="6e7f23de7214a3b9a761f109739d9039604db564" translate="yes" xml:space="preserve">
          <source>Defines where the SNMP manager configuration files are stored.</source>
          <target state="translated">定义SNMP管理器配置文件的存储位置。</target>
        </trans-unit>
        <trans-unit id="a7c977cad0696041fcf115ef67b9590b5760e203" translate="yes" xml:space="preserve">
          <source>Defines where the SNMP manager store persistent data.</source>
          <target state="translated">定义SNMP管理器存储持久性数据的位置。</target>
        </trans-unit>
        <trans-unit id="412835e3971c845df969501453eca0dc4b7abaf7" translate="yes" xml:space="preserve">
          <source>Defines which modules the HTTP server uses when handling requests. Default is &lt;code&gt;[mod_alias, mod_auth, mod_esi, mod_actions, mod_cgi, mod_dir, mod_get, mod_head, mod_log, mod_disk_log]&lt;/code&gt;. Notice that some &lt;code&gt;mod&lt;/code&gt;-modules are dependent on others, so the order cannot be entirely arbitrary. See the &lt;code&gt;&lt;a href=&quot;http_server&quot;&gt;Inets Web Server Modules&lt;/a&gt;&lt;/code&gt; in the User's Guide for details.</source>
          <target state="translated">定义HTTP服务器在处理请求时使用的模块。默认值为 &lt;code&gt;[mod_alias, mod_auth, mod_esi, mod_actions, mod_cgi, mod_dir, mod_get, mod_head, mod_log, mod_disk_log]&lt;/code&gt; 。请注意，某些 &lt;code&gt;mod&lt;/code&gt; 模块依赖于其他模块，因此顺序不能完全是任意的。有关详细信息，请参见《用户指南》中的 &lt;code&gt;&lt;a href=&quot;http_server&quot;&gt;Inets Web Server Modules&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="51e2b84c9abac1754fd9eeab16ec551704b4d555" translate="yes" xml:space="preserve">
          <source>Defining &lt;code&gt;'$handle_undefined_function'/2&lt;/code&gt; in ordinary application code is highly discouraged. It is very easy to make subtle errors that can take a long time to debug. Furthermore, none of the tools for static code analysis (such as Dialyzer and Xref) supports the use of &lt;code&gt;'$handle_undefined_function'/2&lt;/code&gt; and no such support will be added. Only use this function after having carefully considered other, less dangerous, solutions. One example of potential legitimate use is creating stubs for other sub-systems during testing and debugging.</source>
          <target state="translated">不建议在普通应用程序代码中定义 &lt;code&gt;'$handle_undefined_function'/2&lt;/code&gt; 。进行细微的错误很容易，可能需要很长时间才能调试。此外，用于静态代码分析的工具（例如Dialyzer和Xref） &lt;code&gt;'$handle_undefined_function'/2&lt;/code&gt; 支持使用'$ handle_undefined_function'/ 2，并且不会添加此类支持。仅在仔细考虑其他危险程度较小的解决方案后才能使用此功能。潜在合法使用的一个示例是在测试和调试期间为其他子系统创建存根。</target>
        </trans-unit>
        <trans-unit id="813c4d729e19c49eeb758babcca712816ef2f3ee" translate="yes" xml:space="preserve">
          <source>Defining New AVP Values</source>
          <target state="translated">定义新的AVP值</target>
        </trans-unit>
        <trans-unit id="be3ef0549cf67fd2cc624afce6d7813accda1411" translate="yes" xml:space="preserve">
          <source>Defining Structure and Content</source>
          <target state="translated">定义结构和内容</target>
        </trans-unit>
        <trans-unit id="86485bef05a62e4201b1c81ddd8cab9166fe5be5" translate="yes" xml:space="preserve">
          <source>Defining instruction patterns</source>
          <target state="translated">定义指令模式</target>
        </trans-unit>
        <trans-unit id="f824f9b573c83ee1f4d1d9346a7810069bada7e4" translate="yes" xml:space="preserve">
          <source>Definition of &lt;code&gt;c_test:c_break/1&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;c_test:c_break/1&lt;/code&gt; 的定义：</target>
        </trans-unit>
        <trans-unit id="15225baac48fc3d689cb2b0f74b936eff4339ff7" translate="yes" xml:space="preserve">
          <source>Definitions</source>
          <target state="translated">Definitions</target>
        </trans-unit>
        <trans-unit id="225dfed12a3d48b5b84cb4cd17b1a4ebe8d5181b" translate="yes" xml:space="preserve">
          <source>Deinstalls a fallback before it has been used to restore the database. This is normally a distributed operation that is either performed on all nodes with disc resident schema, or none. Uninstallation of fallbacks requires Erlang to be operational on all involved nodes, but it does not matter if Mnesia is running or not. Which nodes that are considered as disc-resident nodes is determined from the schema information in the local fallback.</source>
          <target state="translated">在恢复数据库之前,先卸载一个后备程序。这通常是一个分布式操作,要么在所有有磁盘常驻模式的节点上执行,要么不执行。卸载回退需要Erlang在所有涉及的节点上都能运行,但Mnesia是否运行并不重要。哪些节点被认为是盘驻节点,要根据本地回退中的schema信息来确定。</target>
        </trans-unit>
        <trans-unit id="000cba1a9bdc15eb27845faba4d45730274dad02" translate="yes" xml:space="preserve">
          <source>Delay of Thread Progress by Unmanaged Threads</source>
          <target state="translated">未管理线程的线程进度延迟。</target>
        </trans-unit>
        <trans-unit id="651f4ae5c5eda1c4902afa9952836e101d3e101b" translate="yes" xml:space="preserve">
          <source>Delay, in milliseconds, for SAC messages (if the delay is enabled, see &lt;code&gt;flags&lt;/code&gt; below)</source>
          <target state="translated">SAC消息的延迟（以毫秒为单位）（如果启用了延迟，请参见下面的 &lt;code&gt;flags&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="f6fdbe48dc54dd86f63097a03bd24094dedd713a" translate="yes" xml:space="preserve">
          <source>Delete</source>
          <target state="translated">Delete</target>
        </trans-unit>
        <trans-unit id="38eb25f63edd286fdb6d4a036285c876a5d036ca" translate="yes" xml:space="preserve">
          <source>Delete CRLs from the ssl applications local cache.</source>
          <target state="translated">从ssl应用程序本地缓存中删除CRL。</target>
        </trans-unit>
        <trans-unit id="a05bbe6bb69db0f46e301947b5f581ae37d781d0" translate="yes" xml:space="preserve">
          <source>Delete a USM security data (user) from the agent config.</source>
          <target state="translated">从代理配置中删除一个USM安全数据(用户)。</target>
        </trans-unit>
        <trans-unit id="73abef6c216f94bdf061581022474f37e17f9504" translate="yes" xml:space="preserve">
          <source>Delete a access definition from the agent config.</source>
          <target state="translated">删除代理配置中的访问定义。</target>
        </trans-unit>
        <trans-unit id="8e4bb0cf1820c3baad149df8f499db102dec9714" translate="yes" xml:space="preserve">
          <source>Delete a community from the agent config.</source>
          <target state="translated">从代理配置中删除一个社区。</target>
        </trans-unit>
        <trans-unit id="10381313ea94a7532403bfbf8fb99509a82a5ceb" translate="yes" xml:space="preserve">
          <source>Delete a context from the agent config.</source>
          <target state="translated">从代理配置中删除一个上下文。</target>
        </trans-unit>
        <trans-unit id="62b90f629164fa6eb6a79befd35ee417af11099b" translate="yes" xml:space="preserve">
          <source>Delete a dictionary entry and send a {et, {dict_delete, Key}} tuple to all registered subscribers.</source>
          <target state="translated">删除一个字典条目,并发送一个{et,{dict_delete,Key}}元组给所有注册的订阅者。</target>
        </trans-unit>
        <trans-unit id="0d14d2456d7199ee875343d85fd00c85d394b021" translate="yes" xml:space="preserve">
          <source>Delete a notify definition from the agent config.</source>
          <target state="translated">删除代理配置中的通知定义。</target>
        </trans-unit>
        <trans-unit id="232e1d1adb53073ecdabb53e88a17abefbe0b5ae" translate="yes" xml:space="preserve">
          <source>Delete a record from the mib-storage table.</source>
          <target state="translated">从mib存储表中删除一条记录。</target>
        </trans-unit>
        <trans-unit id="b55705a3a80888a5727b8edf5c4fd37429974835" translate="yes" xml:space="preserve">
          <source>Delete a security to group definition from the agent config.</source>
          <target state="translated">删除代理配置中的安全到组定义。</target>
        </trans-unit>
        <trans-unit id="5b2d3d65375e235f63c119c2dd9900a6b70fbd25" translate="yes" xml:space="preserve">
          <source>Delete a target address definition from the agent config.</source>
          <target state="translated">删除代理配置中的目标地址定义。</target>
        </trans-unit>
        <trans-unit id="83a8b31c49915f73d37cc6ae8baa11bb303104da" translate="yes" xml:space="preserve">
          <source>Delete a target parameter definition from the agent config.</source>
          <target state="translated">删除代理配置中的目标参数定义。</target>
        </trans-unit>
        <trans-unit id="acabde9af1d652c09a474168447d0b3aa09ef7ac" translate="yes" xml:space="preserve">
          <source>Delete a view tree family definition from the agent config.</source>
          <target state="translated">删除代理配置中的视图树族定义。</target>
        </trans-unit>
        <trans-unit id="5210820e193a36586d47abb153026ca112d79eec" translate="yes" xml:space="preserve">
          <source>Delete all objects in the ETS table &lt;code&gt;Tab&lt;/code&gt;. The operation is guaranteed to be &lt;code&gt;&lt;a href=&quot;#concurrency&quot;&gt;atomic and isolated&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">删除ETS表 &lt;code&gt;Tab&lt;/code&gt; 中的所有对象。保证操作是 &lt;code&gt;&lt;a href=&quot;#concurrency&quot;&gt;atomic and isolated&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0111e8f27f5e330da3db8aee43f349eca49e4fc6" translate="yes" xml:space="preserve">
          <source>Delete an entire mib-storage table.</source>
          <target state="translated">删除整个mib存储表。</target>
        </trans-unit>
        <trans-unit id="90d051e4f058fdc93a81c8c192e289a26ac48d09" translate="yes" xml:space="preserve">
          <source>Delete an entry.</source>
          <target state="translated">删除一个条目。</target>
        </trans-unit>
        <trans-unit id="85df5f045630c419669a61e69ca04fd700e28a50" translate="yes" xml:space="preserve">
          <source>Delete character</source>
          <target state="translated">删除字符</target>
        </trans-unit>
        <trans-unit id="07e5359f033713d72d57d99e8127fe4c622bd202" translate="yes" xml:space="preserve">
          <source>Delete data set with &lt;code&gt;&lt;a href=&quot;#set_process_metadata-1&quot;&gt; set_process_metadata/1&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#update_process_metadata-1&quot;&gt; update_process_metadata/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">删除使用 &lt;code&gt;&lt;a href=&quot;#set_process_metadata-1&quot;&gt; set_process_metadata/1&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;#update_process_metadata-1&quot;&gt; update_process_metadata/1&lt;/a&gt;&lt;/code&gt; 设置的数据。</target>
        </trans-unit>
        <trans-unit id="247b86940b906a4d84abd7600a2a60b360d955e7" translate="yes" xml:space="preserve">
          <source>Delete data set with &lt;code&gt;&lt;a href=&quot;#set_process_metadata-1&quot;&gt;set_process_metadata/1&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#update_process_metadata-1&quot;&gt;update_process_metadata/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;#set_process_metadata-1&quot;&gt;set_process_metadata/1&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;#update_process_metadata-1&quot;&gt;update_process_metadata/1&lt;/a&gt;&lt;/code&gt; 删除数据集。</target>
        </trans-unit>
        <trans-unit id="dc3b4d5d308516c1eb3f3134fdc18f836f7dcbba" translate="yes" xml:space="preserve">
          <source>Delete the configuration of a user</source>
          <target state="translated">删除用户的配置</target>
        </trans-unit>
        <trans-unit id="837a21358fedd413cdb892076602aa98096ba328" translate="yes" xml:space="preserve">
          <source>Delete the exact object &lt;code&gt;Object&lt;/code&gt; from the ETS table, leaving objects with the same key but other differences (useful for type &lt;code&gt;bag&lt;/code&gt;). In a &lt;code&gt;duplicate_bag&lt;/code&gt; table, all instances of the object are deleted.</source>
          <target state="translated">从ETS表中删除确切的对象 &lt;code&gt;Object&lt;/code&gt; ，使对象具有相同的键但其他不同（对于类型 &lt;code&gt;bag&lt;/code&gt; 有用）。在 &lt;code&gt;duplicate_bag&lt;/code&gt; 表中，将删除该对象的所有实例。</target>
        </trans-unit>
        <trans-unit id="1f9eba17860205c37b06b4158113eb4cbb717ab7" translate="yes" xml:space="preserve">
          <source>Delete the table &lt;code&gt;EMPLOYEE&lt;/code&gt;.</source>
          <target state="translated">删除表 &lt;code&gt;EMPLOYEE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bb3b6fe219d693793d658e19d93a46b2e8e3f9e2" translate="yes" xml:space="preserve">
          <source>Delete word</source>
          <target state="translated">删除单词</target>
        </trans-unit>
        <trans-unit id="d4fad0c7c3738c414abd567b32796483f83a24ea" translate="yes" xml:space="preserve">
          <source>Delete.</source>
          <target state="translated">Delete.</target>
        </trans-unit>
        <trans-unit id="8c2cd6cab37aebab0028a894c99ded8f238de266" translate="yes" xml:space="preserve">
          <source>Deletes a &lt;code&gt;Slave&lt;/code&gt; node from the list of allowed slave hosts.</source>
          <target state="translated">&lt;code&gt;Slave&lt;/code&gt; 允许的从属主机列表中删除一个从属节点。</target>
        </trans-unit>
        <trans-unit id="a55490d67b1783b95d3b01989de13de5ecdbd099" translate="yes" xml:space="preserve">
          <source>Deletes a cache entry. Is only called from the cache handling process.</source>
          <target state="translated">删除一个缓存条目。只在缓存处理过程中调用。</target>
        </trans-unit>
        <trans-unit id="f83187de60d2c964b0ec14f140a205b890d0cdf9" translate="yes" xml:space="preserve">
          <source>Deletes a complete index structure (i.e. the ets table holding the index). The index can no longer be referenced after this call. See the &lt;code&gt;&lt;a href=&quot;#1&quot;&gt;warning note&lt;/a&gt;&lt;/code&gt; above.</source>
          <target state="translated">删除完整的索引结构（即保存索引的ets表）。调用后将无法再引用索引。请参阅上面的 &lt;code&gt;&lt;a href=&quot;#1&quot;&gt;warning note&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f781899cee6417bc59edb7c370ceb11e5f725c7f" translate="yes" xml:space="preserve">
          <source>Deletes a database created with &lt;code&gt;mnesia:create_schema/1&lt;/code&gt;. &lt;code&gt;mnesia:delete_schema/1&lt;/code&gt; fails if any of the Erlang nodes given as &lt;code&gt;DiscNodes&lt;/code&gt; are not alive, or if Mnesia is running on any of the nodes.</source>
          <target state="translated">删除使用 &lt;code&gt;mnesia:create_schema/1&lt;/code&gt; 创建的数据库。如果作为 &lt;code&gt;DiscNodes&lt;/code&gt; 给出的任何Erlang节点都不活跃，或者如果Mnesia在任何节点上运行，则 &lt;code&gt;mnesia:delete_schema/1&lt;/code&gt; 失败。</target>
        </trans-unit>
        <trans-unit id="0410cc85ea7e09dd6b458b9cd1881abe5746e21c" translate="yes" xml:space="preserve">
          <source>Deletes a directory from the code path. The argument can be an atom &lt;code&gt;Name&lt;/code&gt;, in which case the directory with the name &lt;code&gt;.../Name[-Vsn][/ebin]&lt;/code&gt; is deleted from the code path. Also, the complete directory name &lt;code&gt;Dir&lt;/code&gt; can be specified as argument.</source>
          <target state="translated">从代码路径中删除目录。参数可以是原子 &lt;code&gt;Name&lt;/code&gt; ，在这种情况下，名称 &lt;code&gt;.../Name[-Vsn][/ebin]&lt;/code&gt; 的目录将从代码路径中删除。另外，完整目录名称 &lt;code&gt;Dir&lt;/code&gt; 可以指定为参数。</target>
        </trans-unit>
        <trans-unit id="8a8f3084880aa402e491a52d850d4081646b7be1" translate="yes" xml:space="preserve">
          <source>Deletes a directory specified by &lt;code&gt;Name&lt;/code&gt;. The directory must be empty before it can be successfully deleted.</source>
          <target state="translated">删除 &lt;code&gt;Name&lt;/code&gt; 指定的目录。在成功删除目录之前，该目录必须为空。</target>
        </trans-unit>
        <trans-unit id="8703e5f201e87bf05be0a05024c1bffc6bdb1756" translate="yes" xml:space="preserve">
          <source>Deletes a file on remote host.</source>
          <target state="translated">删除远程主机上的文件。</target>
        </trans-unit>
        <trans-unit id="145e70506f4120524f47e10b3858ee270f53970c" translate="yes" xml:space="preserve">
          <source>Deletes a fragment from a fragmented table. All records in the last fragment are moved to one of the other fragments. All other fragmented tables, which refer to this table in their foreign key, automatically lose their last fragment. Also, their records are dynamically rehashed in the same manner as for the main table.</source>
          <target state="translated">从碎片表中删除一个碎片。最后一个片段中的所有记录都被移到其他片段中。所有在外键中引用这个表的其他碎片表,都会自动失去最后一个碎片。同时,它们的记录也会以与主表相同的方式被动态重排。</target>
        </trans-unit>
        <trans-unit id="8136cd7097f295cefa19768ec9dd3cc03cd5596b" translate="yes" xml:space="preserve">
          <source>Deletes a key and its value from the index structure. Returns a new structure.</source>
          <target state="translated">从索引结构中删除一个键和它的值。返回一个新的结构。</target>
        </trans-unit>
        <trans-unit id="d8a8422aa741d8eea89390fd9b831f5728ae2f45" translate="yes" xml:space="preserve">
          <source>Deletes a module &lt;code&gt;Mod&lt;/code&gt; using the low-level instructions &lt;code&gt;remove&lt;/code&gt; and &lt;code&gt;purge&lt;/code&gt;.</source>
          <target state="translated">使用低级指令 &lt;code&gt;remove&lt;/code&gt; and &lt;code&gt;purge&lt;/code&gt; 删除模块 &lt;code&gt;Mod&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="94f3adf6d82d22bb018090421cb54a40c7cb5a7f" translate="yes" xml:space="preserve">
          <source>Deletes a named value on the current key. The atom &lt;code&gt;default&lt;/code&gt; is used for the default value.</source>
          <target state="translated">删除当前键上的命名值。原子 &lt;code&gt;default&lt;/code&gt; 用作默认值。</target>
        </trans-unit>
        <trans-unit id="1103f0322e41eb28047a27df8e5e1b984a02279a" translate="yes" xml:space="preserve">
          <source>Deletes a node from &lt;code&gt;node_pool&lt;/code&gt;. The new node pool affects the list returned from the function &lt;code&gt;&lt;a href=&quot;mnesia#table_info-2&quot;&gt;mnesia:table_info(Tab, frag_dist)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;node_pool&lt;/code&gt; 删除一个节点。新的节点池会影响从函数 &lt;code&gt;&lt;a href=&quot;mnesia#table_info-2&quot;&gt;mnesia:table_info(Tab, frag_dist)&lt;/a&gt;&lt;/code&gt; 返回的列表。</target>
        </trans-unit>
        <trans-unit id="3fd93dbea15b7890f5b16d25f63231595d7c3961" translate="yes" xml:space="preserve">
          <source>Deletes a process group.</source>
          <target state="translated">删除一个进程组。</target>
        </trans-unit>
        <trans-unit id="5782ac9411066ed87e340711042cabf3a6908110" translate="yes" xml:space="preserve">
          <source>Deletes a query cursor. Only the owner of the cursor can delete the cursor.</source>
          <target state="translated">删除一个查询游标。只有游标的所有者可以删除游标。</target>
        </trans-unit>
        <trans-unit id="2086b9caf543452d116c631fe53c197196841a93" translate="yes" xml:space="preserve">
          <source>Deletes a table.</source>
          <target state="translated">删除一个表。</target>
        </trans-unit>
        <trans-unit id="6a6491894cfad6d987ac2669cb63e6bc94b09c09" translate="yes" xml:space="preserve">
          <source>Deletes all breakpoints in &lt;code&gt;Module&lt;/code&gt;.</source>
          <target state="translated">删除 &lt;code&gt;Module&lt;/code&gt; 中的所有断点。</target>
        </trans-unit>
        <trans-unit id="daab3c47664770a7f2523882873966d4a0076ad3" translate="yes" xml:space="preserve">
          <source>Deletes all breakpoints, or all breakpoints in &lt;code&gt;Module&lt;/code&gt;.</source>
          <target state="translated">删除 &lt;code&gt;Module&lt;/code&gt; 所有断点或所有断点。</target>
        </trans-unit>
        <trans-unit id="6548c310c2c7740c36f6bd49df68d5b9120b1241" translate="yes" xml:space="preserve">
          <source>Deletes all breakpoints.</source>
          <target state="translated">删除所有断点。</target>
        </trans-unit>
        <trans-unit id="124f6e9b50a45ade6ccc57ff2d9e7debf7081039" translate="yes" xml:space="preserve">
          <source>Deletes all entries associated with &lt;code&gt;Key&lt;/code&gt; from &lt;code&gt;List&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;List&lt;/code&gt; 中删除与 &lt;code&gt;Key&lt;/code&gt; 相关的所有条目。</target>
        </trans-unit>
        <trans-unit id="38f3aebeb7f45c6b537400495b97241efa03c656" translate="yes" xml:space="preserve">
          <source>Deletes all entries in the table &lt;code&gt;Tab&lt;/code&gt;.</source>
          <target state="translated">删除表 &lt;code&gt;Tab&lt;/code&gt; 中的所有条目。</target>
        </trans-unit>
        <trans-unit id="67ac4958c7dfc90539c309e1b96b511e018dfaa7" translate="yes" xml:space="preserve">
          <source>Deletes all instances of a specified object from a table. If a table is of type &lt;code&gt;bag&lt;/code&gt; or &lt;code&gt;duplicate_bag&lt;/code&gt;, this function can be used to delete only some of the objects with a specified key.</source>
          <target state="translated">从表中删除指定对象的所有实例。如果表的类型为 &lt;code&gt;bag&lt;/code&gt; 或 &lt;code&gt;duplicate_bag&lt;/code&gt; ，则此函数可用于仅删除具有指定键的某些对象。</target>
        </trans-unit>
        <trans-unit id="78d9345ff738a8e77092e38c95b5046ed6c20126" translate="yes" xml:space="preserve">
          <source>Deletes all objects from a table in almost constant time. However, if the table if fixed, &lt;code&gt;delete_all_objects(T)&lt;/code&gt; is equivalent to &lt;code&gt;match_delete(T, '_')&lt;/code&gt;.</source>
          <target state="translated">在几乎恒定的时间内从表中删除所有对象。但是，如果该表已修复，则 &lt;code&gt;delete_all_objects(T)&lt;/code&gt; 等同于 &lt;code&gt;match_delete(T, '_')&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ea8b2ce44904022ed53ed97cc4353f513fc72f0d" translate="yes" xml:space="preserve">
          <source>Deletes all objects of table &lt;code&gt;Name&lt;/code&gt; and then inserts all the objects of the ETS table &lt;code&gt;EtsTab&lt;/code&gt;. The objects are inserted in unspecified order. As &lt;code&gt;ets:safe_fixtable/2&lt;/code&gt; is called, the ETS table must be public or owned by the calling process.</source>
          <target state="translated">删除表 &lt;code&gt;Name&lt;/code&gt; 的所有对象，然后插入ETS表 &lt;code&gt;EtsTab&lt;/code&gt; 的所有对象。对象以未指定的顺序插入。由于 &lt;code&gt;ets:safe_fixtable/2&lt;/code&gt; 被调用时，ETS表必须是公开或调用进程所拥有。</target>
        </trans-unit>
        <trans-unit id="8f728783d92e7dc789b29765c7837e6b2fc109fa" translate="yes" xml:space="preserve">
          <source>Deletes all objects that match &lt;code&gt;Pattern&lt;/code&gt; from table &lt;code&gt;Name&lt;/code&gt;. For a description of patterns, see &lt;code&gt;&lt;a href=&quot;ets#match-2&quot;&gt;ets:match/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">从表 &lt;code&gt;Name&lt;/code&gt; 中删除与 &lt;code&gt;Pattern&lt;/code&gt; 匹配的所有对象。有关模式的描述，请参见 &lt;code&gt;&lt;a href=&quot;ets#match-2&quot;&gt;ets:match/2&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b9a8af6a45ed2e4b0bb942ee7179dc9fa786f56d" translate="yes" xml:space="preserve">
          <source>Deletes all objects that match pattern &lt;code&gt;Pattern&lt;/code&gt; from table &lt;code&gt;Tab&lt;/code&gt;. For a description of patterns, see &lt;code&gt;&lt;a href=&quot;#match-2&quot;&gt;match/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">从表 &lt;code&gt;Tab&lt;/code&gt; 中删除与模式 &lt;code&gt;Pattern&lt;/code&gt; 匹配的所有对象。有关模式的描述，请参见 &lt;code&gt;&lt;a href=&quot;#match-2&quot;&gt;match/2&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5d436ccf509ee3f7c5c496e0de4b03a59a5c6fcc" translate="yes" xml:space="preserve">
          <source>Deletes all objects with key &lt;code&gt;Key&lt;/code&gt; from table &lt;code&gt;Name&lt;/code&gt;.</source>
          <target state="translated">从表 &lt;code&gt;Name&lt;/code&gt; 删除键为 &lt;code&gt;Key&lt;/code&gt; 的所有对象。</target>
        </trans-unit>
        <trans-unit id="c8fd57fb7a817a35d2a007457bc0c233f86094e8" translate="yes" xml:space="preserve">
          <source>Deletes all objects with key &lt;code&gt;Key&lt;/code&gt; from table &lt;code&gt;Tab&lt;/code&gt;.</source>
          <target state="translated">从表 &lt;code&gt;Tab&lt;/code&gt; 删除键为 &lt;code&gt;Key&lt;/code&gt; 的所有对象。</target>
        </trans-unit>
        <trans-unit id="c71ba442aefb0dc2efa99cd31c5060b76055e05e" translate="yes" xml:space="preserve">
          <source>Deletes all records in table &lt;code&gt;Tab&lt;/code&gt; with the key &lt;code&gt;Key&lt;/code&gt;.</source>
          <target state="translated">使用键 &lt;code&gt;Key&lt;/code&gt; 删除表 &lt;code&gt;Tab&lt;/code&gt; 中的所有记录。</target>
        </trans-unit>
        <trans-unit id="2344f004a9f5e33045c0884bd8d5dd86195f69ab" translate="yes" xml:space="preserve">
          <source>Deletes an event handler from event manager &lt;code&gt;EventMgrRef&lt;/code&gt;. The event manager calls &lt;code&gt;&lt;a href=&quot;#Module:terminate-2&quot;&gt; Module:terminate/2&lt;/a&gt;&lt;/code&gt; to terminate the event handler.</source>
          <target state="translated">从事件管理器 &lt;code&gt;EventMgrRef&lt;/code&gt; 中删除事件处理程序。事件管理器调用 &lt;code&gt;&lt;a href=&quot;#Module:terminate-2&quot;&gt; Module:terminate/2&lt;/a&gt;&lt;/code&gt; 终止事件处理程序。</target>
        </trans-unit>
        <trans-unit id="a5caf26d3590c21b8bcec3060c282ef9add5dfe4" translate="yes" xml:space="preserve">
          <source>Deletes an event handler from event manager &lt;code&gt;EventMgrRef&lt;/code&gt;. The event manager calls &lt;code&gt;&lt;a href=&quot;#Module:terminate-2&quot;&gt;Module:terminate/2&lt;/a&gt;&lt;/code&gt; to terminate the event handler.</source>
          <target state="translated">从事件管理器 &lt;code&gt;EventMgrRef&lt;/code&gt; 中删除事件处理程序。事件管理器调用 &lt;code&gt;&lt;a href=&quot;#Module:terminate-2&quot;&gt;Module:terminate/2&lt;/a&gt;&lt;/code&gt; 终止事件处理程序。</target>
        </trans-unit>
        <trans-unit id="0e09884e56dfc4f00ff48674020d32b8fa72ec3a" translate="yes" xml:space="preserve">
          <source>Deletes an event handler from the error logger by calling &lt;code&gt;gen_event:delete_handler(error_logger, Handler, [])&lt;/code&gt;, see &lt;code&gt;gen_event(3)&lt;/code&gt;.</source>
          <target state="translated">通过调用 &lt;code&gt;gen_event:delete_handler(error_logger, Handler, [])&lt;/code&gt; 从错误记录器中删除事件处理程序，请参见 &lt;code&gt;gen_event(3)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ca92c0288404ef8ab25dadeb79c95d8e313e09df" translate="yes" xml:space="preserve">
          <source>Deletes an object from the registry. The object is not removed from the registry, it is only marked for later removal so that on later backups to &lt;code&gt;Mnesia&lt;/code&gt;, the corresponding object can be removed from the &lt;code&gt;Mnesia&lt;/code&gt; table as well. If another object is later created with the same key, the object will be reused.</source>
          <target state="translated">从注册表中删除对象。该对象不会从注册表中删除，它仅标记为以后删除，以便在以后备份到 &lt;code&gt;Mnesia&lt;/code&gt; 时，也可以从 &lt;code&gt;Mnesia&lt;/code&gt; 表中删除相应的对象。如果以后使用相同的键创建另一个对象，则该对象将被重用。</target>
        </trans-unit>
        <trans-unit id="2feb174fac092baec6bb2353f93b5cad1b6dbbcf" translate="yes" xml:space="preserve">
          <source>Deletes configuration data.</source>
          <target state="translated">删除配置数据。</target>
        </trans-unit>
        <trans-unit id="8996e0b1c689bc638a9e5e56a7107a50e726c868" translate="yes" xml:space="preserve">
          <source>Deletes configuration stored with &lt;code&gt;write_config(Data)&lt;/code&gt;. Notice that after this call any subsequent calls to &lt;code&gt;read_config&lt;/code&gt; must return &lt;code&gt;{error, Error}&lt;/code&gt;.</source>
          <target state="translated">删除存储在 &lt;code&gt;write_config(Data)&lt;/code&gt; 中的配置。请注意，在此调用之后，对 &lt;code&gt;read_config&lt;/code&gt; 的所有后续调用都必须返回 &lt;code&gt;{error, Error}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a8a1f1d2f9340db064af89064d205bffaa452986" translate="yes" xml:space="preserve">
          <source>Deletes digraph &lt;code&gt;G&lt;/code&gt;. This call is important as digraphs are implemented with ETS. There is no garbage collection of ETS tables. However, the digraph is deleted if the process that created the digraph terminates.</source>
          <target state="translated">删除有向图 &lt;code&gt;G&lt;/code&gt; ^。由于用ETS实现图，所以此调用很重要。没有ETS表的垃圾回收。但是，如果创建图的过程终止，则将删除图。</target>
        </trans-unit>
        <trans-unit id="1e8cf15862d762e5f8a004ce2fee57ee4454a28e" translate="yes" xml:space="preserve">
          <source>Deletes each object from table &lt;code&gt;Name&lt;/code&gt; such that applying match specification &lt;code&gt;MatchSpec&lt;/code&gt; to the object returns value &lt;code&gt;true&lt;/code&gt;. For a description of match specifications, see the &lt;code&gt;ERTS User's Guide&lt;/code&gt;. Returns the number of deleted objects.</source>
          <target state="translated">从表 &lt;code&gt;Name&lt;/code&gt; 中删除每个对象，以便将匹配规范 &lt;code&gt;MatchSpec&lt;/code&gt; 应用于该对象将返回值 &lt;code&gt;true&lt;/code&gt; 。有关匹配规范的描述，请参见《 &lt;code&gt;ERTS User's Guide&lt;/code&gt; 。返回已删除对象的数量。</target>
        </trans-unit>
        <trans-unit id="36f46cfee96cbd0fcb65a554325c7843eb348953" translate="yes" xml:space="preserve">
          <source>Deletes edge &lt;code&gt;E&lt;/code&gt; from digraph &lt;code&gt;G&lt;/code&gt;.</source>
          <target state="translated">删除边缘 &lt;code&gt;E&lt;/code&gt; 从有向图 &lt;code&gt;G&lt;/code&gt; ^。</target>
        </trans-unit>
        <trans-unit id="ae26dabdadf434b637f48f8f90ef998fe6289168" translate="yes" xml:space="preserve">
          <source>Deletes edges from digraph &lt;code&gt;G&lt;/code&gt; until there are no &lt;code&gt;&lt;a href=&quot;#path&quot;&gt;paths&lt;/a&gt;&lt;/code&gt; from vertex &lt;code&gt;V1&lt;/code&gt; to vertex &lt;code&gt;V2&lt;/code&gt;.</source>
          <target state="translated">删除有向图 &lt;code&gt;G&lt;/code&gt; 的边，直到没有从顶点 &lt;code&gt;V1&lt;/code&gt; 到顶点 &lt;code&gt;V2&lt;/code&gt; 的 &lt;code&gt;&lt;a href=&quot;#path&quot;&gt;paths&lt;/a&gt;&lt;/code&gt; 为止。</target>
        </trans-unit>
        <trans-unit id="5dd5c53526024f8af02322fcf011be99c77bbb2e" translate="yes" xml:space="preserve">
          <source>Deletes file or directory &lt;code&gt;File&lt;/code&gt;. If &lt;code&gt;File&lt;/code&gt; is a directory, its contents is first recursively deleted. Returns:</source>
          <target state="translated">删除文件或目录 &lt;code&gt;File&lt;/code&gt; 。如果 &lt;code&gt;File&lt;/code&gt; 是目录，则首先递归删除其内容。返回值：</target>
        </trans-unit>
        <trans-unit id="ae4fe94c9918f898de81f8233a9ef1f179233cfb" translate="yes" xml:space="preserve">
          <source>Deletes the breakpoint at &lt;code&gt;Line&lt;/code&gt; in &lt;code&gt;Module&lt;/code&gt;.</source>
          <target state="translated">删除在断点处 &lt;code&gt;Line&lt;/code&gt; 的 &lt;code&gt;Module&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8a8a3823a04d3923ed4cecf755bd1cd98d275849" translate="yes" xml:space="preserve">
          <source>Deletes the breakpoints at the first line of every clause of function &lt;code&gt;Module:Name/Arity&lt;/code&gt;.</source>
          <target state="translated">在功能 &lt;code&gt;Module:Name/Arity&lt;/code&gt; 的每个子句的第一行删除断点。</target>
        </trans-unit>
        <trans-unit id="46e356165916fa441c4393d47df41d4f5eafc033" translate="yes" xml:space="preserve">
          <source>Deletes the current key, if it is valid. Calls the Win32 API function &lt;code&gt;RegDeleteKey()&lt;/code&gt;. Notice that this call does not change the current key (unlike &lt;code&gt;&lt;a href=&quot;#change_key_create-2&quot;&gt; change_key_create/2&lt;/a&gt;&lt;/code&gt;). This means that after the call, the current key is invalid.</source>
          <target state="translated">删除当前密钥（如果有效）。调用Win32 API函数 &lt;code&gt;RegDeleteKey()&lt;/code&gt; 。请注意，此调用不会更改当前键（不同于 &lt;code&gt;&lt;a href=&quot;#change_key_create-2&quot;&gt; change_key_create/2&lt;/a&gt;&lt;/code&gt; ）。这意味着呼叫后，当前密钥无效。</target>
        </trans-unit>
        <trans-unit id="6f4c876adf78c7429ea484cfe8d592f3d4950615" translate="yes" xml:space="preserve">
          <source>Deletes the current key, if it is valid. Calls the Win32 API function &lt;code&gt;RegDeleteKey()&lt;/code&gt;. Notice that this call does not change the current key (unlike &lt;code&gt;&lt;a href=&quot;#change_key_create-2&quot;&gt;change_key_create/2&lt;/a&gt;&lt;/code&gt;). This means that after the call, the current key is invalid.</source>
          <target state="translated">删除当前密钥（如果有效）。调用Win32 API函数 &lt;code&gt;RegDeleteKey()&lt;/code&gt; 。请注意，此调用不会更改当前键（不同于 &lt;code&gt;&lt;a href=&quot;#change_key_create-2&quot;&gt;change_key_create/2&lt;/a&gt;&lt;/code&gt; ）。这意味着呼叫后，当前密钥无效。</target>
        </trans-unit>
        <trans-unit id="4f8afd6d7d8311edbd37e3839c01ce48b35a3601" translate="yes" xml:space="preserve">
          <source>Deletes the edges in list &lt;code&gt;Edges&lt;/code&gt; from digraph &lt;code&gt;G&lt;/code&gt;.</source>
          <target state="translated">从图 &lt;code&gt;G&lt;/code&gt; 中删除列表 &lt;code&gt;Edges&lt;/code&gt; 边缘&amp;rdquo;中的边缘。</target>
        </trans-unit>
        <trans-unit id="e090b8665faa778d2ef9696ec7f8fe8a880abb2f" translate="yes" xml:space="preserve">
          <source>Deletes the entire table &lt;code&gt;Tab&lt;/code&gt;.</source>
          <target state="translated">删除整个表 &lt;code&gt;Tab&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="71fc151dee30c6abe6f031a8b13b17a8191c83f4" translate="yes" xml:space="preserve">
          <source>Deletes the environment variable &lt;code&gt;VarName&lt;/code&gt;.</source>
          <target state="translated">删除环境变量 &lt;code&gt;VarName&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f708faba6af97f22007037df3f544635b58fb9f9" translate="yes" xml:space="preserve">
          <source>Deletes the file &lt;code&gt;File&lt;/code&gt; at the remote server.</source>
          <target state="translated">删除远程服务器上的文件 &lt;code&gt;File&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1220b4e312e97076f6d4fd5b1f7cb6ed925918bd" translate="yes" xml:space="preserve">
          <source>Deletes the file specified by &lt;code&gt;Name&lt;/code&gt;.</source>
          <target state="translated">删除 &lt;code&gt;Name&lt;/code&gt; 指定的文件。</target>
        </trans-unit>
        <trans-unit id="311abc79f8faf3f31f0de87d15262b09b11f065e" translate="yes" xml:space="preserve">
          <source>Deletes the files &lt;code&gt;erl&lt;/code&gt; and &lt;code&gt;start&lt;/code&gt; from &lt;code&gt;tmp/erts-5.10.4/bin&lt;/code&gt;. These files are created again from source when installing the release.</source>
          <target state="translated">删除文件 &lt;code&gt;erl&lt;/code&gt; 并 &lt;code&gt;start&lt;/code&gt; 从 &lt;code&gt;tmp/erts-5.10.4/bin&lt;/code&gt; 。安装发行版时，将从源中再次创建这些文件。</target>
        </trans-unit>
        <trans-unit id="a4766320246a7839926e41b58ceb885afd72bb95" translate="yes" xml:space="preserve">
          <source>Deletes the index on attribute with name &lt;code&gt;AttrName&lt;/code&gt; in a table.</source>
          <target state="translated">在表中删除名称为 &lt;code&gt;AttrName&lt;/code&gt; 的属性的索引。</target>
        </trans-unit>
        <trans-unit id="87ff8ee5f5ac17a2346e6941ae9fe9a8f102c0fd" translate="yes" xml:space="preserve">
          <source>Deletes the lock &lt;code&gt;Id&lt;/code&gt; synchronously.</source>
          <target state="translated">同步删除锁 &lt;code&gt;Id&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b5d31af51e57f1d619a23240313fc7f8259cab1f" translate="yes" xml:space="preserve">
          <source>Deletes the replica of table &lt;code&gt;Tab&lt;/code&gt; at node &lt;code&gt;Node&lt;/code&gt;. When the last replica is deleted with this function, the table disappears entirely.</source>
          <target state="translated">删除节点 &lt;code&gt;Node&lt;/code&gt; 上的表 &lt;code&gt;Tab&lt;/code&gt; 的副本。使用此功能删除最后一个副本后，该表将完全消失。</target>
        </trans-unit>
        <trans-unit id="327e2bdef58dc2b2885dab77476a029eecf521cd" translate="yes" xml:space="preserve">
          <source>Deletes the row in the table.</source>
          <target state="translated">删除表中的行。</target>
        </trans-unit>
        <trans-unit id="ef466f07da53b5c5a842ff32c0bb33037d702347" translate="yes" xml:space="preserve">
          <source>Deletes the vertices in list &lt;code&gt;Vertices&lt;/code&gt; from digraph &lt;code&gt;G&lt;/code&gt;.</source>
          <target state="translated">从有向图 &lt;code&gt;G&lt;/code&gt; 中删除列表&amp;ldquo;顶点&amp;rdquo;中的 &lt;code&gt;Vertices&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ae125b029da9f118d4a67820ec02ed4a2262e06a" translate="yes" xml:space="preserve">
          <source>Deletes these extensions from the list of compress extensions.</source>
          <target state="translated">从压缩扩展列表中删除这些扩展。</target>
        </trans-unit>
        <trans-unit id="d7cebb65c66062e754f67e7cd84ff3910ba98a0e" translate="yes" xml:space="preserve">
          <source>Deletes these extensions from the list of uncompress extensions.</source>
          <target state="translated">从解压扩展列表中删除这些扩展。</target>
        </trans-unit>
        <trans-unit id="d080c61dd65db208d878d0084fbbff8bedd06443" translate="yes" xml:space="preserve">
          <source>Deletes vertex &lt;code&gt;V&lt;/code&gt; from digraph &lt;code&gt;G&lt;/code&gt;. Any edges &lt;code&gt;&lt;a href=&quot;#emanate&quot;&gt;emanating&lt;/a&gt;&lt;/code&gt; from &lt;code&gt;V&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#incident&quot;&gt;incident&lt;/a&gt;&lt;/code&gt; on &lt;code&gt;V&lt;/code&gt; are also deleted.</source>
          <target state="translated">删除顶点 &lt;code&gt;V&lt;/code&gt; 从有向图 &lt;code&gt;G&lt;/code&gt; ^。从 &lt;code&gt;V&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#emanate&quot;&gt;emanating&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;#incident&quot;&gt;incident&lt;/a&gt;&lt;/code&gt; 在 &lt;code&gt;V&lt;/code&gt; 上的任何边也将被删除。</target>
        </trans-unit>
        <trans-unit id="743f41b9c4291a0f1388dfcb3326f2e76e1e6fe5" translate="yes" xml:space="preserve">
          <source>Deleting an Element</source>
          <target state="translated">删除一个元素</target>
        </trans-unit>
        <trans-unit id="b21f3d4de11cc4c159ce99657c2fbc90fdf1feff" translate="yes" xml:space="preserve">
          <source>Deletion of atoms and other terms that fit in one machine word is specially optimized to avoid doing a global GC. It is still not recommended to update persistent terms with such values too frequently because the hash table holding the keys is copied every time a persistent term is updated.</source>
          <target state="translated">删除原子和其他适合在一个机器字中的术语是特别优化的,以避免做全局GC。我们仍然不建议过于频繁地更新含有这些值的持久性项,因为每次更新持久性项时,持有键的哈希表都会被复制。</target>
        </trans-unit>
        <trans-unit id="5dcabc9ea39d37218edc79435c06dbd50a0deb2e" translate="yes" xml:space="preserve">
          <source>Deliver distribution channel data from a remote node to the local node.</source>
          <target state="translated">将配送通道数据从远程节点传送到本地节点。</target>
        </trans-unit>
        <trans-unit id="f56e9fc6568538a640442392ddf7c4208577ff80" translate="yes" xml:space="preserve">
          <source>Delivered when a peer sends an adaptation layer indication parameter (configured through option &lt;code&gt;&lt;a href=&quot;#option-sctp_adaptation_layer&quot;&gt;sctp_adaptation_layer&lt;/a&gt;&lt;/code&gt;). Notice that with the current implementation of the Erlang/SCTP binding, this event is disabled by default.</source>
          <target state="translated">当对等方发送适配层指示参数（通过选项 &lt;code&gt;&lt;a href=&quot;#option-sctp_adaptation_layer&quot;&gt;sctp_adaptation_layer&lt;/a&gt;&lt;/code&gt; 配置）时传递。请注意，使用Erlang / SCTP绑定的当前实现，默认情况下将禁用此事件。</target>
        </trans-unit>
        <trans-unit id="41529ae1ea2763fa3d1c8d48455acf9f20804cf1" translate="yes" xml:space="preserve">
          <source>Delivery is done differently depending on the value of &lt;code&gt;tag_receiver()&lt;/code&gt;:</source>
          <target state="translated">根据 &lt;code&gt;tag_receiver()&lt;/code&gt; 的值，交付方式有所不同：</target>
        </trans-unit>
        <trans-unit id="af78bc157d8b4fffa9286db1b886ea4e95d3453e" translate="yes" xml:space="preserve">
          <source>Demanding reload when a reload is already in progress is always an error. Using the high-level functions, it is also an error to demand reloading when more than one &lt;code&gt;&lt;a href=&quot;#users&quot;&gt;user&lt;/a&gt;&lt;/code&gt; has the driver loaded.</source>
          <target state="translated">在进行重新加载时要求重新加载始终是一个错误。使用高级功能，当加载了多个 &lt;code&gt;&lt;a href=&quot;#users&quot;&gt;user&lt;/a&gt;&lt;/code&gt; 的驱动程序时，要求重新加载也是错误的。</target>
        </trans-unit>
        <trans-unit id="4dcb269c56df9edcec6a92cbe87d6a1b141f056d" translate="yes" xml:space="preserve">
          <source>Demands for efficiency when reading data from an I/O server has not only lead to the addition of the &lt;code&gt;get_line&lt;/code&gt; and &lt;code&gt;get_chars&lt;/code&gt; requests, but has also added the concept of I/O server options. No options are mandatory to implement, but all I/O servers in the Erlang standard libraries honor the &lt;code&gt;binary&lt;/code&gt; option, which allows element &lt;code&gt;Data&lt;/code&gt; of the &lt;code&gt;io_reply&lt;/code&gt; tuple to be a binary instead of a list &lt;strong&gt;when possible&lt;/strong&gt;. If the data is sent as a binary, Unicode data is sent in the standard Erlang Unicode format, that is, UTF-8 (notice that the function of the &lt;code&gt;get_until&lt;/code&gt; request still gets list data regardless of the I/O server mode).</source>
          <target state="translated">从I / O服务器读取数据时对效率的要求不仅导致增加了 &lt;code&gt;get_line&lt;/code&gt; 和 &lt;code&gt;get_chars&lt;/code&gt; 请求，而且还增加了I / O服务器选项的概念。没有选项是强制性实施，但在二郎标准库中的所有I / O服务器荣誉 &lt;code&gt;binary&lt;/code&gt; 选项，它允许元素 &lt;code&gt;Data&lt;/code&gt; 中的 &lt;code&gt;io_reply&lt;/code&gt; 元组是二进制，而不是一个列表&lt;strong&gt;时可能&lt;/strong&gt;。如果以二进制形式发送数据， &lt;code&gt;get_until&lt;/code&gt; 标准Erlang Unicode格式（即UTF-8）发送Unicode数据（请注意，不管I / O服务器模式如何，get_until请求的功能仍然会获取列表数据）。</target>
        </trans-unit>
        <trans-unit id="9b75d5fa2d821733c84521ae433ed2c40237c592" translate="yes" xml:space="preserve">
          <source>Denotes if the terminal is to echo input. Only supported for the standard shell I/O server (&lt;code&gt;group.erl&lt;/code&gt;)</source>
          <target state="translated">指示终端是否回显输入。仅标准外壳I / O服务器（ &lt;code&gt;group.erl&lt;/code&gt; ）支持</target>
        </trans-unit>
        <trans-unit id="770427e097fad59d1892a79f3d07020d064304fe" translate="yes" xml:space="preserve">
          <source>Denotes the last part of the OID which specifies the index of the row in the table (see RFC1212, 4.1.6 for more information about INDEX).</source>
          <target state="translated">表示OID的最后一部分,它指定了表中行的索引(关于INDEX的更多信息,请参见RFC1212,4.1.6)。</target>
        </trans-unit>
        <trans-unit id="0562f32dc56f5c702810cbe010068ddd38dbd69a" translate="yes" xml:space="preserve">
          <source>Dependencies</source>
          <target state="translated">Dependencies</target>
        </trans-unit>
        <trans-unit id="9617b6235113e37c04bab7c3ca9a40d08c2fd9ba" translate="yes" xml:space="preserve">
          <source>Dependencies between applications or modules displayed as a graph</source>
          <target state="translated">应用程序或模块之间的依赖关系以图表形式显示。</target>
        </trans-unit>
        <trans-unit id="ed42c382496ca9fcfe7ec583d2cd5e90ce4a7bae" translate="yes" xml:space="preserve">
          <source>Depending on &lt;code&gt;Arg&lt;/code&gt;, this function can return a list not only of visible nodes, but also hidden nodes and previously known nodes, and so on.</source>
          <target state="translated">取决于 &lt;code&gt;Arg&lt;/code&gt; ，此函数不仅可以返回可见节点的列表，还可以返回隐藏节点和先前已知的节点等。</target>
        </trans-unit>
        <trans-unit id="888f8a801100b3047d49eff8aacaa93e0afae980" translate="yes" xml:space="preserve">
          <source>Depending on &lt;code&gt;Flag&lt;/code&gt;, the calling process starts subscribing (&lt;code&gt;Flag&lt;/code&gt; equal to &lt;code&gt;true&lt;/code&gt;) or stops subscribing (&lt;code&gt;Flag&lt;/code&gt; equal to &lt;code&gt;false&lt;/code&gt;) to node status change messages.</source>
          <target state="translated">根据 &lt;code&gt;Flag&lt;/code&gt; 的不同，调用过程开始订阅（ &lt;code&gt;Flag&lt;/code&gt; 等于 &lt;code&gt;true&lt;/code&gt; ）或停止订阅（ &lt;code&gt;Flag&lt;/code&gt; 等于 &lt;code&gt;false&lt;/code&gt; ）到节点状态更改消息。</target>
        </trans-unit>
        <trans-unit id="3a593c77b3451c58e4a483fc1a4c2ed4a7460896" translate="yes" xml:space="preserve">
          <source>Depending on Unix:</source>
          <target state="translated">取决于Unix。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
