<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="erlang">
    <body>
      <group id="erlang">
        <trans-unit id="d1be27ef0d2a3f64890f259db44beefa37af2c5b" translate="yes" xml:space="preserve">
          <source>Read more about maps in &lt;code&gt;&lt;a href=&quot;expressions#map_expressions&quot;&gt;Map Expressions&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;&lt;a href=&quot;expressions#map_expressions&quot;&gt;Map Expressions&lt;/a&gt;&lt;/code&gt; 阅读有关地图的更多信息。</target>
        </trans-unit>
        <trans-unit id="9a94884a1eeb79bbde0f80da164882bdecb46069" translate="yes" xml:space="preserve">
          <source>Read more about ports in &lt;code&gt;&lt;a href=&quot;ports&quot;&gt;Ports and Port Drivers&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;&lt;a href=&quot;ports&quot;&gt;Ports and Port Drivers&lt;/a&gt;&lt;/code&gt; 阅读有关端口的更多信息。</target>
        </trans-unit>
        <trans-unit id="554282f3efb20a0099d5f18b19f7a754b826fd3a" translate="yes" xml:space="preserve">
          <source>Read more about processes in &lt;code&gt;&lt;a href=&quot;processes&quot;&gt;Processes&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;&lt;a href=&quot;processes&quot;&gt;Processes&lt;/a&gt;&lt;/code&gt; 阅读有关流程的更多信息。</target>
        </trans-unit>
        <trans-unit id="cdf0f64fa8afed2eb3ae3485ed6444efd4f45c5e" translate="yes" xml:space="preserve">
          <source>Read more about records in &lt;code&gt;&lt;a href=&quot;records&quot;&gt;Records&lt;/a&gt;&lt;/code&gt;. More examples can be found in &lt;code&gt; Programming Examples&lt;/code&gt;.</source>
          <target state="translated">在&amp;ldquo; &lt;code&gt;&lt;a href=&quot;records&quot;&gt;Records&lt;/a&gt;&lt;/code&gt; 了解有关记录的更多信息。可以在&amp;ldquo; &lt;code&gt; Programming Examples&lt;/code&gt; 找到更多示例。</target>
        </trans-unit>
        <trans-unit id="d7bf0c0fc48b6429df321b465a4fd9dd18e68f80" translate="yes" xml:space="preserve">
          <source>Read more about records in &lt;code&gt;&lt;a href=&quot;records&quot;&gt;Records&lt;/a&gt;&lt;/code&gt;. More examples can be found in &lt;code&gt;Programming Examples&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;&lt;a href=&quot;records&quot;&gt;Records&lt;/a&gt;&lt;/code&gt; 中了解有关记录的更多信息。可以在&amp;ldquo; &lt;code&gt;Programming Examples&lt;/code&gt; 找到更多示例。</target>
        </trans-unit>
        <trans-unit id="88c12fc1054e6dee5889bd067bef3dd784174d05" translate="yes" xml:space="preserve">
          <source>Read more about the &lt;code&gt;&lt;a href=&quot;../system_principles/versions&quot;&gt;version handling&lt;/a&gt;&lt;/code&gt; introduced in Erlang/OTP release 17, which also describes how to determine if an installation includes one or more patched applications.</source>
          <target state="translated">阅读有关Erlang / OTP版本17中引入的 &lt;code&gt;&lt;a href=&quot;../system_principles/versions&quot;&gt;version handling&lt;/a&gt;&lt;/code&gt; 更多信息，该版本还描述了如何确定安装是否包含一个或多个修补的应用程序。</target>
        </trans-unit>
        <trans-unit id="14a34ee6b71b541ff094ed440e6eb395aa847e1b" translate="yes" xml:space="preserve">
          <source>Read more about the &lt;code&gt;version handling&lt;/code&gt; introduced in Erlang/OTP release 17, which also describes how to determine if an installation includes one or more patched applications.</source>
          <target state="translated">阅读有关Erlang / OTP版本17中引入的 &lt;code&gt;version handling&lt;/code&gt; 更多信息，该版本还描述了如何确定安装中是否包含一个或多个修补的应用程序。</target>
        </trans-unit>
        <trans-unit id="f5acd88bebed6795b6d43dc94e4d954048ae135b" translate="yes" xml:space="preserve">
          <source>Read more in &lt;code&gt;&lt;a href=&quot;macros&quot;&gt;Preprocessor&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;&lt;a href=&quot;macros&quot;&gt;Preprocessor&lt;/a&gt;&lt;/code&gt; 阅读更多内容。</target>
        </trans-unit>
        <trans-unit id="25902641bc735ddad3dc3752e9e7cdf871e33269" translate="yes" xml:space="preserve">
          <source>Read more in &lt;code&gt;&lt;a href=&quot;typespec&quot;&gt;Types and Function specifications&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;&lt;a href=&quot;typespec&quot;&gt;Types and Function specifications&lt;/a&gt;&lt;/code&gt; 了解更多信息。</target>
        </trans-unit>
        <trans-unit id="5a69c3fb0d365b68d3c46e0941661c9e79330cc2" translate="yes" xml:space="preserve">
          <source>Read operations may see sequentially inconsistent results with regard to concurrent write operations. Even if write operation A is done sequentially before write operation B, a concurrent reader may see any combination of A and B, including only B. A read operation is only guaranteed to see all writes done sequentially before the read. No writes are ever lost, but will eventually all be seen.</source>
          <target state="translated">读操作可能会看到与并发的写操作顺序不一致的结果,即使写操作A在写操作B之前顺序完成,并发的读者也可能看到A和B的任何组合,包括只有B。即使写操作A是在写操作B之前按顺序完成的,一个并发的读者也可能看到A和B的任何组合,包括只有B。任何写都不会丢失,但最终会全部被看到。</target>
        </trans-unit>
        <trans-unit id="f648b4cd550b1fadddeedd092b40e39b527f7289" translate="yes" xml:space="preserve">
          <source>Read operations must be fast and performed in RAM.</source>
          <target state="translated">读取操作必须快速,并在RAM中进行。</target>
        </trans-unit>
        <trans-unit id="fcc1f12b3d10e63c14a1f8d7961be76cc365a4c2" translate="yes" xml:space="preserve">
          <source>Read operations on the file return binaries rather than lists.</source>
          <target state="translated">对文件的读取操作返回二进制文件而不是列表。</target>
        </trans-unit>
        <trans-unit id="a2e1d0549799772810864d99ca395221ead7f179" translate="yes" xml:space="preserve">
          <source>Read permission: group</source>
          <target state="translated">阅读权限:组</target>
        </trans-unit>
        <trans-unit id="907dbe453adbd7fa6e280b4f6613faf3d07802de" translate="yes" xml:space="preserve">
          <source>Read permission: other</source>
          <target state="translated">阅读权限:其他</target>
        </trans-unit>
        <trans-unit id="e07884b49a0e21ab3dba84b49e8cf1e33e98b370" translate="yes" xml:space="preserve">
          <source>Read permission: owner</source>
          <target state="translated">阅读权限:所有者</target>
        </trans-unit>
        <trans-unit id="a9a2a9ac46cb0c7c5000cf0d6d9e745656ad5010" translate="yes" xml:space="preserve">
          <source>Read the &lt;code&gt;&lt;a href=&quot;#encoding&quot;&gt;encoding&lt;/a&gt;&lt;/code&gt; from a binary. Returns the read encoding, or &lt;code&gt;none&lt;/code&gt; if no valid encoding is found.</source>
          <target state="translated">从二进制文件读取 &lt;code&gt;&lt;a href=&quot;#encoding&quot;&gt;encoding&lt;/a&gt;&lt;/code&gt; 。返回读取编码，或 &lt;code&gt;none&lt;/code&gt; ，如果没有有效的编码找到。</target>
        </trans-unit>
        <trans-unit id="b9bff9acfee5a49ed23833e2b2e81ce0eafcf087" translate="yes" xml:space="preserve">
          <source>Read the &lt;code&gt;&lt;a href=&quot;#encoding&quot;&gt;encoding&lt;/a&gt;&lt;/code&gt; from a file. Returns the read encoding, or &lt;code&gt;none&lt;/code&gt; if no valid encoding is found.</source>
          <target state="translated">从文件中读取 &lt;code&gt;&lt;a href=&quot;#encoding&quot;&gt;encoding&lt;/a&gt;&lt;/code&gt; 。返回读取编码，或 &lt;code&gt;none&lt;/code&gt; ，如果没有有效的编码找到。</target>
        </trans-unit>
        <trans-unit id="03addc218b3ecbd8505da6cd353ed8258e946c82" translate="yes" xml:space="preserve">
          <source>Read the current agent community config file.</source>
          <target state="translated">读取当前代理社区配置文件。</target>
        </trans-unit>
        <trans-unit id="02b971b894024a807e610f7f5b2b637f8dd97000" translate="yes" xml:space="preserve">
          <source>Read the current agent config file.</source>
          <target state="translated">读取当前代理配置文件。</target>
        </trans-unit>
        <trans-unit id="342a88f5b0ef188a6710923ae2c68b182e32efef" translate="yes" xml:space="preserve">
          <source>Read the current agent context config file.</source>
          <target state="translated">读取当前代理上下文配置文件。</target>
        </trans-unit>
        <trans-unit id="b6fc36e2d6043726f29d5d8f1c08f9f88ee70c74" translate="yes" xml:space="preserve">
          <source>Read the current agent notify config file.</source>
          <target state="translated">读取当前代理通知配置文件。</target>
        </trans-unit>
        <trans-unit id="3eb932c8851f4e2dc54a684ed2c99b02f3242cba" translate="yes" xml:space="preserve">
          <source>Read the current agent standard config file.</source>
          <target state="translated">读取当前代理标准配置文件。</target>
        </trans-unit>
        <trans-unit id="35433f92aa6ddf91ab8a32ad2893c1416b06ab17" translate="yes" xml:space="preserve">
          <source>Read the current agent target_addr config file.</source>
          <target state="translated">读取当前代理的 target_addr 配置文件。</target>
        </trans-unit>
        <trans-unit id="78a4a501636d7de7588fd4069fcaa0ba16c5b911" translate="yes" xml:space="preserve">
          <source>Read the current agent target_params config file.</source>
          <target state="translated">读取当前代理的 target_params 配置文件。</target>
        </trans-unit>
        <trans-unit id="fc9c3b2ea448e1950b438a66a1ac53da2c5c848c" translate="yes" xml:space="preserve">
          <source>Read the current agent usm config file.</source>
          <target state="translated">读取当前代理usm配置文件。</target>
        </trans-unit>
        <trans-unit id="a884a170d9e1573ebe82ea228079e20c5eb624ee" translate="yes" xml:space="preserve">
          <source>Read the current agent vacm config file.</source>
          <target state="translated">读取当前代理的 vacm 配置文件。</target>
        </trans-unit>
        <trans-unit id="1cccddc3b38e21d434122b66beec2e249ff466f7" translate="yes" xml:space="preserve">
          <source>Read the current manager agents config file.</source>
          <target state="translated">读取当前经理代理配置文件。</target>
        </trans-unit>
        <trans-unit id="5ea1df47d9a8182ee88ccdea1f6d44fd125d1e2e" translate="yes" xml:space="preserve">
          <source>Read the current manager config file.</source>
          <target state="translated">读取当前管理器配置文件。</target>
        </trans-unit>
        <trans-unit id="bf1020e0b4f41cf2c22e11431cbaedc662a19f79" translate="yes" xml:space="preserve">
          <source>Read the current manager users config file.</source>
          <target state="translated">读取当前经理用户配置文件。</target>
        </trans-unit>
        <trans-unit id="59e482ad7bf583e0ad9e54f15735c13cf785f39c" translate="yes" xml:space="preserve">
          <source>Read the current manager usm config file.</source>
          <target state="translated">读取当前管理器usm配置文件。</target>
        </trans-unit>
        <trans-unit id="72acd8bf1ebaf0ea0b01aa11fbf38683eff7f9c0" translate="yes" xml:space="preserve">
          <source>Read the embedded documentation by using the built-in shell functions &lt;code&gt;h/1,2,3&lt;/code&gt; or &lt;code&gt;ht/1,2,3&lt;/code&gt;.</source>
          <target state="translated">使用内置的shell函数 &lt;code&gt;h/1,2,3&lt;/code&gt; 或 &lt;code&gt;ht/1,2,3&lt;/code&gt; 阅读嵌入式文档。</target>
        </trans-unit>
        <trans-unit id="235e5232a0514fada92feb1784bb81e7744ff84a" translate="yes" xml:space="preserve">
          <source>Read the pointer using an atomic memory operation at determined index in array.</source>
          <target state="translated">在数组中使用原子内存操作读取指针。</target>
        </trans-unit>
        <trans-unit id="be2ba72b989b324a88b19ff039a27eab2a805aaf" translate="yes" xml:space="preserve">
          <source>Read the whole manual page if it is the first time you are using the transformations.</source>
          <target state="translated">如果您是第一次使用变换,请阅读整个手册页面。</target>
        </trans-unit>
        <trans-unit id="0a736cf2a92b3cd68f6984820f5b1301a5650942" translate="yes" xml:space="preserve">
          <source>Read unlocks an rwlock. The rwlock currently must be read locked by the calling thread.</source>
          <target state="translated">读解锁一个rwlock。rwlock当前必须由调用线程读取锁定。</target>
        </trans-unit>
        <trans-unit id="ce3d31d0d015c1d0a226f6e114ecb8215a61f763" translate="yes" xml:space="preserve">
          <source>Read/write lock. Used to allow multiple threads to read shared data while only allowing one thread to write the same data. Multiple threads can read lock an rwlock at the same time, while only one thread can read/write lock an rwlock at a time.</source>
          <target state="translated">读/写锁。用于允许多个线程读取共享数据,同时只允许一个线程写入相同的数据。多个线程可以同时读取锁定一个rwlock,而一次只允许一个线程读取/写入锁定一个rwlock。</target>
        </trans-unit>
        <trans-unit id="a088a96620af47c2bef0d4a01c4765cd4908ac8e" translate="yes" xml:space="preserve">
          <source>Read/write locks an rwlock. The calling thread is blocked until the rwlock has been read/write locked. A thread that currently has read or read/write locked the rwlock &lt;strong&gt;cannot&lt;/strong&gt; lock the same rwlock again.</source>
          <target state="translated">读/写锁定rwlock。调用线程被阻塞，直到rwlock被读/写锁定。当前具有读或读/写锁定rwlock的线程&lt;strong&gt;无法&lt;/strong&gt;再次锁定同一rwlock。</target>
        </trans-unit>
        <trans-unit id="88f7eef8181951ff1f841f14cc7c3dfc0d58e28f" translate="yes" xml:space="preserve">
          <source>Read/write unlocks an rwlock. The rwlock currently must be read/write locked by the calling thread.</source>
          <target state="translated">读/写解锁一个rwlock,当前rwlock必须被调用线程读/写锁定。rwlock当前必须由调用线程进行读/写锁定。</target>
        </trans-unit>
        <trans-unit id="db3a2609cebf7e16af76fe0013217765a0dfa76f" translate="yes" xml:space="preserve">
          <source>Readability and maintainability suffer when test cases become too large and extensive. It is not certain that the resulting log files reflect very well the number of tests performed.</source>
          <target state="translated">当测试用例过于庞大和广泛时,可读性和可维护性就会受到影响。由此产生的日志文件并不能很好地反映出所进行的测试的数量。</target>
        </trans-unit>
        <trans-unit id="a85d8890d6aa6702dddc217c7e6abcf877866f20" translate="yes" xml:space="preserve">
          <source>Reading Test Specification Terms</source>
          <target state="translated">阅读测试规范术语</target>
        </trans-unit>
        <trans-unit id="9aec65966a9a00d068d698cfbc5cbf74dcf30e9b" translate="yes" xml:space="preserve">
          <source>Reading and writing of files with Unicode data is, however, not best done with the &lt;code&gt;file&lt;/code&gt; module, as its interface is byte-oriented. A file opened with a Unicode encoding (like UTF-8) is best read or written using the &lt;code&gt;io&lt;/code&gt; module.</source>
          <target state="translated">但是，使用 &lt;code&gt;file&lt;/code&gt; 模块读取和写入带有Unicode数据的文件并不是最好的方法，因为它的接口是面向字节的。最好使用 &lt;code&gt;io&lt;/code&gt; 模块读写以Unicode编码（例如UTF-8）打开的文件。</target>
        </trans-unit>
        <trans-unit id="e4c222fd852ba1812493153ccc2dcc4014ebaf8c" translate="yes" xml:space="preserve">
          <source>Reading man pages. Make sure that &lt;code&gt;erl&lt;/code&gt; is referring to the installed version. For example &lt;code&gt;/usr/local/bin/erl&lt;/code&gt;. Try viewing at the man page for Mnesia</source>
          <target state="translated">阅读手册页。确保 &lt;code&gt;erl&lt;/code&gt; 指的是已安装的版本。例如 &lt;code&gt;/usr/local/bin/erl&lt;/code&gt; 。尝试在Mnesia的手册页上查看</target>
        </trans-unit>
        <trans-unit id="252f4b5e75f178405e6c8d8917b5a5ddac65f605" translate="yes" xml:space="preserve">
          <source>Reads &lt;code&gt;Count&lt;/code&gt; characters from standard input (&lt;code&gt;IoDevice&lt;/code&gt;), prompting it with &lt;code&gt;Prompt&lt;/code&gt;.</source>
          <target state="translated">从标准输入（ &lt;code&gt;IoDevice&lt;/code&gt; ）读取 &lt;code&gt;Count&lt;/code&gt; 字符，并用 &lt;code&gt;Prompt&lt;/code&gt; 提示。</target>
        </trans-unit>
        <trans-unit id="f6c0eac8f5e6c09bd6f995de56f2885b56f262d1" translate="yes" xml:space="preserve">
          <source>Reads &lt;code&gt;Len&lt;/code&gt; bytes from the file referenced by &lt;code&gt;Handle&lt;/code&gt;. Returns &lt;code&gt;{ok, Data}&lt;/code&gt;, &lt;code&gt;eof&lt;/code&gt;, or &lt;code&gt;{error, reason()}&lt;/code&gt;. If the file is opened with &lt;code&gt;binary&lt;/code&gt;, &lt;code&gt;Data&lt;/code&gt; is a binary, otherwise it is a string.</source>
          <target state="translated">从 &lt;code&gt;Handle&lt;/code&gt; 引用的文件中读取 &lt;code&gt;Len&lt;/code&gt; 字节。返回 &lt;code&gt;{ok, Data}&lt;/code&gt; ， &lt;code&gt;eof&lt;/code&gt; 或 &lt;code&gt;{error, reason()}&lt;/code&gt; 。如果使用 &lt;code&gt;binary&lt;/code&gt; 打开文件，则 &lt;code&gt;Data&lt;/code&gt; 为二进制，否则为字符串。</target>
        </trans-unit>
        <trans-unit id="daa50c7790746978f3529a39e628aa17d94fcef6" translate="yes" xml:space="preserve">
          <source>Reads &lt;code&gt;Number&lt;/code&gt; bytes/characters from the file referenced by &lt;code&gt;IoDevice&lt;/code&gt;. The functions &lt;code&gt;&lt;a href=&quot;#read-2&quot;&gt;read/2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#pread-3&quot;&gt;pread/3&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;#read_line-1&quot;&gt;read_line/1&lt;/a&gt;&lt;/code&gt; are the only ways to read from a file opened in &lt;code&gt;raw&lt;/code&gt; mode (although they work for normally opened files, too).</source>
          <target state="translated">从 &lt;code&gt;IoDevice&lt;/code&gt; 引用的文件中读取 &lt;code&gt;Number&lt;/code&gt; 字节/字符。函数 &lt;code&gt;&lt;a href=&quot;#read-2&quot;&gt;read/2&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;#pread-3&quot;&gt;pread/3&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;#read_line-1&quot;&gt;read_line/1&lt;/a&gt;&lt;/code&gt; 是读取以 &lt;code&gt;raw&lt;/code&gt; 模式打开的文件的唯一方法（尽管它们也适用于正常打开的文件）。</target>
        </trans-unit>
        <trans-unit id="f70ae81f047ca6b4913a5ff1eb01e17721a1df8e" translate="yes" xml:space="preserve">
          <source>Reads Erlang terms, separated by '.', from &lt;code&gt;Filename&lt;/code&gt;. Returns one of the following:</source>
          <target state="translated">从 &lt;code&gt;Filename&lt;/code&gt; 中读取以'。'分隔的Erlang术语。返回以下之一：</target>
        </trans-unit>
        <trans-unit id="be3d677dc62d08604840b02570c3e7442cfa5893" translate="yes" xml:space="preserve">
          <source>Reads a (virtual) file &lt;code&gt;RemoteFilename&lt;/code&gt; from a TFTP server.</source>
          <target state="translated">从TFTP服务器读取（虚拟）文件 &lt;code&gt;RemoteFilename&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="475ab7b68b4f86a328c596114c612ba9ab111e93" translate="yes" xml:space="preserve">
          <source>Reads a chunk from the file.</source>
          <target state="translated">读取文件中的一个块。</target>
        </trans-unit>
        <trans-unit id="bcf09f51900c4beb18f4a5c9714ec92cbd388e75" translate="yes" xml:space="preserve">
          <source>Reads a file from the server, and returns the data in a binary.</source>
          <target state="translated">从服务器读取文件,并以二进制形式返回数据。</target>
        </trans-unit>
        <trans-unit id="f13fb58163293d1d5534935f27c0725ebb880c11" translate="yes" xml:space="preserve">
          <source>Reads a file produced by &lt;code&gt;&lt;a href=&quot;#tab2file-2&quot;&gt; tab2file/2&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#tab2file-3&quot;&gt; tab2file/3&lt;/a&gt;&lt;/code&gt; and creates the corresponding table &lt;code&gt;Tab&lt;/code&gt;.</source>
          <target state="translated">读取由 &lt;code&gt;&lt;a href=&quot;#tab2file-2&quot;&gt; tab2file/2&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;#tab2file-3&quot;&gt; tab2file/3&lt;/a&gt;&lt;/code&gt; 生成的文件，并创建对应的表 &lt;code&gt;Tab&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b49974d81fdb55dee47f409f1072646256f1f8c7" translate="yes" xml:space="preserve">
          <source>Reads a file produced by &lt;code&gt;&lt;a href=&quot;#tab2file-2&quot;&gt; tab2file/2&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#tab2file-3&quot;&gt;tab2file/3&lt;/a&gt;&lt;/code&gt; and creates the corresponding table &lt;code&gt;Tab&lt;/code&gt;.</source>
          <target state="translated">读取由 &lt;code&gt;&lt;a href=&quot;#tab2file-2&quot;&gt; tab2file/2&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;#tab2file-3&quot;&gt;tab2file/3&lt;/a&gt;&lt;/code&gt; 生成的文件，并创建对应的表 &lt;code&gt;Tab&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5d10f6f7263be88bc8003790c8726391f4e9dbdf" translate="yes" xml:space="preserve">
          <source>Reads a file produced by &lt;code&gt;&lt;a href=&quot;#tab2file-2&quot;&gt;tab2file/2&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#tab2file-3&quot;&gt;tab2file/3&lt;/a&gt;&lt;/code&gt; and creates the corresponding table &lt;code&gt;Tab&lt;/code&gt;.</source>
          <target state="translated">读取由 &lt;code&gt;&lt;a href=&quot;#tab2file-2&quot;&gt;tab2file/2&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;#tab2file-3&quot;&gt;tab2file/3&lt;/a&gt;&lt;/code&gt; 生成的文件，并创建对应的表 &lt;code&gt;Tab&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dc54f5017946e86d78cdba6d809d92457be885be" translate="yes" xml:space="preserve">
          <source>Reads a line from the standard input (&lt;code&gt;IoDevice&lt;/code&gt;), prompting it with &lt;code&gt;Prompt&lt;/code&gt;.</source>
          <target state="translated">从标准输入（ &lt;code&gt;IoDevice&lt;/code&gt; ）读取一行，并用 &lt;code&gt;Prompt&lt;/code&gt; 提示。</target>
        </trans-unit>
        <trans-unit id="36b17ad13f0b033f6df4a993a7b171c360fa8c45" translate="yes" xml:space="preserve">
          <source>Reads a line of bytes/characters from the file referenced by &lt;code&gt;IoDevice&lt;/code&gt;. Lines are defined to be delimited by the linefeed (LF, &lt;code&gt;\n&lt;/code&gt;) character, but any carriage return (CR, &lt;code&gt;\r&lt;/code&gt;) followed by a newline is also treated as a single LF character (the carriage return is silently ignored). The line is returned &lt;strong&gt;including&lt;/strong&gt; the LF, but excluding any CR immediately followed by an LF. This behaviour is consistent with the behaviour of &lt;code&gt;io:get_line/2&lt;/code&gt;. If end of file is reached without any LF ending the last line, a line with no trailing LF is returned.</source>
          <target state="translated">从 &lt;code&gt;IoDevice&lt;/code&gt; 引用的文件中读取一行字节/字符。行定义为由换行符（LF， &lt;code&gt;\n&lt;/code&gt; ）分隔，但是任何回车符（CR， &lt;code&gt;\r&lt;/code&gt; ）后跟换行符也将被视为单个LF字符（回车符将被忽略）。返回的行&lt;strong&gt;包括&lt;/strong&gt; LF，但不包括紧随其后的LF的任何CR。此行为与 &lt;code&gt;io:get_line/2&lt;/code&gt; 的行为一致。如果到达文件末尾而没有任何LF结束最后一行，则返回没有尾随LF的行。</target>
        </trans-unit>
        <trans-unit id="aae52d304fd52a828dbf2eedbff2f04b0029c986" translate="yes" xml:space="preserve">
          <source>Reads a row by its SNMP index. This index is specified as an SNMP Object Identifier, a list of integers.</source>
          <target state="translated">通过SNMP索引读取一条记录。这个索引被指定为SNMP对象标识符,是一个整数列表。</target>
        </trans-unit>
        <trans-unit id="924401b1eb28056e84b4ed03a3d14e9118c06d0d" translate="yes" xml:space="preserve">
          <source>Reads a term &lt;code&gt;Term&lt;/code&gt; from &lt;code&gt;IoDevice&lt;/code&gt;, prompting it with &lt;code&gt;Prompt&lt;/code&gt;. Reading starts at location &lt;code&gt;StartLocation&lt;/code&gt;. Argument &lt;code&gt;Options&lt;/code&gt; is passed on as argument &lt;code&gt;Options&lt;/code&gt; of function &lt;code&gt;&lt;a href=&quot;erl_scan#tokens-4&quot;&gt; erl_scan:tokens/4&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;IoDevice&lt;/code&gt; 读取术语 &lt;code&gt;Term&lt;/code&gt; ，并用 &lt;code&gt;Prompt&lt;/code&gt; 提示。读取从位置 &lt;code&gt;StartLocation&lt;/code&gt; 开始。参数 &lt;code&gt;Options&lt;/code&gt; 被传递作为参数 &lt;code&gt;Options&lt;/code&gt; 功能的 &lt;code&gt;&lt;a href=&quot;erl_scan#tokens-4&quot;&gt; erl_scan:tokens/4&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="842ce7e26143e68269e6af73ca149569ed32c0c5" translate="yes" xml:space="preserve">
          <source>Reads a term &lt;code&gt;Term&lt;/code&gt; from &lt;code&gt;IoDevice&lt;/code&gt;, prompting it with &lt;code&gt;Prompt&lt;/code&gt;. Reading starts at location &lt;code&gt;StartLocation&lt;/code&gt;. Argument &lt;code&gt;Options&lt;/code&gt; is passed on as argument &lt;code&gt;Options&lt;/code&gt; of function &lt;code&gt;&lt;a href=&quot;erl_scan#tokens-4&quot;&gt;erl_scan:tokens/4&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;IoDevice&lt;/code&gt; 读取术语 &lt;code&gt;Term&lt;/code&gt; ，并用 &lt;code&gt;Prompt&lt;/code&gt; 提示。读取从位置 &lt;code&gt;StartLocation&lt;/code&gt; 开始。参数 &lt;code&gt;Options&lt;/code&gt; 被传递作为参数 &lt;code&gt;Options&lt;/code&gt; 功能的 &lt;code&gt;&lt;a href=&quot;erl_scan#tokens-4&quot;&gt;erl_scan:tokens/4&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0d4db0c3277853bee5baecd76ea077556e6a19fa" translate="yes" xml:space="preserve">
          <source>Reads a term &lt;code&gt;Term&lt;/code&gt; from the standard input (&lt;code&gt;IoDevice&lt;/code&gt;), prompting it with &lt;code&gt;Prompt&lt;/code&gt;.</source>
          <target state="translated">从标准输入（ &lt;code&gt;IoDevice&lt;/code&gt; ）读取术语 &lt;code&gt;Term&lt;/code&gt; ，并用 &lt;code&gt;Prompt&lt;/code&gt; 提示。</target>
        </trans-unit>
        <trans-unit id="ac643941e9886622de2937798fd5270edc0fabf5" translate="yes" xml:space="preserve">
          <source>Reads a time stamp into the memory pointed to by parameter &lt;code&gt;now&lt;/code&gt;. For information about specific fields, see &lt;code&gt;&lt;a href=&quot;#ErlDrvNowData&quot;&gt;ErlDrvNowData&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">读取时间戳到由参数指向的内存 &lt;code&gt;now&lt;/code&gt; 。有关特定字段的信息，请参见 &lt;code&gt;&lt;a href=&quot;#ErlDrvNowData&quot;&gt;ErlDrvNowData&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c19818e3b583cae64bcc594ab0744745d21d8def" translate="yes" xml:space="preserve">
          <source>Reads all records from table &lt;code&gt;Tab&lt;/code&gt; with key &lt;code&gt;Key&lt;/code&gt;. This function has the same semantics regardless of the location of &lt;code&gt;Tab&lt;/code&gt;. If the table is of type &lt;code&gt;bag&lt;/code&gt;, the function &lt;code&gt;mnesia:read(Tab, Key)&lt;/code&gt; can return an arbitrarily long list. If the table is of type &lt;code&gt;set&lt;/code&gt;, the list is either of length 1, or &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">使用键 &lt;code&gt;Key&lt;/code&gt; 从表 &lt;code&gt;Tab&lt;/code&gt; 读取所有记录。无论 &lt;code&gt;Tab&lt;/code&gt; 的位置如何，此函数具有相同的语义。如果表的类型为 &lt;code&gt;bag&lt;/code&gt; ，则函数 &lt;code&gt;mnesia:read(Tab, Key)&lt;/code&gt; 可以返回任意长的列表。如果表是 &lt;code&gt;set&lt;/code&gt; 类型的，则列表的长度为1或 &lt;code&gt;[]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5c89de20ea0caf916aed94b0b16edcd0fa5a8208" translate="yes" xml:space="preserve">
          <source>Reads and evaluates Erlang expressions, separated by '.' (or ',', a sequence of expressions is also an expression) from &lt;code&gt;Filename&lt;/code&gt;. The result of the evaluation is not returned; any expression sequence in the file must be there for its side effect. Returns one of the following:</source>
          <target state="translated">读取并评估以&amp;ldquo;。&amp;rdquo;分隔的Erlang表达式。（或&amp;ldquo;，&amp;rdquo;，表达式序列也是表达式）来自 &lt;code&gt;Filename&lt;/code&gt; 。评估结果不返回；文件中的任何表达序列都必须存在，以免产生副作用。返回以下之一：</target>
        </trans-unit>
        <trans-unit id="a4538536a6029a3eaaa364e5024ba9396498603a" translate="yes" xml:space="preserve">
          <source>Reads and evaluates Erlang expressions, separated by '.' (or ',', a sequence of expressions is also an expression), from the file.</source>
          <target state="translated">从文件中读取并评估用'.'(或',',表达式序列也是表达式)分隔的Erlang表达式。</target>
        </trans-unit>
        <trans-unit id="f86a65da862e66ea58fe0b1e1894f4ad5ab8707c" translate="yes" xml:space="preserve">
          <source>Reads and parses a file. If successful, &lt;code&gt;{ok, Forms}&lt;/code&gt; is returned, where &lt;code&gt;Forms&lt;/code&gt; is a list of abstract syntax trees representing the &quot;program forms&quot; of the file (cf. &lt;code&gt;erl_syntax:is_form/1&lt;/code&gt;). Otherwise, &lt;code&gt;{error, errorinfo()}&lt;/code&gt; is returned, typically if the file could not be opened. Note that parse errors show up as error markers in the returned list of forms; they do not cause this function to fail or return &lt;code&gt;{error, errorinfo()}&lt;/code&gt;.</source>
          <target state="translated">读取并解析文件。如果成功，则返回 &lt;code&gt;{ok, Forms}&lt;/code&gt; ，其中 &lt;code&gt;Forms&lt;/code&gt; 是代表文件&amp;ldquo;程序形式&amp;rdquo;的抽象语法树的列表（请参阅 &lt;code&gt;erl_syntax:is_form/1&lt;/code&gt; ）。否则，通常会在无法打开文件的情况下返回 &lt;code&gt;{error, errorinfo()}&lt;/code&gt; 。请注意，解析错误在返回的表单列表中显示为错误标记。它们不会导致此函数失败或返回 &lt;code&gt;{error, errorinfo()}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2920dcddbbb429fc599c5c461913301f70aa81e6" translate="yes" xml:space="preserve">
          <source>Reads and parses a single program form from an I/O stream. Characters are read from &lt;code&gt;IODevice&lt;/code&gt; until an end-of-form marker is found (a period character followed by whitespace), or until end-of-file; apart from this, the behaviour is similar to that of &lt;code&gt;parse/3&lt;/code&gt;, except that the return values also contain the final line number given that &lt;code&gt;StartLine&lt;/code&gt; is the initial line number, and that &lt;code&gt;{eof, LineNo}&lt;/code&gt; may be returned.</source>
          <target state="translated">从I / O流读取并解析单个程序形式。从 &lt;code&gt;IODevice&lt;/code&gt; 读取字符，直到找到格式结束标记（句点字符后跟空白），或者直到文件结束；除此之外，该行为与 &lt;code&gt;parse/3&lt;/code&gt; 相似，不同之处在于返回值还包含最终行号（假定 &lt;code&gt;StartLine&lt;/code&gt; 是初始行号），并且可以返回 &lt;code&gt;{eof, LineNo}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a5c3bcde53de74966bb137b9992cbcf8bea8b82b" translate="yes" xml:space="preserve">
          <source>Reads and parses program text from an I/O stream. Characters are read from &lt;code&gt;IODevice&lt;/code&gt; until end-of-file; apart from this, the behaviour is the same as for &lt;code&gt;&lt;a href=&quot;#parse_file-2&quot;&gt;parse_file/2&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;StartLine&lt;/code&gt; is the initial line number, which should be a positive integer.</source>
          <target state="translated">从I / O流读取和解析程序文本。从 &lt;code&gt;IODevice&lt;/code&gt; 读取字符，直到文件结束。除此之外，其行为与 &lt;code&gt;&lt;a href=&quot;#parse_file-2&quot;&gt;parse_file/2&lt;/a&gt;&lt;/code&gt; 相同。 &lt;code&gt;StartLine&lt;/code&gt; 是初始行号，应为正整数。</target>
        </trans-unit>
        <trans-unit id="575313b04f7b2d9ade2c2ac804470bebb4ac3f46" translate="yes" xml:space="preserve">
          <source>Reads characters from the standard input (&lt;code&gt;IoDevice&lt;/code&gt;), prompting it with &lt;code&gt;Prompt&lt;/code&gt;. Interprets the characters in accordance with &lt;code&gt;Format&lt;/code&gt;. &lt;code&gt;Format&lt;/code&gt; contains control sequences that directs the interpretation of the input.</source>
          <target state="translated">从标准输入（ &lt;code&gt;IoDevice&lt;/code&gt; ）读取字符，并用 &lt;code&gt;Prompt&lt;/code&gt; 提示。根据 &lt;code&gt;Format&lt;/code&gt; 解释字符。 &lt;code&gt;Format&lt;/code&gt; 包含控制序列，指导输入的解释。</target>
        </trans-unit>
        <trans-unit id="936b3c9cc90592c88890f5bba0974bbcc4534300" translate="yes" xml:space="preserve">
          <source>Reads chunk data for all chunks.</source>
          <target state="translated">读取所有分块的分块数据。</target>
        </trans-unit>
        <trans-unit id="5478616d388c3efd3ce75d4d04ed80f7b653d5be" translate="yes" xml:space="preserve">
          <source>Reads chunk data for selected chunks references. The order of the returned list of chunk data is determined by the order of the list of chunks references.</source>
          <target state="translated">读取选定的chunks引用的chunk数据。返回的chunk数据列表的顺序由chunks引用列表的顺序决定。</target>
        </trans-unit>
        <trans-unit id="b313c71e885968a16f290931cc4dc9de8929bf2d" translate="yes" xml:space="preserve">
          <source>Reads configuration data values.</source>
          <target state="translated">读取配置数据值。</target>
        </trans-unit>
        <trans-unit id="13f7c605e7acd7976580f43d7ca809054e752a0b" translate="yes" xml:space="preserve">
          <source>Reads data from the standard input (&lt;code&gt;IoDevice&lt;/code&gt;), prompting it with &lt;code&gt;Prompt&lt;/code&gt;. Reading starts at location &lt;code&gt;StartLocation&lt;/code&gt; (&lt;code&gt;1&lt;/code&gt;). Argument &lt;code&gt;Options&lt;/code&gt; is passed on as argument &lt;code&gt;Options&lt;/code&gt; of function &lt;code&gt;&lt;a href=&quot;erl_scan#tokens-4&quot;&gt; erl_scan:tokens/4&lt;/a&gt;&lt;/code&gt;. The data is tokenized as if it were a sequence of Erlang expressions until a final dot (&lt;code&gt;.&lt;/code&gt;) is reached. This token is also returned.</source>
          <target state="translated">从标准输入（ &lt;code&gt;IoDevice&lt;/code&gt; ）读取数据，并用 &lt;code&gt;Prompt&lt;/code&gt; 提示。读取从位置 &lt;code&gt;StartLocation&lt;/code&gt; （ &lt;code&gt;1&lt;/code&gt; ）开始。参数 &lt;code&gt;Options&lt;/code&gt; 被传递作为参数 &lt;code&gt;Options&lt;/code&gt; 功能的 &lt;code&gt;&lt;a href=&quot;erl_scan#tokens-4&quot;&gt; erl_scan:tokens/4&lt;/a&gt;&lt;/code&gt; 。对数据进行标记，就好像它是一个Erlang表达式序列一样，直到到达最后一个点（ &lt;code&gt;.&lt;/code&gt; ）。此令牌也将返回。</target>
        </trans-unit>
        <trans-unit id="9149fffa2a35130db955805683d3e726e8bc00d9" translate="yes" xml:space="preserve">
          <source>Reads data from the standard input (&lt;code&gt;IoDevice&lt;/code&gt;), prompting it with &lt;code&gt;Prompt&lt;/code&gt;. Reading starts at location &lt;code&gt;StartLocation&lt;/code&gt; (&lt;code&gt;1&lt;/code&gt;). Argument &lt;code&gt;Options&lt;/code&gt; is passed on as argument &lt;code&gt;Options&lt;/code&gt; of function &lt;code&gt;&lt;a href=&quot;erl_scan#tokens-4&quot;&gt;erl_scan:tokens/4&lt;/a&gt;&lt;/code&gt;. The data is tokenized as if it were a sequence of Erlang expressions until a final dot (&lt;code&gt;.&lt;/code&gt;) is reached. This token is also returned.</source>
          <target state="translated">从标准输入（ &lt;code&gt;IoDevice&lt;/code&gt; ）读取数据，并用 &lt;code&gt;Prompt&lt;/code&gt; 提示。读取从位置 &lt;code&gt;StartLocation&lt;/code&gt; （ &lt;code&gt;1&lt;/code&gt; ）开始。参数 &lt;code&gt;Options&lt;/code&gt; 被传递作为参数 &lt;code&gt;Options&lt;/code&gt; 功能的 &lt;code&gt;&lt;a href=&quot;erl_scan#tokens-4&quot;&gt;erl_scan:tokens/4&lt;/a&gt;&lt;/code&gt; 。对数据进行标记，就像它是一个Erlang表达式序列一样，直到到达最后一个点（ &lt;code&gt;.&lt;/code&gt; ）。此令牌也将返回。</target>
        </trans-unit>
        <trans-unit id="6fdbc20f04b0b1ab8374e8dfa4cbcce56f5fc71f" translate="yes" xml:space="preserve">
          <source>Reads data from the standard input (&lt;code&gt;IoDevice&lt;/code&gt;), prompting it with &lt;code&gt;Prompt&lt;/code&gt;. Starts reading at location &lt;code&gt;StartLocation&lt;/code&gt; (&lt;code&gt;1&lt;/code&gt;). Argument &lt;code&gt;Options&lt;/code&gt; is passed on as argument &lt;code&gt;Options&lt;/code&gt; of function &lt;code&gt;&lt;a href=&quot;erl_scan#tokens-4&quot;&gt; erl_scan:tokens/4&lt;/a&gt;&lt;/code&gt;. The data is tokenized and parsed as if it was a sequence of Erlang expressions until a final dot (&lt;code&gt;.&lt;/code&gt;) is reached.</source>
          <target state="translated">从标准输入（ &lt;code&gt;IoDevice&lt;/code&gt; ）读取数据，并用 &lt;code&gt;Prompt&lt;/code&gt; 提示。从位置 &lt;code&gt;StartLocation&lt;/code&gt; （ &lt;code&gt;1&lt;/code&gt; ）开始读取。参数 &lt;code&gt;Options&lt;/code&gt; 被传递作为参数 &lt;code&gt;Options&lt;/code&gt; 功能的 &lt;code&gt;&lt;a href=&quot;erl_scan#tokens-4&quot;&gt; erl_scan:tokens/4&lt;/a&gt;&lt;/code&gt; 。对数据进行标记和解析，就好像它是一个Erlang表达式序列一样，直到到达最后一个点（ &lt;code&gt;.&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="a73722344224605a28505b86d05b37692f6841a9" translate="yes" xml:space="preserve">
          <source>Reads data from the standard input (&lt;code&gt;IoDevice&lt;/code&gt;), prompting it with &lt;code&gt;Prompt&lt;/code&gt;. Starts reading at location &lt;code&gt;StartLocation&lt;/code&gt; (&lt;code&gt;1&lt;/code&gt;). Argument &lt;code&gt;Options&lt;/code&gt; is passed on as argument &lt;code&gt;Options&lt;/code&gt; of function &lt;code&gt;&lt;a href=&quot;erl_scan#tokens-4&quot;&gt; erl_scan:tokens/4&lt;/a&gt;&lt;/code&gt;. The data is tokenized and parsed as if it was an Erlang form (one of the valid Erlang expressions in an Erlang source file) until a final dot (&lt;code&gt;.&lt;/code&gt;) is reached.</source>
          <target state="translated">从标准输入（ &lt;code&gt;IoDevice&lt;/code&gt; ）读取数据，并用 &lt;code&gt;Prompt&lt;/code&gt; 提示。从位置 &lt;code&gt;StartLocation&lt;/code&gt; （ &lt;code&gt;1&lt;/code&gt; ）开始读取。参数 &lt;code&gt;Options&lt;/code&gt; 被传递作为参数 &lt;code&gt;Options&lt;/code&gt; 功能的 &lt;code&gt;&lt;a href=&quot;erl_scan#tokens-4&quot;&gt; erl_scan:tokens/4&lt;/a&gt;&lt;/code&gt; 。对数据进行标记和解析，就好像它是Erlang形式（Erlang源文件中的有效Erlang表达式之一），直到到达最后一个点（ &lt;code&gt;.&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="55c4fe1fe028eb597a540f4c982bb0cca84e6065" translate="yes" xml:space="preserve">
          <source>Reads data from the standard input (&lt;code&gt;IoDevice&lt;/code&gt;), prompting it with &lt;code&gt;Prompt&lt;/code&gt;. Starts reading at location &lt;code&gt;StartLocation&lt;/code&gt; (&lt;code&gt;1&lt;/code&gt;). Argument &lt;code&gt;Options&lt;/code&gt; is passed on as argument &lt;code&gt;Options&lt;/code&gt; of function &lt;code&gt;&lt;a href=&quot;erl_scan#tokens-4&quot;&gt; erl_scan:tokens/4&lt;/a&gt;&lt;/code&gt;. The data is tokenized as if it was an Erlang form (one of the valid Erlang expressions in an Erlang source file) until a final dot (&lt;code&gt;.&lt;/code&gt;) is reached. This last token is also returned.</source>
          <target state="translated">从标准输入（ &lt;code&gt;IoDevice&lt;/code&gt; ）读取数据，并用 &lt;code&gt;Prompt&lt;/code&gt; 提示。从位置 &lt;code&gt;StartLocation&lt;/code&gt; （ &lt;code&gt;1&lt;/code&gt; ）开始读取。参数 &lt;code&gt;Options&lt;/code&gt; 被传递作为参数 &lt;code&gt;Options&lt;/code&gt; 功能的 &lt;code&gt;&lt;a href=&quot;erl_scan#tokens-4&quot;&gt; erl_scan:tokens/4&lt;/a&gt;&lt;/code&gt; 。直到到达最后一个点（ &lt;code&gt;.&lt;/code&gt; ）为止，该数据都会像是Erlang形式（Erlang源文件中的有效Erlang表达式之一）一样被标记化。最后一个令牌也将返回。</target>
        </trans-unit>
        <trans-unit id="374c9ef16799b9abb4e9d26f5fa912264a6e1657" translate="yes" xml:space="preserve">
          <source>Reads data from the standard input (&lt;code&gt;IoDevice&lt;/code&gt;), prompting it with &lt;code&gt;Prompt&lt;/code&gt;. Starts reading at location &lt;code&gt;StartLocation&lt;/code&gt; (&lt;code&gt;1&lt;/code&gt;). Argument &lt;code&gt;Options&lt;/code&gt; is passed on as argument &lt;code&gt;Options&lt;/code&gt; of function &lt;code&gt;&lt;a href=&quot;erl_scan#tokens-4&quot;&gt;erl_scan:tokens/4&lt;/a&gt;&lt;/code&gt;. The data is tokenized and parsed as if it was a sequence of Erlang expressions until a final dot (&lt;code&gt;.&lt;/code&gt;) is reached.</source>
          <target state="translated">从标准输入（ &lt;code&gt;IoDevice&lt;/code&gt; ）读取数据，并用 &lt;code&gt;Prompt&lt;/code&gt; 提示。从位置 &lt;code&gt;StartLocation&lt;/code&gt; （ &lt;code&gt;1&lt;/code&gt; ）开始读取。参数 &lt;code&gt;Options&lt;/code&gt; 被传递作为参数 &lt;code&gt;Options&lt;/code&gt; 功能的 &lt;code&gt;&lt;a href=&quot;erl_scan#tokens-4&quot;&gt;erl_scan:tokens/4&lt;/a&gt;&lt;/code&gt; 。对数据进行标记和解析，就好像它是一个Erlang表达式序列一样，直到到达最后一个点（ &lt;code&gt;.&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="b1cad2965b9c36b880989ab004d941243e0ccdf7" translate="yes" xml:space="preserve">
          <source>Reads data from the standard input (&lt;code&gt;IoDevice&lt;/code&gt;), prompting it with &lt;code&gt;Prompt&lt;/code&gt;. Starts reading at location &lt;code&gt;StartLocation&lt;/code&gt; (&lt;code&gt;1&lt;/code&gt;). Argument &lt;code&gt;Options&lt;/code&gt; is passed on as argument &lt;code&gt;Options&lt;/code&gt; of function &lt;code&gt;&lt;a href=&quot;erl_scan#tokens-4&quot;&gt;erl_scan:tokens/4&lt;/a&gt;&lt;/code&gt;. The data is tokenized and parsed as if it was an Erlang form (one of the valid Erlang expressions in an Erlang source file) until a final dot (&lt;code&gt;.&lt;/code&gt;) is reached.</source>
          <target state="translated">从标准输入（ &lt;code&gt;IoDevice&lt;/code&gt; ）读取数据，并用 &lt;code&gt;Prompt&lt;/code&gt; 提示。从位置 &lt;code&gt;StartLocation&lt;/code&gt; （ &lt;code&gt;1&lt;/code&gt; ）开始读取。参数 &lt;code&gt;Options&lt;/code&gt; 被传递作为参数 &lt;code&gt;Options&lt;/code&gt; 功能的 &lt;code&gt;&lt;a href=&quot;erl_scan#tokens-4&quot;&gt;erl_scan:tokens/4&lt;/a&gt;&lt;/code&gt; 。对数据进行标记和解析，就好像它是Erlang形式（Erlang源文件中的有效Erlang表达式之一），直到到达最后一个点（ &lt;code&gt;.&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="595f61201ea85ff9dc6c8defa70b03e0e2371abf" translate="yes" xml:space="preserve">
          <source>Reads data from the standard input (&lt;code&gt;IoDevice&lt;/code&gt;), prompting it with &lt;code&gt;Prompt&lt;/code&gt;. Starts reading at location &lt;code&gt;StartLocation&lt;/code&gt; (&lt;code&gt;1&lt;/code&gt;). Argument &lt;code&gt;Options&lt;/code&gt; is passed on as argument &lt;code&gt;Options&lt;/code&gt; of function &lt;code&gt;&lt;a href=&quot;erl_scan#tokens-4&quot;&gt;erl_scan:tokens/4&lt;/a&gt;&lt;/code&gt;. The data is tokenized as if it was an Erlang form (one of the valid Erlang expressions in an Erlang source file) until a final dot (&lt;code&gt;.&lt;/code&gt;) is reached. This last token is also returned.</source>
          <target state="translated">从标准输入（ &lt;code&gt;IoDevice&lt;/code&gt; ）读取数据，并用 &lt;code&gt;Prompt&lt;/code&gt; 提示。从位置 &lt;code&gt;StartLocation&lt;/code&gt; （ &lt;code&gt;1&lt;/code&gt; ）开始读取。参数 &lt;code&gt;Options&lt;/code&gt; 被传递作为参数 &lt;code&gt;Options&lt;/code&gt; 功能的 &lt;code&gt;&lt;a href=&quot;erl_scan#tokens-4&quot;&gt;erl_scan:tokens/4&lt;/a&gt;&lt;/code&gt; 。直到到达最后一个点（ &lt;code&gt;.&lt;/code&gt; ）为止，数据都被标记为好像是Erlang形式（Erlang源文件中的有效Erlang表达式之一）。最后一个令牌也将返回。</target>
        </trans-unit>
        <trans-unit id="7e6941cdf993af413092c12f2be39dc87481f7cf" translate="yes" xml:space="preserve">
          <source>Reads data in parts from the file. This is intended for memory-limited machines that, for example, builds a tar file on a remote machine over SFTP, see &lt;code&gt; ssh_sftp:open_tar/3&lt;/code&gt;.</source>
          <target state="translated">从文件中部分读取数据。这适用于内存有限的计算机，例如，通过SFTP在远程计算机上构建tar文件，请参见 &lt;code&gt; ssh_sftp:open_tar/3&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="adade152b720618374d89b5e6eb7f3a1c8be4d9d" translate="yes" xml:space="preserve">
          <source>Reads data in parts from the file. This is intended for memory-limited machines that, for example, builds a tar file on a remote machine over SFTP, see &lt;code&gt;ssh_sftp:open_tar/3&lt;/code&gt;.</source>
          <target state="translated">从文件中部分读取数据。这适用于内存受限的计算机，例如，通过SFTP在远程计算机上构建tar文件，请参见 &lt;code&gt;ssh_sftp:open_tar/3&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b2dd7f9783c71e871e5a5536f61fe7d2f34a7b79" translate="yes" xml:space="preserve">
          <source>Reads each &lt;code&gt;Mod&lt;/code&gt; from directory &lt;code&gt;App-Vsn/ebin&lt;/code&gt; as a binary. It does not load the modules. The instruction is to be placed first in the script to read all new code from the file to make the suspend-load-resume cycle less time-consuming.</source>
          <target state="translated">从目录 &lt;code&gt;App-Vsn/ebin&lt;/code&gt; 中读取每个 &lt;code&gt;Mod&lt;/code&gt; 作为二进制文件。它不会加载模块。该指令将放置在脚本的最前面，以从文件中读取所有新代码，以使suspense-load-resume循环的耗时减少。</target>
        </trans-unit>
        <trans-unit id="5f9e8132777eeeea0b0b9630390bdccb83499a2f" translate="yes" xml:space="preserve">
          <source>Reads file &lt;code&gt;.hosts.erlang&lt;/code&gt;, see section &lt;code&gt;&lt;a href=&quot;#files&quot;&gt;Files&lt;/a&gt;&lt;/code&gt;. Returns the hosts in this file as a list. Returns &lt;code&gt;{error, Reason}&lt;/code&gt; if the file cannot be read or the Erlang terms on the file cannot be interpreted.</source>
          <target state="translated">读取文件 &lt;code&gt;.hosts.erlang&lt;/code&gt; ，请参阅 &lt;code&gt;&lt;a href=&quot;#files&quot;&gt;Files&lt;/a&gt;&lt;/code&gt; 部分。以列表形式返回此文件中的主机。如果无法读取文件或无法解释文件上的Erlang术语，则返回 &lt;code&gt;{error, Reason}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="acd0eef8d72bba8b5179acfa61549202aee45b07" translate="yes" xml:space="preserve">
          <source>Reads from an open file, without waiting for the result. If the handle is valid, the function returns &lt;code&gt;{async, N}&lt;/code&gt;, where &lt;code&gt;N&lt;/code&gt; is a term guaranteed to be unique between calls of &lt;code&gt;aread&lt;/code&gt;. The actual data is sent as a message to the calling process. This message has the form &lt;code&gt;{async_reply, N, Result}&lt;/code&gt;, where &lt;code&gt;Result&lt;/code&gt; is the result from the read, either &lt;code&gt;{ok, Data}&lt;/code&gt;, &lt;code&gt;eof&lt;/code&gt;, or &lt;code&gt;{error, reason()}&lt;/code&gt;.</source>
          <target state="translated">从打开的文件中读取，而无需等待结果。如果该句柄有效，则该函数返回 &lt;code&gt;{async, N}&lt;/code&gt; ，其中 &lt;code&gt;N&lt;/code&gt; 是保证在 &lt;code&gt;aread&lt;/code&gt; 的调用之间唯一的术语。实际数据作为消息发送到调用过程。该消息的格式为 &lt;code&gt;{async_reply, N, Result}&lt;/code&gt; ，其中 &lt;code&gt;Result&lt;/code&gt; 是读取的结果，可以是 &lt;code&gt;{ok, Data}&lt;/code&gt; ， &lt;code&gt;eof&lt;/code&gt; 或 &lt;code&gt;{error, reason()}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="473a3f49d1f005cdbfb18d83b547219146f6b620" translate="yes" xml:space="preserve">
          <source>Reads information about the timetrap set for the current test case. &lt;code&gt;Scaling&lt;/code&gt; indicates if &lt;code&gt;Common Test&lt;/code&gt; will attempt to compensate timetraps automatically for runtime delays introduced by, for example, tools like cover. &lt;code&gt;ScaleVal&lt;/code&gt; is the value of the current scaling multipler (always 1 if scaling is disabled). Note the &lt;code&gt;Time&lt;/code&gt; is not the scaled result.</source>
          <target state="translated">读取有关为当前测试用例设置的时间陷阱的信息。 &lt;code&gt;Scaling&lt;/code&gt; 表示 &lt;code&gt;Common Test&lt;/code&gt; 是否会尝试自动补偿时间陷阱，以弥补例如Cover等工具引入的运行时延迟。 &lt;code&gt;ScaleVal&lt;/code&gt; 是当前缩放倍数的值（如果禁用缩放，则始终为1）。请注意， &lt;code&gt;Time&lt;/code&gt; 不是换算结果。</target>
        </trans-unit>
        <trans-unit id="5cb0a0e95145733613cfe1c4d5d32a786e548cb7" translate="yes" xml:space="preserve">
          <source>Reads one or more terms from the test specification used to configure and run this test. &lt;code&gt;Tag&lt;/code&gt; is any valid test specification tag, for example, &lt;code&gt;label&lt;/code&gt;, &lt;code&gt;config&lt;/code&gt;, or &lt;code&gt;logdir&lt;/code&gt;. User-specific terms are also available to read if option &lt;code&gt;allow_user_terms&lt;/code&gt; is set.</source>
          <target state="translated">从用于配置和运行此测试的测试规范中读取一个或多个术语。 &lt;code&gt;Tag&lt;/code&gt; 是任何有效的测试规范标签，例如 &lt;code&gt;label&lt;/code&gt; ， &lt;code&gt;config&lt;/code&gt; 或 &lt;code&gt;logdir&lt;/code&gt; 。如果设置了 &lt;code&gt;allow_user_terms&lt;/code&gt; 选项，则还可以读取用户特定的术语。</target>
        </trans-unit>
        <trans-unit id="9678f45370812f85bf721cb4a46a673223c64b44" translate="yes" xml:space="preserve">
          <source>Reads record definitions from a module's BEAM file. If there are no record definitions in the BEAM file, the source file is located and read instead. Returns the names of the record definitions read. &lt;code&gt;Module&lt;/code&gt; is an atom.</source>
          <target state="translated">从模块的BEAM文件中读取记录定义。如果BEAM文件中没有记录定义，那么将查找并读取源文件。返回读取的记录定义的名称。 &lt;code&gt;Module&lt;/code&gt; 是一个原子。</target>
        </trans-unit>
        <trans-unit id="df8cc01b9c5d974fd88821805f092bbf2d9438ba" translate="yes" xml:space="preserve">
          <source>Reads record definitions from files but discards record names not mentioned in &lt;code&gt;RecordNames&lt;/code&gt; (a record name or a list of record names).</source>
          <target state="translated">从文件中读取记录定义，但丢弃 &lt;code&gt;RecordNames&lt;/code&gt; 中未提及的记录名（记录名或记录名列表）。</target>
        </trans-unit>
        <trans-unit id="c7a29df53eefec6311892690ec9b68fab17c6c71" translate="yes" xml:space="preserve">
          <source>Reads record definitions from files. Existing definitions of any of the record names read are replaced. &lt;code&gt;Wildcard&lt;/code&gt; is a wildcard string as defined in &lt;code&gt;&lt;a href=&quot;filelib&quot;&gt;filelib(3)&lt;/a&gt;&lt;/code&gt;, but not an atom.</source>
          <target state="translated">从文件中读取记录定义。读取的任何记录名称的现有定义将被替换。 &lt;code&gt;Wildcard&lt;/code&gt; 是 &lt;code&gt;&lt;a href=&quot;filelib&quot;&gt;filelib(3)&lt;/a&gt;&lt;/code&gt; 中定义的通配符字符串，而不是原子。</target>
        </trans-unit>
        <trans-unit id="1d4affa78ab45ecbfb3d3d5e0421aca7b1d8b2a0" translate="yes" xml:space="preserve">
          <source>Reads record definitions from files. The compiler options &lt;code&gt;{i,&amp;nbsp;Dir}&lt;/code&gt;, &lt;code&gt;{d,&amp;nbsp;Macro}&lt;/code&gt;, and &lt;code&gt;{d,&amp;nbsp;Macro,&amp;nbsp;Value}&lt;/code&gt; are recognized and used for setting up the include path and macro definitions. To read all record definitions, use &lt;code&gt;'_'&lt;/code&gt; as value of &lt;code&gt;RecordNames&lt;/code&gt;.</source>
          <target state="translated">从文件中读取记录定义。编译器选项 &lt;code&gt;{i,&amp;nbsp;Dir}&lt;/code&gt; ， &lt;code&gt;{d,&amp;nbsp;Macro}&lt;/code&gt; 和 &lt;code&gt;{d,&amp;nbsp;Macro,&amp;nbsp;Value}&lt;/code&gt; 被识别并用于设置包含路径和宏定义。要读取所有记录定义，请使用 &lt;code&gt;'_'&lt;/code&gt; 作为 &lt;code&gt;RecordNames&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="a97a11fc0cb6ea77a20ef2c272dd9b0c766b3e97" translate="yes" xml:space="preserve">
          <source>Reads the &lt;code&gt;&lt;a href=&quot;#encoding&quot;&gt;encoding&lt;/a&gt;&lt;/code&gt; from an I/O device and sets the encoding of the device accordingly. The position of the I/O device referenced by &lt;code&gt;File&lt;/code&gt; is not affected. If no valid encoding can be read from the I/O device, the encoding of the I/O device is set to the &lt;code&gt;&lt;a href=&quot;#encoding&quot;&gt;encoding&lt;/a&gt;&lt;/code&gt; specified by &lt;code&gt;Default&lt;/code&gt;.</source>
          <target state="translated">从I / O设备读取 &lt;code&gt;&lt;a href=&quot;#encoding&quot;&gt;encoding&lt;/a&gt;&lt;/code&gt; ，并相应地设置设备的编码。 &lt;code&gt;File&lt;/code&gt; 引用的I / O设备的位置不受影响。如果无法从I / O设备读取有效的编码，则将I / O设备的编码设置为 &lt;code&gt;Default&lt;/code&gt; 指定的 &lt;code&gt;&lt;a href=&quot;#encoding&quot;&gt;encoding&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5f93ddca5006ccdbb3f7596d1f8a8390df9f011d" translate="yes" xml:space="preserve">
          <source>Reads the &lt;code&gt;&lt;a href=&quot;#encoding&quot;&gt;encoding&lt;/a&gt;&lt;/code&gt; from an I/O device and sets the encoding of the device accordingly. The position of the I/O device referenced by &lt;code&gt;File&lt;/code&gt; is not affected. If no valid encoding can be read from the I/O device, the encoding of the I/O device is set to the default encoding.</source>
          <target state="translated">从I / O设备读取 &lt;code&gt;&lt;a href=&quot;#encoding&quot;&gt;encoding&lt;/a&gt;&lt;/code&gt; ，并相应地设置设备的编码。 &lt;code&gt;File&lt;/code&gt; 引用的I / O设备的位置不受影响。如果无法从I / O设备读取有效的编码，则将I / O设备的编码设置为默认编码。</target>
        </trans-unit>
        <trans-unit id="a7c87f7c3cd992fe79a2c1b8d950c1deaacc9012" translate="yes" xml:space="preserve">
          <source>Reads the application configuration parameter &lt;code&gt;logger&lt;/code&gt; and calls &lt;code&gt;add_handlers/1&lt;/code&gt; with its contents.</source>
          <target state="translated">读取应用程序配置参数 &lt;code&gt;logger&lt;/code&gt; 并调用 &lt;code&gt;add_handlers/1&lt;/code&gt; 及其内容。</target>
        </trans-unit>
        <trans-unit id="0978dc894d2a71b1cf1cfdef66ccd9de4a864810" translate="yes" xml:space="preserve">
          <source>Reads the current time of a timer, and places the result in &lt;code&gt;time_left&lt;/code&gt;. This is the time in milliseconds, before the time-out occurs.</source>
          <target state="translated">读取计时器的当前时间，并将结果放置在 &lt;code&gt;time_left&lt;/code&gt; 中。这是超时发生之前的时间（以毫秒为单位）。</target>
        </trans-unit>
        <trans-unit id="ef330399fd66929e3d50b54bbdd55115fbd0d652" translate="yes" xml:space="preserve">
          <source>Reads the file &lt;code&gt;Filename&lt;/code&gt; and creates raw profile data that is stored in RAM by the &lt;code&gt;fprof&lt;/code&gt; server. If the option &lt;code&gt;file&lt;/code&gt; is given, or none of these options are given, the file &lt;code&gt;&quot;fprof.trace&quot;&lt;/code&gt; is read. The call will return when the whole trace has been read with the return value &lt;code&gt;ok&lt;/code&gt; if successful. This option is not allowed with the &lt;code&gt;start&lt;/code&gt; or &lt;code&gt;stop&lt;/code&gt; options.</source>
          <target state="translated">读取文件 &lt;code&gt;Filename&lt;/code&gt; 并创建由 &lt;code&gt;fprof&lt;/code&gt; 服务器存储在RAM中的原始配置文件数据。如果给出了选项 &lt;code&gt;file&lt;/code&gt; ，或者没有给出这些选项，则读取文件 &lt;code&gt;&quot;fprof.trace&quot;&lt;/code&gt; 。读取完整的跟踪后，如果成功，则返回 &lt;code&gt;ok&lt;/code&gt; ，调用将返回。 &lt;code&gt;start&lt;/code&gt; 或 &lt;code&gt;stop&lt;/code&gt; 选项不允许使用此选项。</target>
        </trans-unit>
        <trans-unit id="49742bfb294b102cbe18de7cfaaa6d790db477e2" translate="yes" xml:space="preserve">
          <source>Reads the file &lt;code&gt;mysystem.rel&lt;/code&gt; and creates a new file &lt;code&gt;plain.rel&lt;/code&gt; that is identical to the former, except that it only lists the Kernel and STDLIB applications.</source>
          <target state="translated">读取文件 &lt;code&gt;mysystem.rel&lt;/code&gt; 并创建一个与前一个文件相同的新文件 &lt;code&gt;plain.rel&lt;/code&gt; ，只不过它列出了内核和STDLIB应用程序。</target>
        </trans-unit>
        <trans-unit id="f903b588a4d361175c96f10e6de158fead02c148" translate="yes" xml:space="preserve">
          <source>Reads the link target from the symbolic link specified by &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;name&lt;/code&gt; 指定的符号链接中读取链接目标。</target>
        </trans-unit>
        <trans-unit id="e21a2e27c60061a5209d8bcd0b5afd002f70ac3e" translate="yes" xml:space="preserve">
          <source>Reads the next chunk of uncompressed data, initialized by &lt;code&gt;&lt;a href=&quot;#inflateChunk-2&quot;&gt;inflateChunk/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">读取下一个由 &lt;code&gt;&lt;a href=&quot;#inflateChunk-2&quot;&gt;inflateChunk/2&lt;/a&gt;&lt;/code&gt; 初始化的未压缩数据块。</target>
        </trans-unit>
        <trans-unit id="a4416420a93781bcc0dc5f8a20da753372346242" translate="yes" xml:space="preserve">
          <source>Reads the referenced XML schema and checks that it is valid. Returns the &lt;code&gt;global_state()&lt;/code&gt; with schema info or an error reason. The error reason may be a list of several errors or a single error encountered during the processing.</source>
          <target state="translated">读取引用的XML模式并检查其是否有效。返回带有模式信息或错误原因的 &lt;code&gt;global_state()&lt;/code&gt; 。错误原因可能是在处理过程中遇到的几个错误或单个错误的列表。</target>
        </trans-unit>
        <trans-unit id="6fd38efe5a280152c0ed35ee9c7f2ad0f403268c" translate="yes" xml:space="preserve">
          <source>Reads the referenced XML schemas and controls they are valid. Returns the &lt;code&gt;global_state()&lt;/code&gt; with schema info or an error reason. The error reason may be a list of several errors or a single error encountered during the processing.</source>
          <target state="translated">读取引用的XML模式并控制它们有效。返回带有模式信息或错误原因的 &lt;code&gt;global_state()&lt;/code&gt; 。错误原因可能是在处理过程中遇到的几个错误或单个错误的列表。</target>
        </trans-unit>
        <trans-unit id="9173077db3e9017296abe012415cae4350f279ec" translate="yes" xml:space="preserve">
          <source>Reads the runtime system version (&lt;code&gt;&quot;5.10.4&quot;&lt;/code&gt;) and release version (&lt;code&gt;&quot;FIRST&quot;&lt;/code&gt;) from the file &lt;code&gt;start_erl.data&lt;/code&gt;.</source>
          <target state="translated">从文件 &lt;code&gt;start_erl.data&lt;/code&gt; 中读取运行时系统版本（ &lt;code&gt;&quot;5.10.4&quot;&lt;/code&gt; ）和发行版本（ &lt;code&gt;&quot;FIRST&quot;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="839d040990703f858648a5ce1365721721986faf" translate="yes" xml:space="preserve">
          <source>Reads the schema state with all information of the processed schema from a file created with &lt;code&gt;state2file/[1,2]&lt;/code&gt;. The format of this file is internal. The state can then be used validating an XML document.</source>
          <target state="translated">从使用 &lt;code&gt;state2file/[1,2]&lt;/code&gt; 创建的文件中读取模式状态以及已处理模式的所有信息。该文件的格式是内部的。然后可以使用该状态来验证XML文档。</target>
        </trans-unit>
        <trans-unit id="bce1e5c45b80097e6f2841595672e121dabebb10" translate="yes" xml:space="preserve">
          <source>Reads the specified binary trace log(s). The logs are processed in the order of their time stamps as long as option &lt;code&gt;disable_sort&lt;/code&gt; is not specified.</source>
          <target state="translated">读取指定的二进制跟踪日志。只要未指定选项 &lt;code&gt;disable_sort&lt;/code&gt; ,就会按照其时间戳记的顺序处理日志。</target>
        </trans-unit>
        <trans-unit id="148a9f2e73482a200b8b553fede2788e553b25f1" translate="yes" xml:space="preserve">
          <source>Reads the state of a timer that has been created by either &lt;code&gt;&lt;a href=&quot;#start_timer-4&quot;&gt;erlang:start_timer&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#send_after-4&quot;&gt;erlang:send_after&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;TimerRef&lt;/code&gt; identifies the timer, and was returned by the BIF that created the timer.</source>
          <target state="translated">读取由 &lt;code&gt;&lt;a href=&quot;#start_timer-4&quot;&gt;erlang:start_timer&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;#send_after-4&quot;&gt;erlang:send_after&lt;/a&gt;&lt;/code&gt; 创建的计时器的状态。 &lt;code&gt;TimerRef&lt;/code&gt; 标识计时器，并由创建计时器的BIF返回。</target>
        </trans-unit>
        <trans-unit id="ce5cad4e11c1c94a9f2dab2d00983fc0cb846b46" translate="yes" xml:space="preserve">
          <source>Reads the state of a timer. The same as calling &lt;code&gt;&lt;a href=&quot;#read_timer-2&quot;&gt;erlang:read_timer(TimerRef, [])&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">读取计时器的状态。与调用 &lt;code&gt;&lt;a href=&quot;#read_timer-2&quot;&gt;erlang:read_timer(TimerRef, [])&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4e4671accaaccd33457026d9518c140f9065b957" translate="yes" xml:space="preserve">
          <source>Reads using &lt;code&gt;UserData&lt;/code&gt; but only &lt;code&gt;Size&lt;/code&gt; bytes. Notice that there is only an arity-2 read function, not an arity-1 function.</source>
          <target state="translated">使用 &lt;code&gt;UserData&lt;/code&gt; 读取，但仅读取 &lt;code&gt;Size&lt;/code&gt; 字节。请注意，只有Arity-2读取功能，而没有Arity-1功能。</target>
        </trans-unit>
        <trans-unit id="9aa5c569849cf218527f93f7dee3cdc648481493" translate="yes" xml:space="preserve">
          <source>Reads using &lt;code&gt;UserPrivate&lt;/code&gt; but only &lt;code&gt;Size&lt;/code&gt; bytes. Notice that there is only an arity-2 read function, not an arity-1 function.</source>
          <target state="translated">使用 &lt;code&gt;UserPrivate&lt;/code&gt; 读取，但仅读取 &lt;code&gt;Size&lt;/code&gt; 字节。请注意，只有Arity-2读取功能，而没有Arity-1函数。</target>
        </trans-unit>
        <trans-unit id="15d4f658eb0b3d94a3c309c489e7d4e9bdbc4f01" translate="yes" xml:space="preserve">
          <source>Realloc always moves. When enabled, reallocate operations are more or less translated into an allocate, copy, free sequence. This often reduces memory fragmentation, but costs performance.</source>
          <target state="translated">Realloc总是在移动。当启用时,重新分配操作或多或少会转化为分配、复制、释放的序列。这通常会减少内存碎片,但会损失性能。</target>
        </trans-unit>
        <trans-unit id="fd9c4c1a235d7360d6343d538e931ae913df1102" translate="yes" xml:space="preserve">
          <source>Reallocates memory allocated by &lt;code&gt;&lt;a href=&quot;#enif_alloc&quot;&gt;enif_alloc&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;size&lt;/code&gt; bytes.</source>
          <target state="translated">将 &lt;code&gt;&lt;a href=&quot;#enif_alloc&quot;&gt;enif_alloc&lt;/a&gt;&lt;/code&gt; 分配的内存重新分配为 &lt;code&gt;size&lt;/code&gt; 字节。</target>
        </trans-unit>
        <trans-unit id="db92aea9f5fbc58fe0efec58ed9588b7d88ee22c" translate="yes" xml:space="preserve">
          <source>Reason :: term(),</source>
          <target state="translated">原因 ::term()。</target>
        </trans-unit>
        <trans-unit id="a0a2a239ec860ccef682b74f016b00e2580d58fe" translate="yes" xml:space="preserve">
          <source>Reasons for Crash Dumps (Slogan)</source>
          <target state="translated">崩盘的原因(口号)</target>
        </trans-unit>
        <trans-unit id="6891013bdffc70486bc0bdf2c393714c46955deb" translate="yes" xml:space="preserve">
          <source>Rebalances &lt;code&gt;Tree1&lt;/code&gt;. Notice that this is rarely necessary, but can be motivated when many nodes have been deleted from the tree without further insertions. Rebalancing can then be forced to minimize lookup times, as deletion does not rebalance the tree.</source>
          <target state="translated">重新平衡 &lt;code&gt;Tree1&lt;/code&gt; 。请注意，这很少是必需的，但是当从树中删除了许多节点而不进行进一步插入时，可能会激发这种情况。由于删除操作不会重新平衡树，因此可以强制重新平衡以最大程度地减少查找时间。</target>
        </trans-unit>
        <trans-unit id="562c2b623630d3b42ab3e60d86c0debcf41c1ff3" translate="yes" xml:space="preserve">
          <source>Rebalances the tree representation of &lt;code&gt;Set1&lt;/code&gt;. Notice that this is rarely necessary, but can be motivated when a large number of elements have been deleted from the tree without further insertions. Rebalancing can then be forced to minimise lookup times, as deletion does not rebalance the tree.</source>
          <target state="translated">重新平衡 &lt;code&gt;Set1&lt;/code&gt; 的树表示形式。请注意，这很少是必需的，但是当从树中删除了大量元素而不进行进一步插入时，可以激发这一点。由于删除操作不会重新平衡树，因此可以强制重新平衡以最大程度地减少查找时间。</target>
        </trans-unit>
        <trans-unit id="65975122721ed3cffdcd5af89ade5a30eb41911c" translate="yes" xml:space="preserve">
          <source>Reboots the system by making the old release permanent, and calls &lt;code&gt;init:reboot()&lt;/code&gt; directly. The release must have status &lt;code&gt;old&lt;/code&gt;.</source>
          <target state="translated">通过使旧版本永久生效来重新引导系统，然后直接调用 &lt;code&gt;init:reboot()&lt;/code&gt; 。版本必须具有 &lt;code&gt;old&lt;/code&gt; 状态。</target>
        </trans-unit>
        <trans-unit id="8c8fcc6bcad22e8881501a52755eed515b289cd8" translate="yes" xml:space="preserve">
          <source>Rec :: tuple(),</source>
          <target state="translated">Rec ::tuple()。</target>
        </trans-unit>
        <trans-unit id="066b0a9b98c67082184c0fd76a1b9f6c1720b94b" translate="yes" xml:space="preserve">
          <source>Recall that Erlang has distinct 1-tuples, i.e., &lt;code&gt;{X}&lt;/code&gt; is always distinct from &lt;code&gt;X&lt;/code&gt; itself.</source>
          <target state="translated">回想一下，Erlang具有不同的1元组，即 &lt;code&gt;{X}&lt;/code&gt; 始终与 &lt;code&gt;X&lt;/code&gt; 本身不同。</target>
        </trans-unit>
        <trans-unit id="c151c49267645ae0a3f97285a4421925221ab63e" translate="yes" xml:space="preserve">
          <source>Recall that a call is a pair (From, To). &lt;code&gt;domain&lt;/code&gt; applied to a set of calls is interpreted as the set of all vertices From, and &lt;code&gt;range&lt;/code&gt; as the set of all vertices To. The interpretation of the &lt;code&gt;strict&lt;/code&gt; operator is the operand with all calls on the form (A, A) removed.</source>
          <target state="translated">回想一下，一个呼叫是一对（从，到）。应用于一组调用的 &lt;code&gt;domain&lt;/code&gt; 被解释为所有顶点从的集合， &lt;code&gt;range&lt;/code&gt; 被解释为所有顶点到的集合。 &lt;code&gt;strict&lt;/code&gt; 运算符的解释是删除了形式（A，A）上的所有调用的操作数。</target>
        </trans-unit>
        <trans-unit id="444043db45120b29bd6d6d53a99709c813005225" translate="yes" xml:space="preserve">
          <source>Recall that in Erlang, the tail element of a list constructor is not necessarily a list.</source>
          <target state="translated">回顾一下,在Erlang中,list构造函数的尾元素不一定是一个list。</target>
        </trans-unit>
        <trans-unit id="cd036034f0d0a7f389eff3ef5a4661106a510dd9" translate="yes" xml:space="preserve">
          <source>Recall that the tail does not necessarily represent a proper list.</source>
          <target state="translated">回想一下,尾巴不一定代表一个合适的列表。</target>
        </trans-unit>
        <trans-unit id="b5863b43935fb979fdf716a6bc7c98a6730127bb" translate="yes" xml:space="preserve">
          <source>Receive a message from a socket.</source>
          <target state="translated">接收来自套接字的信息。</target>
        </trans-unit>
        <trans-unit id="38292e4d25ddd4690c5032b86bfa672fe71f52bc" translate="yes" xml:space="preserve">
          <source>Receive a response to a &lt;code&gt;call&lt;/code&gt; request previously made by the calling process using &lt;code&gt;&lt;a href=&quot;#send_request-4&quot;&gt;erpc:send_request/4&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;RequestId&lt;/code&gt; should be the value returned from the previously made &lt;code&gt;erpc:send_request()&lt;/code&gt; call, and the corresponding response should not already have been received and handled to completion by &lt;code&gt;&lt;a href=&quot;#check_response-2&quot;&gt;erpc:check_response()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;erpc:receive_response()&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;#wait_response-2&quot;&gt;erpc:wait_response()&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;Timeout&lt;/code&gt; is an integer representing the timeout in milliseconds or the atom &lt;code&gt;infinity&lt;/code&gt; which prevents the operation from ever timing out. The &lt;code&gt;call&lt;/code&gt; operation is completed once the &lt;code&gt;erpc:receive_response()&lt;/code&gt; call returns or raise an exception.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;#send_request-4&quot;&gt;erpc:send_request/4&lt;/a&gt;&lt;/code&gt; 接收对呼叫过程先前发出的 &lt;code&gt;call&lt;/code&gt; 请求的响应。 &lt;code&gt;RequestId&lt;/code&gt; 应该是从先前进行的 &lt;code&gt;erpc:send_request()&lt;/code&gt; 调用返回的值，并且相应的响应应该尚未由 &lt;code&gt;&lt;a href=&quot;#check_response-2&quot;&gt;erpc:check_response()&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;erpc:receive_response()&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;#wait_response-2&quot;&gt;erpc:wait_response()&lt;/a&gt;&lt;/code&gt; 接收并处理到完成。。 &lt;code&gt;Timeout&lt;/code&gt; 是代表超时的整数（以毫秒为单位）或原子 &lt;code&gt;infinity&lt;/code&gt; ，可以防止操作永远超时。该 &lt;code&gt;call&lt;/code&gt; 操作完成一次 &lt;code&gt;erpc:receive_response()&lt;/code&gt; 呼叫返回或引发异常。</target>
        </trans-unit>
        <trans-unit id="fbe39f3322855d03ba354f72c527385f73d95360" translate="yes" xml:space="preserve">
          <source>Receive buffer size.</source>
          <target state="translated">接收缓冲区大小。</target>
        </trans-unit>
        <trans-unit id="4ae1a5ec8aa92d4958acd89043f891f02e540bf3" translate="yes" xml:space="preserve">
          <source>Receive notification of a notation declaration event.</source>
          <target state="translated">接收记号声明事件的通知。</target>
        </trans-unit>
        <trans-unit id="5544b22e095d4110eb969347412c5f0ad7a7eb1f" translate="yes" xml:space="preserve">
          <source>Receive notification of a processing instruction. The Parser will send this event once for each processing instruction found: note that processing instructions may occur before or after the main document element.</source>
          <target state="translated">接收处理指令的通知。解析器将为每发现一条处理指令发送一次该事件:注意,处理指令可能发生在主文档元素之前或之后。</target>
        </trans-unit>
        <trans-unit id="fbbc3c20409ab8df6511a3a9d041b81bc1f03484" translate="yes" xml:space="preserve">
          <source>Receive notification of an unparsed entity declaration event.</source>
          <target state="translated">接收未拆分实体声明事件的通知。</target>
        </trans-unit>
        <trans-unit id="b0f707ac12424cf8350e1640b548139d4dcbc752" translate="yes" xml:space="preserve">
          <source>Receive notification of character data.</source>
          <target state="translated">接收字符数据的通知。</target>
        </trans-unit>
        <trans-unit id="e1ed75deeb63816becb327823827f361dc002ace" translate="yes" xml:space="preserve">
          <source>Receive notification of ignorable whitespace in element content.</source>
          <target state="translated">接收元素内容中可忽略的空白的通知。</target>
        </trans-unit>
        <trans-unit id="7ad2df2530dcae85b22b6938c6f4a1d9b0af6c9a" translate="yes" xml:space="preserve">
          <source>Receive notification of the beginning of a document. The SAX parser will send this event only once before any other event callbacks.</source>
          <target state="translated">接收文档开始的通知。SAX解析器将在其他事件回调之前只发送一次该事件。</target>
        </trans-unit>
        <trans-unit id="877d2315fff28722da3564b35f709435f38d644a" translate="yes" xml:space="preserve">
          <source>Receive notification of the beginning of an element. The Parser will send this event at the beginning of every element in the XML document; there will be a corresponding endElement event for every startElement event (even when the element is empty). All of the element's content will be reported, in order, before the corresponding endElement event.</source>
          <target state="translated">接收一个元素开始的通知。解析器将在XML文档中每个元素的开头发送该事件;每个startElement事件(即使元素是空的)都会有一个相应的endElement事件。元素的所有内容将按顺序在相应的endElement事件之前被报告。</target>
        </trans-unit>
        <trans-unit id="8643851b60b52ba3b3a806063fe1eea7f4aff427" translate="yes" xml:space="preserve">
          <source>Receive notification of the end of a document. The SAX parser will send this event only once, and it will be the last event during the parse.</source>
          <target state="translated">接收文档结束的通知。SAX解析器将只发送该事件一次,它将是解析过程中的最后一次事件。</target>
        </trans-unit>
        <trans-unit id="7bb259e3df1d0efa19aa9bec712acc5ac84cbaf8" translate="yes" xml:space="preserve">
          <source>Receive notification of the end of an element. The SAX parser will send this event at the end of every element in the XML document; there will be a corresponding startElement event for every endElement event (even when the element is empty).</source>
          <target state="translated">接收元素结束的通知。SAX解析器将在XML文档中的每个元素结束时发送该事件;每个endElement事件(即使元素为空)都会有一个对应的startElement事件。</target>
        </trans-unit>
        <trans-unit id="8797c16612fdf5d27b7de210d50ba2cccb65cc70" translate="yes" xml:space="preserve">
          <source>Receive pending limit (see the MGOriginatedPendingLimit and the MGCOriginatedPendingLimit of the megaco root package). This parameter specifies how many pending messages that can be received (for a sent transaction request). When the limit is exceeded, the transaction is considered lost, and an error returned to the user (through the call-back function &lt;strong&gt;handle_trans_reply&lt;/strong&gt;).</source>
          <target state="translated">接收未决限制（请参阅megaco根软件包的MGOriginatedPendingLimit和MGCOriginatedPendingLimit）。此参数指定可以接收（对于已发送的事务请求）多少个待处理消息。当超过限制时，事务被视为丢失，并且错误（通过回调函数&lt;strong&gt;handle_trans_reply&lt;/strong&gt;）返回给用户。</target>
        </trans-unit>
        <trans-unit id="3d5ecbcb08d0f4d6115bb32ff52731dfbd7a7c13" translate="yes" xml:space="preserve">
          <source>Received &lt;code&gt;Packet&lt;/code&gt; is delivered as a binary.</source>
          <target state="translated">接收到的 &lt;code&gt;Packet&lt;/code&gt; 以二进制形式传送。</target>
        </trans-unit>
        <trans-unit id="d4fc2c4f32aaa7580a805013b8ff075ec71d5b9a" translate="yes" xml:space="preserve">
          <source>Received &lt;code&gt;Packet&lt;/code&gt; is delivered as a list.</source>
          <target state="translated">接收到的 &lt;code&gt;Packet&lt;/code&gt; 以列表形式发送。</target>
        </trans-unit>
        <trans-unit id="095439cd3a95f819e845e63f1a8b1cf9a8ac21eb" translate="yes" xml:space="preserve">
          <source>Received &lt;code&gt;Packet&lt;/code&gt; is delivered as defined by &lt;code&gt;Mode&lt;/code&gt;.</source>
          <target state="translated">接收的 &lt;code&gt;Packet&lt;/code&gt; 按照 &lt;code&gt;Mode&lt;/code&gt; 的定义进行传递。</target>
        </trans-unit>
        <trans-unit id="11bdd920d9bb9ec7f1744e588b3249a3eb42f4bc" translate="yes" xml:space="preserve">
          <source>Receives a chunk of the remote file (&lt;code&gt;RemoteFile&lt;/code&gt; of &lt;code&gt;recv_chunk_start&lt;/code&gt;). The return values have the following meaning:</source>
          <target state="translated">接收大量的远程文件（ &lt;code&gt;RemoteFile&lt;/code&gt; 的 &lt;code&gt;recv_chunk_start&lt;/code&gt; ）。返回值具有以下含义：</target>
        </trans-unit>
        <trans-unit id="de7f79d5297387bcfc0d13974523a5f34bf53062" translate="yes" xml:space="preserve">
          <source>Receives a message consisting of a sequence of bytes in the Erlang external format.</source>
          <target state="translated">接收由Erlang外部格式的字节序列组成的消息。</target>
        </trans-unit>
        <trans-unit id="79120148644e55cd552daccc123d05a76cb9f13a" translate="yes" xml:space="preserve">
          <source>Receives a message to the buffer in &lt;code&gt;x&lt;/code&gt;. &lt;code&gt;ei_xreceive_msg&lt;/code&gt; allows the buffer in &lt;code&gt;x&lt;/code&gt; to grow, but &lt;code&gt;ei_receive_msg&lt;/code&gt; fails if the message is larger than the pre-allocated buffer in &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">接收消息到 &lt;code&gt;x&lt;/code&gt; 中的缓冲区。 &lt;code&gt;ei_xreceive_msg&lt;/code&gt; 允许 &lt;code&gt;x&lt;/code&gt; 中的缓冲区增加，但如果消息大于 &lt;code&gt;x&lt;/code&gt; 中的预分配缓冲区，则 &lt;code&gt;ei_receive_msg&lt;/code&gt; 失败。</target>
        </trans-unit>
        <trans-unit id="88ade3e878d068456efb014fd72f2989e409bb39" translate="yes" xml:space="preserve">
          <source>Receives a packet from a socket in passive mode. A closed socket is indicated by return value &lt;code&gt;{error, closed}&lt;/code&gt;.</source>
          <target state="translated">在被动模式下从套接字接收数据包。返回值 &lt;code&gt;{error, closed}&lt;/code&gt; 指示关闭的套接字。</target>
        </trans-unit>
        <trans-unit id="0c7ccc2574bf778a71ae7a9543f1b346cd8d49c7" translate="yes" xml:space="preserve">
          <source>Receives a packet from a socket in passive mode. Optional parameter &lt;code&gt;Timeout&lt;/code&gt; specifies a time-out in milliseconds. Defaults to &lt;code&gt;infinity&lt;/code&gt;.</source>
          <target state="translated">在被动模式下从套接字接收数据包。可选参数 &lt;code&gt;Timeout&lt;/code&gt; 以毫秒为单位指定超时。默认为 &lt;code&gt;infinity&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ef7ad247f4d592c4f5c9dd57f0200426e983df3e" translate="yes" xml:space="preserve">
          <source>Receives expected data from server on the specified session channel.</source>
          <target state="translated">在指定的会话通道上接收来自服务器的预期数据。</target>
        </trans-unit>
        <trans-unit id="cec7dde1707a867ec3ac180b1d8faf20bd5a279e" translate="yes" xml:space="preserve">
          <source>Receives messages sent to the process using the send operator (!). The patterns &lt;code&gt;Pattern&lt;/code&gt; are sequentially matched against the first message in time order in the mailbox, then the second, and so on. If a match succeeds and the optional guard sequence &lt;code&gt;GuardSeq&lt;/code&gt; is true, the corresponding &lt;code&gt;Body&lt;/code&gt; is evaluated. The matching message is consumed, that is, removed from the mailbox, while any other messages in the mailbox remain unchanged.</source>
          <target state="translated">接收使用send运算符（！）发送到进程的消息。模式 &lt;code&gt;Pattern&lt;/code&gt; 按时间顺序与邮箱中的第一个消息顺序匹配，然后与第二个消息匹配，依此类推。如果匹配成功，并且可选的保护序列 &lt;code&gt;GuardSeq&lt;/code&gt; 为true，则将评估相应的 &lt;code&gt;Body&lt;/code&gt; 。匹配的消息将被使用，即从邮箱中删除，而邮箱中的所有其他消息均保持不变。</target>
        </trans-unit>
        <trans-unit id="5cc1284ee604f9633073521a2db79d9f71aff293" translate="yes" xml:space="preserve">
          <source>Receives one packet of data.</source>
          <target state="translated">接收一个数据包。</target>
        </trans-unit>
        <trans-unit id="43e2b0fdb2b90c2ae0d79559c9136a0b0fbf1061" translate="yes" xml:space="preserve">
          <source>Receives the &lt;code&gt;Data&lt;/code&gt; message from any association of the socket. If the receive times out, &lt;code&gt;{error,timeout}&lt;/code&gt; is returned. The default time-out is &lt;code&gt;infinity&lt;/code&gt;. &lt;code&gt;FromIP&lt;/code&gt; and &lt;code&gt;FromPort&lt;/code&gt; indicate the address of the sender.</source>
          <target state="translated">从套接字的任何关联接收 &lt;code&gt;Data&lt;/code&gt; 消息。如果接收 &lt;code&gt;{error,timeout}&lt;/code&gt; 则返回{error，timeout}。默认超时是 &lt;code&gt;infinity&lt;/code&gt; 。 &lt;code&gt;FromIP&lt;/code&gt; 和 &lt;code&gt;FromPort&lt;/code&gt; 指示发送者的地址。</target>
        </trans-unit>
        <trans-unit id="31c3f1b8ef20a940b9e8eca2f6ff181ad7a8d16d" translate="yes" xml:space="preserve">
          <source>Receives the message into the specified buffer and decodes into &lt;code&gt;(ErlMessage *) emsg&lt;/code&gt;.</source>
          <target state="translated">将消息接收到指定的缓冲区中，然后解码为 &lt;code&gt;(ErlMessage *) emsg&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b3f549c7b2440e41e018f429d531bd6c3666574a" translate="yes" xml:space="preserve">
          <source>Receiving Exit Signals</source>
          <target state="translated">接收出口信号</target>
        </trans-unit>
        <trans-unit id="6e89cb081d99ed724d5931544bc83550c03a78c4" translate="yes" xml:space="preserve">
          <source>Receiving Requests</source>
          <target state="translated">接收请求</target>
        </trans-unit>
        <trans-unit id="077d735aed11e2e48a44668a13373797ed93e95f" translate="yes" xml:space="preserve">
          <source>Receiving process/port and message term</source>
          <target state="translated">接收过程/端口和信息术语</target>
        </trans-unit>
        <trans-unit id="1019a13cb6e4b083bd8b40b2d7fb5371dc84bfe2" translate="yes" xml:space="preserve">
          <source>Receiving segmented messages:</source>
          <target state="translated">接收分段信息。</target>
        </trans-unit>
        <trans-unit id="5754a8bb83120ef7d69ead91ce581426fad83335" translate="yes" xml:space="preserve">
          <source>Recognized request methods and header fields are returned as atoms. Others are returned as strings. Strings of unrecognized header fields are formatted with only capital letters first and after hyphen characters, for example, &lt;code&gt;&quot;Sec-Websocket-Key&quot;&lt;/code&gt;.</source>
          <target state="translated">公认的请求方法和标头字段作为原子返回。其他作为字符串返回。无法识别的标题字段的字符串仅以大写字母开头和后面加上连字符，例如 &lt;code&gt;&quot;Sec-Websocket-Key&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f8f5867aab01588396ca065fca74585441fc6dad" translate="yes" xml:space="preserve">
          <source>Recognized request methods and header fields are returned as atoms. Others are returned as strings. Strings of unrecognized header fields are formatted with only capital letters first and after hyphen characters, for example, &lt;code&gt;&quot;Sec-Websocket-Key&quot;&lt;/code&gt;. Header field names are also returned in &lt;code&gt;UnmodifiedField&lt;/code&gt; as strings, without any conversion or formatting.</source>
          <target state="translated">公认的请求方法和标头字段作为原子返回。其他作为字符串返回。无法识别的标题字段的字符串仅以大写字母开头和后面加上连字符，例如 &lt;code&gt;&quot;Sec-Websocket-Key&quot;&lt;/code&gt; 。标头字段名称也将在 &lt;code&gt;UnmodifiedField&lt;/code&gt; 中作为字符串返回，而不进行任何转换或格式化。</target>
        </trans-unit>
        <trans-unit id="06210493d8afafd3fbe9c98e7aefe7e12c50cb5e" translate="yes" xml:space="preserve">
          <source>Recommendations:</source>
          <target state="translated">Recommendations:</target>
        </trans-unit>
        <trans-unit id="4e0d0a34940fd710c8e8528aed83c032f4775bdb" translate="yes" xml:space="preserve">
          <source>Recomposing a map of URI components into a URI string</source>
          <target state="translated">将URI组件的映射重新组合为URI字符串。</target>
        </trans-unit>
        <trans-unit id="ce83d6ed524fb80981aa317a9b2ad1f780cc5c35" translate="yes" xml:space="preserve">
          <source>Reconnection interval (time to wait in between reconnection attempts) = 5 seconds</source>
          <target state="translated">重新连接的时间间隔(重新连接尝试之间的等待时间)=5秒。</target>
        </trans-unit>
        <trans-unit id="1fdeec60896b5fb2de70c54c0789290dbd55f5e0" translate="yes" xml:space="preserve">
          <source>Reconstitute a parsed dictionary, as returned by &lt;code&gt;&lt;a href=&quot;#codec-2&quot;&gt;codec/2&lt;/a&gt;&lt;/code&gt;, without using &lt;code&gt;&lt;code&gt;&lt;a href=&quot;diameter_dict#inherits&quot;&gt;@inherits&lt;/a&gt;&lt;/code&gt;&lt;/code&gt;. That is, construct an equivalent dictionary in which all AVP's are definined in the dictionary itself. The return value is also a parsed dictionary.</source>
          <target state="translated">重构由 &lt;code&gt;&lt;a href=&quot;#codec-2&quot;&gt;codec/2&lt;/a&gt;&lt;/code&gt; 返回的已解析字典，而不使用 &lt;code&gt;&lt;code&gt;&lt;a href=&quot;diameter_dict#inherits&quot;&gt;@inherits&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; 。也就是说，构造一个等效字典，其中所有AVP都在字典本身中定义。返回值也是一个已解析的字典。</target>
        </trans-unit>
        <trans-unit id="14cbab53c64e5711fd29d390806b7136e30d4167" translate="yes" xml:space="preserve">
          <source>Reconstruct Source Code</source>
          <target state="translated">重构源代码</target>
        </trans-unit>
        <trans-unit id="00547b3efda02c12effbe28f025f7728bedcf735" translate="yes" xml:space="preserve">
          <source>Record :: tuple(),</source>
          <target state="translated">::tuple();</target>
        </trans-unit>
        <trans-unit id="60cccb6e6508d69f69882dd034fc65b7d791ab32" translate="yes" xml:space="preserve">
          <source>Record Definitions</source>
          <target state="translated">记录定义</target>
        </trans-unit>
        <trans-unit id="f7e8d3f1a5b9f0dfb9c295d509e1df5a9c9d1ef6" translate="yes" xml:space="preserve">
          <source>Record Field Types</source>
          <target state="translated">记录字段类型</target>
        </trans-unit>
        <trans-unit id="d385ea8d047e6dbe61bb15d78b1d8dbdf298262e" translate="yes" xml:space="preserve">
          <source>Record Fields</source>
          <target state="translated">记录领域</target>
        </trans-unit>
        <trans-unit id="1d4ca640183de7618d71ecdb2e23d9ce63837fd1" translate="yes" xml:space="preserve">
          <source>Record definitions are allowed anywhere in a module, also among the function declarations. Read more in &lt;code&gt;&lt;a href=&quot;records&quot;&gt;Records&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">记录定义允许在模块中的任何位置，也可以在函数声明中使用。阅读更多 &lt;code&gt;&lt;a href=&quot;records&quot;&gt;Records&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="016cb45280daecda9b7b119fc9dace58154435ea" translate="yes" xml:space="preserve">
          <source>Record definitions for this module can be found using:</source>
          <target state="translated">本模块的记录定义可以使用:</target>
        </trans-unit>
        <trans-unit id="7cd9a03d9ebf3a3c8f7631f0aa5a3cf6db8bbced" translate="yes" xml:space="preserve">
          <source>Record expressions are translated to tuple expressions during compilation. A record defined as:</source>
          <target state="translated">记录表达式在编译过程中被翻译成元组表达式。一个记录定义为:</target>
        </trans-unit>
        <trans-unit id="7cb719be81341614e030a4a2e403c5ea98aca76f" translate="yes" xml:space="preserve">
          <source>Record names versus table names</source>
          <target state="translated">记录名与表名</target>
        </trans-unit>
        <trans-unit id="144612104dcd31483365025648e162a5188453ca" translate="yes" xml:space="preserve">
          <source>Records allow references to the fields by name, instead of by position. In the following example, a record instead of a tuple is used to store the data:</source>
          <target state="translated">记录允许用名称而不是位置来引用字段。在下面的例子中,使用记录而不是元组来存储数据。</target>
        </trans-unit>
        <trans-unit id="e3af00797ab5134cc13d66f0140afed4ac5aeee7" translate="yes" xml:space="preserve">
          <source>Records are extended to possibly contain type information. This is described in &lt;code&gt;&lt;a href=&quot;#typeinrecords&quot;&gt; Type Information in Record Declarations&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">记录被扩展为可能包含类型信息。 &lt;code&gt;&lt;a href=&quot;#typeinrecords&quot;&gt; Type Information in Record Declarations&lt;/a&gt;&lt;/code&gt; 中的类型信息中对此进行了描述。</target>
        </trans-unit>
        <trans-unit id="613bf96af83ed6c9b691f468cc1cafc02874076f" translate="yes" xml:space="preserve">
          <source>Records are extended to possibly contain type information. This is described in &lt;code&gt;&lt;a href=&quot;#typeinrecords&quot;&gt;Type Information in Record Declarations&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">记录被扩展为可能包含类型信息。 &lt;code&gt;&lt;a href=&quot;#typeinrecords&quot;&gt;Type Information in Record Declarations&lt;/a&gt;&lt;/code&gt; 中的类型信息中对此进行了描述。</target>
        </trans-unit>
        <trans-unit id="cf99ef8454e1e901403d3747fabb549275497b0b" translate="yes" xml:space="preserve">
          <source>Records have possibly been deleted. &lt;code&gt;What&lt;/code&gt; is either &lt;code&gt;{Table, Key}&lt;/code&gt; or a record &lt;code&gt;{RecordName, Key, ...}&lt;/code&gt; that was deleted. Notice that the new content depends on the table type.</source>
          <target state="translated">记录可能已删除。 &lt;code&gt;What&lt;/code&gt; 是要么 &lt;code&gt;{Table, Key}&lt;/code&gt; 或记录 &lt;code&gt;{RecordName, Key, ...}&lt;/code&gt; 被删除。请注意，新内容取决于表类型。</target>
        </trans-unit>
        <trans-unit id="9f89198d9e262f6073124ec6efc26bc57f43b091" translate="yes" xml:space="preserve">
          <source>Records in &lt;code&gt;set&lt;/code&gt; or &lt;code&gt;bag&lt;/code&gt; tables are not ordered. However, there is an ordering of the records that is unknown to the user. A table can therefore be traversed by this function with the function &lt;code&gt;mnesia:next/2&lt;/code&gt;.</source>
          <target state="translated">不订购 &lt;code&gt;set&lt;/code&gt; 表或 &lt;code&gt;bag&lt;/code&gt; 表中的记录。但是，用户不知道记录的顺序。因此，可以使用函数 &lt;code&gt;mnesia:next/2&lt;/code&gt; 遍历表。</target>
        </trans-unit>
        <trans-unit id="59700296e24a1cf9794576dac5b155d8b10dbdb1" translate="yes" xml:space="preserve">
          <source>Records in &lt;code&gt;set&lt;/code&gt; or &lt;code&gt;bag&lt;/code&gt; tables are not ordered. However, there is an ordering of the records that is unknown to the user. Therefore, a table can be traversed by this function with the function &lt;code&gt;mnesia:dirty_next/2&lt;/code&gt;.</source>
          <target state="translated">不订购 &lt;code&gt;set&lt;/code&gt; 表或 &lt;code&gt;bag&lt;/code&gt; 表中的记录。但是，用户不知道记录的顺序。因此，可以使用函数 &lt;code&gt;mnesia:dirty_next/2&lt;/code&gt; 遍历表。</target>
        </trans-unit>
        <trans-unit id="75d7ddf3a47ed2b29eb25eb18cb6fa66a868c9de" translate="yes" xml:space="preserve">
          <source>Records in &lt;code&gt;set&lt;/code&gt; or &lt;code&gt;bag&lt;/code&gt; tables are not sorted. However, there is a record order that is unknown to the user. This means that a table can be traversed by this function with the function &lt;code&gt;&lt;a href=&quot;mnesia#dirty_next-2&quot;&gt;mnesia:dirty_next/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">在唱片 &lt;code&gt;set&lt;/code&gt; 或 &lt;code&gt;bag&lt;/code&gt; 表进行排序。但是，存在用户不知道的记录顺序。这意味着可以使用函数 &lt;code&gt;&lt;a href=&quot;mnesia#dirty_next-2&quot;&gt;mnesia:dirty_next/2&lt;/a&gt;&lt;/code&gt; 遍历表。</target>
        </trans-unit>
        <trans-unit id="bb519de4fc078d24d538560c361925ce544f5dec" translate="yes" xml:space="preserve">
          <source>Recovery from communication failure</source>
          <target state="translated">从通信故障中恢复</target>
        </trans-unit>
        <trans-unit id="c857be3a0573cdabebb7a961ed6d631e3f3733de" translate="yes" xml:space="preserve">
          <source>Recovery of transactions</source>
          <target state="translated">交易的收回</target>
        </trans-unit>
        <trans-unit id="b82d4c7650ef2416c470136be1d0e55fc283f2db" translate="yes" xml:space="preserve">
          <source>Recreates the file &lt;code&gt;mysystem.tar.gz&lt;/code&gt; from the directories in the directory &lt;code&gt;tmp&lt;/code&gt; and removes &lt;code&gt;tmp&lt;/code&gt;.</source>
          <target state="translated">从目录 &lt;code&gt;tmp&lt;/code&gt; 中的目录重新创建文件 &lt;code&gt;mysystem.tar.gz&lt;/code&gt; 并删除 &lt;code&gt;tmp&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d0c24b60848ddc6e8e54f77a11b281c810436a9a" translate="yes" xml:space="preserve">
          <source>Recursion processing in PCRE differs from Perl in two important ways. In PCRE (like Python, but unlike Perl), a recursive subpattern call is always treated as an atomic group. That is, once it has matched some of the subject string, it is never re-entered, even if it contains untried alternatives and there is a subsequent matching failure. This can be illustrated by the following pattern, which means to match a palindromic string containing an odd number of characters (for example, &quot;a&quot;, &quot;aba&quot;, &quot;abcba&quot;, &quot;abcdcba&quot;):</source>
          <target state="translated">PCRE 中的递归处理与 Perl 有两个重要的区别。在PCRE中(像Python一样,但不像Perl),递归子模式调用总是被当作一个原子组。也就是说,一旦它匹配了一些主题字符串,就永远不会被重新输入,即使它包含了未尝试过的替代方案,并且随后出现了匹配失败。这一点可以用下面的模式来说明,即匹配一个包含奇数字符的顺口溜字符串(例如 &quot;a&quot;、&quot;aba&quot;、&quot;abcba&quot;、&quot;abcdcba&quot;)。</target>
        </trans-unit>
        <trans-unit id="c9966d77fca6c046d8301a9c5aeeabdb07db6e94" translate="yes" xml:space="preserve">
          <source>Recursive Types</source>
          <target state="translated">递归类型</target>
        </trans-unit>
        <trans-unit id="49c36f3bbb51240a32d3b51ef263546135b56e0d" translate="yes" xml:space="preserve">
          <source>Redefined and undefined functions</source>
          <target state="translated">重新定义和未定义的职能</target>
        </trans-unit>
        <trans-unit id="9821e8e3eb5f0b3550eb425437d414bd5f509995" translate="yes" xml:space="preserve">
          <source>Redirect Agents</source>
          <target state="translated">重定向代理</target>
        </trans-unit>
        <trans-unit id="cb2b5a6cb4c9d318ad4e5065d9f3485f316f8814" translate="yes" xml:space="preserve">
          <source>Redirect Erlang input and output streams on Unix systems.</source>
          <target state="translated">重定向Unix系统上的Erlang输入和输出流。</target>
        </trans-unit>
        <trans-unit id="c502d3c9c5fc88582d123f9cda4001ffbea9a9f6" translate="yes" xml:space="preserve">
          <source>Redirect-Host AVP</source>
          <target state="translated">重定向-主机AVP</target>
        </trans-unit>
        <trans-unit id="1e581fb68f4db03f158c73399e1aef520dcfaf98" translate="yes" xml:space="preserve">
          <source>Redirect-Host-Usage AVP</source>
          <target state="translated">重定向-主机-使用AVP</target>
        </trans-unit>
        <trans-unit id="a1446afc50214ae3e357fb0a71f59e2404d18c81" translate="yes" xml:space="preserve">
          <source>Redirect-Host-Usage AVP Values</source>
          <target state="translated">重定向-主机-使用AVP值</target>
        </trans-unit>
        <trans-unit id="cd193b05a97a631073ccb483d47d26ea1dafe644" translate="yes" xml:space="preserve">
          <source>Redirect-Max-Cache-Time AVP</source>
          <target state="translated">重定向-最大缓存时间AVP</target>
        </trans-unit>
        <trans-unit id="7dc43d4ac811f4906c7b139115075f47a12d9c79" translate="yes" xml:space="preserve">
          <source>Redirecting Requests</source>
          <target state="translated">重定向请求</target>
        </trans-unit>
        <trans-unit id="98d90033419f07be437a04bf22d4b03540b1022d" translate="yes" xml:space="preserve">
          <source>Redirects all report output from the RB tool to the specified file, registered name, or &lt;code&gt;io_device&lt;/code&gt;.</source>
          <target state="translated">将所有从RB工具输出的报告重定向到指定的文件，注册名称或 &lt;code&gt;io_device&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d20e63f8c7e8894f58f191215bb077b8a93d30c2" translate="yes" xml:space="preserve">
          <source>Redraw line</source>
          <target state="translated">重新画线</target>
        </trans-unit>
        <trans-unit id="e6d86c37ebe8a894ce36d13e14a286c242f0c262" translate="yes" xml:space="preserve">
          <source>Redundant directory separators are removed.</source>
          <target state="translated">删除多余的目录分隔符。</target>
        </trans-unit>
        <trans-unit id="e227dfcf432b828dab887b3933a18c3b63d3ed41" translate="yes" xml:space="preserve">
          <source>Ref is the value that was returned from the call to &lt;code&gt;&lt;a href=&quot;diameter#add_transport-2&quot;&gt;diameter:add_transport/2&lt;/a&gt;&lt;/code&gt; that has lead to starting of a transport process.</source>
          <target state="translated">Ref是从调用 &lt;code&gt;&lt;a href=&quot;diameter#add_transport-2&quot;&gt;diameter:add_transport/2&lt;/a&gt;&lt;/code&gt; 返回的值，该值已导致传输过程开始。</target>
        </trans-unit>
        <trans-unit id="1c0d648927926fa5ea5d04766e8a678e8fc58490" translate="yes" xml:space="preserve">
          <source>Refc binaries consist of two parts:</source>
          <target state="translated">Refc二进制文件由两部分组成:</target>
        </trans-unit>
        <trans-unit id="d231e7267d9cb6cb23fcfa03c8ac87df69935c7e" translate="yes" xml:space="preserve">
          <source>Refer also to the chapter(s) &lt;code&gt;&lt;a href=&quot;snmp_agent_config_files&quot;&gt;Definition of Agent Configuration Files&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;snmp_manager_config_files&quot;&gt;Definition of Manager Configuration Files&lt;/a&gt;&lt;/code&gt; which contains more detailed information about the agent and manager configuration files.</source>
          <target state="translated">另请参阅 &lt;code&gt;&lt;a href=&quot;snmp_agent_config_files&quot;&gt;Definition of Agent Configuration Files&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;snmp_manager_config_files&quot;&gt;Definition of Manager Configuration Files&lt;/a&gt;&lt;/code&gt; &amp;rdquo;和&amp;ldquo;管理器配置文件定义&amp;rdquo;一章，其中包含有关代理和管理器配置文件的更多详细信息。</target>
        </trans-unit>
        <trans-unit id="2222f6b50ec8d89285956cc68d86c2224b726ef7" translate="yes" xml:space="preserve">
          <source>Refer to &lt;code&gt;rt_mask/2&lt;/code&gt; for a list of valid categories. All categories are enabled by default.</source>
          <target state="translated">有关有效类别的列表，请参考 &lt;code&gt;rt_mask/2&lt;/code&gt; 。默认情况下启用所有类别。</target>
        </trans-unit>
        <trans-unit id="6ffdd2bd542a285efd2de4779f5b373c9466faf0" translate="yes" xml:space="preserve">
          <source>Refer to the Mnesia User's Guide for information on how to declare a Mnesia table as an SNMP table.</source>
          <target state="translated">有关如何将Mnesia表声明为SNMP表的信息,请参考Mnesia用户指南。</target>
        </trans-unit>
        <trans-unit id="f0e653ef4f1da220b6cd05bc836f3690e633c668" translate="yes" xml:space="preserve">
          <source>Refer to the chapter &lt;code&gt;&lt;a href=&quot;snmp_advanced_agent&quot;&gt;Advanced Agent Topics&lt;/a&gt;&lt;/code&gt; in this User's Guide for more information about these topics.</source>
          <target state="translated">有关这些主题的更多信息，请参考本《用户指南》中的&amp;ldquo; &lt;code&gt;&lt;a href=&quot;snmp_advanced_agent&quot;&gt;Advanced Agent Topics&lt;/a&gt;&lt;/code&gt; &amp;rdquo;一章。</target>
        </trans-unit>
        <trans-unit id="0e379ff749b13f33a9df504f29d8f8b458d827d7" translate="yes" xml:space="preserve">
          <source>Refer to the following documentation for more information about &lt;code&gt;Event Tracer (ET)&lt;/code&gt; and about the Erlang/OTP development system:</source>
          <target state="translated">有关 &lt;code&gt;Event Tracer (ET)&lt;/code&gt; 和Erlang / OTP开发系统的更多信息，请参考以下文档：</target>
        </trans-unit>
        <trans-unit id="f539ecbb66f8ec24d2e6f1646377a431c040604d" translate="yes" xml:space="preserve">
          <source>Refer to the following documentation for more information about Megaco/H.248 and about the Erlang/OTP development system:</source>
          <target state="translated">关于Megaco/H.248和Erlang/OTP开发系统的更多信息,请参考以下文档。</target>
        </trans-unit>
        <trans-unit id="e44a86d89e003984ea5ef73cfad4e5d309a9ade7" translate="yes" xml:space="preserve">
          <source>Refer to the following documentation for more information about Reltool and about the Erlang/OTP development system:</source>
          <target state="translated">关于Reltool和Erlang/OTP开发系统的更多信息,请参考以下文档。</target>
        </trans-unit>
        <trans-unit id="5ebdb38c8d53695f9ea0d66e56f5fddcaa30ef1c" translate="yes" xml:space="preserve">
          <source>Refer to the following documentation for more information about SNMP and about the Erlang/OTP development system:</source>
          <target state="translated">关于SNMP和Erlang/OTP开发系统的更多信息,请参考以下文档。</target>
        </trans-unit>
        <trans-unit id="db1c784524e1b54011a95823026161f7c8517fe0" translate="yes" xml:space="preserve">
          <source>Reference</source>
          <target state="translated">Reference</target>
        </trans-unit>
        <trans-unit id="e0dc153ae2bdd0fe9582cae3b3c29c7ba9a0ae63" translate="yes" xml:space="preserve">
          <source>Reference IDs</source>
          <target state="translated">参考ID</target>
        </trans-unit>
        <trans-unit id="27c7472e340ed21263acad4148dc337d9d6c12a1" translate="yes" xml:space="preserve">
          <source>Reference Identifier</source>
          <target state="translated">参考标识符</target>
        </trans-unit>
        <trans-unit id="713c0142116eaba09081a317268f9ee98220982c" translate="yes" xml:space="preserve">
          <source>Reference returned by &lt;code&gt;&lt;a href=&quot;#add_transport-2&quot;&gt;add_transport/2&lt;/a&gt;&lt;/code&gt; that identifies the configuration.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#add_transport-2&quot;&gt;add_transport/2&lt;/a&gt;&lt;/code&gt; 返回的标识配置的引用。</target>
        </trans-unit>
        <trans-unit id="9c5d563f657af29bb1ef8ba94dfb428a73fff530" translate="yes" xml:space="preserve">
          <source>Reference to the &lt;code&gt;ssh&lt;/code&gt; connection as returned by &lt;code&gt;&lt;a href=&quot;ssh#connect-3&quot;&gt;ssh:connect/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">参考 &lt;code&gt;ssh&lt;/code&gt; 如通过返回的连接 &lt;code&gt;&lt;a href=&quot;ssh#connect-3&quot;&gt;ssh:connect/3&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="09e48449c433765315807d16f90cf85823ba070e" translate="yes" xml:space="preserve">
          <source>Reference to the CRL cache.</source>
          <target state="translated">对CRL缓存的引用。</target>
        </trans-unit>
        <trans-unit id="21c316b9ea2c08e8a30d1111d9a15dea4523351d" translate="yes" xml:space="preserve">
          <source>Referenced modules are now parsed when the compiler finds an entity that is imported. No code is generated for the referenced module. However, the compiled modules rely on that the referenced modules are also compiled.</source>
          <target state="translated">当编译器发现一个被导入的实体时,被引用的模块现在会被解析。不会为被引用的模块生成任何代码。然而,编译后的模块依赖于被引用的模块也被编译。</target>
        </trans-unit>
        <trans-unit id="5d20d0fee3b91643dd8d272ac33d01ca95179d82" translate="yes" xml:space="preserve">
          <source>References</source>
          <target state="translated">References</target>
        </trans-unit>
        <trans-unit id="5dfbb32d4eeb2b41a35cac6863870075ee04f983" translate="yes" xml:space="preserve">
          <source>References.</source>
          <target state="translated">References.</target>
        </trans-unit>
        <trans-unit id="9d1e4e7d27b519b1da3d7266c9c87d7861741080" translate="yes" xml:space="preserve">
          <source>References:</source>
          <target state="translated">References:</target>
        </trans-unit>
        <trans-unit id="7a7812481d7d8a559db48b96be55b5b061c0f69c" translate="yes" xml:space="preserve">
          <source>Refers to the atom with &lt;code&gt;AtomCacheReferenceIndex&lt;/code&gt; in the &lt;code&gt;&lt;a href=&quot;#distribution_header&quot;&gt;distribution header&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">是指具有原子 &lt;code&gt;AtomCacheReferenceIndex&lt;/code&gt; 在 &lt;code&gt;&lt;a href=&quot;#distribution_header&quot;&gt;distribution header&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="15e03a93e16fc2b3802f8e66f83eae65fd5327b5" translate="yes" xml:space="preserve">
          <source>Refresh HTML Index Files</source>
          <target state="translated">刷新HTML索引文件</target>
        </trans-unit>
        <trans-unit id="36717b8ae4c9e2f35cbb35a6b8557e62f3195790" translate="yes" xml:space="preserve">
          <source>Refreshes the top-level HTML index files.</source>
          <target state="translated">刷新顶层HTML索引文件。</target>
        </trans-unit>
        <trans-unit id="94ce43532e416f84ee6391e5a1ef349f36f00a42" translate="yes" xml:space="preserve">
          <source>RegArity ::= RegString | Number | &lt;code&gt;_&lt;/code&gt; | &lt;code&gt;-1&lt;/code&gt;</source>
          <target state="translated">RegArity :: = RegString | 编号 &lt;code&gt;_&lt;/code&gt; | &lt;code&gt;-1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3acf35ba403cbdbfa0631a0b0f04b366e0b454d8" translate="yes" xml:space="preserve">
          <source>RegAtom ::= RegString | Atom | &lt;code&gt;_&lt;/code&gt;</source>
          <target state="translated">RegAtom :: = RegString | 原子| &lt;code&gt;_&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="41639ede4e105dbe6f8a9955f29465cf6b7d6c32" translate="yes" xml:space="preserve">
          <source>RegExpr ::= RegString &lt;code&gt;:&lt;/code&gt; Type | RegFunc | RegFunc &lt;code&gt;:&lt;/code&gt; Type</source>
          <target state="translated">RegExpr :: = RegString &lt;code&gt;:&lt;/code&gt; 类型| RegFunc | RegFunc &lt;code&gt;:&lt;/code&gt; 类型</target>
        </trans-unit>
        <trans-unit id="930b67b59794ec947de2a9f2994493cadd99fca4" translate="yes" xml:space="preserve">
          <source>RegFunc ::= RegModule &lt;code&gt;:&lt;/code&gt; RegFunction &lt;code&gt;/&lt;/code&gt; RegArity</source>
          <target state="translated">RegFunc :: = RegModule &lt;code&gt;:&lt;/code&gt; RegFunction &lt;code&gt;/&lt;/code&gt; RegArity</target>
        </trans-unit>
        <trans-unit id="134c93f0cffad65e559068d0d1b231a309a6fdfe" translate="yes" xml:space="preserve">
          <source>RegFunction ::= RegAtom</source>
          <target state="translated">RegFunction ::=RegAtom</target>
        </trans-unit>
        <trans-unit id="7def8fd36ca99187f55e24c50241ef969bcc1d09" translate="yes" xml:space="preserve">
          <source>RegModule ::= RegAtom</source>
          <target state="translated">RegModule ::=RegAtom</target>
        </trans-unit>
        <trans-unit id="5ea313547c0f2b26b1f18ea46a73a7c74fcbe229" translate="yes" xml:space="preserve">
          <source>RegString ::= - a regular expression, as described in the &lt;code&gt;re&lt;/code&gt; module, enclosed in double quotes -</source>
          <target state="translated">RegString :: =-正则表达式，如 &lt;code&gt;re&lt;/code&gt; 模块中所述，用双引号引起来-</target>
        </trans-unit>
        <trans-unit id="0469fbf0d49c6eb360a825665c9fd2a213e391df" translate="yes" xml:space="preserve">
          <source>Regarding filename encoding, the Erlang VM can operate in two modes. The current mode can be queried using function &lt;code&gt;&lt;a href=&quot;#native_name_encoding-0&quot;&gt;native_name_encoding/0&lt;/a&gt;&lt;/code&gt;. It returns &lt;code&gt;latin1&lt;/code&gt; or &lt;code&gt;utf8&lt;/code&gt;.</source>
          <target state="translated">关于文件名编码，Erlang VM可以在两种模式下运行。可以使用 &lt;code&gt;&lt;a href=&quot;#native_name_encoding-0&quot;&gt;native_name_encoding/0&lt;/a&gt;&lt;/code&gt; 函数查询当前模式。它返回 &lt;code&gt;latin1&lt;/code&gt; 或 &lt;code&gt;utf8&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fa909bfc847f3f2dab8d9422d9641563e62929f7" translate="yes" xml:space="preserve">
          <source>Regardless of locking scheme used, calls to driver callbacks can be made from different threads.</source>
          <target state="translated">无论使用何种锁定方案,都可以从不同的线程调用驱动回调。</target>
        </trans-unit>
        <trans-unit id="6d3200800919d3e46eca540d750c7be68fa53667" translate="yes" xml:space="preserve">
          <source>Register a Node in EPMD</source>
          <target state="translated">在EPMD中注册一个节点</target>
        </trans-unit>
        <trans-unit id="4fda3f1d7a876f76d3fabdf3fae0856aadda52fb" translate="yes" xml:space="preserve">
          <source>Register an alternate input handler process for the distribution channel identified by &lt;code&gt;DHandle&lt;/code&gt;. Once this function has been called, &lt;code&gt;InputHandler&lt;/code&gt; is the only process allowed to call &lt;code&gt;&lt;a href=&quot;erlang#dist_ctrl_put_data-2&quot;&gt;erlang:dist_ctrl_put_data(DHandle, Data)&lt;/a&gt;&lt;/code&gt; with the &lt;code&gt;DHandle&lt;/code&gt; identifing this distribution channel.</source>
          <target state="translated">为 &lt;code&gt;DHandle&lt;/code&gt; 标识的分发通道注册备用输入处理程序进程。调用此函数后， &lt;code&gt;InputHandler&lt;/code&gt; 是唯一允许调用 &lt;code&gt;&lt;a href=&quot;erlang#dist_ctrl_put_data-2&quot;&gt;erlang:dist_ctrl_put_data(DHandle, Data)&lt;/a&gt;&lt;/code&gt; 的 &lt;code&gt;DHandle&lt;/code&gt; ，而DHandle会标识此分发通道。</target>
        </trans-unit>
        <trans-unit id="612e70bc80f39d67fe2e63fcdd740554f873caa3" translate="yes" xml:space="preserve">
          <source>Register the given node name with the registrar.</source>
          <target state="translated">在注册商处注册给定的节点名称。</target>
        </trans-unit>
        <trans-unit id="ccd3f2e94ffa6a327eccda4637f3834b6ee954d5" translate="yes" xml:space="preserve">
          <source>Register the manager entity (=user) responsible for specific agent(s).</source>
          <target state="translated">注册负责特定代理的管理实体(=用户)。</target>
        </trans-unit>
        <trans-unit id="6cc246aaee03583a1b67072b099abeb8fb79e782" translate="yes" xml:space="preserve">
          <source>Register the monitored manager entity (=user) responsible for specific agent(s).</source>
          <target state="translated">注册负责特定代理的被监控管理实体(=用户)。</target>
        </trans-unit>
        <trans-unit id="9061d41e371d4fedc0115d522b3c3789e7d55102" translate="yes" xml:space="preserve">
          <source>Register the subagent, process, handling part of the mib-tree.</source>
          <target state="translated">注册mib树的子代理、流程、处理部分。</target>
        </trans-unit>
        <trans-unit id="cfb9ebfdaecff168ceeaf8ecaef604259474208a" translate="yes" xml:space="preserve">
          <source>Register the user(s).</source>
          <target state="translated">注册用户。</target>
        </trans-unit>
        <trans-unit id="1845a68e796020a1048d95263bf795b90fc9c9e6" translate="yes" xml:space="preserve">
          <source>Registers a name in &lt;code&gt;global&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;global&lt;/code&gt; 中注册一个名称。</target>
        </trans-unit>
        <trans-unit id="34b7a3701f7f578b66d40dc493d201623ead9205" translate="yes" xml:space="preserve">
          <source>Registers a notification filter.</source>
          <target state="translated">注册一个通知过滤器。</target>
        </trans-unit>
        <trans-unit id="067b57c37c89870a838e4c3a029c8848eae5cb13" translate="yes" xml:space="preserve">
          <source>Registers a sub-agent under a sub-tree of another agent.</source>
          <target state="translated">在另一个代理的子树下注册一个子代理。</target>
        </trans-unit>
        <trans-unit id="2179f43e0837bc4378d035e264feccd782f007ff" translate="yes" xml:space="preserve">
          <source>Registers an unary fun that is called if &lt;code&gt;beam_lib&lt;/code&gt; must read an &lt;code&gt;debug_info&lt;/code&gt; chunk that has been encrypted. The fun is held in a process that is started by the function.</source>
          <target state="translated">如果注册的是被称为一元乐趣 &lt;code&gt;beam_lib&lt;/code&gt; 必须阅读的 &lt;code&gt;debug_info&lt;/code&gt; 已加密的块。乐趣被保存在由该功能启动的过程中。</target>
        </trans-unit>
        <trans-unit id="0dcd7f686b516b64b10f7fd221bfb77639b2541f" translate="yes" xml:space="preserve">
          <source>Registers the manager entity (=user) responsible for specific agent(s). Corresponds to making an entry in &lt;code&gt;users.conf&lt;/code&gt;.</source>
          <target state="translated">注册负责特定代理的管理者实体（=用户）。对应于在 &lt;code&gt;users.conf&lt;/code&gt; 中进行输入。</target>
        </trans-unit>
        <trans-unit id="282f350423b62ae0006f17688a3e8604714b46e5" translate="yes" xml:space="preserve">
          <source>Registers the node with &lt;code&gt;epmd&lt;/code&gt; and tells epmd what port will be used for the current node. It returns a creation number. This number is incremented on each register to help with identifying if a node is reconnecting to epmd.</source>
          <target state="translated">寄存器与节点 &lt;code&gt;epmd&lt;/code&gt; 并告诉EPMD哪个端口将用于当前节点。它返回一个创建编号。该数字在每个寄存器上递增，以帮助识别节点是否重新连接到epmd。</target>
        </trans-unit>
        <trans-unit id="74789ff4511238a502c97e8e4e6d4952c88a95ba" translate="yes" xml:space="preserve">
          <source>Registration of a callback module. When a file is to be transferred, its local filename is matched to the regular expressions of the registered callbacks. The first matching callback is used during the transfer. See &lt;code&gt;&lt;a href=&quot;#read_file-3&quot;&gt;read_file/3&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#write_file-3&quot;&gt;write_file/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">注册回调模块。当要传输文件时，其本地文件名与已注册的回调的正则表达式匹配。在传输过程中使用第一个匹配的回调。参见 &lt;code&gt;&lt;a href=&quot;#read_file-3&quot;&gt;read_file/3&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;#write_file-3&quot;&gt;write_file/3&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="731691a0705f5aaf0542053dc6a66d67a7a10393" translate="yes" xml:space="preserve">
          <source>Registration of global names</source>
          <target state="translated">全球名称的注册</target>
        </trans-unit>
        <trans-unit id="ab140354a34bd045ff52d42f722acc1c4ffada22" translate="yes" xml:space="preserve">
          <source>Regular Expressions</source>
          <target state="translated">正则表达式</target>
        </trans-unit>
        <trans-unit id="314870021208b673ff11034ad2c9468f72e2c31d" translate="yes" xml:space="preserve">
          <source>Regular expression matching all possible prompts for a specific target type. &lt;code&gt;regexp&lt;/code&gt; must not have any groups, that is, when matching, &lt;code&gt;re:run/3&lt;/code&gt; (in STDLIB) must return a list with one single element.</source>
          <target state="translated">正则表达式匹配特定目标类型的所有可能提示。 &lt;code&gt;regexp&lt;/code&gt; 不能有任何组，也就是说，匹配时， &lt;code&gt;re:run/3&lt;/code&gt; （在STDLIB中）必须返回一个包含单个元素的列表。</target>
        </trans-unit>
        <trans-unit id="47a56ab232ae123975ea9710e5fcf7b1f558f1c1" translate="yes" xml:space="preserve">
          <source>Regular expression matching functions for strings and binaries</source>
          <target state="translated">字符串和二进制的正则表达式匹配函数。</target>
        </trans-unit>
        <trans-unit id="203fb6152721f63268ed61bd1c4ea54b026fd773" translate="yes" xml:space="preserve">
          <source>Regular startup options are described in section &lt;code&gt;&lt;a href=&quot;#daemon_flags&quot;&gt;Regular Options&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">常规启动选项在&amp;ldquo; &lt;code&gt;&lt;a href=&quot;#daemon_flags&quot;&gt;Regular Options&lt;/a&gt;&lt;/code&gt; 部分中进行了描述。</target>
        </trans-unit>
        <trans-unit id="f62c81988a0243c7eee0e36486de9a38c2c37387" translate="yes" xml:space="preserve">
          <source>Regulates how many &lt;code&gt;disc_copies&lt;/code&gt; replicas that each fragment is to have. This property can explicitly be set at table creation. Default is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">调节每个片段要具有多少 &lt;code&gt;disc_copies&lt;/code&gt; 副本。可以在创建表时显式设置此属性。默认值为 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="30a8ba0420e7bdf4559176393019bd04c0fbe5e4" translate="yes" xml:space="preserve">
          <source>Regulates how many &lt;code&gt;disc_only_copies&lt;/code&gt; replicas that each fragment is to have. This property can explicitly be set at table creation. Defaults is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">调节每个片段要具有多少 &lt;code&gt;disc_only_copies&lt;/code&gt; 副本。可以在创建表时显式设置此属性。默认值为 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d5ace031434130fcf1ca2044f6c738d84c99c499" translate="yes" xml:space="preserve">
          <source>Regulates how many &lt;code&gt;ram_copies&lt;/code&gt; replicas that each fragment is to have. This property can explicitly be set at table creation. Defaults is &lt;code&gt;0&lt;/code&gt;, but if &lt;code&gt;n_disc_copies&lt;/code&gt; and &lt;code&gt;n_disc_only_copies&lt;/code&gt; also are &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;n_ram_copies&lt;/code&gt; defaults to &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">调节每个片段要具有多少个 &lt;code&gt;ram_copies&lt;/code&gt; 副本。可以在创建表时显式设置此属性。默认值为 &lt;code&gt;0&lt;/code&gt; ，但是如果 &lt;code&gt;n_disc_copies&lt;/code&gt; 和 &lt;code&gt;n_disc_only_copies&lt;/code&gt; 也为 &lt;code&gt;0&lt;/code&gt; ，则 &lt;code&gt;n_ram_copies&lt;/code&gt; 默认为 &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="13bed85e379f26741bf756020202c97a912d20f5" translate="yes" xml:space="preserve">
          <source>Rejang</source>
          <target state="translated">Rejang</target>
        </trans-unit>
        <trans-unit id="caa53feb7f3da187483d6f1241ee4328c1297f25" translate="yes" xml:space="preserve">
          <source>Related Documents</source>
          <target state="translated">相关文件</target>
        </trans-unit>
        <trans-unit id="a534f1b763c40f42ca56d5b3ac62f8426b11f10e" translate="yes" xml:space="preserve">
          <source>Relational operators: &amp;gt;, &amp;gt;=, &amp;lt;, =&amp;lt;, =:=, ==, =/=, /=</source>
          <target state="translated">关系运算符：&amp;gt;，&amp;gt; =，&amp;lt;，= &amp;lt;，=：=，==，= / =，/ =</target>
        </trans-unit>
        <trans-unit id="b4d1ac06f9ff5455701be2b5477a539436883381" translate="yes" xml:space="preserve">
          <source>Relations as defined above (as sets of ordered pairs) are from now on referred to as &lt;strong id=&quot;binary_relation&quot;&gt;binary relations&lt;/strong&gt;.</source>
          <target state="translated">上面定义的关系（作为有序对的集合）从现在开始被称为&lt;strong id=&quot;binary_relation&quot;&gt;二进制关系&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="84d2940af626b029fa2ef82659d4a2d4cd5ce382" translate="yes" xml:space="preserve">
          <source>Relative maximum cache bad fit (in percent). A segment in the memory segment cache is not reused if its size exceeds the requested size with more than relative maximum cache bad fit percent of the requested size. Defaults to &lt;code&gt;20&lt;/code&gt;.</source>
          <target state="translated">相对最大高速缓存不合适（百分比）。如果内存段缓存中的某个段的大小超过了请求的大小，并且超过了所请求大小的相对最大缓存不适合百分比，则不会重用该段。默认为 &lt;code&gt;20&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4c153cc101fda20f14f84dfde0781fcad6804b45" translate="yes" xml:space="preserve">
          <source>Relative multiblock carrier move threshold (in percent). When a block located in a multiblock carrier is shrunk, the block is moved if the ratio of the size of the returned memory compared to the previous size is more than this threshold, otherwise the block is shrunk at the current location.</source>
          <target state="translated">相对多块载体移动阈值(单位:%)。当位于多块载体中的块被缩小时,如果返回的内存大小与之前的大小之比大于此阈值,则该块被移动,否则该块在当前位置被缩小。</target>
        </trans-unit>
        <trans-unit id="79bd0bd84b449b2094f3b7b77828c840f0397c79" translate="yes" xml:space="preserve">
          <source>Relative singleblock carrier move threshold (in percent). When a block located in a singleblock carrier is shrunk to a size smaller than the value of parameter &lt;code&gt;&lt;a href=&quot;#M_sbct&quot;&gt;sbct&lt;/a&gt;&lt;/code&gt;, the block is left unchanged in the singleblock carrier if the ratio of unused memory is less than this threshold, otherwise it is moved into a multiblock carrier.</source>
          <target state="translated">相对单个块载波移动阈值（以百分比为单位）。当位于单块载体中的块缩小到小于参数 &lt;code&gt;&lt;a href=&quot;#M_sbct&quot;&gt;sbct&lt;/a&gt;&lt;/code&gt; 的值时，如果未使用内存的比率小于此阈值，则该块在单块载体中保持不变，否则将其移入多块载体。</target>
        </trans-unit>
        <trans-unit id="71e2887d05759469568d7ab87cf6c068541efe99" translate="yes" xml:space="preserve">
          <source>Relative singleblock carrier shrink threshold (in percent). When a block located in an &lt;code&gt;mseg_alloc&lt;/code&gt; singleblock carrier is shrunk, the carrier is left unchanged if the ratio of unused memory is less than this threshold, otherwise the carrier is shrunk. See also &lt;code&gt;&lt;a href=&quot;#M_asbcst&quot;&gt;asbcst&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">相对单个块载波收缩阈值（以百分比为单位）。当缩小 &lt;code&gt;mseg_alloc&lt;/code&gt; 单个块载体中的一个块时，如果未使用内存的比率小于此阈值，则该载体将保持不变，否则该载体将被缩小。另请参见 &lt;code&gt;&lt;a href=&quot;#M_asbcst&quot;&gt;asbcst&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b5a923017f941086cdc19675bb6e7e66bf98f618" translate="yes" xml:space="preserve">
          <source>Relaxed command checking can also be enabled by setting environment variable &lt;code&gt;ERL_EPMD_RELAXED_COMMAND_CHECK&lt;/code&gt; before starting &lt;code&gt;epmd&lt;/code&gt;.</source>
          <target state="translated">还可以通过在启动 &lt;code&gt;epmd&lt;/code&gt; 之前设置环境变量 &lt;code&gt;ERL_EPMD_RELAXED_COMMAND_CHECK&lt;/code&gt; 来启用宽松的命令检查。</target>
        </trans-unit>
        <trans-unit id="36f808de3af1211921e144126704f0ebe1a620f6" translate="yes" xml:space="preserve">
          <source>Relay Agents</source>
          <target state="translated">中继代理</target>
        </trans-unit>
        <trans-unit id="2434cb2c3792d5ccccc15c76f01d0a9de58fc0fe" translate="yes" xml:space="preserve">
          <source>Relaying and Proxying Answers</source>
          <target state="translated">中继和代理答案</target>
        </trans-unit>
        <trans-unit id="e4472f3c80aefb8e7db82dc13af52546d928899f" translate="yes" xml:space="preserve">
          <source>Relaying and Proxying Requests</source>
          <target state="translated">中继和代理请求</target>
        </trans-unit>
        <trans-unit id="b25d7bda466685a6a4e753a794a4ba838c55e906" translate="yes" xml:space="preserve">
          <source>Release ::= Atom</source>
          <target state="translated">发布 ::=Atom</target>
        </trans-unit>
        <trans-unit id="d7bf8b26bb971b25e39e96502911b730591e9714" translate="yes" xml:space="preserve">
          <source>Release Edges. All release calls.</source>
          <target state="translated">释放边缘。所有放行电话。</target>
        </trans-unit>
        <trans-unit id="53329aa187df3daa8df74673348c87bd410e49de" translate="yes" xml:space="preserve">
          <source>Release Handling Aspects</source>
          <target state="translated">释放处理方面</target>
        </trans-unit>
        <trans-unit id="c8f0ee303aef9679a671711f9888ff6b9ffe13dd" translate="yes" xml:space="preserve">
          <source>Release Handling Workflow</source>
          <target state="translated">发布处理工作流程</target>
        </trans-unit>
        <trans-unit id="12b5679ebc6469749dadfd2078344f69e5ead4b1" translate="yes" xml:space="preserve">
          <source>Release candidates have an &lt;code&gt;-rc&amp;lt;N&amp;gt;&lt;/code&gt; suffix. The suffix &lt;code&gt;-rc0&lt;/code&gt; is used during development up to the first release candidate.</source>
          <target state="translated">候选发行版的后缀为 &lt;code&gt;-rc&amp;lt;N&amp;gt;&lt;/code&gt; 。后缀 &lt;code&gt;-rc0&lt;/code&gt; 在开发过程中一直使用到第一个发行候选版本。</target>
        </trans-unit>
        <trans-unit id="8a79a5a211e63659b6cf5b43de9d0eefd76a85f5" translate="yes" xml:space="preserve">
          <source>Release code write permission and return from &lt;code&gt;trace_pattern&lt;/code&gt;.</source>
          <target state="translated">释放代码写许可权，并从 &lt;code&gt;trace_pattern&lt;/code&gt; 返回。</target>
        </trans-unit>
        <trans-unit id="d77b5c204252acaaec43d623048d2075abad904a" translate="yes" xml:space="preserve">
          <source>Release handling</source>
          <target state="translated">释放处理</target>
        </trans-unit>
        <trans-unit id="076bab209366a52c80009dd116377b92396f787e" translate="yes" xml:space="preserve">
          <source>Release handling relies on this assumption. When installing a new release version, the new &lt;code&gt;sys.config&lt;/code&gt; is read and used to update the application configurations.</source>
          <target state="translated">发布处理依赖于此假设。安装新发行版时，将读取新的 &lt;code&gt;sys.config&lt;/code&gt; 并将其用于更新应用程序配置。</target>
        </trans-unit>
        <trans-unit id="7949ab7905efd94b32946cabca1a8a77f563a091" translate="yes" xml:space="preserve">
          <source>Release name.</source>
          <target state="translated">发行名称:</target>
        </trans-unit>
        <trans-unit id="3ccc1e080be82cc836d31609c3948421780b08c1" translate="yes" xml:space="preserve">
          <source>Release resource file</source>
          <target state="translated">释放资源文件</target>
        </trans-unit>
        <trans-unit id="d34f3018803f4c680fc3638d635bd0def6f5ab72" translate="yes" xml:space="preserve">
          <source>Release specific configuration. Each release maps to a &lt;code&gt;rel&lt;/code&gt;, &lt;code&gt;script&lt;/code&gt; and &lt;code&gt;boot&lt;/code&gt; file. See the module &lt;code&gt;systools&lt;/code&gt; for more info about the details. Each release has a name, a version and a set of applications with a few release specific parameters such as type and included applications.</source>
          <target state="translated">发布特定的配置。每个发行版都映射到 &lt;code&gt;rel&lt;/code&gt; ， &lt;code&gt;script&lt;/code&gt; 和 &lt;code&gt;boot&lt;/code&gt; 文件。有关详细信息，请参见模块 &lt;code&gt;systools&lt;/code&gt; 。每个发行版都有一个名称，一个版本和一组应用程序，其中包含一些特定于发行版的参数，例如类型和所包含的应用程序。</target>
        </trans-unit>
        <trans-unit id="9f05c6d212b8cb4e672ff57138d795de8491791f" translate="yes" xml:space="preserve">
          <source>Release the code write permission allowing other processes to stage new code.</source>
          <target state="translated">释放代码写入权限,允许其他进程发布新代码。</target>
        </trans-unit>
        <trans-unit id="09c97862a62c2fa6a793cf11c297f8d6b788b549" translate="yes" xml:space="preserve">
          <source>Release upgrade file</source>
          <target state="translated">发布升级文件</target>
        </trans-unit>
        <trans-unit id="0fe65a88b4e14f014e0b3c78603bddcf72898de3" translate="yes" xml:space="preserve">
          <source>Release upgrade instructions are interpreted by the release handler when an upgrade or downgrade is made. For more information about release handling, see &lt;code&gt;OTP Design Principles&lt;/code&gt; in &lt;strong&gt;System Documentation&lt;/strong&gt;.</source>
          <target state="translated">进行升级或降级时，版本处理程序会解释版本升级说明。有关发布处理的更多信息，请参见 &lt;code&gt;OTP Design Principles&lt;/code&gt; &lt;strong&gt;系统文档&lt;/strong&gt;》中的&amp;ldquo; OTP设计原则&lt;strong&gt;&amp;rdquo;&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="369560c15d5e85e475c6b562995f9fcd49fd567b" translate="yes" xml:space="preserve">
          <source>Release version.</source>
          <target state="translated">发行版本:</target>
        </trans-unit>
        <trans-unit id="8fa41d59c259d95cfaded10953d5a2f8e0b38bb4" translate="yes" xml:space="preserve">
          <source>Releases</source>
          <target state="translated">Releases</target>
        </trans-unit>
        <trans-unit id="548d3054919203bd183a1ded8c8d31824834578d" translate="yes" xml:space="preserve">
          <source>Releases a binary obtained from &lt;code&gt;&lt;a href=&quot;#enif_alloc_binary&quot;&gt; enif_alloc_binary&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">释放从 &lt;code&gt;&lt;a href=&quot;#enif_alloc_binary&quot;&gt; enif_alloc_binary&lt;/a&gt;&lt;/code&gt; 获得的二进制文件。</target>
        </trans-unit>
        <trans-unit id="dfeb990703a2c588b44af2cd26546ad311c6ab1a" translate="yes" xml:space="preserve">
          <source>Releases a binary obtained from &lt;code&gt;&lt;a href=&quot;#enif_alloc_binary&quot;&gt;enif_alloc_binary&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">释放从 &lt;code&gt;&lt;a href=&quot;#enif_alloc_binary&quot;&gt;enif_alloc_binary&lt;/a&gt;&lt;/code&gt; 获得的二进制文件。</target>
        </trans-unit>
        <trans-unit id="4e281e0f826facd98ecceebe9523eb2ae766b4f8" translate="yes" xml:space="preserve">
          <source>Releases up to and including Erlang/OTP R10 did not check if the process was already registered. The global name table could therefore become inconsistent. The old (buggy) behavior can be chosen by giving the Kernel application variable &lt;code&gt;global_multi_name_action&lt;/code&gt; the value &lt;code&gt;allow&lt;/code&gt;.</source>
          <target state="translated">直到并包括Erlang / OTP R10的发行版都没有检查该进程是否已经注册。因此，全局名称表可能会变得不一致。可以通过将内核应用程序变量 &lt;code&gt;global_multi_name_action&lt;/code&gt; 的值设置为 &lt;code&gt;allow&lt;/code&gt; 来选择旧的（沼泽）行为。</target>
        </trans-unit>
        <trans-unit id="c581dab1907a3bfee043dac2fd31f1599d1e2e43" translate="yes" xml:space="preserve">
          <source>Releases.</source>
          <target state="translated">Releases.</target>
        </trans-unit>
        <trans-unit id="64d679813f9766d62d5576b1bf93d3d3f437f20e" translate="yes" xml:space="preserve">
          <source>Releasing the Erlang Shell</source>
          <target state="translated">发布Erlang Shell</target>
        </trans-unit>
        <trans-unit id="3e5adc00a3e13272f013a6c83b211713760aa4e1" translate="yes" xml:space="preserve">
          <source>Relevant manual pages are the following:</source>
          <target state="translated">相关手册页面如下:</target>
        </trans-unit>
        <trans-unit id="2df0b3f17846bac2fbdbfa13c6c4f8a9a09ca29d" translate="yes" xml:space="preserve">
          <source>Reload the configuration without restarting the server:</source>
          <target state="translated">在不重新启动服务器的情况下重新加载配置。</target>
        </trans-unit>
        <trans-unit id="892b893ae67558c733d183c0cf9bfa2f667f6b56" translate="yes" xml:space="preserve">
          <source>Reloads all currently loaded modules that have changed on disk (see &lt;code&gt;mm()&lt;/code&gt;). Returns the list of results from calling &lt;code&gt;l(M)&lt;/code&gt; for each such &lt;code&gt;M&lt;/code&gt;.</source>
          <target state="translated">重新加载磁盘上所有已更改的当前已加载模块（请参见 &lt;code&gt;mm()&lt;/code&gt; ）。返回针对每个这样的 &lt;code&gt;M&lt;/code&gt; 调用 &lt;code&gt;l(M)&lt;/code&gt; 的结果列表。</target>
        </trans-unit>
        <trans-unit id="a88146e081b7ea26a305d5560641eb3b9b496437" translate="yes" xml:space="preserve">
          <source>Reloads configuration file containing specified configuration key.</source>
          <target state="translated">重新加载包含指定配置键的配置文件。</target>
        </trans-unit>
        <trans-unit id="5d2d1ade4f750a24b8183ab33233fd81e8d4a1d7" translate="yes" xml:space="preserve">
          <source>Reloads the HTTP server configuration without restarting the server. Incoming requests are answered with a temporary down message during the reload time.</source>
          <target state="translated">重载HTTP服务器配置而不重新启动服务器。在重载期间,传入的请求会以一个临时的down消息回应。</target>
        </trans-unit>
        <trans-unit id="c84319814d8e6fe83a0c1b622bebb2f8ee15395e" translate="yes" xml:space="preserve">
          <source>Reloads the driver named &lt;code&gt;Name&lt;/code&gt; from a possibly different &lt;code&gt;Path&lt;/code&gt; than previously used. This function is used in the code change &lt;code&gt;&lt;a href=&quot;#scenarios&quot;&gt;scenario&lt;/a&gt;&lt;/code&gt; described in the introduction.</source>
          <target state="translated">从可能与以前使用的 &lt;code&gt;Path&lt;/code&gt; 不同的路径重新加载名为 &lt;code&gt;Name&lt;/code&gt; 的驱动程序。简介中介绍的代码更改 &lt;code&gt;&lt;a href=&quot;#scenarios&quot;&gt;scenario&lt;/a&gt;&lt;/code&gt; 中使用了此功能。</target>
        </trans-unit>
        <trans-unit id="784e31d4f3c0cba2e7db35d731e55aca1c1fad9d" translate="yes" xml:space="preserve">
          <source>Reltool is a release management tool. It analyses a given Erlang/OTP installation and determines various dependencies between applications. The &lt;code&gt;graphical&lt;/code&gt; frontend depicts the dependencies and enables interactive customization of a target system. The backend provides a &lt;code&gt;batch&lt;/code&gt; interface for generation of customized target systems.</source>
          <target state="translated">Reltool是一个发布管理工具。它分析给定的Erlang / OTP安装并确定应用程序之间的各种依赖关系。该 &lt;code&gt;graphical&lt;/code&gt; 前端描绘的依赖，使目标系统的交互定制。后端提供了用于生成定制目标系统的 &lt;code&gt;batch&lt;/code&gt; 接口。</target>
        </trans-unit>
        <trans-unit id="7f2e3fa39fb833cfad927a914aaf178d914c55ed" translate="yes" xml:space="preserve">
          <source>Remaining options are any accepted by &lt;code&gt;gen_sctp:open/1&lt;/code&gt;, with the exception of options &lt;code&gt;mode&lt;/code&gt;, &lt;code&gt;binary&lt;/code&gt;, &lt;code&gt;list&lt;/code&gt;, &lt;code&gt;active&lt;/code&gt; and &lt;code&gt;sctp_events&lt;/code&gt;. Note that options &lt;code&gt;ip&lt;/code&gt; and &lt;code&gt;port&lt;/code&gt; specify the local address and port respectively.</source>
          <target state="translated">其余选项是 &lt;code&gt;gen_sctp:open/1&lt;/code&gt; 可接受的任何选项，但选项 &lt;code&gt;mode&lt;/code&gt; ， &lt;code&gt;binary&lt;/code&gt; ， &lt;code&gt;list&lt;/code&gt; ， &lt;code&gt;active&lt;/code&gt; 和 &lt;code&gt;sctp_events&lt;/code&gt; 除外。请注意，选项 &lt;code&gt;ip&lt;/code&gt; 和 &lt;code&gt;port&lt;/code&gt; 分别指定本地地址和端口。</target>
        </trans-unit>
        <trans-unit id="815293be363db289b37d927caa1f5d8eea88f49b" translate="yes" xml:space="preserve">
          <source>Remaining options are any accepted by &lt;code&gt;ssl:connect/3&lt;/code&gt; or &lt;code&gt;gen_tcp:connect/3&lt;/code&gt; for a connecting transport, or &lt;code&gt;ssl:listen/2&lt;/code&gt; or &lt;code&gt;gen_tcp:listen/2&lt;/code&gt; for a listening transport, depending on whether or not &lt;code&gt;{ssl_options, true}&lt;/code&gt; has been specified. Options &lt;code&gt;binary&lt;/code&gt;, &lt;code&gt;packet&lt;/code&gt; and &lt;code&gt;active&lt;/code&gt; cannot be specified. Also, option &lt;code&gt;port&lt;/code&gt; can be specified for a listening transport to specify the local listening port, the default being the standardized 3868. Note that the option &lt;code&gt;ip&lt;/code&gt; specifies the local address.</source>
          <target state="translated">剩余选项是 &lt;code&gt;ssl:connect/3&lt;/code&gt; 或 &lt;code&gt;gen_tcp:connect/3&lt;/code&gt; 接受连接传输的任何选项，或 &lt;code&gt;ssl:listen/2&lt;/code&gt; 或 &lt;code&gt;gen_tcp:listen/2&lt;/code&gt; 接受侦听的传输的选项，具体取决于 &lt;code&gt;{ssl_options, true}&lt;/code&gt; 是否具有被指定。不能指定 &lt;code&gt;binary&lt;/code&gt; ， &lt;code&gt;packet&lt;/code&gt; 和 &lt;code&gt;active&lt;/code&gt; 选项。此外，可以为侦听传输指定选项 &lt;code&gt;port&lt;/code&gt; 以指定本地侦听端口，默认端口是标准化的3868。请注意，选项 &lt;code&gt;ip&lt;/code&gt; 指定了本地地址。</target>
        </trans-unit>
        <trans-unit id="66cf83c455fd1bd0a82aed4f3cb5675602a3ab47" translate="yes" xml:space="preserve">
          <source>Remember that file trace ports buffer the data by default. If the node crashes, trace messages are not flushed to the binary log. If the risk of failure is high, it can be a good idea to flush the buffers every now and then automatically. Passing &lt;code&gt;{flush, MSec}&lt;/code&gt; as an option of &lt;code&gt;ttb:tracer/2&lt;/code&gt; flushes all buffers every &lt;code&gt;MSec&lt;/code&gt; millisecond.</source>
          <target state="translated">请记住，文件跟踪端口默认情况下会缓冲数据。如果该节点崩溃，则跟踪消息不会刷新到二进制日志中。如果失败的风险很高，那么最好不时自动刷新缓冲区。通过将 &lt;code&gt;{flush, MSec}&lt;/code&gt; 作为 &lt;code&gt;ttb:tracer/2&lt;/code&gt; 的选项来传递，每毫秒 &lt;code&gt;MSec&lt;/code&gt; 会刷新所有缓冲区。</target>
        </trans-unit>
        <trans-unit id="26dfb878780f2523c83b1d853967893e8ff04168" translate="yes" xml:space="preserve">
          <source>Remember that the | operator can be used to get the head of a list:</source>
          <target state="translated">请记住,|操作符可以用来获取一个列表的头部。</target>
        </trans-unit>
        <trans-unit id="389b0b7962fe40649a28790b524a030d6d8fe385" translate="yes" xml:space="preserve">
          <source>Remember that:</source>
          <target state="translated">记住这一点。</target>
        </trans-unit>
        <trans-unit id="686a7bcf3ee9d003c423a149b032762a3856b5ca" translate="yes" xml:space="preserve">
          <source>Remember to free &lt;code&gt;pid&lt;/code&gt; later with &lt;code&gt;&lt;a href=&quot;ei#ei_x_free&quot;&gt; ei_x_free&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">请记住，稍后使用 &lt;code&gt;&lt;a href=&quot;ei#ei_x_free&quot;&gt; ei_x_free&lt;/a&gt;&lt;/code&gt; 释放 &lt;code&gt;pid&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="78a5feb713d2557dfe3eacd16a70807ff5ae0bd3" translate="yes" xml:space="preserve">
          <source>Remember to free &lt;code&gt;pid&lt;/code&gt; later with &lt;code&gt;&lt;a href=&quot;erl_malloc#erl_free_term&quot;&gt;erl_malloc:erl_free_term&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">请记住，稍后使用 &lt;code&gt;&lt;a href=&quot;erl_malloc#erl_free_term&quot;&gt;erl_malloc:erl_free_term&lt;/a&gt;&lt;/code&gt; 释放 &lt;code&gt;pid&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eca0d691ee9c6774e0eb8b51cbe73481e15cdf17" translate="yes" xml:space="preserve">
          <source>Remote Procedure Call services.</source>
          <target state="translated">远程程序调用服务。</target>
        </trans-unit>
        <trans-unit id="98ef7c5ca9880fe05d2a7209c1987cab4b52873f" translate="yes" xml:space="preserve">
          <source>Remote hostname.</source>
          <target state="translated">远程主机名:</target>
        </trans-unit>
        <trans-unit id="bcfceb272c786094ee4dfb353770550b1fbd9c5f" translate="yes" xml:space="preserve">
          <source>Remote procedure calls</source>
          <target state="translated">远程程序调用</target>
        </trans-unit>
        <trans-unit id="6c62ad2fef650defef629666029a983bdea55bce" translate="yes" xml:space="preserve">
          <source>Remote type, that is, type defined in, and exported by, other modules; more about this soon.</source>
          <target state="translated">远程类型,即在其他模块中定义并由其他模块导出的类型;关于这一点,很快会有更多的介绍。</target>
        </trans-unit>
        <trans-unit id="f3d2fdb2a1bafef3bfef448975f7ee50436cc38f" translate="yes" xml:space="preserve">
          <source>Remote.</source>
          <target state="translated">Remote.</target>
        </trans-unit>
        <trans-unit id="3a07d5691e90ca1626bc3af406339c26bbc92230" translate="yes" xml:space="preserve">
          <source>Remove (rm) one or more algorithms from &lt;code&gt;A&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;A&lt;/code&gt; 删除（rm）一种或多种算法。</target>
        </trans-unit>
        <trans-unit id="a1b19b04489ffa84280a335fd561b33e3df1e32b" translate="yes" xml:space="preserve">
          <source>Remove all edges of &lt;code&gt;G&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#emanate&quot;&gt;emanating&lt;/a&gt;&lt;/code&gt; from v[i] and &lt;code&gt;&lt;a href=&quot;#incident&quot;&gt;incident&lt;/a&gt;&lt;/code&gt; to v[i+1] for 1 &amp;lt;= i &amp;lt; k (including multiple edges).</source>
          <target state="translated">移除从v [i] &lt;code&gt;&lt;a href=&quot;#emanate&quot;&gt;emanating&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#incident&quot;&gt;incident&lt;/a&gt;&lt;/code&gt; v [i + 1]且1 &amp;lt;= i &amp;lt;k 的 &lt;code&gt;G&lt;/code&gt; 的所有边（包括多个边）。</target>
        </trans-unit>
        <trans-unit id="aa1bc0e635cc0c09da1d0e321cb9f66931a8a682" translate="yes" xml:space="preserve">
          <source>Remove call count breakpoints from the matching functions that has call count breakpoints.</source>
          <target state="translated">从有调用计数断点的匹配函数中删除调用计数断点。</target>
        </trans-unit>
        <trans-unit id="1c94e4f466ef58b151007050c8d81df3b4baf221" translate="yes" xml:space="preserve">
          <source>Remove module specific log settings. After this, the primary log level is used for all modules.</source>
          <target state="translated">删除模块特定的日志设置。此后,所有模块都使用主日志级别。</target>
        </trans-unit>
        <trans-unit id="1752d32ef2409c2c524b1db337059b374545e2f1" translate="yes" xml:space="preserve">
          <source>Remove module specific log settings. After this, the primary log level is used for the specified modules.</source>
          <target state="translated">删除模块特定的日志设置。此后,主日志级别将用于指定模块。</target>
        </trans-unit>
        <trans-unit id="2de54fa41d973e8645ea65252a458390fa9b8e13" translate="yes" xml:space="preserve">
          <source>Remove previously added transports.</source>
          <target state="translated">删除之前添加的运输工具。</target>
        </trans-unit>
        <trans-unit id="de2212deaf408786494f5a6437f6c7dfb1de7a09" translate="yes" xml:space="preserve">
          <source>Remove the &lt;code&gt;'silent'&lt;/code&gt; trace flag when the first argument is &lt;code&gt;'verbose'&lt;/code&gt;, and add it when it is &lt;code&gt;'silent':&lt;/code&gt;</source>
          <target state="translated">当第一个参数为 &lt;code&gt;'verbose'&lt;/code&gt; 时删除 &lt;code&gt;'silent'&lt;/code&gt; 跟踪标志，并在其为 &lt;code&gt;'silent':&lt;/code&gt; 时添加它：</target>
        </trans-unit>
        <trans-unit id="e7a7e6b21af3f135b3cdacba8a5341aa629ec7d5" translate="yes" xml:space="preserve">
          <source>Remove the &lt;code&gt;TARGET_CPU=amd64&lt;/code&gt; for 32bit build.</source>
          <target state="translated">删除 &lt;code&gt;TARGET_CPU=amd64&lt;/code&gt; 进行32位构建。</target>
        </trans-unit>
        <trans-unit id="33db45d930f4a1d52bbae95e5aca25fe6daa18fa" translate="yes" xml:space="preserve">
          <source>Remove the engine from OpenSSL's internal list.</source>
          <target state="translated">从OpenSSL的内部列表中删除引擎。</target>
        </trans-unit>
        <trans-unit id="8c1a0c637d49a4d7569668331ee1b3088eb73750" translate="yes" xml:space="preserve">
          <source>Remove the filter identified by &lt;code&gt;FilterId&lt;/code&gt; from the handler identified by &lt;code&gt;HandlerId&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;HandlerId&lt;/code&gt; 标识的处理程序中删除由 &lt;code&gt;FilterId&lt;/code&gt; 标识的过滤器。</target>
        </trans-unit>
        <trans-unit id="1e2a9bd7f431a82ca58a25b840ca86d577fc69f6" translate="yes" xml:space="preserve">
          <source>Remove the handler identified by &lt;code&gt;HandlerId&lt;/code&gt;.</source>
          <target state="translated">删除由 &lt;code&gt;HandlerId&lt;/code&gt; 标识的处理程序。</target>
        </trans-unit>
        <trans-unit id="270d63a2d4e284cb38a67b35a61f4d1b10185100" translate="yes" xml:space="preserve">
          <source>Remove the old version.</source>
          <target state="translated">删除旧版本。</target>
        </trans-unit>
        <trans-unit id="a1bc432335254977c2eff9f225b9bfe4b9346eb9" translate="yes" xml:space="preserve">
          <source>Remove the primary filter identified by &lt;code&gt;FilterId&lt;/code&gt; from Logger.</source>
          <target state="translated">从Logger中删除由 &lt;code&gt;FilterId&lt;/code&gt; 标识的主过滤器。</target>
        </trans-unit>
        <trans-unit id="9ab44531e296112b4f85de0885693c0cd1e921a5" translate="yes" xml:space="preserve">
          <source>Removes (one) &lt;code&gt;{_, MonitorRef, _, _, _}&lt;/code&gt; message, if there is one, from the caller message queue after monitoring has been stopped.</source>
          <target state="translated">停止监视后，从呼叫者消息队列中删除（一个） &lt;code&gt;{_, MonitorRef, _, _, _}&lt;/code&gt; 消息（如果有）。</target>
        </trans-unit>
        <trans-unit id="2af136900a1f59bad5aae8293e0b480336d75d7b" translate="yes" xml:space="preserve">
          <source>Removes &lt;code&gt;&lt;a href=&quot;#analyzed_module&quot;&gt;analyzed modules&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#module_data&quot;&gt;module data&lt;/a&gt;&lt;/code&gt; from an &lt;code&gt;&lt;a href=&quot;#xref_server&quot;&gt;Xref server&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">从外部 &lt;code&gt;&lt;a href=&quot;#xref_server&quot;&gt;Xref server&lt;/a&gt;&lt;/code&gt; 删除 &lt;code&gt;&lt;a href=&quot;#analyzed_module&quot;&gt;analyzed modules&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;#module_data&quot;&gt;module data&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="03f171efe53cf0618e1bae4161bc9cdd31be0be5" translate="yes" xml:space="preserve">
          <source>Removes a driver entry &lt;code&gt;de&lt;/code&gt; previously added with &lt;code&gt;&lt;a href=&quot;#add_driver_entry&quot;&gt; add_driver_entry&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">删除一个驱动程序的入口 &lt;code&gt;de&lt;/code&gt; 前面加 &lt;code&gt;&lt;a href=&quot;#add_driver_entry&quot;&gt; add_driver_entry&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6c9c0f67a25257aba96321b301fce1c1d0e01aea" translate="yes" xml:space="preserve">
          <source>Removes a driver entry &lt;code&gt;de&lt;/code&gt; previously added with &lt;code&gt;&lt;a href=&quot;#add_driver_entry&quot;&gt;add_driver_entry&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">删除一个驱动程序的入口 &lt;code&gt;de&lt;/code&gt; 前面加 &lt;code&gt;&lt;a href=&quot;#add_driver_entry&quot;&gt;add_driver_entry&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ef910fd5c7a07e6df5e2bcac95688a112adbf8b2" translate="yes" xml:space="preserve">
          <source>Removes a driver monitor in much the same way as &lt;code&gt;erlang:demonitor/1&lt;/code&gt; in ERTS does with process monitors. For details about how to create driver monitors, see &lt;code&gt;&lt;a href=&quot;#monitor-2&quot;&gt;monitor/2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#try_load-3&quot;&gt;try_load/3&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;#try_unload-2&quot;&gt;try_unload/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">删除驱动程序监视器的方式与ERTS中的 &lt;code&gt;erlang:demonitor/1&lt;/code&gt; 的过程监视器相同。有关如何创建驱动程序监视器的详细信息，请参见 &lt;code&gt;&lt;a href=&quot;#monitor-2&quot;&gt;monitor/2&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;#try_load-3&quot;&gt;try_load/3&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;#try_unload-2&quot;&gt;try_unload/2&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="469ccfe46e68680d711e0478f9486ba9db3e26c4" translate="yes" xml:space="preserve">
          <source>Removes a filename extension. &lt;code&gt;rootname/2&lt;/code&gt; works as &lt;code&gt;rootname/1&lt;/code&gt;, except that the extension is removed only if it is &lt;code&gt;Ext&lt;/code&gt;.</source>
          <target state="translated">删除文件扩展名。 &lt;code&gt;rootname/2&lt;/code&gt; 用作 &lt;code&gt;rootname/1&lt;/code&gt; ，除了扩展名只有 &lt;code&gt;Ext&lt;/code&gt; 才被删除。</target>
        </trans-unit>
        <trans-unit id="1b14b878159ba088a4ac36e06fe824879ef44159" translate="yes" xml:space="preserve">
          <source>Removes a reference to resource object &lt;code&gt;obj&lt;/code&gt; obtained from &lt;code&gt;&lt;a href=&quot;#enif_alloc_resource&quot;&gt; enif_alloc_resource&lt;/a&gt;&lt;/code&gt;. The resource object is destructed when the last reference is removed. Each call to &lt;code&gt;enif_release_resource&lt;/code&gt; must correspond to a previous call to &lt;code&gt;enif_alloc_resource&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#enif_keep_resource&quot;&gt; enif_keep_resource&lt;/a&gt;&lt;/code&gt;. References made by &lt;code&gt;&lt;a href=&quot;#enif_make_resource&quot;&gt; enif_make_resource&lt;/a&gt;&lt;/code&gt; can only be removed by the garbage collector.</source>
          <target state="translated">删除对从 &lt;code&gt;&lt;a href=&quot;#enif_alloc_resource&quot;&gt; enif_alloc_resource&lt;/a&gt;&lt;/code&gt; 获得的资源对象 &lt;code&gt;obj&lt;/code&gt; 的引用。删除最后一个引用后，资源对象将被破坏。每个对 &lt;code&gt;enif_release_resource&lt;/code&gt; 的调用必须对应于先前对 &lt;code&gt;enif_alloc_resource&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;#enif_keep_resource&quot;&gt; enif_keep_resource&lt;/a&gt;&lt;/code&gt; 的调用。 &lt;code&gt;&lt;a href=&quot;#enif_make_resource&quot;&gt; enif_make_resource&lt;/a&gt;&lt;/code&gt; 所做的引用只能由垃圾收集器删除。</target>
        </trans-unit>
        <trans-unit id="cfdbbaeba26ada922495e3b365aa4160395c9fe4" translate="yes" xml:space="preserve">
          <source>Removes a reference to resource object &lt;code&gt;obj&lt;/code&gt; obtained from &lt;code&gt;&lt;a href=&quot;#enif_alloc_resource&quot;&gt;enif_alloc_resource&lt;/a&gt;&lt;/code&gt;. The resource object is destructed when the last reference is removed. Each call to &lt;code&gt;enif_release_resource&lt;/code&gt; must correspond to a previous call to &lt;code&gt;enif_alloc_resource&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#enif_keep_resource&quot;&gt;enif_keep_resource&lt;/a&gt;&lt;/code&gt;. References made by &lt;code&gt;&lt;a href=&quot;#enif_make_resource&quot;&gt;enif_make_resource&lt;/a&gt;&lt;/code&gt; can only be removed by the garbage collector.</source>
          <target state="translated">删除对从 &lt;code&gt;&lt;a href=&quot;#enif_alloc_resource&quot;&gt;enif_alloc_resource&lt;/a&gt;&lt;/code&gt; 获得的资源对象 &lt;code&gt;obj&lt;/code&gt; 的引用。删除最后一个引用后，资源对象将被破坏。每个对 &lt;code&gt;enif_release_resource&lt;/code&gt; 的调用必须对应于先前对 &lt;code&gt;enif_alloc_resource&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;#enif_keep_resource&quot;&gt;enif_keep_resource&lt;/a&gt;&lt;/code&gt; 的调用。 &lt;code&gt;&lt;a href=&quot;#enif_make_resource&quot;&gt;enif_make_resource&lt;/a&gt;&lt;/code&gt; 所做的引用只能由垃圾收集器删除。</target>
        </trans-unit>
        <trans-unit id="f93eec43121b96bc7a270f3d88692f108331e875" translate="yes" xml:space="preserve">
          <source>Removes a release and its files from the system. The release must not be the permanent release. Removes only the files and directories not in use by another release.</source>
          <target state="translated">从系统中删除一个版本及其文件。该版本必须不是永久版本。只删除另一个版本不使用的文件和目录。</target>
        </trans-unit>
        <trans-unit id="69722c4296c8491884f2e4d612c28fd292392777" translate="yes" xml:space="preserve">
          <source>Removes all breakpoints.</source>
          <target state="translated">删除所有断点。</target>
        </trans-unit>
        <trans-unit id="ebf28b81a76f27b32b9e5da02e466fe49e99b342" translate="yes" xml:space="preserve">
          <source>Removes all chunks except those needed by the loader from BEAM files. In particular, the debug information (chunk &lt;code&gt;debug_info&lt;/code&gt; and &lt;code&gt;abstract_code&lt;/code&gt;) is removed. The returned list contains one element for each specified filename, in the same order as in &lt;code&gt;Files&lt;/code&gt;.</source>
          <target state="translated">从BEAM文件中删除除加载程序所需的块以外的所有块。特别是，将删除调试信息（块 &lt;code&gt;debug_info&lt;/code&gt; 和 &lt;code&gt;abstract_code&lt;/code&gt; ）。对于每个指定的文件名，返回的列表包含一个元素，其顺序与 &lt;code&gt;Files&lt;/code&gt; 中的顺序相同。</target>
        </trans-unit>
        <trans-unit id="69c09d3f76b01192e3e0cb5339b531159c96fb89" translate="yes" xml:space="preserve">
          <source>Removes all chunks except those needed by the loader from the BEAM files of a release. &lt;code&gt;Dir&lt;/code&gt; is to be the installation root directory. For example, the current OTP release can be stripped with the call &lt;code&gt;beam_lib:strip_release(code:root_dir())&lt;/code&gt;.</source>
          <target state="translated">从发行版的BEAM文件中除去加载程序所需的所有块。 &lt;code&gt;Dir&lt;/code&gt; 将是安装根目录。例如，可以通过调用 &lt;code&gt;beam_lib:strip_release(code:root_dir())&lt;/code&gt; 剥离当前的OTP版本。</target>
        </trans-unit>
        <trans-unit id="76f81f31ec9db31e5973babc943b80d8ca3f0ae3" translate="yes" xml:space="preserve">
          <source>Removes all chunks except those needed by the loader or passed in from BEAM files. In particular, the debug information (chunk &lt;code&gt;debug_info&lt;/code&gt; and &lt;code&gt;abstract_code&lt;/code&gt;) is removed. The returned list contains one element for each specified filename, in the same order as in &lt;code&gt;Files&lt;/code&gt;.</source>
          <target state="translated">除去加载程序需要的或从BEAM文件传入的所有块。特别是，将删除调试信息（块 &lt;code&gt;debug_info&lt;/code&gt; 和 &lt;code&gt;abstract_code&lt;/code&gt; ）。对于每个指定的文件名，返回的列表包含一个元素，其顺序与 &lt;code&gt;Files&lt;/code&gt; 中的顺序相同。</target>
        </trans-unit>
        <trans-unit id="bec531ee3dab090590303bb93e69b8d8eab0ec66" translate="yes" xml:space="preserve">
          <source>Removes all chunks except those needed by the loader or passed in from the BEAM files of a release. &lt;code&gt;Dir&lt;/code&gt; is to be the installation root directory. For example, the current OTP release can be stripped with the call &lt;code&gt;beam_lib:strip_release(code:root_dir())&lt;/code&gt;.</source>
          <target state="translated">除去加载程序需要的或从发行版的BEAM文件传入的所有块。 &lt;code&gt;Dir&lt;/code&gt; 将是安装根目录。例如，可以通过调用 &lt;code&gt;beam_lib:strip_release(code:root_dir())&lt;/code&gt; 剥离当前的OTP版本。</target>
        </trans-unit>
        <trans-unit id="add3b82363b2f3c866cf1469ae9b1cea4fb9834a" translate="yes" xml:space="preserve">
          <source>Removes all chunks from a BEAM file except those needed by the loader or passed in. In particular, the debug information (chunk &lt;code&gt;debug_info&lt;/code&gt; and &lt;code&gt;abstract_code&lt;/code&gt;) is removed.</source>
          <target state="translated">从BEAM文件中删除所有块，但装入程序需要或传入的块除外。尤其是，调试信息（块 &lt;code&gt;debug_info&lt;/code&gt; 和 &lt;code&gt;abstract_code&lt;/code&gt; ）也被删除。</target>
        </trans-unit>
        <trans-unit id="b653de0025fa2e1c9e18ccdf6499bb91a5318e88" translate="yes" xml:space="preserve">
          <source>Removes all chunks from a BEAM file except those needed by the loader. In particular, the debug information (chunk &lt;code&gt;debug_info&lt;/code&gt; and &lt;code&gt;abstract_code&lt;/code&gt;) is removed.</source>
          <target state="translated">从BEAM文件中删除除装载程序所需的所有块以外的所有块。特别是，将删除调试信息（块 &lt;code&gt;debug_info&lt;/code&gt; 和 &lt;code&gt;abstract_code&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="8e06a52291161535a71ec3cf6b4b53521525128d" translate="yes" xml:space="preserve">
          <source>Removes all comments from all nodes of a syntax tree. All other attributes (such as position information) remain unchanged. Standalone comments in form lists are removed; any other standalone comments are changed into null-comments (no text, no indentation).</source>
          <target state="translated">删除语法树所有节点的所有注释。所有其他属性(如位置信息)保持不变。删除表格列表中的独立注释;任何其他独立注释都将变为空注释(无文本,无缩进)。</target>
        </trans-unit>
        <trans-unit id="2ba013b61f6c343926311bc6cb40098be1f76e8e" translate="yes" xml:space="preserve">
          <source>Removes all empty parts of the result.</source>
          <target state="translated">删除结果中所有的空部分。</target>
        </trans-unit>
        <trans-unit id="423a342bd4a5da772f2ac8a4ddc5c196849871b4" translate="yes" xml:space="preserve">
          <source>Removes all items from a disk log. If argument &lt;code&gt;Head&lt;/code&gt; or &lt;code&gt;BHead&lt;/code&gt; is specified, this item is written first in the newly truncated log, otherwise the header given to &lt;code&gt;open/1&lt;/code&gt; is used. The header argument is used only once. Next time a wrap log file is opened, the header given to &lt;code&gt;open/1&lt;/code&gt; is used.</source>
          <target state="translated">从磁盘日志中删除所有项目。如果指定了参数 &lt;code&gt;Head&lt;/code&gt; 或 &lt;code&gt;BHead&lt;/code&gt; ，则此项目将首先写入新截断的日志中，否则将使用给 &lt;code&gt;open/1&lt;/code&gt; 的标头。标头参数仅使用一次。下次打开包装日志文件时，将使用指定给 &lt;code&gt;open/1&lt;/code&gt; 的标头。</target>
        </trans-unit>
        <trans-unit id="9124834eeba59cb5d4394905a7f8431b79dc8304" translate="yes" xml:space="preserve">
          <source>Removes all objects marked for deletion. When objects are deleted with &lt;code&gt;ei_reg_delete()&lt;/code&gt; they are not removed from the registry, only marked for later removal. On a later backup to &lt;code&gt;Mnesia&lt;/code&gt;, the objects can also be removed from the &lt;code&gt;Mnesia&lt;/code&gt; table. If you are not backing up to &lt;code&gt;Mnesia&lt;/code&gt;, you may wish to remove the objects manually with this function.</source>
          <target state="translated">删除所有标记为删除的对象。使用 &lt;code&gt;ei_reg_delete()&lt;/code&gt; 删除对象时，不会将它们从注册表中删除，而仅标记为以后删除。在以后备份到 &lt;code&gt;Mnesia&lt;/code&gt; 时，也可以从 &lt;code&gt;Mnesia&lt;/code&gt; 表中删除对象。如果您不备份到 &lt;code&gt;Mnesia&lt;/code&gt; ，则可能希望使用此功能手动删除对象。</target>
        </trans-unit>
        <trans-unit id="006c0542f30160a6d1b184407353efd9e067c6df" translate="yes" xml:space="preserve">
          <source>Removes all record definitions, then reads record definitions from the modules &lt;code&gt;shell_default&lt;/code&gt; and &lt;code&gt;user_default&lt;/code&gt; (if loaded). Returns the names of the records defined.</source>
          <target state="translated">删除所有记录定义，然后从 &lt;code&gt;shell_default&lt;/code&gt; 和 &lt;code&gt;user_default&lt;/code&gt; 模块（如果已加载）中读取记录定义。返回定义的记录的名称。</target>
        </trans-unit>
        <trans-unit id="5c21f9615f09252f2d8d49897680a589dc928737" translate="yes" xml:space="preserve">
          <source>Removes all variable bindings.</source>
          <target state="translated">移除所有变量绑定。</target>
        </trans-unit>
        <trans-unit id="0a4c4b594d16c7a2ef5704cbf29a757883867569" translate="yes" xml:space="preserve">
          <source>Removes an installed debug function from the process. &lt;code&gt;Func&lt;/code&gt; or &lt;code&gt;FuncId&lt;/code&gt; must be the same as previously installed.</source>
          <target state="translated">从进程中删除已安装的调试功能。 &lt;code&gt;Func&lt;/code&gt; 或 &lt;code&gt;FuncId&lt;/code&gt; 必须与以前安装的相同。</target>
        </trans-unit>
        <trans-unit id="2df2ad072e68f52d7ebb2bd3a6411521ff839dae" translate="yes" xml:space="preserve">
          <source>Removes anything before &lt;code&gt;SearchPattern&lt;/code&gt; in &lt;code&gt;String&lt;/code&gt; and returns the remainder of the string or &lt;code&gt;nomatch&lt;/code&gt; if &lt;code&gt;SearchPattern&lt;/code&gt; is not found. &lt;code&gt;Dir&lt;/code&gt;, which can be &lt;code&gt;leading&lt;/code&gt; or &lt;code&gt;trailing&lt;/code&gt;, indicates from which direction characters are to be searched.</source>
          <target state="translated">删除之前任何 &lt;code&gt;SearchPattern&lt;/code&gt; 的 &lt;code&gt;String&lt;/code&gt; ，返回的字符串或剩余 &lt;code&gt;nomatch&lt;/code&gt; 如果 &lt;code&gt;SearchPattern&lt;/code&gt; 没有找到。 &lt;code&gt;Dir&lt;/code&gt; 可以是 &lt;code&gt;leading&lt;/code&gt; 或 &lt;code&gt;trailing&lt;/code&gt; ，指示要从哪个方向搜索字符。</target>
        </trans-unit>
        <trans-unit id="c0c5aecc0b610cae928d0362a36410e9e33385d9" translate="yes" xml:space="preserve">
          <source>Removes applications and their modules and &lt;code&gt;&lt;a href=&quot;#module_data&quot;&gt;module data&lt;/a&gt;&lt;/code&gt; from an &lt;code&gt;&lt;a href=&quot;#xref_server&quot;&gt;Xref server&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">从外部 &lt;code&gt;&lt;a href=&quot;#xref_server&quot;&gt;Xref server&lt;/a&gt;&lt;/code&gt; 删除应用程序及其模块和 &lt;code&gt;&lt;a href=&quot;#module_data&quot;&gt;module data&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fa5b181b692c2ebda89d9eec6c2bc30aa063a1a2" translate="yes" xml:space="preserve">
          <source>Removes cipher suites if any of the filter functions returns false for any part of the cipher suite. If no filter function is supplied for some part the default behaviour regards it as if there was a filter function that returned true. For examples see &lt;code&gt; Customizing cipher suites &lt;/code&gt; Additionaly this function also filters the cipher suites to exclude cipher suites not supported by the cryptolib used by the OTP crypto application. That is calling ssl:filter_cipher_suites(Suites, []) will be equivalent to only applying the filters for cryptolib support.</source>
          <target state="translated">如果任何过滤器函数对密码套件的任何部分返回false，则删除密码套件。如果某部分未提供任何过滤器功能，则默认行为会将其视为好像有一个返回了true的过滤器功能一样。有关示例，请参见 &lt;code&gt; Customizing cipher suites &lt;/code&gt; 另外，此功能还会过滤密码套件，以排除OTP加密应用程序所使用的cryptolib不支持的密码套件。那就是调用ssl：filter_cipher_suites（Suites，[]）等效于仅将过滤器应用于cryptolib支持。</target>
        </trans-unit>
        <trans-unit id="d58329662a1a0da29049c8ec4fb23031b2a385a8" translate="yes" xml:space="preserve">
          <source>Removes cipher suites if any of the filter functions returns false for any part of the cipher suite. This function also calls default filter functions to make sure the cipher suites are supported by crypto. If no filter function is supplied for some part the default behaviour is fun(Algorithm) -&amp;gt; true.</source>
          <target state="translated">如果任何过滤器函数对密码套件的任何部分返回false，则删除密码套件。此函数还调用默认过滤器函数，以确保密码套件支持密码套件。如果某些部分未提供过滤器功能，则默认行为为fun（Algorithm）-&amp;gt; true。</target>
        </trans-unit>
        <trans-unit id="6e0849ded45459bb75fc962a53bf83df2a5b5ba0" translate="yes" xml:space="preserve">
          <source>Removes configuration variables (together wih their aliases) that were loaded with specified callback module and configuration string.</source>
          <target state="translated">删除用指定的回调模块和配置字符串加载的配置变量(以及它们的别名)。</target>
        </trans-unit>
        <trans-unit id="19a1a1f167a8dd46ef5ea9470ec88dd1d515a514" translate="yes" xml:space="preserve">
          <source>Removes directory &lt;code&gt;Dir&lt;/code&gt; at the remote server.</source>
          <target state="translated">删除远程服务器上的目录 &lt;code&gt;Dir&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="02924e99f1092efed94b21cddc4567c00ed0797b" translate="yes" xml:space="preserve">
          <source>Removes nodes from the current cover test.</source>
          <target state="translated">从当前覆盖测试中删除节点。</target>
        </trans-unit>
        <trans-unit id="885e65fb702e1735df6f9356bb3a59114e457f09" translate="yes" xml:space="preserve">
          <source>Removes old code for &lt;code&gt;Module&lt;/code&gt;. Before this BIF is used, &lt;code&gt;&lt;a href=&quot;#check_process_code-2&quot;&gt; check_process_code/2&lt;/a&gt;&lt;/code&gt; is to be called to check that no processes execute old code in the module.</source>
          <target state="translated">删除 &lt;code&gt;Module&lt;/code&gt; 的旧代码。在使用此BIF之前，将调用 &lt;code&gt;&lt;a href=&quot;#check_process_code-2&quot;&gt; check_process_code/2&lt;/a&gt;&lt;/code&gt; 以检查是否没有进程执行模块中的旧代码。</target>
        </trans-unit>
        <trans-unit id="cf8e7542d98d969ab5b6a2bc0c3d6d5e50905b7d" translate="yes" xml:space="preserve">
          <source>Removes old code for &lt;code&gt;Module&lt;/code&gt;. Before this BIF is used, &lt;code&gt;&lt;a href=&quot;#check_process_code-2&quot;&gt;check_process_code/2&lt;/a&gt;&lt;/code&gt;is to be called to check that no processes execute old code in the module.</source>
          <target state="translated">删除 &lt;code&gt;Module&lt;/code&gt; 的旧代码。在使用此BIF之前，将调用 &lt;code&gt;&lt;a href=&quot;#check_process_code-2&quot;&gt;check_process_code/2&lt;/a&gt;&lt;/code&gt; 以检查是否没有进程执行模块中的旧代码。</target>
        </trans-unit>
        <trans-unit id="281c5754c557f40c25fc049eb32abf747c439426" translate="yes" xml:space="preserve">
          <source>Removes releases and their applications, modules and &lt;code&gt;&lt;a href=&quot;#module_data&quot;&gt;module data&lt;/a&gt;&lt;/code&gt; from an &lt;code&gt;&lt;a href=&quot;#xref_server&quot;&gt;Xref server&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">从外部 &lt;code&gt;&lt;a href=&quot;#xref_server&quot;&gt;Xref server&lt;/a&gt;&lt;/code&gt; 删除发行版及其应用程序，模块和 &lt;code&gt;&lt;a href=&quot;#module_data&quot;&gt;module data&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1494c23d99ae7a074da0f5767968b97ada72e430" translate="yes" xml:space="preserve">
          <source>Removes selected record definitions. &lt;code&gt;RecordNames&lt;/code&gt; is a record name or a list of record names. To remove all record definitions, use &lt;code&gt;'_'&lt;/code&gt;.</source>
          <target state="translated">删除选定的记录定义。 &lt;code&gt;RecordNames&lt;/code&gt; 是记录名称或记录名称列表。要删除所有记录定义，请使用 &lt;code&gt;'_'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="08aa69eb4dff9986ba433e51ea964d15b903f2db" translate="yes" xml:space="preserve">
          <source>Removes the &lt;code&gt;Key&lt;/code&gt;, if it exists, and its associated value from &lt;code&gt;Map1&lt;/code&gt; and returns a new map &lt;code&gt;Map2&lt;/code&gt; without key &lt;code&gt;Key&lt;/code&gt;.</source>
          <target state="translated">删除 &lt;code&gt;Key&lt;/code&gt; ，如果它存在，并从其关联的值 &lt;code&gt;Map1&lt;/code&gt; ，并返回一个新的地图 &lt;code&gt;Map2&lt;/code&gt; 无钥匙 &lt;code&gt;Key&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="93557a3a60b8e22b6a793259a6b192bb29de371b" translate="yes" xml:space="preserve">
          <source>Removes the binding of &lt;code&gt;Name&lt;/code&gt; in &lt;code&gt;BindingStruct&lt;/code&gt;. Returns an updated binding structure.</source>
          <target state="translated">在 &lt;code&gt;BindingStruct&lt;/code&gt; 中删除 &lt;code&gt;Name&lt;/code&gt; 的绑定。返回更新的绑定结构。</target>
        </trans-unit>
        <trans-unit id="537e2f9fa77de9edf6444f921d6e10ab6626425c" translate="yes" xml:space="preserve">
          <source>Removes the binding of variable &lt;code&gt;X&lt;/code&gt;.</source>
          <target state="translated">删除变量 &lt;code&gt;X&lt;/code&gt; 的绑定。</target>
        </trans-unit>
        <trans-unit id="2a70e4c1ab0cf5300dd607b66a1471f48013af8c" translate="yes" xml:space="preserve">
          <source>Removes the configuration parameter &lt;code&gt;Par&lt;/code&gt; and its value for &lt;code&gt;Application&lt;/code&gt;.</source>
          <target state="translated">删除 &lt;code&gt;Application&lt;/code&gt; 的配置参数 &lt;code&gt;Par&lt;/code&gt; 及其值。</target>
        </trans-unit>
        <trans-unit id="2a7b9f71cdf502a6cbced36e46c5564bce6c50e1" translate="yes" xml:space="preserve">
          <source>Removes the current code for &lt;code&gt;Module&lt;/code&gt;, that is, the current code for &lt;code&gt;Module&lt;/code&gt; is made old. This means that processes can continue to execute the code in the module, but no external function calls can be made to it.</source>
          <target state="translated">删除 &lt;code&gt;Module&lt;/code&gt; 的当前代码，也就是说， &lt;code&gt;Module&lt;/code&gt; 的当前代码已过时。这意味着进程可以继续执行模块中的代码，但是无法对其进行外部函数调用。</target>
        </trans-unit>
        <trans-unit id="1f61ca04390382aeff5d670ab45ee550c4297632" translate="yes" xml:space="preserve">
          <source>Removes the globally registered name &lt;code&gt;Name&lt;/code&gt; from the network of Erlang nodes.</source>
          <target state="translated">从Erlang节点的网络中删除全局注册的名称 &lt;code&gt;Name&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="81e55227c7de5aa8064bff12851856ba47f63444" translate="yes" xml:space="preserve">
          <source>Removes the item at the front of queue &lt;code&gt;Q1&lt;/code&gt;. Returns tuple &lt;code&gt;{{value, Item}, Q2}&lt;/code&gt;, where &lt;code&gt;Item&lt;/code&gt; is the item removed and &lt;code&gt;Q2&lt;/code&gt; is the resulting queue. If &lt;code&gt;Q1&lt;/code&gt; is empty, tuple &lt;code&gt;{empty, Q1}&lt;/code&gt; is returned.</source>
          <target state="translated">删除队列 &lt;code&gt;Q1&lt;/code&gt; 前面的项目。返回元组 &lt;code&gt;{{value, Item}, Q2}&lt;/code&gt; ，其中 &lt;code&gt;Item&lt;/code&gt; 是移除的项目， &lt;code&gt;Q2&lt;/code&gt; 是结果队列。如果 &lt;code&gt;Q1&lt;/code&gt; 为空，则返回元组 &lt;code&gt;{empty, Q1}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8847d0032fa945206d3bb9ae3e11a876f1dfecc7" translate="yes" xml:space="preserve">
          <source>Removes the item at the rear of queue &lt;code&gt;Q1&lt;/code&gt;. Returns tuple &lt;code&gt;{{value, Item}, Q2}&lt;/code&gt;, where &lt;code&gt;Item&lt;/code&gt; is the item removed and &lt;code&gt;Q2&lt;/code&gt; is the new queue. If &lt;code&gt;Q1&lt;/code&gt; is empty, tuple &lt;code&gt;{empty, Q1}&lt;/code&gt; is returned.</source>
          <target state="translated">删除队列 &lt;code&gt;Q1&lt;/code&gt; 后面的项目。返回元组 &lt;code&gt;{{value, Item}, Q2}&lt;/code&gt; ，其中 &lt;code&gt;Item&lt;/code&gt; 是要删除的项目，而 &lt;code&gt;Q2&lt;/code&gt; 是新队列。如果 &lt;code&gt;Q1&lt;/code&gt; 为空，则返回元组 &lt;code&gt;{empty, Q1}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="571beed8fa2a0a28fac65d7bf77305b45836b63c" translate="yes" xml:space="preserve">
          <source>Removes the link, if there is one, between the calling process and the process or port referred to by &lt;code&gt;Id&lt;/code&gt;.</source>
          <target state="translated">删除调用进程与 &lt;code&gt;Id&lt;/code&gt; 引用的进程或端口之间的链接（如果存在）。</target>
        </trans-unit>
        <trans-unit id="504de2ff2d5c71d2f018e6c02a78b16a7a10f573" translate="yes" xml:space="preserve">
          <source>Removes the node with key &lt;code&gt;Key&lt;/code&gt; from &lt;code&gt;Tree1&lt;/code&gt; and returns the new tree. Assumes that the key is present in the tree, crashes otherwise.</source>
          <target state="translated">从 &lt;code&gt;Tree1&lt;/code&gt; 中删除具有键 &lt;code&gt;Key&lt;/code&gt; 的节点，并返回新树。假设密钥在树中存在，否则崩溃。</target>
        </trans-unit>
        <trans-unit id="70950e4f3c8e2c52528b10b76a754de546dbfc5e" translate="yes" xml:space="preserve">
          <source>Removes the node with key &lt;code&gt;Key&lt;/code&gt; from &lt;code&gt;Tree1&lt;/code&gt; if the key is present in the tree, otherwise does nothing. Returns the new tree.</source>
          <target state="translated">如果树中存在 &lt;code&gt;Key&lt;/code&gt; ， &lt;code&gt;Tree1&lt;/code&gt; 树1中删除具有密钥Key的节点，否则不执行任何操作。返回新树。</target>
        </trans-unit>
        <trans-unit id="971ac232183d0065bf0bdfc8b8573c390073318f" translate="yes" xml:space="preserve">
          <source>Removes the possibility for SNMP to manipulate the table.</source>
          <target state="translated">取消了SNMP对该表进行操作的可能性。</target>
        </trans-unit>
        <trans-unit id="f6583a0dab178a2fb992ad59fefd4d81f7931c54" translate="yes" xml:space="preserve">
          <source>Removes the registered name &lt;code&gt;RegName&lt;/code&gt; associated with a process identifier or a port identifier, for example:</source>
          <target state="translated">删除与进程标识符或端口标识符关联的注册名称 &lt;code&gt;RegName&lt;/code&gt; ，例如：</target>
        </trans-unit>
        <trans-unit id="dbc47bf2382d0f415e3aa194df6dfa16f631c639" translate="yes" xml:space="preserve">
          <source>Removes the service completely with all its registered options. It is stopped before it is removed.</source>
          <target state="translated">彻底删除该服务及其所有注册选项。在删除之前,服务会被停止。</target>
        </trans-unit>
        <trans-unit id="acc9c9c020f9d887226a9272cf21c3405519decf" translate="yes" xml:space="preserve">
          <source>Removes the subscription on events of type &lt;code&gt;Event-Category&lt;/code&gt;</source>
          <target state="translated">删除类型为 &lt;code&gt;Event-Category&lt;/code&gt; 的事件的订阅</target>
        </trans-unit>
        <trans-unit id="cb76eef89426250953e573fa86236fe52b0f4297" translate="yes" xml:space="preserve">
          <source>Removes the validation callback call before heartbeats.</source>
          <target state="translated">删除心跳前的验证回调调用。</target>
        </trans-unit>
        <trans-unit id="1d9765a2dae7a6da7b34b4a4b327bad4140b2d58" translate="yes" xml:space="preserve">
          <source>Removes trailing empty parts of the result (as does &lt;code&gt;trim&lt;/code&gt; in &lt;code&gt;&lt;a href=&quot;re#split-3&quot;&gt;re:split/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">中移除了后结果的空部分（如确实 &lt;code&gt;trim&lt;/code&gt; 在 &lt;code&gt;&lt;a href=&quot;re#split-3&quot;&gt;re:split/3&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dc704ae3bc04ac3e06137d6e6058582a4d180738" translate="yes" xml:space="preserve">
          <source>Removing a transport causes the corresponding transport processes to be terminated. Whether or not a DPR message is sent to a peer is controlled by value of &lt;code&gt;&lt;a href=&quot;#disconnect_cb&quot;&gt;disconnect_cb&lt;/a&gt;&lt;/code&gt; configured on the transport.</source>
          <target state="translated">删除传输会导致相应的传输过程终止。DPR消息是否发送到对等方，由传输上配置的 &lt;code&gt;&lt;a href=&quot;#disconnect_cb&quot;&gt;disconnect_cb&lt;/a&gt;&lt;/code&gt; 的值控制。</target>
        </trans-unit>
        <trans-unit id="23711c5d370f461cdeb8d7a28cd3a7168c48b70d" translate="yes" xml:space="preserve">
          <source>Removing an application means that the application is stopped, the modules are unloaded using &lt;code&gt;delete_module&lt;/code&gt;, and then the application specification is unloaded from the application controller.</source>
          <target state="translated">删除应用程序意味着该应用程序已停止，使用 &lt;code&gt;delete_module&lt;/code&gt; 卸载了模块，然后从应用程序控制器中卸载了应用程序规范。</target>
        </trans-unit>
        <trans-unit id="2a257b8e79bb4eac48b669f49bbde3fc82db52ad" translate="yes" xml:space="preserve">
          <source>Removing an application means that the application is stopped, the modules are unloaded using a number of &lt;code&gt;delete_module&lt;/code&gt; instructions, and then the application specification is unloaded from the application controller.</source>
          <target state="translated">删除应用程序意味着该应用程序已停止，使用许多 &lt;code&gt;delete_module&lt;/code&gt; 指令卸载了模块，然后从应用程序控制器中卸载了应用程序规范。</target>
        </trans-unit>
        <trans-unit id="21ecfe29f13ab8d3591c9f7ede9bc7422e8e8b32" translate="yes" xml:space="preserve">
          <source>Removing the &lt;code&gt;timer&lt;/code&gt; key from the map when we change to state &lt;code&gt;locked&lt;/code&gt; is not strictly necessary since we can only get into state &lt;code&gt;open&lt;/code&gt; with an updated &lt;code&gt;timer&lt;/code&gt; map value. But it can be nice to not have outdated values in the state &lt;code&gt;Data&lt;/code&gt;!</source>
          <target state="translated">当我们更改为 &lt;code&gt;locked&lt;/code&gt; 状态时，从映射中删除 &lt;code&gt;timer&lt;/code&gt; 键不是绝对必要的，因为我们只能使用更新的 &lt;code&gt;timer&lt;/code&gt; 映射值进入 &lt;code&gt;open&lt;/code&gt; 状态。但是，最好不要在状态 &lt;code&gt;Data&lt;/code&gt; 中包含过时的值！</target>
        </trans-unit>
        <trans-unit id="8646e4631f9ace195cf0a5164635e06163109edf" translate="yes" xml:space="preserve">
          <source>Removing the &lt;code&gt;timer&lt;/code&gt; key from the map when we do a &lt;strong&gt;state change&lt;/strong&gt; to &lt;code&gt;locked&lt;/code&gt; is not strictly necessary since we can only get into state &lt;code&gt;open&lt;/code&gt; with an updated &lt;code&gt;timer&lt;/code&gt; map value. But it can be nice to not have outdated values in the state &lt;code&gt;Data&lt;/code&gt;!</source>
          <target state="translated">当我们将&lt;strong&gt;状态更改&lt;/strong&gt;为 &lt;code&gt;locked&lt;/code&gt; 时，从映射中删除 &lt;code&gt;timer&lt;/code&gt; 键不是绝对必要的，因为我们只能使用更新的 &lt;code&gt;timer&lt;/code&gt; 映射值进入 &lt;code&gt;open&lt;/code&gt; 状态。但是最好不要在状态 &lt;code&gt;Data&lt;/code&gt; 中包含过时的值！&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0cfa720136cd04bacd2eac92ab7474295652cf42" translate="yes" xml:space="preserve">
          <source>Renames &lt;code&gt;Old&lt;/code&gt; to &lt;code&gt;New&lt;/code&gt; at the remote server.</source>
          <target state="translated">在远程服务器上将&amp;ldquo; &lt;code&gt;Old&lt;/code&gt; &lt;code&gt;New&lt;/code&gt; 重命名为&amp;ldquo; 新 &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="6d0f47bb19f5b5facec144970690eb3792cd2ef5" translate="yes" xml:space="preserve">
          <source>Renames a file named &lt;code&gt;OldName&lt;/code&gt; and gives it the name &lt;code&gt;NewName&lt;/code&gt;.</source>
          <target state="translated">重命名名为 &lt;code&gt;OldName&lt;/code&gt; 的文件，并将其命名为 &lt;code&gt;NewName&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="08c6204fdae6705e22c2f29ad8fc6ee2ce0504b5" translate="yes" xml:space="preserve">
          <source>Renames a set of possibly interdependent source code modules. &lt;code&gt;Files&lt;/code&gt; is a list of file names of source modules to be processed. &lt;code&gt;Renamings&lt;/code&gt; is a list of pairs of &lt;strong&gt;module names&lt;/strong&gt;, representing a mapping from old names to new. The returned value is the list of output file names.</source>
          <target state="translated">重命名一组可能相互依赖的源代码模块。 &lt;code&gt;Files&lt;/code&gt; 是要处理的源模块的文件名列表。 &lt;code&gt;Renamings&lt;/code&gt; 是&lt;strong&gt;模块名称&lt;/strong&gt;对的列表，表示从旧名称到新名称的映射。返回的值是输出文件名的列表。</target>
        </trans-unit>
        <trans-unit id="fd85297b6c1591a7f5105a46107e2cb8283239d7" translate="yes" xml:space="preserve">
          <source>Renames the log file to &lt;code&gt;File&lt;/code&gt; and then recreates a new log file. If a wrap log exists, &lt;code&gt;File&lt;/code&gt; is used as the base name of the renamed files. By default the header given to &lt;code&gt;open/1&lt;/code&gt; is written first in the newly opened log file, but if argument &lt;code&gt;Head&lt;/code&gt; or &lt;code&gt;BHead&lt;/code&gt; is specified, this item is used instead. The header argument is used only once. Next time a wrap log file is opened, the header given to &lt;code&gt;open/1&lt;/code&gt; is used.</source>
          <target state="translated">将日志文件重命名为&amp;ldquo; &lt;code&gt;File&lt;/code&gt; ，然后重新创建一个新的日志文件。如果存在换行日志，则将 &lt;code&gt;File&lt;/code&gt; 用作重命名文件的基本名称。默认情况下，将给 &lt;code&gt;open/1&lt;/code&gt; 的标头首先写入新打开的日志文件中，但是如果指定了参数 &lt;code&gt;Head&lt;/code&gt; 或 &lt;code&gt;BHead&lt;/code&gt; ，则改用此项目。标头参数仅使用一次。下次打开包装日志文件时，将使用指定给 &lt;code&gt;open/1&lt;/code&gt; 的标头。</target>
        </trans-unit>
        <trans-unit id="54af7ac61590d862405adf0734930d6cae2cb066" translate="yes" xml:space="preserve">
          <source>Renames the named table &lt;code&gt;Tab&lt;/code&gt; to the new name &lt;code&gt;Name&lt;/code&gt;. Afterwards, the old name cannot be used to access the table. Renaming an unnamed table has no effect.</source>
          <target state="translated">将命名表 &lt;code&gt;Tab&lt;/code&gt; 重命名为新名称 &lt;code&gt;Name&lt;/code&gt; 。之后，旧名称将无法用于访问表。重命名未命名的表无效。</target>
        </trans-unit>
        <trans-unit id="ff5eaf0e51b9b10a59f079047c36ed274ea953d1" translate="yes" xml:space="preserve">
          <source>Renaming of open files is not allowed on most platforms (see &lt;code&gt;eacces&lt;/code&gt; below).</source>
          <target state="translated">在大多数平台上，都不允许重命名打开的文件（请参阅下面的 &lt;code&gt;eacces&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="c3fc42419d36596f24642090b015a4da2b77a5fe" translate="yes" xml:space="preserve">
          <source>Render the documentation for a module or function.</source>
          <target state="translated">渲染一个模块或函数的文档。</target>
        </trans-unit>
        <trans-unit id="58289d0d26f52871cc0fde6f4704b683dfaad55c" translate="yes" xml:space="preserve">
          <source>Render the documentation of a callback in a module.</source>
          <target state="translated">渲染模块中回调的文档。</target>
        </trans-unit>
        <trans-unit id="43263f16f1c199293aa01f3e3148af7a8eb8e58f" translate="yes" xml:space="preserve">
          <source>Render the documentation of a type in a module.</source>
          <target state="translated">渲染模块中某一类型的文档。</target>
        </trans-unit>
        <trans-unit id="0fe08c0c478168644cd0280359f909fa0debb4a3" translate="yes" xml:space="preserve">
          <source>Renegotiation Indication Extension &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc5746.txt&quot;&gt;RFC 5746&lt;/a&gt;&lt;/code&gt; is supported</source>
          <target state="translated">重新谈判启示扩展 &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc5746.txt&quot;&gt;RFC 5746&lt;/a&gt;&lt;/code&gt; 支持</target>
        </trans-unit>
        <trans-unit id="7fad444613612977458b8b88430a31438343ac58" translate="yes" xml:space="preserve">
          <source>Repeat the modification step with the tail of &lt;code&gt;modify_algs_list()&lt;/code&gt; and the resulting &lt;code&gt;A'&lt;/code&gt;.</source>
          <target state="translated">在尾部的 &lt;code&gt;modify_algs_list()&lt;/code&gt; 和结果 &lt;code&gt;A'&lt;/code&gt; 处重复修改步骤。</target>
        </trans-unit>
        <trans-unit id="8ac3f3cc198e4d81a7905803f774173fbcea00b2" translate="yes" xml:space="preserve">
          <source>Repeat until there is no path between &lt;code&gt;V1&lt;/code&gt; and &lt;code&gt;V2&lt;/code&gt;.</source>
          <target state="translated">重复直到 &lt;code&gt;V1&lt;/code&gt; 和 &lt;code&gt;V2&lt;/code&gt; 之间没有路径。</target>
        </trans-unit>
        <trans-unit id="67a1ceb71d57152ab275922087225b068bcb6e0c" translate="yes" xml:space="preserve">
          <source>Repeatedly following &lt;code&gt;next&lt;/code&gt; pointers will eventually take you to the sentinel.</source>
          <target state="translated">反复跟随 &lt;code&gt;next&lt;/code&gt; 指针，最终将您带到前哨。</target>
        </trans-unit>
        <trans-unit id="3a4290fa536136f59f682f52fde343fbb3f453b7" translate="yes" xml:space="preserve">
          <source>Repeatedly following &lt;code&gt;prev&lt;/code&gt; pointers will eventually take you to the sentinel.</source>
          <target state="translated">反复跟踪 &lt;code&gt;prev&lt;/code&gt; 三分球，最终将带你到定点。</target>
        </trans-unit>
        <trans-unit id="882850f9efe1aecf6bc3eb3238cdb7ef37fa9c9b" translate="yes" xml:space="preserve">
          <source>Repeats command &lt;code&gt;N&lt;/code&gt;, if &lt;code&gt;N&lt;/code&gt; is positive. If it is negative, the &lt;code&gt;N&lt;/code&gt;th previous command is repeated (that is, &lt;code&gt;e(-1)&lt;/code&gt; repeats the previous command).</source>
          <target state="translated">如果 &lt;code&gt;N&lt;/code&gt; 为正，则重复命令 &lt;code&gt;N&lt;/code&gt; 。如果为负，则重复第 &lt;code&gt;N&lt;/code&gt; 个先前的命令（即 &lt;code&gt;e(-1)&lt;/code&gt; 重复先前的命令）。</target>
        </trans-unit>
        <trans-unit id="f80a175e58465cf2c27bbc9fe26e988c97a71cc0" translate="yes" xml:space="preserve">
          <source>Repeats the split until &lt;code&gt;Subject&lt;/code&gt; is exhausted. Conceptually option &lt;code&gt;global&lt;/code&gt; makes split work on the positions returned by &lt;code&gt;&lt;a href=&quot;#matches-3&quot;&gt;matches/3&lt;/a&gt;&lt;/code&gt;, while it normally works on the position returned by &lt;code&gt;&lt;a href=&quot;#match-3&quot;&gt;match/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">重复分割，直到 &lt;code&gt;Subject&lt;/code&gt; 用尽。从概念上讲，option &lt;code&gt;global&lt;/code&gt; 使 &lt;code&gt;&lt;a href=&quot;#matches-3&quot;&gt;matches/3&lt;/a&gt;&lt;/code&gt; 返回的位置处于拆分状态，而通常对 &lt;code&gt;&lt;a href=&quot;#match-3&quot;&gt;match/3&lt;/a&gt;&lt;/code&gt; 返回的位置进行划分。</target>
        </trans-unit>
        <trans-unit id="a172a0f5c387a5e46c31a43f2cefffb22c95831f" translate="yes" xml:space="preserve">
          <source>Repetition is specified by quantifiers, which can follow any of the following items:</source>
          <target state="translated">重复是由量化符指定的,量化符可以跟在以下任何一项后面:</target>
        </trans-unit>
        <trans-unit id="146808ca12c9af96348c2ab80e60f75d56da8935" translate="yes" xml:space="preserve">
          <source>Replace the kex algorithms list with the single algorithm &lt;code&gt;'diffie-hellman-group14-sha256'&lt;/code&gt;:</source>
          <target state="translated">用单个算法 &lt;code&gt;'diffie-hellman-group14-sha256'&lt;/code&gt; 替换kex算法列表：</target>
        </trans-unit>
        <trans-unit id="56d42d2b692a0d6476978d84d1a8114ac3464d87" translate="yes" xml:space="preserve">
          <source>Replaces &lt;code&gt;&lt;a href=&quot;#module_data&quot;&gt;module data&lt;/a&gt;&lt;/code&gt; of an &lt;code&gt;&lt;a href=&quot;#analyzed_module&quot;&gt;analyzed module&lt;/a&gt;&lt;/code&gt; with data read from a BEAM file. Application membership of the module is retained, and so is the value of the &lt;code&gt;builtins&lt;/code&gt; option of the module. An error is returned if the name of the read module differs from the given module.</source>
          <target state="translated">用从BEAM文件读取的 &lt;code&gt;&lt;a href=&quot;#module_data&quot;&gt;module data&lt;/a&gt;&lt;/code&gt; 替换已 &lt;code&gt;&lt;a href=&quot;#analyzed_module&quot;&gt;analyzed module&lt;/a&gt;&lt;/code&gt; 数据。模块的应用程序成员身份将保留，模块的 &lt;code&gt;builtins&lt;/code&gt; 选项的值也将保留。如果读取模块的名称与给定模块不同，则返回错误。</target>
        </trans-unit>
        <trans-unit id="7d9750cc1b6985af6ed569e4fe99331e1df8b510" translate="yes" xml:space="preserve">
          <source>Replaces &lt;code&gt;SearchPattern&lt;/code&gt; in &lt;code&gt;String&lt;/code&gt; with &lt;code&gt;Replacement&lt;/code&gt;. &lt;code&gt;Where&lt;/code&gt;, default &lt;code&gt;leading&lt;/code&gt;, indicates whether the &lt;code&gt;leading&lt;/code&gt;, the &lt;code&gt;trailing&lt;/code&gt; or &lt;code&gt;all&lt;/code&gt; encounters of &lt;code&gt;SearchPattern&lt;/code&gt; are to be replaced.</source>
          <target state="translated">替代对象 &lt;code&gt;SearchPattern&lt;/code&gt; 在 &lt;code&gt;String&lt;/code&gt; 与 &lt;code&gt;Replacement&lt;/code&gt; 。 &lt;code&gt;Where&lt;/code&gt; ，默认 &lt;code&gt;leading&lt;/code&gt; ，指示是否 &lt;code&gt;leading&lt;/code&gt; 时， &lt;code&gt;trailing&lt;/code&gt; 或者 &lt;code&gt;all&lt;/code&gt; 的遭遇 &lt;code&gt;SearchPattern&lt;/code&gt; 将被替换。</target>
        </trans-unit>
        <trans-unit id="a561fe60c3d9ba1409232278ffca46e8f6e25489" translate="yes" xml:space="preserve">
          <source>Replaces an event handler in event manager &lt;code&gt;EventMgrRef&lt;/code&gt; in the same way as &lt;code&gt;swap_handler/3&lt;/code&gt;, but also supervises the connection between &lt;code&gt;Handler2&lt;/code&gt; and the calling process.</source>
          <target state="translated">以与 &lt;code&gt;swap_handler/3&lt;/code&gt; 相同的方式替换事件管理器 &lt;code&gt;EventMgrRef&lt;/code&gt; 中的事件处理程序，但还监督 &lt;code&gt;Handler2&lt;/code&gt; 和调用进程之间的连接。</target>
        </trans-unit>
        <trans-unit id="419481a738590ffe74f074cd3f66660d64a0e60c" translate="yes" xml:space="preserve">
          <source>Replaces an old event handler with a new event handler in event manager &lt;code&gt;EventMgrRef&lt;/code&gt;.</source>
          <target state="translated">在事件管理器 &lt;code&gt;EventMgrRef&lt;/code&gt; 中用新的事件处理程序替换旧的事件处理程序。</target>
        </trans-unit>
        <trans-unit id="9eed3a84ce22771b5808dd7e1463a515114573df" translate="yes" xml:space="preserve">
          <source>Replaces an old occurrence of a directory named &lt;code&gt;.../Name[-Vsn][/ebin]&lt;/code&gt; in the code path, with &lt;code&gt;Dir&lt;/code&gt;. If &lt;code&gt;Name&lt;/code&gt; does not exist, it adds the new directory &lt;code&gt;Dir&lt;/code&gt; last in the code path. The new directory must also be named &lt;code&gt;.../Name[-Vsn][/ebin]&lt;/code&gt;. This function is to be used if a new version of the directory (library) is added to a running system.</source>
          <target state="translated">用 &lt;code&gt;Dir&lt;/code&gt; 替换代码路径中名为 &lt;code&gt;.../Name[-Vsn][/ebin]&lt;/code&gt; 的目录的旧版本。如果 &lt;code&gt;Name&lt;/code&gt; 不存在，它将在代码路径的最后添加新目录 &lt;code&gt;Dir&lt;/code&gt; 。新目录还必须命名为 &lt;code&gt;.../Name[-Vsn][/ebin]&lt;/code&gt; 。如果将新版本的目录（库）添加到正在运行的系统，则将使用此功能。</target>
        </trans-unit>
        <trans-unit id="e95e156f5a3b21e55b9e9d7df8ac40e83028b042" translate="yes" xml:space="preserve">
          <source>Replaces the &lt;code&gt;&lt;a href=&quot;#module_data&quot;&gt;module data&lt;/a&gt;&lt;/code&gt; of all &lt;code&gt;&lt;a href=&quot;#analyzed_module&quot;&gt;analyzed modules&lt;/a&gt;&lt;/code&gt; the BEAM files of which have been modified since last read by an &lt;code&gt;add&lt;/code&gt; function or &lt;code&gt;update&lt;/code&gt;. Application membership of the modules is retained, and so is the value of the &lt;code&gt;builtins&lt;/code&gt; option. Returns a sorted list of the names of the replaced modules.</source>
          <target state="translated">替换所有 &lt;code&gt;&lt;a href=&quot;#analyzed_module&quot;&gt;analyzed modules&lt;/a&gt;&lt;/code&gt; 的 &lt;code&gt;&lt;a href=&quot;#module_data&quot;&gt;module data&lt;/a&gt;&lt;/code&gt; ，这些模块的BEAM文件自上次读取以来已通过 &lt;code&gt;add&lt;/code&gt; 函数或 &lt;code&gt;update&lt;/code&gt; 。模块的应用程序成员身份将保留，并且 &lt;code&gt;builtins&lt;/code&gt; 选项的值也将保留。返回替换模块名称的排序列表。</target>
        </trans-unit>
        <trans-unit id="e162acc877cce3efc4c4645eed631739ea69f0f7" translate="yes" xml:space="preserve">
          <source>Replaces the existing objects of table &lt;code&gt;Name&lt;/code&gt; with objects created by calling the input function &lt;code&gt;InitFun&lt;/code&gt;, see below. The reason for using this function rather than calling &lt;code&gt;insert/2&lt;/code&gt; is that of efficiency. Notice that the input functions are called by the process that handles requests to the Dets table, not by the calling process.</source>
          <target state="translated">将表 &lt;code&gt;Name&lt;/code&gt; 的现有对象替换为通过调用输入函数 &lt;code&gt;InitFun&lt;/code&gt; 创建的对象，请参见下文。使用此函数而不是调用 &lt;code&gt;insert/2&lt;/code&gt; 的原因是效率。请注意，输入函数是由处理对Dets表的请求的进程调用的，而不是由调用进程调用的。</target>
        </trans-unit>
        <trans-unit id="a2e2db8771ec60e84f4f89a23c30a3ab11bf1890" translate="yes" xml:space="preserve">
          <source>Replaces the existing objects of table &lt;code&gt;Tab&lt;/code&gt; with objects created by calling the input function &lt;code&gt;InitFun&lt;/code&gt;, see below. This function is provided for compatibility with the &lt;code&gt;dets&lt;/code&gt; module, it is not more efficient than filling a table by using &lt;code&gt;&lt;a href=&quot;#insert-2&quot;&gt;insert/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将表 &lt;code&gt;Tab&lt;/code&gt; 的现有对象替换为通过调用输入函数 &lt;code&gt;InitFun&lt;/code&gt; 创建的对象，请参见下文。提供此功能是为了与 &lt;code&gt;dets&lt;/code&gt; 模块兼容，它没有比使用 &lt;code&gt;&lt;a href=&quot;#insert-2&quot;&gt;insert/2&lt;/a&gt;&lt;/code&gt; 填充表更有效。</target>
        </trans-unit>
        <trans-unit id="6628e9df362f62f633a5d7e6425eed79b6dbe778" translate="yes" xml:space="preserve">
          <source>Replaces the matched part of the &lt;code&gt;Subject&lt;/code&gt; string with the contents of &lt;code&gt;Replacement&lt;/code&gt;.</source>
          <target state="translated">用 &lt;code&gt;Replacement&lt;/code&gt; 的内容替换 &lt;code&gt;Subject&lt;/code&gt; 字符串的匹配部分。</target>
        </trans-unit>
        <trans-unit id="12f3f7bbddec5d3195ba4a36bdd58ba53790386e" translate="yes" xml:space="preserve">
          <source>Replaces the modules of an application with other modules read from an application directory. Release membership of the application is retained. Note that the name of the application is kept; the name of the given directory is not used.</source>
          <target state="translated">用从应用程序目录中读取的其他模块替换应用程序的模块。保留应用程序的发布成员资格。请注意,保留应用程序的名称,不使用指定目录的名称。</target>
        </trans-unit>
        <trans-unit id="a8d1a9d58a5e5ca14250cdab073b72fea337a464" translate="yes" xml:space="preserve">
          <source>Replaces the path specified in the boot script; see &lt;code&gt;script(4)&lt;/code&gt;.</source>
          <target state="translated">替换启动脚本中指定的路径；参见 &lt;code&gt;script(4)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="047f0df8a3018b8551685d31f76e6d44444474fc" translate="yes" xml:space="preserve">
          <source>Replaces the state of the process, and returns the new state.</source>
          <target state="translated">替换进程的状态,并返回新的状态。</target>
        </trans-unit>
        <trans-unit id="9184d9c39282b5754d576935dbc39e77f9d02e83" translate="yes" xml:space="preserve">
          <source>Replicas of type &lt;code&gt;disc_only_copies&lt;/code&gt; are only affected by this parameter during the initial dump of the log file at startup. When designing applications with &lt;strong&gt;very&lt;/strong&gt; high requirements, it can be appropriate not to use &lt;code&gt;disc_only_copies&lt;/code&gt; tables at all. The reason for this is the random access nature of normal operating system files. If a node goes down for a reason such as a power failure, these files can be corrupted because they are not properly closed. The &lt;code&gt;DAT&lt;/code&gt; files for &lt;code&gt;disc_only_copies&lt;/code&gt; are updated on a per transaction basis.</source>
          <target state="translated">类型为 &lt;code&gt;disc_only_copies&lt;/code&gt; 的副本仅在启动时日志文件的初始转储期间受此参数影响。当设计要求很高的应用程序时，&lt;strong&gt;完全&lt;/strong&gt;不使用 &lt;code&gt;disc_only_copies&lt;/code&gt; 表可能是适当的。其原因是正常操作系统文件的随机访问性质。如果节点由于电源故障等原因而关闭，则这些文件可能会由于未正确关闭而损坏。 &lt;code&gt;disc_only_copies&lt;/code&gt; 的 &lt;code&gt;DAT&lt;/code&gt; 文件在每个事务的基础上进行更新。</target>
        </trans-unit>
        <trans-unit id="6ac8596fa89edfabdcf6fecf958d16a005ece982" translate="yes" xml:space="preserve">
          <source>Replicated tables have the same content on all nodes where they are replicated. However, it is sometimes advantageous to have tables, but different content on different nodes.</source>
          <target state="translated">复制的表在所有被复制的节点上都有相同的内容。但是,有时候,在不同的节点上有表但内容不同是有利的。</target>
        </trans-unit>
        <trans-unit id="3a9e9afe1a552da9f13fde90fd0f5258e6b4db3e" translate="yes" xml:space="preserve">
          <source>Replicated tables that reside locally as well as somewhere else are either initiated from disc or by copying the entire table from the other node, depending on which of the different replicas are the most recent. &lt;code&gt;Mnesia&lt;/code&gt; determines which of the tables are the most recent.</source>
          <target state="translated">驻留在本地以及其他地方的复制表是从磁盘启动的，或者是从另一个节点复制整个表的，这取决于哪个不同的副本是最新的。 &lt;code&gt;Mnesia&lt;/code&gt; 确定哪个表是最新的。</target>
        </trans-unit>
        <trans-unit id="5ebc556c3a47de1e105808f80a573351d288796c" translate="yes" xml:space="preserve">
          <source>Replication. Tables can be replicated at several nodes.</source>
          <target state="translated">复制。表可以在几个节点上进行复制。</target>
        </trans-unit>
        <trans-unit id="e7fb706c746d6c42069331ec3f48fc3bf37dbe5a" translate="yes" xml:space="preserve">
          <source>Replies arriving after the timer has expired, will be delivered using the &lt;code&gt;&lt;a href=&quot;megaco_user#unexpected_trans&quot;&gt;handle_unexpected_trans/3,4&lt;/a&gt;&lt;/code&gt; callback function.</source>
          <target state="translated">计时器到期后到达的回复将使用 &lt;code&gt;&lt;a href=&quot;megaco_user#unexpected_trans&quot;&gt;handle_unexpected_trans/3,4&lt;/a&gt;&lt;/code&gt; 回调函数传递。</target>
        </trans-unit>
        <trans-unit id="126cf04b40e9dfa6af76d4b4da1a8ce9285a1fa9" translate="yes" xml:space="preserve">
          <source>Reply :: term()</source>
          <target state="translated">答复:任期()</target>
        </trans-unit>
        <trans-unit id="58cf87f6dac57b28d02194486fcb6f8dd6ecc261" translate="yes" xml:space="preserve">
          <source>Reply from other state than the request, &lt;code&gt;sys&lt;/code&gt; traceable</source>
          <target state="translated">来自除请求之外的其他状态的答复， &lt;code&gt;sys&lt;/code&gt; 可追溯</target>
        </trans-unit>
        <trans-unit id="7a00bbb5f99bc04dd63e793a0e32145c7dc90c48" translate="yes" xml:space="preserve">
          <source>Reply to &lt;code&gt;Port ! {Pid,close}&lt;/code&gt;.</source>
          <target state="translated">回复 &lt;code&gt;Port ! {Pid,close}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8694767ec4c7b52fb9e3f8d2f15cf11c06894a41" translate="yes" xml:space="preserve">
          <source>Reply to &lt;code&gt;Port ! {Pid,{connect,NewPid}}&lt;/code&gt;.</source>
          <target state="translated">回复 &lt;code&gt;Port ! {Pid,{connect,NewPid}}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4b96dfeb12fd8a4e4012eab404a286bb6ae1f178" translate="yes" xml:space="preserve">
          <source>Reply to a caller, mentioned at the end of section &lt;code&gt;&lt;a href=&quot;#All%20State%20Events&quot;&gt;All State Events&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">答复呼叫方，在 &lt;code&gt;&lt;a href=&quot;#All%20State%20Events&quot;&gt;All State Events&lt;/a&gt;&lt;/code&gt; 部分的末尾提到</target>
        </trans-unit>
        <trans-unit id="d51d4f5317a58ec9fadf8c1b64090b49b06b2cd6" translate="yes" xml:space="preserve">
          <source>Reply to a caller, mentioned at the end of section &lt;code&gt;&lt;a href=&quot;#All%20State%20Events&quot;&gt;All State Events&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">答复在 &lt;code&gt;&lt;a href=&quot;#All%20State%20Events&quot;&gt;All State Events&lt;/a&gt;&lt;/code&gt; 部分末尾提到的呼叫者。</target>
        </trans-unit>
        <trans-unit id="72df4b4bc039d9b2e5bdd4ac208ec2c87607d70b" translate="yes" xml:space="preserve">
          <source>Reply | {error, Reason}</source>
          <target state="translated">回复|{错误,原因}。</target>
        </trans-unit>
        <trans-unit id="d41fb2069eb0e10f46e258ab0b1229e85d9491d5" translate="yes" xml:space="preserve">
          <source>Report a parsed external entity declaration.</source>
          <target state="translated">报告一个经过解析的外部实体声明。</target>
        </trans-unit>
        <trans-unit id="ea5741dec57b6d216da5d5c515fc46fa697f27c6" translate="yes" xml:space="preserve">
          <source>Report an XML comment anywhere in the document (both inside and outside of the document element).</source>
          <target state="translated">在文档中的任何地方报告XML注释(包括文档元素内部和外部)。</target>
        </trans-unit>
        <trans-unit id="5b4904e061e57bddfab52b6cfd2d3ea1d06c349e" translate="yes" xml:space="preserve">
          <source>Report an attribute type declaration.</source>
          <target state="translated">报告一个属性类型声明。</target>
        </trans-unit>
        <trans-unit id="e3db9c3fab04d85ea232a7fcf942fbfd1b004b09" translate="yes" xml:space="preserve">
          <source>Report an element type declaration. The content model will consist of the string &quot;EMPTY&quot;, the string &quot;ANY&quot;, or a parenthesised group, optionally followed by an occurrence indicator. The model will be normalized so that all parameter entities are fully resolved and all whitespace is removed,and will include the enclosing parentheses. Other normalization (such as removing redundant parentheses or simplifying occurrence indicators) is at the discretion of the parser.</source>
          <target state="translated">报告一个元素类型声明。内容模型将由字符串 &quot;EMPTY&quot;、字符串 &quot;ANY &quot;或一个括号组组成,后面可选择跟一个发生指示器。该模型将被归一化,以便所有参数实体都被完全解析,所有空白都被删除,并将包括括号。其他的规范化处理(如去掉多余的小括号或简化发生指示器)由解析器决定。</target>
        </trans-unit>
        <trans-unit id="bf5d2d664010dcb10710bdf2302a984224d32fd1" translate="yes" xml:space="preserve">
          <source>Report an event to the collector.</source>
          <target state="translated">向收集者报告一个事件。</target>
        </trans-unit>
        <trans-unit id="0726ec060dd61caf7a44399784154bba339be6e5" translate="yes" xml:space="preserve">
          <source>Report an internal entity declaration.</source>
          <target state="translated">报告一项内部实体声明。</target>
        </trans-unit>
        <trans-unit id="b903e37625cb00383193345807e6f2cd70182b4f" translate="yes" xml:space="preserve">
          <source>Report browsing</source>
          <target state="translated">报告浏览</target>
        </trans-unit>
        <trans-unit id="d7d063c7f439064d0bd21947ff7363c54d0c7bbe" translate="yes" xml:space="preserve">
          <source>Report call-backs and printing of events</source>
          <target state="translated">报告回访和打印事件</target>
        </trans-unit>
        <trans-unit id="b4e0e2fdd9a9b427f43e27d5c7689fab83f4954f" translate="yes" xml:space="preserve">
          <source>Report the beginning of some internal and external XML entities. ???</source>
          <target state="translated">报告一些内部和外部XML实体的开始。???</target>
        </trans-unit>
        <trans-unit id="1537db331987c73e42ec79886424725e7ced0ca8" translate="yes" xml:space="preserve">
          <source>Report the end of DTD declarations, it's reporting the end of the DOCTYPE declaration.</source>
          <target state="translated">报告DTD声明的结束,就是报告DOCTYPE声明的结束。</target>
        </trans-unit>
        <trans-unit id="45b1374aafa256e46789d17cd746069ce811a778" translate="yes" xml:space="preserve">
          <source>Report the end of a CDATA section.</source>
          <target state="translated">报告CDATA部分的结束。</target>
        </trans-unit>
        <trans-unit id="4e77cabadac053249b29d05bd9d1d234e2cc1e97" translate="yes" xml:space="preserve">
          <source>Report the end of an entity. ???</source>
          <target state="translated">报告一个实体的结束。???</target>
        </trans-unit>
        <trans-unit id="c09ed9bee7f1262daef582c404162b533ffaa466" translate="yes" xml:space="preserve">
          <source>Report the start of DTD declarations, it's reporting the start of the DOCTYPE declaration. If the document has no DOCTYPE declaration, this event will not be sent.</source>
          <target state="translated">报告DTD声明的开始,就是报告DOCTYPE声明的开始。如果文档没有DOCTYPE声明,这个事件将不会被发送。</target>
        </trans-unit>
        <trans-unit id="2b91bc27e6fa6a320a4ff9f88df2653241bb852b" translate="yes" xml:space="preserve">
          <source>Report the start of a CDATA section. The contents of the CDATA section will be reported through the regular characters event.</source>
          <target state="translated">报告CDATA部分的开始。CDATA部分的内容将通过常规字符事件报告。</target>
        </trans-unit>
        <trans-unit id="ffeca158e141c03cd42c17a2026cfff827aa1413" translate="yes" xml:space="preserve">
          <source>Reported ticket age (obfuscated ticket age) shall be less than ticket lifetime.</source>
          <target state="translated">报告的票龄(混淆票龄)应小于票龄。</target>
        </trans-unit>
        <trans-unit id="93fd5ff4921baf203ff8b603c22461be039d636b" translate="yes" xml:space="preserve">
          <source>Reports term allocation statistics.</source>
          <target state="translated">报告任期分配统计。</target>
        </trans-unit>
        <trans-unit id="99f5b324157a74f4ba599f70ce8661cfdaad5091" translate="yes" xml:space="preserve">
          <source>Reports the service as stopped to the service manager whenever it fails; it must be manually restarted.</source>
          <target state="translated">每当服务发生故障时,就向服务管理器报告该服务已停止;必须手动重新启动。</target>
        </trans-unit>
        <trans-unit id="8e231051a656cc0108d6b02d1bd260ba3157afb3" translate="yes" xml:space="preserve">
          <source>Representation of Parse Errors and End-of-File</source>
          <target state="translated">解析错误和文件结束的表示方法</target>
        </trans-unit>
        <trans-unit id="ee67840d5e69841e214d4858266855f7d033268c" translate="yes" xml:space="preserve">
          <source>Representation of XML, as described in application &lt;code&gt;xmerl&lt;/code&gt;.</source>
          <target state="translated">XML表示形式，如应用程序 &lt;code&gt;xmerl&lt;/code&gt; 中所述。</target>
        </trans-unit>
        <trans-unit id="e58aecb98ff170f7c11b8160942cbfb76f351aa2" translate="yes" xml:space="preserve">
          <source>Represents a file path or directory path</source>
          <target state="translated">代表一个文件路径或目录路径</target>
        </trans-unit>
        <trans-unit id="22e7792d22c5ac3675d98858db71f22cbdabe7a5" translate="yes" xml:space="preserve">
          <source>Represents a file path.</source>
          <target state="translated">代表一个文件路径。</target>
        </trans-unit>
        <trans-unit id="5f7ed31f709b30e7c94bd6f94122425a637cb46a" translate="yes" xml:space="preserve">
          <source>Request :: term(),</source>
          <target state="translated">请求:term();</target>
        </trans-unit>
        <trans-unit id="507b55ef67a3793e186e31503844b20cdf44035d" translate="yes" xml:space="preserve">
          <source>Request &lt;code&gt;get_geometry&lt;/code&gt; has no meaning for this I/O server, so the reply is &lt;code&gt;{error, enotsup}&lt;/code&gt;. The only option we handle is &lt;code&gt;binary&lt;/code&gt;/&lt;code&gt;list&lt;/code&gt;, which is done in separate functions.</source>
          <target state="translated">请求 &lt;code&gt;get_geometry&lt;/code&gt; 对于此I / O服务器没有意义，因此答复为 &lt;code&gt;{error, enotsup}&lt;/code&gt; 。我们处理的唯一选项是 &lt;code&gt;binary&lt;/code&gt; / &lt;code&gt;list&lt;/code&gt; ，这是在单独的函数中完成的。</target>
        </trans-unit>
        <trans-unit id="24e691247dfe3630fd35fda8c0e139ee4284bed3" translate="yes" xml:space="preserve">
          <source>Request &lt;code&gt;getopts&lt;/code&gt; is to return a list of &lt;code&gt;{Option, Value}&lt;/code&gt; tuples. This has the twofold function of providing both the current values and the available options of this I/O server. We have only one option, and hence return that.</source>
          <target state="translated">请求 &lt;code&gt;getopts&lt;/code&gt; 是返回 &lt;code&gt;{Option, Value}&lt;/code&gt; 元组的列表。它具有双重功能，即提供此I / O服务器的当前值和可用选项。我们只有一个选择，因此将其返回。</target>
        </trans-unit>
        <trans-unit id="2e0c378c7ccfe92728a6bfeeedc02369a4d75150" translate="yes" xml:space="preserve">
          <source>Request Forwarding</source>
          <target state="translated">请求转发</target>
        </trans-unit>
        <trans-unit id="370aa763d24c7c6a889f8bc1f6473021ef74ab40" translate="yes" xml:space="preserve">
          <source>Request Routing</source>
          <target state="translated">请求路由</target>
        </trans-unit>
        <trans-unit id="e22d3290b587090a383ad7e805ef81704f3e3f28" translate="yes" xml:space="preserve">
          <source>Request URI</source>
          <target state="translated">请求URI</target>
        </trans-unit>
        <trans-unit id="0f51f8766bdb5268b3f7a7fb925d40cf0ac64489" translate="yes" xml:space="preserve">
          <source>Request a notification (message) when the SNMP manager has started.</source>
          <target state="translated">当SNMP管理器启动时,请求通知(消息)。</target>
        </trans-unit>
        <trans-unit id="4f788fb1f0c68a3aeaf79e2bed3b255d4e4efa97" translate="yes" xml:space="preserve">
          <source>Request acknowledgements of unanswered requests. A transport process should send this once before passing incoming Diameter messages into diameter. As a result, every Diameter request passed into diameter with a &lt;code&gt;recv&lt;/code&gt; message (below) will be answered with a &lt;code&gt;send&lt;/code&gt; message (above), either a &lt;code&gt;&lt;a href=&quot;#message&quot;&gt;message()&lt;/a&gt;&lt;/code&gt; for the transport process to send or the atom &lt;code&gt;false&lt;/code&gt; if the request has been discarded or otherwise not answered.</source>
          <target state="translated">未确认请求的请求确认。在将传入的直径消息传递到直径之前，传输过程应该发送一次。结果，每个带有 &lt;code&gt;recv&lt;/code&gt; 消息的直径请求（下面）都会被 &lt;code&gt;send&lt;/code&gt; 消息（上面）回答，发送消息是要发送的传输过程的 &lt;code&gt;&lt;a href=&quot;#message&quot;&gt;message()&lt;/a&gt;&lt;/code&gt; ，或者如果请求已被丢弃，则为 &lt;code&gt;false&lt;/code&gt; ;或者否则没有答案。</target>
        </trans-unit>
        <trans-unit id="6f867bc9ad45748ac7d544dcfedaa1c639a959b7" translate="yes" xml:space="preserve">
          <source>Request identifier. Also used as monitor reference in case the &lt;code&gt;monitor&lt;/code&gt; option has been passed.</source>
          <target state="translated">请求标识符。如果已通过 &lt;code&gt;monitor&lt;/code&gt; 选项，也可用作监视程序参考。</target>
        </trans-unit>
        <trans-unit id="b54284e63f3207a9fed531cafce78b6ab997861b" translate="yes" xml:space="preserve">
          <source>Request notification when more data is available to fetch using &lt;code&gt;&lt;a href=&quot;erlang#dist_ctrl_get_data-1&quot;&gt;erlang:dist_ctrl_get_data(DHandle)&lt;/a&gt;&lt;/code&gt; for the distribution channel identified by &lt;code&gt;DHandle&lt;/code&gt;. When more data is present, the caller will be sent the message &lt;code&gt;dist_data&lt;/code&gt;. Once a &lt;code&gt;dist_data&lt;/code&gt; messages has been sent, no more &lt;code&gt;dist_data&lt;/code&gt; messages will be sent until the &lt;code&gt;dist_ctrl_get_data_notification/1&lt;/code&gt; function has been called again.</source>
          <target state="translated">当可以使用 &lt;code&gt;&lt;a href=&quot;erlang#dist_ctrl_get_data-1&quot;&gt;erlang:dist_ctrl_get_data(DHandle)&lt;/a&gt;&lt;/code&gt; 来获取由 &lt;code&gt;DHandle&lt;/code&gt; 标识的分发渠道的更多数据时，请求通知。当存在更多数据时，将向调用方发送消息 &lt;code&gt;dist_data&lt;/code&gt; 。一旦 &lt;code&gt;dist_data&lt;/code&gt; 邮件已发送，没有更多的 &lt;code&gt;dist_data&lt;/code&gt; 信息将被发送，直到 &lt;code&gt;dist_ctrl_get_data_notification/1&lt;/code&gt; 功能已被再次调用。</target>
        </trans-unit>
        <trans-unit id="2a5f2a76edb63ef16353fc42ce9a4bc1b8d49591" translate="yes" xml:space="preserve">
          <source>Request the network interface process (&lt;code&gt;Pid&lt;/code&gt;) to send this pdu (&lt;code&gt;Pdu&lt;/code&gt;).</source>
          <target state="translated">请求网络接口进程（ &lt;code&gt;Pid&lt;/code&gt; ）发送此pdu（ &lt;code&gt;Pdu&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="ce3c2ee6fb3584f5d183cced85f4c6f3c55edc58" translate="yes" xml:space="preserve">
          <source>RequestId :: &lt;code&gt;&lt;a href=&quot;#type-request_id&quot;&gt;request_id()&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">RequestId :: &lt;code&gt;&lt;a href=&quot;#type-request_id&quot;&gt;request_id()&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7d18300e644431e3a24ea4a4e92d1813f4d47228" translate="yes" xml:space="preserve">
          <source>Requesting a Pseudo-Terminal (RFC 4254, section 6.2)</source>
          <target state="translated">请求伪终端(RFC 4254,6.2节)</target>
        </trans-unit>
        <trans-unit id="f13633a66bddd5919d4452b83066b5c9306c3699" translate="yes" xml:space="preserve">
          <source>Requests &lt;code&gt;getopts&lt;/code&gt; and &lt;code&gt;setopts&lt;/code&gt; are also simple to handle. We only change or read the state record:</source>
          <target state="translated">请求 &lt;code&gt;getopts&lt;/code&gt; 和 &lt;code&gt;setopts&lt;/code&gt; 也很容易处理。我们只更改或读取状态记录：</target>
        </trans-unit>
        <trans-unit id="64e6fe8df794535a6e7f8e3381fa29ec4cd2b3fe" translate="yes" xml:space="preserve">
          <source>Requests all available options and their current values for a specific I/O device, for example:</source>
          <target state="translated">例如,请求特定I/O设备的所有可用选项及其当前值。</target>
        </trans-unit>
        <trans-unit id="44b5e144b529d1d34d542fbdbbb37113f0041e10" translate="yes" xml:space="preserve">
          <source>Requests are constructed by the user; diameter sets header fields as defined in the relevant dictionary.</source>
          <target state="translated">请求是由用户构建的;直径设置了相关字典中定义的头字段。</target>
        </trans-unit>
        <trans-unit id="ddc39c20a1e625e364b51db01eb9285198684651" translate="yes" xml:space="preserve">
          <source>Requests can be issued in two different ways. Synchronous (see &lt;code&gt;&lt;a href=&quot;snmpm#sync_set&quot;&gt;sync_set&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;snmpm#sync_get&quot;&gt;sync_get&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;snmpm#sync_get_next&quot;&gt;sync_get_next&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;snmpm#sync_get_bulk&quot;&gt;sync_get_bulk&lt;/a&gt;&lt;/code&gt;) and asynchronous (see &lt;code&gt;&lt;a href=&quot;snmpm#async_set&quot;&gt;async_set&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;snmpm#async_get&quot;&gt;async_get&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;snmpm#async_get_next&quot;&gt;async_get_next&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;snmpm#async_get_bulk&quot;&gt;async_get_bulk&lt;/a&gt;&lt;/code&gt;). With synchronous the snmp reply is returned by the function. With asynchronous, the reply will instead be delivered through a call to one of the &lt;code&gt;handle_pdu&lt;/code&gt; callback function defined by the &lt;code&gt;&lt;a href=&quot;snmpm_user#handle_pdu&quot;&gt;handle_pdu&lt;/a&gt;&lt;/code&gt; behaviour.</source>
          <target state="translated">可以两种不同的方式发出请求。同步（请参见 &lt;code&gt;&lt;a href=&quot;snmpm#sync_set&quot;&gt;sync_set&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;snmpm#sync_get&quot;&gt;sync_get&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;snmpm#sync_get_next&quot;&gt;sync_get_next&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;snmpm#sync_get_bulk&quot;&gt;sync_get_bulk&lt;/a&gt;&lt;/code&gt; ）和异步（请参见 &lt;code&gt;&lt;a href=&quot;snmpm#async_set&quot;&gt;async_set&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;snmpm#async_get&quot;&gt;async_get&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;snmpm#async_get_next&quot;&gt;async_get_next&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;snmpm#async_get_bulk&quot;&gt;async_get_bulk&lt;/a&gt;&lt;/code&gt; ）。使用同步时，该函数将返回snmp答复。使用异步时，答复将通过对 &lt;code&gt;&lt;a href=&quot;snmpm_user#handle_pdu&quot;&gt;handle_pdu&lt;/a&gt;&lt;/code&gt; 行为定义的 &lt;code&gt;handle_pdu&lt;/code&gt; 回调函数之一的调用来传递。</target>
        </trans-unit>
        <trans-unit id="6a5480f1d9e2db525d4d0201c503d4754d924bbf" translate="yes" xml:space="preserve">
          <source>Requests can be issued in two different ways. Synchronous (see &lt;code&gt;&lt;a href=&quot;snmpm#sync_set2&quot;&gt;sync_set&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;snmpm#sync_get2&quot;&gt;sync_get&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;snmpm#sync_get_next2&quot;&gt;sync_get_next&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;snmpm#sync_get_bulk2&quot;&gt;sync_get_bulk&lt;/a&gt;&lt;/code&gt;) and asynchronous (see &lt;code&gt;&lt;a href=&quot;snmpm#async_set2&quot;&gt;async_set&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;snmpm#async_get2&quot;&gt;async_get&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;snmpm#async_get_next2&quot;&gt;async_get_next&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;snmpm#async_get_bulk2&quot;&gt;async_get_bulk&lt;/a&gt;&lt;/code&gt;). With synchronous the snmp reply is returned by the function. With asynchronous, the reply will instead be delivered through a call to one of the &lt;code&gt;handle_pdu&lt;/code&gt; callback function defined by the &lt;code&gt;&lt;a href=&quot;snmpm_user#handle_pdu&quot;&gt;handle_pdu&lt;/a&gt;&lt;/code&gt; behaviour.</source>
          <target state="translated">可以以两种不同的方式发出请求。同步（请参见 &lt;code&gt;&lt;a href=&quot;snmpm#sync_set2&quot;&gt;sync_set&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;snmpm#sync_get2&quot;&gt;sync_get&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;snmpm#sync_get_next2&quot;&gt;sync_get_next&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;snmpm#sync_get_bulk2&quot;&gt;sync_get_bulk&lt;/a&gt;&lt;/code&gt; ）和异步（请参见 &lt;code&gt;&lt;a href=&quot;snmpm#async_set2&quot;&gt;async_set&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;snmpm#async_get2&quot;&gt;async_get&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;snmpm#async_get_next2&quot;&gt;async_get_next&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;snmpm#async_get_bulk2&quot;&gt;async_get_bulk&lt;/a&gt;&lt;/code&gt; ）。同步时，该函数将返回snmp答复。使用异步时，答复将通过对 &lt;code&gt;&lt;a href=&quot;snmpm_user#handle_pdu&quot;&gt;handle_pdu&lt;/a&gt;&lt;/code&gt; 行为定义的 &lt;code&gt;handle_pdu&lt;/code&gt; 回调函数之一的调用来传递。</target>
        </trans-unit>
        <trans-unit id="2414a5adfd102a338c55197c870a5e8ed30f956e" translate="yes" xml:space="preserve">
          <source>Requests graceful termination of the session associated with the client.</source>
          <target state="translated">请求优雅地终止与客户相关的会话。</target>
        </trans-unit>
        <trans-unit id="d655475b16d4a6739afa13e1af4b35470f41df5a" translate="yes" xml:space="preserve">
          <source>Requests information about the &lt;code&gt;Result&lt;/code&gt; of the cancellation. &lt;code&gt;Info&lt;/code&gt; defaults to &lt;code&gt;true&lt;/code&gt;, which means the &lt;code&gt;Result&lt;/code&gt; is given. When &lt;code&gt;Info&lt;/code&gt; is set to &lt;code&gt;false&lt;/code&gt;, no information about the result of the cancellation is given.</source>
          <target state="translated">请求有关取消 &lt;code&gt;Result&lt;/code&gt; 的信息。 &lt;code&gt;Info&lt;/code&gt; 默认为 &lt;code&gt;true&lt;/code&gt; ，这表示给出了 &lt;code&gt;Result&lt;/code&gt; 。当 &lt;code&gt;Info&lt;/code&gt; 设置为 &lt;code&gt;false&lt;/code&gt; 时，不提供有关取消结果的信息。</target>
        </trans-unit>
        <trans-unit id="6ff6c0ce1dee907fd5d7c3ad8ae69cf89227f676" translate="yes" xml:space="preserve">
          <source>Requests server to perform &lt;code&gt;Command&lt;/code&gt;. A previously opened session channel is used for the request. &lt;code&gt;Data&lt;/code&gt; is received from the server as a result of the command.</source>
          <target state="translated">请求服务器执行 &lt;code&gt;Command&lt;/code&gt; 。先前打开的会话通道用于该请求。作为命令的结果，从服务器接收 &lt;code&gt;Data&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6f2f2abc3ea9b54a33e41c7792741fcd63ec00c4" translate="yes" xml:space="preserve">
          <source>Requests server to perform &lt;code&gt;Command&lt;/code&gt;. A session channel is opened automatically for the request. &lt;code&gt;Data&lt;/code&gt; is received from the server as a result of the command.</source>
          <target state="translated">请求服务器执行 &lt;code&gt;Command&lt;/code&gt; 。将自动为该请求打开一个会话通道。作为命令的结果，从服务器接收 &lt;code&gt;Data&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fb7ab29539f909d1d965db364abb306b9d8c23af" translate="yes" xml:space="preserve">
          <source>Requests that the user default shell (typically defined in &lt;code&gt;/etc/passwd&lt;/code&gt; in Unix systems) is executed at the server end.</source>
          <target state="translated">请求在服务器端执行用户默认外壳程序（通常在Unix系统中在 &lt;code&gt;/etc/passwd&lt;/code&gt; 中定义）。</target>
        </trans-unit>
        <trans-unit id="e5d06105dd7bae848be23c489d1e425eef14e5ec" translate="yes" xml:space="preserve">
          <source>Requests the distribution port for the given node of an EPMD instance. Together with the port it returns a distribution protocol version which has been 5 since Erlang/OTP R6.</source>
          <target state="translated">请求 EPMD 实例中指定节点的分发端口。连同端口一起返回一个分发协议的版本,这个版本从Erlang/OTP R6开始就是5。</target>
        </trans-unit>
        <trans-unit id="c627743aae6292d1edfab3fd611cfbaa35f44835" translate="yes" xml:space="preserve">
          <source>Require one node with a Telnet connection and an FTP connection. Name the node &lt;code&gt;a&lt;/code&gt;:</source>
          <target state="translated">要求一个节点具有Telnet连接和FTP连接。将节点命名为 &lt;code&gt;a&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="932dc49cb33ce805a923ee58428b5676a3722687" translate="yes" xml:space="preserve">
          <source>Require these &lt;code&gt;&lt;a href=&quot;erl_dist_protocol#dflags&quot;&gt;distribution flags&lt;/a&gt;&lt;/code&gt; to be used. The connection will be aborted during the handshake if the other end does not use them.</source>
          <target state="translated">要求使用这些 &lt;code&gt;&lt;a href=&quot;erl_dist_protocol#dflags&quot;&gt;distribution flags&lt;/a&gt;&lt;/code&gt; 。如果另一端不使用该连接，则在握手期间连接将中止。</target>
        </trans-unit>
        <trans-unit id="e9c366b4f3c3a1bf3449c6872aaeae5a0c5ecdf4" translate="yes" xml:space="preserve">
          <source>Requirement</source>
          <target state="translated">Requirement</target>
        </trans-unit>
        <trans-unit id="56063266c28627d12fee18669ead149368f5bd42" translate="yes" xml:space="preserve">
          <source>Requires that &lt;code&gt;&lt;a href=&quot;#install-1&quot;&gt;ct:install/1&lt;/a&gt;&lt;/code&gt; has been run first.</source>
          <target state="translated">要求先运行 &lt;code&gt;&lt;a href=&quot;#install-1&quot;&gt;ct:install/1&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c2e070334a18ace55475d2c7ef7214f9f493188c" translate="yes" xml:space="preserve">
          <source>Requires that the connection is activated. See megaco:conn_info/2 about which items and values that are valid.</source>
          <target state="translated">需要连接被激活。参见 megaco:conn_info/2,了解哪些项目和值是有效的。</target>
        </trans-unit>
        <trans-unit id="f30287faf99098f6763e46a8603c005c19362cee" translate="yes" xml:space="preserve">
          <source>Requires that the connection is active.</source>
          <target state="translated">要求连接处于活动状态。</target>
        </trans-unit>
        <trans-unit id="c17e71f20f663cc9f1189e3ef11360a81ecbc8ce" translate="yes" xml:space="preserve">
          <source>Requires that the user does not have any active connection.</source>
          <target state="translated">要求用户没有任何活动连接。</target>
        </trans-unit>
        <trans-unit id="e3da804007a27f313a5e70a7489a52d0032c97df" translate="yes" xml:space="preserve">
          <source>Requires that the user is started. See megaco:user_info/2 about which items and values that are valid.</source>
          <target state="translated">要求用户已经启动。关于哪些项目和值是有效的,请参见 megaco:user_info/2。</target>
        </trans-unit>
        <trans-unit id="481a1c0d4b2c5ff0b5f30e85bd6e692df575764b" translate="yes" xml:space="preserve">
          <source>Requires the megaco application to be started. A user is either a Media Gateway (MG) or a Media Gateway Controller (MGC). One Erlang node may host many users.</source>
          <target state="translated">需要启动megaco应用程序。用户可以是媒体网关(MG),也可以是媒体网关控制器(MGC)。一个Erlang节点可以承载多个用户。</target>
        </trans-unit>
        <trans-unit id="2fd1dec24c9ebfc2c604cc35df6701d77561b1e0" translate="yes" xml:space="preserve">
          <source>Res | {badrpc, Reason}</source>
          <target state="translated">Res |{badrpc,Reason}。</target>
        </trans-unit>
        <trans-unit id="f4d9a08bacabf1ee192cf2da13ea58302dc18f45" translate="yes" xml:space="preserve">
          <source>Rescans the report directory. &lt;code&gt;Options&lt;/code&gt; is the same as for function &lt;code&gt;&lt;a href=&quot;#start-1&quot;&gt;start/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">重新扫描报告目录。 &lt;code&gt;Options&lt;/code&gt; 与功能 &lt;code&gt;&lt;a href=&quot;#start-1&quot;&gt;start/1&lt;/a&gt;&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="01982cececb98074d29349a0c9e9557b0c782077" translate="yes" xml:space="preserve">
          <source>Reserved for future use. Do &lt;strong&gt;not&lt;/strong&gt; use this flag.</source>
          <target state="translated">保留以备将来使用。千万&lt;strong&gt;不能&lt;/strong&gt;使用此标志。</target>
        </trans-unit>
        <trans-unit id="094891da7eec692d61182c9206f122cd46f36e84" translate="yes" xml:space="preserve">
          <source>Reset all TCP related (SNMP) statistics counters.</source>
          <target state="translated">重置所有TCP相关的(SNMP)统计计数器。</target>
        </trans-unit>
        <trans-unit id="68db580cd0bf93363aa59a948b05562996e8a597" translate="yes" xml:space="preserve">
          <source>Reset all related (SNMP) statistics counters.</source>
          <target state="translated">重置所有相关的(SNMP)统计计数器。</target>
        </trans-unit>
        <trans-unit id="ea2af705ba687b7e03e81fd53a43ecd4950468a4" translate="yes" xml:space="preserve">
          <source>Reset microstate accounting counters. Returns whether is was enabled or disabled.</source>
          <target state="translated">重置微观状态会计计数器。返回是否启用或禁用。</target>
        </trans-unit>
        <trans-unit id="1629825928942be4143ae7ec741fae164c32209f" translate="yes" xml:space="preserve">
          <source>Resets (clears) the cookie database for the specified &lt;code&gt;Profile&lt;/code&gt;. If no profile is specified the default profile is used.</source>
          <target state="translated">重置（清除）指定 &lt;code&gt;Profile&lt;/code&gt; 的cookie数据库。如果未指定配置文件，则使用默认配置文件。</target>
        </trans-unit>
        <trans-unit id="42f663110bd6b64d84eaef947ff89445b867c379" translate="yes" xml:space="preserve">
          <source>Resets all &lt;code&gt;snmp&lt;/code&gt; counters to 0.</source>
          <target state="translated">将所有 &lt;code&gt;snmp&lt;/code&gt; 计数器重置为0。</target>
        </trans-unit>
        <trans-unit id="d94724b4ac055ae7ff4431386f7dd90b475d3b80" translate="yes" xml:space="preserve">
          <source>Resets all counters and then starts microstate accounting for the given milliseconds.</source>
          <target state="translated">重置所有计数器,然后开始给定毫秒的微状态核算。</target>
        </trans-unit>
        <trans-unit id="c35fd9595bfbabab4d1c990efe590d85aad9a81e" translate="yes" xml:space="preserve">
          <source>Resets all coverage data for a Cover compiled module &lt;code&gt;Module&lt;/code&gt; in the Cover database on all nodes. If the argument is omitted, the coverage data will be reset for all modules known by Cover.</source>
          <target state="translated">在所有节点上的Cover数据库中重置Cover编译模块 &lt;code&gt;Module&lt;/code&gt; 的所有coverage数据。如果省略该参数，那么将为Cover已知的所有模块重置coverage数据。</target>
        </trans-unit>
        <trans-unit id="f827ea2106527d66b22496ff17d161262d1e35ba" translate="yes" xml:space="preserve">
          <source>Resets entry &lt;code&gt;I&lt;/code&gt; to the default value for the array. If the value of entry &lt;code&gt;I&lt;/code&gt; is the default value, the array is returned unchanged. Reset never changes the array size. Shrinking can be done explicitly by calling &lt;code&gt;&lt;a href=&quot;#resize-2&quot;&gt;resize/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将条目 &lt;code&gt;I&lt;/code&gt; 重置为阵列的默认值。如果条目 &lt;code&gt;I&lt;/code&gt; 的值为默认值，则数组将保持不变。重置永远不会更改阵列大小。缩小可以通过调用 &lt;code&gt;&lt;a href=&quot;#resize-2&quot;&gt;resize/2&lt;/a&gt;&lt;/code&gt; 显式完成。</target>
        </trans-unit>
        <trans-unit id="de1d66243efd40011f5354f807bf4316d6d884bd" translate="yes" xml:space="preserve">
          <source>Resizes a driver binary, while keeping the data.</source>
          <target state="translated">在保留数据的同时,重新调整驱动二进制的大小。</target>
        </trans-unit>
        <trans-unit id="afe06ccb43798e203443a661c67985d4683b2235" translate="yes" xml:space="preserve">
          <source>Resizes a memory block, either in place, or by allocating a new block, copying the data, and freeing the old block. A pointer is returned to the reallocated memory. On failure (out of memory), &lt;code&gt;NULL&lt;/code&gt; is returned. (This is most often a wrapper for &lt;code&gt;realloc&lt;/code&gt;.)</source>
          <target state="translated">通过就地调整内存块的大小，或者通过分配新块，复制数据和释放旧块来调整内存块的大小。指针返回到重新分配的内存。发生故障（内存不足）时，将返回 &lt;code&gt;NULL&lt;/code&gt; 。（这通常是 &lt;code&gt;realloc&lt;/code&gt; 的包装器。）</target>
        </trans-unit>
        <trans-unit id="b7c7d6a377d20e9e955af01a692967d758a0b52c" translate="yes" xml:space="preserve">
          <source>Resolver Types</source>
          <target state="translated">解析器类型</target>
        </trans-unit>
        <trans-unit id="09d1f73c9252da1107937d4d534d408ca7760aa6" translate="yes" xml:space="preserve">
          <source>Resolves a DNS record of the specified type and class for the specified name.</source>
          <target state="translated">解析指定名称的指定类型和类别的DNS记录。</target>
        </trans-unit>
        <trans-unit id="eba5a7224f57500ffaa0dd3342225d7f10381f82" translate="yes" xml:space="preserve">
          <source>Resolves a DNS record of the specified type and class for the specified name. The returned &lt;code&gt;dns_msg()&lt;/code&gt; can be examined using access functions in &lt;code&gt;inet_db&lt;/code&gt;, as described in section in &lt;code&gt;&lt;a href=&quot;#dns_types&quot;&gt;DNS Types&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">为指定名称解析指定类型和类的DNS记录。可以使用 &lt;code&gt;inet_db&lt;/code&gt; 中的访问函数来检查返回的 &lt;code&gt;dns_msg()&lt;/code&gt; ，如&amp;ldquo; &lt;code&gt;&lt;a href=&quot;#dns_types&quot;&gt;DNS Types&lt;/a&gt;&lt;/code&gt; 一节中所述。</target>
        </trans-unit>
        <trans-unit id="4e276400129592150e484867e483da18ebb865dd" translate="yes" xml:space="preserve">
          <source>Resolves a DNS record of the specified type for the specified host, of class &lt;code&gt;in&lt;/code&gt;. Returns, on success, a &lt;code&gt;hostent()&lt;/code&gt; record with &lt;code&gt;dns_data()&lt;/code&gt; elements in the address list field.</source>
          <target state="translated">解决了特定类型指定的主机类，的DNS记录 &lt;code&gt;in&lt;/code&gt; 。成功返回带有地址列表字段中 &lt;code&gt;dns_data()&lt;/code&gt; 元素的 &lt;code&gt;hostent()&lt;/code&gt; 记录。</target>
        </trans-unit>
        <trans-unit id="e255f15dc3b35ddba127b05f853b1bc2a4f1b219" translate="yes" xml:space="preserve">
          <source>Resolves the DNS data for the record of the specified type and class for the specified name. On success, filters out the answer records with the correct &lt;code&gt;Class&lt;/code&gt; and &lt;code&gt;Type&lt;/code&gt;, and returns a list of their data fields. So, a lookup for type &lt;code&gt;any&lt;/code&gt; gives an empty answer, as the answer records have specific types that are not &lt;code&gt;any&lt;/code&gt;. An empty answer or a failed lookup returns an empty list.</source>
          <target state="translated">为指定名称的类型和类的记录解析DNS数据。成功后，使用正确的 &lt;code&gt;Class&lt;/code&gt; 和 &lt;code&gt;Type&lt;/code&gt; 筛选出答案记录，并返回其数据字段的列表。因此，对类型 &lt;code&gt;any&lt;/code&gt; 的查找会给出一个空答案，因为答案记录具有特定的类型，它们不是 &lt;code&gt;any&lt;/code&gt; 。空答案或查找失败将返回一个空列表。</target>
        </trans-unit>
        <trans-unit id="1e7209e804399190d5b8e9245f8d82fb88f8ff0c" translate="yes" xml:space="preserve">
          <source>Resource types support upgrade in runtime by allowing a loaded NIF library to take over an already existing resource type and by that &quot;inherit&quot; all existing objects of that type. The destructor of the new library is thereafter called for the inherited objects and the library with the old destructor function can be safely unloaded. Existing resource objects, of a module that is upgraded, must either be deleted or taken over by the new NIF library. The unloading of a library is postponed as long as there exist resource objects with a destructor function in the library.</source>
          <target state="translated">资源类型支持在运行时升级,允许加载的NIF库接管一个已经存在的资源类型,并 &quot;继承 &quot;该类型的所有现有对象。此后,新库的析构函数将被调用,而带有旧析构函数的库可以安全地卸载。升级后的模块中,现有的资源对象必须被删除或被新的NIF库接管。只要库中存在带解构函数的资源对象,库的卸载就会被推迟。</target>
        </trans-unit>
        <trans-unit id="0ef0d0d978a116bde33e50341c9e6394cb2893fc" translate="yes" xml:space="preserve">
          <source>Restart call counters for the matching functions in matching modules that are call count traced. The &lt;code&gt;FS&lt;/code&gt; argument can be used to specify the first argument to &lt;code&gt;erlang:trace_pattern/3&lt;/code&gt;. See erlang(3).</source>
          <target state="translated">重新启动已跟踪呼叫计数的匹配模块中匹配功能的呼叫计数器。该 &lt;code&gt;FS&lt;/code&gt; 参数可用于指定的第一个参数 &lt;code&gt;erlang:trace_pattern/3&lt;/code&gt; 。参见erlang（3）。</target>
        </trans-unit>
        <trans-unit id="22908382338b27ef4c1d1a0163183425f8871c7f" translate="yes" xml:space="preserve">
          <source>Restart the indicated process (&lt;code&gt;Ref&lt;/code&gt;). Note that its not without risk to restart a process, and should therefor be used with care.</source>
          <target state="translated">重新启动指示的过程（ &lt;code&gt;Ref&lt;/code&gt; ）。注意，重启过程并非没有风险，因此应谨慎使用。</target>
        </trans-unit>
        <trans-unit id="61c90f456eca86b51d3200d77a1d7f2617f0ddb0" translate="yes" xml:space="preserve">
          <source>Restart the set worker process of a multi-threaded agent.</source>
          <target state="translated">重新启动多线程代理的集工进程。</target>
        </trans-unit>
        <trans-unit id="7e74f2cc20537e216a01ecee1923f294af034529" translate="yes" xml:space="preserve">
          <source>Restart the worker process of a multi-threaded agent.</source>
          <target state="translated">重新启动多线程代理的工作进程。</target>
        </trans-unit>
        <trans-unit id="dc214e0416b7a580a7af166989fb4bbe4276bbd4" translate="yes" xml:space="preserve">
          <source>Restarting an application is useful when a change is too complicated to be made without restarting the processes, for example, if the supervisor hierarchy has been restructured.</source>
          <target state="translated">当变更太复杂,不重启流程就无法进行时,重启应用程序是很有用的,例如,如果主管层级已经重组,那么重启应用程序。</target>
        </trans-unit>
        <trans-unit id="78facde3d4d8b32988e630ea196e0d52f90f256d" translate="yes" xml:space="preserve">
          <source>Restarting an application means that the application is stopped and then started again similar to using the instructions &lt;code&gt;remove_application&lt;/code&gt; and &lt;code&gt;add_application&lt;/code&gt; in sequence.</source>
          <target state="translated">重新启动应用程序意味着先停止应用程序，然后再启动，类似于依次使用指令 &lt;code&gt;remove_application&lt;/code&gt; 和 &lt;code&gt;add_application&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="98a98cfd0a822c62415063db7432a74158f00a07" translate="yes" xml:space="preserve">
          <source>Restarting an application means that the application is stopped and then started again, similar to using the instructions &lt;code&gt;remove_application&lt;/code&gt; and &lt;code&gt;add_application&lt;/code&gt; in sequence. Note that, even if the application has been started before the release upgrade is performed, &lt;code&gt;restart_application&lt;/code&gt; may only &lt;code&gt;load&lt;/code&gt; it rather than &lt;code&gt;start&lt;/code&gt; it, depending on the application's &lt;code&gt;start type&lt;/code&gt;: If &lt;code&gt;Type = load&lt;/code&gt;, the application is only loaded. If &lt;code&gt;Type = none&lt;/code&gt;, the application is not loaded and not started, although the code for its modules is loaded.</source>
          <target state="translated">重新启动应用程序意味着先停止应用程序，然后再次启动，类似于依次使用指令 &lt;code&gt;remove_application&lt;/code&gt; 和 &lt;code&gt;add_application&lt;/code&gt; 。请注意，即使在执行发行升级之前已启动应用程序， &lt;code&gt;restart_application&lt;/code&gt; 也可能仅 &lt;code&gt;load&lt;/code&gt; 而不是 &lt;code&gt;start&lt;/code&gt; 它，具体取决于应用程序的 &lt;code&gt;start type&lt;/code&gt; ：如果 &lt;code&gt;Type = load&lt;/code&gt; ，则仅加载应用程序。如果 &lt;code&gt;Type = none&lt;/code&gt; ，则尽管已加载其模块的代码，但该应用程序不会加载也不会启动。</target>
        </trans-unit>
        <trans-unit id="2de62cc3a4bd25c5d36ad0d8cc488270e5a0abd1" translate="yes" xml:space="preserve">
          <source>Restarts the call counters from zero for specified functions. Can be used to collect a new set of counters without having to stop and start call count profiling.</source>
          <target state="translated">从零开始重新启动指定函数的调用计数器。可以用来收集一组新的计数器,而不需要停止和启动调用计数分析。</target>
        </trans-unit>
        <trans-unit id="3cbe6d6b9a8d1596bb5bca12e14d81c9e108a1a3" translate="yes" xml:space="preserve">
          <source>Restore</source>
          <target state="translated">Restore</target>
        </trans-unit>
        <trans-unit id="50c54641b65cdfdd40db3c5df69a0a5a46d257fe" translate="yes" xml:space="preserve">
          <source>Restore original beam instruction for disabled breakpoints.</source>
          <target state="translated">恢复原来的光束指令,用于禁用断点。</target>
        </trans-unit>
        <trans-unit id="9b939c958cae308cd1ce8394371dead14ecaa1d6" translate="yes" xml:space="preserve">
          <source>Restore previous configuration by maintaining a history buffer and handling configuration files.</source>
          <target state="translated">通过维护历史缓冲区和处理配置文件来恢复以前的配置。</target>
        </trans-unit>
        <trans-unit id="3733a2a68fd7503fd11786ec56d8016b0a108fe2" translate="yes" xml:space="preserve">
          <source>Restores an opaque continuation returned by &lt;code&gt;&lt;a href=&quot;#select-3&quot;&gt;select/3&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#select-1&quot;&gt;select/1&lt;/a&gt;&lt;/code&gt; if the continuation has passed through external term format (been sent between nodes or stored on disk).</source>
          <target state="translated">如果延续通过外部术语格式（在节点之间发送或存储在磁盘上）传递，则恢复由 &lt;code&gt;&lt;a href=&quot;#select-3&quot;&gt;select/3&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;#select-1&quot;&gt;select/1&lt;/a&gt;&lt;/code&gt; 返回的不透明延续。</target>
        </trans-unit>
        <trans-unit id="4f3f20018aa0040e4c23d84e3c7950b3527b5bdd" translate="yes" xml:space="preserve">
          <source>Restores previously saved data to the server.</source>
          <target state="translated">将之前保存的数据恢复到服务器上。</target>
        </trans-unit>
        <trans-unit id="9fd2af0db43c49aa55ce334c12e957767a3ccb8b" translate="yes" xml:space="preserve">
          <source>Restores the previous state of user tags and their spreading as it was before a call to &lt;code&gt;&lt;a href=&quot;#spread_tag-1&quot;&gt;spread_tag/1&lt;/a&gt;&lt;/code&gt;. Note that the restoring is not limited to the same process, one can utilize this to turn off spreding in one process and restore it in a newly created, the one that actually is going to send messages:</source>
          <target state="translated">恢复用户标签的先前状态及其传播，就像在调用 &lt;code&gt;&lt;a href=&quot;#spread_tag-1&quot;&gt;spread_tag/1&lt;/a&gt;&lt;/code&gt; 之前一样。请注意，还原并不限于同一进程，您可以利用它来关闭一个进程中的加速，然后将其还原到一个新创建的进程中，该进程实际上是要发送消息的：</target>
        </trans-unit>
        <trans-unit id="5fac283093b6a2a509402c8c0582786b4a2bfd78" translate="yes" xml:space="preserve">
          <source>RestrOp ::= &lt;code&gt;|&lt;/code&gt;</source>
          <target state="translated">RestrOp :: = &lt;code&gt;|&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b7dd86ea16702f2798d2509aeac3e281b6a70f1b" translate="yes" xml:space="preserve">
          <source>RestrOp ::= &lt;code&gt;||&lt;/code&gt;</source>
          <target state="translated">RestrOp :: = &lt;code&gt;||&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fc7c10d01aae72be16a86c0f638ea9cf021214b5" translate="yes" xml:space="preserve">
          <source>RestrOp ::= &lt;code&gt;|||&lt;/code&gt;</source>
          <target state="translated">RestrOp :: = &lt;code&gt;|||&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f27748a3cc8d8302e3d06f6c33c914d3a3a3945a" translate="yes" xml:space="preserve">
          <source>Restricted Shell</source>
          <target state="translated">限定壳</target>
        </trans-unit>
        <trans-unit id="74f8659deabd84444add4ff9d5bcef99159bf52e" translate="yes" xml:space="preserve">
          <source>Restrictions on elliptic curves</source>
          <target state="translated">对椭圆曲线的限制</target>
        </trans-unit>
        <trans-unit id="6a2e8fce25ab13d2280da37bb29467c8d385d0c5" translate="yes" xml:space="preserve">
          <source>Restrictions on key sizes</source>
          <target state="translated">对钥匙尺寸的限制</target>
        </trans-unit>
        <trans-unit id="bfa4191a9eae6ca9165e4fa4ff48bbaff74e299e" translate="yes" xml:space="preserve">
          <source>Restricts the socket to use only IPv6, prohibiting any IPv4 connections. This is only applicable for IPv6 sockets (option &lt;code&gt;inet6&lt;/code&gt;).</source>
          <target state="translated">限制套接字仅使用IPv6，禁止任何IPv4连接。这仅适用于IPv6套接字（选项 &lt;code&gt;inet6&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="5faa59d4bc3756040b8ce9e673c09f929e6ee9ba" translate="yes" xml:space="preserve">
          <source>Result</source>
          <target state="translated">Result</target>
        </trans-unit>
        <trans-unit id="fad7e8f89b3044f680980534cc7f38eb45d77455" translate="yes" xml:space="preserve">
          <source>Result = 0 -&amp;gt; ok, result &amp;gt; 0 -&amp;gt; error.</source>
          <target state="translated">结果= 0-&amp;gt;确定，结果&amp;gt; 0-&amp;gt;错误。</target>
        </trans-unit>
        <trans-unit id="72c3908300e570c710533b083bcfd239361ca5b4" translate="yes" xml:space="preserve">
          <source>Result code 4003 is sent in CEA if there is an existing connection to the peer in question and configuration does not allow more than one.</source>
          <target state="translated">如果存在与相关对等体的现有连接,且配置不允许超过一个,则在CEA中发送结果代码4003。</target>
        </trans-unit>
        <trans-unit id="b1380f2ff1e7ff28281bc2b3937da790713a4a29" translate="yes" xml:space="preserve">
          <source>Result codes 3001, 3002, 3005, and 3007 can be sent in answers formulated by diameter, if configured to do so.</source>
          <target state="translated">如果配置了结果代码3001、3002、3005、3007,可以按直径制定的答案发送。</target>
        </trans-unit>
        <trans-unit id="fbb4070f87a5eec2fe80d288609d352ddb6823b2" translate="yes" xml:space="preserve">
          <source>Result of the operation. If &lt;code&gt;Result&lt;/code&gt; is a process identifier, the operation succeeded and the process identifier is the identifier of the newly created process. If &lt;code&gt;Result&lt;/code&gt; is an atom, the operation failed and the atom identifies failure reason.</source>
          <target state="translated">操作结果。如果 &lt;code&gt;Result&lt;/code&gt; 是进程标识符，则操作成功，并且该进程标识符是新创建的进程的标识符。如果 &lt;code&gt;Result&lt;/code&gt; 是一个原子，则该操作失败，并且该原子标识失败原因。</target>
        </trans-unit>
        <trans-unit id="779dd3f8d77a27050dfdced538f3720145146cb1" translate="yes" xml:space="preserve">
          <source>Result | &lt;code&gt;&lt;a href=&quot;#type-descriptive_error&quot;&gt;descriptive_error()&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">结果 &lt;code&gt;&lt;a href=&quot;#type-descriptive_error&quot;&gt;descriptive_error()&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2bdb45e9d6b5679ea0ed96f1d5bfeae12bb8e898" translate="yes" xml:space="preserve">
          <source>Result-Code AVP</source>
          <target state="translated">结果代码AVP</target>
        </trans-unit>
        <trans-unit id="da7c61f4348e14cf89c824561d092db5c3023fcb" translate="yes" xml:space="preserve">
          <source>Result-Code AVP Values</source>
          <target state="translated">结果-代码AVP值</target>
        </trans-unit>
        <trans-unit id="612e12d29278b5519294bc25cdaddffec6d0f1c6" translate="yes" xml:space="preserve">
          <source>Results</source>
          <target state="translated">Results</target>
        </trans-unit>
        <trans-unit id="0a0db2d8653e2bdb24b4ddd06733b9ef033724a6" translate="yes" xml:space="preserve">
          <source>Results are written to file (excel compatible text files) and on stdout.</source>
          <target state="translated">结果被写入文件(excel兼容的文本文件)和stdout。</target>
        </trans-unit>
        <trans-unit id="6c1e28cf400ace7a0cf6a58fff614aab265e55e1" translate="yes" xml:space="preserve">
          <source>Results in a OS call to:</source>
          <target state="translated">结果操作系统调用到:</target>
        </trans-unit>
        <trans-unit id="52e920d347b840401d91b797f422f45ceb943e6e" translate="yes" xml:space="preserve">
          <source>Resume the loader process allowing it to return from &lt;code&gt;erlang:finish_loading&lt;/code&gt;.</source>
          <target state="translated">恢复加载程序进程，使其从 &lt;code&gt;erlang:finish_loading&lt;/code&gt; 返回。</target>
        </trans-unit>
        <trans-unit id="92266fcdf49cd88ae3cb55b7500e16b861e0f8f8" translate="yes" xml:space="preserve">
          <source>Resume the processes.</source>
          <target state="translated">重新开始处理。</target>
        </trans-unit>
        <trans-unit id="e18f16b3b88e1efaab280687e97a380ca884e44f" translate="yes" xml:space="preserve">
          <source>Resumes a suspended process.</source>
          <target state="translated">恢复暂停的进程。</target>
        </trans-unit>
        <trans-unit id="f14bdb1234c7ed01c49eaf26a7e322a0b85afcbe" translate="yes" xml:space="preserve">
          <source>Resumes all suspended processes using a module &lt;code&gt;Mod&lt;/code&gt;.</source>
          <target state="translated">使用模块 &lt;code&gt;Mod&lt;/code&gt; 恢复所有暂停的进程。</target>
        </trans-unit>
        <trans-unit id="17c7293f799309379456316dabcac2397077e454" translate="yes" xml:space="preserve">
          <source>Resumes process execution for &lt;code&gt;Pid&lt;/code&gt; or &lt;code&gt;c:pid(X,Y,Z)&lt;/code&gt;.</source>
          <target state="translated">恢复 &lt;code&gt;Pid&lt;/code&gt; 或 &lt;code&gt;c:pid(X,Y,Z)&lt;/code&gt; 的进程执行。</target>
        </trans-unit>
        <trans-unit id="baa6efb2f790bdb132e3741e6aa4b131129c8c15" translate="yes" xml:space="preserve">
          <source>Retains the statistics of destroyed locks.</source>
          <target state="translated">保留被破坏的锁的统计数据。</target>
        </trans-unit>
        <trans-unit id="5cc03bdcfe4904c6966e4b5da63b22275bcbe022" translate="yes" xml:space="preserve">
          <source>Retreive all the sdp records of type &lt;code&gt;Type&lt;/code&gt; from the property group &lt;code&gt;PG&lt;/code&gt;.</source>
          <target state="translated">从属性组 &lt;code&gt;PG&lt;/code&gt; 中检索类型为 &lt;code&gt;Type&lt;/code&gt; 的所有sdp记录。</target>
        </trans-unit>
        <trans-unit id="02febca237ef746057d21ace8518a1c006a9c4b9" translate="yes" xml:space="preserve">
          <source>Retreive the (SNMP) statistic counters maintained by the megaco application. The global counters handle events that cannot be attributed to a single connection (e.g. protocol errors that occur before the connection has been properly setup).</source>
          <target state="translated">恢复由megaco应用程序维护的(SNMP)统计计数器。全局计数器处理不能归因于单个连接的事件(例如,在正确设置连接之前发生的协议错误)。</target>
        </trans-unit>
        <trans-unit id="fa70701bc77c29039a4b681cd1ced4c75c07e003" translate="yes" xml:space="preserve">
          <source>Retreive the TCP related (SNMP) statistics counters.</source>
          <target state="translated">恢复TCP相关的(SNMP)统计计数器。</target>
        </trans-unit>
        <trans-unit id="8d7ef75f058aa1cf6b07567ad7ff04b3417d35fb" translate="yes" xml:space="preserve">
          <source>Retreive the UDP related (SNMP) statistics counters.</source>
          <target state="translated">恢复UDP相关的(SNMP)统计计数器。</target>
        </trans-unit>
        <trans-unit id="7151989dd8e6c94f234c2f32661137cfebef0084" translate="yes" xml:space="preserve">
          <source>Retreive the size of the mib server cache.</source>
          <target state="translated">恢复mib服务器缓存的大小。</target>
        </trans-unit>
        <trans-unit id="4b31fb756dce544f130f19b8dad2c90736d11a83" translate="yes" xml:space="preserve">
          <source>Retreive the type (asn1 bertype) of an oid.</source>
          <target state="translated">恢复一个id的类型(asn1 bertype)。</target>
        </trans-unit>
        <trans-unit id="a066518d0b87d9a981cc76dfb930b0b065ce9302" translate="yes" xml:space="preserve">
          <source>Retrieve Erlang System Time</source>
          <target state="translated">检索Erlang系统时间</target>
        </trans-unit>
        <trans-unit id="9d19fa4433634e8f7f0044b8f7171e217dfed550" translate="yes" xml:space="preserve">
          <source>Retrieve agent config.</source>
          <target state="translated">检索代理配置。</target>
        </trans-unit>
        <trans-unit id="3acc64305dc86f6d79205ab898062e15ca0a37ff" translate="yes" xml:space="preserve">
          <source>Retrieve all alias-names known to the agent.</source>
          <target state="translated">检索代理人已知的所有别名。</target>
        </trans-unit>
        <trans-unit id="2134b573a854d0e886332caabf7da925b7e53ab2" translate="yes" xml:space="preserve">
          <source>Retrieve all loaded mib-files.</source>
          <target state="translated">检索所有加载的mib文件。</target>
        </trans-unit>
        <trans-unit id="1147438c0e44be971748704321067492f033f625" translate="yes" xml:space="preserve">
          <source>Retrieve all notifications (and traps) known to the agent.</source>
          <target state="translated">检索代理人已知的所有通知(和陷阱)。</target>
        </trans-unit>
        <trans-unit id="fadeb4e61b2e973528a9b28b3ff09f86b61edc47" translate="yes" xml:space="preserve">
          <source>Retrieve all tables known to the agent.</source>
          <target state="translated">检索代理商已知的所有表。</target>
        </trans-unit>
        <trans-unit id="fce5ac6430e5aaacbba5d6b3b19663ec99641f54" translate="yes" xml:space="preserve">
          <source>Retrieve all variables known to the agent.</source>
          <target state="translated">检索代理人已知的所有变量。</target>
        </trans-unit>
        <trans-unit id="e5b4f7c289af01a49876429046f707fd8d32c9b2" translate="yes" xml:space="preserve">
          <source>Retrieve data set with &lt;code&gt;&lt;a href=&quot;#set_process_metadata-1&quot;&gt; set_process_metadata/1&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#update_process_metadata-1&quot;&gt; update_process_metadata/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;#set_process_metadata-1&quot;&gt; set_process_metadata/1&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;#update_process_metadata-1&quot;&gt; update_process_metadata/1&lt;/a&gt;&lt;/code&gt; 检索数据集。</target>
        </trans-unit>
        <trans-unit id="1bdc580cb2514729314f5603353f80c0bbf0c5c6" translate="yes" xml:space="preserve">
          <source>Retrieve data set with &lt;code&gt;&lt;a href=&quot;#set_process_metadata-1&quot;&gt;set_process_metadata/1&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#update_process_metadata-1&quot;&gt;update_process_metadata/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;#set_process_metadata-1&quot;&gt;set_process_metadata/1&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;#update_process_metadata-1&quot;&gt;update_process_metadata/1&lt;/a&gt;&lt;/code&gt; 检索数据集。</target>
        </trans-unit>
        <trans-unit id="5d69480abf5e824d94bacf05e6e59333596eae5f" translate="yes" xml:space="preserve">
          <source>Retrieve implementation dependent mib-storage table information.</source>
          <target state="translated">检索依赖于实现的mib存储表信息。</target>
        </trans-unit>
        <trans-unit id="c4acb468e368837beb0ba41c4f9baf884236d501" translate="yes" xml:space="preserve">
          <source>Retrieve misc info for the mib data.</source>
          <target state="translated">检索mib数据的其他信息。</target>
        </trans-unit>
        <trans-unit id="95b30a24349787eb347b2a0cdc30747002d1ce85" translate="yes" xml:space="preserve">
          <source>Retrieve the encoding-config and when initiating the &lt;code&gt;megaco_receive_handle&lt;/code&gt;, set the field &lt;code&gt;encoding_config&lt;/code&gt; accordingly.</source>
          <target state="translated">检索encoding-config，并在启动 &lt;code&gt;megaco_receive_handle&lt;/code&gt; 时，相应地设置字段 &lt;code&gt;encoding_config&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f599f26a74119290164e57387a0798ea103824b0" translate="yes" xml:space="preserve">
          <source>Retrieve the encoding-config using the &lt;code&gt;&lt;a href=&quot;megaco#system_info&quot;&gt;system_info&lt;/a&gt;&lt;/code&gt; function (with &lt;code&gt;Item = text_config&lt;/code&gt;).</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;megaco#system_info&quot;&gt;system_info&lt;/a&gt;&lt;/code&gt; 函数（使用 &lt;code&gt;Item = text_config&lt;/code&gt; ）检索encoding-config 。</target>
        </trans-unit>
        <trans-unit id="06a7a165ad5562144b8adab63d0b203466df36aa" translate="yes" xml:space="preserve">
          <source>Retrieve the keys and values for all persistent terms. The keys will be copied to the heap for the process calling &lt;code&gt;get/0&lt;/code&gt;, but the values will not.</source>
          <target state="translated">检索所有持久项的键和值。密钥将被复制到调用 &lt;code&gt;get/0&lt;/code&gt; 的进程的堆中，但值不会被复制。</target>
        </trans-unit>
        <trans-unit id="3e5761ee307c8026ca4f761f940f2b961da0dd03" translate="yes" xml:space="preserve">
          <source>Retrieve the list of all the mibs loaded into this agent. Default is the master agent.</source>
          <target state="translated">检索加载到这个代理的所有mib的列表。默认为主代理。</target>
        </trans-unit>
        <trans-unit id="8fb723c2fa9c15cbf7e40bed085d2e51be38564e" translate="yes" xml:space="preserve">
          <source>Retrieve the mib file for the mib.</source>
          <target state="translated">检索mib的mib文件。</target>
        </trans-unit>
        <trans-unit id="3c2eaccb5619264e34509fb47435f523adc8579d" translate="yes" xml:space="preserve">
          <source>Retrieve the mib-file to which an given &lt;code&gt;oid()&lt;/code&gt; belongs.</source>
          <target state="translated">检索给定 &lt;code&gt;oid()&lt;/code&gt; 所属的mib文件。</target>
        </trans-unit>
        <trans-unit id="6d55dedfb9e83bbd10cb9e9f96986faf6a0eb090" translate="yes" xml:space="preserve">
          <source>Retrieve the value for the persistent term associated with the key &lt;code&gt;Key&lt;/code&gt;. The lookup will be made in constant time and the value will not be copied to the heap of the calling process.</source>
          <target state="translated">检索与键 &lt;code&gt;Key&lt;/code&gt; 关联的持久项的值。查找将在固定时间内进行，并且该值将不会复制到调用进程的堆中。</target>
        </trans-unit>
        <trans-unit id="2ce97c7b119f622a84d3bd15681ec77eab484e0f" translate="yes" xml:space="preserve">
          <source>Retrieve usm user config.</source>
          <target state="translated">检索usm用户配置。</target>
        </trans-unit>
        <trans-unit id="0fc5772540627f2ea7f6649c9ebcce92edee7fd7" translate="yes" xml:space="preserve">
          <source>Retrieves a generic pid of the C-node. Every C-node has a (pseudo) pid used in &lt;code&gt;ei_send_reg&lt;/code&gt;, &lt;code&gt;ei_rpc()&lt;/code&gt;, and others. This is contained in a field in the &lt;code&gt;ec&lt;/code&gt; structure. Do &lt;strong&gt;not&lt;/strong&gt; modify this structure.</source>
          <target state="translated">检索C节点的通用pid。每个C节点都有一个 &lt;code&gt;ei_send_reg&lt;/code&gt; ， &lt;code&gt;ei_rpc()&lt;/code&gt; 等使用的（伪）pid 。这包含在 &lt;code&gt;ec&lt;/code&gt; 结构的字段中。千万&lt;strong&gt;不能&lt;/strong&gt;修改这个结构。</target>
        </trans-unit>
        <trans-unit id="f971d95474a7aaf7ba0a3a08e8e1bb54f6e0db8d" translate="yes" xml:space="preserve">
          <source>Retrieves a list of all known global names.</source>
          <target state="translated">检索所有已知全局名称的列表。</target>
        </trans-unit>
        <trans-unit id="77f059fe18a8998fe23607cd9d9f051918562790" translate="yes" xml:space="preserve">
          <source>Retrieves a list of all values on the current key. The values have types corresponding to the registry types, see &lt;code&gt;&lt;a href=&quot;#value-2&quot;&gt;value/2&lt;/a&gt;&lt;/code&gt;. Calls the Win32 API function &lt;code&gt;EnumRegValuesEx()&lt;/code&gt;.</source>
          <target state="translated">检索当前键上所有值的列表。这些值具有与注册表类型相对应的类型，请参见 &lt;code&gt;&lt;a href=&quot;#value-2&quot;&gt;value/2&lt;/a&gt;&lt;/code&gt; 。调用Win32 API函数 &lt;code&gt;EnumRegValuesEx()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2be5bbae4bd62f61c8d1df623c4813ba30080529" translate="yes" xml:space="preserve">
          <source>Retrieves configuration stored with &lt;code&gt;write_config(Data)&lt;/code&gt;.</source>
          <target state="translated">检索使用 &lt;code&gt;write_config(Data)&lt;/code&gt; 存储的配置。</target>
        </trans-unit>
        <trans-unit id="b59675caaf402ed44ac06666148753ec422a80b1" translate="yes" xml:space="preserve">
          <source>Retrieves information about a connection. The list &lt;code&gt;Keys&lt;/code&gt; defines which information that is returned.</source>
          <target state="translated">检索有关连接的信息。 &lt;code&gt;Keys&lt;/code&gt; 列表定义了返回的信息。</target>
        </trans-unit>
        <trans-unit id="c62fd3c8db94f2ecb5d2fae829a42891b9817f97" translate="yes" xml:space="preserve">
          <source>Retrieves information about a file. Returns &lt;code&gt;{ok, FileInfo}&lt;/code&gt; if successful, otherwise &lt;code&gt;error&lt;/code&gt;. &lt;code&gt;FileInfo&lt;/code&gt; is a record &lt;code&gt;file_info&lt;/code&gt;, defined in the Kernel include file &lt;code&gt;file.hrl&lt;/code&gt;. Include the following directive in the module from which the function is called:</source>
          <target state="translated">检索有关文件的信息。如果成功，则返回 &lt;code&gt;{ok, FileInfo}&lt;/code&gt; ，否则返回 &lt;code&gt;error&lt;/code&gt; 。 &lt;code&gt;FileInfo&lt;/code&gt; 是一个记录 &lt;code&gt;file_info&lt;/code&gt; ，在内核包含文件 &lt;code&gt;file.hrl&lt;/code&gt; 中定义。在调用该函数的模块中包含以下指令：</target>
        </trans-unit>
        <trans-unit id="fe76411933e9e2e81fdcf0338d7957f7bda42a01" translate="yes" xml:space="preserve">
          <source>Retrieves information about a file. Returns &lt;code&gt;{ok, FileInfo}&lt;/code&gt; if successful, otherwise &lt;code&gt;{error, Reason}&lt;/code&gt;. &lt;code&gt;FileInfo&lt;/code&gt; is a record &lt;code&gt;file_info&lt;/code&gt;, defined in the Kernel include file &lt;code&gt;file.hrl&lt;/code&gt;. Include the following directive in the module from which the function is called:</source>
          <target state="translated">检索有关文件的信息。如果成功，则返回 &lt;code&gt;{ok, FileInfo}&lt;/code&gt; ，否则返回 &lt;code&gt;{error, Reason}&lt;/code&gt; 。 &lt;code&gt;FileInfo&lt;/code&gt; 是一个记录 &lt;code&gt;file_info&lt;/code&gt; ，在内核包含文件 &lt;code&gt;file.hrl&lt;/code&gt; 中定义。在调用该函数的模块中包含以下指令：</target>
        </trans-unit>
        <trans-unit id="d2276be2f2c3029568caafee6e887d81c617a51b" translate="yes" xml:space="preserve">
          <source>Retrieves information about the C-node. These values are initially set with &lt;code&gt;erl_connect_init()&lt;/code&gt; or &lt;code&gt;erl_connect_xinit()&lt;/code&gt;.</source>
          <target state="translated">检索有关C节点的信息。这些值最初是使用 &lt;code&gt;erl_connect_init()&lt;/code&gt; 或 &lt;code&gt;erl_connect_xinit()&lt;/code&gt; 设置的。</target>
        </trans-unit>
        <trans-unit id="3ec85b06183feb13e2594732aca3a501dd9750a6" translate="yes" xml:space="preserve">
          <source>Retrieves the binding of &lt;code&gt;Var&lt;/code&gt;. This function is intended to be used by the conditional function of a breakpoint.</source>
          <target state="translated">检索 &lt;code&gt;Var&lt;/code&gt; 的绑定。该功能旨在由断点的条件功能使用。</target>
        </trans-unit>
        <trans-unit id="952c5ae51d3a297be343234997d87d013a82d0b3" translate="yes" xml:space="preserve">
          <source>Retrieves the driver queue as a pointer to an array of &lt;code&gt;SysIOVec&lt;/code&gt;s. It also returns the number of elements in &lt;code&gt;vlen&lt;/code&gt;. This is one of two ways to get data out of the queue.</source>
          <target state="translated">检索驱动程序队列，作为指向 &lt;code&gt;SysIOVec&lt;/code&gt; 数组的指针。它还返回 &lt;code&gt;vlen&lt;/code&gt; 中的元素数。这是从队列中获取数据的两种方法之一。</target>
        </trans-unit>
        <trans-unit id="c07292a4b963b263d1b6cc1646b4c6d5902c86d7" translate="yes" xml:space="preserve">
          <source>Retrieves the driver queue into a supplied &lt;code&gt;ErlIOVec&lt;/code&gt;&lt;code&gt;ev&lt;/code&gt;. It also returns the queue size. This is one of two ways to get data out of the queue.</source>
          <target state="translated">将驱动程序队列检索到提供的 &lt;code&gt;ErlIOVec&lt;/code&gt; &lt;code&gt;ev&lt;/code&gt; 中。它还返回队列大小。这是从队列中获取数据的两种方法之一。</target>
        </trans-unit>
        <trans-unit id="a894c3ff79393666e5c7b22a004ebacc352e97d6" translate="yes" xml:space="preserve">
          <source>Retrieves the named value (or default) on the current key. Registry values of type &lt;code&gt;REG_SZ&lt;/code&gt; are returned as strings. Type &lt;code&gt;REG_DWORD&lt;/code&gt; values are returned as integers. All other types are returned as binaries.</source>
          <target state="translated">检索当前键上的命名值（或默认值）。 &lt;code&gt;REG_SZ&lt;/code&gt; 类型的注册表值作为字符串返回。 &lt;code&gt;REG_DWORD&lt;/code&gt; 类型的值以整数形式返回。所有其他类型都以二进制形式返回。</target>
        </trans-unit>
        <trans-unit id="245670a16c43ecee47979e6d1e5f4fdfc89b0df2" translate="yes" xml:space="preserve">
          <source>Retrieves the names of all files in the tar file &lt;code&gt;Name&lt;/code&gt;.</source>
          <target state="translated">检索tar文件 &lt;code&gt;Name&lt;/code&gt; 中所有文件的名称。</target>
        </trans-unit>
        <trans-unit id="d564b671e170b3431e838ae67d5ab7768b72f2e4" translate="yes" xml:space="preserve">
          <source>Retrieves the number of columns of the &lt;code&gt;IoDevice&lt;/code&gt; (that is, the width of a terminal). The function succeeds for terminal devices and returns &lt;code&gt;{error, enotsup}&lt;/code&gt; for all other I/O devices.</source>
          <target state="translated">检索 &lt;code&gt;IoDevice&lt;/code&gt; 的列数（即终端的宽度）。该函数对于终端设备成功执行 &lt;code&gt;{error, enotsup}&lt;/code&gt; 对于所有其他I / O设备返回{error，enotsup}。</target>
        </trans-unit>
        <trans-unit id="e778e49b2d71c140dcdf03681dbceb1ae0cc20b4" translate="yes" xml:space="preserve">
          <source>Retrieves the number of rows of &lt;code&gt;IoDevice&lt;/code&gt; (that is, the height of a terminal). The function only succeeds for terminal devices, for all other I/O devices the function returns &lt;code&gt;{error, enotsup}&lt;/code&gt;.</source>
          <target state="translated">检索 &lt;code&gt;IoDevice&lt;/code&gt; 的行数（即终端的高度）。该功能仅对终端设备成功，对于所有其他I / O设备，该功能返回 &lt;code&gt;{error, enotsup}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0bb6456edb698b942587d5fb778ec0a6722ce718" translate="yes" xml:space="preserve">
          <source>Retrieves the options currently used by the client.</source>
          <target state="translated">检索客户端当前使用的选项。</target>
        </trans-unit>
        <trans-unit id="76466246f8a47a437b9e1621604ae79ee0d8b373" translate="yes" xml:space="preserve">
          <source>Retrieves the pid of the C-node. Every C-node has a (pseudo) pid used in &lt;code&gt;ei_send_reg&lt;/code&gt;, &lt;code&gt;ei_rpc&lt;/code&gt;, and others. This is contained in a field in the &lt;code&gt;ec&lt;/code&gt; structure. It will be safe for a long time to fetch this field directly from the &lt;code&gt;ei_cnode&lt;/code&gt; structure.</source>
          <target state="translated">检索C节点的pid。每个C节点都有一个 &lt;code&gt;ei_send_reg&lt;/code&gt; ， &lt;code&gt;ei_rpc&lt;/code&gt; 等使用的（伪）pid 。这包含在 &lt;code&gt;ec&lt;/code&gt; 结构的字段中。很长时间直接从 &lt;code&gt;ei_cnode&lt;/code&gt; 结构中获取此字段将是安全的。</target>
        </trans-unit>
        <trans-unit id="aabdb36347cbaff97e37db5db212dc599e8b84b1" translate="yes" xml:space="preserve">
          <source>Retrieves the value of an environment variable.</source>
          <target state="translated">检索环境变量的值。</target>
        </trans-unit>
        <trans-unit id="5a702c3a25b2ca721ccd72b7aec2133da01de553" translate="yes" xml:space="preserve">
          <source>Retrieves the value stored with &lt;code&gt;Key&lt;/code&gt; in &lt;code&gt;Tree&lt;/code&gt;. Assumes that the key is present in the tree, crashes otherwise.</source>
          <target state="translated">检索使用 &lt;code&gt;Key&lt;/code&gt; 存储在 &lt;code&gt;Tree&lt;/code&gt; 中的值。假设密钥在树中存在，否则崩溃。</target>
        </trans-unit>
        <trans-unit id="365e0b9a2c74435c6a6c1ad0890a323996a844d1" translate="yes" xml:space="preserve">
          <source>Retrieving Current OTP Version</source>
          <target state="translated">检索当前OTP版本</target>
        </trans-unit>
        <trans-unit id="59fedfa91c0565ade05984a3af8146c0a81048c8" translate="yes" xml:space="preserve">
          <source>Retrieving data from DBMS is usually to be done with the functions &lt;code&gt;&lt;a href=&quot;mnesia#read-3&quot;&gt;mnesia:read/3&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;mnesia#read-2&quot;&gt;mnesia:read/1&lt;/a&gt;&lt;/code&gt;. The following function raises the salary:</source>
          <target state="translated">通常要使用功能 &lt;code&gt;&lt;a href=&quot;mnesia#read-3&quot;&gt;mnesia:read/3&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;mnesia#read-2&quot;&gt;mnesia:read/1&lt;/a&gt;&lt;/code&gt; 从DBMS检索数据。以下功能提高工资：</target>
        </trans-unit>
        <trans-unit id="d886a95270a0b97b770f611dbef1f5da0d79dcec" translate="yes" xml:space="preserve">
          <source>Retrieving/generating the response.</source>
          <target state="translated">检索/生成答复。</target>
        </trans-unit>
        <trans-unit id="24f096b221f9534bcad007f2b5a32b490950b5b5" translate="yes" xml:space="preserve">
          <source>Return</source>
          <target state="translated">Return</target>
        </trans-unit>
        <trans-unit id="cc15ba53eed9cac3cb103f31237c1c8cb9da235a" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;Token&lt;/code&gt; and is last token in a tokens call.</source>
          <target state="translated">返回 &lt;code&gt;Token&lt;/code&gt; 并且是令牌调用中的最后一个令牌。</target>
        </trans-unit>
        <trans-unit id="96fed125f9b4a3ff4eafa9dc4ab9f431753358e2" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;Token&lt;/code&gt; to the caller.</source>
          <target state="translated">将 &lt;code&gt;Token&lt;/code&gt; 返回给调用者。</target>
        </trans-unit>
        <trans-unit id="1a1c978f872f3e9d4cbb152e995b6529af78529a" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;true&lt;/code&gt; if the host name part of the &lt;code&gt;NodeName&lt;/code&gt; is valid for use with this protocol; otherwise, &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;NodeName&lt;/code&gt; 的主机名部分对于该协议有效，则返回 &lt;code&gt;true&lt;/code&gt; ;否则，返回true。否则为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c835ade1ee058ea2528895c15193d9d02d86145e" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;true&lt;/code&gt; if the module has native compiled code. Return &lt;code&gt;false&lt;/code&gt; otherwise. In a system compiled without HiPE support, the result is always &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">如果模块具有本机编译代码，则返回 &lt;code&gt;true&lt;/code&gt; 。否则返回 &lt;code&gt;false&lt;/code&gt; 。在没有HiPE支持的编译系统中，结果始终为 &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="13532ab427d3f5c254e071d7934ca748721f8b88" translate="yes" xml:space="preserve">
          <source>Return a &lt;code&gt;{{Counter, Ref}, non_neg_integer()}&lt;/code&gt; list of counter values. &lt;code&gt;Ref&lt;/code&gt; can be either a &lt;code&gt;&lt;code&gt;&lt;a href=&quot;#transport_ref&quot;&gt;transport_ref()&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; or a &lt;code&gt;&lt;code&gt;diameter_app:peer_ref()&lt;/code&gt;&lt;/code&gt;. Entries for the latter are folded into corresponding entries for the former as peer connections go down. Entries for both are removed at &lt;code&gt;&lt;a href=&quot;#remove_transport-2&quot;&gt;remove_transport/2&lt;/a&gt;&lt;/code&gt;. The Diameter-level statistics returned by &lt;code&gt;transport&lt;/code&gt; and &lt;code&gt;connections&lt;/code&gt; info are based upon these entries.</source>
          <target state="translated">返回 &lt;code&gt;{{Counter, Ref}, non_neg_integer()}&lt;/code&gt; 计数器值列表。 &lt;code&gt;Ref&lt;/code&gt; 可以是 &lt;code&gt;&lt;code&gt;&lt;a href=&quot;#transport_ref&quot;&gt;transport_ref()&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;code&gt;diameter_app:peer_ref()&lt;/code&gt;&lt;/code&gt; 。当对等连接断开时，后者的条目将折叠为前者的相应条目。两者的条目都在 &lt;code&gt;&lt;a href=&quot;#remove_transport-2&quot;&gt;remove_transport/2&lt;/a&gt;&lt;/code&gt; 处删除。 &lt;code&gt;transport&lt;/code&gt; 和 &lt;code&gt;connections&lt;/code&gt; 信息返回的直径级别统计信息基于这些条目。</target>
        </trans-unit>
        <trans-unit id="1bb16078b0f2378184a73700819de4ceef71e2e5" translate="yes" xml:space="preserve">
          <source>Return a capability value as configured with &lt;code&gt;&lt;a href=&quot;#start_service-2&quot;&gt;start_service/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回使用 &lt;code&gt;&lt;a href=&quot;#start_service-2&quot;&gt;start_service/2&lt;/a&gt;&lt;/code&gt; 配置的功能值。</target>
        </trans-unit>
        <trans-unit id="9536f6bbba6fdc1b7d0b454be9dde8f6750a2209" translate="yes" xml:space="preserve">
          <source>Return a list containing one entry for each of the service's transport as configured with &lt;code&gt;&lt;a href=&quot;#add_transport-2&quot;&gt;add_transport/2&lt;/a&gt;&lt;/code&gt;. Each entry is a tagged list containing both configuration and information about established peer connections. An example return value with for a client service with Origin-Host &quot;client.example.com&quot; configured with a single transport connected to &quot;server.example.com&quot; might look as follows.</source>
          <target state="translated">返回一个列表，其中包含使用 &lt;code&gt;&lt;a href=&quot;#add_transport-2&quot;&gt;add_transport/2&lt;/a&gt;&lt;/code&gt; 配置的每个服务传输的一个条目。每个条目都是一个标记列表，其中包含配置和有关已建立对等连接的信息。对于带有原始主机&amp;ldquo; client.example.com&amp;rdquo;且配置了单个传输连接到&amp;ldquo; server.example.com&amp;rdquo;的客户端服务的示例返回值，可能如下所示。</target>
        </trans-unit>
        <trans-unit id="e3714b9f4dba0aac8c1334a0e9085f3405a08f7a" translate="yes" xml:space="preserve">
          <source>Return a list containing one entry for every established transport connection whose watchdog state machine is not in the &lt;code&gt;down&lt;/code&gt; state. This is a flat view of &lt;code&gt;transport&lt;/code&gt; info which lists only active connections and for which Diameter-level statistics are accumulated only for the lifetime of the transport connection. A return value for the server above might look as follows.</source>
          <target state="translated">对于每个其看门狗状态机未处于 &lt;code&gt;down&lt;/code&gt; 状态的已建立传输连接，返回一个包含一个条目的列表。这是 &lt;code&gt;transport&lt;/code&gt; 信息的平面视图，其中仅列出了活动的连接，并且仅在传输连接的生命周期内累积了直径级别的统计信息。上面服务器的返回值可能如下所示。</target>
        </trans-unit>
        <trans-unit id="db261cceb040f1c9828fe3d4c6c1a35462982fe0" translate="yes" xml:space="preserve">
          <source>Return a reasonable value for use as Origin-State-Id in outgoing messages.</source>
          <target state="translated">返回一个合理的值,作为发信的原点-状态-ID。</target>
        </trans-unit>
        <trans-unit id="2b57b27e4df9b1ae0072d43165d38c155eb66de4" translate="yes" xml:space="preserve">
          <source>Return a scheduler utilization sample for all schedulers, including dirty-io schedulers.</source>
          <target state="translated">返回所有调度器的利用率样本,包括dirty-io调度器。</target>
        </trans-unit>
        <trans-unit id="e48ca14d3d26b2f077fe65868bb3fe756cfe0117" translate="yes" xml:space="preserve">
          <source>Return a scheduler utilization sample for normal and dirty-cpu schedulers.</source>
          <target state="translated">返回正常和dirty-cpu调度器的调度器利用率样本。</target>
        </trans-unit>
        <trans-unit id="189e6f742d0287bea7092b8b595dda21405a8676" translate="yes" xml:space="preserve">
          <source>Return a specification of the target system. The actual target system can be created with &lt;code&gt;reltool:eval_target_spec/3&lt;/code&gt;.</source>
          <target state="translated">返回目标系统的规范。可以使用 &lt;code&gt;reltool:eval_target_spec/3&lt;/code&gt; 创建实际的目标系统。</target>
        </trans-unit>
        <trans-unit id="2aa7025ff201afee814f6c2a93ae1bcb0ae4ca05" translate="yes" xml:space="preserve">
          <source>Return a table handle.</source>
          <target state="translated">返回一个表柄。</target>
        </trans-unit>
        <trans-unit id="5f2413dd20c0e576107037d6e42aeba92e71c7df" translate="yes" xml:space="preserve">
          <source>Return a tagged list of all capabilities values as configured with &lt;code&gt;&lt;a href=&quot;#start_service-2&quot;&gt;start_service/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回使用 &lt;code&gt;&lt;a href=&quot;#start_service-2&quot;&gt;start_service/2&lt;/a&gt;&lt;/code&gt; 配置的所有功能值的标记列表。</target>
        </trans-unit>
        <trans-unit id="a8294e0b56eeb80e5eba4768dcc17c3d64870430" translate="yes" xml:space="preserve">
          <source>Return a the identity of the globally registered collector if there is any.</source>
          <target state="translated">如果有的话,返回全球注册的收集器的身份。</target>
        </trans-unit>
        <trans-unit id="eb494e14037837ccce72584c6526f5505b46a441" translate="yes" xml:space="preserve">
          <source>Return a timestamp that can be inserted as the &lt;code&gt;time&lt;/code&gt; field in the meta data for a log event. It is produced with &lt;code&gt; os:system_time(microsecond)&lt;/code&gt;.</source>
          <target state="translated">返回一个时间戳，该时间戳可以作为 &lt;code&gt;time&lt;/code&gt; 字段插入日志事件的元数据中。它由 &lt;code&gt; os:system_time(microsecond)&lt;/code&gt; 产生。</target>
        </trans-unit>
        <trans-unit id="9f6b885db67cca106a9b569ccd725228af91846d" translate="yes" xml:space="preserve">
          <source>Return a value for a Session-Id AVP.</source>
          <target state="translated">返回一个Session-Id AVP的值。</target>
        </trans-unit>
        <trans-unit id="ba6a05dfc89724422c5b71e06eeac07f56af24ec" translate="yes" xml:space="preserve">
          <source>Return all records in the mib-storage table in the form of a list.</source>
          <target state="translated">以列表的形式返回mib存储表中的所有记录。</target>
        </trans-unit>
        <trans-unit id="c8a7afda668c35cdafcb1e64da708b8cf8d41b06" translate="yes" xml:space="preserve">
          <source>Return an ordered list of the metavariables in the template.</source>
          <target state="translated">返回模板中元变量的有序列表。</target>
        </trans-unit>
        <trans-unit id="9f4c3667b1add8d5e02e30fe75d8033f0bfc2e96" translate="yes" xml:space="preserve">
          <source>Return comment tokens.</source>
          <target state="translated">返回评论令牌。</target>
        </trans-unit>
        <trans-unit id="785922d0c7990e6a6337740a8132f1efba76556b" translate="yes" xml:space="preserve">
          <source>Return compiler options given via the environment variable &lt;code&gt;ERL_COMPILER_OPTIONS&lt;/code&gt;. If the value is a list, it is returned as is. If it is not a list, it is put into a list.</source>
          <target state="translated">返回通过环境变量 &lt;code&gt;ERL_COMPILER_OPTIONS&lt;/code&gt; 给出的编译器选项。如果该值为列表，则按原样返回。如果不是列表，则将其放入列表中。</target>
        </trans-unit>
        <trans-unit id="3a91241898b1cdf912dffef4b52f8226b582dd1e" translate="yes" xml:space="preserve">
          <source>Return information about a counter array in a map. The map has the following keys (at least):</source>
          <target state="translated">返回地图中一个计数器数组的信息。该地图有以下键(至少)。</target>
        </trans-unit>
        <trans-unit id="4afe5c3542f3f32911baf31fbf610eaf8e8a9d8d" translate="yes" xml:space="preserve">
          <source>Return information about a started service. Requesting info for an unknown service causes &lt;code&gt;undefined&lt;/code&gt; to be returned. Requesting a list of items causes a tagged list to be returned.</source>
          <target state="translated">返回有关已启动服务的信息。请求未知服务的信息会导致返回 &lt;code&gt;undefined&lt;/code&gt; 。请求项目列表会导致返回带标签的列表。</target>
        </trans-unit>
        <trans-unit id="b54691c0bc9fdd076b7afe264a3151b4619e0ab4" translate="yes" xml:space="preserve">
          <source>Return information about an atomic array in a map. The map has the following keys:</source>
          <target state="translated">返回地图中原子数组的信息。地图有以下几个键。</target>
        </trans-unit>
        <trans-unit id="3520a8e67d6b1af223fd5a26d9975111c35a17a8" translate="yes" xml:space="preserve">
          <source>Return information about persistent terms in a map. The map has the following keys:</source>
          <target state="translated">返回地图中持久性术语的信息。地图有以下键。</target>
        </trans-unit>
        <trans-unit id="bcd34f9aa0dee036d0db04e93eacf17e6bece459" translate="yes" xml:space="preserve">
          <source>Return node names held by the registrar for the given host.</source>
          <target state="translated">返回给定主机的注册商持有的节点名称。</target>
        </trans-unit>
        <trans-unit id="2571d001168cc2206e4af757b7833aa1343124ab" translate="yes" xml:space="preserve">
          <source>Return only &lt;code&gt;&lt;a href=&quot;time_correction#Strictly_Monotonically_Increasing&quot;&gt; strictly monotonically increasing&lt;/a&gt;&lt;/code&gt; integer corresponding to creation time.</source>
          <target state="translated">仅返回与创建时间相对应的 &lt;code&gt;&lt;a href=&quot;time_correction#Strictly_Monotonically_Increasing&quot;&gt; strictly monotonically increasing&lt;/a&gt;&lt;/code&gt; 整数。</target>
        </trans-unit>
        <trans-unit id="996ea5173163b123ed6a043649459919ca914183" translate="yes" xml:space="preserve">
          <source>Return only &lt;code&gt;&lt;a href=&quot;time_correction#Strictly_Monotonically_Increasing&quot;&gt;strictly monotonically increasing&lt;/a&gt;&lt;/code&gt; integer corresponding to creation time.</source>
          <target state="translated">仅返回与创建时间相对应的 &lt;code&gt;&lt;a href=&quot;time_correction#Strictly_Monotonically_Increasing&quot;&gt;strictly monotonically increasing&lt;/a&gt;&lt;/code&gt; 整数。</target>
        </trans-unit>
        <trans-unit id="73fec507617851a521471bf50b4848c38830e262" translate="yes" xml:space="preserve">
          <source>Return only positive integers.</source>
          <target state="translated">只返回正整数。</target>
        </trans-unit>
        <trans-unit id="9c2362dda30d47eb99dd0cab5c2b8fa38f869f8c" translate="yes" xml:space="preserve">
          <source>Return results in a &lt;code&gt;{ok, [Out]}&lt;/code&gt; tuple instead of writing to file and returning &lt;code&gt;ok&lt;/code&gt;.</source>
          <target state="translated">返回结果为 &lt;code&gt;{ok, [Out]}&lt;/code&gt; 元组，而不是写入文件并返回 &lt;code&gt;ok&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a7477004a5281500cb3c9c08e52d597bf21bd1bf" translate="yes" xml:space="preserve">
          <source>Return the ID for the engine, or an empty binary if there is no id set.</source>
          <target state="translated">返回发动机的ID,如果没有设置ID,则返回一个空的二进制。</target>
        </trans-unit>
        <trans-unit id="1605a6115da3ce13cb5f780dbe48e8b135673745" translate="yes" xml:space="preserve">
          <source>Return the address of the given node. If not implemented, &lt;code&gt; erl_epmd:address_please/3&lt;/code&gt; will be used instead.</source>
          <target state="translated">返回给定节点的地址。如果未实现， &lt;code&gt; erl_epmd:address_please/3&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8e6d34509ab6610cf83be325f59f6c39943cfea5" translate="yes" xml:space="preserve">
          <source>Return the address of the given node. If not implemented, &lt;code&gt;inet:gethostbyname/1&lt;/code&gt; will be used instead</source>
          <target state="translated">返回给定节点的地址。如果未实现，则将使用 &lt;code&gt;inet:gethostbyname/1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="292859966a655edc4054e4f1076d2fed6b650843" translate="yes" xml:space="preserve">
          <source>Return the defining parameters of a elliptic curve.</source>
          <target state="translated">返回椭圆曲线的定义参数。</target>
        </trans-unit>
        <trans-unit id="08d6beff9271fb403fee80042fc6e6442d0f5864" translate="yes" xml:space="preserve">
          <source>Return the distribution port used by the given node.</source>
          <target state="translated">返回给定节点使用的分配端口。</target>
        </trans-unit>
        <trans-unit id="026ca738a4e24775b52601dc015e85dbf9838772" translate="yes" xml:space="preserve">
          <source>Return the list of applications as configured with &lt;code&gt;&lt;a href=&quot;#start_service-2&quot;&gt;start_service/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回使用 &lt;code&gt;&lt;a href=&quot;#start_service-2&quot;&gt;start_service/2&lt;/a&gt;&lt;/code&gt; 配置的应用程序列表。</target>
        </trans-unit>
        <trans-unit id="8760f4dfa12986348ea3b742e129cc7f36b461e8" translate="yes" xml:space="preserve">
          <source>Return the list of body subtrees of a &lt;code&gt;clause&lt;/code&gt; node.</source>
          <target state="translated">返回 &lt;code&gt;clause&lt;/code&gt; 节点的主体子树的列表。</target>
        </trans-unit>
        <trans-unit id="415e4cccd2b2511ca9972eccc4412def66ed17df" translate="yes" xml:space="preserve">
          <source>Return the list of started services.</source>
          <target state="translated">返回已启动服务的列表。</target>
        </trans-unit>
        <trans-unit id="fcd36f7d46518bde4d7047a8c34350a7a2893827" translate="yes" xml:space="preserve">
          <source>Return the name (eg a description) for the engine, or an empty binary if there is no name set.</source>
          <target state="translated">返回引擎的名称(例如描述),如果没有设置名称,则返回一个空的二进制。</target>
        </trans-unit>
        <trans-unit id="869a332a11dcce537fc74b533f9961fb120feb39" translate="yes" xml:space="preserve">
          <source>Return the number of matching functions that can have call count breakpoints, the same as &lt;code&gt;start/0..3&lt;/code&gt; with the same arguments would have returned.</source>
          <target state="translated">返回可以具有调用计数断点的匹配函数的数量，与具有相同参数的 &lt;code&gt;start/0..3&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="545eef5a0d17878bc6d57549235644bab28f7ff8" translate="yes" xml:space="preserve">
          <source>Return the number of matching functions that has got call count breakpoints.</source>
          <target state="translated">返回有调用次数断点的匹配函数的数量。</target>
        </trans-unit>
        <trans-unit id="7e5e938f9ef6efcb110c9fb8e3ee0c48e7a20886" translate="yes" xml:space="preserve">
          <source>Return the port the local node should listen to. If not implemented, &lt;code&gt; erl_epmd:listen_port_please/2&lt;/code&gt; will be used instead.</source>
          <target state="translated">返回本地节点应侦听的端口。如果未实现， &lt;code&gt; erl_epmd:listen_port_please/2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6ecb156241944c24df7a613253421fdcbcc3e0d5" translate="yes" xml:space="preserve">
          <source>Return the process identifier of the server process.</source>
          <target state="translated">返回服务器进程的进程标识符。</target>
        </trans-unit>
        <trans-unit id="596033205682a5c5f39f8c045be421baf09bdbad" translate="yes" xml:space="preserve">
          <source>Return transport configuration associated with a single peer, as passed to &lt;code&gt;&lt;a href=&quot;#add_transport-2&quot;&gt;add_transport/2&lt;/a&gt;&lt;/code&gt;. The returned list is empty if the peer is unknown. Otherwise it contains the &lt;code&gt;ref&lt;/code&gt;, &lt;code&gt;type&lt;/code&gt; and &lt;code&gt;options&lt;/code&gt; tuples as in &lt;code&gt;transport&lt;/code&gt; and &lt;code&gt;connections&lt;/code&gt; info above. For example:</source>
          <target state="translated">返回传递给 &lt;code&gt;&lt;a href=&quot;#add_transport-2&quot;&gt;add_transport/2&lt;/a&gt;&lt;/code&gt; 的与单个对等方关联的传输配置。如果对等方未知，则返回的列表为空。否则，它包含 &lt;code&gt;ref&lt;/code&gt; ， &lt;code&gt;type&lt;/code&gt; 和 &lt;code&gt;options&lt;/code&gt; 元组，如上面的 &lt;code&gt;transport&lt;/code&gt; 和 &lt;code&gt;connections&lt;/code&gt; 信息所示。例如：</target>
        </trans-unit>
        <trans-unit id="5b25b7bff97770cbd71aa2bcb0ba6cc19819e76b" translate="yes" xml:space="preserve">
          <source>Return true if &lt;code&gt;term&lt;/code&gt; is an exception.</source>
          <target state="translated">如果 &lt;code&gt;term&lt;/code&gt; 是一个例外，则返回true 。</target>
        </trans-unit>
        <trans-unit id="232f3db04c4faa620bfbfc11fd3689a472ef9881" translate="yes" xml:space="preserve">
          <source>Return value</source>
          <target state="translated">返回值</target>
        </trans-unit>
        <trans-unit id="18d44aa00d4d2f1a0de4ecac8687cabb586ac03d" translate="yes" xml:space="preserve">
          <source>Return value from an &lt;code&gt;ssh_sftp&lt;/code&gt; function.</source>
          <target state="translated">从 &lt;code&gt;ssh_sftp&lt;/code&gt; 函数返回值。</target>
        </trans-unit>
        <trans-unit id="15ca73f2f5111db142fa1677fa53bcbbbe25265a" translate="yes" xml:space="preserve">
          <source>Return value from the &lt;code&gt;&lt;a href=&quot;#start_monitor-3&quot;&gt;start_monitor()&lt;/a&gt;&lt;/code&gt; functions.</source>
          <target state="translated">从 &lt;code&gt;&lt;a href=&quot;#start_monitor-3&quot;&gt;start_monitor()&lt;/a&gt;&lt;/code&gt; 函数返回的值。</target>
        </trans-unit>
        <trans-unit id="74b0ed4d90174dc240782b3f46a02bad9a5dc4ff" translate="yes" xml:space="preserve">
          <source>Return value from the &lt;code&gt;start()&lt;/code&gt; and &lt;code&gt;start_link()&lt;/code&gt; functions, for example, &lt;code&gt;&lt;a href=&quot;#start_link-3&quot;&gt;start_link/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;start()&lt;/code&gt; 和 &lt;code&gt;start_link()&lt;/code&gt; 函数返回值，例如 &lt;code&gt;&lt;a href=&quot;#start_link-3&quot;&gt;start_link/3&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3163d3a67f9c0a3df18a0b32a1848d46a7cae484" translate="yes" xml:space="preserve">
          <source>Return value from the start functions, for example, &lt;code&gt;&lt;a href=&quot;#start_link-3&quot;&gt;start_link/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">启动函数的返回值，例如 &lt;code&gt;&lt;a href=&quot;#start_link-3&quot;&gt;start_link/3&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d184302be65b0501c434c989ce960b469d8ab2e9" translate="yes" xml:space="preserve">
          <source>Return value is &lt;code&gt;0&lt;/code&gt;, unless the &lt;code&gt;timeout&lt;/code&gt; driver function is &lt;code&gt;NULL&lt;/code&gt;, in which case it is &lt;code&gt;-1&lt;/code&gt;.</source>
          <target state="translated">返回值是 &lt;code&gt;0&lt;/code&gt; ，除非 &lt;code&gt;timeout&lt;/code&gt; 驱动程序函数为 &lt;code&gt;NULL&lt;/code&gt; ，在这种情况下为 &lt;code&gt;-1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="96fea8b0d50097ba90dc772858137eba9d19f503" translate="yes" xml:space="preserve">
          <source>Return values from the &lt;code&gt;&lt;a href=&quot;#connection_info-1&quot;&gt;connection_info/1&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#connection_info-2&quot;&gt;connection_info/2&lt;/a&gt;&lt;/code&gt; functions.</source>
          <target state="translated">从 &lt;code&gt;&lt;a href=&quot;#connection_info-1&quot;&gt;connection_info/1&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;#connection_info-2&quot;&gt;connection_info/2&lt;/a&gt;&lt;/code&gt; 函数返回值。</target>
        </trans-unit>
        <trans-unit id="49211521a2e244070078ee73adede17bc6389865" translate="yes" xml:space="preserve">
          <source>Return values from the &lt;code&gt;&lt;a href=&quot;#daemon_info-1&quot;&gt;daemon_info/1&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#daemon_info-2&quot;&gt;daemon_info/2&lt;/a&gt;&lt;/code&gt; functions.</source>
          <target state="translated">从 &lt;code&gt;&lt;a href=&quot;#daemon_info-1&quot;&gt;daemon_info/1&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;#daemon_info-2&quot;&gt;daemon_info/2&lt;/a&gt;&lt;/code&gt; 函数返回值。</target>
        </trans-unit>
        <trans-unit id="b7dcf2c29b7894fd4274d843222486a29bbac5b9" translate="yes" xml:space="preserve">
          <source>Return values:</source>
          <target state="translated">返回值:</target>
        </trans-unit>
        <trans-unit id="ff216a94df439e2821ca3664b457f212cf962310" translate="yes" xml:space="preserve">
          <source>Return white space tokens. By convention, a newline character, if present, is always the first character of the text (there cannot be more than one newline in a white space token).</source>
          <target state="translated">返回空白标记。按照惯例,如果存在换行符,则换行符总是文本的第一个字符(一个空白标记中不能有一个以上的换行符)。</target>
        </trans-unit>
        <trans-unit id="0a0f9ea4537c829f189c17c1388dd83d2074333e" translate="yes" xml:space="preserve">
          <source>ReturnFormat) -&amp;gt;</source>
          <target state="translated">ReturnFormat）-&amp;gt;</target>
        </trans-unit>
        <trans-unit id="e8872950120a8fda0116e4eeb516842552c69925" translate="yes" xml:space="preserve">
          <source>Returned by &lt;code&gt;&lt;a href=&quot;#listen-2&quot;&gt;listen/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">由 &lt;code&gt;&lt;a href=&quot;#listen-2&quot;&gt;listen/2&lt;/a&gt;&lt;/code&gt; 返回。</target>
        </trans-unit>
        <trans-unit id="f0b4bbed1147880ab3fa88ace211606ff099dbee" translate="yes" xml:space="preserve">
          <source>Returned by the functions &lt;code&gt;&lt;a href=&quot;ssh#connect-3&quot;&gt;connect/2,3,4&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;ssh_sftp#start_channel-2&quot;&gt;ssh_sftp:start_channel/2,3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">由函数 &lt;code&gt;&lt;a href=&quot;ssh#connect-3&quot;&gt;connect/2,3,4&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;ssh_sftp#start_channel-2&quot;&gt;ssh_sftp:start_channel/2,3&lt;/a&gt;&lt;/code&gt; 返回。</target>
        </trans-unit>
        <trans-unit id="80d9f2993c240cb5395538eac32a770dc645b1f7" translate="yes" xml:space="preserve">
          <source>Returned by the functions &lt;code&gt;&lt;a href=&quot;ssh#daemon-1&quot;&gt;daemon/1,2,3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">由函数 &lt;code&gt;&lt;a href=&quot;ssh#daemon-1&quot;&gt;daemon/1,2,3&lt;/a&gt;&lt;/code&gt; 返回。</target>
        </trans-unit>
        <trans-unit id="b2b499cd87149b2c8112ff4703aabf6b14742dd7" translate="yes" xml:space="preserve">
          <source>Returned by the functions &lt;code&gt;&lt;a href=&quot;ssh_connection#session_channel-2&quot;&gt;ssh_connection:session_channel/2,4&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">由函数 &lt;code&gt;&lt;a href=&quot;ssh_connection#session_channel-2&quot;&gt;ssh_connection:session_channel/2,4&lt;/a&gt;&lt;/code&gt; 返回。</target>
        </trans-unit>
        <trans-unit id="7600c8cb62b3f6c0670cf2d28c10c2d70f454cac" translate="yes" xml:space="preserve">
          <source>Returned if &lt;code&gt;Number&amp;gt;0&lt;/code&gt; and end of file was reached before anything at all could be read.</source>
          <target state="translated">如果在无法读取任何内容之前已到达 &lt;code&gt;Number&amp;gt;0&lt;/code&gt; 并且到达文件末尾，则返回。</target>
        </trans-unit>
        <trans-unit id="ebd6a9b6057141637a7f687d405ddc6223fd3a4d" translate="yes" xml:space="preserve">
          <source>Returned if end of file was reached before anything at all could be read.</source>
          <target state="translated">如果在读取任何内容之前就已经到达文件的终点,则返回。</target>
        </trans-unit>
        <trans-unit id="78f92740b63dec59bb4c6e7e6eaba8a507fff69f" translate="yes" xml:space="preserve">
          <source>Returning &lt;code&gt;{skip,Reason}&lt;/code&gt; from function &lt;code&gt;&lt;a href=&quot;common_test#Module:init_per_testcase-2&quot;&gt;init_per_testcase/2&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;common_test#Module:init_per_suite-1&quot;&gt;init_per_suite/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">从函数 &lt;code&gt;&lt;a href=&quot;common_test#Module:init_per_testcase-2&quot;&gt;init_per_testcase/2&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;common_test#Module:init_per_suite-1&quot;&gt;init_per_suite/1&lt;/a&gt;&lt;/code&gt; 返回 &lt;code&gt;{skip,Reason}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d4d1aef68ed5b30caca7270db75abd30f2c50c0e" translate="yes" xml:space="preserve">
          <source>Returning &lt;code&gt;{skip,Reason}&lt;/code&gt; from function &lt;code&gt;&lt;a href=&quot;ct_suite#Module:init_per_testcase-2&quot;&gt;init_per_testcase/2&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;ct_suite#Module:init_per_suite-1&quot;&gt;init_per_suite/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">从函数 &lt;code&gt;&lt;a href=&quot;ct_suite#Module:init_per_testcase-2&quot;&gt;init_per_testcase/2&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;ct_suite#Module:init_per_suite-1&quot;&gt;init_per_suite/1&lt;/a&gt;&lt;/code&gt; 返回 &lt;code&gt;{skip,Reason}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="79fbf73ac7c1fd87f1058ecd2cd1bb43d786dfe6" translate="yes" xml:space="preserve">
          <source>Returning &lt;code&gt;{skip,Reason}&lt;/code&gt; from the execution clause of the test case. The execution clause is called, so the author must ensure that the test case does not run.</source>
          <target state="translated">从测试用例的执行子句返回 &lt;code&gt;{skip,Reason}&lt;/code&gt; 。执行子句被调用，因此作者必须确保测试用例不运行。</target>
        </trans-unit>
        <trans-unit id="459b4d8e6cbde74f658936d4e562836d2969a920" translate="yes" xml:space="preserve">
          <source>Returning Exit Status (RFC 4254, section 6.10)</source>
          <target state="translated">返回退出状态(RFC 4254,6.10节)</target>
        </trans-unit>
        <trans-unit id="78efdce4503fc5152a50adf6376b612d02e50c2c" translate="yes" xml:space="preserve">
          <source>Returning any other value or generating an exception causes the new code to be unloaded. If the return value is not an atom, a warning error report is sent to the error logger.</source>
          <target state="translated">返回任何其他值或产生异常都会导致新代码被卸载。如果返回值不是一个原子,则会向错误记录器发送警告错误报告。</target>
        </trans-unit>
        <trans-unit id="5bafc7cb30a4a28d5f1849e1ed82229cd36e7a85" translate="yes" xml:space="preserve">
          <source>Returning anything but &lt;code&gt;ok&lt;/code&gt; or a 2xxx series result code causes the transport connection to be broken. Multiple &lt;code&gt;&lt;a href=&quot;#capabilities_cb&quot;&gt;capabilities_cb&lt;/a&gt;&lt;/code&gt; options can be specified, in which case the corresponding callbacks are applied until either all return &lt;code&gt;ok&lt;/code&gt; or one does not.</source>
          <target state="translated">返回&amp;ldquo; &lt;code&gt;ok&lt;/code&gt; &amp;rdquo;或2xxx系列结果代码以外的任何内容都会导致传输连接断开。可以指定多个 &lt;code&gt;&lt;a href=&quot;#capabilities_cb&quot;&gt;capabilities_cb&lt;/a&gt;&lt;/code&gt; 选项，在这种情况下，将应用相应的回调，直到全部返回 &lt;code&gt;ok&lt;/code&gt; 或没有返回。</target>
        </trans-unit>
        <trans-unit id="13619914603e5198752b243417d1cec7b1cbae13" translate="yes" xml:space="preserve">
          <source>Returns 0 if &lt;code&gt;cpu_sup&lt;/code&gt; is not available.</source>
          <target state="translated">如果 &lt;code&gt;cpu_sup&lt;/code&gt; 不可用，则返回0 。</target>
        </trans-unit>
        <trans-unit id="2fe7ef4689924328d121fc13015c7e449fbb3af4" translate="yes" xml:space="preserve">
          <source>Returns 0 on success, non-zero on failure.</source>
          <target state="translated">成功时返回0,失败时返回非0。</target>
        </trans-unit>
        <trans-unit id="d1bfdbf060bf2a1935f7a0e64e42eb75971f6345" translate="yes" xml:space="preserve">
          <source>Returns 0 otherwise.</source>
          <target state="translated">否则返回0。</target>
        </trans-unit>
        <trans-unit id="2fbeaf650327f2e3c58e1b893cae4fb1a66501a9" translate="yes" xml:space="preserve">
          <source>Returns &lt;code id=&quot;read_link_all&quot;&gt;{ok, Filename}&lt;/code&gt; if &lt;code&gt;Name&lt;/code&gt; refers to a symbolic link that is not a raw filename, or &lt;code&gt;{error, Reason}&lt;/code&gt; otherwise. On platforms that do not support symbolic links, the return value is &lt;code&gt;{error,enotsup}&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Name&lt;/code&gt; 引用的符号链接不是原始文件名，则返回 &lt;code id=&quot;read_link_all&quot;&gt;{ok, Filename}&lt;/code&gt; ，否则返回 &lt;code&gt;{error, Reason}&lt;/code&gt; 。在不支持符号链接的平台上，返回值为 &lt;code&gt;{error,enotsup}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c8a13c6c0607ec9a0e9c3c4823a02858da20b803" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;-1&lt;/code&gt; if &lt;code&gt;list&lt;/code&gt; is not a proper list.</source>
          <target state="translated">如果 &lt;code&gt;list&lt;/code&gt; 不是正确的列表，则返回 &lt;code&gt;-1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="488069c3cb5902ddad05d14f6565535c0efbbfa1" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;-1&lt;/code&gt; if the floating point number is not finite.</source>
          <target state="translated">如果浮点数不是有限的，则返回 &lt;code&gt;-1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6e8da0a8ae5c1d6ebbf2999c231c02b4ccea25da" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; and initializes &lt;code&gt;obuf&lt;/code&gt; on success, otherwise &lt;code&gt;-1&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;0&lt;/code&gt; ,并在成功时初始化 &lt;code&gt;obuf&lt;/code&gt; ，否则返回 &lt;code&gt;-1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d271492cad5db5bbc1155be82b3fd20cacc409d9" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; if &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are equal. Returns a value less than &lt;code&gt;0&lt;/code&gt; if &lt;code&gt;a&lt;/code&gt; compares as less than &lt;code&gt;b&lt;/code&gt;. Returns a value larger than &lt;code&gt;0&lt;/code&gt; if &lt;code&gt;a&lt;/code&gt; compares as larger than &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; 相等，则返回 &lt;code&gt;0&lt;/code&gt; 。如果 &lt;code&gt;a&lt;/code&gt; 比较小于 &lt;code&gt;b&lt;/code&gt; ,则返回小于 &lt;code&gt;0&lt;/code&gt; 的值。如果 &lt;code&gt;a&lt;/code&gt; 比较大于 &lt;code&gt;b&lt;/code&gt; ,则返回大于 &lt;code&gt;0&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="072a398ea7b2dc0fc0a565fe904090ff6d623dd0" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; if &lt;code&gt;monitor1&lt;/code&gt; and &lt;code&gt;monitor2&lt;/code&gt; are equal, &amp;lt; &lt;code&gt;0&lt;/code&gt; if &lt;code&gt;monitor1&lt;/code&gt; &amp;lt; &lt;code&gt;monitor2&lt;/code&gt;, and &amp;gt; &lt;code&gt;0&lt;/code&gt; if &lt;code&gt;monitor1&lt;/code&gt; &amp;gt; &lt;code&gt;monitor2&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;0&lt;/code&gt; 如果 &lt;code&gt;monitor1&lt;/code&gt; 和 &lt;code&gt;monitor2&lt;/code&gt; 是相等的，&amp;lt; &lt;code&gt;0&lt;/code&gt; 如果 &lt;code&gt;monitor1&lt;/code&gt; &amp;lt; &lt;code&gt;monitor2&lt;/code&gt; 和&amp;gt; &lt;code&gt;0&lt;/code&gt; 如果 &lt;code&gt;monitor1&lt;/code&gt; &amp;gt; &lt;code&gt;monitor2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7920d1afe1f77b7b2bb69b5950114ebeb3d37251" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; if &lt;code&gt;pid1&lt;/code&gt; and &lt;code&gt;pid2&lt;/code&gt; are equal, &amp;lt; &lt;code&gt;0&lt;/code&gt; if &lt;code&gt;pid1&lt;/code&gt; &amp;lt; &lt;code&gt;pid2&lt;/code&gt;, and &amp;gt; &lt;code&gt;0&lt;/code&gt; if &lt;code&gt;pid1&lt;/code&gt; &amp;gt; &lt;code&gt;pid2&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;0&lt;/code&gt; 如果 &lt;code&gt;pid1&lt;/code&gt; 和 &lt;code&gt;pid2&lt;/code&gt; 是相等的，&amp;lt; &lt;code&gt;0&lt;/code&gt; 如果 &lt;code&gt;pid1&lt;/code&gt; &amp;lt; &lt;code&gt;pid2&lt;/code&gt; 和&amp;gt; &lt;code&gt;0&lt;/code&gt; 如果 &lt;code&gt;pid1&lt;/code&gt; &amp;gt; &lt;code&gt;pid2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f42b6d3dd05f623e6c9a461536fab61de5146090" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; if a monitor was removed and &amp;gt; 0 if the monitor no longer exists.</source>
          <target state="translated">如果删除了监视器，则返回 &lt;code&gt;0&lt;/code&gt; ;如果监视器不存在，则返回&amp;gt; 0。</target>
        </trans-unit>
        <trans-unit id="f3130b22d79e0594cbfee4806066831a780e431e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; if it was a bit string term.</source>
          <target state="translated">如果是位字符串项，则返回 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fbcc999b8ba8bb8fb081510096a443737b55216e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; if successful, otherwise &lt;code&gt;-1&lt;/code&gt;. In the latter case it sets &lt;code&gt;erl_errno&lt;/code&gt; to &lt;code&gt;EIO&lt;/code&gt;.</source>
          <target state="translated">如果成功，则返回 &lt;code&gt;0&lt;/code&gt; ，否则返回 &lt;code&gt;-1&lt;/code&gt; 。在后一种情况下，它将 &lt;code&gt;erl_errno&lt;/code&gt; 设置为 &lt;code&gt;EIO&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dd74052a4956a0a756749720fbbf26847c93e18f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; if the monitor was successfully identified and removed. Returns a non-zero value if the monitor could not be identified, which means it was either</source>
          <target state="translated">如果成功识别并除去了监视器，则返回 &lt;code&gt;0&lt;/code&gt; 。如果无法识别监视器，则返回非零值，这意味着它是</target>
        </trans-unit>
        <trans-unit id="a1cd3df7b26605f1b8a43bc02fca546fec8ce909" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; if the terms are equal, &lt;code&gt;-1&lt;/code&gt; if &lt;code&gt;term1&lt;/code&gt; &amp;lt; &lt;code&gt;term2&lt;/code&gt;, or &lt;code&gt;1&lt;/code&gt; if &lt;code&gt;term2&lt;/code&gt; &amp;lt; &lt;code&gt;term1&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;0&lt;/code&gt; 如果条款是相等的， &lt;code&gt;-1&lt;/code&gt; 如果 &lt;code&gt;term1&lt;/code&gt; &amp;lt; &lt;code&gt;term2&lt;/code&gt; ，或 &lt;code&gt;1&lt;/code&gt; 如果 &lt;code&gt;term2&lt;/code&gt; &amp;lt; &lt;code&gt;term1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="52ee1791e89438cfbb09fe85370e4be0c4174cff" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; if the type cannot be determined or one of:</source>
          <target state="translated">如果无法确定类型，则返回 &lt;code&gt;0&lt;/code&gt; 或以下之一：</target>
        </trans-unit>
        <trans-unit id="50e51ec9b602d8e52f5b56e7dd86a98c570d1875" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; it they are not equal, and a value not equal to &lt;code&gt;0&lt;/code&gt; if they are equal.</source>
          <target state="translated">如果它们不相等，则返回 &lt;code&gt;0&lt;/code&gt; ;如果相等，则返回不等于 &lt;code&gt;0&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="5e1a489d4f9f0d6105b48eaccc18d34225e4b12d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; on success and &lt;code&gt;-1&lt;/code&gt; on failure. Failure might be either due to invalid encoding of the term or due to the term not being of the type &lt;code&gt;iodata()&lt;/code&gt;. On failure, the integer pointed to by the &lt;code&gt;index&lt;/code&gt; argument will be updated to refer to the sub term where the failure was detected.</source>
          <target state="translated">成功返回 &lt;code&gt;0&lt;/code&gt; ，失败返回 &lt;code&gt;-1&lt;/code&gt; 。失败可能是由于该术语的无效编码或由于该术语不是 &lt;code&gt;iodata()&lt;/code&gt; 类型造成的。发生故障时， &lt;code&gt;index&lt;/code&gt; 参数指向的整数将更新为引用检测到故障的子项。</target>
        </trans-unit>
        <trans-unit id="23cab98b0623e4b0e32b9093e5ef62a123feb6fc" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; on success, &amp;lt; 0 if no &lt;code&gt;down&lt;/code&gt; callback is provided, and &amp;gt; 0 if the process is no longer alive or if &lt;code&gt;target_pid&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;#enif_set_pid_undefined&quot;&gt; undefined&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">成功返回 &lt;code&gt;0&lt;/code&gt; ，如果没有提供 &lt;code&gt;down&lt;/code&gt; 回调，则返回0，如果该进程不再处于活动状态或 &lt;code&gt;target_pid&lt;/code&gt; 是 &lt;code&gt;&lt;a href=&quot;#enif_set_pid_undefined&quot;&gt; undefined&lt;/a&gt;&lt;/code&gt; ，则返回&amp;gt; 0 。</target>
        </trans-unit>
        <trans-unit id="1495d2dcd77d2c277ca09871795adbea294a06a5" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; on success, &amp;lt; 0 if no &lt;code&gt;down&lt;/code&gt; callback is provided, and &amp;gt; 0 if the process is no longer alive.</source>
          <target state="translated">成功返回 &lt;code&gt;0&lt;/code&gt; ；如果未提供 &lt;code&gt;down&lt;/code&gt; 回调，则返回0；如果进程不再存在，则返回0。</target>
        </trans-unit>
        <trans-unit id="147dfcedb6130dcb3e344debc4b54ca54f8b8a66" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; on success, &amp;lt; 0 if no callback is provided, and &amp;gt; 0 if the process is no longer alive.</source>
          <target state="translated">成功返回 &lt;code&gt;0&lt;/code&gt; ，如果没有提供回调，则返回0，如果进程不再存在，则返回0。</target>
        </trans-unit>
        <trans-unit id="2c492d5222c271880cc6dab0353ce6f5682b5289" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; on success, otherwise &lt;code&gt;-1&lt;/code&gt;.</source>
          <target state="translated">成功返回 &lt;code&gt;0&lt;/code&gt; ，否则返回 &lt;code&gt;-1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="99b406373dc8fe6db0449d813a5f79501cb33531" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; on success, otherwise &lt;code&gt;EBUSY&lt;/code&gt;.</source>
          <target state="translated">成功返回 &lt;code&gt;0&lt;/code&gt; ，否则返回 &lt;code&gt;EBUSY&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8c69f20dec618478f3663e41c43a1c6b626d3205" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; on success, otherwise &lt;code&gt;EBUSY&lt;/code&gt;. A thread that currently has read or read/write locked the rwlock &lt;strong&gt;cannot&lt;/strong&gt; try to lock the same rwlock again.</source>
          <target state="translated">成功返回 &lt;code&gt;0&lt;/code&gt; ，否则返回 &lt;code&gt;EBUSY&lt;/code&gt; 。当前具有读或读/写锁定rwlock的线程&lt;strong&gt;无法&lt;/strong&gt;尝试再次锁定同一rwlock。</target>
        </trans-unit>
        <trans-unit id="06b21577fae8bbe6572f27c24fcac58fd4e88891" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; on success, otherwise a value &lt;code&gt;!= 0&lt;/code&gt;.</source>
          <target state="translated">成功返回 &lt;code&gt;0&lt;/code&gt; ，否则返回值 &lt;code&gt;!= 0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7f67995b09d8c03447773e8b6d645bf327b96995" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; on success, otherwise an &lt;code&gt;errno&lt;/code&gt; value is returned to indicate the error.</source>
          <target state="translated">成功返回 &lt;code&gt;0&lt;/code&gt; ，否则返回 &lt;code&gt;errno&lt;/code&gt; 值以指示错误。</target>
        </trans-unit>
        <trans-unit id="17e727f0f7e44e0124cf8250aaf77abcb4d94e4e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; on success, otherwise an &lt;code&gt;errno&lt;/code&gt; value is returned to indicate the error. The driver creating the key is responsible for destroying it before the driver is unloaded.</source>
          <target state="translated">成功返回 &lt;code&gt;0&lt;/code&gt; ，否则返回 &lt;code&gt;errno&lt;/code&gt; 值以指示错误。创建密钥的驱动程序负责在卸载驱动程序之前销毁它。</target>
        </trans-unit>
        <trans-unit id="26800ea3c35a48f48e98accc6b96cb83bd10b328" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; on success, otherwise an &lt;code&gt;errno&lt;/code&gt; value is returned to indicate the error. The newly created thread begins executing in the function pointed to by &lt;code&gt;func&lt;/code&gt;, and &lt;code&gt;func&lt;/code&gt; is passed &lt;code&gt;arg&lt;/code&gt; as argument. When &lt;code&gt;erl_drv_thread_create&lt;/code&gt; returns, the thread identifier of the newly created thread is available in &lt;code&gt;*tid&lt;/code&gt;. &lt;code&gt;opts&lt;/code&gt; can be either a &lt;code&gt;NULL&lt;/code&gt; pointer, or a pointer to an &lt;code&gt;&lt;a href=&quot;#ErlDrvThreadOpts&quot;&gt;ErlDrvThreadOpts&lt;/a&gt;&lt;/code&gt; structure. If &lt;code&gt;opts&lt;/code&gt; is a &lt;code&gt;NULL&lt;/code&gt; pointer, default options are used, otherwise the passed options are used.</source>
          <target state="translated">成功返回 &lt;code&gt;0&lt;/code&gt; ，否则返回 &lt;code&gt;errno&lt;/code&gt; 值以指示错误。新创建的线程开始在 &lt;code&gt;func&lt;/code&gt; 指向的函数中执行，并且 &lt;code&gt;func&lt;/code&gt; 传递给 &lt;code&gt;arg&lt;/code&gt; 作为参数。当 &lt;code&gt;erl_drv_thread_create&lt;/code&gt; 返回时，新创建的线程的线程标识符在 &lt;code&gt;*tid&lt;/code&gt; 中可用。 &lt;code&gt;opts&lt;/code&gt; 可以是 &lt;code&gt;NULL&lt;/code&gt; 指针，也可以是指向 &lt;code&gt;&lt;a href=&quot;#ErlDrvThreadOpts&quot;&gt;ErlDrvThreadOpts&lt;/a&gt;&lt;/code&gt; 结构的指针。如果 &lt;code&gt;opts&lt;/code&gt; 是 &lt;code&gt;NULL&lt;/code&gt; 指针，则使用默认选项，否则使用传递的选项。</target>
        </trans-unit>
        <trans-unit id="e72c8d8be7beff4d9ddb37560e1a80573817b4bd" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; on success. If the call fails, a non-zero value is returned, and the reason for the error can be obtained with the appropriate platform-dependent call.</source>
          <target state="translated">成功返回 &lt;code&gt;0&lt;/code&gt; 。如果调用失败，则返回非零值，并且可以通过适当的依赖于平台的调用来获取错误原因。</target>
        </trans-unit>
        <trans-unit id="3086d983f407d141773c522d0f5defee16a27022" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f11efa5004a5978c0569c8d60ebccedb9d05a28f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;1&lt;/code&gt; if the timeslice is exhausted, otherwise &lt;code&gt;0&lt;/code&gt;. If &lt;code&gt;1&lt;/code&gt; is returned, the NIF is to return as soon as possible in order for the process to yield.</source>
          <target state="translated">如果时间片已用尽，则返回 &lt;code&gt;1&lt;/code&gt; ，否则返回 &lt;code&gt;0&lt;/code&gt; 。如果返回 &lt;code&gt;1&lt;/code&gt; ，则NIF将尽快返回以使过程产生。</target>
        </trans-unit>
        <trans-unit id="a05934f68d914848552efcba4c6a4de46ed6c2d6" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;1&lt;/code&gt; on success, otherwise &lt;code&gt;0&lt;/code&gt;. In the latter case &lt;code&gt;erl_errno&lt;/code&gt; is set to one of:</source>
          <target state="translated">成功返回 &lt;code&gt;1&lt;/code&gt; ，否则返回 &lt;code&gt;0&lt;/code&gt; 。在后一种情况下， &lt;code&gt;erl_errno&lt;/code&gt; 设置为以下之一：</target>
        </trans-unit>
        <trans-unit id="bbce47d721ecf0ed15007cbf5bc4ae1c1f24fa2f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;#family&quot;&gt;family&lt;/a&gt;&lt;/code&gt;&lt;code&gt;Family&lt;/code&gt; such that the index set is equal to the &lt;code&gt;&lt;a href=&quot;#domain&quot;&gt;domain&lt;/a&gt;&lt;/code&gt; of the binary relation &lt;code&gt;BinRel&lt;/code&gt;, and &lt;code&gt;Family&lt;/code&gt;[i] is the &lt;code&gt;&lt;a href=&quot;#image&quot;&gt;image&lt;/a&gt;&lt;/code&gt; of the set of i under &lt;code&gt;BinRel&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;&lt;a href=&quot;#family&quot;&gt;family&lt;/a&gt;&lt;/code&gt; &lt;code&gt;Family&lt;/code&gt; ，以使索引集等于二元关系 &lt;code&gt;BinRel&lt;/code&gt; 的 &lt;code&gt;&lt;a href=&quot;#domain&quot;&gt;domain&lt;/a&gt;&lt;/code&gt; ，并且 &lt;code&gt;Family&lt;/code&gt; [i]是 &lt;code&gt;BinRel&lt;/code&gt; 下i的集合的 &lt;code&gt;&lt;a href=&quot;#image&quot;&gt;image&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c70c55ba98a792957a1ed746bcd3599e74b06f8c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;#family&quot;&gt;family&lt;/a&gt;&lt;/code&gt;&lt;code&gt;Family&lt;/code&gt; where the indexed set is a &lt;code&gt;&lt;a href=&quot;#partition&quot;&gt;partition&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;Set&lt;/code&gt; such that two elements are considered equal if the results of applying &lt;code&gt;SetFun&lt;/code&gt; are the same value i. This i is the index that &lt;code&gt;Family&lt;/code&gt; maps onto the &lt;code&gt;&lt;a href=&quot;#equivalence_class&quot;&gt;equivalence class&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;&lt;a href=&quot;#family&quot;&gt;family&lt;/a&gt;&lt;/code&gt; &lt;code&gt;Family&lt;/code&gt; ，其中索引集是一个 &lt;code&gt;&lt;a href=&quot;#partition&quot;&gt;partition&lt;/a&gt;&lt;/code&gt; 的 &lt;code&gt;Set&lt;/code&gt; 使得两个单元被认为相同，如果申请的结果 &lt;code&gt;SetFun&lt;/code&gt; 是相同的值i。这是 &lt;code&gt;Family&lt;/code&gt; 映射到 &lt;code&gt;&lt;a href=&quot;#equivalence_class&quot;&gt;equivalence class&lt;/a&gt;&lt;/code&gt; 上的索引。</target>
        </trans-unit>
        <trans-unit id="096dbc0b1b13e77e0a63893bf8a5be6bded79b1b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt; Erlang monotonic time&lt;/a&gt;&lt;/code&gt;. Notice that negative values are not uncommon.</source>
          <target state="translated">返回 &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt; Erlang monotonic time&lt;/a&gt;&lt;/code&gt; 。请注意，负值并不罕见。</target>
        </trans-unit>
        <trans-unit id="1e039b7fedb94135b8bf441f4e52eb683044770e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt;Erlang monotonic time&lt;/a&gt;&lt;/code&gt;. Notice that negative values are not uncommon.</source>
          <target state="translated">返回 &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt;Erlang monotonic time&lt;/a&gt;&lt;/code&gt; 。请注意，负值并不罕见。</target>
        </trans-unit>
        <trans-unit id="3abc4c253f818bc8fb391b1266a868182a911538" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;time_correction#Strictly_Monotonically_Increasing&quot;&gt; strictly monotonically increasing&lt;/a&gt;&lt;/code&gt; integers corresponding to creation time. That is, the integer returned is always larger than previously returned integers on the current runtime system instance.</source>
          <target state="translated">返回与创建时间相对应的 &lt;code&gt;&lt;a href=&quot;time_correction#Strictly_Monotonically_Increasing&quot;&gt; strictly monotonically increasing&lt;/a&gt;&lt;/code&gt; 整数。即，返回的整数总是大于当前运行时系统实例上先前返回的整数。</target>
        </trans-unit>
        <trans-unit id="9c959f6d83500aa2c72c79ef3eff1a14895716ac" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;time_correction#Strictly_Monotonically_Increasing&quot;&gt;strictly monotonically increasing&lt;/a&gt;&lt;/code&gt; integers corresponding to creation time. That is, the integer returned is always larger than previously returned integers on the current runtime system instance.</source>
          <target state="translated">返回与创建时间相对应的 &lt;code&gt;&lt;a href=&quot;time_correction#Strictly_Monotonically_Increasing&quot;&gt;strictly monotonically increasing&lt;/a&gt;&lt;/code&gt; 整数。也就是说，返回的整数总是大于当前运行时系统实例上先前返回的整数。</target>
        </trans-unit>
        <trans-unit id="e37311aa48ece4240218443a319e55860bfe930e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;CpuTopology&lt;/code&gt; used by the emulator. For more information, see argument &lt;code&gt;&lt;a href=&quot;#system_info_cpu_topology&quot;&gt; cpu_topology&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回仿真器使用的 &lt;code&gt;CpuTopology&lt;/code&gt; 。有关更多信息，请参见参数 &lt;code&gt;&lt;a href=&quot;#system_info_cpu_topology&quot;&gt; cpu_topology&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="640ef747ead04008a85649e4332a8d5379261b2b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;CpuTopology&lt;/code&gt; used by the emulator. For more information, see argument &lt;code&gt;&lt;a href=&quot;#system_info_cpu_topology&quot;&gt;cpu_topology&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回仿真器使用的 &lt;code&gt;CpuTopology&lt;/code&gt; 。有关更多信息，请参见参数 &lt;code&gt;&lt;a href=&quot;#system_info_cpu_topology&quot;&gt;cpu_topology&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="72f02ca8ebdf85d353fec758b111da577d03f183" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;ERL_DRV_TIME_ERROR&lt;/code&gt; if called with an invalid time unit argument, or if called from a thread that is not a scheduler thread.</source>
          <target state="translated">如果使用无效的时间单位参数调用，或者从不是调度程序线程的线程调用，则返回 &lt;code&gt;ERL_DRV_TIME_ERROR&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a844d69586de15e9bd1cfc35b03711b171962f8c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;ERL_DRV_TIME_ERROR&lt;/code&gt; if called with an invalid time unit argument.</source>
          <target state="translated">如果使用无效的时间单位参数调用，则返回 &lt;code&gt;ERL_DRV_TIME_ERROR&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fbb08c81705b11d4c70e818d320627a5178b1fac" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;ERL_NIF_TIME_ERROR&lt;/code&gt; if called with an invalid time unit argument or if called from a thread that is not a scheduler thread.</source>
          <target state="translated">如果使用无效的时间单位参数调用或从不是调度程序线程的线程调用，则返回 &lt;code&gt;ERL_NIF_TIME_ERROR&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d9785e5a0bee0c018d5494695cfb88ba9e8b07fb" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;ERL_NIF_TIME_ERROR&lt;/code&gt; if called with an invalid time unit argument, or if called from a thread that is not a scheduler thread.</source>
          <target state="translated">如果使用无效的时间单位参数调用，或者从不是调度程序线程的线程调用，则返回 &lt;code&gt;ERL_NIF_TIME_ERROR&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bc80a13223e5723498400925f90cdc9b85a31063" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;ERL_NIF_TIME_ERROR&lt;/code&gt; if called with an invalid time unit argument.</source>
          <target state="translated">如果使用无效的时间单位参数调用，则返回 &lt;code&gt;ERL_NIF_TIME_ERROR&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8c25a7c06a297494f90b2e3a36638938a9b1aac4" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Input&lt;/code&gt;, which is the total number of bytes received through ports, and &lt;code&gt;Output&lt;/code&gt;, which is the total number of bytes output to ports.</source>
          <target state="translated">返回 &lt;code&gt;Input&lt;/code&gt; （通过端口接收的字节总数）和 &lt;code&gt;Output&lt;/code&gt; （返回输出到端口的字节总数）。</target>
        </trans-unit>
        <trans-unit id="2873dd80c13cadf65349a58c98c0a4c2b0396052" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Item&lt;/code&gt; at the front of queue &lt;code&gt;Q&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;Item&lt;/code&gt; 在队列 &lt;code&gt;Q&lt;/code&gt; 的最前面。</target>
        </trans-unit>
        <trans-unit id="879d7819f21618972cba5f60307c902040474ba8" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Item&lt;/code&gt; at the rear of queue &lt;code&gt;Q&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;Item&lt;/code&gt; &lt;code&gt;Q&lt;/code&gt; 在队列Q的后面。</target>
        </trans-unit>
        <trans-unit id="1ce4cb1f794dd5a9fb9ff2644b8f5c049da553f9" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Item&lt;/code&gt; from the head of queue &lt;code&gt;Q&lt;/code&gt;.</source>
          <target state="translated">从队列 &lt;code&gt;Q&lt;/code&gt; 的开头返回 &lt;code&gt;Item&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="62f0d1ec017eb5e8861662c261b7cb3f628081a4" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;NULL&lt;/code&gt; if no data has been associated with &lt;code&gt;key&lt;/code&gt; for the calling thread.</source>
          <target state="translated">如果没有数据与调用线程的 &lt;code&gt;key&lt;/code&gt; 关联，则返回 &lt;code&gt;NULL&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2164f7f628c69ad541af62d6b3c7f91b4d3bc8b3" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;NULL&lt;/code&gt; if the allocation fails.</source>
          <target state="translated">如果分配失败，则返回 &lt;code&gt;NULL&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="29cd629f79e40d47e7c05916a38fea6c999256f6" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;NULL&lt;/code&gt; if the reallocation fails.</source>
          <target state="translated">如果重新分配失败，则返回 &lt;code&gt;NULL&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="38a92f29b80d6a1c8083d1bf4b2155145c8733a0" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;NULL&lt;/code&gt; on failure. A thread option structure is used for passing options to &lt;code&gt;&lt;a href=&quot;#erl_drv_thread_create&quot;&gt; erl_drv_thread_create&lt;/a&gt;&lt;/code&gt;. If the structure is not modified before it is passed to &lt;code&gt;&lt;a href=&quot;#erl_drv_thread_create&quot;&gt; erl_drv_thread_create&lt;/a&gt;&lt;/code&gt;, the default values are used.</source>
          <target state="translated">失败时返回 &lt;code&gt;NULL&lt;/code&gt; 。线程选项结构用于将选项传递给 &lt;code&gt;&lt;a href=&quot;#erl_drv_thread_create&quot;&gt; erl_drv_thread_create&lt;/a&gt;&lt;/code&gt; 。如果在传递给 &lt;code&gt;&lt;a href=&quot;#erl_drv_thread_create&quot;&gt; erl_drv_thread_create&lt;/a&gt;&lt;/code&gt; 之前未对其进行修改，则使用默认值。</target>
        </trans-unit>
        <trans-unit id="faa5cf38ebe53c6e47145b0687cb46881e39a0c2" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;NULL&lt;/code&gt; on failure. A thread option structure is used for passing options to &lt;code&gt;&lt;a href=&quot;#erl_drv_thread_create&quot;&gt;erl_drv_thread_create&lt;/a&gt;&lt;/code&gt;. If the structure is not modified before it is passed to &lt;code&gt;&lt;a href=&quot;#erl_drv_thread_create&quot;&gt;erl_drv_thread_create&lt;/a&gt;&lt;/code&gt;, the default values are used.</source>
          <target state="translated">失败时返回 &lt;code&gt;NULL&lt;/code&gt; 。线程选项结构用于将选项传递给 &lt;code&gt;&lt;a href=&quot;#erl_drv_thread_create&quot;&gt;erl_drv_thread_create&lt;/a&gt;&lt;/code&gt; 。如果在传递给 &lt;code&gt;&lt;a href=&quot;#erl_drv_thread_create&quot;&gt;erl_drv_thread_create&lt;/a&gt;&lt;/code&gt; 之前未对其进行修改，则使用默认值。</target>
        </trans-unit>
        <trans-unit id="49be17db74793f1d077ffb7705e384f45c7aefa2" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;NULL&lt;/code&gt; on failure. The driver creating the condition variable is responsible for destroying it before the driver is unloaded.</source>
          <target state="translated">失败时返回 &lt;code&gt;NULL&lt;/code&gt; 。创建条件变量的驱动程序负责在卸载驱动程序之前将其销毁。</target>
        </trans-unit>
        <trans-unit id="937b4794e9be59fe2f147650d05de628193f942d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;NULL&lt;/code&gt; on failure. The driver creating the mutex is responsible for destroying it before the driver is unloaded.</source>
          <target state="translated">失败时返回 &lt;code&gt;NULL&lt;/code&gt; 。创建互斥量的驱动程序负责在卸载驱动程序之前将其销毁。</target>
        </trans-unit>
        <trans-unit id="cec702d09808b85ca08cf2b39664374ef0969b8a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;NULL&lt;/code&gt; on failure. The driver creating the rwlock is responsible for destroying it before the driver is unloaded.</source>
          <target state="translated">失败时返回 &lt;code&gt;NULL&lt;/code&gt; 。创建rwlock的驱动程序负责在卸载驱动程序之前将其销毁。</target>
        </trans-unit>
        <trans-unit id="0626500e7d2a0eb8476d43e16b322a5cb66fadf1" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Ordset1&lt;/code&gt;, but with &lt;code&gt;Element&lt;/code&gt; removed.</source>
          <target state="translated">返回 &lt;code&gt;Ordset1&lt;/code&gt; ，但 &lt;code&gt;Element&lt;/code&gt; 被删除。</target>
        </trans-unit>
        <trans-unit id="fa3daab704cdabcdeda6d9a5162be63ecb8bd104" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Set1&lt;/code&gt;, but with &lt;code&gt;Element&lt;/code&gt; removed.</source>
          <target state="translated">返回 &lt;code&gt;Set1&lt;/code&gt; ，但 &lt;code&gt;Element&lt;/code&gt; 被删除。</target>
        </trans-unit>
        <trans-unit id="3d5dfc72360c637f48245ce548d05dbb42228d3d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; with the length adjusted in accordance with &lt;code&gt;Number&lt;/code&gt;. The left margin is fixed. If &lt;code&gt;length(String)&lt;/code&gt; &amp;lt; &lt;code&gt;Number&lt;/code&gt;, then &lt;code&gt;String&lt;/code&gt; is padded with blanks or &lt;code&gt;Character&lt;/code&gt;s.</source>
          <target state="translated">返回 &lt;code&gt;String&lt;/code&gt; ，其长度根据 &lt;code&gt;Number&lt;/code&gt; 调整。左边距是固定的。如果 &lt;code&gt;length(String)&lt;/code&gt; &amp;lt; &lt;code&gt;Number&lt;/code&gt; ，则用空白或 &lt;code&gt;Character&lt;/code&gt; 填充 &lt;code&gt;String&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ce41b4e7c687c9b19e455cb02a2a0bb9de74a197" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; with the length adjusted in accordance with &lt;code&gt;Number&lt;/code&gt;. The right margin is fixed. If the length of &lt;code&gt;(String)&lt;/code&gt; &amp;lt; &lt;code&gt;Number&lt;/code&gt;, then &lt;code&gt;String&lt;/code&gt; is padded with blanks or &lt;code&gt;Character&lt;/code&gt;s.</source>
          <target state="translated">返回 &lt;code&gt;String&lt;/code&gt; ，其长度根据 &lt;code&gt;Number&lt;/code&gt; 调整。右边距是固定的。如果 &lt;code&gt;(String)&lt;/code&gt; &amp;lt; &lt;code&gt;Number&lt;/code&gt; 的长度，则用空白或 &lt;code&gt;Character&lt;/code&gt; 填充 &lt;code&gt;String&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="620e625e81828403e2d1dfd5f08443ece016162d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;[{&quot;none&quot;,0,0}]&lt;/code&gt; if &lt;code&gt;disksup&lt;/code&gt; is not available.</source>
          <target state="translated">如果 &lt;code&gt;disksup&lt;/code&gt; 不可用 &lt;code&gt;[{&quot;none&quot;,0,0}]&lt;/code&gt; 返回[{&amp;ldquo; none&amp;rdquo;，0,0}]。</target>
        </trans-unit>
        <trans-unit id="058579087c441acaa8228e3c89ba9651ac86ca51" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;driver_term_nil&lt;/code&gt; if the monitor no longer exists.</source>
          <target state="translated">如果监视器不再存在，则返回 &lt;code&gt;driver_term_nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="82f59754288354250ab785cbe85dc81e50088d0f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;error&lt;/code&gt; if any element in &lt;code&gt;Nodes&lt;/code&gt; is not an atom.</source>
          <target state="translated">如果 &lt;code&gt;Nodes&lt;/code&gt; 中的任何元素都不是原子，则返回 &lt;code&gt;error&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bb3dd123747a0645f03c4de32a039d3112fcda94" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;error&lt;/code&gt; if no value is associated with &lt;code&gt;Flag&lt;/code&gt;.</source>
          <target state="translated">如果没有值与 &lt;code&gt;Flag&lt;/code&gt; 关联，则返回 &lt;code&gt;error&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="411d4f907069d8528c128c3cd767fafa24214c79" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;false&lt;/code&gt; if the &lt;code&gt;NameDb&lt;/code&gt; argument is incorrectly specified, &lt;code&gt;true&lt;/code&gt; otherwise.</source>
          <target state="translated">如果 &lt;code&gt;NameDb&lt;/code&gt; 参数指定 &lt;code&gt;false&lt;/code&gt; 则返回false，否则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="072f5038e4f2d01946e213be2a0a78a2897b7cff" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;false&lt;/code&gt; if the &lt;code&gt;NameDb&lt;/code&gt; argument is incorrectly specified, otherwise &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;NameDb&lt;/code&gt; 参数指定错误，则返回 &lt;code&gt;false&lt;/code&gt; ，否则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="91325475ecaa519008968aec896df2ec9c644287" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;false&lt;/code&gt; if the module cannot be purged because of processes lingering in old code, otherwise &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">如果由于进程滞留在旧代码中而无法清除模块，则返回 &lt;code&gt;false&lt;/code&gt; ，否则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="72608d355bf83a757286a51cc71b304044cbb1cb" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;global&lt;/code&gt; if this function is traced on global function calls, &lt;code&gt;local&lt;/code&gt; if this function is traced on local function calls (that is, local and global function calls), and &lt;code&gt;false&lt;/code&gt; if local or global function calls are not traced.</source>
          <target state="translated">如果在全局函数调用上跟踪此函数，则返回 &lt;code&gt;global&lt;/code&gt; 如果在本地函数调用（即本地和全局函数调用）上跟踪此函数，则返回 &lt;code&gt;local&lt;/code&gt; ;如果未跟踪本地或全局函数调用，则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="acf727b4b7b2b7dd3210332a0748e1e36c077768" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;ignored&lt;/code&gt; if the local node is not alive or &lt;code&gt;{error, noconnection}&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; is not connected.</source>
          <target state="translated">返回 &lt;code&gt;ignored&lt;/code&gt; ，如果本地节点是不是活的或 &lt;code&gt;{error, noconnection}&lt;/code&gt; 如果 &lt;code&gt;Node&lt;/code&gt; 未连接。</target>
        </trans-unit>
        <trans-unit id="d5b9602029c3e98b31c57cffac5cb29414dde2b1" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;ignored&lt;/code&gt; if the local node is not alive.</source>
          <target state="translated">如果本地节点不活动，则返回 &lt;code&gt;ignored&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8e0c04b98f10b3ebb5e70388fff74a3bfaad5175" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;max(10, Depth)&lt;/code&gt;, where &lt;code&gt;Depth&lt;/code&gt; is the value of &lt;code&gt;error_logger_format_depth&lt;/code&gt; in the Kernel application, if Depth is an integer. Otherwise, &lt;code&gt;unlimited&lt;/code&gt; is returned.</source>
          <target state="translated">返回 &lt;code&gt;max(10, Depth)&lt;/code&gt; ，其中 &lt;code&gt;Depth&lt;/code&gt; 是的值 &lt;code&gt;error_logger_format_depth&lt;/code&gt; 在内核应用中，如果深度是一个整数。否则，返回 &lt;code&gt;unlimited&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f3c109fb8b64ce60968e8b7ff58555a78a1fe433" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;ok&lt;/code&gt; if all parent directories already exist or can be created. Returns &lt;code&gt;{error, Reason}&lt;/code&gt; if some parent directory does not exist and cannot be created.</source>
          <target state="translated">如果所有父目录已经存在或可以创建，则返回 &lt;code&gt;ok&lt;/code&gt; 。如果某些父目录不存在并且无法创建 &lt;code&gt;{error, Reason}&lt;/code&gt; 则返回{error，Reason}。</target>
        </trans-unit>
        <trans-unit id="11390fb7e74973ff6f501500d8fa6db8eb68f542" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;ok&lt;/code&gt; if successful, or &lt;code&gt;{error,[{Module,Reason}]}&lt;/code&gt; if loading of some modules fails. See &lt;code&gt;&lt;a href=&quot;#error_reasons&quot;&gt;Error Reasons for Code-Loading Functions&lt;/a&gt;&lt;/code&gt; for a description of other possible error reasons.</source>
          <target state="translated">如果成功，则返回 &lt;code&gt;ok&lt;/code&gt; ;如果某些模块的加载失败 &lt;code&gt;{error,[{Module,Reason}]}&lt;/code&gt; 则返回{error，[{Module，Reason}]}}。有关其他可能的错误原因的说明，请参见 &lt;code&gt;&lt;a href=&quot;#error_reasons&quot;&gt;Error Reasons for Code-Loading Functions&lt;/a&gt;&lt;/code&gt; 的错误原因。</target>
        </trans-unit>
        <trans-unit id="d44ac713f339f2a0083e9a260a541b1134a94c59" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;ok&lt;/code&gt; if successful, otherwise &lt;code&gt;error&lt;/code&gt;.</source>
          <target state="translated">如果成功，则返回 &lt;code&gt;ok&lt;/code&gt; ，否则返回 &lt;code&gt;error&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="32f9766784b29a5e37e8836d30a718eb63ae2a0f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;ok&lt;/code&gt; if the flag was set or &lt;code&gt;notsup&lt;/code&gt; if not supported by &lt;code&gt;erts_alloc&lt;/code&gt;.</source>
          <target state="translated">如果设置了标志，则返回 &lt;code&gt;ok&lt;/code&gt; ;如果 &lt;code&gt;notsup&lt;/code&gt; 不支持，则 &lt;code&gt;erts_alloc&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="75bf75fe290be11d905f570a0814178ea4d2d000" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;ok&lt;/code&gt; if the process exits with the specified &lt;code&gt;Reason&lt;/code&gt; within &lt;code&gt;Timeout&lt;/code&gt; milliseconds.</source>
          <target state="translated">如果进程在 &lt;code&gt;Timeout&lt;/code&gt; 毫秒内以指定的 &lt;code&gt;Reason&lt;/code&gt; 退出，则返回 &lt;code&gt;ok&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ca979326517147d39fd013870cef5db5ccbf23e6" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;ok&lt;/code&gt; if this yields the expected result &lt;code&gt;&quot;0&quot;&lt;/code&gt;, and &lt;code&gt;{error, Res}&lt;/code&gt; if it yields anything else.</source>
          <target state="translated">如果产生预期结果 &lt;code&gt;&quot;0&quot;&lt;/code&gt; ，则返回 &lt;code&gt;ok&lt;/code&gt; ;如果产生其他结果，则返回 &lt;code&gt;{error, Res}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3535e0814ac51f436cbf82b934c4af801eaeecf0" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;ok&lt;/code&gt;, cannot fail.</source>
          <target state="translated">返回 &lt;code&gt;ok&lt;/code&gt; ，不能失败。</target>
        </trans-unit>
        <trans-unit id="b8b9aca37d78a208de6e013c3c8fe1e83771709b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;pid&lt;/code&gt; if successful, or NULL if &lt;code&gt;caller_env&lt;/code&gt; is not a &lt;code&gt;&lt;a href=&quot;#ErlNifEnv&quot;&gt;process-bound environment&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">如果成功，则返回 &lt;code&gt;pid&lt;/code&gt; ；如果 &lt;code&gt;caller_env&lt;/code&gt; 不是 &lt;code&gt;&lt;a href=&quot;#ErlNifEnv&quot;&gt;process-bound environment&lt;/a&gt;&lt;/code&gt; ，则返回NULL 。</target>
        </trans-unit>
        <trans-unit id="feddc2e37a41b0f85110d336855b83c5f182a1da" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;pid&lt;/code&gt; if successful, or NULL if &lt;code&gt;caller_env&lt;/code&gt; is not a &lt;code&gt;&lt;a href=&quot;#proc_bound_env&quot;&gt;process bound environment&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">如果成功，则返回 &lt;code&gt;pid&lt;/code&gt; ；如果 &lt;code&gt;caller_env&lt;/code&gt; 不是 &lt;code&gt;&lt;a href=&quot;#proc_bound_env&quot;&gt;process bound environment&lt;/a&gt;&lt;/code&gt; ，则返回NULL 。</target>
        </trans-unit>
        <trans-unit id="a5cea673710d8231d230679e5c0b48a879bfc66f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; and can only be used in the &lt;code&gt;MatchBody&lt;/code&gt; part when tracing.</source>
          <target state="translated">返回 &lt;code&gt;true&lt;/code&gt; ，并且只能在跟踪时在 &lt;code&gt;MatchBody&lt;/code&gt; 部分中使用。</target>
        </trans-unit>
        <trans-unit id="fd28532807f9854712426122fdea67f6f39fa632" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; and does not fail, even if there is no link to &lt;code&gt;Id&lt;/code&gt;, or if &lt;code&gt;Id&lt;/code&gt; does not exist.</source>
          <target state="translated">返回 &lt;code&gt;true&lt;/code&gt; 并且不会失败，即使没有指向 &lt;code&gt;Id&lt;/code&gt; 的链接，或者 &lt;code&gt;Id&lt;/code&gt; 不存在。</target>
        </trans-unit>
        <trans-unit id="0199c015b23486318cc33f5d334f072a412af66e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt; are equal, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;A&lt;/code&gt; 和 &lt;code&gt;B&lt;/code&gt; 相等，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="31a71a4065376b65c03d7a563452d06828f0ce55" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;AnySet1&lt;/code&gt; and &lt;code&gt;AnySet2&lt;/code&gt; are &lt;code&gt;&lt;a href=&quot;#equal&quot;&gt;equal&lt;/a&gt;&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;. The following example shows that &lt;code&gt;==/2&lt;/code&gt; is used when comparing sets for equality:</source>
          <target state="translated">返回 &lt;code&gt;true&lt;/code&gt; 如果 &lt;code&gt;AnySet1&lt;/code&gt; 和 &lt;code&gt;AnySet2&lt;/code&gt; 是 &lt;code&gt;&lt;a href=&quot;#equal&quot;&gt;equal&lt;/a&gt;&lt;/code&gt; ，否则 &lt;code&gt;false&lt;/code&gt; 。下面的示例显示在比较相等集时使用 &lt;code&gt;==/2&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="f7c13cafbf154a114cd8e18e86c2479a7766c5f4" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;AnySet&lt;/code&gt; is an &lt;code&gt;&lt;a href=&quot;#sets_definition&quot;&gt;unordered set&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;AnySet&lt;/code&gt; is an ordered set or an atomic set.</source>
          <target state="translated">返回 &lt;code&gt;true&lt;/code&gt; 如果 &lt;code&gt;AnySet&lt;/code&gt; 是一个 &lt;code&gt;&lt;a href=&quot;#sets_definition&quot;&gt;unordered set&lt;/a&gt;&lt;/code&gt; ，和 &lt;code&gt;false&lt;/code&gt; 如果 &lt;code&gt;AnySet&lt;/code&gt; 是一组有序的或原子集合。</target>
        </trans-unit>
        <trans-unit id="c531d7828c911eaf7597a08a2ea9fe2b6920a54c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;AnySet&lt;/code&gt; is an empty unordered set, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;AnySet&lt;/code&gt; 是空的无序集，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c4b20556edc02b693b640edef2c080bacd5d28ea" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Atom&lt;/code&gt; is an Erlang reserved word, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Atom&lt;/code&gt; 是Erlang保留字，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e5d882337dcacf6050915c28214ff928dedff27a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Elem&lt;/code&gt; matches some element of &lt;code&gt;List&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Elem&lt;/code&gt; 匹配 &lt;code&gt;List&lt;/code&gt; 的某个元素，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="05a0bf83d3d51d8a51346e06bcffd56efb44f532" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Element&lt;/code&gt; is an element of &lt;code&gt;Ordset&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Element&lt;/code&gt; 是 &lt;code&gt;Ordset&lt;/code&gt; 的元素，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6f62d1bd963940a044129776b1de7a6cb03db807" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Element&lt;/code&gt; is an element of &lt;code&gt;Set&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Element&lt;/code&gt; 是 &lt;code&gt;Set&lt;/code&gt; 的元素，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="49eb2e1e78ba44e11808d477fd320925bde30b56" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Item&lt;/code&gt; matches some element in &lt;code&gt;Q&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Item&lt;/code&gt; 与 &lt;code&gt;Q&lt;/code&gt; 中的某个元素匹配，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2490eee05bb1747593809039921dbb1ff5571381" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Key&lt;/code&gt; is present in &lt;code&gt;Tree&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Key&lt;/code&gt; 在 &lt;code&gt;Tree&lt;/code&gt; 中存在，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0269f592e0e264b92e27acb721301f85f3d5bd6c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;List1&lt;/code&gt; is a prefix of &lt;code&gt;List2&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;List1&lt;/code&gt; 是 &lt;code&gt;List2&lt;/code&gt; 的前缀，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="44415b525cca5a6af1bc0f75d653cf3f997e5412" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;List1&lt;/code&gt; is a suffix of &lt;code&gt;List2&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;List1&lt;/code&gt; 是 &lt;code&gt;List2&lt;/code&gt; 的后缀，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="274e96a48c8dc11ecbc3618f58ebc91d53af29b2" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;List&lt;/code&gt; contains at least one entry associated with &lt;code&gt;Key&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;List&lt;/code&gt; 至少包含一个与 &lt;code&gt;Key&lt;/code&gt; 关联的条目，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fbdd9ea590e66f4825bbb6f37e96461687bc0475" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Module:Function/Arity&lt;/code&gt; is a BIF implemented in C, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Module:Function/Arity&lt;/code&gt; 是用C实现的BIF，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5e4b500b276e6febede603467275762adf9c0c5b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Module&lt;/code&gt; has old code, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Module&lt;/code&gt; 具有旧代码，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e68f0cec59ffbda9b9db2dbb06457ab5986ed71b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Module&lt;/code&gt; is the name of a module that has been loaded from a sticky directory (in other words: an attempt to reload the module will fail), or &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;Module&lt;/code&gt; is not a loaded module or is not sticky.</source>
          <target state="translated">返回 &lt;code&gt;true&lt;/code&gt; ，如果 &lt;code&gt;Module&lt;/code&gt; 是已经发粘目录加载的模块（换句话说：尝试重新加载模块将失败）的名称，或 &lt;code&gt;false&lt;/code&gt; 如果 &lt;code&gt;Module&lt;/code&gt; 是不是一个已加载模块或不黏腻。</target>
        </trans-unit>
        <trans-unit id="2e1c4acf2c3a75e93880e515b45e3ccdd37267e9" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Name/Arity&lt;/code&gt; is a valid Erlang type test, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Name/Arity&lt;/code&gt; 是有效的Erlang类型测试，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6e79fde7628e396f632cf7a2496c37e0282b9fdf" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Name/Arity&lt;/code&gt; is an Erlang BIF that is allowed in guards, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Name/Arity&lt;/code&gt; 是防护中允许的Erlang BIF，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2c1557eadc19aef1c2524258565aaf72d3e7adf2" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Name/Arity&lt;/code&gt; is an Erlang BIF that is automatically recognized by the compiler, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Name/Arity&lt;/code&gt; 是编译器自动识别的Erlang BIF，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="18919ef150ff00727ad40b1c9e81770ff043ec71" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Name&lt;/code&gt; refers to a (regular) file, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Name&lt;/code&gt; 引用（常规）文件，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f1d8671c2f15e91b5bd72d3336d5d62b6ceb657a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Name&lt;/code&gt; refers to a directory, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Name&lt;/code&gt; 指向目录，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fd8dc058a5de3c084b597a813b54e3549eb45d27" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Name&lt;/code&gt; refers to a file or a directory, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Name&lt;/code&gt; 指向文件或目录，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b18353d9107e0454a0798a1253e3fd2fccc6cdc7" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; has type &lt;code&gt;atom&lt;/code&gt; and represents &lt;code&gt;Value&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Node&lt;/code&gt; 的类型为 &lt;code&gt;atom&lt;/code&gt; 并表示 &lt;code&gt;Value&lt;/code&gt; ，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a150bea19f721c84edfd13b51fb7dbf54b8d17f5" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; has type &lt;code&gt;char&lt;/code&gt; and represents &lt;code&gt;Value&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Node&lt;/code&gt; 的类型为 &lt;code&gt;char&lt;/code&gt; 并表示 &lt;code&gt;Value&lt;/code&gt; ，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5a966e6122cf427828c132b53659f80ec8c8fa1d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; has type &lt;code&gt;integer&lt;/code&gt; and represents &lt;code&gt;Value&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Node&lt;/code&gt; 的类型为 &lt;code&gt;integer&lt;/code&gt; 并表示 &lt;code&gt;Value&lt;/code&gt; ，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b0aba6b4005ff8608dfcfced8eb3d218ccf1f9b9" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; has type &lt;code&gt;list&lt;/code&gt; or &lt;code&gt;nil&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Node&lt;/code&gt; 的类型为 &lt;code&gt;list&lt;/code&gt; 或 &lt;code&gt;nil&lt;/code&gt; ，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7b5b7201556ee3bd343008c5b1eda7663cc16973" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; has type &lt;code&gt;string&lt;/code&gt; and represents &lt;code&gt;Value&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Node&lt;/code&gt; 具有 &lt;code&gt;string&lt;/code&gt; 类型并表示 &lt;code&gt;Value&lt;/code&gt; ，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="28fa4aca5df89a1f5d8b37190fb644320a2255d2" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; is a leaf node, otherwise &lt;code&gt;false&lt;/code&gt;. The current leaf node types are &lt;code&gt;literal&lt;/code&gt; and &lt;code&gt;var&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Node&lt;/code&gt; 是叶节点，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。当前的叶节点类型为 &lt;code&gt;literal&lt;/code&gt; 和 &lt;code&gt;var&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8e859c070b6e0737943f32ccc3c904c13ffc4b3f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; is a leaf node, otherwise &lt;code&gt;false&lt;/code&gt;. The currently recognised leaf node types are:</source>
          <target state="translated">如果 &lt;code&gt;Node&lt;/code&gt; 是叶节点，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。当前识别的叶节点类型为：</target>
        </trans-unit>
        <trans-unit id="62601fd5548cdaeb0b7711f3bd66399330201fec" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; is a syntax tree representing a so-called &quot;source code form&quot;, otherwise &lt;code&gt;false&lt;/code&gt;. Forms are the Erlang source code units which, placed in sequence, constitute an Erlang program. Current form types are:</source>
          <target state="translated">如果 &lt;code&gt;Node&lt;/code&gt; 是代表所谓&amp;ldquo;源代码形式&amp;rdquo;的语法树，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。表单是Erlang源代码单元，它们按顺序排列构成一个Erlang程序。当前的表单类型为：</target>
        </trans-unit>
        <trans-unit id="9136554109466d9670bdca91c5a70557ec16732c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; is an abstract binary-template; otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Node&lt;/code&gt; 是抽象的二进制模板，则返回 &lt;code&gt;true&lt;/code&gt; ;否则，返回false。否则为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b67bbf772b61cd431ca9335f26a4222b4fdd1935" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; is an abstract bit-string template; otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Node&lt;/code&gt; 是抽象的位字符串模板，则返回 &lt;code&gt;true&lt;/code&gt; ;否则，返回true。否则为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="745cfb4e5183d77b87794ddfacbb48b6d303d6d6" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; is an abstract case-expression; otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Node&lt;/code&gt; 是抽象的case-expression，则返回 &lt;code&gt;true&lt;/code&gt; ;否则，返回false。否则为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3d1c96cc3178fd4c254d95c772961a0e025cf4c1" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; is an abstract catch-expression, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Node&lt;/code&gt; 是抽象的catch-expression，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ad5347c19f5d00079763c3320786632f3fe55fef" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; is an abstract clause, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Node&lt;/code&gt; 是一个抽象子句，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d74618cc9eea39d0f6adc5ad8d3bbcd752a3befa" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; is an abstract empty list, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Node&lt;/code&gt; 是一个抽象的空列表，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="872622f363c1703c2c26ac40c5b480833e6ba276" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; is an abstract fun-expression, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Node&lt;/code&gt; 是抽象的fun-expression，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a7f05abe467013e35a924ff267f3b2bcf2ea049a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; is an abstract function application, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Node&lt;/code&gt; 是一个抽象函数应用程序，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6b9f1fa3e20d65ae757673699b042de42f802ed0" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; is an abstract function name variable, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Node&lt;/code&gt; 是一个抽象函数名称变量，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9ed710fa2062e8721bf35d29fffbde4e284abd5c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; is an abstract inter-module call expression; otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Node&lt;/code&gt; 是抽象的模块间调用表达式，则返回 &lt;code&gt;true&lt;/code&gt; ;否则，返回true。否则为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ad72e5820dad37940ae76b8262807863ea9006e4" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; is an abstract let-expression, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Node&lt;/code&gt; 是抽象的let-expression，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ce40138dbc7c528911e59eac8e4269201b7e5c06" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; is an abstract letrec-expression, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Node&lt;/code&gt; 是抽象的letrec-expression，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="12b1f9365a3472dcb0011e1236931ca4d3ee1ff7" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; is an abstract list constructor, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Node&lt;/code&gt; 是一个抽象列表构造函数，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="820a7b1b0c18ca919107f4697542b3bbe0460999" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; is an abstract map constructor, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Node&lt;/code&gt; 是抽象映射构造函数，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="500b92c61584077e60ac08647aba775708271145" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; is an abstract module definition, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Node&lt;/code&gt; 是抽象模块定义，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c8c305f8c7c3d9930b4d2c7fae8652eb6743e1ac" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; is an abstract pattern alias, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Node&lt;/code&gt; 是抽象模式别名，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6eb8f56f0716c23be6e98ed0ad2d837dea4eb92d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; is an abstract primitive operation call, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Node&lt;/code&gt; 是抽象的基本操作调用，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0395d9e854d9bd93129e8c84a7db9e568ae27cfb" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; is an abstract receive-expression, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Node&lt;/code&gt; 是抽象的receive-expression，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c601d452dd37156432a27262ea44d0ce346ecbe6" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; is an abstract sequencing expression, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Node&lt;/code&gt; 是抽象排序表达式，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="541647112e7063c353c6da46fedb2c61f97c5057" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; is an abstract try-expression, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Node&lt;/code&gt; 是抽象的try-expression，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e434426ca0c61ca2cb37396072e66af344bf6c5b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; is an abstract tuple, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Node&lt;/code&gt; 是一个抽象元组，则返回 &lt;code&gt;true&lt;/code&gt; ；否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7bc029cf5c4d7bdcc8e0055af07253cf1026b3e5" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; is an abstract value list; otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Node&lt;/code&gt; 是一个抽象值列表，则返回 &lt;code&gt;true&lt;/code&gt; ;否则，返回true。否则为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="06a8998344a8ba3ff1e488c778a08e35b202b58d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; is an abstract variable, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Node&lt;/code&gt; 是一个抽象变量，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9f783c200e3f9bd537977b57ea609e939b69030f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; may represent a &quot;printing&quot; character, otherwise &lt;code&gt;false&lt;/code&gt;. (Cf. &lt;code&gt;is_c_char/1&lt;/code&gt;.) A &quot;printing&quot; character has either a given graphical representation, or a &quot;named&quot; escape sequence such as &quot;&lt;code&gt;\n&lt;/code&gt;&quot;. Currently, only ISO 8859-1 (Latin-1) character values are recognized.</source>
          <target state="translated">如果 &lt;code&gt;Node&lt;/code&gt; 可能表示&amp;ldquo;打印&amp;rdquo;字符，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。（参见 &lt;code&gt;is_c_char/1&lt;/code&gt; 。）&amp;ldquo;打印&amp;rdquo;字符具有给定的图形表示或&amp;ldquo;命名&amp;rdquo;转义序列，例如&amp;ldquo; &lt;code&gt;\n&lt;/code&gt; &amp;rdquo;。当前，仅识别ISO 8859-1（Latin-1）字符值。</target>
        </trans-unit>
        <trans-unit id="8336f36620aa55e7dc06520e250c3b556ba7f470" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; may represent a character literal, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Node&lt;/code&gt; 可以表示字符文字，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3c7a50d6ab2246b4d325feea5dc3a77bbc911de4" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; may represent a string literal containing only &quot;printing&quot; characters, otherwise &lt;code&gt;false&lt;/code&gt;. See &lt;code&gt;is_c_string/1&lt;/code&gt; and &lt;code&gt;is_print_char/1&lt;/code&gt; for details. Currently, only ISO 8859-1 (Latin-1) character values are recognized.</source>
          <target state="translated">如果 &lt;code&gt;Node&lt;/code&gt; 可以表示仅包含&amp;ldquo;打印&amp;rdquo;字符的字符串文字，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。有关详细信息，请参见 &lt;code&gt;is_c_string/1&lt;/code&gt; 和 &lt;code&gt;is_print_char/1&lt;/code&gt; 。当前，仅识别ISO 8859-1（Latin-1）字符值。</target>
        </trans-unit>
        <trans-unit id="05f7b07b33e15bebabf2f39915b065418cfb73f1" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; may represent a string literal, otherwise &lt;code&gt;false&lt;/code&gt;. Strings are defined as lists of characters; see &lt;code&gt;is_c_char/1&lt;/code&gt; for details.</source>
          <target state="translated">如果 &lt;code&gt;Node&lt;/code&gt; 可以表示字符串文字，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。字符串被定义为字符列表；有关详细信息，请参见 &lt;code&gt;is_c_char/1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ca221e6de37cd7ba0566135eed346da69f7a6228" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; represents a data constructor, otherwise &lt;code&gt;false&lt;/code&gt;. Data constructors are cons cells, tuples, and atomic literals.</source>
          <target state="translated">如果 &lt;code&gt;Node&lt;/code&gt; 表示数据构造函数，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。数据构造函数是con单元格，元组和原子文字。</target>
        </trans-unit>
        <trans-unit id="41b426e831f8aca582abd88b1cc7c7abfa0970be" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; represents a floating-point literal, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Node&lt;/code&gt; 表示浮点文字，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ccef43656005918320a2c2bdb3afafde49f0b615" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; represents a literal term, otherwise &lt;code&gt;false&lt;/code&gt;. This function returns &lt;code&gt;true&lt;/code&gt; if and only if the value of &lt;code&gt;concrete(Node)&lt;/code&gt; is defined.</source>
          <target state="translated">如果 &lt;code&gt;Node&lt;/code&gt; 表示文字术语，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。仅当定义 &lt;code&gt;concrete(Node)&lt;/code&gt; 的值时，此函数才返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="16020ba0f84e6b2f3146706260e1679aa1989e35" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; represents a proper list, and &lt;code&gt;false&lt;/code&gt; otherwise. A proper list is a list skeleton either on the form &quot;&lt;code&gt;[]&lt;/code&gt;&quot; or &quot;&lt;code&gt;[E1, ..., En]&lt;/code&gt;&quot;, or &quot;&lt;code&gt;[... | Tail]&lt;/code&gt;&quot; where recursively &lt;code&gt;Tail&lt;/code&gt; also represents a proper list.</source>
          <target state="translated">如果 &lt;code&gt;Node&lt;/code&gt; 代表正确的列表，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。适当的列表是形式为 &lt;code&gt;[]&lt;/code&gt; 或&amp;ldquo; &lt;code&gt;[E1, ..., En]&lt;/code&gt; &amp;rdquo;或&amp;ldquo; &lt;code&gt;[... | Tail]&lt;/code&gt; &amp;rdquo; 的列表框架，其中 &lt;code&gt;Tail&lt;/code&gt; 递归表示适当的列表。</target>
        </trans-unit>
        <trans-unit id="f5b3d7302d46f818ae5f5df287492ae45d11924f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; represents a proper list, otherwise &lt;code&gt;false&lt;/code&gt;. A proper list is either the empty list &lt;code&gt;[]&lt;/code&gt;, or a cons cell &lt;code&gt;[Head | Tail]&lt;/code&gt;, where recursively &lt;code&gt;Tail&lt;/code&gt; is a proper list.</source>
          <target state="translated">如果 &lt;code&gt;Node&lt;/code&gt; 代表正确的列表，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。适当的列表可以是空列表 &lt;code&gt;[]&lt;/code&gt; 或cons单元格 &lt;code&gt;[Head | Tail]&lt;/code&gt; Tail]，其中 &lt;code&gt;Tail&lt;/code&gt; 是递归的列表。</target>
        </trans-unit>
        <trans-unit id="1b17c37ffcb249557c30e11862bed4607710e03e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; represents an atom literal, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Node&lt;/code&gt; 表示原子文字，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="770074cee482eb759d996766ba1730aaeb0ddd60" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; represents an integer literal, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Node&lt;/code&gt; 表示整数文字，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="813ec7bf5e1ea4c4cbf9689c754ef9fb026de9a2" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;OpName/Arity&lt;/code&gt; is a Boolean operator, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;OpName/Arity&lt;/code&gt; 是布尔运算符，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4eb0386e76cf65a063e3e8d285268c0165b61346" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;OpName/Arity&lt;/code&gt; is a comparison operator, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;OpName/Arity&lt;/code&gt; 是比较运算符，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="991c1799518adaccb921961e365ca3fa22ac0cb6" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;OpName/Arity&lt;/code&gt; is a list operator, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;OpName/Arity&lt;/code&gt; 是列表运算符，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="63c0c3e2061e7bb43b47c847bd990a26fe034148" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;OpName/Arity&lt;/code&gt; is a send operator, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;OpName/Arity&lt;/code&gt; 是发送运算符，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2dbc3ea01490ef0d1dbec42e97269e840eed8e64" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;OpName/Arity&lt;/code&gt; is an arithmetic operator, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;OpName/Arity&lt;/code&gt; 是算术运算符，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e4b12468404538c448a64e6fe397923d74719fba" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Orddict&lt;/code&gt; has no elements, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Orddict&lt;/code&gt; 没有元素，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b1dc4dfaf731f66f94133c8678a1fa5ab9233d86" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Ordset1&lt;/code&gt; and &lt;code&gt;Ordset2&lt;/code&gt; are disjoint (have no elements in common), otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Ordset1&lt;/code&gt; 和 &lt;code&gt;Ordset2&lt;/code&gt; 不相交（没有共同的元素），则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cea7e1cb6c0e0668014d3a7aec4c690ebb182212" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Ordset&lt;/code&gt; is an empty set, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Ordset&lt;/code&gt; 为空集，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="edfdfbcd8d4ad83a7c9adb281b2a5e52d8bfa2cb" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Ordset&lt;/code&gt; is an ordered set of elements, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Ordset&lt;/code&gt; 是元素的有序集合，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2f6c07fa182c2c36ca7ff087b3a9656c11b0d07f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Pred(Elem)&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; for all elements &lt;code&gt;Elem&lt;/code&gt; in &lt;code&gt;List&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;true&lt;/code&gt; 如果 &lt;code&gt;Pred(Elem)&lt;/code&gt; 返回 &lt;code&gt;true&lt;/code&gt; 所有元素 &lt;code&gt;Elem&lt;/code&gt; 在 &lt;code&gt;List&lt;/code&gt; ，否则 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a2591bc8ff6e6910ee0e7902593fcc8825fb308d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Pred(Elem)&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; for at least one element &lt;code&gt;Elem&lt;/code&gt; in &lt;code&gt;List&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;true&lt;/code&gt; 如果 &lt;code&gt;Pred(Elem)&lt;/code&gt; 返回 &lt;code&gt;true&lt;/code&gt; 至少一个元素 &lt;code&gt;Elem&lt;/code&gt; 的 &lt;code&gt;List&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="76cbb5d0751cdfd9389e6cc4fe05c163ad0c960c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Set1&lt;/code&gt; and &lt;code&gt;Set2&lt;/code&gt; are &lt;code&gt;&lt;a href=&quot;#disjoint&quot;&gt;disjoint&lt;/a&gt;&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;true&lt;/code&gt; 如果 &lt;code&gt;Set1&lt;/code&gt; 和 &lt;code&gt;Set2&lt;/code&gt; 是 &lt;code&gt;&lt;a href=&quot;#disjoint&quot;&gt;disjoint&lt;/a&gt;&lt;/code&gt; ，否则 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e25745d5f902181635eea33218893a7e8f99b775" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Set1&lt;/code&gt; and &lt;code&gt;Set2&lt;/code&gt; are disjoint (have no elements in common), otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Set1&lt;/code&gt; 和 &lt;code&gt;Set2&lt;/code&gt; 不相交（没有共同的元素），则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="80ddd66b34cce3545670a29d307e9b78c7ba414d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Set1&lt;/code&gt; is a &lt;code&gt;&lt;a href=&quot;#subset&quot;&gt;subset&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;Set2&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Set1&lt;/code&gt; 是 &lt;code&gt;Set2&lt;/code&gt; 的 &lt;code&gt;&lt;a href=&quot;#subset&quot;&gt;subset&lt;/a&gt;&lt;/code&gt; ，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4161ad452749f1ed2764feed8799baa093f1bc14" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Set&lt;/code&gt; is a set of elements, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Set&lt;/code&gt; 是一组元素，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="458d23732d1b448b62fb2a72d14403bff3b55ef1" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Set&lt;/code&gt; is an empty set, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Set&lt;/code&gt; 是一个空集，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="73caeabfdd35df13f66b8f8433322360f8264781" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;String&lt;/code&gt; is the empty string, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;String&lt;/code&gt; 为空字符串，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="870fe484de2df9369f88a74af9ebdfa238a09693" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; appears to be a set, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Term&lt;/code&gt; 似乎是一个集合，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d4a83079b2f1cf8c67a06458f645871b1e0c9e30" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; can be represented as a literal, otherwise &lt;code&gt;false&lt;/code&gt;. This function takes time proportional to the size of &lt;code&gt;Term&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Term&lt;/code&gt; 可以表示为文字，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。此函数所花费的时间与 &lt;code&gt;Term&lt;/code&gt; 的大小成正比。</target>
        </trans-unit>
        <trans-unit id="7ccab54c56fc03113058080ceda7d7b1774fc75b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is a binary, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Term&lt;/code&gt; 为二进制，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f6f12e79c993d65cc7248ecb7d272941d8d3db76" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is a bitstring (including a binary), otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Term&lt;/code&gt; 是一个位串（包括二进制），则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="71f8a14b5e660fba6fcf5efb5272c3c8436c064b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is a flat list of characters in the ISO Latin-1 range, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Term&lt;/code&gt; 是ISO Latin-1范围内的平面字符列表，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2ca026227756f8b3e8dd2de89221b5bc870e4b13" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is a flat list of characters in the Unicode range, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Term&lt;/code&gt; 是Unicode范围内的平面字符列表，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="166e179f28326a54ab986cbdb166b8750c097a48" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is a flat list of printable ISO Latin-1 characters, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Term&lt;/code&gt; 是可打印的ISO Latin-1字符的平面列表，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e1b72babeabff7431f18a383168fce158f453a7e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is a flat list of printable Unicode characters, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Term&lt;/code&gt; 是可打印Unicode字符的平面列表，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e4dbed6478594002efdbb17422ee583cc58c8c15" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is a flat list of printable characters, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Term&lt;/code&gt; 是可打印字符的平面列表，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4d0efef9a81207545305c2743dfd78ea3cde1691" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is a floating point number, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Term&lt;/code&gt; 是一个浮点数，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="460d08d90b734bb113aa491d231ca853ec4e6cd8" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is a fun that can be applied with &lt;code&gt;Arity&lt;/code&gt; number of arguments, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Term&lt;/code&gt; 很有趣，可以与 &lt;code&gt;Arity&lt;/code&gt; 参数一起应用，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8bc8d2c9ee603ea50a3fb459cc3153a7b4c1b105" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is a fun, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Term&lt;/code&gt; 很有趣，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="624b732c7887f25f1908e5d7cb04e5e46e05f024" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is a list with zero or more elements, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Term&lt;/code&gt; 是具有零个或多个元素的列表，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b6a18c7f4f99e813224877b5510bbf2512ff6467" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is a map, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Term&lt;/code&gt; 是一个映射，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="58a56bacb65ece5dd3d2a353ff5392010207364f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is a port identifier, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Term&lt;/code&gt; 是端口标识符，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0d840f0f19e5e7781ef91711e0bc1137ba6d969e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is a process identifier, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Term&lt;/code&gt; 是一个进程标识符，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="61821daf2eeba88c1903b78ec550afb6af88f97e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is a reference, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Term&lt;/code&gt; 是引用，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e45d92ebd6509795348bf496ed516c5d2b67e321" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is a tuple and its first element is &lt;code&gt;RecordTag&lt;/code&gt;. Otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Term&lt;/code&gt; 是一个元组并且其第一个元素是 &lt;code&gt;RecordTag&lt;/code&gt; ,则返回 &lt;code&gt;true&lt;/code&gt; 。否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7982bf019f3d888e6e415a9ca2298c9d12fe49ae" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is a tuple, its first element is &lt;code&gt;RecordTag&lt;/code&gt;, and its size is &lt;code&gt;Size&lt;/code&gt;. Otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Term&lt;/code&gt; 是一个元组，其第一个元素是 &lt;code&gt;RecordTag&lt;/code&gt; ，其大小是 &lt;code&gt;Size&lt;/code&gt; ，则返回 &lt;code&gt;true&lt;/code&gt; 。否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f80bece3fdbdf4d9b690fc3b52f108c7e7249507" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is a tuple, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Term&lt;/code&gt; 是一个元组，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="378645cb37a4403cbb8f41f06ac1aa7dd5710436" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is a, possibly deep, list of characters in the ISO Latin-1 range, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Term&lt;/code&gt; 是ISO Latin-1范围内的字符列表（可能很深），则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d3b0204ab86829cd8cef0d00c942dc56ac2979fe" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is a, possibly deep, list of characters in the Unicode range, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Term&lt;/code&gt; 是Unicode范围内的字符列表（可能很深），则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f40d776a0ad126eb763fa99db8f2b5ee0722ddb4" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is an &lt;code&gt;&lt;a href=&quot;#sets_definition&quot;&gt;unordered set&lt;/a&gt;&lt;/code&gt;, an ordered set, or an atomic set, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Term&lt;/code&gt; 是 &lt;code&gt;&lt;a href=&quot;#sets_definition&quot;&gt;unordered set&lt;/a&gt;&lt;/code&gt; ，有序集或原子集，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2db77f4bd2a314e48786d9b9ae6a664c784b2c5b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is an atom, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Term&lt;/code&gt; 是一个原子，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="330102aa4e44e69d3fb91410fe11ffc636f4b0ce" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is an integer or a floating point number. Otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Term&lt;/code&gt; 是整数或浮点数，则返回 &lt;code&gt;true&lt;/code&gt; 。否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="33ebcad4307cd245114a5a0cb4612f83a929a00e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is an integer, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Term&lt;/code&gt; 是一个整数，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6299d291293abd2a3887c9bc8071223e7ac78b69" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is the atom &lt;code&gt;true&lt;/code&gt; or the atom &lt;code&gt;false&lt;/code&gt; (that is, a boolean). Otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Term&lt;/code&gt; 是 &lt;code&gt;true&lt;/code&gt; 原子或 &lt;code&gt;false&lt;/code&gt; （即布尔值）原子，则返回 &lt;code&gt;true&lt;/code&gt; 。否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9ff32e0745b2e55908fc88e8b35ae7730f647ea1" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Tree&lt;/code&gt; is an empty tree, othwewise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Tree&lt;/code&gt; 是一个空树，则返回 &lt;code&gt;true&lt;/code&gt; ,否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="582706139b22f3830293ba9d5e787d1b05d9f421" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Tree&lt;/code&gt; represents an expression which never terminates normally. Note that the reverse does not apply. Currently, the detected cases are calls to &lt;code&gt;exit/1&lt;/code&gt;, &lt;code&gt;throw/1&lt;/code&gt;, &lt;code&gt;erlang:error/1&lt;/code&gt; and &lt;code&gt;erlang:error/2&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Tree&lt;/code&gt; 表示一个永远不会正常终止的表达式，则返回 &lt;code&gt;true&lt;/code&gt; 。请注意，相反情况并不适用。当前，检测到的案例是对 &lt;code&gt;exit/1&lt;/code&gt; ， &lt;code&gt;throw/1&lt;/code&gt; ， &lt;code&gt;erlang:error/1&lt;/code&gt; 和 &lt;code&gt;erlang:error/2&lt;/code&gt; 的调用。</target>
        </trans-unit>
        <trans-unit id="1d53d1595203465ec915723aeaeca5596c48e76d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;X&lt;/code&gt; is an array, otherwise &lt;code&gt;false&lt;/code&gt;. Notice that the check is only shallow, as there is no guarantee that &lt;code&gt;X&lt;/code&gt; is a well-formed array representation even if this function returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;X&lt;/code&gt; 是一个数组，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。注意，检查只是很浅的，因为即使此函数返回 &lt;code&gt;true&lt;/code&gt; ，也不能保证 &lt;code&gt;X&lt;/code&gt; 是格式正确的数组表示形式。</target>
        </trans-unit>
        <trans-unit id="135258a9ebda7bc66b6cd9275a1a2690e4d5b590" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;pid&lt;/code&gt; has been set as undefined by &lt;code&gt;&lt;a href=&quot;#enif_set_pid_undefined&quot;&gt;enif_set_pid_undefined &lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;pid&lt;/code&gt; 被 &lt;code&gt;&lt;a href=&quot;#enif_set_pid_undefined&quot;&gt;enif_set_pid_undefined &lt;/a&gt;&lt;/code&gt; 设置为undefined，则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d2ba1932cb24599dc5fa6e202010f78edff673b2" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;pid&lt;/code&gt; is alive.</source>
          <target state="translated">如果 &lt;code&gt;pid&lt;/code&gt; 处于活动状态，则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fb3ba34f9680887d2fb9885a93f7d3c98c573dda" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;port_id&lt;/code&gt; is alive.</source>
          <target state="translated">如果 &lt;code&gt;port_id&lt;/code&gt; 处于活动状态，则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="61d3ace632d05ed73ad4a42d28fbbd2d2ed84d93" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is a binary.</source>
          <target state="translated">如果 &lt;code&gt;term&lt;/code&gt; 是二进制，则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fb6f0ca756af464bfed60d9ea0e73f6ba439b2fb" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is a fun.</source>
          <target state="translated">如果 &lt;code&gt;term&lt;/code&gt; 很有趣，则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="110bd689603bccb5575388b7f2f7e7b72dbeaffe" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is a list.</source>
          <target state="translated">如果 &lt;code&gt;term&lt;/code&gt; 是一个列表，则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b4b9ce64cf4b500f5ae3421fd8163a33865e3b09" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is a map, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;term&lt;/code&gt; 是一个映射，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="27afbc551805caeef26432621deb6bf12a23a8eb" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is a number.</source>
          <target state="translated">如果 &lt;code&gt;term&lt;/code&gt; 是一个数字，则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7d22d2e04aeeb0900ff3cbee0d374a923dd0e9c3" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is a pid.</source>
          <target state="translated">如果 &lt;code&gt;term&lt;/code&gt; 是pid，则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="35fa782898e9bfb2eae51e772132161d50f5593b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is a port.</source>
          <target state="translated">如果 &lt;code&gt;term&lt;/code&gt; 是端口，则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5f3f570a390f6517b5496369c3cd66e8538f2abf" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is a reference.</source>
          <target state="translated">如果 &lt;code&gt;term&lt;/code&gt; 是参考，则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="89e1065811333de07f051b50cff74f2cff229c56" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is a tuple.</source>
          <target state="translated">如果 &lt;code&gt;term&lt;/code&gt; 是一个元组，则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="43debbc7898967bba2316715006356cf5b97319f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is an atom.</source>
          <target state="translated">如果 &lt;code&gt;term&lt;/code&gt; 是一个原子，则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="447706c6e0c233491c6e5b8f408ebf59983b993d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is an empty list.</source>
          <target state="translated">如果 &lt;code&gt;term&lt;/code&gt; 是一个空列表，则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6fd2b75b0a5f1908a29c72bd8be73c57944fe81c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if Term is a collection of annotations, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果Term是注释的集合，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="12ddcca1673020e55a2187f0d826f4f1b5fd2490" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if a pending exception is associated with the environment &lt;code&gt;env&lt;/code&gt;. If &lt;code&gt;reason&lt;/code&gt; is a &lt;code&gt;NULL&lt;/code&gt; pointer, ignore it. Otherwise, if a pending exception associated with &lt;code&gt;env&lt;/code&gt; exists, set &lt;code&gt;*reason&lt;/code&gt; to the value of the exception term. For example, if &lt;code&gt;&lt;a href=&quot;#enif_make_badarg&quot;&gt; enif_make_badarg&lt;/a&gt;&lt;/code&gt; is called to set a pending &lt;code&gt;badarg&lt;/code&gt; exception, a later call to &lt;code&gt;enif_has_pending_exception(env, &amp;amp;reason)&lt;/code&gt; sets &lt;code&gt;*reason&lt;/code&gt; to the atom &lt;code&gt;badarg&lt;/code&gt;, then return &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">如果未决异常与环境 &lt;code&gt;env&lt;/code&gt; 相关联，则返回 &lt;code&gt;true&lt;/code&gt; 。如果 &lt;code&gt;reason&lt;/code&gt; 是 &lt;code&gt;NULL&lt;/code&gt; 指针，请忽略它。否则，如果存在与 &lt;code&gt;env&lt;/code&gt; 关联的未决异常，请将 &lt;code&gt;*reason&lt;/code&gt; 设置为异常项的值。例如，如果 &lt;code&gt;&lt;a href=&quot;#enif_make_badarg&quot;&gt; enif_make_badarg&lt;/a&gt;&lt;/code&gt; 被调用来设定未决 &lt;code&gt;badarg&lt;/code&gt; 例外，到以后的呼叫 &lt;code&gt;enif_has_pending_exception(env, &amp;amp;reason)&lt;/code&gt; 套 &lt;code&gt;*reason&lt;/code&gt; 到原子 &lt;code&gt;badarg&lt;/code&gt; ，则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f524f7a3284bec6bbe8ac59c2cbfa42df9bbafd8" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if a pending exception is associated with the environment &lt;code&gt;env&lt;/code&gt;. If &lt;code&gt;reason&lt;/code&gt; is a &lt;code&gt;NULL&lt;/code&gt; pointer, ignore it. Otherwise, if a pending exception associated with &lt;code&gt;env&lt;/code&gt; exists, set &lt;code&gt;*reason&lt;/code&gt; to the value of the exception term. For example, if &lt;code&gt;&lt;a href=&quot;#enif_make_badarg&quot;&gt;enif_make_badarg&lt;/a&gt;&lt;/code&gt; is called to set a pending &lt;code&gt;badarg&lt;/code&gt; exception, a later call to &lt;code&gt;enif_has_pending_exception(env, &amp;amp;reason)&lt;/code&gt; sets &lt;code&gt;*reason&lt;/code&gt; to the atom &lt;code&gt;badarg&lt;/code&gt;, then return &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">如果未决异常与环境 &lt;code&gt;env&lt;/code&gt; 相关联，则返回 &lt;code&gt;true&lt;/code&gt; 。如果 &lt;code&gt;reason&lt;/code&gt; 是 &lt;code&gt;NULL&lt;/code&gt; 指针，请忽略它。否则，如果存在与 &lt;code&gt;env&lt;/code&gt; 关联的未决异常，请将 &lt;code&gt;*reason&lt;/code&gt; 设置为异常项的值。例如，如果 &lt;code&gt;&lt;a href=&quot;#enif_make_badarg&quot;&gt;enif_make_badarg&lt;/a&gt;&lt;/code&gt; 设置未决的 &lt;code&gt;badarg&lt;/code&gt; 异常，则以后对 &lt;code&gt;enif_has_pending_exception(env, &amp;amp;reason)&lt;/code&gt; 调用将 &lt;code&gt;*reason&lt;/code&gt; 设置为原子 &lt;code&gt;badarg&lt;/code&gt; ，然后返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4adb2af57a423f657c16c1e5e3386789a64ac4b8" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if a sequential trace token is set for the current process, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果为当前进程设置了顺序跟踪令牌，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="003c73ad83bc1b53c3e9127937f465b37c0db152" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if all its arguments (variable length argument list) evaluate to &lt;code&gt;true&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;. Evaluation order is undefined.</source>
          <target state="translated">返回 &lt;code&gt;true&lt;/code&gt; ，如果其所有参数（可变长度参数列表）评估为 &lt;code&gt;true&lt;/code&gt; ，否则 &lt;code&gt;false&lt;/code&gt; 。评估顺序未定义。</target>
        </trans-unit>
        <trans-unit id="fe9ad98791dd8b57717f96b54841e51cd1e52b0d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if an abstract clause is a catch-all, otherwise &lt;code&gt;false&lt;/code&gt;. A clause is a catch-all if all its patterns are variables, and its guard expression always evaluates to &lt;code&gt;true&lt;/code&gt;; cf. &lt;code&gt;eval_guard/1&lt;/code&gt;.</source>
          <target state="translated">如果抽象子句是万能的，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。如果子句的所有模式都是变量，则该子句是万能的，并且其警卫表达式始终取值为 &lt;code&gt;true&lt;/code&gt; ；cf. &lt;code&gt;eval_guard/1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="91f2376f93431f54ea182d78fdcf0fd4438c5264" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if an object with key &lt;code&gt;Key&lt;/code&gt; is found, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果找到具有键 &lt;code&gt;Key&lt;/code&gt; 的对象，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="54396b5eb9e13a102688e0da4fdc674f93d3c4f4" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if and only if digraph &lt;code&gt;Digraph&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;#acyclic_digraph&quot;&gt;acyclic&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">当且仅当digraph &lt;code&gt;Digraph&lt;/code&gt; 是非 &lt;code&gt;&lt;a href=&quot;#acyclic_digraph&quot;&gt;acyclic&lt;/a&gt;&lt;/code&gt; 返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="200e8de3366e49ac47656786fccf2565ee80aced" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if and only if digraph &lt;code&gt;Digraph&lt;/code&gt; is a &lt;code&gt;&lt;a href=&quot;#tree&quot;&gt;tree&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">当且仅当digraph &lt;code&gt;Digraph&lt;/code&gt; 是一 &lt;code&gt;&lt;a href=&quot;#tree&quot;&gt;tree&lt;/a&gt;&lt;/code&gt; 返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="327156105915035f1032d70d9ab3440b473d4c96" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if and only if digraph &lt;code&gt;Digraph&lt;/code&gt; is an &lt;code&gt;&lt;a href=&quot;#arborescence&quot;&gt;arborescence&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">当且仅当digraph &lt;code&gt;Digraph&lt;/code&gt; 是 &lt;code&gt;&lt;a href=&quot;#arborescence&quot;&gt;arborescence&lt;/a&gt;&lt;/code&gt; ，才返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="840b52726cf59a5cc0dabded8950ff985905b19b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if annotations Anno is marked as generated. The default is to return &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果注释Anno被标记为已生成，则返回 &lt;code&gt;true&lt;/code&gt; 。默认值是返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c6bc092bbc73143b7b3017ab2ec9146c3d1e6217" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if any of its arguments evaluates to &lt;code&gt;true&lt;/code&gt;. Variable length argument list. Evaluation order is undefined.</source>
          <target state="translated">返回 &lt;code&gt;true&lt;/code&gt; ，如果它的任何参数评价了以 &lt;code&gt;true&lt;/code&gt; 。可变长度参数列表。评估顺序未定义。</target>
        </trans-unit>
        <trans-unit id="236983b7cd3e3574ce3c71d4ca89c338a1439e8b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if any of the abstract clauses in the list is a catch-all, otherwise &lt;code&gt;false&lt;/code&gt;. See &lt;code&gt;is_catchall/1&lt;/code&gt; for details.</source>
          <target state="translated">如果列表中的任何抽象子句都是万能的，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。有关详细信息，请参见 &lt;code&gt;is_catchall/1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a2053b7f5bdd086b8047b1e87efe86460350e0af" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if any trace property was changed for the trace target process, otherwise &lt;code&gt;false&lt;/code&gt;. Can only be used in the &lt;code&gt;MatchBody&lt;/code&gt; part when tracing.</source>
          <target state="translated">如果为跟踪目标进程更改了任何跟踪属性，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。跟踪时只能在 &lt;code&gt;MatchBody&lt;/code&gt; 零件中使用。</target>
        </trans-unit>
        <trans-unit id="43efa171035ceda499204f341baf5bc459c87fb7" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if dictionary &lt;code&gt;Dict&lt;/code&gt; has no elements, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果字典 &lt;code&gt;Dict&lt;/code&gt; 没有元素，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c98b79c7fa00cfd78967f676d2573904eb541446" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if disconnection succeeds, otherwise &lt;code&gt;false&lt;/code&gt;. If the local node is not alive, &lt;code&gt;ignored&lt;/code&gt; is returned.</source>
          <target state="translated">如果断开连接成功，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。如果本地节点未处于活动状态，则返回 &lt;code&gt;ignored&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bb71e5c8ceda563e5d0d9e12dfae53c738eca5f3" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if file &lt;code&gt;Filename&lt;/code&gt; is a Dets table, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果文件 &lt;code&gt;Filename&lt;/code&gt; 是Dets表，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="68e38950453e65d4f2e1f3e4268733a7a8322552" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if it would be possible to initialize table &lt;code&gt;Name&lt;/code&gt;, using &lt;code&gt;&lt;a href=&quot;#init_table-3&quot;&gt;init_table/3&lt;/a&gt;&lt;/code&gt; with option &lt;code&gt;{format,&amp;nbsp;bchunk}&lt;/code&gt;, with objects read with &lt;code&gt;&lt;a href=&quot;#bchunk-2&quot;&gt;bchunk/2&lt;/a&gt;&lt;/code&gt; from some table &lt;code&gt;T&lt;/code&gt;, such that calling &lt;code&gt;info(T,&amp;nbsp;bchunk_format)&lt;/code&gt; returns &lt;code&gt;BchunkFormat&lt;/code&gt;.</source>
          <target state="translated">如果可以使用带有选项 &lt;code&gt;{format,&amp;nbsp;bchunk}&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#init_table-3&quot;&gt;init_table/3&lt;/a&gt;&lt;/code&gt; 和从某个表 &lt;code&gt;T&lt;/code&gt; 中用 &lt;code&gt;&lt;a href=&quot;#bchunk-2&quot;&gt;bchunk/2&lt;/a&gt;&lt;/code&gt; 读取的对象来初始化表 &lt;code&gt;Name&lt;/code&gt; ，则返回 &lt;code&gt;true&lt;/code&gt; ，这样调用 &lt;code&gt;info(T,&amp;nbsp;bchunk_format)&lt;/code&gt; 返回 &lt;code&gt;BchunkFormat&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1bdb1cad515a009f56874d9217ed8b2129743b76" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if map &lt;code&gt;Map&lt;/code&gt; contains &lt;code&gt;Key&lt;/code&gt; and returns &lt;code&gt;false&lt;/code&gt; if it does not contain the &lt;code&gt;Key&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;true&lt;/code&gt; ，如果地图 &lt;code&gt;Map&lt;/code&gt; 包含 &lt;code&gt;Key&lt;/code&gt; ，并返回 &lt;code&gt;false&lt;/code&gt; ，如果它不包含 &lt;code&gt;Key&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="837da330dacaa1b15470c144dcc8185069d210aa" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if map iterator &lt;code&gt;iter&lt;/code&gt; is positioned after the last entry.</source>
          <target state="translated">如果映射迭代器 &lt;code&gt;iter&lt;/code&gt; 位于最后一个条目之后，则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f79af967987941ecfed42a3dcde1052b946b59e8" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if map iterator &lt;code&gt;iter&lt;/code&gt; is positioned before the first entry.</source>
          <target state="translated">如果映射迭代器 &lt;code&gt;iter&lt;/code&gt; 位于第一个条目之前，则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="16d59e1a9a86923e1a80bc517d8d705043437d4a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if successful and any process is needed to be killed, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果成功并且需要终止任何进程，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cdebcfc3efe21b160fa6918abbd7bf23dce050ae" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if successful, or &lt;code&gt;false&lt;/code&gt; if there is old code for &lt;code&gt;Module&lt;/code&gt; that must be purged first, or if &lt;code&gt;Module&lt;/code&gt; is not a (loaded) module.</source>
          <target state="translated">如果成功，则返回 &lt;code&gt;true&lt;/code&gt; ;如果必须先清除 &lt;code&gt;Module&lt;/code&gt; 的旧代码，或者如果 &lt;code&gt;Module&lt;/code&gt; 不是（已加载的）模块，则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0572bc092a167640466d31c3359149f46443af08" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if successful, or &lt;code&gt;{error, bad_directory}&lt;/code&gt; if &lt;code&gt;Dir&lt;/code&gt; is not the name of a directory.</source>
          <target state="translated">如果成功，则返回 &lt;code&gt;true&lt;/code&gt; &lt;code&gt;{error, bad_directory}&lt;/code&gt; 如果 &lt;code&gt;Dir&lt;/code&gt; 不是目录，则返回{error，bad_directory}。</target>
        </trans-unit>
        <trans-unit id="1b5c160eb9149616deeb9049d2afc3f6388183ab" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if term &lt;code&gt;Term&lt;/code&gt; is a &lt;code&gt;&lt;a href=&quot;#type&quot;&gt;type&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">如果term &lt;code&gt;Term&lt;/code&gt; 是 &lt;code&gt;&lt;a href=&quot;#type&quot;&gt;type&lt;/a&gt;&lt;/code&gt; ,则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d8de59c038d12f2d3e08f19ee569920dd53c9901" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the binary relation &lt;code&gt;BinRel&lt;/code&gt; is a &lt;code&gt;&lt;a href=&quot;#function&quot;&gt;function&lt;/a&gt;&lt;/code&gt; or the untyped empty set, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果二进制关系 &lt;code&gt;BinRel&lt;/code&gt; 是 &lt;code&gt;&lt;a href=&quot;#function&quot;&gt;function&lt;/a&gt;&lt;/code&gt; 或无类型的空集，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f6342bf32678cb2c64cd38d8e07dd6a2b2dfe8b7" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the command is successfully sent. Returns &lt;code&gt;false&lt;/code&gt; if the command fails, for example:</source>
          <target state="translated">如果命令发送成功，则返回 &lt;code&gt;true&lt;/code&gt; 。如果命令失败，则返回 &lt;code&gt;false&lt;/code&gt; ，例如：</target>
        </trans-unit>
        <trans-unit id="220c2e851c0b3fd14620b8e1dcda51e08e19d82b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the currently executing process is currently alive, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果当前正在执行的进程当前处于活动状态，则返回 &lt;code&gt;true&lt;/code&gt; ；否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2f34a1052c6f7f165ca8d43accd0a5f4d7fd88f9" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the emulator has been debug-compiled, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果仿真器已经过调试编译，则返回 &lt;code&gt;true&lt;/code&gt; ；否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5a7ffac42baa2d1c8cd24f128386c2d20707b636" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the emulator uses some kind of kernel-poll implementation, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果模拟器使用某种内核轮询实现，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2640d134008b1db2fa00ae38ca1ebbb6ce7040a6" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the iterator is now positioned at a valid key-value entry, or &lt;code&gt;false&lt;/code&gt; if the iterator is positioned at the head (before the first entry).</source>
          <target state="translated">如果迭代器现在位于有效的键值条目处，则返回 &lt;code&gt;true&lt;/code&gt; ;如果迭代器位于头部（在第一个条目之前），则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d9b837b1c56e4945383c5d2f3a9dc241703e2df8" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the iterator is now positioned at a valid key-value entry, or &lt;code&gt;false&lt;/code&gt; if the iterator is positioned at the tail (beyond the last entry).</source>
          <target state="translated">如果迭代器现在位于有效的键值条目处，则返回 &lt;code&gt;true&lt;/code&gt; ;如果迭代器位于末尾（位于最后一个条目之外），则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a21b32bdb2fbfa17b4e830e4f95747fe424f9a29" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the local node is alive (that is, if the node can be part of a distributed system), otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;true&lt;/code&gt; ，如果本地节点是活的（也就是说，如果节点可以是分布式系统的一部分），否则 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f5131fcd6ba86896d200f95b33fbef1c0adb94f6" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the message is successfully sent. Returns &lt;code&gt;false&lt;/code&gt; if the send operation fails, that is:</source>
          <target state="translated">如果成功发送了消息，则返回 &lt;code&gt;true&lt;/code&gt; 。如果发送操作失败，则返回 &lt;code&gt;false&lt;/code&gt; ，即：</target>
        </trans-unit>
        <trans-unit id="c8afd8d30e955139fc8e323555c9f5c022ea9a15" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the module &lt;code&gt;Module&lt;/code&gt; is loaded and contains an exported function &lt;code&gt;Function/Arity&lt;/code&gt;, or if there is a BIF (a built-in function implemented in C) with the specified name, otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;true&lt;/code&gt; 如果模块 &lt;code&gt;Module&lt;/code&gt; 被加载并含有导出函数 &lt;code&gt;Function/Arity&lt;/code&gt; ，或者如果有一个BIF（一个内置的C实现功能）具有指定名称，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="16e198b58e0edccd813bfb44b5c3a1312ac4aee0" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the module &lt;code&gt;Module&lt;/code&gt; is loaded, otherwise &lt;code&gt;false&lt;/code&gt;. It does not attempt to load the module.</source>
          <target state="translated">如果模块 &lt;code&gt;Module&lt;/code&gt; 已加载，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。它不会尝试加载模块。</target>
        </trans-unit>
        <trans-unit id="d7bc8d39440fe46705c1d257350ef7754ed81483" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the objects returned by &lt;code&gt;TraverseFun&lt;/code&gt; are sorted on the key.</source>
          <target state="translated">如果 &lt;code&gt;TraverseFun&lt;/code&gt; 返回的对象在键上排序，则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2bcb89d9b82db482ff72119bdbde47d919f64682" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the objects returned by &lt;code&gt;TraverseFun&lt;/code&gt; are unique.</source>
          <target state="translated">如果 &lt;code&gt;TraverseFun&lt;/code&gt; 返回的对象是唯一的，则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f4d83743ed429a6343e5e632fb6b972613cbee8c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the process exists and is alive, that is, is not exiting and has not exited. Otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果该进程存在并且处于活动状态，即没有退出，也没有退出，则返回 &lt;code&gt;true&lt;/code&gt; 。否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ebd06398cc287278fc23a50bdaae51ea37c25415" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the runtime system is a node and can connect to other nodes, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">如果运行时系统是一个节点并且可以连接到其他节点，则返回 &lt;code&gt;true&lt;/code&gt; ,否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f71bf76db34debfde26e70f0e54ea224761149ba" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the two terms are identical. Corresponds to the Erlang operators &lt;code&gt;=:=&lt;/code&gt; and &lt;code&gt;=/=&lt;/code&gt;.</source>
          <target state="translated">如果两个术语相同，则返回 &lt;code&gt;true&lt;/code&gt; 。对应于Erlang运算符 &lt;code&gt;=:=&lt;/code&gt; 和 &lt;code&gt;=/=&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9ff27fafa393707e02c06057f9c2017959462baf" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if there is a tuple in &lt;code&gt;TupleList&lt;/code&gt; whose &lt;code&gt;N&lt;/code&gt;th element compares equal to &lt;code&gt;Key&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;true&lt;/code&gt; ，如果有一个元组 &lt;code&gt;TupleList&lt;/code&gt; 其 &lt;code&gt;N&lt;/code&gt; 个元素比较等于 &lt;code&gt;Key&lt;/code&gt; ，否则 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="85701f95978427663468d859796b17568ab01b21" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;bin_term&lt;/code&gt; is not a binary.</source>
          <target state="translated">成功返回 &lt;code&gt;true&lt;/code&gt; ，如果 &lt;code&gt;bin_term&lt;/code&gt; 不是二进制，则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1a49e2c312bfd297ed7ee94aa673637f429d9003" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;iolist&lt;/code&gt; is not an iolist.</source>
          <target state="translated">成功返回 &lt;code&gt;true&lt;/code&gt; ，如果 &lt;code&gt;iolist&lt;/code&gt; 不是iolist，则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5c212fa02d51be234a67b9d0c062850d25485d96" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;iovec_term&lt;/code&gt; not an iovec.</source>
          <target state="translated">成功返回 &lt;code&gt;true&lt;/code&gt; ，如果 &lt;code&gt;iovec_term&lt;/code&gt; 不是iovec ，则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="425fbe1cd4660079beb601b7a7d141785b8bb5b0" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;map&lt;/code&gt; is not a map or if &lt;code&gt;map&lt;/code&gt; does not contain &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">成功返回 &lt;code&gt;true&lt;/code&gt; ，如果 &lt;code&gt;map&lt;/code&gt; 不是map或 &lt;code&gt;map&lt;/code&gt; 不包含 &lt;code&gt;key&lt;/code&gt; ，则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1704a3eb02df06c9442f7329c92305fc551db19a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;map_in&lt;/code&gt; is not a map.</source>
          <target state="translated">成功返回 &lt;code&gt;true&lt;/code&gt; ，如果 &lt;code&gt;map_in&lt;/code&gt; 不是地图则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8df341505523d0787a98812bdc19d731d9d6cf77" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;skip&lt;/code&gt; is greater than the size of &lt;code&gt;bin&lt;/code&gt;. Any ownership of the binary data is transferred to the queue and &lt;code&gt;bin&lt;/code&gt; is to be considered read-only for the rest of the NIF call and then as released.</source>
          <target state="translated">成功返回 &lt;code&gt;true&lt;/code&gt; ，如果 &lt;code&gt;skip&lt;/code&gt; 大于 &lt;code&gt;bin&lt;/code&gt; 的大小则返回 &lt;code&gt;false&lt;/code&gt; 。二进制数据的所有所有权都将转移到队列， &lt;code&gt;bin&lt;/code&gt; 对于其余的NIF调用将被视为只读，然后释放。</target>
        </trans-unit>
        <trans-unit id="251cb50d4a2c89949192daeab958e9efdf0c377e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;skip&lt;/code&gt; is greater than the size of &lt;code&gt;iovec&lt;/code&gt;.</source>
          <target state="translated">成功返回 &lt;code&gt;true&lt;/code&gt; ，如果 &lt;code&gt;skip&lt;/code&gt; 大于 &lt;code&gt;iovec&lt;/code&gt; 的大小则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="80b561dcb4ef365f079754a33329bf329b878aa8" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is not a float.</source>
          <target state="translated">成功返回 &lt;code&gt;true&lt;/code&gt; ，如果 &lt;code&gt;term&lt;/code&gt; 不是浮点数则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="15b5e63a09c5aaa78ac7910c8d72c4ca1bdc992e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is not a handle to a resource object of type &lt;code&gt;type&lt;/code&gt;.</source>
          <target state="translated">成功返回 &lt;code&gt;true&lt;/code&gt; ，如果 &lt;code&gt;term&lt;/code&gt; 不是type &lt;code&gt;type&lt;/code&gt; 的资源对象的句柄，则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="db55b33e73993b506b85c710afaad8ac05f4f25a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is not a map.</source>
          <target state="translated">成功返回 &lt;code&gt;true&lt;/code&gt; ，如果 &lt;code&gt;term&lt;/code&gt; 不是map ，则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b96817a78d4b89e0e0af672b61e730a7a6cdcf50" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is not a proper list.</source>
          <target state="translated">成功返回 &lt;code&gt;true&lt;/code&gt; ，如果 &lt;code&gt;term&lt;/code&gt; 不正确，则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="74a1ff742d26d9d5e217d93e495385074b5a91c7" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is not a tuple.</source>
          <target state="translated">成功返回 &lt;code&gt;true&lt;/code&gt; ，如果 &lt;code&gt;term&lt;/code&gt; 不是元组则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e0764fec41c326adbe09a5e85cd0f2ddf311239b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is not an atom.</source>
          <target state="translated">成功返回 &lt;code&gt;true&lt;/code&gt; ；如果 &lt;code&gt;term&lt;/code&gt; 不是原子，则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f2720c100b3370e08814ba40a54fadc0b7e1ecde" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is not an integer or is outside the bounds of a signed 64-bit integer.</source>
          <target state="translated">成功返回 &lt;code&gt;true&lt;/code&gt; ；如果 &lt;code&gt;term&lt;/code&gt; 不是整数或在带符号的64位整数的范围之外，则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="466cc40c31f850b67f9e5b9d5eafadd6ca7d8bd7" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is not an integer or is outside the bounds of type &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">成功返回 &lt;code&gt;true&lt;/code&gt; ；如果 &lt;code&gt;term&lt;/code&gt; 不是整数或超出 &lt;code&gt;int&lt;/code&gt; 类型的范围，则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d5dd34616831ba5e73c34e77058031a360a47f61" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is not an integer or is outside the bounds of type &lt;code&gt;long int&lt;/code&gt;.</source>
          <target state="translated">成功返回 &lt;code&gt;true&lt;/code&gt; ，如果 &lt;code&gt;term&lt;/code&gt; 不是整数或超出 &lt;code&gt;long int&lt;/code&gt; 类型的范围，则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3ce5bb0360bb82e10c287051a3544582ad7996ee" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is not an unsigned integer or is outside the bounds of an unsigned 64-bit integer.</source>
          <target state="translated">成功返回 &lt;code&gt;true&lt;/code&gt; ；如果 &lt;code&gt;term&lt;/code&gt; 不是无符号整数或在无符号64位整数的范围之外，则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ebdc24ba5578cd605bf5abafb13309dbdb85f5e8" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is not an unsigned integer or is outside the bounds of type &lt;code&gt;unsigned int&lt;/code&gt;.</source>
          <target state="translated">成功返回 &lt;code&gt;true&lt;/code&gt; ，如果 &lt;code&gt;term&lt;/code&gt; 不是一个无符号整数或超出 &lt;code&gt;unsigned int&lt;/code&gt; 类型的范围，则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ad16fe9435f50ea2161b3f9229e301fc160ace24" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is not an unsigned integer or is outside the bounds of type &lt;code&gt;unsigned long&lt;/code&gt;.</source>
          <target state="translated">成功返回 &lt;code&gt;true&lt;/code&gt; ，如果 &lt;code&gt;term&lt;/code&gt; 不是一个无符号整数或超出 &lt;code&gt;unsigned long&lt;/code&gt; 类型的范围，则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c66b4dd3767c73443718052878eb4d7dad05fa10" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if allocation fails.</source>
          <target state="translated">成功返回 &lt;code&gt;true&lt;/code&gt; ，如果分配失败则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="402cb52c5dc41234e885abc23c81a2c290a6af4a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if it is not a list or the list is empty.</source>
          <target state="translated">成功返回 &lt;code&gt;true&lt;/code&gt; ，如果不是列表或列表为空，则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="17d5f63b40b549a6977536ef8a6adfcf84871635" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if memory allocation failed.</source>
          <target state="translated">成功返回 &lt;code&gt;true&lt;/code&gt; ，如果内存分配失败则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="22a67098bbe3a6af017af30fcf52e9ffc8423f04" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if the I/O does not contain &lt;code&gt;count&lt;/code&gt; bytes. On failure the queue is left un-altered.</source>
          <target state="translated">成功返回 &lt;code&gt;true&lt;/code&gt; ，如果I / O不包含 &lt;code&gt;count&lt;/code&gt; 字节，则返回 &lt;code&gt;false&lt;/code&gt; 。失败时，队列保持不变。</target>
        </trans-unit>
        <trans-unit id="02ec2783839d8a59082df68de0ce8bcd6cd8429e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if the allocation fails.</source>
          <target state="translated">成功返回 &lt;code&gt;true&lt;/code&gt; ，如果分配失败则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="de43efc8b12e870f3ff949cf7150965a8579f354" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if the queue is empty.</source>
          <target state="translated">成功返回 &lt;code&gt;true&lt;/code&gt; ，如果队列为空，则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="762065f9e524f1edd906886731650b489362d98d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or false if &lt;code&gt;map&lt;/code&gt; is not a map.</source>
          <target state="translated">成功返回 &lt;code&gt;true&lt;/code&gt; ，如果 &lt;code&gt;map&lt;/code&gt; 不是map，则返回false 。</target>
        </trans-unit>
        <trans-unit id="09cb26109a0688f3ddf6aa2b146ecd484a16fdc0" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; when every element of &lt;code&gt;Ordset1&lt;/code&gt; is also a member of &lt;code&gt;Ordset2&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;true&lt;/code&gt; 时的每一个元素 &lt;code&gt;Ordset1&lt;/code&gt; 也是成员 &lt;code&gt;Ordset2&lt;/code&gt; ，否则 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fd2b541eaaee25c8b7e1896e058688d9e003422d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; when every element of &lt;code&gt;Set1&lt;/code&gt; is also a member of &lt;code&gt;Set2&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">当 &lt;code&gt;Set1&lt;/code&gt; 的每个元素也是 &lt;code&gt;Set2&lt;/code&gt; 的成员时，返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="772f6c1866dde47182302fa4adfbd6b65a83ecc5" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="01b5f3c7e9e34ad0ea7e55d06b0d272719cb9f36" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;undefined&lt;/code&gt; if any of the following applies:</source>
          <target state="translated">如果满足以下任一条件，则返回 &lt;code&gt;undefined&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="7541454270931be498139883739610e2bc72b64f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;undefined&lt;/code&gt; if system flag &lt;code&gt;&lt;a href=&quot;#system_flag_microstate_accounting&quot;&gt; microstate_accounting&lt;/a&gt;&lt;/code&gt; is turned off.</source>
          <target state="translated">如果系统标志 &lt;code&gt;&lt;a href=&quot;#system_flag_microstate_accounting&quot;&gt; microstate_accounting&lt;/a&gt;&lt;/code&gt; 已关闭，则返回 &lt;code&gt;undefined&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1ce7dfa3a0d8ca6c582893c5a3a497ecd9596cf8" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;undefined&lt;/code&gt; if system flag &lt;code&gt;&lt;a href=&quot;#system_flag_microstate_accounting&quot;&gt;microstate_accounting&lt;/a&gt;&lt;/code&gt; is turned off.</source>
          <target state="translated">如果系统标志 &lt;code&gt;&lt;a href=&quot;#system_flag_microstate_accounting&quot;&gt;microstate_accounting&lt;/a&gt;&lt;/code&gt; 已关闭，则返回 &lt;code&gt;undefined&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9ae255612d9ff757b002486d3c3afdc71c6422b3" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;undefined&lt;/code&gt; if system flag &lt;code&gt;&lt;a href=&quot;#system_flag_scheduler_wall_time&quot;&gt; scheduler_wall_time&lt;/a&gt;&lt;/code&gt; is turned off.</source>
          <target state="translated">如果关闭系统标志 &lt;code&gt;&lt;a href=&quot;#system_flag_scheduler_wall_time&quot;&gt; scheduler_wall_time&lt;/a&gt;&lt;/code&gt; ,则返回 &lt;code&gt;undefined&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3cbb78209aa42d2d824c7225bd68db96b78b41cc" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;undefined&lt;/code&gt; if system flag &lt;code&gt;&lt;a href=&quot;#system_flag_scheduler_wall_time&quot;&gt;scheduler_wall_time&lt;/a&gt;&lt;/code&gt; is turned off.</source>
          <target state="translated">如果系统标志 &lt;code&gt;&lt;a href=&quot;#system_flag_scheduler_wall_time&quot;&gt;scheduler_wall_time&lt;/a&gt;&lt;/code&gt; 关闭，则返回 &lt;code&gt;undefined&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="79b1e7f3aa52d8516e62aa3d67ceadbc5536b02b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;yes&lt;/code&gt; if communication with &lt;code&gt;Node&lt;/code&gt; is authorized. Notice that a connection to &lt;code&gt;Node&lt;/code&gt; is established in this case. Returns &lt;code&gt;no&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; does not exist or communication is not authorized (it has another cookie than &lt;code&gt;auth&lt;/code&gt; thinks it has).</source>
          <target state="translated">如果与 &lt;code&gt;Node&lt;/code&gt; 的通信被授权，则返回 &lt;code&gt;yes&lt;/code&gt; 。请注意，在这种情况下，已建立到 &lt;code&gt;Node&lt;/code&gt; 的连接。如果 &lt;code&gt;Node&lt;/code&gt; 不存在或未授权通信（它具有与 &lt;code&gt;auth&lt;/code&gt; 认为不一样的另一个cookie ），则返回 &lt;code&gt;no&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ff68aa8173942d5ed453128b3460662d3f4018ef" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{0,0,{pid(),0}}&lt;/code&gt; or &lt;code&gt;{0,0,undefined}&lt;/code&gt; if &lt;code&gt;memsup&lt;/code&gt; is not available, or if all memory checks so far have timed out.</source>
          <target state="translated">如果 &lt;code&gt;memsup&lt;/code&gt; 不可用，或者到目前为止所有内存检查都已超时，则返回 &lt;code&gt;{0,0,{pid(),0}}&lt;/code&gt; 或 &lt;code&gt;{0,0,undefined}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8a2ba5a5819b807f3fa6c7dcac826c02ac20ac12" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{Allocator, Version, Features, Settings&lt;/code&gt;, where:</source>
          <target state="translated">返回 &lt;code&gt;{Allocator, Version, Features, Settings&lt;/code&gt; ，其中：</target>
        </trans-unit>
        <trans-unit id="88b240dca4c3a19f9e5608f231fb6555ed83370b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{Continuation2, eof}&lt;/code&gt; when the end of the log is reached, and &lt;code&gt;{error, Reason}&lt;/code&gt; if an error occurs.</source>
          <target state="translated">到达日志结尾时 &lt;code&gt;{Continuation2, eof}&lt;/code&gt; 返回{Continuation2，eof} &lt;code&gt;{error, Reason}&lt;/code&gt; 如果发生错误，则返回{error，Reason}。</target>
        </trans-unit>
        <trans-unit id="9a433a57e945cfebfd65dacf6868869bb0981d75" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{E,&amp;nbsp;V1,&amp;nbsp;V2,&amp;nbsp;Label}&lt;/code&gt;, where &lt;code&gt;Label&lt;/code&gt; is the &lt;code&gt;&lt;a href=&quot;#label&quot;&gt;label&lt;/a&gt;&lt;/code&gt; of edge &lt;code&gt;E&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#emanate&quot;&gt;emanating&lt;/a&gt;&lt;/code&gt; from &lt;code&gt;V1&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#incident&quot;&gt;incident&lt;/a&gt;&lt;/code&gt; on &lt;code&gt;V2&lt;/code&gt; of digraph &lt;code&gt;G&lt;/code&gt;. If no edge &lt;code&gt;E&lt;/code&gt; of digraph &lt;code&gt;G&lt;/code&gt; exists, &lt;code&gt;false&lt;/code&gt; is returned.</source>
          <target state="translated">返回 &lt;code&gt;{E,&amp;nbsp;V1,&amp;nbsp;V2,&amp;nbsp;Label}&lt;/code&gt; ，其中 &lt;code&gt;Label&lt;/code&gt; 是 &lt;code&gt;&lt;a href=&quot;#label&quot;&gt;label&lt;/a&gt;&lt;/code&gt; 边缘的 &lt;code&gt;E&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#emanate&quot;&gt;emanating&lt;/a&gt;&lt;/code&gt; 从 &lt;code&gt;V1&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;#incident&quot;&gt;incident&lt;/a&gt;&lt;/code&gt; 在 &lt;code&gt;V2&lt;/code&gt; 有向图的 &lt;code&gt;G&lt;/code&gt; ^。如果图 &lt;code&gt;G&lt;/code&gt; 的边 &lt;code&gt;E&lt;/code&gt; 不存在，则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="efc56f026af628e903a47db2fc6244058b8806dc" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{Element, Iter2}&lt;/code&gt;, where &lt;code&gt;Element&lt;/code&gt; is the smallest element referred to by iterator &lt;code&gt;Iter1&lt;/code&gt;, and &lt;code&gt;Iter2&lt;/code&gt; is the new iterator to be used for traversing the remaining elements, or the atom &lt;code&gt;none&lt;/code&gt; if no elements remain.</source>
          <target state="translated">返回 &lt;code&gt;{Element, Iter2}&lt;/code&gt; ，其中 &lt;code&gt;Element&lt;/code&gt; 是迭代器 &lt;code&gt;Iter1&lt;/code&gt; 引用的最小元素，而 &lt;code&gt;Iter2&lt;/code&gt; 是用于遍历其余元素的新迭代器；如果没有剩余元素，则原子 &lt;code&gt;none&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="393d32dc102733bc6ee1d537437533c14cd4c072" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{Element, Set2}&lt;/code&gt;, where &lt;code&gt;Element&lt;/code&gt; is the largest element in &lt;code&gt;Set1&lt;/code&gt;, and &lt;code&gt;Set2&lt;/code&gt; is this set with &lt;code&gt;Element&lt;/code&gt; deleted. Assumes that &lt;code&gt;Set1&lt;/code&gt; is not empty.</source>
          <target state="translated">返回 &lt;code&gt;{Element, Set2}&lt;/code&gt; ，其中 &lt;code&gt;Element&lt;/code&gt; 是 &lt;code&gt;Set1&lt;/code&gt; 中最大的元素，而 &lt;code&gt;Set2&lt;/code&gt; 是已删除 &lt;code&gt;Element&lt;/code&gt; 的集合。假定 &lt;code&gt;Set1&lt;/code&gt; 不为空。</target>
        </trans-unit>
        <trans-unit id="4e8ef39d1666ed76b60b4e7c413afdf3ec6f6595" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{Element, Set2}&lt;/code&gt;, where &lt;code&gt;Element&lt;/code&gt; is the smallest element in &lt;code&gt;Set1&lt;/code&gt;, and &lt;code&gt;Set2&lt;/code&gt; is this set with &lt;code&gt;Element&lt;/code&gt; deleted. Assumes that &lt;code&gt;Set1&lt;/code&gt; is not empty.</source>
          <target state="translated">返回 &lt;code&gt;{Element, Set2}&lt;/code&gt; ，其中 &lt;code&gt;Element&lt;/code&gt; 是 &lt;code&gt;Set1&lt;/code&gt; 中的最小元素，而 &lt;code&gt;Set2&lt;/code&gt; 是已删除 &lt;code&gt;Element&lt;/code&gt; 的集合。假定 &lt;code&gt;Set1&lt;/code&gt; 不为空。</target>
        </trans-unit>
        <trans-unit id="55661fa3ce23aa28a56bb35fd85a1158d7146be6" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{GoodNodes, BadNodes}&lt;/code&gt;, where &lt;code&gt;GoodNodes&lt;/code&gt; is the list of nodes that have &lt;code&gt;Name&lt;/code&gt; as a registered process.</source>
          <target state="translated">返回 &lt;code&gt;{GoodNodes, BadNodes}&lt;/code&gt; ，其中 &lt;code&gt;GoodNodes&lt;/code&gt; 是具有 &lt;code&gt;Name&lt;/code&gt; 作为已注册进程的节点的列表。</target>
        </trans-unit>
        <trans-unit id="a48003f5247a06d5277793d1f9fa8845a8f3ac94" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{Key, Value, Iter2}&lt;/code&gt;, where &lt;code&gt;Key&lt;/code&gt; is the smallest key referred to by iterator &lt;code&gt;Iter1&lt;/code&gt;, and &lt;code&gt;Iter2&lt;/code&gt; is the new iterator to be used for traversing the remaining nodes, or the atom &lt;code&gt;none&lt;/code&gt; if no nodes remain.</source>
          <target state="translated">返回 &lt;code&gt;{Key, Value, Iter2}&lt;/code&gt; ，其中 &lt;code&gt;Key&lt;/code&gt; 是最小的键通过迭代称为 &lt;code&gt;Iter1&lt;/code&gt; ，和 &lt;code&gt;Iter2&lt;/code&gt; 是用于遍历剩余节点，或所述原子新的迭代器 &lt;code&gt;none&lt;/code&gt; 如果没有节点保持。</target>
        </trans-unit>
        <trans-unit id="fe0692890a96736c1f9a5989a0656786fa01679b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{Key, Value, Tree2}&lt;/code&gt;, where &lt;code&gt;Key&lt;/code&gt; is the largest key in &lt;code&gt;Tree1&lt;/code&gt;, &lt;code&gt;Value&lt;/code&gt; is the value associated with this key, and &lt;code&gt;Tree2&lt;/code&gt; is this tree with the corresponding node deleted. Assumes that the tree is not empty.</source>
          <target state="translated">返回 &lt;code&gt;{Key, Value, Tree2}&lt;/code&gt; ，其中 &lt;code&gt;Key&lt;/code&gt; 是 &lt;code&gt;Tree1&lt;/code&gt; 中最大的键， &lt;code&gt;Value&lt;/code&gt; 是与此键关联的值， &lt;code&gt;Tree2&lt;/code&gt; 是已删除相应节点的该树。假定树不为空。</target>
        </trans-unit>
        <trans-unit id="8e1ea4bc482a37ad1fa45fe6b4361e60424e31a7" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{Key, Value, Tree2}&lt;/code&gt;, where &lt;code&gt;Key&lt;/code&gt; is the smallest key in &lt;code&gt;Tree1&lt;/code&gt;, &lt;code&gt;Value&lt;/code&gt; is the value associated with this key, and &lt;code&gt;Tree2&lt;/code&gt; is this tree with the corresponding node deleted. Assumes that the tree is not empty.</source>
          <target state="translated">返回 &lt;code&gt;{Key, Value, Tree2}&lt;/code&gt; ，其中 &lt;code&gt;Key&lt;/code&gt; 是 &lt;code&gt;Tree1&lt;/code&gt; 中的最小键， &lt;code&gt;Value&lt;/code&gt; 是与此键关联的值， &lt;code&gt;Tree2&lt;/code&gt; 是已删除相应节点的该树。假定树不为空。</target>
        </trans-unit>
        <trans-unit id="89f276e5e399472c1bd9f5f932089656cedbf6bf" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{Key, Value}&lt;/code&gt;, where &lt;code&gt;Key&lt;/code&gt; is the largest key in &lt;code&gt;Tree&lt;/code&gt;, and &lt;code&gt;Value&lt;/code&gt; is the value associated with this key. Assumes that the tree is not empty.</source>
          <target state="translated">返回 &lt;code&gt;{Key, Value}&lt;/code&gt; ，其中 &lt;code&gt;Key&lt;/code&gt; 是 &lt;code&gt;Tree&lt;/code&gt; 中最大的键，而 &lt;code&gt;Value&lt;/code&gt; 是与此键关联的值。假定树不为空。</target>
        </trans-unit>
        <trans-unit id="f7b3f6f07b4bb6247cb280d2ba6e0cddd533b4ee" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{Key, Value}&lt;/code&gt;, where &lt;code&gt;Key&lt;/code&gt; is the smallest key in &lt;code&gt;Tree&lt;/code&gt;, and &lt;code&gt;Value&lt;/code&gt; is the value associated with this key. Assumes that the tree is not empty.</source>
          <target state="translated">返回 &lt;code&gt;{Key, Value}&lt;/code&gt; ，其中 &lt;code&gt;Key&lt;/code&gt; 是 &lt;code&gt;Tree&lt;/code&gt; 中的最小键，而 &lt;code&gt;Value&lt;/code&gt; 是与此键关联的值。假定树不为空。</target>
        </trans-unit>
        <trans-unit id="b87bc425abe887b256f0bffb48b0d712c6f26190" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{Time, Value}&lt;/code&gt;, where &lt;code&gt;Time&lt;/code&gt; is the elapsed real time in &lt;strong&gt;microseconds&lt;/strong&gt;, and &lt;code&gt;Value&lt;/code&gt; is what is returned from the apply.</source>
          <target state="translated">返回 &lt;code&gt;{Time, Value}&lt;/code&gt; ，其中 &lt;code&gt;Time&lt;/code&gt; 是经过的实时时间（以&lt;strong&gt;微秒为单位）&lt;/strong&gt;， &lt;code&gt;Value&lt;/code&gt; 是从应用返回的值。</target>
        </trans-unit>
        <trans-unit id="3b83d15e05599f5726b5ba13192f1c2cbf143449" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{V,&amp;nbsp;Label}&lt;/code&gt;, where &lt;code&gt;Label&lt;/code&gt; is the &lt;code&gt;&lt;a href=&quot;#label&quot;&gt;label&lt;/a&gt;&lt;/code&gt; of the vertex &lt;code&gt;V&lt;/code&gt; of digraph &lt;code&gt;G&lt;/code&gt;, or &lt;code&gt;false&lt;/code&gt; if no vertex &lt;code&gt;V&lt;/code&gt; of digraph &lt;code&gt;G&lt;/code&gt; exists.</source>
          <target state="translated">返回 &lt;code&gt;{V,&amp;nbsp;Label}&lt;/code&gt; ，其中 &lt;code&gt;Label&lt;/code&gt; 是 &lt;code&gt;&lt;a href=&quot;#label&quot;&gt;label&lt;/a&gt;&lt;/code&gt; 的顶点的 &lt;code&gt;V&lt;/code&gt; 有向图的 &lt;code&gt;G&lt;/code&gt; ^，或 &lt;code&gt;false&lt;/code&gt; 如果没有顶点 &lt;code&gt;V&lt;/code&gt; 有向图的 &lt;code&gt;G&lt;/code&gt; 存在。</target>
        </trans-unit>
        <trans-unit id="833529750ef3e7c04f447cd981d75c4bf67a62fa" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{ValueList, NewBindings}&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;{ValueList, NewBindings}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e20190e6cd6522d1185a4f4229af82649a8972c9" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{all,0,0,[]}&lt;/code&gt; if &lt;code&gt;cpu_sup&lt;/code&gt; is not available.</source>
          <target state="translated">如果 &lt;code&gt;cpu_sup&lt;/code&gt; 不可用 &lt;code&gt;{all,0,0,[]}&lt;/code&gt; 返回{all，0,0，[]}。</target>
        </trans-unit>
        <trans-unit id="00754e1856a24e2dff7d16ad8cd24696290a5b52" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{error, Reason}&lt;/code&gt; for all errors.</source>
          <target state="translated">返回所有错误的 &lt;code&gt;{error, Reason}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a03273a17cf20521c4bfcec4f487e6c790ea9e0c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{error, Reason}&lt;/code&gt; if &lt;code&gt;host_file()&lt;/code&gt; returns &lt;code&gt;{error, Reason}&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;{error, Reason}&lt;/code&gt; 如果 &lt;code&gt;host_file()&lt;/code&gt; 返回 &lt;code&gt;{error, Reason}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="366df6b410d0dc85728af0bfb8a23e49a0898b24" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{error, bad_name}&lt;/code&gt; if &lt;code&gt;Name&lt;/code&gt; is not the name of an application under &lt;code&gt;$OTPROOT/lib&lt;/code&gt; or on a directory referred to through environment variable &lt;code&gt;ERL_LIBS&lt;/code&gt;. Fails with an exception if &lt;code&gt;Name&lt;/code&gt; has the wrong type.</source>
          <target state="translated">如果 &lt;code&gt;Name&lt;/code&gt; 不是 &lt;code&gt;$OTPROOT/lib&lt;/code&gt; 或通过环境变量 &lt;code&gt;ERL_LIBS&lt;/code&gt; 引用的目录上的应用程序名称，则返回 &lt;code&gt;{error, bad_name}&lt;/code&gt; 。如果 &lt;code&gt;Name&lt;/code&gt; 类型错误，则异常失败。</target>
        </trans-unit>
        <trans-unit id="1127d6855067a544ce8dabd94131eee9103628d0" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{error, enotsup}&lt;/code&gt; on platforms that have no concept of current drive (Unix, for example).</source>
          <target state="translated">在没有当前驱动器概念的平台（例如Unix）上返回 &lt;code&gt;{error, enotsup}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1c0e3e642e9988f23e1651e79c1f83e267a5ce84" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{error, {'invalid global_groups definition', Bad}}&lt;/code&gt; if configuration parameter &lt;code&gt;global_groups&lt;/code&gt; has an invalid value &lt;code&gt;Bad&lt;/code&gt;.</source>
          <target state="translated">如果配置参数 &lt;code&gt;global_groups&lt;/code&gt; 的值 &lt;code&gt;Bad&lt;/code&gt; &lt;code&gt;{error, {'invalid global_groups definition', Bad}}&lt;/code&gt; 返回{error，{'invalid global_groups definition'，Bad}}。</target>
        </trans-unit>
        <trans-unit id="08331cd302f70b32cfdb9f28877b7ced295e81f3" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{file,File}&lt;/code&gt; if the module &lt;code&gt;Module&lt;/code&gt; is Cover compiled, or &lt;code&gt;false&lt;/code&gt; otherwise. &lt;code&gt;File&lt;/code&gt; is the &lt;code&gt;.erl&lt;/code&gt; file used by &lt;code&gt;cover:compile_module/1,2&lt;/code&gt; or the &lt;code&gt;.beam&lt;/code&gt; file used by &lt;code&gt;compile_beam/1&lt;/code&gt;.</source>
          <target state="translated">如果模块 &lt;code&gt;Module&lt;/code&gt; 是Cover编译的，则返回 &lt;code&gt;{file,File}&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。 &lt;code&gt;File&lt;/code&gt; 是 &lt;code&gt;.erl&lt;/code&gt; 通过使用文件 &lt;code&gt;cover:compile_module/1,2&lt;/code&gt; 或 &lt;code&gt;.beam&lt;/code&gt; 通过使用文件 &lt;code&gt;compile_beam/1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bc6cd949b74ac18e91b63a0611e94c6601753003" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{fullsweep_after, integer() &amp;gt;= 0}&lt;/code&gt;, which is the &lt;code&gt;fullsweep_after&lt;/code&gt; garbage collection setting used by default. For more information, see &lt;code&gt;garbage_collection&lt;/code&gt; described below.</source>
          <target state="translated">返回 &lt;code&gt;{fullsweep_after, integer() &amp;gt;= 0}&lt;/code&gt; ，这是默认使用的 &lt;code&gt;fullsweep_after&lt;/code&gt; 垃圾收集设置。有关更多信息，请参见 &lt;code&gt;garbage_collection&lt;/code&gt; 描述的垃圾收集。</target>
        </trans-unit>
        <trans-unit id="cbda8fa8bb826b93aae877ea8f5ee0b58ffba1d1" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{max_heap_size, MaxHeapSize}&lt;/code&gt;, where &lt;code&gt;MaxHeapSize&lt;/code&gt; is the current system-wide maximum heap size settings for spawned processes. This setting can be set using the command-line flags &lt;code&gt;&lt;a href=&quot;erl#+hmax&quot;&gt;+hmax&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;erl#+hmaxk&quot;&gt;+hmaxk&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;erl#+hmaxel&quot;&gt;+hmaxel&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;erl(1)&lt;/code&gt;. It can also be changed at runtime using &lt;code&gt;&lt;a href=&quot;#system_flag_max_heap_size&quot;&gt; erlang:system_flag(max_heap_size, MaxHeapSize)&lt;/a&gt;&lt;/code&gt;. For more details about the &lt;code&gt;max_heap_size&lt;/code&gt; process flag, see &lt;code&gt;&lt;a href=&quot;#process_flag_max_heap_size&quot;&gt; process_flag(max_heap_size, MaxHeapSize)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;{max_heap_size, MaxHeapSize}&lt;/code&gt; ，其中 &lt;code&gt;MaxHeapSize&lt;/code&gt; 是当前系统范围内生成进程的最大堆大小设置。此设置可以使用命令行标志被设置 &lt;code&gt;&lt;a href=&quot;erl#+hmax&quot;&gt;+hmax&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;erl#+hmaxk&quot;&gt;+hmaxk&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;erl#+hmaxel&quot;&gt;+hmaxel&lt;/a&gt;&lt;/code&gt; 在 &lt;code&gt;erl(1)&lt;/code&gt; 。也可以在运行时使用 &lt;code&gt;&lt;a href=&quot;#system_flag_max_heap_size&quot;&gt; erlang:system_flag(max_heap_size, MaxHeapSize)&lt;/a&gt;&lt;/code&gt; 进行更改。有关详细信息， &lt;code&gt;max_heap_size&lt;/code&gt; 中标志，看到 &lt;code&gt;&lt;a href=&quot;#process_flag_max_heap_size&quot;&gt; process_flag(max_heap_size, MaxHeapSize)&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="331a53c9e16eb417b3327df3828d48f586d5a6bd" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{max_heap_size, MaxHeapSize}&lt;/code&gt;, where &lt;code&gt;MaxHeapSize&lt;/code&gt; is the current system-wide maximum heap size settings for spawned processes. This setting can be set using the command-line flags &lt;code&gt;&lt;a href=&quot;erl#+hmax&quot;&gt;+hmax&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;erl#+hmaxk&quot;&gt;+hmaxk&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;erl#+hmaxel&quot;&gt;+hmaxel&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;erl(1)&lt;/code&gt;. It can also be changed at runtime using &lt;code&gt;&lt;a href=&quot;#system_flag_max_heap_size&quot;&gt;erlang:system_flag(max_heap_size, MaxHeapSize)&lt;/a&gt;&lt;/code&gt;. For more details about the &lt;code&gt;max_heap_size&lt;/code&gt; process flag, see &lt;code&gt;&lt;a href=&quot;#process_flag_max_heap_size&quot;&gt;process_flag(max_heap_size, MaxHeapSize)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;{max_heap_size, MaxHeapSize}&lt;/code&gt; ，其中 &lt;code&gt;MaxHeapSize&lt;/code&gt; 是当前系统范围内产生的进程的最大堆大小设置。此设置可以使用命令行标志被设置 &lt;code&gt;&lt;a href=&quot;erl#+hmax&quot;&gt;+hmax&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;erl#+hmaxk&quot;&gt;+hmaxk&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;erl#+hmaxel&quot;&gt;+hmaxel&lt;/a&gt;&lt;/code&gt; 在 &lt;code&gt;erl(1)&lt;/code&gt; 。也可以在运行时使用 &lt;code&gt;&lt;a href=&quot;#system_flag_max_heap_size&quot;&gt;erlang:system_flag(max_heap_size, MaxHeapSize)&lt;/a&gt;&lt;/code&gt; 进行更改。有关详细信息， &lt;code&gt;max_heap_size&lt;/code&gt; 中标志，看到 &lt;code&gt;&lt;a href=&quot;#process_flag_max_heap_size&quot;&gt;process_flag(max_heap_size, MaxHeapSize)&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2b68242c8927ae4aa1c70666a93d13ffdb58a777" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{min_bin_vheap_size, MinBinVHeapSize}&lt;/code&gt;, where &lt;code&gt;MinBinVHeapSize&lt;/code&gt; is the current system-wide minimum binary virtual heap size for spawned processes.</source>
          <target state="translated">返回 &lt;code&gt;{min_bin_vheap_size, MinBinVHeapSize}&lt;/code&gt; ，其中 &lt;code&gt;MinBinVHeapSize&lt;/code&gt; 是当前系统范围内产生的进程的最小二进制虚拟堆大小。</target>
        </trans-unit>
        <trans-unit id="7b93c870194a4e7c820ac8afebdcac052fe99d49" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{min_heap_size, MinHeapSize}&lt;/code&gt;, where &lt;code&gt;MinHeapSize&lt;/code&gt; is the current system-wide minimum heap size for spawned processes.</source>
          <target state="translated">返回 &lt;code&gt;{min_heap_size, MinHeapSize}&lt;/code&gt; ，其中 &lt;code&gt;MinHeapSize&lt;/code&gt; 是当前系统范围内产生的进程的最小堆大小。</target>
        </trans-unit>
        <trans-unit id="4c753b5f57aed1f2be36a29d6d7233a6e7fc823c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{module, Module}&lt;/code&gt; if successful, or &lt;code&gt;{error, Reason}&lt;/code&gt; if loading fails. See &lt;code&gt;&lt;a href=&quot;#error_reasons&quot;&gt;Error Reasons for Code-Loading Functions&lt;/a&gt;&lt;/code&gt; for a description of the possible error reasons.</source>
          <target state="translated">如果成功，则返回 &lt;code&gt;{module, Module}&lt;/code&gt; &lt;code&gt;{error, Reason}&lt;/code&gt; 如果加载失败，则返回{ error，Reason}。有关可能的错误原因的说明，请参见 &lt;code&gt;&lt;a href=&quot;#error_reasons&quot;&gt;Error Reasons for Code-Loading Functions&lt;/a&gt;&lt;/code&gt; 的错误原因。</target>
        </trans-unit>
        <trans-unit id="d21639cd96a17ba54d0ea4982cc607eb28fec4d8" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{ok, AppNames}&lt;/code&gt; for a successful start or for an already started application (which is, however, omitted from the &lt;code&gt;AppNames&lt;/code&gt; list).</source>
          <target state="translated">对于成功启动或已经启动的应用程序 &lt;code&gt;{ok, AppNames}&lt;/code&gt; 返回{ok，AppNames}（但是， &lt;code&gt;AppNames&lt;/code&gt; 列表中省略了该名称）。</target>
        </trans-unit>
        <trans-unit id="0a91819bb450fc042c77c6ef0fcc791f1806f465" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{ok, AppNames}&lt;/code&gt;, where &lt;code&gt;AppNames&lt;/code&gt; is a list of the application names that was actually started by this call. The list might be empty, or not contain all dependencies if the application or some of its dependencies are already started.</source>
          <target state="translated">返回 &lt;code&gt;{ok, AppNames}&lt;/code&gt; ，其中 &lt;code&gt;AppNames&lt;/code&gt; 是此调用实际启动的应用程序名称的列表。该列表可能为空，或者如果应用程序或其某些依赖项已启动，则列表不包含所有依赖项。</target>
        </trans-unit>
        <trans-unit id="d315a9b8d727b127c74bafa6a3f060a565512370" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{ok, Binary}&lt;/code&gt;, where &lt;code&gt;Binary&lt;/code&gt; is a binary data object that contains the contents of &lt;code&gt;Filename&lt;/code&gt;, or &lt;code&gt;{error, Reason}&lt;/code&gt; if an error occurs.</source>
          <target state="translated">返回 &lt;code&gt;{ok, Binary}&lt;/code&gt; ，其中 &lt;code&gt;Binary&lt;/code&gt; 是包含的内容的二进制数据对象 &lt;code&gt;Filename&lt;/code&gt; ，或 &lt;code&gt;{error, Reason}&lt;/code&gt; 如果发生错误。</target>
        </trans-unit>
        <trans-unit id="525c655903cc75da6161764cd50c898b36f933e4" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{ok, BytesCopied}&lt;/code&gt;, where &lt;code&gt;BytesCopied&lt;/code&gt; is the number of bytes that was copied, which can be less than &lt;code&gt;ByteCount&lt;/code&gt; if end of file was encountered on the source. If the operation fails, &lt;code&gt;{error, Reason}&lt;/code&gt; is returned.</source>
          <target state="translated">返回 &lt;code&gt;{ok, BytesCopied}&lt;/code&gt; ，其中 &lt;code&gt;BytesCopied&lt;/code&gt; 是要复制的字节数，如果在源上遇到文件末尾，则可以小于 &lt;code&gt;ByteCount&lt;/code&gt; 。如果操作失败，则返回 &lt;code&gt;{error, Reason}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e2fdbfba25d1c13b4c1c046500ab28039154c511" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{ok, Continuation}&lt;/code&gt; if the log/index file is opened successfully. &lt;code&gt;Continuation&lt;/code&gt; is to be used when chunking or closing the file.</source>
          <target state="translated">如果成功打开日志/索引文件，则返回 &lt;code&gt;{ok, Continuation}&lt;/code&gt; 。在对文件进行分块或关闭时使用 &lt;code&gt;Continuation&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d7d8052af3f43d76653939bc62908aa05dbf0c0a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{ok, Dir}&lt;/code&gt; or &lt;code&gt;{error, Reason}&lt;/code&gt;, where &lt;code&gt;Dir&lt;/code&gt; is the current working directory of the specified drive.</source>
          <target state="translated">返回 &lt;code&gt;{ok, Dir}&lt;/code&gt; 或 &lt;code&gt;{error, Reason}&lt;/code&gt; ，其中 &lt;code&gt;Dir&lt;/code&gt; 是指定驱动器的当前工作目录。</target>
        </trans-unit>
        <trans-unit id="e57cd0a2d2a36cac656d2b766bd89790ba75e6b9" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{ok, Dir}&lt;/code&gt;, where &lt;code&gt;Dir&lt;/code&gt; is the current working directory of the file server.</source>
          <target state="translated">返回 &lt;code&gt;{ok, Dir}&lt;/code&gt; ，其中 &lt;code&gt;Dir&lt;/code&gt; 是文件服务器的当前工作目录。</target>
        </trans-unit>
        <trans-unit id="70628411315134680c4570f7d86d9d5b089f5796" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{ok, Filename}&lt;/code&gt; if &lt;code&gt;Name&lt;/code&gt; refers to a symbolic link or &lt;code&gt;{error, Reason}&lt;/code&gt; otherwise. On platforms that do not support symbolic links, the return value is &lt;code&gt;{error,enotsup}&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Name&lt;/code&gt; 引用符号链接 &lt;code&gt;{ok, Filename}&lt;/code&gt; 则返回{ok，Filename}，否则返回{ &lt;code&gt;{error, Reason}&lt;/code&gt; 。在不支持符号链接的平台上，返回值为 &lt;code&gt;{error,enotsup}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2396fc5b1271f60064222577f92f372d93ac4626" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{ok, IpPort}&lt;/code&gt; where &lt;code&gt;IpPort&lt;/code&gt; is the IP port number used by the driver listen socket. Only the ip trace driver supports this operation.</source>
          <target state="translated">返回 &lt;code&gt;{ok, IpPort}&lt;/code&gt; ，其中 &lt;code&gt;IpPort&lt;/code&gt; 是驱动程序侦听套接字使用的IP端口号。仅ip跟踪驱动程序支持此操作。</target>
        </trans-unit>
        <trans-unit id="b1aeb5183667fcc40c359fec7f290fd93bff628c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{ok, NewVsn, Script}&lt;/code&gt; if successful, where &lt;code&gt;NewVsn&lt;/code&gt; is the new application version. For details about &lt;code&gt;Script&lt;/code&gt;, see &lt;code&gt;&lt;a href=&quot;appup&quot;&gt;appup(4)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">如果成功，则返回 &lt;code&gt;{ok, NewVsn, Script}&lt;/code&gt; ，其中 &lt;code&gt;NewVsn&lt;/code&gt; 是新的应用程序版本。有关 &lt;code&gt;Script&lt;/code&gt; 详细信息，请参见 &lt;code&gt;&lt;a href=&quot;appup&quot;&gt;appup(4)&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="58f1c87b2a36610dcd7fa20851fdd685363e0515" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{ok, Options}&lt;/code&gt; where &lt;code&gt;Options&lt;/code&gt; is a list of current options enabled for heart. If the callback is cleared, &lt;code&gt;none&lt;/code&gt; will be returned.</source>
          <target state="translated">返回 &lt;code&gt;{ok, Options}&lt;/code&gt; ，其中 &lt;code&gt;Options&lt;/code&gt; 是为heart启用的当前选项的列表。如果清除了回调，则不会返回 &lt;code&gt;none&lt;/code&gt; 内容。</target>
        </trans-unit>
        <trans-unit id="c12a24d6ef45b2a3b8d244c5023475a09bcdb3ea" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{ok, Script}&lt;/code&gt; if successful. For details about &lt;code&gt;Script&lt;/code&gt;, see &lt;code&gt;&lt;a href=&quot;appup&quot;&gt;appup(4)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">如果成功 &lt;code&gt;{ok, Script}&lt;/code&gt; 则返回{ok，Script}。有关 &lt;code&gt;Script&lt;/code&gt; 详细信息，请参见 &lt;code&gt;&lt;a href=&quot;appup&quot;&gt;appup(4)&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="982549332c9000b139b7f75b0566066696ec2bff" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{ok, TRef}&lt;/code&gt; or &lt;code&gt;{error, Reason}&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;{ok, TRef}&lt;/code&gt; 或 &lt;code&gt;{error, Reason}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f94a7a91f55c6582d54c56cd55e902ddee43cfd7" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{ok, cancel}&lt;/code&gt;, or &lt;code&gt;{error, Reason}&lt;/code&gt; when &lt;code&gt;TRef&lt;/code&gt; is not a timer reference.</source>
          <target state="translated">当 &lt;code&gt;TRef&lt;/code&gt; 不是计时器引用时，返回 &lt;code&gt;{ok, cancel}&lt;/code&gt; 或 &lt;code&gt;{error, Reason}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b371b241c5d039ac927cc9ae053642ebd1776939" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{ok,ModuleName}&lt;/code&gt; if successful, or &lt;code&gt;error&lt;/code&gt; if there are errors. An object code file is created if the compilation succeeds without errors. It is considered to be an error if the module name in the source code is not the same as the basename of the output file.</source>
          <target state="translated">如果成功，则返回 &lt;code&gt;{ok,ModuleName}&lt;/code&gt; ，如果有 &lt;code&gt;error&lt;/code&gt; 则返回error。如果编译成功且没有错误，则创建目标代码文件。如果源代码中的模块名称与输出文件的基本名称不同，则认为是错误。</target>
        </trans-unit>
        <trans-unit id="56e28ed5878c26ccf5d3d8d866d209eada335dc9" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{ok,Name,Nodes}&lt;/code&gt; or &lt;code&gt;{error,Reason}&lt;/code&gt;. &lt;code&gt;Name&lt;/code&gt; is the (possibly generated) checkpoint name. &lt;code&gt;Nodes&lt;/code&gt; are the nodes that are involved in the checkpoint. Only nodes that keep a checkpoint retainer know about the checkpoint.</source>
          <target state="translated">返回 &lt;code&gt;{ok,Name,Nodes}&lt;/code&gt; 或 &lt;code&gt;{error,Reason}&lt;/code&gt; 。 &lt;code&gt;Name&lt;/code&gt; 是（可能生成的）检查点名称。 &lt;code&gt;Nodes&lt;/code&gt; 是检查点中涉及的节点。只有保留检查点保留程序的节点才知道该检查点。</target>
        </trans-unit>
        <trans-unit id="df57a8990d22e2034e72cb8d923b4730017d0102" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{value, Value, NewBindings}&lt;/code&gt;</source>
          <target state="translated">返回 &lt;code&gt;{value, Value, NewBindings}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="259fe1b63654f77ae2cab10c66dc676092c4f23b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{value, Value, NewBindings}&lt;/code&gt; by default. If &lt;code&gt;ReturnFormat&lt;/code&gt; is &lt;code&gt;value&lt;/code&gt;, only &lt;code&gt;Value&lt;/code&gt; is returned.</source>
          <target state="translated">默认情况下返回 &lt;code&gt;{value, Value, NewBindings}&lt;/code&gt; 。如果 &lt;code&gt;ReturnFormat&lt;/code&gt; 为 &lt;code&gt;value&lt;/code&gt; ，则仅返回 &lt;code&gt;Value&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="307c398020ed01eaa89c381879ee6bd118a94270" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{yes, Root}&lt;/code&gt; if &lt;code&gt;Root&lt;/code&gt; is the &lt;code&gt;&lt;a href=&quot;#root&quot;&gt;root&lt;/a&gt;&lt;/code&gt; of the arborescence &lt;code&gt;Digraph&lt;/code&gt;, otherwise &lt;code&gt;no&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Root&lt;/code&gt; 是树状有向 &lt;code&gt;Digraph&lt;/code&gt; 的 &lt;code&gt;&lt;a href=&quot;#root&quot;&gt;root&lt;/a&gt;&lt;/code&gt; ，则返回 &lt;code&gt;{yes, Root}&lt;/code&gt; ，否则返回 &lt;code&gt;no&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b3dab1df8995af3b207b03227c6c89632481a2a3" translate="yes" xml:space="preserve">
          <source>Returns CPU utilization since the last call to &lt;code&gt;util/0&lt;/code&gt; or &lt;code&gt;util/1&lt;/code&gt; by the calling process, in more detail than &lt;code&gt;util/0&lt;/code&gt;.</source>
          <target state="translated">返回自调用进程最后一次调用 &lt;code&gt;util/0&lt;/code&gt; 或 &lt;code&gt;util/1&lt;/code&gt; 以来的CPU利用率，比 &lt;code&gt;util/0&lt;/code&gt; 更详细。</target>
        </trans-unit>
        <trans-unit id="08b8d450a6dc3df5d2c2a376e4fd6abee1dc93f7" translate="yes" xml:space="preserve">
          <source>Returns CPU utilization since the last call to &lt;code&gt;util/0&lt;/code&gt; or &lt;code&gt;util/1&lt;/code&gt; by the calling process.</source>
          <target state="translated">返回自上次调用进程对 &lt;code&gt;util/0&lt;/code&gt; 或 &lt;code&gt;util/1&lt;/code&gt; 的调用以来的CPU使用率。</target>
        </trans-unit>
        <trans-unit id="7a19e0bf6777e3799f608c28e900a89c647ee453" translate="yes" xml:space="preserve">
          <source>Returns Universal Coordinated Time (UTC) converted from the return value from &lt;code&gt;erlang:timestamp/0&lt;/code&gt;.</source>
          <target state="translated">返回从 &lt;code&gt;erlang:timestamp/0&lt;/code&gt; 的返回值转换的通用协调时间（UTC）。</target>
        </trans-unit>
        <trans-unit id="f82fe86c3ac3fe7c359747c520e87a0d841ed9cc" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt; unique reference&lt;/code&gt;. The reference is unique among connected nodes.</source>
          <target state="translated">返回 &lt;code&gt; unique reference&lt;/code&gt; 。该参考在连接的节点之间是唯一的。</target>
        </trans-unit>
        <trans-unit id="fc2f7b5b3d9afa9e1e7199caeeca85be350eda48" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;&lt;a href=&quot;#topsort&quot;&gt;topological ordering&lt;/a&gt;&lt;/code&gt; of the vertices of digraph &lt;code&gt;Digraph&lt;/code&gt; if such an ordering exists, otherwise &lt;code&gt;false&lt;/code&gt;. For each vertex in the returned list, no &lt;code&gt;&lt;a href=&quot;#out_neighbour&quot;&gt;out-neighbors&lt;/a&gt;&lt;/code&gt; occur earlier in the list.</source>
          <target state="translated">返回 &lt;code&gt;Digraph&lt;/code&gt; 的顶点的 &lt;code&gt;&lt;a href=&quot;#topsort&quot;&gt;topological ordering&lt;/a&gt;&lt;/code&gt; （如果存在），否则返回 &lt;code&gt;false&lt;/code&gt; 。对于返回列表中的每个顶点，列表中的较早没有 &lt;code&gt;&lt;a href=&quot;#out_neighbour&quot;&gt;out-neighbors&lt;/a&gt;&lt;/code&gt; 发生。</target>
        </trans-unit>
        <trans-unit id="6aa6cf6ede13f42502f631272769865fcac29a7b" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;boolean()&lt;/code&gt; indicating if dynamic trace probes (&lt;code&gt;dtrace&lt;/code&gt; or &lt;code&gt;systemtap&lt;/code&gt;) are built into the emulator. This can only be &lt;code&gt;true&lt;/code&gt; if the virtual machine was built for dynamic tracing (that is, &lt;code&gt;system_info(dynamic_trace)&lt;/code&gt; returns &lt;code&gt;dtrace&lt;/code&gt; or &lt;code&gt;systemtap&lt;/code&gt;).</source>
          <target state="translated">返回一个 &lt;code&gt;boolean()&lt;/code&gt; ,指示动态跟踪探针（ &lt;code&gt;dtrace&lt;/code&gt; 或 &lt;code&gt;systemtap&lt;/code&gt; ）是否内置在模拟器中。仅当虚拟机是为动态跟踪构建的（即 &lt;code&gt;system_info(dynamic_trace)&lt;/code&gt; 返回 &lt;code&gt;dtrace&lt;/code&gt; 或 &lt;code&gt;systemtap&lt;/code&gt; ）时，这才是 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a905cad4e576d62f46400225eb02ef1422c0eb12" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;boolean()&lt;/code&gt;, which is &lt;code&gt;true&lt;/code&gt; if the driver has made itself permanent (and is &lt;strong&gt;not&lt;/strong&gt; a statically linked-in driver), otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">返回一个 &lt;code&gt;boolean()&lt;/code&gt; ，如果驱动程序已使其成为永久驱动程序（并且&lt;strong&gt;不是&lt;/strong&gt;静态链接的驱动程序），则为 &lt;code&gt;true&lt;/code&gt; ，否则为 &lt;code&gt;false&lt;/code&gt; 。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2ca7493b9ffd9be9014ac0512766d56dd26c9312" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;boolean()&lt;/code&gt;, which is &lt;code&gt;true&lt;/code&gt; if the driver is a statically linked-in one, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">返回一个 &lt;code&gt;boolean()&lt;/code&gt; ，如果驱动程序是静态链接的，则为 &lt;code&gt;true&lt;/code&gt; ，否则为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3234c4a766711d5c57912c3b50d0f182fa16108f" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;file_info&lt;/code&gt; record from the file system object specified by &lt;code&gt;Name&lt;/code&gt; or &lt;code&gt;Handle&lt;/code&gt;. See &lt;code&gt;file:read_file_info/2&lt;/code&gt; for information about the record.</source>
          <target state="translated">从 &lt;code&gt;Name&lt;/code&gt; 或 &lt;code&gt;Handle&lt;/code&gt; 指定的文件系统对象返回 &lt;code&gt;file_info&lt;/code&gt; 记录。有关该记录的信息，请参见 &lt;code&gt;file:read_file_info/2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f6543572ba044682da2942e18f0b4cfed7fb8712" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;file_info&lt;/code&gt; record from the symbolic link specified by &lt;code&gt;Name&lt;/code&gt; or &lt;code&gt;Handle&lt;/code&gt;. See &lt;code&gt;file:read_link_info/2&lt;/code&gt; for information about the record.</source>
          <target state="translated">从 &lt;code&gt;Name&lt;/code&gt; 或 &lt;code&gt;Handle&lt;/code&gt; 指定的符号链接返回一个 &lt;code&gt;file_info&lt;/code&gt; 记录。有关该记录的信息，请参见 &lt;code&gt;file:read_link_info/2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="99fc75484cbf5300077871a453cc781348fc6e5e" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;hostent&lt;/code&gt; record for the host with the specified address.</source>
          <target state="translated">返回 &lt;code&gt;hostent&lt;/code&gt; 与指定地址的主机记录。</target>
        </trans-unit>
        <trans-unit id="de7444ab2a8e88af314b25b1e3fdd3d968d39b73" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;hostent&lt;/code&gt; record for the host with the specified hostname.</source>
          <target state="translated">返回 &lt;code&gt;hostent&lt;/code&gt; 具有指定主机名的主机记录。</target>
        </trans-unit>
        <trans-unit id="10fa45c621f5400516d43f36bc7ca182b157e17e" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;hostent&lt;/code&gt; record for the host with the specified name, restricted to the specified address family.</source>
          <target state="translated">返回一个 &lt;code&gt;hostent&lt;/code&gt; 与指定名称的主机，仅限于指定的地址族纪录。</target>
        </trans-unit>
        <trans-unit id="bd72681d770b7e4e9977496e81c32f763b668a12" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;unique reference&lt;/code&gt;. The reference is unique among connected nodes.</source>
          <target state="translated">返回 &lt;code&gt;unique reference&lt;/code&gt; 。该参考在连接的节点之间是唯一的。</target>
        </trans-unit>
        <trans-unit id="b36032265fcec0bef9af51bfec131f495b09dfb7" translate="yes" xml:space="preserve">
          <source>Returns a Query List Comprehension (QLC) query handle, see the &lt;code&gt;qlc(3)&lt;/code&gt; manual page in STDLIB. The module &lt;code&gt;qlc&lt;/code&gt; implements a query language that can use Mnesia tables as sources of data. Calling &lt;code&gt;mnesia:table/1,2&lt;/code&gt; is the means to make the &lt;code&gt;mnesia&lt;/code&gt; table &lt;code&gt;Tab&lt;/code&gt; usable to QLC.</source>
          <target state="translated">返回查询列表理解（QLC）查询句柄，请参阅STDLIB中的 &lt;code&gt;qlc(3)&lt;/code&gt; 手册页。 &lt;code&gt;qlc&lt;/code&gt; 模块实现了一种查询语言，该查询语言可以使用Mnesia表作为数据源。调用 &lt;code&gt;mnesia:table/1,2&lt;/code&gt; 是使 &lt;code&gt;mnesia&lt;/code&gt; 表 &lt;code&gt;Tab&lt;/code&gt; 对QLC可用的方法。</target>
        </trans-unit>
        <trans-unit id="3d75e30374093fa44b81d82bd285b20deb2f8f4d" translate="yes" xml:space="preserve">
          <source>Returns a Query List Comprehension (QLC) query handle. The &lt;code&gt;&lt;a href=&quot;qlc&quot;&gt;qlc(3)&lt;/a&gt;&lt;/code&gt; module provides a query language aimed mainly for Mnesia, but ETS tables, Dets tables, and lists are also recognized by &lt;code&gt;qlc&lt;/code&gt; as sources of data. Calling &lt;code&gt;&lt;a href=&quot;dets#table-1&quot;&gt;dets:table/1,2&lt;/a&gt;&lt;/code&gt; is the means to make Dets table &lt;code&gt;Name&lt;/code&gt; usable to &lt;code&gt;qlc&lt;/code&gt;.</source>
          <target state="translated">返回查询列表理解（QLC）查询句柄。所述 &lt;code&gt;&lt;a href=&quot;qlc&quot;&gt;qlc(3)&lt;/a&gt;&lt;/code&gt; 模块提供主要是针对用于Mnesia的查询语言，但ETS表，dets的表，列表也被认可 &lt;code&gt;qlc&lt;/code&gt; 作为数据源。调用 &lt;code&gt;&lt;a href=&quot;dets#table-1&quot;&gt;dets:table/1,2&lt;/a&gt;&lt;/code&gt; 是使 &lt;code&gt;qlc&lt;/code&gt; 表 &lt;code&gt;Name&lt;/code&gt; 可用于qlc的方法。</target>
        </trans-unit>
        <trans-unit id="4152f2ffd3a419df70ff7a88ee269a4601950fdc" translate="yes" xml:space="preserve">
          <source>Returns a Query List Comprehension (QLC) query handle. The &lt;code&gt;&lt;a href=&quot;qlc&quot;&gt;qlc&lt;/a&gt;&lt;/code&gt; module provides a query language aimed mainly at Mnesia, but ETS tables, Dets tables, and lists are also recognized by QLC as sources of data. Calling &lt;code&gt;table/1,2&lt;/code&gt; is the means to make the ETS table &lt;code&gt;Tab&lt;/code&gt; usable to QLC.</source>
          <target state="translated">返回查询列表理解（QLC）查询句柄。该 &lt;code&gt;&lt;a href=&quot;qlc&quot;&gt;qlc&lt;/a&gt;&lt;/code&gt; 模块主要提供旨在Mnesia的查询语言，但ETS表，限定词表和名单也被QLC公认的数据来源。调用 &lt;code&gt;table/1,2&lt;/code&gt; 是使ETS表 &lt;code&gt;Tab&lt;/code&gt; 对QLC可用的方法。</target>
        </trans-unit>
        <trans-unit id="cb1dfe5ae9bce85bdee2d0b90b9fab2c79489c7f" translate="yes" xml:space="preserve">
          <source>Returns a binary containing a string of distribution information formatted as in Erlang crash dumps. For more information, see section &lt;code&gt; How to interpret the Erlang crash dumps&lt;/code&gt; in the User's Guide.</source>
          <target state="translated">返回一个二进制文件，其中包含一串分发信息的字符串，该字符串的格式设置为Erlang故障转储中的格式。有关更多信息，请参见《用户指南》中的&amp;ldquo; &lt;code&gt; How to interpret the Erlang crash dumps&lt;/code&gt; &amp;rdquo;部分。</target>
        </trans-unit>
        <trans-unit id="10758fe7a9d4e24aace34272476abcc894626692" translate="yes" xml:space="preserve">
          <source>Returns a binary containing a string of distribution information formatted as in Erlang crash dumps. For more information, see section &lt;code&gt;How to interpret the Erlang crash dumps&lt;/code&gt; in the User's Guide.</source>
          <target state="translated">返回一个二进制文件，其中包含一串分发信息的字符串，该字符串的格式设置为Erlang故障转储中的格式。有关更多信息，请参见《用户指南》中的&amp;ldquo; &lt;code&gt;How to interpret the Erlang crash dumps&lt;/code&gt; &amp;rdquo;部分。</target>
        </trans-unit>
        <trans-unit id="7f03832e5911f4a8b2b0ede1115a6ec7cec8f20b" translate="yes" xml:space="preserve">
          <source>Returns a binary containing a string of loaded module information formatted as in Erlang crash dumps. For more information, see section &lt;code&gt;How to interpret the Erlang crash dumps&lt;/code&gt; in the User's Guide.</source>
          <target state="translated">返回一个二进制文件，其中包含一串已加载的模块信息，其格式如Erlang故障转储中所示。有关更多信息，请参见《用户指南》中的&amp;ldquo; &lt;code&gt;How to interpret the Erlang crash dumps&lt;/code&gt; &amp;rdquo;部分。</target>
        </trans-unit>
        <trans-unit id="2075dd8f7dd269353ce83468a1a82723e5f23ef7" translate="yes" xml:space="preserve">
          <source>Returns a binary containing a string of miscellaneous system information formatted as in Erlang crash dumps. For more information, see section &lt;code&gt; How to interpret the Erlang crash dumps&lt;/code&gt; in the User's Guide.</source>
          <target state="translated">返回一个二进制文件，其中包含一串其他系统信息，其格式如Erlang故障转储中所示。有关更多信息，请参见《用户指南》中的&amp;ldquo; &lt;code&gt; How to interpret the Erlang crash dumps&lt;/code&gt; &amp;rdquo;部分。</target>
        </trans-unit>
        <trans-unit id="701e0a42ef7e9ed9122ebe8cd8de1066e1f02f93" translate="yes" xml:space="preserve">
          <source>Returns a binary containing a string of miscellaneous system information formatted as in Erlang crash dumps. For more information, see section &lt;code&gt;How to interpret the Erlang crash dumps&lt;/code&gt; in the User's Guide.</source>
          <target state="translated">返回一个二进制文件，其中包含一串其他系统信息，其格式如Erlang故障转储中所示。有关更多信息，请参见《用户指南》中的&amp;ldquo; &lt;code&gt;How to interpret the Erlang crash dumps&lt;/code&gt; &amp;rdquo;部分。</target>
        </trans-unit>
        <trans-unit id="0ea5cf0e0aaaa1e6d56a5667ebebe1bd5a57541d" translate="yes" xml:space="preserve">
          <source>Returns a binary containing a string of process and port information formatted as in Erlang crash dumps. For more information, see section &lt;code&gt; How to interpret the Erlang crash dumps&lt;/code&gt; in the User's Guide.</source>
          <target state="translated">返回一个二进制文件，其中包含一连串的进程和端口信息，其格式如Erlang故障转储中所示。有关更多信息，请参见《用户指南》中的&amp;ldquo; &lt;code&gt; How to interpret the Erlang crash dumps&lt;/code&gt; &amp;rdquo;部分。</target>
        </trans-unit>
        <trans-unit id="7c1657dc35bf39e4d71d0c418cc1328d158fb2ea" translate="yes" xml:space="preserve">
          <source>Returns a binary containing a string of process and port information formatted as in Erlang crash dumps. For more information, see section &lt;code&gt;How to interpret the Erlang crash dumps&lt;/code&gt; in the User's Guide.</source>
          <target state="translated">返回一个二进制文件，其中包含一连串的进程和端口信息，其格式如Erlang故障转储中所示。有关更多信息，请参见《用户指南》中的&amp;ldquo; &lt;code&gt;How to interpret the Erlang crash dumps&lt;/code&gt; &amp;rdquo;部分。</target>
        </trans-unit>
        <trans-unit id="a1dad94a5ecf5eca59593c02af3bf2b091eec361" translate="yes" xml:space="preserve">
          <source>Returns a binary corresponding to the text representation of &lt;code&gt;Atom&lt;/code&gt;. If &lt;code&gt;Encoding&lt;/code&gt; is &lt;code&gt;latin1&lt;/code&gt;, one byte exists for each character in the text representation. If &lt;code&gt;Encoding&lt;/code&gt; is &lt;code&gt;utf8&lt;/code&gt; or &lt;code&gt;unicode&lt;/code&gt;, the characters are encoded using UTF-8 where characters may require multiple bytes.</source>
          <target state="translated">返回对应于 &lt;code&gt;Atom&lt;/code&gt; 文本表示形式的二进制文件。如果 &lt;code&gt;Encoding&lt;/code&gt; 为 &lt;code&gt;latin1&lt;/code&gt; ，则文本表示形式中的每个字符都有一个字节。如果 &lt;code&gt;Encoding&lt;/code&gt; 是 &lt;code&gt;utf8&lt;/code&gt; 或 &lt;code&gt;unicode&lt;/code&gt; ，则字符使用UTF-8编码，其中字符可能需要多个字节。</target>
        </trans-unit>
        <trans-unit id="55ee73d4b8aab26697c48b389d9b95e46cef858a" translate="yes" xml:space="preserve">
          <source>Returns a binary corresponding to the text representation of &lt;code&gt;Float&lt;/code&gt; using fixed decimal point formatting. &lt;code&gt;Options&lt;/code&gt; behaves in the same way as &lt;code&gt;&lt;a href=&quot;#float_to_list-2&quot;&gt; float_to_list/2&lt;/a&gt;&lt;/code&gt;. Examples:</source>
          <target state="translated">使用固定的小数点格式返回对应于 &lt;code&gt;Float&lt;/code&gt; 文本表示形式的二进制。 &lt;code&gt;Options&lt;/code&gt; 行为与 &lt;code&gt;&lt;a href=&quot;#float_to_list-2&quot;&gt; float_to_list/2&lt;/a&gt;&lt;/code&gt; 相同。例子：</target>
        </trans-unit>
        <trans-unit id="c200cdc2f9141d5effe910e8d58a6e4ec440e692" translate="yes" xml:space="preserve">
          <source>Returns a binary corresponding to the text representation of &lt;code&gt;Float&lt;/code&gt; using fixed decimal point formatting. &lt;code&gt;Options&lt;/code&gt; behaves in the same way as &lt;code&gt;&lt;a href=&quot;#float_to_list-2&quot;&gt;float_to_list/2&lt;/a&gt;&lt;/code&gt;. Examples:</source>
          <target state="translated">使用固定的小数点格式返回对应于 &lt;code&gt;Float&lt;/code&gt; 文本表示形式的二进制。 &lt;code&gt;Options&lt;/code&gt; 行为与 &lt;code&gt;&lt;a href=&quot;#float_to_list-2&quot;&gt;float_to_list/2&lt;/a&gt;&lt;/code&gt; 相同。例子：</target>
        </trans-unit>
        <trans-unit id="f46592046bcdbd9525f6604d56c2b8596b486186" translate="yes" xml:space="preserve">
          <source>Returns a binary corresponding to the text representation of &lt;code&gt;Integer&lt;/code&gt; in base &lt;code&gt;Base&lt;/code&gt;, for example:</source>
          <target state="translated">对应于文本表示一个二进制返回 &lt;code&gt;Integer&lt;/code&gt; 在碱 &lt;code&gt;Base&lt;/code&gt; ，例如：</target>
        </trans-unit>
        <trans-unit id="aafadebaa2d529b4bd803af14b18309ed02c2775" translate="yes" xml:space="preserve">
          <source>Returns a binary corresponding to the text representation of &lt;code&gt;Integer&lt;/code&gt;, for example:</source>
          <target state="translated">返回与 &lt;code&gt;Integer&lt;/code&gt; 的文本表示形式对应的二进制文件，例如：</target>
        </trans-unit>
        <trans-unit id="b62eb5a41f5a40804be1186f29dee7dcb8e5989b" translate="yes" xml:space="preserve">
          <source>Returns a binary data object that is the result of encoding &lt;code&gt;Term&lt;/code&gt; according to the &lt;code&gt;Erlang external term format.&lt;/code&gt;</source>
          <target state="translated">返回一个二进制数据对象，该对象是根据 &lt;code&gt;Erlang external term format.&lt;/code&gt; 对 &lt;code&gt;Term&lt;/code&gt; 进行编码的结果。</target>
        </trans-unit>
        <trans-unit id="02909a2663a155daa84e3263ffafb2ec37fb6f65" translate="yes" xml:space="preserve">
          <source>Returns a binary data object that is the result of encoding &lt;code&gt;Term&lt;/code&gt; according to the Erlang external term format.</source>
          <target state="translated">返回一个二进制数据对象，该对象是根据Erlang外部术语格式对 &lt;code&gt;Term&lt;/code&gt; 进行编码的结果。</target>
        </trans-unit>
        <trans-unit id="7690a87ef8a7aaa5bf863fabf7faebcbe41261ba" translate="yes" xml:space="preserve">
          <source>Returns a binary representing the MD5 checksum of the module. If the module has native code loaded, this will be the MD5 of the native code, not the BEAM bytecode.</source>
          <target state="translated">返回代表模块MD5校验和的二进制值。如果模块加载了本地代码,则返回本地代码的MD5,而不是BEAM的字节码。</target>
        </trans-unit>
        <trans-unit id="2dbd94b2a6a83030b3d8619baf1870a3078e9be9" translate="yes" xml:space="preserve">
          <source>Returns a binary that is made from the integers and binaries in &lt;code&gt;IoList&lt;/code&gt;, for example:</source>
          <target state="translated">返回一个由 &lt;code&gt;IoList&lt;/code&gt; 中的整数和二进制数组成的二进制数，例如：</target>
        </trans-unit>
        <trans-unit id="7dda80173828f0945e6862ada4fc4c763759686d" translate="yes" xml:space="preserve">
          <source>Returns a binary that is made from the integers and binaries in &lt;code&gt;IoListOrBinary&lt;/code&gt;, for example:</source>
          <target state="translated">返回一个由 &lt;code&gt;IoListOrBinary&lt;/code&gt; 中的整数和二进制数组成的二进制数，例如：</target>
        </trans-unit>
        <trans-unit id="02ce40de9366f7d68b862c64ceaaff27b0ca567d" translate="yes" xml:space="preserve">
          <source>Returns a bitstring that is made from the integers and bitstrings in &lt;code&gt;BitstringList&lt;/code&gt;. (The last tail in &lt;code&gt;BitstringList&lt;/code&gt; is allowed to be a bitstring.) Example:</source>
          <target state="translated">返回由 &lt;code&gt;BitstringList&lt;/code&gt; 中的整数和位串组成的位串。（允许 &lt;code&gt;BitstringList&lt;/code&gt; 中的最后一个尾部为位串。）示例：</target>
        </trans-unit>
        <trans-unit id="7f5bae5068f9e49ce7671463f1d687ed86bc1c86" translate="yes" xml:space="preserve">
          <source>Returns a boolean value indicating whether &lt;code&gt;&lt;a href=&quot;time_correction#Time_Correction&quot;&gt; time correction&lt;/a&gt;&lt;/code&gt; is enabled or not.</source>
          <target state="translated">返回指示是否启用 &lt;code&gt;&lt;a href=&quot;time_correction#Time_Correction&quot;&gt; time correction&lt;/a&gt;&lt;/code&gt; 的布尔值。</target>
        </trans-unit>
        <trans-unit id="f5adc61340a580263953283d1fa8186d7bed61f6" translate="yes" xml:space="preserve">
          <source>Returns a boolean value indicating whether &lt;code&gt;&lt;a href=&quot;time_correction#Time_Correction&quot;&gt;time correction&lt;/a&gt;&lt;/code&gt; is enabled or not.</source>
          <target state="translated">返回指示是否启用 &lt;code&gt;&lt;a href=&quot;time_correction#Time_Correction&quot;&gt;time correction&lt;/a&gt;&lt;/code&gt; 的布尔值。</target>
        </trans-unit>
        <trans-unit id="50d1a22052c4241fe5d82e0b202f513432bd9a9f" translate="yes" xml:space="preserve">
          <source>Returns a character list that represents &lt;code&gt;Data&lt;/code&gt; formatted in accordance with &lt;code&gt;Format&lt;/code&gt; in the same way as &lt;code&gt;&lt;a href=&quot;#fwrite-2&quot;&gt;fwrite/2&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#format-2&quot;&gt;format/2&lt;/a&gt;&lt;/code&gt;, but takes an extra argument, a list of options.</source>
          <target state="translated">返回一个字符列表，该列表表示以与 &lt;code&gt;&lt;a href=&quot;#fwrite-2&quot;&gt;fwrite/2&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;#format-2&quot;&gt;format/2&lt;/a&gt;&lt;/code&gt; 相同的方式按照 &lt;code&gt;Format&lt;/code&gt; 格式设置的 &lt;code&gt;Data&lt;/code&gt; ，但带有一个额外的参数，即选项列表。</target>
        </trans-unit>
        <trans-unit id="9a74d72ea023ac0f5f5818690811ff4e5c7430c9" translate="yes" xml:space="preserve">
          <source>Returns a character list that represents &lt;code&gt;Data&lt;/code&gt; formatted in accordance with &lt;code&gt;Format&lt;/code&gt;. For a detailed description of the available formatting options, see &lt;code&gt;&lt;a href=&quot;io#fwrite-1&quot;&gt;io:fwrite/1,2,3&lt;/a&gt;&lt;/code&gt;. If the format string or argument list contains an error, a fault is generated.</source>
          <target state="translated">返回一个字符列表，该列表表示根据 &lt;code&gt;Format&lt;/code&gt; 格式化的 &lt;code&gt;Data&lt;/code&gt; 。有关可用格式选项的详细说明，请参见 &lt;code&gt;&lt;a href=&quot;io#fwrite-1&quot;&gt;io:fwrite/1,2,3&lt;/a&gt;&lt;/code&gt; 。如果格式字符串或参数列表包含错误，则会生成错误。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
