<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="erlang">
    <body>
      <group id="erlang">
        <trans-unit id="5cb4c090444b4ce0ceb1ab98992c1c0dccb91d53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_functions&lt;/code&gt; (*), total number of local and exported functions;</source>
          <target state="translated">&lt;code&gt;no_functions&lt;/code&gt; （*），本地和导出函数的总数；</target>
        </trans-unit>
        <trans-unit id="e39499dbf292fa55f350939b5fb99b2713fa9900" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_functions&lt;/code&gt;. Functions in library modules and the functions &lt;code&gt;module_info/0,1&lt;/code&gt; are not counted by &lt;code&gt;info&lt;/code&gt;. Assuming that &lt;code&gt;&quot;Extra := _:module_info/\&quot;(0|1)\&quot; + LM&quot;&lt;/code&gt; has been evaluated, the sum of the number of local and exported functions are:</source>
          <target state="translated">&lt;code&gt;no_functions&lt;/code&gt; 。库模块中的功能和模块 &lt;code&gt;module_info/0,1&lt;/code&gt; 不包含在 &lt;code&gt;info&lt;/code&gt; 中。假定已评估 &lt;code&gt;&quot;Extra := _:module_info/\&quot;(0|1)\&quot; + LM&quot;&lt;/code&gt; ，则本地函数和导出函数的数量之和为：</target>
        </trans-unit>
        <trans-unit id="1cb8c89ebdb82d14e0c41079ed0dccd8096d97e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_inter_function_calls&lt;/code&gt; (*), number of calls of the Inter Call Graph of the application's modules;</source>
          <target state="translated">&lt;code&gt;no_inter_function_calls&lt;/code&gt; （*），应用程序模块的&amp;ldquo;相互调用图&amp;rdquo;的调用次数；</target>
        </trans-unit>
        <trans-unit id="efafb2a0b1387c320ddf78855347b5723dfca86b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_inter_function_calls&lt;/code&gt; (*), number of calls of the Inter Call Graph of the release's modules.</source>
          <target state="translated">&lt;code&gt;no_inter_function_calls&lt;/code&gt; （*），版本模块的&amp;ldquo;相互调用图&amp;rdquo;的调用次数。</target>
        </trans-unit>
        <trans-unit id="d9cad2d263b0da974f0dda709e4093c104a7cbe4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_inter_function_calls&lt;/code&gt; (*), number of calls of the Inter Call Graph;</source>
          <target state="translated">&lt;code&gt;no_inter_function_calls&lt;/code&gt; （*），内部调用图的调用次数；</target>
        </trans-unit>
        <trans-unit id="fac15effd353ffc2744d4b07731c62d5be046974" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_inter_function_calls&lt;/code&gt; (*), total number of calls of the &lt;code&gt;&lt;a href=&quot;#inter_call_graph&quot;&gt;Inter Call Graph&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;no_inter_function_calls&lt;/code&gt; （*）， &lt;code&gt;&lt;a href=&quot;#inter_call_graph&quot;&gt;Inter Call Graph&lt;/a&gt;&lt;/code&gt; 的调用总数。</target>
        </trans-unit>
        <trans-unit id="95a89aeb94b0962e6b93fa571936e8b070543d0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_node_processor_spread&lt;/code&gt; - Like &lt;code&gt;processor_spread&lt;/code&gt;, but if multiple NUMA nodes exist, schedulers are spread over one NUMA node at a time, that is, all logical processors of one NUMA node are bound to schedulers in sequence.</source>
          <target state="translated">&lt;code&gt;no_node_processor_spread&lt;/code&gt; -与 &lt;code&gt;processor_spread&lt;/code&gt; 类似，但是如果存在多个NUMA节点，则调度程序一次分布在一个NUMA节点上，也就是说，一个NUMA节点的所有逻辑处理器都按顺序绑定到调度程序。</target>
        </trans-unit>
        <trans-unit id="a3b2211f23a7d4865f1f6e7f00b1e5d2ad18b34f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_node_thread_spread&lt;/code&gt; - Like &lt;code&gt;thread_spread&lt;/code&gt;, but if multiple Non-Uniform Memory Access (NUMA) nodes exist, schedulers are spread over one NUMA node at a time, that is, all logical processors of one NUMA node are bound to schedulers in sequence.</source>
          <target state="translated">&lt;code&gt;no_node_thread_spread&lt;/code&gt; -与 &lt;code&gt;thread_spread&lt;/code&gt; 相似，但是如果存在多个非统一内存访问（NUMA）节点，则调度程序一次分布在一个NUMA节点上，即，一个NUMA节点的所有逻辑处理器都按顺序绑定到调度程序。</target>
        </trans-unit>
        <trans-unit id="117b2686f08dd4b68e920e9d37b568d3731f34bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_receiver&lt;/code&gt; - No information is delivered.</source>
          <target state="translated">&lt;code&gt;no_receiver&lt;/code&gt; -没有信息传递。</target>
        </trans-unit>
        <trans-unit id="c05df0753367d81aac1fdf741efbac04e91311d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_releases&lt;/code&gt;, number of releases;</source>
          <target state="translated">&lt;code&gt;no_releases&lt;/code&gt; ，发行数量；</target>
        </trans-unit>
        <trans-unit id="3e2cdbfae050d374ccc76da5e3157afdfa1155d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_spread&lt;/code&gt; - Schedulers with close scheduler identifiers are bound as close as possible in hardware.</source>
          <target state="translated">&lt;code&gt;no_spread&lt;/code&gt; -具有紧密调度程序标识符的调度程序在硬件中绑定得尽可能紧密。</target>
        </trans-unit>
        <trans-unit id="65646aed00a01b3c49898a59a3ec41c01f4675cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_transaction&lt;/code&gt;. Operation not allowed outside transactions.</source>
          <target state="translated">&lt;code&gt;no_transaction&lt;/code&gt; 。不允许外部交易操作。</target>
        </trans-unit>
        <trans-unit id="2d6d1672b50bb8ba17a6c0778791296b674a11a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;node&lt;/code&gt; is like &lt;code&gt;setup&lt;/code&gt;, but with a built-in behaviour: it starts a slave node for the duration of the tests. The atom &lt;code&gt;Node&lt;/code&gt; should have the format &lt;code&gt;nodename@full.machine.name&lt;/code&gt;, and &lt;code&gt;Args&lt;/code&gt; are the optional arguments to the new node; see &lt;code&gt;slave:start_link/3&lt;/code&gt; for details.</source>
          <target state="translated">&lt;code&gt;node&lt;/code&gt; 类似于 &lt;code&gt;setup&lt;/code&gt; ，但是具有内置的行为：它在测试期间启动一个从属节点。原子 &lt;code&gt;Node&lt;/code&gt; 的格式应为 &lt;code&gt;nodename@full.machine.name&lt;/code&gt; ，而 &lt;code&gt;Args&lt;/code&gt; 是新节点的可选参数。有关详细信息，请参见 &lt;code&gt;slave:start_link/3&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ef2a36547ba068cc5c118ce8ed9807723932d8b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;node&lt;/code&gt; is the name of the C-node.</source>
          <target state="translated">&lt;code&gt;node&lt;/code&gt; 是C节点的名称。</target>
        </trans-unit>
        <trans-unit id="f1fff716424eb26367402b1770fad337312150c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;node&lt;/code&gt; is the name of the remote node.</source>
          <target state="translated">&lt;code&gt;node&lt;/code&gt; 是远程节点的名称。</target>
        </trans-unit>
        <trans-unit id="1db03ee3209b654c2bc23d0ef7b742b288c3bcbd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;node&lt;/code&gt; is the node name. It is to be of the form &lt;strong&gt;alivename@hostname&lt;/strong&gt;.</source>
          <target state="translated">&lt;code&gt;node&lt;/code&gt; 是节点名称。格式为&lt;strong&gt;alivename @ hostname&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="c16649d9dacf014610a0a7e953b7fcc527b42dca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;node&lt;/code&gt; refers to Non-Uniform Memory Access (NUMA) nodes. &lt;code&gt;thread&lt;/code&gt; refers to hardware threads (for example, Intel hyper-threads).</source>
          <target state="translated">&lt;code&gt;node&lt;/code&gt; 是指非统一内存访问（NUMA）节点。 &lt;code&gt;thread&lt;/code&gt; 是指硬件线程（例如，英特尔超线程）。</target>
        </trans-unit>
        <trans-unit id="3d6f3c9d02dbc0c583af9223ba277621196dfd9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;node_not_running&lt;/code&gt;. Node is not running.</source>
          <target state="translated">&lt;code&gt;node_not_running&lt;/code&gt; 。节点未运行。</target>
        </trans-unit>
        <trans-unit id="052d7914127418dd7d905d2d66a2c30a0b4f0c6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nodedown&lt;/code&gt; messages are delivered after the corresponding node has disappeared in results from &lt;code&gt;erlang:nodes/X&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;nodedown&lt;/code&gt; 在 &lt;code&gt;erlang:nodes/X&lt;/code&gt; 的结果中对应的节点消失后，将传递nodedown消息。</target>
        </trans-unit>
        <trans-unit id="88213682ffe2404c0b5313c91b5ee679a66af1e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nodedown&lt;/code&gt; messages are not delivered until all messages from the remote node that have been passed through the connection have been delivered.</source>
          <target state="translated">&lt;code&gt;nodedown&lt;/code&gt; 直到已传递了来自远程节点的通过连接传递的所有消息后，才会传递nodedown消息。</target>
        </trans-unit>
        <trans-unit id="e2b33fd4c08c6edfd10698a405956ea09f72a3c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nodes&lt;/code&gt; - A list of node names (or an atom describing a list of nodes) defining where to open the table. Its up to the user to ensure that mnesia is actually running on the specified nodes.</source>
          <target state="translated">&lt;code&gt;nodes&lt;/code&gt; -节点名称列表（或描述节点列表的原子），用于定义在何处打开表。由用户来确保mnesia实际上在指定的节点上运行。</target>
        </trans-unit>
        <trans-unit id="9d5f3c6afe58777d4fdf80a91b58e137c8361c9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nodeup&lt;/code&gt; messages are delivered after the corresponding node appears in results from &lt;code&gt;erlang:nodes/X&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;nodeup&lt;/code&gt; 在 &lt;code&gt;erlang:nodes/X&lt;/code&gt; 的结果中出现相应节点后，将传递nodeup消息。</target>
        </trans-unit>
        <trans-unit id="4408f46c27fe4c804ac77e2e4cada1280ac26afa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nodeup&lt;/code&gt; messages are delivered before delivery of any message from the remote node passed through the newly established connection.</source>
          <target state="translated">&lt;code&gt;nodeup&lt;/code&gt; 在从远程节点传递通过新建立的连接传递的任何消息之前，先传递nodeup消息。</target>
        </trans-unit>
        <trans-unit id="1a10e15ee092631f16aa5fde85bac87e28461900" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;none&lt;/code&gt; (no &lt;code&gt;PhraseArgs&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;none&lt;/code&gt; （无 &lt;code&gt;PhraseArgs&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="28c2c9dbd3e254fbac7255e0733edb2a01a5dc28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;normal&lt;/code&gt; also if the application is distributed and started at the current node because of a failover from another node, and the application specification key &lt;code&gt;start_phases == undefined&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;normal&lt;/code&gt; 也如果应用程序被分发，并在当前节点开始，因为来自另一节点的故障转移，并且应用程序规范键 &lt;code&gt;start_phases == undefined&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4e0c035acf102998ae94e6e36b59b6b942f61072" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;normal&lt;/code&gt; if it is a normal startup.</source>
          <target state="translated">&lt;code&gt;normal&lt;/code&gt; ，如果它是一个正常启动。</target>
        </trans-unit>
        <trans-unit id="ca08e3c6460172425bba8df94434b0ade8addb4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;normal&lt;/code&gt;, if the event handler has been removed because of a call to &lt;code&gt;delete_handler/3&lt;/code&gt;, or &lt;code&gt;remove_handler&lt;/code&gt; has been returned by a callback function (see below).</source>
          <target state="translated">&lt;code&gt;normal&lt;/code&gt; ，如果事件处理程序是由于对 &lt;code&gt;delete_handler/3&lt;/code&gt; 的调用而被删除的，或者是由回调函数返回的 &lt;code&gt;remove_handler&lt;/code&gt; （请参见下文）。</target>
        </trans-unit>
        <trans-unit id="d640428a232dc900f184e1be43e865d7734ba6fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;not_a_db_node&lt;/code&gt;. A node was mentioned that does not exist in the schema.</source>
          <target state="translated">&lt;code&gt;not_a_db_node&lt;/code&gt; 。提到的节点在架构中不存在。</target>
        </trans-unit>
        <trans-unit id="49d589507dc218c4682e6aaaeea5ed23e61d1835" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;notification_delivery_info()&lt;/code&gt; - The information is delivered via a function call according to this data. See the &lt;code&gt;&lt;a href=&quot;#data_types&quot;&gt;DATA TYPES&lt;/a&gt;&lt;/code&gt; section above for details.</source>
          <target state="translated">&lt;code&gt;notification_delivery_info()&lt;/code&gt; -根据此数据通过函数调用传递信息。有关详细信息，请参见上面的&amp;ldquo; &lt;code&gt;&lt;a href=&quot;#data_types&quot;&gt;DATA TYPES&lt;/a&gt;&lt;/code&gt; 部分。</target>
        </trans-unit>
        <trans-unit id="6a1792ff80f20f1b5a27cac8e032c63e0a675629" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;notify.conf&lt;/code&gt;: see &lt;code&gt;&lt;a href=&quot;#notify&quot;&gt;Notify Definitions&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;notify.conf&lt;/code&gt; ：请参阅 &lt;code&gt;&lt;a href=&quot;#notify&quot;&gt;Notify Definitions&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6a0c457d12d899dd091d4d9d5e75351206149c80" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;notify/1&lt;/code&gt; does not fail even if the specified event manager does not exist, unless it is specified as &lt;code&gt;Name&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;notify/1&lt;/code&gt; 即使指定的事件管理器不存在，notify / 1也不会失败，除非将其指定为 &lt;code&gt;Name&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0c7777adceda0588e49fd9e8d13a21ce238eb170" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;notify/2&lt;/code&gt; is asynchronous and returns immediately after the event notification has been sent. &lt;code&gt;sync_notify/2&lt;/code&gt; is synchronous in the sense that it returns &lt;code&gt;ok&lt;/code&gt; after the event has been handled by all event handlers.</source>
          <target state="translated">&lt;code&gt;notify/2&lt;/code&gt; 是异步的，并在事件通知发送后立即返回。从某种意义上说， &lt;code&gt;sync_notify/2&lt;/code&gt; 是同步的，在所有事件处理程序处理完事件后，它返回 &lt;code&gt;ok&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cbf7df3164734a2d89b4e5c6fb47a29936b9621e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;npos&lt;/code&gt; indicates the number of unique positions that are occupied in the registry.</source>
          <target state="translated">&lt;code&gt;npos&lt;/code&gt; 指示注册表中占用的唯一位置的数量。</target>
        </trans-unit>
        <trans-unit id="2eec85f72561346cbcf55f313290a698cf790a12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nsswitch_conf&lt;/code&gt; (Unix nsswitch.conf)</source>
          <target state="translated">&lt;code&gt;nsswitch_conf&lt;/code&gt; （Unix nsswitch.conf）</target>
        </trans-unit>
        <trans-unit id="b33fc178fa190d609bda44ab93d4388cd8bfc865" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nteventlog&lt;/code&gt; provides a generic interface to the Windows event log. It is part of the OS_Mon application, see &lt;code&gt;os_mon(6)&lt;/code&gt;. Available for Windows versions where the event log is available. That is, not for Windows 98 and some other older Windows versions, but for most (all?) newer Windows versions.</source>
          <target state="translated">&lt;code&gt;nteventlog&lt;/code&gt; 提供Windows事件日志的通用接口。它是OS_Mon应用程序的一部分，请参见 &lt;code&gt;os_mon(6)&lt;/code&gt; 。适用于事件日志可用的Windows版本。也就是说，不是针对Windows 98和某些其他较旧的Windows版本，而是针对大多数（所有？）较新的Windows版本。</target>
        </trans-unit>
        <trans-unit id="724cb43a4461868a7cf85655c3f71fd1ea4ee699" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;number&lt;/code&gt; and &lt;code&gt;creation&lt;/code&gt; are arbitrary numbers. Notice that these are limited in precision, so only the low 18 and 2 bits of these numbers are used.</source>
          <target state="translated">&lt;code&gt;number&lt;/code&gt; 和 &lt;code&gt;creation&lt;/code&gt; 是任意数字。请注意，它们的精度受到限制，因此仅使用这些数字的低18位和2位。</target>
        </trans-unit>
        <trans-unit id="1d1bb0f0a6792413c00fa6016712868b7695b55f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;number&lt;/code&gt; is to be chosen uniquely for each reference created for a given C-node.</source>
          <target state="translated">&lt;code&gt;number&lt;/code&gt; 对于为给定C节点创建的每个参考，唯一地选择编号。</target>
        </trans-unit>
        <trans-unit id="1355204958af6b103c98549b7fc8c56811824b4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;number&lt;/code&gt; is used by &lt;code&gt;erl_connect_init()&lt;/code&gt; to construct the actual node name. In Example 2 below, &lt;strong&gt;&quot;c17@a.DNS.name&quot;&lt;/strong&gt; is the resulting node name.</source>
          <target state="translated">&lt;code&gt;number&lt;/code&gt; 被用于由 &lt;code&gt;erl_connect_init()&lt;/code&gt; 来构造的实际节点名称。在下面的示例2中，&lt;strong&gt;&amp;ldquo; c17@a.DNS.name&amp;rdquo;&lt;/strong&gt;是结果节点名称。</target>
        </trans-unit>
        <trans-unit id="79f9dadce8ee4cdc1f698d2d1fb9e7f783442ec2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;number&lt;/code&gt;, &lt;code&gt;serial&lt;/code&gt;, and &lt;code&gt;creation&lt;/code&gt; are arbitrary numbers. Notice that these are limited in precision, so only the low 15, 3, and 2 bits of these numbers are used.</source>
          <target state="translated">&lt;code&gt;number&lt;/code&gt; ， &lt;code&gt;serial&lt;/code&gt; 和 &lt;code&gt;creation&lt;/code&gt; 是任意数字。请注意，它们的精度受到限制，因此仅使用这些数字的低15、3和2位。</target>
        </trans-unit>
        <trans-unit id="e9d930ab82a22b8379cfe0c39b14e88db889b25b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nxdomain&lt;/code&gt; - Hostname or domain name cannot be found</source>
          <target state="translated">&lt;code&gt;nxdomain&lt;/code&gt; -找不到主机名或域名</target>
        </trans-unit>
        <trans-unit id="56a2a8054663d169121aa0cad1a8723367694a59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;observer&lt;/code&gt; is a GUI tool that can connect to remote nodes and display a variety of information about the running system.</source>
          <target state="translated">&lt;code&gt;observer&lt;/code&gt; 是一个GUI工具，可以连接到远程节点并显示有关正在运行的系统的各种信息。</target>
        </trans-unit>
        <trans-unit id="dce652cece3249245763b1426afca45ac811d3c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;obuf&lt;/code&gt; is a pointer to an &lt;code&gt;ei_reg_stat&lt;/code&gt; structure, defined as follows:</source>
          <target state="translated">&lt;code&gt;obuf&lt;/code&gt; 是指向 &lt;code&gt;ei_reg_stat&lt;/code&gt; 结构的指针，定义如下：</target>
        </trans-unit>
        <trans-unit id="85e0627fc7b8ba286acf6b1dc43837e32ecda87f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;obuf&lt;/code&gt; is a pointer to an &lt;code&gt;ei_reg_tabstat&lt;/code&gt; structure, defined as follows:</source>
          <target state="translated">&lt;code&gt;obuf&lt;/code&gt; 是指向 &lt;code&gt;ei_reg_tabstat&lt;/code&gt; 结构的指针，其定义如下：</target>
        </trans-unit>
        <trans-unit id="b77505716641f56accb4bd8d20de08b566a0749c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ok&lt;/code&gt; = the transfer is complete.</source>
          <target state="translated">&lt;code&gt;ok&lt;/code&gt; =传输完成。</target>
        </trans-unit>
        <trans-unit id="afa1fee92c97ddb794986fcd3d2868cd4a22401e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;old_heap : integer&lt;/code&gt; :: Old heap word size. Ex. &lt;code&gt;233&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;old_heap : integer&lt;/code&gt; ::旧堆字长。例如 &lt;code&gt;233&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="61a817f913661b77c2a4bc6e8aba530abb4ceb28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;one_for_all&lt;/code&gt; - If one child process terminates and is to be restarted, all other child processes are terminated and then all child processes are restarted.</source>
          <target state="translated">&lt;code&gt;one_for_all&lt;/code&gt; -如果一个子进程终止并要重新启动，则所有其他子进程终止，然后所有子进程重新启动。</target>
        </trans-unit>
        <trans-unit id="693ff57ce00caf398f99ebaa04da5ed6e07a518c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;one_for_one&lt;/code&gt; - If one child process terminates and is to be restarted, only that child process is affected. This is the default restart strategy.</source>
          <target state="translated">&lt;code&gt;one_for_one&lt;/code&gt; -如果一个子进程终止并要重新启动，则仅影响该子进程。这是默认的重启策略。</target>
        </trans-unit>
        <trans-unit id="0259e85e3f9e9bf879d61bd806f545c122cb1235" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;one_n_minus_one&lt;/code&gt; - Perform 1/n-1 BEAST mitigation.</source>
          <target state="translated">&lt;code&gt;one_n_minus_one&lt;/code&gt; -执行1 / n-1 BEAST缓解。</target>
        </trans-unit>
        <trans-unit id="4904209ada4d109d17de8535b0eba26ad8a7ec3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;opaque()&lt;/code&gt; - as returned by &lt;code&gt;&lt;a href=&quot;ssh#connect-3&quot;&gt;ssh:connect/3&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;opaque()&lt;/code&gt; -由 &lt;code&gt;&lt;a href=&quot;ssh#connect-3&quot;&gt;ssh:connect/3&lt;/a&gt;&lt;/code&gt; 返回</target>
        </trans-unit>
        <trans-unit id="f152d15bb119d04e3f5da9695e993efdbfc1d484" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;open/1&lt;/code&gt; cannot be used for changing the values of options of an open log. When there are prior owners or users of a log, all option values except &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;linkto&lt;/code&gt;, and &lt;code&gt;notify&lt;/code&gt; are only checked against the values supplied before as option values to function &lt;code&gt;open/1&lt;/code&gt;, &lt;code&gt;change_header/2&lt;/code&gt;, &lt;code&gt;change_notify/3&lt;/code&gt;, or &lt;code&gt;change_size/2&lt;/code&gt;. Thus, none of the options except &lt;code&gt;name&lt;/code&gt; is mandatory. If some specified value differs from the current value, a tuple &lt;code&gt;{error, {arg_mismatch, OptionName, CurrentValue, Value}}&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;open/1&lt;/code&gt; 不能用于更改打开日志的选项的值。当日志有先前的所有者或用户时，仅会对照之前提供的值（作为函数 &lt;code&gt;open/1&lt;/code&gt; ， &lt;code&gt;change_header/2&lt;/code&gt; ， &lt;code&gt;change_notify/3&lt;/code&gt; 或 &lt;code&gt;change_size/2&lt;/code&gt; 的选项值）检查除 &lt;code&gt;name&lt;/code&gt; ， &lt;code&gt;linkto&lt;/code&gt; 和 &lt;code&gt;notify&lt;/code&gt; 以外的所有选项值。。因此，除 &lt;code&gt;name&lt;/code&gt; 外，所有选项都不是强制性的。如果某些指定值与当前值不同，则返回元组 &lt;code&gt;{error, {arg_mismatch, OptionName, CurrentValue, Value}}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6cf7b80caafc11b489ff1be96e9777b37874dc85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;open/1&lt;/code&gt; returns &lt;code&gt;{ok, Log}&lt;/code&gt; if the log file is successfully opened. If the file is successfully repaired, the tuple &lt;code&gt;{repaired, Log, {recovered, Rec}, {badbytes, Bad}}&lt;/code&gt; is returned, where &lt;code&gt;Rec&lt;/code&gt; is the number of whole Erlang terms found in the file and &lt;code&gt;Bad&lt;/code&gt; is the number of bytes in the file that are non-Erlang terms. If the parameter &lt;code&gt;distributed&lt;/code&gt; is specified, &lt;code&gt;open/1&lt;/code&gt; returns a list of successful replies and a list of erroneous replies. Each reply is tagged with the node name.</source>
          <target state="translated">&lt;code&gt;open/1&lt;/code&gt; 如果成功打开了日志文件，则open / 1返回 &lt;code&gt;{ok, Log}&lt;/code&gt; 。如果文件被成功修复，则返回元组 &lt;code&gt;{repaired, Log, {recovered, Rec}, {badbytes, Bad}}&lt;/code&gt; ，其中 &lt;code&gt;Rec&lt;/code&gt; 是在文件中找到的整个Erlang术语的数量，而 &lt;code&gt;Bad&lt;/code&gt; 是其中的字节数量。该文件是非Erlang术语。如果指定了 &lt;code&gt;distributed&lt;/code&gt; 参数，则 &lt;code&gt;open/1&lt;/code&gt; 将返回成功答复列表和错误答复列表。每个答复都标记有节点名称。</target>
        </trans-unit>
        <trans-unit id="0922ad9842e4e437c67b18ea27fb19fba3030db2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;open_port/2&lt;/code&gt;, which is used to create ports, returns a value of this data type.</source>
          <target state="translated">&lt;code&gt;open_port/2&lt;/code&gt; 用于创建端口的open_port / 2返回此数据类型的值。</target>
        </trans-unit>
        <trans-unit id="2c8d92d29c0874bfff3377e8eba0596891a3993f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;opts&lt;/code&gt; is a pointer to thread options to destroy.</source>
          <target state="translated">&lt;code&gt;opts&lt;/code&gt; 是指向要销毁的线程选项的指针。</target>
        </trans-unit>
        <trans-unit id="0ba0202e2d7d4f65a966eb62b085378fc6e20503" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;order&lt;/code&gt; defines if the deny or allow control is to be performed first.</source>
          <target state="translated">&lt;code&gt;order&lt;/code&gt; 定义是否首先执行拒绝或允许控制。</target>
        </trans-unit>
        <trans-unit id="1bcf67eeb49a2004ff50fb4545a2daa814129c16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;os:cmd/2&lt;/code&gt; was added in kernel-5.5 (OTP-20.2.1). It makes it possible to pass an options map as the second argument in order to control the behaviour of &lt;code&gt;os:cmd&lt;/code&gt;. The possible options are:</source>
          <target state="translated">&lt;code&gt;os:cmd/2&lt;/code&gt; 在内核5.5（OTP-20.2.1）中添加了os：cmd / 2。为了控制 &lt;code&gt;os:cmd&lt;/code&gt; 的行为，可以将选项映射作为第二个参数传递。可能的选项是：</target>
        </trans-unit>
        <trans-unit id="3763b884735128f6813b3b38f8317f5213464697" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;os_mon(6)&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;os_sup&quot;&gt;os_sup(3)&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;os_mon(6)&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;os_sup&quot;&gt;os_sup(3)&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7896902d5b23e1ba520c38f29ff83e640d15206b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;os_mon(6)&lt;/code&gt;, &lt;code&gt;snmp(3)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;os_mon(6)&lt;/code&gt; ， &lt;code&gt;snmp(3)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c2104b5697c69e82cf781d50f0c4e0cef912b6d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;os_sup&lt;/code&gt; is a process providing a message passing service from the operating system to the error logger in the Erlang runtime system. It is part of the OS_Mon application, see &lt;code&gt;os_mon(6)&lt;/code&gt;. Available for Solaris and Windows.</source>
          <target state="translated">&lt;code&gt;os_sup&lt;/code&gt; 是一个过程，提供从操作系统到Erlang运行时系统中的错误记录器的消息传递服务。它是OS_Mon应用程序的一部分，请参见 &lt;code&gt;os_mon(6)&lt;/code&gt; 。适用于Solaris和Windows。</target>
        </trans-unit>
        <trans-unit id="60ff1866ca37a7e6f32a269217966191d981913e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;otp_build boot -a&lt;/code&gt; will first build a bootstrap system for the build machine and then do the cross build of the system.</source>
          <target state="translated">&lt;code&gt;otp_build boot -a&lt;/code&gt; 将首先为构建计算机构建一个引导系统，然后对系统进行交叉构建。</target>
        </trans-unit>
        <trans-unit id="0b889d98885a8fabd6556374ff26a8ecc91b72f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;otp_build configure&lt;/code&gt; will configure both for the boostrap system on the build machine and the cross host system.</source>
          <target state="translated">&lt;code&gt;otp_build configure&lt;/code&gt; 将同时为构建计算机上的boostrap系统和跨主机系统进行配置。</target>
        </trans-unit>
        <trans-unit id="542f01b9555349076e7a3fea529d9a9b9468c7f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;otp_build release -a&lt;/code&gt; will do the same as (5), and you will after this have to do a manual install either by doing (6), or (7).</source>
          <target state="translated">&lt;code&gt;otp_build release -a&lt;/code&gt; 的作用与（5）相同，此后，您必须通过（6）或（7）进行手动安装。</target>
        </trans-unit>
        <trans-unit id="dd10f835d85942a34946a9e0c04affd5300253df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;overload threshold&lt;/code&gt;. When the load on some node exceeds some application-specific threshold, it can be time to either add or move some fragment replicas to nodes with lower load. Take extra care if the table has a foreign key relation to some other table. To avoid severe performance penalties, the same redistribution must be performed for all the related tables.</source>
          <target state="translated">&lt;code&gt;overload threshold&lt;/code&gt; 。当某个节点上的负载超过某些特定于应用程序的阈值时，可能是时候将一些片段副本添加或移动到负载较低的节点上了。如果表与其他表具有外键关系，请格外小心。为避免严重的性能损失，必须对所有相关表执行相同的重新分配。</target>
        </trans-unit>
        <trans-unit id="070344dc3c10d66adb7c38d9c733f2ee1324917d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;p&lt;/code&gt; is a pointer to the binary object. The object itself must have been created through a single call to &lt;code&gt;malloc()&lt;/code&gt; or a similar function, so that the registry can later delete it if necessary by calling &lt;code&gt;free()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;p&lt;/code&gt; 是指向二进制对象的指针。该对象本身必须已经通过对 &lt;code&gt;malloc()&lt;/code&gt; 或类似函数的单次调用而创建，以便注册表以后可以根据需要通过调用 &lt;code&gt;free()&lt;/code&gt; 来删除它。</target>
        </trans-unit>
        <trans-unit id="208bfd1fb6273bbc6857f2f1b58c54da33b30f31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pad_char&lt;/code&gt; is the padding character.</source>
          <target state="translated">&lt;code&gt;pad_char&lt;/code&gt; 是填充字符。</target>
        </trans-unit>
        <trans-unit id="5cfb35d103fcd1afcfab0b2ac9968766b8d5ad3b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parent : string&lt;/code&gt; :: Process ID. Ex. &lt;code&gt;&quot;&amp;lt;0.131.0&amp;gt;&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;parent : string&lt;/code&gt; ::进程ID。例如 &lt;code&gt;&quot;&amp;lt;0.131.0&amp;gt;&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cd7b814292c1cc0efe1bfa4cd5c0348144c08fc7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parse_query/1&lt;/code&gt; parses incoming data to &lt;code&gt;erl&lt;/code&gt; and &lt;code&gt;eval&lt;/code&gt; scripts (see &lt;code&gt;&lt;a href=&quot;mod_esi&quot;&gt;mod_esi(3)&lt;/a&gt;&lt;/code&gt;) as defined in the standard URL format, that is, '+' becomes 'space' and decoding of hexadecimal characters (&lt;code&gt;%xx&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;parse_query/1&lt;/code&gt; 按照标准URL格式定义将传入数据解析为 &lt;code&gt;erl&lt;/code&gt; 和 &lt;code&gt;eval&lt;/code&gt; 脚本（请参阅 &lt;code&gt;&lt;a href=&quot;mod_esi&quot;&gt;mod_esi(3)&lt;/a&gt;&lt;/code&gt; ），即'+'变为'space'并解码十六进制字符（ &lt;code&gt;%xx&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="18fa351e18b546a01891ed3fd67dcf620c2badf2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;partition(F,&amp;nbsp;S1,&amp;nbsp;S2)&lt;/code&gt; is equivalent to &lt;code&gt;{restriction(F,&amp;nbsp;S1,&amp;nbsp;S2), drestriction(F,&amp;nbsp;S1,&amp;nbsp;S2)}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;partition(F,&amp;nbsp;S1,&amp;nbsp;S2)&lt;/code&gt; 等效于 &lt;code&gt;{restriction(F,&amp;nbsp;S1,&amp;nbsp;S2), drestriction(F,&amp;nbsp;S1,&amp;nbsp;S2)}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8995d005b05558ebaa5646be0205d6be7c6eea89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path() = string()&lt;/code&gt; representing a file or a directory path</source>
          <target state="translated">&lt;code&gt;path() = string()&lt;/code&gt; 代表文件或目录路径的string（）</target>
        </trans-unit>
        <trans-unit id="0e73934e89d175b94dad7073f798f7e269c13f6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path() = string()&lt;/code&gt; representing a file path or directory path</source>
          <target state="translated">&lt;code&gt;path() = string()&lt;/code&gt; 代表文件路径或目录路径的string（）</target>
        </trans-unit>
        <trans-unit id="dfd43bedad2dde56094d1fb63abd18f851d30aae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path/3&lt;/code&gt; returns the file &lt;code&gt;Path&lt;/code&gt; in the &lt;code&gt;RequestURI&lt;/code&gt; (see &lt;code&gt;&lt;a href=&quot;http://www.rfc-base.org/rfc-1945.html&quot;&gt;RFC 1945&lt;/a&gt;&lt;/code&gt;). If the interaction data &lt;code&gt;{real_name,{Path,AfterPath}}&lt;/code&gt; has been exported by &lt;code&gt;mod_alias&lt;/code&gt;, &lt;code&gt;Path&lt;/code&gt; is returned. If no interaction data has been exported, &lt;code&gt;ServerRoot&lt;/code&gt; is used to generate a file &lt;code&gt;Path&lt;/code&gt;. &lt;code&gt;config_db()&lt;/code&gt; and &lt;code&gt;interaction_data()&lt;/code&gt; are as defined in &lt;code&gt;&lt;a href=&quot;http_server&quot;&gt;Inets User's Guide&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;path/3&lt;/code&gt; 返回文件 &lt;code&gt;Path&lt;/code&gt; 的 &lt;code&gt;RequestURI&lt;/code&gt; （参见 &lt;code&gt;&lt;a href=&quot;http://www.rfc-base.org/rfc-1945.html&quot;&gt;RFC 1945&lt;/a&gt;&lt;/code&gt; ）。如果交互数据 &lt;code&gt;{real_name,{Path,AfterPath}}&lt;/code&gt; 已由 &lt;code&gt;mod_alias&lt;/code&gt; 导出，则返回 &lt;code&gt;Path&lt;/code&gt; 。如果尚未导出任何交互数据，则使用 &lt;code&gt;ServerRoot&lt;/code&gt; 生成文件 &lt;code&gt;Path&lt;/code&gt; 。 &lt;code&gt;config_db()&lt;/code&gt; 和 &lt;code&gt;interaction_data()&lt;/code&gt; 如《 &lt;code&gt;&lt;a href=&quot;http_server&quot;&gt;Inets User's Guide&lt;/a&gt;&lt;/code&gt; 中所定义。</target>
        </trans-unit>
        <trans-unit id="d19a6eae0921097bb788ff4b1a29659a02851b5a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pdu&lt;/code&gt; - &lt;code&gt;SnmpPduInfo&lt;/code&gt; (see &lt;code&gt;&lt;a href=&quot;#handle_pdu&quot;&gt;handle_pdu&lt;/a&gt;&lt;/code&gt; for more info).</source>
          <target state="translated">&lt;code&gt;pdu&lt;/code&gt; - &lt;code&gt;SnmpPduInfo&lt;/code&gt; （有关更多信息，请参见 &lt;code&gt;&lt;a href=&quot;#handle_pdu&quot;&gt;handle_pdu&lt;/a&gt;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="b051d9d29e76a1e1a06594c1849e87c9466b43bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;peername/2&lt;/code&gt; returns the &lt;code&gt;Port&lt;/code&gt; and &lt;code&gt;IPAddress&lt;/code&gt; of the remote &lt;code&gt;Socket&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;peername/2&lt;/code&gt; 返回远程 &lt;code&gt;Socket&lt;/code&gt; 的 &lt;code&gt;Port&lt;/code&gt; 和 &lt;code&gt;IPAddress&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2924c1e2dad1f40758fc0e5f186d139101ab4805" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;permanent change of nodes&lt;/code&gt;. When a new permanent &lt;code&gt;db_node&lt;/code&gt; is introduced or dropped, it can be time to change the pool of nodes and redistribute the replicas evenly over the new pool of nodes. It can also be time to add or delete a fragment before the replicas are redistributed.</source>
          <target state="translated">&lt;code&gt;permanent change of nodes&lt;/code&gt; 。当引入或删除新的永久 &lt;code&gt;db_node&lt;/code&gt; 时，可能是时候更改节点池并在新节点池上均匀地重新分配副本了。在重新分发副本之前，还可以添加或删除片段。</target>
        </trans-unit>
        <trans-unit id="1260a8f8c0a48670cf7c26a655b61fc47cfed3bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pg2&lt;/code&gt; manual page in Kernel</source>
          <target state="translated">&lt;code&gt;pg2&lt;/code&gt; 内核中的pg2手册页</target>
        </trans-unit>
        <trans-unit id="609384a2799ee5bf5ed1f7d78fea677596ddb17d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;phash2&lt;/code&gt; - Implies that the &lt;code&gt;erlang:phash2/1&lt;/code&gt; BIF is used.</source>
          <target state="translated">&lt;code&gt;phash2&lt;/code&gt; -表示使用 &lt;code&gt;erlang:phash2/1&lt;/code&gt; BIF。</target>
        </trans-unit>
        <trans-unit id="5c472bf2dbda908175ae45fa101c23b6a774d860" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;phash&lt;/code&gt; - Implies that the &lt;code&gt;erlang:phash/2&lt;/code&gt; BIF is used.</source>
          <target state="translated">&lt;code&gt;phash&lt;/code&gt; -表示使用 &lt;code&gt;erlang:phash/2&lt;/code&gt; BIF。</target>
        </trans-unit>
        <trans-unit id="9ecdfdbad8243eaf2b02881d244cf7f26dcaf8ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pick_peer/4&lt;/code&gt; callbacks are serialized when this option is &lt;code&gt;true&lt;/code&gt;, which is a potential performance bottleneck. A simple Diameter client may suffer no ill effects from using mutable state but a server or agent that responds to incoming request should probably avoid it.</source>
          <target state="translated">&lt;code&gt;pick_peer/4&lt;/code&gt; 当此选项为 &lt;code&gt;true&lt;/code&gt; 时，pick_peer / 4回调将被序列化，这是潜在的性能瓶颈。一个简单的Diameter客户端可能不会因为使用可变状态而受到不良影响，但是响应传入请求的服务器或代理应该避免这种情况。</target>
        </trans-unit>
        <trans-unit id="3eb4c9f84372672f7a3c34804464e31203703a3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pid : string&lt;/code&gt; :: Process ID. Ex. &lt;code&gt;&quot;&amp;lt;0.131.0&amp;gt;&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;pid : string&lt;/code&gt; ::进程ID。例如 &lt;code&gt;&quot;&amp;lt;0.131.0&amp;gt;&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4a679f107d23fdf533b0c3a4df842d9d172f13d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pid() | atom()&lt;/code&gt; - The info will be delivered in the following messages:</source>
          <target state="translated">&lt;code&gt;pid() | atom()&lt;/code&gt; -该信息将在以下消息中传递：</target>
        </trans-unit>
        <trans-unit id="2611f7c1ad6182adf6b84f1e7d41e1baa31948f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pid() | registered_name()&lt;/code&gt; - The info will be delivered in the following messages:</source>
          <target state="translated">&lt;code&gt;pid() | registered_name()&lt;/code&gt; -该信息将在以下消息中传递：</target>
        </trans-unit>
        <trans-unit id="ad9c7a366f3a5016df0c4b9e19d80b711b5f6ae0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pid()&lt;/code&gt; = identifier of an FTP connection</source>
          <target state="translated">&lt;code&gt;pid()&lt;/code&gt; = FTP连接的标识符</target>
        </trans-unit>
        <trans-unit id="59c537d320130b9edcbb2fc1f251bcb263292ccf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pid&lt;/code&gt; is the pid that is to be associated with &lt;code&gt;name&lt;/code&gt;. This value is returned by &lt;code&gt;global&lt;/code&gt; when processes request the location of &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;pid&lt;/code&gt; 是要与 &lt;code&gt;name&lt;/code&gt; 关联的pid 。当进程请求 &lt;code&gt;name&lt;/code&gt; 的位置时，此值由 &lt;code&gt;global&lt;/code&gt; 返回。</target>
        </trans-unit>
        <trans-unit id="5d183c618a6588b0342c1d5adbadab0f89c58b5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ping/2&lt;/code&gt; now becomes &lt;code&gt;ping/1&lt;/code&gt; as the argument &lt;code&gt;Pong_PID&lt;/code&gt; is not needed.</source>
          <target state="translated">&lt;code&gt;ping/2&lt;/code&gt; 现在变为 &lt;code&gt;ping/1&lt;/code&gt; ,因为不需要参数 &lt;code&gt;Pong_PID&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f6ca9e468db9dd82f4fd2e1990527cb8f2c09d28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pipe_dir/&lt;/code&gt; is to be &lt;code&gt;/tmp/&lt;/code&gt; (&lt;code&gt;to_erl&lt;/code&gt; uses this name by default).</source>
          <target state="translated">&lt;code&gt;pipe_dir/&lt;/code&gt; 是 &lt;code&gt;/tmp/&lt;/code&gt; （默认情况下， &lt;code&gt;to_erl&lt;/code&gt; 使用此名称）。</target>
        </trans-unit>
        <trans-unit id="19437503e09eb677bc1f209309200b6daec1519c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pool&lt;/code&gt; manual page in STDLIB</source>
          <target state="translated">&lt;code&gt;pool&lt;/code&gt; STDLIB中的池手册页</target>
        </trans-unit>
        <trans-unit id="d3b0f0c1679880215bb1593abf34a83108819cab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;por(P1, P2)&lt;/code&gt; returns a parser for the language described by the grammar &lt;code&gt;G1&lt;/code&gt; or &lt;code&gt;G2&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;por(P1, P2)&lt;/code&gt; 返回语法 &lt;code&gt;G1&lt;/code&gt; 或 &lt;code&gt;G2&lt;/code&gt; 描述的语言的解析器：</target>
        </trans-unit>
        <trans-unit id="05b55bccfd69f56af11534635e4e2e953ee20ff6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;port : string&lt;/code&gt; :: Port ID. Ex. &lt;code&gt;&quot;#Port&amp;lt;0.1031&amp;gt;&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;port : string&lt;/code&gt; ::端口ID。例如 &lt;code&gt;&quot;#Port&amp;lt;0.1031&amp;gt;&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="109d904eb97aa7ced81b96f2b99474ac53cdef13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;port&lt;/code&gt; - which defines which UDP port the manager uses for communicating with agents. &lt;strong&gt;Mandatory&lt;/strong&gt; if &lt;code&gt;transports&lt;/code&gt; does not define a port number for every transport.</source>
          <target state="translated">&lt;code&gt;port&lt;/code&gt; -定义管理器用于与代理进行通信的UDP端口。&lt;strong&gt;强制性的&lt;/strong&gt;，如果 &lt;code&gt;transports&lt;/code&gt; 不定义每个传输端口号。</target>
        </trans-unit>
        <trans-unit id="aa55a5750ec0e9d807a7393a28ac605dbbcb194d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;port&lt;/code&gt; and &lt;code&gt;bind_address&lt;/code&gt; cannot be changed. Clients trying to access the server during the reload get a service temporary unavailable answer.</source>
          <target state="translated">&lt;code&gt;port&lt;/code&gt; 和 &lt;code&gt;bind_address&lt;/code&gt; 不能更改。尝试在重新加载期间访问服务器的客户端会获得服务临时不可用的答案。</target>
        </trans-unit>
        <trans-unit id="548795fb7fe4eb5fa9c6b0c49478298264a15a9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;port&lt;/code&gt; is the local name to register, and is to be the same as the port number that was previously bound to the socket.</source>
          <target state="translated">&lt;code&gt;port&lt;/code&gt; 是要注册的本地名称，并且与先前绑定到套接字的端口号相同。</target>
        </trans-unit>
        <trans-unit id="569a0eca1b4d69be90bc6ec21ea099e6fc76cdbe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;port&lt;/code&gt; is the port handle of the port (driver instance) to set the pid on. &lt;code&gt;pid&lt;/code&gt;is the pid to set.</source>
          <target state="translated">&lt;code&gt;port&lt;/code&gt; 是要设置pid的端口（驱动程序实例）的端口句柄。 &lt;code&gt;pid&lt;/code&gt; 是要设置的pid。</target>
        </trans-unit>
        <trans-unit id="7a62ba59a9de638facd1c8357fdcecbb4fee602f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;port_connect/1&lt;/code&gt; is synchronous, see below.</source>
          <target state="translated">&lt;code&gt;port_connect/1&lt;/code&gt; 是同步的，请参见下文。</target>
        </trans-unit>
        <trans-unit id="46275a563a51ed4259f6d468e8ed8b88c206781a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;port_level&lt;/code&gt; (port-specific locking)</source>
          <target state="translated">&lt;code&gt;port_level&lt;/code&gt; （特定于端口的锁定）</target>
        </trans-unit>
        <trans-unit id="d054b81553bbe50c72d62a64de29e1a160a9ff8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pos&lt;/code&gt; indicates how many terms to step over in the buffer.</source>
          <target state="translated">&lt;code&gt;pos&lt;/code&gt; 指示要在缓冲区中跳过多少项。</target>
        </trans-unit>
        <trans-unit id="3005cedef47a43cd61bf191bcae670fb05ba3053" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;position&lt;/code&gt; specifies which element to retrieve from &lt;code&gt;tuple&lt;/code&gt;. The elements are numbered starting from 1.</source>
          <target state="translated">&lt;code&gt;position&lt;/code&gt; 指定要从 &lt;code&gt;tuple&lt;/code&gt; 检索的元素。元素从1开始编号。</target>
        </trans-unit>
        <trans-unit id="e0f90fded1ca1cc66d4c7a429d464dbe61fd344a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;precision&lt;/code&gt; is the precision of the printed argument.</source>
          <target state="translated">&lt;code&gt;precision&lt;/code&gt; 是打印参数的精度。</target>
        </trans-unit>
        <trans-unit id="d32e560f58cd69021c34aa6faa3a7d0902c0bf55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pretty&lt;/code&gt; has a format corresponding to:</source>
          <target state="translated">&lt;code&gt;pretty&lt;/code&gt; 的格式对应于：</target>
        </trans-unit>
        <trans-unit id="98d108566007784e8a1eea8b9a4528d9e7ac1f71" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;print_temp&lt;/code&gt; simply calls &lt;code&gt;io:format&lt;/code&gt; in a similar way to what has been described above. Notice that ~-15w says to print the &quot;term&quot; with a field length (width) of 15 and left justify it. (see the &lt;code&gt;io(3)&lt;/code&gt;) manual page in STDLIB.</source>
          <target state="translated">&lt;code&gt;print_temp&lt;/code&gt; 只是以类似于上面描述的方式调用 &lt;code&gt;io:format&lt;/code&gt; 。请注意，〜-15w表示要打印字段长度（宽度）为15的&amp;ldquo;项&amp;rdquo;，并使其左对齐。（请参阅STDLIB中的 &lt;code&gt;io(3)&lt;/code&gt; ）手册页。</target>
        </trans-unit>
        <trans-unit id="29ac1ca7727ca9cb3d82758e35bac8bf82f020b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;priv/bin&lt;/code&gt; - Recommended. Any executable that is used by the application, such as port-programs, should be placed here.</source>
          <target state="translated">&lt;code&gt;priv/bin&lt;/code&gt; -推荐。应用程序使用的任何可执行文件（例如端口程序）都应放在此处。</target>
        </trans-unit>
        <trans-unit id="3ad0391cb384a2caca2662bbbf264622930a4b48" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;priv/lib&lt;/code&gt; - Recommended. Any shared-object files that are used by the application, such as NIFs or linked-in-drivers, should be placed here.</source>
          <target state="translated">&lt;code&gt;priv/lib&lt;/code&gt; -推荐。应用程序使用的任何共享库文件，例如NIF或驱动程序链接，都应放在此处。</target>
        </trans-unit>
        <trans-unit id="9645f44b37794152f99af006755a164224c472d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;priv&lt;/code&gt; - Optional. Used for application specific files.</source>
          <target state="translated">&lt;code&gt;priv&lt;/code&gt; -可选。用于特定于应用程序的文件。</target>
        </trans-unit>
        <trans-unit id="f4dd7b1d49b0d6d23d041a7e5ef464d98479bb02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;priv&lt;/code&gt; - Optional. Used for application specific files. &lt;code&gt;code:priv_dir/1&lt;/code&gt; is to be used to access this directory.</source>
          <target state="translated">&lt;code&gt;priv&lt;/code&gt; -可选。用于特定于应用程序的文件。 &lt;code&gt;code:priv_dir/1&lt;/code&gt; 将用于访问该目录。</target>
        </trans-unit>
        <trans-unit id="6ce3ecab75d053087947f57abd113a825750b61f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;priv_dir&lt;/code&gt; - Scratch file directory</source>
          <target state="translated">&lt;code&gt;priv_dir&lt;/code&gt; -临时文件目录</target>
        </trans-unit>
        <trans-unit id="67a3ae34ca8c9e112d3c2b7ea9126b0da8b19f81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;priv_dir&lt;/code&gt; is the private directory for the test cases. This directory can be used whenever a test case (or configuration function) needs to write something to file. The name of the private directory is generated by &lt;code&gt;Common Test&lt;/code&gt;, which also creates the directory.</source>
          <target state="translated">&lt;code&gt;priv_dir&lt;/code&gt; 是测试用例的专用目录。每当测试用例（或配置功能）需要向文件中写入内容时，都可以使用此目录。专用目录的名称是由 &lt;code&gt;Common Test&lt;/code&gt; 生成的，它还会创建目录。</target>
        </trans-unit>
        <trans-unit id="cbcc995ab1297c3b9b6bdf4f0a3b2462a99b5673" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;proc_lib:start_link&lt;/code&gt; is synchronous and does not return until &lt;code&gt;proc_lib:init_ack&lt;/code&gt; has been called.</source>
          <target state="translated">&lt;code&gt;proc_lib:start_link&lt;/code&gt; 是同步的，直到 &lt;code&gt;proc_lib:init_ack&lt;/code&gt; 才返回。</target>
        </trans-unit>
        <trans-unit id="c16f600ff0527a1c089c36fef0901435cfe8d3d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;proc_sig&lt;/code&gt; is an internal operation and is never to appear, while the others represent the corresponding driver callbacks &lt;code&gt;timeout&lt;/code&gt;, &lt;code&gt;ready_input&lt;/code&gt;, &lt;code&gt;ready_output&lt;/code&gt;, &lt;code&gt;event&lt;/code&gt;, and &lt;code&gt;outputv&lt;/code&gt; (when the port is used by distribution). Value &lt;code&gt;Millis&lt;/code&gt; in tuple &lt;code&gt;timeout&lt;/code&gt; informs about the uninterrupted execution time of the process or port, which always is equal to or higher than the &lt;code&gt;Time&lt;/code&gt; value supplied when starting the trace. New tuples can be added to the &lt;code&gt;Info&lt;/code&gt; list in a future release. The order of the tuples in the list can be changed at any time without prior notice.</source>
          <target state="translated">&lt;code&gt;proc_sig&lt;/code&gt; 是内部操作，永远不会出现，而其他操作则代表相应的驱动程序回调 &lt;code&gt;timeout&lt;/code&gt; ， &lt;code&gt;ready_input&lt;/code&gt; ， &lt;code&gt;ready_output&lt;/code&gt; ， &lt;code&gt;event&lt;/code&gt; 和 &lt;code&gt;outputv&lt;/code&gt; （当分发使用端口时）。元组 &lt;code&gt;timeout&lt;/code&gt; 值 &lt;code&gt;Millis&lt;/code&gt; 会通知进程或端口的不间断执行时间，该时间始终等于或大于启动跟踪时提供的 &lt;code&gt;Time&lt;/code&gt; 值。新的元组可以在将来的版本中添加到&amp;ldquo; &lt;code&gt;Info&lt;/code&gt; 列表中。列表中元组的顺序可以随时更改，恕不另行通知。</target>
        </trans-unit>
        <trans-unit id="d87254d241e99668ca26900ef8fb734e4609213e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;process_info/1,2&lt;/code&gt; cannot be used to read out the message queue or the process dictionary (both are returned as empty lists).</source>
          <target state="translated">&lt;code&gt;process_info/1,2&lt;/code&gt; 无法用于读出消息队列或过程字典（两者均作为空列表返回）。</target>
        </trans-unit>
        <trans-unit id="42f2ec202869170e3d096f127fbfcb5b0da8dae6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;processor_spread&lt;/code&gt; - Schedulers are spread like &lt;code&gt;thread_spread&lt;/code&gt;, but also over physical processor chips.</source>
          <target state="translated">&lt;code&gt;processor_spread&lt;/code&gt; 调度程序像 &lt;code&gt;thread_spread&lt;/code&gt; 一样分布，但也分布在物理处理器芯片上。</target>
        </trans-unit>
        <trans-unit id="03e24a6c1e9a06add5153e63471c1f7d46049c21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;product(S1,&amp;nbsp;S2)&lt;/code&gt; is equivalent to &lt;code&gt;product({S1,&amp;nbsp;S2})&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;product(S1,&amp;nbsp;S2)&lt;/code&gt; 等同于 &lt;code&gt;product({S1,&amp;nbsp;S2})&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c7a94d6b404703ecfbd99fef0c131bb46e7a4eac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;projects&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;projects&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="7a500192c5cc08ad584ceb4e9ade7823f9cbe5a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;protocol_version&lt;/code&gt;. Returns the version number of the Mnesia inter-process communication protocol.</source>
          <target state="translated">&lt;code&gt;protocol_version&lt;/code&gt; 。返回Mnesia进程间通信协议的版本号。</target>
        </trans-unit>
        <trans-unit id="89fdc32e873c21bcd965fa0c727ab34dfa25b0dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub&lt;/code&gt; is a file descriptor now connected to &lt;code&gt;epmd&lt;/code&gt;. &lt;code&gt;epmd&lt;/code&gt; monitors the other end of the connection. If it detects that the connection has been closed, the node becomes unregistered. So, if you explicitly close the descriptor or if your node fails, it becomes unregistered from &lt;code&gt;epmd&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;pub&lt;/code&gt; 是现在连接到 &lt;code&gt;epmd&lt;/code&gt; 的文件描述符。 &lt;code&gt;epmd&lt;/code&gt; 监视连接的另一端。如果检测到连接已关闭，则该节点将变为未注册状态。因此，如果您显式关闭描述符，或者如果您的节点失败，则它将从 &lt;code&gt;epmd&lt;/code&gt; 中取消注册。</target>
        </trans-unit>
        <trans-unit id="45133641546549589bced5b8fd7d2ba91f50b586" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;q(QLC)&lt;/code&gt; is equivalent to &lt;code&gt;q(QLC, [])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;q(QLC)&lt;/code&gt; 等效于 &lt;code&gt;q(QLC, [])&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cca997605390350ccf544e460671ca62bf1cb387" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;qlc:info/1&lt;/code&gt; returns information about a query handle, and in this case identical information is returned for the two query handles.</source>
          <target state="translated">&lt;code&gt;qlc:info/1&lt;/code&gt; 返回有关查询句柄的信息，在这种情况下，将为两个查询句柄返回相同的信息。</target>
        </trans-unit>
        <trans-unit id="45370310318db1bd3f5a6ac06d4a9aff7059abf8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;qlc:info/1&lt;/code&gt; returns information about a query handle. In this case identical information is returned for the two query handles.</source>
          <target state="translated">&lt;code&gt;qlc:info/1&lt;/code&gt; 返回有关查询句柄的信息。在这种情况下，将为两个查询句柄返回相同的信息。</target>
        </trans-unit>
        <trans-unit id="b70c2887efa821c69b7024560ca540347c878381" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ram_copies&lt;/code&gt;. A table can be replicated on a number of Erlang nodes. Property &lt;code&gt;ram_copies&lt;/code&gt; specifies a list of Erlang nodes where RAM copies are kept. These copies can be dumped to disc at regular intervals. However, updates to these copies are not written to disc on a transaction basis.</source>
          <target state="translated">&lt;code&gt;ram_copies&lt;/code&gt; 。可以在多个Erlang节点上复制表。属性 &lt;code&gt;ram_copies&lt;/code&gt; 指定保留RAM副本的Erlang节点列表。这些副本可以定期转储到光盘中。但是，这些副本的更新不会基于事务写入磁盘。</target>
        </trans-unit>
        <trans-unit id="31c8132e21ffa4c4e72db0ae37e9ddd5d912ce0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ram_copies&lt;/code&gt;. Returns the nodes where a &lt;code&gt;ram_copy&lt;/code&gt; of the table resides according to the schema.</source>
          <target state="translated">&lt;code&gt;ram_copies&lt;/code&gt; 。根据模式返回表的 &lt;code&gt;ram_copy&lt;/code&gt; 所在的节点。</target>
        </trans-unit>
        <trans-unit id="d6584e7476863ea917f78a32f51523f12856d5a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ram_copies&lt;/code&gt;. The value of the node list is a list of Erlang nodes, and a RAM replica of the table resides on each node in the list.</source>
          <target state="translated">&lt;code&gt;ram_copies&lt;/code&gt; 。节点列表的值是Erlang节点的列表，并且表的RAM副本位于列表中的每个节点上。</target>
        </trans-unit>
        <trans-unit id="c23dd2525fd016f79dc555aa6162da527038e0fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;range UC&lt;/code&gt; is a subset of &lt;code&gt;U&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;range UC&lt;/code&gt; 是 &lt;code&gt;U&lt;/code&gt; 的子集。</target>
        </trans-unit>
        <trans-unit id="dd9ced7eacf5082f0499e2bdf51fa7cbb8ed62ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rbuf&lt;/code&gt; points to a return buffer, &lt;code&gt;rlen&lt;/code&gt; bytes long. The return data is to be a valid Erlang term in the external (binary) format. This is converted to an Erlang term and returned by &lt;code&gt;erlang:port_call/3&lt;/code&gt; to the caller. If more space than &lt;code&gt;rlen&lt;/code&gt; bytes is needed to return data, &lt;code&gt;*rbuf&lt;/code&gt; can be set to memory allocated with &lt;code&gt;&lt;a href=&quot;erl_driver#driver_alloc&quot;&gt;erl_driver:driver_alloc&lt;/a&gt;&lt;/code&gt;. This memory is freed automatically after &lt;code&gt;call&lt;/code&gt; has returned.</source>
          <target state="translated">&lt;code&gt;rbuf&lt;/code&gt; 指向返回缓冲区， &lt;code&gt;rlen&lt;/code&gt; 字节长。返回数据将是外部（二进制）格式的有效Erlang术语。这将转换为Erlang术语，并由 &lt;code&gt;erlang:port_call/3&lt;/code&gt; 返回给调用者。如果返回返回数据所需的空间大于 &lt;code&gt;rlen&lt;/code&gt; 字节， &lt;code&gt;*rbuf&lt;/code&gt; 可以将* rbuf设置为使用 &lt;code&gt;&lt;a href=&quot;erl_driver#driver_alloc&quot;&gt;erl_driver:driver_alloc&lt;/a&gt;&lt;/code&gt; 分配的内存。 &lt;code&gt;call&lt;/code&gt; 返回后，该内存将自动释放。</target>
        </trans-unit>
        <trans-unit id="4f627a24902277dcc859bc9742c883ee206ecf08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ready_input&lt;/code&gt; or &lt;code&gt;ready_output&lt;/code&gt; indicates if the event object is ready for reading or writing.</source>
          <target state="translated">&lt;code&gt;ready_input&lt;/code&gt; 或 &lt;code&gt;ready_output&lt;/code&gt; 指示事件对象是否已准备好进行读取或写入。</target>
        </trans-unit>
        <trans-unit id="df286964dc6b989faeaf3d18c9fbc9f06820d2da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;real_name/3&lt;/code&gt; traverses &lt;code&gt;Aliases&lt;/code&gt;, typically extracted from &lt;code&gt;ConfigDB&lt;/code&gt;, and matches each &lt;code&gt;FakeName&lt;/code&gt; with &lt;code&gt;RequestURI&lt;/code&gt;. If a match is found, &lt;code&gt;FakeName&lt;/code&gt; is replaced with &lt;code&gt;RealName&lt;/code&gt; in the match. The resulting path is split into two parts, &lt;code&gt;ShortPath&lt;/code&gt; and &lt;code&gt;AfterPath&lt;/code&gt;, as defined in &lt;code&gt;&lt;a href=&quot;httpd_util#split_path-1&quot;&gt;httpd_util:split_path/1&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;Path&lt;/code&gt; is generated from &lt;code&gt;ShortPath&lt;/code&gt;, that is, the result from &lt;code&gt;&lt;a href=&quot;#default_index&quot;&gt;default_index/2&lt;/a&gt;&lt;/code&gt; with &lt;code&gt;ShortPath&lt;/code&gt; as an argument. &lt;code&gt;config_db()&lt;/code&gt; is the server config file in ETS table format as described in &lt;code&gt;&lt;a href=&quot;http_server&quot;&gt;Inets User's Guide&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;real_name/3&lt;/code&gt; 遍历 &lt;code&gt;Aliases&lt;/code&gt; （通常从 &lt;code&gt;ConfigDB&lt;/code&gt; 中提取），并将每个 &lt;code&gt;FakeName&lt;/code&gt; 与 &lt;code&gt;RequestURI&lt;/code&gt; 进行匹配。如果找到匹配项，则在匹配项 &lt;code&gt;FakeName&lt;/code&gt; 替换为 &lt;code&gt;RealName&lt;/code&gt; 。根据 &lt;code&gt;&lt;a href=&quot;httpd_util#split_path-1&quot;&gt;httpd_util:split_path/1&lt;/a&gt;&lt;/code&gt; 的定义，生成的路径分为两部分： &lt;code&gt;ShortPath&lt;/code&gt; 和 &lt;code&gt;AfterPath&lt;/code&gt; 。 &lt;code&gt;Path&lt;/code&gt; 是从 &lt;code&gt;ShortPath&lt;/code&gt; 生成的，即 &lt;code&gt;&lt;a href=&quot;#default_index&quot;&gt;default_index/2&lt;/a&gt;&lt;/code&gt; 的结果以 &lt;code&gt;ShortPath&lt;/code&gt; 作为参数。 &lt;code&gt;config_db()&lt;/code&gt; 是ETS表格式的服务器配置文件，如 &lt;code&gt;&lt;a href=&quot;http_server&quot;&gt;Inets User's Guide&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0836e434e21e3ff42c10d3b7cd4440e6ec99c2f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;real_name&lt;/code&gt; - from &lt;code&gt;&lt;a href=&quot;mod_alias&quot;&gt;mod_alias&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;real_name&lt;/code&gt; -来自 &lt;code&gt;&lt;a href=&quot;mod_alias&quot;&gt;mod_alias&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a0b5268dc3559ae43a4382a13162f0b182bdbc7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;real_name&lt;/code&gt; - from &lt;code&gt;&lt;a href=&quot;mod_alias&quot;&gt;mod_alias&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;real_name&lt;/code&gt; -来自 &lt;code&gt;&lt;a href=&quot;mod_alias&quot;&gt;mod_alias&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4a157375902666aadd2e49bc4b005d4f2156ef77" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;real_script_name/3&lt;/code&gt; traverses &lt;code&gt;ScriptAliases&lt;/code&gt;, typically extracted from &lt;code&gt;ConfigDB&lt;/code&gt;, and matches each &lt;code&gt;FakeName&lt;/code&gt; with &lt;code&gt;RequestURI&lt;/code&gt;. If a match is found, &lt;code&gt;FakeName&lt;/code&gt; is replaced with &lt;code&gt;RealName&lt;/code&gt; in the match. If the resulting match is not an executable script, &lt;code&gt;not_a_script&lt;/code&gt; is returned. If it is a script, the resulting script path is in two parts, &lt;code&gt;ShortPath&lt;/code&gt; and &lt;code&gt;AfterPath&lt;/code&gt;, as defined in &lt;code&gt;&lt;a href=&quot;httpd_util#split_script_path-1&quot;&gt;httpd_util:split_script_path/1&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;config_db()&lt;/code&gt; is the server config file in ETS table format as described in &lt;code&gt;&lt;a href=&quot;http_server&quot;&gt;Inets User's Guide&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;real_script_name/3&lt;/code&gt; 遍历通常从 &lt;code&gt;ConfigDB&lt;/code&gt; 中提取的 &lt;code&gt;ScriptAliases&lt;/code&gt; ，并将每个 &lt;code&gt;FakeName&lt;/code&gt; 与 &lt;code&gt;RequestURI&lt;/code&gt; 进行匹配。如果找到匹配项，则在匹配项 &lt;code&gt;FakeName&lt;/code&gt; 替换为 &lt;code&gt;RealName&lt;/code&gt; 。如果结果匹配不是可执行脚本，则返回 &lt;code&gt;not_a_script&lt;/code&gt; 。如果是脚本，则生成的脚本路径分为两个部分： &lt;code&gt;ShortPath&lt;/code&gt; 和 &lt;code&gt;AfterPath&lt;/code&gt; ，如 &lt;code&gt;&lt;a href=&quot;httpd_util#split_script_path-1&quot;&gt;httpd_util:split_script_path/1&lt;/a&gt;&lt;/code&gt; 中所定义。 &lt;code&gt;config_db()&lt;/code&gt; 是ETS表格式的服务器配置文件，如 &lt;code&gt;&lt;a href=&quot;http_server&quot;&gt;Inets User's Guide&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5e0c37bb2ccd75117ef5f016b791a40be7494d36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reason : string&lt;/code&gt; :: Exit reason. Ex. &lt;code&gt;&quot;normal&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;reason : string&lt;/code&gt; ：：退出原因。例如 &lt;code&gt;&quot;normal&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1d6900a8e02c05d22160da33f9dfea47f1156484" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reason_phrase&lt;/code&gt; returns &lt;code&gt;Description&lt;/code&gt; of an HTTP 1.1 &lt;code&gt;StatusCode&lt;/code&gt;, for example, 200 is &quot;OK&quot; and 201 is &quot;Created&quot;. For more information, see &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc2616.txt&quot;&gt;RFC 2616&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;reason_phrase&lt;/code&gt; 返回HTTP 1.1 &lt;code&gt;StatusCode&lt;/code&gt; 的 &lt;code&gt;Description&lt;/code&gt; ，例如200为&amp;ldquo;确定&amp;rdquo;，而201为&amp;ldquo;创建&amp;rdquo;。有关更多信息，请参见 &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc2616.txt&quot;&gt;RFC 2616&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="96b53a82396c316d596c1c5cde548c59c4208848" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;receive&lt;/code&gt; never fails. The execution is suspended, possibly indefinitely, until a message arrives that matches one of the patterns and with a true guard sequence.</source>
          <target state="translated">&lt;code&gt;receive&lt;/code&gt; 永不失败。可能无限期地暂停执行，直到到达与模式之一匹配且具有真实保护序列的消息为止。</target>
        </trans-unit>
        <trans-unit id="b4f40342522395030847fb1f59048644da3381b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reclaimed : integer&lt;/code&gt; :: Heap reclaimed. Ex. &lt;code&gt;2&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;reclaimed : integer&lt;/code&gt; ::堆回收。例如 &lt;code&gt;2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="99f6b849c495470fb32e64e9523f088a51ebdde1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;record_name&lt;/code&gt;. All records stored in a table must have the same name. The records must be instances of the same record type.</source>
          <target state="translated">&lt;code&gt;record_name&lt;/code&gt; 。表中存储的所有记录必须具有相同的名称。记录必须是相同记录类型的实例。</target>
        </trans-unit>
        <trans-unit id="fa56d3c2adfe99406ea66686179ceb5af48281da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;record_name&lt;/code&gt;. Returns the record name, common for all records in the table.</source>
          <target state="translated">&lt;code&gt;record_name&lt;/code&gt; 。返回表中所有记录通用的记录名称。</target>
        </trans-unit>
        <trans-unit id="5eedfd25688f4b7bf285bd5a5cb720455497048d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;recurse&lt;/code&gt;, with initial default value &lt;code&gt;false&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;recurse&lt;/code&gt; ，初始默认值为 &lt;code&gt;false&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="01c40c86f579b43fad41c6dbf31d16b2a949a840" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reg&lt;/code&gt; is a registry containing objects marked for deletion.</source>
          <target state="translated">&lt;code&gt;reg&lt;/code&gt; 是一个注册表，其中包含标记为删除的对象。</target>
        </trans-unit>
        <trans-unit id="1b044a6c45f62d9e2beadb1f75026ec2f09422fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reg&lt;/code&gt; is the registry containing &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;reg&lt;/code&gt; 是包含 &lt;code&gt;key&lt;/code&gt; 的注册表。</target>
        </trans-unit>
        <trans-unit id="c08e533ae2d6b16b9462ffaacc69a315a0a28af1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reg&lt;/code&gt; is the registry containing the object.</source>
          <target state="translated">&lt;code&gt;reg&lt;/code&gt; 是包含对象的注册表。</target>
        </trans-unit>
        <trans-unit id="581178f5f933f9dfbf88170a27b6f54efa674c52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reg&lt;/code&gt; is the registry to back up.</source>
          <target state="translated">&lt;code&gt;reg&lt;/code&gt; 是要备份的注册表。</target>
        </trans-unit>
        <trans-unit id="07ee2635246bee74e6ad502df9ea0982cb86b58a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reg&lt;/code&gt; is the registry to close.</source>
          <target state="translated">&lt;code&gt;reg&lt;/code&gt; 是要关闭的注册表。</target>
        </trans-unit>
        <trans-unit id="cd5f049b7631534f493729a05c946cdc3d746c8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reg&lt;/code&gt; is the registry to return information about.</source>
          <target state="translated">&lt;code&gt;reg&lt;/code&gt; 是要返回有关其信息的注册表。</target>
        </trans-unit>
        <trans-unit id="d1ffd2d55c41ccf3477a7f547ab99fbfff3beb4f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reg&lt;/code&gt; is the registry where the data is to be placed.</source>
          <target state="translated">&lt;code&gt;reg&lt;/code&gt; 是要放置数据的注册表。</target>
        </trans-unit>
        <trans-unit id="164a95238ac9e60b7492dce09bda4f82ec47bb6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reg&lt;/code&gt; is the registry where the object is to be placed.</source>
          <target state="translated">&lt;code&gt;reg&lt;/code&gt; 是放置对象的注册表。</target>
        </trans-unit>
        <trans-unit id="b39526fe04fdce43ea4cd218112cef8911cc572c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reg&lt;/code&gt; is the registry where the object will be looked up.</source>
          <target state="translated">&lt;code&gt;reg&lt;/code&gt; 是将在其中查找对象的注册表。</target>
        </trans-unit>
        <trans-unit id="a02f5d58d4cfe73da9a29969d050d35c1306d29c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;registered&lt;/code&gt; - All names of registered processes in the application. &lt;code&gt;systools&lt;/code&gt; uses this list to detect name clashes between applications. Defaults to &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;registered&lt;/code&gt; -应用程序中已注册进程的所有名称。 &lt;code&gt;systools&lt;/code&gt; 使用此列表来检测应用程序之间的名称冲突。默认为 &lt;code&gt;[]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="203f5ef503ea4bb4ad492f21d1f72f1ffbfab112" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;registered_name&lt;/code&gt; (if the port has a registered name)</source>
          <target state="translated">&lt;code&gt;registered_name&lt;/code&gt; （如果端口有一个注册名称）</target>
        </trans-unit>
        <trans-unit id="ae0c40de5dcb7f23614d90fbead5c1352234a6fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;regs/0&lt;/code&gt; displays information about all registered processes. &lt;code&gt;nregs/0&lt;/code&gt; does the same, but for all nodes in the network.</source>
          <target state="translated">&lt;code&gt;regs/0&lt;/code&gt; 显示有关所有已注册进程的信息。 &lt;code&gt;nregs/0&lt;/code&gt; 的功能相同，但是对于网络中的所有节点。</target>
        </trans-unit>
        <trans-unit id="0cde9bd7c0faf9d85dd5de38e11910f2a6fa285e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rel(4)&lt;/code&gt; manual page in SASL</source>
          <target state="translated">&lt;code&gt;rel(4)&lt;/code&gt; SASL中的rel（4）手册页</target>
        </trans-unit>
        <trans-unit id="dead67b720c96b0d2e0e43494dae6fb66e47d34b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;relative_product1(R1,&amp;nbsp;R2)&lt;/code&gt; is equivalent to &lt;code&gt;relative_product(converse(R1),&amp;nbsp;R2)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;relative_product1(R1,&amp;nbsp;R2)&lt;/code&gt; 等价于 &lt;code&gt;relative_product(converse(R1),&amp;nbsp;R2)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ef995371a03355fde0a05fbe0a4a4d9412ad87d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;release&lt;/code&gt;, an empty list if the application does not belong to any release, otherwise a list of the release name;</source>
          <target state="translated">&lt;code&gt;release&lt;/code&gt; ，如果应用程序不属于任何发行版，则为空列表，否则为发行版名称列表；</target>
        </trans-unit>
        <trans-unit id="aa262afc0752d866f78bd1433169baee2813e4ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;releases/RelVsn&lt;/code&gt; contains the boot script &lt;code&gt;Name.boot&lt;/code&gt; renamed to &lt;code&gt;start.boot&lt;/code&gt; and, if found, the files &lt;code&gt;relup&lt;/code&gt; and &lt;code&gt;sys.config&lt;/code&gt; or &lt;code&gt;sys.config.src&lt;/code&gt;. These files are searched for in the same directory as &lt;code&gt;Name.rel&lt;/code&gt;, in the current working directory, and in any directories specified using option &lt;code&gt;path&lt;/code&gt;. In the case of &lt;code&gt;sys.config&lt;/code&gt; it is not included if &lt;code&gt;sys.config.src&lt;/code&gt; is found.</source>
          <target state="translated">&lt;code&gt;releases/RelVsn&lt;/code&gt; 包含重命名为 &lt;code&gt;start.boot&lt;/code&gt; 的引导脚本 &lt;code&gt;Name.boot&lt;/code&gt; 以及（如果找到）文件 &lt;code&gt;relup&lt;/code&gt; 和 &lt;code&gt;sys.config&lt;/code&gt; 或 &lt;code&gt;sys.config.src&lt;/code&gt; 。在与 &lt;code&gt;Name.rel&lt;/code&gt; 相同的目录中，当前工作目录中以及使用option &lt;code&gt;path&lt;/code&gt; 指定的任何目录中搜索这些文件。在的情况下 &lt;code&gt;sys.config&lt;/code&gt; 如果不包括 &lt;code&gt;sys.config.src&lt;/code&gt; 被发现。</target>
        </trans-unit>
        <trans-unit id="73f228fd86b959af55348e7d882e6cec2ca8f954" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;releases/Vsn&lt;/code&gt; - &lt;code&gt;.rel&lt;/code&gt; file and boot script &lt;code&gt;start.boot&lt;/code&gt;; if present in the release package, &lt;code&gt;relup&lt;/code&gt; and/or &lt;code&gt;sys.config&lt;/code&gt; or &lt;code&gt;sys.config.src&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;releases/Vsn&lt;/code&gt; - &lt;code&gt;.rel&lt;/code&gt; 文件和启动脚本 &lt;code&gt;start.boot&lt;/code&gt; ; 发行包， &lt;code&gt;relup&lt;/code&gt; 和/或 &lt;code&gt;sys.config&lt;/code&gt; 或 &lt;code&gt;sys.config.src&lt;/code&gt; 中是否存在</target>
        </trans-unit>
        <trans-unit id="e4d5f27d10d69fc586f2a1d77639bd08de339c0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;relup(4)&lt;/code&gt; manual page in SASL</source>
          <target state="translated">&lt;code&gt;relup(4)&lt;/code&gt; SASL中的relup（4）手册页</target>
        </trans-unit>
        <trans-unit id="35e9e07b5104505c091e492434e1b6e2baaad654" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;remote_user&lt;/code&gt; - from &lt;code&gt;mod_auth&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;remote_user&lt;/code&gt; -来自 &lt;code&gt;mod_auth&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7b912292350e7dd2585255413f48d595db50eac6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reopen/2,3&lt;/code&gt; are used for internally formatted logs, and &lt;code&gt;breopen/3&lt;/code&gt; for externally formatted logs.</source>
          <target state="translated">&lt;code&gt;reopen/2,3&lt;/code&gt; 用于内部格式化的日志， &lt;code&gt;breopen/3&lt;/code&gt; 用于外部格式化的日志。</target>
        </trans-unit>
        <trans-unit id="1caecb3858181e6a505b978fc7cff8ff65ef781c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;repair&lt;/code&gt; - Defines the dets repair behaviour.</source>
          <target state="translated">&lt;code&gt;repair&lt;/code&gt; -定义dets修复行为。</target>
        </trans-unit>
        <trans-unit id="be7825ac1d16f6cbbde7219604cc01f08dfc8fc1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;report&lt;/code&gt; - &lt;code&gt;SnmpReportInfo&lt;/code&gt; (see &lt;code&gt;&lt;a href=&quot;#handle_report&quot;&gt;handle_report&lt;/a&gt;&lt;/code&gt; for more info).</source>
          <target state="translated">&lt;code&gt;report&lt;/code&gt; - &lt;code&gt;SnmpReportInfo&lt;/code&gt; （见 &lt;code&gt;&lt;a href=&quot;#handle_report&quot;&gt;handle_report&lt;/a&gt;&lt;/code&gt; 获取更多信息）。</target>
        </trans-unit>
        <trans-unit id="aa31d0d9da25285cdec40ae21087bdf3875c655b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;require&lt;/code&gt; is an assert statement, which can be part of the &lt;code&gt;&lt;a href=&quot;write_test_chapter#suite&quot;&gt;Test Suite Information Function&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;write_test_chapter#info_function&quot;&gt;Test Case Information Function&lt;/a&gt;&lt;/code&gt;. If the required variable is unavailable, the test is skipped (unless a default value has been specified, see section &lt;code&gt;&lt;a href=&quot;write_test_chapter#info_function&quot;&gt;Test Case Information Function&lt;/a&gt;&lt;/code&gt; for details). Also, function &lt;code&gt;&lt;a href=&quot;ct#require-1&quot;&gt;ct:require/1/2&lt;/a&gt;&lt;/code&gt; can be called from a test case to check if a specific variable is available. The return value from this function must be checked explicitly and appropriate action be taken depending on the result (for example, to skip the test case if the variable in question does not exist).</source>
          <target state="translated">&lt;code&gt;require&lt;/code&gt; 是一个断言语句，可以是 &lt;code&gt;&lt;a href=&quot;write_test_chapter#suite&quot;&gt;Test Suite Information Function&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;write_test_chapter#info_function&quot;&gt;Test Case Information Function&lt;/a&gt;&lt;/code&gt; 的一部分。如果所需的变量不可用，则跳过测试（除非指定了默认值，有关详细 &lt;code&gt;&lt;a href=&quot;write_test_chapter#info_function&quot;&gt;Test Case Information Function&lt;/a&gt;&lt;/code&gt; ，请参见&amp;ldquo; 测试用例信息功能&amp;rdquo;一节）。另外，可以从测试用例中调用函数 &lt;code&gt;&lt;a href=&quot;ct#require-1&quot;&gt;ct:require/1/2&lt;/a&gt;&lt;/code&gt; 来检查特定变量是否可用。必须显式检查此函数的返回值，并根据结果采取适当的措施（例如，如果所讨论的变量不存在，则跳过测试用例）。</target>
        </trans-unit>
        <trans-unit id="96a7d9eca2ecc0e749453229901995f4b5035a25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;resolv&lt;/code&gt; (Unix resolv.conf)</source>
          <target state="translated">&lt;code&gt;resolv&lt;/code&gt; （Unix resolv.conf）</target>
        </trans-unit>
        <trans-unit id="6578da0c8fe5f5d149e969260d305851d33ab8a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;resolve/0&lt;/code&gt; returns the official &lt;code&gt;HostName&lt;/code&gt; of the current host.</source>
          <target state="translated">&lt;code&gt;resolve/0&lt;/code&gt; 返回正式的 &lt;code&gt;HostName&lt;/code&gt; 当前主机。</target>
        </trans-unit>
        <trans-unit id="48cc9c7cd30a4bfe2c8d7fc7da352e6dfccd6690" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rest_for_one&lt;/code&gt; - If one child process terminates and is to be restarted, the 'rest' of the child processes (that is, the child processes after the terminated child process in the start order) are terminated. Then the terminated child process and all child processes after it are restarted.</source>
          <target state="translated">&lt;code&gt;rest_for_one&lt;/code&gt; -如果一个子进程终止并要重新启动，则子进程的&amp;ldquo;其余&amp;rdquo;（即，按照启动顺序终止的子进程之后的子进程）将终止。然后，终止的子进程以及重新启动后的所有子进程。</target>
        </trans-unit>
        <trans-unit id="18f6700cb534692c96844b101482fdde04dfa044" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;restart&lt;/code&gt; defines when a terminated child process is to be restarted.</source>
          <target state="translated">&lt;code&gt;restart&lt;/code&gt; 定义终止的子进程何时重新启动。</target>
        </trans-unit>
        <trans-unit id="8bb040891b1153b7fb0d8501cd77e1639c12960d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;restart&lt;/code&gt; defines when a terminated child process must be restarted. A &lt;code&gt;permanent&lt;/code&gt; child process is always restarted. A &lt;code&gt;temporary&lt;/code&gt; child process is never restarted (even when the supervisor's restart strategy is &lt;code&gt;rest_for_one&lt;/code&gt; or &lt;code&gt;one_for_all&lt;/code&gt; and a sibling's death causes the temporary process to be terminated). A &lt;code&gt;transient&lt;/code&gt; child process is restarted only if it terminates abnormally, that is, with another exit reason than &lt;code&gt;normal&lt;/code&gt;, &lt;code&gt;shutdown&lt;/code&gt;, or &lt;code&gt;{shutdown,Term}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;restart&lt;/code&gt; 定义何时必须重新启动终止的子进程。一个 &lt;code&gt;permanent&lt;/code&gt; 子进程总是会重启。一个 &lt;code&gt;temporary&lt;/code&gt; 子进程不会再重新启动（甚至当主管的重启策略是 &lt;code&gt;rest_for_one&lt;/code&gt; 或 &lt;code&gt;one_for_all&lt;/code&gt; 和兄弟姐妹的死亡原因临时进程被终止）。一个 &lt;code&gt;transient&lt;/code&gt; 子进程重新启动，只有当它异常终止，即与另一个出口原因，而不是 &lt;code&gt;normal&lt;/code&gt; ， &lt;code&gt;shutdown&lt;/code&gt; ，或 &lt;code&gt;{shutdown,Term}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b6f13062c07413957b07327b0960e0d7b1c6faae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;restart_emulator&lt;/code&gt; if this instruction is encountered in the script</source>
          <target state="translated">&lt;code&gt;restart_emulator&lt;/code&gt; 如果脚本中遇到此指令，则重新启动模拟器</target>
        </trans-unit>
        <trans-unit id="dea520911052ada4482320f73d5f7f7828801afc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;restriction_reason()&lt;/code&gt; = &lt;code&gt;epath | efnamena | elogin | enotbinary&lt;/code&gt; - all restrictions are not always relevant to all functions</source>
          <target state="translated">&lt;code&gt;restriction_reason()&lt;/code&gt; &lt;code&gt;epath | efnamena | elogin | enotbinary&lt;/code&gt; （） = epath | efnamena | elogin | enotbinary-所有限制并不总是与所有功能相关</target>
        </trans-unit>
        <trans-unit id="b0b37cf09753b4467c363c85e405ec5a16f552ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;resume&lt;/code&gt; implies the default &lt;code&gt;FetchTimeout&lt;/code&gt;, which is 10 seconds</source>
          <target state="translated">&lt;code&gt;resume&lt;/code&gt; 表示默认的 &lt;code&gt;FetchTimeout&lt;/code&gt; ，为10秒</target>
        </trans-unit>
        <trans-unit id="73e74acfdcf2b62421adf8e11e6312516974a632" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;return&lt;/code&gt; - for &lt;code&gt;[{'_',[],[{return_trace}]}]&lt;/code&gt; (report the return value from a traced function)</source>
          <target state="translated">&lt;code&gt;return&lt;/code&gt; -对于 &lt;code&gt;[{'_',[],[{return_trace}]}]&lt;/code&gt; ]（报告从跟踪函数返回的值）</target>
        </trans-unit>
        <trans-unit id="79dc67411fa6c27a6ed3fa9f9f8b17896ed2f0d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;return_to&lt;/code&gt; and &lt;code&gt;return_from&lt;/code&gt; trace messages are lost when tracing on the spawn BIFs.</source>
          <target state="translated">&lt;code&gt;return_to&lt;/code&gt; 在生成BIF上进行跟踪时，return_to和 &lt;code&gt;return_from&lt;/code&gt; 跟踪消息会丢失。</target>
        </trans-unit>
        <trans-unit id="10eb0fd561ac4537b0fbc9789464e2edc3507e89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rfc1123_date/0&lt;/code&gt; returns the current date in RFC 1123 format. &lt;code&gt;rfc_date/1&lt;/code&gt; converts the date in the Erlang format to the RFC 1123 date format.</source>
          <target state="translated">&lt;code&gt;rfc1123_date/0&lt;/code&gt; 以RFC 1123格式返回当前日期。 &lt;code&gt;rfc_date/1&lt;/code&gt; 将Erlang格式的日期转换为RFC 1123日期格式。</target>
        </trans-unit>
        <trans-unit id="becde7626294b47c704773cb540465b1ed4e9390" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rle&lt;/code&gt; to limit match distances to one (run-length encoding)</source>
          <target state="translated">&lt;code&gt;rle&lt;/code&gt; 到极限匹配距离一（游程长度编码）</target>
        </trans-unit>
        <trans-unit id="644dd7e73ac86edeaa8ee314012f84e50ea0d84d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rpc&lt;/code&gt; manual page in Kernel</source>
          <target state="translated">&lt;code&gt;rpc&lt;/code&gt; 内核中的rpc手册页</target>
        </trans-unit>
        <trans-unit id="878eb63062d735355fcc6c37efb0b6ae5b64477a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;run_erl&lt;/code&gt; is a wrapper that provides logging of output from the runtime system to file. It also provides a simple mechanism for attaching to the Erlang shell (&lt;code&gt;to_erl&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;run_erl&lt;/code&gt; 是一个包装器，提供从运行时系统到文件的输出日志记录。它还提供了一种简单的机制来附加到Erlang shell（ &lt;code&gt;to_erl&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="59771bcdadf04ee85ff53f63e69f07db4faf3f43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;runnable : integer&lt;/code&gt; :: Runnable. Ex. &lt;code&gt;1&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;runnable : integer&lt;/code&gt; :: 可运行 例如 &lt;code&gt;1&lt;/code&gt; 个</target>
        </trans-unit>
        <trans-unit id="26fd9d14db5e4fcc321544ac7ea25df2ddea3c37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;runnable&lt;/code&gt; (ready to run, but another process is running)</source>
          <target state="translated">&lt;code&gt;runnable&lt;/code&gt; （准备运行，但是另一个进程正在运行）</target>
        </trans-unit>
        <trans-unit id="42b5c15072d71402981ef76eb126e5e00ef61957" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;running&lt;/code&gt; - The process is running. &lt;code&gt;Info={}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;running&lt;/code&gt; -进程正在运行。 &lt;code&gt;Info={}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ed752e775d6018a2d31a19161dde1420f6d71649" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;running_db_nodes&lt;/code&gt;. Returns a list of nodes where Mnesia currently is running. This function can be called even if Mnesia is not yet running, but it then has slightly different semantics.</source>
          <target state="translated">&lt;code&gt;running_db_nodes&lt;/code&gt; 。返回Mnesia当前正在运行的节点的列表。即使Mnesia尚未运行，也可以调用此函数，但是它的语义略有不同。</target>
        </trans-unit>
        <trans-unit id="2429fa99d76f82928a5958828bb5fbc614b38c52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rwlck&lt;/code&gt; is a pointer to an initialized rwlock.</source>
          <target state="translated">&lt;code&gt;rwlck&lt;/code&gt; 是指向初始化的rwlock的指针。</target>
        </trans-unit>
        <trans-unit id="dff35b17db19797318d995adf141200ee18b5447" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rwlck&lt;/code&gt; is a pointer to an rwlock to destroy.</source>
          <target state="translated">&lt;code&gt;rwlck&lt;/code&gt; 是指向要销毁的rwlock的指针。</target>
        </trans-unit>
        <trans-unit id="b339605689a0ebacf25c15f5d5d11548a8202e57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rwlck&lt;/code&gt; is a pointer to an rwlock to read unlock.</source>
          <target state="translated">&lt;code&gt;rwlck&lt;/code&gt; 是指向rwlock以读取解锁的指针。</target>
        </trans-unit>
        <trans-unit id="046b572372cc868cfad39d254b43d6ae9d083d90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rwlck&lt;/code&gt; is a pointer to an rwlock to read/write lock.</source>
          <target state="translated">&lt;code&gt;rwlck&lt;/code&gt; 是指向rwlock的指针，用于读取/写入锁定。</target>
        </trans-unit>
        <trans-unit id="31572995258393c7efe7170cf6c689f4f4a92191" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rwlck&lt;/code&gt; is a pointer to an rwlock to read/write unlock.</source>
          <target state="translated">&lt;code&gt;rwlck&lt;/code&gt; 是指向rwlock的指针，用于读取/写入解锁。</target>
        </trans-unit>
        <trans-unit id="48ce4fc95d093a6ebf29155d71fd7dac1ca203b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rwlck&lt;/code&gt; is a pointer to an rwlock to try to read lock.</source>
          <target state="translated">&lt;code&gt;rwlck&lt;/code&gt; 是指向rwlock的指针，以尝试读取锁。</target>
        </trans-unit>
        <trans-unit id="e5f9fb44b57b22fa7d719d0a6d85f98a900e45ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rwlck&lt;/code&gt; is a pointer to the rwlock to read lock.</source>
          <target state="translated">&lt;code&gt;rwlck&lt;/code&gt; 是指向rwlock读取锁的指针。</target>
        </trans-unit>
        <trans-unit id="dc0063396ffd1605ce1871de9ff2d80b9f75e707" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rwlck&lt;/code&gt;is pointer to an rwlock to try to read/write lock.</source>
          <target state="translated">&lt;code&gt;rwlck&lt;/code&gt; 是指向rwlock的指针，以尝试读取/写入锁。</target>
        </trans-unit>
        <trans-unit id="a5321813fd2597a89aa3f4849e998c3f9004deb9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;s&lt;/code&gt; is the string to assign. The string itself must have been created through a single call to &lt;code&gt;malloc()&lt;/code&gt; or similar a function, so that the registry can later delete it if necessary by calling &lt;code&gt;free()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;s&lt;/code&gt; 是要分配的字符串。字符串本身必须已经通过对 &lt;code&gt;malloc()&lt;/code&gt; 或类似函数的单次调用而创建，以便注册表以后可以根据需要通过调用 &lt;code&gt;free()&lt;/code&gt; 来删除它。</target>
        </trans-unit>
        <trans-unit id="492bb44dd4210fc15721d408bc39dd4a5b08ede2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;save_scenario/0&lt;/code&gt; saves information about the current runtime scenario. This information will later be used when &lt;code&gt;&lt;a href=&quot;#make_config-0&quot;&gt;make_config/0&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;#make_config-1&quot;&gt;make_config/1&lt;/a&gt;&lt;/code&gt; is called.</source>
          <target state="translated">&lt;code&gt;save_scenario/0&lt;/code&gt; 保存有关当前运行时方案的信息。稍后将在 &lt;code&gt;&lt;a href=&quot;#make_config-0&quot;&gt;make_config/0&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;#make_config-1&quot;&gt;make_config/1&lt;/a&gt;&lt;/code&gt; 调用时使用此信息。</target>
        </trans-unit>
        <trans-unit id="67aedacb055a5db07fe0531d8d1bebe9034a83c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sbc_blocks : integer&lt;/code&gt; :: Number of singleblocks in instance. Ex. &lt;code&gt;1&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;sbc_blocks : integer&lt;/code&gt; ::实例中的单块数。例如 &lt;code&gt;1&lt;/code&gt; 个</target>
        </trans-unit>
        <trans-unit id="af25a742d41f35c40e2d131a73bf30d935bc24fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sbc_blocks_size : integer&lt;/code&gt; :: Total size of all singleblock blocks in instance. Ex. &lt;code&gt;285296&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;sbc_blocks_size : integer&lt;/code&gt; ::实例中所有单个块的总大小。例如 &lt;code&gt;285296&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3545b362ef09a5df3c9f9018196ad95d849d099c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sbc_carriers : integer&lt;/code&gt; :: Number of singleblock carriers in instance. Ex. &lt;code&gt;1&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;sbc_carriers : integer&lt;/code&gt; ::实例中单块载波的数量。例如 &lt;code&gt;1&lt;/code&gt; 个</target>
        </trans-unit>
        <trans-unit id="b743ba1ac8774f48bcb9e286850e7ca9afbe736c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sbc_carriers_size : integer&lt;/code&gt; :: Total size of singleblock blocks carriers in instance. Ex. &lt;code&gt;1343488&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;sbc_carriers_size : integer&lt;/code&gt; ::单个块中实例载波的总大小。例如 &lt;code&gt;1343488&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="24f95fe4dd374b8f761b13faef347622004e30f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;scheduler : integer&lt;/code&gt; :: Scheduler ID. Ex. &lt;code&gt;1&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;scheduler : integer&lt;/code&gt; :: Scheduler ID。例如 &lt;code&gt;1&lt;/code&gt; 个</target>
        </trans-unit>
        <trans-unit id="f2722b92af9ae891cb5c5e5510162b02e6726fde" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;scheduler_wall_time&lt;/code&gt; is by default disabled. To enable it, use &lt;code&gt;erlang:system_flag(scheduler_wall_time, true)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;scheduler_wall_time&lt;/code&gt; 默认情况下，禁用scheduler_wall_time。要启用它，请使用 &lt;code&gt;erlang:system_flag(scheduler_wall_time, true)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eddd3519b2c6eba3d7b146567fc4fc81c37d71d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;schema_location&lt;/code&gt;. Returns the initial schema location.</source>
          <target state="translated">&lt;code&gt;schema_location&lt;/code&gt; 。返回初始架构位置。</target>
        </trans-unit>
        <trans-unit id="1c69a1656bcc31b0f51d1c5efa9ed2ec0e6e2244" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;script(4)&lt;/code&gt; manual page in SASL</source>
          <target state="translated">&lt;code&gt;script(4)&lt;/code&gt; SASL中的script（4）手册页</target>
        </trans-unit>
        <trans-unit id="5d54d2b5717b12f311300b2446726b7046fefbd8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sed&lt;/code&gt; -- Stream Editor for basic text transformation.</source>
          <target state="translated">&lt;code&gt;sed&lt;/code&gt; -用于基本文本转换的流编辑器。</target>
        </trans-unit>
        <trans-unit id="dbba17abcfc4e79daeff828f82d82e205b3d595b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;seed({A1, A2, A3})&lt;/code&gt; is equivalent to &lt;code&gt;seed(A1, A2, A3)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;seed({A1, A2, A3})&lt;/code&gt; 等同于 &lt;code&gt;seed(A1, A2, A3)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="655b5c4be89633126a7de828e0aef4b261102c61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;select/2&lt;/code&gt; sends a query to the driver and returns the result.</source>
          <target state="translated">&lt;code&gt;select/2&lt;/code&gt; 向驱动程序发送查询并返回结果。</target>
        </trans-unit>
        <trans-unit id="7e269f5a1b09faf1cc6193296b165a0f6ac0789e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;select&lt;/code&gt; - The table is traversed by calling &lt;code&gt;dets:select/3&lt;/code&gt; and &lt;code&gt;dets:select/1&lt;/code&gt;. Option &lt;code&gt;n_objects&lt;/code&gt; determines the number of objects returned (the third argument of &lt;code&gt;select/3&lt;/code&gt;). The match specification (the second argument of &lt;code&gt;select/3&lt;/code&gt;) is assembled by &lt;code&gt;qlc&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;select&lt;/code&gt; -该表是通过调用遍历 &lt;code&gt;dets:select/3&lt;/code&gt; 和 &lt;code&gt;dets:select/1&lt;/code&gt; 。选项 &lt;code&gt;n_objects&lt;/code&gt; 确定返回的对象数（ &lt;code&gt;select/3&lt;/code&gt; 的第三个参数）。匹配规范（ &lt;code&gt;select/3&lt;/code&gt; 的第二个参数）由 &lt;code&gt;qlc&lt;/code&gt; 汇编：</target>
        </trans-unit>
        <trans-unit id="071408e6c99d649c45dbdcb7cefc777106d38dca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;select&lt;/code&gt; must always run within an activity, such as a transaction. The following function can be constructed to call from the shell:</source>
          <target state="translated">&lt;code&gt;select&lt;/code&gt; 必须始终在活动（例如事务）中运行。可以构造以下函数以从shell调用：</target>
        </trans-unit>
        <trans-unit id="1aa18bc2dfcbda04a52e65c27f2fd8ae29f3d5af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;select&lt;/code&gt;. The table is traversed by calling &lt;code&gt;mnesia:select/4&lt;/code&gt; and &lt;code&gt;mnesia:select/1&lt;/code&gt;. The match specification (the second argument of &lt;code&gt;select/3&lt;/code&gt;) is assembled by QLC: simple filters are translated into equivalent match specifications. More complicated filters need to be applied to all objects returned by &lt;code&gt;select/3&lt;/code&gt; given a match specification that matches all objects.</source>
          <target state="translated">&lt;code&gt;select&lt;/code&gt; 。通过调用 &lt;code&gt;mnesia:select/4&lt;/code&gt; 和 &lt;code&gt;mnesia:select/1&lt;/code&gt; 遍历该表。匹配规范（ &lt;code&gt;select/3&lt;/code&gt; 的第二个参数）由QLC组装：将简单的过滤器转换为等效的匹配规范。给定与所有对象匹配的匹配规范，需要对 &lt;code&gt;select/3&lt;/code&gt; 返回的所有对象应用更复杂的过滤器。</target>
        </trans-unit>
        <trans-unit id="5cdddd354c307fc8695cdc5cf4f7d119e0015163" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self()&lt;/code&gt; returns the pid of the process that executes &lt;code&gt;self()&lt;/code&gt;, in this case the pid of &quot;ping&quot;. (Recall the code for &quot;pong&quot;, this lands up in the variable &lt;code&gt;Ping_PID&lt;/code&gt; in the &lt;code&gt;receive&lt;/code&gt; previously explained.)</source>
          <target state="translated">&lt;code&gt;self()&lt;/code&gt; 返回执行 &lt;code&gt;self()&lt;/code&gt; 的进程的pid ，在这种情况下为&amp;ldquo; ping&amp;rdquo;的pid。（回想一下&amp;ldquo; pong&amp;rdquo;的代码，它落在前面解释的 &lt;code&gt;receive&lt;/code&gt; 中的变量 &lt;code&gt;Ping_PID&lt;/code&gt; 中。）</target>
        </trans-unit>
        <trans-unit id="1ba0e279dfc87c895685a3e3f71c780338391921" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;send_cancelled_reason()&lt;/code&gt; - the message sending was deliberately cancelled. &lt;code&gt;reason_for_send_cancel()&lt;/code&gt; is the reason given in the &lt;code&gt;cancel&lt;/code&gt; return from the &lt;code&gt;&lt;a href=&quot;megaco_transport#send_message&quot;&gt;send_message&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">&lt;code&gt;send_cancelled_reason()&lt;/code&gt; -故意取消了消息发送。 &lt;code&gt;reason_for_send_cancel()&lt;/code&gt; 是 &lt;code&gt;&lt;a href=&quot;megaco_transport#send_message&quot;&gt;send_message&lt;/a&gt;&lt;/code&gt; 函数的 &lt;code&gt;cancel&lt;/code&gt; 返回中给出的原因。</target>
        </trans-unit>
        <trans-unit id="93234f2ab5ee323c0146db35ca1952d365873a35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;send_failed_reason()&lt;/code&gt; - an error occurred while attempting to send the message.</source>
          <target state="translated">&lt;code&gt;send_failed_reason()&lt;/code&gt; -尝试发送消息时发生错误。</target>
        </trans-unit>
        <trans-unit id="d161cb1007cdac7ebd03436dcd7406b549feacd9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;send_message&lt;/code&gt; - Send a message. &lt;strong&gt;Mandatory&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;send_message&lt;/code&gt; -发送消息。&lt;strong&gt;强制性的&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4ac529b2d6293204d912fe9074ddd8900b55f583" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;seq_trace&lt;/code&gt; implements sequential tracing (known in the AXE10 world, and sometimes called &quot;forlopp tracing&quot;). &lt;code&gt;dbg&lt;/code&gt; can interpret messages generated from &lt;code&gt;seq_trace&lt;/code&gt; and the same tracer function for both types of tracing can be used. The &lt;code&gt;seq_trace&lt;/code&gt; messages can even be sent to a trace port for further analysis.</source>
          <target state="translated">&lt;code&gt;seq_trace&lt;/code&gt; 实现顺序跟踪（在AXE10领域中众所周知，有时也称为&amp;ldquo; forlopp跟踪&amp;rdquo;）。 &lt;code&gt;dbg&lt;/code&gt; 可以解释从 &lt;code&gt;seq_trace&lt;/code&gt; 生成的消息，并且对于两种类型的跟踪都可以使用相同的跟踪器功能。该 &lt;code&gt;seq_trace&lt;/code&gt; 消息甚至可以发送到跟踪端口进行进一步的分析。</target>
        </trans-unit>
        <trans-unit id="d2fb86b915b34891fd5cf4eb06bab85aca636b9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;seq_trace&lt;/code&gt; provides functions that control all aspects of sequential tracing. There are functions for activation, deactivation, inspection, and for collection of the trace output.</source>
          <target state="translated">&lt;code&gt;seq_trace&lt;/code&gt; 提供控制顺序跟踪各个方面的函数。有用于激活，禁用，检查以及跟踪输出收集的功能。</target>
        </trans-unit>
        <trans-unit id="9416e87758be922f8530c11afc0f09e59c485bb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;server_name&lt;/code&gt; is the registered name of the intended recipient.</source>
          <target state="translated">&lt;code&gt;server_name&lt;/code&gt; 是预期收件人的注册名称。</target>
        </trans-unit>
        <trans-unit id="b11a92faf8246f597f5eeb51abfdfa89885ec3fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;set&lt;/code&gt;. A table of this type has at most one object with a given key. If an object with a key already present in the table is inserted, the existing object is overwritten by the new object.</source>
          <target state="translated">&lt;code&gt;set&lt;/code&gt; 。这种类型的表最多具有一个具有给定键的对象。如果插入了表中已存在键的对象，则现有对象将被新对象覆盖。</target>
        </trans-unit>
        <trans-unit id="37fc2ac2d7cef365a81e57212caaecd91e549506" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;set_env/4&lt;/code&gt; uses the standard &lt;code&gt;gen_server&lt;/code&gt; time-out value (5000 ms). Option &lt;code&gt;timeout&lt;/code&gt; can be specified if another time-out value is useful, for example, in situations where the application controller is heavily loaded.</source>
          <target state="translated">&lt;code&gt;set_env/4&lt;/code&gt; 使用标准的 &lt;code&gt;gen_server&lt;/code&gt; 超时值（5000毫秒）。如果另一个超时值有用，则可以指定选项 &lt;code&gt;timeout&lt;/code&gt; ，例如，在应用程序控制器负载很重的情况下。</target>
        </trans-unit>
        <trans-unit id="723b6ec3558b1a05623ea2acefcef07660ef9f02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setelement/3&lt;/code&gt; copies the tuple it modifies. Therefore, updating a tuple in a loop using &lt;code&gt;setelement/3&lt;/code&gt; creates a new copy of the tuple every time.</source>
          <target state="translated">&lt;code&gt;setelement/3&lt;/code&gt; 复制它修改的元组。因此， &lt;code&gt;setelement/3&lt;/code&gt; 使用setelement / 3循环更新一个元组都会创建一个新的元组副本。</target>
        </trans-unit>
        <trans-unit id="b519d57675ddcea40e608eb2fe2e7cfc84177a00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setup/5&lt;/code&gt; should spawn a process that connects to &lt;code&gt;Node&lt;/code&gt;. When connection has been established it should perform the Erlang distribution handshake for the connection. If the handshake successfully completes it should continue to function as a connection supervisor. This process should preferably execute on &lt;code&gt;max&lt;/code&gt; priority.</source>
          <target state="translated">&lt;code&gt;setup/5&lt;/code&gt; 应该产生一个连接到 &lt;code&gt;Node&lt;/code&gt; 的进程。建立连接后，应为连接执行Erlang分发握手。如果握手成功完成，则应继续充当连接管理器。该过程最好应在 &lt;code&gt;max&lt;/code&gt; 优先级上执行。</target>
        </trans-unit>
        <trans-unit id="806347a63259d8b7e63c063654b582b47a60b4e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setup&lt;/code&gt; sets up a single fixture for running all of the specified tests, with optional teardown afterwards. The arguments are described in detail below.</source>
          <target state="translated">&lt;code&gt;setup&lt;/code&gt; 设置一个夹具来运行所有指定的测试，然后再进行拆卸。参数将在下面详细描述。</target>
        </trans-unit>
        <trans-unit id="7deb750b6f0af86ba5927837d5d00ed9a2f687d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;shell&lt;/code&gt; is equivalent to &lt;code&gt;tracer(node(),[{file, {local, &quot;ttb&quot;}}, shell])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;shell&lt;/code&gt; 等效于 &lt;code&gt;tracer(node(),[{file, {local, &quot;ttb&quot;}}, shell])&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0819ffc4c06ffc6f5a24dc6e038264cce8bdb7b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;shortage_reason()&lt;/code&gt; = &lt;code&gt;etnospc | epnospc&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;shortage_reason()&lt;/code&gt; _ &lt;code&gt;etnospc | epnospc&lt;/code&gt; （） = etnospc | epnospc</target>
        </trans-unit>
        <trans-unit id="a4557b700cde27f3499b244e63b6493bece0c7a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;shutdown&lt;/code&gt; defines how a child process is to be terminated.</source>
          <target state="translated">&lt;code&gt;shutdown&lt;/code&gt; 定义如何终止子进程。</target>
        </trans-unit>
        <trans-unit id="abf746ddd6d286c4d87ec27da0c65ace89118fc0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;shutdown&lt;/code&gt; defines how a child process must be terminated. &lt;code&gt;brutal_kill&lt;/code&gt; means that the child process is unconditionally terminated using &lt;code&gt;exit(Child,kill)&lt;/code&gt;. An integer time-out value means that the supervisor tells the child process to terminate by calling &lt;code&gt;exit(Child,shutdown)&lt;/code&gt; and then wait for an exit signal with reason &lt;code&gt;shutdown&lt;/code&gt; back from the child process. If no exit signal is received within the specified number of milliseconds, the child process is unconditionally terminated using &lt;code&gt;exit(Child,kill)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;shutdown&lt;/code&gt; 定义必须如何终止子进程。 &lt;code&gt;brutal_kill&lt;/code&gt; 意味着子进程使用 &lt;code&gt;exit(Child,kill)&lt;/code&gt; 无条件终止。整数超时值表示主管通过调用 &lt;code&gt;exit(Child,shutdown)&lt;/code&gt; 告知子进程终止，然后等待退出信号，原因是该子进程退出了 &lt;code&gt;shutdown&lt;/code&gt; 。如果在指定的毫秒数内未收到退出信号，则使用 &lt;code&gt;exit(Child,kill)&lt;/code&gt; 无条件终止子进程。</target>
        </trans-unit>
        <trans-unit id="fd4753d2069f000bf12b0df5bc36d0d3ade9d00f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;shutdown&lt;/code&gt;, if the event handler has been removed because the event manager is terminating.</source>
          <target state="translated">&lt;code&gt;shutdown&lt;/code&gt; ，如果由于事件管理器正在终止而删除了事件处理程序。</target>
        </trans-unit>
        <trans-unit id="040336bda627e687cd170b4ad63d3d08ce8b2d55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;silent_connections&lt;/code&gt; can also be specified in a test suite. This is accomplished by returning a tuple, &lt;code&gt;{silent_connections,ConnTypes}&lt;/code&gt;, in the &lt;code&gt;suite/0&lt;/code&gt; or test case information list. If &lt;code&gt;ConnTypes&lt;/code&gt; is a list of atoms (SSH, Telnet, FTP, RPC and/or SNMP), output for any corresponding connections are suppressed. Full logging is by default enabled for any connection of type not specified in &lt;code&gt;ConnTypes&lt;/code&gt;. Hence, if &lt;code&gt;ConnTypes&lt;/code&gt; is the empty list, logging is enabled for all connections.</source>
          <target state="translated">&lt;code&gt;silent_connections&lt;/code&gt; 还可以在测试套件中指定silent_connections。这是通过在 &lt;code&gt;suite/0&lt;/code&gt; 或测试用例信息列表中返回一个元组 &lt;code&gt;{silent_connections,ConnTypes}&lt;/code&gt; 来实现的。如果 &lt;code&gt;ConnTypes&lt;/code&gt; 是原子列表（SSH，Telnet，FTP，RPC和/或SNMP），则将抑制任何相应连接的输出。默认情况下，对未在 &lt;code&gt;ConnTypes&lt;/code&gt; 中指定的任何类型的连接启用完全日志记录。因此，如果 &lt;code&gt;ConnTypes&lt;/code&gt; 为空列表，则为所有连接启用日志记录。</target>
        </trans-unit>
        <trans-unit id="f8bca7dbd674462c4e129a1781b6ba16f4de4629" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;silent_connections&lt;/code&gt; can also be specified with a term in a test specification (see section &lt;code&gt;&lt;a href=&quot;run_test_chapter#test_specifications&quot;&gt;Test Specifications&lt;/a&gt;&lt;/code&gt; in section Running Tests and Analyzing Results). Connections provided with start flag/option &lt;code&gt;silent_connections&lt;/code&gt; are merged with any connections listed in the test specification.</source>
          <target state="translated">&lt;code&gt;silent_connections&lt;/code&gt; 还可以在测试规范中用术语指定silent_connections（请参阅&amp;ldquo; 运行测试和分析结果&amp;rdquo; 部分中的&amp;ldquo; &lt;code&gt;&lt;a href=&quot;run_test_chapter#test_specifications&quot;&gt;Test Specifications&lt;/a&gt;&lt;/code&gt; &amp;rdquo;部分）。带有开始标志/选项 &lt;code&gt;silent_connections&lt;/code&gt; 的连接将与​​测试规范中列出的所有连接合并。</target>
        </trans-unit>
        <trans-unit id="e4275c8d58280a491b97514105528400bb09c2ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;silent_connections&lt;/code&gt;, see &lt;code&gt;&lt;a href=&quot;run_test_chapter#silent_connections&quot;&gt;Silent Connections&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;silent_connections&lt;/code&gt; ，请参阅 &lt;code&gt;&lt;a href=&quot;run_test_chapter#silent_connections&quot;&gt;Silent Connections&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a3f84446b808a2de27d8f496e723aae82586d721" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;simple_one_for_one&lt;/code&gt; - A simplified &lt;code&gt;one_for_one&lt;/code&gt; supervisor, where all child processes are dynamically added instances of the same process type, that is, running the same code.</source>
          <target state="translated">&lt;code&gt;simple_one_for_one&lt;/code&gt; -简化的 &lt;code&gt;one_for_one&lt;/code&gt; 主管，其中所有子进程都是动态添加的，具有相同进程类型（即，运行相同代码）的实例。</target>
        </trans-unit>
        <trans-unit id="f24bec336969a4cfa5778cf9dca31f097079e3b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;size : integer&lt;/code&gt; :: Carrier size. Ex. &lt;code&gt;262144&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;size : integer&lt;/code&gt; ::载波大小。例如 &lt;code&gt;262144&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b22bcbafe88ddb303bdfa29c4f7d7abffe43cc8e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;size/1&lt;/code&gt; returns the size for both tuples and binaries.</source>
          <target state="translated">&lt;code&gt;size/1&lt;/code&gt; 返回元组和二进制文件的大小。</target>
        </trans-unit>
        <trans-unit id="afd8d87c333023befea22ee5046b439bb227714b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;size/memory threshold&lt;/code&gt;. When the total size or total memory of a fragmented table (or a single fragment) exceeds some application-specific threshold, it can be time to add a new fragment dynamically to obtain a better distribution of records.</source>
          <target state="translated">&lt;code&gt;size/memory threshold&lt;/code&gt; 。当碎片表（或单个碎片）的总大小或总内存超过某个特定于应用程序的阈值时，可能是时候动态添加新碎片以获得更好的记录分配了。</target>
        </trans-unit>
        <trans-unit id="593f72928313cf299a1b78fe8654af5202977953" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;size&lt;/code&gt; indicates the length of &lt;code&gt;bptr&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;size&lt;/code&gt; 表示 &lt;code&gt;bptr&lt;/code&gt; 的长度。</target>
        </trans-unit>
        <trans-unit id="2c2b9ae45157401f1f534a908885aa62b51009e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;size&lt;/code&gt; is initialized to contain the length in bytes of the object, if it is found.</source>
          <target state="translated">&lt;code&gt;size&lt;/code&gt; 如果找到大小，则将size初始化为包含对象的字节长度。</target>
        </trans-unit>
        <trans-unit id="31762ea17d2530a6ffac822a5f27e2801ad03532" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;size&lt;/code&gt; is the approximate number of objects you intend to store in the registry. As the registry uses a hash table with collision chaining, no absolute upper limit exists on the number of objects that can be stored in it. However, for reasons of efficiency, it is a good idea to choose a number that is appropriate for your needs. To change the size later, use &lt;code&gt;ei_reg_resize()&lt;/code&gt;. Notice that the number you provide is increased to the nearest larger prime number.</source>
          <target state="translated">&lt;code&gt;size&lt;/code&gt; 是您打算在注册表中存储的对象的大概数量。由于注册表使用具有冲突链的哈希表，因此可以存储在其中的对象数量没有绝对上限。但是，出于效率的考虑，最好选择一个适合您需要的数字。要稍后更改大小，请使用 &lt;code&gt;ei_reg_resize()&lt;/code&gt; 。请注意，您提供的数字将增加到最接近的较大质数。</target>
        </trans-unit>
        <trans-unit id="f9883202ed6017270322badd6fb6bd39299529cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;size&lt;/code&gt; is the entire heap of the process when garbage collection is triggered. This includes all generational heaps, the process stack, any &lt;code&gt;&lt;a href=&quot;#process_flag_message_queue_data&quot;&gt;messages that are considered to be part of the heap&lt;/a&gt;&lt;/code&gt;, and any extra memory that the garbage collector needs during collection.</source>
          <target state="translated">&lt;code&gt;size&lt;/code&gt; 是触发垃圾回收时进程的整个堆。这包括所有世代堆，进程堆栈，任何 &lt;code&gt;&lt;a href=&quot;#process_flag_message_queue_data&quot;&gt;messages that are considered to be part of the heap&lt;/a&gt;&lt;/code&gt; 以及垃圾收集器在收集期间所需的任何额外内存。</target>
        </trans-unit>
        <trans-unit id="7429a08dbcf0809973be810f4bb7c48dd9917630" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;size&lt;/code&gt; is the length in bytes of the binary object.</source>
          <target state="translated">&lt;code&gt;size&lt;/code&gt; 是二进制对象的长度（以字节为单位）。</target>
        </trans-unit>
        <trans-unit id="41f6d7e3bce5c9b4edfc3954b162405fbbe52be0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;size&lt;/code&gt; is the number of terms in the array.</source>
          <target state="translated">&lt;code&gt;size&lt;/code&gt; 是数组中的术语数。</target>
        </trans-unit>
        <trans-unit id="0273a2f87f92b87933c0bbc16012b385a1fb5f2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;size&lt;/code&gt; is the same as can be retrieved using &lt;code&gt;&lt;a href=&quot;#process_info_total_heap_size&quot;&gt;erlang:process_info(Pid, total_heap_size)&lt;/a&gt;&lt;/code&gt;, or by adding &lt;code&gt;heap_block_size&lt;/code&gt;, &lt;code&gt;old_heap_block_size&lt;/code&gt; and &lt;code&gt;mbuf_size&lt;/code&gt; from &lt;code&gt;&lt;a href=&quot;#process_info_garbage_collection_info&quot;&gt;erlang:process_info(Pid, garbage_collection_info)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;size&lt;/code&gt; 与使用 &lt;code&gt;&lt;a href=&quot;#process_info_total_heap_size&quot;&gt;erlang:process_info(Pid, total_heap_size)&lt;/a&gt;&lt;/code&gt; 或通过从 &lt;code&gt;&lt;a href=&quot;#process_info_garbage_collection_info&quot;&gt;erlang:process_info(Pid, garbage_collection_info)&lt;/a&gt;&lt;/code&gt; 添加 &lt;code&gt;heap_block_size&lt;/code&gt; ， &lt;code&gt;old_heap_block_size&lt;/code&gt; 和 &lt;code&gt;mbuf_size&lt;/code&gt; 可以检索到的大小相同。</target>
        </trans-unit>
        <trans-unit id="cee8406491ef64241ba80f6785359265143b2037" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;size&lt;/code&gt;. Returns the number of records inserted in the table.</source>
          <target state="translated">&lt;code&gt;size&lt;/code&gt; 。返回插入表中的记录数。</target>
        </trans-unit>
        <trans-unit id="8ed40372feaa6a6025b87cd5a7f470caed37ea58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;slave&lt;/code&gt; manual page in STDLIB</source>
          <target state="translated">&lt;code&gt;slave&lt;/code&gt; STDLIB中的从属手册页</target>
        </trans-unit>
        <trans-unit id="a7f75d66aeedf5cb31543e8e6532fed127f50d81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmp&lt;/code&gt;. Each (set-based) Mnesia table can be automatically turned into a Simple Network Management Protocol (SNMP) ordered table as well. This property specifies the types of the SNMP keys.</source>
          <target state="translated">&lt;code&gt;snmp&lt;/code&gt; 。每个（基于集合的）Mnesia表也可以自动转换为简单网络管理协议（SNMP）排序的表。此属性指定SNMP密钥的类型。</target>
        </trans-unit>
        <trans-unit id="34276129b30a196d6d89752d2ffd300259a79ed7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmp&lt;/code&gt;. Returns the SNMP struct. &lt;code&gt;[]&lt;/code&gt; means that the table currently has no SNMP properties.</source>
          <target state="translated">&lt;code&gt;snmp&lt;/code&gt; 。返回SNMP结构。 &lt;code&gt;[]&lt;/code&gt; 表示该表当前没有SNMP属性。</target>
        </trans-unit>
        <trans-unit id="a3e53eb546a9efc1da910947e057d8e938d45308" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmpa_mib_storage_dets&lt;/code&gt;: &lt;code&gt;{dir, filename()} | {action, keep | clear}, {auto_save, default | pos_integer()} | {repair, force | boolean()}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;snmpa_mib_storage_dets&lt;/code&gt; ： &lt;code&gt;{dir, filename()} | {action, keep | clear}, {auto_save, default | pos_integer()} | {repair, force | boolean()}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3ce3e1ee0e647789b9adaff949357a3869ef8348" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmpa_mib_storage_ets&lt;/code&gt;: &lt;code&gt;{dir, filename()} | {action, keep | clear}, {checksum, boolean()}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;snmpa_mib_storage_ets&lt;/code&gt; ： &lt;code&gt;{dir, filename()} | {action, keep | clear}, {checksum, boolean()}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="565537ae8e8baac381d245049f24a119fd9ad973" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmpa_mib_storage_mnesia&lt;/code&gt;: &lt;code&gt;{action, keep | clear}, {nodes, [node()]}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;snmpa_mib_storage_mnesia&lt;/code&gt; ： &lt;code&gt;{action, keep | clear}, {nodes, [node()]}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0d39021fcc4803bee1addaec48011f9baed5f79b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;socket_opt()&lt;/code&gt; = See the options used by &lt;code&gt;gen_tcp(3)&lt;/code&gt;&lt;code&gt;gen_tcp(3)&lt;/code&gt; and &lt;code&gt;ssl(3)&lt;/code&gt; connect(s)</source>
          <target state="translated">&lt;code&gt;socket_opt()&lt;/code&gt; =请参阅 &lt;code&gt;gen_tcp(3)&lt;/code&gt; &lt;code&gt;gen_tcp(3)&lt;/code&gt; 和 &lt;code&gt;ssl(3)&lt;/code&gt; connect 使用的选项</target>
        </trans-unit>
        <trans-unit id="509d5d925dab1361294540137bf38125d3476251" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;socket_type()&lt;/code&gt; indicates whether it is an IP socket or an &lt;code&gt;ssl&lt;/code&gt; socket.</source>
          <target state="translated">&lt;code&gt;socket_type()&lt;/code&gt; 指示它是IP套接字还是 &lt;code&gt;ssl&lt;/code&gt; 套接字。</target>
        </trans-unit>
        <trans-unit id="125884dce5c139bfadf2215d850428fb7085d53e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sort(FileName)&lt;/code&gt; is equivalent to &lt;code&gt;sort([FileName], FileName)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;sort(FileName)&lt;/code&gt; 等效于 &lt;code&gt;sort([FileName], FileName)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3aa2d0eab807191fd373fc83b15fb7bf339bea37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sort(Input, Output)&lt;/code&gt; is equivalent to &lt;code&gt;sort(Input, Output, [])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;sort(Input, Output)&lt;/code&gt; 等效于 &lt;code&gt;sort(Input, Output, [])&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1799d21a78b95cf6c719e8ad3a80edb8dd681696" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sort(QH1)&lt;/code&gt; is equivalent to &lt;code&gt;sort(QH1, [])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;sort(QH1)&lt;/code&gt; 等同于 &lt;code&gt;sort(QH1, [])&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7aacbe7f45b65c249b35c82839eac366ce3d4ec6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;spawn&lt;/code&gt; creates a new process and returns the pid.</source>
          <target state="translated">&lt;code&gt;spawn&lt;/code&gt; 创建一个新进程并返回pid。</target>
        </trans-unit>
        <trans-unit id="3c0bde6fd6085ac2c36c668c5d8fe435e0b3687e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;spawn&lt;/code&gt; returns a &lt;strong&gt;process identifier&lt;/strong&gt;, or &lt;strong&gt;pid&lt;/strong&gt;, which uniquely identifies the process. So &amp;lt;0.63.0&amp;gt; is the pid of the &lt;code&gt;spawn&lt;/code&gt; function call above. The next example shows how to use pids.</source>
          <target state="translated">&lt;code&gt;spawn&lt;/code&gt; 返回一个&lt;strong&gt;进程标识符&lt;/strong&gt;或&lt;strong&gt;pid&lt;/strong&gt;，它唯一地标识该进程。因此&amp;lt;0.63.0&amp;gt;是上面的 &lt;code&gt;spawn&lt;/code&gt; 函数调用的pid 。下一个示例显示如何使用pid。</target>
        </trans-unit>
        <trans-unit id="f665b6085ee7aa3e793928a554073e5421907ef2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;specs&lt;/code&gt; - The total count of children, dead or alive.</source>
          <target state="translated">&lt;code&gt;specs&lt;/code&gt; -已死或活着的孩子总数。</target>
        </trans-unit>
        <trans-unit id="cb0f10a6be46a7d41dc675cd473dff341f4a9d3b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;split/3&lt;/code&gt; splits &lt;code&gt;String&lt;/code&gt; in &lt;code&gt;N&lt;/code&gt; chunks using &lt;code&gt;RegExp&lt;/code&gt;. &lt;code&gt;split/3&lt;/code&gt; is equivalent to &lt;code&gt;regexp:split/2&lt;/code&gt; with the exception that &lt;code&gt;N&lt;/code&gt; defines the maximum number of fields in &lt;code&gt;FieldList&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;split/3&lt;/code&gt; 使用 &lt;code&gt;RegExp&lt;/code&gt; 将 &lt;code&gt;String&lt;/code&gt; 拆分为 &lt;code&gt;N&lt;/code&gt; 个块。 &lt;code&gt;split/3&lt;/code&gt; 等效于 &lt;code&gt;regexp:split/2&lt;/code&gt; ，但 &lt;code&gt;N&lt;/code&gt; 定义了 &lt;code&gt;FieldList&lt;/code&gt; 中的最大字段数。</target>
        </trans-unit>
        <trans-unit id="f10629c86af3dc269235905ff42f7da40cc41716" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;split_path/1&lt;/code&gt; splits &lt;code&gt;RequestLine&lt;/code&gt; in a file reference (&lt;code&gt;Path&lt;/code&gt;), and a &lt;code&gt;QueryString&lt;/code&gt; or a &lt;code&gt;PathInfo&lt;/code&gt; string as specified in &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc2616.txt&quot;&gt;RFC 2616&lt;/a&gt;&lt;/code&gt;. A &lt;code&gt;QueryString&lt;/code&gt; is isolated from &lt;code&gt;Path&lt;/code&gt; with a question mark (&lt;code&gt;?&lt;/code&gt;) and &lt;code&gt;PathInfo&lt;/code&gt; with a slash (/). In the case of a &lt;code&gt;QueryString&lt;/code&gt;, everything before &lt;code&gt;?&lt;/code&gt; is a &lt;code&gt;Path&lt;/code&gt; and everything after &lt;code&gt;?&lt;/code&gt; is a &lt;code&gt;QueryString&lt;/code&gt;. In the case of a &lt;code&gt;PathInfo&lt;/code&gt;, &lt;code&gt;RequestLine&lt;/code&gt; is scanned from left-to-right on the hunt for longest possible &lt;code&gt;Path&lt;/code&gt; being a file or a directory. Everything after the longest possible &lt;code&gt;Path&lt;/code&gt;, isolated with a &lt;code&gt;/&lt;/code&gt;, is regarded as &lt;code&gt;PathInfo&lt;/code&gt;. The resulting &lt;code&gt;Path&lt;/code&gt; is decoded using &lt;code&gt;decode_hex/1&lt;/code&gt; before delivery.</source>
          <target state="translated">&lt;code&gt;split_path/1&lt;/code&gt; 拆分文件引用（ &lt;code&gt;Path&lt;/code&gt; ）中的 &lt;code&gt;RequestLine&lt;/code&gt; 以及 &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc2616.txt&quot;&gt;RFC 2616&lt;/a&gt;&lt;/code&gt; 中指定的 &lt;code&gt;QueryString&lt;/code&gt; 或 &lt;code&gt;PathInfo&lt;/code&gt; 字符串。甲 &lt;code&gt;QueryString&lt;/code&gt; 分离自 &lt;code&gt;Path&lt;/code&gt; 用问号（ &lt;code&gt;?&lt;/code&gt; ）和 &lt;code&gt;PathInfo&lt;/code&gt; 用斜线（/）。就 &lt;code&gt;QueryString&lt;/code&gt; 而言，之前的所有内容 &lt;code&gt;?&lt;/code&gt; 是 &lt;code&gt;Path&lt;/code&gt; ，之后的一切 &lt;code&gt;?&lt;/code&gt; 是 &lt;code&gt;QueryString&lt;/code&gt; 。如果是 &lt;code&gt;PathInfo&lt;/code&gt; ，则 &lt;code&gt;RequestLine&lt;/code&gt; 在搜寻中从左到右扫描，以获取最长的 &lt;code&gt;Path&lt;/code&gt; ，即文件或目录。最长 &lt;code&gt;Path&lt;/code&gt; 之后的所有内容（用 &lt;code&gt;/&lt;/code&gt; &lt;code&gt;PathInfo&lt;/code&gt; 都被视为PathInfo。在交付之前，使用 &lt;code&gt;decode_hex/1&lt;/code&gt; 对结果 &lt;code&gt;Path&lt;/code&gt; 进行解码。</target>
        </trans-unit>
        <trans-unit id="243ac817c483b29b7b069cc9232f2980089daf20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;split_script_path/1&lt;/code&gt; is equivalent to &lt;code&gt;split_path/1&lt;/code&gt; with one exception. If the longest possible path is not a regular, accessible, and executable file, then &lt;code&gt;not_a_script&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;split_script_path/1&lt;/code&gt; 等效于 &lt;code&gt;split_path/1&lt;/code&gt; ，但有一个例外。如果最长路径不是常规的，可访问的可执行文件，则返回 &lt;code&gt;not_a_script&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fba0b32b8dc6f9e05e9832e181bae787f873facb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;splitwith(P, L)&lt;/code&gt; splits the list &lt;code&gt;L&lt;/code&gt; into the two sublists &lt;code&gt;{L1, L2}&lt;/code&gt;, where &lt;code&gt;L = takewhile(P, L)&lt;/code&gt; and &lt;code&gt;L2 = dropwhile(P, L)&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;splitwith(P, L)&lt;/code&gt; 将列表 &lt;code&gt;L&lt;/code&gt; 分为两个子列表 &lt;code&gt;{L1, L2}&lt;/code&gt; ，其中 &lt;code&gt;L = takewhile(P, L)&lt;/code&gt; 和 &lt;code&gt;L2 = dropwhile(P, L)&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="7991df23ce2c21bcb2141e293c55476b3a3a731d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;spread&lt;/code&gt; - Schedulers are spread as much as possible.</source>
          <target state="translated">&lt;code&gt;spread&lt;/code&gt; -调度程序尽可能地传播。</target>
        </trans-unit>
        <trans-unit id="607cdd102d8cefb6d67db0029039660817230d17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;src&lt;/code&gt; - Optional. Contains the Erlang source code and internal include files used by the application itself. This directory is no longer required in a released application.</source>
          <target state="translated">&lt;code&gt;src&lt;/code&gt; -可选。包含Erlang源代码和应用程​​序本身使用的内部包含文件。在已发布的应用程序中不再需要此目录。</target>
        </trans-unit>
        <trans-unit id="e2829dd2ff2898f762ac503636aaba0d84ad07e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;src&lt;/code&gt; - Required. Contains the Erlang source code, the source of the &lt;code&gt;.app&lt;/code&gt; file and internal include files used by the application itself. Additional sub-directories within &lt;code&gt;src&lt;/code&gt; can be used as namespaces to organize source files. These directories should never be deeper than one level.</source>
          <target state="translated">&lt;code&gt;src&lt;/code&gt; -必需。包含Erlang源代码， &lt;code&gt;.app&lt;/code&gt; 文件的源以及应用程序本身使用的内部包含文件。 &lt;code&gt;src&lt;/code&gt; 中的其他子目录可用作组织源文件的名称空间。这些目录的深度不得超过一个级别。</target>
        </trans-unit>
        <trans-unit id="8e0853734a111ac32d152021a51344463e02d672" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ssh_host_dsa_key&lt;/code&gt; and &lt;code&gt;ssh_host_dsa_key.pub&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ssh_host_dsa_key&lt;/code&gt; 和 &lt;code&gt;ssh_host_dsa_key.pub&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="78bbd7eeb90e40a666a43bda69f48450bcec107a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ssh_host_ecdsa_key&lt;/code&gt; and &lt;code&gt;ssh_host_ecdsa_key.pub&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ssh_host_ecdsa_key&lt;/code&gt; 和 &lt;code&gt;ssh_host_ecdsa_key.pub&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ab92ea893e8df5dbbab7e621401907eb5ea41403" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ssh_host_rsa_key&lt;/code&gt; and &lt;code&gt;ssh_host_rsa_key.pub&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ssh_host_rsa_key&lt;/code&gt; 和 &lt;code&gt;ssh_host_rsa_key.pub&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="439d7c6b93be148551a89cd3fbe5ee9fcc06e4a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;standard.conf&lt;/code&gt;: see &lt;code&gt;&lt;a href=&quot;#system_information&quot;&gt;System Information&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;standard.conf&lt;/code&gt; ：请参阅 &lt;code&gt;&lt;a href=&quot;#system_information&quot;&gt;System Information&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2506feb97f08fc3787807d58fdcd08800b47a8cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;start&lt;/code&gt; defines the function call used to start the child process. It is a module-function-arguments tuple used as &lt;code&gt;apply(M, F, A)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;start&lt;/code&gt; 定义用于启动子进程的函数调用。它是用作 &lt;code&gt;apply(M, F, A)&lt;/code&gt; 的模块功能参数元组。</target>
        </trans-unit>
        <trans-unit id="1e89edde81ac033d234b9af05716eb9b5a7fd9fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;start&lt;/code&gt; defines the function call used to start the child process. It must be a module-function-arguments tuple &lt;code&gt;{M,F,A}&lt;/code&gt; used as &lt;code&gt;apply(M,F,A)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;start&lt;/code&gt; 定义用于启动子进程的函数调用。它必须是用作 &lt;code&gt;apply(M,F,A)&lt;/code&gt; 的模块功能参数元组 &lt;code&gt;{M,F,A}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="35252648d8669b75501956b567fce0242a698b68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;start&lt;/code&gt; is called when starting the application and is to create the supervision tree by starting the top supervisor. It is expected to return the pid of the top supervisor and an optional term, &lt;code&gt;State&lt;/code&gt;, which defaults to &lt;code&gt;[]&lt;/code&gt;. This term is passed as is to &lt;code&gt;stop&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;start&lt;/code&gt; 应用程序时会调用start，它是通过启动最高主管来创建监管树的。期望返回最高主管的pid和一个可选项 &lt;code&gt;State&lt;/code&gt; ，默认为 &lt;code&gt;[]&lt;/code&gt; 。这个术语是原样传递到 &lt;code&gt;stop&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4a19ed5e0f59c508f5cb3c6869f75fc2329c0c45" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;start_clean.boot&lt;/code&gt; - Loads the code for and starts the applications Kernel and STDLIB.</source>
          <target state="translated">&lt;code&gt;start_clean.boot&lt;/code&gt; -加载代码并启动应用程序内核和STDLIB。</target>
        </trans-unit>
        <trans-unit id="3dde2b9853406448644292076fe10f5813f6d27f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;start_erl&lt;/code&gt; also assumes that there is &lt;code&gt;sys.config&lt;/code&gt; in the release version directory (&lt;code&gt;&quot;releases/FIRST/sys.config&quot;&lt;/code&gt;). That is the topic of the next section.</source>
          <target state="translated">&lt;code&gt;start_erl&lt;/code&gt; 还假定有 &lt;code&gt;sys.config&lt;/code&gt; 在发布版本目录（ &lt;code&gt;&quot;releases/FIRST/sys.config&quot;&lt;/code&gt; ）。这是下一节的主题。</target>
        </trans-unit>
        <trans-unit id="69fb79270b65287444a8ab1285191d490453d1da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;start_erl&lt;/code&gt; requires:</source>
          <target state="translated">&lt;code&gt;start_erl&lt;/code&gt; 要求：</target>
        </trans-unit>
        <trans-unit id="4191a0c3ab40e3daafa908b418808d86ab9c0b4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;start_link&lt;/code&gt; calls function &lt;code&gt;gen_server:start_link/4&lt;/code&gt;. This function spawns and links to a new process, a &lt;code&gt;gen_server&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;start_link&lt;/code&gt; 调用 &lt;code&gt;gen_server:start_link/4&lt;/code&gt; 函数。该函数产生并链接到新进程 &lt;code&gt;gen_server&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d1a11af853b7d89610a9879c8b6ed9b282c31fb6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;start_link&lt;/code&gt; calls function &lt;code&gt;gen_statem:start_link/4&lt;/code&gt;, which spawns and links to a new process, a &lt;code&gt;gen_statem&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;start_link&lt;/code&gt; 调用 &lt;code&gt;gen_statem:start_link/4&lt;/code&gt; 函数，该函数生成并链接到新进程 &lt;code&gt;gen_statem&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="43363140a8bc840761fe776e0e8a57f9becdc28e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;start_sasl.boot&lt;/code&gt; - Loads the code for and starts the applications Kernel, STDLIB, and SASL).</source>
          <target state="translated">&lt;code&gt;start_sasl.boot&lt;/code&gt; -加载代码并启动应用程序内核，STDLIB和SASL）。</target>
        </trans-unit>
        <trans-unit id="3dfeb9d1847183693617efb03a1351fa92500350" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;state&lt;/code&gt; can have the following values:</source>
          <target state="translated">&lt;code&gt;state&lt;/code&gt; 可以具有以下值：</target>
        </trans-unit>
        <trans-unit id="3b458cc47e61e9c6d04d62d041602f53f3b1fe52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;statistics(exact_reductions)&lt;/code&gt; is a more expensive operation than &lt;code&gt;&lt;a href=&quot;#statistics_reductions&quot;&gt;statistics(reductions)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;statistics(exact_reductions)&lt;/code&gt; 比 &lt;code&gt;&lt;a href=&quot;#statistics_reductions&quot;&gt;statistics(reductions)&lt;/a&gt;&lt;/code&gt; 开销更大。</target>
        </trans-unit>
        <trans-unit id="019d8783135ccd9ba68bec281036a7adc2887fce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;statistics(microstate_accounting)&lt;/code&gt; returns a list of maps representing some of the OS threads within ERTS. Each map contains &lt;code&gt;type&lt;/code&gt; and &lt;code&gt;id&lt;/code&gt; fields that can be used to identify what thread it is, and also a counters field that contains data about how much time has been spent in the various states.</source>
          <target state="translated">&lt;code&gt;statistics(microstate_accounting)&lt;/code&gt; 返回表示ERTS中某些OS线程的映射列表。每个映射都包含可用于标识线程是什么的 &lt;code&gt;type&lt;/code&gt; 和 &lt;code&gt;id&lt;/code&gt; 字段，还包含一个counter字段，其中包含有关在各种状态下花费了多少时间的数据。</target>
        </trans-unit>
        <trans-unit id="00c3285384a8ed6b0e4fad2229108e7c4bde8d14" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;statistics/1&lt;/code&gt; with argument &lt;code&gt;runtime&lt;/code&gt; measures CPU time spent in the Erlang virtual machine. The advantage with CPU time is that the results are more consistent from run to run. The disadvantage is that the time spent in the operating system kernel (such as swapping and I/O) is not included. Therefore, measuring CPU time is misleading if any I/O (file or socket) is involved.</source>
          <target state="translated">&lt;code&gt;statistics/1&lt;/code&gt; 带参数 &lt;code&gt;runtime&lt;/code&gt; statistics / 1衡量在Erlang虚拟机中花费的CPU时间。CPU时间的优点是每次运行的结果更加一致。缺点是不包括在操作系统内核中花费的时间（例如交换和I / O）。因此，如果涉及任何I / O（文件或套接字），则测量CPU时间会产生误导。</target>
        </trans-unit>
        <trans-unit id="7678d708dd11785cfac1ed18d9669be48be7c661" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;stop/1&lt;/code&gt; is called &lt;strong&gt;after&lt;/strong&gt; the application has been stopped and is to do any necessary cleaning up. The actual stopping of the application, that is, the shutdown of the supervision tree, is handled automatically as described in &lt;code&gt;&lt;a href=&quot;#stopping&quot;&gt;Starting and Stopping Applications&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;stop/1&lt;/code&gt; 在应用程序停止&lt;strong&gt;后将&lt;/strong&gt;调用stop / 1，并进行必要的清理。如 &lt;code&gt;&lt;a href=&quot;#stopping&quot;&gt;Starting and Stopping Applications&lt;/a&gt;&lt;/code&gt; 所述，将自动处理应用程序的实际停止，即关闭监视树。</target>
        </trans-unit>
        <trans-unit id="4ae01a0d4df52cd6a396e8d1a5dda99507c7d96d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;storage_type&lt;/code&gt;. Returns the local storage type of the table. It can be &lt;code&gt;disc_copies&lt;/code&gt;, &lt;code&gt;ram_copies&lt;/code&gt;, &lt;code&gt;disc_only_copies&lt;/code&gt;, or the atom &lt;code&gt;unknown&lt;/code&gt;. &lt;code&gt;unknown&lt;/code&gt; is returned for all tables that only reside remotely.</source>
          <target state="translated">&lt;code&gt;storage_type&lt;/code&gt; 。返回表的本地存储类型。它可以是 &lt;code&gt;disc_copies&lt;/code&gt; ， &lt;code&gt;ram_copies&lt;/code&gt; ， &lt;code&gt;disc_only_copies&lt;/code&gt; 或 &lt;code&gt;unknown&lt;/code&gt; 原子。对于仅远程驻留的所有表，返回 &lt;code&gt;unknown&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="617e6a978094968e10a5f7fc9334eb0d1e7e0df7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;strategy&lt;/code&gt; specifies the &lt;code&gt;&lt;a href=&quot;#strategy&quot;&gt;restart strategy&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;strategy&lt;/code&gt; 指定 &lt;code&gt;&lt;a href=&quot;#strategy&quot;&gt;restart strategy&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="979af2982a1f83fdce37c6f9589b4879d42c0c90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;stream&lt;/code&gt; indicates where the function is to send its output.</source>
          <target state="translated">&lt;code&gt;stream&lt;/code&gt; 指示函数将其输出发送到的位置。</target>
        </trans-unit>
        <trans-unit id="2d562db6f33bb9eb6da6e6ebda53139e63607b34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string()&lt;/code&gt; = list of ASCII characters</source>
          <target state="translated">&lt;code&gt;string()&lt;/code&gt; = ASCII字符列表</target>
        </trans-unit>
        <trans-unit id="0e92b14680ea9fea5b373b2dc3f7248947c4c1ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string()&lt;/code&gt;: A &lt;code&gt;Request-URI&lt;/code&gt; as described in &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc2616.txt&quot;&gt;RFC 2616&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;string()&lt;/code&gt; ：如 &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc2616.txt&quot;&gt;RFC 2616&lt;/a&gt;&lt;/code&gt; 中所述的 &lt;code&gt;Request-URI&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7b47a0b2213c3183aeec65e31bc4b31e6339de8b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string()&lt;/code&gt;: A URL pointing at the new document position.</source>
          <target state="translated">&lt;code&gt;string()&lt;/code&gt; ：指向新文档位置的URL。</target>
        </trans-unit>
        <trans-unit id="87b155a297b77961a30cb7943365871e8ddf39bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string()&lt;/code&gt;: A string describing why the service was unavailable.</source>
          <target state="translated">&lt;code&gt;string()&lt;/code&gt; ：一个字符串，描述为什么服务不可用。</target>
        </trans-unit>
        <trans-unit id="0401c3eac3cc2573f6485455cd8b851ee2bc2102" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string(String)&lt;/code&gt; is equivalent to &lt;code&gt;string(String, 1)&lt;/code&gt;, and &lt;code&gt;string(String, StartLocation)&lt;/code&gt; is equivalent to &lt;code&gt;string(String, StartLocation, [])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;string(String)&lt;/code&gt; 等效于 &lt;code&gt;string(String, 1)&lt;/code&gt; ，而 &lt;code&gt;string(String, StartLocation)&lt;/code&gt; 等效于 &lt;code&gt;string(String, StartLocation, [])&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="829a7b9e7a070c8eedbe9faf460e1206c04103e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt; is a &lt;code&gt;NULL&lt;/code&gt;-terminated sequence of characters (that is, a C string) from which the list will be created.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; 是一个以 &lt;code&gt;NULL&lt;/code&gt; 终止的字符序列（即C字符串），将从中创建列表。</target>
        </trans-unit>
        <trans-unit id="d03b30e20ea1057a49ab478dbea5f53d595df7f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt; is a buffer containing a sequence of bytes. The buffer does not need to be &lt;code&gt;NULL&lt;/code&gt;-terminated.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; 是包含字节序列的缓冲区。缓冲区不需要以 &lt;code&gt;NULL&lt;/code&gt; 结尾。</target>
        </trans-unit>
        <trans-unit id="5e9b47b52b5189b16db8322be0aa18e9de13e1bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt; is the sequence of characters that will be used to create the atom.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; 是将用于创建原子的字符序列。</target>
        </trans-unit>
        <trans-unit id="6b57290f7648798494a58fa3f5ad151fa956b03e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string_to_handle(QueryString)&lt;/code&gt; is equivalent to &lt;code&gt;string_to_handle(QueryString, [])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;string_to_handle(QueryString)&lt;/code&gt; 等效于 &lt;code&gt;string_to_handle(QueryString, [])&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2c4392ea3ebcf53d0b651f744627722a0ea70099" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string_to_handle(QueryString, Options)&lt;/code&gt; is equivalent to &lt;code&gt;string_to_handle(QueryString, Options, erl_eval:new_bindings())&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;string_to_handle(QueryString, Options)&lt;/code&gt; 等效于 &lt;code&gt;string_to_handle(QueryString, Options, erl_eval:new_bindings())&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="76cb6b2cad6ff288638a402f533d017bc05a8c4d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;strings&lt;/code&gt; is set to &lt;code&gt;false&lt;/code&gt; if modifier &lt;code&gt;l&lt;/code&gt; is present.</source>
          <target state="translated">&lt;code&gt;strings&lt;/code&gt; 如果存在修饰符 &lt;code&gt;l&lt;/code&gt; ,则将string设置为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cbbab772bcf66672a3f9fd53febd99f1d9336144" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;strip/1&lt;/code&gt; removes any leading or trailing linear white space from the string. Linear white space is to be read as horizontal tab or space.</source>
          <target state="translated">&lt;code&gt;strip/1&lt;/code&gt; 从字符串中删除任何前导或尾随的线性空格。线性空格将被读取为水平制表符或空格。</target>
        </trans-unit>
        <trans-unit id="74e7941fca29115b2e0026a22ec1897cd3510461" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;struct hostent *ei_gethostbyaddr(const char *addr, int len, int type)&lt;/code&gt;&lt;code&gt;struct hostent *ei_gethostbyaddr_r(const char *addr, int length, int type, struct hostent *hostp, char *buffer, int buflen, int *h_errnop)&lt;/code&gt;&lt;code&gt;struct hostent *ei_gethostbyname(const char *name)&lt;/code&gt;&lt;code&gt;struct hostent *ei_gethostbyname_r(const char *name, struct hostent *hostp, char *buffer, int buflen, int *h_errnop)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;struct hostent *ei_gethostbyaddr(const char *addr, int len, int type)&lt;/code&gt; &lt;code&gt;struct hostent *ei_gethostbyaddr_r(const char *addr, int length, int type, struct hostent *hostp, char *buffer, int buflen, int *h_errnop)&lt;/code&gt; &lt;code&gt;struct hostent *ei_gethostbyname(const char *name)&lt;/code&gt; &lt;code&gt;struct hostent *ei_gethostbyname_r(const char *name, struct hostent *hostp, char *buffer, int buflen, int *h_errnop)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1409d6497c88ef60b280850499bdc9c218838121" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;struct hostent *erl_gethostbyaddr(addr, length, type)&lt;/code&gt;&lt;code&gt;struct hostent *erl_gethostbyaddr_r(addr, length, type, hostp, buffer, buflen, h_errnop)&lt;/code&gt;&lt;code&gt;struct hostent *erl_gethostbyname(name)&lt;/code&gt;&lt;code&gt;struct hostent *erl_gethostbyname_r(name, hostp, buffer, buflen, h_errnop)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;struct hostent *erl_gethostbyaddr(addr, length, type)&lt;/code&gt; &lt;code&gt;struct hostent *erl_gethostbyaddr_r(addr, length, type, hostp, buffer, buflen, h_errnop)&lt;/code&gt; &lt;code&gt;struct hostent *erl_gethostbyname(name)&lt;/code&gt; &lt;code&gt;struct hostent *erl_gethostbyname_r(name, hostp, buffer, buflen, h_errnop)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ddbbd8e762f6eb9ca0fb39b8f90973ab856b7681" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;stylesheet&lt;/code&gt;, see &lt;code&gt;&lt;a href=&quot;run_test_chapter#html_stylesheet&quot;&gt;HTML Style Sheets&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;stylesheet&lt;/code&gt; ，请参见 &lt;code&gt;&lt;a href=&quot;run_test_chapter#html_stylesheet&quot;&gt;HTML Style Sheets&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9101985c9c9e6805623d24ca6be2fc9c755232a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;subgraph(Digraph, Vertices)&lt;/code&gt; is equivalent to &lt;code&gt;subgraph(Digraph, Vertices, [])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;subgraph(Digraph, Vertices)&lt;/code&gt; 等同于 &lt;code&gt;subgraph(Digraph, Vertices, [])&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5ee4cf26515151aee37ffc9071c858cd3b6cfd78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;subscribers&lt;/code&gt;. Returns a list of local processes currently subscribing to local table events that involve this table on this node.</source>
          <target state="translated">&lt;code&gt;subscribers&lt;/code&gt; 。返回当前订阅该节点上涉及此表的本地表事件的本地进程的列表。</target>
        </trans-unit>
        <trans-unit id="d465c420098d5c04a06637730255e8f58c196a7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;subscribers&lt;/code&gt;. Returns a list of local processes currently subscribing to system events.</source>
          <target state="translated">&lt;code&gt;subscribers&lt;/code&gt; 。返回当前订阅系统事件的本地进程的列表。</target>
        </trans-unit>
        <trans-unit id="58eaa436722697bb4b76ecdc62fd661d7e29c9f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;suffix/1&lt;/code&gt; is equivalent to &lt;code&gt;filename:extension/1&lt;/code&gt; with the exception that &lt;code&gt;Suffix&lt;/code&gt; is returned without a leading dot (&lt;code&gt;.&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;suffix/1&lt;/code&gt; 等效于 &lt;code&gt;filename:extension/1&lt;/code&gt; ，不同之处在于返回的 &lt;code&gt;Suffix&lt;/code&gt; 不带前导点（ &lt;code&gt;.&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="33ac829a0b942b7ab697b4c75739d01b6c485a38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sunrm&lt;/code&gt; - Sun's RPC encoding</source>
          <target state="translated">&lt;code&gt;sunrm&lt;/code&gt; -Sun的RPC编码</target>
        </trans-unit>
        <trans-unit id="385e46d3cdae470f061ce351f93fa76f5f98d53a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;supervisor:start_link&lt;/code&gt; is synchronous. It does not return until all child processes have been started.</source>
          <target state="translated">&lt;code&gt;supervisor:start_link&lt;/code&gt; 是同步的。在所有子进程都已启动之前，它不会返回。</target>
        </trans-unit>
        <trans-unit id="c1371430e2bfeb55d07934cd8e7f7006c3d014b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;supervisors&lt;/code&gt; - The count of all children marked as &lt;code&gt;child_type = supervisor&lt;/code&gt; in the specification list, regardless if the child process is still alive.</source>
          <target state="translated">&lt;code&gt;supervisors&lt;/code&gt; - 规范列表中标记为 &lt;code&gt;child_type = supervisor&lt;/code&gt; 的所有子进程的计数，无论该子进程是否仍在运行。</target>
        </trans-unit>
        <trans-unit id="74f63f16e6444059fb284c802ba43aacc6c2805a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;suspended&lt;/code&gt; (suspended on a &quot;busy&quot; port or by the BIF &lt;code&gt;erlang:suspend_process/1,2&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;suspended&lt;/code&gt; （通过&amp;ldquo;繁忙&amp;rdquo;端口或BIF &lt;code&gt;erlang:suspend_process/1,2&lt;/code&gt; 暂停）</target>
        </trans-unit>
        <trans-unit id="8fcbdcec09d43370398600cd05606094a9113ff8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sync_nodes_mandatory = [Node]&lt;/code&gt; - Specifies which other nodes must be started (within the time-out specified by &lt;code&gt;sync_nodes_timeout&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;sync_nodes_mandatory = [Node]&lt;/code&gt; -指定必须启动哪些其他节点（在 &lt;code&gt;sync_nodes_timeout&lt;/code&gt; 指定的超时内）。</target>
        </trans-unit>
        <trans-unit id="3ead4131afb9d2c0902c3784d8e8cb2caccdc953" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sync_nodes_optional = [Node]&lt;/code&gt; - Specifies which other nodes can be started (within the time-out specified by &lt;code&gt;sync_nodes_timeout&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;sync_nodes_optional = [Node]&lt;/code&gt; -指定可以启动哪些其他节点（在 &lt;code&gt;sync_nodes_timeout&lt;/code&gt; 指定的超时内）。</target>
        </trans-unit>
        <trans-unit id="926a5205a8f3357b54597d3a5903fd2cf3520a75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sync_nodes_timeout = integer() | infinity&lt;/code&gt; - Specifies how many milliseconds to wait for the other nodes to start.</source>
          <target state="translated">&lt;code&gt;sync_nodes_timeout = integer() | infinity&lt;/code&gt; -指定等待其他节点启动的毫秒数。</target>
        </trans-unit>
        <trans-unit id="331a90ce47d0f3f19fd4260f5da31347814d7050" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sys:debug_options/1&lt;/code&gt; takes a list of options as argument. Here the list is empty, which means no debugging is enabled initially. For information about the possible options, see the &lt;code&gt;sys(3)&lt;/code&gt; manual page in STDLIB.</source>
          <target state="translated">&lt;code&gt;sys:debug_options/1&lt;/code&gt; 将选项列表作为参数。在此列表为空，这意味着最初没有启用调试。有关可能选项的信息，请参见STDLIB中的 &lt;code&gt;sys(3)&lt;/code&gt; 手册页。</target>
        </trans-unit>
        <trans-unit id="7df14368372b3646bb181f1597ffba0ecce36e2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sys_alloc&lt;/code&gt; cannot be disabled.</source>
          <target state="translated">&lt;code&gt;sys_alloc&lt;/code&gt; 无法禁用。</target>
        </trans-unit>
        <trans-unit id="1bad1d55ed92f2d7503c091b271286408ed77f87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sys_alloc&lt;/code&gt; carrier size. Carriers allocated through &lt;code&gt;sys_alloc&lt;/code&gt; are allocated in sizes that are multiples of the &lt;code&gt;sys_alloc&lt;/code&gt; carrier size. This is not true for main multiblock carriers and carriers allocated during a memory shortage, though.</source>
          <target state="translated">&lt;code&gt;sys_alloc&lt;/code&gt; 载体大小。通过 &lt;code&gt;sys_alloc&lt;/code&gt; 分配的载波的大小是 &lt;code&gt;sys_alloc&lt;/code&gt; 载波大小的倍数。但是，对于主多块载波和在内存不足期间分配的载波，情况并非如此。</target>
        </trans-unit>
        <trans-unit id="0696131f99ac521df2e4ee480eb796e727704385" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sys_alloc&lt;/code&gt;, &lt;code&gt;literal_alloc&lt;/code&gt; and &lt;code&gt;temp_alloc&lt;/code&gt; are always enabled and cannot be disabled. &lt;code&gt;exec_alloc&lt;/code&gt; is only available if it is needed and cannot be disabled. &lt;code&gt;mseg_alloc&lt;/code&gt; is always enabled if it is available and an allocator that uses it is enabled. All other allocators can be &lt;code&gt;&lt;a href=&quot;#M_e&quot;&gt;enabled or disabled&lt;/a&gt;&lt;/code&gt;. By default all allocators are enabled. When an allocator is disabled, &lt;code&gt;sys_alloc&lt;/code&gt; is used instead of the disabled allocator.</source>
          <target state="translated">&lt;code&gt;sys_alloc&lt;/code&gt; ， &lt;code&gt;literal_alloc&lt;/code&gt; 和 &lt;code&gt;temp_alloc&lt;/code&gt; 始终处于启用状态，并且不能被禁用。 &lt;code&gt;exec_alloc&lt;/code&gt; 仅在需要时可用，不能禁用。如果可用，并且启用了使用它的分配器，则始终启用 &lt;code&gt;mseg_alloc&lt;/code&gt; 。所有其他分配器都可以 &lt;code&gt;&lt;a href=&quot;#M_e&quot;&gt;enabled or disabled&lt;/a&gt;&lt;/code&gt; 。默认情况下，所有分配器都是启用的。禁用分配器后，将使用 &lt;code&gt;sys_alloc&lt;/code&gt; 代替禁用的分配器。</target>
        </trans-unit>
        <trans-unit id="fc3a0a960790f719d64fa929942a9d6fbc2c76fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;syslogd(1M)&lt;/code&gt;, &lt;code&gt;syslog.conf(4)&lt;/code&gt; in the Solaris documentation.</source>
          <target state="translated">&lt;code&gt;syslogd(1M)&lt;/code&gt; Solaris文档中的syslogd（1M）， &lt;code&gt;syslog.conf(4)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="88e456495a94fa4b0312e9cb80dbba7fca42938e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;system_limit&lt;/code&gt;. A system limit was exhausted.</source>
          <target state="translated">&lt;code&gt;system_limit&lt;/code&gt; 。系统限制已用尽。</target>
        </trans-unit>
        <trans-unit id="dfba8c97e55470a41ba2f91206458c0f02c7a04e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;systools&lt;/code&gt; in the SASL application includes tools to build and check releases. The functions read the &lt;code&gt;rel&lt;/code&gt; and &lt;code&gt;.app&lt;/code&gt; files and performs syntax and dependency checks. The &lt;code&gt;systools:make_script/1,2&lt;/code&gt; function is used to generate a boot script (see System Principles):</source>
          <target state="translated">&lt;code&gt;systools&lt;/code&gt; SASL应用程序中的systools包含用于构建和检查发行版的工具。该函数读取 &lt;code&gt;rel&lt;/code&gt; 和 &lt;code&gt;.app&lt;/code&gt; 文件，并执行语法和依赖关系检查。的 &lt;code&gt;systools:make_script/1,2&lt;/code&gt; 函数用于生成引导脚本（参见系统原理）：</target>
        </trans-unit>
        <trans-unit id="23147a1c9e546954a9e2262475563a1f7464f139" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;table/1&lt;/code&gt; and &lt;code&gt;table/2&lt;/code&gt; are provided as synonyms to resemble the &lt;code&gt;&lt;a href=&quot;erl_tar&quot;&gt;erl_tar&lt;/a&gt;&lt;/code&gt; module.</source>
          <target state="translated">&lt;code&gt;table/1&lt;/code&gt; 和 &lt;code&gt;table/2&lt;/code&gt; 作为同义词，类似于 &lt;code&gt;&lt;a href=&quot;erl_tar&quot;&gt;erl_tar&lt;/a&gt;&lt;/code&gt; 模块。</target>
        </trans-unit>
        <trans-unit id="1dd27b918c10e80696b0e7f929f3871afe8e42d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tables&lt;/code&gt;. Returns a list of all locally known tables.</source>
          <target state="translated">&lt;code&gt;tables&lt;/code&gt; 。返回所有本地已知表的列表。</target>
        </trans-unit>
        <trans-unit id="f13557d0891f440343c770a7f38974aa7b18d43a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tail&lt;/code&gt; is the existing list to which &lt;code&gt;head&lt;/code&gt; is concatenated.</source>
          <target state="translated">&lt;code&gt;tail&lt;/code&gt; 是将 &lt;code&gt;head&lt;/code&gt; 连接到的现有列表。</target>
        </trans-unit>
        <trans-unit id="a94c21835d4f0bd9bbda995e194228662b999155" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;takewhile(P, L)&lt;/code&gt; takes elements &lt;code&gt;X&lt;/code&gt; from a list &lt;code&gt;L&lt;/code&gt; as long as the predicate &lt;code&gt;P(X)&lt;/code&gt; is true:</source>
          <target state="translated">&lt;code&gt;takewhile(P, L)&lt;/code&gt; 只要谓词 &lt;code&gt;P(X)&lt;/code&gt; 为true ，takewhile（P，L）就从列表 &lt;code&gt;L&lt;/code&gt; 中获取元素 &lt;code&gt;X&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="9a85923e1723850515635d311eca20ada2896679" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;target_addr.conf&lt;/code&gt;: see &lt;code&gt;&lt;a href=&quot;#target_addr&quot;&gt;Target Address Definitions&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;target_addr.conf&lt;/code&gt; ：请参阅 &lt;code&gt;&lt;a href=&quot;#target_addr&quot;&gt;Target Address Definitions&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7997915870dd0118bf387166df53805fa2ca2cc1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;target_addr_entry/6&lt;/code&gt; translates to the following call: &lt;code&gt;target_addr_entry(Name, Domain, Addr, TagList, ParamsName, EngineId, [])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;target_addr_entry/6&lt;/code&gt; 转换为以下调用： &lt;code&gt;target_addr_entry(Name, Domain, Addr, TagList, ParamsName, EngineId, [])&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="761e8d37fef36675838e1075ac7246df0b0f9388" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;target_addr_entry/7&lt;/code&gt; translates to the following call: &lt;code&gt;target_addr_entry(Name, Domain, Addr, TagList, ParamsName, EngineId, TMask, 2048)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;target_addr_entry/7&lt;/code&gt; 转换为以下调用： &lt;code&gt;target_addr_entry(Name, Domain, Addr, TagList, ParamsName, EngineId, TMask, 2048)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4e6e4c8cb706ad261a80f5a06b8717a40135dad7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;target_addr_entry/8&lt;/code&gt; translates to the following call: &lt;code&gt;target_addr_entry(Name, Domain, Addr, 1500, 3, TagList, ParamsName, EngineId, TMask, MaxMessageSize)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;target_addr_entry/8&lt;/code&gt; 转换为以下调用： &lt;code&gt;target_addr_entry(Name, Domain, Addr, 1500, 3, TagList, ParamsName, EngineId, TMask, MaxMessageSize)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4c55935fc69d786c8e3110e7878f71876b4872eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;target_params.conf&lt;/code&gt;: see &lt;code&gt;&lt;a href=&quot;#target_params&quot;&gt;Target Parameters Definitions&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;target_params.conf&lt;/code&gt; ：请参阅 &lt;code&gt;&lt;a href=&quot;#target_params&quot;&gt;Target Parameters Definitions&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2e39f6deef95253e516a543858b9c16007f0381a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;target_params_entry/2&lt;/code&gt; translates to the following call: &lt;code&gt;target_params_entry(Name, Vsn, &quot;initial&quot;, noAuthNoPriv)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;target_params_entry/2&lt;/code&gt; 转换为以下调用： &lt;code&gt;target_params_entry(Name, Vsn, &quot;initial&quot;, noAuthNoPriv)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="92f3d69a48c6de5392426a354488ccecb4f36151" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;target_params_entry/4&lt;/code&gt; translates to the following call: &lt;code&gt;target_params_entry(Name, MPModel, SecModel, SecName, SecLevel)&lt;/code&gt; where &lt;code&gt;MPModel&lt;/code&gt; and &lt;code&gt;SecModel&lt;/code&gt; is mapped from &lt;code&gt;Vsn&lt;/code&gt;, see above.</source>
          <target state="translated">&lt;code&gt;target_params_entry/4&lt;/code&gt; 转换为以下调用： &lt;code&gt;target_params_entry(Name, MPModel, SecModel, SecName, SecLevel)&lt;/code&gt; 其中 &lt;code&gt;MPModel&lt;/code&gt; 和 &lt;code&gt;SecModel&lt;/code&gt; 是从 &lt;code&gt;Vsn&lt;/code&gt; 映射的，请参见上文。</target>
        </trans-unit>
        <trans-unit id="c65d3504ff6277748a0fcad3381c26b8114325d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;template(E) -&amp;gt; built_in_rules(fun template/1, E)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;template(E) -&amp;gt; built_in_rules(fun template/1, E)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7e29e765113c02fdf4d9903a9db73ab2e862a5dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;temporary node down&lt;/code&gt;. When a node temporarily goes down, it can be time to compensate some fragments with new replicas to keep the desired level of redundancy. When the node comes up again, it can be time to remove the superfluous replica.</source>
          <target state="translated">&lt;code&gt;temporary node down&lt;/code&gt; 。当节点暂时关闭时，可能是时候用新副本补偿某些片段以保持所需的冗余级别了。当节点再次出现时，可能是时候删除多余的副本了。</target>
        </trans-unit>
        <trans-unit id="7889715c1022d3782a9571f294f6bb3d540d2dd7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;term&lt;/code&gt; is an Erlang term to be encoded.</source>
          <target state="translated">&lt;code&gt;term&lt;/code&gt; 是要编码的Erlang术语。</target>
        </trans-unit>
        <trans-unit id="320d2cf3996f3516930b74a7da91a4cf64551e4d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;term&lt;/code&gt; is an Erlang term. In order for this function to succeed, &lt;code&gt;term&lt;/code&gt; must either be an Erlang variable with the specified name, or it must be an Erlang list or tuple containing a variable with the specified name. Other Erlang types cannot contain variables.</source>
          <target state="translated">&lt;code&gt;term&lt;/code&gt; 是一个Erlang术语。为了使此功能成功， &lt;code&gt;term&lt;/code&gt; 必须是具有指定名称的Erlang变量，或者必须是包含具有指定名称的变量的Erlang列表或元组。其他Erlang类型不能包含变量。</target>
        </trans-unit>
        <trans-unit id="71b560066787dccab3467776d120605cf8423724" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;term&lt;/code&gt; is an Erlang tuple or an Erlang binary object.</source>
          <target state="translated">&lt;code&gt;term&lt;/code&gt; 是Erlang元组或Erlang二进制对象。</target>
        </trans-unit>
        <trans-unit id="4a937529f98cda88d3558d1902ed4ee55409000e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;term&lt;/code&gt; is the Erlang term to print.</source>
          <target state="translated">&lt;code&gt;term&lt;/code&gt; 是要打印的Erlang术语。</target>
        </trans-unit>
        <trans-unit id="4d16ca4ce0d4f52adac2af1b6b617d6a2f52d428" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;test/1&lt;/code&gt; iterates over all types in &lt;code&gt;Module&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;test/1&lt;/code&gt; 遍历 &lt;code&gt;Module&lt;/code&gt; 中的所有类型。</target>
        </trans-unit>
        <trans-unit id="df87fd3cf67832c938bd2d08b138f9541ee87898" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;test/2&lt;/code&gt; tests type &lt;code&gt;Type&lt;/code&gt; with a random value.</source>
          <target state="translated">&lt;code&gt;test/2&lt;/code&gt; 测试 &lt;code&gt;Type&lt;/code&gt; 带有随机值的类型。</target>
        </trans-unit>
        <trans-unit id="80e0809ce9f9b9bd8a8f05ea230004a467758fbc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;test/3&lt;/code&gt; tests type &lt;code&gt;Type&lt;/code&gt; with &lt;code&gt;Value&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;test/3&lt;/code&gt; 测试类型 &lt;code&gt;Type&lt;/code&gt; 与 &lt;code&gt;Value&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="268007540d07f6072d6797eb2ac02f334f5e5063" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;test&lt;/code&gt; - Recommended. All files regarding tests, such as test suites and test specifications, should be placed here.</source>
          <target state="translated">&lt;code&gt;test&lt;/code&gt; -推荐。有关测试的所有文件，例如测试套件和测试规范，都应放在此处。</target>
        </trans-unit>
        <trans-unit id="ca90e153269c39e9983c8fc84e6edce4aeb819f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;text&lt;/code&gt;&lt;code&gt;underscore&lt;/code&gt;&lt;code&gt;variable&lt;/code&gt;&lt;code&gt;warning_marker&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;text&lt;/code&gt;&lt;code&gt;underscore&lt;/code&gt;&lt;code&gt;variable&lt;/code&gt;&lt;code&gt;warning_marker&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="db691fba104ec38a95d2e5a9028aa4d95a1c4994" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tftp&lt;/code&gt; uses a callback module to handle the file transfer. Two such callback modules are provided, &lt;code&gt;tftp_binary&lt;/code&gt; and &lt;code&gt;tftp_file&lt;/code&gt;. See &lt;code&gt;&lt;a href=&quot;tftp#read_file-3&quot;&gt;read_file/3&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;tftp#write_file-3&quot;&gt;write_file/3&lt;/a&gt;&lt;/code&gt; for details. You can also implement your own callback modules, see &lt;code&gt;&lt;a href=&quot;tftp#tftp_callback&quot;&gt;CALLBACK FUNCTIONS&lt;/a&gt;&lt;/code&gt;. A callback module provided by the user is registered using option &lt;code&gt;callback&lt;/code&gt;, see &lt;code&gt;&lt;a href=&quot;tftp#options&quot;&gt;DATA TYPES&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;tftp&lt;/code&gt; 使用回调模块来处理文件传输。提供了两个这样的回调模块， &lt;code&gt;tftp_binary&lt;/code&gt; 和 &lt;code&gt;tftp_file&lt;/code&gt; 。有关详细信息，请参见 &lt;code&gt;&lt;a href=&quot;tftp#read_file-3&quot;&gt;read_file/3&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;tftp#write_file-3&quot;&gt;write_file/3&lt;/a&gt;&lt;/code&gt; 。您还可以实现自己的回调模块，请参见 &lt;code&gt;&lt;a href=&quot;tftp#tftp_callback&quot;&gt;CALLBACK FUNCTIONS&lt;/a&gt;&lt;/code&gt; 。用户提供的回调模块是使用选项 &lt;code&gt;callback&lt;/code&gt; 注册的，请参见 &lt;code&gt;&lt;a href=&quot;tftp#options&quot;&gt;DATA TYPES&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="90c15ece6af02153a9c0355447c31051ed435bd9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;this_node_name&lt;/code&gt; is the registered name of the process (the name before '@').</source>
          <target state="translated">&lt;code&gt;this_node_name&lt;/code&gt; 是进程的注册名称（&amp;ldquo; @&amp;rdquo;之前的名称）。</target>
        </trans-unit>
        <trans-unit id="f7f87e5cd5088792da9029cd76fb7272efebad16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;thisalivename&lt;/code&gt; is the registered name of the process.</source>
          <target state="translated">&lt;code&gt;thisalivename&lt;/code&gt; 是进程的注册名称。</target>
        </trans-unit>
        <trans-unit id="3649f198af3e1ea2c017f74b5a68bdabfce69e24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;thishostname&lt;/code&gt; is the name of the machine we are running on. If long names are to be used, they are to be fully qualified (that is, &lt;code&gt;durin.erix.ericsson.se&lt;/code&gt; instead of &lt;code&gt;durin&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;thishostname&lt;/code&gt; 是我们正在运行的计算机的名称。如果长名称要使用，它们是完全合格的（即 &lt;code&gt;durin.erix.ericsson.se&lt;/code&gt; 而不是 &lt;code&gt;durin&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="432d24d28cb42ea5622738153172fc0b74357d69" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;thisnodename&lt;/code&gt; is the full name of the node, that is, &lt;code&gt;einode@durin&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;thisnodename&lt;/code&gt; 是节点的全名，即 &lt;code&gt;einode@durin&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fbf9ac7f77cb74e53efc1812f73ebbdaba2d373d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;thispaddr&lt;/code&gt; if the IP address of the host.</source>
          <target state="translated">&lt;code&gt;thispaddr&lt;/code&gt; 如果主机的IP地址，则为thispaddr。</target>
        </trans-unit>
        <trans-unit id="e0fb80847311db2ce29decc6603fb4168e8e957b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;thread&lt;/code&gt; can only be a sublevel to &lt;code&gt;core&lt;/code&gt;. &lt;code&gt;core&lt;/code&gt; can be a sublevel to &lt;code&gt;processor&lt;/code&gt; or &lt;code&gt;node&lt;/code&gt;. &lt;code&gt;processor&lt;/code&gt; can be on the top level or a sublevel to &lt;code&gt;node&lt;/code&gt;. &lt;code&gt;node&lt;/code&gt; can be on the top level or a sublevel to &lt;code&gt;processor&lt;/code&gt;. That is, NUMA nodes can be processor internal or processor external. A CPU topology can consist of a mix of processor internal and external NUMA nodes, as long as each logical CPU belongs to &lt;strong&gt;one&lt;/strong&gt; NUMA node. Cache hierarchy is not part of the &lt;code&gt;CpuTopology&lt;/code&gt; type, but will be in a future release. Other things can also make it into the CPU topology in a future release. So, expect the &lt;code&gt;CpuTopology&lt;/code&gt; type to change.</source>
          <target state="translated">&lt;code&gt;thread&lt;/code&gt; 只能是 &lt;code&gt;core&lt;/code&gt; 的子级别。 &lt;code&gt;core&lt;/code&gt; 可以是 &lt;code&gt;processor&lt;/code&gt; 或 &lt;code&gt;node&lt;/code&gt; 的子级别。 &lt;code&gt;processor&lt;/code&gt; 可以位于 &lt;code&gt;node&lt;/code&gt; 的顶层或子级。 &lt;code&gt;node&lt;/code&gt; 可以位于 &lt;code&gt;processor&lt;/code&gt; 的顶层或子级。也就是说，NUMA节点可以是处理器内部的，也可以是处理器外部的。一个CPU拓扑可以包含处理器内部和外部NUMA节点的混合，只要每个逻辑CPU属于&lt;strong&gt;一个&lt;/strong&gt; NUMA节点即可。缓存层次结构不是 &lt;code&gt;CpuTopology&lt;/code&gt; 的一部分类型，但将在将来的版本中发布。在将来的版本中，其他因素也可能使其成为CPU拓扑。因此，期望 &lt;code&gt;CpuTopology&lt;/code&gt; 类型发生变化。</target>
        </trans-unit>
        <trans-unit id="24541f485e60b62a748249786f7d12597baf266c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;thread_no_node_processor_spread&lt;/code&gt; - A combination of &lt;code&gt;thread_spread&lt;/code&gt;, and &lt;code&gt;no_node_processor_spread&lt;/code&gt;. Schedulers are spread over hardware threads across NUMA nodes, but schedulers are only spread over processors internally in one NUMA node at a time.</source>
          <target state="translated">&lt;code&gt;thread_no_node_processor_spread&lt;/code&gt; - &lt;code&gt;thread_spread&lt;/code&gt; 和 &lt;code&gt;no_node_processor_spread&lt;/code&gt; 的组合。调度程序分布在NUMA节点上的硬件线程上，但是调度程序一次仅分布在内部一个NUMA节点中的处理器上。</target>
        </trans-unit>
        <trans-unit id="2a7d532f9d46f688ecc7d28920d4f7b069058c53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;thread_spread&lt;/code&gt; - Thread refers to hardware threads (such as Intel's hyper-threads). Schedulers with low scheduler identifiers, are bound to the first hardware thread of each core, then schedulers with higher scheduler identifiers are bound to the second hardware thread of each core,and so on.</source>
          <target state="translated">&lt;code&gt;thread_spread&lt;/code&gt; -线程是指硬件线程（例如Intel的超线程）。具有较低调度程序标识符的调度程序绑定到每个内核的第一个硬件线程，然后将具有较高调度程序标识符的调度程序绑定到每个内核的第二个硬件线程，依此类推。</target>
        </trans-unit>
        <trans-unit id="75540c4a1a0e614181fe976a238947bf8ef0e5a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tid&lt;/code&gt; is a thread identifier.</source>
          <target state="translated">&lt;code&gt;tid&lt;/code&gt; 是线程标识符。</target>
        </trans-unit>
        <trans-unit id="86a072bab3b54671f3a72c29d207b8c67c3ed25b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tid&lt;/code&gt; is the thread identifier of the thread to join. &lt;code&gt;exit_value&lt;/code&gt; is a pointer to a pointer to an exit value, or &lt;code&gt;NULL&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;tid&lt;/code&gt; 是要加入的线程的线程标识符。 &lt;code&gt;exit_value&lt;/code&gt; 是指向出口值或 &lt;code&gt;NULL&lt;/code&gt; 的指针。</target>
        </trans-unit>
        <trans-unit id="0cda8edb579f661ac84f8976b1d3b894aa95509a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;time_unit&lt;/code&gt; is the time unit of the returned value.</source>
          <target state="translated">&lt;code&gt;time_unit&lt;/code&gt; 是返回值的时间单位。</target>
        </trans-unit>
        <trans-unit id="da341cd15aab0c23c823c6ed99cd3969e5dae6aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;time_unit&lt;/code&gt; is time unit of returned value.</source>
          <target state="translated">&lt;code&gt;time_unit&lt;/code&gt; 是返回值的时间单位。</target>
        </trans-unit>
        <trans-unit id="42330a1483a712d0f47d8231a0e69cfc00669f19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;timeout&lt;/code&gt; - the reply failed to arrive before the request timer expired.</source>
          <target state="translated">&lt;code&gt;timeout&lt;/code&gt; -在请求计时器到期之前，回复未能到达。</target>
        </trans-unit>
        <trans-unit id="b1fcaf9b3f13a9751ed481b6dcbf6041cc7f21e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;timeout&lt;/code&gt; is the maximum time (in milliseconds) to wait for results. Specify &lt;code&gt;ERL_NO_TIMEOUT&lt;/code&gt; to wait forever. &lt;code&gt;ei_rpc()&lt;/code&gt; waits infinitely for the answer, that is, the call will never time out.</source>
          <target state="translated">&lt;code&gt;timeout&lt;/code&gt; 是等待结果的最长时间（以毫秒为单位）。指定 &lt;code&gt;ERL_NO_TIMEOUT&lt;/code&gt; 永远等待。 &lt;code&gt;ei_rpc()&lt;/code&gt; 无限等待答案，也就是说，调用永远不会超时。</target>
        </trans-unit>
        <trans-unit id="7cb3c152383d2fcb4e26042165fb3664492ba3ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;timeout&lt;/code&gt; is the maximum time (in milliseconds) to wait for results. To wait forever, specify &lt;code&gt;ERL_NO_TIMEOUT&lt;/code&gt;. When &lt;code&gt;erl_rpc()&lt;/code&gt; calls &lt;code&gt;erl_rpc_from()&lt;/code&gt;, the call will never timeout.</source>
          <target state="translated">&lt;code&gt;timeout&lt;/code&gt; 是等待结果的最长时间（以毫秒为单位）。要永远等待，请指定 &lt;code&gt;ERL_NO_TIMEOUT&lt;/code&gt; 。当 &lt;code&gt;erl_rpc()&lt;/code&gt; 调用 &lt;code&gt;erl_rpc_from()&lt;/code&gt; 时，调用将永不超时。</target>
        </trans-unit>
        <trans-unit id="9045e2ea725941e1fa92dc5204c53370db518515" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;timer:tc/3&lt;/code&gt; measures wall-clock time. The advantage with wall-clock time is that I/O, swapping, and other activities in the operating system kernel are included in the measurements. The disadvantage is that the measurements vary a lot. Usually it is best to run the benchmark several times and note the shortest time, which is to be the minimum time that is possible to achieve under the best of circumstances.</source>
          <target state="translated">&lt;code&gt;timer:tc/3&lt;/code&gt; 测量挂钟时间。挂钟时间的优点在于，测量中包括了I / O，交换和操作系统内核中的其他活动。缺点是测量值变化很大。通常，最好多次运行基准测试并注意最短的时间，这是在最佳情况下可以实现的最短时间。</target>
        </trans-unit>
        <trans-unit id="74af5378815bface9865562d1f6d6f60af1412ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;to : string&lt;/code&gt; :: Process ID or Port ID. Ex. &lt;code&gt;&quot;&amp;lt;0.131.0&amp;gt;&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;to : string&lt;/code&gt; ::进程ID或端口ID。例如 &lt;code&gt;&quot;&amp;lt;0.131.0&amp;gt;&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0bb3bd077d0ab1872873db7a7cc66cf1860106c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;to : string&lt;/code&gt; :: Process ID. Ex. &lt;code&gt;&quot;&amp;lt;0.131.0&amp;gt;&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;to : string&lt;/code&gt; ::进程ID。例如 &lt;code&gt;&quot;&amp;lt;0.131.0&amp;gt;&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="14c23cdd2f94f85a337afca31688e7593a5974a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;to&lt;/code&gt; is a string containing the registered name of the intended recipient of the message.</source>
          <target state="translated">&lt;code&gt;to&lt;/code&gt; 是一个字符串，其中包含消息的预期收件人的注册名称。</target>
        </trans-unit>
        <trans-unit id="4e706f37e7305d40f9c8a6f8409f5751f42ebdab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;to&lt;/code&gt; is an Erlang term containing the pid of the intended recipient of the message.</source>
          <target state="translated">&lt;code&gt;to&lt;/code&gt; 是一个Erlang术语，包含消息的预期收件人的pid。</target>
        </trans-unit>
        <trans-unit id="a647205e833ea46ec9656a3dc4b119093d9c63ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;to&lt;/code&gt; is the pid of the intended recipient of the message.</source>
          <target state="translated">&lt;code&gt;to&lt;/code&gt; 是消息的预期收件人的pid。</target>
        </trans-unit>
        <trans-unit id="49e6131c83b765eb6ee13c4222538475ad7821d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tokens(Continuation, CharSpec, StartLocation)&lt;/code&gt; is equivalent to &lt;code&gt;tokens(Continuation, CharSpec, StartLocation, [])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;tokens(Continuation, CharSpec, StartLocation)&lt;/code&gt; 等同于 &lt;code&gt;tokens(Continuation, CharSpec, StartLocation, [])&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1526bde11cc439a1544fd43c47b7f90a379e4341" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tpkt&lt;/code&gt; - TPKT format [RFC1006]</source>
          <target state="translated">&lt;code&gt;tpkt&lt;/code&gt; -TPKT格式[RFC1006]</target>
        </trans-unit>
        <trans-unit id="8cfe83b121501308f139a5811816156fc1418da6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;trace_status&lt;/code&gt; is a special type of &lt;code&gt;TraceTag&lt;/code&gt;, which is used to check if the tracer is still to be active. It is called in multiple scenarios, but most significantly it is used when tracing is started using this tracer. If &lt;code&gt;remove&lt;/code&gt; is returned when the &lt;code&gt;trace_status&lt;/code&gt; is checked, the tracer is removed from the tracee.</source>
          <target state="translated">&lt;code&gt;trace_status&lt;/code&gt; 是 &lt;code&gt;TraceTag&lt;/code&gt; 的一种特殊类型，用于检查跟踪器是否仍处于活动状态。在多种情况下会调用它，但是最重要的是，使用此跟踪器开始跟踪时会使用它。如果在检查 &lt;code&gt;trace_status&lt;/code&gt; 时返回 &lt;code&gt;remove&lt;/code&gt; ，则从示踪物中删除示踪剂。</target>
        </trans-unit>
        <trans-unit id="2d4d7aadc0aceeb4f0c873290fa582d8a6ce1b67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;transaction_commits&lt;/code&gt;. Returns a number that indicates how many transactions have terminated successfully since Mnesia was started.</source>
          <target state="translated">&lt;code&gt;transaction_commits&lt;/code&gt; 。返回一个数字，该数字指示自Mnesia启动以来成功完成了多少笔交易。</target>
        </trans-unit>
        <trans-unit id="b33ef20fb3b861edd2647508b04b70a7215c308a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;transaction_failures&lt;/code&gt;. Returns a number that indicates how many transactions have failed since Mnesia was started.</source>
          <target state="translated">&lt;code&gt;transaction_failures&lt;/code&gt; 。返回一个数字，该数字指示自Mnesia启动以来失败的事务数。</target>
        </trans-unit>
        <trans-unit id="3b8578c8fac965dcde57dfd306ea5b0e8f18a44b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;transaction_log_writes&lt;/code&gt;. Returns a number that indicates how many write operations that have been performed to the transaction log since startup.</source>
          <target state="translated">&lt;code&gt;transaction_log_writes&lt;/code&gt; 。返回一个数字，该数字指示自启动以来已对事务日志执行了多少次写操作。</target>
        </trans-unit>
        <trans-unit id="630b608fb07ad349a01288188a4e462d8b37ff83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;transaction_restarts&lt;/code&gt;. Returns a number that indicates how many transactions have been restarted since Mnesia was started.</source>
          <target state="translated">&lt;code&gt;transaction_restarts&lt;/code&gt; 。返回一个数字，该数字指示自Mnesia启动以来已重新启动的事务数。</target>
        </trans-unit>
        <trans-unit id="3cff235f7cdbcade752ed6a1bc95a08f73663644" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;transactions&lt;/code&gt;. Returns a list of all currently active local transactions.</source>
          <target state="translated">&lt;code&gt;transactions&lt;/code&gt; 。返回所有当前活动的本地事务的列表。</target>
        </trans-unit>
        <trans-unit id="ba50d7c6a778eb3b6a00e1942ce619907e536d65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;transports&lt;/code&gt; - which defines the transport domains and their addresses for the manager. &lt;strong&gt;Mandatory&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;transports&lt;/code&gt; -定义管理器的传输域及其地址。&lt;strong&gt;强制性的&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3dd8eb456f4c52d24b17e85ce6db521e59e2245c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;trap&lt;/code&gt; - &lt;code&gt;SnmpTrapInfo&lt;/code&gt; (see &lt;code&gt;&lt;a href=&quot;#handle_trap&quot;&gt;handle_trap&lt;/a&gt;&lt;/code&gt; for more info).</source>
          <target state="translated">&lt;code&gt;trap&lt;/code&gt; - &lt;code&gt;SnmpTrapInfo&lt;/code&gt; （有关更多信息，请参见 &lt;code&gt;&lt;a href=&quot;#handle_trap&quot;&gt;handle_trap&lt;/a&gt;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="446f1718810d5809e1f7ead841e52b06bb6f50e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;traverse&lt;/code&gt; specifies which function &lt;code&gt;Mnesia&lt;/code&gt; is to use to traverse the table. Default &lt;code&gt;select&lt;/code&gt; is used, but by using &lt;code&gt;{traverse, {select, MatchSpecification}}&lt;/code&gt; as an option to &lt;code&gt;&lt;a href=&quot;mnesia#table-1&quot;&gt;mnesia:table/2&lt;/a&gt;&lt;/code&gt; the user can specify its own view of the table.</source>
          <target state="translated">&lt;code&gt;traverse&lt;/code&gt; 指定 &lt;code&gt;Mnesia&lt;/code&gt; 将使用哪个函数遍历表。使用默认 &lt;code&gt;select&lt;/code&gt; ，但是通过使用 &lt;code&gt;{traverse, {select, MatchSpecification}}&lt;/code&gt; 作为 &lt;code&gt;&lt;a href=&quot;mnesia#table-1&quot;&gt;mnesia:table/2&lt;/a&gt;&lt;/code&gt; 的选项，用户可以指定自己的表视图。</target>
        </trans-unit>
        <trans-unit id="7d4ee48dd8e8173edf36c232e2c5be6b9e245fed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true | false&lt;/code&gt;. If set to &lt;code&gt;true&lt;/code&gt;, the connection to the client is a persistent connection and is not closed when the request is served.</source>
          <target state="translated">&lt;code&gt;true | false&lt;/code&gt; 。如果设置为 &lt;code&gt;true&lt;/code&gt; ，则到客户端的连接是持久连接，并且在处理请求时不会关闭。</target>
        </trans-unit>
        <trans-unit id="68dc96fabb05a1ec872239b9f02a798478ea221e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; for the first instance on the hardware; &lt;code&gt;false&lt;/code&gt; for the other instances</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 对于硬件上的第一个实例，为true；其他情况下为 &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bcd42de6128469ebeebe4d2e0a442e58df2a9153" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if a trace message is to be emitted</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 如果要发送跟踪消息，则为true</target>
        </trans-unit>
        <trans-unit id="18353e8e2daaa13a6662f880ec1a6fc78bf06729" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if the table was a named table when dumped to file, otherwise &lt;code&gt;false&lt;/code&gt;. Notice that when a named table is loaded from a file, there cannot exist a table in the system with the same name.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 如果表在转储到文件时是命名表，则为true，否则为 &lt;code&gt;false&lt;/code&gt; 。请注意，从文件加载命名表时，系统中将不存在同名表。</target>
        </trans-unit>
        <trans-unit id="0d46dfb8b7176946e3f27d76b5504add1699406b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if the user and password is valid</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 如果用户名和密码有效，则为true</target>
        </trans-unit>
        <trans-unit id="92d28165d23be12cc717a42800844c089578854a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;truncate/1,2&lt;/code&gt; are used for internally formatted logs, and &lt;code&gt;btruncate/2&lt;/code&gt; for externally formatted logs.</source>
          <target state="translated">&lt;code&gt;truncate/1,2&lt;/code&gt; 用于内部格式化的日志， &lt;code&gt;btruncate/2&lt;/code&gt; 用于外部格式化的日志。</target>
        </trans-unit>
        <trans-unit id="65e2f1b064d5d8a041a038dab805f66418240fa4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;truncated_binary_file&lt;/code&gt;. Truncated binary in file.</source>
          <target state="translated">&lt;code&gt;truncated_binary_file&lt;/code&gt; 。文件中的二进制文件被截断。</target>
        </trans-unit>
        <trans-unit id="a2800d67bb959087ca950bfd92b799a449159b00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ttb:write_trace_info(mykey,1)&lt;/code&gt; gives the entry &lt;code&gt;{mykey,[1]}&lt;/code&gt; in &lt;code&gt;TI&lt;/code&gt;. Another call, &lt;code&gt;ttb:write_trace_info(mykey,2)&lt;/code&gt;, changes this entry to &lt;code&gt;{mykey,[1,2]}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ttb:write_trace_info(mykey,1)&lt;/code&gt; 给出了输入 &lt;code&gt;{mykey,[1]}&lt;/code&gt; 中 &lt;code&gt;TI&lt;/code&gt; 。另一个调用 &lt;code&gt;ttb:write_trace_info(mykey,2)&lt;/code&gt; 将此条目更改为 &lt;code&gt;{mykey,[1,2]}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fbe86a3e39af79c31af9c34bbdc911f8979ef613" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ttb&lt;/code&gt; tries to fetch all logs from a reconnecting node before reinitializing the trace. This must finish within &lt;code&gt;FetchTimeout&lt;/code&gt; milliseconds or is aborted.</source>
          <target state="translated">&lt;code&gt;ttb&lt;/code&gt; 尝试在重新初始化跟踪之前从重新连接的节点获取所有日志。此操作必须在 &lt;code&gt;FetchTimeout&lt;/code&gt; 毫秒内完成或中止。</target>
        </trans-unit>
        <trans-unit id="07485964c7083135b80f0251c1e7c8f4eed4cc23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tty&lt;/code&gt; is a simple command-line interface program where keystrokes are collected and interpreted. Completed lines are sent to the shell for interpretation. A simple history mechanism saves previous lines, which can be edited before sending them to the shell. &lt;code&gt;tty&lt;/code&gt; is started when Erlang is started with the following command:</source>
          <target state="translated">&lt;code&gt;tty&lt;/code&gt; 是一个简单的命令行界面程序，其中收集并解释了击键。完成的行将发送到外壳进行解释。一个简单的历史记录机制可以保存以前的行，可以在将它们发送到外壳之前对其进行编辑。当使用以下命令启动Erlang时，将启动 &lt;code&gt;tty&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="dc0fd749433c43d16eea6a7af06feb6b514bf62c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tty&lt;/code&gt; operates in one of two modes:</source>
          <target state="translated">&lt;code&gt;tty&lt;/code&gt; 以以下两种模式之一运行：</target>
        </trans-unit>
        <trans-unit id="4ebbadf712e89a804230b6027f7071e95aa1a651" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tuple&lt;/code&gt; is an Erlang term containing at least &lt;code&gt;position&lt;/code&gt; elements.</source>
          <target state="translated">&lt;code&gt;tuple&lt;/code&gt; 是至少包含 &lt;code&gt;position&lt;/code&gt; 元素的Erlang术语。</target>
        </trans-unit>
        <trans-unit id="8ac60446a44e23f2aded6a0ede9778504bc5ab3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type : string&lt;/code&gt; :: &lt;code&gt;&quot;in&quot; | &quot;out&quot; | &quot;in_exiting&quot; | &quot;out_exiting&quot; | &quot;out_exited&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;type : string&lt;/code&gt; :: &lt;code&gt;&quot;in&quot; | &quot;out&quot; | &quot;in_exiting&quot; | &quot;out_exiting&quot; | &quot;out_exited&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3c24477fe9a2d11b7159a80dc5da800a125a462b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type : string&lt;/code&gt; :: &lt;code&gt;&quot;link&quot; | &quot;unlink&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;type : string&lt;/code&gt; :: &lt;code&gt;&quot;link&quot; | &quot;unlink&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="585f31dcada28f11d22dfcf574600e99be503b20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type : string&lt;/code&gt; :: &lt;code&gt;&quot;register&quot; | &quot;unregister&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;type : string&lt;/code&gt; :: &lt;code&gt;&quot;register&quot; | &quot;unregister&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dbd1fa42caee07cfdde1d1c49e940873f3ce79f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type : string&lt;/code&gt; :: Carrier type. Ex. &lt;code&gt;&quot;ets_alloc&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;type : string&lt;/code&gt; ::运营商类型。例如 &lt;code&gt;&quot;ets_alloc&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8c2394e962673b95d9475b1dae44e101144cec8c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type&lt;/code&gt; identifies the type of message, one of the following:</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; 标识消息的类型，以下之一：</target>
        </trans-unit>
        <trans-unit id="a9fee4dc8a11ab4ba4394477e638a046f78f7a68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type&lt;/code&gt; specifies if the child process is a supervisor or a worker.</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; 指定子进程是主管还是工人。</target>
        </trans-unit>
        <trans-unit id="22dd522a38e2274ef6b8f27311bc2adfb1336d24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type&lt;/code&gt;. Each table can have &lt;code&gt;set&lt;/code&gt;, &lt;code&gt;ordered_set&lt;/code&gt;, or &lt;code&gt;bag&lt;/code&gt; semantics. Notice that currently &lt;code&gt;ordered_set&lt;/code&gt; is not supported for &lt;code&gt;disc_only_copies&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; 。每个表可以具有 &lt;code&gt;set&lt;/code&gt; ， &lt;code&gt;ordered_set&lt;/code&gt; 或 &lt;code&gt;bag&lt;/code&gt; 语义。请注意， &lt;code&gt;disc_only_copies&lt;/code&gt; 不支持当前 &lt;code&gt;ordered_set&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d660f599077edf38f61598abfd3239c3295f9d5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type&lt;/code&gt;. Returns the table type, which is &lt;code&gt;bag&lt;/code&gt;, &lt;code&gt;set&lt;/code&gt;, or &lt;code&gt;ordered_set&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; 。返回表类型，即 &lt;code&gt;bag&lt;/code&gt; ， &lt;code&gt;set&lt;/code&gt; 或 &lt;code&gt;ordered_set&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4e39642073d12eb94cdb99478d27b4a78a18bb1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unblock&lt;/code&gt; - Unblock the transport. &lt;strong&gt;Optional&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;unblock&lt;/code&gt; - 取消阻止传输。&lt;strong&gt;可选的&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="423ee82a325c45d708f6b53cf08cd2d53eb25179" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unblock_user/2&lt;/code&gt;, &lt;code&gt;unblock_user/3&lt;/code&gt;, and &lt;code&gt;unblock_user/4&lt;/code&gt; each removes the user &lt;code&gt;User&lt;/code&gt; from the list of blocked users for &lt;code&gt;Port&lt;/code&gt; (and &lt;code&gt;Dir&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;unblock_user/2&lt;/code&gt; ， &lt;code&gt;unblock_user/3&lt;/code&gt; 和 &lt;code&gt;unblock_user/4&lt;/code&gt; 都将用户 &lt;code&gt;User&lt;/code&gt; 从 &lt;code&gt;Port&lt;/code&gt; （和 &lt;code&gt;Dir&lt;/code&gt; ）的阻止用户列表中删除。</target>
        </trans-unit>
        <trans-unit id="cb221b0bddf75be5af7a142e437af28721cb6a0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unbound&lt;/code&gt; - Schedulers are not bound to logical processors, that is, the operating system decides where the scheduler threads execute, and when to migrate them. This is the default.</source>
          <target state="translated">&lt;code&gt;unbound&lt;/code&gt; -调度程序未绑定到逻辑处理器，也就是说，操作系统决定调度程序线程在何处执行以及何时迁移它们。这是默认值。</target>
        </trans-unit>
        <trans-unit id="68855104bc975265734d17adc4b9717a8921c013" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;undefined&lt;/code&gt;, the second element is a sorted list of calls to undefined functions;</source>
          <target state="translated">&lt;code&gt;undefined&lt;/code&gt; ，第二个元素是未定义函数调用的排序列表；</target>
        </trans-unit>
        <trans-unit id="63e0a1a24e1e12c495e661fe3a4d1ed5aad283f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;undefined&lt;/code&gt;, the second element is a sorted list of undefined functions.</source>
          <target state="translated">&lt;code&gt;undefined&lt;/code&gt; ，第二个元素是未定义函数的排序列表。</target>
        </trans-unit>
        <trans-unit id="67836bf0fad080fbc4c92ed4d6e98f6e94d13637" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;undoFailed | genErr&lt;/code&gt;(SNMPv2)</source>
          <target state="translated">&lt;code&gt;undoFailed | genErr&lt;/code&gt; （SNMPv2）</target>
        </trans-unit>
        <trans-unit id="0a528517e33de5358c07ca06e3eeaae09a73f9a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unload&lt;/code&gt; is called when the module code that the NIF library belongs to is purged as old. New code of the same module may or may not exist.</source>
          <target state="translated">&lt;code&gt;unload&lt;/code&gt; 当NIF库所属的模块代码清除为旧版本时，将调用unload。同一模块的新代码可能存在或可能不存在。</target>
        </trans-unit>
        <trans-unit id="a6bdf36f78b9fdab5ef03090b3d26c7df338dd95" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unset_env/2&lt;/code&gt; uses the standard &lt;code&gt;gen_server&lt;/code&gt; time-out value (5000 ms). Option &lt;code&gt;timeout&lt;/code&gt; can be specified if another time-out value is useful, for example, in situations where the application controller is heavily loaded.</source>
          <target state="translated">&lt;code&gt;unset_env/2&lt;/code&gt; 使用标准的 &lt;code&gt;gen_server&lt;/code&gt; 超时值（5000毫秒）。如果另一个超时值有用，则可以指定选项 &lt;code&gt;timeout&lt;/code&gt; ，例如，在应用程序控制器负载很重的情况下。</target>
        </trans-unit>
        <trans-unit id="0d80596c220fdf814c2817b3df936059e9e5a099" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unset_env/3&lt;/code&gt; also allows the persistent option to be passed (see &lt;code&gt;&lt;a href=&quot;#set_env-4&quot;&gt;set_env/4&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;unset_env/3&lt;/code&gt; 还允许传递持久选项（请参阅 &lt;code&gt;&lt;a href=&quot;#set_env-4&quot;&gt;set_env/4&lt;/a&gt;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="54e1b9dc998c783a6780fb73f8b3e07324c6fe3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unused&lt;/code&gt;, the second element is a sorted list of unused local functions.</source>
          <target state="translated">&lt;code&gt;unused&lt;/code&gt; ，第二个元素是未使用的本地函数的排序列表。</target>
        </trans-unit>
        <trans-unit id="f36d1e2dc14b39425abbb472208bfa0155ae6ba1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unzip/1&lt;/code&gt; extracts all files from a zip archive.</source>
          <target state="translated">&lt;code&gt;unzip/1&lt;/code&gt; 从zip存档中提取所有文件。</target>
        </trans-unit>
        <trans-unit id="cc113f5d9884c328d9e7c3406dd9639241a1f488" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unzip/2&lt;/code&gt; provides options to extract some files, and more.</source>
          <target state="translated">&lt;code&gt;unzip/2&lt;/code&gt; 提供了提取某些文件等的选项。</target>
        </trans-unit>
        <trans-unit id="0ab2ae7e637a1878f50560a2fa78fba87debfc0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;update&lt;/code&gt; with argument &lt;code&gt;supervisor&lt;/code&gt; is used when changing the start specification of a supervisor.</source>
          <target state="translated">&lt;code&gt;update&lt;/code&gt; 更改 &lt;code&gt;supervisor&lt;/code&gt; 的启动规范时，使用带有参数supervisor的update。</target>
        </trans-unit>
        <trans-unit id="0dcf3ccda976ca935ff42a0bd5537ac0500bd082" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;update&lt;/code&gt; with argument &lt;code&gt;supervisor&lt;/code&gt; is used when changing the start specification of a supervisor. See &lt;code&gt;&lt;a href=&quot;appup_cookbook#sup&quot;&gt;Appup Cookbook&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;update&lt;/code&gt; 更改 &lt;code&gt;supervisor&lt;/code&gt; 的启动规范时，使用带有参数supervisor的update。请参阅 &lt;code&gt;&lt;a href=&quot;appup_cookbook#sup&quot;&gt;Appup Cookbook&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9c670138846275c9f49bf8cf1cd5a56046082505" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;update&lt;/code&gt; with argument &lt;code&gt;{advanced,Extra}&lt;/code&gt; is used when changing the internal state of a behaviour as described above. It causes behaviour processes to call the callback function &lt;code&gt;code_change&lt;/code&gt;, passing the term &lt;code&gt;Extra&lt;/code&gt; and some other information as arguments. See the manual pages for the respective behaviours and &lt;code&gt;&lt;a href=&quot;appup_cookbook#int_state&quot;&gt;Appup Cookbook&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;update&lt;/code&gt; 如上所述，当更改行为的内部状态时，将使用参数 &lt;code&gt;{advanced,Extra}&lt;/code&gt; 进行更新。它导致行为过程调用回调函数 &lt;code&gt;code_change&lt;/code&gt; ，并传递术语 &lt;code&gt;Extra&lt;/code&gt; 和其他一些信息作为参数。有关相应行为，请参见手册页和 &lt;code&gt;&lt;a href=&quot;appup_cookbook#int_state&quot;&gt;Appup Cookbook&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d4c8e77e2a3b795490a289f04ccc42ccc8e8b108" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;update_password/5&lt;/code&gt; and &lt;code&gt;update_password/6&lt;/code&gt; each updates &lt;code&gt;AuthAccessPassword&lt;/code&gt; for the specified directory. If &lt;code&gt;NewPassword&lt;/code&gt; is equal to &quot;NoPassword&quot;, no password is required to change authorisation data. If &lt;code&gt;NewPassword&lt;/code&gt; is equal to &quot;DummyPassword&quot;, no changes can be done without changing the password first.</source>
          <target state="translated">&lt;code&gt;update_password/5&lt;/code&gt; 和 &lt;code&gt;update_password/6&lt;/code&gt; 分别更新指定目录的 &lt;code&gt;AuthAccessPassword&lt;/code&gt; 。如果 &lt;code&gt;NewPassword&lt;/code&gt; 等于&amp;ldquo; NoPassword&amp;rdquo;，则无需密码即可更改授权数据。如果 &lt;code&gt;NewPassword&lt;/code&gt; 等于&amp;ldquo; DummyPassword&amp;rdquo;，则必须先更改密码，然后才能进行更改。</target>
        </trans-unit>
        <trans-unit id="4bf07b2d071383294ff8367d439054c4a5355c3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;upgrade&lt;/code&gt; is called when the NIF library is loaded and there is old code of this module with a loaded NIF library.</source>
          <target state="translated">&lt;code&gt;upgrade&lt;/code&gt; 加载NIF库并且此模块的旧代码带有已加载的NIF库时，将调用升级。</target>
        </trans-unit>
        <trans-unit id="9877c5fe670c390677a05dcd0f0befd190474c2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;url() = string()&lt;/code&gt; syntax according to the URI definition in &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc2396.txt&quot;&gt;RFC 2396&lt;/a&gt;&lt;/code&gt;, for example &lt;code&gt;&quot;http://www.erlang.org&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;url() = string()&lt;/code&gt; 根据 &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc2396.txt&quot;&gt;RFC 2396&lt;/a&gt;&lt;/code&gt; 中 URI定义的url（）= string（）语法，例如 &lt;code&gt;&quot;http://www.erlang.org&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="02ff37f233e13e3cf91eb9088f454693b539fcb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;use_dir&lt;/code&gt; can be determined even before &lt;code&gt;Mnesia&lt;/code&gt; is started.</source>
          <target state="translated">&lt;code&gt;use_dir&lt;/code&gt; 可以在 &lt;code&gt;Mnesia&lt;/code&gt; 启动之前确定use_dir。</target>
        </trans-unit>
        <trans-unit id="49d3565fb902c136f502da8d51ef1b3741014827" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;use_dir&lt;/code&gt;. Returns a boolean that indicates if the Mnesia directory is used or not. Can be started even if Mnesia is not yet running.</source>
          <target state="translated">&lt;code&gt;use_dir&lt;/code&gt; 。返回一个布尔值，该布尔值指示是否使用Mnesia目录。即使Mnesia尚未运行，也可以启动。</target>
        </trans-unit>
        <trans-unit id="eab548437e6b6765ecfed12484803bba2ec9120f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;user&lt;/code&gt; - Same as &lt;code&gt;{user, integer()}&lt;/code&gt;, except that the default time, 15000 milli-seconds, is used.</source>
          <target state="translated">&lt;code&gt;user&lt;/code&gt; -同 &lt;code&gt;{user, integer()}&lt;/code&gt; ，除了默认的时间，15000毫秒，则使用。</target>
        </trans-unit>
        <trans-unit id="06dc83804965c938bd881185af62fddd57a33b25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;user_properties&lt;/code&gt;. Returns the user-associated table properties of the table. It is a list of the stored property records.</source>
          <target state="translated">&lt;code&gt;user_properties&lt;/code&gt; 。返回表的用户关联表属性。它是存储的属性记录的列表。</target>
        </trans-unit>
        <trans-unit id="8bd1cb0e12bb3d7f8ed7b05354e7cf0b36fa0b22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;userdata&lt;/code&gt;, see &lt;code&gt;&lt;a href=&quot;#info_function&quot;&gt;Test Case Information Function&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;userdata&lt;/code&gt; ，请参阅 &lt;code&gt;&lt;a href=&quot;#info_function&quot;&gt;Test Case Information Function&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4742a9e95696ac56e7fc3feeda4f22f35508fb81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;users_entry(UserId)&lt;/code&gt; translates to the following call: &lt;code&gt;users_entry(UserId, snmpm_user_default)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;users_entry(UserId)&lt;/code&gt; 转换为以下调用： &lt;code&gt;users_entry(UserId, snmpm_user_default)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6435fceb839d27af4e14ec590fb387c23e41c7ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;users_entry(UserId, UserMod)&lt;/code&gt; translates to the following call: &lt;code&gt;users_entry(UserId, UserMod, undefined)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;users_entry(UserId, UserMod)&lt;/code&gt; 转换为以下调用： &lt;code&gt;users_entry(UserId, UserMod, undefined)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6c182bac5e5dc2aa902d528e89a94ffa68f92eb7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;usm.conf&lt;/code&gt;: see &lt;code&gt;&lt;a href=&quot;#usm&quot;&gt;Security data for USM&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;usm.conf&lt;/code&gt; ：请参阅 &lt;code&gt;&lt;a href=&quot;#usm&quot;&gt;Security data for USM&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2effba39a2bdbac5661cb95841c2d8bca14c6809" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;usm_entry/1&lt;/code&gt; translates to the following call: &lt;code&gt;usm_entry(&quot;initial&quot;, &quot;initial&quot;, zeroDotZero, usmNoAuthProtocol, &quot;&quot;, &quot;&quot;, usmNoPrivProtocol, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;usm_entry/1&lt;/code&gt; 转换为以下调用： &lt;code&gt;usm_entry(&quot;initial&quot;, &quot;initial&quot;, zeroDotZero, usmNoAuthProtocol, &quot;&quot;, &quot;&quot;, usmNoPrivProtocol, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5a02b9268b15ed77101380b6bd5fd4260e828103" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vacm.conf&lt;/code&gt;: see &lt;code&gt;&lt;a href=&quot;#vacm&quot;&gt;MIB Views for VACM&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;vacm.conf&lt;/code&gt; ：请参阅 &lt;code&gt;&lt;a href=&quot;#vacm&quot;&gt;MIB Views for VACM&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7e03dfee301b3b6d50c0ee51604a2f577049e425" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vacm_vtf_entry/2&lt;/code&gt; translates to the following call: &lt;code&gt;vacm_vtf_entry(ViewIndex, ViewSubtree, included, null)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;vacm_vtf_entry/2&lt;/code&gt; 转换为以下调用： &lt;code&gt;vacm_vtf_entry(ViewIndex, ViewSubtree, included, null)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="073cac5e7c8a11760b760cc2926fa3def62a9b76" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt; is a &lt;code&gt;NULL&lt;/code&gt;-terminated string containing the new value of the environment variable.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; 是一个以 &lt;code&gt;NULL&lt;/code&gt; 终止的字符串，其中包含环境变量的新值。</target>
        </trans-unit>
        <trans-unit id="9d7f39974b19c2176ca01d8f5adf6a53e1a68376" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;verbose&lt;/code&gt;, with initial default value &lt;code&gt;false&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;verbose&lt;/code&gt; ，初始默认值为 &lt;code&gt;false&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="3cb5607c038d28e092066a66f90ec1d52f18831e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;verify_fun&lt;/code&gt; (write as &lt;code&gt;{Module, Function, InitialUserState}&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;verify_fun&lt;/code&gt; （写为 &lt;code&gt;{Module, Function, InitialUserState}&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="1999293cc88462714e2740cfd2167d251651472f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;version&lt;/code&gt;, the application's version as a list of numbers. For instance, the directory &quot;kernel-2.6&quot; results in the application name &lt;code&gt;kernel&lt;/code&gt; and the application version [2,6]; &quot;kernel&quot; yields the name &lt;code&gt;kernel&lt;/code&gt; and the version [].</source>
          <target state="translated">&lt;code&gt;version&lt;/code&gt; ，应用程序的版本号，以数字列表形式表示。例如，目录&amp;ldquo; kernel-2.6&amp;rdquo;生成应用程序名称 &lt;code&gt;kernel&lt;/code&gt; 和应用程序版本[2,6]；&amp;ldquo;内核&amp;rdquo;产生名称 &lt;code&gt;kernel&lt;/code&gt; 和版本[]。</target>
        </trans-unit>
        <trans-unit id="e720fd4c485c4274afccddb66162b94247d7d9cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;version&lt;/code&gt;. Returns the current version number of Mnesia.</source>
          <target state="translated">&lt;code&gt;version&lt;/code&gt; 。返回Mnesia的当前版本号。</target>
        </trans-unit>
        <trans-unit id="725edffef8fa84eb7cd7ee10016f6293ff990de7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;version&lt;/code&gt;. Returns the current version of the table definition. The table version is incremented when the table definition is changed. The table definition can be incremented directly when it has been changed in a schema transaction, or when a committed table definition is merged with table definitions from other nodes during startup.</source>
          <target state="translated">&lt;code&gt;version&lt;/code&gt; 。返回表定义的当前版本。更改表定义时，表版本会增加。在模式事务中更改表定义时，或者在启动过程中将提交的表定义与其他节点的表定义合并时，可以直接增加表定义。</target>
        </trans-unit>
        <trans-unit id="5c9f5faf74adb2bbb2ed57c5511d3a10540cd5b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;visible&lt;/code&gt; - &lt;code&gt;erlang:nodes(visible)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;visible&lt;/code&gt; - &lt;code&gt;erlang:nodes(visible)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="16b4f31a998fa85f82c497b3fb589c1499e35404" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vsn&lt;/code&gt; - Version number, a string. Defaults to &quot;&quot;.</source>
          <target state="translated">&lt;code&gt;vsn&lt;/code&gt; -版本号，字符串。默认为&amp;ldquo;&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="a61b418153ad02dd256a4936a21ae1935d19371a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;w&lt;/code&gt; means that a warning is sent to the &lt;code&gt;error_logger&lt;/code&gt; whenever a wrongly encoded filename is &quot;skipped&quot; in directory listings. &lt;code&gt;w&lt;/code&gt; is the default.</source>
          <target state="translated">&lt;code&gt;w&lt;/code&gt; 表示每当目录列表中&amp;ldquo;跳过&amp;rdquo;错误编码的文件名时，都会向 &lt;code&gt;error_logger&lt;/code&gt; 发送警告。 &lt;code&gt;w&lt;/code&gt; 是默认值。</target>
        </trans-unit>
        <trans-unit id="93e1ec4a869cdc774ffcf94e406254568b25ee6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;w&lt;/code&gt; means that a warning is sent to the &lt;code&gt;error_logger&lt;/code&gt; whenever a wrongly encoded filename is &quot;skipped&quot; in directory listings. This is the default.</source>
          <target state="translated">&lt;code&gt;w&lt;/code&gt; 表示每当目录列表中&amp;ldquo;跳过&amp;rdquo;错误编码的文件名时，都会向 &lt;code&gt;error_logger&lt;/code&gt; 发送警告。这是默认值。</target>
        </trans-unit>
        <trans-unit id="0ba27f55a23f1465f57ce405adef9c153873bf6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;waiting&lt;/code&gt; (for a message)</source>
          <target state="translated">&lt;code&gt;waiting&lt;/code&gt; （消息）</target>
        </trans-unit>
        <trans-unit id="56c42310a3adf0203bb9d7775e938a815c481570" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;waiting&lt;/code&gt; - The process is waiting at a &lt;code&gt;receive&lt;/code&gt;. &lt;code&gt;Info={}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;waiting&lt;/code&gt; -进程正在等待 &lt;code&gt;receive&lt;/code&gt; 。 &lt;code&gt;Info={}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d521421c6c6b4d5cfbc722ae90cdec142a1ea744" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;warnings&lt;/code&gt;, with initial default value &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;warnings&lt;/code&gt; ，初始默认值为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cc3f6825839013d334b382fc8f4d2c9fe25b66a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;where_to_read&lt;/code&gt;. Returns the node where the table can be read. If value &lt;code&gt;nowhere&lt;/code&gt; is returned, either the table is not loaded or it resides at a remote node that is not running.</source>
          <target state="translated">&lt;code&gt;where_to_read&lt;/code&gt; 。返回可以读取表的节点。如果返回值 &lt;code&gt;nowhere&lt;/code&gt; ，则表未加载或驻留在未运行的远程节点上。</target>
        </trans-unit>
        <trans-unit id="901723e62a25962c4a0f86ef98c81ff41aaa4e1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;where_to_write&lt;/code&gt;. Returns a list of the nodes that currently hold an active replica of the table.</source>
          <target state="translated">&lt;code&gt;where_to_write&lt;/code&gt; 。返回当前持有表的活动副本的节点的列表。</target>
        </trans-unit>
        <trans-unit id="33a6e89a063b3c48d127b9caa3a09c282600833d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;which_applications/0&lt;/code&gt; uses the standard &lt;code&gt;gen_server&lt;/code&gt; time-out value (5000 ms). A &lt;code&gt;Timeout&lt;/code&gt; argument can be specified if another time-out value is useful, for example, in situations where the application controller is heavily loaded.</source>
          <target state="translated">&lt;code&gt;which_applications/0&lt;/code&gt; 使用标准的 &lt;code&gt;gen_server&lt;/code&gt; 超时值（5000毫秒）。如果另一个超时值有用，那么可以指定一个 &lt;code&gt;Timeout&lt;/code&gt; 参数，例如，在应用程序控制器负载很重的情况下。</target>
        </trans-unit>
        <trans-unit id="4e3e6f7db7c74274af9a1913d1ef4ed5410ac388" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;width&lt;/code&gt; is the field width.</source>
          <target state="translated">&lt;code&gt;width&lt;/code&gt; 是字段宽度。</target>
        </trans-unit>
        <trans-unit id="c1b9c1eb6b0db68c59c0d28ea745a885fec2a2e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;wild_pattern&lt;/code&gt;. Returns a structure that can be given to the various match functions for a certain table. A record tuple is where all record fields have value &lt;code&gt;'_'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;wild_pattern&lt;/code&gt; 。返回可以赋予特定表各种匹配功能的结构。记录元组是所有记录字段均具有值 &lt;code&gt;'_'&lt;/code&gt; 的地方。</target>
        </trans-unit>
        <trans-unit id="a3b2f203f574e7b0119cebca9fa81660715a611e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;win32reg&lt;/code&gt; supports storing of the following types:</source>
          <target state="translated">&lt;code&gt;win32reg&lt;/code&gt; 支持以下类型的存储：</target>
        </trans-unit>
        <trans-unit id="6895e0b101bb33a164e6b5cbf8dccbfa9b543c30" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;workers&lt;/code&gt; - The count of all children marked as &lt;code&gt;child_type = worker&lt;/code&gt; in the specification list, regardless if the child process is still alive.</source>
          <target state="translated">&lt;code&gt;workers&lt;/code&gt; -标记为所有儿童的数量 &lt;code&gt;child_type = worker&lt;/code&gt; 在规范列表中，如果不管孩子进程仍然活着。</target>
        </trans-unit>
        <trans-unit id="b18d65fbb4af8e8bfaebe6445fff22b60a0fc38c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; is buffer obtained from &lt;code&gt;ei_x_new&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 是从 &lt;code&gt;ei_x_new&lt;/code&gt; 获得的缓冲区。</target>
        </trans-unit>
        <trans-unit id="e8df1ee779239343d32dfcea45be1e5d3db1ef43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; points to the dynamic buffer that receives the result. For &lt;code&gt;ei_rpc()&lt;/code&gt; this is the result without the version magic number. For &lt;code&gt;ei_rpc_from()&lt;/code&gt; the result returns a version magic number and a 2-tuple &lt;code&gt;{rex,Reply}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 指向接收结果的动态缓冲区。对于 &lt;code&gt;ei_rpc()&lt;/code&gt; ,这是没有版本幻数的结果。对于 &lt;code&gt;ei_rpc_from()&lt;/code&gt; ，结果返回一个版本幻数和一个2元组 &lt;code&gt;{rex,Reply}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e43baae1e033ddbdcc46d820e42d908fb1b1318a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xmerl_xs&lt;/code&gt; does not implement the entire XSLT specification but the basic functionality. For all details see the &lt;code&gt;&lt;a href=&quot;xmerl_xs&quot;&gt;reference manual&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;xmerl_xs&lt;/code&gt; 并没有实现整个XSLT规范，而是实现了基本功能。有关所有详细信息，请参见 &lt;code&gt;&lt;a href=&quot;xmerl_xs&quot;&gt;reference manual&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aa8864ee1e0998dd64ca65e617a7995967c3e4da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xsltproc&lt;/code&gt; -- A command line XSLT processor.</source>
          <target state="translated">&lt;code&gt;xsltproc&lt;/code&gt; -命令行XSLT处理器。</target>
        </trans-unit>
        <trans-unit id="1fd3c4bd87d2ae6804509a008138cc156e5e98cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;zero_n&lt;/code&gt; - Perform 0/n BEAST mitigation.</source>
          <target state="translated">&lt;code&gt;zero_n&lt;/code&gt; -执行0 / n BEAST缓解。</target>
        </trans-unit>
        <trans-unit id="5db7af8d540f788f1a2740e506659b466273d5f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;zipwith(fun(X, Y) -&amp;gt; {X,Y} end, List1, List2)&lt;/code&gt; is equivalent to &lt;code&gt;zip(List1, List2)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;zipwith(fun(X, Y) -&amp;gt; {X,Y} end, List1, List2)&lt;/code&gt; 等同于 &lt;code&gt;zip(List1, List2)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1d9843379c0cac92453b79a4bca12fe83c0d6fb9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;zipwith3(fun(X, Y, Z) -&amp;gt; {X,Y,Z} end, List1, List2, List3)&lt;/code&gt; is equivalent to &lt;code&gt;zip3(List1, List2, List3)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;zipwith3(fun(X, Y, Z) -&amp;gt; {X,Y,Z} end, List1, List2, List3)&lt;/code&gt; 等同于 &lt;code&gt;zip3(List1, List2, List3)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1da76f45fcab9095f99b594226e633028d4474a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{19, FromPid, ToProc, Ref}&lt;/code&gt;, where &lt;code&gt;FromPid&lt;/code&gt; = monitoring process and &lt;code&gt;ToProc&lt;/code&gt; = monitored process pid or name (atom)</source>
          <target state="translated">&lt;code&gt;{19, FromPid, ToProc, Ref}&lt;/code&gt; ，其中 &lt;code&gt;FromPid&lt;/code&gt; =监视进程，而 &lt;code&gt;ToProc&lt;/code&gt; =监视进程pid或名称（原子）</target>
        </trans-unit>
        <trans-unit id="745bab8ee964fe3e77bce95c3f60e8693a9f1bc6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{20, FromPid, ToProc, Ref}&lt;/code&gt;, where &lt;code&gt;FromPid&lt;/code&gt; = monitoring process and &lt;code&gt;ToProc&lt;/code&gt; = monitored process pid or name (atom)</source>
          <target state="translated">&lt;code&gt;{20, FromPid, ToProc, Ref}&lt;/code&gt; ，其中 &lt;code&gt;FromPid&lt;/code&gt; =监视进程，而 &lt;code&gt;ToProc&lt;/code&gt; =监视进程pid或名称（原子）</target>
        </trans-unit>
        <trans-unit id="e7aa61d3f02df5f535950d9aa144b4892b912d5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{21, FromProc, ToPid, Ref, Reason}&lt;/code&gt;, where &lt;code&gt;FromProc&lt;/code&gt; = monitored process pid or name (atom), &lt;code&gt;ToPid&lt;/code&gt; = monitoring process, and &lt;code&gt;Reason&lt;/code&gt; = exit reason for the monitored process</source>
          <target state="translated">&lt;code&gt;{21, FromProc, ToPid, Ref, Reason}&lt;/code&gt; ，其中 &lt;code&gt;FromProc&lt;/code&gt; =监视的进程pid或名称（原子）， &lt;code&gt;ToPid&lt;/code&gt; =监视的进程， &lt;code&gt;Reason&lt;/code&gt; =监视进程的退出原因</target>
        </trans-unit>
        <trans-unit id="c89dfc5e3616548dbd455d68be110e920352d709" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{?sysLocation_instance, &quot;upstairs&quot;}&lt;/code&gt; (provided that the generated &lt;code&gt;.hrl&lt;/code&gt; file is included)</source>
          <target state="translated">&lt;code&gt;{?sysLocation_instance, &quot;upstairs&quot;}&lt;/code&gt; （前提是已包含生成的 &lt;code&gt;.hrl&lt;/code&gt; 文件）</target>
        </trans-unit>
        <trans-unit id="2fdfef9a69f992385af48d17628621ee536dc362" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{Column, RowIndex, Value}&lt;/code&gt;, where &lt;code&gt;Column&lt;/code&gt; is the symbolic name of a column variable. &lt;code&gt;RowIndex&lt;/code&gt; is a list of indices for the specified element. If this is the case, the OBJECT IDENTIFIER sent in the notification is the &lt;code&gt;RowIndex&lt;/code&gt; appended to the OBJECT IDENTIFIER for the table column. This is the OBJECT IDENTIFIER which specifies the element.</source>
          <target state="translated">&lt;code&gt;{Column, RowIndex, Value}&lt;/code&gt; ，其中 &lt;code&gt;Column&lt;/code&gt; 是列变量的符号名称。 &lt;code&gt;RowIndex&lt;/code&gt; 是指定元素的索引列表。如果是这种情况，则通知中发送的OBJECT IDENTIFIER是附加到表列的OBJECT IDENTIFIER 的 &lt;code&gt;RowIndex&lt;/code&gt; 。这是指定元素的对象标识符。</target>
        </trans-unit>
        <trans-unit id="0aa7bdabffe6ccfb6463d9dffc6c81df088d816a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{Column, RowIndex, Value}&lt;/code&gt;, where &lt;code&gt;Column&lt;/code&gt; is the symbolic name of a column variable. &lt;code&gt;RowIndex&lt;/code&gt; is a list of indices for the specified element. If this is the case, the OBJECT IDENTIFIER sent in the trap is the &lt;code&gt;RowIndex&lt;/code&gt; appended to the OBJECT IDENTIFIER for the table column. This is the OBJECT IDENTIFIER which specifies the element.</source>
          <target state="translated">&lt;code&gt;{Column, RowIndex, Value}&lt;/code&gt; ，其中 &lt;code&gt;Column&lt;/code&gt; 是列变量的符号名称。 &lt;code&gt;RowIndex&lt;/code&gt; 是指定元素的索引列表。如果是这种情况，则在陷阱中发送的OBJECT IDENTIFIER是附加到表列的OBJECT IDENTIFIER 的 &lt;code&gt;RowIndex&lt;/code&gt; 。这是指定元素的对象标识符。</target>
        </trans-unit>
        <trans-unit id="68e9922f1a8cafaa9f22afa67427bc13ca21d643" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{Error, Column}&lt;/code&gt; where &lt;code&gt;Error&lt;/code&gt; is the same as &lt;code&gt;set&lt;/code&gt; for variables, and &lt;code&gt;Column&lt;/code&gt; denotes the faulty column. &lt;code&gt;Column&lt;/code&gt; must be one of the columns in the &lt;code&gt;Cols&lt;/code&gt; list.</source>
          <target state="translated">&lt;code&gt;{Error, Column}&lt;/code&gt; ，其中 &lt;code&gt;Error&lt;/code&gt; 与为变量 &lt;code&gt;set&lt;/code&gt; 的相同，并且 &lt;code&gt;Column&lt;/code&gt; 表示有问题的列。 &lt;code&gt;Column&lt;/code&gt; 必须在一列的 &lt;code&gt;Cols&lt;/code&gt; 列表。</target>
        </trans-unit>
        <trans-unit id="dcd1e88ba91e5b34170c883231d5044117a93321" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{Error, Column}&lt;/code&gt; where &lt;code&gt;Error&lt;/code&gt; is the same as for &lt;code&gt;undo&lt;/code&gt; for variables, and &lt;code&gt;Column&lt;/code&gt; denotes the faulty column. &lt;code&gt;Column&lt;/code&gt; must be one of the columns in the &lt;code&gt;Cols&lt;/code&gt; list.</source>
          <target state="translated">&lt;code&gt;{Error, Column}&lt;/code&gt; ，其中 &lt;code&gt;Error&lt;/code&gt; 与变量的 &lt;code&gt;undo&lt;/code&gt; 相同， &lt;code&gt;Column&lt;/code&gt; 表示有问题的列。 &lt;code&gt;Column&lt;/code&gt; 必须在一列的 &lt;code&gt;Cols&lt;/code&gt; 列表。</target>
        </trans-unit>
        <trans-unit id="e0cfe33c1a13ffd17361874ebce5a6d0236fb5f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{Error, Column}&lt;/code&gt;, where &lt;code&gt;Error&lt;/code&gt; is the same as for &lt;code&gt;is_set_ok&lt;/code&gt; for variables, and &lt;code&gt;Column&lt;/code&gt; denotes the faulty column. &lt;code&gt;Column&lt;/code&gt; must be one of the columns in the &lt;code&gt;Cols&lt;/code&gt; list.</source>
          <target state="translated">&lt;code&gt;{Error, Column}&lt;/code&gt; ，其中 &lt;code&gt;Error&lt;/code&gt; 与变量的 &lt;code&gt;is_set_ok&lt;/code&gt; 相同，而 &lt;code&gt;Column&lt;/code&gt; 表示故障列。 &lt;code&gt;Column&lt;/code&gt; 必须在一列的 &lt;code&gt;Cols&lt;/code&gt; 列表。</target>
        </trans-unit>
        <trans-unit id="0f76c767a7b91045d3013b6770fd0cec3a923871" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{Method,RequestURI,HTTPVersion}&lt;/code&gt;: The HTTP &lt;code&gt;Method&lt;/code&gt;, &lt;code&gt;Request-URI&lt;/code&gt;, and &lt;code&gt;HTTP-Version&lt;/code&gt; as defined in RFC 2616.</source>
          <target state="translated">&lt;code&gt;{Method,RequestURI,HTTPVersion}&lt;/code&gt; ：RFC 2616中定义的HTTP &lt;code&gt;Method&lt;/code&gt; ， &lt;code&gt;Request-URI&lt;/code&gt; 和 &lt;code&gt;HTTP-Version&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="87ea5a6c647d045751904b0461c8cd31c1bceb7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{Minutes, Bytes}&lt;/code&gt; initiate rekeying when any of the limits are reached.</source>
          <target state="translated">&lt;code&gt;{Minutes, Bytes}&lt;/code&gt; 当达到任何限制时，{Minutes，Bytes}将启动重新键入密钥。</target>
        </trans-unit>
        <trans-unit id="51cdd4f58a7dd0cb267b633be69777f2c3ff5ab8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{Mod, Func, Args}&lt;/code&gt; - The info will be delivered via the function call:</source>
          <target state="translated">&lt;code&gt;{Mod, Func, Args}&lt;/code&gt; -信息将通过函数调用传递：</target>
        </trans-unit>
        <trans-unit id="121c70618c48645db2808b42226c45ce988ce357" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{Name,Element_List}&lt;/code&gt; - This action is used when one or more of the subtypes of &lt;code&gt;Name&lt;/code&gt; is exclusive decoded.</source>
          <target state="translated">&lt;code&gt;{Name,Element_List}&lt;/code&gt; -当对 &lt;code&gt;Name&lt;/code&gt; 的一个或多个子类型进行互斥解码时，将使用此操作。</target>
        </trans-unit>
        <trans-unit id="dfec9a14d3d828a4cc27553781fe5c4d1138a461" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{Name,Node}&lt;/code&gt;, if the &lt;code&gt;gen_server&lt;/code&gt; process is locally registered at another node</source>
          <target state="translated">&lt;code&gt;{Name,Node}&lt;/code&gt; ，如果 &lt;code&gt;gen_server&lt;/code&gt; 进程是在另一个节点本地注册的</target>
        </trans-unit>
        <trans-unit id="e6f386212dbc840fe094cafb29eab3642697fe16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{Name,Node}&lt;/code&gt;, if the event manager is locally registered at another node</source>
          <target state="translated">&lt;code&gt;{Name,Node}&lt;/code&gt; ，如果事件管理器在另一个节点上本地注册</target>
        </trans-unit>
        <trans-unit id="a57c8e34da36b0e1db6113d19bb2c5302361dc15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{Name,Node}&lt;/code&gt;, if the supervisor is locally registered at another node</source>
          <target state="translated">&lt;code&gt;{Name,Node}&lt;/code&gt; ，如果主管在另一个节点上本地注册</target>
        </trans-unit>
        <trans-unit id="6c91af9daa8263300dd0e59c09907e51e34aacb9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{Name,parts}&lt;/code&gt; - The type of &lt;code&gt;Name&lt;/code&gt; can be one of &lt;code&gt;SEQUENCE OF&lt;/code&gt; or &lt;code&gt;SET OF&lt;/code&gt;. The action implies that the different components of &lt;code&gt;Name&lt;/code&gt; are left undecoded. The value of &lt;code&gt;Name&lt;/code&gt; is returned as a tuple (as mentioned in the previous section) where the second element is a list of binaries. This is because the representation of a &lt;code&gt;SEQUENCE OF&lt;/code&gt; or a &lt;code&gt;SET OF&lt;/code&gt; in Erlang is a list of its internal type. Any of the elements in this list or the entire list can be decoded by function &lt;code&gt;decode_part&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{Name,parts}&lt;/code&gt; - &lt;code&gt;Name&lt;/code&gt; 的类型可以是 &lt;code&gt;SEQUENCE OF&lt;/code&gt; 或 &lt;code&gt;SET OF&lt;/code&gt; 之一。该动作意味着 &lt;code&gt;Name&lt;/code&gt; 的不同组成部分未解码。 &lt;code&gt;Name&lt;/code&gt; 的值作为元组返回（如上一节所述），其中第二个元素是二进制列表。这是因为用Erlang 表示的 &lt;code&gt;SEQUENCE OF&lt;/code&gt; 或 &lt;code&gt;SET OF&lt;/code&gt; 是其内部类型的列表。此列表或整个列表中的任何元素都可以通过函数 &lt;code&gt;decode_part&lt;/code&gt; 进行解码。</target>
        </trans-unit>
        <trans-unit id="aa91826344ee57f80e20c6dcb0f9b010c113de3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{Name,undecoded}&lt;/code&gt; - Tells that the element is left undecoded during the exclusive decode. The type of &lt;code&gt;Name&lt;/code&gt; can be any ASN.1 type. The value of element &lt;code&gt;Name&lt;/code&gt; is returned as a tuple (as mentioned in the previous section) in the value structure of the top type.</source>
          <target state="translated">&lt;code&gt;{Name,undecoded}&lt;/code&gt; -告知在独占解码期间未解码该元素。 &lt;code&gt;Name&lt;/code&gt; 的类型可以是任何ASN.1类型。在顶级类型的值结构中，元素 &lt;code&gt;Name&lt;/code&gt; 的值作为元组（如上一节所述）返回。</target>
        </trans-unit>
        <trans-unit id="4f6d35b81d459330588190ef4d06d768670ee791" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{NextOid, NextValue}&lt;/code&gt;, where &lt;code&gt;NextOid&lt;/code&gt; is the lexicographic next OBJECT IDENTIFIER for the corresponding column. This should be specified as the OBJECT IDENTIFER part following the table entry. This means that the first integer is the column number and the rest is a specification of the keys. &lt;code&gt;NextValue&lt;/code&gt; is the value of this element.</source>
          <target state="translated">&lt;code&gt;{NextOid, NextValue}&lt;/code&gt; ，其中 &lt;code&gt;NextOid&lt;/code&gt; 是对应列的词典下一个对象标识符。应该在表条目之后将其指定为OBJECT IDENTIFER部分。这意味着第一个整数是列号，其余的是键的规范。 &lt;code&gt;NextValue&lt;/code&gt; 是此元素的值。</target>
        </trans-unit>
        <trans-unit id="53ed75176daebf696b0f894701b346d9d74e248b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{OID, Value}&lt;/code&gt;, where &lt;code&gt;OID&lt;/code&gt; is the OBJECT IDENTIFIER for an instance of an object, scalar variable or column variable.</source>
          <target state="translated">&lt;code&gt;{OID, Value}&lt;/code&gt; ，其中 &lt;code&gt;OID&lt;/code&gt; 是对象，标量变量或列变量的实例的对象标识符。</target>
        </trans-unit>
        <trans-unit id="72f6021f2030528af2957095894ceec6297672d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{OID, Value}&lt;/code&gt;, where &lt;code&gt;OID&lt;/code&gt; is the OBJECT IDENTIFIER for an instance of an object, scalar variable, or column variable.</source>
          <target state="translated">&lt;code&gt;{OID, Value}&lt;/code&gt; ，其中 &lt;code&gt;OID&lt;/code&gt; 是对象，标量变量或列变量实例的OBJECT IDENTIFIER。</target>
        </trans-unit>
        <trans-unit id="753b6d106c570016132db8db3aa6c3a4be083ae6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{Objects, Fun}&lt;/code&gt;, where &lt;code&gt;Objects&lt;/code&gt; is a list of binaries or terms depending on the format, and &lt;code&gt;Fun&lt;/code&gt; is a new input function.</source>
          <target state="translated">&lt;code&gt;{Objects, Fun}&lt;/code&gt; ，其中 &lt;code&gt;Objects&lt;/code&gt; 是二进制文件或术语的列表，具体取决于格式，而 &lt;code&gt;Fun&lt;/code&gt; 是新的输入函数。</target>
        </trans-unit>
        <trans-unit id="45f995fedf59632161a42ad9d7ccb7bd9a899c7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{Record}&lt;/code&gt; specifies a record to be inserted. It can be a tuple with &lt;code&gt;Tab&lt;/code&gt; as first field. Notice that the record name is set to the table name regardless of what &lt;code&gt;record_name&lt;/code&gt; is set to.</source>
          <target state="translated">&lt;code&gt;{Record}&lt;/code&gt; 指定要插入的记录。它可以是一个以 &lt;code&gt;Tab&lt;/code&gt; 为第一字段的元组。请注意，无论将 &lt;code&gt;record_name&lt;/code&gt; 设置为什么，记录名都将设置为表名。</target>
        </trans-unit>
        <trans-unit id="af175d6f9cb3c148fb9a7a4069a2824b97ab9f32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{Tab, Key}&lt;/code&gt; specifies the full identity of a record to be deleted.</source>
          <target state="translated">&lt;code&gt;{Tab, Key}&lt;/code&gt; 指定要删除的记录的完整身份。</target>
        </trans-unit>
        <trans-unit id="e06b602b6a57a43d76f0a59f249204dc4ba2186b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{Tag, Recv}&lt;/code&gt; - The information is delivered either via messages or via a function call according to the value of &lt;code&gt;Recv&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{Tag, Recv}&lt;/code&gt; -根据 &lt;code&gt;Recv&lt;/code&gt; 的值，通过消息或通过函数调用传递信息。</target>
        </trans-unit>
        <trans-unit id="e724f43633b5194fb847b068e538f0756634630c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{Variable, Value}&lt;/code&gt;, where &lt;code&gt;Variable&lt;/code&gt; is the symbolic name of a scalar variable referred to in the notification specification.</source>
          <target state="translated">&lt;code&gt;{Variable, Value}&lt;/code&gt; ，其中 &lt;code&gt;Variable&lt;/code&gt; 是通知规范中引用的标量变量的符号名称。</target>
        </trans-unit>
        <trans-unit id="d2de6a0bd542803b390e373274da6b30bd2ba684" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{[1,3,6,1,2,1,1,6,0], &quot;upstairs&quot;}&lt;/code&gt; or</source>
          <target state="translated">&lt;code&gt;{[1,3,6,1,2,1,1,6,0], &quot;upstairs&quot;}&lt;/code&gt; 或</target>
        </trans-unit>
        <trans-unit id="d4e6ecb8894ea8a318ccd9bd107e2b468f26a717" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{aborted, Reason}&lt;/code&gt; if the function fails</source>
          <target state="translated">&lt;code&gt;{aborted, Reason}&lt;/code&gt; 如果函数失败</target>
        </trans-unit>
        <trans-unit id="cb73ae684b0c9f0fd04462ed9c6c277bab6015d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{aborted, Reason}&lt;/code&gt; if unsuccessful</source>
          <target state="translated">&lt;code&gt;{aborted, Reason}&lt;/code&gt; 如果失败）</target>
        </trans-unit>
        <trans-unit id="4b598621715d0704aaa6c18963a5e82926e142a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{access,&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type-access&quot;&gt;access()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;}&lt;/code&gt; - Existing tables can be opened in read-only mode. A table that is opened in read-only mode is not subjected to the automatic file reparation algorithm if it is later opened after a crash. Defaults to &lt;code&gt;read_write&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{access,&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#type-access&quot;&gt;access()&lt;/a&gt;&lt;/code&gt; &lt;code&gt;}&lt;/code&gt; -现有表可以以只读模式打开。如果在崩溃后稍后打开了以只读模式打开的表，则该表将不接受自动文件修复算法。默认为 &lt;code&gt;read_write&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b25840e04fe11366a2ebd3e0547df57c1396cbc7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{access,&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type-access&quot;&gt;access()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;}&lt;/code&gt; - The access mode.</source>
          <target state="translated">&lt;code&gt;{access,&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#type-access&quot;&gt;access()&lt;/a&gt;&lt;/code&gt; &lt;code&gt;}&lt;/code&gt; -访问模式。</target>
        </trans-unit>
        <trans-unit id="256381df77dde763e4e299fad3baa7f9b73c31bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{access_mode, Atom}&lt;/code&gt;. The access mode is by default the atom &lt;code&gt;read_write&lt;/code&gt; but it can also be set to the atom &lt;code&gt;read_only&lt;/code&gt;. If &lt;code&gt;AccessMode&lt;/code&gt; is set to &lt;code&gt;read_only&lt;/code&gt;, updates to the table cannot be performed.</source>
          <target state="translated">&lt;code&gt;{access_mode, Atom}&lt;/code&gt; 。默认情况下，访问模式是原子 &lt;code&gt;read_write&lt;/code&gt; ,但也可以将其设置为原子 &lt;code&gt;read_only&lt;/code&gt; 。如果 &lt;code&gt;AccessMode&lt;/code&gt; 设置为 &lt;code&gt;read_only&lt;/code&gt; ，则无法执行对该表的更新。</target>
        </trans-unit>
        <trans-unit id="04243e5d089ec02e4c347961534b65f3d8f7c290" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{allow_remote,Bool}&lt;/code&gt;, where &lt;code&gt;false&lt;/code&gt; means that all checkpoint retainers must be local. If a table does not reside locally, the checkpoint cannot be activated. &lt;code&gt;true&lt;/code&gt; allows checkpoint retainers to be allocated on any node. Default is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{allow_remote,Bool}&lt;/code&gt; ，其中 &lt;code&gt;false&lt;/code&gt; 表示所有检查点保持器都必须是本地的。如果表不在本地，则无法激活检查点。 &lt;code&gt;true&lt;/code&gt; 允许在任何节点上分配检查点保持器。默认值为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="543654962db471db6f7243d0b62dc47b8aaac5e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{allow_remote,Bool}&lt;/code&gt;. &lt;code&gt;false&lt;/code&gt; means that all retainers must be local. The checkpoint cannot be activated if a table does not reside locally. &lt;code&gt;true&lt;/code&gt; allows retainers to be allocated on any node. Default is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{allow_remote,Bool}&lt;/code&gt; 。 &lt;code&gt;false&lt;/code&gt; 表示所有保留者必须是本地的。如果表不在本地，则无法激活检查点。 &lt;code&gt;true&lt;/code&gt; 允许在任何节点上分配保留器。默认值为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="75d7892c93761213afa9e59fa9b02bd32612eee0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{atomic, ok}&lt;/code&gt; if successful</source>
          <target state="translated">&lt;code&gt;{atomic, ok}&lt;/code&gt; 如果成功</target>
        </trans-unit>
        <trans-unit id="491fd1af42e5cc8a3f8520e687adb5bb791d2cb4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{atomic, ok}&lt;/code&gt; if the function executes successfully</source>
          <target state="translated">&lt;code&gt;{atomic, ok}&lt;/code&gt; 如果函数成功执行</target>
        </trans-unit>
        <trans-unit id="558142c760c908a7542988227c481799c7091023" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{attributes, AtomList}&lt;/code&gt; is a list of the attribute names for the records that are supposed to populate the table. Default is &lt;code&gt;[key, val]&lt;/code&gt;. The table must at least have one extra attribute in addition to the key.</source>
          <target state="translated">&lt;code&gt;{attributes, AtomList}&lt;/code&gt; 是应该填充表的记录的属性名称的列表。默认值为 &lt;code&gt;[key, val]&lt;/code&gt; 。该表除键外还必须至少具有一个额外的属性。</target>
        </trans-unit>
        <trans-unit id="709157d32a33aed2347207976b657e2d2e2c7d31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{attributes, AtomList}&lt;/code&gt; is a list of the attribute names for the records that are supposed to populate the table. Default is the list &lt;code&gt;[key, val]&lt;/code&gt;. The table must at least have one extra attribute besides the key. When accessing single attributes in a record, it is not recommended to hard code the attribute names as atoms. Use the construct &lt;code&gt;record_info(fields, record_name)&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;{attributes, AtomList}&lt;/code&gt; 是应该填充表的记录的属性名称的列表。默认值为列表 &lt;code&gt;[key, val]&lt;/code&gt; 。该表除键外还必须至少具有一个额外的属性。访问记录中的单个属性时，建议不要将属性名称硬编码为原子。请改用构造 &lt;code&gt;record_info(fields, record_name)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d6dbda269264f5f79b65fce67f92e25bfbfbf838" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{auto_save,&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type-auto_save&quot;&gt;auto_save()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;}&lt;/code&gt; - The autosave interval.</source>
          <target state="translated">&lt;code&gt;{auto_save,&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#type-auto_save&quot;&gt;auto_save()&lt;/a&gt;&lt;/code&gt; &lt;code&gt;}&lt;/code&gt; -自动保存间隔。</target>
        </trans-unit>
        <trans-unit id="f5e16fd2dfca0361e7fa7a851df10a1f624c6da8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{auto_save,&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type-auto_save&quot;&gt;auto_save()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;}&lt;/code&gt; - The autosave interval. If the interval is an integer &lt;code&gt;Time&lt;/code&gt;, the table is flushed to disk whenever it is not accessed for &lt;code&gt;Time&lt;/code&gt; milliseconds. A table that has been flushed requires no reparation when reopened after an uncontrolled emulator halt. If the interval is the atom &lt;code&gt;infinity&lt;/code&gt;, autosave is disabled. Defaults to 180000 (3 minutes).</source>
          <target state="translated">&lt;code&gt;{auto_save,&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#type-auto_save&quot;&gt;auto_save()&lt;/a&gt;&lt;/code&gt; &lt;code&gt;}&lt;/code&gt; -自动保存间隔。如果间隔为整数 &lt;code&gt;Time&lt;/code&gt; ，该表被刷新到磁盘时，它没有为访问 &lt;code&gt;Time&lt;/code&gt; 毫秒。在不受控制的仿真器暂停后重新打开的表在刷新后不需要任何修复。如果间隔是原子 &lt;code&gt;infinity&lt;/code&gt; ，则禁用自动保存。默认为180000（3分钟）。</target>
        </trans-unit>
        <trans-unit id="67de751a35b068839d2e0911b7ba0813bfff2932" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{bad_term, FileName}&lt;/code&gt; - &lt;code&gt;io:read/2&lt;/code&gt; failed to read some term.</source>
          <target state="translated">&lt;code&gt;{bad_term, FileName}&lt;/code&gt; - &lt;code&gt;io:read/2&lt;/code&gt; 无法读取一些术语。</target>
        </trans-unit>
        <trans-unit id="c9f2ff7c0c12927bf8e9a20e16deb681fcdcfcdc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{bchunk_format, binary()}&lt;/code&gt; - An opaque binary describing the format of the objects returned by &lt;code&gt;bchunk/2&lt;/code&gt;. The binary can be used as argument to &lt;code&gt;is_compatible_chunk_format/2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{bchunk_format, binary()}&lt;/code&gt; -一个不透明的二进制文件，描述 &lt;code&gt;bchunk/2&lt;/code&gt; 返回的对象的格式。二进制文件可用作 &lt;code&gt;is_compatible_chunk_format/2&lt;/code&gt; 的参数。</target>
        </trans-unit>
        <trans-unit id="6ade7adb1a5cd475043f45f6ac30d9ac9943304e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{bound, Vars}&lt;/code&gt;, representing the variables that are bound in the subtree.</source>
          <target state="translated">&lt;code&gt;{bound, Vars}&lt;/code&gt; ，表示绑定在子树中的变量。</target>
        </trans-unit>
        <trans-unit id="6f21cf30cb0c5ee92e8c76f07637e7269e212e50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{cache_all, Cache}&lt;/code&gt;, where &lt;code&gt;Cache&lt;/code&gt; is equal to &lt;code&gt;ets&lt;/code&gt; or &lt;code&gt;list&lt;/code&gt; adds a &lt;code&gt;{cache,&amp;nbsp;Cache}&lt;/code&gt; option to every list expression of the query except tables and lists. Defaults to &lt;code&gt;{cache_all,&amp;nbsp;no}&lt;/code&gt;. Option &lt;code&gt;cache_all&lt;/code&gt; is equivalent to &lt;code&gt;{cache_all,&amp;nbsp;ets}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{cache_all, Cache}&lt;/code&gt; ，其中 &lt;code&gt;Cache&lt;/code&gt; 等于 &lt;code&gt;ets&lt;/code&gt; 或 &lt;code&gt;list&lt;/code&gt; ，向查询的每个表表达式（表和列表除外）添加一个 &lt;code&gt;{cache,&amp;nbsp;Cache}&lt;/code&gt; 选项。默认为 &lt;code&gt;{cache_all,&amp;nbsp;no}&lt;/code&gt; 。选项 &lt;code&gt;cache_all&lt;/code&gt; 等效于 &lt;code&gt;{cache_all,&amp;nbsp;ets}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="23c6babde67dcf358af9ed4cf2ed0b6ffd19b583" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{capture, ValueSpec}/{capture, ValueSpec, Type}&lt;/code&gt; defines what to return from the function upon successful matching. The &lt;code&gt;capture&lt;/code&gt; tuple can contain both a value specification, telling which of the captured substrings are to be returned, and a type specification, telling how captured substrings are to be returned (as index tuples, lists, or binaries). The options are described in detail below.</source>
          <target state="translated">&lt;code&gt;{capture, ValueSpec}/{capture, ValueSpec, Type}&lt;/code&gt; 定义成功匹配后从函数返回什么。所述 &lt;code&gt;capture&lt;/code&gt; 的元组可以包含一个值规范，告诉其捕获的子串的是要被返回，和类型规范，告诉捕获的子串如何被返回（如索引元组，列表，或二进制文件）。这些选项将在下面详细说明。</target>
        </trans-unit>
        <trans-unit id="058f13cf67604dfbb51081505fbab5ae1b798edf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{clear_tables, TabList}&lt;/code&gt;, where &lt;code&gt;TabList&lt;/code&gt; is a list of tables that is to be cleared before the records from the backup are inserted. That is, all records in the tables are deleted before the tables are restored. Schema information about the tables is not cleared or read from the backup.</source>
          <target state="translated">&lt;code&gt;{clear_tables, TabList}&lt;/code&gt; ，其中 &lt;code&gt;TabList&lt;/code&gt; 是在插入来自备份的记录之前要清除的表的列表。即，在还原表之前，将删除表中的所有记录。有关表的架构信息不会清除或从备份中读取。</target>
        </trans-unit>
        <trans-unit id="09a7c945e3a39415308795addf3bdebe75b499da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{clear_tables, TableList}&lt;/code&gt;, where &lt;code&gt;TableList&lt;/code&gt; is a list of tables, which is to be cleared before the records from the backup are inserted. That is, all records in the tables are deleted before the tables are restored. Schema information about the tables is not cleared or read from the backup.</source>
          <target state="translated">&lt;code&gt;{clear_tables, TableList}&lt;/code&gt; ，其中 &lt;code&gt;TableList&lt;/code&gt; 是表的列表，在插入备份中的记录之前将其清除。即，在还原表之前，将删除表中的所有记录。有关表的架构信息不会清除或从备份中读取。</target>
        </trans-unit>
        <trans-unit id="41021657e70894e4192de73dd05d3438df497291" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{codestr, Str}&lt;/code&gt; - for &lt;code&gt;dbg:fun2ms/1&lt;/code&gt; arguments passed as strings (example: &lt;code&gt;&quot;fun(_) -&amp;gt; return_trace() end&quot;&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;{codestr, Str}&lt;/code&gt; -对于作为字符串传递的 &lt;code&gt;dbg:fun2ms/1&lt;/code&gt; 参数（例如： &lt;code&gt;&quot;fun(_) -&amp;gt; return_trace() end&quot;&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="ddcae99060b7859c45aaabfbbff12ad2a1d320f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{comment,Comment}&lt;/code&gt; prints a comment in the log for the test case.</source>
          <target state="translated">&lt;code&gt;{comment,Comment}&lt;/code&gt; 在测试用例的日志中打印注释。</target>
        </trans-unit>
        <trans-unit id="9c778356ff6d593bf767cf4845abaa4b6473fe25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{cyclicity, Cyclicity}&lt;/code&gt;, where &lt;code&gt;Cyclicity&lt;/code&gt; is &lt;code&gt;cyclic&lt;/code&gt; or &lt;code&gt;acyclic&lt;/code&gt;, according to the options given to &lt;code&gt;new&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{cyclicity, Cyclicity}&lt;/code&gt; ，其中 &lt;code&gt;Cyclicity&lt;/code&gt; 是 &lt;code&gt;cyclic&lt;/code&gt; 或非 &lt;code&gt;acyclic&lt;/code&gt; ，具体取决于赋予 &lt;code&gt;new&lt;/code&gt; 的选项。</target>
        </trans-unit>
        <trans-unit id="2f6ba04727e1d0e2533eb38037a592fe109c38c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{default_op, Operation}&lt;/code&gt;, where &lt;code&gt;Operation&lt;/code&gt; is either of the operations &lt;code&gt;skip_tables&lt;/code&gt;, &lt;code&gt;clear_tables&lt;/code&gt;, &lt;code&gt;keep_tables&lt;/code&gt;, or &lt;code&gt;recreate_tables&lt;/code&gt;. The default operation specifies which operation that is to be used on tables from the backup that is not specified in any of the mentioned lists. If omitted, operation &lt;code&gt;clear_tables&lt;/code&gt; is used.</source>
          <target state="translated">&lt;code&gt;{default_op, Operation}&lt;/code&gt; ，其中 &lt;code&gt;Operation&lt;/code&gt; 是 &lt;code&gt;skip_tables&lt;/code&gt; ， &lt;code&gt;clear_tables&lt;/code&gt; ， &lt;code&gt;keep_tables&lt;/code&gt; 或 &lt;code&gt;recreate_tables&lt;/code&gt; 之一。默认操作指定要在备份中的表上使用的未在任何提及的列表中指定的操作。如果省略，则使用 &lt;code&gt;clear_tables&lt;/code&gt; 操作。</target>
        </trans-unit>
        <trans-unit id="439f11bb81ab22b6ff33534bd040c39bd3fbf26d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{default_op, Operation}&lt;/code&gt;, where &lt;code&gt;Operation&lt;/code&gt; is one of the operations &lt;code&gt;skip_tables&lt;/code&gt;, &lt;code&gt;clear_tables&lt;/code&gt;, &lt;code&gt;keep_tables&lt;/code&gt;, or &lt;code&gt;recreate_tables&lt;/code&gt;. The default operation specifies which operation is to be used on tables from the backup that are not specified in any of the previous lists. If omitted, the operation &lt;code&gt;clear_tables&lt;/code&gt; is used.</source>
          <target state="translated">&lt;code&gt;{default_op, Operation}&lt;/code&gt; ，其中 &lt;code&gt;Operation&lt;/code&gt; 是操作 &lt;code&gt;skip_tables&lt;/code&gt; ， &lt;code&gt;clear_tables&lt;/code&gt; ， &lt;code&gt;keep_tables&lt;/code&gt; 或 &lt;code&gt;recreate_tables&lt;/code&gt; 之一。默认操作指定要在备份中的表上使用的操作，该操作在先前列表中未指定。如果省略，则使用 &lt;code&gt;clear_tables&lt;/code&gt; 操作。</target>
        </trans-unit>
        <trans-unit id="8aee08a84e0c2a665df3ef43050a44bfe28b647e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{disc_copies, NodeList}&lt;/code&gt;, where &lt;code&gt;NodeList&lt;/code&gt; is a list of the nodes where this table is to reside on disc.</source>
          <target state="translated">&lt;code&gt;{disc_copies, NodeList}&lt;/code&gt; ，其中 &lt;code&gt;NodeList&lt;/code&gt; 是此表将驻留在磁盘上的节点的列表。</target>
        </trans-unit>
        <trans-unit id="74887bcd48a16968b059dfd44f0ae8dfb337f16d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{disc_copies, Nodelist}&lt;/code&gt;, where &lt;code&gt;Nodelist&lt;/code&gt; is a list of the nodes where this table is supposed to have disc copies. If a table replica is of type &lt;code&gt;disc_copies&lt;/code&gt;, all write operations on this particular replica of the table are written to disc and to the RAM copy of the table.</source>
          <target state="translated">&lt;code&gt;{disc_copies, Nodelist}&lt;/code&gt; ，其中 &lt;code&gt;Nodelist&lt;/code&gt; 是该表应具有光盘副本的节点的列表。如果表副本的类型为 &lt;code&gt;disc_copies&lt;/code&gt; ，则对该表的特定副本的所有写操作都将写入磁盘和表的RAM副本中。</target>
        </trans-unit>
        <trans-unit id="fe337b4b8e9025c8055145973cdc5c502eae324f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{disc_only_copies, NodeList}&lt;/code&gt;. These table replicas are stored on disc only and are therefore slower to access. However, a disc-only replica consumes less memory than a table replica of the other two storage types.</source>
          <target state="translated">&lt;code&gt;{disc_only_copies, NodeList}&lt;/code&gt; 。这些表副本仅存储在磁盘上，因此访问速度较慢。但是，仅光盘副本消耗的内存少于其他两种存储类型的表副本。</target>
        </trans-unit>
        <trans-unit id="603ef39723034c90e7a6f893a837cadc3f270784" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{disc_only_copies, Nodelist}&lt;/code&gt;, where &lt;code&gt;Nodelist&lt;/code&gt; is a list of the nodes where this table is supposed to have &lt;code&gt;disc_only_copies&lt;/code&gt;. A disc only table replica is kept on disc only and unlike the other replica types, the contents of the replica do not reside in RAM. These replicas are considerably slower than replicas held in RAM.</source>
          <target state="translated">&lt;code&gt;{disc_only_copies, Nodelist}&lt;/code&gt; ，其中 &lt;code&gt;Nodelist&lt;/code&gt; 是该表应具有 &lt;code&gt;disc_only_copies&lt;/code&gt; 的节点的列表。仅光盘表副本仅保留在光盘上，并且与其他副本类型不同，副本内容不驻留在RAM中。这些副本比RAM中保存的副本要慢得多。</target>
        </trans-unit>
        <trans-unit id="c4038658dfedacbebbb43ce13a2cb3105e6b6181" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{done, Result, RestChars}&lt;/code&gt; when enough data is read. In this case &lt;code&gt;Result&lt;/code&gt; is sent to the client and &lt;code&gt;RestChars&lt;/code&gt; is kept in the I/O server as a buffer for later input.</source>
          <target state="translated">&lt;code&gt;{done, Result, RestChars}&lt;/code&gt; 读取足够的数据后，{完成，结果，RestChars}。在这种情况下， &lt;code&gt;RestChars&lt;/code&gt; &lt;code&gt;Result&lt;/code&gt; 发送到客户端，并将RestChars保留在I / O服务器中，作为以后输入的缓冲区。</target>
        </trans-unit>
        <trans-unit id="5be2ad09ee53b2e5cfec496d377fadb2ac7303c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{drop, N}&lt;/code&gt; if IP tracer is used (see &lt;code&gt;dbg:trace_port/2&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;{drop, N}&lt;/code&gt; 如果使用IP跟踪程序）（请参阅 &lt;code&gt;dbg:trace_port/2&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="b3c7334d9b980c3e17dec4e1eeca3188027f3c41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{encoding, unicode | latin1}&lt;/code&gt; is supported by both the standard shell (&lt;code&gt;group.erl&lt;/code&gt; including &lt;code&gt;werl&lt;/code&gt; on Windows), the 'oldshell' (&lt;code&gt;user.erl&lt;/code&gt;), and the file I/O servers.</source>
          <target state="translated">&lt;code&gt;{encoding, unicode | latin1}&lt;/code&gt; 标准外壳程序（在Windows上为 &lt;code&gt;group.erl&lt;/code&gt; ,包括 &lt;code&gt;werl&lt;/code&gt; ），&amp;ldquo; oldshell&amp;rdquo;（ &lt;code&gt;user.erl&lt;/code&gt; ）和文件I / O服务器均支持latin1}。</target>
        </trans-unit>
        <trans-unit id="17d0db6dbc541253b1e540aec7e65b6895d09c3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{encoding, utf8}&lt;/code&gt; has the same effect as &lt;code&gt;{encoding, unicode}&lt;/code&gt; on files.</source>
          <target state="translated">&lt;code&gt;{encoding, utf8}&lt;/code&gt; &lt;code&gt;{encoding, unicode}&lt;/code&gt; 对文件的作用与{encoding，unicode}相同。</target>
        </trans-unit>
        <trans-unit id="97910211bcf2b1dc14a5ea5d92f742e0cd7101c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{env, Vars}&lt;/code&gt;, representing the input environment of the subtree.</source>
          <target state="translated">&lt;code&gt;{env, Vars}&lt;/code&gt; ，表示子树的输入环境。</target>
        </trans-unit>
        <trans-unit id="8d82ffb735ce5cce92124613e85e46968f466588" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{eof,LOCATION}&lt;/code&gt;, denoting an end-of-stream encountered before a complete form had been parsed. The word &lt;code&gt;LOCATION&lt;/code&gt; represents an integer, and denotes the number of the last line in the source file.</source>
          <target state="translated">&lt;code&gt;{eof,LOCATION}&lt;/code&gt; ，表示在解析完整表格之前遇到的流结束。单词 &lt;code&gt;LOCATION&lt;/code&gt; 表示一个整数，表示源文件中最后一行的编号。</target>
        </trans-unit>
        <trans-unit id="d517e0e338452077fe358fb37851f3a9dfe56068" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{error, Reason}&lt;/code&gt; = transfer failed.</source>
          <target state="translated">&lt;code&gt;{error, Reason}&lt;/code&gt; =传输失败。</target>
        </trans-unit>
        <trans-unit id="c91554869907c5b7202c13894f459e33f47242e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{error, Reason}&lt;/code&gt; if an error occurred when finding or evaluating the script</source>
          <target state="translated">&lt;code&gt;{error, Reason}&lt;/code&gt; 如果在查找或评估脚本时发生错误</target>
        </trans-unit>
        <trans-unit id="4a79489a6baf49c39e888ffb197b871bfd5f5580" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{error, already_started, NodeName}&lt;/code&gt; if the node with the specified name is already started on a specified host.</source>
          <target state="translated">&lt;code&gt;{error, already_started, NodeName}&lt;/code&gt; 如果已在指定主机上启动了具有指定名称的节点，则为{错误，已经开始，节点名}。</target>
        </trans-unit>
        <trans-unit id="8b06ddf348b8496d1396a127437e70f164243c87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{error, closed}&lt;/code&gt; if &lt;code&gt;ListenSocket&lt;/code&gt; is closed</source>
          <target state="translated">&lt;code&gt;{error, closed}&lt;/code&gt; 如果 &lt;code&gt;ListenSocket&lt;/code&gt; 关闭</target>
        </trans-unit>
        <trans-unit id="59004474b720e6dadcb6e0794d09525f3c0a9677" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{error, not_alive, NodeName}&lt;/code&gt; if the node on which &lt;code&gt;&lt;a href=&quot;#start-3&quot;&gt;ct_slave:start/3&lt;/a&gt;&lt;/code&gt; is called, is not alive. Notice that &lt;code&gt;NodeName&lt;/code&gt; is the name of the current node in this case.</source>
          <target state="translated">&lt;code&gt;{error, not_alive, NodeName}&lt;/code&gt; 如果调用了 &lt;code&gt;&lt;a href=&quot;#start-3&quot;&gt;ct_slave:start/3&lt;/a&gt;&lt;/code&gt; 的节点未激活，则为{error，not_alive，NodeName}。注意，在这种情况下， &lt;code&gt;NodeName&lt;/code&gt; 是当前节点的名称。</target>
        </trans-unit>
        <trans-unit id="4b3164d5b7b3eef93a67b314572e42b89115695f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{error, request}&lt;/code&gt; must be returned if the request is not recognized:</source>
          <target state="translated">&lt;code&gt;{error, request}&lt;/code&gt; 如果无法识别请求，则必须返回{error，request}：</target>
        </trans-unit>
        <trans-unit id="1d2c894c7d8bfc091d3716c83a64be3d3d34828a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{error, started_not_connected, NodeName}&lt;/code&gt; if the node is started, but not connected to the master node.</source>
          <target state="translated">&lt;code&gt;{error, started_not_connected, NodeName}&lt;/code&gt; 如果该节点已启动但未连接到主节点）。</target>
        </trans-unit>
        <trans-unit id="a56a0cf6cc42f97987aef26775a0c84d1908b89c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{error, system_limit}&lt;/code&gt; if all available ports in the Erlang emulator are in use</source>
          <target state="translated">&lt;code&gt;{error, system_limit}&lt;/code&gt; 如果使用了Erlang仿真器中的所有可用端口，则为{error，system_limit}</target>
        </trans-unit>
        <trans-unit id="6a51648378a64c49a67e0097e1bee7ecbe71eb05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{error, timeout}&lt;/code&gt; if no connection is established within the specified time</source>
          <target state="translated">&lt;code&gt;{error, timeout}&lt;/code&gt; 如果在指定时间内未建立连接</target>
        </trans-unit>
        <trans-unit id="55923bc05b6e7f69a3d0ea4630f2b2759c62eef9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{error, {Error, ErrorDetails}}&lt;/code&gt; - if the callback module fails to proceed with the specified configuration parameters.</source>
          <target state="translated">&lt;code&gt;{error, {Error, ErrorDetails}}&lt;/code&gt; -如果回调模块无法继续使用指定的配置参数。</target>
        </trans-unit>
        <trans-unit id="0a17ec2aabff13a6e5f93cd42dd7eb5e33ee3a74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{error, {nofile, FileName}}&lt;/code&gt; - there is no file with the specified name in the current directory.</source>
          <target state="translated">&lt;code&gt;{error, {nofile, FileName}}&lt;/code&gt; -当前目录中没有具有指定名称的文件。</target>
        </trans-unit>
        <trans-unit id="65e74983593dd76aa96d9aff6b27a0cd3aa84c2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{error, {wrong_config, ConfigString}}&lt;/code&gt; - the configuration string is wrong.</source>
          <target state="translated">&lt;code&gt;{error, {wrong_config, ConfigString}}&lt;/code&gt; -配置字符串错误。</target>
        </trans-unit>
        <trans-unit id="0121267dfde3f01426807503e7723e7c06a7674d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{error,BeamFile}&lt;/code&gt; is returned if the compiled code can not be loaded on the node.</source>
          <target state="translated">&lt;code&gt;{error,BeamFile}&lt;/code&gt; 如果无法将编译后的代码加载到节点上，则会返回{error，BeamFile}。</target>
        </trans-unit>
        <trans-unit id="aa83438e6d1a25a32b408a7beba77b7cd4df3e6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{estimated_no_objects,&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type-no_slots&quot;&gt;no_slots()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;}&lt;/code&gt; - Equivalent to option &lt;code&gt;min_no_slots&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{estimated_no_objects,&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#type-no_slots&quot;&gt;no_slots()&lt;/a&gt;&lt;/code&gt; &lt;code&gt;}&lt;/code&gt; -等效于 &lt;code&gt;min_no_slots&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="200fce4da7b83757332ce6829614f3ac02939de6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{failover,Node}&lt;/code&gt; if the application is distributed and started at the current node because of a failover from &lt;code&gt;Node&lt;/code&gt;, and the application specification key &lt;code&gt;start_phases /= undefined&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{failover,Node}&lt;/code&gt; 如果应用程序被分发，并在因为从故障转移的当前节点开始 &lt;code&gt;Node&lt;/code&gt; ，并且应用程序规范键 &lt;code&gt;start_phases /= undefined&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b30125af0706579a3e7fa51fda8d0e3c2b5b1ad3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{false, NewState:any()}&lt;/code&gt; if the user or password is invalid</source>
          <target state="translated">&lt;code&gt;{false, NewState:any()}&lt;/code&gt; 如果用户名或密码无效，则为{false，NewState：any（）}</target>
        </trans-unit>
        <trans-unit id="5762d8052930e72e368baa33f643ab2140ea752b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{file,&lt;/code&gt;&lt;code&gt; file:name()&lt;/code&gt;&lt;code&gt;}&lt;/code&gt; - The name of the file to be opened. Defaults to the table name.</source>
          <target state="translated">&lt;code&gt;{file,&lt;/code&gt; &lt;code&gt; file:name()&lt;/code&gt; &lt;code&gt;}&lt;/code&gt; -要打开的文件的名称。默认为表名。</target>
        </trans-unit>
        <trans-unit id="61254af034595b7987534813de1b2e088c3e46d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{file_error, FileName, file:posix()}&lt;/code&gt; - For an explanation of &lt;code&gt;file:posix()&lt;/code&gt;, see &lt;code&gt;file(3)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{file_error, FileName, file:posix()}&lt;/code&gt; -有关 &lt;code&gt;file:posix()&lt;/code&gt; 的说明，请参见 &lt;code&gt;file(3)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d330e6d681a7698aeede8f6a5a2d388d0dea2059" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{file_size, integer() &amp;gt;= 0}}&lt;/code&gt; - The file size, in bytes.</source>
          <target state="translated">&lt;code&gt;{file_size, integer() &amp;gt;= 0}}&lt;/code&gt; -文件大小，以字节为单位。</target>
        </trans-unit>
        <trans-unit id="d682226720290e3b12db5f8b8a41cb8bfa06e623" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{filename,&lt;/code&gt;&lt;code&gt; file:name()&lt;/code&gt;&lt;code&gt;}&lt;/code&gt; - The name of the file where objects are stored.</source>
          <target state="translated">&lt;code&gt;{filename,&lt;/code&gt; &lt;code&gt; file:name()&lt;/code&gt; &lt;code&gt;}&lt;/code&gt; -存储对象的文件名。</target>
        </trans-unit>
        <trans-unit id="666c55195e1ac58921fe07e4247412bd27c34b60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{format, Format}&lt;/code&gt; - Specifies the format of the objects returned by function &lt;code&gt;InitFun&lt;/code&gt;. If &lt;code&gt;Format&lt;/code&gt; is &lt;code&gt;term&lt;/code&gt; (the default), &lt;code&gt;InitFun&lt;/code&gt; is assumed to return a list of tuples. If &lt;code&gt;Format&lt;/code&gt; is &lt;code&gt;bchunk&lt;/code&gt;, &lt;code&gt;InitFun&lt;/code&gt; is assumed to return &lt;code&gt;Data&lt;/code&gt; as returned by &lt;code&gt;&lt;a href=&quot;#bchunk-2&quot;&gt;bchunk/2&lt;/a&gt;&lt;/code&gt;. This option overrides option &lt;code&gt;min_no_slots&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{format, Format}&lt;/code&gt; -指定函数 &lt;code&gt;InitFun&lt;/code&gt; 返回的对象的格式。如果 &lt;code&gt;Format&lt;/code&gt; 为 &lt;code&gt;term&lt;/code&gt; （默认值），则假定 &lt;code&gt;InitFun&lt;/code&gt; 返回元组列表。如果 &lt;code&gt;Format&lt;/code&gt; 为 &lt;code&gt;bchunk&lt;/code&gt; ，则假定 &lt;code&gt;InitFun&lt;/code&gt; 返回 &lt;code&gt;&lt;a href=&quot;#bchunk-2&quot;&gt;bchunk/2&lt;/a&gt;&lt;/code&gt; 返回的 &lt;code&gt;Data&lt;/code&gt; 。此选项将覆盖选项 &lt;code&gt;min_no_slots&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0c96e602ae8d0bde4d2be0765fd1bdbe0116dee7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{free, Vars}&lt;/code&gt;, representing the free variables in the subtree.</source>
          <target state="translated">&lt;code&gt;{free, Vars}&lt;/code&gt; ，表示子树中的自由变量。</target>
        </trans-unit>
        <trans-unit id="8458cd58e8f0972318e7f564c11dcee8535e5156" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{genErr, Column}&lt;/code&gt; where &lt;code&gt;Column&lt;/code&gt; denotes the column that caused the error. &lt;code&gt;Column&lt;/code&gt; must be one of the columns in the &lt;code&gt;Cols&lt;/code&gt; list. Note that this should be an internal processing error, e.g. a caused by a programing fault somewhere. If some column does not exist, you must return the next accessible element (or &lt;code&gt;endOfTable&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;{genErr, Column}&lt;/code&gt; 其中 &lt;code&gt;Column&lt;/code&gt; 表示引起错误的列。 &lt;code&gt;Column&lt;/code&gt; 必须在一列的 &lt;code&gt;Cols&lt;/code&gt; 列表。请注意，这应该是内部处理错误，例如，由于某个地方的编程错误引起的错误。如果某些列不存在，则必须返回下一个可访问元素（或 &lt;code&gt;endOfTable&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="5bb5448db50d1017d9b3a7fbc58a1a1e7a674abe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{global,GlobalName}&lt;/code&gt;, if the &lt;code&gt;gen_server&lt;/code&gt; process is globally registered</source>
          <target state="translated">&lt;code&gt;{global,GlobalName}&lt;/code&gt; ，如果 &lt;code&gt;gen_server&lt;/code&gt; 进程已全局注册</target>
        </trans-unit>
        <trans-unit id="898383d1bed9531809697ca05b4b67bc8fb4fe81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{global,GlobalName}&lt;/code&gt;, if the event manager is globally registered</source>
          <target state="translated">&lt;code&gt;{global,GlobalName}&lt;/code&gt; ，如果事件管理器已全局注册</target>
        </trans-unit>
        <trans-unit id="be7b3294d93fe45c4ec2a39e21a03192a1daa55f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{global,Name}&lt;/code&gt;, if the supervisor is globally registered</source>
          <target state="translated">&lt;code&gt;{global,Name}&lt;/code&gt; ，如果主管是全局注册的</target>
        </trans-unit>
        <trans-unit id="2e415dbfbb7c60fef1e32c9683d6b971362579ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{hash, Hash}&lt;/code&gt; - Describes which BIF is used to calculate the hash values of the objects stored in the Dets table. Possible values of &lt;code&gt;Hash&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;{hash, Hash}&lt;/code&gt; -描述哪个BIF用于计算Dets表中存储的对象的哈希值。 &lt;code&gt;Hash&lt;/code&gt; 值的可能值：</target>
        </trans-unit>
        <trans-unit id="a374ab9eafc23e09b6bb64b12ce7c745aa9b59ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{index, AttributeNameList}&lt;/code&gt;, where &lt;code&gt;AttributeNameList&lt;/code&gt; is a list of atoms specifying the names of the attributes &lt;code&gt;Mnesia&lt;/code&gt; is to build and maintain. An index table exists for every element in the list. The first field of a &lt;code&gt;Mnesia&lt;/code&gt; record is the key and thus need no extra index.</source>
          <target state="translated">&lt;code&gt;{index, AttributeNameList}&lt;/code&gt; ，其中 &lt;code&gt;AttributeNameList&lt;/code&gt; 是原子列表，用于指定 &lt;code&gt;Mnesia&lt;/code&gt; 将要构建和维护的属性的名称。列表中的每个元素都有一个索引表。 &lt;code&gt;Mnesia&lt;/code&gt; 记录的第一个字段是关键，因此不需要额外的索引。</target>
        </trans-unit>
        <trans-unit id="37ef0473b803e1cf4873aa4ba9ea84d5d68d8a5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{index, Intlist}&lt;/code&gt;, where &lt;code&gt;Intlist&lt;/code&gt; is a list of attribute names (atoms) or record fields for which Mnesia is to build and maintain an extra index table. The &lt;code&gt;qlc&lt;/code&gt; query compiler &lt;strong&gt;may&lt;/strong&gt; be able to optimize queries if there are indexes available.</source>
          <target state="translated">&lt;code&gt;{index, Intlist}&lt;/code&gt; ，其中 &lt;code&gt;Intlist&lt;/code&gt; 是Mnesia要为其建立和维护额外索引表的属性名称（原子）或记录字段的列表。在 &lt;code&gt;qlc&lt;/code&gt; 查询编译器&lt;strong&gt;可能&lt;/strong&gt;如果有可用的索引可以优化查询。</target>
        </trans-unit>
        <trans-unit id="46beb7ad494db8c5245b1cc9f5e852fbc349de51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{join,&amp;nbsp;lookup}&lt;/code&gt; invokes the lookup join method.</source>
          <target state="translated">&lt;code&gt;{join,&amp;nbsp;lookup}&lt;/code&gt; 调用查找联接方法。</target>
        </trans-unit>
        <trans-unit id="05d1b0b67c54e005285e6d55489a5ca39a5ce417" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{join,&amp;nbsp;merge}&lt;/code&gt; invokes the merge join method.</source>
          <target state="translated">&lt;code&gt;{join,&amp;nbsp;merge}&lt;/code&gt; 调用merge join方法。</target>
        </trans-unit>
        <trans-unit id="de258ee707f364e898d12e21f0faba7c3d3edae6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{join,&amp;nbsp;nested_loop}&lt;/code&gt; invokes the method of matching every pair of objects from two handles. This method is mostly very slow.</source>
          <target state="translated">&lt;code&gt;{join,&amp;nbsp;nested_loop}&lt;/code&gt; 调用从两个句柄匹配每对对象的方法。此方法通常非常慢。</target>
        </trans-unit>
        <trans-unit id="c6445e46b5a4c24aba46879d1ed574bc4afce85a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{keep_tables, TabList}&lt;/code&gt;, where &lt;code&gt;TabList&lt;/code&gt; is a list of tables that is not to be cleared before the records from the backup are inserted. That is, the records in the backup are added to the records in the table. Schema information about the tables is not cleared or read from the backup.</source>
          <target state="translated">&lt;code&gt;{keep_tables, TabList}&lt;/code&gt; ，其中 &lt;code&gt;TabList&lt;/code&gt; 是在插入来自备份的记录之前不清除的表的列表。即，备份中的记录将添加到表中的记录。有关表的架构信息不会清除或从备份中读取。</target>
        </trans-unit>
        <trans-unit id="59362df85e2f4b8376c9a00771535ddc7c238af0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{keep_tables, TableList}&lt;/code&gt;, where &lt;code&gt;TableList&lt;/code&gt; is a list of tables, which is not to be cleared before the records from the backup are inserted. That is, the records in the backup are added to the records in the table. Schema information about the tables is not cleared or read from the backup.</source>
          <target state="translated">&lt;code&gt;{keep_tables, TableList}&lt;/code&gt; ，其中 &lt;code&gt;TableList&lt;/code&gt; 是表的列表，在插入来自备份的记录之前，不会清除这些表。即，备份中的记录将添加到表中的记录。有关表的架构信息不会清除或从备份中读取。</target>
        </trans-unit>
        <trans-unit id="4f8a88b48bda64b8159607e75426a57b42af3aed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{keypos,&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type-keypos&quot;&gt;keypos()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;}&lt;/code&gt; - The key position.</source>
          <target state="translated">&lt;code&gt;{keypos,&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#type-keypos&quot;&gt;keypos()&lt;/a&gt;&lt;/code&gt; &lt;code&gt;}&lt;/code&gt; -关键位置。</target>
        </trans-unit>
        <trans-unit id="ec5f91f331ed2e5e7166be88b1a864aa8121c489" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{keypos,&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type-keypos&quot;&gt;keypos()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;}&lt;/code&gt; - The position of the element of each object to be used as key. Defaults to 1. The ability to explicitly state the key position is most convenient when we want to store Erlang records in which the first position of the record is the name of the record type.</source>
          <target state="translated">&lt;code&gt;{keypos,&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#type-keypos&quot;&gt;keypos()&lt;/a&gt;&lt;/code&gt; &lt;code&gt;}&lt;/code&gt; -每个用作键的对象的元素位置。默认值为1。当我们要存储Erlang记录（其中记录的第一个位置是记录类型的名称）时，显式声明键位置的功能最为方便。</target>
        </trans-unit>
        <trans-unit id="e88ca11648226ceeacd78c7d23ae7dc74e9a92d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{load_order, Integer}&lt;/code&gt;. The load order priority is by default &lt;code&gt;0&lt;/code&gt; (zero) but can be set to any integer. The tables with the highest load order priority are loaded first at startup.</source>
          <target state="translated">&lt;code&gt;{load_order, Integer}&lt;/code&gt; 。默认情况下，加载顺序优先级为 &lt;code&gt;0&lt;/code&gt; （零），但可以设置为任何整数。加载顺序优先级最高的表在启动时首先加载。</target>
        </trans-unit>
        <trans-unit id="45cabf9a380f9d7e33d05677673b256557b6baf8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{local_content, Bool}&lt;/code&gt;, where &lt;code&gt;Bool&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;. Default is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{local_content, Bool}&lt;/code&gt; ，其中 &lt;code&gt;Bool&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; 或 &lt;code&gt;false&lt;/code&gt; 。默认值为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="81d7215c5e595472b6ed53c65cb274e4046851a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{local_content, true}&lt;/code&gt;. When an application needs a table whose contents is to be locally unique on each node, &lt;code&gt;local_content&lt;/code&gt; tables can be used. The name of the table is known to all &lt;code&gt;Mnesia&lt;/code&gt; nodes, but its contents is unique for each node. Access to this type of table must be done locally.</source>
          <target state="translated">&lt;code&gt;{local_content, true}&lt;/code&gt; 。当应用程序需要一个表，其内容在每个节点上在本地都是唯一的时，可以使用 &lt;code&gt;local_content&lt;/code&gt; 表。该表的名称对于所有 &lt;code&gt;Mnesia&lt;/code&gt; 节点都是已知的，但是其内容对于每个节点都是唯一的。对这种类型的表的访问必须在本地完成。</target>
        </trans-unit>
        <trans-unit id="2ad5f430af8a7ecc9f27e3ebd9e41b01243f6480" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{lock, Lock}&lt;/code&gt;, where &lt;code&gt;lock&lt;/code&gt; can be &lt;code&gt;read&lt;/code&gt; or &lt;code&gt;write&lt;/code&gt;. Default is &lt;code&gt;read&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{lock, Lock}&lt;/code&gt; ，其中可以 &lt;code&gt;read&lt;/code&gt; 或 &lt;code&gt;write&lt;/code&gt; &lt;code&gt;lock&lt;/code&gt; 。默认为 &lt;code&gt;read&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9199b07800b6b28d94384629284800525b274b89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{majority, Flag}&lt;/code&gt;, where &lt;code&gt;Flag&lt;/code&gt; must be a boolean. If &lt;code&gt;true&lt;/code&gt;, any (non-dirty) update to the table is aborted, unless a majority of the table replicas are available for the commit. When used on a fragmented table, all fragments are given the same the same majority setting.</source>
          <target state="translated">&lt;code&gt;{majority, Flag}&lt;/code&gt; ，其中 &lt;code&gt;Flag&lt;/code&gt; 必须为布尔值。如果为 &lt;code&gt;true&lt;/code&gt; ，则对表的任何（非脏的）更新都将中止，除非大多数表副本可用于提交。在片段表上使用时，所有片段均具有相同的多数设置。</target>
        </trans-unit>
        <trans-unit id="4d454df022f12f6bf2e6223a2b2920b124ad9bfd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{max,MaxTabs}&lt;/code&gt;, where &lt;code&gt;MaxTabs&lt;/code&gt; is a list of tables that are to be included in the checkpoint. Default is &lt;code&gt;[]&lt;/code&gt; (empty list). For these tables, the redundancy is maximized. The old content of the table is retained in the checkpoint retainer when the main table is updated by the applications. The checkpoint is more fault tolerant if the tables have several replicas. When new replicas are added by the schema manipulation function &lt;code&gt;&lt;a href=&quot;mnesia#add_table_copy-3&quot;&gt;mnesia:add_table_copy/3&lt;/a&gt;&lt;/code&gt; it also attaches a local checkpoint retainer.</source>
          <target state="translated">&lt;code&gt;{max,MaxTabs}&lt;/code&gt; ，其中 &lt;code&gt;MaxTabs&lt;/code&gt; 是要包含在检查点中的表的列表。默认值为 &lt;code&gt;[]&lt;/code&gt; （空列表）。对于这些表，冗余被最大化。当应用程序更新主表时，表的旧内容将保留在检查点保留器中。如果表具有多个副本，则检查点具有更高的容错能力。当通过模式操作功能 &lt;code&gt;&lt;a href=&quot;mnesia#add_table_copy-3&quot;&gt;mnesia:add_table_copy/3&lt;/a&gt;&lt;/code&gt; 添加新副本时，它还会附加一个本地检查点保持器。</target>
        </trans-unit>
        <trans-unit id="45e2bcb2dca4f96ff77291704164fd2b00b283a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{max,MaxTabs}&lt;/code&gt;. &lt;code&gt;MaxTabs&lt;/code&gt; is a list of tables that are to be included in the checkpoint. Default is &lt;code&gt;[]&lt;/code&gt;. For these tables, the redundancy is maximized and checkpoint information is retained together with all replicas. The checkpoint becomes more fault tolerant if the tables have several replicas. When a new replica is added by the schema manipulation function &lt;code&gt;mnesia:add_table_copy/3&lt;/code&gt;, a retainer is also attached automatically.</source>
          <target state="translated">&lt;code&gt;{max,MaxTabs}&lt;/code&gt; 。 &lt;code&gt;MaxTabs&lt;/code&gt; 是要包含在检查点中的表的列表。默认值为 &lt;code&gt;[]&lt;/code&gt; 。对于这些表，将最大限度地提高冗余度，并将检查点信息与所有副本一起保留。如果表具有多个副本，则检查点将具有更高的容错能力。通过模式操作功能 &lt;code&gt;mnesia:add_table_copy/3&lt;/code&gt; 添加新副本时，还会自动附加一个保持器。</target>
        </trans-unit>
        <trans-unit id="0b6884f951c795e82aa17b73c9ff84c003d6dec9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{max_no_slots,&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type-no_slots&quot;&gt;no_slots()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;}&lt;/code&gt; - The maximum number of slots to be used. Defaults to 32 M, which is the maximal value. Notice that a higher value can increase the table fragmentation, and a smaller value can decrease the fragmentation, at the expense of execution time.</source>
          <target state="translated">&lt;code&gt;{max_no_slots,&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#type-no_slots&quot;&gt;no_slots()&lt;/a&gt;&lt;/code&gt; &lt;code&gt;}&lt;/code&gt; -要使用的最大插槽数。默认值为32 M，这是最大值。请注意，较高的值会增加表的碎片，而较小的值会减少表的碎片，但会浪费执行时间。</target>
        </trans-unit>
        <trans-unit id="bcffa11391f0042a4f7910a10cf70f2b6fd9a0b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{memory, NoWords}&lt;/code&gt;, where &lt;code&gt;NoWords&lt;/code&gt; is the number of words allocated to the ETS tables.</source>
          <target state="translated">&lt;code&gt;{memory, NoWords}&lt;/code&gt; ，其中 &lt;code&gt;NoWords&lt;/code&gt; 是分配给ETS表的单词数。</target>
        </trans-unit>
        <trans-unit id="02ebec2632a45cfdaac9924ad0c858a992edf6bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{memory, integer() &amp;gt;= 0}&lt;/code&gt; - The file size, in bytes. The same value is associated with item &lt;code&gt;file_size&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{memory, integer() &amp;gt;= 0}&lt;/code&gt; -文件大小，以字节为单位。相同的值与文件 &lt;code&gt;file_size&lt;/code&gt; 关联。</target>
        </trans-unit>
        <trans-unit id="3da93d800f85fca3fbe45f3a9805a5a3b1ee89af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{min,MinTabs}&lt;/code&gt;, where &lt;code&gt;MinTabs&lt;/code&gt; is a list of tables that are to be included in the checkpoint. Default is &lt;code&gt;[]&lt;/code&gt;. For these tables, the redundancy is minimized, and there is to be single checkpoint retainer per table, preferably at the local node.</source>
          <target state="translated">&lt;code&gt;{min,MinTabs}&lt;/code&gt; ，其中 &lt;code&gt;MinTabs&lt;/code&gt; 是要包含在检查点中的表的列表。默认值为 &lt;code&gt;[]&lt;/code&gt; 。对于这些表，冗余被最小化，并且每个表最好有一个检查点保持器，最好在本地节点。</target>
        </trans-unit>
        <trans-unit id="5b7451c21f760cfc772a8d65ce76366cf97a1883" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{min,MinTabs}&lt;/code&gt;. &lt;code&gt;MinTabs&lt;/code&gt; is a list of tables that are to be included in the checkpoint. Default is []. For these tables, the redundancy is minimized and the checkpoint information is only retained with one replica, preferably on the local node.</source>
          <target state="translated">&lt;code&gt;{min,MinTabs}&lt;/code&gt; 。 &lt;code&gt;MinTabs&lt;/code&gt; 是要包含在检查点中的表的列表。默认值为[]。对于这些表，冗余被最小化，并且检查点信息仅与一个副本一起保留，最好保留在本地节点上。</target>
        </trans-unit>
        <trans-unit id="6a9e24381ea0169c10a960dacee071aabe257b3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{min_no_slots, no_slots()}&lt;/code&gt; - Specifies the estimated number of different keys to be stored in the table. The &lt;code&gt;open_file/2&lt;/code&gt; option with the same name is ignored, unless the table is created, in which case performance can be enhanced by supplying an estimate when initializing the table.</source>
          <target state="translated">&lt;code&gt;{min_no_slots, no_slots()}&lt;/code&gt; -指定要存储在表中的不同键的估计数量。除非创建表，否则将忽略具有相同名称的 &lt;code&gt;open_file/2&lt;/code&gt; 选项，在这种情况下，可以通过在初始化表时提供估计来提高性能。</target>
        </trans-unit>
        <trans-unit id="f7a6df2c0d8e4ffafd7e10883a8fc5151f6fa1c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{min_no_slots,&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type-no_slots&quot;&gt;no_slots()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;}&lt;/code&gt; - Application performance can be enhanced with this flag by specifying, when the table is created, the estimated number of different keys to be stored in the table. Defaults to 256, which is the minimum value.</source>
          <target state="translated">&lt;code&gt;{min_no_slots,&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#type-no_slots&quot;&gt;no_slots()&lt;/a&gt;&lt;/code&gt; &lt;code&gt;}&lt;/code&gt; -通过在创建表时指定要存储在表中的不同键的估计数量，可以使用此标志来增强应用程序性能。默认值为256，这是最小值。</target>
        </trans-unit>
        <trans-unit id="020b2acf13ecbe155ab504393c96f3d7c2d4a6df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{mnesia_activity_event, Event}&lt;/code&gt; for activity events</source>
          <target state="translated">&lt;code&gt;{mnesia_activity_event, Event}&lt;/code&gt; 用于活动事件</target>
        </trans-unit>
        <trans-unit id="5e49b567af9fc35b3c423763841b19db3e1220d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{mnesia_dir, AlternateDir}&lt;/code&gt;. For semantics, see &lt;code&gt;mnesia:install_fallback/2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{mnesia_dir, AlternateDir}&lt;/code&gt; 。有关语义，请参见 &lt;code&gt;mnesia:install_fallback/2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fa59ecf754a10370769d675585d0c179840b91f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{mnesia_dir, AlternateDir}&lt;/code&gt;. This argument is only valid if the scope of the installation is &lt;code&gt;local&lt;/code&gt;. Normally the installation of a fallback is targeted to the Mnesia directory, as configured with configuration parameter &lt;code&gt;-mnesia dir&lt;/code&gt;. But by explicitly supplying an &lt;code&gt;AlternateDir&lt;/code&gt;, the fallback is installed there regardless of the Mnesia directory configuration parameter setting. After installation of a fallback on an alternative Mnesia directory, that directory is fully prepared for use as an active Mnesia directory.</source>
          <target state="translated">&lt;code&gt;{mnesia_dir, AlternateDir}&lt;/code&gt; 。仅当安装范围是 &lt;code&gt;local&lt;/code&gt; 此参数才有效。通常，后备安装的目标是Mnesia目录，如使用配置参数 &lt;code&gt;-mnesia dir&lt;/code&gt; 配置的。但是通过显式提供 &lt;code&gt;AlternateDir&lt;/code&gt; ，无论Mnesia目录配置参数设置如何，都将在其后备安装。在备用Mnesia目录上安装回退后，该目录已准备就绪，可以用作活动Mnesia目录。</target>
        </trans-unit>
        <trans-unit id="15a6e67631f7451becddab09454689ce38403f84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{mnesia_system_event, Event}&lt;/code&gt; for system events</source>
          <target state="translated">&lt;code&gt;{mnesia_system_event, Event}&lt;/code&gt; 用于系统事件</target>
        </trans-unit>
        <trans-unit id="20a9c5c4f6b650e83a5bfb3d963fb52a5c24deb8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{mnesia_table_event, Event}&lt;/code&gt; for table events</source>
          <target state="translated">&lt;code&gt;{mnesia_table_event, Event}&lt;/code&gt; 用于表事件</target>
        </trans-unit>
        <trans-unit id="d89dde70a37a776f24ba4730aff026e25d8d6fc3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{module, BackupMod}&lt;/code&gt;. All accesses of the backup media are performed through a callback module named &lt;code&gt;BackupMod&lt;/code&gt;. Argument &lt;code&gt;Opaque&lt;/code&gt; is forwarded to the callback module, which can interpret it as it wishes. The default callback module is called &lt;code&gt;mnesia_backup&lt;/code&gt; and it interprets argument &lt;code&gt;Opaque&lt;/code&gt; as a local filename. The default for this module is also configurable through configuration parameter &lt;code&gt;-mnesia mnesia_backup&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{module, BackupMod}&lt;/code&gt; 。备份媒体的所有访问均通过名为 &lt;code&gt;BackupMod&lt;/code&gt; 的回调模块执行。参数 &lt;code&gt;Opaque&lt;/code&gt; 被转发到回调模块，该模块可以根据需要对其进行解释。默认的回调模块称为 &lt;code&gt;mnesia_backup&lt;/code&gt; ，它将参数 &lt;code&gt;Opaque&lt;/code&gt; 解释为本地文件名。该模块的默认值也可以通过配置参数 &lt;code&gt;-mnesia mnesia_backup&lt;/code&gt; 进行配置。</target>
        </trans-unit>
        <trans-unit id="ce955821adbf61f9054562a8eb40d595ce2b13ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{module, BackupMod}&lt;/code&gt;. For semantics, see &lt;code&gt;mnesia:install_fallback/2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{module, BackupMod}&lt;/code&gt; 。有关语义，请参见 &lt;code&gt;mnesia:install_fallback/2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="95dda7bdd02cd1dd5dcc6018cf114f71b8fe624d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{module,BackupMod}&lt;/code&gt;. The backup module &lt;code&gt;BackupMod&lt;/code&gt; is used to access the backup media. If omitted, the default backup module is used.</source>
          <target state="translated">&lt;code&gt;{module,BackupMod}&lt;/code&gt; 。备份模块 &lt;code&gt;BackupMod&lt;/code&gt; 用于访问备份媒体。如果省略，则使用默认备份模块。</target>
        </trans-unit>
        <trans-unit id="d7923a37f987c9cc4b56e300558cb7acfc556504" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{module,Mod}&lt;/code&gt;. The backup module &lt;code&gt;Mod&lt;/code&gt; is used to access the backup media. If omitted, the default backup module is used.</source>
          <target state="translated">&lt;code&gt;{module,Mod}&lt;/code&gt; 。备份模块 &lt;code&gt;Mod&lt;/code&gt; 用于访问备份媒体。如果省略，则使用默认备份模块。</target>
        </trans-unit>
        <trans-unit id="2557615e11785aeb93a447cfea545cd0b43d86c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{more, Continuation}&lt;/code&gt;, which indicates that more characters are needed to complete the request.</source>
          <target state="translated">&lt;code&gt;{more, Continuation}&lt;/code&gt; ，它指示需要更多字符才能完成请求。</target>
        </trans-unit>
        <trans-unit id="7f9250b8b8e8d9bffc6b3ba47cfd2589c38d888c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{n_objects,Number}&lt;/code&gt;, where &lt;code&gt;n_objects&lt;/code&gt; specifies (roughly) the number of objects returned from Mnesia to QLC. Queries to remote tables can need a larger chunk to reduce network overhead. By default, &lt;code&gt;100&lt;/code&gt; objects at a time are returned.</source>
          <target state="translated">&lt;code&gt;{n_objects,Number}&lt;/code&gt; ，其中 &lt;code&gt;n_objects&lt;/code&gt; 指定（大约）从Mnesia返回到QLC的对象数。对远程表的查询可能需要更大的块，以减少网络开销。默认情况下，一次返回 &lt;code&gt;100&lt;/code&gt; 个对象。</target>
        </trans-unit>
        <trans-unit id="e34350363e2d757de7e9bc65a58c386a4d8e7e43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{name,Name}&lt;/code&gt;, where &lt;code&gt;Name&lt;/code&gt; specifies a temporary name of the checkpoint. The name can be reused when the checkpoint has been deactivated. If no name is specified, a name is generated automatically.</source>
          <target state="translated">&lt;code&gt;{name,Name}&lt;/code&gt; ，其中 &lt;code&gt;Name&lt;/code&gt; 指定检查点的临时名称。停用检查点后，可以重用该名称。如果未指定名称，则会自动生成一个名称。</target>
        </trans-unit>
        <trans-unit id="eb118a8443e99439f8464ed53c766a7eced10162" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{name,Name}&lt;/code&gt;. &lt;code&gt;Name&lt;/code&gt; is the checkpoint name. Each checkpoint must have a name that is unique to the associated nodes. The name can be reused only once the checkpoint has been deactivated. By default, a name that is probably unique is generated.</source>
          <target state="translated">&lt;code&gt;{name,Name}&lt;/code&gt; 。 &lt;code&gt;Name&lt;/code&gt; 是检查点名称。每个检查点必须具有对于关联节点唯一的名称。仅在停用检查点后才能重用该名称。默认情况下，会生成一个唯一的名称。</target>
        </trans-unit>
        <trans-unit id="0bf44ca93bd0c04d57cff4e2e64804e81b9d865b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{noValue, Error}&lt;/code&gt;. If the row does not exist, because all columns have &lt;code&gt;{noValue, Error}&lt;/code&gt;), the single tuple &lt;code&gt;{noValue, Error}&lt;/code&gt; can be returned. This is a shorthand for a list with all elements &lt;code&gt;{noValue, Error}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{noValue, Error}&lt;/code&gt; 。如果该行不存在，因为所有列都具有 &lt;code&gt;{noValue, Error}&lt;/code&gt; ，则可以返回单个元组 &lt;code&gt;{noValue, Error}&lt;/code&gt; 。这是包含所有元素 &lt;code&gt;{noValue, Error}&lt;/code&gt; 的列表的简写。</target>
        </trans-unit>
        <trans-unit id="a8a18bfb67dea1e9039f3c962a8044b6329582c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{noValue, noSuchName}&lt;/code&gt;(SNMPv1)</source>
          <target state="translated">&lt;code&gt;{noValue, noSuchName}&lt;/code&gt; （SNMPv1）</target>
        </trans-unit>
        <trans-unit id="eb185b3e27cb0ae3bab7153922988f98506d67e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{noValue, noSuchObject | noSuchInstance}&lt;/code&gt;(SNMPv2)</source>
          <target state="translated">&lt;code&gt;{noValue, noSuchObject | noSuchInstance}&lt;/code&gt; （SNMPv2）</target>
        </trans-unit>
        <trans-unit id="1567a93260af256b21f83ef2666389656273b0e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{no_keys, integer &amp;gt;= 0()}&lt;/code&gt; - The number of different keys stored in the table.</source>
          <target state="translated">&lt;code&gt;{no_keys, integer &amp;gt;= 0()}&lt;/code&gt; -表中存储的不同键的数量。</target>
        </trans-unit>
        <trans-unit id="8f5ec6c0b31567e98e98e3e39655f968ceb698f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{no_objects, integer &amp;gt;= 0()}&lt;/code&gt; - The number of objects stored in the table.</source>
          <target state="translated">&lt;code&gt;{no_objects, integer &amp;gt;= 0()}&lt;/code&gt; -表中存储的对象数。</target>
        </trans-unit>
        <trans-unit id="78ca7f63c37b87a42189313646e5afdf642458bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{no_slots, {Min, Used, Max}}&lt;/code&gt; - The number of slots of the table. &lt;code&gt;Min&lt;/code&gt; is the minimum number of slots, &lt;code&gt;Used&lt;/code&gt; is the number of currently used slots, and &lt;code&gt;Max&lt;/code&gt; is the maximum number of slots.</source>
          <target state="translated">&lt;code&gt;{no_slots, {Min, Used, Max}}&lt;/code&gt; -表的插槽数。 &lt;code&gt;Min&lt;/code&gt; 是最小插槽数， &lt;code&gt;Used&lt;/code&gt; 是当前使用的插槽数， &lt;code&gt;Max&lt;/code&gt; 是最大插槽数。</target>
        </trans-unit>
        <trans-unit id="e1ee7921dd0d8dee1b4c70c5bb54b6d6986ea9d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{ok, Bin}&lt;/code&gt; = just another chunk of the file.</source>
          <target state="translated">&lt;code&gt;{ok, Bin}&lt;/code&gt; =文件的另一块。</target>
        </trans-unit>
        <trans-unit id="34079b1672ff85adaa28c30ad04ddd6e09270a90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{ok, Config}&lt;/code&gt; - if the configuration variables are read successfully.</source>
          <target state="translated">&lt;code&gt;{ok, Config}&lt;/code&gt; -如果成功读取配置变量。</target>
        </trans-unit>
        <trans-unit id="c49ea474244ae1f144dd319888cfd4c7ef8a23fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{ok, Socket}&lt;/code&gt; if a connection is established</source>
          <target state="translated">&lt;code&gt;{ok, Socket}&lt;/code&gt; 如果已建立连接）</target>
        </trans-unit>
        <trans-unit id="cd34396199c7043fb726e19f10d088c26464d424" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{ok, Unpurged}&lt;/code&gt; if evaluating the script is successful, where &lt;code&gt;Unpurged&lt;/code&gt; is a list of unpurged modules</source>
          <target state="translated">&lt;code&gt;{ok, Unpurged}&lt;/code&gt; 如果评估脚本成功，则 &lt;code&gt;Unpurged&lt;/code&gt; 是未清除模块的列表</target>
        </trans-unit>
        <trans-unit id="e58d96d18a456e3b272e77e3b2902013e7eac97c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{ok, {config, ConfigString}}&lt;/code&gt; - the parameter is a configuration string and it is correct.</source>
          <target state="translated">&lt;code&gt;{ok, {config, ConfigString}}&lt;/code&gt; -该参数是一个配置字符串，它是正确的。</target>
        </trans-unit>
        <trans-unit id="586d56cdb554b99cf95981aa98f5880c139e5f2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{ok, {file, FileName}}&lt;/code&gt; - the parameter is a file name and the file exists.</source>
          <target state="translated">&lt;code&gt;{ok, {file, FileName}}&lt;/code&gt; -参数是文件名，并且该文件存在。</target>
        </trans-unit>
        <trans-unit id="6f6ef68408b88b3e9084f0ee1ced6125c36f561d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{outdir, NameOfDirectory}&lt;/code&gt; Create a file named &lt;code&gt;TAGS&lt;/code&gt; in the directory &lt;code&gt;NameOfDirectory&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{outdir, NameOfDirectory}&lt;/code&gt; 在 &lt;code&gt;NameOfDirectory&lt;/code&gt; 目录中创建一个名为 &lt;code&gt;TAGS&lt;/code&gt; 的文件。</target>
        </trans-unit>
        <trans-unit id="2f7080f4f9a5af506c8d608197e34eb88f096fa1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{outfile, NameOfTAGSFile}&lt;/code&gt; Create a &lt;code&gt;TAGS&lt;/code&gt; file named &lt;code&gt;NameOfTAGSFile&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{outfile, NameOfTAGSFile}&lt;/code&gt; 创建一个名为 &lt;code&gt;NameOfTAGSFile&lt;/code&gt; 的 &lt;code&gt;TAGS&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="b037d20d6f05d548a2d94fbcc5c53c459b3cbdc5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{overload, MSec, Module, Function}&lt;/code&gt; instructs the &lt;code&gt;ttb&lt;/code&gt; back end (a part of the &lt;code&gt;Runtime_Tools&lt;/code&gt; application) to perform overload check every &lt;code&gt;MSec&lt;/code&gt; millisecond. If the check (named &lt;code&gt;Module:Function(check)&lt;/code&gt;) returns &lt;code&gt;true&lt;/code&gt;, tracing is disabled on the selected node.</source>
          <target state="translated">&lt;code&gt;{overload, MSec, Module, Function}&lt;/code&gt; 指示 &lt;code&gt;ttb&lt;/code&gt; 后端（的一部分 &lt;code&gt;Runtime_Tools&lt;/code&gt; 应用程序）来执行过载检查每 &lt;code&gt;MSec&lt;/code&gt; 毫秒。如果检查（名为 &lt;code&gt;Module:Function(check)&lt;/code&gt; ）返回 &lt;code&gt;true&lt;/code&gt; ，那么将在所选节点上禁用跟踪。</target>
        </trans-unit>
        <trans-unit id="e086f4d5f6f75a34f2b76360d4fd11eb54fa50cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{owner, pid()}&lt;/code&gt; - The pid of the process that handles requests to the Dets table.</source>
          <target state="translated">&lt;code&gt;{owner, pid()}&lt;/code&gt; -处理对Dets表的请求的进程的pid。</target>
        </trans-unit>
        <trans-unit id="71c18d9091aee81f1b72322a48b1012098ea8c19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{premature_eof, FileName}&lt;/code&gt; - End-of-file was encountered inside some binary term.</source>
          <target state="translated">&lt;code&gt;{premature_eof, FileName}&lt;/code&gt; -在某个二进制术语内遇到了文件结尾。</target>
        </trans-unit>
        <trans-unit id="92ff9aebf9b9f4b5d40c18b44568093783196a3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{protection, Protection}&lt;/code&gt;, where &lt;code&gt;Protection&lt;/code&gt; is &lt;code&gt;protected&lt;/code&gt; or &lt;code&gt;private&lt;/code&gt;, according to the options given to &lt;code&gt;new&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{protection, Protection}&lt;/code&gt; ，根据对 &lt;code&gt;new&lt;/code&gt; 的选择，其中 &lt;code&gt;Protection&lt;/code&gt; 是 &lt;code&gt;protected&lt;/code&gt; 还是 &lt;code&gt;private&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eb52fdc714879e3d1d22dcbb05906c7aaa8baad5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{ram_copies, NodeList}&lt;/code&gt;, where &lt;code&gt;NodeList&lt;/code&gt; is a list of the nodes where this table is stored in RAM. Default is &lt;code&gt;[node()]&lt;/code&gt;. If the default value is used to create a table, it is located on the local node only.</source>
          <target state="translated">&lt;code&gt;{ram_copies, NodeList}&lt;/code&gt; ，其中 &lt;code&gt;NodeList&lt;/code&gt; 是此表存储在RAM中的节点的列表。默认值为 &lt;code&gt;[node()]&lt;/code&gt; 。如果使用默认值创建表，则它仅位于本地节点上。</target>
        </trans-unit>
        <trans-unit id="322a25bc54945488d6f0af8e9d9eaee319f35062" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{ram_copies, Nodelist}&lt;/code&gt;, where &lt;code&gt;Nodelist&lt;/code&gt; is a list of the nodes where this table is supposed to have RAM copies. A table replica of type &lt;code&gt;ram_copies&lt;/code&gt; is not written to disc on a per transaction basis. &lt;code&gt;ram_copies&lt;/code&gt; replicas can be dumped to disc with the function &lt;code&gt;mnesia:dump_tables(Tabs)&lt;/code&gt;. Default value for this attribute is &lt;code&gt;[node()]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{ram_copies, Nodelist}&lt;/code&gt; ，其中 &lt;code&gt;Nodelist&lt;/code&gt; 是该表应具有RAM副本的节点的列表。不会基于每个事务将 &lt;code&gt;ram_copies&lt;/code&gt; 类型的表副本写入磁盘。可以使用 &lt;code&gt;mnesia:dump_tables(Tabs)&lt;/code&gt; 函数将 &lt;code&gt;ram_copies&lt;/code&gt; 副本复制到光盘中。此属性的默认值为 &lt;code&gt;[node()]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="42d9a33fcf92e64b48344257734e284874cdac4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{ram_file, boolean()}&lt;/code&gt; - Whether the table is kept in RAM.</source>
          <target state="translated">&lt;code&gt;{ram_file, boolean()}&lt;/code&gt; -表是否保留在RAM中。</target>
        </trans-unit>
        <trans-unit id="46d960057443b926051420e7d3bbd8a8cac9a6e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{ram_file, boolean()}&lt;/code&gt; - Whether the table is to be kept in RAM. Keeping the table in RAM can sound like an anomaly, but can enhance the performance of applications that open a table, insert a set of objects, and then close the table. When the table is closed, its contents are written to the disk file. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{ram_file, boolean()}&lt;/code&gt; -表是否要保留在RAM中。将表保留在RAM中听起来像是一种异常，但可以提高打开表，插入对象集然后关闭表的应用程序的性能。关闭该表后，其内容将写入磁盘文件。默认为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fbd36f5fcc9d5726c6ba599b68c53d675df35f64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{ram_overrides_dump,Bool}&lt;/code&gt;. Only applicable for &lt;code&gt;ram_copies&lt;/code&gt;. &lt;code&gt;Bool&lt;/code&gt; allows you to choose to back up the table state as it is in RAM, or as it is on disc. &lt;code&gt;true&lt;/code&gt; means that the latest committed records in RAM are to be included in the checkpoint. These are the records that the application accesses. &lt;code&gt;false&lt;/code&gt; means that the records dumped to &lt;code&gt;DAT&lt;/code&gt; files are to be included in the checkpoint. These records are loaded at startup. Default is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{ram_overrides_dump,Bool}&lt;/code&gt; 。仅适用于 &lt;code&gt;ram_copies&lt;/code&gt; 。 &lt;code&gt;Bool&lt;/code&gt; 允许您选择备份表状态（在RAM中还是在磁盘上）。 &lt;code&gt;true&lt;/code&gt; 表示RAM中最新提交的记录将包含在检查点中。这些是应用程序访问的记录。 &lt;code&gt;false&lt;/code&gt; 表示转储到 &lt;code&gt;DAT&lt;/code&gt; 文件的记录将包含在检查点中。这些记录在启动时加载。默认值为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1cf51f98ca752a45b0295cc77ea5e2cf6277c579" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{ram_overrides_dump,Bool}&lt;/code&gt;. This argument only applies to tables of type &lt;code&gt;ram_copies&lt;/code&gt;. &lt;code&gt;Bool&lt;/code&gt; specifies if the table state in RAM is to override the table state on disc. &lt;code&gt;true&lt;/code&gt; means that the latest committed records in RAM are included in the checkpoint retainer. These are the records that the application accesses. &lt;code&gt;false&lt;/code&gt; means that the records on the disc &lt;code&gt;.DAT&lt;/code&gt; file are included in the checkpoint retainer. These records are loaded on startup. Default is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{ram_overrides_dump,Bool}&lt;/code&gt; 。此参数仅适用于 &lt;code&gt;ram_copies&lt;/code&gt; 类型的表。 &lt;code&gt;Bool&lt;/code&gt; 指定RAM中的表状态是否要覆盖磁盘上的表状态。 &lt;code&gt;true&lt;/code&gt; 表示检查点保留程序中包含RAM中最新提交的记录。这些是应用程序访问的记录。 &lt;code&gt;false&lt;/code&gt; 表示光盘 &lt;code&gt;.DAT&lt;/code&gt; 文件上的记录包含在检查点保留器中。这些记录在启动时加载。默认值为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5ede5bf36d209c4baecd23df1cd8a49ad54e74af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{record_name, Atom}&lt;/code&gt; specifies the common name of all records stored in the table. All records stored in the table must have this name as their first element. &lt;code&gt;record_name&lt;/code&gt; defaults to the name of the table. For more information, see &lt;code&gt;&lt;a href=&quot;mnesia_chap4#recordnames_tablenames&quot;&gt;Record Names versus Table Names&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{record_name, Atom}&lt;/code&gt; 指定表中存储的所有记录的通用名称。表中存储的所有记录都必须将此名称作为其第一个元素。 &lt;code&gt;record_name&lt;/code&gt; 默认为表的名称。有关更多信息，请参见 &lt;code&gt;&lt;a href=&quot;mnesia_chap4#recordnames_tablenames&quot;&gt;Record Names versus Table Names&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0a0bc97046faf3420b318e0dabdd2b1a93af0b0f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{record_name, Name}&lt;/code&gt;, where &lt;code&gt;Name&lt;/code&gt; must be an atom. All records stored in the table must have this name as the first element. It defaults to the same name as the table name.</source>
          <target state="translated">&lt;code&gt;{record_name, Name}&lt;/code&gt; ，其中 &lt;code&gt;Name&lt;/code&gt; 必须是一个原子。表中存储的所有记录必须将此名称作为第一个元素。它的默认名称与表名称相同。</target>
        </trans-unit>
        <trans-unit id="c0b89fdbd4b54476223ea00064c735aee6648dbb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{recreate_tables, TabList}&lt;/code&gt;, where &lt;code&gt;TabList&lt;/code&gt; is a list of tables that is to be recreated before the records from the backup are inserted. The tables are first deleted and then created with the schema information from the backup. All the nodes in the backup need to be operational.</source>
          <target state="translated">&lt;code&gt;{recreate_tables, TabList}&lt;/code&gt; ，其中 &lt;code&gt;TabList&lt;/code&gt; 是在插入来自备份的记录之前要重新创建的表的列表。首先删除表，然后使用备份中的架构信息创建表。备份中的所有节点都必须可操作。</target>
        </trans-unit>
        <trans-unit id="2088f284180d2fc734fe5f7476e6a37ad837564c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{recreate_tables, TableList}&lt;/code&gt;, where &lt;code&gt;TableList&lt;/code&gt; is a list of tables, which is to be recreated before the records from the backup are inserted. The tables are first deleted and then created with the schema information from the backup. All the nodes in the backup need to be operational.</source>
          <target state="translated">&lt;code&gt;{recreate_tables, TableList}&lt;/code&gt; ，其中 &lt;code&gt;TableList&lt;/code&gt; 是表的列表，在插入备份的记录之前要重新创建这些表。首先删除表，然后使用备份中的架构信息创建表。备份中的所有节点都必须可操作。</target>
        </trans-unit>
        <trans-unit id="41f2681a6977142754c24be73f8efb5c1a91a6d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{repair, Value}&lt;/code&gt; - &lt;code&gt;Value&lt;/code&gt; can be either a &lt;code&gt;boolean()&lt;/code&gt; or the atom &lt;code&gt;force&lt;/code&gt;. The flag specifies if the Dets server is to invoke the automatic file reparation algorithm. Defaults to &lt;code&gt;true&lt;/code&gt;. If &lt;code&gt;false&lt;/code&gt; is specified, no attempt is made to repair the file, and &lt;code&gt;{error, {needs_repair, FileName}}&lt;/code&gt; is returned if the table must be repaired.</source>
          <target state="translated">&lt;code&gt;{repair, Value}&lt;/code&gt; - &lt;code&gt;Value&lt;/code&gt; 可以是 &lt;code&gt;boolean()&lt;/code&gt; 或atom &lt;code&gt;force&lt;/code&gt; 。该标志指定Dets服务器是否要调用自动文件修复算法。默认为 &lt;code&gt;true&lt;/code&gt; 。如果指定了 &lt;code&gt;false&lt;/code&gt; ，则不尝试修复该文件，如果必须修复该表，则返回 &lt;code&gt;{error, {needs_repair, FileName}}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="243767f1ab646563a48b7607cfae2f64d36aef78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{safe_fixed, SafeFixed}&lt;/code&gt; - The same as &lt;code&gt;{safe_fixed_monotonic_time, SafeFixed}&lt;/code&gt; except the format and value of &lt;code&gt;FixedAtTime&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{safe_fixed, SafeFixed}&lt;/code&gt; -等同于 &lt;code&gt;{safe_fixed_monotonic_time, SafeFixed}&lt;/code&gt; 除外的格式和值 &lt;code&gt;FixedAtTime&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0d60353cd382eaff9eeaa9a965b09427fd0cbd50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{safe_fixed_monotonic_time, SafeFixed}&lt;/code&gt; - If the table is fixed, &lt;code&gt;SafeFixed&lt;/code&gt; is a tuple &lt;code&gt;{FixedAtTime, [{Pid,RefCount}]}&lt;/code&gt;. &lt;code&gt;FixedAtTime&lt;/code&gt; is the time when the table was first fixed, and &lt;code&gt;Pid&lt;/code&gt; is the pid of the process that fixes the table &lt;code&gt;RefCount&lt;/code&gt; times. There can be any number of processes in the list. If the table is not fixed, &lt;code&gt;SafeFixed&lt;/code&gt; is the atom &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{safe_fixed_monotonic_time, SafeFixed}&lt;/code&gt; -如果表是固定的，则 &lt;code&gt;SafeFixed&lt;/code&gt; 是一个元组 &lt;code&gt;{FixedAtTime, [{Pid,RefCount}]}&lt;/code&gt; 。 &lt;code&gt;FixedAtTime&lt;/code&gt; 是第一次修复表的时间，而 &lt;code&gt;Pid&lt;/code&gt; 是修复表 &lt;code&gt;RefCount&lt;/code&gt; 时间的进程的pid 。列表中可以有任意数量的进程。如果表不固定，则 &lt;code&gt;SafeFixed&lt;/code&gt; 为原子 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="77852a8d2f3b9a3a1759e107386593fbe3e304db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{save_config,Config}&lt;/code&gt; makes the &lt;code&gt;Common Test&lt;/code&gt; test server pass &lt;code&gt;Config&lt;/code&gt; to the next test case.</source>
          <target state="translated">&lt;code&gt;{save_config,Config}&lt;/code&gt; 使 &lt;code&gt;Common Test&lt;/code&gt; 测试服务器将 &lt;code&gt;Config&lt;/code&gt; 传递给下一个测试用例。</target>
        </trans-unit>
        <trans-unit id="b1dc9f14d5ccd2c14b3e15926aa53318e169353a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{schema, Tab, CreateList}&lt;/code&gt; specifies a table to be created. For more information about &lt;code&gt;CreateList&lt;/code&gt;, see &lt;code&gt;&lt;a href=&quot;mnesia#create_table-2&quot;&gt;mnesia:create_table/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{schema, Tab, CreateList}&lt;/code&gt; 指定要创建的表。有关 &lt;code&gt;CreateList&lt;/code&gt; 的更多信息，请参见 &lt;code&gt;&lt;a href=&quot;mnesia#create_table-2&quot;&gt;mnesia:create_table/2&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="57353258f3c4518eda050314ab9f959e3312c8a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{schema, Tab}&lt;/code&gt; specifies a table to be deleted.</source>
          <target state="translated">&lt;code&gt;{schema, Tab}&lt;/code&gt; 指定要删除的表。</target>
        </trans-unit>
        <trans-unit id="ed668e45641d0e0e5c792826f0e8e70c2758fe46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{scope, Scope}&lt;/code&gt;. For semantics, see &lt;code&gt;mnesia:install_fallback/2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{scope, Scope}&lt;/code&gt; 。有关语义，请参见 &lt;code&gt;mnesia:install_fallback/2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cc36685e1cd9495318a45ad14ffeffc16e07473a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{scope, Scope}&lt;/code&gt;. The &lt;code&gt;Scope&lt;/code&gt; of a fallback is either &lt;code&gt;global&lt;/code&gt; for the entire database or &lt;code&gt;local&lt;/code&gt; for one node. By default, the installation of a fallback is a global operation, which either is performed on all nodes with a disc-resident schema or none. Which nodes that are disc-resident is determined from the schema information in the backup.</source>
          <target state="translated">&lt;code&gt;{scope, Scope}&lt;/code&gt; 。回退的 &lt;code&gt;Scope&lt;/code&gt; 对于整个数据库而言是 &lt;code&gt;global&lt;/code&gt; ，对于一个节点而言是 &lt;code&gt;local&lt;/code&gt; 的。默认情况下，后备安装是全局操作，该操作要么在所有具有磁盘驻留模式的节点上执行，要么不执行。根据备份中的架构信息确定哪些磁盘驻留节点。</target>
        </trans-unit>
        <trans-unit id="95623f8a53dd4b1420c371f2d6dd9a5673aaef18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{segment_timeout, missing_segments()}&lt;/code&gt; - one or more segments was not delivered before the expire of the segment timer.</source>
          <target state="translated">&lt;code&gt;{segment_timeout, missing_segments()}&lt;/code&gt; -在分段计时器到期之前未传送一个或多个分段。</target>
        </trans-unit>
        <trans-unit id="8c5c407a539f1f47faac870b5988aef24dbcc33e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{select, MatchSpec}&lt;/code&gt;. As for &lt;code&gt;select&lt;/code&gt;, the table is traversed by calling &lt;code&gt;mnesia:select/3&lt;/code&gt; and &lt;code&gt;mnesia:select/1&lt;/code&gt;. The difference is that the match specification is explicitly given. This is how to state match specifications that cannot easily be expressed within the syntax provided by QLC.</source>
          <target state="translated">&lt;code&gt;{select, MatchSpec}&lt;/code&gt; 。至于 &lt;code&gt;select&lt;/code&gt; ，通过调用 &lt;code&gt;mnesia:select/3&lt;/code&gt; 和 &lt;code&gt;mnesia:select/1&lt;/code&gt; 遍历该表。区别在于明确指定了匹配规范。这是一种陈述匹配规范的方法，这些规范不能在QLC提供的语法中轻松表达。</target>
        </trans-unit>
        <trans-unit id="48dac8aa9a602e73209998e339f05366da69fae3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{select,&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type-match_spec&quot;&gt;match_spec()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;}&lt;/code&gt; - As for &lt;code&gt;select&lt;/code&gt;, the table is traversed by calling &lt;code&gt;dets:select/3&lt;/code&gt; and &lt;code&gt;dets:select/1&lt;/code&gt;. The difference is that the match specification is specified explicitly. This is how to state match specifications that cannot easily be expressed within the syntax provided by &lt;code&gt;qlc&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{select,&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#type-match_spec&quot;&gt;match_spec()&lt;/a&gt;&lt;/code&gt; &lt;code&gt;}&lt;/code&gt; -对于 &lt;code&gt;select&lt;/code&gt; ，通过调用 &lt;code&gt;dets:select/3&lt;/code&gt; 和 &lt;code&gt;dets:select/1&lt;/code&gt; 遍历该表。区别在于匹配规范是明确指定的。这是一种陈述匹配规范的方法，该规范不能在 &lt;code&gt;qlc&lt;/code&gt; 提供的语法内轻松表达。</target>
        </trans-unit>
        <trans-unit id="2cccbcce1b79e1a860b4204965ae962164f6d406" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{size, integer() &amp;gt;= 0}&lt;/code&gt; - The number of objects stored in the table.</source>
          <target state="translated">&lt;code&gt;{size, integer() &amp;gt;= 0}&lt;/code&gt; -表中存储的对象数。</target>
        </trans-unit>
        <trans-unit id="5ded61e40ffff24eb2f94212fd2b15db53bab649" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{skip,Reason}&lt;/code&gt; indicates that the test case is skipped.</source>
          <target state="translated">&lt;code&gt;{skip,Reason}&lt;/code&gt; 表示已跳过测试用例。</target>
        </trans-unit>
        <trans-unit id="aa0296ab902a7c3358a6e3a79b60f7931701b1ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{skip_tables, TabList}&lt;/code&gt;, where &lt;code&gt;TabList&lt;/code&gt; is a list of tables that is not to be read from the backup.</source>
          <target state="translated">&lt;code&gt;{skip_tables, TabList}&lt;/code&gt; ，其中 &lt;code&gt;TabList&lt;/code&gt; 是不从备份中读取的表的列表。</target>
        </trans-unit>
        <trans-unit id="01e5959e832820731f76f2b10117d59a86d59b79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{skip_tables, TableList}&lt;/code&gt;, where &lt;code&gt;TableList&lt;/code&gt; is a list of tables, which is not to be read from the backup.</source>
          <target state="translated">&lt;code&gt;{skip_tables, TableList}&lt;/code&gt; ，其中 &lt;code&gt;TableList&lt;/code&gt; 是表列表，不能从备份中读取。</target>
        </trans-unit>
        <trans-unit id="81f88cd283cac912e9ca746fd1368767ccfae072" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{snmp, SnmpStruct}&lt;/code&gt;. &lt;code&gt;SnmpStruct&lt;/code&gt; is described in the &lt;code&gt;SNMP&lt;/code&gt; User's Guide. Basically, if this attribute is present in &lt;code&gt;ArgList&lt;/code&gt; of &lt;code&gt;&lt;a href=&quot;mnesia#create_table-2&quot;&gt;mnesia:create_table/2&lt;/a&gt;&lt;/code&gt;, the table is immediately accessible the SNMP.</source>
          <target state="translated">&lt;code&gt;{snmp, SnmpStruct}&lt;/code&gt; 。 &lt;code&gt;SnmpStruct&lt;/code&gt; 在《 &lt;code&gt;SNMP&lt;/code&gt; 用户指南》中进行了描述。基本上，如果此属性存在于 &lt;code&gt;&lt;a href=&quot;mnesia#create_table-2&quot;&gt;mnesia:create_table/2&lt;/a&gt;&lt;/code&gt; 的 &lt;code&gt;ArgList&lt;/code&gt; 中，则可以通过SNMP立即访问该表。</target>
        </trans-unit>
        <trans-unit id="f73f7f8e71d79de56f7a81c2efba110fd7464c27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{snmp, SnmpStruct}&lt;/code&gt;. For a description of &lt;code&gt;SnmpStruct&lt;/code&gt;, see &lt;code&gt;mnesia:snmp_open_table/2&lt;/code&gt;. If this attribute is present in &lt;code&gt;ArgList&lt;/code&gt; to &lt;code&gt;mnesia:create_table/2&lt;/code&gt;, the table is immediately accessible by SNMP. Therefore applications that use SNMP to manipulate and control the system can be designed easily, since Mnesia provides a direct mapping between the logical tables that make up an SNMP control application and the physical data that makes up a Mnesia table.</source>
          <target state="translated">&lt;code&gt;{snmp, SnmpStruct}&lt;/code&gt; 。有关 &lt;code&gt;SnmpStruct&lt;/code&gt; 的描述，请参见 &lt;code&gt;mnesia:snmp_open_table/2&lt;/code&gt; 。如果该属性出现在 &lt;code&gt;ArgList&lt;/code&gt; 中以 &lt;code&gt;mnesia:create_table/2&lt;/code&gt; ，该表是立即SNMP访问。因此，由于Mnesia提供了组成SNMP控制应用程序的逻辑表和组成Mnesia表的物理数据之间的直接映射，因此可以轻松设计使用SNMP来操纵和控制系统的应用程序。</target>
        </trans-unit>
        <trans-unit id="a5639181ca4df54d5fede198e9c732d7be97d080" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{storage_properties, [{Backend, Properties}]&lt;/code&gt; forwards more properties to the back end storage. &lt;code&gt;Backend&lt;/code&gt; can currently be &lt;code&gt;ets&lt;/code&gt; or &lt;code&gt;dets&lt;/code&gt;. &lt;code&gt;Properties&lt;/code&gt; is a list of options sent to the back end storage during table creation. &lt;code&gt;Properties&lt;/code&gt; cannot contain properties already used by Mnesia, such as &lt;code&gt;type&lt;/code&gt; or &lt;code&gt;named_table&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{storage_properties, [{Backend, Properties}]&lt;/code&gt; 将更多属性转发到后端存储。 &lt;code&gt;Backend&lt;/code&gt; 当前可以是 &lt;code&gt;ets&lt;/code&gt; 或 &lt;code&gt;dets&lt;/code&gt; 。 &lt;code&gt;Properties&lt;/code&gt; 是在表创建期间发送到后端存储的选项的列表。 &lt;code&gt;Properties&lt;/code&gt; 不能包含Mnesia已使用的属性，例如 &lt;code&gt;type&lt;/code&gt; 或 &lt;code&gt;named_table&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="303e847e69fba2c65d8e3f5d2f62794a6afff2ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{swapped,NewHandler,Pid}&lt;/code&gt;, if the process &lt;code&gt;Pid&lt;/code&gt; has replaced the event handler with another event handler &lt;code&gt;NewHandler&lt;/code&gt; using a call to &lt;code&gt;&lt;a href=&quot;#swap_handler-3&quot;&gt;swap_handler/3&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#swap_sup_handler-3&quot;&gt;swap_sup_handler/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{swapped,NewHandler,Pid}&lt;/code&gt; ，如果进程 &lt;code&gt;Pid&lt;/code&gt; 使用对 &lt;code&gt;&lt;a href=&quot;#swap_handler-3&quot;&gt;swap_handler/3&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;#swap_sup_handler-3&quot;&gt;swap_sup_handler/3&lt;/a&gt;&lt;/code&gt; 的调用将事件处理程序替换为另一个事件处理程序 &lt;code&gt;NewHandler&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="214b8fac5cbc176fc660ffa7e080e981936cf48d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{sysLocation, &quot;upstairs&quot;}&lt;/code&gt; or</source>
          <target state="translated">&lt;code&gt;{sysLocation, &quot;upstairs&quot;}&lt;/code&gt; 或</target>
        </trans-unit>
        <trans-unit id="1c98b73c33e66db686f3e9900cf9664a3071a82b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{tag(), tag_receiver()}&lt;/code&gt; - The information is delivered either via messages or via a function call according to the value of &lt;code&gt;tag_receiver()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{tag(), tag_receiver()}&lt;/code&gt; -根据 &lt;code&gt;tag_receiver()&lt;/code&gt; 的值，通过消息或通过函数调用传递信息。</target>
        </trans-unit>
        <trans-unit id="df94ed1989d56de807abe8c01846944b974ab972" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{takeover,Node}&lt;/code&gt; if the application is distributed and started at the current node because of a takeover from &lt;code&gt;Node&lt;/code&gt;, either because &lt;code&gt;takeover/2&lt;/code&gt; has been called or because the current node has higher priority than &lt;code&gt;Node&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{takeover,Node}&lt;/code&gt; ,如果由于从 &lt;code&gt;Node&lt;/code&gt; 进行接管而在当前节点上分发并启动了应用程序，则可能是因为已调用 &lt;code&gt;takeover/2&lt;/code&gt; 或当前节点的优先级高于 &lt;code&gt;Node&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="59fc28eb3ef112e55422495e00b1aab70d0440f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{tmpdir, TempDirectory}&lt;/code&gt; sets the directory used by merge join for temporary files and by option &lt;code&gt;{cache,&amp;nbsp;list}&lt;/code&gt;. The option also overrides option &lt;code&gt;tmpdir&lt;/code&gt; of &lt;code&gt;&lt;a href=&quot;#keysort-3&quot;&gt;keysort/3&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#sort-2&quot;&gt;sort/2&lt;/a&gt;&lt;/code&gt;. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;, which means that the directory returned by &lt;code&gt;file:get_cwd()&lt;/code&gt; is used.</source>
          <target state="translated">&lt;code&gt;{tmpdir, TempDirectory}&lt;/code&gt; 设置用于临时文件的合并连接和用于选项 &lt;code&gt;{cache,&amp;nbsp;list}&lt;/code&gt; 。该选项还覆盖选项 &lt;code&gt;tmpdir&lt;/code&gt; 的 &lt;code&gt;&lt;a href=&quot;#keysort-3&quot;&gt;keysort/3&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;#sort-2&quot;&gt;sort/2&lt;/a&gt;&lt;/code&gt; 。默认为 &lt;code&gt;&quot;&quot;&lt;/code&gt; ，这意味着使用 &lt;code&gt;file:get_cwd()&lt;/code&gt; 返回的目录。</target>
        </trans-unit>
        <trans-unit id="5c02f65dac281dd801d3c340819fb91a0408021e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{tmpdir_usage, TmpFileUsage}&lt;/code&gt; determines the action taken when &lt;code&gt;qlc&lt;/code&gt; is about to create temporary files on the directory set by option &lt;code&gt;tmpdir&lt;/code&gt;. If the value is &lt;code&gt;not_allowed&lt;/code&gt;, an error tuple is returned, otherwise temporary files are created as needed. Default is &lt;code&gt;allowed&lt;/code&gt;, which means that no further action is taken. The values &lt;code&gt;info_msg&lt;/code&gt;, &lt;code&gt;warning_msg&lt;/code&gt;, and &lt;code&gt;error_msg&lt;/code&gt; mean that the function with the corresponding name in module &lt;code&gt;error_logger&lt;/code&gt; is called for printing some information (currently the stacktrace).</source>
          <target state="translated">&lt;code&gt;{tmpdir_usage, TmpFileUsage}&lt;/code&gt; 确定 &lt;code&gt;qlc&lt;/code&gt; 将要在由选项 &lt;code&gt;tmpdir&lt;/code&gt; 设置的目录上创建临时文件时采取的操作。如果该值不是 &lt;code&gt;not_allowed&lt;/code&gt; ，则返回一个错误元组，否则将根据需要创建临时文件。默认是 &lt;code&gt;allowed&lt;/code&gt; ，这意味着将不采取进一步的措施。值 &lt;code&gt;info_msg&lt;/code&gt; ， &lt;code&gt;warning_msg&lt;/code&gt; 和 &lt;code&gt;error_msg&lt;/code&gt; 表示调用模块 &lt;code&gt;error_logger&lt;/code&gt; 中具有相应名称的函数以打印一些信息（当前为stacktrace）。</target>
        </trans-unit>
        <trans-unit id="0924fcf739aab6153fb3e9ec406d8635341bb11b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{traverse, SelectMethod}&lt;/code&gt;, where &lt;code&gt;traverse&lt;/code&gt; determines the method to traverse the whole table (if needed). The default method is &lt;code&gt;select&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{traverse, SelectMethod}&lt;/code&gt; ，其中 &lt;code&gt;traverse&lt;/code&gt; 确定遍历整个表的方法（如果需要）。默认方法是 &lt;code&gt;select&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="569d0f524a0eac87d8e5f5e0b87a720bcb5454fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{true, NewState:any()}&lt;/code&gt; if the user and password is valid</source>
          <target state="translated">&lt;code&gt;{true, NewState:any()}&lt;/code&gt; 如果用户名和密码有效）</target>
        </trans-unit>
        <trans-unit id="004bbb00ed016620bf837455f0176fda6272ee5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{type, Type}&lt;/code&gt;, where &lt;code&gt;Type&lt;/code&gt; must be either of the atoms &lt;code&gt;set&lt;/code&gt;, &lt;code&gt;ordered_set&lt;/code&gt;, or &lt;code&gt;bag&lt;/code&gt;. Default is &lt;code&gt;set&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{type, Type}&lt;/code&gt; ，其中 &lt;code&gt;Type&lt;/code&gt; 必须是原子 &lt;code&gt;set&lt;/code&gt; ， &lt;code&gt;ordered_set&lt;/code&gt; 或 &lt;code&gt;bag&lt;/code&gt; 之一。默认 &lt;code&gt;set&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="85f91ed15ae3cd74083b647b9660ff6969fbe1ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{type, Type}&lt;/code&gt;, where &lt;code&gt;Type&lt;/code&gt; must be either of the atoms &lt;code&gt;set&lt;/code&gt;, &lt;code&gt;ordered_set&lt;/code&gt;, or &lt;code&gt;bag&lt;/code&gt;. Default is &lt;code&gt;set&lt;/code&gt;. In a &lt;code&gt;set&lt;/code&gt;, all records have unique keys. In a &lt;code&gt;bag&lt;/code&gt;, several records can have the same key, but the record content is unique. If a non-unique record is stored, the old conflicting records are overwritten.</source>
          <target state="translated">&lt;code&gt;{type, Type}&lt;/code&gt; ，其中 &lt;code&gt;Type&lt;/code&gt; 必须是原子 &lt;code&gt;set&lt;/code&gt; ， &lt;code&gt;ordered_set&lt;/code&gt; 或 &lt;code&gt;bag&lt;/code&gt; 之一。默认 &lt;code&gt;set&lt;/code&gt; 。在一个 &lt;code&gt;set&lt;/code&gt; ，所有记录都有唯一的键。在 &lt;code&gt;bag&lt;/code&gt; ，多个记录可以具有相同的键，但是记录的内容是唯一的。如果存储了非唯一记录，则旧的冲突记录将被覆盖。</target>
        </trans-unit>
        <trans-unit id="ca6d701a597627b7ea0c74deeb39db4494658b6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{type,&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type-type&quot;&gt;type()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;}&lt;/code&gt; - The table type.</source>
          <target state="translated">&lt;code&gt;{type,&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#type-type&quot;&gt;type()&lt;/a&gt;&lt;/code&gt; &lt;code&gt;}&lt;/code&gt; -表类型。</target>
        </trans-unit>
        <trans-unit id="8ba84e0b5e5ac921f95e0e72884ee268f96a3599" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{type,&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type-type&quot;&gt;type()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;}&lt;/code&gt; - The table type. Defaults to &lt;code&gt;set&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{type,&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#type-type&quot;&gt;type()&lt;/a&gt;&lt;/code&gt; &lt;code&gt;}&lt;/code&gt; -表类型。默认 &lt;code&gt;set&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c08648a67b6314ee79d4b3c3b7b33303a2238f50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{unique_all, true}&lt;/code&gt; adds a &lt;code&gt;{unique,&amp;nbsp;true}&lt;/code&gt; option to every list expression of the query. Defaults to &lt;code&gt;{unique_all,&amp;nbsp;false}&lt;/code&gt;. Option &lt;code&gt;unique_all&lt;/code&gt; is equivalent to &lt;code&gt;{unique_all,&amp;nbsp;true}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{unique_all, true}&lt;/code&gt; 向查询的每个列表表达式添加一个 &lt;code&gt;{unique,&amp;nbsp;true}&lt;/code&gt; 选项。默认为 &lt;code&gt;{unique_all,&amp;nbsp;false}&lt;/code&gt; 。选项 &lt;code&gt;unique_all&lt;/code&gt; 等效于 &lt;code&gt;{unique_all,&amp;nbsp;true}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f6ecb3a5738f399703bfa84defda3f860aa72974" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{user, integer()}&lt;/code&gt; - The manager will send response (acknowledgment) to inform-request messages when the &lt;code&gt;&lt;a href=&quot;snmpm_user#handle_inform&quot;&gt;handle_inform&lt;/a&gt;&lt;/code&gt; function completes. The integer is the time, in milli-seconds, that the manager will consider the stored inform-request info valid.</source>
          <target state="translated">&lt;code&gt;{user, integer()}&lt;/code&gt; -当 &lt;code&gt;&lt;a href=&quot;snmpm_user#handle_inform&quot;&gt;handle_inform&lt;/a&gt;&lt;/code&gt; 函数完成时，管理器将发送响应（确认）以通知请求消息。整数是管理器认为已存储的通知请求信息有效的时间（以毫秒为单位）。</target>
        </trans-unit>
        <trans-unit id="20dd0d0e6b16c322e326522c5f27fff9cf7fe12e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{value, Value}&lt;/code&gt;. The &lt;code&gt;Value&lt;/code&gt; must be of correct type, length and within ranges, otherwise &lt;code&gt;genErr&lt;/code&gt; is returned in the response PDU. If the object is an enumerated integer, the symbolic enum value may be used (as an atom). If the object is of type BITS, the return value shall be an integer or a list of bits that are set.</source>
          <target state="translated">&lt;code&gt;{value, Value}&lt;/code&gt; 。该 &lt;code&gt;Value&lt;/code&gt; 必须是正确的类型，长度并且在范围之内，否则在响应PDU中返回 &lt;code&gt;genErr&lt;/code&gt; 。如果对象是枚举整数，则可以使用符号枚举值（作为原子）。如果对象是BITS类型，则返回值应为整数或已设置的位列表。</target>
        </trans-unit>
        <trans-unit id="fab20d7063ea6c7739c32da38b75b8c52aedb4fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{value, Value}&lt;/code&gt;. The &lt;code&gt;Value&lt;/code&gt; must be of correct type, length and within ranges, otherwise &lt;code&gt;genErr&lt;/code&gt; is returned in the response PDU. If the object is an enumerated integer, the symbolic enum value may be used as an atom. If the object is of type BITS, the return value shall be an integer or a list of bits that are set.</source>
          <target state="translated">&lt;code&gt;{value, Value}&lt;/code&gt; 。该 &lt;code&gt;Value&lt;/code&gt; 必须是正确的类型，长度并且在范围之内，否则在响应PDU中返回 &lt;code&gt;genErr&lt;/code&gt; 。如果对象是枚举的整数，则可以将符号枚举值用作原子。如果对象是BITS类型，则返回值应为整数或已设置的位列表。</target>
        </trans-unit>
        <trans-unit id="3e4715503e7598b10eb7c577ca59039c7b886250" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{verify,false}&lt;/code&gt; is the default.</source>
          <target state="translated">&lt;code&gt;{verify,false}&lt;/code&gt; 默认为{verify，false}。</target>
        </trans-unit>
        <trans-unit id="ced44ef656c26f1e491848d39213a023626fbaa5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{via,Module,Name}&lt;/code&gt;, if the supervisor is registered through an alternative process registry</source>
          <target state="translated">&lt;code&gt;{via,Module,Name}&lt;/code&gt; ，如果主管是通过备用流程注册中心注册的</target>
        </trans-unit>
        <trans-unit id="3b0d38670de31bf716e0e4b1883dc9639d0f5918" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{via,Module,ViaName}&lt;/code&gt;, if the &lt;code&gt;gen_server&lt;/code&gt; process is registered through an alternative process registry</source>
          <target state="translated">&lt;code&gt;{via,Module,ViaName}&lt;/code&gt; ，如果 &lt;code&gt;gen_server&lt;/code&gt; 进程是通过备用进程注册表注册的</target>
        </trans-unit>
        <trans-unit id="0d727475f96bb32d7f30d6c64cae6c12c60ad185" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{via,Module,ViaName}&lt;/code&gt;, if the event manager is registered through an alternative process registry</source>
          <target state="translated">&lt;code&gt;{via,Module,ViaName}&lt;/code&gt; ，如果事件管理器是通过备用流程注册表注册的</target>
        </trans-unit>
        <trans-unit id="6762fca731697073a1d8e7064e9020909ef1aabb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;|&lt;/code&gt;, &lt;code&gt;||&lt;/code&gt;, &lt;code&gt;|||&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;|&lt;/code&gt; ， &lt;code&gt;||&lt;/code&gt; ， &lt;code&gt;|||&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dabf6cfb0d75c04aac5e66da09a206c7167bba13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;~a&lt;/code&gt; - Atom</source>
          <target state="translated">&lt;code&gt;~a&lt;/code&gt; -原子</target>
        </trans-unit>
        <trans-unit id="e831b6aaffa678c412da4319adfcca9309351e36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;~f&lt;/code&gt; - Floating point</source>
          <target state="translated">&lt;code&gt;~f&lt;/code&gt; -浮点</target>
        </trans-unit>
        <trans-unit id="0df2f2d0537b780f7fc88938b5ee4399193f37ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;~i&lt;/code&gt; - Integer</source>
          <target state="translated">&lt;code&gt;~i&lt;/code&gt; -整数</target>
        </trans-unit>
        <trans-unit id="f4bf115baf1394eb14b0c1b2eff70a8ea6f7106e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;~s&lt;/code&gt; - String</source>
          <target state="translated">&lt;code&gt;~s&lt;/code&gt; 字符串</target>
        </trans-unit>
        <trans-unit id="c4577e4758a5f79a89b86ec1df1475a42b41ed91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;~w&lt;/code&gt; - Arbitrary Erlang term</source>
          <target state="translated">&lt;code&gt;~w&lt;/code&gt; -任意Erlang项</target>
        </trans-unit>
        <trans-unit id="76bcda2a15ba338a52d45da0a5161212792e1e81" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;'and'-1&quot;&gt;'and'([Filter]) -&amp;gt; filter()&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;'and'-1&quot;&gt;'和'（[[Filter]）-&amp;gt; filter（）&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7d11875bc117c79ee7b2e207d82151af61ed06ae" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;'not'-1&quot;&gt;'not'(Filter) -&amp;gt; filter()&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;'not'-1&quot;&gt;'not'（过滤器）-&amp;gt; filter（）&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="fb50418ccbd11d30aa4c986bbed80b558cd06c6d" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;'or'-1&quot;&gt;'or'([Filter]) -&amp;gt; filter()&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;'or'-1&quot;&gt;'或'（[[Filter]）-&amp;gt; filter（）&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4d3ce19df67d5a9a7b4ccda0107db11f3ad92171" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;-0&quot;&gt;tp, tpl, tpe, ctp, ctpl, ctpg, ctpe&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;-0&quot;&gt;tp，tpl，tpe，ctp，ctpl，ctpg，ctpe&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d0047e918a80c9d9ffb8a42bba0a2d00b113ee00" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;-deciphering-the-output-&quot;&gt;5.5 Deciphering the output &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;-deciphering-the-output-&quot;&gt;5.5解密输出 &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1b28d9292951cb74f8ac0e0c6edd07b24d047db9" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;-enabling-lock-counting-&quot;&gt;5.1 Enabling lock-counting &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;-enabling-lock-counting-&quot;&gt;5.1启用锁计数 &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b6a0c05aee3eafa1da9db1b687703ed770ff4be6" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;-error---and--warning---directives&quot;&gt;9.6 -error() and -warning() directives&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;-error---and--warning---directives&quot;&gt;9.6 -error（）和-warning（）指令&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3c37c98d51fa72226133a29afbea3a2df6f55b0a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;-example-of-usage-&quot;&gt;5.3 Example of usage &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;-example-of-usage-&quot;&gt;5.3使用示例 &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="900057347d39d7656ec2176898b4da9236b7ed60" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;-example-with-mnesia-transaction-benchmark-&quot;&gt;5.4 Example with Mnesia Transaction Benchmark &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;-example-with-mnesia-transaction-benchmark-&quot;&gt;5.4 Mnesia交易基准示例 &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ecfd0a5e7e72a468bd6d55c04f34210fd7bdeaee" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;-pinning--a-certificate&quot;&gt;&quot;Pinning&quot; a Certificate&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;-pinning--a-certificate&quot;&gt;&amp;ldquo;固定&amp;rdquo;证书&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8a0ecaa120deae393d1b674fea66ee85910e857f" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;.erlang.crypt&quot;&gt;.erlang.crypt&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;.erlang.crypt&quot;&gt;.erlang.crypt&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="14d844fc8ee796eef465017e130a7bda46c0b493" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;.hrl-file-generation&quot;&gt;4.4 .hrl File Generation&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;.hrl-file-generation&quot;&gt;4.4 .hrl文件生成&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3d0e2f7ae8f145180d79a3063bf2e27b1c3794bd" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;ANY&quot;&gt;ANY and ANY DEFINED BY&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;ANY&quot;&gt;任何和任何定义&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6cc4464d6b9a90a60b263c6be6a52a08423e20fb" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;ASN1Types&quot;&gt;3.5 ASN.1 Types&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;ASN1Types&quot;&gt;3.5 ASN.1类型&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="71242ace27d57667b969d872339749af3289f853" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;ATOM_EXT&quot;&gt;12.27 ATOM_EXT (deprecated)&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;ATOM_EXT&quot;&gt;12.27 ATOM_EXT（不建议使用）&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a950887cf7f67732b96f7360cb9724fe5e408c58" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Advanced-configuration-and-build-of-ErlangOTP&quot;&gt;2.5 Advanced configuration and build of Erlang/OTP&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Advanced-configuration-and-build-of-ErlangOTP&quot;&gt;2.5高级配置和构建Erlang / OTP&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="332e5fe64ee7e68b32e378d108a325e7969a0c51" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Advanced-configuration-and-build-of-ErlangOTP_Building&quot;&gt;Building&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Advanced-configuration-and-build-of-ErlangOTP_Building&quot;&gt;Building&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3e79a4907a74fbbff6f87c580d163dc89df408b7" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Advanced-configuration-and-build-of-ErlangOTP_Configuring&quot;&gt;Configuring&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Advanced-configuration-and-build-of-ErlangOTP_Configuring&quot;&gt;Configuring&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0986ad42335524a72fb2d8a181ff3fb226436722" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Advanced-configuration-and-build-of-ErlangOTP_Installing&quot;&gt;Installing&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Advanced-configuration-and-build-of-ErlangOTP_Installing&quot;&gt;Installing&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="522650487af2c687491db3092ec0b709ae204ab4" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Advanced-configuration-and-build-of-ErlangOTP_Running&quot;&gt;Running&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Advanced-configuration-and-build-of-ErlangOTP_Running&quot;&gt;Running&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4e2586e888832e16dd9fd98102aafc487b4a096d" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Advanced-configuration-and-build-of-ErlangOTP_make-and-ERLTOP&quot;&gt;make and $ERL_TOP&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Advanced-configuration-and-build-of-ErlangOTP_make-and-ERLTOP&quot;&gt;make和$ ERL_TOP&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e90de77743530ab35e8fb88128cc16f09d18554f" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Advanced-configuration-and-build-of-ErlangOTP_otpbuild-vs-configuremake&quot;&gt;otp_build vs configure/make&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Advanced-configuration-and-build-of-ErlangOTP_otpbuild-vs-configuremake&quot;&gt;otp_build与配置/制作&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0bd4b4d391a58c92f5f9758942975b06ed3ac45c" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Advantages_of_unit_testing&quot;&gt;Advantages of unit testing&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Advantages_of_unit_testing&quot;&gt;单元测试的优势&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4a2b6eafde2a27fc6c9c43892692700a45f55817" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;All%20State%20Events&quot;&gt;3.13 All State Events&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;All%20State%20Events&quot;&gt;3.13所有状态事件&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c4c1a91f5b9a50c491053b4b442268b0d872f1c5" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;An_example&quot;&gt;An example&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;An_example&quot;&gt;一个例子&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a1c9b54fe8fae532dfe49f2fc09985cfbc380eaa" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Assert_macros&quot;&gt;Assert macros&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Assert_macros&quot;&gt;声明宏&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="36036929426bba91e16ebc5d9493b74327b5db60" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Avoiding_compile-time_dependency_on_EUnit&quot;&gt;Avoiding compile-time dependency on EUnit&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Avoiding_compile-time_dependency_on_EUnit&quot;&gt;避免对EUnit的编译时依赖性&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2e4a250f40f52dd61157869c3989d66ad275c690" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;BIT%20STRING&quot;&gt;BIT STRING&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;BIT%20STRING&quot;&gt;位串&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a471239ac942789334fbcedb57365201cf162bcc" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;BOOLEAN&quot;&gt;BOOLEAN&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;BOOLEAN&quot;&gt;BOOLEAN&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="fef2189cee3872dc9821e7fe152f99454d837f4b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;BOOTSCRIPT&quot;&gt;1.3 Boot Scripts&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;BOOTSCRIPT&quot;&gt;1.3引导脚本&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="262332bbb92f3a37885f9982c08093dbb2e1de3a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Basic_macros&quot;&gt;Basic macros&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Basic_macros&quot;&gt;基本宏&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ec4475b9202b19ea54053348e72daefe8e29f4da" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Build-and-Install-Procedure&quot;&gt;3.2 Build and Install Procedure&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Build-and-Install-Procedure&quot;&gt;3.2构建和安装过程&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8e4c124212ca7a7e046a416cebe6d31bbb03b8aa" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Build-and-Install-Procedure_Building-With-configuremake-Directly&quot;&gt;Building With configure/make Directly&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Build-and-Install-Procedure_Building-With-configuremake-Directly&quot;&gt;直接使用configure / make进行构建&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="531a4301fb4038234fef2bdba92de370cb4933d1" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Build-and-Install-Procedure_Building-With-the-otpbuild-Script&quot;&gt;Building With the otp_build Script&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Build-and-Install-Procedure_Building-With-the-otpbuild-Script&quot;&gt;使用otp_build脚本构建&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="da1dbdb34d248fc4839bd3a682331970440a644e" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Building-Erlang&quot;&gt;3.3 Building Erlang&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Building-Erlang&quot;&gt;3.3建立Erlang&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9ed455cebb5de805774b8f72aae0f25a9bb821b3" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Building-and-Installing&quot;&gt;4.6 Building and Installing&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Building-and-Installing&quot;&gt;4.6搭建和安装&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c9b8dad971c589209fd7ce2644b7ccd7fb90227d" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Building-and-Installing-the-Documentation&quot;&gt;3.3 Building and Installing the Documentation&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Building-and-Installing-the-Documentation&quot;&gt;3.3建立和安装文件&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ec6b7add0468a9afec681770acaa03bbc8a745d2" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;CHOICE&quot;&gt;CHOICE&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;CHOICE&quot;&gt;CHOICE&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="df7dcb0f3bfebea1e3d340538257d3b00e39a987" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;CRLCertExt&quot;&gt;CRL Extensions&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;CRLCertExt&quot;&gt;CRL扩展&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2fd8e1cd290f85b7fe5f898f818b20c41ac15321" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;CRLEntryExt&quot;&gt;CRL Entry Extensions&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;CRLEntryExt&quot;&gt;CRL条目扩展&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="08a4035460b622b397823d33333c9439495b2fa7" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Callback%20Mode:%20handle_event_function&quot;&gt;Callback Mode: handle_event_function&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Callback%20Mode:%20handle_event_function&quot;&gt;回调模式：handle_event_function&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d54fd807d4249e1bcffd78296455c870ee1c5c5f" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Callback%20Mode:%20state_functions&quot;&gt;Callback Mode: state_functions&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Callback%20Mode:%20state_functions&quot;&gt;回调模式：state_functions&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3abcfb2deaa90b0bbf75d5bbc5808bb6ab78f9ab" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Callback%20Modes&quot;&gt;3.4 Callback Modes&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Callback%20Modes&quot;&gt;3.4回调模式&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="52244bb16d521ac310ee1af5ea5dea54ad3fcd11" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Callback%20Module&quot;&gt;3.3 Callback Module&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Callback%20Module&quot;&gt;3.3回调模块&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8522de2ec3eb0a88b2a998369fb55f19525a7a6f" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Character%20Strings&quot;&gt;Character Strings&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Character%20Strings&quot;&gt;字符串&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6ecf0f1493217090bc9c3afa05c79f67b4e3e419" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Choosing%20the%20Callback%20Mode&quot;&gt;Choosing the Callback Mode&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Choosing%20the%20Callback%20Mode&quot;&gt;选择回调模式&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="60bdcbc62cc29208a5a5f566acd2aea64be59ffe" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Client%20Options&quot;&gt;Client Options&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Client%20Options&quot;&gt;客户选择&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f4789862349d0eb23215ef7a99add51d6923c42c" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Compilation_control_macros&quot;&gt;Compilation control macros&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Compilation_control_macros&quot;&gt;编译控制宏&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d3f15a3c3f1587d39f715442839ec4ecdc5086c3" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Complex%20State&quot;&gt;3.24 Complex State&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Complex%20State&quot;&gt;3.24复杂状态&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="417d90a57369210c5bebf1a3453885fcb1ad94d1" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;ContinuationFun-1&quot;&gt;ContinuationFun(State) -&amp;gt; {NewBytes, NewState}&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;ContinuationFun-1&quot;&gt;ContinuationFun（状态）-&amp;gt; {NewBytes，NewState}&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="46e5cdcf64951c9f5fbdd72577058bab4d3d33c5" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Control&quot;&gt;Control&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Control&quot;&gt;Control&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="93f690de7f247c498108c880098ff634d835f350" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Currently-Used-Configuration-Variables&quot;&gt;3.5 Currently Used Configuration Variables&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Currently-Used-Configuration-Variables&quot;&gt;3.5当前使用的配置变量&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a64e76fee1f4da59c18056f61295a2da67cbb36e" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Currently-Used-Configuration-Variables_Cross-Compiler-and-Other-Tools&quot;&gt;Cross Compiler and Other Tools&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Currently-Used-Configuration-Variables_Cross-Compiler-and-Other-Tools&quot;&gt;交叉编译器和其他工具&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="465808123e825a01b65d757056881f194a330e42" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Currently-Used-Configuration-Variables_Cross-System-Root-Locations&quot;&gt;Cross System Root Locations&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Currently-Used-Configuration-Variables_Cross-System-Root-Locations&quot;&gt;跨系统根目录位置&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c5a5086778b51dfc6930e1c86bf427da8df5c46e" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Currently-Used-Configuration-Variables_Optional-Feature-and-Bug-Tests&quot;&gt;Optional Feature, and Bug Tests&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Currently-Used-Configuration-Variables_Optional-Feature-and-Bug-Tests&quot;&gt;可选功能和错误测试&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9c876f9811541d730e743128216d7a249b435edb" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Currently-Used-Configuration-Variables_Variables-for-otpbuild-Only&quot;&gt;Variables for otp_build Only&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Currently-Used-Configuration-Variables_Variables-for-otpbuild-Only&quot;&gt;仅限otp_build的变量&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5e6bc1ed5b8d91339364f0eb56c7b43183393dfd" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;DTrace-probe-specifications&quot;&gt;2.5 DTrace probe specifications&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;DTrace-probe-specifications&quot;&gt;2.5 DTrace探头规格&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a47a9cfd699ba56cf724cb469329f8a383883dd9" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Daemon%20Options%20(Server%20Options)&quot;&gt;Daemon Options (Server Options)&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Daemon%20Options%20(Server%20Options)&quot;&gt;守护程序选项（服务器选项）&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d558d60b3f1423ad7824b215e4102c71d0acd38d" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Debugging_macros&quot;&gt;Debugging macros&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Debugging_macros&quot;&gt;调试宏&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="beedb2eb9d80eea6d720178ce2e6751054d0d469" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Development&quot;&gt;4.7 Development&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Development&quot;&gt;4.7发展&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5e468ff8d908bc4b5e31ea96fde8a795a43bee0a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Disabling_testing&quot;&gt;Disabling testing&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Disabling_testing&quot;&gt;禁用测试&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f6a4980be910c579a1b7d486cba33c5e4bb64c04" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;ENUMERATED&quot;&gt;ENUMERATED&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;ENUMERATED&quot;&gt;ENUMERATED&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3c4bca6d9f2604832b45804ddd14eaa4f49f29e1" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;EUnit_macros&quot;&gt;1.4 EUnit macros&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;EUnit_macros&quot;&gt;1.4 EUnit宏&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6406cf3af2f6fcb6f17bbf397e2f19544c69b4a5" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;EUnit_test_representation&quot;&gt;1.5 EUnit test representation&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;EUnit_test_representation&quot;&gt;1.5 EUnit测试表示&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="adfb2019016ef79bd14a6ac87b249512dd363c39" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Erlang%20Timers&quot;&gt;3.18 Erlang Timers&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Erlang%20Timers&quot;&gt;3.18 Erlang计时器&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c52e78668bbddb423fbb10f351485993aed09cca" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Event%20Handler&quot;&gt;3.5 Event Handler&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Event%20Handler&quot;&gt;3.5事件处理程序&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0b50a510f27c19f65970c5c8b65ae2111c1c9f71" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Event%20Time-Outs&quot;&gt;3.16 Event Time-Outs&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Event%20Time-Outs&quot;&gt;3.16事件超时&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a2fe6bc6a8e7f884321bcd9fdd51ab2fd8a3244e" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Event%20Types&quot;&gt;3.7 Event Types&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Event%20Types&quot;&gt;3.7事件类型&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6e3d379ccb5e9e9de7b469315f2ee8259d12a05a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Event-Driven%20State%20Machines&quot;&gt;3.1 Event-Driven State Machines&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Event-Driven%20State%20Machines&quot;&gt;3.1事件驱动状态机&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ec8171b06a6db5bc925257918bd94f6cbe7a4164" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;EventFun-3&quot;&gt;EventFun(Event, Location, State) -&amp;gt; NewState&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;EventFun-3&quot;&gt;EventFun（事件，位置，状态）-&amp;gt; NewState&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="95269abafcc6a947bbd2bd67799da7bb618cbeee" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Example&quot;&gt;3.9 Example&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Example&quot;&gt;3.9范例&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2d4f27c7f915aa933f78d145e2a68a41a04c3793" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Example%20Revisited&quot;&gt;3.22 Example Revisited&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Example%20Revisited&quot;&gt;3.22再谈示例&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3d66e17f05cffbffcadd085d05fd05af3d7b18d9" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Exclusive%20Instruction&quot;&gt;Writing an Exclusive Decode Instruction&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Exclusive%20Instruction&quot;&gt;编写独家解码指令&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0c76d2e7a2c807cb443cee031ff61ccf9013de57" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;External_Interfaces&quot;&gt;2.5 External Interfaces&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;External_Interfaces&quot;&gt;2.5外部接口&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8822f4f1038aee394ca8b9f807524cdd14de0951" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;FModule:check_config-1&quot;&gt;FModule:check_config(FConfig) -&amp;gt; ok | {error, Reason}&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;FModule:check_config-1&quot;&gt;FModule：check_config（FConfig）-&amp;gt;确定| {错误，原因}&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="bd1586b615505e9f2eeeac41c18ec9af605221c3" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;FModule:format-2&quot;&gt;FModule:format(LogEvent, FConfig) -&amp;gt; FormattedLogEntry&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;FModule:format-2&quot;&gt;FModule：format（LogEvent，FConfig）-&amp;gt; FormattedLogEntry&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7d09b57b22ec87f4cf14bfa5c8c6a958fbd29a2b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Filter%20the%20State&quot;&gt;3.23 Filter the State&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Filter%20the%20State&quot;&gt;3.23过滤状态&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="fa08a180bd4e508b1333e46a0cde09133e139528" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Fixtures&quot;&gt;Fixtures&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Fixtures&quot;&gt;Fixtures&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="48ca2615a320ae5c3f580cfaffeaeba5a5ffea1a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Frequently-Asked-Questions&quot;&gt;4.3 Frequently Asked Questions&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Frequently-Asked-Questions&quot;&gt;4.3常见问题&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="108833d408eb9ff7a8aeece1f580f2a373ebc15b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Fuzzy%20State%20Diagrams&quot;&gt;Fuzzy State Diagrams&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Fuzzy%20State%20Diagrams&quot;&gt;模糊状态图&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f16e6753796809faec19b670eb58b3ee645be8bd" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Generic%20Time-Outs&quot;&gt;3.17 Generic Time-Outs&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Generic%20Time-Outs&quot;&gt;3.17通用超时&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="346b0f82cb27c73f4def3ab645ee04f930478a17" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Getting_started&quot;&gt;1.3 Getting started&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Getting_started&quot;&gt;1.3入门&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="80e43b85e3fb0b9cdf7898a4f11a1899df5a44a8" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Goals&quot;&gt;2.2 Goals&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Goals&quot;&gt;2.2目标&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f1a17d64da2a814f70feb3506e77b2040b9fa834" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;HModule:adding_handler-1&quot;&gt;HModule:adding_handler(Config1) -&amp;gt; {ok, Config2} | {error, Reason}&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;HModule:adding_handler-1&quot;&gt;HModule：adding_handler（Config1）-&amp;gt; {ok，Config2} | {错误，原因}&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2146ae645e43f934f8d8b7913154c251d692de4e" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;HModule:changing_config-2&quot;&gt;HModule:changing_config(Config1, Config2) -&amp;gt; {ok, Config3} | {error, Reason}&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;HModule:changing_config-2&quot;&gt;HModule：changing_config（Config1，Config2）-&amp;gt; {确定，Config3} | {错误，原因}&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4f7b92904233e179efe7e968f3f5ac4a2050936a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;HModule:log-2&quot;&gt;HModule:log(LogEvent, Config) -&amp;gt; void()&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;HModule:log-2&quot;&gt;HModule：log（LogEvent，Config）-&amp;gt; void（）&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0f6b364ccd6f9d8d11f1638b9b69ffc387464fdd" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;HModule:removing_handler-1&quot;&gt;HModule:removing_handler(Config) -&amp;gt; ok&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;HModule:removing_handler-1&quot;&gt;HModule：removing_handler（Config）-&amp;gt;确定&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="94ec12e9330eaa8d11679f5a430705f3c62b0957" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Handling%20Events&quot;&gt;3.11 Handling Events&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Handling%20Events&quot;&gt;3.11处理事件&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="247b5f32868ee20d78f8a57b57a152cac6fbf582" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Hibernation&quot;&gt;3.25 Hibernation&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Hibernation&quot;&gt;3.25休眠&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0ba30459822e240e20c2854be9ace42d9b31c4e8" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;History&quot;&gt;2.1 History&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;History&quot;&gt;2.1历史&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b35733df45c913086c27acc702528649471b07f0" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;How-to-Build-and-Install-ErlangOTP&quot;&gt;2.4 How to Build and Install Erlang/OTP&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;How-to-Build-and-Install-ErlangOTP&quot;&gt;2.4如何构建和安装Erlang / OTP&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ad3ec0316f0d3ffba86bbc9340e02081f02a00ad" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;How-to-Build-and-Install-ErlangOTP_Accessing-the-Documentation&quot;&gt;Accessing the Documentation&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;How-to-Build-and-Install-ErlangOTP_Accessing-the-Documentation&quot;&gt;访问文档&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e58722f4cb40b44784407943c8962d243f65dd4d" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;How-to-Build-and-Install-ErlangOTP_Building&quot;&gt;Building&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;How-to-Build-and-Install-ErlangOTP_Building&quot;&gt;Building&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="53b6047995a57c2afc0e77f68448167f5052ca4d" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;How-to-Build-and-Install-ErlangOTP_Configuring&quot;&gt;Configuring&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;How-to-Build-and-Install-ErlangOTP_Configuring&quot;&gt;Configuring&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c1d75bcc00c3731cbc734aa37c649b796946cdf9" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;How-to-Build-and-Install-ErlangOTP_How-to-Build-the-Documentation&quot;&gt;How to Build the Documentation&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;How-to-Build-and-Install-ErlangOTP_How-to-Build-the-Documentation&quot;&gt;如何建立文件&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4f058658493da3429f7a5574e75702d77494d505" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;How-to-Build-and-Install-ErlangOTP_How-to-Install-the-Documentation&quot;&gt;How to Install the Documentation&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;How-to-Build-and-Install-ErlangOTP_How-to-Install-the-Documentation&quot;&gt;如何安装文档&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ca8d730f60e8b6029b098c34fa8133af5bf230f7" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;How-to-Build-and-Install-ErlangOTP_How-to-Install-the-Preformatted-Documentation&quot;&gt;How to Install the Pre-formatted Documentation&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;How-to-Build-and-Install-ErlangOTP_How-to-Install-the-Preformatted-Documentation&quot;&gt;如何安装预格式化的文档&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f6115f120633f20015b287e26c05e9a8a1a9b20a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;How-to-Build-and-Install-ErlangOTP_Installing&quot;&gt;Installing&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;How-to-Build-and-Install-ErlangOTP_Installing&quot;&gt;Installing&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9b05b44ef1c0c4872a59e4fb24fd7fd79000111c" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;How-to-Build-and-Install-ErlangOTP_Running&quot;&gt;Running&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;How-to-Build-and-Install-ErlangOTP_Running&quot;&gt;Running&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="906a18c4d2b7ea29641fd74d4fe09ab279655c3c" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;How-to-Build-and-Install-ErlangOTP_Testing&quot;&gt;Testing&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;How-to-Build-and-Install-ErlangOTP_Testing&quot;&gt;Testing&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a37f44bfc3985aa74e6104e9c806e8f9fc4014e2" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;How-to-Build-and-Install-ErlangOTP_Unpacking&quot;&gt;Unpacking&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;How-to-Build-and-Install-ErlangOTP_Unpacking&quot;&gt;Unpacking&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="232ec7d6fa95eb753924cecbcc9dac253ca4a26a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;INTEGER&quot;&gt;INTEGER&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;INTEGER&quot;&gt;INTEGER&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b1b09876a6bea8288f6b1179a74fbcf329b18692" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;In%20a%20Supervision%20Tree&quot;&gt;In a Supervision Tree&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;In%20a%20Supervision%20Tree&quot;&gt;在监督树中&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="86b47db0e523a65a1b5c2f11a54b5583fa7dc591" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Including_the_EUnit_header_file&quot;&gt;Including the EUnit header file&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Including_the_EUnit_header_file&quot;&gt;包括EUnit头文件&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6c4af09cf76ff1d1f0a72003ca93174a2797fbd9" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Information%20Object&quot;&gt;3.9 ASN.1 Information Objects (X.681)&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Information%20Object&quot;&gt;3.9 ASN.1信息对象（X.681）&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="fec4d2ae90b91e17bcbc65a6ce8342702b0df97f" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Inserted%20Events&quot;&gt;3.21 Inserted Events&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Inserted%20Events&quot;&gt;3.21插入的事件&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1f4e60514fcae746ab13e1baceb279f010c4dcb0" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Introduction&quot;&gt;2.1 Introduction&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Introduction&quot;&gt;2.1引言&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2b79358c78363bd7505ca8ffd97be133e7cc1a65" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Introduction&quot;&gt;3.1 Introduction&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Introduction&quot;&gt;3.1简介&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ac85f0345a656a4047bc7809fd83ad76ce47baa0" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Introduction&quot;&gt;4.1 Introduction&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Introduction&quot;&gt;4.1引言&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2c11b0bf61842120b937afb734c66f2b2540baab" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Introduction&quot;&gt;5.1 Introduction&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Introduction&quot;&gt;5.1简介&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d0e7ed4b01298518a2f436c9dc3cd52b6f55bd00" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Introduction_Compatibility&quot;&gt;Compatibility&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Introduction_Compatibility&quot;&gt;Compatibility&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="47137d8da5ca85ce2b991c3b460790c6ef6ae98c" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Introduction_Cross-Configuration&quot;&gt;Cross Configuration&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Introduction_Cross-Configuration&quot;&gt;交叉配置&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4c2f1b471b5621a46206d817749c1bc73e62da9d" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Introduction_Patches&quot;&gt;Patches&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Introduction_Patches&quot;&gt;Patches&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f79581503fdeebe9888ef6a71ec2e32680921cb7" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Introduction_What-can-be-Cross-Compiled&quot;&gt;What can be Cross Compiled?&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Introduction_What-can-be-Cross-Compiled&quot;&gt;什么可以交叉编译？&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="265c75a817f6bcc3a186787fefda213d66f7fc1b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Introduction_otpbuild-Versus-configuremake&quot;&gt;otp_build Versus configure/make&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Introduction_otpbuild-Versus-configuremake&quot;&gt;otp_build与配置/制作&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6b86abf67b17f7e33a79ae554e047ab05a672fe9" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Lazy_generators&quot;&gt;Lazy generators&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Lazy_generators&quot;&gt;惰性发电机&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8ea98cd5352c9c8990a3ae050ba54df8a3edc8ba" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Logger:error_msg-2&quot;&gt;Logger:error_msg(Format, Data) -&amp;gt; ok | exit(Reason)&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Logger:error_msg-2&quot;&gt;记录器：error_msg（格式，数据）-&amp;gt;确定| 退出（原因）&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e2f0a500a4251e9141f1d7e43187b09f5bba5029" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Logger:info_msg-2&quot;&gt;Logger:info_msg(Format, Data) -&amp;gt; ok | exit(Reason)&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Logger:info_msg-2&quot;&gt;记录器：info_msg（格式，数据）-&amp;gt;确定| 退出（原因）&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2722cdd7604277ccb06e6b3295ee69a8c6c89047" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Logger:warning_msg-2&quot;&gt;Logger:warning_msg(Format, Data) -&amp;gt; ok | exit(Reason)&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Logger:warning_msg-2&quot;&gt;Logger：warning_msg（格式，数据）-&amp;gt;确定| 退出（原因）&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a202763b82219fc3ec9ff33caca79bc5f2c0ce37" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;MAP_SEQ_SET&quot;&gt;Map representation for SEQUENCE and SET&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;MAP_SEQ_SET&quot;&gt;SEQUENCE和SET的映射表示&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c3cb377459b1da3856a6be3528028857feeb0717" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Macros_for_running_external_commands&quot;&gt;Macros for running external commands&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Macros_for_running_external_commands&quot;&gt;用于运行外部命令的宏&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="637981ab9229e1641bd4230a593b212c17ac185b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Migration%20to%20gen_statem&quot;&gt;Migration to gen_statem&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Migration%20to%20gen_statem&quot;&gt;迁移到gen_statem&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6102f27ca857d0bdc1ce9062a3454443c1bff923" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Mod:start-3&quot;&gt;Mod:start({Type, Ref}, Svc, Config) -&amp;gt; {ok, Pid} | {ok, Pid, LAddrs} | {error, Reason}&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Mod:start-3&quot;&gt;Mod：start（{Type，Ref}，Svc，Config）-&amp;gt; {ok，Pid} | {ok，Pid，LAddrs} | {错误，原因}&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="31868da87e6f10ebeaed19962945220438e04040" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:Function-2&quot;&gt;Module:Function(Env, Input)-&amp;gt; Response &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:Function-2&quot;&gt;模块：功能（环境，输入）-&amp;gt;响应 &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="14947c649e25789466b61c22018a6ca6e18e6fac" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:Function-3&quot;&gt;Module:Function(SessionID, Env, Input)-&amp;gt; {continue, State} | _ &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:Function-3&quot;&gt;Module：Function（SessionID，Env，Input）-&amp;gt; {continue，State} | _&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f5b037aec13dac3b6fa7dcecb996c29ca4950b69" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:StateName-3&quot;&gt;Module:StateName(EventType, EventContent, Data) -&amp;gt; StateFunctionResult &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:StateName-3&quot;&gt;Module：StateName（EventType，EventContent，Data）-&amp;gt; StateFunctionResult &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8dd92ecc581478f5fa57ca95ad6e3d84a96128f6" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:StateName-3&quot;&gt;Module:StateName(enter, OldState, Data) -&amp;gt; StateEnterResult(StateName) &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:StateName-3&quot;&gt;Module：StateName（enter，OldState，Data）-&amp;gt; StateEnterResult（StateName） &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2b1320b878fd8a227809984c2154afa784fc7baa" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:Testcase-0&quot;&gt;Module:Testcase() -&amp;gt; [Info] &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:Testcase-0&quot;&gt;Module：Testcase（）-&amp;gt; [Info] &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a1645be7ee8b0a478ca3b3bea5f241cab8978af0" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:Testcase-1&quot;&gt;Module:Testcase(Config) -&amp;gt; term() | {skip,Reason} | {comment,Comment} | {save_config,SaveConfig} | {skip_and_save,Reason,SaveConfig} | exit() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:Testcase-1&quot;&gt;Module：Testcase（Config）-&amp;gt; term（）| {跳过，原因} | {comment，Comment} | {save_config，SaveConfig} | {skip_and_save，Reason，SaveConfig} | 出口（）&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0d6de1005c8ee7cc07a2173542eed918d8f24c50" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:abort-3&quot;&gt;Module:abort(Code, Text, State) -&amp;gt; ok&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:abort-3&quot;&gt;模块：中止（代码，文本，状态）-&amp;gt;确定&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f32b29371e535f5ff09bf2a00ee125b6a484ac44" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:add_host_key-3&quot;&gt;Module:add_host_key(HostNames, PublicHostKey, ConnectOptions) -&amp;gt; ok | {error, Reason}&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:add_host_key-3&quot;&gt;模块：add_host_key（主机名，PublicHostKey，ConnectOptions）-&amp;gt;确定| {错误，原因}&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9435ebdf1b2617a7e0ca3a2fac873c8e3e03b207" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:all-0&quot;&gt;Module:all() -&amp;gt; Tests | {skip,Reason} &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:all-0&quot;&gt;Module：all（）-&amp;gt;测试| {跳过，原因}&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="043e0b89fc497175d023c643a0cd29ff126624b7" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:backup-2&quot;&gt;Module:backup(State, BackupDir) -&amp;gt; Reply&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:backup-2&quot;&gt;Module：backup（State，BackupDir）-&amp;gt;回复&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="bc3b00d754bf06c923c9083afe960ad7df9af6ea" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:backup-2&quot;&gt;Module:backup(TabId, BackupDir) -&amp;gt; ok | {error, Reason}&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:backup-2&quot;&gt;Module：backup（TabId，BackupDir）-&amp;gt;确定| {错误，原因}&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b53f1910474a95f8ed6c11a848fd2a2b9022605f" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:callback_mode-0&quot;&gt;Module:callback_mode() -&amp;gt; CallbackMode&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:callback_mode-0&quot;&gt;Module：callback_mode（）-&amp;gt; CallbackMode&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="89ccc835e11f62c3b8d9d2bc6b4e816ae9cd3bf1" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:close-1&quot;&gt;Module:close(State) -&amp;gt; void()&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:close-1&quot;&gt;模块：关闭（状态）-&amp;gt;无效（）&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7e9696a27838d8474043f9130fdce33a349b0db9" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:close-1&quot;&gt;Module:close(TabId) -&amp;gt; void()&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:close-1&quot;&gt;Module：close（TabId）-&amp;gt; void（）&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="54508262bd02c28014f5013b2dc8891c11fab200" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:code_change-3&quot;&gt;Module:code_change(OldVsn, State, Extra) -&amp;gt; {ok, NewState} | {error, Reason}&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:code_change-3&quot;&gt;Module：code_change（OldVsn，State，Extra）-&amp;gt; {ok，NewState} | {错误，原因}&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="640a9169ab425ef998d3bad3a5a4e729ce6f968a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:code_change-3&quot;&gt;Module:code_change(OldVsn, State, Extra) -&amp;gt; {ok, NewState}&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:code_change-3&quot;&gt;Module：code_change（OldVsn，State，Extra）-&amp;gt; {ok，NewState}&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="073b335171794e4762d9b0132e3d7c52ae391358" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:code_change-4&quot;&gt;Module:code_change(Destination, Vsn, Extra, State) -&amp;gt; NewState&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:code_change-4&quot;&gt;模组：code_change（目的地，Vsn，额外，状态）-&amp;gt; NewState&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0315552bc843ce940081035c346285c0bf7134e1" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:code_change-4&quot;&gt;Module:code_change(OldVsn, OldState, OldData, Extra) -&amp;gt; Result &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:code_change-4&quot;&gt;Module：code_change（OldVsn，OldState，OldData，Extra）-&amp;gt;结果 &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f7ace6a400f3c42f370f8684952bc5e391a99e3d" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:config_change-3&quot;&gt;Module:config_change(Changed, New, Removed) -&amp;gt; ok&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:config_change-3&quot;&gt;Module：config_change（更改，新建，删除）-&amp;gt;确定&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="bded893370e67a03155b4ff3408f16b468056d56" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:decode-2&quot;&gt;Module:decode(T, Version) -&amp;gt; R&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:decode-2&quot;&gt;模组：解码（T，版本）-&amp;gt; R&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="05197c666cb4f8867ae0a5474a89bcbe1b04c302" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:decode_message-3&quot;&gt;Module:decode_message(EncodingConfig, Version, Bin) -&amp;gt; {ok, Message} | Error&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:decode_message-3&quot;&gt;Module：decode_message（EncodingConfig，Version，Bin）-&amp;gt; {确定，消息} | 错误&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f79bce49c717efd1512d5cf5354c0b6c8c1d7d2d" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:decode_mini_message-3&quot;&gt;Module:decode_mini_message(EncodingConfig, Version, Bin) -&amp;gt; {ok, Message} | Error&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:decode_mini_message-3&quot;&gt;Module：decode_mini_message（EncodingConfig，Version，Bin）-&amp;gt; {确定，消息} | 错误&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a00d58e29d71c139c643ffe6c7cd0f7e6c9074a7" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:delete-1&quot;&gt;Module:delete(TabId) -&amp;gt; void()&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:delete-1&quot;&gt;Module：delete（TabId）-&amp;gt; void（）&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="59211ed028f75de2f05a7fd0cb8957003c47a747" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:delete-2&quot;&gt;Module:delete(TabId, Key) -&amp;gt; ok | {error, Reason}&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:delete-2&quot;&gt;Module：delete（TabId，Key）-&amp;gt;确定| {错误，原因}&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4d19dcb69d8787eace99786b8c17cdfcd80c2968" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:do-1&quot;&gt;Module:do(ModData)-&amp;gt; {proceed, OldData} | {proceed, NewData} | {break, NewData} | done&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:do-1&quot;&gt;Module：do（ModData）-&amp;gt; {proceded，OldData} | {proceded，NewData} | {break，NewData} | 完成&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c1f5510c06d1632e671f4f00a3270a19a91e38dc" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:dump-2&quot;&gt;Module:dump(State, Destination) -&amp;gt; Reply&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:dump-2&quot;&gt;模块：转储（状态，目标）-&amp;gt;回复&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2776ec1c330d929c7a4bf167a0036d33d0565887" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:enabled-3&quot;&gt;Module:enabled(TraceTag, TracerState, Tracee) -&amp;gt; Result&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:enabled-3&quot;&gt;Module：enabled（TraceTag，TracerState，Tracee）-&amp;gt;结果&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="aaf2d085f88989af1ae27f71a16d6faa91414067" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:enabled_call-3&quot;&gt;Module:enabled_call(TraceTag, TracerState, Tracee) -&amp;gt; Result&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:enabled_call-3&quot;&gt;模块：enabled_call（TraceTag，TracerState，Tracee）-&amp;gt;结果&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d7d6ff192d285c01b268c2324ad6a47d58db9410" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:enabled_garbage_collection-3&quot;&gt;Module:enabled_garbage_collection(TraceTag, TracerState, Tracee) -&amp;gt; Result&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:enabled_garbage_collection-3&quot;&gt;模块：enabled_garbage_collection（TraceTag，TracerState，Tracee）-&amp;gt;结果&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a1bbd3c506e0226937bd8e7565ff712279bd2b6b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:enabled_ports-3&quot;&gt;Module:enabled_ports(TraceTag, TracerState, Tracee) -&amp;gt; Result&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:enabled_ports-3&quot;&gt;模块：enabled_ports（TraceTag，TracerState，Tracee）-&amp;gt;结果&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="dfaeb84a36390134049d943a0d9f2b24690304b7" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:enabled_procs-3&quot;&gt;Module:enabled_procs(TraceTag, TracerState, Tracee) -&amp;gt; Result&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:enabled_procs-3&quot;&gt;模块：enabled_procs（TraceTag，TracerState，Tracee）-&amp;gt;结果&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6b094d46b43c3aba28e3878ea94ca704bedc6c6a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:enabled_receive-3&quot;&gt;Module:enabled_receive(TraceTag, TracerState, Tracee) -&amp;gt; Result &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:enabled_receive-3&quot;&gt;模块：enabled_receive（TraceTag，TracerState，Tracee）-&amp;gt;结果 &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="691b136d5fb01dc266b25f3586596b27b19411a6" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:enabled_running_ports-3&quot;&gt;Module:enabled_running_ports(TraceTag, TracerState, Tracee) -&amp;gt; Result&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:enabled_running_ports-3&quot;&gt;模块：enabled_running_ports（TraceTag，TracerState，Tracee）-&amp;gt;结果&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6697752e0416421fb266b8e976da623a7e349418" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:enabled_running_procs-3&quot;&gt;Module:enabled_running_procs(TraceTag, TracerState, Tracee) -&amp;gt; Result&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:enabled_running_procs-3&quot;&gt;模块：enabled_running_procs（TraceTag，TracerState，Tracee）-&amp;gt;结果&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d62977b1794eb482fe7fc4f55ec75394ad1e7a18" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:enabled_send-3&quot;&gt;Module:enabled_send(TraceTag, TracerState, Tracee) -&amp;gt; Result&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:enabled_send-3&quot;&gt;模块：enabled_send（TraceTag，TracerState，Tracee）-&amp;gt;结果&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8a0c8092d2a8482040f9fed7402b89f498d0dfd6" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:encode-2&quot;&gt;Module:encode(R, Version) -&amp;gt; T&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:encode-2&quot;&gt;模组：encode（R，Version）-&amp;gt; T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ad539f551425594c6fe6a675b654058fd0620ef6" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:encode_action_reply-3&quot;&gt;Module:encode_action_reply(EncodingConfig, Version, AR) -&amp;gt; OK | Error&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:encode_action_reply-3&quot;&gt;模块：encode_action_reply（EncodingConfig，Version，AR）-&amp;gt;确定| 错误&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d0822109fc06b71f070adf43b4c4e4a746e1e3e3" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:encode_action_requests-3&quot;&gt;Module:encode_action_requests(EncodingConfig, Version, ARs) -&amp;gt; OK | Error&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:encode_action_requests-3&quot;&gt;模块：encode_action_requests（EncodingConfig，Version，AR）-&amp;gt;确定| 错误&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5846bf0d8f9a51657d61ba3ce2ce2e5f0b36f7c9" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:encode_message-3&quot;&gt;Module:encode_message(EncodingConfig, Version, Message) -&amp;gt; {ok, Bin} | Error&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:encode_message-3&quot;&gt;Module：encode_message（EncodingConfig，Version，Message）-&amp;gt; {ok，Bin} | 错误&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9b5bfa3fb65b446dd147725406d324fafb7c14da" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:encode_transaction-3&quot;&gt;Module:encode_transaction(EncodingConfig, Version, Transaction) -&amp;gt; OK | Error&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:encode_transaction-3&quot;&gt;Module：encode_transaction（EncodingConfig，Version，Transaction）-&amp;gt;确定| 错误&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2e2c7a7d11e4a8e02d31e1e43b71855df9374bae" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:end_per_group-2&quot;&gt;Module:end_per_group(GroupName, Config) -&amp;gt; term() | {return_group_result,Status}&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:end_per_group-2&quot;&gt;模块：end_per_group（GroupName，Config）-&amp;gt; term（）| {return_group_result，状态}&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ada874a85ec35747a80d4392d1ecdad7f66f5968" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:end_per_suite-1&quot;&gt;Module:end_per_suite(Config) -&amp;gt; term() | {save_config,SaveConfig}&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:end_per_suite-1&quot;&gt;模块：end_per_suite（Config）-&amp;gt; term（）| {save_config，SaveConfig}&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f6c5c35c7a92180c1d80b7494d4fd495435cfdd9" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:end_per_testcase-2&quot;&gt;Module:end_per_testcase(TestCase, Config) -&amp;gt; term() | {fail,Reason} | {save_config,SaveConfig}&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:end_per_testcase-2&quot;&gt;模块：end_per_testcase（TestCase，Config）-&amp;gt; term（）| {失败，原因} | {save_config，SaveConfig}&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0a646a1413b2403bd8212f151d014a4babd829d5" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:event-4&quot;&gt;Module:event(What, Port, Dir, Data) -&amp;gt; ignored&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:event-4&quot;&gt;模块：事件（什么，端口，目录，数据）-&amp;gt;被忽略&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ee214e07e0988a45dca69491cf8a37c0a3a444af" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:event-5&quot;&gt;Module:event(What, Address, Port, Dir, Data) -&amp;gt; ignored&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:event-5&quot;&gt;模块：事件（什么，地址，端口，目录，数据）-&amp;gt;被忽略&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4da5a0ab3b5c9bd2b9fc6c40e6b620e8531e08b0" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:format_status-2&quot;&gt;Module:format_status(Opt, [PDict, State]) -&amp;gt; Status&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:format_status-2&quot;&gt;模组：format_status（Opt，[PDict，State]）-&amp;gt;状态&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d1c929c6d2ac77e2320fde9b08c1d3c75b70a449" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:format_status-2&quot;&gt;Module:format_status(Opt, [PDict,State,Data]) -&amp;gt; Status &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:format_status-2&quot;&gt;模组：format_status（Opt，[PDict，State，Data]）-&amp;gt;状态 &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5ab0cd2d7e706f5eb38eaab54425db7718bd1529" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:group-1&quot;&gt;Module:group(GroupName) -&amp;gt; [Info] &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:group-1&quot;&gt;Module：group（GroupName）-&amp;gt; [Info] &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="97feec5cb78e3dc4c3095527f6aabc2c3163938b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:groups-0&quot;&gt;Module:groups() -&amp;gt; GroupDefs&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:groups-0&quot;&gt;Module：groups（）-&amp;gt; GroupDefs&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3a182f7ca2bc9a5721a184cdff03abc8d15064a7" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:handle_call-2&quot;&gt;Module:handle_call(Request, State) -&amp;gt; Result&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:handle_call-2&quot;&gt;模块：handle_call（请求，状态）-&amp;gt;结果&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="88a3c04399698b85ca2b7e8ba6be48ec78cce93d" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:handle_call-3&quot;&gt;Module:handle_call(Msg, From, State) -&amp;gt; Result&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:handle_call-3&quot;&gt;模块：handle_call（消息，发件人，州）-&amp;gt;结果&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="78a6be4f2ec3033f7dee7a586efaac7a8d1b2092" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:handle_call-3&quot;&gt;Module:handle_call(Request, From, State) -&amp;gt; Result&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:handle_call-3&quot;&gt;模块：handle_call（请求，发件人，状态）-&amp;gt;结果&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c737dab585202257b8fb605de051e3af45e1325c" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:handle_cast-2&quot;&gt;Module:handle_cast(Msg, State) -&amp;gt; Result&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:handle_cast-2&quot;&gt;模块：handle_cast（消息，状态）-&amp;gt;结果&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2746898e89bea74cf703166669042b6f2dc4fb02" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:handle_cast-2&quot;&gt;Module:handle_cast(Request, State) -&amp;gt; Result&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:handle_cast-2&quot;&gt;模块：handle_cast（请求，状态）-&amp;gt;结果&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6fdddfc1f032ffda367d2e3a05bab75b4884d090" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:handle_continue-2&quot;&gt;Module:handle_continue(Continue, State) -&amp;gt; Result&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:handle_continue-2&quot;&gt;Module：handle_continue（Continue，State）-&amp;gt;结果&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e084575ef4979ba9e78926f6fd3d3eb3f5ba64d3" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:handle_event-2&quot;&gt;Module:handle_event(Event, State) -&amp;gt; Result&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:handle_event-2&quot;&gt;模块：handle_event（事件，状态）-&amp;gt;结果&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f8c4b7113e7a031be417d9987cb1ad731e264068" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:handle_event-4&quot;&gt;Module:handle_event(EventType, EventContent, State, Data) -&amp;gt; HandleEventResult &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:handle_event-4&quot;&gt;模块：handle_event（EventType，EventContent，State，Data）-&amp;gt; HandleEventResult &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8bfc2f527f89bafc49f5853b3094d93e4bc729d4" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:handle_event-4&quot;&gt;Module:handle_event(enter, OldState, State, Data) -&amp;gt; StateEnterResult(State) &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:handle_event-4&quot;&gt;Module：handle_event（enter，OldState，State，Data）-&amp;gt; StateEnterResult（State） &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c3475c91b6b5d86f799b0270c54b2d57d0528210" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:handle_info-2&quot;&gt;Module:handle_info(Info, State) -&amp;gt; Result&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:handle_info-2&quot;&gt;模块：handle_info（信息，状态）-&amp;gt;结果&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="de7c6f11bd51d2dde7954ad5871473fea7a6df3b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:handle_msg-2&quot;&gt;Module:handle_msg(Msg, State) -&amp;gt; {ok, State} | {stop, ChannelId, State}&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:handle_msg-2&quot;&gt;Module：handle_msg（Msg，State）-&amp;gt; {ok，State} | {停止，ChannelId，状态}&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="693d4db251a0fb3ba65284491e151b726e7cac3d" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:handle_ssh_msg-2&quot;&gt;Module:handle_ssh_msg(Msg, State) -&amp;gt; {ok, State} | {stop, ChannelId, State}&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:handle_ssh_msg-2&quot;&gt;模块：handle_ssh_msg（消息状态）-&amp;gt; {确定，状态} | {停止，ChannelId，状态}&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e517dc297d285ca1dfd3b569be3dc1af6cf5dfcc" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:host_key-2&quot;&gt;Module:host_key(Algorithm, DaemonOptions) -&amp;gt; {ok, Key} | {error, Reason}&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:host_key-2&quot;&gt;Module：host_key（Algorithm，DaemonOptions）-&amp;gt; {确定，密钥} | {错误，原因}&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5dd618681f8243354684088a8502f0b5b0c944f4" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:id-1&quot;&gt;Module:id(Opts) -&amp;gt; Id&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:id-1&quot;&gt;模块：id（选项）-&amp;gt; ID&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="079029437483a0edd9888260043d24790e8b8e68" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:info-1&quot;&gt;Module:info(State) -&amp;gt; Reply&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:info-1&quot;&gt;模块：信息（状态）-&amp;gt;回复&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9b0225e52b9a6231b0170d470ee6ffed1105a2ee" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:info-1&quot;&gt;Module:info(TabId) -&amp;gt; {ok, Info} | {error, Reason}&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:info-1&quot;&gt;Module：info（TabId）-&amp;gt; {ok，Info} | {错误，原因}&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b3404268de914d2396556558a62bd564e57d30f8" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:init-1&quot;&gt;Module:init(Args) -&amp;gt; Result(StateType)&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:init-1&quot;&gt;Module：init（Args）-&amp;gt; Result（StateType）&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="83fbbce5b244a606f6ba08209bd399577a28f3f6" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:init-1&quot;&gt;Module:init(Args) -&amp;gt; Result&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:init-1&quot;&gt;Module：init（Args）-&amp;gt;结果&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="56f838c4948bd0edd85789fde08a6a9bd234171d" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:init-1&quot;&gt;Module:init(Args) -&amp;gt; {ok, State} | {ok, State, timeout()} | {stop, Reason}&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:init-1&quot;&gt;Module：init（Args）-&amp;gt; {确定，状态} | {确定，状态，超时（）} | {停止，原因}&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="269c22aa5a92b060fc9929f11fd662ed6f8cf5ea" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:init-1&quot;&gt;Module:init(InitArgs) -&amp;gt; {ok,State} | {ok,State,hibernate} | {error,Reason}&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:init-1&quot;&gt;Module：init（InitArgs）-&amp;gt; {ok，State} | {ok，状态，休眠} | {错误，原因}&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="fe0c39b736eeee7f454d3973f133eba2ed84202b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:init-2&quot;&gt;Module:init(Id, Opts) -&amp;gt; {ok, State} | {ok, State, Priority}&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:init-2&quot;&gt;Module：init（Id，Opts）-&amp;gt; {确定，状态} | {确定，州，优先级}&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="88a1392695079de717ca7fa3d7416bb99be08395" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:init_per_group-2&quot;&gt;Module:init_per_group(GroupName, Config) -&amp;gt; NewConfig | {skip,Reason}&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:init_per_group-2&quot;&gt;模块：init_per_group（GroupName，Config）-&amp;gt; NewConfig | {跳过，原因}&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="593d0fbdba9303f6b61c82a7be241d1fdf6e565b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:init_per_suite-1&quot;&gt;Module:init_per_suite(Config) -&amp;gt; NewConfig | {skip,Reason} | {skip_and_save,Reason,SaveConfig}&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:init_per_suite-1&quot;&gt;模块：init_per_suite（Config）-&amp;gt; NewConfig | {跳过，原因} | {skip_and_save，原因，SaveConfig}&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="24e00256812bb2beab441c9e03b5cb248b3db11b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:init_per_testcase-2&quot;&gt;Module:init_per_testcase(TestCase, Config) -&amp;gt; NewConfig | {fail,Reason} | {skip,Reason}&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:init_per_testcase-2&quot;&gt;模块：init_per_testcase（TestCase，Config）-&amp;gt; NewConfig | {失败，原因} | {跳过，原因}&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="bfcf904b19d1f6eb8a1b64b7ffa2e9aeacf94796" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:is_auth_key-3&quot;&gt;Module:is_auth_key(PublicUserKey, User, DaemonOptions) -&amp;gt; Result&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:is_auth_key-3&quot;&gt;模块：is_auth_key（PublicUserKey，User，DaemonOptions）-&amp;gt;结果&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="dc6fb320d78c3f3a65c350f7c16452c7541990f9" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:is_host_key-4&quot;&gt;Module:is_host_key(Key, Host, Algorithm, ConnectOptions) -&amp;gt; Result&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:is_host_key-4&quot;&gt;模块：is_host_key（密钥，主机，算法，ConnectOptions）-&amp;gt;结果&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f8e0e557a10a9ff55255f5c22a99e290ccefd881" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:load-2&quot;&gt;Module:load(Line, AccIn)-&amp;gt; eof | ok | {ok, AccOut} | {ok, AccOut, {Option, Value}} | {ok, AccOut, [{Option, Value}]} | {error, Reason}&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:load-2&quot;&gt;Module：load（Line，AccIn）-&amp;gt; eof | 好的 {ok，AccOut} | {ok，AccOut，{Option，Value}} | {ok，AccOut，[{Option，Value}]}} | {错误，原因}&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="03720dd480310ac41b0e21f67aeb174c1a84e970" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:load_mib-4&quot;&gt;Module:load_mib(State, Filename, MeOverride, TeOverride) -&amp;gt; {ok, NewState} | {error, Reason}&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:load_mib-4&quot;&gt;Module：load_mib（State，Filename，MeOverride，TeOverride）-&amp;gt; {ok，NewState} | {错误，原因}&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="90a5e496eff6584b200440c82bd1084f56b95d08" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:lookup-2&quot;&gt;Module:lookup(State, Oid) -&amp;gt; Reply&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:lookup-2&quot;&gt;Module：lookup（State，Oid）-&amp;gt;回复&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9cee41ce9c906f1ea8dda40dcb6c76f522fc9a8a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:match_delete-2&quot;&gt;Module:match_delete(TabId, Pattern) -&amp;gt; {ok, Recs} | {error, Reason}&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:match_delete-2&quot;&gt;Module：match_delete（TabId，Pattern）-&amp;gt; {ok，Recs} | {错误，原因}&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d6c44a64631d31d2aeec817208cfc3dc1b26e460" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:match_object-2&quot;&gt;Module:match_object(TabId, Pattern) -&amp;gt; {ok, Recs} | {error, Reason}&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:match_object-2&quot;&gt;Module：match_object（TabId，Pattern）-&amp;gt; {ok，Recs} | {错误，原因}&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ebbb6ed06882827e76cbd25fdad31db80fb6f20a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:new-1&quot;&gt;Module:new(Storage) -&amp;gt; State&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:new-1&quot;&gt;模块：新（存储）-&amp;gt;状态&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6a523b4bb8d9e5e0c7a7ed601f7155f6ddd53673" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:next-3&quot;&gt;Module:next(State, Oid, MibView) -&amp;gt; Reply&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:next-3&quot;&gt;Module：next（State，Oid，MibView）-&amp;gt;回复&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f810016716f935d82d52e2f8f79a971e2c1e69c1" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:on_tc_fail-4&quot;&gt;Module:on_tc_fail(SuiteName, TestName, Reason, CTHState) -&amp;gt; NewCTHState&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:on_tc_fail-4&quot;&gt;模块：on_tc_fail（SuiteName，TestName，Reason，CTHState）-&amp;gt; NewCTHState&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="18424598b269f70607d8b226a58e39df91d872dc" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:on_tc_skip-4&quot;&gt;Module:on_tc_skip(SuiteName, TestName, Reason, CTHState) -&amp;gt; NewCTHState&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:on_tc_skip-4&quot;&gt;模块：on_tc_skip（SuiteName，TestName，Reason，CTHState）-&amp;gt; NewCTHState&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="aeb0c83107a3b517f60d64fb5ea3a47a94eab502" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:open-5&quot;&gt;Module:open(Name, RecordName, Fields, Type, Options) -&amp;gt; {ok, TabId} | {error, Reason}&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:open-5&quot;&gt;模块：打开（名称，记录名称，字段，类型，选项）-&amp;gt; {确定，TabId} | {错误，原因}&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="933651edd2c0d0b6bac3a586c133bbb411212a32" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:open-6&quot;&gt;Module:open(Peer, Access, Filename, Mode, SuggestedOptions, State) -&amp;gt; {ok, AcceptedOptions, NewState} | {error, {Code, Text}}&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:open-6&quot;&gt;模块：打开（对等，访问，文件名，模式，SuggestedOptions，状态）-&amp;gt; {确定，AcceptedOptions，NewState} | {错误，{代码，文字}}&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d6f1c00fd657d9a0faf15d97934852e13f1cd038" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:post_end_per_group-5&quot;&gt;Module:post_end_per_group(SuiteName, GroupName, Config, Return, CTHState) -&amp;gt; Result&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:post_end_per_group-5&quot;&gt;模块：post_end_per_group（SuiteName，GroupName，Config，Return，CTHState）-&amp;gt;结果&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="133dca248cce0a1c9b282e4e58a2028049ce3550" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:post_end_per_suite-4&quot;&gt;Module:post_end_per_suite(SuiteName, Config, Return, CTHState) -&amp;gt; Result&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:post_end_per_suite-4&quot;&gt;Module：post_end_per_suite（SuiteName，Config，Return，CTHState）-&amp;gt;结果&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="472b1e24a144887ba26916abe9f92ae3d1fe5c52" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:post_end_per_testcase-5&quot;&gt;Module:post_end_per_testcase(SuiteName, TestcaseName, Config, Return, CTHState) -&amp;gt; Result&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:post_end_per_testcase-5&quot;&gt;模块：post_end_per_testcase（SuiteName，TestcaseName，Config，Return，CTHState）-&amp;gt;结果&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="08dcbfc829215c8231350722fb21b0df8a896925" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:post_init_per_group-5&quot;&gt;Module:post_init_per_group(SuiteName, GroupName, Config, Return, CTHState) -&amp;gt; Result&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:post_init_per_group-5&quot;&gt;模块：post_init_per_group（SuiteName，GroupName，Config，Return，CTHState）-&amp;gt;结果&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8faafdf7923ef00bdb0288cba2c1db0139f82cef" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:post_init_per_suite-4&quot;&gt;Module:post_init_per_suite(SuiteName, Config, Return, CTHState) -&amp;gt; Result&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:post_init_per_suite-4&quot;&gt;模块：post_init_per_suite（SuiteName，Config，Return，CTHState）-&amp;gt;结果&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="039bf6132901f72d0fee08b9aa336fd56cb9a037" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:post_init_per_testcase-5&quot;&gt;Module:post_init_per_testcase(SuiteName, TestcaseName, Config, Return, CTHState) -&amp;gt; Result&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:post_init_per_testcase-5&quot;&gt;模块：post_init_per_testcase（SuiteName，TestcaseName，Config，Return，CTHState）-&amp;gt;结果&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="fe8fa88b1fa12aacabd667092c9686702a0e132e" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:pre_end_per_group-4&quot;&gt;Module:pre_end_per_group(SuiteName, GroupName, EndData, CTHState) -&amp;gt; Result&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:pre_end_per_group-4&quot;&gt;Module：pre_end_per_group（SuiteName，GroupName，EndData，CTHState）-&amp;gt;结果&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="76d7e28cda2c11ec4e7913f2e39784ea99339cce" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:pre_end_per_suite-3&quot;&gt;Module:pre_end_per_suite(SuiteName, EndData, CTHState) -&amp;gt; Result&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:pre_end_per_suite-3&quot;&gt;Module：pre_end_per_suite（SuiteName，EndData，CTHState）-&amp;gt;结果&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="792b41603dd408e1bc92a90cb1a1d6554de22bc1" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:pre_end_per_testcase-4&quot;&gt;Module:pre_end_per_testcase(SuiteName, TestcaseName, EndData, CTHState) -&amp;gt; Result&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:pre_end_per_testcase-4&quot;&gt;模块：pre_end_per_testcase（SuiteName，TestcaseName，EndData，CTHState）-&amp;gt;结果&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="fdfeff64206547dc9b2c0ef0b5adea021abb2211" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:pre_init_per_group-4&quot;&gt;Module:pre_init_per_group(SuiteName, GroupName, InitData, CTHState) -&amp;gt; Result&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:pre_init_per_group-4&quot;&gt;模块：pre_init_per_group（SuiteName，GroupName，InitData，CTHState）-&amp;gt;结果&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a5530030c1ef7050cf665c44c29fdfd2484d77ce" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:pre_init_per_suite-3&quot;&gt;Module:pre_init_per_suite(SuiteName, InitData, CTHState) -&amp;gt; Result&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:pre_init_per_suite-3&quot;&gt;Module：pre_init_per_suite（SuiteName，InitData，CTHState）-&amp;gt;结果&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f8dc29c0a15cdff5ead8ceaca8dbb888bebaabbd" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:pre_init_per_testcase-4&quot;&gt;Module:pre_init_per_testcase(SuiteName, TestcaseName, InitData, CTHState) -&amp;gt; Result&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:pre_init_per_testcase-4&quot;&gt;模块：pre_init_per_testcase（SuiteName，TestcaseName，InitData，CTHState）-&amp;gt;结果&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="dbef09e167fd9e255274fcd2c7d9a92d5acb4cf1" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:prep_stop-1&quot;&gt;Module:prep_stop(State) -&amp;gt; NewState&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:prep_stop-1&quot;&gt;模块：prep_stop（状态）-&amp;gt; NewState&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="daac2b0a5efe907adace2ce2333ffacf54405a23" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:prepare-6&quot;&gt;Module:prepare(Peer, Access, Filename, Mode, SuggestedOptions, InitialState) -&amp;gt; {ok, AcceptedOptions, NewState} | {error, {Code, Text}}&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:prepare-6&quot;&gt;模块：准备（对等，访问，文件名，模式，SuggestedOptions，InitialState）-&amp;gt; {确定，AcceptedOptions，NewState} | {错误，{代码，文字}}&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c6b82311d3590ecc364cb7d2bbb1f0d4ee0072d6" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:read-1&quot;&gt;Module:read(State) -&amp;gt; {more, Bin, NewState} | {last, Bin, FileSize} | {error, {Code, Text}}&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:read-1&quot;&gt;Module：read（State）-&amp;gt; {more，Bin，NewState} | {last，Bin，FileSize} | {错误，{代码，文字}}&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f24067811d6afc1fe91914dab5a082d33adb70b2" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:read-2&quot;&gt;Module:read(TabId, Key) -&amp;gt; false | {value, Record}&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:read-2&quot;&gt;Module：read（TabId，Key）-&amp;gt; false | {值，记录}&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="66e8d6d58ce75cf402a9057866772613fe9756e8" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:register_subagent-3&quot;&gt;Module:register_subagent(State, Oid, Pid) -&amp;gt; Reply&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:register_subagent-3&quot;&gt;模块：register_subagent（状态，Oid，Pid）-&amp;gt;回复&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="952b1db4c125f64ec52273d2142c09f8bf897f66" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:remove-1&quot;&gt;Module:remove(ConfigDB) -&amp;gt; ok | {error, Reason} &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:remove-1&quot;&gt;Module：remove（ConfigDB）-&amp;gt;确定| {错误，原因}&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a7e4777d61ad170d5fc59e2be0e7e4fd50323063" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:resend_message-2&quot;&gt;Module:resend_message(Handle, Msg) -&amp;gt; ok | {cancel, Reason} | Error&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:resend_message-2&quot;&gt;Module：resend_message（Handle，Msg）-&amp;gt;确定| {取消，原因} | 错误&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4d53ddeff79db49b93499a69e393b24e87767bc5" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:send_message-2&quot;&gt;Module:send_message(Handle, Msg) -&amp;gt; ok | {cancel, Reason} | Error&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:send_message-2&quot;&gt;Module：send_message（Handle，Msg）-&amp;gt;确定| {取消，原因} | 错误&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e02c9e04441d1c9e5c1f9dc1a5fc73545d031183" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:send_message-3&quot;&gt;Module:send_message(Handle, Msg, Resend) -&amp;gt; ok | {cancel, Reason} | Error&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:send_message-3&quot;&gt;模块：send_message（句柄，消息，重新发送）-&amp;gt;确定| {取消，原因} | 错误&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f9966c77d6c8917132b64f2b820c334bd00a4d43" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:start-2&quot;&gt;Module:start(StartType, StartArgs) -&amp;gt; {ok, Pid} | {ok, Pid, State} | {error, Reason}&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:start-2&quot;&gt;Module：start（StartType，StartArgs）-&amp;gt; {ok，Pid} | {ok，Pid，状态} | {错误，原因}&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="646680254b615363ff9ca4d3430e3cb86da4cef7" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:start_phase-3&quot;&gt;Module:start_phase(Phase, StartType, PhaseArgs) -&amp;gt; ok | {error, Reason}&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:start_phase-3&quot;&gt;Module：start_phase（Phase，StartType，PhaseArgs）-&amp;gt;确定| {错误，原因}&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1a26ab16e36c26c58c54b95840057c0940017ba4" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:stop-1&quot;&gt;Module:stop(State)&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:stop-1&quot;&gt;Module:stop(State)&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2824d610e59fcce8a904f71418a54cbe261756da" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:store-2&quot;&gt;Module:store({Option, Value}, Config)-&amp;gt; {ok, {Option, NewValue}} | {error, Reason}&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:store-2&quot;&gt;Module：store（{Option，Value}，Config）-&amp;gt; {ok，{Option，NewValue}} | {错误，原因}&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f4438509bdd7c68b64f6deabae52724133f75bda" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:suite-0&quot;&gt;Module:suite() -&amp;gt; [Info] &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:suite-0&quot;&gt;模块：suite（）-&amp;gt; [信息] &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="287cae5d5910944440f6d8b51fdae08e25af6823" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:sync-1&quot;&gt;Module:sync(State) -&amp;gt; void()&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:sync-1&quot;&gt;模块：同步（状态）-&amp;gt;无效（）&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2274b43719b317c4c200de1baa14e21332106b79" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:sync-1&quot;&gt;Module:sync(TabId) -&amp;gt; void()&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:sync-1&quot;&gt;Module：sync（TabId）-&amp;gt; void（）&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8f7994c74eee093b2fbb404b35f9540fc8d5cb38" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:system_code_change-4&quot;&gt;Module:system_code_change(Misc, Module, OldVsn, Extra) -&amp;gt; {ok, NMisc}&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:system_code_change-4&quot;&gt;Module：system_code_change（Misc，Module，OldVsn，Extra）-&amp;gt; {ok，NMisc}&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="67d8e45a9649b4a95f035c578890841dd2f6dc5f" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:system_continue-3&quot;&gt;Module:system_continue(Parent, Debug, Misc) -&amp;gt; none()&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:system_continue-3&quot;&gt;Module：system_continue（Parent，Debug，Misc）-&amp;gt; none（）&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1c5093241b075a2e231d35b75a5949923de155de" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:system_get_state-1&quot;&gt;Module:system_get_state(Misc) -&amp;gt; {ok, State}&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:system_get_state-1&quot;&gt;模块：system_get_state（Misc）-&amp;gt; {确定，状态}&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e181cefd10c35dc18d3145535a30f816d86f472f" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:system_replace_state-2&quot;&gt;Module:system_replace_state(StateFun, Misc) -&amp;gt; {ok, NState, NMisc}&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:system_replace_state-2&quot;&gt;模块：system_replace_state（StateFun，Misc）-&amp;gt; {ok，NState，NMisc}&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="017e4f6db771fd3609a7c3a8546ceb11273ff154" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:system_terminate-4&quot;&gt;Module:system_terminate(Reason, Parent, Debug, Misc) -&amp;gt; none()&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:system_terminate-4&quot;&gt;模组：system_terminate（原因，父项，侦错，其他）-&amp;gt; none（）&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ebd10aaa1e78b7f3b12ff62d59530dd4ee3c6878" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:tab2list-1&quot;&gt;Module:tab2list(TabId) -&amp;gt; Recs&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:tab2list-1&quot;&gt;Module：tab2list（TabId）-&amp;gt; Recs&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="013653c5bb3d02a745b411dd5350bb45354a661c" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:terminate-1&quot;&gt;Module:terminate(CTHState)&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:terminate-1&quot;&gt;Module:terminate(CTHState)&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d936becafa82744b006cfe70037b7d47edaafd49" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:terminate-2&quot;&gt;Module:terminate(Arg, State) -&amp;gt; term()&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:terminate-2&quot;&gt;Module：terminate（Arg，State）-&amp;gt; term（）&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="84b789047b72cbbd7e349e8c7faf247501fe946c" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:terminate-2&quot;&gt;Module:terminate(Reason, State) -&amp;gt; _&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:terminate-2&quot;&gt;模块：终止（原因，状态）-&amp;gt; _&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b1c99e053c9538f6ab449f1b6c6b7cf08c3f538b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:terminate-2&quot;&gt;Module:terminate(Reason, State)&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:terminate-2&quot;&gt;模块：终止（原因，状态）&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5a6cb74cb6bff774ee4c5245da36abbaeabc00e7" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:terminate-3&quot;&gt;Module:terminate(Reason, State, Data) -&amp;gt; Ignored&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:terminate-3&quot;&gt;模块：终止（原因，状态，数据）-&amp;gt;被忽略&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c965e3ba923614af09e5e99682fe299ebb7ed8d4" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:trace-5&quot;&gt;Module:trace(TraceTag, TracerState, Tracee, TraceTerm, Opts) -&amp;gt; Result&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:trace-5&quot;&gt;Module：trace（TraceTag，TracerState，Tracee，TraceTerm，Opts）-&amp;gt;结果&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="07e1ba3f1dad9e2b99341fbcb849aaf688fc4f33" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:trace-5&quot;&gt;Module:trace(seq_trace, TracerState, Label, SeqTraceInfo, Opts) -&amp;gt; Result&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:trace-5&quot;&gt;Module：trace（seq_trace，TracerState，Label，SeqTraceInfo，Opts）-&amp;gt;结果&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6fd2a2d266333aa5b8d15b1e4cf5c82e497b7197" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:trace_call-5&quot;&gt;Module:trace_call(TraceTag, TracerState, Tracee, TraceTerm, Opts) -&amp;gt; Result&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:trace_call-5&quot;&gt;Module：trace_call（TraceTag，TracerState，Tracee，TraceTerm，Opts）-&amp;gt;结果&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a9ee15c98b745d92c6f4a706821a436dffe4b749" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:trace_garbage_collection-5&quot;&gt;Module:trace_garbage_collection(TraceTag, TracerState, Tracee, TraceTerm, Opts) -&amp;gt; Result&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:trace_garbage_collection-5&quot;&gt;模块：trace_garbage_collection（TraceTag，TracerState，Tracee，TraceTerm，Opts）-&amp;gt;结果&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b67aa9e374fef169063f49e3a2842b2f1498788d" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:trace_ports-5&quot;&gt;Module:trace_ports(TraceTag, TracerState, Tracee, TraceTerm, Opts) -&amp;gt; Result&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:trace_ports-5&quot;&gt;Module：trace_ports（TraceTag，TracerState，Tracee，TraceTerm，Opts）-&amp;gt;结果&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6c75ddee1663ba0afb9556578fd040c23549e218" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:trace_procs-5&quot;&gt;Module:trace_procs(TraceTag, TracerState, Tracee, TraceTerm, Opts) -&amp;gt; Result&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:trace_procs-5&quot;&gt;模块：trace_procs（TraceTag，TracerState，Tracee，TraceTerm，Opts）-&amp;gt;结果&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0328b54c6ba16072ada6d85e7ed690f75f70feb4" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:trace_receive-5&quot;&gt;Module:trace_receive(TraceTag, TracerState, Tracee, TraceTerm, Opts) -&amp;gt; Result&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:trace_receive-5&quot;&gt;模块：trace_receive（TraceTag，TracerState，Tracee，TraceTerm，Opts）-&amp;gt;结果&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4528c103a41d2dc1aae01df2a41a0d1198eb6508" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:trace_running_ports-5&quot;&gt;Module:trace_running_ports(TraceTag, TracerState, Tracee, TraceTerm, Opts) -&amp;gt; Result&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:trace_running_ports-5&quot;&gt;Module：trace_running_ports（TraceTag，TracerState，Tracee，TraceTerm，Opts）-&amp;gt;结果&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="757446da26a2a2c2bb0834e0c4bd14c3d21bd05d" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:trace_running_procs-5&quot;&gt;Module:trace_running_procs(TraceTag, TracerState, Tracee, TraceTerm, Opts) -&amp;gt; Result&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:trace_running_procs-5&quot;&gt;模块：trace_running_procs（TraceTag，TracerState，Tracee，TraceTerm，Opts）-&amp;gt;结果&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f5803e08e8c9ef82fdfa475a3aecda48b3219499" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:trace_send-5&quot;&gt;Module:trace_send(TraceTag, TracerState, Tracee, TraceTerm, Opts) -&amp;gt; Result&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:trace_send-5&quot;&gt;Module：trace_send（TraceTag，TracerState，Tracee，TraceTerm，Opts）-&amp;gt;结果&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6e56e7073cd2b10185824961db11fbd9753c1cf3" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:unload_mib-2&quot;&gt;Module:unload_mib(State, Filename) -&amp;gt; {ok, NewState} | {error, Reason}&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:unload_mib-2&quot;&gt;Module：unload_mib（State，Filename）-&amp;gt; {ok，NewState} | {错误，原因}&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f2917b5d04ab9421afbae458aaa99deff80b49e4" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:unregister_subagent-2&quot;&gt;Module:unregister_subagent(State, PidOrOid) -&amp;gt; Reply&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:unregister_subagent-2&quot;&gt;Module：unregister_subagent（State，PidOrOid）-&amp;gt;回复&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b59b34c683f18c18dbe89b5c5fb7f44567e16e70" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:user_key-2&quot;&gt;Module:user_key(Algorithm, ConnectOptions) -&amp;gt; {ok, PrivateKey} | {error, Reason}&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:user_key-2&quot;&gt;Module：user_key（Algorithm，ConnectOptions）-&amp;gt; {ok，PrivateKey} | {错误，原因}&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="76b86f54dac1696cfdeb5181c6f20aa7df5abe76" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:whereis_mib-2&quot;&gt;Module:whereis_mib(State, MibName) -&amp;gt; Reply&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:whereis_mib-2&quot;&gt;Module：whereis_mib（State，MibName）-&amp;gt;回复&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c9131af9e6f79fc752d6afb28daa6713bc457ba9" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:which_mib-2&quot;&gt;Module:which_mib(State, Oid) -&amp;gt; Reply&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:which_mib-2&quot;&gt;Module：which_mib（State，Oid）-&amp;gt;回复&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8a453663698cfa51abaa916984f32f9528a5030b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:which_mibs-1&quot;&gt;Module:which_mibs(State) -&amp;gt; Reply&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:which_mibs-1&quot;&gt;Module：which_mibs（State）-&amp;gt; Reply&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="28e5f2ea3b0f43566589179f91d2c9c295daf21a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:write-2&quot;&gt;Module:write(Bin, State) -&amp;gt; {more, NewState} | {last, FileSize} | {error, {Code, Text}}&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:write-2&quot;&gt;Module：write（Bin，State）-&amp;gt; {more，NewState} | {last，FileSize} | {错误，{代码，文字}}&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9951f8275a05208043da649126c00d9ec2de64cc" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Module:write-2&quot;&gt;Module:write(TabId, Record) -&amp;gt; ok | {error, Reason}&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Module:write-2&quot;&gt;Module：write（TabId，Record）-&amp;gt;确定| {错误，原因}&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b66f63415cd20cb930689522f0505ad177daef6d" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;NULL&quot;&gt;NULL&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;NULL&quot;&gt;NULL&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a91fc3847ad8b71084225b09f87033da16a0a217" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;NegotiationTypes&quot;&gt;EXTERNAL, EMBEDDED PDV, and CHARACTER STRING&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;NegotiationTypes&quot;&gt;外部，嵌入式PDV和字符字符串&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7931620bad16cf1619cd95c42a102743b53a90bc" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;OBJECT%20IDENTIFIER&quot;&gt;OBJECT IDENTIFIER&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;OBJECT%20IDENTIFIER&quot;&gt;对象标识符&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a7d829e96ae42c7030c6f1a368ef2b8121538223" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;OCTET%20STRING&quot;&gt;OCTET STRING&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;OCTET%20STRING&quot;&gt;八弦琴弦&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4eece364411ddaf111bcfb0be258f1339d73b372" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Object%20Descriptor&quot;&gt;Object Descriptor&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Object%20Descriptor&quot;&gt;对象描述符&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a5222822ffb5ce80fb953670d3db7d42198f975b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;One%20Event%20Handler&quot;&gt;3.14 One Event Handler&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;One%20Event%20Handler&quot;&gt;3.14一个事件处理程序&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="49fb9d04a216a6f0fd17a000a94f8bc5d4947790" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Optional-Utilities&quot;&gt;2.3 Optional Utilities&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Optional-Utilities&quot;&gt;2.3可选实用程序&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="685e4d8dce820e811316a53372a496021abfb578" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Optional-Utilities_Building&quot;&gt;Building&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Optional-Utilities_Building&quot;&gt;Building&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="de1bee20a58b378b75259731a8427555d41785ce" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Optional-Utilities_Building-Documentation&quot;&gt;Building Documentation&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Optional-Utilities_Building-Documentation&quot;&gt;建筑文件&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="008d908621c10a088beebf70b14f04f97a1d71b3" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Options%20common%20to%20clients%20and%20daemons&quot;&gt;Options common to clients and daemons&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Options%20common%20to%20clients%20and%20daemons&quot;&gt;客户端和守护程序共有的选项&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="cace4038a273533b3105849655d98a0d7f6708e5" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Other%20data%20types&quot;&gt;Other data types&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Other%20data%20types&quot;&gt;其他数据类型&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="546477cc0d96d775cfe85b278b9a1c1bae713fc0" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;PKCS10&quot;&gt;PKCS#10 Certification Request&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;PKCS10&quot;&gt;PKCS＃10认证请求&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7ba6ab7b4bf95f3dcc350db27e9a672c3f1101a7" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Postponing%20Events&quot;&gt;3.19 Postponing Events&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Postponing%20Events&quot;&gt;3.19推迟活动&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c2e8e1a0eeeb6795e2708ee5d1a8a973a1465e13" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Prerequisites&quot;&gt;5.2 Prerequisites&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Prerequisites&quot;&gt;5.2先决条件&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="df258e382e7781efa99c32ab1cd804439e7b0921" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Primitives&quot;&gt;Primitives&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Primitives&quot;&gt;Primitives&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4c577b14da2944bd7243c88c6da96198e5213357" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;PrivIntExt&quot;&gt;2.7 Private Internet Extensions&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;PrivIntExt&quot;&gt;2.7专用Internet扩展&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="02ec00afa85279a389d4e07889dd53d10b6b94cc" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;REAL&quot;&gt;REAL&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;REAL&quot;&gt;REAL&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4f66eeedbdce1d9e43c58a4bfa8d74946a2342e7" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Release%20Upgrade%20Instructions&quot;&gt;Release Upgrade Instructions&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Release%20Upgrade%20Instructions&quot;&gt;发布升级说明&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="37c98284e735508ba694ac4271178d37a0681c99" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Required-Utilities&quot;&gt;2.2 Required Utilities&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Required-Utilities&quot;&gt;2.2所需的实用程序&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f5b3ea8948bdbdeca146b44c73d22c817abb125a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Required-Utilities_Building&quot;&gt;Building&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Required-Utilities_Building&quot;&gt;Building&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0c64b04b9f5ebd32e444dfb399f79e1210063070" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Required-Utilities_Installing&quot;&gt;Installing&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Required-Utilities_Installing&quot;&gt;Installing&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0c0ea141b6b011d5f958031d00b4519c10c13559" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Required-Utilities_Unpacking&quot;&gt;Unpacking&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Required-Utilities_Unpacking&quot;&gt;Unpacking&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="207770a3978722ef2f11c0c3f9bdbbbf65425e31" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Requisites&quot;&gt;3.2 Requisites&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Requisites&quot;&gt;3.2必要条件&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="debb7576469fc3e4e0e3d302bf02087326472096" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Running%20an%20Erlang%20ssh%20Daemon&quot;&gt;2.3 Running an Erlang ssh Daemon&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Running%20an%20Erlang%20ssh%20Daemon&quot;&gt;2.3运行一个Erlang ssh守护进程&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="074faf1a84d05bff1f7312c95bd8e22041b051cf" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Running-SystemTap-scripts&quot;&gt;3.5 Running SystemTap scripts&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Running-SystemTap-scripts&quot;&gt;3.5运行SystemTap脚本&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3c24b2b768a1a4a45c577809627e710093390164" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Running_EUnit&quot;&gt;Running EUnit&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Running_EUnit&quot;&gt;运行EUnit&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="10bd1b576f05f82d798737f07a409ea1ea5c86a4" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;SEQUENCE&quot;&gt;SEQUENCE&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;SEQUENCE&quot;&gt;SEQUENCE&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="81b1c1797770354bf4b8c76809498726a4a25669" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;SET&quot;&gt;SET&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;SET&quot;&gt;SET&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="59a25a88e7193ce629fe58445f6723ae13c18058" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;SMALL_ATOM_EXT&quot;&gt;12.28 SMALL_ATOM_EXT (deprecated)&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;SMALL_ATOM_EXT&quot;&gt;12.28 SMALL_ATOM_EXT（不建议使用）&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="bb419c0a4f00ef4d5f248608a771d5ac81f5a65b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;SOF&quot;&gt;SET OF and SEQUENCE OF&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;SOF&quot;&gt;集和顺序&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="82fe0fa1a3aefcf9af5bbc690647bfaedebfb321" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Sanity-check&quot;&gt;5.4 Sanity check&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Sanity-check&quot;&gt;5.4健全性检查&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e8b40ca49b4faab4a9c7a5cdadda45cad1558eb9" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Selective%20Instruction&quot;&gt;Writing a Selective Decode Instruction&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Selective%20Instruction&quot;&gt;编写选择性解码指令&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3329e69c43fca63b40e64952f7e47858d52e35b1" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Selective%20Receive&quot;&gt;Selective Receive&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Selective%20Receive&quot;&gt;选择性接收&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e9b6ab563ee1ed0363ec74b8ef0e984e9464f0bf" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Short-Version&quot;&gt;4.2 Short Version&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Short-Version&quot;&gt;4.2短版&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="aee275042b4c1b2835301de0959e6eef2a76a934" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Simple_test_objects&quot;&gt;Simple test objects&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Simple_test_objects&quot;&gt;简单的测试对象&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="37962794479f6fe460ef0feaa3a6ef2bae687f74" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Standalone%20gen_statem&quot;&gt;Standalone gen_statem&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Standalone%20gen_statem&quot;&gt;独立的gen_statem&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="91cbf18881033b7104ad808ec8ad9483af16d238" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Starting%20gen_statem&quot;&gt;3.10 Starting gen_statem&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Starting%20gen_statem&quot;&gt;3.10启动gen_statem&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="fcc4978956c9a43c5674d2010c832af21519db63" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;State%20Enter%20Actions&quot;&gt;3.20 State Enter Actions&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;State%20Enter%20Actions&quot;&gt;3.20状态输入动作&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="fd2ad09a17730bd5a27a437b71dba6e7d30d57c7" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;State%20Enter%20Calls&quot;&gt;3.8 State Enter Calls&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;State%20Enter%20Calls&quot;&gt;3.8状态输入呼叫&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="94b55bb9d96f80682f56dd947e88c06c9487648a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;State%20Time-Outs&quot;&gt;3.12 State Time-Outs&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;State%20Time-Outs&quot;&gt;3.12状态超时&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c0adf46b7cd72a172dc7f4b37cea0bba56574e2e" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;State%20Transition%20Actions&quot;&gt;3.6 State Transition Actions&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;State%20Transition%20Actions&quot;&gt;3.6国家过渡行动&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a30256318e98b5add72a0952130a45e3980f38c9" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Status&quot;&gt;2.4 Status&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Status&quot;&gt;2.4状态&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ed0bf9d4da50ac6d8a12f78674a4f61d5351951d" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;StdCertExt&quot;&gt;2.6 Standard Certificate Extensions&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;StdCertExt&quot;&gt;2.6标准证书扩展&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6ecff21f7683add86e6d234398298e424160343b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Stopping&quot;&gt;3.15 Stopping&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Stopping&quot;&gt;3.15停止&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="98b8228bb2e86547c129b66c83baa68f6939dffb" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Supported-platforms&quot;&gt;2.3 Supported platforms&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Supported-platforms&quot;&gt;2.3支持的平台&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="58f0a93666a65ed4b2027ff26a65eb23e6b0337d" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Supporting_Both_New_and_Old_OTP_Releases&quot;&gt;3.8 Support of Both New and Old OTP Releases&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Supporting_Both_New_and_Old_OTP_Releases&quot;&gt;3.8对新旧OTP版本的支持&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="35a43cee231a5712a259e2435dac8029bf02bafa" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Terminology&quot;&gt;1.2 Terminology&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Terminology&quot;&gt;1.2术语&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f4476938333ae98d4d9857eda31a19691bbf3b42" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Test_sets_and_deep_lists&quot;&gt;Test sets and deep lists&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Test_sets_and_deep_lists&quot;&gt;测试集和深列表&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6800579aede171150a003109472ff1fb08a15b9e" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Testing&quot;&gt;3.4 Testing&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Testing&quot;&gt;3.4测试&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="85174a02ee5fa04a5f0bad5bc465a48efb709cb4" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Testing-the-cross-compiled-system&quot;&gt;3.4 Testing the cross compiled system&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Testing-the-cross-compiled-system&quot;&gt;3.4测试交叉编译系统&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="502ce40f718e4c0cd3ec010b7a89dd4c629d5005" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;The%20First%20State&quot;&gt;The First State&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;The%20First%20State&quot;&gt;第一状态&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6eb96b4a9dfc97289289545ebb85849100068e4a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;The%20TIME%20types&quot;&gt;TIME Types&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;The%20TIME%20types&quot;&gt;时间类型&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6fc2f19c225e122ed898d1ff6f64e4c939818370" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;The-Shell-Environment&quot;&gt;4.5 The Shell Environment&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;The-Shell-Environment&quot;&gt;4.5 Shell环境&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c668e8f9d5f29d40d245965abf9e8d9f025a9dac" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Time_Correction&quot;&gt;3.4 Time Correction&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Time_Correction&quot;&gt;3.4时间校正&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c8a978dc81ef55d6a860a887f6abd4d99a0c771c" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Time_Warp_Safe_Code&quot;&gt;3.5 Time Warp Safe Code&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Time_Warp_Safe_Code&quot;&gt;3.5时间扭曲安全代码&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="868dd87e59b2ce54c45407baa433c33d5ce9dea2" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Titles&quot;&gt;Titles&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Titles&quot;&gt;Titles&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2c9dcaae9b716f79e4f5dd65326d13defbde65db" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Tools-you-Need-and-Their-Environment&quot;&gt;4.4 Tools you Need and Their Environment&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Tools-you-Need-and-Their-Environment&quot;&gt;4.4您需要的工具及其环境&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1561a244b3952322e1bb5f45a1c53ce98fe5a97a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Unit_testing&quot;&gt;1.1 Unit testing&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Unit_testing&quot;&gt;1.1单元测试&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="af1ec140c1df36d5274b5dba5969807fbac5a871" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Using-GIT&quot;&gt;4.8 Using GIT&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Using-GIT&quot;&gt;4.8使用GIT&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="72fd83c292172e289e31b9ce9119fccd1e7963cc" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Using-otppatchapply&quot;&gt;5.3 Using otp_patch_apply&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Using-otppatchapply&quot;&gt;5.3使用otp_patch_apply&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="cd19fbe628582c9cfa49de2cbbaaa6b383d3a0a8" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Utility_macros&quot;&gt;Utility macros&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Utility_macros&quot;&gt;实用程序宏&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="05baf8f1faaba9e8028f318dfdd551cb55a63d74" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;When%20to%20use%20gen_statem&quot;&gt;3.2 When to use gen_statem&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;When%20to%20use%20gen_statem&quot;&gt;3.2何时使用gen_statem&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="26308c32a59ba29ef1cd9fe29f93125189f90575" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Writing_simple_test_functions&quot;&gt;Writing simple test functions&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Writing_simple_test_functions&quot;&gt;编写简单的测试功能&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ec7524ec178684b1352d6ea30db782ad6645f36d" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Writing_test_generating_functions&quot;&gt;Writing test generating functions&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Writing_test_generating_functions&quot;&gt;编写测试生成功能&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3e491a6d5262173a5e60f9bf913622943daaf046" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;a-larger-example&quot;&gt;2.9 A Larger Example&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;a-larger-example&quot;&gt;2.9更大的例子&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8db0c171c4419a08965cc77363a77042af00dcb9" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;a-larger-example&quot;&gt;3.5 A Larger Example&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;a-larger-example&quot;&gt;3.5更大的例子&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ae13ea665a810014635a82fd38079948438193b6" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;a-longer-example&quot;&gt;1.9 A Longer Example&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;a-longer-example&quot;&gt;1.9更长的例子&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4eb4e8378f6eaaf9f24381af7eab27317e4675b8" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;a-simple-standard-test&quot;&gt;9.2 A simple standard test&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;a-simple-standard-test&quot;&gt;9.2一个简单的标准测试&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6286616e7b9b98c924d49cd2313ce3eb1d384d35" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;a-simple-test-suite&quot;&gt;3.3 A Simple Test Suite&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;a-simple-test-suite&quot;&gt;3.3一个简单的测试套件&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="cf479129ae8c0b9106388ee75475ff0dcde63983" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;a-test-suite-with-configuration-functions&quot;&gt;3.4 A Test Suite with Configuration Functions&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;a-test-suite-with-configuration-functions&quot;&gt;3.4具有配置功能的测试套件&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a40d7dab6f9c52d790b1b1b696854c7e3316d2ca" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;abcast-2&quot;&gt;abcast(Name, Request) -&amp;gt; abcast&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;abcast-2&quot;&gt;abcast（名称，请求）-&amp;gt; abcast&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3a212da9f06c190286ae1fc3cd9fae588653263a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;abcast-3&quot;&gt;abcast(Nodes, Name, Request) -&amp;gt; abcast&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;abcast-3&quot;&gt;abcast（节点，名称，请求）-&amp;gt; abcast&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8948efc81679363f420b0b20213350c18c03a33a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;abort-0&quot;&gt;abort() -&amp;gt; ok&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;abort-0&quot;&gt;abort（）-&amp;gt;确定&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="be05dd38795e11e2da8328f64097bbb313cecd6e" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;abort-1&quot;&gt;abort(Nodes) -&amp;gt; ok&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;abort-1&quot;&gt;中止（节点）-&amp;gt;确定&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a446950d5de41365da12163e08b327c493b37fbe" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;abort-1&quot;&gt;abort(Reason) -&amp;gt; transaction abort&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;abort-1&quot;&gt;中止（原因）-&amp;gt;事务中止&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d0d181e3c68124e80c4ccf65782ddb541395d440" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;abort_current_testcase-1&quot;&gt;abort_current_testcase(Reason) -&amp;gt; ok | {error, ErrorReason}&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;abort_current_testcase-1&quot;&gt;abort_current_testcase（原因）-&amp;gt;确定| {error，ErrorReason}&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a0375ae2e35e6a8b3d300813d1cfc9419a935fc4" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;about-odbc&quot;&gt;1.3 About ODBC&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;about-odbc&quot;&gt;1.3关于ODBC&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="01d95cf6b86013987acbe3f9938780652a960abe" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;about-the-erlang-odbc-application&quot;&gt;1.4 About the Erlang ODBC application&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;about-the-erlang-odbc-application&quot;&gt;1.4关于Erlang ODBC应用程序&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="295377e8d438346fa53c6099a7e32f79c669898b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;about-this-manual&quot;&gt;1.3 About This Manual&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;about-this-manual&quot;&gt;1.3关于本手册&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5668e876429cd04b54805b3520c5320c0d15c648" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;about-this-manual&quot;&gt;1.4 About This Manual&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;about-this-manual&quot;&gt;1.4关于本手册&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="54e43872b2e2cb870fbefb7d9d9e8e2d3eba8c75" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;above-2&quot;&gt;above(D1::document(), D2::document()) -&amp;gt; document()&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;above-2&quot;&gt;上面的（D1 :: document（），D2 :: document（））-&amp;gt; document（）&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6da72da3918fb7cd5954c5fdda24d7b701c9e476" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;abstract-1&quot;&gt;abstract(T::term()) -&amp;gt; syntaxTree()&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;abstract-1&quot;&gt;abstract（T :: term（））-&amp;gt;语法树（）&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3d1a610ca61d48bf165976758de43f2279bcca59" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;accept_recv-2&quot;&gt;accept_recv(Domain, Addr) -&amp;gt; boolean()&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;accept_recv-2&quot;&gt;accept_recv（Domain，Addr）-&amp;gt; boolean（）&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b37c70ef9598c828b477d843a5a4513f7249188a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;accept_recv_pdu-3&quot;&gt;accept_recv_pdu(Domain, Addr, PduType) -&amp;gt; boolean()&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;accept_recv_pdu-3&quot;&gt;accept_recv_pdu（Domain，Addr，PduType）-&amp;gt; boolean（）&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="239e9a77dad0a50ab5503d5abb308827a11dfce3" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;accept_send-2&quot;&gt;accept_send(Domain, Addr) -&amp;gt; boolean()&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;accept_send-2&quot;&gt;accept_send（Domain，Addr）-&amp;gt; boolean（）&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d09553450a88a3000c2c6e7e1187892a94dcca6b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;accept_send_pdu-2&quot;&gt;accept_send_pdu(Targets, PduType) -&amp;gt; Reply&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;accept_send_pdu-2&quot;&gt;accept_send_pdu（Targets，PduType）-&amp;gt;回复&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="58873f225ba1e0318f9dd04a1f6f30c6d11b4e90" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;accept_send_pdu-3&quot;&gt;accept_send_pdu(Domain, Addr, PduType) -&amp;gt; boolean()&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;accept_send_pdu-3&quot;&gt;accept_send_pdu（Domain，Addr，PduType）-&amp;gt; boolean（）&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="883c5134b240b932048a416a3801549d1dfe930f" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;access-files-directives&quot;&gt;Access Files Directives&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;access-files-directives&quot;&gt;访问文件指令&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7e25b78449b27985e4999e2b53763c3d937292b4" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;access-restrictions&quot;&gt;Access Restrictions&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;access-restrictions&quot;&gt;存取限制&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="42decc05076a89fed74c9d91cf7d304b382f78ca" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;accessing-a-record-field&quot;&gt;1.4 Accessing a Record Field&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;accessing-a-record-field&quot;&gt;1.4访问记录字段&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="54e15e2a443f08613767092ebafe755a6c6aa422" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;accessing-record-fields&quot;&gt;10.3 Accessing Record Fields&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;accessing-record-fields&quot;&gt;10.3访问记录字段&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ffbce9f78ab46c5902e192e6b8127be9c323e2b3" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;account-2&quot;&gt;account(Pid, Account) -&amp;gt; ok | {error, Reason}&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;account-2&quot;&gt;account（Pid，Account）-&amp;gt;确定| {错误，原因}&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="87555449a3d9ca33503a00e0ba054a408ae4fd2b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;accumulate_whitespace-4&quot;&gt;accumulate_whitespace(T::string(), S::global_state(), X3::atom(), Acc::string()) -&amp;gt; {Acc, T1, S1}&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;accumulate_whitespace-4&quot;&gt;accumulate_whitespace（T :: string（），S :: global_state（），X3 :: atom（），Acc :: string（））-&amp;gt; {Acc，T1，S1}&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="18eb627a450ddd74bd36e9c2c599cd20abaf59c7" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;action_at_break-3&quot;&gt;action_at_break(Module, Line, Action) -&amp;gt; ok&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;action_at_break-3&quot;&gt;action_at_break（模块，行，动作）-&amp;gt;确定&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="30fd8b02131320293b94600110a94b71d5db968b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;activate_checkpoint-1&quot;&gt;activate_checkpoint(Args) -&amp;gt; {ok,Name,Nodes} | {error,Reason}&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;activate_checkpoint-1&quot;&gt;activate_checkpoint（Args）-&amp;gt; {确定，名称，节点} | {错误，原因}&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="abd066bb8462ed8b356b1747cd6add86673c3458" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;activity-2&quot;&gt;activity(AccessContext, Fun [, Args]) -&amp;gt; ResultOfFun | exit(Reason)&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;activity-2&quot;&gt;activity（AccessContext，Fun [，Args]）-&amp;gt; ResultOfFun | 退出（原因）&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5c0350ae0d46ac2fb18700c8163d1c1385d8a1e8" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;activity-4&quot;&gt;activity(AccessContext, Fun, Args, AccessMod) -&amp;gt; ResultOfFun | exit(Reason)&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;activity-4&quot;&gt;activity（AccessContext，Fun，Args，AccessMod）-&amp;gt; ResultOfFun | 退出（原因）&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="759542353dffb9ee6efd7b60174c898b95f27e5b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;activity-concept-and-various-access-contexts&quot;&gt;5.5 Activity Concept and Various Access Contexts&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;activity-concept-and-various-access-contexts&quot;&gt;5.5活动概念和各种访问上下文&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c2da9f8480019135ac7c83378e4512ac1df69c98" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;activity-events&quot;&gt;Activity Events&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;activity-events&quot;&gt;活动事件&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="795f710fb760bbefcf6c53e09f4ad030919692a2" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;add-3&quot;&gt;add(Handle, Dn, [Attribute]) -&amp;gt; return_value()&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;add-3&quot;&gt;add（Handle，Dn，[Attribute]）-&amp;gt; return_value（）&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8783bcbd32f410d678f5d9a1c4ad2069df76fd5d" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;add-3&quot;&gt;add(TarDescriptor, Filename, Options) -&amp;gt; RetValue&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;add-3&quot;&gt;添加（TarDescriptor，文件名，选项）-&amp;gt; RetValue&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="864bfbd36897de32d1901bc69b4d2b1bddc5eb2e" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;add-4&quot;&gt;add(TarDescriptor, FilenameOrBin, NameInArchive, Options) -&amp;gt; RetValue &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;add-4&quot;&gt;添加（TarDescriptor，FilenameOrBin，NameInArchive，选项）-&amp;gt; RetValue &lt;/span&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
