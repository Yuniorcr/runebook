<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="erlang">
    <body>
      <group id="erlang">
        <trans-unit id="067548c157769e71e4d10c98809036e28599edec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Sup&lt;/code&gt; is the pid, or name, of the supervisor. &lt;code&gt;ChildSpec&lt;/code&gt; is a &lt;code&gt;&lt;a href=&quot;#spec&quot;&gt;child specification&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Sup&lt;/code&gt; 是主管的pid或名称。 &lt;code&gt;ChildSpec&lt;/code&gt; 是一个 &lt;code&gt;&lt;a href=&quot;#spec&quot;&gt;child specification&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="32c62fc558f20021c0572ebafb3862fd4a619f74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Sup&lt;/code&gt; is the pid, or name, of the supervisor. &lt;code&gt;Id&lt;/code&gt; is the value associated with the &lt;code&gt;id&lt;/code&gt; key in the &lt;code&gt;&lt;a href=&quot;#spec&quot;&gt;child specification&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Sup&lt;/code&gt; 是主管的pid或名称。 &lt;code&gt;Id&lt;/code&gt; 是与 &lt;code&gt;&lt;a href=&quot;#spec&quot;&gt;child specification&lt;/a&gt;&lt;/code&gt; 的 &lt;code&gt;id&lt;/code&gt; 键关联的值。</target>
        </trans-unit>
        <trans-unit id="5ec78464e80c110da5b1eac6351f13eb80a5ed80" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Sup&lt;/code&gt; is the pid, or name, of the supervisor. &lt;code&gt;List&lt;/code&gt; is an arbitrary list of terms, which are added to the list of arguments specified in the child specification. If the start function is specified as &lt;code&gt;{M, F, A}&lt;/code&gt;, the child process is started by calling &lt;code&gt;apply(M, F, A++List)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Sup&lt;/code&gt; 是主管的pid或名称。 &lt;code&gt;List&lt;/code&gt; 是一个任意术语列表，这些术语将添加到子规范中指定的参数列表中。如果将启动函数指定为 &lt;code&gt;{M, F, A}&lt;/code&gt; ，则通过调用 &lt;code&gt;apply(M, F, A++List)&lt;/code&gt; 启动子进程。</target>
        </trans-unit>
        <trans-unit id="460edbf3290298779d359d85668f57898859aa85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SupFlags&lt;/code&gt; is the supervisor flags defining the restart strategy and maximum restart intensity for the supervisor. &lt;code&gt;[ChildSpec]&lt;/code&gt; is a list of valid child specifications defining which child processes the supervisor must start and monitor. See the discussion in section &lt;code&gt;&lt;a href=&quot;#supervision_princ&quot;&gt; Supervision Principles&lt;/a&gt;&lt;/code&gt; earlier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6866c114dc83f135df443bd78176d749dac42bd0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SupFlags&lt;/code&gt; is the supervisor flags defining the restart strategy and maximum restart intensity for the supervisor. &lt;code&gt;[ChildSpec]&lt;/code&gt; is a list of valid child specifications defining which child processes the supervisor must start and monitor. See the discussion in section &lt;code&gt;&lt;a href=&quot;#supervision_princ&quot;&gt;Supervision Principles&lt;/a&gt;&lt;/code&gt; earlier.</source>
          <target state="translated">&lt;code&gt;SupFlags&lt;/code&gt; 是主管标志，用于定义主管的重启策略和最大重启强度。 &lt;code&gt;[ChildSpec]&lt;/code&gt; 是有效的子规范的列表，这些规范定义了主管必须启动和监视的子进程。请参阅前面的&amp;ldquo; &lt;code&gt;&lt;a href=&quot;#supervision_princ&quot;&gt;Supervision Principles&lt;/a&gt;&lt;/code&gt; 一节中的讨论。</target>
        </trans-unit>
        <trans-unit id="1e3f9f0a7c6b85e67abf6de8ea36a8ab7e3288e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Supervisor&lt;/code&gt; is a &lt;code&gt;pid()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f65fd3b3b013850321d377f68286634e39dcd1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Supervisor&lt;/code&gt; is the process that sent the &lt;code&gt;&lt;a href=&quot;#im_ping&quot;&gt;ping&lt;/a&gt;&lt;/code&gt; message (see below).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1916ee4416fb7ed1fa446767f01655db8628c38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Suspendee&lt;/code&gt; has exited.</source>
          <target state="translated">&lt;code&gt;Suspendee&lt;/code&gt; 已退出。</target>
        </trans-unit>
        <trans-unit id="fc20f6eda7738d395199dbe06ae5b0d9d85ddcb6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Suspendee&lt;/code&gt; is not suspended. This can only happen when the process that issued this request, have called &lt;code&gt;resume_process(Suspendee)&lt;/code&gt; before getting the reply.</source>
          <target state="translated">&lt;code&gt;Suspendee&lt;/code&gt; 挂起。仅当发出此请求的进程在获得答复之前调用了 &lt;code&gt;resume_process(Suspendee)&lt;/code&gt; 时，才会发生这种情况。</target>
        </trans-unit>
        <trans-unit id="90c6cf98c88bf3f9be9b207efa1b1071451a5720" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Suspendee&lt;/code&gt; is now suspended.</source>
          <target state="translated">&lt;code&gt;Suspendee&lt;/code&gt; 目前处于停产状态。</target>
        </trans-unit>
        <trans-unit id="2a094116829461c921b709f6af6ab2201f90d0c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SuspendeeList&lt;/code&gt; is a list of &lt;code&gt;{Suspendee, ActiveSuspendCount, OutstandingSuspendCount}&lt;/code&gt; tuples. &lt;code&gt;Suspendee&lt;/code&gt; is the process identifier of a process that has been, or is to be, suspended by the process identified by &lt;code&gt;Pid&lt;/code&gt; through the BIF &lt;code&gt;&lt;a href=&quot;#suspend_process-2&quot;&gt; erlang:suspend_process/2&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#suspend_process-1&quot;&gt; erlang:suspend_process/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d54734126b89a060080087f71ef2770bcb2de77e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SuspendeeList&lt;/code&gt; is a list of &lt;code&gt;{Suspendee, ActiveSuspendCount, OutstandingSuspendCount}&lt;/code&gt; tuples. &lt;code&gt;Suspendee&lt;/code&gt; is the process identifier of a process that has been, or is to be, suspended by the process identified by &lt;code&gt;Pid&lt;/code&gt; through the BIF &lt;code&gt;&lt;a href=&quot;#suspend_process-2&quot;&gt;erlang:suspend_process/2&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#suspend_process-1&quot;&gt;erlang:suspend_process/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SuspendeeList&lt;/code&gt; 是 &lt;code&gt;{Suspendee, ActiveSuspendCount, OutstandingSuspendCount}&lt;/code&gt; 元组的列表。 &lt;code&gt;Suspendee&lt;/code&gt; 是已经或将要被 &lt;code&gt;Pid&lt;/code&gt; 通过BIF &lt;code&gt;&lt;a href=&quot;#suspend_process-2&quot;&gt;erlang:suspend_process/2&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;#suspend_process-1&quot;&gt;erlang:suspend_process/1&lt;/a&gt;&lt;/code&gt; 标识的过程挂起的过程的过程标识符。</target>
        </trans-unit>
        <trans-unit id="5cd92387ceb2c7a572789e4afc4839e9fe9ca683" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Svc&lt;/code&gt; contains capabilities passed to &lt;code&gt;&lt;a href=&quot;diameter#start_service-2&quot;&gt;diameter:start_service/2&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;diameter#add_transport-2&quot;&gt;diameter:add_transport/2&lt;/a&gt;&lt;/code&gt;, values passed to the latter overriding those passed to the former.</source>
          <target state="translated">&lt;code&gt;Svc&lt;/code&gt; 包含传递给 &lt;code&gt;&lt;a href=&quot;diameter#start_service-2&quot;&gt;diameter:start_service/2&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;diameter#add_transport-2&quot;&gt;diameter:add_transport/2&lt;/a&gt;&lt;/code&gt; ，传递给后者的值将覆盖传递给前者的值。</target>
        </trans-unit>
        <trans-unit id="a402b9d8bd683db9c283f83f8c74883867023b6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SystemVariable&lt;/code&gt; is one of the variables in the system group, or &lt;code&gt;snmpEnableAuthenTraps&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SystemVariable&lt;/code&gt; 是系统组或 &lt;code&gt;snmpEnableAuthenTraps&lt;/code&gt; 中的变量之一。</target>
        </trans-unit>
        <trans-unit id="b844f33bf239fa8d0a86ad1eeafb729237a25c98" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TF&lt;/code&gt; is the traversal function. The &lt;code&gt;qlc&lt;/code&gt; module requires that there is a way of traversing all objects of the data structure. &lt;code&gt;gb_trees&lt;/code&gt; has an iterator function suitable for that purpose. Notice that for each object returned, a new fun is created. As long as the list is not terminated by &lt;code&gt;[]&lt;/code&gt;, it is assumed that the tail of the list is a nullary function and that calling the function returns further objects (and functions).</source>
          <target state="translated">&lt;code&gt;TF&lt;/code&gt; 是遍历函数。所述 &lt;code&gt;qlc&lt;/code&gt; 模块需要有遍历数据结构的所有对象的一种方式。 &lt;code&gt;gb_trees&lt;/code&gt; 具有适合该目的的迭代器功能。注意，对于返回的每个对象，都会创建一个新的乐趣。只要列表不以 &lt;code&gt;[]&lt;/code&gt; 终止，就假定列表的尾部为空函数，并且调用该函数将返回其他对象（和函数）。</target>
        </trans-unit>
        <trans-unit id="3fe4b498bdcc1fb31677fe24cd47e6201e2e05cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TMask&lt;/code&gt; is specified just as &lt;code&gt;Addr&lt;/code&gt; or as &lt;code&gt;[]&lt;/code&gt;. Note in particular that using a list of 6 bytes for IPv4 or 8 words plus 2 bytes for IPv6 are still valid address formats so old configurations will work.</source>
          <target state="translated">&lt;code&gt;TMask&lt;/code&gt; 被指定为 &lt;code&gt;Addr&lt;/code&gt; 或 &lt;code&gt;[]&lt;/code&gt; 。特别要注意的是，对于IPv4使用6个字节的列表或对IPv6使用8个字加上2个字节的列表仍然是有效的地址格式，因此旧配置可以使用。</target>
        </trans-unit>
        <trans-unit id="0bbdfd41feedba1352568719b11a64967eab950f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Table&lt;/code&gt; is the table involved in the operation.</source>
          <target state="translated">&lt;code&gt;Table&lt;/code&gt; 是操作中涉及的表。</target>
        </trans-unit>
        <trans-unit id="f0156836e921347e207318056ec391e0b2930d86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TableName&lt;/code&gt; is an atom for a table in the database. When no name is supplied, the whole database is shown.</source>
          <target state="translated">&lt;code&gt;TableName&lt;/code&gt; 是数据库中表的原子。如果未提供名称，则显示整个数据库。</target>
        </trans-unit>
        <trans-unit id="2ef4ea77e073716a3ca2d965101e9ee1b211e268" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tag&lt;/code&gt; is a string.</source>
          <target state="translated">&lt;code&gt;Tag&lt;/code&gt; 是一个字符串。</target>
        </trans-unit>
        <trans-unit id="26e0e3c2a78a3aad190ff2b1e42bd0eab94095c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tag&lt;/code&gt; must be an atom, while &lt;code&gt;Value&lt;/code&gt; must be a literal term. As a convenience in user-defined attributes, if the literal term &lt;code&gt;Value&lt;/code&gt; has the syntax &lt;code&gt;Name/Arity&lt;/code&gt; (where &lt;code&gt;Name&lt;/code&gt; is an atom and &lt;code&gt;Arity&lt;/code&gt; a positive integer), the term &lt;code&gt;Name/Arity&lt;/code&gt; is translated to &lt;code&gt;{Name,Arity}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tag&lt;/code&gt; 必须是一个原子，而 &lt;code&gt;Value&lt;/code&gt; 必须是一个字面量。为了方便用户定义属性，如果字面值 &lt;code&gt;Value&lt;/code&gt; 具有语法 &lt;code&gt;Name/Arity&lt;/code&gt; （其中 &lt;code&gt;Name&lt;/code&gt; 是原子，而 &lt;code&gt;Arity&lt;/code&gt; 是正整数），则将术语 &lt;code&gt;Name/Arity&lt;/code&gt; 转换为 &lt;code&gt;{Name,Arity}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="197c1b267dff91b08762fcb0cb594ba840e6d6ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TagList&lt;/code&gt; is a string.</source>
          <target state="translated">&lt;code&gt;TagList&lt;/code&gt; 是一个字符串。</target>
        </trans-unit>
        <trans-unit id="bfe297e92d037daf7e7d31a3a3f0d2cea549e23b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TarDesc&lt;/code&gt; is then used:</source>
          <target state="translated">&lt;code&gt;TarDesc&lt;/code&gt; 然后使用TarDesc：</target>
        </trans-unit>
        <trans-unit id="3816b3f47c45930bf6b1483d0c60e6a23dcf4422" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TargetMod&lt;/code&gt; is a module that exports the functions &lt;code&gt;connect(Ip, Port, KeepAlive, Extra)&lt;/code&gt; and &lt;code&gt;get_prompt_regexp()&lt;/code&gt; for the specified &lt;code&gt;TargetType&lt;/code&gt; (for example, &lt;code&gt;unix_telnet&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;TargetMod&lt;/code&gt; 是一个模块，可为指定的 &lt;code&gt;TargetType&lt;/code&gt; （例如， &lt;code&gt;unix_telnet&lt;/code&gt; ）导出函数 &lt;code&gt;connect(Ip, Port, KeepAlive, Extra)&lt;/code&gt; 和 &lt;code&gt;get_prompt_regexp()&lt;/code&gt; 函数。</target>
        </trans-unit>
        <trans-unit id="110b4f4976f97dba92b7c62cc8f8c14319655e19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TargetName&lt;/code&gt; is a &lt;strong&gt;unique&lt;/strong&gt;&lt;strong&gt;non-empty&lt;/strong&gt; string.</source>
          <target state="translated">&lt;code&gt;TargetName&lt;/code&gt; 是&lt;strong&gt;唯一的&lt;/strong&gt;&lt;strong&gt;非空&lt;/strong&gt;字符串。</target>
        </trans-unit>
        <trans-unit id="58318ac65af2831df4aec6c88b10fdba5c7bd413" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TargetName&lt;/code&gt; is a non-empty string, uniquely identifying the agent.</source>
          <target state="translated">&lt;code&gt;TargetName&lt;/code&gt; 是一个非空字符串，用于唯一标识代理。</target>
        </trans-unit>
        <trans-unit id="1c6a2d40316eeec9bbfd1aae3d737f8d562e530c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TargetName&lt;/code&gt; is a unique non-empty string.</source>
          <target state="translated">&lt;code&gt;TargetName&lt;/code&gt; 是唯一的非空字符串。</target>
        </trans-unit>
        <trans-unit id="a56e60b23176db0cb2d2d95c2eafaaa18c7c1f5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Term&lt;/code&gt; and &lt;code&gt;Pattern&lt;/code&gt; are compared and any unbound variables in &lt;code&gt;Pattern&lt;/code&gt; are bound to corresponding values in &lt;code&gt;Term&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Term&lt;/code&gt; 和 &lt;code&gt;Pattern&lt;/code&gt; 进行比较，并在任何未结合的变量 &lt;code&gt;Pattern&lt;/code&gt; 绑定到对应的值 &lt;code&gt;Term&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bf476955e74f9154602025a23e3e5cae87c2ace9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Term&lt;/code&gt; is an Erlang term that we wish to match against &lt;code&gt;Pattern&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Term&lt;/code&gt; 是我们希望与 &lt;code&gt;Pattern&lt;/code&gt; 匹配的Erlang术语。</target>
        </trans-unit>
        <trans-unit id="0f3c1fd31c4e11f6e32cba2acc95aa631ef1a055" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TestRunnerPid&lt;/code&gt; is returned if &lt;code&gt;release_shell == true&lt;/code&gt;. For details, see &lt;code&gt;&lt;a href=&quot;#break-1&quot;&gt;ct:break/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;TestRunnerPid&lt;/code&gt; 如果 &lt;code&gt;release_shell == true&lt;/code&gt; 则返回TestRunnerPid。有关详细信息，请参见 &lt;code&gt;&lt;a href=&quot;#break-1&quot;&gt;ct:break/1&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ac7c5d090304206771de9956f277e657e4d709f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TestSpecs&lt;/code&gt; is either the name of a test specification file (string) or a list of test specifications. If it is a list, the specifications are handled (and the corresponding tests executed) in sequence. An element in a &lt;code&gt;TestSpecs&lt;/code&gt; list can also be list of test specifications. The specifications in such a list are merged into one combined specification before test execution.</source>
          <target state="translated">&lt;code&gt;TestSpecs&lt;/code&gt; 是测试规范文件的名称（字符串）或测试规范列表。如果是列表，则按顺序处理规格（并执行相应的测试）。 &lt;code&gt;TestSpecs&lt;/code&gt; 列表中的元素也可以是测试规范的列表。在执行测试之前，将此类列表中的规范合并为一个组合的规范。</target>
        </trans-unit>
        <trans-unit id="d81834531a603d737b666471ac079013bd166a16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tests = integer()&lt;/code&gt;, number of tests.</source>
          <target state="translated">&lt;code&gt;Tests = integer()&lt;/code&gt; ，测试次数。</target>
        </trans-unit>
        <trans-unit id="d2ab37503e0f5d591f2ef9a8d69441935dc0621d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Timeout = integer()&lt;/code&gt; specifies how many milliseconds to wait before restarting the application at another node. It defaults to 0.</source>
          <target state="translated">&lt;code&gt;Timeout = integer()&lt;/code&gt; 指定在另一个节点上重新启动应用程序之前要等待的毫秒数。默认为0。</target>
        </trans-unit>
        <trans-unit id="1f12197e5f73601f07d80574f4fe8292d8a488f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Timeout&lt;/code&gt; can also be a tuple &lt;code&gt;{clean_timeout,T}&lt;/code&gt; or &lt;code&gt;{dirty_timeout,T}&lt;/code&gt;, where &lt;code&gt;T&lt;/code&gt; is the time-out time. &lt;code&gt;{clean_timeout,T}&lt;/code&gt; works like just &lt;code&gt;T&lt;/code&gt; described in the note above and uses a proxy process while &lt;code&gt;{dirty_timeout,T}&lt;/code&gt; bypasses the proxy process which is more lightweight.</source>
          <target state="translated">&lt;code&gt;Timeout&lt;/code&gt; 也可以是一个元组 &lt;code&gt;{clean_timeout,T}&lt;/code&gt; 或 &lt;code&gt;{dirty_timeout,T}&lt;/code&gt; ，其中 &lt;code&gt;T&lt;/code&gt; 是超时时间。 &lt;code&gt;{clean_timeout,T}&lt;/code&gt; 的工作方式与上面注释中所述的 &lt;code&gt;T&lt;/code&gt; 相似，并且使用代理过程，而 &lt;code&gt;{dirty_timeout,T}&lt;/code&gt; 则绕过了更轻量的代理过程。</target>
        </trans-unit>
        <trans-unit id="215dd1441c7a7f4cf2328f29cce8b0be80081cf9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Timeout&lt;/code&gt; is an integer &amp;gt; 0, which specifies how many milliseconds to wait for a reply, or the atom &lt;code&gt;infinity&lt;/code&gt; to wait indefinitely, which is the default. If no reply is received within the specified time, the function call fails.</source>
          <target state="translated">&lt;code&gt;Timeout&lt;/code&gt; 是一个大于0的整数，它指定等待答复的毫秒数，或无限期等待的原子 &lt;code&gt;infinity&lt;/code&gt; ，这是默认值。如果在指定时间内没有收到答复，则函数调用失败。</target>
        </trans-unit>
        <trans-unit id="011d9f71bfc5974e239f39bd3079f6a8ecf96f60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Timeout&lt;/code&gt; is an integer &amp;gt; 0, which specifies how many milliseconds to wait for the server to terminate, or the atom &lt;code&gt;infinity&lt;/code&gt; to wait indefinitely. Defaults to &lt;code&gt;infinity&lt;/code&gt;. If the server does not terminate within the specified time, a &lt;code&gt;timeout&lt;/code&gt; exception is raised.</source>
          <target state="translated">&lt;code&gt;Timeout&lt;/code&gt; 是一个大于0的整数，它指定等待服务器终止的毫秒数，或无限期等待的原子 &lt;code&gt;infinity&lt;/code&gt; 。默认为 &lt;code&gt;infinity&lt;/code&gt; 。如果服务器未在指定时间内终止，则会引发 &lt;code&gt;timeout&lt;/code&gt; 异常。</target>
        </trans-unit>
        <trans-unit id="cce26af6f0b969072f77bb631d40ef61dff02358" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Timeout&lt;/code&gt; is an integer greater than zero that specifies how many milliseconds to wait for a reply, or the atom &lt;code&gt;infinity&lt;/code&gt; to wait indefinitely. Defaults to 5000. If no reply is received within the specified time, the function call fails.</source>
          <target state="translated">&lt;code&gt;Timeout&lt;/code&gt; 是一个大于零的整数，它指定等待答复的毫秒数，或无限期等待的原子 &lt;code&gt;infinity&lt;/code&gt; 。默认值为5000。如果在指定时间内未收到任何答复，则函数调用失败。</target>
        </trans-unit>
        <trans-unit id="19ea6b4ba0c408aac46d4d54817adbdb89d5b3c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Timeout&lt;/code&gt; is an integer greater than zero that specifies how many milliseconds to wait for a reply, or the atom &lt;code&gt;infinity&lt;/code&gt; to wait indefinitely. Defaults to 5000. If no reply is received within the specified time, the function call fails. If the caller catches the failure and continues running, and the server is just late with the reply, it can arrive at any time later into the message queue of the caller. The caller must in this case be prepared for this and discard any such garbage messages that are two element tuples with a reference as the first element.</source>
          <target state="translated">&lt;code&gt;Timeout&lt;/code&gt; 是一个大于零的整数，它指定等待答复的毫秒数，或无限期等待的原子 &lt;code&gt;infinity&lt;/code&gt; 。默认值为5000。如果在指定时间内未收到任何答复，则函数调用失败。如果呼叫者发现了故障并继续运行，并且服务器延迟了答复，则它可以在以后的任何时间到达呼叫者的消息队列中。在这种情况下，调用者必须为此做好准备，并丢弃作为两个元素元组的任何此类垃圾消息，并将引用作为第一个元素。</target>
        </trans-unit>
        <trans-unit id="2a545390927615be3be95ee2e3e869ac058d8bc9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Timeout&lt;/code&gt; is an integer greater than zero that specifies how many milliseconds to wait for each reply, or the atom &lt;code&gt;infinity&lt;/code&gt; to wait indefinitely. Defaults to &lt;code&gt;infinity&lt;/code&gt;. If no reply is received from a node within the specified time, the node is added to &lt;code&gt;BadNodes&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Timeout&lt;/code&gt; 是一个大于零的整数，它指定等待每个答复的毫秒数，或者指定无限期等待的原子 &lt;code&gt;infinity&lt;/code&gt; 。默认为 &lt;code&gt;infinity&lt;/code&gt; 。如果在指定时间内没有收到来自节点的答复，则将该节点添加到 &lt;code&gt;BadNodes&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d491898fa68143f83f4eb3b922d722a2efee0e58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Timeout&lt;/code&gt; is an integer greater than zero that specifies how many milliseconds to wait for the event manager to terminate, or the atom &lt;code&gt;infinity&lt;/code&gt; to wait indefinitely. Defaults to &lt;code&gt;infinity&lt;/code&gt;. If the event manager has not terminated within the specified time, a &lt;code&gt;timeout&lt;/code&gt; exception is raised.</source>
          <target state="translated">&lt;code&gt;Timeout&lt;/code&gt; 是一个大于零的整数，它指定要等待事件管理器终止的毫秒数，或者原子 &lt;code&gt;infinity&lt;/code&gt; 要无限期地等待。默认为 &lt;code&gt;infinity&lt;/code&gt; 。如果事件管理器未在指定时间内终止，则会引发 &lt;code&gt;timeout&lt;/code&gt; 异常。</target>
        </trans-unit>
        <trans-unit id="3aff9a13c5adb8de3081f2e611e5f7eef5cbf9d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Timeout&lt;/code&gt; is an integer greater than zero that specifies how many milliseconds to wait for the server to terminate, or the atom &lt;code&gt;infinity&lt;/code&gt; to wait indefinitely. Defaults to &lt;code&gt;infinity&lt;/code&gt;. If the server has not terminated within the specified time, a &lt;code&gt;timeout&lt;/code&gt; exception is raised.</source>
          <target state="translated">&lt;code&gt;Timeout&lt;/code&gt; 是一个大于零的整数，它指定等待服务器终止的毫秒数，或者指定 &lt;code&gt;infinity&lt;/code&gt; 等待的原子无穷大。默认为 &lt;code&gt;infinity&lt;/code&gt; 。如果服务器未在指定时间内终止，则会引发 &lt;code&gt;timeout&lt;/code&gt; 异常。</target>
        </trans-unit>
        <trans-unit id="c11e6784f81fc677fa902c4a3bb79c03fd8b314a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Timeout&lt;/code&gt; is an integer greater then or equal to zero that specifies how many milliseconds to wait for an reply, or the atom &lt;code&gt;infinity&lt;/code&gt; to wait indefinitely. Defaults to &lt;code&gt;infinity&lt;/code&gt;. If no reply is received within the specified time, the function returns &lt;code&gt;timeout&lt;/code&gt; and no cleanup is done, and thus the function can be invoked repeatedly until a reply is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edc7a440278ec2451bdbab55bd52b1aef6b38854" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Timeout&lt;/code&gt; is an integer greater then or equal to zero that specifies how many milliseconds to wait for an reply, or the atom &lt;code&gt;infinity&lt;/code&gt; to wait indefinitely. If no reply is received within the specified time, the function returns &lt;code&gt;timeout&lt;/code&gt; and no cleanup is done, and thus the function can be invoked repeatedly until a reply is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc81c1b6ed710efa4121dd1084794ef0400341c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Timeout&lt;/code&gt; is an integer greater then or equal to zero that specifies how many milliseconds to wait for an reply, or the atom &lt;code&gt;infinity&lt;/code&gt; to wait indefinitely. If no reply is received within the specified time, the function returns &lt;code&gt;timeout&lt;/code&gt; and no cleanup is done, and thus the function must be invoked repeatedly until a reply is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b00c0031f23e811b5959b8ca6b50758268da0686" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Timeout&lt;/code&gt; is an integer.</source>
          <target state="translated">&lt;code&gt;Timeout&lt;/code&gt; 是一个整数。</target>
        </trans-unit>
        <trans-unit id="377d8c0756c1e9c50e682ef984f4232bfe3daa1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Timeout&lt;/code&gt; is not the atom &lt;code&gt;infinity&lt;/code&gt; or an integer in valid range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09ab16be1768304f7b3ae52beebf6843b75263fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Timeout&lt;/code&gt; is re-transmission timeout (&lt;code&gt;infinity&lt;/code&gt; | integer).</source>
          <target state="translated">&lt;code&gt;Timeout&lt;/code&gt; 是重传超时（ &lt;code&gt;infinity&lt;/code&gt; |整数）。</target>
        </trans-unit>
        <trans-unit id="4e5785b9fdc7aa04bf49182adc0a5c87197b2eab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Title&lt;/code&gt; will be the title of one result table</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36032d5c1155f9053b9b358a83bd315f89ea768e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;To&lt;/code&gt; is a list of &lt;code&gt;{Address, SecData}&lt;/code&gt; tuples i.e the destination addresses and their corresponding security parameters. This value is normally sent to &lt;code&gt;snmpa_mpd:generate_message/4&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;To&lt;/code&gt; 是 &lt;code&gt;{Address, SecData}&lt;/code&gt; 元组的列表，即目标地址及其对应的安全参数。该值通常发送到 &lt;code&gt;snmpa_mpd:generate_message/4&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e3d75fff4d3df97c5e4a676379dc6d3b23205c1b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;To&lt;/code&gt; is a list of destination addresses and their corresponding security parameters. This value is received in the same message from the agent and then transformed trough &lt;code&gt;&lt;a href=&quot;#process_taddrs&quot;&gt;process_taddrs&lt;/a&gt;&lt;/code&gt; before passed to this function.</source>
          <target state="translated">&lt;code&gt;To&lt;/code&gt; 是目标地址及其对应的安全性参数的列表。该值是从代理收到的同一条消息中接收的，然后通过 &lt;code&gt;&lt;a href=&quot;#process_taddrs&quot;&gt;process_taddrs&lt;/a&gt;&lt;/code&gt; 进行转换，然后传递给此函数。</target>
        </trans-unit>
        <trans-unit id="6090b48b5079de11448a798d690887f63ce36f70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;To&lt;/code&gt; is of the same type as the first argument to &lt;code&gt;gen_server:reply/2&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9993964574fee446677e91b643685f5bf0d565c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;To&lt;/code&gt; is of the same type as the first argument to &lt;code&gt;gen_statem:reply/2&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a81d51ec2c3ae7ef365362e3fa993d2c65d6fbc4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;To&lt;/code&gt; is the destination &lt;code&gt;Address&lt;/code&gt; that comes from the &lt;code&gt;From&lt;/code&gt; field in the corresponding &lt;code&gt;snmp_pdu&lt;/code&gt; message previously sent to the MasterAgent.</source>
          <target state="translated">&lt;code&gt;To&lt;/code&gt; 是目标 &lt;code&gt;Address&lt;/code&gt; ，该地址来自先前发送到MasterAgent 的相应 &lt;code&gt;snmp_pdu&lt;/code&gt; 消息中的&amp;ldquo; &lt;code&gt;From&lt;/code&gt; 字段。</target>
        </trans-unit>
        <trans-unit id="cc19d9af430281397afd69b96199ad787711bbc9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tokens&lt;/code&gt; are the Erlang tokens from &lt;code&gt;String&lt;/code&gt;. &lt;code&gt;EndLocation&lt;/code&gt; is the first location after the last token.</source>
          <target state="translated">&lt;code&gt;Tokens&lt;/code&gt; 是 &lt;code&gt;String&lt;/code&gt; 中的Erlang令牌。 &lt;code&gt;EndLocation&lt;/code&gt; 是最后一个令牌之后的第一个位置。</target>
        </trans-unit>
        <trans-unit id="e71b6178fb3f5623b522a62907f6a2520e1b70cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Toks1&lt;/code&gt; is a tail of &lt;code&gt;Tree&lt;/code&gt; that contains symbols encountered after the structure that was correctly parsed.</source>
          <target state="translated">&lt;code&gt;Toks1&lt;/code&gt; 是 &lt;code&gt;Tree&lt;/code&gt; 的尾部，其中包含在正确解析结构之后遇到的符号。</target>
        </trans-unit>
        <trans-unit id="6cd6d06f77d587468003982f885e5ec5c02e9a2f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Toks&lt;/code&gt; is the list of tokens to be parsed. A successful parse returns &lt;code&gt;{ok, Tree, Toks1}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Toks&lt;/code&gt; 是要解析的令牌的列表。成功的解析将返回 &lt;code&gt;{ok, Tree, Toks1}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6751800615a1cb23fcc3c1f7501055d38d9b53af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TopLevelDir.TestDir.Suite.Case&lt;/code&gt; (only &lt;code&gt;Case&lt;/code&gt; executed)</source>
          <target state="translated">&lt;code&gt;TopLevelDir.TestDir.Suite.Case&lt;/code&gt; （仅执行 &lt;code&gt;Case&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="4c056acdec22d7bfe5f76c418b61c2b6a38aaa75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TopLevelDir.TestDir.Suite:cases&lt;/code&gt; (specific test cases executed)</source>
          <target state="translated">&lt;code&gt;TopLevelDir.TestDir.Suite:cases&lt;/code&gt; （已执行特定测试用例）</target>
        </trans-unit>
        <trans-unit id="53a4e7815a1b5ed03c8521155ca5d53f619655f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TopLevelDir.TestDir.Suite&lt;/code&gt; (all cases in &lt;code&gt;Suite&lt;/code&gt; executed)</source>
          <target state="translated">&lt;code&gt;TopLevelDir.TestDir.Suite&lt;/code&gt; （ &lt;code&gt;Suite&lt;/code&gt; 所有情况都已执行）</target>
        </trans-unit>
        <trans-unit id="b0c25c2ac8ada173e3ada323fedd5e473bc8fc57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TopLevelDir.TestDir:suites&lt;/code&gt; (specific suites executed)</source>
          <target state="translated">&lt;code&gt;TopLevelDir.TestDir:suites&lt;/code&gt; （执行特定的套件）</target>
        </trans-unit>
        <trans-unit id="3c900707be7126a57aeae34e26cf071a34d5bc6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TopLevelDir.TestDir&lt;/code&gt; (all suites in &lt;code&gt;TestDir&lt;/code&gt; executed)</source>
          <target state="translated">&lt;code&gt;TopLevelDir.TestDir&lt;/code&gt; （执行 &lt;code&gt;TestDir&lt;/code&gt; 中的所有套件）</target>
        </trans-unit>
        <trans-unit id="b3c728124c4ee20bb4ed11c28dc23eb6ec9d1bf6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TotalSize&lt;/code&gt; is the total size of the carrier, including its header.</source>
          <target state="translated">&lt;code&gt;TotalSize&lt;/code&gt; 是载体的总大小，包括其标题。</target>
        </trans-unit>
        <trans-unit id="0459fa483f3ecb25277426566103557b3c846abb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TransportTag&lt;/code&gt; is a string.</source>
          <target state="translated">&lt;code&gt;TransportTag&lt;/code&gt; 是一个字符串。</target>
        </trans-unit>
        <trans-unit id="c21d9eef6e37bcd0c4a7b122aab8b0580e5c7a93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Trap&lt;/code&gt; is either an SNMP pdu record or an trappdu record, as defined in &lt;code&gt;snmp_types.hrl&lt;/code&gt;, with the SNMP request.</source>
          <target state="translated">&lt;code&gt;Trap&lt;/code&gt; 或者是一个SNMP PDU记录或trappdu记录，如在定义 &lt;code&gt;snmp_types.hrl&lt;/code&gt; ，与SNMP请求。</target>
        </trans-unit>
        <trans-unit id="65dd984c5baa99a7d4646077d3ee4d1d44ac88e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tree&lt;/code&gt; is a parse tree.</source>
          <target state="translated">&lt;code&gt;Tree&lt;/code&gt; 是一棵解析树。</target>
        </trans-unit>
        <trans-unit id="2aba2002f72fe530f98fd7101e061e4b3297f1a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tree&lt;/code&gt; is composed of nodes of the form &lt;code&gt;{Key, Value, Smaller, Bigger}&lt;/code&gt; and the &quot;empty tree&quot; node &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tree&lt;/code&gt; 由 &lt;code&gt;{Key, Value, Smaller, Bigger}&lt;/code&gt; 形式的节点和&amp;ldquo;空树&amp;rdquo;节点 &lt;code&gt;nil&lt;/code&gt; 组成。</target>
        </trans-unit>
        <trans-unit id="c0e09fc0cdcfd3b13f03705a9747a48dbd8225ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Type&lt;/code&gt; - As defined in the child specification.</source>
          <target state="translated">&lt;code&gt;Type&lt;/code&gt; -子规范中定义的类型。</target>
        </trans-unit>
        <trans-unit id="cf4c43f92c2af697a01e28db83e4dd71f728f48e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Type&lt;/code&gt; can be one of the following atoms: &lt;code&gt;process&lt;/code&gt;, &lt;code&gt;port&lt;/code&gt; or &lt;code&gt;time_offset&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Type&lt;/code&gt; 可以是以下原子之一： &lt;code&gt;process&lt;/code&gt; ， &lt;code&gt;port&lt;/code&gt; 或 &lt;code&gt;time_offset&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="61183d8e316d16b3aa5c4554b988cdbba5dc340e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Type&lt;/code&gt; can be one of the following:</source>
          <target state="translated">&lt;code&gt;Type&lt;/code&gt; 可以是以下之一：</target>
        </trans-unit>
        <trans-unit id="4385c3e5e9c975a726b306526b500f71a36eb85b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Type&lt;/code&gt; defaults to &lt;code&gt;permanent&lt;/code&gt; and specifies the start type of the application. If &lt;code&gt;Type = permanent | transient | temporary&lt;/code&gt;, the application is loaded and started in the corresponding way, see &lt;code&gt;application(3)&lt;/code&gt;. If &lt;code&gt;Type = load&lt;/code&gt;, the application is only loaded. If &lt;code&gt;Type = none&lt;/code&gt;, the application is not loaded and not started, although the code for its modules is loaded.</source>
          <target state="translated">&lt;code&gt;Type&lt;/code&gt; 默认为 &lt;code&gt;permanent&lt;/code&gt; 并指定应用程序的启动类型。如果 &lt;code&gt;Type = permanent | transient | temporary&lt;/code&gt; ，以相应的方式加载和启动 &lt;code&gt;application(3)&lt;/code&gt; ，请参见application（3）。如果 &lt;code&gt;Type = load&lt;/code&gt; ，则仅加载应用程序。如果 &lt;code&gt;Type = none&lt;/code&gt; ，则尽管已加载其模块的代码，但该应用程序不会加载也不会启动。</target>
        </trans-unit>
        <trans-unit id="9cfc3a7edcd24c74f970e9b734e9adadd2b58068" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Type&lt;/code&gt; determines which mac algorithm to use in the MAC operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a821d99536316865b2c699500c68f9bdc5a4a7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Type&lt;/code&gt; indicates whether the transport process in question is being started for a connecting (&lt;code&gt;Type=connect&lt;/code&gt;) or listening (&lt;code&gt;Type=accept&lt;/code&gt;) transport. In the latter case, transport processes are started as required to accept connections from multiple peers.</source>
          <target state="translated">&lt;code&gt;Type&lt;/code&gt; 表示正在为连接（ &lt;code&gt;Type=connect&lt;/code&gt; ）或侦听（ &lt;code&gt;Type=accept&lt;/code&gt; ）传输启动正在讨论的传输过程。在后一种情况下，将根据需要启动传输过程以接受来自多个对等方的连接。</target>
        </trans-unit>
        <trans-unit id="caa2a7b6c0d3d07c66b2ba1852eb95b6ad894452" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Type&lt;/code&gt; is &lt;code&gt;local&lt;/code&gt; or &lt;code&gt;external&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Type&lt;/code&gt; 是 &lt;code&gt;local&lt;/code&gt; 或 &lt;code&gt;external&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="21a3d803e336bd6545c9bb32aaf535f91c6cd58b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Type&lt;/code&gt; is &lt;code&gt;trap&lt;/code&gt; or &lt;code&gt;inform&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Type&lt;/code&gt; 是 &lt;code&gt;trap&lt;/code&gt; 或 &lt;code&gt;inform&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="78a42ed7b9af09a90a6a1a7f72087dce6cf5aaa9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Type&lt;/code&gt; is the &lt;code&gt;#pdu.type&lt;/code&gt; of the original request.</source>
          <target state="translated">&lt;code&gt;Type&lt;/code&gt; 是原始请求的 &lt;code&gt;#pdu.type&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="474c526b3a9922a8544184a9fea2d5525d45e1a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Type&lt;/code&gt; is the allocation category that the blocks belong to, e.g. &lt;code&gt;db_term&lt;/code&gt;, &lt;code&gt;message&lt;/code&gt; or &lt;code&gt;binary&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Type&lt;/code&gt; 是块所属的分配类别，例如 &lt;code&gt;db_term&lt;/code&gt; ， &lt;code&gt;message&lt;/code&gt; 或 &lt;code&gt;binary&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7f588287c1752d7a84c22fc8bac47e0998fd6580" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Type&lt;/code&gt; is the log type as specified by the &lt;code&gt;open/1&lt;/code&gt; option &lt;code&gt;type&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Type&lt;/code&gt; 是由 &lt;code&gt;open/1&lt;/code&gt; 选项 &lt;code&gt;type&lt;/code&gt; 指定的日志类型。</target>
        </trans-unit>
        <trans-unit id="86f3e21045c0b286b88a7bf8195dcc67e9c22f4f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Type&lt;/code&gt;s:</source>
          <target state="translated">&lt;code&gt;Type&lt;/code&gt;s:</target>
        </trans-unit>
        <trans-unit id="d742e2818a5942c0c8ad73169e0d207bcb488c4f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TypeSpecifierList&lt;/code&gt; is a list of type specifiers, in any order, separated by hyphens (-). Default values are used for any omitted type specifiers.</source>
          <target state="translated">&lt;code&gt;TypeSpecifierList&lt;/code&gt; 是类型说明符的列表，以任何顺序显示，并用连字符（-）分隔。默认值用于任何省略的类型说明符。</target>
        </trans-unit>
        <trans-unit id="a6f854978f4d26e8bf1b337746390f7a670e3302" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U&lt;/code&gt; is a subset of &lt;code&gt;XU&lt;/code&gt; (the unknown functions are a subset of the externally used functions since the compiler ensures that locally used functions are defined);</source>
          <target state="translated">&lt;code&gt;U&lt;/code&gt; 是 &lt;code&gt;XU&lt;/code&gt; 的子集（未知函数是外部使用的函数的子集，因为编译器确保定义了本地使用的函数）；</target>
        </trans-unit>
        <trans-unit id="898c75cebff3b4805c07d2121c4d51fc7f18c417" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U&lt;/code&gt; is a subset of &lt;code&gt;XU&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;U&lt;/code&gt; 是 &lt;code&gt;XU&lt;/code&gt; 的子集。</target>
        </trans-unit>
        <trans-unit id="692cf8ef50be5b3d2f0e042185cef7f3bd34073c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;URLPath = string()&lt;/code&gt; and &lt;code&gt;AllowedModule = atom()&lt;/code&gt;. &lt;code&gt;erl_script_alias&lt;/code&gt; marks all URLs matching url-path as erl scheme scripts. A matching URL is mapped into a specific module and function, for example:</source>
          <target state="translated">&lt;code&gt;URLPath = string()&lt;/code&gt; 和 &lt;code&gt;AllowedModule = atom()&lt;/code&gt; 。 &lt;code&gt;erl_script_alias&lt;/code&gt; 将所有与url-path匹配的URL标记为erl方案脚本。匹配的URL被映射到特定的模块和功能，例如：</target>
        </trans-unit>
        <trans-unit id="e3fcbaddb590a3c617dece38aa9d0f190c6b03c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;URLPath = string()&lt;/code&gt; and &lt;code&gt;AllowedModule = atom()&lt;/code&gt;. Same as &lt;code&gt;erl_script_alias&lt;/code&gt; but for scripts using the eval scheme. This is only supported for backwards compatibility. The eval scheme is deprecated.</source>
          <target state="translated">&lt;code&gt;URLPath = string()&lt;/code&gt; 和 &lt;code&gt;AllowedModule = atom()&lt;/code&gt; 。与 &lt;code&gt;erl_script_alias&lt;/code&gt; 相同，但适用于使用eval方案的脚本。仅支持向后兼容。评估方案已弃用。</target>
        </trans-unit>
        <trans-unit id="322839b0f6f88285a20d1f7922bf13b73c9fe7d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;USE_VM_PROBES&lt;/code&gt; - 1 if the runtime system is compiled to use VM probes (support for dtrace or systemtap), 0 otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56aaf7274c51ed95f7dca6ce7cf373f53f104484" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UU&lt;/code&gt; is a subset of &lt;code&gt;F&lt;/code&gt; (the unused functions are defined in analyzed modules).</source>
          <target state="translated">&lt;code&gt;UU&lt;/code&gt; 是 &lt;code&gt;F&lt;/code&gt; 的子集（未使用的功能在分析的模块中定义）。</target>
        </trans-unit>
        <trans-unit id="923f18e488650bde9c66947168e35c3510bff3c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UU&lt;/code&gt; is a subset of &lt;code&gt;F&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;UU&lt;/code&gt; 是 &lt;code&gt;F&lt;/code&gt; 的子集。</target>
        </trans-unit>
        <trans-unit id="985635c99efb3d556bc5a1bd15f0d0809ae440a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UU&lt;/code&gt; is equal to &lt;code&gt;F&amp;nbsp;-&amp;nbsp;(XU&amp;nbsp;+&amp;nbsp;LU)&lt;/code&gt; (the unused functions are defined functions that are neither used externally nor locally);</source>
          <target state="translated">&lt;code&gt;UU&lt;/code&gt; 等于 &lt;code&gt;F&amp;nbsp;-&amp;nbsp;(XU&amp;nbsp;+&amp;nbsp;LU)&lt;/code&gt; （未使用的功能是既未在外部也未在本地使用的已定义功能）；</target>
        </trans-unit>
        <trans-unit id="a6ad183e880144b686df72a44944a8942cb3f72a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UU&lt;/code&gt; is equal to &lt;code&gt;V - (XU + LU)&lt;/code&gt;, where &lt;code&gt;LU&lt;/code&gt; and &lt;code&gt;XU&lt;/code&gt; may have elements in common. Put in another way:</source>
          <target state="translated">&lt;code&gt;UU&lt;/code&gt; 等于 &lt;code&gt;V - (XU + LU)&lt;/code&gt; ，其中 &lt;code&gt;LU&lt;/code&gt; 和 &lt;code&gt;XU&lt;/code&gt; 可能具有相同的元素。换句话说：</target>
        </trans-unit>
        <trans-unit id="6a37ede7bba99908c3022cc088f335a2bc827250" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Uniq&lt;/code&gt; (a binary) is a unique value for this fun. It is calculated from the compiled code for the entire module.</source>
          <target state="translated">&lt;code&gt;Uniq&lt;/code&gt; （二进制）是此乐趣的唯一值。它是根据整个模块的编译代码计算得出的。</target>
        </trans-unit>
        <trans-unit id="978d04a9f4220b7460a6bb0a4cd9469028d7122d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Uniq&lt;/code&gt; (an integer) is a unique value for this fun. As from Erlang/OTP R15, this integer is calculated from the compiled code for the entire module. Before Erlang/OTP R15, this integer was based on only the body of the fun.</source>
          <target state="translated">&lt;code&gt;Uniq&lt;/code&gt; （整数）是此功能的唯一值。从Erlang / OTP R15开始，此整数是根据整个模块的编译代码计算得出的。在Erlang / OTP R15之前，此整数仅基于乐趣的主体。</target>
        </trans-unit>
        <trans-unit id="b831d0ef7e2c0b7e197c7d455d68c63a0d8fb048" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Unused&lt;/code&gt; is kept for backward compatibility.</source>
          <target state="translated">&lt;code&gt;Unused&lt;/code&gt; 保持未使用状态是为了向后兼容。</target>
        </trans-unit>
        <trans-unit id="77b2f412b2fb0912036dac462a9a4e4850f5bdf0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Up&lt;/code&gt; - Scrolls a few &lt;code&gt;Events&lt;/code&gt; backwards.</source>
          <target state="translated">&lt;code&gt;Up&lt;/code&gt; - 向后滚动一些 &lt;code&gt;Events&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="850108996895fb2380a6485c752faf8c898a91ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UserData&lt;/code&gt; is any term (passed on to the user when calling the &lt;code&gt;UserMod&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;UserData&lt;/code&gt; 是任何术语（在调用 &lt;code&gt;UserMod&lt;/code&gt; 时传递给用户。</target>
        </trans-unit>
        <trans-unit id="f09467cf53584d767e4c5e69e967429a82ad2714" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UserId&lt;/code&gt; is any term (used to uniquely identify the user).</source>
          <target state="translated">&lt;code&gt;UserId&lt;/code&gt; 是任何术语（用于唯一标识用户）。</target>
        </trans-unit>
        <trans-unit id="22808b8a3c6d7b84d5745416d67571f11e1a0442" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UserId&lt;/code&gt; is the identity of the &lt;strong&gt;manager user&lt;/strong&gt; responsible for this agent (term).</source>
          <target state="translated">&lt;code&gt;UserId&lt;/code&gt; 是负责此代理（术语）的&lt;strong&gt;管理员用户&lt;/strong&gt;的身份。</target>
        </trans-unit>
        <trans-unit id="b9d22184964dda04a4d08ccfc2be8b52eaedeee6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UserMod&lt;/code&gt; is the user callback module (atom).</source>
          <target state="translated">&lt;code&gt;UserMod&lt;/code&gt; 是用户回调模块（原子）。</target>
        </trans-unit>
        <trans-unit id="2521b3d0d73fad2c771ef3561fd8380204b50113" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UserName&lt;/code&gt; is a string.</source>
          <target state="translated">&lt;code&gt;UserName&lt;/code&gt; 是一个字符串。</target>
        </trans-unit>
        <trans-unit id="1ca9127303df3ff21e5a17edd24b25a7dc70cb28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UserSkipped = integer()&lt;/code&gt;, current number of user-skipped test cases.</source>
          <target state="translated">&lt;code&gt;UserSkipped = integer()&lt;/code&gt; ，当前用户跳过的测试用例数。</target>
        </trans-unit>
        <trans-unit id="e51e2e7486a7b928ab3d073c838ff2142d45244b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UserTerm = term()&lt;/code&gt;, any data specified by user, or &lt;code&gt;exit/1&lt;/code&gt; information.</source>
          <target state="translated">&lt;code&gt;UserTerm = term()&lt;/code&gt; ，用户指定的任何数据，或 &lt;code&gt;exit/1&lt;/code&gt; 信息。</target>
        </trans-unit>
        <trans-unit id="b2c3b6cd47ef5163f721ec91a2f369ed108802f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Users&lt;/code&gt; is the number of anonymous users of the log, see the &lt;code&gt;open/1&lt;/code&gt; option &lt;code&gt;&lt;a href=&quot;#linkto&quot;&gt;linkto&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Users&lt;/code&gt; 是日志的匿名用户数，请参阅 &lt;code&gt;open/1&lt;/code&gt; 选项 &lt;code&gt;&lt;a href=&quot;#linkto&quot;&gt;linkto&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ed4cd6a7c66d0b27c2526a87a5235887da7fa0c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;V&lt;/code&gt; is equal to &lt;code&gt;UU + XU + LU&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;V&lt;/code&gt; 等于 &lt;code&gt;UU + XU + LU&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="13864afd22295498915949c8328005e8401306ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;V&lt;/code&gt; is equal to &lt;code&gt;X + L + B + U&lt;/code&gt;, where &lt;code&gt;X&lt;/code&gt;, &lt;code&gt;L&lt;/code&gt;, &lt;code&gt;B&lt;/code&gt; and &lt;code&gt;U&lt;/code&gt; are pairwise disjoint (that is, have no elements in common).</source>
          <target state="translated">&lt;code&gt;V&lt;/code&gt; 等于 &lt;code&gt;X + L + B + U&lt;/code&gt; ，其中 &lt;code&gt;X&lt;/code&gt; ， &lt;code&gt;L&lt;/code&gt; ， &lt;code&gt;B&lt;/code&gt; 和 &lt;code&gt;U&lt;/code&gt; 是成对不相交的（也就是说，没有共同的元素）。</target>
        </trans-unit>
        <trans-unit id="d3b45dda6645d1ad036aa3e2e0d7b212c1824905" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Val =&lt;/code&gt;&lt;code&gt;os:env_var_value()&lt;/code&gt;&lt;code&gt;| false&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Val =&lt;/code&gt; &lt;code&gt;os:env_var_value()&lt;/code&gt; &lt;code&gt;| false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b9962cc66b1d0ac5b6d7fe0959e6ad5260006baa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Value = Calls&lt;/code&gt; which is the number of times the module, function, or clause has been called. In the case of line level analysis, &lt;code&gt;Calls&lt;/code&gt; is the number of times the line has been executed.</source>
          <target state="translated">&lt;code&gt;Value = Calls&lt;/code&gt; ，它是调用模块，函数或子句的次数。在线路级别分析的情况下，&amp;ldquo; &lt;code&gt;Calls&lt;/code&gt; 是线路已执行的次数。</target>
        </trans-unit>
        <trans-unit id="d6f5604e0a71deea504de90e82a4af07fa943256" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Value = {Cov,NotCov}&lt;/code&gt; where &lt;code&gt;Cov&lt;/code&gt; is the number of executable lines in the module, function, clause or line that have been executed at least once and &lt;code&gt;NotCov&lt;/code&gt; is the number of executable lines that have not been executed.</source>
          <target state="translated">&lt;code&gt;Value = {Cov,NotCov}&lt;/code&gt; 其中 &lt;code&gt;Cov&lt;/code&gt; 是模块，函数，子句或行中至少执行过一次的可执行行的数量， &lt;code&gt;NotCov&lt;/code&gt; 是未执行过的可执行行的数量。</target>
        </trans-unit>
        <trans-unit id="baee74f8aa36dfbcf94704bdd32a05e6ae0af5ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Value&lt;/code&gt; is a list of &lt;code&gt;{Domain, Addr}&lt;/code&gt; tuples or &lt;code&gt;Domain&lt;/code&gt; atoms.</source>
          <target state="translated">&lt;code&gt;Value&lt;/code&gt; 是 &lt;code&gt;{Domain, Addr}&lt;/code&gt; 元组或 &lt;code&gt;Domain&lt;/code&gt; 原子的列表。</target>
        </trans-unit>
        <trans-unit id="b7b4a7e9e0cc8b0f9454280487bec8d861f8ef24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Value&lt;/code&gt; is a list of nodes that Mnesia is to try to connect to. &lt;code&gt;ReturnValue&lt;/code&gt; is those nodes in &lt;code&gt;Value&lt;/code&gt; that Mnesia is connected to.</source>
          <target state="translated">&lt;code&gt;Value&lt;/code&gt; 是Mnesia尝试连接的节点列表。 &lt;code&gt;ReturnValue&lt;/code&gt; 是Mnesia连接到的 &lt;code&gt;Value&lt;/code&gt; 中的那些节点。</target>
        </trans-unit>
        <trans-unit id="72846c6b4da6ad54d3d04e819f5408ac00adfc90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Value&lt;/code&gt; is a number. See the description in &lt;code&gt;&lt;a href=&quot;#configuration_parameters&quot;&gt;Section Configuration Parameters&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;ReturnValue&lt;/code&gt; is the new value. Notice that this configuration parameter is not persistent. It is lost when Mnesia has stopped.</source>
          <target state="translated">&lt;code&gt;Value&lt;/code&gt; 是一个数字。请参阅&amp;ldquo; &lt;code&gt;&lt;a href=&quot;#configuration_parameters&quot;&gt;Section Configuration Parameters&lt;/a&gt;&lt;/code&gt; 的描述。 &lt;code&gt;ReturnValue&lt;/code&gt; 是新值。请注意，此配置参数不是持久性的。当Mnesia停止时，它将丢失。</target>
        </trans-unit>
        <trans-unit id="1f22d08710d3e6e26eba94834579e768d366c20b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Value&lt;/code&gt; is the value for the variable.</source>
          <target state="translated">&lt;code&gt;Value&lt;/code&gt; 是变量的值。</target>
        </trans-unit>
        <trans-unit id="f62230dbd1849de5dc78c615fa8ef9a53f0ff6ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Value&lt;/code&gt; is the value of the local function and &lt;code&gt;NewBindings&lt;/code&gt; are the updated variable bindings. In this case, the function handler must itself evaluate all the function arguments and manage the bindings. To signal an error, the function handler calls &lt;code&gt;exit/1&lt;/code&gt; with a suitable exit value.</source>
          <target state="translated">&lt;code&gt;Value&lt;/code&gt; 是局部函数的值， &lt;code&gt;NewBindings&lt;/code&gt; 是更新的变量绑定。在这种情况下，函数处理程序本身必须评估所有函数参数并管理绑定。为了指示错误，函数处理程序使用适当的退出值调用 &lt;code&gt;exit/1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3f0a3eea786c80eae5b545d3520742c7013b454e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VarName&lt;/code&gt; is not allowed to contain an &lt;code&gt;$=&lt;/code&gt; character. Previous implementations used to just let the &lt;code&gt;$=&lt;/code&gt; character through which silently caused erroneous results. Current implementation will instead throw a &lt;code&gt;badarg&lt;/code&gt; exception.</source>
          <target state="translated">&lt;code&gt;VarName&lt;/code&gt; 不允许包含 &lt;code&gt;$=&lt;/code&gt; 字符。以前的实现曾经只是让 &lt;code&gt;$=&lt;/code&gt; 字符静默地导致错误的结果。当前的实现将改为抛出 &lt;code&gt;badarg&lt;/code&gt; 异常。</target>
        </trans-unit>
        <trans-unit id="0fc30d9332cb5cfec95e997882c52b8354b7ce68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Varbinds&lt;/code&gt; is a list of &lt;code&gt;Varbind&lt;/code&gt;, where each &lt;code&gt;Varbind&lt;/code&gt; is one of:</source>
          <target state="translated">&lt;code&gt;Varbinds&lt;/code&gt; 列表列出了 &lt;code&gt;Varbind&lt;/code&gt; ，其中每个 &lt;code&gt;Varbind&lt;/code&gt; 是下列之一：</target>
        </trans-unit>
        <trans-unit id="3e677cce83d72c68f0f465cb2703534bb5e400c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Variable&lt;/code&gt; is one of the following:</source>
          <target state="translated">&lt;code&gt;Variable&lt;/code&gt; 是以下之一：</target>
        </trans-unit>
        <trans-unit id="721a9626bd422fd41c8d0315e98d9fdd147f0bb6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Variable&lt;/code&gt; is the name of an snmp counter that represents the error, e.g. &lt;code&gt;snmpInBadCommunityUses&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Variable&lt;/code&gt; 是代表错误的snmp计数器的名称，例如 &lt;code&gt;snmpInBadCommunityUses&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0d2e705985127250e1520f53cd10886301c014c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Verbosity&lt;/code&gt; selects the number of warnings:</source>
          <target state="translated">&lt;code&gt;Verbosity&lt;/code&gt; 选择警告的数量：</target>
        </trans-unit>
        <trans-unit id="fa81f8262be8a5db9d978a99dd1429afc1b0f466" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Version&lt;/code&gt; is a list of integers (but not a string) representing the version of the &lt;code&gt;malloc()&lt;/code&gt; implementation used.</source>
          <target state="translated">&lt;code&gt;Version&lt;/code&gt; 是一个整数列表（但不是字符串），表示使用的 &lt;code&gt;malloc()&lt;/code&gt; 实现的版本。</target>
        </trans-unit>
        <trans-unit id="5ede0ab7783eb1db9dd131beaf71db55e5b5ec5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Version&lt;/code&gt; is the version (v1 | v2 | v3).</source>
          <target state="translated">&lt;code&gt;Version&lt;/code&gt; 是版本（v1 | v2 | v3）。</target>
        </trans-unit>
        <trans-unit id="d8fdc13f8c9dec6bd7182368d2888e4d44f478cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Vertical scroll&lt;/code&gt; - Use mouse wheel and up/down arrows to scroll little. Use page up/down and home/end buttons to scroll more.</source>
          <target state="translated">&lt;code&gt;Vertical scroll&lt;/code&gt; -使用鼠标滚轮和向上/向下箭头进行少许滚动。使用上一页/下一页和主页/结束按钮滚动更多。</target>
        </trans-unit>
        <trans-unit id="043fc434cfc73c5942afd1a187be1469249995f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ViewIndex&lt;/code&gt; is an integer.</source>
          <target state="translated">&lt;code&gt;ViewIndex&lt;/code&gt; 是一个整数。</target>
        </trans-unit>
        <trans-unit id="003ad343d524731748fa7e406e57075b3e7e6e88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ViewMask&lt;/code&gt; is either &lt;code&gt;null&lt;/code&gt; or a list of ones and zeros. Ones nominate that an exact match is used for this sub-identifier. Zeros are wild-cards which match any sub-identifier. If the mask is shorter than the sub-tree, the tail is regarded as all ones. &lt;code&gt;null&lt;/code&gt; is shorthand for a mask with all ones.</source>
          <target state="translated">&lt;code&gt;ViewMask&lt;/code&gt; 为 &lt;code&gt;null&lt;/code&gt; 或为一和零的列表。有人提名一个完全匹配用于此子标识符。零是与任何子标识符匹配的通配符。如果掩码比子树短，则将尾巴视为全部。 &lt;code&gt;null&lt;/code&gt; 是所有掩码的简写。</target>
        </trans-unit>
        <trans-unit id="a48f36a84da2ba75598f614390ad3b91426f84b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ViewStatus&lt;/code&gt; is either &lt;code&gt;included&lt;/code&gt; or &lt;code&gt;excluded&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ViewStatus&lt;/code&gt; 要么 &lt;code&gt;included&lt;/code&gt; 或 &lt;code&gt;excluded&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3975efbe626e831a2efa0b407d3965e89ef55890" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ViewSubtree&lt;/code&gt; is a list of integer.</source>
          <target state="translated">&lt;code&gt;ViewSubtree&lt;/code&gt; 是一个整数列表。</target>
        </trans-unit>
        <trans-unit id="18aed3b4e846ed1f46169b8da859862cf66f91f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Vsn&lt;/code&gt; is either &lt;code&gt;'version-1'&lt;/code&gt;, &lt;code&gt;'version-2'&lt;/code&gt;, or &lt;code&gt;'version-3'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Vsn&lt;/code&gt; 是 &lt;code&gt;'version-1'&lt;/code&gt; ， &lt;code&gt;'version-2'&lt;/code&gt; 或 &lt;code&gt;'version-3'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="21d2c2d7d6fb04eb51d34b2892169d49616585df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Vsn&lt;/code&gt; is the version of the unpacked release, as defined in its &lt;code&gt;.rel&lt;/code&gt; file.</source>
          <target state="translated">&lt;code&gt;Vsn&lt;/code&gt; 是解压缩发行版的版本，如其 &lt;code&gt;.rel&lt;/code&gt; 文件中所定义。</target>
        </trans-unit>
        <trans-unit id="cf1e2347ff1a47b8054894bc5ee840c48e283af8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Vsn&lt;/code&gt; translates into &lt;code&gt;MPModel&lt;/code&gt; and &lt;code&gt;SecModel&lt;/code&gt; as follows:</source>
          <target state="translated">&lt;code&gt;Vsn&lt;/code&gt; 转换为 &lt;code&gt;MPModel&lt;/code&gt; 和 &lt;code&gt;SecModel&lt;/code&gt; 如下：</target>
        </trans-unit>
        <trans-unit id="539a0b79730e7fe2753fa19b8c1f70811d5cdce8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Vsn&lt;/code&gt;, a string, is the current version of the application, as defined in the &lt;code&gt;.app&lt;/code&gt; file.</source>
          <target state="translated">&lt;code&gt;Vsn&lt;/code&gt; （字符串）是应用程序的当前版本，如 &lt;code&gt;.app&lt;/code&gt; 文件中所定义。</target>
        </trans-unit>
        <trans-unit id="1db214a4a5c535ec32f34424da109c2edef46aea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;W&lt;/code&gt; - Untagged integer or pointer. Not possible to pack with other operands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d74b48eb4dafe5b1a84d39c7571b47db235583a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Warnings&lt;/code&gt; is the list of error descriptors of all &lt;code&gt;warning_marker&lt;/code&gt; nodes that occur in &lt;code&gt;Forms&lt;/code&gt;. The order of listing is not defined.</source>
          <target state="translated">&lt;code&gt;Warnings&lt;/code&gt; 是在 &lt;code&gt;Forms&lt;/code&gt; 中出现的所有 &lt;code&gt;warning_marker&lt;/code&gt; 节点的错误描述符的列表。列表顺序未定义。</target>
        </trans-unit>
        <trans-unit id="2b12237380545e4bf33fbb504a64fcae9ffd1e9f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WindowBits&lt;/code&gt; is the base two logarithm of the maximum window size (the size of the history buffer). It is to be in the range 8 through 15. Default to 15 if &lt;code&gt;&lt;a href=&quot;#inflateInit-1&quot;&gt;inflateInit/1&lt;/a&gt;&lt;/code&gt; is used.</source>
          <target state="translated">&lt;code&gt;WindowBits&lt;/code&gt; 是最大窗口大小（历史缓冲区的大小）的底两个对数。它的范围是8到15。如果使用 &lt;code&gt;&lt;a href=&quot;#inflateInit-1&quot;&gt;inflateInit/1&lt;/a&gt;&lt;/code&gt; ,则默认为15 。</target>
        </trans-unit>
        <trans-unit id="67643a3996b12f24a2be5b13581df35894f74afa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Worst&lt;/code&gt; is the pid and number of allocated bytes of the largest Erlang process on the node. If &lt;code&gt;memsup&lt;/code&gt; should not collect process data, that is if the configuration parameter &lt;code&gt;memsup_system_only&lt;/code&gt; was set to &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;Worst&lt;/code&gt; is &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Worst&lt;/code&gt; 是节点上最大的Erlang进程的pid和分配的字节数。如果 &lt;code&gt;memsup&lt;/code&gt; 不应收集过程数据，即配置参数 &lt;code&gt;memsup_system_only&lt;/code&gt; 设置为 &lt;code&gt;true&lt;/code&gt; ，则 &lt;code&gt;Worst&lt;/code&gt; 为 &lt;code&gt;undefined&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6b531ca937cb5f2bc8d867b283a607daa9fa7067" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WriteView&lt;/code&gt; is a string.</source>
          <target state="translated">&lt;code&gt;WriteView&lt;/code&gt; 是一个字符串。</target>
        </trans-unit>
        <trans-unit id="71485d56546b0beefd97ba59c6341b838a69db4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;XU&lt;/code&gt; is equal to &lt;code&gt;range XC&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;XU&lt;/code&gt; 等于 &lt;code&gt;range XC&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b55b14897dffa6289441d6eec18178caacd827ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[Address = string()]&lt;/code&gt; The contents of &lt;code&gt;Address&lt;/code&gt; is server dependent.</source>
          <target state="translated">&lt;code&gt;[Address = string()]&lt;/code&gt; &lt;code&gt;Address&lt;/code&gt; 的内容取决于服务器。</target>
        </trans-unit>
        <trans-unit id="58843a980ea15f66b4f7ac4eb722358bcaea97c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[X || X &amp;lt;- T, X &amp;gt;= Pivot]&lt;/code&gt; is the list of all elements in &lt;code&gt;T&lt;/code&gt; that are greater than or equal to &lt;code&gt;Pivot&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;[X || X &amp;lt;- T, X &amp;gt;= Pivot]&lt;/code&gt; 是 &lt;code&gt;T&lt;/code&gt; 中大于或等于 &lt;code&gt;Pivot&lt;/code&gt; 的所有元素的列表。</target>
        </trans-unit>
        <trans-unit id="dea3522b3a4df1d03b0280b5a307ea6a99e0fa56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[]&lt;/code&gt; - An empty list indicates that the erlang scanner should be used.</source>
          <target state="translated">&lt;code&gt;[]&lt;/code&gt; -空列表表示应使用erlang扫描器。</target>
        </trans-unit>
        <trans-unit id="f1a5dbac4542b98d3918ab1701aa9b17885cf7cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[]&lt;/code&gt; - Encodes the messages to the standard distribution format. It is rather verbose but encoding and decoding is blinding fast.</source>
          <target state="translated">&lt;code&gt;[]&lt;/code&gt; -将消息编码为标准分发格式。它相当冗长，但是编码和解码却非常快。</target>
        </trans-unit>
        <trans-unit id="6c891c0bdf07c0c81085ac2c512cee221239be01" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[]&lt;/code&gt; - Translated into a list of the own node: &lt;code&gt;[node()]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[]&lt;/code&gt; -转换为自己节点的列表： &lt;code&gt;[node()]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7aa73ff63e63b1712133831888e0ae7bf769ff2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[]&lt;/code&gt; is a list, thus</source>
          <target state="translated">&lt;code&gt;[]&lt;/code&gt; 是一个列表，因此</target>
        </trans-unit>
        <trans-unit id="aa2de75acee60f52e83af54911ecab2fefde928b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[a|[b|[c|[]]]]&lt;/code&gt; is a list, or in short &lt;code&gt;[a,b,c]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[a|[b|[c|[]]]]&lt;/code&gt; 是一个列表，或简称 &lt;code&gt;[a,b,c]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="750d5e9c1dd1fee3cefa4cddb1d680d4b85ef850" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[b|[c|[]]]&lt;/code&gt; is a list, thus</source>
          <target state="translated">&lt;code&gt;[b|[c|[]]]&lt;/code&gt; 是一个列表，因此</target>
        </trans-unit>
        <trans-unit id="0202ab521e4c16fbff04b0cfab46068d12850e94" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[compressed]&lt;/code&gt; - Encodes the messages to a compressed form of the standard distribution format. It is less verbose, but the encoding and decoding will on the other hand be slower.</source>
          <target state="translated">&lt;code&gt;[compressed]&lt;/code&gt; -将消息编码为标准分发格式的压缩形式。它不那么冗长，但是另一方面，编码和解码会更慢。</target>
        </trans-unit>
        <trans-unit id="63387f3e32b6c484f5f5e51cb1368ac62f111ef9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[c|[]]&lt;/code&gt; is a list, thus</source>
          <target state="translated">&lt;code&gt;[c|[]]&lt;/code&gt; 是一个列表，因此</target>
        </trans-unit>
        <trans-unit id="d1ac90eb55ddae0ac46e10c6c8ccb4a49a75c07b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[erlang, mnesia, otp]&lt;/code&gt; is a list of three direct references to three different &lt;code&gt;projects&lt;/code&gt; records.</source>
          <target state="translated">&lt;code&gt;[erlang, mnesia, otp]&lt;/code&gt; 是对三个不同 &lt;code&gt;projects&lt;/code&gt; 记录的三个直接引用的列表。</target>
        </trans-unit>
        <trans-unit id="70194f0f6e78d3b9d059251ec3e1ee77938ce1d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[integer()]&lt;/code&gt; - A list containing the size (the number of bits) of each level. Example: &lt;code&gt;[3,8,5,8]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;[integer()]&lt;/code&gt; -包含每个级别的大小（位数）的列表。示例： &lt;code&gt;[3,8,5,8]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0c182d51ea654aead7a970e38ac9d8f31da1f5c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[megaco_compressed]&lt;/code&gt; - Encodes the messages to the standard distribution format after an internal transformation. It is less verbose, but the total time of the encoding and decoding will on the other hand be somewhat slower (see the &lt;code&gt;&lt;a href=&quot;megaco_performance&quot;&gt;performance&lt;/a&gt;&lt;/code&gt; chapter for more info).</source>
          <target state="translated">&lt;code&gt;[megaco_compressed]&lt;/code&gt; -内部转换后，将消息编码为标准分发格式。它不那么冗长，但是另一方面，编码和解码的总时间会稍慢一些（有关更多信息，请参见 &lt;code&gt;&lt;a href=&quot;megaco_performance&quot;&gt;performance&lt;/a&gt;&lt;/code&gt; 章节）。</target>
        </trans-unit>
        <trans-unit id="43866a70271e9e7412e1575a585b4c57bb5da68c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[native]&lt;/code&gt; - skips the transformation phase, i.e. the decoded message(s) will not be transformed into our internal form.</source>
          <target state="translated">&lt;code&gt;[native]&lt;/code&gt; -跳过转换阶段，即，解码后的消息将不会转换为我们的内部形式。</target>
        </trans-unit>
        <trans-unit id="1b77d9eaa24a5dc309ea50d131abb91effdda6a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[{flex, port()}]&lt;/code&gt; - Use the flex scanner when decoding (not optimized for SMP). See &lt;code&gt;&lt;a href=&quot;megaco_run#initial_config&quot;&gt;initial configuration&lt;/a&gt;&lt;/code&gt; for more info.</source>
          <target state="translated">&lt;code&gt;[{flex, port()}]&lt;/code&gt; -解码时使用flex扫描器（未针对SMP优化）。有关更多信息，请参见 &lt;code&gt;&lt;a href=&quot;megaco_run#initial_config&quot;&gt;initial configuration&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3499321580179f3fe8caf62b26b14282cb7f2190" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[{flex, ports()}]&lt;/code&gt; - Use the flex scanner when decoding (optimized for SMP). See &lt;code&gt;&lt;a href=&quot;megaco_run#initial_config&quot;&gt;initial configuration&lt;/a&gt;&lt;/code&gt; for more info.</source>
          <target state="translated">&lt;code&gt;[{flex, ports()}]&lt;/code&gt; -解码时使用flex扫描器（针对SMP优化）。有关更多信息，请参见 &lt;code&gt;&lt;a href=&quot;megaco_run#initial_config&quot;&gt;initial configuration&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="09facbac0459a65b1017b50c767631ac01b79cad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[{megaco_compressed, Module}]&lt;/code&gt; - Works in the same way as the megaco_compressed config parameter, only here the user provide their own compress module. This module must implement the &lt;code&gt;&lt;a href=&quot;megaco_edist_compress&quot;&gt;megaco_edist_compress&lt;/a&gt;&lt;/code&gt; behaviour.</source>
          <target state="translated">&lt;code&gt;[{megaco_compressed, Module}]&lt;/code&gt; -以与megaco_compressed配置参数相同的方式工作，仅在此处用户提供自己的压缩模块。此模块必须实现 &lt;code&gt;&lt;a href=&quot;megaco_edist_compress&quot;&gt;megaco_edist_compress&lt;/a&gt;&lt;/code&gt; 行为。</target>
        </trans-unit>
        <trans-unit id="d3e70c82e02eafb1e915c5f2e6c5ec86bf5015a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_@@bar&lt;/code&gt; is a glob variable, and &lt;code&gt;_@_@bar&lt;/code&gt; is a lifted glob variable</source>
          <target state="translated">&lt;code&gt;_@@bar&lt;/code&gt; 是glob变量，而 &lt;code&gt;_@_@bar&lt;/code&gt; 是提升的glob变量</target>
        </trans-unit>
        <trans-unit id="efdb472bb1d1167ba56f0fe57e2ee2ce637b2720" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - Tagged atom.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66ae8df5297696abb0e691f48575533e609bbaa3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - Tagged atom. The default value is the empty atom (&lt;code&gt;am_Empty&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8e87acf13faf5cc9d855a1e7f8e377825f058a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - Tagged literal atom.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41a3c6bccdc4eba63910c97a11f5b7cecefb8721" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;accept/1&lt;/code&gt; should spawn a process that accepts connections. This process should preferably execute on &lt;code&gt;max&lt;/code&gt; priority. The process identifier of this process should be returned.</source>
          <target state="translated">&lt;code&gt;accept/1&lt;/code&gt; 应该产生一个接受连接的进程。该过程最好应在 &lt;code&gt;max&lt;/code&gt; 优先级上执行。该过程的过程标识符应返回。</target>
        </trans-unit>
        <trans-unit id="b6840e0824da7ebe7963f46402afd300355102b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;accept_connection/5&lt;/code&gt; should spawn a process that will perform the Erlang distribution handshake for the connection. If the handshake successfully completes it should continue to function as a connection supervisor. This process should preferably execute on &lt;code&gt;max&lt;/code&gt; priority.</source>
          <target state="translated">&lt;code&gt;accept_connection/5&lt;/code&gt; 应该产生一个进程，该进程将为连接执行Erlang分发握手。如果握手成功完成，则应继续充当连接管理器。该过程最好应在 &lt;code&gt;max&lt;/code&gt; 优先级上执行。</target>
        </trans-unit>
        <trans-unit id="29bcee8a7eb3171caee510874100c571edbbea57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;access_mode&lt;/code&gt;. Returns the access mode of the table. The access mode can be &lt;code&gt;read_only&lt;/code&gt; or &lt;code&gt;read_write&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;access_mode&lt;/code&gt; 。返回表的访问方式。访问模式可以是 &lt;code&gt;read_only&lt;/code&gt; 或 &lt;code&gt;read_write&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c020fa4d0f91915fcdac48754da555e007b99d6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;access_module&lt;/code&gt;. Returns the name of module that is configured to be the activity access callback module.</source>
          <target state="translated">&lt;code&gt;access_module&lt;/code&gt; 。返回配置为活动访问回调模块的模块的名称。</target>
        </trans-unit>
        <trans-unit id="aa5ffb64ce2d689521884392fc8b8b73bc8d6d79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;action&lt;/code&gt; - Specifies the behaviour when a non-empty file is found: Keep its content or clear it out.</source>
          <target state="translated">&lt;code&gt;action&lt;/code&gt; -指定在找到非空文件时的行为：保留其内容或清除它。</target>
        </trans-unit>
        <trans-unit id="64cadd3e914fb604781d58492bacaec15601919e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;action&lt;/code&gt; - Specifies the behaviour when a non-empty, already existing, table: Keep its content or clear it out.</source>
          <target state="translated">&lt;code&gt;action&lt;/code&gt; -指定一个非空，已经存在的表时的行为：保留其内容或清除它。</target>
        </trans-unit>
        <trans-unit id="30e97d5d522210ddfce2ee69bd50abe4408333e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;active&lt;/code&gt; - The count of all actively running child processes managed by this supervisor. For a &lt;code&gt;simple_one_for_one&lt;/code&gt; supervisors, no check is done to ensure that each child process is still alive, although the result provided here is likely to be very accurate unless the supervisor is heavily overloaded.</source>
          <target state="translated">&lt;code&gt;active&lt;/code&gt; -此主管管理的所有正在运行的子进程的计数。对于 &lt;code&gt;simple_one_for_one&lt;/code&gt; 主管，不会执行任何检查以确保每个子进程仍处于活动状态，尽管除非主管严重超载，否则此处提供的结果可能非常准确。</target>
        </trans-unit>
        <trans-unit id="41c87e7c264e7abea50c1af32323b798c2bcd229" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;active&lt;/code&gt;. Some delete operations require that all active records are removed.</source>
          <target state="translated">&lt;code&gt;active&lt;/code&gt; 。某些删除操作要求删除所有活动记录。</target>
        </trans-unit>
        <trans-unit id="3dcbcbbb783a768c2123748bed02001e19267544" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;add_edge(G,&amp;nbsp;V1,&amp;nbsp;V2)&lt;/code&gt; is equivalent to &lt;code&gt;add_edge(G,&amp;nbsp;V1,&amp;nbsp;V2,&amp;nbsp;[])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;add_edge(G,&amp;nbsp;V1,&amp;nbsp;V2)&lt;/code&gt; 等同于 &lt;code&gt;add_edge(G,&amp;nbsp;V1,&amp;nbsp;V2,&amp;nbsp;[])&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6735b21a34f8a3b318add28bc939db34c74e7c65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;add_edge(G,&amp;nbsp;V1,&amp;nbsp;V2,&amp;nbsp;Label)&lt;/code&gt; is equivalent to &lt;code&gt;add_edge(G,&amp;nbsp;E,&amp;nbsp;V1,&amp;nbsp;V2,&amp;nbsp;Label)&lt;/code&gt;, where &lt;code&gt;E&lt;/code&gt; is a created edge. The created edge is represented by term &lt;code&gt;['$e'&amp;nbsp;|&amp;nbsp;N]&lt;/code&gt;, where &lt;code&gt;N&lt;/code&gt; is an integer &amp;gt;= 0.</source>
          <target state="translated">&lt;code&gt;add_edge(G,&amp;nbsp;V1,&amp;nbsp;V2,&amp;nbsp;Label)&lt;/code&gt; 等效于 &lt;code&gt;add_edge(G,&amp;nbsp;E,&amp;nbsp;V1,&amp;nbsp;V2,&amp;nbsp;Label)&lt;/code&gt; ，其中 &lt;code&gt;E&lt;/code&gt; 是创建的边。创建的边由术语 &lt;code&gt;['$e'&amp;nbsp;|&amp;nbsp;N]&lt;/code&gt; ，其中 &lt;code&gt;N&lt;/code&gt; 是&amp;gt; = 0的整数。</target>
        </trans-unit>
        <trans-unit id="eded226af24e6ef08af042767a734cf0549eb6d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;add_edge/5&lt;/code&gt; creates (or modifies) edge &lt;code&gt;E&lt;/code&gt; of digraph &lt;code&gt;G&lt;/code&gt;, using &lt;code&gt;Label&lt;/code&gt; as the (new) &lt;code&gt;&lt;a href=&quot;#label&quot;&gt;label&lt;/a&gt;&lt;/code&gt; of the edge. The edge is &lt;code&gt;&lt;a href=&quot;#emanate&quot;&gt;emanating&lt;/a&gt;&lt;/code&gt; from &lt;code&gt;V1&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#incident&quot;&gt;incident&lt;/a&gt;&lt;/code&gt; on &lt;code&gt;V2&lt;/code&gt;. Returns &lt;code&gt;E&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;add_edge/5&lt;/code&gt; 使用 &lt;code&gt;Label&lt;/code&gt; 作为边的（新） &lt;code&gt;&lt;a href=&quot;#label&quot;&gt;label&lt;/a&gt;&lt;/code&gt; 来创建（或修改）有向图 &lt;code&gt;G&lt;/code&gt; 的边 &lt;code&gt;E&lt;/code&gt; 。边缘 &lt;code&gt;&lt;a href=&quot;#emanate&quot;&gt;emanating&lt;/a&gt;&lt;/code&gt; 从 &lt;code&gt;V1&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;#incident&quot;&gt;incident&lt;/a&gt;&lt;/code&gt; 于 &lt;code&gt;V2&lt;/code&gt; 。返回 &lt;code&gt;E&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9f8f0e4ece533d195d622a71e998720d95b7462c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;add_group_member/3, add_group_member/4&lt;/code&gt;, and &lt;code&gt;add_group_member/5&lt;/code&gt; each adds a user to a group. If the group does not exist, it is created and the user is added to the group. Upon successful operation, this function returns &lt;code&gt;true&lt;/code&gt;. When &lt;code&gt;add_group_members/3&lt;/code&gt; is called, options &lt;code&gt;Port&lt;/code&gt; and &lt;code&gt;Dir&lt;/code&gt; are mandatory.</source>
          <target state="translated">&lt;code&gt;add_group_member/3, add_group_member/4&lt;/code&gt; 和 &lt;code&gt;add_group_member/5&lt;/code&gt; 分别将用户添加到组中。如果该组不存在，则会创建该组并将用户添加到该组。操作成功后，此函数返回 &lt;code&gt;true&lt;/code&gt; 。当 &lt;code&gt;add_group_members/3&lt;/code&gt; 被调用时，选择 &lt;code&gt;Port&lt;/code&gt; 和 &lt;code&gt;Dir&lt;/code&gt; 是强制性的。</target>
        </trans-unit>
        <trans-unit id="308570fc650deac37e209d4ae7a7f26b09b0e8ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;add_release/3&lt;/code&gt; assumes that all subdirectories of the library directory returned by &lt;code&gt;code:lib_dir()&lt;/code&gt; contain applications; the effect is that of reading all applications' BEAM files.</source>
          <target state="translated">&lt;code&gt;add_release/3&lt;/code&gt; 假定图书馆目录的所有子目录返回由 &lt;code&gt;code:lib_dir()&lt;/code&gt; 包含应用程序; 效果是读取所有应用程序的BEAM文件。</target>
        </trans-unit>
        <trans-unit id="fdd6583035bdd4a5eac07667a90ffcfda05e87c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;add_user/2, add_user/5&lt;/code&gt;, and &lt;code&gt;add_user/6&lt;/code&gt; each adds a user to the user database. If the operation is successful, this function returns &lt;code&gt;true&lt;/code&gt;. If an error occurs, &lt;code&gt;{error,Reason}&lt;/code&gt; is returned. When &lt;code&gt;add_user/2&lt;/code&gt; is called, options &lt;code&gt;Password&lt;/code&gt;, &lt;code&gt;UserData&lt;/code&gt;, &lt;code&gt;Port&lt;/code&gt;, and &lt;code&gt;Dir&lt;/code&gt; are mandatory.</source>
          <target state="translated">&lt;code&gt;add_user/2, add_user/5&lt;/code&gt; 和 &lt;code&gt;add_user/6&lt;/code&gt; 各自将用户添加到用户数据库。如果操作成功，则此函数返回 &lt;code&gt;true&lt;/code&gt; 。如果发生 &lt;code&gt;{error,Reason}&lt;/code&gt; 则返回{error，Reason}。当 &lt;code&gt;add_user/2&lt;/code&gt; 被调用时，选择 &lt;code&gt;Password&lt;/code&gt; ， &lt;code&gt;UserData&lt;/code&gt; ， &lt;code&gt;Port&lt;/code&gt; 和 &lt;code&gt;Dir&lt;/code&gt; 是强制性的。</target>
        </trans-unit>
        <trans-unit id="d2ec99872166f08f95ed1e017a3afbe33be8d472" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;add_vertex(G,&amp;nbsp;V)&lt;/code&gt; is equivalent to &lt;code&gt;add_vertex(G,&amp;nbsp;V,&amp;nbsp;[])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;add_vertex(G,&amp;nbsp;V)&lt;/code&gt; 等效于 &lt;code&gt;add_vertex(G,&amp;nbsp;V,&amp;nbsp;[])&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dfe09666e83bbac0e7cc8dda7e715e28c12cf23f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;add_vertex/1&lt;/code&gt; creates a vertex using the empty list as label, and returns the created vertex. The created vertex is represented by term &lt;code&gt;['$v'&amp;nbsp;|&amp;nbsp;N]&lt;/code&gt;, where &lt;code&gt;N&lt;/code&gt; is an integer &amp;gt;= 0.</source>
          <target state="translated">&lt;code&gt;add_vertex/1&lt;/code&gt; 使用空列表作为标签创建一个顶点，并返回创建的顶点。创建的顶点由术语 &lt;code&gt;['$v'&amp;nbsp;|&amp;nbsp;N]&lt;/code&gt; ，其中 &lt;code&gt;N&lt;/code&gt; 是&amp;gt; = 0的整数。</target>
        </trans-unit>
        <trans-unit id="c3656692fbaf0860268c5e0ce6f05c82ca2871b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;add_vertex/3&lt;/code&gt; creates (or modifies) vertex &lt;code&gt;V&lt;/code&gt; of digraph &lt;code&gt;G&lt;/code&gt;, using &lt;code&gt;Label&lt;/code&gt; as the (new) &lt;code&gt;&lt;a href=&quot;#label&quot;&gt;label&lt;/a&gt;&lt;/code&gt; of the vertex. Returns &lt;code&gt;V&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;add_vertex/3&lt;/code&gt; 使用 &lt;code&gt;Label&lt;/code&gt; 作为顶点的（新） &lt;code&gt;&lt;a href=&quot;#label&quot;&gt;label&lt;/a&gt;&lt;/code&gt; 来创建（或修改）有向图 &lt;code&gt;G&lt;/code&gt; 的顶点 &lt;code&gt;V&lt;/code&gt; 。返回 &lt;code&gt;V&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="80632824b7883f4a1c74ee9b61dead483f3d0ed7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;addr&lt;/code&gt; is the 32-bit IP address of &lt;code&gt;host&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;addr&lt;/code&gt; 是 &lt;code&gt;host&lt;/code&gt; 的32位IP地址。</target>
        </trans-unit>
        <trans-unit id="9b87e1985b177cc9187727ee7c46851207be8ebc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;addr&lt;/code&gt; is the 32-bit IP address of the local host.</source>
          <target state="translated">&lt;code&gt;addr&lt;/code&gt; 是本地主机的32位IP地址。</target>
        </trans-unit>
        <trans-unit id="0c836ff71ba1f47fd39e9623dfc614ddc05108b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;addr&lt;/code&gt; is the 32-bit IP address of the remote host.</source>
          <target state="translated">&lt;code&gt;addr&lt;/code&gt; 是远程主机的32位IP地址。</target>
        </trans-unit>
        <trans-unit id="a845bd05890619221ae5e8a0565f6d4a468d539b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;address/0&lt;/code&gt; is called in order to get the &lt;code&gt;Address&lt;/code&gt; part of the &lt;code&gt;&lt;a href=&quot;#listen&quot;&gt;listen/2&lt;/a&gt;&lt;/code&gt; function without creating a listen socket. All fields except &lt;code&gt;address&lt;/code&gt; have to be set in the returned record</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="699d2abaabfbb891035645ffeaa860104a2bae0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;adjust&lt;/code&gt; is the adjustment.</source>
          <target state="translated">&lt;code&gt;adjust&lt;/code&gt; 就是调整。</target>
        </trans-unit>
        <trans-unit id="f31bbdb077d23b30febc8c0d4f51fda2dc3cd1b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;adr&lt;/code&gt; is local interface to bind to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46c1782dc4a254a0e32ee14037fd4fce1995202d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;adr&lt;/code&gt; is the 32-bit IP address of the remote host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34a1320a67660e060d22139d7d8a87305e9f7a33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;advise/4&lt;/code&gt; can be used to announce an intention to access file data in a specific pattern in the future, thus allowing the operating system to perform appropriate optimizations.</source>
          <target state="translated">&lt;code&gt;advise/4&lt;/code&gt; 可用于宣布将来以特定模式访问文件数据的意图，从而使操作系统能够执行适当的优化。</target>
        </trans-unit>
        <trans-unit id="7afecc1566f50ee3ca0ab54ffb403b65ddf62d6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;af&lt;/code&gt; (a fit)</source>
          <target state="translated">&lt;code&gt;af&lt;/code&gt; （适合）</target>
        </trans-unit>
        <trans-unit id="c3e122732fccd7058e1f787f0962d549d6b90ea7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ageffcaobf&lt;/code&gt; (age order first fit carrier address order best fit)</source>
          <target state="translated">&lt;code&gt;ageffcaobf&lt;/code&gt; （年龄顺序最适合承运人地址顺序最适合）</target>
        </trans-unit>
        <trans-unit id="cd0cb8c2759f83ac86614295146be45f26220600" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ageffcaoff&lt;/code&gt; (age order first fit carrier address order first fit)</source>
          <target state="translated">&lt;code&gt;ageffcaoff&lt;/code&gt; （年龄顺序优先适合承运人地址顺序优先适合）</target>
        </trans-unit>
        <trans-unit id="b6ab35af9ae11e26a3b715cd4c3eee87ea061bb4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ageffcbf&lt;/code&gt; (age order first fit carrier best fit)</source>
          <target state="translated">&lt;code&gt;ageffcbf&lt;/code&gt; （最适合年龄的订单）</target>
        </trans-unit>
        <trans-unit id="23de4c452f541d98707bd07e4cfbb7d5d4d16c28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;agent.conf&lt;/code&gt;: see &lt;code&gt;&lt;a href=&quot;#agent_information&quot;&gt;Agent Information&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;agent.conf&lt;/code&gt; ：请参阅 &lt;code&gt;&lt;a href=&quot;#agent_information&quot;&gt;Agent Information&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8ff47ce1780c480f2faaa98dfc2c6486b2589cd7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;alarm_handler(3)&lt;/code&gt;, &lt;code&gt;os_mon(3)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;alarm_handler(3)&lt;/code&gt; ， &lt;code&gt;os_mon(3)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8a84641b8fd6385c030bd6d3537dbcab356b1105" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;alive&lt;/code&gt; is the alivename of the node.</source>
          <target state="translated">&lt;code&gt;alive&lt;/code&gt; 是节点的alivename。</target>
        </trans-unit>
        <trans-unit id="f79edcb1662e15c5611ff0fbb2208fbc936b2d69" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;alive&lt;/code&gt; is the alivename of the remote node.</source>
          <target state="translated">&lt;code&gt;alive&lt;/code&gt; 是远程节点的alivename。</target>
        </trans-unit>
        <trans-unit id="093965dc89e02aa9accca4f967a1fef9354be4ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;alive&lt;/code&gt; is the name of the node to unregister, that is, the first component of the node name, without &lt;code&gt;@hostname&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;alive&lt;/code&gt; 是要注销的节点的名称，即节点名称的第一部分，不带 &lt;code&gt;@hostname&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b8a0984d3f52dfd8e9a64abbcc05a017870ce387" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;all (0)&lt;/code&gt; - Starts a new &lt;code&gt;Viewer&lt;/code&gt; with the &lt;code&gt;Collector Filter&lt;/code&gt; as active filter. It will cause all events in the collector to be viewed.</source>
          <target state="translated">&lt;code&gt;all (0)&lt;/code&gt; - 使用 &lt;code&gt;Collector Filter&lt;/code&gt; 作为活动过滤 &lt;code&gt;Viewer&lt;/code&gt; 启动新的查看器。这将导致查看收集器中的所有事件。</target>
        </trans-unit>
        <trans-unit id="9d2afce67f341c097c5a287163fbb70f92d80119" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;all&lt;/code&gt; - &lt;code&gt;erlang:nodes()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;all&lt;/code&gt; - &lt;code&gt;erlang:nodes()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="88d72784a763c7cf3461bef60775be585c6a51d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;all&lt;/code&gt; has the same arguments as &lt;code&gt;any&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;all&lt;/code&gt; 参数都与 &lt;code&gt;any&lt;/code&gt; 参数相同：</target>
        </trans-unit>
        <trans-unit id="0d3b15afd2f020d868a11605a2aace698272fc93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;all&lt;/code&gt;. Returns a list of all local system information. Each element is a &lt;code&gt;{InfoKey, InfoVal}&lt;/code&gt; tuple.</source>
          <target state="translated">&lt;code&gt;all&lt;/code&gt; 。返回所有本地系统信息的列表。每个元素都是一个 &lt;code&gt;{InfoKey, InfoVal}&lt;/code&gt; 元组。</target>
        </trans-unit>
        <trans-unit id="e5120726b82e227b3d64104d915e704131f8333b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;all&lt;/code&gt;. Returns a list of all local table information. Each element is a &lt;code&gt;{InfoKey, ItemVal}&lt;/code&gt; tuple.</source>
          <target state="translated">&lt;code&gt;all&lt;/code&gt; 。返回所有本地表信息的列表。每个元素都是一个 &lt;code&gt;{InfoKey, ItemVal}&lt;/code&gt; 元组。</target>
        </trans-unit>
        <trans-unit id="97512066008b8088626fc161f01045faad633407" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;allocate/3&lt;/code&gt; can be used to preallocate space for a file.</source>
          <target state="translated">&lt;code&gt;allocate/3&lt;/code&gt; 可用于为文件预分配空间。</target>
        </trans-unit>
        <trans-unit id="41666bf49b92f45df37f91724cb8f4bdd3d83fd2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;allocated&lt;/code&gt; and &lt;code&gt;freed&lt;/code&gt; are initialized to contain information about the fix-allocator used to allocate &lt;code&gt;ETERM&lt;/code&gt; components.</source>
          <target state="translated">&lt;code&gt;allocated&lt;/code&gt; 初始化被分配和 &lt;code&gt;freed&lt;/code&gt; ，以包含有关用于分配 &lt;code&gt;ETERM&lt;/code&gt; 组件的修订分配器的信息。</target>
        </trans-unit>
        <trans-unit id="81e1b5bb6f005718b97cdcef18327ce1a6e6497b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;allocated&lt;/code&gt; is the number of blocks currently allocated to &lt;code&gt;ETERM&lt;/code&gt; objects.</source>
          <target state="translated">&lt;code&gt;allocated&lt;/code&gt; 是当前分配给 &lt;code&gt;ETERM&lt;/code&gt; 对象的块数。</target>
        </trans-unit>
        <trans-unit id="12a3f3a12999ecd68f3a41d6438ae747b45cc2a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;already_exists&lt;/code&gt;. Schema option to be activated is already on.</source>
          <target state="translated">&lt;code&gt;already_exists&lt;/code&gt; 。要激活的模式选项已经打开。</target>
        </trans-unit>
        <trans-unit id="e09c32739412caf3bb45902d7c7c54f88a8121e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;any&lt;/code&gt; takes a predicate &lt;code&gt;P&lt;/code&gt; of one argument and a list of terms:</source>
          <target state="translated">&lt;code&gt;any&lt;/code&gt; 一个带有一个参数和一个条件列表的谓词 &lt;code&gt;P&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="c04a1d0a8b42c3f884cc4061d4be2169366adfa0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aobf&lt;/code&gt; (address order best fit)</source>
          <target state="translated">&lt;code&gt;aobf&lt;/code&gt; （最适合地址顺序）</target>
        </trans-unit>
        <trans-unit id="8e3886f8937bc796389366681b1568f292057745" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aoff&lt;/code&gt; (address order first fit)</source>
          <target state="translated">&lt;code&gt;aoff&lt;/code&gt; （地址顺序优先）</target>
        </trans-unit>
        <trans-unit id="1c1a2a991912818f34517a6d59e8ac8bf23861a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aoffcaobf&lt;/code&gt; (address order first fit carrier address order best fit)</source>
          <target state="translated">&lt;code&gt;aoffcaobf&lt;/code&gt; （地址顺序最适合运营商地址顺序最适合）</target>
        </trans-unit>
        <trans-unit id="d36eb867ec84d005b2b36939491b867b1a074b86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aoffcbf&lt;/code&gt; (address order first fit carrier best fit)</source>
          <target state="translated">&lt;code&gt;aoffcbf&lt;/code&gt; （地址顺序最合适的承运人最合适）</target>
        </trans-unit>
        <trans-unit id="2346e55f01b0a576c1d4c1c0db448da3cc8b60e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;app(4)&lt;/code&gt; manual page in Kernel</source>
          <target state="translated">&lt;code&gt;app(4)&lt;/code&gt; 内核中的app（4）手册页</target>
        </trans-unit>
        <trans-unit id="33877b32d205ddb1b7629894b405b3964320c267" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;app(4)&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;appup&quot;&gt;appup(4)&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;rel&quot;&gt;rel(4)&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;release_handler&quot;&gt;release_handler(3)&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;systools&quot;&gt;systools(3)&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;app(4)&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;appup&quot;&gt;appup(4)&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;rel&quot;&gt;rel(4)&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;release_handler&quot;&gt;release_handler(3)&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;systools&quot;&gt;systools(3)&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ff621ce736ff1d127c1f08d97a3f6143ea2fd097" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;app(4)&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;appup&quot;&gt;appup(4)&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;erl(1)&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;rel&quot;&gt;rel(4)&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;release_handler&quot;&gt;release_handler(3)&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;relup&quot;&gt;relup(4)&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;script&quot;&gt;script(4)&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;app(4)&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;appup&quot;&gt;appup(4)&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;erl(1)&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;rel&quot;&gt;rel(4)&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;release_handler&quot;&gt;release_handler(3)&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;relup&quot;&gt;relup(4)&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;script&quot;&gt;script(4)&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ff8e1c38283104e4739a04e604ae9ffe2a9d5475" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;append(QH1,&amp;nbsp;QH2)&lt;/code&gt; is equivalent to &lt;code&gt;append([QH1,&amp;nbsp;QH2])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;append(QH1,&amp;nbsp;QH2)&lt;/code&gt; 等效于 &lt;code&gt;append([QH1,&amp;nbsp;QH2])&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="99af6c4c16c5603f3b5358b847dfe0ee6145c1bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;application(3)&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;relup&quot;&gt;relup(4)&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;systools&quot;&gt;systools(3)&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;application(3)&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;relup&quot;&gt;relup(4)&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;systools&quot;&gt;systools(3)&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ee035bbbbb046cffe841b862f3e718ba886d5d71" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;application(3)&lt;/code&gt;, &lt;code&gt;dets(3)&lt;/code&gt;, &lt;code&gt;disk_log(3)&lt;/code&gt;, &lt;code&gt;ets(3)&lt;/code&gt;, &lt;code&gt;mnesia_registry(3)&lt;/code&gt;, &lt;code&gt;qlc(3)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;application(3)&lt;/code&gt; ， &lt;code&gt;dets(3)&lt;/code&gt; ， &lt;code&gt;disk_log(3)&lt;/code&gt; ， &lt;code&gt;ets(3)&lt;/code&gt; ， &lt;code&gt;mnesia_registry(3)&lt;/code&gt; ， &lt;code&gt;qlc(3)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b5e0a257fc769705d9cc09d4843a08142ab8f99d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;application:start(Application)&lt;/code&gt; is the same as calling &lt;code&gt;application:start(Application, temporary)&lt;/code&gt;. The type can also be &lt;code&gt;permanent&lt;/code&gt; or &lt;code&gt;transient&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;application:start(Application)&lt;/code&gt; 与调用 &lt;code&gt;application:start(Application, temporary)&lt;/code&gt; 。该类型也可以是 &lt;code&gt;permanent&lt;/code&gt; 或 &lt;code&gt;transient&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="b67edaacaf648cc6cc9a6d897e31e09389b2df1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;application:start(mnesia)&lt;/code&gt; can also be used.</source>
          <target state="translated">&lt;code&gt;application:start(mnesia)&lt;/code&gt; 也可以使用。</target>
        </trans-unit>
        <trans-unit id="29d1b7a8c27256b457dce1b3bad8e849c11d21cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;application:stop(mnesia)&lt;/code&gt; can also be used.</source>
          <target state="translated">&lt;code&gt;application:stop(mnesia)&lt;/code&gt; 也可以使用。</target>
        </trans-unit>
        <trans-unit id="10da2c0c84c016a1b85a0996d30c8e11ab967b5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;application&lt;/code&gt;, an empty list if the module does not belong to any application, otherwise a list of the application name;</source>
          <target state="translated">&lt;code&gt;application&lt;/code&gt; ，如果模块不属于任何应用程序，则为空列表，否则为应用程序名称的列表；</target>
        </trans-unit>
        <trans-unit id="fe02e9a6876c897082028610a15994bce0a292ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;applications&lt;/code&gt; - All applications that must be started before this application is started. &lt;code&gt;systools&lt;/code&gt; uses this list to generate correct boot scripts. Defaults to &lt;code&gt;[]&lt;/code&gt;. Notice that all applications have dependencies to at least Kernel and STDLIB.</source>
          <target state="translated">&lt;code&gt;applications&lt;/code&gt; -启动此应用程序之前必须启动的所有应用程序。 &lt;code&gt;systools&lt;/code&gt; 使用此列表来生成正确的启动脚本。默认为 &lt;code&gt;[]&lt;/code&gt; 。请注意，所有应用程序至少都依赖于内核和STDLIB。</target>
        </trans-unit>
        <trans-unit id="76b082504e28452bfce3331d887c3a70c2f2f89c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;apply(M, F, A)&lt;/code&gt; must return a list of nodes.</source>
          <target state="translated">&lt;code&gt;apply(M, F, A)&lt;/code&gt; 必须返回节点列表。</target>
        </trans-unit>
        <trans-unit id="8cd751c794ca79775ae24d2dfc9d496c92f7760b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;apply/3&lt;/code&gt; must look up the code for the function to execute in a hash table. It is therefore always slower than a direct call or a fun call.</source>
          <target state="translated">&lt;code&gt;apply/3&lt;/code&gt; 必须在该函数中查找要在哈希表中执行的代码。因此，它总是比直接呼叫或有趣呼叫慢。</target>
        </trans-unit>
        <trans-unit id="ae6d24752d6fc9146e5c784eb3fee2f7efa454a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;appup(4)&lt;/code&gt; manual page in SASL</source>
          <target state="translated">&lt;code&gt;appup(4)&lt;/code&gt; SASL中的appup（4）手册页</target>
        </trans-unit>
        <trans-unit id="452b708022856c63df251c357fb144407fbbbcf4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;argbuf&lt;/code&gt; is a pointer to a buffer with an encoded Erlang list, without a version magic number, containing the arguments to be passed to the function.</source>
          <target state="translated">&lt;code&gt;argbuf&lt;/code&gt; 是指向带有已编码Erlang列表的缓冲区的指针，该列表没有版本魔术数，其中包含要传递给函数的参数。</target>
        </trans-unit>
        <trans-unit id="69e4b05d2799b12c1213f74c3f1fee1d1dadd624" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;argbuflen&lt;/code&gt; is the length of the buffer containing the encoded Erlang list.</source>
          <target state="translated">&lt;code&gt;argbuflen&lt;/code&gt; 是包含编码的Erlang列表的缓冲区的长度。</target>
        </trans-unit>
        <trans-unit id="c88058fb856fee3f23186a49ad08ec45b32134a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;args&lt;/code&gt; is a list of the arguments used by the control sequence, or an empty list if the control sequence does not take any arguments.</source>
          <target state="translated">&lt;code&gt;args&lt;/code&gt; 是控制序列使用的参数的列表，如果控制序列不带任何参数，则为空列表。</target>
        </trans-unit>
        <trans-unit id="ae238075082754126f87767b4a55847888febf8d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;args&lt;/code&gt; is an Erlang list, containing the arguments to be passed to the function.</source>
          <target state="translated">&lt;code&gt;args&lt;/code&gt; 是一个Erlang列表，其中包含要传递给函数的参数。</target>
        </trans-unit>
        <trans-unit id="c84b082d7993b958953e81c49576799ca90e5562" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;arity&lt;/code&gt;. Returns the arity of records in the table as specified in the schema.</source>
          <target state="translated">&lt;code&gt;arity&lt;/code&gt; 。返回模式中指定的表中的记录的Arity。</target>
        </trans-unit>
        <trans-unit id="ad562cc01c455bf87c89d7be370aa5f77e08a499" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;array&lt;/code&gt; is an array of ETERM* objects.</source>
          <target state="translated">&lt;code&gt;array&lt;/code&gt; 是ETERM *对象的数组。</target>
        </trans-unit>
        <trans-unit id="ef69e9b959914df8490c32f8a040f98d0e9915b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;array&lt;/code&gt; is an array of Erlang terms.</source>
          <target state="translated">&lt;code&gt;array&lt;/code&gt; 是Erlang术语的数组。</target>
        </trans-unit>
        <trans-unit id="801e399b2373cb64af1a6eb34f634da9351c826b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;arrsize&lt;/code&gt; is the number of elements in &lt;code&gt;array&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;arrsize&lt;/code&gt; 是 &lt;code&gt;array&lt;/code&gt; 中元素的数量。</target>
        </trans-unit>
        <trans-unit id="7dfaa3306dd3215bd527ea3b5c3ae28a064d66a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;asn1&lt;/code&gt; - ASN.1 BER</source>
          <target state="translated">&lt;code&gt;asn1&lt;/code&gt; -ASN.1 BER</target>
        </trans-unit>
        <trans-unit id="19ce5393e1baf8f5daf548c839d26e7fcbf42a55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assertEqual&lt;/code&gt; is more suitable than &lt;code&gt;assertMatch&lt;/code&gt; when the left-hand side is a computed value rather than a simple pattern, and gives more details than &lt;code&gt;?assert(Expect =:= Expr)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;assertEqual&lt;/code&gt; 当左侧是计算值而不是简单模式时，assertEqual比 &lt;code&gt;assertMatch&lt;/code&gt; 更合适，并且比 &lt;code&gt;?assert(Expect =:= Expr)&lt;/code&gt; 给出更多细节。</target>
        </trans-unit>
        <trans-unit id="86ebca600c491611d59fb81bbc64178a4240b3f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assoc_id = 0&lt;/code&gt; (default) indicates the whole endpoint.</source>
          <target state="translated">&lt;code&gt;assoc_id = 0&lt;/code&gt; （默认值）指示整个端点。</target>
        </trans-unit>
        <trans-unit id="47d49bdd1ccd72b394fa212477403df138818b65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assoc_id = 0&lt;/code&gt; (default) indicates the whole endpoint. See &lt;code&gt;&lt;a href=&quot;http://tools.ietf.org/html/draft-ietf-tsvwg-sctpsocket-13&quot;&gt;Sockets API Extensions for SCTP&lt;/a&gt;&lt;/code&gt; for the discussion of their semantics. Rarely used.</source>
          <target state="translated">&lt;code&gt;assoc_id = 0&lt;/code&gt; （默认值）指示整个端点。有关其语义的讨论，请参见 &lt;code&gt;&lt;a href=&quot;http://tools.ietf.org/html/draft-ietf-tsvwg-sctpsocket-13&quot;&gt;Sockets API Extensions for SCTP&lt;/a&gt;&lt;/code&gt; 。很少用。</target>
        </trans-unit>
        <trans-unit id="77a37a0c7eea6ce81d051e4508dbb3d63745df6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assoc_id = 0&lt;/code&gt; (default) indicates the whole endpoint. See &lt;code&gt;&lt;a href=&quot;http://www.rfc-archive.org/getrfc.php?rfc=2960&quot;&gt;RFC 2960&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;http://tools.ietf.org/html/draft-ietf-tsvwg-sctpsocket-13&quot;&gt;Sockets API Extensions for SCTP&lt;/a&gt;&lt;/code&gt; for the exact semantics of the field values.</source>
          <target state="translated">&lt;code&gt;assoc_id = 0&lt;/code&gt; （默认值）指示整个端点。有关字段值的确切语义，请参见 &lt;code&gt;&lt;a href=&quot;http://www.rfc-archive.org/getrfc.php?rfc=2960&quot;&gt;RFC 2960&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;http://tools.ietf.org/html/draft-ietf-tsvwg-sctpsocket-13&quot;&gt;Sockets API Extensions for SCTP&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="548784c9ecca55c0e2f953786b10d16508a546dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;at_dep&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;at_dep&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="e2b407a1b20fb27935afd6e6402d358e469774cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;atom()&lt;/code&gt; - Name of the Erlang module implementing the subsystem using the &lt;code&gt;&lt;a href=&quot;ssh_server_channel&quot;&gt;ssh_server_channel&lt;/a&gt;&lt;/code&gt; (replaces ssh_daemon_channel) behaviour.</source>
          <target state="translated">&lt;code&gt;atom()&lt;/code&gt; -使用 &lt;code&gt;&lt;a href=&quot;ssh_server_channel&quot;&gt;ssh_server_channel&lt;/a&gt;&lt;/code&gt; （代替ssh_daemon_channel）行为实现子系统的Erlang模块的名称。</target>
        </trans-unit>
        <trans-unit id="9f0910ef212626435d10caf31c55cc021319b923" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;atom&lt;/code&gt;&lt;code&gt;char&lt;/code&gt;&lt;code&gt;comment&lt;/code&gt;&lt;code&gt;eof_marker&lt;/code&gt;&lt;code&gt;error_marker&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;atom&lt;/code&gt;&lt;code&gt;char&lt;/code&gt;&lt;code&gt;comment&lt;/code&gt;&lt;code&gt;eof_marker&lt;/code&gt;&lt;code&gt;error_marker&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bb28b98225e6725d1affc9694f0217b20bf6bea7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attribute&lt;/code&gt;&lt;code&gt;comment&lt;/code&gt;&lt;code&gt;error_marker&lt;/code&gt;&lt;code&gt;eof_marker&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;attribute&lt;/code&gt;&lt;code&gt;comment&lt;/code&gt;&lt;code&gt;error_marker&lt;/code&gt;&lt;code&gt;eof_marker&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e130d8e013ac7037c4959d9a5f7ffcfc196ab056" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attributes&lt;/code&gt;. Returns the table attribute names that are specified in the schema.</source>
          <target state="translated">&lt;code&gt;attributes&lt;/code&gt; 。返回在架构中指定的表属性名称。</target>
        </trans-unit>
        <trans-unit id="3b3596ead5d9a3e64e7012a2a7b63056949098c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attributes&lt;/code&gt;. The names of the attributes for the records that are inserted in the table.</source>
          <target state="translated">&lt;code&gt;attributes&lt;/code&gt; 。表中插入的记录的属性名称。</target>
        </trans-unit>
        <trans-unit id="2d6b20564258d711f3eebb7f67b1840b8c63c6f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;auth:cookie/0&lt;/code&gt; (use erlang:get_cookie/0 instead)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eddc782a3420e83d6b73d6fa983e470ecb4eeda1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;auth:cookie/1&lt;/code&gt; (use erlang:set_cookie/2 instead)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7eea61e96cdb809909c733013e910b06ccb0ef7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;auth:is_auth/1&lt;/code&gt; (use net_adm:ping/1 instead)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa7445dde2948df2e7f50124e66a5c5279f60b1b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;auth:node_cookie/_&lt;/code&gt; (use erlang:set_cookie/2 and net_adm:ping/1 instead)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c86778ee7c43bedb81a6ab931654f75426d16ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;auto&lt;/code&gt; - The manager will autonomously send response (acknowledgment&amp;gt; to inform-request messages.</source>
          <target state="translated">&lt;code&gt;auto&lt;/code&gt; -管理器将自动发送响应（确认&amp;gt;以通知请求消息）。</target>
        </trans-unit>
        <trans-unit id="70f7fd21bd95427295d93939701fb17fb5970164" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;auto_repair&lt;/code&gt;. Returns &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; to indicate if Mnesia is configured to start the auto-repair facility on corrupted disc files.</source>
          <target state="translated">&lt;code&gt;auto_repair&lt;/code&gt; 。返回 &lt;code&gt;true&lt;/code&gt; 或 &lt;code&gt;false&lt;/code&gt; 表示是否将Mnesia配置为在损坏的光盘文件上启动自动修复功能。</target>
        </trans-unit>
        <trans-unit id="12902d8c010c7b4a0b48c006e43d19093456b157" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;auto_save&lt;/code&gt; - Defines the dets auto-save frequency.</source>
          <target state="translated">&lt;code&gt;auto_save&lt;/code&gt; -定义dets的自动保存频率。</target>
        </trans-unit>
        <trans-unit id="05106bf7c805000315adcc4cf3ee5a317a26cf9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;b&lt;/code&gt; - Pointer to BIF. Used by instructions that BIFs, such as &lt;code&gt;call_bif&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b3a950152cfe519cc73ffb8b2b757fbbcf16fe4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;backlog&lt;/code&gt; is maximum backlog of pending connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0a50c3b5330a8697925d8971b617a7169d59dca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;backup_module&lt;/code&gt;. Returns the name of the module that is configured to be the backup callback module.</source>
          <target state="translated">&lt;code&gt;backup_module&lt;/code&gt; 。返回配置为备份回调模块的模块的名称。</target>
        </trans-unit>
        <trans-unit id="fb90c9513934f1b3ccb086efcb411f60d1384f16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;badValue | noSuchName | genErr&lt;/code&gt;(SNMPv1)</source>
          <target state="translated">&lt;code&gt;badValue | noSuchName | genErr&lt;/code&gt; （SNMPv1）</target>
        </trans-unit>
        <trans-unit id="4af55acb7f44704d193041128ca3204b65f3131d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bad_index&lt;/code&gt;. Index already exists, or was out of bounds.</source>
          <target state="translated">&lt;code&gt;bad_index&lt;/code&gt; 。索引已存在或超出范围。</target>
        </trans-unit>
        <trans-unit id="9bd7847208820cb3e5fdf7d4e616b5b19e7ae8cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bad_object&lt;/code&gt;, &lt;code&gt;{bad_object, FileName}&lt;/code&gt; - Applying the format function failed for some binary, or the key(s) could not be extracted from some term.</source>
          <target state="translated">&lt;code&gt;bad_object&lt;/code&gt; ， &lt;code&gt;{bad_object, FileName}&lt;/code&gt; -某些二进制文件的格式函数应用失败，或者无法从某些术语中提取密钥。</target>
        </trans-unit>
        <trans-unit id="5674a81ffc13a9d93f73c262d178d85abcf93d77" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bad_type&lt;/code&gt;. Bad type specified in argument.</source>
          <target state="translated">&lt;code&gt;bad_type&lt;/code&gt; 。参数中指定了错误的类型。</target>
        </trans-unit>
        <trans-unit id="9e242d45e0b73cd73950c8c730a1c126ad7d4759" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;badarg&lt;/code&gt;. Bad or invalid argument, possibly bad type.</source>
          <target state="translated">&lt;code&gt;badarg&lt;/code&gt; 。错误或无效的参数，可能是错误的类型。</target>
        </trans-unit>
        <trans-unit id="d96b34618ac7c8372a4d6e8854d04be5a47813b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;badarg&lt;/code&gt;: an argument is of wrong type or has an illegal value,</source>
          <target state="translated">&lt;code&gt;badarg&lt;/code&gt; ：参数的类型错误或值非法，</target>
        </trans-unit>
        <trans-unit id="b57f829716070bd0c69b1a4bc15f6e129e32659a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bag&lt;/code&gt;. A table of this type has zero or more different objects with a given key.</source>
          <target state="translated">&lt;code&gt;bag&lt;/code&gt; 。这种类型的表具有零个或多个具有给定键的不同对象。</target>
        </trans-unit>
        <trans-unit id="b5bc9fef180d5478185c5f11107e1a7205f908fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bchunk/2&lt;/code&gt; returns &lt;code&gt;'$end_of_table'&lt;/code&gt; when all objects are returned, or &lt;code&gt;{error, Reason}&lt;/code&gt; if an error occurs.</source>
          <target state="translated">&lt;code&gt;bchunk/2&lt;/code&gt; 返回所有对象时，bchunk / 2返回 &lt;code&gt;'$end_of_table'&lt;/code&gt; &lt;code&gt;{error, Reason}&lt;/code&gt; 如果发生错误，则返回{error，Reason}。</target>
        </trans-unit>
        <trans-unit id="f0b881e6b811651503573d24bdc82b31cac8ea6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bchunk/2&lt;/code&gt; returns a tuple &lt;code&gt;{Continuation2, Data}&lt;/code&gt;, where &lt;code&gt;Data&lt;/code&gt; is a list of objects. &lt;code&gt;Continuation2&lt;/code&gt; is another continuation that is to be passed on to a subsequent call to &lt;code&gt;bchunk/2&lt;/code&gt;. With a series of calls to &lt;code&gt;bchunk/2&lt;/code&gt;, all table objects can be extracted.</source>
          <target state="translated">&lt;code&gt;bchunk/2&lt;/code&gt; 返回一个元组 &lt;code&gt;{Continuation2, Data}&lt;/code&gt; ，其中 &lt;code&gt;Data&lt;/code&gt; 是对象列表。 &lt;code&gt;Continuation2&lt;/code&gt; 是另一个延续，将继续传递到对 &lt;code&gt;bchunk/2&lt;/code&gt; 的后续调用。通过对 &lt;code&gt;bchunk/2&lt;/code&gt; 的一系列调用，可以提取所有表对象。</target>
        </trans-unit>
        <trans-unit id="56780c73221d90297b10fad663bf8057f6e4f75f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;beam_hot.h&lt;/code&gt;, &lt;code&gt;beam_warm.h&lt;/code&gt;, &lt;code&gt;beam_cold.&lt;/code&gt;h - Implementation of instructions. Included inside the &lt;code&gt;process_main()&lt;/code&gt; function in &lt;code&gt;beam_emu.c&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17286180de0e85fd3a121d782dd8fb920eb0a2ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;beam_lib(3)&lt;/code&gt;, &lt;code&gt;digraph(3)&lt;/code&gt;, &lt;code&gt;digraph_utils(3)&lt;/code&gt;, &lt;code&gt;re(3)&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;xref_chapter&quot;&gt;TOOLS User's Guide&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;beam_lib(3)&lt;/code&gt; ， &lt;code&gt;digraph(3)&lt;/code&gt; ， &lt;code&gt;digraph_utils(3)&lt;/code&gt; ， &lt;code&gt;re(3)&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;xref_chapter&quot;&gt;TOOLS User's Guide&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="48806351aad0a7742944c693a884af8352b2a223" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;beam_lib&lt;/code&gt; searches for &lt;code&gt;.erlang.crypt&lt;/code&gt; in the current directory and then the home directory for the current user. If the file is found and contains a key, &lt;code&gt;beam_lib&lt;/code&gt; implicitly creates a crypto key fun and registers it.</source>
          <target state="translated">&lt;code&gt;beam_lib&lt;/code&gt; 在当前目录中搜索 &lt;code&gt;.erlang.crypt&lt;/code&gt; ，然后在当前用户的主目录中搜索。如果找到文件并包含密钥， &lt;code&gt;beam_lib&lt;/code&gt; 会隐式创建一个加密密钥fun并将其注册。</target>
        </trans-unit>
        <trans-unit id="846e9786216a2853a6491b74dcdfdc96cbbc059c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;beam_opcode.hrl&lt;/code&gt; - Used by &lt;code&gt;beam_asm&lt;/code&gt;. It contains tag definitions used for encoding instruction operands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a6730b706a82aa4093cb104b75c52d84c153171" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;beam_opcodes.c&lt;/code&gt; - Defines static data used by the loader (&lt;code&gt;beam_load.c&lt;/code&gt;). Data about generic instructions, specific instructions (including how to pack their operands), and transformation rules are all part of this file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aabed6f1542007df766316cf7ef6c2b5203ae7a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;beam_opcodes.erl&lt;/code&gt; - Used primarily by &lt;code&gt;beam_asm&lt;/code&gt; and &lt;code&gt;beam_diasm&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1def9bef5913ae1b9522b63cca15a9ef5d008066" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;beam_opcodes.h&lt;/code&gt; - Miscellanous preprocessor definitions, mainly used by &lt;code&gt;beam_load.c&lt;/code&gt; but also by &lt;code&gt;beam_{hot,warm,cold}.h&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e27bb2becb3ed93863bb31e570b5fc8393498ce5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;beam_pred_funcs.h&lt;/code&gt; - Included by &lt;code&gt;beam_load.c&lt;/code&gt;. Contains defines needed to call guard constraints in transformation rules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="427613c2f8d166d0caf3f9a2dcd916a7fe7091e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;beam_tr_funcs.h&lt;/code&gt; - Included by &lt;code&gt;beam_load.c&lt;/code&gt;. Contains defines needed to call a C function to the right of a transformation rule.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7359f360c9f4db5152553296e4b58927d5d35196" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bf&lt;/code&gt; (best fit)</source>
          <target state="translated">&lt;code&gt;bf&lt;/code&gt; （最适合）</target>
        </trans-unit>
        <trans-unit id="8f9b4da975d568447e2e26dc29abe90a4b68b3cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bin/erl&lt;/code&gt; (obtained from &lt;code&gt;erts-5.10.4/bin/erl.src&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;bin/erl&lt;/code&gt; （从 &lt;code&gt;erts-5.10.4/bin/erl.src&lt;/code&gt; 获得）</target>
        </trans-unit>
        <trans-unit id="cb8b254fb956ab3a3b6c9b8239ceaa2c312d5831" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bin/start.boot&lt;/code&gt; (a copy of &lt;code&gt;plain.boot&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;bin/start.boot&lt;/code&gt; （副本 &lt;code&gt;plain.boot&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="91bc86af405ae4d15ef21b7029302ff95b1bed86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bin&lt;/code&gt; - Optional. Any executable that is a product of the application, such as escripts or shell-scripts, should be placed here.</source>
          <target state="translated">&lt;code&gt;bin&lt;/code&gt; -可选。作为应用程序产品的任何可执行文件，例如escripts或shell-scripts，都应放在此处。</target>
        </trans-unit>
        <trans-unit id="25aa1b40cfc688459920a27ed9809c66c8adfe1b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bin&lt;/code&gt; - Top-level Erlang runtime system executables</source>
          <target state="translated">&lt;code&gt;bin&lt;/code&gt; -顶级Erlang运行时系统可执行文件</target>
        </trans-unit>
        <trans-unit id="f9adab0d87be8165335a800dfe74c3b1e4b411a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;binary_to_list(Bin11)&lt;/code&gt; evaluates to &lt;code&gt;[1, 17, 42]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;binary_to_list(Bin11)&lt;/code&gt; 的计算结果为 &lt;code&gt;[1, 17, 42]&lt;/code&gt; 1，17，42 ]。</target>
        </trans-unit>
        <trans-unit id="7f94a75319672458a8993a5a6018445eb933bcfb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;binary_to_list(Bin12)&lt;/code&gt; evaluates to &lt;code&gt;[97, 98, 99]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;binary_to_list(Bin12)&lt;/code&gt; 的计算结果为 &lt;code&gt;[97, 98, 99]&lt;/code&gt; 97，98，99 ]。</target>
        </trans-unit>
        <trans-unit id="9ec897cc6cac414b8d4a65707211e9d38f731a5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;binary_to_list(Bin2)&lt;/code&gt; evaluates to &lt;code&gt;[1, 17, 00, 42]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;binary_to_list(Bin2)&lt;/code&gt; 的值为 &lt;code&gt;[1, 17, 00, 42]&lt;/code&gt; 1，17，00，42 ]。</target>
        </trans-unit>
        <trans-unit id="c8d746c582c845b2e8bdd3c53e79719945a24fd5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;block&lt;/code&gt; - Block the transport. &lt;strong&gt;Optional&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;block&lt;/code&gt; -阻止运输。&lt;strong&gt;可选的&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8e968dd092a4817ba1e07fce1cdafbd392928772" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;block_user/4&lt;/code&gt; and &lt;code&gt;block_user/5&lt;/code&gt; each blocks the user &lt;code&gt;User&lt;/code&gt; from directory &lt;code&gt;Dir&lt;/code&gt; for a specified amount of time.</source>
          <target state="translated">&lt;code&gt;block_user/4&lt;/code&gt; 和 &lt;code&gt;block_user/5&lt;/code&gt; 分别在目录 &lt;code&gt;Dir&lt;/code&gt; 中阻止用户 &lt;code&gt;User&lt;/code&gt; 指定的时间。</target>
        </trans-unit>
        <trans-unit id="c1b720c8577ec8fd5220d4a8ab719326268b9fa1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bptr&lt;/code&gt; is a pointer to a buffer containing data to be converted.</source>
          <target state="translated">&lt;code&gt;bptr&lt;/code&gt; 是指向包含要转换的数据的缓冲区的指针。</target>
        </trans-unit>
        <trans-unit id="36f44964a85f04c8b6fd92e92eb38af4ff7f6f7e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;break&lt;/code&gt; - Attach whenever a process reaches a breakpoint.</source>
          <target state="translated">&lt;code&gt;break&lt;/code&gt; -将每当一个流程到达断点。</target>
        </trans-unit>
        <trans-unit id="e70a93a8806770419d539bbdd5ae7c24fdc883a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;break&lt;/code&gt; - Process execution is stopped, normally at a breakpoint. &lt;code&gt;Info={Module,Line}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;break&lt;/code&gt; -进程执行通常在断点处停止。 &lt;code&gt;Info={Module,Line}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="974f7fe09a42b6e842cb2ad460448861f2988cd4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;brutal_kill&lt;/code&gt; means that the child process is unconditionally terminated using &lt;code&gt;exit(Child, kill)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;brutal_kill&lt;/code&gt; 意味着子进程使用 &lt;code&gt;exit(Child, kill)&lt;/code&gt; 无条件终止。</target>
        </trans-unit>
        <trans-unit id="84a05fdf241e6eb39d9d64cdb875bec6a8355d2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;buf&lt;/code&gt; and &lt;code&gt;len&lt;/code&gt; provide the arguments to the call (the third argument to &lt;code&gt;erlang:port_call/3&lt;/code&gt;). They can be decoded using &lt;code&gt;ei&lt;/code&gt; functions.</source>
          <target state="translated">&lt;code&gt;buf&lt;/code&gt; 和 &lt;code&gt;len&lt;/code&gt; 提供了调用的参数（ &lt;code&gt;erlang:port_call/3&lt;/code&gt; 的第三个参数）。可以使用 &lt;code&gt;ei&lt;/code&gt; 函数对其进行解码。</target>
        </trans-unit>
        <trans-unit id="9592d5baeb6834995af947204ffd16d322a0d8dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;buf&lt;/code&gt; is a pointer to the buffer where the binary data is or will be.</source>
          <target state="translated">&lt;code&gt;buf&lt;/code&gt; 是指向缓冲区的指针，该缓冲区是二进制数据所在的位置或将要存放的位置。</target>
        </trans-unit>
        <trans-unit id="020f366ef6e7fa93ca2d78487b1d29ac830fae17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;buf&lt;/code&gt; is the buffer containing the term in binary format.</source>
          <target state="translated">&lt;code&gt;buf&lt;/code&gt; 是包含二进制格式术语的缓冲区。</target>
        </trans-unit>
        <trans-unit id="9358fda02a3a522860f468e50b529164546407cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;buf&lt;/code&gt; is the buffer.</source>
          <target state="translated">&lt;code&gt;buf&lt;/code&gt; 是缓冲区。</target>
        </trans-unit>
        <trans-unit id="586bddb53ea2a53f6e7445b7fef784195c640e49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;buf&lt;/code&gt; points to a buffer of length &lt;code&gt;*len&lt;/code&gt; where the read data should be placed. On success, this callback should update &lt;code&gt;*len&lt;/code&gt; to the amount of bytes successfully read on the socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91989446ab3fcfb17a358cc47a306a6845e22013" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bufp1&lt;/code&gt; is a buffer containing an encoded Erlang term term1.</source>
          <target state="translated">&lt;code&gt;bufp1&lt;/code&gt; 是包含编码的Erlang术语term1的缓冲区。</target>
        </trans-unit>
        <trans-unit id="9c2a34acb00a733fae7ddd41aef79e0f36fd2fad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bufp2&lt;/code&gt; is a buffer containing an encoded Erlang term term2.</source>
          <target state="translated">&lt;code&gt;bufp2&lt;/code&gt; 是包含编码的Erlang术语term2的缓冲区。</target>
        </trans-unit>
        <trans-unit id="b514f398a673f0c3431c37ce1fb7770505f66066" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bufp&lt;/code&gt; is a buffer large enough to hold the expected message.</source>
          <target state="translated">&lt;code&gt;bufp&lt;/code&gt; 是一个足以容纳预期消息的缓冲区。</target>
        </trans-unit>
        <trans-unit id="7a7a9c6db496d05d90264fc19c723591c92e6bca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bufp&lt;/code&gt; is a pointer to a buffer containing one or more encoded Erlang terms.</source>
          <target state="translated">&lt;code&gt;bufp&lt;/code&gt; 是指向包含一个或多个已编码Erlang项的缓冲区的指针。</target>
        </trans-unit>
        <trans-unit id="8aa554368e3bfa313e84792c87a0f8a742e01733" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bufpp&lt;/code&gt; is a pointer to a pointer to a buffer containing one or more consecutively encoded Erlang terms. Following a successful call to &lt;code&gt;erl_encode_buf()&lt;/code&gt;, &lt;code&gt;bufpp&lt;/code&gt; is updated so that it points to the position for the next encoded term.</source>
          <target state="translated">&lt;code&gt;bufpp&lt;/code&gt; 是指向包含一个或多个连续编码的Erlang项的缓冲区的指针。成功调用 &lt;code&gt;erl_encode_buf()&lt;/code&gt; 之后，将更新 &lt;code&gt;bufpp&lt;/code&gt; ，使其指向下一个编码术语的位置。</target>
        </trans-unit>
        <trans-unit id="4f44057b5d737547a2be6a24c89bb7f43bfb7987" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bufpp&lt;/code&gt; is the address of a buffer pointer. The buffer contains one or more consecutively encoded Erlang terms. Following a successful call to &lt;code&gt;erl_decode_buf()&lt;/code&gt;, &lt;code&gt;bufpp&lt;/code&gt; is updated so that it points to the next encoded term.</source>
          <target state="translated">&lt;code&gt;bufpp&lt;/code&gt; 是缓冲区指针的地址。缓冲区包含一个或多个连续编码的Erlang项。成功调用 &lt;code&gt;erl_decode_buf()&lt;/code&gt; 之后，将更新 &lt;code&gt;bufpp&lt;/code&gt; ，使其指向下一个编码项。</target>
        </trans-unit>
        <trans-unit id="bb000a625bd54e5bdff350e8317e6d7e6df9d728" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bufsize&lt;/code&gt; indicates the size of &lt;code&gt;bufp&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;bufsize&lt;/code&gt; 指示 &lt;code&gt;bufp&lt;/code&gt; 的大小。</target>
        </trans-unit>
        <trans-unit id="b755c56effd11bcf791291be14253f76dff8c89e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;builtins&lt;/code&gt;, whether calls to BIFs are included in the module's data;</source>
          <target state="translated">&lt;code&gt;builtins&lt;/code&gt; ，模块数据中是否包含对BIF的调用；</target>
        </trans-unit>
        <trans-unit id="c0301210a3f69e9e7dbee51658c14c1044ce91d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;builtins&lt;/code&gt;, with initial default value &lt;code&gt;false&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;builtins&lt;/code&gt; 函数，初始默认值为 &lt;code&gt;false&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="3919372d103739aa529efd10f11352ffde571ce2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bytes : integer&lt;/code&gt; :: Size of data returned. Ex. &lt;code&gt;82&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;bytes : integer&lt;/code&gt; ::返回的数据大小。例如 &lt;code&gt;82&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fc288deb34eff3dd05d8920de133e55c4a5b9bc1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;c:c/1&lt;/code&gt; is called to compile the specified module on the remote node. &lt;code&gt;erl_match()&lt;/code&gt; checks that the compilation was successful by testing for the expected &lt;code&gt;ok&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;c:c/1&lt;/code&gt; 调用c：c / 1来编译远程节点上的指定模块。 &lt;code&gt;erl_match()&lt;/code&gt; 通过测试预期的 &lt;code&gt;ok&lt;/code&gt; 来检查编译是否成功。</target>
        </trans-unit>
        <trans-unit id="948dad7d657b8ae0e6a340223bf1bbf5f503f256" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;c&lt;/code&gt; - Any literal term. Equivalent to &lt;code&gt;ainq&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a67e1b4b16be4c24597eb582c0f1cdaaf3154cda" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;c&lt;/code&gt; - Any literal term; that is, immediate literals such as SMALL, and CONS or BOXED pointers to literals. (Can be used where the operand in the generic instruction has one of the types &lt;code&gt;i&lt;/code&gt;, &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;n&lt;/code&gt;, or &lt;code&gt;q&lt;/code&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94dfd35ae9c24c3703a59348eb4cbd1a8470272c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;calendar(3)&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;error_logger&quot;&gt;error_logger(3)&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;io(3)&lt;/code&gt;, &lt;code&gt;io_lib(3)&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;logger&quot;&gt;logger(3)&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;maps(3)&lt;/code&gt;, &lt;code&gt;sasl(6)&lt;/code&gt;, &lt;code&gt;unicode(3)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;calendar(3)&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;error_logger&quot;&gt;error_logger(3)&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;io(3)&lt;/code&gt; ， &lt;code&gt;io_lib(3)&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;logger&quot;&gt;logger(3)&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;maps(3)&lt;/code&gt; ， &lt;code&gt;sasl(6)&lt;/code&gt; ， &lt;code&gt;unicode(3)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="486affaf706794e646c3485ebbef5f32af4f0616" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;calendar:local_time_to_universal_time/1&lt;/code&gt; (use calendar:local_time_to_universal_time_dst/1 instead)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d9fe36a3e680b5ea19a76fae4b2fa4139cc89e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;caller&lt;/code&gt; - for &lt;code&gt;[{'_',[],[{message,{caller}}]}]&lt;/code&gt; (report the calling function)</source>
          <target state="translated">&lt;code&gt;caller&lt;/code&gt; -用于 &lt;code&gt;[{'_',[],[{message,{caller}}]}]&lt;/code&gt; （报告呼叫功能）</target>
        </trans-unit>
        <trans-unit id="9cf793eea4bf1fd73379c6d4492be1f7ee4cfe4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;case&lt;/code&gt; is another construct in Erlang. Recall that the &lt;code&gt;convert_length&lt;/code&gt; function was written as:</source>
          <target state="translated">&lt;code&gt;case&lt;/code&gt; 是Erlang中的另一个构造。回想一下 &lt;code&gt;convert_length&lt;/code&gt; 函数写为：</target>
        </trans-unit>
        <trans-unit id="e90e35739d7c488cb3524f1590bd7334019556b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cbs&lt;/code&gt; is a pointer to a &lt;code&gt;&lt;a href=&quot;#ei_socket_callbacks&quot;&gt;callback structure&lt;/a&gt;&lt;/code&gt; implementing and alternative socket interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c1fa3e2e35ea519f909f00f8d5ca1164c4e557e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cbs_sz&lt;/code&gt; is the size of the structure pointed to by &lt;code&gt;cbs&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbddc7998ac2e4b689116df33702d9e847ccfa7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cdr&lt;/code&gt; - CORBA (GIOP 1.1)</source>
          <target state="translated">&lt;code&gt;cdr&lt;/code&gt; -CORBA（GIOP 1.1）</target>
        </trans-unit>
        <trans-unit id="4245c60051fa28f6c993f4eb8e040393fb293656" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ch3&lt;/code&gt; does not need to do any cleaning up before termination. Thus, no shutdown time is needed, but &lt;code&gt;brutal_kill&lt;/code&gt; is sufficient. &lt;code&gt;error_man&lt;/code&gt; can need some time for the event handlers to clean up, thus the shutdown time is set to 5000 ms (which is the default value).</source>
          <target state="translated">&lt;code&gt;ch3&lt;/code&gt; 无需在终止之前进行任何清理。因此，不需要关机时间，但是 &lt;code&gt;brutal_kill&lt;/code&gt; 就足够了。 &lt;code&gt;error_man&lt;/code&gt; 可能需要一些时间来清理事件处理程序，因此关闭时间设置为5000毫秒（这是默认值）。</target>
        </trans-unit>
        <trans-unit id="da4e6492a6a940b0b8ec65b4d2008b4e92ab6526" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ch3&lt;/code&gt; is the name of the &lt;code&gt;gen_server&lt;/code&gt; and must agree with the name used to start it. &lt;code&gt;alloc&lt;/code&gt; is the actual request.</source>
          <target state="translated">&lt;code&gt;ch3&lt;/code&gt; 是 &lt;code&gt;gen_server&lt;/code&gt; 的名称，必须与用于启动它的名称一致。 &lt;code&gt;alloc&lt;/code&gt; 是实际的请求。</target>
        </trans-unit>
        <trans-unit id="c4d3e6a239f3f0a72fbae0ffce0d02ba9c239e4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ch3&lt;/code&gt; is the name of the &lt;code&gt;gen_server&lt;/code&gt;. &lt;code&gt;{free, Ch}&lt;/code&gt; is the actual request.</source>
          <target state="translated">&lt;code&gt;ch3&lt;/code&gt; 是 &lt;code&gt;gen_server&lt;/code&gt; 的名称。 &lt;code&gt;{free, Ch}&lt;/code&gt; 是实际请求。</target>
        </trans-unit>
        <trans-unit id="637a97c0869f0dca51007ec5f8dd019cbe62121d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ch4:start_link&lt;/code&gt; calls the function &lt;code&gt;proc_lib:start_link&lt;/code&gt;. This function takes a module name, a function name, and an argument list as arguments, spawns, and links to a new process. The new process starts by executing the given function, here &lt;code&gt;ch4:init(Pid)&lt;/code&gt;, where &lt;code&gt;Pid&lt;/code&gt; is the pid (&lt;code&gt;self()&lt;/code&gt;) of the first process, which is the parent process.</source>
          <target state="translated">&lt;code&gt;ch4:start_link&lt;/code&gt; 调用函数 &lt;code&gt;proc_lib:start_link&lt;/code&gt; 。该函数将模块名称，函数名称和参数列表作为参数，产生和链接到新进程。新进程通过执行给定的函数 &lt;code&gt;ch4:init(Pid)&lt;/code&gt; 开始，其中 &lt;code&gt;Pid&lt;/code&gt; 是第一个进程（即父进程 &lt;code&gt;self()&lt;/code&gt; 的pid（self（））。</target>
        </trans-unit>
        <trans-unit id="450040c43153c267bc9a946c817b748e058c6967" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ch_sup:start_link&lt;/code&gt; calls function &lt;code&gt;supervisor:start_link/2&lt;/code&gt;, which spawns and links to a new process, a supervisor.</source>
          <target state="translated">&lt;code&gt;ch_sup:start_link&lt;/code&gt; 调用函数 &lt;code&gt;supervisor:start_link/2&lt;/code&gt; ，它产生并链接到一个新的进程supervisor。</target>
        </trans-unit>
        <trans-unit id="e07f79a4537803dd33d38991ec86dbac443c7e00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;change_table_copy_type(Tab, Node, ToType)&lt;/code&gt; changes the storage type of a table. For example, a RAM table is changed to a &lt;code&gt;disc_table&lt;/code&gt; at the node specified as &lt;code&gt;Node&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;change_table_copy_type(Tab, Node, ToType)&lt;/code&gt; 更改表的存储类型。例如，RAM表在指定为 &lt;code&gt;Node&lt;/code&gt; 的节点上更改为 &lt;code&gt;disc_table&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="166ed2a7f68758ef24b82ee6382f345020f96be9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;check(FileName)&lt;/code&gt; is equivalent to &lt;code&gt;check([FileName], [])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;check(FileName)&lt;/code&gt; 等效于 &lt;code&gt;check([FileName], [])&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="87fdff375b367943a5a921c311557301ab0babbd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;check&lt;/code&gt; is always called by the same process, so &lt;code&gt;put&lt;/code&gt; and &lt;code&gt;get&lt;/code&gt; are possible.</source>
          <target state="translated">&lt;code&gt;check&lt;/code&gt; 总是由同一过程调用，因此可以进行 &lt;code&gt;put&lt;/code&gt; 和 &lt;code&gt;get&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="41d0640805bfcc8da28c3b66b06e58325aec4149" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;checkpoints&lt;/code&gt;. Returns a list of the names of the checkpoints currently active on this node.</source>
          <target state="translated">&lt;code&gt;checkpoints&lt;/code&gt; 。返回此节点上当前活动的检查点名称的列表。</target>
        </trans-unit>
        <trans-unit id="b95bc3b85036835357a490f2507a02039107f20c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;checkpoints&lt;/code&gt;. Returns the names of the currently active checkpoints, which involve this table on this node.</source>
          <target state="translated">&lt;code&gt;checkpoints&lt;/code&gt; 。返回当前活动的检查点的名称，涉及该节点上的该表。</target>
        </trans-unit>
        <trans-unit id="62376e5d841ce4eadcf7894ca3146f0f84dd99a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;checksum&lt;/code&gt; - Defines if the file is checksummed or not.</source>
          <target state="translated">&lt;code&gt;checksum&lt;/code&gt; -定义文件是否校验和。</target>
        </trans-unit>
        <trans-unit id="8af5ef256449de22112f9e1149d05baa4c4e4b9f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;chunk()&lt;/code&gt; returns &lt;code&gt;eof&lt;/code&gt; when the end of the log is reached, or &lt;code&gt;{error, Reason}&lt;/code&gt; if an error occurs. If a wrap log file is missing, a message is output on the error log.</source>
          <target state="translated">&lt;code&gt;chunk()&lt;/code&gt; 到达日志末尾时，chunk（）返回 &lt;code&gt;eof&lt;/code&gt; ；如果发生 &lt;code&gt;{error, Reason}&lt;/code&gt; 则返回{error，Reason}。如果缺少包装日志文件，则会在错误日志上输出一条消息。</target>
        </trans-unit>
        <trans-unit id="9f7b3958ce6e0d433e93aee48cfd7872c6879d58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;chunk()&lt;/code&gt; returns a tuple &lt;code&gt;{Continuation2, Terms, Badbytes}&lt;/code&gt; if the log is opened in read-only mode and the read chunk is corrupt. &lt;code&gt;Badbytes&lt;/code&gt; is the number of bytes in the file found not to be Erlang terms in the chunk. Notice that the log is not repaired. When trying to read chunks from a log opened in read-write mode, tuple &lt;code&gt;{corrupt_log_file, FileName}&lt;/code&gt; is returned if the read chunk is corrupt.</source>
          <target state="translated">&lt;code&gt;chunk()&lt;/code&gt; 如果日志以只读模式打开并且读取的数据块已损坏，则chunk（）将返回一个元组 &lt;code&gt;{Continuation2, Terms, Badbytes}&lt;/code&gt; 。 &lt;code&gt;Badbytes&lt;/code&gt; 是文件中不属于块中Erlang术语的字节数。请注意，该日志未修复。尝试从以读写模式打开的日志中读取数据块时，如果读取的数据块已损坏 &lt;code&gt;{corrupt_log_file, FileName}&lt;/code&gt; 则返回元组{corrupt_log_file，FileName}。</target>
        </trans-unit>
        <trans-unit id="4e8f124c0786dad7795dc48255d2a5526f66a2d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;chunk()&lt;/code&gt; returns a tuple &lt;code&gt;{Continuation2, Terms}&lt;/code&gt;, where &lt;code&gt;Terms&lt;/code&gt; is a list of terms found in the log. &lt;code&gt;Continuation2&lt;/code&gt; is yet another continuation, which must be passed on to any subsequent calls to &lt;code&gt;chunk()&lt;/code&gt;. With a series of calls to &lt;code&gt;chunk()&lt;/code&gt;, all terms from a log can be extracted.</source>
          <target state="translated">&lt;code&gt;chunk()&lt;/code&gt; 返回一个元组 &lt;code&gt;{Continuation2, Terms}&lt;/code&gt; ，其中 &lt;code&gt;Terms&lt;/code&gt; 是在日志中找到的术语列表。 &lt;code&gt;Continuation2&lt;/code&gt; 是另一个延续，必须将其传递给 &lt;code&gt;chunk()&lt;/code&gt; 的任何后续调用。通过对 &lt;code&gt;chunk()&lt;/code&gt; 的一系列调用，可以提取日志中的所有术语。</target>
        </trans-unit>
        <trans-unit id="ded3fda3b82e0ccd56e08c222c189eac20f2fc84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ciphers&lt;/code&gt; (use old string format)</source>
          <target state="translated">&lt;code&gt;ciphers&lt;/code&gt; （使用旧字符串格式）</target>
        </trans-unit>
        <trans-unit id="b770f867791c517d00ec5b11366aa1a2498c5247" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class : string&lt;/code&gt; :: Error reason. Ex. &lt;code&gt;&quot;error&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;class : string&lt;/code&gt; ::错误原因。例如 &lt;code&gt;&quot;error&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0bb984aad855371b26b1a2f3af1bb51acc7b751d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;client_&lt;/code&gt;-prefixed options are used when the distribution initiates a connection to another node. &lt;code&gt;server_&lt;/code&gt;-prefixed options are used when accepting a connection from a remote node.</source>
          <target state="translated">&lt;code&gt;client_&lt;/code&gt; 当分发发起到另一节点的连接-prefixed选项使用。当接受来自远程节点的连接时，将使用 &lt;code&gt;server_&lt;/code&gt; 前缀选项。</target>
        </trans-unit>
        <trans-unit id="753db8f1aebf437e5a6b184af761bd6afff70793" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;closure&lt;/code&gt;, &lt;code&gt;components&lt;/code&gt;, &lt;code&gt;condensation&lt;/code&gt;, &lt;code&gt;domain&lt;/code&gt;, &lt;code&gt;range&lt;/code&gt;, &lt;code&gt;strict&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;closure&lt;/code&gt; ， &lt;code&gt;components&lt;/code&gt; ， &lt;code&gt;condensation&lt;/code&gt; ， &lt;code&gt;domain&lt;/code&gt; ， &lt;code&gt;range&lt;/code&gt; ， &lt;code&gt;strict&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8b877d0edd90635ff602145be40854a914d08981" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cnd&lt;/code&gt; is a pointer to a condition variable to broadcast on.</source>
          <target state="translated">&lt;code&gt;cnd&lt;/code&gt; 是指向要广播的条件变量的指针。</target>
        </trans-unit>
        <trans-unit id="e184f22bd87babddbbb471c5a0861f5744761602" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cnd&lt;/code&gt; is a pointer to a condition variable to destroy.</source>
          <target state="translated">&lt;code&gt;cnd&lt;/code&gt; 是指向要破坏的条件变量的指针。</target>
        </trans-unit>
        <trans-unit id="b732e57aaef8e8081a9cf4e1a000c041ccd968fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cnd&lt;/code&gt; is a pointer to a condition variable to signal on.</source>
          <target state="translated">&lt;code&gt;cnd&lt;/code&gt; 是指向要发出信号的条件变量的指针。</target>
        </trans-unit>
        <trans-unit id="2201e749d7512aceb643478b0c70a66fff6c7656" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cnd&lt;/code&gt; is a pointer to a condition variable to wait on. &lt;code&gt;mtx&lt;/code&gt; is a pointer to a mutex to unlock while waiting.</source>
          <target state="translated">&lt;code&gt;cnd&lt;/code&gt; 是指向要等待的条件变量的指针。 &lt;code&gt;mtx&lt;/code&gt; 是指向在等待时解锁的互斥锁的指针。</target>
        </trans-unit>
        <trans-unit id="5f33e80633efeed0de41cd20b145beba0880de34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cnd&lt;/code&gt; is a pointer to an initialized condition.</source>
          <target state="translated">&lt;code&gt;cnd&lt;/code&gt; 是指向初始化条件的指针。</target>
        </trans-unit>
        <trans-unit id="20f5fb93fff6d34d1700688d7c6c08f4cbc4a948" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;code-model Model&lt;/code&gt; - The code model as given to &lt;code&gt;-mcmodel&lt;/code&gt; option for GCC. Default is &lt;code&gt;unknown&lt;/code&gt;. If the code model is &lt;code&gt;small&lt;/code&gt; (and the word size is 64 bits), &lt;strong&gt;beam_makeops&lt;/strong&gt; will pack operands into the upper 32 bits of the instruction word.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a03e8bb9ae61dc43deaaf3002354103194e5760" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;code:rehash/0&lt;/code&gt; (the code path cache feature has been removed)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00473b126d0a7652ea3254f682ffc5bf58d1f9a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;collisions&lt;/code&gt; indicates how many elements are sharing positions in the registry.</source>
          <target state="translated">&lt;code&gt;collisions&lt;/code&gt; 表明有多少元素正在共享注册表中的位置。</target>
        </trans-unit>
        <trans-unit id="add781ee986781b3ce385d7886b10f9ee188263a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;combine_error&lt;/code&gt;. Table options illegally combined.</source>
          <target state="translated">&lt;code&gt;combine_error&lt;/code&gt; 。表选项非法组合。</target>
        </trans-unit>
        <trans-unit id="7c4e1a52bbe022a8fb6a2c2758fc57367d5661e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;command : integer&lt;/code&gt; :: Command integer. Ex. &lt;code&gt;1&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;command : integer&lt;/code&gt; ::命令整数。例如 &lt;code&gt;1&lt;/code&gt; 个</target>
        </trans-unit>
        <trans-unit id="9152f8b34bf476261276d6aa9b6c95677788059d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;command [parameters]&lt;/code&gt; is executed.</source>
          <target state="translated">&lt;code&gt;command [parameters]&lt;/code&gt; 被执行。</target>
        </trans-unit>
        <trans-unit id="2803cf83c29548794241441d3248a8c8eab2eb02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;command&lt;/code&gt; is an integer, obtained from the call from Erlang (the second argument to &lt;code&gt;erlang:port_call/3&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;command&lt;/code&gt; 是一个整数，可以从Erlang的调用获得（ &lt;code&gt;erlang:port_call/3&lt;/code&gt; 的第二个参数）。</target>
        </trans-unit>
        <trans-unit id="43dafc94528a941655db75f3381463d76dbe825d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;commitFailed | undoFailed | genErr&lt;/code&gt;(SNMPv2)</source>
          <target state="translated">&lt;code&gt;commitFailed | undoFailed | genErr&lt;/code&gt; （SNMPv2）</target>
        </trans-unit>
        <trans-unit id="629a12e24a17f3ddef11586998dd4ec5c3c51f43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;common_reason()&lt;/code&gt; = &lt;code&gt;econn | eclosed | term()&lt;/code&gt; - some explanation of what went wrong</source>
          <target state="translated">&lt;code&gt;common_reason()&lt;/code&gt; = &lt;code&gt;econn | eclosed | term()&lt;/code&gt; -发生问题的一些解释</target>
        </trans-unit>
        <trans-unit id="b63b48b8aaf391f30a8116cb628cde3ab4e343e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;community.conf&lt;/code&gt;: see &lt;code&gt;&lt;a href=&quot;#community&quot;&gt;Communities&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;community.conf&lt;/code&gt; ：请参阅 &lt;code&gt;&lt;a href=&quot;#community&quot;&gt;Communities&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="45a5fc99e43f5b724b30d2b4e7e4f8273e1b7ca1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;community_entry(&quot;all-rights&quot;)&lt;/code&gt; translates to the following call: &lt;code&gt;community_entry(CommunityIndex, CommunityIndex, CommunityIndex, &quot;&quot;, &quot;&quot;)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;community_entry(&quot;all-rights&quot;)&lt;/code&gt; 转换为以下调用： &lt;code&gt;community_entry(CommunityIndex, CommunityIndex, CommunityIndex, &quot;&quot;, &quot;&quot;)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="af49f290ae8123993fe5f818dccec559995abe76" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;community_entry(&quot;public&quot;)&lt;/code&gt; translates to the following call: &lt;code&gt;community_entry(CommunityIndex, CommunityIndex, &quot;initial&quot;, &quot;&quot;, &quot;&quot;)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;community_entry(&quot;public&quot;)&lt;/code&gt; 转换为以下调用： &lt;code&gt;community_entry(CommunityIndex, CommunityIndex, &quot;initial&quot;, &quot;&quot;, &quot;&quot;)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eb25bc344c91ef01ac5c00d3d9049a4cf28d55ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;compact&lt;/code&gt; has a format corresponding to:</source>
          <target state="translated">&lt;code&gt;compact&lt;/code&gt; 具有对应于以下格式：</target>
        </trans-unit>
        <trans-unit id="8af1155a846cd399822873e4f5d820537addcb49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;compress_on_rotate&lt;/code&gt; has no meaning if &lt;code&gt;&lt;a href=&quot;#max_no_bytes&quot;&gt;max_no_bytes&lt;/a&gt;&lt;/code&gt; has the value &lt;code&gt;infinity&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe08b2d80ea20fe5a1d5d0f983bdce680e583294" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;computation_failed&lt;/code&gt;: the computation fails of another reason than &lt;code&gt;low_entropy&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;computation_failed&lt;/code&gt; ：另一个原因，而不是计算失败 &lt;code&gt;low_entropy&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eee140ce407e22cfe49926dc2ef9bf00fd7505e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config(4)&lt;/code&gt; manual page in Kernel</source>
          <target state="translated">&lt;code&gt;config(4)&lt;/code&gt; 内核中的config（4）手册页</target>
        </trans-unit>
        <trans-unit id="26e21c618a893d7c89837a650fffcc4cd8145f7b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;conn_log_mod()&lt;/code&gt; is the name of the &lt;code&gt;Common Test&lt;/code&gt; module implementing the connection protocol, for example, &lt;code&gt;ct_netconfc&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;conn_log_mod()&lt;/code&gt; 是实现连接协议的 &lt;code&gt;Common Test&lt;/code&gt; 模块的名称，例如 &lt;code&gt;ct_netconfc&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1fb163139309bd997116d5508149a3a80552684d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;conn_mod()&lt;/code&gt; is the name of the &lt;code&gt;Common Test&lt;/code&gt; module implementing the connection protocol, that is, &lt;code&gt;ct_telnet&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;conn_mod()&lt;/code&gt; 是实现连接协议的 &lt;code&gt;Common Test&lt;/code&gt; 模块的名称，即 &lt;code&gt;ct_telnet&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="310dcb78a58000d40b19999fd64d7d840f17e923" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;connect/1&lt;/code&gt; loads the driver, opens it, and logs on to the database, returning the Erlang port if successful.</source>
          <target state="translated">&lt;code&gt;connect/1&lt;/code&gt; 加载驱动程序，将其打开，然后登录数据库，如果成功，则返回Erlang端口。</target>
        </trans-unit>
        <trans-unit id="caa42197c0e7896b05b8108667bc65c22464af97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;connected&lt;/code&gt; - &lt;code&gt;erlang:nodes(connected)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;connected&lt;/code&gt; - &lt;code&gt;erlang:nodes(connected)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="242d0128e710936b61ef8cb03a558ca9c6d61b87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;conp&lt;/code&gt; is a pointer to an &lt;code&gt;&lt;a href=&quot;#ErlConnect&quot;&gt;ErlConnect&lt;/a&gt;&lt;/code&gt; struct.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92cd3d4350ce9efed99d6d467dd677d61cb05c12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;conp&lt;/code&gt; is a pointer to an &lt;code&gt;ErlConnect&lt;/code&gt; struct, described as follows:</source>
          <target state="translated">&lt;code&gt;conp&lt;/code&gt; 是指向 &lt;code&gt;ErlConnect&lt;/code&gt; 结构的指针，如下所示：</target>
        </trans-unit>
        <trans-unit id="407ba3561e1cb3e4c0b4b87da7dc3dc9b0ac5071" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;const char *ei_thisnodename(ei_cnode *ec)&lt;/code&gt;&lt;code&gt;const char *ei_thishostname(ei_cnode *ec)&lt;/code&gt;&lt;code&gt;const char *ei_thisalivename(ei_cnode *ec)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;const char *ei_thisnodename(ei_cnode *ec)&lt;/code&gt; &lt;code&gt;const char *ei_thishostname(ei_cnode *ec)&lt;/code&gt; &lt;code&gt;const char *ei_thisalivename(ei_cnode *ec)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1da83c6b37e4b57bb63855bce371b9fcb0518fc9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;const char *erl_thisalivename()&lt;/code&gt;&lt;code&gt;const char *erl_thiscookie()&lt;/code&gt;&lt;code&gt;short erl_thiscreation()&lt;/code&gt;&lt;code&gt;const char *erl_thishostname()&lt;/code&gt;&lt;code&gt;const char *erl_thisnodename()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;const char *erl_thisalivename()&lt;/code&gt; &lt;code&gt;const char *erl_thiscookie()&lt;/code&gt; &lt;code&gt;short erl_thiscreation()&lt;/code&gt; &lt;code&gt;const char *erl_thishostname()&lt;/code&gt; &lt;code&gt;const char *erl_thisnodename()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="77a34029e14cc38271c72a531e899e83f34ccd47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;context.conf&lt;/code&gt;: see &lt;code&gt;&lt;a href=&quot;#context&quot;&gt;Contexts&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;context.conf&lt;/code&gt; ：请参见 &lt;code&gt;&lt;a href=&quot;#context&quot;&gt;Contexts&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="786a0affbb3ef2981961c506021e8f22cf48941d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;control_char&lt;/code&gt; is the type of control sequence: &lt;code&gt;$P&lt;/code&gt;, &lt;code&gt;$w&lt;/code&gt;, and so on.</source>
          <target state="translated">&lt;code&gt;control_char&lt;/code&gt; 是控制序列的类型： &lt;code&gt;$P&lt;/code&gt; ， &lt;code&gt;$w&lt;/code&gt; 等。</target>
        </trans-unit>
        <trans-unit id="0c7c364bf87067f9368199dfab8f0e9200d5c802" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;convert_request_date/1&lt;/code&gt; converts &lt;code&gt;DateString&lt;/code&gt; to the Erlang date format. &lt;code&gt;DateString&lt;/code&gt; must be in one of the three date formats defined in &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc2616.txt&quot;&gt;RFC 2616&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;convert_request_date/1&lt;/code&gt; 将 &lt;code&gt;DateString&lt;/code&gt; 转换为Erlang日期格式。 &lt;code&gt;DateString&lt;/code&gt; 必须采用 &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc2616.txt&quot;&gt;RFC 2616&lt;/a&gt;&lt;/code&gt; 中定义的三种日期格式之一。</target>
        </trans-unit>
        <trans-unit id="ba2866f0d5129f4ab2b29e9d8b58c81aad9e098f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cookie&lt;/code&gt; is the authorization string required for access to the remote node. If &lt;code&gt;NULL&lt;/code&gt;, the user &lt;code&gt;HOME&lt;/code&gt; directory is searched for a cookie file &lt;code&gt;.erlang.cookie&lt;/code&gt;. The path to the home directory is retrieved from environment variable &lt;code&gt;HOME&lt;/code&gt; on Unix and from the &lt;code&gt;HOMEDRIVE&lt;/code&gt; and &lt;code&gt;HOMEPATH&lt;/code&gt; variables on Windows. For more details, see the &lt;code&gt;auth&lt;/code&gt; module in Kernel.</source>
          <target state="translated">&lt;code&gt;cookie&lt;/code&gt; 是访问远程节点所需的授权字符串。如果为 &lt;code&gt;NULL&lt;/code&gt; ，则在用户 &lt;code&gt;HOME&lt;/code&gt; 目录中搜索cookie文件 &lt;code&gt;.erlang.cookie&lt;/code&gt; 。从Unix上的环境变量 &lt;code&gt;HOME&lt;/code&gt; 以及Windows上的 &lt;code&gt;HOMEDRIVE&lt;/code&gt; 和 &lt;code&gt;HOMEPATH&lt;/code&gt; 变量检索主目录的路径。有关更多详细信息，请参见内核中的 &lt;code&gt;auth&lt;/code&gt; 模块。</target>
        </trans-unit>
        <trans-unit id="42bca715a9185b21349e1aec4da49804e0dd0c2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cookie&lt;/code&gt; is the cookie for the node.</source>
          <target state="translated">&lt;code&gt;cookie&lt;/code&gt; 是该节点的cookie。</target>
        </trans-unit>
        <trans-unit id="817b59120c7e12c5e02241436194d11a4a5ba478" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cookie&lt;/code&gt;. Returns a table cookie, which is a unique system-generated identifier for the table. The cookie is used internally to ensure that two different table definitions using the same table name cannot accidentally be intermixed. The cookie is generated when the table is created initially.</source>
          <target state="translated">&lt;code&gt;cookie&lt;/code&gt; 。返回表cookie，它是表的系统唯一标识符。cookie在内部用于确保使用相同表名的两个不同表定义不会意外地混合在一起。最初创建表时会生成cookie。</target>
        </trans-unit>
        <trans-unit id="c8a1d24e0052f8872cb46a15e10a289509b724e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;count&lt;/code&gt; is the address of an integer, or &lt;code&gt;NULL&lt;/code&gt;. If &lt;code&gt;count&lt;/code&gt; is not &lt;code&gt;NULL&lt;/code&gt;, it is set by the function to the number of names found.</source>
          <target state="translated">&lt;code&gt;count&lt;/code&gt; 是一个整数或 &lt;code&gt;NULL&lt;/code&gt; 的地址。如果 &lt;code&gt;count&lt;/code&gt; 不为 &lt;code&gt;NULL&lt;/code&gt; ，则由函数将其设置为找到的名称数。</target>
        </trans-unit>
        <trans-unit id="49e81525989f91eca7e0066fbeaa05638d14a178" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cprof&lt;/code&gt; is a profiling tool that can be used to get a picture of how often different functions in the system are called.</source>
          <target state="translated">&lt;code&gt;cprof&lt;/code&gt; 是一个概要分析工具，可用于获取有关系统中不同功能的调用频率的图片。</target>
        </trans-unit>
        <trans-unit id="d0e94809d26e0e40fc7bfc527ddb50f2314ed029" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cprof&lt;/code&gt; is something in between &lt;code&gt;fprof&lt;/code&gt; and &lt;code&gt;cover&lt;/code&gt; regarding features. It counts how many times each function is called when the program is run, on a per module basis. &lt;code&gt;cprof&lt;/code&gt; has a low performance degradation effect (compared with &lt;code&gt;fprof&lt;/code&gt;) and does not need to recompile any modules to profile (compared with &lt;code&gt;cover&lt;/code&gt;). For more information, see the &lt;code&gt;cprof&lt;/code&gt; manual page in Tools.</source>
          <target state="translated">&lt;code&gt;cprof&lt;/code&gt; 是介于 &lt;code&gt;fprof&lt;/code&gt; 和 &lt;code&gt;cover&lt;/code&gt; 之间的功能。它计算每个模块在运行程序时调用每个函数的次数。 &lt;code&gt;cprof&lt;/code&gt; 具有较低的性能降级效果（与 &lt;code&gt;fprof&lt;/code&gt; 相比），不需要重新编译任何模块以进行概要分析（与 &lt;code&gt;cover&lt;/code&gt; 相比）。有关更多信息，请参见&amp;ldquo; 工具&amp;rdquo;中的 &lt;code&gt;cprof&lt;/code&gt; 手册页。</target>
        </trans-unit>
        <trans-unit id="44744f0de84bc9d55c4eadbd5ce38738d9c24e19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cprof&lt;/code&gt; is the most lightweight tool, but it only provides execution counts on a function basis (for all processes, not per process).</source>
          <target state="translated">&lt;code&gt;cprof&lt;/code&gt; 是最轻量级的工具，但是它仅按功能提供执行计数（对于所有进程，而不是每个进程）。</target>
        </trans-unit>
        <trans-unit id="4048a0d6fa4c493f01ecbc1d21704dcaaed1ce8c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cprof&lt;/code&gt; presents all profiled modules in decreasing total call count order, and for each module presents all profiled functions also in decreasing call count order. A call count limit can be specified to filter out all functions below the limit.</source>
          <target state="translated">&lt;code&gt;cprof&lt;/code&gt; 以递减的总呼叫计数顺序显示所有概要分析模块，并且对于每个模块，以递减的呼叫计数顺序显示所有概要分析功能。可以指定呼叫计数限制，以过滤掉低于该限制的所有功能。</target>
        </trans-unit>
        <trans-unit id="6ab6878d3ec5d2819f77ff8acce68315369d55fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cprof&lt;/code&gt; uses breakpoints similar to local call trace, but containing counters, to collect profiling data. Therfore there is no need for special compilation of any module to be profiled.</source>
          <target state="translated">&lt;code&gt;cprof&lt;/code&gt; 使用类似于本地调用跟踪的断点，但包含计数器来收集概要分析数据。因此，不需要对要分析的任何模块进行特殊编译。</target>
        </trans-unit>
        <trans-unit id="f6c7f300bac5b6c58891e7324251fa70ca1a183c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cpu_sup&lt;/code&gt; is a process which supervises the CPU load and CPU utilization. It is part of the OS_Mon application, see &lt;code&gt;os_mon(6)&lt;/code&gt;. Available for Unix, although CPU utilization values (&lt;code&gt;util/0,1&lt;/code&gt;) are only available for Solaris, Linux and FreeBSD.</source>
          <target state="translated">&lt;code&gt;cpu_sup&lt;/code&gt; 是监督CPU负载和CPU利用率的过程。它是OS_Mon应用程序的一部分，请参见 &lt;code&gt;os_mon(6)&lt;/code&gt; 。尽管CPU使用率值（ &lt;code&gt;util/0,1&lt;/code&gt; ）仅可用于Solaris，Linux和FreeBSD ，但可用于Unix 。</target>
        </trans-unit>
        <trans-unit id="8f733e1e243b4e78c37aa3bf12d9888559fd4e16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;create/2&lt;/code&gt; and &lt;code&gt;create/3&lt;/code&gt; are provided as synonyms to resemble module &lt;code&gt;&lt;a href=&quot;erl_tar&quot;&gt;erl_tar&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;create/2&lt;/code&gt; 和 &lt;code&gt;create/3&lt;/code&gt; 作为同义词类似于模块 &lt;code&gt;&lt;a href=&quot;erl_tar&quot;&gt;erl_tar&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="86837ff50eb1f72f6c14616c4e5ab70595b6c916" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;create_etag/1&lt;/code&gt; calculates the Etag for a file from its size and time for last modification. &lt;code&gt;FileInfo&lt;/code&gt; is a record defined in &lt;code&gt;kernel/include/file.hrl&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;create_etag/1&lt;/code&gt; 根据文件的大小和上次修改的时间计算其Etag。 &lt;code&gt;FileInfo&lt;/code&gt; 是在 &lt;code&gt;kernel/include/file.hrl&lt;/code&gt; 中定义的一条记录。</target>
        </trans-unit>
        <trans-unit id="147786f0517ecc77a8c88e11d308b3b944b51008" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;creation&lt;/code&gt; helps identifying a particular instance of a C-node. In particular, it can help prevent us from receiving messages sent to an earlier process with the same registered name.</source>
          <target state="translated">&lt;code&gt;creation&lt;/code&gt; 有助于识别C节点的特定实例。特别是，它可以帮助防止我们接收发送到具有相同注册名称的较早进程的消息。</target>
        </trans-unit>
        <trans-unit id="ecba77368ea7d93ebe0e99703e7acc590f0dcbe7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;creation&lt;/code&gt; identifies a specific instance of a C-node. It can help prevent the node from receiving messages sent to an earlier process with the same registered name.</source>
          <target state="translated">&lt;code&gt;creation&lt;/code&gt; 标识C节点的特定实例。这可以帮助防止节点接收发送到具有相同注册名称的早期进程的消息。</target>
        </trans-unit>
        <trans-unit id="3e2f0434ccaddbdbdb4597f9f04a694d0d591ab6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;creation&lt;/code&gt; is an arbitrary number.</source>
          <target state="translated">&lt;code&gt;creation&lt;/code&gt; 是一个任意数字。</target>
        </trans-unit>
        <trans-unit id="25c1f766dcf6145f2806239ba1561f608c475382" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crl_cache&lt;/code&gt; (write as Erlang term)</source>
          <target state="translated">&lt;code&gt;crl_cache&lt;/code&gt; （以Erlang术语编写）</target>
        </trans-unit>
        <trans-unit id="ffa34f5ddf34f9a5c238a55d4a266426197e3591" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crypto:block_decrypt/3&lt;/code&gt; (use crypto:crypto_one_time/4 or crypto:crypto_init/3 + crypto:crypto_update/2 + crypto:crypto_final/1 instead)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b5b92a341240dd6aae3771857214c7623f21015" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crypto:block_decrypt/4&lt;/code&gt; (use crypto:crypto_one_time/5, crypto:crypto_one_time_aead/6,7 or crypto:crypto_(dyn_iv)?_init + crypto:crypto_(dyn_iv)?_update + crypto:crypto_final instead)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40505379e274cb597daf34f492321889849550ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crypto:block_encrypt/3&lt;/code&gt; (use crypto:crypto_one_time/4 or crypto:crypto_init/3 + crypto:crypto_update/2 + crypto:crypto_final/1 instead)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3057a18bfa25380aee3fff0b03977a3867669a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crypto:block_encrypt/4&lt;/code&gt; (use crypto:crypto_one_time/5, crypto:crypto_one_time_aead/6,7 or crypto:crypto_(dyn_iv)?_init + crypto:crypto_(dyn_iv)?_update + crypto:crypto_final instead)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e89a5bb2e2ceb4fa68a151818baba912ba0e8148" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crypto:cmac/3&lt;/code&gt; (use crypto:mac/4 instead)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1093c5b00125fd6bc821f0860bc8f4686af42139" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crypto:cmac/4&lt;/code&gt; (use crypto:macN/5 instead)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2b79cdab59f72b976a2c52b421fa7029319c307" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crypto:hmac/3&lt;/code&gt; (use crypto:mac/4 instead)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbbbf803363e104fcfbb25b6ca265512f74e146e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crypto:hmac/4&lt;/code&gt; (use crypto:macN/5 instead)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6a86129f94cccfb1271e2222842c7fc7819a106" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crypto:hmac_final/1&lt;/code&gt; (use crypto:mac_final/1 instead)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d63b1a8f396ff5e8c13b16a5bb9edfec18d74b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crypto:hmac_final_n/2&lt;/code&gt; (use crypto:mac_finalN/2 instead)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d1e187ed71824609f3773bee8afd38a659b4ccb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crypto:hmac_init/2&lt;/code&gt; (use crypto:mac_init/3 instead)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c24f7b5f90782f467bc792181a134783f6998520" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crypto:hmac_update/2&lt;/code&gt; (use crypto:mac_update/2 instead)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0db0be87bbcf17c81744d4cf91e5b3c5e40037cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crypto:next_iv/_&lt;/code&gt; (see the 'New and Old API' chapter of the CRYPTO User's guide)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7db5d564c2c393e525493b67881100651da60593" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crypto:poly1305/2&lt;/code&gt; (use crypto:mac/3 instead)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8086501bdff3798ed31c64f449818aa8a01316a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crypto:rand_bytes/1&lt;/code&gt; ()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc497d99f8a8a9335db3fb240764c31f131b5f89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crypto:rand_uniform/2&lt;/code&gt; (use rand:uniform/1 instead)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc430682557c3ddc6a75bf88895895bed9dbb0aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crypto:stream_decrypt/2&lt;/code&gt; (use crypto:crypto_update/2 instead)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ede590464ab2e7c45f5f28697e06806d4bda355" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crypto:stream_encrypt/2&lt;/code&gt; (use crypto:crypto_update/2 instead)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b230b42c8e7a013c74c4320d57b38041fbacfd05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crypto:stream_init/_&lt;/code&gt; (use crypto:crypto_init/3 + crypto:crypto_update/2 + crypto:crypto_final/1 or crypto:crypto_one_time/4 instead)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8089a68b245ea2612a5252f221bffda58f3203e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crypto&lt;/code&gt; app,</source>
          <target state="translated">&lt;code&gt;crypto&lt;/code&gt; 应用</target>
        </trans-unit>
        <trans-unit id="7321043699f44cee2da66b5796e5d39f980b3ac0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cserver&lt;/code&gt; takes a port number as argument and must be started before trying to call the Erlang functions.</source>
          <target state="translated">&lt;code&gt;cserver&lt;/code&gt; 将端口号作为参数，并且必须在尝试调用Erlang函数之前启动。</target>
        </trans-unit>
        <trans-unit id="10356f1cc74fd351a9c0427a2d1e1cde1bc2e480" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ct:pal/4&lt;/code&gt; and &lt;code&gt;ct:log/5&lt;/code&gt; add headers to strings being printed to the log file. The strings are also wrapped in div tags with a CSS class attribute, so that stylesheet formatting can be applied. To disable this feature for a printout (i.e. to get a result similar to using &lt;code&gt;io:format/2&lt;/code&gt;), call &lt;code&gt;ct:log/5&lt;/code&gt; with the &lt;code&gt;no_css&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;ct:pal/4&lt;/code&gt; 和 &lt;code&gt;ct:log/5&lt;/code&gt; 将标题添加到要打印到日志文件的字符串。字符串也使用CSS类属性包装在div标签中，因此可以应用样式表格式。要为打印输出禁用此功能（即获得类似于使用 &lt;code&gt;io:format/2&lt;/code&gt; 的结果），请使用 &lt;code&gt;no_css&lt;/code&gt; 选项调用 &lt;code&gt;ct:log/5&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="54304822e601b32f1e90725086f938a28fcf450c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ct_config_plain&lt;/code&gt; - for reading configuration files with key-value tuples (standard format). This handler is used to parse configuration files if no user callback is specified.</source>
          <target state="translated">&lt;code&gt;ct_config_plain&lt;/code&gt; -用于读取具有键值元组（标准格式）的配置文件。如果未指定用户回调，则此处理程序用于解析配置文件。</target>
        </trans-unit>
        <trans-unit id="091701f10b9171bbae6e609be4ad908a55b0470e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ct_config_xml&lt;/code&gt; - for reading configuration data from XML files.</source>
          <target state="translated">&lt;code&gt;ct_config_xml&lt;/code&gt; -用于从XML文件读取配置数据。</target>
        </trans-unit>
        <trans-unit id="08dff71e923e07b024554bb0b81f52cc71e883de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ct_property_test:cmnd_names/1&lt;/code&gt; returns a list of commands (function calls) generated in the &lt;code&gt;Cmnd&lt;/code&gt; sequence, without Module, Arguments and other details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a31f1830a5e560014288c137e4a10e3b73f863c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ct_property_test:num_calls/1&lt;/code&gt; returns a list of the length of commands lists</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f0095960e13d8195cb7e0205d563086601182a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ct_property_test:sequential_parallel/1&lt;/code&gt; returns a list with information about sequential and parallel parts from &lt;code&gt;Tool:parallel_commands/1,2&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37e7b4ba19bc3cee61acb03a5fc00aa6977d70d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ct_run -vts&lt;/code&gt; tries to open the &lt;code&gt;Common Test&lt;/code&gt; start page in an existing web browser window, or start the browser if it is not running. Which browser to start can be specified with the browser start command option:</source>
          <target state="translated">&lt;code&gt;ct_run -vts&lt;/code&gt; 尝试在现有的Web浏览器窗口中打开&amp;ldquo; &lt;code&gt;Common Test&lt;/code&gt; 开始页面，或者如果浏览器未运行，则启动它。可以使用浏览器启动命令选项指定启动哪个浏览器：</target>
        </trans-unit>
        <trans-unit id="aa208b1437d15d60958b21cccaad22bef6c56934" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ct_run&lt;/code&gt; also accepts Erlang emulator flags. These are used when &lt;code&gt;ct_run&lt;/code&gt; calls &lt;code&gt;erl&lt;/code&gt; to start the Erlang node (this makes it possible to add directories to the code server path, change the cookie on the node, start more applications, and so on).</source>
          <target state="translated">&lt;code&gt;ct_run&lt;/code&gt; 还接受Erlang仿真器标志。当 &lt;code&gt;ct_run&lt;/code&gt; 调用 &lt;code&gt;erl&lt;/code&gt; 启动Erlang节点时，将使用它们（这使得可以将目录添加到代码服务器路径，更改该节点上的cookie，启动更多应用程序，等等）。</target>
        </trans-unit>
        <trans-unit id="33d2727d6cc062836a6b35673aead9f43b2d4bf8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ct_telnet&lt;/code&gt; does not search for a prompt at all. This is useful if, for example, &lt;code&gt;Pattern&lt;/code&gt; itself matches the prompt.</source>
          <target state="translated">&lt;code&gt;ct_telnet&lt;/code&gt; 根本不搜索提示。例如，如果 &lt;code&gt;Pattern&lt;/code&gt; 本身与提示匹配，这将很有用。</target>
        </trans-unit>
        <trans-unit id="601ce49083458a71b06687598df31090de331f21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ct_telnet&lt;/code&gt; ignores any prompt found. This option is useful if data sent by the server can include a pattern matching prompt &lt;code&gt;regexp&lt;/code&gt; (as returned by &lt;code&gt;TargedMod:get_prompt_regexp/0&lt;/code&gt;), but is not to not cause the function to return.</source>
          <target state="translated">&lt;code&gt;ct_telnet&lt;/code&gt; 忽略发现的任何提示。如果服务器发送的数据可以包含模式匹配提示 &lt;code&gt;regexp&lt;/code&gt; （由 &lt;code&gt;TargedMod:get_prompt_regexp/0&lt;/code&gt; 返回），但不会导致该函数返回，则此选项很有用。</target>
        </trans-unit>
        <trans-unit id="e90e605d39bb0cb048192d764d517674520c0dcb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;curr_cnt&lt;/code&gt; of a process is incremented each time the process is involved in a sequential trace. The counter can reach its limit (27 bits) if a process is very long-lived and is involved in much sequential tracing. If the counter overflows, the serial for ordering of the trace events cannot be used. To prevent the counter from overflowing in the middle of a sequential trace, function &lt;code&gt;seq_trace:reset_trace/0&lt;/code&gt; can be called to reset &lt;code&gt;prev_cnt&lt;/code&gt; and &lt;code&gt;curr_cnt&lt;/code&gt; of all processes in the Erlang node. This function also sets all trace tokens in processes and their message queues to empty, and thus stops all ongoing sequential tracing.</source>
          <target state="translated">&lt;code&gt;curr_cnt&lt;/code&gt; 每当该过程涉及顺序跟踪时，该过程的curr_cnt都会增加。如果进程的寿命很长并且涉及大量顺序跟踪，则计数器可以达到其极限（27位）。如果计数器溢出，则无法使用跟踪事件的排序序列。为了防止计数器在顺序跟踪的中间溢出，可以调用函数 &lt;code&gt;seq_trace:reset_trace/0&lt;/code&gt; 来重置Erlang节点中所有进程的 &lt;code&gt;prev_cnt&lt;/code&gt; 和 &lt;code&gt;curr_cnt&lt;/code&gt; 。此功能还将进程及其消息队列中的所有跟踪令牌设置为空，从而停止所有正在进行的顺序跟踪。</target>
        </trans-unit>
        <trans-unit id="fd1fe4536e2fae04ef35ef44090a99cd91b682a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cursor(QH)&lt;/code&gt; is equivalent to &lt;code&gt;cursor(QH, [])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cursor(QH)&lt;/code&gt; 等效于 &lt;code&gt;cursor(QH, [])&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ba3f5edef89533291e58134f4f1cd47d203131b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;d(0)&lt;/code&gt; ... &lt;code&gt;d(n-1)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;d(0)&lt;/code&gt; ... &lt;code&gt;d(n-1)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="df73226efb057579771cc07c860dc88c6fd7cc98" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;d&lt;/code&gt; - Tagged destination register (X or Y). The tag will be tested at runtime to set up a pointer to the destination register. If the instrution performs a garbarge collection, it must use the &lt;code&gt;$REFRESH_GEN_DEST()&lt;/code&gt; macro to refresh the pointer before storing to it (there are more details about that in a later section).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5379c511e99c30ea2fdb92a4bb825764729fc314" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;d&lt;/code&gt; - X or Y register. Equivalent to &lt;code&gt;xy&lt;/code&gt;. (In a pattern &lt;code&gt;d&lt;/code&gt; will match both source and destination registers. As an operand in a specific instruction, it must only be used for a destination register.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6694b45c0235e642c971889424fd4c54eb60c6ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;data&lt;/code&gt; is a pointer to data to associate with &lt;code&gt;key&lt;/code&gt; in the calling thread.</source>
          <target state="translated">&lt;code&gt;data&lt;/code&gt; 是指向要与调用线程中的 &lt;code&gt;key&lt;/code&gt; 关联的数据的指针。</target>
        </trans-unit>
        <trans-unit id="6783d1593c9182ec656f533a2360e5b136b6243c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;data_dir&lt;/code&gt; - Data file directory</source>
          <target state="translated">&lt;code&gt;data_dir&lt;/code&gt; -数据文件目录</target>
        </trans-unit>
        <trans-unit id="029a6b0ab70f3edd3986db227e2072871162f8ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;date-time-string&lt;/code&gt; is the date and time the message is written, default in local time (can be changed to UTC if needed). It is formatted with the ANSI-C function &lt;code&gt;strftime&lt;/code&gt; using the format string &lt;code&gt;%a %b %e %T %Z %Y&lt;/code&gt;, which produces messages like &lt;code&gt;===== ALIVE Thu May 15 10:13:36 MEST 2003&lt;/code&gt;; this can be changed, see the next section.</source>
          <target state="translated">&lt;code&gt;date-time-string&lt;/code&gt; 是写入消息的日期和时间，默认为本地时间（如果需要，可以更改为UTC）。它使用ANSI-C函数 &lt;code&gt;strftime&lt;/code&gt; 使用格式字符串 &lt;code&gt;%a %b %e %T %Z %Y&lt;/code&gt; 格式化，该字符串生成 &lt;code&gt;===== ALIVE Thu May 15 10:13:36 MEST 2003&lt;/code&gt; 消息Thu May 15 10:13:36 MEST 2003 ; 可以更改，请参阅下一节。</target>
        </trans-unit>
        <trans-unit id="9033cd3570d0562271c3a2e4d7db4ffa6b191f45" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;day/1&lt;/code&gt; converts the day of the week (&lt;code&gt;NthDayOfWeek&lt;/code&gt;) from an integer (1-7) to an abbreviated string, that is:</source>
          <target state="translated">&lt;code&gt;day/1&lt;/code&gt; 将星期几（ &lt;code&gt;NthDayOfWeek&lt;/code&gt; ）从整数（1-7）转换为缩写字符串，即：</target>
        </trans-unit>
        <trans-unit id="1cb11a621938f8a8d62fba1b13fd3331878eb3f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;db&lt;/code&gt; (ETS tables)</source>
          <target state="translated">&lt;code&gt;db&lt;/code&gt; （ETS表）</target>
        </trans-unit>
        <trans-unit id="358f4b1996cf482f96fc6cfa013716990e4ee122" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;db_dir&lt;/code&gt; is mandatory.</source>
          <target state="translated">&lt;code&gt;db_dir&lt;/code&gt; 是必需的。</target>
        </trans-unit>
        <trans-unit id="2f664d4edb004cdde8a06354bf8d85f3788b0c41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;db_nodes&lt;/code&gt; - &lt;code&gt;mnesia:system_info(db_nodes)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;db_nodes&lt;/code&gt; - &lt;code&gt;mnesia:system_info(db_nodes)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="70a6744faefa1713ffbd9721315da438a25ed6e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;db_nodes&lt;/code&gt;. Returns the nodes that make up the persistent database. Disc-less nodes are only included in the list of nodes if they explicitly have been added to the schema, for example, with &lt;code&gt;mnesia:add_table_copy/3&lt;/code&gt;. The function can be started even if Mnesia is not yet running.</source>
          <target state="translated">&lt;code&gt;db_nodes&lt;/code&gt; 。返回组成持久数据库的节点。无盘节点只有在已将其明确添加到架构中（例如，使用 &lt;code&gt;mnesia:add_table_copy/3&lt;/code&gt; )时，才包括在节点列表中。即使Mnesia尚未运行，也可以启动该功能。</target>
        </trans-unit>
        <trans-unit id="c673477036951a729c93b1f7508951bcd97906c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dbg&lt;/code&gt; is a generic Erlang trace tool. By using the &lt;code&gt;timestamp&lt;/code&gt; or &lt;code&gt;cpu_timestamp&lt;/code&gt; options it can be used as a precision instrument to profile how long time a function call takes for a specific process. This can be very useful when trying to understand where time is spent in a heavily loaded system as it is possible to limit the scope of what is profiled to be very small. For more information, see the &lt;code&gt;dbg&lt;/code&gt; manual page in Runtime Tools.</source>
          <target state="translated">&lt;code&gt;dbg&lt;/code&gt; 是通用的Erlang跟踪工具。通过使用 &lt;code&gt;timestamp&lt;/code&gt; 或 &lt;code&gt;cpu_timestamp&lt;/code&gt; 选项，可以将其用作精确工具来分析功能调用对特定进程花费的时间。当试图了解在重负载系统中花费的时间时，这可能非常有用，因为可以将配置文件的范围限制为很小。有关更多信息，请参见运行时工具中的 &lt;code&gt;dbg&lt;/code&gt; 手册页。</target>
        </trans-unit>
        <trans-unit id="999dad6d17987fb1d2c6e7351c9927faffa26e0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dbg&lt;/code&gt; is equivalent to &lt;code&gt;tracer(node(),[{shell, only}])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;dbg&lt;/code&gt; 等效于 &lt;code&gt;tracer(node(),[{shell, only}])&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="17caedf6cb86230e39ee34c9c7862972a59e53b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dbg&lt;/code&gt; is the generic erlang tracing frontend. By using the &lt;code&gt;timestamp&lt;/code&gt; or &lt;code&gt;cpu_timestamp&lt;/code&gt; options it can be used to time how long function calls in a live system take.</source>
          <target state="translated">&lt;code&gt;dbg&lt;/code&gt; 是通用的erlang跟踪前端。通过使用 &lt;code&gt;timestamp&lt;/code&gt; 或 &lt;code&gt;cpu_timestamp&lt;/code&gt; 选项，可用于计时实时系统中函数调用所花费的时间。</target>
        </trans-unit>
        <trans-unit id="383891b92b7728a806802597bdf39747dcb86b32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dbg&lt;/code&gt; mode</source>
          <target state="translated">&lt;code&gt;dbg&lt;/code&gt; 模式</target>
        </trans-unit>
        <trans-unit id="108caa6a9c7c9fe0b3f193cf88ae1a060d7ab2de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;debug&lt;/code&gt;. Returns the current debug level of Mnesia.</source>
          <target state="translated">&lt;code&gt;debug&lt;/code&gt; 。返回Mnesia的当前调试级别。</target>
        </trans-unit>
        <trans-unit id="65c5fbce6c513cedd45826710958863898a9a595" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;default&lt;/code&gt; for normal data</source>
          <target state="translated">&lt;code&gt;default&lt;/code&gt; 普通数据的默认值</target>
        </trans-unit>
        <trans-unit id="3bfd8f4c4d96227dcf3984ef94def308ee7c9e83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;default_bind&lt;/code&gt; - Binds schedulers the default way. Defaults to &lt;code&gt;thread_no_node_processor_spread&lt;/code&gt; (which can change in the future).</source>
          <target state="translated">&lt;code&gt;default_bind&lt;/code&gt; -以默认方式绑定调度程序。默认为 &lt;code&gt;thread_no_node_processor_spread&lt;/code&gt; （将来可能会更改）。</target>
        </trans-unit>
        <trans-unit id="100310a5ba2c1c425121b816b4152b6d3217a9ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;delete_group/2, delete_group/3&lt;/code&gt;, and &lt;code&gt;delete_group/4&lt;/code&gt; each deletes the group specified and returns &lt;code&gt;true&lt;/code&gt;. If there is an error, &lt;code&gt;{error, Reason}&lt;/code&gt; is returned. When &lt;code&gt;delete_group/2&lt;/code&gt; is called, option &lt;code&gt;Port&lt;/code&gt; and &lt;code&gt;Dir&lt;/code&gt; are mandatory.</source>
          <target state="translated">&lt;code&gt;delete_group/2, delete_group/3&lt;/code&gt; 和 &lt;code&gt;delete_group/4&lt;/code&gt; 分别删除指定的组并返回 &lt;code&gt;true&lt;/code&gt; 。如果有错误，则返回 &lt;code&gt;{error, Reason}&lt;/code&gt; 。调用 &lt;code&gt;delete_group/2&lt;/code&gt; 时，必选选项 &lt;code&gt;Port&lt;/code&gt; 和 &lt;code&gt;Dir&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5d4db6f5286e6d6750d8c05c56534f0a1605b2dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;delete_group_member/3, delete_group_member/4&lt;/code&gt;, and &lt;code&gt;delete_group_member/5&lt;/code&gt; each deletes a user from a group. If the group or the user does not exist, this function returns an error, otherwise &lt;code&gt;true&lt;/code&gt;. When &lt;code&gt;delete_group_member/3&lt;/code&gt; is called, the options &lt;code&gt;Port&lt;/code&gt; and &lt;code&gt;Dir&lt;/code&gt; are mandatory.</source>
          <target state="translated">&lt;code&gt;delete_group_member/3, delete_group_member/4&lt;/code&gt; 和 &lt;code&gt;delete_group_member/5&lt;/code&gt; 各自从组中删除用户。如果组或用户不存在，则此函数返回错误，否则返回 &lt;code&gt;true&lt;/code&gt; 。当 &lt;code&gt;delete_group_member/3&lt;/code&gt; 被调用时，选择 &lt;code&gt;Port&lt;/code&gt; 和 &lt;code&gt;Dir&lt;/code&gt; 是强制性的。</target>
        </trans-unit>
        <trans-unit id="7a9b6df1fd63a50104f12248edc73eeabaafd916" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;delete_user/2, delete_user/3&lt;/code&gt;, and &lt;code&gt;delete_user/4&lt;/code&gt; each deletes a user from the user database. If the operation is successful, this function returns &lt;code&gt;true&lt;/code&gt;. If an error occurs, &lt;code&gt;{error,Reason}&lt;/code&gt; is returned. When &lt;code&gt;delete_user/2&lt;/code&gt; is called, options &lt;code&gt;Port&lt;/code&gt; and &lt;code&gt;Dir&lt;/code&gt; are mandatory.</source>
          <target state="translated">&lt;code&gt;delete_user/2, delete_user/3&lt;/code&gt; 和 &lt;code&gt;delete_user/4&lt;/code&gt; 各自从用户数据库中删除用户。如果操作成功，则此函数返回 &lt;code&gt;true&lt;/code&gt; 。如果发生 &lt;code&gt;{error,Reason}&lt;/code&gt; 则返回{error，Reason}。当 &lt;code&gt;delete_user/2&lt;/code&gt; 被调用，选择 &lt;code&gt;Port&lt;/code&gt; 和 &lt;code&gt;Dir&lt;/code&gt; 是强制性的。</target>
        </trans-unit>
        <trans-unit id="a7b518efd8daf88742e92d33d880b350e2bac1f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;deliver/3&lt;/code&gt; sends &lt;code&gt;Data&lt;/code&gt; over &lt;code&gt;Socket&lt;/code&gt; using the specified &lt;code&gt;SocketType&lt;/code&gt;. &lt;code&gt;Socket&lt;/code&gt; and &lt;code&gt;SocketType&lt;/code&gt; is to be the socket and the &lt;code&gt;socket_type&lt;/code&gt; form the &lt;code&gt;mod&lt;/code&gt; record as defined in &lt;code&gt;httpd.hrl&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;deliver/3&lt;/code&gt; 使用指定的 &lt;code&gt;SocketType&lt;/code&gt; 通过 &lt;code&gt;Socket&lt;/code&gt; 发送 &lt;code&gt;Data&lt;/code&gt; 。 &lt;code&gt;Socket&lt;/code&gt; 和 &lt;code&gt;SocketType&lt;/code&gt; 将成为套接字，并且 &lt;code&gt;socket_type&lt;/code&gt; 形成 &lt;code&gt;httpd.hrl&lt;/code&gt; 中定义的 &lt;code&gt;mod&lt;/code&gt; 记录</target>
        </trans-unit>
        <trans-unit id="2ea60c4653c9cc97512d3df5efbd58b2ef6a71a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;demonitor(MonitorRef, [])&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;#demonitor-1&quot;&gt; demonitor(MonitorRef)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31ef7900d5c5757691bc7bbeceb5751161d490e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;demonitor(MonitorRef, [])&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;#demonitor-1&quot;&gt;demonitor(MonitorRef)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;demonitor(MonitorRef, [])&lt;/code&gt; 等效于 &lt;code&gt;&lt;a href=&quot;#demonitor-1&quot;&gt;demonitor(MonitorRef)&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cd2fdb40dfa166ca494c05463a92fced74b0557b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;deprecated&lt;/code&gt;, the second element is a sorted list of calls to deprecated functions;</source>
          <target state="translated">&lt;code&gt;deprecated&lt;/code&gt; ，第二个元素是不推荐使用的函数的排序列表；</target>
        </trans-unit>
        <trans-unit id="ee868e13126c26dc9a787ae1e2cc0dbb0a70c58b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;deprecated&lt;/code&gt;, the second element is a sorted list of externally used deprecated functions;</source>
          <target state="translated">&lt;code&gt;deprecated&lt;/code&gt; ，第二个元素是外部不推荐使用的功能的排序列表；</target>
        </trans-unit>
        <trans-unit id="319a0fb5eab817dda6c01d5820ff0037dd8bd878" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dept&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;dept&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="cc29ccdb337f80df256280bd273a5e77f44127bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;depth : integer&lt;/code&gt; :: Stack depth. Ex. &lt;code&gt;0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;depth : integer&lt;/code&gt; ::堆栈深度。例如 &lt;code&gt;0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cd05717828c4848f5d3564e59af45c2ef0f343af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;description&lt;/code&gt; - A short description, a string. Defaults to &quot;&quot;.</source>
          <target state="translated">&lt;code&gt;description&lt;/code&gt; -简短描述，字符串。默认为&amp;ldquo;&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="85b6308eff6598024e34eb55b4a1298c9e62a106" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;diameter_app(3)&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;diameter_transport&quot;&gt;diameter_transport(3)&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;diameter_dict&quot;&gt;diameter_dict(4)&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;diameter_app(3)&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;diameter_transport&quot;&gt;diameter_transport(3)&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;diameter_dict&quot;&gt;diameter_dict(4)&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d55ee1f62fef4cf459b94cd5df403faf0b90ddee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dir&lt;/code&gt; - If present, points to a directory where a file to which all data in the ets table is &quot;synced&quot;.</source>
          <target state="translated">&lt;code&gt;dir&lt;/code&gt; -如果存在，则指向ets表中所有数据都同步到的文件的目录。</target>
        </trans-unit>
        <trans-unit id="0cb1144fcd4bf4d5089b297e90a677a15ff4c23b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dir&lt;/code&gt; - This &lt;strong&gt;mandatory&lt;/strong&gt; option points to a directory where to place the file of a dets table.</source>
          <target state="translated">&lt;code&gt;dir&lt;/code&gt; -此&lt;strong&gt;强制性&lt;/strong&gt;选项指向放置dets表文件的目录。</target>
        </trans-unit>
        <trans-unit id="b605d7fbb8a0d7d4f4a4bbe6c4e2e64588b8aa6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dir&lt;/code&gt; in config is mandatory.</source>
          <target state="translated">&lt;code&gt;dir&lt;/code&gt; config中的dir是必需的。</target>
        </trans-unit>
        <trans-unit id="1458b26f6035d8be2020b2d8b4ef95611795c664" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;directory&lt;/code&gt;, the directory where the &lt;code&gt;&lt;a href=&quot;#library_module&quot;&gt;library module's&lt;/a&gt;&lt;/code&gt; BEAM file is located.</source>
          <target state="translated">&lt;code&gt;directory&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;#library_module&quot;&gt;library module's&lt;/a&gt;&lt;/code&gt; BEAM文件所在的目录。</target>
        </trans-unit>
        <trans-unit id="f2e9238fb07723dc0c2f90525328a7856c465077" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;directory&lt;/code&gt;, the directory where the module's BEAM file is located;</source>
          <target state="translated">&lt;code&gt;directory&lt;/code&gt; ，模块的BEAM文件所在的目录；</target>
        </trans-unit>
        <trans-unit id="44f4e0e98d0c51c1545f8ddde56354f21e9a0c98" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;directory&lt;/code&gt;, the directory where the modules' BEAM files are located;</source>
          <target state="translated">&lt;code&gt;directory&lt;/code&gt; ，模块的BEAM文件所在的目录；</target>
        </trans-unit>
        <trans-unit id="7cb229102fa7099945b4b0429f46df0906ccb986" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;directory&lt;/code&gt;, the release directory;</source>
          <target state="translated">&lt;code&gt;directory&lt;/code&gt; ，发布目录；</target>
        </trans-unit>
        <trans-unit id="cade714c9bb756cacf4a7301a0c998f14afc09d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;directory&lt;/code&gt;. Returns the name of the Mnesia directory. It can be called even if Mnesia is not yet running.</source>
          <target state="translated">&lt;code&gt;directory&lt;/code&gt; 。返回Mnesia目录的名称。即使Mnesia尚未运行，也可以调用它。</target>
        </trans-unit>
        <trans-unit id="48d0811320e12d34ce2b617aeb062bab8990a26c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;directory_index&lt;/code&gt; specifies a list of resources to look for if a client requests a directory using a &lt;code&gt;/&lt;/code&gt; at the end of the directory name. &lt;code&gt;file&lt;/code&gt; depicts the name of a file in the directory. Several files can be given, in which case the server returns the first it finds, for example:</source>
          <target state="translated">&lt;code&gt;directory_index&lt;/code&gt; 指定如果客户端在目录名称末尾使用 &lt;code&gt;/&lt;/code&gt; 请求目录的资源列表。 &lt;code&gt;file&lt;/code&gt; 描述目录中文件的名称。可以给出几个文件，在这种情况下，服务器返回它找到的第一个文件，例如：</target>
        </trans-unit>
        <trans-unit id="043ee13ece50666ab9350e2d84d985c18e0bfb0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;disabled&lt;/code&gt; - Disable BEAST mitigation.</source>
          <target state="translated">&lt;code&gt;disabled&lt;/code&gt; -禁用BEAST缓解。</target>
        </trans-unit>
        <trans-unit id="91c6fec592eea4d837be060abf6f9d6a2694d8bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;disc_copies&lt;/code&gt;. Returns the nodes where a &lt;code&gt;disc_copy&lt;/code&gt; of the table resides according to the schema.</source>
          <target state="translated">&lt;code&gt;disc_copies&lt;/code&gt; 。根据模式返回表的 &lt;code&gt;disc_copy&lt;/code&gt; 所在的节点。</target>
        </trans-unit>
        <trans-unit id="528b7a8d42d9b5d4952e0db2f2ad3f096a0108ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;disc_copies&lt;/code&gt;. The value of the attribute is a list of Erlang nodes, and a replica of the table resides both in RAM and on disc on each node in the list. Write operations addressed to the table address both the RAM and the disc copy of the table.</source>
          <target state="translated">&lt;code&gt;disc_copies&lt;/code&gt; 。该属性的值是Erlang节点的列表，并且该表的副本位于列表中每个节点的RAM和磁盘上。指向该表的写操作同时处理表的RAM和光盘副本。</target>
        </trans-unit>
        <trans-unit id="f7e2c5cdc73ebc52fd236fc4cf50f7ba471876d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;disc_copies&lt;/code&gt;. This property specifies a list of Erlang nodes where the table is kept in RAM and on disc. All updates of the table are performed in the actual table and are also logged to disc. If a table is of type &lt;code&gt;disc_copies&lt;/code&gt; at a certain node, the entire table is resident in RAM memory and on disc. Each transaction performed on the table is appended to a &lt;code&gt;LOG&lt;/code&gt; file and written into the RAM table.</source>
          <target state="translated">&lt;code&gt;disc_copies&lt;/code&gt; 。此属性指定表在RAM和磁盘上的Erlang节点列表。该表的所有更新均在实际表中执行，并且也记录到磁盘上。如果某个表在某个节点上的类型为 &lt;code&gt;disc_copies&lt;/code&gt; ，则整个表都驻留在RAM内存中和磁盘上。在表上执行的每个事务都将附加到 &lt;code&gt;LOG&lt;/code&gt; 文件中，并写入RAM表中。</target>
        </trans-unit>
        <trans-unit id="726573780291c89bb3847af9c71db60a2833ec14" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;disc_only_copies&lt;/code&gt;. Returns the nodes where a &lt;code&gt;disc_only_copy&lt;/code&gt; of the table resides according to the schema.</source>
          <target state="translated">&lt;code&gt;disc_only_copies&lt;/code&gt; 。根据模式返回表的 &lt;code&gt;disc_only_copy&lt;/code&gt; 所驻留的节点。</target>
        </trans-unit>
        <trans-unit id="54cb9adf6cce29c6773c5ad5c9dc1dfcea2dfc60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;disc_only_copies&lt;/code&gt;. Some, or all, table replicas can be kept on disc only. These replicas are considerably slower than the RAM-based replicas.</source>
          <target state="translated">&lt;code&gt;disc_only_copies&lt;/code&gt; 。某些或全部表副本只能保留在磁盘上。这些副本比基于RAM的副本要慢得多。</target>
        </trans-unit>
        <trans-unit id="c18b242d445ffca079379b754a73022a336f4a85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;disc_only_copies&lt;/code&gt;. The value of the attribute is a list of Erlang nodes, and a replica of the table resides only as a disc copy on each node in the list. The major disadvantage of this type of table replica is the access speed. The major advantage is that the table does not occupy space in memory.</source>
          <target state="translated">&lt;code&gt;disc_only_copies&lt;/code&gt; 。该属性的值是Erlang节点的列表，并且该表的副本仅作为光盘副本驻留在列表中的每个节点上。这种类型的表副本的主要缺点是访问速度。主要优点是该表不占用内存空间。</target>
        </trans-unit>
        <trans-unit id="7f03df437c65ff33591d435acb1cef33342009d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;disconnect/1&lt;/code&gt; closes the database connection and the driver. (However, it does not unload it.)</source>
          <target state="translated">&lt;code&gt;disconnect/1&lt;/code&gt; 关闭数据库连接和驱动程序。（但是，它不会卸载它。）</target>
        </trans-unit>
        <trans-unit id="40239310c66be0c67b6c6e72002aa2ac11ea8c0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;disconnect&lt;/code&gt; if a SSH_MSG_DISCONNECT message should be sent immediately. It will be followed by a close of the underlying tcp connection.</source>
          <target state="translated">&lt;code&gt;disconnect&lt;/code&gt; 如果应立即发送SSH_MSG_DISCONNECT消息，请断开连接。随后将关闭基础tcp连接。</target>
        </trans-unit>
        <trans-unit id="337d23a9ffc8ed74295386f439f4029d6e7bccc7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;disk_log&lt;/code&gt; is a disk-based term logger that enables efficient logging of items on files.</source>
          <target state="translated">&lt;code&gt;disk_log&lt;/code&gt; 是基于磁盘的术语记录器，它可以有效地记录文件中的项目。</target>
        </trans-unit>
        <trans-unit id="557289d732508771fba2de6df7f71aa4fd478af4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;disksup&lt;/code&gt; is a process which supervises the available disk space in the system. It is part of the OS_Mon application, see &lt;code&gt;os_mon(6)&lt;/code&gt;. Available for Unix and Windows.</source>
          <target state="translated">&lt;code&gt;disksup&lt;/code&gt; 是监视系统中可用磁盘空间的过程。它是OS_Mon应用程序的一部分，请参见 &lt;code&gt;os_mon(6)&lt;/code&gt; 。适用于Unix和Windows。</target>
        </trans-unit>
        <trans-unit id="aed630569409785073ef89b28862b9ae641e65a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dist_util:handshake_other_started(HsData)&lt;/code&gt; will perform the handshake and if the handshake successfully completes this process will then continue in a connection supervisor loop as long as the connection is up.</source>
          <target state="translated">&lt;code&gt;dist_util:handshake_other_started(HsData)&lt;/code&gt; 将执行握手，如果握手成功完成，则只要连接建立，此过程将在连接管理器循环中继续。</target>
        </trans-unit>
        <trans-unit id="27751a38cd4a9b2acc5282619252530fe6ce8226" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dist_util:handshake_we_started(HsData)&lt;/code&gt; will perform the handshake and the handshake successfully completes this process will then continue in a connection supervisor loop as long as the connection is up.</source>
          <target state="translated">&lt;code&gt;dist_util:handshake_we_started(HsData)&lt;/code&gt; 将执行握手，并且握手成功完成此过程，然后只要连接建立就将在连接管理器循环中继续。</target>
        </trans-unit>
        <trans-unit id="4429d38e80eee115e892f24ce877c4a14468e02d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;distrvsn&lt;/code&gt; 2 was never used.</source>
          <target state="translated">&lt;code&gt;distrvsn&lt;/code&gt; 从未使用distrvsn 2。</target>
        </trans-unit>
        <trans-unit id="cc8e261e926a667c2b9c7d3069b083201c1d8312" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dns&lt;/code&gt; (use the Erlang DNS client &lt;code&gt;inet_res(3)&lt;/code&gt; for nameserver queries)</source>
          <target state="translated">&lt;code&gt;dns&lt;/code&gt; （使用Erlang DNS客户端 &lt;code&gt;inet_res(3)&lt;/code&gt; 进行名称服务器查询）</target>
        </trans-unit>
        <trans-unit id="6c08cc6086a582b21e793f0239a11699599eac87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;do/1&lt;/code&gt; (mandatory) - the function called when a request is to be handled</source>
          <target state="translated">&lt;code&gt;do/1&lt;/code&gt; （强制性）-处理请求时调用的函数</target>
        </trans-unit>
        <trans-unit id="758e77371d75d6c6e7aebbc8c64b91f227479100" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;do_connect&lt;/code&gt; is where we log in to the database. If the connection was successful, we store the connection handle in the driver data, and return &lt;code&gt;'ok'&lt;/code&gt;. Otherwise, we return the error message from postgres and store &lt;code&gt;NULL&lt;/code&gt; in the driver data.</source>
          <target state="translated">&lt;code&gt;do_connect&lt;/code&gt; 是我们登录数据库的位置。如果连接成功，则将连接句柄存储在驱动程序数据中，并返回 &lt;code&gt;'ok'&lt;/code&gt; 。否则，我们从postgres返回错误消息，并将 &lt;code&gt;NULL&lt;/code&gt; 存储在驱动程序数据中。</target>
        </trans-unit>
        <trans-unit id="0ca9c6c5b4c69e3276930037f7b9016cb2b8633f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;doc/examples&lt;/code&gt; - Recommended. Source code for examples on how to use this application should be placed here. It is encouraged that examples are sourced to the public documentation from this directory.</source>
          <target state="translated">&lt;code&gt;doc/examples&lt;/code&gt; -推荐。有关如何使用此应用程序的示例的源代码应放在此处。鼓励将示例从此目录中获取到公共文档。</target>
        </trans-unit>
        <trans-unit id="cd6258308058537c9e5e0c91ffb5f785a17fe90d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;doc/html&lt;/code&gt; - Optional. HTML pages for the entire Application.</source>
          <target state="translated">&lt;code&gt;doc/html&lt;/code&gt; -可选。整个应用程序的HTML页面。</target>
        </trans-unit>
        <trans-unit id="d19b63341025752926dd220b3c4dcdb81e31d112" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;doc/internal&lt;/code&gt; - Recommended. Any documentation that describes implementation details about this application, not intended for publication, should be placed here.</source>
          <target state="translated">&lt;code&gt;doc/internal&lt;/code&gt; -推荐。描述此应用程序实现细节的任何文档（不打算发布）都应放在此处。</target>
        </trans-unit>
        <trans-unit id="2758f6c8961028bd2d92836df413d8c156acb8dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;doc/man1&lt;/code&gt; - Recommended. Man pages for Application executables.</source>
          <target state="translated">&lt;code&gt;doc/man1&lt;/code&gt; -推荐。应用程序可执行文件的手册页。</target>
        </trans-unit>
        <trans-unit id="b6861858042b0017b401d18b45b93129267b5273" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;doc/man3&lt;/code&gt; - Recommended. Man pages for module APIs.</source>
          <target state="translated">&lt;code&gt;doc/man3&lt;/code&gt; -推荐。模块API的手册页。</target>
        </trans-unit>
        <trans-unit id="b02f30cc869ef03af4b822d7cbda0d15b2fdf155" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;doc/man6&lt;/code&gt; - Recommended. Man pages for Application overview.</source>
          <target state="translated">&lt;code&gt;doc/man6&lt;/code&gt; -推荐。有关应用程序概述的手册页。</target>
        </trans-unit>
        <trans-unit id="f0cd45a88d7bad374736ea37b733712282132583" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;doc/pdf&lt;/code&gt; - Optional. PDF documentation for the entire Application.</source>
          <target state="translated">&lt;code&gt;doc/pdf&lt;/code&gt; -可选。整个应用程序的PDF文档。</target>
        </trans-unit>
        <trans-unit id="e22d1099778d41d3465cbe9215d1d489edc223b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;doc/src&lt;/code&gt; - Recommended. All source files for documentation, such as Markdown, AsciiDoc or XML-files, should be placed here.</source>
          <target state="translated">&lt;code&gt;doc/src&lt;/code&gt; -推荐。文档的所有源文件，例如Markdown，AsciiDoc或XML文件，都应放在此处。</target>
        </trans-unit>
        <trans-unit id="a5e549dfbc183aa20b7e60adc165e6f9ab1412b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;doc&lt;/code&gt; - Optional. Any released documentation should be placed in sub-directories here.</source>
          <target state="translated">&lt;code&gt;doc&lt;/code&gt; -可选。任何已发布的文档都应放在此处的子目录中。</target>
        </trans-unit>
        <trans-unit id="7f056e1e74df915b2c2fa2305e33ff60673a4ab2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;doc&lt;/code&gt; - Recommended. Any source documentation should be placed in sub-directories here.</source>
          <target state="translated">&lt;code&gt;doc&lt;/code&gt; -推荐。任何源文档都应放在此处的子目录中。</target>
        </trans-unit>
        <trans-unit id="6f833f13a1c81da53aed690dbf7008110c793525" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;drestriction(F,&amp;nbsp;S1,&amp;nbsp;S2)&lt;/code&gt; is equivalent to &lt;code&gt;difference(S1,&amp;nbsp;restriction(F,&amp;nbsp;S1,&amp;nbsp;S2))&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;drestriction(F,&amp;nbsp;S1,&amp;nbsp;S2)&lt;/code&gt; 等于 &lt;code&gt;difference(S1,&amp;nbsp;restriction(F,&amp;nbsp;S1,&amp;nbsp;S2))&lt;/code&gt; striction（F，S1，S2））。</target>
        </trans-unit>
        <trans-unit id="10d9ee6303d3aae6c02ed6122ee8a1ba1cce072a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;drestriction(R,&amp;nbsp;S)&lt;/code&gt; is equivalent to &lt;code&gt;difference(R,&amp;nbsp;restriction(R,&amp;nbsp;S))&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;drestriction(R,&amp;nbsp;S)&lt;/code&gt; 等于 &lt;code&gt;difference(R,&amp;nbsp;restriction(R,&amp;nbsp;S))&lt;/code&gt; striction（R，S））。</target>
        </trans-unit>
        <trans-unit id="293430c5917d960f03ddc8507df43a37a619109e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;driver : string&lt;/code&gt; :: Driver name. Ex. &lt;code&gt;&quot;tcp_inet&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;driver : string&lt;/code&gt; ::驱动程序名称。例如 &lt;code&gt;&quot;tcp_inet&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8aff5f2fa6f9e60bdccdad2300f684488c04eea2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;driver_binary_dec_refc&lt;/code&gt; does &lt;strong&gt;not&lt;/strong&gt; free the binary if the reference count reaches zero. &lt;strong&gt;Only&lt;/strong&gt; use &lt;code&gt;driver_binary_dec_refc&lt;/code&gt; when you are sure &lt;strong&gt;not&lt;/strong&gt; to reach a reference count of zero.</source>
          <target state="translated">&lt;code&gt;driver_binary_dec_refc&lt;/code&gt; 也&lt;strong&gt;没有&lt;/strong&gt;，如果引用计数为零释放二进制文件。&lt;strong&gt;仅&lt;/strong&gt;当您确定&lt;strong&gt;不会&lt;/strong&gt;达到零引用计数时，&lt;strong&gt;才&lt;/strong&gt;使用 &lt;code&gt;driver_binary_dec_refc&lt;/code&gt; 。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="15e677a3b16d73ec64d29f8ceacede85bc67cf35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;driver_level&lt;/code&gt; (driver-specific locking)</source>
          <target state="translated">&lt;code&gt;driver_level&lt;/code&gt; （特定于驱动程序的锁定）</target>
        </trans-unit>
        <trans-unit id="0125d3a924b41ddc0030d5e7607910de2b7b720f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dropwhile&lt;/code&gt; is the complement of &lt;code&gt;takewhile&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;dropwhile&lt;/code&gt; 是补 &lt;code&gt;takewhile&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="9f7909fee906d343c0aa5bd36ea79f988740fc50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dump_log_load_regulation&lt;/code&gt;. Returns a boolean that tells if Mnesia is configured to regulate the dumper process load.</source>
          <target state="translated">&lt;code&gt;dump_log_load_regulation&lt;/code&gt; 。返回一个布尔值，该值指示Mnesia是否已配置为调节自卸车的过程负载。</target>
        </trans-unit>
        <trans-unit id="8104ad964b40039298afcda9708b67844d8e557a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dump_log_time_threshold&lt;/code&gt;. Returns the time threshold for transaction log dumps in milliseconds.</source>
          <target state="translated">&lt;code&gt;dump_log_time_threshold&lt;/code&gt; 。返回事务日志转储的时间阈值（以毫秒为单位）。</target>
        </trans-unit>
        <trans-unit id="68fa023d228fd1006cc26e2b3d488a47193b8260" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dump_log_update_in_place&lt;/code&gt;. Returns a boolean that tells if Mnesia is configured to perform the updates in the Dets files directly, or if the updates are to be performed in a copy of the Dets files.</source>
          <target state="translated">&lt;code&gt;dump_log_update_in_place&lt;/code&gt; 。返回一个布尔值，该值指示Mnesia是否配置为直接在Dets文件中执行更新，或者是否要在Dets文件的副本中执行更新。</target>
        </trans-unit>
        <trans-unit id="164ccf30a88e90adbcef980a0252f2b5604f51da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dump_log_write_threshold&lt;/code&gt;. Returns the write threshold for transaction log dumps as the number of writes to the transaction log.</source>
          <target state="translated">&lt;code&gt;dump_log_write_threshold&lt;/code&gt; 。返回事务日志转储的写阈值，作为对事务日志的写次数。</target>
        </trans-unit>
        <trans-unit id="8efd7acd752040ce0610dba0bc21d842b2acc5b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;duplicate_bag&lt;/code&gt;. A table of this type has zero or more possibly matching objects with a given key.</source>
          <target state="translated">&lt;code&gt;duplicate_bag&lt;/code&gt; 。这种类型的表具有零个或更多可能具有给定键的匹配对象。</target>
        </trans-unit>
        <trans-unit id="509e99235626804ee03942d4e4dd128dc2a449a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;e2big&lt;/code&gt; - Too long argument list</source>
          <target state="translated">&lt;code&gt;e2big&lt;/code&gt; -参数列表过长</target>
        </trans-unit>
        <trans-unit id="5ef353a549972b85e43156fdf3cb19a2007c2c02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;e&lt;/code&gt; - Pointer to an export entry. Use by call instructions that call other modules, such as &lt;code&gt;call_ext&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4aa1de11e8b801606f716b414193a95f9a37f1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;e&lt;/code&gt; means that the API function returns an error whenever a wrongly encoded filename (or directory name) is encountered.</source>
          <target state="translated">&lt;code&gt;e&lt;/code&gt; 表示每当遇到错误编码的文件名（或目录名）时，API函数都会返回错误。</target>
        </trans-unit>
        <trans-unit id="55039e91caf7b40fa7a456c35f26b3365687917a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eacces&lt;/code&gt; - Permission denied</source>
          <target state="translated">&lt;code&gt;eacces&lt;/code&gt; -权限被拒绝</target>
        </trans-unit>
        <trans-unit id="3e6bd5eb4b99ab85b151e2a5a7e15c6634cd9406" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eaddrinuse&lt;/code&gt; - Address already in use</source>
          <target state="translated">&lt;code&gt;eaddrinuse&lt;/code&gt; -地址已在使用中</target>
        </trans-unit>
        <trans-unit id="6892434fcb77e07ac4e5efceb1883f60123c5823" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eaddrnotavail&lt;/code&gt; - Cannot assign requested address</source>
          <target state="translated">&lt;code&gt;eaddrnotavail&lt;/code&gt; -无法分配请求的地址</target>
        </trans-unit>
        <trans-unit id="e6a773b56de31ecc678e62af9fd28a27b8596efd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eadv&lt;/code&gt; - Advertise error</source>
          <target state="translated">&lt;code&gt;eadv&lt;/code&gt; -广告错误</target>
        </trans-unit>
        <trans-unit id="2a4fb7993ee899f4b8be63772b158c656628ee70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eafnosupport&lt;/code&gt; - Address family not supported by protocol family</source>
          <target state="translated">&lt;code&gt;eafnosupport&lt;/code&gt; -协议族不支持的地址族</target>
        </trans-unit>
        <trans-unit id="d3dbabbe2c23aeadb69a13791d0d4b64efcc1a95" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eagain&lt;/code&gt; - Resource temporarily unavailable</source>
          <target state="translated">&lt;code&gt;eagain&lt;/code&gt; -资源暂时不可用</target>
        </trans-unit>
        <trans-unit id="2b77a28f808897941f7957faf3870802a8b1b4d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ealign&lt;/code&gt; - EALIGN</source>
          <target state="translated">&lt;code&gt;ealign&lt;/code&gt; -EALIGN</target>
        </trans-unit>
        <trans-unit id="73fe5ba1c39c10b02ecef45d731f5cc948ad1ec9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ealready&lt;/code&gt; - Operation already in progress</source>
          <target state="translated">&lt;code&gt;ealready&lt;/code&gt; -操作正在进行中</target>
        </trans-unit>
        <trans-unit id="fa9f8ee2675777b13c8dd3149c36f018ef9d52b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ebade&lt;/code&gt; - Bad exchange descriptor</source>
          <target state="translated">&lt;code&gt;ebade&lt;/code&gt; -错误的交换描述符</target>
        </trans-unit>
        <trans-unit id="345608161dc45c2d891a9f54a66016b63ff612e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ebadf&lt;/code&gt; - Bad file number</source>
          <target state="translated">&lt;code&gt;ebadf&lt;/code&gt; -错误的文件编号</target>
        </trans-unit>
        <trans-unit id="521c40efbf72458304815b505d5ba642ba7e891b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ebadfd&lt;/code&gt; - File descriptor in bad state</source>
          <target state="translated">&lt;code&gt;ebadfd&lt;/code&gt; -处于不良状态的文件描述符</target>
        </trans-unit>
        <trans-unit id="5068b7a48dbca1388c29202a255de4ca6a39c5f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ebadmsg&lt;/code&gt; - Not a data message</source>
          <target state="translated">&lt;code&gt;ebadmsg&lt;/code&gt; -不是数据信息</target>
        </trans-unit>
        <trans-unit id="5e392c0f388fdfe7a467c0c9dd6424d6c866be27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ebadr&lt;/code&gt; - Bad request descriptor</source>
          <target state="translated">&lt;code&gt;ebadr&lt;/code&gt; -错误的请求描述符</target>
        </trans-unit>
        <trans-unit id="d2d55204466ecfc02bb0f07f33c4374f20ddd7f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ebadrpc&lt;/code&gt; - Bad RPC structure</source>
          <target state="translated">&lt;code&gt;ebadrpc&lt;/code&gt; -错误的RPC结构</target>
        </trans-unit>
        <trans-unit id="bd4bbeab4c0e94ea1d9093a6f486e8a4d099de5a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ebadrqc&lt;/code&gt; - Bad request code</source>
          <target state="translated">&lt;code&gt;ebadrqc&lt;/code&gt; -错误的请求代码</target>
        </trans-unit>
        <trans-unit id="e909c26b6f3cab35940f74e951dbb315e35ad206" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ebadslt&lt;/code&gt; - Invalid slot</source>
          <target state="translated">&lt;code&gt;ebadslt&lt;/code&gt; -无效的广告位</target>
        </trans-unit>
        <trans-unit id="3adf2baab88df72fcbac594781c1731bb7d238fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ebfont&lt;/code&gt; - Bad font file format</source>
          <target state="translated">&lt;code&gt;ebfont&lt;/code&gt; -错误的字体文件格式</target>
        </trans-unit>
        <trans-unit id="b2fa84d5408c4cb2ac9e31aa0044d4ee1ff1e9d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ebin&lt;/code&gt; - Required. Contains the Erlang object code, the &lt;code&gt;beam&lt;/code&gt; files. The &lt;code&gt;.app&lt;/code&gt; file must also be placed here.</source>
          <target state="translated">&lt;code&gt;ebin&lt;/code&gt; -必填。包含Erlang目标代码， &lt;code&gt;beam&lt;/code&gt; 文件。该 &lt;code&gt;.app&lt;/code&gt; 文件也必须放在这里。</target>
        </trans-unit>
        <trans-unit id="4fa121fdbbaf2c38de45f0099796666e958a373c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ebusy&lt;/code&gt; - File busy</source>
          <target state="translated">&lt;code&gt;ebusy&lt;/code&gt; -文件繁忙</target>
        </trans-unit>
        <trans-unit id="8d187bbf6c20594ac206cda3e5be0ba56355a74e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ec&lt;/code&gt; is a structure containing information about the C-node. It is used in other &lt;code&gt;ei&lt;/code&gt; functions for connecting and receiving data.</source>
          <target state="translated">&lt;code&gt;ec&lt;/code&gt; 是包含有关C节点信息的结构。它在其他 &lt;code&gt;ei&lt;/code&gt; 功能中用于连接和接收数据。</target>
        </trans-unit>
        <trans-unit id="13e6529ab0ed7674f317ca2597462445a44f4935" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ec&lt;/code&gt; is the &lt;code&gt;ei_cnode&lt;/code&gt; representing the current cnode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6340a11a3bc8bd9ce89fd41568927cda040c6ca0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ec&lt;/code&gt; is the C-node structure previously initiated by a call to &lt;code&gt;ei_connect_init()&lt;/code&gt; or &lt;code&gt;ei_connect_xinit()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ec&lt;/code&gt; 是先前通过调用 &lt;code&gt;ei_connect_init()&lt;/code&gt; 或 &lt;code&gt;ei_connect_xinit()&lt;/code&gt; 发起的C节点结构。</target>
        </trans-unit>
        <trans-unit id="afdad500375ddaef47fb87c7209e14cdecbf5534" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ec&lt;/code&gt; is the C-node structure.</source>
          <target state="translated">&lt;code&gt;ec&lt;/code&gt; 是C节点结构。</target>
        </trans-unit>
        <trans-unit id="e3416d6f2e71e8704055690440931e55bd73f834" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ec&lt;/code&gt; is the node structure of the node to unregister.</source>
          <target state="translated">&lt;code&gt;ec&lt;/code&gt; 是要注销的节点的节点结构。</target>
        </trans-unit>
        <trans-unit id="9198cdf1d84cf072370c01ff67cd3c441fafd696" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;echild&lt;/code&gt; - No children</source>
          <target state="translated">&lt;code&gt;echild&lt;/code&gt; -没有孩子</target>
        </trans-unit>
        <trans-unit id="d8c274cda0e7265a697f0208a5d2f6b2ea43125c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;echrng&lt;/code&gt; - Channel number out of range</source>
          <target state="translated">&lt;code&gt;echrng&lt;/code&gt; -频道编号超出范围</target>
        </trans-unit>
        <trans-unit id="f86009a519d34374f034ee01de66ece004213c92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ecomm&lt;/code&gt; - Communication error on send</source>
          <target state="translated">&lt;code&gt;ecomm&lt;/code&gt; -发送时发生通讯错误</target>
        </trans-unit>
        <trans-unit id="ad02f03d6a203fffc5404da7433b3dce465e04ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;econnaborted&lt;/code&gt; - Software caused connection abort</source>
          <target state="translated">&lt;code&gt;econnaborted&lt;/code&gt; -软件导致连接中止</target>
        </trans-unit>
        <trans-unit id="cd5292bfcde1c23a92c0b953fb2f9864055919e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;econnrefused&lt;/code&gt; - Connection refused</source>
          <target state="translated">&lt;code&gt;econnrefused&lt;/code&gt; -连接被拒绝</target>
        </trans-unit>
        <trans-unit id="9e02a71ef8223a81da0683e22f774c0548e5e3f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;econnreset&lt;/code&gt; - Connection reset by peer</source>
          <target state="translated">&lt;code&gt;econnreset&lt;/code&gt; -通过对等方重置连接</target>
        </trans-unit>
        <trans-unit id="64225ea069eca2fe11239f4dd101bbf3a344b646" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;edeadlk&lt;/code&gt; - Resource deadlock avoided</source>
          <target state="translated">&lt;code&gt;edeadlk&lt;/code&gt; -避免资源死锁</target>
        </trans-unit>
        <trans-unit id="095df8379d52a8da678df15db5e4fcfb4ed3f32e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;edeadlock&lt;/code&gt; - Resource deadlock avoided</source>
          <target state="translated">&lt;code&gt;edeadlock&lt;/code&gt; -避免资源死锁</target>
        </trans-unit>
        <trans-unit id="ab55eeadd852f02dc987140e5e80954ca723033a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;edestaddrreq&lt;/code&gt; - Destination address required</source>
          <target state="translated">&lt;code&gt;edestaddrreq&lt;/code&gt; -必需的目标地址</target>
        </trans-unit>
        <trans-unit id="32714baed792ef1ae2ba1ddeba140d9e1d5c75ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;edirty&lt;/code&gt; - Mounting a dirty fs without force</source>
          <target state="translated">&lt;code&gt;edirty&lt;/code&gt; -不用力就安装肮脏的fs</target>
        </trans-unit>
        <trans-unit id="c96fb6b356634fa47ecc45e13e4767f1a487be6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;edom&lt;/code&gt; - Math argument out of range</source>
          <target state="translated">&lt;code&gt;edom&lt;/code&gt; -数学参数超出范围</target>
        </trans-unit>
        <trans-unit id="c2b16bb6289f694cad74cd8a713645eaee77ff9d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;edotdot&lt;/code&gt; - Cross mount point</source>
          <target state="translated">&lt;code&gt;edotdot&lt;/code&gt; -交叉安装点</target>
        </trans-unit>
        <trans-unit id="bf780eaa3cf1f92292584c219151a16c7c97f893" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;edquot&lt;/code&gt; - Disk quota exceeded</source>
          <target state="translated">&lt;code&gt;edquot&lt;/code&gt; -超出磁盘配额</target>
        </trans-unit>
        <trans-unit id="8101e6d13cf9ad1420ddb02686af8efbc7ee96ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eduppkg&lt;/code&gt; - Duplicate package name</source>
          <target state="translated">&lt;code&gt;eduppkg&lt;/code&gt; -重复的软件包名称</target>
        </trans-unit>
        <trans-unit id="253045380edccb1e96e308e563f065d78d92da16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eexist&lt;/code&gt; - File already exists</source>
          <target state="translated">&lt;code&gt;eexist&lt;/code&gt; -文件已存在</target>
        </trans-unit>
        <trans-unit id="7861bdf01f2da8926a782fa7b91b00ece5ce08d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;efault&lt;/code&gt; - Bad address in system call argument</source>
          <target state="translated">&lt;code&gt;efault&lt;/code&gt; -系统调用参数中的错误地址</target>
        </trans-unit>
        <trans-unit id="16c138959d338b1ce08e97d4d9602167e5b1e243" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;efbig&lt;/code&gt; - File too large</source>
          <target state="translated">&lt;code&gt;efbig&lt;/code&gt; -文件太大</target>
        </trans-unit>
        <trans-unit id="31cc1351f1ed0ac67d43d86b384cf0bb5de1249f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;efile&lt;/code&gt;, which means use the local file system, this is the default.</source>
          <target state="translated">&lt;code&gt;efile&lt;/code&gt; ，这意味着使用本地文件系统，这是默认设置。</target>
        </trans-unit>
        <trans-unit id="ae15036943ab0422753787cf1a0571db4d5b858c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ehostdown&lt;/code&gt; - Host is down</source>
          <target state="translated">&lt;code&gt;ehostdown&lt;/code&gt; -主机已关闭</target>
        </trans-unit>
        <trans-unit id="41a1e20311ed6f9be07007469e8c77d42a57d62e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ehostunreach&lt;/code&gt; - Host is unreachable</source>
          <target state="translated">&lt;code&gt;ehostunreach&lt;/code&gt; -主机无法访问</target>
        </trans-unit>
        <trans-unit id="4057bd8b1f1bcdec284da63d635ca2a15dc8dc16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ei&lt;/code&gt; allows you to convert atoms, lists, numbers, and binaries to and from the binary format. This is useful when writing port programs and drivers. &lt;code&gt;ei&lt;/code&gt; uses a given buffer, no dynamic memory (except &lt;code&gt;ei_decode_fun()&lt;/code&gt;) and is often quite fast.</source>
          <target state="translated">&lt;code&gt;ei&lt;/code&gt; 允许您将原子，列表，数字和二进制与二进制格式进行相互转换。在编写端口程序和驱动程序时，这很有用。 &lt;code&gt;ei&lt;/code&gt; 使用给定的缓冲区，没有动态内存（ &lt;code&gt;ei_decode_fun()&lt;/code&gt; 除外），并且通常非常快。</target>
        </trans-unit>
        <trans-unit id="4f1822707a34fb31d15140ca9063ce11388efb7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ei&lt;/code&gt; also handles C-nodes, C-programs that talks Erlang distribution with Erlang nodes (or other C-nodes) using the Erlang distribution format. The difference between &lt;code&gt;ei&lt;/code&gt; and &lt;code&gt;erl_interface&lt;/code&gt; is that &lt;code&gt;ei&lt;/code&gt; uses the binary format directly when sending and receiving terms. It is also thread safe, and using threads, one process can handle multiple C-nodes. The &lt;code&gt;erl_interface&lt;/code&gt; library is built on top of &lt;code&gt;ei&lt;/code&gt;, but of legacy reasons, it does not allow for multiple C-nodes. In general, &lt;code&gt;ei&lt;/code&gt; is the preferred way of doing C-nodes.</source>
          <target state="translated">&lt;code&gt;ei&lt;/code&gt; 还处理C节点，即使用Erlang分发格式与Erlang节点（或其他C节点）进行Erlang分发的C程序。 &lt;code&gt;ei&lt;/code&gt; 和 &lt;code&gt;erl_interface&lt;/code&gt; 之间的区别在于， &lt;code&gt;ei&lt;/code&gt; 在发送和接收术语时直接使用二进制格式。它还是线程安全的，并且使用线程，一个进程可以处理多个C节点。该 &lt;code&gt;erl_interface&lt;/code&gt; 库是建立在之上 &lt;code&gt;ei&lt;/code&gt; ，但由于遗留原因，它不允许多个C-节点。通常， &lt;code&gt;ei&lt;/code&gt; 是制作C节点的首选方式。</target>
        </trans-unit>
        <trans-unit id="524434016cbe3cef038cae99407fe0bf4d8a1cbd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ei&lt;/code&gt; also handles C-nodes, C-programs that talks Erlang distribution with Erlang nodes (or other C-nodes) using the Erlang distribution format.The &lt;code&gt;ei&lt;/code&gt; library is thread safe, and using threads, one process can handle multiple C-nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3e17e50994cd69e93bdcc8d44a3d2a32c9a3da9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ei_listen&lt;/code&gt; will create a socket, bind to a port on the local interface identified by &lt;code&gt;adr&lt;/code&gt; (or all local interfaces if &lt;code&gt;ei_listen()&lt;/code&gt; is called), and mark the socket as a passive socket (that is, a socket that will be used for accepting incoming connections).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1c93b6c19f85a0fc04f92de1e46e22e3da2959e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ei_rpc()&lt;/code&gt; returns the number of bytes in the result on success and &lt;code&gt;-1&lt;/code&gt; on failure. &lt;code&gt;ei_rpc_from()&lt;/code&gt; returns the number of bytes, otherwise one of &lt;code&gt;ERL_TICK&lt;/code&gt;, &lt;code&gt;ERL_TIMEOUT&lt;/code&gt;, and &lt;code&gt;ERL_ERROR&lt;/code&gt;. When failing, all three functions set &lt;code&gt;erl_errno&lt;/code&gt; to one of the following:</source>
          <target state="translated">&lt;code&gt;ei_rpc()&lt;/code&gt; 如果成功则返回结果中的字节数，如果失败则返回 &lt;code&gt;-1&lt;/code&gt; 。 &lt;code&gt;ei_rpc_from()&lt;/code&gt; 返回字节数，否则返回 &lt;code&gt;ERL_TICK&lt;/code&gt; ， &lt;code&gt;ERL_TIMEOUT&lt;/code&gt; 和 &lt;code&gt;ERL_ERROR&lt;/code&gt; 之一。失败时，所有三个函数都将 &lt;code&gt;erl_errno&lt;/code&gt; 设置为以下之一：</target>
        </trans-unit>
        <trans-unit id="d9e4fb15102075457afaf44985139aa7327294ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ei_x_format_wo_ver()&lt;/code&gt; formats into a buffer, without the initial version byte.</source>
          <target state="translated">&lt;code&gt;ei_x_format_wo_ver()&lt;/code&gt; 格式化为缓冲区，没有初始版本字节。</target>
        </trans-unit>
        <trans-unit id="e61e585ef7827c4765a03c5e289877218bfe74d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ei_xconnect()&lt;/code&gt; requires the IP address of the remote host and the alive name of the remote node to be specified. &lt;code&gt;ei_connect()&lt;/code&gt; provides an alternative interface and determines the information from the node name provided.</source>
          <target state="translated">&lt;code&gt;ei_xconnect()&lt;/code&gt; 要求指定远程主机的IP地址和远程节点的活动名称。 &lt;code&gt;ei_connect()&lt;/code&gt; 提供了一个备用接口，并根据提供的节点名称确定信息。</target>
        </trans-unit>
        <trans-unit id="335002f005a585709de475d548e701b015c2235d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ei_xconnect()&lt;/code&gt; requires the IP address of the remote host and the alive name of the remote node to be specified. &lt;code&gt;ei_connect()&lt;/code&gt; provides an alternative interface and determines the information from the node name provided. The &lt;code&gt;ei_xconnect_host_port()&lt;/code&gt; function provides yet another alternative that will work even if there is no EPMD instance on the host where the remote node is running. The &lt;code&gt;ei_xconnect_host_port()&lt;/code&gt; function requires the IP address and port of the remote node to be specified. The &lt;code&gt;ei_connect_host_port()&lt;/code&gt; function is an alternative to &lt;code&gt;ei_xconnect_host_port()&lt;/code&gt; that lets the user specify a hostname instead of an IP address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fc4aad0082154201868dc5e78b89ad56b713f6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eidrm&lt;/code&gt; - Identifier removed</source>
          <target state="translated">&lt;code&gt;eidrm&lt;/code&gt; -标识符已删除</target>
        </trans-unit>
        <trans-unit id="4c51e97e2d1b60cae1995ba4c14365cf239a4da3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;einit&lt;/code&gt; - Initialization error</source>
          <target state="translated">&lt;code&gt;einit&lt;/code&gt; -初始化错误</target>
        </trans-unit>
        <trans-unit id="c83b6f5034fbf175dad5e5be227bf0995311d4ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;einprogress&lt;/code&gt; - Operation now in progress</source>
          <target state="translated">&lt;code&gt;einprogress&lt;/code&gt; -操作正在进行中</target>
        </trans-unit>
        <trans-unit id="60eb0596371343d8ec3552422eb1e34f1b36f5a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eintr&lt;/code&gt; - Interrupted system call</source>
          <target state="translated">&lt;code&gt;eintr&lt;/code&gt; -中断的系统调用</target>
        </trans-unit>
        <trans-unit id="089a96dc9bcb8bd0620721e7fb8a694b138afc61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;einval&lt;/code&gt; - Invalid argument</source>
          <target state="translated">&lt;code&gt;einval&lt;/code&gt; -无效的参数</target>
        </trans-unit>
        <trans-unit id="44bfb9ae0f478b8485ecf3c9086e42e717fdc5a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eio&lt;/code&gt; - I/O error</source>
          <target state="translated">&lt;code&gt;eio&lt;/code&gt; -I / O错误</target>
        </trans-unit>
        <trans-unit id="69f2935e8dc5ed0862669551b2a84e850d91a37e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eisconn&lt;/code&gt; - Socket is already connected</source>
          <target state="translated">&lt;code&gt;eisconn&lt;/code&gt; -套接字已连接</target>
        </trans-unit>
        <trans-unit id="ec13cd39a788418050c228cc6c985bb0287cbe7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eisdir&lt;/code&gt; - Illegal operation on a directory</source>
          <target state="translated">&lt;code&gt;eisdir&lt;/code&gt; -对目录的非法操作</target>
        </trans-unit>
        <trans-unit id="85e5e80b311605ed81269e38433a78231c243cda" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eisnam&lt;/code&gt; - Is a named file</source>
          <target state="translated">&lt;code&gt;eisnam&lt;/code&gt; -是一个命名文件</target>
        </trans-unit>
        <trans-unit id="0e8947aa5bf1f600183d01c17b799dedea023825" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;el2hlt&lt;/code&gt; - Level 2 halted</source>
          <target state="translated">&lt;code&gt;el2hlt&lt;/code&gt; -2级停止</target>
        </trans-unit>
        <trans-unit id="f4bb64c4510653aeb5bcf4358b3c523b6fb03c45" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;el2nsync&lt;/code&gt; - Level 2 not synchronized</source>
          <target state="translated">&lt;code&gt;el2nsync&lt;/code&gt; -2级未同步</target>
        </trans-unit>
        <trans-unit id="b379560048c7b16c077af37a1f69690c4f351025" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;el3hlt&lt;/code&gt; - Level 3 halted</source>
          <target state="translated">&lt;code&gt;el3hlt&lt;/code&gt; -3级停止</target>
        </trans-unit>
        <trans-unit id="7ab7bb692a6b3432357ba5a73cd34a83e0c73f16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;el3rst&lt;/code&gt; - Level 3 reset</source>
          <target state="translated">&lt;code&gt;el3rst&lt;/code&gt; -3级重置</target>
        </trans-unit>
        <trans-unit id="089ddb4594d97b9bd5c862b25c1247687f01825e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;elbin&lt;/code&gt; - ELBIN</source>
          <target state="translated">&lt;code&gt;elbin&lt;/code&gt; -ELBIN</target>
        </trans-unit>
        <trans-unit id="7893f5bf1e4c46bc941bcaa83534b3929acfdcbf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;elibacc&lt;/code&gt; - Cannot access a needed shared library</source>
          <target state="translated">&lt;code&gt;elibacc&lt;/code&gt; -无法访问所需的共享库</target>
        </trans-unit>
        <trans-unit id="357a0d86ed459bc468c8d677e6ff04d9d2040835" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;elibbad&lt;/code&gt; - Accessing a corrupted shared library</source>
          <target state="translated">&lt;code&gt;elibbad&lt;/code&gt; -访问损坏的共享库</target>
        </trans-unit>
        <trans-unit id="480018e122be7dff83c1c18a0429df262ad75fc3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;elibexec&lt;/code&gt; - Cannot exec a shared library directly</source>
          <target state="translated">&lt;code&gt;elibexec&lt;/code&gt; -无法直接执行共享库</target>
        </trans-unit>
        <trans-unit id="3e3ec25d0793f3f2912fb4fd28a414479e7dd127" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;elibmax&lt;/code&gt; - Attempting to link in more shared libraries than system limit</source>
          <target state="translated">&lt;code&gt;elibmax&lt;/code&gt; -尝试链接比系统限制更多的共享库</target>
        </trans-unit>
        <trans-unit id="3105e6fc8eecafc0b2847ad8cc45d60256cc4d81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;elibscn&lt;/code&gt; - &lt;code&gt;.lib&lt;/code&gt; section in &lt;code&gt;a.out&lt;/code&gt; corrupted</source>
          <target state="translated">&lt;code&gt;elibscn&lt;/code&gt; - &lt;code&gt;a.out&lt;/code&gt; 中的 &lt;code&gt;.lib&lt;/code&gt; 部分已损坏</target>
        </trans-unit>
        <trans-unit id="3f0b20734661bcc8b565e3f90edaef1087de0de3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;elnrng&lt;/code&gt; - Link number out of range</source>
          <target state="translated">&lt;code&gt;elnrng&lt;/code&gt; -链接数超出范围</target>
        </trans-unit>
        <trans-unit id="9fb670ce931ef5c988ddc7fd596bb9cd1d21c77f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eloop&lt;/code&gt; - Too many levels of symbolic links</source>
          <target state="translated">&lt;code&gt;eloop&lt;/code&gt; -太多级别的符号链接</target>
        </trans-unit>
        <trans-unit id="2fc1dce9eee780c04d77b3e8a50f5a25e8d2ff32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;emfile&lt;/code&gt; - Too many open files</source>
          <target state="translated">&lt;code&gt;emfile&lt;/code&gt; -打开的文件太多</target>
        </trans-unit>
        <trans-unit id="2a3b681741f87f0b7429e3b04d706f100ccf509d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;emlink&lt;/code&gt; - Too many links</source>
          <target state="translated">&lt;code&gt;emlink&lt;/code&gt; -链接太多</target>
        </trans-unit>
        <trans-unit id="8a1d37f90fe18af44c2a3274e64ac741146447d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;employees&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;employees&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="130bca2165b56dfb95f44ac6bc899a93d144d99e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;emsg-&amp;gt;to&lt;/code&gt; and &lt;code&gt;emsg-&amp;gt;from&lt;/code&gt; contain the pids of the sender and recipient of the link or unlink. &lt;code&gt;emsg-&amp;gt;msg&lt;/code&gt; is not used.</source>
          <target state="translated">&lt;code&gt;emsg-&amp;gt;to&lt;/code&gt; 和 &lt;code&gt;emsg-&amp;gt;from&lt;/code&gt; 包含链接或取消链接的发送者和接收者的pid。不使用 &lt;code&gt;emsg-&amp;gt;msg&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c4bbc97a72df14a53a10a400594a735a501ac68f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;emsg&lt;/code&gt; is a message containing the result of the function call.</source>
          <target state="translated">&lt;code&gt;emsg&lt;/code&gt; 是一条消息，其中包含函数调用的结果。</target>
        </trans-unit>
        <trans-unit id="03a7f883653ee2b993695a1420dcbbaf32bda40b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;emsgsize&lt;/code&gt; - Message too long</source>
          <target state="translated">&lt;code&gt;emsgsize&lt;/code&gt; -消息太长</target>
        </trans-unit>
        <trans-unit id="102cae3d1e294580076f0c6f8592c5ebc0801b3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;emultihop&lt;/code&gt; - Multihop attempted</source>
          <target state="translated">&lt;code&gt;emultihop&lt;/code&gt; -尝试多跳</target>
        </trans-unit>
        <trans-unit id="2556046b270169e44d74ac1fb288534230cb139a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enametoolong&lt;/code&gt; - Filename too long</source>
          <target state="translated">&lt;code&gt;enametoolong&lt;/code&gt; -文件名太长</target>
        </trans-unit>
        <trans-unit id="bcbd188eaa9772dd6612fedc594abf7a0a61490e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enavail&lt;/code&gt; - Unavailable</source>
          <target state="translated">&lt;code&gt;enavail&lt;/code&gt; -不可用</target>
        </trans-unit>
        <trans-unit id="6bbf5c89562882c073e0b94fa2ca48188ccc5cf9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;encoding&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt; if translation modifier &lt;code&gt;t&lt;/code&gt; is present.</source>
          <target state="translated">&lt;code&gt;encoding&lt;/code&gt; 如果存在翻译修饰符 &lt;code&gt;t&lt;/code&gt; ,则编码设置为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="77ad1d68e180848defa5a42f1cfd114110c7021e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;endOfTable&lt;/code&gt; if there are no accessible elements after this one.</source>
          <target state="translated">&lt;code&gt;endOfTable&lt;/code&gt; ,如果在此之后没有可访问元素。</target>
        </trans-unit>
        <trans-unit id="8ebcf0b3d7ac6630fc3b9e901b85d8574f089344" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;end_of_input&lt;/code&gt; or &lt;code&gt;{end_of_input, Value}}&lt;/code&gt; when there is no more input (&lt;code&gt;Value&lt;/code&gt; is explained below).</source>
          <target state="translated">&lt;code&gt;end_of_input&lt;/code&gt; 或 &lt;code&gt;{end_of_input, Value}}&lt;/code&gt; 当没有更多输入时（下面将解释 &lt;code&gt;Value&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="24c71d34c36f947bf9e07bafbc7fd0128dc8ea25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;end_of_trace&lt;/code&gt; received once when all trace messages are processed</source>
          <target state="translated">&lt;code&gt;end_of_trace&lt;/code&gt; 所有跟踪消息后，end_of_trace收到一次</target>
        </trans-unit>
        <trans-unit id="2054f317a98e73dae658de2ba34699735cf4aae8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;end_per_suite&lt;/code&gt; is called as the final stage of the test suite execution (after the last test case has finished). The function is meant to be used for cleaning up after &lt;code&gt;init_per_suite&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;end_per_suite&lt;/code&gt; 被称为测试套件执行的最后阶段（在最后一个测试用例完成之后）。该函数用于 &lt;code&gt;init_per_suite&lt;/code&gt; 之后的清理。</target>
        </trans-unit>
        <trans-unit id="95b3a9204cfbdde6851a387b796c8b1372e2cf81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;end_per_testcase/2&lt;/code&gt; is called after each test case has finished, enabling cleanup after &lt;code&gt;init_per_testcase&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;end_per_testcase/2&lt;/code&gt; 在每个测试用例完成之后调用end_per_testcase / 2，从而在 &lt;code&gt;init_per_testcase&lt;/code&gt; 之后启用清理。</target>
        </trans-unit>
        <trans-unit id="71141edd68217ecbf7ec91855ad9f0f114eec22c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;end_per_testcase&lt;/code&gt; can check if the test case was successful. (which in turn can determine how cleanup is to be performed). This is done by reading the value tagged with &lt;code&gt;tc_status&lt;/code&gt; from &lt;code&gt;Config&lt;/code&gt;. The value is one of the following:</source>
          <target state="translated">&lt;code&gt;end_per_testcase&lt;/code&gt; 可以检查测试用例是否成功。（这反过来可以确定如何执行清理）。这是通过从 &lt;code&gt;Config&lt;/code&gt; 读取用 &lt;code&gt;tc_status&lt;/code&gt; 标记的值来完成的。该值为以下之一：</target>
        </trans-unit>
        <trans-unit id="48bd9d18a9587e2a04f0df5a9be5f8de167faab0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enet&lt;/code&gt; - ENET</source>
          <target state="translated">&lt;code&gt;enet&lt;/code&gt; -ENET</target>
        </trans-unit>
        <trans-unit id="d6f6cddb018e4c86ad70e55e121582d34b1ea0d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enetdown&lt;/code&gt; - Network is down</source>
          <target state="translated">&lt;code&gt;enetdown&lt;/code&gt; -网络已关闭</target>
        </trans-unit>
        <trans-unit id="3190f061d30e04fb6a9271caec20dcc8cae8b1a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enetreset&lt;/code&gt; - Network dropped connection on reset</source>
          <target state="translated">&lt;code&gt;enetreset&lt;/code&gt; -重置时网络断开连接</target>
        </trans-unit>
        <trans-unit id="1a62bf7fb5581eaca549145ce947c94cfc5f3959" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enetunreach&lt;/code&gt; - Network is unreachable</source>
          <target state="translated">&lt;code&gt;enetunreach&lt;/code&gt; -网络无法访问</target>
        </trans-unit>
        <trans-unit id="4f8785aeddbafa426e841211571332ba5939a806" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enfile&lt;/code&gt; - File table overflow</source>
          <target state="translated">&lt;code&gt;enfile&lt;/code&gt; -文件表溢出</target>
        </trans-unit>
        <trans-unit id="54a8b1a4b729abfb9356f547e7fdeff3d76af8b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;engine_id&lt;/code&gt; - The &lt;code&gt;SnmpEngineID&lt;/code&gt; as defined in SNMP-FRAMEWORK-MIB. &lt;strong&gt;Mandatory&lt;/strong&gt;.</source>
          <target state="translated">&lt;code&gt;engine_id&lt;/code&gt; - SNMP-FRAMEWORK-MIB中定义的 &lt;code&gt;SnmpEngineID&lt;/code&gt; 。&lt;strong&gt;强制性的&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="6047ad8d8d40c1730109e8e27235f14def418518" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enif_get_local_pid&lt;/code&gt; will return false if argument &lt;code&gt;term&lt;/code&gt; is the atom &lt;code&gt;&lt;a href=&quot;#enif_make_pid&quot;&gt; undefined&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d8d1d7a7f6f9b985f49fcc957aef5fb8b65290a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enif_get_resource&lt;/code&gt; does not add a reference to the resource object. However, the pointer received in &lt;code&gt;*objp&lt;/code&gt; is guaranteed to be valid at least as long as the resource handle &lt;code&gt;term&lt;/code&gt; is valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75550d802589c6c6b20bac1563529e207c77a98e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enoano&lt;/code&gt; - Anode table overflow</source>
          <target state="translated">&lt;code&gt;enoano&lt;/code&gt; -阳极表溢出</target>
        </trans-unit>
        <trans-unit id="8b5d30d3536f96de39693eab21b683c9e068bb33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enobufs&lt;/code&gt; - No buffer space available</source>
          <target state="translated">&lt;code&gt;enobufs&lt;/code&gt; -没有可用的缓冲区空间</target>
        </trans-unit>
        <trans-unit id="9ade4c792c85383a29ecbaecd7d25e02675bd122" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enocsi&lt;/code&gt; - No CSI structure available</source>
          <target state="translated">&lt;code&gt;enocsi&lt;/code&gt; -没有可用的CSI结构</target>
        </trans-unit>
        <trans-unit id="b51598a142f5adfd48865e15d2853468237f6904" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enodata&lt;/code&gt; - No data available</source>
          <target state="translated">&lt;code&gt;enodata&lt;/code&gt; -无可用数据</target>
        </trans-unit>
        <trans-unit id="639726d99f469fa0e2c3a27f02d5fe5c112c4bbe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enodev&lt;/code&gt; - No such device</source>
          <target state="translated">&lt;code&gt;enodev&lt;/code&gt; -没有这样的设备</target>
        </trans-unit>
        <trans-unit id="207e9dbcef7e01416cb292284f380209b08848a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enoent&lt;/code&gt; - No such file or directory</source>
          <target state="translated">&lt;code&gt;enoent&lt;/code&gt; -没有这样的文件或目录</target>
        </trans-unit>
        <trans-unit id="3cec8eb5ae7ddb7d7764f3372daa2d4639a9effb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enoexec&lt;/code&gt; - Exec format error</source>
          <target state="translated">&lt;code&gt;enoexec&lt;/code&gt; -执行格式错误</target>
        </trans-unit>
        <trans-unit id="f675251cb3c179443922755eedf43090c4515f53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enolck&lt;/code&gt; - No locks available</source>
          <target state="translated">&lt;code&gt;enolck&lt;/code&gt; -无锁</target>
        </trans-unit>
        <trans-unit id="b27dbfa5ca362faa9bbad9c3f5a851ad95da1b11" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enolink&lt;/code&gt; - Link has been severed</source>
          <target state="translated">&lt;code&gt;enolink&lt;/code&gt; -链接已被切断</target>
        </trans-unit>
        <trans-unit id="18d5419c4c7dafc4ffba680f090c207753780a17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enomem&lt;/code&gt; - Not enough memory</source>
          <target state="translated">&lt;code&gt;enomem&lt;/code&gt; -没有足够的内存</target>
        </trans-unit>
        <trans-unit id="cc5bf49e1ed5cac7ae5e4342347a7f1aeb8023f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enomsg&lt;/code&gt; - No message of desired type</source>
          <target state="translated">&lt;code&gt;enomsg&lt;/code&gt; -没有所需类型的消息</target>
        </trans-unit>
        <trans-unit id="267e3cc8e7d629bfb57dabde53f4cd944f66da79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enonet&lt;/code&gt; - Machine is not on the network</source>
          <target state="translated">&lt;code&gt;enonet&lt;/code&gt; -机器不在网络上</target>
        </trans-unit>
        <trans-unit id="c0d0064742538f0cc7b2aafaa47cd3b373913a8c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enopkg&lt;/code&gt; - Package not installed</source>
          <target state="translated">&lt;code&gt;enopkg&lt;/code&gt; -未安装软件包</target>
        </trans-unit>
        <trans-unit id="dff3e3a7e09c55f7c822e50d7aeeef880bd851e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enoprotoopt&lt;/code&gt; - Bad protocol option</source>
          <target state="translated">&lt;code&gt;enoprotoopt&lt;/code&gt; -错误的协议选项</target>
        </trans-unit>
        <trans-unit id="5275d397f6cd736b2edca9458f06aa57eb1cbd25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enospc&lt;/code&gt; - No space left on device</source>
          <target state="translated">&lt;code&gt;enospc&lt;/code&gt; -设备上没有剩余空间</target>
        </trans-unit>
        <trans-unit id="192bdec7e1688f7d63574f033a7eeffedbe06a6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enosr&lt;/code&gt; - Out of stream resources or not a stream device</source>
          <target state="translated">&lt;code&gt;enosr&lt;/code&gt; -流资源不足或没有流设备</target>
        </trans-unit>
        <trans-unit id="238a62098e5522c7e83140c8c5f6f2fdb2a04538" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enosym&lt;/code&gt; - Unresolved symbol name</source>
          <target state="translated">&lt;code&gt;enosym&lt;/code&gt; -未解析的符号名称</target>
        </trans-unit>
        <trans-unit id="c8da2ae1a896bcd38d3b6a9dcf887cdc34b28716" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enosys&lt;/code&gt; - Function not implemented</source>
          <target state="translated">&lt;code&gt;enosys&lt;/code&gt; -功能未实现</target>
        </trans-unit>
        <trans-unit id="dec216448c3efc0faeb0edbea9314a0181d9bf35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enotblk&lt;/code&gt; - Block device required</source>
          <target state="translated">&lt;code&gt;enotblk&lt;/code&gt; -需要块设备</target>
        </trans-unit>
        <trans-unit id="bbbcb6b3a0232b5c17cddb598ce5486d8330a32a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enotconn&lt;/code&gt; - Socket is not connected</source>
          <target state="translated">&lt;code&gt;enotconn&lt;/code&gt; -套接字未连接</target>
        </trans-unit>
        <trans-unit id="3e856fac0948ae324d17302e6dcd8b7afdda165a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enotdir&lt;/code&gt; - Not a directory</source>
          <target state="translated">&lt;code&gt;enotdir&lt;/code&gt; -不是目录</target>
        </trans-unit>
        <trans-unit id="aec13d9ecfaec761c963eb0401f932c6b4b9f938" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enotempty&lt;/code&gt; - Directory not empty</source>
          <target state="translated">&lt;code&gt;enotempty&lt;/code&gt; -目录不为空</target>
        </trans-unit>
        <trans-unit id="36208f5ca80acaab61024d264f8e262047f77925" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enotnam&lt;/code&gt; - Not a named file</source>
          <target state="translated">&lt;code&gt;enotnam&lt;/code&gt; -不是命名文件</target>
        </trans-unit>
        <trans-unit id="d7bf022427ba88027346245447278833a84b30f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enotsock&lt;/code&gt; - Socket operation on non-socket</source>
          <target state="translated">&lt;code&gt;enotsock&lt;/code&gt; -非套接字上的套接字操作</target>
        </trans-unit>
        <trans-unit id="975ae1e1fcad4609f74ccb56d18372b4b618e2be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enotsup&lt;/code&gt; - Operation not supported</source>
          <target state="translated">&lt;code&gt;enotsup&lt;/code&gt; -不支持操作</target>
        </trans-unit>
        <trans-unit id="37baef27664f2f027f8596627a18fdd91eabac75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enotty&lt;/code&gt; - Inappropriate device for &lt;code&gt;ioctl&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;enotty&lt;/code&gt; -不适合 &lt;code&gt;ioctl&lt;/code&gt; 的设备</target>
        </trans-unit>
        <trans-unit id="c26af36618a187ea918910bd849a4767ee11c3ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enotuniq&lt;/code&gt; - Name not unique on network</source>
          <target state="translated">&lt;code&gt;enotuniq&lt;/code&gt; -名称在网络上不唯一</target>
        </trans-unit>
        <trans-unit id="d99513c6779f948197a541bcc8422a406bc4f431" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;entry : string&lt;/code&gt; :: Callback. Ex. &lt;code&gt;&quot;open&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;entry : string&lt;/code&gt; ::回调。例如 &lt;code&gt;&quot;open&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bb02e114e2c1fde43be0da07271a78e932961018" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;entry : string&lt;/code&gt; :: Code Location. Ex. &lt;code&gt;&quot;lists:sort/1&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;entry : string&lt;/code&gt; ::代码位置。例如 &lt;code&gt;&quot;lists:sort/1&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="50969a87c39c7067507ba1ec276755112123047b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;env&lt;/code&gt; is the environment to create the integer in.</source>
          <target state="translated">&lt;code&gt;env&lt;/code&gt; 是在其中创建整数的环境。</target>
        </trans-unit>
        <trans-unit id="90fb6782bb3c397635cfbc2261e23050ca063522" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enxio&lt;/code&gt; - No such device or address</source>
          <target state="translated">&lt;code&gt;enxio&lt;/code&gt; -没有这样的设备或地址</target>
        </trans-unit>
        <trans-unit id="d2f629d33624f31488b1207001514d888e268c43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eof&lt;/code&gt; is returned when input end is reached and no more data is available to the client process.</source>
          <target state="translated">&lt;code&gt;eof&lt;/code&gt; 当到达输入端并且没有更多数据可用于客户端进程时，将返回eof。</target>
        </trans-unit>
        <trans-unit id="e651310d843b6c7bd6e82b604450e074230f1a92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eopnotsupp&lt;/code&gt; - Operation not supported on socket</source>
          <target state="translated">&lt;code&gt;eopnotsupp&lt;/code&gt; -套接字不支持该操作</target>
        </trans-unit>
        <trans-unit id="24d7acce6b9b6b3034ac2fa3bd2e3167b56d7b30" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eperm&lt;/code&gt; - Not owner</source>
          <target state="translated">&lt;code&gt;eperm&lt;/code&gt; -不是所有者</target>
        </trans-unit>
        <trans-unit id="83fe66c0d41d687f28d271224381581a51e4f4d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;epfnosupport&lt;/code&gt; - Protocol family not supported</source>
          <target state="translated">&lt;code&gt;epfnosupport&lt;/code&gt; -不支持协议族</target>
        </trans-unit>
        <trans-unit id="a5890a451bc7bc2396126616a34b508e37acee62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;epipe&lt;/code&gt; - Broken pipe</source>
          <target state="translated">&lt;code&gt;epipe&lt;/code&gt; -断管</target>
        </trans-unit>
        <trans-unit id="3a3c9451329835184c27bda61d6c4f1db59493c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;epp(3)&lt;/code&gt;, &lt;code&gt;erl_id_trans(3)&lt;/code&gt;, &lt;code&gt;erl_lint(3)&lt;/code&gt;, &lt;code&gt;beam_lib(3)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;epp(3)&lt;/code&gt; ， &lt;code&gt;erl_id_trans(3)&lt;/code&gt; ， &lt;code&gt;erl_lint(3)&lt;/code&gt; ， &lt;code&gt;beam_lib(3)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c9cc6dfb6663cdc6905981a6aad8775ee92c2f6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;epp_dodger&lt;/code&gt; - bypasses the Erlang preprocessor.</source>
          <target state="translated">&lt;code&gt;epp_dodger&lt;/code&gt; -绕过Erlang预处理器。</target>
        </trans-unit>
        <trans-unit id="1bce7f5c9a030269923955a2f607ccb131557d9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eproclim&lt;/code&gt; - Too many processes</source>
          <target state="translated">&lt;code&gt;eproclim&lt;/code&gt; -流程太多</target>
        </trans-unit>
        <trans-unit id="ee317501a8917bf4010a5d1847674fd1b04f1d41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eprocunavail&lt;/code&gt; - Bad procedure for program</source>
          <target state="translated">&lt;code&gt;eprocunavail&lt;/code&gt; -程序错误的程序</target>
        </trans-unit>
        <trans-unit id="2a6544d4bd7e297872f3fbfd89bf149778b4a8c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eprof&lt;/code&gt; is based on the Erlang &lt;code&gt;trace_info&lt;/code&gt; BIFs. &lt;code&gt;eprof&lt;/code&gt; shows how much time has been used by each process, and in which function calls this time has been spent. Time is shown as percentage of total time and absolute time. For more information, see the &lt;code&gt;eprof&lt;/code&gt; manual page in Tools.</source>
          <target state="translated">&lt;code&gt;eprof&lt;/code&gt; 基于Erlang &lt;code&gt;trace_info&lt;/code&gt; BIF。 &lt;code&gt;eprof&lt;/code&gt; 显示每个进程已使用了多少时间，并且此时间花费在函数调用中。时间显示为总时间和绝对时间的百分比。有关更多信息，请参见&amp;ldquo; 工具&amp;rdquo;中的 &lt;code&gt;eprof&lt;/code&gt; 手册页。</target>
        </trans-unit>
        <trans-unit id="df8a0bfc19c4581b404979fadfe7bb7fe1af084e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eprof&lt;/code&gt; provides time information of each function used in the program. No call graph is produced, but &lt;code&gt;eprof&lt;/code&gt; has considerable less impact on the program it profiles.</source>
          <target state="translated">&lt;code&gt;eprof&lt;/code&gt; 提供程序中使用的每个功能的时间信息。没有生成调用图，但是 &lt;code&gt;eprof&lt;/code&gt; 对它描述的程序的影响要小得多。</target>
        </trans-unit>
        <trans-unit id="118e7ea83469a9ed5135f96574380a30caa372d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eprogmismatch&lt;/code&gt; - Wrong program version</source>
          <target state="translated">&lt;code&gt;eprogmismatch&lt;/code&gt; -程序版本错误</target>
        </trans-unit>
        <trans-unit id="3bc26d2260fdf4375c7fd2b218c14427464bcfb2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eprogunavail&lt;/code&gt; - RPC program unavailable</source>
          <target state="translated">&lt;code&gt;eprogunavail&lt;/code&gt; -RPC程序不可用</target>
        </trans-unit>
        <trans-unit id="704e5e1b7cb8deb8b66028feb0898d97ca3b81df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eproto&lt;/code&gt; - Protocol error</source>
          <target state="translated">&lt;code&gt;eproto&lt;/code&gt; -协议错误</target>
        </trans-unit>
        <trans-unit id="c0020dd6a856517b832382f8abd689c0c2eeed9f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eprotonosupport&lt;/code&gt; - Protocol not supported</source>
          <target state="translated">&lt;code&gt;eprotonosupport&lt;/code&gt; -不支持协议</target>
        </trans-unit>
        <trans-unit id="4b8b4842c1185ca09dc81075ef61632061cf04b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eprototype&lt;/code&gt; - Wrong protocol type for socket</source>
          <target state="translated">&lt;code&gt;eprototype&lt;/code&gt; -套接字的协议类型错误</target>
        </trans-unit>
        <trans-unit id="46f7516e9a6f87ecce854e8fe14964d1676c262b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erange&lt;/code&gt; - Math result unrepresentable</source>
          <target state="translated">&lt;code&gt;erange&lt;/code&gt; -数学结果无法表示</target>
        </trans-unit>
        <trans-unit id="2168cb87b30ae036d5a752f6631954b5bca507db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erefused&lt;/code&gt; - EREFUSED</source>
          <target state="translated">&lt;code&gt;erefused&lt;/code&gt; -已拒绝</target>
        </trans-unit>
        <trans-unit id="fcbd5c16cd9f879ec603082074b2199d36e01aa6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eremchg&lt;/code&gt; - Remote address changed</source>
          <target state="translated">&lt;code&gt;eremchg&lt;/code&gt; -远程地址已更改</target>
        </trans-unit>
        <trans-unit id="5c95010734339dc1d2a5d965eeb932f6d9de0ef4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eremdev&lt;/code&gt; - Remote device</source>
          <target state="translated">&lt;code&gt;eremdev&lt;/code&gt; -远程设备</target>
        </trans-unit>
        <trans-unit id="b2f04df4c1e858750d480db0e44d49d24ea12173" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eremote&lt;/code&gt; - Pathname hit remote filesystem</source>
          <target state="translated">&lt;code&gt;eremote&lt;/code&gt; -路径名命中远程文件系统</target>
        </trans-unit>
        <trans-unit id="7e9563a352891721a204a1c6ba35db8d2eece943" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eremoteio&lt;/code&gt; - Remote I/O error</source>
          <target state="translated">&lt;code&gt;eremoteio&lt;/code&gt; -远程I / O错误</target>
        </trans-unit>
        <trans-unit id="e0ac33ee9203cd0385e20aa9c0173c8736a05eda" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eremoterelease&lt;/code&gt; - EREMOTERELEASE</source>
          <target state="translated">&lt;code&gt;eremoterelease&lt;/code&gt; -删除</target>
        </trans-unit>
        <trans-unit id="cc66bcb60fa11e17ee7a373b05b8b0426e827c02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erfc(X)&lt;/code&gt; returns &lt;code&gt;1.0&lt;/code&gt; - &lt;code&gt;erf(X)&lt;/code&gt;, computed by methods that avoid cancellation for large &lt;code&gt;X&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;erfc(X)&lt;/code&gt; 返回 &lt;code&gt;1.0&lt;/code&gt; - &lt;code&gt;erf(X)&lt;/code&gt; ，由避免对大 &lt;code&gt;X&lt;/code&gt; 取消的方法计算。</target>
        </trans-unit>
        <trans-unit id="a89b1c7135dfce3f2ec861c7930ee0cb688dc19a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl&lt;/code&gt; invokes the code for the Erlang emulator (virtual machine), which supports the following flags:</source>
          <target state="translated">&lt;code&gt;erl&lt;/code&gt; 调用Erlang仿真器（虚拟机）的代码，该代码支持以下标志：</target>
        </trans-unit>
        <trans-unit id="72c212cae138df8bbf42d46cba38fbb6050a107d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl&lt;/code&gt; understands a number of command-line arguments, see the &lt;code&gt;erl(1)&lt;/code&gt; manual page in ERTS. Some of them are also described in this chapter.</source>
          <target state="translated">&lt;code&gt;erl&lt;/code&gt; 理解许多命令行参数，请参见ERTS中的 &lt;code&gt;erl(1)&lt;/code&gt; 手册页。本章还对其中一些进行了描述。</target>
        </trans-unit>
        <trans-unit id="49f89e41fc9c8d3ae611ef6c6c1dd9d5d7852bb4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_anno(3)&lt;/code&gt;, &lt;code&gt;shell_docs(3)&lt;/code&gt;, &lt;code&gt;EEP-48 Chapter in Erl_Docgen's User's Guide&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;code#get_doc-1&quot;&gt;code:get_doc/1&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d5f44fb6c1012e9c0e060443ea59a1df2d043c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_connect&lt;/code&gt;: Communication with distributed Erlang, see &lt;code&gt;&lt;a href=&quot;#cnode&quot;&gt;C nodes&lt;/a&gt;&lt;/code&gt; below</source>
          <target state="translated">&lt;code&gt;erl_connect&lt;/code&gt; ：与分布式Erlang的通信，请参见下面的 &lt;code&gt;&lt;a href=&quot;#cnode&quot;&gt;C nodes&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="05e08ca32ae709584e9cf5968c63680192d4b3ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_connect_init()&lt;/code&gt; provides an alternative interface that does not require as much information from the caller. Instead, &lt;code&gt;erl_connect_init()&lt;/code&gt; uses &lt;code&gt;gethostbyname()&lt;/code&gt; to obtain default values.</source>
          <target state="translated">&lt;code&gt;erl_connect_init()&lt;/code&gt; 提供了一个备用接口，该接口不需要来自调用方的太多信息。而是， &lt;code&gt;erl_connect_init()&lt;/code&gt; 使用 &lt;code&gt;gethostbyname()&lt;/code&gt; 获取默认值。</target>
        </trans-unit>
        <trans-unit id="5ed42cee4f0d59de8a0c21cbc5f26281d66a293b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_connect_xinit()&lt;/code&gt; stores for later use information about:</source>
          <target state="translated">&lt;code&gt;erl_connect_xinit()&lt;/code&gt; 存储以下信息供以后使用：</target>
        </trans-unit>
        <trans-unit id="eab23ac51e1e03f27475648663ab9f2fbebdee92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_decode()&lt;/code&gt; and &lt;code&gt;erl_decode_buf()&lt;/code&gt; decode the contents of a buffer and return the corresponding Erlang term. &lt;code&gt;erl_decode_buf()&lt;/code&gt; provides a simple mechanism for dealing with several encoded terms stored consecutively in the buffer.</source>
          <target state="translated">&lt;code&gt;erl_decode()&lt;/code&gt; 和 &lt;code&gt;erl_decode_buf()&lt;/code&gt; 解码缓冲区的内容并返回相应的Erlang项。 &lt;code&gt;erl_decode_buf()&lt;/code&gt; 提供了一种简单的机制来处理连续存储在缓冲区中的多个编码项。</target>
        </trans-unit>
        <trans-unit id="ba5ce02b66c6ebb8266816eb2a37f2798dcf9446" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_decode()&lt;/code&gt; returns an Erlang term corresponding to the contents of &lt;code&gt;bufp&lt;/code&gt; on success, otherwise &lt;code&gt;NULL&lt;/code&gt;. &lt;code&gt;erl_decode_buf()&lt;/code&gt; returns an Erlang term corresponding to the first of the consecutive terms in &lt;code&gt;bufpp&lt;/code&gt; and moves &lt;code&gt;bufpp&lt;/code&gt; forward to point to the next term in the buffer. On failure, each of the functions return &lt;code&gt;NULL&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;erl_decode()&lt;/code&gt; 成功时返回与 &lt;code&gt;bufp&lt;/code&gt; 内容相对应的Erlang术语，否则返回 &lt;code&gt;NULL&lt;/code&gt; 。 &lt;code&gt;erl_decode_buf()&lt;/code&gt; 返回对应于第一中连续术语的Erlang项 &lt;code&gt;bufpp&lt;/code&gt; 并移动 &lt;code&gt;bufpp&lt;/code&gt; 着指向在缓冲器中的下一个项。失败时，每个函数都将返回 &lt;code&gt;NULL&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="379b4dd10cbc4012f16c19966712684f66e8debd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_drv_cond_wait&lt;/code&gt; can return even if no one has signaled or broadcast on the condition variable. Code calling &lt;code&gt;erl_drv_cond_wait&lt;/code&gt; is always to be prepared for &lt;code&gt;erl_drv_cond_wait&lt;/code&gt; returning even if the condition that the thread was waiting for has not occurred. That is, when returning from &lt;code&gt;erl_drv_cond_wait&lt;/code&gt;, always check if the condition has occurred, and if not call &lt;code&gt;erl_drv_cond_wait&lt;/code&gt; again.</source>
          <target state="translated">&lt;code&gt;erl_drv_cond_wait&lt;/code&gt; 即使没有人通过条件变量发出信号或进行广播，erl_drv_cond_wait也可以返回。即使未发生线程正在等待的情况，调用 &lt;code&gt;erl_drv_cond_wait&lt;/code&gt; 的代码也总是要为 &lt;code&gt;erl_drv_cond_wait&lt;/code&gt; 返回而准备。也就是说，从 &lt;code&gt;erl_drv_cond_wait&lt;/code&gt; 返回时，请始终检查条件是否已发生，如果没有发生，请再次调用 &lt;code&gt;erl_drv_cond_wait&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="79e9b0e47149950882d7b60dc390797727177f33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_encode()&lt;/code&gt; and &lt;code&gt;erl_encode_buf()&lt;/code&gt; encode Erlang terms into external format for storage or transmission. &lt;code&gt;erl_encode_buf()&lt;/code&gt; provides a simple mechanism for encoding several terms consecutively in the same buffer.</source>
          <target state="translated">&lt;code&gt;erl_encode()&lt;/code&gt; 和 &lt;code&gt;erl_encode_buf()&lt;/code&gt; 将 Erlang术语编码为外部格式，以进行存储或传输。 &lt;code&gt;erl_encode_buf()&lt;/code&gt; 提供了一种简单的机制，用于在同一缓冲区中连续编码多个术语。</target>
        </trans-unit>
        <trans-unit id="4baf900ef87e2e2fe298443cfb69dc4f01e7196b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_err_quit()&lt;/code&gt; prints the specified string and terminates the program. For more information, see the &lt;code&gt;&lt;a href=&quot;erl_error&quot;&gt;erl_error&lt;/a&gt;&lt;/code&gt; module.</source>
          <target state="translated">&lt;code&gt;erl_err_quit()&lt;/code&gt; 打印指定的字符串并终止程序。有关更多信息，请参见 &lt;code&gt;&lt;a href=&quot;erl_error&quot;&gt;erl_error&lt;/a&gt;&lt;/code&gt; 模块。</target>
        </trans-unit>
        <trans-unit id="e8ad05d64d240eb35447227773b5efeb35da3b2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_errno&lt;/code&gt; is a &quot;modifiable lvalue&quot; (just like ISO C defines &lt;code&gt;errno&lt;/code&gt; to be) rather than a variable. This means it can be implemented as a macro (expanding to, for example, &lt;code&gt;*_erl_errno()&lt;/code&gt;). For reasons of thread safety (or task safety), this is exactly what we do on most platforms.</source>
          <target state="translated">&lt;code&gt;erl_errno&lt;/code&gt; 是一个&amp;ldquo;可修改的左值&amp;rdquo;（就像ISO C将 &lt;code&gt;errno&lt;/code&gt; 定义为一样），而不是一个变量。这意味着可以将其实现为宏（例如扩展为 &lt;code&gt;*_erl_errno()&lt;/code&gt; ）。出于线程安全（或任务安全）的原因，这正是我们在大多数平台上所做的。</target>
        </trans-unit>
        <trans-unit id="34bc77955b3edc6f1b005dd775d48e0ab7698cfa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_errno&lt;/code&gt; is initially (at program startup) zero and is then set by many &lt;code&gt;Erl_Interface&lt;/code&gt; functions on failure to a non-zero error code to indicate what kind of error it encountered. A successful function call can change &lt;code&gt;erl_errno&lt;/code&gt; (by calling some other function that fails), but no function does never set it to zero. This means that you cannot use &lt;code&gt;erl_errno&lt;/code&gt; to see &lt;strong&gt;if&lt;/strong&gt; a function call failed. Instead, each function reports failure in its own way (usually by returning a negative number or &lt;code&gt;NULL&lt;/code&gt;), in which case you can examine &lt;code&gt;erl_errno&lt;/code&gt; for details.</source>
          <target state="translated">&lt;code&gt;erl_errno&lt;/code&gt; 最初（在程序启动时）为零，然后在失败时由许多 &lt;code&gt;Erl_Interface&lt;/code&gt; 函数设置为非零错误代码，以指示遇到的错误类型。成功的函数调用可以更改 &lt;code&gt;erl_errno&lt;/code&gt; （通过调用其他失败的函数），但是没有函数永远不会将其设置为零。这意味着你不能使用 &lt;code&gt;erl_errno&lt;/code&gt; 看到&lt;strong&gt;，如果&lt;/strong&gt;一个函数调用失败。相反，每个函数都以自己的方式报告故障（通常通过返回负数或 &lt;code&gt;NULL&lt;/code&gt; ），在这种情况下，您可以检查 &lt;code&gt;erl_errno&lt;/code&gt; 以获得详细信息。</target>
        </trans-unit>
        <trans-unit id="5acd6abeba816006f87b24f69ff2b195240238f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_errno&lt;/code&gt; uses the error codes defined in your system's &lt;code&gt;&amp;lt;errno.h&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;erl_errno&lt;/code&gt; 使用系统的 &lt;code&gt;&amp;lt;errno.h&amp;gt;&lt;/code&gt; 中定义的错误代码。</target>
        </trans-unit>
        <trans-unit id="c80f4ee4dd5d5e5944250455f8a4fb7e666fa984" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_errno&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;erl_errno&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="d0255913a82bda8266c0f53fd482ec96e0c756fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_error&lt;/code&gt;: Error print routines</source>
          <target state="translated">&lt;code&gt;erl_error&lt;/code&gt; ：错误的打印例程</target>
        </trans-unit>
        <trans-unit id="49742a982f4b2c3d65ba0271a9f9167804fd4846" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_free_compound()&lt;/code&gt; recursively frees all of the subterms associated with a specified Erlang term, regardless of whether we are still holding pointers to the subterms.</source>
          <target state="translated">&lt;code&gt;erl_free_compound()&lt;/code&gt; 递归释放与指定的Erlang术语关联的所有子术语，无论我们是否仍持有指向这些子术语的指针。</target>
        </trans-unit>
        <trans-unit id="350f05cc0384f5d9c9b0647d551ddc37ead71eac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_global&lt;/code&gt;: Access globally registered names</source>
          <target state="translated">&lt;code&gt;erl_global&lt;/code&gt; ：访问全局注册的名称</target>
        </trans-unit>
        <trans-unit id="490136f48685bc8e7f8c28eeeb4b753f9cc34900" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_interface(3)&lt;/code&gt;, &lt;code&gt;mnesia(3)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;erl_interface(3)&lt;/code&gt; ， &lt;code&gt;mnesia(3)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fd8d30fa75a8dd672597b51ad9c0775fc3e85859" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_marshal&lt;/code&gt;, &lt;code&gt;erl_eterm&lt;/code&gt;, &lt;code&gt;erl_format&lt;/code&gt;, and &lt;code&gt;erl_malloc&lt;/code&gt;: Handling of the Erlang external term format</source>
          <target state="translated">&lt;code&gt;erl_marshal&lt;/code&gt; ， &lt;code&gt;erl_eterm&lt;/code&gt; ， &lt;code&gt;erl_format&lt;/code&gt; 和 &lt;code&gt;erl_malloc&lt;/code&gt; ：Erlang外部术语格式的处理</target>
        </trans-unit>
        <trans-unit id="efb7d603ad2ca6fa5979574f628b6e1c162ab191" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_match&lt;/code&gt; binds the contents of &lt;code&gt;Age&lt;/code&gt; to &lt;code&gt;21&lt;/code&gt; the first time it reaches the variable.</source>
          <target state="translated">&lt;code&gt;erl_match&lt;/code&gt; 第一次将 &lt;code&gt;Age&lt;/code&gt; 的内容绑定到 &lt;code&gt;21&lt;/code&gt; 时。</target>
        </trans-unit>
        <trans-unit id="af3381bc3757ea5261200b0904f682283cefe98b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_msg_tracer.c&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;erl_msg_tracer.c&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="ea57a0603e747c503f3a87106e1a80f8b2912c6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_msg_tracer.erl&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;erl_msg_tracer.erl&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="89cb1a04729fbf36b9855226acaf9cc258a9716d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_parse:abstract(T)&lt;/code&gt; is equivalent to &lt;code&gt;erl_parse:abstract(T, 0)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;erl_parse:abstract(T)&lt;/code&gt; 等效于 &lt;code&gt;erl_parse:abstract(T, 0)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2093087b106d203fc3331e7c52e280825f272e4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_posix_msg&lt;/code&gt;, The Windows 95 Registry (book from O'Reilly), Win32 Programmer's Reference (from Microsoft)</source>
          <target state="translated">&lt;code&gt;erl_posix_msg&lt;/code&gt; ，Windows 95注册表（O'Reilly出书），Win32程序员参考（来自Microsoft）</target>
        </trans-unit>
        <trans-unit id="cc72680de9e578548629cdb44d689e02a1caf3c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_prim_loader&lt;/code&gt; knows about the environment and how to fetch modules.</source>
          <target state="translated">&lt;code&gt;erl_prim_loader&lt;/code&gt; 知道环境以及如何获取模块。</target>
        </trans-unit>
        <trans-unit id="08fa747747934ae4281559134142942e7b3025fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_rcp_from()&lt;/code&gt; returns &lt;code&gt;ERL_MSG&lt;/code&gt; on success (with &lt;code&gt;Emsg&lt;/code&gt; now containing the reply tuple), otherwise one of &lt;code&gt;ERL_TICK&lt;/code&gt;, &lt;code&gt;ERL_TIMEOUT&lt;/code&gt;, or &lt;code&gt;ERL_ERROR&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;erl_rcp_from()&lt;/code&gt; 成功返回 &lt;code&gt;ERL_MSG&lt;/code&gt; （ &lt;code&gt;Emsg&lt;/code&gt; 现在包含回复元组），否则 &lt;code&gt;ERL_TICK&lt;/code&gt; ， &lt;code&gt;ERL_TIMEOUT&lt;/code&gt; 或 &lt;code&gt;ERL_ERROR&lt;/code&gt; 之一。</target>
        </trans-unit>
        <trans-unit id="89c060673603e3855cc1a3582950f440f3246668" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_receive()&lt;/code&gt; receives the message into a buffer, while &lt;code&gt;erl_receive_msg()&lt;/code&gt; decodes the message into an Erlang term.</source>
          <target state="translated">&lt;code&gt;erl_receive()&lt;/code&gt; 将消息接收到缓冲区中，而 &lt;code&gt;erl_receive_msg()&lt;/code&gt; 将消息解码为Erlang术语。</target>
        </trans-unit>
        <trans-unit id="d4ac18969a90445e9ba83fceb181b0b596248c83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_rpc()&lt;/code&gt; returns the remote function's return value on success, otherwise &lt;code&gt;NULL&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;erl_rpc()&lt;/code&gt; 成功返回远程函数的返回值，否则返回 &lt;code&gt;NULL&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3e044b0f96b07d741727eb619036b486758dba48" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_rpc_to()&lt;/code&gt; returns &lt;code&gt;0&lt;/code&gt; on success, otherwise a negative number.</source>
          <target state="translated">&lt;code&gt;erl_rpc_to()&lt;/code&gt; 成功返回 &lt;code&gt;0&lt;/code&gt; ，否则返回负数。</target>
        </trans-unit>
        <trans-unit id="c5ed49df2e5370b4d15786dbb7dcfa2585472403" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_tidy:dir/0&lt;/code&gt; (use https://github.com/richcarl/erl_tidy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e9a4d074b6c1eadc7f4885abd8f9359daaf9a79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_tidy:dir/1&lt;/code&gt; (use https://github.com/richcarl/erl_tidy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4856de7a8b8262cc1d129b31fc7a83b0eb3ef2ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_tidy:file/1&lt;/code&gt; (use https://github.com/richcarl/erl_tidy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbc83e02b04d65d011bb83229b2a9a959dc1a505" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_tidy:module/1&lt;/code&gt; (use https://github.com/richcarl/erl_tidy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d9e96546c029664c29f220826defeafdaef21bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_tidy:module/2&lt;/code&gt; (use https://github.com/richcarl/erl_tidy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca8e4d92e12ea7bf88d771549108973539edd2f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_var_content()&lt;/code&gt; can be used to retrieve the content of any variables bound as a result of a call to &lt;code&gt;erl_match()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;erl_var_content()&lt;/code&gt; 可用于检索由于调用 &lt;code&gt;erl_match()&lt;/code&gt; 而绑定的任何变量的内容。</target>
        </trans-unit>
        <trans-unit id="ffa2b16333b2357002f2b172891b3aeee189267a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_xcomp_after_morecore_hook&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt;. Defaults to &lt;code&gt;no&lt;/code&gt;. If &lt;code&gt;yes&lt;/code&gt;, the target system must have a working &lt;code&gt;__after_morecore_hook&lt;/code&gt; that can be used for tracking used &lt;code&gt;malloc()&lt;/code&gt; implementations core memory usage. This is currently only used by unsupported features.</source>
          <target state="translated">&lt;code&gt;erl_xcomp_after_morecore_hook&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt; 。默认为 &lt;code&gt;no&lt;/code&gt; 。如果 &lt;code&gt;yes&lt;/code&gt; ，则目标系统必须具有一个有效的 &lt;code&gt;__after_morecore_hook&lt;/code&gt; ，该跟踪可用于跟踪已使用的 &lt;code&gt;malloc()&lt;/code&gt; 实现核心内存使用情况。当前仅由不支持的功能使用。</target>
        </trans-unit>
        <trans-unit id="106ac2ae4f4d78615c4b22c9cdecd2ff5ea16abc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_xcomp_bigendian&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt;. No default. If &lt;code&gt;yes&lt;/code&gt;, the target system must be big endian. If &lt;code&gt;no&lt;/code&gt;, little endian. This can often be automatically detected, but not always. If not automatically detected, &lt;code&gt;configure&lt;/code&gt; will fail unless this variable is set. Since no default value is used, &lt;code&gt;configure&lt;/code&gt; will try to figure this out automatically.</source>
          <target state="translated">&lt;code&gt;erl_xcomp_bigendian&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt; 。没有默认值。如果 &lt;code&gt;yes&lt;/code&gt; ，则目标系统必须是big endian。如果 &lt;code&gt;no&lt;/code&gt; ，则为小端。通常可以自动检测到此情况，但并非总是如此。如果未自动检测到，除非设置了此变量，否则 &lt;code&gt;configure&lt;/code&gt; 将失败。由于未使用默认值，因此 &lt;code&gt;configure&lt;/code&gt; 会尝试自动解决此问题。</target>
        </trans-unit>
        <trans-unit id="fb0788951887b98a8dbe08eb03f7145f14563a31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_xcomp_build&lt;/code&gt; - The build system used. This value will be passed as &lt;code&gt;--build=$erl_xcomp_build&lt;/code&gt; argument to the &lt;code&gt;configure&lt;/code&gt; script. It does not have to be a full &lt;code&gt;CPU-VENDOR-OS&lt;/code&gt; triplet, but can be. The full &lt;code&gt;CPU-VENDOR-OS&lt;/code&gt; triplet will be created by &lt;code&gt;$ERL_TOP/erts/autoconf/config.sub $erl_xcomp_build&lt;/code&gt;. If set to &lt;code&gt;guess&lt;/code&gt;, the build system will be guessed using &lt;code&gt;$ERL_TOP/erts/autoconf/config.guess&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;erl_xcomp_build&lt;/code&gt; -使用的构建系统。该值将作为 &lt;code&gt;--build=$erl_xcomp_build&lt;/code&gt; 参数传递给 &lt;code&gt;configure&lt;/code&gt; 脚本。它不必是完整的 &lt;code&gt;CPU-VENDOR-OS&lt;/code&gt; 三元组，但是可以。完整的 &lt;code&gt;CPU-VENDOR-OS&lt;/code&gt; 三元组将由 &lt;code&gt;$ERL_TOP/erts/autoconf/config.sub $erl_xcomp_build&lt;/code&gt; 。如果设置为 &lt;code&gt;guess&lt;/code&gt; ，将使用 &lt;code&gt;$ERL_TOP/erts/autoconf/config.guess&lt;/code&gt; 猜测构建系统。</target>
        </trans-unit>
        <trans-unit id="0d2e7a09a0a046af724617716e923bd5dc46a979" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_xcomp_clock_gettime_cpu_time&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt;. Defaults to &lt;code&gt;no&lt;/code&gt;. If &lt;code&gt;yes&lt;/code&gt;, the target system must have a working &lt;code&gt;clock_gettime()&lt;/code&gt; implementation that can be used for retrieving process CPU time.</source>
          <target state="translated">&lt;code&gt;erl_xcomp_clock_gettime_cpu_time&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt; 。默认为 &lt;code&gt;no&lt;/code&gt; 。如果 &lt;code&gt;yes&lt;/code&gt; ，则目标系统必须具有一个有效的 &lt;code&gt;clock_gettime()&lt;/code&gt; 实现，该实现可用于检索进程CPU时间。</target>
        </trans-unit>
        <trans-unit id="ea113987d8c14aed502fe757d3bfa667e4b81151" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_xcomp_code_model_small&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt;. Default to &lt;code&gt;no&lt;/code&gt;. If &lt;code&gt;yes&lt;/code&gt;, the target system must place the beam.smp executable in the lower 2 GB of memory. That is it should not use position independent executable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93989cef7ebb320f151ef5c78056c91b8be2ae50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_xcomp_configure_flags&lt;/code&gt; - Extra configure flags to pass to the &lt;code&gt;configure&lt;/code&gt; script.</source>
          <target state="translated">&lt;code&gt;erl_xcomp_configure_flags&lt;/code&gt; -额外的配置标志传递给 &lt;code&gt;configure&lt;/code&gt; 脚本。</target>
        </trans-unit>
        <trans-unit id="9fc611160841c3877cca40ed51cce51ec4d3a98f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_xcomp_dlsym_brk_wrappers&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt;. Defaults to &lt;code&gt;no&lt;/code&gt;. If &lt;code&gt;yes&lt;/code&gt;, the target system must have a working &lt;code&gt;dlsym(RTLD_NEXT, &amp;lt;S&amp;gt;)&lt;/code&gt; implementation that can be used on &lt;code&gt;brk&lt;/code&gt; and &lt;code&gt;sbrk&lt;/code&gt; symbols used by the &lt;code&gt;malloc()&lt;/code&gt; implementation in use, and by this track the &lt;code&gt;malloc()&lt;/code&gt; implementations core memory usage. This is currently only used by unsupported features.</source>
          <target state="translated">&lt;code&gt;erl_xcomp_dlsym_brk_wrappers&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt; 。默认为 &lt;code&gt;no&lt;/code&gt; 。如果 &lt;code&gt;yes&lt;/code&gt; ，则目标系统必须具有有效的 &lt;code&gt;dlsym(RTLD_NEXT, &amp;lt;S&amp;gt;)&lt;/code&gt; 实现，该实现可以在使用中的 &lt;code&gt;malloc()&lt;/code&gt; 实现所使用的 &lt;code&gt;brk&lt;/code&gt; 和 &lt;code&gt;sbrk&lt;/code&gt; 符号上使用，并以此跟踪 &lt;code&gt;malloc()&lt;/code&gt; 实现的核心内存使用情况。当前仅由不支持的功能使用。</target>
        </trans-unit>
        <trans-unit id="88772d054eb8016bb1571c489deaadde7477ef0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_xcomp_double_middle&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt;. Defaults to &lt;code&gt;no&lt;/code&gt;. If &lt;code&gt;yes&lt;/code&gt;, the target system must have doubles in &quot;middle-endian&quot; format. If &lt;code&gt;no&lt;/code&gt;, it has &quot;regular&quot; endianness.</source>
          <target state="translated">&lt;code&gt;erl_xcomp_double_middle&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt; 。默认为 &lt;code&gt;no&lt;/code&gt; 。如果 &lt;code&gt;yes&lt;/code&gt; ，则目标系统必须具有&amp;ldquo;中端&amp;rdquo;格式的双精度型。如果 &lt;code&gt;no&lt;/code&gt; ，则具有&amp;ldquo;常规&amp;rdquo;字节序。</target>
        </trans-unit>
        <trans-unit id="062309279417fd3e6eea7ce95bfd1cb641ae88a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_xcomp_getaddrinfo&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt;. Defaults to &lt;code&gt;no&lt;/code&gt;. If &lt;code&gt;yes&lt;/code&gt;, the target system must have a working &lt;code&gt;getaddrinfo()&lt;/code&gt; implementation that can handle both IPv4 and IPv6.</source>
          <target state="translated">&lt;code&gt;erl_xcomp_getaddrinfo&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt; 。默认为 &lt;code&gt;no&lt;/code&gt; 。如果 &lt;code&gt;yes&lt;/code&gt; ，则目标系统必须具有可以处理IPv4和IPv6 的有效 &lt;code&gt;getaddrinfo()&lt;/code&gt; 实现。</target>
        </trans-unit>
        <trans-unit id="62ef40ba2e6666bf10a25e23fa6e022f5d43ccad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_xcomp_gethrvtime_procfs_ioctl&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt;. Defaults to &lt;code&gt;no&lt;/code&gt;. If &lt;code&gt;yes&lt;/code&gt;, the target system must have a working &lt;code&gt;gethrvtime()&lt;/code&gt; implementation and is used with procfs &lt;code&gt;ioctl()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;erl_xcomp_gethrvtime_procfs_ioctl&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt; 。默认为 &lt;code&gt;no&lt;/code&gt; 。如果 &lt;code&gt;yes&lt;/code&gt; ，则目标系统必须具有有效的 &lt;code&gt;gethrvtime()&lt;/code&gt; 实现，并与procfs &lt;code&gt;ioctl()&lt;/code&gt; 一起使用。</target>
        </trans-unit>
        <trans-unit id="de14cddf739b273dffb0ae8cd1c96f5b04ac40e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_xcomp_host&lt;/code&gt; - Cross host/target system to build for. This value will be passed as &lt;code&gt;--host=$erl_xcomp_host&lt;/code&gt; argument to the &lt;code&gt;configure&lt;/code&gt; script. It does not have to be a full &lt;code&gt;CPU-VENDOR-OS&lt;/code&gt; triplet, but can be. The full &lt;code&gt;CPU-VENDOR-OS&lt;/code&gt; triplet will be created by &lt;code&gt;$ERL_TOP/erts/autoconf/config.sub $erl_xcomp_host&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;erl_xcomp_host&lt;/code&gt; -要构建的跨主机/目标系统。该值将作为 &lt;code&gt;--host=$erl_xcomp_host&lt;/code&gt; 参数传递给 &lt;code&gt;configure&lt;/code&gt; 脚本。它不必是完整的 &lt;code&gt;CPU-VENDOR-OS&lt;/code&gt; 三元组，但是可以。完整的 &lt;code&gt;CPU-VENDOR-OS&lt;/code&gt; 三元组将由 &lt;code&gt;$ERL_TOP/erts/autoconf/config.sub $erl_xcomp_host&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d8a2469b397bddd3193a3cceadcdc867f41c4929" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_xcomp_isysroot&lt;/code&gt; - The absolute path to the system root for includes of the cross compilation environment. If not set, this value defaults to &lt;code&gt;$erl_xcomp_sysroot&lt;/code&gt;, i.e., only set this value if the include system root path is not the same as the system root path.</source>
          <target state="translated">&lt;code&gt;erl_xcomp_isysroot&lt;/code&gt; -包含交叉编译环境的系统根的绝对路径。如果未设置，则该值默认为 &lt;code&gt;$erl_xcomp_sysroot&lt;/code&gt; ，即，仅在include系统根路径与系统根路径不同时设置此值。</target>
        </trans-unit>
        <trans-unit id="a174542bd82e842d632bc9a19384e17908d3094d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_xcomp_kqueue&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt;. Defaults to &lt;code&gt;no&lt;/code&gt;. If &lt;code&gt;yes&lt;/code&gt;, the target system must have a working &lt;code&gt;kqueue()&lt;/code&gt; implementation that returns a file descriptor which can be used by &lt;code&gt;poll()&lt;/code&gt; and/or &lt;code&gt;select()&lt;/code&gt;. If &lt;code&gt;no&lt;/code&gt; and the target system has not got &lt;code&gt;epoll()&lt;/code&gt; or &lt;code&gt;/dev/poll&lt;/code&gt;, the kernel-poll feature will be disabled.</source>
          <target state="translated">&lt;code&gt;erl_xcomp_kqueue&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt; 。默认为 &lt;code&gt;no&lt;/code&gt; 。如果 &lt;code&gt;yes&lt;/code&gt; ，则目标系统必须具有有效的 &lt;code&gt;kqueue()&lt;/code&gt; 实现，该实现返回一个文件描述符，该文件描述符可以由 &lt;code&gt;poll()&lt;/code&gt; 和/或 &lt;code&gt;select()&lt;/code&gt; 使用。如果 &lt;code&gt;no&lt;/code&gt; ，并且目标系统没有 &lt;code&gt;epoll()&lt;/code&gt; 或 &lt;code&gt;/dev/poll&lt;/code&gt; ，则将禁用内核轮询功能。</target>
        </trans-unit>
        <trans-unit id="b7613c86b3bd0e02cd1f155080c92d4b46295b46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_xcomp_linux_clock_gettime_correction&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt;. Defaults to &lt;code&gt;yes&lt;/code&gt; on Linux; otherwise, &lt;code&gt;no&lt;/code&gt;. If &lt;code&gt;yes&lt;/code&gt;, &lt;code&gt;clock_gettime(CLOCK_MONOTONIC, _)&lt;/code&gt; on the target system must work. This variable is recommended to be set to &lt;code&gt;no&lt;/code&gt; on Linux systems with kernel versions less than 2.6.</source>
          <target state="translated">&lt;code&gt;erl_xcomp_linux_clock_gettime_correction&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt; 。在Linux上默认为 &lt;code&gt;yes&lt;/code&gt; ；否则， &lt;code&gt;no&lt;/code&gt; 。如果 &lt;code&gt;yes&lt;/code&gt; ，则目标系统上的 &lt;code&gt;clock_gettime(CLOCK_MONOTONIC, _)&lt;/code&gt; 必须正常工作。建议在内核版本低于2.6的Linux系统上将此变量设置为 &lt;code&gt;no&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2d3e383de5424f1e5dee790ee61b3f671152983e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_xcomp_linux_nptl&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt;. Defaults to &lt;code&gt;yes&lt;/code&gt; on Linux; otherwise, &lt;code&gt;no&lt;/code&gt;. If &lt;code&gt;yes&lt;/code&gt;, the target system must have NPTL (Native POSIX Thread Library). Older Linux systems have LinuxThreads instead of NPTL (Linux kernel versions typically less than 2.6).</source>
          <target state="translated">&lt;code&gt;erl_xcomp_linux_nptl&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt; 。在Linux上默认为 &lt;code&gt;yes&lt;/code&gt; ；否则， &lt;code&gt;no&lt;/code&gt; 。如果 &lt;code&gt;yes&lt;/code&gt; ，则目标系统必须具有NPTL（本地POSIX线程库）。较旧的Linux系统具有LinuxThreads而不是NPTL（Linux内核版本通常小于2.6）。</target>
        </trans-unit>
        <trans-unit id="cc0916eebc7a8310a6d4f48aed9731ce70a892fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_xcomp_linux_usable_sigaltstack&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt;. Defaults to &lt;code&gt;yes&lt;/code&gt; on Linux; otherwise, &lt;code&gt;no&lt;/code&gt;. If &lt;code&gt;yes&lt;/code&gt;, &lt;code&gt;sigaltstack()&lt;/code&gt; must be usable on the target system. &lt;code&gt;sigaltstack()&lt;/code&gt; on Linux kernel versions less than 2.4 are broken.</source>
          <target state="translated">&lt;code&gt;erl_xcomp_linux_usable_sigaltstack&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt; 。在Linux上默认为 &lt;code&gt;yes&lt;/code&gt; ；否则， &lt;code&gt;no&lt;/code&gt; 。如果 &lt;code&gt;yes&lt;/code&gt; ，则 &lt;code&gt;sigaltstack()&lt;/code&gt; 必须在目标系统上可用。低于2.4的Linux内核上的 &lt;code&gt;sigaltstack()&lt;/code&gt; 已损坏。</target>
        </trans-unit>
        <trans-unit id="c2acd0cc21779f12608e8b02afc45f6f35d3f129" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_xcomp_linux_usable_sigusrx&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt;. Defaults to &lt;code&gt;yes&lt;/code&gt;. If &lt;code&gt;yes&lt;/code&gt;, the &lt;code&gt;SIGUSR1&lt;/code&gt; and &lt;code&gt;SIGUSR2&lt;/code&gt; signals must be usable by the ERTS. Old LinuxThreads thread libraries (Linux kernel versions typically less than 2.2) used these signals and made them unusable by the ERTS.</source>
          <target state="translated">&lt;code&gt;erl_xcomp_linux_usable_sigusrx&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt; 。默认为 &lt;code&gt;yes&lt;/code&gt; 。如果 &lt;code&gt;yes&lt;/code&gt; ，则ERTS必须使用 &lt;code&gt;SIGUSR1&lt;/code&gt; 和 &lt;code&gt;SIGUSR2&lt;/code&gt; 信号。旧的LinuxThreads线程库（Linux内核版本通常低于2.2）使用了这些信号，并使其无法由ERTS使用。</target>
        </trans-unit>
        <trans-unit id="cfcf1f57f212db2dd52856094c1fc2c9722d44db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_xcomp_poll&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt;. Defaults to &lt;code&gt;no&lt;/code&gt; on Darwin/MacOSX; otherwise, &lt;code&gt;yes&lt;/code&gt;. If &lt;code&gt;yes&lt;/code&gt;, the target system must have a working &lt;code&gt;poll()&lt;/code&gt; implementation that also can handle devices. If &lt;code&gt;no&lt;/code&gt;, &lt;code&gt;select()&lt;/code&gt; will be used instead of &lt;code&gt;poll()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;erl_xcomp_poll&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt; 。在Darwin / MacOSX上默认为 &lt;code&gt;no&lt;/code&gt; ；否则， &lt;code&gt;yes&lt;/code&gt; 。如果 &lt;code&gt;yes&lt;/code&gt; ，则目标系统必须具有可以处理设备的有效 &lt;code&gt;poll()&lt;/code&gt; 实现。如果 &lt;code&gt;no&lt;/code&gt; ，将使用 &lt;code&gt;select()&lt;/code&gt; 代替 &lt;code&gt;poll()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4509c2e0afa469bdbca4de5f6467f7509e094da4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_xcomp_posix_memalign&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt;. Defaults to &lt;code&gt;yes&lt;/code&gt; if &lt;code&gt;posix_memalign&lt;/code&gt; system call exists; otherwise &lt;code&gt;no&lt;/code&gt;. If &lt;code&gt;yes&lt;/code&gt;, the target system must have a &lt;code&gt;posix_memalign&lt;/code&gt; implementation that accepts larger than page size alignment.</source>
          <target state="translated">&lt;code&gt;erl_xcomp_posix_memalign&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt; 。如果存在 &lt;code&gt;posix_memalign&lt;/code&gt; 系统调用，则默认为 &lt;code&gt;yes&lt;/code&gt; ；否则 &lt;code&gt;no&lt;/code&gt; 。如果 &lt;code&gt;yes&lt;/code&gt; ，则目标系统必须具有 &lt;code&gt;posix_memalign&lt;/code&gt; 实现，该实现接受大于页面大小的对齐。</target>
        </trans-unit>
        <trans-unit id="269062cd25f17f7a80763e13e0627d10f6195d71" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_xcomp_putenv_copy&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt;. Defaults to &lt;code&gt;no&lt;/code&gt;. If &lt;code&gt;yes&lt;/code&gt;, the target system must have a &lt;code&gt;putenv()&lt;/code&gt; implementation that stores a copy of the key/value pair.</source>
          <target state="translated">&lt;code&gt;erl_xcomp_putenv_copy&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt; 。默认为 &lt;code&gt;no&lt;/code&gt; 。如果 &lt;code&gt;yes&lt;/code&gt; ，则目标系统必须具有 &lt;code&gt;putenv()&lt;/code&gt; 实现，该实现存储键/值对的副本。</target>
        </trans-unit>
        <trans-unit id="ed767b8a3c4a99b707ed643536c651996e6dc1ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_xcomp_reliable_fpe&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt;. Defaults to &lt;code&gt;no&lt;/code&gt;. If &lt;code&gt;yes&lt;/code&gt;, the target system must have reliable floating point exceptions.</source>
          <target state="translated">&lt;code&gt;erl_xcomp_reliable_fpe&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt; 。默认为 &lt;code&gt;no&lt;/code&gt; 。如果 &lt;code&gt;yes&lt;/code&gt; ，则目标系统必须具有可靠的浮点异常。</target>
        </trans-unit>
        <trans-unit id="59e72f4c7e19b8159ea2181e2997a8a05d20d518" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_xcomp_sysroot&lt;/code&gt; - The absolute path to the system root of the cross compilation environment. Currently, the &lt;code&gt;crypto&lt;/code&gt;, &lt;code&gt;odbc&lt;/code&gt;, &lt;code&gt;ssh&lt;/code&gt; and &lt;code&gt;ssl&lt;/code&gt; applications need the system root. These applications will be skipped if the system root has not been set. The system root might be needed for other things too. If this is the case and the system root has not been set, &lt;code&gt;configure&lt;/code&gt; will fail and request you to set it.</source>
          <target state="translated">&lt;code&gt;erl_xcomp_sysroot&lt;/code&gt; -交叉编译环境的系统根目录的绝对路径。当前， &lt;code&gt;crypto&lt;/code&gt; ， &lt;code&gt;odbc&lt;/code&gt; ， &lt;code&gt;ssh&lt;/code&gt; 和 &lt;code&gt;ssl&lt;/code&gt; 应用程序需要系统根目录。如果尚未设置系统根目录，则将跳过这些应用程序。也可能需要系统根目录。如果是这种情况，并且尚未设置系统根目录，则 &lt;code&gt;configure&lt;/code&gt; 将会失败并要求您对其进行设置。</target>
        </trans-unit>
        <trans-unit id="3e6a8bf12dc9d18db013d9943a8ccd5cd0ddde1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_xconnect()&lt;/code&gt; requires the IP address of the remote host and the alivename of the remote node to be specified. &lt;code&gt;erl_connect()&lt;/code&gt; provides an alternative interface, and determines the information from the node name provided.</source>
          <target state="translated">&lt;code&gt;erl_xconnect()&lt;/code&gt; 要求指定远程主机的IP地址和远程节点的alivename。 &lt;code&gt;erl_connect()&lt;/code&gt; 提供了一个备用接口，并根据提供的节点名称确定信息。</target>
        </trans-unit>
        <trans-unit id="b388afcbfdc0f6255bf3cf9ef1d7e7bfc722c279" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erlang:get_stacktrace/0&lt;/code&gt; (use the new try/catch syntax for retrieving the stack backtrace)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="903c1abc5dac72994d21a17dfb14cd622fabcd81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erlang:get_stacktrace/0&lt;/code&gt; is deprecated and will be removed in OTP 24. Starting from OTP 23, &lt;code&gt;erlang:get_stacktrace/0&lt;/code&gt; returns &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d03a004dcad6782a74f3ee2ad45aaa77ce5e8b9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erlang:get_stacktrace/0&lt;/code&gt; is deprecated and will stop working in a future release.</source>
          <target state="translated">&lt;code&gt;erlang:get_stacktrace/0&lt;/code&gt; 已过时，将在以后的版本中停止工作。</target>
        </trans-unit>
        <trans-unit id="b541018cbc16f83926cf0aa53af10640840326d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erlang:get_stacktrace/0&lt;/code&gt; retrieves the call stack back-trace (&lt;strong&gt;stacktrace&lt;/strong&gt;) for an exception that has just been caught in the calling process as a list of &lt;code&gt;{Module,Function,Arity,Location}&lt;/code&gt; tuples. Field &lt;code&gt;Arity&lt;/code&gt; in the first tuple can be the argument list of that function call instead of an arity integer, depending on the exception.</source>
          <target state="translated">&lt;code&gt;erlang:get_stacktrace/0&lt;/code&gt; 检索调用堆栈回溯（&lt;strong&gt;stacktrace&lt;/strong&gt;），以作为 &lt;code&gt;{Module,Function,Arity,Location}&lt;/code&gt; 元组的列表刚刚在调用过程中捕获的异常。 &lt;code&gt;Arity&lt;/code&gt; ，第一个元组中的字段Arity可以是该函数调用的参数列表，而不是arity整数。</target>
        </trans-unit>
        <trans-unit id="d7cf58451803b06912db55c95a849417b2569c9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erlang:now/0&lt;/code&gt; (see the &quot;Time and Time Correction in Erlang&quot; chapter of the ERTS User's Guide for more information)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05fef3fa781d4e70da7ee356acf9e2ff1ed81a93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erlang:system_info(allocated_areas)&lt;/code&gt; is intended for debugging, and the content is highly implementation-dependent. The content of the results therefore changes when needed without prior notice.</source>
          <target state="translated">&lt;code&gt;erlang:system_info(allocated_areas)&lt;/code&gt; 用于调试，其内容高度依赖于实现。因此，结果的内容会在需要时更改，恕不另行通知。</target>
        </trans-unit>
        <trans-unit id="830e05bfdcbac8e2927b778f03e4949758867586" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erlang:system_profile&lt;/code&gt; behavior can change in a future release.</source>
          <target state="translated">&lt;code&gt;erlang:system_profile&lt;/code&gt; 行为在将来的版本中可能会更改。</target>
        </trans-unit>
        <trans-unit id="9ade3f5ef6d20dce54cf803b26b865572f5eadab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erlang&lt;/code&gt; manual page in ERTS (describes the BIFs)</source>
          <target state="translated">&lt;code&gt;erlang&lt;/code&gt; ERTS中的erlang手册页（描述了BIF）</target>
        </trans-unit>
        <trans-unit id="3c0b2ebfa58c0be3fbe4c26e11a35d56de356fc2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erlc&lt;/code&gt; and the compile server communicate using the Erlang distribution. The compile server is started as a hidden node, with a name that includes the current user. Thus, each user on a computer has their own compile server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="652696fe79bcbc0f2943daeb0343d38c1656e1ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erlc&lt;/code&gt; wants to use a different version of Erlang than the compile server is using.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbc6280a99ab676463fbba70ebd845e9d960f18b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erlc&lt;/code&gt; wants to use different options for &lt;code&gt;erl&lt;/code&gt; than the compile server was started with. (A change to code path using the option &lt;code&gt;-pa&lt;/code&gt; could cause different parse transforms to be loaded. To be safe, the compile server will be restarted when any &lt;code&gt;erl&lt;/code&gt; option is changed.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbf642775d24722a69d5fce0d0743d85adca8813" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erlsrv&lt;/code&gt; also provides a command-line interface for registering, changing, starting, and stopping services.</source>
          <target state="translated">&lt;code&gt;erlsrv&lt;/code&gt; 还提供了用于注册，更改，启动和停止服务的命令行界面。</target>
        </trans-unit>
        <trans-unit id="ffcc31c05996b61bdabb7b7e8aff7930a4d83bb5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erofs&lt;/code&gt; - Read-only file system</source>
          <target state="translated">&lt;code&gt;erofs&lt;/code&gt; -只读文件系统</target>
        </trans-unit>
        <trans-unit id="b80c4112296dc76f5ba849a8a385bdf8af5edca9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erofs&lt;/code&gt; - Read-only filesystem</source>
          <target state="translated">&lt;code&gt;erofs&lt;/code&gt; -只读文件系统</target>
        </trans-unit>
        <trans-unit id="037a5f50431f4ff864157481c5d596a8203d27e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erpc:cast/2&lt;/code&gt; fails with an &lt;code&gt;{erpc, badarg}&lt;/code&gt;&lt;code&gt;error&lt;/code&gt; exception if:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b93e91c4d5bd3003f291b632d9add340eb80dd00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erpc:cast/4&lt;/code&gt; fails with an &lt;code&gt;{erpc, badarg}&lt;/code&gt;&lt;code&gt;error&lt;/code&gt; exception if:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7f38731690f8c695f1a8f0db7387fc5e280355b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erpc:multicall/5&lt;/code&gt; fails with an &lt;code&gt;{erpc, badarg}&lt;/code&gt;&lt;code&gt;error&lt;/code&gt; exception if:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3321ac26ed57f0d04ab8d60bcd70561e62d3daf2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erpc:multicast/2&lt;/code&gt; fails with an &lt;code&gt;{erpc, badarg}&lt;/code&gt;&lt;code&gt;error&lt;/code&gt; exception if:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a772b2e092a351fea741bbd5aa69bc83b134d1b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erpc:multicast/4&lt;/code&gt; fails with an &lt;code&gt;{erpc, badarg}&lt;/code&gt;&lt;code&gt;error&lt;/code&gt; exception if:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b799a7fdde4ad3892ff05517db919bb85c8bdf03" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erpc:receive_response()&lt;/code&gt; will return or raise exceptions the same way as &lt;code&gt;&lt;a href=&quot;#call-5&quot;&gt;erpc:call/5&lt;/a&gt;&lt;/code&gt; does with the exception of &lt;code&gt;{erpc, badarg}&lt;/code&gt;. An &lt;code&gt;{erpc, badarg}&lt;/code&gt; exception will be raised if/when an invalid &lt;code&gt;RequestId&lt;/code&gt; is detected or if an invalid &lt;code&gt;Timeout&lt;/code&gt; is passed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f48735c7143b3772e13a9b0ca9ed33c9422bfaf3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erpc:send_request()&lt;/code&gt; fails with an &lt;code&gt;{erpc, badarg}&lt;/code&gt;&lt;code&gt;error&lt;/code&gt; exception if:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3b1924f7338fdec04de898b0c42cfc8d28f4244" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erpc:send_request/2&lt;/code&gt; fails with an &lt;code&gt;{erpc, badarg}&lt;/code&gt;&lt;code&gt;error&lt;/code&gt; exception if:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20240f074145c249d4dd67a56257df5ecab46378" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erpcmismatch&lt;/code&gt; - Wrong RPC version</source>
          <target state="translated">&lt;code&gt;erpcmismatch&lt;/code&gt; -错误的RPC版本</target>
        </trans-unit>
        <trans-unit id="d1ff3aacd3633fcdf694fcdcba924da80f94fb62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erremote&lt;/code&gt; - Object is remote</source>
          <target state="translated">&lt;code&gt;erremote&lt;/code&gt; -对象是远程的</target>
        </trans-unit>
        <trans-unit id="b08c1b665019c9fc86772ffce4ce3f45e1f87be3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;error:badarg&lt;/code&gt;: an argument is of wrong type or has an illegal value,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d58f68a20055281ebd2ee48cd35065aec7f6b275" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;error:computation_failed&lt;/code&gt;: the computation fails of another reason than &lt;code&gt;low_entropy&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d24c03cf897dfe27508306e2d9a775b712fe84b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;error:low_entropy&lt;/code&gt;: the random generator failed due to lack of secure &quot;randomness&quot;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da7a5cd48bf89d6d3e5afa1bd3d7b154e5ab549b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;error_handler:undefined_function(Module, Function, Args)&lt;/code&gt; is evaluated by the new process if &lt;code&gt;Module:Function/Arity&lt;/code&gt; does not exist (where &lt;code&gt;Arity&lt;/code&gt; is the length of &lt;code&gt;Args&lt;/code&gt;). The error handler can be redefined (see &lt;code&gt;&lt;a href=&quot;#process_flag-2&quot;&gt;process_flag/2&lt;/a&gt;&lt;/code&gt;). If &lt;code&gt;error_handler&lt;/code&gt; is undefined, or the user has redefined the default &lt;code&gt;error_handler&lt;/code&gt; and its replacement is undefined, a failure with reason &lt;code&gt;undef&lt;/code&gt; occurs.</source>
          <target state="translated">&lt;code&gt;error_handler:undefined_function(Module, Function, Args)&lt;/code&gt; 如果 &lt;code&gt;Module:Function/Arity&lt;/code&gt; 不存在（其中 &lt;code&gt;Arity&lt;/code&gt; 是 &lt;code&gt;Args&lt;/code&gt; 的长度），则由新进程评估error_handler：undefined_function（Module，Function，Args）。可以重新定义错误处理程序（请参阅 &lt;code&gt;&lt;a href=&quot;#process_flag-2&quot;&gt;process_flag/2&lt;/a&gt;&lt;/code&gt; ）。如果未定义 &lt;code&gt;error_handler&lt;/code&gt; 或用户已重新定义默认的 &lt;code&gt;error_handler&lt;/code&gt; 且未定义其替换，则发生失败的原因为 &lt;code&gt;undef&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f3c883521cdee8e2481c0a180da1faa37dba1788" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;error_logger(3)&lt;/code&gt;, &lt;code&gt;gen_event(3)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;error_logger(3)&lt;/code&gt; ， &lt;code&gt;gen_event(3)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d15e04a68c3e4f67bc4f5129d30fa1ef4d1ea0c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;error_logger(3)&lt;/code&gt;, &lt;code&gt;os_mon(3)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;error_logger(3)&lt;/code&gt; ， &lt;code&gt;os_mon(3)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bd36f251c6677faaaa0ae26d9f33603a67e12e26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;error_logger&lt;/code&gt; is no longer started by default, but is automatically started when an event handler is added with &lt;code&gt;error_logger:add_report_handler/1,2&lt;/code&gt;. The &lt;code&gt;error_logger&lt;/code&gt; module is then also added as a handler to the new logger.</source>
          <target state="translated">&lt;code&gt;error_logger&lt;/code&gt; 默认情况下，error_logger不再默认启动，而是在使用 &lt;code&gt;error_logger:add_report_handler/1,2&lt;/code&gt; 添加事件处理程序时自动启动。该 &lt;code&gt;error_logger&lt;/code&gt; 模块，然后还添加为处理程序的新记录。</target>
        </trans-unit>
        <trans-unit id="6de5fad938e46467ba29d2b5d7c334433a3dadc9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;error_man&lt;/code&gt; is the name of the event manager and &lt;code&gt;no_reply&lt;/code&gt; is the event.</source>
          <target state="translated">&lt;code&gt;error_man&lt;/code&gt; 是事件管理器的名称， &lt;code&gt;no_reply&lt;/code&gt; 是事件。</target>
        </trans-unit>
        <trans-unit id="9a7a600cb0b03c7fab63405b22d151fdd5e372af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erts-EVsn/bin&lt;/code&gt; - Erlang runtime system executables</source>
          <target state="translated">&lt;code&gt;erts-EVsn/bin&lt;/code&gt; -Erlang运行时系统可执行文件</target>
        </trans-unit>
        <trans-unit id="b3cd589ffe1e4085965d3df7d06bb33b62969904" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erts:epmd&lt;/code&gt; is the Erlang Port Mapper Daemon. Distributed Erlang nodes register with &lt;code&gt;epmd&lt;/code&gt; on the local host to indicate to other nodes that they exist and can accept connections. &lt;code&gt;epmd&lt;/code&gt; maintains a register of node and port number information, and when a node wishes to connect to another node, it first contacts &lt;code&gt;epmd&lt;/code&gt; to find the correct port number to connect to.</source>
          <target state="translated">&lt;code&gt;erts:epmd&lt;/code&gt; 是Erlang Port Mapper守护程序。分布式Erlang节点在本地主机上向 &lt;code&gt;epmd&lt;/code&gt; 注册，以向其他节点指示它们存在并且可以接受连接。 &lt;code&gt;epmd&lt;/code&gt; 维护节点和端口号信息的寄存器，当一个节点希望连接到另一个节点时，它首先与 &lt;code&gt;epmd&lt;/code&gt; 联系以找到要连接的正确端口号。</target>
        </trans-unit>
        <trans-unit id="ae7b6b8838371f3daac96a3427a870a4e86c1b06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erts:erl_driver(4)&lt;/code&gt;, &lt;code&gt;erts:driver_entry(4)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;erts:erl_driver(4)&lt;/code&gt; ， &lt;code&gt;erts:driver_entry(4)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e9eb2668d0733b1a059266643087f67a7951fae3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erts:init(3)&lt;/code&gt;, &lt;code&gt;erts:erl_prim_loader(3)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;erts:init(3)&lt;/code&gt; ， &lt;code&gt;erts:erl_prim_loader(3)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1115b36b9dcc89e47be8c97d9257688803ed8b28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erts_alloc(3)&lt;/code&gt; is an Erlang Run-Time System internal memory allocator library. &lt;code&gt;erts_alloc_config&lt;/code&gt; is intended to be used to aid creation of an &lt;code&gt;erts_alloc(3)&lt;/code&gt; configuration that is suitable for a limited number of runtime scenarios. The configuration that &lt;code&gt;erts_alloc_config&lt;/code&gt; produce is intended as a suggestion, and may need to be adjusted manually.</source>
          <target state="translated">&lt;code&gt;erts_alloc(3)&lt;/code&gt; 是一个Erlang运行时系统内部内存分配器库。 &lt;code&gt;erts_alloc_config&lt;/code&gt; 旨在用于帮助创建适用于有限数量的运行时场景的 &lt;code&gt;erts_alloc(3)&lt;/code&gt; 配置。 &lt;code&gt;erts_alloc_config&lt;/code&gt; 生成的配置仅供参考，可能需要手动调整。</target>
        </trans-unit>
        <trans-unit id="95026c5f783035878205a90f4cb4555ca1c9fa28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erts_alloc(3)&lt;/code&gt;, &lt;code&gt;erl(1)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;erts_alloc(3)&lt;/code&gt; ， &lt;code&gt;erl(1)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="68e02d443e095b148ffff877159464806e11f021" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erts_alloc(3)&lt;/code&gt;, &lt;code&gt;erl(1)&lt;/code&gt;, &lt;code&gt;io(3)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;erts_alloc(3)&lt;/code&gt; ， &lt;code&gt;erl(1)&lt;/code&gt; ， &lt;code&gt;io(3)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="658b0104deb072b5a8e17ebc4dd1534274ff60dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erts_alloc&lt;/code&gt; is an Erlang runtime system internal memory allocator library. &lt;code&gt;erts_alloc&lt;/code&gt; provides the Erlang runtime system with a number of memory allocators.</source>
          <target state="translated">&lt;code&gt;erts_alloc&lt;/code&gt; 是一个Erlang运行时系统内部内存分配器库。 &lt;code&gt;erts_alloc&lt;/code&gt; 为Erlang运行时系统提供了许多内存分配器。</target>
        </trans-unit>
        <trans-unit id="370d5868be6fac8c1b10ed1322a0d21f5022ecbe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erts_alloc&lt;/code&gt; is not obliged to strictly use the settings that have been passed to it (it can even ignore them).</source>
          <target state="translated">&lt;code&gt;erts_alloc&lt;/code&gt; 没有义务严格使用已传递给它的设置（它甚至可以忽略它们）。</target>
        </trans-unit>
        <trans-unit id="bbb376e06ce127dfb22a85316aa719e697c7b3e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erts_alloc_config&lt;/code&gt; is currently an experimental tool and might be subject to backward incompatible changes.</source>
          <target state="translated">&lt;code&gt;erts_alloc_config&lt;/code&gt; 当前是一个实验性工具，可能会受到向后不兼容的更改的影响。</target>
        </trans-unit>
        <trans-unit id="0e5e5c670aa0173db46bdf3b49c89809166cfaa5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erts_alloc_config&lt;/code&gt; saves information about runtime scenarios and performs computations in a server that is automatically started. The server register itself under the name &lt;code&gt;'__erts_alloc_config__'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;erts_alloc_config&lt;/code&gt; 保存有关运行时场景的信息，并在自动启动的服务器中执行计算。服务器以名称 &lt;code&gt;'__erts_alloc_config__'&lt;/code&gt; 注册自己。</target>
        </trans-unit>
        <trans-unit id="c6e621d5787597839455dcc92891d1cbff909ae1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;escript&lt;/code&gt; provides support for running short Erlang programs without having to compile them first, and an easy way to retrieve the command-line arguments.</source>
          <target state="translated">&lt;code&gt;escript&lt;/code&gt; 提供了对运行简短的Erlang程序的支持，而不必先对其进行编译，并且提供了一种检索命令行参数的简便方法。</target>
        </trans-unit>
        <trans-unit id="923c13835194b71ecffb751d0a9fc46ca90ebf18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;escript&lt;/code&gt; runs a script written in Erlang.</source>
          <target state="translated">&lt;code&gt;escript&lt;/code&gt; 运行以Erlang编写的脚本。</target>
        </trans-unit>
        <trans-unit id="f3c95ecfec85bbad180888eae3642fcb4b398a54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eshutdown&lt;/code&gt; - Cannot send after socket shutdown</source>
          <target state="translated">&lt;code&gt;eshutdown&lt;/code&gt; -套接字关闭后无法发送</target>
        </trans-unit>
        <trans-unit id="be442bbd7b626986bef7a3e9d34492da2887e492" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;esocktnosupport&lt;/code&gt; - Socket type not supported</source>
          <target state="translated">&lt;code&gt;esocktnosupport&lt;/code&gt; -不支持套接字类型</target>
        </trans-unit>
        <trans-unit id="3da6e627fa5069bddcb047c9829a058f0cc9b92f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;espipe&lt;/code&gt; - Invalid seek</source>
          <target state="translated">&lt;code&gt;espipe&lt;/code&gt; -无效搜索</target>
        </trans-unit>
        <trans-unit id="5d99cde7dd1bcef9ce2943aadb4ecbfe6e28f43c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;esrch&lt;/code&gt; - No such process</source>
          <target state="translated">&lt;code&gt;esrch&lt;/code&gt; -没有这样的过程</target>
        </trans-unit>
        <trans-unit id="43537a957d419bfe1cf591954ad9844fbb88e1ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;esrmnt&lt;/code&gt; - Srmount error</source>
          <target state="translated">&lt;code&gt;esrmnt&lt;/code&gt; -安装错误</target>
        </trans-unit>
        <trans-unit id="d321374d4998327a70229d5b61947b76054c84b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;estale&lt;/code&gt; - Stale remote file handle</source>
          <target state="translated">&lt;code&gt;estale&lt;/code&gt; -过时的远程文件句柄</target>
        </trans-unit>
        <trans-unit id="84c3404f080f386a5f54b535e2881b13895740ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;esuccess&lt;/code&gt; - Error 0</source>
          <target state="translated">&lt;code&gt;esuccess&lt;/code&gt; -错误0</target>
        </trans-unit>
        <trans-unit id="d828893783957c44cc9a5374156eb809901283c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;etags&lt;/code&gt; is a program that is part of the Emacs distribution. It is normally executed from a command line, like a unix shell or a DOS box.</source>
          <target state="translated">&lt;code&gt;etags&lt;/code&gt; 是Emacs发行版中的一部分。它通常是从命令行执行的，例如unix shell或DOS框。</target>
        </trans-unit>
        <trans-unit id="049235ae709c3c7df1621c487c02748d53a4c649" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;etime&lt;/code&gt; - Timer expired</source>
          <target state="translated">&lt;code&gt;etime&lt;/code&gt; -计时器到期</target>
        </trans-unit>
        <trans-unit id="6a7498e3491a6c3896e8f29e803459eaa6a5883b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;etimedout&lt;/code&gt; - Connection timed out</source>
          <target state="translated">&lt;code&gt;etimedout&lt;/code&gt; -连接超时</target>
        </trans-unit>
        <trans-unit id="2d425e09562b04579b949b00346af666eb229720" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;etoomanyrefs&lt;/code&gt; - Too many references</source>
          <target state="translated">&lt;code&gt;etoomanyrefs&lt;/code&gt; -参考过多</target>
        </trans-unit>
        <trans-unit id="7a995246edf0e806fcbf5ba45cc75e92eabb10f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;etop&lt;/code&gt; is a command line tool that can connect to remote nodes and display information similar to what the UNIX tool top shows.</source>
          <target state="translated">&lt;code&gt;etop&lt;/code&gt; 是一个命令行工具，可以连接到远程节点并显示类似于UNIX工具顶部显示的信息。</target>
        </trans-unit>
        <trans-unit id="42facdd428b4102c19724fc2bdc7a4d3a66c9b05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;etop&lt;/code&gt; uses the Erlang trace facility, and thus no other tracing is possible on the measured node while &lt;code&gt;etop&lt;/code&gt; is running, unless this option is set to &lt;code&gt;off&lt;/code&gt;. Also helpful if the &lt;code&gt;etop&lt;/code&gt; tracing causes too high load on the measured node. With tracing off, runtime is not measured.</source>
          <target state="translated">&lt;code&gt;etop&lt;/code&gt; 使用Erlang跟踪工具，因此在 &lt;code&gt;etop&lt;/code&gt; 运行时无法在被测节点上进行其他跟踪，除非将此选项设置为 &lt;code&gt;off&lt;/code&gt; 。如果 &lt;code&gt;etop&lt;/code&gt; 跟踪导致被测节点的负载过高，也很有用。禁用跟踪时，不会测量运行时间。</target>
        </trans-unit>
        <trans-unit id="fc401f6cd9a2d36e07c3cf1d78783b78d1a3eed2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ets:match/2&lt;/code&gt; can be used:</source>
          <target state="translated">&lt;code&gt;ets:match/2&lt;/code&gt; 可以使用：</target>
        </trans-unit>
        <trans-unit id="b1b574263d8adbf3b35dace50b687638d4f62929" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ets:match/2&lt;/code&gt; uses a simpler type of match specification, but it is still unreadable, and one has little control over the returned result. It is always a list of lists.</source>
          <target state="translated">&lt;code&gt;ets:match/2&lt;/code&gt; 使用一种更简单的匹配规范类型，但是它仍然不可读，并且几乎不能控制返回的结果。它始终是列表的列表。</target>
        </trans-unit>
        <trans-unit id="ada7ea1adf9a7618d24851cc46af35f4d10c76c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;etxtbsy&lt;/code&gt; - Text file or pseudo-device busy</source>
          <target state="translated">&lt;code&gt;etxtbsy&lt;/code&gt; -文本文件或伪设备繁忙</target>
        </trans-unit>
        <trans-unit id="083cb827d71dd1a6114c058f15bd888df569133a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;euclean&lt;/code&gt; - Structure needs cleaning</source>
          <target state="translated">&lt;code&gt;euclean&lt;/code&gt; -结构需要清洁</target>
        </trans-unit>
        <trans-unit id="46f3f1bf6d759cafaec1d054c45a3fe6884ec756" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eunatch&lt;/code&gt; - Protocol driver not attached</source>
          <target state="translated">&lt;code&gt;eunatch&lt;/code&gt; -未附加协议驱动程序</target>
        </trans-unit>
        <trans-unit id="bf7c59b5877e3b8c7849fc033914477748ab7802" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eusers&lt;/code&gt; - Too many users</source>
          <target state="translated">&lt;code&gt;eusers&lt;/code&gt; -用户太多</target>
        </trans-unit>
        <trans-unit id="f2801a73f510bc70a1b17da34cd3262897d9abd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eval(QH)&lt;/code&gt; is equivalent to &lt;code&gt;eval(QH, [])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;eval(QH)&lt;/code&gt; 等效于 &lt;code&gt;eval(QH, [])&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a9fdd159f121d70ae36287cfa787183d9208f811" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;event/4&lt;/code&gt; or &lt;code&gt;event/5&lt;/code&gt; is called whenever an event occurs in the &lt;code&gt;mod_security&lt;/code&gt; Erlang web server API module. (&lt;code&gt;event/4&lt;/code&gt; is called if &lt;code&gt;Address&lt;/code&gt; is undefined, otherwise &lt;code&gt;event/5&lt;/code&gt;. Argument &lt;code&gt;What&lt;/code&gt; specifies the type of event that has occurred and is one of the following reasons:</source>
          <target state="translated">&lt;code&gt;event/4&lt;/code&gt; 每当 &lt;code&gt;mod_security&lt;/code&gt; Erlang Web服务器API模块中发生事件时，都会调用event / 4或 &lt;code&gt;event/5&lt;/code&gt; 。（ &lt;code&gt;event/4&lt;/code&gt; ，如果被调用 &lt;code&gt;Address&lt;/code&gt; 是不明确的，否则 &lt;code&gt;event/5&lt;/code&gt; 争论。 &lt;code&gt;What&lt;/code&gt; 规定，已经发生，是由于下列原因之一的事件类型：</target>
        </trans-unit>
        <trans-unit id="d072a3b6d526de4f74b49703af037576bdfad4f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;event_module&lt;/code&gt;. Returns the name of the module that is the event handler callback module.</source>
          <target state="translated">&lt;code&gt;event_module&lt;/code&gt; 。返回作为事件处理程序回调模块的模块的名称。</target>
        </trans-unit>
        <trans-unit id="402ed55637d27b6db5c346a697b27c4e23aecf6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eversion&lt;/code&gt; - Version mismatch</source>
          <target state="translated">&lt;code&gt;eversion&lt;/code&gt; -版本不匹配</target>
        </trans-unit>
        <trans-unit id="647d5575d47453143c12212c48433892a90fd193" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ewouldblock&lt;/code&gt; - Operation would block</source>
          <target state="translated">&lt;code&gt;ewouldblock&lt;/code&gt; -操作将阻塞</target>
        </trans-unit>
        <trans-unit id="602c2395d81920b3a86446adde96bb734365f744" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exceeded_recv_pending_limit&lt;/code&gt; - the pending limit was exceeded for this request.</source>
          <target state="translated">&lt;code&gt;exceeded_recv_pending_limit&lt;/code&gt; 此请求超出了未决限制。</target>
        </trans-unit>
        <trans-unit id="6b268350b68fa90a8d331488111c0e0759b39f7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exdev&lt;/code&gt; - Cross-domain link</source>
          <target state="translated">&lt;code&gt;exdev&lt;/code&gt; -跨域链接</target>
        </trans-unit>
        <trans-unit id="f1ccd99602a56cc38a8aa304df9bea1e99ee891b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exfull&lt;/code&gt; - Message tables full</source>
          <target state="translated">&lt;code&gt;exfull&lt;/code&gt; -消息表已满</target>
        </trans-unit>
        <trans-unit id="60af1af3777d71cfb1fd237bb62937ec1d06ed92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exit&lt;/code&gt; - Attach when a process terminates.</source>
          <target state="translated">&lt;code&gt;exit&lt;/code&gt; -将进程终止时。</target>
        </trans-unit>
        <trans-unit id="1c1059adcf3427060a2029651784203116bcc11d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exit&lt;/code&gt; - The process is terminated. &lt;code&gt;Info=ExitReason&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;exit&lt;/code&gt; -进程终止。 &lt;code&gt;Info=ExitReason&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9f3609f531c6a4767738d2bcd3db8440c4cc3ea7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exit_after/2&lt;/code&gt; is the same as &lt;code&gt;exit_after(Time, self(), Reason1)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;exit_after/2&lt;/code&gt; 与 &lt;code&gt;exit_after(Time, self(), Reason1)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="118d8c64ed002fe7fab5312cc2217b8f07167d7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exit_after/3&lt;/code&gt; sends an exit signal with reason &lt;code&gt;Reason1&lt;/code&gt; to pid &lt;code&gt;Pid&lt;/code&gt;. Returns &lt;code&gt;{ok, TRef}&lt;/code&gt; or &lt;code&gt;{error, Reason2}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;exit_after/3&lt;/code&gt; 将原因为 &lt;code&gt;Reason1&lt;/code&gt; 的退出信号发送到pid &lt;code&gt;Pid&lt;/code&gt; 。返回 &lt;code&gt;{ok, TRef}&lt;/code&gt; 或 &lt;code&gt;{error, Reason2}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5a0e6bdec4acbea7a2824cd44a5e7a1adcc385a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extended&lt;/code&gt; - One worker dedicated to 'set-requests', one worker dedicated to notifications and one (main) worker for all 'get-requests'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57a4da802d829e65d707a43afdecdefa889b176e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extra_db_nodes&lt;/code&gt;. Returns a list of extra &lt;code&gt;db_nodes&lt;/code&gt; to be contacted at startup.</source>
          <target state="translated">&lt;code&gt;extra_db_nodes&lt;/code&gt; 。返回启动时要联系的其他 &lt;code&gt;db_nodes&lt;/code&gt; 的列表。</target>
        </trans-unit>
        <trans-unit id="f67bbcd2f5db6c737e1cdcaf62c45bea5806d3ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extract/1&lt;/code&gt; and &lt;code&gt;extract/2&lt;/code&gt; are provided as synonyms to resemble module &lt;code&gt;&lt;a href=&quot;erl_tar&quot;&gt;erl_tar&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;extract/1&lt;/code&gt; 和 &lt;code&gt;extract/2&lt;/code&gt; 作为同义词类似于模块 &lt;code&gt;&lt;a href=&quot;erl_tar&quot;&gt;erl_tar&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ac291863be17a59f9f4cfd4f1cc91d9592851008" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;f&lt;/code&gt; - Failure label (non-zero). The target for a branch or call instruction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1048ab4832644f0e8409df7834fac8be896b1129" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;f&lt;/code&gt; - Non-zero failure label.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bad8d8a74a2c1e67fba0103c4e0b9e8fc42f8bad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;f&lt;/code&gt; is a value to be converted to an Erlang float.</source>
          <target state="translated">&lt;code&gt;f&lt;/code&gt; 是要转换为Erlang浮点数的值。</target>
        </trans-unit>
        <trans-unit id="8abcbec2f75b3c23ae1c64ef59eb60038bca7348" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;f&lt;/code&gt; is the floating point value to assign.</source>
          <target state="translated">&lt;code&gt;f&lt;/code&gt; 是要分配的浮点值。</target>
        </trans-unit>
        <trans-unit id="710e9ee5a7d68edae919806d740836a6e6769825" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;failure()&lt;/code&gt; indicates an local or external error and can be one of the following:</source>
          <target state="translated">&lt;code&gt;failure()&lt;/code&gt; 指示本地错误或外部错误，并且可以是以下之一：</target>
        </trans-unit>
        <trans-unit id="c2469c8655cb917a2bb9031e6447254c2660c34c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fallback_activated&lt;/code&gt;. Returns &lt;code&gt;true&lt;/code&gt; if a fallback is activated, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;fallback_activated&lt;/code&gt; 。如果激活了后备，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="60075ae08f50200bea797fc51fb20fd327586f4f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt; if a trace message is not to be emitted</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; 如果不发出跟踪消息，则返回false</target>
        </trans-unit>
        <trans-unit id="691de5e0cb4604679c034ecba0f7307479b83501" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt; if the user or password is invalid</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; 如果用户或密码无效，则返回false</target>
        </trans-unit>
        <trans-unit id="92bf1a588f04ff032c351f4a75c7475ff39b9c13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt; is returned if the object is not defined in any loaded MIB.</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; 如果未在任何已加载的MIB中定义对象，则返回false。</target>
        </trans-unit>
        <trans-unit id="8ab5542919b9a6acd08b698295fc02f6c85b9d2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt; is returned if the object or type is not defined in any loaded MIB, or if it does not define the symbolic value as enumerated.</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; 如果未在任何已加载的MIB中定义对象或类型，或者未将枚举的符号值定义为false，则返回false。</target>
        </trans-unit>
        <trans-unit id="8cf27dbee3f5798e5fa468395970992d97c075a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;family_field(Family1)&lt;/code&gt; is equivalent to &lt;code&gt;family_union(family_domain(Family1), family_range(Family1))&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;family_field(Family1)&lt;/code&gt; 等同于 &lt;code&gt;family_union(family_domain(Family1), family_range(Family1))&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3854004da408f511ea42cc065efe9087aef81ab0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;family_union(F)&lt;/code&gt; is equivalent to &lt;code&gt;family_projection(fun sofs:union/1,&amp;nbsp;F)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;family_union(F)&lt;/code&gt; 等同于 &lt;code&gt;family_projection(fun sofs:union/1,&amp;nbsp;F)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2e799cbff48f1a907111621ca53afcebf32efbdf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fcgi&lt;/code&gt; - Fast CGI</source>
          <target state="translated">&lt;code&gt;fcgi&lt;/code&gt; -快速CGI</target>
        </trans-unit>
        <trans-unit id="71f8b0c3fdcfff764a1aed30bb055ba063f18789" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fd&lt;/code&gt; is an open connection to Erlang. &lt;code&gt;Mnesia&lt;/code&gt; 3.0 or later must be running on the Erlang node.</source>
          <target state="translated">&lt;code&gt;fd&lt;/code&gt; 是与Erlang的开放连接。 &lt;code&gt;Mnesia&lt;/code&gt; 3.0或更高版本必须在Erlang节点上运行。</target>
        </trans-unit>
        <trans-unit id="c5ec650d9bc77e0e1686955a7fe9bc4c0e0189bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fd&lt;/code&gt; is an open descriptor to an Erlang connection.</source>
          <target state="translated">&lt;code&gt;fd&lt;/code&gt; 是Erlang连接的开放描述符。</target>
        </trans-unit>
        <trans-unit id="f656dcfaaac691553d45cbf7a151c9b166ddc18f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fd&lt;/code&gt; is an open descriptor to an Erlang connection. It is obtained from a previous &lt;code&gt;ei_connect&lt;/code&gt; or &lt;code&gt;ei_accept&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;fd&lt;/code&gt; 是Erlang连接的开放描述符。它是从先前的 &lt;code&gt;ei_connect&lt;/code&gt; 或 &lt;code&gt;ei_accept&lt;/code&gt; 获得的。</target>
        </trans-unit>
        <trans-unit id="3fa5627f362a188635bb87aa757264405865e18d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;field(R)&lt;/code&gt; is equivalent to &lt;code&gt;union(domain(R), range(R))&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;field(R)&lt;/code&gt; 等效于 &lt;code&gt;union(domain(R), range(R))&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="88a3db78fcb0a551e7d60442210a1053b3e2932b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;file(3)&lt;/code&gt;&lt;code&gt;filename(3)&lt;/code&gt; and J. Postel and J. Reynolds: File Transfer Protocol (&lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc959.txt&quot;&gt;RFC 959&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;file(3)&lt;/code&gt; &lt;code&gt;filename(3)&lt;/code&gt; 以及J.Postel和J.Reynolds：文件传输协议（ &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc959.txt&quot;&gt;RFC 959&lt;/a&gt;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="ae107562ea3ff90c303c98876ec07e8a82752603" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;file&lt;/code&gt; (use host data retrieved from system configuration files and/or the user configuration file)</source>
          <target state="translated">&lt;code&gt;file&lt;/code&gt; （使用从系统配置文件和/或用户配置文件中检索到的主机数据）</target>
        </trans-unit>
        <trans-unit id="049f07423035f44aa98d191a7053183344a26b1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;filename:find_src/_&lt;/code&gt; (use filelib:find_source/1,3 instead)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dde1c86cb58e41267688ed0f2687e315685ef97a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;filename:safe_relative_path/1&lt;/code&gt; (use filelib:safe_relative_path/2 instead)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e166683d3f6708ae36021cc46bb7886dd1a606ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;files/1,2&lt;/code&gt; does exactly the same thing as &lt;code&gt;all/0,1&lt;/code&gt; but for the specified &lt;code&gt;ModFiles&lt;/code&gt;, which is a list of module or file names. The file extension &lt;code&gt;.erl&lt;/code&gt; may be omitted.</source>
          <target state="translated">&lt;code&gt;files/1,2&lt;/code&gt; 与 &lt;code&gt;all/0,1&lt;/code&gt; 的功能完全相同，但对于指定的 &lt;code&gt;ModFiles&lt;/code&gt; 而言，这是模块或文件名的列表。文件扩展名 &lt;code&gt;.erl&lt;/code&gt; 可以省略。</target>
        </trans-unit>
        <trans-unit id="5432ba00c886379b53d593a55e1fa224fcc98201" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;filter&lt;/code&gt; takes a predicate of one argument and a list and returns all elements in the list that satisfy the predicate:</source>
          <target state="translated">&lt;code&gt;filter&lt;/code&gt; 接受一个参数和一个列表的谓词，并返回列表中满足该谓词的所有元素：</target>
        </trans-unit>
        <trans-unit id="a94764c4b442f372ab753c4167e78edef5fc2f32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;filtered&lt;/code&gt; for data produced by a filter (or predictor)</source>
          <target state="translated">&lt;code&gt;filtered&lt;/code&gt; 以获取由过滤器（或预测变量）产生的数据</target>
        </trans-unit>
        <trans-unit id="51bcc70ead8fb8bc2ab7ac0e1c47dccadf16d1f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;first_next&lt;/code&gt; - The table is traversed one key at a time by calling &lt;code&gt;dets:first/1&lt;/code&gt; and &lt;code&gt;dets:next/2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;first_next&lt;/code&gt; -通过调用 &lt;code&gt;dets:first/1&lt;/code&gt; 和 &lt;code&gt;dets:next/2&lt;/code&gt; 一次遍历一个键。</target>
        </trans-unit>
        <trans-unit id="7974437ce9ad4bbc04754256eae30cd9612e597c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;flags : integer&lt;/code&gt; :: Flags. Ex. &lt;code&gt;1&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;flags : integer&lt;/code&gt; ::标志 例如 &lt;code&gt;1&lt;/code&gt; 个</target>
        </trans-unit>
        <trans-unit id="cf65ddbad42b1d629c4b6ca8ef8bcda3605fd18f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;flags&lt;/code&gt; can be used to indicate that the NIF is a &lt;code&gt;&lt;a href=&quot;#dirty_nifs&quot;&gt;dirty NIF&lt;/a&gt;&lt;/code&gt; that is to be executed on a dirty scheduler thread.</source>
          <target state="translated">&lt;code&gt;flags&lt;/code&gt; 可用于指示NIF是要在脏调度程序线程上执行的 &lt;code&gt;&lt;a href=&quot;#dirty_nifs&quot;&gt;dirty NIF&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c858ca62bcf9034a74cbe5df92bfb1e723cebb8d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;flags&lt;/code&gt; indicates the type of object that you are looking for. If &lt;code&gt;flags&lt;/code&gt; is &lt;code&gt;0&lt;/code&gt;, any kind of object is returned. If &lt;code&gt;flags&lt;/code&gt; is &lt;code&gt;EI_INT&lt;/code&gt;, &lt;code&gt;EI_FLT&lt;/code&gt;, &lt;code&gt;EI_STR&lt;/code&gt;, or &lt;code&gt;EI_BIN&lt;/code&gt;, then only values of that kind are returned.</source>
          <target state="translated">&lt;code&gt;flags&lt;/code&gt; 指示您要查找的对象的类型。如果 &lt;code&gt;flags&lt;/code&gt; 为 &lt;code&gt;0&lt;/code&gt; ，则返回任何类型的对象。如果 &lt;code&gt;flags&lt;/code&gt; 是 &lt;code&gt;EI_INT&lt;/code&gt; ， &lt;code&gt;EI_FLT&lt;/code&gt; ， &lt;code&gt;EI_STR&lt;/code&gt; 或 &lt;code&gt;EI_BIN&lt;/code&gt; ，则仅返回该类型的值。</target>
        </trans-unit>
        <trans-unit id="7026828ff9a171c85e41a7ecb9f0d2892a14feae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;flags&lt;/code&gt; indicates the type of the object specified by &lt;code&gt;v&lt;/code&gt;. Flags must be one of &lt;code&gt;EI_INT&lt;/code&gt;, &lt;code&gt;EI_FLT&lt;/code&gt;, &lt;code&gt;EI_STR&lt;/code&gt;, and &lt;code&gt;EI_BIN&lt;/code&gt;, indicating whether &lt;code&gt;v&lt;/code&gt; is &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;char*&lt;/code&gt;, or &lt;code&gt;void*&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;flags&lt;/code&gt; 指示由 &lt;code&gt;v&lt;/code&gt; 指定的对象的类型。标志必须是 &lt;code&gt;EI_INT&lt;/code&gt; ， &lt;code&gt;EI_FLT&lt;/code&gt; ， &lt;code&gt;EI_STR&lt;/code&gt; 和 &lt;code&gt;EI_BIN&lt;/code&gt; 之一，指示 &lt;code&gt;v&lt;/code&gt; 是 &lt;code&gt;int&lt;/code&gt; ， &lt;code&gt;double&lt;/code&gt; ， &lt;code&gt;char*&lt;/code&gt; 或 &lt;code&gt;void*&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d1184739e754d1651142d3172c8ebc5daed12ca8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;flatlength/1&lt;/code&gt; computes the size of the possibly nested list &lt;code&gt;NestedList&lt;/code&gt;, which can contain binaries.</source>
          <target state="translated">&lt;code&gt;flatlength/1&lt;/code&gt; 计算可能嵌套列表 &lt;code&gt;NestedList&lt;/code&gt; 的大小，该列表可以包含二进制文件。</target>
        </trans-unit>
        <trans-unit id="d74b4f2af562e2114e0b51bbff230bb4388dd991" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;flex&lt;/code&gt; -- Headers and libraries are needed to build the flex scanner for the &lt;code&gt;megaco&lt;/code&gt; application on Unix/Linux.</source>
          <target state="translated">&lt;code&gt;flex&lt;/code&gt; -头文件和库需要建立的柔性扫描器 &lt;code&gt;megaco&lt;/code&gt; 在Unix / Linux应用程序。</target>
        </trans-unit>
        <trans-unit id="74fcf3c78913fbf821758d89dc44c494d6454f23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;flex&lt;/code&gt; will result in the start of the flex scanner with default options.</source>
          <target state="translated">&lt;code&gt;flex&lt;/code&gt; 将导致使用默认选项启动flex扫描仪。</target>
        </trans-unit>
        <trans-unit id="04d9e76a3083198e0e59eb9805b99dc252f52cde" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;float&lt;/code&gt;&lt;code&gt;fun_type&lt;/code&gt;&lt;code&gt;integer&lt;/code&gt;&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;operator&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;float&lt;/code&gt;&lt;code&gt;fun_type&lt;/code&gt;&lt;code&gt;integer&lt;/code&gt;&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;operator&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8a2dfdcae3e72af0b397272b11d334a775438639" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fold(Function, Acc0, QH)&lt;/code&gt; is equivalent to &lt;code&gt;fold(Function, Acc0, QH, [])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;fold(Function, Acc0, QH)&lt;/code&gt; 等同于 &lt;code&gt;fold(Function, Acc0, QH, [])&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="666d88418010155e1eb303e34c7d07058a4eb795" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fold_literal/1&lt;/code&gt; can be used to revert a node to the normal-form representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c9191670935d46aa880cfa8823a02f644b56726" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;foldl/3&lt;/code&gt; is tail recursive and is usually preferred to &lt;code&gt;foldr/3&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;foldl/3&lt;/code&gt; 是尾递归的，通常比 &lt;code&gt;foldr/3&lt;/code&gt; 更可取。</target>
        </trans-unit>
        <trans-unit id="04cf8d6f179bfc7ed5f275591a68540638d661bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;foldl&lt;/code&gt; returns the same term as the last call to &lt;code&gt;Function&lt;/code&gt; returned.</source>
          <target state="translated">&lt;code&gt;foldl&lt;/code&gt; 返回与最后一次返回 &lt;code&gt;Function&lt;/code&gt; 相同的术语。</target>
        </trans-unit>
        <trans-unit id="d7383e57980283ddf219642ad6992f8786be273a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;foldl&lt;/code&gt; takes a function of two arguments, an accumulator and a list:</source>
          <target state="translated">&lt;code&gt;foldl&lt;/code&gt; 具有两个参数的功能，一个累加器和一个列表：</target>
        </trans-unit>
        <trans-unit id="a980ecb6db0f72525911b3c138d4624899757f5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;foldl&lt;/code&gt; works like a &lt;code&gt;while&lt;/code&gt; loop in an imperative language:</source>
          <target state="translated">&lt;code&gt;foldl&lt;/code&gt; 在命令式语言中的工作方式类似于 &lt;code&gt;while&lt;/code&gt; 循环：</target>
        </trans-unit>
        <trans-unit id="12ddc2a809fd7bd86fa64a14a9b0ed6d0aafdc5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fop&lt;/code&gt; -- Apache FOP print formatter (requires Java). Can be downloaded from &lt;code&gt;&lt;a href=&quot;http://xmlgraphics.apache.org/fop&quot;&gt;http://xmlgraphics.apache.org/fop&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;fop&lt;/code&gt; -Apache FOP打印格式化程序（需要Java）。可以从 &lt;code&gt;&lt;a href=&quot;http://xmlgraphics.apache.org/fop&quot;&gt;http://xmlgraphics.apache.org/fop&lt;/a&gt;&lt;/code&gt; 下载。</target>
        </trans-unit>
        <trans-unit id="bedcbc2018e10c74468d728a87e55c720602281d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;foreach&lt;/code&gt; is evaluated for its side-effect and not its value. &lt;code&gt;foreach(Fun ,L)&lt;/code&gt; calls &lt;code&gt;Fun(X)&lt;/code&gt; for each element &lt;code&gt;X&lt;/code&gt; in &lt;code&gt;L&lt;/code&gt; and the processing occurs in the order that the elements were defined in &lt;code&gt;L&lt;/code&gt;. &lt;code&gt;map&lt;/code&gt; does not define the order in which its elements are processed.</source>
          <target state="translated">&lt;code&gt;foreach&lt;/code&gt; 会评估其副作用而不是其价值。 &lt;code&gt;foreach(Fun ,L)&lt;/code&gt; 调用 &lt;code&gt;Fun(X)&lt;/code&gt; 为每个元素 &lt;code&gt;X&lt;/code&gt; 在 &lt;code&gt;L&lt;/code&gt; 和在于该元件是在定义的顺序发生的处理 &lt;code&gt;L&lt;/code&gt; 。 &lt;code&gt;map&lt;/code&gt; 未定义其元素的处理顺序。</target>
        </trans-unit>
        <trans-unit id="d703eafa2f7859dc0a44a15d49ee91bb344ed005" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;foreach&lt;/code&gt; is used to set up a fixture and optionally tear it down afterwards, repeated for each single one of the specified test sets.</source>
          <target state="translated">&lt;code&gt;foreach&lt;/code&gt; 用于设置固定装置，然后可选地将其拆下，对指定的每个测试集重复一次。</target>
        </trans-unit>
        <trans-unit id="56fd27fe59112334feaeed6957c8dbff87298ad2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;foreach&lt;/code&gt; takes a function of one argument and a list of terms:</source>
          <target state="translated">&lt;code&gt;foreach&lt;/code&gt; 具有一个参数和一个术语列表的功能：</target>
        </trans-unit>
        <trans-unit id="4fd5bd17516785e7ede0ee6695159118bb728df0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;foreachx&lt;/code&gt; is like &lt;code&gt;foreach&lt;/code&gt;, but uses a list of pairs, each containing an extra argument &lt;code&gt;X&lt;/code&gt; and an extended instantiator function.</source>
          <target state="translated">&lt;code&gt;foreachx&lt;/code&gt; 类似于 &lt;code&gt;foreach&lt;/code&gt; ，但是使用成对列表，每个对包含一个额外的参数 &lt;code&gt;X&lt;/code&gt; 和一个扩展的实例化函数。</target>
        </trans-unit>
        <trans-unit id="5c71dc112956ef23a5424e4aff313183bf49b551" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;forget/1&lt;/code&gt; and &lt;code&gt;forget/2&lt;/code&gt; remove all or some of the &lt;code&gt;&lt;a href=&quot;#user_variable&quot;&gt;user variables&lt;/a&gt;&lt;/code&gt; of an &lt;code&gt;&lt;a href=&quot;#xref_server&quot;&gt;xref server&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;forget/1&lt;/code&gt; 和 &lt;code&gt;forget/2&lt;/code&gt; 除去的全部或部分 &lt;code&gt;&lt;a href=&quot;#user_variable&quot;&gt;user variables&lt;/a&gt;&lt;/code&gt; 的的 &lt;code&gt;&lt;a href=&quot;#xref_server&quot;&gt;xref server&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f00ae3ff9af5cc09d1f13d0f3746886336de4af2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;form_list&lt;/code&gt;&lt;code&gt;function&lt;/code&gt;&lt;code&gt;warning_marker&lt;/code&gt;&lt;code&gt;text&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;form_list&lt;/code&gt;&lt;code&gt;function&lt;/code&gt;&lt;code&gt;warning_marker&lt;/code&gt;&lt;code&gt;text&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="610ce2e022ce5a4fd6884f8f718789dd55a1503e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;formatter =&amp;gt; {logger_formatter, DefaultFormatterConfig&lt;/code&gt;}</source>
          <target state="translated">&lt;code&gt;formatter =&amp;gt; {logger_formatter, DefaultFormatterConfig&lt;/code&gt; }</target>
        </trans-unit>
        <trans-unit id="efa356d7300f5cd22345e642cd285b2f01a4f7b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fprof&lt;/code&gt; can also skip the file step and trace to a tracer process that does the profiling in runtime.</source>
          <target state="translated">&lt;code&gt;fprof&lt;/code&gt; 还可以跳过文件步骤，并跟踪到在运行时进行性能分析的跟踪程序进程。</target>
        </trans-unit>
        <trans-unit id="3fe51a77f60d52398c4a8e87c24c7b8fa78fef7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fprof&lt;/code&gt; is a profiling tool that can be used to get a picture of how much processing time different functions consumes and in which processes.</source>
          <target state="translated">&lt;code&gt;fprof&lt;/code&gt; 是一种配置工具，可用于了解不同功能消耗多少处理时间以及在哪些进程中使用。</target>
        </trans-unit>
        <trans-unit id="2380ad9f8becb6453300ae34891cf4b2cdc38957" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fprof&lt;/code&gt; is based on trace to file to minimize runtime performance impact. Using &lt;code&gt;fprof&lt;/code&gt; is just a matter of calling a few library functions, see the &lt;code&gt;fprof&lt;/code&gt; manual page in Tools.</source>
          <target state="translated">&lt;code&gt;fprof&lt;/code&gt; 基于对文件的跟踪，以最大程度地减少对运行时性能的影响。使用 &lt;code&gt;fprof&lt;/code&gt; 只需调用一些库函数即可，请参阅&amp;ldquo; 工具&amp;rdquo;中的 &lt;code&gt;fprof&lt;/code&gt; 手册页。</target>
        </trans-unit>
        <trans-unit id="e0651f71599e95f3f7558bb0b476db9a8cb6717d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fprof&lt;/code&gt; measures the execution time for each function, both own time, that is, how much time a function has used for its own execution, and accumulated time, that is, including called functions. The values are displayed per process. You also get to know how many times each function has been called.</source>
          <target state="translated">&lt;code&gt;fprof&lt;/code&gt; 会测量每个函数的执行时间，既包括自己的时间（即，一个函数用于执行其自身的时间），也包括累积的时间（即，包括被调用的函数）。这些值按过程显示。您还将了解每个函数被调用了多少次。</target>
        </trans-unit>
        <trans-unit id="ac2c5cd2f94fa13cc2b4ab8dc8bf96fda7723eee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fprof&lt;/code&gt; presents both &lt;strong&gt;own time&lt;/strong&gt; i.e how much time a function has used for its own execution, and &lt;strong&gt;accumulated time&lt;/strong&gt; i.e including called functions. All presented times are collected using trace timestamps. &lt;code&gt;fprof&lt;/code&gt; tries to collect cpu time timestamps, if the host machine OS supports it. Therefore the times may be wallclock times and OS scheduling will randomly strike all called functions in a presumably fair way.</source>
          <target state="translated">&lt;code&gt;fprof&lt;/code&gt; 既显示&lt;strong&gt;自己的时间，&lt;/strong&gt;即一个函数执行其自身所用的&lt;strong&gt;时间&lt;/strong&gt;，又显示&lt;strong&gt;累计的时间，&lt;/strong&gt;即包括被调用的函数。所有显示的时间都是使用跟踪时间戳收集的。如果主机操作系统支持，则 &lt;code&gt;fprof&lt;/code&gt; 尝试收集cpu时间时间戳。因此，时间可能是壁钟时间，并且OS调度将以大概公平的方式随机触发所有被调用的函数。</target>
        </trans-unit>
        <trans-unit id="fe28aa0072f7e8bf4af0009cc2b0fb9c81ff3dde" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fprof&lt;/code&gt; presents wall clock times from the host machine OS, with the assumption that OS scheduling will randomly load the profiled functions in a fair way. Both &lt;strong&gt;own time&lt;/strong&gt; i.e the time used by a function for its own execution, and &lt;strong&gt;accumulated time&lt;/strong&gt; i.e execution time including called functions.</source>
          <target state="translated">&lt;code&gt;fprof&lt;/code&gt; 表示主机操作系统的挂钟时间，并假设操作系统调度将以公平的方式随机加载配置文件功能。既有&lt;strong&gt;自己的时间，&lt;/strong&gt;即一个函数用于其自身执行的&lt;strong&gt;时间&lt;/strong&gt;，又有&lt;strong&gt;累计的时间，&lt;/strong&gt;即包括被调用函数的执行时间。</target>
        </trans-unit>
        <trans-unit id="a92fbd44c76bf7c734ba1bee78aed13fedb670b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fprof&lt;/code&gt; provides the most detailed information about where the program time is spent, but it significantly slows down the program it profiles.</source>
          <target state="translated">&lt;code&gt;fprof&lt;/code&gt; 提供有关在哪里花费程序时间的最详细信息，但是它会严重降低它描述的程序的速度。</target>
        </trans-unit>
        <trans-unit id="5f19df80da559208071940bf6f95e75083056945" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fprof&lt;/code&gt; uses tracing with timestamps to collect profiling data. Therfore there is no need for special compilation of any module to be profiled.</source>
          <target state="translated">&lt;code&gt;fprof&lt;/code&gt; 使用带有时间戳的跟踪来收集性能分析数据。因此，不需要对要分析的任何模块进行特殊编译。</target>
        </trans-unit>
        <trans-unit id="e277f356c9acf9d949db5fc2d6cccc75c8f7d1e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;freed&lt;/code&gt; is the length of the freelist, where blocks are placed when they are released by &lt;code&gt;erl_free_term()&lt;/code&gt; and &lt;code&gt;erl_free_compound()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;freed&lt;/code&gt; 是空闲列表的长度，当 &lt;code&gt;erl_free_term()&lt;/code&gt; 和 &lt;code&gt;erl_free_compound()&lt;/code&gt; 释放它们时，将放置这些块。</target>
        </trans-unit>
        <trans-unit id="e1e8867e117c12deea9b78559ed6b7640546dad9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;from : string&lt;/code&gt; :: Process ID or Port ID. Ex. &lt;code&gt;&quot;&amp;lt;0.131.0&amp;gt;&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;from : string&lt;/code&gt; ::进程ID或端口ID。例如 &lt;code&gt;&quot;&amp;lt;0.131.0&amp;gt;&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a127c73f210bc87afb69376ea85cedf158139fee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;from : string&lt;/code&gt; :: Process ID. Ex. &lt;code&gt;&quot;&amp;lt;0.131.0&amp;gt;&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;from : string&lt;/code&gt; ::进程ID。例如 &lt;code&gt;&quot;&amp;lt;0.131.0&amp;gt;&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cef5c56cbd60fbf9774a4484f7312c970e9fc9f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;from_term&lt;/code&gt; can be used for creating atomic or ordered sets. The only purpose of such a set is that of later building unordered sets, as all functions in this module that &lt;strong&gt;do&lt;/strong&gt; anything operate on unordered sets. Creating unordered sets from a collection of ordered sets can be the way to go if the ordered sets are big and one does not want to waste heap by rebuilding the elements of the unordered set. The following example shows that a set can be built &quot;layer by layer&quot;:</source>
          <target state="translated">&lt;code&gt;from_term&lt;/code&gt; 可用于创建原子或有序集。这样的集合的唯一目的是以后构建无序集合，因为该模块中所有可对无序集合&lt;strong&gt;执行&lt;/strong&gt;任何操作的功能。如果有序集合很大并且一个人不想通过重建无序集合的元素来浪费堆，那么从有序集合的集合中创建无序集合可能是一种方法。以下示例显示可以&amp;ldquo;逐层&amp;rdquo;构建集合：</target>
        </trans-unit>
        <trans-unit id="670549e6667bb262241b0a2307b88d0687f24a61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fun fresh_crl/2&lt;/code&gt; will be used as input option &lt;code&gt;update_crl&lt;/code&gt; to &lt;code&gt;public_key:pkix_crls_validate/3 &lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f43d0c2eeca9964a6809b3f352521aa472473ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fun fresh_crl/2&lt;/code&gt; will be used as input option &lt;code&gt;update_crl&lt;/code&gt; to &lt;code&gt;public_key:pkix_crls_validate/3&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;fun fresh_crl/2&lt;/code&gt; 将被用作输入选项 &lt;code&gt;update_crl&lt;/code&gt; 到 &lt;code&gt;public_key:pkix_crls_validate/3&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9ddcb04653f095ae99c208679aa62928da9bbca4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fun&lt;/code&gt; is the name of the function to run.</source>
          <target state="translated">&lt;code&gt;fun&lt;/code&gt; 是要运行的函数的名称。</target>
        </trans-unit>
        <trans-unit id="bbead72e2d93c2b28399e3cd53d75a097b878521" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;funcs&lt;/code&gt; is a static array of function descriptors for all the implemented NIFs in this library.</source>
          <target state="translated">&lt;code&gt;funcs&lt;/code&gt; 是此库中所有已实现NIF的函数描述符的静态数组。</target>
        </trans-unit>
        <trans-unit id="caba8665f73b66e1d73b83a0e84d50c336b865da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;genErr&lt;/code&gt;(SNMPv1)</source>
          <target state="translated">&lt;code&gt;genErr&lt;/code&gt;(SNMPv1)</target>
        </trans-unit>
        <trans-unit id="088bc3d713ad96f8f563cfc0d235b8f6b27c13b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;genErr&lt;/code&gt;. Used if an error occurred. Note that this should be an internal processing error, e.g. a caused by a programing fault somewhere. If some column does not exist, use &lt;code&gt;{noValue, noSuchName}&lt;/code&gt; or &lt;code&gt;{noValue, noSuchInstance}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;genErr&lt;/code&gt; 。发生错误时使用。请注意，这应该是内部处理错误，例如，由于某个地方的编程错误引起的错误。如果某些列不存在，请使用 &lt;code&gt;{noValue, noSuchName}&lt;/code&gt; 或 &lt;code&gt;{noValue, noSuchInstance}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c4b15564b3f657fea0a7a4683b8b9183417b2490" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;genErr&lt;/code&gt;. Used if an error occurred. Note, this should be an internal processing error, e.g. a caused by a programing fault somewhere. If the variable does not exist, use &lt;code&gt;{noValue, noSuchName}&lt;/code&gt; or &lt;code&gt;{noValue, noSuchInstance}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;genErr&lt;/code&gt; 。发生错误时使用。注意，这应该是内部处理错误，例如，由于某个地方的编程错误引起的错误。如果变量不存在，请使用 &lt;code&gt;{noValue, noSuchName}&lt;/code&gt; 或 &lt;code&gt;{noValue, noSuchInstance}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="99733570345779e7a0d224131d24856ca6591748" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gen_element()&lt;/code&gt; will produce one of two instructions depending on &lt;code&gt;Index&lt;/code&gt;. If &lt;code&gt;Index&lt;/code&gt; is an integer in the range from 1 up to the maximum tuple size, the instruction &lt;code&gt;i_fast_element/2&lt;/code&gt; will be produced, otherwise the instruction &lt;code&gt;i_element/4&lt;/code&gt; will be produced. The corresponding specific instructions are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daa48225a7f95c221293572ba86a3622a59538be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gen_event(3)&lt;/code&gt;, &lt;code&gt;logger(3)&lt;/code&gt;, &lt;code&gt;log_mf_h(3)&lt;/code&gt;, &lt;code&gt;kernel(6)&lt;/code&gt;, &lt;code&gt;sasl(6)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;gen_event(3)&lt;/code&gt; ， &lt;code&gt;logger(3)&lt;/code&gt; ， &lt;code&gt;log_mf_h(3)&lt;/code&gt; ， &lt;code&gt;kernel(6)&lt;/code&gt; ， &lt;code&gt;sasl(6)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c4c26a8d6d446889b7679693876dc59c6aa2cace" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gen_event:start_link&lt;/code&gt; must be used if the event manager is part of a supervision tree, that is, started by a supervisor. There is another function, &lt;code&gt;gen_event:start&lt;/code&gt;, to start a standalone event manager, that is, an event manager that is not part of a supervision tree.</source>
          <target state="translated">&lt;code&gt;gen_event:start_link&lt;/code&gt; 如果事件管理器是监督树的一部分，即由监督者启动，则必须使用gen_event：start_link。还有另一个函数 &lt;code&gt;gen_event:start&lt;/code&gt; ，用于启动独立的事件管理器，即不属于监督树的事件管理器。</target>
        </trans-unit>
        <trans-unit id="25ea09c2ac3919a4e18aa05330e97be17e7e4960" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gen_fsm:_/_&lt;/code&gt; (use the 'gen_statem' module instead)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3326920226e31e863ef987e5e66516c9a795a98" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gen_server:start_link&lt;/code&gt; is synchronous. It does not return until the &lt;code&gt;gen_server&lt;/code&gt; has been initialized and is ready to receive requests.</source>
          <target state="translated">&lt;code&gt;gen_server:start_link&lt;/code&gt; 是同步的。直到 &lt;code&gt;gen_server&lt;/code&gt; 已初始化并准备接收请求时，它才会返回。</target>
        </trans-unit>
        <trans-unit id="fec974a8ca4f720c2183784b14d9eeffe9f4c01b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gen_server:start_link&lt;/code&gt; must be used if the &lt;code&gt;gen_server&lt;/code&gt; is part of a supervision tree, that is, started by a supervisor. There is another function, &lt;code&gt;gen_server:start&lt;/code&gt;, to start a standalone &lt;code&gt;gen_server&lt;/code&gt;, that is, a &lt;code&gt;gen_server&lt;/code&gt; that is not part of a supervision tree.</source>
          <target state="translated">&lt;code&gt;gen_server:start_link&lt;/code&gt; 如果 &lt;code&gt;gen_server&lt;/code&gt; 是监视树的一部分，即由主管启动，则必须使用gen_server：start_link。还有另一个函数 &lt;code&gt;gen_server:start&lt;/code&gt; ，以启动独立的 &lt;code&gt;gen_server&lt;/code&gt; ，即不属于监督树的 &lt;code&gt;gen_server&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="69c3808d97812c478604c1ee7338f86c0e5166ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gen_statem&lt;/code&gt; has got the same features that &lt;code&gt;&lt;a href=&quot;gen_fsm&quot;&gt;gen_fsm&lt;/a&gt;&lt;/code&gt; had and adds some really useful:</source>
          <target state="translated">&lt;code&gt;gen_statem&lt;/code&gt; 具有与 &lt;code&gt;&lt;a href=&quot;gen_fsm&quot;&gt;gen_fsm&lt;/a&gt;&lt;/code&gt; 相同的功能，并增加了一些非常有用的功能：</target>
        </trans-unit>
        <trans-unit id="7b7677dfa28038792b14524f84d7e0b361703437" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gen_statem&lt;/code&gt; provides a generic state machine behaviour and replaces its predecessor &lt;code&gt;&lt;a href=&quot;gen_fsm&quot;&gt;gen_fsm&lt;/a&gt;&lt;/code&gt; since Erlang/OTP 20.0.</source>
          <target state="translated">&lt;code&gt;gen_statem&lt;/code&gt; 提供通用的状态机行为，并从Erlang / OTP 20.0开始替代其前身 &lt;code&gt;&lt;a href=&quot;gen_fsm&quot;&gt;gen_fsm&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="58107f82c391f9cd10e5810da1d82cfe707c7339" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gen_statem&lt;/code&gt; provides a generic state machine behaviour that for new code replaces its predecessor &lt;code&gt;&lt;a href=&quot;gen_fsm&quot;&gt;gen_fsm&lt;/a&gt;&lt;/code&gt; since Erlang/OTP 20.0. The &lt;code&gt;gen_fsm&lt;/code&gt; behaviour remains in OTP &quot;as is&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61ccb3852aed23a92daa802791e43eaacbbbc927" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;genop.tab&lt;/code&gt; has the following definition:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="557d1ee0311f9528cc524cb7b1ba37c350007737" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;get_debug/3&lt;/code&gt; is deprecated since it returns data of an internal type only useful for debugging.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a66592831b022c6187fbf41f64b27f39b86141fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;get_user/2, get_user/3&lt;/code&gt;, and &lt;code&gt;get_user/4&lt;/code&gt; each returns an &lt;code&gt;httpd_user&lt;/code&gt; record containing the userdata for a specific user. If the user cannot be found, &lt;code&gt;{error, Reason}&lt;/code&gt; is returned. When &lt;code&gt;get_user/2&lt;/code&gt; is called, options &lt;code&gt;Port&lt;/code&gt; and &lt;code&gt;Dir&lt;/code&gt; are mandatory.</source>
          <target state="translated">&lt;code&gt;get_user/2, get_user/3&lt;/code&gt; 和 &lt;code&gt;get_user/4&lt;/code&gt; 各自返回包含特定用户的userdata 的 &lt;code&gt;httpd_user&lt;/code&gt; 记录。如果找不到用户 &lt;code&gt;{error, Reason}&lt;/code&gt; 则返回{错误，原因}。当 &lt;code&gt;get_user/2&lt;/code&gt; 被调用，选择 &lt;code&gt;Port&lt;/code&gt; 和 &lt;code&gt;Dir&lt;/code&gt; 是强制性的。</target>
        </trans-unit>
        <trans-unit id="e27858e682235d2210b717885d84526ff21837cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getstat(Socket)&lt;/code&gt; is equivalent to &lt;code&gt;getstat(Socket, [recv_avg, recv_cnt, recv_dvi, recv_max, recv_oct, send_avg, send_cnt, send_dvi, send_max, send_oct])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getstat(Socket)&lt;/code&gt; 等效于 &lt;code&gt;getstat(Socket, [recv_avg, recv_cnt, recv_dvi, recv_max, recv_oct, send_avg, send_cnt, send_dvi, send_max, send_oct])&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9765ff26da8caeb0d9e9d99441ca7db79e0d184e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getstat(Socket)&lt;/code&gt; is equivalent to &lt;code&gt;getstat(Socket, [recv_avg, recv_cnt, recv_dvi, recv_max, recv_oct, send_avg, send_cnt, send_pend, send_max, send_oct])&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="982cff1d1cf0bd8b04cb3522a543b231f993a363" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gf&lt;/code&gt; (good fit)</source>
          <target state="translated">&lt;code&gt;gf&lt;/code&gt; （合适）</target>
        </trans-unit>
        <trans-unit id="994c8be6a654ef85767135d61bce7835d49034dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;global&lt;/code&gt; manual page in Kernel</source>
          <target state="translated">&lt;code&gt;global&lt;/code&gt; 内核中的全局手册页</target>
        </trans-unit>
        <trans-unit id="b2e6d5d11db36f7553eadc07fb64579b6abc300f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;handle_connect/3&lt;/code&gt; (with &lt;code&gt;Extra&lt;/code&gt;) can also be called as a result of a call to the &lt;code&gt;&lt;a href=&quot;megaco#connect&quot;&gt;megaco:connect/5&lt;/a&gt;&lt;/code&gt; function (if that function is called with the &lt;code&gt;Extra&lt;/code&gt; argument different than &lt;code&gt;ignore_extra&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;handle_connect/3&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;megaco#connect&quot;&gt;megaco:connect/5&lt;/a&gt;&lt;/code&gt; 函数的调用结果也可以调用handle_connect / 3（带有 &lt;code&gt;Extra&lt;/code&gt; ）（如果该函数是使用 &lt;code&gt;Extra&lt;/code&gt; 参数而不是 &lt;code&gt;ignore_extra&lt;/code&gt; 调用的）。</target>
        </trans-unit>
        <trans-unit id="ae6028bcc62cde51d474be425c9dc7e8b6e3fcb9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;handle_debug&lt;/code&gt; returns an updated debug structure &lt;code&gt;Deb1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;handle_debug&lt;/code&gt; 返回更新的调试结构 &lt;code&gt;Deb1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2644c967c0e4c82c2e1deca1624de9aa881599b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;head&lt;/code&gt; is the new term to be added.</source>
          <target state="translated">&lt;code&gt;head&lt;/code&gt; 是要添加的新术语。</target>
        </trans-unit>
        <trans-unit id="3a24a5b08e442f4a933596f4d876eec4e71ed413" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;heap : integer&lt;/code&gt; :: Young heap word size. Ex. &lt;code&gt;233&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;heap : integer&lt;/code&gt; ：：年轻堆字长。例如 &lt;code&gt;233&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="68732f44924e2380dcf4ce13c8cf3802ce686c88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;heart&lt;/code&gt; waits for &lt;code&gt;S&lt;/code&gt; seconds to let the crash dump file be written. After &lt;code&gt;S&lt;/code&gt; seconds, &lt;code&gt;heart&lt;/code&gt; reboots the runtime system, whether the crash dump file is written or not.</source>
          <target state="translated">&lt;code&gt;heart&lt;/code&gt; 等待 &lt;code&gt;S&lt;/code&gt; 秒让崩溃转储文件被写入。 &lt;code&gt;S&lt;/code&gt; 秒后，无论是否写入故障转储文件， &lt;code&gt;heart&lt;/code&gt; 重新启动运行系统。</target>
        </trans-unit>
        <trans-unit id="b0d40b0219f08a0f10b7e507264f269367c19823" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;held_locks&lt;/code&gt;. Returns a list of all locks held by the local Mnesia lock manager.</source>
          <target state="translated">&lt;code&gt;held_locks&lt;/code&gt; 。返回本地Mnesia锁管理器拥有的所有锁的列表。</target>
        </trans-unit>
        <trans-unit id="9fad5755a99ed660ab018a9fff07227514ac9eb0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hexlist_to_integer&lt;/code&gt; converts the hexadecimal value of &lt;code&gt;HexString&lt;/code&gt; to an integer.</source>
          <target state="translated">&lt;code&gt;hexlist_to_integer&lt;/code&gt; 的十六进制值转换 &lt;code&gt;HexString&lt;/code&gt; 为整数。</target>
        </trans-unit>
        <trans-unit id="2ea1441c110f6e78254e897aca6367ee86b423c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;host&lt;/code&gt; is the name of the host on which the node is running.</source>
          <target state="translated">&lt;code&gt;host&lt;/code&gt; 是在其上运行节点的主机的名称。</target>
        </trans-unit>
        <trans-unit id="6892bcdba176157478bff75149fde20c9a8386b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;host_conf_bsdos&lt;/code&gt; (BSDOS host.conf)</source>
          <target state="translated">&lt;code&gt;host_conf_bsdos&lt;/code&gt; （BSDOS host.conf）</target>
        </trans-unit>
        <trans-unit id="b4278631e51356e08db77d683e4b1a8b8c3dcc64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;host_conf_freebsd&lt;/code&gt; (FreeBSD host.conf)</source>
          <target state="translated">&lt;code&gt;host_conf_freebsd&lt;/code&gt; （FreeBSD host.conf）</target>
        </trans-unit>
        <trans-unit id="22bf7cfd92c8878929dd2ba3dbfc046fecfa77d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;host_conf_linux&lt;/code&gt; (Linux host.conf)</source>
          <target state="translated">&lt;code&gt;host_conf_linux&lt;/code&gt; （Linux host.conf）</target>
        </trans-unit>
        <trans-unit id="65041a647fe612fd0f8e59c072f652532fdd0022" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hostname() = string()&lt;/code&gt; representing a host, for example, &quot;foo.bar.com&quot;</source>
          <target state="translated">&lt;code&gt;hostname() = string()&lt;/code&gt; 代表主机的string（），例如&amp;ldquo; foo.bar.com&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="288a4d5e846f07e37dc5f2adefbad2e128b52c95" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hosts&lt;/code&gt; (Unix hosts)</source>
          <target state="translated">&lt;code&gt;hosts&lt;/code&gt; （Unix主机）</target>
        </trans-unit>
        <trans-unit id="6a12e47c4feb36adb0192532ce73f05287a8e966" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;http_uri:decode/1&lt;/code&gt; (use uri_string functions instead)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96331c204582f69f3458bf19cf03c9a1e4e77bcf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;http_uri:encode/1&lt;/code&gt; (use uri_string functions instead)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c0d87142376fc74def3e0e8824d17afe481f483" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;http_uri:parse/1&lt;/code&gt; (use uri_string functions instead)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73c564143f341261982efe56c6a922f00a07da21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;http_uri:parse/2&lt;/code&gt; (use uri_string functions instead)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbd2154a99525dda97a27730bd23f1e4a7215692" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;http_uri:scheme_defaults/0&lt;/code&gt; (use uri_string functions instead)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00a3f3236838b7283ceee66027d32a5f53946422" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;http_version() = string()&lt;/code&gt;, for example, &lt;code&gt;&quot;HTTP/1.1&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;http_version() = string()&lt;/code&gt; ，例如 &lt;code&gt;&quot;HTTP/1.1&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2d25d33e2da0a72d0ff93e9911356f95756b53bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;httpd:parse_query/1&lt;/code&gt; (use uri_string:dissect_query/1 instead)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be5d05c29412198b5aad22b78cfb2269d337b20e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;huffman_only&lt;/code&gt; to force Huffman encoding only (no string match)</source>
          <target state="translated">&lt;code&gt;huffman_only&lt;/code&gt; 强制霍夫曼编码（不使用字符串匹配）</target>
        </trans-unit>
        <trans-unit id="c26f26d92be7aca623c0670870412d9071dfda8c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;i/0&lt;/code&gt; displays system information, listing information about all processes. &lt;code&gt;ni/0&lt;/code&gt; does the same, but for all nodes the network.</source>
          <target state="translated">&lt;code&gt;i/0&lt;/code&gt; 显示系统信息，列出有关所有进程的信息。 &lt;code&gt;ni/0&lt;/code&gt; 相同，但是对于网络的所有节点。</target>
        </trans-unit>
        <trans-unit id="2157bc04ce7af3e437af6d31f4828ed8a0adc829" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;i&lt;/code&gt; - Tagged literal integer (a SMALL that will fit in one word).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98cee81b37a50ff819fdafa0cc9092a35ea2379d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;i&lt;/code&gt; - Tagged literal integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49316a2a7c9a4624df2f6b8cc030d52912343ecd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;i&lt;/code&gt; - Tagged literal integer. The default value is 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04504bb8a8501acb73e0a9c43df2d2573c8f8d4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;i&lt;/code&gt; is the integer value to assign.</source>
          <target state="translated">&lt;code&gt;i&lt;/code&gt; 是要分配的整数值。</target>
        </trans-unit>
        <trans-unit id="aeb4e82d784870d44776ba9fe6d7d59e24f25aad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;i&lt;/code&gt; means that those wrongly encoded filenames are silently ignored.</source>
          <target state="translated">&lt;code&gt;i&lt;/code&gt; 意思是那些错误编码的文件名会被静默忽略。</target>
        </trans-unit>
        <trans-unit id="49464c713cc0dfa648fc3b3996eac6de20e38891" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;i&lt;/code&gt; means that wrongly encoded filenames are silently ignored.</source>
          <target state="translated">&lt;code&gt;i&lt;/code&gt; 意思是错误编码的文件名会被静默忽略。</target>
        </trans-unit>
        <trans-unit id="8b2c2514743abe13e9d9eb27f4df8d2b692d9190" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;id&lt;/code&gt; is used to identify the child specification internally by the supervisor.</source>
          <target state="translated">&lt;code&gt;id&lt;/code&gt; 用于由主管内部标识子规范。</target>
        </trans-unit>
        <trans-unit id="5f4e88723c35f3efa703d12f4affbf36cd42c91e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;id_dsa&lt;/code&gt; and &lt;code&gt;id_dsa.pub&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;id_dsa&lt;/code&gt; 和 &lt;code&gt;id_dsa.pub&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="80ccb7cf09932459281c51978ce18d9ff93af219" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;id_ecdsa&lt;/code&gt; and &lt;code&gt;id_ecdsa.pub&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;id_ecdsa&lt;/code&gt; 和 &lt;code&gt;id_ecdsa.pub&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="723683dd18200916f32eee524f5fbab106cc4413" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;id_extensions()&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#StdCertExt&quot;&gt;Standard Certificate Extensions&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#PrivIntExt&quot;&gt;Private Internet Extensions&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#CRLCertExt&quot;&gt;CRL Extensions&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#CRLEntryExt&quot;&gt;CRL Entry Extensions&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;id_extensions()&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#StdCertExt&quot;&gt;Standard Certificate Extensions&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;#PrivIntExt&quot;&gt;Private Internet Extensions&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;#CRLCertExt&quot;&gt;CRL Extensions&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;#CRLEntryExt&quot;&gt;CRL Entry Extensions&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4342ad081d7e782eb3338029656546ad8c13fd5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;id_rsa&lt;/code&gt; and &lt;code&gt;id_rsa.pub&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;id_rsa&lt;/code&gt; 和 &lt;code&gt;id_rsa.pub&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1d55a9218deae1e2f1a323296767e1091ef421a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;idle&lt;/code&gt; - The process is no longer executing interpreted code. &lt;code&gt;Info={}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;idle&lt;/code&gt; -进程不再执行解释后的代码。 &lt;code&gt;Info={}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8791c890d7607fd8f31f9dd295d174861fc8c67b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;igor:_/_&lt;/code&gt; (use https://github.com/richcarl/igor)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97edd1f6a72a731415e37a350ebe8714d5866342" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;illegal&lt;/code&gt;. Operation not supported on this record.</source>
          <target state="translated">&lt;code&gt;illegal&lt;/code&gt; 。该记录不支持该操作。</target>
        </trans-unit>
        <trans-unit id="e0d828be650dc009669d1246020f154926727ed7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;in_proj&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;in_proj&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="39587b4554e60c1cfb91fac58c0e382b5990cc79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;include&lt;/code&gt; - Optional. Used for public include files that must be reachable from other applications.</source>
          <target state="translated">&lt;code&gt;include&lt;/code&gt; -可选。用于必须从其他应用程序访问的公共包含文件。</target>
        </trans-unit>
        <trans-unit id="ff81597bd53cf57baebbb47293e8636989951804" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;include_lib&lt;/code&gt; is similar to &lt;code&gt;include&lt;/code&gt;, but is not to point out an absolute file. Instead, the first path component (possibly after variable substitution) is assumed to be the name of an application.</source>
          <target state="translated">&lt;code&gt;include_lib&lt;/code&gt; 与 &lt;code&gt;include&lt;/code&gt; 相似，但是并没有指出一个绝对文件。而是将第一个路径组件（可能在变量替换之后）假定为应用程序的名称。</target>
        </trans-unit>
        <trans-unit id="9744fcb90bd27c49fdf4cfd20fe6418dbb84565a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;index&lt;/code&gt; is a pointer to an index into the buffer. This parameter is incremented with the size of the term decoded/encoded.</source>
          <target state="translated">&lt;code&gt;index&lt;/code&gt; 是指向缓冲区索引的指针。该参数随着术语解码/编码的大小而增加。</target>
        </trans-unit>
        <trans-unit id="07a79fcd5e7e859a1bfb106d04905bda27b10a72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;index&lt;/code&gt; is updated to point right after the term in the buffer.</source>
          <target state="translated">&lt;code&gt;index&lt;/code&gt; 被更新为指向缓冲区中该词之后的位置。</target>
        </trans-unit>
        <trans-unit id="12a90a4197d89466d42f3702437e9477be000759" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;index&lt;/code&gt;. Returns the list of index position integers for the table.</source>
          <target state="translated">&lt;code&gt;index&lt;/code&gt; 。返回表的索引位置整数列表。</target>
        </trans-unit>
        <trans-unit id="5c289c0b66d867cf14ffd06f2af4e444ec7ce62b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;index&lt;/code&gt;. This is a list of attribute names, or integers, which specify the tuple positions on which Mnesia is to build and maintain an extra index table.</source>
          <target state="translated">&lt;code&gt;index&lt;/code&gt; 。这是属性名称或整数的列表，它们指定Mnesia将在其上建立和维护额外索引表的元组位置。</target>
        </trans-unit>
        <trans-unit id="299804c67eba285bef67c03d6985c74f5637d6e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;index_exists&lt;/code&gt;. Some operations cannot be performed on tables with an index.</source>
          <target state="translated">&lt;code&gt;index_exists&lt;/code&gt; 。某些操作无法在具有索引的表上执行。</target>
        </trans-unit>
        <trans-unit id="35288bdbfca9c20f1bac1d4269d301589fa492cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;inet(3)&lt;/code&gt; and &lt;code&gt;gen_tcp(3)&lt;/code&gt;&lt;code&gt;gen_udp(3)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;inet(3)&lt;/code&gt; 和 &lt;code&gt;gen_tcp(3)&lt;/code&gt; &lt;code&gt;gen_udp(3)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5575a48905c6f63a11c7f5d59026e31b283a2521" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;inet&lt;/code&gt;, which means use a boot server on another machine. The flags &lt;code&gt;-id&lt;/code&gt;, &lt;code&gt;-hosts&lt;/code&gt; and &lt;code&gt;-setcookie&lt;/code&gt; must also be specified.</source>
          <target state="translated">&lt;code&gt;inet&lt;/code&gt; ，这意味着在另一台计算机上使用引导服务器。还必须指定标志 &lt;code&gt;-id&lt;/code&gt; ， &lt;code&gt;-hosts&lt;/code&gt; 和 &lt;code&gt;-setcookie&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c21f2b2d8202e01c49f29155f77d095834971b99" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;inet_default_connect_options&lt;/code&gt; can contain a list of default options used for all sockets returned when doing &lt;code&gt;connect&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;inet_default_connect_options&lt;/code&gt; 可以包含一组默认选项，这些默认选项用于进行 &lt;code&gt;connect&lt;/code&gt; 时返回的所有套接字。</target>
        </trans-unit>
        <trans-unit id="316be20dad523a52aa6cd2952f69c8c219b175d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;inet_default_listen_options&lt;/code&gt; can contain a list of default options used when issuing a &lt;code&gt;listen&lt;/code&gt; call.</source>
          <target state="translated">&lt;code&gt;inet_default_listen_options&lt;/code&gt; 可以包含发出 &lt;code&gt;listen&lt;/code&gt; 调用时使用的默认选项的列表。</target>
        </trans-unit>
        <trans-unit id="ea69b75cb33493fc4da8be9dffb968455023d48e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;infinity | integer()&lt;/code&gt; in milliseconds</source>
          <target state="translated">&lt;code&gt;infinity | integer()&lt;/code&gt; 以毫秒为单位</target>
        </trans-unit>
        <trans-unit id="390aff2544ff87cbe26c86eedc5d59d2f18ed009" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;infinity&lt;/code&gt; is the default setting and is used if no value is specified for &lt;code&gt;Retries&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;infinity&lt;/code&gt; 是默认设置，如果未为 &lt;code&gt;Retries&lt;/code&gt; 指定值，则使用infinity。</target>
        </trans-unit>
        <trans-unit id="7ac01f9afaec9772afec2df62e36b10d97bad25e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;info(QH)&lt;/code&gt; is equivalent to &lt;code&gt;info(QH, [])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;info(QH)&lt;/code&gt; 等效于 &lt;code&gt;info(QH, [])&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4248d925e08b67df047ba4b4a75b159b2cf6fe92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;info/1&lt;/code&gt; returns information with the following tags (tags marked with (*) are available in &lt;code&gt;functions&lt;/code&gt; mode only):</source>
          <target state="translated">&lt;code&gt;info/1&lt;/code&gt; 返回带有以下标记的信息（标记为（*）的标记仅在 &lt;code&gt;functions&lt;/code&gt; 模式下可用）：</target>
        </trans-unit>
        <trans-unit id="c38f7b349b67d95eb067d2b2e780bc5bba3e8947" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;info/2&lt;/code&gt; and &lt;code&gt;info/3&lt;/code&gt; return information about all or some of the analyzed modules, applications, releases or library modules of an Xref server. The following information is returned for every analyzed module:</source>
          <target state="translated">&lt;code&gt;info/2&lt;/code&gt; 和 &lt;code&gt;info/3&lt;/code&gt; 返回有关Xref服务器的所有或某些已分析模块，应用程序，发行版或库模块的信息。对于每个分析的模块，返回以下信息：</target>
        </trans-unit>
        <trans-unit id="683651a15dcf311e9b19d04c85dc14a9f375a0f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;inform&lt;/code&gt; - &lt;code&gt;SnmpInformInfo&lt;/code&gt; (see &lt;code&gt;&lt;a href=&quot;#handle_inform&quot;&gt;handle_inform&lt;/a&gt;&lt;/code&gt; for more info).</source>
          <target state="translated">&lt;code&gt;inform&lt;/code&gt; - &lt;code&gt;SnmpInformInfo&lt;/code&gt; （见 &lt;code&gt;&lt;a href=&quot;#handle_inform&quot;&gt;handle_inform&lt;/a&gt;&lt;/code&gt; 获取更多信息）。</target>
        </trans-unit>
        <trans-unit id="a9fa86f5d62c2a621fc4a7b799f474d4390f1874" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;init&lt;/code&gt; - Attach when a process for the first time calls an interpreted function.</source>
          <target state="translated">&lt;code&gt;init&lt;/code&gt; -首次进程调用解释函数时附加。</target>
        </trans-unit>
        <trans-unit id="680e743ff4e349f082f22cdac8b3c1404575f222" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;init&lt;/code&gt; also contains functions to restart, reboot, and stop the system.</source>
          <target state="translated">&lt;code&gt;init&lt;/code&gt; 还包含重新启动，重新引导和停止系统的功能。</target>
        </trans-unit>
        <trans-unit id="f44b0167958ea67c8ecb5bfdde80f4b2b945aaef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;init&lt;/code&gt; interprets some of the flags, see section &lt;code&gt;&lt;a href=&quot;#flags&quot;&gt;Command-Line Flags&lt;/a&gt;&lt;/code&gt; below. The remaining flags (&quot;user flags&quot;) and plain arguments are passed to the &lt;code&gt;init&lt;/code&gt; loop and can be retrieved by calling &lt;code&gt;&lt;a href=&quot;#get_arguments-0&quot;&gt;get_arguments/0&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#get_plain_arguments-0&quot;&gt; get_plain_arguments/0&lt;/a&gt;&lt;/code&gt;, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13bb39ed7c33de63e493e1ee19876051fea085ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;init&lt;/code&gt; interprets some of the flags, see section &lt;code&gt;&lt;a href=&quot;#flags&quot;&gt;Command-Line Flags&lt;/a&gt;&lt;/code&gt; below. The remaining flags (&quot;user flags&quot;) and plain arguments are passed to the &lt;code&gt;init&lt;/code&gt; loop and can be retrieved by calling &lt;code&gt;&lt;a href=&quot;#get_arguments-0&quot;&gt;get_arguments/0&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#get_plain_arguments-0&quot;&gt;get_plain_arguments/0&lt;/a&gt;&lt;/code&gt;, respectively.</source>
          <target state="translated">&lt;code&gt;init&lt;/code&gt; 解释一些标志，请参阅下面的 &lt;code&gt;&lt;a href=&quot;#flags&quot;&gt;Command-Line Flags&lt;/a&gt;&lt;/code&gt; 部分。其余标志（&amp;ldquo;用户标志&amp;rdquo;）和普通参数将传递到 &lt;code&gt;init&lt;/code&gt; 循环，可以分别通过调用 &lt;code&gt;&lt;a href=&quot;#get_arguments-0&quot;&gt;get_arguments/0&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;#get_plain_arguments-0&quot;&gt;get_plain_arguments/0&lt;/a&gt;&lt;/code&gt; 来检索。</target>
        </trans-unit>
        <trans-unit id="c38637dc28fce554e15219ccf24908263dea5b60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;init&lt;/code&gt; is to be more relaxed and try to find a suitable directory if it can choose from a regular &lt;code&gt;ebin&lt;/code&gt; directory and an &lt;code&gt;ebin&lt;/code&gt; directory in an archive file.</source>
          <target state="translated">&lt;code&gt;init&lt;/code&gt; 如果可以从常规 &lt;code&gt;ebin&lt;/code&gt; 目录和存档文件中的 &lt;code&gt;ebin&lt;/code&gt; 目录中进行选择，则init会更宽松，并尝试找到合适的目录。</target>
        </trans-unit>
        <trans-unit id="2ee39a96a98454ce0a566fbbb59a17f31c9cbea9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;init&lt;/code&gt; reads the boot script, which contains instructions on how to initiate the system. For more information about boot scripts, see &lt;code&gt;script(4)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;init&lt;/code&gt; 读取引导脚本，该脚本包含有关如何启动系统的说明。有关启动脚本的更多信息，请参见 &lt;code&gt;script(4)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e45c87967eb337eebf81776beb7aaa4bfa06b39a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;init_per_suite&lt;/code&gt; and &lt;code&gt;end_per_suite&lt;/code&gt; execute on dedicated Erlang processes, just like the test cases do. The result of these functions is however not included in the test run statistics of successful, failed, and skipped cases.</source>
          <target state="translated">&lt;code&gt;init_per_suite&lt;/code&gt; 就像测试用例一样，init_per_suite和 &lt;code&gt;end_per_suite&lt;/code&gt; 在专用的Erlang进程上执行。但是，这些功能的结果不包括在成功，失败和跳过案例的测试运行统计中。</target>
        </trans-unit>
        <trans-unit id="509c1f98726ea5069dd4a7b20c1da24a315239b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;init_per_testcase/2&lt;/code&gt; and &lt;code&gt;end_per_testcase/2&lt;/code&gt; are always called for each individual test case, no matter if the case belongs to a group or not.</source>
          <target state="translated">&lt;code&gt;init_per_testcase/2&lt;/code&gt; 始终为每个单独的测试用例调用init_per_testcase / 2和 &lt;code&gt;end_per_testcase/2&lt;/code&gt; ，无论该用例是否属于一个组。</target>
        </trans-unit>
        <trans-unit id="70b146254b559ead89fe36b3a1611f87764c53ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;instance : integer&lt;/code&gt; :: Allocator instance. Ex. &lt;code&gt;1&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;instance : integer&lt;/code&gt; ::分配器实例。例如 &lt;code&gt;1&lt;/code&gt; 个</target>
        </trans-unit>
        <trans-unit id="4b79a730e545f8e3ff2db30fb944cc1b654c4bbb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int driver_failure(ErlDrvPort port, int error)&lt;/code&gt;&lt;code&gt;int driver_failure_atom(ErlDrvPort port, char *string)&lt;/code&gt;&lt;code&gt;int driver_failure_posix(ErlDrvPort port, int error)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int driver_failure(ErlDrvPort port, int error)&lt;/code&gt; &lt;code&gt;int driver_failure_atom(ErlDrvPort port, char *string)&lt;/code&gt; &lt;code&gt;int driver_failure_posix(ErlDrvPort port, int error)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="be1945883a0b8cbfcb490c14db372bb25d9db0b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_connect(ei_cnode* ec, char *nodename)&lt;/code&gt;&lt;code&gt;int ei_xconnect(ei_cnode* ec, Erl_IpAddr adr, char *alivename)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_connect(ei_cnode* ec, char *nodename)&lt;/code&gt; &lt;code&gt;int ei_xconnect(ei_cnode* ec, Erl_IpAddr adr, char *alivename)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4ff7079026e8f25428ecfb521719ef3ecbd565b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_connect_init(ei_cnode* ec, const char* this_node_name, const char *cookie, short creation)&lt;/code&gt;&lt;code&gt;int ei_connect_xinit(ei_cnode* ec, const char *thishostname, const char *thisalivename, const char *thisnodename, Erl_IpAddr thisipaddr, const char *cookie, short creation)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_connect_init(ei_cnode* ec, const char* this_node_name, const char *cookie, short creation)&lt;/code&gt; &lt;code&gt;int ei_connect_xinit(ei_cnode* ec, const char *thishostname, const char *thisalivename, const char *thisnodename, Erl_IpAddr thisipaddr, const char *cookie, short creation)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dd6698c77f48b2b51843711ba5f7c9f2f29fbe55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_connect_tmo(ei_cnode* ec, char *nodename, unsigned timeout_ms)&lt;/code&gt;&lt;code&gt;int ei_xconnect_tmo(ei_cnode* ec, Erl_IpAddr adr, char *alivename, unsigned timeout_ms)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_connect_tmo(ei_cnode* ec, char *nodename, unsigned timeout_ms)&lt;/code&gt; &lt;code&gt;int ei_xconnect_tmo(ei_cnode* ec, Erl_IpAddr adr, char *alivename, unsigned timeout_ms)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ca6137afa29c562b89f3c439e6e82ddb851d06ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_decode_fun(const char *buf, int *index, erlang_fun *p)&lt;/code&gt;&lt;code&gt;void free_fun(erlang_fun* f)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_decode_fun(const char *buf, int *index, erlang_fun *p)&lt;/code&gt; &lt;code&gt;void free_fun(erlang_fun* f)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eacdedc6fed3d45e90327b3441131b4d5183df0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_encode_atom(char *buf, int *index, const char *p)&lt;/code&gt;&lt;code&gt;int ei_encode_atom_len(char *buf, int *index, const char *p, int len)&lt;/code&gt;&lt;code&gt;int ei_x_encode_atom(ei_x_buff* x, const char *p)&lt;/code&gt;&lt;code&gt;int ei_x_encode_atom_len(ei_x_buff* x, const char *p, int len)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_encode_atom(char *buf, int *index, const char *p)&lt;/code&gt; &lt;code&gt;int ei_encode_atom_len(char *buf, int *index, const char *p, int len)&lt;/code&gt; &lt;code&gt;int ei_x_encode_atom(ei_x_buff* x, const char *p)&lt;/code&gt; &lt;code&gt;int ei_x_encode_atom_len(ei_x_buff* x, const char *p, int len)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="be30a51c472ad623c20f08691eaa3cb3b6a3fd49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_encode_atom_as(char *buf, int *index, const char *p, erlang_char_encoding from_enc, erlang_char_encoding to_enc)&lt;/code&gt;&lt;code&gt;int ei_encode_atom_len_as(char *buf, int *index, const char *p, int len, erlang_char_encoding from_enc, erlang_char_encoding to_enc)&lt;/code&gt;&lt;code&gt;int ei_x_encode_atom_as(ei_x_buff* x, const char *p, erlang_char_encoding from_enc, erlang_char_encoding to_enc)&lt;/code&gt;&lt;code&gt;int ei_x_encode_atom_len_as(ei_x_buff* x, const char *p, int len, erlang_char_encoding from_enc, erlang_char_encoding to_enc)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_encode_atom_as(char *buf, int *index, const char *p, erlang_char_encoding from_enc, erlang_char_encoding to_enc)&lt;/code&gt; &lt;code&gt;int ei_encode_atom_len_as(char *buf, int *index, const char *p, int len, erlang_char_encoding from_enc, erlang_char_encoding to_enc)&lt;/code&gt; &lt;code&gt;int ei_x_encode_atom_as(ei_x_buff* x, const char *p, erlang_char_encoding from_enc, erlang_char_encoding to_enc)&lt;/code&gt; &lt;code&gt;int ei_x_encode_atom_len_as(ei_x_buff* x, const char *p, int len, erlang_char_encoding from_enc, erlang_char_encoding to_enc)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3ea13f554194e5458f1b6b02dd68627201ffe404" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_encode_bignum(char *buf, int *index, mpz_t obj)&lt;/code&gt;&lt;code&gt;int ei_x_encode_bignum(ei_x_buff *x, mpz_t obj)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_encode_bignum(char *buf, int *index, mpz_t obj)&lt;/code&gt; &lt;code&gt;int ei_x_encode_bignum(ei_x_buff *x, mpz_t obj)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="48bf8d9396606ef33a48249f42efdab728cb1da7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_encode_binary(char *buf, int *index, const void *p, long len)&lt;/code&gt;&lt;code&gt;int ei_x_encode_binary(ei_x_buff* x, const void *p, long len)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_encode_binary(char *buf, int *index, const void *p, long len)&lt;/code&gt; &lt;code&gt;int ei_x_encode_binary(ei_x_buff* x, const void *p, long len)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2036bf25dd701ed737d16a5b650b8201a78fa88f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_encode_boolean(char *buf, int *index, int p)&lt;/code&gt;&lt;code&gt;int ei_x_encode_boolean(ei_x_buff* x, int p)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_encode_boolean(char *buf, int *index, int p)&lt;/code&gt; &lt;code&gt;int ei_x_encode_boolean(ei_x_buff* x, int p)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e7bea77c7872775d24efe304b06dab54aafb9fe2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_encode_char(char *buf, int *index, char p)&lt;/code&gt;&lt;code&gt;int ei_x_encode_char(ei_x_buff* x, char p)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_encode_char(char *buf, int *index, char p)&lt;/code&gt; &lt;code&gt;int ei_x_encode_char(ei_x_buff* x, char p)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e7a307beceb96b6b11795cc5d766ff3b85d63f5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_encode_double(char *buf, int *index, double p)&lt;/code&gt;&lt;code&gt;int ei_x_encode_double(ei_x_buff* x, double p)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_encode_double(char *buf, int *index, double p)&lt;/code&gt; &lt;code&gt;int ei_x_encode_double(ei_x_buff* x, double p)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="46bb642408497ffc04bfcca020474f0aa1fecd11" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_encode_empty_list(char* buf, int* index)&lt;/code&gt;&lt;code&gt;int ei_x_encode_empty_list(ei_x_buff* x)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_encode_empty_list(char* buf, int* index)&lt;/code&gt; &lt;code&gt;int ei_x_encode_empty_list(ei_x_buff* x)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8d11f2b7062f3ff5a2ef7070264d5a23834561eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_encode_fun(char *buf, int *index, const erlang_fun *p)&lt;/code&gt;&lt;code&gt;int ei_x_encode_fun(ei_x_buff* x, const erlang_fun* fun)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_encode_fun(char *buf, int *index, const erlang_fun *p)&lt;/code&gt; &lt;code&gt;int ei_x_encode_fun(ei_x_buff* x, const erlang_fun* fun)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6f94e9eeb3c7fa27d29242a807c7c2dcdc61aa93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_encode_list_header(char *buf, int *index, int arity)&lt;/code&gt;&lt;code&gt;int ei_x_encode_list_header(ei_x_buff* x, int arity)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_encode_list_header(char *buf, int *index, int arity)&lt;/code&gt; &lt;code&gt;int ei_x_encode_list_header(ei_x_buff* x, int arity)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="699de4bfe5a5c6b39bb40badc010d9377f47377f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_encode_long(char *buf, int *index, long p)&lt;/code&gt;&lt;code&gt;int ei_x_encode_long(ei_x_buff* x, long p)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_encode_long(char *buf, int *index, long p)&lt;/code&gt; &lt;code&gt;int ei_x_encode_long(ei_x_buff* x, long p)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6d5ceb8605c9a0883944a415416a2c549942dbba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_encode_longlong(char *buf, int *index, long long p)&lt;/code&gt;&lt;code&gt;int ei_x_encode_longlong(ei_x_buff* x, long long p)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_encode_longlong(char *buf, int *index, long long p)&lt;/code&gt; &lt;code&gt;int ei_x_encode_longlong(ei_x_buff* x, long long p)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dd56ee0ea342ac9f86cdfde930e73cae153464b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_encode_map_header(char *buf, int *index, int arity)&lt;/code&gt;&lt;code&gt;int ei_x_encode_map_header(ei_x_buff* x, int arity)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_encode_map_header(char *buf, int *index, int arity)&lt;/code&gt; &lt;code&gt;int ei_x_encode_map_header(ei_x_buff* x, int arity)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cc14f613a1608fff8e0bf6ca396586b812bcd8cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_encode_pid(char *buf, int *index, const erlang_pid *p)&lt;/code&gt;&lt;code&gt;int ei_x_encode_pid(ei_x_buff* x, const erlang_pid *p)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_encode_pid(char *buf, int *index, const erlang_pid *p)&lt;/code&gt; &lt;code&gt;int ei_x_encode_pid(ei_x_buff* x, const erlang_pid *p)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e44f4b6b918ff2e63fef2cea2444b864243aeb86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_encode_port(char *buf, int *index, const erlang_port *p)&lt;/code&gt;&lt;code&gt;int ei_x_encode_port(ei_x_buff* x, const erlang_port *p)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_encode_port(char *buf, int *index, const erlang_port *p)&lt;/code&gt; &lt;code&gt;int ei_x_encode_port(ei_x_buff* x, const erlang_port *p)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="688c30a81e6d6b45df50fc30788fa09ac0e7f0d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_encode_ref(char *buf, int *index, const erlang_ref *p)&lt;/code&gt;&lt;code&gt;int ei_x_encode_ref(ei_x_buff* x, const erlang_ref *p)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_encode_ref(char *buf, int *index, const erlang_ref *p)&lt;/code&gt; &lt;code&gt;int ei_x_encode_ref(ei_x_buff* x, const erlang_ref *p)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5f8310f88f6d74915d49b6ec786895f64af370f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_encode_string(char *buf, int *index, const char *p)&lt;/code&gt;&lt;code&gt;int ei_encode_string_len(char *buf, int *index, const char *p, int len)&lt;/code&gt;&lt;code&gt;int ei_x_encode_string(ei_x_buff* x, const char *p)&lt;/code&gt;&lt;code&gt;int ei_x_encode_string_len(ei_x_buff* x, const char* s, int len)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_encode_string(char *buf, int *index, const char *p)&lt;/code&gt; &lt;code&gt;int ei_encode_string_len(char *buf, int *index, const char *p, int len)&lt;/code&gt; &lt;code&gt;int ei_x_encode_string(ei_x_buff* x, const char *p)&lt;/code&gt; &lt;code&gt;int ei_x_encode_string_len(ei_x_buff* x, const char* s, int len)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="469a7cbf204d88ae986d22602c11633064a3c9c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_encode_term(char *buf, int *index, void *t)&lt;/code&gt;&lt;code&gt;int ei_x_encode_term(ei_x_buff* x, void *t)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_encode_term(char *buf, int *index, void *t)&lt;/code&gt; &lt;code&gt;int ei_x_encode_term(ei_x_buff* x, void *t)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="14ed282e7e4dfaa0b843938fb67c0e25efaa762f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_encode_trace(char *buf, int *index, const erlang_trace *p)&lt;/code&gt;&lt;code&gt;int ei_x_encode_trace(ei_x_buff* x, const erlang_trace *p)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_encode_trace(char *buf, int *index, const erlang_trace *p)&lt;/code&gt; &lt;code&gt;int ei_x_encode_trace(ei_x_buff* x, const erlang_trace *p)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="112c190f71f80d6eaa400a3238d67dbb40922af4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_encode_tuple_header(char *buf, int *index, int arity)&lt;/code&gt;&lt;code&gt;int ei_x_encode_tuple_header(ei_x_buff* x, int arity)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_encode_tuple_header(char *buf, int *index, int arity)&lt;/code&gt; &lt;code&gt;int ei_x_encode_tuple_header(ei_x_buff* x, int arity)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dfb532bb3bb9ce2ee09e4eccf39e41e279f1006b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_encode_ulong(char *buf, int *index, unsigned long p)&lt;/code&gt;&lt;code&gt;int ei_x_encode_ulong(ei_x_buff* x, unsigned long p)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_encode_ulong(char *buf, int *index, unsigned long p)&lt;/code&gt; &lt;code&gt;int ei_x_encode_ulong(ei_x_buff* x, unsigned long p)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="019fbefed5026bbc34c9e6979be2537cc256dedc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_encode_ulonglong(char *buf, int *index, unsigned long long p)&lt;/code&gt;&lt;code&gt;int ei_x_encode_ulonglong(ei_x_buff* x, unsigned long long p)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_encode_ulonglong(char *buf, int *index, unsigned long long p)&lt;/code&gt; &lt;code&gt;int ei_x_encode_ulonglong(ei_x_buff* x, unsigned long long p)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fe8ceacaa74ce9f2c063d93033c64c5bbe89b4c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_encode_version(char *buf, int *index)&lt;/code&gt;&lt;code&gt;int ei_x_encode_version(ei_x_buff* x)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_encode_version(char *buf, int *index)&lt;/code&gt; &lt;code&gt;int ei_x_encode_version(ei_x_buff* x)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d45c8a894d11b0d401c9fdc952eed8c7dcbbe3ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_get_tracelevel(void)&lt;/code&gt;&lt;code&gt;void ei_set_tracelevel(int level)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_get_tracelevel(void)&lt;/code&gt; &lt;code&gt;void ei_set_tracelevel(int level)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7bdd2328e271f8df92925f8466c03928cd7c9ce2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_print_term(FILE* fp, const char* buf, int* index)&lt;/code&gt;&lt;code&gt;int ei_s_print_term(char** s, const char* buf, int* index)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_print_term(FILE* fp, const char* buf, int* index)&lt;/code&gt; &lt;code&gt;int ei_s_print_term(char** s, const char* buf, int* index)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d8b0d3f6a8e08a1c738ae68ed805b1083c6c33ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_receive_msg(int fd, erlang_msg* msg, ei_x_buff* x)&lt;/code&gt;&lt;code&gt;int ei_xreceive_msg(int fd, erlang_msg* msg, ei_x_buff* x)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_receive_msg(int fd, erlang_msg* msg, ei_x_buff* x)&lt;/code&gt; &lt;code&gt;int ei_xreceive_msg(int fd, erlang_msg* msg, ei_x_buff* x)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="331943191dca2a990a6af07c55b4f10f92c87292" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_receive_msg_tmo(int fd, erlang_msg* msg, ei_x_buff* x, unsigned imeout_ms)&lt;/code&gt;&lt;code&gt;int ei_xreceive_msg_tmo(int fd, erlang_msg* msg, ei_x_buff* x, unsigned timeout_ms)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_receive_msg_tmo(int fd, erlang_msg* msg, ei_x_buff* x, unsigned imeout_ms)&lt;/code&gt; &lt;code&gt;int ei_xreceive_msg_tmo(int fd, erlang_msg* msg, ei_x_buff* x, unsigned timeout_ms)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d91019c4a2f8ebf576c7bb98050381bb000e354b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_rpc(ei_cnode *ec, int fd, char *mod, char *fun, const char *argbuf, int argbuflen, ei_x_buff *x)&lt;/code&gt;&lt;code&gt;int ei_rpc_to(ei_cnode *ec, int fd, char *mod, char *fun, const char *argbuf, int argbuflen)&lt;/code&gt;&lt;code&gt;int ei_rpc_from(ei_cnode *ec, int fd, int timeout, erlang_msg *msg, ei_x_buff *x)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_rpc(ei_cnode *ec, int fd, char *mod, char *fun, const char *argbuf, int argbuflen, ei_x_buff *x)&lt;/code&gt; &lt;code&gt;int ei_rpc_to(ei_cnode *ec, int fd, char *mod, char *fun, const char *argbuf, int argbuflen)&lt;/code&gt; &lt;code&gt;int ei_rpc_from(ei_cnode *ec, int fd, int timeout, erlang_msg *msg, ei_x_buff *x)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="445fe207224c1f75197df7f04fb651ad9b3ba503" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_x_append(ei_x_buff* x, const ei_x_buff* x2)&lt;/code&gt;&lt;code&gt;int ei_x_append_buf(ei_x_buff* x, const char* buf, int len)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_x_append(ei_x_buff* x, const ei_x_buff* x2)&lt;/code&gt; &lt;code&gt;int ei_x_append_buf(ei_x_buff* x, const char* buf, int len)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e10a620f8be39d23877b27b41dac3c2f350b5bd1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_x_format(ei_x_buff* x, const char* fmt, ...)&lt;/code&gt;&lt;code&gt;int ei_x_format_wo_ver(ei_x_buff* x, const char *fmt, ... )&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_x_format(ei_x_buff* x, const char* fmt, ...)&lt;/code&gt; &lt;code&gt;int ei_x_format_wo_ver(ei_x_buff* x, const char *fmt, ... )&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="018d33e014f50ed74ec24117fc37109e44069386" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_x_new(ei_x_buff* x)&lt;/code&gt;&lt;code&gt;int ei_x_new_with_version(ei_x_buff* x)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_x_new(ei_x_buff* x)&lt;/code&gt; &lt;code&gt;int ei_x_new_with_version(ei_x_buff* x)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="26837ab721255d45129355ee69a318ca6bc81fdf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int erl_connect(node)&lt;/code&gt;&lt;code&gt;int erl_xconnect(addr, alive)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int erl_connect(node)&lt;/code&gt; &lt;code&gt;int erl_xconnect(addr, alive)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="588463869a047e0b1d0a80c0d79ae9d660ecdeed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int erl_connect_init(number, cookie, creation)&lt;/code&gt;&lt;code&gt;int erl_connect_xinit(host, alive, node, addr, cookie, creation)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int erl_connect_init(number, cookie, creation)&lt;/code&gt; &lt;code&gt;int erl_connect_xinit(host, alive, node, addr, cookie, creation)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d16cf527dc908f09cd0db2c343fe6cb66a87d133" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int erl_encode(term, bufp)&lt;/code&gt;&lt;code&gt;int erl_encode_buf(term, bufpp)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int erl_encode(term, bufp)&lt;/code&gt; &lt;code&gt;int erl_encode_buf(term, bufpp)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9263f40e8480e04fa5fa3f5ff60d94950a63e9a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int erts_thr_progress_has_reached(ErtsThrPrgrVal val)&lt;/code&gt; - Returns a non zero value when we have reached the thread progress value passed as argument. That is, when a non zero value is returned the operation has completed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="091eb4001a0f7fceef16f511c9060e2ebbcc35ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int erts_thr_progress_leader_update(ErtsSchedulerData *esdp)&lt;/code&gt; - Leader update thread progress.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="462c63a4ed13af7b707b53d375928668c0e7a6c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int erts_thr_progress_update(ErtsSchedulerData *esdp)&lt;/code&gt; - Update thread progress. If a non zero value is returned &lt;code&gt;erts_thr_progress_leader_update()&lt;/code&gt; has to be called without any locks held.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="393a2472afa0171614a18b904106ac786c500efc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;integer()&lt;/code&gt; - Number of one byte (8 bits) levels. N.B. This is currently converted into the previous config. Example: &lt;code&gt;3&lt;/code&gt; (&lt;code&gt;[8,8,8]&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;integer()&lt;/code&gt; -一字节（8位）级别的数目。注意：当前已转换为以前的配置。示例： &lt;code&gt;3&lt;/code&gt; （ &lt;code&gt;[8,8,8]&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="e4e0259d3ce79d7297bd5ad1a52aae25ce5f1430" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;integer(X)&lt;/code&gt; detail level activates tracing of all calls to &lt;code&gt;et:trace_me/4,5&lt;/code&gt; whose detail level argument is lesser than &lt;code&gt;X&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;integer(X)&lt;/code&gt; 的细节水平激活所有呼叫的跟踪 &lt;code&gt;et:trace_me/4,5&lt;/code&gt; ，其详细度参数大于较小 &lt;code&gt;X&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="519fcfd30d77b691b28ee08274f947ef51b3eb02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;integer_to_hexlist/1&lt;/code&gt; returns a string representing &lt;code&gt;Number&lt;/code&gt; in a hexadecimal form.</source>
          <target state="translated">&lt;code&gt;integer_to_hexlist/1&lt;/code&gt; 返回以十六进制形式表示 &lt;code&gt;Number&lt;/code&gt; 的字符串。</target>
        </trans-unit>
        <trans-unit id="c0459dd21410bb32e2caa968faae901be29d26e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;intensity&lt;/code&gt; and &lt;code&gt;period&lt;/code&gt; specify the &lt;code&gt;&lt;a href=&quot;#max_intensity&quot;&gt;maximum restart intensity&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;intensity&lt;/code&gt; 和 &lt;code&gt;period&lt;/code&gt; 指定 &lt;code&gt;&lt;a href=&quot;#max_intensity&quot;&gt;maximum restart intensity&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="46527714a6429d4df4c47ed4aab217c62a3d2892" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;internal&lt;/code&gt; events can only be generated by the state machine itself through the &lt;strong&gt;transition action&lt;/strong&gt;&lt;code&gt;&lt;a href=&quot;#type-action&quot;&gt;next_event&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9da6792d5381c0374b3b5c0b0e01146f242648e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;internal&lt;/code&gt; events can only be generated by the state machine itself through the state transition action &lt;code&gt;&lt;a href=&quot;#type-action&quot;&gt;next_event&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;internal&lt;/code&gt; 事件只能由状态机本身通过状态转换动作 &lt;code&gt;&lt;a href=&quot;#type-action&quot;&gt;next_event&lt;/a&gt;&lt;/code&gt; 生成。</target>
        </trans-unit>
        <trans-unit id="8a7d239e8d3cb2e72f50f4cade02fce7a687ae65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iov&lt;/code&gt; points to an array of &lt;code&gt;struct iovec&lt;/code&gt; structures of length &lt;code&gt;iovcnt&lt;/code&gt; containing data to write to the socket. On success, this callback should set &lt;code&gt;*len&lt;/code&gt; to the amount of bytes successfully written on the socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="052da6b8c13b64c4de1be8693701070b4456a3d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ip_address()&lt;/code&gt; = See the &lt;code&gt;inet(3)&lt;/code&gt; manual page in Kernel.</source>
          <target state="translated">&lt;code&gt;ip_address()&lt;/code&gt; =参见内核中的 &lt;code&gt;inet(3)&lt;/code&gt; 手册页。</target>
        </trans-unit>
        <trans-unit id="b5835dad8c17e1f58f4d2781070f73e4945c9a65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is_atom/2&lt;/code&gt; may either execute the next instruction (if the second operand is an atom) or branch to the failure label.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0046752b0b4756ae41d5ca00e232c64f7ab738d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is_constant/1&lt;/code&gt; used to be a BIF a long time ago. The transformation replaces the call with the &lt;code&gt;too_old_compiler&lt;/code&gt; instruction which will produce a nicer error message than the default error would be for a missing guard BIF.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d15106f06513f1512bae59b8a4c904bfbb4c82cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is_map/1&lt;/code&gt; in the &lt;code&gt;erlang&lt;/code&gt; module</source>
          <target state="translated">&lt;code&gt;is_map/1&lt;/code&gt; &lt;code&gt;erlang&lt;/code&gt; 模块中的is_map / 1</target>
        </trans-unit>
        <trans-unit id="eab25ca15c5ebd96d89c5f3cb640e10dfbf70da8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is_running&lt;/code&gt;. Returns &lt;code&gt;yes&lt;/code&gt; or &lt;code&gt;no&lt;/code&gt; to indicate if Mnesia is running. It can also return &lt;code&gt;starting&lt;/code&gt; or &lt;code&gt;stopping&lt;/code&gt;. Can be called even if Mnesia is not yet running.</source>
          <target state="translated">&lt;code&gt;is_running&lt;/code&gt; 。返回 &lt;code&gt;yes&lt;/code&gt; 或 &lt;code&gt;no&lt;/code&gt; 以指示Mnesia是否正在运行。它也可以返回 &lt;code&gt;starting&lt;/code&gt; 或 &lt;code&gt;stopping&lt;/code&gt; 。即使Mnesia尚未运行也可以调用。</target>
        </trans-unit>
        <trans-unit id="36157fcb0b539cd15c0344674ee0083b52581be6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;j&lt;/code&gt; - A failure label (combination of &lt;code&gt;f&lt;/code&gt; and &lt;code&gt;p&lt;/code&gt;). If the branch target 0, an exception will be raised if instruction fails, otherwise control will be transfered to the target address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73a2aaebe1ce4bdf955a1e3b11d15de568e9d387" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;j&lt;/code&gt; - Any label. Equivalent to &lt;code&gt;fp&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6c9c5ad44a97f8df6363aceff3226b122c56ac3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;jsone&lt;/code&gt; can be chosen instead of &lt;code&gt;jsx&lt;/code&gt; by providing the option &lt;code&gt;{d,jsone}&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd1ce3b344837ea8d7ca0107102f53d72beec6c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;jsx&lt;/code&gt; which currently is the default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69fb27581ce389de2b4ec69e225d611abc764ffd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keep_alive&lt;/code&gt; can be specified per connection, if necessary. For details, see &lt;code&gt;&lt;a href=&quot;unix_telnet&quot;&gt;unix_telnet&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;keep_alive&lt;/code&gt; 如有必要，可以为每个连接指定keep_alive。有关详细信息，请参见 &lt;code&gt;&lt;a href=&quot;unix_telnet&quot;&gt;unix_telnet&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="72bc07236831563c46426c5fd4ba3421fe698394" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt; is a &lt;code&gt;NULL&lt;/code&gt;-terminated string containing the name of the environment variable.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; 是一个以 &lt;code&gt;NULL&lt;/code&gt; 结尾的字符串，其中包含环境变量的名称。</target>
        </trans-unit>
        <trans-unit id="ab8db5d02ae63708074e0b1525ec52f65485b9b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt; is a pointer to a thread-specific data key variable.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; 是指向特定于线程的数据键变量的指针。</target>
        </trans-unit>
        <trans-unit id="cf8d00475384e1c2d6c03e977342f7a4663a8b9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt; is a thread-specific data key to destroy.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; 是要销毁的特定于线程的数据密钥。</target>
        </trans-unit>
        <trans-unit id="49d61a7c51ab43fc47076647d598e74cb1b133fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt; is a thread-specific data key.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; 是特定于线程的数据密钥。</target>
        </trans-unit>
        <trans-unit id="51e80ce3f022ac7ddd37c33041f888f7a50e185f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt; is the name of the object to look up.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; 是要查找的对象的名称。</target>
        </trans-unit>
        <trans-unit id="66ac280c75c00617aac9e9816ad94d4f5a24d431" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt; is the name of the object to mark.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; 是要标记的对象的名称。</target>
        </trans-unit>
        <trans-unit id="726bf6575c9ae5d90f62fcec7dc7845829be36b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt; is the object name.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; 是对象名称。</target>
        </trans-unit>
        <trans-unit id="76519f7a0036105d1631983a266c6debeb747f04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt; is the object to remove.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; 是要删除的对象。</target>
        </trans-unit>
        <trans-unit id="e8cd1655c5d738878c7393018e2810925863b821" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keycheck(KeyPos, FileName)&lt;/code&gt; is equivalent to &lt;code&gt;keycheck(KeyPos, [FileName], [])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;keycheck(KeyPos, FileName)&lt;/code&gt; 等同于 &lt;code&gt;keycheck(KeyPos, [FileName], [])&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b153c6268ac50c18ffa73eb104aea23685d06fcb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keymerge(KeyPos, FileNames, Output)&lt;/code&gt; is equivalent to &lt;code&gt;keymerge(KeyPos, FileNames, Output, [])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;keymerge(KeyPos, FileNames, Output)&lt;/code&gt; 等效于 &lt;code&gt;keymerge(KeyPos, FileNames, Output, [])&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="83f036648bec0822f57409f769b8c88456b350cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keysort(KeyPos, QH1)&lt;/code&gt; is equivalent to &lt;code&gt;keysort(KeyPos, QH1, [])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;keysort(KeyPos, QH1)&lt;/code&gt; 等同于 &lt;code&gt;keysort(KeyPos, QH1, [])&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="77feb0f99a79d08708c49d907392d66a805a7e24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keysort(N, FileName)&lt;/code&gt; is equivalent to &lt;code&gt;keysort(N, [FileName], FileName)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;keysort(N, FileName)&lt;/code&gt; 等同于 &lt;code&gt;keysort(N, [FileName], FileName)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b8625b8ba314e33b76213d1ccfea99983f2ec845" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keysort(N, Input, Output)&lt;/code&gt; is equivalent to &lt;code&gt;keysort(N, Input, Output, [])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;keysort(N, Input, Output)&lt;/code&gt; 等效于 &lt;code&gt;keysort(N, Input, Output, [])&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0f07ab05f9a848556d1aad520ac884d2eed8199a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;kill_after/1&lt;/code&gt; is the same as &lt;code&gt;exit_after(Time, self(), kill)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;kill_after/1&lt;/code&gt; 与 &lt;code&gt;exit_after(Time, self(), kill)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="72e34eb6858bc7ffa3f15fb1b75c7afcc44387d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;kill_after/2&lt;/code&gt; is the same as &lt;code&gt;exit_after(Time, Pid, kill)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;kill_after/2&lt;/code&gt; 与 &lt;code&gt;exit_after(Time, Pid, kill)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="91e9db6ac63dd2f97d0bf7188e8fe47bd6f8a04f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;kilo_byte/1&lt;/code&gt; creates a deep list. If &lt;code&gt;list_to_binary/1&lt;/code&gt; is called, the deep list can be converted to a binary of 1024 bytes:</source>
          <target state="translated">&lt;code&gt;kilo_byte/1&lt;/code&gt; 创建一个深列表。如果 &lt;code&gt;list_to_binary/1&lt;/code&gt; ，则深列表可以转换为1024字节的二进制文件：</target>
        </trans-unit>
        <trans-unit id="4b3d2622b5b29785f605dcc3f054e23e1d7bd95d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;l&lt;/code&gt; - Floating point register number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8495a1b0e5b472664b80d02a0f2270674ec85e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;l&lt;/code&gt; - Floating point register number. (Can be packed with other operands.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24dec384bacc51c34304958e9c5ab406404ef7c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;l&lt;/code&gt; - Floating point register number. The default value is 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f538b0c5d5f89b037756df3ff6ce4f215129573b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lclose(Log)&lt;/code&gt; is equivalent to &lt;code&gt;lclose(Log,&amp;nbsp;node())&lt;/code&gt;. See also &lt;code&gt;&lt;a href=&quot;#close_1&quot;&gt;close/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;lclose(Log)&lt;/code&gt; 等效于 &lt;code&gt;lclose(Log,&amp;nbsp;node())&lt;/code&gt; 。另请参见 &lt;code&gt;&lt;a href=&quot;#close_1&quot;&gt;close/1&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a67b1c8d7dbf4d841c943dc2946b4f7a2cdfea71" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lclose/1&lt;/code&gt; closes a local log or an individual distributed log on the current node.</source>
          <target state="translated">&lt;code&gt;lclose/1&lt;/code&gt; 关闭当前节点上的本地日志或单个分布式日志。</target>
        </trans-unit>
        <trans-unit id="9b103b7c84a1c1813d67554045b1245a8aec0af6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lclose/2&lt;/code&gt; closes an individual distributed log on the specified node if the node is not the current one.</source>
          <target state="translated">&lt;code&gt;lclose/2&lt;/code&gt; 如果该节点不是当前节点，则lclose / 2将关闭该节点上的单个分布式日志。</target>
        </trans-unit>
        <trans-unit id="fb237ae7bc4ddc5bd78c0bc0383db41484ff959d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lcnt&lt;/code&gt; is used to find contention points in the Erlang Run-Time System's internal locking mechanisms. It is useful when looking for bottlenecks in interaction between process, port, ets tables and other entities that can be run in parallel.</source>
          <target state="translated">&lt;code&gt;lcnt&lt;/code&gt; 用于在Erlang运行时系统的内部锁定机制中查找争用点。当寻找进程，端口，ets表和其他可以并行运行的实体之间的交互瓶颈时，此方法很有用。</target>
        </trans-unit>
        <trans-unit id="331dee2c2ee873ecad7db7a741ab79842dccabfa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lcnt&lt;/code&gt; is used to profile interactions inbetween entities that run in parallel. For example if you have a process that all other processes in the system needs to interact with (maybe it has some global configuration), then &lt;code&gt;lcnt&lt;/code&gt; can be used to figure out if the interaction with that process is a problem.</source>
          <target state="translated">&lt;code&gt;lcnt&lt;/code&gt; 用于描述并行运行的实体之间的交互。例如，如果您有一个系统中所有其他进程都需要与之交互的进程（也许它具有某些全局配置），则可以使用 &lt;code&gt;lcnt&lt;/code&gt; 来确定与该进程的交互是否存在问题。</target>
        </trans-unit>
        <trans-unit id="25ce4f2b1f1e06d9949ea3fe11c52d35da9121ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;len&lt;/code&gt; is the length of &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;len&lt;/code&gt; 是 &lt;code&gt;string&lt;/code&gt; 的长度。</target>
        </trans-unit>
        <trans-unit id="de4624d2d9acec6c37f781ba7bd5df326bc8a4a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;len&lt;/code&gt; is the length of the message in bytes.</source>
          <target state="translated">&lt;code&gt;len&lt;/code&gt; 是消息的长度，以字节为单位。</target>
        </trans-unit>
        <trans-unit id="98f88a9115e57d8f3563b9d731c267d124cd7da9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;length : integer&lt;/code&gt; :: Async queue length. Ex. &lt;code&gt;-1&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;length : integer&lt;/code&gt; ::异步队列长度。例如 &lt;code&gt;-1&lt;/code&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
