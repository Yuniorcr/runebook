<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="erlang">
    <body>
      <group id="erlang">
        <trans-unit id="1d1e8ed0c63bea5501f0e18a8588004e6a97f424" translate="yes" xml:space="preserve">
          <source>Partitions &lt;code&gt;List&lt;/code&gt; into two lists according to &lt;code&gt;Pred&lt;/code&gt;. &lt;code&gt;splitwith/2&lt;/code&gt; behaves as if it is defined as follows:</source>
          <target state="translated">根据 &lt;code&gt;Pred&lt;/code&gt; 将分区 &lt;code&gt;List&lt;/code&gt; 分为两个列表。 &lt;code&gt;splitwith/2&lt;/code&gt; 的行为就像定义如下：</target>
        </trans-unit>
        <trans-unit id="7a0f34af55f62b96f8e7863f5d8947f87bbe0f4d" translate="yes" xml:space="preserve">
          <source>Partitions &lt;code&gt;List&lt;/code&gt; into two lists, where the first list contains all elements for which &lt;code&gt;Pred(Elem)&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;, and the second list contains all elements for which &lt;code&gt;Pred(Elem)&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">分区 &lt;code&gt;List&lt;/code&gt; 分为两个列表，第一个列表包含 &lt;code&gt;Pred(Elem)&lt;/code&gt; 返回 &lt;code&gt;true&lt;/code&gt; 的所有元素，第二个列表包含 &lt;code&gt;Pred(Elem)&lt;/code&gt; 返回 &lt;code&gt;false&lt;/code&gt; 的所有元素。</target>
        </trans-unit>
        <trans-unit id="be77f796fd8548373af529ca7332cc6d13c15156" translate="yes" xml:space="preserve">
          <source>Parts of certificates can be decoded with &lt;code&gt;public_key:der_decode/2&lt;/code&gt;, using the ASN.1 type of that part. However, an application-specific certificate extension requires application-specific ASN.1 decode/encode-functions. In the recent example, the first value of &lt;code&gt;rdnSequence&lt;/code&gt; is of ASN.1 type &lt;code&gt;'X520CommonName'. ({2,5,4,3} = ?id-at-commonName)&lt;/code&gt;:</source>
          <target state="translated">可以使用 &lt;code&gt;public_key:der_decode/2&lt;/code&gt; 使用该部分的ASN.1类型对证书的部分进行解码。但是，特定于应用程序的证书扩展需要特定于应用程序的ASN.1解码/编码功能。在最近的示例中， &lt;code&gt;rdnSequence&lt;/code&gt; 的第一个值为ASN.1类型的 &lt;code&gt;'X520CommonName'. ({2,5,4,3} = ?id-at-commonName)&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="39f1ccafc930086a1e2f26b171bee188745affe2" translate="yes" xml:space="preserve">
          <source>Pass extra chunks to be stored in the &lt;code&gt;.beam&lt;/code&gt; file. The extra chunks must be a list of tuples with a four byte binary as chunk name followed by a binary with the chunk contents. See &lt;code&gt;beam_lib&lt;/code&gt; for more information.</source>
          <target state="translated">传递多余的块以存储在 &lt;code&gt;.beam&lt;/code&gt; 文件中。额外的块必须是一个元组列表，其中有四个字节的二进制作为块名称，后跟一个带有块内容的二进制。有关更多信息，请参见 &lt;code&gt;beam_lib&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c0d014bb56599fcece5464b8d5372d0e641b8c1b" translate="yes" xml:space="preserve">
          <source>Pass the &lt;code&gt;+Mea config&lt;/code&gt; command-line flag to the Erlang runtime system you are going to use for creation of the allocator configuration. It will disable features that prevent &lt;code&gt;erts_alloc_config&lt;/code&gt; from doing its job. Note, you should &lt;strong&gt;not&lt;/strong&gt; use this flag when using the created configuration. Also note that it is important that you use the same &lt;code&gt;amount of schedulers&lt;/code&gt; when creating the configuration as you are going the use on the system using the configuration.</source>
          <target state="translated">将 &lt;code&gt;+Mea config&lt;/code&gt; 命令行标志传递到将用于创建分配器配置的Erlang运行时系统。它将禁用阻止 &lt;code&gt;erts_alloc_config&lt;/code&gt; 执行其功能的功能。请注意，您应&lt;strong&gt;不&lt;/strong&gt;使用创建的配置时，使用此标志。还要注意，在创建配置时使用与在配置上使用系统相同 &lt;code&gt;amount of schedulers&lt;/code&gt; 非常重要。</target>
        </trans-unit>
        <trans-unit id="52a8e49b5b4f355426b2d1b0e4d23c4d22798cb7" translate="yes" xml:space="preserve">
          <source>Pass the &lt;code&gt;megaco_receive_handle&lt;/code&gt; to the transport module.</source>
          <target state="translated">将 &lt;code&gt;megaco_receive_handle&lt;/code&gt; 传递到传输模块。</target>
        </trans-unit>
        <trans-unit id="a12c368fddb9450ed1c838dd29236b5bedef5580" translate="yes" xml:space="preserve">
          <source>Pass the cross compilation variables as command line arguments to &lt;code&gt;configure&lt;/code&gt; using a &lt;code&gt;&amp;lt;VARIABLE&amp;gt;=&amp;lt;VALUE&amp;gt;&lt;/code&gt; syntax.</source>
          <target state="translated">通过交叉编译变量作为命令行参数来 &lt;code&gt;configure&lt;/code&gt; 使用 &lt;code&gt;&amp;lt;VARIABLE&amp;gt;=&amp;lt;VALUE&amp;gt;&lt;/code&gt; 语法。</target>
        </trans-unit>
        <trans-unit id="15b216add241be5dbff40c5c961c72de3bf72091" translate="yes" xml:space="preserve">
          <source>Passed &quot;as-is&quot; from the &lt;code&gt;{advanced,Extra}&lt;/code&gt; part of the update instruction.</source>
          <target state="translated">从更新指令的 &lt;code&gt;{advanced,Extra}&lt;/code&gt; 部分&amp;ldquo;按原样&amp;rdquo;传递。</target>
        </trans-unit>
        <trans-unit id="48905dff7e74ddb13af1cf1fa9519a564cdab569" translate="yes" xml:space="preserve">
          <source>Passed as the first argument to all NIFs. All function arguments passed to a NIF belong to that environment. The return value from a NIF must also be a term belonging to the same environment.</source>
          <target state="translated">作为所有NIF的第一个参数传递。传递给NIF的所有函数参数都属于该环境。NIF的返回值也必须是属于同一环境的术语。</target>
        </trans-unit>
        <trans-unit id="2a480eadd0d94fe624912e0c9231b5b28630f2a3" translate="yes" xml:space="preserve">
          <source>Passes &lt;code&gt;ListIn&lt;/code&gt; through a sequence of substitution/expansion stages. For an &lt;code&gt;aliases&lt;/code&gt; operation, function &lt;code&gt;&lt;a href=&quot;#substitute_aliases-2&quot;&gt;substitute_aliases/2&lt;/a&gt;&lt;/code&gt; is applied using the specified list of aliases:</source>
          <target state="translated">通过一系列替换/扩展阶段传递 &lt;code&gt;ListIn&lt;/code&gt; 。对于 &lt;code&gt;aliases&lt;/code&gt; 操作，将使用指定的别名列表来应用功能 &lt;code&gt;&lt;a href=&quot;#substitute_aliases-2&quot;&gt;substitute_aliases/2&lt;/a&gt;&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="e5bad30c3f82a8b6ce3c2d80f62cb2189d29b412" translate="yes" xml:space="preserve">
          <source>Passes extra arguments to the emulator startup program &lt;code&gt;erl.exe&lt;/code&gt; (or &lt;code&gt;start_erl.exe&lt;/code&gt;). Arguments that cannot be specified here are &lt;code&gt;-noinput&lt;/code&gt; (&lt;code&gt;StopActions&lt;/code&gt; would not work), &lt;code&gt;-name&lt;/code&gt;, and &lt;code&gt;-sname&lt;/code&gt; (they are specified in any way). The most common use is for specifying cookies and flags to be passed to &lt;code&gt;init:boot()&lt;/code&gt; (&lt;code&gt;-s&lt;/code&gt;).</source>
          <target state="translated">将额外的参数传递给模拟器启动程序 &lt;code&gt;erl.exe&lt;/code&gt; （或 &lt;code&gt;start_erl.exe&lt;/code&gt; ）。不能在这里指定的参数是 &lt;code&gt;-noinput&lt;/code&gt; （ &lt;code&gt;StopActions&lt;/code&gt; 是行不通的）， &lt;code&gt;-name&lt;/code&gt; 和 &lt;code&gt;-sname&lt;/code&gt; （他们以任何方式指定）。最常见的用途是指定要传递给 &lt;code&gt;init:boot()&lt;/code&gt; （- &lt;code&gt;-s&lt;/code&gt; ）的cookie和标志。</target>
        </trans-unit>
        <trans-unit id="17423ed9634ebf487daeddd08024ea098b0dfac8" translate="yes" xml:space="preserve">
          <source>Passing &lt;code&gt;msg_env&lt;/code&gt; as &lt;code&gt;NULL&lt;/code&gt; is only supported as from ERTS 8.0 (Erlang/OTP 19).</source>
          <target state="translated">从ERTS 8.0（Erlang / OTP 19）开始仅支持将 &lt;code&gt;msg_env&lt;/code&gt; 传递为 &lt;code&gt;NULL&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="05b52936612a6b19fd4936a6190ec91e1270fc3f" translate="yes" xml:space="preserve">
          <source>Passing the others on to an enclosing &lt;code&gt;try&lt;/code&gt; or &lt;code&gt;catch&lt;/code&gt;, or to default error handling.</source>
          <target state="translated">将其他参数传递给随附的 &lt;code&gt;try&lt;/code&gt; 或 &lt;code&gt;catch&lt;/code&gt; 或默认错误处理。</target>
        </trans-unit>
        <trans-unit id="c3441c01856bc44f16f44713579f9eb0b9cab8a3" translate="yes" xml:space="preserve">
          <source>Password-protected and encrypted archives are not supported.</source>
          <target state="translated">不支持密码保护和加密的存档。</target>
        </trans-unit>
        <trans-unit id="6c3606fd7f334a9c3d48f5825a16e88b15b8c73b" translate="yes" xml:space="preserve">
          <source>Pasted text is inserted at the current prompt position and is interpreted by Erlang as usual keyboard input.</source>
          <target state="translated">粘贴的文本被插入到当前的提示位置,并被Erlang解释为通常的键盘输入。</target>
        </trans-unit>
        <trans-unit id="bae50870edf6016cbfd2f917e452b9a16dcd7599" translate="yes" xml:space="preserve">
          <source>Patches are either released as maintenance patch packages or emergency patch packages. The only difference is that maintenance patch packages are planned and usually contain more changes than emergency patch packages. Emergency patch packages are released to solve one or more specific issues when such are discovered.</source>
          <target state="translated">补丁以维护补丁包或紧急补丁包的形式发布。唯一的区别是,维护补丁包是有计划的,通常比紧急补丁包包含更多的更改。紧急补丁包的发布是为了解决发现的一个或多个具体问题。</target>
        </trans-unit>
        <trans-unit id="8160b1ab2039239aefde8cb0e11cb5ebe2e0ad8b" translate="yes" xml:space="preserve">
          <source>Patching applications is a one-way process. Create a backup of your OTP installation directory before proceeding.</source>
          <target state="translated">补丁应用程序是一个单向的过程。在继续之前,请先创建OTP安装目录的备份。</target>
        </trans-unit>
        <trans-unit id="55c14b77f9d8f42c4e27a07e774f4f8fb65cbb79" translate="yes" xml:space="preserve">
          <source>Path P is &lt;strong id=&quot;simple_path&quot;&gt;simple&lt;/strong&gt; if all vertices are distinct, except that the first and the last vertices can be the same.</source>
          <target state="translated">如果所有顶点都不同，则路径P很&lt;strong id=&quot;simple_path&quot;&gt;简单&lt;/strong&gt;，除了第一个和最后一个顶点可以相同。</target>
        </trans-unit>
        <trans-unit id="b2e97f14f2f6a2a22960aaaf716fd64dd488ed83" translate="yes" xml:space="preserve">
          <source>Path P is a &lt;strong id=&quot;cycle&quot;&gt;cycle&lt;/strong&gt; if the length of P is not zero and v[1] = v[k].</source>
          <target state="translated">如果P的长度不为零且v [1] = v [k]，则路径P是一个&lt;strong id=&quot;cycle&quot;&gt;循环&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="ec4b3c7aff6a8f5ca4aa618fd7283506da7262b5" translate="yes" xml:space="preserve">
          <source>Path to a file containing PEM-encoded CA certificates. The CA certificates are used during server authentication and when building the client certificate chain.</source>
          <target state="translated">包含PEM编码的CA证书的文件路径。CA证书在服务器认证和建立客户端证书链时使用。</target>
        </trans-unit>
        <trans-unit id="e90e566c06157343897915883777d52efdf4c086" translate="yes" xml:space="preserve">
          <source>Path to a file containing PEM-encoded CA certificates. The CA certificates are used to build the server certificate chain and for client authentication. The CAs are also used in the list of acceptable client CAs passed to the client when a certificate is requested. Can be omitted if there is no need to verify the client and if there are no intermediate CAs for the server certificate.</source>
          <target state="translated">包含PEM编码的CA证书的文件路径。CA证书用于建立服务器证书链和客户端认证。当请求证书时,CA也被用于传递给客户端的可接受的客户端CA列表中。如果不需要验证客户端,并且服务器证书没有中间CA,可以省略。</target>
        </trans-unit>
        <trans-unit id="a605e96cddb300d711887a44f810e2c399109734" translate="yes" xml:space="preserve">
          <source>Path to a file containing PEM-encoded Diffie Hellman parameters to be used by the server if a cipher suite using Diffie Hellman key exchange is negotiated. If not specified, default parameters are used.</source>
          <target state="translated">包含PEM编码的Diffie Hellman参数的文件路径,如果使用Diffie Hellman密钥交换的密码套件,服务器将使用该文件。如果没有指定,则使用默认参数。</target>
        </trans-unit>
        <trans-unit id="eac8a20a2d9480ebb53700b4e9bedee92d37f637" translate="yes" xml:space="preserve">
          <source>Path to a file containing the user certificate.</source>
          <target state="translated">包含用户证书的文件路径。</target>
        </trans-unit>
        <trans-unit id="1e962d8338f96f1e74e511aa7a15c1b3d987bd58" translate="yes" xml:space="preserve">
          <source>Path to the file containing the user's private PEM-encoded key. As PEM-files can contain several entries, this option defaults to the same file as given by option &lt;code&gt;certfile&lt;/code&gt;.</source>
          <target state="translated">包含用户的私有PEM编码密钥的文件的路径。由于PEM文件可以包含多个条目，因此该选项默认为与 &lt;code&gt;certfile&lt;/code&gt; 选项给定的相同文件。</target>
        </trans-unit>
        <trans-unit id="8fcabcda1f4e1160624d33fb2f5784f5c63030cc" translate="yes" xml:space="preserve">
          <source>PathList is a list of directories to search when fetching files. If the file in question is not in the fetch_path, the URI will be used as a file name.</source>
          <target state="translated">PathList是一个在获取文件时要搜索的目录列表。如果相关文件不在fetch_path中,URI将被用作文件名。</target>
        </trans-unit>
        <trans-unit id="47482e00ecdde046c872e760861acd107da31305" translate="yes" xml:space="preserve">
          <source>Paths to keys are left to right, with subkeys to the right and backslash between keys. (Remember that backslashes must be doubled in Erlang strings.) Case is preserved but not significant.</source>
          <target state="translated">键的路径从左到右,子键在右边,键与键之间用反斜杠。(请记住,在 Erlang 字符串中,反斜杠必须是双倍的。)大小写会被保留,但不重要。</target>
        </trans-unit>
        <trans-unit id="4a4ff6f40515d80959eb2891b1a4f521722adb61" translate="yes" xml:space="preserve">
          <source>Pattern matching</source>
          <target state="translated">模式匹配</target>
        </trans-unit>
        <trans-unit id="07df831a704cd0fc47532246baa7f29146388369" translate="yes" xml:space="preserve">
          <source>Pattern matching in function head as well as in &lt;code&gt;case&lt;/code&gt; and &lt;code&gt;receive&lt;/code&gt; clauses are optimized by the compiler. With a few exceptions, there is nothing to gain by rearranging clauses.</source>
          <target state="translated">函数头中的模式匹配以及 &lt;code&gt;case&lt;/code&gt; 和 &lt;code&gt;receive&lt;/code&gt; 子句均由编译器优化。除少数例外，重新排列子句没有任何好处。</target>
        </trans-unit>
        <trans-unit id="e33f96bb1810cf2a758f0574bbb8ca910eec1915" translate="yes" xml:space="preserve">
          <source>Pattern matching with records is very similar to creating records. For example, inside a &lt;code&gt;case&lt;/code&gt; or &lt;code&gt;receive&lt;/code&gt;:</source>
          <target state="translated">与记录的模式匹配与创建记录非常相似。例如，在 &lt;code&gt;case&lt;/code&gt; 或 &lt;code&gt;receive&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="3b4cf89b5b26547550456e5e4f643ae53f5d29be" translate="yes" xml:space="preserve">
          <source>Pattern variables &lt;code&gt;'$N'&lt;/code&gt;, where &lt;code&gt;N&lt;/code&gt;=0,1,...</source>
          <target state="translated">模式变量 &lt;code&gt;'$N'&lt;/code&gt; ，其中 &lt;code&gt;N&lt;/code&gt; = 0,1，...</target>
        </trans-unit>
        <trans-unit id="98d00def036dd2fd6e93404dff53fcc8b8b39938" translate="yes" xml:space="preserve">
          <source>Patterns are allowed in clause heads, &lt;code&gt;case&lt;/code&gt; and &lt;code&gt;receive&lt;/code&gt; expressions, and match expressions.</source>
          <target state="translated">子句标题， &lt;code&gt;case&lt;/code&gt; 和 &lt;code&gt;receive&lt;/code&gt; 表达式以及匹配表达式中都允许使用模式。</target>
        </trans-unit>
        <trans-unit id="6af09a32bdb3adae271bf8a9bea0cb4b9c66dda2" translate="yes" xml:space="preserve">
          <source>Pau_Cin_Hau</source>
          <target state="translated">Pau_Cin_Hau</target>
        </trans-unit>
        <trans-unit id="49ed482e870cd614e256519cffa6b9161630c632" translate="yes" xml:space="preserve">
          <source>Pause call count tracing for all functions in all modules and stop it for all functions in modules to be loaded. This is the same as &lt;code&gt;(pause({'_','_','_'})+stop({on_load}))&lt;/code&gt;.</source>
          <target state="translated">暂停所有模块中所有功能的调用计数跟踪，并停止要加载的模块中所有功能的调用计数跟踪。这和 &lt;code&gt;(pause({'_','_','_'})+stop({on_load}))&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="2db0d11168e0cf244f7875ac1346e7b6c97f62cc" translate="yes" xml:space="preserve">
          <source>Pause call counters for matching functions in matching modules. The &lt;code&gt;FS&lt;/code&gt; argument can be used to specify the first argument to &lt;code&gt;erlang:trace_pattern/3&lt;/code&gt;. See erlang(3).</source>
          <target state="translated">暂停用于匹配模块中匹配功能的调用计数器。该 &lt;code&gt;FS&lt;/code&gt; 参数可用于指定的第一个参数 &lt;code&gt;erlang:trace_pattern/3&lt;/code&gt; 。参见erlang（3）。</target>
        </trans-unit>
        <trans-unit id="391d516918ec3156c32ea3be943e04f2e2a433a7" translate="yes" xml:space="preserve">
          <source>Pauses the call counters for specified functions. This minimises the impact of code running in the background or in the shell that disturbs the profiling. Call counters are automatically paused when they &quot;hit the ceiling&quot; of the host machine word size. For a 32 bit host the maximum counter value is 2147483647.</source>
          <target state="translated">暂停指定函数的调用计数器。这样可以最大限度地减少后台或shell中运行的代码对剖析的影响。当调用计数器 &quot;达到 &quot;主机字数上限时,会自动暂停。对于32位主机,最大的计数器值是2147483647。</target>
        </trans-unit>
        <trans-unit id="cf9afa37f2e5869dc6ad902115a35d4f0c5f630f" translate="yes" xml:space="preserve">
          <source>Peer Connections</source>
          <target state="translated">同行联系</target>
        </trans-unit>
        <trans-unit id="59488fa72b53c2103f34565feb175db9fb2c4131" translate="yes" xml:space="preserve">
          <source>Peer State Machine</source>
          <target state="translated">同行状态机</target>
        </trans-unit>
        <trans-unit id="98ae8b5da563501389aa05d3f2695db094619a3c" translate="yes" xml:space="preserve">
          <source>Peer Table</source>
          <target state="translated">同行桌</target>
        </trans-unit>
        <trans-unit id="1bee610f8ffa13f60ce754210a4e3cbf3ffbe983" translate="yes" xml:space="preserve">
          <source>Peer to which the request in question can be sent, preempting the selection of peers having advertised support for the Diameter application in question. Multiple options can be specified, and their order is respected in the candidate lists passed to a subsequent &lt;code&gt;pick_peer/4&lt;/code&gt; callback.</source>
          <target state="translated">可以将相关请求发送到的对等方，从而避免选择已通告支持该Diameter应用程序的对等方。可以指定多个选项，并在传递给后续 &lt;code&gt;pick_peer/4&lt;/code&gt; 回调的候选列表中遵循它们的顺序。</target>
        </trans-unit>
        <trans-unit id="84b84620029f6985cb04948713a4f88534fba4df" translate="yes" xml:space="preserve">
          <source>Peer-to-Peer Considerations</source>
          <target state="translated">点对点的考虑</target>
        </trans-unit>
        <trans-unit id="fcd5fc2500f0a1816c7d774f52e29f9431495a7a" translate="yes" xml:space="preserve">
          <source>Peers are only shared with services of the same name for the purpose of sending outgoing requests. Since the value of the &lt;code&gt;&lt;a href=&quot;#application_opt&quot;&gt;application_opt()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;alias&lt;/code&gt;, passed to &lt;code&gt;&lt;a href=&quot;#call-4&quot;&gt;call/4&lt;/a&gt;&lt;/code&gt;, is the handle for identifying a peer as a suitable candidate, services that share peers must use the same aliases to identify their supported applications. They should typically also configure identical &lt;code&gt;&lt;a href=&quot;#capabilities&quot;&gt;capabilities()&lt;/a&gt;&lt;/code&gt;, since by sharing peer connections they are distributing the implementation of a single Diameter node across multiple Erlang nodes.</source>
          <target state="translated">为了发送传出请求，仅与同名服务共享对等体。由于传递给 &lt;code&gt;&lt;a href=&quot;#call-4&quot;&gt;call/4&lt;/a&gt;&lt;/code&gt; 的 &lt;code&gt;&lt;a href=&quot;#application_opt&quot;&gt;application_opt()&lt;/a&gt;&lt;/code&gt; &lt;code&gt;alias&lt;/code&gt; 的值是将对等方标识为合适候选者的句柄，因此共享对等方的服务必须使用相同的别名来标识其受支持的应用程序。他们通常还应该配置相同的 &lt;code&gt;&lt;a href=&quot;#capabilities&quot;&gt;capabilities()&lt;/a&gt;&lt;/code&gt; ，因为通过共享对等连接，他们可以在多个Erlang节点之间分布单个Diameter节点的实现。</target>
        </trans-unit>
        <trans-unit id="83040eadd1e47ac6af77c8ee2d41f0ec18c15f6e" translate="yes" xml:space="preserve">
          <source>Per module to caller</source>
          <target state="translated">每模块到调用者</target>
        </trans-unit>
        <trans-unit id="2cad7f79a8783eead4b37e0cf84881231114b250" translate="yes" xml:space="preserve">
          <source>Per process to screen/file</source>
          <target state="translated">每一进程筛选/存档</target>
        </trans-unit>
        <trans-unit id="15141e26e03178e5d1d620e527c846aa1c625c2d" translate="yes" xml:space="preserve">
          <source>Per process/function to screen/file</source>
          <target state="translated">每过程/功能筛选/存档</target>
        </trans-unit>
        <trans-unit id="6128679797da16a04d84c728a524e6710fc16bbe" translate="yes" xml:space="preserve">
          <source>Percentage of accumulated waiting time of wall clock time. This percentage can be higher than 100% since accumulated time is from all threads.</source>
          <target state="translated">累计等待时间占挂钟时间的百分比。这个百分比可以高于100%,因为累计时间来自所有线程。</target>
        </trans-unit>
        <trans-unit id="900a5b77b467253970a850573dc79a89db1e52f1" translate="yes" xml:space="preserve">
          <source>Perform CRL (Certificate Revocation List) verification &lt;code&gt;(public_key:pkix_crls_validate/3)&lt;/code&gt; on all the certificates during the path validation &lt;code&gt;(public_key:pkix_path_validation/3)&lt;/code&gt; of the certificate chain. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">在证书链的路径验证 &lt;code&gt;(public_key:pkix_path_validation/3)&lt;/code&gt; 期间，对所有证书执行CRL（证书吊销列表）验证 &lt;code&gt;(public_key:pkix_crls_validate/3)&lt;/code&gt; 。默认为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7dfd0566897f67f4a88a10a9ccab4a835f714346" translate="yes" xml:space="preserve">
          <source>Perform a backup of the mib-server data.</source>
          <target state="translated">对mib服务器数据进行备份。</target>
        </trans-unit>
        <trans-unit id="f5297ab6e77bd5a8f87b119bc54aebb086ae8bf2" translate="yes" xml:space="preserve">
          <source>Perform a backup of the mib-storage table.</source>
          <target state="translated">对mib存储表进行备份。</target>
        </trans-unit>
        <trans-unit id="bb3df0035ca80e21666d0fd6cd422cbcccdf7b1a" translate="yes" xml:space="preserve">
          <source>Perform a code-change (upgrade or downgrade).</source>
          <target state="translated">进行代码变更(升级或降级)。</target>
        </trans-unit>
        <trans-unit id="dcafc54e1058ab12e1726559ee25482e972eb9fa" translate="yes" xml:space="preserve">
          <source>Perform a minimal decode of a megaco message.</source>
          <target state="translated">对megaco信息进行最小解码。</target>
        </trans-unit>
        <trans-unit id="794622c63bd34b165ba99166f899c7db08151e43" translate="yes" xml:space="preserve">
          <source>Perform mib server cache gc.</source>
          <target state="translated">执行mib服务器缓存gc。</target>
        </trans-unit>
        <trans-unit id="ffce32cc050ae65e8a2071012a2914617cc171d0" translate="yes" xml:space="preserve">
          <source>Performance suffers when modified timing is enabled. This flag is &lt;strong&gt;only&lt;/strong&gt; intended for testing and debugging.</source>
          <target state="translated">启用修改的时序后，性能会受到影响。该标志&lt;strong&gt;仅&lt;/strong&gt;用于测试和调试。</target>
        </trans-unit>
        <trans-unit id="7d4cef1e85e0d8796653ef41a51578e4b550d221" translate="yes" xml:space="preserve">
          <source>Performance tuning. Defaults to &lt;code&gt;false&lt;/code&gt;, in which case an operation that mutates (writes to) the table obtains exclusive access, blocking any concurrent access of the same table until finished. If set to &lt;code&gt;true&lt;/code&gt;, the table is optimized to concurrent write access. Different objects of the same table can be mutated (and read) by concurrent processes. This is achieved to some degree at the expense of memory consumption and the performance of sequential access and concurrent reading.</source>
          <target state="translated">性能调优。默认为 &lt;code&gt;false&lt;/code&gt; ，在这种情况下，对表进行突变（写入）的操作将获得排他访问，从而阻塞对同一表的所有并发访问，直到完成。如果设置为 &lt;code&gt;true&lt;/code&gt; ，则将表优化为并发写访问。同一表的不同对象可以通过并发进程进行突变（和读取）。这在某种程度上是以牺牲内存消耗以及顺序访问和并发读取性能为代价的。</target>
        </trans-unit>
        <trans-unit id="4ab94c7cedeb2cfec74773af353f3d78c22eb541" translate="yes" xml:space="preserve">
          <source>Performance tuning. Defaults to &lt;code&gt;false&lt;/code&gt;. When set to &lt;code&gt;true&lt;/code&gt;, the table is optimized for concurrent read operations. When this option is enabled on a runtime system with SMP support, read operations become much cheaper; especially on systems with multiple physical processors. However, switching between read and write operations becomes more expensive.</source>
          <target state="translated">性能调优。默认为 &lt;code&gt;false&lt;/code&gt; 。设置为 &lt;code&gt;true&lt;/code&gt; 时，该表针对并发读取操作进行了优化。在具有SMP支持的运行时系统上启用此选项后，读取操作将变得便宜得多。特别是在具有多个物理处理器的系统上。但是，读和写操作之间的切换变得更加昂贵。</target>
        </trans-unit>
        <trans-unit id="24461109bfb38c1846415956b344d29b6573204f" translate="yes" xml:space="preserve">
          <source>Performing the handshakes/cookie verification</source>
          <target state="translated">进行握手/cookie验证。</target>
        </trans-unit>
        <trans-unit id="4f5f75852079a024445eb45615d781f09840d582" translate="yes" xml:space="preserve">
          <source>Performs CRL validation. It is intended to be called from the verify fun of &lt;code&gt;&lt;a href=&quot;#pkix_path_validation-3&quot;&gt;pkix_path_validation/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">执行CRL验证。它旨在从 &lt;code&gt;&lt;a href=&quot;#pkix_path_validation-3&quot;&gt;pkix_path_validation/3&lt;/a&gt;&lt;/code&gt; 的验证乐趣中调用。</target>
        </trans-unit>
        <trans-unit id="55946f4b90e3f6fd8ef1498f50ddd3c5f07b68a6" translate="yes" xml:space="preserve">
          <source>Performs a GET operation on the agent. All loaded MIB objects are visible in this operation. The agent calls the corresponding instrumentation functions just as if it was a GET request coming from a manager.</source>
          <target state="translated">在代理上执行GET操作。在此操作中,所有加载的MIB对象都是可见的。代理商会调用相应的工具函数,就像从管理器发出的GET请求一样。</target>
        </trans-unit>
        <trans-unit id="98e445605a9fc3e5f98515d8ffa3a57e6ffd8436" translate="yes" xml:space="preserve">
          <source>Performs a GET-NEXT operation on the agent. All loaded MIB objects are visible in this operation. The agent calls the corresponding instrumentation functions just as if it was a GET request coming from a manager.</source>
          <target state="translated">在代理上执行GET-NEXT操作。在此操作中,所有加载的MIB对象都是可见的。代理商会调用相应的工具函数,就像从管理器发出的GET请求一样。</target>
        </trans-unit>
        <trans-unit id="fbfe9d2053799030c3effc383609b21073247735" translate="yes" xml:space="preserve">
          <source>Performs a basic path validation according to &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc5280.txt&quot;&gt;RFC 5280.&lt;/a&gt;&lt;/code&gt; However, CRL validation is done separately by &lt;code&gt;&lt;a href=&quot;#pkix_crls_validate-3&quot;&gt;pkix_crls_validate/3&lt;/a&gt;&lt;/code&gt; and is to be called from the supplied &lt;code&gt;verify_fun&lt;/code&gt;.</source>
          <target state="translated">根据 &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc5280.txt&quot;&gt;RFC 5280.&lt;/a&gt;&lt;/code&gt; 执行基本路径验证。但是，CRL验证由 &lt;code&gt;&lt;a href=&quot;#pkix_crls_validate-3&quot;&gt;pkix_crls_validate/3&lt;/a&gt;&lt;/code&gt; 单独完成，可以从提供的 &lt;code&gt;verify_fun&lt;/code&gt; 中调用。</target>
        </trans-unit>
        <trans-unit id="9816bd4572d4da2d5254081f508d19359bc0475d" translate="yes" xml:space="preserve">
          <source>Performs a sanity check on the system. If no issues were found, &lt;code&gt;ok&lt;/code&gt; is returned. If issues were found, &lt;code&gt;{failed, Failures}&lt;/code&gt; is returned. All failures found will be part of the &lt;code&gt;Failures&lt;/code&gt; list. Currently defined &lt;code&gt;Failure&lt;/code&gt; elements in the &lt;code&gt;Failures&lt;/code&gt; list:</source>
          <target state="translated">在系统上执行健全性检查。如果未发现问题，则返回 &lt;code&gt;ok&lt;/code&gt; 。如果发现问题，则返回 &lt;code&gt;{failed, Failures}&lt;/code&gt; 。找到的所有故障将成为&amp;ldquo; &lt;code&gt;Failures&lt;/code&gt; 列表的一部分。 &lt;code&gt;Failures&lt;/code&gt; 列表中当前定义的 &lt;code&gt;Failure&lt;/code&gt; 元素：</target>
        </trans-unit>
        <trans-unit id="1be49612d446742e1eb3514b871f56b8a3ce8433" translate="yes" xml:space="preserve">
          <source>Performs a sequence of &lt;code&gt;pread/3&lt;/code&gt; in one operation, which is more efficient than calling them one at a time. Returns &lt;code&gt;{ok, [Data, ...]}&lt;/code&gt; or &lt;code&gt;{error, Reason}&lt;/code&gt;, where each &lt;code&gt;Data&lt;/code&gt;, the result of the corresponding &lt;code&gt;pread&lt;/code&gt;, is either a list or a binary depending on the mode of the file, or &lt;code&gt;eof&lt;/code&gt; if the requested position is beyond end of file.</source>
          <target state="translated">在一个操作中执行一系列 &lt;code&gt;pread/3&lt;/code&gt; ，这比一次调用一个pread / 3更有效。返回 &lt;code&gt;{ok, [Data, ...]}&lt;/code&gt; 或 &lt;code&gt;{error, Reason}&lt;/code&gt; ，其中每个 &lt;code&gt;Data&lt;/code&gt; （相应 &lt;code&gt;pread&lt;/code&gt; 的结果）是列表或二进制文件，具体取决于文件的模式，或者 &lt;code&gt;eof&lt;/code&gt; (如果请求的话）位置超出了文件末尾。</target>
        </trans-unit>
        <trans-unit id="22bb771fd651389aaadce513456ba74d3fd0ed89" translate="yes" xml:space="preserve">
          <source>Performs a sequence of &lt;code&gt;pwrite/3&lt;/code&gt; in one operation, which is more efficient than calling them one at a time. Returns &lt;code&gt;ok&lt;/code&gt; or &lt;code&gt;{error, {N, Reason}}&lt;/code&gt;, where &lt;code&gt;N&lt;/code&gt; is the number of successful writes done before the failure.</source>
          <target state="translated">在一个操作中执行 &lt;code&gt;pwrite/3&lt;/code&gt; 的序列，这比一次调用它们更有效。返回 &lt;code&gt;ok&lt;/code&gt; 或 &lt;code&gt;{error, {N, Reason}}&lt;/code&gt; ，其中 &lt;code&gt;N&lt;/code&gt; 是失败之前完成的成功写入次数。</target>
        </trans-unit>
        <trans-unit id="280190b61c0c88706d5eded9a13af6f093ee900b" translate="yes" xml:space="preserve">
          <source>Performs a synchronous call to a port. The meaning of &lt;code&gt;Operation&lt;/code&gt; and &lt;code&gt;Data&lt;/code&gt; depends on the port, that is, on the port driver. Not all port drivers support this feature.</source>
          <target state="translated">对端口执行同步调用。&amp;ldquo; &lt;code&gt;Operation&lt;/code&gt; 和 &lt;code&gt;Data&lt;/code&gt; &amp;rdquo;的含义取决于端口，即端口驱动程序。并非所有的端口驱动程序都支持此功能。</target>
        </trans-unit>
        <trans-unit id="40fc6748b5fbb2d35ce953467a85ef32b1d82a24" translate="yes" xml:space="preserve">
          <source>Performs a synchronous control operation on a port. The meaning of &lt;code&gt;Operation&lt;/code&gt; and &lt;code&gt;Data&lt;/code&gt; depends on the port, that is, on the port driver. Not all port drivers support this control feature.</source>
          <target state="translated">在端口上执行同步控制操作。&amp;ldquo; &lt;code&gt;Operation&lt;/code&gt; 和 &lt;code&gt;Data&lt;/code&gt; &amp;rdquo;的含义取决于端口，即端口驱动程序。并非所有的端口驱动程序都支持此控制功能。</target>
        </trans-unit>
        <trans-unit id="13d765f074145e069c27186fead40fb3ae13c752" translate="yes" xml:space="preserve">
          <source>Performs a syntactic and semantic check of the script file. Warnings and errors (if any) are written to the standard output, but the script will not be run. The exit status is &lt;code&gt;0&lt;/code&gt; if any errors are found, otherwise &lt;code&gt;127&lt;/code&gt;.</source>
          <target state="translated">对脚本文件执行语法和语义检查。警告和错误（如果有）被写入标准输出，但是脚本不会运行。如果发现任何错误，则退出状态为 &lt;code&gt;0&lt;/code&gt; ，否则为 &lt;code&gt;127&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="51b00069a7d5cb93226f893911ac7caf2f55b4b0" translate="yes" xml:space="preserve">
          <source>Performs a test of encode and decode of types in &lt;code&gt;Module&lt;/code&gt;. The generated functions are called by this function. This function is useful during test to secure that the generated encode and decode functions as well as the general runtime support work as expected.</source>
          <target state="translated">执行 &lt;code&gt;Module&lt;/code&gt; 中类型的编码和解码测试。生成的函数被该函数调用。此功能在测试过程中很有用，可确保生成的编码和解码功能以及常规运行时支持按预期工作。</target>
        </trans-unit>
        <trans-unit id="d3b4972ee35b6d2ed6932472f96493c8c99e99ae" translate="yes" xml:space="preserve">
          <source>Performs a user-initiated dump of the local log file. This is usually not necessary, as Mnesia by default manages this automatically. See configuration parameters &lt;code&gt;&lt;a href=&quot;#dump_log_time_threshold&quot;&gt;dump_log_time_threshold&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#dump_log_write_threshold&quot;&gt;dump_log_write_threshold&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">执行用户启动的本地日志文件的转储。通常不需要这样做，因为Mnesia默认情况下会自动进行管理。请参阅配置参数 &lt;code&gt;&lt;a href=&quot;#dump_log_time_threshold&quot;&gt;dump_log_time_threshold&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;#dump_log_write_threshold&quot;&gt;dump_log_write_threshold&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cbce4fd8e8c273fb3d0d070a4bf63febe024097d" translate="yes" xml:space="preserve">
          <source>Performs an asynchronous call. The function &lt;code&gt;async_invoke&lt;/code&gt; is invoked in a thread separate from the emulator thread. This enables the driver to perform time-consuming, blocking operations without blocking the emulator.</source>
          <target state="translated">执行异步调用。函数 &lt;code&gt;async_invoke&lt;/code&gt; 在与仿真器线程分开的线程中调用。这使驱动程序可以执行耗时的阻塞操作，而不会阻塞模拟器。</target>
        </trans-unit>
        <trans-unit id="fd8e1e45db305e4c65eb358872501f86f5ca41b3" translate="yes" xml:space="preserve">
          <source>Performs an ets/dets matching on the table. See Stdlib documentation, module ets, for a description of &lt;code&gt;Pattern&lt;/code&gt; and the return values.</source>
          <target state="translated">在表上执行ets / dets匹配。有关 &lt;code&gt;Pattern&lt;/code&gt; 和返回值的描述，请参见Stdlib文档，模块集。</target>
        </trans-unit>
        <trans-unit id="80ddf1ab4c5a4ace67d0fceb7152a9233f49eec4" translate="yes" xml:space="preserve">
          <source>Performs an identity transformation on Erlang forms, as an example.</source>
          <target state="translated">以Erlang表单为例,执行身份转换。</target>
        </trans-unit>
        <trans-unit id="e96ceee5ca669b69ceed3f28a9e634eb2729259c" translate="yes" xml:space="preserve">
          <source>Performs analysis of one or more Cover compiled modules, as specified by &lt;code&gt;Analysis&lt;/code&gt; and &lt;code&gt;Level&lt;/code&gt; (see above), by examining the contents of the internal database.</source>
          <target state="translated">通过检查内部数据库的内容，对&amp;ldquo; &lt;code&gt;Analysis&lt;/code&gt; 和&amp;ldquo; &lt;code&gt;Level&lt;/code&gt; （请参见上文）指定的一个或多个Cover编译模块进行分析。</target>
        </trans-unit>
        <trans-unit id="ef62ac9b7159f229d46fa80ce221a721a030144b" translate="yes" xml:space="preserve">
          <source>Performs bit-wise XOR (exclusive or) on the data supplied.</source>
          <target state="translated">对所提供的数据进行位的XOR(独占或)。</target>
        </trans-unit>
        <trans-unit id="1e4270aba1ba7205d6177c0c6c52d4aee26d94d9" translate="yes" xml:space="preserve">
          <source>Performs command &lt;code&gt;listenv&lt;/code&gt; on the specified Telnet connection and returns the result as a list of key-value pairs.</source>
          <target state="translated">在指定的Telnet连接上执行命令 &lt;code&gt;listenv&lt;/code&gt; ，并将结果作为键值对列表返回。</target>
        </trans-unit>
        <trans-unit id="1e742f72d48ea0d869f73c425bd3bb42130fb756" translate="yes" xml:space="preserve">
          <source>Performs login of &lt;code&gt;User&lt;/code&gt; with &lt;code&gt;Password&lt;/code&gt; to the account specified by &lt;code&gt;Account&lt;/code&gt;.</source>
          <target state="translated">进行登录的 &lt;code&gt;User&lt;/code&gt; 与 &lt;code&gt;Password&lt;/code&gt; 通过指定的帐户 &lt;code&gt;Account&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="61aff80f20917a90cadf86008c298098cf718490" translate="yes" xml:space="preserve">
          <source>Performs login of &lt;code&gt;User&lt;/code&gt; with &lt;code&gt;Password&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;Password&lt;/code&gt; 执行 &lt;code&gt;User&lt;/code&gt; 登录。</target>
        </trans-unit>
        <trans-unit id="4a3c66dde8a5c3d5e1d69b450f3fb1194e697017" translate="yes" xml:space="preserve">
          <source>Performs possible initializations of the cache and returns a reference to it that is used as parameter to the other API functions. Is called by the cache handling processes &lt;code&gt;init&lt;/code&gt; function, hence putting the same requirements on it as a normal process &lt;code&gt;init&lt;/code&gt; function. This function is called twice when starting the SSL application, once with the role client and once with the role server, as the SSL application must be prepared to take on both roles.</source>
          <target state="translated">对缓存执行可能的初始化，并返回对该缓存的引用，该引用用作其他API函数的参数。由缓存处理流程 &lt;code&gt;init&lt;/code&gt; 函数调用，因此对它的要求与普通流程 &lt;code&gt;init&lt;/code&gt; 函数相同。启动SSL应用程序时，将两次调用此函数，一次是使用角色客户端，一次是使用角色服务器，因为SSL应用程序必须准备好承担这两个角色。</target>
        </trans-unit>
        <trans-unit id="f6e21c5aaeabe015b0a346ede9fe7603c40e3285" translate="yes" xml:space="preserve">
          <source>Performs some checks on the package, for example, checks that all mandatory files are present, and extracts its contents.</source>
          <target state="translated">对软件包进行一些检查,例如,检查所有必须的文件是否存在,并提取其内容。</target>
        </trans-unit>
        <trans-unit id="d7e17286dfe95065d8a22e3569662aef2ec0170e" translate="yes" xml:space="preserve">
          <source>Performs the SSL/TLS/DTLS server-side handshake.</source>
          <target state="translated">执行SSL/TLS/DTLS服务器端握手。</target>
        </trans-unit>
        <trans-unit id="de30caaee38c0ba213430dd42690a090335a596f" translate="yes" xml:space="preserve">
          <source>Perhaps you want to do something more arranged for human reading. Suppose that you want to list all different brands in the beginning with links to each group of motorcycles. You also want all motorcycles sorted by brand, then some flashy colors on top of it. Thus you rearrange the order of the elements and put in arbitrary HTML tags. This is possible to do by means of the &lt;code&gt;&lt;a href=&quot;http://www.w3.org/Style/XSL/&quot;&gt;XSL Transformation (XSLT)&lt;/a&gt;&lt;/code&gt; like functionality in xmerl.</source>
          <target state="translated">也许您想做一些更适合人类阅读的事情。假设您想在一开始列出所有不同的品牌，并列出每组摩托车的链接。您还希望所有摩托车按品牌分类，然后在其上面添加一些鲜艳的颜色。因此，您可以重新排列元素的顺序并放入任意HTML标记中。这可以通过xmerl中类似 &lt;code&gt;&lt;a href=&quot;http://www.w3.org/Style/XSL/&quot;&gt;XSL Transformation (XSLT)&lt;/a&gt;&lt;/code&gt; 功能来完成。</target>
        </trans-unit>
        <trans-unit id="dc72f276fa3f20586692a9e869fb89bcfcd032e0" translate="yes" xml:space="preserve">
          <source>Periodically checks the disks. For each disk or partition which uses more than a certain amount of the available space, the alarm &lt;code&gt;{{disk_almost_full, MountedOn}, []}&lt;/code&gt; is set.</source>
          <target state="translated">定期检查磁盘。对于每个使用了一定数量以上可用空间的磁盘或分区，将设置警报 &lt;code&gt;{{disk_almost_full, MountedOn}, []}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ae86c831bcfb2749ff7edc7ec83510fdd2c53cda" translate="yes" xml:space="preserve">
          <source>Periodically flushes all file trace port clients (see &lt;code&gt;dbg:flush_trace_port/1&lt;/code&gt;). When enabled, the buffers are freed each &lt;code&gt;MSec&lt;/code&gt; millisecond. This option is not allowed with &lt;code&gt;{file, {local, File}}&lt;/code&gt; tracing.</source>
          <target state="translated">定期刷新所有文件跟踪端口客户端（请参阅 &lt;code&gt;dbg:flush_trace_port/1&lt;/code&gt; ）。启用后，每个 &lt;code&gt;MSec&lt;/code&gt; 毫秒释放缓冲区。 &lt;code&gt;{file, {local, File}}&lt;/code&gt; 跟踪不允许使用此选项。</target>
        </trans-unit>
        <trans-unit id="c59c25186e0bd17e60b87557f8d70871e9a6d4de" translate="yes" xml:space="preserve">
          <source>Periodically performs a memory check:</source>
          <target state="translated">定期进行内存检查。</target>
        </trans-unit>
        <trans-unit id="ec9bd9a3791c02544b4da2b4e584f9e54f09f137" translate="yes" xml:space="preserve">
          <source>Peripheral, trace, and debug functionality is at greater risk of being changed in an incompatible way than functionality in the language itself and core libraries used during operation.</source>
          <target state="translated">外围、跟踪和调试功能比语言本身的功能和操作过程中使用的核心库有更大的被改变不兼容的风险。</target>
        </trans-unit>
        <trans-unit id="7d00286c1df2e01196a79a4eb5cbf70766e74af5" translate="yes" xml:space="preserve">
          <source>Peripheral, trace, and debug functionality is at greater risk of removal than functionality in the language itself and core libraries used during operation.</source>
          <target state="translated">外围、跟踪和调试功能比语言本身的功能和操作过程中使用的核心库更容易被删除。</target>
        </trans-unit>
        <trans-unit id="4cdcf1198efb4c7cd76975e49ce37ac8c50b1461" translate="yes" xml:space="preserve">
          <source>Perl 5</source>
          <target state="translated">Perl 5</target>
        </trans-unit>
        <trans-unit id="f883526d06ac7dbd60d3aeb0d4a51ea2f54f7ccb" translate="yes" xml:space="preserve">
          <source>Perl 5.10 introduced a feature where each alternative in a subpattern uses the same numbers for its capturing parentheses. Such a subpattern starts with &lt;code&gt;(?|&lt;/code&gt; and is itself a non-capturing subpattern. For example, consider the following pattern:</source>
          <target state="translated">Perl 5.10引入了一项功能，其中子模式中的每个替代项都使用相同的数字作为其捕获括号。这样的子模式以 &lt;code&gt;(?|&lt;/code&gt; 开头，并且本身是非捕获子模式。例如，考虑以下模式：</target>
        </trans-unit>
        <trans-unit id="b82c2b36892e4b847da5ec02ae07fa7e941783f0" translate="yes" xml:space="preserve">
          <source>Perl 5.10 introduced some &quot;Special Backtracking Control Verbs&quot;, which are still described in the Perl documentation as &quot;experimental and subject to change or removal in a future version of Perl&quot;. It goes on to say: &quot;Their usage in production code should be noted to avoid problems during upgrades.&quot; The same remarks apply to the PCRE features described in this section.</source>
          <target state="translated">Perl 5.10引入了一些 &quot;特殊的回溯控制动词&quot;,在Perl文档中,这些动词仍然被描述为 &quot;实验性的,在Perl的未来版本中可能会改变或删除&quot;。它接着说:&quot;它们在生产代码中的用法应该是 &quot;它们在生产代码中的使用应该被注意,以避免在升级时出现问题。&quot; &quot;这句话同样适用于本节所述的PCRE功能。</target>
        </trans-unit>
        <trans-unit id="e78f523b81d69e2ce697283a6d30d972833c9add" translate="yes" xml:space="preserve">
          <source>Perl and POSIX space are now the same. Perl added VT to its space character set at release 5.18 and PCRE changed at release 8.34.</source>
          <target state="translated">Perl和POSIX空间现在是一样的。Perl 在 5.18 版时在其空格字符集中加入了 VT,而 PCRE 则在 8.34 版时发生了变化。</target>
        </trans-unit>
        <trans-unit id="2de73d4e781601af4c1bbb6f2148001448b0732c" translate="yes" xml:space="preserve">
          <source>Perl documents that the use of \K within assertions is &quot;not well defined&quot;. In PCRE, \K is acted upon when it occurs inside positive assertions, but is ignored in negative assertions. Note that when a pattern such as (?=ab\K) matches, the reported start of the match can be greater than the end of the match.</source>
          <target state="translated">Perl文档中指出,在断言中使用\K是 &quot;没有明确定义的&quot;。在PCRE中,当\K出现在正断言中时,会被采取行动,但在负断言中会被忽略。请注意,当诸如(?=ab\K)这样的模式匹配时,报告的匹配开始时间可以大于匹配结束时间。</target>
        </trans-unit>
        <trans-unit id="7f68ced8ff5ff018b572b360c5b59d5cb10a9ec8" translate="yes" xml:space="preserve">
          <source>Perl has no direct equivalent of &lt;code&gt;notempty&lt;/code&gt; or &lt;code&gt;notempty_atstart&lt;/code&gt;, but it does make a special case of a pattern match of the empty string within its split() function, and when using modifier &lt;code&gt;/g&lt;/code&gt;. The Perl behavior can be emulated after matching a null string by first trying the match again at the same offset with &lt;code&gt;notempty_atstart&lt;/code&gt; and &lt;code&gt;anchored&lt;/code&gt;, and then, if that fails, by advancing the starting offset (see below) and trying an ordinary match again.</source>
          <target state="translated">Perl没有 &lt;code&gt;notempty&lt;/code&gt; 或 &lt;code&gt;notempty_atstart&lt;/code&gt; 的直接等效项，但是在它的split（）函数中以及使用修饰符 &lt;code&gt;/g&lt;/code&gt; 时，它确实对空字符串的模式匹配进行了特殊处理。Perl的行为可以通过首先尝试再配以相同的随偏移距匹配一个空字符串后进行仿真 &lt;code&gt;notempty_atstart&lt;/code&gt; 和 &lt;code&gt;anchored&lt;/code&gt; ，然后，如果失败，通过推进的起始偏移量（见下文），并再次尝试一个普通的比赛。</target>
        </trans-unit>
        <trans-unit id="fe8e00e55de2ba8dd6ec7b50c079a9f787696c02" translate="yes" xml:space="preserve">
          <source>Perl supports the Posix notation for character classes. This uses names enclosed by [: and :] within the enclosing square brackets. PCRE also supports this notation. For example, the following matches &quot;0&quot;, &quot;1&quot;, any alphabetic character, or &quot;%&quot;:</source>
          <target state="translated">Perl 支持字符类的 Posix 符号。它使用[:和:]括在方括号内的名称。PCRE 也支持这种记法。例如,以下内容可以匹配 &quot;0&quot;、&quot;1&quot;、任何字母字符或&quot;%&quot;。</target>
        </trans-unit>
        <trans-unit id="765fb2057a7d0f34aecd0daea653b99ec1e8d5fd" translate="yes" xml:space="preserve">
          <source>Perl uses the syntax (?(&amp;lt;name&amp;gt;)...) or (?('name')...) to test for a used subpattern by name. For compatibility with earlier versions of PCRE, which had this facility before Perl, the syntax (?(name)...) is also recognized.</source>
          <target state="translated">Perl使用语法（？（&amp;lt;name&amp;gt;）...）或（？（'name'）...）来按名称测试使用的子模式。为了与PCRE的早期版本（该版本在Perl之前具有此功能）兼容，还可以识别语法（？（name）...）。</target>
        </trans-unit>
        <trans-unit id="5ae8f7a8fad341ccb38028f9d0cbbf740e954e88" translate="yes" xml:space="preserve">
          <source>Perl-like regular expressions for Erlang.</source>
          <target state="translated">类似Perl的Erlang正则表达式。</target>
        </trans-unit>
        <trans-unit id="863d66a8ea986e9d2766a9fb1020b6a98f7a40ae" translate="yes" xml:space="preserve">
          <source>Permanent Failures</source>
          <target state="translated">永久性故障</target>
        </trans-unit>
        <trans-unit id="5e842f59f65d2bb9be9ae185301ffb374b609927" translate="yes" xml:space="preserve">
          <source>Permanently deletes all replicas of table &lt;code&gt;Tab&lt;/code&gt;.</source>
          <target state="translated">永久删除表 &lt;code&gt;Tab&lt;/code&gt; 的所有副本。</target>
        </trans-unit>
        <trans-unit id="9d10bab6320387e35667d7efc31ca008974ef6de" translate="yes" xml:space="preserve">
          <source>Permits access to the specified set of nodes.</source>
          <target state="translated">允许访问指定的节点集。</target>
        </trans-unit>
        <trans-unit id="cbcc14cf66794a811615925669093ae6f0483b21" translate="yes" xml:space="preserve">
          <source>Persistence. Tables can be coherently kept on disc and in the main memory.</source>
          <target state="translated">持久性。表格可以连贯地保存在光盘和主存储器中。</target>
        </trans-unit>
        <trans-unit id="f92e7deab74e37ba55baaec014f2b2842033b9fb" translate="yes" xml:space="preserve">
          <source>Persistent connections are not supported when setting the &lt;code&gt;socket_opts&lt;/code&gt; option. When &lt;code&gt;socket_opts&lt;/code&gt; is not set the current implementation assumes the requests to the same host, port combination will use the same socket options.</source>
          <target state="translated">设置 &lt;code&gt;socket_opts&lt;/code&gt; 选项时，不支持持久连接。当未设置 &lt;code&gt;socket_opts&lt;/code&gt; 时，当前实现假定对同一主机的请求，端口组合将使用相同的套接字选项。</target>
        </trans-unit>
        <trans-unit id="2bee04fabd8ac0fac36ed62f88c0b1f7fc8cfa48" translate="yes" xml:space="preserve">
          <source>Peter's client receives the message in the &lt;code&gt;await_result&lt;/code&gt; function.</source>
          <target state="translated">Peter的客户端在 &lt;code&gt;await_result&lt;/code&gt; 函数中接收到该消息。</target>
        </trans-unit>
        <trans-unit id="a1fbe41a1fd16bc593d390402b8a1d609687aad4" translate="yes" xml:space="preserve">
          <source>Phags_Pa</source>
          <target state="translated">Phags_Pa</target>
        </trans-unit>
        <trans-unit id="6908ab9bda0e225ecfd064a3d987f42cfc69e74c" translate="yes" xml:space="preserve">
          <source>Phoenician</source>
          <target state="translated">Phoenician</target>
        </trans-unit>
        <trans-unit id="816184994301f53e2f7c60336684c53229d3fc02" translate="yes" xml:space="preserve">
          <source>Pick just a few suites</source>
          <target state="translated">只选几套</target>
        </trans-unit>
        <trans-unit id="f298de9cea75ea5230dda5d9d28b4989aaf746f4" translate="yes" xml:space="preserve">
          <source>Pid</source>
          <target state="translated">Pid</target>
        </trans-unit>
        <trans-unit id="39e4ade84d7c390c8d53a5ae6be8e034ac54f0ea" translate="yes" xml:space="preserve">
          <source>Pid is the pid returned from &lt;code&gt;inets:start/[2,3]&lt;/code&gt;. Can also be retrieved form &lt;code&gt;inets:services/0&lt;/code&gt; and &lt;code&gt;inets:services_info/0&lt;/code&gt;, see &lt;code&gt;&lt;a href=&quot;inets&quot;&gt;inets(3)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Pid是从 &lt;code&gt;inets:start/[2,3]&lt;/code&gt; 返回的pid 。也可以从 &lt;code&gt;inets:services/0&lt;/code&gt; 和 &lt;code&gt;inets:services_info/0&lt;/code&gt; 检索，请参见 &lt;code&gt;&lt;a href=&quot;inets&quot;&gt;inets(3)&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e5a12aecdd3b6ac3a81192c0d891abe00ae128dc" translate="yes" xml:space="preserve">
          <source>Pipelining is only used if the pipeline time-out is set, otherwise persistent connections without pipelining are used. That is, the client always waits for the previous response before sending the next request.</source>
          <target state="translated">只有在设置了管道超时的情况下才会使用管道连接,否则会使用没有管道连接的持久连接。也就是说,客户端在发送下一个请求之前,总是要等待上一个响应。</target>
        </trans-unit>
        <trans-unit id="299afcf56421dc47a2f48e2448670fa6fa1de131" translate="yes" xml:space="preserve">
          <source>Plain arguments are not interpreted in any way. They are also stored by the &lt;code&gt;init&lt;/code&gt; process and can be retrieved by calling &lt;code&gt;init:get_plain_arguments/0&lt;/code&gt;. Plain arguments can occur before the first flag, or after a &lt;code&gt;--&lt;/code&gt; flag. Also, the &lt;code&gt;-extra&lt;/code&gt; flag causes everything that follows to become plain arguments.</source>
          <target state="translated">普通参数不会以任何方式解释。它们也由 &lt;code&gt;init&lt;/code&gt; 进程存储，可以通过调用 &lt;code&gt;init:get_plain_arguments/0&lt;/code&gt; 进行检索。普通参数可以出现在第一个标志之前或 &lt;code&gt;--&lt;/code&gt; 标志之后。同样， &lt;code&gt;-extra&lt;/code&gt; 标志使后面的所有内容变为普通参数。</target>
        </trans-unit>
        <trans-unit id="021e228d28e31a2dac01ca348b598716a2be960a" translate="yes" xml:space="preserve">
          <source>Plain system messages. These are received as &lt;code&gt;{system, From, Msg}&lt;/code&gt;. The content and meaning of this message are not interpreted by the receiving process module. When a system message is received, function &lt;code&gt;&lt;a href=&quot;#handle_system_msg-6&quot;&gt;handle_system_msg/6&lt;/a&gt;&lt;/code&gt; is called to handle the request.</source>
          <target state="translated">纯系统消息。这些作为 &lt;code&gt;{system, From, Msg}&lt;/code&gt; 。接收过程模块不解释此消息的内容和含义。收到系统消息后，将调用 &lt;code&gt;&lt;a href=&quot;#handle_system_msg-6&quot;&gt;handle_system_msg/6&lt;/a&gt;&lt;/code&gt; 函数来处理请求。</target>
        </trans-unit>
        <trans-unit id="67b04c48713ae02b17574be1c7c9e6c47d938551" translate="yes" xml:space="preserve">
          <source>Please note that by historical reasons both the &lt;code&gt;HostAddress&lt;/code&gt; argument and the &lt;code&gt;gen_tcp connect_option(){ip,Address}&lt;/code&gt; set the listening address. This is a source of possible inconsistent settings.</source>
          <target state="translated">请注意，由于历史原因， &lt;code&gt;HostAddress&lt;/code&gt; 参数和 &lt;code&gt;gen_tcp connect_option(){ip,Address}&lt;/code&gt; 都设置了侦听地址。这是可能导致设置不一致的原因。</target>
        </trans-unit>
        <trans-unit id="32abe057fa82c9bf0495c06f768e39e26b9f11f2" translate="yes" xml:space="preserve">
          <source>Please note that design is something, that not necessarily will, but might change in future releases. While the semantics of the API will not change as it is independent of the implementation.</source>
          <target state="translated">请注意,设计是什么,不一定会,但可能会在未来的版本中改变。而API的语义不会改变,因为它是独立于实现的。</target>
        </trans-unit>
        <trans-unit id="597358d6204ed2d5f3fed145f855762b0d748a69" translate="yes" xml:space="preserve">
          <source>Please see the GNU Emacs Manual and the etags man page for more info.</source>
          <target state="translated">请参阅GNU Emacs手册和etags手册页面了解更多信息。</target>
        </trans-unit>
        <trans-unit id="0c436ed1231dc5771eef264b43827bd13f0e6d7b" translate="yes" xml:space="preserve">
          <source>Please submit any patches for cross compiling in a way consistent with this system. All input is welcome as we have a very limited set of cross compiling environments to test with. If a new configuration variable is needed, add it to &lt;code&gt;$ERL_TOP/xcomp/erl-xcomp.conf.template&lt;/code&gt;, and use it in &lt;code&gt;configure.in&lt;/code&gt;. Other files that might need to be updated are:</source>
          <target state="translated">请以与该系统一致的方式提交任何补丁以进行交叉编译。欢迎所有输入，因为我们有一组非常有限的交叉编译环境可供测试。如果需要新的配置变量，请将其添加到 &lt;code&gt;$ERL_TOP/xcomp/erl-xcomp.conf.template&lt;/code&gt; ，并在 &lt;code&gt;configure.in&lt;/code&gt; 中使用它。其他可能需要更新的文件是：</target>
        </trans-unit>
        <trans-unit id="4140a0c59f9aa45b8631c3e0f8a874473a22c621" translate="yes" xml:space="preserve">
          <source>Please take a look at the reference of &lt;code&gt;sanity_check()&lt;/code&gt; for more information.</source>
          <target state="translated">请查看 &lt;code&gt;sanity_check()&lt;/code&gt; 的参考以获取更多信息。</target>
        </trans-unit>
        <trans-unit id="de27f66a37035340860ce9e599a1a2f161cf94be" translate="yes" xml:space="preserve">
          <source>Please, observe that these performance figures are related to our implementation in Erlang/OTP. Measurements of other implementations using other tools and techniques may of course result in other figures.</source>
          <target state="translated">请注意,这些性能数据与我们在Erlang/OTP中的实现有关。当然,使用其他工具和技术对其他实现的测量可能会产生其他数据。</target>
        </trans-unit>
        <trans-unit id="d9963c2e5095bb9cc0241cd748d7939bdbfdd2d6" translate="yes" xml:space="preserve">
          <source>Pointer to next structure in a linked list of all port structures. This list is used when accepting connections and when the driver is unloaded.</source>
          <target state="translated">指向所有端口结构链接列表中下一个结构的指针。这个列表在接受连接和卸载驱动程序时使用。</target>
        </trans-unit>
        <trans-unit id="f19f028244073bea25c8d31a9519278211c9e77e" translate="yes" xml:space="preserve">
          <source>Pointer to the array of reference numbers in ref &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">指向ref &lt;code&gt;t&lt;/code&gt; 中参考数字数组的指针。</target>
        </trans-unit>
        <trans-unit id="1604bd8010fd538d08c7b5045fd397612cd1e659" translate="yes" xml:space="preserve">
          <source>Points out a file containing a decryption key for &lt;code&gt;&lt;a href=&quot;config_file_chapter#encrypted_config_files&quot;&gt;encrypted configuration files&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">指出一个文件，其中包含用于 &lt;code&gt;&lt;a href=&quot;config_file_chapter#encrypted_config_files&quot;&gt;encrypted configuration files&lt;/a&gt;&lt;/code&gt; 的解密密钥。</target>
        </trans-unit>
        <trans-unit id="7afa60ee7ef4769f7cc3c7f050d9db637653fed0" translate="yes" xml:space="preserve">
          <source>Points out a user HTML style sheet (described later).</source>
          <target state="translated">指出用户的HTML样式表(后面会介绍)。</target>
        </trans-unit>
        <trans-unit id="5a35981ceab91897e91ab04e8e2d42162dbd7728" translate="yes" xml:space="preserve">
          <source>Policy for the selection of the temporary port that is used by the server/client during the file transfer. Default is &lt;code&gt;random&lt;/code&gt;, which is the standardized policy. With this policy a randomized free port is used. A single port or a range of ports can be useful if the protocol passes through a firewall.</source>
          <target state="translated">服务器/客户端在文件传输期间使用的临时端口的选择策略。默认值为 &lt;code&gt;random&lt;/code&gt; ，这是标准化策略。使用此策略时，将使用随机的空闲端口。如果协议通过防火墙，则单个端口或一系列端口可能很有用。</target>
        </trans-unit>
        <trans-unit id="465d89dc629419a077edf90091affa9697b2e338" translate="yes" xml:space="preserve">
          <source>Polling interval (sleep time between polls) = 1 second</source>
          <target state="translated">轮询间隔(轮询之间的睡眠时间)=1秒</target>
        </trans-unit>
        <trans-unit id="f8b9e6faf5ca12ec30a6ab11e637a8f904a10ff8" translate="yes" xml:space="preserve">
          <source>Polling limit (max number of times to poll to get a remaining string terminated) = 0</source>
          <target state="translated">轮询限制(轮询剩余字符串终止的最大次数)=0。</target>
        </trans-unit>
        <trans-unit id="fe035157cda20b361ce30613e29b5d6f1a46b5fc" translate="yes" xml:space="preserve">
          <source>Port</source>
          <target state="translated">Port</target>
        </trans-unit>
        <trans-unit id="799fa570fa6f42daa22b2994cc3725a643fc7be8" translate="yes" xml:space="preserve">
          <source>Port :: &lt;code&gt;inet:port_number()&lt;/code&gt;) -&amp;gt;</source>
          <target state="translated">端口:: &lt;code&gt;inet:port_number()&lt;/code&gt; ）-&amp;gt;</target>
        </trans-unit>
        <trans-unit id="ea62c46246b1ea7a1efd0181063c1442570f3e77" translate="yes" xml:space="preserve">
          <source>Port :: &lt;code&gt;inet:port_number()&lt;/code&gt;,</source>
          <target state="translated">端口:: &lt;code&gt;inet:port_number()&lt;/code&gt; ，</target>
        </trans-unit>
        <trans-unit id="3db9bac190e277a6139a6817df535ad965dd6629" translate="yes" xml:space="preserve">
          <source>Port = &lt;code&gt;integer() &amp;gt; 0&lt;/code&gt;</source>
          <target state="translated">端口= &lt;code&gt;integer() &amp;gt; 0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="59426fd42c4bd1ecdac5914a8115399d46411358" translate="yes" xml:space="preserve">
          <source>Port handle of the executing port.</source>
          <target state="translated">执行端口的端口号。</target>
        </trans-unit>
        <trans-unit id="bda81d4c1d517232b2d8149167cc3dc467ef84ea" translate="yes" xml:space="preserve">
          <source>Port queries, that is, on which port the node with a specified name listens</source>
          <target state="translated">端口查询,即指定名称的节点在哪个端口上监听</target>
        </trans-unit>
        <trans-unit id="909ce0bd80b59fe5319fb9028cc0d212219399d1" translate="yes" xml:space="preserve">
          <source>Portable hash function that gives the same hash for the same Erlang term regardless of machine architecture and ERTS version (the BIF was introduced in ERTS 4.9.1.1). The function returns a hash value for &lt;code&gt;Term&lt;/code&gt; within the range &lt;code&gt;1..Range&lt;/code&gt;. The maximum value for &lt;code&gt;Range&lt;/code&gt; is 2^32.</source>
          <target state="translated">可移植的哈希函数，可为同一Erlang术语提供相同的哈希，而与计算机体系结构和ERTS版本无关（BIF在ERTS 4.9.1.1中引入）。该函数返回 &lt;code&gt;Term&lt;/code&gt; 的哈希值，范围为 &lt;code&gt;1..Range&lt;/code&gt; 。为最大值 &lt;code&gt;Range&lt;/code&gt; 是2 ^ 32。</target>
        </trans-unit>
        <trans-unit id="054b8319dfcb3d23d08071f8f07f5156fb5d7c54" translate="yes" xml:space="preserve">
          <source>Portable hash function that gives the same hash for the same Erlang term regardless of machine architecture and ERTS version (the BIF was introduced in ERTS 5.2). The function returns a hash value for &lt;code&gt;Term&lt;/code&gt; within the range &lt;code&gt;0..Range-1&lt;/code&gt;. The maximum value for &lt;code&gt;Range&lt;/code&gt; is 2^32. When without argument &lt;code&gt;Range&lt;/code&gt;, a value in the range 0..2^27-1 is returned.</source>
          <target state="translated">可移植的哈希函数，可为同一Erlang术语提供相同的哈希，而与计算机体系结构和ERTS版本无关（BIF在ERTS 5.2中引入）。该函数返回 &lt;code&gt;Term&lt;/code&gt; 的哈希值，范围为 &lt;code&gt;0..Range-1&lt;/code&gt; 。 &lt;code&gt;Range&lt;/code&gt; 的最大值是2 ^ 32。如果没有参数 &lt;code&gt;Range&lt;/code&gt; ，则返回0..2 ^ 27-1范围内的值。</target>
        </trans-unit>
        <trans-unit id="1154c86e0447265172bd06d0ffc96a0fbd31265c" translate="yes" xml:space="preserve">
          <source>Portable hash function that gives the same hash for the same Erlang term regardless of machine architecture and ERTS version.</source>
          <target state="translated">可移植的哈希函数,可以为同一个Erlang术语提供相同的哈希值,无论机器架构和ERTS版本如何。</target>
        </trans-unit>
        <trans-unit id="c97a4b3879c8d95d45f28ff453955a6b9bfa5cfb" translate="yes" xml:space="preserve">
          <source>Ports are always byte-oriented, so before sending data that you are not sure is bytewise-encoded to a port, ensure to encode it in a proper Unicode encoding. Sometimes this means that only part of the data must be encoded as, for example, UTF-8. Some parts can be binary data (like a length indicator) or something else that must not undergo character encoding, so no automatic translation is present.</source>
          <target state="translated">端口总是以字节为导向的,因此,在发送您不确定是否为字节编码的数据到端口之前,请确保用适当的 Unicode 编码。有时,这意味着只有部分数据必须被编码,例如,UTF-8。有些部分可能是二进制数据 (如长度指示器)或其他一些不需要进行字符编码的数据,因此不存在自动翻译。</target>
        </trans-unit>
        <trans-unit id="e4193cfa2c1ff713d813bfaa0d36b429c920defb" translate="yes" xml:space="preserve">
          <source>Ports are configured by the user: diameter places no restrictions.</source>
          <target state="translated">端口由用户配置:直径不设限制。</target>
        </trans-unit>
        <trans-unit id="cb46560c81a3989fb4e829762625b62e66c95636" translate="yes" xml:space="preserve">
          <source>Ports provide the basic mechanism for communication with the external world, from Erlang's point of view. The ports provide a byte-oriented interface to an external program. When a port is created, Erlang can communicate with it by sending and receiving lists of bytes (not Erlang terms). This means that the programmer might have to invent a suitable encoding and decoding scheme.</source>
          <target state="translated">从Erlang的角度来看,端口提供了与外部世界通信的基本机制。端口为外部程序提供了一个面向字节的接口。当一个端口被创建时,Erlang可以通过发送和接收字节列表(不是Erlang术语)与之通信。这意味着程序员可能要发明一个合适的编码和解码方案。</target>
        </trans-unit>
        <trans-unit id="e5dca5bbd887da11b920c85a6859b7dc5d6446ce" translate="yes" xml:space="preserve">
          <source>Posix character class (only if followed by Posix syntax)</source>
          <target state="translated">Posix字符类(仅当后面有Posix语法时)</target>
        </trans-unit>
        <trans-unit id="cf44c2ab63d2bfdbd90509d6ab05ee59689772ed" translate="yes" xml:space="preserve">
          <source>Possessive quantifiers are always greedy; the setting of option &lt;code&gt;ungreedy&lt;/code&gt; is ignored. They are a convenient notation for the simpler forms of an atomic group. However, there is no difference in the meaning of a possessive quantifier and the equivalent atomic group, but there can be a performance difference; possessive quantifiers are probably slightly faster.</source>
          <target state="translated">所有格的量词总是贪婪的。选项不 &lt;code&gt;ungreedy&lt;/code&gt; 的设置将被忽略。对于原子团的简单形式，它们是一种方便的表示法。但是，所有格量词和等效原子团的含义没有差异，但是性能可能有所不同。所有格量词可能会稍快一些。</target>
        </trans-unit>
        <trans-unit id="9b6f1087ff5e67d140eb09f11b3dad81741a1747" translate="yes" xml:space="preserve">
          <source>Possessive quantifiers can be used with lookbehind assertions to specify efficient matching of fixed-length strings at the end of subject strings. Consider the following simple pattern when applied to a long string that does not match:</source>
          <target state="translated">占有式量化符可以与lookbehind断言一起使用,以指定主题字符串末尾的固定长度字符串的高效匹配。当应用于不匹配的长字符串时,可以考虑以下简单模式。</target>
        </trans-unit>
        <trans-unit id="1dfe8268667e0c66e3daa6ac9b57143d77624130" translate="yes" xml:space="preserve">
          <source>Possible Erlang 'EXIT' messages is to be handled by this function and all channels are to handle the following message.</source>
          <target state="translated">可能的Erlang'EXIT'消息将由这个函数处理,所有的通道都要处理以下消息。</target>
        </trans-unit>
        <trans-unit id="149bf3ac15f9f4fc58f0fe306b8c56c8c16051d0" translate="yes" xml:space="preserve">
          <source>Possible SCTP events:</source>
          <target state="translated">可能的SCTP事件:</target>
        </trans-unit>
        <trans-unit id="b91d93860e0e7dc1f57e9b3c4cd2dfcbc0c4795b" translate="yes" xml:space="preserve">
          <source>Possible actions: ignore as in drop the event (maybe log it) or deal with the event in some other state as in postpone it.</source>
          <target state="translated">可能的操作:忽略,如放弃该事件(也许记录下来)或以其他状态处理该事件,如推迟它。</target>
        </trans-unit>
        <trans-unit id="986d4a1466fd9cd5e38ecaec22d116bf1c515c81" translate="yes" xml:space="preserve">
          <source>Possible configuration variables include:</source>
          <target state="translated">可能的配置变量包括:</target>
        </trans-unit>
        <trans-unit id="34001dfcb817c4c0ae5c87f2102d6fe4615ff7e1" translate="yes" xml:space="preserve">
          <source>Possible options and values vary depending on the I/O device. For a list of supported options and their current values on a specific I/O device, use function &lt;code&gt;&lt;a href=&quot;#getopts-1&quot;&gt;getopts/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">可能的选项和值取决于I / O设备。有关特定I / O设备上支持的选项及其当前值的列表，请使用函数 &lt;code&gt;&lt;a href=&quot;#getopts-1&quot;&gt;getopts/1&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="878f3530033a9b08ada15887a53634015460882c" translate="yes" xml:space="preserve">
          <source>Possible options are :</source>
          <target state="translated">可能的选择是:</target>
        </trans-unit>
        <trans-unit id="60e11e810786d4e1c3e27a2df214cc536e9941c7" translate="yes" xml:space="preserve">
          <source>Possible options are:</source>
          <target state="translated">可能的选择有:</target>
        </trans-unit>
        <trans-unit id="2005d62e46c5a3d6f217477137da0006cd82c5a1" translate="yes" xml:space="preserve">
          <source>Possible reasons for a bad certificate:</source>
          <target state="translated">证书不好的可能原因。</target>
        </trans-unit>
        <trans-unit id="1473fc3a07d611c813c39a776d207edb467c5e8f" translate="yes" xml:space="preserve">
          <source>Possibly the most important feature of an editor designed for programmers is the ability to indent a line of code in accordance with the structure of the programming language. The Erlang mode does, of course, provide this feature. The layout used is based on the common use of the language. The mode also provides things as syntax highlighting, electric commands, module name verification, comment support including paragraph filling, skeletons, tags support etc.</source>
          <target state="translated">为程序员设计的编辑器最重要的功能可能是能够根据编程语言的结构缩进一行代码。当然,Erlang模式确实提供了这个功能。所使用的布局是基于语言的普遍使用。该模式还提供了诸如语法高亮、电命令、模块名验证、注释支持,包括段落填充、骨架、标签支持等。</target>
        </trans-unit>
        <trans-unit id="c84b501894f8e4082c349aaca37c8c128c099d19" translate="yes" xml:space="preserve">
          <source>Postponing is ordered by the state transition &lt;code&gt;&lt;a href=&quot;#State%20Transition%20Actions&quot;&gt;State Transition Action&lt;/a&gt;&lt;/code&gt;&lt;code&gt;postpone&lt;/code&gt;.</source>
          <target state="translated">推迟是由状态过渡命令 &lt;code&gt;&lt;a href=&quot;#State%20Transition%20Actions&quot;&gt;State Transition Action&lt;/a&gt;&lt;/code&gt; &lt;code&gt;postpone&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3e2fa43d974da83b84f8b7a0198aa7c4a5f02ff1" translate="yes" xml:space="preserve">
          <source>PowerPC: All 32-bit 6xx/7xx(G3)/74xx(G4) processors should work. 32-bit mode on 970 (G5) and POWER5 processors should work.</source>
          <target state="translated">PowerPC。所有32位的6xx/7xx(G3)/74xx(G4)处理器都应该可以使用。970(G5)和POWER5处理器的32位模式应该可以使用。</target>
        </trans-unit>
        <trans-unit id="cfd617494e5919519b64ca7cf73d988ce7314f09" translate="yes" xml:space="preserve">
          <source>PowerPC: Linux, Mac OSX</source>
          <target state="translated">PowerPC:Linux,Mac OSX</target>
        </trans-unit>
        <trans-unit id="8756ea35ca147cf4eb388864ebf89dce85216cce" translate="yes" xml:space="preserve">
          <source>Pre-built Source Release</source>
          <target state="translated">预建源代码发布</target>
        </trans-unit>
        <trans-unit id="e9533f120fc37f02251d4dcf3459051b82c4e403" translate="yes" xml:space="preserve">
          <source>Pre-defined module attributes is to be placed before any function declaration.</source>
          <target state="translated">预定义模块属性要放在任何函数声明之前。</target>
        </trans-unit>
        <trans-unit id="926f83f2a7c83bde06ce094d99185e3842a8a8f9" translate="yes" xml:space="preserve">
          <source>Pre-formatted &lt;code&gt;&lt;a href=&quot;http://www.erlang.org/download/otp_doc_html_21.0.tar.gz&quot;&gt;html documentation&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;http://www.erlang.org/download/otp_doc_man_21.0.tar.gz&quot;&gt;man pages&lt;/a&gt;&lt;/code&gt; can be downloaded from</source>
          <target state="translated">可以从以下位置下载预格式化的 &lt;code&gt;&lt;a href=&quot;http://www.erlang.org/download/otp_doc_html_21.0.tar.gz&quot;&gt;html documentation&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;http://www.erlang.org/download/otp_doc_man_21.0.tar.gz&quot;&gt;man pages&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ff56d95f5ae87da89cf746ab41ce4e6a479c1f0d" translate="yes" xml:space="preserve">
          <source>Predictive Loop Avoidance</source>
          <target state="translated">预测性避环</target>
        </trans-unit>
        <trans-unit id="1fa566d2725a0b203f5437a8f646bcbb04681b10" translate="yes" xml:space="preserve">
          <source>Preferably, you would check the machine type, the operating system, and the Kernel version before executing anything similar to this code.</source>
          <target state="translated">在执行类似于这段代码的代码之前,你最好先检查一下机器类型、操作系统和内核版本。</target>
        </trans-unit>
        <trans-unit id="84c0062ba00a989bbfa87f065cc839159da1421f" translate="yes" xml:space="preserve">
          <source>Preliminary version 3, based on TD-33</source>
          <target state="translated">初步版本3,基于TD-33</target>
        </trans-unit>
        <trans-unit id="da668ceef4aad0b079d2fa1313967654991563d7" translate="yes" xml:space="preserve">
          <source>Preliminary version 3, based on TD-33, but text encoding updated with the final solution for priority in &lt;code&gt;contextProperty&lt;/code&gt; (which is backward compatible with v2).</source>
          <target state="translated">初步版本3，基于TD-33，但文本编码已使用 &lt;code&gt;contextProperty&lt;/code&gt; （与v2向后兼容）的最终优先级解决方案进行了更新。</target>
        </trans-unit>
        <trans-unit id="8ce9d534fd06e5e0f995497a19bceaa290fe794b" translate="yes" xml:space="preserve">
          <source>Preliminary version 3, based on the final version of the v3-standard, but &lt;strong&gt;excluding&lt;/strong&gt; segments!</source>
          <target state="translated">初步版本3，基于v3标准的最终版本，但&lt;strong&gt;不包括&lt;/strong&gt;细分！</target>
        </trans-unit>
        <trans-unit id="635a0b9ab635f6550fdf7e8b53c541a528049aa3" translate="yes" xml:space="preserve">
          <source>Preloaded modules are always reported as &lt;code&gt;loaded&lt;/code&gt;, without inspecting the contents on disk. Cover compiled modules will always be reported as &lt;code&gt;modified&lt;/code&gt; if an object file exists, or as &lt;code&gt;removed&lt;/code&gt; otherwise. Modules whose load path is an empty string (which is the convention for auto-generated code) will only be reported as &lt;code&gt;loaded&lt;/code&gt; or &lt;code&gt;not_loaded&lt;/code&gt;.</source>
          <target state="translated">预 &lt;code&gt;loaded&lt;/code&gt; 模块始终报告为已加载，而不检查磁盘上的内容。如果存在目标文件，则涵盖编译的模块将始终报告为已 &lt;code&gt;modified&lt;/code&gt; ，否则报告为 &lt;code&gt;removed&lt;/code&gt; 。加载路径为空字符串（这是自动生成的代码的约定）的模块将仅报告为 &lt;code&gt;loaded&lt;/code&gt; 或 &lt;code&gt;not_loaded&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0ccb4a6b47e69ccdef1feeb0cb6c0bbd699daa33" translate="yes" xml:space="preserve">
          <source>Prepares to load the modules in the list &lt;code&gt;Modules&lt;/code&gt;. Finish the loading by calling &lt;code&gt;&lt;a href=&quot;#finish_loading-1&quot;&gt;finish_loading(Prepared)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">准备加载列表中的模块 &lt;code&gt;Modules&lt;/code&gt; 。通过调用 &lt;code&gt;&lt;a href=&quot;#finish_loading-1&quot;&gt;finish_loading(Prepared)&lt;/a&gt;&lt;/code&gt; 完成加载。</target>
        </trans-unit>
        <trans-unit id="9af0e9a7676ad5c34d0982329c5f5caab38b02df" translate="yes" xml:space="preserve">
          <source>Prepares to open a file on the client side.</source>
          <target state="translated">准备在客户端打开一个文件。</target>
        </trans-unit>
        <trans-unit id="1af579a4819f628301944085e091406a4beaf50a" translate="yes" xml:space="preserve">
          <source>Prepend the specified directory to the code path. Use to point at beam files compiled from inherited dictionaries, &lt;code&gt;&lt;code&gt;&lt;a href=&quot;diameter_dict#inherits&quot;&gt;@inherits&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; in a dictionary file creating a beam dependency, not an erl/hrl dependency.</source>
          <target state="translated">在指定目录之前添加代码路径。用于指向从继承的字典编译的梁文件，在字典文件中 &lt;code&gt;&lt;code&gt;&lt;a href=&quot;diameter_dict#inherits&quot;&gt;@inherits&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; 会创建梁依赖性，而不是erl / hrl依赖性。</target>
        </trans-unit>
        <trans-unit id="a20fa72c3402e6bde9460d87001f7ae629c23c73" translate="yes" xml:space="preserve">
          <source>Preprocesses and parses an Erlang source file. Notice that tuple &lt;code&gt;{eof, Line}&lt;/code&gt; returned at the end of the file is included as a &quot;form&quot;.</source>
          <target state="translated">预处理并解析Erlang源文件。请注意，文件末尾返回的元组 &lt;code&gt;{eof, Line}&lt;/code&gt; 被作为&amp;ldquo;表单&amp;rdquo;包括在内。</target>
        </trans-unit>
        <trans-unit id="2691f43bd7041517e5cd137cba084147892ae0d0" translate="yes" xml:space="preserve">
          <source>Presented IDs</source>
          <target state="translated">赠送的身份证</target>
        </trans-unit>
        <trans-unit id="0c6c64c4381af2076f81188f61e3735af23c9c67" translate="yes" xml:space="preserve">
          <source>Presented Identifier</source>
          <target state="translated">Presented Identifier</target>
        </trans-unit>
        <trans-unit id="1d8162ec721e521c8cbbcf0236344390db358601" translate="yes" xml:space="preserve">
          <source>Presents the error returned by an SSL function as a printable string.</source>
          <target state="translated">将SSL函数返回的错误以可打印的字符串形式显示。</target>
        </trans-unit>
        <trans-unit id="04f8808cdf1dcc1ebc30cfb13086e1464c6e225f" translate="yes" xml:space="preserve">
          <source>Press Control-C to shut down the Erlang system and the Erlang shell.</source>
          <target state="translated">按 Control-C 键关闭 Erlang 系统和 Erlang shell。</target>
        </trans-unit>
        <trans-unit id="f85da72e94aea2381a2f0b0888b6cb0b938cff09" translate="yes" xml:space="preserve">
          <source>Pretty printing of abstract Erlang syntax trees.</source>
          <target state="translated">漂亮的打印抽象的Erlang语法树。</target>
        </trans-unit>
        <trans-unit id="dc508f11298d514f277642f83dadf29968dd9d46" translate="yes" xml:space="preserve">
          <source>Pretty prints a &lt;code&gt;Form&lt;/code&gt;, which is an abstract form of a type that is returned by &lt;code&gt;&lt;a href=&quot;erl_parse#parse_form-1&quot;&gt;erl_parse:parse_form/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Pretty打印一个 &lt;code&gt;Form&lt;/code&gt; ，它是 &lt;code&gt;&lt;a href=&quot;erl_parse#parse_form-1&quot;&gt;erl_parse:parse_form/1&lt;/a&gt;&lt;/code&gt; 返回的类型的抽象形式。</target>
        </trans-unit>
        <trans-unit id="d63df205ad942f1c830ebd4e4bc701ca8b9e816f" translate="yes" xml:space="preserve">
          <source>Pretty-print a syntax tree or template to the standard output. This is a utility function for development and debugging.</source>
          <target state="translated">Pretty-print一个语法树或模板到标准输出。这是一个用于开发和调试的实用函数。</target>
        </trans-unit>
        <trans-unit id="ac772a8e8177c0183620391b61e4e90f72e8fe2f" translate="yes" xml:space="preserve">
          <source>Prettyprint-formats an abstract Erlang syntax tree as text. For example, if you have a &lt;code&gt;.beam&lt;/code&gt; file that has been compiled with &lt;code&gt;debug_info&lt;/code&gt;, the following should print the source code for the module (as it looks in the debug info representation):</source>
          <target state="translated">Prettyprint将抽象的Erlang语法树格式化为文本。举例来说，如果你有一个 &lt;code&gt;.beam&lt;/code&gt; 已编译的文件 &lt;code&gt;debug_info&lt;/code&gt; ，下面应打印的源代码的模块（因为它看起来在调试信息表示）：</target>
        </trans-unit>
        <trans-unit id="bf3e85268675b1375b86ffb5b4b5e86258ba6284" translate="yes" xml:space="preserve">
          <source>Prevents loading information about source filenames and line numbers. This saves some memory, but exceptions do not contain information about the filenames and line numbers.</source>
          <target state="translated">防止加载有关源文件名和行号的信息。这样可以节省一些内存,但异常不包含文件名和行号的信息。</target>
        </trans-unit>
        <trans-unit id="d09eeaa3bc8ced4fe796ecbcf1dd05c62de1e4cd" translate="yes" xml:space="preserve">
          <source>Prevents the Server Name Indication extension from being sent and disables the hostname verification check &lt;code&gt;public_key:pkix_verify_hostname/2&lt;/code&gt;</source>
          <target state="translated">阻止发送服务器名称指示扩展名并禁用主机名验证检查 &lt;code&gt;public_key:pkix_verify_hostname/2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="13c464652aa4866a035cb6021e96dd21a453187f" translate="yes" xml:space="preserve">
          <source>Previous implementation used to allow all characters as long as they were integer values greater than or equal to zero. This sometimes lead to unwanted results since null characters (integer value zero) often are interpreted as string termination. The current implementation rejects these.</source>
          <target state="translated">以前的实现允许所有字符,只要它们是大于或等于零的整数值。这有时会导致不必要的结果,因为空字符(整数值为零)经常被解释为字符串终止。目前的实现拒绝这些字符。</target>
        </trans-unit>
        <trans-unit id="7569c52a61d993390fecf54a831ac17622da8694" translate="yes" xml:space="preserve">
          <source>Previously &lt;code&gt;erlang:now/0&lt;/code&gt; was the only option for doing many things. This section deals with some things that &lt;code&gt;erlang:now/0&lt;/code&gt; can be used for, and how you use the new API.</source>
          <target state="translated">以前 &lt;code&gt;erlang:now/0&lt;/code&gt; 是做很多事情的唯一选择。本节介绍了 &lt;code&gt;erlang:now/0&lt;/code&gt; 可以用于哪些方面，以及如何使用新的API。</target>
        </trans-unit>
        <trans-unit id="e0ceee1e4ba51d6772fb4907373f07ae18936fe7" translate="yes" xml:space="preserve">
          <source>Previously, in the runtime system without SMP support, specific driver callbacks were always called from the same thread. This is &lt;strong&gt;not&lt;/strong&gt; the case in the runtime system with SMP support. Regardless of locking scheme used, calls to driver callbacks can be made from different threads. For example, two consecutive calls to exactly the same callback for exactly the same port can be made from two different threads. This is for &lt;strong&gt;most&lt;/strong&gt; drivers not a problem, but it can be. Drivers that depend on all callbacks that are called in the same thread, &lt;strong&gt;must&lt;/strong&gt; be rewritten before they are used in the runtime system with SMP support.</source>
          <target state="translated">以前，在没有SMP支持的运行时系统中，总是从同一线程调用特定的驱动程序回调。这是&lt;strong&gt;不是&lt;/strong&gt;在支持SMP的运行时系统的情况。无论使用哪种锁定方案，都可以从不同的线程进行对驱动程序回调的调用。例如，可以从两个不同的线程对完全相同的端口进行两次连续调用，以完全相同的回调。对于&lt;strong&gt;大多数&lt;/strong&gt;驱动程序来说，这不是问题，但是可以。依赖于同一线程中调用的所有回调的驱动程序，&lt;strong&gt;必须&lt;/strong&gt;在具有SMP支持的运行时系统中使用它们之前进行重写。</target>
        </trans-unit>
        <trans-unit id="41e95726528ea52023e106b0ac0c22d8fda4f9a9" translate="yes" xml:space="preserve">
          <source>Primary configuration data for Logger. The following default values apply:</source>
          <target state="translated">记录仪的主要配置数据。适用以下默认值:</target>
        </trans-unit>
        <trans-unit id="d4247f20e948bccce17d13768ac3cbeade11f898" translate="yes" xml:space="preserve">
          <source>Primary filters are added with &lt;code&gt;&lt;a href=&quot;logger#add_primary_filter-2&quot;&gt;logger:add_primary_filter/2&lt;/a&gt;&lt;/code&gt; and removed with &lt;code&gt;&lt;a href=&quot;logger#remove_primary_filter-1&quot;&gt;logger:remove_primary_filter/1&lt;/a&gt;&lt;/code&gt;. They can also be added at system start via the Kernel configuration parameter &lt;code&gt;&lt;a href=&quot;#logger_parameter&quot;&gt;logger&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">主过滤器通过 &lt;code&gt;&lt;a href=&quot;logger#add_primary_filter-2&quot;&gt;logger:add_primary_filter/2&lt;/a&gt;&lt;/code&gt; 添加，并通过 &lt;code&gt;&lt;a href=&quot;logger#remove_primary_filter-1&quot;&gt;logger:remove_primary_filter/1&lt;/a&gt;&lt;/code&gt; 除去。也可以在系统启动时通过内核配置参数 &lt;code&gt;&lt;a href=&quot;#logger_parameter&quot;&gt;logger&lt;/a&gt;&lt;/code&gt; 添加它们。</target>
        </trans-unit>
        <trans-unit id="c017c83ba101ed388ebd807c4962577b9c15b383" translate="yes" xml:space="preserve">
          <source>Print information about the progress of execution (analysis phases, time spent in each, and size of the relative input).</source>
          <target state="translated">打印执行进度的信息(分析阶段、每个阶段花费的时间、相对输入的大小)。</target>
        </trans-unit>
        <trans-unit id="840da8e13285304b6387e89b722d638fe4321fb7" translate="yes" xml:space="preserve">
          <source>Print percentage of time spent in each state out of system time as well as thread time. Default: false.</source>
          <target state="translated">打印系统时间和线程时间中每个状态所花费的时间百分比。默认值:false。</target>
        </trans-unit>
        <trans-unit id="07be91632e8eb7326b61e92e0be9119ccf72f9d9" translate="yes" xml:space="preserve">
          <source>Print the Dialyzer version and some more information and exit.</source>
          <target state="translated">打印Dialyzer版本和一些更多信息并退出。</target>
        </trans-unit>
        <trans-unit id="4ad3462bebc7bf990bf0f02e7785a28379a6206b" translate="yes" xml:space="preserve">
          <source>Print the given microstate statistics values to standard out. With many states this can be quite verbose. See the top of this reference manual for a brief description of what the fields mean.</source>
          <target state="translated">打印给定的微观状态统计值,并将其标准化。对于许多状态,这可能是相当啰嗦的。请参阅本参考手册顶部对这些字段含义的简要描述。</target>
        </trans-unit>
        <trans-unit id="c29cb731638369d14c3a95c6a29333f3020a9db2" translate="yes" xml:space="preserve">
          <source>Print the given microstate statistics values to stdout. Same as &lt;code&gt;&lt;a href=&quot;#print-1&quot;&gt;msacc:print(DataOrStats,#{}).&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">将给定的微状态统计值打印到stdout。与 &lt;code&gt;&lt;a href=&quot;#print-1&quot;&gt;msacc:print(DataOrStats,#{}).&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d7eaf72064647bad389abb4f1d3dfdc027f8b39d" translate="yes" xml:space="preserve">
          <source>Print the given microstate statistics values to the given file or device. The other arguments behave the same way as for &lt;code&gt;&lt;a href=&quot;#print-2&quot;&gt;print/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将给定的微状态统计值打印到给定的文件或设备。其他参数的行为与 &lt;code&gt;&lt;a href=&quot;#print-2&quot;&gt;print/2&lt;/a&gt;&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="34634055c6f69316398bf0d40b7161096698a0c0" translate="yes" xml:space="preserve">
          <source>Print the statistics by source file and line numbers.</source>
          <target state="translated">按源文件和行号打印统计数据。</target>
        </trans-unit>
        <trans-unit id="6346a375113351396db6189bbd3e28045635ee9a" translate="yes" xml:space="preserve">
          <source>Print the structure of a syntax tree or template to the standard output. This is a utility function for development and debugging.</source>
          <target state="translated">将语法树或模板的结构打印到标准输出。这是一个用于开发和调试的实用功能。</target>
        </trans-unit>
        <trans-unit id="b0de2ead24e5961c777ca83b34e36a96963308e8" translate="yes" xml:space="preserve">
          <source>Print this message and exit.</source>
          <target state="translated">打印此信息并退出。</target>
        </trans-unit>
        <trans-unit id="67d04a8c259ba2c520817ac42065457527ed5559" translate="yes" xml:space="preserve">
          <source>Printing characters, excluding letters, digits, and space</source>
          <target state="translated">打印字符,不包括字母、数字和空格。</target>
        </trans-unit>
        <trans-unit id="dd479d5b24caa5cc7f6fcec5ba84f65bfd052c0e" translate="yes" xml:space="preserve">
          <source>Printing characters, excluding space</source>
          <target state="translated">打印字符,不包括空格</target>
        </trans-unit>
        <trans-unit id="1ceeb223cd6849a3604ba83fadcbca0256451f47" translate="yes" xml:space="preserve">
          <source>Printing characters, including space</source>
          <target state="translated">打印字符,包括空格</target>
        </trans-unit>
        <trans-unit id="5d921c48d9c8fb8f05637fa271ea8672b6ca0cee" translate="yes" xml:space="preserve">
          <source>Printing options:</source>
          <target state="translated">打印选项:</target>
        </trans-unit>
        <trans-unit id="d6045c26dcc40b8b0b1a862cc5369f2a960dd880" translate="yes" xml:space="preserve">
          <source>Prints &lt;code&gt;Text&lt;/code&gt; and the wall clock time for evaluation of &lt;code&gt;Expr&lt;/code&gt;. The result is always the value of &lt;code&gt;Expr&lt;/code&gt;, so this macro can be wrapped around any expression to show its run time when the code is compiled with debugging enabled. For example, &lt;code&gt;List1 = ?debugTime(&quot;sorting&quot;, lists:sort(List))&lt;/code&gt; might show as &quot;&lt;code&gt;sorting: 0.015 s&lt;/code&gt;&quot;.</source>
          <target state="translated">打印 &lt;code&gt;Text&lt;/code&gt; 和挂钟时间以评估 &lt;code&gt;Expr&lt;/code&gt; 。结果始终是 &lt;code&gt;Expr&lt;/code&gt; 的值，因此在启用调试的情况下编译代码时，可以将此宏包装在任何表达式周围，以显示其运行时间。例如， &lt;code&gt;List1 = ?debugTime(&quot;sorting&quot;, lists:sort(List))&lt;/code&gt; 可能显示为&amp;ldquo; &lt;code&gt;sorting: 0.015 s&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="249624d6cefc4a2b88e5bd0c9d8e84ed3f1f76d0" translate="yes" xml:space="preserve">
          <source>Prints a list of internal lock counters by source code locations.</source>
          <target state="translated">按源代码位置打印内部锁计数器的列表。</target>
        </trans-unit>
        <trans-unit id="5b46759cd364af5f12c0d8bc8dd37e3821f4b179" translate="yes" xml:space="preserve">
          <source>Prints a list of internal lock counters for a specific lock.</source>
          <target state="translated">打印特定锁的内部锁计数器列表。</target>
        </trans-unit>
        <trans-unit id="f780c7159f6f13c37c7d77cfd6cc4335b5ecf7a3" translate="yes" xml:space="preserve">
          <source>Prints a list of internal locks and its statistics.</source>
          <target state="translated">打印内部锁的列表及其统计数据。</target>
        </trans-unit>
        <trans-unit id="34938f37f4431fc15190b179d6c88b3314bbc2c3" translate="yes" xml:space="preserve">
          <source>Prints a term using the record definitions known to the shell. All of &lt;code&gt;Term&lt;/code&gt; is printed; the depth is not limited as is the case when a return value is printed.</source>
          <target state="translated">使用shell已知的记录定义打印术语。所有 &lt;code&gt;Term&lt;/code&gt; 已打印；深度不受限制，就像打印返回值时一样。</target>
        </trans-unit>
        <trans-unit id="af0bf4827e6f6c31d2c88fd072f546d7d79231d8" translate="yes" xml:space="preserve">
          <source>Prints a term, in clear text, to the file specified by &lt;code&gt;fp&lt;/code&gt;, or the buffer pointed to by &lt;code&gt;s&lt;/code&gt;. It tries to resemble the term printing in the Erlang shell.</source>
          <target state="translated">以明文形式将术语打印到 &lt;code&gt;fp&lt;/code&gt; 指定的文件或 &lt;code&gt;s&lt;/code&gt; 指向的缓冲区。它试图类似于Erlang shell中的术语&amp;ldquo;打印&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="dbb3d816fd9f97adbc552b5513c5a135cb6248eb" translate="yes" xml:space="preserve">
          <source>Prints a text representation of &lt;code&gt;Term&lt;/code&gt; on the standard output.</source>
          <target state="translated">在标准输出上打印 &lt;code&gt;Term&lt;/code&gt; 的文本表示形式。</target>
        </trans-unit>
        <trans-unit id="f131bd4ae3bf99f6a37fd4eaaff33b16a3ddd00d" translate="yes" xml:space="preserve">
          <source>Prints all existing breakpoints in &lt;code&gt;Module&lt;/code&gt;.</source>
          <target state="translated">打印 &lt;code&gt;Module&lt;/code&gt; 中所有现有的断点。</target>
        </trans-unit>
        <trans-unit id="5a8350e6665f2a056f33d55252db1621c39e138f" translate="yes" xml:space="preserve">
          <source>Prints all existing breakpoints.</source>
          <target state="translated">打印所有现有的断点。</target>
        </trans-unit>
        <trans-unit id="a09e12adb74f08869231e9cda96a7ab997d865d7" translate="yes" xml:space="preserve">
          <source>Prints all filenames in the zip archive &lt;code&gt;Archive&lt;/code&gt; to the Erlang shell. (Similar to &lt;code&gt;tar&amp;nbsp;t&lt;/code&gt;.)</source>
          <target state="translated">打印在压缩所有文件名归档 &lt;code&gt;Archive&lt;/code&gt; 到Erlang的外壳。（类似于 &lt;code&gt;tar&amp;nbsp;t&lt;/code&gt; 。）</target>
        </trans-unit>
        <trans-unit id="18e7b8e58c0e38665fb68377f1d2376f33278d8b" translate="yes" xml:space="preserve">
          <source>Prints all record definitions.</source>
          <target state="translated">打印所有记录定义。</target>
        </trans-unit>
        <trans-unit id="66a41d50c3e8acabd70db40b3336aae5ee4b67bb" translate="yes" xml:space="preserve">
          <source>Prints all system events on &lt;code&gt;standard_io&lt;/code&gt;. The events are formatted with a function that is defined by the process that generated the event (with a call to &lt;code&gt;&lt;a href=&quot;#handle_debug-4&quot;&gt;handle_debug/4&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">在 &lt;code&gt;standard_io&lt;/code&gt; 上打印所有系统事件。使用事件生成过程定义的函数来格式化事件（调用 &lt;code&gt;&lt;a href=&quot;#handle_debug-4&quot;&gt;handle_debug/4&lt;/a&gt;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="6a70ee13c7e68963279aefe5da5f06258c94682e" translate="yes" xml:space="preserve">
          <source>Prints an informational message about each added file.</source>
          <target state="translated">打印关于每个添加的文件的信息。</target>
        </trans-unit>
        <trans-unit id="b783bcbadb2cc653a08641efe74f849f29f9e618" translate="yes" xml:space="preserve">
          <source>Prints an informational message about the added file.</source>
          <target state="translated">打印关于新增文件的信息。</target>
        </trans-unit>
        <trans-unit id="789b189bdffe8e48a506f0e50b3eae0173a1b17d" translate="yes" xml:space="preserve">
          <source>Prints an informational message for each extracted file.</source>
          <target state="translated">为每个提取的文件打印信息信息。</target>
        </trans-unit>
        <trans-unit id="b42f15b17183c3dbb48cf5820eb8a855896d590a" translate="yes" xml:space="preserve">
          <source>Prints and logs from a test case.</source>
          <target state="translated">打印测试用例的日志。</target>
        </trans-unit>
        <trans-unit id="0cf9dc25b9f3af6da971b72a11d06f3ed2521439" translate="yes" xml:space="preserve">
          <source>Prints both the source code for &lt;code&gt;Expr&lt;/code&gt; and its current value. E.g., &lt;code&gt;?debugVal(f(X))&lt;/code&gt; might be displayed as &quot;&lt;code&gt;f(X) = 42&lt;/code&gt;&quot;. (Large terms are truncated to the depth given by the macro &lt;code&gt;EUNIT_DEBUG_VAL_DEPTH&lt;/code&gt;, which defaults to 15 but can be overridden by the user.) The result is always the value of &lt;code&gt;Expr&lt;/code&gt;, so this macro can be wrapped around any expression to display its value when the code is compiled with debugging enabled.</source>
          <target state="translated">同时输出 &lt;code&gt;Expr&lt;/code&gt; 的源代码及其当前值。例如， &lt;code&gt;?debugVal(f(X))&lt;/code&gt; 可能显示为&amp;ldquo; &lt;code&gt;f(X) = 42&lt;/code&gt; &amp;rdquo;。（大项被截断为由宏 &lt;code&gt;EUNIT_DEBUG_VAL_DEPTH&lt;/code&gt; 给出的深度，该深度默认为15，但可以由用户覆盖。）结果始终是 &lt;code&gt;Expr&lt;/code&gt; 的值，因此可以将该宏包装在任何表达式周围，以在出现时显示其值该代码在启用调试的情况下进行编译。</target>
        </trans-unit>
        <trans-unit id="cba2a56bd54f58298d76b707819499e391db4251" translate="yes" xml:space="preserve">
          <source>Prints call statistics for each process in the analysis. This is the default.</source>
          <target state="translated">打印分析中每个进程的调用统计。这是默认值。</target>
        </trans-unit>
        <trans-unit id="e1be7a76157fe86cb7376f259794a335da8ea625" translate="yes" xml:space="preserve">
          <source>Prints callers and called information in the analysis. This is the default.</source>
          <target state="translated">在分析中打印呼叫者和被叫信息。这是默认的。</target>
        </trans-unit>
        <trans-unit id="c909f68d3cdf1b4678031168fcbd218d91fd2a8e" translate="yes" xml:space="preserve">
          <source>Prints filenames and information about all files in the zip archive &lt;code&gt;Archive&lt;/code&gt; to the Erlang shell. (Similar to &lt;code&gt;tar tv&lt;/code&gt;.)</source>
          <target state="translated">将zip归档文件 &lt;code&gt;Archive&lt;/code&gt; 中的所有文件的文件名和信息打印到Erlang shell中。（类似于 &lt;code&gt;tar tv&lt;/code&gt; 。）</target>
        </trans-unit>
        <trans-unit id="3d37aa2c01035d21e560d11bd3a6a17de70550c3" translate="yes" xml:space="preserve">
          <source>Prints from a test case to the console.</source>
          <target state="translated">从测试用例打印到控制台。</target>
        </trans-unit>
        <trans-unit id="f28c890f7ca27b31a21a647f349c289e1195b699" translate="yes" xml:space="preserve">
          <source>Prints from a test case to the log file.</source>
          <target state="translated">从测试用例打印到日志文件。</target>
        </trans-unit>
        <trans-unit id="367bedb7c3ebf6d1df93886702fa7c7177182d00" translate="yes" xml:space="preserve">
          <source>Prints help text.</source>
          <target state="translated">打印帮助文本。</target>
        </trans-unit>
        <trans-unit id="4842182b0113366c688f6ed8532b18cf4974ced6" translate="yes" xml:space="preserve">
          <source>Prints information about all table definitions on the terminal.</source>
          <target state="translated">打印终端上所有表定义的信息。</target>
        </trans-unit>
        <trans-unit id="c9b99b5c7266c995bbf989e773efe1fa4d05005d" translate="yes" xml:space="preserve">
          <source>Prints information about one table definition on the terminal.</source>
          <target state="translated">在终端上打印一个表定义的信息。</target>
        </trans-unit>
        <trans-unit id="9a832165573cfbb962be90caea9e1e9a84652de7" translate="yes" xml:space="preserve">
          <source>Prints lcnt server state and generic information about collected lock statistics.</source>
          <target state="translated">打印lcnt服务器状态和收集到的锁统计数据的通用信息。</target>
        </trans-unit>
        <trans-unit id="96fd634328bfac39da0d4ad325d6f383ea04727b" translate="yes" xml:space="preserve">
          <source>Prints names and information about all files in the tar file &lt;code&gt;Name&lt;/code&gt; to the Erlang shell (similar to &quot;&lt;code&gt;tar&amp;nbsp;tv&lt;/code&gt;&quot;).</source>
          <target state="translated">将tar文件 &lt;code&gt;Name&lt;/code&gt; 所有文件的名称和信息打印到Erlang shell中（类似于&amp;ldquo; &lt;code&gt;tar&amp;nbsp;tv&lt;/code&gt; &amp;rdquo;）。</target>
        </trans-unit>
        <trans-unit id="0b7c144db0f81aaecb54453231a97d3656fc6209" translate="yes" xml:space="preserve">
          <source>Prints one expression. It is useful for implementing hooks (see section &lt;code&gt;&lt;a href=&quot;#knownlimitations&quot;&gt;Known Limitations&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">打印一个表达式。这对于实现钩子很有用（请参阅&amp;ldquo; &lt;code&gt;&lt;a href=&quot;#knownlimitations&quot;&gt;Known Limitations&lt;/a&gt;&lt;/code&gt; 一节）。</target>
        </trans-unit>
        <trans-unit id="0d811790ffe033d437439353029d5c5f60196585" translate="yes" xml:space="preserve">
          <source>Prints selected record definitions. &lt;code&gt;RecordNames&lt;/code&gt; is a record name or a list of record names.</source>
          <target state="translated">打印选定的记录定义。 &lt;code&gt;RecordNames&lt;/code&gt; 是记录名称或记录名称列表。</target>
        </trans-unit>
        <trans-unit id="3337334a9f65d4805b4e67126869967487e4a45a" translate="yes" xml:space="preserve">
          <source>Prints system information on the terminal. This function can be used even if Mnesia is not started. However, more information is displayed if Mnesia is started.</source>
          <target state="translated">打印终端上的系统信息。即使Mnesia未启动,也可使用此功能。但是,如果启动Mnesia,则会显示更多信息。</target>
        </trans-unit>
        <trans-unit id="cc7fe00a6e4282e0ab0f331a54683530177db63d" translate="yes" xml:space="preserve">
          <source>Prints the argument with the string syntax. The argument is, if no Unicode translation modifier is present, an &lt;code&gt;iolist()&lt;/code&gt;, a &lt;code&gt;binary()&lt;/code&gt;, or an &lt;code&gt;atom()&lt;/code&gt;. If the Unicode translation modifier (&lt;code&gt;t&lt;/code&gt;) is in effect, the argument is &lt;code&gt;unicode:chardata()&lt;/code&gt;, meaning that binaries are in UTF-8. The characters are printed without quotes. The string is first truncated by the specified precision and then padded and justified to the specified field width. The default precision is the field width.</source>
          <target state="translated">使用字符串语法输出参数。如果不存在Unicode转换修饰符，则该参数为 &lt;code&gt;iolist()&lt;/code&gt; ， &lt;code&gt;binary()&lt;/code&gt; 或 &lt;code&gt;atom()&lt;/code&gt; 。如果Unicode翻译修饰符（ &lt;code&gt;t&lt;/code&gt; ）有效，则参数为 &lt;code&gt;unicode:chardata()&lt;/code&gt; ，这意味着二进制文件位于UTF-8中。字符打印时不带引号。字符串首先被指定的精度截断，然后被填充并对齐到指定的字段宽度。默认精度是字段宽度。</target>
        </trans-unit>
        <trans-unit id="bd5cd1b05b1d6e3d16e8bf612aeeaa8d48e96e04" translate="yes" xml:space="preserve">
          <source>Prints the content of all the (snmp) tables and variables for all mibs handled by the snmp agent.</source>
          <target state="translated">打印snmp代理处理的所有mibs的所有(snmp)表和变量的内容。</target>
        </trans-unit>
        <trans-unit id="90637c82b5d5250fe221618f94be01dea7995ed8" translate="yes" xml:space="preserve">
          <source>Prints the content of all the (snmp) tables for all mibs handled by the snmp agent.</source>
          <target state="translated">打印snmp代理处理的所有mib的所有(snmp)表的内容。</target>
        </trans-unit>
        <trans-unit id="4bf87b55c70954b59410622021acfda18b4d862a" translate="yes" xml:space="preserve">
          <source>Prints the content of all the (snmp) variables for all mibs handled by the snmp agent.</source>
          <target state="translated">打印snmp代理处理的所有mib的所有(snmp)变量的内容。</target>
        </trans-unit>
        <trans-unit id="5b79c2bcb86c7797ba5fa06effcf5832d223d36a" translate="yes" xml:space="preserve">
          <source>Prints the contents of the database on screen. This is useful for debugging since the &lt;code&gt;STANDARD-MIB&lt;/code&gt; and &lt;code&gt;OTP-SNMPEA-MIB&lt;/code&gt; (and maybe your own MIBs) are stored in &lt;code&gt;snmpa_local_db&lt;/code&gt;.</source>
          <target state="translated">在屏幕上打印数据库的内容。这对调试很有用，因为 &lt;code&gt;STANDARD-MIB&lt;/code&gt; 和 &lt;code&gt;OTP-SNMPEA-MIB&lt;/code&gt; （可能还有您自己的MIB）存储在 &lt;code&gt;snmpa_local_db&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="3d48e71ba53b9a774ace4b3048a7d6147bac49e2" translate="yes" xml:space="preserve">
          <source>Prints the current microstate accounting to standard out. Same as &lt;code&gt;&lt;a href=&quot;#print-1&quot;&gt;msacc:print(msacc:stats(),#{}).&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">将当前的微状态会计打印为标准输出。与 &lt;code&gt;&lt;a href=&quot;#print-1&quot;&gt;msacc:print(msacc:stats(),#{}).&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1f573f7b3b8befc12d22fd5e016d5affba5ec7e7" translate="yes" xml:space="preserve">
          <source>Prints the current status of all interpreted processes.</source>
          <target state="translated">打印所有解释过程的当前状态。</target>
        </trans-unit>
        <trans-unit id="b7de039db4515d2480ed1087648907d99e3cce17" translate="yes" xml:space="preserve">
          <source>Prints the current variable bindings.</source>
          <target state="translated">打印当前的变量绑定。</target>
        </trans-unit>
        <trans-unit id="38356e23d298a145e0dd7db9a9c3d8f5137f87bd" translate="yes" xml:space="preserve">
          <source>Prints the formatted string in the comment field in the table on the test suite result page.</source>
          <target state="translated">打印测试套件结果页面表格中注释字段中的格式化字符串。</target>
        </trans-unit>
        <trans-unit id="9a338446495bbc76dc9e6e72c05e03dc5573b368" translate="yes" xml:space="preserve">
          <source>Prints the history list.</source>
          <target state="translated">打印历史列表。</target>
        </trans-unit>
        <trans-unit id="1587f809009dffca5babc79d912a7baf0c2c4678" translate="yes" xml:space="preserve">
          <source>Prints the logged system events in the debug structure, using &lt;code&gt;FormFunc&lt;/code&gt; as defined when the event was generated by a call to &lt;code&gt;&lt;a href=&quot;#handle_debug-4&quot;&gt;handle_debug/4&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">使用通过调用 &lt;code&gt;&lt;a href=&quot;#handle_debug-4&quot;&gt;handle_debug/4&lt;/a&gt;&lt;/code&gt; 生成事件时定义的 &lt;code&gt;FormFunc&lt;/code&gt; 在调试结构中打印记录的系统事件。</target>
        </trans-unit>
        <trans-unit id="c697f405132de684f29b1c85650f6166f19d3f38" translate="yes" xml:space="preserve">
          <source>Prints the name of the working directory.</source>
          <target state="translated">打印工作目录的名称。</target>
        </trans-unit>
        <trans-unit id="2b0a0e8caa63b361ad3055b9a938bd9ee0847140" translate="yes" xml:space="preserve">
          <source>Prints the names of all files in the tar file &lt;code&gt;Name&lt;/code&gt; to the Erlang shell (similar to &quot;&lt;code&gt;tar&amp;nbsp;t&lt;/code&gt;&quot;).</source>
          <target state="translated">将tar文件 &lt;code&gt;Name&lt;/code&gt; 的所有文件的名称打印到Erlang shell中（类似于&amp;ldquo; &lt;code&gt;tar&amp;nbsp;t&lt;/code&gt; &amp;rdquo;）。</target>
        </trans-unit>
        <trans-unit id="df056a5b36536b5f6f05efef7d94a9025dcb4881" translate="yes" xml:space="preserve">
          <source>Prints the node uptime (as specified by &lt;code&gt;erlang:statistics(wall_clock)&lt;/code&gt;) in human-readable form.</source>
          <target state="translated">以 &lt;code&gt;erlang:statistics(wall_clock)&lt;/code&gt; 形式打印节点的正常运行时间（由erlang：statistics（wall_clock）指定）。</target>
        </trans-unit>
        <trans-unit id="236e4648c9dfa6dccb2557b594716eafdf865791" translate="yes" xml:space="preserve">
          <source>Prints the specified &lt;code&gt;Comment&lt;/code&gt; in the comment field in the table on the test suite result page.</source>
          <target state="translated">在测试套件结果页面上的表的注释字段中打印指定的 &lt;code&gt;Comment&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="86341a0cf794500a0ef3c32c1e84cb1e5b1a1ea2" translate="yes" xml:space="preserve">
          <source>Prints the specified Erlang term to the specified output stream.</source>
          <target state="translated">将指定的Erlang术语打印到指定的输出流中。</target>
        </trans-unit>
        <trans-unit id="01d810dcc882a2671bb99ec2a3f4b52034e71105" translate="yes" xml:space="preserve">
          <source>Prior to Erlang/OTP 21.0, supervisor, crash, and progress reports were only logged when the SASL application was running. This behaviour can, for backwards compatibility, be enabled by setting the Kernel configuration parameter &lt;code&gt;logger_sasl_compatible&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;. For more information, see &lt;code&gt;SASL Error Logging&lt;/code&gt; in the SASL User's Guide.</source>
          <target state="translated">在Erlang / OTP 21.0之前，主管，崩溃和进度报告仅在SASL应用程序运行时记录。为了向后兼容，可以通过将内核配置参数 &lt;code&gt;logger_sasl_compatible&lt;/code&gt; 设置为 &lt;code&gt;true&lt;/code&gt; 来启用此行为。有关更多信息，请参见《 SASL用户指南》中的&amp;ldquo; &lt;code&gt;SASL Error Logging&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="9c5c3d6724263056f8e5809f4ae6b20baea9b0f8" translate="yes" xml:space="preserve">
          <source>Prior to Erlang/OTP 21.0, these reports were only logged when the SASL application was running, and they were printed trough SASL's own event handlers &lt;code&gt;sasl_report_tty_h&lt;/code&gt; and &lt;code&gt;sasl_report_file_h&lt;/code&gt;.</source>
          <target state="translated">在Erlang / OTP 21.0之前，这些报告仅在SASL应用程序运行时记录，并且通过SASL自己的事件处理程序 &lt;code&gt;sasl_report_tty_h&lt;/code&gt; 和 &lt;code&gt;sasl_report_file_h&lt;/code&gt; 打印。</target>
        </trans-unit>
        <trans-unit id="06bdb66fe24b1bd0f13724edf2132df5e7b44cc6" translate="yes" xml:space="preserve">
          <source>Priority level &lt;code&gt;max&lt;/code&gt; is reserved for internal use in the Erlang runtime system, and is &lt;strong&gt;not&lt;/strong&gt; to be used by others.</source>
          <target state="translated">优先级 &lt;code&gt;max&lt;/code&gt; 保留给Erlang运行时系统内部使用，&lt;strong&gt;不&lt;/strong&gt;被其他人使用。</target>
        </trans-unit>
        <trans-unit id="891a5ba970623a36963c697cb5e2983045ef4bf5" translate="yes" xml:space="preserve">
          <source>Private directory for a test suite. This directory is to be used when the test suite needs to write to files.</source>
          <target state="translated">测试套件的私有目录。这个目录在测试套件需要写入文件时使用。</target>
        </trans-unit>
        <trans-unit id="1560d5e03a4510a6c6ad469d0a62cd63315c3854" translate="yes" xml:space="preserve">
          <source>Private key of the host matching the &lt;code&gt;Algorithm&lt;/code&gt;. It may be a reference to a 'ssh-rsa', rsa-sha2-* or 'ssh-dss' (NOT ecdsa) key stored in a loaded Engine.</source>
          <target state="translated">匹配 &lt;code&gt;Algorithm&lt;/code&gt; 的主机的私钥。它可能是对存储在已加载引擎中的&amp;ldquo; ssh-rsa&amp;rdquo;，rsa-sha2- *或&amp;ldquo; ssh-dss&amp;rdquo;（NOT ecdsa）密钥的引用。</target>
        </trans-unit>
        <trans-unit id="603f6c7b83b91ba3b66637cb17d80977c31db448" translate="yes" xml:space="preserve">
          <source>Private key of the user matching the &lt;code&gt;Algorithm&lt;/code&gt;.</source>
          <target state="translated">匹配 &lt;code&gt;Algorithm&lt;/code&gt; 的用户私钥。</target>
        </trans-unit>
        <trans-unit id="74ad72304fcac0b5a69a08a6f5ec35c07a46f71f" translate="yes" xml:space="preserve">
          <source>Private use</source>
          <target state="translated">私人使用</target>
        </trans-unit>
        <trans-unit id="b79a8e30c6fdcdcf9dd5d5409cd8498f3ab57c1c" translate="yes" xml:space="preserve">
          <source>Probe specifications can be found in &lt;code&gt;erts/emulator/beam/erlang_dtrace.d&lt;/code&gt;, and a few example scripts can be found under &lt;code&gt;lib/runtime_tools/examples/&lt;/code&gt;.</source>
          <target state="translated">探针规范可以在 &lt;code&gt;erts/emulator/beam/erlang_dtrace.d&lt;/code&gt; 中找到，一些示例脚本可以在 &lt;code&gt;lib/runtime_tools/examples/&lt;/code&gt; 下找到。</target>
        </trans-unit>
        <trans-unit id="f85f3223fd42f20ff0f4013198f3a0482c317dc6" translate="yes" xml:space="preserve">
          <source>Probes in the dtrace.so NIF library like this:</source>
          <target state="translated">dtrace.so NIF库中的探头是这样的。</target>
        </trans-unit>
        <trans-unit id="4180fe17ea663764396b9e7a7c467588a0d635b1" translate="yes" xml:space="preserve">
          <source>Problems were found during the analysis.</source>
          <target state="translated">分析过程中发现问题。</target>
        </trans-unit>
        <trans-unit id="dcd7a97391d07066e93a31ea99c263af50266780" translate="yes" xml:space="preserve">
          <source>Problems when extracting from a tar file, &lt;code&gt;erl_tar:extract/2&lt;/code&gt; returned &lt;code&gt;{error, {Name, Reason}}&lt;/code&gt;.</source>
          <target state="translated">从tar文件中提取时出现问题， &lt;code&gt;erl_tar:extract/2&lt;/code&gt; 返回了 &lt;code&gt;{error, {Name, Reason}}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e976a26adbbfd7012fe545033a0a8839af4e4c58" translate="yes" xml:space="preserve">
          <source>Process IDs of processes linked to this one. Can also contain ports. If process monitoring is used, this field also tells in which direction the monitoring is in effect. That is, a link &quot;to&quot; a process tells you that the &quot;current&quot; process was monitoring the other, and a link &quot;from&quot; a process tells you that the other process was monitoring the current one.</source>
          <target state="translated">与这个进程相连的进程ID。也可以包含端口。如果使用了进程监控,这个字段还会告诉你监控在哪个方向生效。也就是说,&quot;到 &quot;一个进程的链接告诉你,&quot;当前 &quot;进程在监控另一个进程,而 &quot;从 &quot;一个进程的链接告诉你,另一个进程在监控当前进程。</target>
        </trans-unit>
        <trans-unit id="d7a28bb3334285a1e0ac0387ca14af38afa1bb3b" translate="yes" xml:space="preserve">
          <source>Process a received message</source>
          <target state="translated">处理收到的信息</target>
        </trans-unit>
        <trans-unit id="6ed08f16461a6d037cb208e9913ab037737a77bd" translate="yes" xml:space="preserve">
          <source>Process identifier of the &lt;code&gt;Kernel&lt;/code&gt; process. That is, the process that called either &lt;code&gt;&lt;a href=&quot;#setup&quot;&gt;setup/5&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#accept_connection&quot;&gt;accept_connection/5&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Kernel&lt;/code&gt; 进程的进程标识符。也就是说，该过程调用了 &lt;code&gt;&lt;a href=&quot;#setup&quot;&gt;setup/5&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;#accept_connection&quot;&gt;accept_connection/5&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5350a81bb4d7a6e885720414c324c78fdac18460" translate="yes" xml:space="preserve">
          <source>Process identifier of the process created by the &lt;code&gt;&lt;a href=&quot;#accept&quot;&gt;accept/1&lt;/a&gt;&lt;/code&gt; callback.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#accept&quot;&gt;accept/1&lt;/a&gt;&lt;/code&gt; 回调创建的进程的进程标识符。</target>
        </trans-unit>
        <trans-unit id="ec8568d5958f46e915bd83080ff98e0e79a75222" translate="yes" xml:space="preserve">
          <source>Process is monitored by pid.</source>
          <target state="translated">过程由pid监控。</target>
        </trans-unit>
        <trans-unit id="beca56c90caa14898b2c241f5874170cc90c2a9c" translate="yes" xml:space="preserve">
          <source>Process metadata is set and updated with &lt;code&gt;&lt;a href=&quot;logger#set_process_metadata-1&quot;&gt;logger:set_process_metadata/1&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;logger#update_process_metadata-1&quot;&gt;logger:update_process metadata/1&lt;/a&gt;&lt;/code&gt;, respectively. This metadata applies to the process on which these calls are made, and Logger adds the metadata to all log events issued on that process.</source>
          <target state="translated">分别使用 &lt;code&gt;&lt;a href=&quot;logger#set_process_metadata-1&quot;&gt;logger:set_process_metadata/1&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;logger#update_process_metadata-1&quot;&gt;logger:update_process metadata/1&lt;/a&gt;&lt;/code&gt; 设置和更新流程元数据。该元数据适用于进行这些调用的过程，并且Logger将元数据添加到在该过程中发出的所有日志事件中。</target>
        </trans-unit>
        <trans-unit id="67e5f2d87d665dc7e3929e88907eef304eb59bc0" translate="yes" xml:space="preserve">
          <source>Process the action requests and either return an error_descr() indicating some fatal error or a list of action replies (wildcarded or not).</source>
          <target state="translated">处理动作请求,并返回一个error_descr(),表示一些致命的错误或一个动作回复的列表(通配符或不通配)。</target>
        </trans-unit>
        <trans-unit id="ed7308bb59f2876220e45299939d241199595df2" translate="yes" xml:space="preserve">
          <source>Processes</source>
          <target state="translated">Processes</target>
        </trans-unit>
        <trans-unit id="6055fe67fe73591ecd6add960eb22a68e35be849" translate="yes" xml:space="preserve">
          <source>Processes an incoming message. Performs authentication and decryption as necessary. The return values should be passed the manager server.</source>
          <target state="translated">处理收到的信息。必要时执行验证和解密。返回值应传递给管理器服务器。</target>
        </trans-unit>
        <trans-unit id="288b10741351f050abd56115edaeab3cbc0b134b" translate="yes" xml:space="preserve">
          <source>Processes an incoming packet. Performs authentication and decryption as necessary. The return values should be passed to the agent.</source>
          <target state="translated">处理传入的数据包。必要时执行验证和解密。返回值应传递给代理。</target>
        </trans-unit>
        <trans-unit id="ed98243f088a1f790e5261686fb35da9e9e2e36b" translate="yes" xml:space="preserve">
          <source>Processes and ports added by process/port identifiers add the nodes these processes/ports reside on in the node list. More nodes can be added by clicking button &lt;strong&gt;Add Nodes&lt;/strong&gt;, or by right-clicking in the &lt;strong&gt;Nodes&lt;/strong&gt; list and select &lt;strong&gt;Add Nodes&lt;/strong&gt;. To remove nodes, select them, then right-click and choose &lt;strong&gt;Remove nodes&lt;/strong&gt;.</source>
          <target state="translated">由进程/端口标识符添加的进程和端口会在节点列表中添加这些进程/端口所驻留的节点。单击按钮&amp;ldquo; &lt;strong&gt;添加节点&amp;rdquo;&lt;/strong&gt;，或右键单击&amp;ldquo; &lt;strong&gt;节点&amp;rdquo;&lt;/strong&gt;列表，然后选择&amp;ldquo; &lt;strong&gt;添加节点&amp;rdquo;&lt;/strong&gt;，可以&lt;strong&gt;添加更多节点&lt;/strong&gt;。要删除节点，请选择它们，然后右键单击并选择&lt;strong&gt;删除节点&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="bf438e45a34ce6e54b5666dee9827f7d9908c9aa" translate="yes" xml:space="preserve">
          <source>Processes are added from the &lt;strong&gt;Applications&lt;/strong&gt; or &lt;strong&gt;Processes&lt;/strong&gt; tabs. Ports are added from the &lt;strong&gt;Ports&lt;/strong&gt; tab. A special &lt;strong&gt;new&lt;/strong&gt; identifier, meaning all processes, or ports, started after trace start, can be added with buttons &lt;strong&gt;Add 'new' Processes&lt;/strong&gt; and &lt;strong&gt;Add 'new' Ports&lt;/strong&gt;, respecively.</source>
          <target state="translated">从&amp;ldquo; &lt;strong&gt;应用程序&amp;rdquo;&lt;/strong&gt;或&amp;ldquo; &lt;strong&gt;进程&amp;rdquo;&lt;/strong&gt;选项卡添加了&lt;strong&gt;进程&lt;/strong&gt;。端口是从&amp;ldquo; &lt;strong&gt;端口&amp;rdquo;&lt;/strong&gt;选项卡添加的。可以使用按钮&amp;ldquo; &lt;strong&gt;添加新进程&amp;rdquo;&lt;/strong&gt;和&amp;ldquo; &lt;strong&gt;添加新端口&lt;/strong&gt;&lt;strong&gt;&amp;rdquo;&lt;/strong&gt;分别添加一个特殊的&lt;strong&gt;新&lt;/strong&gt;标识符，表示在跟踪启动后启动的所有进程或端口。&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="be549e5919a2d84debbcdab9c71aa73639ddafc7" translate="yes" xml:space="preserve">
          <source>Processes can be specified as registered names, globally registered names, or process identifiers. Ports can be specified as registered names or port identifiers. If a registered name is specified, the flags are set on processes/ports with this name on all active nodes.</source>
          <target state="translated">进程可以被指定为注册名、全局注册名或进程标识符。端口可以指定为注册名或端口标识符。如果指定了注册名,则所有活动节点上使用该名称的进程/端口都会设置标志。</target>
        </trans-unit>
        <trans-unit id="c93cc0cb1c7c1cf0a914f4b84e40d8422afe1f41" translate="yes" xml:space="preserve">
          <source>Processes can monitor other processes and detect process terminations, see &lt;code&gt;&lt;a href=&quot;processes#errors&quot;&gt;Processes&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">流程可以监视其他流程并检测流程终止，请参阅 &lt;code&gt;&lt;a href=&quot;processes#errors&quot;&gt;Processes&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="630a26a9de10b21d483dfee70c4d12d378a250c0" translate="yes" xml:space="preserve">
          <source>Processes communicate by sending and receiving messages. Messages are sent by using the &lt;code&gt;&lt;a href=&quot;expressions#send&quot;&gt;send operator !&lt;/a&gt;&lt;/code&gt; and received by calling &lt;code&gt;&lt;a href=&quot;expressions#receive&quot;&gt;receive&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">进程通过发送和接收消息进行通信。使用 &lt;code&gt;&lt;a href=&quot;expressions#send&quot;&gt;send operator !&lt;/a&gt;&lt;/code&gt; 发送消息！并通过调用 &lt;code&gt;&lt;a href=&quot;expressions#receive&quot;&gt;receive&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d178bde37cb4db43efd1bc3bc63a9067eff3bf67" translate="yes" xml:space="preserve">
          <source>Processes in &lt;code&gt;ch_app&lt;/code&gt; for which code have not been updated, for example, the supervisor, are still evaluating code from &lt;code&gt;ch_app-1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ch_app&lt;/code&gt; 中尚未更新代码的进程（例如，主管）仍在评估 &lt;code&gt;ch_app-1&lt;/code&gt; 中的代码。</target>
        </trans-unit>
        <trans-unit id="033f59a44cf3d7e0ad2fb2a6c9d6d37906dc4f55" translate="yes" xml:space="preserve">
          <source>Processes sending command data to the port are suspended if either the port is busy or if the port message queue is busy. Suspended processes are resumed when neither the port or the port message queue is busy.</source>
          <target state="translated">如果端口繁忙或端口消息队列繁忙,则暂停向端口发送命令数据的进程。当端口或端口消息队列都不忙时,被暂停的进程就会恢复。</target>
        </trans-unit>
        <trans-unit id="7813ce8e07b59a64bbf71e0e1c1f12985cd75cf4" translate="yes" xml:space="preserve">
          <source>Processes sending command data to the port are suspended if either the port or the port message queue is busy. Suspended processes are resumed when neither the port or the port message queue is busy. Command data is in this context data passed to the port using either &lt;code&gt;Port ! {Owner, {command, Data}}&lt;/code&gt; or &lt;code&gt;port_command/[2,3]&lt;/code&gt;.</source>
          <target state="translated">如果端口或端口消息队列繁忙，则将向命令端口发送命令数据的进程挂起。当端口或端口消息队列都不繁忙时，将暂停处理。在这种情况下，命令数据就是使用任一 &lt;code&gt;Port ! {Owner, {command, Data}}&lt;/code&gt; 或 &lt;code&gt;port_command/[2,3]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8a29be095a2ff95859b3cad24b61604a71c86c0b" translate="yes" xml:space="preserve">
          <source>Processes started with functions &lt;code&gt;proc_lib:spawn&lt;/code&gt; or &lt;code&gt;proc_lib:spawn_link&lt;/code&gt; are wrapped within a &lt;code&gt;catch&lt;/code&gt;. A crash report is issued when such a process terminates with an unexpected reason, which is any reason other than &lt;code&gt;normal&lt;/code&gt;, &lt;code&gt;shutdown&lt;/code&gt;, or &lt;code&gt;{shutdown,Term}&lt;/code&gt;. Processes using behaviors &lt;code&gt;gen_server&lt;/code&gt;, &lt;code&gt;gen_fsm&lt;/code&gt; or &lt;code&gt;gen_statem&lt;/code&gt; are examples of such processes. A crash report contains the following items:</source>
          <target state="translated">以 &lt;code&gt;proc_lib:spawn&lt;/code&gt; 或 &lt;code&gt;proc_lib:spawn_link&lt;/code&gt; 函数开头的进程包含在 &lt;code&gt;catch&lt;/code&gt; 中。当此类进程因意外原因（除 &lt;code&gt;normal&lt;/code&gt; ， &lt;code&gt;shutdown&lt;/code&gt; 或 &lt;code&gt;{shutdown,Term}&lt;/code&gt; 之外的其他原因）终止时，将发出崩溃报告。使用行为 &lt;code&gt;gen_server&lt;/code&gt; ， &lt;code&gt;gen_fsm&lt;/code&gt; 或 &lt;code&gt;gen_statem&lt;/code&gt; 的进程是此类进程的示例。崩溃报告包含以下各项：</target>
        </trans-unit>
        <trans-unit id="7a39a6bcdcfd7777bfaedcdb0b7cb9d27d3872a4" translate="yes" xml:space="preserve">
          <source>Processes that are not implemented as one of the standard behaviors must still understand system messages. The following three messages must be understood:</source>
          <target state="translated">没有作为标准行为之一实现的进程仍然必须理解系统消息。以下三个消息必须被理解。</target>
        </trans-unit>
        <trans-unit id="58c7efb2fc2ee91313efcb0b51ba3d6222f1b4e4" translate="yes" xml:space="preserve">
          <source>Processes, ports and ets tables can then be inspecting using their respective info functions, i.e. &lt;code&gt;erlang:process_info/2&lt;/code&gt;, &lt;code&gt;erlang:port_info/2&lt;/code&gt; and &lt;code&gt;ets:info/1&lt;/code&gt;.</source>
          <target state="translated">然后可以使用它们各自的信息功能（即 &lt;code&gt;erlang:process_info/2&lt;/code&gt; ， &lt;code&gt;erlang:port_info/2&lt;/code&gt; 和 &lt;code&gt;ets:info/1&lt;/code&gt; )检查进程，端口和ets表。</target>
        </trans-unit>
        <trans-unit id="e6017176610426ad0695826f94e970fac5ae785f" translate="yes" xml:space="preserve">
          <source>Processing Local Requests</source>
          <target state="translated">处理本地请求</target>
        </trans-unit>
        <trans-unit id="2f93aa73375c48e5ac1052bbdea13b31c4c62dea" translate="yes" xml:space="preserve">
          <source>Processing Received Answers</source>
          <target state="translated">处理收到的答复</target>
        </trans-unit>
        <trans-unit id="47c0c8f7f7c694d8170efc2ece7ee9a4d20e521e" translate="yes" xml:space="preserve">
          <source>Processing options such as case-independence are fixed when a subpattern is defined, so if it is used as a subroutine, such options cannot be changed for different calls. For example, the following pattern matches &quot;abcabc&quot; but not &quot;abcABC&quot;, as the change of processing option does not affect the called subpattern:</source>
          <target state="translated">当定义一个子模式时,大小写无关等处理选项是固定的,所以如果将其作为子程序使用,则不能对不同的调用改变这些选项。例如,下面的模式符合 &quot;abcabc&quot;,但不符合 &quot;abcABC&quot;,因为处理选项的改变不影响被调用的子模式。</target>
        </trans-unit>
        <trans-unit id="0eab01ffe9a07f631f008bdf0c75bf332d75ff92" translate="yes" xml:space="preserve">
          <source>Produces a Makefile rule to track header dependencies. The rule is sent to &lt;code&gt;stdout&lt;/code&gt;. No object file is produced.</source>
          <target state="translated">生成Makefile规则以跟踪标头依赖性。规则将发送到 &lt;code&gt;stdout&lt;/code&gt; 。没有产生目标文件。</target>
        </trans-unit>
        <trans-unit id="0b0b65fd07934b92a1f3f3b16fdae0415377d8f3" translate="yes" xml:space="preserve">
          <source>Produces a Makefile rule to track headers dependencies. No object file is produced.</source>
          <target state="translated">生成一个Makefile规则来跟踪头文件的依赖性。不产生对象文件。</target>
        </trans-unit>
        <trans-unit id="522655e258c4e569c30e0510cdca6d0699bc8809" translate="yes" xml:space="preserve">
          <source>Produces a list of miscellaneous information. Intended for debugging. If no profile is specified, the default profile is used.</source>
          <target state="translated">产生一个杂项信息的列表。用于调试。如果没有指定配置文件,则使用默认配置文件。</target>
        </trans-unit>
        <trans-unit id="17b15b2832a09a04ae3469c8eba4b0f7717aeed3" translate="yes" xml:space="preserve">
          <source>Produces a list of the entire cookie database. Intended for debugging/testing purposes. If no profile is specified, the default profile is used.</source>
          <target state="translated">生成整个cookie数据库的列表。用于调试/测试目的。如果没有指定配置文件,则使用默认配置文件。</target>
        </trans-unit>
        <trans-unit id="aa4a70cdd8befb25aae49184a69129ba10dc3026" translate="yes" xml:space="preserve">
          <source>Produces a listing of the assembler code in the file &lt;code&gt;&amp;lt;File&amp;gt;.S&lt;/code&gt;. No object file is produced.</source>
          <target state="translated">在文件 &lt;code&gt;&amp;lt;File&amp;gt;.S&lt;/code&gt; 中产生汇编代码列表。没有产生目标文件。</target>
        </trans-unit>
        <trans-unit id="14a6e3657dbd240095b72afb45cd733b01f3e525" translate="yes" xml:space="preserve">
          <source>Produces a listing of the code, after all source code transformations have been performed, in the file &lt;code&gt;&amp;lt;File&amp;gt;.E&lt;/code&gt;. No object file is produced.</source>
          <target state="translated">完成所有源代码转换后，在文件 &lt;code&gt;&amp;lt;File&amp;gt;.E&lt;/code&gt; 中产生代码列表。没有产生目标文件。</target>
        </trans-unit>
        <trans-unit id="01e05890546d0a6ddd75cdab592794da9dd67dbc" translate="yes" xml:space="preserve">
          <source>Produces a listing of the parsed code, after preprocessing and parse transforms, in the file &lt;code&gt;&amp;lt;File&amp;gt;.P&lt;/code&gt;. No object file is produced.</source>
          <target state="translated">经过预处理和解析转换后，在文件 &lt;code&gt;&amp;lt;File&amp;gt;.P&lt;/code&gt; 中生成解析代码的列表。没有产生目标文件。</target>
        </trans-unit>
        <trans-unit id="b42942b44b3250eb3b2271073a1658bcb5331121" translate="yes" xml:space="preserve">
          <source>Produces a new map &lt;code&gt;Map&lt;/code&gt; by calling function &lt;code&gt;fun F(K, V1)&lt;/code&gt; for every &lt;code&gt;K&lt;/code&gt; to value &lt;code&gt;V1&lt;/code&gt; association in &lt;code&gt;MapOrIter&lt;/code&gt; in any order. Function &lt;code&gt;fun F/2&lt;/code&gt; must return value &lt;code&gt;V2&lt;/code&gt; to be associated with key &lt;code&gt;K&lt;/code&gt; for the new map &lt;code&gt;Map&lt;/code&gt;.</source>
          <target state="translated">通过对 &lt;code&gt;MapOrIter&lt;/code&gt; 中的每个 &lt;code&gt;K&lt;/code&gt; 值 &lt;code&gt;V1&lt;/code&gt; 关联以任何顺序调用函数 &lt;code&gt;fun F(K, V1)&lt;/code&gt; 来生成新的 &lt;code&gt;Map&lt;/code&gt; 。函数 &lt;code&gt;fun F/2&lt;/code&gt; 必须返回值 &lt;code&gt;V2&lt;/code&gt; 才能与新地图 &lt;code&gt;Map&lt;/code&gt; 的键 &lt;code&gt;K&lt;/code&gt; 关联。</target>
        </trans-unit>
        <trans-unit id="734f2970d4a5791f19c5ec99de733cebe7c5db24" translate="yes" xml:space="preserve">
          <source>Produces a slightly processed dump of the session database. It is intended for debugging. If no profile is specified, the default profile is used.</source>
          <target state="translated">产生一个略微处理过的会话数据库转储。它的目的是用于调试。如果没有指定配置文件,则使用默认的配置文件。</target>
        </trans-unit>
        <trans-unit id="f3e2b5bef8d3aea29dc3d87dc03c8bd706ff3c63" translate="yes" xml:space="preserve">
          <source>Produces an Erlang binary object from a buffer containing a sequence of bytes.</source>
          <target state="translated">从包含一个字节序列的缓冲区中产生一个Erlang二进制对象。</target>
        </trans-unit>
        <trans-unit id="28dc5d49200b0d0db7991c1bd65981ee7a79b5b9" translate="yes" xml:space="preserve">
          <source>Product identification, or similar.</source>
          <target state="translated">产品标识,或类似。</target>
        </trans-unit>
        <trans-unit id="47c4b8b7bf496f53b2cc4542ca4954138de2040e" translate="yes" xml:space="preserve">
          <source>Product-Name AVP</source>
          <target state="translated">产品名称AVP</target>
        </trans-unit>
        <trans-unit id="17df105acacb67dbb629858e9cd9d8d447c45b58" translate="yes" xml:space="preserve">
          <source>Profile :: atom()) -&amp;gt;</source>
          <target state="translated">资料:: :: atom（））-&amp;gt;</target>
        </trans-unit>
        <trans-unit id="0026a969a9cb473a3dd25bc732d4ff9709ac80a8" translate="yes" xml:space="preserve">
          <source>Profile :: term()) -&amp;gt;</source>
          <target state="translated">个人资料:: term（））-&amp;gt;</target>
        </trans-unit>
        <trans-unit id="57c6e422edb8ce7e828dbfdc0ca3e7e40b6fc1e1" translate="yes" xml:space="preserve">
          <source>Profile process locks, equal to adding &lt;code&gt;process&lt;/code&gt; to the lock category mask; see &lt;code&gt;lcnt:rt_mask/2&lt;/code&gt;</source>
          <target state="translated">分析进程锁，等于将 &lt;code&gt;process&lt;/code&gt; 添加到锁类别掩码；参见 &lt;code&gt;lcnt:rt_mask/2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f72795f752c26fa8b5758727320096204ecec91e" translate="yes" xml:space="preserve">
          <source>Profiling is done in the following steps:</source>
          <target state="translated">剖析按以下步骤进行。</target>
        </trans-unit>
        <trans-unit id="630e9fa5225f76b674631196640d8884476f77f0" translate="yes" xml:space="preserve">
          <source>Profiling is essentially done in 3 steps:</source>
          <target state="translated">剖析基本上分3步完成。</target>
        </trans-unit>
        <trans-unit id="129873d7917621f62579cca8da507adfd58f5037" translate="yes" xml:space="preserve">
          <source>Profiling; the trace file is read and raw profile data is collected into an internal RAM storage on the node. During this step the trace data may be dumped in text format to file or console.</source>
          <target state="translated">剖析;读取跟踪文件,并将原始剖析数据收集到节点上的内部RAM存储器中。在这一步骤中,跟踪数据可以以文本格式转储到文件或控制台。</target>
        </trans-unit>
        <trans-unit id="864662422fc6799b55caf37fed8419aea855ecf3" translate="yes" xml:space="preserve">
          <source>Profiling; the trace file is read, the execution call stack is simulated, and raw profile data is calculated from the simulated call stack and the trace timestamps. The profile data is stored in the &lt;code&gt;fprof&lt;/code&gt; server state. During this step the trace data may be dumped in text format to file or console.</source>
          <target state="translated">分析；读取跟踪文件，模拟执行调用堆栈，并从模拟的调用堆栈和跟踪时间戳计算原始配置文件数据。概要文件数据以 &lt;code&gt;fprof&lt;/code&gt; 服务器状态存储。在此步骤中，可以将跟踪数据以文本格式转储到文件或控制台。</target>
        </trans-unit>
        <trans-unit id="be14140f572829d13e013899b88b1a29c94a894b" translate="yes" xml:space="preserve">
          <source>Program used for starting Common Test from the OS command line.</source>
          <target state="translated">用于从OS命令行启动Common Test的程序。</target>
        </trans-unit>
        <trans-unit id="04fc4ca4a8116882232b1856689a04eb18a1fd86" translate="yes" xml:space="preserve">
          <source>Programmers are strongly advised not to engage in parse transformations. No support is offered for problems encountered.</source>
          <target state="translated">强烈建议程序员不要进行解析转换。对遇到的问题不提供任何支持。</target>
        </trans-unit>
        <trans-unit id="cd20cc773cac79796c578e4d9775b5144b70f227" translate="yes" xml:space="preserve">
          <source>Programming Erlang: Software for a Concurrent World (2007), Pragmatic Bookshelf, ISBN13: 9781934356005.</source>
          <target state="translated">Programming Erlang:Software for a Concurrent World (2007),Pragmatic Bookshelf,ISBN13:9781934356005.</target>
        </trans-unit>
        <trans-unit id="04bef1b7e7ac277d38fb7b2086faa2a0ce21e478" translate="yes" xml:space="preserve">
          <source>Programming Erlang: Software for a Concurrent World by Joe Armstrong; ISBN: 978-1-93435-600-5</source>
          <target state="translated">Programming Erlang:作者:Joe Armstrong;ISBN:978-1-93435-600-5。</target>
        </trans-unit>
        <trans-unit id="4fff5c0832402c080338f74960f55c82c6dba845" translate="yes" xml:space="preserve">
          <source>Programming concurrent Erlang systems is the subject of a separate book. However, it is worthwhile to draw attention to the following features, which permit concurrent processes to exist in a &lt;code&gt;Mnesia&lt;/code&gt; system:</source>
          <target state="translated">对并发Erlang系统进行编程是另一本书的主题。但是，值得关注以下功能，这些功能允许并发进程存在于 &lt;code&gt;Mnesia&lt;/code&gt; 系统中：</target>
        </trans-unit>
        <trans-unit id="f766991f1e78a66d69e7e9b58e7feee18bce8c08" translate="yes" xml:space="preserve">
          <source>Programs should always operate on a normalized form and compare canonical-equivalent Unicode characters as equal. All characters should thus be normalized to one form once on the system borders. One of the following functions can convert characters to their normalized forms &lt;code&gt;&lt;a href=&quot;#characters_to_nfc_list-1&quot;&gt;characters_to_nfc_list/1&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#characters_to_nfc_binary-1&quot;&gt;characters_to_nfc_binary/1&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#characters_to_nfd_list-1&quot;&gt;characters_to_nfd_list/1&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#characters_to_nfd_binary-1&quot;&gt;characters_to_nfd_binary/1&lt;/a&gt;&lt;/code&gt;. For general text &lt;code&gt;&lt;a href=&quot;#characters_to_nfc_list-1&quot;&gt;characters_to_nfc_list/1&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#characters_to_nfc_binary-1&quot;&gt;characters_to_nfc_binary/1&lt;/a&gt;&lt;/code&gt; is preferred, and for identifiers one of the compatibility normalization functions, such as &lt;code&gt;&lt;a href=&quot;#characters_to_nfkc_list-1&quot;&gt;characters_to_nfkc_list/1&lt;/a&gt;&lt;/code&gt;, is preferred for security reasons. The normalization functions where introduced in OTP 20. Additional information on normalization can be found in the &lt;code&gt;&lt;a href=&quot;http://unicode.org/faq/normalization.html&quot;&gt;Unicode FAQ&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">程序应始终以规范化形式运行，并将相等的规范等效Unicode字符进行比较。因此，所有字符应在系统边界一次标准化为一种形式。以下功能之一可以将字符转换为它们的规范化格式 &lt;code&gt;&lt;a href=&quot;#characters_to_nfc_list-1&quot;&gt;characters_to_nfc_list/1&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;#characters_to_nfc_binary-1&quot;&gt;characters_to_nfc_binary/1&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;#characters_to_nfd_list-1&quot;&gt;characters_to_nfd_list/1&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;#characters_to_nfd_binary-1&quot;&gt;characters_to_nfd_binary/1&lt;/a&gt;&lt;/code&gt; 。对于一般文本，首选 &lt;code&gt;&lt;a href=&quot;#characters_to_nfc_list-1&quot;&gt;characters_to_nfc_list/1&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;#characters_to_nfc_binary-1&quot;&gt;characters_to_nfc_binary/1&lt;/a&gt;&lt;/code&gt; ，对于标识符，兼容性归一化功能之一，例如 &lt;code&gt;&lt;a href=&quot;#characters_to_nfkc_list-1&quot;&gt;characters_to_nfkc_list/1&lt;/a&gt;&lt;/code&gt; 出于安全原因，首选。OTP 20中引入了规范化功能。有关规范化的其他信息，可以在 &lt;code&gt;&lt;a href=&quot;http://unicode.org/faq/normalization.html&quot;&gt;Unicode FAQ&lt;/a&gt;&lt;/code&gt; 中找到。</target>
        </trans-unit>
        <trans-unit id="fc562a9bcac4fb874aa74077af2a891fe251b3ed" translate="yes" xml:space="preserve">
          <source>Programs that process plain text or binary data files.</source>
          <target state="translated">处理纯文本或二进制数据文件的程序。</target>
        </trans-unit>
        <trans-unit id="7c71281f9dbe691f92bb15faa53cb0c49a91d43a" translate="yes" xml:space="preserve">
          <source>Progress = &lt;code&gt;ignore | {CBModule, CBFunction, InitProgress}&lt;/code&gt;</source>
          <target state="translated">进展= &lt;code&gt;ignore | {CBModule, CBFunction, InitProgress}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="519ffd1265424ff9151c74fa5631e9848160fa7a" translate="yes" xml:space="preserve">
          <source>Progress report</source>
          <target state="translated">进展报告</target>
        </trans-unit>
        <trans-unit id="a3f10a152d854770b6ab1de6f50d8a4da946dbb4" translate="yes" xml:space="preserve">
          <source>Progress reports are issued as &lt;code&gt;info&lt;/code&gt; level log events, and since the default primary log level is &lt;code&gt;notice&lt;/code&gt;, these are not logged by default. To enable printing of progress reports, set the &lt;code&gt;&lt;a href=&quot;#primary_level&quot;&gt;primary log level&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;info&lt;/code&gt;.</source>
          <target state="translated">进度报告是作为 &lt;code&gt;info&lt;/code&gt; 级别日志事件发布的，并且由于默认的主日志级别是 &lt;code&gt;notice&lt;/code&gt; ，因此默认情况下不会记录这些事件。要启用打印进度报告，请将 &lt;code&gt;&lt;a href=&quot;#primary_level&quot;&gt;primary log level&lt;/a&gt;&lt;/code&gt; 设置为 &lt;code&gt;info&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2feeef99e0f2d9657de9874ba0e75f9b066346ff" translate="yes" xml:space="preserve">
          <source>Propagate the same error signal to the links of the killed process.</source>
          <target state="translated">将相同的错误信号传播到被杀进程的各个环节。</target>
        </trans-unit>
        <trans-unit id="5eb34826139e0a6c504423934bde097d38a8e5ac" translate="yes" xml:space="preserve">
          <source>Properties are not inherited from top-level groups to nested subgroups. For instance, in the previous example, the test cases in &lt;code&gt;group2&lt;/code&gt; are not executed in random order (which is the property of &lt;code&gt;group1&lt;/code&gt;).</source>
          <target state="translated">属性不会从顶级组继承到嵌套子组。例如，在前面的示例中， &lt;code&gt;group2&lt;/code&gt; 中的测试用例不是按随机顺序执行的（这是 &lt;code&gt;group1&lt;/code&gt; 的属性）。</target>
        </trans-unit>
        <trans-unit id="cf72435a6a8dfe264c2d8cbb64919ecfbaeba5bb" translate="yes" xml:space="preserve">
          <source>Property lists are ordinary lists containing entries in the form of either tuples, whose first elements are keys used for lookup and insertion, or atoms, which work as shorthand for tuples &lt;code&gt;{Atom, true}&lt;/code&gt;. (Other terms are allowed in the lists, but are ignored by this module.) If there is more than one entry in a list for a certain key, the first occurrence normally overrides any later (irrespective of the arity of the tuples).</source>
          <target state="translated">属性列表是普通列表，包含以元组（其第一个元素是用于查找和插入的键）或原子（其用作元组 &lt;code&gt;{Atom, true}&lt;/code&gt; 简写形式）的形式的条目。（列表中允许使用其他术语，但本模块将忽略这些术语。）如果某个键的列表中有多个条目，则通常第一次出现的优先于以后的出现（与元组的无关性）。</target>
        </trans-unit>
        <trans-unit id="8f3a63f6f6853f3776df6fd40f512c3bc2423c62" translate="yes" xml:space="preserve">
          <source>Property lists are useful for representing inherited properties, such as options passed to a function where a user can specify options overriding the default settings, object properties, annotations, and so on.</source>
          <target state="translated">属性列表对于表示继承的属性很有用,比如传递给函数的选项,用户可以指定覆盖默认设置的选项、对象属性、注解等。</target>
        </trans-unit>
        <trans-unit id="69ef40d1cd2975594eba3c5b03a443daf8151c13" translate="yes" xml:space="preserve">
          <source>Protocol Errors</source>
          <target state="translated">协议错误</target>
        </trans-unit>
        <trans-unit id="1b0a81e8f360216134418545602ccf414662dde9" translate="yes" xml:space="preserve">
          <source>Protocol Messages</source>
          <target state="translated">协议信息</target>
        </trans-unit>
        <trans-unit id="2e1b345b4778495a0a85f0806404f2ef32e5c47c" translate="yes" xml:space="preserve">
          <source>Protocol Overview</source>
          <target state="translated">协议概述</target>
        </trans-unit>
        <trans-unit id="c07efc54af15e46ede9045b5a09cbf868ae19105" translate="yes" xml:space="preserve">
          <source>Prototypes for the driver callback routines can be found in the &lt;code&gt;erl_driver.h&lt;/code&gt; header file.</source>
          <target state="translated">驱动程序回调例程的原型可以在 &lt;code&gt;erl_driver.h&lt;/code&gt; 头文件中找到。</target>
        </trans-unit>
        <trans-unit id="f653b51c616d14c355967d6de899534adb195231" translate="yes" xml:space="preserve">
          <source>Prototyping</source>
          <target state="translated">Prototyping</target>
        </trans-unit>
        <trans-unit id="1f374df4d309c019bc6178248783e9390656a10a" translate="yes" xml:space="preserve">
          <source>Provide a fun to implement your own logging of the SSH message SSH_MSG_DEBUG. The last three parameters are from the message, see &lt;code&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc4253#section-11.3&quot;&gt;RFC 4253, section 11.3&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;#type-connection_ref&quot;&gt;connection_ref()&lt;/a&gt;&lt;/code&gt; is the reference to the connection on which the message arrived. The return value from the fun is not checked.</source>
          <target state="translated">提供乐趣来实现您自己的SSH消息SSH_MSG_DEBUG的日志记录。最后三个参数来自消息，请参阅 &lt;code&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc4253#section-11.3&quot;&gt;RFC 4253, section 11.3&lt;/a&gt;&lt;/code&gt; 。所述 &lt;code&gt;&lt;a href=&quot;#type-connection_ref&quot;&gt;connection_ref()&lt;/a&gt;&lt;/code&gt; 是参考其上消息到达的连接。不检查乐趣的返回值。</target>
        </trans-unit>
        <trans-unit id="08a2504f6114a9c36ec403b96c7c302a482e126f" translate="yes" xml:space="preserve">
          <source>Provide default headers for the HTTP servers responses. Note that this option may override built-in defaults.</source>
          <target state="translated">为HTTP服务器的响应提供默认头信息。请注意,这个选项可以覆盖内置的默认值。</target>
        </trans-unit>
        <trans-unit id="2bca3403285a45fca5f582216c20e2b31fefe923" translate="yes" xml:space="preserve">
          <source>Provide some simple support for sequential tracing.</source>
          <target state="translated">为顺序跟踪提供一些简单的支持。</target>
        </trans-unit>
        <trans-unit id="410239829c19fb6bb8f95e6437ab94a49a5db9bc" translate="yes" xml:space="preserve">
          <source>Provides a decryption key for &lt;code&gt;&lt;a href=&quot;config_file_chapter#encrypted_config_files&quot;&gt;encrypted configuration files&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">提供用于 &lt;code&gt;&lt;a href=&quot;config_file_chapter#encrypted_config_files&quot;&gt;encrypted configuration files&lt;/a&gt;&lt;/code&gt; 的解密密钥。</target>
        </trans-unit>
        <trans-unit id="903b44886dfe622745223d5547c0cc9c2859f2f6" translate="yes" xml:space="preserve">
          <source>Provides a fun to implement your own logging or other action when an unexpected message arrives. If the fun returns &lt;code&gt;report&lt;/code&gt; the usual info report is issued but if &lt;code&gt;skip&lt;/code&gt; is returned no report is generated.</source>
          <target state="translated">当意外消息到达时，提供了一种有趣的方式来实现您自己的日志记录或其他操作。如果乐趣返回 &lt;code&gt;report&lt;/code&gt; ，则发布常规信息报告，但如果返回 &lt;code&gt;skip&lt;/code&gt; ，则不生成报告。</target>
        </trans-unit>
        <trans-unit id="a8122202de6a4acb088d775f3973da908d4fecce" translate="yes" xml:space="preserve">
          <source>Provides a fun to implement your own logging when a user authenticates to the server.</source>
          <target state="translated">提供了一个有趣的实现自己的日志,当用户认证到服务器时。</target>
        </trans-unit>
        <trans-unit id="6ae014fb7ce0d00946111ea1f6afbd515ba680d3" translate="yes" xml:space="preserve">
          <source>Provides a fun to implement your own logging when a user fails to authenticate.</source>
          <target state="translated">提供了一个有趣的实现自己的日志,当用户认证失败时。</target>
        </trans-unit>
        <trans-unit id="693b50c9238225aebe1905f9a4bbeddbe802666a" translate="yes" xml:space="preserve">
          <source>Provides a fun to implement your own logging when the peer disconnects.</source>
          <target state="translated">提供了一个有趣的实现自己的日志,当对等体断开时。</target>
        </trans-unit>
        <trans-unit id="2622540d75e1ce825909c4c27dcf1a5e81b022b9" translate="yes" xml:space="preserve">
          <source>Provides a function for password validation. This could used for calling an external system or handeling passwords stored as hash values.</source>
          <target state="translated">提供一个密码验证的功能。可用于调用外部系统或处理存储为哈希值的密码。</target>
        </trans-unit>
        <trans-unit id="b02519300dbb28165f9b31d399e480b06aff4a3e" translate="yes" xml:space="preserve">
          <source>Provides a function for password validation. This function is called with user and password as strings, and returns:</source>
          <target state="translated">提供一个用于密码验证的函数。调用用户和密码作为字符串,并返回该函数。</target>
        </trans-unit>
        <trans-unit id="6aa5ff7905134531fc9760a2816fc0228545f5bd" translate="yes" xml:space="preserve">
          <source>Provides a function for tab-completion (expansion) like the Erlang shell. This function is called when the user presses the &lt;strong&gt;Tab&lt;/strong&gt; key. The expansion is active when calling line-reading functions, such as &lt;code&gt;&lt;a href=&quot;#get_line-1&quot;&gt;get_line/1,2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">提供选项卡补全（扩展）功能，例如Erlang shell。当用户按下&lt;strong&gt;Tab&lt;/strong&gt;键时，将调用此功能。调用行读取函数（例如 &lt;code&gt;&lt;a href=&quot;#get_line-1&quot;&gt;get_line/1,2&lt;/a&gt;&lt;/code&gt; )时，扩展处于活动状态。</target>
        </trans-unit>
        <trans-unit id="0126483ea757d9c456fac59884fa78b1895b0c1d" translate="yes" xml:space="preserve">
          <source>Provides a global password that authenticates any user.</source>
          <target state="translated">提供一个全局密码,可以验证任何用户的身份。</target>
        </trans-unit>
        <trans-unit id="bcf2a440040f1adc832c9af437538a1274c09fbb" translate="yes" xml:space="preserve">
          <source>Provides a list of the scheme and their default port numbers supported (by default) by this utility.</source>
          <target state="translated">提供本实用程序支持的方案及其默认端口号的列表(默认情况下)。</target>
        </trans-unit>
        <trans-unit id="882538ba1337b4bc7c8a6a34a8a92a54495af42b" translate="yes" xml:space="preserve">
          <source>Provides a name for the NIF that is scheduled for execution. If it cannot be converted to an atom, &lt;code&gt;enif_schedule_nif&lt;/code&gt; returns a &lt;code&gt;badarg&lt;/code&gt; exception.</source>
          <target state="translated">提供计划执行的NIF的名称。如果无法将其转换为原子，则 &lt;code&gt;enif_schedule_nif&lt;/code&gt; 返回 &lt;code&gt;badarg&lt;/code&gt; 异常。</target>
        </trans-unit>
        <trans-unit id="9a7fa191207bdbdcf1355b3abd90f2d61475ca15" translate="yes" xml:space="preserve">
          <source>Provides a password for password authentication. If this option is not given, the user is asked for a password, if the password authentication method is attempted.</source>
          <target state="translated">提供密码认证用的密码,如果不给这个选项,在尝试密码认证方式时,会要求用户输入密码。如果没有给出这个选项,如果尝试密码认证方式,则要求用户输入密码。</target>
        </trans-unit>
        <trans-unit id="2e6245a80cc81adaed06ea9939826c09d6c8984a" translate="yes" xml:space="preserve">
          <source>Provides a way of filtering log events based on a &lt;code&gt;domain&lt;/code&gt; field in &lt;code&gt;Metadata&lt;/code&gt;.</source>
          <target state="translated">提供一种基于 &lt;code&gt;Metadata&lt;/code&gt; 的 &lt;code&gt;domain&lt;/code&gt; 字段过滤日志事件的方法。</target>
        </trans-unit>
        <trans-unit id="955f63ea342c9ccdf55e0b9ef1640dd09419b809" translate="yes" xml:space="preserve">
          <source>Provides a way of filtering log events based on the log level.</source>
          <target state="translated">提供了一种根据日志级别过滤日志事件的方法。</target>
        </trans-unit>
        <trans-unit id="917a3a6ad732d2f5671eafaeed7176e9ef18f549" translate="yes" xml:space="preserve">
          <source>Provides access to the registry on Windows.</source>
          <target state="translated">提供对Windows注册表的访问。</target>
        </trans-unit>
        <trans-unit id="05ac5290f4045fe43f63e391afe9724d565253dd" translate="yes" xml:space="preserve">
          <source>Provides an Erlang interface to communicate with relational SQL-databases. It is built on top of Microsofts ODBC interface and therefore requires that you have an ODBC driver to the database that you want to connect to. The Erlang ODBC application is designed using the version 3.0 of the ODBC-standard, however using the option &lt;code&gt;{scrollable_cursors, off}&lt;/code&gt; for a connection has been known to make it work for at least some 2.X drivers.</source>
          <target state="translated">提供一个Erlang接口以与关系SQL数据库进行通信。它基于Microsoft的ODBC接口构建，因此要求您具有要连接到的数据库的ODBC驱动程序。Erlang ODBC应用程序是使用ODBC标准的3.0版设计的，但是使用连接选项 &lt;code&gt;{scrollable_cursors, off}&lt;/code&gt; 来使它至少可用于某些2.X驱动程序。</target>
        </trans-unit>
        <trans-unit id="f79e1bbf3ee82741dfe60b12a6243392fa5cd563" translate="yes" xml:space="preserve">
          <source>Provides base64 encode and decode, see &lt;code&gt;&lt;a href=&quot;https://www.ietf.org/rfc/rfc2045.txt&quot;&gt;RFC 2045&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">提供base64编码和解码，请参阅 &lt;code&gt;&lt;a href=&quot;https://www.ietf.org/rfc/rfc2045.txt&quot;&gt;RFC 2045&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4e9af3af74f64719e08406feffc5d04267f3391b" translate="yes" xml:space="preserve">
          <source>Provides base64 encode and decode, see RFC 2045.</source>
          <target state="translated">提供base64编码和解码,见RFC 2045。</target>
        </trans-unit>
        <trans-unit id="0767fcb9cf2d27bebf009a5c390e3880f87527f9" translate="yes" xml:space="preserve">
          <source>Provides extended diagnostics, use &lt;code&gt;&lt;a href=&quot;#error_string-1&quot;&gt;error_string/1.&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">提供扩展的诊断，使用 &lt;code&gt;&lt;a href=&quot;#error_string-1&quot;&gt;error_string/1.&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e583caf4df904713adcce17bae909ffac9b6bbf8" translate="yes" xml:space="preserve">
          <source>Provides functions to handle public-key infrastructure, for details see &lt;code&gt;public_key(6)&lt;/code&gt;.</source>
          <target state="translated">提供处理公钥基础结构的函数，有关详细信息，请参见 &lt;code&gt;public_key(6)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9b490ba126a125b5dbe6b1345ee3fd68b833fe2f" translate="yes" xml:space="preserve">
          <source>Provides information about the FIPS operating status of crypto and the underlying OpenSSL library. If crypto was built with FIPS support this can be either &lt;code&gt;enabled&lt;/code&gt; (when running in FIPS mode) or &lt;code&gt;not_enabled&lt;/code&gt;. For other builds this value is always &lt;code&gt;not_supported&lt;/code&gt;.</source>
          <target state="translated">提供有关加密的FIPS操作状态和基础OpenSSL库的信息。如果crypto是通过FIPS支持构建的，则可以 &lt;code&gt;enabled&lt;/code&gt; （在FIPS模式下运行时）或 &lt;code&gt;not_enabled&lt;/code&gt; 。对于其他构建，此值始终为 &lt;code&gt;not_supported&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8e528ef223145dad4b73216f63054349090dcd33" translate="yes" xml:space="preserve">
          <source>Provides more control than the &lt;code&gt;load/2&lt;/code&gt;/&lt;code&gt;reload/2&lt;/code&gt; and &lt;code&gt;load_driver/2&lt;/code&gt;/&lt;code&gt;reload_driver/2&lt;/code&gt; interfaces. It never waits for completion of other operations related to the driver, but immediately returns the status of the driver as one of the following:</source>
          <target state="translated">提供比 &lt;code&gt;load/2&lt;/code&gt; / &lt;code&gt;reload/2&lt;/code&gt; 和 &lt;code&gt;load_driver/2&lt;/code&gt; / &lt;code&gt;reload_driver/2&lt;/code&gt; 接口更多的控制。它从不等待完成与驱动程序有关的其他操作，但会立即返回驱动程序的状态，其中包括以下一种：</target>
        </trans-unit>
        <trans-unit id="15c9038fc5b1524a7c052b7a20860ee70d660228" translate="yes" xml:space="preserve">
          <source>Provides passwords for password authentication. The passwords are used when someone tries to connect to the server and public key user-authentication fails. The option provides a list of valid usernames and the corresponding passwords.</source>
          <target state="translated">为密码认证提供密码。当有人试图连接到服务器而公钥用户认证失败时,就会使用这些密码。该选项提供了一个有效的用户名和相应的密码列表。</target>
        </trans-unit>
        <trans-unit id="b074a4910398fb49d04cfd408836de827bf0e394" translate="yes" xml:space="preserve">
          <source>Provides the flag &lt;code&gt;-boot&lt;/code&gt; specifying the boot file of the release version found (&lt;code&gt;&quot;releases/FIRST/start.boot&quot;&lt;/code&gt;).</source>
          <target state="translated">提供了标志 &lt;code&gt;-boot&lt;/code&gt; 指定的发行版本的启动文件中（ &lt;code&gt;&quot;releases/FIRST/start.boot&quot;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="a72441e1164e80082373bf66638549573dc043ff" translate="yes" xml:space="preserve">
          <source>Provides the name and version of the libraries used by crypto.</source>
          <target state="translated">提供crypto使用的库的名称和版本。</target>
        </trans-unit>
        <trans-unit id="77276a6c8bb030519317824295c69e75a13fdde9" translate="yes" xml:space="preserve">
          <source>Provides the username. If this option is not given, &lt;code&gt;ssh&lt;/code&gt; reads from the environment (&lt;code&gt;LOGNAME&lt;/code&gt; or &lt;code&gt;USER&lt;/code&gt; on UNIX, &lt;code&gt;USERNAME&lt;/code&gt; on Windows).</source>
          <target state="translated">提供用户名。如果未提供此选项，则 &lt;code&gt;ssh&lt;/code&gt; 从环境中读取（在UNIX 上为 &lt;code&gt;LOGNAME&lt;/code&gt; 或 &lt;code&gt;USER&lt;/code&gt; ，在Windows 上为 &lt;code&gt;USERNAME&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="b09826e2df02ed043b8710bf898e2179004a2680" translate="yes" xml:space="preserve">
          <source>Provides your own CLI implementation in a daemon.</source>
          <target state="translated">在守护进程中提供自己的CLI实现。</target>
        </trans-unit>
        <trans-unit id="6337706f6e77732d06ad836d88d60b82dd945341" translate="yes" xml:space="preserve">
          <source>Proxy Agents</source>
          <target state="translated">代理商</target>
        </trans-unit>
        <trans-unit id="a7d3fe08253cdc3ad07d2f5dabfe674d1aa52bd9" translate="yes" xml:space="preserve">
          <source>Proxy-Host AVP</source>
          <target state="translated">代理-主机AVP</target>
        </trans-unit>
        <trans-unit id="aaa9a1afcf35a6a510bb9543bf0d6f52952fb297" translate="yes" xml:space="preserve">
          <source>Proxy-Info AVP</source>
          <target state="translated">代理信息AVP</target>
        </trans-unit>
        <trans-unit id="64812682c3ee84678a9b41d9cc2b26f19b76cc5c" translate="yes" xml:space="preserve">
          <source>Proxy-State AVP</source>
          <target state="translated">代理国家AVP</target>
        </trans-unit>
        <trans-unit id="40db0b3883f06edc9792ae47fe2fd8fc1148af25" translate="yes" xml:space="preserve">
          <source>Psalter_Pahlavi</source>
          <target state="translated">Psalter_Pahlavi</target>
        </trans-unit>
        <trans-unit id="d0fdfc27d15a90f7600623009abb8fe006b3ef96" translate="yes" xml:space="preserve">
          <source>Pseudo function that by a &lt;code&gt;parse_transform&lt;/code&gt; translates &lt;code&gt;LiteralFun&lt;/code&gt; typed as parameter in the function call to a &lt;code&gt;&lt;a href=&quot;#match_spec&quot;&gt;match specification&lt;/a&gt;&lt;/code&gt;. With &quot;literal&quot; is meant that the fun must textually be written as the parameter of the function, it cannot be held in a variable that in turn is passed to the function.</source>
          <target state="translated">伪功能，通过一个 &lt;code&gt;parse_transform&lt;/code&gt; 翻译 &lt;code&gt;LiteralFun&lt;/code&gt; 类型作为函数调用的参数 &lt;code&gt;&lt;a href=&quot;#match_spec&quot;&gt;match specification&lt;/a&gt;&lt;/code&gt; 。&amp;ldquo;文字&amp;rdquo;是指必须以文字形式将乐趣写成函数的参数，不能将其保存在依次传递给函数的变量中。</target>
        </trans-unit>
        <trans-unit id="b76821618a6e81543a9111bbe440dd93c8037696" translate="yes" xml:space="preserve">
          <source>Pseudo function that by means of a &lt;code&gt;parse_transform&lt;/code&gt; translates the &lt;strong&gt;literal&lt;/strong&gt;&lt;code&gt;fun()&lt;/code&gt; typed as parameter in the function call to a match specification as described in the &lt;code&gt;match_spec&lt;/code&gt; manual of ERTS users guide. (with literal I mean that the &lt;code&gt;fun()&lt;/code&gt; needs to textually be written as the parameter of the function, it cannot be held in a variable which in turn is passed to the function).</source>
          <target state="translated">伪函数，该函数通过 &lt;code&gt;parse_transform&lt;/code&gt; 将在函数调用中键入为参数的&lt;strong&gt;文字&lt;/strong&gt; &lt;code&gt;fun()&lt;/code&gt; 转换为匹配规范，如ERTS用户指南的 &lt;code&gt;match_spec&lt;/code&gt; 手册中所述。（从字面上看，我的意思是 &lt;code&gt;fun()&lt;/code&gt; 需要按文本形式编写为函数的参数，不能将其保存在变量中，该变量又被传递给函数）。</target>
        </trans-unit>
        <trans-unit id="ad66a675910e9dc1b80a46c98524572b8db0801a" translate="yes" xml:space="preserve">
          <source>Pseudo random number generation.</source>
          <target state="translated">伪随机数生成。</target>
        </trans-unit>
        <trans-unit id="3d62ca4c64f68f59f57794d1a577fae252d0de3d" translate="yes" xml:space="preserve">
          <source>Pseudo-random number generation.</source>
          <target state="translated">伪随机数生成。</target>
        </trans-unit>
        <trans-unit id="c98572a8cdc44f29acd6d9bafcc787680c0311e9" translate="yes" xml:space="preserve">
          <source>Public-key data (keys, certificates, and so on) can be stored in Privacy Enhanced Mail (PEM) format. The PEM files have the following structure:</source>
          <target state="translated">公钥数据(密钥、证书等)可以以隐私增强邮件(PEM)格式存储。PEM文件的结构如下:</target>
        </trans-unit>
        <trans-unit id="af9d874c62240cf5f3756c1a09f53a1acbbe30fb" translate="yes" xml:space="preserve">
          <source>Public-key decryption using the private key. See also &lt;code&gt;crypto:private_decrypt/4&lt;/code&gt;</source>
          <target state="translated">使用私钥进行公钥解密。另见 &lt;code&gt;crypto:private_decrypt/4&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0d0b4eff2289312e196864ad9ede672c54ac16fd" translate="yes" xml:space="preserve">
          <source>Public-key decryption using the public key. See also &lt;code&gt;crypto:public_decrypt/4&lt;/code&gt;</source>
          <target state="translated">使用公钥进行公钥解密。另见 &lt;code&gt;crypto:public_decrypt/4&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1c9a6fa031fc4d41c5bb997e94e3205b5bde379c" translate="yes" xml:space="preserve">
          <source>Public-key encryption using the private key. See also &lt;code&gt;crypto:private_encrypt/4&lt;/code&gt;.</source>
          <target state="translated">使用私钥进行公钥加密。另请参见 &lt;code&gt;crypto:private_encrypt/4&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b474ab2cacf9c0bf60c2569f1a89c4cf597b125c" translate="yes" xml:space="preserve">
          <source>Public-key encryption using the public key. See also &lt;code&gt;crypto:public_encrypt/4&lt;/code&gt;.</source>
          <target state="translated">使用公钥进行公钥加密。另请参见 &lt;code&gt;crypto:public_encrypt/4&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="68fc7bd4bc44e3818645b5f17ee1089ffb95b680" translate="yes" xml:space="preserve">
          <source>Punctuation</source>
          <target state="translated">Punctuation</target>
        </trans-unit>
        <trans-unit id="9a2f2d19b27f34b47025e9233d9cd866b4bd3b4e" translate="yes" xml:space="preserve">
          <source>Punctuation character</source>
          <target state="translated">标点符号</target>
        </trans-unit>
        <trans-unit id="82792519d207c87b83fb05059a79c1df3520b2eb" translate="yes" xml:space="preserve">
          <source>Punctuation characters</source>
          <target state="translated">标点符号</target>
        </trans-unit>
        <trans-unit id="0438651b1551394f1e2bbfd8ad53fbbf577875d4" translate="yes" xml:space="preserve">
          <source>Punctuation space</source>
          <target state="translated">标点符号空间</target>
        </trans-unit>
        <trans-unit id="f4845e6e07d3e7c50eaf916600cc5ee92c07d965" translate="yes" xml:space="preserve">
          <source>Purges and loads, or reloads, a module by calling &lt;code&gt;code:purge(Module)&lt;/code&gt; followed by &lt;code&gt;code:load_file(Module)&lt;/code&gt;.</source>
          <target state="translated">通过调用 &lt;code&gt;code:purge(Module)&lt;/code&gt; 和 &lt;code&gt;code:load_file(Module)&lt;/code&gt; 来清除和加载或重新加载模块。</target>
        </trans-unit>
        <trans-unit id="2a530eeffee5c0860d74ab29d23d89f4632d5774" translate="yes" xml:space="preserve">
          <source>Purges each module &lt;code&gt;Mod&lt;/code&gt;, that is, removes the old code. Notice that any process executing purged code is killed.</source>
          <target state="translated">清除每个模块 &lt;code&gt;Mod&lt;/code&gt; ，即删除旧代码。请注意，执行清除代码的所有进程都会被杀死。</target>
        </trans-unit>
        <trans-unit id="3fdb75c711668c4160644fd3a6e8e5aebaaf8245" translate="yes" xml:space="preserve">
          <source>Purges the code for &lt;code&gt;Module&lt;/code&gt;, that is, removes code marked as old, but only if no processes linger in it.</source>
          <target state="translated">清除 &lt;code&gt;Module&lt;/code&gt; 的代码，即，删除标记为旧的代码，但前提是没有任何代码在其中徘徊。</target>
        </trans-unit>
        <trans-unit id="3d8198c900f27b7b2a03e448756c517424e92bed" translate="yes" xml:space="preserve">
          <source>Purges the code for &lt;code&gt;Module&lt;/code&gt;, that is, removes code marked as old. If some processes still linger in the old code, these processes are killed before the code is removed.</source>
          <target state="translated">清除 &lt;code&gt;Module&lt;/code&gt; 的代码，即删除标记为旧的代码。如果某些进程仍在旧代码中徘徊，则在删除代码之前将这些进程杀死。</target>
        </trans-unit>
        <trans-unit id="4cdaf8c1d6cdda09ba5cdf41daf294b6c9ed7786" translate="yes" xml:space="preserve">
          <source>Purists may argue that this should be modelled with a separate state machine that sends pre-processed events to the main state machine, but to decrease overhead the small pre-processing state machine can be implemented in the common state event handling of the main state machine using a few state data variables that then sends the pre-processed events as internal events to the main state machine. Using internal events also can make it easier to synchronize the state machines.</source>
          <target state="translated">纯粹主义者可能会认为应该用一个单独的状态机来建模,将预处理的事件发送到主状态机,但是为了减少开销,可以在主状态机的通用状态事件处理中使用几个状态数据变量来实现小型预处理状态机,然后将预处理的事件作为内部事件发送到主状态机。使用内部事件也可以使状态机更容易同步。</target>
        </trans-unit>
        <trans-unit id="10c01ec6868afc102597a3ed42373e9470221d26" translate="yes" xml:space="preserve">
          <source>Pushing back characters gives you unexpected possibilities to cause the scanner to loop!</source>
          <target state="translated">推回字符给你意想不到的可能性,使扫描仪循环!</target>
        </trans-unit>
        <trans-unit id="4fe937319833d21c895af7373098e512f06998b1" translate="yes" xml:space="preserve">
          <source>Put the marker on a function name and double click to go to the definition of the function. If the function is defined in another module, that module will be loaded and added to the page list.</source>
          <target state="translated">将标记放在函数名上,双击进入函数的定义。如果函数在其他模块中定义,该模块将被加载并添加到页面列表中。</target>
        </trans-unit>
        <trans-unit id="5c334594f2e0d971a5e8ed41a49b4ac58e9cff76" translate="yes" xml:space="preserve">
          <source>Put their names in the association file.</source>
          <target state="translated">把他们的名字放在协会文件中。</target>
        </trans-unit>
        <trans-unit id="267984807457cef8b61168f668ee488edeae227f" translate="yes" xml:space="preserve">
          <source>Puts data at the head of the driver queue. The data in &lt;code&gt;buf&lt;/code&gt; is copied (&lt;code&gt;len&lt;/code&gt; bytes) and placed at the beginning of the queue.</source>
          <target state="translated">将数据放在驱动程序队列的开头。复制 &lt;code&gt;buf&lt;/code&gt; 中的数据（ &lt;code&gt;len&lt;/code&gt; 个字节）并将其放置在队列的开头。</target>
        </trans-unit>
        <trans-unit id="9e27e158ac5c5a01e234c267f7eda9d6f033aceb" translate="yes" xml:space="preserve">
          <source>Puts data in the binary &lt;code&gt;bin&lt;/code&gt;, at &lt;code&gt;offset&lt;/code&gt; with length &lt;code&gt;len&lt;/code&gt; at the head of the driver queue. It is most often faster than &lt;code&gt;&lt;a href=&quot;#driver_pushq&quot;&gt;driver_pushq&lt;/a&gt;&lt;/code&gt;, because no data must be copied.</source>
          <target state="translated">将数据放入二进制 &lt;code&gt;bin&lt;/code&gt; 中， &lt;code&gt;offset&lt;/code&gt; 长度为 &lt;code&gt;len&lt;/code&gt; 在驱动程序队列的开头。它通常比 &lt;code&gt;&lt;a href=&quot;#driver_pushq&quot;&gt;driver_pushq&lt;/a&gt;&lt;/code&gt; 更快，因为不必复制任何数据。</target>
        </trans-unit>
        <trans-unit id="35a65ec39446238a0a0eac9475e71d6cef8cf751" translate="yes" xml:space="preserve">
          <source>Puts the Erlang term &lt;code&gt;TraceInfo&lt;/code&gt; into the sequential trace output if the calling process currently is executing within a sequential trace and the &lt;code&gt;print&lt;/code&gt; flag of the trace token is set.</source>
          <target state="translated">如果调用进程当前正在顺序跟踪中执行并且设置了跟踪令牌的 &lt;code&gt;print&lt;/code&gt; 标志，则将Erlang术语 &lt;code&gt;TraceInfo&lt;/code&gt; 放入顺序跟踪输出中。</target>
        </trans-unit>
        <trans-unit id="042a67e13942247a8e41ae9098af6d0aa9580018" translate="yes" xml:space="preserve">
          <source>Puts the calling process into a wait state where its memory allocation has been reduced as much as possible. This is useful if the process does not expect to receive any messages soon.</source>
          <target state="translated">使调用进程进入一个等待状态,在这个状态下,内存分配已经尽可能地减少。如果该进程不希望很快收到任何消息,这很有用。</target>
        </trans-unit>
        <trans-unit id="d013f0295b6c01c558d00c5ba53aca86377c9dd9" translate="yes" xml:space="preserve">
          <source>Puts the data in &lt;code&gt;ev&lt;/code&gt;, skipping the first &lt;code&gt;skip&lt;/code&gt; bytes of it, at the head of the driver queue. It is faster than &lt;code&gt;&lt;a href=&quot;#driver_pushq&quot;&gt;driver_pushq&lt;/a&gt;&lt;/code&gt;, because no data must be copied.</source>
          <target state="translated">将数据放入 &lt;code&gt;ev&lt;/code&gt; ，在驱动程序队列的开头跳过第一个 &lt;code&gt;skip&lt;/code&gt; 字节。它比 &lt;code&gt;&lt;a href=&quot;#driver_pushq&quot;&gt;driver_pushq&lt;/a&gt;&lt;/code&gt; 更快，因为不必复制任何数据。</target>
        </trans-unit>
        <trans-unit id="0e3da342d32b71066e0ff7598d5155af43136f49" translate="yes" xml:space="preserve">
          <source>Pythagorean triplets are sets of integers &lt;code&gt;{A,B,C}&lt;/code&gt; such that &lt;code&gt;A**2 + B**2 = C**2&lt;/code&gt;.</source>
          <target state="translated">勾股三胞胎是整数 &lt;code&gt;{A,B,C}&lt;/code&gt; 的集合，使得 &lt;code&gt;A**2 + B**2 = C**2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cbdad7e832388f477b308e785e461d43f185fd4b" translate="yes" xml:space="preserve">
          <source>Q: Can I build something that looks exactly as the commercial release?</source>
          <target state="translated">问:我可以建立一个和商业版本一模一样的东西吗?</target>
        </trans-unit>
        <trans-unit id="9c33e934c4ed63e98eb95622daa029fee8f2aee2" translate="yes" xml:space="preserve">
          <source>Q: Can you help me setup X in Cygwin/MSYS/MSYS2?</source>
          <target state="translated">问:你能帮我在Cygwin/MSYS/MSYS2中设置X吗?</target>
        </trans-unit>
        <trans-unit id="2a92f9f3084b89244941d6f295251370a4ed363a" translate="yes" xml:space="preserve">
          <source>Q: Can/will I build a Cygwin binary with the procedure you describe?</source>
          <target state="translated">问:我可以/愿意用你描述的程序构建Cygwin二进制吗?</target>
        </trans-unit>
        <trans-unit id="8fdbaf479bc8188c169196a96796d9e462c3fb1f" translate="yes" xml:space="preserve">
          <source>Q: Hah, I saw you, you used GCC even though you said you didn't!</source>
          <target state="translated">问:呵呵,我看到你了,你说你没有用GCC也用了!</target>
        </trans-unit>
        <trans-unit id="4d33d2562fd29f6e1c9fc76d264215b3d5aeeca3" translate="yes" xml:space="preserve">
          <source>Q: OK, you need VC++, but now you've started to demand a quite recent (and expensive) version of Visual Studio. Why?</source>
          <target state="translated">问:好吧,你需要VC++,但现在你已经开始要求使用一个相当新的(而且昂贵的)Visual Studio版本。为什么呢?</target>
        </trans-unit>
        <trans-unit id="5fa7db24f83822063f97229323a06aa3a0877f5d" translate="yes" xml:space="preserve">
          <source>Q: So how does it all work then?</source>
          <target state="translated">问:那么这一切是如何进行的呢?</target>
        </trans-unit>
        <trans-unit id="4848dd0945c44e751b1591373d20f6801c1998a4" translate="yes" xml:space="preserve">
          <source>Q: So now there's a MS VC++ project file somewhere and I can build OTP using the nifty VC++ GUI?</source>
          <target state="translated">问:那么现在某个地方有一个MS VC++项目文件,我就可以用nifty VC++GUI来构建OTP了?</target>
        </trans-unit>
        <trans-unit id="7beb25dc53e0563d452b76025a13d007739f049b" translate="yes" xml:space="preserve">
          <source>Q: So, now I can build Erlang using GCC on Windows?</source>
          <target state="translated">问:那么,现在我可以在Windows上使用GCC构建Erlang了?</target>
        </trans-unit>
        <trans-unit id="1f93ee200a556071dcfd3098474bd38969c35084" translate="yes" xml:space="preserve">
          <source>Q: Which version of Cygwin/MSYS/MSYS2 and other tools do you use then?</source>
          <target state="translated">问:那你用哪个版本的Cygwin/MSYS/MSYS2和其他工具?</target>
        </trans-unit>
        <trans-unit id="3824ecc6208efe4bfe24a674a751c9d0ca079f07" translate="yes" xml:space="preserve">
          <source>Q: Why haven't you got rid of VC++ then, you ******?</source>
          <target state="translated">问:那你为什么还没有摆脱VC++,你这个****?</target>
        </trans-unit>
        <trans-unit id="cb20cfbdc096ea44ab338185d58c6e58b37996ba" translate="yes" xml:space="preserve">
          <source>Q: You use and need Cygwin, but then you haven't taken the time to port Erlang to the Cygwin environment but instead focus on your commercial release, is that really ethical?</source>
          <target state="translated">问:你使用并需要Cygwin,但你却没有花时间把Erlang移植到Cygwin环境中,而是专注于你的商业发布,这真的是道德吗?</target>
        </trans-unit>
        <trans-unit id="ab248038951d6f5bbf2e6b69cbcd23902b8c49b9" translate="yes" xml:space="preserve">
          <source>QLC</source>
          <target state="translated">QLC</target>
        </trans-unit>
        <trans-unit id="44b991a394914f0303f96d96a457d83497af8f65" translate="yes" xml:space="preserve">
          <source>QLC can be used as a database programming language for Mnesia. It includes a notation called &quot;list comprehensions&quot; and can be used to make complex database queries over a set of tables.</source>
          <target state="translated">QLC可以作为Mnesia的数据库编程语言。它包括一个称为 &quot;列表理解 &quot;的符号,可以用来对一组表进行复杂的数据库查询。</target>
        </trans-unit>
        <trans-unit id="2b344639b609596306bc487c87eb37bfda190216" translate="yes" xml:space="preserve">
          <source>QLC can optimize the query compiler for the Mnesia DBMS, essentially making the DBMS more efficient.</source>
          <target state="translated">QLC可以优化Mnesia DBMS的查询编译器,从本质上提高DBMS的效率。</target>
        </trans-unit>
        <trans-unit id="5d2d92876611f40bde581d69101f8fddd8c14363" translate="yes" xml:space="preserve">
          <source>QLC queries can also be used to search &lt;code&gt;Mnesia&lt;/code&gt; tables. By using the function &lt;code&gt;&lt;a href=&quot;mnesia#table-1&quot;&gt;mnesia:table/[1|2]&lt;/a&gt;&lt;/code&gt; as the generator inside a QLC query, you let the query operate on a &lt;code&gt;Mnesia&lt;/code&gt; table. &lt;code&gt;Mnesia&lt;/code&gt;-specific options to &lt;code&gt;mnesia:table/2&lt;/code&gt; are &lt;code&gt;{lock, Lock}&lt;/code&gt;, &lt;code&gt;{n_objects,Integer}&lt;/code&gt;, and &lt;code&gt;{traverse, SelMethod}&lt;/code&gt;:</source>
          <target state="translated">QLC查询还可以用于搜索 &lt;code&gt;Mnesia&lt;/code&gt; 表。通过使用函数 &lt;code&gt;&lt;a href=&quot;mnesia#table-1&quot;&gt;mnesia:table/[1|2]&lt;/a&gt;&lt;/code&gt; 作为QLC查询中的生成器，您可以使查询对 &lt;code&gt;Mnesia&lt;/code&gt; 表进行操作。 &lt;code&gt;Mnesia&lt;/code&gt; 的特异性选项 &lt;code&gt;mnesia:table/2&lt;/code&gt; 是 &lt;code&gt;{lock, Lock}&lt;/code&gt; ， &lt;code&gt;{n_objects,Integer}&lt;/code&gt; ，和 &lt;code&gt;{traverse, SelMethod}&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="d2442c21b812ded9c8602b0eb848411eef6d3f41" translate="yes" xml:space="preserve">
          <source>QLC queries can be performed in all these activity contexts (&lt;code&gt;transaction&lt;/code&gt;, &lt;code&gt;sync_transaction&lt;/code&gt;, &lt;code&gt;async_dirty&lt;/code&gt;, &lt;code&gt;sync_dirty&lt;/code&gt;, and &lt;code&gt;ets&lt;/code&gt;). The &lt;code&gt;ets&lt;/code&gt; activity only works if the table has no indexes.</source>
          <target state="translated">可以在所有这些活动上下文（ &lt;code&gt;transaction&lt;/code&gt; ， &lt;code&gt;sync_transaction&lt;/code&gt; ， &lt;code&gt;async_dirty&lt;/code&gt; ， &lt;code&gt;sync_dirty&lt;/code&gt; 和 &lt;code&gt;ets&lt;/code&gt; ）中执行QLC查询。仅当表没有索引时， &lt;code&gt;ets&lt;/code&gt; 活动才起作用。</target>
        </trans-unit>
        <trans-unit id="6fdde551c1ae8e6fe45e078d55ddb3f31ce7e09a" translate="yes" xml:space="preserve">
          <source>QLCs are convenient for stating constraints on data from two or more tables. The following example does a natural join on two query handles on position 2:</source>
          <target state="translated">QLC很方便地对两个或多个表的数据进行约束说明。下面的例子是对位置2上的两个查询句柄进行自然连接。</target>
        </trans-unit>
        <trans-unit id="28177dc15b26c0a74159857924b18e3df0638648" translate="yes" xml:space="preserve">
          <source>Queries can be sent to the master to determine which node will have the least load.</source>
          <target state="translated">可以向主站发送查询,以确定哪个节点的负载最小。</target>
        </trans-unit>
        <trans-unit id="594265df0f504d11dc7e03fde007c6624ca2cfba" translate="yes" xml:space="preserve">
          <source>Queries the database to find out the ODBC data types of the columns of the table &lt;code&gt;Table&lt;/code&gt;.</source>
          <target state="translated">查询数据库以查找表 &lt;code&gt;Table&lt;/code&gt; 的列的ODBC数据类型。</target>
        </trans-unit>
        <trans-unit id="2412c764d41ab6b9791a2250b7102a18362506f7" translate="yes" xml:space="preserve">
          <source>Query ::= Statement&lt;code&gt;,&lt;/code&gt; ...</source>
          <target state="translated">查询:: =语句 &lt;code&gt;,&lt;/code&gt; ...</target>
        </trans-unit>
        <trans-unit id="c162938e377e38115dc3cedfcf24cb92df1d737c" translate="yes" xml:space="preserve">
          <source>Query List Comprehension (QLC) can be used with Mnesia to produce specialized functions that enhance the operational ability of Mnesia. QLC has its own documentation as part of the OTP documentation set. The main features of QLC when used with Mnesia are as follows:</source>
          <target state="translated">查询列表理解(QLC)可以与Mnesia一起使用,以产生专门的功能,增强Mnesia的操作能力。QLC有自己的文档,作为OTP文档集的一部分。QLC与Mnesia一起使用时的主要特点如下:</target>
        </trans-unit>
        <trans-unit id="0d6e12fb5478de8f3fa8e6c09b0ca1974dd2631e" translate="yes" xml:space="preserve">
          <source>Query interface</source>
          <target state="translated">查询界面</target>
        </trans-unit>
        <trans-unit id="c1792a32d0b77c434cdc1e30d03076a0c0097b22" translate="yes" xml:space="preserve">
          <source>Query interface to Mnesia, ETS, Dets, and so on.</source>
          <target state="translated">Mnesia、ETS、Dets等的查询接口。</target>
        </trans-unit>
        <trans-unit id="966933c9d4fe3603343d28156ae1dd639fce4546" translate="yes" xml:space="preserve">
          <source>Queues are double-ended. The mental picture of a queue is a line of people (items) waiting for their turn. The queue front is the end with the item that has waited the longest. The queue rear is the end an item enters when it starts to wait. If instead using the mental picture of a list, the front is called head and the rear is called tail.</source>
          <target state="translated">排队是双休日。队列的心理图景是一排等待轮到自己的人(物品)。队列前部是指等待时间最长的物品的终点。队列后方是一个物品开始等待时进入的末端。如果改用列表的心理图象,前面的叫头,后面的叫尾。</target>
        </trans-unit>
        <trans-unit id="a20596c790f832b98307345d7e29739a19f1b37f" translate="yes" xml:space="preserve">
          <source>Quits Erlang. Notice that this option is disabled if Erlang is started with the ignore break, &lt;code&gt;+Bi&lt;/code&gt;, system flag (which can be useful, for example when running a restricted shell, see the next section).</source>
          <target state="translated">退出二郎。请注意，如果Erlang以忽略中断 &lt;code&gt;+Bi&lt;/code&gt; （系统标志）启动，则此选项被禁用（例如，在运行受限外壳程序时，这很有用，请参阅下一节）。</target>
        </trans-unit>
        <trans-unit id="9e0e35667c233db47de30256c67c29187c2127da" translate="yes" xml:space="preserve">
          <source>RAM memory of 96 MB is recommended to run OTP on Windows NT. A system with less than 64 MB of RAM is not recommended.</source>
          <target state="translated">在Windows NT上运行OTP时,建议使用96MB的RAM内存。不建议使用内存小于64MB的系统。</target>
        </trans-unit>
        <trans-unit id="3b330731a188b19fdf61999609e5e9b932bb400b" translate="yes" xml:space="preserve">
          <source>REAL</source>
          <target state="translated">REAL</target>
        </trans-unit>
        <trans-unit id="e243ff0db6962f2860f9daeb7b76706585f6a228" translate="yes" xml:space="preserve">
          <source>RFC 1350, The TFTP Protocol (revision 2)</source>
          <target state="translated">RFC 1350,TFTP协议(修订版2)</target>
        </trans-unit>
        <trans-unit id="1dce0d83a131f276794188635a3dd2c84e8c7eb2" translate="yes" xml:space="preserve">
          <source>RFC 2347, TFTP Option Extension</source>
          <target state="translated">RFC 2347,TFTP选项扩展</target>
        </trans-unit>
        <trans-unit id="bbc82bb105613050636fa25569250ca1eee846e0" translate="yes" xml:space="preserve">
          <source>RFC 2348, TFTP Blocksize Option</source>
          <target state="translated">RFC 2348,TFTP块大小选项。</target>
        </trans-unit>
        <trans-unit id="58b78666477f6c30faf4308df7d8a596afe3e335" translate="yes" xml:space="preserve">
          <source>RFC 2349, TFTP Timeout Interval and Transfer Size Options</source>
          <target state="translated">RFC 2349,TFTP超时间隔和传输大小选项。</target>
        </trans-unit>
        <trans-unit id="59a4f7837e70ac5999135a8d3596c58b849ab6fc" translate="yes" xml:space="preserve">
          <source>RFC 2830</source>
          <target state="translated">RFC 2830</target>
        </trans-unit>
        <trans-unit id="4b90d6cab31b63063971c3605ede011c0f69a6ae" translate="yes" xml:space="preserve">
          <source>RFC 4510 - RFC 4519</source>
          <target state="translated">RFC 4510-RFC 4519</target>
        </trans-unit>
        <trans-unit id="d99facf0134d096b722a33331e4fe8b6452b7572" translate="yes" xml:space="preserve">
          <source>RFC 4716 SSH files looks confusingly like PEM files, but there are some differences:</source>
          <target state="translated">RFC 4716 SSH文件看起来像PEM文件一样令人困惑,但也有一些区别。</target>
        </trans-unit>
        <trans-unit id="1da6885bf9a20f8d0085f4bb97f71554cbe07e08" translate="yes" xml:space="preserve">
          <source>RFC 6733 is unclear about the semantics of the M-bit. One the one hand, the CCF specification in section 3.2 documents AVP in a command grammar as meaning &lt;strong&gt;any&lt;/strong&gt; arbitrary AVP; on the other hand, 1.3.4 states that AVPs setting the M-bit cannot be added to an existing command: the modified command must instead be placed in a new Diameter application.</source>
          <target state="translated">RFC 6733不清楚M位的语义。一方面，第3.2节中的CCF规范在命令语法中记录了AVP，表示&lt;strong&gt;任何&lt;/strong&gt;任意AVP。另一方面，1.3.4指出不能将设置M位的AVP添加到现有命令中：修改后的命令必须放置在新的Diameter应用程序中。</target>
        </trans-unit>
        <trans-unit id="1a00bbd3345e1dc4481f48b2eb823bd6a52b39bc" translate="yes" xml:space="preserve">
          <source>RFC1155, 1157, 1212 and 1215 (SNMPv1)</source>
          <target state="translated">RFC1155、1157、1212和1215(SNMPv1)</target>
        </trans-unit>
        <trans-unit id="776412993c8f2099a41ff3173b993a46e8d2ffc2" translate="yes" xml:space="preserve">
          <source>RFC1157, RFC1905 and/or RFC2272 should be studied carefully before using this module, &lt;code&gt;snmp_pdus&lt;/code&gt;.</source>
          <target state="translated">在使用此模块 &lt;code&gt;snmp_pdus&lt;/code&gt; 之前，应仔细研究RFC1157，RFC1905和/或RFC2272。</target>
        </trans-unit>
        <trans-unit id="1168b5a47f86b0c1ab1cefa353e2e20f382b649a" translate="yes" xml:space="preserve">
          <source>RFC1901-1907 (SNMPv2c)</source>
          <target state="translated">RFC1901-1907 (SNMPv2c)</target>
        </trans-unit>
        <trans-unit id="8f47f36a71eeb2e19619fed1c9a260fe790b894f" translate="yes" xml:space="preserve">
          <source>RFC1908, 2089 (coexistence between SNMPv1 and SNMPv2)</source>
          <target state="translated">RFC1908、2089(SNMPv1和SNMPv2共存)</target>
        </trans-unit>
        <trans-unit id="b65e8c8967997cf54ae07d33911cd338bcfd5fea" translate="yes" xml:space="preserve">
          <source>RFC2271, RFC2273 (SNMP std MIBs)</source>
          <target state="translated">RFC2271、RFC2273(SNMP标准MIBs)</target>
        </trans-unit>
        <trans-unit id="f8914ca9f86bbe9f10be1026bac810afc6078c5e" translate="yes" xml:space="preserve">
          <source>RSA key generation is only available if the runtime was built with dirty scheduler support. Otherwise, attempting to generate an RSA key will throw exception &lt;code&gt;error:notsup&lt;/code&gt;.</source>
          <target state="translated">仅当运行时是在脏调度程序支持的情况下构建的，才可以使用RSA密钥生成。否则，尝试生成RSA密钥将引发异常 &lt;code&gt;error:notsup&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="05d92fe0db12744e04d5c42042cf1cefb4d02e52" translate="yes" xml:space="preserve">
          <source>Raises an &lt;code&gt;undef&lt;/code&gt; exception with a stacktrace, indicating that &lt;code&gt;Module:Function/N&lt;/code&gt; is undefined.</source>
          <target state="translated">使用堆栈跟踪引发 &lt;code&gt;undef&lt;/code&gt; 异常，指示未定义 &lt;code&gt;Module:Function/N&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="459599ff17e3d64ffa950ad44a266ffa3f086014" translate="yes" xml:space="preserve">
          <source>Range = 1..2^32, Hash = 1..Range</source>
          <target state="translated">Range=1...2^32,Hash=1...Range。</target>
        </trans-unit>
        <trans-unit id="a7f829a993da34443f81cc1e6ec49f9944aa415e" translate="yes" xml:space="preserve">
          <source>Ranges of taken salt (if any) and returned value depend on the hash type.</source>
          <target state="translated">取盐的范围(如果有的话)和返回值取决于哈希类型。</target>
        </trans-unit>
        <trans-unit id="4739ff05fa329071f045d72b76e29a97728b5a87" translate="yes" xml:space="preserve">
          <source>Ranges operate in the collating sequence of character values. They can also be used for characters specified numerically, for example, [\000-\037]. Ranges can include any characters that are valid for the current mode.</source>
          <target state="translated">范围是在字符值的整理序列中操作的,也可以用于指定的数字字符,例如[/000-/037]。它们也可以用于数字指定的字符,例如,[\000-\037]。范围可以包括任何对当前模式有效的字符。</target>
        </trans-unit>
        <trans-unit id="5b944ab1d190ffab8bdf5f92747b67f829f474fa" translate="yes" xml:space="preserve">
          <source>Rarely used. Determines the ACK time (specified by &lt;code&gt;assoc_value&lt;/code&gt;, in milliseconds) for the specified association or the whole endpoint if &lt;code&gt;assoc_value = 0&lt;/code&gt; (default).</source>
          <target state="translated">很少用。如果 &lt;code&gt;assoc_value = 0&lt;/code&gt; （默认值），则确定指定关联或整个端点的ACK时间（以 &lt;code&gt;assoc_value&lt;/code&gt; 指定，以毫秒为单位）。</target>
        </trans-unit>
        <trans-unit id="acb7267dc157944fbc4f68b9244986a8dd01d029" translate="yes" xml:space="preserve">
          <source>Rather than reading the &lt;code&gt;Emakefile&lt;/code&gt; specify configuration explicitly.</source>
          <target state="translated">而不是读取 &lt;code&gt;Emakefile&lt;/code&gt; 明确指定配置。</target>
        </trans-unit>
        <trans-unit id="47883c793c16264c0bf3a9f6e7125312a6498763" translate="yes" xml:space="preserve">
          <source>Raw filenames were introduced together with Unicode filename support in ERTS 5.8.2 (Erlang/OTP R14B01). The reason &quot;raw filenames&quot; were introduced in the system was to be able to represent filenames, specified in different encodings on the same system, consistently. It can seem practical to have the VM automatically translate a filename that is not in UTF-8 to a list of Unicode characters, but this would open up for both duplicate filenames and other inconsistent behavior.</source>
          <target state="translated">在ERTS 5.8.2(Erlang/OTP R14B01)中,原始文件名与Unicode文件名支持一起被引入。在系统中引入 &quot;原始文件名 &quot;的原因是为了能够一致地表示在同一系统中以不同编码指定的文件名。让虚拟机自动将非UTF-8编码的文件名翻译成Unicode字符列表似乎很实用,但这将导致重复的文件名和其他不一致的行为。</target>
        </trans-unit>
        <trans-unit id="795061f45c0310d22fcc247f07c3b4e23fa83463" translate="yes" xml:space="preserve">
          <source>Raw files use the file system of the host machine of the node. For normal files (non-raw), the file server is used to find the files, and if the node is running its file server as slave to the file server of another node, and the other node runs on some other host machine, they can have different file systems. However, this is seldom a problem.</source>
          <target state="translated">原始文件使用节点的主机的文件系统。对于普通的文件(非raw),则使用文件服务器来查找文件,如果节点以从属的方式运行它的文件服务器,而另一个节点又运行在其他的主机上,那么它们的文件系统就会不同。不过,这种情况很少出现。</target>
        </trans-unit>
        <trans-unit id="4c84575df9844c415b455e79411320007894aa74" translate="yes" xml:space="preserve">
          <source>Raw socket options, such as &lt;code&gt;packet&lt;/code&gt; and &lt;code&gt;size&lt;/code&gt; must not be specified on the command line.</source>
          <target state="translated">原始套接字选项（例如 &lt;code&gt;packet&lt;/code&gt; 和 &lt;code&gt;size&lt;/code&gt; 不能在命令行上指定。</target>
        </trans-unit>
        <trans-unit id="1a1608e0a1ead364bb6ddf1ef14e4576861c85e2" translate="yes" xml:space="preserve">
          <source>Re-Auth-Answer</source>
          <target state="translated">Re-Auth-Answer</target>
        </trans-unit>
        <trans-unit id="cea1207d9889c12a36609f11fca3aa3647d57966" translate="yes" xml:space="preserve">
          <source>Re-Auth-Request</source>
          <target state="translated">Re-Auth-Request</target>
        </trans-unit>
        <trans-unit id="16429bb7f0689c5c487b46f0ec26c0177f1ef94a" translate="yes" xml:space="preserve">
          <source>Re-Auth-Request-Type AVP</source>
          <target state="translated">Re-Auth-Request-Type AVP。</target>
        </trans-unit>
        <trans-unit id="7bc3f1950022396c1453ed6991b28afe5cc3b167" translate="yes" xml:space="preserve">
          <source>Re-Auth-Request-Type AVP Values</source>
          <target state="translated">Re-Auth-Request-Type AVP值。</target>
        </trans-unit>
        <trans-unit id="77e1d4c89a77db083b40468156c72a44aaeb8a27" translate="yes" xml:space="preserve">
          <source>Re-defining the match operation</source>
          <target state="translated">重新定义匹配操作</target>
        </trans-unit>
        <trans-unit id="19c1fde66df90cd89fae9d3e8cfddd3b6967eaae" translate="yes" xml:space="preserve">
          <source>Re-send a megaco message.</source>
          <target state="translated">重新发送megaco信息。</target>
        </trans-unit>
        <trans-unit id="8f461656f4f97af8310e6bbba806a6dfac4836a2" translate="yes" xml:space="preserve">
          <source>Re-send of messages, handling pending transactions, acknowledgements etc. is handled automatically by the Megaco application but the user is free to override the default behaviour by the various configuration possibilities. See megaco:update_user_info/2 and megaco:update_conn_info/2 about the possibilities.</source>
          <target state="translated">重新发送消息,处理待处理的交易,确认等都是由Megaco应用程序自动处理的,但是用户可以通过各种配置可能性来覆盖默认行为。参见megaco:update_user_info/2和megaco:update_conn_info/2关于这些可能性。</target>
        </trans-unit>
        <trans-unit id="cc298594d701205369ec5adc40340226d9806b5c" translate="yes" xml:space="preserve">
          <source>Read a compiled mib.</source>
          <target state="translated">读取汇编的mib。</target>
        </trans-unit>
        <trans-unit id="2d219c0f4eafc3f8960679e044824d76e3076ea1" translate="yes" xml:space="preserve">
          <source>Read a file dump produced by &lt;code&gt;&lt;a href=&quot;#to_file-1&quot;&gt;to_file(Filename)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">读取由 &lt;code&gt;&lt;a href=&quot;#to_file-1&quot;&gt;to_file(Filename)&lt;/a&gt;&lt;/code&gt; 产生的文件转储。</target>
        </trans-unit>
        <trans-unit id="094a01892ae368406b5fc03359c07f6767d0465e" translate="yes" xml:space="preserve">
          <source>Read a record from the mib-storage table.</source>
          <target state="translated">从mib存储表中读取一条记录。</target>
        </trans-unit>
        <trans-unit id="fae42d0f132843e9c05600efe03222c799da3c90" translate="yes" xml:space="preserve">
          <source>Read back a stored value:</source>
          <target state="translated">回读存储的值。</target>
        </trans-unit>
        <trans-unit id="8d5d990ecf5aa325dd10c8954d8f4a8821e157b8" translate="yes" xml:space="preserve">
          <source>Read locks an rwlock. The calling thread is blocked until the rwlock has been read locked. A thread that currently has read or read/write locked the rwlock &lt;strong&gt;cannot&lt;/strong&gt; lock the same rwlock again.</source>
          <target state="translated">读锁定一个rwlock。调用线程被阻塞，直到rwlock被读取锁定。当前具有读或读/写锁定rwlock的线程&lt;strong&gt;无法&lt;/strong&gt;再次锁定同一rwlock。</target>
        </trans-unit>
        <trans-unit id="76ccfbe9ca99e346c048962da6d197423a7cbd46" translate="yes" xml:space="preserve">
          <source>Read locks can be shared. This means that if one transaction manages to acquire a read lock on an item, other transactions can also acquire a read lock on the same item. However, if someone has a read lock, no one can acquire a write lock at the same item. If someone has a write lock, no one can acquire either a read lock or a write lock at the same item.</source>
          <target state="translated">读取锁是可以共享的。这意味着,如果一个事务设法获得了一个项目的读锁,其他事务也可以获得同一项目的读锁。但是,如果有人拥有读锁,那么没有人可以在同一个项目上获得写锁。如果某人有一个写锁,那么没有人可以在同一个项目上获得读锁或写锁。</target>
        </trans-unit>
        <trans-unit id="ab3b8c2401387cd20afc043cfe4cdb6d7fad5178" translate="yes" xml:space="preserve">
          <source>Read more about behaviours and callback modules in &lt;code&gt;OTP Design Principles&lt;/code&gt;.</source>
          <target state="translated">阅读 &lt;code&gt;OTP Design Principles&lt;/code&gt; 有关行为和回调模块的更多信息。</target>
        </trans-unit>
        <trans-unit id="07143977457b982ffd87794e7909594ac2808846" translate="yes" xml:space="preserve">
          <source>Read more about funs in &lt;code&gt;&lt;a href=&quot;expressions#funs&quot;&gt;Fun Expressions&lt;/a&gt;&lt;/code&gt;. For more examples, see &lt;code&gt;Programming Examples&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;&lt;a href=&quot;expressions#funs&quot;&gt;Fun Expressions&lt;/a&gt;&lt;/code&gt; 中阅读有关乐趣的更多信息。有关更多示例，请参见《 &lt;code&gt;Programming Examples&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d1be27ef0d2a3f64890f259db44beefa37af2c5b" translate="yes" xml:space="preserve">
          <source>Read more about maps in &lt;code&gt;&lt;a href=&quot;expressions#map_expressions&quot;&gt;Map Expressions&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;&lt;a href=&quot;expressions#map_expressions&quot;&gt;Map Expressions&lt;/a&gt;&lt;/code&gt; 阅读有关地图的更多信息。</target>
        </trans-unit>
        <trans-unit id="9a94884a1eeb79bbde0f80da164882bdecb46069" translate="yes" xml:space="preserve">
          <source>Read more about ports in &lt;code&gt;&lt;a href=&quot;ports&quot;&gt;Ports and Port Drivers&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;&lt;a href=&quot;ports&quot;&gt;Ports and Port Drivers&lt;/a&gt;&lt;/code&gt; 阅读有关端口的更多信息。</target>
        </trans-unit>
        <trans-unit id="554282f3efb20a0099d5f18b19f7a754b826fd3a" translate="yes" xml:space="preserve">
          <source>Read more about processes in &lt;code&gt;&lt;a href=&quot;processes&quot;&gt;Processes&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;&lt;a href=&quot;processes&quot;&gt;Processes&lt;/a&gt;&lt;/code&gt; 阅读有关流程的更多信息。</target>
        </trans-unit>
        <trans-unit id="d7bf0c0fc48b6429df321b465a4fd9dd18e68f80" translate="yes" xml:space="preserve">
          <source>Read more about records in &lt;code&gt;&lt;a href=&quot;records&quot;&gt;Records&lt;/a&gt;&lt;/code&gt;. More examples can be found in &lt;code&gt;Programming Examples&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;&lt;a href=&quot;records&quot;&gt;Records&lt;/a&gt;&lt;/code&gt; 中了解有关记录的更多信息。可以在&amp;ldquo; &lt;code&gt;Programming Examples&lt;/code&gt; 找到更多示例。</target>
        </trans-unit>
        <trans-unit id="88c12fc1054e6dee5889bd067bef3dd784174d05" translate="yes" xml:space="preserve">
          <source>Read more about the &lt;code&gt;&lt;a href=&quot;../system_principles/versions&quot;&gt;version handling&lt;/a&gt;&lt;/code&gt; introduced in Erlang/OTP release 17, which also describes how to determine if an installation includes one or more patched applications.</source>
          <target state="translated">阅读有关Erlang / OTP版本17中引入的 &lt;code&gt;&lt;a href=&quot;../system_principles/versions&quot;&gt;version handling&lt;/a&gt;&lt;/code&gt; 更多信息，该版本还描述了如何确定安装是否包含一个或多个修补的应用程序。</target>
        </trans-unit>
        <trans-unit id="f5acd88bebed6795b6d43dc94e4d954048ae135b" translate="yes" xml:space="preserve">
          <source>Read more in &lt;code&gt;&lt;a href=&quot;macros&quot;&gt;Preprocessor&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;&lt;a href=&quot;macros&quot;&gt;Preprocessor&lt;/a&gt;&lt;/code&gt; 阅读更多内容。</target>
        </trans-unit>
        <trans-unit id="25902641bc735ddad3dc3752e9e7cdf871e33269" translate="yes" xml:space="preserve">
          <source>Read more in &lt;code&gt;&lt;a href=&quot;typespec&quot;&gt;Types and Function specifications&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;&lt;a href=&quot;typespec&quot;&gt;Types and Function specifications&lt;/a&gt;&lt;/code&gt; 了解更多信息。</target>
        </trans-unit>
        <trans-unit id="f648b4cd550b1fadddeedd092b40e39b527f7289" translate="yes" xml:space="preserve">
          <source>Read operations must be fast and performed in RAM.</source>
          <target state="translated">读取操作必须快速,并在RAM中进行。</target>
        </trans-unit>
        <trans-unit id="fcc1f12b3d10e63c14a1f8d7961be76cc365a4c2" translate="yes" xml:space="preserve">
          <source>Read operations on the file return binaries rather than lists.</source>
          <target state="translated">对文件的读取操作返回二进制文件而不是列表。</target>
        </trans-unit>
        <trans-unit id="a2e1d0549799772810864d99ca395221ead7f179" translate="yes" xml:space="preserve">
          <source>Read permission: group</source>
          <target state="translated">阅读权限:组</target>
        </trans-unit>
        <trans-unit id="907dbe453adbd7fa6e280b4f6613faf3d07802de" translate="yes" xml:space="preserve">
          <source>Read permission: other</source>
          <target state="translated">阅读权限:其他</target>
        </trans-unit>
        <trans-unit id="e07884b49a0e21ab3dba84b49e8cf1e33e98b370" translate="yes" xml:space="preserve">
          <source>Read permission: owner</source>
          <target state="translated">阅读权限:所有者</target>
        </trans-unit>
        <trans-unit id="a9a2a9ac46cb0c7c5000cf0d6d9e745656ad5010" translate="yes" xml:space="preserve">
          <source>Read the &lt;code&gt;&lt;a href=&quot;#encoding&quot;&gt;encoding&lt;/a&gt;&lt;/code&gt; from a binary. Returns the read encoding, or &lt;code&gt;none&lt;/code&gt; if no valid encoding is found.</source>
          <target state="translated">从二进制文件读取 &lt;code&gt;&lt;a href=&quot;#encoding&quot;&gt;encoding&lt;/a&gt;&lt;/code&gt; 。返回读取编码，或 &lt;code&gt;none&lt;/code&gt; ，如果没有有效的编码找到。</target>
        </trans-unit>
        <trans-unit id="b9bff9acfee5a49ed23833e2b2e81ce0eafcf087" translate="yes" xml:space="preserve">
          <source>Read the &lt;code&gt;&lt;a href=&quot;#encoding&quot;&gt;encoding&lt;/a&gt;&lt;/code&gt; from a file. Returns the read encoding, or &lt;code&gt;none&lt;/code&gt; if no valid encoding is found.</source>
          <target state="translated">从文件中读取 &lt;code&gt;&lt;a href=&quot;#encoding&quot;&gt;encoding&lt;/a&gt;&lt;/code&gt; 。返回读取编码，或 &lt;code&gt;none&lt;/code&gt; ，如果没有有效的编码找到。</target>
        </trans-unit>
        <trans-unit id="03addc218b3ecbd8505da6cd353ed8258e946c82" translate="yes" xml:space="preserve">
          <source>Read the current agent community config file.</source>
          <target state="translated">读取当前代理社区配置文件。</target>
        </trans-unit>
        <trans-unit id="02b971b894024a807e610f7f5b2b637f8dd97000" translate="yes" xml:space="preserve">
          <source>Read the current agent config file.</source>
          <target state="translated">读取当前代理配置文件。</target>
        </trans-unit>
        <trans-unit id="342a88f5b0ef188a6710923ae2c68b182e32efef" translate="yes" xml:space="preserve">
          <source>Read the current agent context config file.</source>
          <target state="translated">读取当前代理上下文配置文件。</target>
        </trans-unit>
        <trans-unit id="b6fc36e2d6043726f29d5d8f1c08f9f88ee70c74" translate="yes" xml:space="preserve">
          <source>Read the current agent notify config file.</source>
          <target state="translated">读取当前代理通知配置文件。</target>
        </trans-unit>
        <trans-unit id="3eb932c8851f4e2dc54a684ed2c99b02f3242cba" translate="yes" xml:space="preserve">
          <source>Read the current agent standard config file.</source>
          <target state="translated">读取当前代理标准配置文件。</target>
        </trans-unit>
        <trans-unit id="35433f92aa6ddf91ab8a32ad2893c1416b06ab17" translate="yes" xml:space="preserve">
          <source>Read the current agent target_addr config file.</source>
          <target state="translated">读取当前代理的 target_addr 配置文件。</target>
        </trans-unit>
        <trans-unit id="78a4a501636d7de7588fd4069fcaa0ba16c5b911" translate="yes" xml:space="preserve">
          <source>Read the current agent target_params config file.</source>
          <target state="translated">读取当前代理的 target_params 配置文件。</target>
        </trans-unit>
        <trans-unit id="fc9c3b2ea448e1950b438a66a1ac53da2c5c848c" translate="yes" xml:space="preserve">
          <source>Read the current agent usm config file.</source>
          <target state="translated">读取当前代理usm配置文件。</target>
        </trans-unit>
        <trans-unit id="a884a170d9e1573ebe82ea228079e20c5eb624ee" translate="yes" xml:space="preserve">
          <source>Read the current agent vacm config file.</source>
          <target state="translated">读取当前代理的 vacm 配置文件。</target>
        </trans-unit>
        <trans-unit id="1cccddc3b38e21d434122b66beec2e249ff466f7" translate="yes" xml:space="preserve">
          <source>Read the current manager agents config file.</source>
          <target state="translated">读取当前经理代理配置文件。</target>
        </trans-unit>
        <trans-unit id="5ea1df47d9a8182ee88ccdea1f6d44fd125d1e2e" translate="yes" xml:space="preserve">
          <source>Read the current manager config file.</source>
          <target state="translated">读取当前管理器配置文件。</target>
        </trans-unit>
        <trans-unit id="bf1020e0b4f41cf2c22e11431cbaedc662a19f79" translate="yes" xml:space="preserve">
          <source>Read the current manager users config file.</source>
          <target state="translated">读取当前经理用户配置文件。</target>
        </trans-unit>
        <trans-unit id="59e482ad7bf583e0ad9e54f15735c13cf785f39c" translate="yes" xml:space="preserve">
          <source>Read the current manager usm config file.</source>
          <target state="translated">读取当前管理器usm配置文件。</target>
        </trans-unit>
        <trans-unit id="be2ba72b989b324a88b19ff039a27eab2a805aaf" translate="yes" xml:space="preserve">
          <source>Read the whole manual page if it is the first time you are using the transformations.</source>
          <target state="translated">如果您是第一次使用变换,请阅读整个手册页面。</target>
        </trans-unit>
        <trans-unit id="0a736cf2a92b3cd68f6984820f5b1301a5650942" translate="yes" xml:space="preserve">
          <source>Read unlocks an rwlock. The rwlock currently must be read locked by the calling thread.</source>
          <target state="translated">读解锁一个rwlock。rwlock当前必须由调用线程读取锁定。</target>
        </trans-unit>
        <trans-unit id="ce3d31d0d015c1d0a226f6e114ecb8215a61f763" translate="yes" xml:space="preserve">
          <source>Read/write lock. Used to allow multiple threads to read shared data while only allowing one thread to write the same data. Multiple threads can read lock an rwlock at the same time, while only one thread can read/write lock an rwlock at a time.</source>
          <target state="translated">读/写锁。用于允许多个线程读取共享数据,同时只允许一个线程写入相同的数据。多个线程可以同时读取锁定一个rwlock,而一次只允许一个线程读取/写入锁定一个rwlock。</target>
        </trans-unit>
        <trans-unit id="a088a96620af47c2bef0d4a01c4765cd4908ac8e" translate="yes" xml:space="preserve">
          <source>Read/write locks an rwlock. The calling thread is blocked until the rwlock has been read/write locked. A thread that currently has read or read/write locked the rwlock &lt;strong&gt;cannot&lt;/strong&gt; lock the same rwlock again.</source>
          <target state="translated">读/写锁定rwlock。调用线程被阻塞，直到rwlock被读/写锁定。当前具有读或读/写锁定rwlock的线程&lt;strong&gt;无法&lt;/strong&gt;再次锁定同一rwlock。</target>
        </trans-unit>
        <trans-unit id="88f7eef8181951ff1f841f14cc7c3dfc0d58e28f" translate="yes" xml:space="preserve">
          <source>Read/write unlocks an rwlock. The rwlock currently must be read/write locked by the calling thread.</source>
          <target state="translated">读/写解锁一个rwlock,当前rwlock必须被调用线程读/写锁定。rwlock当前必须由调用线程进行读/写锁定。</target>
        </trans-unit>
        <trans-unit id="db3a2609cebf7e16af76fe0013217765a0dfa76f" translate="yes" xml:space="preserve">
          <source>Readability and maintainability suffer when test cases become too large and extensive. It is not certain that the resulting log files reflect very well the number of tests performed.</source>
          <target state="translated">当测试用例过于庞大和广泛时,可读性和可维护性就会受到影响。由此产生的日志文件并不能很好地反映出所进行的测试的数量。</target>
        </trans-unit>
        <trans-unit id="9aec65966a9a00d068d698cfbc5cbf74dcf30e9b" translate="yes" xml:space="preserve">
          <source>Reading and writing of files with Unicode data is, however, not best done with the &lt;code&gt;file&lt;/code&gt; module, as its interface is byte-oriented. A file opened with a Unicode encoding (like UTF-8) is best read or written using the &lt;code&gt;io&lt;/code&gt; module.</source>
          <target state="translated">但是，使用 &lt;code&gt;file&lt;/code&gt; 模块读取和写入带有Unicode数据的文件并不是最好的方法，因为它的接口是面向字节的。最好使用 &lt;code&gt;io&lt;/code&gt; 模块读写以Unicode编码（例如UTF-8）打开的文件。</target>
        </trans-unit>
        <trans-unit id="e4c222fd852ba1812493153ccc2dcc4014ebaf8c" translate="yes" xml:space="preserve">
          <source>Reading man pages. Make sure that &lt;code&gt;erl&lt;/code&gt; is referring to the installed version. For example &lt;code&gt;/usr/local/bin/erl&lt;/code&gt;. Try viewing at the man page for Mnesia</source>
          <target state="translated">阅读手册页。确保 &lt;code&gt;erl&lt;/code&gt; 指的是已安装的版本。例如 &lt;code&gt;/usr/local/bin/erl&lt;/code&gt; 。尝试在Mnesia的手册页上查看</target>
        </trans-unit>
        <trans-unit id="252f4b5e75f178405e6c8d8917b5a5ddac65f605" translate="yes" xml:space="preserve">
          <source>Reads &lt;code&gt;Count&lt;/code&gt; characters from standard input (&lt;code&gt;IoDevice&lt;/code&gt;), prompting it with &lt;code&gt;Prompt&lt;/code&gt;.</source>
          <target state="translated">从标准输入（ &lt;code&gt;IoDevice&lt;/code&gt; ）读取 &lt;code&gt;Count&lt;/code&gt; 字符，并用 &lt;code&gt;Prompt&lt;/code&gt; 提示。</target>
        </trans-unit>
        <trans-unit id="f6c0eac8f5e6c09bd6f995de56f2885b56f262d1" translate="yes" xml:space="preserve">
          <source>Reads &lt;code&gt;Len&lt;/code&gt; bytes from the file referenced by &lt;code&gt;Handle&lt;/code&gt;. Returns &lt;code&gt;{ok, Data}&lt;/code&gt;, &lt;code&gt;eof&lt;/code&gt;, or &lt;code&gt;{error, reason()}&lt;/code&gt;. If the file is opened with &lt;code&gt;binary&lt;/code&gt;, &lt;code&gt;Data&lt;/code&gt; is a binary, otherwise it is a string.</source>
          <target state="translated">从 &lt;code&gt;Handle&lt;/code&gt; 引用的文件中读取 &lt;code&gt;Len&lt;/code&gt; 字节。返回 &lt;code&gt;{ok, Data}&lt;/code&gt; ， &lt;code&gt;eof&lt;/code&gt; 或 &lt;code&gt;{error, reason()}&lt;/code&gt; 。如果使用 &lt;code&gt;binary&lt;/code&gt; 打开文件，则 &lt;code&gt;Data&lt;/code&gt; 为二进制，否则为字符串。</target>
        </trans-unit>
        <trans-unit id="daa50c7790746978f3529a39e628aa17d94fcef6" translate="yes" xml:space="preserve">
          <source>Reads &lt;code&gt;Number&lt;/code&gt; bytes/characters from the file referenced by &lt;code&gt;IoDevice&lt;/code&gt;. The functions &lt;code&gt;&lt;a href=&quot;#read-2&quot;&gt;read/2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#pread-3&quot;&gt;pread/3&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;#read_line-1&quot;&gt;read_line/1&lt;/a&gt;&lt;/code&gt; are the only ways to read from a file opened in &lt;code&gt;raw&lt;/code&gt; mode (although they work for normally opened files, too).</source>
          <target state="translated">从 &lt;code&gt;IoDevice&lt;/code&gt; 引用的文件中读取 &lt;code&gt;Number&lt;/code&gt; 字节/字符。函数 &lt;code&gt;&lt;a href=&quot;#read-2&quot;&gt;read/2&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;#pread-3&quot;&gt;pread/3&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;#read_line-1&quot;&gt;read_line/1&lt;/a&gt;&lt;/code&gt; 是读取以 &lt;code&gt;raw&lt;/code&gt; 模式打开的文件的唯一方法（尽管它们也适用于正常打开的文件）。</target>
        </trans-unit>
        <trans-unit id="f70ae81f047ca6b4913a5ff1eb01e17721a1df8e" translate="yes" xml:space="preserve">
          <source>Reads Erlang terms, separated by '.', from &lt;code&gt;Filename&lt;/code&gt;. Returns one of the following:</source>
          <target state="translated">从 &lt;code&gt;Filename&lt;/code&gt; 中读取以'。'分隔的Erlang术语。返回以下之一：</target>
        </trans-unit>
        <trans-unit id="be3d677dc62d08604840b02570c3e7442cfa5893" translate="yes" xml:space="preserve">
          <source>Reads a (virtual) file &lt;code&gt;RemoteFilename&lt;/code&gt; from a TFTP server.</source>
          <target state="translated">从TFTP服务器读取（虚拟）文件 &lt;code&gt;RemoteFilename&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="475ab7b68b4f86a328c596114c612ba9ab111e93" translate="yes" xml:space="preserve">
          <source>Reads a chunk from the file.</source>
          <target state="translated">读取文件中的一个块。</target>
        </trans-unit>
        <trans-unit id="bcf09f51900c4beb18f4a5c9714ec92cbd388e75" translate="yes" xml:space="preserve">
          <source>Reads a file from the server, and returns the data in a binary.</source>
          <target state="translated">从服务器读取文件,并以二进制形式返回数据。</target>
        </trans-unit>
        <trans-unit id="5d10f6f7263be88bc8003790c8726391f4e9dbdf" translate="yes" xml:space="preserve">
          <source>Reads a file produced by &lt;code&gt;&lt;a href=&quot;#tab2file-2&quot;&gt;tab2file/2&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#tab2file-3&quot;&gt;tab2file/3&lt;/a&gt;&lt;/code&gt; and creates the corresponding table &lt;code&gt;Tab&lt;/code&gt;.</source>
          <target state="translated">读取由 &lt;code&gt;&lt;a href=&quot;#tab2file-2&quot;&gt;tab2file/2&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;#tab2file-3&quot;&gt;tab2file/3&lt;/a&gt;&lt;/code&gt; 生成的文件，并创建对应的表 &lt;code&gt;Tab&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dc54f5017946e86d78cdba6d809d92457be885be" translate="yes" xml:space="preserve">
          <source>Reads a line from the standard input (&lt;code&gt;IoDevice&lt;/code&gt;), prompting it with &lt;code&gt;Prompt&lt;/code&gt;.</source>
          <target state="translated">从标准输入（ &lt;code&gt;IoDevice&lt;/code&gt; ）读取一行，并用 &lt;code&gt;Prompt&lt;/code&gt; 提示。</target>
        </trans-unit>
        <trans-unit id="36b17ad13f0b033f6df4a993a7b171c360fa8c45" translate="yes" xml:space="preserve">
          <source>Reads a line of bytes/characters from the file referenced by &lt;code&gt;IoDevice&lt;/code&gt;. Lines are defined to be delimited by the linefeed (LF, &lt;code&gt;\n&lt;/code&gt;) character, but any carriage return (CR, &lt;code&gt;\r&lt;/code&gt;) followed by a newline is also treated as a single LF character (the carriage return is silently ignored). The line is returned &lt;strong&gt;including&lt;/strong&gt; the LF, but excluding any CR immediately followed by an LF. This behaviour is consistent with the behaviour of &lt;code&gt;io:get_line/2&lt;/code&gt;. If end of file is reached without any LF ending the last line, a line with no trailing LF is returned.</source>
          <target state="translated">从 &lt;code&gt;IoDevice&lt;/code&gt; 引用的文件中读取一行字节/字符。行定义为由换行符（LF， &lt;code&gt;\n&lt;/code&gt; ）分隔，但是任何回车符（CR， &lt;code&gt;\r&lt;/code&gt; ）后跟换行符也将被视为单个LF字符（回车符将被忽略）。返回的行&lt;strong&gt;包括&lt;/strong&gt; LF，但不包括紧随其后的LF的任何CR。此行为与 &lt;code&gt;io:get_line/2&lt;/code&gt; 的行为一致。如果到达文件末尾而没有任何LF结束最后一行，则返回没有尾随LF的行。</target>
        </trans-unit>
        <trans-unit id="aae52d304fd52a828dbf2eedbff2f04b0029c986" translate="yes" xml:space="preserve">
          <source>Reads a row by its SNMP index. This index is specified as an SNMP Object Identifier, a list of integers.</source>
          <target state="translated">通过SNMP索引读取一条记录。这个索引被指定为SNMP对象标识符,是一个整数列表。</target>
        </trans-unit>
        <trans-unit id="842ce7e26143e68269e6af73ca149569ed32c0c5" translate="yes" xml:space="preserve">
          <source>Reads a term &lt;code&gt;Term&lt;/code&gt; from &lt;code&gt;IoDevice&lt;/code&gt;, prompting it with &lt;code&gt;Prompt&lt;/code&gt;. Reading starts at location &lt;code&gt;StartLocation&lt;/code&gt;. Argument &lt;code&gt;Options&lt;/code&gt; is passed on as argument &lt;code&gt;Options&lt;/code&gt; of function &lt;code&gt;&lt;a href=&quot;erl_scan#tokens-4&quot;&gt;erl_scan:tokens/4&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;IoDevice&lt;/code&gt; 读取术语 &lt;code&gt;Term&lt;/code&gt; ，并用 &lt;code&gt;Prompt&lt;/code&gt; 提示。读取从位置 &lt;code&gt;StartLocation&lt;/code&gt; 开始。参数 &lt;code&gt;Options&lt;/code&gt; 被传递作为参数 &lt;code&gt;Options&lt;/code&gt; 功能的 &lt;code&gt;&lt;a href=&quot;erl_scan#tokens-4&quot;&gt;erl_scan:tokens/4&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0d4db0c3277853bee5baecd76ea077556e6a19fa" translate="yes" xml:space="preserve">
          <source>Reads a term &lt;code&gt;Term&lt;/code&gt; from the standard input (&lt;code&gt;IoDevice&lt;/code&gt;), prompting it with &lt;code&gt;Prompt&lt;/code&gt;.</source>
          <target state="translated">从标准输入（ &lt;code&gt;IoDevice&lt;/code&gt; ）读取术语 &lt;code&gt;Term&lt;/code&gt; ，并用 &lt;code&gt;Prompt&lt;/code&gt; 提示。</target>
        </trans-unit>
        <trans-unit id="ac643941e9886622de2937798fd5270edc0fabf5" translate="yes" xml:space="preserve">
          <source>Reads a time stamp into the memory pointed to by parameter &lt;code&gt;now&lt;/code&gt;. For information about specific fields, see &lt;code&gt;&lt;a href=&quot;#ErlDrvNowData&quot;&gt;ErlDrvNowData&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">读取时间戳到由参数指向的内存 &lt;code&gt;now&lt;/code&gt; 。有关特定字段的信息，请参见 &lt;code&gt;&lt;a href=&quot;#ErlDrvNowData&quot;&gt;ErlDrvNowData&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c19818e3b583cae64bcc594ab0744745d21d8def" translate="yes" xml:space="preserve">
          <source>Reads all records from table &lt;code&gt;Tab&lt;/code&gt; with key &lt;code&gt;Key&lt;/code&gt;. This function has the same semantics regardless of the location of &lt;code&gt;Tab&lt;/code&gt;. If the table is of type &lt;code&gt;bag&lt;/code&gt;, the function &lt;code&gt;mnesia:read(Tab, Key)&lt;/code&gt; can return an arbitrarily long list. If the table is of type &lt;code&gt;set&lt;/code&gt;, the list is either of length 1, or &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">使用键 &lt;code&gt;Key&lt;/code&gt; 从表 &lt;code&gt;Tab&lt;/code&gt; 读取所有记录。无论 &lt;code&gt;Tab&lt;/code&gt; 的位置如何，此函数具有相同的语义。如果表的类型为 &lt;code&gt;bag&lt;/code&gt; ，则函数 &lt;code&gt;mnesia:read(Tab, Key)&lt;/code&gt; 可以返回任意长的列表。如果表是 &lt;code&gt;set&lt;/code&gt; 类型的，则列表的长度为1或 &lt;code&gt;[]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5c89de20ea0caf916aed94b0b16edcd0fa5a8208" translate="yes" xml:space="preserve">
          <source>Reads and evaluates Erlang expressions, separated by '.' (or ',', a sequence of expressions is also an expression) from &lt;code&gt;Filename&lt;/code&gt;. The result of the evaluation is not returned; any expression sequence in the file must be there for its side effect. Returns one of the following:</source>
          <target state="translated">读取并评估以&amp;ldquo;。&amp;rdquo;分隔的Erlang表达式。（或&amp;ldquo;，&amp;rdquo;，表达式序列也是表达式）来自 &lt;code&gt;Filename&lt;/code&gt; 。评估结果不返回；文件中的任何表达序列都必须存在，以免产生副作用。返回以下之一：</target>
        </trans-unit>
        <trans-unit id="a4538536a6029a3eaaa364e5024ba9396498603a" translate="yes" xml:space="preserve">
          <source>Reads and evaluates Erlang expressions, separated by '.' (or ',', a sequence of expressions is also an expression), from the file.</source>
          <target state="translated">从文件中读取并评估用'.'(或',',表达式序列也是表达式)分隔的Erlang表达式。</target>
        </trans-unit>
        <trans-unit id="f86a65da862e66ea58fe0b1e1894f4ad5ab8707c" translate="yes" xml:space="preserve">
          <source>Reads and parses a file. If successful, &lt;code&gt;{ok, Forms}&lt;/code&gt; is returned, where &lt;code&gt;Forms&lt;/code&gt; is a list of abstract syntax trees representing the &quot;program forms&quot; of the file (cf. &lt;code&gt;erl_syntax:is_form/1&lt;/code&gt;). Otherwise, &lt;code&gt;{error, errorinfo()}&lt;/code&gt; is returned, typically if the file could not be opened. Note that parse errors show up as error markers in the returned list of forms; they do not cause this function to fail or return &lt;code&gt;{error, errorinfo()}&lt;/code&gt;.</source>
          <target state="translated">读取并解析文件。如果成功，则返回 &lt;code&gt;{ok, Forms}&lt;/code&gt; ，其中 &lt;code&gt;Forms&lt;/code&gt; 是代表文件&amp;ldquo;程序形式&amp;rdquo;的抽象语法树的列表（请参阅 &lt;code&gt;erl_syntax:is_form/1&lt;/code&gt; ）。否则，通常会在无法打开文件的情况下返回 &lt;code&gt;{error, errorinfo()}&lt;/code&gt; 。请注意，解析错误在返回的表单列表中显示为错误标记。它们不会导致此函数失败或返回 &lt;code&gt;{error, errorinfo()}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2920dcddbbb429fc599c5c461913301f70aa81e6" translate="yes" xml:space="preserve">
          <source>Reads and parses a single program form from an I/O stream. Characters are read from &lt;code&gt;IODevice&lt;/code&gt; until an end-of-form marker is found (a period character followed by whitespace), or until end-of-file; apart from this, the behaviour is similar to that of &lt;code&gt;parse/3&lt;/code&gt;, except that the return values also contain the final line number given that &lt;code&gt;StartLine&lt;/code&gt; is the initial line number, and that &lt;code&gt;{eof, LineNo}&lt;/code&gt; may be returned.</source>
          <target state="translated">从I / O流读取并解析单个程序形式。从 &lt;code&gt;IODevice&lt;/code&gt; 读取字符，直到找到格式结束标记（句点字符后跟空白），或者直到文件结束；除此之外，该行为与 &lt;code&gt;parse/3&lt;/code&gt; 相似，不同之处在于返回值还包含最终行号（假定 &lt;code&gt;StartLine&lt;/code&gt; 是初始行号），并且可以返回 &lt;code&gt;{eof, LineNo}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a5c3bcde53de74966bb137b9992cbcf8bea8b82b" translate="yes" xml:space="preserve">
          <source>Reads and parses program text from an I/O stream. Characters are read from &lt;code&gt;IODevice&lt;/code&gt; until end-of-file; apart from this, the behaviour is the same as for &lt;code&gt;&lt;a href=&quot;#parse_file-2&quot;&gt;parse_file/2&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;StartLine&lt;/code&gt; is the initial line number, which should be a positive integer.</source>
          <target state="translated">从I / O流读取和解析程序文本。从 &lt;code&gt;IODevice&lt;/code&gt; 读取字符，直到文件结束。除此之外，其行为与 &lt;code&gt;&lt;a href=&quot;#parse_file-2&quot;&gt;parse_file/2&lt;/a&gt;&lt;/code&gt; 相同。 &lt;code&gt;StartLine&lt;/code&gt; 是初始行号，应为正整数。</target>
        </trans-unit>
        <trans-unit id="575313b04f7b2d9ade2c2ac804470bebb4ac3f46" translate="yes" xml:space="preserve">
          <source>Reads characters from the standard input (&lt;code&gt;IoDevice&lt;/code&gt;), prompting it with &lt;code&gt;Prompt&lt;/code&gt;. Interprets the characters in accordance with &lt;code&gt;Format&lt;/code&gt;. &lt;code&gt;Format&lt;/code&gt; contains control sequences that directs the interpretation of the input.</source>
          <target state="translated">从标准输入（ &lt;code&gt;IoDevice&lt;/code&gt; ）读取字符，并用 &lt;code&gt;Prompt&lt;/code&gt; 提示。根据 &lt;code&gt;Format&lt;/code&gt; 解释字符。 &lt;code&gt;Format&lt;/code&gt; 包含控制序列，指导输入的解释。</target>
        </trans-unit>
        <trans-unit id="936b3c9cc90592c88890f5bba0974bbcc4534300" translate="yes" xml:space="preserve">
          <source>Reads chunk data for all chunks.</source>
          <target state="translated">读取所有分块的分块数据。</target>
        </trans-unit>
        <trans-unit id="5478616d388c3efd3ce75d4d04ed80f7b653d5be" translate="yes" xml:space="preserve">
          <source>Reads chunk data for selected chunks references. The order of the returned list of chunk data is determined by the order of the list of chunks references.</source>
          <target state="translated">读取选定的chunks引用的chunk数据。返回的chunk数据列表的顺序由chunks引用列表的顺序决定。</target>
        </trans-unit>
        <trans-unit id="b313c71e885968a16f290931cc4dc9de8929bf2d" translate="yes" xml:space="preserve">
          <source>Reads configuration data values.</source>
          <target state="translated">读取配置数据值。</target>
        </trans-unit>
        <trans-unit id="9149fffa2a35130db955805683d3e726e8bc00d9" translate="yes" xml:space="preserve">
          <source>Reads data from the standard input (&lt;code&gt;IoDevice&lt;/code&gt;), prompting it with &lt;code&gt;Prompt&lt;/code&gt;. Reading starts at location &lt;code&gt;StartLocation&lt;/code&gt; (&lt;code&gt;1&lt;/code&gt;). Argument &lt;code&gt;Options&lt;/code&gt; is passed on as argument &lt;code&gt;Options&lt;/code&gt; of function &lt;code&gt;&lt;a href=&quot;erl_scan#tokens-4&quot;&gt;erl_scan:tokens/4&lt;/a&gt;&lt;/code&gt;. The data is tokenized as if it were a sequence of Erlang expressions until a final dot (&lt;code&gt;.&lt;/code&gt;) is reached. This token is also returned.</source>
          <target state="translated">从标准输入（ &lt;code&gt;IoDevice&lt;/code&gt; ）读取数据，并用 &lt;code&gt;Prompt&lt;/code&gt; 提示。读取从位置 &lt;code&gt;StartLocation&lt;/code&gt; （ &lt;code&gt;1&lt;/code&gt; ）开始。参数 &lt;code&gt;Options&lt;/code&gt; 被传递作为参数 &lt;code&gt;Options&lt;/code&gt; 功能的 &lt;code&gt;&lt;a href=&quot;erl_scan#tokens-4&quot;&gt;erl_scan:tokens/4&lt;/a&gt;&lt;/code&gt; 。对数据进行标记，就像它是一个Erlang表达式序列一样，直到到达最后一个点（ &lt;code&gt;.&lt;/code&gt; ）。此令牌也将返回。</target>
        </trans-unit>
        <trans-unit id="374c9ef16799b9abb4e9d26f5fa912264a6e1657" translate="yes" xml:space="preserve">
          <source>Reads data from the standard input (&lt;code&gt;IoDevice&lt;/code&gt;), prompting it with &lt;code&gt;Prompt&lt;/code&gt;. Starts reading at location &lt;code&gt;StartLocation&lt;/code&gt; (&lt;code&gt;1&lt;/code&gt;). Argument &lt;code&gt;Options&lt;/code&gt; is passed on as argument &lt;code&gt;Options&lt;/code&gt; of function &lt;code&gt;&lt;a href=&quot;erl_scan#tokens-4&quot;&gt;erl_scan:tokens/4&lt;/a&gt;&lt;/code&gt;. The data is tokenized and parsed as if it was a sequence of Erlang expressions until a final dot (&lt;code&gt;.&lt;/code&gt;) is reached.</source>
          <target state="translated">从标准输入（ &lt;code&gt;IoDevice&lt;/code&gt; ）读取数据，并用 &lt;code&gt;Prompt&lt;/code&gt; 提示。从位置 &lt;code&gt;StartLocation&lt;/code&gt; （ &lt;code&gt;1&lt;/code&gt; ）开始读取。参数 &lt;code&gt;Options&lt;/code&gt; 被传递作为参数 &lt;code&gt;Options&lt;/code&gt; 功能的 &lt;code&gt;&lt;a href=&quot;erl_scan#tokens-4&quot;&gt;erl_scan:tokens/4&lt;/a&gt;&lt;/code&gt; 。对数据进行标记和解析，就好像它是一个Erlang表达式序列一样，直到到达最后一个点（ &lt;code&gt;.&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="b1cad2965b9c36b880989ab004d941243e0ccdf7" translate="yes" xml:space="preserve">
          <source>Reads data from the standard input (&lt;code&gt;IoDevice&lt;/code&gt;), prompting it with &lt;code&gt;Prompt&lt;/code&gt;. Starts reading at location &lt;code&gt;StartLocation&lt;/code&gt; (&lt;code&gt;1&lt;/code&gt;). Argument &lt;code&gt;Options&lt;/code&gt; is passed on as argument &lt;code&gt;Options&lt;/code&gt; of function &lt;code&gt;&lt;a href=&quot;erl_scan#tokens-4&quot;&gt;erl_scan:tokens/4&lt;/a&gt;&lt;/code&gt;. The data is tokenized and parsed as if it was an Erlang form (one of the valid Erlang expressions in an Erlang source file) until a final dot (&lt;code&gt;.&lt;/code&gt;) is reached.</source>
          <target state="translated">从标准输入（ &lt;code&gt;IoDevice&lt;/code&gt; ）读取数据，并用 &lt;code&gt;Prompt&lt;/code&gt; 提示。从位置 &lt;code&gt;StartLocation&lt;/code&gt; （ &lt;code&gt;1&lt;/code&gt; ）开始读取。参数 &lt;code&gt;Options&lt;/code&gt; 被传递作为参数 &lt;code&gt;Options&lt;/code&gt; 功能的 &lt;code&gt;&lt;a href=&quot;erl_scan#tokens-4&quot;&gt;erl_scan:tokens/4&lt;/a&gt;&lt;/code&gt; 。对数据进行标记和解析，就好像它是Erlang形式（Erlang源文件中的有效Erlang表达式之一），直到到达最后一个点（ &lt;code&gt;.&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="595f61201ea85ff9dc6c8defa70b03e0e2371abf" translate="yes" xml:space="preserve">
          <source>Reads data from the standard input (&lt;code&gt;IoDevice&lt;/code&gt;), prompting it with &lt;code&gt;Prompt&lt;/code&gt;. Starts reading at location &lt;code&gt;StartLocation&lt;/code&gt; (&lt;code&gt;1&lt;/code&gt;). Argument &lt;code&gt;Options&lt;/code&gt; is passed on as argument &lt;code&gt;Options&lt;/code&gt; of function &lt;code&gt;&lt;a href=&quot;erl_scan#tokens-4&quot;&gt;erl_scan:tokens/4&lt;/a&gt;&lt;/code&gt;. The data is tokenized as if it was an Erlang form (one of the valid Erlang expressions in an Erlang source file) until a final dot (&lt;code&gt;.&lt;/code&gt;) is reached. This last token is also returned.</source>
          <target state="translated">从标准输入（ &lt;code&gt;IoDevice&lt;/code&gt; ）读取数据，并用 &lt;code&gt;Prompt&lt;/code&gt; 提示。从位置 &lt;code&gt;StartLocation&lt;/code&gt; （ &lt;code&gt;1&lt;/code&gt; ）开始读取。参数 &lt;code&gt;Options&lt;/code&gt; 被传递作为参数 &lt;code&gt;Options&lt;/code&gt; 功能的 &lt;code&gt;&lt;a href=&quot;erl_scan#tokens-4&quot;&gt;erl_scan:tokens/4&lt;/a&gt;&lt;/code&gt; 。直到到达最后一个点（ &lt;code&gt;.&lt;/code&gt; ）为止，数据都被标记为好像是Erlang形式（Erlang源文件中的有效Erlang表达式之一）。最后一个令牌也将返回。</target>
        </trans-unit>
        <trans-unit id="adade152b720618374d89b5e6eb7f3a1c8be4d9d" translate="yes" xml:space="preserve">
          <source>Reads data in parts from the file. This is intended for memory-limited machines that, for example, builds a tar file on a remote machine over SFTP, see &lt;code&gt;ssh_sftp:open_tar/3&lt;/code&gt;.</source>
          <target state="translated">从文件中部分读取数据。这适用于内存受限的计算机，例如，通过SFTP在远程计算机上构建tar文件，请参见 &lt;code&gt;ssh_sftp:open_tar/3&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b2dd7f9783c71e871e5a5536f61fe7d2f34a7b79" translate="yes" xml:space="preserve">
          <source>Reads each &lt;code&gt;Mod&lt;/code&gt; from directory &lt;code&gt;App-Vsn/ebin&lt;/code&gt; as a binary. It does not load the modules. The instruction is to be placed first in the script to read all new code from the file to make the suspend-load-resume cycle less time-consuming.</source>
          <target state="translated">从目录 &lt;code&gt;App-Vsn/ebin&lt;/code&gt; 中读取每个 &lt;code&gt;Mod&lt;/code&gt; 作为二进制文件。它不会加载模块。该指令将放置在脚本的最前面，以从文件中读取所有新代码，以使suspense-load-resume循环的耗时减少。</target>
        </trans-unit>
        <trans-unit id="5f9e8132777eeeea0b0b9630390bdccb83499a2f" translate="yes" xml:space="preserve">
          <source>Reads file &lt;code&gt;.hosts.erlang&lt;/code&gt;, see section &lt;code&gt;&lt;a href=&quot;#files&quot;&gt;Files&lt;/a&gt;&lt;/code&gt;. Returns the hosts in this file as a list. Returns &lt;code&gt;{error, Reason}&lt;/code&gt; if the file cannot be read or the Erlang terms on the file cannot be interpreted.</source>
          <target state="translated">读取文件 &lt;code&gt;.hosts.erlang&lt;/code&gt; ，请参阅 &lt;code&gt;&lt;a href=&quot;#files&quot;&gt;Files&lt;/a&gt;&lt;/code&gt; 部分。以列表形式返回此文件中的主机。如果无法读取文件或无法解释文件上的Erlang术语，则返回 &lt;code&gt;{error, Reason}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="acd0eef8d72bba8b5179acfa61549202aee45b07" translate="yes" xml:space="preserve">
          <source>Reads from an open file, without waiting for the result. If the handle is valid, the function returns &lt;code&gt;{async, N}&lt;/code&gt;, where &lt;code&gt;N&lt;/code&gt; is a term guaranteed to be unique between calls of &lt;code&gt;aread&lt;/code&gt;. The actual data is sent as a message to the calling process. This message has the form &lt;code&gt;{async_reply, N, Result}&lt;/code&gt;, where &lt;code&gt;Result&lt;/code&gt; is the result from the read, either &lt;code&gt;{ok, Data}&lt;/code&gt;, &lt;code&gt;eof&lt;/code&gt;, or &lt;code&gt;{error, reason()}&lt;/code&gt;.</source>
          <target state="translated">从打开的文件中读取，而无需等待结果。如果该句柄有效，则该函数返回 &lt;code&gt;{async, N}&lt;/code&gt; ，其中 &lt;code&gt;N&lt;/code&gt; 是保证在 &lt;code&gt;aread&lt;/code&gt; 的调用之间唯一的术语。实际数据作为消息发送到调用过程。该消息的格式为 &lt;code&gt;{async_reply, N, Result}&lt;/code&gt; ，其中 &lt;code&gt;Result&lt;/code&gt; 是读取的结果，可以是 &lt;code&gt;{ok, Data}&lt;/code&gt; ， &lt;code&gt;eof&lt;/code&gt; 或 &lt;code&gt;{error, reason()}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="473a3f49d1f005cdbfb18d83b547219146f6b620" translate="yes" xml:space="preserve">
          <source>Reads information about the timetrap set for the current test case. &lt;code&gt;Scaling&lt;/code&gt; indicates if &lt;code&gt;Common Test&lt;/code&gt; will attempt to compensate timetraps automatically for runtime delays introduced by, for example, tools like cover. &lt;code&gt;ScaleVal&lt;/code&gt; is the value of the current scaling multipler (always 1 if scaling is disabled). Note the &lt;code&gt;Time&lt;/code&gt; is not the scaled result.</source>
          <target state="translated">读取有关为当前测试用例设置的时间陷阱的信息。 &lt;code&gt;Scaling&lt;/code&gt; 表示 &lt;code&gt;Common Test&lt;/code&gt; 是否会尝试自动补偿时间陷阱，以弥补例如Cover等工具引入的运行时延迟。 &lt;code&gt;ScaleVal&lt;/code&gt; 是当前缩放倍数的值（如果禁用缩放，则始终为1）。请注意， &lt;code&gt;Time&lt;/code&gt; 不是换算结果。</target>
        </trans-unit>
        <trans-unit id="5cb0a0e95145733613cfe1c4d5d32a786e548cb7" translate="yes" xml:space="preserve">
          <source>Reads one or more terms from the test specification used to configure and run this test. &lt;code&gt;Tag&lt;/code&gt; is any valid test specification tag, for example, &lt;code&gt;label&lt;/code&gt;, &lt;code&gt;config&lt;/code&gt;, or &lt;code&gt;logdir&lt;/code&gt;. User-specific terms are also available to read if option &lt;code&gt;allow_user_terms&lt;/code&gt; is set.</source>
          <target state="translated">从用于配置和运行此测试的测试规范中读取一个或多个术语。 &lt;code&gt;Tag&lt;/code&gt; 是任何有效的测试规范标签，例如 &lt;code&gt;label&lt;/code&gt; ， &lt;code&gt;config&lt;/code&gt; 或 &lt;code&gt;logdir&lt;/code&gt; 。如果设置了 &lt;code&gt;allow_user_terms&lt;/code&gt; 选项，则还可以读取用户特定的术语。</target>
        </trans-unit>
        <trans-unit id="9678f45370812f85bf721cb4a46a673223c64b44" translate="yes" xml:space="preserve">
          <source>Reads record definitions from a module's BEAM file. If there are no record definitions in the BEAM file, the source file is located and read instead. Returns the names of the record definitions read. &lt;code&gt;Module&lt;/code&gt; is an atom.</source>
          <target state="translated">从模块的BEAM文件中读取记录定义。如果BEAM文件中没有记录定义，那么将查找并读取源文件。返回读取的记录定义的名称。 &lt;code&gt;Module&lt;/code&gt; 是一个原子。</target>
        </trans-unit>
        <trans-unit id="df8cc01b9c5d974fd88821805f092bbf2d9438ba" translate="yes" xml:space="preserve">
          <source>Reads record definitions from files but discards record names not mentioned in &lt;code&gt;RecordNames&lt;/code&gt; (a record name or a list of record names).</source>
          <target state="translated">从文件中读取记录定义，但丢弃 &lt;code&gt;RecordNames&lt;/code&gt; 中未提及的记录名（记录名或记录名列表）。</target>
        </trans-unit>
        <trans-unit id="c7a29df53eefec6311892690ec9b68fab17c6c71" translate="yes" xml:space="preserve">
          <source>Reads record definitions from files. Existing definitions of any of the record names read are replaced. &lt;code&gt;Wildcard&lt;/code&gt; is a wildcard string as defined in &lt;code&gt;&lt;a href=&quot;filelib&quot;&gt;filelib(3)&lt;/a&gt;&lt;/code&gt;, but not an atom.</source>
          <target state="translated">从文件中读取记录定义。读取的任何记录名称的现有定义将被替换。 &lt;code&gt;Wildcard&lt;/code&gt; 是 &lt;code&gt;&lt;a href=&quot;filelib&quot;&gt;filelib(3)&lt;/a&gt;&lt;/code&gt; 中定义的通配符字符串，而不是原子。</target>
        </trans-unit>
        <trans-unit id="1d4affa78ab45ecbfb3d3d5e0421aca7b1d8b2a0" translate="yes" xml:space="preserve">
          <source>Reads record definitions from files. The compiler options &lt;code&gt;{i,&amp;nbsp;Dir}&lt;/code&gt;, &lt;code&gt;{d,&amp;nbsp;Macro}&lt;/code&gt;, and &lt;code&gt;{d,&amp;nbsp;Macro,&amp;nbsp;Value}&lt;/code&gt; are recognized and used for setting up the include path and macro definitions. To read all record definitions, use &lt;code&gt;'_'&lt;/code&gt; as value of &lt;code&gt;RecordNames&lt;/code&gt;.</source>
          <target state="translated">从文件中读取记录定义。编译器选项 &lt;code&gt;{i,&amp;nbsp;Dir}&lt;/code&gt; ， &lt;code&gt;{d,&amp;nbsp;Macro}&lt;/code&gt; 和 &lt;code&gt;{d,&amp;nbsp;Macro,&amp;nbsp;Value}&lt;/code&gt; 被识别并用于设置包含路径和宏定义。要读取所有记录定义，请使用 &lt;code&gt;'_'&lt;/code&gt; 作为 &lt;code&gt;RecordNames&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="a97a11fc0cb6ea77a20ef2c272dd9b0c766b3e97" translate="yes" xml:space="preserve">
          <source>Reads the &lt;code&gt;&lt;a href=&quot;#encoding&quot;&gt;encoding&lt;/a&gt;&lt;/code&gt; from an I/O device and sets the encoding of the device accordingly. The position of the I/O device referenced by &lt;code&gt;File&lt;/code&gt; is not affected. If no valid encoding can be read from the I/O device, the encoding of the I/O device is set to the &lt;code&gt;&lt;a href=&quot;#encoding&quot;&gt;encoding&lt;/a&gt;&lt;/code&gt; specified by &lt;code&gt;Default&lt;/code&gt;.</source>
          <target state="translated">从I / O设备读取 &lt;code&gt;&lt;a href=&quot;#encoding&quot;&gt;encoding&lt;/a&gt;&lt;/code&gt; ，并相应地设置设备的编码。 &lt;code&gt;File&lt;/code&gt; 引用的I / O设备的位置不受影响。如果无法从I / O设备读取有效的编码，则将I / O设备的编码设置为 &lt;code&gt;Default&lt;/code&gt; 指定的 &lt;code&gt;&lt;a href=&quot;#encoding&quot;&gt;encoding&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5f93ddca5006ccdbb3f7596d1f8a8390df9f011d" translate="yes" xml:space="preserve">
          <source>Reads the &lt;code&gt;&lt;a href=&quot;#encoding&quot;&gt;encoding&lt;/a&gt;&lt;/code&gt; from an I/O device and sets the encoding of the device accordingly. The position of the I/O device referenced by &lt;code&gt;File&lt;/code&gt; is not affected. If no valid encoding can be read from the I/O device, the encoding of the I/O device is set to the default encoding.</source>
          <target state="translated">从I / O设备读取 &lt;code&gt;&lt;a href=&quot;#encoding&quot;&gt;encoding&lt;/a&gt;&lt;/code&gt; ，并相应地设置设备的编码。 &lt;code&gt;File&lt;/code&gt; 引用的I / O设备的位置不受影响。如果无法从I / O设备读取有效的编码，则将I / O设备的编码设置为默认编码。</target>
        </trans-unit>
        <trans-unit id="a7c87f7c3cd992fe79a2c1b8d950c1deaacc9012" translate="yes" xml:space="preserve">
          <source>Reads the application configuration parameter &lt;code&gt;logger&lt;/code&gt; and calls &lt;code&gt;add_handlers/1&lt;/code&gt; with its contents.</source>
          <target state="translated">读取应用程序配置参数 &lt;code&gt;logger&lt;/code&gt; 并调用 &lt;code&gt;add_handlers/1&lt;/code&gt; 及其内容。</target>
        </trans-unit>
        <trans-unit id="0978dc894d2a71b1cf1cfdef66ccd9de4a864810" translate="yes" xml:space="preserve">
          <source>Reads the current time of a timer, and places the result in &lt;code&gt;time_left&lt;/code&gt;. This is the time in milliseconds, before the time-out occurs.</source>
          <target state="translated">读取计时器的当前时间，并将结果放置在 &lt;code&gt;time_left&lt;/code&gt; 中。这是超时发生之前的时间（以毫秒为单位）。</target>
        </trans-unit>
        <trans-unit id="ef330399fd66929e3d50b54bbdd55115fbd0d652" translate="yes" xml:space="preserve">
          <source>Reads the file &lt;code&gt;Filename&lt;/code&gt; and creates raw profile data that is stored in RAM by the &lt;code&gt;fprof&lt;/code&gt; server. If the option &lt;code&gt;file&lt;/code&gt; is given, or none of these options are given, the file &lt;code&gt;&quot;fprof.trace&quot;&lt;/code&gt; is read. The call will return when the whole trace has been read with the return value &lt;code&gt;ok&lt;/code&gt; if successful. This option is not allowed with the &lt;code&gt;start&lt;/code&gt; or &lt;code&gt;stop&lt;/code&gt; options.</source>
          <target state="translated">读取文件 &lt;code&gt;Filename&lt;/code&gt; 并创建由 &lt;code&gt;fprof&lt;/code&gt; 服务器存储在RAM中的原始配置文件数据。如果给出了选项 &lt;code&gt;file&lt;/code&gt; ，或者没有给出这些选项，则读取文件 &lt;code&gt;&quot;fprof.trace&quot;&lt;/code&gt; 。读取完整的跟踪后，如果成功，则返回 &lt;code&gt;ok&lt;/code&gt; ，调用将返回。 &lt;code&gt;start&lt;/code&gt; 或 &lt;code&gt;stop&lt;/code&gt; 选项不允许使用此选项。</target>
        </trans-unit>
        <trans-unit id="49742bfb294b102cbe18de7cfaaa6d790db477e2" translate="yes" xml:space="preserve">
          <source>Reads the file &lt;code&gt;mysystem.rel&lt;/code&gt; and creates a new file &lt;code&gt;plain.rel&lt;/code&gt; that is identical to the former, except that it only lists the Kernel and STDLIB applications.</source>
          <target state="translated">读取文件 &lt;code&gt;mysystem.rel&lt;/code&gt; 并创建一个与前一个文件相同的新文件 &lt;code&gt;plain.rel&lt;/code&gt; ，只不过它列出了内核和STDLIB应用程序。</target>
        </trans-unit>
        <trans-unit id="f903b588a4d361175c96f10e6de158fead02c148" translate="yes" xml:space="preserve">
          <source>Reads the link target from the symbolic link specified by &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;name&lt;/code&gt; 指定的符号链接中读取链接目标。</target>
        </trans-unit>
        <trans-unit id="e21a2e27c60061a5209d8bcd0b5afd002f70ac3e" translate="yes" xml:space="preserve">
          <source>Reads the next chunk of uncompressed data, initialized by &lt;code&gt;&lt;a href=&quot;#inflateChunk-2&quot;&gt;inflateChunk/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">读取下一个由 &lt;code&gt;&lt;a href=&quot;#inflateChunk-2&quot;&gt;inflateChunk/2&lt;/a&gt;&lt;/code&gt; 初始化的未压缩数据块。</target>
        </trans-unit>
        <trans-unit id="a4416420a93781bcc0dc5f8a20da753372346242" translate="yes" xml:space="preserve">
          <source>Reads the referenced XML schema and checks that it is valid. Returns the &lt;code&gt;global_state()&lt;/code&gt; with schema info or an error reason. The error reason may be a list of several errors or a single error encountered during the processing.</source>
          <target state="translated">读取引用的XML模式并检查其是否有效。返回带有模式信息或错误原因的 &lt;code&gt;global_state()&lt;/code&gt; 。错误原因可能是在处理过程中遇到的几个错误或单个错误的列表。</target>
        </trans-unit>
        <trans-unit id="6fd38efe5a280152c0ed35ee9c7f2ad0f403268c" translate="yes" xml:space="preserve">
          <source>Reads the referenced XML schemas and controls they are valid. Returns the &lt;code&gt;global_state()&lt;/code&gt; with schema info or an error reason. The error reason may be a list of several errors or a single error encountered during the processing.</source>
          <target state="translated">读取引用的XML模式并控制它们有效。返回带有模式信息或错误原因的 &lt;code&gt;global_state()&lt;/code&gt; 。错误原因可能是在处理过程中遇到的几个错误或单个错误的列表。</target>
        </trans-unit>
        <trans-unit id="9173077db3e9017296abe012415cae4350f279ec" translate="yes" xml:space="preserve">
          <source>Reads the runtime system version (&lt;code&gt;&quot;5.10.4&quot;&lt;/code&gt;) and release version (&lt;code&gt;&quot;FIRST&quot;&lt;/code&gt;) from the file &lt;code&gt;start_erl.data&lt;/code&gt;.</source>
          <target state="translated">从文件 &lt;code&gt;start_erl.data&lt;/code&gt; 中读取运行时系统版本（ &lt;code&gt;&quot;5.10.4&quot;&lt;/code&gt; ）和发行版本（ &lt;code&gt;&quot;FIRST&quot;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="839d040990703f858648a5ce1365721721986faf" translate="yes" xml:space="preserve">
          <source>Reads the schema state with all information of the processed schema from a file created with &lt;code&gt;state2file/[1,2]&lt;/code&gt;. The format of this file is internal. The state can then be used validating an XML document.</source>
          <target state="translated">从使用 &lt;code&gt;state2file/[1,2]&lt;/code&gt; 创建的文件中读取模式状态以及已处理模式的所有信息。该文件的格式是内部的。然后可以使用该状态来验证XML文档。</target>
        </trans-unit>
        <trans-unit id="bce1e5c45b80097e6f2841595672e121dabebb10" translate="yes" xml:space="preserve">
          <source>Reads the specified binary trace log(s). The logs are processed in the order of their time stamps as long as option &lt;code&gt;disable_sort&lt;/code&gt; is not specified.</source>
          <target state="translated">读取指定的二进制跟踪日志。只要未指定选项 &lt;code&gt;disable_sort&lt;/code&gt; ,就会按照其时间戳记的顺序处理日志。</target>
        </trans-unit>
        <trans-unit id="148a9f2e73482a200b8b553fede2788e553b25f1" translate="yes" xml:space="preserve">
          <source>Reads the state of a timer that has been created by either &lt;code&gt;&lt;a href=&quot;#start_timer-4&quot;&gt;erlang:start_timer&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#send_after-4&quot;&gt;erlang:send_after&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;TimerRef&lt;/code&gt; identifies the timer, and was returned by the BIF that created the timer.</source>
          <target state="translated">读取由 &lt;code&gt;&lt;a href=&quot;#start_timer-4&quot;&gt;erlang:start_timer&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;#send_after-4&quot;&gt;erlang:send_after&lt;/a&gt;&lt;/code&gt; 创建的计时器的状态。 &lt;code&gt;TimerRef&lt;/code&gt; 标识计时器，并由创建计时器的BIF返回。</target>
        </trans-unit>
        <trans-unit id="ce5cad4e11c1c94a9f2dab2d00983fc0cb846b46" translate="yes" xml:space="preserve">
          <source>Reads the state of a timer. The same as calling &lt;code&gt;&lt;a href=&quot;#read_timer-2&quot;&gt;erlang:read_timer(TimerRef, [])&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">读取计时器的状态。与调用 &lt;code&gt;&lt;a href=&quot;#read_timer-2&quot;&gt;erlang:read_timer(TimerRef, [])&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9aa5c569849cf218527f93f7dee3cdc648481493" translate="yes" xml:space="preserve">
          <source>Reads using &lt;code&gt;UserPrivate&lt;/code&gt; but only &lt;code&gt;Size&lt;/code&gt; bytes. Notice that there is only an arity-2 read function, not an arity-1 function.</source>
          <target state="translated">使用 &lt;code&gt;UserPrivate&lt;/code&gt; 读取，但仅读取 &lt;code&gt;Size&lt;/code&gt; 字节。请注意，只有Arity-2读取功能，而没有Arity-1函数。</target>
        </trans-unit>
        <trans-unit id="15d4f658eb0b3d94a3c309c489e7d4e9bdbc4f01" translate="yes" xml:space="preserve">
          <source>Realloc always moves. When enabled, reallocate operations are more or less translated into an allocate, copy, free sequence. This often reduces memory fragmentation, but costs performance.</source>
          <target state="translated">Realloc总是在移动。当启用时,重新分配操作或多或少会转化为分配、复制、释放的序列。这通常会减少内存碎片,但会损失性能。</target>
        </trans-unit>
        <trans-unit id="fd9c4c1a235d7360d6343d538e931ae913df1102" translate="yes" xml:space="preserve">
          <source>Reallocates memory allocated by &lt;code&gt;&lt;a href=&quot;#enif_alloc&quot;&gt;enif_alloc&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;size&lt;/code&gt; bytes.</source>
          <target state="translated">将 &lt;code&gt;&lt;a href=&quot;#enif_alloc&quot;&gt;enif_alloc&lt;/a&gt;&lt;/code&gt; 分配的内存重新分配为 &lt;code&gt;size&lt;/code&gt; 字节。</target>
        </trans-unit>
        <trans-unit id="db92aea9f5fbc58fe0efec58ed9588b7d88ee22c" translate="yes" xml:space="preserve">
          <source>Reason :: term(),</source>
          <target state="translated">原因 ::term()。</target>
        </trans-unit>
        <trans-unit id="6891013bdffc70486bc0bdf2c393714c46955deb" translate="yes" xml:space="preserve">
          <source>Rebalances &lt;code&gt;Tree1&lt;/code&gt;. Notice that this is rarely necessary, but can be motivated when many nodes have been deleted from the tree without further insertions. Rebalancing can then be forced to minimize lookup times, as deletion does not rebalance the tree.</source>
          <target state="translated">重新平衡 &lt;code&gt;Tree1&lt;/code&gt; 。请注意，这很少是必需的，但是当从树中删除了许多节点而不进行进一步插入时，可能会激发这种情况。由于删除操作不会重新平衡树，因此可以强制重新平衡以最大程度地减少查找时间。</target>
        </trans-unit>
        <trans-unit id="562c2b623630d3b42ab3e60d86c0debcf41c1ff3" translate="yes" xml:space="preserve">
          <source>Rebalances the tree representation of &lt;code&gt;Set1&lt;/code&gt;. Notice that this is rarely necessary, but can be motivated when a large number of elements have been deleted from the tree without further insertions. Rebalancing can then be forced to minimise lookup times, as deletion does not rebalance the tree.</source>
          <target state="translated">重新平衡 &lt;code&gt;Set1&lt;/code&gt; 的树表示形式。请注意，这很少是必需的，但是当从树中删除了大量元素而不进行进一步插入时，可以激发这一点。由于删除操作不会重新平衡树，因此可以强制重新平衡以最大程度地减少查找时间。</target>
        </trans-unit>
        <trans-unit id="65975122721ed3cffdcd5af89ade5a30eb41911c" translate="yes" xml:space="preserve">
          <source>Reboots the system by making the old release permanent, and calls &lt;code&gt;init:reboot()&lt;/code&gt; directly. The release must have status &lt;code&gt;old&lt;/code&gt;.</source>
          <target state="translated">通过使旧版本永久生效来重新引导系统，然后直接调用 &lt;code&gt;init:reboot()&lt;/code&gt; 。版本必须具有 &lt;code&gt;old&lt;/code&gt; 状态。</target>
        </trans-unit>
        <trans-unit id="c151c49267645ae0a3f97285a4421925221ab63e" translate="yes" xml:space="preserve">
          <source>Recall that a call is a pair (From, To). &lt;code&gt;domain&lt;/code&gt; applied to a set of calls is interpreted as the set of all vertices From, and &lt;code&gt;range&lt;/code&gt; as the set of all vertices To. The interpretation of the &lt;code&gt;strict&lt;/code&gt; operator is the operand with all calls on the form (A, A) removed.</source>
          <target state="translated">回想一下，一个呼叫是一对（从，到）。应用于一组调用的 &lt;code&gt;domain&lt;/code&gt; 被解释为所有顶点从的集合， &lt;code&gt;range&lt;/code&gt; 被解释为所有顶点到的集合。 &lt;code&gt;strict&lt;/code&gt; 运算符的解释是删除了形式（A，A）上的所有调用的操作数。</target>
        </trans-unit>
        <trans-unit id="fbe39f3322855d03ba354f72c527385f73d95360" translate="yes" xml:space="preserve">
          <source>Receive buffer size.</source>
          <target state="translated">接收缓冲区大小。</target>
        </trans-unit>
        <trans-unit id="4ae1a5ec8aa92d4958acd89043f891f02e540bf3" translate="yes" xml:space="preserve">
          <source>Receive notification of a notation declaration event.</source>
          <target state="translated">接收记号声明事件的通知。</target>
        </trans-unit>
        <trans-unit id="5544b22e095d4110eb969347412c5f0ad7a7eb1f" translate="yes" xml:space="preserve">
          <source>Receive notification of a processing instruction. The Parser will send this event once for each processing instruction found: note that processing instructions may occur before or after the main document element.</source>
          <target state="translated">接收处理指令的通知。解析器将为每发现一条处理指令发送一次该事件:注意,处理指令可能发生在主文档元素之前或之后。</target>
        </trans-unit>
        <trans-unit id="fbbc3c20409ab8df6511a3a9d041b81bc1f03484" translate="yes" xml:space="preserve">
          <source>Receive notification of an unparsed entity declaration event.</source>
          <target state="translated">接收未拆分实体声明事件的通知。</target>
        </trans-unit>
        <trans-unit id="b0f707ac12424cf8350e1640b548139d4dcbc752" translate="yes" xml:space="preserve">
          <source>Receive notification of character data.</source>
          <target state="translated">接收字符数据的通知。</target>
        </trans-unit>
        <trans-unit id="e1ed75deeb63816becb327823827f361dc002ace" translate="yes" xml:space="preserve">
          <source>Receive notification of ignorable whitespace in element content.</source>
          <target state="translated">接收元素内容中可忽略的空白的通知。</target>
        </trans-unit>
        <trans-unit id="7ad2df2530dcae85b22b6938c6f4a1d9b0af6c9a" translate="yes" xml:space="preserve">
          <source>Receive notification of the beginning of a document. The SAX parser will send this event only once before any other event callbacks.</source>
          <target state="translated">接收文档开始的通知。SAX解析器将在其他事件回调之前只发送一次该事件。</target>
        </trans-unit>
        <trans-unit id="877d2315fff28722da3564b35f709435f38d644a" translate="yes" xml:space="preserve">
          <source>Receive notification of the beginning of an element. The Parser will send this event at the beginning of every element in the XML document; there will be a corresponding endElement event for every startElement event (even when the element is empty). All of the element's content will be reported, in order, before the corresponding endElement event.</source>
          <target state="translated">接收一个元素开始的通知。解析器将在XML文档中每个元素的开头发送该事件;每个startElement事件(即使元素是空的)都会有一个相应的endElement事件。元素的所有内容将按顺序在相应的endElement事件之前被报告。</target>
        </trans-unit>
        <trans-unit id="8643851b60b52ba3b3a806063fe1eea7f4aff427" translate="yes" xml:space="preserve">
          <source>Receive notification of the end of a document. The SAX parser will send this event only once, and it will be the last event during the parse.</source>
          <target state="translated">接收文档结束的通知。SAX解析器将只发送该事件一次,它将是解析过程中的最后一次事件。</target>
        </trans-unit>
        <trans-unit id="7bb259e3df1d0efa19aa9bec712acc5ac84cbaf8" translate="yes" xml:space="preserve">
          <source>Receive notification of the end of an element. The SAX parser will send this event at the end of every element in the XML document; there will be a corresponding startElement event for every endElement event (even when the element is empty).</source>
          <target state="translated">接收元素结束的通知。SAX解析器将在XML文档中的每个元素结束时发送该事件;每个endElement事件(即使元素为空)都会有一个对应的startElement事件。</target>
        </trans-unit>
        <trans-unit id="8797c16612fdf5d27b7de210d50ba2cccb65cc70" translate="yes" xml:space="preserve">
          <source>Receive pending limit (see the MGOriginatedPendingLimit and the MGCOriginatedPendingLimit of the megaco root package). This parameter specifies how many pending messages that can be received (for a sent transaction request). When the limit is exceeded, the transaction is considered lost, and an error returned to the user (through the call-back function &lt;strong&gt;handle_trans_reply&lt;/strong&gt;).</source>
          <target state="translated">接收未决限制（请参阅megaco根软件包的MGOriginatedPendingLimit和MGCOriginatedPendingLimit）。此参数指定可以接收（对于已发送的事务请求）多少个待处理消息。当超过限制时，事务被视为丢失，并且错误（通过回调函数&lt;strong&gt;handle_trans_reply&lt;/strong&gt;）返回给用户。</target>
        </trans-unit>
        <trans-unit id="3d5ecbcb08d0f4d6115bb32ff52731dfbd7a7c13" translate="yes" xml:space="preserve">
          <source>Received &lt;code&gt;Packet&lt;/code&gt; is delivered as a binary.</source>
          <target state="translated">接收到的 &lt;code&gt;Packet&lt;/code&gt; 以二进制形式传送。</target>
        </trans-unit>
        <trans-unit id="d4fc2c4f32aaa7580a805013b8ff075ec71d5b9a" translate="yes" xml:space="preserve">
          <source>Received &lt;code&gt;Packet&lt;/code&gt; is delivered as a list.</source>
          <target state="translated">接收到的 &lt;code&gt;Packet&lt;/code&gt; 以列表形式发送。</target>
        </trans-unit>
        <trans-unit id="095439cd3a95f819e845e63f1a8b1cf9a8ac21eb" translate="yes" xml:space="preserve">
          <source>Received &lt;code&gt;Packet&lt;/code&gt; is delivered as defined by &lt;code&gt;Mode&lt;/code&gt;.</source>
          <target state="translated">接收的 &lt;code&gt;Packet&lt;/code&gt; 按照 &lt;code&gt;Mode&lt;/code&gt; 的定义进行传递。</target>
        </trans-unit>
        <trans-unit id="11bdd920d9bb9ec7f1744e588b3249a3eb42f4bc" translate="yes" xml:space="preserve">
          <source>Receives a chunk of the remote file (&lt;code&gt;RemoteFile&lt;/code&gt; of &lt;code&gt;recv_chunk_start&lt;/code&gt;). The return values have the following meaning:</source>
          <target state="translated">接收大量的远程文件（ &lt;code&gt;RemoteFile&lt;/code&gt; 的 &lt;code&gt;recv_chunk_start&lt;/code&gt; ）。返回值具有以下含义：</target>
        </trans-unit>
        <trans-unit id="de7f79d5297387bcfc0d13974523a5f34bf53062" translate="yes" xml:space="preserve">
          <source>Receives a message consisting of a sequence of bytes in the Erlang external format.</source>
          <target state="translated">接收由Erlang外部格式的字节序列组成的消息。</target>
        </trans-unit>
        <trans-unit id="79120148644e55cd552daccc123d05a76cb9f13a" translate="yes" xml:space="preserve">
          <source>Receives a message to the buffer in &lt;code&gt;x&lt;/code&gt;. &lt;code&gt;ei_xreceive_msg&lt;/code&gt; allows the buffer in &lt;code&gt;x&lt;/code&gt; to grow, but &lt;code&gt;ei_receive_msg&lt;/code&gt; fails if the message is larger than the pre-allocated buffer in &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">接收消息到 &lt;code&gt;x&lt;/code&gt; 中的缓冲区。 &lt;code&gt;ei_xreceive_msg&lt;/code&gt; 允许 &lt;code&gt;x&lt;/code&gt; 中的缓冲区增加，但如果消息大于 &lt;code&gt;x&lt;/code&gt; 中的预分配缓冲区，则 &lt;code&gt;ei_receive_msg&lt;/code&gt; 失败。</target>
        </trans-unit>
        <trans-unit id="88ade3e878d068456efb014fd72f2989e409bb39" translate="yes" xml:space="preserve">
          <source>Receives a packet from a socket in passive mode. A closed socket is indicated by return value &lt;code&gt;{error, closed}&lt;/code&gt;.</source>
          <target state="translated">在被动模式下从套接字接收数据包。返回值 &lt;code&gt;{error, closed}&lt;/code&gt; 指示关闭的套接字。</target>
        </trans-unit>
        <trans-unit id="0c7ccc2574bf778a71ae7a9543f1b346cd8d49c7" translate="yes" xml:space="preserve">
          <source>Receives a packet from a socket in passive mode. Optional parameter &lt;code&gt;Timeout&lt;/code&gt; specifies a time-out in milliseconds. Defaults to &lt;code&gt;infinity&lt;/code&gt;.</source>
          <target state="translated">在被动模式下从套接字接收数据包。可选参数 &lt;code&gt;Timeout&lt;/code&gt; 以毫秒为单位指定超时。默认为 &lt;code&gt;infinity&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ef7ad247f4d592c4f5c9dd57f0200426e983df3e" translate="yes" xml:space="preserve">
          <source>Receives expected data from server on the specified session channel.</source>
          <target state="translated">在指定的会话通道上接收来自服务器的预期数据。</target>
        </trans-unit>
        <trans-unit id="cec7dde1707a867ec3ac180b1d8faf20bd5a279e" translate="yes" xml:space="preserve">
          <source>Receives messages sent to the process using the send operator (!). The patterns &lt;code&gt;Pattern&lt;/code&gt; are sequentially matched against the first message in time order in the mailbox, then the second, and so on. If a match succeeds and the optional guard sequence &lt;code&gt;GuardSeq&lt;/code&gt; is true, the corresponding &lt;code&gt;Body&lt;/code&gt; is evaluated. The matching message is consumed, that is, removed from the mailbox, while any other messages in the mailbox remain unchanged.</source>
          <target state="translated">接收使用send运算符（！）发送到进程的消息。模式 &lt;code&gt;Pattern&lt;/code&gt; 按时间顺序与邮箱中的第一个消息顺序匹配，然后与第二个消息匹配，依此类推。如果匹配成功，并且可选的保护序列 &lt;code&gt;GuardSeq&lt;/code&gt; 为true，则将评估相应的 &lt;code&gt;Body&lt;/code&gt; 。匹配的消息将被使用，即从邮箱中删除，而邮箱中的所有其他消息均保持不变。</target>
        </trans-unit>
        <trans-unit id="5cc1284ee604f9633073521a2db79d9f71aff293" translate="yes" xml:space="preserve">
          <source>Receives one packet of data.</source>
          <target state="translated">接收一个数据包。</target>
        </trans-unit>
        <trans-unit id="43e2b0fdb2b90c2ae0d79559c9136a0b0fbf1061" translate="yes" xml:space="preserve">
          <source>Receives the &lt;code&gt;Data&lt;/code&gt; message from any association of the socket. If the receive times out, &lt;code&gt;{error,timeout}&lt;/code&gt; is returned. The default time-out is &lt;code&gt;infinity&lt;/code&gt;. &lt;code&gt;FromIP&lt;/code&gt; and &lt;code&gt;FromPort&lt;/code&gt; indicate the address of the sender.</source>
          <target state="translated">从套接字的任何关联接收 &lt;code&gt;Data&lt;/code&gt; 消息。如果接收 &lt;code&gt;{error,timeout}&lt;/code&gt; 则返回{error，timeout}。默认超时是 &lt;code&gt;infinity&lt;/code&gt; 。 &lt;code&gt;FromIP&lt;/code&gt; 和 &lt;code&gt;FromPort&lt;/code&gt; 指示发送者的地址。</target>
        </trans-unit>
        <trans-unit id="31c3f1b8ef20a940b9e8eca2f6ff181ad7a8d16d" translate="yes" xml:space="preserve">
          <source>Receives the message into the specified buffer and decodes into &lt;code&gt;(ErlMessage *) emsg&lt;/code&gt;.</source>
          <target state="translated">将消息接收到指定的缓冲区中，然后解码为 &lt;code&gt;(ErlMessage *) emsg&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6e89cb081d99ed724d5931544bc83550c03a78c4" translate="yes" xml:space="preserve">
          <source>Receiving Requests</source>
          <target state="translated">接收请求</target>
        </trans-unit>
        <trans-unit id="077d735aed11e2e48a44668a13373797ed93e95f" translate="yes" xml:space="preserve">
          <source>Receiving process/port and message term</source>
          <target state="translated">接收过程/端口和信息术语</target>
        </trans-unit>
        <trans-unit id="1019a13cb6e4b083bd8b40b2d7fb5371dc84bfe2" translate="yes" xml:space="preserve">
          <source>Receiving segmented messages:</source>
          <target state="translated">接收分段信息。</target>
        </trans-unit>
        <trans-unit id="5754a8bb83120ef7d69ead91ce581426fad83335" translate="yes" xml:space="preserve">
          <source>Recognized request methods and header fields are returned as atoms. Others are returned as strings. Strings of unrecognized header fields are formatted with only capital letters first and after hyphen characters, for example, &lt;code&gt;&quot;Sec-Websocket-Key&quot;&lt;/code&gt;.</source>
          <target state="translated">公认的请求方法和标头字段作为原子返回。其他作为字符串返回。无法识别的标题字段的字符串仅以大写字母开头和后面加上连字符，例如 &lt;code&gt;&quot;Sec-Websocket-Key&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="06210493d8afafd3fbe9c98e7aefe7e12c50cb5e" translate="yes" xml:space="preserve">
          <source>Recommendations:</source>
          <target state="translated">Recommendations:</target>
        </trans-unit>
        <trans-unit id="4e0d0a34940fd710c8e8528aed83c032f4775bdb" translate="yes" xml:space="preserve">
          <source>Recomposing a map of URI components into a URI string</source>
          <target state="translated">将URI组件的映射重新组合为URI字符串。</target>
        </trans-unit>
        <trans-unit id="ce83d6ed524fb80981aa317a9b2ad1f780cc5c35" translate="yes" xml:space="preserve">
          <source>Reconnection interval (time to wait in between reconnection attempts) = 5 seconds</source>
          <target state="translated">重新连接的时间间隔(重新连接尝试之间的等待时间)=5秒。</target>
        </trans-unit>
        <trans-unit id="1fdeec60896b5fb2de70c54c0789290dbd55f5e0" translate="yes" xml:space="preserve">
          <source>Reconstitute a parsed dictionary, as returned by &lt;code&gt;&lt;a href=&quot;#codec-2&quot;&gt;codec/2&lt;/a&gt;&lt;/code&gt;, without using &lt;code&gt;&lt;code&gt;&lt;a href=&quot;diameter_dict#inherits&quot;&gt;@inherits&lt;/a&gt;&lt;/code&gt;&lt;/code&gt;. That is, construct an equivalent dictionary in which all AVP's are definined in the dictionary itself. The return value is also a parsed dictionary.</source>
          <target state="translated">重构由 &lt;code&gt;&lt;a href=&quot;#codec-2&quot;&gt;codec/2&lt;/a&gt;&lt;/code&gt; 返回的已解析字典，而不使用 &lt;code&gt;&lt;code&gt;&lt;a href=&quot;diameter_dict#inherits&quot;&gt;@inherits&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; 。也就是说，构造一个等效字典，其中所有AVP都在字典本身中定义。返回值也是一个已解析的字典。</target>
        </trans-unit>
        <trans-unit id="1d4ca640183de7618d71ecdb2e23d9ce63837fd1" translate="yes" xml:space="preserve">
          <source>Record definitions are allowed anywhere in a module, also among the function declarations. Read more in &lt;code&gt;&lt;a href=&quot;records&quot;&gt;Records&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">记录定义允许在模块中的任何位置，也可以在函数声明中使用。阅读更多 &lt;code&gt;&lt;a href=&quot;records&quot;&gt;Records&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="016cb45280daecda9b7b119fc9dace58154435ea" translate="yes" xml:space="preserve">
          <source>Record definitions for this module can be found using:</source>
          <target state="translated">本模块的记录定义可以使用:</target>
        </trans-unit>
        <trans-unit id="7cd9a03d9ebf3a3c8f7631f0aa5a3cf6db8bbced" translate="yes" xml:space="preserve">
          <source>Record expressions are translated to tuple expressions during compilation. A record defined as:</source>
          <target state="translated">记录表达式在编译过程中被翻译成元组表达式。一个记录定义为:</target>
        </trans-unit>
        <trans-unit id="7cb719be81341614e030a4a2e403c5ea98aca76f" translate="yes" xml:space="preserve">
          <source>Record names versus table names</source>
          <target state="translated">记录名与表名</target>
        </trans-unit>
        <trans-unit id="144612104dcd31483365025648e162a5188453ca" translate="yes" xml:space="preserve">
          <source>Records allow references to the fields by name, instead of by position. In the following example, a record instead of a tuple is used to store the data:</source>
          <target state="translated">记录允许用名称而不是位置来引用字段。在下面的例子中,使用记录而不是元组来存储数据。</target>
        </trans-unit>
        <trans-unit id="613bf96af83ed6c9b691f468cc1cafc02874076f" translate="yes" xml:space="preserve">
          <source>Records are extended to possibly contain type information. This is described in &lt;code&gt;&lt;a href=&quot;#typeinrecords&quot;&gt;Type Information in Record Declarations&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">记录被扩展为可能包含类型信息。 &lt;code&gt;&lt;a href=&quot;#typeinrecords&quot;&gt;Type Information in Record Declarations&lt;/a&gt;&lt;/code&gt; 中的类型信息中对此进行了描述。</target>
        </trans-unit>
        <trans-unit id="cf99ef8454e1e901403d3747fabb549275497b0b" translate="yes" xml:space="preserve">
          <source>Records have possibly been deleted. &lt;code&gt;What&lt;/code&gt; is either &lt;code&gt;{Table, Key}&lt;/code&gt; or a record &lt;code&gt;{RecordName, Key, ...}&lt;/code&gt; that was deleted. Notice that the new content depends on the table type.</source>
          <target state="translated">记录可能已删除。 &lt;code&gt;What&lt;/code&gt; 是要么 &lt;code&gt;{Table, Key}&lt;/code&gt; 或记录 &lt;code&gt;{RecordName, Key, ...}&lt;/code&gt; 被删除。请注意，新内容取决于表类型。</target>
        </trans-unit>
        <trans-unit id="9f89198d9e262f6073124ec6efc26bc57f43b091" translate="yes" xml:space="preserve">
          <source>Records in &lt;code&gt;set&lt;/code&gt; or &lt;code&gt;bag&lt;/code&gt; tables are not ordered. However, there is an ordering of the records that is unknown to the user. A table can therefore be traversed by this function with the function &lt;code&gt;mnesia:next/2&lt;/code&gt;.</source>
          <target state="translated">不订购 &lt;code&gt;set&lt;/code&gt; 表或 &lt;code&gt;bag&lt;/code&gt; 表中的记录。但是，用户不知道记录的顺序。因此，可以使用函数 &lt;code&gt;mnesia:next/2&lt;/code&gt; 遍历表。</target>
        </trans-unit>
        <trans-unit id="59700296e24a1cf9794576dac5b155d8b10dbdb1" translate="yes" xml:space="preserve">
          <source>Records in &lt;code&gt;set&lt;/code&gt; or &lt;code&gt;bag&lt;/code&gt; tables are not ordered. However, there is an ordering of the records that is unknown to the user. Therefore, a table can be traversed by this function with the function &lt;code&gt;mnesia:dirty_next/2&lt;/code&gt;.</source>
          <target state="translated">不订购 &lt;code&gt;set&lt;/code&gt; 表或 &lt;code&gt;bag&lt;/code&gt; 表中的记录。但是，用户不知道记录的顺序。因此，可以使用函数 &lt;code&gt;mnesia:dirty_next/2&lt;/code&gt; 遍历表。</target>
        </trans-unit>
        <trans-unit id="75d7ddf3a47ed2b29eb25eb18cb6fa66a868c9de" translate="yes" xml:space="preserve">
          <source>Records in &lt;code&gt;set&lt;/code&gt; or &lt;code&gt;bag&lt;/code&gt; tables are not sorted. However, there is a record order that is unknown to the user. This means that a table can be traversed by this function with the function &lt;code&gt;&lt;a href=&quot;mnesia#dirty_next-2&quot;&gt;mnesia:dirty_next/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">在唱片 &lt;code&gt;set&lt;/code&gt; 或 &lt;code&gt;bag&lt;/code&gt; 表进行排序。但是，存在用户不知道的记录顺序。这意味着可以使用函数 &lt;code&gt;&lt;a href=&quot;mnesia#dirty_next-2&quot;&gt;mnesia:dirty_next/2&lt;/a&gt;&lt;/code&gt; 遍历表。</target>
        </trans-unit>
        <trans-unit id="bb519de4fc078d24d538560c361925ce544f5dec" translate="yes" xml:space="preserve">
          <source>Recovery from communication failure</source>
          <target state="translated">从通信故障中恢复</target>
        </trans-unit>
        <trans-unit id="c857be3a0573cdabebb7a961ed6d631e3f3733de" translate="yes" xml:space="preserve">
          <source>Recovery of transactions</source>
          <target state="translated">交易的收回</target>
        </trans-unit>
        <trans-unit id="b82d4c7650ef2416c470136be1d0e55fc283f2db" translate="yes" xml:space="preserve">
          <source>Recreates the file &lt;code&gt;mysystem.tar.gz&lt;/code&gt; from the directories in the directory &lt;code&gt;tmp&lt;/code&gt; and removes &lt;code&gt;tmp&lt;/code&gt;.</source>
          <target state="translated">从目录 &lt;code&gt;tmp&lt;/code&gt; 中的目录重新创建文件 &lt;code&gt;mysystem.tar.gz&lt;/code&gt; 并删除 &lt;code&gt;tmp&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d0c24b60848ddc6e8e54f77a11b281c810436a9a" translate="yes" xml:space="preserve">
          <source>Recursion processing in PCRE differs from Perl in two important ways. In PCRE (like Python, but unlike Perl), a recursive subpattern call is always treated as an atomic group. That is, once it has matched some of the subject string, it is never re-entered, even if it contains untried alternatives and there is a subsequent matching failure. This can be illustrated by the following pattern, which means to match a palindromic string containing an odd number of characters (for example, &quot;a&quot;, &quot;aba&quot;, &quot;abcba&quot;, &quot;abcdcba&quot;):</source>
          <target state="translated">PCRE 中的递归处理与 Perl 有两个重要的区别。在PCRE中(像Python一样,但不像Perl),递归子模式调用总是被当作一个原子组。也就是说,一旦它匹配了一些主题字符串,就永远不会被重新输入,即使它包含了未尝试过的替代方案,并且随后出现了匹配失败。这一点可以用下面的模式来说明,即匹配一个包含奇数字符的顺口溜字符串(例如 &quot;a&quot;、&quot;aba&quot;、&quot;abcba&quot;、&quot;abcdcba&quot;)。</target>
        </trans-unit>
        <trans-unit id="49c36f3bbb51240a32d3b51ef263546135b56e0d" translate="yes" xml:space="preserve">
          <source>Redefined and undefined functions</source>
          <target state="translated">重新定义和未定义的职能</target>
        </trans-unit>
        <trans-unit id="9821e8e3eb5f0b3550eb425437d414bd5f509995" translate="yes" xml:space="preserve">
          <source>Redirect Agents</source>
          <target state="translated">重定向代理</target>
        </trans-unit>
        <trans-unit id="cb2b5a6cb4c9d318ad4e5065d9f3485f316f8814" translate="yes" xml:space="preserve">
          <source>Redirect Erlang input and output streams on Unix systems.</source>
          <target state="translated">重定向Unix系统上的Erlang输入和输出流。</target>
        </trans-unit>
        <trans-unit id="c502d3c9c5fc88582d123f9cda4001ffbea9a9f6" translate="yes" xml:space="preserve">
          <source>Redirect-Host AVP</source>
          <target state="translated">重定向-主机AVP</target>
        </trans-unit>
        <trans-unit id="1e581fb68f4db03f158c73399e1aef520dcfaf98" translate="yes" xml:space="preserve">
          <source>Redirect-Host-Usage AVP</source>
          <target state="translated">重定向-主机-使用AVP</target>
        </trans-unit>
        <trans-unit id="a1446afc50214ae3e357fb0a71f59e2404d18c81" translate="yes" xml:space="preserve">
          <source>Redirect-Host-Usage AVP Values</source>
          <target state="translated">重定向-主机-使用AVP值</target>
        </trans-unit>
        <trans-unit id="cd193b05a97a631073ccb483d47d26ea1dafe644" translate="yes" xml:space="preserve">
          <source>Redirect-Max-Cache-Time AVP</source>
          <target state="translated">重定向-最大缓存时间AVP</target>
        </trans-unit>
        <trans-unit id="7dc43d4ac811f4906c7b139115075f47a12d9c79" translate="yes" xml:space="preserve">
          <source>Redirecting Requests</source>
          <target state="translated">重定向请求</target>
        </trans-unit>
        <trans-unit id="98d90033419f07be437a04bf22d4b03540b1022d" translate="yes" xml:space="preserve">
          <source>Redirects all report output from the RB tool to the specified file, registered name, or &lt;code&gt;io_device&lt;/code&gt;.</source>
          <target state="translated">将所有从RB工具输出的报告重定向到指定的文件，注册名称或 &lt;code&gt;io_device&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d20e63f8c7e8894f58f191215bb077b8a93d30c2" translate="yes" xml:space="preserve">
          <source>Redraw line</source>
          <target state="translated">重新画线</target>
        </trans-unit>
        <trans-unit id="e6d86c37ebe8a894ce36d13e14a286c242f0c262" translate="yes" xml:space="preserve">
          <source>Redundant directory separators are removed.</source>
          <target state="translated">删除多余的目录分隔符。</target>
        </trans-unit>
        <trans-unit id="e227dfcf432b828dab887b3933a18c3b63d3ed41" translate="yes" xml:space="preserve">
          <source>Ref is the value that was returned from the call to &lt;code&gt;&lt;a href=&quot;diameter#add_transport-2&quot;&gt;diameter:add_transport/2&lt;/a&gt;&lt;/code&gt; that has lead to starting of a transport process.</source>
          <target state="translated">Ref是从调用 &lt;code&gt;&lt;a href=&quot;diameter#add_transport-2&quot;&gt;diameter:add_transport/2&lt;/a&gt;&lt;/code&gt; 返回的值，该值已导致传输过程开始。</target>
        </trans-unit>
        <trans-unit id="1c0d648927926fa5ea5d04766e8a678e8fc58490" translate="yes" xml:space="preserve">
          <source>Refc binaries consist of two parts:</source>
          <target state="translated">Refc二进制文件由两部分组成:</target>
        </trans-unit>
        <trans-unit id="d231e7267d9cb6cb23fcfa03c8ac87df69935c7e" translate="yes" xml:space="preserve">
          <source>Refer also to the chapter(s) &lt;code&gt;&lt;a href=&quot;snmp_agent_config_files&quot;&gt;Definition of Agent Configuration Files&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;snmp_manager_config_files&quot;&gt;Definition of Manager Configuration Files&lt;/a&gt;&lt;/code&gt; which contains more detailed information about the agent and manager configuration files.</source>
          <target state="translated">另请参阅 &lt;code&gt;&lt;a href=&quot;snmp_agent_config_files&quot;&gt;Definition of Agent Configuration Files&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;snmp_manager_config_files&quot;&gt;Definition of Manager Configuration Files&lt;/a&gt;&lt;/code&gt; &amp;rdquo;和&amp;ldquo;管理器配置文件定义&amp;rdquo;一章，其中包含有关代理和管理器配置文件的更多详细信息。</target>
        </trans-unit>
        <trans-unit id="2222f6b50ec8d89285956cc68d86c2224b726ef7" translate="yes" xml:space="preserve">
          <source>Refer to &lt;code&gt;rt_mask/2&lt;/code&gt; for a list of valid categories. All categories are enabled by default.</source>
          <target state="translated">有关有效类别的列表，请参考 &lt;code&gt;rt_mask/2&lt;/code&gt; 。默认情况下启用所有类别。</target>
        </trans-unit>
        <trans-unit id="6ffdd2bd542a285efd2de4779f5b373c9466faf0" translate="yes" xml:space="preserve">
          <source>Refer to the Mnesia User's Guide for information on how to declare a Mnesia table as an SNMP table.</source>
          <target state="translated">有关如何将Mnesia表声明为SNMP表的信息,请参考Mnesia用户指南。</target>
        </trans-unit>
        <trans-unit id="f0e653ef4f1da220b6cd05bc836f3690e633c668" translate="yes" xml:space="preserve">
          <source>Refer to the chapter &lt;code&gt;&lt;a href=&quot;snmp_advanced_agent&quot;&gt;Advanced Agent Topics&lt;/a&gt;&lt;/code&gt; in this User's Guide for more information about these topics.</source>
          <target state="translated">有关这些主题的更多信息，请参考本《用户指南》中的&amp;ldquo; &lt;code&gt;&lt;a href=&quot;snmp_advanced_agent&quot;&gt;Advanced Agent Topics&lt;/a&gt;&lt;/code&gt; &amp;rdquo;一章。</target>
        </trans-unit>
        <trans-unit id="0e379ff749b13f33a9df504f29d8f8b458d827d7" translate="yes" xml:space="preserve">
          <source>Refer to the following documentation for more information about &lt;code&gt;Event Tracer (ET)&lt;/code&gt; and about the Erlang/OTP development system:</source>
          <target state="translated">有关 &lt;code&gt;Event Tracer (ET)&lt;/code&gt; 和Erlang / OTP开发系统的更多信息，请参考以下文档：</target>
        </trans-unit>
        <trans-unit id="f539ecbb66f8ec24d2e6f1646377a431c040604d" translate="yes" xml:space="preserve">
          <source>Refer to the following documentation for more information about Megaco/H.248 and about the Erlang/OTP development system:</source>
          <target state="translated">关于Megaco/H.248和Erlang/OTP开发系统的更多信息,请参考以下文档。</target>
        </trans-unit>
        <trans-unit id="e44a86d89e003984ea5ef73cfad4e5d309a9ade7" translate="yes" xml:space="preserve">
          <source>Refer to the following documentation for more information about Reltool and about the Erlang/OTP development system:</source>
          <target state="translated">关于Reltool和Erlang/OTP开发系统的更多信息,请参考以下文档。</target>
        </trans-unit>
        <trans-unit id="5ebdb38c8d53695f9ea0d66e56f5fddcaa30ef1c" translate="yes" xml:space="preserve">
          <source>Refer to the following documentation for more information about SNMP and about the Erlang/OTP development system:</source>
          <target state="translated">关于SNMP和Erlang/OTP开发系统的更多信息,请参考以下文档。</target>
        </trans-unit>
        <trans-unit id="db1c784524e1b54011a95823026161f7c8517fe0" translate="yes" xml:space="preserve">
          <source>Reference</source>
          <target state="translated">Reference</target>
        </trans-unit>
        <trans-unit id="e0dc153ae2bdd0fe9582cae3b3c29c7ba9a0ae63" translate="yes" xml:space="preserve">
          <source>Reference IDs</source>
          <target state="translated">参考ID</target>
        </trans-unit>
        <trans-unit id="27c7472e340ed21263acad4148dc337d9d6c12a1" translate="yes" xml:space="preserve">
          <source>Reference Identifier</source>
          <target state="translated">参考标识符</target>
        </trans-unit>
        <trans-unit id="713c0142116eaba09081a317268f9ee98220982c" translate="yes" xml:space="preserve">
          <source>Reference returned by &lt;code&gt;&lt;a href=&quot;#add_transport-2&quot;&gt;add_transport/2&lt;/a&gt;&lt;/code&gt; that identifies the configuration.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#add_transport-2&quot;&gt;add_transport/2&lt;/a&gt;&lt;/code&gt; 返回的标识配置的引用。</target>
        </trans-unit>
        <trans-unit id="9c5d563f657af29bb1ef8ba94dfb428a73fff530" translate="yes" xml:space="preserve">
          <source>Reference to the &lt;code&gt;ssh&lt;/code&gt; connection as returned by &lt;code&gt;&lt;a href=&quot;ssh#connect-3&quot;&gt;ssh:connect/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">参考 &lt;code&gt;ssh&lt;/code&gt; 如通过返回的连接 &lt;code&gt;&lt;a href=&quot;ssh#connect-3&quot;&gt;ssh:connect/3&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="21c316b9ea2c08e8a30d1111d9a15dea4523351d" translate="yes" xml:space="preserve">
          <source>Referenced modules are now parsed when the compiler finds an entity that is imported. No code is generated for the referenced module. However, the compiled modules rely on that the referenced modules are also compiled.</source>
          <target state="translated">当编译器发现一个被导入的实体时,被引用的模块现在会被解析。不会为被引用的模块生成任何代码。然而,编译后的模块依赖于被引用的模块也被编译。</target>
        </trans-unit>
        <trans-unit id="5d20d0fee3b91643dd8d272ac33d01ca95179d82" translate="yes" xml:space="preserve">
          <source>References</source>
          <target state="translated">References</target>
        </trans-unit>
        <trans-unit id="5dfbb32d4eeb2b41a35cac6863870075ee04f983" translate="yes" xml:space="preserve">
          <source>References.</source>
          <target state="translated">References.</target>
        </trans-unit>
        <trans-unit id="9d1e4e7d27b519b1da3d7266c9c87d7861741080" translate="yes" xml:space="preserve">
          <source>References:</source>
          <target state="translated">References:</target>
        </trans-unit>
        <trans-unit id="7a7812481d7d8a559db48b96be55b5b061c0f69c" translate="yes" xml:space="preserve">
          <source>Refers to the atom with &lt;code&gt;AtomCacheReferenceIndex&lt;/code&gt; in the &lt;code&gt;&lt;a href=&quot;#distribution_header&quot;&gt;distribution header&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">是指具有原子 &lt;code&gt;AtomCacheReferenceIndex&lt;/code&gt; 在 &lt;code&gt;&lt;a href=&quot;#distribution_header&quot;&gt;distribution header&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="36717b8ae4c9e2f35cbb35a6b8557e62f3195790" translate="yes" xml:space="preserve">
          <source>Refreshes the top-level HTML index files.</source>
          <target state="translated">刷新顶层HTML索引文件。</target>
        </trans-unit>
        <trans-unit id="94ce43532e416f84ee6391e5a1ef349f36f00a42" translate="yes" xml:space="preserve">
          <source>RegArity ::= RegString | Number | &lt;code&gt;_&lt;/code&gt; | &lt;code&gt;-1&lt;/code&gt;</source>
          <target state="translated">RegArity :: = RegString | 编号 &lt;code&gt;_&lt;/code&gt; | &lt;code&gt;-1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3acf35ba403cbdbfa0631a0b0f04b366e0b454d8" translate="yes" xml:space="preserve">
          <source>RegAtom ::= RegString | Atom | &lt;code&gt;_&lt;/code&gt;</source>
          <target state="translated">RegAtom :: = RegString | 原子| &lt;code&gt;_&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="41639ede4e105dbe6f8a9955f29465cf6b7d6c32" translate="yes" xml:space="preserve">
          <source>RegExpr ::= RegString &lt;code&gt;:&lt;/code&gt; Type | RegFunc | RegFunc &lt;code&gt;:&lt;/code&gt; Type</source>
          <target state="translated">RegExpr :: = RegString &lt;code&gt;:&lt;/code&gt; 类型| RegFunc | RegFunc &lt;code&gt;:&lt;/code&gt; 类型</target>
        </trans-unit>
        <trans-unit id="930b67b59794ec947de2a9f2994493cadd99fca4" translate="yes" xml:space="preserve">
          <source>RegFunc ::= RegModule &lt;code&gt;:&lt;/code&gt; RegFunction &lt;code&gt;/&lt;/code&gt; RegArity</source>
          <target state="translated">RegFunc :: = RegModule &lt;code&gt;:&lt;/code&gt; RegFunction &lt;code&gt;/&lt;/code&gt; RegArity</target>
        </trans-unit>
        <trans-unit id="134c93f0cffad65e559068d0d1b231a309a6fdfe" translate="yes" xml:space="preserve">
          <source>RegFunction ::= RegAtom</source>
          <target state="translated">RegFunction ::=RegAtom</target>
        </trans-unit>
        <trans-unit id="7def8fd36ca99187f55e24c50241ef969bcc1d09" translate="yes" xml:space="preserve">
          <source>RegModule ::= RegAtom</source>
          <target state="translated">RegModule ::=RegAtom</target>
        </trans-unit>
        <trans-unit id="5ea313547c0f2b26b1f18ea46a73a7c74fcbe229" translate="yes" xml:space="preserve">
          <source>RegString ::= - a regular expression, as described in the &lt;code&gt;re&lt;/code&gt; module, enclosed in double quotes -</source>
          <target state="translated">RegString :: =-正则表达式，如 &lt;code&gt;re&lt;/code&gt; 模块中所述，用双引号引起来-</target>
        </trans-unit>
        <trans-unit id="0469fbf0d49c6eb360a825665c9fd2a213e391df" translate="yes" xml:space="preserve">
          <source>Regarding filename encoding, the Erlang VM can operate in two modes. The current mode can be queried using function &lt;code&gt;&lt;a href=&quot;#native_name_encoding-0&quot;&gt;native_name_encoding/0&lt;/a&gt;&lt;/code&gt;. It returns &lt;code&gt;latin1&lt;/code&gt; or &lt;code&gt;utf8&lt;/code&gt;.</source>
          <target state="translated">关于文件名编码，Erlang VM可以在两种模式下运行。可以使用 &lt;code&gt;&lt;a href=&quot;#native_name_encoding-0&quot;&gt;native_name_encoding/0&lt;/a&gt;&lt;/code&gt; 函数查询当前模式。它返回 &lt;code&gt;latin1&lt;/code&gt; 或 &lt;code&gt;utf8&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fa909bfc847f3f2dab8d9422d9641563e62929f7" translate="yes" xml:space="preserve">
          <source>Regardless of locking scheme used, calls to driver callbacks can be made from different threads.</source>
          <target state="translated">无论使用何种锁定方案,都可以从不同的线程调用驱动回调。</target>
        </trans-unit>
        <trans-unit id="4fda3f1d7a876f76d3fabdf3fae0856aadda52fb" translate="yes" xml:space="preserve">
          <source>Register an alternate input handler process for the distribution channel identified by &lt;code&gt;DHandle&lt;/code&gt;. Once this function has been called, &lt;code&gt;InputHandler&lt;/code&gt; is the only process allowed to call &lt;code&gt;&lt;a href=&quot;erlang#dist_ctrl_put_data-2&quot;&gt;erlang:dist_ctrl_put_data(DHandle, Data)&lt;/a&gt;&lt;/code&gt; with the &lt;code&gt;DHandle&lt;/code&gt; identifing this distribution channel.</source>
          <target state="translated">为 &lt;code&gt;DHandle&lt;/code&gt; 标识的分发通道注册备用输入处理程序进程。调用此函数后， &lt;code&gt;InputHandler&lt;/code&gt; 是唯一允许调用 &lt;code&gt;&lt;a href=&quot;erlang#dist_ctrl_put_data-2&quot;&gt;erlang:dist_ctrl_put_data(DHandle, Data)&lt;/a&gt;&lt;/code&gt; 的 &lt;code&gt;DHandle&lt;/code&gt; ，而DHandle会标识此分发通道。</target>
        </trans-unit>
        <trans-unit id="612e70bc80f39d67fe2e63fcdd740554f873caa3" translate="yes" xml:space="preserve">
          <source>Register the given node name with the registrar.</source>
          <target state="translated">在注册商处注册给定的节点名称。</target>
        </trans-unit>
        <trans-unit id="ccd3f2e94ffa6a327eccda4637f3834b6ee954d5" translate="yes" xml:space="preserve">
          <source>Register the manager entity (=user) responsible for specific agent(s).</source>
          <target state="translated">注册负责特定代理的管理实体(=用户)。</target>
        </trans-unit>
        <trans-unit id="6cc246aaee03583a1b67072b099abeb8fb79e782" translate="yes" xml:space="preserve">
          <source>Register the monitored manager entity (=user) responsible for specific agent(s).</source>
          <target state="translated">注册负责特定代理的被监控管理实体(=用户)。</target>
        </trans-unit>
        <trans-unit id="9061d41e371d4fedc0115d522b3c3789e7d55102" translate="yes" xml:space="preserve">
          <source>Register the subagent, process, handling part of the mib-tree.</source>
          <target state="translated">注册mib树的子代理、流程、处理部分。</target>
        </trans-unit>
        <trans-unit id="cfb9ebfdaecff168ceeaf8ecaef604259474208a" translate="yes" xml:space="preserve">
          <source>Register the user(s).</source>
          <target state="translated">注册用户。</target>
        </trans-unit>
        <trans-unit id="1845a68e796020a1048d95263bf795b90fc9c9e6" translate="yes" xml:space="preserve">
          <source>Registers a name in &lt;code&gt;global&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;global&lt;/code&gt; 中注册一个名称。</target>
        </trans-unit>
        <trans-unit id="34b7a3701f7f578b66d40dc493d201623ead9205" translate="yes" xml:space="preserve">
          <source>Registers a notification filter.</source>
          <target state="translated">注册一个通知过滤器。</target>
        </trans-unit>
        <trans-unit id="067b57c37c89870a838e4c3a029c8848eae5cb13" translate="yes" xml:space="preserve">
          <source>Registers a sub-agent under a sub-tree of another agent.</source>
          <target state="translated">在另一个代理的子树下注册一个子代理。</target>
        </trans-unit>
        <trans-unit id="2179f43e0837bc4378d035e264feccd782f007ff" translate="yes" xml:space="preserve">
          <source>Registers an unary fun that is called if &lt;code&gt;beam_lib&lt;/code&gt; must read an &lt;code&gt;debug_info&lt;/code&gt; chunk that has been encrypted. The fun is held in a process that is started by the function.</source>
          <target state="translated">如果注册的是被称为一元乐趣 &lt;code&gt;beam_lib&lt;/code&gt; 必须阅读的 &lt;code&gt;debug_info&lt;/code&gt; 已加密的块。乐趣被保存在由该功能启动的过程中。</target>
        </trans-unit>
        <trans-unit id="0dcd7f686b516b64b10f7fd221bfb77639b2541f" translate="yes" xml:space="preserve">
          <source>Registers the manager entity (=user) responsible for specific agent(s). Corresponds to making an entry in &lt;code&gt;users.conf&lt;/code&gt;.</source>
          <target state="translated">注册负责特定代理的管理者实体（=用户）。对应于在 &lt;code&gt;users.conf&lt;/code&gt; 中进行输入。</target>
        </trans-unit>
        <trans-unit id="282f350423b62ae0006f17688a3e8604714b46e5" translate="yes" xml:space="preserve">
          <source>Registers the node with &lt;code&gt;epmd&lt;/code&gt; and tells epmd what port will be used for the current node. It returns a creation number. This number is incremented on each register to help with identifying if a node is reconnecting to epmd.</source>
          <target state="translated">寄存器与节点 &lt;code&gt;epmd&lt;/code&gt; 并告诉EPMD哪个端口将用于当前节点。它返回一个创建编号。该数字在每个寄存器上递增，以帮助识别节点是否重新连接到epmd。</target>
        </trans-unit>
        <trans-unit id="74789ff4511238a502c97e8e4e6d4952c88a95ba" translate="yes" xml:space="preserve">
          <source>Registration of a callback module. When a file is to be transferred, its local filename is matched to the regular expressions of the registered callbacks. The first matching callback is used during the transfer. See &lt;code&gt;&lt;a href=&quot;#read_file-3&quot;&gt;read_file/3&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#write_file-3&quot;&gt;write_file/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">注册回调模块。当要传输文件时，其本地文件名与已注册的回调的正则表达式匹配。在传输过程中使用第一个匹配的回调。参见 &lt;code&gt;&lt;a href=&quot;#read_file-3&quot;&gt;read_file/3&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;#write_file-3&quot;&gt;write_file/3&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="731691a0705f5aaf0542053dc6a66d67a7a10393" translate="yes" xml:space="preserve">
          <source>Registration of global names</source>
          <target state="translated">全球名称的注册</target>
        </trans-unit>
        <trans-unit id="314870021208b673ff11034ad2c9468f72e2c31d" translate="yes" xml:space="preserve">
          <source>Regular expression matching all possible prompts for a specific target type. &lt;code&gt;regexp&lt;/code&gt; must not have any groups, that is, when matching, &lt;code&gt;re:run/3&lt;/code&gt; (in STDLIB) must return a list with one single element.</source>
          <target state="translated">正则表达式匹配特定目标类型的所有可能提示。 &lt;code&gt;regexp&lt;/code&gt; 不能有任何组，也就是说，匹配时， &lt;code&gt;re:run/3&lt;/code&gt; （在STDLIB中）必须返回一个包含单个元素的列表。</target>
        </trans-unit>
        <trans-unit id="47a56ab232ae123975ea9710e5fcf7b1f558f1c1" translate="yes" xml:space="preserve">
          <source>Regular expression matching functions for strings and binaries</source>
          <target state="translated">字符串和二进制的正则表达式匹配函数。</target>
        </trans-unit>
        <trans-unit id="203fb6152721f63268ed61bd1c4ea54b026fd773" translate="yes" xml:space="preserve">
          <source>Regular startup options are described in section &lt;code&gt;&lt;a href=&quot;#daemon_flags&quot;&gt;Regular Options&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">常规启动选项在&amp;ldquo; &lt;code&gt;&lt;a href=&quot;#daemon_flags&quot;&gt;Regular Options&lt;/a&gt;&lt;/code&gt; 部分中进行了描述。</target>
        </trans-unit>
        <trans-unit id="f62c81988a0243c7eee0e36486de9a38c2c37387" translate="yes" xml:space="preserve">
          <source>Regulates how many &lt;code&gt;disc_copies&lt;/code&gt; replicas that each fragment is to have. This property can explicitly be set at table creation. Default is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">调节每个片段要具有多少 &lt;code&gt;disc_copies&lt;/code&gt; 副本。可以在创建表时显式设置此属性。默认值为 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="30a8ba0420e7bdf4559176393019bd04c0fbe5e4" translate="yes" xml:space="preserve">
          <source>Regulates how many &lt;code&gt;disc_only_copies&lt;/code&gt; replicas that each fragment is to have. This property can explicitly be set at table creation. Defaults is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">调节每个片段要具有多少 &lt;code&gt;disc_only_copies&lt;/code&gt; 副本。可以在创建表时显式设置此属性。默认值为 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d5ace031434130fcf1ca2044f6c738d84c99c499" translate="yes" xml:space="preserve">
          <source>Regulates how many &lt;code&gt;ram_copies&lt;/code&gt; replicas that each fragment is to have. This property can explicitly be set at table creation. Defaults is &lt;code&gt;0&lt;/code&gt;, but if &lt;code&gt;n_disc_copies&lt;/code&gt; and &lt;code&gt;n_disc_only_copies&lt;/code&gt; also are &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;n_ram_copies&lt;/code&gt; defaults to &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">调节每个片段要具有多少个 &lt;code&gt;ram_copies&lt;/code&gt; 副本。可以在创建表时显式设置此属性。默认值为 &lt;code&gt;0&lt;/code&gt; ，但是如果 &lt;code&gt;n_disc_copies&lt;/code&gt; 和 &lt;code&gt;n_disc_only_copies&lt;/code&gt; 也为 &lt;code&gt;0&lt;/code&gt; ，则 &lt;code&gt;n_ram_copies&lt;/code&gt; 默认为 &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="13bed85e379f26741bf756020202c97a912d20f5" translate="yes" xml:space="preserve">
          <source>Rejang</source>
          <target state="translated">Rejang</target>
        </trans-unit>
        <trans-unit id="caa53feb7f3da187483d6f1241ee4328c1297f25" translate="yes" xml:space="preserve">
          <source>Related Documents</source>
          <target state="translated">相关文件</target>
        </trans-unit>
        <trans-unit id="a534f1b763c40f42ca56d5b3ac62f8426b11f10e" translate="yes" xml:space="preserve">
          <source>Relational operators: &amp;gt;, &amp;gt;=, &amp;lt;, =&amp;lt;, =:=, ==, =/=, /=</source>
          <target state="translated">关系运算符：&amp;gt;，&amp;gt; =，&amp;lt;，= &amp;lt;，=：=，==，= / =，/ =</target>
        </trans-unit>
        <trans-unit id="b4d1ac06f9ff5455701be2b5477a539436883381" translate="yes" xml:space="preserve">
          <source>Relations as defined above (as sets of ordered pairs) are from now on referred to as &lt;strong id=&quot;binary_relation&quot;&gt;binary relations&lt;/strong&gt;.</source>
          <target state="translated">上面定义的关系（作为有序对的集合）从现在开始被称为&lt;strong id=&quot;binary_relation&quot;&gt;二进制关系&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="84d2940af626b029fa2ef82659d4a2d4cd5ce382" translate="yes" xml:space="preserve">
          <source>Relative maximum cache bad fit (in percent). A segment in the memory segment cache is not reused if its size exceeds the requested size with more than relative maximum cache bad fit percent of the requested size. Defaults to &lt;code&gt;20&lt;/code&gt;.</source>
          <target state="translated">相对最大高速缓存不合适（百分比）。如果内存段缓存中的某个段的大小超过了请求的大小，并且超过了所请求大小的相对最大缓存不适合百分比，则不会重用该段。默认为 &lt;code&gt;20&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4c153cc101fda20f14f84dfde0781fcad6804b45" translate="yes" xml:space="preserve">
          <source>Relative multiblock carrier move threshold (in percent). When a block located in a multiblock carrier is shrunk, the block is moved if the ratio of the size of the returned memory compared to the previous size is more than this threshold, otherwise the block is shrunk at the current location.</source>
          <target state="translated">相对多块载体移动阈值(单位:%)。当位于多块载体中的块被缩小时,如果返回的内存大小与之前的大小之比大于此阈值,则该块被移动,否则该块在当前位置被缩小。</target>
        </trans-unit>
        <trans-unit id="79bd0bd84b449b2094f3b7b77828c840f0397c79" translate="yes" xml:space="preserve">
          <source>Relative singleblock carrier move threshold (in percent). When a block located in a singleblock carrier is shrunk to a size smaller than the value of parameter &lt;code&gt;&lt;a href=&quot;#M_sbct&quot;&gt;sbct&lt;/a&gt;&lt;/code&gt;, the block is left unchanged in the singleblock carrier if the ratio of unused memory is less than this threshold, otherwise it is moved into a multiblock carrier.</source>
          <target state="translated">相对单个块载波移动阈值（以百分比为单位）。当位于单块载体中的块缩小到小于参数 &lt;code&gt;&lt;a href=&quot;#M_sbct&quot;&gt;sbct&lt;/a&gt;&lt;/code&gt; 的值时，如果未使用内存的比率小于此阈值，则该块在单块载体中保持不变，否则将其移入多块载体。</target>
        </trans-unit>
        <trans-unit id="71e2887d05759469568d7ab87cf6c068541efe99" translate="yes" xml:space="preserve">
          <source>Relative singleblock carrier shrink threshold (in percent). When a block located in an &lt;code&gt;mseg_alloc&lt;/code&gt; singleblock carrier is shrunk, the carrier is left unchanged if the ratio of unused memory is less than this threshold, otherwise the carrier is shrunk. See also &lt;code&gt;&lt;a href=&quot;#M_asbcst&quot;&gt;asbcst&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">相对单个块载波收缩阈值（以百分比为单位）。当缩小 &lt;code&gt;mseg_alloc&lt;/code&gt; 单个块载体中的一个块时，如果未使用内存的比率小于此阈值，则该载体将保持不变，否则该载体将被缩小。另请参见 &lt;code&gt;&lt;a href=&quot;#M_asbcst&quot;&gt;asbcst&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b5a923017f941086cdc19675bb6e7e66bf98f618" translate="yes" xml:space="preserve">
          <source>Relaxed command checking can also be enabled by setting environment variable &lt;code&gt;ERL_EPMD_RELAXED_COMMAND_CHECK&lt;/code&gt; before starting &lt;code&gt;epmd&lt;/code&gt;.</source>
          <target state="translated">还可以通过在启动 &lt;code&gt;epmd&lt;/code&gt; 之前设置环境变量 &lt;code&gt;ERL_EPMD_RELAXED_COMMAND_CHECK&lt;/code&gt; 来启用宽松的命令检查。</target>
        </trans-unit>
        <trans-unit id="36f808de3af1211921e144126704f0ebe1a620f6" translate="yes" xml:space="preserve">
          <source>Relay Agents</source>
          <target state="translated">中继代理</target>
        </trans-unit>
        <trans-unit id="2434cb2c3792d5ccccc15c76f01d0a9de58fc0fe" translate="yes" xml:space="preserve">
          <source>Relaying and Proxying Answers</source>
          <target state="translated">中继和代理答案</target>
        </trans-unit>
        <trans-unit id="e4472f3c80aefb8e7db82dc13af52546d928899f" translate="yes" xml:space="preserve">
          <source>Relaying and Proxying Requests</source>
          <target state="translated">中继和代理请求</target>
        </trans-unit>
        <trans-unit id="b25d7bda466685a6a4e753a794a4ba838c55e906" translate="yes" xml:space="preserve">
          <source>Release ::= Atom</source>
          <target state="translated">发布 ::=Atom</target>
        </trans-unit>
        <trans-unit id="d7bf8b26bb971b25e39e96502911b730591e9714" translate="yes" xml:space="preserve">
          <source>Release Edges. All release calls.</source>
          <target state="translated">释放边缘。所有放行电话。</target>
        </trans-unit>
        <trans-unit id="12b5679ebc6469749dadfd2078344f69e5ead4b1" translate="yes" xml:space="preserve">
          <source>Release candidates have an &lt;code&gt;-rc&amp;lt;N&amp;gt;&lt;/code&gt; suffix. The suffix &lt;code&gt;-rc0&lt;/code&gt; is used during development up to the first release candidate.</source>
          <target state="translated">候选发行版的后缀为 &lt;code&gt;-rc&amp;lt;N&amp;gt;&lt;/code&gt; 。后缀 &lt;code&gt;-rc0&lt;/code&gt; 在开发过程中一直使用到第一个发行候选版本。</target>
        </trans-unit>
        <trans-unit id="d77b5c204252acaaec43d623048d2075abad904a" translate="yes" xml:space="preserve">
          <source>Release handling</source>
          <target state="translated">释放处理</target>
        </trans-unit>
        <trans-unit id="076bab209366a52c80009dd116377b92396f787e" translate="yes" xml:space="preserve">
          <source>Release handling relies on this assumption. When installing a new release version, the new &lt;code&gt;sys.config&lt;/code&gt; is read and used to update the application configurations.</source>
          <target state="translated">发布处理依赖于此假设。安装新发行版时，将读取新的 &lt;code&gt;sys.config&lt;/code&gt; 并将其用于更新应用程序配置。</target>
        </trans-unit>
        <trans-unit id="7949ab7905efd94b32946cabca1a8a77f563a091" translate="yes" xml:space="preserve">
          <source>Release name.</source>
          <target state="translated">发行名称:</target>
        </trans-unit>
        <trans-unit id="3ccc1e080be82cc836d31609c3948421780b08c1" translate="yes" xml:space="preserve">
          <source>Release resource file</source>
          <target state="translated">释放资源文件</target>
        </trans-unit>
        <trans-unit id="d34f3018803f4c680fc3638d635bd0def6f5ab72" translate="yes" xml:space="preserve">
          <source>Release specific configuration. Each release maps to a &lt;code&gt;rel&lt;/code&gt;, &lt;code&gt;script&lt;/code&gt; and &lt;code&gt;boot&lt;/code&gt; file. See the module &lt;code&gt;systools&lt;/code&gt; for more info about the details. Each release has a name, a version and a set of applications with a few release specific parameters such as type and included applications.</source>
          <target state="translated">发布特定的配置。每个发行版都映射到 &lt;code&gt;rel&lt;/code&gt; ， &lt;code&gt;script&lt;/code&gt; 和 &lt;code&gt;boot&lt;/code&gt; 文件。有关详细信息，请参见模块 &lt;code&gt;systools&lt;/code&gt; 。每个发行版都有一个名称，一个版本和一组应用程序，其中包含一些特定于发行版的参数，例如类型和所包含的应用程序。</target>
        </trans-unit>
        <trans-unit id="09c97862a62c2fa6a793cf11c297f8d6b788b549" translate="yes" xml:space="preserve">
          <source>Release upgrade file</source>
          <target state="translated">发布升级文件</target>
        </trans-unit>
        <trans-unit id="0fe65a88b4e14f014e0b3c78603bddcf72898de3" translate="yes" xml:space="preserve">
          <source>Release upgrade instructions are interpreted by the release handler when an upgrade or downgrade is made. For more information about release handling, see &lt;code&gt;OTP Design Principles&lt;/code&gt; in &lt;strong&gt;System Documentation&lt;/strong&gt;.</source>
          <target state="translated">进行升级或降级时，版本处理程序会解释版本升级说明。有关发布处理的更多信息，请参见 &lt;code&gt;OTP Design Principles&lt;/code&gt; &lt;strong&gt;系统文档&lt;/strong&gt;》中的&amp;ldquo; OTP设计原则&lt;strong&gt;&amp;rdquo;&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="369560c15d5e85e475c6b562995f9fcd49fd567b" translate="yes" xml:space="preserve">
          <source>Release version.</source>
          <target state="translated">发行版本:</target>
        </trans-unit>
        <trans-unit id="8fa41d59c259d95cfaded10953d5a2f8e0b38bb4" translate="yes" xml:space="preserve">
          <source>Releases</source>
          <target state="translated">Releases</target>
        </trans-unit>
        <trans-unit id="dfeb990703a2c588b44af2cd26546ad311c6ab1a" translate="yes" xml:space="preserve">
          <source>Releases a binary obtained from &lt;code&gt;&lt;a href=&quot;#enif_alloc_binary&quot;&gt;enif_alloc_binary&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">释放从 &lt;code&gt;&lt;a href=&quot;#enif_alloc_binary&quot;&gt;enif_alloc_binary&lt;/a&gt;&lt;/code&gt; 获得的二进制文件。</target>
        </trans-unit>
        <trans-unit id="4e281e0f826facd98ecceebe9523eb2ae766b4f8" translate="yes" xml:space="preserve">
          <source>Releases up to and including Erlang/OTP R10 did not check if the process was already registered. The global name table could therefore become inconsistent. The old (buggy) behavior can be chosen by giving the Kernel application variable &lt;code&gt;global_multi_name_action&lt;/code&gt; the value &lt;code&gt;allow&lt;/code&gt;.</source>
          <target state="translated">直到并包括Erlang / OTP R10的发行版都没有检查该进程是否已经注册。因此，全局名称表可能会变得不一致。可以通过将内核应用程序变量 &lt;code&gt;global_multi_name_action&lt;/code&gt; 的值设置为 &lt;code&gt;allow&lt;/code&gt; 来选择旧的（沼泽）行为。</target>
        </trans-unit>
        <trans-unit id="c581dab1907a3bfee043dac2fd31f1599d1e2e43" translate="yes" xml:space="preserve">
          <source>Releases.</source>
          <target state="translated">Releases.</target>
        </trans-unit>
        <trans-unit id="3e5adc00a3e13272f013a6c83b211713760aa4e1" translate="yes" xml:space="preserve">
          <source>Relevant manual pages are the following:</source>
          <target state="translated">相关手册页面如下:</target>
        </trans-unit>
        <trans-unit id="2df0b3f17846bac2fbdbfa13c6c4f8a9a09ca29d" translate="yes" xml:space="preserve">
          <source>Reload the configuration without restarting the server:</source>
          <target state="translated">在不重新启动服务器的情况下重新加载配置。</target>
        </trans-unit>
        <trans-unit id="892b893ae67558c733d183c0cf9bfa2f667f6b56" translate="yes" xml:space="preserve">
          <source>Reloads all currently loaded modules that have changed on disk (see &lt;code&gt;mm()&lt;/code&gt;). Returns the list of results from calling &lt;code&gt;l(M)&lt;/code&gt; for each such &lt;code&gt;M&lt;/code&gt;.</source>
          <target state="translated">重新加载磁盘上所有已更改的当前已加载模块（请参见 &lt;code&gt;mm()&lt;/code&gt; ）。返回针对每个这样的 &lt;code&gt;M&lt;/code&gt; 调用 &lt;code&gt;l(M)&lt;/code&gt; 的结果列表。</target>
        </trans-unit>
        <trans-unit id="a88146e081b7ea26a305d5560641eb3b9b496437" translate="yes" xml:space="preserve">
          <source>Reloads configuration file containing specified configuration key.</source>
          <target state="translated">重新加载包含指定配置键的配置文件。</target>
        </trans-unit>
        <trans-unit id="5d2d1ade4f750a24b8183ab33233fd81e8d4a1d7" translate="yes" xml:space="preserve">
          <source>Reloads the HTTP server configuration without restarting the server. Incoming requests are answered with a temporary down message during the reload time.</source>
          <target state="translated">重载HTTP服务器配置而不重新启动服务器。在重载期间,传入的请求会以一个临时的down消息回应。</target>
        </trans-unit>
        <trans-unit id="c84319814d8e6fe83a0c1b622bebb2f8ee15395e" translate="yes" xml:space="preserve">
          <source>Reloads the driver named &lt;code&gt;Name&lt;/code&gt; from a possibly different &lt;code&gt;Path&lt;/code&gt; than previously used. This function is used in the code change &lt;code&gt;&lt;a href=&quot;#scenarios&quot;&gt;scenario&lt;/a&gt;&lt;/code&gt; described in the introduction.</source>
          <target state="translated">从可能与以前使用的 &lt;code&gt;Path&lt;/code&gt; 不同的路径重新加载名为 &lt;code&gt;Name&lt;/code&gt; 的驱动程序。简介中介绍的代码更改 &lt;code&gt;&lt;a href=&quot;#scenarios&quot;&gt;scenario&lt;/a&gt;&lt;/code&gt; 中使用了此功能。</target>
        </trans-unit>
        <trans-unit id="784e31d4f3c0cba2e7db35d731e55aca1c1fad9d" translate="yes" xml:space="preserve">
          <source>Reltool is a release management tool. It analyses a given Erlang/OTP installation and determines various dependencies between applications. The &lt;code&gt;graphical&lt;/code&gt; frontend depicts the dependencies and enables interactive customization of a target system. The backend provides a &lt;code&gt;batch&lt;/code&gt; interface for generation of customized target systems.</source>
          <target state="translated">Reltool是一个发布管理工具。它分析给定的Erlang / OTP安装并确定应用程序之间的各种依赖关系。该 &lt;code&gt;graphical&lt;/code&gt; 前端描绘的依赖，使目标系统的交互定制。后端提供了用于生成定制目标系统的 &lt;code&gt;batch&lt;/code&gt; 接口。</target>
        </trans-unit>
        <trans-unit id="7f2e3fa39fb833cfad927a914aaf178d914c55ed" translate="yes" xml:space="preserve">
          <source>Remaining options are any accepted by &lt;code&gt;gen_sctp:open/1&lt;/code&gt;, with the exception of options &lt;code&gt;mode&lt;/code&gt;, &lt;code&gt;binary&lt;/code&gt;, &lt;code&gt;list&lt;/code&gt;, &lt;code&gt;active&lt;/code&gt; and &lt;code&gt;sctp_events&lt;/code&gt;. Note that options &lt;code&gt;ip&lt;/code&gt; and &lt;code&gt;port&lt;/code&gt; specify the local address and port respectively.</source>
          <target state="translated">其余选项是 &lt;code&gt;gen_sctp:open/1&lt;/code&gt; 可接受的任何选项，但选项 &lt;code&gt;mode&lt;/code&gt; ， &lt;code&gt;binary&lt;/code&gt; ， &lt;code&gt;list&lt;/code&gt; ， &lt;code&gt;active&lt;/code&gt; 和 &lt;code&gt;sctp_events&lt;/code&gt; 除外。请注意，选项 &lt;code&gt;ip&lt;/code&gt; 和 &lt;code&gt;port&lt;/code&gt; 分别指定本地地址和端口。</target>
        </trans-unit>
        <trans-unit id="815293be363db289b37d927caa1f5d8eea88f49b" translate="yes" xml:space="preserve">
          <source>Remaining options are any accepted by &lt;code&gt;ssl:connect/3&lt;/code&gt; or &lt;code&gt;gen_tcp:connect/3&lt;/code&gt; for a connecting transport, or &lt;code&gt;ssl:listen/2&lt;/code&gt; or &lt;code&gt;gen_tcp:listen/2&lt;/code&gt; for a listening transport, depending on whether or not &lt;code&gt;{ssl_options, true}&lt;/code&gt; has been specified. Options &lt;code&gt;binary&lt;/code&gt;, &lt;code&gt;packet&lt;/code&gt; and &lt;code&gt;active&lt;/code&gt; cannot be specified. Also, option &lt;code&gt;port&lt;/code&gt; can be specified for a listening transport to specify the local listening port, the default being the standardized 3868. Note that the option &lt;code&gt;ip&lt;/code&gt; specifies the local address.</source>
          <target state="translated">剩余选项是 &lt;code&gt;ssl:connect/3&lt;/code&gt; 或 &lt;code&gt;gen_tcp:connect/3&lt;/code&gt; 接受连接传输的任何选项，或 &lt;code&gt;ssl:listen/2&lt;/code&gt; 或 &lt;code&gt;gen_tcp:listen/2&lt;/code&gt; 接受侦听的传输的选项，具体取决于 &lt;code&gt;{ssl_options, true}&lt;/code&gt; 是否具有被指定。不能指定 &lt;code&gt;binary&lt;/code&gt; ， &lt;code&gt;packet&lt;/code&gt; 和 &lt;code&gt;active&lt;/code&gt; 选项。此外，可以为侦听传输指定选项 &lt;code&gt;port&lt;/code&gt; 以指定本地侦听端口，默认端口是标准化的3868。请注意，选项 &lt;code&gt;ip&lt;/code&gt; 指定了本地地址。</target>
        </trans-unit>
        <trans-unit id="66cf83c455fd1bd0a82aed4f3cb5675602a3ab47" translate="yes" xml:space="preserve">
          <source>Remember that file trace ports buffer the data by default. If the node crashes, trace messages are not flushed to the binary log. If the risk of failure is high, it can be a good idea to flush the buffers every now and then automatically. Passing &lt;code&gt;{flush, MSec}&lt;/code&gt; as an option of &lt;code&gt;ttb:tracer/2&lt;/code&gt; flushes all buffers every &lt;code&gt;MSec&lt;/code&gt; millisecond.</source>
          <target state="translated">请记住，文件跟踪端口默认情况下会缓冲数据。如果该节点崩溃，则跟踪消息不会刷新到二进制日志中。如果失败的风险很高，那么最好不时自动刷新缓冲区。通过将 &lt;code&gt;{flush, MSec}&lt;/code&gt; 作为 &lt;code&gt;ttb:tracer/2&lt;/code&gt; 的选项来传递，每毫秒 &lt;code&gt;MSec&lt;/code&gt; 会刷新所有缓冲区。</target>
        </trans-unit>
        <trans-unit id="26dfb878780f2523c83b1d853967893e8ff04168" translate="yes" xml:space="preserve">
          <source>Remember that the | operator can be used to get the head of a list:</source>
          <target state="translated">请记住,|操作符可以用来获取一个列表的头部。</target>
        </trans-unit>
        <trans-unit id="389b0b7962fe40649a28790b524a030d6d8fe385" translate="yes" xml:space="preserve">
          <source>Remember that:</source>
          <target state="translated">记住这一点。</target>
        </trans-unit>
        <trans-unit id="78a5feb713d2557dfe3eacd16a70807ff5ae0bd3" translate="yes" xml:space="preserve">
          <source>Remember to free &lt;code&gt;pid&lt;/code&gt; later with &lt;code&gt;&lt;a href=&quot;erl_malloc#erl_free_term&quot;&gt;erl_malloc:erl_free_term&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">请记住，稍后使用 &lt;code&gt;&lt;a href=&quot;erl_malloc#erl_free_term&quot;&gt;erl_malloc:erl_free_term&lt;/a&gt;&lt;/code&gt; 释放 &lt;code&gt;pid&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eca0d691ee9c6774e0eb8b51cbe73481e15cdf17" translate="yes" xml:space="preserve">
          <source>Remote Procedure Call services.</source>
          <target state="translated">远程程序调用服务。</target>
        </trans-unit>
        <trans-unit id="98ef7c5ca9880fe05d2a7209c1987cab4b52873f" translate="yes" xml:space="preserve">
          <source>Remote hostname.</source>
          <target state="translated">远程主机名:</target>
        </trans-unit>
        <trans-unit id="bcfceb272c786094ee4dfb353770550b1fbd9c5f" translate="yes" xml:space="preserve">
          <source>Remote procedure calls</source>
          <target state="translated">远程程序调用</target>
        </trans-unit>
        <trans-unit id="6c62ad2fef650defef629666029a983bdea55bce" translate="yes" xml:space="preserve">
          <source>Remote type, that is, type defined in, and exported by, other modules; more about this soon.</source>
          <target state="translated">远程类型,即在其他模块中定义并由其他模块导出的类型;关于这一点,很快会有更多的介绍。</target>
        </trans-unit>
        <trans-unit id="f3d2fdb2a1bafef3bfef448975f7ee50436cc38f" translate="yes" xml:space="preserve">
          <source>Remote.</source>
          <target state="translated">Remote.</target>
        </trans-unit>
        <trans-unit id="3a07d5691e90ca1626bc3af406339c26bbc92230" translate="yes" xml:space="preserve">
          <source>Remove (rm) one or more algorithms from &lt;code&gt;A&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;A&lt;/code&gt; 删除（rm）一种或多种算法。</target>
        </trans-unit>
        <trans-unit id="a1b19b04489ffa84280a335fd561b33e3df1e32b" translate="yes" xml:space="preserve">
          <source>Remove all edges of &lt;code&gt;G&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#emanate&quot;&gt;emanating&lt;/a&gt;&lt;/code&gt; from v[i] and &lt;code&gt;&lt;a href=&quot;#incident&quot;&gt;incident&lt;/a&gt;&lt;/code&gt; to v[i+1] for 1 &amp;lt;= i &amp;lt; k (including multiple edges).</source>
          <target state="translated">移除从v [i] &lt;code&gt;&lt;a href=&quot;#emanate&quot;&gt;emanating&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#incident&quot;&gt;incident&lt;/a&gt;&lt;/code&gt; v [i + 1]且1 &amp;lt;= i &amp;lt;k 的 &lt;code&gt;G&lt;/code&gt; 的所有边（包括多个边）。</target>
        </trans-unit>
        <trans-unit id="aa1bc0e635cc0c09da1d0e321cb9f66931a8a682" translate="yes" xml:space="preserve">
          <source>Remove call count breakpoints from the matching functions that has call count breakpoints.</source>
          <target state="translated">从有调用计数断点的匹配函数中删除调用计数断点。</target>
        </trans-unit>
        <trans-unit id="1c94e4f466ef58b151007050c8d81df3b4baf221" translate="yes" xml:space="preserve">
          <source>Remove module specific log settings. After this, the primary log level is used for all modules.</source>
          <target state="translated">删除模块特定的日志设置。此后,所有模块都使用主日志级别。</target>
        </trans-unit>
        <trans-unit id="1752d32ef2409c2c524b1db337059b374545e2f1" translate="yes" xml:space="preserve">
          <source>Remove module specific log settings. After this, the primary log level is used for the specified modules.</source>
          <target state="translated">删除模块特定的日志设置。此后,主日志级别将用于指定模块。</target>
        </trans-unit>
        <trans-unit id="2de54fa41d973e8645ea65252a458390fa9b8e13" translate="yes" xml:space="preserve">
          <source>Remove previously added transports.</source>
          <target state="translated">删除之前添加的运输工具。</target>
        </trans-unit>
        <trans-unit id="de2212deaf408786494f5a6437f6c7dfb1de7a09" translate="yes" xml:space="preserve">
          <source>Remove the &lt;code&gt;'silent'&lt;/code&gt; trace flag when the first argument is &lt;code&gt;'verbose'&lt;/code&gt;, and add it when it is &lt;code&gt;'silent':&lt;/code&gt;</source>
          <target state="translated">当第一个参数为 &lt;code&gt;'verbose'&lt;/code&gt; 时删除 &lt;code&gt;'silent'&lt;/code&gt; 跟踪标志，并在其为 &lt;code&gt;'silent':&lt;/code&gt; 时添加它：</target>
        </trans-unit>
        <trans-unit id="8c1a0c637d49a4d7569668331ee1b3088eb73750" translate="yes" xml:space="preserve">
          <source>Remove the filter identified by &lt;code&gt;FilterId&lt;/code&gt; from the handler identified by &lt;code&gt;HandlerId&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;HandlerId&lt;/code&gt; 标识的处理程序中删除由 &lt;code&gt;FilterId&lt;/code&gt; 标识的过滤器。</target>
        </trans-unit>
        <trans-unit id="1e2a9bd7f431a82ca58a25b840ca86d577fc69f6" translate="yes" xml:space="preserve">
          <source>Remove the handler identified by &lt;code&gt;HandlerId&lt;/code&gt;.</source>
          <target state="translated">删除由 &lt;code&gt;HandlerId&lt;/code&gt; 标识的处理程序。</target>
        </trans-unit>
        <trans-unit id="270d63a2d4e284cb38a67b35a61f4d1b10185100" translate="yes" xml:space="preserve">
          <source>Remove the old version.</source>
          <target state="translated">删除旧版本。</target>
        </trans-unit>
        <trans-unit id="a1bc432335254977c2eff9f225b9bfe4b9346eb9" translate="yes" xml:space="preserve">
          <source>Remove the primary filter identified by &lt;code&gt;FilterId&lt;/code&gt; from Logger.</source>
          <target state="translated">从Logger中删除由 &lt;code&gt;FilterId&lt;/code&gt; 标识的主过滤器。</target>
        </trans-unit>
        <trans-unit id="9ab44531e296112b4f85de0885693c0cd1e921a5" translate="yes" xml:space="preserve">
          <source>Removes (one) &lt;code&gt;{_, MonitorRef, _, _, _}&lt;/code&gt; message, if there is one, from the caller message queue after monitoring has been stopped.</source>
          <target state="translated">停止监视后，从呼叫者消息队列中删除（一个） &lt;code&gt;{_, MonitorRef, _, _, _}&lt;/code&gt; 消息（如果有）。</target>
        </trans-unit>
        <trans-unit id="2af136900a1f59bad5aae8293e0b480336d75d7b" translate="yes" xml:space="preserve">
          <source>Removes &lt;code&gt;&lt;a href=&quot;#analyzed_module&quot;&gt;analyzed modules&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#module_data&quot;&gt;module data&lt;/a&gt;&lt;/code&gt; from an &lt;code&gt;&lt;a href=&quot;#xref_server&quot;&gt;Xref server&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">从外部 &lt;code&gt;&lt;a href=&quot;#xref_server&quot;&gt;Xref server&lt;/a&gt;&lt;/code&gt; 删除 &lt;code&gt;&lt;a href=&quot;#analyzed_module&quot;&gt;analyzed modules&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;#module_data&quot;&gt;module data&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6c9c0f67a25257aba96321b301fce1c1d0e01aea" translate="yes" xml:space="preserve">
          <source>Removes a driver entry &lt;code&gt;de&lt;/code&gt; previously added with &lt;code&gt;&lt;a href=&quot;#add_driver_entry&quot;&gt;add_driver_entry&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">删除一个驱动程序的入口 &lt;code&gt;de&lt;/code&gt; 前面加 &lt;code&gt;&lt;a href=&quot;#add_driver_entry&quot;&gt;add_driver_entry&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ef910fd5c7a07e6df5e2bcac95688a112adbf8b2" translate="yes" xml:space="preserve">
          <source>Removes a driver monitor in much the same way as &lt;code&gt;erlang:demonitor/1&lt;/code&gt; in ERTS does with process monitors. For details about how to create driver monitors, see &lt;code&gt;&lt;a href=&quot;#monitor-2&quot;&gt;monitor/2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#try_load-3&quot;&gt;try_load/3&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;#try_unload-2&quot;&gt;try_unload/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">删除驱动程序监视器的方式与ERTS中的 &lt;code&gt;erlang:demonitor/1&lt;/code&gt; 的过程监视器相同。有关如何创建驱动程序监视器的详细信息，请参见 &lt;code&gt;&lt;a href=&quot;#monitor-2&quot;&gt;monitor/2&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;#try_load-3&quot;&gt;try_load/3&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;#try_unload-2&quot;&gt;try_unload/2&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="469ccfe46e68680d711e0478f9486ba9db3e26c4" translate="yes" xml:space="preserve">
          <source>Removes a filename extension. &lt;code&gt;rootname/2&lt;/code&gt; works as &lt;code&gt;rootname/1&lt;/code&gt;, except that the extension is removed only if it is &lt;code&gt;Ext&lt;/code&gt;.</source>
          <target state="translated">删除文件扩展名。 &lt;code&gt;rootname/2&lt;/code&gt; 用作 &lt;code&gt;rootname/1&lt;/code&gt; ，除了扩展名只有 &lt;code&gt;Ext&lt;/code&gt; 才被删除。</target>
        </trans-unit>
        <trans-unit id="cfdbbaeba26ada922495e3b365aa4160395c9fe4" translate="yes" xml:space="preserve">
          <source>Removes a reference to resource object &lt;code&gt;obj&lt;/code&gt; obtained from &lt;code&gt;&lt;a href=&quot;#enif_alloc_resource&quot;&gt;enif_alloc_resource&lt;/a&gt;&lt;/code&gt;. The resource object is destructed when the last reference is removed. Each call to &lt;code&gt;enif_release_resource&lt;/code&gt; must correspond to a previous call to &lt;code&gt;enif_alloc_resource&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#enif_keep_resource&quot;&gt;enif_keep_resource&lt;/a&gt;&lt;/code&gt;. References made by &lt;code&gt;&lt;a href=&quot;#enif_make_resource&quot;&gt;enif_make_resource&lt;/a&gt;&lt;/code&gt; can only be removed by the garbage collector.</source>
          <target state="translated">删除对从 &lt;code&gt;&lt;a href=&quot;#enif_alloc_resource&quot;&gt;enif_alloc_resource&lt;/a&gt;&lt;/code&gt; 获得的资源对象 &lt;code&gt;obj&lt;/code&gt; 的引用。删除最后一个引用后，资源对象将被破坏。每个对 &lt;code&gt;enif_release_resource&lt;/code&gt; 的调用必须对应于先前对 &lt;code&gt;enif_alloc_resource&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;#enif_keep_resource&quot;&gt;enif_keep_resource&lt;/a&gt;&lt;/code&gt; 的调用。 &lt;code&gt;&lt;a href=&quot;#enif_make_resource&quot;&gt;enif_make_resource&lt;/a&gt;&lt;/code&gt; 所做的引用只能由垃圾收集器删除。</target>
        </trans-unit>
        <trans-unit id="f93eec43121b96bc7a270f3d88692f108331e875" translate="yes" xml:space="preserve">
          <source>Removes a release and its files from the system. The release must not be the permanent release. Removes only the files and directories not in use by another release.</source>
          <target state="translated">从系统中删除一个版本及其文件。该版本必须不是永久版本。只删除另一个版本不使用的文件和目录。</target>
        </trans-unit>
        <trans-unit id="69722c4296c8491884f2e4d612c28fd292392777" translate="yes" xml:space="preserve">
          <source>Removes all breakpoints.</source>
          <target state="translated">删除所有断点。</target>
        </trans-unit>
        <trans-unit id="ebf28b81a76f27b32b9e5da02e466fe49e99b342" translate="yes" xml:space="preserve">
          <source>Removes all chunks except those needed by the loader from BEAM files. In particular, the debug information (chunk &lt;code&gt;debug_info&lt;/code&gt; and &lt;code&gt;abstract_code&lt;/code&gt;) is removed. The returned list contains one element for each specified filename, in the same order as in &lt;code&gt;Files&lt;/code&gt;.</source>
          <target state="translated">从BEAM文件中删除除加载程序所需的块以外的所有块。特别是，将删除调试信息（块 &lt;code&gt;debug_info&lt;/code&gt; 和 &lt;code&gt;abstract_code&lt;/code&gt; ）。对于每个指定的文件名，返回的列表包含一个元素，其顺序与 &lt;code&gt;Files&lt;/code&gt; 中的顺序相同。</target>
        </trans-unit>
        <trans-unit id="69c09d3f76b01192e3e0cb5339b531159c96fb89" translate="yes" xml:space="preserve">
          <source>Removes all chunks except those needed by the loader from the BEAM files of a release. &lt;code&gt;Dir&lt;/code&gt; is to be the installation root directory. For example, the current OTP release can be stripped with the call &lt;code&gt;beam_lib:strip_release(code:root_dir())&lt;/code&gt;.</source>
          <target state="translated">从发行版的BEAM文件中除去加载程序所需的所有块。 &lt;code&gt;Dir&lt;/code&gt; 将是安装根目录。例如，可以通过调用 &lt;code&gt;beam_lib:strip_release(code:root_dir())&lt;/code&gt; 剥离当前的OTP版本。</target>
        </trans-unit>
        <trans-unit id="b653de0025fa2e1c9e18ccdf6499bb91a5318e88" translate="yes" xml:space="preserve">
          <source>Removes all chunks from a BEAM file except those needed by the loader. In particular, the debug information (chunk &lt;code&gt;debug_info&lt;/code&gt; and &lt;code&gt;abstract_code&lt;/code&gt;) is removed.</source>
          <target state="translated">从BEAM文件中删除除装载程序所需的所有块以外的所有块。特别是，将删除调试信息（块 &lt;code&gt;debug_info&lt;/code&gt; 和 &lt;code&gt;abstract_code&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="8e06a52291161535a71ec3cf6b4b53521525128d" translate="yes" xml:space="preserve">
          <source>Removes all comments from all nodes of a syntax tree. All other attributes (such as position information) remain unchanged. Standalone comments in form lists are removed; any other standalone comments are changed into null-comments (no text, no indentation).</source>
          <target state="translated">删除语法树所有节点的所有注释。所有其他属性(如位置信息)保持不变。删除表格列表中的独立注释;任何其他独立注释都将变为空注释(无文本,无缩进)。</target>
        </trans-unit>
        <trans-unit id="2ba013b61f6c343926311bc6cb40098be1f76e8e" translate="yes" xml:space="preserve">
          <source>Removes all empty parts of the result.</source>
          <target state="translated">删除结果中所有的空部分。</target>
        </trans-unit>
        <trans-unit id="423a342bd4a5da772f2ac8a4ddc5c196849871b4" translate="yes" xml:space="preserve">
          <source>Removes all items from a disk log. If argument &lt;code&gt;Head&lt;/code&gt; or &lt;code&gt;BHead&lt;/code&gt; is specified, this item is written first in the newly truncated log, otherwise the header given to &lt;code&gt;open/1&lt;/code&gt; is used. The header argument is used only once. Next time a wrap log file is opened, the header given to &lt;code&gt;open/1&lt;/code&gt; is used.</source>
          <target state="translated">从磁盘日志中删除所有项目。如果指定了参数 &lt;code&gt;Head&lt;/code&gt; 或 &lt;code&gt;BHead&lt;/code&gt; ，则此项目将首先写入新截断的日志中，否则将使用给 &lt;code&gt;open/1&lt;/code&gt; 的标头。标头参数仅使用一次。下次打开包装日志文件时，将使用指定给 &lt;code&gt;open/1&lt;/code&gt; 的标头。</target>
        </trans-unit>
        <trans-unit id="9124834eeba59cb5d4394905a7f8431b79dc8304" translate="yes" xml:space="preserve">
          <source>Removes all objects marked for deletion. When objects are deleted with &lt;code&gt;ei_reg_delete()&lt;/code&gt; they are not removed from the registry, only marked for later removal. On a later backup to &lt;code&gt;Mnesia&lt;/code&gt;, the objects can also be removed from the &lt;code&gt;Mnesia&lt;/code&gt; table. If you are not backing up to &lt;code&gt;Mnesia&lt;/code&gt;, you may wish to remove the objects manually with this function.</source>
          <target state="translated">删除所有标记为删除的对象。使用 &lt;code&gt;ei_reg_delete()&lt;/code&gt; 删除对象时，不会将它们从注册表中删除，而仅标记为以后删除。在以后备份到 &lt;code&gt;Mnesia&lt;/code&gt; 时，也可以从 &lt;code&gt;Mnesia&lt;/code&gt; 表中删除对象。如果您不备份到 &lt;code&gt;Mnesia&lt;/code&gt; ，则可能希望使用此功能手动删除对象。</target>
        </trans-unit>
        <trans-unit id="006c0542f30160a6d1b184407353efd9e067c6df" translate="yes" xml:space="preserve">
          <source>Removes all record definitions, then reads record definitions from the modules &lt;code&gt;shell_default&lt;/code&gt; and &lt;code&gt;user_default&lt;/code&gt; (if loaded). Returns the names of the records defined.</source>
          <target state="translated">删除所有记录定义，然后从 &lt;code&gt;shell_default&lt;/code&gt; 和 &lt;code&gt;user_default&lt;/code&gt; 模块（如果已加载）中读取记录定义。返回定义的记录的名称。</target>
        </trans-unit>
        <trans-unit id="5c21f9615f09252f2d8d49897680a589dc928737" translate="yes" xml:space="preserve">
          <source>Removes all variable bindings.</source>
          <target state="translated">移除所有变量绑定。</target>
        </trans-unit>
        <trans-unit id="0a4c4b594d16c7a2ef5704cbf29a757883867569" translate="yes" xml:space="preserve">
          <source>Removes an installed debug function from the process. &lt;code&gt;Func&lt;/code&gt; or &lt;code&gt;FuncId&lt;/code&gt; must be the same as previously installed.</source>
          <target state="translated">从进程中删除已安装的调试功能。 &lt;code&gt;Func&lt;/code&gt; 或 &lt;code&gt;FuncId&lt;/code&gt; 必须与以前安装的相同。</target>
        </trans-unit>
        <trans-unit id="2df2ad072e68f52d7ebb2bd3a6411521ff839dae" translate="yes" xml:space="preserve">
          <source>Removes anything before &lt;code&gt;SearchPattern&lt;/code&gt; in &lt;code&gt;String&lt;/code&gt; and returns the remainder of the string or &lt;code&gt;nomatch&lt;/code&gt; if &lt;code&gt;SearchPattern&lt;/code&gt; is not found. &lt;code&gt;Dir&lt;/code&gt;, which can be &lt;code&gt;leading&lt;/code&gt; or &lt;code&gt;trailing&lt;/code&gt;, indicates from which direction characters are to be searched.</source>
          <target state="translated">删除之前任何 &lt;code&gt;SearchPattern&lt;/code&gt; 的 &lt;code&gt;String&lt;/code&gt; ，返回的字符串或剩余 &lt;code&gt;nomatch&lt;/code&gt; 如果 &lt;code&gt;SearchPattern&lt;/code&gt; 没有找到。 &lt;code&gt;Dir&lt;/code&gt; 可以是 &lt;code&gt;leading&lt;/code&gt; 或 &lt;code&gt;trailing&lt;/code&gt; ，指示要从哪个方向搜索字符。</target>
        </trans-unit>
        <trans-unit id="c0c5aecc0b610cae928d0362a36410e9e33385d9" translate="yes" xml:space="preserve">
          <source>Removes applications and their modules and &lt;code&gt;&lt;a href=&quot;#module_data&quot;&gt;module data&lt;/a&gt;&lt;/code&gt; from an &lt;code&gt;&lt;a href=&quot;#xref_server&quot;&gt;Xref server&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">从外部 &lt;code&gt;&lt;a href=&quot;#xref_server&quot;&gt;Xref server&lt;/a&gt;&lt;/code&gt; 删除应用程序及其模块和 &lt;code&gt;&lt;a href=&quot;#module_data&quot;&gt;module data&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d58329662a1a0da29049c8ec4fb23031b2a385a8" translate="yes" xml:space="preserve">
          <source>Removes cipher suites if any of the filter functions returns false for any part of the cipher suite. This function also calls default filter functions to make sure the cipher suites are supported by crypto. If no filter function is supplied for some part the default behaviour is fun(Algorithm) -&amp;gt; true.</source>
          <target state="translated">如果任何过滤器函数对密码套件的任何部分返回false，则删除密码套件。此函数还调用默认过滤器函数，以确保密码套件支持密码套件。如果某些部分未提供过滤器功能，则默认行为为fun（Algorithm）-&amp;gt; true。</target>
        </trans-unit>
        <trans-unit id="6e0849ded45459bb75fc962a53bf83df2a5b5ba0" translate="yes" xml:space="preserve">
          <source>Removes configuration variables (together wih their aliases) that were loaded with specified callback module and configuration string.</source>
          <target state="translated">删除用指定的回调模块和配置字符串加载的配置变量(以及它们的别名)。</target>
        </trans-unit>
        <trans-unit id="19a1a1f167a8dd46ef5ea9470ec88dd1d515a514" translate="yes" xml:space="preserve">
          <source>Removes directory &lt;code&gt;Dir&lt;/code&gt; at the remote server.</source>
          <target state="translated">删除远程服务器上的目录 &lt;code&gt;Dir&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="02924e99f1092efed94b21cddc4567c00ed0797b" translate="yes" xml:space="preserve">
          <source>Removes nodes from the current cover test.</source>
          <target state="translated">从当前覆盖测试中删除节点。</target>
        </trans-unit>
        <trans-unit id="cf8e7542d98d969ab5b6a2bc0c3d6d5e50905b7d" translate="yes" xml:space="preserve">
          <source>Removes old code for &lt;code&gt;Module&lt;/code&gt;. Before this BIF is used, &lt;code&gt;&lt;a href=&quot;#check_process_code-2&quot;&gt;check_process_code/2&lt;/a&gt;&lt;/code&gt;is to be called to check that no processes execute old code in the module.</source>
          <target state="translated">删除 &lt;code&gt;Module&lt;/code&gt; 的旧代码。在使用此BIF之前，将调用 &lt;code&gt;&lt;a href=&quot;#check_process_code-2&quot;&gt;check_process_code/2&lt;/a&gt;&lt;/code&gt; 以检查是否没有进程执行模块中的旧代码。</target>
        </trans-unit>
        <trans-unit id="281c5754c557f40c25fc049eb32abf747c439426" translate="yes" xml:space="preserve">
          <source>Removes releases and their applications, modules and &lt;code&gt;&lt;a href=&quot;#module_data&quot;&gt;module data&lt;/a&gt;&lt;/code&gt; from an &lt;code&gt;&lt;a href=&quot;#xref_server&quot;&gt;Xref server&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">从外部 &lt;code&gt;&lt;a href=&quot;#xref_server&quot;&gt;Xref server&lt;/a&gt;&lt;/code&gt; 删除发行版及其应用程序，模块和 &lt;code&gt;&lt;a href=&quot;#module_data&quot;&gt;module data&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1494c23d99ae7a074da0f5767968b97ada72e430" translate="yes" xml:space="preserve">
          <source>Removes selected record definitions. &lt;code&gt;RecordNames&lt;/code&gt; is a record name or a list of record names. To remove all record definitions, use &lt;code&gt;'_'&lt;/code&gt;.</source>
          <target state="translated">删除选定的记录定义。 &lt;code&gt;RecordNames&lt;/code&gt; 是记录名称或记录名称列表。要删除所有记录定义，请使用 &lt;code&gt;'_'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="08aa69eb4dff9986ba433e51ea964d15b903f2db" translate="yes" xml:space="preserve">
          <source>Removes the &lt;code&gt;Key&lt;/code&gt;, if it exists, and its associated value from &lt;code&gt;Map1&lt;/code&gt; and returns a new map &lt;code&gt;Map2&lt;/code&gt; without key &lt;code&gt;Key&lt;/code&gt;.</source>
          <target state="translated">删除 &lt;code&gt;Key&lt;/code&gt; ，如果它存在，并从其关联的值 &lt;code&gt;Map1&lt;/code&gt; ，并返回一个新的地图 &lt;code&gt;Map2&lt;/code&gt; 无钥匙 &lt;code&gt;Key&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="93557a3a60b8e22b6a793259a6b192bb29de371b" translate="yes" xml:space="preserve">
          <source>Removes the binding of &lt;code&gt;Name&lt;/code&gt; in &lt;code&gt;BindingStruct&lt;/code&gt;. Returns an updated binding structure.</source>
          <target state="translated">在 &lt;code&gt;BindingStruct&lt;/code&gt; 中删除 &lt;code&gt;Name&lt;/code&gt; 的绑定。返回更新的绑定结构。</target>
        </trans-unit>
        <trans-unit id="537e2f9fa77de9edf6444f921d6e10ab6626425c" translate="yes" xml:space="preserve">
          <source>Removes the binding of variable &lt;code&gt;X&lt;/code&gt;.</source>
          <target state="translated">删除变量 &lt;code&gt;X&lt;/code&gt; 的绑定。</target>
        </trans-unit>
        <trans-unit id="2a70e4c1ab0cf5300dd607b66a1471f48013af8c" translate="yes" xml:space="preserve">
          <source>Removes the configuration parameter &lt;code&gt;Par&lt;/code&gt; and its value for &lt;code&gt;Application&lt;/code&gt;.</source>
          <target state="translated">删除 &lt;code&gt;Application&lt;/code&gt; 的配置参数 &lt;code&gt;Par&lt;/code&gt; 及其值。</target>
        </trans-unit>
        <trans-unit id="2a7b9f71cdf502a6cbced36e46c5564bce6c50e1" translate="yes" xml:space="preserve">
          <source>Removes the current code for &lt;code&gt;Module&lt;/code&gt;, that is, the current code for &lt;code&gt;Module&lt;/code&gt; is made old. This means that processes can continue to execute the code in the module, but no external function calls can be made to it.</source>
          <target state="translated">删除 &lt;code&gt;Module&lt;/code&gt; 的当前代码，也就是说， &lt;code&gt;Module&lt;/code&gt; 的当前代码已过时。这意味着进程可以继续执行模块中的代码，但是无法对其进行外部函数调用。</target>
        </trans-unit>
        <trans-unit id="1f61ca04390382aeff5d670ab45ee550c4297632" translate="yes" xml:space="preserve">
          <source>Removes the globally registered name &lt;code&gt;Name&lt;/code&gt; from the network of Erlang nodes.</source>
          <target state="translated">从Erlang节点的网络中删除全局注册的名称 &lt;code&gt;Name&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="81e55227c7de5aa8064bff12851856ba47f63444" translate="yes" xml:space="preserve">
          <source>Removes the item at the front of queue &lt;code&gt;Q1&lt;/code&gt;. Returns tuple &lt;code&gt;{{value, Item}, Q2}&lt;/code&gt;, where &lt;code&gt;Item&lt;/code&gt; is the item removed and &lt;code&gt;Q2&lt;/code&gt; is the resulting queue. If &lt;code&gt;Q1&lt;/code&gt; is empty, tuple &lt;code&gt;{empty, Q1}&lt;/code&gt; is returned.</source>
          <target state="translated">删除队列 &lt;code&gt;Q1&lt;/code&gt; 前面的项目。返回元组 &lt;code&gt;{{value, Item}, Q2}&lt;/code&gt; ，其中 &lt;code&gt;Item&lt;/code&gt; 是移除的项目， &lt;code&gt;Q2&lt;/code&gt; 是结果队列。如果 &lt;code&gt;Q1&lt;/code&gt; 为空，则返回元组 &lt;code&gt;{empty, Q1}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8847d0032fa945206d3bb9ae3e11a876f1dfecc7" translate="yes" xml:space="preserve">
          <source>Removes the item at the rear of queue &lt;code&gt;Q1&lt;/code&gt;. Returns tuple &lt;code&gt;{{value, Item}, Q2}&lt;/code&gt;, where &lt;code&gt;Item&lt;/code&gt; is the item removed and &lt;code&gt;Q2&lt;/code&gt; is the new queue. If &lt;code&gt;Q1&lt;/code&gt; is empty, tuple &lt;code&gt;{empty, Q1}&lt;/code&gt; is returned.</source>
          <target state="translated">删除队列 &lt;code&gt;Q1&lt;/code&gt; 后面的项目。返回元组 &lt;code&gt;{{value, Item}, Q2}&lt;/code&gt; ，其中 &lt;code&gt;Item&lt;/code&gt; 是要删除的项目，而 &lt;code&gt;Q2&lt;/code&gt; 是新队列。如果 &lt;code&gt;Q1&lt;/code&gt; 为空，则返回元组 &lt;code&gt;{empty, Q1}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="571beed8fa2a0a28fac65d7bf77305b45836b63c" translate="yes" xml:space="preserve">
          <source>Removes the link, if there is one, between the calling process and the process or port referred to by &lt;code&gt;Id&lt;/code&gt;.</source>
          <target state="translated">删除调用进程与 &lt;code&gt;Id&lt;/code&gt; 引用的进程或端口之间的链接（如果存在）。</target>
        </trans-unit>
        <trans-unit id="504de2ff2d5c71d2f018e6c02a78b16a7a10f573" translate="yes" xml:space="preserve">
          <source>Removes the node with key &lt;code&gt;Key&lt;/code&gt; from &lt;code&gt;Tree1&lt;/code&gt; and returns the new tree. Assumes that the key is present in the tree, crashes otherwise.</source>
          <target state="translated">从 &lt;code&gt;Tree1&lt;/code&gt; 中删除具有键 &lt;code&gt;Key&lt;/code&gt; 的节点，并返回新树。假设密钥在树中存在，否则崩溃。</target>
        </trans-unit>
        <trans-unit id="70950e4f3c8e2c52528b10b76a754de546dbfc5e" translate="yes" xml:space="preserve">
          <source>Removes the node with key &lt;code&gt;Key&lt;/code&gt; from &lt;code&gt;Tree1&lt;/code&gt; if the key is present in the tree, otherwise does nothing. Returns the new tree.</source>
          <target state="translated">如果树中存在 &lt;code&gt;Key&lt;/code&gt; ， &lt;code&gt;Tree1&lt;/code&gt; 树1中删除具有密钥Key的节点，否则不执行任何操作。返回新树。</target>
        </trans-unit>
        <trans-unit id="971ac232183d0065bf0bdfc8b8573c390073318f" translate="yes" xml:space="preserve">
          <source>Removes the possibility for SNMP to manipulate the table.</source>
          <target state="translated">取消了SNMP对该表进行操作的可能性。</target>
        </trans-unit>
        <trans-unit id="f6583a0dab178a2fb992ad59fefd4d81f7931c54" translate="yes" xml:space="preserve">
          <source>Removes the registered name &lt;code&gt;RegName&lt;/code&gt; associated with a process identifier or a port identifier, for example:</source>
          <target state="translated">删除与进程标识符或端口标识符关联的注册名称 &lt;code&gt;RegName&lt;/code&gt; ，例如：</target>
        </trans-unit>
        <trans-unit id="dbc47bf2382d0f415e3aa194df6dfa16f631c639" translate="yes" xml:space="preserve">
          <source>Removes the service completely with all its registered options. It is stopped before it is removed.</source>
          <target state="translated">彻底删除该服务及其所有注册选项。在删除之前,服务会被停止。</target>
        </trans-unit>
        <trans-unit id="acc9c9c020f9d887226a9272cf21c3405519decf" translate="yes" xml:space="preserve">
          <source>Removes the subscription on events of type &lt;code&gt;Event-Category&lt;/code&gt;</source>
          <target state="translated">删除类型为 &lt;code&gt;Event-Category&lt;/code&gt; 的事件的订阅</target>
        </trans-unit>
        <trans-unit id="cb76eef89426250953e573fa86236fe52b0f4297" translate="yes" xml:space="preserve">
          <source>Removes the validation callback call before heartbeats.</source>
          <target state="translated">删除心跳前的验证回调调用。</target>
        </trans-unit>
        <trans-unit id="1d9765a2dae7a6da7b34b4a4b327bad4140b2d58" translate="yes" xml:space="preserve">
          <source>Removes trailing empty parts of the result (as does &lt;code&gt;trim&lt;/code&gt; in &lt;code&gt;&lt;a href=&quot;re#split-3&quot;&gt;re:split/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">中移除了后结果的空部分（如确实 &lt;code&gt;trim&lt;/code&gt; 在 &lt;code&gt;&lt;a href=&quot;re#split-3&quot;&gt;re:split/3&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dc704ae3bc04ac3e06137d6e6058582a4d180738" translate="yes" xml:space="preserve">
          <source>Removing a transport causes the corresponding transport processes to be terminated. Whether or not a DPR message is sent to a peer is controlled by value of &lt;code&gt;&lt;a href=&quot;#disconnect_cb&quot;&gt;disconnect_cb&lt;/a&gt;&lt;/code&gt; configured on the transport.</source>
          <target state="translated">删除传输会导致相应的传输过程终止。DPR消息是否发送到对等方，由传输上配置的 &lt;code&gt;&lt;a href=&quot;#disconnect_cb&quot;&gt;disconnect_cb&lt;/a&gt;&lt;/code&gt; 的值控制。</target>
        </trans-unit>
        <trans-unit id="23711c5d370f461cdeb8d7a28cd3a7168c48b70d" translate="yes" xml:space="preserve">
          <source>Removing an application means that the application is stopped, the modules are unloaded using &lt;code&gt;delete_module&lt;/code&gt;, and then the application specification is unloaded from the application controller.</source>
          <target state="translated">删除应用程序意味着该应用程序已停止，使用 &lt;code&gt;delete_module&lt;/code&gt; 卸载了模块，然后从应用程序控制器中卸载了应用程序规范。</target>
        </trans-unit>
        <trans-unit id="2a257b8e79bb4eac48b669f49bbde3fc82db52ad" translate="yes" xml:space="preserve">
          <source>Removing an application means that the application is stopped, the modules are unloaded using a number of &lt;code&gt;delete_module&lt;/code&gt; instructions, and then the application specification is unloaded from the application controller.</source>
          <target state="translated">删除应用程序意味着该应用程序已停止，使用许多 &lt;code&gt;delete_module&lt;/code&gt; 指令卸载了模块，然后从应用程序控制器中卸载了应用程序规范。</target>
        </trans-unit>
        <trans-unit id="21ecfe29f13ab8d3591c9f7ede9bc7422e8e8b32" translate="yes" xml:space="preserve">
          <source>Removing the &lt;code&gt;timer&lt;/code&gt; key from the map when we change to state &lt;code&gt;locked&lt;/code&gt; is not strictly necessary since we can only get into state &lt;code&gt;open&lt;/code&gt; with an updated &lt;code&gt;timer&lt;/code&gt; map value. But it can be nice to not have outdated values in the state &lt;code&gt;Data&lt;/code&gt;!</source>
          <target state="translated">当我们更改为 &lt;code&gt;locked&lt;/code&gt; 状态时，从映射中删除 &lt;code&gt;timer&lt;/code&gt; 键不是绝对必要的，因为我们只能使用更新的 &lt;code&gt;timer&lt;/code&gt; 映射值进入 &lt;code&gt;open&lt;/code&gt; 状态。但是，最好不要在状态 &lt;code&gt;Data&lt;/code&gt; 中包含过时的值！</target>
        </trans-unit>
        <trans-unit id="0cfa720136cd04bacd2eac92ab7474295652cf42" translate="yes" xml:space="preserve">
          <source>Renames &lt;code&gt;Old&lt;/code&gt; to &lt;code&gt;New&lt;/code&gt; at the remote server.</source>
          <target state="translated">在远程服务器上将&amp;ldquo; &lt;code&gt;Old&lt;/code&gt; &lt;code&gt;New&lt;/code&gt; 重命名为&amp;ldquo; 新 &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="6d0f47bb19f5b5facec144970690eb3792cd2ef5" translate="yes" xml:space="preserve">
          <source>Renames a file named &lt;code&gt;OldName&lt;/code&gt; and gives it the name &lt;code&gt;NewName&lt;/code&gt;.</source>
          <target state="translated">重命名名为 &lt;code&gt;OldName&lt;/code&gt; 的文件，并将其命名为 &lt;code&gt;NewName&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="08c6204fdae6705e22c2f29ad8fc6ee2ce0504b5" translate="yes" xml:space="preserve">
          <source>Renames a set of possibly interdependent source code modules. &lt;code&gt;Files&lt;/code&gt; is a list of file names of source modules to be processed. &lt;code&gt;Renamings&lt;/code&gt; is a list of pairs of &lt;strong&gt;module names&lt;/strong&gt;, representing a mapping from old names to new. The returned value is the list of output file names.</source>
          <target state="translated">重命名一组可能相互依赖的源代码模块。 &lt;code&gt;Files&lt;/code&gt; 是要处理的源模块的文件名列表。 &lt;code&gt;Renamings&lt;/code&gt; 是&lt;strong&gt;模块名称&lt;/strong&gt;对的列表，表示从旧名称到新名称的映射。返回的值是输出文件名的列表。</target>
        </trans-unit>
        <trans-unit id="fd85297b6c1591a7f5105a46107e2cb8283239d7" translate="yes" xml:space="preserve">
          <source>Renames the log file to &lt;code&gt;File&lt;/code&gt; and then recreates a new log file. If a wrap log exists, &lt;code&gt;File&lt;/code&gt; is used as the base name of the renamed files. By default the header given to &lt;code&gt;open/1&lt;/code&gt; is written first in the newly opened log file, but if argument &lt;code&gt;Head&lt;/code&gt; or &lt;code&gt;BHead&lt;/code&gt; is specified, this item is used instead. The header argument is used only once. Next time a wrap log file is opened, the header given to &lt;code&gt;open/1&lt;/code&gt; is used.</source>
          <target state="translated">将日志文件重命名为&amp;ldquo; &lt;code&gt;File&lt;/code&gt; ，然后重新创建一个新的日志文件。如果存在换行日志，则将 &lt;code&gt;File&lt;/code&gt; 用作重命名文件的基本名称。默认情况下，将给 &lt;code&gt;open/1&lt;/code&gt; 的标头首先写入新打开的日志文件中，但是如果指定了参数 &lt;code&gt;Head&lt;/code&gt; 或 &lt;code&gt;BHead&lt;/code&gt; ，则改用此项目。标头参数仅使用一次。下次打开包装日志文件时，将使用指定给 &lt;code&gt;open/1&lt;/code&gt; 的标头。</target>
        </trans-unit>
        <trans-unit id="54af7ac61590d862405adf0734930d6cae2cb066" translate="yes" xml:space="preserve">
          <source>Renames the named table &lt;code&gt;Tab&lt;/code&gt; to the new name &lt;code&gt;Name&lt;/code&gt;. Afterwards, the old name cannot be used to access the table. Renaming an unnamed table has no effect.</source>
          <target state="translated">将命名表 &lt;code&gt;Tab&lt;/code&gt; 重命名为新名称 &lt;code&gt;Name&lt;/code&gt; 。之后，旧名称将无法用于访问表。重命名未命名的表无效。</target>
        </trans-unit>
        <trans-unit id="ff5eaf0e51b9b10a59f079047c36ed274ea953d1" translate="yes" xml:space="preserve">
          <source>Renaming of open files is not allowed on most platforms (see &lt;code&gt;eacces&lt;/code&gt; below).</source>
          <target state="translated">在大多数平台上，都不允许重命名打开的文件（请参阅下面的 &lt;code&gt;eacces&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="7fad444613612977458b8b88430a31438343ac58" translate="yes" xml:space="preserve">
          <source>Repeat the modification step with the tail of &lt;code&gt;modify_algs_list()&lt;/code&gt; and the resulting &lt;code&gt;A'&lt;/code&gt;.</source>
          <target state="translated">在尾部的 &lt;code&gt;modify_algs_list()&lt;/code&gt; 和结果 &lt;code&gt;A'&lt;/code&gt; 处重复修改步骤。</target>
        </trans-unit>
        <trans-unit id="8ac3f3cc198e4d81a7905803f774173fbcea00b2" translate="yes" xml:space="preserve">
          <source>Repeat until there is no path between &lt;code&gt;V1&lt;/code&gt; and &lt;code&gt;V2&lt;/code&gt;.</source>
          <target state="translated">重复直到 &lt;code&gt;V1&lt;/code&gt; 和 &lt;code&gt;V2&lt;/code&gt; 之间没有路径。</target>
        </trans-unit>
        <trans-unit id="882850f9efe1aecf6bc3eb3238cdb7ef37fa9c9b" translate="yes" xml:space="preserve">
          <source>Repeats command &lt;code&gt;N&lt;/code&gt;, if &lt;code&gt;N&lt;/code&gt; is positive. If it is negative, the &lt;code&gt;N&lt;/code&gt;th previous command is repeated (that is, &lt;code&gt;e(-1)&lt;/code&gt; repeats the previous command).</source>
          <target state="translated">如果 &lt;code&gt;N&lt;/code&gt; 为正，则重复命令 &lt;code&gt;N&lt;/code&gt; 。如果为负，则重复第 &lt;code&gt;N&lt;/code&gt; 个先前的命令（即 &lt;code&gt;e(-1)&lt;/code&gt; 重复先前的命令）。</target>
        </trans-unit>
        <trans-unit id="f80a175e58465cf2c27bbc9fe26e988c97a71cc0" translate="yes" xml:space="preserve">
          <source>Repeats the split until &lt;code&gt;Subject&lt;/code&gt; is exhausted. Conceptually option &lt;code&gt;global&lt;/code&gt; makes split work on the positions returned by &lt;code&gt;&lt;a href=&quot;#matches-3&quot;&gt;matches/3&lt;/a&gt;&lt;/code&gt;, while it normally works on the position returned by &lt;code&gt;&lt;a href=&quot;#match-3&quot;&gt;match/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">重复分割，直到 &lt;code&gt;Subject&lt;/code&gt; 用尽。从概念上讲，option &lt;code&gt;global&lt;/code&gt; 使 &lt;code&gt;&lt;a href=&quot;#matches-3&quot;&gt;matches/3&lt;/a&gt;&lt;/code&gt; 返回的位置处于拆分状态，而通常对 &lt;code&gt;&lt;a href=&quot;#match-3&quot;&gt;match/3&lt;/a&gt;&lt;/code&gt; 返回的位置进行划分。</target>
        </trans-unit>
        <trans-unit id="a172a0f5c387a5e46c31a43f2cefffb22c95831f" translate="yes" xml:space="preserve">
          <source>Repetition is specified by quantifiers, which can follow any of the following items:</source>
          <target state="translated">重复是由量化符指定的,量化符可以跟在以下任何一项后面:</target>
        </trans-unit>
        <trans-unit id="146808ca12c9af96348c2ab80e60f75d56da8935" translate="yes" xml:space="preserve">
          <source>Replace the kex algorithms list with the single algorithm &lt;code&gt;'diffie-hellman-group14-sha256'&lt;/code&gt;:</source>
          <target state="translated">用单个算法 &lt;code&gt;'diffie-hellman-group14-sha256'&lt;/code&gt; 替换kex算法列表：</target>
        </trans-unit>
        <trans-unit id="56d42d2b692a0d6476978d84d1a8114ac3464d87" translate="yes" xml:space="preserve">
          <source>Replaces &lt;code&gt;&lt;a href=&quot;#module_data&quot;&gt;module data&lt;/a&gt;&lt;/code&gt; of an &lt;code&gt;&lt;a href=&quot;#analyzed_module&quot;&gt;analyzed module&lt;/a&gt;&lt;/code&gt; with data read from a BEAM file. Application membership of the module is retained, and so is the value of the &lt;code&gt;builtins&lt;/code&gt; option of the module. An error is returned if the name of the read module differs from the given module.</source>
          <target state="translated">用从BEAM文件读取的 &lt;code&gt;&lt;a href=&quot;#module_data&quot;&gt;module data&lt;/a&gt;&lt;/code&gt; 替换已 &lt;code&gt;&lt;a href=&quot;#analyzed_module&quot;&gt;analyzed module&lt;/a&gt;&lt;/code&gt; 数据。模块的应用程序成员身份将保留，模块的 &lt;code&gt;builtins&lt;/code&gt; 选项的值也将保留。如果读取模块的名称与给定模块不同，则返回错误。</target>
        </trans-unit>
        <trans-unit id="7d9750cc1b6985af6ed569e4fe99331e1df8b510" translate="yes" xml:space="preserve">
          <source>Replaces &lt;code&gt;SearchPattern&lt;/code&gt; in &lt;code&gt;String&lt;/code&gt; with &lt;code&gt;Replacement&lt;/code&gt;. &lt;code&gt;Where&lt;/code&gt;, default &lt;code&gt;leading&lt;/code&gt;, indicates whether the &lt;code&gt;leading&lt;/code&gt;, the &lt;code&gt;trailing&lt;/code&gt; or &lt;code&gt;all&lt;/code&gt; encounters of &lt;code&gt;SearchPattern&lt;/code&gt; are to be replaced.</source>
          <target state="translated">替代对象 &lt;code&gt;SearchPattern&lt;/code&gt; 在 &lt;code&gt;String&lt;/code&gt; 与 &lt;code&gt;Replacement&lt;/code&gt; 。 &lt;code&gt;Where&lt;/code&gt; ，默认 &lt;code&gt;leading&lt;/code&gt; ，指示是否 &lt;code&gt;leading&lt;/code&gt; 时， &lt;code&gt;trailing&lt;/code&gt; 或者 &lt;code&gt;all&lt;/code&gt; 的遭遇 &lt;code&gt;SearchPattern&lt;/code&gt; 将被替换。</target>
        </trans-unit>
        <trans-unit id="a561fe60c3d9ba1409232278ffca46e8f6e25489" translate="yes" xml:space="preserve">
          <source>Replaces an event handler in event manager &lt;code&gt;EventMgrRef&lt;/code&gt; in the same way as &lt;code&gt;swap_handler/3&lt;/code&gt;, but also supervises the connection between &lt;code&gt;Handler2&lt;/code&gt; and the calling process.</source>
          <target state="translated">以与 &lt;code&gt;swap_handler/3&lt;/code&gt; 相同的方式替换事件管理器 &lt;code&gt;EventMgrRef&lt;/code&gt; 中的事件处理程序，但还监督 &lt;code&gt;Handler2&lt;/code&gt; 和调用进程之间的连接。</target>
        </trans-unit>
        <trans-unit id="419481a738590ffe74f074cd3f66660d64a0e60c" translate="yes" xml:space="preserve">
          <source>Replaces an old event handler with a new event handler in event manager &lt;code&gt;EventMgrRef&lt;/code&gt;.</source>
          <target state="translated">在事件管理器 &lt;code&gt;EventMgrRef&lt;/code&gt; 中用新的事件处理程序替换旧的事件处理程序。</target>
        </trans-unit>
        <trans-unit id="9eed3a84ce22771b5808dd7e1463a515114573df" translate="yes" xml:space="preserve">
          <source>Replaces an old occurrence of a directory named &lt;code&gt;.../Name[-Vsn][/ebin]&lt;/code&gt; in the code path, with &lt;code&gt;Dir&lt;/code&gt;. If &lt;code&gt;Name&lt;/code&gt; does not exist, it adds the new directory &lt;code&gt;Dir&lt;/code&gt; last in the code path. The new directory must also be named &lt;code&gt;.../Name[-Vsn][/ebin]&lt;/code&gt;. This function is to be used if a new version of the directory (library) is added to a running system.</source>
          <target state="translated">用 &lt;code&gt;Dir&lt;/code&gt; 替换代码路径中名为 &lt;code&gt;.../Name[-Vsn][/ebin]&lt;/code&gt; 的目录的旧版本。如果 &lt;code&gt;Name&lt;/code&gt; 不存在，它将在代码路径的最后添加新目录 &lt;code&gt;Dir&lt;/code&gt; 。新目录还必须命名为 &lt;code&gt;.../Name[-Vsn][/ebin]&lt;/code&gt; 。如果将新版本的目录（库）添加到正在运行的系统，则将使用此功能。</target>
        </trans-unit>
        <trans-unit id="e95e156f5a3b21e55b9e9d7df8ac40e83028b042" translate="yes" xml:space="preserve">
          <source>Replaces the &lt;code&gt;&lt;a href=&quot;#module_data&quot;&gt;module data&lt;/a&gt;&lt;/code&gt; of all &lt;code&gt;&lt;a href=&quot;#analyzed_module&quot;&gt;analyzed modules&lt;/a&gt;&lt;/code&gt; the BEAM files of which have been modified since last read by an &lt;code&gt;add&lt;/code&gt; function or &lt;code&gt;update&lt;/code&gt;. Application membership of the modules is retained, and so is the value of the &lt;code&gt;builtins&lt;/code&gt; option. Returns a sorted list of the names of the replaced modules.</source>
          <target state="translated">替换所有 &lt;code&gt;&lt;a href=&quot;#analyzed_module&quot;&gt;analyzed modules&lt;/a&gt;&lt;/code&gt; 的 &lt;code&gt;&lt;a href=&quot;#module_data&quot;&gt;module data&lt;/a&gt;&lt;/code&gt; ，这些模块的BEAM文件自上次读取以来已通过 &lt;code&gt;add&lt;/code&gt; 函数或 &lt;code&gt;update&lt;/code&gt; 。模块的应用程序成员身份将保留，并且 &lt;code&gt;builtins&lt;/code&gt; 选项的值也将保留。返回替换模块名称的排序列表。</target>
        </trans-unit>
        <trans-unit id="e162acc877cce3efc4c4645eed631739ea69f0f7" translate="yes" xml:space="preserve">
          <source>Replaces the existing objects of table &lt;code&gt;Name&lt;/code&gt; with objects created by calling the input function &lt;code&gt;InitFun&lt;/code&gt;, see below. The reason for using this function rather than calling &lt;code&gt;insert/2&lt;/code&gt; is that of efficiency. Notice that the input functions are called by the process that handles requests to the Dets table, not by the calling process.</source>
          <target state="translated">将表 &lt;code&gt;Name&lt;/code&gt; 的现有对象替换为通过调用输入函数 &lt;code&gt;InitFun&lt;/code&gt; 创建的对象，请参见下文。使用此函数而不是调用 &lt;code&gt;insert/2&lt;/code&gt; 的原因是效率。请注意，输入函数是由处理对Dets表的请求的进程调用的，而不是由调用进程调用的。</target>
        </trans-unit>
        <trans-unit id="a2e2db8771ec60e84f4f89a23c30a3ab11bf1890" translate="yes" xml:space="preserve">
          <source>Replaces the existing objects of table &lt;code&gt;Tab&lt;/code&gt; with objects created by calling the input function &lt;code&gt;InitFun&lt;/code&gt;, see below. This function is provided for compatibility with the &lt;code&gt;dets&lt;/code&gt; module, it is not more efficient than filling a table by using &lt;code&gt;&lt;a href=&quot;#insert-2&quot;&gt;insert/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将表 &lt;code&gt;Tab&lt;/code&gt; 的现有对象替换为通过调用输入函数 &lt;code&gt;InitFun&lt;/code&gt; 创建的对象，请参见下文。提供此功能是为了与 &lt;code&gt;dets&lt;/code&gt; 模块兼容，它没有比使用 &lt;code&gt;&lt;a href=&quot;#insert-2&quot;&gt;insert/2&lt;/a&gt;&lt;/code&gt; 填充表更有效。</target>
        </trans-unit>
        <trans-unit id="6628e9df362f62f633a5d7e6425eed79b6dbe778" translate="yes" xml:space="preserve">
          <source>Replaces the matched part of the &lt;code&gt;Subject&lt;/code&gt; string with the contents of &lt;code&gt;Replacement&lt;/code&gt;.</source>
          <target state="translated">用 &lt;code&gt;Replacement&lt;/code&gt; 的内容替换 &lt;code&gt;Subject&lt;/code&gt; 字符串的匹配部分。</target>
        </trans-unit>
        <trans-unit id="12f3f7bbddec5d3195ba4a36bdd58ba53790386e" translate="yes" xml:space="preserve">
          <source>Replaces the modules of an application with other modules read from an application directory. Release membership of the application is retained. Note that the name of the application is kept; the name of the given directory is not used.</source>
          <target state="translated">用从应用程序目录中读取的其他模块替换应用程序的模块。保留应用程序的发布成员资格。请注意,保留应用程序的名称,不使用指定目录的名称。</target>
        </trans-unit>
        <trans-unit id="a8d1a9d58a5e5ca14250cdab073b72fea337a464" translate="yes" xml:space="preserve">
          <source>Replaces the path specified in the boot script; see &lt;code&gt;script(4)&lt;/code&gt;.</source>
          <target state="translated">替换启动脚本中指定的路径；参见 &lt;code&gt;script(4)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="047f0df8a3018b8551685d31f76e6d44444474fc" translate="yes" xml:space="preserve">
          <source>Replaces the state of the process, and returns the new state.</source>
          <target state="translated">替换进程的状态,并返回新的状态。</target>
        </trans-unit>
        <trans-unit id="9184d9c39282b5754d576935dbc39e77f9d02e83" translate="yes" xml:space="preserve">
          <source>Replicas of type &lt;code&gt;disc_only_copies&lt;/code&gt; are only affected by this parameter during the initial dump of the log file at startup. When designing applications with &lt;strong&gt;very&lt;/strong&gt; high requirements, it can be appropriate not to use &lt;code&gt;disc_only_copies&lt;/code&gt; tables at all. The reason for this is the random access nature of normal operating system files. If a node goes down for a reason such as a power failure, these files can be corrupted because they are not properly closed. The &lt;code&gt;DAT&lt;/code&gt; files for &lt;code&gt;disc_only_copies&lt;/code&gt; are updated on a per transaction basis.</source>
          <target state="translated">类型为 &lt;code&gt;disc_only_copies&lt;/code&gt; 的副本仅在启动时日志文件的初始转储期间受此参数影响。当设计要求很高的应用程序时，&lt;strong&gt;完全&lt;/strong&gt;不使用 &lt;code&gt;disc_only_copies&lt;/code&gt; 表可能是适当的。其原因是正常操作系统文件的随机访问性质。如果节点由于电源故障等原因而关闭，则这些文件可能会由于未正确关闭而损坏。 &lt;code&gt;disc_only_copies&lt;/code&gt; 的 &lt;code&gt;DAT&lt;/code&gt; 文件在每个事务的基础上进行更新。</target>
        </trans-unit>
        <trans-unit id="6ac8596fa89edfabdcf6fecf958d16a005ece982" translate="yes" xml:space="preserve">
          <source>Replicated tables have the same content on all nodes where they are replicated. However, it is sometimes advantageous to have tables, but different content on different nodes.</source>
          <target state="translated">复制的表在所有被复制的节点上都有相同的内容。但是,有时候,在不同的节点上有表但内容不同是有利的。</target>
        </trans-unit>
        <trans-unit id="3a9e9afe1a552da9f13fde90fd0f5258e6b4db3e" translate="yes" xml:space="preserve">
          <source>Replicated tables that reside locally as well as somewhere else are either initiated from disc or by copying the entire table from the other node, depending on which of the different replicas are the most recent. &lt;code&gt;Mnesia&lt;/code&gt; determines which of the tables are the most recent.</source>
          <target state="translated">驻留在本地以及其他地方的复制表是从磁盘启动的，或者是从另一个节点复制整个表的，这取决于哪个不同的副本是最新的。 &lt;code&gt;Mnesia&lt;/code&gt; 确定哪个表是最新的。</target>
        </trans-unit>
        <trans-unit id="5ebc556c3a47de1e105808f80a573351d288796c" translate="yes" xml:space="preserve">
          <source>Replication. Tables can be replicated at several nodes.</source>
          <target state="translated">复制。表可以在几个节点上进行复制。</target>
        </trans-unit>
        <trans-unit id="e7fb706c746d6c42069331ec3f48fc3bf37dbe5a" translate="yes" xml:space="preserve">
          <source>Replies arriving after the timer has expired, will be delivered using the &lt;code&gt;&lt;a href=&quot;megaco_user#unexpected_trans&quot;&gt;handle_unexpected_trans/3,4&lt;/a&gt;&lt;/code&gt; callback function.</source>
          <target state="translated">计时器到期后到达的回复将使用 &lt;code&gt;&lt;a href=&quot;megaco_user#unexpected_trans&quot;&gt;handle_unexpected_trans/3,4&lt;/a&gt;&lt;/code&gt; 回调函数传递。</target>
        </trans-unit>
        <trans-unit id="126cf04b40e9dfa6af76d4b4da1a8ce9285a1fa9" translate="yes" xml:space="preserve">
          <source>Reply :: term()</source>
          <target state="translated">答复:任期()</target>
        </trans-unit>
        <trans-unit id="58cf87f6dac57b28d02194486fcb6f8dd6ecc261" translate="yes" xml:space="preserve">
          <source>Reply from other state than the request, &lt;code&gt;sys&lt;/code&gt; traceable</source>
          <target state="translated">来自除请求之外的其他状态的答复， &lt;code&gt;sys&lt;/code&gt; 可追溯</target>
        </trans-unit>
        <trans-unit id="7a00bbb5f99bc04dd63e793a0e32145c7dc90c48" translate="yes" xml:space="preserve">
          <source>Reply to &lt;code&gt;Port ! {Pid,close}&lt;/code&gt;.</source>
          <target state="translated">回复 &lt;code&gt;Port ! {Pid,close}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8694767ec4c7b52fb9e3f8d2f15cf11c06894a41" translate="yes" xml:space="preserve">
          <source>Reply to &lt;code&gt;Port ! {Pid,{connect,NewPid}}&lt;/code&gt;.</source>
          <target state="translated">回复 &lt;code&gt;Port ! {Pid,{connect,NewPid}}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4b96dfeb12fd8a4e4012eab404a286bb6ae1f178" translate="yes" xml:space="preserve">
          <source>Reply to a caller, mentioned at the end of section &lt;code&gt;&lt;a href=&quot;#All%20State%20Events&quot;&gt;All State Events&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">答复呼叫方，在 &lt;code&gt;&lt;a href=&quot;#All%20State%20Events&quot;&gt;All State Events&lt;/a&gt;&lt;/code&gt; 部分的末尾提到</target>
        </trans-unit>
        <trans-unit id="72df4b4bc039d9b2e5bdd4ac208ec2c87607d70b" translate="yes" xml:space="preserve">
          <source>Reply | {error, Reason}</source>
          <target state="translated">回复|{错误,原因}。</target>
        </trans-unit>
        <trans-unit id="d41fb2069eb0e10f46e258ab0b1229e85d9491d5" translate="yes" xml:space="preserve">
          <source>Report a parsed external entity declaration.</source>
          <target state="translated">报告一个经过解析的外部实体声明。</target>
        </trans-unit>
        <trans-unit id="ea5741dec57b6d216da5d5c515fc46fa697f27c6" translate="yes" xml:space="preserve">
          <source>Report an XML comment anywhere in the document (both inside and outside of the document element).</source>
          <target state="translated">在文档中的任何地方报告XML注释(包括文档元素内部和外部)。</target>
        </trans-unit>
        <trans-unit id="5b4904e061e57bddfab52b6cfd2d3ea1d06c349e" translate="yes" xml:space="preserve">
          <source>Report an attribute type declaration.</source>
          <target state="translated">报告一个属性类型声明。</target>
        </trans-unit>
        <trans-unit id="e3db9c3fab04d85ea232a7fcf942fbfd1b004b09" translate="yes" xml:space="preserve">
          <source>Report an element type declaration. The content model will consist of the string &quot;EMPTY&quot;, the string &quot;ANY&quot;, or a parenthesised group, optionally followed by an occurrence indicator. The model will be normalized so that all parameter entities are fully resolved and all whitespace is removed,and will include the enclosing parentheses. Other normalization (such as removing redundant parentheses or simplifying occurrence indicators) is at the discretion of the parser.</source>
          <target state="translated">报告一个元素类型声明。内容模型将由字符串 &quot;EMPTY&quot;、字符串 &quot;ANY &quot;或一个括号组组成,后面可选择跟一个发生指示器。该模型将被归一化,以便所有参数实体都被完全解析,所有空白都被删除,并将包括括号。其他的规范化处理(如去掉多余的小括号或简化发生指示器)由解析器决定。</target>
        </trans-unit>
        <trans-unit id="bf5d2d664010dcb10710bdf2302a984224d32fd1" translate="yes" xml:space="preserve">
          <source>Report an event to the collector.</source>
          <target state="translated">向收集者报告一个事件。</target>
        </trans-unit>
        <trans-unit id="0726ec060dd61caf7a44399784154bba339be6e5" translate="yes" xml:space="preserve">
          <source>Report an internal entity declaration.</source>
          <target state="translated">报告一项内部实体声明。</target>
        </trans-unit>
        <trans-unit id="b903e37625cb00383193345807e6f2cd70182b4f" translate="yes" xml:space="preserve">
          <source>Report browsing</source>
          <target state="translated">报告浏览</target>
        </trans-unit>
        <trans-unit id="b4e0e2fdd9a9b427f43e27d5c7689fab83f4954f" translate="yes" xml:space="preserve">
          <source>Report the beginning of some internal and external XML entities. ???</source>
          <target state="translated">报告一些内部和外部XML实体的开始。???</target>
        </trans-unit>
        <trans-unit id="1537db331987c73e42ec79886424725e7ced0ca8" translate="yes" xml:space="preserve">
          <source>Report the end of DTD declarations, it's reporting the end of the DOCTYPE declaration.</source>
          <target state="translated">报告DTD声明的结束,就是报告DOCTYPE声明的结束。</target>
        </trans-unit>
        <trans-unit id="45b1374aafa256e46789d17cd746069ce811a778" translate="yes" xml:space="preserve">
          <source>Report the end of a CDATA section.</source>
          <target state="translated">报告CDATA部分的结束。</target>
        </trans-unit>
        <trans-unit id="4e77cabadac053249b29d05bd9d1d234e2cc1e97" translate="yes" xml:space="preserve">
          <source>Report the end of an entity. ???</source>
          <target state="translated">报告一个实体的结束。???</target>
        </trans-unit>
        <trans-unit id="c09ed9bee7f1262daef582c404162b533ffaa466" translate="yes" xml:space="preserve">
          <source>Report the start of DTD declarations, it's reporting the start of the DOCTYPE declaration. If the document has no DOCTYPE declaration, this event will not be sent.</source>
          <target state="translated">报告DTD声明的开始,就是报告DOCTYPE声明的开始。如果文档没有DOCTYPE声明,这个事件将不会被发送。</target>
        </trans-unit>
        <trans-unit id="2b91bc27e6fa6a320a4ff9f88df2653241bb852b" translate="yes" xml:space="preserve">
          <source>Report the start of a CDATA section. The contents of the CDATA section will be reported through the regular characters event.</source>
          <target state="translated">报告CDATA部分的开始。CDATA部分的内容将通过常规字符事件报告。</target>
        </trans-unit>
        <trans-unit id="93fd5ff4921baf203ff8b603c22461be039d636b" translate="yes" xml:space="preserve">
          <source>Reports term allocation statistics.</source>
          <target state="translated">报告任期分配统计。</target>
        </trans-unit>
        <trans-unit id="99f5b324157a74f4ba599f70ce8661cfdaad5091" translate="yes" xml:space="preserve">
          <source>Reports the service as stopped to the service manager whenever it fails; it must be manually restarted.</source>
          <target state="translated">每当服务发生故障时,就向服务管理器报告该服务已停止;必须手动重新启动。</target>
        </trans-unit>
        <trans-unit id="e58aecb98ff170f7c11b8160942cbfb76f351aa2" translate="yes" xml:space="preserve">
          <source>Represents a file path or directory path</source>
          <target state="translated">代表一个文件路径或目录路径</target>
        </trans-unit>
        <trans-unit id="22e7792d22c5ac3675d98858db71f22cbdabe7a5" translate="yes" xml:space="preserve">
          <source>Represents a file path.</source>
          <target state="translated">代表一个文件路径。</target>
        </trans-unit>
        <trans-unit id="5f7ed31f709b30e7c94bd6f94122425a637cb46a" translate="yes" xml:space="preserve">
          <source>Request :: term(),</source>
          <target state="translated">请求:term();</target>
        </trans-unit>
        <trans-unit id="507b55ef67a3793e186e31503844b20cdf44035d" translate="yes" xml:space="preserve">
          <source>Request &lt;code&gt;get_geometry&lt;/code&gt; has no meaning for this I/O server, so the reply is &lt;code&gt;{error, enotsup}&lt;/code&gt;. The only option we handle is &lt;code&gt;binary&lt;/code&gt;/&lt;code&gt;list&lt;/code&gt;, which is done in separate functions.</source>
          <target state="translated">请求 &lt;code&gt;get_geometry&lt;/code&gt; 对于此I / O服务器没有意义，因此答复为 &lt;code&gt;{error, enotsup}&lt;/code&gt; 。我们处理的唯一选项是 &lt;code&gt;binary&lt;/code&gt; / &lt;code&gt;list&lt;/code&gt; ，这是在单独的函数中完成的。</target>
        </trans-unit>
        <trans-unit id="24e691247dfe3630fd35fda8c0e139ee4284bed3" translate="yes" xml:space="preserve">
          <source>Request &lt;code&gt;getopts&lt;/code&gt; is to return a list of &lt;code&gt;{Option, Value}&lt;/code&gt; tuples. This has the twofold function of providing both the current values and the available options of this I/O server. We have only one option, and hence return that.</source>
          <target state="translated">请求 &lt;code&gt;getopts&lt;/code&gt; 是返回 &lt;code&gt;{Option, Value}&lt;/code&gt; 元组的列表。它具有双重功能，即提供此I / O服务器的当前值和可用选项。我们只有一个选择，因此将其返回。</target>
        </trans-unit>
        <trans-unit id="2e0c378c7ccfe92728a6bfeeedc02369a4d75150" translate="yes" xml:space="preserve">
          <source>Request Forwarding</source>
          <target state="translated">请求转发</target>
        </trans-unit>
        <trans-unit id="370aa763d24c7c6a889f8bc1f6473021ef74ab40" translate="yes" xml:space="preserve">
          <source>Request Routing</source>
          <target state="translated">请求路由</target>
        </trans-unit>
        <trans-unit id="e22d3290b587090a383ad7e805ef81704f3e3f28" translate="yes" xml:space="preserve">
          <source>Request URI</source>
          <target state="translated">请求URI</target>
        </trans-unit>
        <trans-unit id="0f51f8766bdb5268b3f7a7fb925d40cf0ac64489" translate="yes" xml:space="preserve">
          <source>Request a notification (message) when the SNMP manager has started.</source>
          <target state="translated">当SNMP管理器启动时,请求通知(消息)。</target>
        </trans-unit>
        <trans-unit id="b54284e63f3207a9fed531cafce78b6ab997861b" translate="yes" xml:space="preserve">
          <source>Request notification when more data is available to fetch using &lt;code&gt;&lt;a href=&quot;erlang#dist_ctrl_get_data-1&quot;&gt;erlang:dist_ctrl_get_data(DHandle)&lt;/a&gt;&lt;/code&gt; for the distribution channel identified by &lt;code&gt;DHandle&lt;/code&gt;. When more data is present, the caller will be sent the message &lt;code&gt;dist_data&lt;/code&gt;. Once a &lt;code&gt;dist_data&lt;/code&gt; messages has been sent, no more &lt;code&gt;dist_data&lt;/code&gt; messages will be sent until the &lt;code&gt;dist_ctrl_get_data_notification/1&lt;/code&gt; function has been called again.</source>
          <target state="translated">当可以使用 &lt;code&gt;&lt;a href=&quot;erlang#dist_ctrl_get_data-1&quot;&gt;erlang:dist_ctrl_get_data(DHandle)&lt;/a&gt;&lt;/code&gt; 来获取由 &lt;code&gt;DHandle&lt;/code&gt; 标识的分发渠道的更多数据时，请求通知。当存在更多数据时，将向调用方发送消息 &lt;code&gt;dist_data&lt;/code&gt; 。一旦 &lt;code&gt;dist_data&lt;/code&gt; 邮件已发送，没有更多的 &lt;code&gt;dist_data&lt;/code&gt; 信息将被发送，直到 &lt;code&gt;dist_ctrl_get_data_notification/1&lt;/code&gt; 功能已被再次调用。</target>
        </trans-unit>
        <trans-unit id="2a5f2a76edb63ef16353fc42ce9a4bc1b8d49591" translate="yes" xml:space="preserve">
          <source>Request the network interface process (&lt;code&gt;Pid&lt;/code&gt;) to send this pdu (&lt;code&gt;Pdu&lt;/code&gt;).</source>
          <target state="translated">请求网络接口进程（ &lt;code&gt;Pid&lt;/code&gt; ）发送此pdu（ &lt;code&gt;Pdu&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="f13633a66bddd5919d4452b83066b5c9306c3699" translate="yes" xml:space="preserve">
          <source>Requests &lt;code&gt;getopts&lt;/code&gt; and &lt;code&gt;setopts&lt;/code&gt; are also simple to handle. We only change or read the state record:</source>
          <target state="translated">请求 &lt;code&gt;getopts&lt;/code&gt; 和 &lt;code&gt;setopts&lt;/code&gt; 也很容易处理。我们只更改或读取状态记录：</target>
        </trans-unit>
        <trans-unit id="64e6fe8df794535a6e7f8e3381fa29ec4cd2b3fe" translate="yes" xml:space="preserve">
          <source>Requests all available options and their current values for a specific I/O device, for example:</source>
          <target state="translated">例如,请求特定I/O设备的所有可用选项及其当前值。</target>
        </trans-unit>
        <trans-unit id="44b5e144b529d1d34d542fbdbbb37113f0041e10" translate="yes" xml:space="preserve">
          <source>Requests are constructed by the user; diameter sets header fields as defined in the relevant dictionary.</source>
          <target state="translated">请求是由用户构建的;直径设置了相关字典中定义的头字段。</target>
        </trans-unit>
        <trans-unit id="ddc39c20a1e625e364b51db01eb9285198684651" translate="yes" xml:space="preserve">
          <source>Requests can be issued in two different ways. Synchronous (see &lt;code&gt;&lt;a href=&quot;snmpm#sync_set&quot;&gt;sync_set&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;snmpm#sync_get&quot;&gt;sync_get&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;snmpm#sync_get_next&quot;&gt;sync_get_next&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;snmpm#sync_get_bulk&quot;&gt;sync_get_bulk&lt;/a&gt;&lt;/code&gt;) and asynchronous (see &lt;code&gt;&lt;a href=&quot;snmpm#async_set&quot;&gt;async_set&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;snmpm#async_get&quot;&gt;async_get&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;snmpm#async_get_next&quot;&gt;async_get_next&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;snmpm#async_get_bulk&quot;&gt;async_get_bulk&lt;/a&gt;&lt;/code&gt;). With synchronous the snmp reply is returned by the function. With asynchronous, the reply will instead be delivered through a call to one of the &lt;code&gt;handle_pdu&lt;/code&gt; callback function defined by the &lt;code&gt;&lt;a href=&quot;snmpm_user#handle_pdu&quot;&gt;handle_pdu&lt;/a&gt;&lt;/code&gt; behaviour.</source>
          <target state="translated">可以两种不同的方式发出请求。同步（请参见 &lt;code&gt;&lt;a href=&quot;snmpm#sync_set&quot;&gt;sync_set&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;snmpm#sync_get&quot;&gt;sync_get&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;snmpm#sync_get_next&quot;&gt;sync_get_next&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;snmpm#sync_get_bulk&quot;&gt;sync_get_bulk&lt;/a&gt;&lt;/code&gt; ）和异步（请参见 &lt;code&gt;&lt;a href=&quot;snmpm#async_set&quot;&gt;async_set&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;snmpm#async_get&quot;&gt;async_get&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;snmpm#async_get_next&quot;&gt;async_get_next&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;snmpm#async_get_bulk&quot;&gt;async_get_bulk&lt;/a&gt;&lt;/code&gt; ）。使用同步时，该函数将返回snmp答复。使用异步时，答复将通过对 &lt;code&gt;&lt;a href=&quot;snmpm_user#handle_pdu&quot;&gt;handle_pdu&lt;/a&gt;&lt;/code&gt; 行为定义的 &lt;code&gt;handle_pdu&lt;/code&gt; 回调函数之一的调用来传递。</target>
        </trans-unit>
        <trans-unit id="2414a5adfd102a338c55197c870a5e8ed30f956e" translate="yes" xml:space="preserve">
          <source>Requests graceful termination of the session associated with the client.</source>
          <target state="translated">请求优雅地终止与客户相关的会话。</target>
        </trans-unit>
        <trans-unit id="d655475b16d4a6739afa13e1af4b35470f41df5a" translate="yes" xml:space="preserve">
          <source>Requests information about the &lt;code&gt;Result&lt;/code&gt; of the cancellation. &lt;code&gt;Info&lt;/code&gt; defaults to &lt;code&gt;true&lt;/code&gt;, which means the &lt;code&gt;Result&lt;/code&gt; is given. When &lt;code&gt;Info&lt;/code&gt; is set to &lt;code&gt;false&lt;/code&gt;, no information about the result of the cancellation is given.</source>
          <target state="translated">请求有关取消 &lt;code&gt;Result&lt;/code&gt; 的信息。 &lt;code&gt;Info&lt;/code&gt; 默认为 &lt;code&gt;true&lt;/code&gt; ，这表示给出了 &lt;code&gt;Result&lt;/code&gt; 。当 &lt;code&gt;Info&lt;/code&gt; 设置为 &lt;code&gt;false&lt;/code&gt; 时，不提供有关取消结果的信息。</target>
        </trans-unit>
        <trans-unit id="6ff6c0ce1dee907fd5d7c3ad8ae69cf89227f676" translate="yes" xml:space="preserve">
          <source>Requests server to perform &lt;code&gt;Command&lt;/code&gt;. A previously opened session channel is used for the request. &lt;code&gt;Data&lt;/code&gt; is received from the server as a result of the command.</source>
          <target state="translated">请求服务器执行 &lt;code&gt;Command&lt;/code&gt; 。先前打开的会话通道用于该请求。作为命令的结果，从服务器接收 &lt;code&gt;Data&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6f2f2abc3ea9b54a33e41c7792741fcd63ec00c4" translate="yes" xml:space="preserve">
          <source>Requests server to perform &lt;code&gt;Command&lt;/code&gt;. A session channel is opened automatically for the request. &lt;code&gt;Data&lt;/code&gt; is received from the server as a result of the command.</source>
          <target state="translated">请求服务器执行 &lt;code&gt;Command&lt;/code&gt; 。将自动为该请求打开一个会话通道。作为命令的结果，从服务器接收 &lt;code&gt;Data&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fb7ab29539f909d1d965db364abb306b9d8c23af" translate="yes" xml:space="preserve">
          <source>Requests that the user default shell (typically defined in &lt;code&gt;/etc/passwd&lt;/code&gt; in Unix systems) is executed at the server end.</source>
          <target state="translated">请求在服务器端执行用户默认外壳程序（通常在Unix系统中在 &lt;code&gt;/etc/passwd&lt;/code&gt; 中定义）。</target>
        </trans-unit>
        <trans-unit id="e5d06105dd7bae848be23c489d1e425eef14e5ec" translate="yes" xml:space="preserve">
          <source>Requests the distribution port for the given node of an EPMD instance. Together with the port it returns a distribution protocol version which has been 5 since Erlang/OTP R6.</source>
          <target state="translated">请求 EPMD 实例中指定节点的分发端口。连同端口一起返回一个分发协议的版本,这个版本从Erlang/OTP R6开始就是5。</target>
        </trans-unit>
        <trans-unit id="c627743aae6292d1edfab3fd611cfbaa35f44835" translate="yes" xml:space="preserve">
          <source>Require one node with a Telnet connection and an FTP connection. Name the node &lt;code&gt;a&lt;/code&gt;:</source>
          <target state="translated">要求一个节点具有Telnet连接和FTP连接。将节点命名为 &lt;code&gt;a&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="932dc49cb33ce805a923ee58428b5676a3722687" translate="yes" xml:space="preserve">
          <source>Require these &lt;code&gt;&lt;a href=&quot;erl_dist_protocol#dflags&quot;&gt;distribution flags&lt;/a&gt;&lt;/code&gt; to be used. The connection will be aborted during the handshake if the other end does not use them.</source>
          <target state="translated">要求使用这些 &lt;code&gt;&lt;a href=&quot;erl_dist_protocol#dflags&quot;&gt;distribution flags&lt;/a&gt;&lt;/code&gt; 。如果另一端不使用该连接，则在握手期间连接将中止。</target>
        </trans-unit>
        <trans-unit id="56063266c28627d12fee18669ead149368f5bd42" translate="yes" xml:space="preserve">
          <source>Requires that &lt;code&gt;&lt;a href=&quot;#install-1&quot;&gt;ct:install/1&lt;/a&gt;&lt;/code&gt; has been run first.</source>
          <target state="translated">要求先运行 &lt;code&gt;&lt;a href=&quot;#install-1&quot;&gt;ct:install/1&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c2e070334a18ace55475d2c7ef7214f9f493188c" translate="yes" xml:space="preserve">
          <source>Requires that the connection is activated. See megaco:conn_info/2 about which items and values that are valid.</source>
          <target state="translated">需要连接被激活。参见 megaco:conn_info/2,了解哪些项目和值是有效的。</target>
        </trans-unit>
        <trans-unit id="f30287faf99098f6763e46a8603c005c19362cee" translate="yes" xml:space="preserve">
          <source>Requires that the connection is active.</source>
          <target state="translated">要求连接处于活动状态。</target>
        </trans-unit>
        <trans-unit id="c17e71f20f663cc9f1189e3ef11360a81ecbc8ce" translate="yes" xml:space="preserve">
          <source>Requires that the user does not have any active connection.</source>
          <target state="translated">要求用户没有任何活动连接。</target>
        </trans-unit>
        <trans-unit id="e3da804007a27f313a5e70a7489a52d0032c97df" translate="yes" xml:space="preserve">
          <source>Requires that the user is started. See megaco:user_info/2 about which items and values that are valid.</source>
          <target state="translated">要求用户已经启动。关于哪些项目和值是有效的,请参见 megaco:user_info/2。</target>
        </trans-unit>
        <trans-unit id="481a1c0d4b2c5ff0b5f30e85bd6e692df575764b" translate="yes" xml:space="preserve">
          <source>Requires the megaco application to be started. A user is either a Media Gateway (MG) or a Media Gateway Controller (MGC). One Erlang node may host many users.</source>
          <target state="translated">需要启动megaco应用程序。用户可以是媒体网关(MG),也可以是媒体网关控制器(MGC)。一个Erlang节点可以承载多个用户。</target>
        </trans-unit>
        <trans-unit id="2fd1dec24c9ebfc2c604cc35df6701d77561b1e0" translate="yes" xml:space="preserve">
          <source>Res | {badrpc, Reason}</source>
          <target state="translated">Res |{badrpc,Reason}。</target>
        </trans-unit>
        <trans-unit id="f4d9a08bacabf1ee192cf2da13ea58302dc18f45" translate="yes" xml:space="preserve">
          <source>Rescans the report directory. &lt;code&gt;Options&lt;/code&gt; is the same as for function &lt;code&gt;&lt;a href=&quot;#start-1&quot;&gt;start/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">重新扫描报告目录。 &lt;code&gt;Options&lt;/code&gt; 与功能 &lt;code&gt;&lt;a href=&quot;#start-1&quot;&gt;start/1&lt;/a&gt;&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="01982cececb98074d29349a0c9e9557b0c782077" translate="yes" xml:space="preserve">
          <source>Reserved for future use. Do &lt;strong&gt;not&lt;/strong&gt; use this flag.</source>
          <target state="translated">保留以备将来使用。千万&lt;strong&gt;不能&lt;/strong&gt;使用此标志。</target>
        </trans-unit>
        <trans-unit id="094891da7eec692d61182c9206f122cd46f36e84" translate="yes" xml:space="preserve">
          <source>Reset all TCP related (SNMP) statistics counters.</source>
          <target state="translated">重置所有TCP相关的(SNMP)统计计数器。</target>
        </trans-unit>
        <trans-unit id="68db580cd0bf93363aa59a948b05562996e8a597" translate="yes" xml:space="preserve">
          <source>Reset all related (SNMP) statistics counters.</source>
          <target state="translated">重置所有相关的(SNMP)统计计数器。</target>
        </trans-unit>
        <trans-unit id="ea2af705ba687b7e03e81fd53a43ecd4950468a4" translate="yes" xml:space="preserve">
          <source>Reset microstate accounting counters. Returns whether is was enabled or disabled.</source>
          <target state="translated">重置微观状态会计计数器。返回是否启用或禁用。</target>
        </trans-unit>
        <trans-unit id="1629825928942be4143ae7ec741fae164c32209f" translate="yes" xml:space="preserve">
          <source>Resets (clears) the cookie database for the specified &lt;code&gt;Profile&lt;/code&gt;. If no profile is specified the default profile is used.</source>
          <target state="translated">重置（清除）指定 &lt;code&gt;Profile&lt;/code&gt; 的cookie数据库。如果未指定配置文件，则使用默认配置文件。</target>
        </trans-unit>
        <trans-unit id="42f663110bd6b64d84eaef947ff89445b867c379" translate="yes" xml:space="preserve">
          <source>Resets all &lt;code&gt;snmp&lt;/code&gt; counters to 0.</source>
          <target state="translated">将所有 &lt;code&gt;snmp&lt;/code&gt; 计数器重置为0。</target>
        </trans-unit>
        <trans-unit id="d94724b4ac055ae7ff4431386f7dd90b475d3b80" translate="yes" xml:space="preserve">
          <source>Resets all counters and then starts microstate accounting for the given milliseconds.</source>
          <target state="translated">重置所有计数器,然后开始给定毫秒的微状态核算。</target>
        </trans-unit>
        <trans-unit id="c35fd9595bfbabab4d1c990efe590d85aad9a81e" translate="yes" xml:space="preserve">
          <source>Resets all coverage data for a Cover compiled module &lt;code&gt;Module&lt;/code&gt; in the Cover database on all nodes. If the argument is omitted, the coverage data will be reset for all modules known by Cover.</source>
          <target state="translated">在所有节点上的Cover数据库中重置Cover编译模块 &lt;code&gt;Module&lt;/code&gt; 的所有coverage数据。如果省略该参数，那么将为Cover已知的所有模块重置coverage数据。</target>
        </trans-unit>
        <trans-unit id="f827ea2106527d66b22496ff17d161262d1e35ba" translate="yes" xml:space="preserve">
          <source>Resets entry &lt;code&gt;I&lt;/code&gt; to the default value for the array. If the value of entry &lt;code&gt;I&lt;/code&gt; is the default value, the array is returned unchanged. Reset never changes the array size. Shrinking can be done explicitly by calling &lt;code&gt;&lt;a href=&quot;#resize-2&quot;&gt;resize/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将条目 &lt;code&gt;I&lt;/code&gt; 重置为阵列的默认值。如果条目 &lt;code&gt;I&lt;/code&gt; 的值为默认值，则数组将保持不变。重置永远不会更改阵列大小。缩小可以通过调用 &lt;code&gt;&lt;a href=&quot;#resize-2&quot;&gt;resize/2&lt;/a&gt;&lt;/code&gt; 显式完成。</target>
        </trans-unit>
        <trans-unit id="de1d66243efd40011f5354f807bf4316d6d884bd" translate="yes" xml:space="preserve">
          <source>Resizes a driver binary, while keeping the data.</source>
          <target state="translated">在保留数据的同时,重新调整驱动二进制的大小。</target>
        </trans-unit>
        <trans-unit id="afe06ccb43798e203443a661c67985d4683b2235" translate="yes" xml:space="preserve">
          <source>Resizes a memory block, either in place, or by allocating a new block, copying the data, and freeing the old block. A pointer is returned to the reallocated memory. On failure (out of memory), &lt;code&gt;NULL&lt;/code&gt; is returned. (This is most often a wrapper for &lt;code&gt;realloc&lt;/code&gt;.)</source>
          <target state="translated">通过就地调整内存块的大小，或者通过分配新块，复制数据和释放旧块来调整内存块的大小。指针返回到重新分配的内存。发生故障（内存不足）时，将返回 &lt;code&gt;NULL&lt;/code&gt; 。（这通常是 &lt;code&gt;realloc&lt;/code&gt; 的包装器。）</target>
        </trans-unit>
        <trans-unit id="09d1f73c9252da1107937d4d534d408ca7760aa6" translate="yes" xml:space="preserve">
          <source>Resolves a DNS record of the specified type and class for the specified name.</source>
          <target state="translated">解析指定名称的指定类型和类别的DNS记录。</target>
        </trans-unit>
        <trans-unit id="eba5a7224f57500ffaa0dd3342225d7f10381f82" translate="yes" xml:space="preserve">
          <source>Resolves a DNS record of the specified type and class for the specified name. The returned &lt;code&gt;dns_msg()&lt;/code&gt; can be examined using access functions in &lt;code&gt;inet_db&lt;/code&gt;, as described in section in &lt;code&gt;&lt;a href=&quot;#dns_types&quot;&gt;DNS Types&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">为指定名称解析指定类型和类的DNS记录。可以使用 &lt;code&gt;inet_db&lt;/code&gt; 中的访问函数来检查返回的 &lt;code&gt;dns_msg()&lt;/code&gt; ，如&amp;ldquo; &lt;code&gt;&lt;a href=&quot;#dns_types&quot;&gt;DNS Types&lt;/a&gt;&lt;/code&gt; 一节中所述。</target>
        </trans-unit>
        <trans-unit id="4e276400129592150e484867e483da18ebb865dd" translate="yes" xml:space="preserve">
          <source>Resolves a DNS record of the specified type for the specified host, of class &lt;code&gt;in&lt;/code&gt;. Returns, on success, a &lt;code&gt;hostent()&lt;/code&gt; record with &lt;code&gt;dns_data()&lt;/code&gt; elements in the address list field.</source>
          <target state="translated">解决了特定类型指定的主机类，的DNS记录 &lt;code&gt;in&lt;/code&gt; 。成功返回带有地址列表字段中 &lt;code&gt;dns_data()&lt;/code&gt; 元素的 &lt;code&gt;hostent()&lt;/code&gt; 记录。</target>
        </trans-unit>
        <trans-unit id="e255f15dc3b35ddba127b05f853b1bc2a4f1b219" translate="yes" xml:space="preserve">
          <source>Resolves the DNS data for the record of the specified type and class for the specified name. On success, filters out the answer records with the correct &lt;code&gt;Class&lt;/code&gt; and &lt;code&gt;Type&lt;/code&gt;, and returns a list of their data fields. So, a lookup for type &lt;code&gt;any&lt;/code&gt; gives an empty answer, as the answer records have specific types that are not &lt;code&gt;any&lt;/code&gt;. An empty answer or a failed lookup returns an empty list.</source>
          <target state="translated">为指定名称的类型和类的记录解析DNS数据。成功后，使用正确的 &lt;code&gt;Class&lt;/code&gt; 和 &lt;code&gt;Type&lt;/code&gt; 筛选出答案记录，并返回其数据字段的列表。因此，对类型 &lt;code&gt;any&lt;/code&gt; 的查找会给出一个空答案，因为答案记录具有特定的类型，它们不是 &lt;code&gt;any&lt;/code&gt; 。空答案或查找失败将返回一个空列表。</target>
        </trans-unit>
        <trans-unit id="1e7209e804399190d5b8e9245f8d82fb88f8ff0c" translate="yes" xml:space="preserve">
          <source>Resource types support upgrade in runtime by allowing a loaded NIF library to take over an already existing resource type and by that &quot;inherit&quot; all existing objects of that type. The destructor of the new library is thereafter called for the inherited objects and the library with the old destructor function can be safely unloaded. Existing resource objects, of a module that is upgraded, must either be deleted or taken over by the new NIF library. The unloading of a library is postponed as long as there exist resource objects with a destructor function in the library.</source>
          <target state="translated">资源类型支持在运行时升级,允许加载的NIF库接管一个已经存在的资源类型,并 &quot;继承 &quot;该类型的所有现有对象。此后,新库的析构函数将被调用,而带有旧析构函数的库可以安全地卸载。升级后的模块中,现有的资源对象必须被删除或被新的NIF库接管。只要库中存在带解构函数的资源对象,库的卸载就会被推迟。</target>
        </trans-unit>
        <trans-unit id="0ef0d0d978a116bde33e50341c9e6394cb2893fc" translate="yes" xml:space="preserve">
          <source>Restart call counters for the matching functions in matching modules that are call count traced. The &lt;code&gt;FS&lt;/code&gt; argument can be used to specify the first argument to &lt;code&gt;erlang:trace_pattern/3&lt;/code&gt;. See erlang(3).</source>
          <target state="translated">重新启动已跟踪呼叫计数的匹配模块中匹配功能的呼叫计数器。该 &lt;code&gt;FS&lt;/code&gt; 参数可用于指定的第一个参数 &lt;code&gt;erlang:trace_pattern/3&lt;/code&gt; 。参见erlang（3）。</target>
        </trans-unit>
        <trans-unit id="61c90f456eca86b51d3200d77a1d7f2617f0ddb0" translate="yes" xml:space="preserve">
          <source>Restart the set worker process of a multi-threaded agent.</source>
          <target state="translated">重新启动多线程代理的集工进程。</target>
        </trans-unit>
        <trans-unit id="7e74f2cc20537e216a01ecee1923f294af034529" translate="yes" xml:space="preserve">
          <source>Restart the worker process of a multi-threaded agent.</source>
          <target state="translated">重新启动多线程代理的工作进程。</target>
        </trans-unit>
        <trans-unit id="dc214e0416b7a580a7af166989fb4bbe4276bbd4" translate="yes" xml:space="preserve">
          <source>Restarting an application is useful when a change is too complicated to be made without restarting the processes, for example, if the supervisor hierarchy has been restructured.</source>
          <target state="translated">当变更太复杂,不重启流程就无法进行时,重启应用程序是很有用的,例如,如果主管层级已经重组,那么重启应用程序。</target>
        </trans-unit>
        <trans-unit id="78facde3d4d8b32988e630ea196e0d52f90f256d" translate="yes" xml:space="preserve">
          <source>Restarting an application means that the application is stopped and then started again similar to using the instructions &lt;code&gt;remove_application&lt;/code&gt; and &lt;code&gt;add_application&lt;/code&gt; in sequence.</source>
          <target state="translated">重新启动应用程序意味着先停止应用程序，然后再启动，类似于依次使用指令 &lt;code&gt;remove_application&lt;/code&gt; 和 &lt;code&gt;add_application&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="98a98cfd0a822c62415063db7432a74158f00a07" translate="yes" xml:space="preserve">
          <source>Restarting an application means that the application is stopped and then started again, similar to using the instructions &lt;code&gt;remove_application&lt;/code&gt; and &lt;code&gt;add_application&lt;/code&gt; in sequence. Note that, even if the application has been started before the release upgrade is performed, &lt;code&gt;restart_application&lt;/code&gt; may only &lt;code&gt;load&lt;/code&gt; it rather than &lt;code&gt;start&lt;/code&gt; it, depending on the application's &lt;code&gt;start type&lt;/code&gt;: If &lt;code&gt;Type = load&lt;/code&gt;, the application is only loaded. If &lt;code&gt;Type = none&lt;/code&gt;, the application is not loaded and not started, although the code for its modules is loaded.</source>
          <target state="translated">重新启动应用程序意味着先停止应用程序，然后再次启动，类似于依次使用指令 &lt;code&gt;remove_application&lt;/code&gt; 和 &lt;code&gt;add_application&lt;/code&gt; 。请注意，即使在执行发行升级之前已启动应用程序， &lt;code&gt;restart_application&lt;/code&gt; 也可能仅 &lt;code&gt;load&lt;/code&gt; 而不是 &lt;code&gt;start&lt;/code&gt; 它，具体取决于应用程序的 &lt;code&gt;start type&lt;/code&gt; ：如果 &lt;code&gt;Type = load&lt;/code&gt; ，则仅加载应用程序。如果 &lt;code&gt;Type = none&lt;/code&gt; ，则尽管已加载其模块的代码，但该应用程序不会加载也不会启动。</target>
        </trans-unit>
        <trans-unit id="2de62cc3a4bd25c5d36ad0d8cc488270e5a0abd1" translate="yes" xml:space="preserve">
          <source>Restarts the call counters from zero for specified functions. Can be used to collect a new set of counters without having to stop and start call count profiling.</source>
          <target state="translated">从零开始重新启动指定函数的调用计数器。可以用来收集一组新的计数器,而不需要停止和启动调用计数分析。</target>
        </trans-unit>
        <trans-unit id="9b939c958cae308cd1ce8394371dead14ecaa1d6" translate="yes" xml:space="preserve">
          <source>Restore previous configuration by maintaining a history buffer and handling configuration files.</source>
          <target state="translated">通过维护历史缓冲区和处理配置文件来恢复以前的配置。</target>
        </trans-unit>
        <trans-unit id="3733a2a68fd7503fd11786ec56d8016b0a108fe2" translate="yes" xml:space="preserve">
          <source>Restores an opaque continuation returned by &lt;code&gt;&lt;a href=&quot;#select-3&quot;&gt;select/3&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#select-1&quot;&gt;select/1&lt;/a&gt;&lt;/code&gt; if the continuation has passed through external term format (been sent between nodes or stored on disk).</source>
          <target state="translated">如果延续通过外部术语格式（在节点之间发送或存储在磁盘上）传递，则恢复由 &lt;code&gt;&lt;a href=&quot;#select-3&quot;&gt;select/3&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;#select-1&quot;&gt;select/1&lt;/a&gt;&lt;/code&gt; 返回的不透明延续。</target>
        </trans-unit>
        <trans-unit id="4f3f20018aa0040e4c23d84e3c7950b3527b5bdd" translate="yes" xml:space="preserve">
          <source>Restores previously saved data to the server.</source>
          <target state="translated">将之前保存的数据恢复到服务器上。</target>
        </trans-unit>
        <trans-unit id="9fd2af0db43c49aa55ce334c12e957767a3ccb8b" translate="yes" xml:space="preserve">
          <source>Restores the previous state of user tags and their spreading as it was before a call to &lt;code&gt;&lt;a href=&quot;#spread_tag-1&quot;&gt;spread_tag/1&lt;/a&gt;&lt;/code&gt;. Note that the restoring is not limited to the same process, one can utilize this to turn off spreding in one process and restore it in a newly created, the one that actually is going to send messages:</source>
          <target state="translated">恢复用户标签的先前状态及其传播，就像在调用 &lt;code&gt;&lt;a href=&quot;#spread_tag-1&quot;&gt;spread_tag/1&lt;/a&gt;&lt;/code&gt; 之前一样。请注意，还原并不限于同一进程，您可以利用它来关闭一个进程中的加速，然后将其还原到一个新创建的进程中，该进程实际上是要发送消息的：</target>
        </trans-unit>
        <trans-unit id="5fac283093b6a2a509402c8c0582786b4a2bfd78" translate="yes" xml:space="preserve">
          <source>RestrOp ::= &lt;code&gt;|&lt;/code&gt;</source>
          <target state="translated">RestrOp :: = &lt;code&gt;|&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b7dd86ea16702f2798d2509aeac3e281b6a70f1b" translate="yes" xml:space="preserve">
          <source>RestrOp ::= &lt;code&gt;||&lt;/code&gt;</source>
          <target state="translated">RestrOp :: = &lt;code&gt;||&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fc7c10d01aae72be16a86c0f638ea9cf021214b5" translate="yes" xml:space="preserve">
          <source>RestrOp ::= &lt;code&gt;|||&lt;/code&gt;</source>
          <target state="translated">RestrOp :: = &lt;code&gt;|||&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bfa4191a9eae6ca9165e4fa4ff48bbaff74e299e" translate="yes" xml:space="preserve">
          <source>Restricts the socket to use only IPv6, prohibiting any IPv4 connections. This is only applicable for IPv6 sockets (option &lt;code&gt;inet6&lt;/code&gt;).</source>
          <target state="translated">限制套接字仅使用IPv6，禁止任何IPv4连接。这仅适用于IPv6套接字（选项 &lt;code&gt;inet6&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="5faa59d4bc3756040b8ce9e673c09f929e6ee9ba" translate="yes" xml:space="preserve">
          <source>Result</source>
          <target state="translated">Result</target>
        </trans-unit>
        <trans-unit id="fad7e8f89b3044f680980534cc7f38eb45d77455" translate="yes" xml:space="preserve">
          <source>Result = 0 -&amp;gt; ok, result &amp;gt; 0 -&amp;gt; error.</source>
          <target state="translated">结果= 0-&amp;gt;确定，结果&amp;gt; 0-&amp;gt;错误。</target>
        </trans-unit>
        <trans-unit id="72c3908300e570c710533b083bcfd239361ca5b4" translate="yes" xml:space="preserve">
          <source>Result code 4003 is sent in CEA if there is an existing connection to the peer in question and configuration does not allow more than one.</source>
          <target state="translated">如果存在与相关对等体的现有连接,且配置不允许超过一个,则在CEA中发送结果代码4003。</target>
        </trans-unit>
        <trans-unit id="b1380f2ff1e7ff28281bc2b3937da790713a4a29" translate="yes" xml:space="preserve">
          <source>Result codes 3001, 3002, 3005, and 3007 can be sent in answers formulated by diameter, if configured to do so.</source>
          <target state="translated">如果配置了结果代码3001、3002、3005、3007,可以按直径制定的答案发送。</target>
        </trans-unit>
        <trans-unit id="2bdb45e9d6b5679ea0ed96f1d5bfeae12bb8e898" translate="yes" xml:space="preserve">
          <source>Result-Code AVP</source>
          <target state="translated">结果代码AVP</target>
        </trans-unit>
        <trans-unit id="da7c61f4348e14cf89c824561d092db5c3023fcb" translate="yes" xml:space="preserve">
          <source>Result-Code AVP Values</source>
          <target state="translated">结果-代码AVP值</target>
        </trans-unit>
        <trans-unit id="0a0db2d8653e2bdb24b4ddd06733b9ef033724a6" translate="yes" xml:space="preserve">
          <source>Results are written to file (excel compatible text files) and on stdout.</source>
          <target state="translated">结果被写入文件(excel兼容的文本文件)和stdout。</target>
        </trans-unit>
        <trans-unit id="6c1e28cf400ace7a0cf6a58fff614aab265e55e1" translate="yes" xml:space="preserve">
          <source>Results in a OS call to:</source>
          <target state="translated">结果操作系统调用到:</target>
        </trans-unit>
        <trans-unit id="92266fcdf49cd88ae3cb55b7500e16b861e0f8f8" translate="yes" xml:space="preserve">
          <source>Resume the processes.</source>
          <target state="translated">重新开始处理。</target>
        </trans-unit>
        <trans-unit id="e18f16b3b88e1efaab280687e97a380ca884e44f" translate="yes" xml:space="preserve">
          <source>Resumes a suspended process.</source>
          <target state="translated">恢复暂停的进程。</target>
        </trans-unit>
        <trans-unit id="f14bdb1234c7ed01c49eaf26a7e322a0b85afcbe" translate="yes" xml:space="preserve">
          <source>Resumes all suspended processes using a module &lt;code&gt;Mod&lt;/code&gt;.</source>
          <target state="translated">使用模块 &lt;code&gt;Mod&lt;/code&gt; 恢复所有暂停的进程。</target>
        </trans-unit>
        <trans-unit id="17c7293f799309379456316dabcac2397077e454" translate="yes" xml:space="preserve">
          <source>Resumes process execution for &lt;code&gt;Pid&lt;/code&gt; or &lt;code&gt;c:pid(X,Y,Z)&lt;/code&gt;.</source>
          <target state="translated">恢复 &lt;code&gt;Pid&lt;/code&gt; 或 &lt;code&gt;c:pid(X,Y,Z)&lt;/code&gt; 的进程执行。</target>
        </trans-unit>
        <trans-unit id="baa6efb2f790bdb132e3741e6aa4b131129c8c15" translate="yes" xml:space="preserve">
          <source>Retains the statistics of destroyed locks.</source>
          <target state="translated">保留被破坏的锁的统计数据。</target>
        </trans-unit>
        <trans-unit id="5cc03bdcfe4904c6966e4b5da63b22275bcbe022" translate="yes" xml:space="preserve">
          <source>Retreive all the sdp records of type &lt;code&gt;Type&lt;/code&gt; from the property group &lt;code&gt;PG&lt;/code&gt;.</source>
          <target state="translated">从属性组 &lt;code&gt;PG&lt;/code&gt; 中检索类型为 &lt;code&gt;Type&lt;/code&gt; 的所有sdp记录。</target>
        </trans-unit>
        <trans-unit id="02febca237ef746057d21ace8518a1c006a9c4b9" translate="yes" xml:space="preserve">
          <source>Retreive the (SNMP) statistic counters maintained by the megaco application. The global counters handle events that cannot be attributed to a single connection (e.g. protocol errors that occur before the connection has been properly setup).</source>
          <target state="translated">恢复由megaco应用程序维护的(SNMP)统计计数器。全局计数器处理不能归因于单个连接的事件(例如,在正确设置连接之前发生的协议错误)。</target>
        </trans-unit>
        <trans-unit id="fa70701bc77c29039a4b681cd1ced4c75c07e003" translate="yes" xml:space="preserve">
          <source>Retreive the TCP related (SNMP) statistics counters.</source>
          <target state="translated">恢复TCP相关的(SNMP)统计计数器。</target>
        </trans-unit>
        <trans-unit id="8d7ef75f058aa1cf6b07567ad7ff04b3417d35fb" translate="yes" xml:space="preserve">
          <source>Retreive the UDP related (SNMP) statistics counters.</source>
          <target state="translated">恢复UDP相关的(SNMP)统计计数器。</target>
        </trans-unit>
        <trans-unit id="7151989dd8e6c94f234c2f32661137cfebef0084" translate="yes" xml:space="preserve">
          <source>Retreive the size of the mib server cache.</source>
          <target state="translated">恢复mib服务器缓存的大小。</target>
        </trans-unit>
        <trans-unit id="4b31fb756dce544f130f19b8dad2c90736d11a83" translate="yes" xml:space="preserve">
          <source>Retreive the type (asn1 bertype) of an oid.</source>
          <target state="translated">恢复一个id的类型(asn1 bertype)。</target>
        </trans-unit>
        <trans-unit id="a066518d0b87d9a981cc76dfb930b0b065ce9302" translate="yes" xml:space="preserve">
          <source>Retrieve Erlang System Time</source>
          <target state="translated">检索Erlang系统时间</target>
        </trans-unit>
        <trans-unit id="9d19fa4433634e8f7f0044b8f7171e217dfed550" translate="yes" xml:space="preserve">
          <source>Retrieve agent config.</source>
          <target state="translated">检索代理配置。</target>
        </trans-unit>
        <trans-unit id="3acc64305dc86f6d79205ab898062e15ca0a37ff" translate="yes" xml:space="preserve">
          <source>Retrieve all alias-names known to the agent.</source>
          <target state="translated">检索代理人已知的所有别名。</target>
        </trans-unit>
        <trans-unit id="2134b573a854d0e886332caabf7da925b7e53ab2" translate="yes" xml:space="preserve">
          <source>Retrieve all loaded mib-files.</source>
          <target state="translated">检索所有加载的mib文件。</target>
        </trans-unit>
        <trans-unit id="1147438c0e44be971748704321067492f033f625" translate="yes" xml:space="preserve">
          <source>Retrieve all notifications (and traps) known to the agent.</source>
          <target state="translated">检索代理人已知的所有通知(和陷阱)。</target>
        </trans-unit>
        <trans-unit id="fadeb4e61b2e973528a9b28b3ff09f86b61edc47" translate="yes" xml:space="preserve">
          <source>Retrieve all tables known to the agent.</source>
          <target state="translated">检索代理商已知的所有表。</target>
        </trans-unit>
        <trans-unit id="fce5ac6430e5aaacbba5d6b3b19663ec99641f54" translate="yes" xml:space="preserve">
          <source>Retrieve all variables known to the agent.</source>
          <target state="translated">检索代理人已知的所有变量。</target>
        </trans-unit>
        <trans-unit id="1bdc580cb2514729314f5603353f80c0bbf0c5c6" translate="yes" xml:space="preserve">
          <source>Retrieve data set with &lt;code&gt;&lt;a href=&quot;#set_process_metadata-1&quot;&gt;set_process_metadata/1&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#update_process_metadata-1&quot;&gt;update_process_metadata/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;#set_process_metadata-1&quot;&gt;set_process_metadata/1&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;#update_process_metadata-1&quot;&gt;update_process_metadata/1&lt;/a&gt;&lt;/code&gt; 检索数据集。</target>
        </trans-unit>
        <trans-unit id="5d69480abf5e824d94bacf05e6e59333596eae5f" translate="yes" xml:space="preserve">
          <source>Retrieve implementation dependent mib-storage table information.</source>
          <target state="translated">检索依赖于实现的mib存储表信息。</target>
        </trans-unit>
        <trans-unit id="c4acb468e368837beb0ba41c4f9baf884236d501" translate="yes" xml:space="preserve">
          <source>Retrieve misc info for the mib data.</source>
          <target state="translated">检索mib数据的其他信息。</target>
        </trans-unit>
        <trans-unit id="95b30a24349787eb347b2a0cdc30747002d1ce85" translate="yes" xml:space="preserve">
          <source>Retrieve the encoding-config and when initiating the &lt;code&gt;megaco_receive_handle&lt;/code&gt;, set the field &lt;code&gt;encoding_config&lt;/code&gt; accordingly.</source>
          <target state="translated">检索encoding-config，并在启动 &lt;code&gt;megaco_receive_handle&lt;/code&gt; 时，相应地设置字段 &lt;code&gt;encoding_config&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f599f26a74119290164e57387a0798ea103824b0" translate="yes" xml:space="preserve">
          <source>Retrieve the encoding-config using the &lt;code&gt;&lt;a href=&quot;megaco#system_info&quot;&gt;system_info&lt;/a&gt;&lt;/code&gt; function (with &lt;code&gt;Item = text_config&lt;/code&gt;).</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;megaco#system_info&quot;&gt;system_info&lt;/a&gt;&lt;/code&gt; 函数（使用 &lt;code&gt;Item = text_config&lt;/code&gt; ）检索encoding-config 。</target>
        </trans-unit>
        <trans-unit id="3e5761ee307c8026ca4f761f940f2b961da0dd03" translate="yes" xml:space="preserve">
          <source>Retrieve the list of all the mibs loaded into this agent. Default is the master agent.</source>
          <target state="translated">检索加载到这个代理的所有mib的列表。默认为主代理。</target>
        </trans-unit>
        <trans-unit id="8fb723c2fa9c15cbf7e40bed085d2e51be38564e" translate="yes" xml:space="preserve">
          <source>Retrieve the mib file for the mib.</source>
          <target state="translated">检索mib的mib文件。</target>
        </trans-unit>
        <trans-unit id="3c2eaccb5619264e34509fb47435f523adc8579d" translate="yes" xml:space="preserve">
          <source>Retrieve the mib-file to which an given &lt;code&gt;oid()&lt;/code&gt; belongs.</source>
          <target state="translated">检索给定 &lt;code&gt;oid()&lt;/code&gt; 所属的mib文件。</target>
        </trans-unit>
        <trans-unit id="2ce97c7b119f622a84d3bd15681ec77eab484e0f" translate="yes" xml:space="preserve">
          <source>Retrieve usm user config.</source>
          <target state="translated">检索usm用户配置。</target>
        </trans-unit>
        <trans-unit id="f971d95474a7aaf7ba0a3a08e8e1bb54f6e0db8d" translate="yes" xml:space="preserve">
          <source>Retrieves a list of all known global names.</source>
          <target state="translated">检索所有已知全局名称的列表。</target>
        </trans-unit>
        <trans-unit id="77f059fe18a8998fe23607cd9d9f051918562790" translate="yes" xml:space="preserve">
          <source>Retrieves a list of all values on the current key. The values have types corresponding to the registry types, see &lt;code&gt;&lt;a href=&quot;#value-2&quot;&gt;value/2&lt;/a&gt;&lt;/code&gt;. Calls the Win32 API function &lt;code&gt;EnumRegValuesEx()&lt;/code&gt;.</source>
          <target state="translated">检索当前键上所有值的列表。这些值具有与注册表类型相对应的类型，请参见 &lt;code&gt;&lt;a href=&quot;#value-2&quot;&gt;value/2&lt;/a&gt;&lt;/code&gt; 。调用Win32 API函数 &lt;code&gt;EnumRegValuesEx()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2be5bbae4bd62f61c8d1df623c4813ba30080529" translate="yes" xml:space="preserve">
          <source>Retrieves configuration stored with &lt;code&gt;write_config(Data)&lt;/code&gt;.</source>
          <target state="translated">检索使用 &lt;code&gt;write_config(Data)&lt;/code&gt; 存储的配置。</target>
        </trans-unit>
        <trans-unit id="b59675caaf402ed44ac06666148753ec422a80b1" translate="yes" xml:space="preserve">
          <source>Retrieves information about a connection. The list &lt;code&gt;Keys&lt;/code&gt; defines which information that is returned.</source>
          <target state="translated">检索有关连接的信息。 &lt;code&gt;Keys&lt;/code&gt; 列表定义了返回的信息。</target>
        </trans-unit>
        <trans-unit id="c62fd3c8db94f2ecb5d2fae829a42891b9817f97" translate="yes" xml:space="preserve">
          <source>Retrieves information about a file. Returns &lt;code&gt;{ok, FileInfo}&lt;/code&gt; if successful, otherwise &lt;code&gt;error&lt;/code&gt;. &lt;code&gt;FileInfo&lt;/code&gt; is a record &lt;code&gt;file_info&lt;/code&gt;, defined in the Kernel include file &lt;code&gt;file.hrl&lt;/code&gt;. Include the following directive in the module from which the function is called:</source>
          <target state="translated">检索有关文件的信息。如果成功，则返回 &lt;code&gt;{ok, FileInfo}&lt;/code&gt; ，否则返回 &lt;code&gt;error&lt;/code&gt; 。 &lt;code&gt;FileInfo&lt;/code&gt; 是一个记录 &lt;code&gt;file_info&lt;/code&gt; ，在内核包含文件 &lt;code&gt;file.hrl&lt;/code&gt; 中定义。在调用该函数的模块中包含以下指令：</target>
        </trans-unit>
        <trans-unit id="fe76411933e9e2e81fdcf0338d7957f7bda42a01" translate="yes" xml:space="preserve">
          <source>Retrieves information about a file. Returns &lt;code&gt;{ok, FileInfo}&lt;/code&gt; if successful, otherwise &lt;code&gt;{error, Reason}&lt;/code&gt;. &lt;code&gt;FileInfo&lt;/code&gt; is a record &lt;code&gt;file_info&lt;/code&gt;, defined in the Kernel include file &lt;code&gt;file.hrl&lt;/code&gt;. Include the following directive in the module from which the function is called:</source>
          <target state="translated">检索有关文件的信息。如果成功，则返回 &lt;code&gt;{ok, FileInfo}&lt;/code&gt; ，否则返回 &lt;code&gt;{error, Reason}&lt;/code&gt; 。 &lt;code&gt;FileInfo&lt;/code&gt; 是一个记录 &lt;code&gt;file_info&lt;/code&gt; ，在内核包含文件 &lt;code&gt;file.hrl&lt;/code&gt; 中定义。在调用该函数的模块中包含以下指令：</target>
        </trans-unit>
        <trans-unit id="d2276be2f2c3029568caafee6e887d81c617a51b" translate="yes" xml:space="preserve">
          <source>Retrieves information about the C-node. These values are initially set with &lt;code&gt;erl_connect_init()&lt;/code&gt; or &lt;code&gt;erl_connect_xinit()&lt;/code&gt;.</source>
          <target state="translated">检索有关C节点的信息。这些值最初是使用 &lt;code&gt;erl_connect_init()&lt;/code&gt; 或 &lt;code&gt;erl_connect_xinit()&lt;/code&gt; 设置的。</target>
        </trans-unit>
        <trans-unit id="3ec85b06183feb13e2594732aca3a501dd9750a6" translate="yes" xml:space="preserve">
          <source>Retrieves the binding of &lt;code&gt;Var&lt;/code&gt;. This function is intended to be used by the conditional function of a breakpoint.</source>
          <target state="translated">检索 &lt;code&gt;Var&lt;/code&gt; 的绑定。该功能旨在由断点的条件功能使用。</target>
        </trans-unit>
        <trans-unit id="952c5ae51d3a297be343234997d87d013a82d0b3" translate="yes" xml:space="preserve">
          <source>Retrieves the driver queue as a pointer to an array of &lt;code&gt;SysIOVec&lt;/code&gt;s. It also returns the number of elements in &lt;code&gt;vlen&lt;/code&gt;. This is one of two ways to get data out of the queue.</source>
          <target state="translated">检索驱动程序队列，作为指向 &lt;code&gt;SysIOVec&lt;/code&gt; 数组的指针。它还返回 &lt;code&gt;vlen&lt;/code&gt; 中的元素数。这是从队列中获取数据的两种方法之一。</target>
        </trans-unit>
        <trans-unit id="c07292a4b963b263d1b6cc1646b4c6d5902c86d7" translate="yes" xml:space="preserve">
          <source>Retrieves the driver queue into a supplied &lt;code&gt;ErlIOVec&lt;/code&gt;&lt;code&gt;ev&lt;/code&gt;. It also returns the queue size. This is one of two ways to get data out of the queue.</source>
          <target state="translated">将驱动程序队列检索到提供的 &lt;code&gt;ErlIOVec&lt;/code&gt; &lt;code&gt;ev&lt;/code&gt; 中。它还返回队列大小。这是从队列中获取数据的两种方法之一。</target>
        </trans-unit>
        <trans-unit id="a894c3ff79393666e5c7b22a004ebacc352e97d6" translate="yes" xml:space="preserve">
          <source>Retrieves the named value (or default) on the current key. Registry values of type &lt;code&gt;REG_SZ&lt;/code&gt; are returned as strings. Type &lt;code&gt;REG_DWORD&lt;/code&gt; values are returned as integers. All other types are returned as binaries.</source>
          <target state="translated">检索当前键上的命名值（或默认值）。 &lt;code&gt;REG_SZ&lt;/code&gt; 类型的注册表值作为字符串返回。 &lt;code&gt;REG_DWORD&lt;/code&gt; 类型的值以整数形式返回。所有其他类型都以二进制形式返回。</target>
        </trans-unit>
        <trans-unit id="245670a16c43ecee47979e6d1e5f4fdfc89b0df2" translate="yes" xml:space="preserve">
          <source>Retrieves the names of all files in the tar file &lt;code&gt;Name&lt;/code&gt;.</source>
          <target state="translated">检索tar文件 &lt;code&gt;Name&lt;/code&gt; 中所有文件的名称。</target>
        </trans-unit>
        <trans-unit id="d564b671e170b3431e838ae67d5ab7768b72f2e4" translate="yes" xml:space="preserve">
          <source>Retrieves the number of columns of the &lt;code&gt;IoDevice&lt;/code&gt; (that is, the width of a terminal). The function succeeds for terminal devices and returns &lt;code&gt;{error, enotsup}&lt;/code&gt; for all other I/O devices.</source>
          <target state="translated">检索 &lt;code&gt;IoDevice&lt;/code&gt; 的列数（即终端的宽度）。该函数对于终端设备成功执行 &lt;code&gt;{error, enotsup}&lt;/code&gt; 对于所有其他I / O设备返回{error，enotsup}。</target>
        </trans-unit>
        <trans-unit id="e778e49b2d71c140dcdf03681dbceb1ae0cc20b4" translate="yes" xml:space="preserve">
          <source>Retrieves the number of rows of &lt;code&gt;IoDevice&lt;/code&gt; (that is, the height of a terminal). The function only succeeds for terminal devices, for all other I/O devices the function returns &lt;code&gt;{error, enotsup}&lt;/code&gt;.</source>
          <target state="translated">检索 &lt;code&gt;IoDevice&lt;/code&gt; 的行数（即终端的高度）。该功能仅对终端设备成功，对于所有其他I / O设备，该功能返回 &lt;code&gt;{error, enotsup}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0bb6456edb698b942587d5fb778ec0a6722ce718" translate="yes" xml:space="preserve">
          <source>Retrieves the options currently used by the client.</source>
          <target state="translated">检索客户端当前使用的选项。</target>
        </trans-unit>
        <trans-unit id="76466246f8a47a437b9e1621604ae79ee0d8b373" translate="yes" xml:space="preserve">
          <source>Retrieves the pid of the C-node. Every C-node has a (pseudo) pid used in &lt;code&gt;ei_send_reg&lt;/code&gt;, &lt;code&gt;ei_rpc&lt;/code&gt;, and others. This is contained in a field in the &lt;code&gt;ec&lt;/code&gt; structure. It will be safe for a long time to fetch this field directly from the &lt;code&gt;ei_cnode&lt;/code&gt; structure.</source>
          <target state="translated">检索C节点的pid。每个C节点都有一个 &lt;code&gt;ei_send_reg&lt;/code&gt; ， &lt;code&gt;ei_rpc&lt;/code&gt; 等使用的（伪）pid 。这包含在 &lt;code&gt;ec&lt;/code&gt; 结构的字段中。很长时间直接从 &lt;code&gt;ei_cnode&lt;/code&gt; 结构中获取此字段将是安全的。</target>
        </trans-unit>
        <trans-unit id="aabdb36347cbaff97e37db5db212dc599e8b84b1" translate="yes" xml:space="preserve">
          <source>Retrieves the value of an environment variable.</source>
          <target state="translated">检索环境变量的值。</target>
        </trans-unit>
        <trans-unit id="5a702c3a25b2ca721ccd72b7aec2133da01de553" translate="yes" xml:space="preserve">
          <source>Retrieves the value stored with &lt;code&gt;Key&lt;/code&gt; in &lt;code&gt;Tree&lt;/code&gt;. Assumes that the key is present in the tree, crashes otherwise.</source>
          <target state="translated">检索使用 &lt;code&gt;Key&lt;/code&gt; 存储在 &lt;code&gt;Tree&lt;/code&gt; 中的值。假设密钥在树中存在，否则崩溃。</target>
        </trans-unit>
        <trans-unit id="59fedfa91c0565ade05984a3af8146c0a81048c8" translate="yes" xml:space="preserve">
          <source>Retrieving data from DBMS is usually to be done with the functions &lt;code&gt;&lt;a href=&quot;mnesia#read-3&quot;&gt;mnesia:read/3&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;mnesia#read-2&quot;&gt;mnesia:read/1&lt;/a&gt;&lt;/code&gt;. The following function raises the salary:</source>
          <target state="translated">通常要使用功能 &lt;code&gt;&lt;a href=&quot;mnesia#read-3&quot;&gt;mnesia:read/3&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;mnesia#read-2&quot;&gt;mnesia:read/1&lt;/a&gt;&lt;/code&gt; 从DBMS检索数据。以下功能提高工资：</target>
        </trans-unit>
        <trans-unit id="d886a95270a0b97b770f611dbef1f5da0d79dcec" translate="yes" xml:space="preserve">
          <source>Retrieving/generating the response.</source>
          <target state="translated">检索/生成答复。</target>
        </trans-unit>
        <trans-unit id="cc15ba53eed9cac3cb103f31237c1c8cb9da235a" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;Token&lt;/code&gt; and is last token in a tokens call.</source>
          <target state="translated">返回 &lt;code&gt;Token&lt;/code&gt; 并且是令牌调用中的最后一个令牌。</target>
        </trans-unit>
        <trans-unit id="96fed125f9b4a3ff4eafa9dc4ab9f431753358e2" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;Token&lt;/code&gt; to the caller.</source>
          <target state="translated">将 &lt;code&gt;Token&lt;/code&gt; 返回给调用者。</target>
        </trans-unit>
        <trans-unit id="1a1c978f872f3e9d4cbb152e995b6529af78529a" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;true&lt;/code&gt; if the host name part of the &lt;code&gt;NodeName&lt;/code&gt; is valid for use with this protocol; otherwise, &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;NodeName&lt;/code&gt; 的主机名部分对于该协议有效，则返回 &lt;code&gt;true&lt;/code&gt; ;否则，返回true。否则为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c835ade1ee058ea2528895c15193d9d02d86145e" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;true&lt;/code&gt; if the module has native compiled code. Return &lt;code&gt;false&lt;/code&gt; otherwise. In a system compiled without HiPE support, the result is always &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">如果模块具有本机编译代码，则返回 &lt;code&gt;true&lt;/code&gt; 。否则返回 &lt;code&gt;false&lt;/code&gt; 。在没有HiPE支持的编译系统中，结果始终为 &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="13532ab427d3f5c254e071d7934ca748721f8b88" translate="yes" xml:space="preserve">
          <source>Return a &lt;code&gt;{{Counter, Ref}, non_neg_integer()}&lt;/code&gt; list of counter values. &lt;code&gt;Ref&lt;/code&gt; can be either a &lt;code&gt;&lt;code&gt;&lt;a href=&quot;#transport_ref&quot;&gt;transport_ref()&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; or a &lt;code&gt;&lt;code&gt;diameter_app:peer_ref()&lt;/code&gt;&lt;/code&gt;. Entries for the latter are folded into corresponding entries for the former as peer connections go down. Entries for both are removed at &lt;code&gt;&lt;a href=&quot;#remove_transport-2&quot;&gt;remove_transport/2&lt;/a&gt;&lt;/code&gt;. The Diameter-level statistics returned by &lt;code&gt;transport&lt;/code&gt; and &lt;code&gt;connections&lt;/code&gt; info are based upon these entries.</source>
          <target state="translated">返回 &lt;code&gt;{{Counter, Ref}, non_neg_integer()}&lt;/code&gt; 计数器值列表。 &lt;code&gt;Ref&lt;/code&gt; 可以是 &lt;code&gt;&lt;code&gt;&lt;a href=&quot;#transport_ref&quot;&gt;transport_ref()&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;code&gt;diameter_app:peer_ref()&lt;/code&gt;&lt;/code&gt; 。当对等连接断开时，后者的条目将折叠为前者的相应条目。两者的条目都在 &lt;code&gt;&lt;a href=&quot;#remove_transport-2&quot;&gt;remove_transport/2&lt;/a&gt;&lt;/code&gt; 处删除。 &lt;code&gt;transport&lt;/code&gt; 和 &lt;code&gt;connections&lt;/code&gt; 信息返回的直径级别统计信息基于这些条目。</target>
        </trans-unit>
        <trans-unit id="1bb16078b0f2378184a73700819de4ceef71e2e5" translate="yes" xml:space="preserve">
          <source>Return a capability value as configured with &lt;code&gt;&lt;a href=&quot;#start_service-2&quot;&gt;start_service/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回使用 &lt;code&gt;&lt;a href=&quot;#start_service-2&quot;&gt;start_service/2&lt;/a&gt;&lt;/code&gt; 配置的功能值。</target>
        </trans-unit>
        <trans-unit id="9536f6bbba6fdc1b7d0b454be9dde8f6750a2209" translate="yes" xml:space="preserve">
          <source>Return a list containing one entry for each of the service's transport as configured with &lt;code&gt;&lt;a href=&quot;#add_transport-2&quot;&gt;add_transport/2&lt;/a&gt;&lt;/code&gt;. Each entry is a tagged list containing both configuration and information about established peer connections. An example return value with for a client service with Origin-Host &quot;client.example.com&quot; configured with a single transport connected to &quot;server.example.com&quot; might look as follows.</source>
          <target state="translated">返回一个列表，其中包含使用 &lt;code&gt;&lt;a href=&quot;#add_transport-2&quot;&gt;add_transport/2&lt;/a&gt;&lt;/code&gt; 配置的每个服务传输的一个条目。每个条目都是一个标记列表，其中包含配置和有关已建立对等连接的信息。对于带有原始主机&amp;ldquo; client.example.com&amp;rdquo;且配置了单个传输连接到&amp;ldquo; server.example.com&amp;rdquo;的客户端服务的示例返回值，可能如下所示。</target>
        </trans-unit>
        <trans-unit id="e3714b9f4dba0aac8c1334a0e9085f3405a08f7a" translate="yes" xml:space="preserve">
          <source>Return a list containing one entry for every established transport connection whose watchdog state machine is not in the &lt;code&gt;down&lt;/code&gt; state. This is a flat view of &lt;code&gt;transport&lt;/code&gt; info which lists only active connections and for which Diameter-level statistics are accumulated only for the lifetime of the transport connection. A return value for the server above might look as follows.</source>
          <target state="translated">对于每个其看门狗状态机未处于 &lt;code&gt;down&lt;/code&gt; 状态的已建立传输连接，返回一个包含一个条目的列表。这是 &lt;code&gt;transport&lt;/code&gt; 信息的平面视图，其中仅列出了活动的连接，并且仅在传输连接的生命周期内累积了直径级别的统计信息。上面服务器的返回值可能如下所示。</target>
        </trans-unit>
        <trans-unit id="db261cceb040f1c9828fe3d4c6c1a35462982fe0" translate="yes" xml:space="preserve">
          <source>Return a reasonable value for use as Origin-State-Id in outgoing messages.</source>
          <target state="translated">返回一个合理的值,作为发信的原点-状态-ID。</target>
        </trans-unit>
        <trans-unit id="2b57b27e4df9b1ae0072d43165d38c155eb66de4" translate="yes" xml:space="preserve">
          <source>Return a scheduler utilization sample for all schedulers, including dirty-io schedulers.</source>
          <target state="translated">返回所有调度器的利用率样本,包括dirty-io调度器。</target>
        </trans-unit>
        <trans-unit id="e48ca14d3d26b2f077fe65868bb3fe756cfe0117" translate="yes" xml:space="preserve">
          <source>Return a scheduler utilization sample for normal and dirty-cpu schedulers.</source>
          <target state="translated">返回正常和dirty-cpu调度器的调度器利用率样本。</target>
        </trans-unit>
        <trans-unit id="189e6f742d0287bea7092b8b595dda21405a8676" translate="yes" xml:space="preserve">
          <source>Return a specification of the target system. The actual target system can be created with &lt;code&gt;reltool:eval_target_spec/3&lt;/code&gt;.</source>
          <target state="translated">返回目标系统的规范。可以使用 &lt;code&gt;reltool:eval_target_spec/3&lt;/code&gt; 创建实际的目标系统。</target>
        </trans-unit>
        <trans-unit id="2aa7025ff201afee814f6c2a93ae1bcb0ae4ca05" translate="yes" xml:space="preserve">
          <source>Return a table handle.</source>
          <target state="translated">返回一个表柄。</target>
        </trans-unit>
        <trans-unit id="5f2413dd20c0e576107037d6e42aeba92e71c7df" translate="yes" xml:space="preserve">
          <source>Return a tagged list of all capabilities values as configured with &lt;code&gt;&lt;a href=&quot;#start_service-2&quot;&gt;start_service/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回使用 &lt;code&gt;&lt;a href=&quot;#start_service-2&quot;&gt;start_service/2&lt;/a&gt;&lt;/code&gt; 配置的所有功能值的标记列表。</target>
        </trans-unit>
        <trans-unit id="a8294e0b56eeb80e5eba4768dcc17c3d64870430" translate="yes" xml:space="preserve">
          <source>Return a the identity of the globally registered collector if there is any.</source>
          <target state="translated">如果有的话,返回全球注册的收集器的身份。</target>
        </trans-unit>
        <trans-unit id="9f6b885db67cca106a9b569ccd725228af91846d" translate="yes" xml:space="preserve">
          <source>Return a value for a Session-Id AVP.</source>
          <target state="translated">返回一个Session-Id AVP的值。</target>
        </trans-unit>
        <trans-unit id="ba6a05dfc89724422c5b71e06eeac07f56af24ec" translate="yes" xml:space="preserve">
          <source>Return all records in the mib-storage table in the form of a list.</source>
          <target state="translated">以列表的形式返回mib存储表中的所有记录。</target>
        </trans-unit>
        <trans-unit id="c8a7afda668c35cdafcb1e64da708b8cf8d41b06" translate="yes" xml:space="preserve">
          <source>Return an ordered list of the metavariables in the template.</source>
          <target state="translated">返回模板中元变量的有序列表。</target>
        </trans-unit>
        <trans-unit id="9f4c3667b1add8d5e02e30fe75d8033f0bfc2e96" translate="yes" xml:space="preserve">
          <source>Return comment tokens.</source>
          <target state="translated">返回评论令牌。</target>
        </trans-unit>
        <trans-unit id="785922d0c7990e6a6337740a8132f1efba76556b" translate="yes" xml:space="preserve">
          <source>Return compiler options given via the environment variable &lt;code&gt;ERL_COMPILER_OPTIONS&lt;/code&gt;. If the value is a list, it is returned as is. If it is not a list, it is put into a list.</source>
          <target state="translated">返回通过环境变量 &lt;code&gt;ERL_COMPILER_OPTIONS&lt;/code&gt; 给出的编译器选项。如果该值为列表，则按原样返回。如果不是列表，则将其放入列表中。</target>
        </trans-unit>
        <trans-unit id="4afe5c3542f3f32911baf31fbf610eaf8e8a9d8d" translate="yes" xml:space="preserve">
          <source>Return information about a started service. Requesting info for an unknown service causes &lt;code&gt;undefined&lt;/code&gt; to be returned. Requesting a list of items causes a tagged list to be returned.</source>
          <target state="translated">返回有关已启动服务的信息。请求未知服务的信息会导致返回 &lt;code&gt;undefined&lt;/code&gt; 。请求项目列表会导致返回带标签的列表。</target>
        </trans-unit>
        <trans-unit id="bcd34f9aa0dee036d0db04e93eacf17e6bece459" translate="yes" xml:space="preserve">
          <source>Return node names held by the registrar for the given host.</source>
          <target state="translated">返回给定主机的注册商持有的节点名称。</target>
        </trans-unit>
        <trans-unit id="996ea5173163b123ed6a043649459919ca914183" translate="yes" xml:space="preserve">
          <source>Return only &lt;code&gt;&lt;a href=&quot;time_correction#Strictly_Monotonically_Increasing&quot;&gt;strictly monotonically increasing&lt;/a&gt;&lt;/code&gt; integer corresponding to creation time.</source>
          <target state="translated">仅返回与创建时间相对应的 &lt;code&gt;&lt;a href=&quot;time_correction#Strictly_Monotonically_Increasing&quot;&gt;strictly monotonically increasing&lt;/a&gt;&lt;/code&gt; 整数。</target>
        </trans-unit>
        <trans-unit id="73fec507617851a521471bf50b4848c38830e262" translate="yes" xml:space="preserve">
          <source>Return only positive integers.</source>
          <target state="translated">只返回正整数。</target>
        </trans-unit>
        <trans-unit id="9c2362dda30d47eb99dd0cab5c2b8fa38f869f8c" translate="yes" xml:space="preserve">
          <source>Return results in a &lt;code&gt;{ok, [Out]}&lt;/code&gt; tuple instead of writing to file and returning &lt;code&gt;ok&lt;/code&gt;.</source>
          <target state="translated">返回结果为 &lt;code&gt;{ok, [Out]}&lt;/code&gt; 元组，而不是写入文件并返回 &lt;code&gt;ok&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8e6d34509ab6610cf83be325f59f6c39943cfea5" translate="yes" xml:space="preserve">
          <source>Return the address of the given node. If not implemented, &lt;code&gt;inet:gethostbyname/1&lt;/code&gt; will be used instead</source>
          <target state="translated">返回给定节点的地址。如果未实现，则将使用 &lt;code&gt;inet:gethostbyname/1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="292859966a655edc4054e4f1076d2fed6b650843" translate="yes" xml:space="preserve">
          <source>Return the defining parameters of a elliptic curve.</source>
          <target state="translated">返回椭圆曲线的定义参数。</target>
        </trans-unit>
        <trans-unit id="08d6beff9271fb403fee80042fc6e6442d0f5864" translate="yes" xml:space="preserve">
          <source>Return the distribution port used by the given node.</source>
          <target state="translated">返回给定节点使用的分配端口。</target>
        </trans-unit>
        <trans-unit id="026ca738a4e24775b52601dc015e85dbf9838772" translate="yes" xml:space="preserve">
          <source>Return the list of applications as configured with &lt;code&gt;&lt;a href=&quot;#start_service-2&quot;&gt;start_service/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回使用 &lt;code&gt;&lt;a href=&quot;#start_service-2&quot;&gt;start_service/2&lt;/a&gt;&lt;/code&gt; 配置的应用程序列表。</target>
        </trans-unit>
        <trans-unit id="8760f4dfa12986348ea3b742e129cc7f36b461e8" translate="yes" xml:space="preserve">
          <source>Return the list of body subtrees of a &lt;code&gt;clause&lt;/code&gt; node.</source>
          <target state="translated">返回 &lt;code&gt;clause&lt;/code&gt; 节点的主体子树的列表。</target>
        </trans-unit>
        <trans-unit id="415e4cccd2b2511ca9972eccc4412def66ed17df" translate="yes" xml:space="preserve">
          <source>Return the list of started services.</source>
          <target state="translated">返回已启动服务的列表。</target>
        </trans-unit>
        <trans-unit id="869a332a11dcce537fc74b533f9961fb120feb39" translate="yes" xml:space="preserve">
          <source>Return the number of matching functions that can have call count breakpoints, the same as &lt;code&gt;start/0..3&lt;/code&gt; with the same arguments would have returned.</source>
          <target state="translated">返回可以具有调用计数断点的匹配函数的数量，与具有相同参数的 &lt;code&gt;start/0..3&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="545eef5a0d17878bc6d57549235644bab28f7ff8" translate="yes" xml:space="preserve">
          <source>Return the number of matching functions that has got call count breakpoints.</source>
          <target state="translated">返回有调用次数断点的匹配函数的数量。</target>
        </trans-unit>
        <trans-unit id="6ecb156241944c24df7a613253421fdcbcc3e0d5" translate="yes" xml:space="preserve">
          <source>Return the process identifier of the server process.</source>
          <target state="translated">返回服务器进程的进程标识符。</target>
        </trans-unit>
        <trans-unit id="596033205682a5c5f39f8c045be421baf09bdbad" translate="yes" xml:space="preserve">
          <source>Return transport configuration associated with a single peer, as passed to &lt;code&gt;&lt;a href=&quot;#add_transport-2&quot;&gt;add_transport/2&lt;/a&gt;&lt;/code&gt;. The returned list is empty if the peer is unknown. Otherwise it contains the &lt;code&gt;ref&lt;/code&gt;, &lt;code&gt;type&lt;/code&gt; and &lt;code&gt;options&lt;/code&gt; tuples as in &lt;code&gt;transport&lt;/code&gt; and &lt;code&gt;connections&lt;/code&gt; info above. For example:</source>
          <target state="translated">返回传递给 &lt;code&gt;&lt;a href=&quot;#add_transport-2&quot;&gt;add_transport/2&lt;/a&gt;&lt;/code&gt; 的与单个对等方关联的传输配置。如果对等方未知，则返回的列表为空。否则，它包含 &lt;code&gt;ref&lt;/code&gt; ， &lt;code&gt;type&lt;/code&gt; 和 &lt;code&gt;options&lt;/code&gt; 元组，如上面的 &lt;code&gt;transport&lt;/code&gt; 和 &lt;code&gt;connections&lt;/code&gt; 信息所示。例如：</target>
        </trans-unit>
        <trans-unit id="5b25b7bff97770cbd71aa2bcb0ba6cc19819e76b" translate="yes" xml:space="preserve">
          <source>Return true if &lt;code&gt;term&lt;/code&gt; is an exception.</source>
          <target state="translated">如果 &lt;code&gt;term&lt;/code&gt; 是一个例外，则返回true 。</target>
        </trans-unit>
        <trans-unit id="232f3db04c4faa620bfbfc11fd3689a472ef9881" translate="yes" xml:space="preserve">
          <source>Return value</source>
          <target state="translated">返回值</target>
        </trans-unit>
        <trans-unit id="18d44aa00d4d2f1a0de4ecac8687cabb586ac03d" translate="yes" xml:space="preserve">
          <source>Return value from an &lt;code&gt;ssh_sftp&lt;/code&gt; function.</source>
          <target state="translated">从 &lt;code&gt;ssh_sftp&lt;/code&gt; 函数返回值。</target>
        </trans-unit>
        <trans-unit id="3163d3a67f9c0a3df18a0b32a1848d46a7cae484" translate="yes" xml:space="preserve">
          <source>Return value from the start functions, for example, &lt;code&gt;&lt;a href=&quot;#start_link-3&quot;&gt;start_link/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">启动函数的返回值，例如 &lt;code&gt;&lt;a href=&quot;#start_link-3&quot;&gt;start_link/3&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d184302be65b0501c434c989ce960b469d8ab2e9" translate="yes" xml:space="preserve">
          <source>Return value is &lt;code&gt;0&lt;/code&gt;, unless the &lt;code&gt;timeout&lt;/code&gt; driver function is &lt;code&gt;NULL&lt;/code&gt;, in which case it is &lt;code&gt;-1&lt;/code&gt;.</source>
          <target state="translated">返回值是 &lt;code&gt;0&lt;/code&gt; ，除非 &lt;code&gt;timeout&lt;/code&gt; 驱动程序函数为 &lt;code&gt;NULL&lt;/code&gt; ，在这种情况下为 &lt;code&gt;-1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ff216a94df439e2821ca3664b457f212cf962310" translate="yes" xml:space="preserve">
          <source>Return white space tokens. By convention, a newline character, if present, is always the first character of the text (there cannot be more than one newline in a white space token).</source>
          <target state="translated">返回空白标记。按照惯例,如果存在换行符,则换行符总是文本的第一个字符(一个空白标记中不能有一个以上的换行符)。</target>
        </trans-unit>
        <trans-unit id="0a0f9ea4537c829f189c17c1388dd83d2074333e" translate="yes" xml:space="preserve">
          <source>ReturnFormat) -&amp;gt;</source>
          <target state="translated">ReturnFormat）-&amp;gt;</target>
        </trans-unit>
        <trans-unit id="e8872950120a8fda0116e4eeb516842552c69925" translate="yes" xml:space="preserve">
          <source>Returned by &lt;code&gt;&lt;a href=&quot;#listen-2&quot;&gt;listen/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">由 &lt;code&gt;&lt;a href=&quot;#listen-2&quot;&gt;listen/2&lt;/a&gt;&lt;/code&gt; 返回。</target>
        </trans-unit>
        <trans-unit id="f0b4bbed1147880ab3fa88ace211606ff099dbee" translate="yes" xml:space="preserve">
          <source>Returned by the functions &lt;code&gt;&lt;a href=&quot;ssh#connect-3&quot;&gt;connect/2,3,4&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;ssh_sftp#start_channel-2&quot;&gt;ssh_sftp:start_channel/2,3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">由函数 &lt;code&gt;&lt;a href=&quot;ssh#connect-3&quot;&gt;connect/2,3,4&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;ssh_sftp#start_channel-2&quot;&gt;ssh_sftp:start_channel/2,3&lt;/a&gt;&lt;/code&gt; 返回。</target>
        </trans-unit>
        <trans-unit id="80d9f2993c240cb5395538eac32a770dc645b1f7" translate="yes" xml:space="preserve">
          <source>Returned by the functions &lt;code&gt;&lt;a href=&quot;ssh#daemon-1&quot;&gt;daemon/1,2,3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">由函数 &lt;code&gt;&lt;a href=&quot;ssh#daemon-1&quot;&gt;daemon/1,2,3&lt;/a&gt;&lt;/code&gt; 返回。</target>
        </trans-unit>
        <trans-unit id="b2b499cd87149b2c8112ff4703aabf6b14742dd7" translate="yes" xml:space="preserve">
          <source>Returned by the functions &lt;code&gt;&lt;a href=&quot;ssh_connection#session_channel-2&quot;&gt;ssh_connection:session_channel/2,4&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">由函数 &lt;code&gt;&lt;a href=&quot;ssh_connection#session_channel-2&quot;&gt;ssh_connection:session_channel/2,4&lt;/a&gt;&lt;/code&gt; 返回。</target>
        </trans-unit>
        <trans-unit id="7600c8cb62b3f6c0670cf2d28c10c2d70f454cac" translate="yes" xml:space="preserve">
          <source>Returned if &lt;code&gt;Number&amp;gt;0&lt;/code&gt; and end of file was reached before anything at all could be read.</source>
          <target state="translated">如果在无法读取任何内容之前已到达 &lt;code&gt;Number&amp;gt;0&lt;/code&gt; 并且到达文件末尾，则返回。</target>
        </trans-unit>
        <trans-unit id="ebd6a9b6057141637a7f687d405ddc6223fd3a4d" translate="yes" xml:space="preserve">
          <source>Returned if end of file was reached before anything at all could be read.</source>
          <target state="translated">如果在读取任何内容之前就已经到达文件的终点,则返回。</target>
        </trans-unit>
        <trans-unit id="78f92740b63dec59bb4c6e7e6eaba8a507fff69f" translate="yes" xml:space="preserve">
          <source>Returning &lt;code&gt;{skip,Reason}&lt;/code&gt; from function &lt;code&gt;&lt;a href=&quot;common_test#Module:init_per_testcase-2&quot;&gt;init_per_testcase/2&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;common_test#Module:init_per_suite-1&quot;&gt;init_per_suite/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">从函数 &lt;code&gt;&lt;a href=&quot;common_test#Module:init_per_testcase-2&quot;&gt;init_per_testcase/2&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;common_test#Module:init_per_suite-1&quot;&gt;init_per_suite/1&lt;/a&gt;&lt;/code&gt; 返回 &lt;code&gt;{skip,Reason}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="79fbf73ac7c1fd87f1058ecd2cd1bb43d786dfe6" translate="yes" xml:space="preserve">
          <source>Returning &lt;code&gt;{skip,Reason}&lt;/code&gt; from the execution clause of the test case. The execution clause is called, so the author must ensure that the test case does not run.</source>
          <target state="translated">从测试用例的执行子句返回 &lt;code&gt;{skip,Reason}&lt;/code&gt; 。执行子句被调用，因此作者必须确保测试用例不运行。</target>
        </trans-unit>
        <trans-unit id="78efdce4503fc5152a50adf6376b612d02e50c2c" translate="yes" xml:space="preserve">
          <source>Returning any other value or generating an exception causes the new code to be unloaded. If the return value is not an atom, a warning error report is sent to the error logger.</source>
          <target state="translated">返回任何其他值或产生异常都会导致新代码被卸载。如果返回值不是一个原子,则会向错误记录器发送警告错误报告。</target>
        </trans-unit>
        <trans-unit id="5bafc7cb30a4a28d5f1849e1ed82229cd36e7a85" translate="yes" xml:space="preserve">
          <source>Returning anything but &lt;code&gt;ok&lt;/code&gt; or a 2xxx series result code causes the transport connection to be broken. Multiple &lt;code&gt;&lt;a href=&quot;#capabilities_cb&quot;&gt;capabilities_cb&lt;/a&gt;&lt;/code&gt; options can be specified, in which case the corresponding callbacks are applied until either all return &lt;code&gt;ok&lt;/code&gt; or one does not.</source>
          <target state="translated">返回&amp;ldquo; &lt;code&gt;ok&lt;/code&gt; &amp;rdquo;或2xxx系列结果代码以外的任何内容都会导致传输连接断开。可以指定多个 &lt;code&gt;&lt;a href=&quot;#capabilities_cb&quot;&gt;capabilities_cb&lt;/a&gt;&lt;/code&gt; 选项，在这种情况下，将应用相应的回调，直到全部返回 &lt;code&gt;ok&lt;/code&gt; 或没有返回。</target>
        </trans-unit>
        <trans-unit id="13619914603e5198752b243417d1cec7b1cbae13" translate="yes" xml:space="preserve">
          <source>Returns 0 if &lt;code&gt;cpu_sup&lt;/code&gt; is not available.</source>
          <target state="translated">如果 &lt;code&gt;cpu_sup&lt;/code&gt; 不可用，则返回0 。</target>
        </trans-unit>
        <trans-unit id="2fe7ef4689924328d121fc13015c7e449fbb3af4" translate="yes" xml:space="preserve">
          <source>Returns 0 on success, non-zero on failure.</source>
          <target state="translated">成功时返回0,失败时返回非0。</target>
        </trans-unit>
        <trans-unit id="2fbeaf650327f2e3c58e1b893cae4fb1a66501a9" translate="yes" xml:space="preserve">
          <source>Returns &lt;code id=&quot;read_link_all&quot;&gt;{ok, Filename}&lt;/code&gt; if &lt;code&gt;Name&lt;/code&gt; refers to a symbolic link that is not a raw filename, or &lt;code&gt;{error, Reason}&lt;/code&gt; otherwise. On platforms that do not support symbolic links, the return value is &lt;code&gt;{error,enotsup}&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Name&lt;/code&gt; 引用的符号链接不是原始文件名，则返回 &lt;code id=&quot;read_link_all&quot;&gt;{ok, Filename}&lt;/code&gt; ，否则返回 &lt;code&gt;{error, Reason}&lt;/code&gt; 。在不支持符号链接的平台上，返回值为 &lt;code&gt;{error,enotsup}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c8a13c6c0607ec9a0e9c3c4823a02858da20b803" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;-1&lt;/code&gt; if &lt;code&gt;list&lt;/code&gt; is not a proper list.</source>
          <target state="translated">如果 &lt;code&gt;list&lt;/code&gt; 不是正确的列表，则返回 &lt;code&gt;-1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="488069c3cb5902ddad05d14f6565535c0efbbfa1" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;-1&lt;/code&gt; if the floating point number is not finite.</source>
          <target state="translated">如果浮点数不是有限的，则返回 &lt;code&gt;-1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6e8da0a8ae5c1d6ebbf2999c231c02b4ccea25da" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; and initializes &lt;code&gt;obuf&lt;/code&gt; on success, otherwise &lt;code&gt;-1&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;0&lt;/code&gt; ,并在成功时初始化 &lt;code&gt;obuf&lt;/code&gt; ，否则返回 &lt;code&gt;-1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="072a398ea7b2dc0fc0a565fe904090ff6d623dd0" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; if &lt;code&gt;monitor1&lt;/code&gt; and &lt;code&gt;monitor2&lt;/code&gt; are equal, &amp;lt; &lt;code&gt;0&lt;/code&gt; if &lt;code&gt;monitor1&lt;/code&gt; &amp;lt; &lt;code&gt;monitor2&lt;/code&gt;, and &amp;gt; &lt;code&gt;0&lt;/code&gt; if &lt;code&gt;monitor1&lt;/code&gt; &amp;gt; &lt;code&gt;monitor2&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;0&lt;/code&gt; 如果 &lt;code&gt;monitor1&lt;/code&gt; 和 &lt;code&gt;monitor2&lt;/code&gt; 是相等的，&amp;lt; &lt;code&gt;0&lt;/code&gt; 如果 &lt;code&gt;monitor1&lt;/code&gt; &amp;lt; &lt;code&gt;monitor2&lt;/code&gt; 和&amp;gt; &lt;code&gt;0&lt;/code&gt; 如果 &lt;code&gt;monitor1&lt;/code&gt; &amp;gt; &lt;code&gt;monitor2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f42b6d3dd05f623e6c9a461536fab61de5146090" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; if a monitor was removed and &amp;gt; 0 if the monitor no longer exists.</source>
          <target state="translated">如果删除了监视器，则返回 &lt;code&gt;0&lt;/code&gt; ;如果监视器不存在，则返回&amp;gt; 0。</target>
        </trans-unit>
        <trans-unit id="fbcc999b8ba8bb8fb081510096a443737b55216e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; if successful, otherwise &lt;code&gt;-1&lt;/code&gt;. In the latter case it sets &lt;code&gt;erl_errno&lt;/code&gt; to &lt;code&gt;EIO&lt;/code&gt;.</source>
          <target state="translated">如果成功，则返回 &lt;code&gt;0&lt;/code&gt; ，否则返回 &lt;code&gt;-1&lt;/code&gt; 。在后一种情况下，它将 &lt;code&gt;erl_errno&lt;/code&gt; 设置为 &lt;code&gt;EIO&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dd74052a4956a0a756749720fbbf26847c93e18f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; if the monitor was successfully identified and removed. Returns a non-zero value if the monitor could not be identified, which means it was either</source>
          <target state="translated">如果成功识别并除去了监视器，则返回 &lt;code&gt;0&lt;/code&gt; 。如果无法识别监视器，则返回非零值，这意味着它是</target>
        </trans-unit>
        <trans-unit id="a1cd3df7b26605f1b8a43bc02fca546fec8ce909" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; if the terms are equal, &lt;code&gt;-1&lt;/code&gt; if &lt;code&gt;term1&lt;/code&gt; &amp;lt; &lt;code&gt;term2&lt;/code&gt;, or &lt;code&gt;1&lt;/code&gt; if &lt;code&gt;term2&lt;/code&gt; &amp;lt; &lt;code&gt;term1&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;0&lt;/code&gt; 如果条款是相等的， &lt;code&gt;-1&lt;/code&gt; 如果 &lt;code&gt;term1&lt;/code&gt; &amp;lt; &lt;code&gt;term2&lt;/code&gt; ，或 &lt;code&gt;1&lt;/code&gt; 如果 &lt;code&gt;term2&lt;/code&gt; &amp;lt; &lt;code&gt;term1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="52ee1791e89438cfbb09fe85370e4be0c4174cff" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; if the type cannot be determined or one of:</source>
          <target state="translated">如果无法确定类型，则返回 &lt;code&gt;0&lt;/code&gt; 或以下之一：</target>
        </trans-unit>
        <trans-unit id="50e51ec9b602d8e52f5b56e7dd86a98c570d1875" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; it they are not equal, and a value not equal to &lt;code&gt;0&lt;/code&gt; if they are equal.</source>
          <target state="translated">如果它们不相等，则返回 &lt;code&gt;0&lt;/code&gt; ;如果相等，则返回不等于 &lt;code&gt;0&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="1495d2dcd77d2c277ca09871795adbea294a06a5" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; on success, &amp;lt; 0 if no &lt;code&gt;down&lt;/code&gt; callback is provided, and &amp;gt; 0 if the process is no longer alive.</source>
          <target state="translated">成功返回 &lt;code&gt;0&lt;/code&gt; ；如果未提供 &lt;code&gt;down&lt;/code&gt; 回调，则返回0；如果进程不再存在，则返回0。</target>
        </trans-unit>
        <trans-unit id="147dfcedb6130dcb3e344debc4b54ca54f8b8a66" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; on success, &amp;lt; 0 if no callback is provided, and &amp;gt; 0 if the process is no longer alive.</source>
          <target state="translated">成功返回 &lt;code&gt;0&lt;/code&gt; ，如果没有提供回调，则返回0，如果进程不再存在，则返回0。</target>
        </trans-unit>
        <trans-unit id="2c492d5222c271880cc6dab0353ce6f5682b5289" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; on success, otherwise &lt;code&gt;-1&lt;/code&gt;.</source>
          <target state="translated">成功返回 &lt;code&gt;0&lt;/code&gt; ，否则返回 &lt;code&gt;-1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="99b406373dc8fe6db0449d813a5f79501cb33531" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; on success, otherwise &lt;code&gt;EBUSY&lt;/code&gt;.</source>
          <target state="translated">成功返回 &lt;code&gt;0&lt;/code&gt; ，否则返回 &lt;code&gt;EBUSY&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8c69f20dec618478f3663e41c43a1c6b626d3205" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; on success, otherwise &lt;code&gt;EBUSY&lt;/code&gt;. A thread that currently has read or read/write locked the rwlock &lt;strong&gt;cannot&lt;/strong&gt; try to lock the same rwlock again.</source>
          <target state="translated">成功返回 &lt;code&gt;0&lt;/code&gt; ，否则返回 &lt;code&gt;EBUSY&lt;/code&gt; 。当前具有读或读/写锁定rwlock的线程&lt;strong&gt;无法&lt;/strong&gt;尝试再次锁定同一rwlock。</target>
        </trans-unit>
        <trans-unit id="06b21577fae8bbe6572f27c24fcac58fd4e88891" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; on success, otherwise a value &lt;code&gt;!= 0&lt;/code&gt;.</source>
          <target state="translated">成功返回 &lt;code&gt;0&lt;/code&gt; ，否则返回值 &lt;code&gt;!= 0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7f67995b09d8c03447773e8b6d645bf327b96995" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; on success, otherwise an &lt;code&gt;errno&lt;/code&gt; value is returned to indicate the error.</source>
          <target state="translated">成功返回 &lt;code&gt;0&lt;/code&gt; ，否则返回 &lt;code&gt;errno&lt;/code&gt; 值以指示错误。</target>
        </trans-unit>
        <trans-unit id="17e727f0f7e44e0124cf8250aaf77abcb4d94e4e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; on success, otherwise an &lt;code&gt;errno&lt;/code&gt; value is returned to indicate the error. The driver creating the key is responsible for destroying it before the driver is unloaded.</source>
          <target state="translated">成功返回 &lt;code&gt;0&lt;/code&gt; ，否则返回 &lt;code&gt;errno&lt;/code&gt; 值以指示错误。创建密钥的驱动程序负责在卸载驱动程序之前销毁它。</target>
        </trans-unit>
        <trans-unit id="26800ea3c35a48f48e98accc6b96cb83bd10b328" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; on success, otherwise an &lt;code&gt;errno&lt;/code&gt; value is returned to indicate the error. The newly created thread begins executing in the function pointed to by &lt;code&gt;func&lt;/code&gt;, and &lt;code&gt;func&lt;/code&gt; is passed &lt;code&gt;arg&lt;/code&gt; as argument. When &lt;code&gt;erl_drv_thread_create&lt;/code&gt; returns, the thread identifier of the newly created thread is available in &lt;code&gt;*tid&lt;/code&gt;. &lt;code&gt;opts&lt;/code&gt; can be either a &lt;code&gt;NULL&lt;/code&gt; pointer, or a pointer to an &lt;code&gt;&lt;a href=&quot;#ErlDrvThreadOpts&quot;&gt;ErlDrvThreadOpts&lt;/a&gt;&lt;/code&gt; structure. If &lt;code&gt;opts&lt;/code&gt; is a &lt;code&gt;NULL&lt;/code&gt; pointer, default options are used, otherwise the passed options are used.</source>
          <target state="translated">成功返回 &lt;code&gt;0&lt;/code&gt; ，否则返回 &lt;code&gt;errno&lt;/code&gt; 值以指示错误。新创建的线程开始在 &lt;code&gt;func&lt;/code&gt; 指向的函数中执行，并且 &lt;code&gt;func&lt;/code&gt; 传递给 &lt;code&gt;arg&lt;/code&gt; 作为参数。当 &lt;code&gt;erl_drv_thread_create&lt;/code&gt; 返回时，新创建的线程的线程标识符在 &lt;code&gt;*tid&lt;/code&gt; 中可用。 &lt;code&gt;opts&lt;/code&gt; 可以是 &lt;code&gt;NULL&lt;/code&gt; 指针，也可以是指向 &lt;code&gt;&lt;a href=&quot;#ErlDrvThreadOpts&quot;&gt;ErlDrvThreadOpts&lt;/a&gt;&lt;/code&gt; 结构的指针。如果 &lt;code&gt;opts&lt;/code&gt; 是 &lt;code&gt;NULL&lt;/code&gt; 指针，则使用默认选项，否则使用传递的选项。</target>
        </trans-unit>
        <trans-unit id="e72c8d8be7beff4d9ddb37560e1a80573817b4bd" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; on success. If the call fails, a non-zero value is returned, and the reason for the error can be obtained with the appropriate platform-dependent call.</source>
          <target state="translated">成功返回 &lt;code&gt;0&lt;/code&gt; 。如果调用失败，则返回非零值，并且可以通过适当的依赖于平台的调用来获取错误原因。</target>
        </trans-unit>
        <trans-unit id="3086d983f407d141773c522d0f5defee16a27022" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f11efa5004a5978c0569c8d60ebccedb9d05a28f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;1&lt;/code&gt; if the timeslice is exhausted, otherwise &lt;code&gt;0&lt;/code&gt;. If &lt;code&gt;1&lt;/code&gt; is returned, the NIF is to return as soon as possible in order for the process to yield.</source>
          <target state="translated">如果时间片已用尽，则返回 &lt;code&gt;1&lt;/code&gt; ，否则返回 &lt;code&gt;0&lt;/code&gt; 。如果返回 &lt;code&gt;1&lt;/code&gt; ，则NIF将尽快返回以使过程产生。</target>
        </trans-unit>
        <trans-unit id="a05934f68d914848552efcba4c6a4de46ed6c2d6" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;1&lt;/code&gt; on success, otherwise &lt;code&gt;0&lt;/code&gt;. In the latter case &lt;code&gt;erl_errno&lt;/code&gt; is set to one of:</source>
          <target state="translated">成功返回 &lt;code&gt;1&lt;/code&gt; ，否则返回 &lt;code&gt;0&lt;/code&gt; 。在后一种情况下， &lt;code&gt;erl_errno&lt;/code&gt; 设置为以下之一：</target>
        </trans-unit>
        <trans-unit id="bbce47d721ecf0ed15007cbf5bc4ae1c1f24fa2f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;#family&quot;&gt;family&lt;/a&gt;&lt;/code&gt;&lt;code&gt;Family&lt;/code&gt; such that the index set is equal to the &lt;code&gt;&lt;a href=&quot;#domain&quot;&gt;domain&lt;/a&gt;&lt;/code&gt; of the binary relation &lt;code&gt;BinRel&lt;/code&gt;, and &lt;code&gt;Family&lt;/code&gt;[i] is the &lt;code&gt;&lt;a href=&quot;#image&quot;&gt;image&lt;/a&gt;&lt;/code&gt; of the set of i under &lt;code&gt;BinRel&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;&lt;a href=&quot;#family&quot;&gt;family&lt;/a&gt;&lt;/code&gt; &lt;code&gt;Family&lt;/code&gt; ，以使索引集等于二元关系 &lt;code&gt;BinRel&lt;/code&gt; 的 &lt;code&gt;&lt;a href=&quot;#domain&quot;&gt;domain&lt;/a&gt;&lt;/code&gt; ，并且 &lt;code&gt;Family&lt;/code&gt; [i]是 &lt;code&gt;BinRel&lt;/code&gt; 下i的集合的 &lt;code&gt;&lt;a href=&quot;#image&quot;&gt;image&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c70c55ba98a792957a1ed746bcd3599e74b06f8c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;#family&quot;&gt;family&lt;/a&gt;&lt;/code&gt;&lt;code&gt;Family&lt;/code&gt; where the indexed set is a &lt;code&gt;&lt;a href=&quot;#partition&quot;&gt;partition&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;Set&lt;/code&gt; such that two elements are considered equal if the results of applying &lt;code&gt;SetFun&lt;/code&gt; are the same value i. This i is the index that &lt;code&gt;Family&lt;/code&gt; maps onto the &lt;code&gt;&lt;a href=&quot;#equivalence_class&quot;&gt;equivalence class&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;&lt;a href=&quot;#family&quot;&gt;family&lt;/a&gt;&lt;/code&gt; &lt;code&gt;Family&lt;/code&gt; ，其中索引集是一个 &lt;code&gt;&lt;a href=&quot;#partition&quot;&gt;partition&lt;/a&gt;&lt;/code&gt; 的 &lt;code&gt;Set&lt;/code&gt; 使得两个单元被认为相同，如果申请的结果 &lt;code&gt;SetFun&lt;/code&gt; 是相同的值i。这是 &lt;code&gt;Family&lt;/code&gt; 映射到 &lt;code&gt;&lt;a href=&quot;#equivalence_class&quot;&gt;equivalence class&lt;/a&gt;&lt;/code&gt; 上的索引。</target>
        </trans-unit>
        <trans-unit id="1e039b7fedb94135b8bf441f4e52eb683044770e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt;Erlang monotonic time&lt;/a&gt;&lt;/code&gt;. Notice that negative values are not uncommon.</source>
          <target state="translated">返回 &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt;Erlang monotonic time&lt;/a&gt;&lt;/code&gt; 。请注意，负值并不罕见。</target>
        </trans-unit>
        <trans-unit id="9c959f6d83500aa2c72c79ef3eff1a14895716ac" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;time_correction#Strictly_Monotonically_Increasing&quot;&gt;strictly monotonically increasing&lt;/a&gt;&lt;/code&gt; integers corresponding to creation time. That is, the integer returned is always larger than previously returned integers on the current runtime system instance.</source>
          <target state="translated">返回与创建时间相对应的 &lt;code&gt;&lt;a href=&quot;time_correction#Strictly_Monotonically_Increasing&quot;&gt;strictly monotonically increasing&lt;/a&gt;&lt;/code&gt; 整数。也就是说，返回的整数总是大于当前运行时系统实例上先前返回的整数。</target>
        </trans-unit>
        <trans-unit id="640ef747ead04008a85649e4332a8d5379261b2b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;CpuTopology&lt;/code&gt; used by the emulator. For more information, see argument &lt;code&gt;&lt;a href=&quot;#system_info_cpu_topology&quot;&gt;cpu_topology&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回仿真器使用的 &lt;code&gt;CpuTopology&lt;/code&gt; 。有关更多信息，请参见参数 &lt;code&gt;&lt;a href=&quot;#system_info_cpu_topology&quot;&gt;cpu_topology&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="72f02ca8ebdf85d353fec758b111da577d03f183" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;ERL_DRV_TIME_ERROR&lt;/code&gt; if called with an invalid time unit argument, or if called from a thread that is not a scheduler thread.</source>
          <target state="translated">如果使用无效的时间单位参数调用，或者从不是调度程序线程的线程调用，则返回 &lt;code&gt;ERL_DRV_TIME_ERROR&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a844d69586de15e9bd1cfc35b03711b171962f8c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;ERL_DRV_TIME_ERROR&lt;/code&gt; if called with an invalid time unit argument.</source>
          <target state="translated">如果使用无效的时间单位参数调用，则返回 &lt;code&gt;ERL_DRV_TIME_ERROR&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fbb08c81705b11d4c70e818d320627a5178b1fac" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;ERL_NIF_TIME_ERROR&lt;/code&gt; if called with an invalid time unit argument or if called from a thread that is not a scheduler thread.</source>
          <target state="translated">如果使用无效的时间单位参数调用或从不是调度程序线程的线程调用，则返回 &lt;code&gt;ERL_NIF_TIME_ERROR&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d9785e5a0bee0c018d5494695cfb88ba9e8b07fb" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;ERL_NIF_TIME_ERROR&lt;/code&gt; if called with an invalid time unit argument, or if called from a thread that is not a scheduler thread.</source>
          <target state="translated">如果使用无效的时间单位参数调用，或者从不是调度程序线程的线程调用，则返回 &lt;code&gt;ERL_NIF_TIME_ERROR&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bc80a13223e5723498400925f90cdc9b85a31063" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;ERL_NIF_TIME_ERROR&lt;/code&gt; if called with an invalid time unit argument.</source>
          <target state="translated">如果使用无效的时间单位参数调用，则返回 &lt;code&gt;ERL_NIF_TIME_ERROR&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8c25a7c06a297494f90b2e3a36638938a9b1aac4" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Input&lt;/code&gt;, which is the total number of bytes received through ports, and &lt;code&gt;Output&lt;/code&gt;, which is the total number of bytes output to ports.</source>
          <target state="translated">返回 &lt;code&gt;Input&lt;/code&gt; （通过端口接收的字节总数）和 &lt;code&gt;Output&lt;/code&gt; （返回输出到端口的字节总数）。</target>
        </trans-unit>
        <trans-unit id="2873dd80c13cadf65349a58c98c0a4c2b0396052" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Item&lt;/code&gt; at the front of queue &lt;code&gt;Q&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;Item&lt;/code&gt; 在队列 &lt;code&gt;Q&lt;/code&gt; 的最前面。</target>
        </trans-unit>
        <trans-unit id="879d7819f21618972cba5f60307c902040474ba8" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Item&lt;/code&gt; at the rear of queue &lt;code&gt;Q&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;Item&lt;/code&gt; &lt;code&gt;Q&lt;/code&gt; 在队列Q的后面。</target>
        </trans-unit>
        <trans-unit id="1ce4cb1f794dd5a9fb9ff2644b8f5c049da553f9" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Item&lt;/code&gt; from the head of queue &lt;code&gt;Q&lt;/code&gt;.</source>
          <target state="translated">从队列 &lt;code&gt;Q&lt;/code&gt; 的开头返回 &lt;code&gt;Item&lt;/code&gt; 。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
