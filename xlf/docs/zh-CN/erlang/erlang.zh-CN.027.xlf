<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="erlang">
    <body>
      <group id="erlang">
        <trans-unit id="62f0d1ec017eb5e8861662c261b7cb3f628081a4" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;NULL&lt;/code&gt; if no data has been associated with &lt;code&gt;key&lt;/code&gt; for the calling thread.</source>
          <target state="translated">如果没有数据与调用线程的 &lt;code&gt;key&lt;/code&gt; 关联，则返回 &lt;code&gt;NULL&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2164f7f628c69ad541af62d6b3c7f91b4d3bc8b3" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;NULL&lt;/code&gt; if the allocation fails.</source>
          <target state="translated">如果分配失败，则返回 &lt;code&gt;NULL&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="29cd629f79e40d47e7c05916a38fea6c999256f6" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;NULL&lt;/code&gt; if the reallocation fails.</source>
          <target state="translated">如果重新分配失败，则返回 &lt;code&gt;NULL&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="faa5cf38ebe53c6e47145b0687cb46881e39a0c2" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;NULL&lt;/code&gt; on failure. A thread option structure is used for passing options to &lt;code&gt;&lt;a href=&quot;#erl_drv_thread_create&quot;&gt;erl_drv_thread_create&lt;/a&gt;&lt;/code&gt;. If the structure is not modified before it is passed to &lt;code&gt;&lt;a href=&quot;#erl_drv_thread_create&quot;&gt;erl_drv_thread_create&lt;/a&gt;&lt;/code&gt;, the default values are used.</source>
          <target state="translated">失败时返回 &lt;code&gt;NULL&lt;/code&gt; 。线程选项结构用于将选项传递给 &lt;code&gt;&lt;a href=&quot;#erl_drv_thread_create&quot;&gt;erl_drv_thread_create&lt;/a&gt;&lt;/code&gt; 。如果在传递给 &lt;code&gt;&lt;a href=&quot;#erl_drv_thread_create&quot;&gt;erl_drv_thread_create&lt;/a&gt;&lt;/code&gt; 之前未对其进行修改，则使用默认值。</target>
        </trans-unit>
        <trans-unit id="49be17db74793f1d077ffb7705e384f45c7aefa2" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;NULL&lt;/code&gt; on failure. The driver creating the condition variable is responsible for destroying it before the driver is unloaded.</source>
          <target state="translated">失败时返回 &lt;code&gt;NULL&lt;/code&gt; 。创建条件变量的驱动程序负责在卸载驱动程序之前将其销毁。</target>
        </trans-unit>
        <trans-unit id="937b4794e9be59fe2f147650d05de628193f942d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;NULL&lt;/code&gt; on failure. The driver creating the mutex is responsible for destroying it before the driver is unloaded.</source>
          <target state="translated">失败时返回 &lt;code&gt;NULL&lt;/code&gt; 。创建互斥量的驱动程序负责在卸载驱动程序之前将其销毁。</target>
        </trans-unit>
        <trans-unit id="cec702d09808b85ca08cf2b39664374ef0969b8a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;NULL&lt;/code&gt; on failure. The driver creating the rwlock is responsible for destroying it before the driver is unloaded.</source>
          <target state="translated">失败时返回 &lt;code&gt;NULL&lt;/code&gt; 。创建rwlock的驱动程序负责在卸载驱动程序之前将其销毁。</target>
        </trans-unit>
        <trans-unit id="0626500e7d2a0eb8476d43e16b322a5cb66fadf1" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Ordset1&lt;/code&gt;, but with &lt;code&gt;Element&lt;/code&gt; removed.</source>
          <target state="translated">返回 &lt;code&gt;Ordset1&lt;/code&gt; ，但 &lt;code&gt;Element&lt;/code&gt; 被删除。</target>
        </trans-unit>
        <trans-unit id="fa3daab704cdabcdeda6d9a5162be63ecb8bd104" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Set1&lt;/code&gt;, but with &lt;code&gt;Element&lt;/code&gt; removed.</source>
          <target state="translated">返回 &lt;code&gt;Set1&lt;/code&gt; ，但 &lt;code&gt;Element&lt;/code&gt; 被删除。</target>
        </trans-unit>
        <trans-unit id="3d5dfc72360c637f48245ce548d05dbb42228d3d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; with the length adjusted in accordance with &lt;code&gt;Number&lt;/code&gt;. The left margin is fixed. If &lt;code&gt;length(String)&lt;/code&gt; &amp;lt; &lt;code&gt;Number&lt;/code&gt;, then &lt;code&gt;String&lt;/code&gt; is padded with blanks or &lt;code&gt;Character&lt;/code&gt;s.</source>
          <target state="translated">返回 &lt;code&gt;String&lt;/code&gt; ，其长度根据 &lt;code&gt;Number&lt;/code&gt; 调整。左边距是固定的。如果 &lt;code&gt;length(String)&lt;/code&gt; &amp;lt; &lt;code&gt;Number&lt;/code&gt; ，则用空白或 &lt;code&gt;Character&lt;/code&gt; 填充 &lt;code&gt;String&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ce41b4e7c687c9b19e455cb02a2a0bb9de74a197" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; with the length adjusted in accordance with &lt;code&gt;Number&lt;/code&gt;. The right margin is fixed. If the length of &lt;code&gt;(String)&lt;/code&gt; &amp;lt; &lt;code&gt;Number&lt;/code&gt;, then &lt;code&gt;String&lt;/code&gt; is padded with blanks or &lt;code&gt;Character&lt;/code&gt;s.</source>
          <target state="translated">返回 &lt;code&gt;String&lt;/code&gt; ，其长度根据 &lt;code&gt;Number&lt;/code&gt; 调整。右边距是固定的。如果 &lt;code&gt;(String)&lt;/code&gt; &amp;lt; &lt;code&gt;Number&lt;/code&gt; 的长度，则用空白或 &lt;code&gt;Character&lt;/code&gt; 填充 &lt;code&gt;String&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="620e625e81828403e2d1dfd5f08443ece016162d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;[{&quot;none&quot;,0,0}]&lt;/code&gt; if &lt;code&gt;disksup&lt;/code&gt; is not available.</source>
          <target state="translated">如果 &lt;code&gt;disksup&lt;/code&gt; 不可用 &lt;code&gt;[{&quot;none&quot;,0,0}]&lt;/code&gt; 返回[{&amp;ldquo; none&amp;rdquo;，0,0}]。</target>
        </trans-unit>
        <trans-unit id="058579087c441acaa8228e3c89ba9651ac86ca51" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;driver_term_nil&lt;/code&gt; if the monitor no longer exists.</source>
          <target state="translated">如果监视器不再存在，则返回 &lt;code&gt;driver_term_nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="82f59754288354250ab785cbe85dc81e50088d0f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;error&lt;/code&gt; if any element in &lt;code&gt;Nodes&lt;/code&gt; is not an atom.</source>
          <target state="translated">如果 &lt;code&gt;Nodes&lt;/code&gt; 中的任何元素都不是原子，则返回 &lt;code&gt;error&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bb3dd123747a0645f03c4de32a039d3112fcda94" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;error&lt;/code&gt; if no value is associated with &lt;code&gt;Flag&lt;/code&gt;.</source>
          <target state="translated">如果没有值与 &lt;code&gt;Flag&lt;/code&gt; 关联，则返回 &lt;code&gt;error&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="411d4f907069d8528c128c3cd767fafa24214c79" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;false&lt;/code&gt; if the &lt;code&gt;NameDb&lt;/code&gt; argument is incorrectly specified, &lt;code&gt;true&lt;/code&gt; otherwise.</source>
          <target state="translated">如果 &lt;code&gt;NameDb&lt;/code&gt; 参数指定 &lt;code&gt;false&lt;/code&gt; 则返回false，否则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="072f5038e4f2d01946e213be2a0a78a2897b7cff" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;false&lt;/code&gt; if the &lt;code&gt;NameDb&lt;/code&gt; argument is incorrectly specified, otherwise &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;NameDb&lt;/code&gt; 参数指定错误，则返回 &lt;code&gt;false&lt;/code&gt; ，否则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="91325475ecaa519008968aec896df2ec9c644287" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;false&lt;/code&gt; if the module cannot be purged because of processes lingering in old code, otherwise &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">如果由于进程滞留在旧代码中而无法清除模块，则返回 &lt;code&gt;false&lt;/code&gt; ，否则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="72608d355bf83a757286a51cc71b304044cbb1cb" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;global&lt;/code&gt; if this function is traced on global function calls, &lt;code&gt;local&lt;/code&gt; if this function is traced on local function calls (that is, local and global function calls), and &lt;code&gt;false&lt;/code&gt; if local or global function calls are not traced.</source>
          <target state="translated">如果在全局函数调用上跟踪此函数，则返回 &lt;code&gt;global&lt;/code&gt; 如果在本地函数调用（即本地和全局函数调用）上跟踪此函数，则返回 &lt;code&gt;local&lt;/code&gt; ;如果未跟踪本地或全局函数调用，则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="acf727b4b7b2b7dd3210332a0748e1e36c077768" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;ignored&lt;/code&gt; if the local node is not alive or &lt;code&gt;{error, noconnection}&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; is not connected.</source>
          <target state="translated">返回 &lt;code&gt;ignored&lt;/code&gt; ，如果本地节点是不是活的或 &lt;code&gt;{error, noconnection}&lt;/code&gt; 如果 &lt;code&gt;Node&lt;/code&gt; 未连接。</target>
        </trans-unit>
        <trans-unit id="d5b9602029c3e98b31c57cffac5cb29414dde2b1" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;ignored&lt;/code&gt; if the local node is not alive.</source>
          <target state="translated">如果本地节点不活动，则返回 &lt;code&gt;ignored&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8e0c04b98f10b3ebb5e70388fff74a3bfaad5175" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;max(10, Depth)&lt;/code&gt;, where &lt;code&gt;Depth&lt;/code&gt; is the value of &lt;code&gt;error_logger_format_depth&lt;/code&gt; in the Kernel application, if Depth is an integer. Otherwise, &lt;code&gt;unlimited&lt;/code&gt; is returned.</source>
          <target state="translated">返回 &lt;code&gt;max(10, Depth)&lt;/code&gt; ，其中 &lt;code&gt;Depth&lt;/code&gt; 是的值 &lt;code&gt;error_logger_format_depth&lt;/code&gt; 在内核应用中，如果深度是一个整数。否则，返回 &lt;code&gt;unlimited&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f3c109fb8b64ce60968e8b7ff58555a78a1fe433" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;ok&lt;/code&gt; if all parent directories already exist or can be created. Returns &lt;code&gt;{error, Reason}&lt;/code&gt; if some parent directory does not exist and cannot be created.</source>
          <target state="translated">如果所有父目录已经存在或可以创建，则返回 &lt;code&gt;ok&lt;/code&gt; 。如果某些父目录不存在并且无法创建 &lt;code&gt;{error, Reason}&lt;/code&gt; 则返回{error，Reason}。</target>
        </trans-unit>
        <trans-unit id="11390fb7e74973ff6f501500d8fa6db8eb68f542" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;ok&lt;/code&gt; if successful, or &lt;code&gt;{error,[{Module,Reason}]}&lt;/code&gt; if loading of some modules fails. See &lt;code&gt;&lt;a href=&quot;#error_reasons&quot;&gt;Error Reasons for Code-Loading Functions&lt;/a&gt;&lt;/code&gt; for a description of other possible error reasons.</source>
          <target state="translated">如果成功，则返回 &lt;code&gt;ok&lt;/code&gt; ;如果某些模块的加载失败 &lt;code&gt;{error,[{Module,Reason}]}&lt;/code&gt; 则返回{error，[{Module，Reason}]}}。有关其他可能的错误原因的说明，请参见 &lt;code&gt;&lt;a href=&quot;#error_reasons&quot;&gt;Error Reasons for Code-Loading Functions&lt;/a&gt;&lt;/code&gt; 的错误原因。</target>
        </trans-unit>
        <trans-unit id="d44ac713f339f2a0083e9a260a541b1134a94c59" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;ok&lt;/code&gt; if successful, otherwise &lt;code&gt;error&lt;/code&gt;.</source>
          <target state="translated">如果成功，则返回 &lt;code&gt;ok&lt;/code&gt; ，否则返回 &lt;code&gt;error&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="32f9766784b29a5e37e8836d30a718eb63ae2a0f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;ok&lt;/code&gt; if the flag was set or &lt;code&gt;notsup&lt;/code&gt; if not supported by &lt;code&gt;erts_alloc&lt;/code&gt;.</source>
          <target state="translated">如果设置了标志，则返回 &lt;code&gt;ok&lt;/code&gt; ;如果 &lt;code&gt;notsup&lt;/code&gt; 不支持，则 &lt;code&gt;erts_alloc&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="75bf75fe290be11d905f570a0814178ea4d2d000" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;ok&lt;/code&gt; if the process exits with the specified &lt;code&gt;Reason&lt;/code&gt; within &lt;code&gt;Timeout&lt;/code&gt; milliseconds.</source>
          <target state="translated">如果进程在 &lt;code&gt;Timeout&lt;/code&gt; 毫秒内以指定的 &lt;code&gt;Reason&lt;/code&gt; 退出，则返回 &lt;code&gt;ok&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ca979326517147d39fd013870cef5db5ccbf23e6" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;ok&lt;/code&gt; if this yields the expected result &lt;code&gt;&quot;0&quot;&lt;/code&gt;, and &lt;code&gt;{error, Res}&lt;/code&gt; if it yields anything else.</source>
          <target state="translated">如果产生预期结果 &lt;code&gt;&quot;0&quot;&lt;/code&gt; ，则返回 &lt;code&gt;ok&lt;/code&gt; ;如果产生其他结果，则返回 &lt;code&gt;{error, Res}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3535e0814ac51f436cbf82b934c4af801eaeecf0" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;ok&lt;/code&gt;, cannot fail.</source>
          <target state="translated">返回 &lt;code&gt;ok&lt;/code&gt; ，不能失败。</target>
        </trans-unit>
        <trans-unit id="b8b9aca37d78a208de6e013c3c8fe1e83771709b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;pid&lt;/code&gt; if successful, or NULL if &lt;code&gt;caller_env&lt;/code&gt; is not a &lt;code&gt;&lt;a href=&quot;#ErlNifEnv&quot;&gt;process-bound environment&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">如果成功，则返回 &lt;code&gt;pid&lt;/code&gt; ；如果 &lt;code&gt;caller_env&lt;/code&gt; 不是 &lt;code&gt;&lt;a href=&quot;#ErlNifEnv&quot;&gt;process-bound environment&lt;/a&gt;&lt;/code&gt; ，则返回NULL 。</target>
        </trans-unit>
        <trans-unit id="a5cea673710d8231d230679e5c0b48a879bfc66f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; and can only be used in the &lt;code&gt;MatchBody&lt;/code&gt; part when tracing.</source>
          <target state="translated">返回 &lt;code&gt;true&lt;/code&gt; ，并且只能在跟踪时在 &lt;code&gt;MatchBody&lt;/code&gt; 部分中使用。</target>
        </trans-unit>
        <trans-unit id="fd28532807f9854712426122fdea67f6f39fa632" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; and does not fail, even if there is no link to &lt;code&gt;Id&lt;/code&gt;, or if &lt;code&gt;Id&lt;/code&gt; does not exist.</source>
          <target state="translated">返回 &lt;code&gt;true&lt;/code&gt; 并且不会失败，即使没有指向 &lt;code&gt;Id&lt;/code&gt; 的链接，或者 &lt;code&gt;Id&lt;/code&gt; 不存在。</target>
        </trans-unit>
        <trans-unit id="0199c015b23486318cc33f5d334f072a412af66e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt; are equal, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;A&lt;/code&gt; 和 &lt;code&gt;B&lt;/code&gt; 相等，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="31a71a4065376b65c03d7a563452d06828f0ce55" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;AnySet1&lt;/code&gt; and &lt;code&gt;AnySet2&lt;/code&gt; are &lt;code&gt;&lt;a href=&quot;#equal&quot;&gt;equal&lt;/a&gt;&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;. The following example shows that &lt;code&gt;==/2&lt;/code&gt; is used when comparing sets for equality:</source>
          <target state="translated">返回 &lt;code&gt;true&lt;/code&gt; 如果 &lt;code&gt;AnySet1&lt;/code&gt; 和 &lt;code&gt;AnySet2&lt;/code&gt; 是 &lt;code&gt;&lt;a href=&quot;#equal&quot;&gt;equal&lt;/a&gt;&lt;/code&gt; ，否则 &lt;code&gt;false&lt;/code&gt; 。下面的示例显示在比较相等集时使用 &lt;code&gt;==/2&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="f7c13cafbf154a114cd8e18e86c2479a7766c5f4" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;AnySet&lt;/code&gt; is an &lt;code&gt;&lt;a href=&quot;#sets_definition&quot;&gt;unordered set&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;AnySet&lt;/code&gt; is an ordered set or an atomic set.</source>
          <target state="translated">返回 &lt;code&gt;true&lt;/code&gt; 如果 &lt;code&gt;AnySet&lt;/code&gt; 是一个 &lt;code&gt;&lt;a href=&quot;#sets_definition&quot;&gt;unordered set&lt;/a&gt;&lt;/code&gt; ，和 &lt;code&gt;false&lt;/code&gt; 如果 &lt;code&gt;AnySet&lt;/code&gt; 是一组有序的或原子集合。</target>
        </trans-unit>
        <trans-unit id="c531d7828c911eaf7597a08a2ea9fe2b6920a54c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;AnySet&lt;/code&gt; is an empty unordered set, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;AnySet&lt;/code&gt; 是空的无序集，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c4b20556edc02b693b640edef2c080bacd5d28ea" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Atom&lt;/code&gt; is an Erlang reserved word, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Atom&lt;/code&gt; 是Erlang保留字，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e5d882337dcacf6050915c28214ff928dedff27a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Elem&lt;/code&gt; matches some element of &lt;code&gt;List&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Elem&lt;/code&gt; 匹配 &lt;code&gt;List&lt;/code&gt; 的某个元素，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="05a0bf83d3d51d8a51346e06bcffd56efb44f532" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Element&lt;/code&gt; is an element of &lt;code&gt;Ordset&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Element&lt;/code&gt; 是 &lt;code&gt;Ordset&lt;/code&gt; 的元素，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6f62d1bd963940a044129776b1de7a6cb03db807" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Element&lt;/code&gt; is an element of &lt;code&gt;Set&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Element&lt;/code&gt; 是 &lt;code&gt;Set&lt;/code&gt; 的元素，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="49eb2e1e78ba44e11808d477fd320925bde30b56" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Item&lt;/code&gt; matches some element in &lt;code&gt;Q&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Item&lt;/code&gt; 与 &lt;code&gt;Q&lt;/code&gt; 中的某个元素匹配，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2490eee05bb1747593809039921dbb1ff5571381" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Key&lt;/code&gt; is present in &lt;code&gt;Tree&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Key&lt;/code&gt; 在 &lt;code&gt;Tree&lt;/code&gt; 中存在，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0269f592e0e264b92e27acb721301f85f3d5bd6c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;List1&lt;/code&gt; is a prefix of &lt;code&gt;List2&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;List1&lt;/code&gt; 是 &lt;code&gt;List2&lt;/code&gt; 的前缀，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="44415b525cca5a6af1bc0f75d653cf3f997e5412" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;List1&lt;/code&gt; is a suffix of &lt;code&gt;List2&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;List1&lt;/code&gt; 是 &lt;code&gt;List2&lt;/code&gt; 的后缀，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="274e96a48c8dc11ecbc3618f58ebc91d53af29b2" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;List&lt;/code&gt; contains at least one entry associated with &lt;code&gt;Key&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;List&lt;/code&gt; 至少包含一个与 &lt;code&gt;Key&lt;/code&gt; 关联的条目，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fbdd9ea590e66f4825bbb6f37e96461687bc0475" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Module:Function/Arity&lt;/code&gt; is a BIF implemented in C, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Module:Function/Arity&lt;/code&gt; 是用C实现的BIF，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5e4b500b276e6febede603467275762adf9c0c5b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Module&lt;/code&gt; has old code, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Module&lt;/code&gt; 具有旧代码，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e68f0cec59ffbda9b9db2dbb06457ab5986ed71b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Module&lt;/code&gt; is the name of a module that has been loaded from a sticky directory (in other words: an attempt to reload the module will fail), or &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;Module&lt;/code&gt; is not a loaded module or is not sticky.</source>
          <target state="translated">返回 &lt;code&gt;true&lt;/code&gt; ，如果 &lt;code&gt;Module&lt;/code&gt; 是已经发粘目录加载的模块（换句话说：尝试重新加载模块将失败）的名称，或 &lt;code&gt;false&lt;/code&gt; 如果 &lt;code&gt;Module&lt;/code&gt; 是不是一个已加载模块或不黏腻。</target>
        </trans-unit>
        <trans-unit id="2e1c4acf2c3a75e93880e515b45e3ccdd37267e9" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Name/Arity&lt;/code&gt; is a valid Erlang type test, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Name/Arity&lt;/code&gt; 是有效的Erlang类型测试，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6e79fde7628e396f632cf7a2496c37e0282b9fdf" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Name/Arity&lt;/code&gt; is an Erlang BIF that is allowed in guards, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Name/Arity&lt;/code&gt; 是防护中允许的Erlang BIF，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2c1557eadc19aef1c2524258565aaf72d3e7adf2" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Name/Arity&lt;/code&gt; is an Erlang BIF that is automatically recognized by the compiler, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Name/Arity&lt;/code&gt; 是编译器自动识别的Erlang BIF，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="18919ef150ff00727ad40b1c9e81770ff043ec71" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Name&lt;/code&gt; refers to a (regular) file, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Name&lt;/code&gt; 引用（常规）文件，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f1d8671c2f15e91b5bd72d3336d5d62b6ceb657a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Name&lt;/code&gt; refers to a directory, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Name&lt;/code&gt; 指向目录，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fd8dc058a5de3c084b597a813b54e3549eb45d27" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Name&lt;/code&gt; refers to a file or a directory, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Name&lt;/code&gt; 指向文件或目录，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b18353d9107e0454a0798a1253e3fd2fccc6cdc7" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; has type &lt;code&gt;atom&lt;/code&gt; and represents &lt;code&gt;Value&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Node&lt;/code&gt; 的类型为 &lt;code&gt;atom&lt;/code&gt; 并表示 &lt;code&gt;Value&lt;/code&gt; ，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a150bea19f721c84edfd13b51fb7dbf54b8d17f5" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; has type &lt;code&gt;char&lt;/code&gt; and represents &lt;code&gt;Value&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Node&lt;/code&gt; 的类型为 &lt;code&gt;char&lt;/code&gt; 并表示 &lt;code&gt;Value&lt;/code&gt; ，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5a966e6122cf427828c132b53659f80ec8c8fa1d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; has type &lt;code&gt;integer&lt;/code&gt; and represents &lt;code&gt;Value&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Node&lt;/code&gt; 的类型为 &lt;code&gt;integer&lt;/code&gt; 并表示 &lt;code&gt;Value&lt;/code&gt; ，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b0aba6b4005ff8608dfcfced8eb3d218ccf1f9b9" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; has type &lt;code&gt;list&lt;/code&gt; or &lt;code&gt;nil&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Node&lt;/code&gt; 的类型为 &lt;code&gt;list&lt;/code&gt; 或 &lt;code&gt;nil&lt;/code&gt; ，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7b5b7201556ee3bd343008c5b1eda7663cc16973" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; has type &lt;code&gt;string&lt;/code&gt; and represents &lt;code&gt;Value&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Node&lt;/code&gt; 具有 &lt;code&gt;string&lt;/code&gt; 类型并表示 &lt;code&gt;Value&lt;/code&gt; ，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8e859c070b6e0737943f32ccc3c904c13ffc4b3f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; is a leaf node, otherwise &lt;code&gt;false&lt;/code&gt;. The currently recognised leaf node types are:</source>
          <target state="translated">如果 &lt;code&gt;Node&lt;/code&gt; 是叶节点，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。当前识别的叶节点类型为：</target>
        </trans-unit>
        <trans-unit id="62601fd5548cdaeb0b7711f3bd66399330201fec" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; is a syntax tree representing a so-called &quot;source code form&quot;, otherwise &lt;code&gt;false&lt;/code&gt;. Forms are the Erlang source code units which, placed in sequence, constitute an Erlang program. Current form types are:</source>
          <target state="translated">如果 &lt;code&gt;Node&lt;/code&gt; 是代表所谓&amp;ldquo;源代码形式&amp;rdquo;的语法树，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。表单是Erlang源代码单元，它们按顺序排列构成一个Erlang程序。当前的表单类型为：</target>
        </trans-unit>
        <trans-unit id="ccef43656005918320a2c2bdb3afafde49f0b615" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; represents a literal term, otherwise &lt;code&gt;false&lt;/code&gt;. This function returns &lt;code&gt;true&lt;/code&gt; if and only if the value of &lt;code&gt;concrete(Node)&lt;/code&gt; is defined.</source>
          <target state="translated">如果 &lt;code&gt;Node&lt;/code&gt; 表示文字术语，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。仅当定义 &lt;code&gt;concrete(Node)&lt;/code&gt; 的值时，此函数才返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="16020ba0f84e6b2f3146706260e1679aa1989e35" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; represents a proper list, and &lt;code&gt;false&lt;/code&gt; otherwise. A proper list is a list skeleton either on the form &quot;&lt;code&gt;[]&lt;/code&gt;&quot; or &quot;&lt;code&gt;[E1, ..., En]&lt;/code&gt;&quot;, or &quot;&lt;code&gt;[... | Tail]&lt;/code&gt;&quot; where recursively &lt;code&gt;Tail&lt;/code&gt; also represents a proper list.</source>
          <target state="translated">如果 &lt;code&gt;Node&lt;/code&gt; 代表正确的列表，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。适当的列表是形式为 &lt;code&gt;[]&lt;/code&gt; 或&amp;ldquo; &lt;code&gt;[E1, ..., En]&lt;/code&gt; &amp;rdquo;或&amp;ldquo; &lt;code&gt;[... | Tail]&lt;/code&gt; &amp;rdquo; 的列表框架，其中 &lt;code&gt;Tail&lt;/code&gt; 递归表示适当的列表。</target>
        </trans-unit>
        <trans-unit id="813ec7bf5e1ea4c4cbf9689c754ef9fb026de9a2" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;OpName/Arity&lt;/code&gt; is a Boolean operator, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;OpName/Arity&lt;/code&gt; 是布尔运算符，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4eb0386e76cf65a063e3e8d285268c0165b61346" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;OpName/Arity&lt;/code&gt; is a comparison operator, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;OpName/Arity&lt;/code&gt; 是比较运算符，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="991c1799518adaccb921961e365ca3fa22ac0cb6" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;OpName/Arity&lt;/code&gt; is a list operator, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;OpName/Arity&lt;/code&gt; 是列表运算符，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="63c0c3e2061e7bb43b47c847bd990a26fe034148" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;OpName/Arity&lt;/code&gt; is a send operator, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;OpName/Arity&lt;/code&gt; 是发送运算符，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2dbc3ea01490ef0d1dbec42e97269e840eed8e64" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;OpName/Arity&lt;/code&gt; is an arithmetic operator, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;OpName/Arity&lt;/code&gt; 是算术运算符，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e4b12468404538c448a64e6fe397923d74719fba" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Orddict&lt;/code&gt; has no elements, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Orddict&lt;/code&gt; 没有元素，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b1dc4dfaf731f66f94133c8678a1fa5ab9233d86" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Ordset1&lt;/code&gt; and &lt;code&gt;Ordset2&lt;/code&gt; are disjoint (have no elements in common), otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Ordset1&lt;/code&gt; 和 &lt;code&gt;Ordset2&lt;/code&gt; 不相交（没有共同的元素），则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cea7e1cb6c0e0668014d3a7aec4c690ebb182212" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Ordset&lt;/code&gt; is an empty set, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Ordset&lt;/code&gt; 为空集，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="edfdfbcd8d4ad83a7c9adb281b2a5e52d8bfa2cb" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Ordset&lt;/code&gt; is an ordered set of elements, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Ordset&lt;/code&gt; 是元素的有序集合，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2f6c07fa182c2c36ca7ff087b3a9656c11b0d07f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Pred(Elem)&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; for all elements &lt;code&gt;Elem&lt;/code&gt; in &lt;code&gt;List&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;true&lt;/code&gt; 如果 &lt;code&gt;Pred(Elem)&lt;/code&gt; 返回 &lt;code&gt;true&lt;/code&gt; 所有元素 &lt;code&gt;Elem&lt;/code&gt; 在 &lt;code&gt;List&lt;/code&gt; ，否则 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a2591bc8ff6e6910ee0e7902593fcc8825fb308d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Pred(Elem)&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; for at least one element &lt;code&gt;Elem&lt;/code&gt; in &lt;code&gt;List&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;true&lt;/code&gt; 如果 &lt;code&gt;Pred(Elem)&lt;/code&gt; 返回 &lt;code&gt;true&lt;/code&gt; 至少一个元素 &lt;code&gt;Elem&lt;/code&gt; 的 &lt;code&gt;List&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="76cbb5d0751cdfd9389e6cc4fe05c163ad0c960c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Set1&lt;/code&gt; and &lt;code&gt;Set2&lt;/code&gt; are &lt;code&gt;&lt;a href=&quot;#disjoint&quot;&gt;disjoint&lt;/a&gt;&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;true&lt;/code&gt; 如果 &lt;code&gt;Set1&lt;/code&gt; 和 &lt;code&gt;Set2&lt;/code&gt; 是 &lt;code&gt;&lt;a href=&quot;#disjoint&quot;&gt;disjoint&lt;/a&gt;&lt;/code&gt; ，否则 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e25745d5f902181635eea33218893a7e8f99b775" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Set1&lt;/code&gt; and &lt;code&gt;Set2&lt;/code&gt; are disjoint (have no elements in common), otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Set1&lt;/code&gt; 和 &lt;code&gt;Set2&lt;/code&gt; 不相交（没有共同的元素），则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="80ddd66b34cce3545670a29d307e9b78c7ba414d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Set1&lt;/code&gt; is a &lt;code&gt;&lt;a href=&quot;#subset&quot;&gt;subset&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;Set2&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Set1&lt;/code&gt; 是 &lt;code&gt;Set2&lt;/code&gt; 的 &lt;code&gt;&lt;a href=&quot;#subset&quot;&gt;subset&lt;/a&gt;&lt;/code&gt; ，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4161ad452749f1ed2764feed8799baa093f1bc14" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Set&lt;/code&gt; is a set of elements, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Set&lt;/code&gt; 是一组元素，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="458d23732d1b448b62fb2a72d14403bff3b55ef1" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Set&lt;/code&gt; is an empty set, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Set&lt;/code&gt; 是一个空集，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="73caeabfdd35df13f66b8f8433322360f8264781" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;String&lt;/code&gt; is the empty string, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;String&lt;/code&gt; 为空字符串，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="870fe484de2df9369f88a74af9ebdfa238a09693" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; appears to be a set, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Term&lt;/code&gt; 似乎是一个集合，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7ccab54c56fc03113058080ceda7d7b1774fc75b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is a binary, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Term&lt;/code&gt; 为二进制，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f6f12e79c993d65cc7248ecb7d272941d8d3db76" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is a bitstring (including a binary), otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Term&lt;/code&gt; 是一个位串（包括二进制），则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="71f8a14b5e660fba6fcf5efb5272c3c8436c064b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is a flat list of characters in the ISO Latin-1 range, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Term&lt;/code&gt; 是ISO Latin-1范围内的平面字符列表，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2ca026227756f8b3e8dd2de89221b5bc870e4b13" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is a flat list of characters in the Unicode range, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Term&lt;/code&gt; 是Unicode范围内的平面字符列表，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="166e179f28326a54ab986cbdb166b8750c097a48" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is a flat list of printable ISO Latin-1 characters, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Term&lt;/code&gt; 是可打印的ISO Latin-1字符的平面列表，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e1b72babeabff7431f18a383168fce158f453a7e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is a flat list of printable Unicode characters, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Term&lt;/code&gt; 是可打印Unicode字符的平面列表，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e4dbed6478594002efdbb17422ee583cc58c8c15" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is a flat list of printable characters, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Term&lt;/code&gt; 是可打印字符的平面列表，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4d0efef9a81207545305c2743dfd78ea3cde1691" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is a floating point number, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Term&lt;/code&gt; 是一个浮点数，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="460d08d90b734bb113aa491d231ca853ec4e6cd8" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is a fun that can be applied with &lt;code&gt;Arity&lt;/code&gt; number of arguments, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Term&lt;/code&gt; 很有趣，可以与 &lt;code&gt;Arity&lt;/code&gt; 参数一起应用，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8bc8d2c9ee603ea50a3fb459cc3153a7b4c1b105" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is a fun, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Term&lt;/code&gt; 很有趣，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="624b732c7887f25f1908e5d7cb04e5e46e05f024" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is a list with zero or more elements, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Term&lt;/code&gt; 是具有零个或多个元素的列表，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b6a18c7f4f99e813224877b5510bbf2512ff6467" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is a map, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Term&lt;/code&gt; 是一个映射，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="58a56bacb65ece5dd3d2a353ff5392010207364f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is a port identifier, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Term&lt;/code&gt; 是端口标识符，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0d840f0f19e5e7781ef91711e0bc1137ba6d969e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is a process identifier, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Term&lt;/code&gt; 是一个进程标识符，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="61821daf2eeba88c1903b78ec550afb6af88f97e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is a reference, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Term&lt;/code&gt; 是引用，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e45d92ebd6509795348bf496ed516c5d2b67e321" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is a tuple and its first element is &lt;code&gt;RecordTag&lt;/code&gt;. Otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Term&lt;/code&gt; 是一个元组并且其第一个元素是 &lt;code&gt;RecordTag&lt;/code&gt; ,则返回 &lt;code&gt;true&lt;/code&gt; 。否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7982bf019f3d888e6e415a9ca2298c9d12fe49ae" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is a tuple, its first element is &lt;code&gt;RecordTag&lt;/code&gt;, and its size is &lt;code&gt;Size&lt;/code&gt;. Otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Term&lt;/code&gt; 是一个元组，其第一个元素是 &lt;code&gt;RecordTag&lt;/code&gt; ，其大小是 &lt;code&gt;Size&lt;/code&gt; ，则返回 &lt;code&gt;true&lt;/code&gt; 。否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f80bece3fdbdf4d9b690fc3b52f108c7e7249507" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is a tuple, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Term&lt;/code&gt; 是一个元组，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="378645cb37a4403cbb8f41f06ac1aa7dd5710436" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is a, possibly deep, list of characters in the ISO Latin-1 range, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Term&lt;/code&gt; 是ISO Latin-1范围内的字符列表（可能很深），则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d3b0204ab86829cd8cef0d00c942dc56ac2979fe" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is a, possibly deep, list of characters in the Unicode range, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Term&lt;/code&gt; 是Unicode范围内的字符列表（可能很深），则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f40d776a0ad126eb763fa99db8f2b5ee0722ddb4" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is an &lt;code&gt;&lt;a href=&quot;#sets_definition&quot;&gt;unordered set&lt;/a&gt;&lt;/code&gt;, an ordered set, or an atomic set, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Term&lt;/code&gt; 是 &lt;code&gt;&lt;a href=&quot;#sets_definition&quot;&gt;unordered set&lt;/a&gt;&lt;/code&gt; ，有序集或原子集，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2db77f4bd2a314e48786d9b9ae6a664c784b2c5b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is an atom, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Term&lt;/code&gt; 是一个原子，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="330102aa4e44e69d3fb91410fe11ffc636f4b0ce" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is an integer or a floating point number. Otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Term&lt;/code&gt; 是整数或浮点数，则返回 &lt;code&gt;true&lt;/code&gt; 。否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="33ebcad4307cd245114a5a0cb4612f83a929a00e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is an integer, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Term&lt;/code&gt; 是一个整数，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6299d291293abd2a3887c9bc8071223e7ac78b69" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is the atom &lt;code&gt;true&lt;/code&gt; or the atom &lt;code&gt;false&lt;/code&gt; (that is, a boolean). Otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Term&lt;/code&gt; 是 &lt;code&gt;true&lt;/code&gt; 原子或 &lt;code&gt;false&lt;/code&gt; （即布尔值）原子，则返回 &lt;code&gt;true&lt;/code&gt; 。否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9ff32e0745b2e55908fc88e8b35ae7730f647ea1" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Tree&lt;/code&gt; is an empty tree, othwewise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Tree&lt;/code&gt; 是一个空树，则返回 &lt;code&gt;true&lt;/code&gt; ,否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="582706139b22f3830293ba9d5e787d1b05d9f421" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Tree&lt;/code&gt; represents an expression which never terminates normally. Note that the reverse does not apply. Currently, the detected cases are calls to &lt;code&gt;exit/1&lt;/code&gt;, &lt;code&gt;throw/1&lt;/code&gt;, &lt;code&gt;erlang:error/1&lt;/code&gt; and &lt;code&gt;erlang:error/2&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Tree&lt;/code&gt; 表示一个永远不会正常终止的表达式，则返回 &lt;code&gt;true&lt;/code&gt; 。请注意，相反情况并不适用。当前，检测到的案例是对 &lt;code&gt;exit/1&lt;/code&gt; ， &lt;code&gt;throw/1&lt;/code&gt; ， &lt;code&gt;erlang:error/1&lt;/code&gt; 和 &lt;code&gt;erlang:error/2&lt;/code&gt; 的调用。</target>
        </trans-unit>
        <trans-unit id="1d53d1595203465ec915723aeaeca5596c48e76d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;X&lt;/code&gt; is an array, otherwise &lt;code&gt;false&lt;/code&gt;. Notice that the check is only shallow, as there is no guarantee that &lt;code&gt;X&lt;/code&gt; is a well-formed array representation even if this function returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;X&lt;/code&gt; 是一个数组，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。注意，检查只是很浅的，因为即使此函数返回 &lt;code&gt;true&lt;/code&gt; ，也不能保证 &lt;code&gt;X&lt;/code&gt; 是格式正确的数组表示形式。</target>
        </trans-unit>
        <trans-unit id="d2ba1932cb24599dc5fa6e202010f78edff673b2" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;pid&lt;/code&gt; is alive.</source>
          <target state="translated">如果 &lt;code&gt;pid&lt;/code&gt; 处于活动状态，则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fb3ba34f9680887d2fb9885a93f7d3c98c573dda" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;port_id&lt;/code&gt; is alive.</source>
          <target state="translated">如果 &lt;code&gt;port_id&lt;/code&gt; 处于活动状态，则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="61d3ace632d05ed73ad4a42d28fbbd2d2ed84d93" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is a binary.</source>
          <target state="translated">如果 &lt;code&gt;term&lt;/code&gt; 是二进制，则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fb6f0ca756af464bfed60d9ea0e73f6ba439b2fb" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is a fun.</source>
          <target state="translated">如果 &lt;code&gt;term&lt;/code&gt; 很有趣，则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="110bd689603bccb5575388b7f2f7e7b72dbeaffe" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is a list.</source>
          <target state="translated">如果 &lt;code&gt;term&lt;/code&gt; 是一个列表，则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b4b9ce64cf4b500f5ae3421fd8163a33865e3b09" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is a map, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;term&lt;/code&gt; 是一个映射，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="27afbc551805caeef26432621deb6bf12a23a8eb" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is a number.</source>
          <target state="translated">如果 &lt;code&gt;term&lt;/code&gt; 是一个数字，则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7d22d2e04aeeb0900ff3cbee0d374a923dd0e9c3" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is a pid.</source>
          <target state="translated">如果 &lt;code&gt;term&lt;/code&gt; 是pid，则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="35fa782898e9bfb2eae51e772132161d50f5593b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is a port.</source>
          <target state="translated">如果 &lt;code&gt;term&lt;/code&gt; 是端口，则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5f3f570a390f6517b5496369c3cd66e8538f2abf" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is a reference.</source>
          <target state="translated">如果 &lt;code&gt;term&lt;/code&gt; 是参考，则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="89e1065811333de07f051b50cff74f2cff229c56" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is a tuple.</source>
          <target state="translated">如果 &lt;code&gt;term&lt;/code&gt; 是一个元组，则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="43debbc7898967bba2316715006356cf5b97319f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is an atom.</source>
          <target state="translated">如果 &lt;code&gt;term&lt;/code&gt; 是一个原子，则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="447706c6e0c233491c6e5b8f408ebf59983b993d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is an empty list.</source>
          <target state="translated">如果 &lt;code&gt;term&lt;/code&gt; 是一个空列表，则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6fd2b75b0a5f1908a29c72bd8be73c57944fe81c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if Term is a collection of annotations, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果Term是注释的集合，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f524f7a3284bec6bbe8ac59c2cbfa42df9bbafd8" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if a pending exception is associated with the environment &lt;code&gt;env&lt;/code&gt;. If &lt;code&gt;reason&lt;/code&gt; is a &lt;code&gt;NULL&lt;/code&gt; pointer, ignore it. Otherwise, if a pending exception associated with &lt;code&gt;env&lt;/code&gt; exists, set &lt;code&gt;*reason&lt;/code&gt; to the value of the exception term. For example, if &lt;code&gt;&lt;a href=&quot;#enif_make_badarg&quot;&gt;enif_make_badarg&lt;/a&gt;&lt;/code&gt; is called to set a pending &lt;code&gt;badarg&lt;/code&gt; exception, a later call to &lt;code&gt;enif_has_pending_exception(env, &amp;amp;reason)&lt;/code&gt; sets &lt;code&gt;*reason&lt;/code&gt; to the atom &lt;code&gt;badarg&lt;/code&gt;, then return &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">如果未决异常与环境 &lt;code&gt;env&lt;/code&gt; 相关联，则返回 &lt;code&gt;true&lt;/code&gt; 。如果 &lt;code&gt;reason&lt;/code&gt; 是 &lt;code&gt;NULL&lt;/code&gt; 指针，请忽略它。否则，如果存在与 &lt;code&gt;env&lt;/code&gt; 关联的未决异常，请将 &lt;code&gt;*reason&lt;/code&gt; 设置为异常项的值。例如，如果 &lt;code&gt;&lt;a href=&quot;#enif_make_badarg&quot;&gt;enif_make_badarg&lt;/a&gt;&lt;/code&gt; 设置未决的 &lt;code&gt;badarg&lt;/code&gt; 异常，则以后对 &lt;code&gt;enif_has_pending_exception(env, &amp;amp;reason)&lt;/code&gt; 调用将 &lt;code&gt;*reason&lt;/code&gt; 设置为原子 &lt;code&gt;badarg&lt;/code&gt; ，然后返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4adb2af57a423f657c16c1e5e3386789a64ac4b8" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if a sequential trace token is set for the current process, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果为当前进程设置了顺序跟踪令牌，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="003c73ad83bc1b53c3e9127937f465b37c0db152" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if all its arguments (variable length argument list) evaluate to &lt;code&gt;true&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;. Evaluation order is undefined.</source>
          <target state="translated">返回 &lt;code&gt;true&lt;/code&gt; ，如果其所有参数（可变长度参数列表）评估为 &lt;code&gt;true&lt;/code&gt; ，否则 &lt;code&gt;false&lt;/code&gt; 。评估顺序未定义。</target>
        </trans-unit>
        <trans-unit id="91f2376f93431f54ea182d78fdcf0fd4438c5264" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if an object with key &lt;code&gt;Key&lt;/code&gt; is found, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果找到具有键 &lt;code&gt;Key&lt;/code&gt; 的对象，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="54396b5eb9e13a102688e0da4fdc674f93d3c4f4" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if and only if digraph &lt;code&gt;Digraph&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;#acyclic_digraph&quot;&gt;acyclic&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">当且仅当digraph &lt;code&gt;Digraph&lt;/code&gt; 是非 &lt;code&gt;&lt;a href=&quot;#acyclic_digraph&quot;&gt;acyclic&lt;/a&gt;&lt;/code&gt; 返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="200e8de3366e49ac47656786fccf2565ee80aced" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if and only if digraph &lt;code&gt;Digraph&lt;/code&gt; is a &lt;code&gt;&lt;a href=&quot;#tree&quot;&gt;tree&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">当且仅当digraph &lt;code&gt;Digraph&lt;/code&gt; 是一 &lt;code&gt;&lt;a href=&quot;#tree&quot;&gt;tree&lt;/a&gt;&lt;/code&gt; 返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="327156105915035f1032d70d9ab3440b473d4c96" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if and only if digraph &lt;code&gt;Digraph&lt;/code&gt; is an &lt;code&gt;&lt;a href=&quot;#arborescence&quot;&gt;arborescence&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">当且仅当digraph &lt;code&gt;Digraph&lt;/code&gt; 是 &lt;code&gt;&lt;a href=&quot;#arborescence&quot;&gt;arborescence&lt;/a&gt;&lt;/code&gt; ，才返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="840b52726cf59a5cc0dabded8950ff985905b19b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if annotations Anno is marked as generated. The default is to return &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果注释Anno被标记为已生成，则返回 &lt;code&gt;true&lt;/code&gt; 。默认值是返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c6bc092bbc73143b7b3017ab2ec9146c3d1e6217" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if any of its arguments evaluates to &lt;code&gt;true&lt;/code&gt;. Variable length argument list. Evaluation order is undefined.</source>
          <target state="translated">返回 &lt;code&gt;true&lt;/code&gt; ，如果它的任何参数评价了以 &lt;code&gt;true&lt;/code&gt; 。可变长度参数列表。评估顺序未定义。</target>
        </trans-unit>
        <trans-unit id="a2053b7f5bdd086b8047b1e87efe86460350e0af" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if any trace property was changed for the trace target process, otherwise &lt;code&gt;false&lt;/code&gt;. Can only be used in the &lt;code&gt;MatchBody&lt;/code&gt; part when tracing.</source>
          <target state="translated">如果为跟踪目标进程更改了任何跟踪属性，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。跟踪时只能在 &lt;code&gt;MatchBody&lt;/code&gt; 零件中使用。</target>
        </trans-unit>
        <trans-unit id="43efa171035ceda499204f341baf5bc459c87fb7" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if dictionary &lt;code&gt;Dict&lt;/code&gt; has no elements, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果字典 &lt;code&gt;Dict&lt;/code&gt; 没有元素，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c98b79c7fa00cfd78967f676d2573904eb541446" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if disconnection succeeds, otherwise &lt;code&gt;false&lt;/code&gt;. If the local node is not alive, &lt;code&gt;ignored&lt;/code&gt; is returned.</source>
          <target state="translated">如果断开连接成功，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。如果本地节点未处于活动状态，则返回 &lt;code&gt;ignored&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bb71e5c8ceda563e5d0d9e12dfae53c738eca5f3" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if file &lt;code&gt;Filename&lt;/code&gt; is a Dets table, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果文件 &lt;code&gt;Filename&lt;/code&gt; 是Dets表，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="68e38950453e65d4f2e1f3e4268733a7a8322552" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if it would be possible to initialize table &lt;code&gt;Name&lt;/code&gt;, using &lt;code&gt;&lt;a href=&quot;#init_table-3&quot;&gt;init_table/3&lt;/a&gt;&lt;/code&gt; with option &lt;code&gt;{format,&amp;nbsp;bchunk}&lt;/code&gt;, with objects read with &lt;code&gt;&lt;a href=&quot;#bchunk-2&quot;&gt;bchunk/2&lt;/a&gt;&lt;/code&gt; from some table &lt;code&gt;T&lt;/code&gt;, such that calling &lt;code&gt;info(T,&amp;nbsp;bchunk_format)&lt;/code&gt; returns &lt;code&gt;BchunkFormat&lt;/code&gt;.</source>
          <target state="translated">如果可以使用带有选项 &lt;code&gt;{format,&amp;nbsp;bchunk}&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#init_table-3&quot;&gt;init_table/3&lt;/a&gt;&lt;/code&gt; 和从某个表 &lt;code&gt;T&lt;/code&gt; 中用 &lt;code&gt;&lt;a href=&quot;#bchunk-2&quot;&gt;bchunk/2&lt;/a&gt;&lt;/code&gt; 读取的对象来初始化表 &lt;code&gt;Name&lt;/code&gt; ，则返回 &lt;code&gt;true&lt;/code&gt; ，这样调用 &lt;code&gt;info(T,&amp;nbsp;bchunk_format)&lt;/code&gt; 返回 &lt;code&gt;BchunkFormat&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1bdb1cad515a009f56874d9217ed8b2129743b76" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if map &lt;code&gt;Map&lt;/code&gt; contains &lt;code&gt;Key&lt;/code&gt; and returns &lt;code&gt;false&lt;/code&gt; if it does not contain the &lt;code&gt;Key&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;true&lt;/code&gt; ，如果地图 &lt;code&gt;Map&lt;/code&gt; 包含 &lt;code&gt;Key&lt;/code&gt; ，并返回 &lt;code&gt;false&lt;/code&gt; ，如果它不包含 &lt;code&gt;Key&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="837da330dacaa1b15470c144dcc8185069d210aa" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if map iterator &lt;code&gt;iter&lt;/code&gt; is positioned after the last entry.</source>
          <target state="translated">如果映射迭代器 &lt;code&gt;iter&lt;/code&gt; 位于最后一个条目之后，则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f79af967987941ecfed42a3dcde1052b946b59e8" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if map iterator &lt;code&gt;iter&lt;/code&gt; is positioned before the first entry.</source>
          <target state="translated">如果映射迭代器 &lt;code&gt;iter&lt;/code&gt; 位于第一个条目之前，则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="16d59e1a9a86923e1a80bc517d8d705043437d4a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if successful and any process is needed to be killed, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果成功并且需要终止任何进程，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cdebcfc3efe21b160fa6918abbd7bf23dce050ae" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if successful, or &lt;code&gt;false&lt;/code&gt; if there is old code for &lt;code&gt;Module&lt;/code&gt; that must be purged first, or if &lt;code&gt;Module&lt;/code&gt; is not a (loaded) module.</source>
          <target state="translated">如果成功，则返回 &lt;code&gt;true&lt;/code&gt; ;如果必须先清除 &lt;code&gt;Module&lt;/code&gt; 的旧代码，或者如果 &lt;code&gt;Module&lt;/code&gt; 不是（已加载的）模块，则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0572bc092a167640466d31c3359149f46443af08" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if successful, or &lt;code&gt;{error, bad_directory}&lt;/code&gt; if &lt;code&gt;Dir&lt;/code&gt; is not the name of a directory.</source>
          <target state="translated">如果成功，则返回 &lt;code&gt;true&lt;/code&gt; &lt;code&gt;{error, bad_directory}&lt;/code&gt; 如果 &lt;code&gt;Dir&lt;/code&gt; 不是目录，则返回{error，bad_directory}。</target>
        </trans-unit>
        <trans-unit id="1b5c160eb9149616deeb9049d2afc3f6388183ab" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if term &lt;code&gt;Term&lt;/code&gt; is a &lt;code&gt;&lt;a href=&quot;#type&quot;&gt;type&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">如果term &lt;code&gt;Term&lt;/code&gt; 是 &lt;code&gt;&lt;a href=&quot;#type&quot;&gt;type&lt;/a&gt;&lt;/code&gt; ,则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d8de59c038d12f2d3e08f19ee569920dd53c9901" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the binary relation &lt;code&gt;BinRel&lt;/code&gt; is a &lt;code&gt;&lt;a href=&quot;#function&quot;&gt;function&lt;/a&gt;&lt;/code&gt; or the untyped empty set, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果二进制关系 &lt;code&gt;BinRel&lt;/code&gt; 是 &lt;code&gt;&lt;a href=&quot;#function&quot;&gt;function&lt;/a&gt;&lt;/code&gt; 或无类型的空集，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f6342bf32678cb2c64cd38d8e07dd6a2b2dfe8b7" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the command is successfully sent. Returns &lt;code&gt;false&lt;/code&gt; if the command fails, for example:</source>
          <target state="translated">如果命令发送成功，则返回 &lt;code&gt;true&lt;/code&gt; 。如果命令失败，则返回 &lt;code&gt;false&lt;/code&gt; ，例如：</target>
        </trans-unit>
        <trans-unit id="220c2e851c0b3fd14620b8e1dcda51e08e19d82b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the currently executing process is currently alive, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果当前正在执行的进程当前处于活动状态，则返回 &lt;code&gt;true&lt;/code&gt; ；否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2f34a1052c6f7f165ca8d43accd0a5f4d7fd88f9" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the emulator has been debug-compiled, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果仿真器已经过调试编译，则返回 &lt;code&gt;true&lt;/code&gt; ；否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5a7ffac42baa2d1c8cd24f128386c2d20707b636" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the emulator uses some kind of kernel-poll implementation, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果模拟器使用某种内核轮询实现，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2640d134008b1db2fa00ae38ca1ebbb6ce7040a6" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the iterator is now positioned at a valid key-value entry, or &lt;code&gt;false&lt;/code&gt; if the iterator is positioned at the head (before the first entry).</source>
          <target state="translated">如果迭代器现在位于有效的键值条目处，则返回 &lt;code&gt;true&lt;/code&gt; ;如果迭代器位于头部（在第一个条目之前），则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d9b837b1c56e4945383c5d2f3a9dc241703e2df8" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the iterator is now positioned at a valid key-value entry, or &lt;code&gt;false&lt;/code&gt; if the iterator is positioned at the tail (beyond the last entry).</source>
          <target state="translated">如果迭代器现在位于有效的键值条目处，则返回 &lt;code&gt;true&lt;/code&gt; ;如果迭代器位于末尾（位于最后一个条目之外），则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a21b32bdb2fbfa17b4e830e4f95747fe424f9a29" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the local node is alive (that is, if the node can be part of a distributed system), otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;true&lt;/code&gt; ，如果本地节点是活的（也就是说，如果节点可以是分布式系统的一部分），否则 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f5131fcd6ba86896d200f95b33fbef1c0adb94f6" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the message is successfully sent. Returns &lt;code&gt;false&lt;/code&gt; if the send operation fails, that is:</source>
          <target state="translated">如果成功发送了消息，则返回 &lt;code&gt;true&lt;/code&gt; 。如果发送操作失败，则返回 &lt;code&gt;false&lt;/code&gt; ，即：</target>
        </trans-unit>
        <trans-unit id="c8afd8d30e955139fc8e323555c9f5c022ea9a15" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the module &lt;code&gt;Module&lt;/code&gt; is loaded and contains an exported function &lt;code&gt;Function/Arity&lt;/code&gt;, or if there is a BIF (a built-in function implemented in C) with the specified name, otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;true&lt;/code&gt; 如果模块 &lt;code&gt;Module&lt;/code&gt; 被加载并含有导出函数 &lt;code&gt;Function/Arity&lt;/code&gt; ，或者如果有一个BIF（一个内置的C实现功能）具有指定名称，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="16e198b58e0edccd813bfb44b5c3a1312ac4aee0" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the module &lt;code&gt;Module&lt;/code&gt; is loaded, otherwise &lt;code&gt;false&lt;/code&gt;. It does not attempt to load the module.</source>
          <target state="translated">如果模块 &lt;code&gt;Module&lt;/code&gt; 已加载，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。它不会尝试加载模块。</target>
        </trans-unit>
        <trans-unit id="d7bc8d39440fe46705c1d257350ef7754ed81483" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the objects returned by &lt;code&gt;TraverseFun&lt;/code&gt; are sorted on the key.</source>
          <target state="translated">如果 &lt;code&gt;TraverseFun&lt;/code&gt; 返回的对象在键上排序，则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2bcb89d9b82db482ff72119bdbde47d919f64682" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the objects returned by &lt;code&gt;TraverseFun&lt;/code&gt; are unique.</source>
          <target state="translated">如果 &lt;code&gt;TraverseFun&lt;/code&gt; 返回的对象是唯一的，则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f4d83743ed429a6343e5e632fb6b972613cbee8c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the process exists and is alive, that is, is not exiting and has not exited. Otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果该进程存在并且处于活动状态，即没有退出，也没有退出，则返回 &lt;code&gt;true&lt;/code&gt; 。否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ebd06398cc287278fc23a50bdaae51ea37c25415" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the runtime system is a node and can connect to other nodes, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">如果运行时系统是一个节点并且可以连接到其他节点，则返回 &lt;code&gt;true&lt;/code&gt; ,否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f71bf76db34debfde26e70f0e54ea224761149ba" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the two terms are identical. Corresponds to the Erlang operators &lt;code&gt;=:=&lt;/code&gt; and &lt;code&gt;=/=&lt;/code&gt;.</source>
          <target state="translated">如果两个术语相同，则返回 &lt;code&gt;true&lt;/code&gt; 。对应于Erlang运算符 &lt;code&gt;=:=&lt;/code&gt; 和 &lt;code&gt;=/=&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9ff27fafa393707e02c06057f9c2017959462baf" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if there is a tuple in &lt;code&gt;TupleList&lt;/code&gt; whose &lt;code&gt;N&lt;/code&gt;th element compares equal to &lt;code&gt;Key&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;true&lt;/code&gt; ，如果有一个元组 &lt;code&gt;TupleList&lt;/code&gt; 其 &lt;code&gt;N&lt;/code&gt; 个元素比较等于 &lt;code&gt;Key&lt;/code&gt; ，否则 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="85701f95978427663468d859796b17568ab01b21" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;bin_term&lt;/code&gt; is not a binary.</source>
          <target state="translated">成功返回 &lt;code&gt;true&lt;/code&gt; ，如果 &lt;code&gt;bin_term&lt;/code&gt; 不是二进制，则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1a49e2c312bfd297ed7ee94aa673637f429d9003" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;iolist&lt;/code&gt; is not an iolist.</source>
          <target state="translated">成功返回 &lt;code&gt;true&lt;/code&gt; ，如果 &lt;code&gt;iolist&lt;/code&gt; 不是iolist，则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5c212fa02d51be234a67b9d0c062850d25485d96" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;iovec_term&lt;/code&gt; not an iovec.</source>
          <target state="translated">成功返回 &lt;code&gt;true&lt;/code&gt; ，如果 &lt;code&gt;iovec_term&lt;/code&gt; 不是iovec ，则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="425fbe1cd4660079beb601b7a7d141785b8bb5b0" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;map&lt;/code&gt; is not a map or if &lt;code&gt;map&lt;/code&gt; does not contain &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">成功返回 &lt;code&gt;true&lt;/code&gt; ，如果 &lt;code&gt;map&lt;/code&gt; 不是map或 &lt;code&gt;map&lt;/code&gt; 不包含 &lt;code&gt;key&lt;/code&gt; ，则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1704a3eb02df06c9442f7329c92305fc551db19a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;map_in&lt;/code&gt; is not a map.</source>
          <target state="translated">成功返回 &lt;code&gt;true&lt;/code&gt; ，如果 &lt;code&gt;map_in&lt;/code&gt; 不是地图则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8df341505523d0787a98812bdc19d731d9d6cf77" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;skip&lt;/code&gt; is greater than the size of &lt;code&gt;bin&lt;/code&gt;. Any ownership of the binary data is transferred to the queue and &lt;code&gt;bin&lt;/code&gt; is to be considered read-only for the rest of the NIF call and then as released.</source>
          <target state="translated">成功返回 &lt;code&gt;true&lt;/code&gt; ，如果 &lt;code&gt;skip&lt;/code&gt; 大于 &lt;code&gt;bin&lt;/code&gt; 的大小则返回 &lt;code&gt;false&lt;/code&gt; 。二进制数据的所有所有权都将转移到队列， &lt;code&gt;bin&lt;/code&gt; 对于其余的NIF调用将被视为只读，然后释放。</target>
        </trans-unit>
        <trans-unit id="251cb50d4a2c89949192daeab958e9efdf0c377e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;skip&lt;/code&gt; is greater than the size of &lt;code&gt;iovec&lt;/code&gt;.</source>
          <target state="translated">成功返回 &lt;code&gt;true&lt;/code&gt; ，如果 &lt;code&gt;skip&lt;/code&gt; 大于 &lt;code&gt;iovec&lt;/code&gt; 的大小则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="80b561dcb4ef365f079754a33329bf329b878aa8" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is not a float.</source>
          <target state="translated">成功返回 &lt;code&gt;true&lt;/code&gt; ，如果 &lt;code&gt;term&lt;/code&gt; 不是浮点数则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="15b5e63a09c5aaa78ac7910c8d72c4ca1bdc992e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is not a handle to a resource object of type &lt;code&gt;type&lt;/code&gt;.</source>
          <target state="translated">成功返回 &lt;code&gt;true&lt;/code&gt; ，如果 &lt;code&gt;term&lt;/code&gt; 不是type &lt;code&gt;type&lt;/code&gt; 的资源对象的句柄，则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="db55b33e73993b506b85c710afaad8ac05f4f25a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is not a map.</source>
          <target state="translated">成功返回 &lt;code&gt;true&lt;/code&gt; ，如果 &lt;code&gt;term&lt;/code&gt; 不是map ，则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b96817a78d4b89e0e0af672b61e730a7a6cdcf50" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is not a proper list.</source>
          <target state="translated">成功返回 &lt;code&gt;true&lt;/code&gt; ，如果 &lt;code&gt;term&lt;/code&gt; 不正确，则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="74a1ff742d26d9d5e217d93e495385074b5a91c7" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is not a tuple.</source>
          <target state="translated">成功返回 &lt;code&gt;true&lt;/code&gt; ，如果 &lt;code&gt;term&lt;/code&gt; 不是元组则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e0764fec41c326adbe09a5e85cd0f2ddf311239b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is not an atom.</source>
          <target state="translated">成功返回 &lt;code&gt;true&lt;/code&gt; ；如果 &lt;code&gt;term&lt;/code&gt; 不是原子，则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f2720c100b3370e08814ba40a54fadc0b7e1ecde" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is not an integer or is outside the bounds of a signed 64-bit integer.</source>
          <target state="translated">成功返回 &lt;code&gt;true&lt;/code&gt; ；如果 &lt;code&gt;term&lt;/code&gt; 不是整数或在带符号的64位整数的范围之外，则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="466cc40c31f850b67f9e5b9d5eafadd6ca7d8bd7" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is not an integer or is outside the bounds of type &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">成功返回 &lt;code&gt;true&lt;/code&gt; ；如果 &lt;code&gt;term&lt;/code&gt; 不是整数或超出 &lt;code&gt;int&lt;/code&gt; 类型的范围，则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d5dd34616831ba5e73c34e77058031a360a47f61" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is not an integer or is outside the bounds of type &lt;code&gt;long int&lt;/code&gt;.</source>
          <target state="translated">成功返回 &lt;code&gt;true&lt;/code&gt; ，如果 &lt;code&gt;term&lt;/code&gt; 不是整数或超出 &lt;code&gt;long int&lt;/code&gt; 类型的范围，则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3ce5bb0360bb82e10c287051a3544582ad7996ee" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is not an unsigned integer or is outside the bounds of an unsigned 64-bit integer.</source>
          <target state="translated">成功返回 &lt;code&gt;true&lt;/code&gt; ；如果 &lt;code&gt;term&lt;/code&gt; 不是无符号整数或在无符号64位整数的范围之外，则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ebdc24ba5578cd605bf5abafb13309dbdb85f5e8" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is not an unsigned integer or is outside the bounds of type &lt;code&gt;unsigned int&lt;/code&gt;.</source>
          <target state="translated">成功返回 &lt;code&gt;true&lt;/code&gt; ，如果 &lt;code&gt;term&lt;/code&gt; 不是一个无符号整数或超出 &lt;code&gt;unsigned int&lt;/code&gt; 类型的范围，则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ad16fe9435f50ea2161b3f9229e301fc160ace24" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is not an unsigned integer or is outside the bounds of type &lt;code&gt;unsigned long&lt;/code&gt;.</source>
          <target state="translated">成功返回 &lt;code&gt;true&lt;/code&gt; ，如果 &lt;code&gt;term&lt;/code&gt; 不是一个无符号整数或超出 &lt;code&gt;unsigned long&lt;/code&gt; 类型的范围，则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c66b4dd3767c73443718052878eb4d7dad05fa10" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if allocation fails.</source>
          <target state="translated">成功返回 &lt;code&gt;true&lt;/code&gt; ，如果分配失败则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="402cb52c5dc41234e885abc23c81a2c290a6af4a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if it is not a list or the list is empty.</source>
          <target state="translated">成功返回 &lt;code&gt;true&lt;/code&gt; ，如果不是列表或列表为空，则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="17d5f63b40b549a6977536ef8a6adfcf84871635" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if memory allocation failed.</source>
          <target state="translated">成功返回 &lt;code&gt;true&lt;/code&gt; ，如果内存分配失败则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="22a67098bbe3a6af017af30fcf52e9ffc8423f04" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if the I/O does not contain &lt;code&gt;count&lt;/code&gt; bytes. On failure the queue is left un-altered.</source>
          <target state="translated">成功返回 &lt;code&gt;true&lt;/code&gt; ，如果I / O不包含 &lt;code&gt;count&lt;/code&gt; 字节，则返回 &lt;code&gt;false&lt;/code&gt; 。失败时，队列保持不变。</target>
        </trans-unit>
        <trans-unit id="02ec2783839d8a59082df68de0ce8bcd6cd8429e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if the allocation fails.</source>
          <target state="translated">成功返回 &lt;code&gt;true&lt;/code&gt; ，如果分配失败则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="de43efc8b12e870f3ff949cf7150965a8579f354" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if the queue is empty.</source>
          <target state="translated">成功返回 &lt;code&gt;true&lt;/code&gt; ，如果队列为空，则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="762065f9e524f1edd906886731650b489362d98d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or false if &lt;code&gt;map&lt;/code&gt; is not a map.</source>
          <target state="translated">成功返回 &lt;code&gt;true&lt;/code&gt; ，如果 &lt;code&gt;map&lt;/code&gt; 不是map，则返回false 。</target>
        </trans-unit>
        <trans-unit id="09cb26109a0688f3ddf6aa2b146ecd484a16fdc0" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; when every element of &lt;code&gt;Ordset1&lt;/code&gt; is also a member of &lt;code&gt;Ordset2&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;true&lt;/code&gt; 时的每一个元素 &lt;code&gt;Ordset1&lt;/code&gt; 也是成员 &lt;code&gt;Ordset2&lt;/code&gt; ，否则 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fd2b541eaaee25c8b7e1896e058688d9e003422d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; when every element of &lt;code&gt;Set1&lt;/code&gt; is also a member of &lt;code&gt;Set2&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">当 &lt;code&gt;Set1&lt;/code&gt; 的每个元素也是 &lt;code&gt;Set2&lt;/code&gt; 的成员时，返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="772f6c1866dde47182302fa4adfbd6b65a83ecc5" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="01b5f3c7e9e34ad0ea7e55d06b0d272719cb9f36" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;undefined&lt;/code&gt; if any of the following applies:</source>
          <target state="translated">如果满足以下任一条件，则返回 &lt;code&gt;undefined&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="1ce7dfa3a0d8ca6c582893c5a3a497ecd9596cf8" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;undefined&lt;/code&gt; if system flag &lt;code&gt;&lt;a href=&quot;#system_flag_microstate_accounting&quot;&gt;microstate_accounting&lt;/a&gt;&lt;/code&gt; is turned off.</source>
          <target state="translated">如果系统标志 &lt;code&gt;&lt;a href=&quot;#system_flag_microstate_accounting&quot;&gt;microstate_accounting&lt;/a&gt;&lt;/code&gt; 已关闭，则返回 &lt;code&gt;undefined&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3cbb78209aa42d2d824c7225bd68db96b78b41cc" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;undefined&lt;/code&gt; if system flag &lt;code&gt;&lt;a href=&quot;#system_flag_scheduler_wall_time&quot;&gt;scheduler_wall_time&lt;/a&gt;&lt;/code&gt; is turned off.</source>
          <target state="translated">如果系统标志 &lt;code&gt;&lt;a href=&quot;#system_flag_scheduler_wall_time&quot;&gt;scheduler_wall_time&lt;/a&gt;&lt;/code&gt; 关闭，则返回 &lt;code&gt;undefined&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="79b1e7f3aa52d8516e62aa3d67ceadbc5536b02b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;yes&lt;/code&gt; if communication with &lt;code&gt;Node&lt;/code&gt; is authorized. Notice that a connection to &lt;code&gt;Node&lt;/code&gt; is established in this case. Returns &lt;code&gt;no&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; does not exist or communication is not authorized (it has another cookie than &lt;code&gt;auth&lt;/code&gt; thinks it has).</source>
          <target state="translated">如果与 &lt;code&gt;Node&lt;/code&gt; 的通信被授权，则返回 &lt;code&gt;yes&lt;/code&gt; 。请注意，在这种情况下，已建立到 &lt;code&gt;Node&lt;/code&gt; 的连接。如果 &lt;code&gt;Node&lt;/code&gt; 不存在或未授权通信（它具有与 &lt;code&gt;auth&lt;/code&gt; 认为不一样的另一个cookie ），则返回 &lt;code&gt;no&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ff68aa8173942d5ed453128b3460662d3f4018ef" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{0,0,{pid(),0}}&lt;/code&gt; or &lt;code&gt;{0,0,undefined}&lt;/code&gt; if &lt;code&gt;memsup&lt;/code&gt; is not available, or if all memory checks so far have timed out.</source>
          <target state="translated">如果 &lt;code&gt;memsup&lt;/code&gt; 不可用，或者到目前为止所有内存检查都已超时，则返回 &lt;code&gt;{0,0,{pid(),0}}&lt;/code&gt; 或 &lt;code&gt;{0,0,undefined}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8a2ba5a5819b807f3fa6c7dcac826c02ac20ac12" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{Allocator, Version, Features, Settings&lt;/code&gt;, where:</source>
          <target state="translated">返回 &lt;code&gt;{Allocator, Version, Features, Settings&lt;/code&gt; ，其中：</target>
        </trans-unit>
        <trans-unit id="88b240dca4c3a19f9e5608f231fb6555ed83370b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{Continuation2, eof}&lt;/code&gt; when the end of the log is reached, and &lt;code&gt;{error, Reason}&lt;/code&gt; if an error occurs.</source>
          <target state="translated">到达日志结尾时 &lt;code&gt;{Continuation2, eof}&lt;/code&gt; 返回{Continuation2，eof} &lt;code&gt;{error, Reason}&lt;/code&gt; 如果发生错误，则返回{error，Reason}。</target>
        </trans-unit>
        <trans-unit id="9a433a57e945cfebfd65dacf6868869bb0981d75" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{E,&amp;nbsp;V1,&amp;nbsp;V2,&amp;nbsp;Label}&lt;/code&gt;, where &lt;code&gt;Label&lt;/code&gt; is the &lt;code&gt;&lt;a href=&quot;#label&quot;&gt;label&lt;/a&gt;&lt;/code&gt; of edge &lt;code&gt;E&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#emanate&quot;&gt;emanating&lt;/a&gt;&lt;/code&gt; from &lt;code&gt;V1&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#incident&quot;&gt;incident&lt;/a&gt;&lt;/code&gt; on &lt;code&gt;V2&lt;/code&gt; of digraph &lt;code&gt;G&lt;/code&gt;. If no edge &lt;code&gt;E&lt;/code&gt; of digraph &lt;code&gt;G&lt;/code&gt; exists, &lt;code&gt;false&lt;/code&gt; is returned.</source>
          <target state="translated">返回 &lt;code&gt;{E,&amp;nbsp;V1,&amp;nbsp;V2,&amp;nbsp;Label}&lt;/code&gt; ，其中 &lt;code&gt;Label&lt;/code&gt; 是 &lt;code&gt;&lt;a href=&quot;#label&quot;&gt;label&lt;/a&gt;&lt;/code&gt; 边缘的 &lt;code&gt;E&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#emanate&quot;&gt;emanating&lt;/a&gt;&lt;/code&gt; 从 &lt;code&gt;V1&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;#incident&quot;&gt;incident&lt;/a&gt;&lt;/code&gt; 在 &lt;code&gt;V2&lt;/code&gt; 有向图的 &lt;code&gt;G&lt;/code&gt; ^。如果图 &lt;code&gt;G&lt;/code&gt; 的边 &lt;code&gt;E&lt;/code&gt; 不存在，则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="efc56f026af628e903a47db2fc6244058b8806dc" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{Element, Iter2}&lt;/code&gt;, where &lt;code&gt;Element&lt;/code&gt; is the smallest element referred to by iterator &lt;code&gt;Iter1&lt;/code&gt;, and &lt;code&gt;Iter2&lt;/code&gt; is the new iterator to be used for traversing the remaining elements, or the atom &lt;code&gt;none&lt;/code&gt; if no elements remain.</source>
          <target state="translated">返回 &lt;code&gt;{Element, Iter2}&lt;/code&gt; ，其中 &lt;code&gt;Element&lt;/code&gt; 是迭代器 &lt;code&gt;Iter1&lt;/code&gt; 引用的最小元素，而 &lt;code&gt;Iter2&lt;/code&gt; 是用于遍历其余元素的新迭代器；如果没有剩余元素，则原子 &lt;code&gt;none&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="393d32dc102733bc6ee1d537437533c14cd4c072" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{Element, Set2}&lt;/code&gt;, where &lt;code&gt;Element&lt;/code&gt; is the largest element in &lt;code&gt;Set1&lt;/code&gt;, and &lt;code&gt;Set2&lt;/code&gt; is this set with &lt;code&gt;Element&lt;/code&gt; deleted. Assumes that &lt;code&gt;Set1&lt;/code&gt; is not empty.</source>
          <target state="translated">返回 &lt;code&gt;{Element, Set2}&lt;/code&gt; ，其中 &lt;code&gt;Element&lt;/code&gt; 是 &lt;code&gt;Set1&lt;/code&gt; 中最大的元素，而 &lt;code&gt;Set2&lt;/code&gt; 是已删除 &lt;code&gt;Element&lt;/code&gt; 的集合。假定 &lt;code&gt;Set1&lt;/code&gt; 不为空。</target>
        </trans-unit>
        <trans-unit id="4e8ef39d1666ed76b60b4e7c413afdf3ec6f6595" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{Element, Set2}&lt;/code&gt;, where &lt;code&gt;Element&lt;/code&gt; is the smallest element in &lt;code&gt;Set1&lt;/code&gt;, and &lt;code&gt;Set2&lt;/code&gt; is this set with &lt;code&gt;Element&lt;/code&gt; deleted. Assumes that &lt;code&gt;Set1&lt;/code&gt; is not empty.</source>
          <target state="translated">返回 &lt;code&gt;{Element, Set2}&lt;/code&gt; ，其中 &lt;code&gt;Element&lt;/code&gt; 是 &lt;code&gt;Set1&lt;/code&gt; 中的最小元素，而 &lt;code&gt;Set2&lt;/code&gt; 是已删除 &lt;code&gt;Element&lt;/code&gt; 的集合。假定 &lt;code&gt;Set1&lt;/code&gt; 不为空。</target>
        </trans-unit>
        <trans-unit id="55661fa3ce23aa28a56bb35fd85a1158d7146be6" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{GoodNodes, BadNodes}&lt;/code&gt;, where &lt;code&gt;GoodNodes&lt;/code&gt; is the list of nodes that have &lt;code&gt;Name&lt;/code&gt; as a registered process.</source>
          <target state="translated">返回 &lt;code&gt;{GoodNodes, BadNodes}&lt;/code&gt; ，其中 &lt;code&gt;GoodNodes&lt;/code&gt; 是具有 &lt;code&gt;Name&lt;/code&gt; 作为已注册进程的节点的列表。</target>
        </trans-unit>
        <trans-unit id="a48003f5247a06d5277793d1f9fa8845a8f3ac94" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{Key, Value, Iter2}&lt;/code&gt;, where &lt;code&gt;Key&lt;/code&gt; is the smallest key referred to by iterator &lt;code&gt;Iter1&lt;/code&gt;, and &lt;code&gt;Iter2&lt;/code&gt; is the new iterator to be used for traversing the remaining nodes, or the atom &lt;code&gt;none&lt;/code&gt; if no nodes remain.</source>
          <target state="translated">返回 &lt;code&gt;{Key, Value, Iter2}&lt;/code&gt; ，其中 &lt;code&gt;Key&lt;/code&gt; 是最小的键通过迭代称为 &lt;code&gt;Iter1&lt;/code&gt; ，和 &lt;code&gt;Iter2&lt;/code&gt; 是用于遍历剩余节点，或所述原子新的迭代器 &lt;code&gt;none&lt;/code&gt; 如果没有节点保持。</target>
        </trans-unit>
        <trans-unit id="fe0692890a96736c1f9a5989a0656786fa01679b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{Key, Value, Tree2}&lt;/code&gt;, where &lt;code&gt;Key&lt;/code&gt; is the largest key in &lt;code&gt;Tree1&lt;/code&gt;, &lt;code&gt;Value&lt;/code&gt; is the value associated with this key, and &lt;code&gt;Tree2&lt;/code&gt; is this tree with the corresponding node deleted. Assumes that the tree is not empty.</source>
          <target state="translated">返回 &lt;code&gt;{Key, Value, Tree2}&lt;/code&gt; ，其中 &lt;code&gt;Key&lt;/code&gt; 是 &lt;code&gt;Tree1&lt;/code&gt; 中最大的键， &lt;code&gt;Value&lt;/code&gt; 是与此键关联的值， &lt;code&gt;Tree2&lt;/code&gt; 是已删除相应节点的该树。假定树不为空。</target>
        </trans-unit>
        <trans-unit id="8e1ea4bc482a37ad1fa45fe6b4361e60424e31a7" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{Key, Value, Tree2}&lt;/code&gt;, where &lt;code&gt;Key&lt;/code&gt; is the smallest key in &lt;code&gt;Tree1&lt;/code&gt;, &lt;code&gt;Value&lt;/code&gt; is the value associated with this key, and &lt;code&gt;Tree2&lt;/code&gt; is this tree with the corresponding node deleted. Assumes that the tree is not empty.</source>
          <target state="translated">返回 &lt;code&gt;{Key, Value, Tree2}&lt;/code&gt; ，其中 &lt;code&gt;Key&lt;/code&gt; 是 &lt;code&gt;Tree1&lt;/code&gt; 中的最小键， &lt;code&gt;Value&lt;/code&gt; 是与此键关联的值， &lt;code&gt;Tree2&lt;/code&gt; 是已删除相应节点的该树。假定树不为空。</target>
        </trans-unit>
        <trans-unit id="89f276e5e399472c1bd9f5f932089656cedbf6bf" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{Key, Value}&lt;/code&gt;, where &lt;code&gt;Key&lt;/code&gt; is the largest key in &lt;code&gt;Tree&lt;/code&gt;, and &lt;code&gt;Value&lt;/code&gt; is the value associated with this key. Assumes that the tree is not empty.</source>
          <target state="translated">返回 &lt;code&gt;{Key, Value}&lt;/code&gt; ，其中 &lt;code&gt;Key&lt;/code&gt; 是 &lt;code&gt;Tree&lt;/code&gt; 中最大的键，而 &lt;code&gt;Value&lt;/code&gt; 是与此键关联的值。假定树不为空。</target>
        </trans-unit>
        <trans-unit id="f7b3f6f07b4bb6247cb280d2ba6e0cddd533b4ee" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{Key, Value}&lt;/code&gt;, where &lt;code&gt;Key&lt;/code&gt; is the smallest key in &lt;code&gt;Tree&lt;/code&gt;, and &lt;code&gt;Value&lt;/code&gt; is the value associated with this key. Assumes that the tree is not empty.</source>
          <target state="translated">返回 &lt;code&gt;{Key, Value}&lt;/code&gt; ，其中 &lt;code&gt;Key&lt;/code&gt; 是 &lt;code&gt;Tree&lt;/code&gt; 中的最小键，而 &lt;code&gt;Value&lt;/code&gt; 是与此键关联的值。假定树不为空。</target>
        </trans-unit>
        <trans-unit id="b87bc425abe887b256f0bffb48b0d712c6f26190" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{Time, Value}&lt;/code&gt;, where &lt;code&gt;Time&lt;/code&gt; is the elapsed real time in &lt;strong&gt;microseconds&lt;/strong&gt;, and &lt;code&gt;Value&lt;/code&gt; is what is returned from the apply.</source>
          <target state="translated">返回 &lt;code&gt;{Time, Value}&lt;/code&gt; ，其中 &lt;code&gt;Time&lt;/code&gt; 是经过的实时时间（以&lt;strong&gt;微秒为单位）&lt;/strong&gt;， &lt;code&gt;Value&lt;/code&gt; 是从应用返回的值。</target>
        </trans-unit>
        <trans-unit id="3b83d15e05599f5726b5ba13192f1c2cbf143449" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{V,&amp;nbsp;Label}&lt;/code&gt;, where &lt;code&gt;Label&lt;/code&gt; is the &lt;code&gt;&lt;a href=&quot;#label&quot;&gt;label&lt;/a&gt;&lt;/code&gt; of the vertex &lt;code&gt;V&lt;/code&gt; of digraph &lt;code&gt;G&lt;/code&gt;, or &lt;code&gt;false&lt;/code&gt; if no vertex &lt;code&gt;V&lt;/code&gt; of digraph &lt;code&gt;G&lt;/code&gt; exists.</source>
          <target state="translated">返回 &lt;code&gt;{V,&amp;nbsp;Label}&lt;/code&gt; ，其中 &lt;code&gt;Label&lt;/code&gt; 是 &lt;code&gt;&lt;a href=&quot;#label&quot;&gt;label&lt;/a&gt;&lt;/code&gt; 的顶点的 &lt;code&gt;V&lt;/code&gt; 有向图的 &lt;code&gt;G&lt;/code&gt; ^，或 &lt;code&gt;false&lt;/code&gt; 如果没有顶点 &lt;code&gt;V&lt;/code&gt; 有向图的 &lt;code&gt;G&lt;/code&gt; 存在。</target>
        </trans-unit>
        <trans-unit id="833529750ef3e7c04f447cd981d75c4bf67a62fa" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{ValueList, NewBindings}&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;{ValueList, NewBindings}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e20190e6cd6522d1185a4f4229af82649a8972c9" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{all,0,0,[]}&lt;/code&gt; if &lt;code&gt;cpu_sup&lt;/code&gt; is not available.</source>
          <target state="translated">如果 &lt;code&gt;cpu_sup&lt;/code&gt; 不可用 &lt;code&gt;{all,0,0,[]}&lt;/code&gt; 返回{all，0,0，[]}。</target>
        </trans-unit>
        <trans-unit id="00754e1856a24e2dff7d16ad8cd24696290a5b52" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{error, Reason}&lt;/code&gt; for all errors.</source>
          <target state="translated">返回所有错误的 &lt;code&gt;{error, Reason}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a03273a17cf20521c4bfcec4f487e6c790ea9e0c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{error, Reason}&lt;/code&gt; if &lt;code&gt;host_file()&lt;/code&gt; returns &lt;code&gt;{error, Reason}&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;{error, Reason}&lt;/code&gt; 如果 &lt;code&gt;host_file()&lt;/code&gt; 返回 &lt;code&gt;{error, Reason}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="366df6b410d0dc85728af0bfb8a23e49a0898b24" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{error, bad_name}&lt;/code&gt; if &lt;code&gt;Name&lt;/code&gt; is not the name of an application under &lt;code&gt;$OTPROOT/lib&lt;/code&gt; or on a directory referred to through environment variable &lt;code&gt;ERL_LIBS&lt;/code&gt;. Fails with an exception if &lt;code&gt;Name&lt;/code&gt; has the wrong type.</source>
          <target state="translated">如果 &lt;code&gt;Name&lt;/code&gt; 不是 &lt;code&gt;$OTPROOT/lib&lt;/code&gt; 或通过环境变量 &lt;code&gt;ERL_LIBS&lt;/code&gt; 引用的目录上的应用程序名称，则返回 &lt;code&gt;{error, bad_name}&lt;/code&gt; 。如果 &lt;code&gt;Name&lt;/code&gt; 类型错误，则异常失败。</target>
        </trans-unit>
        <trans-unit id="1127d6855067a544ce8dabd94131eee9103628d0" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{error, enotsup}&lt;/code&gt; on platforms that have no concept of current drive (Unix, for example).</source>
          <target state="translated">在没有当前驱动器概念的平台（例如Unix）上返回 &lt;code&gt;{error, enotsup}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1c0e3e642e9988f23e1651e79c1f83e267a5ce84" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{error, {'invalid global_groups definition', Bad}}&lt;/code&gt; if configuration parameter &lt;code&gt;global_groups&lt;/code&gt; has an invalid value &lt;code&gt;Bad&lt;/code&gt;.</source>
          <target state="translated">如果配置参数 &lt;code&gt;global_groups&lt;/code&gt; 的值 &lt;code&gt;Bad&lt;/code&gt; &lt;code&gt;{error, {'invalid global_groups definition', Bad}}&lt;/code&gt; 返回{error，{'invalid global_groups definition'，Bad}}。</target>
        </trans-unit>
        <trans-unit id="08331cd302f70b32cfdb9f28877b7ced295e81f3" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{file,File}&lt;/code&gt; if the module &lt;code&gt;Module&lt;/code&gt; is Cover compiled, or &lt;code&gt;false&lt;/code&gt; otherwise. &lt;code&gt;File&lt;/code&gt; is the &lt;code&gt;.erl&lt;/code&gt; file used by &lt;code&gt;cover:compile_module/1,2&lt;/code&gt; or the &lt;code&gt;.beam&lt;/code&gt; file used by &lt;code&gt;compile_beam/1&lt;/code&gt;.</source>
          <target state="translated">如果模块 &lt;code&gt;Module&lt;/code&gt; 是Cover编译的，则返回 &lt;code&gt;{file,File}&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。 &lt;code&gt;File&lt;/code&gt; 是 &lt;code&gt;.erl&lt;/code&gt; 通过使用文件 &lt;code&gt;cover:compile_module/1,2&lt;/code&gt; 或 &lt;code&gt;.beam&lt;/code&gt; 通过使用文件 &lt;code&gt;compile_beam/1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bc6cd949b74ac18e91b63a0611e94c6601753003" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{fullsweep_after, integer() &amp;gt;= 0}&lt;/code&gt;, which is the &lt;code&gt;fullsweep_after&lt;/code&gt; garbage collection setting used by default. For more information, see &lt;code&gt;garbage_collection&lt;/code&gt; described below.</source>
          <target state="translated">返回 &lt;code&gt;{fullsweep_after, integer() &amp;gt;= 0}&lt;/code&gt; ，这是默认使用的 &lt;code&gt;fullsweep_after&lt;/code&gt; 垃圾收集设置。有关更多信息，请参见 &lt;code&gt;garbage_collection&lt;/code&gt; 描述的垃圾收集。</target>
        </trans-unit>
        <trans-unit id="331a53c9e16eb417b3327df3828d48f586d5a6bd" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{max_heap_size, MaxHeapSize}&lt;/code&gt;, where &lt;code&gt;MaxHeapSize&lt;/code&gt; is the current system-wide maximum heap size settings for spawned processes. This setting can be set using the command-line flags &lt;code&gt;&lt;a href=&quot;erl#+hmax&quot;&gt;+hmax&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;erl#+hmaxk&quot;&gt;+hmaxk&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;erl#+hmaxel&quot;&gt;+hmaxel&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;erl(1)&lt;/code&gt;. It can also be changed at runtime using &lt;code&gt;&lt;a href=&quot;#system_flag_max_heap_size&quot;&gt;erlang:system_flag(max_heap_size, MaxHeapSize)&lt;/a&gt;&lt;/code&gt;. For more details about the &lt;code&gt;max_heap_size&lt;/code&gt; process flag, see &lt;code&gt;&lt;a href=&quot;#process_flag_max_heap_size&quot;&gt;process_flag(max_heap_size, MaxHeapSize)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;{max_heap_size, MaxHeapSize}&lt;/code&gt; ，其中 &lt;code&gt;MaxHeapSize&lt;/code&gt; 是当前系统范围内产生的进程的最大堆大小设置。此设置可以使用命令行标志被设置 &lt;code&gt;&lt;a href=&quot;erl#+hmax&quot;&gt;+hmax&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;erl#+hmaxk&quot;&gt;+hmaxk&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;erl#+hmaxel&quot;&gt;+hmaxel&lt;/a&gt;&lt;/code&gt; 在 &lt;code&gt;erl(1)&lt;/code&gt; 。也可以在运行时使用 &lt;code&gt;&lt;a href=&quot;#system_flag_max_heap_size&quot;&gt;erlang:system_flag(max_heap_size, MaxHeapSize)&lt;/a&gt;&lt;/code&gt; 进行更改。有关详细信息， &lt;code&gt;max_heap_size&lt;/code&gt; 中标志，看到 &lt;code&gt;&lt;a href=&quot;#process_flag_max_heap_size&quot;&gt;process_flag(max_heap_size, MaxHeapSize)&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2b68242c8927ae4aa1c70666a93d13ffdb58a777" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{min_bin_vheap_size, MinBinVHeapSize}&lt;/code&gt;, where &lt;code&gt;MinBinVHeapSize&lt;/code&gt; is the current system-wide minimum binary virtual heap size for spawned processes.</source>
          <target state="translated">返回 &lt;code&gt;{min_bin_vheap_size, MinBinVHeapSize}&lt;/code&gt; ，其中 &lt;code&gt;MinBinVHeapSize&lt;/code&gt; 是当前系统范围内产生的进程的最小二进制虚拟堆大小。</target>
        </trans-unit>
        <trans-unit id="7b93c870194a4e7c820ac8afebdcac052fe99d49" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{min_heap_size, MinHeapSize}&lt;/code&gt;, where &lt;code&gt;MinHeapSize&lt;/code&gt; is the current system-wide minimum heap size for spawned processes.</source>
          <target state="translated">返回 &lt;code&gt;{min_heap_size, MinHeapSize}&lt;/code&gt; ，其中 &lt;code&gt;MinHeapSize&lt;/code&gt; 是当前系统范围内产生的进程的最小堆大小。</target>
        </trans-unit>
        <trans-unit id="4c753b5f57aed1f2be36a29d6d7233a6e7fc823c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{module, Module}&lt;/code&gt; if successful, or &lt;code&gt;{error, Reason}&lt;/code&gt; if loading fails. See &lt;code&gt;&lt;a href=&quot;#error_reasons&quot;&gt;Error Reasons for Code-Loading Functions&lt;/a&gt;&lt;/code&gt; for a description of the possible error reasons.</source>
          <target state="translated">如果成功，则返回 &lt;code&gt;{module, Module}&lt;/code&gt; &lt;code&gt;{error, Reason}&lt;/code&gt; 如果加载失败，则返回{ error，Reason}。有关可能的错误原因的说明，请参见 &lt;code&gt;&lt;a href=&quot;#error_reasons&quot;&gt;Error Reasons for Code-Loading Functions&lt;/a&gt;&lt;/code&gt; 的错误原因。</target>
        </trans-unit>
        <trans-unit id="d21639cd96a17ba54d0ea4982cc607eb28fec4d8" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{ok, AppNames}&lt;/code&gt; for a successful start or for an already started application (which is, however, omitted from the &lt;code&gt;AppNames&lt;/code&gt; list).</source>
          <target state="translated">对于成功启动或已经启动的应用程序 &lt;code&gt;{ok, AppNames}&lt;/code&gt; 返回{ok，AppNames}（但是， &lt;code&gt;AppNames&lt;/code&gt; 列表中省略了该名称）。</target>
        </trans-unit>
        <trans-unit id="d315a9b8d727b127c74bafa6a3f060a565512370" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{ok, Binary}&lt;/code&gt;, where &lt;code&gt;Binary&lt;/code&gt; is a binary data object that contains the contents of &lt;code&gt;Filename&lt;/code&gt;, or &lt;code&gt;{error, Reason}&lt;/code&gt; if an error occurs.</source>
          <target state="translated">返回 &lt;code&gt;{ok, Binary}&lt;/code&gt; ，其中 &lt;code&gt;Binary&lt;/code&gt; 是包含的内容的二进制数据对象 &lt;code&gt;Filename&lt;/code&gt; ，或 &lt;code&gt;{error, Reason}&lt;/code&gt; 如果发生错误。</target>
        </trans-unit>
        <trans-unit id="525c655903cc75da6161764cd50c898b36f933e4" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{ok, BytesCopied}&lt;/code&gt;, where &lt;code&gt;BytesCopied&lt;/code&gt; is the number of bytes that was copied, which can be less than &lt;code&gt;ByteCount&lt;/code&gt; if end of file was encountered on the source. If the operation fails, &lt;code&gt;{error, Reason}&lt;/code&gt; is returned.</source>
          <target state="translated">返回 &lt;code&gt;{ok, BytesCopied}&lt;/code&gt; ，其中 &lt;code&gt;BytesCopied&lt;/code&gt; 是要复制的字节数，如果在源上遇到文件末尾，则可以小于 &lt;code&gt;ByteCount&lt;/code&gt; 。如果操作失败，则返回 &lt;code&gt;{error, Reason}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e2fdbfba25d1c13b4c1c046500ab28039154c511" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{ok, Continuation}&lt;/code&gt; if the log/index file is opened successfully. &lt;code&gt;Continuation&lt;/code&gt; is to be used when chunking or closing the file.</source>
          <target state="translated">如果成功打开日志/索引文件，则返回 &lt;code&gt;{ok, Continuation}&lt;/code&gt; 。在对文件进行分块或关闭时使用 &lt;code&gt;Continuation&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d7d8052af3f43d76653939bc62908aa05dbf0c0a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{ok, Dir}&lt;/code&gt; or &lt;code&gt;{error, Reason}&lt;/code&gt;, where &lt;code&gt;Dir&lt;/code&gt; is the current working directory of the specified drive.</source>
          <target state="translated">返回 &lt;code&gt;{ok, Dir}&lt;/code&gt; 或 &lt;code&gt;{error, Reason}&lt;/code&gt; ，其中 &lt;code&gt;Dir&lt;/code&gt; 是指定驱动器的当前工作目录。</target>
        </trans-unit>
        <trans-unit id="e57cd0a2d2a36cac656d2b766bd89790ba75e6b9" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{ok, Dir}&lt;/code&gt;, where &lt;code&gt;Dir&lt;/code&gt; is the current working directory of the file server.</source>
          <target state="translated">返回 &lt;code&gt;{ok, Dir}&lt;/code&gt; ，其中 &lt;code&gt;Dir&lt;/code&gt; 是文件服务器的当前工作目录。</target>
        </trans-unit>
        <trans-unit id="70628411315134680c4570f7d86d9d5b089f5796" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{ok, Filename}&lt;/code&gt; if &lt;code&gt;Name&lt;/code&gt; refers to a symbolic link or &lt;code&gt;{error, Reason}&lt;/code&gt; otherwise. On platforms that do not support symbolic links, the return value is &lt;code&gt;{error,enotsup}&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Name&lt;/code&gt; 引用符号链接 &lt;code&gt;{ok, Filename}&lt;/code&gt; 则返回{ok，Filename}，否则返回{ &lt;code&gt;{error, Reason}&lt;/code&gt; 。在不支持符号链接的平台上，返回值为 &lt;code&gt;{error,enotsup}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2396fc5b1271f60064222577f92f372d93ac4626" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{ok, IpPort}&lt;/code&gt; where &lt;code&gt;IpPort&lt;/code&gt; is the IP port number used by the driver listen socket. Only the ip trace driver supports this operation.</source>
          <target state="translated">返回 &lt;code&gt;{ok, IpPort}&lt;/code&gt; ，其中 &lt;code&gt;IpPort&lt;/code&gt; 是驱动程序侦听套接字使用的IP端口号。仅ip跟踪驱动程序支持此操作。</target>
        </trans-unit>
        <trans-unit id="b1aeb5183667fcc40c359fec7f290fd93bff628c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{ok, NewVsn, Script}&lt;/code&gt; if successful, where &lt;code&gt;NewVsn&lt;/code&gt; is the new application version. For details about &lt;code&gt;Script&lt;/code&gt;, see &lt;code&gt;&lt;a href=&quot;appup&quot;&gt;appup(4)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">如果成功，则返回 &lt;code&gt;{ok, NewVsn, Script}&lt;/code&gt; ，其中 &lt;code&gt;NewVsn&lt;/code&gt; 是新的应用程序版本。有关 &lt;code&gt;Script&lt;/code&gt; 详细信息，请参见 &lt;code&gt;&lt;a href=&quot;appup&quot;&gt;appup(4)&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="58f1c87b2a36610dcd7fa20851fdd685363e0515" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{ok, Options}&lt;/code&gt; where &lt;code&gt;Options&lt;/code&gt; is a list of current options enabled for heart. If the callback is cleared, &lt;code&gt;none&lt;/code&gt; will be returned.</source>
          <target state="translated">返回 &lt;code&gt;{ok, Options}&lt;/code&gt; ，其中 &lt;code&gt;Options&lt;/code&gt; 是为heart启用的当前选项的列表。如果清除了回调，则不会返回 &lt;code&gt;none&lt;/code&gt; 内容。</target>
        </trans-unit>
        <trans-unit id="c12a24d6ef45b2a3b8d244c5023475a09bcdb3ea" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{ok, Script}&lt;/code&gt; if successful. For details about &lt;code&gt;Script&lt;/code&gt;, see &lt;code&gt;&lt;a href=&quot;appup&quot;&gt;appup(4)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">如果成功 &lt;code&gt;{ok, Script}&lt;/code&gt; 则返回{ok，Script}。有关 &lt;code&gt;Script&lt;/code&gt; 详细信息，请参见 &lt;code&gt;&lt;a href=&quot;appup&quot;&gt;appup(4)&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="982549332c9000b139b7f75b0566066696ec2bff" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{ok, TRef}&lt;/code&gt; or &lt;code&gt;{error, Reason}&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;{ok, TRef}&lt;/code&gt; 或 &lt;code&gt;{error, Reason}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f94a7a91f55c6582d54c56cd55e902ddee43cfd7" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{ok, cancel}&lt;/code&gt;, or &lt;code&gt;{error, Reason}&lt;/code&gt; when &lt;code&gt;TRef&lt;/code&gt; is not a timer reference.</source>
          <target state="translated">当 &lt;code&gt;TRef&lt;/code&gt; 不是计时器引用时，返回 &lt;code&gt;{ok, cancel}&lt;/code&gt; 或 &lt;code&gt;{error, Reason}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b371b241c5d039ac927cc9ae053642ebd1776939" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{ok,ModuleName}&lt;/code&gt; if successful, or &lt;code&gt;error&lt;/code&gt; if there are errors. An object code file is created if the compilation succeeds without errors. It is considered to be an error if the module name in the source code is not the same as the basename of the output file.</source>
          <target state="translated">如果成功，则返回 &lt;code&gt;{ok,ModuleName}&lt;/code&gt; ，如果有 &lt;code&gt;error&lt;/code&gt; 则返回error。如果编译成功且没有错误，则创建目标代码文件。如果源代码中的模块名称与输出文件的基本名称不同，则认为是错误。</target>
        </trans-unit>
        <trans-unit id="56e28ed5878c26ccf5d3d8d866d209eada335dc9" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{ok,Name,Nodes}&lt;/code&gt; or &lt;code&gt;{error,Reason}&lt;/code&gt;. &lt;code&gt;Name&lt;/code&gt; is the (possibly generated) checkpoint name. &lt;code&gt;Nodes&lt;/code&gt; are the nodes that are involved in the checkpoint. Only nodes that keep a checkpoint retainer know about the checkpoint.</source>
          <target state="translated">返回 &lt;code&gt;{ok,Name,Nodes}&lt;/code&gt; 或 &lt;code&gt;{error,Reason}&lt;/code&gt; 。 &lt;code&gt;Name&lt;/code&gt; 是（可能生成的）检查点名称。 &lt;code&gt;Nodes&lt;/code&gt; 是检查点中涉及的节点。只有保留检查点保留程序的节点才知道该检查点。</target>
        </trans-unit>
        <trans-unit id="df57a8990d22e2034e72cb8d923b4730017d0102" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{value, Value, NewBindings}&lt;/code&gt;</source>
          <target state="translated">返回 &lt;code&gt;{value, Value, NewBindings}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="259fe1b63654f77ae2cab10c66dc676092c4f23b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{value, Value, NewBindings}&lt;/code&gt; by default. If &lt;code&gt;ReturnFormat&lt;/code&gt; is &lt;code&gt;value&lt;/code&gt;, only &lt;code&gt;Value&lt;/code&gt; is returned.</source>
          <target state="translated">默认情况下返回 &lt;code&gt;{value, Value, NewBindings}&lt;/code&gt; 。如果 &lt;code&gt;ReturnFormat&lt;/code&gt; 为 &lt;code&gt;value&lt;/code&gt; ，则仅返回 &lt;code&gt;Value&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="307c398020ed01eaa89c381879ee6bd118a94270" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{yes, Root}&lt;/code&gt; if &lt;code&gt;Root&lt;/code&gt; is the &lt;code&gt;&lt;a href=&quot;#root&quot;&gt;root&lt;/a&gt;&lt;/code&gt; of the arborescence &lt;code&gt;Digraph&lt;/code&gt;, otherwise &lt;code&gt;no&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Root&lt;/code&gt; 是树状有向 &lt;code&gt;Digraph&lt;/code&gt; 的 &lt;code&gt;&lt;a href=&quot;#root&quot;&gt;root&lt;/a&gt;&lt;/code&gt; ，则返回 &lt;code&gt;{yes, Root}&lt;/code&gt; ，否则返回 &lt;code&gt;no&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b3dab1df8995af3b207b03227c6c89632481a2a3" translate="yes" xml:space="preserve">
          <source>Returns CPU utilization since the last call to &lt;code&gt;util/0&lt;/code&gt; or &lt;code&gt;util/1&lt;/code&gt; by the calling process, in more detail than &lt;code&gt;util/0&lt;/code&gt;.</source>
          <target state="translated">返回自调用进程最后一次调用 &lt;code&gt;util/0&lt;/code&gt; 或 &lt;code&gt;util/1&lt;/code&gt; 以来的CPU利用率，比 &lt;code&gt;util/0&lt;/code&gt; 更详细。</target>
        </trans-unit>
        <trans-unit id="08b8d450a6dc3df5d2c2a376e4fd6abee1dc93f7" translate="yes" xml:space="preserve">
          <source>Returns CPU utilization since the last call to &lt;code&gt;util/0&lt;/code&gt; or &lt;code&gt;util/1&lt;/code&gt; by the calling process.</source>
          <target state="translated">返回自上次调用进程对 &lt;code&gt;util/0&lt;/code&gt; 或 &lt;code&gt;util/1&lt;/code&gt; 的调用以来的CPU使用率。</target>
        </trans-unit>
        <trans-unit id="7a19e0bf6777e3799f608c28e900a89c647ee453" translate="yes" xml:space="preserve">
          <source>Returns Universal Coordinated Time (UTC) converted from the return value from &lt;code&gt;erlang:timestamp/0&lt;/code&gt;.</source>
          <target state="translated">返回从 &lt;code&gt;erlang:timestamp/0&lt;/code&gt; 的返回值转换的通用协调时间（UTC）。</target>
        </trans-unit>
        <trans-unit id="fc2f7b5b3d9afa9e1e7199caeeca85be350eda48" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;&lt;a href=&quot;#topsort&quot;&gt;topological ordering&lt;/a&gt;&lt;/code&gt; of the vertices of digraph &lt;code&gt;Digraph&lt;/code&gt; if such an ordering exists, otherwise &lt;code&gt;false&lt;/code&gt;. For each vertex in the returned list, no &lt;code&gt;&lt;a href=&quot;#out_neighbour&quot;&gt;out-neighbors&lt;/a&gt;&lt;/code&gt; occur earlier in the list.</source>
          <target state="translated">返回 &lt;code&gt;Digraph&lt;/code&gt; 的顶点的 &lt;code&gt;&lt;a href=&quot;#topsort&quot;&gt;topological ordering&lt;/a&gt;&lt;/code&gt; （如果存在），否则返回 &lt;code&gt;false&lt;/code&gt; 。对于返回列表中的每个顶点，列表中的较早没有 &lt;code&gt;&lt;a href=&quot;#out_neighbour&quot;&gt;out-neighbors&lt;/a&gt;&lt;/code&gt; 发生。</target>
        </trans-unit>
        <trans-unit id="6aa6cf6ede13f42502f631272769865fcac29a7b" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;boolean()&lt;/code&gt; indicating if dynamic trace probes (&lt;code&gt;dtrace&lt;/code&gt; or &lt;code&gt;systemtap&lt;/code&gt;) are built into the emulator. This can only be &lt;code&gt;true&lt;/code&gt; if the virtual machine was built for dynamic tracing (that is, &lt;code&gt;system_info(dynamic_trace)&lt;/code&gt; returns &lt;code&gt;dtrace&lt;/code&gt; or &lt;code&gt;systemtap&lt;/code&gt;).</source>
          <target state="translated">返回一个 &lt;code&gt;boolean()&lt;/code&gt; ,指示动态跟踪探针（ &lt;code&gt;dtrace&lt;/code&gt; 或 &lt;code&gt;systemtap&lt;/code&gt; ）是否内置在模拟器中。仅当虚拟机是为动态跟踪构建的（即 &lt;code&gt;system_info(dynamic_trace)&lt;/code&gt; 返回 &lt;code&gt;dtrace&lt;/code&gt; 或 &lt;code&gt;systemtap&lt;/code&gt; ）时，这才是 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a905cad4e576d62f46400225eb02ef1422c0eb12" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;boolean()&lt;/code&gt;, which is &lt;code&gt;true&lt;/code&gt; if the driver has made itself permanent (and is &lt;strong&gt;not&lt;/strong&gt; a statically linked-in driver), otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">返回一个 &lt;code&gt;boolean()&lt;/code&gt; ，如果驱动程序已使其成为永久驱动程序（并且&lt;strong&gt;不是&lt;/strong&gt;静态链接的驱动程序），则为 &lt;code&gt;true&lt;/code&gt; ，否则为 &lt;code&gt;false&lt;/code&gt; 。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2ca7493b9ffd9be9014ac0512766d56dd26c9312" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;boolean()&lt;/code&gt;, which is &lt;code&gt;true&lt;/code&gt; if the driver is a statically linked-in one, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">返回一个 &lt;code&gt;boolean()&lt;/code&gt; ，如果驱动程序是静态链接的，则为 &lt;code&gt;true&lt;/code&gt; ，否则为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3234c4a766711d5c57912c3b50d0f182fa16108f" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;file_info&lt;/code&gt; record from the file system object specified by &lt;code&gt;Name&lt;/code&gt; or &lt;code&gt;Handle&lt;/code&gt;. See &lt;code&gt;file:read_file_info/2&lt;/code&gt; for information about the record.</source>
          <target state="translated">从 &lt;code&gt;Name&lt;/code&gt; 或 &lt;code&gt;Handle&lt;/code&gt; 指定的文件系统对象返回 &lt;code&gt;file_info&lt;/code&gt; 记录。有关该记录的信息，请参见 &lt;code&gt;file:read_file_info/2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f6543572ba044682da2942e18f0b4cfed7fb8712" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;file_info&lt;/code&gt; record from the symbolic link specified by &lt;code&gt;Name&lt;/code&gt; or &lt;code&gt;Handle&lt;/code&gt;. See &lt;code&gt;file:read_link_info/2&lt;/code&gt; for information about the record.</source>
          <target state="translated">从 &lt;code&gt;Name&lt;/code&gt; 或 &lt;code&gt;Handle&lt;/code&gt; 指定的符号链接返回一个 &lt;code&gt;file_info&lt;/code&gt; 记录。有关该记录的信息，请参见 &lt;code&gt;file:read_link_info/2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="99fc75484cbf5300077871a453cc781348fc6e5e" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;hostent&lt;/code&gt; record for the host with the specified address.</source>
          <target state="translated">返回 &lt;code&gt;hostent&lt;/code&gt; 与指定地址的主机记录。</target>
        </trans-unit>
        <trans-unit id="de7444ab2a8e88af314b25b1e3fdd3d968d39b73" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;hostent&lt;/code&gt; record for the host with the specified hostname.</source>
          <target state="translated">返回 &lt;code&gt;hostent&lt;/code&gt; 具有指定主机名的主机记录。</target>
        </trans-unit>
        <trans-unit id="10fa45c621f5400516d43f36bc7ca182b157e17e" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;hostent&lt;/code&gt; record for the host with the specified name, restricted to the specified address family.</source>
          <target state="translated">返回一个 &lt;code&gt;hostent&lt;/code&gt; 与指定名称的主机，仅限于指定的地址族纪录。</target>
        </trans-unit>
        <trans-unit id="bd72681d770b7e4e9977496e81c32f763b668a12" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;unique reference&lt;/code&gt;. The reference is unique among connected nodes.</source>
          <target state="translated">返回 &lt;code&gt;unique reference&lt;/code&gt; 。该参考在连接的节点之间是唯一的。</target>
        </trans-unit>
        <trans-unit id="b36032265fcec0bef9af51bfec131f495b09dfb7" translate="yes" xml:space="preserve">
          <source>Returns a Query List Comprehension (QLC) query handle, see the &lt;code&gt;qlc(3)&lt;/code&gt; manual page in STDLIB. The module &lt;code&gt;qlc&lt;/code&gt; implements a query language that can use Mnesia tables as sources of data. Calling &lt;code&gt;mnesia:table/1,2&lt;/code&gt; is the means to make the &lt;code&gt;mnesia&lt;/code&gt; table &lt;code&gt;Tab&lt;/code&gt; usable to QLC.</source>
          <target state="translated">返回查询列表理解（QLC）查询句柄，请参阅STDLIB中的 &lt;code&gt;qlc(3)&lt;/code&gt; 手册页。 &lt;code&gt;qlc&lt;/code&gt; 模块实现了一种查询语言，该查询语言可以使用Mnesia表作为数据源。调用 &lt;code&gt;mnesia:table/1,2&lt;/code&gt; 是使 &lt;code&gt;mnesia&lt;/code&gt; 表 &lt;code&gt;Tab&lt;/code&gt; 对QLC可用的方法。</target>
        </trans-unit>
        <trans-unit id="3d75e30374093fa44b81d82bd285b20deb2f8f4d" translate="yes" xml:space="preserve">
          <source>Returns a Query List Comprehension (QLC) query handle. The &lt;code&gt;&lt;a href=&quot;qlc&quot;&gt;qlc(3)&lt;/a&gt;&lt;/code&gt; module provides a query language aimed mainly for Mnesia, but ETS tables, Dets tables, and lists are also recognized by &lt;code&gt;qlc&lt;/code&gt; as sources of data. Calling &lt;code&gt;&lt;a href=&quot;dets#table-1&quot;&gt;dets:table/1,2&lt;/a&gt;&lt;/code&gt; is the means to make Dets table &lt;code&gt;Name&lt;/code&gt; usable to &lt;code&gt;qlc&lt;/code&gt;.</source>
          <target state="translated">返回查询列表理解（QLC）查询句柄。所述 &lt;code&gt;&lt;a href=&quot;qlc&quot;&gt;qlc(3)&lt;/a&gt;&lt;/code&gt; 模块提供主要是针对用于Mnesia的查询语言，但ETS表，dets的表，列表也被认可 &lt;code&gt;qlc&lt;/code&gt; 作为数据源。调用 &lt;code&gt;&lt;a href=&quot;dets#table-1&quot;&gt;dets:table/1,2&lt;/a&gt;&lt;/code&gt; 是使 &lt;code&gt;qlc&lt;/code&gt; 表 &lt;code&gt;Name&lt;/code&gt; 可用于qlc的方法。</target>
        </trans-unit>
        <trans-unit id="4152f2ffd3a419df70ff7a88ee269a4601950fdc" translate="yes" xml:space="preserve">
          <source>Returns a Query List Comprehension (QLC) query handle. The &lt;code&gt;&lt;a href=&quot;qlc&quot;&gt;qlc&lt;/a&gt;&lt;/code&gt; module provides a query language aimed mainly at Mnesia, but ETS tables, Dets tables, and lists are also recognized by QLC as sources of data. Calling &lt;code&gt;table/1,2&lt;/code&gt; is the means to make the ETS table &lt;code&gt;Tab&lt;/code&gt; usable to QLC.</source>
          <target state="translated">返回查询列表理解（QLC）查询句柄。该 &lt;code&gt;&lt;a href=&quot;qlc&quot;&gt;qlc&lt;/a&gt;&lt;/code&gt; 模块主要提供旨在Mnesia的查询语言，但ETS表，限定词表和名单也被QLC公认的数据来源。调用 &lt;code&gt;table/1,2&lt;/code&gt; 是使ETS表 &lt;code&gt;Tab&lt;/code&gt; 对QLC可用的方法。</target>
        </trans-unit>
        <trans-unit id="10758fe7a9d4e24aace34272476abcc894626692" translate="yes" xml:space="preserve">
          <source>Returns a binary containing a string of distribution information formatted as in Erlang crash dumps. For more information, see section &lt;code&gt;How to interpret the Erlang crash dumps&lt;/code&gt; in the User's Guide.</source>
          <target state="translated">返回一个二进制文件，其中包含一串分发信息的字符串，该字符串的格式设置为Erlang故障转储中的格式。有关更多信息，请参见《用户指南》中的&amp;ldquo; &lt;code&gt;How to interpret the Erlang crash dumps&lt;/code&gt; &amp;rdquo;部分。</target>
        </trans-unit>
        <trans-unit id="7f03832e5911f4a8b2b0ede1115a6ec7cec8f20b" translate="yes" xml:space="preserve">
          <source>Returns a binary containing a string of loaded module information formatted as in Erlang crash dumps. For more information, see section &lt;code&gt;How to interpret the Erlang crash dumps&lt;/code&gt; in the User's Guide.</source>
          <target state="translated">返回一个二进制文件，其中包含一串已加载的模块信息，其格式如Erlang故障转储中所示。有关更多信息，请参见《用户指南》中的&amp;ldquo; &lt;code&gt;How to interpret the Erlang crash dumps&lt;/code&gt; &amp;rdquo;部分。</target>
        </trans-unit>
        <trans-unit id="701e0a42ef7e9ed9122ebe8cd8de1066e1f02f93" translate="yes" xml:space="preserve">
          <source>Returns a binary containing a string of miscellaneous system information formatted as in Erlang crash dumps. For more information, see section &lt;code&gt;How to interpret the Erlang crash dumps&lt;/code&gt; in the User's Guide.</source>
          <target state="translated">返回一个二进制文件，其中包含一串其他系统信息，其格式如Erlang故障转储中所示。有关更多信息，请参见《用户指南》中的&amp;ldquo; &lt;code&gt;How to interpret the Erlang crash dumps&lt;/code&gt; &amp;rdquo;部分。</target>
        </trans-unit>
        <trans-unit id="7c1657dc35bf39e4d71d0c418cc1328d158fb2ea" translate="yes" xml:space="preserve">
          <source>Returns a binary containing a string of process and port information formatted as in Erlang crash dumps. For more information, see section &lt;code&gt;How to interpret the Erlang crash dumps&lt;/code&gt; in the User's Guide.</source>
          <target state="translated">返回一个二进制文件，其中包含一连串的进程和端口信息，其格式如Erlang故障转储中所示。有关更多信息，请参见《用户指南》中的&amp;ldquo; &lt;code&gt;How to interpret the Erlang crash dumps&lt;/code&gt; &amp;rdquo;部分。</target>
        </trans-unit>
        <trans-unit id="a1dad94a5ecf5eca59593c02af3bf2b091eec361" translate="yes" xml:space="preserve">
          <source>Returns a binary corresponding to the text representation of &lt;code&gt;Atom&lt;/code&gt;. If &lt;code&gt;Encoding&lt;/code&gt; is &lt;code&gt;latin1&lt;/code&gt;, one byte exists for each character in the text representation. If &lt;code&gt;Encoding&lt;/code&gt; is &lt;code&gt;utf8&lt;/code&gt; or &lt;code&gt;unicode&lt;/code&gt;, the characters are encoded using UTF-8 where characters may require multiple bytes.</source>
          <target state="translated">返回对应于 &lt;code&gt;Atom&lt;/code&gt; 文本表示形式的二进制文件。如果 &lt;code&gt;Encoding&lt;/code&gt; 为 &lt;code&gt;latin1&lt;/code&gt; ，则文本表示形式中的每个字符都有一个字节。如果 &lt;code&gt;Encoding&lt;/code&gt; 是 &lt;code&gt;utf8&lt;/code&gt; 或 &lt;code&gt;unicode&lt;/code&gt; ，则字符使用UTF-8编码，其中字符可能需要多个字节。</target>
        </trans-unit>
        <trans-unit id="c200cdc2f9141d5effe910e8d58a6e4ec440e692" translate="yes" xml:space="preserve">
          <source>Returns a binary corresponding to the text representation of &lt;code&gt;Float&lt;/code&gt; using fixed decimal point formatting. &lt;code&gt;Options&lt;/code&gt; behaves in the same way as &lt;code&gt;&lt;a href=&quot;#float_to_list-2&quot;&gt;float_to_list/2&lt;/a&gt;&lt;/code&gt;. Examples:</source>
          <target state="translated">使用固定的小数点格式返回对应于 &lt;code&gt;Float&lt;/code&gt; 文本表示形式的二进制。 &lt;code&gt;Options&lt;/code&gt; 行为与 &lt;code&gt;&lt;a href=&quot;#float_to_list-2&quot;&gt;float_to_list/2&lt;/a&gt;&lt;/code&gt; 相同。例子：</target>
        </trans-unit>
        <trans-unit id="f46592046bcdbd9525f6604d56c2b8596b486186" translate="yes" xml:space="preserve">
          <source>Returns a binary corresponding to the text representation of &lt;code&gt;Integer&lt;/code&gt; in base &lt;code&gt;Base&lt;/code&gt;, for example:</source>
          <target state="translated">对应于文本表示一个二进制返回 &lt;code&gt;Integer&lt;/code&gt; 在碱 &lt;code&gt;Base&lt;/code&gt; ，例如：</target>
        </trans-unit>
        <trans-unit id="aafadebaa2d529b4bd803af14b18309ed02c2775" translate="yes" xml:space="preserve">
          <source>Returns a binary corresponding to the text representation of &lt;code&gt;Integer&lt;/code&gt;, for example:</source>
          <target state="translated">返回与 &lt;code&gt;Integer&lt;/code&gt; 的文本表示形式对应的二进制文件，例如：</target>
        </trans-unit>
        <trans-unit id="b62eb5a41f5a40804be1186f29dee7dcb8e5989b" translate="yes" xml:space="preserve">
          <source>Returns a binary data object that is the result of encoding &lt;code&gt;Term&lt;/code&gt; according to the &lt;code&gt;Erlang external term format.&lt;/code&gt;</source>
          <target state="translated">返回一个二进制数据对象，该对象是根据 &lt;code&gt;Erlang external term format.&lt;/code&gt; 对 &lt;code&gt;Term&lt;/code&gt; 进行编码的结果。</target>
        </trans-unit>
        <trans-unit id="02909a2663a155daa84e3263ffafb2ec37fb6f65" translate="yes" xml:space="preserve">
          <source>Returns a binary data object that is the result of encoding &lt;code&gt;Term&lt;/code&gt; according to the Erlang external term format.</source>
          <target state="translated">返回一个二进制数据对象，该对象是根据Erlang外部术语格式对 &lt;code&gt;Term&lt;/code&gt; 进行编码的结果。</target>
        </trans-unit>
        <trans-unit id="7690a87ef8a7aaa5bf863fabf7faebcbe41261ba" translate="yes" xml:space="preserve">
          <source>Returns a binary representing the MD5 checksum of the module. If the module has native code loaded, this will be the MD5 of the native code, not the BEAM bytecode.</source>
          <target state="translated">返回代表模块MD5校验和的二进制值。如果模块加载了本地代码,则返回本地代码的MD5,而不是BEAM的字节码。</target>
        </trans-unit>
        <trans-unit id="2dbd94b2a6a83030b3d8619baf1870a3078e9be9" translate="yes" xml:space="preserve">
          <source>Returns a binary that is made from the integers and binaries in &lt;code&gt;IoList&lt;/code&gt;, for example:</source>
          <target state="translated">返回一个由 &lt;code&gt;IoList&lt;/code&gt; 中的整数和二进制数组成的二进制数，例如：</target>
        </trans-unit>
        <trans-unit id="7dda80173828f0945e6862ada4fc4c763759686d" translate="yes" xml:space="preserve">
          <source>Returns a binary that is made from the integers and binaries in &lt;code&gt;IoListOrBinary&lt;/code&gt;, for example:</source>
          <target state="translated">返回一个由 &lt;code&gt;IoListOrBinary&lt;/code&gt; 中的整数和二进制数组成的二进制数，例如：</target>
        </trans-unit>
        <trans-unit id="02ce40de9366f7d68b862c64ceaaff27b0ca567d" translate="yes" xml:space="preserve">
          <source>Returns a bitstring that is made from the integers and bitstrings in &lt;code&gt;BitstringList&lt;/code&gt;. (The last tail in &lt;code&gt;BitstringList&lt;/code&gt; is allowed to be a bitstring.) Example:</source>
          <target state="translated">返回由 &lt;code&gt;BitstringList&lt;/code&gt; 中的整数和位串组成的位串。（允许 &lt;code&gt;BitstringList&lt;/code&gt; 中的最后一个尾部为位串。）示例：</target>
        </trans-unit>
        <trans-unit id="f5adc61340a580263953283d1fa8186d7bed61f6" translate="yes" xml:space="preserve">
          <source>Returns a boolean value indicating whether &lt;code&gt;&lt;a href=&quot;time_correction#Time_Correction&quot;&gt;time correction&lt;/a&gt;&lt;/code&gt; is enabled or not.</source>
          <target state="translated">返回指示是否启用 &lt;code&gt;&lt;a href=&quot;time_correction#Time_Correction&quot;&gt;time correction&lt;/a&gt;&lt;/code&gt; 的布尔值。</target>
        </trans-unit>
        <trans-unit id="50d1a22052c4241fe5d82e0b202f513432bd9a9f" translate="yes" xml:space="preserve">
          <source>Returns a character list that represents &lt;code&gt;Data&lt;/code&gt; formatted in accordance with &lt;code&gt;Format&lt;/code&gt; in the same way as &lt;code&gt;&lt;a href=&quot;#fwrite-2&quot;&gt;fwrite/2&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#format-2&quot;&gt;format/2&lt;/a&gt;&lt;/code&gt;, but takes an extra argument, a list of options.</source>
          <target state="translated">返回一个字符列表，该列表表示以与 &lt;code&gt;&lt;a href=&quot;#fwrite-2&quot;&gt;fwrite/2&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;#format-2&quot;&gt;format/2&lt;/a&gt;&lt;/code&gt; 相同的方式按照 &lt;code&gt;Format&lt;/code&gt; 格式设置的 &lt;code&gt;Data&lt;/code&gt; ，但带有一个额外的参数，即选项列表。</target>
        </trans-unit>
        <trans-unit id="9a74d72ea023ac0f5f5818690811ff4e5c7430c9" translate="yes" xml:space="preserve">
          <source>Returns a character list that represents &lt;code&gt;Data&lt;/code&gt; formatted in accordance with &lt;code&gt;Format&lt;/code&gt;. For a detailed description of the available formatting options, see &lt;code&gt;&lt;a href=&quot;io#fwrite-1&quot;&gt;io:fwrite/1,2,3&lt;/a&gt;&lt;/code&gt;. If the format string or argument list contains an error, a fault is generated.</source>
          <target state="translated">返回一个字符列表，该列表表示根据 &lt;code&gt;Format&lt;/code&gt; 格式化的 &lt;code&gt;Data&lt;/code&gt; 。有关可用格式选项的详细说明，请参见 &lt;code&gt;&lt;a href=&quot;io#fwrite-1&quot;&gt;io:fwrite/1,2,3&lt;/a&gt;&lt;/code&gt; 。如果格式字符串或参数列表包含错误，则会生成错误。</target>
        </trans-unit>
        <trans-unit id="3acd8ddbcc99cb042f913dc83212b95ed1cb771d" translate="yes" xml:space="preserve">
          <source>Returns a character list that represents &lt;code&gt;Term&lt;/code&gt;. Option &lt;code&gt;Depth&lt;/code&gt; controls the depth of the structures written. When the specified depth is reached, everything below this level is replaced by &quot;&lt;code&gt;...&lt;/code&gt;&quot;. &lt;code&gt;Depth&lt;/code&gt; defaults to -1, which means no limitation. Option &lt;code&gt;CharsLimit&lt;/code&gt; puts a soft limit on the number of characters returned. When the number of characters is reached, remaining structures are replaced by &quot;&lt;code&gt;...&lt;/code&gt;&quot;. &lt;code&gt;CharsLimit&lt;/code&gt; defaults to -1, which means no limit on the number of characters returned.</source>
          <target state="translated">返回表示 &lt;code&gt;Term&lt;/code&gt; 的字符列表。选项 &lt;code&gt;Depth&lt;/code&gt; 控制写入的结构的深度。当达到指定深度时，此级别以下的所有内容均由&amp;ldquo; &lt;code&gt;...&lt;/code&gt; &amp;rdquo; 代替。 &lt;code&gt;Depth&lt;/code&gt; 默认为-1，表示没有限制。选项 &lt;code&gt;CharsLimit&lt;/code&gt; 对返回的字符数设置了软限制。当达到字符数时，其余结构将替换为&amp;ldquo; &lt;code&gt;...&lt;/code&gt; &amp;rdquo;。 &lt;code&gt;CharsLimit&lt;/code&gt; 默认为-1，这意味着返回的字符数没有限制。</target>
        </trans-unit>
        <trans-unit id="7515af71865382538c9b621bc97880e10cea729c" translate="yes" xml:space="preserve">
          <source>Returns a character list that represents a new line character.</source>
          <target state="translated">返回一个代表新行字符的字符列表。</target>
        </trans-unit>
        <trans-unit id="9837e9f3695bc3f529cc76c8333474205016bf54" translate="yes" xml:space="preserve">
          <source>Returns a complete list of keys, in any order, which resides within &lt;code&gt;Map&lt;/code&gt;.</source>
          <target state="translated">以任意顺序返回位于 &lt;code&gt;Map&lt;/code&gt; 内的键的完整列表。</target>
        </trans-unit>
        <trans-unit id="a8d07324a8f857482b575ffdf8a5133ff3cd3086" translate="yes" xml:space="preserve">
          <source>Returns a complete list of values, in arbitrary order, contained in map &lt;code&gt;Map&lt;/code&gt;.</source>
          <target state="translated">返回值的完整列表，以任意顺序，包含的地图 &lt;code&gt;Map&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="85b8ca0c9892ea474287d876db824903003ce54e" translate="yes" xml:space="preserve">
          <source>Returns a copy of &lt;code&gt;List1&lt;/code&gt; where the first element matching &lt;code&gt;Elem&lt;/code&gt; is deleted, if there is such an element.</source>
          <target state="translated">返回 &lt;code&gt;List1&lt;/code&gt; 的副本，其中删除了与 &lt;code&gt;Elem&lt;/code&gt; 匹配的第一个元素（如果有）。</target>
        </trans-unit>
        <trans-unit id="700b0d9b0fdb56ec10ab211365995c4237a52e77" translate="yes" xml:space="preserve">
          <source>Returns a copy of &lt;code&gt;TupleList1&lt;/code&gt; where the first occurrence of a &lt;code&gt;T&lt;/code&gt; tuple whose &lt;code&gt;N&lt;/code&gt;th element compares equal to &lt;code&gt;Key&lt;/code&gt; is replaced with &lt;code&gt;NewTuple&lt;/code&gt;, if there is such a tuple &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;TupleList1&lt;/code&gt; 的副本，如果存在 &lt;code&gt;T&lt;/code&gt; 个元组T，则该元组的第 &lt;code&gt;N&lt;/code&gt; 个元素与 &lt;code&gt;Key&lt;/code&gt; 相比较的 &lt;code&gt;T&lt;/code&gt; 元组的第一个匹配项将被 &lt;code&gt;NewTuple&lt;/code&gt; 替换。</target>
        </trans-unit>
        <trans-unit id="7074df7afcc8a3fe9972b4dcffcd75e05c47d4ad" translate="yes" xml:space="preserve">
          <source>Returns a copy of &lt;code&gt;TupleList1&lt;/code&gt; where the first occurrence of a tuple &lt;code&gt;T&lt;/code&gt; whose &lt;code&gt;N&lt;/code&gt;th element compares equal to &lt;code&gt;Key&lt;/code&gt; is replaced with &lt;code&gt;NewTuple&lt;/code&gt;, if there is such a tuple &lt;code&gt;T&lt;/code&gt;. If there is no such tuple &lt;code&gt;T&lt;/code&gt;, a copy of &lt;code&gt;TupleList1&lt;/code&gt; where [&lt;code&gt;NewTuple&lt;/code&gt;] has been appended to the end is returned.</source>
          <target state="translated">返回 &lt;code&gt;TupleList1&lt;/code&gt; 的副本，如果存在这样的元组 &lt;code&gt;T&lt;/code&gt; ，则将第 &lt;code&gt;N&lt;/code&gt; 个元素与 &lt;code&gt;Key&lt;/code&gt; 相比较的元组 &lt;code&gt;T&lt;/code&gt; 的第一次出现替换为 &lt;code&gt;NewTuple&lt;/code&gt; 。如果没有这样的元组 &lt;code&gt;T&lt;/code&gt; ，则返回 &lt;code&gt;NewTuple&lt;/code&gt; 的副本，该副本的 &lt;code&gt;TupleList1&lt;/code&gt; 附加了[ NewTuple ]。</target>
        </trans-unit>
        <trans-unit id="169e3b3fcbb9198de6cf8a879d88e8f319d03c21" translate="yes" xml:space="preserve">
          <source>Returns a copy of &lt;code&gt;TupleList1&lt;/code&gt; where the first occurrence of a tuple whose &lt;code&gt;N&lt;/code&gt;th element compares equal to &lt;code&gt;Key&lt;/code&gt; is deleted, if there is such a tuple.</source>
          <target state="translated">返回 &lt;code&gt;TupleList1&lt;/code&gt; 的副本，如果存在该元组，则删除第一个出现的元组，该元组的第 &lt;code&gt;N&lt;/code&gt; 个元素与 &lt;code&gt;Key&lt;/code&gt; 相比较。</target>
        </trans-unit>
        <trans-unit id="380d9bbd8030f3784e9e84eeac3cf89d2d38cc45" translate="yes" xml:space="preserve">
          <source>Returns a descriptive string in English of an error tuple returned by &lt;code&gt;yecc:file/1,2&lt;/code&gt;. This function is mainly used by the compiler invoking Yecc.</source>
          <target state="translated">返回由 &lt;code&gt;yecc:file/1,2&lt;/code&gt; 返回的错误元组的英语描述性字符串。该函数主要由调用Yecc的编译器使用。</target>
        </trans-unit>
        <trans-unit id="ea47de793fe37ea3966e30287cdccc9610f6a216" translate="yes" xml:space="preserve">
          <source>Returns a descriptive string in English of an error tuple returned by some of the functions of the &lt;code&gt;qlc&lt;/code&gt; module or the parse transform. This function is mainly used by the compiler invoking the parse transform.</source>
          <target state="translated">返回由 &lt;code&gt;qlc&lt;/code&gt; 模块或parse转换的某些函数返回的错误元组的英语描述性字符串。该函数主要由编译器调用解析转换使用。</target>
        </trans-unit>
        <trans-unit id="e93141b18c3c27b104fa1cc5138d9897a358d8fc" translate="yes" xml:space="preserve">
          <source>Returns a diagnostic error string. For possible POSIX values and corresponding strings, see section &lt;code&gt;&lt;a href=&quot;#error_codes&quot;&gt;POSIX Error Codes&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回诊断错误字符串。有关可能的POSIX值和相应的字符串，请参见 &lt;code&gt;&lt;a href=&quot;#error_codes&quot;&gt;POSIX Error Codes&lt;/a&gt;&lt;/code&gt; 部分。</target>
        </trans-unit>
        <trans-unit id="f9e192d9437478b049a8b9aa1bad050415102360" translate="yes" xml:space="preserve">
          <source>Returns a flattened version of &lt;code&gt;DeepList&lt;/code&gt; with tail &lt;code&gt;Tail&lt;/code&gt; appended.</source>
          <target state="translated">返回带有尾部 &lt;code&gt;Tail&lt;/code&gt; 的 &lt;code&gt;DeepList&lt;/code&gt; 的展平版本。</target>
        </trans-unit>
        <trans-unit id="47da8955925179f50f9dfa6cb72f5900bef0a615" translate="yes" xml:space="preserve">
          <source>Returns a flattened version of &lt;code&gt;DeepList&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;DeepList&lt;/code&gt; 的展平版本。</target>
        </trans-unit>
        <trans-unit id="bf51931597afcea360993522d0f3008415edcdb8" translate="yes" xml:space="preserve">
          <source>Returns a float by converting &lt;code&gt;Number&lt;/code&gt; to a float, for example:</source>
          <target state="translated">通过将 &lt;code&gt;Number&lt;/code&gt; 转换为浮点数来返回浮点数，例如：</target>
        </trans-unit>
        <trans-unit id="edd12ee1c17bec99d0c7359851a155d5deadfbb6" translate="yes" xml:space="preserve">
          <source>Returns a function, the domain of which is &lt;code&gt;Set1&lt;/code&gt;. The value of an element of the domain is the result of applying &lt;code&gt;SetFun&lt;/code&gt; to the element.</source>
          <target state="translated">返回一个函数，其域为 &lt;code&gt;Set1&lt;/code&gt; 。域元素的值是对元素应用 &lt;code&gt;SetFun&lt;/code&gt; 的结果。</target>
        </trans-unit>
        <trans-unit id="2d30676cc7fc6228d2bebb6faf14ea1f72ae9ec1" translate="yes" xml:space="preserve">
          <source>Returns a key-value list with information about the daemon.</source>
          <target state="translated">返回一个包含守护进程信息的键值列表。</target>
        </trans-unit>
        <trans-unit id="e600b971199809d7a45269d85fb5dd13e5a69264" translate="yes" xml:space="preserve">
          <source>Returns a key-value list, where the keys are the different types of algorithms and the values are the algorithms themselves.</source>
          <target state="translated">返回一个键值列表,其中键是不同类型的算法,值是算法本身。</target>
        </trans-unit>
        <trans-unit id="b2d9617255f0ee4bcd0e04faa828b16902d2f770" translate="yes" xml:space="preserve">
          <source>Returns a list (a dictionary) containing information about the agent. Information includes loaded MIBs, registered sub-agents, some information about the memory allocation.</source>
          <target state="translated">返回一个包含代理信息的列表(一个字典)。信息包括加载的MIB、注册的子代理、内存分配的一些信息。</target>
        </trans-unit>
        <trans-unit id="95b90dff177d50cab52043268bf45b0241a8f703" translate="yes" xml:space="preserve">
          <source>Returns a list (a dictionary) containing information about the manager. Information includes statistics counters, miscellaneous info about each process (e.g. memory allocation), and so on.</source>
          <target state="translated">返回一个包含管理器信息的列表(一个字典)。信息包括统计计数器、每个进程的杂项信息(如内存分配)等。</target>
        </trans-unit>
        <trans-unit id="cbfbf6b40ded09b3040d10ffc70b9e38cad6903e" translate="yes" xml:space="preserve">
          <source>Returns a list containing &lt;code&gt;InfoTuple&lt;/code&gt;s with miscellaneous information about the process identified by &lt;code&gt;Pid&lt;/code&gt;, or &lt;code&gt;undefined&lt;/code&gt; if the process is not alive.</source>
          <target state="translated">返回包含列表 &lt;code&gt;InfoTuple&lt;/code&gt; s的有关鉴定过程的各种信息 &lt;code&gt;Pid&lt;/code&gt; ，或 &lt;code&gt;undefined&lt;/code&gt; 如果进程不活。</target>
        </trans-unit>
        <trans-unit id="3563a46b724960f3efe2b2af847c70a7a360a7dc" translate="yes" xml:space="preserve">
          <source>Returns a list containing &lt;code&gt;N&lt;/code&gt; copies of term &lt;code&gt;Elem&lt;/code&gt;.</source>
          <target state="translated">返回一个列表，其中包含 &lt;code&gt;N&lt;/code&gt; 个术语 &lt;code&gt;Elem&lt;/code&gt; 的副本。</target>
        </trans-unit>
        <trans-unit id="cc020fc059b80f3fa0c55039966d437233a23d00" translate="yes" xml:space="preserve">
          <source>Returns a list containing information about the global groups. Each list element is a tuple. The order of the tuples is undefined.</source>
          <target state="translated">返回一个包含全局组信息的列表。每个列表元素是一个元组。元组的顺序没有定义。</target>
        </trans-unit>
        <trans-unit id="951e1381c9f14d041387253dd8d66f9aa28670ce" translate="yes" xml:space="preserve">
          <source>Returns a list containing information about the source of &lt;code&gt;OS monotonic time&lt;/code&gt; that is used by the runtime system.</source>
          <target state="translated">返回一个列表，其中包含有关运行时系统使用的 &lt;code&gt;OS monotonic time&lt;/code&gt; 源的信息。</target>
        </trans-unit>
        <trans-unit id="ddc00d646108eeca88c90d7fb6dbb69928931016" translate="yes" xml:space="preserve">
          <source>Returns a list containing information about the source of &lt;code&gt;OS system time&lt;/code&gt; that is used by the runtime system.</source>
          <target state="translated">返回一个列表，其中包含有关运行时系统使用的 &lt;code&gt;OS system time&lt;/code&gt; 源的信息。</target>
        </trans-unit>
        <trans-unit id="0b9c262ea9805bcbeef0b916aaf39f57234d691c" translate="yes" xml:space="preserve">
          <source>Returns a list containing miscellaneous information about the emulators internal I/O checking. Notice that the content of the returned list can vary between platforms and over time. It is only guaranteed that a list is returned.</source>
          <target state="translated">返回一个包含仿真器内部I/O检查的杂项信息的列表。请注意,返回的列表的内容可能会随着平台和时间的不同而变化。只保证返回一个列表。</target>
        </trans-unit>
        <trans-unit id="fefe64ec8c64c2e0bd5eb488a17daca003e4f2bb" translate="yes" xml:space="preserve">
          <source>Returns a list containing some information about a BEAM file as tuples &lt;code&gt;{Item, Info}&lt;/code&gt;:</source>
          <target state="translated">返回一个列表，其中包含有关BEAM文件的一些信息，作为元组 &lt;code&gt;{Item, Info}&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="11917c8d8150c5d519465c4e301c4f065886e9fd" translate="yes" xml:space="preserve">
          <source>Returns a list containing the &lt;code&gt;{Item, Value}&lt;/code&gt; tuples for all other items, or returns &lt;code&gt;false&lt;/code&gt; if no tracing is active for this function.</source>
          <target state="translated">返回一个包含所有其他项目的 &lt;code&gt;{Item, Value}&lt;/code&gt; 元组的列表，如果此函数没有活动的跟踪，则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e45792a08459d1264971c1799cfec732179dbf0b" translate="yes" xml:space="preserve">
          <source>Returns a list containing the sorted elements of &lt;code&gt;List1&lt;/code&gt; where all except the first element of the elements comparing equal according to the &lt;code&gt;&lt;a href=&quot;#ordering_function&quot;&gt;ordering function&lt;/a&gt;&lt;/code&gt;&lt;code&gt;Fun&lt;/code&gt; have been deleted. &lt;code&gt;Fun(A, B)&lt;/code&gt; is to return &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;A&lt;/code&gt; compares less than or equal to &lt;code&gt;B&lt;/code&gt; in the ordering, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">返回一个包含 &lt;code&gt;List1&lt;/code&gt; 排序元素的列表，其中删除了除根据 &lt;code&gt;&lt;a href=&quot;#ordering_function&quot;&gt;ordering function&lt;/a&gt;&lt;/code&gt; &lt;code&gt;Fun&lt;/code&gt; 相等的元素的第一个元素以外的所有元素。如果 &lt;code&gt;A&lt;/code&gt; 在排序中小于或等于 &lt;code&gt;B&lt;/code&gt; ，则 &lt;code&gt;Fun(A, B)&lt;/code&gt; 返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d8fe3b09996ca76df4bbe74b69277d528ae8ad3e" translate="yes" xml:space="preserve">
          <source>Returns a list containing the sorted elements of &lt;code&gt;List1&lt;/code&gt; where all except the first element of the elements comparing equal have been deleted.</source>
          <target state="translated">返回一个包含 &lt;code&gt;List1&lt;/code&gt; 排序后的元素的列表，其中除第一个相等的元素之外的所有元素均已删除。</target>
        </trans-unit>
        <trans-unit id="4ac0dc5f24e09780cafeb9a333d3e1b9d5895862" translate="yes" xml:space="preserve">
          <source>Returns a list containing the sorted elements of &lt;code&gt;List1&lt;/code&gt;, according to the &lt;code&gt;&lt;a href=&quot;#ordering_function&quot;&gt;ordering function&lt;/a&gt;&lt;/code&gt;&lt;code&gt;Fun&lt;/code&gt;. &lt;code&gt;Fun(A, B)&lt;/code&gt; is to return &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;A&lt;/code&gt; compares less than or equal to &lt;code&gt;B&lt;/code&gt; in the ordering, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">根据 &lt;code&gt;&lt;a href=&quot;#ordering_function&quot;&gt;ordering function&lt;/a&gt;&lt;/code&gt; &lt;code&gt;Fun&lt;/code&gt; 返回一个包含 &lt;code&gt;List1&lt;/code&gt; 排序元素的列表。如果 &lt;code&gt;A&lt;/code&gt; 在排序中小于或等于 &lt;code&gt;B&lt;/code&gt; ，则 &lt;code&gt;Fun(A, B)&lt;/code&gt; 返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8a938a1e5e68a22bffcdd498e806765af6aa24d0" translate="yes" xml:space="preserve">
          <source>Returns a list containing the sorted elements of &lt;code&gt;List1&lt;/code&gt;.</source>
          <target state="translated">返回包含 &lt;code&gt;List1&lt;/code&gt; 的排序元素的列表。</target>
        </trans-unit>
        <trans-unit id="6f4b4280d08d92442ec94e1625e4659624668a58" translate="yes" xml:space="preserve">
          <source>Returns a list containing the sorted elements of list &lt;code&gt;TupleList1&lt;/code&gt; where all except the first tuple of the tuples comparing equal have been deleted. Sorting is performed on the &lt;code&gt;N&lt;/code&gt;th element of the tuples.</source>
          <target state="translated">返回一个包含列表 &lt;code&gt;TupleList1&lt;/code&gt; 的已排序元素的列表，其中除相等的元组的第一个元组之外的所有元组都已删除。对元组的第 &lt;code&gt;N&lt;/code&gt; 个元素进行排序。</target>
        </trans-unit>
        <trans-unit id="9184378fb1930d165bcaac2d0fb3cf34216f6720" translate="yes" xml:space="preserve">
          <source>Returns a list containing the sorted elements of list &lt;code&gt;TupleList1&lt;/code&gt;. Sorting is performed on the &lt;code&gt;N&lt;/code&gt;th element of the tuples. The sort is stable.</source>
          <target state="translated">返回一个包含列表 &lt;code&gt;TupleList1&lt;/code&gt; 的排序元素的列表。对元组的第 &lt;code&gt;N&lt;/code&gt; 个元素进行排序。排序是稳定的。</target>
        </trans-unit>
        <trans-unit id="f4cb2e3f7a02d479aa9a83f602a2f6ab8a517f62" translate="yes" xml:space="preserve">
          <source>Returns a list containing tuples with information about &lt;code&gt;Port&lt;/code&gt;, or &lt;code&gt;undefined&lt;/code&gt; if the port is not open. The order of the tuples is undefined, and all the tuples are not mandatory. If the port is closed and the calling process was previously linked to the port, the exit signal from the port is guaranteed to be delivered before &lt;code&gt;port_info/1&lt;/code&gt; returns &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">返回一个包含元组的列表，其中元组包含有关 &lt;code&gt;Port&lt;/code&gt; 的信息；如果端口未打开，则返回 &lt;code&gt;undefined&lt;/code&gt; 。元组的顺序是不确定的，并且所有元组不是强制性的。如果端口是关闭的，并且调用过程先前已链接到该端口，则可以保证在 &lt;code&gt;port_info/1&lt;/code&gt; 返回 &lt;code&gt;undefined&lt;/code&gt; 之前传递来自该端口的退出信号。</target>
        </trans-unit>
        <trans-unit id="b6dea5e836421666324d435b4db8d6bf6eebcd0f" translate="yes" xml:space="preserve">
          <source>Returns a list corresponding to &lt;code&gt;Tuple&lt;/code&gt;. &lt;code&gt;Tuple&lt;/code&gt; can contain any Erlang terms. Example:</source>
          <target state="translated">返回对应于 &lt;code&gt;Tuple&lt;/code&gt; 的列表。 &lt;code&gt;Tuple&lt;/code&gt; 可以包含任何Erlang术语。例：</target>
        </trans-unit>
        <trans-unit id="5e85c7d8f3efd3892bf025810675bca230ae96c2" translate="yes" xml:space="preserve">
          <source>Returns a list corresponding to the specified format string, where control sequences have been replaced with corresponding tuples. This list can be passed to:</source>
          <target state="translated">返回一个与指定格式字符串相对应的列表,其中控制序列已被相应的元组所取代。这个列表可以传递给</target>
        </trans-unit>
        <trans-unit id="d433f5cf2ede44b50d5e4bfea7a196ae3ff826ba" translate="yes" xml:space="preserve">
          <source>Returns a list describing the default garbage collection settings. A process spawned on the local node by a &lt;code&gt;spawn&lt;/code&gt; or &lt;code&gt;spawn_link&lt;/code&gt; uses these garbage collection settings. The default settings can be changed by using &lt;code&gt;&lt;a href=&quot;#system_flag-2&quot;&gt;erlang:system_flag/2&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;&lt;a href=&quot;#spawn_opt-4&quot;&gt;spawn_opt/2,3,4&lt;/a&gt;&lt;/code&gt; can spawn a process that does not use the default settings.</source>
          <target state="translated">返回描述默认垃圾收集设置的列表。由 &lt;code&gt;spawn&lt;/code&gt; 或 &lt;code&gt;spawn_link&lt;/code&gt; 在本地节点上生成的进程使用这些垃圾收集设置。可以使用 &lt;code&gt;&lt;a href=&quot;#system_flag-2&quot;&gt;erlang:system_flag/2&lt;/a&gt;&lt;/code&gt; 更改默认设置。 &lt;code&gt;&lt;a href=&quot;#spawn_opt-4&quot;&gt;spawn_opt/2,3,4&lt;/a&gt;&lt;/code&gt; 可以生成不使用默认设置的进程。</target>
        </trans-unit>
        <trans-unit id="0dc9856d46bf6a12f54a618c6625b0ec80a8b5df" translate="yes" xml:space="preserve">
          <source>Returns a list in which all the sublists of &lt;code&gt;ListOfLists&lt;/code&gt; have been appended.</source>
          <target state="translated">返回一个列表，其中 &lt;code&gt;ListOfLists&lt;/code&gt; 的所有子列表均已附加。</target>
        </trans-unit>
        <trans-unit id="88c6630a9f871d489e61eaad0e38eee679856290" translate="yes" xml:space="preserve">
          <source>Returns a list of 2-tuples containing interface names and the interface addresses. &lt;code&gt;Ifname&lt;/code&gt; is a Unicode string. &lt;code&gt;Hwaddr&lt;/code&gt; is hardware dependent, for example, on Ethernet interfaces it is the 6-byte Ethernet address (MAC address (EUI-48 address)).</source>
          <target state="translated">返回一个包含接口名称和接口地址的2元组列表。 &lt;code&gt;Ifname&lt;/code&gt; 是Unicode字符串。 &lt;code&gt;Hwaddr&lt;/code&gt; 取决于硬件，例如，在以太网接口上，它是6字节的以太网地址（MAC地址（EUI-48地址））。</target>
        </trans-unit>
        <trans-unit id="3f71c4452a368c45d083def80d770a73c29034a6" translate="yes" xml:space="preserve">
          <source>Returns a list of &lt;code&gt;&lt;a href=&quot;#components&quot;&gt;connected components.&lt;/a&gt;&lt;/code&gt;. Each component is represented by its vertices. The order of the vertices and the order of the components are arbitrary. Each vertex of digraph &lt;code&gt;Digraph&lt;/code&gt; occurs in exactly one component.</source>
          <target state="translated">返回已 &lt;code&gt;&lt;a href=&quot;#components&quot;&gt;connected components.&lt;/a&gt;&lt;/code&gt; 的列表。。每个分量均由其顶点表示。顶点的顺序和分量的顺序是任意的。有向 &lt;code&gt;Digraph&lt;/code&gt; 每个顶点有向图恰好在一个分量中。</target>
        </trans-unit>
        <trans-unit id="5da3e3b8a94bc791abc816f9346bcad6a1eea10d" translate="yes" xml:space="preserve">
          <source>Returns a list of &lt;code&gt;&lt;a href=&quot;#strong_components&quot;&gt;strongly connected components&lt;/a&gt;&lt;/code&gt;. Each strongly component is represented by its vertices. The order of the vertices and the order of the components are arbitrary. Each vertex of digraph &lt;code&gt;Digraph&lt;/code&gt; occurs in exactly one strong component.</source>
          <target state="translated">返回 &lt;code&gt;&lt;a href=&quot;#strong_components&quot;&gt;strongly connected components&lt;/a&gt;&lt;/code&gt; 的列表。每个强分量均由其顶点表示。顶点的顺序和分量的顺序是任意的。有向 &lt;code&gt;Digraph&lt;/code&gt; 每个顶点有向图都恰好在一个强成分中。</target>
        </trans-unit>
        <trans-unit id="7bb091d4a5b810b53a23fa41c17a3361cbf0d2a3" translate="yes" xml:space="preserve">
          <source>Returns a list of &lt;code&gt;&lt;a href=&quot;#strong_components&quot;&gt;strongly connected components&lt;/a&gt;&lt;/code&gt;. Each strongly component is represented by its vertices. The order of the vertices and the order of the components are arbitrary. Only vertices that are included in some &lt;code&gt;&lt;a href=&quot;#cycle&quot;&gt;cycle&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;Digraph&lt;/code&gt; are returned, otherwise the returned list is equal to that returned by &lt;code&gt;&lt;a href=&quot;#strong_components-1&quot;&gt;strong_components/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;&lt;a href=&quot;#strong_components&quot;&gt;strongly connected components&lt;/a&gt;&lt;/code&gt; 的列表。每个强分量均由其顶点表示。顶点的顺序和分量的顺序是任意的。只有那些包括在一些顶点 &lt;code&gt;&lt;a href=&quot;#cycle&quot;&gt;cycle&lt;/a&gt;&lt;/code&gt; 中 &lt;code&gt;Digraph&lt;/code&gt; 返回，否则返回列表等于由归国 &lt;code&gt;&lt;a href=&quot;#strong_components-1&quot;&gt;strong_components/1&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4127df4a91b808c5b3def539a088b05fee89d307" translate="yes" xml:space="preserve">
          <source>Returns a list of &lt;code&gt;&lt;a href=&quot;#undefined_function&quot;&gt;undefined functions&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;&lt;a href=&quot;#undefined_function&quot;&gt;undefined functions&lt;/a&gt;&lt;/code&gt; 的列表。</target>
        </trans-unit>
        <trans-unit id="43db1c1c48f50e3b1d845fdbf19f66279ce2566f" translate="yes" xml:space="preserve">
          <source>Returns a list of &lt;code&gt;Pid&lt;/code&gt;s when multi-scheduling is blocked, otherwise the empty list is returned. The &lt;code&gt;Pid&lt;/code&gt;s in the list represent all the processes currently blocking multi-scheduling. A &lt;code&gt;Pid&lt;/code&gt; occurs only once in the list, even if the corresponding process has blocked multiple times.</source>
          <target state="translated">阻止多调度时，返回 &lt;code&gt;Pid&lt;/code&gt; 的列表，否则返回空列表。列表中的 &lt;code&gt;Pid&lt;/code&gt; 代表当前阻止多调度的所有进程。甲 &lt;code&gt;Pid&lt;/code&gt; 只发生一次在列表中，即使相应的过程已阻止多次。</target>
        </trans-unit>
        <trans-unit id="154f96716f8d883305d6304a997283ae6ee27289" translate="yes" xml:space="preserve">
          <source>Returns a list of &lt;code&gt;Pid&lt;/code&gt;s when normal multi-scheduling is blocked (that is, all normal schedulers but one is blocked), otherwise the empty list is returned. The &lt;code&gt;Pid&lt;/code&gt;s in the list represent all the processes currently blocking normal multi-scheduling. A &lt;code&gt;Pid&lt;/code&gt; occurs only once in the list, even if the corresponding process has blocked multiple times.</source>
          <target state="translated">阻止常规多重调度（即，所有常规调度程序但一个被阻止）时，返回 &lt;code&gt;Pid&lt;/code&gt; 的列表，否则返回空列表。列表中的 &lt;code&gt;Pid&lt;/code&gt; 代表当前阻止常规多调度的所有进程。甲 &lt;code&gt;Pid&lt;/code&gt; 只发生一次在列表中，即使相应的过程已阻止多次。</target>
        </trans-unit>
        <trans-unit id="57e2dcc16a9b139c21ab18285d7e2ad903ce02a4" translate="yes" xml:space="preserve">
          <source>Returns a list of &lt;code&gt;{AttributeName,ValueList}&lt;/code&gt; tuples, where &lt;code&gt;AttributeName&lt;/code&gt; is the name of an attribute, and &lt;code&gt;ValueList&lt;/code&gt; is a list of values. Notice that a given attribute can occur more than once in the list with different values if the attribute occurs more than once in the module.</source>
          <target state="translated">返回 &lt;code&gt;{AttributeName,ValueList}&lt;/code&gt; 元组的列表，其中 &lt;code&gt;AttributeName&lt;/code&gt; 是属性的名称，而 &lt;code&gt;ValueList&lt;/code&gt; 是值的列表。请注意，如果给定的属性在模块中出现的次数超过一次，则该属性可以在列表中以不同的值出现多次。</target>
        </trans-unit>
        <trans-unit id="3c14a6a2c4cce24bfa7ca2ac6c1f8be3f5f25833" translate="yes" xml:space="preserve">
          <source>Returns a list of &lt;code&gt;{Name,Arity}&lt;/code&gt; tuples with all NIF functions in the module.</source>
          <target state="translated">返回包含该模块中所有NIF函数的 &lt;code&gt;{Name,Arity}&lt;/code&gt; 元组的列表。</target>
        </trans-unit>
        <trans-unit id="6b2922594297df0088f8700eeedfe6096fa503c2" translate="yes" xml:space="preserve">
          <source>Returns a list of &lt;code&gt;{Name,Arity}&lt;/code&gt; tuples with all exported functions in the module.</source>
          <target state="translated">返回 &lt;code&gt;{Name,Arity}&lt;/code&gt; 元组的列表，其中包含模块中所有导出的函数。</target>
        </trans-unit>
        <trans-unit id="e8b319b6b888df687485f890d43db6f44b6c4655" translate="yes" xml:space="preserve">
          <source>Returns a list of &lt;code&gt;{Name,Arity}&lt;/code&gt; tuples with all functions in the module.</source>
          <target state="translated">返回 &lt;code&gt;{Name,Arity}&lt;/code&gt; 元组的列表，其中包含模块中的所有函数。</target>
        </trans-unit>
        <trans-unit id="3a7e353b4a88ab38667580701bd694c35c95dbe2" translate="yes" xml:space="preserve">
          <source>Returns a list of &lt;code&gt;{Tag, Value}&lt;/code&gt; pairs describing digraph &lt;code&gt;G&lt;/code&gt;. The following pairs are returned:</source>
          <target state="translated">返回描述图 &lt;code&gt;G&lt;/code&gt; 的 &lt;code&gt;{Tag, Value}&lt;/code&gt; 对的列表。返回以下对：</target>
        </trans-unit>
        <trans-unit id="9c8458d8410a1d0968559a8e0e00b23d4b3ae912" translate="yes" xml:space="preserve">
          <source>Returns a list of &lt;code&gt;{Tag, Value}&lt;/code&gt; pairs describing the log. If a disk log process is running on the current node, that log is used as source of information, otherwise an individual distributed log on some other node is chosen, if such a log exists.</source>
          <target state="translated">返回描述日志的 &lt;code&gt;{Tag, Value}&lt;/code&gt; 对的列表。如果当前节点上正在运行磁盘日志进程，则将该日志用作信息源，否则，如果存在其他日志，则选择某个其他节点上的单个分布式日志。</target>
        </trans-unit>
        <trans-unit id="7bd349713934525fe537ce0807b710e8b7395e7a" translate="yes" xml:space="preserve">
          <source>Returns a list of Erlang modules that are preloaded in the system. As all loading of code is done through the file system, the file system must have been loaded previously. Hence, at least the module &lt;code&gt;init&lt;/code&gt; must be preloaded.</source>
          <target state="translated">返回系统中预装的Erlang模块的列表。由于所有代码加载都是通过文件系统完成的，因此文件系统必须事先已加载。因此，至少必须 &lt;code&gt;init&lt;/code&gt; 模块init。</target>
        </trans-unit>
        <trans-unit id="5fcc0d5751c8ec2b6c807390bfa62c34d0b34a75" translate="yes" xml:space="preserve">
          <source>Returns a list of all &lt;code&gt;&lt;a href=&quot;#in_neighbour&quot;&gt;in-neighbors&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;V&lt;/code&gt; of digraph &lt;code&gt;G&lt;/code&gt;, in some unspecified order.</source>
          <target state="translated">以未指定的顺序返回图 &lt;code&gt;G&lt;/code&gt; 的 &lt;code&gt;V&lt;/code&gt; 的所有 &lt;code&gt;&lt;a href=&quot;#in_neighbour&quot;&gt;in-neighbors&lt;/a&gt;&lt;/code&gt; 的列表。</target>
        </trans-unit>
        <trans-unit id="043c23901cc97ae91b903f980aa30af0b56c3809" translate="yes" xml:space="preserve">
          <source>Returns a list of all &lt;code&gt;&lt;a href=&quot;#out_neighbour&quot;&gt;out-neighbors&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;V&lt;/code&gt; of digraph &lt;code&gt;G&lt;/code&gt;, in some unspecified order.</source>
          <target state="translated">以未指定的顺序返回图 &lt;code&gt;G&lt;/code&gt; 的 &lt;code&gt;V&lt;/code&gt; 的所有 &lt;code&gt;&lt;a href=&quot;#out_neighbour&quot;&gt;out-neighbors&lt;/a&gt;&lt;/code&gt; 的列表。</target>
        </trans-unit>
        <trans-unit id="3df935727cfbfaa9dbe4fe6d8b3b3167c3639cce" translate="yes" xml:space="preserve">
          <source>Returns a list of all IP addresses for &lt;code&gt;Host&lt;/code&gt;. &lt;code&gt;Host&lt;/code&gt; can be an IP address, a single hostname, or a fully qualified hostname.</source>
          <target state="translated">返回 &lt;code&gt;Host&lt;/code&gt; 的所有IP地址的列表。 &lt;code&gt;Host&lt;/code&gt; 可以是IP地址，单个主机名或标准主机名。</target>
        </trans-unit>
        <trans-unit id="1d4364925c788f26b54afc37d6c0865635b11a49" translate="yes" xml:space="preserve">
          <source>Returns a list of all active alarms. This function can only be used when the simple handler is installed.</source>
          <target state="translated">返回所有活动警报的列表。该函数只能在安装了简单处理程序时使用。</target>
        </trans-unit>
        <trans-unit id="4d83a528f29c34ba116c40292488d3eb70934fc5" translate="yes" xml:space="preserve">
          <source>Returns a list of all address/port number pairs for the other end of an association &lt;code&gt;Assoc&lt;/code&gt; of a socket.</source>
          <target state="translated">返回套接字关联 &lt;code&gt;Assoc&lt;/code&gt; 的另一端的所有地址/端口号对的列表。</target>
        </trans-unit>
        <trans-unit id="37943fcff62e0b1a782163b5ddfe2a958601aa47" translate="yes" xml:space="preserve">
          <source>Returns a list of all edges &lt;code&gt;&lt;a href=&quot;#emanate&quot;&gt;emanating&lt;/a&gt;&lt;/code&gt; from &lt;code&gt;V&lt;/code&gt; of digraph &lt;code&gt;G&lt;/code&gt;, in some unspecified order.</source>
          <target state="translated">返回未指定顺序从图 &lt;code&gt;G&lt;/code&gt; 的 &lt;code&gt;V&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#emanate&quot;&gt;emanating&lt;/a&gt;&lt;/code&gt; 的所有边的列表。</target>
        </trans-unit>
        <trans-unit id="79b7f5719a792534470074c560a0cb7fc9e9570b" translate="yes" xml:space="preserve">
          <source>Returns a list of all edges &lt;code&gt;&lt;a href=&quot;#emanate&quot;&gt;emanating&lt;/a&gt;&lt;/code&gt; from or &lt;code&gt;&lt;a href=&quot;#incident&quot;&gt;incident&lt;/a&gt;&lt;/code&gt; on&lt;code&gt;V&lt;/code&gt; of digraph &lt;code&gt;G&lt;/code&gt;, in some unspecified order.</source>
          <target state="translated">返回从图 &lt;code&gt;G&lt;/code&gt; 的 &lt;code&gt;V&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#emanate&quot;&gt;emanating&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;#incident&quot;&gt;incident&lt;/a&gt;&lt;/code&gt; 到图G的V的所有边的列表，并且未指定顺序。</target>
        </trans-unit>
        <trans-unit id="c80e5a2a56fe621893eae2a06e29a521a972cdfb" translate="yes" xml:space="preserve">
          <source>Returns a list of all edges &lt;code&gt;&lt;a href=&quot;#incident&quot;&gt;incident&lt;/a&gt;&lt;/code&gt; on &lt;code&gt;V&lt;/code&gt; of digraph &lt;code&gt;G&lt;/code&gt;, in some unspecified order.</source>
          <target state="translated">返回所有的名单边缘 &lt;code&gt;&lt;a href=&quot;#incident&quot;&gt;incident&lt;/a&gt;&lt;/code&gt; 的 &lt;code&gt;V&lt;/code&gt; 有向图的 &lt;code&gt;G&lt;/code&gt; ，在一些未指定的顺序。</target>
        </trans-unit>
        <trans-unit id="afb64be0e307b3b5bc1ec0959a00f18029bbf9d8" translate="yes" xml:space="preserve">
          <source>Returns a list of all edges of digraph &lt;code&gt;G&lt;/code&gt;, in some unspecified order.</source>
          <target state="translated">以未指定的顺序返回有向图 &lt;code&gt;G&lt;/code&gt; 的所有边的列表。</target>
        </trans-unit>
        <trans-unit id="4f6c580e74f8d38922556a969626a716e24d2e9c" translate="yes" xml:space="preserve">
          <source>Returns a list of all environment variables. Each environment variable is expressed as a single string on the format &lt;code&gt;&quot;VarName=Value&quot;&lt;/code&gt;, where &lt;code&gt;VarName&lt;/code&gt; is the name of the variable and &lt;code&gt;Value&lt;/code&gt; its value.</source>
          <target state="translated">返回所有环境变量的列表。每个环境变量都以 &lt;code&gt;&quot;VarName=Value&quot;&lt;/code&gt; 格式表示为单个字符串，其中 &lt;code&gt;VarName&lt;/code&gt; 是变量的名称，而 &lt;code&gt;Value&lt;/code&gt; 是其值。</target>
        </trans-unit>
        <trans-unit id="93bb4adf157b71ca6bc6a0759803fd92769762c4" translate="yes" xml:space="preserve">
          <source>Returns a list of all event handlers installed in event manager &lt;code&gt;EventMgrRef&lt;/code&gt;.</source>
          <target state="translated">返回安装在事件管理器 &lt;code&gt;EventMgrRef&lt;/code&gt; 中的所有事件处理程序的列表。</target>
        </trans-unit>
        <trans-unit id="bfc121aace29701e3baf969570fb127fefcfdc82" translate="yes" xml:space="preserve">
          <source>Returns a list of all files that match Unix-style wildcard string &lt;code&gt;Wildcard&lt;/code&gt;.</source>
          <target state="translated">返回与Unix样式的通配符字符串 &lt;code&gt;Wildcard&lt;/code&gt; 匹配的所有文件的列表。</target>
        </trans-unit>
        <trans-unit id="1c048986eb5b99b6c3d0fc28ecf9a6ff624ad3a2" translate="yes" xml:space="preserve">
          <source>Returns a list of all globally registered names.</source>
          <target state="translated">返回所有全球注册名称的列表。</target>
        </trans-unit>
        <trans-unit id="f176de7fca84aced2753bbfc571727dfc4f35880" translate="yes" xml:space="preserve">
          <source>Returns a list of all keys in a dictionary.</source>
          <target state="translated">返回一个字典中所有键的列表。</target>
        </trans-unit>
        <trans-unit id="dbfd81800b50649a258f5c18a61bd115d191a1df" translate="yes" xml:space="preserve">
          <source>Returns a list of all keys in dictionary &lt;code&gt;Dict&lt;/code&gt;.</source>
          <target state="translated">返回字典 &lt;code&gt;Dict&lt;/code&gt; 中所有键的列表。</target>
        </trans-unit>
        <trans-unit id="f08a08cb5c1a882b71dd053c742aed473cc6546e" translate="yes" xml:space="preserve">
          <source>Returns a list of all keys in the table named &lt;code&gt;Tab&lt;/code&gt;. The semantics of this function is context-sensitive. For more information, see &lt;code&gt;mnesia:activity/4&lt;/code&gt;. In transaction-context, it acquires a read lock on the entire table.</source>
          <target state="translated">返回名为 &lt;code&gt;Tab&lt;/code&gt; 的表中所有键的列表。该函数的语义是上下文相关的。有关更多信息，请参见 &lt;code&gt;mnesia:activity/4&lt;/code&gt; 。在事务上下文中，它获取整个表的读取锁。</target>
        </trans-unit>
        <trans-unit id="9c7359dd742e1537d1d169581241e507e45c3cce" translate="yes" xml:space="preserve">
          <source>Returns a list of all keys present in the process dictionary, for example:</source>
          <target state="translated">返回进程字典中所有键的列表,例如。</target>
        </trans-unit>
        <trans-unit id="0ddf4b4375a459efbcdfa794fcf649485ac5a147" translate="yes" xml:space="preserve">
          <source>Returns a list of all known groups.</source>
          <target state="translated">返回所有已知组的列表。</target>
        </trans-unit>
        <trans-unit id="1e0835d3c0b4cf9bd9fe6cf1fd1e7ad062324491" translate="yes" xml:space="preserve">
          <source>Returns a list of all loaded Erlang modules (current and old code), including preloaded modules.</source>
          <target state="translated">返回所有已加载的Erlang模块(当前的和旧的代码)的列表,包括预加载的模块。</target>
        </trans-unit>
        <trans-unit id="bc60b62ebdbd773ca0309f6910be322957761556" translate="yes" xml:space="preserve">
          <source>Returns a list of all local address/port number pairs for a socket for the specified association &lt;code&gt;Assoc&lt;/code&gt;.</source>
          <target state="translated">返回指定关联 &lt;code&gt;Assoc&lt;/code&gt; 的套接字的所有本地地址/端口号对的列表。</target>
        </trans-unit>
        <trans-unit id="f7dc4c061c3850d7a7870035dc4e94ffd8613672" translate="yes" xml:space="preserve">
          <source>Returns a list of all names that are globally registered on the specified node or in the specified global group.</source>
          <target state="translated">返回在指定节点或指定全局组中全局注册的所有名称的列表。</target>
        </trans-unit>
        <trans-unit id="7c4b4b8c36675bc126068e2a2c1e6ccc9e4261a4" translate="yes" xml:space="preserve">
          <source>Returns a list of all objects in table &lt;code&gt;Tab&lt;/code&gt;.</source>
          <target state="translated">返回表 &lt;code&gt;Tab&lt;/code&gt; 中所有对象的列表。</target>
        </trans-unit>
        <trans-unit id="77725aebb2ef339e70937be0c2051678c8c054b9" translate="yes" xml:space="preserve">
          <source>Returns a list of all objects of table &lt;code&gt;Name&lt;/code&gt; that match &lt;code&gt;Pattern&lt;/code&gt; in some unspecified order. For a description of patterns, see &lt;code&gt;&lt;a href=&quot;ets#match-2&quot;&gt;ets:match/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回表 &lt;code&gt;Name&lt;/code&gt; 中所有与 &lt;code&gt;Pattern&lt;/code&gt; （未指定顺序）匹配的所有对象的列表。有关模式的描述，请参见 &lt;code&gt;&lt;a href=&quot;ets#match-2&quot;&gt;ets:match/2&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="61b95f655be17ae15f0b44ab3ad6122729a20e75" translate="yes" xml:space="preserve">
          <source>Returns a list of all objects with key &lt;code&gt;Key&lt;/code&gt; in table &lt;code&gt;Tab&lt;/code&gt;.</source>
          <target state="translated">返回表 &lt;code&gt;Tab&lt;/code&gt; 中具有键 &lt;code&gt;Key&lt;/code&gt; 的所有对象的列表。</target>
        </trans-unit>
        <trans-unit id="9e9f0ec7ff458179b38463bf9a04f77d97419d78" translate="yes" xml:space="preserve">
          <source>Returns a list of all objects with key &lt;code&gt;Key&lt;/code&gt; stored in table &lt;code&gt;Name&lt;/code&gt;, for example:</source>
          <target state="translated">返回与密钥的所有对象的列表 &lt;code&gt;Key&lt;/code&gt; 存储在表 &lt;code&gt;Name&lt;/code&gt; ，例如：</target>
        </trans-unit>
        <trans-unit id="cdac43702f2aba415f5052450dbc118b75446ea1" translate="yes" xml:space="preserve">
          <source>Returns a list of all ports on the current node.</source>
          <target state="translated">返回当前节点上所有端口的列表。</target>
        </trans-unit>
        <trans-unit id="9ce0c3313c9bf3a0c7bebd454ff56690ad0719ea" translate="yes" xml:space="preserve">
          <source>Returns a list of all possible engine methods.</source>
          <target state="translated">返回所有可能的引擎方法的列表。</target>
        </trans-unit>
        <trans-unit id="d461c7d4a5aeb9cb83b612fcaae8d8717f453ddd" translate="yes" xml:space="preserve">
          <source>Returns a list of all processes having monitors for &lt;code&gt;loading&lt;/code&gt; active. Each process is returned as &lt;code&gt;{pid(),integer() &amp;gt;= 0}&lt;/code&gt;, where &lt;code&gt;integer()&lt;/code&gt; is the number of monitors held by process &lt;code&gt;pid()&lt;/code&gt;.</source>
          <target state="translated">返回所有具有活动 &lt;code&gt;loading&lt;/code&gt; 监视器的进程的列表。每个进程都以 &lt;code&gt;{pid(),integer() &amp;gt;= 0}&lt;/code&gt; ，其中 &lt;code&gt;integer()&lt;/code&gt; 是进程 &lt;code&gt;pid()&lt;/code&gt; 持有的监视器数。</target>
        </trans-unit>
        <trans-unit id="c5345d61c82791c015c56220a450122dd678a7ef" translate="yes" xml:space="preserve">
          <source>Returns a list of all processes having monitors for &lt;code&gt;unloading&lt;/code&gt; active. Each process is returned as &lt;code&gt;{pid(),integer() &amp;gt;= 0}&lt;/code&gt;, where &lt;code&gt;integer()&lt;/code&gt; is the number of monitors held by process &lt;code&gt;pid()&lt;/code&gt;.</source>
          <target state="translated">返回所有具有活动 &lt;code&gt;unloading&lt;/code&gt; 监视器的进程的列表。每个进程都以 &lt;code&gt;{pid(),integer() &amp;gt;= 0}&lt;/code&gt; ，其中 &lt;code&gt;integer()&lt;/code&gt; 是进程 &lt;code&gt;pid()&lt;/code&gt; 持有的监视器数。</target>
        </trans-unit>
        <trans-unit id="9f2294ec3b3e05bf49af504df2b909e6ec87a16f" translate="yes" xml:space="preserve">
          <source>Returns a list of all successful &lt;code&gt;set&lt;/code&gt; requests performed in the test case in reverse order. The list contains the involved user and agent, the value before &lt;code&gt;set&lt;/code&gt;, and the new value. This is intended to simplify the cleanup in function &lt;code&gt;end_per_testcase&lt;/code&gt;, that is, the undoing of the &lt;code&gt;set&lt;/code&gt; requests and their possible side-effects.</source>
          <target state="translated">以相反的顺序返回在测试用例中执行的所有成功 &lt;code&gt;set&lt;/code&gt; 请求的列表。该列表包含所涉及的用户和代理， &lt;code&gt;set&lt;/code&gt; 之前的值以及新值。这旨在简化函数 &lt;code&gt;end_per_testcase&lt;/code&gt; 中的清除，即撤消 &lt;code&gt;set&lt;/code&gt; 请求及其可能的副作用。</target>
        </trans-unit>
        <trans-unit id="4893fd8a8ef2169d1d6f4f55a02db2ef6c7f3316" translate="yes" xml:space="preserve">
          <source>Returns a list of all tables at the node. Named tables are specified by their names, unnamed tables are specified by their table identifiers.</source>
          <target state="translated">返回节点上所有表的列表。已命名的表由其名称指定,未命名的表由其表标识符指定。</target>
        </trans-unit>
        <trans-unit id="c2d2dc02f513e298b4c0d0d92dca6fc6174c6f9e" translate="yes" xml:space="preserve">
          <source>Returns a list of all test cases and groups in the suite. (Mandatory)</source>
          <target state="translated">返回套件中所有测试用例和组的列表。(必须填写)</target>
        </trans-unit>
        <trans-unit id="33270f7a4986636484eca555ab46e461893a130c" translate="yes" xml:space="preserve">
          <source>Returns a list of all the available drivers, both (statically) linked-in and dynamically loaded ones.</source>
          <target state="translated">返回所有可用的驱动程序的列表,包括(静态)链接的和动态加载的。</target>
        </trans-unit>
        <trans-unit id="04759c11fd73a2efcf88a70d3422834e9b011fc0" translate="yes" xml:space="preserve">
          <source>Returns a list of all vertices of &lt;code&gt;Digraph&lt;/code&gt; that are included in some &lt;code&gt;&lt;a href=&quot;#loop&quot;&gt;loop&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回包含在某个 &lt;code&gt;&lt;a href=&quot;#loop&quot;&gt;loop&lt;/a&gt;&lt;/code&gt; 的 &lt;code&gt;Digraph&lt;/code&gt; 所有顶点的列表。</target>
        </trans-unit>
        <trans-unit id="a19d9681e5c717524ff61fdfef23656f87179012" translate="yes" xml:space="preserve">
          <source>Returns a list of all vertices of digraph &lt;code&gt;G&lt;/code&gt;, in some unspecified order.</source>
          <target state="translated">以未指定的顺序返回图 &lt;code&gt;G&lt;/code&gt; 的所有顶点的列表。</target>
        </trans-unit>
        <trans-unit id="968406049a111afaf72af0af1f8bb8eb78c42ecf" translate="yes" xml:space="preserve">
          <source>Returns a list of all visible nodes in the system, except the local node. Same as &lt;code&gt;nodes(visible)&lt;/code&gt;.</source>
          <target state="translated">返回系统中除本地节点外的所有可见节点的列表。与 &lt;code&gt;nodes(visible)&lt;/code&gt; 相同（可见）。</target>
        </trans-unit>
        <trans-unit id="dc6bc0e391071c484061d628d178cbff3e152018" translate="yes" xml:space="preserve">
          <source>Returns a list of all visible nodes this node is connected to.</source>
          <target state="translated">返回此节点所连接的所有可见节点的列表。</target>
        </trans-unit>
        <trans-unit id="6db93870b8f3066ae79078f67e4e6860484e238d" translate="yes" xml:space="preserve">
          <source>Returns a list of applications called by some of the given applications.</source>
          <target state="translated">返回由一些给定应用程序调用的应用程序列表。</target>
        </trans-unit>
        <trans-unit id="10994056e2c405c8e5f465fd8e9053e5ebab6b28" translate="yes" xml:space="preserve">
          <source>Returns a list of applications that use some of the given applications.</source>
          <target state="translated">返回使用一些给定应用程序的应用程序列表。</target>
        </trans-unit>
        <trans-unit id="b24886dbf7496049f4ecd273365791488f0278d5" translate="yes" xml:space="preserve">
          <source>Returns a list of atoms indicating what kind of traces is enabled for the process. The list is empty if no traces are enabled, and one or more of the followings atoms if traces are enabled: &lt;code&gt;send&lt;/code&gt;, &lt;code&gt;'receive'&lt;/code&gt;, &lt;code&gt;set_on_spawn&lt;/code&gt;, &lt;code&gt;call&lt;/code&gt;, &lt;code&gt;return_to&lt;/code&gt;, &lt;code&gt;procs&lt;/code&gt;, &lt;code&gt;ports&lt;/code&gt;, &lt;code&gt;set_on_first_spawn&lt;/code&gt;, &lt;code&gt;set_on_link&lt;/code&gt;, &lt;code&gt;running&lt;/code&gt;, &lt;code&gt;running_procs&lt;/code&gt;, &lt;code&gt;running_ports&lt;/code&gt;, &lt;code&gt;silent&lt;/code&gt;, &lt;code&gt;exiting&lt;/code&gt;, &lt;code&gt;monotonic_timestamp&lt;/code&gt;, &lt;code&gt;strict_monotonic_timestamp&lt;/code&gt;, &lt;code&gt;garbage_collection&lt;/code&gt;, &lt;code&gt;timestamp&lt;/code&gt;, and &lt;code&gt;arity&lt;/code&gt;. The order is arbitrary.</source>
          <target state="translated">返回原子列表，该原子列表指示为该过程启用了哪种跟踪。如果未启用跟踪，则列表为空；如果启用跟踪，则列表中的一个或多个以下原子： &lt;code&gt;send&lt;/code&gt; ， &lt;code&gt;'receive'&lt;/code&gt; ， &lt;code&gt;set_on_spawn&lt;/code&gt; ， &lt;code&gt;call&lt;/code&gt; ， &lt;code&gt;return_to&lt;/code&gt; ， &lt;code&gt;procs&lt;/code&gt; ， &lt;code&gt;ports&lt;/code&gt; ， &lt;code&gt;set_on_first_spawn&lt;/code&gt; ， &lt;code&gt;set_on_link&lt;/code&gt; ， &lt;code&gt;running&lt;/code&gt; ， &lt;code&gt;running_procs&lt;/code&gt; ， &lt;code&gt;running_ports&lt;/code&gt; ， &lt;code&gt;silent&lt;/code&gt; ， &lt;code&gt;exiting&lt;/code&gt; ， &lt;code&gt;monotonic_timestamp&lt;/code&gt; ， &lt;code&gt;strict_monotonic_timestamp&lt;/code&gt; ， &lt;code&gt;garbage_collection&lt;/code&gt; ， &lt;code&gt;timestamp&lt;/code&gt; 和 &lt;code&gt;arity&lt;/code&gt; 。顺序是任意的。</target>
        </trans-unit>
        <trans-unit id="12e497843e2a7289d6149d4e08100bac66c03d7a" translate="yes" xml:space="preserve">
          <source>Returns a list of available service names.</source>
          <target state="translated">返回可用服务名称的列表。</target>
        </trans-unit>
        <trans-unit id="50bb031da4375f328785a9048fd32bb0339becaa" translate="yes" xml:space="preserve">
          <source>Returns a list of calls to &lt;code&gt;&lt;a href=&quot;#undefined_function&quot;&gt;undefined functions&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回对 &lt;code&gt;&lt;a href=&quot;#undefined_function&quot;&gt;undefined functions&lt;/a&gt;&lt;/code&gt; 的调用列表。</target>
        </trans-unit>
        <trans-unit id="4c0809ad5fe91f2a1540f8726031c3435a2d31f1" translate="yes" xml:space="preserve">
          <source>Returns a list of characters that represents &lt;code&gt;Term&lt;/code&gt;, but breaks representations longer than one line into many lines and indents each line sensibly. Also tries to detect and output lists of printable characters as strings.</source>
          <target state="translated">返回表示 &lt;code&gt;Term&lt;/code&gt; 的字符列表，但将长于一行的表示形式分成多行，并明智地缩进每行。还尝试检测并输出可打印字符列表作为字符串。</target>
        </trans-unit>
        <trans-unit id="3f286e9902703d63cef30e1a2fa893cd5ecb0acf" translate="yes" xml:space="preserve">
          <source>Returns a list of currently running services where each service is described by an &lt;code&gt;[{Option, Value}]&lt;/code&gt; list. The information in the list is specific for each service and each service has probably its own info function that gives more details about the service.</source>
          <target state="translated">返回当前正在运行的服务的列表，其中每个服务由 &lt;code&gt;[{Option, Value}]&lt;/code&gt; 列表描述。列表中的信息特定于每个服务，每个服务可能都有自己的信息功能，该功能提供有关服务的更多详细信息。</target>
        </trans-unit>
        <trans-unit id="084662247fef910681b6171e1663f68995c7859d" translate="yes" xml:space="preserve">
          <source>Returns a list of currently running services.</source>
          <target state="translated">返回当前正在运行的服务列表。</target>
        </trans-unit>
        <trans-unit id="ba31ab287b1e147cd88d32b205f4a36f704479d7" translate="yes" xml:space="preserve">
          <source>Returns a list of exported functions that have not been externally used.</source>
          <target state="translated">返回未被外部使用的导出函数列表。</target>
        </trans-unit>
        <trans-unit id="4b154549626a7bcacfd686a92d0fda2a611b70ac" translate="yes" xml:space="preserve">
          <source>Returns a list of external calls to &lt;code&gt;&lt;a href=&quot;#deprecated_function&quot;&gt;deprecated functions&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回对 &lt;code&gt;&lt;a href=&quot;#deprecated_function&quot;&gt;deprecated functions&lt;/a&gt;&lt;/code&gt; 的外部调用列表。</target>
        </trans-unit>
        <trans-unit id="32517d5c2af586191b5173533650bebc1bffbbb4" translate="yes" xml:space="preserve">
          <source>Returns a list of external calls to deprecated functions. If &lt;code&gt;DeprFlag&lt;/code&gt; is equal to &lt;code&gt;next_version&lt;/code&gt;, calls to functions to be removed in next version are returned. If &lt;code&gt;DeprFlag&lt;/code&gt; is equal to &lt;code&gt;next_major_release&lt;/code&gt;, calls to functions to be removed in next major release are returned as well as calls to functions to be removed in next version. Finally, if &lt;code&gt;DeprFlag&lt;/code&gt; is equal to &lt;code&gt;eventually&lt;/code&gt;, all calls to functions to be removed are returned, including calls to functions to be removed in next version or next major release.</source>
          <target state="translated">返回对不推荐使用的函数的外部调用的列表。如果 &lt;code&gt;DeprFlag&lt;/code&gt; 等于 &lt;code&gt;next_version&lt;/code&gt; ，在接下来的版本中删除对函数的调用返回。如果 &lt;code&gt;DeprFlag&lt;/code&gt; 等于 &lt;code&gt;next_major_release&lt;/code&gt; ，则返回在下一个主要版本中要删除的函数的调用，以及在下一个版本中要删除的函数的调用。最后，如果 &lt;code&gt;DeprFlag&lt;/code&gt; 等于 &lt;code&gt;eventually&lt;/code&gt; ，要删除到函数的调用返回，其中包括呼吁在下一版本或下一个主要版本中删除的功能。</target>
        </trans-unit>
        <trans-unit id="cb673ae3720fac80ec1a135aecc694cd458f7261" translate="yes" xml:space="preserve">
          <source>Returns a list of externally used deprecated functions.</source>
          <target state="translated">Returns a list of externally used deprecated functions.</target>
        </trans-unit>
        <trans-unit id="a9829544e62bb9dedc591edb94c882610ca2e43c" translate="yes" xml:space="preserve">
          <source>Returns a list of externally used deprecated functions. If &lt;code&gt;DeprFlag&lt;/code&gt; is equal to &lt;code&gt;next_version&lt;/code&gt;, functions to be removed in next version are returned. If &lt;code&gt;DeprFlag&lt;/code&gt; is equal to &lt;code&gt;next_major_release&lt;/code&gt;, functions to be removed in next major release are returned as well as functions to be removed in next version. Finally, if &lt;code&gt;DeprFlag&lt;/code&gt; is equal to &lt;code&gt;eventually&lt;/code&gt;, all functions to be removed are returned, including functions to be removed in next version or next major release.</source>
          <target state="translated">返回外部不推荐使用的函数的列表。如果 &lt;code&gt;DeprFlag&lt;/code&gt; 等于 &lt;code&gt;next_version&lt;/code&gt; ，在下一版本中删除的功能被返回。如果 &lt;code&gt;DeprFlag&lt;/code&gt; 等于 &lt;code&gt;next_major_release&lt;/code&gt; ，则返回要在下一个主要版本中删除的功能，以及要在下一个版本中删除的功能。最后，如果 &lt;code&gt;DeprFlag&lt;/code&gt; 等于 &lt;code&gt;eventually&lt;/code&gt; ，要删除所有的功能都恢复，包括在下一版本或下一个主要版本中删除的功能。</target>
        </trans-unit>
        <trans-unit id="9c16ec69948faef553061062962df2e83f4ce4cd" translate="yes" xml:space="preserve">
          <source>Returns a list of files in long format.</source>
          <target state="translated">返回一个长格式的文件列表。</target>
        </trans-unit>
        <trans-unit id="6ad21696ddddea063cd554ceacb160c5db7ba23b" translate="yes" xml:space="preserve">
          <source>Returns a list of files in short format.</source>
          <target state="translated">返回一个短格式的文件列表。</target>
        </trans-unit>
        <trans-unit id="d3dd0806ea9ad3800be3094d001dfa65b812370a" translate="yes" xml:space="preserve">
          <source>Returns a list of functions called by some of the given functions.</source>
          <target state="translated">返回由一些给定函数调用的函数列表。</target>
        </trans-unit>
        <trans-unit id="ee8897dbc8e22eb3180fb6c0ce972395a85f76d2" translate="yes" xml:space="preserve">
          <source>Returns a list of functions that use some of the given functions.</source>
          <target state="translated">返回使用一些给定函数的函数列表。</target>
        </trans-unit>
        <trans-unit id="26a8e4aa5621032974d108ad8918b510b464aa66" translate="yes" xml:space="preserve">
          <source>Returns a list of indexed positions, a list of positive integers.</source>
          <target state="translated">返回一个索引位置的列表,一个正整数的列表。</target>
        </trans-unit>
        <trans-unit id="868d7068f2695229a97a1b37ac88365741c71aac" translate="yes" xml:space="preserve">
          <source>Returns a list of integers corresponding to the bytes of &lt;code&gt;Binary&lt;/code&gt;.</source>
          <target state="translated">返回与 &lt;code&gt;Binary&lt;/code&gt; 的字节对应的整数列表。</target>
        </trans-unit>
        <trans-unit id="baae318f95ec782dfe99b7a1cf39b3d469a5c78e" translate="yes" xml:space="preserve">
          <source>Returns a list of integers corresponding to the bytes of &lt;code&gt;Bitstring&lt;/code&gt;. If the number of bits in the binary is not divisible by 8, the last element of the list is a bitstring containing the remaining 1-7 bits.</source>
          <target state="translated">返回与 &lt;code&gt;Bitstring&lt;/code&gt; 的字节对应的整数列表。如果二进制文件中的位数不能被8整除，则列表的最后一个元素是包含其余1-7位的位串。</target>
        </trans-unit>
        <trans-unit id="ced9ad7b31c06a6c357f5d995afcc3deb5960aa4" translate="yes" xml:space="preserve">
          <source>Returns a list of integers in the range 0..255, or a binary, depending on the port driver. The meaning of the returned data also depends on the port driver.</source>
          <target state="translated">返回范围为 0...255 的整数列表,或二进制数据,取决于 port 驱动程序。返回数据的含义也取决于 port 驱动程序。</target>
        </trans-unit>
        <trans-unit id="5018802cea03ded6891e038bbc7786e5b9387b8c" translate="yes" xml:space="preserve">
          <source>Returns a list of integers representing valid heap sizes in words. All Erlang heaps are sized from sizes in this list.</source>
          <target state="translated">返回一个整数列表,用字表示有效的堆大小。所有Erlang堆的大小都是根据这个列表中的大小来确定的。</target>
        </trans-unit>
        <trans-unit id="f978eb2ced8d417db74ad6af6bd33be8bc6aa176" translate="yes" xml:space="preserve">
          <source>Returns a list of keys that are associated with the value &lt;code&gt;Val&lt;/code&gt; in the process dictionary, for example:</source>
          <target state="translated">返回与过程字典中的 &lt;code&gt;Val&lt;/code&gt; 值相关联的键的列表，例如：</target>
        </trans-unit>
        <trans-unit id="7faa822a6ccc19ae1a6a32d0f46c76580445242c" translate="yes" xml:space="preserve">
          <source>Returns a list of lexemes in &lt;code&gt;String&lt;/code&gt;, separated by the grapheme clusters in &lt;code&gt;SeparatorList&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;String&lt;/code&gt; 中的词素的列表，由 &lt;code&gt;SeparatorList&lt;/code&gt; 中的字素簇分隔。</target>
        </trans-unit>
        <trans-unit id="5419e387478cd2d333fc79c3e503148c404842de" translate="yes" xml:space="preserve">
          <source>Returns a list of local functions that have not been locally used.</source>
          <target state="translated">返回未被本地使用的本地函数列表。</target>
        </trans-unit>
        <trans-unit id="1d6be377cd2458111bc4b6fbb2cfb9a9a74a47a2" translate="yes" xml:space="preserve">
          <source>Returns a list of microstate statistics values where the values for all threads of the same type has been merged.</source>
          <target state="translated">返回一个微状态统计值的列表,其中所有同类型线程的值已被合并。</target>
        </trans-unit>
        <trans-unit id="0550afac88eb9a8eb0f14a24706b5af098091401" translate="yes" xml:space="preserve">
          <source>Returns a list of modules called by some of the given modules.</source>
          <target state="translated">返回由一些给定模块调用的模块列表。</target>
        </trans-unit>
        <trans-unit id="ceeb9c9c5730d6ab87639534f5ecb8c3b0a22d2b" translate="yes" xml:space="preserve">
          <source>Returns a list of modules that use some of the given modules.</source>
          <target state="translated">返回使用给定模块的模块列表。</target>
        </trans-unit>
        <trans-unit id="b235467d6709bd8ccc2013fa5aef97d39f0b8d33" translate="yes" xml:space="preserve">
          <source>Returns a list of names that have been registered using &lt;code&gt;&lt;a href=&quot;#register-2&quot;&gt;register/2&lt;/a&gt;&lt;/code&gt;, for example:</source>
          <target state="translated">返回已使用 &lt;code&gt;&lt;a href=&quot;#register-2&quot;&gt;register/2&lt;/a&gt;&lt;/code&gt; 注册的名称的列表，例如：</target>
        </trans-unit>
        <trans-unit id="13999dba88f2eb6f5cb139d0fb966e1648bf423e" translate="yes" xml:space="preserve">
          <source>Returns a list of names that have been registered using &lt;code&gt;register/2&lt;/code&gt;.</source>
          <target state="translated">返回已使用 &lt;code&gt;register/2&lt;/code&gt; 注册的名称的列表。</target>
        </trans-unit>
        <trans-unit id="ce492879a7ba84da48427363485db5d4a629cff8" translate="yes" xml:space="preserve">
          <source>Returns a list of nodes according to the argument specified. The returned result, when the argument is a list, is the list of nodes satisfying the disjunction(s) of the list elements.</source>
          <target state="translated">根据指定的参数返回一个节点列表,当参数是一个列表时,返回的结果是满足列表元素异构的节点列表。当参数是一个列表时,返回的结果是满足列表元素异结的节点列表。</target>
        </trans-unit>
        <trans-unit id="c71362b22874ada3dd5fa0eba4f3ee91278af3eb" translate="yes" xml:space="preserve">
          <source>Returns a list of objects stored in a table. The exact representation of the returned objects is not public. The lists of data can be used for initializing a table by specifying value &lt;code&gt;bchunk&lt;/code&gt; to option &lt;code&gt;format&lt;/code&gt; of function &lt;code&gt;&lt;a href=&quot;#init_table-3&quot;&gt;init_table/3&lt;/a&gt;&lt;/code&gt; The Mnesia application uses this function for copying open tables.</source>
          <target state="translated">返回存储在表中的对象列表。返回对象的确切表示形式不是公开的。通过将值 &lt;code&gt;bchunk&lt;/code&gt; 指定为函数 &lt;code&gt;&lt;a href=&quot;#init_table-3&quot;&gt;init_table/3&lt;/a&gt;&lt;/code&gt; 的选项 &lt;code&gt;format&lt;/code&gt; ，可以将数据列表用于初始化表Mnesia应用程序使用此函数复制打开的表。</target>
        </trans-unit>
        <trans-unit id="f9bffce89f7109e7d59ff0c80cad70c7dbe48b7e" translate="yes" xml:space="preserve">
          <source>Returns a list of pairs representing the key-value associations of &lt;code&gt;Map&lt;/code&gt;, where the pairs &lt;code&gt;[{K1,V1}, ..., {Kn,Vn}]&lt;/code&gt; are returned in arbitrary order.</source>
          <target state="translated">返回表示 &lt;code&gt;Map&lt;/code&gt; 的键-值关联的对列表，其中对 &lt;code&gt;[{K1,V1}, ..., {Kn,Vn}]&lt;/code&gt; 对以任意顺序返回。</target>
        </trans-unit>
        <trans-unit id="4d1b4659cd8c9b4ba5ca06938e6a33a2961246ee" translate="yes" xml:space="preserve">
          <source>Returns a list of port identifiers corresponding to all the ports existing on the local node.</source>
          <target state="translated">返回与本地节点上现有的所有端口对应的端口标识符列表。</target>
        </trans-unit>
        <trans-unit id="e25261255c64b6e9c6fbb04e22f777fd08abad27" translate="yes" xml:space="preserve">
          <source>Returns a list of process identifiers corresponding to all the processes currently existing on the local node.</source>
          <target state="translated">返回本地节点上当前存在的所有进程对应的进程标识符列表。</target>
        </trans-unit>
        <trans-unit id="1c401cc51be311fb5a9746f3141daeb53e2a93ba" translate="yes" xml:space="preserve">
          <source>Returns a list of public keys and their related attributes. Each pair of key and attribute corresponds to one entry in the authorized key file:</source>
          <target state="translated">返回公钥及其相关属性的列表。每一对密钥和属性对应于授权密钥文件中的一个条目。</target>
        </trans-unit>
        <trans-unit id="42b7571725676b4b3e6e5209e39f9d6ca92b7621" translate="yes" xml:space="preserve">
          <source>Returns a list of public keys and their related attributes. Each pair of key and attribute corresponds to one entry in the known hosts file:</source>
          <target state="translated">返回公钥及其相关属性的列表。每一对密钥和属性对应于已知主机文件中的一个条目。</target>
        </trans-unit>
        <trans-unit id="e1647f4adcdca1c6949eb846233576503cd38246" translate="yes" xml:space="preserve">
          <source>Returns a list of raw lock counter data.</source>
          <target state="translated">返回一个原始锁计数器数据的列表。</target>
        </trans-unit>
        <trans-unit id="b77bc0fb3f7fcc8c875d7206cf9c2f37960b95e5" translate="yes" xml:space="preserve">
          <source>Returns a list of releases called by some of the given releases.</source>
          <target state="translated">返回由一些给定版本调用的版本列表。</target>
        </trans-unit>
        <trans-unit id="ea3c2f2fe1710d83b2fbf6c819e837ee8a69801b" translate="yes" xml:space="preserve">
          <source>Returns a list of releases that use some of the given releases.</source>
          <target state="translated">返回使用了一些给定发布版本的发布列表。</target>
        </trans-unit>
        <trans-unit id="f31252702b155cc33d51703c9098b84fc375be34" translate="yes" xml:space="preserve">
          <source>Returns a list of subkeys to the current key. Calls the Win32 API function &lt;code&gt;EnumRegKeysEx()&lt;/code&gt;.</source>
          <target state="translated">返回当前键的子键列表。调用Win32 API函数 &lt;code&gt;EnumRegKeysEx()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1bba8eb4a5957bfd492dc75647f6d9ed467f0159" translate="yes" xml:space="preserve">
          <source>Returns a list of supported ECCs. &lt;code&gt;eccs()&lt;/code&gt; is equivalent to calling &lt;code&gt;eccs(Protocol)&lt;/code&gt; with all supported protocols and then deduplicating the output.</source>
          <target state="translated">返回支持的ECC列表。 &lt;code&gt;eccs()&lt;/code&gt; 等效于使用所有受支持的协议调用 &lt;code&gt;eccs(Protocol)&lt;/code&gt; ，然后对输出进行重复数据删除。</target>
        </trans-unit>
        <trans-unit id="f9e905003a43bb65664c1578be1f50b1ed0523a6" translate="yes" xml:space="preserve">
          <source>Returns a list of the current member nodes of the pool.</source>
          <target state="translated">返回池中当前成员节点的列表。</target>
        </trans-unit>
        <trans-unit id="a15792d08e63403fc434652df9a1cdcdabcdc464" translate="yes" xml:space="preserve">
          <source>Returns a list of the driver options provided when loading, and any options set by the driver during initialization. The only valid option is &lt;code&gt;kill_ports&lt;/code&gt;.</source>
          <target state="translated">返回加载时提供的驱动程序选项的列表，以及驱动程序在初始化期间设置的任何选项。唯一有效的选项是 &lt;code&gt;kill_ports&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="850ede50334af3f9fbcfce82ce09564006479789" translate="yes" xml:space="preserve">
          <source>Returns a list of the items in the queue in the same order; the front item of the queue becomes the head of the list.</source>
          <target state="translated">返回队列中按相同顺序排列的项目列表;队列中的前一项成为列表的头。</target>
        </trans-unit>
        <trans-unit id="2306838c698bb764b3b0afd24902eca91be9b23c" translate="yes" xml:space="preserve">
          <source>Returns a list of the names of all allocators using the ERTS internal &lt;code&gt;alloc_util&lt;/code&gt; framework as atoms. For more information, see section &lt;code&gt;The alloc_util framework&lt;/code&gt; in &lt;code&gt;erts_alloc(3)&lt;/code&gt;.</source>
          <target state="translated">使用ERTS内部 &lt;code&gt;alloc_util&lt;/code&gt; 框架作为原子返回所有分配器名称的列表。有关详细信息，请参见 &lt;code&gt;The alloc_util framework&lt;/code&gt; 在 &lt;code&gt;erts_alloc(3)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7e974d731dbcb432212e482b837ca861ae8314e8" translate="yes" xml:space="preserve">
          <source>Returns a list of the names of all open tables on this node.</source>
          <target state="translated">返回此节点上所有打开的表的名称列表。</target>
        </trans-unit>
        <trans-unit id="3c151e0085c833f64177d4a6e4f6919ea6f99389" translate="yes" xml:space="preserve">
          <source>Returns a list of tokens in &lt;code&gt;String&lt;/code&gt;, separated by the characters in &lt;code&gt;SeparatorList&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;String&lt;/code&gt; 中的标记列表，并用 &lt;code&gt;SeparatorList&lt;/code&gt; 中的字符分隔。</target>
        </trans-unit>
        <trans-unit id="1ad431dba6bc6da79e0357c3dac050451502276f" translate="yes" xml:space="preserve">
          <source>Returns a list of tuples &lt;code&gt;{DriverName, InfoList}&lt;/code&gt;, where &lt;code&gt;InfoList&lt;/code&gt; is the result of calling &lt;code&gt;&lt;a href=&quot;#info-1&quot;&gt;info/1&lt;/a&gt;&lt;/code&gt; for that &lt;code&gt;DriverName&lt;/code&gt;. Only dynamically linked-in drivers are included in the list.</source>
          <target state="translated">返回元组 &lt;code&gt;{DriverName, InfoList}&lt;/code&gt; 的列表，其中 &lt;code&gt;InfoList&lt;/code&gt; 是对该 &lt;code&gt;DriverName&lt;/code&gt; 调用 &lt;code&gt;&lt;a href=&quot;#info-1&quot;&gt;info/1&lt;/a&gt;&lt;/code&gt; 的结果。列表中仅包含动态链接的驱动程序。</target>
        </trans-unit>
        <trans-unit id="d0ef20ecf553692b8e111343585a02a21206f99a" translate="yes" xml:space="preserve">
          <source>Returns a list of tuples &lt;code&gt;{Module, Loaded}&lt;/code&gt; for all loaded modules. &lt;code&gt;Loaded&lt;/code&gt; is normally the absolute filename, as described for &lt;code&gt;&lt;a href=&quot;#is_loaded-1&quot;&gt;is_loaded/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回所有已加载模块的元组列表 &lt;code&gt;{Module, Loaded}&lt;/code&gt; 。通常， &lt;code&gt;Loaded&lt;/code&gt; 是绝对文件名，如 &lt;code&gt;&lt;a href=&quot;#is_loaded-1&quot;&gt;is_loaded/1&lt;/a&gt;&lt;/code&gt; 所述。</target>
        </trans-unit>
        <trans-unit id="e3c9ba179e33dcf9e2c42a043c08fa87dbfd864f" translate="yes" xml:space="preserve">
          <source>Returns a list of tuples &lt;code&gt;{Node, ControllingEntity}&lt;/code&gt;, one entry for each connected remote node. &lt;code&gt;Node&lt;/code&gt; is the node name and &lt;code&gt;ControllingEntity&lt;/code&gt; is the port or process identifier responsible for the communication to that node. More specifically, &lt;code&gt;ControllingEntity&lt;/code&gt; for nodes connected through TCP/IP (the normal case) is the socket used in communication with the specific node.</source>
          <target state="translated">返回元组 &lt;code&gt;{Node, ControllingEntity}&lt;/code&gt; 的列表，每个连接的远程节点都有一个条目。 &lt;code&gt;Node&lt;/code&gt; 是节点名称， &lt;code&gt;ControllingEntity&lt;/code&gt; 是负责与该节点进行通信的端口或进程标识符。更具体地， &lt;code&gt;ControllingEntity&lt;/code&gt; 用于通过TCP / IP（正常情况）相连的节点是在通信中使用的与特定节点的插座。</target>
        </trans-unit>
        <trans-unit id="44e6825baa47aa89be776e805f265e60abf634a8" translate="yes" xml:space="preserve">
          <source>Returns a list of tuples &lt;code&gt;{Tag, Value}&lt;/code&gt;, where &lt;code&gt;Tag&lt;/code&gt; is the information item and &lt;code&gt;Value&lt;/code&gt; is the result of calling &lt;code&gt;&lt;a href=&quot;#info-2&quot;&gt;info/2&lt;/a&gt;&lt;/code&gt; with this driver name and this tag. The result is a tuple list containing all information available about a driver.</source>
          <target state="translated">返回一个元组 &lt;code&gt;{Tag, Value}&lt;/code&gt; 的列表，其中 &lt;code&gt;Tag&lt;/code&gt; 是信息项，而 &lt;code&gt;Value&lt;/code&gt; 是使用该驱动程序名称和该标签调用 &lt;code&gt;&lt;a href=&quot;#info-2&quot;&gt;info/2&lt;/a&gt;&lt;/code&gt; 的结果。结果是一个元组列表，其中包含有关驱动程序的所有可用信息。</target>
        </trans-unit>
        <trans-unit id="12347dac098a5cb8dce5f290295128f3fe58fabb" translate="yes" xml:space="preserve">
          <source>Returns a list of tuples where, for each tuple in &lt;code&gt;TupleList1&lt;/code&gt;, the &lt;code&gt;N&lt;/code&gt;th element &lt;code&gt;Term1&lt;/code&gt; of the tuple has been replaced with the result of calling &lt;code&gt;Fun(Term1)&lt;/code&gt;.</source>
          <target state="translated">返回一个元组列表，其中对于 &lt;code&gt;TupleList1&lt;/code&gt; 中的每个元组，该元组的第 &lt;code&gt;N&lt;/code&gt; 个元素 &lt;code&gt;Term1&lt;/code&gt; 已被调用 &lt;code&gt;Fun(Term1)&lt;/code&gt; 的结果替换。</target>
        </trans-unit>
        <trans-unit id="93f2213e17f85fa838d64a2d3eb5add22cd2de9f" translate="yes" xml:space="preserve">
          <source>Returns a list of tuples with &lt;code&gt;{SchedulerId, ActiveTime, TotalTime}&lt;/code&gt;, where &lt;code&gt;SchedulerId&lt;/code&gt; is an integer ID of the scheduler, &lt;code&gt;ActiveTime&lt;/code&gt; is the duration the scheduler has been busy, and &lt;code&gt;TotalTime&lt;/code&gt; is the total time duration since &lt;code&gt;&lt;a href=&quot;#system_flag_scheduler_wall_time&quot;&gt;scheduler_wall_time&lt;/a&gt;&lt;/code&gt; activation for the specific scheduler. Note that activation time can differ significantly between schedulers. Currently dirty schedulers are activated at system start while normal schedulers are activated some time after the &lt;code&gt;scheduler_wall_time&lt;/code&gt; functionality is enabled. The time unit is undefined and can be subject to change between releases, OSs, and system restarts. &lt;code&gt;scheduler_wall_time&lt;/code&gt; is only to be used to calculate relative values for scheduler utilization. &lt;code&gt;ActiveTime&lt;/code&gt; can never exceed &lt;code&gt;TotalTime&lt;/code&gt;.</source>
          <target state="translated">返回具有 &lt;code&gt;{SchedulerId, ActiveTime, TotalTime}&lt;/code&gt; 的元组列表，其中 &lt;code&gt;SchedulerId&lt;/code&gt; 是调度程序的整数ID， &lt;code&gt;ActiveTime&lt;/code&gt; 是调度程序忙的持续时间， &lt;code&gt;TotalTime&lt;/code&gt; 是自为特定调度 &lt;code&gt;&lt;a href=&quot;#system_flag_scheduler_wall_time&quot;&gt;scheduler_wall_time&lt;/a&gt;&lt;/code&gt; 激活scheduler_wall_time 以来的总时间。请注意，调度程序之间的激活时间可能会有很大差异。在启用 &lt;code&gt;scheduler_wall_time&lt;/code&gt; 功能后的一段时间内，当前肮脏的调度程序在系统启动时被激活，而正常调度程序被激活。时间单位是不确定的，可以在发行版，操作系统和系统重新启动之间进行更改。 &lt;code&gt;scheduler_wall_time&lt;/code&gt; 仅用于计算调度程序利用率的相对值。 &lt;code&gt;ActiveTime&lt;/code&gt; 永远不能超过 &lt;code&gt;TotalTime&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b0df76cdc4cfbbde2fe80593dbf1e84b9d9b10f5" translate="yes" xml:space="preserve">
          <source>Returns a list of tuples with information about how the module was compiled. This list is empty if the module has been stripped with the &lt;code&gt;beam_lib(3)&lt;/code&gt; module (in STDLIB).</source>
          <target state="translated">返回一个元组列表，其中包含有关如何编译模块的信息。如果模块已被 &lt;code&gt;beam_lib(3)&lt;/code&gt; 模块剥离（在STDLIB中），则此列表为空。</target>
        </trans-unit>
        <trans-unit id="fa56aa1fb0f06d1e02b293ee9314f572354d0ea1" translate="yes" xml:space="preserve">
          <source>Returns a list of tuples with information about miscellaneous allocated memory areas.</source>
          <target state="translated">返回一个包含杂项分配的内存区域信息的元组列表。</target>
        </trans-unit>
        <trans-unit id="f7b16e4394cb94a84d5b5f2836ea7de7ccbbcfec" translate="yes" xml:space="preserve">
          <source>Returns a list where each element represents the amount of active processes and ports on each run queue and its associated schedulers. That is, the number of processes and ports that are ready to run, or are currently running. Values for normal run queues and their associated schedulers are located first in the resulting list. The first element corresponds to scheduler number 1 and so on. If support for dirty schedulers exist, an element with the value for the dirty CPU run queue and its associated dirty CPU schedulers follow and then as last element the value for the the dirty IO run queue and its associated dirty IO schedulers follow. The information is &lt;strong&gt;not&lt;/strong&gt; gathered atomically. That is, the result is not necessarily a consistent snapshot of the state, but instead quite efficiently gathered.</source>
          <target state="translated">返回一个列表，其中每个元素代表每个运行队列及其关联的调度程序上的活动进程和端口的数量。即，准备运行或当前正在运行的进程和端口的数量。正常运行队列及其关联的调度程序的值位于结果列表中的第一位。第一个元素对应于调度程序编号1，依此类推。如果存在对脏调度程序的支持，则紧随其后的是具有脏CPU运行队列及其关联的脏CPU调度程序的值的元素，然后作为最后一个元素，是脏IO运行队列及其关联的脏IO调度程序的值。信息&lt;strong&gt;不是&lt;/strong&gt;原子收集的。也就是说，结果不一定是状态的一致快照，而是相当有效地收集的。</target>
        </trans-unit>
        <trans-unit id="51b7aac5180aaaa66bcf990dbf7675324e29f8c7" translate="yes" xml:space="preserve">
          <source>Returns a list where each element represents the amount of processes and ports ready to run for each run queue. Values for normal run queues are located first in the resulting list. The first element corresponds to the normal run queue of scheduler number 1 and so on. If support for dirty schedulers exist, values for the dirty CPU run queue and the dirty IO run queue follow (in that order) at the end. The information is &lt;strong&gt;not&lt;/strong&gt; gathered atomically. That is, the result is not necessarily a consistent snapshot of the state, but instead quite efficiently gathered.</source>
          <target state="translated">返回一个列表，其中每个元素代表准备为每个运行队列运行的进程和端口的数量。正常运行队列的值位于结果列表的第一位。第一个元素对应于编号为1的调度程序的正常运行队列，依此类推。如果存在对脏调度程序的支持，最后将以脏CPU运行队列和脏IO运行队列的值（按此顺序）。信息&lt;strong&gt;不是&lt;/strong&gt;原子收集的。也就是说，结果不一定是状态的一致快照，而是相当有效地收集的。</target>
        </trans-unit>
        <trans-unit id="b941d4e04084edb236c9a8bc253eef2e0e08e909" translate="yes" xml:space="preserve">
          <source>Returns a list whose elements are the path components of &lt;code&gt;Filename&lt;/code&gt;.</source>
          <target state="translated">返回一个列表，其元素是 &lt;code&gt;Filename&lt;/code&gt; 的路径组成部分。</target>
        </trans-unit>
        <trans-unit id="3b70d93737bf6a89e8ce6d041c54b88e85e71398" translate="yes" xml:space="preserve">
          <source>Returns a list with all imported files.</source>
          <target state="translated">返回一个包含所有导入文件的列表。</target>
        </trans-unit>
        <trans-unit id="5afb452302f4c7864dfc86d8b974a0284562ae6d" translate="yes" xml:space="preserve">
          <source>Returns a list with all interpreted modules.</source>
          <target state="translated">返回一个包含所有解释模块的列表。</target>
        </trans-unit>
        <trans-unit id="e405f34b7fb82a4fbead2e416cd71fa78865f7d4" translate="yes" xml:space="preserve">
          <source>Returns a list with all modules for which there are imported data.</source>
          <target state="translated">返回一个包含有导入数据的所有模块的列表。</target>
        </trans-unit>
        <trans-unit id="f4fcf940d968f85951fff3e7ec2314be13cd9afe" translate="yes" xml:space="preserve">
          <source>Returns a list with all modules that are currently Cover compiled.</source>
          <target state="translated">返回一个包含当前所有Cover编译的模块的列表。</target>
        </trans-unit>
        <trans-unit id="3f20449f4bf0d390767524abb875a22e6ecfa1c7" translate="yes" xml:space="preserve">
          <source>Returns a list with all nodes that are part of the coverage analysis. Note that the current node is not returned. This node is always part of the analysis.</source>
          <target state="translated">返回包含所有属于覆盖分析的节点的列表。请注意,当前节点不会被返回。该节点始终是分析的一部分。</target>
        </trans-unit>
        <trans-unit id="08ea13abe178179b2c16be03199e32b1415d19e8" translate="yes" xml:space="preserve">
          <source>Returns a list with information about memory dynamically allocated by the Erlang emulator. Each list element is a tuple &lt;code&gt;{Type, Size}&lt;/code&gt;. The first element &lt;code&gt;Type&lt;/code&gt; is an atom describing memory type. The second element &lt;code&gt;Size&lt;/code&gt; is the memory size in bytes.</source>
          <target state="translated">返回一个列表，其中包含有关由Erlang仿真器动态分配的内存的信息。每个列表元素都是一个元组 &lt;code&gt;{Type, Size}&lt;/code&gt; 。第一个元素 &lt;code&gt;Type&lt;/code&gt; 是描述内存类型的原子。第二个元素 &lt;code&gt;Size&lt;/code&gt; 是内存大小（以字节为单位）。</target>
        </trans-unit>
        <trans-unit id="e23b59b74d5e9a9c8a369969dccc0b1f1d37006e" translate="yes" xml:space="preserve">
          <source>Returns a list with information about the applications that are currently running. &lt;code&gt;Application&lt;/code&gt; is the application name. &lt;code&gt;Description&lt;/code&gt; and &lt;code&gt;Vsn&lt;/code&gt; are the values of their &lt;code&gt;description&lt;/code&gt; and &lt;code&gt;vsn&lt;/code&gt; application specification keys, respectively.</source>
          <target state="translated">返回一个列表，其中包含有关当前正在运行的应用程序的信息。 &lt;code&gt;Application&lt;/code&gt; 是应用程序名称。 &lt;code&gt;Description&lt;/code&gt; 和 &lt;code&gt;Vsn&lt;/code&gt; 分别是其 &lt;code&gt;description&lt;/code&gt; 和 &lt;code&gt;vsn&lt;/code&gt; 应用程序规范键的值。</target>
        </trans-unit>
        <trans-unit id="1e44a0a7cbeb6cb5ea225de0094765c1cb93aadd" translate="yes" xml:space="preserve">
          <source>Returns a list with information about the applications, and included applications, which are loaded using &lt;code&gt;load/1,2&lt;/code&gt;. &lt;code&gt;Application&lt;/code&gt; is the application name. &lt;code&gt;Description&lt;/code&gt; and &lt;code&gt;Vsn&lt;/code&gt; are the values of their &lt;code&gt;description&lt;/code&gt; and &lt;code&gt;vsn&lt;/code&gt; application specification keys, respectively.</source>
          <target state="translated">返回一个列表，其中包含有关使用 &lt;code&gt;load/1,2&lt;/code&gt; 加载的应用程序和包含的应用程序的信息。 &lt;code&gt;Application&lt;/code&gt; 是应用程序名称。 &lt;code&gt;Description&lt;/code&gt; 和 &lt;code&gt;Vsn&lt;/code&gt; 分别是其 &lt;code&gt;description&lt;/code&gt; 和 &lt;code&gt;vsn&lt;/code&gt; 应用程序规范键的值。</target>
        </trans-unit>
        <trans-unit id="082096aee53907006df4d528f6963a9cdbd2834b" translate="yes" xml:space="preserve">
          <source>Returns a list with information about the fun &lt;code&gt;Fun&lt;/code&gt;. Each list element is a tuple. The order of the tuples is undefined, and more tuples can be added in a future release.</source>
          <target state="translated">返回一个列表，其中包含有关 &lt;code&gt;Fun&lt;/code&gt; 的信息。每个列表元素都是一个元组。元组的顺序是不确定的，将来的版本中可以添加更多的元组。</target>
        </trans-unit>
        <trans-unit id="2a273f2482e4d6f1fbc97d67161e9515716d64c5" translate="yes" xml:space="preserve">
          <source>Returns a list with the elements in &lt;code&gt;List1&lt;/code&gt; in reverse order, with tail &lt;code&gt;Tail&lt;/code&gt; appended.</source>
          <target state="translated">以相反的顺序返回列表，列表中包含 &lt;code&gt;List1&lt;/code&gt; 中的元素，并附加尾巴 &lt;code&gt;Tail&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="832ea77d23505552832301d7dbbab7be5e7a90dd" translate="yes" xml:space="preserve">
          <source>Returns a list with the elements in &lt;code&gt;List1&lt;/code&gt; in reverse order.</source>
          <target state="translated">以相反的顺序返回列表，其中 &lt;code&gt;List1&lt;/code&gt; 中的元素。</target>
        </trans-unit>
        <trans-unit id="84f1499d684e80e69120459b5874982c864856cb" translate="yes" xml:space="preserve">
          <source>Returns a list with values for all columns in &lt;code&gt;Cols&lt;/code&gt;. If a column is undefined, its value is &lt;code&gt;noinit&lt;/code&gt;.</source>
          <target state="translated">返回带有 &lt;code&gt;Cols&lt;/code&gt; 中所有列的值的列表。如果未定义列，则其值为 &lt;code&gt;noinit&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b991dac7a17f515ad11ab8a2b69b9dfa6585c04e" translate="yes" xml:space="preserve">
          <source>Returns a map &lt;code&gt;Map&lt;/code&gt; for which predicate &lt;code&gt;Pred&lt;/code&gt; holds true in &lt;code&gt;MapOrIter&lt;/code&gt;.</source>
          <target state="translated">返回谓词 &lt;code&gt;Pred&lt;/code&gt; 在 &lt;code&gt;MapOrIter&lt;/code&gt; 中为true的地图 &lt;code&gt;Map&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9d731f70bc552bebc033484d0448ae22ca88ea46" translate="yes" xml:space="preserve">
          <source>Returns a map iterator &lt;code&gt;Iterator&lt;/code&gt; that can be used by &lt;code&gt;&lt;a href=&quot;#next-1&quot;&gt;maps:next/1&lt;/a&gt;&lt;/code&gt; to traverse the key-value associations in a map. When iterating over a map, the memory usage is guaranteed to be bounded no matter the size of the map.</source>
          <target state="translated">返回一个映射迭代 &lt;code&gt;Iterator&lt;/code&gt; ，该迭代器可被 &lt;code&gt;&lt;a href=&quot;#next-1&quot;&gt;maps:next/1&lt;/a&gt;&lt;/code&gt; 使用以遍历映射中的键值关联。在映射上进行迭代时，无论映射的大小如何，都将保证内存使用量是有限的。</target>
        </trans-unit>
        <trans-unit id="889c13f526ea5af22f09d7bee74de5ffbd9e20aa" translate="yes" xml:space="preserve">
          <source>Returns a negative value if the call failed where the following bits can be set:</source>
          <target state="translated">如果调用失败,返回一个负值,其中以下位可以设置。</target>
        </trans-unit>
        <trans-unit id="8ac0cf6601f38f269545889202b2d8acb5d9c708" translate="yes" xml:space="preserve">
          <source>Returns a new Erlang term corresponding to the requested element, or &lt;code&gt;NULL&lt;/code&gt; if &lt;code&gt;position&lt;/code&gt; was greater than the arity of &lt;code&gt;tuple&lt;/code&gt;.</source>
          <target state="translated">返回与请求的元素相对应的新Erlang术语；如果 &lt;code&gt;position&lt;/code&gt; 大于 &lt;code&gt;tuple&lt;/code&gt; 的arity，则返回 &lt;code&gt;NULL&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2164c82352c48fe9a836862f6cfd23661803f164" translate="yes" xml:space="preserve">
          <source>Returns a new TLS/DTLS socket if the handshake is successful.</source>
          <target state="translated">如果握手成功,返回一个新的TLS/DTLS套接字。</target>
        </trans-unit>
        <trans-unit id="456254db671e7211f8cf975ebc7a01fd2d4e0998" translate="yes" xml:space="preserve">
          <source>Returns a new empty map.</source>
          <target state="translated">返回一个新的空地图。</target>
        </trans-unit>
        <trans-unit id="8e4eb51649304c2bec63792cfa85aa4863b22406" translate="yes" xml:space="preserve">
          <source>Returns a new empty ordered set.</source>
          <target state="translated">返回一个新的空有序集合。</target>
        </trans-unit>
        <trans-unit id="302caa64733fc4c7b16056c605dcc203b92d6f74" translate="yes" xml:space="preserve">
          <source>Returns a new empty set.</source>
          <target state="translated">返回一个新的空集。</target>
        </trans-unit>
        <trans-unit id="b56ae43d0f846bf1949be3f1ab4e439b4e4b97ba" translate="yes" xml:space="preserve">
          <source>Returns a new empty tree.</source>
          <target state="translated">返回一个新的空树。</target>
        </trans-unit>
        <trans-unit id="52ddf9faadedd1f5401cea097538ddfd635f7163" translate="yes" xml:space="preserve">
          <source>Returns a new list &lt;code&gt;List3&lt;/code&gt; that is a copy of &lt;code&gt;List1&lt;/code&gt;, subjected to the following procedure: for each element in &lt;code&gt;List2&lt;/code&gt;, its first occurrence in &lt;code&gt;List1&lt;/code&gt; is deleted.</source>
          <target state="translated">返回一个新列表 &lt;code&gt;List3&lt;/code&gt; ，它是 &lt;code&gt;List1&lt;/code&gt; 的副本，请执行以下过程：对于 &lt;code&gt;List2&lt;/code&gt; 中的每个元素，将删除它在 &lt;code&gt;List1&lt;/code&gt; 中的第一次出现。</target>
        </trans-unit>
        <trans-unit id="4542acc8afa6c33c6e9c090883b8ca0e51803bc7" translate="yes" xml:space="preserve">
          <source>Returns a new list &lt;code&gt;List3&lt;/code&gt;, which is made from the elements of &lt;code&gt;List1&lt;/code&gt; followed by the elements of &lt;code&gt;List2&lt;/code&gt;.</source>
          <target state="translated">返回一个新列表 &lt;code&gt;List3&lt;/code&gt; ，该列表由 &lt;code&gt;List1&lt;/code&gt; 的元素和 &lt;code&gt;List2&lt;/code&gt; 的元素组成。</target>
        </trans-unit>
        <trans-unit id="7b455a2440938bc559af3ddb6ee2c37352ebdc0c" translate="yes" xml:space="preserve">
          <source>Returns a new map &lt;code&gt;Map2&lt;/code&gt; with the keys &lt;code&gt;K1&lt;/code&gt; through &lt;code&gt;Kn&lt;/code&gt; and their associated values from map &lt;code&gt;Map1&lt;/code&gt;. Any key in &lt;code&gt;Ks&lt;/code&gt; that does not exist in &lt;code&gt;Map1&lt;/code&gt; is ignored.</source>
          <target state="translated">返回一个新的地图 &lt;code&gt;Map2&lt;/code&gt; 与键 &lt;code&gt;K1&lt;/code&gt; 至 &lt;code&gt;Kn&lt;/code&gt; 和地图及其相关数值 &lt;code&gt;Map1&lt;/code&gt; 。 &lt;code&gt;Map1&lt;/code&gt; 中不存在的任何 &lt;code&gt;Ks&lt;/code&gt; 键都将被忽略。</target>
        </trans-unit>
        <trans-unit id="67290e0a103586074d306b260be7f713463f57f6" translate="yes" xml:space="preserve">
          <source>Returns a new map &lt;code&gt;Map2&lt;/code&gt; without keys &lt;code&gt;K1&lt;/code&gt; through &lt;code&gt;Kn&lt;/code&gt; and their associated values from map &lt;code&gt;Map1&lt;/code&gt;. Any key in &lt;code&gt;Ks&lt;/code&gt; that does not exist in &lt;code&gt;Map1&lt;/code&gt; is ignored</source>
          <target state="translated">返回一个新的地图 &lt;code&gt;Map2&lt;/code&gt; ，无按键 &lt;code&gt;K1&lt;/code&gt; 至 &lt;code&gt;Kn&lt;/code&gt; 和地图及其相关数值 &lt;code&gt;Map1&lt;/code&gt; 。 &lt;code&gt;Map1&lt;/code&gt; 中不存在的任何 &lt;code&gt;Ks&lt;/code&gt; 键都将被忽略</target>
        </trans-unit>
        <trans-unit id="9855aceea290cffa09098763d7a883e94c7067a3" translate="yes" xml:space="preserve">
          <source>Returns a new ordered set formed from &lt;code&gt;Ordset1&lt;/code&gt; with &lt;code&gt;Element&lt;/code&gt; inserted.</source>
          <target state="translated">返回由 &lt;code&gt;Ordset1&lt;/code&gt; 形成并插入 &lt;code&gt;Element&lt;/code&gt; 的新的有序集。</target>
        </trans-unit>
        <trans-unit id="2cf3a026b42c22429203bd312f9f574526c3d067" translate="yes" xml:space="preserve">
          <source>Returns a new set formed from &lt;code&gt;Set1&lt;/code&gt; with &lt;code&gt;Element&lt;/code&gt; inserted.</source>
          <target state="translated">返回从形成了一套新的 &lt;code&gt;Set1&lt;/code&gt; 与 &lt;code&gt;Element&lt;/code&gt; 插入。</target>
        </trans-unit>
        <trans-unit id="9a3e77a0d4c9926366de861b366eb9d929768d67" translate="yes" xml:space="preserve">
          <source>Returns a new set formed from &lt;code&gt;Set1&lt;/code&gt; with &lt;code&gt;Element&lt;/code&gt; inserted. Assumes that &lt;code&gt;Element&lt;/code&gt; is not present in &lt;code&gt;Set1&lt;/code&gt;.</source>
          <target state="translated">返回从形成了一套新的 &lt;code&gt;Set1&lt;/code&gt; 与 &lt;code&gt;Element&lt;/code&gt; 插入。假定 &lt;code&gt;Set1&lt;/code&gt; 中不存在 &lt;code&gt;Element&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a0426b5d4fc3e15824ae4b2f3a72d0b0d793a688" translate="yes" xml:space="preserve">
          <source>Returns a new set formed from &lt;code&gt;Set1&lt;/code&gt; with &lt;code&gt;Element&lt;/code&gt; inserted. If &lt;code&gt;Element&lt;/code&gt; is already an element in &lt;code&gt;Set1&lt;/code&gt;, nothing is changed.</source>
          <target state="translated">返回从形成了一套新的 &lt;code&gt;Set1&lt;/code&gt; 与 &lt;code&gt;Element&lt;/code&gt; 插入。如果 &lt;code&gt;Element&lt;/code&gt; 已经是 &lt;code&gt;Set1&lt;/code&gt; 中的元素，则什么都不会改变。</target>
        </trans-unit>
        <trans-unit id="2876ee8ff5d8de8cd5c5022fe3c35a8168024c73" translate="yes" xml:space="preserve">
          <source>Returns a new set formed from &lt;code&gt;Set1&lt;/code&gt; with &lt;code&gt;Element&lt;/code&gt; removed. Assumes that &lt;code&gt;Element&lt;/code&gt; is present in &lt;code&gt;Set1&lt;/code&gt;.</source>
          <target state="translated">返回从 &lt;code&gt;Set1&lt;/code&gt; 形成的新集合，其中删除了 &lt;code&gt;Element&lt;/code&gt; 。假定 &lt;code&gt;Set1&lt;/code&gt; 中存在 &lt;code&gt;Element&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="82e2522189efdcb96f05ed6fc0dd4b26ea0dbace" translate="yes" xml:space="preserve">
          <source>Returns a new set formed from &lt;code&gt;Set1&lt;/code&gt; with &lt;code&gt;Element&lt;/code&gt; removed. If &lt;code&gt;Element&lt;/code&gt; is not an element in &lt;code&gt;Set1&lt;/code&gt;, nothing is changed.</source>
          <target state="translated">返回从 &lt;code&gt;Set1&lt;/code&gt; 形成的新集合，其中删除了 &lt;code&gt;Element&lt;/code&gt; 。如果 &lt;code&gt;Element&lt;/code&gt; 不是 &lt;code&gt;Set1&lt;/code&gt; 中的元素，则什么都不会改变。</target>
        </trans-unit>
        <trans-unit id="0b340b0d4312756cdb0d5ea9d80123f4413bac57" translate="yes" xml:space="preserve">
          <source>Returns a new tuple that has one element more than &lt;code&gt;Tuple1&lt;/code&gt;, and contains the elements in &lt;code&gt;Tuple1&lt;/code&gt; followed by &lt;code&gt;Term&lt;/code&gt; as the last element. Semantically equivalent to &lt;code&gt;list_to_tuple(tuple_to_list(Tuple1) ++ [Term])&lt;/code&gt;, but much faster. Example:</source>
          <target state="translated">返回有一个元素不止一个新的元组 &lt;code&gt;Tuple1&lt;/code&gt; ，并包含在元素 &lt;code&gt;Tuple1&lt;/code&gt; 其次是 &lt;code&gt;Term&lt;/code&gt; 作为最后一个元素。语义上等效于 &lt;code&gt;list_to_tuple(tuple_to_list(Tuple1) ++ [Term])&lt;/code&gt; ，但速度要快得多。例：</target>
        </trans-unit>
        <trans-unit id="bde383d63490d451b0f95496f5ddc0d941fd0a06" translate="yes" xml:space="preserve">
          <source>Returns a new tuple with element &lt;code&gt;Term&lt;/code&gt; inserted at position &lt;code&gt;Index&lt;/code&gt; in tuple &lt;code&gt;Tuple1&lt;/code&gt;. All elements from position &lt;code&gt;Index&lt;/code&gt; and upwards are pushed one step higher in the new tuple &lt;code&gt;Tuple2&lt;/code&gt;. Example:</source>
          <target state="translated">返回一个新的元组，其元素 &lt;code&gt;Term&lt;/code&gt; 插入元组 &lt;code&gt;Tuple1&lt;/code&gt; 中的位置 &lt;code&gt;Index&lt;/code&gt; 。在新的元组 &lt;code&gt;Tuple2&lt;/code&gt; 中，从位置 &lt;code&gt;Index&lt;/code&gt; 到向上的所有元素都向上推了一步。例：</target>
        </trans-unit>
        <trans-unit id="541fb2fe1465f22b99417c012a85d115f1b4a3e6" translate="yes" xml:space="preserve">
          <source>Returns a new tuple with element at &lt;code&gt;Index&lt;/code&gt; removed from tuple &lt;code&gt;Tuple1&lt;/code&gt;, for example:</source>
          <target state="translated">返回一个新的元组，其元素的 &lt;code&gt;Index&lt;/code&gt; 从元组 &lt;code&gt;Tuple1&lt;/code&gt; 中移除，例如：</target>
        </trans-unit>
        <trans-unit id="308fbca02547a432a27bb42f69b457aa760415cc" translate="yes" xml:space="preserve">
          <source>Returns a newly created list with information about all child specifications and child processes belonging to supervisor &lt;code&gt;SupRef&lt;/code&gt;.</source>
          <target state="translated">返回一个新创建的列表，其中包含有关属于主管 &lt;code&gt;SupRef&lt;/code&gt; 的所有子规范和子进程的信息。</target>
        </trans-unit>
        <trans-unit id="988718b7da23cf5e7319125e8929491ce6761321" translate="yes" xml:space="preserve">
          <source>Returns a newly created port data lock on success, otherwise &lt;code&gt;NULL&lt;/code&gt;. The function fails if &lt;code&gt;port&lt;/code&gt; is invalid or if a port data lock already has been associated with the &lt;code&gt;port&lt;/code&gt;.</source>
          <target state="translated">成功返回一个新创建的端口数据锁，否则返回 &lt;code&gt;NULL&lt;/code&gt; 。如果 &lt;code&gt;port&lt;/code&gt; 无效或端口数据锁已与该 &lt;code&gt;port&lt;/code&gt; 关联，则该功能将失败。</target>
        </trans-unit>
        <trans-unit id="c7d31e4d735f6c2c90a55d4e9e9bc358b81bb147" translate="yes" xml:space="preserve">
          <source>Returns a non-empty list of some objects stored in a table that match a given pattern in some unspecified order. The table, the pattern, and the number of objects that are matched are all defined by &lt;code&gt;Continuation&lt;/code&gt;, which has been returned by a previous call to &lt;code&gt;match_object/1&lt;/code&gt; or &lt;code&gt;match_object/3&lt;/code&gt;.</source>
          <target state="translated">返回表中存储的某些对象的非空列表，这些对象以某种未指定的顺序与给定模式匹配。该表，模式和匹配的对象数均由 &lt;code&gt;Continuation&lt;/code&gt; 定义，这是先前调用 &lt;code&gt;match_object/1&lt;/code&gt; 或 &lt;code&gt;match_object/3&lt;/code&gt; 返回的。</target>
        </trans-unit>
        <trans-unit id="50270629b3dafeeafed7462734d9b34f2cc291ea" translate="yes" xml:space="preserve">
          <source>Returns a non-negative value on success where the following bits can be set:</source>
          <target state="translated">成功后返回一个非负值,以下位可以设置。</target>
        </trans-unit>
        <trans-unit id="2d93e71a340752a5f5290f10d48436940f20b574" translate="yes" xml:space="preserve">
          <source>Returns a normal N(Mean, Variance) deviate float and updates the state in the process dictionary.</source>
          <target state="translated">返回一个正态的N(Mean,Variance)偏差浮点数,并更新过程字典中的状态。</target>
        </trans-unit>
        <trans-unit id="4d38c985d064614595f3a0fa28e7ddf78a708833" translate="yes" xml:space="preserve">
          <source>Returns a number indicating the number of processes that matched &lt;code&gt;PidPortSpec&lt;/code&gt;. If &lt;code&gt;PidPortSpec&lt;/code&gt; is a process identifier, the return value is &lt;code&gt;1&lt;/code&gt;. If &lt;code&gt;PidPortSpec&lt;/code&gt; is &lt;code&gt;all&lt;/code&gt; or &lt;code&gt;existing&lt;/code&gt;, the return value is the number of processes running. If &lt;code&gt;PidPortSpec&lt;/code&gt; is &lt;code&gt;new&lt;/code&gt;, the return value is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">返回一个数字，该数字指示与 &lt;code&gt;PidPortSpec&lt;/code&gt; 匹配的进程数。如果 &lt;code&gt;PidPortSpec&lt;/code&gt; 是进程标识符，则返回值为 &lt;code&gt;1&lt;/code&gt; 。如果 &lt;code&gt;PidPortSpec&lt;/code&gt; 是 &lt;code&gt;all&lt;/code&gt; 或 &lt;code&gt;existing&lt;/code&gt; 的返回值是正在运行的进程数。如果 &lt;code&gt;PidPortSpec&lt;/code&gt; 是 &lt;code&gt;new&lt;/code&gt; ，则返回值为 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ce0bda480a992988544423b3c6fa8905aadc73a7" translate="yes" xml:space="preserve">
          <source>Returns a pair of sets that, regarded as constituting a set, forms a &lt;code&gt;&lt;a href=&quot;#partition&quot;&gt;partition&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;Set1&lt;/code&gt;. If the result of applying &lt;code&gt;SetFun&lt;/code&gt; to an element of &lt;code&gt;Set1&lt;/code&gt; gives an element in &lt;code&gt;Set2&lt;/code&gt;, the element belongs to &lt;code&gt;Set3&lt;/code&gt;, otherwise the element belongs to &lt;code&gt;Set4&lt;/code&gt;.</source>
          <target state="translated">返回一个对套的是，视为构成一组，形成 &lt;code&gt;&lt;a href=&quot;#partition&quot;&gt;partition&lt;/a&gt;&lt;/code&gt; 的 &lt;code&gt;Set1&lt;/code&gt; 。如果将 &lt;code&gt;SetFun&lt;/code&gt; 应用于 &lt;code&gt;Set1&lt;/code&gt; 的元素的结果给出 &lt;code&gt;Set2&lt;/code&gt; 中的元素，则该元素属于 &lt;code&gt;Set3&lt;/code&gt; ，否则该元素属于 &lt;code&gt;Set4&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="39f67903b4cc9df547e9b82924cf4116b4951f8e" translate="yes" xml:space="preserve">
          <source>Returns a performance counter that can be used as a very fast and high resolution timestamp. This counter is read directly from the hardware or operating system with the same guarantees. This means that two consecutive calls to the function are not guaranteed to be monotonic, though it most likely will be. The performance counter will be converted to the resolution passed as an argument.</source>
          <target state="translated">返回一个性能计数器,可以作为一个非常快速和高分辨率的时间戳。这个计数器是直接从硬件或操作系统中读取的,具有相同的保证。这意味着对该函数的两次连续调用并不能保证是单调的,尽管它很可能是单调的。性能计数器将被转换为作为参数传递的分辨率。</target>
        </trans-unit>
        <trans-unit id="1857f2d600eb2dbb33f64af93199be89a69a819b" translate="yes" xml:space="preserve">
          <source>Returns a pointer to a dynamically allocated buffer containing a string. If &lt;code&gt;list&lt;/code&gt; is not an I/O list, or if &lt;code&gt;list&lt;/code&gt; contains the integer 0, &lt;code&gt;NULL&lt;/code&gt; is returned. It is the caller's responsibility to free the allocated buffer with &lt;code&gt;erl_free()&lt;/code&gt;.</source>
          <target state="translated">返回指向包含字符串的动态分配缓冲区的指针。如果 &lt;code&gt;list&lt;/code&gt; 不是I / O列表，或者 &lt;code&gt;list&lt;/code&gt; 包含整数0，则返回 &lt;code&gt;NULL&lt;/code&gt; 。调用者有责任使用 &lt;code&gt;erl_free()&lt;/code&gt; 释放分配的缓冲区。</target>
        </trans-unit>
        <trans-unit id="98516b5a626e7b8596556a34709ca73247b01eaa" translate="yes" xml:space="preserve">
          <source>Returns a pointer to a subterm that can be used in a later call to &lt;code&gt;erl_decode()&lt;/code&gt; to retrieve the term at that position. If there is no term, or &lt;code&gt;pos&lt;/code&gt; would exceed the size of the terms in the buffer, &lt;code&gt;NULL&lt;/code&gt; is returned.</source>
          <target state="translated">返回指向子项的指针，该子项可在以后的 &lt;code&gt;erl_decode()&lt;/code&gt; 调用中使用，以检索该位置的项。如果没有条件，或者 &lt;code&gt;pos&lt;/code&gt; 将超过缓冲区中条件的大小，则返回 &lt;code&gt;NULL&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="738279ad9c25157358239c6c5bc58c59b10a737b" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the mutex name.</source>
          <target state="translated">返回指向mutex名称的指针。</target>
        </trans-unit>
        <trans-unit id="ad33e5274a9c6e8726271829305d60b5c1898046" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the name of the condition.</source>
          <target state="translated">返回指向条件名称的指针。</target>
        </trans-unit>
        <trans-unit id="0236a2b61b14c10b30aba53ffa3f9d6657a360d5" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the name of the rwlock.</source>
          <target state="translated">返回指向rwlock名称的指针。</target>
        </trans-unit>
        <trans-unit id="34cdae0227fab5cdeaeb8741625ac7444eb216e2" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the name of the thread.</source>
          <target state="translated">返回指向线程名称的指针。</target>
        </trans-unit>
        <trans-unit id="1632cb168390baa31ea4378dbe892487fdec9c10" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the raw binary data and sets &lt;code&gt;*termp&lt;/code&gt; to the binary term.</source>
          <target state="translated">返回指向原始二进制数据的指针，并将 &lt;code&gt;*termp&lt;/code&gt; 设置为二进制项。</target>
        </trans-unit>
        <trans-unit id="a4a9c476e43b8961c65de17c74e3c3bdb342013b" translate="yes" xml:space="preserve">
          <source>Returns a port identifier &lt;code&gt;Port&lt;/code&gt; as the result of opening a new Erlang port. Messages can be sent to, and received from, a port identifier, just like a pid. Port identifiers can also be linked to using &lt;code&gt;link/1&lt;/code&gt;, or registered under a name using &lt;code&gt;register/2&lt;/code&gt;.</source>
          <target state="translated">作为打开新的Erlang端口的结果，返回端口标识符 &lt;code&gt;Port&lt;/code&gt; 。可以像pid一样将消息发送到端口标识符或从中接收消息。端口标识符也可以使用 &lt;code&gt;link/1&lt;/code&gt; 链接到，或使用 &lt;code&gt;register/2&lt;/code&gt; 以名称注册。</target>
        </trans-unit>
        <trans-unit id="ea32cacd6364b95061a97d1cb1603d042e7fa2f6" translate="yes" xml:space="preserve">
          <source>Returns a port identifier as the result of opening a new Erlang port. A port can be seen as an external Erlang process.</source>
          <target state="translated">返回打开新的 Erlang port 后的 port 标识符。端口可以看作是一个外部的 Erlang 进程。</target>
        </trans-unit>
        <trans-unit id="549ae3ced02337c9218c3560bd2c5d22638a139a" translate="yes" xml:space="preserve">
          <source>Returns a port identifier whose text representation is a &lt;code&gt;String&lt;/code&gt;, for example:</source>
          <target state="translated">返回端口标识符，其文本表示形式为 &lt;code&gt;String&lt;/code&gt; ，例如：</target>
        </trans-unit>
        <trans-unit id="34378032b52dc70a1698e3af6cc3f1c7d64920c1" translate="yes" xml:space="preserve">
          <source>Returns a process identifier whose text representation is a &lt;code&gt;String&lt;/code&gt;, for example:</source>
          <target state="translated">返回一个过程标识符，其文本表示形式为 &lt;code&gt;String&lt;/code&gt; ，例如：</target>
        </trans-unit>
        <trans-unit id="475f248087f9c4fb29685c91698ec5831e8d5075" translate="yes" xml:space="preserve">
          <source>Returns a property list (see &lt;code&gt;&lt;a href=&quot;proplists&quot;&gt;proplists&lt;/a&gt;&lt;/code&gt;) containing the counts for each of the following elements of the supervisor's child specifications and managed processes:</source>
          <target state="translated">返回一个属性列表（请参阅 &lt;code&gt;&lt;a href=&quot;proplists&quot;&gt;proplists&lt;/a&gt;&lt;/code&gt; ），其中包含主管的子规范和托管流程的以下每个元素的计数：</target>
        </trans-unit>
        <trans-unit id="c53e20ed0d00e49d31e0aa5aa4f54ac6264c5c5e" translate="yes" xml:space="preserve">
          <source>Returns a query handle for a QLC table. In Erlang/OTP there is support for ETS, Dets, and Mnesia tables, but many other data structures can be turned into QLC tables. This is accomplished by letting function(s) in the module implementing the data structure create a query handle by calling &lt;code&gt;qlc:table/2&lt;/code&gt;. The different ways to traverse the table and properties of the table are handled by callback functions provided as options to &lt;code&gt;qlc:table/2&lt;/code&gt;.</source>
          <target state="translated">返回QLC表的查询句柄。在Erlang / OTP中，支持ETS，Dets和Mnesia表，但是许多其他数据结构可以转换为QLC表。这是通过让实现数据结构的模块中的函数通过调用 &lt;code&gt;qlc:table/2&lt;/code&gt; 创建查询句柄来实现的。遍历表和表属性的不同方法由作为 &lt;code&gt;qlc:table/2&lt;/code&gt; 选项提供的回调函数处理。</target>
        </trans-unit>
        <trans-unit id="bc6fefdf356fea365a23c8acde6c866a605532d9" translate="yes" xml:space="preserve">
          <source>Returns a query handle for a QLC. The QLC must be the first argument to this function, otherwise it is evaluated as an ordinary list comprehension. It is also necessary to add the following line to the source code:</source>
          <target state="translated">返回一个QLC的查询句柄。QLC必须是这个函数的第一个参数,否则它将作为一个普通的列表理解来计算。还需要在源代码中添加以下一行。</target>
        </trans-unit>
        <trans-unit id="13597ae114db01f956de1e90cbe62d0d265a9c96" translate="yes" xml:space="preserve">
          <source>Returns a query handle. When evaluating query handle &lt;code&gt;QH2&lt;/code&gt;, the answers to query handle &lt;code&gt;QH1&lt;/code&gt; are sorted by &lt;code&gt;&lt;a href=&quot;file_sorter#keysort-4&quot;&gt;file_sorter:keysort/4&lt;/a&gt;&lt;/code&gt; according to the options.</source>
          <target state="translated">返回查询句柄。在评估查询句柄 &lt;code&gt;QH2&lt;/code&gt; 时，根据选项，通过 &lt;code&gt;&lt;a href=&quot;file_sorter#keysort-4&quot;&gt;file_sorter:keysort/4&lt;/a&gt;&lt;/code&gt; 对查询句柄 &lt;code&gt;QH1&lt;/code&gt; 的答案进行排序。</target>
        </trans-unit>
        <trans-unit id="49fdde57e389d284799c22342f17d306ca57749e" translate="yes" xml:space="preserve">
          <source>Returns a query handle. When evaluating query handle &lt;code&gt;QH2&lt;/code&gt;, the answers to query handle &lt;code&gt;QH1&lt;/code&gt; are sorted by &lt;code&gt;&lt;a href=&quot;file_sorter#sort-3&quot;&gt;file_sorter:sort/3&lt;/a&gt;&lt;/code&gt; according to the options.</source>
          <target state="translated">返回查询句柄。在评估查询句柄 &lt;code&gt;QH2&lt;/code&gt; 时，根据选项，通过 &lt;code&gt;&lt;a href=&quot;file_sorter#sort-3&quot;&gt;file_sorter:sort/3&lt;/a&gt;&lt;/code&gt; 对查询句柄 &lt;code&gt;QH1&lt;/code&gt; 的答案进行排序。</target>
        </trans-unit>
        <trans-unit id="8875629f1300f906d14654a0c483b031376d3cd9" translate="yes" xml:space="preserve">
          <source>Returns a query handle. When evaluating query handle &lt;code&gt;QH3&lt;/code&gt;, all answers to &lt;code&gt;QH1&lt;/code&gt; are returned, followed by all answers to &lt;code&gt;QH2&lt;/code&gt;.</source>
          <target state="translated">返回查询句柄。评估查询句柄 &lt;code&gt;QH3&lt;/code&gt; 时，将返回对 &lt;code&gt;QH1&lt;/code&gt; 的所有答案，然后返回对 &lt;code&gt;QH2&lt;/code&gt; 的所有答案。</target>
        </trans-unit>
        <trans-unit id="2f8da3937aac99f038108c359dfdfa445ced24fb" translate="yes" xml:space="preserve">
          <source>Returns a query handle. When evaluating query handle &lt;code&gt;QH&lt;/code&gt;, all answers to the first query handle in &lt;code&gt;QHL&lt;/code&gt; are returned, followed by all answers to the remaining query handles in &lt;code&gt;QHL&lt;/code&gt;.</source>
          <target state="translated">返回查询句柄。当评估查询处理 &lt;code&gt;QH&lt;/code&gt; ，所有的答案，第一个查询手柄 &lt;code&gt;QHL&lt;/code&gt; 返回，然后是所有的答案中的其余查询手柄 &lt;code&gt;QHL&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5a1d738bb5afe4518c8379826056585c25a992bd" translate="yes" xml:space="preserve">
          <source>Returns a queue &lt;code&gt;Q2&lt;/code&gt; containing the items of &lt;code&gt;Q1&lt;/code&gt; in the reverse order.</source>
          <target state="translated">以相反的顺序返回包含 &lt;code&gt;Q1&lt;/code&gt; 项的队列 &lt;code&gt;Q2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e196ff3d55fb6fa7fcb6519db49f306184136ab7" translate="yes" xml:space="preserve">
          <source>Returns a queue &lt;code&gt;Q2&lt;/code&gt; that is the result of calling &lt;code&gt;Fun(Item)&lt;/code&gt; on all items in &lt;code&gt;Q1&lt;/code&gt;, in order from front to rear.</source>
          <target state="translated">返回一个队列 &lt;code&gt;Q2&lt;/code&gt; ，该队列是对 &lt;code&gt;Q1&lt;/code&gt; 中的所有项目按从前到后的顺序调用 &lt;code&gt;Fun(Item)&lt;/code&gt; 的结果。</target>
        </trans-unit>
        <trans-unit id="fc688776bc490270c0f81180569b41a72371fe8a" translate="yes" xml:space="preserve">
          <source>Returns a queue &lt;code&gt;Q2&lt;/code&gt; that is the result of removing the front item from &lt;code&gt;Q1&lt;/code&gt;.</source>
          <target state="translated">返回队列 &lt;code&gt;Q2&lt;/code&gt; ，该队列是从 &lt;code&gt;Q1&lt;/code&gt; 中删除前一项的结果。</target>
        </trans-unit>
        <trans-unit id="7866351e56d26351d3905136cdca01271e3003ce" translate="yes" xml:space="preserve">
          <source>Returns a queue &lt;code&gt;Q2&lt;/code&gt; that is the result of removing the head item from &lt;code&gt;Q1&lt;/code&gt;.</source>
          <target state="translated">返回队列 &lt;code&gt;Q2&lt;/code&gt; ，该队列是从 &lt;code&gt;Q1&lt;/code&gt; 删除标题项的结果。</target>
        </trans-unit>
        <trans-unit id="3d84547dca262b8b2adbada430f33494114cb921" translate="yes" xml:space="preserve">
          <source>Returns a queue &lt;code&gt;Q2&lt;/code&gt; that is the result of removing the rear item from &lt;code&gt;Q1&lt;/code&gt;.</source>
          <target state="translated">返回队列 &lt;code&gt;Q2&lt;/code&gt; ，该队列是从 &lt;code&gt;Q1&lt;/code&gt; 中删除后一项的结果。</target>
        </trans-unit>
        <trans-unit id="1f2d3c60bdc7c08da57f3619f31be48f2ee0cd4b" translate="yes" xml:space="preserve">
          <source>Returns a queue &lt;code&gt;Q2&lt;/code&gt; that is the result of removing the tail item from &lt;code&gt;Q1&lt;/code&gt;.</source>
          <target state="translated">返回队列 &lt;code&gt;Q2&lt;/code&gt; ，该队列是从 &lt;code&gt;Q1&lt;/code&gt; 删除尾项的结果。</target>
        </trans-unit>
        <trans-unit id="33b4357dbf4625d2bb49c9f673f132d92849bcfd" translate="yes" xml:space="preserve">
          <source>Returns a queue &lt;code&gt;Q3&lt;/code&gt; that is the result of joining &lt;code&gt;Q1&lt;/code&gt; and &lt;code&gt;Q2&lt;/code&gt; with &lt;code&gt;Q1&lt;/code&gt; in front of &lt;code&gt;Q2&lt;/code&gt;.</source>
          <target state="translated">返回队列 &lt;code&gt;Q3&lt;/code&gt; ，该队列是将 &lt;code&gt;Q1&lt;/code&gt; 和 &lt;code&gt;Q2&lt;/code&gt; 与 &lt;code&gt;Q2&lt;/code&gt; 前面的 &lt;code&gt;Q1&lt;/code&gt; 连接在一起的结果。</target>
        </trans-unit>
        <trans-unit id="0721f3e84c31aa90efcf282f74b77512e19d40eb" translate="yes" xml:space="preserve">
          <source>Returns a queue containing the items in &lt;code&gt;L&lt;/code&gt; in the same order; the head item of the list becomes the front item of the queue.</source>
          <target state="translated">以相同的顺序返回包含 &lt;code&gt;L&lt;/code&gt; 中的项目的队列；列表的首项成为队列的首项。</target>
        </trans-unit>
        <trans-unit id="3c13ac8791052956515344c82c17f8e137051af7" translate="yes" xml:space="preserve">
          <source>Returns a random float uniformly distributed between &lt;code&gt;0.0&lt;/code&gt; and &lt;code&gt;1.0&lt;/code&gt;, updating the state in the process dictionary.</source>
          <target state="translated">返回在 &lt;code&gt;0.0&lt;/code&gt; 和 &lt;code&gt;1.0&lt;/code&gt; 之间均匀分布的随机浮点数，从而更新过程字典中的状态。</target>
        </trans-unit>
        <trans-unit id="5ffd661695d1f146c4d4b52eece1203485c98b21" translate="yes" xml:space="preserve">
          <source>Returns a random float uniformly distributed in the value range &lt;code&gt;0.0 =&amp;lt; X &amp;lt; 1.0&lt;/code&gt; and updates the state in the process dictionary.</source>
          <target state="translated">返回在 &lt;code&gt;0.0 =&amp;lt; X &amp;lt; 1.0&lt;/code&gt; 范围内均匀分布的随机浮点数，并更新过程字典中的状态。</target>
        </trans-unit>
        <trans-unit id="eac6bc74d4e0acad3c62b2f96267d447e245c7a6" translate="yes" xml:space="preserve">
          <source>Returns a random float uniformly distributed in the value range &lt;code&gt;DBL_MIN =&amp;lt; X &amp;lt; 1.0&lt;/code&gt; and updates the state in the process dictionary.</source>
          <target state="translated">返回在值范围 &lt;code&gt;DBL_MIN =&amp;lt; X &amp;lt; 1.0&lt;/code&gt; 均匀分布的随机浮点，并更新过程字典中的状态。</target>
        </trans-unit>
        <trans-unit id="220e5a07c91a567d9306f69e052d7530c918c974" translate="yes" xml:space="preserve">
          <source>Returns a reference whose text representation is a &lt;code&gt;String&lt;/code&gt;, for example:</source>
          <target state="translated">返回其文本表示形式为 &lt;code&gt;String&lt;/code&gt; 的引用，例如：</target>
        </trans-unit>
        <trans-unit id="5981a9c84fff78d573bbd1e25c8f19a1a7c41b47" translate="yes" xml:space="preserve">
          <source>Returns a representation of the attributes associated with a syntax tree node. The attributes are all the extra information that can be attached to a node. Currently, this includes position information, source code comments, and user annotations. The result of this function cannot be inspected directly; only attached to another node (see &lt;code&gt;&lt;a href=&quot;#set_attrs-2&quot;&gt;set_attrs/2&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">返回与语法树节点关联的属性的表示形式。这些属性是可以附加到节点的所有其他信息。当前，这包括位置信息，源代码注释和用户注释。此功能的结果无法直接检查；仅附加到另一个节点（请参阅 &lt;code&gt;&lt;a href=&quot;#set_attrs-2&quot;&gt;set_attrs/2&lt;/a&gt;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="41c3c0aa8007477bae8340b92aecee54aba8147e" translate="yes" xml:space="preserve">
          <source>Returns a runtime system independent version of the microstate statistics data presented by &lt;code&gt;erlang:statistics(microstate_accounting)&lt;/code&gt;. All counters have been normalized to be in microsecond resolution.</source>
          <target state="translated">返回由 &lt;code&gt;erlang:statistics(microstate_accounting)&lt;/code&gt; 表示的微状态统计数据的运行时系统独立版本。所有计数器均已标准化为微秒分辨率。</target>
        </trans-unit>
        <trans-unit id="639003c0bcc32fe7eb6be91e1cb42c7c94c0e076" translate="yes" xml:space="preserve">
          <source>Returns a sequence of integers that starts with &lt;code&gt;From&lt;/code&gt; and contains the successive results of adding &lt;code&gt;Incr&lt;/code&gt; to the previous element, until &lt;code&gt;To&lt;/code&gt; is reached or passed (in the latter case, &lt;code&gt;To&lt;/code&gt; is not an element of the sequence). &lt;code&gt;Incr&lt;/code&gt; defaults to 1.</source>
          <target state="translated">返回一个以 &lt;code&gt;From&lt;/code&gt; 开头的整数序列，该整数序列包含将 &lt;code&gt;Incr&lt;/code&gt; 添加到前一个元素的连续结果，直到达到或传递 &lt;code&gt;To&lt;/code&gt; （在后一种情况下， &lt;code&gt;To&lt;/code&gt; 不是序列的元素）。 &lt;code&gt;Incr&lt;/code&gt; 默认为1。</target>
        </trans-unit>
        <trans-unit id="8b3cb83da87bf82fcc52a1009c086d823d2d7f98" translate="yes" xml:space="preserve">
          <source>Returns a set containing only element &lt;code&gt;Element&lt;/code&gt;.</source>
          <target state="translated">返回仅包含元素 &lt;code&gt;Element&lt;/code&gt; 的集合。</target>
        </trans-unit>
        <trans-unit id="6f10fef368394c28f1d20e18f2a6039026240320" translate="yes" xml:space="preserve">
          <source>Returns a set of the elements in &lt;code&gt;List&lt;/code&gt;, where &lt;code&gt;List&lt;/code&gt; can be unordered and contain duplicates.</source>
          <target state="translated">返回 &lt;code&gt;List&lt;/code&gt; 中的一组元素，其中 &lt;code&gt;List&lt;/code&gt; 可以是无序的并且包含重复项。</target>
        </trans-unit>
        <trans-unit id="753f6ab832bf18ad6e71eab42e1639c10f7f8d5e" translate="yes" xml:space="preserve">
          <source>Returns a set of the elements in &lt;code&gt;List&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;List&lt;/code&gt; 中的一组元素。</target>
        </trans-unit>
        <trans-unit id="a98dc36da5b203b779b5c5939c13afc2118a29d9" translate="yes" xml:space="preserve">
          <source>Returns a sorted lists of the names of the variables of an &lt;code&gt;&lt;a href=&quot;#xref_server&quot;&gt;Xref server&lt;/a&gt;&lt;/code&gt;. The default is to return the &lt;code&gt;&lt;a href=&quot;#user_variable&quot;&gt;user variables&lt;/a&gt;&lt;/code&gt; only.</source>
          <target state="translated">返回外部 &lt;code&gt;&lt;a href=&quot;#xref_server&quot;&gt;Xref server&lt;/a&gt;&lt;/code&gt; 变量名称的排序列表。默认为仅返回 &lt;code&gt;&lt;a href=&quot;#user_variable&quot;&gt;user variables&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4d0a71645d1f3545b0c4bb0969a3ef5985a3224a" translate="yes" xml:space="preserve">
          <source>Returns a standard normal deviate float (that is, the mean is 0 and the standard deviation is 1) and updates the state in the process dictionary.</source>
          <target state="translated">返回一个标准正态偏差浮点数(即平均值为0,标准偏差为1),并更新过程字典中的状态。</target>
        </trans-unit>
        <trans-unit id="5c1ea25fa4c5f8b145f8f707d7f1c4662e2f7b63" translate="yes" xml:space="preserve">
          <source>Returns a string consisting of &lt;code&gt;Number&lt;/code&gt; characters &lt;code&gt;Character&lt;/code&gt;. Optionally, the string can end with string &lt;code&gt;Tail&lt;/code&gt;.</source>
          <target state="translated">返回由 &lt;code&gt;Number&lt;/code&gt; 字符 &lt;code&gt;Character&lt;/code&gt; 组成的字符串。可选地，字符串可以以字符串 &lt;code&gt;Tail&lt;/code&gt; 结尾。</target>
        </trans-unit>
        <trans-unit id="8eb5679eca27a81f2f8c00730da843064fd19386" translate="yes" xml:space="preserve">
          <source>Returns a string containing &lt;code&gt;String&lt;/code&gt; repeated &lt;code&gt;Number&lt;/code&gt; times.</source>
          <target state="translated">返回一个包含 &lt;code&gt;String&lt;/code&gt; 重复 &lt;code&gt;Number&lt;/code&gt; 次的字符串。</target>
        </trans-unit>
        <trans-unit id="ca720cab6edb5af65d70d200416f25bce42dff96" translate="yes" xml:space="preserve">
          <source>Returns a string containing the Erlang driver version used by the runtime system. It has the form &lt;code&gt;&quot;&amp;lt;major ver&amp;gt;.&amp;lt;minor ver&amp;gt;&quot;&lt;/code&gt;.</source>
          <target state="translated">返回一个字符串，其中包含运行时系统使用的Erlang驱动程序版本。它的格式为 &lt;code&gt;&quot;&amp;lt;major ver&amp;gt;.&amp;lt;minor ver&amp;gt;&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1ece8e40e1f507575b3bf20fd73a6e0672d7350c" translate="yes" xml:space="preserve">
          <source>Returns a string containing the Erlang machine name.</source>
          <target state="translated">返回一个包含Erlang机器名称的字符串。</target>
        </trans-unit>
        <trans-unit id="4a7d526e434bb32d45334ad10ea54c1c2f791139" translate="yes" xml:space="preserve">
          <source>Returns a string containing the OTP release number of the OTP release that the currently executing ERTS application is part of.</source>
          <target state="translated">返回一个字符串,包含当前正在执行的 ERTS 应用程序所属的 OTP 版本号。</target>
        </trans-unit>
        <trans-unit id="a5c774d62af9c350116ae56e808daa9a8135061e" translate="yes" xml:space="preserve">
          <source>Returns a string containing the processor and OS architecture the emulator is built for.</source>
          <target state="translated">返回一个字符串,包含仿真器的处理器和操作系统架构。</target>
        </trans-unit>
        <trans-unit id="821408643d3812334edfe7c70f2c8bdd3090056c" translate="yes" xml:space="preserve">
          <source>Returns a string containing the version number of the emulator.</source>
          <target state="translated">返回一个包含仿真器版本号的字符串。</target>
        </trans-unit>
        <trans-unit id="4ad4f5193c4b241dc3533ca0bd261ddcc8281845" translate="yes" xml:space="preserve">
          <source>Returns a string containing the version of the Erlang NIF interface used by the runtime system. It is on the form &quot;&amp;lt;major ver&amp;gt;.&amp;lt;minor ver&amp;gt;&quot;.</source>
          <target state="translated">返回一个字符串，其中包含运行时系统使用的Erlang NIF接口的版本。它的格式为&amp;ldquo; &amp;lt;主要版本&amp;gt;。&amp;lt;次要版本&amp;gt;&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="249a381d6d64e85569639e56f4abc0c76775977f" translate="yes" xml:space="preserve">
          <source>Returns a string containing version number and some important properties, such as the number of schedulers.</source>
          <target state="translated">返回一个包含版本号和一些重要属性的字符串,如调度器的数量。</target>
        </trans-unit>
        <trans-unit id="592cba2a4f69e8ba547f8910b96da1e46a1c67d8" translate="yes" xml:space="preserve">
          <source>Returns a string corresponding to the text representation of &lt;code&gt;Atom&lt;/code&gt;, for example:</source>
          <target state="translated">返回与 &lt;code&gt;Atom&lt;/code&gt; 的文本表示形式对应的字符串，例如：</target>
        </trans-unit>
        <trans-unit id="321baf49392c0eafb95b3b64884a211ea92a6f7e" translate="yes" xml:space="preserve">
          <source>Returns a string corresponding to the text representation of &lt;code&gt;Float&lt;/code&gt; using fixed decimal point formatting.</source>
          <target state="translated">使用固定的小数点格式返回与 &lt;code&gt;Float&lt;/code&gt; 的文本表示形式相对应的字符串。</target>
        </trans-unit>
        <trans-unit id="845804924b90ea31613ae6d5ea09637d3555f2ae" translate="yes" xml:space="preserve">
          <source>Returns a string corresponding to the text representation of &lt;code&gt;Fun&lt;/code&gt;.</source>
          <target state="translated">返回与 &lt;code&gt;Fun&lt;/code&gt; 的文本表示形式相对应的字符串。</target>
        </trans-unit>
        <trans-unit id="d750f9d480b4bae30d0af2c744ba69c36ebeaa17" translate="yes" xml:space="preserve">
          <source>Returns a string corresponding to the text representation of &lt;code&gt;Integer&lt;/code&gt; in base &lt;code&gt;Base&lt;/code&gt;, for example:</source>
          <target state="translated">对应于文本表示形式的字符串返回 &lt;code&gt;Integer&lt;/code&gt; 在碱 &lt;code&gt;Base&lt;/code&gt; ，例如：</target>
        </trans-unit>
        <trans-unit id="d28245f1e2faea5c401927009ee01c220d8c620b" translate="yes" xml:space="preserve">
          <source>Returns a string corresponding to the text representation of &lt;code&gt;Integer&lt;/code&gt;, for example:</source>
          <target state="translated">返回与 &lt;code&gt;Integer&lt;/code&gt; 的文本表示形式对应的字符串，例如：</target>
        </trans-unit>
        <trans-unit id="0b33ef62cb3a9619f4bb28cafc910beb1049d31b" translate="yes" xml:space="preserve">
          <source>Returns a string corresponding to the text representation of &lt;code&gt;Pid&lt;/code&gt;.</source>
          <target state="translated">返回与 &lt;code&gt;Pid&lt;/code&gt; 的文本表示形式对应的字符串。</target>
        </trans-unit>
        <trans-unit id="a01f4beff7183843fdd5fec40bac132ab6f148c2" translate="yes" xml:space="preserve">
          <source>Returns a string corresponding to the text representation of &lt;code&gt;Ref&lt;/code&gt;.</source>
          <target state="translated">返回与 &lt;code&gt;Ref&lt;/code&gt; 的文本表示形式对应的字符串。</target>
        </trans-unit>
        <trans-unit id="d129c7d8767c6334e5a4a61ca3f9d29803c4e6f8" translate="yes" xml:space="preserve">
          <source>Returns a string corresponding to the text representation of the port identifier &lt;code&gt;Port&lt;/code&gt;.</source>
          <target state="translated">返回与端口标识符 &lt;code&gt;Port&lt;/code&gt; 的文本表示形式对应的字符串。</target>
        </trans-unit>
        <trans-unit id="722bee6a2590720890936d18e6c3a69afefa6faa" translate="yes" xml:space="preserve">
          <source>Returns a string representation of an encoding. The string is recognized by &lt;code&gt;&lt;a href=&quot;#read_encoding-1&quot;&gt;read_encoding/1,2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#read_encoding_from_binary-1&quot;&gt;read_encoding_from_binary/1,2&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;#set_encoding-1&quot;&gt;set_encoding/1,2&lt;/a&gt;&lt;/code&gt; as a valid encoding.</source>
          <target state="translated">返回编码的字符串表示形式。该字符串由 &lt;code&gt;&lt;a href=&quot;#read_encoding-1&quot;&gt;read_encoding/1,2&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;#read_encoding_from_binary-1&quot;&gt;read_encoding_from_binary/1,2&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;#set_encoding-1&quot;&gt;set_encoding/1,2&lt;/a&gt;&lt;/code&gt; 识别为有效编码。</target>
        </trans-unit>
        <trans-unit id="67af947c46cc1e568aec078c3d6093f6948052aa" translate="yes" xml:space="preserve">
          <source>Returns a string where any trailing &lt;code&gt;\n&lt;/code&gt; or &lt;code&gt;\r\n&lt;/code&gt; have been removed from &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">返回已从 &lt;code&gt;String&lt;/code&gt; 中删除任何尾随 &lt;code&gt;\n&lt;/code&gt; 或 &lt;code&gt;\r\n&lt;/code&gt; 字符串。</target>
        </trans-unit>
        <trans-unit id="4a0cd3b8788f1f4abd133a92ff4a9323bf82931f" translate="yes" xml:space="preserve">
          <source>Returns a string which describes the error &lt;code&gt;ErrorInfo&lt;/code&gt; returned when there is an error in a regular expression.</source>
          <target state="translated">返回一个字符串，该字符串描述当正则表达式中存在错误时返回的错误 &lt;code&gt;ErrorInfo&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ed93319dfab86a95c5d7739f463d1f22d56b5ff7" translate="yes" xml:space="preserve">
          <source>Returns a string with the elements of &lt;code&gt;StringList&lt;/code&gt; separated by the string in &lt;code&gt;Separator&lt;/code&gt;.</source>
          <target state="translated">返回一个字符串，其中 &lt;code&gt;StringList&lt;/code&gt; 的元素由 &lt;code&gt;Separator&lt;/code&gt; 中的字符串分隔。</target>
        </trans-unit>
        <trans-unit id="d3f6a4bb443347056ff4bb78fd9be46ff4f44f39" translate="yes" xml:space="preserve">
          <source>Returns a string, where &lt;code&gt;String&lt;/code&gt; is centered in the string and surrounded by blanks or &lt;code&gt;Character&lt;/code&gt;. The resulting string has length &lt;code&gt;Number&lt;/code&gt;.</source>
          <target state="translated">返回一个字符串，其中 &lt;code&gt;String&lt;/code&gt; 以字符串为中心，并用空格或 &lt;code&gt;Character&lt;/code&gt; 包围。结果字符串的长度为 &lt;code&gt;Number&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="856440dd7379ef2ee50b8dbbe737f978de9a80e4" translate="yes" xml:space="preserve">
          <source>Returns a string, where leading or trailing, or both, &lt;code&gt;Characters&lt;/code&gt; have been removed. &lt;code&gt;Dir&lt;/code&gt; which can be &lt;code&gt;leading&lt;/code&gt;, &lt;code&gt;trailing&lt;/code&gt;, or &lt;code&gt;both&lt;/code&gt;, indicates from which direction characters are to be removed.</source>
          <target state="translated">返回一个字符串，其中删除了前导字符或结尾 &lt;code&gt;Characters&lt;/code&gt; ，或同时删除了这两个字符。 &lt;code&gt;Dir&lt;/code&gt; 可以是 &lt;code&gt;leading&lt;/code&gt; ， &lt;code&gt;trailing&lt;/code&gt; 或 &lt;code&gt;both&lt;/code&gt; ，指示要从哪个方向删除字符。</target>
        </trans-unit>
        <trans-unit id="578a3937330919a210b2dcef50f14c32643c53b8" translate="yes" xml:space="preserve">
          <source>Returns a string, where leading or trailing, or both, blanks or a number of &lt;code&gt;Character&lt;/code&gt; have been removed. &lt;code&gt;Direction&lt;/code&gt;, which can be &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;, or &lt;code&gt;both&lt;/code&gt;, indicates from which direction blanks are to be removed. &lt;code&gt;strip/1&lt;/code&gt; is equivalent to &lt;code&gt;strip(String, both)&lt;/code&gt;.</source>
          <target state="translated">返回一个字符串，其中前导或尾随或空格和多个 &lt;code&gt;Character&lt;/code&gt; 均已删除。 &lt;code&gt;Direction&lt;/code&gt; 可以为 &lt;code&gt;left&lt;/code&gt; ， &lt;code&gt;right&lt;/code&gt; 或 &lt;code&gt;both&lt;/code&gt; ，指示要从哪个方向移除毛坯。 &lt;code&gt;strip/1&lt;/code&gt; 等效于 &lt;code&gt;strip(String, both)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3b61c0f61aabf0a3f7ea6fd4848159462feb7998" translate="yes" xml:space="preserve">
          <source>Returns a subset S of the &lt;code&gt;&lt;a href=&quot;#weak_relation&quot;&gt;weak relation&lt;/a&gt;&lt;/code&gt; W corresponding to the binary relation &lt;code&gt;BinRel1&lt;/code&gt;. Let F be the &lt;code&gt;&lt;a href=&quot;#field&quot;&gt;field&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;BinRel1&lt;/code&gt;. The subset S is defined so that x S y if x W y for some x in F and for some y in F.</source>
          <target state="translated">返回的子集S &lt;code&gt;&lt;a href=&quot;#weak_relation&quot;&gt;weak relation&lt;/a&gt;&lt;/code&gt; W&amp;macr;&amp;macr;对应的二元关系 &lt;code&gt;BinRel1&lt;/code&gt; 。令F 为 &lt;code&gt;BinRel1&lt;/code&gt; 的 &lt;code&gt;&lt;a href=&quot;#field&quot;&gt;field&lt;/a&gt;&lt;/code&gt; 。定义子集S使得对于F中的某些x和F中的某些y如果x W y为x S y。</target>
        </trans-unit>
        <trans-unit id="b2eb6357fa31863d69699995784e8ab743fe546e" translate="yes" xml:space="preserve">
          <source>Returns a subset of &lt;code&gt;Set1&lt;/code&gt; containing those elements that do not give an element in &lt;code&gt;Set2&lt;/code&gt; as the result of applying &lt;code&gt;SetFun&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;Set1&lt;/code&gt; 的子集，其中包含那些由于应用 &lt;code&gt;SetFun&lt;/code&gt; 而在 &lt;code&gt;Set2&lt;/code&gt; 中不提供元素的元素。</target>
        </trans-unit>
        <trans-unit id="07ede649fccf16d077bd784e71f2b2ea53bba28d" translate="yes" xml:space="preserve">
          <source>Returns a subset of &lt;code&gt;Set1&lt;/code&gt; containing those elements that gives an element in &lt;code&gt;Set2&lt;/code&gt; as the result of applying &lt;code&gt;SetFun&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;Set1&lt;/code&gt; 的子集，其中包含那些元素，这些元素在应用 &lt;code&gt;SetFun&lt;/code&gt; 的结果中给出 &lt;code&gt;Set2&lt;/code&gt; 中的元素。</target>
        </trans-unit>
        <trans-unit id="e11559487c6f5bd3d643533e9faacfe01f709456" translate="yes" xml:space="preserve">
          <source>Returns a substring of &lt;code&gt;String&lt;/code&gt; of at most &lt;code&gt;Length&lt;/code&gt; grapheme clusters, starting at position &lt;code&gt;Start&lt;/code&gt;.</source>
          <target state="translated">从位置 &lt;code&gt;Start&lt;/code&gt; 返回最大为 &lt;code&gt;Length&lt;/code&gt; 字素簇的 &lt;code&gt;String&lt;/code&gt; 的子字符串。</target>
        </trans-unit>
        <trans-unit id="953a90492454dd674656729b23274ea4c43bf73d" translate="yes" xml:space="preserve">
          <source>Returns a substring of &lt;code&gt;String&lt;/code&gt;, starting at position &lt;code&gt;Start&lt;/code&gt; to the end of the string, or to and including position &lt;code&gt;Stop&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;String&lt;/code&gt; 的子字符串，从子位置 &lt;code&gt;Start&lt;/code&gt; 到字符串的末尾，或者直到位置 &lt;code&gt;Stop&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f365d6065acb778455e6e12b3c74c9416301cb1a" translate="yes" xml:space="preserve">
          <source>Returns a substring of &lt;code&gt;String&lt;/code&gt;, starting at position &lt;code&gt;Start&lt;/code&gt;, and ending at the end of the string or at length &lt;code&gt;Length&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;String&lt;/code&gt; 的子字符串，该字符串的起始位置为 &lt;code&gt;Start&lt;/code&gt; ，终止于字符串的末尾或长度为 &lt;code&gt;Length&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="269b906ff1204a86bc1f9bdf30b2139db27bb7f8" translate="yes" xml:space="preserve">
          <source>Returns a suitable &lt;code&gt;regexp&lt;/code&gt; string matching common prompts for users on Unix hosts.</source>
          <target state="translated">返回合适的 &lt;code&gt;regexp&lt;/code&gt; 字符串，与Unix主机上用户的常见提示匹配。</target>
        </trans-unit>
        <trans-unit id="2c78c1be16943a0ae8debbcf9106e3ad03551724" translate="yes" xml:space="preserve">
          <source>Returns a suitable path, or paths, for a given type. If &lt;code&gt;os&lt;/code&gt; is not set in &lt;code&gt;Opts&lt;/code&gt; the function will default to the native option, that is &lt;code&gt;'linux'&lt;/code&gt;, &lt;code&gt;'darwin'&lt;/code&gt; or &lt;code&gt;'windows'&lt;/code&gt;, as understood by &lt;code&gt;os:type/0&lt;/code&gt;. Anything not recognized as &lt;code&gt;'darwin'&lt;/code&gt; or &lt;code&gt;'windows'&lt;/code&gt; is interpreted as &lt;code&gt;'linux'&lt;/code&gt;.</source>
          <target state="translated">返回给定类型的一个或多个合适的路径。如果未在 &lt;code&gt;Opts&lt;/code&gt; 中设置 &lt;code&gt;os&lt;/code&gt; ,则该功能将默认为本机选项，即 &lt;code&gt;os:type/0&lt;/code&gt; 所理解的 &lt;code&gt;'linux'&lt;/code&gt; ， &lt;code&gt;'darwin'&lt;/code&gt; 或 &lt;code&gt;'windows'&lt;/code&gt; 。任何未被识别为 &lt;code&gt;'darwin'&lt;/code&gt; 或 &lt;code&gt;'windows'&lt;/code&gt; 的东西都被解释为 &lt;code&gt;'linux'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8c920b6b5298494c5a0714e6b648d21d79ec962c" translate="yes" xml:space="preserve">
          <source>Returns a summary of all carriers in the system, optionally filtered by allocator type and scheduler id.</source>
          <target state="translated">Returns a summary of all carriers in the system,optionally filtered by allocator type and scheduler ID.</target>
        </trans-unit>
        <trans-unit id="2d30f2d815938df0e275b67633bde3053cd366a0" translate="yes" xml:space="preserve">
          <source>Returns a summary of all tagged allocations in the system, optionally filtered by allocator type and scheduler id.</source>
          <target state="translated">Returns a summary of all tagged allocations in the system,optionally filtered by allocator type and scheduler ID.</target>
        </trans-unit>
        <trans-unit id="b52475f9bda569c98ba8b2a5e21ecfc538ad2b2c" translate="yes" xml:space="preserve">
          <source>Returns a term from the driver. The meaning of the returned data also depends on the port driver.</source>
          <target state="translated">从驱动程序中返回一个术语。返回数据的含义也取决于 port 驱动程序。</target>
        </trans-unit>
        <trans-unit id="b859ce68b1d8adca07b2965536d637ec8cadea58" translate="yes" xml:space="preserve">
          <source>Returns a term where each collection of annotations &lt;code&gt;Anno&lt;/code&gt; of the nodes of the &lt;code&gt;erl_parse&lt;/code&gt; tree &lt;code&gt;Abstr&lt;/code&gt; is replaced by the term returned by &lt;code&gt;&lt;a href=&quot;erl_anno#to_term-1&quot;&gt;erl_anno:to_term(Anno)&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;erl_parse&lt;/code&gt; tree is traversed in a depth-first, left-to-right fashion.</source>
          <target state="translated">返回其中注释每个集合术语 &lt;code&gt;Anno&lt;/code&gt; 的的节点 &lt;code&gt;erl_parse&lt;/code&gt; 树 &lt;code&gt;Abstr&lt;/code&gt; 是由返回术语代替 &lt;code&gt;&lt;a href=&quot;erl_anno#to_term-1&quot;&gt;erl_anno:to_term(Anno)&lt;/a&gt;&lt;/code&gt; 。该 &lt;code&gt;erl_parse&lt;/code&gt; 树的深度优先，左到右的方式运行。</target>
        </trans-unit>
        <trans-unit id="e42dc51bd19a435d1ed15dfb6ce6f69261d199cf" translate="yes" xml:space="preserve">
          <source>Returns a triple of sets:</source>
          <target state="translated">返回一个三倍的集合。</target>
        </trans-unit>
        <trans-unit id="735e0414a28d09eb877ff1287020a8fec4ca7190" translate="yes" xml:space="preserve">
          <source>Returns a tuple &lt;code&gt;{Continuation2, Terms, Badbytes}&lt;/code&gt; if the log is opened in read only mode and the read chunk is corrupt. &lt;code&gt;Badbytes&lt;/code&gt; indicates the number of non-Erlang terms found in the chunk. Notice that the log is not repaired.</source>
          <target state="translated">如果以只读模式打开日志并且读取的块已损坏 &lt;code&gt;{Continuation2, Terms, Badbytes}&lt;/code&gt; 返回元组{Continuation2，Terms，Badbytes}。 &lt;code&gt;Badbytes&lt;/code&gt; 指示在块中找到的非Erlang术语的数量。请注意，该日志未修复。</target>
        </trans-unit>
        <trans-unit id="705d98017c54a4145d8945773c510ff675589920" translate="yes" xml:space="preserve">
          <source>Returns a tuple &lt;code&gt;{Continuation2, Terms}&lt;/code&gt;, where &lt;code&gt;Terms&lt;/code&gt; is a list of terms found in the log. &lt;code&gt;Continuation2&lt;/code&gt; is yet another continuation that must be passed on to any subsequent calls to &lt;code&gt;chunk()&lt;/code&gt;. With a series of calls to &lt;code&gt;chunk()&lt;/code&gt;, it is then possible to extract all terms from a log.</source>
          <target state="translated">返回一个元组 &lt;code&gt;{Continuation2, Terms}&lt;/code&gt; ，其中&amp;ldquo; &lt;code&gt;Terms&lt;/code&gt; 是在日志中找到的条款的列表。 &lt;code&gt;Continuation2&lt;/code&gt; 是又一个延续，必须继续传递给 &lt;code&gt;chunk()&lt;/code&gt; 的任何后续调用。通过对 &lt;code&gt;chunk()&lt;/code&gt; 的一系列调用，可以从日志中提取所有项。</target>
        </trans-unit>
        <trans-unit id="3e6586d9f3ce82931b21b60b27dd393b23b35e61" translate="yes" xml:space="preserve">
          <source>Returns a tuple &lt;code&gt;{ok, Value}&lt;/code&gt;, where &lt;code&gt;Value&lt;/code&gt; is the value associated with &lt;code&gt;Key&lt;/code&gt;, or &lt;code&gt;error&lt;/code&gt; if no value is associated with &lt;code&gt;Key&lt;/code&gt; in &lt;code&gt;Map&lt;/code&gt;.</source>
          <target state="translated">返回一个元组 &lt;code&gt;{ok, Value}&lt;/code&gt; ，其中 &lt;code&gt;Value&lt;/code&gt; 指的是与价值 &lt;code&gt;Key&lt;/code&gt; ，或者 &lt;code&gt;error&lt;/code&gt; ，如果没有值与相关 &lt;code&gt;Key&lt;/code&gt; 在 &lt;code&gt;Map&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2607e69fa01e875df820f574c7f74fb2cd670568" translate="yes" xml:space="preserve">
          <source>Returns a tuple containing the binaries that are the result of splitting &lt;code&gt;Bin&lt;/code&gt; into two parts at position &lt;code&gt;Pos&lt;/code&gt;. This is not a destructive operation. After the operation, there are three binaries altogether. Example:</source>
          <target state="translated">返回一个包含二进制文件的元组，这些二进制文件是在位置 &lt;code&gt;Pos&lt;/code&gt; 处将 &lt;code&gt;Bin&lt;/code&gt; 分为两部分的结果。这不是破坏性操作。运算后，共有三个二进制文件。例：</target>
        </trans-unit>
        <trans-unit id="9a953fe642e9ea0605f4fff70a26b2507c1b3aa6" translate="yes" xml:space="preserve">
          <source>Returns a tuple containing the name of the global group that the local node belongs to, and the list of all other known group names. Returns &lt;code&gt;undefined&lt;/code&gt; if no global groups are defined.</source>
          <target state="translated">返回一个元组，其中包含本地节点所属的全局组的名称以及所有其他已知组名的列表。如果 &lt;code&gt;undefined&lt;/code&gt; 全局组，则返回未定义。</target>
        </trans-unit>
        <trans-unit id="8232215373c041489cdb2744c563121a995f6acf" translate="yes" xml:space="preserve">
          <source>Returns a tuple corresponding to &lt;code&gt;List&lt;/code&gt;, for example</source>
          <target state="translated">返回与 &lt;code&gt;List&lt;/code&gt; 对应的元组，例如</target>
        </trans-unit>
        <trans-unit id="8be6168849e8fc6888196588072087f0076f61c3" translate="yes" xml:space="preserve">
          <source>Returns a tuple that is a copy of argument &lt;code&gt;Tuple1&lt;/code&gt; with the element specified by integer argument &lt;code&gt;Index&lt;/code&gt; (the first element is the element with index 1) replaced by argument &lt;code&gt;Value&lt;/code&gt;, for example:</source>
          <target state="translated">返回一个元组，该元组是参数 &lt;code&gt;Tuple1&lt;/code&gt; 的副本，其中由整数参数 &lt;code&gt;Index&lt;/code&gt; 指定的元素（第一个元素是索引为1的元素）被参数 &lt;code&gt;Value&lt;/code&gt; 替换，例如：</target>
        </trans-unit>
        <trans-unit id="6a7c335b82027fd8c045fffe77c36ccbff0c13c7" translate="yes" xml:space="preserve">
          <source>Returns a two-tuple describing the C compiler used when compiling the runtime system. The first element is an atom describing the name of the compiler, or &lt;code&gt;undefined&lt;/code&gt; if unknown. The second element is a term describing the version of the compiler, or &lt;code&gt;undefined&lt;/code&gt; if unknown.</source>
          <target state="translated">返回一个二元组，描述在编译运行时系统时使用的C编译器。第一个元素是描述编译器名称的原子，如果未知，则为 &lt;code&gt;undefined&lt;/code&gt; 。第二个元素是描述编译器版本的术语，如果未知，则 &lt;code&gt;undefined&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5740db8c28697d1afcbc4e308050a43c877c7fde" translate="yes" xml:space="preserve">
          <source>Returns a unique integer with the same properties as specified by &lt;code&gt;&lt;a href=&quot;erlang#unique_integer-1&quot;&gt;erlang:unique_integer/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回具有与 &lt;code&gt;&lt;a href=&quot;erlang#unique_integer-1&quot;&gt;erlang:unique_integer/1&lt;/a&gt;&lt;/code&gt; 指定的属性相同的唯一整数。</target>
        </trans-unit>
        <trans-unit id="92166f03715e25e6472246acbbedab43f98787f8" translate="yes" xml:space="preserve">
          <source>Returns a user-named atom which is not already in the set &lt;code&gt;Used&lt;/code&gt;. The atom is generated by applying the given &lt;code&gt;Function&lt;/code&gt; to a generated integer. Integers are generated using an algorithm which tries to keep the names randomly distributed within a reasonably small range relative to the number of elements in the set.</source>
          <target state="translated">返回一个用户名的原子，该原子不在集合 &lt;code&gt;Used&lt;/code&gt; 中。通过将给定的 &lt;code&gt;Function&lt;/code&gt; 应用于生成的整数来生成原子。整数是使用一种算法生成的，该算法试图将名称随机分配在相对于集合中元素数量相对较小的范围内。</target>
        </trans-unit>
        <trans-unit id="4327f3d264bcd8b0ae95ab1f5ed7bdf5e84393b8" translate="yes" xml:space="preserve">
          <source>Returns a value &lt;code&gt;Value&lt;/code&gt; from node with key &lt;code&gt;Key&lt;/code&gt; and new &lt;code&gt;Tree2&lt;/code&gt; without the node with this value. Assumes that the node with key is present in the tree, crashes otherwise.</source>
          <target state="translated">从具有键 &lt;code&gt;Key&lt;/code&gt; 和新 &lt;code&gt;Tree2&lt;/code&gt; 的节点返回一个值 &lt;code&gt;Value&lt;/code&gt; ，而没有具有该值的节点。假定树中存在带有键的节点，否则崩溃。</target>
        </trans-unit>
        <trans-unit id="4168e52d6544b4b42840b6372f8f622c6f448253" translate="yes" xml:space="preserve">
          <source>Returns a value &lt;code&gt;Value&lt;/code&gt; from node with key &lt;code&gt;Key&lt;/code&gt; and new &lt;code&gt;Tree2&lt;/code&gt; without the node with this value. Returns &lt;code&gt;error&lt;/code&gt; if the node with the key is not present in the tree.</source>
          <target state="translated">从具有键 &lt;code&gt;Key&lt;/code&gt; 和新 &lt;code&gt;Tree2&lt;/code&gt; 的节点返回一个值 &lt;code&gt;Value&lt;/code&gt; ，而没有具有该值的节点。如果树中不存在带有密钥的节点，则返回 &lt;code&gt;error&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e826161e82e3562160201bc702c5e477b3e85c5f" translate="yes" xml:space="preserve">
          <source>Returns a value identifying the &lt;code&gt;&lt;a href=&quot;time_correction#Time_Warp_Modes&quot;&gt;time warp mode&lt;/a&gt;&lt;/code&gt; that is used:</source>
          <target state="translated">返回一个标识所使用的 &lt;code&gt;&lt;a href=&quot;time_correction#Time_Warp_Modes&quot;&gt;time warp mode&lt;/a&gt;&lt;/code&gt; 的值：</target>
        </trans-unit>
        <trans-unit id="aa4ef8038e74b148a39815f7b1d4b8bc6534e619" translate="yes" xml:space="preserve">
          <source>Returns all AGENT-CAPABILITY statements in the sysORTable in the agent. This table is defined in the SNMPv2-MIB.</source>
          <target state="translated">Returns all AGENT-CAPABILITY statements in the sysORTable in the agent.该表在SNMPv2-MIB中定义。</target>
        </trans-unit>
        <trans-unit id="6b71fa8a588a560f59b9200a22d57a388590704f" translate="yes" xml:space="preserve">
          <source>Returns all command-line flags and the system-defined flags, see &lt;code&gt;&lt;a href=&quot;#get_argument-1&quot;&gt;get_argument/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回所有命令行标志和系统定义的标志，请参见 &lt;code&gt;&lt;a href=&quot;#get_argument-1&quot;&gt;get_argument/1&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b737e570aa8cd4407289cf34f69037c654103e1c" translate="yes" xml:space="preserve">
          <source>Returns all default or all supported (except anonymous), or all anonymous cipher suites for a TLS version</source>
          <target state="translated">Returns all default or all supported (except anonymous),or all anonymous cipher suites for a TLS version.</target>
        </trans-unit>
        <trans-unit id="f326622232be4bf94f1c1540859768938351646c" translate="yes" xml:space="preserve">
          <source>Returns all objects in slot &lt;code&gt;I&lt;/code&gt; of table &lt;code&gt;Tab&lt;/code&gt;. A table can be traversed by repeatedly calling the function, starting with the first slot &lt;code&gt;I=0&lt;/code&gt; and ending when &lt;code&gt;'$end_of_table'&lt;/code&gt; is returned. If argument &lt;code&gt;I&lt;/code&gt; is out of range, the function fails with reason &lt;code&gt;badarg&lt;/code&gt;.</source>
          <target state="translated">返回表 &lt;code&gt;Tab&lt;/code&gt; 的插槽 &lt;code&gt;I&lt;/code&gt; 中的所有对象。可以通过重复调用该函数来遍历表，该函数从第一个插槽 &lt;code&gt;I=0&lt;/code&gt; 开始，直到返回 &lt;code&gt;'$end_of_table'&lt;/code&gt; 为止。如果参数 &lt;code&gt;I&lt;/code&gt; 超出范围，则函数失败，原因为 &lt;code&gt;badarg&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="40fdfa6f155034c29e901dff0a2e3f5fcaebb299" translate="yes" xml:space="preserve">
          <source>Returns all processes containing &lt;code&gt;&lt;a href=&quot;#users&quot;&gt;users&lt;/a&gt;&lt;/code&gt; of the specific drivers as a list of tuples &lt;code&gt;{pid(),integer() &amp;gt;= 0}&lt;/code&gt;, where &lt;code&gt;integer()&lt;/code&gt; denotes the number of users in process &lt;code&gt;pid()&lt;/code&gt;.</source>
          <target state="translated">返回所有包含特定驱动程序 &lt;code&gt;&lt;a href=&quot;#users&quot;&gt;users&lt;/a&gt;&lt;/code&gt; 的进程，作为元组列表 &lt;code&gt;{pid(),integer() &amp;gt;= 0}&lt;/code&gt; ，其中 &lt;code&gt;integer()&lt;/code&gt; 表示进程 &lt;code&gt;pid()&lt;/code&gt; 中的用户数。</target>
        </trans-unit>
        <trans-unit id="bc3987f827fa9d8780caf6488acf737e109e3252" translate="yes" xml:space="preserve">
          <source>Returns all processes in the group &lt;code&gt;Name&lt;/code&gt;. This function is to be used from within a client function that accesses the group. It is therefore optimized for speed.</source>
          <target state="translated">返回组 &lt;code&gt;Name&lt;/code&gt; 中的所有进程。此功能将从访问该组的客户端功能中使用。因此，它针对速度进行了优化。</target>
        </trans-unit>
        <trans-unit id="6c6d0be05d0408e52a3786054fb8ceaae26e7c51" translate="yes" xml:space="preserve">
          <source>Returns all processes running on the local node in the group &lt;code&gt;Name&lt;/code&gt;. This function is to be used from within a client function that accesses the group. It is therefore optimized for speed.</source>
          <target state="translated">返回在组 &lt;code&gt;Name&lt;/code&gt; 的本地节点上运行的所有进程。此功能将从访问该组的客户端功能中使用。因此，它针对速度进行了优化。</target>
        </trans-unit>
        <trans-unit id="423be9deda973d3e785dc9a3df60a71f657ed121" translate="yes" xml:space="preserve">
          <source>Returns all releases known to the release handler.</source>
          <target state="translated">返回释放处理程序已知的所有释放。</target>
        </trans-unit>
        <trans-unit id="5d902f70d2cba8313a80ff7bb8dec6b22e7149e8" translate="yes" xml:space="preserve">
          <source>Returns all releases, known to the release handler, of a specific status.</source>
          <target state="translated">返回释放处理程序已知的、具有特定状态的所有释放。</target>
        </trans-unit>
        <trans-unit id="9eceb21130e5a4945ba8d3212b8d59565f94dea9" translate="yes" xml:space="preserve">
          <source>Returns all test cases in the specified suite.</source>
          <target state="translated">返回指定套件中的所有测试用例。</target>
        </trans-unit>
        <trans-unit id="b137f4cee723eb59e69759cc5efdca3baddad0b5" translate="yes" xml:space="preserve">
          <source>Returns all time recorded for all threads.</source>
          <target state="translated">返回所有线程的所有时间记录。</target>
        </trans-unit>
        <trans-unit id="2aab69100467c522a9b501f13e8c52ffccfc60c0" translate="yes" xml:space="preserve">
          <source>Returns all time spent doing work for all threads, i.e. all time not spent in the &lt;code&gt;sleep&lt;/code&gt; state.</source>
          <target state="translated">返回所有线程在工作上花费的所有时间，即所有未花费在 &lt;code&gt;sleep&lt;/code&gt; 状态上的时间。</target>
        </trans-unit>
        <trans-unit id="76e788e3283c77df8c4519c8e3d9bb04ca1d332a" translate="yes" xml:space="preserve">
          <source>Returns all values associated with the command-line user flag &lt;code&gt;Flag&lt;/code&gt;. If &lt;code&gt;Flag&lt;/code&gt; is provided several times, each &lt;code&gt;Values&lt;/code&gt; is returned in preserved order. Example:</source>
          <target state="translated">返回与命令行用户标志 &lt;code&gt;Flag&lt;/code&gt; 关联的所有值。如果多次提供 &lt;code&gt;Flag&lt;/code&gt; ，则将按保留顺序返回每个 &lt;code&gt;Values&lt;/code&gt; 。例：</target>
        </trans-unit>
        <trans-unit id="7d9c23aad375e2d0498bad2128a29c00b63d04ec" translate="yes" xml:space="preserve">
          <source>Returns all vertices of digraph &lt;code&gt;Digraph&lt;/code&gt;. The order is given by a &lt;code&gt;&lt;a href=&quot;#depth_first_traversal&quot;&gt;depth-first traversal&lt;/a&gt;&lt;/code&gt; of the digraph, collecting visited vertices in postorder. More precisely, the vertices visited while searching from an arbitrarily chosen vertex are collected in postorder, and all those collected vertices are placed before the subsequently visited vertices.</source>
          <target state="translated">返回有向 &lt;code&gt;Digraph&lt;/code&gt; 所有顶点。通过有向图的 &lt;code&gt;&lt;a href=&quot;#depth_first_traversal&quot;&gt;depth-first traversal&lt;/a&gt;&lt;/code&gt; 来给出顺序，以后顺序收集访问的顶点。更准确地说，在从任意选择的顶点进行搜索时访问的顶点将以后置顺序收集，并且所有这些收集的顶点都将放置在随后访问的顶点之前。</target>
        </trans-unit>
        <trans-unit id="d29763c44b5655dd5108bfb772f8ccbf16f29fb4" translate="yes" xml:space="preserve">
          <source>Returns all vertices of digraph &lt;code&gt;Digraph&lt;/code&gt;. The order is given by a &lt;code&gt;&lt;a href=&quot;#depth_first_traversal&quot;&gt;depth-first traversal&lt;/a&gt;&lt;/code&gt; of the digraph, collecting visited vertices in preorder.</source>
          <target state="translated">返回有向 &lt;code&gt;Digraph&lt;/code&gt; 所有顶点。通过有向图的 &lt;code&gt;&lt;a href=&quot;#depth_first_traversal&quot;&gt;depth-first traversal&lt;/a&gt;&lt;/code&gt; 来给出顺序，并按顺序收集访问的顶点。</target>
        </trans-unit>
        <trans-unit id="deeeefa9f1f56581cddb1a5fc8454aa4c6ab5512" translate="yes" xml:space="preserve">
          <source>Returns an &lt;code&gt;&lt;a href=&quot;#empty_digraph&quot;&gt;empty digraph&lt;/a&gt;&lt;/code&gt; with properties according to the options in &lt;code&gt;Type&lt;/code&gt;:</source>
          <target state="translated">根据 &lt;code&gt;Type&lt;/code&gt; 中的选项，返回具有属性的 &lt;code&gt;&lt;a href=&quot;#empty_digraph&quot;&gt;empty digraph&lt;/a&gt;&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="42e337d2e9aa3d0219a49a57a1c45b799cdf19d1" translate="yes" xml:space="preserve">
          <source>Returns an &lt;code&gt;&lt;a href=&quot;erlang#now-0&quot;&gt;erlang:now()&lt;/a&gt;&lt;/code&gt; time stamp.</source>
          <target state="translated">返回一个 &lt;code&gt;&lt;a href=&quot;erlang#now-0&quot;&gt;erlang:now()&lt;/a&gt;&lt;/code&gt; 时间戳。</target>
        </trans-unit>
        <trans-unit id="f34e75efc590885c0884151454122b4827e6f119" translate="yes" xml:space="preserve">
          <source>Returns an &lt;code&gt;erl_parse&lt;/code&gt;-compatible representation of a syntax tree, if possible. If &lt;code&gt;Tree&lt;/code&gt; represents a well-formed Erlang program or expression, the conversion should work without problems. Typically, &lt;code&gt;&lt;a href=&quot;#is_tree-1&quot;&gt;is_tree/1&lt;/a&gt;&lt;/code&gt; yields &lt;code&gt;true&lt;/code&gt; if conversion failed (i.e., the result is still an abstract syntax tree), and &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">如果可能，返回语法树的 &lt;code&gt;erl_parse&lt;/code&gt; 兼容表示。如果 &lt;code&gt;Tree&lt;/code&gt; 表示格式正确的Erlang程序或表达式，则转换应该可以顺利进行。典型地， &lt;code&gt;&lt;a href=&quot;#is_tree-1&quot;&gt;is_tree/1&lt;/a&gt;&lt;/code&gt; 产量 &lt;code&gt;true&lt;/code&gt; 如果转换失败（即，结果仍然是一个抽象语法树），并 &lt;code&gt;false&lt;/code&gt; 否则。</target>
        </trans-unit>
        <trans-unit id="8bef83f584affe71decd895a1c3671b84dfef6ee" translate="yes" xml:space="preserve">
          <source>Returns an Erlang binary object.</source>
          <target state="translated">返回一个Erlang二进制对象。</target>
        </trans-unit>
        <trans-unit id="ffa27dc7183e3e80aadb934affbacb1778496241" translate="yes" xml:space="preserve">
          <source>Returns an Erlang binary term, or &lt;code&gt;NULL&lt;/code&gt; if &lt;code&gt;list&lt;/code&gt; was not an I/O list.</source>
          <target state="translated">返回一个Erlang二进制项，如果 &lt;code&gt;list&lt;/code&gt; 不是I / O列表，则返回 &lt;code&gt;NULL&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b646df828c5e4677e887302ec677c85ad056f8d9" translate="yes" xml:space="preserve">
          <source>Returns an Erlang float object with the value specified in &lt;code&gt;f&lt;/code&gt; or &lt;code&gt;NULL&lt;/code&gt; if &lt;code&gt;f&lt;/code&gt; is not finite.</source>
          <target state="translated">返回具有值一个Erlang浮点对象中指定 &lt;code&gt;f&lt;/code&gt; 或 &lt;code&gt;NULL&lt;/code&gt; 如果 &lt;code&gt;f&lt;/code&gt; 不是有限。</target>
        </trans-unit>
        <trans-unit id="b7381bdbb30a79dae14026685292b788098b56fd" translate="yes" xml:space="preserve">
          <source>Returns an Erlang integer object with the value specified in &lt;code&gt;n&lt;/code&gt;.</source>
          <target state="translated">返回具有 &lt;code&gt;n&lt;/code&gt; 中指定值的Erlang整数对象。</target>
        </trans-unit>
        <trans-unit id="b3193ba7e758d6b8057578ba99e0142b88f45810" translate="yes" xml:space="preserve">
          <source>Returns an Erlang list corresponding to the original list minus the first element, or &lt;code&gt;NULL&lt;/code&gt; pointer if &lt;code&gt;list&lt;/code&gt; was not a list.</source>
          <target state="translated">返回对应于原始列表减去第一个元素的Erlang列表，如果 &lt;code&gt;list&lt;/code&gt; 不是列表，则返回 &lt;code&gt;NULL&lt;/code&gt; 指针。</target>
        </trans-unit>
        <trans-unit id="51e2d39adb2a9582d19f8d4bb2040aea7b343702" translate="yes" xml:space="preserve">
          <source>Returns an Erlang list object corresponding to the character sequence in &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">返回与 &lt;code&gt;string&lt;/code&gt; 中的字符序列相对应的Erlang列表对象。</target>
        </trans-unit>
        <trans-unit id="b7ea18929e00b770980d3d6f6932dda99f8f2612" translate="yes" xml:space="preserve">
          <source>Returns an Erlang list.</source>
          <target state="translated">返回一个Erlang列表。</target>
        </trans-unit>
        <trans-unit id="57d486ab439fc0e78b3a2e39a55e17536e503e9d" translate="yes" xml:space="preserve">
          <source>Returns an Erlang pid object.</source>
          <target state="translated">返回一个Erlang pid对象。</target>
        </trans-unit>
        <trans-unit id="f94eb09a637da7cca6f9c95508104baaacab25f6" translate="yes" xml:space="preserve">
          <source>Returns an Erlang port object.</source>
          <target state="translated">返回一个 Erlang port 对象。</target>
        </trans-unit>
        <trans-unit id="69b6822eed0645367b44f76b526363c80e9d9346" translate="yes" xml:space="preserve">
          <source>Returns an Erlang reference object.</source>
          <target state="translated">返回一个Erlang引用对象。</target>
        </trans-unit>
        <trans-unit id="a590f7f64d0c6dc423d6529eacf20f62f1f3ca21" translate="yes" xml:space="preserve">
          <source>Returns an Erlang term containing an atom. Notice that it is the caller's responsibility to ensure that &lt;code&gt;string&lt;/code&gt; contains a valid name for an atom.</source>
          <target state="translated">返回包含原子的Erlang术语。请注意，确保 &lt;code&gt;string&lt;/code&gt; 包含原子的有效名称是调用者的责任。</target>
        </trans-unit>
        <trans-unit id="b10d603538bb7e8eb3305090172876b919d95fd9" translate="yes" xml:space="preserve">
          <source>Returns an Erlang term corresponding to the head head element in the list, or a &lt;code&gt;NULL&lt;/code&gt; pointer if &lt;code&gt;list&lt;/code&gt; was not a list.</source>
          <target state="translated">返回与列表中的head head元素相对应的Erlang术语；如果 &lt;code&gt;list&lt;/code&gt; 不是列表，则返回 &lt;code&gt;NULL&lt;/code&gt; 指针。</target>
        </trans-unit>
        <trans-unit id="095f11364bb01e494b56620a202b5541d815ff60" translate="yes" xml:space="preserve">
          <source>Returns an Erlang term that is an example of a valid Erlang representation of a value of the &lt;code&gt;ASN.1&lt;/code&gt; type &lt;code&gt;Type&lt;/code&gt;. The value is a random value and subsequent calls to this function will for most types return different values.</source>
          <target state="translated">返回一个Erlang术语，它是 &lt;code&gt;ASN.1&lt;/code&gt; 类型 &lt;code&gt;Type&lt;/code&gt; 值的有效Erlang表示形式的示例。该值是一个随机值，对于大多数类型，此函数的后续调用将返回不同的值。</target>
        </trans-unit>
        <trans-unit id="c806840578ee1deb2041df9cee1666f482911593" translate="yes" xml:space="preserve">
          <source>Returns an Erlang term that is the result of decoding binary object &lt;code&gt;Binary&lt;/code&gt;, which must be encoded according to the &lt;code&gt;Erlang external term format&lt;/code&gt;.</source>
          <target state="translated">返回一个Erlang术语，它是对二进制对象 &lt;code&gt;Binary&lt;/code&gt; 进行解码的结果，必须根据 &lt;code&gt;Erlang external term format&lt;/code&gt; 对其进行编码。</target>
        </trans-unit>
        <trans-unit id="4161f95ef9693af88f0334a08b7de8fe83886a31" translate="yes" xml:space="preserve">
          <source>Returns an Erlang unsigned integer object with the value specified in &lt;code&gt;n&lt;/code&gt;.</source>
          <target state="translated">返回带有 &lt;code&gt;n&lt;/code&gt; 中指定值的Erlang无符号整数对象。</target>
        </trans-unit>
        <trans-unit id="b163f688f77c348943e0af13fe017fd1f9afb89a" translate="yes" xml:space="preserve">
          <source>Returns an Erlang variable object with the name &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">返回名称为 &lt;code&gt;name&lt;/code&gt; 的Erlang变量对象。</target>
        </trans-unit>
        <trans-unit id="72560455363d77db550fcad32e03d01e8e464568" translate="yes" xml:space="preserve">
          <source>Returns an atom describing the build type of the runtime system. This is normally the atom &lt;code&gt;opt&lt;/code&gt; for optimized. Other possible return values are &lt;code&gt;debug&lt;/code&gt;, &lt;code&gt;purify&lt;/code&gt;, &lt;code&gt;quantify&lt;/code&gt;, &lt;code&gt;purecov&lt;/code&gt;, &lt;code&gt;gcov&lt;/code&gt;, &lt;code&gt;valgrind&lt;/code&gt;, &lt;code&gt;gprof&lt;/code&gt;, and &lt;code&gt;lcnt&lt;/code&gt;. Possible return values can be added or removed at any time without prior notice.</source>
          <target state="translated">返回描述运行时系统的构建类型的原子。通常，这是优化的原子 &lt;code&gt;opt&lt;/code&gt; 。其他可能的返回值是 &lt;code&gt;debug&lt;/code&gt; ， &lt;code&gt;purify&lt;/code&gt; ， &lt;code&gt;quantify&lt;/code&gt; ， &lt;code&gt;purecov&lt;/code&gt; ， &lt;code&gt;gcov&lt;/code&gt; 的， &lt;code&gt;valgrind&lt;/code&gt; ， &lt;code&gt;gprof&lt;/code&gt; 的，和 &lt;code&gt;lcnt&lt;/code&gt; 。可以随时添加或删除可能的返回值，而无需事先通知。</target>
        </trans-unit>
        <trans-unit id="003054975617245e964de16aa3f1604dc487dd8a" translate="yes" xml:space="preserve">
          <source>Returns an atom describing the dynamic trace framework compiled into the virtual machine. It can be &lt;code&gt;dtrace&lt;/code&gt;, &lt;code&gt;systemtap&lt;/code&gt;, or &lt;code&gt;none&lt;/code&gt;. For a commercial or standard build, it is always &lt;code&gt;none&lt;/code&gt;. The other return values indicate a custom configuration (for example, &lt;code&gt;./configure --with-dynamic-trace=dtrace&lt;/code&gt;). For more information about dynamic tracing, see &lt;code&gt;dyntrace(3)&lt;/code&gt; manual page and the &lt;code&gt;README.dtrace&lt;/code&gt;/&lt;code&gt;README.systemtap&lt;/code&gt; files in the Erlang source code top directory.</source>
          <target state="translated">返回一个原子，该原子描述了编译到虚拟机中的动态跟踪框架。可以是 &lt;code&gt;dtrace&lt;/code&gt; ， &lt;code&gt;systemtap&lt;/code&gt; 或 &lt;code&gt;none&lt;/code&gt; 。对于商业版本或标准版本，始终为 &lt;code&gt;none&lt;/code&gt; 。其他返回值指示自定义配置（例如， &lt;code&gt;./configure --with-dynamic-trace=dtrace&lt;/code&gt; ）。有关动态跟踪的更多信息，请参见 &lt;code&gt;dyntrace(3)&lt;/code&gt; 手册页以及Erlang源代码顶层目录中的 &lt;code&gt;README.dtrace&lt;/code&gt; / &lt;code&gt;README.systemtap&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="d9bb4cea76db43aeac51826cd029247df700ada1" translate="yes" xml:space="preserve">
          <source>Returns an atom describing the mode of the code server: &lt;code&gt;interactive&lt;/code&gt; or &lt;code&gt;embedded&lt;/code&gt;.</source>
          <target state="translated">返回一个描述代码服务器模式的原子： &lt;code&gt;interactive&lt;/code&gt; 或 &lt;code&gt;embedded&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4b51973d541e4b5b197b534360e4f378cd9f64dd" translate="yes" xml:space="preserve">
          <source>Returns an atom given a name &lt;code&gt;string&lt;/code&gt;. The atom is created and does not change, so the return value can be saved and reused, which is faster than looking up the atom several times.</source>
          <target state="translated">返回给定名称的原子 &lt;code&gt;string&lt;/code&gt; 。原子已创建且不会更改，因此返回值可以保存和重用，这比查找原子几次要快。</target>
        </trans-unit>
        <trans-unit id="7a85323f1923a2f1729a520bc4b67feb73350624" translate="yes" xml:space="preserve">
          <source>Returns an atom representing the module name.</source>
          <target state="translated">返回一个代表模块名称的原子。</target>
        </trans-unit>
        <trans-unit id="d67202c4124aa04da3d82fb6d5a23abce5ac778e" translate="yes" xml:space="preserve">
          <source>Returns an atom which is not already in the set &lt;code&gt;Used&lt;/code&gt;. This is equivalent to &lt;code&gt;new_variable_name(Function, Used)&lt;/code&gt;, where &lt;code&gt;Function&lt;/code&gt; maps a given integer &lt;code&gt;N&lt;/code&gt; to the atom whose name consists of &quot;&lt;code&gt;V&lt;/code&gt;&quot; followed by the numeral for &lt;code&gt;N&lt;/code&gt;.</source>
          <target state="translated">返回一个原子，它不在集合 &lt;code&gt;Used&lt;/code&gt; 中。这等效于 &lt;code&gt;new_variable_name(Function, Used)&lt;/code&gt; ，其中 &lt;code&gt;Function&lt;/code&gt; 将给定的整数 &lt;code&gt;N&lt;/code&gt; 映射到名称由&amp;ldquo; &lt;code&gt;V&lt;/code&gt; &amp;rdquo; 组成的原子，后跟 &lt;code&gt;N&lt;/code&gt; 的数字。</target>
        </trans-unit>
        <trans-unit id="988e838fe7d5aef0f6c0550a01971cd083666dd3" translate="yes" xml:space="preserve">
          <source>Returns an empty binding structure.</source>
          <target state="translated">返回一个空的绑定结构。</target>
        </trans-unit>
        <trans-unit id="9d49703761470f70420cbdc828629bf9e5b1cb70" translate="yes" xml:space="preserve">
          <source>Returns an empty list if &lt;code&gt;cnt&lt;/code&gt; is 0.</source>
          <target state="translated">如果 &lt;code&gt;cnt&lt;/code&gt; 为0，则返回一个空列表。</target>
        </trans-unit>
        <trans-unit id="a708e1d41ae8898a5d41e3dd0d64120fa89116b1" translate="yes" xml:space="preserve">
          <source>Returns an empty queue.</source>
          <target state="translated">返回一个空队列。</target>
        </trans-unit>
        <trans-unit id="df37e4cd60f068eeb3d3ca2acc09e9fd502783b9" translate="yes" xml:space="preserve">
          <source>Returns an empty registry on success, otherwise &lt;code&gt;NULL&lt;/code&gt;.</source>
          <target state="translated">成功返回一个空注册表，否则返回 &lt;code&gt;NULL&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="23161e8696beb077ca5ff7f8ffdb2f4971911821" translate="yes" xml:space="preserve">
          <source>Returns an integer &amp;lt; &lt;code&gt;0&lt;/code&gt; if &lt;code&gt;lhs&lt;/code&gt; &amp;lt; &lt;code&gt;rhs&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt; if &lt;code&gt;lhs&lt;/code&gt; = &lt;code&gt;rhs&lt;/code&gt;, and &amp;gt; &lt;code&gt;0&lt;/code&gt; if &lt;code&gt;lhs&lt;/code&gt; &amp;gt; &lt;code&gt;rhs&lt;/code&gt;. Corresponds to the Erlang operators &lt;code&gt;==&lt;/code&gt;, &lt;code&gt;/=&lt;/code&gt;, &lt;code&gt;=&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;, and &lt;code&gt;&amp;gt;&lt;/code&gt; (but &lt;strong&gt;not&lt;/strong&gt;&lt;code&gt;=:=&lt;/code&gt; or &lt;code&gt;=/=&lt;/code&gt;).</source>
          <target state="translated">返回一个整数&amp;lt; &lt;code&gt;0&lt;/code&gt; 如果 &lt;code&gt;lhs&lt;/code&gt; &amp;lt; &lt;code&gt;rhs&lt;/code&gt; ， &lt;code&gt;0&lt;/code&gt; 如果 &lt;code&gt;lhs&lt;/code&gt; = &lt;code&gt;rhs&lt;/code&gt; ，和&amp;gt; &lt;code&gt;0&lt;/code&gt; 如果 &lt;code&gt;lhs&lt;/code&gt; &amp;gt; &lt;code&gt;rhs&lt;/code&gt; 。对应于Erlang运算符 &lt;code&gt;==&lt;/code&gt; ， &lt;code&gt;/=&lt;/code&gt; ， &lt;code&gt;=&amp;lt;&lt;/code&gt; ， &lt;code&gt;&amp;lt;&lt;/code&gt; ， &lt;code&gt;&amp;gt;=&lt;/code&gt; 和 &lt;code&gt;&amp;gt;&lt;/code&gt; （但&lt;strong&gt;不是&lt;/strong&gt; &lt;code&gt;=:=&lt;/code&gt; 或 &lt;code&gt;=/=&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="f1d9a5358491fa89656a3ef75ea3e77112b76c2c" translate="yes" xml:space="preserve">
          <source>Returns an integer by rounding &lt;code&gt;Number&lt;/code&gt;, for example:</source>
          <target state="translated">通过四舍五入 &lt;code&gt;Number&lt;/code&gt; 返回一个整数，例如：</target>
        </trans-unit>
        <trans-unit id="42e7c4b497727c29e3a60dab6ddb84c79055cbef" translate="yes" xml:space="preserve">
          <source>Returns an integer by truncating &lt;code&gt;Number&lt;/code&gt;, for example:</source>
          <target state="translated">通过截断 &lt;code&gt;Number&lt;/code&gt; 返回一个整数，例如：</target>
        </trans-unit>
        <trans-unit id="fa6cd31e25fbf671dcdc524f0f8fdc2ab6e357b4" translate="yes" xml:space="preserve">
          <source>Returns an integer or float that is the arithmetical absolute value of &lt;code&gt;Float&lt;/code&gt; or &lt;code&gt;Int&lt;/code&gt;, for example:</source>
          <target state="translated">返回一个整数或浮点数，它是 &lt;code&gt;Float&lt;/code&gt; 或 &lt;code&gt;Int&lt;/code&gt; 的算术绝对值，例如：</target>
        </trans-unit>
        <trans-unit id="34b43dc6d74cce530672601405bf2dc2dea6ebd0" translate="yes" xml:space="preserve">
          <source>Returns an integer representing the number of active connections.</source>
          <target state="translated">返回代表活动连接数的整数。</target>
        </trans-unit>
        <trans-unit id="3b95eb5322f95f7378ff3b2b852274a22ae1b2e3" translate="yes" xml:space="preserve">
          <source>Returns an integer representing the number of replies that has originated from this Erlang node and still are active (and therefore consumes system resources).</source>
          <target state="translated">返回一个整数,表示源自这个Erlang节点并且仍然处于活动状态的回复数量(因此会消耗系统资源)。</target>
        </trans-unit>
        <trans-unit id="b98345e2c7b425ca817567c3203a95df510202a5" translate="yes" xml:space="preserve">
          <source>Returns an integer representing the number of requests that has originated from this Erlang node and still are active (and therefore consumes system resources).</source>
          <target state="translated">返回一个整数,表示源自这个Erlang节点并且仍然处于活动状态的请求数量(因此会消耗系统资源)。</target>
        </trans-unit>
        <trans-unit id="fa3be6822bf2f17b33b0118cdae4604c26865fd5" translate="yes" xml:space="preserve">
          <source>Returns an integer that is the number of bytes needed to contain &lt;code&gt;Bitstring&lt;/code&gt;. That is, if the number of bits in &lt;code&gt;Bitstring&lt;/code&gt; is not divisible by 8, the resulting number of bytes is rounded &lt;strong&gt;up&lt;/strong&gt;. Examples:</source>
          <target state="translated">返回一个整数，该整数是包含 &lt;code&gt;Bitstring&lt;/code&gt; 所需的字节数。也就是说，如果在比特数 &lt;code&gt;Bitstring&lt;/code&gt; 是不是由8整除，所得到的字节数被舍入&lt;strong&gt;最多&lt;/strong&gt;。例子：</target>
        </trans-unit>
        <trans-unit id="a0ccc3445984cd8ca41ce2c94d384ac9dd3f4eb9" translate="yes" xml:space="preserve">
          <source>Returns an integer that is the number of elements in &lt;code&gt;Tuple&lt;/code&gt;, for example:</source>
          <target state="translated">返回一个整数，该整数是 &lt;code&gt;Tuple&lt;/code&gt; 中的元素数，例如：</target>
        </trans-unit>
        <trans-unit id="ad0adf24553b9086dfd682de31eca972d4b7c381" translate="yes" xml:space="preserve">
          <source>Returns an integer that is the size in bits of &lt;code&gt;Bitstring&lt;/code&gt;, for example:</source>
          <target state="translated">返回一个整数，该整数是 &lt;code&gt;Bitstring&lt;/code&gt; 的大小，例如：</target>
        </trans-unit>
        <trans-unit id="762aa9ecbb62d3c742e303f6ee84a4d568033d71" translate="yes" xml:space="preserve">
          <source>Returns an integer whose text representation in base &lt;code&gt;Base&lt;/code&gt; is &lt;code&gt;Binary&lt;/code&gt;, for example:</source>
          <target state="translated">返回一个整数，其在 &lt;code&gt;Base&lt;/code&gt; 中的文本表示形式为 &lt;code&gt;Binary&lt;/code&gt; ，例如：</target>
        </trans-unit>
        <trans-unit id="e5a0a03b4d74a10e949a947ee296fd9d8ea4f617" translate="yes" xml:space="preserve">
          <source>Returns an integer whose text representation in base &lt;code&gt;Base&lt;/code&gt; is &lt;code&gt;String&lt;/code&gt;, for example:</source>
          <target state="translated">返回一个整数，其在 &lt;code&gt;Base&lt;/code&gt; 中的文本表示形式为 &lt;code&gt;String&lt;/code&gt; ，例如：</target>
        </trans-unit>
        <trans-unit id="e3560c665353cecfc79e5afa38a4b5bae858a32e" translate="yes" xml:space="preserve">
          <source>Returns an integer whose text representation is &lt;code&gt;Binary&lt;/code&gt;, for example:</source>
          <target state="translated">返回一个整数，其文本表示形式为 &lt;code&gt;Binary&lt;/code&gt; ，例如：</target>
        </trans-unit>
        <trans-unit id="8eacb8a6026b61056725ece1110b069482677e14" translate="yes" xml:space="preserve">
          <source>Returns an integer whose text representation is &lt;code&gt;String&lt;/code&gt;, for example:</source>
          <target state="translated">返回一个整数，其文本表示形式为 &lt;code&gt;String&lt;/code&gt; ，例如：</target>
        </trans-unit>
        <trans-unit id="f94153a9b60ae8655262dd32603d003b4560fdb5" translate="yes" xml:space="preserve">
          <source>Returns an integer, that is the size in bytes, of the binary that would be the result of &lt;code&gt;iolist_to_binary(Item)&lt;/code&gt;, for example:</source>
          <target state="translated">返回整数，该整数将是 &lt;code&gt;iolist_to_binary(Item)&lt;/code&gt; 的结果的二进制值，以字节为单位，例如：</target>
        </trans-unit>
        <trans-unit id="0c93d5fc3d93036110d84e23d9645cf1ef2f6b11" translate="yes" xml:space="preserve">
          <source>Returns an integer, which is the number of key-value pairs in &lt;code&gt;Map&lt;/code&gt;, for example:</source>
          <target state="translated">返回一个整数，它是 &lt;code&gt;Map&lt;/code&gt; 中的键-值对的数量，例如：</target>
        </trans-unit>
        <trans-unit id="09a372e2de3544caaeeb7f5db805f15bde609b8a" translate="yes" xml:space="preserve">
          <source>Returns an iovec that is made from the integers and binaries in &lt;code&gt;IoListOrBinary&lt;/code&gt;.</source>
          <target state="translated">返回由 &lt;code&gt;IoListOrBinary&lt;/code&gt; 的整数和二进制数组成的iovec。</target>
        </trans-unit>
        <trans-unit id="e1d2203f2c4260e64bd616e0af5c56feb4679bb0" translate="yes" xml:space="preserve">
          <source>Returns an iterator that can be used for traversing the entries of &lt;code&gt;Set&lt;/code&gt;; see &lt;code&gt;&lt;a href=&quot;#next-1&quot;&gt;next/1&lt;/a&gt;&lt;/code&gt;. The difference as compared to the iterator returned by &lt;code&gt;&lt;a href=&quot;#iterator-1&quot;&gt;iterator/1&lt;/a&gt;&lt;/code&gt; is that the first element greater than or equal to &lt;code&gt;Element&lt;/code&gt; is returned.</source>
          <target state="translated">返回一个迭代器，该迭代器可用于遍历 &lt;code&gt;Set&lt;/code&gt; 的条目；参见 &lt;code&gt;&lt;a href=&quot;#next-1&quot;&gt;next/1&lt;/a&gt;&lt;/code&gt; 。与 &lt;code&gt;&lt;a href=&quot;#iterator-1&quot;&gt;iterator/1&lt;/a&gt;&lt;/code&gt; 返回的迭代器相比，区别在于返回的第一个元素大于或等于 &lt;code&gt;Element&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bf26d648fe3f9ada4031ee789c3c86a3374d50fe" translate="yes" xml:space="preserve">
          <source>Returns an iterator that can be used for traversing the entries of &lt;code&gt;Set&lt;/code&gt;; see &lt;code&gt;&lt;a href=&quot;#next-1&quot;&gt;next/1&lt;/a&gt;&lt;/code&gt;. The implementation of this is very efficient; traversing the whole set using &lt;code&gt;next/1&lt;/code&gt; is only slightly slower than getting the list of all elements using &lt;code&gt;&lt;a href=&quot;#to_list-1&quot;&gt;to_list/1&lt;/a&gt;&lt;/code&gt; and traversing that. The main advantage of the iterator approach is that it does not require the complete list of all elements to be built in memory at one time.</source>
          <target state="translated">返回一个迭代器，该迭代器可用于遍历 &lt;code&gt;Set&lt;/code&gt; 的条目；参见 &lt;code&gt;&lt;a href=&quot;#next-1&quot;&gt;next/1&lt;/a&gt;&lt;/code&gt; 。这的实现非常有效；使用 &lt;code&gt;next/1&lt;/code&gt; 遍历整个集合仅比使用 &lt;code&gt;&lt;a href=&quot;#to_list-1&quot;&gt;to_list/1&lt;/a&gt;&lt;/code&gt; 遍历所有元素的列表慢一点。迭代器方法的主要优点是它不需要一次在内存中构建所有元素的完整列表。</target>
        </trans-unit>
        <trans-unit id="41cf66b1df0def909f57f1fe8897f565fd27185b" translate="yes" xml:space="preserve">
          <source>Returns an iterator that can be used for traversing the entries of &lt;code&gt;Tree&lt;/code&gt;; see &lt;code&gt;&lt;a href=&quot;#next-1&quot;&gt;next/1&lt;/a&gt;&lt;/code&gt;. The difference as compared to the iterator returned by &lt;code&gt;&lt;a href=&quot;#iterator-1&quot;&gt;iterator/1&lt;/a&gt;&lt;/code&gt; is that the first key greater than or equal to &lt;code&gt;Key&lt;/code&gt; is returned.</source>
          <target state="translated">返回一个迭代器，该迭代器可用于遍历 &lt;code&gt;Tree&lt;/code&gt; 的条目；参见 &lt;code&gt;&lt;a href=&quot;#next-1&quot;&gt;next/1&lt;/a&gt;&lt;/code&gt; 。与 &lt;code&gt;&lt;a href=&quot;#iterator-1&quot;&gt;iterator/1&lt;/a&gt;&lt;/code&gt; 返回的迭代器相比，区别在于返回的第一个密钥大于或等于 &lt;code&gt;Key&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e6603b1e8419e4b3a9c53586d55b1e117fa59add" translate="yes" xml:space="preserve">
          <source>Returns an iterator that can be used for traversing the entries of &lt;code&gt;Tree&lt;/code&gt;; see &lt;code&gt;&lt;a href=&quot;#next-1&quot;&gt;next/1&lt;/a&gt;&lt;/code&gt;. The implementation of this is very efficient; traversing the whole tree using &lt;code&gt;next/1&lt;/code&gt; is only slightly slower than getting the list of all elements using &lt;code&gt;&lt;a href=&quot;#to_list-1&quot;&gt;to_list/1&lt;/a&gt;&lt;/code&gt; and traversing that. The main advantage of the iterator approach is that it does not require the complete list of all elements to be built in memory at one time.</source>
          <target state="translated">返回一个迭代器，该迭代器可用于遍历 &lt;code&gt;Tree&lt;/code&gt; 的条目；参见 &lt;code&gt;&lt;a href=&quot;#next-1&quot;&gt;next/1&lt;/a&gt;&lt;/code&gt; 。这的实现非常有效；使用 &lt;code&gt;next/1&lt;/code&gt; 遍历整个树仅比使用 &lt;code&gt;&lt;a href=&quot;#to_list-1&quot;&gt;to_list/1&lt;/a&gt;&lt;/code&gt; 遍历所有元素的列表慢一点。迭代器方法的主要优点是它不需要一次在内存中构建所有元素的完整列表。</target>
        </trans-unit>
        <trans-unit id="251efe7b1ee7e8402270eee07d4c38a31a180ae5" translate="yes" xml:space="preserve">
          <source>Returns an open file descriptor on success, otherwise a negative value. In the latter case &lt;code&gt;erl_errno&lt;/code&gt; is set to one of:</source>
          <target state="translated">成功返回一个打开的文件描述符，否则为负值。在后一种情况下， &lt;code&gt;erl_errno&lt;/code&gt; 设置为以下之一：</target>
        </trans-unit>
        <trans-unit id="fdfffa9137c7a5414315c48e30aecab15892963e" translate="yes" xml:space="preserve">
          <source>Returns an ordered set of the elements in &lt;code&gt;List&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;List&lt;/code&gt; 中元素的有序集合。</target>
        </trans-unit>
        <trans-unit id="3dcf143c406cc677eb02ad78c6375d68b0b0956e" translate="yes" xml:space="preserve">
          <source>Returns an unordered list of the keys used in &lt;code&gt;List&lt;/code&gt;, not containing duplicates.</source>
          <target state="translated">返回 &lt;code&gt;List&lt;/code&gt; 中使用的键的无序列表，不包含重复项。</target>
        </trans-unit>
        <trans-unit id="d0257854f95b8e3b83216dc68878936b5858023c" translate="yes" xml:space="preserve">
          <source>Returns an unsorted list of digraph vertices such that for each vertex in the list, there is a &lt;code&gt;&lt;a href=&quot;#path&quot;&gt;path&lt;/a&gt;&lt;/code&gt; from the vertex to some vertex of &lt;code&gt;Vertices&lt;/code&gt;. In particular, as paths can have length zero, the vertices of &lt;code&gt;Vertices&lt;/code&gt; are included in the returned list.</source>
          <target state="translated">返回有向图的未排序的顶点，从而对列表中的每个顶点，有一个 &lt;code&gt;&lt;a href=&quot;#path&quot;&gt;path&lt;/a&gt;&lt;/code&gt; 从顶点到顶点的一些 &lt;code&gt;Vertices&lt;/code&gt; 。特别是，由于路径的长度可以为零，因此顶点的 &lt;code&gt;Vertices&lt;/code&gt; 会包含在返回的列表中。</target>
        </trans-unit>
        <trans-unit id="f55e9014080b34fc9b11903183d78f6396199723" translate="yes" xml:space="preserve">
          <source>Returns an unsorted list of digraph vertices such that for each vertex in the list, there is a &lt;code&gt;&lt;a href=&quot;#path&quot;&gt;path&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;Digraph&lt;/code&gt; from some vertex of &lt;code&gt;Vertices&lt;/code&gt; to the vertex. In particular, as paths can have length zero, the vertices of &lt;code&gt;Vertices&lt;/code&gt; are included in the returned list.</source>
          <target state="translated">返回有向图的未排序的顶点，从而对列表中的每个顶点，有一个 &lt;code&gt;&lt;a href=&quot;#path&quot;&gt;path&lt;/a&gt;&lt;/code&gt; 中 &lt;code&gt;Digraph&lt;/code&gt; 从一些顶点 &lt;code&gt;Vertices&lt;/code&gt; 到顶点。特别是，由于路径的长度可以为零，因此顶点的 &lt;code&gt;Vertices&lt;/code&gt; 会包含在返回的列表中。</target>
        </trans-unit>
        <trans-unit id="534915567af70fcc2b08c5e57e82d2863b827ac4" translate="yes" xml:space="preserve">
          <source>Returns an unsorted list of digraph vertices such that for each vertex in the list, there is a &lt;code&gt;&lt;a href=&quot;#path&quot;&gt;path&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;Digraph&lt;/code&gt; of length one or more from some vertex of &lt;code&gt;Vertices&lt;/code&gt; to the vertex. As a consequence, only those vertices of &lt;code&gt;Vertices&lt;/code&gt; that are included in some &lt;code&gt;&lt;a href=&quot;#cycle&quot;&gt;cycle&lt;/a&gt;&lt;/code&gt; are returned.</source>
          <target state="translated">返回未排序的有向图顶点列表，这样对于列表中的每个顶点，有向 &lt;code&gt;Digraph&lt;/code&gt; 中从顶点的某个顶点到 &lt;code&gt;Vertices&lt;/code&gt; 的长度为一个或多个的 &lt;code&gt;&lt;a href=&quot;#path&quot;&gt;path&lt;/a&gt;&lt;/code&gt; 。因此，只有那些顶点 &lt;code&gt;Vertices&lt;/code&gt; 包括在一些 &lt;code&gt;&lt;a href=&quot;#cycle&quot;&gt;cycle&lt;/a&gt;&lt;/code&gt; 返回。</target>
        </trans-unit>
        <trans-unit id="f28355e536bf47a1f0c2fd3ce97c5f1e224ca28a" translate="yes" xml:space="preserve">
          <source>Returns an unsorted list of digraph vertices such that for each vertex in the list, there is a &lt;code&gt;&lt;a href=&quot;#path&quot;&gt;path&lt;/a&gt;&lt;/code&gt; of length one or more from the vertex to some vertex of &lt;code&gt;Vertices&lt;/code&gt;. Therefore only those vertices of &lt;code&gt;Vertices&lt;/code&gt; that are included in some &lt;code&gt;&lt;a href=&quot;#cycle&quot;&gt;cycle&lt;/a&gt;&lt;/code&gt; are returned.</source>
          <target state="translated">返回有向图的一个未排序的列表顶点，使得对于列表中的每个顶点，还有一个 &lt;code&gt;&lt;a href=&quot;#path&quot;&gt;path&lt;/a&gt;&lt;/code&gt; 长度的一个或多个从顶点到顶点一些的 &lt;code&gt;Vertices&lt;/code&gt; 。因此，只有那些顶点 &lt;code&gt;Vertices&lt;/code&gt; 包括在一些 &lt;code&gt;&lt;a href=&quot;#cycle&quot;&gt;cycle&lt;/a&gt;&lt;/code&gt; 返回。</target>
        </trans-unit>
        <trans-unit id="518449232fbe1ed623aaeb282017025b66e1fc06" translate="yes" xml:space="preserve">
          <source>Returns and purges the list of text strings buffered during the latest session of capturing printouts to &lt;code&gt;stdout&lt;/code&gt;. Log categories that are to be ignored in &lt;code&gt;ListOfStrings&lt;/code&gt; can be specified with &lt;code&gt;ExclCategories&lt;/code&gt;. If &lt;code&gt;ExclCategories = []&lt;/code&gt;, no filtering takes place.</source>
          <target state="translated">返回并清除在将打印 &lt;code&gt;stdout&lt;/code&gt; 捕获到stdout的最新会话期间缓冲的文本字符串列表。可以使用 &lt;code&gt;ExclCategories&lt;/code&gt; 指定在 &lt;code&gt;ListOfStrings&lt;/code&gt; 中要忽略的日志类别。如果 &lt;code&gt;ExclCategories = []&lt;/code&gt; ，则不进行任何过滤。</target>
        </trans-unit>
        <trans-unit id="0a94e185cbeae786ecd84f1870ec12764f587327" translate="yes" xml:space="preserve">
          <source>Returns and removes a list of all objects with key &lt;code&gt;Key&lt;/code&gt; in table &lt;code&gt;Tab&lt;/code&gt;.</source>
          <target state="translated">返回并删除表 &lt;code&gt;Tab&lt;/code&gt; 中具有键 &lt;code&gt;Key&lt;/code&gt; 的所有对象的列表。</target>
        </trans-unit>
        <trans-unit id="2448fb9033f4608431484c2e881e5499cd1e0e89" translate="yes" xml:space="preserve">
          <source>Returns annotations with representation Term.</source>
          <target state="translated">Returns annotations with representation Term.</target>
        </trans-unit>
        <trans-unit id="8eec22103cb622707f198ede42b94d4929cae615" translate="yes" xml:space="preserve">
          <source>Returns any data specified with tag &lt;code&gt;userdata&lt;/code&gt; in the list of tuples returned from &lt;code&gt;&lt;a href=&quot;common_test#Module:suite-0&quot;&gt;suite/0&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回从 &lt;code&gt;&lt;a href=&quot;common_test#Module:suite-0&quot;&gt;suite/0&lt;/a&gt;&lt;/code&gt; 返回的元组列表中用标签 &lt;code&gt;userdata&lt;/code&gt; 指定的任何数据。</target>
        </trans-unit>
        <trans-unit id="b580ad2eb1c2b5c00d42b03d280cb2c743b9ff93" translate="yes" xml:space="preserve">
          <source>Returns any data specified with tag &lt;code&gt;userdata&lt;/code&gt; in the list of tuples returned from &lt;code&gt;Suite:group(GroupName)&lt;/code&gt; or &lt;code&gt;Suite:Case()&lt;/code&gt;.</source>
          <target state="translated">返回从 &lt;code&gt;Suite:group(GroupName)&lt;/code&gt; 或 &lt;code&gt;Suite:Case()&lt;/code&gt; 返回的元组列表中用标签 &lt;code&gt;userdata&lt;/code&gt; 指定的任何数据。</target>
        </trans-unit>
        <trans-unit id="1dae253bd97a89263ed4726b4d9bf9d4155e09f6" translate="yes" xml:space="preserve">
          <source>Returns any plain command-line arguments as a list of strings (possibly empty).</source>
          <target state="translated">返回任何纯命令行参数的字符串列表(可能为空)。</target>
        </trans-unit>
        <trans-unit id="fd4cba92cb758d0327a7e88229536ba937439243" translate="yes" xml:space="preserve">
          <source>Returns captured substrings as pairs of byte indexes into the subject string and length of the matching string in the subject (as if the subject string was flattened with &lt;code&gt;erlang:iolist_to_binary/1&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;unicode#characters_to_binary-2&quot;&gt;unicode:characters_to_binary/2&lt;/a&gt;&lt;/code&gt; before matching). Notice that option &lt;code&gt;unicode&lt;/code&gt; results in &lt;strong&gt;byte-oriented&lt;/strong&gt; indexes in a (possibly virtual) &lt;strong&gt;UTF-8 encoded&lt;/strong&gt; binary. A byte index tuple &lt;code&gt;{0,2}&lt;/code&gt; can therefore represent one or two characters when &lt;code&gt;unicode&lt;/code&gt; is in effect. This can seem counter-intuitive, but has been deemed the most effective and useful way to do it. To return lists instead can result in simpler code if that is desired. This return type is the default.</source>
          <target state="translated">将捕获的子字符串返回为主题字符串和主题中匹配字符串的长度的字节索引对（就像在匹配之前使用 &lt;code&gt;erlang:iolist_to_binary/1&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;unicode#characters_to_binary-2&quot;&gt;unicode:characters_to_binary/2&lt;/a&gt;&lt;/code&gt; 展平了主题字符串一样）。请注意，选项 &lt;code&gt;unicode&lt;/code&gt; 会以（可能是虚拟的）&lt;strong&gt;UTF-8编码&lt;/strong&gt;二进制文件&lt;strong&gt;生成面向字节的&lt;/strong&gt;索引。因此，当 &lt;code&gt;unicode&lt;/code&gt; 有效时，字节索引元组 &lt;code&gt;{0,2}&lt;/code&gt; 可以表示一个或两个字符。这似乎违反直觉，但被认为是最有效和有用的方法。如果需要的话，返回列表可能会导致代码更简单。此返回类型是默认类型。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="997359c09668c7069c3575aa744eed8df1d53049" translate="yes" xml:space="preserve">
          <source>Returns current &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_System_Time&quot;&gt;Erlang system time&lt;/a&gt;&lt;/code&gt; converted into the &lt;code&gt;Unit&lt;/code&gt; passed as argument.</source>
          <target state="translated">返回当前的 &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_System_Time&quot;&gt;Erlang system time&lt;/a&gt;&lt;/code&gt; 该时间已转换为作为参数传递的 &lt;code&gt;Unit&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d070a56a6b625aa547a552856e89f99d16aaab43" translate="yes" xml:space="preserve">
          <source>Returns current &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_System_Time&quot;&gt;Erlang system time&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;native&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type_time_unit&quot;&gt;time unit&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">以 &lt;code&gt;native&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#type_time_unit&quot;&gt;time unit&lt;/a&gt;&lt;/code&gt; 返回当前的 &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_System_Time&quot;&gt;Erlang system time&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f63e6508cd9e75a0611137fbfdf6f5c3756b3ee7" translate="yes" xml:space="preserve">
          <source>Returns current &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_System_Time&quot;&gt;Erlang system time&lt;/a&gt;&lt;/code&gt; on the format &lt;code&gt;{MegaSecs, Secs, MicroSecs}&lt;/code&gt;. This format is the same as &lt;code&gt;os:timestamp/0&lt;/code&gt; and the deprecated &lt;code&gt;&lt;a href=&quot;#now-0&quot;&gt;erlang:now/0&lt;/a&gt;&lt;/code&gt; use. The reason for the existence of &lt;code&gt;erlang:timestamp()&lt;/code&gt; is purely to simplify use for existing code that assumes this time stamp format. Current Erlang system time can more efficiently be retrieved in the time unit of your choice using &lt;code&gt;&lt;a href=&quot;#system_time-1&quot;&gt;erlang:system_time/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">以 &lt;code&gt;{MegaSecs, Secs, MicroSecs}&lt;/code&gt; 格式返回当前的 &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_System_Time&quot;&gt;Erlang system time&lt;/a&gt;&lt;/code&gt; 。此格式与 &lt;code&gt;os:timestamp/0&lt;/code&gt; 和不赞成使用的 &lt;code&gt;&lt;a href=&quot;#now-0&quot;&gt;erlang:now/0&lt;/a&gt;&lt;/code&gt; 相同。存在 &lt;code&gt;erlang:timestamp()&lt;/code&gt; 的原因纯粹是为了简化对采用这种时间戳格式的现有代码的使用。可以使用 &lt;code&gt;&lt;a href=&quot;#system_time-1&quot;&gt;erlang:system_time/1&lt;/a&gt;&lt;/code&gt; 以您选择的时间单位更有效地检索当前的Erlang系统时间。</target>
        </trans-unit>
        <trans-unit id="24a27c8c497c79d0b77fe1926ba6380d8a40002f" translate="yes" xml:space="preserve">
          <source>Returns current date and time as the data type DateAndTime, as specified in RFC1903. This is an OCTET STRING.</source>
          <target state="translated">按照RFC1903中指定的数据类型DateAndTime返回当前日期和时间。这是一个OCTET STRING。</target>
        </trans-unit>
        <trans-unit id="58b4d45688c89e92a5d1d069f171f6e770908925" translate="yes" xml:space="preserve">
          <source>Returns either &lt;code&gt;ERL_TICK&lt;/code&gt; or the &lt;code&gt;msgtype&lt;/code&gt; field of the &lt;code&gt;erlang_msg *msg&lt;/code&gt;. The length of the message is put in &lt;code&gt;*msglen&lt;/code&gt;. On error a value &lt;code&gt;&amp;lt; 0&lt;/code&gt; is returned.</source>
          <target state="translated">返回 &lt;code&gt;ERL_TICK&lt;/code&gt; 或 &lt;code&gt;erlang_msg *msg&lt;/code&gt; 的 &lt;code&gt;msgtype&lt;/code&gt; 字段。消息的长度放在 &lt;code&gt;*msglen&lt;/code&gt; 中。错误时，返回值 &lt;code&gt;&amp;lt; 0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7c8f5ac2a445b3814ba7f8e5716fd69d614e67f9" translate="yes" xml:space="preserve">
          <source>Returns either &lt;code&gt;ok&lt;/code&gt; or &lt;code&gt;{ok, Result}&lt;/code&gt; if the operation was successful, or &lt;code&gt;{error, Reason}&lt;/code&gt; if the current tracer is a process or if it is a port not supporting the operation.</source>
          <target state="translated">如果操作成功，则返回 &lt;code&gt;ok&lt;/code&gt; 或 &lt;code&gt;{ok, Result}&lt;/code&gt; &lt;code&gt;{error, Reason}&lt;/code&gt; 如果当前跟踪程序是进程或端口不支持该操作，则返回{error，Reason}。</target>
        </trans-unit>
        <trans-unit id="a6b787e7a2bbffd850f45f0d713920a67ee4a0d2" translate="yes" xml:space="preserve">
          <source>Returns either &lt;code&gt;{module, Module}&lt;/code&gt;, or &lt;code&gt;{error, Reason}&lt;/code&gt; if loading fails. &lt;code&gt;Reason&lt;/code&gt; is one of the following:</source>
          <target state="translated">如果加载失败 &lt;code&gt;{error, Reason}&lt;/code&gt; 则返回 &lt;code&gt;{module, Module}&lt;/code&gt; 或{error，Reason}。 &lt;code&gt;Reason&lt;/code&gt; 是以下之一：</target>
        </trans-unit>
        <trans-unit id="7a7249bc329d9fb9405d3f4c79e87256b4499e0d" translate="yes" xml:space="preserve">
          <source>Returns either &lt;code&gt;{ok, undefined}&lt;/code&gt; if no crypto key fun is registered, or &lt;code&gt;{ok, Term}&lt;/code&gt;, where &lt;code&gt;Term&lt;/code&gt; is the return value from &lt;code&gt;CryptoKeyFun(clear)&lt;/code&gt;, see &lt;code&gt;crypto_key_fun/1&lt;/code&gt;.</source>
          <target state="translated">如果未注册任何密钥乐趣，则返回 &lt;code&gt;{ok, undefined}&lt;/code&gt; ，或者返回 &lt;code&gt;{ok, Term}&lt;/code&gt; ，其中 &lt;code&gt;Term&lt;/code&gt; 是 &lt;code&gt;CryptoKeyFun(clear)&lt;/code&gt; 的返回值，请参阅 &lt;code&gt;crypto_key_fun/1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6e5069174115750570cddd31cc2cef10b9ef79b1" translate="yes" xml:space="preserve">
          <source>Returns either the arity of an Erlang tuple or the number of bytes in an Erlang binary object.</source>
          <target state="translated">返回Erlang元组的arity或Erlang二进制对象的字节数。</target>
        </trans-unit>
        <trans-unit id="9d607c213646af91692ae675dd3aac634aacaecf" translate="yes" xml:space="preserve">
          <source>Returns either the key following &lt;code&gt;Key1&lt;/code&gt; in table &lt;code&gt;Name&lt;/code&gt; according to the internal order of the table, or &lt;code&gt;'$end_of_table'&lt;/code&gt; if there is no next key.</source>
          <target state="translated">根据表的内部顺序返回表 &lt;code&gt;Name&lt;/code&gt; 中 &lt;code&gt;Key1&lt;/code&gt; 之后的键，如果没有下一个键，则返回 &lt;code&gt;'$end_of_table'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d5bc2dbc9587e6ef5460dad5cf3f87b237cc728c" translate="yes" xml:space="preserve">
          <source>Returns either the value of &lt;code&gt;Expr1&lt;/code&gt; (that is, &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;) or the value of &lt;code&gt;Expr2&lt;/code&gt; (if &lt;code&gt;Expr2&lt;/code&gt; is evaluated).</source>
          <target state="translated">返回 &lt;code&gt;Expr1&lt;/code&gt; 的值（即 &lt;code&gt;true&lt;/code&gt; 或 &lt;code&gt;false&lt;/code&gt; ）或 &lt;code&gt;Expr2&lt;/code&gt; 的值（如果评估了 &lt;code&gt;Expr2&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="6323eed878e360580ee27b0c7c7fcd513bdc13b3" translate="yes" xml:space="preserve">
          <source>Returns for each object of table &lt;code&gt;Name&lt;/code&gt; that matches &lt;code&gt;Pattern&lt;/code&gt; a list of bindings in some unspecified order. For a description of patterns, see &lt;code&gt;&lt;a href=&quot;ets#match-2&quot;&gt;ets:match/2&lt;/a&gt;&lt;/code&gt;. If the keypos'th element of &lt;code&gt;Pattern&lt;/code&gt; is unbound, all table objects are matched. If the keypos'th element is bound, only the objects with the correct key are matched.</source>
          <target state="translated">对于与 &lt;code&gt;Pattern&lt;/code&gt; 匹配的表 &lt;code&gt;Name&lt;/code&gt; 的每个对象，返回一些未指定顺序的绑定列表。有关模式的描述，请参见 &lt;code&gt;&lt;a href=&quot;ets#match-2&quot;&gt;ets:match/2&lt;/a&gt;&lt;/code&gt; 。如果 &lt;code&gt;Pattern&lt;/code&gt; 的keypos'th元素未绑定，则所有表对象都将匹配。如果绑定了keypos'th元素，则仅匹配具有正确密钥的对象。</target>
        </trans-unit>
        <trans-unit id="918c4edfa410fe0325d57cd8b0922f70f40f5c41" translate="yes" xml:space="preserve">
          <source>Returns fractions of real-time or run-time spent in the various threads from the given microstate statistics values.</source>
          <target state="translated">从给定的微状态统计值中返回实时或运行时间在各个线程中花费的分数。</target>
        </trans-unit>
        <trans-unit id="f67e767c1786e9a6e8c8f714e5c031353ef2065b" translate="yes" xml:space="preserve">
          <source>Returns information about &lt;code&gt;Fun&lt;/code&gt; as specified by &lt;code&gt;Item&lt;/code&gt;, in the form &lt;code&gt;{Item,Info}&lt;/code&gt;.</source>
          <target state="translated">返回有关 &lt;code&gt;Item&lt;/code&gt; 指定的 &lt;code&gt;Fun&lt;/code&gt; 的信息，格式为 &lt;code&gt;{Item,Info}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="29427c069c86e73d452e6c2cf589458f1b031710" translate="yes" xml:space="preserve">
          <source>Returns information about Erlang Distribution in the current system as specified by &lt;code&gt;Item&lt;/code&gt;:</source>
          <target state="translated">返回有关 &lt;code&gt;Item&lt;/code&gt; 中指定的当前系统中的Erlang分布的信息：</target>
        </trans-unit>
        <trans-unit id="00381d055f3b647b59d9ffa1642b39ddd0b2cebb" translate="yes" xml:space="preserve">
          <source>Returns information about a TFTP daemon, server, or client process.</source>
          <target state="translated">返回TFTP守护进程、服务器或客户端进程的信息。</target>
        </trans-unit>
        <trans-unit id="34ac827a99e8836cb168ff01024d0483b709e391" translate="yes" xml:space="preserve">
          <source>Returns information about a query handle. The information describes the simplifications and optimizations that are the results of preparing the query for evaluation. This function is probably mainly useful during debugging.</source>
          <target state="translated">返回关于查询句柄的信息。这些信息描述了为评估查询所做的简化和优化。这个函数可能主要在调试时有用。</target>
        </trans-unit>
        <trans-unit id="b61c6f9e4f952792d73b74ecc86a589c837dcde2" translate="yes" xml:space="preserve">
          <source>Returns information about a registry. Using information returned by this function, you can see whether the size of the registry is suitable for the amount of data it contains.</source>
          <target state="translated">返回一个注册表的信息。通过该函数返回的信息,您可以看到注册表的大小是否适合它所包含的数据量。</target>
        </trans-unit>
        <trans-unit id="aaf544708d3f6a6ee99b4924c5f04dc700680b39" translate="yes" xml:space="preserve">
          <source>Returns information about all TFTP daemon processes.</source>
          <target state="translated">返回所有TFTP守护进程的信息。</target>
        </trans-unit>
        <trans-unit id="73ad91d00ddb0e0ae60c348b4d17a6c6912df3e9" translate="yes" xml:space="preserve">
          <source>Returns information about all TFTP server processes.</source>
          <target state="translated">返回所有TFTP服务器进程的信息。</target>
        </trans-unit>
        <trans-unit id="20cb52f97ce8bf1d78906f33ba8345818f41a092" translate="yes" xml:space="preserve">
          <source>Returns information about an object.</source>
          <target state="translated">返回一个对象的信息。</target>
        </trans-unit>
        <trans-unit id="8b2f681c86231b46727d63fab0ac4094e7d23f0c" translate="yes" xml:space="preserve">
          <source>Returns information about garbage collection, for example:</source>
          <target state="translated">例如,返回有关垃圾收集的信息。</target>
        </trans-unit>
        <trans-unit id="2c7aed6202813fcc443975dd687501d0a3102dc9" translate="yes" xml:space="preserve">
          <source>Returns information about how the user has requested schedulers to be bound or not bound.</source>
          <target state="translated">Returns information about how user has requested schedulers to be bound or not bound。</target>
        </trans-unit>
        <trans-unit id="2ec089f54f08182afed4881a4e1669c367ccf309" translate="yes" xml:space="preserve">
          <source>Returns information about reductions, for example:</source>
          <target state="translated">例如,返回减少的信息。</target>
        </trans-unit>
        <trans-unit id="c92f6d947bb85f7605a3005fad497b9d3a3569f4" translate="yes" xml:space="preserve">
          <source>Returns information about runtime, in milliseconds.</source>
          <target state="translated">返回运行时间的信息,以毫秒为单位。</target>
        </trans-unit>
        <trans-unit id="75991b90e4fe86df8cf66783088e92e710b74bab" translate="yes" xml:space="preserve">
          <source>Returns information about schedulers, scheduling and threads in the current system as specified by &lt;code&gt;Item&lt;/code&gt;:</source>
          <target state="translated">返回有关 &lt;code&gt;Item&lt;/code&gt; 中指定的当前系统中的调度程序，调度和线程的信息：</target>
        </trans-unit>
        <trans-unit id="ae97536a283bf5c0b56cfec555d6233fcde3756a" translate="yes" xml:space="preserve">
          <source>Returns information about table &lt;code&gt;Name&lt;/code&gt; as a list of tuples:</source>
          <target state="translated">返回有关表 &lt;code&gt;Name&lt;/code&gt; 信息作为元组列表：</target>
        </trans-unit>
        <trans-unit id="6f85c1f156b4fca3e99653ec5d74d9444618729e" translate="yes" xml:space="preserve">
          <source>Returns information about table &lt;code&gt;Tab&lt;/code&gt; as a list of tuples. If &lt;code&gt;Tab&lt;/code&gt; has the correct type for a table identifier, but does not refer to an existing ETS table, &lt;code&gt;undefined&lt;/code&gt; is returned. If &lt;code&gt;Tab&lt;/code&gt; is not of the correct type, a &lt;code&gt;badarg&lt;/code&gt; exception is raised.</source>
          <target state="translated">返回有关表 &lt;code&gt;Tab&lt;/code&gt; 的信息作为元组列表。如果 &lt;code&gt;Tab&lt;/code&gt; 具有正确的表标识符类型，但未引用现有的ETS表，则返回 &lt;code&gt;undefined&lt;/code&gt; 。如果 &lt;code&gt;Tab&lt;/code&gt; 的类型不正确，则会引发 &lt;code&gt;badarg&lt;/code&gt; 异常。</target>
        </trans-unit>
        <trans-unit id="3de9834a84497aba408c74c20b679b322fbc9bba" translate="yes" xml:space="preserve">
          <source>Returns information about the Mnesia system, such as transaction statistics, &lt;code&gt;db_nodes&lt;/code&gt;, and configuration parameters. The valid keys are as follows:</source>
          <target state="translated">返回有关Mnesia系统的信息，例如事务统计信息， &lt;code&gt;db_nodes&lt;/code&gt; 和配置参数。有效密钥如下：</target>
        </trans-unit>
        <trans-unit id="3a624b5819d80f8d786c5c409c2f82ae4f7de210" translate="yes" xml:space="preserve">
          <source>Returns information about the current system (emulator) limits as specified by &lt;code&gt;Item&lt;/code&gt;:</source>
          <target state="translated">返回有关 &lt;code&gt;Item&lt;/code&gt; 指定的当前系统（仿真器）限制的信息：</target>
        </trans-unit>
        <trans-unit id="4d6a1391af722b90c279e4ecd2014c5e15b18c3b" translate="yes" xml:space="preserve">
          <source>Returns information about the current system (emulator) time as specified by &lt;code&gt;Item&lt;/code&gt;:</source>
          <target state="translated">返回有关 &lt;code&gt;Item&lt;/code&gt; 指定的当前系统（仿真器）时间的信息：</target>
        </trans-unit>
        <trans-unit id="4d683c5330deee43af8dda717b26cb8cb76a91f4" translate="yes" xml:space="preserve">
          <source>Returns information about the current system. The documentation of this function is broken into the following sections in order to make it easier to navigate.</source>
          <target state="translated">返回当前系统的信息。本函数的文档分为以下几个部分,以便于浏览。</target>
        </trans-unit>
        <trans-unit id="9612263eb8e62ba51324bdb8f09116aa4b64a64c" translate="yes" xml:space="preserve">
          <source>Returns information about the currently used scheduler bindings.</source>
          <target state="translated">返回当前使用的调度器绑定的信息。</target>
        </trans-unit>
        <trans-unit id="8e183acee45d9b4755dd07ddb202bcfed9f59615" translate="yes" xml:space="preserve">
          <source>Returns information about the default process heap settings:</source>
          <target state="translated">返回有关默认进程堆设置的信息。</target>
        </trans-unit>
        <trans-unit id="e99647a7b11a6067aa29e2adfe9b2c26b0de9f54" translate="yes" xml:space="preserve">
          <source>Returns information about the process identified by &lt;code&gt;Pid&lt;/code&gt;, as specified by &lt;code&gt;Item&lt;/code&gt; or &lt;code&gt;ItemList&lt;/code&gt;. Returns &lt;code&gt;undefined&lt;/code&gt; if the process is not alive.</source>
          <target state="translated">返回有关 &lt;code&gt;Item&lt;/code&gt; 或 &lt;code&gt;ItemList&lt;/code&gt; 指定的由 &lt;code&gt;Pid&lt;/code&gt; 标识的过程的信息。如果进程 &lt;code&gt;undefined&lt;/code&gt; 则返回undefined。</target>
        </trans-unit>
        <trans-unit id="dedfb23643940b8e66d602f928ce947a170709bc" translate="yes" xml:space="preserve">
          <source>Returns information about the specified PLT.</source>
          <target state="translated">返回指定PLT的信息。</target>
        </trans-unit>
        <trans-unit id="134c344e9d341c118ba638b32d9c75bd01f818e3" translate="yes" xml:space="preserve">
          <source>Returns information about the specified allocator. As from ERTS 5.6.1, the return value is a list of &lt;code&gt;{instance, InstanceNo, InstanceInfo}&lt;/code&gt; tuples, where &lt;code&gt;InstanceInfo&lt;/code&gt; contains information about a specific instance of the allocator. If &lt;code&gt;Alloc&lt;/code&gt; is not a recognized allocator, &lt;code&gt;undefined&lt;/code&gt; is returned. If &lt;code&gt;Alloc&lt;/code&gt; is disabled, &lt;code&gt;false&lt;/code&gt; is returned.</source>
          <target state="translated">返回有关指定分配器的信息。从ERTS 5.6.1开始，返回值是 &lt;code&gt;{instance, InstanceNo, InstanceInfo}&lt;/code&gt; 元组的列表，其中 &lt;code&gt;InstanceInfo&lt;/code&gt; 包含有关分配程序的特定实例的信息。如果 &lt;code&gt;Alloc&lt;/code&gt; 不是公认的分配器，则返回 &lt;code&gt;undefined&lt;/code&gt; 。如果禁用了 &lt;code&gt;Alloc&lt;/code&gt; ，则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0a39703ed80d026886b97b29f3cb2305370a5bd2" translate="yes" xml:space="preserve">
          <source>Returns information about the table dumped to file by &lt;code&gt;&lt;a href=&quot;#tab2file-2&quot;&gt;tab2file/2&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#tab2file-3&quot;&gt;tab2file/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回有关由 &lt;code&gt;&lt;a href=&quot;#tab2file-2&quot;&gt;tab2file/2&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;#tab2file-3&quot;&gt;tab2file/3&lt;/a&gt;&lt;/code&gt; 转储到文件的表的信息。</target>
        </trans-unit>
        <trans-unit id="ffdbd7494c0d40e81fbd66fbce3b02001cf630af" translate="yes" xml:space="preserve">
          <source>Returns information about wall clock. &lt;code&gt;wall_clock&lt;/code&gt; can be used in the same manner as &lt;code&gt;runtime&lt;/code&gt;, except that real time is measured as opposed to runtime or CPU time.</source>
          <target state="translated">返回有关壁钟的信息。 &lt;code&gt;wall_clock&lt;/code&gt; 可以与 &lt;code&gt;runtime&lt;/code&gt; 相同的方式使用，除了测量的是实时时间，而不是运行时或CPU时间。</target>
        </trans-unit>
        <trans-unit id="abb0cd19cdd8b0638cd14d51f38d146f23135edf" translate="yes" xml:space="preserve">
          <source>Returns information as specified by &lt;code&gt;Item&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;Item&lt;/code&gt; 指定的信息。</target>
        </trans-unit>
        <trans-unit id="83b83e2c4db217042bead4125a190b5bf0f10766" translate="yes" xml:space="preserve">
          <source>Returns internal statistics about &lt;code&gt;set&lt;/code&gt;, &lt;code&gt;bag&lt;/code&gt;, and &lt;code&gt;duplicate_bag&lt;/code&gt; tables on an internal format used by OTP test suites. Not for production use.</source>
          <target state="translated">以OTP测试套件使用的内部格式返回有关 &lt;code&gt;set&lt;/code&gt; ， &lt;code&gt;bag&lt;/code&gt; 和 &lt;code&gt;duplicate_bag&lt;/code&gt; 表的内部统计信息。不能用于生产。</target>
        </trans-unit>
        <trans-unit id="0fdc64bc14710c38583f74335de4689eacba7eb7" translate="yes" xml:space="preserve">
          <source>Returns lexeme number &lt;code&gt;N&lt;/code&gt; in &lt;code&gt;String&lt;/code&gt;, where lexemes are separated by the grapheme clusters in &lt;code&gt;SeparatorList&lt;/code&gt;.</source>
          <target state="translated">返回词位数目 &lt;code&gt;N&lt;/code&gt; 在 &lt;code&gt;String&lt;/code&gt; ，其中的词位是通过在石墨烯簇分离 &lt;code&gt;SeparatorList&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="177742e996781c388cf44e159de27e03157e6cdc" translate="yes" xml:space="preserve">
          <source>Returns list of pids that are monitoring given port at the moment.</source>
          <target state="translated">返回当前正在监控的 pids 的列表。</target>
        </trans-unit>
        <trans-unit id="e428b53fcffd274a623f9f135991769113470904" translate="yes" xml:space="preserve">
          <source>Returns local date and time converted from the return value from &lt;code&gt;erlang:timestamp/0&lt;/code&gt;.</source>
          <target state="translated">返回从 &lt;code&gt;erlang:timestamp/0&lt;/code&gt; 的返回值转换的本地日期和时间。</target>
        </trans-unit>
        <trans-unit id="833264d9c4c3210c6943d95bf1e760f7c657ae75" translate="yes" xml:space="preserve">
          <source>Returns local time.</source>
          <target state="translated">返回当地时间。</target>
        </trans-unit>
        <trans-unit id="f6d1f81ffc8b25a8b6796831f820a4eee4709cca" translate="yes" xml:space="preserve">
          <source>Returns matching substrings as binaries. If option &lt;code&gt;unicode&lt;/code&gt; is used, these binaries are in UTF-8. If the \C sequence is used together with &lt;code&gt;unicode&lt;/code&gt;, the binaries can be invalid UTF-8.</source>
          <target state="translated">返回匹配的子字符串作为二进制。如果使用选项 &lt;code&gt;unicode&lt;/code&gt; ，则这些二进制文件位于UTF-8中。如果\ C序列与 &lt;code&gt;unicode&lt;/code&gt; 一起使用，则二进制文件可能是无效的UTF-8。</target>
        </trans-unit>
        <trans-unit id="df6fb542ac6298148c4628d7b50d50effc0823c9" translate="yes" xml:space="preserve">
          <source>Returns matching substrings as lists of characters (Erlang &lt;code&gt;string()&lt;/code&gt;s). It option &lt;code&gt;unicode&lt;/code&gt; is used in combination with the \C sequence in the regular expression, a captured subpattern can contain bytes that are not valid UTF-8 (\C matches bytes regardless of character encoding). In that case the &lt;code&gt;list&lt;/code&gt; capturing can result in the same types of tuples that &lt;code&gt;&lt;a href=&quot;unicode#characters_to_list-2&quot;&gt;unicode:characters_to_list/2&lt;/a&gt;&lt;/code&gt; can return, namely three-tuples with tag &lt;code&gt;incomplete&lt;/code&gt; or &lt;code&gt;error&lt;/code&gt;, the successfully converted characters and the invalid UTF-8 tail of the conversion as a binary. The best strategy is to avoid using the \C sequence when capturing lists.</source>
          <target state="translated">返回匹配的子字符串作为字符列表（Erlang &lt;code&gt;string()&lt;/code&gt; s）。如果将 &lt;code&gt;unicode&lt;/code&gt; 选项与正则表达式中的\ C序列结合使用，则捕获的子模式可以包含无效的UTF-8字节（\ C匹配字节，而不考虑字符编码）。在那种情况下， &lt;code&gt;list&lt;/code&gt; 捕获会导致 &lt;code&gt;&lt;a href=&quot;unicode#characters_to_list-2&quot;&gt;unicode:characters_to_list/2&lt;/a&gt;&lt;/code&gt; 可以返回的相同类型的元组，即具有标记 &lt;code&gt;incomplete&lt;/code&gt; 或 &lt;code&gt;error&lt;/code&gt; 的三元组，成功转换的字符和无效的UTF-8转换尾部（作为二进制） 。最好的策略是在捕获列表时避免使用\ C序列。</target>
        </trans-unit>
        <trans-unit id="28ca01a6f5eb6005db2633f2649168fb78905dc4" translate="yes" xml:space="preserve">
          <source>Returns no matching subpatterns, gives the single atom &lt;code&gt;match&lt;/code&gt; as the return value of the function when matching successfully instead of the &lt;code&gt;{match, list()}&lt;/code&gt; return. Specifying an empty list gives the same behavior.</source>
          <target state="translated">不返回匹配的子模式，匹配成功时将单个原子 &lt;code&gt;match&lt;/code&gt; 作为函数的返回值，而不是 &lt;code&gt;{match, list()}&lt;/code&gt; 返回。指定一个空列表将产生相同的行为。</target>
        </trans-unit>
        <trans-unit id="71c8e08afa64e822ed88ad01f72880656f15c77b" translate="yes" xml:space="preserve">
          <source>Returns one of the following:</source>
          <target state="translated">返回下列之一:</target>
        </trans-unit>
        <trans-unit id="4ac4df0fa1d9c2cd461b98067935dc76cbc78030" translate="yes" xml:space="preserve">
          <source>Returns only positive integers.</source>
          <target state="translated">只返回正整数。</target>
        </trans-unit>
        <trans-unit id="39fba73fafca3b20ce7ae66a0bcf604663dffe5d" translate="yes" xml:space="preserve">
          <source>Returns only the elements of &lt;code&gt;Ordset1&lt;/code&gt; that are not also elements of &lt;code&gt;Ordset2&lt;/code&gt;.</source>
          <target state="translated">只返回的元素 &lt;code&gt;Ordset1&lt;/code&gt; 中未出现的元素 &lt;code&gt;Ordset2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dbf62fa1c230f9ff958db44f0929d3c2e391865b" translate="yes" xml:space="preserve">
          <source>Returns only the elements of &lt;code&gt;Set1&lt;/code&gt; that are not also elements of &lt;code&gt;Set2&lt;/code&gt;.</source>
          <target state="translated">仅返回 &lt;code&gt;Set1&lt;/code&gt; 的元素，这些元素也不是 &lt;code&gt;Set2&lt;/code&gt; 的元素。</target>
        </trans-unit>
        <trans-unit id="9ef614610a6e34b2cc33317c2f1bab1ad880e94d" translate="yes" xml:space="preserve">
          <source>Returns pointer to the new environment.</source>
          <target state="translated">返回指向新环境的指针。</target>
        </trans-unit>
        <trans-unit id="3df71ede0d1c1721b7d64fb91cce9d8d064f7572" translate="yes" xml:space="preserve">
          <source>Returns seconds since or before Unix time epoch, which is 1970-01-01 00:00 UTC.</source>
          <target state="translated">Returns seconds since or before Unix time epoch,which is 1970-01-01 00:00 UTC.</target>
        </trans-unit>
        <trans-unit id="060ceec1994b0f4db8c8d84a98e3888dd441f936" translate="yes" xml:space="preserve">
          <source>Returns some or all of the remaining answers to a query cursor. Only the owner of &lt;code&gt;QueryCursor&lt;/code&gt; can retrieve answers.</source>
          <target state="translated">返回查询游标的其余部分或全部答案。只有 &lt;code&gt;QueryCursor&lt;/code&gt; 的所有者才能检索答案。</target>
        </trans-unit>
        <trans-unit id="caac4497837fbacfa43c092f1f26da0b20ec239a" translate="yes" xml:space="preserve">
          <source>Returns some textual information about the current process as a binary. Takes no arguments and is only allowed in the &lt;code&gt;MatchBody&lt;/code&gt; part when tracing.</source>
          <target state="translated">以二进制形式返回有关当前进程的一些文本信息。不带参数，并且仅在跟踪时在 &lt;code&gt;MatchBody&lt;/code&gt; 部分中允许。</target>
        </trans-unit>
        <trans-unit id="c8cd8a210b9f6de0a669b999ec91c75db76d6eae" translate="yes" xml:space="preserve">
          <source>Returns specific information about one aspect of a driver. Parameter &lt;code&gt;Tag&lt;/code&gt; specifies which aspect to get information about. The return &lt;code&gt;Value&lt;/code&gt; differs between different tags:</source>
          <target state="translated">返回有关驱动程序一方面的特定信息。参数 &lt;code&gt;Tag&lt;/code&gt; 指定获取哪个方面的信息。不同标签之间的返回 &lt;code&gt;Value&lt;/code&gt; 有所不同：</target>
        </trans-unit>
        <trans-unit id="824656855cca96798e6b6be83bdaa026868f113d" translate="yes" xml:space="preserve">
          <source>Returns status of ongoing test. The returned list contains information about which test case is executing (a list of cases when a parallel test case group is executing), as well as counters for successful, failed, skipped, and total test cases so far.</source>
          <target state="translated">返回正在进行的测试的状态。返回的列表包含了哪个测试用例正在执行的信息(当一个并行测试用例组正在执行时的用例列表),以及迄今为止成功、失败、跳过和总测试用例的计数器。</target>
        </trans-unit>
        <trans-unit id="d3c9ff9631f70dd71bcf65ab3f6f0786c5a04e1f" translate="yes" xml:space="preserve">
          <source>Returns test progress. If &lt;code&gt;Status&lt;/code&gt; is &lt;code&gt;ongoing&lt;/code&gt;, tests are running on the node and are not yet finished.</source>
          <target state="translated">返回测试进度。如果 &lt;code&gt;Status&lt;/code&gt; 为 &lt;code&gt;ongoing&lt;/code&gt; ，则测试正在节点上运行并且尚未完成。</target>
        </trans-unit>
        <trans-unit id="94556d0f9711b921d52b24afcb3e185050c30911" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#Cartesian_product&quot;&gt;Cartesian product&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;Set1&lt;/code&gt; and &lt;code&gt;Set2&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;&lt;a href=&quot;#Cartesian_product&quot;&gt;Cartesian product&lt;/a&gt;&lt;/code&gt; 的 &lt;code&gt;Set1&lt;/code&gt; 和 &lt;code&gt;Set2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cf6c140fa3d3f04c65f2a9ce387184abff140810" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#Cartesian_product_tuple&quot;&gt;Cartesian product&lt;/a&gt;&lt;/code&gt; of the non-empty tuple of sets &lt;code&gt;TupleOfSets&lt;/code&gt;. If (x[1], ..., x[n]) is an element of the n-ary relation &lt;code&gt;Relation&lt;/code&gt;, then x[i] is drawn from element i of &lt;code&gt;TupleOfSets&lt;/code&gt;.</source>
          <target state="translated">返回集合 &lt;code&gt;TupleOfSets&lt;/code&gt; 的非空元组的 &lt;code&gt;&lt;a href=&quot;#Cartesian_product_tuple&quot;&gt;Cartesian product&lt;/a&gt;&lt;/code&gt; 。如果（x [1]，...，x [n]）是n元关系 &lt;code&gt;Relation&lt;/code&gt; 的元素，则x [i]从 &lt;code&gt;TupleOfSets&lt;/code&gt; 的元素i中得出。</target>
        </trans-unit>
        <trans-unit id="1dbabd9cacc3eb998bb13a8811a3fb3de99e786f" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#composite&quot;&gt;composite&lt;/a&gt;&lt;/code&gt; of the functions &lt;code&gt;Function1&lt;/code&gt; and &lt;code&gt;Function2&lt;/code&gt;.</source>
          <target state="translated">返回函数 &lt;code&gt;Function1&lt;/code&gt; 和 &lt;code&gt;Function2&lt;/code&gt; 的 &lt;code&gt;&lt;a href=&quot;#composite&quot;&gt;composite&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ce5143caf37001b8d7bd2d66766c3fa4b00a3f6a" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#converse&quot;&gt;converse&lt;/a&gt;&lt;/code&gt; of the binary relation &lt;code&gt;BinRel1&lt;/code&gt;.</source>
          <target state="translated">返回二进制关系 &lt;code&gt;BinRel1&lt;/code&gt; 的 &lt;code&gt;&lt;a href=&quot;#converse&quot;&gt;converse&lt;/a&gt;&lt;/code&gt; 函数。</target>
        </trans-unit>
        <trans-unit id="6b56dc94a86cd6430ecc25a5f7add662a543150b" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#difference&quot;&gt;difference&lt;/a&gt;&lt;/code&gt; of the sets &lt;code&gt;Set1&lt;/code&gt; and &lt;code&gt;Set2&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;&lt;a href=&quot;#difference&quot;&gt;difference&lt;/a&gt;&lt;/code&gt; 的套 &lt;code&gt;Set1&lt;/code&gt; 和 &lt;code&gt;Set2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="677f3ea43abf2d6482799ef655a19de0c06e1e50" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#domain&quot;&gt;domain&lt;/a&gt;&lt;/code&gt; of the binary relation &lt;code&gt;BinRel&lt;/code&gt;.</source>
          <target state="translated">返回二进制关系 &lt;code&gt;BinRel&lt;/code&gt; 的 &lt;code&gt;&lt;a href=&quot;#domain&quot;&gt;domain&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="84d607afcb81a88772424a4010e7f2b35107612c" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#extension&quot;&gt;extension&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;BinRel1&lt;/code&gt; such that for each element E in &lt;code&gt;Set&lt;/code&gt; that does not belong to the &lt;code&gt;&lt;a href=&quot;#domain&quot;&gt;domain&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;BinRel1&lt;/code&gt;, &lt;code&gt;BinRel2&lt;/code&gt; contains the pair (E, &lt;code&gt;AnySet&lt;/code&gt;).</source>
          <target state="translated">返回 &lt;code&gt;BinRel1&lt;/code&gt; 的 &lt;code&gt;&lt;a href=&quot;#extension&quot;&gt;extension&lt;/a&gt;&lt;/code&gt; ，以便对于 &lt;code&gt;Set&lt;/code&gt; 中不属于 &lt;code&gt;BinRel1&lt;/code&gt; 的 &lt;code&gt;&lt;a href=&quot;#domain&quot;&gt;domain&lt;/a&gt;&lt;/code&gt; 的每个元素E ， &lt;code&gt;BinRel2&lt;/code&gt; 包含对（E， &lt;code&gt;AnySet&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="32104972d486cc1c20806fbad1a4085270295051" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#external_set&quot;&gt;external set&lt;/a&gt;&lt;/code&gt; of an atomic, ordered, or unordered set.</source>
          <target state="translated">返回原子集，有序集或无序集的 &lt;code&gt;&lt;a href=&quot;#external_set&quot;&gt;external set&lt;/a&gt;&lt;/code&gt; 集。</target>
        </trans-unit>
        <trans-unit id="b858f2265fa5602606b78bcd4666e9cdffdeeec1" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#field&quot;&gt;field&lt;/a&gt;&lt;/code&gt; of the binary relation &lt;code&gt;BinRel&lt;/code&gt;.</source>
          <target state="translated">返回二进制关系 &lt;code&gt;BinRel&lt;/code&gt; 的 &lt;code&gt;&lt;a href=&quot;#field&quot;&gt;field&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="87dd833acacf73c63d010c62d8b953739dffbe91" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#image&quot;&gt;image&lt;/a&gt;&lt;/code&gt; of set &lt;code&gt;Set1&lt;/code&gt; under the binary relation &lt;code&gt;BinRel&lt;/code&gt;.</source>
          <target state="translated">返回的 &lt;code&gt;&lt;a href=&quot;#image&quot;&gt;image&lt;/a&gt;&lt;/code&gt; 集 &lt;code&gt;Set1&lt;/code&gt; 的二元关系下 &lt;code&gt;BinRel&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="051d4e152d74f5d8ec5ed39ecb2040038c544630" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#in_degree&quot;&gt;in-degree&lt;/a&gt;&lt;/code&gt; of vertex &lt;code&gt;V&lt;/code&gt; of digraph &lt;code&gt;G&lt;/code&gt;.</source>
          <target state="translated">返回图 &lt;code&gt;G&lt;/code&gt; 的顶点 &lt;code&gt;V&lt;/code&gt; 的 &lt;code&gt;&lt;a href=&quot;#in_degree&quot;&gt;in-degree&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6a561681ac701c8a4d56dc954055ad10a0f0de57" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#intersection&quot;&gt;intersection&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;Set1&lt;/code&gt; and &lt;code&gt;Set2&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;&lt;a href=&quot;#intersection&quot;&gt;intersection&lt;/a&gt;&lt;/code&gt; 的 &lt;code&gt;Set1&lt;/code&gt; 和 &lt;code&gt;Set2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="40430941541972db68e1a0d5bc81df12d854171b" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#intersection_n&quot;&gt;intersection&lt;/a&gt;&lt;/code&gt; of the set of sets &lt;code&gt;SetOfSets&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;&lt;a href=&quot;#intersection_n&quot;&gt;intersection&lt;/a&gt;&lt;/code&gt; 的一套套的 &lt;code&gt;SetOfSets&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bf0c3968de0fe24bcaf61da6f9fadc50fdbad634" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#inverse&quot;&gt;inverse&lt;/a&gt;&lt;/code&gt; of function &lt;code&gt;Function1&lt;/code&gt;.</source>
          <target state="translated">返回函数 &lt;code&gt;Function1&lt;/code&gt; 的 &lt;code&gt;&lt;a href=&quot;#inverse&quot;&gt;inverse&lt;/a&gt;&lt;/code&gt; 函数。</target>
        </trans-unit>
        <trans-unit id="dc452f77109d5afbd0cee8fcb42d810d37c9c47a" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#inverse_image&quot;&gt;inverse image&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;Set1&lt;/code&gt; under the binary relation &lt;code&gt;BinRel&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;&lt;a href=&quot;#inverse_image&quot;&gt;inverse image&lt;/a&gt;&lt;/code&gt; 的 &lt;code&gt;Set1&lt;/code&gt; 的二元关系下 &lt;code&gt;BinRel&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="68a13340b1cd8618d555f1d038704d5b261e8a9a" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#library_path&quot;&gt;library path&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;&lt;a href=&quot;#library_path&quot;&gt;library path&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="368dcc33d5a6ba18e50dc9df5b51dea4e9b4cfbf" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#natural_join&quot;&gt;natural join&lt;/a&gt;&lt;/code&gt; of the relations &lt;code&gt;Relation1&lt;/code&gt; and &lt;code&gt;Relation2&lt;/code&gt; on coordinates &lt;code&gt;I&lt;/code&gt; and &lt;code&gt;J&lt;/code&gt;.</source>
          <target state="translated">返回坐标 &lt;code&gt;I&lt;/code&gt; 和 &lt;code&gt;J&lt;/code&gt; 上关系 &lt;code&gt;Relation1&lt;/code&gt; 和 &lt;code&gt;Relation2&lt;/code&gt; 的 &lt;code&gt;&lt;a href=&quot;#natural_join&quot;&gt;natural join&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fe7819f155414ebf129bdea3d9f509f80b72e9c9" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#out_degree&quot;&gt;out-degree&lt;/a&gt;&lt;/code&gt; of vertex &lt;code&gt;V&lt;/code&gt; of digraph &lt;code&gt;G&lt;/code&gt;.</source>
          <target state="translated">返回图 &lt;code&gt;G&lt;/code&gt; 的顶点 &lt;code&gt;V&lt;/code&gt; 的 &lt;code&gt;&lt;a href=&quot;#out_degree&quot;&gt;out-degree&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a6ca1b44295c5c2832cef9f44390c9d11cb3528c" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#partition&quot;&gt;partition&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;Set&lt;/code&gt; such that two elements are considered equal if the results of applying &lt;code&gt;SetFun&lt;/code&gt; are equal.</source>
          <target state="translated">返回 &lt;code&gt;Set&lt;/code&gt; 的 &lt;code&gt;&lt;a href=&quot;#partition&quot;&gt;partition&lt;/a&gt;&lt;/code&gt; ，如果应用 &lt;code&gt;SetFun&lt;/code&gt; 的结果相等，则认为两个元素相等。</target>
        </trans-unit>
        <trans-unit id="89307605ace8536ca4e601f9c65b035dae9b7ea3" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#partition&quot;&gt;partition&lt;/a&gt;&lt;/code&gt; of the union of the set of sets &lt;code&gt;SetOfSets&lt;/code&gt; such that two elements are considered equal if they belong to the same elements of &lt;code&gt;SetOfSets&lt;/code&gt;.</source>
          <target state="translated">返回集合 &lt;code&gt;SetOfSets&lt;/code&gt; 的并集的 &lt;code&gt;&lt;a href=&quot;#partition&quot;&gt;partition&lt;/a&gt;&lt;/code&gt; ，这样，如果两个元素属于 &lt;code&gt;SetOfSets&lt;/code&gt; 的相同元素，则认为它们相等。</target>
        </trans-unit>
        <trans-unit id="5087c356d885226125e2154f7079502de4aed969" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#range&quot;&gt;range&lt;/a&gt;&lt;/code&gt; of the binary relation &lt;code&gt;BinRel&lt;/code&gt;.</source>
          <target state="translated">返回二进制关系 &lt;code&gt;BinRel&lt;/code&gt; 的 &lt;code&gt;&lt;a href=&quot;#range&quot;&gt;range&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2810ab21093fbfa3cab83056a55e0bd159fef721" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#relative_product&quot;&gt;relative product&lt;/a&gt;&lt;/code&gt; of the &lt;code&gt;&lt;a href=&quot;#converse&quot;&gt;converse&lt;/a&gt;&lt;/code&gt; of the binary relation &lt;code&gt;BinRel1&lt;/code&gt; and the binary relation &lt;code&gt;BinRel2&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;&lt;a href=&quot;#relative_product&quot;&gt;relative product&lt;/a&gt;&lt;/code&gt; 的的 &lt;code&gt;&lt;a href=&quot;#converse&quot;&gt;converse&lt;/a&gt;&lt;/code&gt; 的二元关系 &lt;code&gt;BinRel1&lt;/code&gt; 和二元关系 &lt;code&gt;BinRel2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b4b761e50ce46d06235f90640a8ca5c0c10b05a0" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#relative_product&quot;&gt;relative product&lt;/a&gt;&lt;/code&gt; of the binary relations &lt;code&gt;BinRel1&lt;/code&gt; and &lt;code&gt;BinRel2&lt;/code&gt;.</source>
          <target state="translated">返回二进制关系 &lt;code&gt;BinRel1&lt;/code&gt; 和 &lt;code&gt;BinRel2&lt;/code&gt; 的 &lt;code&gt;&lt;a href=&quot;#relative_product&quot;&gt;relative product&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ae9bfbd7a06dfe8fa66ada26e99a7cee6e066cb5" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#restriction&quot;&gt;restriction&lt;/a&gt;&lt;/code&gt; of the binary relation &lt;code&gt;BinRel1&lt;/code&gt; to &lt;code&gt;Set&lt;/code&gt;.</source>
          <target state="translated">返回二进制关系 &lt;code&gt;BinRel1&lt;/code&gt; 对 &lt;code&gt;Set&lt;/code&gt; 的 &lt;code&gt;&lt;a href=&quot;#restriction&quot;&gt;restriction&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0b4ee65a70c56b7f786b172d44cc00ec0aa39e29" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#sets_definition&quot;&gt;ordered set&lt;/a&gt;&lt;/code&gt; containing the sets of the non-empty tuple &lt;code&gt;TupleOfSets&lt;/code&gt;.</source>
          <target state="translated">返回包含非空元组 &lt;code&gt;TupleOfSets&lt;/code&gt; 的集合的 &lt;code&gt;&lt;a href=&quot;#sets_definition&quot;&gt;ordered set&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4c28f607c9ef0ab38425da1edf46fef2af7b052c" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#sets_definition&quot;&gt;unordered set&lt;/a&gt;&lt;/code&gt; containing the sets of list &lt;code&gt;ListOfSets&lt;/code&gt;.</source>
          <target state="translated">返回包含列表 &lt;code&gt;ListOfSets&lt;/code&gt; 的集合的 &lt;code&gt;&lt;a href=&quot;#sets_definition&quot;&gt;unordered set&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="57dd0b9f33ba6c7e8139d342916c14bbfb06fcca" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#sets_definition&quot;&gt;untyped empty set&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;empty_set()&lt;/code&gt; is equivalent to &lt;code&gt;from_term([],&amp;nbsp;['_'])&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;&lt;a href=&quot;#sets_definition&quot;&gt;untyped empty set&lt;/a&gt;&lt;/code&gt; 。 &lt;code&gt;empty_set()&lt;/code&gt; 等效于 &lt;code&gt;from_term([],&amp;nbsp;['_'])&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d6704646f451bc5c6e8686c529fb8f0f6264344b" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#strict_relation&quot;&gt;strict relation&lt;/a&gt;&lt;/code&gt; corresponding to the binary relation &lt;code&gt;BinRel1&lt;/code&gt;.</source>
          <target state="translated">返回对应于二进制关系 &lt;code&gt;BinRel1&lt;/code&gt; 的 &lt;code&gt;&lt;a href=&quot;#strict_relation&quot;&gt;strict relation&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4617dd5e79be4e1536db790a08855eed6ff53f11" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#symmetric_difference&quot;&gt;symmetric difference&lt;/a&gt;&lt;/code&gt; (or the Boolean sum) of &lt;code&gt;Set1&lt;/code&gt; and &lt;code&gt;Set2&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;Set1&lt;/code&gt; 和 &lt;code&gt;Set2&lt;/code&gt; 的 &lt;code&gt;&lt;a href=&quot;#symmetric_difference&quot;&gt;symmetric difference&lt;/a&gt;&lt;/code&gt; （或布尔和）。</target>
        </trans-unit>
        <trans-unit id="c18b47adc05793ac87d87b7d15c2e03d5a254292" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#type&quot;&gt;type&lt;/a&gt;&lt;/code&gt; of an atomic, ordered, or unordered set.</source>
          <target state="translated">返回 &lt;code&gt;&lt;a href=&quot;#type&quot;&gt;type&lt;/a&gt;&lt;/code&gt; 的原子，有序或无序组。</target>
        </trans-unit>
        <trans-unit id="6bfac114aed449319c8e31bceeda119c76c28ba5" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#union&quot;&gt;union&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;Set1&lt;/code&gt; and &lt;code&gt;Set2&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;&lt;a href=&quot;#union&quot;&gt;union&lt;/a&gt;&lt;/code&gt; 的 &lt;code&gt;Set1&lt;/code&gt; 和 &lt;code&gt;Set2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e53ca3c10a8a8a21196072419118b8fae5c9d932" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#union_n&quot;&gt;union&lt;/a&gt;&lt;/code&gt; of the set of sets &lt;code&gt;SetOfSets&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;&lt;a href=&quot;#union_n&quot;&gt;union&lt;/a&gt;&lt;/code&gt; 的一套套的 &lt;code&gt;SetOfSets&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="91838b437ece561b0ec42a6597726299aecadac1" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;CpuTopology&lt;/code&gt; currently used by the emulator. The CPU topology is used when binding schedulers to logical processors. The CPU topology used is the &lt;code&gt;&lt;a href=&quot;erlang#system_info_cpu_topology_defined&quot;&gt;user-defined CPU topology&lt;/a&gt;&lt;/code&gt;, if such exists, otherwise the &lt;code&gt;&lt;a href=&quot;erlang#system_info_cpu_topology_detected&quot;&gt;automatically detected CPU topology&lt;/a&gt;&lt;/code&gt;, if such exists. If no CPU topology exists, &lt;code&gt;undefined&lt;/code&gt; is returned.</source>
          <target state="translated">返回仿真器当前使用的 &lt;code&gt;CpuTopology&lt;/code&gt; 。将调度程序绑定到逻辑处理器时，将使用CPU拓扑。使用的CPU拓扑是 &lt;code&gt;&lt;a href=&quot;erlang#system_info_cpu_topology_defined&quot;&gt;user-defined CPU topology&lt;/a&gt;&lt;/code&gt; （如果存在），否则是 &lt;code&gt;&lt;a href=&quot;erlang#system_info_cpu_topology_detected&quot;&gt;automatically detected CPU topology&lt;/a&gt;&lt;/code&gt; （如果存在）。如果不存在CPU拓扑，则返回 &lt;code&gt;undefined&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dab8241606216d9529af71335ee70c5d8c7051ee" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;N&lt;/code&gt;th element (numbering from 1) of &lt;code&gt;Tuple&lt;/code&gt;, for example:</source>
          <target state="translated">返回 &lt;code&gt;Tuple&lt;/code&gt; 的第 &lt;code&gt;N&lt;/code&gt; 个元素（从1开始编号），例如：</target>
        </trans-unit>
        <trans-unit id="cdf3718787b6defba034666ecc29b3bde4de5b3c" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;N&lt;/code&gt;th element of &lt;code&gt;List&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;List&lt;/code&gt; 的第 &lt;code&gt;N&lt;/code&gt; 个元素。</target>
        </trans-unit>
        <trans-unit id="3f7d61cb0d1a71d668ba42d67232c201d3aaa8f6" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;N&lt;/code&gt;th tail of &lt;code&gt;List&lt;/code&gt;, that is, the sublist of &lt;code&gt;List&lt;/code&gt; starting at &lt;code&gt;N+1&lt;/code&gt; and continuing up to the end of the list.</source>
          <target state="translated">返回 &lt;code&gt;List&lt;/code&gt; 的第 &lt;code&gt;N&lt;/code&gt; 个尾部，即List的子 &lt;code&gt;List&lt;/code&gt; 从 &lt;code&gt;N+1&lt;/code&gt; 开始，一直持续到列表的末尾。</target>
        </trans-unit>
        <trans-unit id="b700db350e6d3dd2cf5c5e698d6f0dfec55b3da7" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;Osfamily&lt;/code&gt; and, in some cases, the &lt;code&gt;Osname&lt;/code&gt; of the current OS.</source>
          <target state="translated">返回 &lt;code&gt;Osfamily&lt;/code&gt; ，在某些情况下，返回当前操作系统的 &lt;code&gt;Osname&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="22a5e0b1d79cbf87e90c83b569e72dfa52deba87" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;Type&lt;/code&gt; of operator that &lt;code&gt;OpName/Arity&lt;/code&gt; belongs to, or generates a &lt;code&gt;function_clause&lt;/code&gt; error if it is not an operator.</source>
          <target state="translated">返回 &lt;code&gt;OpName/Arity&lt;/code&gt; 所属的运算符的 &lt;code&gt;Type&lt;/code&gt; ，如果不是运算符，则生成 &lt;code&gt;function_clause&lt;/code&gt; 错误。</target>
        </trans-unit>
        <trans-unit id="9f114a3e7a0c6775b1972d44d38072d22561267f" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;Value&lt;/code&gt; of the environment variable &lt;code&gt;VarName&lt;/code&gt;, or &lt;code&gt;DefaultValue&lt;/code&gt; if the environment variable is undefined.</source>
          <target state="translated">返回 &lt;code&gt;Value&lt;/code&gt; 的环境变量 &lt;code&gt;VarName&lt;/code&gt; ，或 &lt;code&gt;DefaultValue&lt;/code&gt; 如果环境变量是不明确的。</target>
        </trans-unit>
        <trans-unit id="66576c02a9bfe704fa0ff919f9fe091b12ec3d54" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;Value&lt;/code&gt; of the environment variable &lt;code&gt;VarName&lt;/code&gt;, or &lt;code&gt;false&lt;/code&gt; if the environment variable is undefined.</source>
          <target state="translated">返回环境变量 &lt;code&gt;VarName&lt;/code&gt; 的 &lt;code&gt;Value&lt;/code&gt; ，如果环境变量未定义，则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c7585fb0bfa91748aa85428e75ff582877c40484" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;et&lt;/code&gt; handler, which can be used with &lt;code&gt;format/2&lt;/code&gt; or &lt;code&gt;tracer/2&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;et&lt;/code&gt; 处理程序，可与 &lt;code&gt;format/2&lt;/code&gt; 或 &lt;code&gt;tracer/2&lt;/code&gt; 一起使用。</target>
        </trans-unit>
        <trans-unit id="8eddf39c08022d4015ebc25735765019cb49319b" translate="yes" xml:space="preserve">
          <source>Returns the CPU time in the same format as &lt;code&gt;&lt;a href=&quot;erlang#timestamp-0&quot;&gt;erlang:timestamp()&lt;/a&gt;&lt;/code&gt;. The CPU time is the time the current logical CPU has spent executing since some arbitrary point in the past. If the OS does not support fetching this value, &lt;code&gt;enif_cpu_time&lt;/code&gt; invokes &lt;code&gt;&lt;a href=&quot;#enif_make_badarg&quot;&gt;enif_make_badarg&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">以与 &lt;code&gt;&lt;a href=&quot;erlang#timestamp-0&quot;&gt;erlang:timestamp()&lt;/a&gt;&lt;/code&gt; 相同的格式返回CPU时间。CPU时间是当前逻辑CPU从过去的某个任意点开始执行所花费的时间。如果操作系统不支持获取此值，则 &lt;code&gt;enif_cpu_time&lt;/code&gt; 调用 &lt;code&gt;&lt;a href=&quot;#enif_make_badarg&quot;&gt;enif_make_badarg&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="51d8383e4c6f3976cb80fe1ea98ebbf2e3ec74c0" translate="yes" xml:space="preserve">
          <source>Returns the Erlang object corresponding to the value of &lt;code&gt;name&lt;/code&gt; in &lt;code&gt;term&lt;/code&gt;. If no variable with the name &lt;code&gt;name&lt;/code&gt; is found in &lt;code&gt;term&lt;/code&gt;, or if &lt;code&gt;term&lt;/code&gt; is not a valid Erlang term, &lt;code&gt;NULL&lt;/code&gt; is returned.</source>
          <target state="translated">返回对应的值二郎神对象 &lt;code&gt;name&lt;/code&gt; 在 &lt;code&gt;term&lt;/code&gt; 。如果在 &lt;code&gt;term&lt;/code&gt; 中找不到 &lt;code&gt;name&lt;/code&gt; 为name的变量，或者 &lt;code&gt;term&lt;/code&gt; 不是有效的Erlang术语，则返回 &lt;code&gt;NULL&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="805a1aa5dab7d22768d74c10f85e66531c307cca" translate="yes" xml:space="preserve">
          <source>Returns the Erlang term represented by a syntax tree. Evaluation fails with reason &lt;code&gt;badarg&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; does not represent a literal term.</source>
          <target state="translated">返回由语法树表示的Erlang术语。如果 &lt;code&gt;Node&lt;/code&gt; 不代表文字，则评估失败，原因为 &lt;code&gt;badarg&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9db79599de14ada84de9497958e5c2a4d0bc2605" translate="yes" xml:space="preserve">
          <source>Returns the ErrorInfo structure of a &lt;code&gt;warning_marker&lt;/code&gt; node.</source>
          <target state="translated">返回 &lt;code&gt;warning_marker&lt;/code&gt; 节点的ErrorInfo结构。</target>
        </trans-unit>
        <trans-unit id="265c66ce0ed7670b2bbace8ea093eb9b359d74e8" translate="yes" xml:space="preserve">
          <source>Returns the ErrorInfo structure of an &lt;code&gt;error_marker&lt;/code&gt; node.</source>
          <target state="translated">返回 &lt;code&gt;error_marker&lt;/code&gt; 节点的ErrorInfo结构。</target>
        </trans-unit>
        <trans-unit id="fbe576bae9bd07a2ef249b71e5ee954a9d5edc72" translate="yes" xml:space="preserve">
          <source>Returns the IP address for &lt;code&gt;Host&lt;/code&gt; as a tuple of integers. &lt;code&gt;Host&lt;/code&gt; can be an IP address, a single hostname, or a fully qualified hostname.</source>
          <target state="translated">以整数元组返回 &lt;code&gt;Host&lt;/code&gt; 的IP地址。 &lt;code&gt;Host&lt;/code&gt; 可以是IP地址，单个主机名或标准主机名。</target>
        </trans-unit>
        <trans-unit id="8ae9cfad0e8e863f8c66a9dcb1247f56cbc89ebe" translate="yes" xml:space="preserve">
          <source>Returns the OS version. On most systems, this function returns a tuple, but a string is returned instead if the system has versions that cannot be expressed as three numbers.</source>
          <target state="translated">返回操作系统的版本。在大多数系统中,这个函数返回一个元组,但如果系统的版本不能用三个数字表示,则返回一个字符串。</target>
        </trans-unit>
        <trans-unit id="181b9edd95af5ec5601442b00a2522062f3d54de" translate="yes" xml:space="preserve">
          <source>Returns the Universal Coordinated Time (UTC) reported by the underlying operating system. Returns local time if universal time is unavailable.</source>
          <target state="translated">返回底层操作系统报告的世界协调时间(UTC)。如果通用时间不可用,则返回当地时间。</target>
        </trans-unit>
        <trans-unit id="48e170cc105f4161fb09b99b3975617f31981f33" translate="yes" xml:space="preserve">
          <source>Returns the address and port for the other end of a connection.</source>
          <target state="translated">返回连接另一端的地址和端口。</target>
        </trans-unit>
        <trans-unit id="cd655a00e2e593fe55937c13fc5aac27b2324ade" translate="yes" xml:space="preserve">
          <source>Returns the address and port number of the peer.</source>
          <target state="translated">返回对等体的地址和端口号。</target>
        </trans-unit>
        <trans-unit id="f68341465e5965717e97dbbbde61c3182dee4bfd" translate="yes" xml:space="preserve">
          <source>Returns the amount of padding before the comment, or &lt;code&gt;none&lt;/code&gt;. The latter means that a default padding may be used.</source>
          <target state="translated">返回注释前的填充量，或 &lt;code&gt;none&lt;/code&gt; 。后者意味着可以使用默认填充。</target>
        </trans-unit>
        <trans-unit id="2379dd0c459b280d4c7c6c4ea7588ffed992abfb" translate="yes" xml:space="preserve">
          <source>Returns the amount of time in seconds garbage collection of an entry in a node table is delayed. This limit can be set on startup by passing command-line flag &lt;code&gt;+zdntgc&lt;/code&gt; to &lt;code&gt;erl(1)&lt;/code&gt;. For more information, see the documentation of the command-line flag.</source>
          <target state="translated">返回节点表中条目的垃圾回收延迟的时间（以秒为单位）。可以在启动时通过将命令行标志 &lt;code&gt;+zdntgc&lt;/code&gt; 传递给 &lt;code&gt;erl(1)&lt;/code&gt; 来设置此限制。有关更多信息，请参见命令行标志的文档。</target>
        </trans-unit>
        <trans-unit id="701cc174b9fd947122cbcd2cce3b1ff525b138aa" translate="yes" xml:space="preserve">
          <source>Returns the application specification keys and their values for &lt;code&gt;Application&lt;/code&gt;. If the argument is omitted, it defaults to the application of the calling process.</source>
          <target state="translated">返回 &lt;code&gt;Application&lt;/code&gt; 的应用程序规范键及其值。如果省略该参数，则默认为调用进程的应用程序。</target>
        </trans-unit>
        <trans-unit id="b02c22f9effcf6b6380b9e5962e6ec00eba9a289" translate="yes" xml:space="preserve">
          <source>Returns the argument (the arity) subtree of an &lt;code&gt;arity_qualifier&lt;/code&gt; node.</source>
          <target state="translated">返回 &lt;code&gt;arity_qualifier&lt;/code&gt; 节点的参数（arity）子树。</target>
        </trans-unit>
        <trans-unit id="d0b0bb85b9cb3c72e3a41f18b22c69da6dcbdbc9" translate="yes" xml:space="preserve">
          <source>Returns the argument (the class) subtree of a &lt;code&gt;class_qualifier&lt;/code&gt; node.</source>
          <target state="translated">返回 &lt;code&gt;class_qualifier&lt;/code&gt; 节点的参数（类）子树。</target>
        </trans-unit>
        <trans-unit id="d90cc244925629a076f65a0fb5caae61eaa4d706" translate="yes" xml:space="preserve">
          <source>Returns the argument (the module) subtree of a &lt;code&gt;module_qualifier&lt;/code&gt; node.</source>
          <target state="translated">返回 &lt;code&gt;module_qualifier&lt;/code&gt; 节点的参数（模块）子树。</target>
        </trans-unit>
        <trans-unit id="c8dd020fe10ad85c0997e84cc437917667a7a41d" translate="yes" xml:space="preserve">
          <source>Returns the argument subtree (the size) of a &lt;code&gt;size_qualifier&lt;/code&gt; node.</source>
          <target state="translated">返回 &lt;code&gt;size_qualifier&lt;/code&gt; 节点的参数子树（大小）。</target>
        </trans-unit>
        <trans-unit id="8198ab4dd0d22e3dff53d2ca91e06298c2b81166" translate="yes" xml:space="preserve">
          <source>Returns the argument subtree of a &lt;code&gt;case_expr&lt;/code&gt; node.</source>
          <target state="translated">返回 &lt;code&gt;case_expr&lt;/code&gt; 节点的参数子树。</target>
        </trans-unit>
        <trans-unit id="5ff0fe1f35a466048009ddb772cbaf179afa62f1" translate="yes" xml:space="preserve">
          <source>Returns the argument subtree of a &lt;code&gt;map_expr&lt;/code&gt; node, if any. If &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;#{...}&lt;/code&gt;&quot;, &lt;code&gt;none&lt;/code&gt; is returned. Otherwise, if &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;Argument#{...}&lt;/code&gt;&quot;, &lt;code&gt;Argument&lt;/code&gt; is returned.</source>
          <target state="translated">返回 &lt;code&gt;map_expr&lt;/code&gt; 节点的参数子树（如果有）。如果 &lt;code&gt;Node&lt;/code&gt; 表示&amp;ldquo; &lt;code&gt;#{...}&lt;/code&gt; &amp;rdquo;， &lt;code&gt;none&lt;/code&gt; 返回任何值。否则，如果 &lt;code&gt;Node&lt;/code&gt; 表示&amp;ldquo; &lt;code&gt;Argument#{...}&lt;/code&gt; &amp;rdquo;，则返回 &lt;code&gt;Argument&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9d80f0f6da97655437937e97d0e0f33b08a5901c" translate="yes" xml:space="preserve">
          <source>Returns the argument subtree of a &lt;code&gt;prefix_expr&lt;/code&gt; node.</source>
          <target state="translated">返回 &lt;code&gt;prefix_expr&lt;/code&gt; 节点的参数子树。</target>
        </trans-unit>
        <trans-unit id="0abb995005c490373685fbd7865ccc829287daa8" translate="yes" xml:space="preserve">
          <source>Returns the argument subtree of a &lt;code&gt;record_access&lt;/code&gt; node.</source>
          <target state="translated">返回 &lt;code&gt;record_access&lt;/code&gt; 节点的参数子树。</target>
        </trans-unit>
        <trans-unit id="1e2719e6c9b06e1a2de4d14a0a66e2216ebe7af3" translate="yes" xml:space="preserve">
          <source>Returns the argument subtree of a &lt;code&gt;record_expr&lt;/code&gt; node, if any. If &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;#Type{...}&lt;/code&gt;&quot;, &lt;code&gt;none&lt;/code&gt; is returned. Otherwise, if &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;Argument#Type{...}&lt;/code&gt;&quot;, &lt;code&gt;Argument&lt;/code&gt; is returned.</source>
          <target state="translated">返回 &lt;code&gt;record_expr&lt;/code&gt; 节点的参数子树（如果有）。如果 &lt;code&gt;Node&lt;/code&gt; 表示&amp;ldquo; &lt;code&gt;#Type{...}&lt;/code&gt; &amp;rdquo;，则不返回 &lt;code&gt;none&lt;/code&gt; 值。否则，如果 &lt;code&gt;Node&lt;/code&gt; 表示&amp;ldquo; &lt;code&gt;Argument#Type{...}&lt;/code&gt; &amp;rdquo;，则返回 &lt;code&gt;Argument&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d1d9b088904c097ac8124857fc6224d8ee996d74" translate="yes" xml:space="preserve">
          <source>Returns the argument types subtrees of a &lt;code&gt;function_type&lt;/code&gt; node. If &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;fun((...) -&amp;gt; Return)&lt;/code&gt;&quot;, &lt;code&gt;any_arity&lt;/code&gt; is returned; otherwise, if &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;(T1, ...Tn) -&amp;gt; Return&lt;/code&gt;&quot; or &quot;&lt;code&gt;fun((T1, ...Tn) -&amp;gt; Return)&lt;/code&gt;&quot;, &lt;code&gt;[T1, ..., Tn]&lt;/code&gt; is returned.</source>
          <target state="translated">返回 &lt;code&gt;function_type&lt;/code&gt; 节点的参数类型子树。如果 &lt;code&gt;Node&lt;/code&gt; 表示&amp;ldquo; &lt;code&gt;fun((...) -&amp;gt; Return)&lt;/code&gt; &amp;rdquo;，则返回 &lt;code&gt;any_arity&lt;/code&gt; ；否则返回false。否则，如果 &lt;code&gt;Node&lt;/code&gt; 表示&amp;ldquo; &lt;code&gt;(T1, ...Tn) -&amp;gt; Return&lt;/code&gt; &amp;rdquo;或&amp;ldquo; &lt;code&gt;fun((T1, ...Tn) -&amp;gt; Return)&lt;/code&gt; &amp;rdquo;，则返回 &lt;code&gt;[T1, ..., Tn]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9c18c16c27a458af59175ad22b7bd9bd59c7a091" translate="yes" xml:space="preserve">
          <source>Returns the arguments subtrees of a &lt;code&gt;type_application&lt;/code&gt; node.</source>
          <target state="translated">返回 &lt;code&gt;type_application&lt;/code&gt; 节点的参数子树。</target>
        </trans-unit>
        <trans-unit id="72f269a2d979e51b4999dceb0f352fbf973e1a82" translate="yes" xml:space="preserve">
          <source>Returns the arguments subtrees of a &lt;code&gt;user_type_application&lt;/code&gt; node.</source>
          <target state="translated">返回 &lt;code&gt;user_type_application&lt;/code&gt; 节点的参数子树。</target>
        </trans-unit>
        <trans-unit id="7eb582ee7ce33e41a7730f453b0676215b2e94a5" translate="yes" xml:space="preserve">
          <source>Returns the arity of a &lt;code&gt;fun_expr&lt;/code&gt; node. The result is the number of parameter patterns in the first clause of the fun-expression; subsequent clauses are ignored.</source>
          <target state="translated">返回 &lt;code&gt;fun_expr&lt;/code&gt; 节点的Arity。结果是fun-表达式的第一子句中的参数模式数量；后续子句将被忽略。</target>
        </trans-unit>
        <trans-unit id="2a8b8fb2df18f380f4f38b75c0f50791f2fbda24" translate="yes" xml:space="preserve">
          <source>Returns the arity of a &lt;code&gt;function&lt;/code&gt; node. The result is the number of parameter patterns in the first clause of the function; subsequent clauses are ignored.</source>
          <target state="translated">返回 &lt;code&gt;function&lt;/code&gt; 节点的arity 。结果是函数第一子句中参数模式的数量；后续子句将被忽略。</target>
        </trans-unit>
        <trans-unit id="c41bb9e006064a2c010fad97f836ec54460c1c0a" translate="yes" xml:space="preserve">
          <source>Returns the arity of a &lt;code&gt;named_fun_expr&lt;/code&gt; node. The result is the number of parameter patterns in the first clause of the named fun-expression; subsequent clauses are ignored.</source>
          <target state="translated">返回 &lt;code&gt;named_fun_expr&lt;/code&gt; 节点的Arity。结果是命名的fun-expression的第一子句中的参数模式数量；后续子句将被忽略。</target>
        </trans-unit>
        <trans-unit id="0fee583493c0b9e812aebbcb65816d5e5078f9b1" translate="yes" xml:space="preserve">
          <source>Returns the associated post-comments of a node. This is a possibly empty list of abstract comments, in top-down textual order. When the code is formatted, post-comments are typically displayed to the right of and/or below the node. For example:</source>
          <target state="translated">返回一个节点的相关后注释。这是一个可能是空的抽象注释列表,按自上而下的文本顺序排列。当代码被格式化时,后注释通常显示在节点的右侧和/或下方。例如:</target>
        </trans-unit>
        <trans-unit id="683fdac42b4a88e80c18ba7ab4b4a9d4d5c04916" translate="yes" xml:space="preserve">
          <source>Returns the associated pre-comments of a node. This is a possibly empty list of abstract comments, in top-down textual order. When the code is formatted, pre-comments are typically displayed directly above the node. For example:</source>
          <target state="translated">返回一个节点的相关预注释。这是一个可能是空的抽象注释列表,按自上而下的文本顺序排列。当代码被格式化时,预注释通常直接显示在节点上方。例如</target>
        </trans-unit>
        <trans-unit id="7afe94017d50f6c3e4542d893d4891267047b5da" translate="yes" xml:space="preserve">
          <source>Returns the atom name of the Erlang error, given the error number in &lt;code&gt;error&lt;/code&gt;. The error atoms are &lt;code&gt;einval&lt;/code&gt;, &lt;code&gt;enoent&lt;/code&gt;, and so on. It can be used to make error terms from the driver.</source>
          <target state="translated">返回给定的错误号二郎神错误的原子名称， &lt;code&gt;error&lt;/code&gt; 。错误原子是 &lt;code&gt;einval&lt;/code&gt; ， &lt;code&gt;enoent&lt;/code&gt; 等。它可以用来使驱动程序产生错误条件。</target>
        </trans-unit>
        <trans-unit id="45b5ca4f214d218d6e6e8c0e1e9abaa8a7babafb" translate="yes" xml:space="preserve">
          <source>Returns the atom whose text representation is &lt;code&gt;Binary&lt;/code&gt;. If &lt;code&gt;Encoding&lt;/code&gt; is &lt;code&gt;latin1&lt;/code&gt;, no translation of bytes in the binary is done. If &lt;code&gt;Encoding&lt;/code&gt; is &lt;code&gt;utf8&lt;/code&gt; or &lt;code&gt;unicode&lt;/code&gt;, the binary must contain valid UTF-8 sequences.</source>
          <target state="translated">返回其原子表示为 &lt;code&gt;Binary&lt;/code&gt; 的原子。如果 &lt;code&gt;Encoding&lt;/code&gt; 为 &lt;code&gt;latin1&lt;/code&gt; ，则不执行二进制文件中字节的转换。如果 &lt;code&gt;Encoding&lt;/code&gt; 是 &lt;code&gt;utf8&lt;/code&gt; 或 &lt;code&gt;unicode&lt;/code&gt; ，则二进制文件必须包含有效的UTF-8序列。</target>
        </trans-unit>
        <trans-unit id="122f0b4fd4ccc7dc5fd6c72e2ee3e4994d3439fe" translate="yes" xml:space="preserve">
          <source>Returns the atom whose text representation is &lt;code&gt;String&lt;/code&gt;, but only if there already exists such atom.</source>
          <target state="translated">返回其文本表示形式为 &lt;code&gt;String&lt;/code&gt; 的原子，但仅当该原子已经存在时才返回。</target>
        </trans-unit>
        <trans-unit id="44f1680f8e149640f004a08954c48f2d34519a45" translate="yes" xml:space="preserve">
          <source>Returns the atom whose text representation is &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">返回其原子表示为 &lt;code&gt;String&lt;/code&gt; 的原子。</target>
        </trans-unit>
        <trans-unit id="13c1c072703152513178d451868e8920094a28e5" translate="yes" xml:space="preserve">
          <source>Returns the automatically detected &lt;code&gt;CpuTopologyy&lt;/code&gt;. The emulator detects the CPU topology on some newer Linux, Solaris, FreeBSD, and Windows systems. On Windows system with more than 32 logical processors, the CPU topology is not detected.</source>
          <target state="translated">返回自动检测到的 &lt;code&gt;CpuTopologyy&lt;/code&gt; 。仿真器在某些较新的Linux，Solaris，FreeBSD和Windows系统上检测CPU拓扑。在具有32个以上逻辑处理器的Windows系统上，未检测到CPU拓扑。</target>
        </trans-unit>
        <trans-unit id="96e3a5c6ba0d4b6a2a5c0b7c4da30ec8aa054415" translate="yes" xml:space="preserve">
          <source>Returns the average system load in the last 15 minutes, as described above. 0 represents no load, 256 represents the load reported as 1.00 by &lt;code&gt;rup&lt;/code&gt;.</source>
          <target state="translated">如上所述，返回最近15分钟的平均系统负载。0表示无负载，256表示报告为1.00由负载 &lt;code&gt;rup&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="34bc91dbef178d80091af01ff6437e2e5d6e1dad" translate="yes" xml:space="preserve">
          <source>Returns the average system load in the last five minutes, as described above. 0 represents no load, 256 represents the load reported as 1.00 by &lt;code&gt;rup&lt;/code&gt;.</source>
          <target state="translated">如上所述，返回最近五分钟的平均系统负载。0表示无负载，256表示报告为1.00由负载 &lt;code&gt;rup&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ae0fefb3302bbd16183db84e84e61b8bcc8302e8" translate="yes" xml:space="preserve">
          <source>Returns the average system load in the last minute, as described above. 0 represents no load, 256 represents the load reported as 1.00 by &lt;code&gt;rup&lt;/code&gt;.</source>
          <target state="translated">如上所述，返回最后一分钟的平均系统负载。0表示无负载，256表示报告为1.00由负载 &lt;code&gt;rup&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c62b146f0ea6b2937c89cd31e61adbfbe55c52c6" translate="yes" xml:space="preserve">
          <source>Returns the binary relation containing the elements (E, Set) such that Set belongs to &lt;code&gt;SetOfSets&lt;/code&gt; and E belongs to Set. If &lt;code&gt;SetOfSets&lt;/code&gt; is a &lt;code&gt;&lt;a href=&quot;#partition&quot;&gt;partition&lt;/a&gt;&lt;/code&gt; of a set X and R is the equivalence relation in X induced by &lt;code&gt;SetOfSets&lt;/code&gt;, then the returned relation is the &lt;code&gt;&lt;a href=&quot;#canonical_map&quot;&gt;canonical map&lt;/a&gt;&lt;/code&gt; from X onto the equivalence classes with respect to R.</source>
          <target state="translated">返回包含元素（E，Set）的二进制关系，使得Set属于 &lt;code&gt;SetOfSets&lt;/code&gt; ，E属于Set。如果 &lt;code&gt;SetOfSets&lt;/code&gt; 是集合X的一个 &lt;code&gt;&lt;a href=&quot;#partition&quot;&gt;partition&lt;/a&gt;&lt;/code&gt; ，并且R是 &lt;code&gt;SetOfSets&lt;/code&gt; 在X中引起的等价关系，则返回的关系是X到R的等价类的 &lt;code&gt;&lt;a href=&quot;#canonical_map&quot;&gt;canonical map&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4b9f4fa6495150f4dac559c79c1b53664912ecca" translate="yes" xml:space="preserve">
          <source>Returns the binding of &lt;code&gt;Name&lt;/code&gt; in &lt;code&gt;BindingStruct&lt;/code&gt;.</source>
          <target state="translated">返回的绑定 &lt;code&gt;Name&lt;/code&gt; 中 &lt;code&gt;BindingStruct&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f618e504ad847fbbd7a00a8a41536e92c2995e6e" translate="yes" xml:space="preserve">
          <source>Returns the body subtree of a &lt;code&gt;binary_field&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;binary_field&lt;/code&gt; 的主体子树。</target>
        </trans-unit>
        <trans-unit id="af1f37946f37e3568c8ef91679e97c14c7e2464e" translate="yes" xml:space="preserve">
          <source>Returns the body subtree of a &lt;code&gt;catch_expr&lt;/code&gt; node.</source>
          <target state="translated">返回 &lt;code&gt;catch_expr&lt;/code&gt; 节点的主体子树。</target>
        </trans-unit>
        <trans-unit id="98e586311ff39235b2a2d68b424bb03e980aa8bd" translate="yes" xml:space="preserve">
          <source>Returns the body subtree of a &lt;code&gt;class_qualifier&lt;/code&gt; node.</source>
          <target state="translated">返回 &lt;code&gt;class_qualifier&lt;/code&gt; 节点的主体子树。</target>
        </trans-unit>
        <trans-unit id="2a3600c52226fd07ebbfc2010e2d2edbf0af076a" translate="yes" xml:space="preserve">
          <source>Returns the body subtree of a &lt;code&gt;generator&lt;/code&gt; node.</source>
          <target state="translated">返回 &lt;code&gt;generator&lt;/code&gt; 节点的主体子树。</target>
        </trans-unit>
        <trans-unit id="b5736be84b042590cad9734b948b9235728217c2" translate="yes" xml:space="preserve">
          <source>Returns the body subtree of a &lt;code&gt;match_expr&lt;/code&gt; node.</source>
          <target state="translated">返回 &lt;code&gt;match_expr&lt;/code&gt; 节点的主体子树。</target>
        </trans-unit>
        <trans-unit id="f1ef4325567f20cf2b1008d1affe78f02eb24483" translate="yes" xml:space="preserve">
          <source>Returns the body subtree of a &lt;code&gt;module_qualifier&lt;/code&gt; node.</source>
          <target state="translated">返回 &lt;code&gt;module_qualifier&lt;/code&gt; 节点的主体子树。</target>
        </trans-unit>
        <trans-unit id="82ef6f543d6328e386a601179345711ecea72f1f" translate="yes" xml:space="preserve">
          <source>Returns the body subtree of a &lt;code&gt;parentheses&lt;/code&gt; node.</source>
          <target state="translated">返回 &lt;code&gt;parentheses&lt;/code&gt; 节点的主体子树。</target>
        </trans-unit>
        <trans-unit id="40bfd6b9354c50dc5460300711c61fa6434b6e6b" translate="yes" xml:space="preserve">
          <source>Returns the body subtree of a &lt;code&gt;size_qualifier&lt;/code&gt; node.</source>
          <target state="translated">返回 &lt;code&gt;size_qualifier&lt;/code&gt; 节点的主体子树。</target>
        </trans-unit>
        <trans-unit id="eee234eae2d5e4cda0de37e9f374f8df9573070b" translate="yes" xml:space="preserve">
          <source>Returns the body subtree of an &lt;code&gt;arity_qualifier&lt;/code&gt; node.</source>
          <target state="translated">返回 &lt;code&gt;arity_qualifier&lt;/code&gt; 节点的主体子树。</target>
        </trans-unit>
        <trans-unit id="54333922a1b9f2fdd3c5f0d07ef37ce87e1e7318" translate="yes" xml:space="preserve">
          <source>Returns the byte at position &lt;code&gt;Pos&lt;/code&gt; (zero-based) in binary &lt;code&gt;Subject&lt;/code&gt; as an integer. If &lt;code&gt;Pos&lt;/code&gt; &amp;gt;= &lt;code&gt;byte_size(Subject)&lt;/code&gt;, a &lt;code&gt;badarg&lt;/code&gt; exception is raised.</source>
          <target state="translated">以二进制形式返回二进制 &lt;code&gt;Subject&lt;/code&gt; 中位置 &lt;code&gt;Pos&lt;/code&gt; （从零开始）处的字节。如果 &lt;code&gt;Pos&lt;/code&gt; &amp;gt; = &lt;code&gt;byte_size(Subject)&lt;/code&gt; ，则会引发 &lt;code&gt;badarg&lt;/code&gt; 异常。</target>
        </trans-unit>
        <trans-unit id="9e10739d63bd28a77ebe02ce1df0249e36756e95" translate="yes" xml:space="preserve">
          <source>Returns the call count value for this function or &lt;code&gt;true&lt;/code&gt; for the pseudo function &lt;code&gt;on_load&lt;/code&gt; if call count tracing is active. Otherwise &lt;code&gt;false&lt;/code&gt; is returned.</source>
          <target state="translated">返回此函数的调用计数值，如果调用计数跟踪处于活动状态，则返回伪函数 &lt;code&gt;on_load&lt;/code&gt; 的 &lt;code&gt;true&lt;/code&gt; 。否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c1a6461d609159d0eebd3e7835ad0c3e1892acac" translate="yes" xml:space="preserve">
          <source>Returns the call time values for this function or &lt;code&gt;true&lt;/code&gt; for the pseudo function &lt;code&gt;on_load&lt;/code&gt; if call time tracing is active. Otherwise &lt;code&gt;false&lt;/code&gt; is returned. The call time values returned, &lt;code&gt;[{Pid, Count, S, Us}]&lt;/code&gt;, is a list of each process that executed the function and its specific counters.</source>
          <target state="translated">返回此函数的调用时间值；如果调用时间跟踪处于活动状态，则返回伪函数 &lt;code&gt;on_load&lt;/code&gt; 的 &lt;code&gt;true&lt;/code&gt; 。否则返回 &lt;code&gt;false&lt;/code&gt; 。返回的呼叫时间值 &lt;code&gt;[{Pid, Count, S, Us}]&lt;/code&gt; 是执行该函数的每个进程及其特定计数器的列表。</target>
        </trans-unit>
        <trans-unit id="19f003446976eabe33a935b6550373619df6e5c7" translate="yes" xml:space="preserve">
          <source>Returns the calling function as a tuple &lt;code&gt;{Module, Function, Arity}&lt;/code&gt; or the atom &lt;code&gt;undefined&lt;/code&gt; if the calling function cannot be determined. Can only be used in the &lt;code&gt;MatchBody&lt;/code&gt; part when tracing.</source>
          <target state="translated">如果无法确定调用函数，则返回调用函数以元组 &lt;code&gt;{Module, Function, Arity}&lt;/code&gt; 或 &lt;code&gt;undefined&lt;/code&gt; 的原子的形式返回。跟踪时只能在 &lt;code&gt;MatchBody&lt;/code&gt; 零件中使用。</target>
        </trans-unit>
        <trans-unit id="46e267a27ac8442f544f0a2c3835b8dcea423740" translate="yes" xml:space="preserve">
          <source>Returns the category of &lt;code&gt;Token&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;Token&lt;/code&gt; 的类别。</target>
        </trans-unit>
        <trans-unit id="604f66a1103440ecb2eb4492664aefc897080ed5" translate="yes" xml:space="preserve">
          <source>Returns the character sequence represented by a &lt;code&gt;text&lt;/code&gt; node.</source>
          <target state="translated">返回由 &lt;code&gt;text&lt;/code&gt; 节点表示的字符序列。</target>
        </trans-unit>
        <trans-unit id="a96cfa892cb1fdb86fb77d2cf4769581f610589c" translate="yes" xml:space="preserve">
          <source>Returns the child specification map for the child identified by &lt;code&gt;Id&lt;/code&gt; under supervisor &lt;code&gt;SupRef&lt;/code&gt;. The returned map contains all keys, both mandatory and optional.</source>
          <target state="translated">返回由 &lt;code&gt;Id&lt;/code&gt; 在主管 &lt;code&gt;SupRef&lt;/code&gt; 下标识的子项的子项规范图。返回的映射包含所有键，包括必需键和可选键。</target>
        </trans-unit>
        <trans-unit id="9f3c8087df59c0c2485ac3b75db76bdcc90130de" translate="yes" xml:space="preserve">
          <source>Returns the code path.</source>
          <target state="translated">返回代码路径。</target>
        </trans-unit>
        <trans-unit id="a157676aa3f637ae8e98f5f55b1f9756d1948eb2" translate="yes" xml:space="preserve">
          <source>Returns the column of &lt;code&gt;Token&lt;/code&gt;'s collection of annotations.</source>
          <target state="translated">返回 &lt;code&gt;Token&lt;/code&gt; 的注释集合的列。</target>
        </trans-unit>
        <trans-unit id="0c6e40c25f1cd3004cb8fe3ac679ec834c21994d" translate="yes" xml:space="preserve">
          <source>Returns the column of the annotations Anno.</source>
          <target state="translated">Returns the column of the annotations Anno.</target>
        </trans-unit>
        <trans-unit id="ff2a63c39c785ad3e66b17711dba93c1299ae2c4" translate="yes" xml:space="preserve">
          <source>Returns the command used to start this Erlang instance. If this information could not be found, the string &lt;code&gt;&quot;no_prog_name&quot;&lt;/code&gt; is returned.</source>
          <target state="translated">返回用于启动此Erlang实例的命令。如果找不到此信息，则返回字符串 &lt;code&gt;&quot;no_prog_name&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="11df78c00081dac2a230bf7409d5559f21e28ad1" translate="yes" xml:space="preserve">
          <source>Returns the compatibility mode of the local node as an integer. The integer returned represents the Erlang/OTP release that the current emulator has been set to be backward compatible with. The compatibility mode can be configured at startup by using command-line flag &lt;code&gt;+R&lt;/code&gt; in &lt;code&gt;erl(1)&lt;/code&gt;.</source>
          <target state="translated">以整数形式返回本地节点的兼容模式。返回的整数表示当前模拟器已设置为向后兼容的Erlang / OTP版本。兼容模式可以在启动时通过使用命令行标记被配置成 &lt;code&gt;+R&lt;/code&gt; 在 &lt;code&gt;erl(1)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="319f75b70c46c602fd13253c7d3031c3983c82c1" translate="yes" xml:space="preserve">
          <source>Returns the compiler library directory. Equivalent to &lt;code&gt;code:lib_dir(compiler)&lt;/code&gt;.</source>
          <target state="translated">返回编译器库目录。等效于 &lt;code&gt;code:lib_dir(compiler)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8b6e176a6f35ea4563e4440ef3eab5546e4ae7ee" translate="yes" xml:space="preserve">
          <source>Returns the configuration parameters and their values for &lt;code&gt;Application&lt;/code&gt;. If the argument is omitted, it defaults to the application of the calling process.</source>
          <target state="translated">返回 &lt;code&gt;Application&lt;/code&gt; 的配置参数及其值。如果省略该参数，则默认为调用进程的应用程序。</target>
        </trans-unit>
        <trans-unit id="cad5d8239e2b47ab5ade33b4f4080c89475049b8" translate="yes" xml:space="preserve">
          <source>Returns the contents of the specified variable in an Erlang term.</source>
          <target state="translated">返回Erlang术语中指定变量的内容。</target>
        </trans-unit>
        <trans-unit id="cf99ac28ff31b26e2148d67a91215bfe540f6df4" translate="yes" xml:space="preserve">
          <source>Returns the cookie header that would have been sent when making a request to &lt;code&gt;Url&lt;/code&gt; using profile &lt;code&gt;Profile&lt;/code&gt;. If no profile is specified, the default profile is used.</source>
          <target state="translated">返回使用配置文件 &lt;code&gt;Profile&lt;/code&gt; 向 &lt;code&gt;Url&lt;/code&gt; 请求时发送的cookie头。如果未指定配置文件，则使用默认配置文件。</target>
        </trans-unit>
        <trans-unit id="608ad012f81e226a19e0c07f218a243a0aa81c53" translate="yes" xml:space="preserve">
          <source>Returns the creation of the local node as an integer. The creation is changed when a node is restarted. The creation of a node is stored in process identifiers, port identifiers, and references. This makes it (to some extent) possible to distinguish between identifiers from different incarnations of a node. The valid creations are integers in the range 1..3, but this will probably change in a future release. If the node is not alive, &lt;code&gt;0&lt;/code&gt; is returned.</source>
          <target state="translated">以整数形式返回本地节点的创建。重新启动节点后，将更改创建。节点的创建存储在进程标识符，端口标识符和引用中。这使得（在某种程度上）可以区分节点的不同化身的标识符。有效的创建内容是1..3范围内的整数，但是在将来的版本中可能会更改。如果该节点不活跃，则返回 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fdfae5e16d780ddc3ea92abf68d35634a70d13d0" translate="yes" xml:space="preserve">
          <source>Returns the current &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt;Erlang monotonic time&lt;/a&gt;&lt;/code&gt; converted into the &lt;code&gt;Unit&lt;/code&gt; passed as argument.</source>
          <target state="translated">返回当前 &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt;Erlang monotonic time&lt;/a&gt;&lt;/code&gt; 该时间已转换为作为参数传递的 &lt;code&gt;Unit&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="711859b62d08d55c53fb38b52ca9673bcee01f86" translate="yes" xml:space="preserve">
          <source>Returns the current &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt;Erlang monotonic time&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;native&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type_time_unit&quot;&gt;time unit&lt;/a&gt;&lt;/code&gt;. This is a monotonically increasing time since some unspecified point in time.</source>
          <target state="translated">以 &lt;code&gt;native&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#type_time_unit&quot;&gt;time unit&lt;/a&gt;&lt;/code&gt; 返回当前的 &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt;Erlang monotonic time&lt;/a&gt;&lt;/code&gt; 。从某个未指定的时间点开始，这是一个单调增加的时间。</target>
        </trans-unit>
        <trans-unit id="2a20c4abd06789f1e71e8b077b463cc27dcfa6cc" translate="yes" xml:space="preserve">
          <source>Returns the current &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt;Erlang monotonic time&lt;/a&gt;&lt;/code&gt;. Notice that it is not uncommon with negative values.</source>
          <target state="translated">返回当前的 &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt;Erlang monotonic time&lt;/a&gt;&lt;/code&gt; 。请注意，负值并不罕见。</target>
        </trans-unit>
        <trans-unit id="0b645e2753405e3d64b5df7c7790cbc8c131d990" translate="yes" xml:space="preserve">
          <source>Returns the current &lt;code&gt;OS system time&lt;/code&gt; converted into the &lt;code&gt;Unit&lt;/code&gt; passed as argument.</source>
          <target state="translated">返回转换为作为参数传递的 &lt;code&gt;Unit&lt;/code&gt; 的当前 &lt;code&gt;OS system time&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4d25da574e4b27d6fcf1c2570f032dc078861560" translate="yes" xml:space="preserve">
          <source>Returns the current &lt;code&gt;OS system time&lt;/code&gt; in &lt;code&gt;native&lt;/code&gt;&lt;code&gt;time unit&lt;/code&gt;.</source>
          <target state="translated">以 &lt;code&gt;native&lt;/code&gt; &lt;code&gt;time unit&lt;/code&gt; 返回当前 &lt;code&gt;OS system time&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1a75e4bbbf2f66935151b586b17801f7017b5d15" translate="yes" xml:space="preserve">
          <source>Returns the current &lt;code&gt;OS system time&lt;/code&gt; in the same format as &lt;code&gt;erlang:timestamp/0&lt;/code&gt;. The tuple can be used together with function &lt;code&gt;calendar:now_to_universal_time/1&lt;/code&gt; or &lt;code&gt;calendar:now_to_local_time/1&lt;/code&gt; to get calendar time. Using the calendar time, together with the &lt;code&gt;MicroSecs&lt;/code&gt; part of the return tuple from this function, allows you to log time stamps in high resolution and consistent with the time in the rest of the OS.</source>
          <target state="translated">以与 &lt;code&gt;erlang:timestamp/0&lt;/code&gt; 相同的格式返回当前 &lt;code&gt;OS system time&lt;/code&gt; 。该元组可以与功能 &lt;code&gt;calendar:now_to_universal_time/1&lt;/code&gt; 或 &lt;code&gt;calendar:now_to_local_time/1&lt;/code&gt; 一起使用以获取日历时间。使用日历时间以及此功能的返回元组的 &lt;code&gt;MicroSecs&lt;/code&gt; 部分，可以使您以高分辨率记录时间戳，并与其他操作系统中的时间保持一致。</target>
        </trans-unit>
        <trans-unit id="7006f00550b2e544d2b3fda9e41c63614deb9d5a" translate="yes" xml:space="preserve">
          <source>Returns the current call stack back-trace (&lt;strong&gt;stacktrace&lt;/strong&gt;) of the process. The stack has the same format as returned by &lt;code&gt;&lt;a href=&quot;#get_stacktrace-0&quot;&gt;erlang:get_stacktrace/0&lt;/a&gt;&lt;/code&gt;. The depth of the stacktrace is truncated according to the &lt;code&gt;backtrace_depth&lt;/code&gt; system flag setting.</source>
          <target state="translated">返回该进程的当前调用堆栈回溯（&lt;strong&gt;stacktrace&lt;/strong&gt;）。堆栈的格式与 &lt;code&gt;&lt;a href=&quot;#get_stacktrace-0&quot;&gt;erlang:get_stacktrace/0&lt;/a&gt;&lt;/code&gt; 返回的格式相同。堆栈 &lt;code&gt;backtrace_depth&lt;/code&gt; 的深度根据backtrace_depth系统标志设置被截断。</target>
        </trans-unit>
        <trans-unit id="9206c23baf7330abc4f2d2174b72db4b3f519889" translate="yes" xml:space="preserve">
          <source>Returns the current date and time according to Universal Time Coordinated (UTC) in the form &lt;code&gt;{{Year, Month, Day}, {Hour, Minute, Second}}&lt;/code&gt; if supported by the underlying OS. Otherwise &lt;code&gt;erlang:universaltime()&lt;/code&gt; is equivalent to &lt;code&gt;erlang:localtime()&lt;/code&gt;. Example:</source>
          <target state="translated">如果基础操作系统支持，则根据世界标准时间（UTC）以 &lt;code&gt;{{Year, Month, Day}, {Hour, Minute, Second}}&lt;/code&gt; 的形式返回当前日期和时间。否则， &lt;code&gt;erlang:universaltime()&lt;/code&gt; 等效于 &lt;code&gt;erlang:localtime()&lt;/code&gt; 。例：</target>
        </trans-unit>
        <trans-unit id="f96af23658442caff1c6ee92ae5f4eb5e2d8b598" translate="yes" xml:space="preserve">
          <source>Returns the current date as &lt;code&gt;{Year, Month, Day}&lt;/code&gt;.</source>
          <target state="translated">返回当前日期为 &lt;code&gt;{Year, Month, Day}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2cf5f4fbb8247b2209f4fabecfa72ccf18767bfb" translate="yes" xml:space="preserve">
          <source>Returns the current list of allowed slave hosts.</source>
          <target state="translated">返回当前允许的从属主机列表。</target>
        </trans-unit>
        <trans-unit id="b9e1afec157e2e1d2c1c4fda988f28412653138c" translate="yes" xml:space="preserve">
          <source>Returns the current local date and time, &lt;code&gt;{{Year, Month, Day}, {Hour, Minute, Second}}&lt;/code&gt;, for example:</source>
          <target state="translated">返回当前的本地日期和时间 &lt;code&gt;{{Year, Month, Day}, {Hour, Minute, Second}}&lt;/code&gt; ，例如：</target>
        </trans-unit>
        <trans-unit id="2e89bdc2b41269f4de0be6712411919f3ceca2f8" translate="yes" xml:space="preserve">
          <source>Returns the current mapping for warning events. Events sent using &lt;code&gt;warning_msg/1,2&lt;/code&gt; or &lt;code&gt;warning_report/1,2&lt;/code&gt; are tagged as errors, warnings (default), or info, depending on the value of command-line flag &lt;code&gt;+W&lt;/code&gt;.</source>
          <target state="translated">返回警告事件的当前映射。使用 &lt;code&gt;warning_msg/1,2&lt;/code&gt; 或 &lt;code&gt;warning_report/1,2&lt;/code&gt; 发送的事件被标记为错误，警告（默认）或信息，具体取决于命令行标志 &lt;code&gt;+W&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="03eaef2e18db17be19de254c9e4a5586bfaa0a58" translate="yes" xml:space="preserve">
          <source>Returns the current performance counter value in &lt;code&gt;perf_counter&lt;/code&gt;&lt;code&gt;time unit&lt;/code&gt;. This is a highly optimized call that might not be traceable.</source>
          <target state="translated">以 &lt;code&gt;perf_counter&lt;/code&gt; &lt;code&gt;time unit&lt;/code&gt; 返回当前性能计数器值。这是一个高度优化的调用，可能无法跟踪。</target>
        </trans-unit>
        <trans-unit id="2f185b6b26a103b2b6122c6550d07654dc93ff97" translate="yes" xml:space="preserve">
          <source>Returns the current reference count of the port data lock passed as argument (&lt;code&gt;pdl&lt;/code&gt;).</source>
          <target state="translated">返回作为参数（ &lt;code&gt;pdl&lt;/code&gt; ）传递的端口数据锁的当前引用计数。</target>
        </trans-unit>
        <trans-unit id="4030aa5cb3b3dfa9bc9bb9280a40746b196b00c9" translate="yes" xml:space="preserve">
          <source>Returns the current reference count on &lt;code&gt;bin&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;bin&lt;/code&gt; 上的当前引用计数。</target>
        </trans-unit>
        <trans-unit id="d052dab57302944610daa13b6732e65e7594abd0" translate="yes" xml:space="preserve">
          <source>Returns the current state of process flag &lt;code&gt;message_queue_data&lt;/code&gt;. &lt;code&gt;MQD&lt;/code&gt; is either &lt;code&gt;off_heap&lt;/code&gt; or &lt;code&gt;on_heap&lt;/code&gt;. For more information, see the documentation of &lt;code&gt;&lt;a href=&quot;#process_flag_message_queue_data&quot;&gt;process_flag(message_queue_data, MQD)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回进程标志 &lt;code&gt;message_queue_data&lt;/code&gt; 的当前状态。 &lt;code&gt;MQD&lt;/code&gt; 是 &lt;code&gt;off_heap&lt;/code&gt; 或 &lt;code&gt;on_heap&lt;/code&gt; 。有关更多信息，请参见 &lt;code&gt;&lt;a href=&quot;#process_flag_message_queue_data&quot;&gt;process_flag(message_queue_data, MQD)&lt;/a&gt;&lt;/code&gt; 的文档。</target>
        </trans-unit>
        <trans-unit id="e4f55dab96f26c8ba082de5de479eb29ebf575b4" translate="yes" xml:space="preserve">
          <source>Returns the current system monitoring settings set by &lt;code&gt;&lt;a href=&quot;#system_monitor-2&quot;&gt;erlang:system_monitor/2&lt;/a&gt;&lt;/code&gt; as &lt;code&gt;{MonitorPid, Options}&lt;/code&gt;, or &lt;code&gt;undefined&lt;/code&gt; if no settings exist. The order of the options can be different from the one that was set.</source>
          <target state="translated">返回由 &lt;code&gt;&lt;a href=&quot;#system_monitor-2&quot;&gt;erlang:system_monitor/2&lt;/a&gt;&lt;/code&gt; 设置为 &lt;code&gt;{MonitorPid, Options}&lt;/code&gt; 的当前系统监视设置，如果没有设置，则返回 &lt;code&gt;undefined&lt;/code&gt; 。选项的顺序可以与设置的顺序不同。</target>
        </trans-unit>
        <trans-unit id="e94f1c1a87e3b71f88ffad8e78f930a5a919fccd" translate="yes" xml:space="preserve">
          <source>Returns the current system profiling settings set by &lt;code&gt;&lt;a href=&quot;#system_profile-2&quot;&gt;erlang:system_profile/2&lt;/a&gt;&lt;/code&gt; as &lt;code&gt;{ProfilerPid, Options}&lt;/code&gt;, or &lt;code&gt;undefined&lt;/code&gt; if there are no settings. The order of the options can be different from the one that was set.</source>
          <target state="translated">返回由 &lt;code&gt;&lt;a href=&quot;#system_profile-2&quot;&gt;erlang:system_profile/2&lt;/a&gt;&lt;/code&gt; 设置为 &lt;code&gt;{ProfilerPid, Options}&lt;/code&gt; 的当前系统配置设置，如果没有设置，则返回 &lt;code&gt;undefined&lt;/code&gt; 。选项的顺序可以与设置的顺序不同。</target>
        </trans-unit>
        <trans-unit id="76329b1b04a56512687c837f540694b0cca5bdfb" translate="yes" xml:space="preserve">
          <source>Returns the current time as &lt;code&gt;{Hour, Minute, Second}&lt;/code&gt;.</source>
          <target state="translated">以 &lt;code&gt;{Hour, Minute, Second}&lt;/code&gt; 返回当前时间。</target>
        </trans-unit>
        <trans-unit id="0b06a60e6aa8e9650f56ffc46b72886f7a7aaaf9" translate="yes" xml:space="preserve">
          <source>Returns the current time offset between &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt;Erlang monotonic time&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_System_Time&quot;&gt;Erlang system time&lt;/a&gt;&lt;/code&gt; converted into the &lt;code&gt;Unit&lt;/code&gt; passed as argument.</source>
          <target state="translated">返回 &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt;Erlang monotonic time&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_System_Time&quot;&gt;Erlang system time&lt;/a&gt;&lt;/code&gt; 之间的当前时间偏移，该时间已转换为作为参数传递的 &lt;code&gt;Unit&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="44568658e69aa0c07fd80bcfe2f914b4967c6fa5" translate="yes" xml:space="preserve">
          <source>Returns the current time offset between &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt;Erlang monotonic time&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_System_Time&quot;&gt;Erlang system time&lt;/a&gt;&lt;/code&gt; converted into the &lt;code&gt;time_unit&lt;/code&gt; passed as argument.</source>
          <target state="translated">返回 &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt;Erlang monotonic time&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_System_Time&quot;&gt;Erlang system time&lt;/a&gt;&lt;/code&gt; 之间的当前时间偏移，该时间转换为传递为参数的 &lt;code&gt;time_unit&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c634418d8dce9f1df80dfb796f863964845406c0" translate="yes" xml:space="preserve">
          <source>Returns the current time offset between &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt;Erlang monotonic time&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_System_Time&quot;&gt;Erlang system time&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;native&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type_time_unit&quot;&gt;time unit&lt;/a&gt;&lt;/code&gt;. Current time offset added to an Erlang monotonic time gives corresponding Erlang system time.</source>
          <target state="translated">以 &lt;code&gt;native&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#type_time_unit&quot;&gt;time unit&lt;/a&gt;&lt;/code&gt; 返回 &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt;Erlang monotonic time&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_System_Time&quot;&gt;Erlang system time&lt;/a&gt;&lt;/code&gt; 之间的当前时间偏移。添加到Erlang单调时间的当前时间偏移会给出相应的Erlang系统时间。</target>
        </trans-unit>
        <trans-unit id="6f911a46de11449a7332120a7fcff2f13f03320f" translate="yes" xml:space="preserve">
          <source>Returns the current version number of the interpreter. Same as the version number of the Debugger application.</source>
          <target state="translated">返回解释器的当前版本号。与Debugger应用程序的版本号相同。</target>
        </trans-unit>
        <trans-unit id="f3da5908b9e02033e12ede02fbab26899392a315" translate="yes" xml:space="preserve">
          <source>Returns the current working directory at the local client.</source>
          <target state="translated">返回本地客户端的当前工作目录。</target>
        </trans-unit>
        <trans-unit id="0fe2ddffadede96a71d2b41ac18d0aaa85da0f36" translate="yes" xml:space="preserve">
          <source>Returns the current working directory at the remote server.</source>
          <target state="translated">返回远程服务器的当前工作目录。</target>
        </trans-unit>
        <trans-unit id="40ec27418eec0200280b3f6b646fe3a07caca002" translate="yes" xml:space="preserve">
          <source>Returns the date and time the specified file or directory was last modified, or &lt;code&gt;0&lt;/code&gt; if the file does not exist.</source>
          <target state="translated">返回指定文件或目录的最后修改日期和时间；如果文件不存在，则返回 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="665277cc2d2109d3285fdb5e4e6b0f100569a5f8" translate="yes" xml:space="preserve">
          <source>Returns the decompression dictionary currently in use by the stream. This function must be called between &lt;code&gt;&lt;a href=&quot;#inflateInit-1&quot;&gt;inflateInit/1,2&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#inflateEnd-1&quot;&gt;inflateEnd&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回流当前正在使用的解压缩字典。必须在 &lt;code&gt;&lt;a href=&quot;#inflateInit-1&quot;&gt;inflateInit/1,2&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;#inflateEnd-1&quot;&gt;inflateEnd&lt;/a&gt;&lt;/code&gt; 之间调用此函数。</target>
        </trans-unit>
        <trans-unit id="cfb922e4a38673d1141981ca392c079972b4539e" translate="yes" xml:space="preserve">
          <source>Returns the default encoding of Erlang source files.</source>
          <target state="translated">返回Erlang源文件的默认编码。</target>
        </trans-unit>
        <trans-unit id="4242a7681508d13aa2f8877ebc667e73a1f63ac0" translate="yes" xml:space="preserve">
          <source>Returns the default port parallelism scheduling hint used. For more information, see command-line argument &lt;code&gt;&lt;a href=&quot;erl#+spp&quot;&gt;+spp&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;erl(1)&lt;/code&gt;.</source>
          <target state="translated">返回使用的默认端口并行性调度提示。有关详细信息，请参阅命令行参数 &lt;code&gt;&lt;a href=&quot;erl#+spp&quot;&gt;+spp&lt;/a&gt;&lt;/code&gt; 在 &lt;code&gt;erl(1)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8eabb9103de8c6b9960e24cc527704701342fafa" translate="yes" xml:space="preserve">
          <source>Returns the default state.</source>
          <target state="translated">返回默认状态。</target>
        </trans-unit>
        <trans-unit id="8677b590a14f42456a2ac32995ad391ecc867a45" translate="yes" xml:space="preserve">
          <source>Returns the default value of the &lt;code&gt;message_queue_data&lt;/code&gt; process flag, which is either &lt;code&gt;off_heap&lt;/code&gt; or &lt;code&gt;on_heap&lt;/code&gt;. This default is set by command-line argument &lt;code&gt;&lt;a href=&quot;erl#+hmqd&quot;&gt;+hmqd&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;erl(1)&lt;/code&gt;. For more information on the &lt;code&gt;message_queue_data&lt;/code&gt; process flag, see documentation of &lt;code&gt;&lt;a href=&quot;#process_flag_message_queue_data&quot;&gt;process_flag(message_queue_data, MQD)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;message_queue_data&lt;/code&gt; 处理标志的默认值，即 &lt;code&gt;off_heap&lt;/code&gt; 或 &lt;code&gt;on_heap&lt;/code&gt; 。此默认是通过命令行参数设置 &lt;code&gt;&lt;a href=&quot;erl#+hmqd&quot;&gt;+hmqd&lt;/a&gt;&lt;/code&gt; 在 &lt;code&gt;erl(1)&lt;/code&gt; 。有关 &lt;code&gt;message_queue_data&lt;/code&gt; 进程标志的更多信息，请参见 &lt;code&gt;&lt;a href=&quot;#process_flag_message_queue_data&quot;&gt;process_flag(message_queue_data, MQD)&lt;/a&gt;&lt;/code&gt; 文档。</target>
        </trans-unit>
        <trans-unit id="7da89f4140ad3599b3649f21974300c4287c6b38" translate="yes" xml:space="preserve">
          <source>Returns the default values of one or more options.</source>
          <target state="translated">返回一个或多个选项的默认值。</target>
        </trans-unit>
        <trans-unit id="ff386debfef1f2d90455df24f04746f84af518ed" translate="yes" xml:space="preserve">
          <source>Returns the detected number of logical processors available to the Erlang runtime system. The return value is either an integer, or the atom &lt;code&gt;unknown&lt;/code&gt; if the emulator cannot detect the available logical processors. The number of available logical processors is less than or equal to the number of &lt;code&gt;&lt;a href=&quot;#system_info_logical_processors_online&quot;&gt;logical processors online&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回检测到的可用于Erlang运行时系统的逻辑处理器数。如果仿真器无法检测到可用的逻辑处理器，则返回值可以是整数，也可以是 &lt;code&gt;unknown&lt;/code&gt; 原子。可用逻辑处理器的数量小于或等于 &lt;code&gt;&lt;a href=&quot;#system_info_logical_processors_online&quot;&gt;logical processors online&lt;/a&gt;&lt;/code&gt; 的数量。</target>
        </trans-unit>
        <trans-unit id="037a7bd34e42bd117fc89f3c74420d2f42e4b29d" translate="yes" xml:space="preserve">
          <source>Returns the detected number of logical processors configured in the system. The return value is either an integer, or the atom &lt;code&gt;unknown&lt;/code&gt; if the emulator cannot detect the configured logical processors.</source>
          <target state="translated">返回检测到的系统中配置的逻辑处理器数。如果仿真器无法检测到已配置的逻辑处理器，则返回值可以是整数，也可以是 &lt;code&gt;unknown&lt;/code&gt; 原子。</target>
        </trans-unit>
        <trans-unit id="75df2a91b04a670c6edc6b88eda8dcb4a138f15c" translate="yes" xml:space="preserve">
          <source>Returns the detected number of logical processors online on the system. The return value is either an integer, or the atom &lt;code&gt;unknown&lt;/code&gt; if the emulator cannot detect logical processors online. The number of logical processors online is less than or equal to the number of &lt;code&gt;&lt;a href=&quot;#system_info_logical_processors&quot;&gt;logical processors configured&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回检测到的系统上在线逻辑处理器的数量。如果仿真器无法在线检测逻辑处理器，则返回值可以是整数，也可以是 &lt;code&gt;unknown&lt;/code&gt; 原子。联机逻辑处理器的数量小于或等于 &lt;code&gt;&lt;a href=&quot;#system_info_logical_processors&quot;&gt;logical processors configured&lt;/a&gt;&lt;/code&gt; 的逻辑处理器的数量。</target>
        </trans-unit>
        <trans-unit id="558c58df1a07e17f1666b7d4a938e6fecf7e87a8" translate="yes" xml:space="preserve">
          <source>Returns the difference between the binary relation &lt;code&gt;BinRel1&lt;/code&gt; and the &lt;code&gt;&lt;a href=&quot;#restriction&quot;&gt;restriction&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;BinRel1&lt;/code&gt; to &lt;code&gt;Set&lt;/code&gt;.</source>
          <target state="translated">返回二元关系之间的差异 &lt;code&gt;BinRel1&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;#restriction&quot;&gt;restriction&lt;/a&gt;&lt;/code&gt; 的 &lt;code&gt;BinRel1&lt;/code&gt; 来 &lt;code&gt;Set&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3f5c147e109870a10b8fcf598c56fa7ac40af8b1" translate="yes" xml:space="preserve">
          <source>Returns the difference between two &lt;code&gt;{Date, Time}&lt;/code&gt; tuples. &lt;code&gt;T2&lt;/code&gt; is to refer to an epoch later than &lt;code&gt;T1&lt;/code&gt;.</source>
          <target state="translated">返回两个 &lt;code&gt;{Date, Time}&lt;/code&gt; 元组之间的差。 &lt;code&gt;T2&lt;/code&gt; 指的是比 &lt;code&gt;T1&lt;/code&gt; 晚的纪元。</target>
        </trans-unit>
        <trans-unit id="7869bf51a15a44640ab7aa4588109fb14cb1be63" translate="yes" xml:space="preserve">
          <source>Returns the directory part of &lt;code&gt;Filename&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;Filename&lt;/code&gt; 的目录部分。</target>
        </trans-unit>
        <trans-unit id="41349ccc6b387ba6e1ddf307dcacfea19ced223b" translate="yes" xml:space="preserve">
          <source>Returns the elements of &lt;code&gt;Ordset&lt;/code&gt; as a list.</source>
          <target state="translated">以列表形式返回 &lt;code&gt;Ordset&lt;/code&gt; 的元素。</target>
        </trans-unit>
        <trans-unit id="304695da848c1919956abdfe27b96de91c796e72" translate="yes" xml:space="preserve">
          <source>Returns the elements of &lt;code&gt;Set&lt;/code&gt; as a list.</source>
          <target state="translated">&lt;code&gt;Set&lt;/code&gt; 的元素返回为列表。</target>
        </trans-unit>
        <trans-unit id="e1aae790bf4ccd5289e7da8c168b4fd9080e0e93" translate="yes" xml:space="preserve">
          <source>Returns the elements of &lt;code&gt;Set&lt;/code&gt; as a list. The order of the returned elements is undefined.</source>
          <target state="translated">&lt;code&gt;Set&lt;/code&gt; 的元素返回为列表。返回元素的顺序是不确定的。</target>
        </trans-unit>
        <trans-unit id="845464c74c7576d61ca8fdb3dbfbe2c70002a6f0" translate="yes" xml:space="preserve">
          <source>Returns the elements of the ordered set &lt;code&gt;ASet&lt;/code&gt; as a tuple of sets, and the elements of the unordered set &lt;code&gt;ASet&lt;/code&gt; as a sorted list of sets without duplicates.</source>
          <target state="translated">将有序集合 &lt;code&gt;ASet&lt;/code&gt; 的元素作为集合的元组返回，将无序集合 &lt;code&gt;ASet&lt;/code&gt; 的元素作为没有重复的集合的排序列表返回。</target>
        </trans-unit>
        <trans-unit id="4313cdc6c13f459bec7e45b2099a14c30408d080" translate="yes" xml:space="preserve">
          <source>Returns the empty list [] if &lt;code&gt;memsup&lt;/code&gt; is not available, or if the memory check times out.</source>
          <target state="translated">如果 &lt;code&gt;memsup&lt;/code&gt; 不可用，或者内存检查超时，则返回空列表[] 。</target>
        </trans-unit>
        <trans-unit id="b15b93fdd8dc40296efcdb537f329bdd156b7571" translate="yes" xml:space="preserve">
          <source>Returns the end location of the text of &lt;code&gt;Token&lt;/code&gt;'s collection of annotations. If there is no text, &lt;code&gt;undefined&lt;/code&gt; is returned.</source>
          <target state="translated">返回 &lt;code&gt;Token&lt;/code&gt; 的注释集合的文本的结束位置。如果没有文本，则返回 &lt;code&gt;undefined&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3566fcdfb82b096317ead46d5a85bbfa3fe8cb6e" translate="yes" xml:space="preserve">
          <source>Returns the end location of the text of the annotations Anno. If there is no text, &lt;code&gt;undefined&lt;/code&gt; is returned.</source>
          <target state="translated">返回批注Anno的文本的结束位置。如果没有文本，则返回 &lt;code&gt;undefined&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fe9fc59fa4e9c55102e83a40dcfc6626c44188d0" translate="yes" xml:space="preserve">
          <source>Returns the error function of &lt;code&gt;X&lt;/code&gt;, where:</source>
          <target state="translated">返回 &lt;code&gt;X&lt;/code&gt; 的误差函数，其中：</target>
        </trans-unit>
        <trans-unit id="109826f6cfa33e54fb245e45afc8591b64e3bba5" translate="yes" xml:space="preserve">
          <source>Returns the field subtree of a &lt;code&gt;record_access&lt;/code&gt; node.</source>
          <target state="translated">返回 &lt;code&gt;record_access&lt;/code&gt; 节点的字段子树。</target>
        </trans-unit>
        <trans-unit id="b27dfea3f21a6c6109ec3a891661eb30e3875663" translate="yes" xml:space="preserve">
          <source>Returns the field subtree of a &lt;code&gt;record_index_expr&lt;/code&gt; node.</source>
          <target state="translated">返回 &lt;code&gt;record_index_expr&lt;/code&gt; 节点的字段子树。</target>
        </trans-unit>
        <trans-unit id="3e81ea77f2022c3796a8609a56132cf18fe9cd64" translate="yes" xml:space="preserve">
          <source>Returns the field subtree of a &lt;code&gt;typed_record_field&lt;/code&gt; node.</source>
          <target state="translated">返回 &lt;code&gt;typed_record_field&lt;/code&gt; 节点的field子树。</target>
        </trans-unit>
        <trans-unit id="8b0af1e459fd815b4cea75c53c3bff0b28f7c3ec" translate="yes" xml:space="preserve">
          <source>Returns the fields subtree of a &lt;code&gt;record_type&lt;/code&gt; node.</source>
          <target state="translated">返回 &lt;code&gt;record_type&lt;/code&gt; 节点的fields子树。</target>
        </trans-unit>
        <trans-unit id="eef6115bf3cbfb227bf8d7f73920e2016137eed2" translate="yes" xml:space="preserve">
          <source>Returns the file extension of &lt;code&gt;Filename&lt;/code&gt;, including the period. Returns an empty string if no extension exists.</source>
          <target state="translated">返回 &lt;code&gt;Filename&lt;/code&gt; 的文件扩展名，包括句点。如果不存在扩展名，则返回一个空字符串。</target>
        </trans-unit>
        <trans-unit id="e8297c18bcd4a2fbf65f408905dbc4e4d2ee524b" translate="yes" xml:space="preserve">
          <source>Returns the file list of an open zip archive. The first returned element is the zip archive comment.</source>
          <target state="translated">返回一个打开的zip压缩包的文件列表。返回的第一个元素是压缩包的注释。</target>
        </trans-unit>
        <trans-unit id="b8757cebc59a2e85f8dfa6edb9bfb743d3ce2c6c" translate="yes" xml:space="preserve">
          <source>Returns the file name and line number of a &lt;code&gt;file&lt;/code&gt; attribute. The result is the pair &lt;code&gt;{File, Line}&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;-file(File, Line).&lt;/code&gt;&quot;.</source>
          <target state="translated">返回 &lt;code&gt;file&lt;/code&gt; 属性的文件名和行号。如果 &lt;code&gt;Node&lt;/code&gt; 表示&amp;ldquo; &lt;code&gt;-file(File, Line).&lt;/code&gt; &amp;rdquo; ，则结果为 &lt;code&gt;{File, Line}&lt;/code&gt; 对。</target>
        </trans-unit>
        <trans-unit id="1456a3887b5b610672115b126cd12736e891fab5" translate="yes" xml:space="preserve">
          <source>Returns the filename encoding mode. If it is &lt;code id=&quot;native_name_encoding&quot;&gt;latin1&lt;/code&gt;, the system translates no filenames. If it is &lt;code&gt;utf8&lt;/code&gt;, filenames are converted back and forth to the native filename encoding (usually UTF-8, but UTF-16 on Windows).</source>
          <target state="translated">返回文件名编码模式。如果为 &lt;code id=&quot;native_name_encoding&quot;&gt;latin1&lt;/code&gt; ，则系统不翻译任何文件名。如果是 &lt;code&gt;utf8&lt;/code&gt; ，则文件名会来回转换为本地文件名编码（通常为UTF-8，但在Windows上为UTF-16）。</target>
        </trans-unit>
        <trans-unit id="727793519659512f5257edb60f23f683897f14f6" translate="yes" xml:space="preserve">
          <source>Returns the filename of the annotations Anno. If there is no filename, &lt;code&gt;undefined&lt;/code&gt; is returned.</source>
          <target state="translated">返回批注Anno的文件名。如果没有文件名，则返回 &lt;code&gt;undefined&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2f5fc3394338a8cc347e85497f5e6caf19603431" translate="yes" xml:space="preserve">
          <source>Returns the first byte of binary &lt;code&gt;Subject&lt;/code&gt; as an integer. If the size of &lt;code&gt;Subject&lt;/code&gt; is zero, a &lt;code&gt;badarg&lt;/code&gt; exception is raised.</source>
          <target state="translated">以整数形式返回二进制 &lt;code&gt;Subject&lt;/code&gt; 的第一个字节。如果 &lt;code&gt;Subject&lt;/code&gt; 的大小为零，则会引发 &lt;code&gt;badarg&lt;/code&gt; 异常。</target>
        </trans-unit>
        <trans-unit id="a3ed97b0bfafb06a9dad771086d04b322fda9e71" translate="yes" xml:space="preserve">
          <source>Returns the first codepoint in &lt;code&gt;String&lt;/code&gt; and the rest of &lt;code&gt;String&lt;/code&gt; in the tail. Returns an empty list if &lt;code&gt;String&lt;/code&gt; is empty or an &lt;code&gt;{error, String}&lt;/code&gt; tuple if the next byte is invalid.</source>
          <target state="translated">返回第一码点 &lt;code&gt;String&lt;/code&gt; 和其余 &lt;code&gt;String&lt;/code&gt; 的尾部。如果 &lt;code&gt;String&lt;/code&gt; 为空，则返回一个空列表；如果下一个字节无效 &lt;code&gt;{error, String}&lt;/code&gt; 则返回一个{error，String}元组。</target>
        </trans-unit>
        <trans-unit id="8500a0db24f3f61b666bb13c1748bb8adb85729e" translate="yes" xml:space="preserve">
          <source>Returns the first element of &lt;code&gt;List&lt;/code&gt; that compares greater than or equal to all other elements of &lt;code&gt;List&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;List&lt;/code&gt; 的第一个元素，该元素比较大于或等于 &lt;code&gt;List&lt;/code&gt; 的所有其他元素。</target>
        </trans-unit>
        <trans-unit id="dcf6624fd4846f2e03c90674aa49850e3302db4b" translate="yes" xml:space="preserve">
          <source>Returns the first element of &lt;code&gt;List&lt;/code&gt; that compares less than or equal to all other elements of &lt;code&gt;List&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;List&lt;/code&gt; 的第一个元素，该元素的比较小于或等于 &lt;code&gt;List&lt;/code&gt; 的所有其他元素。</target>
        </trans-unit>
        <trans-unit id="a07a96ec11922ababf9e0b221ffc98cfb381a8e5" translate="yes" xml:space="preserve">
          <source>Returns the first entry associated with &lt;code&gt;Key&lt;/code&gt; in &lt;code&gt;List&lt;/code&gt;, if one exists, otherwise returns &lt;code&gt;none&lt;/code&gt;. For an atom &lt;code&gt;A&lt;/code&gt; in the list, the tuple &lt;code&gt;{A, true}&lt;/code&gt; is the entry associated with &lt;code&gt;A&lt;/code&gt;.</source>
          <target state="translated">返回与 &lt;code&gt;Key&lt;/code&gt; in &lt;code&gt;List&lt;/code&gt; 相关的第一个条目（如果存在），否则返回 &lt;code&gt;none&lt;/code&gt; 。对于列表中的原子 &lt;code&gt;A&lt;/code&gt; ，元组 &lt;code&gt;{A, true}&lt;/code&gt; 是与 &lt;code&gt;A&lt;/code&gt; 关联的条目。</target>
        </trans-unit>
        <trans-unit id="fe1a1dac558cf7ee7c3948d12685817160e28b44" translate="yes" xml:space="preserve">
          <source>Returns the first grapheme cluster in &lt;code&gt;String&lt;/code&gt; and the rest of &lt;code&gt;String&lt;/code&gt; in the tail. Returns an empty list if &lt;code&gt;String&lt;/code&gt; is empty or an &lt;code&gt;{error, String}&lt;/code&gt; tuple if the next byte is invalid.</source>
          <target state="translated">返回第一字形簇 &lt;code&gt;String&lt;/code&gt; 和其余 &lt;code&gt;String&lt;/code&gt; 的尾部。如果 &lt;code&gt;String&lt;/code&gt; 为空，则返回一个空列表；如果下一个字节无效 &lt;code&gt;{error, String}&lt;/code&gt; 则返回一个{error，String}元组。</target>
        </trans-unit>
        <trans-unit id="25ba3109732e19175965f13ba8cd3b6daf23b319" translate="yes" xml:space="preserve">
          <source>Returns the first key &lt;code&gt;Key&lt;/code&gt; in table &lt;code&gt;Tab&lt;/code&gt;. For an &lt;code&gt;ordered_set&lt;/code&gt; table, the first key in Erlang term order is returned. For other table types, the first key according to the internal order of the table is returned. If the table is empty, &lt;code&gt;'$end_of_table'&lt;/code&gt; is returned.</source>
          <target state="translated">返回表 &lt;code&gt;Tab&lt;/code&gt; 中的第一个键 &lt;code&gt;Key&lt;/code&gt; 。对于 &lt;code&gt;ordered_set&lt;/code&gt; 表，将返回Erlang术语顺序中的第一个键。对于其他表类型，将根据表的内部顺序返回第一个键。如果表为空，则返回 &lt;code&gt;'$end_of_table'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="51e9c415d50d1e9d91a39e8134346225ce37d24e" translate="yes" xml:space="preserve">
          <source>Returns the first key stored in table &lt;code&gt;Name&lt;/code&gt; according to the internal order of the table, or &lt;code&gt;'$end_of_table'&lt;/code&gt; if the table is empty.</source>
          <target state="translated">根据表的内部顺序返回存储在表 &lt;code&gt;Name&lt;/code&gt; 中的第一个键；如果表为空，则返回 &lt;code&gt;'$end_of_table'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3f0fc8e12d9ed576ac7506425a7d0d58ae05c1a9" translate="yes" xml:space="preserve">
          <source>Returns the first row of the result set and positions a cursor at this row.</source>
          <target state="translated">返回结果集的第一行,并将光标定位在这一行。</target>
        </trans-unit>
        <trans-unit id="3606db966ce51875346d949f6a51ecfaba27d4fb" translate="yes" xml:space="preserve">
          <source>Returns the float whose text representation is &lt;code&gt;Binary&lt;/code&gt;, for example:</source>
          <target state="translated">返回其文本表示形式为 &lt;code&gt;Binary&lt;/code&gt; 的float ，例如：</target>
        </trans-unit>
        <trans-unit id="9b4beb841f30e65ed156e20f321adf0444ec4cff" translate="yes" xml:space="preserve">
          <source>Returns the float whose text representation is &lt;code&gt;String&lt;/code&gt;, for example:</source>
          <target state="translated">返回其文本表示形式为 &lt;code&gt;String&lt;/code&gt; 的float ，例如：</target>
        </trans-unit>
        <trans-unit id="a1f057c3822134d8b28aa2f668a5660a867e0628" translate="yes" xml:space="preserve">
          <source>Returns the function constraint subtree of a &lt;code&gt;constrained_function_type&lt;/code&gt; node.</source>
          <target state="translated">返回 &lt;code&gt;constrained_function_type&lt;/code&gt; 节点的功能约束子树。</target>
        </trans-unit>
        <trans-unit id="ebaedcde684c1d236e989ca64eda7f3a84ac7910" translate="yes" xml:space="preserve">
          <source>Returns the function name represented by a syntax tree. If &lt;code&gt;Node&lt;/code&gt; represents a function name, such as &quot;&lt;code&gt;foo/1&lt;/code&gt;&quot; or &quot;&lt;code&gt;bloggs:fred/2&lt;/code&gt;&quot;, a uniform representation of that name is returned. Different nestings of arity and module name qualifiers in the syntax tree does not affect the result.</source>
          <target state="translated">返回由语法树表示的函数名称。如果 &lt;code&gt;Node&lt;/code&gt; 表示函数名称，例如&amp;ldquo; &lt;code&gt;foo/1&lt;/code&gt; &amp;rdquo;或&amp;ldquo; &lt;code&gt;bloggs:fred/2&lt;/code&gt; &amp;rdquo;，则返回该名称的统一表示形式。语法树中的arity和模块名称限定符的不同嵌套不会影响结果。</target>
        </trans-unit>
        <trans-unit id="a8999dd31e765cda8569349af3508c9f7f8bfb78" translate="yes" xml:space="preserve">
          <source>Returns the function type subtree of a &lt;code&gt;constrained_function_type&lt;/code&gt; node.</source>
          <target state="translated">返回 &lt;code&gt;constrained_function_type&lt;/code&gt; 节点的函数类型子树。</target>
        </trans-unit>
        <trans-unit id="5de20b75df90cdf1cc80195b73620ec6c4870aa4" translate="yes" xml:space="preserve">
          <source>Returns the grouped list of all subtrees of a syntax tree. If &lt;code&gt;Node&lt;/code&gt; is a leaf node (see &lt;code&gt;&lt;a href=&quot;#is_leaf-1&quot;&gt;is_leaf/1&lt;/a&gt;&lt;/code&gt;), this is the empty list, otherwise the result is always a nonempty list, containing the lists of subtrees of &lt;code&gt;Node&lt;/code&gt;, in left-to-right order as they occur in the printed program text, and grouped by category. Often, each group contains only a single subtree.</source>
          <target state="translated">返回语法树的所有子树的分组列表。如果 &lt;code&gt;Node&lt;/code&gt; 是叶节点（请参见 &lt;code&gt;&lt;a href=&quot;#is_leaf-1&quot;&gt;is_leaf/1&lt;/a&gt;&lt;/code&gt; ），则此列表为空列表，否则结果始终为非空列表，其中包含 &lt;code&gt;Node&lt;/code&gt; 子树的列表，在打印程序中按从左到右的顺序排列文字，并按类别分组。通常，每个组仅包含一个子树。</target>
        </trans-unit>
        <trans-unit id="81cadbe4c10aee223963aee8b501ed86dafc88a3" translate="yes" xml:space="preserve">
          <source>Returns the guard subtree of a &lt;code&gt;clause&lt;/code&gt; node, if any. If &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;(P1, ..., Pn) when Guard -&amp;gt; B1, ..., Bm&lt;/code&gt;&quot;, &lt;code&gt;Guard&lt;/code&gt; is returned. Otherwise, the result is &lt;code&gt;none&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;clause&lt;/code&gt; 节点的保护子树（如果有）。如果 &lt;code&gt;(P1, ..., Pn) when Guard -&amp;gt; B1, ..., Bm&lt;/code&gt; &lt;code&gt;Node&lt;/code&gt; 表示&amp;ldquo; （P1，...，Pn） &amp;rdquo;，则返回 &lt;code&gt;Guard&lt;/code&gt; 。否则，结果为 &lt;code&gt;none&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b7eb44e7bcb999c4f868db6d21ac1bb4f4bbf88a" translate="yes" xml:space="preserve">
          <source>Returns the head element subtree of a &lt;code&gt;list&lt;/code&gt; node. If &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;[Head ...]&lt;/code&gt;&quot;, the result will represent &quot;&lt;code&gt;Head&lt;/code&gt;&quot;.</source>
          <target state="translated">返回 &lt;code&gt;list&lt;/code&gt; 节点的head元素子树。如果 &lt;code&gt;Node&lt;/code&gt; 表示&amp;ldquo; &lt;code&gt;[Head ...]&lt;/code&gt; &amp;rdquo;，则结果将表示&amp;ldquo; &lt;code&gt;Head&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="3af7dc0dda93b0edf615f60f73e149b75a538963" translate="yes" xml:space="preserve">
          <source>Returns the head of &lt;code&gt;List&lt;/code&gt;, that is, the first element, for example:</source>
          <target state="translated">返回 &lt;code&gt;List&lt;/code&gt; 的头部，即第一个元素，例如：</target>
        </trans-unit>
        <trans-unit id="08be17c480e4cc74c13469a30f0056b1b791d8a8" translate="yes" xml:space="preserve">
          <source>Returns the heap type used by the current emulator. One heap type exists:</source>
          <target state="translated">返回当前模拟器使用的堆类型。只存在一种堆类型。</target>
        </trans-unit>
        <trans-unit id="67210385c8b6f03ec34d72d1cf9492efe63df195" translate="yes" xml:space="preserve">
          <source>Returns the high limit of an &lt;code&gt;integer_range_type&lt;/code&gt; node.</source>
          <target state="translated">返回 &lt;code&gt;integer_range_type&lt;/code&gt; 节点的上限。</target>
        </trans-unit>
        <trans-unit id="80cf3bc103bf6686d6efa5afdf72bccb467e014e" translate="yes" xml:space="preserve">
          <source>Returns the hook function field of the prettyprinter context.</source>
          <target state="translated">返回prettyprinter上下文的钩子函数字段。</target>
        </trans-unit>
        <trans-unit id="17b634c122fc1647e261bad737f777bc68b9b223" translate="yes" xml:space="preserve">
          <source>Returns the identifier for process, port, or a tuple containing the tracer module and tracer state tracing this process. If this process is not traced, the return value is &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">返回进程，端口或包含跟踪此进程的跟踪器模块和跟踪器状态的元组的标识符。如果未跟踪此过程，则返回值为 &lt;code&gt;[]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2b4b024bb85113e64fc85854071e0f29184ee616" translate="yes" xml:space="preserve">
          <source>Returns the identifier of the collector process.</source>
          <target state="translated">返回收集器进程的标识符。</target>
        </trans-unit>
        <trans-unit id="ca35c6af029523190c06061eddb3a36813343f5f" translate="yes" xml:space="preserve">
          <source>Returns the indentation if &lt;code&gt;String&lt;/code&gt; has been printed, starting at &lt;code&gt;StartIndent&lt;/code&gt;.</source>
          <target state="translated">如果已打印 &lt;code&gt;String&lt;/code&gt; ， &lt;code&gt;StartIndent&lt;/code&gt; 开始返回缩进。</target>
        </trans-unit>
        <trans-unit id="766abe8759c884fc6f54934153d617d87cb441c3" translate="yes" xml:space="preserve">
          <source>Returns the index of the first occurrence of &lt;code&gt;Character&lt;/code&gt; in &lt;code&gt;String&lt;/code&gt;. Returns &lt;code&gt;0&lt;/code&gt; if &lt;code&gt;Character&lt;/code&gt; does not occur.</source>
          <target state="translated">返回第一次出现的索引 &lt;code&gt;Character&lt;/code&gt; 的 &lt;code&gt;String&lt;/code&gt; 。如果没有出现 &lt;code&gt;Character&lt;/code&gt; ,则返回 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="32680945734478a7cceeb64e3e9a132211aca10e" translate="yes" xml:space="preserve">
          <source>Returns the index of the last occurrence of &lt;code&gt;Character&lt;/code&gt; in &lt;code&gt;String&lt;/code&gt;. Returns &lt;code&gt;0&lt;/code&gt; if &lt;code&gt;Character&lt;/code&gt; does not occur.</source>
          <target state="translated">返回最后一次出现的索引 &lt;code&gt;Character&lt;/code&gt; 的 &lt;code&gt;String&lt;/code&gt; 。如果没有出现 &lt;code&gt;Character&lt;/code&gt; ,则返回 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bacc374c53c5c810e9234b786a89dc572a4ed2bf" translate="yes" xml:space="preserve">
          <source>Returns the information associated with &lt;code&gt;Item&lt;/code&gt; for table &lt;code&gt;Name&lt;/code&gt;. In addition to the &lt;code&gt;{Item, Value}&lt;/code&gt; pairs defined for &lt;code&gt;&lt;a href=&quot;#info-1&quot;&gt;info/1&lt;/a&gt;&lt;/code&gt;, the following items are allowed:</source>
          <target state="translated">返回与表 &lt;code&gt;Name&lt;/code&gt; 的 &lt;code&gt;Item&lt;/code&gt; 关联的信息。除了为 &lt;code&gt;&lt;a href=&quot;#info-1&quot;&gt;info/1&lt;/a&gt;&lt;/code&gt; 定义的 &lt;code&gt;{Item, Value}&lt;/code&gt; 对之外，还允许以下项目：</target>
        </trans-unit>
        <trans-unit id="4bf340b9b4979b1bb33a207c9e6c9b7576b07311" translate="yes" xml:space="preserve">
          <source>Returns the information associated with &lt;code&gt;Item&lt;/code&gt; for table &lt;code&gt;Tab&lt;/code&gt;, or returns &lt;code&gt;undefined&lt;/code&gt; if &lt;code&gt;Tab&lt;/code&gt; does not refer an existing ETS table. If &lt;code&gt;Tab&lt;/code&gt; is not of the correct type, or if &lt;code&gt;Item&lt;/code&gt; is not one of the allowed values, a &lt;code&gt;badarg&lt;/code&gt; exception is raised.</source>
          <target state="translated">返回与表 &lt;code&gt;Tab&lt;/code&gt; 的 &lt;code&gt;Item&lt;/code&gt; 相关的信息，如果 &lt;code&gt;Tab&lt;/code&gt; 未引用现有的ETS表，则返回 &lt;code&gt;undefined&lt;/code&gt; 。如果 &lt;code&gt;Tab&lt;/code&gt; 不是正确的类型，或者 &lt;code&gt;Item&lt;/code&gt; 不是允许的值之一，则会引发 &lt;code&gt;badarg&lt;/code&gt; 异常。</target>
        </trans-unit>
        <trans-unit id="db1cb8d7799409cf97df64d4e97a6ced6db4da9e" translate="yes" xml:space="preserve">
          <source>Returns the initialization vector to be used in the next iteration of encrypt/decrypt of type &lt;code&gt;Type&lt;/code&gt;. &lt;code&gt;Data&lt;/code&gt; is the encrypted data from the previous iteration step. The &lt;code&gt;IVec&lt;/code&gt; argument is only needed for &lt;code&gt;des_cfb&lt;/code&gt; as the vector used in the previous iteration step.</source>
          <target state="translated">返回将在 &lt;code&gt;Type&lt;/code&gt; 的加密/解密的下一次迭代中使用的初始化向量。 &lt;code&gt;Data&lt;/code&gt; 是来自上一个迭代步骤的加密数据。所述 &lt;code&gt;IVec&lt;/code&gt; 仅需要参数 &lt;code&gt;des_cfb&lt;/code&gt; 如在先前迭代步骤中使用的载体。</target>
        </trans-unit>
        <trans-unit id="0af7feb7dc230951d85a30279f50c7cc989db5ec" translate="yes" xml:space="preserve">
          <source>Returns the intersection of &lt;code&gt;&lt;a href=&quot;#family&quot;&gt;family&lt;/a&gt;&lt;/code&gt;&lt;code&gt;Family&lt;/code&gt;.</source>
          <target state="translated">返回的路口 &lt;code&gt;&lt;a href=&quot;#family&quot;&gt;family&lt;/a&gt;&lt;/code&gt; &lt;code&gt;Family&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6918ab6794e57e9b098a10306bd631cd5928a7a5" translate="yes" xml:space="preserve">
          <source>Returns the intersection of &lt;code&gt;Ordset1&lt;/code&gt; and &lt;code&gt;Ordset2&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;Ordset1&lt;/code&gt; 和 &lt;code&gt;Ordset2&lt;/code&gt; 的交集。</target>
        </trans-unit>
        <trans-unit id="83c21ac18848efa1de73cc9f1af37db64edb655f" translate="yes" xml:space="preserve">
          <source>Returns the intersection of &lt;code&gt;Set1&lt;/code&gt; and &lt;code&gt;Set2&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;Set1&lt;/code&gt; 和 &lt;code&gt;Set2&lt;/code&gt; 的交集。</target>
        </trans-unit>
        <trans-unit id="3ebd978d9d23d26299d4430554d2ba0bef4130d4" translate="yes" xml:space="preserve">
          <source>Returns the intersection of the non-empty list of sets.</source>
          <target state="translated">返回非空集合的交集。</target>
        </trans-unit>
        <trans-unit id="871491bb4f88eae3839119473dafd8cdc887da5e" translate="yes" xml:space="preserve">
          <source>Returns the issuer id.</source>
          <target state="translated">返回发行人ID。</target>
        </trans-unit>
        <trans-unit id="ad00670d8637f256db21c3aa2caacc5960f36d01" translate="yes" xml:space="preserve">
          <source>Returns the issuer of the &lt;code&gt;CRL&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;CRL&lt;/code&gt; 的发行者。</target>
        </trans-unit>
        <trans-unit id="b532cfb321a8c907cfdccae15fa01ce4ccce743b" translate="yes" xml:space="preserve">
          <source>Returns the keys in &lt;code&gt;Tree&lt;/code&gt; as an ordered list.</source>
          <target state="translated">以有序列表的形式返回 &lt;code&gt;Tree&lt;/code&gt; 中的键。</target>
        </trans-unit>
        <trans-unit id="2efe5caa35a7c7964dec64e36d33af72b8e11119" translate="yes" xml:space="preserve">
          <source>Returns the label, value-expression, and type of a record field specifier. The result is a pair &lt;code&gt;{Label, {Default, Type}}&lt;/code&gt;, if &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;Label&lt;/code&gt;&quot;, &quot;&lt;code&gt;Label = &amp;lt;em&amp;gt;Default&amp;lt;/em&amp;gt;&lt;/code&gt;&quot;, &quot;&lt;code&gt;Label :: &amp;lt;em&amp;gt;Type&amp;lt;/em&amp;gt;&lt;/code&gt;&quot;, or &quot;&lt;code&gt;Label = &amp;lt;em&amp;gt;Default&amp;lt;/em&amp;gt; :: &amp;lt;em&amp;gt;Type&amp;lt;/em&amp;gt;&lt;/code&gt;&quot;. If the field has no value-expression, the value for &lt;code&gt;Default&lt;/code&gt; will be the atom &lt;code&gt;none&lt;/code&gt;. If the field has no type, the value for &lt;code&gt;Type&lt;/code&gt; will be the atom &lt;code&gt;none&lt;/code&gt;.</source>
          <target state="translated">返回记录字段说明符的标签，值表达式和类型。如果 &lt;code&gt;Node&lt;/code&gt; 代表&amp;ldquo; &lt;code&gt;Label&lt;/code&gt; &amp;rdquo;，&amp;ldquo; &lt;code&gt;Label = &amp;lt;em&amp;gt;Default&amp;lt;/em&amp;gt;&lt;/code&gt; &amp;rdquo;，&amp;ldquo; &lt;code&gt;Label :: &amp;lt;em&amp;gt;Type&amp;lt;/em&amp;gt;&lt;/code&gt; &amp;rdquo;，则结果为一对 &lt;code&gt;{Label, {Default, Type}}&lt;/code&gt; ，或者&amp;ldquo; &lt;code&gt;Label = &amp;lt;em&amp;gt;Default&amp;lt;/em&amp;gt; :: &amp;lt;em&amp;gt;Type&amp;lt;/em&amp;gt;&lt;/code&gt; &amp;rdquo;。如果该字段没有value-expression，则 &lt;code&gt;Default&lt;/code&gt; 的值将是原子 &lt;code&gt;none&lt;/code&gt; 。如果字段没有类型，则 &lt;code&gt;Type&lt;/code&gt; 的值将为原子 &lt;code&gt;none&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="48a250452ce3e81e9c520ba067d0d6201fc704a8" translate="yes" xml:space="preserve">
          <source>Returns the largest element in &lt;code&gt;Set&lt;/code&gt;. Assumes that &lt;code&gt;Set&lt;/code&gt; is not empty.</source>
          <target state="translated">返回 &lt;code&gt;Set&lt;/code&gt; 中最大的元素。假定 &lt;code&gt;Set&lt;/code&gt; 不为空。</target>
        </trans-unit>
        <trans-unit id="215a5d757eb055a83e5ff59de344c98cc86f52f1" translate="yes" xml:space="preserve">
          <source>Returns the largest integer not greater than &lt;code&gt;Number&lt;/code&gt;. For example:</source>
          <target state="translated">返回不大于 &lt;code&gt;Number&lt;/code&gt; 的最大整数。例如：</target>
        </trans-unit>
        <trans-unit id="595ac8a52eae212a230fb30580da4283e89ba746" translate="yes" xml:space="preserve">
          <source>Returns the largest of &lt;code&gt;Term1&lt;/code&gt; and &lt;code&gt;Term2&lt;/code&gt;. If the terms are equal, &lt;code&gt;Term1&lt;/code&gt; is returned.</source>
          <target state="translated">返回 &lt;code&gt;Term1&lt;/code&gt; 和 &lt;code&gt;Term2&lt;/code&gt; 中的最大值。如果条件相等，则返回 &lt;code&gt;Term1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="882dc7451aad45b42a7873769962f24bf4be6868" translate="yes" xml:space="preserve">
          <source>Returns the last byte of binary &lt;code&gt;Subject&lt;/code&gt; as an integer. If the size of &lt;code&gt;Subject&lt;/code&gt; is zero, a &lt;code&gt;badarg&lt;/code&gt; exception is raised.</source>
          <target state="translated">以整数形式返回二进制 &lt;code&gt;Subject&lt;/code&gt; 的最后一个字节。如果 &lt;code&gt;Subject&lt;/code&gt; 的大小为零，则会引发 &lt;code&gt;badarg&lt;/code&gt; 异常。</target>
        </trans-unit>
        <trans-unit id="3baa57324d471f294ae33ecf89d1f912880bdf75" translate="yes" xml:space="preserve">
          <source>Returns the last component of &lt;code&gt;Filename&lt;/code&gt; with extension &lt;code&gt;Ext&lt;/code&gt; stripped. This function is to be used to remove a (possible) specific extension. To remove an existing extension when you are unsure which one it is, use &lt;code&gt;rootname(basename(Filename))&lt;/code&gt;.</source>
          <target state="translated">返回扩展名为 &lt;code&gt;Ext&lt;/code&gt; 的 &lt;code&gt;Filename&lt;/code&gt; 的最后一个组成部分。此功能用于删除（可能的）特定扩展名。要在不确定某个扩展名时删除现有扩展名，请使用 &lt;code&gt;rootname(basename(Filename))&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2de1aa6a031348235c64e473d8161ca7dcb89078" translate="yes" xml:space="preserve">
          <source>Returns the last component of &lt;code&gt;Filename&lt;/code&gt;, or &lt;code&gt;Filename&lt;/code&gt; itself if it does not contain any directory separators.</source>
          <target state="translated">返回 &lt;code&gt;Filename&lt;/code&gt; 的最后一个组成部分；如果不包含任何目录分隔符，则返回 &lt;code&gt;Filename&lt;/code&gt; 本身。</target>
        </trans-unit>
        <trans-unit id="de735b3add151b4e3ceffe483849b7459fa29c66" translate="yes" xml:space="preserve">
          <source>Returns the last element in &lt;code&gt;List&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;List&lt;/code&gt; 中的最后一个元素。</target>
        </trans-unit>
        <trans-unit id="fc32fb22ced75cd1a97ae42785f59ea43251c7ee" translate="yes" xml:space="preserve">
          <source>Returns the last key &lt;code&gt;Key&lt;/code&gt; according to Erlang term order in table &lt;code&gt;Tab&lt;/code&gt; of type &lt;code&gt;ordered_set&lt;/code&gt;. For other table types, the function is synonymous to &lt;code&gt;&lt;a href=&quot;#first-1&quot;&gt;first/1&lt;/a&gt;&lt;/code&gt;. If the table is empty, &lt;code&gt;'$end_of_table'&lt;/code&gt; is returned.</source>
          <target state="translated">根据Erlang术语顺序，返回 &lt;code&gt;ordered_set&lt;/code&gt; 类型的表 &lt;code&gt;Tab&lt;/code&gt; 中的最后一个键 &lt;code&gt;Key&lt;/code&gt; 。对于其他表类型，该函数与 &lt;code&gt;&lt;a href=&quot;#first-1&quot;&gt;first/1&lt;/a&gt;&lt;/code&gt; 是同义词。如果表为空，则返回 &lt;code&gt;'$end_of_table'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2e4ef73baa32afa0b0e487870e1607070bbec974" translate="yes" xml:space="preserve">
          <source>Returns the last row of the result set and positions a cursor at this row.</source>
          <target state="translated">返回结果集的最后一行,并将光标定位在这一行。</target>
        </trans-unit>
        <trans-unit id="f7bfd3c8900e1fcc3a3e53ca0c688950be56f31a" translate="yes" xml:space="preserve">
          <source>Returns the left argument subtree of an &lt;code&gt;infix_expr&lt;/code&gt; node.</source>
          <target state="translated">返回 &lt;code&gt;infix_expr&lt;/code&gt; 节点的左参数子树。</target>
        </trans-unit>
        <trans-unit id="b48a36ffca062c9ef253787edf6b1da17c53fd8d" translate="yes" xml:space="preserve">
          <source>Returns the length of &lt;code&gt;List&lt;/code&gt;, for example:</source>
          <target state="translated">返回 &lt;code&gt;List&lt;/code&gt; 的长度，例如：</target>
        </trans-unit>
        <trans-unit id="a411230f0c97ff164b970e44dbef7f489d7096be" translate="yes" xml:space="preserve">
          <source>Returns the length of &lt;code&gt;list&lt;/code&gt;, or &lt;code&gt;-1&lt;/code&gt; if &lt;code&gt;list&lt;/code&gt; is not an I/O list.</source>
          <target state="translated">返回 &lt;code&gt;list&lt;/code&gt; 的长度，如果 &lt;code&gt;list&lt;/code&gt; 不是I / O列表，则返回 &lt;code&gt;-1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="91a272817fb1e0acd72db3bbf3cd046272e70413" translate="yes" xml:space="preserve">
          <source>Returns the length of an I/O list.</source>
          <target state="translated">返回I/O列表的长度。</target>
        </trans-unit>
        <trans-unit id="9fa4d6d170b8717addba0d4eadeea023df77c066" translate="yes" xml:space="preserve">
          <source>Returns the length of the longest common prefix of the binaries in list &lt;code&gt;Binaries&lt;/code&gt;.</source>
          <target state="translated">返回列表 &lt;code&gt;Binaries&lt;/code&gt; 中二进制文件的最长公共前缀的长度。</target>
        </trans-unit>
        <trans-unit id="15e85e4df262bfcc149c40fec2b8304b90131796" translate="yes" xml:space="preserve">
          <source>Returns the length of the longest common suffix of the binaries in list &lt;code&gt;Binaries&lt;/code&gt;.</source>
          <target state="translated">返回列表 &lt;code&gt;Binaries&lt;/code&gt; 中二进制文件的最长公共后缀的长度。</target>
        </trans-unit>
        <trans-unit id="a4ff55d7b2a5e4098e8e34d232a725c7ab5566db" translate="yes" xml:space="preserve">
          <source>Returns the length of the maximum initial segment of &lt;code&gt;String&lt;/code&gt;, which consists entirely of characters from &lt;code&gt;Chars&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;String&lt;/code&gt; 的最大初始段的长度，该长度完全由 &lt;code&gt;Chars&lt;/code&gt; 中的字符组成。</target>
        </trans-unit>
        <trans-unit id="e8fa5aad5e7539b94067326466d02a326177ce9e" translate="yes" xml:space="preserve">
          <source>Returns the length of the maximum initial segment of &lt;code&gt;String&lt;/code&gt;, which consists entirely of characters not from &lt;code&gt;Chars&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;String&lt;/code&gt; 的最大初始段的长度，该长度完全由非 &lt;code&gt;Chars&lt;/code&gt; 字符组成。</target>
        </trans-unit>
        <trans-unit id="592fd7ef2d1a9eda374ed0a7ff8d1fb5124ca836" translate="yes" xml:space="preserve">
          <source>Returns the library directory, &lt;code&gt;$OTPROOT/lib&lt;/code&gt;, where &lt;code&gt;$OTPROOT&lt;/code&gt; is the root directory of Erlang/OTP.</source>
          <target state="translated">返回库目录 &lt;code&gt;$OTPROOT/lib&lt;/code&gt; ，其中 &lt;code&gt;$OTPROOT&lt;/code&gt; 是Erlang / OTP的根目录。</target>
        </trans-unit>
        <trans-unit id="381a9c3f08262de49fdb40b5f3b3c553c29f53ac" translate="yes" xml:space="preserve">
          <source>Returns the limit for number of ETS tables. This limit is &lt;code&gt;partially obsolete&lt;/code&gt; and number of tables are only limited by available memory.</source>
          <target state="translated">返回ETS表数量的限制。此限制已 &lt;code&gt;partially obsolete&lt;/code&gt; ，表的数量仅受可用内存的限制。</target>
        </trans-unit>
        <trans-unit id="7e933a610e69851601b2fe7f550ae005744bf4da" translate="yes" xml:space="preserve">
          <source>Returns the line of &lt;code&gt;Token&lt;/code&gt;'s collection of annotations.</source>
          <target state="translated">返回 &lt;code&gt;Token&lt;/code&gt; 的注释集合行。</target>
        </trans-unit>
        <trans-unit id="5b68d341dd888c350386ee38f3622cdb62c24dd2" translate="yes" xml:space="preserve">
          <source>Returns the line of the annotations Anno.</source>
          <target state="translated">Returns the line of the annotations Anno.</target>
        </trans-unit>
        <trans-unit id="c421ffe1e26f240ebb4f7bb518a6bd8c3f22fde3" translate="yes" xml:space="preserve">
          <source>Returns the line widh field of the prettyprinter context.</source>
          <target state="translated">返回prettyprinter上下文的行宽字段。</target>
        </trans-unit>
        <trans-unit id="5ffad1fc56f669ab3bf1594843425fd0f9acf4f0" translate="yes" xml:space="preserve">
          <source>Returns the lines of text of the abstract comment.</source>
          <target state="translated">返回抽象注释的文字行数。</target>
        </trans-unit>
        <trans-unit id="bdceda20eaa78e2c73e651a69d5134503d89dd75" translate="yes" xml:space="preserve">
          <source>Returns the list of &quot;after&quot; subtrees of a &lt;code&gt;try_expr&lt;/code&gt; node.</source>
          <target state="translated">返回 &lt;code&gt;try_expr&lt;/code&gt; 节点的&amp;ldquo;之后&amp;rdquo;子树的列表。</target>
        </trans-unit>
        <trans-unit id="83a3cb8f4311d9fee98f333c4f9c7d1f3747f9a9" translate="yes" xml:space="preserve">
          <source>Returns the list of action body subtrees of a &lt;code&gt;receive_expr&lt;/code&gt; node. If &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;receive C1; ...; Cn end&lt;/code&gt;&quot;, this is the empty list.</source>
          <target state="translated">返回 &lt;code&gt;receive_expr&lt;/code&gt; 节点的动作主体子树的列表。如果 &lt;code&gt;Node&lt;/code&gt; 表示&amp;ldquo; &lt;code&gt;receive C1; ...; Cn end&lt;/code&gt; &amp;rdquo;，则为空列表。</target>
        </trans-unit>
        <trans-unit id="a3f26cfc2c9d11a0875140fd3e9d329f7cf626c5" translate="yes" xml:space="preserve">
          <source>Returns the list of all currently loaded modules for which &lt;code&gt;&lt;a href=&quot;#module_status-1&quot;&gt;module_status/1&lt;/a&gt;&lt;/code&gt; returns &lt;code&gt;modified&lt;/code&gt;. See also &lt;code&gt;&lt;a href=&quot;#all_loaded-0&quot;&gt;all_loaded/0&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回所有当前已加载模块的列表，其 &lt;code&gt;&lt;a href=&quot;#module_status-1&quot;&gt;module_status/1&lt;/a&gt;&lt;/code&gt; 返回已 &lt;code&gt;modified&lt;/code&gt; 。另请参见 &lt;code&gt;&lt;a href=&quot;#all_loaded-0&quot;&gt;all_loaded/0&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4074d21c5e78433215bddf596b730cbd9571852d" translate="yes" xml:space="preserve">
          <source>Returns the list of all entries associated with &lt;code&gt;Key&lt;/code&gt; in &lt;code&gt;List&lt;/code&gt;. If no such entry exists, the result is the empty list.</source>
          <target state="translated">返回与 &lt;code&gt;Key&lt;/code&gt; in &lt;code&gt;List&lt;/code&gt; 相关的所有条目的列表。如果不存在这样的条目，则结果为空列表。</target>
        </trans-unit>
        <trans-unit id="4b90db412db69843fc9c55da35c6d6e35fc21fcc" translate="yes" xml:space="preserve">
          <source>Returns the list of all test cases and test case groups in the test suite module to be executed. This list also specifies the order the cases and groups are executed by &lt;code&gt;Common Test&lt;/code&gt;. A test case is represented by an atom, the name of the test case function. A test case group is represented by a &lt;code&gt;group&lt;/code&gt; tuple, where &lt;code&gt;GroupName&lt;/code&gt;, an atom, is the name of the group (defined in &lt;code&gt;&lt;a href=&quot;#Module:groups-0&quot;&gt;groups/0&lt;/a&gt;&lt;/code&gt;). Execution properties for groups can also be specified, both for a top-level group and for any of its subgroups. Group execution properties specified here override properties in the group definition (see &lt;code&gt;&lt;a href=&quot;#Module:groups-0&quot;&gt;groups/0&lt;/a&gt;&lt;/code&gt;). (With value &lt;code&gt;default&lt;/code&gt;, the group definition properties are used).</source>
          <target state="translated">返回要执行的测试套件模块中所有测试用例和测试用例组的列表。此列表还指定了 &lt;code&gt;Common Test&lt;/code&gt; 执行案例和组的顺序。测试用例由原子表示，即测试用例函数的名称。测试用例组由一个 &lt;code&gt;group&lt;/code&gt; 元组表示，其中 &lt;code&gt;GroupName&lt;/code&gt; 是一个原子，是该组的名称（在 &lt;code&gt;&lt;a href=&quot;#Module:groups-0&quot;&gt;groups/0&lt;/a&gt;&lt;/code&gt; 中定义）。还可以为顶级组及其任何子组指定组的执行属性。此处指定的组执行属性将覆盖组定义中的属性（请参阅 &lt;code&gt;&lt;a href=&quot;#Module:groups-0&quot;&gt;groups/0&lt;/a&gt;&lt;/code&gt; ）。 （使用 &lt;code&gt;default&lt;/code&gt; 值时，使用组定义属性）。</target>
        </trans-unit>
        <trans-unit id="9f7bc040a55769c2d560efbbc9bfd9aeb11b35dd" translate="yes" xml:space="preserve">
          <source>Returns the list of argument subtrees of a &lt;code&gt;macro&lt;/code&gt; node, if any. If &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;?Name&lt;/code&gt;&quot;, &lt;code&gt;none&lt;/code&gt; is returned. Otherwise, if &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;?Name(A1, ..., An)&lt;/code&gt;&quot;, &lt;code&gt;[A1, ..., An]&lt;/code&gt; is returned.</source>
          <target state="translated">返回 &lt;code&gt;macro&lt;/code&gt; 节点的参数子树的列表（如果有）。如果 &lt;code&gt;Node&lt;/code&gt; 表示&amp;ldquo; &lt;code&gt;?Name&lt;/code&gt; &amp;rdquo;， &lt;code&gt;none&lt;/code&gt; 返回任何值。否则，如果 &lt;code&gt;Node&lt;/code&gt; 表示&amp;ldquo; &lt;code&gt;?Name(A1, ..., An)&lt;/code&gt; &amp;rdquo;，则返回 &lt;code&gt;[A1, ..., An]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cd2abf692bb89f1661533fd8c05a69c2d5f69705" translate="yes" xml:space="preserve">
          <source>Returns the list of argument subtrees of an &lt;code&gt;application&lt;/code&gt; node.</source>
          <target state="translated">返回 &lt;code&gt;application&lt;/code&gt; 节点的参数子树的列表。</target>
        </trans-unit>
        <trans-unit id="b51010749945c47c4a6c5f5d3ade7e33ffdcf50d" translate="yes" xml:space="preserve">
          <source>Returns the list of argument subtrees of an &lt;code&gt;attribute&lt;/code&gt; node, if any. If &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;-Name.&lt;/code&gt;&quot;, the result is &lt;code&gt;none&lt;/code&gt;. Otherwise, if &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;-Name(E1, ..., En).&lt;/code&gt;&quot;, &lt;code&gt;[E1, ..., E1]&lt;/code&gt; is returned.</source>
          <target state="translated">返回 &lt;code&gt;attribute&lt;/code&gt; 节点的参数子树的列表（如果有）。如果 &lt;code&gt;Node&lt;/code&gt; 表示&amp;ldquo; &lt;code&gt;-Name.&lt;/code&gt; &amp;rdquo;，则结果为 &lt;code&gt;none&lt;/code&gt; 。否则，如果 &lt;code&gt;Node&lt;/code&gt; 表示&amp;ldquo; &lt;code&gt;-Name(E1, ..., En).&lt;/code&gt; &amp;rdquo;，则返回 &lt;code&gt;[E1, ..., E1]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="002cc27d9fa32b3b9b24b393e8046e89d6738cf2" translate="yes" xml:space="preserve">
          <source>Returns the list of bindings contained in the binding structure.</source>
          <target state="translated">返回绑定结构中包含的绑定列表。</target>
        </trans-unit>
        <trans-unit id="5174b9697fb1207ec868d471717172647eff5d58" translate="yes" xml:space="preserve">
          <source>Returns the list of body subtrees of a &lt;code&gt;binary_comp&lt;/code&gt; node.</source>
          <target state="translated">返回 &lt;code&gt;binary_comp&lt;/code&gt; 节点的主体子树的列表。</target>
        </trans-unit>
        <trans-unit id="3764fca4cbc9e969b7bb5f22406bbe65ffceaa69" translate="yes" xml:space="preserve">
          <source>Returns the list of body subtrees of a &lt;code&gt;block_expr&lt;/code&gt; node.</source>
          <target state="translated">返回 &lt;code&gt;block_expr&lt;/code&gt; 节点的主体子树的列表。</target>
        </trans-unit>
        <trans-unit id="268c5b2ec33d12dc92e33eec2a35d11789339bf3" translate="yes" xml:space="preserve">
          <source>Returns the list of body subtrees of a &lt;code&gt;conjunction&lt;/code&gt; node.</source>
          <target state="translated">返回 &lt;code&gt;conjunction&lt;/code&gt; 节点的主体子树的列表。</target>
        </trans-unit>
        <trans-unit id="3b83cd1e6d000ce366f138095649d55539bb3870" translate="yes" xml:space="preserve">
          <source>Returns the list of body subtrees of a &lt;code&gt;disjunction&lt;/code&gt; node.</source>
          <target state="translated">返回 &lt;code&gt;disjunction&lt;/code&gt; 节点的主体子树的列表。</target>
        </trans-unit>
        <trans-unit id="418577006bf89ddd302725795d34301ae3eebf59" translate="yes" xml:space="preserve">
          <source>Returns the list of body subtrees of a &lt;code&gt;list_comp&lt;/code&gt; node.</source>
          <target state="translated">返回 &lt;code&gt;list_comp&lt;/code&gt; 节点的主体子树的列表。</target>
        </trans-unit>
        <trans-unit id="2e074f4f653ca571b3aabaa3e095ceb1264770b3" translate="yes" xml:space="preserve">
          <source>Returns the list of body subtrees of a &lt;code&gt;try_expr&lt;/code&gt; node.</source>
          <target state="translated">返回 &lt;code&gt;try_expr&lt;/code&gt; 节点的主体子树的列表。</target>
        </trans-unit>
        <trans-unit id="b82a11ca3b703fc466802dfb6bbbf88fa8ba8935" translate="yes" xml:space="preserve">
          <source>Returns the list of case-clause subtrees of a &lt;code&gt;try_expr&lt;/code&gt; node. If &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;try Body catch H1; ...; Hn end&lt;/code&gt;&quot;, the result is the empty list.</source>
          <target state="translated">返回 &lt;code&gt;try_expr&lt;/code&gt; 节点的大小写子树列表。如果 &lt;code&gt;Node&lt;/code&gt; 表示&amp;ldquo; &lt;code&gt;try Body catch H1; ...; Hn end&lt;/code&gt; &amp;rdquo;，则结果为空列表。</target>
        </trans-unit>
        <trans-unit id="b163a2a697db375070516e96cf791160e3f8d653" translate="yes" xml:space="preserve">
          <source>Returns the list of characters needed to print &lt;code&gt;Latin1String&lt;/code&gt; as a string.</source>
          <target state="translated">返回将 &lt;code&gt;Latin1String&lt;/code&gt; 打印为字符串所需的字符列表。</target>
        </trans-unit>
        <trans-unit id="124942b2cf897d58985bc38eb5a5acb9816a0d63" translate="yes" xml:space="preserve">
          <source>Returns the list of characters needed to print &lt;code&gt;String&lt;/code&gt; as a string.</source>
          <target state="translated">返回将 &lt;code&gt;String&lt;/code&gt; 打印为字符串所需的字符列表。</target>
        </trans-unit>
        <trans-unit id="b42ad7ebc647ce2e5442ae846b7d53befad54d04" translate="yes" xml:space="preserve">
          <source>Returns the list of characters needed to print &lt;code&gt;String&lt;/code&gt; as a string. Non-Latin-1 characters are escaped.</source>
          <target state="translated">返回将 &lt;code&gt;String&lt;/code&gt; 打印为字符串所需的字符列表。非拉丁1字符被转义。</target>
        </trans-unit>
        <trans-unit id="0f2300197a91df71da83cb8bef05262f0dd970b5" translate="yes" xml:space="preserve">
          <source>Returns the list of characters needed to print a character constant in the ISO Latin-1 character set.</source>
          <target state="translated">返回ISO Latin-1字符集中打印字符常量所需的字符列表。</target>
        </trans-unit>
        <trans-unit id="5c0c8313f5ebbada3d38c47694ce547bedf69828" translate="yes" xml:space="preserve">
          <source>Returns the list of characters needed to print a character constant in the Unicode character set.</source>
          <target state="translated">返回Unicode字符集中打印字符常量所需的字符列表。</target>
        </trans-unit>
        <trans-unit id="afc44efa34ad4cdb1404aeae6b5b54830fce13c3" translate="yes" xml:space="preserve">
          <source>Returns the list of characters needed to print a character constant in the Unicode character set. Non-Latin-1 characters are escaped.</source>
          <target state="translated">返回Unicode字符集中打印字符常量所需的字符列表。非拉丁语1的字符会被转义。</target>
        </trans-unit>
        <trans-unit id="711128e38d9b2b114faf6ac288b83e56c8d75731" translate="yes" xml:space="preserve">
          <source>Returns the list of characters needed to print atom &lt;code&gt;Atom&lt;/code&gt;.</source>
          <target state="translated">返回打印原子 &lt;code&gt;Atom&lt;/code&gt; 所需的字符列表。</target>
        </trans-unit>
        <trans-unit id="689aa40246069f6a3c6dadf8c4e44160c116a4e8" translate="yes" xml:space="preserve">
          <source>Returns the list of characters needed to print atom &lt;code&gt;Atom&lt;/code&gt;. Non-Latin-1 characters are escaped.</source>
          <target state="translated">返回打印原子 &lt;code&gt;Atom&lt;/code&gt; 所需的字符列表。非拉丁1字符被转义。</target>
        </trans-unit>
        <trans-unit id="acd1089b8486cdaabf46562a1414e8d723fdfd00" translate="yes" xml:space="preserve">
          <source>Returns the list of clause subtrees of a &lt;code&gt;case_expr&lt;/code&gt; node.</source>
          <target state="translated">返回 &lt;code&gt;case_expr&lt;/code&gt; 节点的子句子树的列表。</target>
        </trans-unit>
        <trans-unit id="c4ec2b5350e039a89bf27307ded21a4be020b41a" translate="yes" xml:space="preserve">
          <source>Returns the list of clause subtrees of a &lt;code&gt;cond_expr&lt;/code&gt; node.</source>
          <target state="translated">返回 &lt;code&gt;cond_expr&lt;/code&gt; 节点的子句子树的列表。</target>
        </trans-unit>
        <trans-unit id="db4d0cbbdc7ae0347b8b0b19fa56c7a744652ea3" translate="yes" xml:space="preserve">
          <source>Returns the list of clause subtrees of a &lt;code&gt;fun_expr&lt;/code&gt; node.</source>
          <target state="translated">返回 &lt;code&gt;fun_expr&lt;/code&gt; 节点的子句子树的列表。</target>
        </trans-unit>
        <trans-unit id="4a4811dab4399a621db98a65df21a9456e96d83c" translate="yes" xml:space="preserve">
          <source>Returns the list of clause subtrees of a &lt;code&gt;function&lt;/code&gt; node.</source>
          <target state="translated">返回 &lt;code&gt;function&lt;/code&gt; 节点的子句子树的列表。</target>
        </trans-unit>
        <trans-unit id="02cc128b9f2ae8c4dbfdbc060621fae35cdd1213" translate="yes" xml:space="preserve">
          <source>Returns the list of clause subtrees of a &lt;code&gt;named_fun_expr&lt;/code&gt; node.</source>
          <target state="translated">返回 &lt;code&gt;named_fun_expr&lt;/code&gt; 节点的子句子树的列表。</target>
        </trans-unit>
        <trans-unit id="c74b6fdbcb358b8ac8ffcf58c36b97f6fa1d4cdd" translate="yes" xml:space="preserve">
          <source>Returns the list of clause subtrees of a &lt;code&gt;receive_expr&lt;/code&gt; node.</source>
          <target state="translated">返回 &lt;code&gt;receive_expr&lt;/code&gt; 节点的子句子树的列表。</target>
        </trans-unit>
        <trans-unit id="13dff7dca71508f0bbf6094893dda46bb978468e" translate="yes" xml:space="preserve">
          <source>Returns the list of clause subtrees of an &lt;code&gt;if_expr&lt;/code&gt; node.</source>
          <target state="translated">返回 &lt;code&gt;if_expr&lt;/code&gt; 节点的子句子树的列表。</target>
        </trans-unit>
        <trans-unit id="945436a6b5fa519ab0f1edcf4fc9470566c60ff8" translate="yes" xml:space="preserve">
          <source>Returns the list of element subtrees of a &lt;code&gt;tuple&lt;/code&gt; node.</source>
          <target state="translated">返回 &lt;code&gt;tuple&lt;/code&gt; 节点的元素子树的列表。</target>
        </trans-unit>
        <trans-unit id="6fabb3f95c2e4e3818af26e4f5091c9e26f9d629" translate="yes" xml:space="preserve">
          <source>Returns the list of element subtrees of a list skeleton. &lt;code&gt;Node&lt;/code&gt; must represent a proper list. E.g., if &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;[X1, X2 | [X3, X4 | []]&lt;/code&gt;&quot;, then &lt;code&gt;list_elements(Node)&lt;/code&gt; yields the list &lt;code&gt;[X1, X2, X3, X4]&lt;/code&gt;.</source>
          <target state="translated">返回列表框架的元素子树的列表。 &lt;code&gt;Node&lt;/code&gt; 必须代表一个正确的列表。例如，如果 &lt;code&gt;Node&lt;/code&gt; 表示&amp;ldquo; &lt;code&gt;[X1, X2 | [X3, X4 | []]&lt;/code&gt; &amp;rdquo;&amp;rdquo;，则 &lt;code&gt;list_elements(Node)&lt;/code&gt; 产生列表 &lt;code&gt;[X1, X2, X3, X4]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="94cb2abcd5c82b5d31f4dbdac385e330bef9e815" translate="yes" xml:space="preserve">
          <source>Returns the list of field subtrees of a &lt;code&gt;binary&lt;/code&gt; node.</source>
          <target state="translated">返回 &lt;code&gt;binary&lt;/code&gt; 节点的字段子树的列表。</target>
        </trans-unit>
        <trans-unit id="72c9d9bbfb3bb2e94574748bc9ed774b1e38a9ac" translate="yes" xml:space="preserve">
          <source>Returns the list of field subtrees of a &lt;code&gt;map_expr&lt;/code&gt; node.</source>
          <target state="translated">返回 &lt;code&gt;map_expr&lt;/code&gt; 节点的字段子树的列表。</target>
        </trans-unit>
        <trans-unit id="d9211e45912cbd7098c6aa17c81d7c02c5d50f07" translate="yes" xml:space="preserve">
          <source>Returns the list of field subtrees of a &lt;code&gt;map_type&lt;/code&gt; node. If &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;map()&lt;/code&gt;&quot;, &lt;code&gt;any_size&lt;/code&gt; is returned; otherwise, if &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;#{F1, ..., Fn}&lt;/code&gt;&quot;, &lt;code&gt;[F1, ..., Fn]&lt;/code&gt; is returned.</source>
          <target state="translated">返回 &lt;code&gt;map_type&lt;/code&gt; 节点的字段子树的列表。如果 &lt;code&gt;Node&lt;/code&gt; 表示&amp;ldquo; &lt;code&gt;map()&lt;/code&gt; &amp;rdquo;，则返回 &lt;code&gt;any_size&lt;/code&gt; ；否则返回false。否则，如果 &lt;code&gt;Node&lt;/code&gt; 表示&amp;ldquo; &lt;code&gt;#{F1, ..., Fn}&lt;/code&gt; &amp;rdquo;，则返回 &lt;code&gt;[F1, ..., Fn]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4b7e98031ca99be9217e22e82d33dad17bd6ce2a" translate="yes" xml:space="preserve">
          <source>Returns the list of field subtrees of a &lt;code&gt;record_expr&lt;/code&gt; node.</source>
          <target state="translated">返回 &lt;code&gt;record_expr&lt;/code&gt; 节点的字段子树的列表。</target>
        </trans-unit>
        <trans-unit id="a2ab4efae449df4c15eb828bb4bb88eeac2475b5" translate="yes" xml:space="preserve">
          <source>Returns the list of function names declared by an export attribute. We do not guarantee that each name occurs at most once in the list. The order of listing is not defined.</source>
          <target state="translated">返回导出属性声明的函数名称列表。我们不保证每个名称在列表中最多出现一次。列表的顺序没有定义。</target>
        </trans-unit>
        <trans-unit id="2c2b2400f5c0a83524d5608c5163ef8e6e949ed8" translate="yes" xml:space="preserve">
          <source>Returns the list of handler-clause subtrees of a &lt;code&gt;try_expr&lt;/code&gt; node.</source>
          <target state="translated">返回 &lt;code&gt;try_expr&lt;/code&gt; 节点的处理程序子树的列表。</target>
        </trans-unit>
        <trans-unit id="f1363caa5b1b4439d25f3d3cfc135eabcd34bcc8" translate="yes" xml:space="preserve">
          <source>Returns the list of pattern subtrees of a &lt;code&gt;clause&lt;/code&gt; node.</source>
          <target state="translated">返回 &lt;code&gt;clause&lt;/code&gt; 节点的模式子树的列表。</target>
        </trans-unit>
        <trans-unit id="87af8f9219134786af7ce2b52a493fc461baf999" translate="yes" xml:space="preserve">
          <source>Returns the list of subnodes of a &lt;code&gt;form_list&lt;/code&gt; node.</source>
          <target state="translated">返回 &lt;code&gt;form_list&lt;/code&gt; 节点的子节点列表。</target>
        </trans-unit>
        <trans-unit id="8bda49464f0d0756b59ce17601ca68354e6cbd6b" translate="yes" xml:space="preserve">
          <source>Returns the list of type element subtrees of a &lt;code&gt;tuple_type&lt;/code&gt; node. If &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;tuple()&lt;/code&gt;&quot;, &lt;code&gt;any_size&lt;/code&gt; is returned; otherwise, if &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;{T1, ..., Tn}&lt;/code&gt;&quot;, &lt;code&gt;[T1, ..., Tn]&lt;/code&gt; is returned.</source>
          <target state="translated">返回 &lt;code&gt;tuple_type&lt;/code&gt; 节点的类型元素子树的列表。如果 &lt;code&gt;Node&lt;/code&gt; 表示&amp;ldquo; &lt;code&gt;tuple()&lt;/code&gt; &amp;rdquo;，则返回 &lt;code&gt;any_size&lt;/code&gt; ；否则返回false。否则，如果 &lt;code&gt;Node&lt;/code&gt; 表示&amp;ldquo; &lt;code&gt;{T1, ..., Tn}&lt;/code&gt; &amp;rdquo;，则返回 &lt;code&gt;[T1, ..., Tn]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7b83f500ab1dfa61376b1b83f850e92057de9ae6" translate="yes" xml:space="preserve">
          <source>Returns the list of type subtrees of a &lt;code&gt;type_union&lt;/code&gt; node.</source>
          <target state="translated">返回 &lt;code&gt;type_union&lt;/code&gt; 节点的类型子树的列表。</target>
        </trans-unit>
        <trans-unit id="49ac30210525f39051654f12dae9f6c5d49732cf" translate="yes" xml:space="preserve">
          <source>Returns the list of type-specifier subtrees of a &lt;code&gt;binary_field&lt;/code&gt; node. If &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;.../T1, ..., Tn&lt;/code&gt;&quot;, the result is &lt;code&gt;[T1, ..., Tn]&lt;/code&gt;, otherwise the result is the empty list.</source>
          <target state="translated">返回 &lt;code&gt;binary_field&lt;/code&gt; 节点的类型说明符子树的列表。如果 &lt;code&gt;Node&lt;/code&gt; 表示&amp;ldquo; &lt;code&gt;.../T1, ..., Tn&lt;/code&gt; &amp;rdquo;，则结果为 &lt;code&gt;[T1, ..., Tn]&lt;/code&gt; ，否则结果为空列表。</target>
        </trans-unit>
        <trans-unit id="7a4e3a816d4cabd41a07f6e0e2a76249c29b6f5a" translate="yes" xml:space="preserve">
          <source>Returns the list of user annotations associated with a syntax tree node. For a newly created node, this is the empty list. The annotations may be any terms.</source>
          <target state="translated">返回与语法树节点相关联的用户注释列表。对于一个新创建的节点,这是一个空列表。注解可以是任何术语。</target>
        </trans-unit>
        <trans-unit id="f05ea1685ae0a61f80ea66b99708918dcb2cf8b4" translate="yes" xml:space="preserve">
          <source>Returns the literal string represented by a &lt;code&gt;char&lt;/code&gt; node. This includes the leading &quot;&lt;code&gt;$&lt;/code&gt;&quot; character. Characters beyond 255 will be escaped.</source>
          <target state="translated">返回由 &lt;code&gt;char&lt;/code&gt; 节点表示的文字字符串。这包括前导&amp;ldquo; &lt;code&gt;$&lt;/code&gt; &amp;rdquo;字符。超过255个字符将被转义。</target>
        </trans-unit>
        <trans-unit id="0d81c5c279a5eda522a6b5badccf42435ca7d3d2" translate="yes" xml:space="preserve">
          <source>Returns the literal string represented by a &lt;code&gt;char&lt;/code&gt; node. This includes the leading &quot;&lt;code&gt;$&lt;/code&gt;&quot; character. Depending on the encoding a character beyond 255 will be escaped (&lt;code&gt;latin1&lt;/code&gt;) or copied as is (&lt;code&gt;utf8&lt;/code&gt;).</source>
          <target state="translated">返回由 &lt;code&gt;char&lt;/code&gt; 节点表示的文字字符串。这包括前导&amp;ldquo; &lt;code&gt;$&lt;/code&gt; &amp;rdquo;字符。根据编码，超过255的字符将被转义（ &lt;code&gt;latin1&lt;/code&gt; ）或原样复制（ &lt;code&gt;utf8&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="1b891959bf59e8ca2fffbccba3879fbf60620309" translate="yes" xml:space="preserve">
          <source>Returns the literal string represented by a &lt;code&gt;string&lt;/code&gt; node. This includes surrounding double-quote characters. Characters beyond 255 will be escaped.</source>
          <target state="translated">返回由 &lt;code&gt;string&lt;/code&gt; 节点表示的文字字符串。这包括周围的双引号字符。超过255个字符将被转义。</target>
        </trans-unit>
        <trans-unit id="94708d1b48e867433799573e91a46ad5786537b3" translate="yes" xml:space="preserve">
          <source>Returns the literal string represented by a &lt;code&gt;string&lt;/code&gt; node. This includes surrounding double-quote characters. Depending on the encoding characters beyond 255 will be escaped (&lt;code&gt;latin1&lt;/code&gt;) or copied as is (&lt;code&gt;utf8&lt;/code&gt;).</source>
          <target state="translated">返回由 &lt;code&gt;string&lt;/code&gt; 节点表示的文字字符串。这包括周围的双引号字符。根据编码的不同，超过255个字符将被转义（ &lt;code&gt;latin1&lt;/code&gt; ）或原样复制（ &lt;code&gt;utf8&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="db6627ca004e84117c4e7f3e06084d9eaba4c8df" translate="yes" xml:space="preserve">
          <source>Returns the literal string represented by an &lt;code&gt;atom&lt;/code&gt; node. This includes surrounding single-quote characters if necessary. Characters beyond 255 will be escaped.</source>
          <target state="translated">返回 &lt;code&gt;atom&lt;/code&gt; 节点表示的文字字符串。如有必要，包括单引号引起来的字符。超过255个字符将被转义。</target>
        </trans-unit>
        <trans-unit id="7f635664ad233d5bd0b244b79390f17bc0205523" translate="yes" xml:space="preserve">
          <source>Returns the literal string represented by an &lt;code&gt;atom&lt;/code&gt; node. This includes surrounding single-quote characters if necessary. Depending on the encoding a character beyond 255 will be escaped (&lt;code&gt;latin1&lt;/code&gt;) or copied as is (&lt;code&gt;utf8&lt;/code&gt;).</source>
          <target state="translated">返回 &lt;code&gt;atom&lt;/code&gt; 节点表示的文字字符串。如有必要，包括单引号引起来的字符。根据编码，超过255的字符将被转义（ &lt;code&gt;latin1&lt;/code&gt; ）或原样复制（ &lt;code&gt;utf8&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="d4a3e54d55cc95e70b5d4f984092f23abd31bdcc" translate="yes" xml:space="preserve">
          <source>Returns the literal string represented by an &lt;code&gt;operator&lt;/code&gt; node. This is simply the operator name as a string.</source>
          <target state="translated">返回由 &lt;code&gt;operator&lt;/code&gt; 节点表示的文字字符串。这只是字符串形式的运算符名称。</target>
        </trans-unit>
        <trans-unit id="aab851e7716b8e5c1393bffb59ecd8b060532944" translate="yes" xml:space="preserve">
          <source>Returns the local address and port number for a socket.</source>
          <target state="translated">返回一个套接字的本地地址和端口号。</target>
        </trans-unit>
        <trans-unit id="a9868e26c5ed6e859c3893f7f5acd607cb999fb0" translate="yes" xml:space="preserve">
          <source>Returns the local address and port number of socket &lt;code&gt;Socket&lt;/code&gt;.</source>
          <target state="translated">返回套接字 &lt;code&gt;Socket&lt;/code&gt; 的本地地址和端口号。</target>
        </trans-unit>
        <trans-unit id="207897434cf6d424c60c9a2592f2ed623b554212" translate="yes" xml:space="preserve">
          <source>Returns the local hostname. Never fails.</source>
          <target state="translated">返回本地主机名。永远不会失败。</target>
        </trans-unit>
        <trans-unit id="416a2be1303d6295c22b6af59e1d4507c16d5877" translate="yes" xml:space="preserve">
          <source>Returns the local port number for a socket.</source>
          <target state="translated">返回套接字的本地端口号。</target>
        </trans-unit>
        <trans-unit id="9147fe3c3e9abb708f6cae387be447f39cede517" translate="yes" xml:space="preserve">
          <source>Returns the local time reported by the underlying operating system.</source>
          <target state="translated">返回底层操作系统报告的当地时间。</target>
        </trans-unit>
        <trans-unit id="f2ac7c23a785efb776256267402553ed72acdc79" translate="yes" xml:space="preserve">
          <source>Returns the location of &lt;code&gt;Token&lt;/code&gt;'s collection of annotations.</source>
          <target state="translated">返回 &lt;code&gt;Token&lt;/code&gt; 的注释集合的位置。</target>
        </trans-unit>
        <trans-unit id="15450e7a956656f7c1d1dced67e9ebfc4fe434db" translate="yes" xml:space="preserve">
          <source>Returns the location of the annotations Anno.</source>
          <target state="translated">返回注释Anno的位置。</target>
        </trans-unit>
        <trans-unit id="3be606322d70c4081148f07bc2dccb0e20248da7" translate="yes" xml:space="preserve">
          <source>Returns the log name given the pid of a disk log process on the current node, or &lt;code&gt;undefined&lt;/code&gt; if the specified pid is not a disk log process.</source>
          <target state="translated">返回给定当前节点上磁盘日志进程的pid的日志名称，如果指定的pid不是磁盘日志进程，则返回 &lt;code&gt;undefined&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="73f5aac53c46c70833281e58ca24443d9c95874d" translate="yes" xml:space="preserve">
          <source>Returns the low limit of an &lt;code&gt;integer_range_type&lt;/code&gt; node.</source>
          <target state="translated">返回 &lt;code&gt;integer_range_type&lt;/code&gt; 节点的下限。</target>
        </trans-unit>
        <trans-unit id="f2bd7056d9d366befcaba6d0aeddf8edab781e9e" translate="yes" xml:space="preserve">
          <source>Returns the magic cookie of the current node.</source>
          <target state="translated">返回当前节点的魔法cookie。</target>
        </trans-unit>
        <trans-unit id="b5f5f3d5339b0ae05f73b408853fe635dfc27a09" translate="yes" xml:space="preserve">
          <source>Returns the magic cookie of the local node if the node is alive, otherwise the atom &lt;code&gt;nocookie&lt;/code&gt;.</source>
          <target state="translated">如果该节点处于活动状态，则返回该本地节点的魔术cookie，否则返回原子 &lt;code&gt;nocookie&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="af40012a87462ebdc7d7eb5c438abdea2903d250" translate="yes" xml:space="preserve">
          <source>Returns the match specification for this event, if it has one, or &lt;code&gt;true&lt;/code&gt; if no match specification has been set.</source>
          <target state="translated">返回此事件的匹配规范（如果有），如果没有设置匹配规范，则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1fc547455f6862114face1b2da4682cb415ae754" translate="yes" xml:space="preserve">
          <source>Returns the match specification for this function, if it has one. If the function is locally or globally traced but has no match specification defined, the returned value is &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">返回此函数的匹配规范（如果有）。如果该函数是本地或全局跟踪的，但未定义匹配规范，则返回值为 &lt;code&gt;[]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4441bfe54590e77458cc37627580797883203ac1" translate="yes" xml:space="preserve">
          <source>Returns the matching values or configuration elements, given a configuration variable key or its associated name (if one has been specified with &lt;code&gt;&lt;a href=&quot;#require-2&quot;&gt;ct:require/2&lt;/a&gt;&lt;/code&gt; or a &lt;code&gt;require&lt;/code&gt; statement).</source>
          <target state="translated">给定配置变量键或其关联名称（如果已使用 &lt;code&gt;&lt;a href=&quot;#require-2&quot;&gt;ct:require/2&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;require&lt;/code&gt; 语句指定了该值），则返回匹配的值或配置元素。</target>
        </trans-unit>
        <trans-unit id="d23f0c88894f290d5b9b102e091670bac8391f45" translate="yes" xml:space="preserve">
          <source>Returns the maximum number of atoms allowed. This limit can be increased at startup by passing command-line flag &lt;code&gt;+t&lt;/code&gt; to &lt;code&gt;erl(1)&lt;/code&gt;.</source>
          <target state="translated">返回允许的最大原子数。可以在启动时通过将命令行标志 &lt;code&gt;+t&lt;/code&gt; 传递给 &lt;code&gt;erl(1)&lt;/code&gt; 来增加此限制。</target>
        </trans-unit>
        <trans-unit id="d6fb52579f304fb3c577df6aa4ae0e4eb5be1887" translate="yes" xml:space="preserve">
          <source>Returns the maximum number of simultaneously existing ports at the local node as an integer. This limit can be configured at startup by using command-line flag &lt;code&gt;&lt;a href=&quot;erl#+Q&quot;&gt;+Q&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;erl(1)&lt;/code&gt;.</source>
          <target state="translated">以整数形式返回本地节点上同时存在的最大端口数。这个限制可以在启动时通过使用命令行标记被配置成 &lt;code&gt;&lt;a href=&quot;erl#+Q&quot;&gt;+Q&lt;/a&gt;&lt;/code&gt; 在 &lt;code&gt;erl(1)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5b700a394a5c84844c80ba3f172e4544dca86353" translate="yes" xml:space="preserve">
          <source>Returns the maximum number of simultaneously existing processes at the local node. The value is given as an integer. This limit can be configured at startup by using command-line flag &lt;code&gt;&lt;a href=&quot;erl#+P&quot;&gt;+P&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;erl(1)&lt;/code&gt;.</source>
          <target state="translated">返回本地节点上同时存在的最大进程数。该值以整数形式给出。这个限制可以在启动时通过使用命令行标记被配置成 &lt;code&gt;&lt;a href=&quot;erl#+P&quot;&gt;+P&lt;/a&gt;&lt;/code&gt; 在 &lt;code&gt;erl(1)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f4a67f052574e591f5879ac32a955c52623b1d4f" translate="yes" xml:space="preserve">
          <source>Returns the memory size in bytes allocated for memory of type &lt;code&gt;Type&lt;/code&gt;. The argument can also be specified as a list of &lt;code&gt;memory_type()&lt;/code&gt; atoms, in which case a corresponding list of &lt;code&gt;{memory_type(), Size :: integer &amp;gt;= 0}&lt;/code&gt; tuples is returned.</source>
          <target state="translated">返回分配给 &lt;code&gt;Type&lt;/code&gt; 类型的内存的内存大小（以字节为单位）。该参数也可以指定为 &lt;code&gt;memory_type()&lt;/code&gt; 原子的列表，在这种情况下，将返回 &lt;code&gt;{memory_type(), Size :: integer &amp;gt;= 0}&lt;/code&gt; 元组的对应列表。</target>
        </trans-unit>
        <trans-unit id="a00b66debcb037df17cfd893ceba7c9264fed643" translate="yes" xml:space="preserve">
          <source>Returns the merged (union) set of &lt;code&gt;Ordset1&lt;/code&gt; and &lt;code&gt;Ordset2&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;Ordset1&lt;/code&gt; 和 &lt;code&gt;Ordset2&lt;/code&gt; 的合并（联合）集。</target>
        </trans-unit>
        <trans-unit id="43723d218ab77b13f41262ad39332981f13bced9" translate="yes" xml:space="preserve">
          <source>Returns the merged (union) set of &lt;code&gt;Set1&lt;/code&gt; and &lt;code&gt;Set2&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;Set1&lt;/code&gt; 和 &lt;code&gt;Set2&lt;/code&gt; 的合并（联合）集。</target>
        </trans-unit>
        <trans-unit id="82034e6778b6dcba85c02ae63e0f4ed694f64129" translate="yes" xml:space="preserve">
          <source>Returns the merged (union) set of the list of sets.</source>
          <target state="translated">返回集合列表的合并(联合)集。</target>
        </trans-unit>
        <trans-unit id="815b9a219dc48a930a199069152d8a275ab24b40" translate="yes" xml:space="preserve">
          <source>Returns the meta-trace match specification for this function, if it has one. If the function is meta-traced but has no match specification defined, the returned value is &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">返回此函数的元跟踪匹配规范（如果有）。如果该函数是元跟踪的，但未定义匹配规范，则返回值为 &lt;code&gt;[]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c2f5f6a2a6b6469f072401d9cbc9381506bd595a" translate="yes" xml:space="preserve">
          <source>Returns the meta-trace tracer process, port, or trace module for this function, if it has one. If the function is not meta-traced, the returned value is &lt;code&gt;false&lt;/code&gt;. If the function is meta-traced but has once detected that the tracer process is invalid, the returned value is &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">返回此函数的meta-trace跟踪程序进程，端口或跟踪模块（如果有）。如果该函数未进行元跟踪，则返回值为 &lt;code&gt;false&lt;/code&gt; 。如果该函数是元跟踪的，但是一旦检测到跟踪进程无效，则返回的值为 &lt;code&gt;[]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="34e8ff19ef4285929e3a1c678ed923458705440f" translate="yes" xml:space="preserve">
          <source>Returns the modified timing-level (an integer) if modified timing is enabled, otherwise &lt;code&gt;undefined&lt;/code&gt;. For more information about modified timing, see command-line flag &lt;code&gt;+T&lt;/code&gt; in &lt;code&gt;erl(1)&lt;/code&gt;</source>
          <target state="translated">如果启用了修改的时序，则返回修改的时序级别（整数），否则返回 &lt;code&gt;undefined&lt;/code&gt; 。有关修正的定时的更多信息，请参见命令行标志 &lt;code&gt;+T&lt;/code&gt; 在 &lt;code&gt;erl(1)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="26dcf724b8d44245fe738cbd6dd4f75405d78c75" translate="yes" xml:space="preserve">
          <source>Returns the module name and (if present) list of function names declared by an import attribute. The returned value is an atom &lt;code&gt;Module&lt;/code&gt; or a pair &lt;code&gt;{Module, Names}&lt;/code&gt;, where &lt;code&gt;Names&lt;/code&gt; is a list of function names declared as imported from the module named by &lt;code&gt;Module&lt;/code&gt;. We do not guarantee that each name occurs at most once in &lt;code&gt;Names&lt;/code&gt;. The order of listing is not defined.</source>
          <target state="translated">返回由导入属性声明的模块名称和功能名称列表（如果存在）。返回的值是原子 &lt;code&gt;Module&lt;/code&gt; 或一对 &lt;code&gt;{Module, Names}&lt;/code&gt; ，其中 &lt;code&gt;Names&lt;/code&gt; 是声明为从Module命名的 &lt;code&gt;Module&lt;/code&gt; 导入的函数名称的列表。我们不保证每个名称最多只能在 &lt;code&gt;Names&lt;/code&gt; 中出现一次。列表顺序未定义。</target>
        </trans-unit>
        <trans-unit id="e8205eb1a6ab8179a1e53b60fe711b222979681e" translate="yes" xml:space="preserve">
          <source>Returns the module name and possible parameters declared by a module attribute. If the attribute is a plain module declaration such as &lt;code&gt;-module(name)&lt;/code&gt;, the result is the module name. If the attribute is a parameterized module declaration, the result is a tuple containing the module name and a list of the parameter variable names.</source>
          <target state="translated">返回模块名称和模块属性声明的可能参数。如果属性是简单的模块声明，例如 &lt;code&gt;-module(name)&lt;/code&gt; ，则结果是模块名称。如果属性是参数化的模块声明，则结果是一个包含模块名称和参数变量名称列表的元组。</target>
        </trans-unit>
        <trans-unit id="8aed4639b687b004ed924728735d1b26c94586ff" translate="yes" xml:space="preserve">
          <source>Returns the module version or versions. A version is defined by module attribute &lt;code&gt;-vsn(Vsn)&lt;/code&gt;. If this attribute is not specified, the version defaults to the checksum of the module. Notice that if version &lt;code&gt;Vsn&lt;/code&gt; is not a list, it is made into one, that is &lt;code&gt;{ok,{Module,[Vsn]}}&lt;/code&gt; is returned. If there are many &lt;code&gt;-vsn&lt;/code&gt; module attributes, the result is the concatenated list of versions.</source>
          <target state="translated">返回模块版本。版本由模块属性 &lt;code&gt;-vsn(Vsn)&lt;/code&gt; 定义。如果未指定此属性，则版本默认为模块的校验和。请注意，如果版本 &lt;code&gt;Vsn&lt;/code&gt; 不是列表，则将其组合为一个列表，即返回 &lt;code&gt;{ok,{Module,[Vsn]}}&lt;/code&gt; 。如果 &lt;code&gt;-vsn&lt;/code&gt; 模块属性很多，则结果是版本的串联列表。</target>
        </trans-unit>
        <trans-unit id="eee87aeb430afe57bdaf60f72df82adf25882dc2" translate="yes" xml:space="preserve">
          <source>Returns the most relevant information about the connection, ssl options that are undefined will be filtered out. Note that values that affect the security of the connection will only be returned if explicitly requested by connection_information/2.</source>
          <target state="translated">返回连接的最相关信息,未定义的ssl选项将被过滤掉。请注意,只有当连接_information/2明确要求时,才会返回影响连接安全的值。</target>
        </trans-unit>
        <trans-unit id="0c6ee76bdc3c2fc22ebc00215ab57a8039fcf4e1" translate="yes" xml:space="preserve">
          <source>Returns the name and arity of a function definition. The result is a pair &lt;code&gt;{Name, A}&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; represents a function definition &quot;&lt;code&gt;Name(&amp;lt;em&amp;gt;P_1&amp;lt;/em&amp;gt;, ..., &amp;lt;em&amp;gt;P_A&amp;lt;/em&amp;gt;) -&amp;gt; ...&lt;/code&gt;&quot;.</source>
          <target state="translated">返回函数定义的名称和参数。如果 &lt;code&gt;Node&lt;/code&gt; 表示函数定义&amp;ldquo; &lt;code&gt;Name(&amp;lt;em&amp;gt;P_1&amp;lt;/em&amp;gt;, ..., &amp;lt;em&amp;gt;P_A&amp;lt;/em&amp;gt;) -&amp;gt; ...&lt;/code&gt; &amp;rdquo; ，则结果为 &lt;code&gt;{Name, A}&lt;/code&gt; 对。</target>
        </trans-unit>
        <trans-unit id="007ac5d499e30c87a2d58f2fa3dfeea0e04901d0" translate="yes" xml:space="preserve">
          <source>Returns the name and the list of fields of a record declaration attribute. The result is a pair &lt;code&gt;{Name, Fields}&lt;/code&gt;, if &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;-record(Name, {...}).&lt;/code&gt;&quot;, where &lt;code&gt;Fields&lt;/code&gt; is a list of pairs &lt;code&gt;{Label, {Default, Type}}&lt;/code&gt; for each field &quot;&lt;code&gt;Label&lt;/code&gt;&quot;, &quot;&lt;code&gt;Label = &amp;lt;em&amp;gt;Default&amp;lt;/em&amp;gt;&lt;/code&gt;&quot;, &quot;&lt;code&gt;Label :: &amp;lt;em&amp;gt;Type&amp;lt;/em&amp;gt;&lt;/code&gt;&quot;, or &quot;&lt;code&gt;Label = &amp;lt;em&amp;gt;Default&amp;lt;/em&amp;gt; :: &amp;lt;em&amp;gt;Type&amp;lt;/em&amp;gt;&lt;/code&gt;&quot; in the declaration, listed in left-to-right order. If the field has no default-value declaration, the value for &lt;code&gt;Default&lt;/code&gt; will be the atom &lt;code&gt;none&lt;/code&gt;. If the field has no type declaration, the value for &lt;code&gt;Type&lt;/code&gt; will be the atom &lt;code&gt;none&lt;/code&gt;. We do not guarantee that each label occurs at most once in the list.</source>
          <target state="translated">返回记录声明属性的名称和字段列表。如果 &lt;code&gt;Node&lt;/code&gt; 表示&amp;ldquo; &lt;code&gt;-record(Name, {...}).&lt;/code&gt; &amp;rdquo; ，则结果为 &lt;code&gt;{Name, Fields}&lt;/code&gt; 对，其中 &lt;code&gt;Fields&lt;/code&gt; 是每个&amp;ldquo; &lt;code&gt;Label&lt;/code&gt; &amp;rdquo; 标签对 &lt;code&gt;{Label, {Default, Type}}&lt;/code&gt; 对的列表&amp;rdquo;，&amp;ldquo; &lt;code&gt;Label = &amp;lt;em&amp;gt;Default&amp;lt;/em&amp;gt;&lt;/code&gt; &amp;rdquo;，&amp;ldquo; &lt;code&gt;Label :: &amp;lt;em&amp;gt;Type&amp;lt;/em&amp;gt;&lt;/code&gt; &amp;rdquo;或&amp;ldquo; &lt;code&gt;Label = &amp;lt;em&amp;gt;Default&amp;lt;/em&amp;gt; :: &amp;lt;em&amp;gt;Type&amp;lt;/em&amp;gt;&lt;/code&gt; 在声明中，以从左到右的顺序列出。如果该字段没有默认值声明，则 &lt;code&gt;Default&lt;/code&gt; 的值为原子 &lt;code&gt;none&lt;/code&gt; 。如果该字段没有类型声明，则 &lt;code&gt;Type&lt;/code&gt; 的值将是原子 &lt;code&gt;none&lt;/code&gt; 。我们不保证每个标签在列表中最多出现一次。</target>
        </trans-unit>
        <trans-unit id="db29b3ea3ed9d5840c73389f91f74f7b1dc1efde" translate="yes" xml:space="preserve">
          <source>Returns the name and value of a &quot;wild&quot; attribute. The result is the pair &lt;code&gt;{Name, Value}&lt;/code&gt;, if &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;-Name(Value)&lt;/code&gt;&quot;.</source>
          <target state="translated">返回&amp;ldquo;野生&amp;rdquo;属性的名称和值。如果 &lt;code&gt;Node&lt;/code&gt; 表示&amp;ldquo; &lt;code&gt;-Name(Value)&lt;/code&gt; &amp;rdquo; ，则结果为 &lt;code&gt;{Name, Value}&lt;/code&gt; 对。</target>
        </trans-unit>
        <trans-unit id="4cf6bef09de734ae6a52a3c5252fdfc894cdf6db" translate="yes" xml:space="preserve">
          <source>Returns the name of a &lt;code&gt;variable&lt;/code&gt; node as a string.</source>
          <target state="translated">以字符串形式返回 &lt;code&gt;variable&lt;/code&gt; 节点的名称。</target>
        </trans-unit>
        <trans-unit id="e6381a5b40dc5ae4251941dd888e7b01dfd282b2" translate="yes" xml:space="preserve">
          <source>Returns the name of a &lt;code&gt;variable&lt;/code&gt; node as an atom.</source>
          <target state="translated">以原子形式返回 &lt;code&gt;variable&lt;/code&gt; 节点的名称。</target>
        </trans-unit>
        <trans-unit id="ed115c535b0ef6ce3723030585e03ad7536f6174" translate="yes" xml:space="preserve">
          <source>Returns the name of a called function. The result is a representation of the name of the applied function &lt;code&gt;F/A&lt;/code&gt;, if &lt;code&gt;Node&lt;/code&gt; represents a function application &quot;&lt;code&gt;&amp;lt;em&amp;gt;F&amp;lt;/em&amp;gt;(&amp;lt;em&amp;gt;X_1&amp;lt;/em&amp;gt;, ..., &amp;lt;em&amp;gt;X_A&amp;lt;/em&amp;gt;)&lt;/code&gt;&quot;. If the function is not explicitly named (i.e., &lt;code&gt;F&lt;/code&gt; is given by some expression), only the arity &lt;code&gt;A&lt;/code&gt; is returned.</source>
          <target state="translated">返回被调用函数的名称。其结果是施加的函数名的表示 &lt;code&gt;F/A&lt;/code&gt; ，如果 &lt;code&gt;Node&lt;/code&gt; 表示的函数的应用程序&amp;ldquo; &lt;code&gt;&amp;lt;em&amp;gt;F&amp;lt;/em&amp;gt;(&amp;lt;em&amp;gt;X_1&amp;lt;/em&amp;gt;, ..., &amp;lt;em&amp;gt;X_A&amp;lt;/em&amp;gt;)&lt;/code&gt; &amp;rdquo;。如果函数没有明确命名（即 &lt;code&gt;F&lt;/code&gt; 被一些表达式给出），只有元数 &lt;code&gt;A&lt;/code&gt; 返回。</target>
        </trans-unit>
        <trans-unit id="9148d7ebab4a1613559851f9c2444070c5fe576e" translate="yes" xml:space="preserve">
          <source>Returns the name of a used type. The result is a representation of the name of the used pre-defined or local type &lt;code&gt;N/A&lt;/code&gt;, if &lt;code&gt;Node&lt;/code&gt; represents a local (user) type application &quot;&lt;code&gt;&amp;lt;em&amp;gt;N&amp;lt;/em&amp;gt;(&amp;lt;em&amp;gt;T_1&amp;lt;/em&amp;gt;, ..., &amp;lt;em&amp;gt;T_A&amp;lt;/em&amp;gt;)&lt;/code&gt;&quot;, or a representation of the name of the used remote type &lt;code&gt;M:N/A&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; represents a remote user type application &quot;&lt;code&gt;&amp;lt;em&amp;gt;M&amp;lt;/em&amp;gt;:&amp;lt;em&amp;gt;N&amp;lt;/em&amp;gt;(&amp;lt;em&amp;gt;T_1&amp;lt;/em&amp;gt;, ..., &amp;lt;em&amp;gt;T_A&amp;lt;/em&amp;gt;)&lt;/code&gt;&quot;.</source>
          <target state="translated">返回使用类型的名称。如果 &lt;code&gt;Node&lt;/code&gt; 代表本地（用户）类型的应用程序&amp;ldquo; &lt;code&gt;&amp;lt;em&amp;gt;N&amp;lt;/em&amp;gt;(&amp;lt;em&amp;gt;T_1&amp;lt;/em&amp;gt;, ..., &amp;lt;em&amp;gt;T_A&amp;lt;/em&amp;gt;)&lt;/code&gt; &amp;rdquo; ，则结果表示使用的预定义或本地类型 &lt;code&gt;N/A&lt;/code&gt; 的名称。...，&amp;lt;em&amp;gt; T_A &amp;lt;/ em&amp;gt;）或使用的远程类型名称的表示形式 &lt;code&gt;M:N/A&lt;/code&gt; (如果 &lt;code&gt;Node&lt;/code&gt; 表示远程用户类型应用程序&amp;ldquo; &lt;code&gt;&amp;lt;em&amp;gt;M&amp;lt;/em&amp;gt;:&amp;lt;em&amp;gt;N&amp;lt;/em&amp;gt;(&amp;lt;em&amp;gt;T_1&amp;lt;/em&amp;gt;, ..., &amp;lt;em&amp;gt;T_A&amp;lt;/em&amp;gt;)&lt;/code&gt; &amp;ldquo;。</target>
        </trans-unit>
        <trans-unit id="d22a26e82728827ed03c2b39bdc709badd4430f6" translate="yes" xml:space="preserve">
          <source>Returns the name of an &lt;code&gt;operator&lt;/code&gt; node. Note that the name is returned as an atom.</source>
          <target state="translated">返回 &lt;code&gt;operator&lt;/code&gt; 节点的名称。请注意，该名称作为原子返回。</target>
        </trans-unit>
        <trans-unit id="5ff64514f16ec6c034ae6fb62cf75e8cf81a7665" translate="yes" xml:space="preserve">
          <source>Returns the name of an implicit fun expression &quot;&lt;code&gt;fun &amp;lt;em&amp;gt;F&amp;lt;/em&amp;gt;&lt;/code&gt;&quot;. The result is a representation of the function name &lt;code&gt;F&lt;/code&gt;. (Cf. &lt;code&gt;analyze_function_name/1&lt;/code&gt;.)</source>
          <target state="translated">返回隐式有趣表达式&amp;ldquo; &lt;code&gt;fun &amp;lt;em&amp;gt;F&amp;lt;/em&amp;gt;&lt;/code&gt; &amp;rdquo;的名称。结果是函数名称 &lt;code&gt;F&lt;/code&gt; 的表示。（请参阅 &lt;code&gt;analyze_function_name/1&lt;/code&gt; ）</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
