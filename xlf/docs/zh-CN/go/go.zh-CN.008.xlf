<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="go">
    <body>
      <group id="go">
        <trans-unit id="472080cd520700e392bc20718f22b819dfe546bb" translate="yes" xml:space="preserve">
          <source>Rem64 returns the remainder of (hi, lo) divided by y. Rem64 panics for y == 0 (division by zero) but, unlike Div64, it doesn't panic on a quotient overflow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a90835af9526ee1f92955fe811ed706ded57897" translate="yes" xml:space="preserve">
          <source>Remainder returns the IEEE 754 floating-point remainder of x/y.</source>
          <target state="translated">Remainder 返回 x/y 的 IEEE 754 浮点余数。</target>
        </trans-unit>
        <trans-unit id="2dbe95bdd28a0d327a2826a1eef6ea3b725d6372" translate="yes" xml:space="preserve">
          <source>RemoteAddr returns the remote network address.</source>
          <target state="translated">RemoteAddr 返回远程网络地址。</target>
        </trans-unit>
        <trans-unit id="8f214e8a0c44c6dd9e0f980e84dc95f63540d94a" translate="yes" xml:space="preserve">
          <source>RemoteAddr returns the remote network address. The Addr returned is shared by all invocations of RemoteAddr, so do not modify it.</source>
          <target state="translated">RemoteAddr返回远程网络地址。返回的Addr是所有调用RemoteAddr的次数所共享的,所以不要修改它。</target>
        </trans-unit>
        <trans-unit id="90f28a6964f1d3561d308698fa02c4f609406cc1" translate="yes" xml:space="preserve">
          <source>Remove removes and returns the element at index i from the heap. The complexity is O(log n) where n = h.Len().</source>
          <target state="translated">Remove从堆中移除并返回索引i处的元素。复杂度为O(log n),其中n=h.Len()。</target>
        </trans-unit>
        <trans-unit id="63f1e9035000ecf346c434c7cac5dc81f24b1fd9" translate="yes" xml:space="preserve">
          <source>Remove removes e from l if e is an element of list l. It returns the element value e.Value. The element must not be nil.</source>
          <target state="translated">如果e是列表l中的元素,则Remove从l中删除e,并返回元素值e.Value。元素不能是nil。</target>
        </trans-unit>
        <trans-unit id="e157d0f3ede189bf26b7e5070547dae063fd8af3" translate="yes" xml:space="preserve">
          <source>Remove removes the execution stack associated with value from the profile. It is a no-op if the value is not in the profile.</source>
          <target state="translated">移除从配置文件中移除与值相关联的执行栈。如果该值不在配置文件中,则为no-op。</target>
        </trans-unit>
        <trans-unit id="737a090d3844bc76afa279471870777ff484d715" translate="yes" xml:space="preserve">
          <source>Remove removes the named file or (empty) directory. If there is an error, it will be of type *PathError.</source>
          <target state="translated">移除移除命名的文件或(空)目录,如果有错误,它的类型是*PathError。如果有错误,它的类型将是*PathError。</target>
        </trans-unit>
        <trans-unit id="2570a819a5c470bfe2d2d19b6aafa9194f77567b" translate="yes" xml:space="preserve">
          <source>RemoveAll removes any temporary files associated with a Form.</source>
          <target state="translated">RemoveAll删除与表格相关的任何临时文件。</target>
        </trans-unit>
        <trans-unit id="4fad214b70e3f0d318c435f74dd889aca7ef4dce" translate="yes" xml:space="preserve">
          <source>RemoveAll removes path and any children it contains. It removes everything it can but returns the first error it encounters. If the path does not exist, RemoveAll returns nil (no error). If there is an error, it will be of type *PathError.</source>
          <target state="translated">RemoveAll删除路径和它所包含的任何子程序。它删除了所有能删除的内容,但会在遇到第一个错误时返回。如果路径不存在,RemoveAll返回nil(没有错误)。如果有一个错误,它的类型是*PathError。</target>
        </trans-unit>
        <trans-unit id="a4df6c6f5aeda6e3a5e7e46422d0e2c2213a3c07" translate="yes" xml:space="preserve">
          <source>RemoveMultiples sorts an ErrorList and removes all but the first error per line.</source>
          <target state="translated">RemoveMultiples对ErrorList进行排序,并删除每行中除第一个错误以外的所有错误。</target>
        </trans-unit>
        <trans-unit id="c2642ac096483cfaf0dfa99c4fbd35ae36daa1eb" translate="yes" xml:space="preserve">
          <source>Rename renames (moves) oldpath to newpath. If newpath already exists and is not a directory, Rename replaces it. OS-specific restrictions may apply when oldpath and newpath are in different directories. If there is an error, it will be of type *LinkError.</source>
          <target state="translated">Rename 将 oldpath 重命名(移动)到 newpath。如果newpath已经存在并且不是一个目录,那么Rename会替换它。当 oldpath 和 newpath 在不同的目录中时,可能会有操作系统特有的限制。如果有一个错误,它的类型将是*LinkError。</target>
        </trans-unit>
        <trans-unit id="fdd5e93217a24d0127aee52fa57edae8bdb219bf" translate="yes" xml:space="preserve">
          <source>Renegotiation is not defined in TLS 1.3.</source>
          <target state="translated">TLS 1.3中没有定义重新协商。</target>
        </trans-unit>
        <trans-unit id="592ed73cf658d5bb06fa571424af0b382c1c93a8" translate="yes" xml:space="preserve">
          <source>RenegotiationSupport enumerates the different levels of support for TLS renegotiation. TLS renegotiation is the act of performing subsequent handshakes on a connection after the first. This significantly complicates the state machine and has been the source of numerous, subtle security issues. Initiating a renegotiation is not supported, but support for accepting renegotiation requests may be enabled.</source>
          <target state="translated">RenegotiationSupport枚举了对TLS重新协商的不同级别的支持。TLS重新协商是指在第一次握手后对一个连接进行后续的握手。这使得状态机变得非常复杂,并且是许多微妙的安全问题的来源。不支持发起重新协商,但可以支持接受重新协商请求。</target>
        </trans-unit>
        <trans-unit id="659eba121958f4a29fab3d29d61cedc55a892334" translate="yes" xml:space="preserve">
          <source>Repeat</source>
          <target state="translated">Repeat</target>
        </trans-unit>
        <trans-unit id="599d1421a3d35ed387e2145047d3b7a4416981b0" translate="yes" xml:space="preserve">
          <source>Repeat returns a new byte slice consisting of count copies of b.</source>
          <target state="translated">重复返回一个由b的计数拷贝组成的新字节片断。</target>
        </trans-unit>
        <trans-unit id="0843316565926f24e0d78b098353e903c702fd32" translate="yes" xml:space="preserve">
          <source>Repeat returns a new string consisting of count copies of the string s.</source>
          <target state="translated">Repeat 返回一个由字符串 s 的计数副本组成的新字符串。</target>
        </trans-unit>
        <trans-unit id="b93ec95436616b79bd94ec117ace8a646628d209" translate="yes" xml:space="preserve">
          <source>Repetitions:</source>
          <target state="translated">Repetitions:</target>
        </trans-unit>
        <trans-unit id="a7cf7b25a703b308887c7f1d100c4326ef20ac46" translate="yes" xml:space="preserve">
          <source>Replace</source>
          <target state="translated">Replace</target>
        </trans-unit>
        <trans-unit id="14a86b576c43d99c7af38126a244d77d20b45014" translate="yes" xml:space="preserve">
          <source>Replace returns a copy of s with all replacements performed.</source>
          <target state="translated">替换返回s的副本,并进行所有替换。</target>
        </trans-unit>
        <trans-unit id="486c15b931366bdf03143c243ee2b4d97be57dd7" translate="yes" xml:space="preserve">
          <source>Replace returns a copy of the slice s with the first n non-overlapping instances of old replaced by new. If old is empty, it matches at the beginning of the slice and after each UTF-8 sequence, yielding up to k+1 replacements for a k-rune slice. If n &amp;lt; 0, there is no limit on the number of replacements.</source>
          <target state="translated">Replace返回slice的副本，其中s的副本具有old的前n个不重叠的实例，并由new实例替换。如果old为空，则它在切片的开头和每个UTF-8序列之后匹配，最多可产生k个符文切片的k + 1个替换。如果n &amp;lt;0，则替换次数没有限制。</target>
        </trans-unit>
        <trans-unit id="db4d7af1ecfbb4c54ae4d472073701051302c13a" translate="yes" xml:space="preserve">
          <source>Replace returns a copy of the string s with the first n non-overlapping instances of old replaced by new. If old is empty, it matches at the beginning of the string and after each UTF-8 sequence, yielding up to k+1 replacements for a k-rune string. If n &amp;lt; 0, there is no limit on the number of replacements.</source>
          <target state="translated">Replace返回字符串s的副本，其中旧的前n个非重叠实例被新的替换。如果old为空，则它在字符串的开头和每个UTF-8序列之后匹配，最多可产生k个符文字符串的k + 1个替换。如果n &amp;lt;0，则替换次数没有限制。</target>
        </trans-unit>
        <trans-unit id="6eadb25ec304f683e79d867595086d352904b5b3" translate="yes" xml:space="preserve">
          <source>ReplaceAll</source>
          <target state="translated">ReplaceAll</target>
        </trans-unit>
        <trans-unit id="73ca5d06cabf37b075a8580fb5101f87650ad229" translate="yes" xml:space="preserve">
          <source>ReplaceAll returns a copy of src, replacing matches of the Regexp with the replacement text repl. Inside repl, $ signs are interpreted as in Expand, so for instance $1 represents the text of the first submatch.</source>
          <target state="translated">ReplaceAll 返回 src 的副本,用替换文本 repl 替换 Regexp 的匹配。在 repl 中,$ 符号的解释与 Expand 一样,所以例如 $1 代表第一个子匹配的文本。</target>
        </trans-unit>
        <trans-unit id="506447353e7b3822dcf4613a0f93ab71e29d1735" translate="yes" xml:space="preserve">
          <source>ReplaceAll returns a copy of the slice s with all non-overlapping instances of old replaced by new. If old is empty, it matches at the beginning of the slice and after each UTF-8 sequence, yielding up to k+1 replacements for a k-rune slice.</source>
          <target state="translated">ReplaceAll 返回一个片断 s 的副本,其中所有非重叠的 old 实例被 new 替换。如果 old 是空的,它就会在片断的开头和每个 UTF-8 序列之后进行匹配,产生 k-rune 片断的最多 k+1 次替换。</target>
        </trans-unit>
        <trans-unit id="435dc323288417e80211f8927c3695e3ce359257" translate="yes" xml:space="preserve">
          <source>ReplaceAll returns a copy of the string s with all non-overlapping instances of old replaced by new. If old is empty, it matches at the beginning of the string and after each UTF-8 sequence, yielding up to k+1 replacements for a k-rune string.</source>
          <target state="translated">ReplaceAll 返回字符串 s 的副本,并将所有非重叠的 old 实例替换为 new。如果 old 为空,则在字符串的开头和每个 UTF-8 序列之后进行匹配,对 k-rune 字符串进行最多 k+1 次替换。</target>
        </trans-unit>
        <trans-unit id="3d66ecd6da17fab5c8cd96769f904257ef13a398" translate="yes" xml:space="preserve">
          <source>ReplaceAllFunc returns a copy of src in which all matches of the Regexp have been replaced by the return value of function repl applied to the matched byte slice. The replacement returned by repl is substituted directly, without using Expand.</source>
          <target state="translated">ReplaceAllFunc 返回 src 的副本,其中所有匹配的 Regexp 都已被应用于匹配的字节片的函数 repl 的返回值替换。repl返回的替换值是直接替换的,不使用Expand。</target>
        </trans-unit>
        <trans-unit id="2a17131c7994cd05d7daea07beea0ef31e257581" translate="yes" xml:space="preserve">
          <source>ReplaceAllLiteral returns a copy of src, replacing matches of the Regexp with the replacement bytes repl. The replacement repl is substituted directly, without using Expand.</source>
          <target state="translated">ReplaceAllLiteral 返回 src 的副本,将 Regexp 的匹配项替换为替换字节 repl。替换后的 repl 是直接替换的,不使用 Expand。</target>
        </trans-unit>
        <trans-unit id="87232f03b040c072f8f75219db9d85c61ff38e7c" translate="yes" xml:space="preserve">
          <source>ReplaceAllLiteralString returns a copy of src, replacing matches of the Regexp with the replacement string repl. The replacement repl is substituted directly, without using Expand.</source>
          <target state="translated">ReplaceAllLiteralString 返回 src 的副本,用替换字符串 repl 替换 Regexp 的匹配项。替换后的 repl 是直接替换的,不需要使用 Expand。</target>
        </trans-unit>
        <trans-unit id="bef70f919214d0f77e4d3a42c824dfffa5202cf4" translate="yes" xml:space="preserve">
          <source>ReplaceAllString returns a copy of src, replacing matches of the Regexp with the replacement string repl. Inside repl, $ signs are interpreted as in Expand, so for instance $1 represents the text of the first submatch.</source>
          <target state="translated">ReplaceAllString 返回 src 的副本,用替换字符串 repl 替换 Regexp 的匹配。在 repl 中,$ 符号的解释与 Expand 一样,所以例如 $1 代表第一个子匹配的文本。</target>
        </trans-unit>
        <trans-unit id="a3e275047465f9460cb043d0b2093b457293bb06" translate="yes" xml:space="preserve">
          <source>ReplaceAllStringFunc returns a copy of src in which all matches of the Regexp have been replaced by the return value of function repl applied to the matched substring. The replacement returned by repl is substituted directly, without using Expand.</source>
          <target state="translated">ReplaceAllStringFunc 返回 src 的副本,其中所有匹配的 Regexp 都被应用于匹配子串的函数 repl 的返回值替换。repl返回的替换值是直接替换的,不使用Expand。</target>
        </trans-unit>
        <trans-unit id="15e8ece6d83eb79a1b1a825152f49a545610894e" translate="yes" xml:space="preserve">
          <source>Replacer replaces a list of strings with replacements. It is safe for concurrent use by multiple goroutines.</source>
          <target state="translated">Replacer用替换的方式替换一个字符串列表。它对多个goroutine的并发使用是安全的。</target>
        </trans-unit>
        <trans-unit id="5cf96ab71fbe348ef9fe46121c7813b382500496" translate="yes" xml:space="preserve">
          <source>Replacing the sign in the format with a Z triggers the ISO 8601 behavior of printing Z instead of an offset for the UTC zone. Thus:</source>
          <target state="translated">将格式中的符号替换为Z,会触发ISO 8601行为,即打印Z而不是UTC区的偏移。因此:</target>
        </trans-unit>
        <trans-unit id="4b4d5cf4e6e2109de9a6b60e939d3a3fb07ec141" translate="yes" xml:space="preserve">
          <source>ReportAllocs enables malloc statistics for this benchmark. It is equivalent to setting -test.benchmem, but it only affects the benchmark function that calls ReportAllocs.</source>
          <target state="translated">ReportAllocs 启用了这个基准的 malloc 统计。它相当于设置-test.benchmem,但它只影响调用ReportAllocs的基准函数。</target>
        </trans-unit>
        <trans-unit id="ca2f164e5206d2fe2c80e762a870dbd7b150154b" translate="yes" xml:space="preserve">
          <source>ReportMetric adds &quot;n unit&quot; to the reported benchmark results. If the metric is per-iteration, the caller should divide by b.N, and by convention units should end in &quot;/op&quot;. ReportMetric overrides any previously reported value for the same unit. ReportMetric panics if unit is the empty string or if unit contains any whitespace. If unit is a unit normally reported by the benchmark framework itself (such as &quot;allocs/op&quot;), ReportMetric will override that metric. Setting &quot;ns/op&quot; to 0 will suppress that built-in metric.</source>
          <target state="translated">ReportMetric在报告的基准结果中加入 &quot;n单位&quot;。如果度量是每迭代,调用者应该除以b.N,按照惯例单位应该以&quot;/op &quot;结尾。ReportMetric会覆盖之前报告的同一单位的任何值。如果 unit 是空字符串或者 unit 包含任何空格,ReportMetric 会感到恐慌。如果单位是基准框架本身通常报告的单位(如 &quot;allocs/op&quot;),ReportMetric将覆盖该度量。将 &quot;ns/op &quot;设置为0将抑制该内置度量。</target>
        </trans-unit>
        <trans-unit id="bbfd1ef8b32af00f36af4ce56ffc90aaec2642df" translate="yes" xml:space="preserve">
          <source>Representations of a Time value saved by the GobEncode, MarshalBinary, MarshalJSON, and MarshalText methods store the Time.Location's offset, but not the location name. They therefore lose information about Daylight Saving Time.</source>
          <target state="translated">由GobEncode、MarshalBinary、MarshalJSON和MarshalText方法保存的时间值的表示方式存储了Time.Location的偏移量,但没有存储位置名称。因此,它们失去了夏令时的信息。</target>
        </trans-unit>
        <trans-unit id="034f490ecab4d9730ca1969131b6a78b84d524bf" translate="yes" xml:space="preserve">
          <source>Request is a header written before every RPC call. It is used internally but documented here as an aid to debugging, such as when analyzing network traffic.</source>
          <target state="translated">Request是写在每次RPC调用前的头。它在内部使用,但在这里被记录下来,作为调试的辅助工具,例如在分析网络流量时。</target>
        </trans-unit>
        <trans-unit id="7fe490925acca7c7d2d43d098e092cfd78223216" translate="yes" xml:space="preserve">
          <source>Request returns the HTTP request as represented in the current environment. This assumes the current program is being run by a web server in a CGI environment. The returned Request's Body is populated, if applicable.</source>
          <target state="translated">Request返回当前环境下所代表的HTTP请求。这假定当前程序是由CGI环境下的Web服务器运行的。如果适用的话,返回的Request的Body会被填充。</target>
        </trans-unit>
        <trans-unit id="d122cdaacba1573bfe57f160ca47386cbda87132" translate="yes" xml:space="preserve">
          <source>RequestFromMap creates an http.Request from CGI variables. The returned Request's Body field is not populated.</source>
          <target state="translated">RequestFromMap通过CGI变量创建一个http.Request。返回的Request的Body字段不被填充。</target>
        </trans-unit>
        <trans-unit id="27b1cff1ae1ef7bb8ea746c0ebbfe176f573422d" translate="yes" xml:space="preserve">
          <source>RequestURI returns the encoded path?query or opaque?query string that would be used in an HTTP request for u.</source>
          <target state="translated">RequestURI返回编码的路径?query或不透明的?query字符串,该字符串将用于对u的HTTP请求。</target>
        </trans-unit>
        <trans-unit id="3b21fedf00a3371e3f28d17145c5a692c6831e7c" translate="yes" xml:space="preserve">
          <source>Reset changes the timer to expire after duration d. It returns true if the timer had been active, false if the timer had expired or been stopped.</source>
          <target state="translated">如果计时器一直处于活动状态,则返回true;如果计时器过期或停止,则返回false。</target>
        </trans-unit>
        <trans-unit id="1eaa7c3f868073620d91cca86ce9b81e6921a9e0" translate="yes" xml:space="preserve">
          <source>Reset clears the state of the Writer z such that it is equivalent to its initial state from NewWriterLevel or NewWriterLevelDict, but instead writing to w.</source>
          <target state="translated">Reset清除Writer z的状态,使其相当于NewWriterLevel或NewWriterLevelDict的初始状态,而是写到w。</target>
        </trans-unit>
        <trans-unit id="d65a3d23577a5069af398a8c007957f5676a5eea" translate="yes" xml:space="preserve">
          <source>Reset discards all bytes added to h. (The seed remains the same.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fad0a06171db3d325d00805f309209741be9985" translate="yes" xml:space="preserve">
          <source>Reset discards any buffered data, resets all state, and switches the buffered reader to read from r.</source>
          <target state="translated">Reset丢弃任何缓冲数据,重置所有状态,并将缓冲读卡器切换为从r读取。</target>
        </trans-unit>
        <trans-unit id="ddec4089b2023a9f5966b6899a6d86b3c6ba6d0e" translate="yes" xml:space="preserve">
          <source>Reset discards any unflushed buffered data, clears any error, and resets b to write its output to w.</source>
          <target state="translated">重置会丢弃任何未刷新的缓冲数据,清除任何错误,并重置b将其输出写入w。</target>
        </trans-unit>
        <trans-unit id="0f6193249698e8c1cc414024f184ff9d63a0b799" translate="yes" xml:space="preserve">
          <source>Reset discards the Reader z's state and makes it equivalent to the result of its original state from NewReader, but reading from r instead. This permits reusing a Reader rather than allocating a new one.</source>
          <target state="translated">重置丢弃Reader z的状态,并使其等同于NewReader的原始状态的结果,但从r读取。这允许重复使用一个Reader,而不是分配一个新的Reader。</target>
        </trans-unit>
        <trans-unit id="d8366944feb20881339d2bc39051aaaff11ba2e7" translate="yes" xml:space="preserve">
          <source>Reset discards the Writer z's state and makes it equivalent to the result of its original state from NewWriter or NewWriterLevel, but writing to w instead. This permits reusing a Writer rather than allocating a new one.</source>
          <target state="translated">重置丢弃Writer z的状态,使其等同于NewWriter或NewWriterLevel的原始状态的结果,但写到w。这允许重复使用一个Writer,而不是分配一个新的Writer。</target>
        </trans-unit>
        <trans-unit id="1192ba3cfdd5644c337b189600cac9374ed9f399" translate="yes" xml:space="preserve">
          <source>Reset discards the writer's state and makes it equivalent to the result of NewWriter or NewWriterDict called with dst and w's level and dictionary.</source>
          <target state="translated">Reset会丢弃writer的状态,并使其等同于用dst和w的级别和字典调用NewWriter或NewWriterDict的结果。</target>
        </trans-unit>
        <trans-unit id="f44016b53cb6e5efb7b07f97bdd7a58a3f9acd27" translate="yes" xml:space="preserve">
          <source>Reset repositions the line table reader at the beginning of the line table.</source>
          <target state="translated">重置将行表阅读器重新放置在行表的开头。</target>
        </trans-unit>
        <trans-unit id="fc5e1e89a723101da37c5f7cdde61464338d0205" translate="yes" xml:space="preserve">
          <source>Reset resets an ErrorList to no errors.</source>
          <target state="translated">Reset将ErrorList重置为无错误。</target>
        </trans-unit>
        <trans-unit id="06a254b1693f024953c4504eb0ab4b1efccfe485" translate="yes" xml:space="preserve">
          <source>Reset resets the Builder to be empty.</source>
          <target state="translated">重置将生成器重置为空。</target>
        </trans-unit>
        <trans-unit id="e5afd25b08aea0811ed90f3f30191e4fc43f9115" translate="yes" xml:space="preserve">
          <source>Reset resets the Reader to be reading from b.</source>
          <target state="translated">重置将阅读器重置为从b处读取。</target>
        </trans-unit>
        <trans-unit id="15670331b1298dacd5ea205176b1269922b3d2b5" translate="yes" xml:space="preserve">
          <source>Reset resets the Reader to be reading from s.</source>
          <target state="translated">重置将阅读器重置为从s读取。</target>
        </trans-unit>
        <trans-unit id="170c10bab8e54e5cf030eb670497e5196563378e" translate="yes" xml:space="preserve">
          <source>Reset resets the buffer to be empty, but it retains the underlying storage for use by future writes. Reset is the same as Truncate(0).</source>
          <target state="translated">Reset将缓冲区重置为空,但它保留了底层的存储空间,供将来的写入使用。重置与Truncate(0)相同。</target>
        </trans-unit>
        <trans-unit id="1cf78ba3d25ca4518fc926a9a64e46d873a5c2b0" translate="yes" xml:space="preserve">
          <source>Reset sends the RSET command to the server, aborting the current mail transaction.</source>
          <target state="translated">重置将RSET命令发送到服务器,中止当前的邮件事务。</target>
        </trans-unit>
        <trans-unit id="a8bd7c2aca0a58855a450ef3c393b7f8dd845541" translate="yes" xml:space="preserve">
          <source>Reset should be invoked only on stopped or expired timers with drained channels. If a program has already received a value from t.C, the timer is known to have expired and the channel drained, so t.Reset can be used directly. If a program has not yet received a value from t.C, however, the timer must be stopped and&amp;mdash;if Stop reports that the timer expired before being stopped&amp;mdash;the channel explicitly drained:</source>
          <target state="translated">只能在通道耗尽的停止或到期计时器上调用复位。如果程序已经从tC接收到一个值，则已知计时器已到期且通道已耗尽，因此可以直接使用t.Reset。但是，如果程序尚未从tC接收到值，则必须停止计时器，并且-如果Stop报告计时器在停止之前已到期，则该通道将被清空：</target>
        </trans-unit>
        <trans-unit id="772cf6a4a9219e97ce203a7287641add064eb314" translate="yes" xml:space="preserve">
          <source>Reset stops a ticker and resets its period to the specified duration. The next tick will arrive after the new period elapses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c62db3fae7c3e711fbf34aadc1b1afc1b9253c1a" translate="yes" xml:space="preserve">
          <source>Reset undoes the effect of any prior calls to Notify for the provided signals. If no signals are provided, all signal handlers will be reset.</source>
          <target state="translated">重置会撤销之前对所提供信号的任何通知调用的效果。如果没有提供信号,所有信号处理程序将被重置。</target>
        </trans-unit>
        <trans-unit id="27fa1b9793c51dfd946a69a14c0ddb57c10ad547" translate="yes" xml:space="preserve">
          <source>Reset zeros the key data and makes the Cipher unusable.</source>
          <target state="translated">重置将密钥数据清零,使密码无法使用。</target>
        </trans-unit>
        <trans-unit id="f310c59e5a0084054073df7b5f573d812cdd0fd8" translate="yes" xml:space="preserve">
          <source>ResetTimer zeroes the elapsed benchmark time and memory allocation counters and deletes user-reported metrics. It does not affect whether the timer is running.</source>
          <target state="translated">ResetTimer 将经过的基准时间和内存分配计数器归零,并删除用户报告的指标。它不影响定时器是否在运行。</target>
        </trans-unit>
        <trans-unit id="33ee9712ca346c749995f4d74bcd18ae6c0b0650" translate="yes" xml:space="preserve">
          <source>Resetter resets a ReadCloser returned by NewReader or NewReaderDict to switch to a new underlying Reader. This permits reusing a ReadCloser instead of allocating a new one.</source>
          <target state="translated">Resetter重置由NewReader或NewReaderDict返回的ReadCloser,以切换到一个新的底层Reader。这允许重复使用一个ReadCloser,而不是分配一个新的ReadCloser。</target>
        </trans-unit>
        <trans-unit id="7007d754cde94120e44343157ab76b14a831c26c" translate="yes" xml:space="preserve">
          <source>ResolveIPAddr returns an address of IP end point.</source>
          <target state="translated">ResolveIPAddr返回一个IP端点的地址。</target>
        </trans-unit>
        <trans-unit id="07b69306928a5a3a0b8c2314c2531e10de93c9cf" translate="yes" xml:space="preserve">
          <source>ResolveReference resolves a URI reference to an absolute URI from an absolute base URI u, per RFC 3986 Section 5.2. The URI reference may be relative or absolute. ResolveReference always returns a new URL instance, even if the returned URL is identical to either the base or reference. If ref is an absolute URL, then ResolveReference ignores base and returns a copy of ref.</source>
          <target state="translated">ResolveReference 根据 RFC 3986 第 5.2 节的规定,将 URI 引用从一个绝对的基本 URI u 解析为一个绝对的 URI。URI引用可以是相对的或绝对的。ResolveReference 总是返回一个新的 URL 实例,即使返回的 URL 与 base 或 reference 相同。如果ref是一个绝对的URL,那么ResolveReference会忽略base,并返回ref的副本。</target>
        </trans-unit>
        <trans-unit id="3273804861eaad79df80c3d22cf109398eb595c4" translate="yes" xml:space="preserve">
          <source>ResolveTCPAddr returns an address of TCP end point.</source>
          <target state="translated">ResolveTCPAddr 返回 TCP 端点的地址。</target>
        </trans-unit>
        <trans-unit id="d940491c716336f4aaf080189bdb0c28cf1b6ec4" translate="yes" xml:space="preserve">
          <source>ResolveUDPAddr returns an address of UDP end point.</source>
          <target state="translated">ResolveUDPAddr返回UDP端点的地址。</target>
        </trans-unit>
        <trans-unit id="2928800c224397786b541e4886439dcdc0ecfc66" translate="yes" xml:space="preserve">
          <source>ResolveUnixAddr returns an address of Unix domain socket end point.</source>
          <target state="translated">ResolveUnixAddr返回Unix域套接字端点的地址。</target>
        </trans-unit>
        <trans-unit id="3dd3f1ec80ee28cb3dd53e5b932daca2d3fdd951" translate="yes" xml:space="preserve">
          <source>Response is a header written before every RPC return. It is used internally but documented here as an aid to debugging, such as when analyzing network traffic.</source>
          <target state="translated">Response是写在每个RPC返回之前的头。它在内部使用,但在这里被记录下来,作为调试的辅助工具,例如在分析网络流量时。</target>
        </trans-unit>
        <trans-unit id="78fa8e7076763a708a759f35e6fdf9c8c2792c3e" translate="yes" xml:space="preserve">
          <source>Response represents the response from an HTTP request.</source>
          <target state="translated">Response表示HTTP请求的响应。</target>
        </trans-unit>
        <trans-unit id="2c870a02afd7772b1a5c1104af64d975949d9837" translate="yes" xml:space="preserve">
          <source>ResponseRecorder</source>
          <target state="translated">ResponseRecorder</target>
        </trans-unit>
        <trans-unit id="294d856644ce3293fbb784b42f79f661b3d60595" translate="yes" xml:space="preserve">
          <source>ResponseRecorder is an implementation of http.ResponseWriter that records its mutations for later inspection in tests.</source>
          <target state="translated">ResponseRecorder 是 http.ResponseWriter 的一个实现,它记录了它的突变,以便以后在测试中检查。</target>
        </trans-unit>
        <trans-unit id="d0d0da2350df38e89f18eec0c8c277a390ef8032" translate="yes" xml:space="preserve">
          <source>ResponseWriter (Trailers)</source>
          <target state="translated">回應作家 (預告)</target>
        </trans-unit>
        <trans-unit id="3f9f60a3d963394dba2b9af5ad21d7cf9b8efc40" translate="yes" xml:space="preserve">
          <source>Responses with status codes in the 1xx range are either handled automatically (100 expect-continue) or ignored. The one exception is HTTP status code 101 (Switching Protocols), which is considered a terminal status and returned by RoundTrip. To see the ignored 1xx responses, use the httptrace trace package's ClientTrace.Got1xxResponse.</source>
          <target state="translated">状态码在1xx范围内的响应,要么自动处理(100期待-继续),要么忽略。唯一的例外是HTTP状态码101(Switching Protocols),它被认为是终端状态,并由RoundTrip返回。要查看被忽略的1xx响应,请使用httptrace跟踪包的ClientTrace.Got1xxResponse。</target>
        </trans-unit>
        <trans-unit id="c92c6b4dd981d78fca3ec0b5b13d22c3c7e3c9ff" translate="yes" xml:space="preserve">
          <source>Result is the result of a query execution.</source>
          <target state="translated">结果是查询执行的结果。</target>
        </trans-unit>
        <trans-unit id="1f4d7bab508f22f797e449d5f6998b16e4434cbe" translate="yes" xml:space="preserve">
          <source>Result must only be called after the handler has finished running.</source>
          <target state="translated">Result必须在处理程序运行结束后才能被调用。</target>
        </trans-unit>
        <trans-unit id="1b5febf7558713f1ecb2fbd2c227fbc55af9bbed" translate="yes" xml:space="preserve">
          <source>Result returns the response generated by the handler.</source>
          <target state="translated">Result返回处理程序产生的响应。</target>
        </trans-unit>
        <trans-unit id="2d5559e8af761fd8963b92d10b52cc8627380cc7" translate="yes" xml:space="preserve">
          <source>ResultNoRows is a pre-defined Result for drivers to return when a DDL command (such as a CREATE TABLE) succeeds. It returns an error for both LastInsertId and RowsAffected.</source>
          <target state="translated">ResultNoRows是一个预先定义的结果,当DDL命令(如CREATE TABLE)成功时,驱动程序将返回这个结果。它对LastInsertId和RowsAffected都返回一个错误。</target>
        </trans-unit>
        <trans-unit id="c3b838adfac99fd155c663831ad38556581e0407" translate="yes" xml:space="preserve">
          <source>Results returns the results of signature s, or nil.</source>
          <target state="translated">结果返回签名s的结果,或者nil。</target>
        </trans-unit>
        <trans-unit id="962f14cb7eca51d5151fcfbeb4ab3ed937db54aa" translate="yes" xml:space="preserve">
          <source>Return the most recent call to Scan as a []byte.</source>
          <target state="translated">以[]字节的形式返回最近一次对Scan的调用。</target>
        </trans-unit>
        <trans-unit id="57f9933768794f845d000833d367d5698393211d" translate="yes" xml:space="preserve">
          <source>Reverse</source>
          <target state="translated">Reverse</target>
        </trans-unit>
        <trans-unit id="902e55a122fa4891a6dae083e18230ea968dc9a3" translate="yes" xml:space="preserve">
          <source>Reverse returns the reverse order for data.</source>
          <target state="translated">Reverse返回数据的相反顺序。</target>
        </trans-unit>
        <trans-unit id="78b0b4cb759dec2da3c6713767fbf6f4bc040c4d" translate="yes" xml:space="preserve">
          <source>Reverse returns the value of x with its bits in reversed order.</source>
          <target state="translated">反向返回x的值,并将其位数反过来。</target>
        </trans-unit>
        <trans-unit id="92de4737778eb41e55ca2f7a627a47fd6ba4a889" translate="yes" xml:space="preserve">
          <source>Reverse16</source>
          <target state="translated">Reverse16</target>
        </trans-unit>
        <trans-unit id="b383f837c66d7bdba479cd898a8ff90df6a54bdc" translate="yes" xml:space="preserve">
          <source>Reverse16 returns the value of x with its bits in reversed order.</source>
          <target state="translated">Reverse16返回x的值,其位数的顺序是相反的。</target>
        </trans-unit>
        <trans-unit id="bc5bc5fb62f24a53fcf7486ea47cb526c49ed16b" translate="yes" xml:space="preserve">
          <source>Reverse32</source>
          <target state="translated">Reverse32</target>
        </trans-unit>
        <trans-unit id="31e983ab5d2fdae281f62da27af16c6410c88366" translate="yes" xml:space="preserve">
          <source>Reverse32 returns the value of x with its bits in reversed order.</source>
          <target state="translated">Reverse32返回x的值,其位数的顺序是相反的。</target>
        </trans-unit>
        <trans-unit id="4b8d738bc3f5b572852bef49d9d1b74649451478" translate="yes" xml:space="preserve">
          <source>Reverse64</source>
          <target state="translated">Reverse64</target>
        </trans-unit>
        <trans-unit id="0a95ddc6b008b1c60668050345ad2bbd0048d26d" translate="yes" xml:space="preserve">
          <source>Reverse64 returns the value of x with its bits in reversed order.</source>
          <target state="translated">Reverse64返回x的值,其位数顺序相反。</target>
        </trans-unit>
        <trans-unit id="8b7d623b04231c73d009937cc199213fab60a116" translate="yes" xml:space="preserve">
          <source>Reverse8</source>
          <target state="translated">Reverse8</target>
        </trans-unit>
        <trans-unit id="4e2cfa80f1f3211b8d7b8f97b9c866dc8e5602ee" translate="yes" xml:space="preserve">
          <source>Reverse8 returns the value of x with its bits in reversed order.</source>
          <target state="translated">Reverse8返回x的值,其位数的顺序是相反的。</target>
        </trans-unit>
        <trans-unit id="be39e968e6f8b02161cf145a91c2242f8ac3e738" translate="yes" xml:space="preserve">
          <source>ReverseBytes returns the value of x with its bytes in reversed order.</source>
          <target state="translated">ReverseBytes返回x的值,并将其字节顺序颠倒。</target>
        </trans-unit>
        <trans-unit id="b3a8220fbdce3c882a295efbc513cc8d73cb1a7a" translate="yes" xml:space="preserve">
          <source>ReverseBytes16</source>
          <target state="translated">ReverseBytes16</target>
        </trans-unit>
        <trans-unit id="2a7c652af5267d559395a2d601cef862d0dc08f3" translate="yes" xml:space="preserve">
          <source>ReverseBytes16 returns the value of x with its bytes in reversed order.</source>
          <target state="translated">ReverseBytes16返回x的值,并以相反的顺序返回其字节。</target>
        </trans-unit>
        <trans-unit id="0b3b6869428b45a4008a611a88e1d858c7f82ca5" translate="yes" xml:space="preserve">
          <source>ReverseBytes32</source>
          <target state="translated">ReverseBytes32</target>
        </trans-unit>
        <trans-unit id="bd4bbc4dc35b34c8851580c4ed26f1553540d805" translate="yes" xml:space="preserve">
          <source>ReverseBytes32 returns the value of x with its bytes in reversed order.</source>
          <target state="translated">ReverseBytes32返回x的值,并以相反的顺序返回其字节。</target>
        </trans-unit>
        <trans-unit id="27b3c718307e25ebd0df6355d5ba2181fe72066f" translate="yes" xml:space="preserve">
          <source>ReverseBytes64</source>
          <target state="translated">ReverseBytes64</target>
        </trans-unit>
        <trans-unit id="2bfe4d5fab882bedb4ed52db5659be4b630cad79" translate="yes" xml:space="preserve">
          <source>ReverseBytes64 returns the value of x with its bytes in reversed order.</source>
          <target state="translated">ReverseBytes64返回x的值,并以相反的顺序返回其字节。</target>
        </trans-unit>
        <trans-unit id="08e888d81afdf833be45fe65662c8198e86a5832" translate="yes" xml:space="preserve">
          <source>ReverseProxy</source>
          <target state="translated">ReverseProxy</target>
        </trans-unit>
        <trans-unit id="c3cde67321667db5b0ff2afa430c2b271723997c" translate="yes" xml:space="preserve">
          <source>ReverseProxy by default sets the client IP as the value of the X-Forwarded-For header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bfcf9ccffddea8678782d891a9bd8387a2cdb0f" translate="yes" xml:space="preserve">
          <source>ReverseProxy is an HTTP Handler that takes an incoming request and sends it to another server, proxying the response back to the client.</source>
          <target state="translated">ReverseProxy是一个HTTP处理程序,它接收一个传入的请求并将其发送到另一个服务器,将响应代理回客户端。</target>
        </trans-unit>
        <trans-unit id="4f8dffba226130f5ed0c1d019f2b7969133c43c4" translate="yes" xml:space="preserve">
          <source>RevocationList contains the fields used to create an X.509 v2 Certificate Revocation list with CreateRevocationList.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36bf57062b0695082d5c3ab1cea707663eb8d688" translate="yes" xml:space="preserve">
          <source>RevokedCertificate represents the ASN.1 structure of the same name. See RFC 5280, section 5.1.</source>
          <target state="translated">RevokedCertificate表示同名的ASN.1结构。参见RFC 5280,5.1节。</target>
        </trans-unit>
        <trans-unit id="1dbb08e5127fb312affa46a438163965fc7ebf23" translate="yes" xml:space="preserve">
          <source>RightAlign returns a slice where the padding bits are at the beginning. The slice may share memory with the BitString.</source>
          <target state="translated">RightAlign 返回一个填充位在开头的分片。该分片可以与BitString共享内存。</target>
        </trans-unit>
        <trans-unit id="86681d4d51562a20e98b2b7ff856763c761235e0" translate="yes" xml:space="preserve">
          <source>Ring.Do</source>
          <target state="translated">Ring.Do</target>
        </trans-unit>
        <trans-unit id="c3de3d65f1bf374c9d07b4dfcda75c2206063f2b" translate="yes" xml:space="preserve">
          <source>Ring.Len</source>
          <target state="translated">Ring.Len</target>
        </trans-unit>
        <trans-unit id="ef738e03a934b3cea0ed8b70a7545fe51b5d290c" translate="yes" xml:space="preserve">
          <source>Ring.Link</source>
          <target state="translated">Ring.Link</target>
        </trans-unit>
        <trans-unit id="7fd8ab417197e9dee9db859427b5d7f544203d42" translate="yes" xml:space="preserve">
          <source>Ring.Move</source>
          <target state="translated">Ring.Move</target>
        </trans-unit>
        <trans-unit id="0851656843c7ec1e30ec39e3f0f5e84ae6a75fcd" translate="yes" xml:space="preserve">
          <source>Ring.Next</source>
          <target state="translated">Ring.Next</target>
        </trans-unit>
        <trans-unit id="61b297ba7e636a60d4221303b63f5d9cc41422d9" translate="yes" xml:space="preserve">
          <source>Ring.Prev</source>
          <target state="translated">Ring.Prev</target>
        </trans-unit>
        <trans-unit id="d7d905b26d8d9e9d4ae570e8e8161e643805b969" translate="yes" xml:space="preserve">
          <source>Ring.Unlink</source>
          <target state="translated">Ring.Unlink</target>
        </trans-unit>
        <trans-unit id="1a9da6de639f9bb2699bfe42d158358d7d6e5dc9" translate="yes" xml:space="preserve">
          <source>Rollback aborts the transaction.</source>
          <target state="translated">回滚中止交易。</target>
        </trans-unit>
        <trans-unit id="b1d06a98df3a5bd7537bc07af57648fbe210073d" translate="yes" xml:space="preserve">
          <source>RotateLeft returns the value of x rotated left by (k mod UintSize) bits. To rotate x right by k bits, call RotateLeft(x, -k).</source>
          <target state="translated">RotateLeft 返回 x 向左旋转 (k mod UintSize)位的值。要将 x 向右旋转 k 位,调用 RotateLeft(x,-k)。</target>
        </trans-unit>
        <trans-unit id="761f01b6be4cc6f5188ea10477b0dc7cd1161d8c" translate="yes" xml:space="preserve">
          <source>RotateLeft16</source>
          <target state="translated">RotateLeft16</target>
        </trans-unit>
        <trans-unit id="d66c06db349417bfddd607ad14fa9bf5a5638d62" translate="yes" xml:space="preserve">
          <source>RotateLeft16 returns the value of x rotated left by (k mod 16) bits. To rotate x right by k bits, call RotateLeft16(x, -k).</source>
          <target state="translated">RotateLeft16 返回 x 向左旋转了 (k mod 16)位的值。要将x向右旋转k位,调用RotateLeft16(x,-k)。</target>
        </trans-unit>
        <trans-unit id="60bcbc4fb2bbce0ec43078cea8be747ff9281e19" translate="yes" xml:space="preserve">
          <source>RotateLeft32</source>
          <target state="translated">RotateLeft32</target>
        </trans-unit>
        <trans-unit id="c60016746c6ad6b197ec5092101071fc87f7021a" translate="yes" xml:space="preserve">
          <source>RotateLeft32 returns the value of x rotated left by (k mod 32) bits. To rotate x right by k bits, call RotateLeft32(x, -k).</source>
          <target state="translated">RotateLeft32 返回 x 向左旋转了 (k mod 32)位的值。要将x向右旋转k位,调用RotateLeft32(x,-k)。</target>
        </trans-unit>
        <trans-unit id="6dc01719e1f445b08ee2ebc7136ef6822502932a" translate="yes" xml:space="preserve">
          <source>RotateLeft64</source>
          <target state="translated">RotateLeft64</target>
        </trans-unit>
        <trans-unit id="c0ff555090cb3bc9a90815cda1f96719ce3d40be" translate="yes" xml:space="preserve">
          <source>RotateLeft64 returns the value of x rotated left by (k mod 64) bits. To rotate x right by k bits, call RotateLeft64(x, -k).</source>
          <target state="translated">RotateLeft64 返回 x 向左旋转了 (k mod 64)位的值。要将x向右旋转k位,调用RotateLeft64(x,-k)。</target>
        </trans-unit>
        <trans-unit id="fdef633274845494879cbf0afeac8f854e3ba879" translate="yes" xml:space="preserve">
          <source>RotateLeft8</source>
          <target state="translated">RotateLeft8</target>
        </trans-unit>
        <trans-unit id="26ebe86c57d1d128d3a27bb9fd4358573f445da7" translate="yes" xml:space="preserve">
          <source>RotateLeft8 returns the value of x rotated left by (k mod 8) bits. To rotate x right by k bits, call RotateLeft8(x, -k).</source>
          <target state="translated">RotateLeft8 返回 x 向左旋转了 (k mod 8)位的值。要将x向右旋转k位,调用RotateLeft8(x,-k)。</target>
        </trans-unit>
        <trans-unit id="ec7b59833520bb2b53fd4d44b3d581720b55c442" translate="yes" xml:space="preserve">
          <source>Round</source>
          <target state="translated">Round</target>
        </trans-unit>
        <trans-unit id="000868eccd1432acf77f6949a96b4844d59b1fce" translate="yes" xml:space="preserve">
          <source>Round operates on the time as an absolute duration since the zero time; it does not operate on the presentation form of the time. Thus, Round(Hour) may return a time with a non-zero minute, depending on the time's Location.</source>
          <target state="translated">Round对时间的操作是指从零点开始的绝对持续时间;它不对时间的表现形式进行操作。因此,Round(Hour)可能会返回一个非零分钟的时间,这取决于时间的位置。</target>
        </trans-unit>
        <trans-unit id="b948ea2f553b57093a9dabad37c8d45230573ca2" translate="yes" xml:space="preserve">
          <source>Round returns the nearest integer, rounding half away from zero.</source>
          <target state="translated">Round 返回最接近的整数,从零开始四舍五入。</target>
        </trans-unit>
        <trans-unit id="09b508228bc941d31ad58d40d683a414360f74b0" translate="yes" xml:space="preserve">
          <source>Round returns the result of rounding d to the nearest multiple of m. The rounding behavior for halfway values is to round away from zero. If the result exceeds the maximum (or minimum) value that can be stored in a Duration, Round returns the maximum (or minimum) duration. If m &amp;lt;= 0, Round returns d unchanged.</source>
          <target state="translated">舍入运算将d舍入到m的最接近倍数的结果。中途值的舍入行为是从零舍入。如果结果超过可以在&amp;ldquo;持续时间&amp;rdquo;中存储的最大（或最小）值，则&amp;ldquo;回合&amp;rdquo;返回最大（或最小）持续时间。如果m &amp;lt;= 0，则Round返回d不变。</target>
        </trans-unit>
        <trans-unit id="46948003a0f2b7ed98f113a7c6a561fd40784b4d" translate="yes" xml:space="preserve">
          <source>Round returns the result of rounding t to the nearest multiple of d (since the zero time). The rounding behavior for halfway values is to round up. If d &amp;lt;= 0, Round returns t stripped of any monotonic clock reading but otherwise unchanged.</source>
          <target state="translated">舍入运算将t舍入到d的最接近倍数（从零开始）的结果。中途值的舍入行为是向上舍入。如果d &amp;lt;= 0，则Round返回t，去除了任何单调时钟读数，但未更改。</target>
        </trans-unit>
        <trans-unit id="bd8a6768cc1684f5b293529415380ca31ee44b5b" translate="yes" xml:space="preserve">
          <source>RoundToEven</source>
          <target state="translated">RoundToEven</target>
        </trans-unit>
        <trans-unit id="721a33257fa34d285056f870605bb51c3b9a00a0" translate="yes" xml:space="preserve">
          <source>RoundToEven returns the nearest integer, rounding ties to even.</source>
          <target state="translated">RoundToEven 返回最接近的整数,四舍五入为偶数。</target>
        </trans-unit>
        <trans-unit id="31fa67ead55ff94cd48d5e48d25e6ab30cbcca05" translate="yes" xml:space="preserve">
          <source>RoundTrip implements the RoundTripper interface.</source>
          <target state="translated">RoundTrip实现了RoundTripper接口。</target>
        </trans-unit>
        <trans-unit id="aef4d01bc99ecc3d07fd6dbc9d4b0127aaa57cd4" translate="yes" xml:space="preserve">
          <source>RoundTripper is an interface representing the ability to execute a single HTTP transaction, obtaining the Response for a given Request.</source>
          <target state="translated">RoundTripper是一个接口,代表执行单个HTTP事务的能力,为给定的Request获取Response。</target>
        </trans-unit>
        <trans-unit id="14ab950eb98caa165c8e3b8a580c9eeda3c87fc0" translate="yes" xml:space="preserve">
          <source>RoundingMode</source>
          <target state="translated">RoundingMode</target>
        </trans-unit>
        <trans-unit id="e0448d85da96897c679953ae05b1d33acf337b63" translate="yes" xml:space="preserve">
          <source>RoundingMode determines how a Float value is rounded to the desired precision. Rounding may change the Float value; the rounding error is described by the Float's Accuracy.</source>
          <target state="translated">RoundingMode决定如何将Float值四舍五入到所需精度。四舍五入可能会改变Float值;四舍五入错误由Float的Accuracy描述。</target>
        </trans-unit>
        <trans-unit id="b1898ce5b72c9fe9acbd96617227555ca58001da" translate="yes" xml:space="preserve">
          <source>Row is the result of calling QueryRow to select a single row.</source>
          <target state="translated">Row是调用QueryRow选择单行的结果。</target>
        </trans-unit>
        <trans-unit id="52d0b35277ee4b2b66ec4016620c658d99c7b57a" translate="yes" xml:space="preserve">
          <source>Rows</source>
          <target state="translated">Rows</target>
        </trans-unit>
        <trans-unit id="40bc6f7b056d7162e958bb7c34f2141aad10960f" translate="yes" xml:space="preserve">
          <source>Rows are always in order of increasing entry.Address, but entry.Line may go forward or backward.</source>
          <target state="translated">行总是按递增的顺序录入.地址,但录入.行可以向前或向后。</target>
        </trans-unit>
        <trans-unit id="136224253b0a1cede998fd8310adbf37059cd8b9" translate="yes" xml:space="preserve">
          <source>Rows is an iterator over an executed query's results.</source>
          <target state="translated">Rows是执行查询结果的迭代器。</target>
        </trans-unit>
        <trans-unit id="5bf0da8d1e143c858970004b1d4e4fc2c3190c46" translate="yes" xml:space="preserve">
          <source>Rows is the result of a query. Its cursor starts before the first row of the result set. Use Next to advance from row to row.</source>
          <target state="translated">Rows是一个查询的结果。它的光标开始于结果集的第一行之前。使用 &quot;下一步 &quot;可以从一行前进到另一行。</target>
        </trans-unit>
        <trans-unit id="c7e43ca77abe23e5cf32ea7c3a359b9f55d612a0" translate="yes" xml:space="preserve">
          <source>RowsAffected implements Result for an INSERT or UPDATE operation which mutates a number of rows.</source>
          <target state="translated">RowsAffected实现了一个INSERT或UPDATE操作的Result,该操作会对一些行进行突变。</target>
        </trans-unit>
        <trans-unit id="ef8ccf0ef3b6629b0198be9228cd5d4456951fd1" translate="yes" xml:space="preserve">
          <source>RowsColumnTypeDatabaseTypeName may be implemented by Rows. It should return the database system type name without the length. Type names should be uppercase. Examples of returned types: &quot;VARCHAR&quot;, &quot;NVARCHAR&quot;, &quot;VARCHAR2&quot;, &quot;CHAR&quot;, &quot;TEXT&quot;, &quot;DECIMAL&quot;, &quot;SMALLINT&quot;, &quot;INT&quot;, &quot;BIGINT&quot;, &quot;BOOL&quot;, &quot;[]BIGINT&quot;, &quot;JSONB&quot;, &quot;XML&quot;, &quot;TIMESTAMP&quot;.</source>
          <target state="translated">RowsColumnTypeDatabaseTypeName可以由Rows实现。它应该返回不含长度的数据库系统类型名。类型名应该是大写的。返回类型的例子。&quot;VARCHAR&quot;、&quot;NVARCHAR&quot;、&quot;VARCHAR2&quot;、&quot;CHAR&quot;、&quot;TEXT&quot;、&quot;DECIMAL&quot;、&quot;SMALLINT&quot;、&quot;INT&quot;、&quot;BIGINT&quot;、&quot;BOOL&quot;、&quot;[]BIGINT&quot;、&quot;JSONB&quot;、&quot;XML&quot;、&quot;TIMESTAMP&quot;。</target>
        </trans-unit>
        <trans-unit id="3c91b4c84603ef829584c3342618f9e341f34eef" translate="yes" xml:space="preserve">
          <source>RowsColumnTypeLength may be implemented by Rows. It should return the length of the column type if the column is a variable length type. If the column is not a variable length type ok should return false. If length is not limited other than system limits, it should return math.MaxInt64. The following are examples of returned values for various types:</source>
          <target state="translated">RowsColumnTypeLength可以由Rows实现。如果该列是可变长度类型,它应该返回该列类型的长度。如果列不是可变长度类型ok应该返回false。如果长度除了系统限制之外没有其他限制,它应该返回math.MaxInt64。下面是各种类型的返回值的例子。</target>
        </trans-unit>
        <trans-unit id="e25b9be843083730384947899329e16d7e8ce2ee" translate="yes" xml:space="preserve">
          <source>RowsColumnTypeNullable may be implemented by Rows. The nullable value should be true if it is known the column may be null, or false if the column is known to be not nullable. If the column nullability is unknown, ok should be false.</source>
          <target state="translated">RowsColumnTypeNullable可以由Rows实现。如果知道该列可能为空,则nullable值应该为true,如果知道该列不可为空,则为false。如果列的可空性未知,则ok应该为false。</target>
        </trans-unit>
        <trans-unit id="11e1119cb21771faadd92c0fac63385e0fabd647" translate="yes" xml:space="preserve">
          <source>RowsColumnTypePrecisionScale may be implemented by Rows. It should return the precision and scale for decimal types. If not applicable, ok should be false. The following are examples of returned values for various types:</source>
          <target state="translated">RowsColumnTypePrecisionScale可以由Rows实现。它应该返回十进制类型的精度和比例。如果不适用,ok应该是false。下面是各种类型的返回值的例子。</target>
        </trans-unit>
        <trans-unit id="c4ef56c355e3d98c76299376ceea4adea3479a58" translate="yes" xml:space="preserve">
          <source>RowsColumnTypeScanType may be implemented by Rows. It should return the value type that can be used to scan types into. For example, the database column type &quot;bigint&quot; this should return &quot;reflect.TypeOf(int64(0))&quot;.</source>
          <target state="translated">RowsColumnTypeScanType可以由Rows实现。它应该返回可以用来扫描类型到的值类型。例如,数据库列类型 &quot;bigint &quot;这应该返回 &quot;reflect.TypeOf(int64(0))&quot;。</target>
        </trans-unit>
        <trans-unit id="7efce4893f3ac361f87721da26fe098b878a1c27" translate="yes" xml:space="preserve">
          <source>RowsNextResultSet extends the Rows interface by providing a way to signal the driver to advance to the next result set.</source>
          <target state="translated">RowsNextResultSet扩展了Rows接口,它提供了一种信号,让驱动程序前进到下一个结果集。</target>
        </trans-unit>
        <trans-unit id="1ab76c953a9e273e85fb13e73235ab1aa106b9cd" translate="yes" xml:space="preserve">
          <source>Rsh sets z = x &amp;gt;&amp;gt; n and returns z.</source>
          <target state="translated">Rsh设置z = x &amp;gt;&amp;gt; n并返回z。</target>
        </trans-unit>
        <trans-unit id="64578d8b2d51c5abcc22005302c8d44dd6d930ad" translate="yes" xml:space="preserve">
          <source>Run benchmarks f as a subbenchmark with the given name. It reports whether there were any failures.</source>
          <target state="translated">将基准f作为给定名称的子基准运行。它报告是否有任何失败。</target>
        </trans-unit>
        <trans-unit id="872b6e9fc5c925d028b4808b5136d4cf35164f22" translate="yes" xml:space="preserve">
          <source>Run does not return until parallel subtests have completed, providing a way to clean up after a group of parallel tests:</source>
          <target state="translated">在并行子测试完成之前,运行不会返回,提供了一种清理一组并行测试后的方法。</target>
        </trans-unit>
        <trans-unit id="f8c556db4b76966a7511e9f2b360cd616f36f626" translate="yes" xml:space="preserve">
          <source>Run may be called simultaneously from multiple goroutines, but all such calls must return before the outer test function for t returns.</source>
          <target state="translated">可以从多个goroutine中同时调用Run,但所有这些调用都必须在t的外部测试函数返回之前返回。</target>
        </trans-unit>
        <trans-unit id="d90bfc177fd90c93bbd1a663aa066ee65d25e1b1" translate="yes" xml:space="preserve">
          <source>Run runs f as a subtest of t called name. It runs f in a separate goroutine and blocks until f returns or calls t.Parallel to become a parallel test. Run reports whether f succeeded (or at least did not fail before calling t.Parallel).</source>
          <target state="translated">Run 将 f 作为 t 的子测试运行,称为 name。它在一个单独的goroutine中运行f,并阻塞直到f返回或调用t.Parallel成为一个并行测试。Run报告f是否成功(或者至少在调用t.Parallel之前没有失败)。</target>
        </trans-unit>
        <trans-unit id="53e0451894d3b3781ea079b9077c47afbf558128" translate="yes" xml:space="preserve">
          <source>Run runs the tests. It returns an exit code to pass to os.Exit.</source>
          <target state="translated">Run 运行测试。它返回一个退出代码,传递给 os.Exit。</target>
        </trans-unit>
        <trans-unit id="48c893a581570ffe26dfe952410c12f6cdc2e260" translate="yes" xml:space="preserve">
          <source>Run starts the specified command and waits for it to complete.</source>
          <target state="translated">运行启动指定的命令并等待其完成。</target>
        </trans-unit>
        <trans-unit id="f93b07d64251dda56a436dcbde68f9da5bc328c2" translate="yes" xml:space="preserve">
          <source>RunBenchmarks is an internal function but exported because it is cross-package; it is part of the implementation of the &quot;go test&quot; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32dc551964c4269304db7eb1f811d1caad804e12" translate="yes" xml:space="preserve">
          <source>RunExamples is an internal function but exported because it is cross-package; it is part of the implementation of the &quot;go test&quot; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="452df5dd646b599a67dd36e4b5527c206ddf15e5" translate="yes" xml:space="preserve">
          <source>RunParallel runs a benchmark in parallel. It creates multiple goroutines and distributes b.N iterations among them. The number of goroutines defaults to GOMAXPROCS. To increase parallelism for non-CPU-bound benchmarks, call SetParallelism before RunParallel. RunParallel is usually used with the go test -cpu flag.</source>
          <target state="translated">RunParallel 以并行方式运行一个基准。它创建多个goroutine,并在它们之间分配b.N次迭代。goroutines 的数量默认为 GOMAXPROCS。要增加非CPU绑定基准的并行性,请在RunParallel之前调用SetParallelism。RunParallel 通常与 go test -cpu 标志一起使用。</target>
        </trans-unit>
        <trans-unit id="47b2ac0560eb4a2067fd84225d3accb1efb1f8a0" translate="yes" xml:space="preserve">
          <source>RunTests is an internal function but exported because it is cross-package; it is part of the implementation of the &quot;go test&quot; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1304d4ae46895f99bd865fe49bce5376fb7e0b6" translate="yes" xml:space="preserve">
          <source>RuneCount</source>
          <target state="translated">RuneCount</target>
        </trans-unit>
        <trans-unit id="ed1038ffbfe375ac70c3f1a1ca67f29234afffbf" translate="yes" xml:space="preserve">
          <source>RuneCount returns the number of runes in p. Erroneous and short encodings are treated as single runes of width 1 byte.</source>
          <target state="translated">RuneCount返回p中的符文数量,错误的和较短的编码将作为宽度为1字节的单个符文处理。</target>
        </trans-unit>
        <trans-unit id="78c4e1dde9ab6b8f5586f9612a115ee5d698d2fb" translate="yes" xml:space="preserve">
          <source>RuneCountInString</source>
          <target state="translated">RuneCountInString</target>
        </trans-unit>
        <trans-unit id="f740d84fa32707ddc183ab07c7c8f221a896cf18" translate="yes" xml:space="preserve">
          <source>RuneCountInString is like RuneCount but its input is a string.</source>
          <target state="translated">RuneCountInString类似于RuneCount,但它的输入是一个字符串。</target>
        </trans-unit>
        <trans-unit id="7f39387ee01e0d6561f94fb1cc196d068d979052" translate="yes" xml:space="preserve">
          <source>RuneLen</source>
          <target state="translated">RuneLen</target>
        </trans-unit>
        <trans-unit id="da827d364b8d785022152482b581a5b08129882b" translate="yes" xml:space="preserve">
          <source>RuneLen returns the number of bytes required to encode the rune. It returns -1 if the rune is not a valid value to encode in UTF-8.</source>
          <target state="translated">RuneLen 返回对符文进行编码所需的字节数。如果符文不是UTF-8编码的有效值,则返回-1。</target>
        </trans-unit>
        <trans-unit id="cf36c219da8d056dc79efd005cdbeaf40198de2a" translate="yes" xml:space="preserve">
          <source>RuneReader is the interface that wraps the ReadRune method.</source>
          <target state="translated">RuneReader是封装ReadRune方法的接口。</target>
        </trans-unit>
        <trans-unit id="8dce52bc0fa438508ccfe7940691e478794d8014" translate="yes" xml:space="preserve">
          <source>RuneScanner is the interface that adds the UnreadRune method to the basic ReadRune method.</source>
          <target state="translated">RuneScanner是在基本的ReadRune方法上增加UnreadRune方法的接口。</target>
        </trans-unit>
        <trans-unit id="48c879258018813f4ec13050feaaab65a67d910b" translate="yes" xml:space="preserve">
          <source>RuneStart</source>
          <target state="translated">RuneStart</target>
        </trans-unit>
        <trans-unit id="6b79de7db8117808de36133366c8ef414e9c5c82" translate="yes" xml:space="preserve">
          <source>RuneStart reports whether the byte could be the first byte of an encoded, possibly invalid rune. Second and subsequent bytes always have the top two bits set to 10.</source>
          <target state="translated">RuneStart报告该字节是否是一个已编码的、可能无效的符文的第一个字节。第二个和随后的字节的前两个位总是设置为10。</target>
        </trans-unit>
        <trans-unit id="6756bd3e1a442e2ce0d16a235b1d5c8c2882b1e6" translate="yes" xml:space="preserve">
          <source>Runes</source>
          <target state="translated">Runes</target>
        </trans-unit>
        <trans-unit id="9a62b7b5f90f9e424bb04160b8de2eb558ee92a9" translate="yes" xml:space="preserve">
          <source>Runes interprets s as a sequence of UTF-8-encoded code points. It returns a slice of runes (Unicode code points) equivalent to s.</source>
          <target state="translated">Runes将s解释为一个UTF-8编码的代码点序列。它返回一个与s等价的符文片(Unicode码点)。</target>
        </trans-unit>
        <trans-unit id="f5d45a3fe840544aad462798c4e4ed8942f7ef58" translate="yes" xml:space="preserve">
          <source>Running &quot;go vet&quot; can help find uses of Pointer that do not conform to these patterns, but silence from &quot;go vet&quot; is not a guarantee that the code is valid.</source>
          <target state="translated">运行 &quot;go vet &quot;可以帮助找到不符合这些模式的Pointer用法,但 &quot;go vet &quot;的沉默并不能保证代码有效。</target>
        </trans-unit>
        <trans-unit id="aeacdbd801cd3a6c88be9cbc91df0dca2b46aba8" translate="yes" xml:space="preserve">
          <source>SHA-1 is cryptographically broken and should not be used for secure applications.</source>
          <target state="translated">SHA-1在密码学上是有缺陷的,不应该用于安全应用。</target>
        </trans-unit>
        <trans-unit id="1d7bc000e103e4ca4294205e7c5c40ddc6f69520" translate="yes" xml:space="preserve">
          <source>SHA2-512(priv.D || entropy || hash)[:32]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b3caa78fa594eb19ef5d1955f9e6f4a06aac1d4" translate="yes" xml:space="preserve">
          <source>SIGPIPE</source>
          <target state="translated">SIGPIPE</target>
        </trans-unit>
        <trans-unit id="91d8535876524df724c0df972b3fd914eb03fb2f" translate="yes" xml:space="preserve">
          <source>SameFile reports whether fi1 and fi2 describe the same file. For example, on Unix this means that the device and inode fields of the two underlying structures are identical; on other systems the decision may be based on the path names. SameFile only applies to results returned by this package's Stat. It returns false in other cases.</source>
          <target state="translated">SameFile 报告 fi1 和 fi2 是否描述同一个文件。例如,在Unix上,这意味着两个底层结构的设备和inode字段是相同的;在其它系统上,可能是根据路径名来决定的。SameFile只适用于本包的Stat返回的结果。在其他情况下,它返回false。</target>
        </trans-unit>
        <trans-unit id="9f57e34c6960ba52fd743b2bc0ff1557eb707bd2" translate="yes" xml:space="preserve">
          <source>SameSite allows a server to define a cookie attribute making it impossible for the browser to send this cookie along with cross-site requests. The main goal is to mitigate the risk of cross-origin information leakage, and provide some protection against cross-site request forgery attacks.</source>
          <target state="translated">SameSite允许服务器定义一个cookie属性,使得浏览器无法在跨站请求时发送这个cookie。其主要目的是为了降低跨源信息泄露的风险,并提供一定的保护,防止跨站请求伪造攻击。</target>
        </trans-unit>
        <trans-unit id="a0b6fd267e524ab1b350adb6e2b1dd91cd63b1b3" translate="yes" xml:space="preserve">
          <source>Sample captures a single metric sample.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="629f25cee39d2ec711564ddf90e361792133879f" translate="yes" xml:space="preserve">
          <source>Sample values with names not appearing in All will have their Value populated as KindBad to indicate that the name is unknown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8abf172daab8b3ea3c6865151b033d1cd5e837c" translate="yes" xml:space="preserve">
          <source>Scan adds line information to the file added to the file set with Init. Token positions are relative to that file and thus relative to the file set.</source>
          <target state="translated">扫描将行信息添加到用Init添加到文件集的文件中。令牌位置是相对于该文件的,因此是相对于文件集的。</target>
        </trans-unit>
        <trans-unit id="e4ac4597c96634ebcbf4b7a158793f756f373f9c" translate="yes" xml:space="preserve">
          <source>Scan advances the Scanner to the next token, which will then be available through the Bytes or Text method. It returns false when the scan stops, either by reaching the end of the input or an error. After Scan returns false, the Err method will return any error that occurred during scanning, except that if it was io.EOF, Err will return nil. Scan panics if the split function returns too many empty tokens without advancing the input. This is a common error mode for scanners.</source>
          <target state="translated">扫描将扫描器推进到下一个标记,然后通过Bytes或Text方法获得该标记。当扫描停止时,它将返回false,或者是到达输入的终点,或者是出现错误。在Scan返回false后,Err方法将返回扫描过程中发生的任何错误,除了如果是io.EOF,Err将返回nil。如果拆分函数在没有推进输入的情况下返回过多的空令牌,Scan就会恐慌。这是扫描器常见的错误模式。</target>
        </trans-unit>
        <trans-unit id="19b1c6ecbd861a4833fc5e32bbb8df547210090f" translate="yes" xml:space="preserve">
          <source>Scan also converts between string and numeric types, as long as no information would be lost. While Scan stringifies all numbers scanned from numeric database columns into *string, scans into numeric types are checked for overflow. For example, a float64 with value 300 or a string with value &quot;300&quot; can scan into a uint16, but not into a uint8, though float64(255) or &quot;255&quot; can scan into a uint8. One exception is that scans of some float64 numbers to strings may lose information when stringifying. In general, scan floating point columns into *float64.</source>
          <target state="translated">扫描也可以在字符串和数字类型之间进行转换,只要不丢失信息即可。Scan将所有从数字数据库列中扫描的数字字符串化为*string,而扫描到数字类型的数字会被检查是否有溢出。例如,值为300的float64或值为 &quot;300 &quot;的字符串可以扫描成uint16,但不能扫描成uint8,不过float64(255)或 &quot;255 &quot;可以扫描成uint8。有一个例外,就是将一些浮点64数字扫描成字符串,在字符串化时可能会丢失信息。一般来说,将浮点列扫描成*float64。</target>
        </trans-unit>
        <trans-unit id="feb542d2e67b91b0880c1fd1b4cf7b50af77bd5b" translate="yes" xml:space="preserve">
          <source>Scan can also convert a cursor returned from a query, such as &quot;select cursor(select * from my_table) from dual&quot;, into a *Rows value that can itself be scanned from. The parent select query will close any cursor *Rows if the parent *Rows is closed.</source>
          <target state="translated">扫描也可以将查询返回的游标,如 &quot;select cursor(select*from my_table)from dual&quot;,转换为本身可以扫描的*Rows值。如果父级选择查询关闭了任何游标*Rows,则父级选择查询将关闭任何游标*Rows。</target>
        </trans-unit>
        <trans-unit id="48ec4d9dec15d05d875f1baa84e9dcd1d7cc9f07" translate="yes" xml:space="preserve">
          <source>Scan converts columns read from the database into the following common Go types and special types provided by the sql package:</source>
          <target state="translated">扫描将从数据库中读取的列转换为以下常见的围棋类型和sql包提供的特殊类型。</target>
        </trans-unit>
        <trans-unit id="2677a1f2dd5662fd0ec43cba40359a57293f1867" translate="yes" xml:space="preserve">
          <source>Scan copies the columns from the matched row into the values pointed at by dest. See the documentation on Rows.Scan for details. If more than one row matches the query, Scan uses the first row and discards the rest. If no row matches the query, Scan returns ErrNoRows.</source>
          <target state="translated">扫描将匹配行中的列复制到 dest 所指向的值中。详情请参见Rows.Scan的文档。如果有多条记录与查询匹配,Scan会使用第一条记录,并丢弃其余的记录。如果没有记录与查询匹配,Scan将返回ErrNoRows。</target>
        </trans-unit>
        <trans-unit id="d701545494296850286215953fde0ddf540061d1" translate="yes" xml:space="preserve">
          <source>Scan copies the columns in the current row into the values pointed at by dest. The number of values in dest must be the same as the number of columns in Rows.</source>
          <target state="translated">扫描将当前行中的列复制到 dest 指向的值中。dest中的值的数量必须与Rows中的列数相同。</target>
        </trans-unit>
        <trans-unit id="0a799e57e8d283a9aa1ec133950cd6bd3e127332" translate="yes" xml:space="preserve">
          <source>Scan implements the Scanner interface.</source>
          <target state="translated">Scan实现了Scanner接口。</target>
        </trans-unit>
        <trans-unit id="bd92cac731a36521f9119e135b2c47485aabb150" translate="yes" xml:space="preserve">
          <source>Scan is a support routine for fmt.Scanner. It accepts the formats 'e', 'E', 'f', 'F', 'g', 'G', and 'v'. All formats are equivalent.</source>
          <target state="translated">Scan 是 fmt.Scanner 的一个支持例程,它接受'e'、'E'、'f'、'F'、'g'、'G'和'v'等格式。它接受'e'、'E'、'f'、'F'、'g'、'G'和'v'等格式。所有的格式都是等价的,它可以接受'e'、'E'、'f'、'F'、'g'、'G'和'v'等格式。</target>
        </trans-unit>
        <trans-unit id="d953d557a4046bfc8df6c55ce44c304f6ff14a59" translate="yes" xml:space="preserve">
          <source>Scan is a support routine for fmt.Scanner; it sets z to the value of the scanned number. It accepts formats whose verbs are supported by fmt.Scan for floating point values, which are: 'b' (binary), 'e', 'E', 'f', 'F', 'g' and 'G'. Scan doesn't handle &amp;plusmn;Inf.</source>
          <target state="translated">扫描是fmt.Scanner的支持例程；它将z设置为扫描编号的值。它接受动词受fmt支持的格式。扫描浮点值，即：``b''（二进制），``e''，``E''，``f''，``F''，``g''和``G''。扫描不处理&amp;plusmn;Inf。</target>
        </trans-unit>
        <trans-unit id="ac6efbbbf8b516bb14977cb03cef43746936b2f5" translate="yes" xml:space="preserve">
          <source>Scan is a support routine for fmt.Scanner; it sets z to the value of the scanned number. It accepts the formats 'b' (binary), 'o' (octal), 'd' (decimal), 'x' (lowercase hexadecimal), and 'X' (uppercase hexadecimal).</source>
          <target state="translated">Scan 是 fmt.Scanner 的一个支持例程;它将 z 设置为被扫描的数字的值,它接受 'b' (二进制)、'o' (八进制)、'd' (十进制)、'x' (小写十六进制)和 'X' (大写十六进制)等格式。它接受'b'(二进制)、'o'(八进制)、'd'(十进制)、'x'(小写十六进制)和'X'(大写十六进制)等格式。</target>
        </trans-unit>
        <trans-unit id="386a7678b7de663dffac69cf7ab3e1a7092be8f9" translate="yes" xml:space="preserve">
          <source>Scan reads the next token or Unicode character from source and returns it. It only recognizes tokens t for which the respective Mode bit (1&amp;lt;&amp;lt;-t) is set. It returns EOF at the end of the source. It reports scanner errors (read and token errors) by calling s.Error, if not nil; otherwise it prints an error message to os.Stderr.</source>
          <target state="translated">扫描从源中读取下一个标记或Unicode字符并将其返回。它仅识别设置了相应的模式位（1 &amp;lt;&amp;lt;-t）的令牌t。它在源末尾返回EOF。它通过调用s.Error（如果不是nil）来报告扫描程序错误（读取和令牌错误）。否则，它会向os.Stderr打印一条错误消息。</target>
        </trans-unit>
        <trans-unit id="981608b22833d116739df1bad639bfec043f4338" translate="yes" xml:space="preserve">
          <source>Scan scans text read from standard input, storing successive space-separated values into successive arguments. Newlines count as space. It returns the number of items successfully scanned. If that is less than the number of arguments, err will report why.</source>
          <target state="translated">扫描扫描从标准输入中读取的文本,将连续的空格分隔的值存储到连续的参数中。换行也算作空格。它返回成功扫描的项目数。如果少于参数数,err将报告原因。</target>
        </trans-unit>
        <trans-unit id="9421db6432c3608ab7d6333584635bf58a2d9300" translate="yes" xml:space="preserve">
          <source>Scan scans the next token and returns the token position, the token, and its literal string if applicable. The source end is indicated by token.EOF.</source>
          <target state="translated">Scan扫描下一个token,并返回token位置、token和它的字面串(如果适用)。源端由token.EOF表示。</target>
        </trans-unit>
        <trans-unit id="b3d5e9556bfff0957b67d0485be76ef988e69293" translate="yes" xml:space="preserve">
          <source>Scan, Fscan, Sscan treat newlines in the input as spaces.</source>
          <target state="translated">扫描、Fscan、Sscan将输入中的新行视为空格。</target>
        </trans-unit>
        <trans-unit id="f2ef262aa067e44dfcde945e7bebf0433b1baaed" translate="yes" xml:space="preserve">
          <source>ScanBytes is a split function for a Scanner that returns each byte as a token.</source>
          <target state="translated">ScanBytes是Scanner的一个分割函数,它将每个字节作为一个标记返回。</target>
        </trans-unit>
        <trans-unit id="d509b35e48ef6a5d396ee01678b179a959774867" translate="yes" xml:space="preserve">
          <source>ScanLines is a split function for a Scanner that returns each line of text, stripped of any trailing end-of-line marker. The returned line may be empty. The end-of-line marker is one optional carriage return followed by one mandatory newline. In regular expression notation, it is `\r?\n`. The last non-empty line of input will be returned even if it has no newline.</source>
          <target state="translated">ScanLines 是 Scanner 的一个分割函数,用于返回每一行文本,并去掉任何尾部的行尾标记。返回的行可以是空的。行末标记是一个可选的回车符,后面是一个强制性的换行符。在正则表达式中,它是`\r?\n`。即使没有换行符,输入的最后一行非空行也会被返回。</target>
        </trans-unit>
        <trans-unit id="b4049bc82d2e16ae520fd9c175cc98d3e8214592" translate="yes" xml:space="preserve">
          <source>ScanRunes is a split function for a Scanner that returns each UTF-8-encoded rune as a token. The sequence of runes returned is equivalent to that from a range loop over the input as a string, which means that erroneous UTF-8 encodings translate to U+FFFD = &quot;\xef\xbf\xbd&quot;. Because of the Scan interface, this makes it impossible for the client to distinguish correctly encoded replacement runes from encoding errors.</source>
          <target state="translated">ScanRunes是Scanner的一个分割函数,它将每个UTF-8编码的符文作为一个标记返回。返回的符文序列相当于对输入的字符串进行范围循环,这意味着错误的UTF-8编码转化为U+FFFD=&quot;\xef\xbf\xbd&quot;。由于Scan接口的存在,这使得客户端无法区分正确编码的替换符文和编码错误。</target>
        </trans-unit>
        <trans-unit id="f4641d488fdcb83f61b3c11fd542f4c6a3c4ffa5" translate="yes" xml:space="preserve">
          <source>ScanState represents the scanner state passed to custom scanners. Scanners may do rune-at-a-time scanning or ask the ScanState to discover the next space-delimited token.</source>
          <target state="translated">ScanState表示传递给自定义扫描器的扫描器状态。扫描仪可以进行逐次扫描或要求ScanState发现下一个空间限定的标记。</target>
        </trans-unit>
        <trans-unit id="59161b57fccdcbdd902cc6d57c2979e0dc44f79e" translate="yes" xml:space="preserve">
          <source>ScanType returns a Go type suitable for scanning into using Rows.Scan. If a driver does not support this property ScanType will return the type of an empty interface.</source>
          <target state="translated">ScanType返回一个适合使用Rows.Scan扫描到的Go类型。如果一个驱动程序不支持这个属性,ScanType将返回一个空接口的类型。</target>
        </trans-unit>
        <trans-unit id="faa25d7e517bfa0b7ebed36b40faf73e8faf8ace" translate="yes" xml:space="preserve">
          <source>ScanWords is a split function for a Scanner that returns each space-separated word of text, with surrounding spaces deleted. It will never return an empty string. The definition of space is set by unicode.IsSpace.</source>
          <target state="translated">ScanWords 是 Scanner 的一个分割函数,它可以返回每个以空格分隔的文本字,并删除周围的空格。它永远不会返回一个空字符串。空格的定义由unicode.IsSpace设置。</target>
        </trans-unit>
        <trans-unit id="bc0d545831527f222a939e3851bf7f5c1605d659" translate="yes" xml:space="preserve">
          <source>Scanf scans text read from standard input, storing successive space-separated values into successive arguments as determined by the format. It returns the number of items successfully scanned. If that is less than the number of arguments, err will report why. Newlines in the input must match newlines in the format. The one exception: the verb %c always scans the next rune in the input, even if it is a space (or tab etc.) or newline.</source>
          <target state="translated">Scanf扫描从标准输入中读取的文本,将连续的空格分隔的值存储到由格式决定的连续参数中。它返回成功扫描的项目数。如果少于参数数,err将报告原因。输入中的换行必须与格式中的换行相匹配。唯一的例外是:动词%c总是扫描输入中的下一个符文,即使它是一个空格(或制表符等)或换行。</target>
        </trans-unit>
        <trans-unit id="6f640beb056a4e8e9aa6bfcd8d1f5bf1b4feaaee" translate="yes" xml:space="preserve">
          <source>Scanf, Fscanf, and Sscanf parse the arguments according to a format string, analogous to that of Printf. In the text that follows, 'space' means any Unicode whitespace character except newline.</source>
          <target state="translated">Scanf、Fscanf和Sscanf根据类似于Printf的格式字符串来解析参数。在下面的文字中,&quot;空格 &quot;是指除换行以外的任何Unicode空白字符。</target>
        </trans-unit>
        <trans-unit id="c8ed7e72e9070ffbdd1df56f018a211791f2dcc9" translate="yes" xml:space="preserve">
          <source>Scanln is similar to Scan, but stops scanning at a newline and after the final item there must be a newline or EOF.</source>
          <target state="translated">Scanln与Scan类似,但在换行处停止扫描,在最后一项后必须有一个换行或EOF。</target>
        </trans-unit>
        <trans-unit id="22a932411390fa7368633b6d040508332e0196e9" translate="yes" xml:space="preserve">
          <source>Scanln, Fscanln and Sscanln stop scanning at a newline and require that the items be followed by a newline or EOF.</source>
          <target state="translated">Scanln、Fscanln和Sscanln在换行时停止扫描,并要求在项目后面加上换行或EOF。</target>
        </trans-unit>
        <trans-unit id="01c8580ef4911b472b2f5804014f5bd82d1af7aa" translate="yes" xml:space="preserve">
          <source>Scanner (Custom)</source>
          <target state="translated">扫描仪(自定义</target>
        </trans-unit>
        <trans-unit id="1d4892a40553aaa21bb91693fe76c51b9f51e530" translate="yes" xml:space="preserve">
          <source>Scanner (EmptyFinalToken)</source>
          <target state="translated">扫描器(EmptyFinalToken)</target>
        </trans-unit>
        <trans-unit id="d1ca38099d8459b3cc3f6b48eaf9fc6b340ae9b4" translate="yes" xml:space="preserve">
          <source>Scanner (Lines)</source>
          <target state="translated">扫描仪(线)</target>
        </trans-unit>
        <trans-unit id="ab67b93c24c839ac0830f79b29ad7b412a9dc7b4" translate="yes" xml:space="preserve">
          <source>Scanner (Words)</source>
          <target state="translated">扫描仪(字数)</target>
        </trans-unit>
        <trans-unit id="2192924325d3946492271abc8671373e1f38daa1" translate="yes" xml:space="preserve">
          <source>Scanner is an interface used by Scan.</source>
          <target state="translated">Scanner是Scan使用的一个接口。</target>
        </trans-unit>
        <trans-unit id="16f1f8a9cae9f1e07478a7953ec158b0c2b03d9c" translate="yes" xml:space="preserve">
          <source>Scanner is implemented by any value that has a Scan method, which scans the input for the representation of a value and stores the result in the receiver, which must be a pointer to be useful. The Scan method is called for any argument to Scan, Scanf, or Scanln that implements it.</source>
          <target state="translated">Scanner是由任何有Scan方法的值实现的,它扫描输入的值的表示,并将结果存储在接收器中,接收器必须是一个指针才有用。任何实现Scan、Scanf或Scanln的参数都会调用Scan方法。</target>
        </trans-unit>
        <trans-unit id="76f47cb3079e4595ce1c03abbd158345ae636c90" translate="yes" xml:space="preserve">
          <source>Scanner provides a convenient interface for reading data such as a file of newline-delimited lines of text. Successive calls to the Scan method will step through the 'tokens' of a file, skipping the bytes between the tokens. The specification of a token is defined by a split function of type SplitFunc; the default split function breaks the input into lines with line termination stripped. Split functions are defined in this package for scanning a file into lines, bytes, UTF-8-encoded runes, and space-delimited words. The client may instead provide a custom split function.</source>
          <target state="translated">Scanner提供了一个方便的接口,用于读取数据,如一个以新行分隔的文本文件。对Scan方法的连续调用将跳过文件的 &quot;标记&quot;,跳过标记之间的字节。token的规格是由类型为SplitFunc的分割函数定义的;默认的分割函数将输入的内容分割成行,并去除行终止符。本包中定义了分割函数,用于将文件扫描成行、字节、UTF-8编码的符文和空格分隔的单词。客户端可以提供一个自定义的分割函数。</target>
        </trans-unit>
        <trans-unit id="221c21d253261d097c5eddd34e07f0e854f9f8be" translate="yes" xml:space="preserve">
          <source>Scanner.Bytes</source>
          <target state="translated">Scanner.Bytes</target>
        </trans-unit>
        <trans-unit id="db2650dfa50b9653ed3b24b83e400aa246e21e57" translate="yes" xml:space="preserve">
          <source>Scanner.Scan</source>
          <target state="translated">Scanner.Scan</target>
        </trans-unit>
        <trans-unit id="e230f66cb2480e61c70e7940e1168e3d3dc1b2cf" translate="yes" xml:space="preserve">
          <source>Scanning</source>
          <target state="translated">Scanning</target>
        </trans-unit>
        <trans-unit id="0e43a71fd5dc304b08b8c37610739914b52545a4" translate="yes" xml:space="preserve">
          <source>Scanning stops if the function returns an error, in which case some of the input may be discarded.</source>
          <target state="translated">如果函数返回错误,则停止扫描,在这种情况下,部分输入可能会被丢弃。</target>
        </trans-unit>
        <trans-unit id="d3672319a15266023841ffc344b2b9ae68437119" translate="yes" xml:space="preserve">
          <source>Scanning stops unrecoverably at EOF, the first I/O error, or a token too large to fit in the buffer. When a scan stops, the reader may have advanced arbitrarily far past the last token. Programs that need more control over error handling or large tokens, or must run sequential scans on a reader, should use bufio.Reader instead.</source>
          <target state="translated">扫描在EOF、第一个I/O错误或令牌过大而无法放入缓冲区时停止,无法恢复。当扫描停止时,读卡器可能已经任意前进了很远,超过了最后一个令牌。如果程序需要更多的控制错误处理或大标记,或者必须在读取器上运行顺序扫描,应该使用bufio.Reader来代替。</target>
        </trans-unit>
        <trans-unit id="4651a34e4df9619783ad372f905d6d3b84e9d76d" translate="yes" xml:space="preserve">
          <source>Scope</source>
          <target state="translated">Scope</target>
        </trans-unit>
        <trans-unit id="2ebfb1a9903c43a33373f64197eeaf8911c9f134" translate="yes" xml:space="preserve">
          <source>Scope returns the (complete or incomplete) package scope holding the objects declared at package level (TypeNames, Consts, Vars, and Funcs).</source>
          <target state="translated">Scope 返回(完整或不完整的)包的作用域,该作用域持有在包级声明的对象(TypeNames,Consts,Vars,and Funcs)。</target>
        </trans-unit>
        <trans-unit id="f31d3986ec66463fe9a83dfd9a2accc1b70877c7" translate="yes" xml:space="preserve">
          <source>Scope returns the scope of the function's body block.</source>
          <target state="translated">Scope 返回函数主体块的范围。</target>
        </trans-unit>
        <trans-unit id="caf135bc624d4b0feb9650ec0d00441eafcdc77d" translate="yes" xml:space="preserve">
          <source>Scripts is the set of Unicode script tables.</source>
          <target state="translated">脚本是Unicode脚本表的集合。</target>
        </trans-unit>
        <trans-unit id="bce06414177f72ab70e6387b6af9f8ceef0d6049" translate="yes" xml:space="preserve">
          <source>Search</source>
          <target state="translated">Search</target>
        </trans-unit>
        <trans-unit id="f3e40d362f51c406a8e1778fc061f0dd3ad57de4" translate="yes" xml:space="preserve">
          <source>Search (DescendingOrder)</source>
          <target state="translated">搜索(降序)</target>
        </trans-unit>
        <trans-unit id="fdbb604a543d329419799366cc3a9af7390d3bcf" translate="yes" xml:space="preserve">
          <source>Search returns the result of applying SearchFloat64s to the receiver and x.</source>
          <target state="translated">搜索返回将SearchFloat64s应用于接收器和x的结果。</target>
        </trans-unit>
        <trans-unit id="1ab6c8f0fd768a91b3e79c036cb01cc452193fe2" translate="yes" xml:space="preserve">
          <source>Search returns the result of applying SearchInts to the receiver and x.</source>
          <target state="translated">搜索返回将SearchInts应用到接收器和x的结果。</target>
        </trans-unit>
        <trans-unit id="1c4f638fca65e5a738654ac393880f806f3b7f65" translate="yes" xml:space="preserve">
          <source>Search returns the result of applying SearchStrings to the receiver and x.</source>
          <target state="translated">搜索返回将SearchStrings应用于接收器和x的结果。</target>
        </trans-unit>
        <trans-unit id="794b977a863a1d9dc8d7b0fd80d6eef6736bd69e" translate="yes" xml:space="preserve">
          <source>Search uses binary search to find and return the smallest index i in [0, n) at which f(i) is true, assuming that on the range [0, n), f(i) == true implies f(i+1) == true. That is, Search requires that f is false for some (possibly empty) prefix of the input range [0, n) and then true for the (possibly empty) remainder; Search returns the first true index. If there is no such index, Search returns n. (Note that the &quot;not found&quot; return value is not -1 as in, for instance, strings.Index.) Search calls f(i) only for i in the range [0, n).</source>
          <target state="translated">Search使用二进制搜索来寻找并返回[0,n)中f(i)为真的最小索引i,假设在范围[0,n)上,f(i)==真意味着f(i+1)==真。也就是说,Search要求f对输入范围[0,n)的某些(可能是空的)前缀为假,然后对(可能是空的)剩余部分为真;Search返回第一个真索引。如果没有这样的索引,Search返回n。(注意 &quot;未找到 &quot;的返回值不是-1,例如strings.Index。)Search只对[0,n)范围内的i调用f(i)。</target>
        </trans-unit>
        <trans-unit id="895f11590a6ed175f7bac01b38c2ec5640f6fc28" translate="yes" xml:space="preserve">
          <source>SearchFloat64s searches for x in a sorted slice of float64s and returns the index as specified by Search. The return value is the index to insert x if x is not present (it could be len(a)). The slice must be sorted in ascending order.</source>
          <target state="translated">SearchFloat64s在float64s的排序片中搜索x,并返回Search指定的索引。如果x不存在,返回值是插入x的索引(可以是len(a))。分片必须按升序排序。</target>
        </trans-unit>
        <trans-unit id="b48f643546b25f6e6918e845a0e8a3ab0175ad09" translate="yes" xml:space="preserve">
          <source>SearchInts searches for x in a sorted slice of ints and returns the index as specified by Search. The return value is the index to insert x if x is not present (it could be len(a)). The slice must be sorted in ascending order.</source>
          <target state="translated">SearchInts在ints的排序片中搜索x,并返回由Search指定的索引。如果x不存在,返回值是插入x的索引(可以是len(a))。分片必须按升序排序。</target>
        </trans-unit>
        <trans-unit id="ed762c6e866455b20a9bc0ff477d563626862413" translate="yes" xml:space="preserve">
          <source>SearchStrings searches for x in a sorted slice of strings and returns the index as specified by Search. The return value is the index to insert x if x is not present (it could be len(a)). The slice must be sorted in ascending order.</source>
          <target state="translated">SearchStrings在字符串的排序片断中搜索x,并返回由Search指定的索引。如果x不存在,返回值是插入x的索引(可以是len(a))。切片必须按升序排序。</target>
        </trans-unit>
        <trans-unit id="d1110c735a627c55e67957485addfcd1740c3fa1" translate="yes" xml:space="preserve">
          <source>Searching data sorted in descending order would use the &amp;lt;= operator instead of the &amp;gt;= operator.</source>
          <target state="translated">搜索按降序排序的数据将使用&amp;lt;=运算符而不是&amp;gt; =运算符。</target>
        </trans-unit>
        <trans-unit id="0feecc756efff0f52e43fa2ad18e92887874359a" translate="yes" xml:space="preserve">
          <source>Second returns the second offset within the minute specified by t, in the range [0, 59].</source>
          <target state="translated">Second 返回t指定的分钟内的秒偏移量,范围为[0,59]。</target>
        </trans-unit>
        <trans-unit id="dc37c27c2403f9ad16f9ab9d1b775208efbdf200" translate="yes" xml:space="preserve">
          <source>Second, if a directory's ReadDir method fails, WalkDir calls the function with path set to the directory's path, d set to an fs.DirEntry describing the directory, and err set to the error from ReadDir. In this second case, the function is called twice with the path of the directory: the first call is before the directory read is attempted and has err set to nil, giving the function a chance to return SkipDir and avoid the ReadDir entirely. The second call is after a failed ReadDir and reports the error from ReadDir. (If ReadDir succeeds, there is no second call.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1de746bd641a2fc1f0ddf0dfe26386c6e5724ff" translate="yes" xml:space="preserve">
          <source>Second, if a directory's Readdirnames method fails, Walk calls the function with path set to the directory's path, info, set to an fs.FileInfo describing the directory, and err set to the error from Readdirnames.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aec1eca3aa532659c858922be555e4b78f91472b" translate="yes" xml:space="preserve">
          <source>Seconds returns the duration as a floating point number of seconds.</source>
          <target state="translated">Seconds 返回浮点数的秒数。</target>
        </trans-unit>
        <trans-unit id="883d7225a5feea9c004792c2e5762e5e8b90b937" translate="yes" xml:space="preserve">
          <source>Section compression type.</source>
          <target state="translated">段压缩型。</target>
        </trans-unit>
        <trans-unit id="23c76af95b6f5d08de2ecfd9a9b5758fd241b4b6" translate="yes" xml:space="preserve">
          <source>Section flags.</source>
          <target state="translated">科室旗帜。</target>
        </trans-unit>
        <trans-unit id="62f89d87896d7ef06a64cbb776d3fd356378e295" translate="yes" xml:space="preserve">
          <source>Section provides access to PE COFF section.</source>
          <target state="translated">节提供访问PE COFF节。</target>
        </trans-unit>
        <trans-unit id="0a9d0e16d038258c30fb66c2551ff2e94b6e8ab2" translate="yes" xml:space="preserve">
          <source>Section returns a section with the given name, or nil if no such section exists.</source>
          <target state="translated">Section 返回一个带有给定名称的section,如果没有这个section,则返回nil。</target>
        </trans-unit>
        <trans-unit id="fc54ab0b090fa88e8cee7f8d9e554c227fd11b85" translate="yes" xml:space="preserve">
          <source>Section returns the first section with the given name, or nil if no such section exists.</source>
          <target state="translated">Section 返回带有给定名称的第一个section,如果没有这个section,则返回nil。</target>
        </trans-unit>
        <trans-unit id="8743382bf5087384ab8d5b7b47a198bf1c224282" translate="yes" xml:space="preserve">
          <source>Section type.</source>
          <target state="translated">科室类型:</target>
        </trans-unit>
        <trans-unit id="d498edd9cfc2fe612ccd52dd5a6b59dfb6cad8e5" translate="yes" xml:space="preserve">
          <source>SectionByType returns the first section in f with the given type, or nil if there is no such section.</source>
          <target state="translated">SectionByType 返回f中给定类型的第一个节,如果没有这个节,则返回nil。</target>
        </trans-unit>
        <trans-unit id="dbabe3978d24b41c968a7e3b657294f716964e11" translate="yes" xml:space="preserve">
          <source>SectionHeader is similar to SectionHeader32 with Name field replaced by Go string.</source>
          <target state="translated">SectionHeader类似于SectionHeader32,Name字段被Go字符串代替。</target>
        </trans-unit>
        <trans-unit id="236a39825c17abffb62d175c97b2ff1d1ddf6257" translate="yes" xml:space="preserve">
          <source>SectionHeader32 represents real PE COFF section header.</source>
          <target state="translated">SectionHeader32表示真正的PE COFF节头。</target>
        </trans-unit>
        <trans-unit id="36fac8b648a8b963f174eff7d8e38ad8b061b47f" translate="yes" xml:space="preserve">
          <source>SectionReader</source>
          <target state="translated">SectionReader</target>
        </trans-unit>
        <trans-unit id="7c71d38d1e94fa11b5d9d25b519a23c96d399f77" translate="yes" xml:space="preserve">
          <source>SectionReader implements Read, Seek, and ReadAt on a section of an underlying ReaderAt.</source>
          <target state="translated">SectionReader在底层ReaderAt的某一节上实现了Read、Seek和ReadAt。</target>
        </trans-unit>
        <trans-unit id="559bf9fc1a7e8d17f180e11f63d09376be0206a5" translate="yes" xml:space="preserve">
          <source>SectionReader.ReadAt</source>
          <target state="translated">SectionReader.ReadAt</target>
        </trans-unit>
        <trans-unit id="665de6075b0f11336eab3dd46baf160774a5a70d" translate="yes" xml:space="preserve">
          <source>SectionReader.Seek</source>
          <target state="translated">SectionReader.Seek</target>
        </trans-unit>
        <trans-unit id="0f309ea1521bd5ca8e406b86f34f3a7a0ebff642" translate="yes" xml:space="preserve">
          <source>Security Model</source>
          <target state="translated">安全模式</target>
        </trans-unit>
        <trans-unit id="01953de86431ce77344577ae5495196d927df9a0" translate="yes" xml:space="preserve">
          <source>See &quot;Gobs of data&quot; for a design discussion of the gob wire format: &lt;a href=&quot;https://blog.golang.org/gobs-of-data&quot;&gt;https://blog.golang.org/gobs-of-data&lt;/a&gt;</source>
          <target state="translated">有关&amp;ldquo; gob连线&amp;rdquo;格式的设计讨论，请参见&amp;ldquo;数据的gobs&amp;rdquo;：&lt;a href=&quot;https://blog.golang.org/gobs-of-data&quot;&gt;https&lt;/a&gt; : //blog.golang.org/gobs-of-data</target>
        </trans-unit>
        <trans-unit id="3774cda758049661070b6c5a6625f40ce94f1003" translate="yes" xml:space="preserve">
          <source>See &quot;JSON and Go&quot; for an introduction to this package: &lt;a href=&quot;https://golang.org/doc/articles/json_and_go.html&quot;&gt;https://golang.org/doc/articles/json_and_go.html&lt;/a&gt;</source>
          <target state="translated">有关此程序包的介绍，请参见&amp;ldquo; JSON和Go&amp;rdquo;：&lt;a href=&quot;https://golang.org/doc/articles/json_and_go.html&quot;&gt;https&lt;/a&gt; : //golang.org/doc/articles/json_and_go.html</target>
        </trans-unit>
        <trans-unit id="2434441ee0019a17c985accfc44984c0fc83f78c" translate="yes" xml:space="preserve">
          <source>See &quot;The Go image package&quot; for more details: &lt;a href=&quot;https://golang.org/doc/articles/image_package.html&quot;&gt;https://golang.org/doc/articles/image_package.html&lt;/a&gt;</source>
          <target state="translated">有关更多详细信息，请参见&amp;ldquo; Go图片包&amp;rdquo;：&lt;a href=&quot;https://golang.org/doc/articles/image_package.html&quot;&gt;https&lt;/a&gt; : //golang.org/doc/articles/image_package.html</target>
        </trans-unit>
        <trans-unit id="f5ff28b5d6f4a465abbce4a3d8096187a236d24e" translate="yes" xml:space="preserve">
          <source>See &quot;The Go image/draw package&quot; for an introduction to this package: &lt;a href=&quot;https://golang.org/doc/articles/image_draw.html&quot;&gt;https://golang.org/doc/articles/image_draw.html&lt;/a&gt;</source>
          <target state="translated">有关此程序包的介绍，请参见&amp;ldquo; Go image / draw程序包&amp;rdquo;：&lt;a href=&quot;https://golang.org/doc/articles/image_draw.html&quot;&gt;https&lt;/a&gt; : //golang.org/doc/articles/image_draw.html</target>
        </trans-unit>
        <trans-unit id="f837700d9a3417d92fc3f9f0548fd849b9aa7119" translate="yes" xml:space="preserve">
          <source>See &quot;The Laws of Reflection&quot; for an introduction to reflection in Go: &lt;a href=&quot;https://golang.org/doc/articles/laws_of_reflection.html&quot;&gt;https://golang.org/doc/articles/laws_of_reflection.html&lt;/a&gt;</source>
          <target state="translated">有关Go语言中反射的介绍，请参见&amp;ldquo;反射法则&amp;rdquo;：&lt;a href=&quot;https://golang.org/doc/articles/laws_of_reflection.html&quot;&gt;https&lt;/a&gt;：//golang.org/doc/articles/laws_of_reflection.html</target>
        </trans-unit>
        <trans-unit id="2ab345c73717657f0ff30644abe019ba2856efb0" translate="yes" xml:space="preserve">
          <source>See 'go help buildconstraint' (&lt;a href=&quot;https://golang.org/cmd/go/#hdr-Build_constraints&quot;&gt;https://golang.org/cmd/go/#hdr-Build_constraints&lt;/a&gt;) for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd38865133cd9a5c006edfe52fb23197b681651e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://blog.golang.org/context&quot;&gt;https://blog.golang.org/context&lt;/a&gt; for example code for a server that uses Contexts.</source>
          <target state="translated">有关使用上下文的服务器的示例代码，请参见&lt;a href=&quot;https://blog.golang.org/context&quot;&gt;https://blog.golang.org/context&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f8fa4b86ca7a1947812b5144ad80bb7923b98b76" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://blog.golang.org/http-tracing&quot;&gt;https://blog.golang.org/http-tracing&lt;/a&gt; for more.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;https://blog.golang.org/http-tracing&quot;&gt;https://blog.golang.org/http-tracing&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="55fd6381c1e6f556a9d9a122b9ddab024cd5623c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://en.wikipedia.org/wiki/Isolation_(database_systems)#Isolation_levels&quot;&gt;https://en.wikipedia.org/wiki/Isolation_(database_systems)#Isolation_levels&lt;/a&gt;.</source>
          <target state="translated">请参阅&lt;a href=&quot;https://en.wikipedia.org/wiki/Isolation_(database_systems)#Isolation_levels&quot;&gt;https://en.wikipedia.org/wiki/Isolation_(database_systems)#Isolation_levels&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5b6207cb402edce8d859bdca9debb6fc32598a7f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://en.wikipedia.org/wiki/Mathematics_of_cyclic_redundancy_checks#Reversed_representations_and_reciprocal_polynomials&quot;&gt;https://en.wikipedia.org/wiki/Mathematics_of_cyclic_redundancy_checks#Reversed_representations_and_reciprocal_polynomials&lt;/a&gt; for information.</source>
          <target state="translated">有关信息，请参见&lt;a href=&quot;https://en.wikipedia.org/wiki/Mathematics_of_cyclic_redundancy_checks#Reversed_representations_and_reciprocal_polynomials&quot;&gt;https://en.wikipedia.org/wiki/Mathematics_of_cyclic_redundancy_checks#Reversed_representations_and_reciprocal_polynomials&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="822defb6e38c1c8b51e3bd857cd8e75be7930a08" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://en.wikipedia.org/wiki/Web_colors#Web-safe_colors&quot;&gt;https://en.wikipedia.org/wiki/Web_colors#Web-safe_colors&lt;/a&gt; for details.</source>
          <target state="translated">有关详细信息，请参见&lt;a href=&quot;https://en.wikipedia.org/wiki/Web_colors#Web-safe_colors&quot;&gt;https://en.wikipedia.org/wiki/Web_colors#Web-safe_colors&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="012d19a411e4e0484271ae09bcb7f34da4a9a591" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://fast-cgi.github.io/&quot;&gt;https://fast-cgi.github.io/&lt;/a&gt; for an unofficial mirror of the original documentation.</source>
          <target state="translated">请参阅&lt;a href=&quot;https://fast-cgi.github.io/&quot;&gt;https://fast-cgi.github.io/&lt;/a&gt;以获取原始文档的非官方镜像。</target>
        </trans-unit>
        <trans-unit id="c591b3698d1803b8997f519f5ea5ff42b510cd7a" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site-00&quot;&gt;https://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site-00&lt;/a&gt; for details.</source>
          <target state="translated">有关详细信息，请参见&lt;a href=&quot;https://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site-00&quot;&gt;https://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site-00&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ebe2d422131406c7b8b8363b0278a5d60f19e086" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://tools.ietf.org/html/rfc6265&quot;&gt;https://tools.ietf.org/html/rfc6265&lt;/a&gt; for details.</source>
          <target state="translated">有关详细信息，请参见&lt;a href=&quot;https://tools.ietf.org/html/rfc6265&quot;&gt;https://tools.ietf.org/html/rfc6265&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f939efd0712db18e39e637012cde4b443ec363ef" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://www.iana.org/assignments/tls-parameters/tls-parameters.xml&quot;&gt;https://www.iana.org/assignments/tls-parameters/tls-parameters.xml&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfeb891e01c83428f5fff33780366881bea259da" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://www.w3.org/TR/css3-syntax/#parsing&quot;&gt;https://www.w3.org/TR/css3-syntax/#parsing&lt;/a&gt; and &lt;a href=&quot;https://web.archive.org/web/20090211114933/http://w3.org/TR/css3-syntax#style&quot;&gt;https://web.archive.org/web/20090211114933/http://w3.org/TR/css3-syntax#style&lt;/a&gt;</source>
          <target state="translated">参见&lt;a href=&quot;https://www.w3.org/TR/css3-syntax/#parsing&quot;&gt;https://www.w3.org/TR/css3-syntax/#parsing&lt;/a&gt;和&lt;a href=&quot;https://web.archive.org/web/20090211114933/http://w3.org/TR/css3-syntax#style&quot;&gt;https://web.archive.org/web/20090211114933/http://w3.org/TR/css3-syntax#style&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b12c5bb65217a01227ad162d33c3fed71b0401c9" translate="yes" xml:space="preserve">
          <source>See MarshalIndent for an example.</source>
          <target state="translated">参见MarshalIndent的例子。</target>
        </trans-unit>
        <trans-unit id="cec031b75e78fe653173c9a966907dfc7a5c304d" translate="yes" xml:space="preserve">
          <source>See PublicKey.Equal for details on how Curve is compared.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a1e97ca1a62398cd193e09c77540d6a3a116112" translate="yes" xml:space="preserve">
          <source>See also &amp;ldquo;A Layman's Guide to a Subset of ASN.1, BER, and DER,&amp;rdquo; &lt;a href=&quot;http://luca.ntop.org/Teaching/Appunti/asn1.html&quot;&gt;http://luca.ntop.org/Teaching/Appunti/asn1.html&lt;/a&gt;.</source>
          <target state="translated">另请参见&amp;ldquo; ASN.1，BER和DER子集的Layman指南&amp;rdquo;，&lt;a href=&quot;http://luca.ntop.org/Teaching/Appunti/asn1.html&quot;&gt;http：//luca.ntop.org/Teaching/Appunti/asn1.html&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f35fe0b7c2e4d6b79cc655771a00378e8038d6ad" translate="yes" xml:space="preserve">
          <source>See also Rob Pike, &amp;ldquo;Lexical File Names in Plan 9 or Getting Dot-Dot Right,&amp;rdquo; &lt;a href=&quot;https://9p.io/sys/doc/lexnames.html&quot;&gt;https://9p.io/sys/doc/lexnames.html&lt;/a&gt;</source>
          <target state="translated">另请参见Rob Pike，&amp;ldquo; Plan 9中的词汇文件名或正确的点对点&amp;rdquo;，&lt;a href=&quot;https://9p.io/sys/doc/lexnames.html&quot;&gt;https：//9p.io/sys/doc/lexnames.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c57c543e703b305eac0e44a135198463dbeead16" translate="yes" xml:space="preserve">
          <source>See func Dial for a description of the host and port parameters.</source>
          <target state="translated">有关主机和端口参数的描述,请参见 func Dial。</target>
        </trans-unit>
        <trans-unit id="b9538b240ebef42fb9902c82f39f4d8fe015d462" translate="yes" xml:space="preserve">
          <source>See func Dial for a description of the hostport parameter, and host and port results.</source>
          <target state="translated">关于主机端口参数、主机和端口结果的描述,请参见 func Dial。</target>
        </trans-unit>
        <trans-unit id="f55bd52960d8a9b74f8c169b63b303f83068df0d" translate="yes" xml:space="preserve">
          <source>See func Dial for a description of the network and address parameters.</source>
          <target state="translated">有关网络和地址参数的描述,请参见 func Dial。</target>
        </trans-unit>
        <trans-unit id="27af5de3a2347f6faceaa84c4b1f14ae1dbd0c9d" translate="yes" xml:space="preserve">
          <source>See func Listen for a description of the network and address parameters.</source>
          <target state="translated">有关网络和地址参数的描述,请参见 func Listen。</target>
        </trans-unit>
        <trans-unit id="6b6b3dee4908b79bcc47570b27eb5ceec2a78402" translate="yes" xml:space="preserve">
          <source>See func ListenPacket for a description of the network and address parameters.</source>
          <target state="translated">有关网络和地址参数的描述,请参见func ListenPacket。</target>
        </trans-unit>
        <trans-unit id="ad4f4bb8708490d77806cbbb7379b205b4ed91be" translate="yes" xml:space="preserve">
          <source>See package json to understand how non-string content is marshaled for embedding in JavaScript contexts.</source>
          <target state="translated">请参阅包json,了解非字符串内容是如何在JavaScript上下文中嵌入的。</target>
        </trans-unit>
        <trans-unit id="6e66c2f2a3fcd4dca444d07ce7d1a4b916782623" translate="yes" xml:space="preserve">
          <source>See page 36 of RFC 959 (&lt;a href=&quot;https://www.ietf.org/rfc/rfc959.txt&quot;&gt;https://www.ietf.org/rfc/rfc959.txt&lt;/a&gt;) for details of another form of response accepted:</source>
          <target state="translated">有关接受的另一种形式的响应，请参阅RFC 959（&lt;a href=&quot;https://www.ietf.org/rfc/rfc959.txt&quot;&gt;https://www.ietf.org/rfc/rfc959.txt&lt;/a&gt;）的第36页：</target>
        </trans-unit>
        <trans-unit id="89753a3f5bb64713c93e9dd202de0a7448a21cee" translate="yes" xml:space="preserve">
          <source>See the Client.Do method documentation for details on how redirects are handled.</source>
          <target state="translated">关于如何处理重定向,请参见Client.Do方法文档。</target>
        </trans-unit>
        <trans-unit id="ca6b0bd4889c5a06e76626f48ec79733e1fde8b5" translate="yes" xml:space="preserve">
          <source>See the Decoder.Strict and Decoder.Entity fields' documentation.</source>
          <target state="translated">参见Decoder.Strict和Decoder.Entity字段的文档。</target>
        </trans-unit>
        <trans-unit id="69633a7324ac73d11db8887864a0a74fd2f5588f" translate="yes" xml:space="preserve">
          <source>See the documentation for Marshal for details about the conversion of Go values to JSON.</source>
          <target state="translated">关于将Go值转换为JSON的细节,请参见Marshal的文档。</target>
        </trans-unit>
        <trans-unit id="45c89cab840adb83eec8d88d66bfe51744007d64" translate="yes" xml:space="preserve">
          <source>See the documentation for Marshal for details about the conversion of Go values to XML.</source>
          <target state="translated">关于将Go值转换为XML的细节,请参见Marshal的文档。</target>
        </trans-unit>
        <trans-unit id="f6ad8d64ce7abf48e48759b114cf5bbde1ec1217" translate="yes" xml:space="preserve">
          <source>See the documentation for Reader's DotReader method for details about dot-encoding.</source>
          <target state="translated">请参阅Reader的DotReader方法的文档,了解点阵编码的细节。</target>
        </trans-unit>
        <trans-unit id="07bb2782143cae54efbc20f97e601c6258fdfa3a" translate="yes" xml:space="preserve">
          <source>See the documentation for Unmarshal for details about the conversion of JSON into a Go value.</source>
          <target state="translated">关于将JSON转换为Go值的细节,请参见Unmarshal的文档。</target>
        </trans-unit>
        <trans-unit id="5b7d9e398b9767ef1472ee8144b5fcbf7154f428" translate="yes" xml:space="preserve">
          <source>See the documentation for the DotReader method for details about dot-encoding.</source>
          <target state="translated">请参阅DotReader方法的文档,了解关于点阵编码的详细信息。</target>
        </trans-unit>
        <trans-unit id="20a56feb05a514c49115ca9854f4e8b6ab081007" translate="yes" xml:space="preserve">
          <source>See the documentation of ErrorCode for details.</source>
          <target state="translated">详见ErrorCode的文档。</target>
        </trans-unit>
        <trans-unit id="130b144345eef54088939126445f2041356e9967" translate="yes" xml:space="preserve">
          <source>See the net/http/pprof package for more details about all of the debug endpoints installed by this import.</source>
          <target state="translated">参见net/http/pprof包,以了解更多关于此导入安装的所有调试端点的细节。</target>
        </trans-unit>
        <trans-unit id="8ea13af2c476fd8c34b53410467a8c4eec967244" translate="yes" xml:space="preserve">
          <source>See the net/http/pprof package for more details.</source>
          <target state="translated">详见net/http/pprof包。</target>
        </trans-unit>
        <trans-unit id="58a48e9dbb684e401e679bc392894a41123c39b5" translate="yes" xml:space="preserve">
          <source>See the package documentation for more details about initializing an FS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7129eb47abb47be846a8de8beba3573c278ce39c" translate="yes" xml:space="preserve">
          <source>See type IPNet and func ParseCIDR for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d95f74a97d247876324f75dbbfb30fd3fdf53de6" translate="yes" xml:space="preserve">
          <source>See: &lt;a href=&quot;https://www.pkware.com/appnote&quot;&gt;https://www.pkware.com/appnote&lt;/a&gt;</source>
          <target state="translated">请参阅：&lt;a href=&quot;https://www.pkware.com/appnote&quot;&gt;https&lt;/a&gt;：//www.pkware.com/appnote</target>
        </trans-unit>
        <trans-unit id="4c4d4997512bc2a6a144281549f19954818ba0de" translate="yes" xml:space="preserve">
          <source>Seed returns h's seed value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="421cab07939e4ef921a875d22fec2c50b6b26cc4" translate="yes" xml:space="preserve">
          <source>Seed returns the private key seed corresponding to priv. It is provided for interoperability with RFC 8032. RFC 8032's private keys correspond to seeds in this package.</source>
          <target state="translated">Seed返回对应于priv.Seed的私钥种子,它与RFC 8032提供了互操作性。它是为了与RFC 8032的互操作性而提供的。RFC 8032的私钥对应于这个包中的种子。</target>
        </trans-unit>
        <trans-unit id="b24f14f5efbc89ced2f3c041e71ddf2e16d01a87" translate="yes" xml:space="preserve">
          <source>Seed uses the provided seed value to initialize the default Source to a deterministic state. If Seed is not called, the generator behaves as if seeded by Seed(1). Seed values that have the same remainder when divided by 2&amp;sup3;&amp;sup1;-1 generate the same pseudo-random sequence. Seed, unlike the Rand.Seed method, is safe for concurrent use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2daea0c21550e6b91614c2942780e2e38582d89" translate="yes" xml:space="preserve">
          <source>Seed uses the provided seed value to initialize the default Source to a deterministic state. If Seed is not called, the generator behaves as if seeded by Seed(1). Seed values that have the same remainder when divided by 2^31-1 generate the same pseudo-random sequence. Seed, unlike the Rand.Seed method, is safe for concurrent use.</source>
          <target state="translated">Seed 使用提供的种子值将默认的 Source 初始化为确定性状态。如果不调用Seed,则生成器的行为与Seed(1)的种子值相同。当种子值除以2^31-1时具有相同余数的种子值会产生相同的伪随机序列。与Rand.Seed方法不同,Seed对于并发使用是安全的。</target>
        </trans-unit>
        <trans-unit id="06599ffd87d9ecfcc5955a8a8f6f2e80af71b779" translate="yes" xml:space="preserve">
          <source>Seed uses the provided seed value to initialize the generator to a deterministic state. Seed should not be called concurrently with any other Rand method.</source>
          <target state="translated">Seed 使用提供的种子值将生成器初始化为确定性状态。Seed不应该与其他任何Rand方法同时调用。</target>
        </trans-unit>
        <trans-unit id="63eada0c1ee90c191cced8ff6a478d23ec01c7bb" translate="yes" xml:space="preserve">
          <source>Seek implements the io.Seeker interface.</source>
          <target state="translated">Seek实现了io.Seeker接口。</target>
        </trans-unit>
        <trans-unit id="410f9d629b5b2020b5303452364dec83676d0a30" translate="yes" xml:space="preserve">
          <source>Seek positions the Reader at offset off in the encoded entry stream. Offset 0 can be used to denote the first entry.</source>
          <target state="translated">Seek将读卡器定位在编码输入流中的偏移量上,偏移量0可以用来表示第一个输入。偏移量0可以用来表示第一个条目。</target>
        </trans-unit>
        <trans-unit id="73550a62d2076f2c392030c22ea826a5948745a2" translate="yes" xml:space="preserve">
          <source>Seek restores the line table reader to a position returned by Tell.</source>
          <target state="translated">Seek将行表阅读器恢复到Tell返回的位置。</target>
        </trans-unit>
        <trans-unit id="6d637ad9eaafe14fbed4d5e3bc3eb33df03f11cb" translate="yes" xml:space="preserve">
          <source>Seek sets the offset for the next Read or Write on file to offset, interpreted according to whence: 0 means relative to the origin of the file, 1 means relative to the current offset, and 2 means relative to the end. It returns the new offset and an error, if any. The behavior of Seek on a file opened with O_APPEND is not specified.</source>
          <target state="translated">Seek设置下一次对文件的读或写的偏移量为offset,根据whence解释。0表示相对于文件的原点,1表示相对于当前的偏移量,2表示相对于文件的终点.如果有的话,它返回新的偏移量和一个错误。对于用O_APPEND打开的文件,没有指定Seek的行为。</target>
        </trans-unit>
        <trans-unit id="e00a273e91af976fc6df810663ccae8e6326bc28" translate="yes" xml:space="preserve">
          <source>Seek sets the offset for the next Read or Write to offset, interpreted according to whence: SeekStart means relative to the start of the file, SeekCurrent means relative to the current offset, and SeekEnd means relative to the end. Seek returns the new offset relative to the start of the file and an error, if any.</source>
          <target state="translated">Seek设置下一次读或写的偏移量,根据whence解释。SeekStart表示相对于文件的开始,SeekCurrent表示相对于当前的偏移量,SeekEnd表示相对于文件的结束.Seek返回相对于文件开始的新偏移量,如果有错误,则返回一个错误。</target>
        </trans-unit>
        <trans-unit id="f2691430f4c04cd93d687e7abb0ccf591170c83f" translate="yes" xml:space="preserve">
          <source>Seek whence values.</source>
          <target state="translated">寻求当值。</target>
        </trans-unit>
        <trans-unit id="69cfaf772b14f0b576e9cb0bbd8f02155636d19d" translate="yes" xml:space="preserve">
          <source>SeekPC returns the Entry for the compilation unit that includes pc, and positions the reader to read the children of that unit. If pc is not covered by any unit, SeekPC returns ErrUnknownPC and the position of the reader is undefined.</source>
          <target state="translated">SeekPC返回包括pc在内的编译单元的条目,并定位读取器以读取该单元的子单元。如果pc没有被任何单元覆盖,SeekPC返回ErrUnknownPC,并且读取器的位置是未定义的。</target>
        </trans-unit>
        <trans-unit id="ce674d68613294249c458dda3fd950d087fbda52" translate="yes" xml:space="preserve">
          <source>SeekPC sets *entry to the LineEntry that includes pc and positions the reader on the next entry in the line table. If necessary, this will seek backwards to find pc.</source>
          <target state="translated">SeekPC将*entry设置为包含pc的LineEntry,并将读取器定位在行表的下一个条目上。如果有必要,这将向后寻找pc。</target>
        </trans-unit>
        <trans-unit id="9d91685eee68f0702fc5f565a2ad58bdb01cbd6c" translate="yes" xml:space="preserve">
          <source>Seeker is the interface that wraps the basic Seek method.</source>
          <target state="translated">Seeker是包装基本Seek方法的接口。</target>
        </trans-unit>
        <trans-unit id="c221b3bf48536c91e36f1aa582e0e6ad14671a86" translate="yes" xml:space="preserve">
          <source>Seeking to an offset before the start of the file is an error. Seeking to any positive offset is legal, but the behavior of subsequent I/O operations on the underlying object is implementation-dependent.</source>
          <target state="translated">在文件开始前寻找偏移量是错误的。对任何正偏移量的查找都是合法的,但是对底层对象的后续I/O操作的行为是依赖于实现的。</target>
        </trans-unit>
        <trans-unit id="d283b12149f88184eedb3514ba9c006d88d9d635" translate="yes" xml:space="preserve">
          <source>Segment returns the first Segment with the given name, or nil if no such segment exists.</source>
          <target state="translated">Segment返回第一个给定名称的Segment,如果不存在,则返回nil。</target>
        </trans-unit>
        <trans-unit id="4ee9c170709717ea62d8ec2ac63808bf3b81d532" translate="yes" xml:space="preserve">
          <source>Select executes a select operation described by the list of cases. Like the Go select statement, it blocks until at least one of the cases can proceed, makes a uniform pseudo-random choice, and then executes that case. It returns the index of the chosen case and, if that case was a receive operation, the value received and a boolean indicating whether the value corresponds to a send on the channel (as opposed to a zero value received because the channel is closed).</source>
          <target state="translated">Select执行一个由case列表描述的选择操作。和Go选择语句一样,它阻塞到至少有一个case可以进行,进行统一的伪随机选择,然后执行该case。它返回所选情况的索引,如果该情况是接收操作,则返回接收到的值和一个布尔值,表示该值是否对应于通道上的发送(而不是因为通道关闭而接收到的零值)。</target>
        </trans-unit>
        <trans-unit id="9f23aae7e3512dd0773f6a470359d03ccb841782" translate="yes" xml:space="preserve">
          <source>Select executes a select operation described by the list of cases. Like the Go select statement, it blocks until at least one of the cases can proceed, makes a uniform pseudo-random choice, and then executes that case. It returns the index of the chosen case and, if that case was a receive operation, the value received and a boolean indicating whether the value corresponds to a send on the channel (as opposed to a zero value received because the channel is closed). Select supports a maximum of 65536 cases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7716a94c0a405511b91cc23c646dfce03e542371" translate="yes" xml:space="preserve">
          <source>SelectionKind describes the kind of a selector expression x.f (excluding qualified identifiers).</source>
          <target state="translated">SelectionKind描述了选择器表达式x.f的种类(不包括限定标识符)。</target>
        </trans-unit>
        <trans-unit id="656dfc577aeb6e9f277a9a8820fcfc6e5db75f21" translate="yes" xml:space="preserve">
          <source>SelectionString returns the string form of s. The Qualifier controls the printing of package-level objects, and may be nil.</source>
          <target state="translated">SelectionString 返回 s 的字符串形式,限定符控制包级对象的打印,可以为零。</target>
        </trans-unit>
        <trans-unit id="edad40365c9764afdd964f9245649f6856af2d11" translate="yes" xml:space="preserve">
          <source>Send sends x on the channel v. It panics if v's kind is not Chan or if x's type is not the same type as v's element type. As in Go, x's value must be assignable to the channel's element type.</source>
          <target state="translated">如果v的种类不是Chan或者x的类型与v的元素类型不一样,它就会惊慌失措。在围棋中,x的值必须可以分配给通道的元素类型。</target>
        </trans-unit>
        <trans-unit id="2750b0f06411195ed08fefe45f59d520ab6f8353" translate="yes" xml:space="preserve">
          <source>SendMail</source>
          <target state="translated">SendMail</target>
        </trans-unit>
        <trans-unit id="1a5bbac84e0744da338847af3ed794816ef236ce" translate="yes" xml:space="preserve">
          <source>SendMail connects to the server at addr, switches to TLS if possible, authenticates with the optional mechanism a if possible, and then sends an email from address from, to addresses to, with message msg. The addr must include a port, as in &quot;mail.example.com:smtp&quot;.</source>
          <target state="translated">SendMail 在addr处连接到服务器,如果可能的话切换到TLS,如果可能的话使用可选的机制a进行验证,然后从addr地址向addr地址发送邮件,并发送msg。addr必须包含一个端口,如 &quot;mail.example.com:smtp&quot;。</target>
        </trans-unit>
        <trans-unit id="9866b4faed06fd643cf801f0e203a46a3fe6c756" translate="yes" xml:space="preserve">
          <source>Serve accepts incoming FastCGI connections on the listener l, creating a new goroutine for each. The goroutine reads requests and then calls handler to reply to them. If l is nil, Serve accepts connections from os.Stdin. If handler is nil, http.DefaultServeMux is used.</source>
          <target state="translated">Serve在监听器l上接受传入的FastCGI连接,为每个连接创建一个新的goroutine。goroutine 读取请求,然后调用 handler 来回复它们。如果 l 为 nil,Serve 接受来自 os.Stdin 的连接。如果 handler 为 nil,则使用 http.DefaultServeMux。</target>
        </trans-unit>
        <trans-unit id="d8de44e0fb5292324dadb958bb0ec67283e1e920" translate="yes" xml:space="preserve">
          <source>Serve accepts incoming HTTP connections on the listener l, creating a new service goroutine for each. The service goroutines read requests and then call handler to reply to them.</source>
          <target state="translated">Serve在监听器l上接受传入的HTTP连接,为每个连接创建一个新的服务goroutine。服务goroutine读取请求,然后调用handler来回复请求。</target>
        </trans-unit>
        <trans-unit id="fb2fbb4a3d173feafc83e986b5d91f4c043b98cd" translate="yes" xml:space="preserve">
          <source>Serve accepts incoming connections on the Listener l, creating a new service goroutine for each. The service goroutines read requests and then call srv.Handler to reply to them.</source>
          <target state="translated">Serve在Listener l上接受传入的连接,为每个连接创建一个新的服务goroutine。服务goroutine读取请求,然后调用srv.Handler来回复请求。</target>
        </trans-unit>
        <trans-unit id="f65496b12ef6ef062ca261d02fdcc1afec4ce5ea" translate="yes" xml:space="preserve">
          <source>Serve always returns a non-nil error and closes l. After Shutdown or Close, the returned error is ErrServerClosed.</source>
          <target state="translated">Serve总是返回一个非零的错误并关闭l,关机或关闭后,返回的错误是ErrServerClosed。</target>
        </trans-unit>
        <trans-unit id="4671511496e9d853a658f8c526e4dbf184a2c34c" translate="yes" xml:space="preserve">
          <source>Serve always returns a non-nil error.</source>
          <target state="translated">Serve总是返回一个非零的错误。</target>
        </trans-unit>
        <trans-unit id="497078ba977bfc095dad2477b3172dcb26f1c0ab" translate="yes" xml:space="preserve">
          <source>Serve executes the provided Handler on the currently active CGI request, if any. If there's no current CGI environment an error is returned. The provided handler may be nil to use http.DefaultServeMux.</source>
          <target state="translated">Serve在当前活动的CGI请求上执行所提供的处理程序(如果有的话)。如果当前没有CGI环境,将返回一个错误。所提供的处理程序可能是nil,以使用http.DefaultServeMux。</target>
        </trans-unit>
        <trans-unit id="dbfb7d2b5b789e7fe76f3c2462b4817839783a1b" translate="yes" xml:space="preserve">
          <source>ServeCodec is like ServeConn but uses the specified codec to decode requests and encode responses.</source>
          <target state="translated">ServeCodec和ServeConn一样,但使用指定的编解码器来解码请求和编码响应。</target>
        </trans-unit>
        <trans-unit id="09ac76223546ffdd3d100d24b6bc49c0b7956df0" translate="yes" xml:space="preserve">
          <source>ServeConn runs the DefaultServer on a single connection. ServeConn blocks, serving the connection until the client hangs up. The caller typically invokes ServeConn in a go statement. ServeConn uses the gob wire format (see package gob) on the connection. To use an alternate codec, use ServeCodec. See NewClient's comment for information about concurrent access.</source>
          <target state="translated">ServeConn在单个连接上运行DefaultServer。ServeConn阻塞,为连接服务,直到客户端挂断。调用者通常在go语句中调用ServeConn。ServeConn在连接上使用gob线格式(参见包gob)。要使用其他的编解码器,请使用ServeCodec。关于并发访问的信息,请参见NewClient的注释。</target>
        </trans-unit>
        <trans-unit id="d136d0992046f83551cea5f2576de13dc7e39384" translate="yes" xml:space="preserve">
          <source>ServeConn runs the JSON-RPC server on a single connection. ServeConn blocks, serving the connection until the client hangs up. The caller typically invokes ServeConn in a go statement.</source>
          <target state="translated">ServeConn在单个连接上运行JSON-RPC服务器。ServeConn阻塞,为连接服务,直到客户端挂断。调用者通常在go语句中调用ServeConn。</target>
        </trans-unit>
        <trans-unit id="2f01374418f76760c6cb616cbabd675e38909787" translate="yes" xml:space="preserve">
          <source>ServeConn runs the server on a single connection. ServeConn blocks, serving the connection until the client hangs up. The caller typically invokes ServeConn in a go statement. ServeConn uses the gob wire format (see package gob) on the connection. To use an alternate codec, use ServeCodec. See NewClient's comment for information about concurrent access.</source>
          <target state="translated">ServeConn在单个连接上运行服务器。ServeConn阻塞,为连接服务,直到客户端挂断。调用者通常在go语句中调用ServeConn。ServeConn在连接上使用gob线格式(参见包gob)。要使用其他的编解码器,请使用ServeCodec。关于并发访问的信息,请参见NewClient的注释。</target>
        </trans-unit>
        <trans-unit id="ef53643ab98faf2b116983a1f327c585aaa8a435" translate="yes" xml:space="preserve">
          <source>ServeContent replies to the request using the content in the provided ReadSeeker. The main benefit of ServeContent over io.Copy is that it handles Range requests properly, sets the MIME type, and handles If-Match, If-Unmodified-Since, If-None-Match, If-Modified-Since, and If-Range requests.</source>
          <target state="translated">ServeContent使用提供的ReadSeeker中的内容来回复请求。与io.Copy相比,ServeContent的主要好处是它能正确处理Range请求,设置MIME类型,并处理If-Match、If-Unmodified-Since、If-None-Match、If-Modified-Since和If-Range请求。</target>
        </trans-unit>
        <trans-unit id="cfd658fe667ad1d964897018a5c4cf11bec05335" translate="yes" xml:space="preserve">
          <source>ServeFile replies to the request with the contents of the named file or directory.</source>
          <target state="translated">ServeFile用命名的文件或目录的内容来回复请求。</target>
        </trans-unit>
        <trans-unit id="049197d23952867737fe7bc77daa12a248c70057" translate="yes" xml:space="preserve">
          <source>ServeHTTP calls f(w, r).</source>
          <target state="translated">ServeHTTP调用f(w,r)。</target>
        </trans-unit>
        <trans-unit id="4c4916bc850460672f4222f24dda17f824b214d6" translate="yes" xml:space="preserve">
          <source>ServeHTTP dispatches the request to the handler whose pattern most closely matches the request URL.</source>
          <target state="translated">ServeHTTP将请求发送到与请求URL最匹配的模式的处理程序。</target>
        </trans-unit>
        <trans-unit id="21deb32922a44f4fb534ed8afc10e377cb3ed92e" translate="yes" xml:space="preserve">
          <source>ServeHTTP implements an http.Handler that answers RPC requests.</source>
          <target state="translated">ServeHTTP实现了一个http.Handler,用于响应RPC请求。</target>
        </trans-unit>
        <trans-unit id="6b5f212880feffc9d4b20ece24bb964f1dfe9a0e" translate="yes" xml:space="preserve">
          <source>ServeHTTP should write reply headers and data to the ResponseWriter and then return. Returning signals that the request is finished; it is not valid to use the ResponseWriter or read from the Request.Body after or concurrently with the completion of the ServeHTTP call.</source>
          <target state="translated">ServeHTTP应该向ResponseWriter写入回复头和数据,然后返回。返回标志着请求已完成;在ServeHTTP调用完成后或与之同时使用ResponseWriter或从Request.Body读取数据是无效的。</target>
        </trans-unit>
        <trans-unit id="643b76d4394a8e8ca4ec7165cbad824736ed0dab" translate="yes" xml:space="preserve">
          <source>ServeMux also takes care of sanitizing the URL request path and the Host header, stripping the port number and redirecting any request containing . or .. elements or repeated slashes to an equivalent, cleaner URL.</source>
          <target state="translated">ServeMux还负责净化URL请求路径和Host头,去除端口号,并将任何包含.或.元素或重复斜杠的请求重定向到一个等价的、更干净的URL。</target>
        </trans-unit>
        <trans-unit id="c2c623da8699103087cc62f3c47b54b0c6fbdef4" translate="yes" xml:space="preserve">
          <source>ServeMux is an HTTP request multiplexer. It matches the URL of each incoming request against a list of registered patterns and calls the handler for the pattern that most closely matches the URL.</source>
          <target state="translated">ServeMux是一个HTTP请求复用器。它将每个传入请求的URL与注册模式列表进行匹配,并调用与URL最匹配的模式的处理程序。</target>
        </trans-unit>
        <trans-unit id="d57d6d29bc00d69dcb5016e00c29678f29b25c20" translate="yes" xml:space="preserve">
          <source>ServeMux.Handle</source>
          <target state="translated">ServeMux.Handle</target>
        </trans-unit>
        <trans-unit id="a2ccb85e8b555a7018f6848932b3cf1638f89e04" translate="yes" xml:space="preserve">
          <source>ServeRequest is like ServeCodec but synchronously serves a single request. It does not close the codec upon completion.</source>
          <target state="translated">ServeRequest与ServeCodec类似,但同步服务于单个请求。它不会在完成后关闭编解码器。</target>
        </trans-unit>
        <trans-unit id="914b527f3acbaa5705eeffe44b971ef90f12446b" translate="yes" xml:space="preserve">
          <source>ServeTLS accepts incoming HTTPS connections on the listener l, creating a new service goroutine for each. The service goroutines read requests and then call handler to reply to them.</source>
          <target state="translated">ServeTLS在监听器l上接受传入的HTTPS连接,为每个连接创建一个新的服务goroutine。服务goroutine读取请求,然后调用handler来回复请求。</target>
        </trans-unit>
        <trans-unit id="0a96e454a3074cfb2a672bba732fc55cf3ace063" translate="yes" xml:space="preserve">
          <source>ServeTLS accepts incoming connections on the Listener l, creating a new service goroutine for each. The service goroutines perform TLS setup and then read requests, calling srv.Handler to reply to them.</source>
          <target state="translated">ServeTLS接受监听器l上的传入连接,为每个连接创建一个新的服务goroutine。服务goroutine执行TLS设置,然后读取请求,调用srv.Handler来回复请求。</target>
        </trans-unit>
        <trans-unit id="5d05c42df2acb99153f40488ff8b30bf621e7c31" translate="yes" xml:space="preserve">
          <source>ServeTLS always returns a non-nil error.</source>
          <target state="translated">ServeTLS总是返回一个非零的错误。</target>
        </trans-unit>
        <trans-unit id="49b6a1abd7e8e016f95152133848467bef1659cf" translate="yes" xml:space="preserve">
          <source>ServeTLS always returns a non-nil error. After Shutdown or Close, the returned error is ErrServerClosed.</source>
          <target state="translated">ServeTLS总是返回一个非零的错误。关机或关闭后,返回的错误是ErrServerClosed。</target>
        </trans-unit>
        <trans-unit id="cb0cb170d106f8e8d5af1e05bbdbd3a96a7de197" translate="yes" xml:space="preserve">
          <source>Server</source>
          <target state="translated">Server</target>
        </trans-unit>
        <trans-unit id="fd27359b7f3750869c6d376d504d1fa87f6d2a64" translate="yes" xml:space="preserve">
          <source>Server (HTTP2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ddf4403b77024142dd6473786b6571dc8b196f9" translate="yes" xml:space="preserve">
          <source>Server represents an RPC Server.</source>
          <target state="translated">服务器代表一个RPC服务器。</target>
        </trans-unit>
        <trans-unit id="313ac33490fd78320856fae075839a276bcab472" translate="yes" xml:space="preserve">
          <source>Server returns a new TLS server side connection using conn as the underlying transport. The configuration config must be non-nil and must include at least one certificate or else set GetCertificate.</source>
          <target state="translated">服务器返回一个新的TLS服务器端连接,使用conn作为底层传输。配置config必须为非零,并且必须包含至少一个证书,否则设置GetCertificate。</target>
        </trans-unit>
        <trans-unit id="e0b4e659e40eb8a8a1e289fa3271bf98ef6e2706" translate="yes" xml:space="preserve">
          <source>Server.Shutdown</source>
          <target state="translated">Server.Shutdown</target>
        </trans-unit>
        <trans-unit id="e8983457da1ab21a6c85c2a9507e94af92a8934d" translate="yes" xml:space="preserve">
          <source>ServerConn is an artifact of Go's early HTTP implementation. It is low-level, old, and unused by Go's current HTTP stack. We should have deleted it before Go 1.</source>
          <target state="translated">ServerConn是Go早期HTTP实现的产物。它是低级的、旧的,而且没有被Go当前的HTTP栈使用。我们应该在Go 1之前删除它。</target>
        </trans-unit>
        <trans-unit id="e48e77ca43f54c7c217d619efb9bd95f1a1f8aba" translate="yes" xml:space="preserve">
          <source>ServerError represents an error that has been returned from the remote side of the RPC connection.</source>
          <target state="translated">ServerError表示从RPC连接的远程端返回的错误。</target>
        </trans-unit>
        <trans-unit id="547b92e886182f3f71367607ff47558fb0fe8029" translate="yes" xml:space="preserve">
          <source>ServerInfo records information about an SMTP server.</source>
          <target state="translated">ServerInfo 记录了一个 SMTP 服务器的信息。</target>
        </trans-unit>
        <trans-unit id="870594a7b5d015bba7a8d2c0875c56f2fce85f71" translate="yes" xml:space="preserve">
          <source>SessionResetter may be implemented by Conn to allow drivers to reset the session state associated with the connection and to signal a bad connection.</source>
          <target state="translated">SessionResetter可以由Conn实现,以允许驱动程序重置与连接相关联的会话状态,并发出坏连接的信号。</target>
        </trans-unit>
        <trans-unit id="aab8e5c4d0aeae85893fd621bc37db1b1a73696a" translate="yes" xml:space="preserve">
          <source>Set assigns x to the value v. It panics if CanSet returns false. As in Go, x's value must be assignable to v's type.</source>
          <target state="translated">Set将x赋值给值v,如果CanSet返回false,它就会恐慌。和围棋中一样,x的值必须可以分配给v的类型。</target>
        </trans-unit>
        <trans-unit id="1d2a8709f5b7f411cc9ba583a652581b21b6d185" translate="yes" xml:space="preserve">
          <source>Set is called once, in command line order, for each flag present. The flag package may call the String method with a zero-valued receiver, such as a nil pointer.</source>
          <target state="translated">Set按照命令行顺序,对每个存在的标志调用一次。标志包可以用一个零值的接收器,比如一个nil指针来调用String方法。</target>
        </trans-unit>
        <trans-unit id="e8fb40cfeae3d73e6b30e01495ac2c9fe7ff8cc2" translate="yes" xml:space="preserve">
          <source>Set sets the JavaScript property p of value v to ValueOf(x). It panics if v is not a JavaScript object.</source>
          <target state="translated">Set将值v的JavaScript属性p设置为ValueOf(x)。如果v不是JavaScript对象,它就会恐慌。</target>
        </trans-unit>
        <trans-unit id="87f6096d8457ac4b04a70faa68ba0c62c9f61ecc" translate="yes" xml:space="preserve">
          <source>Set sets the header entries associated with key to the single element value. It replaces any existing values associated with key.</source>
          <target state="translated">设置将与key相关联的头条目设置为单元素值。它替换任何与key相关联的现有值。</target>
        </trans-unit>
        <trans-unit id="82fcf24728ab76cc9481c998a3f5414cead1eb36" translate="yes" xml:space="preserve">
          <source>Set sets the header entries associated with key to the single element value. It replaces any existing values associated with key. The key is case insensitive; it is canonicalized by textproto.CanonicalMIMEHeaderKey. To use non-canonical keys, assign to the map directly.</source>
          <target state="translated">设置将与key相关联的头条目设置为单元素值。它替换任何与key相关联的现有值。key不区分大小写;它由textproto.CanonicalMIMEHeaderKey规范化。要使用非规范的键,请直接分配给地图。</target>
        </trans-unit>
        <trans-unit id="ac88d8d813ac589b26e82c68ebe23a65cc8513a6" translate="yes" xml:space="preserve">
          <source>Set sets the key to value. It replaces any existing values.</source>
          <target state="translated">Set将键值设置为值。它替换任何现有的值。</target>
        </trans-unit>
        <trans-unit id="03d2da815b81b3b89a818437487ee57f67fe7d66" translate="yes" xml:space="preserve">
          <source>Set sets the value of the named command-line flag.</source>
          <target state="translated">设置设置命名的命令行标志的值。</target>
        </trans-unit>
        <trans-unit id="f73f9638b07619a017d2f6dac015fd0d243d8333" translate="yes" xml:space="preserve">
          <source>Set sets the value of the named flag.</source>
          <target state="translated">设置设置命名标志的值。</target>
        </trans-unit>
        <trans-unit id="2c301753363dd5c13e85e87be14b65f72e0bdbb9" translate="yes" xml:space="preserve">
          <source>Set sets v to value.</source>
          <target state="translated">设将v设为值。</target>
        </trans-unit>
        <trans-unit id="0e0649c67f5fc5e092366b50d2ec623dd85834a8" translate="yes" xml:space="preserve">
          <source>Set sets z to the (possibly rounded) value of x and returns z. If z's precision is 0, it is changed to the precision of x before setting z (and rounding will have no effect). Rounding is performed according to z's precision and rounding mode; and z's accuracy reports the result error relative to the exact (not rounded) result.</source>
          <target state="translated">设置z为x的(可能是四舍五入)值,并返回z。如果z的精度为0,则在设置z之前将其改为x的精度(四舍五入没有影响)。四舍五入是根据z的精度和四舍五入模式进行的;z的精度报告了相对于精确(未四舍五入)结果的误差。</target>
        </trans-unit>
        <trans-unit id="74c097d8a8db6198a9f30d1da9cc40810faf97ea" translate="yes" xml:space="preserve">
          <source>Set sets z to x (by making a copy of x) and returns z.</source>
          <target state="translated">设置z为x(通过复制x)并返回z。</target>
        </trans-unit>
        <trans-unit id="2de2c16a0340db2bee0118ccf9d1587fd704cd50" translate="yes" xml:space="preserve">
          <source>Set sets z to x and returns z.</source>
          <target state="translated">设z为x,并返回z。</target>
        </trans-unit>
        <trans-unit id="fd19264e05439f601808981687979a9cbd55329f" translate="yes" xml:space="preserve">
          <source>SetBasicAuth sets the request's Authorization header to use HTTP Basic Authentication with the provided username and password.</source>
          <target state="translated">SetBasicAuth设置请求的授权头使用提供的用户名和密码进行HTTP基本认证。</target>
        </trans-unit>
        <trans-unit id="22bdae472d3db85cab5c57989c6be910d803a01e" translate="yes" xml:space="preserve">
          <source>SetBit sets z to x, with x's i'th bit set to b (0 or 1). That is, if b is 1 SetBit sets z = x | (1 &amp;lt;&amp;lt; i); if b is 0 SetBit sets z = x &amp;amp;^ (1 &amp;lt;&amp;lt; i). If b is not 0 or 1, SetBit will panic.</source>
          <target state="translated">SetBit将z设置为x，将x的第i位设置为b（0或1）。即，如果b为1，则SetBit设置z = x | | | | |。（1 &amp;lt;&amp;lt;我）; 如果b为0 SetBit设置z = x＆^（1 &amp;lt;&amp;lt; i）。如果b不为0或1，则SetBit将发生恐慌。</target>
        </trans-unit>
        <trans-unit id="feba31f1e1635889b9235c6993fbb340077ba325" translate="yes" xml:space="preserve">
          <source>SetBits provides raw (unchecked but fast) access to z by setting its value to abs, interpreted as a little-endian Word slice, and returning z. The result and abs share the same underlying array. SetBits is intended to support implementation of missing low-level Int functionality outside this package; it should be avoided otherwise.</source>
          <target state="translated">SetBits通过将z的值设置为abs来提供对z的原始访问(未被选中但速度很快),将其解释为一个小二进制的Word片断,然后返回z。结果和abs共享同一个底层数组。SetBits的目的是为了支持在本包之外实现缺失的低级Int功能;否则应该避免使用它。</target>
        </trans-unit>
        <trans-unit id="f0a90ede61cca8ba0e26af9fe2c3c6480079bf80" translate="yes" xml:space="preserve">
          <source>SetBlockProfileRate controls the fraction of goroutine blocking events that are reported in the blocking profile. The profiler aims to sample an average of one blocking event per rate nanoseconds spent blocked.</source>
          <target state="translated">SetBlockProfileRate控制在阻塞配置文件中报告的goroutine阻塞事件的分数。剖析器的目标是平均每花一个速率纳秒阻塞事件的样本。</target>
        </trans-unit>
        <trans-unit id="459d3a69d65d385fb3b3fbe398bb9c85138ddcc2" translate="yes" xml:space="preserve">
          <source>SetBool sets v's underlying value. It panics if v's Kind is not Bool or if CanSet() is false.</source>
          <target state="translated">SetBool设置v的底层值,如果v的Kind不是Bool或者CanSet()是false,它就会恐慌。如果v的Kind不是Bool或者CanSet()是false,它就会恐慌。</target>
        </trans-unit>
        <trans-unit id="7e2455227631da0419c37dea6613f51644e9e03d" translate="yes" xml:space="preserve">
          <source>SetBoundary must be called before any parts are created, may only contain certain ASCII characters, and must be non-empty and at most 70 bytes long.</source>
          <target state="translated">SetBoundary必须在创建任何部件之前被调用,只能包含某些ASCII字符,并且必须是非空的,最多只能有70字节长。</target>
        </trans-unit>
        <trans-unit id="b06cf4ca1fda2091c2541de19f0b4a515ade4ba9" translate="yes" xml:space="preserve">
          <source>SetBoundary overrides the Writer's default randomly-generated boundary separator with an explicit value.</source>
          <target state="translated">SetBoundary用一个明确的值覆盖了Writer的默认随机生成的边界分隔符。</target>
        </trans-unit>
        <trans-unit id="6106f2ae31464af3b2e7f9b63e64b76356750152" translate="yes" xml:space="preserve">
          <source>SetBytes interprets buf as the bytes of a big-endian unsigned integer, sets z to that value, and returns z.</source>
          <target state="translated">SetBytes 将 buf 解释为一个大段无符号整数的字节,将 z 设置为该值,并返回 z。</target>
        </trans-unit>
        <trans-unit id="7a0583b12bc86b9434e36c34c4ce6e8b5c26ba75" translate="yes" xml:space="preserve">
          <source>SetBytes records the number of bytes processed in a single operation. If this is called, the benchmark will report ns/op and MB/s.</source>
          <target state="translated">SetBytes记录单次操作中处理的字节数。如果调用此功能,基准将报告ns/op和MB/s。</target>
        </trans-unit>
        <trans-unit id="bba92654aa999e9512f4dfa6313cb2838144dfe3" translate="yes" xml:space="preserve">
          <source>SetBytes sets v's underlying value. It panics if v's underlying value is not a slice of bytes.</source>
          <target state="translated">SetBytes设置v的底层值。如果v的底层值不是一个字节的片断,它就会惊慌失措。</target>
        </trans-unit>
        <trans-unit id="344d8ddf2a696d0cf0cc16a1825af1241c772a89" translate="yes" xml:space="preserve">
          <source>SetCPUProfileRate sets the CPU profiling rate to hz samples per second. If hz &amp;lt;= 0, SetCPUProfileRate turns off profiling. If the profiler is on, the rate cannot be changed without first turning it off.</source>
          <target state="translated">SetCPUProfileRate将CPU分析速率设置为每秒hz个样本。如果hz &amp;lt;= 0，则SetCPUProfileRate关闭分析。如果探查器已打开，则必须先将其关闭才能更改速率。</target>
        </trans-unit>
        <trans-unit id="1afcde63337e23e05a9b84c1c7b85f57c0092cd7" translate="yes" xml:space="preserve">
          <source>SetCap sets v's capacity to n. It panics if v's Kind is not Slice or if n is smaller than the length or greater than the capacity of the slice.</source>
          <target state="translated">SetCap将v的容量设置为n。如果v的Kind不是Slice,或者n小于长度或大于分片的容量,它就会恐慌。</target>
        </trans-unit>
        <trans-unit id="44731bc16b3d80516224c7c852f64732d07d62c1" translate="yes" xml:space="preserve">
          <source>SetCgoTraceback records three C functions to use to gather traceback information from C code and to convert that traceback information into symbolic information. These are used when printing stack traces for a program that uses cgo.</source>
          <target state="translated">SetCgoTraceback记录了三个C函数,用于从C代码中收集回溯信息,并将回溯信息转换为符号信息。这些函数在打印使用cgo的程序的堆栈跟踪信息时使用。</target>
        </trans-unit>
        <trans-unit id="348727b9cf484ab1b9762cea6ba0daa8dde8a933" translate="yes" xml:space="preserve">
          <source>SetCgoTraceback should be called only once, ideally from an init function.</source>
          <target state="translated">SetCgoTraceback应该只被调用一次,最好是在一个init函数中调用。</target>
        </trans-unit>
        <trans-unit id="67fdfbbba9d56846727e0eb32ef8332c0bf20f53" translate="yes" xml:space="preserve">
          <source>SetComment sets the end-of-central-directory comment field. It can only be called before Close.</source>
          <target state="translated">SetComment 设置中心目录结束时的注释字段。它只能在关闭之前被调用。</target>
        </trans-unit>
        <trans-unit id="64f03250bccb0b87aeb45d79cb945d1dd0319cb9" translate="yes" xml:space="preserve">
          <source>SetComplex sets v's underlying value to x. It panics if v's Kind is not Complex64 or Complex128, or if CanSet() is false.</source>
          <target state="translated">如果v的Kind不是Complex64或Complex128,或者CanSet()为false,它就会恐慌。</target>
        </trans-unit>
        <trans-unit id="b69ac591abf21b23b441af754a7112fe6fa046f7" translate="yes" xml:space="preserve">
          <source>SetConnMaxIdleTime sets the maximum amount of time a connection may be idle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac6f79734771b4e3adca460b8931ae634206e20f" translate="yes" xml:space="preserve">
          <source>SetConnMaxLifetime sets the maximum amount of time a connection may be reused.</source>
          <target state="translated">SetConnMaxLifetime设置一个连接可以重复使用的最大时间。</target>
        </trans-unit>
        <trans-unit id="cdfc398e60b71e846a0a56ba3b1860f275a8c713" translate="yes" xml:space="preserve">
          <source>SetCookie adds a Set-Cookie header to the provided ResponseWriter's headers. The provided cookie must have a valid Name. Invalid cookies may be silently dropped.</source>
          <target state="translated">SetCookie 会在所提供的 ResponseWriter 的头文件中添加一个 Set-Cookie 头文件。提供的 cookie 必须有一个有效的 Name。无效的cookie可能会被静静地放弃。</target>
        </trans-unit>
        <trans-unit id="b1b53737e17baa71a51a0e5ede6a121ccba30720" translate="yes" xml:space="preserve">
          <source>SetCookies implements the SetCookies method of the http.CookieJar interface.</source>
          <target state="translated">SetCookies实现了http.CookieJar接口的SetCookies方法。</target>
        </trans-unit>
        <trans-unit id="d3cec8d8761e8a9c75efaa51883455428c208775" translate="yes" xml:space="preserve">
          <source>SetDeadline implements the Conn SetDeadline method.</source>
          <target state="translated">SetDeadline实现Conn SetDeadline方法。</target>
        </trans-unit>
        <trans-unit id="c0b50695667af085ed75f6ae0d7d496b50008cd3" translate="yes" xml:space="preserve">
          <source>SetDeadline sets the deadline associated with the listener. A zero time value disables the deadline.</source>
          <target state="translated">SetDeadline设置与监听器相关联的截止时间。时间值为零则禁用截止时间。</target>
        </trans-unit>
        <trans-unit id="a7b4723a8859169359d85b5290587d68a0fc3307" translate="yes" xml:space="preserve">
          <source>SetDeadline sets the read and write deadlines associated with the connection. A zero value for t means Read and Write will not time out. After a Write has timed out, the TLS state is corrupt and all future writes will return the same error.</source>
          <target state="translated">SetDeadline设置与连接相关的读写截止时间。t的值为零意味着读和写不会超时。写入超时后,TLS状态就会损坏,以后所有的写入都会返回同样的错误。</target>
        </trans-unit>
        <trans-unit id="883b1167470e9a9bc17df175940ef7113ec71b15" translate="yes" xml:space="preserve">
          <source>SetDeadline sets the read and write deadlines for a File. It is equivalent to calling both SetReadDeadline and SetWriteDeadline.</source>
          <target state="translated">SetDeadline设置文件的读和写截止时间。它相当于同时调用SetReadDeadline和SetWriteDeadline。</target>
        </trans-unit>
        <trans-unit id="7aad8c47d1ea7eb52b60d62c5b63c9894a7f6a08" translate="yes" xml:space="preserve">
          <source>SetEscapeHTML specifies whether problematic HTML characters should be escaped inside JSON quoted strings. The default behavior is to escape &amp;amp;, &amp;lt;, and &amp;gt; to \u0026, \u003c, and \u003e to avoid certain safety problems that can arise when embedding JSON in HTML.</source>
          <target state="translated">SetEscapeHTML指定是否应在JSON引用的字符串内转义有问题的HTML字符。缺省行为是将＆，&amp;lt;和&amp;gt;转义为\ u0026，\ u003c和\ u003e，以避免在将JSON嵌入HTML时可能出现的某些安全问题。</target>
        </trans-unit>
        <trans-unit id="dd27241a174aea4c1fb70802e55de9c35c7e1aca" translate="yes" xml:space="preserve">
          <source>SetFinalizer sets the finalizer associated with obj to the provided finalizer function. When the garbage collector finds an unreachable block with an associated finalizer, it clears the association and runs finalizer(obj) in a separate goroutine. This makes obj reachable again, but now without an associated finalizer. Assuming that SetFinalizer is not called again, the next time the garbage collector sees that obj is unreachable, it will free obj.</source>
          <target state="translated">SetFinalizer将与obj关联的finalizer设置为提供的finalizer函数。当垃圾回收器发现一个不可到达的块,并有一个关联的finalizer时,它会清除关联,并在一个单独的goroutine中运行finalizer(obj)。这使得obj再次可达,但现在没有关联的终结器。假设SetFinalizer没有被再次调用,下次垃圾回收器看到obj不可到达时,它将释放obj。</target>
        </trans-unit>
        <trans-unit id="516de8a9b6e7300def0c0d80a14119cce09c9af1" translate="yes" xml:space="preserve">
          <source>SetFinalizer(obj, nil) clears any finalizer associated with obj.</source>
          <target state="translated">SetFinalizer(obj,nil)清除任何与obj相关联的定标器。</target>
        </trans-unit>
        <trans-unit id="fce6aef209330cc8b12176816b79927fb4cacd60" translate="yes" xml:space="preserve">
          <source>SetFlags sets the output flags for the logger.</source>
          <target state="translated">SetFlags 设置记录仪的输出标志。</target>
        </trans-unit>
        <trans-unit id="2389acee4b107177db39a04d2a50d69a80e07539" translate="yes" xml:space="preserve">
          <source>SetFlags sets the output flags for the logger. The flag bits are Ldate, Ltime, and so on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd0ec7930cc082a2a1ef8ed98443be56c5746d85" translate="yes" xml:space="preserve">
          <source>SetFlags sets the output flags for the standard logger.</source>
          <target state="translated">SetFlags 设置标准记录器的输出标志。</target>
        </trans-unit>
        <trans-unit id="e112d20317b511d78e95cf42b818e10d239d1b7a" translate="yes" xml:space="preserve">
          <source>SetFlags sets the output flags for the standard logger. The flag bits are Ldate, Ltime, and so on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a44e49f661219c769f20780167a6964483f17f7a" translate="yes" xml:space="preserve">
          <source>SetFloat sets v's underlying value to x. It panics if v's Kind is not Float32 or Float64, or if CanSet() is false.</source>
          <target state="translated">如果v的种类不是Float32或Float64,或者CanSet()为false,它就会恐慌。</target>
        </trans-unit>
        <trans-unit id="8e47d96a49d3af2841a8dc184d5134cb1a32de48" translate="yes" xml:space="preserve">
          <source>SetFloat64 sets z to exactly f and returns z. If f is not finite, SetFloat returns nil.</source>
          <target state="translated">SetFloat64将z精确地设置为f并返回z。如果f不是有限的,SetFloat返回nil。</target>
        </trans-unit>
        <trans-unit id="7d8e2534e02690c3fed1859413bf2f8f63c436f1" translate="yes" xml:space="preserve">
          <source>SetFloat64 sets z to the (possibly rounded) value of x and returns z. If z's precision is 0, it is changed to 53 (and rounding will have no effect). SetFloat64 panics with ErrNaN if x is a NaN.</source>
          <target state="translated">SetFloat64将z设置为x的(可能是四舍五入)值,并返回z。如果z的精度为0,则改为53(四舍五入没有影响)。如果x是NaN,SetFloat64会用ErrNaN恐慌。</target>
        </trans-unit>
        <trans-unit id="7b801568b0fa82e3d000c6cfdb98f7b328836a9b" translate="yes" xml:space="preserve">
          <source>SetFrac sets z to a/b and returns z.</source>
          <target state="translated">SetFrac将z设置为a/b,并返回z。</target>
        </trans-unit>
        <trans-unit id="a9ac4380aa91d01b1e1308169f05c3eff9861e31" translate="yes" xml:space="preserve">
          <source>SetFrac sets z to a/b and returns z. If b == 0, SetFrac panics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45fde5eac415722d6b8394ea7547d400d1373021" translate="yes" xml:space="preserve">
          <source>SetFrac64 sets z to a/b and returns z.</source>
          <target state="translated">SetFrac64将z设置为a/b并返回z。</target>
        </trans-unit>
        <trans-unit id="5993df56e43367a1c47f44460a83d56bdcf65739" translate="yes" xml:space="preserve">
          <source>SetFrac64 sets z to a/b and returns z. If b == 0, SetFrac64 panics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="805636f93a7dd0b6aa2183e35b0d00ca6d7104e9" translate="yes" xml:space="preserve">
          <source>SetGCPercent sets the garbage collection target percentage: a collection is triggered when the ratio of freshly allocated data to live data remaining after the previous collection reaches this percentage. SetGCPercent returns the previous setting. The initial setting is the value of the GOGC environment variable at startup, or 100 if the variable is not set. A negative percentage disables garbage collection.</source>
          <target state="translated">SetGCPercent设置垃圾收集目标百分比:当上一次收集后新分配的数据与剩余的活数据的比例达到这个百分比时,就会触发一次收集。SetGCPercent返回之前的设置。初始设置是启动时GOGC环境变量的值,如果没有设置该变量,则为100。负的百分比会禁用垃圾收集。</target>
        </trans-unit>
        <trans-unit id="906978195b1fb386902e36080f453c88d02f6211" translate="yes" xml:space="preserve">
          <source>SetGoroutineLabels sets the current goroutine's labels to match ctx. A new goroutine inherits the labels of the goroutine that created it. This is a lower-level API than Do, which should be used instead when possible.</source>
          <target state="translated">SetGoroutineLabels 设置当前goroutine的标签以匹配ctx。新的goroutine会继承创建它的goroutine的标签。这是一个比Do更低级的API,在可能的情况下应该使用Do。</target>
        </trans-unit>
        <trans-unit id="7c95fdd46823686f50f0d15060d185e4b4e5d563" translate="yes" xml:space="preserve">
          <source>SetImports sets the list of explicitly imported packages to list. It is the caller's responsibility to make sure list elements are unique.</source>
          <target state="translated">SetImports 将显式导入的软件包列表设置为 list。调用者有责任确保列表元素是唯一的。</target>
        </trans-unit>
        <trans-unit id="e7fb2cb55e4274d490452e6757d30cb84eb70855" translate="yes" xml:space="preserve">
          <source>SetIndent instructs the encoder to format each subsequent encoded value as if indented by the package-level function Indent(dst, src, prefix, indent). Calling SetIndent(&quot;&quot;, &quot;&quot;) disables indentation.</source>
          <target state="translated">SetIndent 指示编码器将随后的每个编码值格式化,就像包级函数 Indent(dst,src,prefix,indent)一样缩进。调用SetIndent(&quot;&quot;,&quot;&quot;)会禁用缩进。</target>
        </trans-unit>
        <trans-unit id="17d73d2c7105e3ec880ec1de340daf4f290af178" translate="yes" xml:space="preserve">
          <source>SetIndex sets the JavaScript index i of value v to ValueOf(x). It panics if v is not a JavaScript object.</source>
          <target state="translated">SetIndex将值v的JavaScript索引i设置为ValueOf(x)。如果v不是JavaScript对象,它就会惊慌失措。</target>
        </trans-unit>
        <trans-unit id="cea11721fc2a69428fc01f2bd7212d126248c97a" translate="yes" xml:space="preserve">
          <source>SetInf sets z to the infinite Float -Inf if signbit is set, or +Inf if signbit is not set, and returns z. The precision of z is unchanged and the result is always Exact.</source>
          <target state="translated">SetInf如果设置了signbit,则将z设置为无穷大的Float -Inf,如果没有设置signbit,则设置为+Inf,并返回z,z的精度不变,结果始终为Exact。</target>
        </trans-unit>
        <trans-unit id="7fbe79d67709b54bb947c5fb56d1678d22a06e68" translate="yes" xml:space="preserve">
          <source>SetInt sets v's underlying value to x. It panics if v's Kind is not Int, Int8, Int16, Int32, or Int64, or if CanSet() is false.</source>
          <target state="translated">如果v的Kind不是Int、Int8、Int16、Int32或Int64,或者CanSet()为false,它就会恐慌。</target>
        </trans-unit>
        <trans-unit id="e9791f172aed7c20562244430ee2933689079ec7" translate="yes" xml:space="preserve">
          <source>SetInt sets z to the (possibly rounded) value of x and returns z. If z's precision is 0, it is changed to the larger of x.BitLen() or 64 (and rounding will have no effect).</source>
          <target state="translated">SetInt将z设置为x的(可能是四舍五入)值,并返回z。如果z的精度为0,则改为x.BitLen()或64中较大的一个(四舍五入没有影响)。</target>
        </trans-unit>
        <trans-unit id="512491a3910b089e941ff0967a1c4600d38512e1" translate="yes" xml:space="preserve">
          <source>SetInt sets z to x (by making a copy of x) and returns z.</source>
          <target state="translated">SetInt将z设置为x(通过复制x)并返回z。</target>
        </trans-unit>
        <trans-unit id="e98bca88644a6b411de0d879f43c3dc3a73ef347" translate="yes" xml:space="preserve">
          <source>SetInt64 sets z to the (possibly rounded) value of x and returns z. If z's precision is 0, it is changed to 64 (and rounding will have no effect).</source>
          <target state="translated">SetInt64将z设置为x的(可能是四舍五入)值,并返回z。如果z的精度为0,则改为64(四舍五入没有影响)。</target>
        </trans-unit>
        <trans-unit id="b8bc149266ba57391034d803e65399926af1a382" translate="yes" xml:space="preserve">
          <source>SetInt64 sets z to x and returns z.</source>
          <target state="translated">SetInt64将z设置为x并返回z。</target>
        </trans-unit>
        <trans-unit id="d8ce7465b1093a7258c6cd344217beee671aa978" translate="yes" xml:space="preserve">
          <source>SetKeepAlive sets whether the operating system should send keep-alive messages on the connection.</source>
          <target state="translated">SetKeepAlive设置操作系统是否应该在连接上发送保持活力的消息。</target>
        </trans-unit>
        <trans-unit id="89bf3d4dd275ff44ab7379e669050fce6f5a7eee" translate="yes" xml:space="preserve">
          <source>SetKeepAlivePeriod sets period between keep-alives.</source>
          <target state="translated">SetKeepAlivePeriod设置保持生命的周期。</target>
        </trans-unit>
        <trans-unit id="582102a7fa3d8dd186ee22dfa213a701e54c1846" translate="yes" xml:space="preserve">
          <source>SetKeepAlivesEnabled controls whether HTTP keep-alives are enabled. By default, keep-alives are always enabled. Only very resource-constrained environments or servers in the process of shutting down should disable them.</source>
          <target state="translated">SetKeepAlivesEnabled控制HTTP keep-alives是否被启用。默认情况下,keep-alives总是被启用。只有资源非常有限的环境或正在关闭的服务器才应该禁用它们。</target>
        </trans-unit>
        <trans-unit id="26dfe6afebdd675610dd8f1d4858b29cc7ee92db" translate="yes" xml:space="preserve">
          <source>SetLen sets v's length to n. It panics if v's Kind is not Slice or if n is negative or greater than the capacity of the slice.</source>
          <target state="translated">SetLen 将 v 的长度设置为 n。如果 v 的 Kind 不是 Slice,或者 n 为负值或大于 slice 的容量,它就会恐慌。</target>
        </trans-unit>
        <trans-unit id="549c2b676df9b698394503e0fb62c18e8fa20e0b" translate="yes" xml:space="preserve">
          <source>SetLines sets the line offsets for a file and reports whether it succeeded. The line offsets are the offsets of the first character of each line; for instance for the content &quot;ab\nc\n&quot; the line offsets are {0, 3}. An empty file has an empty line offset table. Each line offset must be larger than the offset for the previous line and smaller than the file size; otherwise SetLines fails and returns false. Callers must not mutate the provided slice after SetLines returns.</source>
          <target state="translated">SetLines设置文件的行偏移量并报告是否成功。行偏移量是每行第一个字符的偏移量;例如对于内容 &quot;ab\nc\n&quot;,行偏移量是{0,3}。一个空文件的行偏移表是空的。每一行的偏移量必须大于前一行的偏移量,并且小于文件大小;否则SetLines会失败并返回false。调用者在SetLines返回后不得突变提供的分片。</target>
        </trans-unit>
        <trans-unit id="d21966bc8423cbdfca9062e709a1e1bfe2b23f9c" translate="yes" xml:space="preserve">
          <source>SetLinesForContent sets the line offsets for the given file content. It ignores position-altering //line comments.</source>
          <target state="translated">SetLinesForContent 设置给定文件内容的行偏移量。它忽略了位置改变的//行注释。</target>
        </trans-unit>
        <trans-unit id="7ead5ff3e458c012090db0e3e46dd956293c59f9" translate="yes" xml:space="preserve">
          <source>SetLinger sets the behavior of Close on a connection which still has data waiting to be sent or to be acknowledged.</source>
          <target state="translated">SetLinger设置关闭连接的行为,如果连接上还有数据等待发送或确认。</target>
        </trans-unit>
        <trans-unit id="be9cec1a054bdf6dae13515b712cb92bca8f03d8" translate="yes" xml:space="preserve">
          <source>SetMantExp sets z to mant &amp;times; 2**exp and returns z. The result z has the same precision and rounding mode as mant. SetMantExp is an inverse of MantExp but does not require 0.5 &amp;lt;= |mant| &amp;lt; 1.0. Specifically:</source>
          <target state="translated">SetMantExp将z设置为mant&amp;times;2 ** exp并返回z。结果z具有与mant相同的精度和舍入模式。SetMantExp是MantExp的倒数，但不需要0.5 &amp;lt;= | mant | &amp;lt;1.0。特别：</target>
        </trans-unit>
        <trans-unit id="e756f252cafbddbad755f1c06583ad4489564d92" translate="yes" xml:space="preserve">
          <source>SetMapIndex sets the element associated with key in the map v to elem. It panics if v's Kind is not Map. If elem is the zero Value, SetMapIndex deletes the key from the map. Otherwise if v holds a nil map, SetMapIndex will panic. As in Go, key's elem must be assignable to the map's key type, and elem's value must be assignable to the map's elem type.</source>
          <target state="translated">SetMapIndex将地图v中与key关联的元素设置为elem。如果v的Kind不是Map,SetMapIndex就会惊慌失措。如果elem是零值,SetMapIndex会从地图中删除key。否则,如果v持有一个nil的地图,SetMapIndex就会惊慌失措。在Go中,key的elem必须可以分配给map的key类型,elem的value必须可以分配给map的elem类型。</target>
        </trans-unit>
        <trans-unit id="b83dfa89acb5e3c977158b5fc2760de63b71e48b" translate="yes" xml:space="preserve">
          <source>SetMaxIdleConns sets the maximum number of connections in the idle connection pool.</source>
          <target state="translated">SetMaxIdleConns设置空闲连接池中的最大连接数。</target>
        </trans-unit>
        <trans-unit id="aa3863aa142a9c48791c290f00a7c4c3d76f3b6e" translate="yes" xml:space="preserve">
          <source>SetMaxOpenConns sets the maximum number of open connections to the database.</source>
          <target state="translated">SetMaxOpenConns设置数据库的最大开放连接数。</target>
        </trans-unit>
        <trans-unit id="f71d21e95f096f232e72fff30f80b920b1e3f9f5" translate="yes" xml:space="preserve">
          <source>SetMaxStack is useful mainly for limiting the damage done by goroutines that enter an infinite recursion. It only limits future stack growth.</source>
          <target state="translated">SetMaxStack的作用主要是限制进入无限递归的goroutine所造成的伤害。它只限制未来的堆栈增长。</target>
        </trans-unit>
        <trans-unit id="eeacbe78a8fd0d4396f1b6456e34f5857612c565" translate="yes" xml:space="preserve">
          <source>SetMaxStack sets the maximum amount of memory that can be used by a single goroutine stack. If any goroutine exceeds this limit while growing its stack, the program crashes. SetMaxStack returns the previous setting. The initial setting is 1 GB on 64-bit systems, 250 MB on 32-bit systems.</source>
          <target state="translated">SetMaxStack设置单个goroutine栈可以使用的最大内存量。如果任何goroutine在增长其堆栈时超过了这个限制,程序就会崩溃。SetMaxStack返回之前的设置。64位系统的初始设置为1GB,32位系统为250MB。</target>
        </trans-unit>
        <trans-unit id="f3db779e80ef6f3114ec1d823f560fd81d90559f" translate="yes" xml:space="preserve">
          <source>SetMaxStack sets the maximum amount of memory that can be used by a single goroutine stack. If any goroutine exceeds this limit while growing its stack, the program crashes. SetMaxStack returns the previous setting. The initial setting is 1 GB on 64-bit systems, 250 MB on 32-bit systems. There may be a system-imposed maximum stack limit regardless of the value provided to SetMaxStack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67aff5f59d34d3ecd519adad914c8c6423eaf752" translate="yes" xml:space="preserve">
          <source>SetMaxThreads is useful mainly for limiting the damage done by programs that create an unbounded number of threads. The idea is to take down the program before it takes down the operating system.</source>
          <target state="translated">SetMaxThreads的作用主要是限制那些创建无限制线程数量的程序所造成的损害。这个想法是在程序击垮操作系统之前就将其击垮。</target>
        </trans-unit>
        <trans-unit id="c6d8bc8cae003fe5d78cf6cda31fbae67e36c482" translate="yes" xml:space="preserve">
          <source>SetMaxThreads sets the maximum number of operating system threads that the Go program can use. If it attempts to use more than this many, the program crashes. SetMaxThreads returns the previous setting. The initial setting is 10,000 threads.</source>
          <target state="translated">SetMaxThreads设置了Go程序可以使用的最大操作系统线程数。如果它试图使用超过这个数量的线程,程序就会崩溃。SetMaxThreads 会返回之前的设置。初始设置为10,000个线程。</target>
        </trans-unit>
        <trans-unit id="806ff185f3a93cc6a21f24b12259c49de358388c" translate="yes" xml:space="preserve">
          <source>SetModTime sets the Modified, ModifiedTime, and ModifiedDate fields to the given time in UTC.</source>
          <target state="translated">SetModTime将Modified、ModifiedTime和ModifiedDate字段设置为给定的UTC时间。</target>
        </trans-unit>
        <trans-unit id="e9c592771061ffaaa3d588fb3aae3da84d0635b8" translate="yes" xml:space="preserve">
          <source>SetMode changes the permission and mode bits for the FileHeader.</source>
          <target state="translated">SetMode改变FileHeader的权限和模式位。</target>
        </trans-unit>
        <trans-unit id="de45da11e316c622a3816956315a15e8817585f9" translate="yes" xml:space="preserve">
          <source>SetMode sets z's rounding mode to mode and returns an exact z. z remains unchanged otherwise. z.SetMode(z.Mode()) is a cheap way to set z's accuracy to Exact.</source>
          <target state="translated">z.SetMode将z的四舍五入模式设置为模式,并返回一个精确的z,否则z将保持不变。z.SetMode(z.Mode())是将z的精度设置为精确的廉价方法。</target>
        </trans-unit>
        <trans-unit id="b01a08220867d2b1a3c66f3bf6f8b7ca7ea5c1ae" translate="yes" xml:space="preserve">
          <source>SetMutexProfileFraction controls the fraction of mutex contention events that are reported in the mutex profile. On average 1/rate events are reported. The previous rate is returned.</source>
          <target state="translated">SetMutexProfileFraction控制在mutex profile中报告的mutex争夺事件的分数。平均报告1/率事件。返回之前的速率。</target>
        </trans-unit>
        <trans-unit id="8c38b4a404d96b417f171861cd9ebaba18b51eaf" translate="yes" xml:space="preserve">
          <source>SetName sets the package name.</source>
          <target state="translated">SetName设置软件包的名称。</target>
        </trans-unit>
        <trans-unit id="d31306f3f7eb161aa0c0b28fdb6eed5363c589c3" translate="yes" xml:space="preserve">
          <source>SetNoDelay controls whether the operating system should delay packet transmission in hopes of sending fewer packets (Nagle's algorithm). The default is true (no delay), meaning that data is sent as soon as possible after a Write.</source>
          <target state="translated">SetNoDelay控制操作系统是否应该延迟数据包传输,以希望发送更少的数据包(Nagle算法)。默认值为true(无延迟),即在写入后尽快发送数据。</target>
        </trans-unit>
        <trans-unit id="27a3c03ba54fb2a44f36a6c425cfa58520c56752" translate="yes" xml:space="preserve">
          <source>SetOffset sets the offset of the beginning of the zip data within the underlying writer. It should be used when the zip data is appended to an existing file, such as a binary executable. It must be called before any data is written.</source>
          <target state="translated">SetOffset 设置 zip 数据在底层写入器中开始的偏移量。当zip数据被附加到一个现有的文件,如二进制可执行文件时,它应该被使用。它必须在任何数据被写入之前被调用。</target>
        </trans-unit>
        <trans-unit id="004613f6cff6f004aabdb462fd19757cc3df0edb" translate="yes" xml:space="preserve">
          <source>SetOutput sets the destination for usage and error messages. If output is nil, os.Stderr is used.</source>
          <target state="translated">SetOutput 设置使用情况和错误信息的目的地,如果输出为nil,则使用os.Stderr。如果输出为nil,则使用os.Stderr。</target>
        </trans-unit>
        <trans-unit id="36faf63cafa162e1ef49476325f422ab20f856dd" translate="yes" xml:space="preserve">
          <source>SetOutput sets the output destination for the logger.</source>
          <target state="translated">SetOutput 设置记录仪的输出目的地。</target>
        </trans-unit>
        <trans-unit id="76988d10d7783ed1525981a82207c054e24adba8" translate="yes" xml:space="preserve">
          <source>SetOutput sets the output destination for the standard logger.</source>
          <target state="translated">SetOutput 设置标准记录仪的输出目的地。</target>
        </trans-unit>
        <trans-unit id="2547ce0f12468d65a113d53c2cfbf0ddbb6dc9bb" translate="yes" xml:space="preserve">
          <source>SetPanicOnFault controls the runtime's behavior when a program faults at an unexpected (non-nil) address. Such faults are typically caused by bugs such as runtime memory corruption, so the default response is to crash the program. Programs working with memory-mapped files or unsafe manipulation of memory may cause faults at non-nil addresses in less dramatic situations; SetPanicOnFault allows such programs to request that the runtime trigger only a panic, not a crash. SetPanicOnFault applies only to the current goroutine. It returns the previous setting.</source>
          <target state="translated">SetPanicOnFault控制运行时的行为,当程序在一个意外(非零)的地址发生故障时。这种故障通常是由运行时内存损坏等错误引起的,所以默认的响应是使程序崩溃。使用内存映射文件或不安全的内存操作的程序可能会在不太引人注目的情况下引起非零地址的故障;SetPanicOnFault允许这类程序要求运行时只触发恐慌,而不是崩溃。SetPanicOnFault只适用于当前的goroutine。它返回之前的设置。</target>
        </trans-unit>
        <trans-unit id="3a5748945f587c9edbe8542b568516d2978238cd" translate="yes" xml:space="preserve">
          <source>SetPanicOnFault controls the runtime's behavior when a program faults at an unexpected (non-nil) address. Such faults are typically caused by bugs such as runtime memory corruption, so the default response is to crash the program. Programs working with memory-mapped files or unsafe manipulation of memory may cause faults at non-nil addresses in less dramatic situations; SetPanicOnFault allows such programs to request that the runtime trigger only a panic, not a crash. The runtime.Error that the runtime panics with may have an additional method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72fac8e6222bd170971f1f697af6f11d0715e763" translate="yes" xml:space="preserve">
          <source>SetParallelism sets the number of goroutines used by RunParallel to p*GOMAXPROCS. There is usually no need to call SetParallelism for CPU-bound benchmarks. If p is less than 1, this call will have no effect.</source>
          <target state="translated">SetParallelism将RunParallel使用的goroutine数量设置为p*GOMAXPROCS。对于CPU绑定的基准,通常不需要调用SetParallelism。如果p小于1,这个调用将没有任何效果。</target>
        </trans-unit>
        <trans-unit id="8bcdfe56d7b7abb5a2feda191bae07f8cec5d4b8" translate="yes" xml:space="preserve">
          <source>SetPointer sets the unsafe.Pointer value v to x. It panics if v's Kind is not UnsafePointer.</source>
          <target state="translated">SetPointer将unsafe.Pointer值v设置为x,如果v的Kind不是UnsafePointer,它就会恐慌。</target>
        </trans-unit>
        <trans-unit id="59bd457f6414829faae9decbaede734f70a9845c" translate="yes" xml:space="preserve">
          <source>SetPos sets the position. NewIdentifier is a public method so we can't modify its signature. Chained for convenience. TODO: fix one day?</source>
          <target state="translated">SetPos设置位置。NewIdentifier是一个公共方法,所以我们不能修改它的签名。为了方便起见,链式。TODO:某天修复?</target>
        </trans-unit>
        <trans-unit id="d6d5511f09814008767ff9cfe0f77abca174ef5c" translate="yes" xml:space="preserve">
          <source>SetPrec sets z's precision to prec and returns the (possibly) rounded value of z. Rounding occurs according to z's rounding mode if the mantissa cannot be represented in prec bits without loss of precision. SetPrec(0) maps all finite values to &amp;plusmn;0; infinite values remain unchanged. If prec &amp;gt; MaxPrec, it is set to MaxPrec.</source>
          <target state="translated">SetPrec将z的精度设置为prec并返回z（可能）的舍入值。如果尾数不能以精度位表示的精确尾数，则根据z的舍入模式进行舍入。SetPrec（0）将所有有限值映射为&amp;plusmn;0；无限值保持不变。如果prec&amp;gt; MaxPrec，则将其设置为MaxPrec。</target>
        </trans-unit>
        <trans-unit id="d2d0c71771db3b5022796766d08921a2f8600461" translate="yes" xml:space="preserve">
          <source>SetPrefix sets the output prefix for the logger.</source>
          <target state="translated">SetPrefix 设置记录仪的输出前缀。</target>
        </trans-unit>
        <trans-unit id="6bbad9fae1ec236892af0fd5032d525acd1599d4" translate="yes" xml:space="preserve">
          <source>SetPrefix sets the output prefix for the standard logger.</source>
          <target state="translated">SetPrefix 设置标准记录仪的输出前缀。</target>
        </trans-unit>
        <trans-unit id="ad88a7e02a294ade703b1e817a40a72d93a7117f" translate="yes" xml:space="preserve">
          <source>SetRat sets z to the (possibly rounded) value of x and returns z. If z's precision is 0, it is changed to the largest of a.BitLen(), b.BitLen(), or 64; with x = a/b.</source>
          <target state="translated">SetRat将z设置为x的(可能是四舍五入)值,并返回z。如果z的精度为0,则改为a.BitLen()、b.BitLen()或64中最大的一个;x=a/b。</target>
        </trans-unit>
        <trans-unit id="6d4064f9d933c367ae2ed00ed675edff7a545a0e" translate="yes" xml:space="preserve">
          <source>SetReadBuffer sets the size of the operating system's receive buffer associated with the connection.</source>
          <target state="translated">SetReadBuffer设置操作系统与连接相关的接收缓冲区的大小。</target>
        </trans-unit>
        <trans-unit id="ccd6113cf88478a21eac0a31572f18b8edd4bad3" translate="yes" xml:space="preserve">
          <source>SetReadDeadline implements the Conn SetReadDeadline method.</source>
          <target state="translated">SetReadDeadline实现Conn SetReadDeadline方法。</target>
        </trans-unit>
        <trans-unit id="73112eb9e955bd18073b2a5d03cd0dc0569c7e77" translate="yes" xml:space="preserve">
          <source>SetReadDeadline sets the deadline for future Read calls and any currently-blocked Read call. A zero value for t means Read will not time out. Not all files support setting deadlines; see SetDeadline.</source>
          <target state="translated">SetReadDeadline 设置未来的 Read 调用和任何当前阻塞的 Read 调用的截止时间。t的值为零意味着Read不会超时。并非所有文件都支持设置截止时间,请参见SetDeadline。</target>
        </trans-unit>
        <trans-unit id="fed46b093271b3a5ec6430ef1d4235557caf69e8" translate="yes" xml:space="preserve">
          <source>SetReadDeadline sets the read deadline on the underlying connection. A zero value for t means Read will not time out.</source>
          <target state="translated">SetReadDeadline设置底层连接的读取截止时间。t的值为零意味着读取不会超时。</target>
        </trans-unit>
        <trans-unit id="a671d8f530db9b20355013a1524aa0514ba3175c" translate="yes" xml:space="preserve">
          <source>SetSeed sets h to use seed, which must have been returned by MakeSeed or by another Hash's Seed method. Two Hash objects with the same seed behave identically. Two Hash objects with different seeds will very likely behave differently. Any bytes added to h before this call will be discarded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e522bee4b13d693f1283de4766e87f7104cee24" translate="yes" xml:space="preserve">
          <source>SetSessionTicketKeys updates the session ticket keys for a server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c85e891cbcac943a2a1c3092ec5cc6bdcd4ebc48" translate="yes" xml:space="preserve">
          <source>SetSessionTicketKeys updates the session ticket keys for a server. The first key will be used when creating new tickets, while all keys can be used for decrypting tickets. It is safe to call this function while the server is running in order to rotate the session ticket keys. The function will panic if keys is empty.</source>
          <target state="translated">SetSessionTicketKeys更新服务器的会话票据密钥。第一个密钥将在创建新票据时使用,而所有密钥都可以用于解密票据。在服务器运行时调用这个函数是安全的,以便轮换会话票据密钥。如果keys为空,该函数会发出警报。</target>
        </trans-unit>
        <trans-unit id="8a945e442cacd2fa72eff38e8c9f6290d8ddbda2" translate="yes" xml:space="preserve">
          <source>SetString sets v's underlying value to x. It panics if v's Kind is not String or if CanSet() is false.</source>
          <target state="translated">如果v的Kind不是String或者CanSet()为false,它就会恐慌。</target>
        </trans-unit>
        <trans-unit id="e889ea521a067b34dab32ac1ec6528fffbf097cc" translate="yes" xml:space="preserve">
          <source>SetString sets z to the value of s and returns z and a boolean indicating success. s can be given as a (possibly signed) fraction &quot;a/b&quot;, or as a floating-point number optionally followed by an exponent. If a fraction is provided, both the dividend and the divisor may be a decimal integer or independently use a prefix of &amp;ldquo;0b&amp;rdquo;, &amp;ldquo;0&amp;rdquo; or &amp;ldquo;0o&amp;rdquo;, or &amp;ldquo;0x&amp;rdquo; (or their upper-case variants) to denote a binary, octal, or hexadecimal integer, respectively. The divisor may not be signed. If a floating-point number is provided, it may be in decimal form or use any of the same prefixes as above but for &amp;ldquo;0&amp;rdquo; to denote a non-decimal mantissa. A leading &amp;ldquo;0&amp;rdquo; is considered a decimal leading 0; it does not indicate octal representation in this case. An optional base-10 &amp;ldquo;e&amp;rdquo; or base-2 &amp;ldquo;p&amp;rdquo; (or their upper-case variants) exponent may be provided as well, except for hexadecimal floats which only accept an (optional) &amp;ldquo;p&amp;rdquo; exponent (because an &amp;ldquo;e&amp;rdquo; or &amp;ldquo;E&amp;rdquo; cannot be distinguished from a mantissa digit). The entire string, not just a prefix, must be valid for success. If the operation failed, the value of z is undefined but the returned value is nil.</source>
          <target state="translated">SetString将z设置为s的值，并返回z和一个指示成功的布尔值。 s可以作为（可能是带符号的）分数&amp;ldquo; a / b&amp;rdquo;给出，也可以作为浮点数（可选地后面跟一个指数）给出。如果提供分数，则除数和除数都可以是十进制整数，或者可以单独使用前缀&amp;ldquo; 0b&amp;rdquo;，&amp;ldquo; 0&amp;rdquo;或&amp;ldquo; 0o&amp;rdquo;或&amp;ldquo; 0x&amp;rdquo;（或它们的大写变体）来表示a二进制，八进制或十六进制整数。除数可能未签名。如果提供了浮点数，则它可以采用十进制形式，也可以使用与上述相同的任何前缀，但&amp;ldquo; 0&amp;rdquo;表示非十进制尾数。前导&amp;ldquo; 0&amp;rdquo;被认为是十进制前导0；在这种情况下，它不表示八进制表示形式。还可以提供可选的base-10&amp;ldquo; e&amp;rdquo;或base-2&amp;ldquo; p​​&amp;rdquo;（或其大写变体）指数，十六进制浮点数除外，该十六进制浮点数仅接受（可选）&amp;ldquo; p&amp;rdquo;指数（因为无法将&amp;ldquo; e&amp;rdquo;或&amp;ldquo; E&amp;rdquo;与尾数位区分开）。整个字符串（不仅仅是前缀）必须有效才能成功。如果操作失败，则z的值不确定，但返回的值为nil。</target>
        </trans-unit>
        <trans-unit id="efbb232582df792d37509713c9b27b267d546a58" translate="yes" xml:space="preserve">
          <source>SetString sets z to the value of s and returns z and a boolean indicating success. s must be a floating-point number of the same format as accepted by Parse, with base argument 0. The entire string (not just a prefix) must be valid for success. If the operation failed, the value of z is undefined but the returned value is nil.</source>
          <target state="translated">SetString将z设置为s的值,并返回z和一个表示成功的布尔值。s必须是一个浮点数,格式与Parse接受的格式相同,基数为0。如果操作失败,z的值是未定义的,但返回的值是nil。</target>
        </trans-unit>
        <trans-unit id="63e18202e9d9aea4fa241b783984e3dc354de835" translate="yes" xml:space="preserve">
          <source>SetString sets z to the value of s, interpreted in the given base, and returns z and a boolean indicating success. The entire string (not just a prefix) must be valid for success. If SetString fails, the value of z is undefined but the returned value is nil.</source>
          <target state="translated">SetString将z设置为s的值,用给定的基数解释,并返回z和一个表示成功的布尔值。整个字符串(不仅仅是前缀)必须是有效的才能成功。如果SetString失败,z的值是未定义的,但返回的值是nil。</target>
        </trans-unit>
        <trans-unit id="38dbbaefe7e4a783f76cb46c7ca92c9417de8b66" translate="yes" xml:space="preserve">
          <source>SetTraceback sets the amount of detail printed by the runtime in the traceback it prints before exiting due to an unrecovered panic or an internal runtime error. The level argument takes the same values as the GOTRACEBACK environment variable. For example, SetTraceback(&quot;all&quot;) ensure that the program prints all goroutines when it crashes. See the package runtime documentation for details. If SetTraceback is called with a level lower than that of the environment variable, the call is ignored.</source>
          <target state="translated">SetTraceback设置运行时在因未恢复的恐慌或内部运行时错误而退出前打印的traceback中的细节量。level参数的取值与GOTRACEBACK环境变量相同。例如,SetTraceback(&quot;all&quot;)确保程序在崩溃时打印所有的goroutine。详情请参见包运行时文档。如果调用SetTraceback的级别低于环境变量的级别,则会被忽略。</target>
        </trans-unit>
        <trans-unit id="2fefbf475ce2643229d0cfdbfe83dace76ec0745" translate="yes" xml:space="preserve">
          <source>SetTree sets the parent tree for the node. NewIdentifier is a public method so we can't modify its signature. Chained for convenience. TODO: fix one day?</source>
          <target state="translated">SetTree设置节点的父树。NewIdentifier是一个公共方法,所以我们不能修改它的签名。为方便起见,采用链式。TODO:某天修复?</target>
        </trans-unit>
        <trans-unit id="c67115f13df235c71277ca4e4cc4cdf9edef929f" translate="yes" xml:space="preserve">
          <source>SetUint sets v's underlying value to x. It panics if v's Kind is not Uint, Uintptr, Uint8, Uint16, Uint32, or Uint64, or if CanSet() is false.</source>
          <target state="translated">如果v的Kind不是Uint、Uintptr、Uint8、Uint16、Uint32或Uint64,或者CanSet()为false,它就会恐慌。</target>
        </trans-unit>
        <trans-unit id="a0d44c574be3e0563cede63a8860a8c3c9c0ea08" translate="yes" xml:space="preserve">
          <source>SetUint64 sets z to the (possibly rounded) value of x and returns z. If z's precision is 0, it is changed to 64 (and rounding will have no effect).</source>
          <target state="translated">SetUint64将z设置为x的(可能是四舍五入)值,并返回z。如果z的精度为0,则改为64(四舍五入没有影响)。</target>
        </trans-unit>
        <trans-unit id="0241edc0d224ec2868d9f80a9b9550102e93ffe8" translate="yes" xml:space="preserve">
          <source>SetUint64 sets z to x and returns z.</source>
          <target state="translated">SetUint64将z设置为x并返回z。</target>
        </trans-unit>
        <trans-unit id="d938745882d5a8df95a9972a3a9bbbee174d3301" translate="yes" xml:space="preserve">
          <source>SetUnderlying sets the underlying type and marks t as complete.</source>
          <target state="translated">SetUnderlying设置底层类型并将t标记为完成。</target>
        </trans-unit>
        <trans-unit id="6743e47079d741cfccfdce2738e02e6efcdc6dc1" translate="yes" xml:space="preserve">
          <source>SetUnlinkOnClose sets whether the underlying socket file should be removed from the file system when the listener is closed.</source>
          <target state="translated">SetUnlinkOnClose设置当监听器关闭时是否应该从文件系统中删除底层套接字文件。</target>
        </trans-unit>
        <trans-unit id="3a7d70c082a7c060c7f1583bead1a8cb995d2129" translate="yes" xml:space="preserve">
          <source>SetWriteBuffer sets the size of the operating system's transmit buffer associated with the connection.</source>
          <target state="translated">SetWriteBuffer设置操作系统与连接相关联的传输缓冲区的大小。</target>
        </trans-unit>
        <trans-unit id="ce72366b97c1e87523bdc3b4986d2a5ed5efea78" translate="yes" xml:space="preserve">
          <source>SetWriteDeadline implements the Conn SetWriteDeadline method.</source>
          <target state="translated">SetWriteDeadline实现Conn SetWriteDeadline方法。</target>
        </trans-unit>
        <trans-unit id="94da0323d7e4b44c2641176fd8ed70132d7e560c" translate="yes" xml:space="preserve">
          <source>SetWriteDeadline sets the deadline for any future Write calls and any currently-blocked Write call. Even if Write times out, it may return n &amp;gt; 0, indicating that some of the data was successfully written. A zero value for t means Write will not time out. Not all files support setting deadlines; see SetDeadline.</source>
          <target state="translated">SetWriteDeadline设置任何将来的Write调用和任何当前阻止的Write调用的截止日期。即使Write超时，它也可能返回n&amp;gt; 0，这表示某些数据已成功写入。t的值为零表示写入不会超时。并非所有文件都支持设置期限。请参阅SetDeadline。</target>
        </trans-unit>
        <trans-unit id="e383d386b9651b389cbae33232566bb47ae2af13" translate="yes" xml:space="preserve">
          <source>SetWriteDeadline sets the write deadline on the underlying connection. A zero value for t means Write will not time out. After a Write has timed out, the TLS state is corrupt and all future writes will return the same error.</source>
          <target state="translated">SetWriteDeadline设置底层连接的写入截止时间。t的值为零意味着Write不会超时。写入超时后,TLS状态就会损坏,以后所有的写入都会返回同样的错误。</target>
        </trans-unit>
        <trans-unit id="308be1977132bdbc81c0f89a2767dd32da76c702" translate="yes" xml:space="preserve">
          <source>Setenv sets the value of the environment variable named by the key. It returns an error, if any.</source>
          <target state="translated">Setenv设置键命名的环境变量的值。如果有错误,它会返回一个错误。</target>
        </trans-unit>
        <trans-unit id="509f2c6d0467d5d83c9526f638c505af46797567" translate="yes" xml:space="preserve">
          <source>Setters, numeric operations and predicates are represented as methods of the form:</source>
          <target state="translated">设置器、数值运算和谓词都以方法的形式表示。</target>
        </trans-unit>
        <trans-unit id="8b84f9f04ca185b4b399c76c8fc7c01ef4f564e3" translate="yes" xml:space="preserve">
          <source>Shift returns the result of the shift expression x op s with op == token.SHL or token.SHR (&amp;lt;&amp;lt; or &amp;gt;&amp;gt;). x must be an Int or an Unknown. If x is Unknown, the result is x.</source>
          <target state="translated">Shift返回带有op == token.SHL或token.SHR（&amp;lt;&amp;lt;或&amp;gt;&amp;gt;）的移位表达式x op s的结果。x必须是Int或Unknown。如果x为未知，则结果为x。</target>
        </trans-unit>
        <trans-unit id="fde43f2305da307b56958af17198c21e47808653" translate="yes" xml:space="preserve">
          <source>Short reports whether the -test.short flag is set.</source>
          <target state="translated">Short报告是否设置了-test.short标志。</target>
        </trans-unit>
        <trans-unit id="5b772b7bfd0a43273fb7c5f49a6c16d837261f35" translate="yes" xml:space="preserve">
          <source>Shuffle</source>
          <target state="translated">Shuffle</target>
        </trans-unit>
        <trans-unit id="79a2c163367d393e517ed372229f5d310534a9d9" translate="yes" xml:space="preserve">
          <source>Shuffle (SlicesInUnison)</source>
          <target state="translated">Shuffle (SlicesInUnison)</target>
        </trans-unit>
        <trans-unit id="732d9d1b7fa9ce160a254c0eec34ec29c54e1b79" translate="yes" xml:space="preserve">
          <source>Shuffle pseudo-randomizes the order of elements using the default Source. n is the number of elements. Shuffle panics if n &amp;lt; 0. swap swaps the elements with indexes i and j.</source>
          <target state="translated">使用默认Source随机伪随机化元素的顺序。n是元素数。如果n &amp;lt;0，则洗礼恐慌。swap交换索引为i和j的元素。</target>
        </trans-unit>
        <trans-unit id="6d3cd15e0fd6a7a5b1756b9af5c51872006c475b" translate="yes" xml:space="preserve">
          <source>Shuffle pseudo-randomizes the order of elements. n is the number of elements. Shuffle panics if n &amp;lt; 0. swap swaps the elements with indexes i and j.</source>
          <target state="translated">随机伪随机化元素的顺序。n是元素数。如果n &amp;lt;0，则洗礼恐慌。swap交换索引为i和j的元素。</target>
        </trans-unit>
        <trans-unit id="8e0c7b7cdf248102d52e5f44dcd474d4d82c359e" translate="yes" xml:space="preserve">
          <source>Shutdown does not attempt to close nor wait for hijacked connections such as WebSockets. The caller of Shutdown should separately notify such long-lived connections of shutdown and wait for them to close, if desired. See RegisterOnShutdown for a way to register shutdown notification functions.</source>
          <target state="translated">Shutdown不会试图关闭也不会等待被劫持的连接,比如WebSockets。如果需要的话,Shutdown的调用者应该单独通知这些长期存在的连接关闭并等待它们关闭。参见RegisterOnShutdown,了解注册关机通知函数的方法。</target>
        </trans-unit>
        <trans-unit id="38dcf86ad76a9ad474561d4239201b3f812c81b9" translate="yes" xml:space="preserve">
          <source>Shutdown gracefully shuts down the server without interrupting any active connections. Shutdown works by first closing all open listeners, then closing all idle connections, and then waiting indefinitely for connections to return to idle and then shut down. If the provided context expires before the shutdown is complete, Shutdown returns the context's error, otherwise it returns any error returned from closing the Server's underlying Listener(s).</source>
          <target state="translated">Shutdown可以在不中断任何活动连接的情况下优雅地关闭服务器。Shutdown的工作方式是首先关闭所有打开的监听器,然后关闭所有空闲的连接,然后无限期地等待连接恢复到空闲状态,然后关闭。如果所提供的上下文在关闭完成之前过期,Shutdown 将返回上下文的错误,否则它将返回关闭服务器的底层监听器所返回的任何错误。</target>
        </trans-unit>
        <trans-unit id="8b3d8d665a765918b70a3f5f0378d51df00b92dd" translate="yes" xml:space="preserve">
          <source>Sign</source>
          <target state="translated">Sign</target>
        </trans-unit>
        <trans-unit id="4dc2181e93ae969f803429357fe579abd176b4b4" translate="yes" xml:space="preserve">
          <source>Sign returns -1, 0, or 1 depending on whether x &amp;lt; 0, x == 0, or x &amp;gt; 0; x must be numeric or Unknown. For complex values x, the sign is 0 if x == 0, otherwise it is != 0. If x is Unknown, the result is 1.</source>
          <target state="translated">根据x &amp;lt;0，x == 0或x&amp;gt; 0，符号返回-1、0或1。x必须为数字或未知。对于复数值x，如果x == 0，则符号为0，否则为！=0。如果x为Unknown，则结果为1。</target>
        </trans-unit>
        <trans-unit id="b52aac6f1207124113d4a678eb49a1b5cf712f7a" translate="yes" xml:space="preserve">
          <source>Sign returns:</source>
          <target state="translated">签回。</target>
        </trans-unit>
        <trans-unit id="6589591f2f20ffb39adee81e8ba10edbe7dacc2e" translate="yes" xml:space="preserve">
          <source>Sign signs a hash (which should be the result of hashing a larger message) using the private key, priv. If the hash is longer than the bit-length of the private key's curve order, the hash will be truncated to that length. It returns the signature as a pair of integers. The security of the private key depends on the entropy of rand.</source>
          <target state="translated">Sign使用私钥priv签署一个哈希值(应该是对一个较大的消息进行哈希的结果)。如果散列的长度超过了私钥的曲线顺序的位长,那么散列将被截断到这个长度。它以一对整数的形式返回签名。私钥的安全性取决于rand的熵。</target>
        </trans-unit>
        <trans-unit id="311212195f2e7e53bfbdc1974b3a767400f6e3ff" translate="yes" xml:space="preserve">
          <source>Sign signs an arbitrary length hash (which should be the result of hashing a larger message) using the private key, priv. It returns the signature as a pair of integers. The security of the private key depends on the entropy of rand.</source>
          <target state="translated">Sign使用私钥priv签署一个任意长度的散列(应该是对一个较大的消息进行散列的结果)。它以一对整数的形式返回签名。私钥的安全性取决于 rand 的熵。</target>
        </trans-unit>
        <trans-unit id="c12807935684d6d5a767b5418d3f2f1d36802c6e" translate="yes" xml:space="preserve">
          <source>Sign signs digest with priv, reading randomness from rand. If opts is a *PSSOptions then the PSS algorithm will be used, otherwise PKCS #1 v1.5 will be used. digest must be the result of hashing the input message using opts.HashFunc().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd714756dfd32673e7a5fdf4e7a7d3f4c1f0476c" translate="yes" xml:space="preserve">
          <source>Sign signs digest with priv, reading randomness from rand. If opts is a *PSSOptions then the PSS algorithm will be used, otherwise PKCS#1 v1.5 will be used.</source>
          <target state="translated">用priv进行标志数字化,从rand中读取随机性。如果opts是一个*PSSOptions,那么将使用PSS算法,否则将使用PKCS#1 v1.5。</target>
        </trans-unit>
        <trans-unit id="725a324c83bff5484063c9fb79ed06b1a642a7c9" translate="yes" xml:space="preserve">
          <source>Sign signs digest with priv, reading randomness from rand. The opts argument is not currently used but, in keeping with the crypto.Signer interface, should be the hash function used to digest the message.</source>
          <target state="translated">Sign用priv签署摘要,从rand读取随机性。opts 参数目前还没有使用,但为了与 crypto.Signer 接口保持一致,应该是用来消化消息的哈希函数。</target>
        </trans-unit>
        <trans-unit id="cb5cc6baa9959aae2928064eeabac37026d1fdd3" translate="yes" xml:space="preserve">
          <source>Sign signs the given message with priv. Ed25519 performs two passes over messages to be signed and therefore cannot handle pre-hashed messages. Thus opts.HashFunc() must return zero to indicate the message hasn't been hashed. This can be achieved by passing crypto.Hash(0) as the value for opts.</source>
          <target state="translated">Sign 用 priv.Sign 对给定的消息进行签名。Ed25519 会对要签名的消息进行两次传递,因此不能处理预哈希的消息。因此 opts.HashFunc()必须返回 0 来表示消息还没有被哈希。这可以通过传递 crypto.Hash(0)作为 opts.HashFunc()的值来实现。</target>
        </trans-unit>
        <trans-unit id="8d9bc9097d624689f3abd051873c0827e390ddd8" translate="yes" xml:space="preserve">
          <source>Sign signs the message with privateKey and returns a signature. It will panic if len(privateKey) is not PrivateKeySize.</source>
          <target state="translated">Sign用privateKey签署消息并返回签名。如果len(privateKey)不是PrivateKeySize,它将会恐慌。</target>
        </trans-unit>
        <trans-unit id="374ef04419fa455579e2922ef305611877eeff57" translate="yes" xml:space="preserve">
          <source>SignASN1 signs a hash (which should be the result of hashing a larger message) using the private key, priv. If the hash is longer than the bit-length of the private key's curve order, the hash will be truncated to that length. It returns the ASN.1 encoded signature. The security of the private key depends on the entropy of rand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73058d5661f51255d2d044bad5e22d1dbeb1615f" translate="yes" xml:space="preserve">
          <source>SignPKCS1v15</source>
          <target state="translated">SignPKCS1v15</target>
        </trans-unit>
        <trans-unit id="c0fa762cfc4f83cc1ae6eb824e2e7d2490239baf" translate="yes" xml:space="preserve">
          <source>SignPKCS1v15 calculates the signature of hashed using RSASSA-PKCS1-V1_5-SIGN from RSA PKCS #1 v1.5. Note that hashed must be the result of hashing the input message using the given hash function. If hash is zero, hashed is signed directly. This isn't advisable except for interoperability.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76a7f1a903c9bd79d05146e331e0afbf510916e4" translate="yes" xml:space="preserve">
          <source>SignPKCS1v15 calculates the signature of hashed using RSASSA-PKCS1-V1_5-SIGN from RSA PKCS#1 v1.5. Note that hashed must be the result of hashing the input message using the given hash function. If hash is zero, hashed is signed directly. This isn't advisable except for interoperability.</source>
          <target state="translated">SignPKCS1v15使用RSASSA-PKCS1-V1_5-SIGN从RSA PKCS#1 v1.5计算哈希的签名。注意,哈希必须是使用给定的哈希函数对输入信息进行哈希处理的结果。如果哈希值为零,则直接对哈希值进行签名。除了为了互操作性,这并不可取。</target>
        </trans-unit>
        <trans-unit id="a8dc8c6fdf07694c004d0ad09c1805b1db05045f" translate="yes" xml:space="preserve">
          <source>SignPSS calculates the signature of digest using PSS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dc02ffb85c827150cad191cf75b74252c850c11" translate="yes" xml:space="preserve">
          <source>SignPSS calculates the signature of hashed using RSASSA-PSS [1]. Note that hashed must be the result of hashing the input message using the given hash function. The opts argument may be nil, in which case sensible defaults are used.</source>
          <target state="translated">SignPSS使用RSASSA-PSS[1]计算哈希的签名。注意哈希必须是使用给定的哈希函数对输入信息进行哈希处理的结果。opts参数可能为零,在这种情况下,会使用合理的默认值。</target>
        </trans-unit>
        <trans-unit id="456ecb37c3fc5855213ab977448f009637d487e9" translate="yes" xml:space="preserve">
          <source>Signal sends a signal to the Process. Sending Interrupt on Windows is not implemented.</source>
          <target state="translated">信号向进程发送信号。在Windows上没有实现发送中断。</target>
        </trans-unit>
        <trans-unit id="113054b65e3d478c55ce8ee9e7136eef91adbb6a" translate="yes" xml:space="preserve">
          <source>Signal wakes one goroutine waiting on c, if there is any.</source>
          <target state="translated">如果有的话,信号会唤醒一个等待c的goroutine。</target>
        </trans-unit>
        <trans-unit id="2346a18ea3002ff04eca3a130c7f40e65c56f0c9" translate="yes" xml:space="preserve">
          <source>Signals</source>
          <target state="translated">Signals</target>
        </trans-unit>
        <trans-unit id="9a761dffcc7f2df5b531ae01c6e9c1d10354c3aa" translate="yes" xml:space="preserve">
          <source>Signals are primarily used on Unix-like systems. For the use of this package on Windows and Plan 9, see below.</source>
          <target state="translated">信号主要用于类Unix系统上。关于在Windows和Plan 9上使用该软件包,请参见下文。</target>
        </trans-unit>
        <trans-unit id="be08fe4d5181cd9a339446858cf8e98d5d370ad9" translate="yes" xml:space="preserve">
          <source>SignatureScheme identifies a signature algorithm supported by TLS. See RFC 8446, Section 4.2.3.</source>
          <target state="translated">SignatureScheme标识TLS支持的签名算法。参见RFC 8446,4.2.3节。</target>
        </trans-unit>
        <trans-unit id="72364e765319ca6184606bdfcbeaf4bae3efe083" translate="yes" xml:space="preserve">
          <source>Signbit reports whether x is negative or negative zero.</source>
          <target state="translated">Signbit报告x是负数还是负零。</target>
        </trans-unit>
        <trans-unit id="06f0622cc55ee3b1ba8ef5291dd67f388a633bbf" translate="yes" xml:space="preserve">
          <source>Signed integers may be received into any signed integer variable: int, int16, etc.; unsigned integers may be received into any unsigned integer variable; and floating point values may be received into any floating point variable. However, the destination variable must be able to represent the value or the decode operation will fail.</source>
          <target state="translated">有符号整数可以接收到任何有符号整数变量:int、int16等;无符号整数可以接收到任何无符号整数变量;浮点值可以接收到任何浮点变量。但是,目的变量必须能够表示该值,否则解码操作将失败。</target>
        </trans-unit>
        <trans-unit id="ae900b849a1bf306b492bb9034be4bb3bc19b163" translate="yes" xml:space="preserve">
          <source>Signer is an interface for an opaque private key that can be used for signing operations. For example, an RSA key kept in a hardware module.</source>
          <target state="translated">Signer是一个不透明的私钥的接口,可以用来进行签名操作。例如,保存在硬件模块中的RSA密钥。</target>
        </trans-unit>
        <trans-unit id="38f4531ed194c331b7b23a6d3502ef6906c2f74a" translate="yes" xml:space="preserve">
          <source>SignerOpts contains options for signing with a Signer.</source>
          <target state="translated">SignerOpts包含了与签名者签名的选项。</target>
        </trans-unit>
        <trans-unit id="8332f3ce4c218d0bde5211f46f41f270a3be8e0c" translate="yes" xml:space="preserve">
          <source>Similarly to attributes with namespaces, attributes with a &quot;data-&quot; prefix are treated as if they had no &quot;data-&quot; prefix. So given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="966d50452c96c3fa11f316a011f44cf776d22a17" translate="yes" xml:space="preserve">
          <source>SimpleFold</source>
          <target state="translated">SimpleFold</target>
        </trans-unit>
        <trans-unit id="8bf97e6e8efa121264307227008493331dea504d" translate="yes" xml:space="preserve">
          <source>SimpleFold iterates over Unicode code points equivalent under the Unicode-defined simple case folding. Among the code points equivalent to rune (including rune itself), SimpleFold returns the smallest rune &amp;gt; r if one exists, or else the smallest rune &amp;gt;= 0. If r is not a valid Unicode code point, SimpleFold(r) returns r.</source>
          <target state="translated">SimpleFold遍历Unicode定义的简单大小写折叠下的等效Unicode代码点。在相当于符文的代码点（包括符文本身）中，如果存在，则SimpleFold返回最小的符文&amp;gt; r，否则，返回最小的符文&amp;gt; =0。如果r不是有效的Unicode代码点，则Si​​mpleFold（r）返回r。</target>
        </trans-unit>
        <trans-unit id="b27adf68197f928a987f44243ba3dcfcda229444" translate="yes" xml:space="preserve">
          <source>Simplify returns a regexp equivalent to re but without counted repetitions and with various other simplifications, such as rewriting /(?:a+)+/ to /a+/. The resulting regexp will execute correctly but its string representation will not produce the same parse tree, because capturing parentheses may have been duplicated or removed. For example, the simplified form for /(x){1,2}/ is /(x)(x)?/ but both parentheses capture as $1. The returned regexp may share structure with or be the original.</source>
          <target state="translated">Simplify 返回一个与 re 相当的 regexp,但没有计数重复,并进行了各种其他简化,例如将 /(?:a+)+/重写为 /a+/。由此产生的regexp将正确执行,但它的字符串表示方式将不会产生相同的解析树,因为捕获括号可能被重复或删除。例如,/(x){1,2}/的简化形式是/(x)(x)?/,但两个小括号都被捕获为$1.返回的regexp可能与原始的regexp共享结构,也可能是原始的regexp。</target>
        </trans-unit>
        <trans-unit id="1baaf4288309b641acaf8ca1164546c4028a35a7" translate="yes" xml:space="preserve">
          <source>Sin</source>
          <target state="translated">Sin</target>
        </trans-unit>
        <trans-unit id="60fef841296be9ebf7de4bce978c61ea99668ac2" translate="yes" xml:space="preserve">
          <source>Sin returns the sine of the radian argument x.</source>
          <target state="translated">Sin 返回弧度参数x的正弦值。</target>
        </trans-unit>
        <trans-unit id="2d7deeeba21d579c050c2a33e2db608612f16ced" translate="yes" xml:space="preserve">
          <source>Sin returns the sine of x.</source>
          <target state="translated">Sin 返回 x 的正弦值。</target>
        </trans-unit>
        <trans-unit id="28345621651842b6184cdaaa54304069ac54ba5c" translate="yes" xml:space="preserve">
          <source>Since fs.FileInfo's Name method only returns the base name of the file it describes, it may be necessary to modify Header.Name to provide the full path name of the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="032d0e9143af25fee0463a47b08e83403e61fbe1" translate="yes" xml:space="preserve">
          <source>Since os.FileInfo's Name method only returns the base name of the file it describes, it may be necessary to modify Header.Name to provide the full path name of the file.</source>
          <target state="translated">由于 os.FileInfo 的 Name 方法只返回它所描述的文件的基本名称,因此可能需要修改 Header.Name 来提供文件的完整路径名。</target>
        </trans-unit>
        <trans-unit id="b67e676cda98cae04b5ce1604ab8e9db4fbb0636" translate="yes" xml:space="preserve">
          <source>Since returns the time elapsed since t. It is shorthand for time.Now().Sub(t).</source>
          <target state="translated">它是time.Now().Sub(t)的速记。</target>
        </trans-unit>
        <trans-unit id="4aada6d4483746dcd60dcf298d86136630d9cd91" translate="yes" xml:space="preserve">
          <source>Sincos</source>
          <target state="translated">Sincos</target>
        </trans-unit>
        <trans-unit id="602eea7f1523e01bb1b745122d12becc2cb4a99c" translate="yes" xml:space="preserve">
          <source>Sincos returns Sin(x), Cos(x).</source>
          <target state="translated">Sincos 返回 Sin(x),Cos(x)。</target>
        </trans-unit>
        <trans-unit id="bc9965f20c0e26db0501d3424c1430869ed3389f" translate="yes" xml:space="preserve">
          <source>Single characters:</source>
          <target state="translated">单字。</target>
        </trans-unit>
        <trans-unit id="e5d65368cdcef8d43d81f8b1167171bcc9e4d453" translate="yes" xml:space="preserve">
          <source>Sinh</source>
          <target state="translated">Sinh</target>
        </trans-unit>
        <trans-unit id="f35b8f7d99b41bcac88dc066f89ded4a25031767" translate="yes" xml:space="preserve">
          <source>Sinh returns the hyperbolic sine of x.</source>
          <target state="translated">Sinh返回x的双曲正弦。</target>
        </trans-unit>
        <trans-unit id="b82e9be74971571cd41c1c21253c9f4cb1846e90" translate="yes" xml:space="preserve">
          <source>Size returns h's hash value size, 8 bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d9b9bb8ffbb101e667ceeb0c6df4b2d00eca63e" translate="yes" xml:space="preserve">
          <source>Size returns how many bytes Write would generate to encode the value v, which must be a fixed-size value or a slice of fixed-size values, or a pointer to such data. If v is neither of these, Size returns -1.</source>
          <target state="translated">Size 返回 Write 将产生多少字节来编码 v 值,它必须是一个固定大小的值或固定大小值的片断,或者是一个指向此类数据的指针。如果v不是这两种,Size返回-1。</target>
        </trans-unit>
        <trans-unit id="07f99b9766acbd34a40dce6ae52199b1df82e565" translate="yes" xml:space="preserve">
          <source>Size returns r's width and height.</source>
          <target state="translated">Size 返回 r 的宽度和高度。</target>
        </trans-unit>
        <trans-unit id="08603885cb8f4581e6caff80c9587384030d6fb2" translate="yes" xml:space="preserve">
          <source>Size returns the length, in bytes, of a digest resulting from the given hash function. It doesn't require that the hash function in question be linked into the program.</source>
          <target state="translated">Size 返回由给定哈希函数产生的摘要的长度,以字节为单位。它并不要求相关的哈希函数被链接到程序中。</target>
        </trans-unit>
        <trans-unit id="e25ab5f340eca2d7c5b223c77e15ee75cde585ef" translate="yes" xml:space="preserve">
          <source>Size returns the modulus size in bytes. Raw signatures and ciphertexts for or by this public key will have the same size.</source>
          <target state="translated">Size 返回以字节为单位的模数大小。原始签名和这个公钥的加密文本的大小是一样的。</target>
        </trans-unit>
        <trans-unit id="e670e1a5854b86fb3e790eec7802ceb4072867ce" translate="yes" xml:space="preserve">
          <source>Size returns the number of leading ones and total bits in the mask. If the mask is not in the canonical form--ones followed by zeros--then Size returns 0, 0.</source>
          <target state="translated">Size 返回掩码中的前导一和总位数。</target>
        </trans-unit>
        <trans-unit id="e50e49a71b6948817b0c75a5802d436dcfbbd3d4" translate="yes" xml:space="preserve">
          <source>Size returns the original length of the underlying byte slice. Size is the number of bytes available for reading via ReadAt. The returned value is always the same and is not affected by calls to any other method.</source>
          <target state="translated">Size 返回底层字节分片的原始长度。Size是通过ReadAt读取的可用字节数。返回的值总是相同的,并且不受任何其他方法调用的影响。</target>
        </trans-unit>
        <trans-unit id="20090954ae229cf40fcf85ad90018bc0a50c14a6" translate="yes" xml:space="preserve">
          <source>Size returns the original length of the underlying string. Size is the number of bytes available for reading via ReadAt. The returned value is always the same and is not affected by calls to any other method.</source>
          <target state="translated">Size 返回底层字符串的原始长度。Size是通过ReadAt读取的可用字节数。返回的值总是相同的,并且不受任何其他方法调用的影响。</target>
        </trans-unit>
        <trans-unit id="5a0d609fe825a666e200f379bb9b290e727375b4" translate="yes" xml:space="preserve">
          <source>Size returns the size of file f as registered with AddFile.</source>
          <target state="translated">Size 返回用 AddFile 注册的文件 f 的大小。</target>
        </trans-unit>
        <trans-unit id="5716d3e163196d9c451e87a39bff7287017defa9" translate="yes" xml:space="preserve">
          <source>Size returns the size of the section in bytes.</source>
          <target state="translated">Size 以字节为单位返回该部分的大小。</target>
        </trans-unit>
        <trans-unit id="33687cc2c12d65398be28bdfb49be5c9af20dea4" translate="yes" xml:space="preserve">
          <source>Size returns the size of the underlying buffer in bytes.</source>
          <target state="translated">Size以字节为单位返回底层缓冲区的大小。</target>
        </trans-unit>
        <trans-unit id="ad326c620cb25aa3f6f88fe50584af3756cb7137" translate="yes" xml:space="preserve">
          <source>Sizeof takes an expression x of any type and returns the size in bytes of a hypothetical variable v as if v was declared via var v = x. The size does not include any memory possibly referenced by x. For instance, if x is a slice, Sizeof returns the size of the slice descriptor, not the size of the memory referenced by the slice. The return value of Sizeof is a Go constant.</source>
          <target state="translated">Sizeof接受一个任意类型的表达式x,并以字节为单位返回一个假设变量v的大小,就像v是通过var v=x声明的一样。例如,如果x是一个分片,Sizeof返回分片描述符的大小,而不是分片所引用的内存的大小。Sizeof 的返回值是一个 Go 常量。</target>
        </trans-unit>
        <trans-unit id="b19905df7d36355c364fc4d465be7029063705c6" translate="yes" xml:space="preserve">
          <source>Sizes defines the sizing functions for package unsafe.</source>
          <target state="translated">Sizes定义了包不安全的大小函数。</target>
        </trans-unit>
        <trans-unit id="58588dd4d69fcc2bebbb32cb3311a65197ef6d80" translate="yes" xml:space="preserve">
          <source>SizesFor returns the Sizes used by a compiler for an architecture. The result is nil if a compiler/architecture pair is not known.</source>
          <target state="translated">SizesFor 返回一个编译器对一个架构使用的 Sizes。如果不知道编译器/架构对,结果为零。</target>
        </trans-unit>
        <trans-unit id="f2bf90f6b1f23cb7aca2de8f99806d297f79d8f6" translate="yes" xml:space="preserve">
          <source>Skip is equivalent to Log followed by SkipNow.</source>
          <target state="translated">跳过相当于Log,后面是SkipNow。</target>
        </trans-unit>
        <trans-unit id="16403f951a4dfc8a1c243a0f8eb301e145aaacf2" translate="yes" xml:space="preserve">
          <source>Skip reads tokens until it has consumed the end element matching the most recent start element already consumed. It recurs if it encounters a start element, so it can be used to skip nested structures. It returns nil if it finds an end element matching the start element; otherwise it returns an error describing the problem.</source>
          <target state="translated">跳过读取标记,直到消耗完与最近消耗的起始元素相匹配的结束元素。如果遇到起始元素,它就会递归,所以它可以用来跳过嵌套结构。如果它发现了一个与起始元素相匹配的结束元素,它就返回nil;否则它就返回一个描述问题的错误。</target>
        </trans-unit>
        <trans-unit id="70514769bf0cf43aa1fd9a8170e861cfc268114d" translate="yes" xml:space="preserve">
          <source>SkipChildren skips over the child entries associated with the last Entry returned by Next. If that Entry did not have children or Next has not been called, SkipChildren is a no-op.</source>
          <target state="translated">SkipChildren 跳过与 Next 返回的最后一个条目相关联的子条目。如果该条目没有子条目,或者Next没有被调用,SkipChildren是一个no-op。</target>
        </trans-unit>
        <trans-unit id="63887303b3af72b8bc68b80e2e2f371343498eae" translate="yes" xml:space="preserve">
          <source>SkipDir is used as a return value from WalkDirFuncs to indicate that the directory named in the call is to be skipped. It is not returned as an error by any function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="306f2cf9cd44bb1158534a5fe5beb03317afa4af" translate="yes" xml:space="preserve">
          <source>SkipDir is used as a return value from WalkFuncs to indicate that the directory named in the call is to be skipped. It is not returned as an error by any function.</source>
          <target state="translated">SkipDir是WalkFuncs的一个返回值,用于指示调用中命名的目录要被跳过。任何函数都不会将其作为错误返回。</target>
        </trans-unit>
        <trans-unit id="a9f977172633094ba7da3e08af3ab05c0c517aa4" translate="yes" xml:space="preserve">
          <source>SkipNow marks the test as having been skipped and stops its execution by calling runtime.Goexit. If a test fails (see Error, Errorf, Fail) and is then skipped, it is still considered to have failed. Execution will continue at the next test or benchmark. See also FailNow. SkipNow must be called from the goroutine running the test, not from other goroutines created during the test. Calling SkipNow does not stop those other goroutines.</source>
          <target state="translated">SkipNow 将测试标记为已被跳过,并通过调用 runtime.Goexit 停止其执行。如果一个测试失败了(见Error,Errorf,Fail),然后被跳过,它仍然被认为是失败的。执行将在下一个测试或基准继续。也请参见FailNow。SkipNow必须从运行测试的goroutine中调用,而不是从测试期间创建的其他goroutine中调用。调用SkipNow并不会使这些其他goroutine停止。</target>
        </trans-unit>
        <trans-unit id="332b0733aeb219d3842af5da1737b4332e8bb58a" translate="yes" xml:space="preserve">
          <source>Skipf is equivalent to Logf followed by SkipNow.</source>
          <target state="translated">Skipf相当于Logf,其次是SkipNow。</target>
        </trans-unit>
        <trans-unit id="416b07f26916aed7cb9e2ecd9aa8ab976885e47e" translate="yes" xml:space="preserve">
          <source>Skipped reports whether the test was skipped.</source>
          <target state="translated">Skipped(跳过)报告是否跳过测试。</target>
        </trans-unit>
        <trans-unit id="22c22c92516b167e48a8850862fd9d43b049ad6a" translate="yes" xml:space="preserve">
          <source>Skipping</source>
          <target state="translated">Skipping</target>
        </trans-unit>
        <trans-unit id="3cac34e674464c2b62286054cd9a2d2c81149efc" translate="yes" xml:space="preserve">
          <source>Sleep</source>
          <target state="translated">Sleep</target>
        </trans-unit>
        <trans-unit id="53bb6e499b626b0d907f8d7f80059af55f685b40" translate="yes" xml:space="preserve">
          <source>Sleep pauses the current goroutine for at least the duration d. A negative or zero duration causes Sleep to return immediately.</source>
          <target state="translated">睡眠暂停当前goroutine至少持续时间d,负值或零持续时间会使睡眠立即返回。</target>
        </trans-unit>
        <trans-unit id="0c8525a31f225d6db84222cdc68f43cb8c6c18bf" translate="yes" xml:space="preserve">
          <source>Slice</source>
          <target state="translated">Slice</target>
        </trans-unit>
        <trans-unit id="4972372ab292852581dde17e7410c1a0a34536d2" translate="yes" xml:space="preserve">
          <source>Slice returns v[i:j]. It panics if v's Kind is not Array, Slice or String, or if v is an unaddressable array, or if the indexes are out of bounds.</source>
          <target state="translated">Slice 返回 v[i:j]。如果v的类型不是Array、Slice或String,或者v是一个不可寻址的数组,或者索引超出了边界,它就会恐慌。</target>
        </trans-unit>
        <trans-unit id="f664f65e07ee83c0603b67c75f98aa98e653bee6" translate="yes" xml:space="preserve">
          <source>Slice sorts the provided slice given the provided less function.</source>
          <target state="translated">Slice对所提供的slice进行排序,给定了所提供的less函数。</target>
        </trans-unit>
        <trans-unit id="b4cfb20fd7104c06dc3a2b04b6a07b65db14a375" translate="yes" xml:space="preserve">
          <source>Slice sorts the slice x given the provided less function. It panics if x is not a slice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9c2b1fb38f90f114fb07f736146472316c1fd01" translate="yes" xml:space="preserve">
          <source>Slice values are deeply equal when all of the following are true: they are both nil or both non-nil, they have the same length, and either they point to the same initial entry of the same underlying array (that is, &amp;amp;x[0] == &amp;amp;y[0]) or their corresponding elements (up to length) are deeply equal. Note that a non-nil empty slice and a nil slice (for example, []byte{} and []byte(nil)) are not deeply equal.</source>
          <target state="translated">当满足以下所有条件时，切片值将完全相等：它们均为nil或均为非nil，它们具有相同的长度，并且它们指向同一基础数组的相同初始条目（即＆x [0 ] ==＆y [0]）或它们相应的元素（最大长度）相等。请注意，非nil空片和nil片（例如[] byte {}和[] byte（nil））并不完全相等。</target>
        </trans-unit>
        <trans-unit id="187ce922ba02cf6f5feb1dc1495c357805a44a28" translate="yes" xml:space="preserve">
          <source>Slice3 is the 3-index form of the slice operation: it returns v[i:j:k]. It panics if v's Kind is not Array or Slice, or if v is an unaddressable array, or if the indexes are out of bounds.</source>
          <target state="translated">Slice3 是分片操作的 3 个索引形式:它返回 v[i:j:k]。如果v的Kind不是Array或Slice,或者v是一个不可寻址的数组,或者索引出界,它就会恐慌。</target>
        </trans-unit>
        <trans-unit id="036571bfad79ab866cb35b30d706649dfea91e3e" translate="yes" xml:space="preserve">
          <source>Slice:</source>
          <target state="translated">Slice:</target>
        </trans-unit>
        <trans-unit id="0294a1ce63eca0958f1a3380376dd5b3772daeaa" translate="yes" xml:space="preserve">
          <source>SliceHeader is the runtime representation of a slice. It cannot be used safely or portably and its representation may change in a later release. Moreover, the Data field is not sufficient to guarantee the data it references will not be garbage collected, so programs must keep a separate, correctly typed pointer to the underlying data.</source>
          <target state="translated">SliceHeader 是切片的运行时表示。它不能安全地或可移植地使用,它的表示方式可能会在以后的版本中改变。此外,Data字段不足以保证它所引用的数据不会被垃圾回收,所以程序必须保留一个单独的、正确类型的指针,指向底层数据。</target>
        </trans-unit>
        <trans-unit id="18abb4a62706648ce5d49f543c560da00acf877d" translate="yes" xml:space="preserve">
          <source>SliceIsSorted reports whether the slice x is sorted according to the provided less function. It panics if x is not a slice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c22ee253fc38582e76e1a487b795c3ec911e294a" translate="yes" xml:space="preserve">
          <source>SliceIsSorted tests whether a slice is sorted.</source>
          <target state="translated">SliceIsSorted 测试一个切片是否被排序。</target>
        </trans-unit>
        <trans-unit id="45eaaaf070f6c38ebb684650d2e76ac52a7e3905" translate="yes" xml:space="preserve">
          <source>SliceOf returns the slice type with element type t. For example, if t represents int, SliceOf(t) represents []int.</source>
          <target state="translated">例如,如果t代表int,那么SliceOf(t)代表[]int。</target>
        </trans-unit>
        <trans-unit id="d3f5d8267a68290ad1478266ac0100b64a9ec9d9" translate="yes" xml:space="preserve">
          <source>SlicePtrFromStrings converts a slice of strings to a slice of pointers to NUL-terminated byte arrays. If any string contains a NUL byte, it returns (nil, EINVAL).</source>
          <target state="translated">SlicePtrFromStrings将字符串的片断转换为指向NUL结尾的字节数组的片断。如果任何字符串包含一个NUL字节,它将返回(nil,EINVAL)。</target>
        </trans-unit>
        <trans-unit id="1c864d92c212ef8abfd9b5a7229b7d9cb38de7a2" translate="yes" xml:space="preserve">
          <source>SliceStable</source>
          <target state="translated">SliceStable</target>
        </trans-unit>
        <trans-unit id="291aafdf1861d62c9bc50f1c83d1800a3cb0913c" translate="yes" xml:space="preserve">
          <source>SliceStable sorts the provided slice given the provided less function while keeping the original order of equal elements.</source>
          <target state="translated">SliceStable对所提供的分片进行排序,同时保持原有的等元素顺序。</target>
        </trans-unit>
        <trans-unit id="5d20f32e3b5c3f936d2856f8b75431892c2e100a" translate="yes" xml:space="preserve">
          <source>SliceStable sorts the slice x using the provided less function, keeping equal elements in their original order. It panics if x is not a slice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24220363f4bcd3c6462dbe1e7e4afff4012817f0" translate="yes" xml:space="preserve">
          <source>Slices of bytes in the returned token data refer to the parser's internal buffer and remain valid only until the next call to Token. To acquire a copy of the bytes, call CopyToken or the token's Copy method.</source>
          <target state="translated">返回的token数据中的字节片段是指解析器的内部缓冲区,并且只在下次调用Token之前有效。要获取字节的副本,请调用CopyToken或token的Copy方法。</target>
        </trans-unit>
        <trans-unit id="fc7f681747838baecdc0ee29795205530bc0b270" translate="yes" xml:space="preserve">
          <source>SocketControlMessage represents a socket control message.</source>
          <target state="translated">SocketControlMessage表示一个套接字控制消息。</target>
        </trans-unit>
        <trans-unit id="4457c2edf950c3c3e9063b3a5f5427cad62d71ba" translate="yes" xml:space="preserve">
          <source>Some protocols may impose additional requirements on pre-escaping the username and password. For instance, when used with OAuth2, both arguments must be URL encoded first with url.QueryEscape.</source>
          <target state="translated">有些协议可能会对用户名和密码的预封装提出额外的要求,例如,当使用OAuth2时,两个参数必须先用url.QueryEscape进行URL编码。例如,当使用OAuth2时,两个参数都必须先用url.QueryEscape进行URL编码。</target>
        </trans-unit>
        <trans-unit id="0b8c5ca797beb6df3a3a7d32f3dea277a5bafd3c" translate="yes" xml:space="preserve">
          <source>Some valid layouts are invalid time values for time.Parse, due to formats such as _ for space padding and Z for zone information.</source>
          <target state="translated">一些有效的布局对time.Parse来说是无效的时间值,这是由于格式,如_表示空格填充,Z表示区域信息。</target>
        </trans-unit>
        <trans-unit id="89fbdcfdf1cfcd667a49cfe3f7c3c0bdc4ce5124" translate="yes" xml:space="preserve">
          <source>Sort is a convenience method.</source>
          <target state="translated">排序是一种方便的方法。</target>
        </trans-unit>
        <trans-unit id="7ccbc9a539210dab661fff1de8dd5fa06bf6d3f4" translate="yes" xml:space="preserve">
          <source>Sort is a convenience method: x.Sort() calls Sort(x).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f520ad1ca9ea89523277ded79bfeb4e271e735a8" translate="yes" xml:space="preserve">
          <source>Sort sorts an ErrorList. *Error entries are sorted by position, other errors are sorted by error message, and before any *Error entry.</source>
          <target state="translated">Sort对ErrorList进行排序。*错误条目按位置排序,其他错误按错误信息排序,并在任何*错误条目之前排序。</target>
        </trans-unit>
        <trans-unit id="ca2438ac94fd8ace4cf2c599abff83e53875c98f" translate="yes" xml:space="preserve">
          <source>Sort sorts data. It makes one call to data.Len to determine n and O(n*log(n)) calls to data.Less and data.Swap. The sort is not guaranteed to be stable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8bf7dfcfaee16c58648d64101d25f3215cc22e2" translate="yes" xml:space="preserve">
          <source>Sort sorts data. It makes one call to data.Len to determine n, and O(n*log(n)) calls to data.Less and data.Swap. The sort is not guaranteed to be stable.</source>
          <target state="translated">Sort对数据进行排序。它对data.Len进行一次调用以确定n,对data.Less和data.Swap进行O(n*log(n))次调用。排序不保证稳定。</target>
        </trans-unit>
        <trans-unit id="decd49ac7a46241d55346a11f6d2fb74335dc7a9" translate="yes" xml:space="preserve">
          <source>SortImports sorts runs of consecutive import lines in import blocks in f. It also removes duplicate imports when it is possible to do so without data loss.</source>
          <target state="translated">SortImports对f中的导入块中的连续导入行进行排序,当可以做到不丢失数据时,它还可以删除重复的导入。</target>
        </trans-unit>
        <trans-unit id="6e2693fb2fa2b916dd95d972bbcb32b0b6b566ec" translate="yes" xml:space="preserve">
          <source>Source formats src in canonical gofmt style and returns the result or an (I/O or syntax) error. src is expected to be a syntactically correct Go source file, or a list of Go declarations or statements.</source>
          <target state="translated">源文件以规范的gofmt风格格式化src,并返回结果或(I/O或语法)错误。src应该是一个语法正确的Go源文件,或Go声明或语句的列表。</target>
        </trans-unit>
        <trans-unit id="a91bed1365204e8353c0f745ca77893ae1b1305d" translate="yes" xml:space="preserve">
          <source>Source values of type bool may be scanned into types *bool, *interface{}, *string, *[]byte, or *RawBytes.</source>
          <target state="translated">bool类型的源值可以被扫描成*bool、*interface{}、*string、*[]byte或*RawBytes类型。</target>
        </trans-unit>
        <trans-unit id="4cd3cd23d4f7a4635c360a861ee7be174fed76cc" translate="yes" xml:space="preserve">
          <source>Source values of type time.Time may be scanned into values of type *time.Time, *interface{}, *string, or *[]byte. When converting to the latter two, time.RFC3339Nano is used.</source>
          <target state="translated">time.Time类型的源值可以被扫描成*time.Time、*interface{}、*string或*[]byte类型的值。当转换为后两种类型时,使用time.RFC3339Nano。</target>
        </trans-unit>
        <trans-unit id="6bdf6d7926b72078af0c191b3c6238538d7b0cb1" translate="yes" xml:space="preserve">
          <source>Special case is:</source>
          <target state="translated">特殊情况是:</target>
        </trans-unit>
        <trans-unit id="38cf2e1ac5d0bfa814379b9cb5b1a8aad4c71895" translate="yes" xml:space="preserve">
          <source>Special cases are (in order):</source>
          <target state="translated">特殊情况是(依次):</target>
        </trans-unit>
        <trans-unit id="36ff1c61fcf6a6f96273c5129f496e6e2d52bc61" translate="yes" xml:space="preserve">
          <source>Special cases are the same as Exp.</source>
          <target state="translated">特殊情况与博览会相同。</target>
        </trans-unit>
        <trans-unit id="fb4f18f6f604123235431e09b3313991f0bb526d" translate="yes" xml:space="preserve">
          <source>Special cases are:</source>
          <target state="translated">特殊情况是:</target>
        </trans-unit>
        <trans-unit id="46044fc293a1827aa7aed188a242765b1470a9ed" translate="yes" xml:space="preserve">
          <source>Special section indices.</source>
          <target state="translated">特别节指数。</target>
        </trans-unit>
        <trans-unit id="a2fde335dab74ce6562dfce419b45cb58e70ab07" translate="yes" xml:space="preserve">
          <source>SpecialCase</source>
          <target state="translated">SpecialCase</target>
        </trans-unit>
        <trans-unit id="47398a3a12335bdb3df057e3646557b1b5841333" translate="yes" xml:space="preserve">
          <source>SpecialCase represents language-specific case mappings such as Turkish. Methods of SpecialCase customize (by overriding) the standard mappings.</source>
          <target state="translated">SpecialCase表示特定语言的大小写映射,如土耳其语。SpecialCase的方法可以自定义(通过覆盖)标准映射。</target>
        </trans-unit>
        <trans-unit id="fc8230b4119ad4b994db2324d71f4e0ae7ad932c" translate="yes" xml:space="preserve">
          <source>Split</source>
          <target state="translated">Split</target>
        </trans-unit>
        <trans-unit id="23392488f19a5d0be8c39d3cfafde4dd76bd94be" translate="yes" xml:space="preserve">
          <source>Split panics if it is called after scanning has started.</source>
          <target state="translated">如果在扫描开始后被调用,则会出现分裂现象。</target>
        </trans-unit>
        <trans-unit id="96e564d2bf5c731af05562ed176616a9d55a5e64" translate="yes" xml:space="preserve">
          <source>Split sets the split function for the Scanner. The default split function is ScanLines.</source>
          <target state="translated">Split(分割)设置扫描仪的分割功能。默认的分割功能是ScanLines。</target>
        </trans-unit>
        <trans-unit id="eb475bc85cdb49a4c4de00518ab4efe39bcec33e" translate="yes" xml:space="preserve">
          <source>Split slices s into all subslices separated by sep and returns a slice of the subslices between those separators. If sep is empty, Split splits after each UTF-8 sequence. It is equivalent to SplitN with a count of -1.</source>
          <target state="translated">Split 将 s 分割成由 sep 分隔的所有子片段,并返回这些分隔符之间的子片段。如果sep为空,Split会在每个UTF-8序列之后进行分割。它等同于SplitN,计数为-1。</target>
        </trans-unit>
        <trans-unit id="67dbafd6c3b93902b18d8f321af8549a1b6ad6e7" translate="yes" xml:space="preserve">
          <source>Split slices s into all substrings separated by sep and returns a slice of the substrings between those separators.</source>
          <target state="translated">将 s 分割成所有用 sep 分隔的子串,并返回这些分隔符之间的子串的分片。</target>
        </trans-unit>
        <trans-unit id="8a1469b01e576340018d58bd7e3d302e90dee09f" translate="yes" xml:space="preserve">
          <source>Split slices s into substrings separated by the expression and returns a slice of the substrings between those expression matches.</source>
          <target state="translated">将s分割成由表达式分隔的子串,并返回这些表达式匹配之间的子串的分片。</target>
        </trans-unit>
        <trans-unit id="817430fe1883828acde2ae90d1a5b512a8d87c1e" translate="yes" xml:space="preserve">
          <source>Split splits path immediately following the final Separator, separating it into a directory and file name component. If there is no Separator in path, Split returns an empty dir and file set to path. The returned values have the property that path = dir+file.</source>
          <target state="translated">Split将紧跟在最后一个Separator后面的路径进行分割,将其分割成一个目录和文件名的部分,如果路径中没有Separator,Split将返回一个空的dir和文件,设置为path。如果path中没有Separator,Split会返回一个空的dir和设置为path的文件。返回的值具有path=dir+file的属性。</target>
        </trans-unit>
        <trans-unit id="04097266465adc5300d2bc3091a77206398acddf" translate="yes" xml:space="preserve">
          <source>Split splits path immediately following the final slash, separating it into a directory and file name component. If there is no slash in path, Split returns an empty dir and file set to path. The returned values have the property that path = dir+file.</source>
          <target state="translated">Split将路径分割成一个目录和文件名。如果path中没有斜杠,Split会返回一个空的dir和设置为path的文件。返回的值具有path=dir+file的属性。</target>
        </trans-unit>
        <trans-unit id="f645051fa0ea9f5fba674ae30e0eb8228c563bbb" translate="yes" xml:space="preserve">
          <source>SplitAfter</source>
          <target state="translated">SplitAfter</target>
        </trans-unit>
        <trans-unit id="af6f57e26d6655b8a560ff5a1ea503e038967615" translate="yes" xml:space="preserve">
          <source>SplitAfter slices s into all subslices after each instance of sep and returns a slice of those subslices. If sep is empty, SplitAfter splits after each UTF-8 sequence. It is equivalent to SplitAfterN with a count of -1.</source>
          <target state="translated">SplitAfter 将 s 分割成 sep 的每一个实例后的所有子片段,并返回这些子片段的一个片段。如果sep为空,SplitAfter会在每个UTF-8序列之后进行分割。它等同于SplitAfterN,计数为-1。</target>
        </trans-unit>
        <trans-unit id="7b96a1319471e70dc0744f490b304d8e5292e091" translate="yes" xml:space="preserve">
          <source>SplitAfter slices s into all substrings after each instance of sep and returns a slice of those substrings.</source>
          <target state="translated">SplitAfter 在每一个 sep 实例后将 s 切成所有子串,并返回这些子串的一个分片。</target>
        </trans-unit>
        <trans-unit id="183e10127881bddc63e39844aca6fde7b55ad84d" translate="yes" xml:space="preserve">
          <source>SplitAfterN</source>
          <target state="translated">SplitAfterN</target>
        </trans-unit>
        <trans-unit id="71c5d7e2f9fd13201867043dfefbd28be7cef909" translate="yes" xml:space="preserve">
          <source>SplitAfterN slices s into subslices after each instance of sep and returns a slice of those subslices. If sep is empty, SplitAfterN splits after each UTF-8 sequence. The count determines the number of subslices to return:</source>
          <target state="translated">SplitAfterN在每一个sep实例之后将s切成子片,并返回这些子片的一个片断。如果sep为空,SplitAfterN在每个UTF-8序列之后进行分割。计数决定了要返回的子片段的数量。</target>
        </trans-unit>
        <trans-unit id="b953b958d37f7636fa29a91139b9e599462e7d0a" translate="yes" xml:space="preserve">
          <source>SplitAfterN slices s into substrings after each instance of sep and returns a slice of those substrings.</source>
          <target state="translated">SplitAfterN 在每一个 sep 实例之后将 s 切成子串,并返回这些子串的一个分片。</target>
        </trans-unit>
        <trans-unit id="c42d1c66abbb920d11fa3452a55d6b02ca57969f" translate="yes" xml:space="preserve">
          <source>SplitFunc is the signature of the split function used to tokenize the input. The arguments are an initial substring of the remaining unprocessed data and a flag, atEOF, that reports whether the Reader has no more data to give. The return values are the number of bytes to advance the input and the next token to return to the user, if any, plus an error, if any.</source>
          <target state="translated">SplitFunc是用于标记输入的分割函数的签名。参数是一个剩余的未处理数据的初始子串和一个标志,atEOF,用于报告Reader是否没有更多的数据可给。返回值是推进输入的字节数和返回给用户的下一个标记(如果有的话),加上一个错误(如果有的话)。</target>
        </trans-unit>
        <trans-unit id="b4cd81f732cbd3a8923ecb19ba58f0f16cb90789" translate="yes" xml:space="preserve">
          <source>SplitHostPort splits a network address of the form &quot;host:port&quot;, &quot;host%zone:port&quot;, &quot;[host]:port&quot; or &quot;[host%zone]:port&quot; into host or host%zone and port.</source>
          <target state="translated">SplitHostPort将 &quot;host:port&quot;、&quot;host%zone:port&quot;、&quot;[host]:port &quot;或&quot;[host%zone]:port &quot;形式的网络地址分割成host或host%zone和port。</target>
        </trans-unit>
        <trans-unit id="83d28a087df2085b354d9219f029b5d90cf38ec4" translate="yes" xml:space="preserve">
          <source>SplitList</source>
          <target state="translated">SplitList</target>
        </trans-unit>
        <trans-unit id="2810f9f5e2566aed968386693eafb51ff308b597" translate="yes" xml:space="preserve">
          <source>SplitList splits a list of paths joined by the OS-specific ListSeparator, usually found in PATH or GOPATH environment variables. Unlike strings.Split, SplitList returns an empty slice when passed an empty string.</source>
          <target state="translated">SplitList 将一个由操作系统特有的 ListSeparator 连接的路径列表分割开来,通常在 PATH 或 GOPATH 环境变量中找到。与 strings.Split 不同,当传递一个空字符串时,SplitList 会返回一个空分片。</target>
        </trans-unit>
        <trans-unit id="84cfaf9bc325cc024ba8d73b2f03f1f0b940f375" translate="yes" xml:space="preserve">
          <source>SplitN</source>
          <target state="translated">SplitN</target>
        </trans-unit>
        <trans-unit id="36c3c8ea011f7ef62da6893e010962d6852bd07a" translate="yes" xml:space="preserve">
          <source>SplitN slices s into subslices separated by sep and returns a slice of the subslices between those separators. If sep is empty, SplitN splits after each UTF-8 sequence. The count determines the number of subslices to return:</source>
          <target state="translated">SplitN 将 s 切成由 sep 分隔的子片,并返回这些分隔符之间的子片。如果sep为空,SplitN会在每个UTF-8序列之后进行分割。计数决定了要返回的子分片数量。</target>
        </trans-unit>
        <trans-unit id="de01961453e6bcc30ddd7714ed914f746f011fab" translate="yes" xml:space="preserve">
          <source>SplitN slices s into substrings separated by sep and returns a slice of the substrings between those separators.</source>
          <target state="translated">SplitN 将 s 切成由 sep 分隔的子线,并返回这些分隔符之间的子线的切片。</target>
        </trans-unit>
        <trans-unit id="8ca15484a6a50617febf823f3fa1c9e7038688ee" translate="yes" xml:space="preserve">
          <source>Sprint</source>
          <target state="translated">Sprint</target>
        </trans-unit>
        <trans-unit id="d0775164f7f53356c293723cd9c1222468d3a49b" translate="yes" xml:space="preserve">
          <source>Sprint formats using the default formats for its operands and returns the resulting string. Spaces are added between operands when neither is a string.</source>
          <target state="translated">Sprint使用默认格式对操作数进行格式化,并返回结果字符串。当两个操作数都不是字符串时,操作数之间会添加空格。</target>
        </trans-unit>
        <trans-unit id="7d5fe7cc61bbb8158ad630a3820e3c126928a4a6" translate="yes" xml:space="preserve">
          <source>Sprintf</source>
          <target state="translated">Sprintf</target>
        </trans-unit>
        <trans-unit id="5bfb46358289368784772aa4aa5a217258b76236" translate="yes" xml:space="preserve">
          <source>Sprintf formats according to a format specifier and returns the resulting string.</source>
          <target state="translated">Sprintf根据格式指定器格式化并返回结果。</target>
        </trans-unit>
        <trans-unit id="5446f67533b2f88354fccb3b84fed81fd676a9d5" translate="yes" xml:space="preserve">
          <source>Sprintln</source>
          <target state="translated">Sprintln</target>
        </trans-unit>
        <trans-unit id="d0bd83b3300fd81e26aa39c136cc9d6ce11bb5a7" translate="yes" xml:space="preserve">
          <source>Sprintln formats using the default formats for its operands and returns the resulting string. Spaces are always added between operands and a newline is appended.</source>
          <target state="translated">Sprintln使用默认的操作数格式进行格式化,并返回结果。操作数之间总是加空格,并附加一个换行。</target>
        </trans-unit>
        <trans-unit id="6bbb118b36018412cea4de47bc914f00685c9ac5" translate="yes" xml:space="preserve">
          <source>Sqrt</source>
          <target state="translated">Sqrt</target>
        </trans-unit>
        <trans-unit id="1b795ae9b134bc8c4c0b446e88fecc1f3b41d092" translate="yes" xml:space="preserve">
          <source>Sqrt returns the square root of x.</source>
          <target state="translated">Sqrt 返回 x 的平方根。</target>
        </trans-unit>
        <trans-unit id="b85c9b396b0e4464f48aa17058f2b1082008ae70" translate="yes" xml:space="preserve">
          <source>Sqrt returns the square root of x. The result r is chosen so that real(r) &amp;ge; 0 and imag(r) has the same sign as imag(x).</source>
          <target state="translated">Sqrt返回x的平方根。选择结果r，以使real（r）&amp;ge;0且imag（r）具有与imag（x）相同的符号。</target>
        </trans-unit>
        <trans-unit id="41b5f4c2f86ca750aabbdd4d6bdb915be0584893" translate="yes" xml:space="preserve">
          <source>Sqrt sets z to &amp;lfloor;&amp;radic;x&amp;rfloor;, the largest integer such that z&amp;sup2; &amp;le; x, and returns z. It panics if x is negative.</source>
          <target state="translated">Sqrt将z设置为&amp;lfloor;&amp;radic;x&amp;rfloor;，即使得z&amp;sup2;&amp;le;x的最大整数，并返回z。如果x为负，则表示恐慌。</target>
        </trans-unit>
        <trans-unit id="2e519fcfbc6a90ddf75f1394fae55598d7af8898" translate="yes" xml:space="preserve">
          <source>Sqrt sets z to the rounded square root of x, and returns it.</source>
          <target state="translated">Sqrt 将 z 设为 x 的四舍五入平方根,并将其返回。</target>
        </trans-unit>
        <trans-unit id="b183229b8a0007179105ee23f98db0fa35e992ca" translate="yes" xml:space="preserve">
          <source>SrcDirs returns a list of package source root directories. It draws from the current Go root and Go path but omits directories that do not exist.</source>
          <target state="translated">SrcDirs 返回包的源根目录列表。它从当前的Go根目录和Go路径中提取,但省略不存在的目录。</target>
        </trans-unit>
        <trans-unit id="ace37ead62176f4b0fef73d8a4e6eefe6e4e0808" translate="yes" xml:space="preserve">
          <source>Srcset encapsulates a known safe srcset attribute (see &lt;a href=&quot;https://w3c.github.io/html/semantics-embedded-content.html#element-attrdef-img-srcset&quot;&gt;https://w3c.github.io/html/semantics-embedded-content.html#element-attrdef-img-srcset&lt;/a&gt;).</source>
          <target state="translated">Srcset封装了一个已知的安全srcset属性（请参阅&lt;a href=&quot;https://w3c.github.io/html/semantics-embedded-content.html#element-attrdef-img-srcset&quot;&gt;https://w3c.github.io/html/semantics-embedded-content.html#element-attrdef-img-srcset&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="608729966442ded3bea906aefa46d7a131fb981c" translate="yes" xml:space="preserve">
          <source>Sscan scans the argument string, storing successive space-separated values into successive arguments. Newlines count as space. It returns the number of items successfully scanned. If that is less than the number of arguments, err will report why.</source>
          <target state="translated">Sscan扫描参数字符串,将连续的空格分隔的值存储到连续的参数中。换行也算作空格。它返回成功扫描的项目数。如果少于参数数,err将报告原因。</target>
        </trans-unit>
        <trans-unit id="390342df3a9580b3ab53916d8e78ce9a67e05f51" translate="yes" xml:space="preserve">
          <source>Sscanf</source>
          <target state="translated">Sscanf</target>
        </trans-unit>
        <trans-unit id="61a716d2775c775cb5be05f41652e9aaaad32358" translate="yes" xml:space="preserve">
          <source>Sscanf scans the argument string, storing successive space-separated values into successive arguments as determined by the format. It returns the number of items successfully parsed. Newlines in the input must match newlines in the format.</source>
          <target state="translated">Sscanf扫描参数字符串,将连续的空格分隔的值存储到由格式决定的连续参数中。它返回成功解析的项数。输入中的换行必须与格式中的换行相匹配。</target>
        </trans-unit>
        <trans-unit id="af4732932dde6aa0c1e4ad7d04d2e2382ec0a0b6" translate="yes" xml:space="preserve">
          <source>Sscanln is similar to Sscan, but stops scanning at a newline and after the final item there must be a newline or EOF.</source>
          <target state="translated">Sscanln与Sscan类似,但在换行处停止扫描,最后一项后必须有换行或EOF。</target>
        </trans-unit>
        <trans-unit id="6f3e4b56a56750c728e3e2463bad931f8918a9d7" translate="yes" xml:space="preserve">
          <source>Stable sorts data while keeping the original order of equal elements.</source>
          <target state="translated">稳定地对数据进行排序,同时保持原有的等元素顺序。</target>
        </trans-unit>
        <trans-unit id="c9e8e2e8cb17ec7f99a9db77c101e60f6136c3a5" translate="yes" xml:space="preserve">
          <source>Stack formats a stack trace of the calling goroutine into buf and returns the number of bytes written to buf. If all is true, Stack formats stack traces of all other goroutines into buf after the trace for the current goroutine.</source>
          <target state="translated">Stack将调用的goroutine的堆栈跟踪格式化为buf,并返回写入buf的字节数。如果all为true,Stack将所有其他goroutine的堆栈跟踪格式化到当前goroutine跟踪之后的buf中。</target>
        </trans-unit>
        <trans-unit id="1cffafd303a34a6584721e138e5265f842cb505a" translate="yes" xml:space="preserve">
          <source>Stack returns a formatted stack trace of the goroutine that calls it. It calls runtime.Stack with a large enough buffer to capture the entire trace.</source>
          <target state="translated">Stack 返回调用它的 goroutine 的格式化栈跟踪。它调用runtime.Stack,并提供足够大的缓冲区来捕获整个跟踪。</target>
        </trans-unit>
        <trans-unit id="418aa94a169d739e57a35d99f93d9138e0bb4b62" translate="yes" xml:space="preserve">
          <source>Stack returns the stack trace associated with the record, a prefix of r.Stack0.</source>
          <target state="translated">Stack返回与记录相关的堆栈跟踪,是r.Stack0的前缀。</target>
        </trans-unit>
        <trans-unit id="687cb3d7c249eff01be44167736a622ba61578c9" translate="yes" xml:space="preserve">
          <source>Standard colors.</source>
          <target state="translated">标准色。</target>
        </trans-unit>
        <trans-unit id="360c57caedbd1d1ff38dde144677c893d6ad3792" translate="yes" xml:space="preserve">
          <source>Standard library</source>
          <target state="translated">标准库</target>
        </trans-unit>
        <trans-unit id="9fb1a9f741b4439135087b938ed47613619d8e54" translate="yes" xml:space="preserve">
          <source>Start enables tracing for the current program. While tracing, the trace will be buffered and written to w. Start returns an error if tracing is already enabled.</source>
          <target state="translated">Start启用了对当前程序的跟踪,在跟踪过程中,跟踪结果会被缓冲并写入w中。在跟踪过程中,跟踪将被缓冲,并写入w中。</target>
        </trans-unit>
        <trans-unit id="d84f21e1e9935e064f3eccc25d6db5d4fb64a86a" translate="yes" xml:space="preserve">
          <source>Start starts a server from NewUnstartedServer.</source>
          <target state="translated">Start从NewUnstartedServer启动一个服务器。</target>
        </trans-unit>
        <trans-unit id="b61ef15d781bf8c860427db7964980f61966535c" translate="yes" xml:space="preserve">
          <source>Start starts the specified command but does not wait for it to complete.</source>
          <target state="translated">Start启动指定的命令,但不等待其完成。</target>
        </trans-unit>
        <trans-unit id="7f51b09c0923a4603b545c471069b55e22a62f34" translate="yes" xml:space="preserve">
          <source>StartCPUProfile enables CPU profiling for the current process. While profiling, the profile will be buffered and written to w. StartCPUProfile returns an error if profiling is already enabled.</source>
          <target state="translated">StartCPUProfile启用了当前进程的CPU剖析。如果已经启用了CPU剖析,StartCPUProfile会返回一个错误。</target>
        </trans-unit>
        <trans-unit id="f3753321843c42ccf0d93028e612610280e12d5e" translate="yes" xml:space="preserve">
          <source>StartCond returns the leading empty-width conditions that must be true in any match. It returns ^EmptyOp(0) if no matches are possible.</source>
          <target state="translated">StartCond 返回任何匹配中必须为真的前导空宽条件。如果没有匹配,它返回^EmptyOp(0)。</target>
        </trans-unit>
        <trans-unit id="e00bec2778efe9f0a1a92501d76b773c7dc58166" translate="yes" xml:space="preserve">
          <source>StartProcess is a low-level interface. The os/exec package provides higher-level interfaces.</source>
          <target state="translated">StartProcess是一个低级接口。os/exec包提供了更高层次的接口。</target>
        </trans-unit>
        <trans-unit id="4656baf99c52e7677cc8f68ccbc8052e39ef42e9" translate="yes" xml:space="preserve">
          <source>StartProcess starts a new process with the program, arguments and attributes specified by name, argv and attr. The argv slice will become os.Args in the new process, so it normally starts with the program name.</source>
          <target state="translated">StartProcess 用 name、argv 和 attr 指定的程序、参数和属性启动一个新进程。argv 片段在新进程中会变成 os.Args,所以它通常以程序名开始。</target>
        </trans-unit>
        <trans-unit id="d3d2be7776a3d003cee77683d05001ec6ef09966" translate="yes" xml:space="preserve">
          <source>StartProcess wraps ForkExec for package os.</source>
          <target state="translated">StartProcess为包os.StartProcess封装了ForkExec。</target>
        </trans-unit>
        <trans-unit id="4593c93bfc9fb8dacabfc8b4a1731d4454969f64" translate="yes" xml:space="preserve">
          <source>StartRegion starts a region and returns a function for marking the end of the region. The returned Region's End function must be called from the same goroutine where the region was started. Within each goroutine, regions must nest. That is, regions started after this region must be ended before this region can be ended. Recommended usage is</source>
          <target state="translated">StartRegion启动一个区域,并返回一个用于标记区域结束的函数。返回的Region's End函数必须从启动该区域的同一个goroutine中调用。在每个goroutine中,区域必须嵌套。也就是说,在这个区域之后开始的区域必须在这个区域结束之前结束。推荐的用法是</target>
        </trans-unit>
        <trans-unit id="3b719a81fa9e5ddcbfba4cb3fb45c729f487d09e" translate="yes" xml:space="preserve">
          <source>StartRequest blocks until it is time to send (or, if this is a server, receive) the request with the given id.</source>
          <target state="translated">StartRequest阻塞,直到发送(或者,如果这是一个服务器,接收)给定id的请求的时候。</target>
        </trans-unit>
        <trans-unit id="338c8f94474f010aa4669ab2c0ae55a5c3a8c12a" translate="yes" xml:space="preserve">
          <source>StartResponse blocks until it is time to receive (or, if this is a server, send) the request with the given id.</source>
          <target state="translated">StartResponse阻塞,直到接收(或者,如果这是一个服务器,发送)给定id的请求。</target>
        </trans-unit>
        <trans-unit id="7ea714fe33f9c8708b382ac24930c9134895c05e" translate="yes" xml:space="preserve">
          <source>StartTLS sends the STARTTLS command and encrypts all further communication. Only servers that advertise the STARTTLS extension support this function.</source>
          <target state="translated">StartTLS发送STARTTLS命令,并对所有进一步的通信进行加密。只有宣传STARTTLS扩展的服务器才支持这个功能。</target>
        </trans-unit>
        <trans-unit id="d062840c5c4653552407064d11c812b2dfbbac16" translate="yes" xml:space="preserve">
          <source>StartTLS starts TLS on a server from NewUnstartedServer.</source>
          <target state="translated">StartTLS从NewUnstartedServer开始在服务器上启动TLS。</target>
        </trans-unit>
        <trans-unit id="01903002ac73fdbc83cec8f016e70281a8a03041" translate="yes" xml:space="preserve">
          <source>StartTimer starts timing a test. This function is called automatically before a benchmark starts, but it can also be used to resume timing after a call to StopTimer.</source>
          <target state="translated">StartTimer开始为测试计时。这个函数在基准开始前自动调用,但也可以在调用StopTimer后继续计时。</target>
        </trans-unit>
        <trans-unit id="bb33cf53f4e568db572c687d22b2ff2888d74df9" translate="yes" xml:space="preserve">
          <source>StartTrace enables tracing for the current process. While tracing, the data will be buffered and available via ReadTrace. StartTrace returns an error if tracing is already enabled. Most clients should use the runtime/trace package or the testing package's -test.trace flag instead of calling StartTrace directly.</source>
          <target state="translated">StartTrace可以对当前进程进行跟踪。在跟踪过程中,数据将被缓冲并通过ReadTrace提供。如果跟踪已经启用,StartTrace会返回一个错误。大多数客户端应该使用运行时/跟踪包或测试包的-test.trace标志,而不是直接调用StartTrace。</target>
        </trans-unit>
        <trans-unit id="6de552c394748272d237ee2909c17f8a5fd51503" translate="yes" xml:space="preserve">
          <source>Starting with Go 1.6, the http package has transparent support for the HTTP/2 protocol when using HTTPS. Programs that must disable HTTP/2 can do so by setting Transport.TLSNextProto (for clients) or Server.TLSNextProto (for servers) to a non-nil, empty map. Alternatively, the following GODEBUG environment variables are currently supported:</source>
          <target state="translated">从Go 1.6开始,当使用HTTPS时,http包对HTTP/2协议有透明的支持。必须禁用HTTP/2的程序可以通过将Transport.TLSNextProto(客户端)或Server.TLSNextProto(服务器)设置为非零的空映射来实现。另外,目前还支持以下GODEBUG环境变量。</target>
        </trans-unit>
        <trans-unit id="28ec6f916901c65e29319bfbfe8521a54d4bfc1b" translate="yes" xml:space="preserve">
          <source>Stat returns a FileInfo describing the named file from the file system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c555084811f017d34d2693472b49bb062306f30" translate="yes" xml:space="preserve">
          <source>Stat returns a FileInfo describing the named file. If there is an error, it will be of type *PathError.</source>
          <target state="translated">Stat返回一个描述命名文件的FileInfo,如果有错误,它的类型是*PathError。如果有错误,它将是*PathError类型。</target>
        </trans-unit>
        <trans-unit id="e4a95458fc56105197c2a964b9366157865cbb1b" translate="yes" xml:space="preserve">
          <source>Stat returns the FileInfo structure describing file. If there is an error, it will be of type *PathError.</source>
          <target state="translated">Stat返回描述文件的FileInfo结构。如果有错误,它将是*PathError类型。</target>
        </trans-unit>
        <trans-unit id="6ed6c9c2af9ffd2ea1bfb59989c27d85db3a34df" translate="yes" xml:space="preserve">
          <source>State represents the printer state passed to custom formatters. It provides access to the io.Writer interface plus information about the flags and options for the operand's format specifier.</source>
          <target state="translated">State表示传递给自定义格式化器的打印机状态,它提供了对io.Writer接口的访问以及操作数的格式指定器的标志和选项信息。它提供了对io.Writer接口的访问,以及操作数格式指定器的标志和选项信息。</target>
        </trans-unit>
        <trans-unit id="6c898e0bae6ae6e6a509998b0d70b717982994c3" translate="yes" xml:space="preserve">
          <source>Static reports whether this symbol is static (not visible outside its file).</source>
          <target state="translated">静态报告这个符号是否是静态的(在其文件外不可见)。</target>
        </trans-unit>
        <trans-unit id="f107d6fd99e84eaeb4014efe73efa78374b13f61" translate="yes" xml:space="preserve">
          <source>Stats returns database statistics.</source>
          <target state="translated">Stats返回数据库统计数据。</target>
        </trans-unit>
        <trans-unit id="473cf8363b9a9dc6de8f9778203d0b0d99ffe820" translate="yes" xml:space="preserve">
          <source>StatusText returns a text for the HTTP status code. It returns the empty string if the code is unknown.</source>
          <target state="translated">StatusText返回HTTP状态码的文本。如果代码未知,则返回空字符串。</target>
        </trans-unit>
        <trans-unit id="d95efd4b66df751ef4f7e7c0d6a981a761feec31" translate="yes" xml:space="preserve">
          <source>StdEncoding is the standard base32 encoding, as defined in RFC 4648.</source>
          <target state="translated">StdEncoding是RFC 4648中定义的标准base32编码。</target>
        </trans-unit>
        <trans-unit id="a9197d0bbe7d5f346c8fce4d5958e4af36331be4" translate="yes" xml:space="preserve">
          <source>StdEncoding is the standard base64 encoding, as defined in RFC 4648.</source>
          <target state="translated">StdEncoding是RFC 4648中定义的标准base64编码。</target>
        </trans-unit>
        <trans-unit id="c30cba7f2a4c150acfe65c8a3aa36a9ff709ad57" translate="yes" xml:space="preserve">
          <source>StdSizes is a convenience type for creating commonly used Sizes. It makes the following simplifying assumptions:</source>
          <target state="translated">StdSizes是一个方便的类型,用于创建常用的Sizes。它做了以下简化假设。</target>
        </trans-unit>
        <trans-unit id="34f196b4b0f694cd0a2f21247970027005c1305c" translate="yes" xml:space="preserve">
          <source>StderrPipe returns a pipe that will be connected to the command's standard error when the command starts.</source>
          <target state="translated">StderrPipe返回一个管道,当命令启动时,该管道将连接到命令的标准错误。</target>
        </trans-unit>
        <trans-unit id="f9c5224ebb81b29f683fd0f89569f0498e209b24" translate="yes" xml:space="preserve">
          <source>Stdin, Stdout, and Stderr are open Files pointing to the standard input, standard output, and standard error file descriptors.</source>
          <target state="translated">Stdin、Stdout和Stderr是指向标准输入、标准输出和标准错误文件描述符的开放文件。</target>
        </trans-unit>
        <trans-unit id="eaaa7d5358fae0ad4ea6507594efa4e1fe1938f3" translate="yes" xml:space="preserve">
          <source>StdinPipe returns a pipe that will be connected to the command's standard input when the command starts. The pipe will be closed automatically after Wait sees the command exit. A caller need only call Close to force the pipe to close sooner. For example, if the command being run will not exit until standard input is closed, the caller must close the pipe.</source>
          <target state="translated">StdinPipe 返回一个管道,当命令启动时,该管道将连接到命令的标准输入。在Wait看到命令退出后,管道将自动关闭。调用者只需要调用Close就可以强制管道提前关闭。例如,如果正在运行的命令在标准输入关闭之前不会退出,调用者必须关闭管道。</target>
        </trans-unit>
        <trans-unit id="e34e1f63d532ddcb966f6992c5d243530bff512e" translate="yes" xml:space="preserve">
          <source>StdoutPipe returns a pipe that will be connected to the command's standard output when the command starts.</source>
          <target state="translated">StdoutPipe返回一个管道,当命令启动时,该管道将连接到命令的标准输出。</target>
        </trans-unit>
        <trans-unit id="35cb1f2f3090469fddd290f48f6f6f66f6cfbf71" translate="yes" xml:space="preserve">
          <source>Stmt</source>
          <target state="translated">Stmt</target>
        </trans-unit>
        <trans-unit id="e8d756b195575772804ef522d92696943863af82" translate="yes" xml:space="preserve">
          <source>Stmt is a prepared statement. A Stmt is safe for concurrent use by multiple goroutines.</source>
          <target state="translated">Stmt是一个准备好的语句。一个Stmt可以安全地被多个goroutine同时使用。</target>
        </trans-unit>
        <trans-unit id="0bb26a3ab8d8618ecc81beec5115670b66a970d5" translate="yes" xml:space="preserve">
          <source>Stmt is a prepared statement. It is bound to a Conn and not used by multiple goroutines concurrently.</source>
          <target state="translated">Stmt是一个准备好的语句。它与Conn绑定,不能被多个goroutine同时使用。</target>
        </trans-unit>
        <trans-unit id="9e8123e57a051d77d8becac273756b24f947f7c4" translate="yes" xml:space="preserve">
          <source>Stmt returns a transaction-specific prepared statement from an existing statement.</source>
          <target state="translated">Stmt从现有的报表中返回一个特定事务的预备报表。</target>
        </trans-unit>
        <trans-unit id="9e2e6090b163c6036190ffea94ddcfbb24b8b882" translate="yes" xml:space="preserve">
          <source>Stmt.QueryRowContext</source>
          <target state="translated">Stmt.QueryRowContext</target>
        </trans-unit>
        <trans-unit id="70af1d64e33ba2bc94ac6b94c7823d3046a2e685" translate="yes" xml:space="preserve">
          <source>StmtContext returns a transaction-specific prepared statement from an existing statement.</source>
          <target state="translated">StmtContext从现有的语句中返回一个特定事务的准备语句。</target>
        </trans-unit>
        <trans-unit id="a70153fdc2043d42cd12ca46ccb4c33b57b300d4" translate="yes" xml:space="preserve">
          <source>StmtExecContext enhances the Stmt interface by providing Exec with context.</source>
          <target state="translated">StmtExecContext通过为Exec提供上下文来增强Stmt接口。</target>
        </trans-unit>
        <trans-unit id="1004fd52a4b277314a44a4efa023effe4416d3f8" translate="yes" xml:space="preserve">
          <source>StmtQueryContext enhances the Stmt interface by providing Query with context.</source>
          <target state="translated">StmtQueryContext通过提供具有上下文的Query来增强Stmt接口。</target>
        </trans-unit>
        <trans-unit id="4e7e607354865ab06dac634d86cb1266a005b9e3" translate="yes" xml:space="preserve">
          <source>Stop causes package signal to stop relaying incoming signals to c. It undoes the effect of all prior calls to Notify using c. When Stop returns, it is guaranteed that c will receive no more signals.</source>
          <target state="translated">Stop使包信号停止向c中继传入信号,并撤销之前所有使用c调用Notify的效果,当Stop返回时,保证c不再接收信号。</target>
        </trans-unit>
        <trans-unit id="94f72ec5a9e9e46f0269677088e9aed4dc6bf0c7" translate="yes" xml:space="preserve">
          <source>Stop prevents the Timer from firing. It returns true if the call stops the timer, false if the timer has already expired or been stopped. Stop does not close the channel, to prevent a read from the channel succeeding incorrectly.</source>
          <target state="translated">Stop阻止定时器发射。如果调用停止定时器,则返回true,如果定时器已经过期或被停止,则返回false。Stop不关闭通道,以防止从通道中读取的数据不正确地成功。</target>
        </trans-unit>
        <trans-unit id="96e4cceff229f7d0b6242e33e40b44c6e1f954ad" translate="yes" xml:space="preserve">
          <source>Stop stops the current tracing, if any. Stop only returns after all the writes for the trace have completed.</source>
          <target state="translated">停止当前的跟踪,如果有的话。Stop只在所有跟踪的写入完成后才返回。</target>
        </trans-unit>
        <trans-unit id="f869959cdbddc758676d9a0b40b1ccec00a007e0" translate="yes" xml:space="preserve">
          <source>Stop turns off a ticker. After Stop, no more ticks will be sent. Stop does not close the channel, to prevent a concurrent goroutine reading from the channel from seeing an erroneous &quot;tick&quot;.</source>
          <target state="translated">停止关闭一个行情。停止后,将不再发送更多的 &quot;tick&quot;。停止不会关闭通道,以防止同时从通道读取的goroutine看到一个错误的 &quot;tick&quot;。</target>
        </trans-unit>
        <trans-unit id="6c60cc11ce6206ba7285eea9b92d5192efe41d39" translate="yes" xml:space="preserve">
          <source>StopCPUProfile stops the current CPU profile, if any. StopCPUProfile only returns after all the writes for the profile have completed.</source>
          <target state="translated">StopCPUProfile停止当前CPU配置文件(如果有的话)。StopCPUProfile只有在配置文件的所有写入完成后才会返回。</target>
        </trans-unit>
        <trans-unit id="921647073cddc48eae81cacd6f73563cc3719e6f" translate="yes" xml:space="preserve">
          <source>StopTimer stops timing a test. This can be used to pause the timer while performing complex initialization that you don't want to measure.</source>
          <target state="translated">StopTimer停止测试计时。这可以用来在执行复杂的初始化时暂停定时器,而你不想测量。</target>
        </trans-unit>
        <trans-unit id="84dbe4eb021745433f9d6bb9432228e77ba19099" translate="yes" xml:space="preserve">
          <source>StopTrace stops tracing, if it was previously enabled. StopTrace only returns after all the reads for the trace have completed.</source>
          <target state="translated">如果之前启用了StopTrace,则停止跟踪。StopTrace只在所有跟踪的读取完成后才返回。</target>
        </trans-unit>
        <trans-unit id="e64cf11d9830120b60f240aa4b7f7791804376a7" translate="yes" xml:space="preserve">
          <source>Store sets the value for a key.</source>
          <target state="translated">存储设置一个键的值。</target>
        </trans-unit>
        <trans-unit id="0576297e57bdd6afa5e5d4f4c53fb27987cf20cb" translate="yes" xml:space="preserve">
          <source>Store sets the value of the Value to x. All calls to Store for a given Value must use values of the same concrete type. Store of an inconsistent type panics, as does Store(nil).</source>
          <target state="translated">Store 将 Value 的值设置为 x。对给定 Value 的所有 Store 调用必须使用相同具体类型的值。类型不一致的Store会惊慌失措,Store(nil)也是如此。</target>
        </trans-unit>
        <trans-unit id="61fc43e10839248a6ca4c0ad01079c0c4ad0ec37" translate="yes" xml:space="preserve">
          <source>StoreInt32 atomically stores val into *addr.</source>
          <target state="translated">StoreInt32原子地将val存储到*addr中。</target>
        </trans-unit>
        <trans-unit id="7914e40a268c91ed6c78dd3a0c674684e23beca2" translate="yes" xml:space="preserve">
          <source>StoreInt64 atomically stores val into *addr.</source>
          <target state="translated">StoreInt64原子地将val存储到*addr中。</target>
        </trans-unit>
        <trans-unit id="3bd4e783553f00f03c188a415e3661fa8de191b3" translate="yes" xml:space="preserve">
          <source>StorePointer atomically stores val into *addr.</source>
          <target state="translated">StorePointer原子地将val存储到*addr中。</target>
        </trans-unit>
        <trans-unit id="9cc88c9dca1de73040dfd90e6d827a5b531c64fe" translate="yes" xml:space="preserve">
          <source>StoreUint32 atomically stores val into *addr.</source>
          <target state="translated">StoreUint32原子地将val存储到*addr中。</target>
        </trans-unit>
        <trans-unit id="e11c1fe521ea309905b20e2bda18135e66472a1e" translate="yes" xml:space="preserve">
          <source>StoreUint64 atomically stores val into *addr.</source>
          <target state="translated">StoreUint64原子地将val存储到*addr中。</target>
        </trans-unit>
        <trans-unit id="644096d645019d8a2ba6cbc4d305a2699fe9059f" translate="yes" xml:space="preserve">
          <source>StoreUintptr atomically stores val into *addr.</source>
          <target state="translated">StoreUintptr原子地将val存储到*addr中。</target>
        </trans-unit>
        <trans-unit id="cab8594aca23f91dcc0728ca91d9d20dcd26b690" translate="yes" xml:space="preserve">
          <source>StreamReader</source>
          <target state="translated">StreamReader</target>
        </trans-unit>
        <trans-unit id="2a7fc943079fc92f6a989794ba51133e347d57cd" translate="yes" xml:space="preserve">
          <source>StreamReader wraps a Stream into an io.Reader. It calls XORKeyStream to process each slice of data which passes through.</source>
          <target state="translated">StreamReader将一个Stream包装成一个io.Reader。它调用XORKeyStream来处理每个经过的数据片断。</target>
        </trans-unit>
        <trans-unit id="232a89f73446348f72f684c82d07ed788b848a3a" translate="yes" xml:space="preserve">
          <source>StreamWriter</source>
          <target state="translated">StreamWriter</target>
        </trans-unit>
        <trans-unit id="fc13aaf005c735ab0e4aa5176b6af67540be3a8b" translate="yes" xml:space="preserve">
          <source>StreamWriter wraps a Stream into an io.Writer. It calls XORKeyStream to process each slice of data which passes through. If any Write call returns short then the StreamWriter is out of sync and must be discarded. A StreamWriter has no internal buffering; Close does not need to be called to flush write data.</source>
          <target state="translated">StreamWriter将一个Stream包装成一个io.Writer,它调用XORKeyStream来处理每个经过的数据片断。它调用XORKeyStream来处理每个经过的数据片断。如果任何Write调用都返回短路,那么StreamWriter就失去了同步,必须被丢弃。StreamWriter没有内部缓冲;Close不需要被调用来刷新写数据。</target>
        </trans-unit>
        <trans-unit id="61135993a6e29b59a8df3075ca0d3838f94b8d90" translate="yes" xml:space="preserve">
          <source>Strict creates a new encoding identical to enc except with strict decoding enabled. In this mode, the decoder requires that trailing padding bits are zero, as described in RFC 4648 section 3.5.</source>
          <target state="translated">Strict创建一个与enc相同的新编码,除了启用严格的解码。在这种模式下,解码器要求尾部填充位为零,如RFC 4648第3.5节所述。</target>
        </trans-unit>
        <trans-unit id="396b00d6c7e8c1194e27297cd11ae3108cdacd84" translate="yes" xml:space="preserve">
          <source>String Conversions</source>
          <target state="translated">字符串转换</target>
        </trans-unit>
        <trans-unit id="bd47be7c94487cbe10dfe0be4138815d0017463a" translate="yes" xml:space="preserve">
          <source>String and slice of bytes (treated equivalently with these verbs):</source>
          <target state="translated">字节串和字节片(与这些动词等价处理)。</target>
        </trans-unit>
        <trans-unit id="8296a76a0e5d96744b29fe69547a88fb9387440d" translate="yes" xml:space="preserve">
          <source>String defines a string flag with specified name, default value, and usage string. The return value is the address of a string variable that stores the value of the flag.</source>
          <target state="translated">String定义了一个字符串标志,具有指定的名称、默认值和用法字符串。返回值是存储标志值的字符串变量的地址。</target>
        </trans-unit>
        <trans-unit id="9e4dec141cb0219423f92167f6932232e80cdb9e" translate="yes" xml:space="preserve">
          <source>String extracts string from COFF string table st at offset start.</source>
          <target state="translated">字符串从偏移量开始的COFF字符串表st中提取字符串。</target>
        </trans-unit>
        <trans-unit id="dcd688eb0f2fbd5e407777a28042b64595f0fef8" translate="yes" xml:space="preserve">
          <source>String formats the address as a valid RFC 5322 address. If the address's name contains non-ASCII characters the name will be rendered according to RFC 2047.</source>
          <target state="translated">字符串将地址格式化为有效的RFC 5322地址。如果地址名称中包含非ASCII字符,则将根据RFC 2047的规定进行处理。</target>
        </trans-unit>
        <trans-unit id="8d105c469495a5d5f8062e63371ab613869f1e04" translate="yes" xml:space="preserve">
          <source>String formats x like x.Text('g', 10). (String must be called explicitly, Float.Format does not support %s verb.)</source>
          <target state="translated">字符串格式化x,如x.Text('g',10)。(String必须被显式调用,Float.Format不支持%s动词。)</target>
        </trans-unit>
        <trans-unit id="01748cd6407645feded183980c6258bbb0d669e6" translate="yes" xml:space="preserve">
          <source>String implements the Var interface. To get the unquoted string use Value.</source>
          <target state="translated">String实现了Var接口。要获得未引号的字符串,请使用Value.Value接口。</target>
        </trans-unit>
        <trans-unit id="c388848919b90e3a01d2d3408f1ebde77b3f2a74" translate="yes" xml:space="preserve">
          <source>String is a ValueConverter that converts its input to a string. If the value is already a string or []byte, it's unchanged. If the value is of another type, conversion to string is done with fmt.Sprintf(&quot;%v&quot;, v).</source>
          <target state="translated">String是一个ValueConverter,它将其输入转换为一个字符串。如果值已经是一个字符串或[]字节,它就不会改变。如果值是其他类型,则用fmt.Sprintf(&quot;%v&quot;,v)转换为字符串。</target>
        </trans-unit>
        <trans-unit id="014933e8c2aa543fd850622d80731a6a9386778b" translate="yes" xml:space="preserve">
          <source>String is a string variable, and satisfies the Var interface.</source>
          <target state="translated">String是一个字符串变量,并满足Var接口。</target>
        </trans-unit>
        <trans-unit id="83826ec6cada0ae1502e1aff2c5460723f559354" translate="yes" xml:space="preserve">
          <source>String reassembles the URL into a valid URL string. The general form of the result is one of:</source>
          <target state="translated">String将URL重新组合成一个有效的URL字符串。结果的一般形式是:。</target>
        </trans-unit>
        <trans-unit id="1a1a1e5164ab79c22ae49942d67ef810bdba6ad9" translate="yes" xml:space="preserve">
          <source>String returns a descriptive name for the time zone information, corresponding to the name argument to LoadLocation or FixedZone.</source>
          <target state="translated">字符串返回时区信息的描述性名称,对应于LoadLocation或FixedZone的名称参数。</target>
        </trans-unit>
        <trans-unit id="aa4d82115db66e350e92f539c5427c79fdfb58ed" translate="yes" xml:space="preserve">
          <source>String returns a human-readable description of c. It is intended only for debugging. In particular, it is not suitable for use as input to a shell. The output of String may vary across Go releases.</source>
          <target state="translated">String 返回 c 的可读描述,它只用于调试。特别是,它不适合作为shell的输入。String 的输出在不同的 Go 版本中可能会有所不同。</target>
        </trans-unit>
        <trans-unit id="55bb95d4983983ad2bde74eafe604eb90028dc18" translate="yes" xml:space="preserve">
          <source>String returns a string in one of several forms:</source>
          <target state="translated">String以几种形式之一返回一个字符串。</target>
        </trans-unit>
        <trans-unit id="345f70fca28ee043619061f7f87c019dadbba1fa" translate="yes" xml:space="preserve">
          <source>String returns a string representation of p like &quot;(3,4)&quot;.</source>
          <target state="translated">String 返回 p 的字符串表示,如&quot;(3,4)&quot;。</target>
        </trans-unit>
        <trans-unit id="3448960ebb659e656c5021f0b36127dab5b9d619" translate="yes" xml:space="preserve">
          <source>String returns a string representation of r like &quot;(3,4)-(6,5)&quot;.</source>
          <target state="translated">String 返回 r 的字符串表示,如&quot;(3,4)-(6,5)&quot;。</target>
        </trans-unit>
        <trans-unit id="1b35bdca294966810231e9db40a5c473f629af73" translate="yes" xml:space="preserve">
          <source>String returns a string representation of the scope, for debugging.</source>
          <target state="translated">String 返回范围的字符串表示,用于调试。</target>
        </trans-unit>
        <trans-unit id="40800a9640894f3a3149f9e54d890572a4beda8c" translate="yes" xml:space="preserve">
          <source>String returns a string representation of the sequence r, roughly following the RFC 2253 Distinguished Names syntax.</source>
          <target state="translated">String返回序列r的字符串表示,大致遵循RFC 2253区分名语法。</target>
        </trans-unit>
        <trans-unit id="7a196811cde011797851e8bcd4ea585d5971e7d9" translate="yes" xml:space="preserve">
          <source>String returns a string representation of x in the form &quot;a/b&quot; (even if b == 1).</source>
          <target state="translated">String以 &quot;a/b &quot;的形式返回x的字符串表示(即使b ==1)。</target>
        </trans-unit>
        <trans-unit id="7b4474871a59eadc44e6ad3cc370b5d1fd6eabd1" translate="yes" xml:space="preserve">
          <source>String returns a string representing the duration in the form &quot;72h3m0.5s&quot;. Leading zero units are omitted. As a special case, durations less than one second format use a smaller unit (milli-, micro-, or nanoseconds) to ensure that the leading digit is non-zero. The zero duration formats as 0s.</source>
          <target state="translated">String 返回表示持续时间的字符串,格式为 &quot;72h3m0.5s&quot;。前导零单位被省略。作为一种特殊情况,小于一秒的持续时间格式使用较小的单位(毫秒、微秒或纳秒),以确保前导数字是非零。零持续时间格式为0s。</target>
        </trans-unit>
        <trans-unit id="f5e00dac202df16525dc65e74932811ab9752d4e" translate="yes" xml:space="preserve">
          <source>String returns a summary of the benchmark results. It follows the benchmark result line format from &lt;a href=&quot;https://golang.org/design/14313-benchmark-format&quot;&gt;https://golang.org/design/14313-benchmark-format&lt;/a&gt;, not including the benchmark name. Extra metrics override built-in metrics of the same name. String does not include allocs/op or B/op, since those are reported by MemString.</source>
          <target state="translated">String返回基准测试结果的摘要。它遵循&lt;a href=&quot;https://golang.org/design/14313-benchmark-format&quot;&gt;https://golang.org/design/14313-benchmark-format中&lt;/a&gt;的基准结果行格式，不包括基准名称。额外的指标会覆盖同名的内置指标。字符串不包括allocs / op或B / op，因为这些是由MemString报告的。</target>
        </trans-unit>
        <trans-unit id="a1320f96272e68242e45787bdcf443a45a5d4acb" translate="yes" xml:space="preserve">
          <source>String returns the CIDR notation of n like &quot;192.0.2.0/24&quot; or &quot;2001:db8::/48&quot; as defined in RFC 4632 and RFC 4291. If the mask is not in the canonical form, it returns the string which consists of an IP address, followed by a slash character and a mask expressed as hexadecimal form with no punctuation like &quot;198.51.100.0/c000ff00&quot;.</source>
          <target state="translated">String 返回 RFC 4632 和 RFC 4291 中定义的 n 的 CIDR 符号,如 &quot;192.0.2.0/24 &quot;或 &quot;2001:db8::/48&quot;。如果掩码不是规范形式,则返回由IP地址组成的字符串,后面是一个斜杠字符和一个以十六进制形式表示的掩码,没有标点符号,如 &quot;198.51.100.0/c000ff00&quot;。</target>
        </trans-unit>
        <trans-unit id="f55b73801df68c7614969aee1732afd9d5e38010" translate="yes" xml:space="preserve">
          <source>String returns the English name of the day (&quot;Sunday&quot;, &quot;Monday&quot;, ...).</source>
          <target state="translated">字符串返回当天的英文名称(&quot;Sunday&quot;,&quot;Monday&quot;,...)。</target>
        </trans-unit>
        <trans-unit id="ffc4d02cde72706d98e09a395ce956d9d89dd7b5" translate="yes" xml:space="preserve">
          <source>String returns the English name of the month (&quot;January&quot;, &quot;February&quot;, ...).</source>
          <target state="translated">字符串返回月份的英文名称(&quot;January&quot;,&quot;February&quot;,...)。</target>
        </trans-unit>
        <trans-unit id="d35cab9a7681d28fe5cfa98797f716ccf4a8148e" translate="yes" xml:space="preserve">
          <source>String returns the accumulated string.</source>
          <target state="translated">String 返回累积的字符串。</target>
        </trans-unit>
        <trans-unit id="6a561a9c0ca3a5d45a6220d79144ae4e4f68eaba" translate="yes" xml:space="preserve">
          <source>String returns the contents of the unread portion of the buffer as a string. If the Buffer is a nil pointer, it returns &quot;&amp;lt;nil&amp;gt;&quot;.</source>
          <target state="translated">String以字符串形式返回缓冲区未读部分的内容。如果Buffer是nil指针，则返回&amp;ldquo; &amp;lt;nil&amp;gt;&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="20281079c25e7469dba253811f0a64eb9af0ad50" translate="yes" xml:space="preserve">
          <source>String returns the decimal representation of x as generated by x.Text(10).</source>
          <target state="translated">String 返回 x.Text(10)所生成的 x 的十进制表示。</target>
        </trans-unit>
        <trans-unit id="c1f7f34151f59a07d632aef98f6cf3db75ca331f" translate="yes" xml:space="preserve">
          <source>String returns the encoded userinfo information in the standard form of &quot;username[:password]&quot;.</source>
          <target state="translated">字符串返回标准格式为 &quot;username[:password]&quot;的编码用户信息。</target>
        </trans-unit>
        <trans-unit id="c9f4b613c07a2c7f71577fe196567617d0abff90" translate="yes" xml:space="preserve">
          <source>String returns the hexadecimal form of m, with no punctuation.</source>
          <target state="translated">字符串返回m的十六进制形式,不含标点符号。</target>
        </trans-unit>
        <trans-unit id="a803d186b1c90a1c53ad70e26c40836efc312842" translate="yes" xml:space="preserve">
          <source>String returns the literal text of the number.</source>
          <target state="translated">字符串返回数字的文字。</target>
        </trans-unit>
        <trans-unit id="efd718d51f4b6dbacf2db82a320892ae4b63a670" translate="yes" xml:space="preserve">
          <source>String returns the name of k.</source>
          <target state="translated">字符串返回k的名称。</target>
        </trans-unit>
        <trans-unit id="750dd1515ee90a846665f6d5d112993b3669e476" translate="yes" xml:space="preserve">
          <source>String returns the name of the transaction isolation level.</source>
          <target state="translated">字符串返回事务隔离级别的名称。</target>
        </trans-unit>
        <trans-unit id="e794984ac30a476fc607ba49d30074600724b1fd" translate="yes" xml:space="preserve">
          <source>String returns the serialization of the cookie for use in a Cookie header (if only Name and Value are set) or a Set-Cookie response header (if other fields are set). If c is nil or c.Name is invalid, the empty string is returned.</source>
          <target state="translated">String返回Cookie的序列化,用于Cookie头(如果只设置了Name和Value)或Set-Cookie响应头(如果设置了其他字段)。如果c为nil或c.Name无效,将返回空字符串。</target>
        </trans-unit>
        <trans-unit id="fe713a69a5fd2ac5cb84c706517fb895d0d57913" translate="yes" xml:space="preserve">
          <source>String returns the source text used to compile the regular expression.</source>
          <target state="translated">字符串返回用于编译正则表达式的源文本。</target>
        </trans-unit>
        <trans-unit id="34bacca8ec4eef4ee78833a67f79a6eef6da5be0" translate="yes" xml:space="preserve">
          <source>String returns the string corresponding to the token tok. For operators, delimiters, and keywords the string is the actual token character sequence (e.g., for the token ADD, the string is &quot;+&quot;). For all other tokens the string corresponds to the token constant name (e.g. for the token IDENT, the string is &quot;IDENT&quot;).</source>
          <target state="translated">String 返回对应于标记标记的字符串。对于运算符、定界符和关键字,字符串是实际的标记字符序列(例如,对于标记ADD,字符串是 &quot;+&quot;)。对于所有其他标记,该字符串对应于标记常量名称(例如,对于标记IDENT,字符串为 &quot;IDENT&quot;)。</target>
        </trans-unit>
        <trans-unit id="2d88168daac6375a514f336433bd215fb612a6a9" translate="yes" xml:space="preserve">
          <source>String returns the string form of n, roughly following the RFC 2253 Distinguished Names syntax.</source>
          <target state="translated">String 返回 n 的字符串形式,大致遵循 RFC 2253 Distinguished Names 语法。</target>
        </trans-unit>
        <trans-unit id="65a433aa544a0c7b3431068c5cc7f107bc02e8c8" translate="yes" xml:space="preserve">
          <source>String returns the string form of the IP address ip. It returns one of 4 forms:</source>
          <target state="translated">String 返回 IP 地址的字符串形式。它返回4种形式之一。</target>
        </trans-unit>
        <trans-unit id="77e4b34a03bfe1d41ef0627a6a3eef76345118dd" translate="yes" xml:space="preserve">
          <source>String returns the string v's underlying value, as a string. String is a special case because of Go's String method convention. Unlike the other getters, it does not panic if v's Kind is not String. Instead, it returns a string of the form &quot;&amp;lt;T value&amp;gt;&quot; where T is v's type. The fmt package treats Values specially. It does not call their String method implicitly but instead prints the concrete values they hold.</source>
          <target state="translated">String以字符串形式返回字符串v的基础值。由于Go的String方法约定，String是一种特殊情况。与其他吸气剂不同，如果v的Kind不是String，它不会惊慌。而是返回形式为&amp;ldquo; &amp;lt;T value&amp;gt;&amp;rdquo;的字符串，其中T是v的类型。fmt包特别对待Values。它不会隐式调用其String方法，而是打印它们持有的具体值。</target>
        </trans-unit>
        <trans-unit id="da3ada59fed13cf9c42e28f35ce824b152ed6695" translate="yes" xml:space="preserve">
          <source>String returns the time formatted using the format string</source>
          <target state="translated">字符串返回使用字符串格式化的时间。</target>
        </trans-unit>
        <trans-unit id="7582d0695c8835ce2d6fd48b6b11691af0fd874b" translate="yes" xml:space="preserve">
          <source>String returns the value v as a string. String is a special case because of Go's String method convention. Unlike the other getters, it does not panic if v's Type is not TypeString. Instead, it returns a string of the form &quot;&amp;lt;T&amp;gt;&quot; or &quot;&amp;lt;T: V&amp;gt;&quot; where T is v's type and V is a string representation of v's value.</source>
          <target state="translated">字符串返回值v作为字符串。由于Go的String方法约定，String是一种特殊情况。与其他吸气剂不同，如果v的Type不是TypeString，它不会惊慌。而是返回格式为&amp;ldquo; &amp;lt;T&amp;gt;&amp;rdquo;或&amp;ldquo; &amp;lt;T：V&amp;gt;&amp;rdquo;的字符串，其中T是v的类型，V是v的值的字符串表示形式。</target>
        </trans-unit>
        <trans-unit id="b5780fb112a6b774b6985415c1ab7539f30b0d21" translate="yes" xml:space="preserve">
          <source>String values encode as JSON strings coerced to valid UTF-8, replacing invalid bytes with the Unicode replacement rune. So that the JSON will be safe to embed inside HTML &amp;lt;script&amp;gt; tags, the string is encoded using HTMLEscape, which replaces &quot;&amp;lt;&quot;, &quot;&amp;gt;&quot;, &quot;&amp;amp;&quot;, U+2028, and U+2029 are escaped to &quot;\u003c&quot;,&quot;\u003e&quot;, &quot;\u0026&quot;, &quot;\u2028&quot;, and &quot;\u2029&quot;. This replacement can be disabled when using an Encoder, by calling SetEscapeHTML(false).</source>
          <target state="translated">字符串值编码为强制转换为有效UTF-8的JSON字符串，用Unicode替换符文替换无效字节。为了使JSON可以安全地嵌入到HTML &amp;lt;script&amp;gt;标记中，该字符串使用HTMLEscape编码，替换为&amp;ldquo; &amp;lt;&amp;rdquo;，&amp;ldquo;&amp;gt;&amp;rdquo;，&amp;ldquo;＆&amp;rdquo;，U + 2028和U + 2029的HTMLEscape转义为&amp;ldquo; \ u003c&amp;rdquo;，&amp;ldquo; \ u003e&amp;rdquo;，&amp;ldquo; \ u0026&amp;rdquo;，&amp;ldquo; \ u2028&amp;rdquo;和&amp;ldquo; \ u2029&amp;rdquo;。使用编码器时，可以通过调用SetEscapeHTML（false）禁用此替换。</target>
        </trans-unit>
        <trans-unit id="86940bb85d221e97a38bc1e113fc6bce034c8750" translate="yes" xml:space="preserve">
          <source>StringBytePtr returns a pointer to a NUL-terminated array of bytes. If s contains a NUL byte this function panics instead of returning an error.</source>
          <target state="translated">StringBytePtr返回一个指向NUL结束的字节数组的指针。如果s中包含一个NUL字节,这个函数就会惊慌失措,而不是返回一个错误。</target>
        </trans-unit>
        <trans-unit id="c0623ccf68cc35082d287f89796544274ff86c91" translate="yes" xml:space="preserve">
          <source>StringByteSlice converts a string to a NUL-terminated []byte, If s contains a NUL byte this function panics instead of returning an error.</source>
          <target state="translated">StringByteSlice将一个字符串转换为一个NUL结尾的[]字节,如果s包含一个NUL字节,这个函数就会恐慌,而不是返回一个错误。</target>
        </trans-unit>
        <trans-unit id="6bf1e10cb60d4363fb37f7da731443afa2a654e2" translate="yes" xml:space="preserve">
          <source>StringHeader is the runtime representation of a string. It cannot be used safely or portably and its representation may change in a later release. Moreover, the Data field is not sufficient to guarantee the data it references will not be garbage collected, so programs must keep a separate, correctly typed pointer to the underlying data.</source>
          <target state="translated">StringHeader是字符串的运行时表示。它不能被安全地或可移植地使用,它的表示方式可能在以后的版本中发生变化。此外,Data字段不足以保证它所引用的数据不会被垃圾回收,所以程序必须保留一个单独的、正确类型的指针,指向底层数据。</target>
        </trans-unit>
        <trans-unit id="a97933503d7359e70c5bcc6d71f20f23e72ff484" translate="yes" xml:space="preserve">
          <source>StringNode holds a string constant. The value has been &quot;unquoted&quot;.</source>
          <target state="translated">StringNode持有一个字符串常量。该值已被 &quot;未引号&quot;。</target>
        </trans-unit>
        <trans-unit id="4e2dc56d882f4e247f4c8c91d09f7ca7c92151b0" translate="yes" xml:space="preserve">
          <source>StringSlice attaches the methods of Interface to []string, sorting in increasing order.</source>
          <target state="translated">StringSlice将Interface的方法附加到[]string上,按递增顺序排序。</target>
        </trans-unit>
        <trans-unit id="0ccdd69f6b44471ac8719f7a4d5092264f1d1540" translate="yes" xml:space="preserve">
          <source>StringSlicePtr converts a slice of strings to a slice of pointers to NUL-terminated byte arrays. If any string contains a NUL byte this function panics instead of returning an error.</source>
          <target state="translated">StringSlicePtr将一个字符串切片转换为一个指向NUL结尾的字节数组的切片。如果任何字符串包含一个NUL字节,这个函数就会惊慌失措,而不是返回一个错误。</target>
        </trans-unit>
        <trans-unit id="58cd2c4c0c64b3e8b63116e619c1216921aee8f5" translate="yes" xml:space="preserve">
          <source>StringTable is a COFF string table.</source>
          <target state="translated">StringTable是一个COFF字符串表。</target>
        </trans-unit>
        <trans-unit id="cf2c21cf4463c1c95fd9d9c1165bec97a40c80e4" translate="yes" xml:space="preserve">
          <source>StringVal returns the Go string value of x, which must be a String or an Unknown. If x is Unknown, the result is &quot;&quot;.</source>
          <target state="translated">StringVal 返回 x 的 Go 字符串值,它必须是一个字符串或一个 Unknown。如果x是未知值,结果是&quot;&quot;。</target>
        </trans-unit>
        <trans-unit id="d9073eff948f092d1e822cdc4b90545ac7f58c79" translate="yes" xml:space="preserve">
          <source>StringVar defines a string flag with specified name, default value, and usage string. The argument p points to a string variable in which to store the value of the flag.</source>
          <target state="translated">StringVar定义了一个字符串标志,具有指定的名称、默认值和用法字符串。参数p指向一个字符串变量,用来存储标志的值。</target>
        </trans-unit>
        <trans-unit id="8523e16e4f3d17cbbcc1796a5175f67569825d49" translate="yes" xml:space="preserve">
          <source>StringWriter is the interface that wraps the WriteString method.</source>
          <target state="translated">StringWriter是包装WriteString方法的接口。</target>
        </trans-unit>
        <trans-unit id="2968f2bfae46d2fc485efc7b71be92497e030111" translate="yes" xml:space="preserve">
          <source>Stringer</source>
          <target state="translated">Stringer</target>
        </trans-unit>
        <trans-unit id="58829a9ebd1b847fb0ad45cdde0851c334ed441d" translate="yes" xml:space="preserve">
          <source>Stringer is implemented by any value that has a String method, which defines the &amp;ldquo;native&amp;rdquo; format for that value. The String method is used to print values passed as an operand to any format that accepts a string or to an unformatted printer such as Print.</source>
          <target state="translated">Stringer由具有String方法的任何值实现，该方法定义该值的&amp;ldquo;本机&amp;rdquo;格式。String方法用于将作为操作数传递的值打印为接受字符串的任何格式，或打印到未格式化的打印机（如Print）。</target>
        </trans-unit>
        <trans-unit id="3816c4beac471c733eed1d91c213f8c2b6a29262" translate="yes" xml:space="preserve">
          <source>Strings</source>
          <target state="translated">Strings</target>
        </trans-unit>
        <trans-unit id="6de1d7bc7d04e6a2a354d77d2ded289707802988" translate="yes" xml:space="preserve">
          <source>Strings and Bytes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="906a27ee40bd23a1553b39eb16be0c8e8ac3e949" translate="yes" xml:space="preserve">
          <source>Strings and slices of bytes are sent as an unsigned count followed by that many uninterpreted bytes of the value.</source>
          <target state="translated">字符串和字节片以无符号计数的形式发送,后面是该值的许多未解释的字节。</target>
        </trans-unit>
        <trans-unit id="faac2cc38ba743bbc17ba9acb7964aa6cee65d73" translate="yes" xml:space="preserve">
          <source>Strings must be UTF-8 encoded and may only contain Unicode code points U+0001 through U+00FF, due to limitations of the GZIP file format.</source>
          <target state="translated">由于GZIP文件格式的限制,字符串必须是UTF-8编码,并且只能包含U+0001到U+00FF的Unicode码点。</target>
        </trans-unit>
        <trans-unit id="f76921542e09ce2202753a5d0b5a9e24e8b8a263" translate="yes" xml:space="preserve">
          <source>Strings sorts a slice of strings in increasing order.</source>
          <target state="translated">Strings按照递增的顺序对字符串的一个片断进行排序。</target>
        </trans-unit>
        <trans-unit id="4e57e68cbf341e7da7b76b93c619abebcf0858af" translate="yes" xml:space="preserve">
          <source>StringsAreSorted reports whether the slice x is sorted in increasing order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d93c8594f1a8a4b01949156c04f8f3f3ae7fd2a" translate="yes" xml:space="preserve">
          <source>StringsAreSorted tests whether a slice of strings is sorted in increasing order.</source>
          <target state="translated">StringsAreSorted测试字符串片断是否按递增顺序排序。</target>
        </trans-unit>
        <trans-unit id="13ae2dda2de94ac9d40b6ba17fece2797835c04a" translate="yes" xml:space="preserve">
          <source>StripPrefix</source>
          <target state="translated">StripPrefix</target>
        </trans-unit>
        <trans-unit id="5ba2dcca3bbae35a827418cb07ca626a1294f885" translate="yes" xml:space="preserve">
          <source>StripPrefix returns a handler that serves HTTP requests by removing the given prefix from the request URL's Path (and RawPath if set) and invoking the handler h. StripPrefix handles a request for a path that doesn't begin with prefix by replying with an HTTP 404 not found error. The prefix must match exactly: if the prefix in the request contains escaped characters the reply is also an HTTP 404 not found error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0a5f88c187543f04de90ac6fd0379250c9778df" translate="yes" xml:space="preserve">
          <source>StripPrefix returns a handler that serves HTTP requests by removing the given prefix from the request URL's Path and invoking the handler h. StripPrefix handles a request for a path that doesn't begin with prefix by replying with an HTTP 404 not found error.</source>
          <target state="translated">StripPrefix返回一个处理程序,它通过从请求的URL的Path中删除给定的前缀并调用处理程序h来服务HTTP请求。 StripPrefix通过回复HTTP 404 not found错误来处理一个不是以前缀开始的路径请求。</target>
        </trans-unit>
        <trans-unit id="39170b61b74a11d6a192ff9863dfa73aaecba21c" translate="yes" xml:space="preserve">
          <source>Struct values are deeply equal if their corresponding fields, both exported and unexported, are deeply equal.</source>
          <target state="translated">如果其对应的字段,无论是导出的还是未导出的,结构值都是深度相等的。</target>
        </trans-unit>
        <trans-unit id="fb5bb421400cdac0575f807d47566c64d1f46c0f" translate="yes" xml:space="preserve">
          <source>Struct values encode as JSON objects. Each exported struct field becomes a member of the object, using the field name as the object key, unless the field is omitted for one of the reasons given below.</source>
          <target state="translated">Struct值编码为JSON对象。每个导出的结构体字段都会成为对象的成员,使用字段名作为对象键,除非该字段因下面给出的原因之一被省略。</target>
        </trans-unit>
        <trans-unit id="0b823e55e4d9782e91674576a6c2dba2dbfb679a" translate="yes" xml:space="preserve">
          <source>StructOf</source>
          <target state="translated">StructOf</target>
        </trans-unit>
        <trans-unit id="cbecd3176d1c216f7d05eaf053a4641373b34f6b" translate="yes" xml:space="preserve">
          <source>StructOf currently does not generate wrapper methods for embedded fields and panics if passed unexported StructFields. These limitations may be lifted in a future version.</source>
          <target state="translated">StructOf目前不为嵌入的字段生成封装方法,并且在传递未导出的StructFields时,会出现恐慌。这些限制可能会在未来的版本中被取消。</target>
        </trans-unit>
        <trans-unit id="e272272dfcabba6b0a57032693b1247f7d907d03" translate="yes" xml:space="preserve">
          <source>StructOf returns the struct type containing fields. The Offset and Index fields are ignored and computed as they would be by the compiler.</source>
          <target state="translated">StructOf返回包含字段的结构类型。Offset和Index字段会被忽略,并被编译器计算。</target>
        </trans-unit>
        <trans-unit id="642ea82e69d222e31d0a11979f4762edc849aa8f" translate="yes" xml:space="preserve">
          <source>StructTag</source>
          <target state="translated">StructTag</target>
        </trans-unit>
        <trans-unit id="666cf050832b24dac5a22e670aae0c296886ba23" translate="yes" xml:space="preserve">
          <source>StructTag.Lookup</source>
          <target state="translated">StructTag.Lookup</target>
        </trans-unit>
        <trans-unit id="5f4f3284caaeebe32585ec344848f50378d011bc" translate="yes" xml:space="preserve">
          <source>Structs are sent as a sequence of (field number, field value) pairs. The field value is sent using the standard gob encoding for its type, recursively. If a field has the zero value for its type (except for arrays; see above), it is omitted from the transmission. The field number is defined by the type of the encoded struct: the first field of the encoded type is field 0, the second is field 1, etc. When encoding a value, the field numbers are delta encoded for efficiency and the fields are always sent in order of increasing field number; the deltas are therefore unsigned. The initialization for the delta encoding sets the field number to -1, so an unsigned integer field 0 with value 7 is transmitted as unsigned delta = 1, unsigned value = 7 or (01 07). Finally, after all the fields have been sent a terminating mark denotes the end of the struct. That mark is a delta=0 value, which has representation (00).</source>
          <target state="translated">Structs以(字段号,字段值)对的序列形式发送。字段值使用其类型的标准gob编码递归发送。如果一个字段的类型值为零(数组除外,见上文),那么它将在传输中被省略。字段号由编码结构的类型定义:编码类型的第一个字段是字段0,第二个字段是字段1,等等。当对一个值进行编码时,为了提高效率,字段号进行了三角编码,并且字段总是按照字段号增加的顺序发送,因此三角编码是无符号的。delta编码的初始化将字段号设置为-1,所以一个值为7的无符号整数字段0被传送为unsigned delta=1,unsigned value=7或(01 07)。最后,在所有的字段被发送后,一个终止标记表示结构的结束。这个标记是一个delta=0的值,它的表示方法是(00)。</target>
        </trans-unit>
        <trans-unit id="7dc46671ebabbdf3c46aadccd97f8c490eefc52c" translate="yes" xml:space="preserve">
          <source>Structs, arrays and slices are also supported. Structs encode and decode only exported fields. Strings and arrays of bytes are supported with a special, efficient representation (see below). When a slice is decoded, if the existing slice has capacity the slice will be extended in place; if not, a new array is allocated. Regardless, the length of the resulting slice reports the number of elements decoded.</source>
          <target state="translated">还支持结构、数组和切片。Structs只对导出的字段进行编码和解码。字节组的字符串和数组以一种特殊的、有效的表示方式被支持(见下文)。当一个分片被解码时,如果现有的分片有容量,分片将被原地扩展;如果没有,则分配一个新的数组。无论怎样,产生的分片长度都会报告解码后的元素数。</target>
        </trans-unit>
        <trans-unit id="ad78f09f9c6b3087d8e72e4530ecc70c4956979a" translate="yes" xml:space="preserve">
          <source>Structure Preservation Property: &quot;... when a template author writes an HTML tag in a safe templating language, the browser will interpret the corresponding portion of the output as a tag regardless of the values of untrusted data, and similarly for other structures such as attribute boundaries and JS and CSS string boundaries.&quot;</source>
          <target state="translated">结构保存属性。&quot;.当模板作者用安全的模板语言编写HTML标签时,浏览器将把输出的相应部分解释为标签,而不管不受信任的数据的价值如何,同样,对于其他结构,如属性边界和JS和CSS字符串边界也是如此&quot;。</target>
        </trans-unit>
        <trans-unit id="513360eae171b460c616fcd92bc1621ed2cc2ad5" translate="yes" xml:space="preserve">
          <source>Sub returns an FS corresponding to the subtree rooted at fsys's dir.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3c9ca613cd987d897ef5275ec8d3b6be7186d1f" translate="yes" xml:space="preserve">
          <source>Sub returns the difference of x, y and borrow: diff = x - y - borrow. The borrow input must be 0 or 1; otherwise the behavior is undefined. The borrowOut output is guaranteed to be 0 or 1.</source>
          <target state="translated">Sub 返回 x、y 和 borrow 的差值:diff=x-y-borrow。borrow输入必须为0或1,否则行为未定义。borrowOut输出保证为0或1。</target>
        </trans-unit>
        <trans-unit id="61c41cb657724bf35da0dad82b0d5dee3326e95d" translate="yes" xml:space="preserve">
          <source>Sub returns the duration t-u. If the result exceeds the maximum (or minimum) value that can be stored in a Duration, the maximum (or minimum) duration will be returned. To compute t-d for a duration d, use t.Add(-d).</source>
          <target state="translated">子返回持续时间t-u。如果结果超过了可以存储在Duration中的最大(或最小)值,将返回最大(或最小)持续时间。要计算持续时间d的t-d,使用t.Add(-d)。</target>
        </trans-unit>
        <trans-unit id="9a9cccdf849236c7b5afc32fedeaf0e730cf15fd" translate="yes" xml:space="preserve">
          <source>Sub returns the rectangle r translated by -p.</source>
          <target state="translated">子返回由-p转换的矩形r。</target>
        </trans-unit>
        <trans-unit id="c74b307e6862c7c0fdbabb48e4f241316eca6f53" translate="yes" xml:space="preserve">
          <source>Sub returns the vector p-q.</source>
          <target state="translated">子返回向量p-q。</target>
        </trans-unit>
        <trans-unit id="2660992e01b4593ff7e0d2ea96dbc6a6fcdbbc82" translate="yes" xml:space="preserve">
          <source>Sub sets z to the difference x-y and returns z.</source>
          <target state="translated">子将z设为x-y的差值,并返回z。</target>
        </trans-unit>
        <trans-unit id="07c120e2c4cb601d9bfe9da745d95ee84f5c8f23" translate="yes" xml:space="preserve">
          <source>Sub sets z to the rounded difference x-y and returns z. Precision, rounding, and accuracy reporting are as for Add. Sub panics with ErrNaN if x and y are infinities with equal signs. The value of z is undefined in that case.</source>
          <target state="translated">子将z设为四舍五入的差值x-y并返回z。精度、四舍五入和准确度报告与 Add 相同。如果x和y是等号的无穷大,Sub会用ErrNaN恐慌。在这种情况下,z 的值是未定义的。</target>
        </trans-unit>
        <trans-unit id="821524c66883b61b23da230e1f7ac6f247b61c28" translate="yes" xml:space="preserve">
          <source>Sub-repositories</source>
          <target state="translated">Sub-repositories</target>
        </trans-unit>
        <trans-unit id="027b254161eaa851d3de87e3e3811c330b4b1cfe" translate="yes" xml:space="preserve">
          <source>Sub32 returns the difference of x, y and borrow, diff = x - y - borrow. The borrow input must be 0 or 1; otherwise the behavior is undefined. The borrowOut output is guaranteed to be 0 or 1.</source>
          <target state="translated">Sub32 返回 x、y 和 borrow 的差值,diff=x-y-borrow。borrow输入必须为0或1,否则行为未定义。borrowOut输出保证为0或1。</target>
        </trans-unit>
        <trans-unit id="19abe5243ff65ef214d8cfd1ed7dd0d253eaaf1e" translate="yes" xml:space="preserve">
          <source>Sub64 returns the difference of x, y and borrow: diff = x - y - borrow. The borrow input must be 0 or 1; otherwise the behavior is undefined. The borrowOut output is guaranteed to be 0 or 1.</source>
          <target state="translated">Sub64 返回 x、y 和 borrow 的差值:diff=x-y-borrow。borrow输入必须为0或1,否则行为未定义。borrowOut输出保证为0或1。</target>
        </trans-unit>
        <trans-unit id="3fc6e21e27e1d98c4a46c59e21cbbbe634de9bcb" translate="yes" xml:space="preserve">
          <source>SubImage returns an image representing the portion of the image p visible through r. The returned value shares pixels with the original image.</source>
          <target state="translated">SubImage返回一个代表图像p通过r可见的部分的图像,返回的值与原始图像共享像素。</target>
        </trans-unit>
        <trans-unit id="19b094dbedb2add32a27c12c5c0b06b9d304fb7c" translate="yes" xml:space="preserve">
          <source>Subdirectories</source>
          <target state="translated">Subdirectories</target>
        </trans-unit>
        <trans-unit id="73a30231d9aabf0592839371dc3542545b7db703" translate="yes" xml:space="preserve">
          <source>SubexpIndex returns the index of the first subexpression with the given name, or -1 if there is no subexpression with that name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abb46f6f4b961e90d924a27858c117c84efd6aae" translate="yes" xml:space="preserve">
          <source>SubexpNames returns the names of the parenthesized subexpressions in this Regexp. The name for the first sub-expression is names[1], so that if m is a match slice, the name for m[i] is SubexpNames()[i]. Since the Regexp as a whole cannot be named, names[0] is always the empty string. The slice should not be modified.</source>
          <target state="translated">SubexpNames 返回该 Regexp 中括号内子表达式的名称。第一个子表达式的名称是names[1],因此如果m是一个匹配分片,那么m[i]的名称是SubexpNames()[i]。由于Regexp整体不能被命名,所以names[0]总是空字符串。该分片不应该被修改。</target>
        </trans-unit>
        <trans-unit id="c9c047b864469812cfb4b3b886d30b5376a4d0df" translate="yes" xml:space="preserve">
          <source>Subjects returns a list of the DER-encoded subjects of all of the certificates in the pool.</source>
          <target state="translated">Subjects 返回证书池中所有证书的 DER 编码主题的列表。</target>
        </trans-unit>
        <trans-unit id="91e8bbbf1ff4c8e821148581549206c9787e494e" translate="yes" xml:space="preserve">
          <source>Subtests and Sub-benchmarks</source>
          <target state="translated">小测试和次级基准</target>
        </trans-unit>
        <trans-unit id="05cc8697fcb7ccef149a7858e8bd798cb2cd774f" translate="yes" xml:space="preserve">
          <source>Subtests can also be used to control parallelism. A parent test will only complete once all of its subtests complete. In this example, all tests are run in parallel with each other, and only with each other, regardless of other top-level tests that may be defined:</source>
          <target state="translated">子测试也可以用来控制并行性。一个父测试只有在它的所有子测试完成后才会完成。在这个例子中,所有的测试都是相互并行运行的,而且只允许相互并行运行,而不考虑可能定义的其他顶层测试。</target>
        </trans-unit>
        <trans-unit id="bb672ca35fe1893eef6f12fcd0a8efff47a2478c" translate="yes" xml:space="preserve">
          <source>Success reports whether the program exited successfully, such as with exit status 0 on Unix.</source>
          <target state="translated">成功报告程序是否成功退出,如Unix上的退出状态为0。</target>
        </trans-unit>
        <trans-unit id="07eda2eb03735678c89d2490ea6410dd3ad1a43b" translate="yes" xml:space="preserve">
          <source>Such a file is usually paired with another file implementing the default functionality for other systems, which in this case would carry the constraint:</source>
          <target state="translated">这样的文件通常与另一个实现其他系统默认功能的文件配对,在这种情况下,它将携带约束条件。</target>
        </trans-unit>
        <trans-unit id="fc9ce14b28c6f2c3b72caf056ca604b2b96f7d2b" translate="yes" xml:space="preserve">
          <source>Sum</source>
          <target state="translated">Sum</target>
        </trans-unit>
        <trans-unit id="2307e80c75af1c4de56c67f7a9ea0bffff7083aa" translate="yes" xml:space="preserve">
          <source>Sum appends the hash's current 64-bit value to b. It exists for implementing hash.Hash. For direct calls, it is more efficient to use Sum64.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1037d5e9f233e3f6a6a25104581ccd4bbd6ac1c7" translate="yes" xml:space="preserve">
          <source>Sum returns the MD5 checksum of the data.</source>
          <target state="translated">Sum返回数据的MD5校验和。</target>
        </trans-unit>
        <trans-unit id="d8eeaf2ada0e780d70b60f2e9edbd46ef59d4a13" translate="yes" xml:space="preserve">
          <source>Sum returns the SHA-1 checksum of the data.</source>
          <target state="translated">Sum返回数据的SHA-1校验和。</target>
        </trans-unit>
        <trans-unit id="0dca98b14fcbfeb34897e7396c1a6dfa98d521b4" translate="yes" xml:space="preserve">
          <source>Sum224 returns the SHA224 checksum of the data.</source>
          <target state="translated">Sum224返回数据的SHA224校验和。</target>
        </trans-unit>
        <trans-unit id="ba05916088015c0f1b00b88d9415ebfa726370d8" translate="yes" xml:space="preserve">
          <source>Sum256</source>
          <target state="translated">Sum256</target>
        </trans-unit>
        <trans-unit id="087b1fabd67b489187e993cab88dfd4147ea385d" translate="yes" xml:space="preserve">
          <source>Sum256 returns the SHA256 checksum of the data.</source>
          <target state="translated">Sum256返回数据的SHA256校验和。</target>
        </trans-unit>
        <trans-unit id="6bd95a96de2d8140b4ada3f2d7b194594facee01" translate="yes" xml:space="preserve">
          <source>Sum384 returns the SHA384 checksum of the data.</source>
          <target state="translated">Sum384返回数据的SHA384校验和。</target>
        </trans-unit>
        <trans-unit id="bf1f6e0b5ced478fca66b19297a0e98baeedd390" translate="yes" xml:space="preserve">
          <source>Sum512 returns the SHA512 checksum of the data.</source>
          <target state="translated">Sum512返回数据的SHA512校验和。</target>
        </trans-unit>
        <trans-unit id="3357361c0e72e316aab24916d39ed7d14bdb335d" translate="yes" xml:space="preserve">
          <source>Sum512_224 returns the Sum512/224 checksum of the data.</source>
          <target state="translated">Sum512_224 返回数据的Sum512/224校验和。</target>
        </trans-unit>
        <trans-unit id="ff71eecde6b5c686475ebd821438cf7dd50ffe32" translate="yes" xml:space="preserve">
          <source>Sum512_256 returns the Sum512/256 checksum of the data.</source>
          <target state="translated">Sum512_256 返回数据的Sum512/256校验和。</target>
        </trans-unit>
        <trans-unit id="8473e2e1004301cd370598216fa62dc426cca789" translate="yes" xml:space="preserve">
          <source>Sum64 returns h's current 64-bit value, which depends on h's seed and the sequence of bytes added to h since the last call to Reset or SetSeed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4442b8443612835fd9bd367eb3496bb5cfec606a" translate="yes" xml:space="preserve">
          <source>Support for tracing tests and benchmarks built with the standard testing package is built into `go test`. For example, the following command runs the test in the current directory and writes the trace file (trace.out).</source>
          <target state="translated">`go test`中内置了对跟踪测试和用标准测试包建立的基准的支持。例如,以下命令在当前目录下运行测试,并写入跟踪文件(trace.out)。</target>
        </trans-unit>
        <trans-unit id="05492c0a57ea2d63ba2b476c7222b6bcdddbb676" translate="yes" xml:space="preserve">
          <source>Supported architectures for compiler &quot;gc&quot;: &quot;386&quot;, &quot;arm&quot;, &quot;arm64&quot;, &quot;amd64&quot;, &quot;amd64p32&quot;, &quot;mips&quot;, &quot;mipsle&quot;, &quot;mips64&quot;, &quot;mips64le&quot;, &quot;ppc64&quot;, &quot;ppc64le&quot;, &quot;riscv64&quot;, &quot;s390x&quot;, &quot;sparc64&quot;, &quot;wasm&quot;.</source>
          <target state="translated">编译器 &quot;gc &quot;所支持的架构:&quot;386&quot;、&quot;arm&quot;、&quot;arm64&quot;、&quot;amd64&quot;、&quot;amd64p32&quot;、&quot;mips&quot;、&quot;mipsle&quot;、&quot;mips64&quot;、&quot;mips64le&quot;。&quot;386&quot;、&quot;arm&quot;、&quot;arm64&quot;、&quot;amd64&quot;、&quot;amd64p32&quot;、&quot;mips&quot;、&quot;mipsle&quot;、&quot;mips64&quot;、&quot;mips64le&quot;、&quot;pc64&quot;、&quot;pc64le&quot;、&quot;riscv64&quot;、&quot;s390x&quot;、&quot;sparc64&quot;、&quot;wasm&quot;。</target>
        </trans-unit>
        <trans-unit id="666c0c52700d4610d711d3fb7958b9574f8a15e7" translate="yes" xml:space="preserve">
          <source>Supported metrics</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bd4d45ed11fa0b050a34198a5d7a561630a107e" translate="yes" xml:space="preserve">
          <source>SupportsCertificate returns nil if the provided certificate is supported by the client that sent the ClientHello. Otherwise, it returns an error describing the reason for the incompatibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91f216722ea67774c646ac48a3a778f2005845b0" translate="yes" xml:space="preserve">
          <source>SupportsCertificate returns nil if the provided certificate is supported by the server that sent the CertificateRequest. Otherwise, it returns an error describing the reason for the incompatibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8b59b633a995b7dd6a0e84deb15f21ce9bf242a" translate="yes" xml:space="preserve">
          <source>SwapInt32 atomically stores new into *addr and returns the previous *addr value.</source>
          <target state="translated">SwapInt32原子性地将new存储到*addr中,并返回之前的*addr值。</target>
        </trans-unit>
        <trans-unit id="96490065dc4e2e645c8a89627e673eb95f4aaa28" translate="yes" xml:space="preserve">
          <source>SwapInt64 atomically stores new into *addr and returns the previous *addr value.</source>
          <target state="translated">SwapInt64原子性地将new存储到*addr中,并返回之前的*addr值。</target>
        </trans-unit>
        <trans-unit id="da115593d3ae663bb42ff237dd86576dfdedf6ad" translate="yes" xml:space="preserve">
          <source>SwapPointer atomically stores new into *addr and returns the previous *addr value.</source>
          <target state="translated">SwapPointer原子性地将new存储到*addr中,并返回之前的*addr值。</target>
        </trans-unit>
        <trans-unit id="0c0f6214095877962c7da65a2c141bf3b6cbecc8" translate="yes" xml:space="preserve">
          <source>SwapUint32 atomically stores new into *addr and returns the previous *addr value.</source>
          <target state="translated">SwapUint32原子性地将new存储到*addr中,并返回之前的*addr值。</target>
        </trans-unit>
        <trans-unit id="899e9c7e854930b5577e53934a16009339f15457" translate="yes" xml:space="preserve">
          <source>SwapUint64 atomically stores new into *addr and returns the previous *addr value.</source>
          <target state="translated">SwapUint64原子性地将new存储到*addr中,并返回之前的*addr值。</target>
        </trans-unit>
        <trans-unit id="18cdfb91a16523313759a1c794de0eb9712ac2b2" translate="yes" xml:space="preserve">
          <source>SwapUintptr atomically stores new into *addr and returns the previous *addr value.</source>
          <target state="translated">SwapUintptr原子性地将new存储到*addr中,并返回之前的*addr值。</target>
        </trans-unit>
        <trans-unit id="5c2b73e847c3ed8be17c9afe2788c2fedb5bc635" translate="yes" xml:space="preserve">
          <source>Swapper panics if the provided interface is not a slice.</source>
          <target state="translated">如果提供的接口不是切片,Swapper就会恐慌。</target>
        </trans-unit>
        <trans-unit id="0485bba36620f415adb72d21b9eac171cd9aadf1" translate="yes" xml:space="preserve">
          <source>Swapper returns a function that swaps the elements in the provided slice.</source>
          <target state="translated">Swapper返回一个交换所提供的片中元素的函数。</target>
        </trans-unit>
        <trans-unit id="baf85dad7e64d73c6dc3f04eb46803a601b907a7" translate="yes" xml:space="preserve">
          <source>SymByAddr returns the text, data, or bss symbol starting at the given address.</source>
          <target state="translated">SymByAddr返回从给定地址开始的文本、数据或bss符号。</target>
        </trans-unit>
        <trans-unit id="e6a580ed077335806f8a72f4c91bc2108aa36618" translate="yes" xml:space="preserve">
          <source>Symbol Binding - ELFNN_ST_BIND - st_info</source>
          <target state="translated">符号绑定-ELFNN_ST_BIND-st_info</target>
        </trans-unit>
        <trans-unit id="998290f1606e44ec99b08646525255987ca67dd9" translate="yes" xml:space="preserve">
          <source>Symbol is similar to COFFSymbol with Name field replaced by Go string. Symbol also does not have NumberOfAuxSymbols.</source>
          <target state="translated">Symbol类似于COFFSymbol,但Name字段被Go字符串取代。符号也没有NumberOfAuxSymbols。</target>
        </trans-unit>
        <trans-unit id="e746caac18fb8c9ece11fba1c3858dd24402cee1" translate="yes" xml:space="preserve">
          <source>Symbol looks up the program counters listed in the request, responding with a table mapping program counters to function names. The package initialization registers it as /debug/pprof/symbol.</source>
          <target state="translated">Symbol查找请求中列出的程序计数器,用一个程序计数器与函数名的映射表来回应。包的初始化将其注册为/debug/pprof/symbol。</target>
        </trans-unit>
        <trans-unit id="9183912a1c8677ccbfeafe4a95bb81fdaf9d6c67" translate="yes" xml:space="preserve">
          <source>Symbol type - ELFNN_ST_TYPE - st_info</source>
          <target state="translated">符号类型-ELFNN_ST_TYPE-st_info</target>
        </trans-unit>
        <trans-unit id="300ae1bf65f5418188fead7a4f6227a1a8cb17ab" translate="yes" xml:space="preserve">
          <source>Symbol visibility - ELFNN_ST_VISIBILITY - st_other</source>
          <target state="translated">符号可见性-ELFNN_ST_VISIBILITY-st_other</target>
        </trans-unit>
        <trans-unit id="e0dd57ca387a759e2499962eadf5f79f0eaa8ee2" translate="yes" xml:space="preserve">
          <source>Symbols returns the symbol table for f.</source>
          <target state="translated">符号返回f的符号表。</target>
        </trans-unit>
        <trans-unit id="40ab78f946263d95260d4886b240965a4da98f61" translate="yes" xml:space="preserve">
          <source>Symbols returns the symbol table for f. The symbols will be listed in the order they appear in f.</source>
          <target state="translated">符号表 返回f的符号表,符号将按照它们在f中出现的顺序排列。</target>
        </trans-unit>
        <trans-unit id="2377d81c04be24a887c20fd3bd69bc0f09f37db5" translate="yes" xml:space="preserve">
          <source>Symlink creates newname as a symbolic link to oldname. If there is an error, it will be of type *LinkError.</source>
          <target state="translated">Symlink创建newname作为一个符号链接到oldname。如果出现错误,它的类型将是*LinkError。</target>
        </trans-unit>
        <trans-unit id="0aceec11151392e3e912ee288231038c58c328b4" translate="yes" xml:space="preserve">
          <source>Sync commits the current contents of the file to stable storage. Typically, this means flushing the file system's in-memory copy of recently written data to disk.</source>
          <target state="translated">同步将文件的当前内容提交到稳定的存储中。通常情况下,这意味着将文件系统的内存中最近写入的数据副本刷新到磁盘。</target>
        </trans-unit>
        <trans-unit id="e15b4a502540aca9807844244039f56ac0ff96c5" translate="yes" xml:space="preserve">
          <source>Synchronous signals are signals triggered by errors in program execution: SIGBUS, SIGFPE, and SIGSEGV. These are only considered synchronous when caused by program execution, not when sent using os.Process.Kill or the kill program or some similar mechanism. In general, except as discussed below, Go programs will convert a synchronous signal into a run-time panic.</source>
          <target state="translated">同步信号是由程序执行中的错误所触发的信号。SIGBUS、SIGFPE和SIGSEGV。这些信号只有在程序执行引起的时候才会被认为是同步信号,而不是使用os.Process.Kill或杀程序或一些类似的机制发送的信号。一般来说,除了下面的讨论,Go程序会将同步信号转化为运行时的恐慌。</target>
        </trans-unit>
        <trans-unit id="36c0630a340d2960affa1c4d2360b0e2c06793fb" translate="yes" xml:space="preserve">
          <source>Synopsis</source>
          <target state="translated">Synopsis</target>
        </trans-unit>
        <trans-unit id="14251985329004226786245f7238c38c1ab2c9f9" translate="yes" xml:space="preserve">
          <source>Synopsis returns a cleaned version of the first sentence in s. That sentence ends after the first period followed by space and not preceded by exactly one uppercase letter. The result string has no \n, \r, or \t characters and uses only single spaces between words. If s starts with any of the IllegalPrefixes, the result is the empty string.</source>
          <target state="translated">Synopsis返回s中第一句话的清洁版本。该句子在第一个句号后用空格结束,并且前面没有一个大写字母。结果字符串中没有\n,\r,或\t字符,并且只在单词之间使用单个空格。如果s以任何IllegalPrefixes开头,结果就是空字符串。</target>
        </trans-unit>
        <trans-unit id="17c7ba7676ad1ad6dd1c4e6b997adcae910262c9" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="translated">Syntax</target>
        </trans-unit>
        <trans-unit id="94881bde696c81108db9e992f3357d3d70383bb4" translate="yes" xml:space="preserve">
          <source>Sys returns system-dependent exit information about the process. Convert it to the appropriate underlying type, such as syscall.WaitStatus on Unix, to access its contents.</source>
          <target state="translated">Sys返回与系统相关的进程的退出信息,将其转换为适当的底层类型,如Unix上的syscall.WaitStatus,以访问其内容。将其转换为适当的底层类型,如Unix上的syscall.WaitStatus,以访问其内容。</target>
        </trans-unit>
        <trans-unit id="ce82965024d89928bce7d20275a546fd15078072" translate="yes" xml:space="preserve">
          <source>SysProcIDMap holds Container ID to Host ID mappings used for User Namespaces in Linux. See user_namespaces(7).</source>
          <target state="translated">SysProcIDMap 保存了 Linux 中用于用户命名空间的容器 ID 到主机 ID 的映射。参见 user_namespaces(7)。</target>
        </trans-unit>
        <trans-unit id="8ffbaaa01464f1d0b5846f06e745037abe0d8cb8" translate="yes" xml:space="preserve">
          <source>SysUsage returns system-dependent resource usage information about the exited process. Convert it to the appropriate underlying type, such as *syscall.Rusage on Unix, to access its contents. (On Unix, *syscall.Rusage matches struct rusage as defined in the getrusage(2) manual page.)</source>
          <target state="translated">SysUsage 返回与系统相关的关于退出进程的资源使用信息。将其转换为适当的底层类型,例如 Unix 上的 *syscall.Rusage,以访问其内容。(在 Unix 上,*syscall.Rusage 与 getrusage(2)手册页面中定义的 rusage 结构相匹配。)</target>
        </trans-unit>
        <trans-unit id="e293cc54d1f1c47b6fdb1085033440055e2faa2b" translate="yes" xml:space="preserve">
          <source>SyscallConn returns a raw file. This implements the syscall.Conn interface.</source>
          <target state="translated">SyscallConn返回一个原始文件。这实现了syscall.Conn接口。</target>
        </trans-unit>
        <trans-unit id="93d325a9a596e81112db1a88f6cf17706c8e91ec" translate="yes" xml:space="preserve">
          <source>SyscallConn returns a raw network connection. This implements the syscall.Conn interface.</source>
          <target state="translated">SyscallConn返回一个原始网络连接。这实现了syscall.Conn接口。</target>
        </trans-unit>
        <trans-unit id="aa615b3f3de4dc13fa4173050b52db98916467bd" translate="yes" xml:space="preserve">
          <source>SyscallError records an error from a specific system call.</source>
          <target state="translated">SyscallError记录了一个特定系统调用的错误。</target>
        </trans-unit>
        <trans-unit id="de57d6136b78d4b44c51a17ce5f47f730586e6a6" translate="yes" xml:space="preserve">
          <source>SystemCertPool returns a copy of the system cert pool.</source>
          <target state="translated">SystemCertPool 返回系统证书池的副本。</target>
        </trans-unit>
        <trans-unit id="5bc8f6a9ab808b5aa99fa9f5b51afdf83e241a9c" translate="yes" xml:space="preserve">
          <source>SystemRootsError results when we fail to load the system root certificates.</source>
          <target state="translated">当我们未能加载系统根证书时,会产生SystemRootsError。</target>
        </trans-unit>
        <trans-unit id="326b735dbfcf185462598a45a443d5db5a2c18cd" translate="yes" xml:space="preserve">
          <source>SystemTime returns the system CPU time of the exited process and its children.</source>
          <target state="translated">SystemTime 返回退出的进程及其子进程的系统 CPU 时间。</target>
        </trans-unit>
        <trans-unit id="45c7796c7458dc5d46d3bad14455a8811762231d" translate="yes" xml:space="preserve">
          <source>T is a type passed to Test functions to manage test state and support formatted test logs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd9dc41e485032cb18e9d13d513ba555be1b33c2" translate="yes" xml:space="preserve">
          <source>T is a type passed to Test functions to manage test state and support formatted test logs. Logs are accumulated during execution and dumped to standard output when done.</source>
          <target state="translated">T是传递给测试函数的一个类型,用于管理测试状态,支持格式化的测试日志。在执行过程中积累日志,完成后转储到标准输出。</target>
        </trans-unit>
        <trans-unit id="d71f7f3fa4e9f0ba0065f39db28f69d358c4b941" translate="yes" xml:space="preserve">
          <source>TB is the interface common to T and B.</source>
          <target state="translated">TB是T和B共用的接口。</target>
        </trans-unit>
        <trans-unit id="671a2dd281c27979f8b5f140c5da50e321430a64" translate="yes" xml:space="preserve">
          <source>TBSCertificateList represents the ASN.1 structure of the same name. See RFC 5280, section 5.1.</source>
          <target state="translated">TBSCertificateList表示同名的ASN.1结构。参见RFC 5280,5.1节。</target>
        </trans-unit>
        <trans-unit id="2984ada09d0c49745872575be1763fe615cf3de7" translate="yes" xml:space="preserve">
          <source>TCPAddr represents the address of a TCP end point.</source>
          <target state="translated">TCPAddr表示TCP端点的地址。</target>
        </trans-unit>
        <trans-unit id="623c2c8aa88d77780fe4e0bcba75694b81bcf2ad" translate="yes" xml:space="preserve">
          <source>TCPConn is an implementation of the Conn interface for TCP network connections.</source>
          <target state="translated">TCPConn是Conn接口的一个实现,用于TCP网络连接。</target>
        </trans-unit>
        <trans-unit id="1bbfc48812fe8aa4d93c086976c0d5cdc5424e43" translate="yes" xml:space="preserve">
          <source>TCPListener is a TCP network listener. Clients should typically use variables of type Listener instead of assuming TCP.</source>
          <target state="translated">TCPListener是一个TCP网络监听器。客户端通常应该使用Listener类型的变量,而不是假设TCP。</target>
        </trans-unit>
        <trans-unit id="c0df2a7fffd9d8cf03b29589d0b72452730e5dd3" translate="yes" xml:space="preserve">
          <source>TLS 1.3 is available on an opt-out basis in Go 1.13. To disable it, set the GODEBUG environment variable (comma-separated key=value options) such that it includes &quot;tls13=0&quot;.</source>
          <target state="translated">TLS 1.3在Go 1.13中是可以选择不使用的。要禁用它,可以设置GODEBUG环境变量(以逗号分隔的key=value options),使其包含 &quot;tls13=0&quot;。</target>
        </trans-unit>
        <trans-unit id="daa5896e5821b88d0d9b26d2bc85c2d021b848c8" translate="yes" xml:space="preserve">
          <source>TLSConnectionState returns the client's TLS connection state. The return values are their zero values if StartTLS did not succeed.</source>
          <target state="translated">TLSConnectionState返回客户端的TLS连接状态。如果StartTLS没有成功,则返回值为其零值。</target>
        </trans-unit>
        <trans-unit id="ed012370216d609d48fc2b869f8a011268923cad" translate="yes" xml:space="preserve">
          <source>TODO returns a non-nil, empty Context. Code should use context.TODO when it's unclear which Context to use or it is not yet available (because the surrounding function has not yet been extended to accept a Context parameter).</source>
          <target state="translated">TODO返回一个非零的空Context。当不清楚要使用哪个Context或者它还不可用的时候(因为周围的函数还没有被扩展到接受Context参数),代码应该使用context.TODO。</target>
        </trans-unit>
        <trans-unit id="1f541ebdf888dacb11e44ff51c13846474081ba9" translate="yes" xml:space="preserve">
          <source>Tab-terminated cells in contiguous lines constitute a column. The Writer inserts padding as needed to make all cells in a column have the same width, effectively aligning the columns. It assumes that all characters have the same width, except for tabs for which a tabwidth must be specified. Column cells must be tab-terminated, not tab-separated: non-tab terminated trailing text at the end of a line forms a cell but that cell is not part of an aligned column. For instance, in this example (where | stands for a horizontal tab):</source>
          <target state="translated">以制表符结束的连续行单元格构成一列。Writer根据需要插入padding,使列中的所有单元格具有相同的宽度,有效地对齐列。它假定所有的字符都有相同的宽度,但制表符除外,制表符的宽度必须指定。列单元格必须以制表符结尾,而不是以制表符分隔:行末非制表符结尾的尾部文本形成一个单元格,但该单元格不是对齐列的一部分。例如,在这个例子中(其中|代表水平制表符)。</target>
        </trans-unit>
        <trans-unit id="9baa6d565b56c1e4861e3df81a8fd8df65d699d4" translate="yes" xml:space="preserve">
          <source>Table 1 in [2] suggests maximum numbers of primes for a given size.</source>
          <target state="translated">表1在[2]中提出了给定大小的最大质数。</target>
        </trans-unit>
        <trans-unit id="ba3ee22bd3b233bdb404d63bfe71ba0cb11ae0a4" translate="yes" xml:space="preserve">
          <source>Table is a 256-word table representing the polynomial for efficient processing.</source>
          <target state="translated">表是一个256字的表,表示多项式,以便高效处理。</target>
        </trans-unit>
        <trans-unit id="599b448991ae5ae6d130b6356ce6b00630c5cefb" translate="yes" xml:space="preserve">
          <source>Table represents a Go symbol table. It stores all of the symbols decoded from the program and provides methods to translate between symbols, names, and addresses.</source>
          <target state="translated">表表示一个围棋符号表。它存储了所有从程序中解码的符号,并提供了在符号、名称和地址之间进行翻译的方法。</target>
        </trans-unit>
        <trans-unit id="bfc4ba347929d28c193a400550bae587488f16cd" translate="yes" xml:space="preserve">
          <source>Tag returns the i'th field tag for 0 &amp;lt;= i &amp;lt; NumFields().</source>
          <target state="translated">标签返回第i个字段标签，其值为0 &amp;lt;= i &amp;lt;NumFields（）。</target>
        </trans-unit>
        <trans-unit id="7a39b84c91d8c550355f46b331fdfde2ffca5ba7" translate="yes" xml:space="preserve">
          <source>Tag sizes between 12 and 16 bytes are allowed.</source>
          <target state="translated">标签大小允许在12到16字节之间。</target>
        </trans-unit>
        <trans-unit id="9dda0ce21be12978cbb42d63ed48bd36a71555e8" translate="yes" xml:space="preserve">
          <source>Taken from &lt;a href=&quot;https://www.iana.org/assignments/tls-parameters/tls-parameters.xml&quot;&gt;https://www.iana.org/assignments/tls-parameters/tls-parameters.xml&lt;/a&gt;</source>
          <target state="translated">取自&lt;a href=&quot;https://www.iana.org/assignments/tls-parameters/tls-parameters.xml&quot;&gt;https://www.iana.org/assignments/tls-parameters/tls-parameters.xml&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="133552ebfbcce8310f8920695422699d5256bac9" translate="yes" xml:space="preserve">
          <source>Tan</source>
          <target state="translated">Tan</target>
        </trans-unit>
        <trans-unit id="c442668b04fe0d2fb49d4d83b1b51198b583f812" translate="yes" xml:space="preserve">
          <source>Tan returns the tangent of the radian argument x.</source>
          <target state="translated">Tan 返回弧度参数 x 的正切值。</target>
        </trans-unit>
        <trans-unit id="9f8f5243ed4843c5154158c2ff20cd9a586739e0" translate="yes" xml:space="preserve">
          <source>Tan returns the tangent of x.</source>
          <target state="translated">Tan返回x的切线。</target>
        </trans-unit>
        <trans-unit id="19bff9fbbbadd7b339e0ee0ae1715d62fea9cae0" translate="yes" xml:space="preserve">
          <source>Tanh</source>
          <target state="translated">Tanh</target>
        </trans-unit>
        <trans-unit id="dc8ae90d27ce708b07a5ac10906ccc3ed208c4a5" translate="yes" xml:space="preserve">
          <source>Tanh returns the hyperbolic tangent of x.</source>
          <target state="translated">Tanh返回x的双曲正切。</target>
        </trans-unit>
        <trans-unit id="6f0a22a02d454a68d024fa67fa9340156799d88b" translate="yes" xml:space="preserve">
          <source>Tape archives (tar) are a file format for storing a sequence of files that can be read and written in a streaming manner. This package aims to cover most variations of the format, including those produced by GNU and BSD tar tools.</source>
          <target state="translated">磁带档案(tar)是一种文件格式,用于存储一系列可以以流式方式读写的文件。本软件包旨在涵盖该格式的大多数变化,包括GNU和BSD tar工具产生的那些。</target>
        </trans-unit>
        <trans-unit id="f11f02db734667c97fad6ffb5c8e393a00b87399" translate="yes" xml:space="preserve">
          <source>Task is a data type for tracing a user-defined, logical operation.</source>
          <target state="translated">任务是一种数据类型,用于跟踪用户定义的逻辑操作。</target>
        </trans-unit>
        <trans-unit id="a9e55d223a3d4713691d397b40624caef60d5252" translate="yes" xml:space="preserve">
          <source>TeeReader</source>
          <target state="translated">TeeReader</target>
        </trans-unit>
        <trans-unit id="c3ce03ea658d6ce846ba37ed8673f608fd0ba578" translate="yes" xml:space="preserve">
          <source>TeeReader returns a Reader that writes to w what it reads from r. All reads from r performed through it are matched with corresponding writes to w. There is no internal buffering - the write must complete before the read completes. Any error encountered while writing is reported as a read error.</source>
          <target state="translated">TeeReader返回一个Reader,它将从r中读取的内容写入w中。写入时遇到的任何错误都会被报告为读取错误。</target>
        </trans-unit>
        <trans-unit id="d5aae156b3babace54749a4ff370cbf166528804" translate="yes" xml:space="preserve">
          <source>Tell returns the current position in the line table.</source>
          <target state="translated">Tell返回当前在行表中的位置。</target>
        </trans-unit>
        <trans-unit id="243b371792899304742de51767e5e63dc878faba" translate="yes" xml:space="preserve">
          <source>TempDir</source>
          <target state="translated">TempDir</target>
        </trans-unit>
        <trans-unit id="4e9f8298798f58791af33409f9e40b224764dd8a" translate="yes" xml:space="preserve">
          <source>TempDir (Suffix)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99e70473aa5b1571f3701ff2584745139273d8ab" translate="yes" xml:space="preserve">
          <source>TempDir creates a new temporary directory in the directory dir with a name beginning with prefix and returns the path of the new directory. If dir is the empty string, TempDir uses the default directory for temporary files (see os.TempDir). Multiple programs calling TempDir simultaneously will not choose the same directory. It is the caller's responsibility to remove the directory when no longer needed.</source>
          <target state="translated">TempDir 在目录 dir 中创建一个新的临时目录,名称以前缀开头,并返回新目录的路径。如果 dir 是空字符串,TempDir 会使用默认的临时文件目录(参见 os.TempDir)。多个程序同时调用 TempDir 不会选择同一个目录。调用者有责任在不再需要时删除该目录。</target>
        </trans-unit>
        <trans-unit id="cc071fc9ff710ae41b76bf6f9ab98edd65deeafe" translate="yes" xml:space="preserve">
          <source>TempDir creates a new temporary directory in the directory dir. The directory name is generated by taking pattern and applying a random string to the end. If pattern includes a &quot;*&quot;, the random string replaces the last &quot;*&quot;. TempDir returns the name of the new directory. If dir is the empty string, TempDir uses the default directory for temporary files (see os.TempDir). Multiple programs calling TempDir simultaneously will not choose the same directory. It is the caller's responsibility to remove the directory when no longer needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b913aacfee5a65e416908a68d2ac6cb82c0ef71c" translate="yes" xml:space="preserve">
          <source>TempDir returns a temporary directory for the test to use. The directory is automatically removed by Cleanup when the test and all its subtests complete. Each subsequent call to t.TempDir returns a unique directory; if the directory creation fails, TempDir terminates the test by calling Fatal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="275584eb4c05e91a05657287b9e5e68b19aedf60" translate="yes" xml:space="preserve">
          <source>TempDir returns the default directory to use for temporary files.</source>
          <target state="translated">TempDir 返回用于临时文件的默认目录。</target>
        </trans-unit>
        <trans-unit id="d7cc1fbb5a71addb97fa8de33ce419d1f28b35a1" translate="yes" xml:space="preserve">
          <source>TempFile</source>
          <target state="translated">TempFile</target>
        </trans-unit>
        <trans-unit id="ba14fe997bc74680fd4532ceead516a44881c27a" translate="yes" xml:space="preserve">
          <source>TempFile (Suffix)</source>
          <target state="translated">临时文件(后缀)</target>
        </trans-unit>
        <trans-unit id="db71768a24bbe351f05252c3b917cc624a9ef1b3" translate="yes" xml:space="preserve">
          <source>TempFile creates a new temporary file in the directory dir, opens the file for reading and writing, and returns the resulting *os.File. The filename is generated by taking pattern and adding a random string to the end. If pattern includes a &quot;*&quot;, the random string replaces the last &quot;*&quot;. If dir is the empty string, TempFile uses the default directory for temporary files (see os.TempDir). Multiple programs calling TempFile simultaneously will not choose the same file. The caller can use f.Name() to find the pathname of the file. It is the caller's responsibility to remove the file when no longer needed.</source>
          <target state="translated">TempFile在目录dir中创建一个新的临时文件,打开该文件进行读写,并返回生成的*os.File。文件名是通过取pattern并在最后添加一个随机字符串来生成的。如果pattern中包含 &quot;*&quot;,则随机字符串替换最后的 &quot;*&quot;。如果 dir 是空字符串,TempFile 会使用默认的临时文件目录 (参见 os.TempDir)。多个程序同时调用 TempFile 将不会选择同一个文件。调用者可以使用 f.Name()来查找文件的路径名。当不再需要该文件时,调用者有责任删除该文件。</target>
        </trans-unit>
        <trans-unit id="3ec1ae061c27325c7ecb543adf91235e22cbc9ed" translate="yes" xml:space="preserve">
          <source>Template</source>
          <target state="translated">Template</target>
        </trans-unit>
        <trans-unit id="52ee9ac00f43714b0b4818dd84d35b8b6557c7c3" translate="yes" xml:space="preserve">
          <source>Template (Block)</source>
          <target state="translated">模板(块)</target>
        </trans-unit>
        <trans-unit id="74122feafa7458ac08ce0eb420614965c6703346" translate="yes" xml:space="preserve">
          <source>Template (Func)</source>
          <target state="translated">模板(FUNC)</target>
        </trans-unit>
        <trans-unit id="2682dd16a44a1aa85841c66918e903265b4a3cd6" translate="yes" xml:space="preserve">
          <source>Template (Glob)</source>
          <target state="translated">模板(Glob)</target>
        </trans-unit>
        <trans-unit id="b329235171f350105da0e424a6e94302aadf509f" translate="yes" xml:space="preserve">
          <source>Template (Helpers)</source>
          <target state="translated">模板(助手)</target>
        </trans-unit>
        <trans-unit id="f6c8b5d715e6b1e91ba606c90a46ade44fbfcfc3" translate="yes" xml:space="preserve">
          <source>Template (Parsefiles)</source>
          <target state="translated">模板 (Parsefiles)</target>
        </trans-unit>
        <trans-unit id="57600593178e53d1b30c9ce35cfc8c0a348f3a2c" translate="yes" xml:space="preserve">
          <source>Template (Share)</source>
          <target state="translated">模板 (分享)</target>
        </trans-unit>
        <trans-unit id="85b91409ae0c75ad6a8c43a15d791cc0c6067ae4" translate="yes" xml:space="preserve">
          <source>Template is a specialized Template from &quot;text/template&quot; that produces a safe HTML document fragment.</source>
          <target state="translated">Template是 &quot;text/template &quot;中的一个专门的Template,它可以生成一个安全的HTML文档片段。</target>
        </trans-unit>
        <trans-unit id="d8a89275d0782e6367eafd96ad18e35d72254fb0" translate="yes" xml:space="preserve">
          <source>Template is the representation of a parsed template. The *parse.Tree field is exported only for use by html/template and should be treated as unexported by all other clients.</source>
          <target state="translated">Template 是已解析模板的表示。*parse.Tree字段仅导出供html/template使用,其他所有客户端应视为未导出。</target>
        </trans-unit>
        <trans-unit id="19cafd4f58542bc1848a2bc09f68f32df89aaeb6" translate="yes" xml:space="preserve">
          <source>Template.Delims</source>
          <target state="translated">Template.Delims</target>
        </trans-unit>
        <trans-unit id="a8aa430f1c13b8e8ba33d56534b8f8c54974c35f" translate="yes" xml:space="preserve">
          <source>TemplateNode represents a {{template}} action.</source>
          <target state="translated">TemplateNode代表一个{{模板}}动作。</target>
        </trans-unit>
        <trans-unit id="6272b08c56a555c9301dfcc377b8ee08eca7de29" translate="yes" xml:space="preserve">
          <source>Templates are executed by applying them to a data structure. Annotations in the template refer to elements of the data structure (typically a field of a struct or a key in a map) to control execution and derive values to be displayed. Execution of the template walks the structure and sets the cursor, represented by a period '.' and called &quot;dot&quot;, to the value at the current location in the structure as execution proceeds.</source>
          <target state="translated">通过将模板应用到数据结构中来执行模板。模板中的注解指的是数据结构中的元素(通常是结构中的一个字段或地图中的一个键),以控制执行并得出要显示的值。模板的执行是在结构中行走,并在执行过程中将光标(用句号'.'表示,称为 &quot;点&quot;)设置为结构中当前位置的值。</target>
        </trans-unit>
        <trans-unit id="d659d268d0b2876b00930d9cefac00e94082414d" translate="yes" xml:space="preserve">
          <source>Templates can be redefined in successive calls to Parse, before the first use of Execute on t or any associated template. A template definition with a body containing only white space and comments is considered empty and will not replace an existing template's body. This allows using Parse to add new named template definitions without overwriting the main template body.</source>
          <target state="translated">在第一次使用Execute on t或任何相关模板之前,可以在连续调用Parse时重新定义模板。一个模板定义的主体只包含空白和注释,被认为是空的,不会替换现有模板的主体。这允许使用Parse添加新的命名模板定义,而不会覆盖主模板体。</target>
        </trans-unit>
        <trans-unit id="b0dad97eb547b69ff6ae16e7728cdc906f69fe6a" translate="yes" xml:space="preserve">
          <source>Templates can be redefined in successive calls to Parse. A template definition with a body containing only white space and comments is considered empty and will not replace an existing template's body. This allows using Parse to add new named template definitions without overwriting the main template body.</source>
          <target state="translated">模板可以在连续调用Parse时重新定义。一个模板定义的主体只包含空白和注释,被认为是空的,不会替换现有模板的主体。这允许使用Parse添加新的命名模板定义,而不覆盖主模板体。</target>
        </trans-unit>
        <trans-unit id="7b101f8846f53e53dd0074ea44ad4ea7b299215d" translate="yes" xml:space="preserve">
          <source>Templates returns a slice of defined templates associated with t.</source>
          <target state="translated">Templates返回与t相关联的定义模板的片断。</target>
        </trans-unit>
        <trans-unit id="ef678e78b264d52108e80621ab16809ee2f68f32" translate="yes" xml:space="preserve">
          <source>Templates returns a slice of the templates associated with t, including t itself.</source>
          <target state="translated">Templates 返回与 t 相关联的 templates 的片断,包括 t 本身。</target>
        </trans-unit>
        <trans-unit id="63499f131caeb094b508fda158f4d32cdfc15875" translate="yes" xml:space="preserve">
          <source>Temporary reports whether the DNS error is known to be temporary. This is not always known; a DNS lookup may fail due to a temporary error and return a DNSError for which Temporary returns false.</source>
          <target state="translated">Temporary 报告 DNS 错误是否为暂时性错误。这并不总是已知的;DNS查找可能由于临时错误而失败,并返回一个DNSError,而Temporary则返回false。</target>
        </trans-unit>
        <trans-unit id="7b5595c4587e69f7c655fe870d47a5a1d8fb3ed0" translate="yes" xml:space="preserve">
          <source>TestFS tests a file system implementation. It walks the entire tree of files in fsys, opening and checking that each file behaves correctly. It also checks that the file system contains at least the expected files. As a special case, if no expected files are listed, fsys must be empty. Otherwise, fsys must only contain at least the listed files: it can also contain others. The contents of fsys must not change concurrently with TestFS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e43bc342b1548a3e29005560336fc30b65a42bd" translate="yes" xml:space="preserve">
          <source>TestReader tests that reading from r returns the expected file content. It does reads of different sizes, until EOF. If r implements io.ReaderAt or io.Seeker, TestReader also checks that those operations behave as they should.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="102ab778dfcf2daa890ddca81b62a6c8c57e866c" translate="yes" xml:space="preserve">
          <source>Tests or benchmarks may be skipped at run time with a call to the Skip method of *T or *B:</source>
          <target state="translated">在运行时可以通过调用*T或*B的Skip方法来跳过测试或基准。</target>
        </trans-unit>
        <trans-unit id="4fb2cdb8c84498e97b67876bcf9179f6c6a0681c" translate="yes" xml:space="preserve">
          <source>Text and spaces</source>
          <target state="translated">文本和空格</target>
        </trans-unit>
        <trans-unit id="7c3578369bc9761a19920ddfd71d5074fb77328e" translate="yes" xml:space="preserve">
          <source>Text converts the floating-point number x to a string according to the given format and precision prec. The format is one of:</source>
          <target state="translated">Text根据给定的格式和精度prec将浮点数x转换为字符串。格式为:</target>
        </trans-unit>
        <trans-unit id="9714bb7b9d9dc65203e2f28091e607a38d20869a" translate="yes" xml:space="preserve">
          <source>Text in the format string that is not recognized as part of the reference time is echoed verbatim during Format and expected to appear verbatim in the input to Parse.</source>
          <target state="translated">在格式化过程中,格式字符串中未被识别为参考时间一部分的文本会被逐字呼应,并希望在输入到Parse的过程中逐字出现。</target>
        </trans-unit>
        <trans-unit id="2a87e174a24b19b122c0ab179b85b925e794409f" translate="yes" xml:space="preserve">
          <source>Text returns the most recent token generated by a call to Scan as a newly allocated string holding its bytes.</source>
          <target state="translated">Text返回最近一次调用Scan产生的标记,作为一个新分配的字符串,持有它的字节。</target>
        </trans-unit>
        <trans-unit id="9757ee25c7224af6e75db771ea323fc05ac31e21" translate="yes" xml:space="preserve">
          <source>Text returns the string representation of x in the given base. Base must be between 2 and 62, inclusive. The result uses the lower-case letters 'a' to 'z' for digit values 10 to 35, and the upper-case letters 'A' to 'Z' for digit values 36 to 61. No prefix (such as &quot;0x&quot;) is added to the string. If x is a nil pointer it returns &quot;&amp;lt;nil&amp;gt;&quot;.</source>
          <target state="translated">文本返回给定基数中x的字符串表示形式。底数必须在2到62之间（含2和62）。结果将小写字母&amp;ldquo; a&amp;rdquo;至&amp;ldquo; z&amp;rdquo;用于数字值10至35，将大写字母&amp;ldquo; A&amp;rdquo;至&amp;ldquo; Z&amp;rdquo;用于数字值36至61。无前缀（例如&amp;ldquo; 0x&amp;rdquo; ）添加到字符串中。如果x是nil指针，则返回&amp;ldquo; &amp;lt;nil&amp;gt;&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="544da0b6d8a9e887a60db43ce4a26fd95b56a5d4" translate="yes" xml:space="preserve">
          <source>Text returns the text of the comment. Comment markers (//, /*, and */), the first space of a line comment, and leading and trailing empty lines are removed. Comment directives like &quot;//line&quot; and &quot;//go:noinline&quot; are also removed. Multiple empty lines are reduced to one, and trailing space on lines is trimmed. Unless the result is empty, it is newline-terminated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42341adeec7d736d3551b283379c31741e77e4f9" translate="yes" xml:space="preserve">
          <source>Text returns the text of the comment. Comment markers (//, /*, and */), the first space of a line comment, and leading and trailing empty lines are removed. Multiple empty lines are reduced to one, and trailing space on lines is trimmed. Unless the result is empty, it is newline-terminated.</source>
          <target state="translated">Text 返回注释的文本。注释标记(//、**和*/)、行注释的第一个空格以及前导和尾部的空行都会被删除。多个空行将被缩减为一个,行的尾部空间将被修剪。除非结果是空的,否则它是以换行结束的。</target>
        </trans-unit>
        <trans-unit id="02af2db9a5ef05bc960487d876c4df951f9ad592" translate="yes" xml:space="preserve">
          <source>Text types have the charset parameter set to &quot;utf-8&quot; by default.</source>
          <target state="translated">文本类型的字符集参数默认设置为 &quot;utf-8&quot;。</target>
        </trans-unit>
        <trans-unit id="b44c08e7f92ae7b5fe535298ff7558bf9d8a0cab" translate="yes" xml:space="preserve">
          <source>TextMarshaler is the interface implemented by an object that can marshal itself into a textual form.</source>
          <target state="translated">TextMarshaler是由一个对象实现的接口,它可以将自己调集成一个文本形式。</target>
        </trans-unit>
        <trans-unit id="ae8b7afc36cfb51ffddc286e90577602c85186e4" translate="yes" xml:space="preserve">
          <source>TextNode holds plain text.</source>
          <target state="translated">TextNode存放纯文本。</target>
        </trans-unit>
        <trans-unit id="48668880c8086b3c4c912b1de227b18b3d9a93e1" translate="yes" xml:space="preserve">
          <source>TextUnmarshaler is the interface implemented by an object that can unmarshal a textual representation of itself.</source>
          <target state="translated">TextUnmarshaler是由一个对象实现的接口,它可以对自己的文本表示进行解扰。</target>
        </trans-unit>
        <trans-unit id="33b69b32d53f67278f1556c03b99ca73467e15b3" translate="yes" xml:space="preserve">
          <source>That is, when matching against text, the regexp returns a match that begins as early as possible in the input (leftmost), and among those it chooses a match that is as long as possible. This so-called leftmost-longest matching is the same semantics that early regular expression implementations used and that POSIX specifies.</source>
          <target state="translated">也就是说,当与文本进行匹配时,regexp会返回一个在输入中尽可能早开始的匹配(最左),并在其中选择一个尽可能长的匹配。这种所谓的最左-最长匹配与早期正则表达式实现所使用的语义相同,也是POSIX所规定的。</target>
        </trans-unit>
        <trans-unit id="1fe9add248f3617655fdc8371d42751cba2e4007" translate="yes" xml:space="preserve">
          <source>The &quot;omitempty&quot; option specifies that the field should be omitted from the encoding if the field has an empty value, defined as false, 0, a nil pointer, a nil interface value, and any empty array, slice, map, or string.</source>
          <target state="translated">omitempty &quot;选项指定,如果字段的值为空,则应从编码中省略,定义为false、0、nil指针、nil接口值,以及任何空数组、片、映射或字符串。</target>
        </trans-unit>
        <trans-unit id="71d19b0f94317203bba62dcd8f10cd68c650f96b" translate="yes" xml:space="preserve">
          <source>The &quot;string&quot; option signals that a field is stored as JSON inside a JSON-encoded string. It applies only to fields of string, floating point, integer, or boolean types. This extra level of encoding is sometimes used when communicating with JavaScript programs:</source>
          <target state="translated">&quot;string &quot;选项标志着一个字段以JSON的形式存储在一个JSON编码的字符串中,它只适用于字符串、浮点、整数或布尔类型的字段。它只适用于字符串、浮点、整数或布尔类型的字段。这种额外的编码级别有时在与JavaScript程序通信时使用。</target>
        </trans-unit>
        <trans-unit id="d1ee29ca2c06802f34981d89493c0bb6f1d6d312" translate="yes" xml:space="preserve">
          <source>The %!s just shows the print verb in use when the failure occurred. If the panic is caused by a nil receiver to an Error or String method, however, the output is the undecorated string, &quot;&amp;lt;nil&amp;gt;&quot;.</source>
          <target state="translated">％！s仅显示发生故障时正在使用的打印动词。但是，如果恐慌是由nil接收者导致Error或String方法引起的，则输出为未经修饰的字符串&amp;ldquo; &amp;lt;nil&amp;gt;&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="743e4c8e9a91e391bfa222546fd5a23a69c683b9" translate="yes" xml:space="preserve">
          <source>The *Basic type for Typ[Byte] will have the name &quot;uint8&quot;. Use Universe.Lookup(&quot;byte&quot;).Type() to obtain the specific alias basic type named &quot;byte&quot; (and analogous for &quot;rune&quot;).</source>
          <target state="translated">Typ[Byte]的*基本类型会有 &quot;uint8 &quot;的名称。使用Universe.Lookup(&quot;byte&quot;).Type()来获取名为 &quot;byte &quot;的特定别名基本类型(类似于 &quot;rune&quot;)。</target>
        </trans-unit>
        <trans-unit id="091326b161ce75ad991e494527918578bfa9a062" translate="yes" xml:space="preserve">
          <source>The //go:embed directive accepts multiple space-separated patterns for brevity, but it can also be repeated, to avoid very long lines when there are many patterns. The patterns are interpreted relative to the package directory containing the source file. The path separator is a forward slash, even on Windows systems. Patterns may not contain &amp;lsquo;.&amp;rsquo; or &amp;lsquo;..&amp;rsquo; or empty path elements, nor may they begin or end with a slash. To match everything in the current directory, use &amp;lsquo;*&amp;rsquo; instead of &amp;lsquo;.&amp;rsquo;. To allow for naming files with spaces in their names, patterns can be written as Go double-quoted or back-quoted string literals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7357eb6991ca9109d884f02735e2f6ebb84c05dd" translate="yes" xml:space="preserve">
          <source>The //go:embed directive can be used with both exported and unexported variables, depending on whether the package wants to make the data available to other packages. It can only be used with global variables at package scope, not with local variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="065a2eb0c8a1fc2e4da5a5d35829a4e71f365312" translate="yes" xml:space="preserve">
          <source>The //go:embed directive requires importing &quot;embed&quot;, even when using a string or []byte. In source files that don't refer to embed.FS, use a blank import (import _ &quot;embed&quot;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b48d2fd32986c470905fdc8a6c05c918bb04d66e" translate="yes" xml:space="preserve">
          <source>The //go:embed line for a variable of type string or []byte can have only a single pattern, and that pattern can match only a single file. The string or []byte is initialized with the contents of that file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="850dd1df743a69c63fe9886362ac383beaaa22a7" translate="yes" xml:space="preserve">
          <source>The AES block size in bytes.</source>
          <target state="translated">AES块的大小,以字节为单位。</target>
        </trans-unit>
        <trans-unit id="5673ab8326600fbbe495a6285dd8ced305ce9de8" translate="yes" xml:space="preserve">
          <source>The AES operations in this package are not implemented using constant-time algorithms. An exception is when running on systems with enabled hardware support for AES that makes these operations constant-time. Examples include amd64 systems using AES-NI extensions and s390x systems using Message-Security-Assist extensions. On such systems, when the result of NewCipher is passed to cipher.NewGCM, the GHASH operation used by GCM is also constant-time.</source>
          <target state="translated">这个软件包中的AES操作并不是使用恒定时间算法来实现的。一个例外的情况是,当运行在启用了AES硬件支持的系统上,使这些操作成为恒时的。例如使用AES-NI扩展的amd64系统和使用Message-Security-Assist扩展的s390x系统。在这样的系统上,当NewCipher的结果传递给cipher.NewGCM时,GCM使用的GHASH操作也是恒时的。</target>
        </trans-unit>
        <trans-unit id="6adb0b7099e3661b5d507077f904503946e1529a" translate="yes" xml:space="preserve">
          <source>The AuthorityKeyId will be taken from the SubjectKeyId of parent, if any, unless the resulting certificate is self-signed. Otherwise the value from template will be used.</source>
          <target state="translated">AuthorityKeyId将取自父代的SubjectKeyId(如果有的话),除非产生的证书是自签的。否则将使用模板中的值。</target>
        </trans-unit>
        <trans-unit id="ef02c253bf1371acc1a3bc5ebf403abe9da8e69d" translate="yes" xml:space="preserve">
          <source>The CPU profile is not available as a Profile. It has a special API, the StartCPUProfile and StopCPUProfile functions, because it streams output to a writer during profiling.</source>
          <target state="translated">CPU配置文件不能作为Profile使用。它有一个特殊的API,即StartCPUProfile和StopCPUProfile函数,因为它在剖析过程中会将输出流转到一个写入器。</target>
        </trans-unit>
        <trans-unit id="7bedc851c290436a17de2ea56c0e80eced3a4ba0" translate="yes" xml:space="preserve">
          <source>The CRL is signed by priv which should be the private key associated with the public key in the issuer certificate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ff86b138d4478667bb91009d716fd7665b76152" translate="yes" xml:space="preserve">
          <source>The CSPRNG key is indifferentiable from a random oracle as shown in [Coron], the AES-CTR stream is indifferentiable from a random oracle under standard cryptographic assumptions (see [Larsson] for examples).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36bb730fcee3dc3ab8099094b237b4e5ff536824" translate="yes" xml:space="preserve">
          <source>The Call method waits for the remote call to complete while the Go method launches the call asynchronously and signals completion using the Call structure's Done channel.</source>
          <target state="translated">Call方法等待远程调用完成,而Go方法异步启动调用,并使用Call结构的Done通道发出完成信号。</target>
        </trans-unit>
        <trans-unit id="fa9c5434f905167654701708a6911e94eaa76597" translate="yes" xml:space="preserve">
          <source>The Client and Transport return Responses from servers once the response headers have been received. The response body is streamed on demand as the Body field is read.</source>
          <target state="translated">一旦收到响应头,客户端和传输就会从服务器返回响应。读取Body字段时,响应主体会按要求进行流式传输。</target>
        </trans-unit>
        <trans-unit id="a06861d55f6598b58fca7ecb30c8e99763835023" translate="yes" xml:space="preserve">
          <source>The Client's Transport typically has internal state (cached TCP connections), so Clients should be reused instead of created as needed. Clients are safe for concurrent use by multiple goroutines.</source>
          <target state="translated">Client的Transport通常具有内部状态(缓存的TCP连接),所以应该在需要时重复使用而不是创建Client。客户端对于多个goroutine的并发使用是安全的。</target>
        </trans-unit>
        <trans-unit id="ceca2d7732940705f6d00b5d32a4fb0ac5b5ffee" translate="yes" xml:space="preserve">
          <source>The CloseNotifier interface is implemented by ResponseWriters which allow detecting when the underlying connection has gone away.</source>
          <target state="translated">CloseNotifier接口是由ResponseWriters实现的,它允许检测底层连接何时消失。</target>
        </trans-unit>
        <trans-unit id="e611d14841eea36df4afcbef6632f0e94c16f389" translate="yes" xml:space="preserve">
          <source>The Comments list contains all comments in the source file in order of appearance, including the comments that are pointed to from other nodes via Doc and Comment fields.</source>
          <target state="translated">评论列表包含了源文件中的所有评论,按出现的顺序排列,包括通过Doc和Comment字段从其他节点指向的评论。</target>
        </trans-unit>
        <trans-unit id="7243291c556ac8dd62df98afdad8c3760dcef423" translate="yes" xml:space="preserve">
          <source>The Content-Type header is set to application/x-www-form-urlencoded. To set other headers, use NewRequest and Client.Do.</source>
          <target state="translated">Content-Type头被设置为application/x-www-form-urlencoded。要设置其他头,使用NewRequest和Client.Do。</target>
        </trans-unit>
        <trans-unit id="4c8514b948c44917ccd4528524ea490c8df7afe9" translate="yes" xml:space="preserve">
          <source>The Content-Type header is set to application/x-www-form-urlencoded. To set other headers, use NewRequest and DefaultClient.Do.</source>
          <target state="translated">Content-Type头被设置为application/x-www-form-urlencoded。要设置其他头,使用NewRequest和DefaultClient.Do。</target>
        </trans-unit>
        <trans-unit id="e64fbf6aec6e290cb2a86c841a198b35f0414494" translate="yes" xml:space="preserve">
          <source>The Context field will be zero to gather a traceback from the current program execution point. In this case, the traceback function will be called from C code.</source>
          <target state="translated">Context字段将为零,以收集当前程序执行点的回溯。在这种情况下,回溯函数将从C代码中调用。</target>
        </trans-unit>
        <trans-unit id="0d4ab0b54e24df8d963181a5b8f48a80c3f0be3b" translate="yes" xml:space="preserve">
          <source>The Copy function uses ReaderFrom if available.</source>
          <target state="translated">复制功能使用ReaderFrom(如果有)。</target>
        </trans-unit>
        <trans-unit id="64b7a752d1105251970c527872a99e908894fe83" translate="yes" xml:space="preserve">
          <source>The Copy function uses WriterTo if available.</source>
          <target state="translated">如果有的话,复制函数使用WriterTo。</target>
        </trans-unit>
        <trans-unit id="4068b76cb1fd1e06d5771c04e2c02b7fd65472c1" translate="yes" xml:space="preserve">
          <source>The DES block size in bytes.</source>
          <target state="translated">DES块大小,单位为字节。</target>
        </trans-unit>
        <trans-unit id="1b8c2351859f5d138662581cb4874dd621eef345" translate="yes" xml:space="preserve">
          <source>The DSA operations in this package are not implemented using constant-time algorithms.</source>
          <target state="translated">本包中的DSA操作没有使用恒时算法来实现。</target>
        </trans-unit>
        <trans-unit id="3d5a6f0be8af4ae349714dde142378b2b0dd32c1" translate="yes" xml:space="preserve">
          <source>The Data fields contains object-specific data:</source>
          <target state="translated">数据字段包含特定对象的数据。</target>
        </trans-unit>
        <trans-unit id="d70280d8e959481aa07b78bca8cd9c9158da0c1f" translate="yes" xml:space="preserve">
          <source>The Decoder does only basic sanity checking on decoded input sizes, and its limits are not configurable. Take caution when decoding gob data from untrusted sources.</source>
          <target state="translated">解码器只对解码后的输入大小进行基本的理智性检查,其限制是不可配置的。在对来自不受信任的来源的gob数据进行解码时,请小心谨慎。</target>
        </trans-unit>
        <trans-unit id="1a3dcfbdb85a6eb02179c9d5c4dd5b3efbbb6016" translate="yes" xml:space="preserve">
          <source>The Dial function connects to a server:</source>
          <target state="translated">拨号功能连接到服务器。</target>
        </trans-unit>
        <trans-unit id="e5af1dd969514f431da9aefdd41666a5f815fd72" translate="yes" xml:space="preserve">
          <source>The Error interface identifies a run time error.</source>
          <target state="translated">错误接口识别运行时的错误。</target>
        </trans-unit>
        <trans-unit id="8e437b0bdb4841542eba2f049276dee573f887b3" translate="yes" xml:space="preserve">
          <source>The Errorf function lets us use formatting features to create descriptive error messages.</source>
          <target state="translated">Errorf功能让我们可以使用格式化功能来创建描述性的错误信息。</target>
        </trans-unit>
        <trans-unit id="4cc7e273196b60c7b327e2a1e7c92da50e59b611" translate="yes" xml:space="preserve">
          <source>The Examples section of the documentation includes an illustration of how to use MakeFunc to build a swap function for different types.</source>
          <target state="translated">文档中的示例部分包含了如何使用MakeFunc为不同类型构建交换函数的说明。</target>
        </trans-unit>
        <trans-unit id="b810f0952b2b914f1f6cf5d2f5bc4fc4e059ce92" translate="yes" xml:space="preserve">
          <source>The FS interface is the minimum implementation required of the file system. A file system may implement additional interfaces, such as ReadFileFS, to provide additional or optimized functionality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4103d71ff7738d060819734b8440840f86eb6a7" translate="yes" xml:space="preserve">
          <source>The Flusher interface is implemented by ResponseWriters that allow an HTTP handler to flush buffered data to the client.</source>
          <target state="translated">Flusher接口是由ResponseWriters实现的,它允许HTTP处理程序将缓冲数据刷新到客户端。</target>
        </trans-unit>
        <trans-unit id="8989cf7d3fb3d7f0d686b9d17d09faeb78214543" translate="yes" xml:space="preserve">
          <source>The GIF specification is at &lt;a href=&quot;https://www.w3.org/Graphics/GIF/spec-gif89a.txt&quot;&gt;https://www.w3.org/Graphics/GIF/spec-gif89a.txt&lt;/a&gt;.</source>
          <target state="translated">GIF规范位于&lt;a href=&quot;https://www.w3.org/Graphics/GIF/spec-gif89a.txt&quot;&gt;https://www.w3.org/Graphics/GIF/spec-gif89a.txt&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="413f2e2abeee0cebf1b4d1ac0f711038cf2ef825" translate="yes" xml:space="preserve">
          <source>The GOARCH, GOOS, GOPATH, and GOROOT environment variables complete the set of Go environment variables. They influence the building of Go programs (see &lt;a href=&quot;https://golang.org/cmd/go&quot;&gt;https://golang.org/cmd/go&lt;/a&gt; and &lt;a href=&quot;../go/build/index&quot;&gt;https://golang.org/pkg/go/build&lt;/a&gt;). GOARCH, GOOS, and GOROOT are recorded at compile time and made available by constants or functions in this package, but they do not influence the execution of the run-time system.</source>
          <target state="translated">GOARCH，GOOS，GOPATH和GOROOT环境变量完善了Go环境变量集。它们会影响Go程序的构建（请参阅&lt;a href=&quot;https://golang.org/cmd/go&quot;&gt;https://golang.org/cmd/go&lt;/a&gt;和&lt;a href=&quot;../go/build/index&quot;&gt;https://golang.org/pkg/go/build&lt;/a&gt;）。GOARCH，GOOS和GOROOT会在编译时记录下来，并可以通过此包中的常量或函数使用，但它们不会影响运行时系统的执行。</target>
        </trans-unit>
        <trans-unit id="980859c522964a8cbb3109a2a563d54c04b37667" translate="yes" xml:space="preserve">
          <source>The GODEBUG variable controls debugging variables within the runtime. It is a comma-separated list of name=val pairs setting these named variables:</source>
          <target state="translated">GODEBUG变量控制运行时内的调试变量。它是一个由name=val对组成的逗号分隔的列表,用于设置这些命名的变量。</target>
        </trans-unit>
        <trans-unit id="854b96235a6d258614ac621d5a074c350962980a" translate="yes" xml:space="preserve">
          <source>The GODEBUG variables are not covered by Go's API compatibility promise. Please report any issues before disabling HTTP/2 support: &lt;a href=&quot;https://golang.org/s/http2bug&quot;&gt;https://golang.org/s/http2bug&lt;/a&gt;</source>
          <target state="translated">Go的API兼容性保证不涵盖GODEBUG变量。请先报告所有问题，然后再禁用HTTP / 2支持：&lt;a href=&quot;https://golang.org/s/http2bug&quot;&gt;https&lt;/a&gt;：//golang.org/s/http2bug</target>
        </trans-unit>
        <trans-unit id="07350ebc65d6866cf7470b34fa919f4c89a12e5a" translate="yes" xml:space="preserve">
          <source>The GOGC variable sets the initial garbage collection target percentage. A collection is triggered when the ratio of freshly allocated data to live data remaining after the previous collection reaches this percentage. The default is GOGC=100. Setting GOGC=off disables the garbage collector entirely. The runtime/debug package's SetGCPercent function allows changing this percentage at run time. See &lt;a href=&quot;debug/index#SetGCPercent&quot;&gt;https://golang.org/pkg/runtime/debug/#SetGCPercent&lt;/a&gt;.</source>
          <target state="translated">GOGC变量设置初始垃圾回收目标百分比。当新分配的数据与上一个收集后剩余的实时数据之比达到此百分比时，将触发收集。默认值为GOGC = 100。设置GOGC = off将完全禁用垃圾收集器。运行时/调试包的SetGCPercent函数允许在运行时更改此百分比。参见&lt;a href=&quot;debug/index#SetGCPercent&quot;&gt;https://golang.org/pkg/runtime/debug/#SetGCPercent&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="23644add17b2d4ea82387647518fec703dd62cda" translate="yes" xml:space="preserve">
          <source>The GOMAXPROCS variable limits the number of operating system threads that can execute user-level Go code simultaneously. There is no limit to the number of threads that can be blocked in system calls on behalf of Go code; those do not count against the GOMAXPROCS limit. This package's GOMAXPROCS function queries and changes the limit.</source>
          <target state="translated">GOMAXPROCS变量限制了可以同时执行用户级围棋代码的操作系统线程数量。对于在系统调用中代表围棋代码被阻塞的线程数量没有限制,这些线程不计入GOMAXPROCS限制。本包的GOMAXPROCS函数可以查询并更改该限制。</target>
        </trans-unit>
        <trans-unit id="2dc1829c430b9fe1fcd42a5d7af5182478e7df72" translate="yes" xml:space="preserve">
          <source>The GORACE variable configures the race detector, for programs built using -race. See &lt;a href=&quot;https://golang.org/doc/articles/race_detector.html&quot;&gt;https://golang.org/doc/articles/race_detector.html&lt;/a&gt; for details.</source>
          <target state="translated">GORACE变量为使用-race构建的程序配置了竞争检测器。有关详细信息，请参见&lt;a href=&quot;https://golang.org/doc/articles/race_detector.html&quot;&gt;https://golang.org/doc/articles/race_detector.html&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="895a2c86582e638542cc835d086a523cf9768898" translate="yes" xml:space="preserve">
          <source>The GOTRACEBACK variable controls the amount of output generated when a Go program fails due to an unrecovered panic or an unexpected runtime condition. By default, a failure prints a stack trace for the current goroutine, eliding functions internal to the run-time system, and then exits with exit code 2. The failure prints stack traces for all goroutines if there is no current goroutine or the failure is internal to the run-time. GOTRACEBACK=none omits the goroutine stack traces entirely. GOTRACEBACK=single (the default) behaves as described above. GOTRACEBACK=all adds stack traces for all user-created goroutines. GOTRACEBACK=system is like &amp;ldquo;all&amp;rdquo; but adds stack frames for run-time functions and shows goroutines created internally by the run-time. GOTRACEBACK=crash is like &amp;ldquo;system&amp;rdquo; but crashes in an operating system-specific manner instead of exiting. For example, on Unix systems, the crash raises SIGABRT to trigger a core dump. For historical reasons, the GOTRACEBACK settings 0, 1, and 2 are synonyms for none, all, and system, respectively. The runtime/debug package's SetTraceback function allows increasing the amount of output at run time, but it cannot reduce the amount below that specified by the environment variable. See &lt;a href=&quot;debug/index#SetTraceback&quot;&gt;https://golang.org/pkg/runtime/debug/#SetTraceback&lt;/a&gt;.</source>
          <target state="translated">GOTRACEBACK变量控制在Go程序由于未恢复的紧急情况或意外的运行时条件而失败时生成的输出量。默认情况下，故障将打印当前goroutine的堆栈跟踪，清除运行时系统内部的函数，然后以退出代码2退出。如果没有当前goroutine或故障是失败，则故障将打印所有goroutine的堆栈跟踪。在运行时内部。 GOTRACEBACK = none完全省略goroutine堆栈跟踪。 GOTRACEBACK = single（默认）的行为如上所述。 GOTRACEBACK = all为所有用户创建的goroutine添加堆栈跟踪。 GOTRACEBACK = system类似于&amp;ldquo; all&amp;rdquo;，但为运行时功能添加了堆栈框架，并显示了运行时在内部创建的goroutine。GOTRACEBACK = crash类似于&amp;ldquo; system&amp;rdquo;，但是以特定于操作系统的方式崩溃而不是退出。例如，在Unix系统上，崩溃导致SIGABRT触发核心转储。由于历史原因，GOTRACEBACK设置0、1和2分别是none，all和system的同义词。运行时/调试包的SetTraceback函数允许在运行时增加输出量，但不能将其减少到环境变量指定的量以下。看到但是它不能将数量减少到环境变量指定的数量以下。看到但是它不能将数量减少到环境变量指定的数量以下。看到&lt;a href=&quot;debug/index#SetTraceback&quot;&gt;https://golang.org/pkg/runtime/debug/#SetTraceback&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="201ea9b13c6c1b11811e547f191be7e93f488ebd" translate="yes" xml:space="preserve">
          <source>The Go 1 compatibility guidelines make it impossible for us to change the behavior of these methods; use Read or ReadMsgIP instead.</source>
          <target state="translated">Go 1的兼容性准则使我们无法改变这些方法的行为;请使用Read或ReadMsgIP代替。</target>
        </trans-unit>
        <trans-unit id="75b1fb4f30d1ce191ea16d73a47dc69ce4dd6484" translate="yes" xml:space="preserve">
          <source>The Go build system will recognize the directives and arrange for the declared variable (in the example above, content) to be populated with the matching files from the file system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbb7c186e3ae50bd364f0be3171da7e4e4fa74f9" translate="yes" xml:space="preserve">
          <source>The Go function fn is called with the value of JavaScript's &quot;this&quot; keyword and the arguments of the invocation. The return value of the invocation is the result of the Go function mapped back to JavaScript according to ValueOf.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7566eb3c6d36d40991cd457887383d73c8d32f6" translate="yes" xml:space="preserve">
          <source>The Go path is a list of directory trees containing Go source code. It is consulted to resolve imports that cannot be found in the standard Go tree. The default path is the value of the GOPATH environment variable, interpreted as a path list appropriate to the operating system (on Unix, the variable is a colon-separated string; on Windows, a semicolon-separated string; on Plan 9, a list).</source>
          <target state="translated">Go路径是包含Go源代码的目录树列表。它被用来解决在标准Go树中找不到的导入。默认路径是GOPATH环境变量的值,解释为适合操作系统的路径列表(在Unix上,该变量是一个以冒号分隔的字符串;在Windows上,是一个以分号分隔的字符串;在Plan 9上,是一个列表)。</target>
        </trans-unit>
        <trans-unit id="b3cf2d68365e20d0973a301087cdd0150f378764" translate="yes" xml:space="preserve">
          <source>The Go visibility rules for struct fields are amended for JSON when deciding which field to marshal or unmarshal. If there are multiple fields at the same level, and that level is the least nested (and would therefore be the nesting level selected by the usual Go rules), the following extra rules apply:</source>
          <target state="translated">在决定对哪个字段进行整合或取消整合时,对JSON结构字段的围棋可见性规则进行了修正。如果同一层次有多个字段,而且该层次是最小的嵌套层次(因此是通常的Go规则所选择的嵌套层次),则适用以下额外规则。</target>
        </trans-unit>
        <trans-unit id="0fd6453ed937237b824b9a18906363db4d73b2a6" translate="yes" xml:space="preserve">
          <source>The HandlerFunc type is an adapter to allow the use of ordinary functions as HTTP handlers. If f is a function with the appropriate signature, HandlerFunc(f) is a Handler that calls f.</source>
          <target state="translated">HandlerFunc类型是一个适配器,允许使用普通函数作为HTTP处理程序。如果f是一个具有适当签名的函数,HandlerFunc(f)就是一个调用f的处理程序。</target>
        </trans-unit>
        <trans-unit id="dcde06a75814cbd2f82c57451a15f7098bfdc1f6" translate="yes" xml:space="preserve">
          <source>The Hijacker interface is implemented by ResponseWriters that allow an HTTP handler to take over the connection.</source>
          <target state="translated">Hijacker接口是由ResponseWriters实现的,它允许一个HTTP处理程序来接管连接。</target>
        </trans-unit>
        <trans-unit id="3370b385b8e5dd84393ea8ba4a384825a13db61b" translate="yes" xml:space="preserve">
          <source>The Interface type describes the requirements for a type using the routines in this package. Any type that implements it may be used as a min-heap with the following invariants (established after Init has been called or if the data is empty or sorted):</source>
          <target state="translated">接口类型描述了使用本包中的例程对类型的要求。任何实现它的类型都可以作为迷你堆使用,其不变性如下(在Init被调用后或数据为空或排序后建立)。</target>
        </trans-unit>
        <trans-unit id="0aee04eced9ac7c3fac2de601ac7413fde3bf654" translate="yes" xml:space="preserve">
          <source>The JSON null value unmarshals into an interface, map, pointer, or slice by setting that Go value to nil. Because null is often used in JSON to mean &amp;ldquo;not present,&amp;rdquo; unmarshaling a JSON null into any other Go type has no effect on the value and produces no error.</source>
          <target state="translated">通过将该Go值设置为nil，JSON空值可解组到接口，映射，指针或切片中。由于在JSON中通常使用null来表示&amp;ldquo;不存在&amp;rdquo;，因此将JSON null解组到任何其他Go类型中不会影响该值，并且不会产生任何错误。</target>
        </trans-unit>
        <trans-unit id="22f4320ee94c207b6f6c1bf76ec0cc99a4e78e12" translate="yes" xml:space="preserve">
          <source>The Listen function creates servers:</source>
          <target state="translated">Listen功能可以创建服务器。</target>
        </trans-unit>
        <trans-unit id="f1e8051445ee7295f2015e153c91e6e9f468a7b9" translate="yes" xml:space="preserve">
          <source>The Map type is optimized for two common use cases: (1) when the entry for a given key is only ever written once but read many times, as in caches that only grow, or (2) when multiple goroutines read, write, and overwrite entries for disjoint sets of keys. In these two cases, use of a Map may significantly reduce lock contention compared to a Go map paired with a separate Mutex or RWMutex.</source>
          <target state="translated">Map类型针对两种常见的用例进行了优化。(1)当一个给定的键的条目只被写入一次,但却被多次读取,如在只会增长的缓存中,或(2)当多个goroutine读取、写入和覆盖不相干的键集的条目时。在这两种情况下,与Go地图与单独的Mutex或RWMutex搭配使用相比,使用Map可能会显著减少锁的争用。</target>
        </trans-unit>
        <trans-unit id="93c1aea237df8273d73d6b2b1db4e7c127b7fdb2" translate="yes" xml:space="preserve">
          <source>The Map type is specialized. Most code should use a plain Go map instead, with separate locking or coordination, for better type safety and to make it easier to maintain other invariants along with the map content.</source>
          <target state="translated">Map类型是专门的。大多数代码应该使用普通的围棋地图来代替,并有单独的锁定或协调,以便更好地保证类型的安全性,并使其更容易与地图内容一起维护其他不变式。</target>
        </trans-unit>
        <trans-unit id="0006e6725a631489c9423aa1f192586acc3a14d6" translate="yes" xml:space="preserve">
          <source>The MergeMode flags control the behavior of MergePackageFiles.</source>
          <target state="translated">MergeMode标志控制MergePackageFiles的行为。</target>
        </trans-unit>
        <trans-unit id="46419978a96c95f07df701b47af9ce0c381fb8e5" translate="yes" xml:space="preserve">
          <source>The New function creates errors whose only content is a text message.</source>
          <target state="translated">新建函数创建的错误,其唯一的内容是一个文本消息。</target>
        </trans-unit>
        <trans-unit id="ed989955d8475da0903bbb33a13d3c6797487592" translate="yes" xml:space="preserve">
          <source>The PC field will be a value returned by a call to the traceback function.</source>
          <target state="translated">PC字段将是调用回溯函数所返回的值。</target>
        </trans-unit>
        <trans-unit id="886ce6ce1a2e11f65b175c91749f88d574c43226" translate="yes" xml:space="preserve">
          <source>The PNG specification is at &lt;a href=&quot;https://www.w3.org/TR/PNG/&quot;&gt;https://www.w3.org/TR/PNG/&lt;/a&gt;.</source>
          <target state="translated">PNG规范位于&lt;a href=&quot;https://www.w3.org/TR/PNG/&quot;&gt;https://www.w3.org/TR/PNG/&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c904da70bc4311012997fe9bbd4ccc021eaf72a0" translate="yes" xml:space="preserve">
          <source>The Pos value for a given file is a number in the range [base, base+size], where base and size are specified when a file is added to the file set. The difference between a Pos value and the corresponding file base corresponds to the byte offset of that position (represented by the Pos value) from the beginning of the file. Thus, the file base offset is the Pos value representing the first byte in the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e01da8fcfe6b3b9e18fc8125aed80da656d99c50" translate="yes" xml:space="preserve">
          <source>The Pos value for a given file is a number in the range [base, base+size], where base and size are specified when adding the file to the file set via AddFile.</source>
          <target state="translated">给定文件的Pos值是一个范围为[base,base+size]的数字,其中base和size是在通过AddFile添加文件到文件集时指定的。</target>
        </trans-unit>
        <trans-unit id="24b49c8f6cf4d6923667f2f4ded23d7140a2b9f0" translate="yes" xml:space="preserve">
          <source>The Priority is a combination of the syslog facility and severity. For example, LOG_ALERT | LOG_FTP sends an alert severity message from the FTP facility. The default severity is LOG_EMERG; the default facility is LOG_KERN.</source>
          <target state="translated">优先级是syslog设施和严重性的组合。例如,LOG_ALERT | LOG_FTP从FTP设施中发送警报严重性消息,默认严重性是LOG_EMERG;默认设施是LOG_KERN。默认的严重性是LOG_EMERG;默认的设施是LOG_KERN。</target>
        </trans-unit>
        <trans-unit id="c56c9b0bbe08c95a239dcc95eda30597b6ca619e" translate="yes" xml:space="preserve">
          <source>The Process it returns can be used to obtain information about the underlying operating system process.</source>
          <target state="translated">它返回的进程可以用来获取底层操作系统进程的信息。</target>
        </trans-unit>
        <trans-unit id="10801c2ff1093f1ce7c760ba00803c382474a94e" translate="yes" xml:space="preserve">
          <source>The RSA operations in this package are not implemented using constant-time algorithms.</source>
          <target state="translated">本包中的RSA操作没有使用恒时算法来实现。</target>
        </trans-unit>
        <trans-unit id="e75efacd08116681c05f3907c86c9cdff60db179" translate="yes" xml:space="preserve">
          <source>The ReadCloser returned by NewReader also implements Resetter.</source>
          <target state="translated">NewReader返回的ReadCloser也实现了Resetter。</target>
        </trans-unit>
        <trans-unit id="3bfc20a3944403086f24f5757939a8cbd9b7c5ac" translate="yes" xml:space="preserve">
          <source>The ReadCloser returned by NewReaderDict also implements Resetter.</source>
          <target state="translated">NewReaderDict返回的ReadCloser也实现了Resetter。</target>
        </trans-unit>
        <trans-unit id="c4f8edaea822742e73d1aca6a1265098af5d579e" translate="yes" xml:space="preserve">
          <source>The Reader converts all \r\n sequences in its input to plain \n, including in multiline field values, so that the returned data does not depend on which line-ending convention an input file uses.</source>
          <target state="translated">读取器将其输入中所有的&quot;/r/n &quot;序列转换为纯&quot;/r/n&quot;,包括在多行字段中的值,因此,返回的数据并不取决于输入文件使用的行尾约定。</target>
        </trans-unit>
        <trans-unit id="41c2e3518894534a6a634c57bbad5ea70224c3de" translate="yes" xml:space="preserve">
          <source>The Reader.Header fields will be valid in the Reader returned.</source>
          <target state="translated">Reader.Header字段将在返回的Reader中有效。</target>
        </trans-unit>
        <trans-unit id="9fd8011df0852a1e27b3907bd2a3f82247ef31e5" translate="yes" xml:space="preserve">
          <source>The Request.Proto is always HTTP/1.1.</source>
          <target state="translated">Request.Proto总是HTTP/1.1。</target>
        </trans-unit>
        <trans-unit id="09c4e81d433af7e0ae48c721f621859a4e5a3317" translate="yes" xml:space="preserve">
          <source>The Response Body is closed after it is sent.</source>
          <target state="translated">响应体发送后即关闭。</target>
        </trans-unit>
        <trans-unit id="041fd8da9679545d4de46a3a12d665330f551006" translate="yes" xml:space="preserve">
          <source>The Response.Body is guaranteed to be non-nil and Body.Read call is guaranteed to not return any error other than io.EOF.</source>
          <target state="translated">保证Response.Body是非nil,保证Body.Read调用不返回任何除io.EOF以外的错误。</target>
        </trans-unit>
        <trans-unit id="bc99bfa959e73d9ff72d10e54ecd5ffaa2259252" translate="yes" xml:space="preserve">
          <source>The Response.Header is a snapshot of the headers at the time of the first write call, or at the time of this call, if the handler never did a write.</source>
          <target state="translated">Response.Header是第一次写入调用时的头的快照,如果处理程序从未进行过写入,则在这次调用时。</target>
        </trans-unit>
        <trans-unit id="18a3ebac1f2c2059df0438aac114025f62ecfbf9" translate="yes" xml:space="preserve">
          <source>The Run methods of T and B allow defining subtests and sub-benchmarks, without having to define separate functions for each. This enables uses like table-driven benchmarks and creating hierarchical tests. It also provides a way to share common setup and tear-down code:</source>
          <target state="translated">T和B的Run方法允许定义子测试和子基准,而不必为每个子基准定义单独的函数。这使得像表格驱动的基准和创建分层测试这样的用途成为可能。它还提供了一种共享通用设置和拆卸代码的方法。</target>
        </trans-unit>
        <trans-unit id="2fdffd1148a25e94f2ea65756e345947d69016d2" translate="yes" xml:space="preserve">
          <source>The SendMail function and the net/smtp package are low-level mechanisms and provide no support for DKIM signing, MIME attachments (see the mime/multipart package), or other mail functionality. Higher-level packages exist outside of the standard library.</source>
          <target state="translated">SendMail函数和net/smtp包都是低级机制,不提供对DKIM签名、MIME附件(参见mime/multipart包)或其他邮件功能的支持。更高级别的包存在于标准库之外。</target>
        </trans-unit>
        <trans-unit id="f9a92bd5980ed21b3a625476d07c987591bfa7d7" translate="yes" xml:space="preserve">
          <source>The Spec type stands for any of *ImportSpec, *ValueSpec, and *TypeSpec.</source>
          <target state="translated">Spec类型代表*ImportSpec、*ValueSpec和*TypeSpec中的任何一种。</target>
        </trans-unit>
        <trans-unit id="4919a225e3add39379ff15a9bce358f52cae5ffb" translate="yes" xml:space="preserve">
          <source>The Syscall functions in package syscall pass their uintptr arguments directly to the operating system, which then may, depending on the details of the call, reinterpret some of them as pointers. That is, the system call implementation is implicitly converting certain arguments back from uintptr to pointer.</source>
          <target state="translated">包syscall中的Syscall函数将其uintptr参数直接传递给操作系统,然后根据调用的细节,系统可能会将其中的一些参数重新解释为指针。也就是说,系统调用的实现是隐性的将某些参数从uintptr转换回指针。</target>
        </trans-unit>
        <trans-unit id="3e332fd0096a988b6619d722b0818e386abfd30a" translate="yes" xml:space="preserve">
          <source>The TIFF file format uses a similar but incompatible version of the LZW algorithm. See the golang.org/x/image/tiff/lzw package for an implementation.</source>
          <target state="translated">TIFF文件格式使用了类似的但不兼容的LZW算法版本,请参见golang.org/x/image/tiff/lzw包的实现。参见golang.org/x/image/tiff/lzw包中的实现。</target>
        </trans-unit>
        <trans-unit id="58336a8c0934089954efcd803d6fca80fefa9eb4" translate="yes" xml:space="preserve">
          <source>The TLS field is set to a non-nil dummy value if target has scheme &quot;https&quot;.</source>
          <target state="translated">如果目标的方案为 &quot;https&quot;,则TLS字段会被设置为一个非零的虚值。</target>
        </trans-unit>
        <trans-unit id="0c9be03471b041f93e1251c475d46cfa7c686fa2" translate="yes" xml:space="preserve">
          <source>The Text field contains the comment text without carriage returns (\r) that may have been present in the source. Because a comment's end position is computed using len(Text), the position reported by End() does not match the true source end position for comments containing carriage returns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d581afca4a5305392d28788d2eee7630e8dc138a" translate="yes" xml:space="preserve">
          <source>The Time returned by time.Now contains a monotonic clock reading. If Time t has a monotonic clock reading, t.Add adds the same duration to both the wall clock and monotonic clock readings to compute the result. Because t.AddDate(y, m, d), t.Round(d), and t.Truncate(d) are wall time computations, they always strip any monotonic clock reading from their results. Because t.In, t.Local, and t.UTC are used for their effect on the interpretation of the wall time, they also strip any monotonic clock reading from their results. The canonical way to strip a monotonic clock reading is to use t = t.Round(0).</source>
          <target state="translated">time.Now返回的时间包含一个单调时钟读数。如果时间t有一个单调时钟读数,t.Add就会对挂钟和单调时钟读数加上相同的持续时间来计算结果。因为t.AddDate(y,m,d)、t.Round(d)和t.Truncate(d)是挂钟时间的计算,所以它们总是从结果中去掉任何单调时钟读数。因为t.In、t.Local和t.UTC对墙时解释的影响,它们也会从结果中剥离任何单调时钟读数。剥离单调时钟读数的规范方法是使用 t=t.round(0)。</target>
        </trans-unit>
        <trans-unit id="33e81456d15715e940a5919174eaa3f7637dcde7" translate="yes" xml:space="preserve">
          <source>The Timer type represents a single event. When the Timer expires, the current time will be sent on C, unless the Timer was created by AfterFunc. A Timer must be created with NewTimer or AfterFunc.</source>
          <target state="translated">Timer类型代表一个单一事件。当Timer过期时,当前时间将被发送到C上,除非Timer是由AfterFunc创建的。定时器必须用NewTimer或AfterFunc创建。</target>
        </trans-unit>
        <trans-unit id="cf73d1723f31995bde582871be9d0a7a3c49f2e8" translate="yes" xml:space="preserve">
          <source>The Universe scope contains all predeclared objects of Go. It is the outermost scope of any chain of nested scopes.</source>
          <target state="translated">Universe 作用域包含 Go 的所有预定义对象。它是任何嵌套作用域链的最外层作用域。</target>
        </trans-unit>
        <trans-unit id="d2217feb010f2a9e20eb107dc97fbe00b28a97e3" translate="yes" xml:space="preserve">
          <source>The Unsafe package is the package returned by an importer for the import path &quot;unsafe&quot;.</source>
          <target state="translated">Unsafe包是导入路径为 &quot;unsafe &quot;的导入者返回的包。</target>
        </trans-unit>
        <trans-unit id="82e1a6db6a2ce451395a30960fcbaa8d447276c7" translate="yes" xml:space="preserve">
          <source>The Unwrap, Is and As functions work on errors that may wrap other errors. An error wraps another error if its type has the method</source>
          <target state="translated">Unwrap、Is和As函数用于处理可能包装其他错误的错误。如果一个错误的类型具有方法</target>
        </trans-unit>
        <trans-unit id="84a102639d5d98f811fc502808b53b881ef02020" translate="yes" xml:space="preserve">
          <source>The Userinfo type is an immutable encapsulation of username and password details for a URL. An existing Userinfo value is guaranteed to have a username set (potentially empty, as allowed by RFC 2396), and optionally a password.</source>
          <target state="translated">Userinfo类型是对一个URL的用户名和密码细节的不可改变的封装。一个现有的Userinfo值保证有一个用户名设置(可能是空的,RFC 2396允许的),还有一个可选的密码。</target>
        </trans-unit>
        <trans-unit id="fbd19f3117c4f5404c3dc4318c570ed741a162cd" translate="yes" xml:space="preserve">
          <source>The Value.Call method allows the caller to invoke a typed function in terms of Values; in contrast, MakeFunc allows the caller to implement a typed function in terms of Values.</source>
          <target state="translated">Value.Call方法允许调用者用Value调用一个类型化的函数;相反,MakeFunc允许调用者用Value实现一个类型化的函数。</target>
        </trans-unit>
        <trans-unit id="b671f0d2f06db5c55a3ebed77ddd3e1fdacf58bc" translate="yes" xml:space="preserve">
          <source>The Wait method will return the exit code and release associated resources once the command exits.</source>
          <target state="translated">Wait方法将在命令退出后返回退出代码并释放相关资源。</target>
        </trans-unit>
        <trans-unit id="f996448ff14d875bb2a49935e2e1a1c11597d19a" translate="yes" xml:space="preserve">
          <source>The WithCancel, WithDeadline, and WithTimeout functions take a Context (the parent) and return a derived Context (the child) and a CancelFunc. Calling the CancelFunc cancels the child and its children, removes the parent's reference to the child, and stops any associated timers. Failing to call the CancelFunc leaks the child and its children until the parent is canceled or the timer fires. The go vet tool checks that CancelFuncs are used on all control-flow paths.</source>
          <target state="translated">WithCancel、WithDeadline和WithTimeout函数接收一个Context(父函数)并返回一个派生Context(子函数)和一个CancelFunc。调用CancelFunc会取消子函数和它的子函数,删除父函数对子函数的引用,并停止任何相关的计时器。如果未能调用CancelFunc,则会泄露子代和它的子代,直到父代被取消或定时器启动。go vet工具会检查CancelFuncs是否被用于所有控制流路径。</target>
        </trans-unit>
        <trans-unit id="7ad67f6f0923ebfa2c780fb9b0118879fff918f1" translate="yes" xml:space="preserve">
          <source>The Writer assumes that all Unicode code points have the same width; this may not be true in some fonts or if the string contains combining characters.</source>
          <target state="translated">写字机假设所有的Unicode码点都有相同的宽度;在某些字体中,或者如果字符串中包含组合字符,这可能不是真的。</target>
        </trans-unit>
        <trans-unit id="e4b495842c9aa071c7e0475777b24079ec5d06f2" translate="yes" xml:space="preserve">
          <source>The Writer currently provides no support for sparse files.</source>
          <target state="translated">Writer目前不支持稀疏文件。</target>
        </trans-unit>
        <trans-unit id="53af9c2eed3edf32c0f1e34e826ade2723d6ef7e" translate="yes" xml:space="preserve">
          <source>The Writer must buffer input internally, because proper spacing of one line may depend on the cells in future lines. Clients must call Flush when done calling Write.</source>
          <target state="translated">写入器必须在内部缓冲输入,因为一行的正确间距可能取决于未来行的单元格。客户端在调用Write后必须调用Flush。</target>
        </trans-unit>
        <trans-unit id="628a74097036f85303a5350ae981dc164e95f20b" translate="yes" xml:space="preserve">
          <source>The Writer treats incoming bytes as UTF-8-encoded text consisting of cells terminated by horizontal ('\t') or vertical ('\v') tabs, and newline ('\n') or formfeed ('\f') characters; both newline and formfeed act as line breaks.</source>
          <target state="translated">写入器将输入的字节视为UTF-8编码的文本,由水平('/t')或垂直('/v')制表符、换行('/n')或换格式('/f')字符结束的单元格组成;换行和换格式都作为换行符。</target>
        </trans-unit>
        <trans-unit id="ff09099a8f170cf0d12905fa7c7238d645a38332" translate="yes" xml:space="preserve">
          <source>The XML element for a struct contains marshaled elements for each of the exported fields of the struct, with these exceptions:</source>
          <target state="translated">一个结构的XML元素包含该结构的每个导出字段的marshaled元素,但有以下例外。</target>
        </trans-unit>
        <trans-unit id="79336ab4324d9f5dfdaefa0128d6e4be21b88b75" translate="yes" xml:space="preserve">
          <source>The []byte arguments are the data from the corresponding debug section in the object file; for example, for an ELF object, abbrev is the contents of the &quot;.debug_abbrev&quot; section.</source>
          <target state="translated">[]字节参数是对象文件中相应的调试部分的数据,例如,对于ELF对象,abbrev是&quot;.debug_abbrev &quot;部分的内容。</target>
        </trans-unit>
        <trans-unit id="76c0ad8d05ede9a06fba9319e4883b6c3aed9f8a" translate="yes" xml:space="preserve">
          <source>The actual read interface needed by NewReader. If the passed in io.Reader does not also have ReadByte, the NewReader will introduce its own buffering.</source>
          <target state="translated">NewReader实际需要的读取接口。如果传入的io.Reader没有ReadByte,NewReader将引入自己的缓冲。</target>
        </trans-unit>
        <trans-unit id="c853d84a15cfc8c913087ccf677e5edf1ca53e04" translate="yes" xml:space="preserve">
          <source>The add operation, implemented by the AddT functions, is the atomic equivalent of:</source>
          <target state="translated">由AddT函数实现的加法运算,其原子等价物为:。</target>
        </trans-unit>
        <trans-unit id="7b4a22ebac17d94f75fe50addbae480c54b8e412" translate="yes" xml:space="preserve">
          <source>The addresses in the to parameter are the SMTP RCPT addresses.</source>
          <target state="translated">to参数中的地址是SMTP RCPT的地址。</target>
        </trans-unit>
        <trans-unit id="fa78f066db9b3a5524ca42a8affe77f75da9d63e" translate="yes" xml:space="preserve">
          <source>The allocs profile is the same as the heap profile but changes the default pprof display to -alloc_space, the total number of bytes allocated since the program began (including garbage-collected bytes).</source>
          <target state="translated">allocs配置文件与堆配置文件相同,但将默认的pprof显示改为-alloc_space,即程序开始后分配的字节总数(包括垃圾回收的字节)。</target>
        </trans-unit>
        <trans-unit id="7b7e2adce610eba0eb46d47752259233e509b5f5" translate="yes" xml:space="preserve">
          <source>The append built-in function appends elements to the end of a slice. If it has sufficient capacity, the destination is resliced to accommodate the new elements. If it does not, a new underlying array will be allocated. Append returns the updated slice. It is therefore necessary to store the result of append, often in the variable holding the slice itself:</source>
          <target state="translated">append内置函数将元素追加到分片的末尾。如果它有足够的容量,目标会被重新分片以容纳新的元素。如果没有,将分配一个新的底层数组。Append返回更新后的分片。因此,有必要将append的结果存储起来,通常存储在持有分片本身的变量中。</target>
        </trans-unit>
        <trans-unit id="319121c4cf28a1a73f5a5d055a29a23993940f46" translate="yes" xml:space="preserve">
          <source>The argument obj must be a pointer to an object allocated by calling new, by taking the address of a composite literal, or by taking the address of a local variable. The argument finalizer must be a function that takes a single argument to which obj's type can be assigned, and can have arbitrary ignored return values. If either of these is not true, SetFinalizer may abort the program.</source>
          <target state="translated">参数obj必须是一个指针,指向一个通过调用new、取复合文字的地址或取局部变量的地址分配的对象。参数finalizer必须是一个函数,它接受一个单一的参数,obj的类型可以被分配给它,并且可以有任意忽略的返回值。如果其中一个不为真,SetFinalizer可能会中止程序。</target>
        </trans-unit>
        <trans-unit id="cd8b4269726f03ea74d83f3435788f2723fca1f6" translate="yes" xml:space="preserve">
          <source>The argument pos must have been returned by a call to Tell on this line table.</source>
          <target state="translated">参数pos必须是通过调用本行表的Tell返回的。</target>
        </trans-unit>
        <trans-unit id="b92996537add2723dc45807913fd63c71882192d" translate="yes" xml:space="preserve">
          <source>The argument to the -run and -bench command-line flags is an unanchored regular expression that matches the test's name. For tests with multiple slash-separated elements, such as subtests, the argument is itself slash-separated, with expressions matching each name element in turn. Because it is unanchored, an empty expression matches any string. For example, using &quot;matching&quot; to mean &quot;whose name contains&quot;:</source>
          <target state="translated">-run 和 -bench 命令行标志的参数是一个与测试名称相匹配的无锚正则表达式。对于有多个斜线分隔元素的测试,比如子测试,参数本身是斜线分隔的,表达式依次匹配每个名称元素。因为它是无锚的,所以空的表达式可以匹配任何字符串。例如,用 &quot;匹配 &quot;来表示 &quot;其名称包含&quot;。</target>
        </trans-unit>
        <trans-unit id="e79a98521fd13244e0b154d938bb00c75c9b0451" translate="yes" xml:space="preserve">
          <source>The base argument must be 0 or a value between 2 and MaxBase. For base 0, the number prefix determines the actual base: A prefix of &amp;ldquo;0b&amp;rdquo; or &amp;ldquo;0B&amp;rdquo; selects base 2, &amp;ldquo;0&amp;rdquo;, &amp;ldquo;0o&amp;rdquo; or &amp;ldquo;0O&amp;rdquo; selects base 8, and &amp;ldquo;0x&amp;rdquo; or &amp;ldquo;0X&amp;rdquo; selects base 16. Otherwise, the selected base is 10 and no prefix is accepted.</source>
          <target state="translated">基本参数必须为0或2到MaxBase之间的值。对于以0为底的数字，数字前缀确定实际的底数：以&amp;ldquo; 0b&amp;rdquo;或&amp;ldquo; 0B&amp;rdquo;为前缀选择2，以&amp;ldquo; 0&amp;rdquo;，&amp;ldquo; 0o&amp;rdquo;或&amp;ldquo; 0O&amp;rdquo;为前缀选择8，以&amp;ldquo; 0x&amp;rdquo;或&amp;ldquo; 0X&amp;rdquo;为前缀选择base16。否则，所选的base为10，并且不接受前缀。</target>
        </trans-unit>
        <trans-unit id="1f5bc3650196f245f397cccfe0b715471a484024" translate="yes" xml:space="preserve">
          <source>The base argument must be 0, 2, 8, 10, or 16. Providing an invalid base argument will lead to a run-time panic.</source>
          <target state="translated">基本参数必须是0、2、8、10或16。提供一个无效的基本参数会导致运行时的恐慌。</target>
        </trans-unit>
        <trans-unit id="999251e457607fde479613cc188e10bb8aa35ffc" translate="yes" xml:space="preserve">
          <source>The behavior of Close after the first call is undefined. Specific implementations may document their own behavior.</source>
          <target state="translated">第一次调用后Close的行为没有定义。具体的实现可以记录自己的行为。</target>
        </trans-unit>
        <trans-unit id="a5501fbd34c66d8be25df49275f9a5880a90030a" translate="yes" xml:space="preserve">
          <source>The benchmark function must run the target code b.N times. During benchmark execution, b.N is adjusted until the benchmark function lasts long enough to be timed reliably. The output</source>
          <target state="translated">基准函数必须运行目标代码b.N次。在基准执行过程中,b.N会被调整,直到基准函数持续足够长的时间来可靠地计时。输出</target>
        </trans-unit>
        <trans-unit id="5d5239994cd75391745c3ffd216fe5a8cda11e2c" translate="yes" xml:space="preserve">
          <source>The bin/ directory holds compiled commands. Each command is named for its source directory, but only using the final element, not the entire path. That is, the command with source in DIR/src/foo/quux is installed into DIR/bin/quux, not DIR/bin/foo/quux. The foo/ is stripped so that you can add DIR/bin to your PATH to get at the installed commands.</source>
          <target state="translated">bin/目录下存放的是编译后的命令。每条命令都以它的源目录命名,但只使用最后一个元素,而不是整个路径。也就是说,源码在DIR/src/foo/quux中的命令被安装到DIR/bin/quux中,而不是DIR/bin/foo/quux。foo/是被剥离的,所以你可以将DIR/bin添加到你的PATH中以获得安装的命令。</target>
        </trans-unit>
        <trans-unit id="5fb2943938d895315eb0861e562b65ec37e4257a" translate="yes" xml:space="preserve">
          <source>The bitSize argument specifies the integer type that the result must fit into. Bit sizes 0, 8, 16, 32, and 64 correspond to int, int8, int16, int32, and int64. If bitSize is below 0 or above 64, an error is returned.</source>
          <target state="translated">bitSize参数指定了结果必须适合的整数类型。位大小为0、8、16、32和64,分别对应int、int8、int16、int32和int64。如果bitSize低于0或高于64,将返回一个错误。</target>
        </trans-unit>
        <trans-unit id="73a023e42c8f449dd9afceb038f53730f09d0f3a" translate="yes" xml:space="preserve">
          <source>The blocksize of MD5 in bytes.</source>
          <target state="translated">MD5的块大小,以字节为单位。</target>
        </trans-unit>
        <trans-unit id="b15f9638286bf74ad9f05789a97346025af52de4" translate="yes" xml:space="preserve">
          <source>The blocksize of SHA-1 in bytes.</source>
          <target state="translated">SHA-1的块大小,以字节为单位。</target>
        </trans-unit>
        <trans-unit id="a7b36663bea360572efce2e38cb3e1eb26ceecf3" translate="yes" xml:space="preserve">
          <source>The blocksize of SHA256 and SHA224 in bytes.</source>
          <target state="translated">SHA256和SHA224的块大小,单位为字节。</target>
        </trans-unit>
        <trans-unit id="97aa274f72b6214d58f8cac268e6604a5f6faa7b" translate="yes" xml:space="preserve">
          <source>The body function will be run in each goroutine. It should set up any goroutine-local state and then iterate until pb.Next returns false. It should not use the StartTimer, StopTimer, or ResetTimer functions, because they have global effect. It should also not call Run.</source>
          <target state="translated">身体函数将在每个goroutine中运行,它应该设置任何goroutine的局部状态,然后迭代直到pb.Next返回false。它应该设置任何goroutine的局部状态,然后迭代直到pb.Next返回false。它不应该使用StartTimer、StopTimer或ResetTimer函数,因为它们具有全局效应。它也不应该调用Run.Next函数,因为它们具有全局效应。</target>
        </trans-unit>
        <trans-unit id="af7dc8ebb6f00c62864546d31e047f12c2a2774d" translate="yes" xml:space="preserve">
          <source>The boolean functions take any zero value to be false and a non-zero value to be true.</source>
          <target state="translated">布林函数取任何零值为假,非零值为真。</target>
        </trans-unit>
        <trans-unit id="0ca3ec8906bf9075e98bceae22793965b445ac42" translate="yes" xml:space="preserve">
          <source>The boundary is usually obtained from the &quot;boundary&quot; parameter of the message's &quot;Content-Type&quot; header. Use mime.ParseMediaType to parse such headers.</source>
          <target state="translated">边界通常由消息的 &quot;Content-Type &quot;头的 &quot;boundary &quot;参数获得。使用mime.ParseMediaType来解析这种头。</target>
        </trans-unit>
        <trans-unit id="93f9cb3d63de38d1cca4d1f9efd9ca872f4716ce" translate="yes" xml:space="preserve">
          <source>The built-in table is small but on unix it is augmented by the local system's mime.types file(s) if available under one or more of these names:</source>
          <target state="translated">内置的表很小,但在unix上,如果本地系统的mime.types文件有一个或多个这样的名字,它就会被增加。</target>
        </trans-unit>
        <trans-unit id="d093a31770ef0176a6cc811f5e90de0295df923b" translate="yes" xml:space="preserve">
          <source>The byte offsets for each file in a file set are mapped into distinct (integer) intervals, one interval [base, base+size] per file. Base represents the first byte in the file, and size is the corresponding file size. A Pos value is a value in such an interval. By determining the interval a Pos value belongs to, the file, its file base, and thus the byte offset (position) the Pos value is representing can be computed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3abe768a37a21ebff40b7c9151a7b3edc6c44e0" translate="yes" xml:space="preserve">
          <source>The calendrical calculations always assume a Gregorian calendar, with no leap seconds.</source>
          <target state="translated">历法计算总是假设采用格里高利历,没有闰秒。</target>
        </trans-unit>
        <trans-unit id="dd3a4f20159bb2231f4a88b4a45f4b772e80ba3c" translate="yes" xml:space="preserve">
          <source>The caller should call Close when finished, to shut it down.</source>
          <target state="translated">呼叫者应在完成后呼叫关闭,将其关闭。</target>
        </trans-unit>
        <trans-unit id="257fee20f0af9c58c89645e121bcb859cd7d2ba2" translate="yes" xml:space="preserve">
          <source>The cap built-in function returns the capacity of v, according to its type:</source>
          <target state="translated">cap内置函数根据v的类型,返回v的容量。</target>
        </trans-unit>
        <trans-unit id="e553ed25dbd923acc16eb919df1e53d3eec5c8ba" translate="yes" xml:space="preserve">
          <source>The certificate is signed by parent. If parent is equal to template then the certificate is self-signed. The parameter pub is the public key of the signee and priv is the private key of the signer.</source>
          <target state="translated">证书是由父代签署的,如果父代等于模板,则证书是自签的。如果parent等于模板,则证书为自签。参数 pub 是签名人的公钥,priv 是签名人的私钥。</target>
        </trans-unit>
        <trans-unit id="dc1a26e65aace69e5a0db7ec46a4e897871c5c8e" translate="yes" xml:space="preserve">
          <source>The chain consists of err itself followed by the sequence of errors obtained by repeatedly calling Unwrap.</source>
          <target state="translated">该链由err本身组成,后面是反复调用Unwrap获得的错误序列。</target>
        </trans-unit>
        <trans-unit id="784fcd80e08909ffdec4906c1c0dba2f7d623904" translate="yes" xml:space="preserve">
          <source>The client must close the response body when finished with it:</source>
          <target state="translated">客户端完成响应体后必须关闭响应体。</target>
        </trans-unit>
        <trans-unit id="7b4dd52e8c63aa6987cf8c226672c7d4edb96f82" translate="yes" xml:space="preserve">
          <source>The close built-in function closes a channel, which must be either bidirectional or send-only. It should be executed only by the sender, never the receiver, and has the effect of shutting down the channel after the last sent value is received. After the last value has been received from a closed channel c, any receive from c will succeed without blocking, returning the zero value for the channel element. The form</source>
          <target state="translated">关闭内置函数关闭了一个通道,这个通道必须是双向的或者只发送的。它应该只由发送者执行,而不是由接收者执行,并且在接收到最后一个发送的值后具有关闭通道的效果。当最后一个值从一个关闭的通道c中接收到后,任何从c中接收的值都会成功而不被阻塞,返回通道元素的零值。形式是</target>
        </trans-unit>
        <trans-unit id="0c580a2c87e0f2186896309d301dc63aad975a10" translate="yes" xml:space="preserve">
          <source>The command must have been started by Start.</source>
          <target state="translated">该命令必须由Start启动。</target>
        </trans-unit>
        <trans-unit id="ef8e35ecfe346ef37bdb6a41007c64b491f6581e" translate="yes" xml:space="preserve">
          <source>The comment prefix &quot;Unordered output:&quot; is like &quot;Output:&quot;, but matches any line order:</source>
          <target state="translated">注释前缀 &quot;无序输出:&quot;和 &quot;输出:&quot;一样,但符合任何行序。</target>
        </trans-unit>
        <trans-unit id="af6f6bfe9472d6cd742ab07f4d13576c62ddc94c" translate="yes" xml:space="preserve">
          <source>The compare-and-swap operation, implemented by the CompareAndSwapT functions, is the atomic equivalent of:</source>
          <target state="translated">比较和交换操作,由CompareAndSwapT函数实现,是原子等价物。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
