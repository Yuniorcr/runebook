<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="markdown">
    <body>
      <group id="markdown">
        <trans-unit id="c0d5b90cc83dc08acb244d43500b12b7f63b99dc" translate="yes" xml:space="preserve">
          <source>&amp;copy; 2004 John Gruber</source>
          <target state="translated">分级为4 +&amp;copy;2004 John Gruber</target>
        </trans-unit>
        <trans-unit id="6538d536cc11dbeb2500ecc0967a29d51a9eab42" translate="yes" xml:space="preserve">
          <source>(This sort of entity-encoding trick will indeed fool many, if not most, address-harvesting bots, but it definitely won&amp;rsquo;t fool all of them. It&amp;rsquo;s better than nothing, but an address published in this way will probably eventually start receiving spam.)</source>
          <target state="translated">（这种实体编码技巧的确会欺骗许多（即使不是大多数）地址收集机器人，但绝对不会欺骗所有它们。总比没有好，但是以这种方式发布的地址最终可能会开始收到垃圾邮件。）</target>
        </trans-unit>
        <trans-unit id="1668500f818740d5cc41f28746baca569bed3527" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; There is a known bug in Markdown.pl 1.0.1 which prevents single quotes from being used to delimit link titles.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt; Markdown.pl 1.0.1中存在一个已知的错误，该错误可防止使用单引号来分隔链接标题。</target>
        </trans-unit>
        <trans-unit id="7bba9b42af79fce907856693563f94cd3e187925" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This document is itself written using Markdown; you can &lt;a href=&quot;http://daringfireball.net/projects/markdown/syntax.text&quot;&gt;see the source for it by adding &amp;lsquo;.text&amp;rsquo; to the URL&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;本文档本身是使用Markdown编写的；您可以&lt;a href=&quot;http://daringfireball.net/projects/markdown/syntax.text&quot;&gt;通过在URL上添加&amp;ldquo; .text&amp;rdquo;来查看其来源&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dab2d878de2b749cbba5c452c1e746dd665ff86d" translate="yes" xml:space="preserve">
          <source>A code block continues until it reaches a line that is not indented (or the end of the article).</source>
          <target state="translated">一个代码块一直持续到它到达一个没有缩进的行(或文章的结尾)。</target>
        </trans-unit>
        <trans-unit id="a8a2f9a975783a99dcd74f5d247d344d135a813d" translate="yes" xml:space="preserve">
          <source>A paragraph is simply one or more consecutive lines of text, separated by one or more blank lines. (A blank line is any line that looks like a blank line &amp;mdash; a line containing nothing but spaces or tabs is considered blank.) Normal paragraphs should not be indented with spaces or tabs.</source>
          <target state="translated">一段只是一个或多个连续的文本行，由一个或多个空行分隔。（空行是看起来像空行的任何行，仅包含空格或制表符的行被视为空白。）普通段落不应以空格或制表符缩进。</target>
        </trans-unit>
        <trans-unit id="b83edd0dd60631a3004907a34b5d734adaf7c5a4" translate="yes" xml:space="preserve">
          <source>Admittedly, it&amp;rsquo;s fairly difficult to devise a &amp;ldquo;natural&amp;rdquo; syntax for placing images into a plain text document format.</source>
          <target state="translated">诚然，很难设计出一种&amp;ldquo;自然&amp;rdquo;的语法来将图像放入纯文本文档格式。</target>
        </trans-unit>
        <trans-unit id="460fca52cfe85bf46815e348701129e5059e9673" translate="yes" xml:space="preserve">
          <source>Ampersands in particular are bedeviling for web writers. If you want to write about &amp;lsquo;AT&amp;amp;T&amp;rsquo;, you need to write &amp;lsquo;&lt;code&gt;AT&amp;amp;amp;T&lt;/code&gt;&amp;rsquo;. You even need to escape ampersands within URLs. Thus, if you want to link to:</source>
          <target state="translated">尤其是＆符正在为网络编写者着迷。如果要写&amp;ldquo; AT＆T&amp;rdquo;，则需要写&amp;ldquo; &lt;code&gt;AT&amp;amp;amp;T&lt;/code&gt; &amp;rdquo;。您甚至需要转义URL中的&amp;ldquo;＆&amp;rdquo;号。因此，如果您想链接到：</target>
        </trans-unit>
        <trans-unit id="bcaf13e65aa0d07002352e53e4e69175af63e015" translate="yes" xml:space="preserve">
          <source>An exclamation mark: &lt;code&gt;!&lt;/code&gt;;</source>
          <target state="translated">感叹号： &lt;code&gt;!&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="41b777d8562201938e9c8b6f1a3ca39f151d5d58" translate="yes" xml:space="preserve">
          <source>And then define the link:</source>
          <target state="translated">然后再定义这个环节。</target>
        </trans-unit>
        <trans-unit id="910103c3c1a61e6bf4be2687b7d279456a3e65d9" translate="yes" xml:space="preserve">
          <source>Any decent text editor should make email-style quoting easy. For example, with BBEdit, you can make a selection and choose Increase Quote Level from the Text menu.</source>
          <target state="translated">任何像样的文本编辑器都应该使电子邮件式的引用变得简单。例如,使用 BBEdit,您可以进行选择,并从 &quot;文本 &quot;菜单中选择 &quot;增加报价水平&quot;。</target>
        </trans-unit>
        <trans-unit id="907a126cd626c00db7850c74135aea6cdc048e4e" translate="yes" xml:space="preserve">
          <source>Any number of underlining &lt;code&gt;=&lt;/code&gt;&amp;rsquo;s or &lt;code&gt;-&lt;/code&gt;&amp;rsquo;s will work.</source>
          <target state="translated">下划线 &lt;code&gt;=&lt;/code&gt; 或 &lt;code&gt;-&lt;/code&gt; 的任何数量都可以使用。</target>
        </trans-unit>
        <trans-unit id="582e1316036c44e3c34ae36794a7ac45d71dd890" translate="yes" xml:space="preserve">
          <source>As of this writing, Markdown has no syntax for specifying the dimensions of an image; if this is important to you, you can simply use regular HTML &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; tags.</source>
          <target state="translated">在撰写本文时，Markdown没有指定图像尺寸的语法。如果这对您很重要，则可以简单地使用常规HTML &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; 标记。</target>
        </trans-unit>
        <trans-unit id="f99a3adde446a05f41d11f20311358cf298ee1c5" translate="yes" xml:space="preserve">
          <source>Atx-style headers use 1-6 hash characters at the start of the line, corresponding to header levels 1-6. For example:</source>
          <target state="translated">Atx风格的报头在行首使用1-6个哈希字符,对应1-6级报头。例如:</target>
        </trans-unit>
        <trans-unit id="db7647dc14a933dc8c125c371bee6a271e91de83" translate="yes" xml:space="preserve">
          <source>Automatic Escaping for Special Characters</source>
          <target state="translated">特殊字符的自动转义</target>
        </trans-unit>
        <trans-unit id="3a608c3b98ddf00f7d2bdc0085e7a8a58db112ec" translate="yes" xml:space="preserve">
          <source>Automatic Links</source>
          <target state="translated">自动链接</target>
        </trans-unit>
        <trans-unit id="00711dee7200b1a0216f60c0fb2a32c293192334" translate="yes" xml:space="preserve">
          <source>Automatic links for email addresses work similarly, except that Markdown will also perform a bit of randomized decimal and hex entity-encoding to help obscure your address from address-harvesting spambots. For example, Markdown will turn this:</source>
          <target state="translated">电子邮件地址的自动链接也有类似的作用,除了Markdown也会执行一点随机的十进制和十六进制实体编码,以帮助掩盖您的地址,防止地址采集的垃圾邮件机器人。例如,Markdown会把这个。</target>
        </trans-unit>
        <trans-unit id="7eddf2e692bbe2944055253e903e03f92dc85c03" translate="yes" xml:space="preserve">
          <source>Backslash Escapes</source>
          <target state="translated">反斜杠回避</target>
        </trans-unit>
        <trans-unit id="5f8e5b4f9c274df0abdd9e9685df46b7de1986f5" translate="yes" xml:space="preserve">
          <source>Because link names may contain spaces, this shortcut even works for multiple words in the link text:</source>
          <target state="translated">由于链接名称可能包含空格,这个快捷键甚至适用于链接文本中的多个单词。</target>
        </trans-unit>
        <trans-unit id="8ac6960d99f504b227c089027d841f4e9c385375" translate="yes" xml:space="preserve">
          <source>Block Elements</source>
          <target state="translated">块状元素</target>
        </trans-unit>
        <trans-unit id="1831c9c6e6c7258f58fb4df7b34ef7042b997c4b" translate="yes" xml:space="preserve">
          <source>Blockquotes</source>
          <target state="translated">Blockquotes</target>
        </trans-unit>
        <trans-unit id="c4f09e32e1ee918297614eec376d27b756717aea" translate="yes" xml:space="preserve">
          <source>Blockquotes can be nested (i.e. a blockquote-in-a-blockquote) by adding additional levels of &lt;code&gt;&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">块引用可以嵌套（即，BLOCKQUOTE-IN-A-BLOCKQUOTE）加入了附加级别 &lt;code&gt;&amp;gt;&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="fe05706f5db76d1384e16051c3f2dfb6047c2653" translate="yes" xml:space="preserve">
          <source>Blockquotes can contain other Markdown elements, including headers, lists, and code blocks:</source>
          <target state="translated">区块引号可以包含其他Markdown元素,包括标题、列表和代码块。</target>
        </trans-unit>
        <trans-unit id="3078387e628a5a46fcd71ea9dabe1e269c044232" translate="yes" xml:space="preserve">
          <source>Both of the above examples will produce the following HTML output:</source>
          <target state="translated">以上两个例子都会产生以下HTML输出。</target>
        </trans-unit>
        <trans-unit id="32dc439098e3b562ea8db4788aee9f85217464de" translate="yes" xml:space="preserve">
          <source>But if you surround an &lt;code&gt;*&lt;/code&gt; or &lt;code&gt;_&lt;/code&gt; with spaces, it&amp;rsquo;ll be treated as a literal asterisk or underscore.</source>
          <target state="translated">但是，如果用空格将 &lt;code&gt;*&lt;/code&gt; 或 &lt;code&gt;_&lt;/code&gt; 括起来，则会将其视为文字星号或下划线。</target>
        </trans-unit>
        <trans-unit id="28e27698660cdd2870cc2a6e4e8d078772b21912" translate="yes" xml:space="preserve">
          <source>But if you want to be lazy, you don&amp;rsquo;t have to:</source>
          <target state="translated">但是，如果您想变得懒惰，则不必：</target>
        </trans-unit>
        <trans-unit id="77916c1fd878688710112f6d8e4819cc4f1c7e81" translate="yes" xml:space="preserve">
          <source>But this:</source>
          <target state="translated">但这。</target>
        </trans-unit>
        <trans-unit id="adac69379a626c2436948a4ef1792c7d719ef929" translate="yes" xml:space="preserve">
          <source>Code</source>
          <target state="translated">Code</target>
        </trans-unit>
        <trans-unit id="9d591ca7c10ad619dc6206d37ac2017aefefbb31" translate="yes" xml:space="preserve">
          <source>Code Blocks</source>
          <target state="translated">代码块</target>
        </trans-unit>
        <trans-unit id="0bbeff6580b571e553481c3cd433d3f2a397b451" translate="yes" xml:space="preserve">
          <source>Emphasis</source>
          <target state="translated">Emphasis</target>
        </trans-unit>
        <trans-unit id="a115d2f6c7be0cb214552b4e52b1b9985dd00f9d" translate="yes" xml:space="preserve">
          <source>Emphasis can be used in the middle of a word:</source>
          <target state="translated">重音可以用在一个词的中间。</target>
        </trans-unit>
        <trans-unit id="ba59131a6a69a3624bc3f20ad3f38a2df0e64f95" translate="yes" xml:space="preserve">
          <source>For any markup that is not covered by Markdown&amp;rsquo;s syntax, you simply use HTML itself. There&amp;rsquo;s no need to preface it or delimit it to indicate that you&amp;rsquo;re switching from Markdown to HTML; you just use the tags.</source>
          <target state="translated">对于Markdown语法未涵盖的任何标记，您只需使用HTML本身。无需在其前添加或定界以表明您已从Markdown切换为HTML；您只需使用标签。</target>
        </trans-unit>
        <trans-unit id="a277c9aa42ac9722f9552716b8a68b0534863d73" translate="yes" xml:space="preserve">
          <source>For comparison, here is the same paragraph written using Markdown&amp;rsquo;s inline link style:</source>
          <target state="translated">为了进行比较，下面是使用Markdown的内联链接样式编写的同一段落：</target>
        </trans-unit>
        <trans-unit id="2612d924dc512976df7c57175e3cc7544c14301a" translate="yes" xml:space="preserve">
          <source>For example, to add an HTML table to a Markdown article:</source>
          <target state="translated">例如,在Markdown文章中添加一个HTML表格。</target>
        </trans-unit>
        <trans-unit id="520de7443d00d6ff4dc3ababbbf6cfbe0b74f4ec" translate="yes" xml:space="preserve">
          <source>Headers</source>
          <target state="translated">Headers</target>
        </trans-unit>
        <trans-unit id="eb45b26189b0aaa6cdcfe9282988851e44809035" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of reference links in action:</source>
          <target state="translated">这是一个实际的参考链接示例：</target>
        </trans-unit>
        <trans-unit id="33488d4b3cbb5ba16b0673469e60db7094fb670e" translate="yes" xml:space="preserve">
          <source>Horizontal Rules</source>
          <target state="translated">横向规则</target>
        </trans-unit>
        <trans-unit id="210d42d55cc816e45443d039271690ba4a7db679" translate="yes" xml:space="preserve">
          <source>However, inside Markdown code spans and blocks, angle brackets and ampersands are &lt;em&gt;always&lt;/em&gt; encoded automatically. This makes it easy to use Markdown to write about HTML code. (As opposed to raw HTML, which is a terrible format for writing about HTML syntax, because every single &lt;code&gt;&amp;lt;&lt;/code&gt; and &lt;code&gt;&amp;amp;&lt;/code&gt; in your example code needs to be escaped.)</source>
          <target state="translated">但是，在Markdown代码内部，跨度和块，尖括号和与号&lt;em&gt;始终&lt;/em&gt;自动进行编码。这使得使用Markdown编写HTML代码变得容易。（与原始HTML相反，原始HTML是用于编写HTML语法的一种糟糕格式，因为示例代码中的每个 &lt;code&gt;&amp;lt;&lt;/code&gt; 和 &lt;code&gt;&amp;amp;&lt;/code&gt; 都必须转义。）</target>
        </trans-unit>
        <trans-unit id="d1139a240c747a110079a4ee5414a8841a1ebf0e" translate="yes" xml:space="preserve">
          <source>If list items are separated by blank lines, Markdown will wrap the items in &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; tags in the HTML output. For example, this input:</source>
          <target state="translated">如果列表项用空行分隔，Markdown会将这些项目包装在HTML输出的 &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; 标记中。例如，此输入：</target>
        </trans-unit>
        <trans-unit id="c44e2839a274487a94a93ee344ff68dc573e5bdf" translate="yes" xml:space="preserve">
          <source>If you do use lazy list numbering, however, you should still start the list with the number 1. At some point in the future, Markdown may support starting ordered lists at an arbitrary number.</source>
          <target state="translated">如果您确实使用了懒惰的列表编号,但是,您仍然应该以数字1开始列表。在未来的某个时候,Markdown可能会支持以任意的数字开始有序的列表。</target>
        </trans-unit>
        <trans-unit id="e520bcbe59f22175710bd3119bb35d86c91fac28" translate="yes" xml:space="preserve">
          <source>If you instead wrote the list in Markdown like this:</source>
          <target state="translated">如果你用Markdown写出这样的列表。</target>
        </trans-unit>
        <trans-unit id="b75fd32916c339f46bfc2c425730bf6a28150f02" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re referring to a local resource on the same server, you can use relative paths:</source>
          <target state="translated">如果要引用同一服务器上的本地资源，则可以使用相对路径：</target>
        </trans-unit>
        <trans-unit id="09e871c98fef3b901a775def173e4126aaf73b42" translate="yes" xml:space="preserve">
          <source>Images</source>
          <target state="translated">Images</target>
        </trans-unit>
        <trans-unit id="080f0bf22f0a2322f9937a9fc359284e25158627" translate="yes" xml:space="preserve">
          <source>In HTML, there are two characters that demand special treatment: &lt;code&gt;&amp;lt;&lt;/code&gt; and &lt;code&gt;&amp;amp;&lt;/code&gt;. Left angle brackets are used to start tags; ampersands are used to denote HTML entities. If you want to use them as literal characters, you must escape them as entities, e.g. &lt;code&gt;&amp;amp;lt;&lt;/code&gt;, and &lt;code&gt;&amp;amp;amp;&lt;/code&gt;.</source>
          <target state="translated">在HTML中，有两个字符需要特殊处理： &lt;code&gt;&amp;lt;&lt;/code&gt; 和 &lt;code&gt;&amp;amp;&lt;/code&gt; 。左尖括号用于开始标签；&amp;ldquo;与&amp;rdquo;号用于表示HTML实体。如果要将它们用作文字字符，则必须将它们作为实体转义，例如 &lt;code&gt;&amp;amp;lt;&lt;/code&gt; 。和 &lt;code&gt;&amp;amp;amp;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="11ccd80c421a7aab03c958e188ba1498f5e1a126" translate="yes" xml:space="preserve">
          <source>In both styles, the link text is delimited by [square brackets].</source>
          <target state="translated">在这两种样式中,链接文本都以[方括号]为界。</target>
        </trans-unit>
        <trans-unit id="fdc48c4ace77dc596756f4396d174ebbb8ccea0d" translate="yes" xml:space="preserve">
          <source>In other words, a &lt;em&gt;number-period-space&lt;/em&gt; sequence at the beginning of a line. To avoid this, you can backslash-escape the period:</source>
          <target state="translated">换句话说，在行的开头是一个&lt;em&gt;数字周期空间&lt;/em&gt;序列。为了避免这种情况，您可以反斜杠转义该句点：</target>
        </trans-unit>
        <trans-unit id="0632cbe6a983b23f7fbe099f40c4ed3e9c6009e6" translate="yes" xml:space="preserve">
          <source>Inline HTML</source>
          <target state="translated">内嵌式HTML</target>
        </trans-unit>
        <trans-unit id="b49aebceb055ce0c9b6174493255ad5e7b2e8255" translate="yes" xml:space="preserve">
          <source>Inline image syntax looks like this:</source>
          <target state="translated">内联图像的语法是这样的。</target>
        </trans-unit>
        <trans-unit id="5fa2563526b0013d75316ab13145366e130ac560" translate="yes" xml:space="preserve">
          <source>It looks nice if you indent every line of the subsequent paragraphs, but here again, Markdown will allow you to be lazy:</source>
          <target state="translated">如果你把后续段落的每一行都缩进,看起来很不错,但在这里,Markdown又会允许你偷懒。</target>
        </trans-unit>
        <trans-unit id="11832fc4172b5493052a8c250b5b1fd48bc4d6ae" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s important to note that the actual numbers you use to mark the list have no effect on the HTML output Markdown produces. The HTML Markdown produces from the above list is:</source>
          <target state="translated">重要的是要注意，用于标记列表的实际数字对Markdown产生的HTML输出没有影响。从上面的列表中产生的HTML Markdown是：</target>
        </trans-unit>
        <trans-unit id="92b81f374f6e75541149851605694877df0ac180" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s worth noting that it&amp;rsquo;s possible to trigger an ordered list by accident, by writing something like this:</source>
          <target state="translated">值得注意的是，可以通过编写如下代码来偶然触发有序列表：</target>
        </trans-unit>
        <trans-unit id="cc5b2a062f05dd148b4ef24c76639416ebcc59f3" translate="yes" xml:space="preserve">
          <source>Licensed under the BSD License.</source>
          <target state="translated">采用BSD授权许可。</target>
        </trans-unit>
        <trans-unit id="7f4751628c92cfc0bdffa4d18ab109de8e7fd877" translate="yes" xml:space="preserve">
          <source>Link definition names may consist of letters, numbers, spaces, and punctuation &amp;mdash; but they are &lt;em&gt;not&lt;/em&gt; case sensitive. E.g. these two links:</source>
          <target state="translated">链接定义名称可以包含字母，数字，空格和标点符号，但它们&lt;em&gt;不&lt;/em&gt;区分大小写。例如，这两个链接：</target>
        </trans-unit>
        <trans-unit id="72e494f0ad7b543fd20ebbb060434bd35901eee2" translate="yes" xml:space="preserve">
          <source>Link definitions are only used for creating links during Markdown processing, and are stripped from your document in the HTML output.</source>
          <target state="translated">链接定义只用于在Markdown处理过程中创建链接,并在HTML输出中从您的文档中剥离出来。</target>
        </trans-unit>
        <trans-unit id="65fa0097bbbaa77ae11d487cd7e4142ad21d9089" translate="yes" xml:space="preserve">
          <source>Link definitions can be placed anywhere in your Markdown document. I tend to put them immediately after each paragraph in which they&amp;rsquo;re used, but if you want, you can put them all at the end of your document, sort of like footnotes.</source>
          <target state="translated">链接定义可以放在Markdown文档中的任何位置。我倾向于将它们放在使用它们的每个段落之后，但是如果需要，可以将它们全部放在文档的末尾，就像脚注一样。</target>
        </trans-unit>
        <trans-unit id="014bcd654c60d5250fad2123b073b9c0ac3340f6" translate="yes" xml:space="preserve">
          <source>Links</source>
          <target state="translated">Links</target>
        </trans-unit>
        <trans-unit id="ec2c6a243773c447d3de60b9fe63005515144562" translate="yes" xml:space="preserve">
          <source>List items may consist of multiple paragraphs. Each subsequent paragraph in a list item must be indented by either 4 spaces or one tab:</source>
          <target state="translated">列表项可由多个段落组成。列表项中的每个后续段落必须缩进4个空格或一个制表符。</target>
        </trans-unit>
        <trans-unit id="8d67895fd9d80a8276bb790706790a15bcaf3de8" translate="yes" xml:space="preserve">
          <source>List markers typically start at the left margin, but may be indented by up to three spaces. List markers must be followed by one or more spaces or a tab.</source>
          <target state="translated">列表标记通常从左边缘开始,但最多可以缩进三个空格。列表标记后面必须有一个或多个空格或制表符。</target>
        </trans-unit>
        <trans-unit id="57c9502a7d7d48fd4a86b45fefb2b163491c3ae1" translate="yes" xml:space="preserve">
          <source>Lists</source>
          <target state="translated">Lists</target>
        </trans-unit>
        <trans-unit id="23e67fceae0d77dd571dd25695fc0499faf1bb77" translate="yes" xml:space="preserve">
          <source>Markdown</source>
          <target state="translated">Markdown</target>
        </trans-unit>
        <trans-unit id="e12b8fd54e9a2919e402beac83049b8e23f93519" translate="yes" xml:space="preserve">
          <source>Markdown allows you to be lazy and only put the &lt;code&gt;&amp;gt;&lt;/code&gt; before the first line of a hard-wrapped paragraph:</source>
          <target state="translated">Markdown使您变得懒惰，只将 &lt;code&gt;&amp;gt;&lt;/code&gt; 放在硬包装段落的第一行之前：</target>
        </trans-unit>
        <trans-unit id="1734a1d3c691a33de88e6ed7a43711785fa0a248" translate="yes" xml:space="preserve">
          <source>Markdown allows you to use backslash escapes to generate literal characters which would otherwise have special meaning in Markdown&amp;rsquo;s formatting syntax. For example, if you wanted to surround a word with literal asterisks (instead of an HTML &lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt; tag), you can use backslashes before the asterisks, like this:</source>
          <target state="translated">Markdown允许您使用反斜杠转义符生成文字字符，否则这些文字在Markdown的格式语法中将具有特殊含义。例如，如果您想在单词周围加上文字星号（而不是HTML &lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt; 标签），则可以在星号之前使用反斜杠，如下所示：</target>
        </trans-unit>
        <trans-unit id="3f6dc1d09583546690eb994697c48c03d0046b5e" translate="yes" xml:space="preserve">
          <source>Markdown allows you to use these characters naturally, taking care of all the necessary escaping for you. If you use an ampersand as part of an HTML entity, it remains unchanged; otherwise it will be translated into &lt;code&gt;&amp;amp;amp;&lt;/code&gt;.</source>
          <target state="translated">Markdown允许您自然使用这些字符，并为您做好所有必要的转义操作。如果将与号用作HTML实体的一部分，则它保持不变。否则将被翻译成 &lt;code&gt;&amp;amp;amp;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d9f84c007e4ce5c357d0f84c3957252d0cc74c66" translate="yes" xml:space="preserve">
          <source>Markdown is intended to be as easy-to-read and easy-to-write as is feasible.</source>
          <target state="translated">Markdown的目的是尽可能的易读易写。</target>
        </trans-unit>
        <trans-unit id="9cf9305d131ca65a78890b71a9ea304ca5116ed5" translate="yes" xml:space="preserve">
          <source>Markdown is not a replacement for HTML, or even close to it. Its syntax is very small, corresponding only to a very small subset of HTML tags. The idea is &lt;em&gt;not&lt;/em&gt; to create a syntax that makes it easier to insert HTML tags. In my opinion, HTML tags are already easy to insert. The idea for Markdown is to make it easy to read, write, and edit prose. HTML is a &lt;em&gt;publishing&lt;/em&gt; format; Markdown is a &lt;em&gt;writing&lt;/em&gt; format. Thus, Markdown&amp;rsquo;s formatting syntax only addresses issues that can be conveyed in plain text.</source>
          <target state="translated">Markdown不能替代HTML，甚至不能替代HTML。它的语法非常小，仅对应于很小的HTML标签子集。这个想法&lt;em&gt;不是&lt;/em&gt;要创建一种使插入HTML标签更容易的语法。我认为HTML标记已经很容易插入。 Markdown的想法是使其易于阅读，编写和编辑散文。 HTML是一种&lt;em&gt;发布&lt;/em&gt;格式； Markdown是一种&lt;em&gt;书写&lt;/em&gt;格式。因此，Markdown的格式语法仅解决可以以纯文本形式传达的问题。</target>
        </trans-unit>
        <trans-unit id="3caa8d1bf863b824dc12742b5873a5e893005386" translate="yes" xml:space="preserve">
          <source>Markdown provides backslash escapes for the following characters:</source>
          <target state="translated">Markdown为以下字符提供反斜杠转义。</target>
        </trans-unit>
        <trans-unit id="5a1c0e0cc29a7c6673c43d00c125c56345094940" translate="yes" xml:space="preserve">
          <source>Markdown supports a shortcut style for creating &amp;ldquo;automatic&amp;rdquo; links for URLs and email addresses: simply surround the URL or email address with angle brackets. What this means is that if you want to show the actual text of a URL or email address, and also have it be a clickable link, you can do this:</source>
          <target state="translated">Markdown支持为URL和电子邮件地址创建&amp;ldquo;自动&amp;rdquo;链接的快捷方式：只需用尖括号将URL或电子邮件地址括起来即可。这意味着如果您想显示URL或电子邮件地址的实际文本，并且还希望将其作为可点击的链接，则可以执行以下操作：</target>
        </trans-unit>
        <trans-unit id="2d72a50b494d4c854c7f1a823289218083dcdfe5" translate="yes" xml:space="preserve">
          <source>Markdown supports ordered (numbered) and unordered (bulleted) lists.</source>
          <target state="translated">Markdown支持有序(编号)和无序(子弹)列表。</target>
        </trans-unit>
        <trans-unit id="f11174e516b39f10632812ec05b8564952938601" translate="yes" xml:space="preserve">
          <source>Markdown supports two style of links: &lt;em&gt;inline&lt;/em&gt; and &lt;em&gt;reference&lt;/em&gt;.</source>
          <target state="translated">Markdown支持两种链接样式：&lt;em&gt;inline&lt;/em&gt;和&lt;em&gt;reference&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="2183b015c0f3e61939e0166f08c13e399f626c21" translate="yes" xml:space="preserve">
          <source>Markdown supports two styles of headers, &lt;a href=&quot;http://docutils.sourceforge.net/mirror/setext.html&quot;&gt;Setext&lt;/a&gt; and &lt;a href=&quot;http://www.aaronsw.com/2002/atx/&quot;&gt;atx&lt;/a&gt;.</source>
          <target state="translated">Markdown支持两种样式的头文件：&lt;a href=&quot;http://docutils.sourceforge.net/mirror/setext.html&quot;&gt;Setext&lt;/a&gt;和&lt;a href=&quot;http://www.aaronsw.com/2002/atx/&quot;&gt;atx&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="739cfd72329e888251033923cdcbc244ee6c0ab2" translate="yes" xml:space="preserve">
          <source>Markdown treats asterisks (&lt;code&gt;*&lt;/code&gt;) and underscores (&lt;code&gt;_&lt;/code&gt;) as indicators of emphasis. Text wrapped with one &lt;code&gt;*&lt;/code&gt; or &lt;code&gt;_&lt;/code&gt; will be wrapped with an HTML &lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt; tag; double &lt;code&gt;*&lt;/code&gt;&amp;rsquo;s or &lt;code&gt;_&lt;/code&gt;&amp;rsquo;s will be wrapped with an HTML &lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt; tag. E.g., this input:</source>
          <target state="translated">Markdown将星号（ &lt;code&gt;*&lt;/code&gt; ）和下划线（ &lt;code&gt;_&lt;/code&gt; ）视为重点指示。用 &lt;code&gt;*&lt;/code&gt; 或 &lt;code&gt;_&lt;/code&gt; 换行的文本将用HTML &lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt; 标记换行；双 &lt;code&gt;*&lt;/code&gt; 或 &lt;code&gt;_&lt;/code&gt; 会被HTML &lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt; 标记包裹。例如，此输入：</target>
        </trans-unit>
        <trans-unit id="109cafaee6f5ae526456328e6a9cc0bd95104652" translate="yes" xml:space="preserve">
          <source>Markdown uses an image syntax that is intended to resemble the syntax for links, allowing for two styles: &lt;em&gt;inline&lt;/em&gt; and &lt;em&gt;reference&lt;/em&gt;.</source>
          <target state="translated">Markdown使用一种类似于链接语法的图像语法，允许两种样式：&lt;em&gt;inline&lt;/em&gt;和&lt;em&gt;reference&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="47c88c4082fe1a7bfe78ca8dc4b42bb8cb482d9d" translate="yes" xml:space="preserve">
          <source>Markdown uses email-style &lt;code&gt;&amp;gt;&lt;/code&gt; characters for blockquoting. If you&amp;rsquo;re familiar with quoting passages of text in an email message, then you know how to create a blockquote in Markdown. It looks best if you hard wrap the text and put a &lt;code&gt;&amp;gt;&lt;/code&gt; before every line:</source>
          <target state="translated">Markdown使用电子邮件样式 &lt;code&gt;&amp;gt;&lt;/code&gt; 字符进行块引用。如果您熟悉在电子邮件中引用文本段落的内容，那么您将知道如何在Markdown中创建blockquote。如果将文本硬包装并在每行之前添加 &lt;code&gt;&amp;gt;&lt;/code&gt; ，则看起来最好：</target>
        </trans-unit>
        <trans-unit id="73ea7a6e5368fe855c7d7d5d589b809544fb68e0" translate="yes" xml:space="preserve">
          <source>Markdown will generate:</source>
          <target state="translated">Markdown将生成。</target>
        </trans-unit>
        <trans-unit id="d3693e344e48b5e3510f30880f28e0579e9dc898" translate="yes" xml:space="preserve">
          <source>Markdown will translate it to:</source>
          <target state="translated">Markdown会把它翻译成。</target>
        </trans-unit>
        <trans-unit id="956aaeb0a1e940a4eb0012b00e3cbf46c9ffc27d" translate="yes" xml:space="preserve">
          <source>Markdown will turn this into:</source>
          <target state="translated">Markdown会把这个变成。</target>
        </trans-unit>
        <trans-unit id="3f51ce3e5b69ca05c2e4ea0ac0dee16417759485" translate="yes" xml:space="preserve">
          <source>Markdown&amp;rsquo;s syntax is intended for one purpose: to be used as a format for &lt;em&gt;writing&lt;/em&gt; for the web.</source>
          <target state="translated">Markdown的语法仅用于一个目的：用作Web &lt;em&gt;编写&lt;/em&gt;的格式。</target>
        </trans-unit>
        <trans-unit id="5f2cbd107037ed23248e5058a7a64cd6bae05468" translate="yes" xml:space="preserve">
          <source>Miscellaneous</source>
          <target state="translated">Miscellaneous</target>
        </trans-unit>
        <trans-unit id="540ed7819e3db742046278c5887b21ef9b6263a3" translate="yes" xml:space="preserve">
          <source>Note that Markdown formatting syntax is not processed within block-level HTML tags. E.g., you can&amp;rsquo;t use Markdown-style &lt;code&gt;*emphasis*&lt;/code&gt; inside an HTML block.</source>
          <target state="translated">请注意，Markdown格式语法不会在块级HTML标记中处理。例如，您不能在HTML块中使用Markdown样式 &lt;code&gt;*emphasis*&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4baee9739eb4b2099b8367549c2c99420b0f5465" translate="yes" xml:space="preserve">
          <source>One level of indentation &amp;mdash; 4 spaces or 1 tab &amp;mdash; is removed from each line of the code block. For example, this:</source>
          <target state="translated">从代码块的每一行中删除了一个缩进级别（4个空格或1个制表符）。例如，这：</target>
        </trans-unit>
        <trans-unit id="9c466b4dba415c271d16384485593c218e0be40e" translate="yes" xml:space="preserve">
          <source>Optionally, you may &amp;ldquo;close&amp;rdquo; atx-style headers. This is purely cosmetic &amp;mdash; you can use this if you think it looks better. The closing hashes don&amp;rsquo;t even need to match the number of hashes used to open the header. (The number of opening hashes determines the header level.) :</source>
          <target state="translated">（可选）您可以&amp;ldquo;关闭&amp;rdquo; atx样式的标题。这纯粹是装饰性的-如果您认为它看起来更好，则可以使用它。封闭的哈希甚至不需要匹配用于打开标题的哈希数。（哈希散列的数量确定标题的级别。）：</target>
        </trans-unit>
        <trans-unit id="429f881166ab401a34e0dcfd463bce9725c202a0" translate="yes" xml:space="preserve">
          <source>Ordered lists use numbers followed by periods:</source>
          <target state="translated">有序列表使用数字后加句号。</target>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">Overview</target>
        </trans-unit>
        <trans-unit id="785069bd6fde247fc331c1a7b64613cad3303de9" translate="yes" xml:space="preserve">
          <source>Paragraphs and Line Breaks</source>
          <target state="translated">段落和换行</target>
        </trans-unit>
        <trans-unit id="496e9438ab65557e3360c256d99d6d71460da8a3" translate="yes" xml:space="preserve">
          <source>Philosophy</source>
          <target state="translated">Philosophy</target>
        </trans-unit>
        <trans-unit id="63bed2e2fd41ce8a350d398bdeaaefaafd0b5b21" translate="yes" xml:space="preserve">
          <source>Pre-formatted code blocks are used for writing about programming or markup source code. Rather than forming normal paragraphs, the lines of a code block are interpreted literally. Markdown wraps a code block in both &lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;code&amp;gt;&lt;/code&gt; tags.</source>
          <target state="translated">预格式化的代码块用于编写有关编程或标记源代码的代码。而不是形成普通的段落，而是直接解释代码块的行。Markdown在 &lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt; 和 &lt;code&gt;&amp;lt;code&amp;gt;&lt;/code&gt; 标记中包装了一个代码块。</target>
        </trans-unit>
        <trans-unit id="9dc6a97873ba8f7fa69ccc466981976b38979df8" translate="yes" xml:space="preserve">
          <source>Readability, however, is emphasized above all else. A Markdown-formatted document should be publishable as-is, as plain text, without looking like it&amp;rsquo;s been marked up with tags or formatting instructions. While Markdown&amp;rsquo;s syntax has been influenced by several existing text-to-HTML filters &amp;mdash; including &lt;a href=&quot;http://docutils.sourceforge.net/mirror/setext.html&quot;&gt;Setext&lt;/a&gt;, &lt;a href=&quot;http://www.aaronsw.com/2002/atx/&quot;&gt;atx&lt;/a&gt;, &lt;a href=&quot;http://textism.com/tools/textile/&quot;&gt;Textile&lt;/a&gt;, &lt;a href=&quot;http://docutils.sourceforge.net/rst.html&quot;&gt;reStructuredText&lt;/a&gt;, &lt;a href=&quot;http://www.triptico.com/software/grutatxt.html&quot;&gt;Grutatext&lt;/a&gt;, and &lt;a href=&quot;http://ettext.taint.org/doc/&quot;&gt;EtText&lt;/a&gt; &amp;mdash; the single biggest source of inspiration for Markdown&amp;rsquo;s syntax is the format of plain text email.</source>
          <target state="translated">但是，首先要强调可读性。Markdown格式的文档应以纯文本形式原样发布，而不会看起来像被标签或格式说明所标记。虽然Markdown的语法受到了几种现有的文本到HTML过滤器的影响，包括&lt;a href=&quot;http://docutils.sourceforge.net/mirror/setext.html&quot;&gt;Setext&lt;/a&gt;，&lt;a href=&quot;http://www.aaronsw.com/2002/atx/&quot;&gt;atx&lt;/a&gt;，&lt;a href=&quot;http://textism.com/tools/textile/&quot;&gt;Textile&lt;/a&gt;，&lt;a href=&quot;http://docutils.sourceforge.net/rst.html&quot;&gt;reStructuredText&lt;/a&gt;，&lt;a href=&quot;http://www.triptico.com/software/grutatxt.html&quot;&gt;Grutatext&lt;/a&gt;和&lt;a href=&quot;http://ettext.taint.org/doc/&quot;&gt;EtText&lt;/a&gt;，但Markdown语法的最大灵感来源就是纯文本电子邮件的格式。</target>
        </trans-unit>
        <trans-unit id="4afbe0b0955d5463e4e2d856e179f16399a0e868" translate="yes" xml:space="preserve">
          <source>Reference-style image syntax looks like this:</source>
          <target state="translated">参考风格的图像语法是这样的。</target>
        </trans-unit>
        <trans-unit id="422b835df5cb239a162359ee6a9a219b7161367d" translate="yes" xml:space="preserve">
          <source>Reference-style links use a second set of square brackets, inside which you place a label of your choosing to identify the link:</source>
          <target state="translated">参考式链接使用第二组方括号,在方括号内放置一个您选择的标签,以识别链接。</target>
        </trans-unit>
        <trans-unit id="20fbc7a879c7a7be33ab1f567dbf0049bf537562" translate="yes" xml:space="preserve">
          <source>Regular Markdown syntax is not processed within code blocks. E.g., asterisks are just literal asterisks within a code block. This means it&amp;rsquo;s also easy to use Markdown to write about Markdown&amp;rsquo;s own syntax.</source>
          <target state="translated">常规Markdown语法未在代码块内处理。例如，星号只是代码块中的文字星号。这意味着使用Markdown编写Markdown自己的语法也很容易。</target>
        </trans-unit>
        <trans-unit id="ee90ced7f7e1f2056d6c10143291e05385bbb61a" translate="yes" xml:space="preserve">
          <source>Setext-style headers are &amp;ldquo;underlined&amp;rdquo; using equal signs (for first-level headers) and dashes (for second-level headers). For example:</source>
          <target state="translated">Setext样式的标头使用等号（对于第一级标头）和破折号（对于第二级标头）&amp;ldquo;加下划线&amp;rdquo;。例如：</target>
        </trans-unit>
        <trans-unit id="fbcbd97e84e3e120d3c4f8a3a9e65a03d95d4aba" translate="yes" xml:space="preserve">
          <source>Similarly, because Markdown supports &lt;a href=&quot;#html&quot;&gt;inline HTML&lt;/a&gt;, if you use angle brackets as delimiters for HTML tags, Markdown will treat them as such. But if you write:</source>
          <target state="translated">同样，由于Markdown支持&lt;a href=&quot;#html&quot;&gt;内联HTML&lt;/a&gt;，如果您将尖括号用作HTML标签的定界符，则Markdown会将其视为此类。但是，如果您写：</target>
        </trans-unit>
        <trans-unit id="6cf632536056435e3d3e911d767519b939704724" translate="yes" xml:space="preserve">
          <source>So, if you want to include a copyright symbol in your article, you can write:</source>
          <target state="translated">所以,如果你想在文章中加入版权符号,你可以写。</target>
        </trans-unit>
        <trans-unit id="abf5bcbf5e5665c6e156e84cc849c4ef4dfac536" translate="yes" xml:space="preserve">
          <source>Span Elements</source>
          <target state="translated">跨度元素</target>
        </trans-unit>
        <trans-unit id="e9b860ff75a2e946e63f82bed2f657d3000aea22" translate="yes" xml:space="preserve">
          <source>Span-level HTML tags &amp;mdash; e.g. &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;cite&amp;gt;&lt;/code&gt;, or &lt;code&gt;&amp;lt;del&amp;gt;&lt;/code&gt; &amp;mdash; can be used anywhere in a Markdown paragraph, list item, or header. If you want, you can even use HTML tags instead of Markdown formatting; e.g. if you&amp;rsquo;d prefer to use HTML &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; tags instead of Markdown&amp;rsquo;s link or image syntax, go right ahead.</source>
          <target state="translated">跨度级别的HTML标记（例如 &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; ， &lt;code&gt;&amp;lt;cite&amp;gt;&lt;/code&gt; 或 &lt;code&gt;&amp;lt;del&amp;gt;&lt;/code&gt; ）可以在Markdown段落，列表项或标题中的任何位置使用。如果需要，甚至可以使用HTML标记而不是Markdown格式。例如，如果您希望使用HTML &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; 或 &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; 标记而不是Markdown的链接或图像语法，请继续。</target>
        </trans-unit>
        <trans-unit id="2c0a203fbf1955da31d924696d4cd269a5cb3056" translate="yes" xml:space="preserve">
          <source>Square brackets containing the link identifier (optionally indented from the left margin using up to three spaces);</source>
          <target state="translated">包含链接标识符的方括号(可选择从左边缩进,最多三个空格)。</target>
        </trans-unit>
        <trans-unit id="11e8a09abfceb997eddb8423e1781ebd95db28e7" translate="yes" xml:space="preserve">
          <source>That is:</source>
          <target state="translated">那就是:</target>
        </trans-unit>
        <trans-unit id="a89b046d626104f9b781fb7eb34b2998c9d46ce4" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;implicit link name&lt;/em&gt; shortcut allows you to omit the name of the link, in which case the link text itself is used as the name. Just use an empty set of square brackets &amp;mdash; e.g., to link the word &amp;ldquo;Google&amp;rdquo; to the google.com web site, you could simply write:</source>
          <target state="translated">在&lt;em&gt;隐式链接名称&lt;/em&gt;快捷键可以让你忽略的链接，在这种情况下，链接文本本身作为名称的名称。只需使用一组空的方括号-例如，将&amp;ldquo; Google&amp;rdquo;一词链接到google.com网站，您可以简单地编写：</target>
        </trans-unit>
        <trans-unit id="ddd86d95d7c2a50ec3a5899fbccd01ee555a94c1" translate="yes" xml:space="preserve">
          <source>The backtick delimiters surrounding a code span may include spaces &amp;mdash; one after the opening, one before the closing. This allows you to place literal backtick characters at the beginning or end of a code span:</source>
          <target state="translated">围绕代码范围的反引号分隔符可以包含空格-一个在打开之后，一个在关闭之前。这使您可以将原义的反引号字符放在代码段的开头或结尾：</target>
        </trans-unit>
        <trans-unit id="a25c1c64959c5df35f2194e9661c372cf05505da" translate="yes" xml:space="preserve">
          <source>The following three link definitions are equivalent:</source>
          <target state="translated">以下三个环节的定义是等同的。</target>
        </trans-unit>
        <trans-unit id="ad008fb6ff3f95e20172c473d13e9612def5397d" translate="yes" xml:space="preserve">
          <source>The implication of the &amp;ldquo;one or more consecutive lines of text&amp;rdquo; rule is that Markdown supports &amp;ldquo;hard-wrapped&amp;rdquo; text paragraphs. This differs significantly from most other text-to-HTML formatters (including Movable Type&amp;rsquo;s &amp;ldquo;Convert Line Breaks&amp;rdquo; option) which translate every line break character in a paragraph into a &lt;code&gt;&amp;lt;br /&amp;gt;&lt;/code&gt; tag.</source>
          <target state="translated">&amp;ldquo;一或多个连续文本行&amp;rdquo;规则的含义是Markdown支持&amp;ldquo;硬包装&amp;rdquo;文本段落。这与大多数其他文本到HTML格式器（包括Movable Type的&amp;ldquo;转换换行符&amp;rdquo;选项）有很大不同，后者将段落中的每个换行符转换为 &lt;code&gt;&amp;lt;br /&amp;gt;&lt;/code&gt; 标记。</target>
        </trans-unit>
        <trans-unit id="6125db63a9ede38a629c4c310fa6c3c9ef34c5f6" translate="yes" xml:space="preserve">
          <source>The link URL may, optionally, be surrounded by angle brackets:</source>
          <target state="translated">链接URL可以选择用角括号包围。</target>
        </trans-unit>
        <trans-unit id="696b88d54d46942a32cc63cb4ba938dd6c935866" translate="yes" xml:space="preserve">
          <source>The only restrictions are that block-level HTML elements &amp;mdash; e.g. &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt;, etc. &amp;mdash; must be separated from surrounding content by blank lines, and the start and end tags of the block should not be indented with tabs or spaces. Markdown is smart enough not to add extra (unwanted) &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; tags around HTML block-level tags.</source>
          <target state="translated">唯一的限制是，块级HTML元素（例如 &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; ， &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; ， &lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt; ， &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; 等）必须与周围的内容用空行分开，并且块的开始和结束标签不应使用制表符或空格缩进。 Markdown非常聪明，不会在HTML块级标签周围添加额外的（不需要的） &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; 标签。</target>
        </trans-unit>
        <trans-unit id="9abdc0d6490a38b1a77abed653610fc87d0fd8ad" translate="yes" xml:space="preserve">
          <source>The point of reference-style links is not that they&amp;rsquo;re easier to write. The point is that with reference-style links, your document source is vastly more readable. Compare the above examples: using reference-style links, the paragraph itself is only 81 characters long; with inline-style links, it&amp;rsquo;s 176 characters; and as raw HTML, it&amp;rsquo;s 234 characters. In the raw HTML, there&amp;rsquo;s more markup than there is text.</source>
          <target state="translated">引用样式的链接并不是要更容易编写。关键是通过引用样式的链接，文档源的可读性大大提高。比较上面的示例：使用引用样式的链接，段落本身只有81个字符；带有内联样式的链接，为176个字符；作为原始HTML，它是234个字符。在原始HTML中，标记多于文本。</target>
        </trans-unit>
        <trans-unit id="d7fdbca9e8e9ea917a83c9e40644c6afa5265f43" translate="yes" xml:space="preserve">
          <source>Then, anywhere in the document, you define your link label like this, on a line by itself:</source>
          <target state="translated">然后,在文档中的任何地方,你可以这样定义你的链接标签,单独一行。</target>
        </trans-unit>
        <trans-unit id="af974e363edf0f5134e48a7a8cf2f8708119807a" translate="yes" xml:space="preserve">
          <source>To create an inline link, use a set of regular parentheses immediately after the link text&amp;rsquo;s closing square bracket. Inside the parentheses, put the URL where you want the link to point, along with an &lt;em&gt;optional&lt;/em&gt; title for the link, surrounded in quotes. For example:</source>
          <target state="translated">要创建内联链接，请在链接文本的右方括号后立即使用一组常规括号。在括号内，将URL指向链接要指向的位置，以及链接的&lt;em&gt;可选&lt;/em&gt;标题，并用引号引起来。例如：</target>
        </trans-unit>
        <trans-unit id="c317653ea87843d2941407ecbd587dfe617de2e9" translate="yes" xml:space="preserve">
          <source>To include a literal backtick character within a code span, you can use multiple backticks as the opening and closing delimiters:</source>
          <target state="translated">要在一个代码跨度内包含一个字面反斜线字符,你可以使用多个反斜线作为开头和结尾的定界符。</target>
        </trans-unit>
        <trans-unit id="78db9fec9bb64edc346fd3229e5056435ebbda9b" translate="yes" xml:space="preserve">
          <source>To indicate a span of code, wrap it with backtick quotes (&lt;code&gt;`&lt;/code&gt;). Unlike a pre-formatted code block, a code span indicates code within a normal paragraph. For example:</source>
          <target state="translated">要指示代码范围，请用反引号引起来（ &lt;code&gt;`&lt;/code&gt; ）。与预格式化的代码块不同，代码跨度指示正常段落中的代码。例如：</target>
        </trans-unit>
        <trans-unit id="1129c4fc38eb2add8558fd30931f69a828d8d5a9" translate="yes" xml:space="preserve">
          <source>To make lists look nice, you can wrap items with hanging indents:</source>
          <target state="translated">为了让列表看起来更漂亮,你可以用悬挂式缩进包住项目。</target>
        </trans-unit>
        <trans-unit id="64393ec3c89de453098d4291beaa9f15263b912c" translate="yes" xml:space="preserve">
          <source>To produce a code block in Markdown, simply indent every line of the block by at least 4 spaces or 1 tab. For example, given this input:</source>
          <target state="translated">要在Markdown中生成一个代码块,只需将代码块的每一行缩进至少4个空格或1个制表符。例如,给定这个输入。</target>
        </trans-unit>
        <trans-unit id="b638787262478de1e0b32efb27eedc4c068b7b0e" translate="yes" xml:space="preserve">
          <source>To produce a literal asterisk or underscore at a position where it would otherwise be used as an emphasis delimiter, you can backslash escape it:</source>
          <target state="translated">要在本应作为强调分隔符的位置产生一个星号或下划线,你可以用反斜杠转义。</target>
        </trans-unit>
        <trans-unit id="4600a74cdae1b2acf818a8c64c3d0fcac002945b" translate="yes" xml:space="preserve">
          <source>To put a blockquote within a list item, the blockquote&amp;rsquo;s &lt;code&gt;&amp;gt;&lt;/code&gt; delimiters need to be indented:</source>
          <target state="translated">要在列表项中放入块引号，需要缩进块引号的 &lt;code&gt;&amp;gt;&lt;/code&gt; 分隔符：</target>
        </trans-unit>
        <trans-unit id="ad4c9c3c9140148a2cfbb5e5b2ac17186c81c7f6" translate="yes" xml:space="preserve">
          <source>To put a code block within a list item, the code block needs to be indented &lt;em&gt;twice&lt;/em&gt; &amp;mdash; 8 spaces or two tabs:</source>
          <target state="translated">要将代码块放入列表项中，该代码块需要缩进&lt;em&gt;两次&lt;/em&gt; -8个空格或两个制表符：</target>
        </trans-unit>
        <trans-unit id="a8210f71a9fc6ea563ec2acb672d3f127cea6a7e" translate="yes" xml:space="preserve">
          <source>To this end, Markdown&amp;rsquo;s syntax is comprised entirely of punctuation characters, which punctuation characters have been carefully chosen so as to look like what they mean. E.g., asterisks around a word actually look like *emphasis*. Markdown lists look like, well, lists. Even blockquotes look like quoted passages of text, assuming you&amp;rsquo;ve ever used email.</source>
          <target state="translated">为此，Markdown的语法完全由标点符号组成，这些标点符号经过精心选择，以使其看起来像它们的含义。例如，单词周围的星号实际上看起来像*强调*。Markdown列表看起来很像列表。假设您曾经使用过电子邮件，即使是块引用也看起来像是引用的文本段落。</target>
        </trans-unit>
        <trans-unit id="482545e20c9b658bd5c0422841a52f96fd55a71c" translate="yes" xml:space="preserve">
          <source>Unlike block-level HTML tags, Markdown syntax &lt;em&gt;is&lt;/em&gt; processed within span-level tags.</source>
          <target state="translated">不同于块级HTML标签，降价语法&lt;em&gt;是&lt;/em&gt;跨度级标签内进行处理。</target>
        </trans-unit>
        <trans-unit id="8629a43527178d06f33827ae98aeefe87595c470" translate="yes" xml:space="preserve">
          <source>Unordered lists use asterisks, pluses, and hyphens &amp;mdash; interchangably &amp;mdash; as list markers:</source>
          <target state="translated">无序列表使用星号，加号和连字符（可互换）作为列表标记：</target>
        </trans-unit>
        <trans-unit id="d6790749931892e153421be5ae64496b3d2ae4c2" translate="yes" xml:space="preserve">
          <source>Using the implicit link name shortcut, you could instead write:</source>
          <target state="translated">使用隐式链接名快捷方式,你可以改写。</target>
        </trans-unit>
        <trans-unit id="12dccb24dcbb30916556854946eaa0e9d1ea8896" translate="yes" xml:space="preserve">
          <source>When you &lt;em&gt;do&lt;/em&gt; want to insert a &lt;code&gt;&amp;lt;br /&amp;gt;&lt;/code&gt; break tag using Markdown, you end a line with two or more spaces, then type return.</source>
          <target state="translated">当您&lt;em&gt;确实&lt;/em&gt;想使用Markdown 插入 &lt;code&gt;&amp;lt;br /&amp;gt;&lt;/code&gt; break标记时，请以两个或多个空格结束一行，然后键入return。</target>
        </trans-unit>
        <trans-unit id="cf79f7a1280e5c70ed6ce7f00d9c83f2283b42d4" translate="yes" xml:space="preserve">
          <source>Where &amp;ldquo;id&amp;rdquo; is the name of a defined image reference. Image references are defined using syntax identical to link references:</source>
          <target state="translated">其中&amp;ldquo; id&amp;rdquo;是已定义图像参考的名称。使用与链接引用相同的语法来定义图像引用：</target>
        </trans-unit>
        <trans-unit id="8af1dddd6c2192a020edaa51d45191a8693034d0" translate="yes" xml:space="preserve">
          <source>Will produce:</source>
          <target state="translated">会产生。</target>
        </trans-unit>
        <trans-unit id="0109e186e9708f53237ceda58c2c319ac0c86b4e" translate="yes" xml:space="preserve">
          <source>With Markdown&amp;rsquo;s reference-style links, a source document much more closely resembles the final output, as rendered in a browser. By allowing you to move the markup-related metadata out of the paragraph, you can add links without interrupting the narrative flow of your prose.</source>
          <target state="translated">借助Markdown的引用样式链接，源文档与浏览器中呈现的最终输出更加相似。通过允许您将与标记相关的元数据移出段落，您可以添加链接而不会中断散文的叙述流程。</target>
        </trans-unit>
        <trans-unit id="2e07aa11873ab8a78c67abad383a1f46bb80ff39" translate="yes" xml:space="preserve">
          <source>With a code span, ampersands and angle brackets are encoded as HTML entities automatically, which makes it easy to include example HTML tags. Markdown will turn this:</source>
          <target state="translated">有了代码跨度,安括号和角括号会自动编码为HTML实体,这使得它很容易包含HTML标签的例子。Markdown会把这。</target>
        </trans-unit>
        <trans-unit id="30fa99acb63412ed6fe7830a97c835516b278b04" translate="yes" xml:space="preserve">
          <source>Within a code block, ampersands (&lt;code&gt;&amp;amp;&lt;/code&gt;) and angle brackets (&lt;code&gt;&amp;lt;&lt;/code&gt; and &lt;code&gt;&amp;gt;&lt;/code&gt;) are automatically converted into HTML entities. This makes it very easy to include example HTML source code using Markdown &amp;mdash; just paste it and indent it, and Markdown will handle the hassle of encoding the ampersands and angle brackets. For example, this:</source>
          <target state="translated">在代码块内，&amp;ldquo; &lt;code&gt;&amp;amp;&lt;/code&gt; （＆）和尖括号（ &lt;code&gt;&amp;lt;&lt;/code&gt; 和 &lt;code&gt;&amp;gt;&lt;/code&gt; ）将自动转换为HTML实体。这使得使用Markdown包含示例HTML源代码变得非常容易-只需粘贴并缩进即可，Markdown将解决对＆符号和尖括号进行编码的麻烦。例如，这：</target>
        </trans-unit>
        <trans-unit id="1917b1121856ba6448d997e21f0da88c17960d7b" translate="yes" xml:space="preserve">
          <source>Yes, this takes a tad more effort to create a &lt;code&gt;&amp;lt;br /&amp;gt;&lt;/code&gt;, but a simplistic &amp;ldquo;every line break is a &lt;code&gt;&amp;lt;br /&amp;gt;&lt;/code&gt;&amp;rdquo; rule wouldn&amp;rsquo;t work for Markdown. Markdown&amp;rsquo;s email-style &lt;a href=&quot;#blockquote&quot;&gt;blockquoting&lt;/a&gt; and multi-paragraph &lt;a href=&quot;#list&quot;&gt;list items&lt;/a&gt; work best &amp;mdash; and look better &amp;mdash; when you format them with hard breaks.</source>
          <target state="translated">是的，创建 &lt;code&gt;&amp;lt;br /&amp;gt;&lt;/code&gt; 会花费更多的精力，但是简单的&amp;ldquo;每个换行符都是 &lt;code&gt;&amp;lt;br /&amp;gt;&lt;/code&gt; &amp;rdquo;规则对Markdown不起作用。Markdown的电子邮件样式的块&lt;a href=&quot;#blockquote&quot;&gt;引用&lt;/a&gt;和多段落&lt;a href=&quot;#list&quot;&gt;列表项&lt;/a&gt;在经过艰苦的格式化后，效果最好，并且看起来更好。</target>
        </trans-unit>
        <trans-unit id="db9008b860529587429158d862f44ec88aae7b8b" translate="yes" xml:space="preserve">
          <source>You can optionally use a space to separate the sets of brackets:</source>
          <target state="translated">您可以选择使用空格来分隔各组括号。</target>
        </trans-unit>
        <trans-unit id="adc8e4edceaac4f90d42e74810f4d0762808bd31" translate="yes" xml:space="preserve">
          <source>You can produce a horizontal rule tag (&lt;code&gt;&amp;lt;hr /&amp;gt;&lt;/code&gt;) by placing three or more hyphens, asterisks, or underscores on a line by themselves. If you wish, you may use spaces between the hyphens or asterisks. Each of the following lines will produce a horizontal rule:</source>
          <target state="translated">您可以通过在一行上单独放置三个或更多连字符，星号或下划线来产生水平规则标记（ &lt;code&gt;&amp;lt;hr /&amp;gt;&lt;/code&gt; ）。如果需要，可以在连字符或星号之间使用空格。以下各行将产生一条水平线：</target>
        </trans-unit>
        <trans-unit id="1b56d127649dcd1b69201318ebba33e36600494e" translate="yes" xml:space="preserve">
          <source>You can put the title attribute on the next line and use extra spaces or tabs for padding, which tends to look better with longer URLs:</source>
          <target state="translated">你可以把标题属性放在下一行,并使用额外的空格或制表符来填充,这往往会使较长的URL看起来更好。</target>
        </trans-unit>
        <trans-unit id="328b956e40eb12ec24c6f2c3809db3a23e5de1e9" translate="yes" xml:space="preserve">
          <source>You can use whichever style you prefer; the lone restriction is that the same character must be used to open and close an emphasis span.</source>
          <target state="translated">你可以使用任何你喜欢的样式;唯一的限制是,必须使用同一个字符来打开和关闭一个强调跨度。</target>
        </trans-unit>
        <trans-unit id="a37df7bee592eed386f6ca51fdfc387e3d9d9a32" translate="yes" xml:space="preserve">
          <source>You can write this:</source>
          <target state="translated">你可以写这个。</target>
        </trans-unit>
        <trans-unit id="eb6597079c9c41dae265173a57ce1842ad3f2fba" translate="yes" xml:space="preserve">
          <source>and Markdown will leave it alone. But if you write:</source>
          <target state="translated">Markdown就会不管它。但如果你写</target>
        </trans-unit>
        <trans-unit id="a5230bf3ac1fc697c044aa12dc9e2fb2c6ea3dcf" translate="yes" xml:space="preserve">
          <source>and:</source>
          <target state="translated">and:</target>
        </trans-unit>
        <trans-unit id="e92e297a095229e3f96eb7b8a2c0f594650ed356" translate="yes" xml:space="preserve">
          <source>are equivalent.</source>
          <target state="translated">是等价的。</target>
        </trans-unit>
        <trans-unit id="f3307e5c2184356d282b7d4251634b3517eccc85" translate="yes" xml:space="preserve">
          <source>followed by a colon;</source>
          <target state="translated">后面是冒号。</target>
        </trans-unit>
        <trans-unit id="c8ad18cca3b55d330f961d3dd8ffa637236f14a0" translate="yes" xml:space="preserve">
          <source>followed by a set of parentheses, containing the URL or path to the image, and an optional &lt;code&gt;title&lt;/code&gt; attribute enclosed in double or single quotes.</source>
          <target state="translated">后跟一组括号，其中包含图像的URL或路径，以及用双引号或单引号引起来的可选 &lt;code&gt;title&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="9a97980dac77e35eef281c5447c26fb57c4157d1" translate="yes" xml:space="preserve">
          <source>followed by a set of square brackets, containing the &lt;code&gt;alt&lt;/code&gt; attribute text for the image;</source>
          <target state="translated">随后是一组方括号，其中包含图像的 &lt;code&gt;alt&lt;/code&gt; 属性文本；</target>
        </trans-unit>
        <trans-unit id="47fd4359932de7c33251ad03b112d728fa146087" translate="yes" xml:space="preserve">
          <source>followed by one or more spaces (or tabs);</source>
          <target state="translated">后面有一个或多个空格(或制表符)。</target>
        </trans-unit>
        <trans-unit id="977743aca6d254406555e2948b617fb3895ac215" translate="yes" xml:space="preserve">
          <source>followed by the URL for the link;</source>
          <target state="translated">后面是链接的URL。</target>
        </trans-unit>
        <trans-unit id="50c36b78b17cd1e22d05283f105e72d71a278203" translate="yes" xml:space="preserve">
          <source>in your anchor tag &lt;code&gt;href&lt;/code&gt; attribute. Needless to say, this is easy to forget, and is probably the single most common source of HTML validation errors in otherwise well-marked-up web sites.</source>
          <target state="translated">在您的锚标签 &lt;code&gt;href&lt;/code&gt; 属性中。不用说，这很容易忘记，并且可能是标记明确的网站中最常见的HTML验证错误来源。</target>
        </trans-unit>
        <trans-unit id="00cc35fd55c9ce998c5df2c6ff4968db559d06e7" translate="yes" xml:space="preserve">
          <source>into something like this:</source>
          <target state="translated">成这样的东西。</target>
        </trans-unit>
        <trans-unit id="ae629e0254b0e6298a4ef8e35d54e657dba140ad" translate="yes" xml:space="preserve">
          <source>into:</source>
          <target state="translated">into:</target>
        </trans-unit>
        <trans-unit id="18ab6ac7001b131bc4dc74bd619c612205dff372" translate="yes" xml:space="preserve">
          <source>is equivalent to:</source>
          <target state="translated">相当于:</target>
        </trans-unit>
        <trans-unit id="22b4fc3f2cd7f9b88323f9da8412f225e2c5c784" translate="yes" xml:space="preserve">
          <source>optionally followed by a title attribute for the link, enclosed in double or single quotes, or enclosed in parentheses.</source>
          <target state="translated">后面跟着一个链接的标题属性,用双引号或单引号括起来,或者用括号括起来。</target>
        </trans-unit>
        <trans-unit id="7006b26f9c8f8d3e063ffcd613fdb2355cbc1ab6" translate="yes" xml:space="preserve">
          <source>or even:</source>
          <target state="translated">甚至。</target>
        </trans-unit>
        <trans-unit id="2765637872d6c7f4a1ea927f391035ddbc1954b7" translate="yes" xml:space="preserve">
          <source>to produce:</source>
          <target state="translated">要生产。</target>
        </trans-unit>
        <trans-unit id="8222bfd957b88f4f77050f917921bd92a15156fa" translate="yes" xml:space="preserve">
          <source>which will produce this:</source>
          <target state="translated">这将产生。</target>
        </trans-unit>
        <trans-unit id="15908a3dfe43f847b449b8cfa7f9f514cb0db711" translate="yes" xml:space="preserve">
          <source>which will render in a browser as a clickable link to &amp;ldquo;address@example.com&amp;rdquo;.</source>
          <target state="translated">它将在浏览器中呈现为指向&amp;ldquo; address@example.com&amp;rdquo;的可点击链接。</target>
        </trans-unit>
        <trans-unit id="332bb1c16e74014aa5e914635dddb04cc07228ad" translate="yes" xml:space="preserve">
          <source>will produce:</source>
          <target state="translated">会产生。</target>
        </trans-unit>
        <trans-unit id="b89333c0fd6b74aa751244d1f7ee6c372b91dfda" translate="yes" xml:space="preserve">
          <source>will turn into:</source>
          <target state="translated">将变成。</target>
        </trans-unit>
        <trans-unit id="591e43b7df9af4655762cc3bd4d0fe1af4b2f8da" translate="yes" xml:space="preserve">
          <source>you need to encode the URL as:</source>
          <target state="translated">你需要将URL编码为</target>
        </trans-unit>
        <trans-unit id="77a2bd9e35edf579adb0bcbd56c24e3c58003db2" translate="yes" xml:space="preserve">
          <source>you&amp;rsquo;d get the exact same HTML output. The point is, if you want to, you can use ordinal numbers in your ordered Markdown lists, so that the numbers in your source match the numbers in your published HTML. But if you want to be lazy, you don&amp;rsquo;t have to.</source>
          <target state="translated">您将获得完全相同的HTML输出。关键是，如果需要，可以在订购的Markdown列表中使用序数，以便源中的数字与已发布的HTML中的数字匹配。但是，如果您想变得懒惰，就不必这样做。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
