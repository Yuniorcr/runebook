<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="sqlite">
    <body>
      <group id="sqlite">
        <trans-unit id="a57714ccd156bf9e3f87fe308936736e98e591aa" translate="yes" xml:space="preserve">
          <source>A table-valued function, which provides read-only access to existing archives, either from the file-system or in-memory.</source>
          <target state="translated">一个表值函数,提供对现有档案的只读访问,可以从文件系统或内存中访问。</target>
        </trans-unit>
        <trans-unit id="a7fc019c02a91fed82d92a06336ce9b17ea402c2" translate="yes" xml:space="preserve">
          <source>A template loadable extension contains the following three elements:</source>
          <target state="translated">一个可加载的模板扩展包含以下三个元素。</target>
        </trans-unit>
        <trans-unit id="8ceeadc33088d54343486462a0c9aba5dbbc0128" translate="yes" xml:space="preserve">
          <source>A template virtual table implementation useful as a starting point for developers who want to write their own virtual tables</source>
          <target state="translated">一个模板虚拟表的实现,对于想要编写自己的虚拟表的开发者来说,可以作为一个起点。</target>
        </trans-unit>
        <trans-unit id="cab32d076f372c6b13570208a924360640dda14f" translate="yes" xml:space="preserve">
          <source>A temporary index is always used to hold the values of the right-hand side of an IN operator when that right-hand side is a list of values.</source>
          <target state="translated">当IN操作符的右侧是一个值的列表时,一个临时索引总是用来保存该右侧的值。</target>
        </trans-unit>
        <trans-unit id="ee92b6976c5d4721278b029adeafc2db008e6cdc" translate="yes" xml:space="preserve">
          <source>A term is a contiguous sequence of eligible characters, where eligible characters are all alphanumeric characters and all characters with Unicode codepoint values greater than or equal to 128. All other characters are discarded when splitting a document into terms. Their only contribution is to separate adjacent terms.</source>
          <target state="translated">一个术语是一个符合条件的字符的连续序列,其中符合条件的字符是所有字母数字字符和Unicode码点值大于或等于128的所有字符。当把一个文档分割成术语时,所有其他字符都会被丢弃。它们的唯一作用是分隔相邻的术语。</target>
        </trans-unit>
        <trans-unit id="bdd3e37ef65b6b87adc2cbe96c6048ce8be9f761" translate="yes" xml:space="preserve">
          <source>A text editor of the user's choice supporting UTF-8 text.</source>
          <target state="translated">用户选择的文本编辑器,支持UTF-8文本。</target>
        </trans-unit>
        <trans-unit id="739cfe03c5105216274ffacf61131b06ede6508f" translate="yes" xml:space="preserve">
          <source>A text value created by casting a blob that begins with the two bytes 0xFF and 0xFE, in either possible order, is inserted into an FTS3 table. For example:</source>
          <target state="translated">通过铸造一个以两个字节0xFF和0xFE开头的blob创建的文本值,以任何一种可能的顺序,插入到FTS3表中。例如:</target>
        </trans-unit>
        <trans-unit id="52d6801cd3f12d6898833bf9ca6bab5539cfae7b" translate="yes" xml:space="preserve">
          <source>A time string can be in any of the following formats:</source>
          <target state="translated">时间字符串可以是以下任何一种格式。</target>
        </trans-unit>
        <trans-unit id="5baef1cbe65cc15544cf0227fa29ee19d418c4ec" translate="yes" xml:space="preserve">
          <source>A time value can be in any of the following formats shown below. The value is usually a string, though it can be an integer or floating point number in the case of format 12.</source>
          <target state="translated">时间值可以是下列格式中的任何一种。该值通常是一个字符串,但在格式12的情况下,它可以是一个整数或浮点数。</target>
        </trans-unit>
        <trans-unit id="f8aa525971c9057cebec913efdec9452b2a87880" translate="yes" xml:space="preserve">
          <source>A tokenizer is used that recognizes byte-order-marks as whitespace. (The default &quot;simple&quot; tokenizer for FTS3/4 does not think that BOMs are whitespace, but the unicode tokenizer does.)</source>
          <target state="translated">使用的标记器可以将字节顺序标记识别为空白。(FTS3/4的默认 &quot;简单 &quot;标记器不认为BOM是空白,但unicode标记器认为是空白)。</target>
        </trans-unit>
        <trans-unit id="0d86f49b9040272a60a55ad61e8ad5131c63f59c" translate="yes" xml:space="preserve">
          <source>A torn page occurs when a database page is larger than a disk sector, the database page is written to disk, but a power loss occurs prior to all sectors of the database page being written. Then, upon recovery, part of the database page will have the old content while some other parts of the page will have the new content. Some database engines assume that page writes are atomic and hence a torn page is an unrecoverable error.</source>
          <target state="translated">当数据库页面大于磁盘扇区时,就会发生撕页,数据库页面被写入磁盘,但在数据库页面的所有扇区被写入之前,发生了断电。那么,在恢复后,数据库页面的一部分会有旧的内容,而页面的其他一些部分会有新的内容。有些数据库引擎认为页面写入是原子性的,因此页面撕裂是一个不可恢复的错误。</target>
        </trans-unit>
        <trans-unit id="321b99cb3ca22320bc4d4754f57c85325a5439b8" translate="yes" xml:space="preserve">
          <source>A trace callback has four arguments: xCallback(T,C,P,X). The T argument is one of the integer type codes above. The C argument is a copy of the context pointer passed in as the fourth argument to &lt;a href=&quot;#sqlite3_trace_v2&quot;&gt;sqlite3_trace_v2()&lt;/a&gt;. The P and X arguments are pointers whose meanings depend on T.</source>
          <target state="translated">跟踪回调具有四个参数：xCallback（T，C，P，X）。T参数是上面的整数类型代码之一。C参数是作为第四个参数传递给&lt;a href=&quot;#sqlite3_trace_v2&quot;&gt;sqlite3_trace_v2（）&lt;/a&gt;的上下文指针的副本。P和X参数是指针，其含义取决于T。</target>
        </trans-unit>
        <trans-unit id="99f3aaaba3c5cbd27990154339c07e3ae8d754b2" translate="yes" xml:space="preserve">
          <source>A trace callback has four arguments: xCallback(T,C,P,X). The T argument is one of the integer type codes above. The C argument is a copy of the context pointer passed in as the fourth argument to &lt;a href=&quot;trace_v2&quot;&gt;sqlite3_trace_v2()&lt;/a&gt;. The P and X arguments are pointers whose meanings depend on T.</source>
          <target state="translated">跟踪回调具有四个参数：xCallback（T，C，P，X）。T参数是上面的整数类型代码之一。C参数是作为第四个参数传递给&lt;a href=&quot;trace_v2&quot;&gt;sqlite3_trace_v2（）&lt;/a&gt;的上下文指针的副本。P和X参数是指针，其含义取决于T。</target>
        </trans-unit>
        <trans-unit id="f8bfcc86c34516e1fd4709998e44b1f12ab7abe6" translate="yes" xml:space="preserve">
          <source>A trace callback is invoked with four arguments: callback(T,C,P,X). The T argument is one of the &lt;a href=&quot;#SQLITE_TRACE&quot;&gt;SQLITE_TRACE&lt;/a&gt; constants to indicate why the callback was invoked. The C argument is a copy of the context pointer. The P and X arguments are pointers whose meanings depend on T.</source>
          <target state="translated">使用四个参数调用跟踪回调：callback（T，C，P，X）。T参数是&lt;a href=&quot;#SQLITE_TRACE&quot;&gt;SQLITE_TRACE&lt;/a&gt;常量之一，用于指示调用回调的原因。C参数是上下文指针的副本。P和X参数是指针，其含义取决于T。</target>
        </trans-unit>
        <trans-unit id="3391a0e081f93a34b14f66af9af68c43e3c9b43e" translate="yes" xml:space="preserve">
          <source>A trace callback is invoked with four arguments: callback(T,C,P,X). The T argument is one of the &lt;a href=&quot;c_trace&quot;&gt;SQLITE_TRACE&lt;/a&gt; constants to indicate why the callback was invoked. The C argument is a copy of the context pointer. The P and X arguments are pointers whose meanings depend on T.</source>
          <target state="translated">使用四个参数调用跟踪回调：callback（T，C，P，X）。T参数是&lt;a href=&quot;c_trace&quot;&gt;SQLITE_TRACE&lt;/a&gt;常量之一，用于指示调用回调的原因。C参数是上下文指针的副本。P和X参数是指针，其含义取决于T。</target>
        </trans-unit>
        <trans-unit id="6f406be63849f147005f5bd90bb0cfb01b00b5d0" translate="yes" xml:space="preserve">
          <source>A transaction must be started before executing this opcode.</source>
          <target state="translated">在执行这个操作码之前,必须先启动一个事务。</target>
        </trans-unit>
        <trans-unit id="d659782eaca92197beb5705e0198423f0973c8e4" translate="yes" xml:space="preserve">
          <source>A transactional database is one in which all changes and queries appear to be Atomic, Consistent, Isolated, and Durable (&lt;a href=&quot;http://en.wikipedia.org/wiki/ACID&quot;&gt;ACID&lt;/a&gt;). SQLite implements &lt;a href=&quot;http://en.wikipedia.org/wiki/Serializability&quot;&gt;serializable&lt;/a&gt; transactions that are atomic, consistent, isolated, and durable, even if the transaction is interrupted by a program crash, an operating system crash, or a power failure to the computer.</source>
          <target state="translated">事务数据库是其中所有更改和查询似乎都是原子的，一致的，隔离的和持久的（&lt;a href=&quot;http://en.wikipedia.org/wiki/ACID&quot;&gt;ACID&lt;/a&gt;）。即使事务因程序崩溃，操作系统崩溃或计算机电源故障而中断，SQLite 仍可实现原子，一致，隔离和持久的可&lt;a href=&quot;http://en.wikipedia.org/wiki/Serializability&quot;&gt;序列化&lt;/a&gt;事务。</target>
        </trans-unit>
        <trans-unit id="98b3f6afa24644ee9e9a7ec6954dcbba1db3b9e2" translate="yes" xml:space="preserve">
          <source>A transactional database is one in which all changes and queries appear to be Atomic, Consistent, Isolated, and Durable (&lt;a href=&quot;https://en.wikipedia.org/wiki/ACID&quot;&gt;ACID&lt;/a&gt;). SQLite implements &lt;a href=&quot;https://en.wikipedia.org/wiki/Serializability&quot;&gt;serializable&lt;/a&gt; transactions that are atomic, consistent, isolated, and durable, even if the transaction is interrupted by a program crash, an operating system crash, or a power failure to the computer.</source>
          <target state="translated">事务数据库是其中所有更改和查询看起来都是原子的，一致的，隔离的和持久的（&lt;a href=&quot;https://en.wikipedia.org/wiki/ACID&quot;&gt;ACID&lt;/a&gt;）。即使事务因程序崩溃，操作系统崩溃或计算机电源故障而中断，SQLite仍可实现原子，一致，隔离和持久的可&lt;a href=&quot;https://en.wikipedia.org/wiki/Serializability&quot;&gt;序列化&lt;/a&gt;事务。</target>
        </trans-unit>
        <trans-unit id="762f7ff34044b36794c45c18c95e9030f7e31400" translate="yes" xml:space="preserve">
          <source>A triangle has three vertexes, but the GeoJSON description of the triangle has 4 vertexes because the first and last vertex are duplicates.</source>
          <target state="translated">一个三角形有三个顶点,但GeoJSON描述的三角形有4个顶点,因为第一个和最后一个顶点是重复的。</target>
        </trans-unit>
        <trans-unit id="29b340a77213cb4d10ec115c1281733a8d75cde1" translate="yes" xml:space="preserve">
          <source>A trigger may be specified to fire whenever a &lt;a href=&quot;lang_delete&quot;&gt;DELETE&lt;/a&gt;, &lt;a href=&quot;lang_insert&quot;&gt;INSERT&lt;/a&gt;, or &lt;a href=&quot;lang_update&quot;&gt;UPDATE&lt;/a&gt; of a particular database table occurs, or whenever an &lt;a href=&quot;lang_update&quot;&gt;UPDATE&lt;/a&gt; occurs on on one or more specified columns of a table.</source>
          <target state="translated">每当发生特定数据库表的&lt;a href=&quot;lang_delete&quot;&gt;DELETE&lt;/a&gt;，&lt;a href=&quot;lang_insert&quot;&gt;INSERT&lt;/a&gt;或&lt;a href=&quot;lang_update&quot;&gt;UPDATE&lt;/a&gt;或表的一个或多个指定列上发生&lt;a href=&quot;lang_update&quot;&gt;UPDATE&lt;/a&gt;时，都可以指定触发触发器。</target>
        </trans-unit>
        <trans-unit id="fd2260f1e1f77326af7731e7d8239b68e8a9f11e" translate="yes" xml:space="preserve">
          <source>A trigger normally exists in the same database as the table named after the &quot;ON&quot; keyword in the CREATE TRIGGER statement. Except, it is possible to create a TEMP TRIGGER on a table in another database. Such a trigger will only fire when changes are made to the target table by the application that defined the trigger. Other applications that modify the database will not be able to see the TEMP trigger and hence cannot run the trigger.</source>
          <target state="translated">触发器通常与CREATE TRIGGER语句中以 &quot;ON &quot;关键字命名的表存在同一个数据库中。但是,可以在另一个数据库的表上创建一个TEMP TRIGGER。这样的触发器只有在定义触发器的应用程序对目标表进行修改时才会触发。其他修改数据库的应用程序将无法看到TEMP触发器,因此无法运行该触发器。</target>
        </trans-unit>
        <trans-unit id="9ae92c55b82f470eeeb4bba0b8d4309fbfff3525" translate="yes" xml:space="preserve">
          <source>A unique constraint is satisfied if and only if no two rows in a table have the same non-null values in the unique columns.</source>
          <target state="translated">如果且仅当表中的唯一列中没有两行具有相同的非空值时,则满足唯一约束。</target>
        </trans-unit>
        <trans-unit id="6ae94a52f226bc47de3ee1540f2d8d90e50fc05b" translate="yes" xml:space="preserve">
          <source>A unique constraint is satisfied if and only if no two rows in a table have the same values and have non-null values in the unique columns.</source>
          <target state="translated">如果且仅当表中没有两行的值相同,且唯一列的值非空,则满足唯一约束。</target>
        </trans-unit>
        <trans-unit id="dabcb6d549c13ce12ef42eaf48b0d41d8c3dfc2d" translate="yes" xml:space="preserve">
          <source>A unique constraint is satisfied if and only if no two rows in a table have the same values in the subset of unique columns that are not null.</source>
          <target state="translated">如果且仅当表中没有两行在非空的唯一列子集中具有相同的值,则满足唯一约束。</target>
        </trans-unit>
        <trans-unit id="952f4e6659d04ec5f193202b5fddffcc0087004e" translate="yes" xml:space="preserve">
          <source>A unique integer number associated with each vocabulary item in the table. This can be used as a foreign key on other tables in the database.</source>
          <target state="translated">一个与表中每个词汇项目相关联的唯一整数。这可以作为数据库中其他表的外键。</target>
        </trans-unit>
        <trans-unit id="0fe70411c725bc0721714f08714a5a3f518456c0" translate="yes" xml:space="preserve">
          <source>A valid rollback journal begins with a header in the following format:</source>
          <target state="translated">有效的回滚日志以下列格式的标题开始。</target>
        </trans-unit>
        <trans-unit id="9323ac27e089e4d34d2bcc6e9f8a53b215a87e94" translate="yes" xml:space="preserve">
          <source>A value of 10 (0x0a) means the page is a leaf index b-tree page.</source>
          <target state="translated">值为10(0x0a)表示该页是叶索引b树页。</target>
        </trans-unit>
        <trans-unit id="62e1a106666132bc7aa0c524ac57c51e9c1fa6f1" translate="yes" xml:space="preserve">
          <source>A value of 13 (0x0d) means the page is a leaf table b-tree page.</source>
          <target state="translated">值为13(0x0d)表示该页是叶表b树页。</target>
        </trans-unit>
        <trans-unit id="40f1a1f1a6aa95dae3ca3a5407b50cea28bcd1e7" translate="yes" xml:space="preserve">
          <source>A value of 2 (0x02) means the page is an interior index b-tree page.</source>
          <target state="translated">值为2(0x02)表示该页是内部索引b树页。</target>
        </trans-unit>
        <trans-unit id="63a906019a3e0d60d30d9b9306736264578b9862" translate="yes" xml:space="preserve">
          <source>A value of 5 (0x05) means the page is an interior table b-tree page.</source>
          <target state="translated">值为5(0x05)表示该页为内表b树页。</target>
        </trans-unit>
        <trans-unit id="90d391fbff83003c60969ae0ec773423012c283c" translate="yes" xml:space="preserve">
          <source>A value of N in the seekHit flag of cursor P1 means that there exists a key P3:N that will match some record in the index. We want to know if it is possible for a record P3:P4 to match some record in the index. If it is not possible, we can skips some work. So if seekHit is less than P4, attempt to find out if a match is possible by running &lt;a href=&quot;opcode#NotFound&quot;&gt;NotFound&lt;/a&gt;.</source>
          <target state="translated">游标P1的seekHit标志中的N值表示存在与索引中的某些记录匹配的键P3：N。我们想知道记录P3：P4是否有可能与索引中的某些记录匹配。如果不可能，我们可以跳过一些工作。因此，如果seekHit小于P4，请尝试通过运行&lt;a href=&quot;opcode#NotFound&quot;&gt;NotFound&lt;/a&gt;找出是否可以匹配。</target>
        </trans-unit>
        <trans-unit id="98aefbc577505a102a4bdbd9d45da156baa1724a" translate="yes" xml:space="preserve">
          <source>A value with storage class NULL is considered less than any other value (including another value with storage class NULL).</source>
          <target state="translated">一个存储类为NULL的值被认为小于任何其他值(包括另一个存储类为NULL的值)。</target>
        </trans-unit>
        <trans-unit id="61966bda21e838b4a385c022331516a90f448e33" translate="yes" xml:space="preserve">
          <source>A variable-length integer or &quot;varint&quot; is a static Huffman encoding of 64-bit twos-complement integers that uses less space for small positive values. A varint is between 1 and 9 bytes in length. The varint consists of either zero or more bytes which have the high-order bit set followed by a single byte with the high-order bit clear, or nine bytes, whichever is shorter. The lower seven bits of each of the first eight bytes and all 8 bits of the ninth byte are used to reconstruct the 64-bit twos-complement integer. Varints are big-endian: bits taken from the earlier byte of the varint are more significant than bits taken from the later bytes.</source>
          <target state="translated">变长整数或 &quot;varint &quot;是64位双补整数的静态赫夫曼编码,对小的正值使用较少的空间。一个varint的长度在1到9个字节之间。varint由零或多个高阶位设置的字节组成,后面是一个高阶位清除的单字节,或者是九个字节,以较短者为准。前8个字节的低7位和第9个字节的全部8位被用来重建64位双补码整数。Varints是大字段的:从varint的前一个字节取的位比从后一个字节取的位更重要。</target>
        </trans-unit>
        <trans-unit id="39d2c41c22785c16d3ddf35c480bf3c0b5dd588a" translate="yes" xml:space="preserve">
          <source>A varint which is the integer key</source>
          <target state="translated">一个整数键的varint。</target>
        </trans-unit>
        <trans-unit id="8fee174cbc89434778acfe5a3e125ad5320c50ab" translate="yes" xml:space="preserve">
          <source>A varint which is the integer key, a.k.a. &quot;&lt;a href=&quot;lang_createtable#rowid&quot;&gt;rowid&lt;/a&gt;&quot;</source>
          <target state="translated">varint是整数键，又名&amp;ldquo; &lt;a href=&quot;lang_createtable#rowid&quot;&gt;rowid&lt;/a&gt; &amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="7dcfb4fd379871a1c7b556422d5224ce7bad5762" translate="yes" xml:space="preserve">
          <source>A varint which is the total number of bytes of key payload, including any overflow</source>
          <target state="translated">一个varint,是密钥有效载荷的总字节数,包括任何溢出。</target>
        </trans-unit>
        <trans-unit id="a3d513baeec19bb3a29eb1d68e0c4ec488b8735e" translate="yes" xml:space="preserve">
          <source>A varint which is the total number of bytes of payload, including any overflow</source>
          <target state="translated">有效载荷的总字节数,包括任何溢出。</target>
        </trans-unit>
        <trans-unit id="da04ae498ca0dc39858789333261d6656f640502" translate="yes" xml:space="preserve">
          <source>A version control system (VCS) will typically store the evolving versions of a project as a directed acyclic graph (DAG). Call each version of the project a &quot;checkin&quot;. A single checkin can have zero or more parents. Most checkins (except the first) have a single parent, but in the case of a merge, a checkin might have two or three or more parents. A schema to keep track of checkins and the order in which they occur might look something like this:</source>
          <target state="translated">版本控制系统(VCS)通常会将一个项目的不断发展的版本存储为有向无环图(DAG)。将项目的每个版本称为 &quot;checkin&quot;。单个checkin可以有零个或多个父版本。大多数的checkin(除了第一个版本)都只有一个父版本,但是在合并的情况下,一个checkin可能有两个、三个或者更多的父版本。追踪签到和签到顺序的模式可能是这样的:</target>
        </trans-unit>
        <trans-unit id="881d501220206ee1c616806563f13fecfb51dbf6" translate="yes" xml:space="preserve">
          <source>A virtual filesystem (VFS) is an &lt;a href=&quot;#sqlite3_vfs&quot;&gt;sqlite3_vfs&lt;/a&gt; object that SQLite uses to interact with the underlying operating system. Most SQLite builds come with a single default VFS that is appropriate for the host computer. New VFSes can be registered and existing VFSes can be unregistered. The following interfaces are provided.</source>
          <target state="translated">虚拟文件系统（VFS）是SQLite用于与基础操作系统进行交互的&lt;a href=&quot;#sqlite3_vfs&quot;&gt;sqlite3_vfs&lt;/a&gt;对象。大多数SQLite构建都带有适合主机的单个默认VFS。可以注册新的VFS，而可以注销现有的VFS。提供以下接口。</target>
        </trans-unit>
        <trans-unit id="1900bfd100646a0b3b036033184bd610a0f59cc1" translate="yes" xml:space="preserve">
          <source>A virtual filesystem (VFS) is an &lt;a href=&quot;vfs&quot;&gt;sqlite3_vfs&lt;/a&gt; object that SQLite uses to interact with the underlying operating system. Most SQLite builds come with a single default VFS that is appropriate for the host computer. New VFSes can be registered and existing VFSes can be unregistered. The following interfaces are provided.</source>
          <target state="translated">虚拟文件系统（VFS）是SQLite用于与基础操作系统进行交互的&lt;a href=&quot;vfs&quot;&gt;sqlite3_vfs&lt;/a&gt;对象。大多数SQLite构建都带有适合主机的单个默认VFS。可以注册新的VFS，而可以注销现有的VFS。提供以下接口。</target>
        </trans-unit>
        <trans-unit id="97b11082572e398dba7e2062d48e57376c3d93de" translate="yes" xml:space="preserve">
          <source>A virtual table implementation must be able to support an arbitrary number of simultaneously open cursors.</source>
          <target state="translated">一个虚拟表的实现必须能够支持任意数量的同时打开的游标。</target>
        </trans-unit>
        <trans-unit id="56cb3efe7eb44df0ba67e5ea661e95ce4f842882" translate="yes" xml:space="preserve">
          <source>A virtual table is an object that is registered with an open SQLite &lt;a href=&quot;c3ref/sqlite3&quot;&gt;database connection&lt;/a&gt;. From the perspective of an SQL statement, the virtual table object looks like any other table or view. But behind the scenes, queries and updates on a virtual table invoke callback methods of the virtual table object instead of reading and writing on the database file.</source>
          <target state="translated">虚拟表是在打开的SQLite &lt;a href=&quot;c3ref/sqlite3&quot;&gt;数据库连接中&lt;/a&gt;注册的对象。从SQL语句的角度来看，虚拟表对象看起来像任何其他表或视图。但是在后台，对虚拟表的查询和更新将调用虚拟表对象的回调方法，而不是对数据库文件进行读写。</target>
        </trans-unit>
        <trans-unit id="52af07e40184e006612d2e3054e64de5f1d7c832" translate="yes" xml:space="preserve">
          <source>A virtual table is created using a &lt;a href=&quot;lang_createvtab&quot;&gt;CREATE VIRTUAL TABLE&lt;/a&gt; statement.</source>
          <target state="translated">使用&lt;a href=&quot;lang_createvtab&quot;&gt;CREATE VIRTUAL TABLE&lt;/a&gt;语句创建虚拟表。</target>
        </trans-unit>
        <trans-unit id="a893a3a1c0e0b537926a2530a012fcadd49c1a89" translate="yes" xml:space="preserve">
          <source>A virtual table is destroyed using the ordinary &lt;a href=&quot;lang_droptable&quot;&gt;DROP TABLE&lt;/a&gt; statement. There is no DROP VIRTUAL TABLE statement.</source>
          <target state="translated">使用普通的&lt;a href=&quot;lang_droptable&quot;&gt;DROP TABLE&lt;/a&gt;语句销毁虚拟表。没有DROP VIRTUAL TABLE语句。</target>
        </trans-unit>
        <trans-unit id="847101905322620243ed31c601c382674aa4a14b" translate="yes" xml:space="preserve">
          <source>A virtual table is eponymous if its &lt;a href=&quot;vtab#xcreate&quot;&gt;xCreate&lt;/a&gt; method is the exact same function as the &lt;a href=&quot;vtab#xconnect&quot;&gt;xConnect&lt;/a&gt; method, or if the &lt;a href=&quot;vtab#xcreate&quot;&gt;xCreate&lt;/a&gt; method is NULL. The &lt;a href=&quot;vtab#xcreate&quot;&gt;xCreate&lt;/a&gt; method is called when a virtual table is first created using the &lt;a href=&quot;lang_createvtab&quot;&gt;CREATE VIRTUAL TABLE&lt;/a&gt; statement. The &lt;a href=&quot;vtab#xconnect&quot;&gt;xConnect&lt;/a&gt; method is invoked whenever a database connection attaches to or reparses a schema. When these two methods are the same, that indicates that the virtual table has no persistent state that needs to be created and destroyed.</source>
          <target state="translated">一个虚拟表是同名如果其&lt;a href=&quot;vtab#xcreate&quot;&gt;xCreate&lt;/a&gt;方法是完全相同的功能作为&lt;a href=&quot;vtab#xconnect&quot;&gt;xConnect&lt;/a&gt;方法，或者如果&lt;a href=&quot;vtab#xcreate&quot;&gt;xCreate&lt;/a&gt;方法是NULL。该&lt;a href=&quot;vtab#xcreate&quot;&gt;xCreate&lt;/a&gt;当使用第一次创建一个虚拟表方法被调用&lt;a href=&quot;lang_createvtab&quot;&gt;创建虚拟TABLE&lt;/a&gt;语句。该&lt;a href=&quot;vtab#xconnect&quot;&gt;xConnect&lt;/a&gt;方法被调用每当数据库连接附连到或重新解析的模式。当这两种方法相同时，表明虚拟表没有需要创建和销毁的持久状态。</target>
        </trans-unit>
        <trans-unit id="353f0b8410ad856bf5ebf8e7164ab137690e2e5f" translate="yes" xml:space="preserve">
          <source>A virtual table might represent an in-memory data structures. Or it might represent a view of data on disk that is not in the SQLite format. Or the application might compute the content of the virtual table on demand.</source>
          <target state="translated">一个虚拟表可能代表一个内存中的数据结构。或者它可能代表磁盘上的数据视图,但不是SQLite格式的。或者,应用程序可能会按需计算虚拟表的内容。</target>
        </trans-unit>
        <trans-unit id="a4f90d299472ce309a8e439b029daf5f8f8923b0" translate="yes" xml:space="preserve">
          <source>A virtual table module is created by filling in a persistent instance of this structure and passing a pointer to that instance to &lt;a href=&quot;#sqlite3_create_module&quot;&gt;sqlite3_create_module()&lt;/a&gt; or &lt;a href=&quot;#sqlite3_create_module&quot;&gt;sqlite3_create_module_v2()&lt;/a&gt;. The registration remains valid until it is replaced by a different module or until the &lt;a href=&quot;#sqlite3&quot;&gt;database connection&lt;/a&gt; closes. The content of this structure must not change while it is registered with any database connection.</source>
          <target state="translated">通过填充此结构的持久实例并将该实例的指针传递到&lt;a href=&quot;#sqlite3_create_module&quot;&gt;sqlite3_create_module（）&lt;/a&gt;或&lt;a href=&quot;#sqlite3_create_module&quot;&gt;sqlite3_create_module_v2（）&lt;/a&gt;来创建虚拟表模块。该注册将一直保持有效，直到被其他模块替换或&lt;a href=&quot;#sqlite3&quot;&gt;数据库连接&lt;/a&gt;关闭为止。向任何数据库连接注册该结构时，其内容均不得更改。</target>
        </trans-unit>
        <trans-unit id="38351d643190ff2e0c5028a024cfec96116efe36" translate="yes" xml:space="preserve">
          <source>A virtual table module is created by filling in a persistent instance of this structure and passing a pointer to that instance to &lt;a href=&quot;create_module&quot;&gt;sqlite3_create_module()&lt;/a&gt; or &lt;a href=&quot;create_module&quot;&gt;sqlite3_create_module_v2()&lt;/a&gt;. The registration remains valid until it is replaced by a different module or until the &lt;a href=&quot;sqlite3&quot;&gt;database connection&lt;/a&gt; closes. The content of this structure must not change while it is registered with any database connection.</source>
          <target state="translated">通过填充此结构的持久实例并将该实例的指针传递到&lt;a href=&quot;create_module&quot;&gt;sqlite3_create_module（）&lt;/a&gt;或&lt;a href=&quot;create_module&quot;&gt;sqlite3_create_module_v2（）&lt;/a&gt;来创建虚拟表模块。该注册将一直保持有效，直到被其他模块替换或&lt;a href=&quot;sqlite3&quot;&gt;数据库连接&lt;/a&gt;关闭为止。向任何数据库连接注册该结构时，其内容均不得更改。</target>
        </trans-unit>
        <trans-unit id="94ab9a8c810266d9131b7dc3abfde1084e5a3827" translate="yes" xml:space="preserve">
          <source>A virtual table returns all integers between 1 and 4294967295.</source>
          <target state="translated">虚拟表返回1到4294967295之间的所有整数。</target>
        </trans-unit>
        <trans-unit id="9550c8ab6f8d693fb2f5399ce989472075011998" translate="yes" xml:space="preserve">
          <source>A virtual table that implements a spelling correction engine.</source>
          <target state="translated">一个实现拼写校正引擎的虚拟表。</target>
        </trans-unit>
        <trans-unit id="8d81c8273172f3de70ea8fa615e0e6a43a86ed85" translate="yes" xml:space="preserve">
          <source>A virtual table that prints diagnostic information on stdout when its key methods are invoked. Intended for interactive analysis and debugging of virtual table interfaces.</source>
          <target state="translated">一个虚拟表,当它的关键方法被调用时,会在stdout上打印诊断信息。用于虚拟表接口的交互式分析和调试。</target>
        </trans-unit>
        <trans-unit id="5e16ff1f72c104772393373b9711e80e90eaa372" translate="yes" xml:space="preserve">
          <source>A virtual table that represents a comma-separated-value or CSV file (&lt;a href=&quot;https://www.ietf.org/rfc/rfc4180.txt&quot;&gt;RFC 4180&lt;/a&gt;) as a read-only table so that it can be used as part of a larger query.</source>
          <target state="translated">一个虚拟表，将逗号分隔值或CSV文件（&lt;a href=&quot;https://www.ietf.org/rfc/rfc4180.txt&quot;&gt;RFC 4180&lt;/a&gt;）表示为只读表，以便可以将其用作较大查询的一部分。</target>
        </trans-unit>
        <trans-unit id="adf39798b9f95adc35fd6772c7cbfb7068e01df6" translate="yes" xml:space="preserve">
          <source>A virtual table, which provides read and write access to archives stored in the file-system.</source>
          <target state="translated">一个虚拟表,它提供对存储在文件系统中的档案的读写访问。</target>
        </trans-unit>
        <trans-unit id="0516d8f39a8906e53dce6da52e21c642d9370cf8" translate="yes" xml:space="preserve">
          <source>A well-written C program will typically contain some defensive conditionals which in practice are always true or always false. This leads to a programming dilemma: Does one remove defensive code in order to obtain 100% branch coverage?</source>
          <target state="translated">一个写得很好的C程序通常会包含一些防御性条件,这些条件在实践中总是真或总是假。这就导致了一个编程难题:是否要为了获得100%的分支覆盖率而删除防御性代码?</target>
        </trans-unit>
        <trans-unit id="a3522671a3a254f98c06c7d8eb6a707b7852ebea" translate="yes" xml:space="preserve">
          <source>A width of 0 means the column width is chosen automatically. Unspecified columns widths to go zero. Hence, the command &quot;.width&quot; with no arguments sets all columns widths to zero and hence causes all column widths to be determine automatically.</source>
          <target state="translated">宽度为0表示自动选择列宽。未指定的列宽为零。因此,没有参数的&quot;.width &quot;命令将所有列宽设置为0,从而导致所有列宽自动确定。</target>
        </trans-unit>
        <trans-unit id="e7f05d1eb22dd9a9ee6d24e61fd43de0311fb625" translate="yes" xml:space="preserve">
          <source>A window function is an SQL function where the input values are taken from a &quot;window&quot; of one or more rows in the results set of a SELECT statement.</source>
          <target state="translated">窗口函数是一个SQL函数,其中输入值是从SELECT语句结果集中的一个或多个行的 &quot;窗口 &quot;中提取的。</target>
        </trans-unit>
        <trans-unit id="95e1d6e7e3fb96b500c945c549b86f711da8262a" translate="yes" xml:space="preserve">
          <source>A working &lt;a href=&quot;https://zlib.net&quot;&gt;zlib compression library&lt;/a&gt; is needed in order for the &lt;a href=&quot;cli#sqlar&quot;&gt;.archive command&lt;/a&gt; to operate.</source>
          <target state="translated">为了使&lt;a href=&quot;cli#sqlar&quot;&gt;.archive命令&lt;/a&gt;运行，需要一个有效的&lt;a href=&quot;https://zlib.net&quot;&gt;zlib压缩库&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="12ba0d7954a4428935b75868db48e0376c9b0d38" translate="yes" xml:space="preserve">
          <source>A wrapped pile-of-files format is a compromise between a full custom file format and a pure pile-of-files format. A wrapped pile-of-files format is not an opaque blob in the same sense as a custom format, since the component parts can still be accessed using any common ZIP archiver, but the format is not quite as accessible as a pure pile-of-files format because one does still need the ZIP archiver, and one cannot normally use command-line tools like &quot;find&quot; on the file hierarchy without first un-zipping it. On the other hand, a wrapped pile-of-files format does preserve the document metaphor by putting all content into a single disk file. And because it is compressed, the wrapped pile-of-files format tends to be more compact.</source>
          <target state="translated">封装的文件堆格式是完全的自定义文件格式和纯粹的文件堆格式之间的折中。包裹式文件堆格式并不像自定义格式那样是一个不透明的小球,因为仍然可以使用任何常见的ZIP存档器来访问其组成部分,但这种格式并不像纯文件堆格式那样容易访问,因为我们仍然需要ZIP存档器,而且如果不先解压,通常不能在文件层次结构上使用 &quot;查找 &quot;等命令行工具。另一方面,包裹的文件堆格式确实保留了文件的隐喻,把所有的内容都放在一个磁盘文件中。而且由于它是压缩的,包裹式文件堆格式往往更紧凑。</target>
        </trans-unit>
        <trans-unit id="b0cb831fafd0869c861cfe72928b427adff2aa0c" translate="yes" xml:space="preserve">
          <source>A write-ahead log or WAL file is used in place of a rollback journal when SQLite is operating in &lt;a href=&quot;wal&quot;&gt;WAL mode&lt;/a&gt;. As with the rollback journal, the purpose of the WAL file is to implement atomic commit and rollback. The WAL file is always located in the same directory as the database file and has the same name as the database file except with the 4 characters &quot;&lt;b&gt;-wal&lt;/b&gt;&quot; appended. The WAL file is created when the first connection to the database is opened and is normally removed when the last connection to the database closes. However, if the last connection does not shutdown cleanly, the WAL file will remain in the filesystem and will be automatically cleaned up the next time the database is opened.</source>
          <target state="translated">当SQLite在&lt;a href=&quot;wal&quot;&gt;WAL模式下&lt;/a&gt;运行时，将使用预写日志或WAL文件代替回滚日志。与回滚日志一样，WAL文件的目的是实现原子提交和回滚。 WAL文件始终与数据库文件位于同一目录中，并且与数据库文件具有相同的名称，只是附加了4个字符&amp;ldquo; &lt;b&gt;-wal&lt;/b&gt; &amp;rdquo;。 WAL文件是在打开与数据库的第一个连接时创建的，通常在与数据库的最后一个连接关闭时会被删除。但是，如果最后一个连接没有彻底关闭，则WAL文件将保留在文件系统中，并在下次打开数据库时自动清除。</target>
        </trans-unit>
        <trans-unit id="7f97d795973bc84aa355c2feb5c3e28a10896757" translate="yes" xml:space="preserve">
          <source>A zero-terminated string containing the text of one or more SQL statements and/or queries to be processed.</source>
          <target state="translated">一个零结尾的字符串,包含一个或多个要处理的SQL语句和/或查询的文本。</target>
        </trans-unit>
        <trans-unit id="606ec6e9bd8a8ff2ad14e5fade3f264471e82251" translate="yes" xml:space="preserve">
          <source>AAA</source>
          <target state="translated">AAA</target>
        </trans-unit>
        <trans-unit id="cbd57cfd9437b3c9c1c3ce7cb0fb7a7b8366940a" translate="yes" xml:space="preserve">
          <source>ABORT</source>
          <target state="translated">ABORT</target>
        </trans-unit>
        <trans-unit id="dc1f44b95b4f44c4b87ebcf57cafc6780d0a90b6" translate="yes" xml:space="preserve">
          <source>ACID transactions using &lt;a href=&quot;lang_transaction&quot;&gt;BEGIN&lt;/a&gt;, &lt;a href=&quot;lang_transaction&quot;&gt;COMMIT&lt;/a&gt;, and &lt;a href=&quot;lang_transaction&quot;&gt;ROLLBACK&lt;/a&gt;</source>
          <target state="translated">使用&lt;a href=&quot;lang_transaction&quot;&gt;BEGIN&lt;/a&gt;，&lt;a href=&quot;lang_transaction&quot;&gt;COMMIT&lt;/a&gt;和&lt;a href=&quot;lang_transaction&quot;&gt;ROLLBACK进行&lt;/a&gt; ACID事务</target>
        </trans-unit>
        <trans-unit id="2b9f1cf5c4d33807129af3dcb41af0a491f4cda7" translate="yes" xml:space="preserve">
          <source>ACTION</source>
          <target state="translated">ACTION</target>
        </trans-unit>
        <trans-unit id="f9460492306d4b99cd31848c3a99a26a7e978d96" translate="yes" xml:space="preserve">
          <source>ADD</source>
          <target state="translated">ADD</target>
        </trans-unit>
        <trans-unit id="ee5600b2ed97ece803d7f4350448a1f4928404a3" translate="yes" xml:space="preserve">
          <source>AFL has proven remarkably adept at finding arcane bugs in SQLite. Most of the findings have been assert() statements where the conditional was false under obscure circumstances. But AFL has also found a fair number of crash bugs in SQLite, and even a few cases where SQLite computed incorrect results.</source>
          <target state="translated">事实证明,AFL非常善于发现SQLite中的神秘错误。大多数发现都是assert()语句,其中条件在不明显的情况下是假的。但AFL也发现了相当多的SQLite中的崩溃bug,甚至还有一些SQLite计算出错误结果的情况。</target>
        </trans-unit>
        <trans-unit id="5d726e4e98d71e7677fc370d3c1ae46220f46b39" translate="yes" xml:space="preserve">
          <source>AFL proved adept at finding arcane bugs in SQLite. Most of the findings have been assert() statements where the conditional was false under obscure circumstances. But AFL has also found a fair number of crash bugs in SQLite, and even a few cases where SQLite computed incorrect results.</source>
          <target state="translated">事实证明,AFL善于发现SQLite中的玄机。大多数发现都是assert()语句,其中条件在不明显的情况下是假的。但AFL也发现了相当多的SQLite中的崩溃bug,甚至还有一些SQLite计算出错误结果的情况。</target>
        </trans-unit>
        <trans-unit id="63edc193e8cfcf6757dd5596309d5a764f92ace2" translate="yes" xml:space="preserve">
          <source>AFP locking style. This locking style is used for network file systems that use the AFP (Apple Filing Protocol) protocol. Locks are obtained by calling the library function _AFPFSSetLock().</source>
          <target state="translated">AFP锁定风格。这种锁定方式用于使用AFP(Apple Filing Protocol)协议的网络文件系统。通过调用库函数_AFPFSSetLock()获得锁。</target>
        </trans-unit>
        <trans-unit id="aedfd73052985c2f41211e623add2af653060807" translate="yes" xml:space="preserve">
          <source>AFTER</source>
          <target state="translated">AFTER</target>
        </trans-unit>
        <trans-unit id="6b42874e3cd20771d93096ec5ce36307a1f2ba14" translate="yes" xml:space="preserve">
          <source>ALL</source>
          <target state="translated">ALL</target>
        </trans-unit>
        <trans-unit id="6e69e31990a7343ff088d4c32eea14ef655df385" translate="yes" xml:space="preserve">
          <source>ALTER</source>
          <target state="translated">ALTER</target>
        </trans-unit>
        <trans-unit id="fcdc3e679260efe34d4720e54eb086a76a15f687" translate="yes" xml:space="preserve">
          <source>ALTER TABLE</source>
          <target state="translated">ALTER TABLE</target>
        </trans-unit>
        <trans-unit id="dc1fbac7d45ba56f622f7752b89525d62ceed128" translate="yes" xml:space="preserve">
          <source>ALTER TABLE ADD COLUMN</source>
          <target state="translated">ALTER TABLE ADD COLUMN</target>
        </trans-unit>
        <trans-unit id="094aafb4c8ae4eba399881e4d9b84c158bb3ff0a" translate="yes" xml:space="preserve">
          <source>ALTER TABLE RENAME</source>
          <target state="translated">ALTER TABLE RENAME</target>
        </trans-unit>
        <trans-unit id="b5b6c520c273175237f91ec319fe56f82283ec27" translate="yes" xml:space="preserve">
          <source>ALTER TABLE RENAME COLUMN</source>
          <target state="translated">ALTER TABLE RENAME COLUMN</target>
        </trans-unit>
        <trans-unit id="f9d0d0176fb0a7f55f27682b7d026c807b2a0515" translate="yes" xml:space="preserve">
          <source>ALTER TABLE uses double-quotes instead of single-quotes for quoting filenames.</source>
          <target state="translated">ALTER TABLE使用双引号代替单引号来引用文件名。</target>
        </trans-unit>
        <trans-unit id="ae0ecf3287dbfbb668b86fe771af6cf210ce9334" translate="yes" xml:space="preserve">
          <source>ALWAYS</source>
          <target state="translated">ALWAYS</target>
        </trans-unit>
        <trans-unit id="8ca598e81cf4b7eae20f25366c64a9099ce76a39" translate="yes" xml:space="preserve">
          <source>ALWAYS(X)</source>
          <target state="translated">ALWAYS(X)</target>
        </trans-unit>
        <trans-unit id="7b4e17353a4bd1a4f2d336a59d39168308ceecbc" translate="yes" xml:space="preserve">
          <source>ALWAYS(X) and NEVER(X) functions are used in places where we always want the test to occur even though the developers believe the value of X is always true or false. For example, the sqlite3BtreeCloseCursor() routine shown must remove the closing cursor from a linked list of all cursors. We know that the cursor is on the list, so that the loop must terminate by the &quot;break&quot; statement, but it is convenient to use the ALWAYS(X) test at &lt;a href=&quot;https://sqlite.org/src/artifact/18a53540aa3?ln=4371&quot;&gt;https://sqlite.org/src/artifact/18a53540aa3?ln=4371&lt;/a&gt; to prevent running off the end of the linked list in case there is an error in some other part of the code that has corrupted the linked list.</source>
          <target state="translated">即使开发人员认为X的值始终为true或false，也总是在我们总是希望进行测试的地方使用ALWAYS（X）和NEVER（X）函数。例如，显示的sqlite3BtreeCloseCursor（）例程必须从所有游标的链接列表中删除结束游标。我们知道游标在列表中，因此循环必须以&amp;ldquo; break&amp;rdquo;语句终止，但是在&lt;a href=&quot;https://sqlite.org/src/artifact/18a53540aa3?ln=4371&quot;&gt;https://sqlite.org/src/artifact/18a53540aa3&lt;/a&gt;上使用ALWAYS（X）测试很方便吗？ ln = 4371可以防止在链表损坏的代码的其他部分出现错误的情况下运行链表的末尾。</target>
        </trans-unit>
        <trans-unit id="caadd138e6e8d1596eda80c0f51c856600e89f65" translate="yes" xml:space="preserve">
          <source>ANALYZE</source>
          <target state="translated">ANALYZE</target>
        </trans-unit>
        <trans-unit id="c2f934cb8cab6c1b3af0d4f2fdd824eabafb6bf4" translate="yes" xml:space="preserve">
          <source>AND</source>
          <target state="translated">AND</target>
        </trans-unit>
        <trans-unit id="1a397ebb8cf61587cd521ec01e5c6b51276f91a4" translate="yes" xml:space="preserve">
          <source>ANSI Common Lisp</source>
          <target state="translated">ANSI通用语言</target>
        </trans-unit>
        <trans-unit id="d00bb3f3b7c7b8815b6dcf237dd16aab9744eca8" translate="yes" xml:space="preserve">
          <source>AS</source>
          <target state="translated">AS</target>
        </trans-unit>
        <trans-unit id="eaffec78401451424652480dc382235348ce1b66" translate="yes" xml:space="preserve">
          <source>ASC</source>
          <target state="translated">ASC</target>
        </trans-unit>
        <trans-unit id="166240989b0ab1b8695abcaef83da0a4918a2fb9" translate="yes" xml:space="preserve">
          <source>ASCII rendering of the float</source>
          <target state="translated">浮点数的ASCII渲染</target>
        </trans-unit>
        <trans-unit id="6b519334032a98f7c2594012c3b3e7e13014c677" translate="yes" xml:space="preserve">
          <source>ASCII rendering of the integer</source>
          <target state="translated">整数的ASCII渲染</target>
        </trans-unit>
        <trans-unit id="8a5ebc115bc75bb938a3838103c3725bf90efb01" translate="yes" xml:space="preserve">
          <source>ATTACH</source>
          <target state="translated">ATTACH</target>
        </trans-unit>
        <trans-unit id="33ca34fea5ce451e0bc66a6eadd28cb502c9e81b" translate="yes" xml:space="preserve">
          <source>ATTACH DATABASE</source>
          <target state="translated">附上数据库</target>
        </trans-unit>
        <trans-unit id="1ac676774c3a8c1551764b1d83b7d37f669fb5a0" translate="yes" xml:space="preserve">
          <source>ATTACH and DETACH as well as some other operations cause existing prepared statements to expire.</source>
          <target state="translated">ATTACH和DETACH以及其他一些操作会导致现有的已编制报表过期。</target>
        </trans-unit>
        <trans-unit id="21a7e17a976b425553bc577b3148824d2a1f1a44" translate="yes" xml:space="preserve">
          <source>AUTOINCREMENT</source>
          <target state="translated">AUTOINCREMENT</target>
        </trans-unit>
        <trans-unit id="5c70ef0cc48907c519166dce4b32226739e45e67" translate="yes" xml:space="preserve">
          <source>AUTOINCREMENT keyword supported on INTEGER PRIMARY KEY</source>
          <target state="translated">在INTEGER PRIMARY KEY上支持AUTOINCREMENT关键字。</target>
        </trans-unit>
        <trans-unit id="76bb2a7951c7bb2c965f22c9a57e2ce25974df9a" translate="yes" xml:space="preserve">
          <source>Abbreviations are applied in the multitest.tcl output so that each th3make invocation will fit on a single 80-column output line. The initial &quot;th3make&quot; verb is omitted. &quot;~&quot; is shorthand for &quot;-DSQLITE_&quot; and &quot;++&quot; is stands for &quot;-DSQLITE_ENABLE&quot;. Hence, multitest.tcl output line</source>
          <target state="translated">在 multitest.tcl 的输出中使用了缩写,这样每个 th3make 的调用都能在 80 列的输出行中找到合适的位置。最初的 &quot;th3make &quot;动词被省略。&quot;~&quot;是&quot;-DSQLITE_&quot;的简写,&quot;++&quot;代表&quot;-DSQLITE_ENABLE&quot;。因此,multitest.tcl的输出行是这样的</target>
        </trans-unit>
        <trans-unit id="aa097a59aa23d1ea05fcdf2e722330d9e25e4b14" translate="yes" xml:space="preserve">
          <source>Abortable</source>
          <target state="translated">Abortable</target>
        </trans-unit>
        <trans-unit id="a87b7bc256c5e187e5504df77ba712267f376ec4" translate="yes" xml:space="preserve">
          <source>About OpenDocument And OpenDocument Presentation</source>
          <target state="translated">关于OpenDocument和OpenDocument演示</target>
        </trans-unit>
        <trans-unit id="f32e574abd9aafdacaa9afd3405d7877d90e54cb" translate="yes" xml:space="preserve">
          <source>Accept &quot;Z&quot; as the zulu timezone at the end of date strings</source>
          <target state="translated">接受 &quot;Z &quot;作为日期字符串末尾的祖鲁时区。</target>
        </trans-unit>
        <trans-unit id="6ce752666b5e444987daa4b6966df37d55bde025" translate="yes" xml:space="preserve">
          <source>Accept column names in parentheses.</source>
          <target state="translated">接受括号中的列名。</target>
        </trans-unit>
        <trans-unit id="c0213d4fd54eabb051f311ba8f2befe3b9c69a5c" translate="yes" xml:space="preserve">
          <source>Access is coordinated in WAL mode using both the legacy DELETE-mode locks controlled by the xLock and xUnlock methods of the &lt;a href=&quot;c3ref/io_methods&quot;&gt;sqlite3_io_methods&lt;/a&gt; object and the WAL locks controlled by the xShmLock method of the &lt;a href=&quot;c3ref/io_methods&quot;&gt;sqlite3_io_methods&lt;/a&gt; object.</source>
          <target state="translated">访问被同时使用由所述的XLOCK和xUnlock方法控制的遗留DELETE模式锁在WAL模式协调&lt;a href=&quot;c3ref/io_methods&quot;&gt;sqlite3_io_methods&lt;/a&gt;对象和WAL锁具由的xShmLock方法控制&lt;a href=&quot;c3ref/io_methods&quot;&gt;sqlite3_io_methods&lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="80d3ef128ce8adb3705e036419e075fdb4f48299" translate="yes" xml:space="preserve">
          <source>Access the filesystem of the host computer as if it were a database table</source>
          <target state="translated">像访问数据库表一样访问主机的文件系统。</target>
        </trans-unit>
        <trans-unit id="61521a7d6f538076f32bc9879102eb6d96388ec7" translate="yes" xml:space="preserve">
          <source>Access to records via &lt;a href=&quot;lang_createtable#rowid&quot;&gt;rowid&lt;/a&gt; is highly optimized and very fast.</source>
          <target state="translated">通过&lt;a href=&quot;lang_createtable#rowid&quot;&gt;rowid&lt;/a&gt;对记录的访问已高度优化且非常快速。</target>
        </trans-unit>
        <trans-unit id="b0ba54a3a4413a8377f766e7307b65f628b16b98" translate="yes" xml:space="preserve">
          <source>Accessible Content</source>
          <target state="translated">可访问内容</target>
        </trans-unit>
        <trans-unit id="c17f44cb688221742030703d589c802bf0664eb2" translate="yes" xml:space="preserve">
          <source>Accommodation can be made for words that are not spelled as they sound by making additional entries into the virtual table for the same word, but adding an alternative spelling in the &quot;soundslike&quot; column. For example, the canonical entry for &quot;psalm&quot; would be this:</source>
          <target state="translated">可以通过在虚拟表格中为同一单词增加条目,但在 &quot;音似 &quot;栏中增加另一种拼法,来适应那些不按其发音拼写的单词。例如,&quot;psalm &quot;的规范条目是这样的:</target>
        </trans-unit>
        <trans-unit id="6705b13fdc28369e54f6bdd712ca9a4db4cbf219" translate="yes" xml:space="preserve">
          <source>According to &lt;a href=&quot;http://tools.ietf.org/html/rfc3986&quot;&gt;RFC 3986&lt;/a&gt;, a URI consists of a scheme, an authority, a path, a query string, and a fragment. The scheme is always required. One of either the authority or the path is also always required. The query string and fragment are optional.</source>
          <target state="translated">根据&lt;a href=&quot;http://tools.ietf.org/html/rfc3986&quot;&gt;RFC 3986&lt;/a&gt;，URI由方案，授权，路径，查询字符串和片段组成。该方案始终是必需的。权限或路径之一也始终是必需的。查询字符串和片段是可选的。</target>
        </trans-unit>
        <trans-unit id="3633f7a51e4245458f8785818b84ca9b6251c6fd" translate="yes" xml:space="preserve">
          <source>According to &lt;a href=&quot;https://tools.ietf.org/html/rfc3986&quot;&gt;RFC 3986&lt;/a&gt;, a URI consists of a scheme, an authority, a path, a query string, and a fragment. The scheme is always required. One of either the authority or the path is also always required. The query string and fragment are optional.</source>
          <target state="translated">根据&lt;a href=&quot;https://tools.ietf.org/html/rfc3986&quot;&gt;RFC 3986&lt;/a&gt;，URI由方案，授权，路径，查询字符串和片段组成。该方案始终是必需的。权限或路径之一也始终是必需的。查询字符串和片段是可选的。</target>
        </trans-unit>
        <trans-unit id="05b6d5d4d823df2e184aec7120d805247860b8ea" translate="yes" xml:space="preserve">
          <source>According to the SQL standard, PRIMARY KEY should always imply NOT NULL. Unfortunately, due to a bug in some early versions, this is not the case in SQLite. Unless the column is an &lt;a href=&quot;lang_createtable#rowid&quot;&gt;INTEGER PRIMARY KEY&lt;/a&gt; or the table is a &lt;a href=&quot;withoutrowid&quot;&gt;WITHOUT ROWID&lt;/a&gt; table or the column is declared NOT NULL, SQLite allows NULL values in a PRIMARY KEY column. SQLite could be fixed to conform to the standard, but doing so might break legacy applications. Hence, it has been decided to merely document the fact that SQLite allowing NULLs in most PRIMARY KEY columns.</source>
          <target state="translated">根据SQL标准，PRIMARY KEY应该始终暗示NOT NULL。不幸的是，由于某些早期版本中的错误，在SQLite中并非如此。除非该列是&lt;a href=&quot;lang_createtable#rowid&quot;&gt;INTEGER PRIMARY KEY&lt;/a&gt;或表是&lt;a href=&quot;withoutrowid&quot;&gt;WITHOUT ROWID&lt;/a&gt;表或将该列声明为NOT NULL，否则SQLite允许在PRIMARY KEY列中使用NULL值。可以修复SQLite以使其符合标准，但是这样做可能会破坏旧版应用程序。因此，决定仅记录SQLite在大多数PRIMARY KEY列中允许NULL的事实。</target>
        </trans-unit>
        <trans-unit id="3dec6852ffb8757da75544af2803b809f2b130fe" translate="yes" xml:space="preserve">
          <source>Acquire a PENDING lock then an EXCLUSIVE lock on the database file. (Note: Do not acquire a RESERVED lock because that would make other processes think the journal was no longer hot.) If we fail to acquire these locks it means another process is already trying to do the rollback. In that case, drop all locks, close the database, and return SQLITE_BUSY.</source>
          <target state="translated">在数据库文件上获取一个PENDING锁,然后获取一个EXCLUSIVE锁。(注意:不要获取RESERVED锁,因为这样会让其他进程认为该日志不再是热的。)如果我们没有获得这些锁,就意味着另一个进程已经在尝试进行回滚。在这种情况下,放弃所有锁,关闭数据库,并返回SQLITE_BUSY。</target>
        </trans-unit>
        <trans-unit id="1eb030a7cb15f50d9dc25d4f04078043f2675ff3" translate="yes" xml:space="preserve">
          <source>Activate schema editing using &lt;a href=&quot;pragma#pragma_writable_schema&quot;&gt;PRAGMA writable_schema=ON&lt;/a&gt;.</source>
          <target state="translated">使用&lt;a href=&quot;pragma#pragma_writable_schema&quot;&gt;PRAGMA writable_schema = ON&lt;/a&gt;激活模式编辑。</target>
        </trans-unit>
        <trans-unit id="5c78b30e5c862affd42bb5f1c596df83d2545ece" translate="yes" xml:space="preserve">
          <source>Actually, SQLite will easily do 50,000 or more &lt;a href=&quot;lang_insert&quot;&gt;INSERT&lt;/a&gt; statements per second on an average desktop computer. But it will only do a few dozen transactions per second. Transaction speed is limited by the rotational speed of your disk drive. A transaction normally requires two complete rotations of the disk platter, which on a 7200RPM disk drive limits you to about 60 transactions per second.</source>
          <target state="translated">实际上，在普通台式计算机上，SQLite 每秒可以轻松地执行50,000个或更多&lt;a href=&quot;lang_insert&quot;&gt;INSERT&lt;/a&gt;语句。但是它每秒只能进行几十笔交易。事务处理速度受磁盘驱动器旋转速度的限制。一个事务通常需要磁盘盘完整旋转两次，而在7200RPM磁盘驱动器上，这会将您限制为每秒大约60个事务。</target>
        </trans-unit>
        <trans-unit id="5bc81cc5fb5822da9569ed8c4f8843257c8f59e9" translate="yes" xml:space="preserve">
          <source>Actually, if one is only concerned with atomic and consistent writes and is willing to forego durable writes, the sync operation does not need to wait until the content is completely stored on persistent media. Instead, the sync operation can be thought of as an I/O barrier. As long as all writes that occur before the sync are completed before any write that happens after the sync, no database corruption will occur. If sync is operating as an I/O barrier and not as a true sync, then a power failure or system crash might cause one or more previously committed transactions to roll back (in violation of the &quot;durable&quot; property of &quot;ACID&quot;) but the database will at least continue to be consistent, and that is what most people care about.</source>
          <target state="translated">实际上,如果只关心原子和一致的写入,并且愿意放弃持久的写入,同步操作就不需要等到内容完全存储在持久性介质上。相反,同步操作可以被认为是一个I/O屏障。只要在同步之前发生的所有写入都在同步之后发生的任何写入之前完成,就不会发生数据库损坏。如果同步操作是作为I/O屏障而不是真正的同步,那么断电或系统崩溃可能会导致之前提交的一个或多个事务回滚(违反了 &quot;ACID &quot;的 &quot;持久 &quot;属性),但数据库至少会继续保持一致,这也是大多数人关心的。</target>
        </trans-unit>
        <trans-unit id="61cc55aa0453184734c3fa0b621eda6fa874bd83" translate="yes" xml:space="preserve">
          <source>Add</source>
          <target state="translated">Add</target>
        </trans-unit>
        <trans-unit id="8ac6e880abe35cd3b7a1b0834fe47d4337bfddaa" translate="yes" xml:space="preserve">
          <source>Add &lt;a href=&quot;c3ref/c_stmtstatus_counter#sqlitestmtstatusreprepare&quot;&gt;SQLITE_STMTSTATUS_REPREPARE&lt;/a&gt;, &lt;a href=&quot;c3ref/c_stmtstatus_counter#sqlitestmtstatusrun&quot;&gt;SQLITE_STMTSTATUS_RUN&lt;/a&gt;, and &lt;a href=&quot;c3ref/c_stmtstatus_counter#sqlitestmtstatusmemused&quot;&gt;SQLITE_STMTSTATUS_MEMUSED&lt;/a&gt; options for the &lt;a href=&quot;c3ref/stmt_status&quot;&gt;sqlite3_stmt_status()&lt;/a&gt; interface.</source>
          <target state="translated">为&lt;a href=&quot;c3ref/stmt_status&quot;&gt;sqlite3_stmt_status（）&lt;/a&gt;接口添加&lt;a href=&quot;c3ref/c_stmtstatus_counter#sqlitestmtstatusreprepare&quot;&gt;SQLITE_STMTSTATUS_REPREPARE&lt;/a&gt;，&lt;a href=&quot;c3ref/c_stmtstatus_counter#sqlitestmtstatusrun&quot;&gt;SQLITE_STMTSTATUS_RUN&lt;/a&gt;和&lt;a href=&quot;c3ref/c_stmtstatus_counter#sqlitestmtstatusmemused&quot;&gt;SQLITE_STMTSTATUS_MEMUSED&lt;/a&gt;选项。</target>
        </trans-unit>
        <trans-unit id="58cbb6e0f1775750062ac5669e49e04ab20b20ce" translate="yes" xml:space="preserve">
          <source>Add &lt;a href=&quot;fts3#fts4&quot;&gt;full text search&lt;/a&gt; capabilities to the slide deck, or across multiple slide decks.</source>
          <target state="translated">将&lt;a href=&quot;fts3#fts4&quot;&gt;全文搜索&lt;/a&gt;功能添加到幻灯片组或跨多个幻灯片组。</target>
        </trans-unit>
        <trans-unit id="8dfeff2912792716526d37688fba56051d490d1d" translate="yes" xml:space="preserve">
          <source>Add &lt;a href=&quot;rescode#readonly_dbmoved&quot;&gt;SQLITE_READONLY_DBMOVED&lt;/a&gt; error code, returned at the beginning of a transaction, to indicate that the underlying database file has been renamed or moved out from under SQLite.</source>
          <target state="translated">添加在事务开始时返回的&lt;a href=&quot;rescode#readonly_dbmoved&quot;&gt;SQLITE_READONLY_DBMOVED&lt;/a&gt;错误代码，以表明基础数据库文件已被重命名或已从SQLite下移出。</target>
        </trans-unit>
        <trans-unit id="1c3f88960217978a5bdd7bc25245b711a532a875" translate="yes" xml:space="preserve">
          <source>Add A Changeset To A Changegroup</source>
          <target state="translated">添加一个变更组到一个变更组</target>
        </trans-unit>
        <trans-unit id="9c66f22d5376c90e1654bc1561e3076b1f2090a2" translate="yes" xml:space="preserve">
          <source>Add C-language APIs for discovering SQL keywords used by SQLite: &lt;a href=&quot;c3ref/keyword_check&quot;&gt;sqlite3_keyword_count()&lt;/a&gt;, &lt;a href=&quot;c3ref/keyword_check&quot;&gt;sqlite3_keyword_name()&lt;/a&gt;, and &lt;a href=&quot;c3ref/keyword_check&quot;&gt;sqlite3_keyword_check()&lt;/a&gt;.</source>
          <target state="translated">添加用于发现SQLite使用的SQL关键字的C语言API：&lt;a href=&quot;c3ref/keyword_check&quot;&gt;sqlite3_keyword_count（）&lt;/a&gt;，&lt;a href=&quot;c3ref/keyword_check&quot;&gt;sqlite3_keyword_name（）&lt;/a&gt;和&lt;a href=&quot;c3ref/keyword_check&quot;&gt;sqlite3_keyword_check（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="65ffcfc767739ad0ab5f4bd4c91e85118f99542a" translate="yes" xml:space="preserve">
          <source>Add C-language APIs for dynamic strings based on the &lt;a href=&quot;c3ref/str&quot;&gt;sqlite3_str&lt;/a&gt; object.</source>
          <target state="translated">为基于&lt;a href=&quot;c3ref/str&quot;&gt;sqlite3_str&lt;/a&gt;对象的动态字符串添加C语言API 。</target>
        </trans-unit>
        <trans-unit id="2c5a3264f3bad4a3d08e2dbdc79dc6adf56d9043" translate="yes" xml:space="preserve">
          <source>Add Content To A Dynamic String</source>
          <target state="translated">添加内容到一个动态字符串</target>
        </trans-unit>
        <trans-unit id="6d839bba6e835d3e16ff5554d03f6b92e3f024d0" translate="yes" xml:space="preserve">
          <source>Add FD_CLOEXEC to all open files under Unix.</source>
          <target state="translated">将FD_CLOEXEC添加到Unix下所有打开的文件中。</target>
        </trans-unit>
        <trans-unit id="45653642fbaec798956daf72ef08f996b3b84141" translate="yes" xml:space="preserve">
          <source>Add VxWorks-7 as an officially supported and tested platform.</source>
          <target state="translated">增加VxWorks-7作为官方支持和测试的平台。</target>
        </trans-unit>
        <trans-unit id="e51c9c34fae46cbf2d267f197a36b3b0082c2414" translate="yes" xml:space="preserve">
          <source>Add a &quot;fragmentation&quot; measurement in the output of sqlite3_analyzer.</source>
          <target state="translated">在sqlite3_analyzer的输出中增加一个 &quot;碎片 &quot;测量。</target>
        </trans-unit>
        <trans-unit id="233e69a92bb5e64e50fa57ffccc06dceae5fcbce" translate="yes" xml:space="preserve">
          <source>Add a &lt;a href=&quot;http://www.sqlite.org/src/fdiff?sbs=1&amp;amp;v1=7d539cedb1c&amp;amp;v2=ebad891b7494d&amp;amp;smhdr&quot;&gt;one-character fix&lt;/a&gt; for a problem that might cause incorrect query results on a query that mixes DISTINCT, GROUP BY in a subquery, and ORDER BY. &lt;a href=&quot;http://www.sqlite.org/src/info/98825a79ce1456863&quot;&gt;Ticket 98825a79ce14&lt;/a&gt;.</source>
          <target state="translated">为一个可能导致对混合DISTINCT，子查询中的GROUP BY和ORDER BY的查询产生不正确查询结果的问题添加一个&lt;a href=&quot;http://www.sqlite.org/src/fdiff?sbs=1&amp;amp;v1=7d539cedb1c&amp;amp;v2=ebad891b7494d&amp;amp;smhdr&quot;&gt;字符修复&lt;/a&gt;。&lt;a href=&quot;http://www.sqlite.org/src/info/98825a79ce1456863&quot;&gt;机票98825a79ce14&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4c7ee32bdb24a1d0b97fa87288b81011cf0a153e" translate="yes" xml:space="preserve">
          <source>Add a &lt;a href=&quot;https://www.sqlite.org/src/fdiff?sbs=1&amp;amp;v1=7d539cedb1c&amp;amp;v2=ebad891b7494d&amp;amp;smhdr&quot;&gt;one-character fix&lt;/a&gt; for a problem that might cause incorrect query results on a query that mixes DISTINCT, GROUP BY in a subquery, and ORDER BY. &lt;a href=&quot;https://www.sqlite.org/src/info/98825a79ce1456863&quot;&gt;Ticket 98825a79ce14&lt;/a&gt;.</source>
          <target state="translated">为一个可能导致对混合DISTINCT，子查询中的GROUP BY和ORDER BY的查询产生不正确查询结果的问题添加一个&lt;a href=&quot;https://www.sqlite.org/src/fdiff?sbs=1&amp;amp;v1=7d539cedb1c&amp;amp;v2=ebad891b7494d&amp;amp;smhdr&quot;&gt;字符修复程序&lt;/a&gt;。&lt;a href=&quot;https://www.sqlite.org/src/info/98825a79ce1456863&quot;&gt;机票98825a79ce14&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0fef40390b6db6660e8fd5ac547942832b3f403b" translate="yes" xml:space="preserve">
          <source>Add a few #ifdef and build script changes to address compilation issues that appeared after the 3.9.0 release.</source>
          <target state="translated">增加一些#ifdef和构建脚本的修改,以解决3.9.0版本后出现的编译问题。</target>
        </trans-unit>
        <trans-unit id="30713a4bbbb832f4d4a12dd5d80665712406baac" translate="yes" xml:space="preserve">
          <source>Add a limit counter to the query planner to prevent excessive &lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare()&lt;/a&gt; times for certain pathological SQL inputs.</source>
          <target state="translated">向查询计划器添加一个限制计数器，以防止某些病理SQL输入出现过多的&lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare（）&lt;/a&gt;时间。</target>
        </trans-unit>
        <trans-unit id="6b8f1d1e0ae5e1fa1781dadcf39fcd78b4b595c9" translate="yes" xml:space="preserve">
          <source>Add a makefile target &quot;sqlite3.c&quot; that builds an amalgamation containing the core SQLite library C code in a single file.</source>
          <target state="translated">增加一个makefile目标 &quot;sqlite3.c&quot;,在一个文件中建立一个包含核心SQLite库C代码的amalgamation。</target>
        </trans-unit>
        <trans-unit id="ad83f8f8177f2cca17785adb28404967ca258c75" translate="yes" xml:space="preserve">
          <source>Add a new test harness called &quot;mptester&quot; used to verify correct operation when multiple processes are using the same database file at the same time.</source>
          <target state="translated">增加一个名为 &quot;mptester &quot;的新测试线束,用于在多个进程同时使用同一个数据库文件时验证操作是否正确。</target>
        </trans-unit>
        <trans-unit id="e847129cbafc1b300962a09db16bffecab4a4530" translate="yes" xml:space="preserve">
          <source>Add a new type of fts5vocab virtual table - &quot;instance&quot; - that provides direct access to an FTS5 full-text index at the lowest possible level.</source>
          <target state="translated">增加一种新的fts5vocab虚拟表--&quot;实例&quot;--提供对最低级别的fts5全文索引的直接访问。</target>
        </trans-unit>
        <trans-unit id="feb097c7808e448486c05ee42c0ad6699287c273" translate="yes" xml:space="preserve">
          <source>Add a numeric version number to the sqlite3.h include file.</source>
          <target state="translated">在 sqlite3.h 包含的文件中添加一个数字版本号。</target>
        </trans-unit>
        <trans-unit id="192cfdedd0a31a6c0e19a0d0ffbfa19825b53d8b" translate="yes" xml:space="preserve">
          <source>Add a zero terminator if needed</source>
          <target state="translated">如有需要,可加一个零终止符</target>
        </trans-unit>
        <trans-unit id="d0f1497ef21ab12913bab71ba40d0af254e81913" translate="yes" xml:space="preserve">
          <source>Add additional forward compatibility to the future version 3.2 database file format.</source>
          <target state="translated">增加对未来3.2版数据库文件格式的前向兼容性。</target>
        </trans-unit>
        <trans-unit id="41a75e7708f6493171875bbdcb71d6c0d0c35512" translate="yes" xml:space="preserve">
          <source>Add all changes within the changeset (or patchset) in buffer pData (size nData bytes) to the changegroup.</source>
          <target state="translated">将缓冲区pData(大小为nData字节)中的所有变化添加到changegroup中。</target>
        </trans-unit>
        <trans-unit id="53df8d5802795502e64b884c78d43fbcd180d6bf" translate="yes" xml:space="preserve">
          <source>Add an extension loading entry point routine that looks like something the following:</source>
          <target state="translated">添加一个扩展加载切入点例程,看起来像下面的东西。</target>
        </trans-unit>
        <trans-unit id="99f1bd5a0f02484338a165c19358793d065e8df6" translate="yes" xml:space="preserve">
          <source>Add demonstration code showing how to build a VFS for a raw mass storage without a filesystem.</source>
          <target state="translated">增加演示代码,展示如何为一个没有文件系统的原始大容量存储建立一个VFS。</target>
        </trans-unit>
        <trans-unit id="074e15d829469130ecedfd553fe1780886ad13ec" translate="yes" xml:space="preserve">
          <source>Add extension functions &lt;a href=&quot;cli#fileio&quot;&gt;readfile(X) and writefile(X,Y)&lt;/a&gt; (using code copy/pasted from fileio.c in the previous bullet) to the &lt;a href=&quot;cli&quot;&gt;command-line shell&lt;/a&gt;.</source>
          <target state="translated">将扩展功能&lt;a href=&quot;cli#fileio&quot;&gt;readfile（X）和writefile（X，Y）&lt;/a&gt;（使用上一项目符号fileio.c中的代码复制/粘贴）添加到&lt;a href=&quot;cli&quot;&gt;命令行shell中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5609b29ef4b019538ab2911fb3b91dc194584696" translate="yes" xml:space="preserve">
          <source>Add files to existing archive &lt;em&gt;if&lt;/em&gt; they have changed.</source>
          <target state="translated">&lt;em&gt;如果&lt;/em&gt;文件已更改，&lt;em&gt;则将&lt;/em&gt;它们添加到现有存档中。</target>
        </trans-unit>
        <trans-unit id="3e66dc568f4c182e96e2de9065612a0db049a1a8" translate="yes" xml:space="preserve">
          <source>Add files to existing archive.</source>
          <target state="translated">将文件添加到现有档案中。</target>
        </trans-unit>
        <trans-unit id="acbd82da92201959c1e073134cea4dbf8415586f" translate="yes" xml:space="preserve">
          <source>Add forward compatibility to the future version 3.2 database file format.</source>
          <target state="translated">增加对未来3.2版数据库文件格式的前瞻性兼容性。</target>
        </trans-unit>
        <trans-unit id="dd1bef805d2eee9b43a065117a80304d349f0efa" translate="yes" xml:space="preserve">
          <source>Add functions prototypes for the database encryption API.</source>
          <target state="translated">增加数据库加密API的函数原型。</target>
        </trans-unit>
        <trans-unit id="ee62379e8314b790802298bb169ed3d7eef9f2d4" translate="yes" xml:space="preserve">
          <source>Add interfaces sqlite3_quota_ferror() and sqlite3_quota_file_available() to the test_quota.c module.</source>
          <target state="translated">在test_quota.c模块中添加接口sqlite3_quota_ferror()和sqlite3_quota_file_available()。</target>
        </trans-unit>
        <trans-unit id="d9994f198ea8554c8d135ebfa9e7a42a508d9f76" translate="yes" xml:space="preserve">
          <source>Add new &lt;a href=&quot;bindptr&quot;&gt;pointer passing interfaces&lt;/a&gt;.</source>
          <target state="translated">添加新的&lt;a href=&quot;bindptr&quot;&gt;指针传递接口&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c37dbbd1aba851a9c8e067c055285579f7ba5410" translate="yes" xml:space="preserve">
          <source>Add new verbs to &lt;a href=&quot;c3ref/vtab_config&quot;&gt;sqlite3_vtab_config()&lt;/a&gt; so that the &lt;a href=&quot;vtab#xconnect&quot;&gt;xConnect&lt;/a&gt; method of virtual tables can declare the virtual table as &lt;a href=&quot;c3ref/c_vtab_constraint_support#sqlitevtabinnocuous&quot;&gt;SQLITE_VTAB_INNOCUOUS&lt;/a&gt; or &lt;a href=&quot;c3ref/c_vtab_constraint_support#sqlitevtabdirectonly&quot;&gt;SQLITE_VTAB_DIRECTONLY&lt;/a&gt;.</source>
          <target state="translated">向&lt;a href=&quot;c3ref/vtab_config&quot;&gt;sqlite3_vtab_config（）&lt;/a&gt;添加新动词，以便虚拟表的&lt;a href=&quot;vtab#xconnect&quot;&gt;xConnect&lt;/a&gt;方法可以将虚拟表声明为&lt;a href=&quot;c3ref/c_vtab_constraint_support#sqlitevtabinnocuous&quot;&gt;SQLITE_VTAB_INNOCUOUS&lt;/a&gt;或&lt;a href=&quot;c3ref/c_vtab_constraint_support#sqlitevtabdirectonly&quot;&gt;SQLITE_VTAB_DIRECTONLY&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7e6207d3440089bac343c8fc43288997a2214b79" translate="yes" xml:space="preserve">
          <source>Add option support for LIMIT and ORDER BY clauses on &lt;a href=&quot;lang_delete&quot;&gt;DELETE&lt;/a&gt; and &lt;a href=&quot;lang_update&quot;&gt;UPDATE&lt;/a&gt; statements. Only works if SQLite is compiled with &lt;a href=&quot;compile#enable_update_delete_limit&quot;&gt;SQLITE_ENABLE_UPDATE_DELETE_LIMIT&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;lang_delete&quot;&gt;DELETE&lt;/a&gt;和&lt;a href=&quot;lang_update&quot;&gt;UPDATE&lt;/a&gt;语句上添加对LIMIT和ORDER BY子句的选项支持。仅在使用&lt;a href=&quot;compile#enable_update_delete_limit&quot;&gt;SQLITE_ENABLE_UPDATE_DELETE_LIMIT&lt;/a&gt;编译SQLite时有效。</target>
        </trans-unit>
        <trans-unit id="efbdccfa6f84dcf86953bb91270d5a08c92376ba" translate="yes" xml:space="preserve">
          <source>Add options &quot;--expanded&quot;, &quot;--normalized&quot;, &quot;--plain&quot;, &quot;--profile&quot;, &quot;--row&quot;, &quot;--stmt&quot;, and &quot;--close&quot; to the &quot;.trace&quot; command.</source>
          <target state="translated">在&quot;.trace &quot;命令中增加&quot;--expanded&quot;、&quot;--normalized&quot;、&quot;--plain&quot;、&quot;--profile&quot;、&quot;--row&quot;、&quot;--stmt &quot;和&quot;--close &quot;等选项。</target>
        </trans-unit>
        <trans-unit id="4cbca09144fd7e3e8b43bc8c2d286fd40deac6d2" translate="yes" xml:space="preserve">
          <source>Add options &lt;b&gt;-encoding&lt;/b&gt; and &lt;b&gt;-tcl-uses-utf&lt;/b&gt; to the &lt;b&gt;sqlite&lt;/b&gt; TCL command.</source>
          <target state="translated">添加选项&lt;b&gt;-编码&lt;/b&gt;和&lt;b&gt;-tcl用途，UTF&lt;/b&gt;到&lt;b&gt;sqlite的&lt;/b&gt; TCL命令。</target>
        </trans-unit>
        <trans-unit id="0c2f37fd7facad2de96bd5183bac5e1e1511c68e" translate="yes" xml:space="preserve">
          <source>Add options to the &lt;a href=&quot;cli#csv&quot;&gt;.import&lt;/a&gt; command: --csv, --ascii, --skip</source>
          <target state="translated">向&lt;a href=&quot;cli#csv&quot;&gt;.import&lt;/a&gt;命令添加选项：--csv，--ascii，--skip</target>
        </trans-unit>
        <trans-unit id="d573825baf33d38c179e029681eca20a46ccd519" translate="yes" xml:space="preserve">
          <source>Add pluggable tokenizers and &lt;a href=&quot;http://www.icu-project.org/&quot;&gt;ICU&lt;/a&gt; tokenization support to FTS2</source>
          <target state="translated">向FTS2 添加可插入标记器和&lt;a href=&quot;http://www.icu-project.org/&quot;&gt;ICU&lt;/a&gt;标记支持</target>
        </trans-unit>
        <trans-unit id="72c6bdab5b3258b6277e55104bb87d93b720f14a" translate="yes" xml:space="preserve">
          <source>Add support for &quot;.open --hexdb&quot;. The &quot;&lt;a href=&quot;https://sqlite.org/src/doc/trunk/tool/dbtotxt.md&quot;&gt;dbtotxt&lt;/a&gt;&quot; utility program used to generate the text for the &quot;hexdb&quot; is added to the source tree.</source>
          <target state="translated">添加对&amp;ldquo; .open --hexdb&amp;rdquo;的支持。用于生成&amp;ldquo; hexdb&amp;rdquo;文本的&amp;ldquo; &lt;a href=&quot;https://sqlite.org/src/doc/trunk/tool/dbtotxt.md&quot;&gt;dbtotxt&lt;/a&gt; &amp;rdquo;实用程序已添加到源树中。</target>
        </trans-unit>
        <trans-unit id="a0763ade3c8a449006c413b6f49449ce7b3a928a" translate="yes" xml:space="preserve">
          <source>Add support for &quot;&lt;a href=&quot;windowfunctions#exprrange&quot;&gt;&amp;lt;expr&amp;gt; PRECEDING&lt;/a&gt;&quot; and &quot;&lt;a href=&quot;windowfunctions#exprrange&quot;&gt;&amp;lt;expr&amp;gt; FOLLOWING&lt;/a&gt;&quot; boundaries in RANGE &lt;a href=&quot;windowfunctions#framespec&quot;&gt;frames&lt;/a&gt;.</source>
          <target state="translated">添加对RANGE &lt;a href=&quot;windowfunctions#framespec&quot;&gt;帧中&lt;/a&gt; &amp;ldquo; &lt;a href=&quot;windowfunctions#exprrange&quot;&gt;&amp;lt;expr&amp;gt; PRECEDING&lt;/a&gt; &amp;rdquo;和&amp;ldquo; &lt;a href=&quot;windowfunctions#exprrange&quot;&gt;&amp;lt;expr&amp;gt; FOLLOWING&lt;/a&gt; &amp;rdquo;边界的支持。</target>
        </trans-unit>
        <trans-unit id="e92f21bcec77d71c0f65f3070792505ed0c70690" translate="yes" xml:space="preserve">
          <source>Add support for &quot;PRAGMA page_size&quot; to adjust the page size of the database.</source>
          <target state="translated">增加对 &quot;PRAGMA page_size &quot;的支持,调整数据库的页面大小。</target>
        </trans-unit>
        <trans-unit id="aa2fb3ed1f060dfe837a3d960578d49b6bc22685" translate="yes" xml:space="preserve">
          <source>Add support for &lt;a href=&quot;gencol&quot;&gt;generated columns&lt;/a&gt;.</source>
          <target state="translated">添加对&lt;a href=&quot;gencol&quot;&gt;生成的列的&lt;/a&gt;支持。</target>
        </trans-unit>
        <trans-unit id="6a3c5f5d30415f9f1977e35ba188ec9b5fcd474e" translate="yes" xml:space="preserve">
          <source>Add support for &lt;a href=&quot;mmap&quot;&gt;memory-mapped I/O&lt;/a&gt;.</source>
          <target state="translated">添加对&lt;a href=&quot;mmap&quot;&gt;内存映射I / O的支持&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dc4c8688bed6db9be32019244a2d807910dea0cc" translate="yes" xml:space="preserve">
          <source>Add support for &lt;a href=&quot;partialindex&quot;&gt;partial indexes&lt;/a&gt;</source>
          <target state="translated">添加对&lt;a href=&quot;partialindex&quot;&gt;部分索引的&lt;/a&gt;支持</target>
        </trans-unit>
        <trans-unit id="c5b2de4466aa197bc12dce31206322740e3db16d" translate="yes" xml:space="preserve">
          <source>Add support for &lt;a href=&quot;rtree#auxcol&quot;&gt;auxiliary columns in r-tree tables&lt;/a&gt;.</source>
          <target state="translated">添加对&lt;a href=&quot;rtree#auxcol&quot;&gt;r-tree表中辅助列的&lt;/a&gt;支持。</target>
        </trans-unit>
        <trans-unit id="f90c29b7cfc3c62f6507d98b86aed5242ee68ae7" translate="yes" xml:space="preserve">
          <source>Add support for &lt;a href=&quot;uri&quot;&gt;URI filenames&lt;/a&gt;</source>
          <target state="translated">添加对&lt;a href=&quot;uri&quot;&gt;URI文件名的&lt;/a&gt;支持</target>
        </trans-unit>
        <trans-unit id="af696b60eb69d945c8a46227c312eb8878086caa" translate="yes" xml:space="preserve">
          <source>Add support for &lt;a href=&quot;windowfunctions&quot;&gt;window functions&lt;/a&gt;</source>
          <target state="translated">添加对&lt;a href=&quot;windowfunctions&quot;&gt;窗口功能的&lt;/a&gt;支持</target>
        </trans-unit>
        <trans-unit id="136f3b0eed5bac09b5f3815f7575bda175da3514" translate="yes" xml:space="preserve">
          <source>Add support for &lt;a href=&quot;windowfunctions#grouptype&quot;&gt;GROUPS frames&lt;/a&gt;.</source>
          <target state="translated">添加对&lt;a href=&quot;windowfunctions#grouptype&quot;&gt;GROUPS框架的&lt;/a&gt;支持。</target>
        </trans-unit>
        <trans-unit id="e66dce38847e4f4f6cc41e4cccbb39be56c45c40" translate="yes" xml:space="preserve">
          <source>Add support for &lt;a href=&quot;windowfunctions#wchaining&quot;&gt;window chaining&lt;/a&gt;.</source>
          <target state="translated">添加对&lt;a href=&quot;windowfunctions#wchaining&quot;&gt;窗口链接的&lt;/a&gt;支持。</target>
        </trans-unit>
        <trans-unit id="212edd25833b5883700b116710f87eea867169b2" translate="yes" xml:space="preserve">
          <source>Add support for DEFERRED, IMMEDIATE, and EXCLUSIVE transactions.</source>
          <target state="translated">增加对DEFERRED、IMMEDIATE和EXCLUSIVE交易的支持。</target>
        </trans-unit>
        <trans-unit id="5fb939adf84fb0194534bbaf8a41088037bb5c1e" translate="yes" xml:space="preserve">
          <source>Add support for INSERT OR REPLACE, INSERT OR IGNORE, and UPDATE OR REPLACE in the &lt;a href=&quot;zipfile&quot;&gt;Zipfile virtual table&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;zipfile&quot;&gt;Zipfile虚拟表中&lt;/a&gt;添加对INSERT OR REPLACE，INSERT OR IGNORE和UPDATE OR REPLACE的支持。</target>
        </trans-unit>
        <trans-unit id="f2330e77a6f10374d78e1306109d17dffa46e862" translate="yes" xml:space="preserve">
          <source>Add support for PostgreSQL-style &lt;a href=&quot;lang_upsert&quot;&gt;UPSERT&lt;/a&gt;.</source>
          <target state="translated">添加对PostgreSQL风格的&lt;a href=&quot;lang_upsert&quot;&gt;UPSERT的&lt;/a&gt;支持。</target>
        </trans-unit>
        <trans-unit id="890cc871d57b4e2f53773580ef56c71b18a22739" translate="yes" xml:space="preserve">
          <source>Add support for coverage testing of VDBE programs using the &lt;a href=&quot;c3ref/c_testctrl_always&quot;&gt;SQLITE_TESTCTRL_VDBE_COVERAGE&lt;/a&gt; verb of &lt;a href=&quot;c3ref/test_control&quot;&gt;sqlite3_test_control()&lt;/a&gt;.</source>
          <target state="translated">使用&lt;a href=&quot;c3ref/test_control&quot;&gt;sqlite3_test_control（）&lt;/a&gt;的&lt;a href=&quot;c3ref/c_testctrl_always&quot;&gt;SQLITE_TESTCTRL_VDBE_COVERAGE&lt;/a&gt;动词添加对VDBE程序的覆盖测试的支持。</target>
        </trans-unit>
        <trans-unit id="be6c363a6bf564dc52386b7db08ec41552cf1d89" translate="yes" xml:space="preserve">
          <source>Add support for handling &lt;a href=&quot;fts3&quot;&gt;FTS3&lt;/a&gt;, &lt;a href=&quot;fts5&quot;&gt;FTS5&lt;/a&gt; and &lt;a href=&quot;rtree&quot;&gt;rtree&lt;/a&gt; virtual tables. &lt;a href=&quot;#vtab&quot;&gt;See below&lt;/a&gt; for details.</source>
          <target state="translated">添加对处理&lt;a href=&quot;fts3&quot;&gt;FTS3&lt;/a&gt;，&lt;a href=&quot;fts5&quot;&gt;FTS5&lt;/a&gt;和&lt;a href=&quot;rtree&quot;&gt;rtree&lt;/a&gt;虚拟表的支持。&lt;a href=&quot;#vtab&quot;&gt;有关&lt;/a&gt;详情，请参见下文。</target>
        </trans-unit>
        <trans-unit id="a526c3a38229774d8ba86548def1a8d12a36b235" translate="yes" xml:space="preserve">
          <source>Add support for renaming columns within a table using ALTER TABLE</source>
          <target state="translated">增加对表内使用ALTER TABLE重命名列的支持。</target>
        </trans-unit>
        <trans-unit id="d659c9c8cb6c1f04393b0fc5e63bbdac64002cf9" translate="yes" xml:space="preserve">
          <source>Add support for tab-completion using the &lt;a href=&quot;completion&quot;&gt;COMPLETION extension&lt;/a&gt;, for both readline and linenoise.</source>
          <target state="translated">使用&lt;a href=&quot;completion&quot;&gt;COMPLETION扩展名&lt;/a&gt;添加对制表符补全的支持，用于读取行和行噪声。</target>
        </trans-unit>
        <trans-unit id="f4eee573107dab889c4b93bbd22bffbdf1483817" translate="yes" xml:space="preserve">
          <source>Add support for the &quot;--maxsize N&quot; option on &quot;.open --deserialize&quot;.</source>
          <target state="translated">在&quot;.open --deserialize &quot;中增加对&quot;--maxsize N &quot;选项的支持。</target>
        </trans-unit>
        <trans-unit id="31f5d3e263c4687cf09a721220bb511aa4a69c6f" translate="yes" xml:space="preserve">
          <source>Add support for the &lt;a href=&quot;lang_aggfunc#aggfilter&quot;&gt;FILTER clause on aggregate functions&lt;/a&gt;.</source>
          <target state="translated">增加&lt;a href=&quot;lang_aggfunc#aggfilter&quot;&gt;对聚合函数FILTER子句的&lt;/a&gt;支持。</target>
        </trans-unit>
        <trans-unit id="f217130627272aa13b670d0e6f0d5167655ce0bd" translate="yes" xml:space="preserve">
          <source>Add support for the &lt;a href=&quot;lang_select#nullslast&quot;&gt;NULLS FIRST&lt;/a&gt; and &lt;a href=&quot;lang_select#nullslast&quot;&gt;NULLS LAST&lt;/a&gt; syntax in &lt;a href=&quot;lang_select#orderby&quot;&gt;ORDER BY&lt;/a&gt; clauses.</source>
          <target state="translated">在&lt;a href=&quot;lang_select#orderby&quot;&gt;ORDER BY&lt;/a&gt;子句中添加对&lt;a href=&quot;lang_select#nullslast&quot;&gt;NULLS FIRST&lt;/a&gt;和&lt;a href=&quot;lang_select#nullslast&quot;&gt;NULLS LAST&lt;/a&gt;语法的支持。</target>
        </trans-unit>
        <trans-unit id="f4007f3ce6829066fa4409e2ecd136e62637d894" translate="yes" xml:space="preserve">
          <source>Add support for the full SQL-92 join syntax and LEFT OUTER JOINs.</source>
          <target state="translated">增加对完整的SQL-92连接语法和LEFT OUTER JOIN的支持。</target>
        </trans-unit>
        <trans-unit id="3a2eb33317dae4a033cc092362d492fb572cccd4" translate="yes" xml:space="preserve">
          <source>Add support for wildcard parameters of the form: &quot;?nnn&quot;</source>
          <target state="translated">增加对表单通配符参数的支持。&quot;?nnnn&quot;</target>
        </trans-unit>
        <trans-unit id="1eb80b8d534ca7c36dc1e214c6909a01fde00f37" translate="yes" xml:space="preserve">
          <source>Add support the &lt;a href=&quot;windowfunctions#wexcls&quot;&gt;EXCLUDE clause&lt;/a&gt;.</source>
          <target state="translated">添加对&lt;a href=&quot;windowfunctions#wexcls&quot;&gt;EXCLUDE子句的&lt;/a&gt;支持。</target>
        </trans-unit>
        <trans-unit id="4ab8baa6625378dcd2fbc2b48fe42102792d59fe" translate="yes" xml:space="preserve">
          <source>Add tclsqlite.c to the libsqlite.a library</source>
          <target state="translated">将tclsqlite.c添加到libsqlite.a库中。</target>
        </trans-unit>
        <trans-unit id="936423dc9b571e197d4ed47a549d3e24bf5f5c1f" translate="yes" xml:space="preserve">
          <source>Add tests to make sure that tclsqlite was compiled using Tcl header files and libraries that match.</source>
          <target state="translated">增加测试以确保tclsqlite是使用Tcl头文件和匹配的库编译的。</target>
        </trans-unit>
        <trans-unit id="8e0200d4b2125e37622440b4e128b278c449eb8c" translate="yes" xml:space="preserve">
          <source>Add the &quot;%token_class&quot; directive to &lt;a href=&quot;lemon&quot;&gt;Lemon parser generator&lt;/a&gt; and use it to simplify the grammar.</source>
          <target state="translated">将&amp;ldquo;％token_class&amp;rdquo;指令添加到&lt;a href=&quot;lemon&quot;&gt;Lemon解析器生成器，&lt;/a&gt;并使用它来简化语法。</target>
        </trans-unit>
        <trans-unit id="283b2638c2b05ae208073cb37d46fd5320238943" translate="yes" xml:space="preserve">
          <source>Add the &quot;--async&quot; option to the &quot;.backup&quot; command.</source>
          <target state="translated">在&quot;.backup &quot;命令中增加&quot;--async &quot;选项。</target>
        </trans-unit>
        <trans-unit id="f6e8b7b2093500ea36f5f180a7347d1d5a53d8fe" translate="yes" xml:space="preserve">
          <source>Add the &quot;--memtrace&quot; command-line option, to show all memory allocations and deallocations.</source>
          <target state="translated">增加&quot;--memtrace &quot;命令行选项,以显示所有的内存分配和deallocations。</target>
        </trans-unit>
        <trans-unit id="216e54fa647db35fda70c92921d3229237ed92dd" translate="yes" xml:space="preserve">
          <source>Add the &quot;.binary&quot; and &quot;.limits&quot; commands to the &lt;a href=&quot;cli&quot;&gt;command-line shell&lt;/a&gt;.</source>
          <target state="translated">将&amp;ldquo; .binary&amp;rdquo;和&amp;ldquo; .limits&amp;rdquo;命令添加到&lt;a href=&quot;cli&quot;&gt;命令行shell中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5d8da8fe6a9987104191ff2baa0e3404f2a667db" translate="yes" xml:space="preserve">
          <source>Add the &quot;.cd&quot; command.</source>
          <target state="translated">添加&quot;.cd &quot;命令。</target>
        </trans-unit>
        <trans-unit id="f2d55280d1b7b3a8bbfa8326a3e6f14a48e7308e" translate="yes" xml:space="preserve">
          <source>Add the &quot;.clone&quot; and &quot;.save&quot; commands to the command-line shell.</source>
          <target state="translated">在命令行shell中添加&quot;.clone &quot;和&quot;.save &quot;命令。</target>
        </trans-unit>
        <trans-unit id="c7d25cbe44023d988e7e9d81da8b1c5eafbc6826" translate="yes" xml:space="preserve">
          <source>Add the &quot;.eqp trace&quot; option on builds with SQLITE_DEBUG, to enable bytecode program listing with indentation and &lt;a href=&quot;pragma#pragma_vdbe_trace&quot;&gt;PRAGMA vdbe_trace&lt;/a&gt; all in one step.</source>
          <target state="translated">在使用SQLITE_DEBUG的版本中添加&amp;ldquo; .eqp trace&amp;rdquo;选项，以一步一步启用带有缩进和&lt;a href=&quot;pragma#pragma_vdbe_trace&quot;&gt;PRAGMA vdbe_trace的&lt;/a&gt;字节码程序列表。</target>
        </trans-unit>
        <trans-unit id="97816312767ca4a2c31df9a27f1fb491af457876" translate="yes" xml:space="preserve">
          <source>Add the &quot;.filectrl&quot; command useful for testing.</source>
          <target state="translated">增加对测试有用的&quot;.filectrl &quot;命令。</target>
        </trans-unit>
        <trans-unit id="762e62184ff88d2ac7f6d5e9106bb08dbc9e2cb4" translate="yes" xml:space="preserve">
          <source>Add the &quot;.import&quot; command to the command-line shell.</source>
          <target state="translated">在命令行shell中添加&quot;.import &quot;命令。</target>
        </trans-unit>
        <trans-unit id="cc49dc138146b590b8cff67298e595fca2d6f169" translate="yes" xml:space="preserve">
          <source>Add the &quot;.progress&quot; command for accessing the &lt;a href=&quot;c3ref/progress_handler&quot;&gt;sqlite3_progress_handler()&lt;/a&gt; interface.</source>
          <target state="translated">添加&amp;ldquo; .progress&amp;rdquo;命令以访问&lt;a href=&quot;c3ref/progress_handler&quot;&gt;sqlite3_progress_handler（）&lt;/a&gt;接口。</target>
        </trans-unit>
        <trans-unit id="b7c0e14ee7666efcfedda1a8139570d6579e1c44" translate="yes" xml:space="preserve">
          <source>Add the &quot;.recover&quot; command which tries to recover as much content as possible from a corrupt database file.</source>
          <target state="translated">增加&quot;.recover &quot;命令,试图从损坏的数据库文件中恢复尽可能多的内容。</target>
        </trans-unit>
        <trans-unit id="1e8a4b92340d9f7a1f000bec88f280625487d118" translate="yes" xml:space="preserve">
          <source>Add the &quot;.system&quot; and &quot;.once&quot; commands to the &lt;a href=&quot;cli&quot;&gt;command-line shell&lt;/a&gt;.</source>
          <target state="translated">将&amp;ldquo; .system&amp;rdquo;和&amp;ldquo; .once&amp;rdquo;命令添加到&lt;a href=&quot;cli&quot;&gt;命令行shell中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="88db3041288101d122dcba112957a35b89342c78" translate="yes" xml:space="preserve">
          <source>Add the &quot;.testcase&quot; and &quot;.check&quot; &lt;a href=&quot;cli#dotcmd&quot;&gt;dot-commands&lt;/a&gt;.</source>
          <target state="translated">添加&amp;ldquo; .testcase&amp;rdquo;和&amp;ldquo; .check&amp;rdquo; &lt;a href=&quot;cli#dotcmd&quot;&gt;点命令&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="80eb0002e6ca30dbe7265165c28f78bf3c05f869" translate="yes" xml:space="preserve">
          <source>Add the &quot;.wheretrace&quot; command when compiled with SQLITE_DEBUG</source>
          <target state="translated">在使用SQLITE_DEBUG编译时增加&quot;.wheretrace &quot;命令。</target>
        </trans-unit>
        <trans-unit id="8804479c26e1da45bb9e3ed0888fbc0d4a08ae1c" translate="yes" xml:space="preserve">
          <source>Add the &quot;totype.c&quot; extension, implementing the tointeger() and toreal() SQL functions.</source>
          <target state="translated">增加 &quot;totype.c &quot;扩展,实现tointeger()和toreal()SQL函数。</target>
        </trans-unit>
        <trans-unit id="92a34239c6cf2de2a3fdbbe86a2b80a08fe2e86b" translate="yes" xml:space="preserve">
          <source>Add the --bom option to the &lt;a href=&quot;cli#dotexcel&quot;&gt;.excel&lt;/a&gt;, &lt;a href=&quot;cli#dotoutput&quot;&gt;.output&lt;/a&gt;, and &lt;a href=&quot;cli#dotoutput&quot;&gt;.once&lt;/a&gt; commands.</source>
          <target state="translated">将--bom选项添加到&lt;a href=&quot;cli#dotexcel&quot;&gt;.excel&lt;/a&gt;，&lt;a href=&quot;cli#dotoutput&quot;&gt;.output&lt;/a&gt;和&lt;a href=&quot;cli#dotoutput&quot;&gt;.once&lt;/a&gt;命令。</target>
        </trans-unit>
        <trans-unit id="df81e72aa83e90414fe2ffd4c6cb48365750ab99" translate="yes" xml:space="preserve">
          <source>Add the -withoutnulls option to the &lt;a href=&quot;tclsqlite#eval&quot;&gt;TCL interface eval method&lt;/a&gt;.</source>
          <target state="translated">将-withoutnulls选项添加到&lt;a href=&quot;tclsqlite#eval&quot;&gt;TCL接口eval方法&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fe5b9c333c6038520094761f864493e2e7097cc4" translate="yes" xml:space="preserve">
          <source>Add the .oom command in debugging builds</source>
          <target state="translated">在调试构建中添加.oom命令。</target>
        </trans-unit>
        <trans-unit id="4f125709e724b34ac5ad47f8eda53803f5734890" translate="yes" xml:space="preserve">
          <source>Add the &lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfigenableview&quot;&gt;SQLITE_DBCONFIG_ENABLE_VIEW&lt;/a&gt; option for &lt;a href=&quot;c3ref/db_config&quot;&gt;sqlite3_db_config()&lt;/a&gt;.</source>
          <target state="translated">为&lt;a href=&quot;c3ref/db_config&quot;&gt;sqlite3_db_config（）&lt;/a&gt;添加&lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfigenableview&quot;&gt;SQLITE_DBCONFIG_ENABLE_VIEW&lt;/a&gt;选项。</target>
        </trans-unit>
        <trans-unit id="40592c218ccd34fab463deb3f03be7da30417f9c" translate="yes" xml:space="preserve">
          <source>Add the &lt;a href=&quot;c3ref/c_dbstatus_options#sqlitedbstatuscacheused&quot;&gt;SQLITE_DBSTATUS_CACHE_USED&lt;/a&gt; verb for &lt;a href=&quot;c3ref/db_status&quot;&gt;sqlite3_db_status()&lt;/a&gt;.</source>
          <target state="translated">为&lt;a href=&quot;c3ref/db_status&quot;&gt;sqlite3_db_status（）&lt;/a&gt;添加&lt;a href=&quot;c3ref/c_dbstatus_options#sqlitedbstatuscacheused&quot;&gt;SQLITE_DBSTATUS_CACHE_USED&lt;/a&gt;动词。</target>
        </trans-unit>
        <trans-unit id="e48cfd1c7357fb4864216d4d254e3beabe8b5a2d" translate="yes" xml:space="preserve">
          <source>Add the &lt;a href=&quot;c3ref/c_dbstatus_options#sqlitedbstatuscachewrite&quot;&gt;SQLITE_DBSTATUS_CACHE_WRITE&lt;/a&gt; option for &lt;a href=&quot;c3ref/db_status&quot;&gt;sqlite3_db_status()&lt;/a&gt;.</source>
          <target state="translated">为&lt;a href=&quot;c3ref/db_status&quot;&gt;sqlite3_db_status（）&lt;/a&gt;添加&lt;a href=&quot;c3ref/c_dbstatus_options#sqlitedbstatuscachewrite&quot;&gt;SQLITE_DBSTATUS_CACHE_WRITE&lt;/a&gt;选项。</target>
        </trans-unit>
        <trans-unit id="be8b97d6b9385048b55638f312823bb2eb008ce5" translate="yes" xml:space="preserve">
          <source>Add the &lt;a href=&quot;c3ref/c_fcntl_begin_atomic_write#sqlitefcntljournalpointer&quot;&gt;SQLITE_FCNTL_JOURNAL_POINTER&lt;/a&gt; file control.</source>
          <target state="translated">添加&lt;a href=&quot;c3ref/c_fcntl_begin_atomic_write#sqlitefcntljournalpointer&quot;&gt;SQLITE_FCNTL_JOURNAL_POINTER&lt;/a&gt;文件控件。</target>
        </trans-unit>
        <trans-unit id="081364f71e5fefa3da91ea51b10405c027faaabe" translate="yes" xml:space="preserve">
          <source>Add the &lt;a href=&quot;c3ref/c_fcntl_begin_atomic_write#sqlitefcntlsizelimit&quot;&gt;SQLITE_FCNTL_SIZE_LIMIT&lt;/a&gt;&lt;a href=&quot;c3ref/file_control&quot;&gt;file-control&lt;/a&gt; for setting an upper bound on the size of the in-memory database created by sqlite3_deserialize. The default upper bound is 1GiB, or whatever alternative value is specified by &lt;a href=&quot;c3ref/config&quot;&gt;sqlite3_config&lt;/a&gt;(&lt;a href=&quot;c3ref/c_config_covering_index_scan#sqliteconfigmemdbmaxsize&quot;&gt;SQLITE_CONFIG_MEMDB_MAXSIZE&lt;/a&gt;) and/or &lt;a href=&quot;compile#memdb_default_maxsize&quot;&gt;SQLITE_MEMDB_DEFAULT_MAXSIZE&lt;/a&gt;.</source>
          <target state="translated">添加&lt;a href=&quot;c3ref/c_fcntl_begin_atomic_write#sqlitefcntlsizelimit&quot;&gt;SQLITE_FCNTL_SIZE_LIMIT &lt;/a&gt;&lt;a href=&quot;c3ref/file_control&quot;&gt;文件控件，&lt;/a&gt;以设置sqlite3_deserialize创建的内存数据库大小的上限。默认上限为1GiB，或者由&lt;a href=&quot;c3ref/config&quot;&gt;sqlite3_config&lt;/a&gt;（&lt;a href=&quot;c3ref/c_config_covering_index_scan#sqliteconfigmemdbmaxsize&quot;&gt;SQLITE_CONFIG_MEMDB_MAXSIZE&lt;/a&gt;）和/或&lt;a href=&quot;compile#memdb_default_maxsize&quot;&gt;SQLITE_MEMDB_DEFAULT_MAXSIZE&lt;/a&gt;指定的替代值。</target>
        </trans-unit>
        <trans-unit id="5d92af1fb4c4ac1e07a26f5836df488794b6bbdc" translate="yes" xml:space="preserve">
          <source>Add the &lt;a href=&quot;c3ref/cancel_auto_extension&quot;&gt;sqlite3_cancel_auto_extension(X)&lt;/a&gt; interface.</source>
          <target state="translated">添加&lt;a href=&quot;c3ref/cancel_auto_extension&quot;&gt;sqlite3_cancel_auto_extension（X）&lt;/a&gt;接口。</target>
        </trans-unit>
        <trans-unit id="fe034b4f2512875ab8ea3e02c36867f516b685b5" translate="yes" xml:space="preserve">
          <source>Add the &lt;a href=&quot;c3ref/drop_modules&quot;&gt;sqlite3_drop_modules()&lt;/a&gt; interface, allowing applications to disable automatically loaded virtual tables that they do not need.</source>
          <target state="translated">添加&lt;a href=&quot;c3ref/drop_modules&quot;&gt;sqlite3_drop_modules（）&lt;/a&gt;接口，使应用程序可以禁用不需要的自动加载的虚拟表。</target>
        </trans-unit>
        <trans-unit id="35fb0feea0a1d59c3a8842f9214443f77d92d83e" translate="yes" xml:space="preserve">
          <source>Add the &lt;a href=&quot;c3ref/hard_heap_limit64&quot;&gt;sqlite3_hard_heap_limit64()&lt;/a&gt; interface and the corresponding &lt;a href=&quot;pragma#pragma_hard_heap_limit&quot;&gt;PRAGMA hard_heap_limit&lt;/a&gt; command.</source>
          <target state="translated">添加&lt;a href=&quot;c3ref/hard_heap_limit64&quot;&gt;sqlite3_hard_heap_limit64（）&lt;/a&gt;接口和相应的&lt;a href=&quot;pragma#pragma_hard_heap_limit&quot;&gt;PRAGMA hard_heap_limit&lt;/a&gt;命令。</target>
        </trans-unit>
        <trans-unit id="1930b99359d377b2cc8ba418ec5abbff446f6fae" translate="yes" xml:space="preserve">
          <source>Add the &lt;a href=&quot;c3ref/open#opennofollow&quot;&gt;SQLITE_OPEN_NOFOLLOW&lt;/a&gt; option to &lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open_v2()&lt;/a&gt; that prevents SQLite from opening symbolic links.</source>
          <target state="translated">将&lt;a href=&quot;c3ref/open#opennofollow&quot;&gt;SQLITE_OPEN_NOFOLLOW&lt;/a&gt;选项添加到&lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open_v2（）&lt;/a&gt;可以防止SQLite打开符号链接。</target>
        </trans-unit>
        <trans-unit id="21d27cce565db8490729a43e1af27acdeb1a1d96" translate="yes" xml:space="preserve">
          <source>Add the &lt;a href=&quot;c3ref/pcache_methods2&quot;&gt;application-defined page cache&lt;/a&gt;</source>
          <target state="translated">添加&lt;a href=&quot;c3ref/pcache_methods2&quot;&gt;应用程序定义的页面缓存&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a4d7eada875b03c7029bca58ac2ddc67b6735f11" translate="yes" xml:space="preserve">
          <source>Add the &lt;a href=&quot;c3ref/serialize&quot;&gt;sqlite3_serialize()&lt;/a&gt; and &lt;a href=&quot;c3ref/deserialize&quot;&gt;sqlite3_deserialize()&lt;/a&gt; interfaces when the &lt;a href=&quot;compile#enable_deserialize&quot;&gt;SQLITE_ENABLE_DESERIALIZE&lt;/a&gt; compile-time option is used.</source>
          <target state="translated">使用&lt;a href=&quot;compile#enable_deserialize&quot;&gt;SQLITE_ENABLE_DESERIALIZE&lt;/a&gt;编译时选项时，添加&lt;a href=&quot;c3ref/serialize&quot;&gt;sqlite3_serialize（）&lt;/a&gt;和&lt;a href=&quot;c3ref/deserialize&quot;&gt;sqlite3_deserialize（）&lt;/a&gt;接口。</target>
        </trans-unit>
        <trans-unit id="065e4967252d67f2418c2b348070eac9ee82255f" translate="yes" xml:space="preserve">
          <source>Add the &lt;a href=&quot;c3ref/strglob&quot;&gt;sqlite3_strglob()&lt;/a&gt; convenience interface.</source>
          <target state="translated">添加&lt;a href=&quot;c3ref/strglob&quot;&gt;sqlite3_strglob（）&lt;/a&gt;便捷接口。</target>
        </trans-unit>
        <trans-unit id="bb552cbe49d24f288fc511724cd559eb4a233c0e" translate="yes" xml:space="preserve">
          <source>Add the &lt;a href=&quot;c3ref/uri_boolean&quot;&gt;sqlite3_uri_key()&lt;/a&gt; interface.</source>
          <target state="translated">添加&lt;a href=&quot;c3ref/uri_boolean&quot;&gt;sqlite3_uri_key（）&lt;/a&gt;接口。</target>
        </trans-unit>
        <trans-unit id="52490b8c94f339853539d2cd7b35574401e395a9" translate="yes" xml:space="preserve">
          <source>Add the &lt;a href=&quot;c3ref/vtab_config&quot;&gt;sqlite3_vtab_config()&lt;/a&gt; interface in support of &lt;a href=&quot;lang_conflict&quot;&gt;ON CONFLICT&lt;/a&gt; clauses with &lt;a href=&quot;vtab&quot;&gt;virtual tables&lt;/a&gt;.</source>
          <target state="translated">添加&lt;a href=&quot;c3ref/vtab_config&quot;&gt;sqlite3_vtab_config（）&lt;/a&gt;接口以支持带有&lt;a href=&quot;vtab&quot;&gt;虚拟表&lt;/a&gt;的&lt;a href=&quot;lang_conflict&quot;&gt;ON CONFLICT&lt;/a&gt;子句。</target>
        </trans-unit>
        <trans-unit id="3e9c1c8302237fd30d6977796970b681fda7464c" translate="yes" xml:space="preserve">
          <source>Add the &lt;a href=&quot;cksumvfs&quot;&gt;checksum VFS shim&lt;/a&gt; to the set of run-time loadable extensions included in the source tree.</source>
          <target state="translated">将&lt;a href=&quot;cksumvfs&quot;&gt;校验和VFS填充程序&lt;/a&gt;添加到源树中包含的一组运行时可加载扩展中。</target>
        </trans-unit>
        <trans-unit id="b4f5bebd726b497704665ee703792c5087bc4e88" translate="yes" xml:space="preserve">
          <source>Add the &lt;a href=&quot;compile#default_automatic_index&quot;&gt;SQLITE_DEFAULT_AUTOMATIC_INDEX&lt;/a&gt; compile-time option. Setting this option to 0 disables automatic indices by default.</source>
          <target state="translated">添加&lt;a href=&quot;compile#default_automatic_index&quot;&gt;SQLITE_DEFAULT_AUTOMATIC_INDEX&lt;/a&gt;编译时选项。将此选项设置为0会默认禁用自动索引。</target>
        </trans-unit>
        <trans-unit id="470112a79227f7c994e11abc7f3c3d991569cdaa" translate="yes" xml:space="preserve">
          <source>Add the &lt;a href=&quot;compile#default_lookaside&quot;&gt;SQLITE_DEFAULT_LOOKASIDE&lt;/a&gt; compile-time option.</source>
          <target state="translated">添加&lt;a href=&quot;compile#default_lookaside&quot;&gt;SQLITE_DEFAULT_LOOKASIDE&lt;/a&gt;编译时选项。</target>
        </trans-unit>
        <trans-unit id="85aebd6ee91874adb96cb2db93f6f4d317b58eb7" translate="yes" xml:space="preserve">
          <source>Add the &lt;a href=&quot;compile#enable_explain_comments&quot;&gt;SQLITE_ENABLE_EXPLAIN_COMMENTS&lt;/a&gt; compile-time option.</source>
          <target state="translated">添加&lt;a href=&quot;compile#enable_explain_comments&quot;&gt;SQLITE_ENABLE_EXPLAIN_COMMENTS&lt;/a&gt;编译时选项。</target>
        </trans-unit>
        <trans-unit id="21a90d69aeda9911ff14bd96ba3dda734bfd8d53" translate="yes" xml:space="preserve">
          <source>Add the &lt;a href=&quot;compile#rtree_int_only&quot;&gt;SQLITE_RTREE_INT_ONLY&lt;/a&gt; compile-time option to force the &lt;a href=&quot;rtree&quot;&gt;R*Tree Extension Module&lt;/a&gt; to use integer instead of floating point values for both storage and computation.</source>
          <target state="translated">添加&lt;a href=&quot;compile#rtree_int_only&quot;&gt;SQLITE_RTREE_INT_ONLY&lt;/a&gt;编译时选项，以强制&lt;a href=&quot;rtree&quot;&gt;R * Tree扩展模块&lt;/a&gt;对存储和计算使用整数而不是浮点值。</target>
        </trans-unit>
        <trans-unit id="e8f43e6254598c7b3221cade8d257bd4fa709b38" translate="yes" xml:space="preserve">
          <source>Add the &lt;a href=&quot;dbstat#dbstatagg&quot;&gt;aggregated mode&lt;/a&gt; feature to the &lt;a href=&quot;dbstat&quot;&gt;DBSTAT virtual table&lt;/a&gt;.</source>
          <target state="translated">将&lt;a href=&quot;dbstat#dbstatagg&quot;&gt;聚合模式&lt;/a&gt;功能添加到&lt;a href=&quot;dbstat&quot;&gt;DBSTAT虚拟表中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="15e9f2fd2f640e3984cdc406903ee8672531ce05" translate="yes" xml:space="preserve">
          <source>Add the &lt;a href=&quot;fts3#*fts4mergecmd&quot;&gt;FTS4 &quot;merge&quot; command&lt;/a&gt;, the &lt;a href=&quot;fts3#*fts4automergecmd&quot;&gt;FTS4 &quot;automerge&quot; command&lt;/a&gt;, and the &lt;a href=&quot;fts3#*fts4ickcmd&quot;&gt;FTS4 &quot;integrity-check&quot; command&lt;/a&gt;.</source>
          <target state="translated">添加&lt;a href=&quot;fts3#*fts4mergecmd&quot;&gt;FTS4&amp;ldquo;合并&amp;rdquo;命令&lt;/a&gt;，在&lt;a href=&quot;fts3#*fts4automergecmd&quot;&gt;FTS4&amp;ldquo;automerge&amp;rdquo;命令&lt;/a&gt;，和&lt;a href=&quot;fts3#*fts4ickcmd&quot;&gt;FTS4&amp;ldquo;诚信检查&amp;rdquo;命令&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="98046a6bd29ea22d322eeeda3a2f3bdacd96dcab" translate="yes" xml:space="preserve">
          <source>Add the &lt;a href=&quot;https://www.sqlite.org/src/artifact?ci=trunk&amp;amp;filename=ext/misc/vfsstat.c&quot;&gt;vfsstat.c&lt;/a&gt; loadable extension - a VFS shim that measures I/O together with an &lt;a href=&quot;vtab#epovtab&quot;&gt;eponymous virtual table&lt;/a&gt; that provides access to the measurements.</source>
          <target state="translated">添加&lt;a href=&quot;https://www.sqlite.org/src/artifact?ci=trunk&amp;amp;filename=ext/misc/vfsstat.c&quot;&gt;vfsstat.c&lt;/a&gt;可加载扩展-一个测量I / O的VFS填充程序以及一个提供访问测量结果的&lt;a href=&quot;vtab#epovtab&quot;&gt;同名虚拟表&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7cd3c312e6d704d9ddb06fdac7e44b6ba43e781a" translate="yes" xml:space="preserve">
          <source>Add the &lt;a href=&quot;lang_indexedby&quot;&gt;INDEXED BY&lt;/a&gt; clause.</source>
          <target state="translated">添加&lt;a href=&quot;lang_indexedby&quot;&gt;INDEXED BY&lt;/a&gt;子句。</target>
        </trans-unit>
        <trans-unit id="93f9efcb02f9ffd6cbf45dbb655ea785d5db4c65" translate="yes" xml:space="preserve">
          <source>Add the &lt;a href=&quot;optoverview#leftjoinreduction&quot;&gt;LEFT JOIN strength reduction optimization&lt;/a&gt; that converts a LEFT JOIN into an ordinary JOIN if there exist terms in the WHERE clause that would prevent the extra all-NULL row of the LEFT JOIN from appearing in the output set.</source>
          <target state="translated">添加&lt;a href=&quot;optoverview#leftjoinreduction&quot;&gt;LEFT JOIN强度降低优化&lt;/a&gt;，如果WHERE子句中存在可以防止LEFT JOIN的多余全空行出现在输出集中的条件，则该优化将LEFT JOIN转换为普通JOIN。</target>
        </trans-unit>
        <trans-unit id="6294f954692677e23d4407af3d20a5f13384a9c1" translate="yes" xml:space="preserve">
          <source>Add the &lt;a href=&quot;pragma#pragma_legacy_alter_table&quot;&gt;PRAGMA legacy_alter_table=ON&lt;/a&gt; command that causes the &quot;ALTER TABLE RENAME&quot; command to behave as it did in SQLite versions 3.24.0 and earlier: references to the renamed table inside the bodies of triggers and views are not updated. This new pragma provides a compatibility work around for older programs that expected the older, wonky behavior of ALTER TABLE RENAME.</source>
          <target state="translated">添加&lt;a href=&quot;pragma#pragma_legacy_alter_table&quot;&gt;PRAGMA legacy_alter_table = ON&lt;/a&gt;命令，该命令使&amp;ldquo; ALTER TABLE RENAME&amp;rdquo;命令的行为与SQLite 3.24.0及更早版本中的行为相同：触发器和视图主体内对重命名表的引用不会更新。这个新的实用程序为期望较旧的ALTER TABLE RENAME较旧行为的较旧程序提供了兼容性解决方案。</target>
        </trans-unit>
        <trans-unit id="b9e0bbc3322ff734087f22e70d84d21a6e7a30fe" translate="yes" xml:space="preserve">
          <source>Add the &lt;a href=&quot;vtab#xsavepoint&quot;&gt;xSavepoint&lt;/a&gt;, &lt;a href=&quot;vtab#xsavepoint&quot;&gt;xRelease&lt;/a&gt; and &lt;a href=&quot;vtab#xsavepoint&quot;&gt;xRollbackTo&lt;/a&gt; methods in &lt;a href=&quot;vtab&quot;&gt;virtual tables&lt;/a&gt; in support of &lt;a href=&quot;lang_savepoint&quot;&gt;SAVEPOINT&lt;/a&gt; for virtual tables.</source>
          <target state="translated">在&lt;a href=&quot;vtab&quot;&gt;虚拟表&lt;/a&gt;中添加&lt;a href=&quot;vtab#xsavepoint&quot;&gt;xSavepoint&lt;/a&gt;，&lt;a href=&quot;vtab#xsavepoint&quot;&gt;xRelease&lt;/a&gt;和&lt;a href=&quot;vtab#xsavepoint&quot;&gt;xRollbackTo&lt;/a&gt;方法以支持虚拟表的&lt;a href=&quot;lang_savepoint&quot;&gt;SAVEPOINT&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6ed36cb9eb24ef6e4831d3cb6e75c5a505ce11d8" translate="yes" xml:space="preserve">
          <source>Add the &lt;b&gt;sqlite_version[]&lt;/b&gt; string constant to the library</source>
          <target state="translated">将&lt;b&gt;sqlite_version []&lt;/b&gt;字符串常量添加到库中</target>
        </trans-unit>
        <trans-unit id="1a77c4f39c42e3d8e465cea41bb54ff783957906" translate="yes" xml:space="preserve">
          <source>Add the COLLATE operator used to explicitly set the collating sequence used by an expression. This feature is considered experimental pending additional testing.</source>
          <target state="translated">增加 COLLATE 操作符,用于明确设置表达式使用的整理序列。这个功能被认为是试验性的,有待额外的测试。</target>
        </trans-unit>
        <trans-unit id="29546c6fbd4241b614f52b701e19fb42190f52db" translate="yes" xml:space="preserve">
          <source>Add the MEMORY option to the &lt;a href=&quot;pragma#pragma_journal_mode&quot;&gt;journal_mode pragma&lt;/a&gt;.</source>
          <target state="translated">将MEMORY选项添加到&lt;a href=&quot;pragma#pragma_journal_mode&quot;&gt;journal_mode pragma&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="08441390d486d4a704f4d3ebdd1c1a4095467616" translate="yes" xml:space="preserve">
          <source>Add the ability for INSERT and UPDATE statements to refer to the &quot;rowid&quot; (or &quot;_rowid_&quot; or &quot;oid&quot;) columns.</source>
          <target state="translated">增加INSERT和UPDATE语句引用 &quot;rowid&quot;(或&quot;_rowid_&quot;或 &quot;oid&quot;)列的功能。</target>
        </trans-unit>
        <trans-unit id="91d47c24f96a5ac57ed4cd528de551cd89df640b" translate="yes" xml:space="preserve">
          <source>Add the ability to change the &lt;a href=&quot;pragma#pragma_auto_vacuum&quot;&gt;auto_vacuum&lt;/a&gt; status of a database by setting the auto_vaccum pragma and VACUUMing the database.</source>
          <target state="translated">通过设置auto_vaccum编译指示和对数据库进行VACUUM，可以更改数据库的&lt;a href=&quot;pragma#pragma_auto_vacuum&quot;&gt;auto_vacuum&lt;/a&gt;状态。</target>
        </trans-unit>
        <trans-unit id="90b4842e5d50e9cfd8c2600caa26cf77f6f838dc" translate="yes" xml:space="preserve">
          <source>Add the ability to do MSVC Windows builds from the &lt;a href=&quot;https://sqlite.org/download.html&quot;&gt;amalgamation tarball&lt;/a&gt;.</source>
          <target state="translated">添加从&lt;a href=&quot;https://sqlite.org/download.html&quot;&gt;合并tarball&lt;/a&gt;进行MSVC Windows构建的功能。</target>
        </trans-unit>
        <trans-unit id="b9cc0bb08d1187beca47dd9f85ca607d55ca39f7" translate="yes" xml:space="preserve">
          <source>Add the ability to find a full-index-scan query plan for queries using &lt;a href=&quot;lang_indexedby&quot;&gt;INDEXED BY&lt;/a&gt; which previously would fail with &quot;no query solution&quot;.</source>
          <target state="translated">添加了使用&lt;a href=&quot;lang_indexedby&quot;&gt;INDEXED BY&lt;/a&gt;查找查询的全索引扫描查询计划的功能，该计划以前会因&amp;ldquo;无查询解决方案&amp;rdquo;而失败。</target>
        </trans-unit>
        <trans-unit id="9b4db540a1419635a899fe1e123412560851c41e" translate="yes" xml:space="preserve">
          <source>Add the ability to implement FROM clause subqueries as coroutines rather that manifesting the subquery into a temporary table.</source>
          <target state="translated">增加了将FROM子句作为coroutine实现的能力,而不是将子查询表现为一个临时表。</target>
        </trans-unit>
        <trans-unit id="641284aafcb663d3733121dbe152ab06583bd76f" translate="yes" xml:space="preserve">
          <source>Add the ability to put TABLE.* in the column list of a SELECT statement.</source>
          <target state="translated">增加在SELECT语句的列列表中放入TABLE.*的功能。</target>
        </trans-unit>
        <trans-unit id="76eab5ccc29a6c69261726a47189c3c56c533ee9" translate="yes" xml:space="preserve">
          <source>Add the ability to put a single .command in the second argument of the sqlite shell</source>
          <target state="translated">在sqlite shell的第二个参数中增加一个.command的功能。</target>
        </trans-unit>
        <trans-unit id="7c6f54e907a75263fd0bf968b6313ce06f8b53fe" translate="yes" xml:space="preserve">
          <source>Add the ability to read both little-endian and big-endian databases. So a database created under SunOS or Mac OS X can be read and written under Linux or Windows and vice versa.</source>
          <target state="translated">增加读取小二烯和大二烯数据库的能力。因此,在SunOS或Mac OS X下创建的数据库可以在Linux或Windows下读取和写入,反之亦然。</target>
        </trans-unit>
        <trans-unit id="af73d1caadd8c6a0bfa650a1605b5bc6b382fa8b" translate="yes" xml:space="preserve">
          <source>Add the ability to read from &lt;a href=&quot;wal&quot;&gt;WAL mode&lt;/a&gt; databases even if the application lacks write permission on the database and its containing directory, as long as the -shm and -wal files exist in that directory.</source>
          <target state="translated">只要应用程序对数据库及其包含的目录缺少写许可权，只要该目录中存在-shm和-wal文件，就可以添加从&lt;a href=&quot;wal&quot;&gt;WAL模式&lt;/a&gt;数据库中读取的功能。</target>
        </trans-unit>
        <trans-unit id="380f653fc0d3d6ccefb92e152868bd3b2cfdb518" translate="yes" xml:space="preserve">
          <source>Add the ability to run a full regression test with a small &lt;a href=&quot;c3ref/soft_heap_limit&quot;&gt;sqlite3_soft_heap_limit&lt;/a&gt;.</source>
          <target state="translated">添加使用较小的&lt;a href=&quot;c3ref/soft_heap_limit&quot;&gt;sqlite3_soft_heap_limit&lt;/a&gt;运行完整回归测试的功能。</target>
        </trans-unit>
        <trans-unit id="cb5bd71c1b0c8add951478fd6dd2ffd86268514b" translate="yes" xml:space="preserve">
          <source>Add the ability to specify an alternative temporary file directory using the &quot;sqlite_temp_directory&quot; global variable.</source>
          <target state="translated">增加使用 &quot;sqlite_temp_directory &quot;全局变量指定临时文件目录的功能。</target>
        </trans-unit>
        <trans-unit id="4f2ac397ad237a3ec1542096c2f09b239a87fcab" translate="yes" xml:space="preserve">
          <source>Add the ability to use quoted strings as table and column names in expressions.</source>
          <target state="translated">增加在表达式中使用引号字符串作为表和列名的功能。</target>
        </trans-unit>
        <trans-unit id="6e7939de31db1c52152d61c7f45b0bf4965a26a9" translate="yes" xml:space="preserve">
          <source>Add the build-in RTRIM collating sequence.</source>
          <target state="translated">增加内置的RTRIM整理序列。</target>
        </trans-unit>
        <trans-unit id="d4031514981ccb92e8822ed8b31bcfdb01017867" translate="yes" xml:space="preserve">
          <source>Add the capability of &quot;hidden&quot; columns in virtual tables.</source>
          <target state="translated">增加虚拟表中 &quot;隐藏 &quot;列的功能。</target>
        </trans-unit>
        <trans-unit id="6ce623dc6dee7dc1c4546659cdff0cc47e7ae976" translate="yes" xml:space="preserve">
          <source>Add the capability of evaluating an &lt;a href=&quot;lang_expr#in_op&quot;&gt;IN operator&lt;/a&gt; as a sequence of comparisons as an alternative to using a table lookup. Use the sequence of comparisons implementation in circumstances where it is likely to be faster, such as when the right-hand side of the IN operator is small and/or changes frequently.</source>
          <target state="translated">添加了将&lt;a href=&quot;lang_expr#in_op&quot;&gt;IN运算符&lt;/a&gt;评估为比较序列的功能，以替代使用表查找的功能。在比较快的情况下（例如，IN运算符的右侧较小和/或频繁更改时），请使用比较序列实现。</target>
        </trans-unit>
        <trans-unit id="913170471b20c5cadb18e221b79038b72aa6c5c5" translate="yes" xml:space="preserve">
          <source>Add the constant P2 to the value in register P1. The result is always an integer.</source>
          <target state="translated">将常数P2加到寄存器P1中的值上。结果总是一个整数。</target>
        </trans-unit>
        <trans-unit id="49543ed02ed7f75a8b5f4d3033d6dbc8ce95628d" translate="yes" xml:space="preserve">
          <source>Add the fuzzcheck test program and automatically run this program using both SQL and database test cases on &quot;make test&quot;.</source>
          <target state="translated">添加fuzzcheck测试程序,并在 &quot;make test &quot;上使用SQL和数据库测试用例自动运行该程序。</target>
        </trans-unit>
        <trans-unit id="f6c12a1411453c369d89d2764b058c0cb481650f" translate="yes" xml:space="preserve">
          <source>Add the global variable sqlite_temp_directory which if set defines the directory in which temporary files are stored.</source>
          <target state="translated">添加全局变量sqlite_temp_directory,如果设置了这个变量,则定义了临时文件的存放目录。</target>
        </trans-unit>
        <trans-unit id="05674fc8f1df1c74cf46b61016ca2070fc8379b9" translate="yes" xml:space="preserve">
          <source>Add the long-standing &quot;.testctrl&quot; command to the &quot;.help&quot; menu.</source>
          <target state="translated">在&quot;.help &quot;菜单中增加长期存在的&quot;.testctrl &quot;命令。</target>
        </trans-unit>
        <trans-unit id="31c64589ffb807ef4d796e265bb6d226b04b8cc8" translate="yes" xml:space="preserve">
          <source>Add the name of an individual configuration setting to query the current value of that setting. Optionally add a boolean value to change a setting.</source>
          <target state="translated">添加单个配置设置的名称,以查询该设置的当前值。可选择添加一个布尔值来更改设置。</target>
        </trans-unit>
        <trans-unit id="19a95d896cccaf286ff7b2470d35b7c705d0ca8a" translate="yes" xml:space="preserve">
          <source>Add the name of an individual configuration setting to query the current value of that setting. Optionally add a boolean value to change a setting. For example, turn off support for the &lt;a href=&quot;quirks#dblquote&quot;&gt;double-quoted string literal&lt;/a&gt; misfeature like this:</source>
          <target state="translated">添加单个配置设置的名称以查询该设置的当前值。（可选）添加布尔值以更改设置。例如，关闭对&lt;a href=&quot;quirks#dblquote&quot;&gt;双引号字符串文字&lt;/a&gt;错误功能的支持，如下所示：</target>
        </trans-unit>
        <trans-unit id="765e23b58c1bb51c78a2c11360fa9dffbf0998be" translate="yes" xml:space="preserve">
          <source>Add the new &quot;.genfkey&quot; command in the &lt;a href=&quot;cli&quot;&gt;CLI&lt;/a&gt; for generating triggers to implement foreign key constraints.</source>
          <target state="translated">在&lt;a href=&quot;cli&quot;&gt;CLI中&lt;/a&gt;添加新的&amp;ldquo; .genfkey&amp;rdquo;命令，以生成用于实现外键约束的触发器。</target>
        </trans-unit>
        <trans-unit id="353211e020fc294eba4ff8c7f60b45103bef8637" translate="yes" xml:space="preserve">
          <source>Add the new &lt;a href=&quot;c3ref/result_blob&quot;&gt;sqlite3_result_error_code()&lt;/a&gt; API and use it in the implementation of &lt;a href=&quot;lang_attach&quot;&gt;ATTACH&lt;/a&gt; so that proper error codes are returned when an &lt;a href=&quot;lang_attach&quot;&gt;ATTACH&lt;/a&gt; fails.</source>
          <target state="translated">添加新的&lt;a href=&quot;c3ref/result_blob&quot;&gt;sqlite3_result_error_code（）&lt;/a&gt; API并在&lt;a href=&quot;lang_attach&quot;&gt;ATTACH&lt;/a&gt;的实现中使用它，以便在&lt;a href=&quot;lang_attach&quot;&gt;ATTACH&lt;/a&gt;失败时返回正确的错误代码。</target>
        </trans-unit>
        <trans-unit id="d645979e763a15ad29729f489aa54879c9058e28" translate="yes" xml:space="preserve">
          <source>Add the sorter-reference optimization as a compile-time option. Only available if compiled with SQLITE_ENABLE_SORTER_REFERENCES.</source>
          <target state="translated">将sorter-reference优化添加为编译时的选项,只有在编译时使用SQLITE_ENABLE_SORTER_REFERENCES时才能使用。只有在编译时使用SQLITE_ENABLE_SORTER_REFERENCES时才能使用。</target>
        </trans-unit>
        <trans-unit id="09f9f5215cd0bcd28873268a2df03e58b7edb884" translate="yes" xml:space="preserve">
          <source>Add the text in register P1 onto the end of the text in register P2 and store the result in register P3. If either the P1 or P2 text are NULL then store NULL in P3.</source>
          <target state="translated">将寄存器P1中的文本添加到寄存器P2中的文本末尾,并将结果存储在寄存器P3中。如果P1或P2中的文本为NULL,则在P3中存储NULL。</target>
        </trans-unit>
        <trans-unit id="1cf58523b65d0b130a577861b217d7b44ae4b7ae" translate="yes" xml:space="preserve">
          <source>Add the value in register P1 to the value in register P2 and store the result in register P3. If either input is NULL, the result is NULL.</source>
          <target state="translated">将寄存器P1中的值与寄存器P2中的值相加,并将结果存储在寄存器P3中,如果任一输入为NULL,则结果为NULL。如果其中一个输入为NULL,则结果为NULL。</target>
        </trans-unit>
        <trans-unit id="66fcebde89e16dc9a370173c80b02abe9e4c78f0" translate="yes" xml:space="preserve">
          <source>AddImm</source>
          <target state="translated">AddImm</target>
        </trans-unit>
        <trans-unit id="2110eeb59898919163140d91e36c5206d742c963" translate="yes" xml:space="preserve">
          <source>Added &quot;.lint fkey-indexes&quot; to the &lt;a href=&quot;cli&quot;&gt;command-line shell&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;cli&quot;&gt;命令行shell中&lt;/a&gt;添加了&amp;ldquo; .lint fkey-indexes&amp;rdquo; 。</target>
        </trans-unit>
        <trans-unit id="17b3156c2ecab2f101328f99f2bb4049428c27f0" translate="yes" xml:space="preserve">
          <source>Added &quot;.mode quote&quot; to the &lt;a href=&quot;cli&quot;&gt;command-line shell&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;cli&quot;&gt;命令行shell中&lt;/a&gt;添加了&amp;ldquo; .mode quote&amp;rdquo; 。</target>
        </trans-unit>
        <trans-unit id="6f34edea5910a5e62ccf46db8b7d60aaaee76631" translate="yes" xml:space="preserve">
          <source>Added &quot;busy&quot; and &quot;timeout&quot; methods to the Tcl interface</source>
          <target state="translated">在 Tcl 接口中添加了 &quot;忙 &quot;和 &quot;超时 &quot;方法。</target>
        </trans-unit>
        <trans-unit id="379c527f7af719153fa43206a68c9c81b52a41ba" translate="yes" xml:space="preserve">
          <source>Added &lt;a href=&quot;c3ref/c_deterministic&quot;&gt;SQLITE_DETERMINISTIC&lt;/a&gt; as an optional bit in the 4th argument to the &lt;a href=&quot;c3ref/create_function&quot;&gt;sqlite3_create_function()&lt;/a&gt; and related interfaces, providing applications with the ability to create new functions that can be factored out of inner loops when they have constant arguments.</source>
          <target state="translated">在&lt;a href=&quot;c3ref/create_function&quot;&gt;sqlite3_create_function（）&lt;/a&gt;和相关接口的第4个参数中添加了&lt;a href=&quot;c3ref/c_deterministic&quot;&gt;SQLITE_DETERMINISTIC&lt;/a&gt;作为可选位，使应用程序能够创建具有恒定参数的新函数，这些函数可以从内部循环中分解出来。</target>
        </trans-unit>
        <trans-unit id="7c75ca03b5710969006d7c9cdc20263784e7e1d5" translate="yes" xml:space="preserve">
          <source>Added &lt;a href=&quot;c3ref/c_deterministic#sqlitedeterministic&quot;&gt;SQLITE_DETERMINISTIC&lt;/a&gt; as an optional bit in the 4th argument to the &lt;a href=&quot;c3ref/create_function&quot;&gt;sqlite3_create_function()&lt;/a&gt; and related interfaces, providing applications with the ability to create new functions that can be factored out of inner loops when they have constant arguments.</source>
          <target state="translated">在&lt;a href=&quot;c3ref/create_function&quot;&gt;sqlite3_create_function（）&lt;/a&gt;和相关接口的第4个参数中添加了&lt;a href=&quot;c3ref/c_deterministic#sqlitedeterministic&quot;&gt;SQLITE_DETERMINISTIC&lt;/a&gt;作为可选位，使应用程序能够创建具有恒定参数的新函数，这些函数可以在内部循环中分解。</target>
        </trans-unit>
        <trans-unit id="c33f2de4952c71c6ae8d2342c531d9ec5acdd089" translate="yes" xml:space="preserve">
          <source>Added &lt;a href=&quot;c3ref/c_fcntl_begin_atomic_write#sqlitefcntlwin32gethandle&quot;&gt;SQLITE_FCNTL_WIN32_GET_HANDLE&lt;/a&gt; file control opcode.</source>
          <target state="translated">添加了&lt;a href=&quot;c3ref/c_fcntl_begin_atomic_write#sqlitefcntlwin32gethandle&quot;&gt;SQLITE_FCNTL_WIN32_GET_HANDLE&lt;/a&gt;文件控件操作码。</target>
        </trans-unit>
        <trans-unit id="41f0bea9f1aab4e8e94f7f046274987aafe92259" translate="yes" xml:space="preserve">
          <source>Added &lt;a href=&quot;fts5&quot;&gt;Full Text Search version 5 (FTS5)&lt;/a&gt; to the &lt;a href=&quot;amalgamation&quot;&gt;amalgamation&lt;/a&gt;, enabled using &lt;a href=&quot;compile#enable_fts5&quot;&gt;SQLITE_ENABLE_FTS5&lt;/a&gt;. FTS5 will be considered &quot;experimental&quot; (subject to incompatible changes) for at least one more release cycle.</source>
          <target state="translated">在&lt;a href=&quot;amalgamation&quot;&gt;合并中&lt;/a&gt;添加了&lt;a href=&quot;fts5&quot;&gt;全文搜索版本5（FTS5）&lt;/a&gt;，可使用&lt;a href=&quot;compile#enable_fts5&quot;&gt;SQLITE_ENABLE_FTS5&lt;/a&gt;启用。FTS5在至少一个发行周期内将被视为&amp;ldquo;实验性&amp;rdquo;（可能会有不兼容的更改）。</target>
        </trans-unit>
        <trans-unit id="e5083f2c6979cbe0e53546ddb0afabcdf2faa5b7" translate="yes" xml:space="preserve">
          <source>Added &lt;a href=&quot;json1&quot;&gt;the json1 extension&lt;/a&gt; module in the source tree, and in the &lt;a href=&quot;amalgamation&quot;&gt;amalgamation&lt;/a&gt;. Enable support using the &lt;a href=&quot;compile#enable_json1&quot;&gt;SQLITE_ENABLE_JSON1&lt;/a&gt; compile-time option.</source>
          <target state="translated">在源代码树和&lt;a href=&quot;amalgamation&quot;&gt;amalgamation中&lt;/a&gt;添加&lt;a href=&quot;json1&quot;&gt;了json1扩展&lt;/a&gt;模块。使用&lt;a href=&quot;compile#enable_json1&quot;&gt;SQLITE_ENABLE_JSON1&lt;/a&gt;编译时选项启用支持。</target>
        </trans-unit>
        <trans-unit id="ce4b533f0e27715071ef87eea4d93f3cf1f90e06" translate="yes" xml:space="preserve">
          <source>Added &lt;a href=&quot;pragma#pragma_checkpoint_fullfsync&quot;&gt;PRAGMA checkpoint_fullfsync&lt;/a&gt;.</source>
          <target state="translated">添加了&lt;a href=&quot;pragma#pragma_checkpoint_fullfsync&quot;&gt;PRAGMA checkpoint_fullfsync&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="01f1995fb018bbb40a46ee81938b4ec1c3d8a6dc" translate="yes" xml:space="preserve">
          <source>Added &lt;a href=&quot;pragma#pragma_freelist_count&quot;&gt;PRAGMA freelist_count&lt;/a&gt; for determining the current size of the freelist.</source>
          <target state="translated">添加了&lt;a href=&quot;pragma#pragma_freelist_count&quot;&gt;PRAGMA freelist_count&lt;/a&gt;来确定当前空闲列表的大小。</target>
        </trans-unit>
        <trans-unit id="971c4ac1e76be78c3a8dee23705ac7dd59d334eb" translate="yes" xml:space="preserve">
          <source>Added &lt;a href=&quot;pragma#pragma_table_xinfo&quot;&gt;PRAGMA table_xinfo&lt;/a&gt; that works just like &lt;a href=&quot;pragma#pragma_table_info&quot;&gt;PRAGMA table_info&lt;/a&gt; except that it also shows &lt;a href=&quot;vtab#hiddencol&quot;&gt;hidden columns&lt;/a&gt; in virtual tables.</source>
          <target state="translated">添加了&lt;a href=&quot;pragma#pragma_table_xinfo&quot;&gt;PRAGMA table_xinfo&lt;/a&gt;，其功能与&lt;a href=&quot;pragma#pragma_table_info&quot;&gt;PRAGMA table_info&lt;/a&gt;相同，不同之处在于它还显示了虚拟表中的&lt;a href=&quot;vtab#hiddencol&quot;&gt;隐藏列&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d0a0808cf95414d138c9f313f7f4408d5a231ce9" translate="yes" xml:space="preserve">
          <source>Added &lt;em&gt;experimental&lt;/em&gt; support for the &lt;a href=&quot;pragma#pragma_journal_mode&quot;&gt;journal_mode&lt;/a&gt; PRAGMA and persistent journal.</source>
          <target state="translated">增加了对&lt;a href=&quot;pragma#pragma_journal_mode&quot;&gt;journal_mode&lt;/a&gt; PRAGMA和永久日志的&lt;em&gt;实验&lt;/em&gt;支持。</target>
        </trans-unit>
        <trans-unit id="37e5cd3d1cdeaf90ac5106de1f3234e18cceede7" translate="yes" xml:space="preserve">
          <source>Added APIs &lt;a href=&quot;c3ref/filename_database&quot;&gt;sqlite3_filename_database()&lt;/a&gt;, &lt;a href=&quot;c3ref/filename_database&quot;&gt;sqlite3_filename_journal()&lt;/a&gt;, and &lt;a href=&quot;c3ref/filename_database&quot;&gt;sqlite3_filename_wal()&lt;/a&gt; which are useful for specialized extensions.</source>
          <target state="translated">添加了对专用扩展有用的API &lt;a href=&quot;c3ref/filename_database&quot;&gt;sqlite3_filename_database（）&lt;/a&gt;，&lt;a href=&quot;c3ref/filename_database&quot;&gt;sqlite3_filename_journal（）&lt;/a&gt;和&lt;a href=&quot;c3ref/filename_database&quot;&gt;sqlite3_filename_wal（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b2336dfca3803f9a8e032676d0cec38c1ebfd454" translate="yes" xml:space="preserve">
          <source>Added Mac OS X locking patches (beta - disabled by default)</source>
          <target state="translated">添加了Mac OS X锁定补丁(测试版--默认情况下禁用</target>
        </trans-unit>
        <trans-unit id="db99ee2e25e21b5b81f68fcf9810b39626b69d8d" translate="yes" xml:space="preserve">
          <source>Added RPMS to the delivery (patches from Doug Henry)</source>
          <target state="translated">在交付时增加了RPMS(Doug Henry提供的补丁)。</target>
        </trans-unit>
        <trans-unit id="67198b6e07398a12f3c25aaf4ac2154027ff0378" translate="yes" xml:space="preserve">
          <source>Added SQL functions &lt;a href=&quot;lang_corefunc#unicode&quot;&gt;unicode(A)&lt;/a&gt; and &lt;a href=&quot;lang_corefunc#char&quot;&gt;char(X1,...,XN)&lt;/a&gt;.</source>
          <target state="translated">添加了SQL函数&lt;a href=&quot;lang_corefunc#unicode&quot;&gt;unicode（A）&lt;/a&gt;和&lt;a href=&quot;lang_corefunc#char&quot;&gt;char（X1，...，XN）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2ac6ca0d8ed6a2ff2db4fe6f55b929a7c0125e12" translate="yes" xml:space="preserve">
          <source>Added SQL-92 compliant handling of NULLs.</source>
          <target state="translated">增加了符合SQL-92的NULLs处理方法。</target>
        </trans-unit>
        <trans-unit id="33c2a0ba3f2291cb99aee2473a49a09f7ccf3bf8" translate="yes" xml:space="preserve">
          <source>Added UTC to localtime conversions to the experimental date/time functions.</source>
          <target state="translated">为实验性的日期/时间函数添加了UTC到本地时间的转换。</target>
        </trans-unit>
        <trans-unit id="cdce9c9a8eb91c9a8d97198c0a3be5edb3ec079e" translate="yes" xml:space="preserve">
          <source>Added a &quot;memory:&quot; backend driver that stores its database in an in-memory hash table.</source>
          <target state="translated">增加了一个 &quot;内存:&quot;的后端驱动程序,将其数据库存储在内存中的哈希表中。</target>
        </trans-unit>
        <trans-unit id="00e371dc673bc0768232c8a31e4ebbea705ef36e" translate="yes" xml:space="preserve">
          <source>Added a &lt;b&gt;GLOB&lt;/b&gt; operator: similar to &lt;b&gt;LIKE&lt;/b&gt; but it uses Unix shell globbing wildcards instead of the '%' and '_' wildcards of SQL.</source>
          <target state="translated">添加了&lt;b&gt;GLOB&lt;/b&gt;运算符：与&lt;b&gt;LIKE&lt;/b&gt;类似，但它使用Unix shell全局通配符而不是SQL的'％'和'_'通配符。</target>
        </trans-unit>
        <trans-unit id="250be653dbe1b995ef443b4744fbdd334d1af201" translate="yes" xml:space="preserve">
          <source>Added a &lt;b&gt;VACUUM&lt;/b&gt; command that calls the &lt;b&gt;gdbm_reorganize()&lt;/b&gt; function on the underlying database files.</source>
          <target state="translated">添加了一个&lt;b&gt;VACUUM&lt;/b&gt;命令，该命令在基础数据库文件上调用&lt;b&gt;gdbm_reorganize（）&lt;/b&gt;函数。</target>
        </trans-unit>
        <trans-unit id="8f50be98792a4473f5df166e79e4c15e470e945f" translate="yes" xml:space="preserve">
          <source>Added a REGEXP operator to the parser. There is no function to back up this operator in the standard build but users can add their own using sqlite3_create_function()</source>
          <target state="translated">在解析器中添加了一个REGEXP操作符。在标准构建中没有备份这个操作符的函数,但用户可以使用 sqlite3_create_function()添加自己的操作符。</target>
        </trans-unit>
        <trans-unit id="c212ede6225bb468c44a057a6ea39db59358c58f" translate="yes" xml:space="preserve">
          <source>Added a bunch more tests that take advantage of the new fcnt() function. The new tests did not uncover any new problems.</source>
          <target state="translated">添加了更多利用新的 fcnt()函数的测试。新测试没有发现任何新问题。</target>
        </trans-unit>
        <trans-unit id="405362df77d500b1d4a23148d0fa3aadc04a61a9" translate="yes" xml:space="preserve">
          <source>Added a memory barrier in the implementation of &lt;a href=&quot;c3ref/initialize&quot;&gt;sqlite3_initialize()&lt;/a&gt; to help ensure that it is thread-safe.</source>
          <target state="translated">在&lt;a href=&quot;c3ref/initialize&quot;&gt;sqlite3_initialize（）&lt;/a&gt;的实现中添加了一个内存屏障，以帮助确保它是线程安全的。</target>
        </trans-unit>
        <trans-unit id="b9e87cd127e91da0ec0dda2b4bc2817875de241c" translate="yes" xml:space="preserve">
          <source>Added a new &lt;a href=&quot;loadext&quot;&gt;loadable extension&lt;/a&gt; source code file to the source tree: &lt;a href=&quot;http://www.sqlite.org/src/finfo?name=ext/misc/fileio.c&quot;&gt;fileio.c&lt;/a&gt;</source>
          <target state="translated">在源树中添加了一个新的&lt;a href=&quot;loadext&quot;&gt;可加载扩展&lt;/a&gt;源代码文件：&lt;a href=&quot;http://www.sqlite.org/src/finfo?name=ext/misc/fileio.c&quot;&gt;fileio.c&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="21a0c26c2a46aed398d03e42a6911dfce690e58f" translate="yes" xml:space="preserve">
          <source>Added a new &lt;a href=&quot;loadext&quot;&gt;loadable extension&lt;/a&gt; source code file to the source tree: &lt;a href=&quot;https://www.sqlite.org/src/finfo?name=ext/misc/fileio.c&quot;&gt;fileio.c&lt;/a&gt;</source>
          <target state="translated">在源树中添加了一个新的&lt;a href=&quot;loadext&quot;&gt;可加载扩展&lt;/a&gt;源代码文件：&lt;a href=&quot;https://www.sqlite.org/src/finfo?name=ext/misc/fileio.c&quot;&gt;fileio.c&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2a7bef2f5c6c7c126bee7d0e1381e04a2bc5d5c7" translate="yes" xml:space="preserve">
          <source>Added a new &lt;a href=&quot;rtree&quot;&gt;R*Tree index extension&lt;/a&gt;.</source>
          <target state="translated">添加了新的&lt;a href=&quot;rtree&quot;&gt;R * Tree索引扩展&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9b4c4957f61db08c301d624dc05f1392878c4ab6" translate="yes" xml:space="preserve">
          <source>Added a new &lt;a href=&quot;rtree&quot;&gt;R*Tree virtual table&lt;/a&gt;</source>
          <target state="translated">添加了一个新的&lt;a href=&quot;rtree&quot;&gt;R * Tree虚拟表&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0e29fe680785011d7bda3161f75d1202d6b3c9e3" translate="yes" xml:space="preserve">
          <source>Added a new C/C++ API that does not use callback for returning data.</source>
          <target state="translated">增加了一个新的C/C++API,不使用回调来返回数据。</target>
        </trans-unit>
        <trans-unit id="b214b9ae924929f1e2351882a725695633b6e8e3" translate="yes" xml:space="preserve">
          <source>Added a new OS interface method for determining the sector size of underlying media: sqlite3OsSectorSize().</source>
          <target state="translated">增加了一个新的OS接口方法,用于确定底层媒体的扇区大小:sqlite3OsSectorSize()。</target>
        </trans-unit>
        <trans-unit id="7ce29058ae0caf8062f35fba6d887336c4a7ab9a" translate="yes" xml:space="preserve">
          <source>Added a virtual function layer for the OS interface</source>
          <target state="translated">为操作系统接口增加了一个虚拟功能层</target>
        </trans-unit>
        <trans-unit id="61b8033f44960f290c02892665b99592125d3ee3" translate="yes" xml:space="preserve">
          <source>Added additional test cases and fixed a few bugs that those test cases found.</source>
          <target state="translated">增加了额外的测试用例,并修复了这些测试用例发现的一些错误。</target>
        </trans-unit>
        <trans-unit id="51c1830e3a8de651ced6ed3d6d28fa7fd0b964bd" translate="yes" xml:space="preserve">
          <source>Added an experimental power-of-two, first-fit memory allocator.</source>
          <target state="translated">增加了一个实验性的二分之一功率,先适应的内存分配器。</target>
        </trans-unit>
        <trans-unit id="61506056435b0abe346d4b1592020fa0841dc847" translate="yes" xml:space="preserve">
          <source>Added an optimization to UNION ALL</source>
          <target state="translated">加入了对UNION ALL的优化</target>
        </trans-unit>
        <trans-unit id="1a0bf560d56111975b663b31d372f7d04ccc0408" translate="yes" xml:space="preserve">
          <source>Added an optional 5th parameter defining the collating sequence to the next_char() extension SQL function.</source>
          <target state="translated">在 next_char()扩展 SQL 函数中添加了一个可选的第 5 个参数,定义整理序列。</target>
        </trans-unit>
        <trans-unit id="03d357182f3b49b9560b914618c22b6d797e8a50" translate="yes" xml:space="preserve">
          <source>Added an output buffer size parameter to the xGetTempname() method of the VFS layer.</source>
          <target state="translated">为VFS层的xGetTempname()方法增加了一个输出缓冲区大小参数。</target>
        </trans-unit>
        <trans-unit id="f92c6a94a65042a5738630118f0b6522d064c4d6" translate="yes" xml:space="preserve">
          <source>Added authorization hooks for the new ATTACH and DETACH commands.</source>
          <target state="translated">为新的 ATTACH 和 DETACH 命令添加了授权钩子。</target>
        </trans-unit>
        <trans-unit id="29532217c190ee9ef8560df060b282fde86a0201" translate="yes" xml:space="preserve">
          <source>Added built-in support for VxWorks</source>
          <target state="translated">增加了对VxWorks的内置支持</target>
        </trans-unit>
        <trans-unit id="f73272ae7b494f886c0b2f663aab600ada22a9d0" translate="yes" xml:space="preserve">
          <source>Added code for the &lt;a href=&quot;uintcseq&quot;&gt;UINT collating sequence&lt;/a&gt; as an optional &lt;a href=&quot;loadext&quot;&gt;loadable extension&lt;/a&gt;.</source>
          <target state="translated">为&lt;a href=&quot;uintcseq&quot;&gt;UINT整理序列&lt;/a&gt;添加了代码，作为可选的&lt;a href=&quot;loadext&quot;&gt;可加载扩展&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="147b8e42a7c5709c165ca9ec210f58e87fdbc166" translate="yes" xml:space="preserve">
          <source>Added compound select operators: &lt;b&gt;UNION&lt;/b&gt;, &lt;b&gt;UNION ALL&lt;/b&gt;, &lt;b&gt;INTERSECT&lt;/b&gt;, and &lt;b&gt;EXCEPT&lt;/b&gt;</source>
          <target state="translated">添加了复合选择运算符：&lt;b&gt;UNION&lt;/b&gt;，&lt;b&gt;UNION ALL&lt;/b&gt;，&lt;b&gt;INTERSECT&lt;/b&gt;和&lt;b&gt;EXCEPT&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="966bb7eeb144aa22658b66260b0fc07c41cb34a5" translate="yes" xml:space="preserve">
          <source>Added documentation on SELECT DISTINCT and on how SQLite handles NULLs.</source>
          <target state="translated">添加了关于 SELECT DISTINCT 以及 SQLite 如何处理 NULLs 的文档。</target>
        </trans-unit>
        <trans-unit id="a5259a8e93acf37a2a605d329efcce9e4a1e269e" translate="yes" xml:space="preserve">
          <source>Added documentation on compiling to WinNT.</source>
          <target state="translated">添加了关于编译到WinNT的文档。</target>
        </trans-unit>
        <trans-unit id="5004dca04585c7d3aaf25e1e1a41516474e09016" translate="yes" xml:space="preserve">
          <source>Added driver for OS/2</source>
          <target state="translated">增加了OS/2的驱动程序</target>
        </trans-unit>
        <trans-unit id="fe42510cd0463afe5cbf6d7827cc69110a1cc60c" translate="yes" xml:space="preserve">
          <source>Added experimental API: sqlite3_auto_extension()</source>
          <target state="translated">添加了实验性API:sqlite3_auto_extension()</target>
        </trans-unit>
        <trans-unit id="7766b89d29253ecd84d2e8efcc547f8a4a19fdd2" translate="yes" xml:space="preserve">
          <source>Added experimental sqlite_bind() and sqlite_reset() APIs.</source>
          <target state="translated">添加了实验性的 sqlite_bind()和 sqlite_reset()API。</target>
        </trans-unit>
        <trans-unit id="aa8380976f60b469b795a9cfe69a68ad28519ab2" translate="yes" xml:space="preserve">
          <source>Added experimental sqlite_progress_handler() callback API</source>
          <target state="translated">添加了实验性的 sqlite_progress_handler()回调 API。</target>
        </trans-unit>
        <trans-unit id="0dde0a29472bfdb42ef6a4ba4d29d82906afeb01" translate="yes" xml:space="preserve">
          <source>Added experimental support for &lt;a href=&quot;pragma#pragfunc&quot;&gt;PRAGMA functions&lt;/a&gt;.</source>
          <target state="translated">增加了对&lt;a href=&quot;pragma#pragfunc&quot;&gt;PRAGMA功能的&lt;/a&gt;实验支持。</target>
        </trans-unit>
        <trans-unit id="1b04ee6a08af9da9a7cc5155935020b217c59f16" translate="yes" xml:space="preserve">
          <source>Added explicit &lt;a href=&quot;limits&quot;&gt;upper bounds&lt;/a&gt; on the sizes and quantities of things SQLite can process. This change might cause compatibility problems for applications that use SQLite in the extreme, which is why the current release is 3.4.0 instead of 3.3.18.</source>
          <target state="translated">在SQLite可以处理的事物的大小和数量&lt;a href=&quot;limits&quot;&gt;上&lt;/a&gt;添加了明确的上限。对于使用SQLite的应用程序，此更改可能会导致兼容性问题，这就是为什么当前版本为3.4.0而不是3.3.18的原因。</target>
        </trans-unit>
        <trans-unit id="468a08b7f21336387bf99840259543add6d147c1" translate="yes" xml:space="preserve">
          <source>Added four new &lt;a href=&quot;cli#dotmode&quot;&gt;output modes&lt;/a&gt;: &quot;box&quot;, &quot;json&quot;, &quot;markdown&quot;, and &quot;table&quot;.</source>
          <target state="translated">添加了四个新的&lt;a href=&quot;cli#dotmode&quot;&gt;输出模式&lt;/a&gt;：&amp;ldquo; box&amp;rdquo;，&amp;ldquo; json&amp;rdquo;，&amp;ldquo; markdown&amp;rdquo;和&amp;ldquo; table&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="39458a71b59bf72d180e407a4469d5eee8eb52fb" translate="yes" xml:space="preserve">
          <source>Added functions &lt;b&gt;length()&lt;/b&gt; and &lt;b&gt;substr()&lt;/b&gt;.</source>
          <target state="translated">添加了函数&lt;b&gt;length（）&lt;/b&gt;和&lt;b&gt;substr（）&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="ea09a49bd5b911106d49b4181dd736a6c1febba9" translate="yes" xml:space="preserve">
          <source>Added improved version identification features: C-Preprocessor macro &lt;a href=&quot;c3ref/c_source_id&quot;&gt;SQLITE_SOURCE_ID&lt;/a&gt;, C/C++ interface &lt;a href=&quot;c3ref/libversion&quot;&gt;sqlite3_sourceid()&lt;/a&gt;, and SQL function &lt;a href=&quot;lang_corefunc#sqlite_source_id&quot;&gt;sqlite_source_id()&lt;/a&gt;.</source>
          <target state="translated">添加了改进的版本识别功能：C预处理程序宏&lt;a href=&quot;c3ref/c_source_id&quot;&gt;SQLITE_SOURCE_ID&lt;/a&gt;，C / C ++接口&lt;a href=&quot;c3ref/libversion&quot;&gt;sqlite3_sourceid（）&lt;/a&gt;和SQL函数&lt;a href=&quot;lang_corefunc#sqlite_source_id&quot;&gt;sqlite_source_id（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="36da124a6f3ace551424bb6aa30d21793847e7e5" translate="yes" xml:space="preserve">
          <source>Added limited support for transactions. At this point, transactions will do table locking on the GDBM backend. There is no support (yet) for rollback or atomic commit.</source>
          <target state="translated">增加了对事务的有限支持。在这一点上,事务将在GDBM后端进行表锁定。目前还不支持回滚或原子提交。</target>
        </trans-unit>
        <trans-unit id="322bfefb44d4286a4a0577edd8cf824412924d23" translate="yes" xml:space="preserve">
          <source>Added logic to detect when the library API routines are called out of sequence.</source>
          <target state="translated">增加了检测库API例程是否被不按顺序调用的逻辑。</target>
        </trans-unit>
        <trans-unit id="67317880fae037ebc6d3e2d3e37f7ba602179da1" translate="yes" xml:space="preserve">
          <source>Added lots of new test cases</source>
          <target state="translated">增加了很多新的测试案例</target>
        </trans-unit>
        <trans-unit id="7d49fe297826d5eff0d8ba253a3d0ec9f7707bb3" translate="yes" xml:space="preserve">
          <source>Added many new loadable extensions to the source tree, including amatch, closure, fuzzer, ieee754, nextchar, regexp, spellfix, and wholenumber. See header comments on each extension source file for further information about what that extension does.</source>
          <target state="translated">为源码树添加了许多新的可加载扩展,包括 amatch、closure、fuzzer、ieee754、nextchar、regexp、spellfix 和 wholenumber。请参阅每个扩展源文件的头注释,以获得有关该扩展功能的进一步信息。</target>
        </trans-unit>
        <trans-unit id="b7ee37f0f1005525b8836f4f65d7fb421a50ba51" translate="yes" xml:space="preserve">
          <source>Added new &lt;a href=&quot;uri#coreqp&quot;&gt;URI query parameters&lt;/a&gt; &quot;nolock&quot; and &quot;immutable&quot;.</source>
          <target state="translated">添加了新的&lt;a href=&quot;uri#coreqp&quot;&gt;URI查询参数&lt;/a&gt; &amp;ldquo; nolock&amp;rdquo;和&amp;ldquo; immutable&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="63392fe9fe96791514a3c1be366331a2c5669d4f" translate="yes" xml:space="preserve">
          <source>Added new commands &quot;.backup&quot; and &quot;.restore&quot; to the &lt;a href=&quot;cli&quot;&gt;CLI&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;cli&quot;&gt;CLI中&lt;/a&gt;添加了新命令&amp;ldquo; .backup&amp;rdquo;和&amp;ldquo; .restore&amp;rdquo; 。</target>
        </trans-unit>
        <trans-unit id="d7b636e1930793301d407d0d74d8b0aa8cb970ae" translate="yes" xml:space="preserve">
          <source>Added new commands &lt;a href=&quot;c3ref/c_dbstatus_options#sqlitedbstatusschemaused&quot;&gt;SQLITE_DBSTATUS_SCHEMA_USED&lt;/a&gt; and &lt;a href=&quot;c3ref/c_dbstatus_options#sqlitedbstatusstmtused&quot;&gt;SQLITE_DBSTATUS_STMT_USED&lt;/a&gt; to the &lt;a href=&quot;c3ref/db_status&quot;&gt;sqlite3_db_status()&lt;/a&gt; interface, in order to report out the amount of memory used to hold the schema and prepared statements of a connection.</source>
          <target state="translated">向&lt;a href=&quot;c3ref/db_status&quot;&gt;sqlite3_db_status（）&lt;/a&gt;接口添加了新命令&lt;a href=&quot;c3ref/c_dbstatus_options#sqlitedbstatusschemaused&quot;&gt;SQLITE_DBSTATUS_SCHEMA_USED&lt;/a&gt;和&lt;a href=&quot;c3ref/c_dbstatus_options#sqlitedbstatusstmtused&quot;&gt;SQLITE_DBSTATUS_STMT_USED&lt;/a&gt;，以便报告用于容纳架构和连接准备语句的内存量。</target>
        </trans-unit>
        <trans-unit id="f8dfe8f26d08433a24df679977a760d4f646d3d2" translate="yes" xml:space="preserve">
          <source>Added new extended error codes for all SQLITE_CONSTRAINT errors</source>
          <target state="translated">为所有SQLITE_CONSTRAINT错误添加了新的扩展错误代码。</target>
        </trans-unit>
        <trans-unit id="5688bbdc29e537f15ce91e77d0144288a884fe89" translate="yes" xml:space="preserve">
          <source>Added new functions: &lt;b&gt;round()&lt;/b&gt; and &lt;b&gt;abs()&lt;/b&gt;.</source>
          <target state="translated">添加了新功能：&lt;b&gt;round（）&lt;/b&gt;和&lt;b&gt;abs（）&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="d0329da0075f52ea225b62d5bf9417d8dcd00a71" translate="yes" xml:space="preserve">
          <source>Added new interfaces with 64-bit length parameters: &lt;a href=&quot;c3ref/free&quot;&gt;sqlite3_malloc64()&lt;/a&gt;, &lt;a href=&quot;c3ref/free&quot;&gt;sqlite3_realloc64()&lt;/a&gt;, &lt;a href=&quot;c3ref/bind_blob&quot;&gt;sqlite3_bind_blob64()&lt;/a&gt;, &lt;a href=&quot;c3ref/result_blob&quot;&gt;sqlite3_result_blob64()&lt;/a&gt;, &lt;a href=&quot;c3ref/bind_blob&quot;&gt;sqlite3_bind_text64()&lt;/a&gt;, and &lt;a href=&quot;c3ref/result_blob&quot;&gt;sqlite3_result_text64()&lt;/a&gt;.</source>
          <target state="translated">添加了具有64位长度参数的新接口：&lt;a href=&quot;c3ref/free&quot;&gt;sqlite3_malloc64（）&lt;/a&gt;，&lt;a href=&quot;c3ref/free&quot;&gt;sqlite3_realloc64（）&lt;/a&gt;，&lt;a href=&quot;c3ref/bind_blob&quot;&gt;sqlite3_bind_blob64（）&lt;/a&gt;，&lt;a href=&quot;c3ref/result_blob&quot;&gt;sqlite3_result_blob64（）&lt;/a&gt;，&lt;a href=&quot;c3ref/bind_blob&quot;&gt;sqlite3_bind_text64（）&lt;/a&gt;和&lt;a href=&quot;c3ref/result_blob&quot;&gt;sqlite3_result_text64（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="64cc3fb84831f2e27cea592dad28ee0dfb47e000" translate="yes" xml:space="preserve">
          <source>Added new methods &lt;a href=&quot;tclsqlite#backup&quot;&gt;backup&lt;/a&gt; and &lt;a href=&quot;tclsqlite#restore&quot;&gt;restore&lt;/a&gt; to the TCL interface.</source>
          <target state="translated">添加了&lt;a href=&quot;tclsqlite#backup&quot;&gt;备份&lt;/a&gt;和&lt;a href=&quot;tclsqlite#restore&quot;&gt;还原&lt;/a&gt;到TCL接口的新方法。</target>
        </trans-unit>
        <trans-unit id="f026a440b97b07d3a085b4f6c26cd70cd6721d81" translate="yes" xml:space="preserve">
          <source>Added new operators: &lt;b&gt;&amp;amp;&lt;/b&gt; (bitwise-and) &lt;b&gt;|&lt;/b&gt; (bitwise-or), &lt;b&gt;~&lt;/b&gt; (ones-complement), &lt;b&gt;&amp;lt;&amp;lt;&lt;/b&gt; (shift left), &lt;b&gt;&amp;gt;&amp;gt;&lt;/b&gt; (shift right).</source>
          <target state="translated">添加了新的运算符：&lt;b&gt;＆&lt;/b&gt;（按位与）&lt;b&gt;| &lt;/b&gt;（按位或），&lt;b&gt;〜&lt;/b&gt;（一个补码），&lt;b&gt;&amp;lt;&amp;lt;&lt;/b&gt;（向左移动），&lt;b&gt;&amp;gt;&amp;gt;&lt;/b&gt;（向右移动）。</target>
        </trans-unit>
        <trans-unit id="de14b01c9e35bbb7629521f6a50271a7ccde1b67" translate="yes" xml:space="preserve">
          <source>Added new tests for &lt;b&gt;sqlite_complete()&lt;/b&gt; and for memory leaks.</source>
          <target state="translated">为&lt;b&gt;sqlite_complete（）&lt;/b&gt;和内存泄漏添加了新测试。</target>
        </trans-unit>
        <trans-unit id="c20dd22d769d6a0327cc8caabe7593808b2f880b" translate="yes" xml:space="preserve">
          <source>Added notes on how to compile for Windows95/98.</source>
          <target state="translated">添加了关于如何编译Windows95/98的说明。</target>
        </trans-unit>
        <trans-unit id="68f8c811918765aa038c6765208ed8c51ac7ad69" translate="yes" xml:space="preserve">
          <source>Added options --data-only and --nosys to the &lt;a href=&quot;cli#dump&quot;&gt;.dump&lt;/a&gt; dot-command.</source>
          <target state="translated">在&lt;a href=&quot;cli#dump&quot;&gt;.dump&lt;/a&gt;点命令中添加了--data-only和--nosys选项。</target>
        </trans-unit>
        <trans-unit id="8b3777e6498a05a9cf616db470b108348609eefe" translate="yes" xml:space="preserve">
          <source>Added options &lt;a href=&quot;c3ref/c_dbstatus_options#sqlitedbstatuscachehit&quot;&gt;SQLITE_DBSTATUS_CACHE_HIT&lt;/a&gt; and &lt;a href=&quot;c3ref/c_dbstatus_options#sqlitedbstatuscachemiss&quot;&gt;SQLITE_DBSTATUS_CACHE_MISS&lt;/a&gt; to the &lt;a href=&quot;c3ref/db_status&quot;&gt;sqlite3_db_status()&lt;/a&gt; interface.</source>
          <target state="translated">向&lt;a href=&quot;c3ref/db_status&quot;&gt;sqlite3_db_status（）&lt;/a&gt;接口添加了选项&lt;a href=&quot;c3ref/c_dbstatus_options#sqlitedbstatuscachehit&quot;&gt;SQLITE_DBSTATUS_CACHE_HIT&lt;/a&gt;和&lt;a href=&quot;c3ref/c_dbstatus_options#sqlitedbstatuscachemiss&quot;&gt;SQLITE_DBSTATUS_CACHE_MISS&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f2bcb2d14872cd27ad8179b401d41712f3826ac8" translate="yes" xml:space="preserve">
          <source>Added pattern matching to the &quot;.table&quot; command in the &quot;sqlite&quot; command shell.</source>
          <target state="translated">在 &quot;sqlite &quot;命令壳中增加了&quot;.table &quot;命令的模式匹配。</target>
        </trans-unit>
        <trans-unit id="dd7fdec30649f808ade235da9f1d9bfc39928676" translate="yes" xml:space="preserve">
          <source>Added special column names ROWID, OID, and _ROWID_ that refer to the unique random integer key associated with every row of every table.</source>
          <target state="translated">添加了特殊的列名ROWID,OID,和 _ROWID_,这些列名指的是与每张表的每一行相关联的唯一随机整数键。</target>
        </trans-unit>
        <trans-unit id="3d0fd30f1cefc34648f44fd621d0ab7f5704b046" translate="yes" xml:space="preserve">
          <source>Added superfluous casts and variable initializations in order to suppress nuisance compiler warnings.</source>
          <target state="translated">增加了多余的投胎和变量初始化,以抑制令人讨厌的编译器警告。</target>
        </trans-unit>
        <trans-unit id="e8034fb730a94e978b35dda6f4f886fe746b86bb" translate="yes" xml:space="preserve">
          <source>Added support for &quot;Proxy Locking&quot; on Mac OS X.</source>
          <target state="translated">在 Mac OS X 上增加了对 &quot;代理锁定 &quot;的支持。</target>
        </trans-unit>
        <trans-unit id="1a768a274150328fc95ef914aa94e10888b14001" translate="yes" xml:space="preserve">
          <source>Added support for &quot;sz=NNN&quot; parameters at the end of &lt;a href=&quot;fileformat2#stat1tab&quot;&gt;sqlite_stat1.stat&lt;/a&gt; fields used to specify the average length in bytes for table and index rows.</source>
          <target state="translated">在&lt;a href=&quot;fileformat2#stat1tab&quot;&gt;sqlite_stat1.stat&lt;/a&gt;字段的末尾添加了对&amp;ldquo; sz = NNN&amp;rdquo;参数的支持，该字段用于指定表和索引行的平均字节长度。</target>
        </trans-unit>
        <trans-unit id="c5d796f1bc1788a94bdc0f744f6885401132b83b" translate="yes" xml:space="preserve">
          <source>Added support for &lt;a href=&quot;c3ref/blob_open&quot;&gt;Incremental BLOB I/O&lt;/a&gt;.</source>
          <target state="translated">添加了对&lt;a href=&quot;c3ref/blob_open&quot;&gt;增量BLOB I / O的支持&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c77bdf718a836eec40d5cc2bd3bd76b51bd6ed19" translate="yes" xml:space="preserve">
          <source>Added support for &lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfigmaindbname&quot;&gt;SQLITE_DBCONFIG_MAINDBNAME&lt;/a&gt;.</source>
          <target state="translated">添加了对&lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfigmaindbname&quot;&gt;SQLITE_DBCONFIG_MAINDBNAME的&lt;/a&gt;支持。</target>
        </trans-unit>
        <trans-unit id="d912639164fbfa089f0b32366f17a5c6aa911805" translate="yes" xml:space="preserve">
          <source>Added support for &lt;a href=&quot;compile#enable_stat4&quot;&gt;SQLITE_ENABLE_STAT4&lt;/a&gt;</source>
          <target state="translated">添加了对&lt;a href=&quot;compile#enable_stat4&quot;&gt;SQLITE_ENABLE_STAT4的&lt;/a&gt;支持</target>
        </trans-unit>
        <trans-unit id="a7df61cc46e1a14c31ecf305ec5b3cdc2ad14931" translate="yes" xml:space="preserve">
          <source>Added support for &lt;a href=&quot;expridx&quot;&gt;indexes on expressions&lt;/a&gt;.</source>
          <target state="translated">增加了&lt;a href=&quot;expridx&quot;&gt;对表达式索引的&lt;/a&gt;支持。</target>
        </trans-unit>
        <trans-unit id="ccee6fe1568710feac231d9b82d4b7116c357c1f" translate="yes" xml:space="preserve">
          <source>Added support for &lt;a href=&quot;foreignkeys&quot;&gt;foreign key constraints&lt;/a&gt;. Foreign key constraints are disabled by default. Use the &lt;a href=&quot;pragma#pragma_foreign_keys&quot;&gt;foreign_keys pragma&lt;/a&gt; to turn them on.</source>
          <target state="translated">增加了&lt;a href=&quot;foreignkeys&quot;&gt;对外键约束的&lt;/a&gt;支持。默认情况下，外键约束是禁用的。使用&lt;a href=&quot;pragma#pragma_foreign_keys&quot;&gt;foreign_keys编译指示&lt;/a&gt;将其打开。</target>
        </trans-unit>
        <trans-unit id="57d3823a31c3d971b8257b18cfb2e7dd4e9220f5" translate="yes" xml:space="preserve">
          <source>Added support for &lt;a href=&quot;fts3#*fts4compression&quot;&gt;compressed FTS4 content&lt;/a&gt;</source>
          <target state="translated">增加了对&lt;a href=&quot;fts3#*fts4compression&quot;&gt;压缩FTS4内容的&lt;/a&gt;支持</target>
        </trans-unit>
        <trans-unit id="c4787e7cb7c644f741f21a4cb4f977bb669f1d4c" translate="yes" xml:space="preserve">
          <source>Added support for &lt;a href=&quot;fts3#fts4&quot;&gt;FTS4&lt;/a&gt; and enhancements to the FTS &lt;a href=&quot;fts3#matchinfo&quot;&gt;matchinfo()&lt;/a&gt; function.</source>
          <target state="translated">添加了对&lt;a href=&quot;fts3#fts4&quot;&gt;FTS4的&lt;/a&gt;支持并增强了FTS &lt;a href=&quot;fts3#matchinfo&quot;&gt;matchinfo（）&lt;/a&gt;函数。</target>
        </trans-unit>
        <trans-unit id="6092d378933e07269403fd4dd90531c8858f1c75" translate="yes" xml:space="preserve">
          <source>Added support for &lt;a href=&quot;http://www.icu-project.org/&quot;&gt;International Components for Unicode (ICU)&lt;/a&gt; to the full-text search extensions.</source>
          <target state="translated">在全文搜索扩展中添加了&lt;a href=&quot;http://www.icu-project.org/&quot;&gt;对Unicode国际组件（ICU）的&lt;/a&gt;支持。</target>
        </trans-unit>
        <trans-unit id="b494fc9ecd0ea1218a4c28e118fe3101d154372d" translate="yes" xml:space="preserve">
          <source>Added support for &lt;a href=&quot;lang_analyze#approx&quot;&gt;approximate ANALYZE&lt;/a&gt; using the &lt;a href=&quot;pragma#pragma_analysis_limit&quot;&gt;PRAGMA analysis_limit&lt;/a&gt; command.</source>
          <target state="translated">使用&lt;a href=&quot;pragma#pragma_analysis_limit&quot;&gt;PRAGMA analysis_limit&lt;/a&gt;命令增加了对&lt;a href=&quot;lang_analyze#approx&quot;&gt;近似ANALYZE的&lt;/a&gt;支持。</target>
        </trans-unit>
        <trans-unit id="1f5facc051f99921d391afa4e3643b439a064280" translate="yes" xml:space="preserve">
          <source>Added support for &lt;a href=&quot;lang_expr#hexint&quot;&gt;hexadecimal integer literals&lt;/a&gt; in the SQL parser. (Ex: 0x123abc)</source>
          <target state="translated">在SQL解析器中添加了对&lt;a href=&quot;lang_expr#hexint&quot;&gt;十六进制整数文字的&lt;/a&gt;支持。（例如：0x123abc）</target>
        </trans-unit>
        <trans-unit id="3f5a1e3af94d119995760c36810093890d689e97" translate="yes" xml:space="preserve">
          <source>Added support for &lt;a href=&quot;lang_expr#like&quot;&gt;LIKE&lt;/a&gt;, &lt;a href=&quot;lang_expr#glob&quot;&gt;GLOB&lt;/a&gt;, and &lt;a href=&quot;lang_expr#regexp&quot;&gt;REGEXP&lt;/a&gt; operators on &lt;a href=&quot;vtab&quot;&gt;virtual tables&lt;/a&gt;.</source>
          <target state="translated">增加了对&lt;a href=&quot;vtab&quot;&gt;虚拟表&lt;/a&gt;上的&lt;a href=&quot;lang_expr#like&quot;&gt;LIKE&lt;/a&gt;，&lt;a href=&quot;lang_expr#glob&quot;&gt;GLOB&lt;/a&gt;和&lt;a href=&quot;lang_expr#regexp&quot;&gt;REGEXP&lt;/a&gt;运算符的支持。</target>
        </trans-unit>
        <trans-unit id="2b5ae11919833702f8097527352d77974e85a4c5" translate="yes" xml:space="preserve">
          <source>Added support for &lt;a href=&quot;lang_expr#varparam&quot;&gt;bound parameters&lt;/a&gt; and the &lt;a href=&quot;cli#param&quot;&gt;.parameter command&lt;/a&gt;.</source>
          <target state="translated">增加了对&lt;a href=&quot;lang_expr#varparam&quot;&gt;绑定参数&lt;/a&gt;和&lt;a href=&quot;cli#param&quot;&gt;.parameter命令的支持&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="da287db3ef9d940ef6e06049e899a3255c626579" translate="yes" xml:space="preserve">
          <source>Added support for &lt;a href=&quot;lang_savepoint&quot;&gt;nested transactions&lt;/a&gt;</source>
          <target state="translated">增加了对&lt;a href=&quot;lang_savepoint&quot;&gt;嵌套事务的&lt;/a&gt;支持</target>
        </trans-unit>
        <trans-unit id="57b0cb14c26129da9af31340671c9b3ff8e5ccca" translate="yes" xml:space="preserve">
          <source>Added support for &lt;a href=&quot;lang_with&quot;&gt;common table expressions&lt;/a&gt; and the &lt;a href=&quot;lang_with&quot;&gt;WITH clause&lt;/a&gt;.</source>
          <target state="translated">增加了对&lt;a href=&quot;lang_with&quot;&gt;公用表表达式&lt;/a&gt;和&lt;a href=&quot;lang_with&quot;&gt;WITH子句的支持&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a3dc90ea23f1ee6a95938b67f9463a536aa9aa65" translate="yes" xml:space="preserve">
          <source>Added support for &lt;a href=&quot;pragma#pragma_incremental_vacuum&quot;&gt; Incremental Vacuum&lt;/a&gt;.</source>
          <target state="translated">增加了对&lt;a href=&quot;pragma#pragma_incremental_vacuum&quot;&gt;增量真空的&lt;/a&gt;支持。</target>
        </trans-unit>
        <trans-unit id="098e47061ac752cad3c4f0dd71b4386b546c1923" translate="yes" xml:space="preserve">
          <source>Added support for &lt;a href=&quot;queryplanner#partialsort&quot;&gt;partial sorting by index&lt;/a&gt;.</source>
          <target state="translated">添加了&lt;a href=&quot;queryplanner#partialsort&quot;&gt;对按索引&lt;/a&gt;进行部分排序的支持。</target>
        </trans-unit>
        <trans-unit id="5852f13702a3f6d2950690e297970675461ddffd" translate="yes" xml:space="preserve">
          <source>Added support for &lt;a href=&quot;rowvalue&quot;&gt;row values&lt;/a&gt;.</source>
          <target state="translated">增加了对&lt;a href=&quot;rowvalue&quot;&gt;行值的&lt;/a&gt;支持。</target>
        </trans-unit>
        <trans-unit id="9304a1ae7bcff7f9d0294fd922fb7902290e9b40" translate="yes" xml:space="preserve">
          <source>Added support for &lt;a href=&quot;rtree#customquery&quot;&gt;custom r-tree queries&lt;/a&gt; using application-supplied callback routines to define the boundary of the query region.</source>
          <target state="translated">添加了对使用应用程序提供的回调例程来定义查询区域边界的&lt;a href=&quot;rtree#customquery&quot;&gt;自定义r-tree查询的&lt;/a&gt;支持。</target>
        </trans-unit>
        <trans-unit id="38862a5dbb5ef062dda0972b971e23cd8f009ced" translate="yes" xml:space="preserve">
          <source>Added support for &lt;a href=&quot;shortnames&quot;&gt;short filenames&lt;/a&gt;.</source>
          <target state="translated">增加了对&lt;a href=&quot;shortnames&quot;&gt;短文件名的&lt;/a&gt;支持。</target>
        </trans-unit>
        <trans-unit id="0678942ca70cc2234b4d6948778baf5cfae7a7b8" translate="yes" xml:space="preserve">
          <source>Added support for &lt;a href=&quot;vtab#epovtab&quot;&gt;eponymous virtual tables&lt;/a&gt;.</source>
          <target state="translated">增加了对&lt;a href=&quot;vtab#epovtab&quot;&gt;同名虚拟表的&lt;/a&gt;支持。</target>
        </trans-unit>
        <trans-unit id="f743bdcce78a1dddfc4dc927a772db18d15b9bd9" translate="yes" xml:space="preserve">
          <source>Added support for &lt;a href=&quot;vtab#tabfunc2&quot;&gt;table-valued functions&lt;/a&gt; in the FROM clause of a &lt;a href=&quot;lang_select&quot;&gt;SELECT&lt;/a&gt; statement.</source>
          <target state="translated">在&lt;a href=&quot;lang_select&quot;&gt;SELECT&lt;/a&gt;语句的FROM子句中增加了对&lt;a href=&quot;vtab#tabfunc2&quot;&gt;表值函数的&lt;/a&gt;支持。</target>
        </trans-unit>
        <trans-unit id="28342e05a28a19c9120653536a77b2d3b8ecfa3f" translate="yes" xml:space="preserve">
          <source>Added support for &lt;a href=&quot;vtab#worid&quot;&gt;WITHOUT ROWID virtual tables&lt;/a&gt;.</source>
          <target state="translated">添加了对&lt;a href=&quot;vtab#worid&quot;&gt;WITHOUT ROWID虚拟表的&lt;/a&gt;支持。</target>
        </trans-unit>
        <trans-unit id="e30cf1fb4cdcf9dd548c26ae0e68c541d4720f1d" translate="yes" xml:space="preserve">
          <source>Added support for &lt;a href=&quot;wal&quot;&gt;write-ahead logging&lt;/a&gt;.</source>
          <target state="translated">添加了对&lt;a href=&quot;wal&quot;&gt;预写日志记录的&lt;/a&gt;支持。</target>
        </trans-unit>
        <trans-unit id="f2a37e36b173d50699a7a383daf4808cca9005f3" translate="yes" xml:space="preserve">
          <source>Added support for &lt;a href=&quot;withoutrowid&quot;&gt;WITHOUT ROWID&lt;/a&gt; tables.</source>
          <target state="translated">添加了对&lt;a href=&quot;withoutrowid&quot;&gt;WITHOUT ROWID&lt;/a&gt;表的支持。</target>
        </trans-unit>
        <trans-unit id="aaa626c013ccfe7078969d1a2418f195260916f5" translate="yes" xml:space="preserve">
          <source>Added support for &lt;b&gt;GROUP BY&lt;/b&gt; and &lt;b&gt;HAVING&lt;/b&gt;</source>
          <target state="translated">添加了对&lt;b&gt;GROUP BY&lt;/b&gt;和&lt;b&gt;HAVING的&lt;/b&gt;支持&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="23c6378ca8e0385b32d8c34595a31f9e34896f43" translate="yes" xml:space="preserve">
          <source>Added support for &lt;b&gt;IN&lt;/b&gt; and &lt;b&gt;BETWEEN&lt;/b&gt; operators</source>
          <target state="translated">增加了对&lt;b&gt;IN&lt;/b&gt;和&lt;b&gt;BETWEEN&lt;/b&gt;运算符的支持</target>
        </trans-unit>
        <trans-unit id="39906a48ce3fe7d0519d7138f444bf5e0f5d0c4e" translate="yes" xml:space="preserve">
          <source>Added support for &lt;b&gt;SELECT DISTINCT ...&lt;/b&gt;</source>
          <target state="translated">添加了对&lt;b&gt;SELECT DISTINCT的&lt;/b&gt;支持&lt;b&gt;...&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="4d369d287f216943320eb1cf4c8784d883517fcc" translate="yes" xml:space="preserve">
          <source>Added support for ALTER TABLE ADD COLUMN.</source>
          <target state="translated">增加了对ALTER TABLE ADD COLUMN的支持。</target>
        </trans-unit>
        <trans-unit id="f61dc3bfef1b0fb9159060519a3d5996919b7cdf" translate="yes" xml:space="preserve">
          <source>Added support for CASE expressions (patch from Dan Kennedy)</source>
          <target state="translated">增加了对CASE表达式的支持(来自Dan Kennedy的补丁)。</target>
        </trans-unit>
        <trans-unit id="5ef50e566503d5ec6fc8c4206728cad99f6ab4e0" translate="yes" xml:space="preserve">
          <source>Added support for COUNT(DISTINCT expr)</source>
          <target state="translated">添加了对 COUNT(DISTINCT expr)的支持。</target>
        </trans-unit>
        <trans-unit id="4f1a1db14256e94e83a51e328f837e192ca0c2b7" translate="yes" xml:space="preserve">
          <source>Added support for CREATE TABLE AS SELECT</source>
          <target state="translated">增加了对CREATE TABLE AS SELECT的支持。</target>
        </trans-unit>
        <trans-unit id="f480cd382ac5c6dd6874aa6a99de254caa5bd680" translate="yes" xml:space="preserve">
          <source>Added support for IF EXISTS on CREATE/DROP TRIGGER/VIEW</source>
          <target state="translated">在CREATE/DROP TRIGGER/VIEW上添加了对IF EXISTS的支持。</target>
        </trans-unit>
        <trans-unit id="802bbd8e68481149017b168987b2b6dcf3e3f523" translate="yes" xml:space="preserve">
          <source>Added support for TEMP triggers and indices.</source>
          <target state="translated">增加了对TEMP触发器和指数的支持。</target>
        </trans-unit>
        <trans-unit id="aecb8ed5eb711ab5bc883c11daa59ac6b2d5ce62" translate="yes" xml:space="preserve">
          <source>Added support for TEMPORARY tables and indices.</source>
          <target state="translated">增加了对TEMPORARY表和索引的支持。</target>
        </trans-unit>
        <trans-unit id="4d8ec5d1af662afdc6e8cea0faa53d9548a3715c" translate="yes" xml:space="preserve">
          <source>Added support for VIEWs.</source>
          <target state="translated">增加了对VIEWs的支持。</target>
        </trans-unit>
        <trans-unit id="b7d8cf0f737beb23e6e9108cf9c8ba695b902478" translate="yes" xml:space="preserve">
          <source>Added support for Windows Phone 8 platforms</source>
          <target state="translated">增加了对Windows Phone 8平台的支持</target>
        </trans-unit>
        <trans-unit id="156d52498375f646744777537d1b8661c3748353" translate="yes" xml:space="preserve">
          <source>Added support for aggregate functions (Ex: &lt;b&gt;COUNT(*)&lt;/b&gt;, &lt;b&gt;MIN(...)&lt;/b&gt;) to the SELECT statement.</source>
          <target state="translated">在SELECT语句中添加了对聚合函数（例如：&lt;b&gt;COUNT（*）&lt;/b&gt;，&lt;b&gt;MIN（...）&lt;/b&gt;）的支持。</target>
        </trans-unit>
        <trans-unit id="59adb1923dce593e20f6cdd76d1aad57f9b3c08b" translate="yes" xml:space="preserve">
          <source>Added support for default values on columns of a table.</source>
          <target state="translated">增加了对表列的默认值的支持。</target>
        </trans-unit>
        <trans-unit id="da71dda5aa64971e5509406d2038fc8ff0a58226" translate="yes" xml:space="preserve">
          <source>Added support for dynamically loaded extensions (beta)</source>
          <target state="translated">增加了对动态加载扩展的支持(测试版)。</target>
        </trans-unit>
        <trans-unit id="2caaf5d365573dc0f505bc362a8d1a5cfa8a2a47" translate="yes" xml:space="preserve">
          <source>Added support for exclusive access mode using &lt;a href=&quot;pragma#pragma_locking_mode&quot;&gt; &quot;PRAGMA locking_mode=EXCLUSIVE&quot;&lt;/a&gt;</source>
          <target state="translated">添加了对使用&lt;a href=&quot;pragma#pragma_locking_mode&quot;&gt;&amp;ldquo; PRAGMAlocking_mode = EXCLUSIVE&amp;rdquo;的&lt;/a&gt;独占访问模式的支持</target>
        </trans-unit>
        <trans-unit id="edfbd1d9a982b614144ea7761b02cfc7f2dbb5f8" translate="yes" xml:space="preserve">
          <source>Added support for grave-accent quoting for compatibility with MySQL</source>
          <target state="translated">增加了对坟墓引号的支持,以便与MySQL兼容。</target>
        </trans-unit>
        <trans-unit id="22bbd337e6061caadf8960bdff6dde0fe2e1ce00" translate="yes" xml:space="preserve">
          <source>Added support for in-memory databases.</source>
          <target state="translated">增加了对内存数据库的支持。</target>
        </trans-unit>
        <trans-unit id="269e7f8bd5682bfd59fdb502a94ab258bd85c346" translate="yes" xml:space="preserve">
          <source>Added support for new functions: &lt;b&gt;coalesce()&lt;/b&gt;, &lt;b&gt;lower()&lt;/b&gt;, &lt;b&gt;upper()&lt;/b&gt;, and &lt;b&gt;random()&lt;/b&gt;</source>
          <target state="translated">增加了对新功能的支持：&lt;b&gt;coalesce（）&lt;/b&gt;，&lt;b&gt;lower（）&lt;/b&gt;，&lt;b&gt;upper（）&lt;/b&gt;和&lt;b&gt;random（）&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="714630549f890ebcea85844393f6d39effdd678c" translate="yes" xml:space="preserve">
          <source>Added support for parentheses in FTS3 query patterns using the &lt;a href=&quot;compile#enable_fts3_parenthesis&quot;&gt;SQLITE_ENABLE_FTS3_PARENTHESIS&lt;/a&gt; compile-time option.</source>
          <target state="translated">使用&lt;a href=&quot;compile#enable_fts3_parenthesis&quot;&gt;SQLITE_ENABLE_FTS3_PARENTHESIS&lt;/a&gt;编译时选项添加了对FTS3查询模式中括号的支持。</target>
        </trans-unit>
        <trans-unit id="f0eb5b5e0bf2134ccfb6085dc04cfe49a2b50cb2" translate="yes" xml:space="preserve">
          <source>Added support for read-only &lt;a href=&quot;vtab#xshadowname&quot;&gt;shadow tables&lt;/a&gt; when the &lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfigdefensive&quot;&gt;SQLITE_DBCONFIG_DEFENSIVE&lt;/a&gt; option is enabled.</source>
          <target state="translated">启用&lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfigdefensive&quot;&gt;SQLITE_DBCONFIG_DEFENSIVE&lt;/a&gt;选项时，添加了对只读&lt;a href=&quot;vtab#xshadowname&quot;&gt;影子表&lt;/a&gt;的支持。</target>
        </trans-unit>
        <trans-unit id="f5328ffada12715fa1740f8ed07ec5f56e3e6e11" translate="yes" xml:space="preserve">
          <source>Added support for reading and writing &lt;a href=&quot;sqlar&quot;&gt;SQLite Archive&lt;/a&gt; files using the &lt;a href=&quot;cli#sqlar&quot;&gt;.archive command&lt;/a&gt;.</source>
          <target state="translated">添加了对使用&lt;a href=&quot;cli#sqlar&quot;&gt;.archive命令&lt;/a&gt;读取和写入&lt;a href=&quot;sqlar&quot;&gt;SQLite Archive&lt;/a&gt;文件的支持。</target>
        </trans-unit>
        <trans-unit id="d83a93fa67e821fa39cee2c0269a9594a2b7048d" translate="yes" xml:space="preserve">
          <source>Added support for row triggers.</source>
          <target state="translated">增加了对行触发器的支持。</target>
        </trans-unit>
        <trans-unit id="7d546045a17d60665f8f36d2355b1056f5514277" translate="yes" xml:space="preserve">
          <source>Added support for sub-queries in the FROM clause of a SELECT.</source>
          <target state="translated">在SELECT的FROM子句中增加了对子查询的支持。</target>
        </trans-unit>
        <trans-unit id="5baf8f3125a1b4ab71c92fa8a5439c0508a7b6ff" translate="yes" xml:space="preserve">
          <source>Added support for the &quot;T&quot; separator in ISO-8601 date/time strings.</source>
          <target state="translated">增加了对ISO-8601日期/时间字符串中 &quot;T &quot;分隔符的支持。</target>
        </trans-unit>
        <trans-unit id="725493f315496bd1f2f4a13c4ac5b992869c96d8" translate="yes" xml:space="preserve">
          <source>Added support for the &lt;a href=&quot;c3ref/expanded_sql&quot;&gt;sqlite3_normalized_sql()&lt;/a&gt; interface, when compiling with SQLITE_ENABLE_NORMALIZE.</source>
          <target state="translated">使用SQLITE_ENABLE_NORMALIZE进行编译时，增加了对&lt;a href=&quot;c3ref/expanded_sql&quot;&gt;sqlite3_normalized_sql（）&lt;/a&gt;接口的支持。</target>
        </trans-unit>
        <trans-unit id="498b965855c0df0c65ab77d01077c70c3176df7c" translate="yes" xml:space="preserve">
          <source>Added support for the &lt;a href=&quot;fts3#*fts4languageid&quot;&gt;FTS4 languageid option&lt;/a&gt;.</source>
          <target state="translated">增加了对&lt;a href=&quot;fts3#*fts4languageid&quot;&gt;FTS4 languageid选项的&lt;/a&gt;支持。</target>
        </trans-unit>
        <trans-unit id="5bebd7419f01257793b74d6f7189da20f77e3cdd" translate="yes" xml:space="preserve">
          <source>Added support for the &lt;a href=&quot;fts3#fts4prefix&quot;&gt;FTS4 prefix option&lt;/a&gt; and the &lt;a href=&quot;fts3#fts4order&quot;&gt;FTS4 order option&lt;/a&gt;.</source>
          <target state="translated">增加了对&lt;a href=&quot;fts3#fts4prefix&quot;&gt;FTS4前缀选项&lt;/a&gt;和&lt;a href=&quot;fts3#fts4order&quot;&gt;FTS4顺序选项的支持&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a61e8713611aa7f646e2e630cf8669d823feec59" translate="yes" xml:space="preserve">
          <source>Added support for the &lt;a href=&quot;fts5#carrotq&quot;&gt;&quot;^&quot; initial token syntax&lt;/a&gt; in FTS5.</source>
          <target state="translated">在FTS5中添加了对&lt;a href=&quot;fts5#carrotq&quot;&gt;&amp;ldquo; ^&amp;rdquo;初始令牌语法&lt;/a&gt;的支持。</target>
        </trans-unit>
        <trans-unit id="63f525fb27345b220e85e4b1882d1f850d9fd641" translate="yes" xml:space="preserve">
          <source>Added support for the CAST operator</source>
          <target state="translated">增加了对CAST运算符的支持</target>
        </trans-unit>
        <trans-unit id="04fad2e75b780f1e57df3facebce6367bd600478" translate="yes" xml:space="preserve">
          <source>Added support for user-defined functions implemented in C.</source>
          <target state="translated">增加了对用C语言实现的用户定义函数的支持。</target>
        </trans-unit>
        <trans-unit id="5fd469aa2c2d142386dbb22e08493982d3a3c0cf" translate="yes" xml:space="preserve">
          <source>Added support for using &lt;b&gt;(SELECT ...)&lt;/b&gt; within expressions</source>
          <target state="translated">添加了对在表达式中使用&lt;b&gt;（SELECT ...）的&lt;/b&gt;支持</target>
        </trans-unit>
        <trans-unit id="9dbdc56037dd11ba01c820085bfc64d7a45c048d" translate="yes" xml:space="preserve">
          <source>Added support for virtual tables (beta)</source>
          <target state="translated">增加了对虚拟表格的支持(测试版</target>
        </trans-unit>
        <trans-unit id="5a11c44e956f0b2eed596db722d97e53d70a1408" translate="yes" xml:space="preserve">
          <source>Added the &quot;#-N&quot; array notation for &lt;a href=&quot;json1#jsonpath&quot;&gt;JSON function path arguments&lt;/a&gt;.</source>
          <target state="translated">为&lt;a href=&quot;json1#jsonpath&quot;&gt;JSON函数路径参数&lt;/a&gt;添加了&amp;ldquo;＃-N&amp;rdquo;数组符号。</target>
        </trans-unit>
        <trans-unit id="ef53cbf2e79a9098a11853089aaa8d3c0fdee6d1" translate="yes" xml:space="preserve">
          <source>Added the &quot;%Q&quot; expansion to sqlite_*_printf().</source>
          <target state="translated">在 sqlite_*_printf()中添加了&quot;%Q &quot;扩展。</target>
        </trans-unit>
        <trans-unit id="d19a5fb60f5adeafbe53fbf0afc64944745e9a28" translate="yes" xml:space="preserve">
          <source>Added the &quot;--indent&quot; option to the &quot;.schema&quot; and &quot;.fullschema&quot; commands of the &lt;a href=&quot;cli&quot;&gt;command-line shell&lt;/a&gt;, to turn on pretty-printing.</source>
          <target state="translated">在&lt;a href=&quot;cli&quot;&gt;命令行shell&lt;/a&gt;的&amp;ldquo; .schema&amp;rdquo;和&amp;ldquo; .fullschema&amp;rdquo;命令中添加了&amp;ldquo; --indent&amp;rdquo;选项，以启用漂亮打印。</target>
        </trans-unit>
        <trans-unit id="bbed788f58b78e99986ec814826250aabd00b5f8" translate="yes" xml:space="preserve">
          <source>Added the &quot;--newlines&quot; option to the &quot;&lt;a href=&quot;cli#dump&quot;&gt;.dump&lt;/a&gt;&quot; command to cause U+000a and U+000d characters to be output literally rather than escaped using the &lt;a href=&quot;lang_corefunc#replace&quot;&gt;replace()&lt;/a&gt; function.</source>
          <target state="translated">在&amp;ldquo; &lt;a href=&quot;cli#dump&quot;&gt;.dump&lt;/a&gt; &amp;rdquo;命令中添加了&amp;ldquo; --newlines&amp;rdquo;选项，以使U + 000a和U + 000d字符按原样输出，而不是使用&lt;a href=&quot;lang_corefunc#replace&quot;&gt;replace（）&lt;/a&gt;函数进行转义。</target>
        </trans-unit>
        <trans-unit id="4d540026cb1605d53141475378c06aed40694ee4" translate="yes" xml:space="preserve">
          <source>Added the &quot;--transaction&quot; option to &lt;a href=&quot;sqldiff&quot;&gt;sqldiff&lt;/a&gt;.</source>
          <target state="translated">添加了&amp;ldquo;--transaction&amp;rdquo;选项&lt;a href=&quot;sqldiff&quot;&gt;sqldiff&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="478aa7b2f50ff9f66c73e09765475623c1296d17" translate="yes" xml:space="preserve">
          <source>Added the &quot;-echo&quot; option to the shell.</source>
          <target state="translated">在shell中添加了&quot;-echo &quot;选项。</target>
        </trans-unit>
        <trans-unit id="8299146bfa027dbb559bc3d23457ff833b781801" translate="yes" xml:space="preserve">
          <source>Added the &quot;-heap&quot; option to the &lt;a href=&quot;cli&quot;&gt;command-line shell&lt;/a&gt;</source>
          <target state="translated">在&lt;a href=&quot;cli&quot;&gt;命令行外壳中&lt;/a&gt;添加了&amp;ldquo; -heap&amp;rdquo;选项</target>
        </trans-unit>
        <trans-unit id="dfd798caa17668bf08f6cc875f2f20a116ec83ed" translate="yes" xml:space="preserve">
          <source>Added the &quot;-sourceid&quot; option to the &quot;sqlite3&quot; command.</source>
          <target state="translated">在 &quot;sqlite3 &quot;命令中添加了&quot;-sourceid &quot;选项。</target>
        </trans-unit>
        <trans-unit id="20b758a047367c847e236a7d6e0ee3c1b4474249" translate="yes" xml:space="preserve">
          <source>Added the &quot;.auth ON|OFF&quot; command to the &lt;a href=&quot;cli&quot;&gt;command-line shell&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;cli&quot;&gt;命令行shell中&lt;/a&gt;添加了&amp;ldquo; .auth ON | OFF&amp;rdquo;命令。</target>
        </trans-unit>
        <trans-unit id="940607a7aa26e4eb8956b707dcdaed3399cf8e2b" translate="yes" xml:space="preserve">
          <source>Added the &quot;.bail&quot; command to the command-line shell</source>
          <target state="translated">在命令行shell中添加了&quot;.bail &quot;命令。</target>
        </trans-unit>
        <trans-unit id="3bc22cc03bccb3a5998ffd80255b3094a2a899a7" translate="yes" xml:space="preserve">
          <source>Added the &quot;.changes ON|OFF&quot; and &quot;.vfsinfo&quot; &lt;a href=&quot;cli#dotcmd&quot;&gt;dot-commands&lt;/a&gt;.</source>
          <target state="translated">添加了&amp;ldquo; .changes ON | OFF&amp;rdquo;和&amp;ldquo; .vfsinfo&amp;rdquo; &lt;a href=&quot;cli#dotcmd&quot;&gt;点命令&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="09be07a1075c82f137355e04fdda8ba46481b558" translate="yes" xml:space="preserve">
          <source>Added the &quot;.dbconfig&quot; command</source>
          <target state="translated">添加了&quot;.dbconfig &quot;命令。</target>
        </trans-unit>
        <trans-unit id="b530795e109b90659ae4200c9b9587d5f7062df4" translate="yes" xml:space="preserve">
          <source>Added the &quot;.dbconfig&quot; command.</source>
          <target state="translated">增加了&quot;.dbconfig &quot;命令。</target>
        </trans-unit>
        <trans-unit id="71435fab5cdfaf1ac01d7010f6e9ba64d0dc7ff6" translate="yes" xml:space="preserve">
          <source>Added the &quot;.dbinfo&quot; command to the &lt;a href=&quot;cli&quot;&gt;command-line shell&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;cli&quot;&gt;命令行shell中&lt;/a&gt;添加了&amp;ldquo; .dbinfo&amp;rdquo;命令。</target>
        </trans-unit>
        <trans-unit id="e44bed98bc9ffcac82331aa66719ea4a5d15e106" translate="yes" xml:space="preserve">
          <source>Added the &quot;.eqp full&quot; option to the &lt;a href=&quot;cli&quot;&gt;command-line shell&lt;/a&gt;, that does both &lt;a href=&quot;lang_explain&quot;&gt;EXPLAIN&lt;/a&gt; and &lt;a href=&quot;eqp&quot;&gt;EXPLAIN QUERY PLAN&lt;/a&gt; on each statement that is evaluated.</source>
          <target state="translated">在&lt;a href=&quot;cli&quot;&gt;命令行shell中&lt;/a&gt;添加了&amp;ldquo; .eqp full&amp;rdquo;选项，该选项对每个求值语句执行&lt;a href=&quot;lang_explain&quot;&gt;EXPLAIN&lt;/a&gt;和&lt;a href=&quot;eqp&quot;&gt;EXPLAIN QUERY PLAN&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bc76269d710537ecfa607d27057feb111d2f5738" translate="yes" xml:space="preserve">
          <source>Added the &quot;.eqp trigger&quot; variant of the &quot;.eqp&quot; command</source>
          <target state="translated">添加了&quot;.eqp &quot;命令的&quot;.eqp trigger &quot;变体。</target>
        </trans-unit>
        <trans-unit id="4db11420723106d62b97b1cddde4d80a86b6d3b9" translate="yes" xml:space="preserve">
          <source>Added the &quot;.print&quot; command</source>
          <target state="translated">添加了&quot;.print &quot;命令</target>
        </trans-unit>
        <trans-unit id="2e7ac74eb8ba91a3704bc76910d5bdd08a822466" translate="yes" xml:space="preserve">
          <source>Added the &quot;.timer&quot; command to the CLI</source>
          <target state="translated">在CLI中添加了&quot;.timer &quot;命令。</target>
        </trans-unit>
        <trans-unit id="e4061075559d28d8e4ed816bdd15c79dc564dc7a" translate="yes" xml:space="preserve">
          <source>Added the &quot;.trace&quot; dot-command to the command-line shell.</source>
          <target state="translated">在命令行shell中添加了&quot;.trace &quot;点阵命令。</target>
        </trans-unit>
        <trans-unit id="aadf72f23a2ada14e4167774049503cfd395b448" translate="yes" xml:space="preserve">
          <source>Added the &quot;.vfslist&quot; &lt;a href=&quot;cli#dotcmd&quot;&gt;dot-command&lt;/a&gt;.</source>
          <target state="translated">添加了&amp;ldquo; .vfslist&amp;rdquo; &lt;a href=&quot;cli#dotcmd&quot;&gt;点命令&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0d70605741bcb27d28026147f94d6cd602433b0f" translate="yes" xml:space="preserve">
          <source>Added the &quot;&lt;a href=&quot;https://sqlite.org/src/file/ext/misc/dbdata.c&quot;&gt;sqlite_dbdata&lt;/a&gt;&quot; virtual table for extracting raw low-level content from an SQLite database, even a database that is corrupt.</source>
          <target state="translated">添加了&amp;ldquo; &lt;a href=&quot;https://sqlite.org/src/file/ext/misc/dbdata.c&quot;&gt;sqlite_dbdata&lt;/a&gt; &amp;rdquo;虚拟表，用于从SQLite数据库（甚至已损坏的数据库）中提取原始低级内容。</target>
        </trans-unit>
        <trans-unit id="d2ea4e959435eb02b355c49cbea6f7bc7d2b3ef5" translate="yes" xml:space="preserve">
          <source>Added the &quot;&lt;a href=&quot;uri#urimodeof&quot;&gt;modeof=&lt;i&gt;filename&lt;/i&gt;&lt;/a&gt;&quot; URI parameter on the unix VFS</source>
          <target state="translated">在Unix VFS上添加了&amp;ldquo; &lt;a href=&quot;uri#urimodeof&quot;&gt;modeof = &lt;i&gt;filename&lt;/i&gt;&lt;/a&gt; &amp;rdquo; URI参数</target>
        </trans-unit>
        <trans-unit id="8283f3eb012777e892f47004d1b706afd30de071" translate="yes" xml:space="preserve">
          <source>Added the &quot;EXTRA&quot; option to &lt;a href=&quot;pragma#pragma_synchronous&quot;&gt;PRAGMA synchronous&lt;/a&gt; that does a sync of the containing directory when a rollback journal is unlinked in DELETE mode, for better durability. The &lt;a href=&quot;compile#extra_durable&quot;&gt;SQLITE_EXTRA_DURABLE&lt;/a&gt; compile-time option enables &lt;a href=&quot;pragma#pragma_synchronous&quot;&gt;PRAGMA synchronous=EXTRA&lt;/a&gt; by default.</source>
          <target state="translated">在&lt;a href=&quot;pragma#pragma_synchronous&quot;&gt;PRAGMA同步&lt;/a&gt;中添加了&amp;ldquo; EXTRA&amp;rdquo;选项，当在DELETE模式下取消链接回滚日志时，该目录将同步包含目录，以实现更好的持久性。默认情况下，&lt;a href=&quot;compile#extra_durable&quot;&gt;SQLITE_EXTRA_DURABLE&lt;/a&gt;编译时选项启用PRAGMAynchronized &lt;a href=&quot;pragma#pragma_synchronous&quot;&gt;= EXTRA&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9e0605f79be49e0270c61cb5b9dfa4647f4728a0" translate="yes" xml:space="preserve">
          <source>Added the &quot;bitvec&quot; object for keeping track of which pages have been journalled. Improves speed and reduces memory consumption, especially for large database files.</source>
          <target state="translated">增加了 &quot;bitvec &quot;对象,用于跟踪哪些页面被记录下来。提高了速度,减少了内存消耗,特别是对于大型数据库文件。</target>
        </trans-unit>
        <trans-unit id="8c6dbbfeafc55121e8fcf541554220fbbb17e684" translate="yes" xml:space="preserve">
          <source>Added the &quot;case_sensitive_like&quot; pragma and the SQLITE_CASE_SENSITIVE_LIKE compile-time option to set its default value to &quot;on&quot;.</source>
          <target state="translated">添加了 &quot;case_sensitive_like &quot;pragma和SQLITE_CASE_SENSITIVE_LIKE编译时选项,将其默认值设置为 &quot;on&quot;。</target>
        </trans-unit>
        <trans-unit id="eb193ea8cf898f73b58007ba9543b807b3854870" translate="yes" xml:space="preserve">
          <source>Added the &quot;percentile()&quot; function as a &lt;a href=&quot;loadext&quot;&gt;loadable extension&lt;/a&gt; in the ext/misc subdirectory of the source tree.</source>
          <target state="translated">在源树的ext / misc子目录中添加了&amp;ldquo; percentile（）&amp;rdquo;函数作为&lt;a href=&quot;loadext&quot;&gt;可加载扩展&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5611b9f6138afb0064fc4e62d5516726fcbf742e" translate="yes" xml:space="preserve">
          <source>Added the &quot;transaction&quot; method to the Tcl interface</source>
          <target state="translated">在Tcl接口中添加了 &quot;事务 &quot;方法。</target>
        </trans-unit>
        <trans-unit id="1bef58aa7bf5fa4ae3d0cfd6f4672ac479bf0763" translate="yes" xml:space="preserve">
          <source>Added the &quot;unix-excl&quot; built-in VFS on unix and unix-like platforms.</source>
          <target state="translated">在unix和类unix平台上添加了 &quot;unix-excl &quot;内置VFS。</target>
        </trans-unit>
        <trans-unit id="fd67f2b6106389654227f8b92e474aef42afe028" translate="yes" xml:space="preserve">
          <source>Added the &quot;win32-none&quot; VFS, analogous to the &quot;unix-none&quot; VFS, that works like the default &quot;win32&quot; VFS except that it ignores all file locks.</source>
          <target state="translated">增加了 &quot;win32-none &quot;VFS,类似于 &quot;unix-none &quot;VFS,它的工作原理和默认的 &quot;win32 &quot;VFS一样,只是它忽略了所有的文件锁。</target>
        </trans-unit>
        <trans-unit id="badfd05b3b5c28b37d6844c2c9da5b634785d36b" translate="yes" xml:space="preserve">
          <source>Added the --append option to the &quot;.backup&quot; command.</source>
          <target state="translated">在&quot;.backup &quot;命令中增加了--附加选项。</target>
        </trans-unit>
        <trans-unit id="46228df7212ca1bca7bba47d433ba46ed3b8c9d9" translate="yes" xml:space="preserve">
          <source>Added the --enable-editline and --enable-static-shell options to the various autoconf-generated configure scripts.</source>
          <target state="translated">为各种autoconf生成的配置脚本添加了--enable-editline和--enable-static-shell选项。</target>
        </trans-unit>
        <trans-unit id="40bfc9f24ea3e7bc19fd8e19fb2ea5316c41113c" translate="yes" xml:space="preserve">
          <source>Added the --new option to the &quot;.open&quot; dot-command, causing any prior content in the database to be purged prior to opening.</source>
          <target state="translated">为&quot;.open &quot;点命令添加了--新选项,使数据库中的任何先前内容在打开前被清除。</target>
        </trans-unit>
        <trans-unit id="81357ec8491f09345a24f216b4bdaa929b52d8da" translate="yes" xml:space="preserve">
          <source>Added the --nosys option to the &lt;a href=&quot;cli#dschema&quot;&gt;.schema&lt;/a&gt; dot-command.</source>
          <target state="translated">在&lt;a href=&quot;cli#dschema&quot;&gt;.schema&lt;/a&gt;点命令中添加了--nosys选项。</target>
        </trans-unit>
        <trans-unit id="ff9782249149f72cb75c3af08acd24d465dff8d5" translate="yes" xml:space="preserve">
          <source>Added the --tabs command-line option that sets &lt;a href=&quot;cli#dotmode&quot;&gt;.mode tabs&lt;/a&gt;.</source>
          <target state="translated">添加了--tabs命令行选项，该选项可设置.mode &lt;a href=&quot;cli#dotmode&quot;&gt;tabs&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="98f31449b9f6901e8d5bc307f552648c8c9f60ad" translate="yes" xml:space="preserve">
          <source>Added the -A command-line option to the &lt;a href=&quot;cli&quot;&gt;CLI&lt;/a&gt; to make it easier to manage &lt;a href=&quot;sqlar&quot;&gt;SQLite Archive files&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;cli&quot;&gt;CLI中&lt;/a&gt;添加了-A命令行选项，以使其更易于管理&lt;a href=&quot;sqlar&quot;&gt;SQLite Archive文件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3ab6c1327f76f890e520a0110e775c0d686745d7" translate="yes" xml:space="preserve">
          <source>Added the -D&lt;a href=&quot;compile#max_memory&quot;&gt;SQLITE_MAX_MEMORY&lt;/a&gt;=</source>
          <target state="translated">添加了-D &lt;a href=&quot;compile#max_memory&quot;&gt;SQLITE_MAX_MEMORY&lt;/a&gt; =</target>
        </trans-unit>
        <trans-unit id="5367ce2c93bb38a095b36e1fed991b9fb4d889ac" translate="yes" xml:space="preserve">
          <source>Added the -returntype option to the &lt;a href=&quot;tclsqlite#function&quot;&gt;function method&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;tclsqlite#function&quot;&gt;函数方法中&lt;/a&gt;添加了-returntype选项。</target>
        </trans-unit>
        <trans-unit id="e93bb7d2fcd01a6f436bdc9a5880040e6f97639d" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;bytecodevtab&quot;&gt;bytecode virtual table&lt;/a&gt;.</source>
          <target state="translated">添加了&lt;a href=&quot;bytecodevtab&quot;&gt;字节码虚拟表&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0c8fe56b695cf00317baad779130870ca95a81df" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/backup_finish#sqlite3backupinit&quot;&gt;hot-backup interface&lt;/a&gt;.</source>
          <target state="translated">添加了&lt;a href=&quot;c3ref/backup_finish#sqlite3backupinit&quot;&gt;热备份界面&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b9a89f10c162ecc008c3e13971bca30f64a17a50" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/bind_blob&quot;&gt;sqlite3_bind_zeroblob()&lt;/a&gt; API and the &lt;a href=&quot;lang_expr#zeroblob&quot;&gt;zeroblob()&lt;/a&gt; SQL function.</source>
          <target state="translated">添加了&lt;a href=&quot;c3ref/bind_blob&quot;&gt;sqlite3_bind_zeroblob（）&lt;/a&gt; API和&lt;a href=&quot;lang_expr#zeroblob&quot;&gt;zeroblob（）&lt;/a&gt; SQL函数。</target>
        </trans-unit>
        <trans-unit id="77121aeb8c2408e6e7a1a0e10e0b563a3977d08d" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/blob_reopen&quot;&gt;sqlite3_blob_reopen()&lt;/a&gt; interface to allow an existing &lt;a href=&quot;c3ref/blob&quot;&gt;sqlite3_blob&lt;/a&gt; object to be rebound to a new row.</source>
          <target state="translated">添加了&lt;a href=&quot;c3ref/blob_reopen&quot;&gt;sqlite3_blob_reopen（）&lt;/a&gt;接口，以允许将现有的&lt;a href=&quot;c3ref/blob&quot;&gt;sqlite3_blob&lt;/a&gt;对象反弹到新行。</target>
        </trans-unit>
        <trans-unit id="55608cf2764566ce89f4e1034e4a2042979d3f0d" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/c_checkpoint_full&quot;&gt;SQLITE_CHECKPOINT_TRUNCATE&lt;/a&gt; option to the &lt;a href=&quot;c3ref/wal_checkpoint_v2&quot;&gt;sqlite3_wal_checkpoint_v2()&lt;/a&gt; interface, with corresponding enhancements to &lt;a href=&quot;pragma#pragma_wal_checkpoint&quot;&gt;PRAGMA wal_checkpoint&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;c3ref/wal_checkpoint_v2&quot;&gt;sqlite3_wal_checkpoint_v2（）&lt;/a&gt;接口中添加了&lt;a href=&quot;c3ref/c_checkpoint_full&quot;&gt;SQLITE_CHECKPOINT_TRUNCATE&lt;/a&gt;选项，并对&lt;a href=&quot;pragma#pragma_wal_checkpoint&quot;&gt;PRAGMA wal_checkpoint进行&lt;/a&gt;了相应的增强。</target>
        </trans-unit>
        <trans-unit id="24795c7f167ca4977e5c234dc2cbe0a63579121e" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/c_config_covering_index_scan#sqliteconfiglookaside&quot;&gt;SQLITE_CONFIG_LOOKASIDE&lt;/a&gt; verb to &lt;a href=&quot;c3ref/config&quot;&gt;sqlite3_config()&lt;/a&gt; to control the default lookaside configuration.</source>
          <target state="translated">在&lt;a href=&quot;c3ref/config&quot;&gt;sqlite3_config（）中&lt;/a&gt;添加了&lt;a href=&quot;c3ref/c_config_covering_index_scan#sqliteconfiglookaside&quot;&gt;SQLITE_CONFIG_LOOKASIDE&lt;/a&gt;动词，以控制默认的后备配置。</target>
        </trans-unit>
        <trans-unit id="5cb84f5843071fd6a0d0c50960687d9f19b751bd" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/c_config_covering_index_scan#sqliteconfigpcachehdrsz&quot;&gt;SQLITE_CONFIG_PCACHE_HDRSZ&lt;/a&gt; option to &lt;a href=&quot;c3ref/config&quot;&gt;sqlite3_config()&lt;/a&gt; which makes it easier for applications to determine the appropriate amount of memory for use with &lt;a href=&quot;c3ref/c_config_covering_index_scan#sqliteconfigpagecache&quot;&gt;SQLITE_CONFIG_PAGECACHE&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;c3ref/config&quot;&gt;sqlite3_config（）中&lt;/a&gt;添加了&lt;a href=&quot;c3ref/c_config_covering_index_scan#sqliteconfigpcachehdrsz&quot;&gt;SQLITE_CONFIG_PCACHE_HDRSZ&lt;/a&gt;选项，这使应用程序更容易确定与&lt;a href=&quot;c3ref/c_config_covering_index_scan#sqliteconfigpagecache&quot;&gt;SQLITE_CONFIG_PAGECACHE&lt;/a&gt;一起使用的适当内存量。</target>
        </trans-unit>
        <trans-unit id="78ab457ef12e647bf4dc7ecead1c36d5c4673d12" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfigdefensive&quot;&gt;SQLITE_DBCONFIG_DEFENSIVE&lt;/a&gt; option which disables the ability to create corrupt database files using ordinary SQL.</source>
          <target state="translated">添加了&lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfigdefensive&quot;&gt;SQLITE_DBCONFIG_DEFENSIVE&lt;/a&gt;选项，该选项禁用了使用普通SQL创建损坏的数据库文件的功能。</target>
        </trans-unit>
        <trans-unit id="6e71c54907adbe78a8a28fd46aaebb36d69493c1" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfigdqsdml&quot;&gt;SQLITE_DBCONFIG_DQS_DML&lt;/a&gt; and &lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfigdqsddl&quot;&gt;SQLITE_DBCONFIG_DQS_DDL&lt;/a&gt; actions to &lt;a href=&quot;c3ref/db_config&quot;&gt;sqlite3_db_config()&lt;/a&gt; for activating and deactivating the &lt;a href=&quot;quirks#dblquote&quot;&gt;double-quoted string literal&lt;/a&gt; misfeature. Both default to &quot;on&quot; for legacy compatibility, but developers are encouraged to turn them &quot;off&quot;, perhaps using the &lt;a href=&quot;compile#dqs&quot;&gt;-DSQLITE_DQS=0&lt;/a&gt; compile-time option.</source>
          <target state="translated">在&lt;a href=&quot;c3ref/db_config&quot;&gt;sqlite3_db_config（）中&lt;/a&gt;添加了&lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfigdqsdml&quot;&gt;SQLITE_DBCONFIG_DQS_DML&lt;/a&gt;和&lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfigdqsddl&quot;&gt;SQLITE_DBCONFIG_DQS_DDL&lt;/a&gt;操作，以激活和禁用&lt;a href=&quot;quirks#dblquote&quot;&gt;双引号字符串文字&lt;/a&gt;错误功能。为了保持原有兼容性，两者都默认设置为&amp;ldquo; on&amp;rdquo;，但是鼓励开发人员将其&amp;ldquo; off&amp;rdquo;（也许使用&lt;a href=&quot;compile#dqs&quot;&gt;-DSQLITE_DQS = 0&lt;/a&gt;编译时选项）。</target>
        </trans-unit>
        <trans-unit id="d7ad0ef8ac2497ed1aa5f01e1b664e81567669d2" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfigenablefts3tokenizer&quot;&gt;SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER&lt;/a&gt; option to &lt;a href=&quot;c3ref/db_config&quot;&gt;sqlite3_db_config()&lt;/a&gt; which allows the two-argument version of the &lt;a href=&quot;fts3#f3tknzr&quot;&gt;fts3_tokenizer()&lt;/a&gt; SQL function to be enabled or disabled at run-time.</source>
          <target state="translated">在&lt;a href=&quot;c3ref/db_config&quot;&gt;sqlite3_db_config（）中&lt;/a&gt;添加了&lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfigenablefts3tokenizer&quot;&gt;SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER&lt;/a&gt;选项，该选项允许在运行时启用或禁用&lt;a href=&quot;fts3#f3tknzr&quot;&gt;fts3_tokenizer（）&lt;/a&gt; SQL函数的两个参数版本。</target>
        </trans-unit>
        <trans-unit id="d6416a3ba6c9f666e4baee452d3cb91764a92165" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfignockptonclose&quot;&gt;SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE&lt;/a&gt; option to &lt;a href=&quot;c3ref/db_config&quot;&gt;sqlite3_db_config()&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;c3ref/db_config&quot;&gt;sqlite3_db_config（）中&lt;/a&gt;添加了&lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfignockptonclose&quot;&gt;SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE&lt;/a&gt;选项。</target>
        </trans-unit>
        <trans-unit id="692b08dd48ff9799615b16dfbc27375f3082dcfb" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfigresetdatabase&quot;&gt;SQLITE_DBCONFIG_RESET_DATABASE&lt;/a&gt; option to the &lt;a href=&quot;c3ref/db_config&quot;&gt;sqlite3_db_config()&lt;/a&gt; API.</source>
          <target state="translated">在&lt;a href=&quot;c3ref/db_config&quot;&gt;sqlite3_db_config（）&lt;/a&gt; API中添加了&lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfigresetdatabase&quot;&gt;SQLITE_DBCONFIG_RESET_DATABASE&lt;/a&gt;选项。</target>
        </trans-unit>
        <trans-unit id="c327f817896429826daa4e2c7ed4c07b63ba0c6d" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfigtrustedschema&quot;&gt;SQLITE_DBCONFIG_TRUSTED_SCHEMA&lt;/a&gt; connection setting which is also controllable via the new &lt;a href=&quot;pragma#pragma_trusted_schema&quot;&gt;trusted_schema pragma&lt;/a&gt; and at compile-time using the &lt;a href=&quot;compile#trusted_schema&quot;&gt;-DSQLITE_TRUSTED_SCHEMA&lt;/a&gt; compile-time option.</source>
          <target state="translated">添加了&lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfigtrustedschema&quot;&gt;SQLITE_DBCONFIG_TRUSTED_SCHEMA&lt;/a&gt;连接设置，该设置也可以通过新的&lt;a href=&quot;compile#trusted_schema&quot;&gt;trust_schema&lt;/a&gt;编译&lt;a href=&quot;pragma#pragma_trusted_schema&quot;&gt;指示&lt;/a&gt;以及在编译时使用-DSQLITE_TRUSTED_SCHEMA编译时选项进行控制。</target>
        </trans-unit>
        <trans-unit id="a6daec8b1f14932a0265d49a93345e89fdffd9a4" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfigwritableschema&quot;&gt;SQLITE_DBCONFIG_WRITABLE_SCHEMA&lt;/a&gt; verb for the &lt;a href=&quot;c3ref/db_config&quot;&gt;sqlite3_db_config()&lt;/a&gt; interface, that does the same work as &lt;a href=&quot;pragma#pragma_writable_schema&quot;&gt;PRAGMA writable_schema&lt;/a&gt; without using the SQL parser.</source>
          <target state="translated">为&lt;a href=&quot;c3ref/db_config&quot;&gt;sqlite3_db_config（）&lt;/a&gt;接口添加了&lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfigwritableschema&quot;&gt;SQLITE_DBCONFIG_WRITABLE_SCHEMA&lt;/a&gt;动词，该动词与&lt;a href=&quot;pragma#pragma_writable_schema&quot;&gt;PRAGMA writable_schema&lt;/a&gt;的作用相同，而无需使用SQL解析器。</target>
        </trans-unit>
        <trans-unit id="5d750e0c7bb7bb7bec2d0c2a829768642cb54851" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/c_dbstatus_options#sqlitedbstatuscachespill&quot;&gt;SQLITE_DBSTATUS_CACHE_SPILL&lt;/a&gt; option to &lt;a href=&quot;c3ref/db_status&quot;&gt;sqlite3_db_status()&lt;/a&gt; for reporting the number of cache spills that have occurred.</source>
          <target state="translated">在&lt;a href=&quot;c3ref/db_status&quot;&gt;sqlite3_db_status（）中&lt;/a&gt;添加了&lt;a href=&quot;c3ref/c_dbstatus_options#sqlitedbstatuscachespill&quot;&gt;SQLITE_DBSTATUS_CACHE_SPILL&lt;/a&gt;选项，以报告已发生的高速缓存溢出数量。</target>
        </trans-unit>
        <trans-unit id="53f2be88cd88e0e32064f44c1119c7bd8eba616a" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/c_dbstatus_options#sqlitedbstatuscacheusedshared&quot;&gt;SQLITE_DBSTATUS_CACHE_USED_SHARED&lt;/a&gt; option to &lt;a href=&quot;c3ref/db_status&quot;&gt;sqlite3_db_status()&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;c3ref/db_status&quot;&gt;sqlite3_db_status（）中&lt;/a&gt;添加了&lt;a href=&quot;c3ref/c_dbstatus_options#sqlitedbstatuscacheusedshared&quot;&gt;SQLITE_DBSTATUS_CACHE_USED_SHARED&lt;/a&gt;选项。</target>
        </trans-unit>
        <trans-unit id="d572c740f2c606b38c1537872052780a90a1967b" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/c_dbstatus_options#sqlitedbstatuslookasidehit&quot;&gt;SQLITE_DBSTATUS_LOOKASIDE_HIT&lt;/a&gt;, &lt;a href=&quot;c3ref/c_dbstatus_options#sqlitedbstatuslookasidemisssize&quot;&gt;SQLITE_DBSTATUS_LOOKASIDE_MISS_SIZE&lt;/a&gt;, and &lt;a href=&quot;c3ref/c_dbstatus_options#sqlitedbstatuslookasidemissfull&quot;&gt;SQLITE_DBSTATUS_LOOKASIDE_MISS_FULL&lt;/a&gt; options for the &lt;a href=&quot;c3ref/db_status&quot;&gt;sqlite3_db_status()&lt;/a&gt; interface.</source>
          <target state="translated">为&lt;a href=&quot;c3ref/db_status&quot;&gt;sqlite3_db_status（）&lt;/a&gt;接口添加了&lt;a href=&quot;c3ref/c_dbstatus_options#sqlitedbstatuslookasidehit&quot;&gt;SQLITE_DBSTATUS_LOOKASIDE_HIT&lt;/a&gt;，&lt;a href=&quot;c3ref/c_dbstatus_options#sqlitedbstatuslookasidemisssize&quot;&gt;SQLITE_DBSTATUS_LOOKASIDE_MISS_SIZE&lt;/a&gt;和&lt;a href=&quot;c3ref/c_dbstatus_options#sqlitedbstatuslookasidemissfull&quot;&gt;SQLITE_DBSTATUS_LOOKASIDE_MISS_FULL&lt;/a&gt;选项。</target>
        </trans-unit>
        <trans-unit id="8ff540364583dcc44fa1ef2c4aadebbebd6864c4" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/c_deterministic&quot;&gt;SQLITE_DIRECTONLY&lt;/a&gt; flag for &lt;a href=&quot;c3ref/create_function&quot;&gt;application-defined SQL functions&lt;/a&gt; to prevent those functions from being used inside triggers and views.</source>
          <target state="translated">为&lt;a href=&quot;c3ref/create_function&quot;&gt;应用程序定义的SQL函数&lt;/a&gt;添加了&lt;a href=&quot;c3ref/c_deterministic&quot;&gt;SQLITE_DIRECTONLY&lt;/a&gt;标志，以防止在触发器和视图中使用这些函数。</target>
        </trans-unit>
        <trans-unit id="f7600d6d8a603816feb6b034aac51cea89c66055" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/c_deterministic#sqlitedirectonly&quot;&gt;SQLITE_DIRECTONLY&lt;/a&gt; flag for &lt;a href=&quot;appfunc&quot;&gt;application-defined SQL functions&lt;/a&gt; to prevent those functions from being used inside triggers and views.</source>
          <target state="translated">为&lt;a href=&quot;appfunc&quot;&gt;应用程序定义的SQL函数&lt;/a&gt;添加了&lt;a href=&quot;c3ref/c_deterministic#sqlitedirectonly&quot;&gt;SQLITE_DIRECTONLY&lt;/a&gt;标志，以防止在触发器和视图中使用这些函数。</target>
        </trans-unit>
        <trans-unit id="1edde08f9646ef2c3e76ad318411c8fb6e51b64f" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/c_fcntl_begin_atomic_write#sqlitefcntlbusyhandler&quot;&gt;SQLITE_FCNTL_BUSYHANDLER&lt;/a&gt; file control, used to allow VFS implementations to get access to the busy handler callback.</source>
          <target state="translated">添加了&lt;a href=&quot;c3ref/c_fcntl_begin_atomic_write#sqlitefcntlbusyhandler&quot;&gt;SQLITE_FCNTL_BUSYHANDLER&lt;/a&gt;文件控件，该文件控件用于允许VFS实现访问繁忙的处理程序回调。</target>
        </trans-unit>
        <trans-unit id="c39ae96ebc2e88dd6b2cd7e2fc1b875ebe3e289c" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/c_fcntl_begin_atomic_write#sqlitefcntlchunksize&quot;&gt;SQLITE_FCNTL_CHUNK_SIZE&lt;/a&gt; verb to the &lt;a href=&quot;c3ref/file_control&quot;&gt;sqlite3_file_control()&lt;/a&gt; interface for both unix and windows, to cause database files to grow in large chunks in order to reduce disk fragmentation.</source>
          <target state="translated">为unix和windows 的&lt;a href=&quot;c3ref/file_control&quot;&gt;sqlite3_file_control（）&lt;/a&gt;接口添加了&lt;a href=&quot;c3ref/c_fcntl_begin_atomic_write#sqlitefcntlchunksize&quot;&gt;SQLITE_FCNTL_CHUNK_SIZE&lt;/a&gt;动词，以使数据库文件大块增长，以减少磁盘碎片。</target>
        </trans-unit>
        <trans-unit id="fe950f2e1aef661f6ce9192c747caf6f073c554c" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/c_fcntl_begin_atomic_write#sqlitefcntldataversion&quot;&gt;SQLITE_FCNTL_DATA_VERSION&lt;/a&gt; file-control.</source>
          <target state="translated">添加了&lt;a href=&quot;c3ref/c_fcntl_begin_atomic_write#sqlitefcntldataversion&quot;&gt;SQLITE_FCNTL_DATA_VERSION&lt;/a&gt;文件控件。</target>
        </trans-unit>
        <trans-unit id="c419db6b4698987a8e91b919db8b97ecb28f7972" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/c_fcntl_begin_atomic_write#sqlitefcntlfilepointer&quot;&gt;SQLITE_FCNTL_FILE_POINTER&lt;/a&gt; option to &lt;a href=&quot;c3ref/file_control&quot;&gt;sqlite3_file_control()&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;c3ref/file_control&quot;&gt;sqlite3_file_control（）中&lt;/a&gt;添加了&lt;a href=&quot;c3ref/c_fcntl_begin_atomic_write#sqlitefcntlfilepointer&quot;&gt;SQLITE_FCNTL_FILE_POINTER&lt;/a&gt;选项。</target>
        </trans-unit>
        <trans-unit id="acf39bdbea0f8885f79a39d332adbbca1cd2395f" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/c_fcntl_begin_atomic_write#sqlitefcntloverwrite&quot;&gt;SQLITE_FCNTL_OVERWRITE&lt;/a&gt; file-control by which the SQLite core indicates to the VFS that the current transaction will overwrite the entire database file.</source>
          <target state="translated">添加了&lt;a href=&quot;c3ref/c_fcntl_begin_atomic_write#sqlitefcntloverwrite&quot;&gt;SQLITE_FCNTL_OVERWRITE&lt;/a&gt;文件控件，SQLite内核通过该文件控件向VFS指示当前事务将覆盖整个数据库文件。</target>
        </trans-unit>
        <trans-unit id="872bfec9dc1a2fcffd8687a9f2be6d01ed62715c" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/c_fcntl_begin_atomic_write#sqlitefcntlpragma&quot;&gt;SQLITE_FCNTL_PRAGMA&lt;/a&gt; file control, giving &lt;a href=&quot;vfs&quot;&gt;VFS&lt;/a&gt; implementations the ability to add new &lt;a href=&quot;pragma#syntax&quot;&gt;PRAGMA&lt;/a&gt; statements or to override built-in PRAGMAs.</source>
          <target state="translated">添加了&lt;a href=&quot;c3ref/c_fcntl_begin_atomic_write#sqlitefcntlpragma&quot;&gt;SQLITE_FCNTL_PRAGMA&lt;/a&gt;文件控件，使&lt;a href=&quot;vfs&quot;&gt;VFS&lt;/a&gt;实现能够添加新的&lt;a href=&quot;pragma#syntax&quot;&gt;PRAGMA&lt;/a&gt;语句或覆盖内置PRAGMA。</target>
        </trans-unit>
        <trans-unit id="8a08888203226d0cb933e2381c131bd134f3e0ba" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/c_fcntl_begin_atomic_write#sqlitefcntlwin32gethandle&quot;&gt;SQLITE_FCNTL_WIN32_GET_HANDLE&lt;/a&gt; file control opcode.</source>
          <target state="translated">添加了&lt;a href=&quot;c3ref/c_fcntl_begin_atomic_write#sqlitefcntlwin32gethandle&quot;&gt;SQLITE_FCNTL_WIN32_GET_HANDLE&lt;/a&gt;文件控件操作码。</target>
        </trans-unit>
        <trans-unit id="2fe9d20a7ecb27f21ed97321987de71e7453d365" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/c_iocap_atomic&quot;&gt;SQLITE_IOCAP_IMMUTABLE&lt;/a&gt; bit to the set of bits that can be returned by the xDeviceCharacteristics method of a &lt;a href=&quot;vfs&quot;&gt;VFS&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;vfs&quot;&gt;VFS&lt;/a&gt;的xDeviceCharacteristics方法可以返回的位集中添加了&lt;a href=&quot;c3ref/c_iocap_atomic&quot;&gt;SQLITE_IOCAP_IMMUTABLE&lt;/a&gt;位。</target>
        </trans-unit>
        <trans-unit id="7f843fb220ff24f90a61313273ce94ebe78eaef3" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/c_limit_attached#sqlitelimitworkerthreads&quot;&gt;SQLITE_LIMIT_WORKER_THREADS&lt;/a&gt; option to &lt;a href=&quot;c3ref/limit&quot;&gt;sqlite3_limit()&lt;/a&gt; and &lt;a href=&quot;pragma#pragma_threads&quot;&gt;PRAGMA threads&lt;/a&gt; command for configuring the number of available worker threads.</source>
          <target state="translated">增加了&lt;a href=&quot;c3ref/c_limit_attached#sqlitelimitworkerthreads&quot;&gt;SQLITE_LIMIT_WORKER_THREADS&lt;/a&gt;选项&lt;a href=&quot;c3ref/limit&quot;&gt;sqlite3_limit（）&lt;/a&gt;和&lt;a href=&quot;pragma#pragma_threads&quot;&gt;PRAGMA线程&lt;/a&gt;配置可用的工作线程数命令。</target>
        </trans-unit>
        <trans-unit id="c8e1dea17a78ee539422e7da11345abec026d26c" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/c_mutex_fast&quot;&gt;SQLITE_MUTEX_STATIC_VFS1&lt;/a&gt; static mutex and use it in the Windows &lt;a href=&quot;vfs&quot;&gt;VFS&lt;/a&gt;.</source>
          <target state="translated">添加了&lt;a href=&quot;c3ref/c_mutex_fast&quot;&gt;SQLITE_MUTEX_STATIC_VFS1&lt;/a&gt;静态互斥体，并在Windows &lt;a href=&quot;vfs&quot;&gt;VFS中&lt;/a&gt;使用了它。</target>
        </trans-unit>
        <trans-unit id="c9f5d53ac1d13ed7fd23ea322e4248752246fa8d" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/c_open_autoproxy&quot;&gt;SQLITE_OPEN_SHAREDCACHE&lt;/a&gt; and &lt;a href=&quot;c3ref/c_open_autoproxy&quot;&gt;SQLITE_OPEN_PRIVATECACHE&lt;/a&gt; flags for &lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open_v2()&lt;/a&gt; used to override the global &lt;a href=&quot;sharedcache&quot;&gt;shared cache mode&lt;/a&gt; settings for individual database connections.</source>
          <target state="translated">为&lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open_v2（）&lt;/a&gt;添加了&lt;a href=&quot;c3ref/c_open_autoproxy&quot;&gt;SQLITE_OPEN_SHAREDCACHE&lt;/a&gt;和&lt;a href=&quot;c3ref/c_open_autoproxy&quot;&gt;SQLITE_OPEN_PRIVATECACHE&lt;/a&gt;标志，这些标志用于覆盖单个数据库连接的全局&lt;a href=&quot;sharedcache&quot;&gt;共享缓存模式&lt;/a&gt;设置。</target>
        </trans-unit>
        <trans-unit id="ee6f319a0408b5352c4ea820f41707cd9f47de22" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/c_prepare_normalize#sqlitepreparenovtab&quot;&gt;SQLITE_PREPARE_NO_VTAB&lt;/a&gt; option to &lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare_v3()&lt;/a&gt;. Use that option to prevent circular references to &lt;a href=&quot;vtab#xshadowname&quot;&gt;shadow tables&lt;/a&gt; from causing resource leaks.</source>
          <target state="translated">在&lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare_v3（）中&lt;/a&gt;添加了&lt;a href=&quot;c3ref/c_prepare_normalize#sqlitepreparenovtab&quot;&gt;SQLITE_PREPARE_NO_VTAB&lt;/a&gt;选项。使用该选项可以防止对&lt;a href=&quot;vtab#xshadowname&quot;&gt;影子表的&lt;/a&gt;循环引用导致资源泄漏。</target>
        </trans-unit>
        <trans-unit id="98b481e9d7f3d70cd2eecd21d70129ae31ed1963" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/c_stmtstatus_counter#sqlitestmtstatusvmstep&quot;&gt;SQLITE_STMTSTATUS_VM_STEP&lt;/a&gt; option to &lt;a href=&quot;c3ref/stmt_status&quot;&gt;sqlite3_stmt_status()&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;c3ref/stmt_status&quot;&gt;sqlite3_stmt_status（）中&lt;/a&gt;添加了&lt;a href=&quot;c3ref/c_stmtstatus_counter#sqlitestmtstatusvmstep&quot;&gt;SQLITE_STMTSTATUS_VM_STEP&lt;/a&gt;选项。</target>
        </trans-unit>
        <trans-unit id="173e2525ec3884e959b6bd821ed96525c786e2b2" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/c_testctrl_always&quot;&gt;SQLITE_TESTCTRL_BYTEORDER&lt;/a&gt; test control.</source>
          <target state="translated">添加了&lt;a href=&quot;c3ref/c_testctrl_always&quot;&gt;SQLITE_TESTCTRL_BYTEORDER&lt;/a&gt;测试控件。</target>
        </trans-unit>
        <trans-unit id="3d008e63c41f50a70b14a41ab55032164f43f128" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/c_testctrl_always&quot;&gt;SQLITE_TESTCTRL_EXPLAIN_STMT&lt;/a&gt; test-control option with the &lt;a href=&quot;compile#enable_tree_explain&quot;&gt;SQLITE_ENABLE_TREE_EXPLAIN&lt;/a&gt; compile-time option to enable the &lt;a href=&quot;cli&quot;&gt;command-line shell&lt;/a&gt; to display ASCII-art parse trees of SQL statements that it processes, for debugging and analysis.</source>
          <target state="translated">在&lt;a href=&quot;compile#enable_tree_explain&quot;&gt;SQLITE_ENABLE_TREE_EXPLAIN&lt;/a&gt;编译时选项中添加了&lt;a href=&quot;c3ref/c_testctrl_always&quot;&gt;SQLITE_TESTCTRL_EXPLAIN_STMT&lt;/a&gt;测试控制选项，以使&lt;a href=&quot;cli&quot;&gt;命令行外壳程序&lt;/a&gt;能够显示其处理的SQL语句的ASCII语法分析树，以进行调试和分析。</target>
        </trans-unit>
        <trans-unit id="6d895d26ed7e55d69a402b7a4c87a8b6ef2550de" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/close&quot;&gt;sqlite3_close_v2()&lt;/a&gt; interface.</source>
          <target state="translated">添加了&lt;a href=&quot;c3ref/close&quot;&gt;sqlite3_close_v2（）&lt;/a&gt;接口。</target>
        </trans-unit>
        <trans-unit id="bfc2c5299cf593550d927e4ff94e7186fd8be0ca" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/compileoption_get&quot;&gt;sqlite3_compileoption_used()&lt;/a&gt; and &lt;a href=&quot;c3ref/compileoption_get&quot;&gt;sqlite3_compileoption_get()&lt;/a&gt; interfaces as well as the &lt;a href=&quot;pragma#pragma_compile_options&quot;&gt;compile_options pragma&lt;/a&gt; and the &lt;a href=&quot;lang_corefunc#sqlite_compileoption_used&quot;&gt;sqlite_compileoption_used()&lt;/a&gt; and &lt;a href=&quot;lang_corefunc#sqlite_compileoption_get&quot;&gt;sqlite_compileoption_get()&lt;/a&gt; SQL functions.</source>
          <target state="translated">添加了&lt;a href=&quot;c3ref/compileoption_get&quot;&gt;sqlite3_compileoption_used（）&lt;/a&gt;和&lt;a href=&quot;c3ref/compileoption_get&quot;&gt;sqlite3_compileoption_get（）&lt;/a&gt;接口以及&lt;a href=&quot;pragma#pragma_compile_options&quot;&gt;compile_options编译指示&lt;/a&gt;和&lt;a href=&quot;lang_corefunc#sqlite_compileoption_used&quot;&gt;sqlite_compileoption_used（）&lt;/a&gt;和&lt;a href=&quot;lang_corefunc#sqlite_compileoption_get&quot;&gt;sqlite_compileoption_get（）&lt;/a&gt; SQL函数。</target>
        </trans-unit>
        <trans-unit id="9fb684d2d6c2147c74c80743a4ba8731d23977f3" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/config&quot;&gt;sqlite3_config()&lt;/a&gt; interface for doing run-time configuration of the entire SQLite library.</source>
          <target state="translated">添加了&lt;a href=&quot;c3ref/config&quot;&gt;sqlite3_config（）&lt;/a&gt;接口，用于对整个SQLite库进行运行时配置。</target>
        </trans-unit>
        <trans-unit id="ec41ecd622afa734ab8f9b12f590344b751a2786" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/create_filename&quot;&gt;sqlite3_create_filename()&lt;/a&gt;, &lt;a href=&quot;c3ref/create_filename&quot;&gt;sqlite3_free_filename()&lt;/a&gt;, and &lt;a href=&quot;c3ref/database_file_object&quot;&gt;sqlite3_database_file_object()&lt;/a&gt; interfaces to better support of &lt;a href=&quot;vfs#shim&quot;&gt;VFS shim&lt;/a&gt; implementations.</source>
          <target state="translated">添加了&lt;a href=&quot;c3ref/create_filename&quot;&gt;sqlite3_create_filename（）&lt;/a&gt;，&lt;a href=&quot;c3ref/create_filename&quot;&gt;sqlite3_free_filename（）&lt;/a&gt;和&lt;a href=&quot;c3ref/database_file_object&quot;&gt;sqlite3_database_file_object（）&lt;/a&gt;接口，以更好地支持&lt;a href=&quot;vfs#shim&quot;&gt;VFS填充程序&lt;/a&gt;实现。</target>
        </trans-unit>
        <trans-unit id="ed3d70e2882ec52d0c7e2a7601fe732995c7a8e5" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/create_function&quot;&gt;sqlite3_create_function_v2()&lt;/a&gt; interface that includes a destructor callback.</source>
          <target state="translated">添加了&lt;a href=&quot;c3ref/create_function&quot;&gt;sqlite3_create_function_v2（）&lt;/a&gt;接口，该接口包含析构函数回调。</target>
        </trans-unit>
        <trans-unit id="32fc735cb1d9ab9a07f352a1fc25b9ea800e944b" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/db_cacheflush&quot;&gt;sqlite3_db_cacheflush()&lt;/a&gt; interface.</source>
          <target state="translated">添加了&lt;a href=&quot;c3ref/db_cacheflush&quot;&gt;sqlite3_db_cacheflush（）&lt;/a&gt;接口。</target>
        </trans-unit>
        <trans-unit id="44cee0699cbf54959614bd6a182f20329176bd39" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/db_config&quot;&gt;sqlite3_db_config()&lt;/a&gt; and &lt;a href=&quot;c3ref/db_status&quot;&gt;sqlite3_db_status()&lt;/a&gt; interfaces for controlling and monitoring the lookaside allocator separately on each &lt;a href=&quot;c3ref/sqlite3&quot;&gt;database connection&lt;/a&gt;.</source>
          <target state="translated">添加了&lt;a href=&quot;c3ref/db_config&quot;&gt;sqlite3_db_config（）&lt;/a&gt;和&lt;a href=&quot;c3ref/db_status&quot;&gt;sqlite3_db_status（）&lt;/a&gt;接口，用于分别控制和监视每个&lt;a href=&quot;c3ref/sqlite3&quot;&gt;数据库连接&lt;/a&gt;上的后备分配器。</target>
        </trans-unit>
        <trans-unit id="c14a9e833df50e1b6ce64060f4e3b591d691bb2f" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/db_config&quot;&gt;sqlite3_db_config&lt;/a&gt;(db,&lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfigenableloadextension&quot;&gt;SQLITE_DBCONFIG_ENABLE_LOAD_EXTENSION&lt;/a&gt;) interface which allows the &lt;a href=&quot;c3ref/load_extension&quot;&gt;sqlite3_load_extension()&lt;/a&gt; C-API to be enabled while keeping the &lt;a href=&quot;lang_corefunc#load_extension&quot;&gt;load_extension()&lt;/a&gt; SQL function disabled for security.</source>
          <target state="translated">添加了&lt;a href=&quot;c3ref/db_config&quot;&gt;sqlite3_db_config&lt;/a&gt;（db，&lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfigenableloadextension&quot;&gt;SQLITE_DBCONFIG_ENABLE_LOAD_EXTENSION&lt;/a&gt;）接口，该接口允许启用&lt;a href=&quot;c3ref/load_extension&quot;&gt;sqlite3_load_extension（）&lt;/a&gt; C-API，同时为了安全起见禁用&lt;a href=&quot;lang_corefunc#load_extension&quot;&gt;load_extension（）&lt;/a&gt; SQL函数。</target>
        </trans-unit>
        <trans-unit id="071c285856222e5eb7858ec7e945402304af9915" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/db_filename&quot;&gt;sqlite3_db_filename()&lt;/a&gt; interface.</source>
          <target state="translated">添加了&lt;a href=&quot;c3ref/db_filename&quot;&gt;sqlite3_db_filename（）&lt;/a&gt;接口。</target>
        </trans-unit>
        <trans-unit id="0988b37104db6710779e2dd00393ccc8aed4f156" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/db_mutex&quot;&gt;sqlite3_db_mutex()&lt;/a&gt; interface.</source>
          <target state="translated">添加了&lt;a href=&quot;c3ref/db_mutex&quot;&gt;sqlite3_db_mutex（）&lt;/a&gt;接口。</target>
        </trans-unit>
        <trans-unit id="99b915781990b7bab55347af3d7784e6f66b997a" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/db_readonly&quot;&gt;sqlite3_db_readonly()&lt;/a&gt; interface.</source>
          <target state="translated">添加了&lt;a href=&quot;c3ref/db_readonly&quot;&gt;sqlite3_db_readonly（）&lt;/a&gt;接口。</target>
        </trans-unit>
        <trans-unit id="1689be755f4b5947383c0fa1c767961ce85ec869" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/db_release_memory&quot;&gt;sqlite3_db_release_memory()&lt;/a&gt; interface and the &lt;a href=&quot;pragma#pragma_shrink_memory&quot;&gt;shrink_memory pragma&lt;/a&gt;.</source>
          <target state="translated">添加了&lt;a href=&quot;c3ref/db_release_memory&quot;&gt;sqlite3_db_release_memory（）&lt;/a&gt;接口和&lt;a href=&quot;pragma#pragma_shrink_memory&quot;&gt;rinkle_memory编译指示&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d06e21c2743772c66eb0de3135ffb4cabfd2528d" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/errcode&quot;&gt;sqlite3_errstr()&lt;/a&gt; interface.</source>
          <target state="translated">添加了&lt;a href=&quot;c3ref/errcode&quot;&gt;sqlite3_errstr（）&lt;/a&gt;接口。</target>
        </trans-unit>
        <trans-unit id="79f9185a6e3e6c23fc4569ebe588283d6a971b66" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/errcode&quot;&gt;sqlite3_extended_errcode()&lt;/a&gt; interface.</source>
          <target state="translated">添加了&lt;a href=&quot;c3ref/errcode&quot;&gt;sqlite3_extended_errcode（）&lt;/a&gt;接口。</target>
        </trans-unit>
        <trans-unit id="800b59c31eab1692fa422187bd90b32b14e1376e" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/hard_heap_limit64&quot;&gt;sqlite3_soft_heap_limit64()&lt;/a&gt; interface as a replacement for &lt;a href=&quot;c3ref/soft_heap_limit&quot;&gt;sqlite3_soft_heap_limit()&lt;/a&gt;.</source>
          <target state="translated">添加了&lt;a href=&quot;c3ref/hard_heap_limit64&quot;&gt;sqlite3_soft_heap_limit64（）&lt;/a&gt;接口，以替代&lt;a href=&quot;c3ref/soft_heap_limit&quot;&gt;sqlite3_soft_heap_limit（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1353ba42736589cda5eaab5595079f29c695d72f" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/initialize&quot;&gt;sqlite3_initialize()&lt;/a&gt; and &lt;a href=&quot;c3ref/initialize&quot;&gt;sqlite3_shutdown()&lt;/a&gt; interfaces.</source>
          <target state="translated">添加了&lt;a href=&quot;c3ref/initialize&quot;&gt;sqlite3_initialize（）&lt;/a&gt;和&lt;a href=&quot;c3ref/initialize&quot;&gt;sqlite3_shutdown（）&lt;/a&gt;接口。</target>
        </trans-unit>
        <trans-unit id="dd7f42008f5ea2ae13832ff2fc538b92619a2aa1" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/log&quot;&gt;sqlite3_log()&lt;/a&gt; interface together with the &lt;a href=&quot;c3ref/c_config_covering_index_scan#sqliteconfiglog&quot;&gt;SQLITE_CONFIG_LOG&lt;/a&gt; verb to &lt;a href=&quot;c3ref/config&quot;&gt;sqlite3_config()&lt;/a&gt;. The &quot;.log&quot; command is added to the &lt;a href=&quot;cli&quot;&gt;Command Line Interface&lt;/a&gt;.</source>
          <target state="translated">增加了&lt;a href=&quot;c3ref/log&quot;&gt;sqlite3_log（）&lt;/a&gt;与一起接口&lt;a href=&quot;c3ref/c_config_covering_index_scan#sqliteconfiglog&quot;&gt;SQLITE_CONFIG_LOG&lt;/a&gt;动词&lt;a href=&quot;c3ref/config&quot;&gt;sqlite3_config（） &lt;/a&gt;。将&amp;ldquo; .log&amp;rdquo;命令添加到&lt;a href=&quot;cli&quot;&gt;命令行界面&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0f3b9f436d3aca81a329352d555edcf6d2fc53ab" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/mprintf&quot;&gt;sqlite3_vsnprintf()&lt;/a&gt; interface.</source>
          <target state="translated">添加了&lt;a href=&quot;c3ref/mprintf&quot;&gt;sqlite3_vsnprintf（）&lt;/a&gt;接口。</target>
        </trans-unit>
        <trans-unit id="cb1e02c2bfcb32dedecbd7d74f284c573c13e3ce" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/next_stmt&quot;&gt;sqlite3_next_stmt()&lt;/a&gt; interface.</source>
          <target state="translated">添加了&lt;a href=&quot;c3ref/next_stmt&quot;&gt;sqlite3_next_stmt（）&lt;/a&gt;接口。</target>
        </trans-unit>
        <trans-unit id="3a526df89839bb699bba5ca5c33ef0946cc371fa" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open_v2()&lt;/a&gt; interface.</source>
          <target state="translated">添加了&lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open_v2（）&lt;/a&gt;接口。</target>
        </trans-unit>
        <trans-unit id="3cdad7a02f932844f1d5aad978ef31e8280c723b" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare_v2()&lt;/a&gt; API.</source>
          <target state="translated">添加了&lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare_v2（）&lt;/a&gt; API。</target>
        </trans-unit>
        <trans-unit id="f89e059472e4cdf3b79424c462aeb1d9f42e7450" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare_v3()&lt;/a&gt; and &lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare16_v3()&lt;/a&gt; interfaces with the extra &quot;prepFlags&quot; parameters.</source>
          <target state="translated">添加了带有额外&amp;ldquo; prepFlags&amp;rdquo;参数的&lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare_v3（）&lt;/a&gt;和&lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare16_v3（）&lt;/a&gt;接口。</target>
        </trans-unit>
        <trans-unit id="8f79e632c84dd8f613db0c9edb744b3211ad41ad" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/result_blob&quot;&gt;sqlite3_result_zeroblob64()&lt;/a&gt; and &lt;a href=&quot;c3ref/bind_blob&quot;&gt;sqlite3_bind_zeroblob64()&lt;/a&gt; interfaces.</source>
          <target state="translated">添加了&lt;a href=&quot;c3ref/result_blob&quot;&gt;sqlite3_result_zeroblob64（）&lt;/a&gt;和&lt;a href=&quot;c3ref/bind_blob&quot;&gt;sqlite3_bind_zeroblob64（）&lt;/a&gt;接口。</target>
        </trans-unit>
        <trans-unit id="2ec059ca77f534e2ad1c9da5da7a07bfe515b8e8" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/set_last_insert_rowid&quot;&gt;sqlite3_set_last_insert_rowid()&lt;/a&gt; interface and use the new interface in the &lt;a href=&quot;fts3&quot;&gt;FTS3&lt;/a&gt;, &lt;a href=&quot;fts3#fts4&quot;&gt;FTS4&lt;/a&gt;, and &lt;a href=&quot;fts5&quot;&gt;FTS5&lt;/a&gt; extensions to ensure that the &lt;a href=&quot;c3ref/last_insert_rowid&quot;&gt;sqlite3_last_insert_rowid()&lt;/a&gt; interface always returns reasonable values.</source>
          <target state="translated">添加了&lt;a href=&quot;c3ref/set_last_insert_rowid&quot;&gt;sqlite3_set_last_insert_rowid（）&lt;/a&gt;接口，并在&lt;a href=&quot;fts3&quot;&gt;FTS3&lt;/a&gt;，&lt;a href=&quot;fts3#fts4&quot;&gt;FTS4&lt;/a&gt;和&lt;a href=&quot;fts5&quot;&gt;FTS5&lt;/a&gt;扩展中使用新接口，以确保&lt;a href=&quot;c3ref/last_insert_rowid&quot;&gt;sqlite3_last_insert_rowid（）&lt;/a&gt;接口始终返回合理的值。</target>
        </trans-unit>
        <trans-unit id="0499000ae920f692c6c10ff730922e71f2175340" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/soft_heap_limit64&quot;&gt;sqlite3_soft_heap_limit64()&lt;/a&gt; interface as a replacement for &lt;a href=&quot;c3ref/soft_heap_limit&quot;&gt;sqlite3_soft_heap_limit()&lt;/a&gt;.</source>
          <target state="translated">添加了&lt;a href=&quot;c3ref/soft_heap_limit64&quot;&gt;sqlite3_soft_heap_limit64（）&lt;/a&gt;接口，以替代&lt;a href=&quot;c3ref/soft_heap_limit&quot;&gt;sqlite3_soft_heap_limit（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bed7ca4c56c731b0baef64d49ccf82b79e764321" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/status&quot;&gt;sqlite3_status()&lt;/a&gt; interface used for querying run-time status information about the overall SQLite library and its subsystems.</source>
          <target state="translated">添加了&lt;a href=&quot;c3ref/status&quot;&gt;sqlite3_status（）&lt;/a&gt;接口，该接口用于查询有关整个SQLite库及其子系统的运行时状态信息。</target>
        </trans-unit>
        <trans-unit id="d388429eb7d67d2eee28cd2e532f95aff575159a" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/status&quot;&gt;sqlite3_status64()&lt;/a&gt; interface.</source>
          <target state="translated">添加了&lt;a href=&quot;c3ref/status&quot;&gt;sqlite3_status64（）&lt;/a&gt;接口。</target>
        </trans-unit>
        <trans-unit id="d0c02d677fed007a0f3b79b5d1f2d07fc18c142f" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/stmt_busy&quot;&gt;sqlite3_stmt_busy()&lt;/a&gt; interface.</source>
          <target state="translated">添加了&lt;a href=&quot;c3ref/stmt_busy&quot;&gt;sqlite3_stmt_busy（）&lt;/a&gt;接口。</target>
        </trans-unit>
        <trans-unit id="1a521c795e189c1663c9a6d75d13d86189164b4d" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/stmt_readonly&quot;&gt;sqlite3_stmt_readonly()&lt;/a&gt; interface.</source>
          <target state="translated">添加了&lt;a href=&quot;c3ref/stmt_readonly&quot;&gt;sqlite3_stmt_readonly（）&lt;/a&gt;接口。</target>
        </trans-unit>
        <trans-unit id="1fef1d855e862457ed32ca48c067aa07064074f2" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/stmt_scanstatus&quot;&gt;sqlite3_stmt_scanstatus()&lt;/a&gt; interface, available only when compiled with &lt;a href=&quot;compile#enable_stmt_scanstatus&quot;&gt;SQLITE_ENABLE_STMT_SCANSTATUS&lt;/a&gt;.</source>
          <target state="translated">添加了&lt;a href=&quot;c3ref/stmt_scanstatus&quot;&gt;sqlite3_stmt_scanstatus（）&lt;/a&gt;接口，该接口仅在使用&lt;a href=&quot;compile#enable_stmt_scanstatus&quot;&gt;SQLITE_ENABLE_STMT_SCANSTATUS进行&lt;/a&gt;编译时可用。</target>
        </trans-unit>
        <trans-unit id="ab35212654f74bbb4e759f54b77da2dec843228c" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/stmt_status&quot;&gt;sqlite3_stmt_status()&lt;/a&gt; interface for performance monitoring.</source>
          <target state="translated">添加了&lt;a href=&quot;c3ref/stmt_status&quot;&gt;sqlite3_stmt_status（）&lt;/a&gt;接口用于性能监视。</target>
        </trans-unit>
        <trans-unit id="b17c7d56b39fa08e8e4f793f514bff570e85da50" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/stricmp&quot;&gt;sqlite3_stricmp()&lt;/a&gt; interface as a counterpart to &lt;a href=&quot;c3ref/stricmp&quot;&gt;sqlite3_strnicmp()&lt;/a&gt;.</source>
          <target state="translated">增加了&lt;a href=&quot;c3ref/stricmp&quot;&gt;sqlite3_stricmp（）&lt;/a&gt;接口作为对口&lt;a href=&quot;c3ref/stricmp&quot;&gt;sqlite3_strnicmp（） &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="36ab51188a3976b29c35159f06ed161f1e35db56" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/strlike&quot;&gt;sqlite3_strlike()&lt;/a&gt; interface.</source>
          <target state="translated">添加了&lt;a href=&quot;c3ref/strlike&quot;&gt;sqlite3_strlike（）&lt;/a&gt;接口。</target>
        </trans-unit>
        <trans-unit id="e6ec1296a97b3b974db4a08e61f32e7aafc39768" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/system_errno&quot;&gt;sqlite3_system_errno()&lt;/a&gt; interface.</source>
          <target state="translated">添加了&lt;a href=&quot;c3ref/system_errno&quot;&gt;sqlite3_system_errno（）&lt;/a&gt;接口。</target>
        </trans-unit>
        <trans-unit id="125dba68073072c4a3e6d2c7a9b4b4b46d5ee6fd" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/txn_state&quot;&gt;sqlite3_txn_state()&lt;/a&gt; interface for reporting on the current transaction state of the database connection.</source>
          <target state="translated">添加了&lt;a href=&quot;c3ref/txn_state&quot;&gt;sqlite3_txn_state（）&lt;/a&gt;接口，用于报告数据库连接的当前事务状态。</target>
        </trans-unit>
        <trans-unit id="5c3ccb20e7e108f7d767e7d7513fa5c98ba8b126" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/unlock_notify&quot;&gt;sqlite3_unlock_notify()&lt;/a&gt; interface.</source>
          <target state="translated">添加了&lt;a href=&quot;c3ref/unlock_notify&quot;&gt;sqlite3_unlock_notify（）&lt;/a&gt;接口。</target>
        </trans-unit>
        <trans-unit id="b9d150faf203ca09b9bbbc984a5975f99628a02e" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/uri_boolean&quot;&gt;sqlite3_uri_boolean()&lt;/a&gt; and &lt;a href=&quot;c3ref/uri_boolean&quot;&gt;sqlite3_uri_int64()&lt;/a&gt; interfaces.</source>
          <target state="translated">添加了&lt;a href=&quot;c3ref/uri_boolean&quot;&gt;sqlite3_uri_boolean（）&lt;/a&gt;和&lt;a href=&quot;c3ref/uri_boolean&quot;&gt;sqlite3_uri_int64（）&lt;/a&gt;接口。</target>
        </trans-unit>
        <trans-unit id="3426443574d8d278622270eb29b6c8bc749bbfa3" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/value_blob&quot;&gt;sqlite3_value_frombind()&lt;/a&gt; API for determining if the argument to an SQL function is from a &lt;a href=&quot;lang_expr#varparam&quot;&gt;bound parameter&lt;/a&gt;.</source>
          <target state="translated">添加了&lt;a href=&quot;c3ref/value_blob&quot;&gt;sqlite3_value_frombind（）&lt;/a&gt; API，用于确定SQL函数的参数是否来自&lt;a href=&quot;lang_expr#varparam&quot;&gt;绑定参数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="43b7debc2fe468faedbcf826ae56b984b1bd24d7" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/value_dup&quot;&gt;sqlite3_value_dup()&lt;/a&gt; and &lt;a href=&quot;c3ref/value_dup&quot;&gt;sqlite3_value_free()&lt;/a&gt; interfaces.</source>
          <target state="translated">添加了&lt;a href=&quot;c3ref/value_dup&quot;&gt;sqlite3_value_dup（）&lt;/a&gt;和&lt;a href=&quot;c3ref/value_dup&quot;&gt;sqlite3_value_free（）&lt;/a&gt;接口。</target>
        </trans-unit>
        <trans-unit id="daa32da23e9524ac42660361582e6acf7f0d9ba3" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/value_subtype&quot;&gt;sqlite3_value_subtype()&lt;/a&gt; and &lt;a href=&quot;c3ref/result_subtype&quot;&gt;sqlite3_result_subtype()&lt;/a&gt; interfaced (used by &lt;a href=&quot;json1&quot;&gt;the json1 extension&lt;/a&gt;).</source>
          <target state="translated">添加了连接的&lt;a href=&quot;c3ref/value_subtype&quot;&gt;sqlite3_value_subtype（）&lt;/a&gt;和&lt;a href=&quot;c3ref/result_subtype&quot;&gt;sqlite3_result_subtype（）&lt;/a&gt;（由&lt;a href=&quot;json1&quot;&gt;json1扩展使用&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="e23d8810bd1d174b58a21d6487a29fbd4ec86121" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/vtab_collation&quot;&gt;sqlite3_vtab_collation()&lt;/a&gt; interface.</source>
          <target state="translated">添加了&lt;a href=&quot;c3ref/vtab_collation&quot;&gt;sqlite3_vtab_collat​​ion（）&lt;/a&gt;接口。</target>
        </trans-unit>
        <trans-unit id="a4ac561108af405d7aa448c97e428307506c4b7a" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/vtab_nochange&quot;&gt;sqlite3_vtab_nochange()&lt;/a&gt; and &lt;a href=&quot;c3ref/value_blob&quot;&gt;sqlite3_value_nochange()&lt;/a&gt; interfaces to help virtual table implementations optimize UPDATE operations.</source>
          <target state="translated">添加了&lt;a href=&quot;c3ref/vtab_nochange&quot;&gt;sqlite3_vtab_nochange（）&lt;/a&gt;和&lt;a href=&quot;c3ref/value_blob&quot;&gt;sqlite3_value_nochange（）&lt;/a&gt;接口，以帮助虚拟表实现优化UPDATE操作。</target>
        </trans-unit>
        <trans-unit id="ddf120a30cf931bf5d51052ad2c827a892d71cac" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/wal_checkpoint_v2&quot;&gt;sqlite3_wal_checkpoint_v2()&lt;/a&gt; interface and enhanced the &lt;a href=&quot;pragma#pragma_wal_checkpoint&quot;&gt;wal_checkpoint pragma&lt;/a&gt; to support blocking checkpoints.</source>
          <target state="translated">添加了&lt;a href=&quot;c3ref/wal_checkpoint_v2&quot;&gt;sqlite3_wal_checkpoint_v2（）&lt;/a&gt;接口，并增强了&lt;a href=&quot;pragma#pragma_wal_checkpoint&quot;&gt;wal_checkpoint编译指示&lt;/a&gt;以支持阻塞的检查点。</target>
        </trans-unit>
        <trans-unit id="d0929c2ba69cbc1ab90381ef901ed1c43220d3b7" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;carray&quot;&gt;carray() table-valued function&lt;/a&gt; extension.</source>
          <target state="translated">添加了&lt;a href=&quot;carray&quot;&gt;carray（）表值函数&lt;/a&gt;扩展。</target>
        </trans-unit>
        <trans-unit id="4198af2bb2d3a6a2e5d9e717e487ffdb864f387d" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;cli#editfunc&quot;&gt;edit() SQL function&lt;/a&gt;.</source>
          <target state="translated">添加了&lt;a href=&quot;cli#editfunc&quot;&gt;edit（）SQL函数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="474818afcad8b8e66370e87650be26268e65480a" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;cli#exexcel*&quot;&gt;.excel command&lt;/a&gt; to simplify exporting database content to a spreadsheet.</source>
          <target state="translated">添加了&lt;a href=&quot;cli#exexcel*&quot;&gt;.excel命令，&lt;/a&gt;以简化将数据库内容导出到电子表格的操作。</target>
        </trans-unit>
        <trans-unit id="fd0d090262bc2f05e4866375d263ebdd0c0c20b9" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;cli#fullschema&quot;&gt;.fullschema&lt;/a&gt; dot-command to the &lt;a href=&quot;cli&quot;&gt;command-line shell&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;cli&quot;&gt;命令行shell中&lt;/a&gt;添加了&lt;a href=&quot;cli#fullschema&quot;&gt;.fullschema&lt;/a&gt;点命令。</target>
        </trans-unit>
        <trans-unit id="efaa065fc6ae309d6f393706b579d1948716e05b" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;cli#sha3sum&quot;&gt;.sha3sum dot-command&lt;/a&gt; and the &lt;a href=&quot;cli#selftest&quot;&gt;.selftest dot-command&lt;/a&gt; to the &lt;a href=&quot;cli&quot;&gt;command-line shell&lt;/a&gt;</source>
          <target state="translated">在&lt;a href=&quot;cli&quot;&gt;命令行外壳中&lt;/a&gt;添加了&lt;a href=&quot;cli#sha3sum&quot;&gt;.sha3sum点命令&lt;/a&gt;和&lt;a href=&quot;cli#selftest&quot;&gt;.selftest点命令&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e6c65b9a76c93d9f52da8c8997329f7ae8313b1d" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;compile#allow_uri_authority&quot;&gt;SQLITE_ALLOW_URI_AUTHORITY&lt;/a&gt; compile-time option.</source>
          <target state="translated">添加了&lt;a href=&quot;compile#allow_uri_authority&quot;&gt;SQLITE_ALLOW_URI_AUTHORITY&lt;/a&gt;编译时选项。</target>
        </trans-unit>
        <trans-unit id="e6ce6e1df1cafb18c2d838e2c4bcdbb99f313309" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;compile#default_foreign_keys&quot;&gt;SQLITE_DEFAULT_FOREIGN_KEYS&lt;/a&gt; compile-time option.</source>
          <target state="translated">添加了&lt;a href=&quot;compile#default_foreign_keys&quot;&gt;SQLITE_DEFAULT_FOREIGN_KEYS&lt;/a&gt;编译时选项。</target>
        </trans-unit>
        <trans-unit id="e862d7c1b81982153f4eb3d2e608a91a4403f0a9" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;compile#default_synchronous&quot;&gt;SQLITE_DEFAULT_SYNCHRONOUS&lt;/a&gt; and &lt;a href=&quot;compile#default_wal_synchronous&quot;&gt;SQLITE_DEFAULT_WAL_SYNCHRONOUS&lt;/a&gt; compile-time options. The &lt;a href=&quot;compile#default_synchronous&quot;&gt;SQLITE_DEFAULT_SYNCHRONOUS&lt;/a&gt; compile-time option replaces the &lt;a href=&quot;compile#extra_durable&quot;&gt;SQLITE_EXTRA_DURABLE&lt;/a&gt; option, which is no longer supported.</source>
          <target state="translated">添加了&lt;a href=&quot;compile#default_synchronous&quot;&gt;SQLITE_DEFAULT_SYNCHRONOUS&lt;/a&gt;和&lt;a href=&quot;compile#default_wal_synchronous&quot;&gt;SQLITE_DEFAULT_WAL_SYNCHRONOUS&lt;/a&gt;编译时选项。该&lt;a href=&quot;compile#default_synchronous&quot;&gt;SQLITE_DEFAULT_SYNCHRONOUS&lt;/a&gt;编译时选项替换了&lt;a href=&quot;compile#extra_durable&quot;&gt;SQLITE_EXTRA_DURABLE&lt;/a&gt;选项，它不再支持。</target>
        </trans-unit>
        <trans-unit id="0d9939088e42394a02853dfc4d6f72c7cbfcfabb" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;compile#direct_overflow_read&quot;&gt;SQLITE_DIRECT_OVERFLOW_READ&lt;/a&gt; compile-time option, causing &lt;a href=&quot;fileformat2#ovflpgs&quot;&gt;overflow pages&lt;/a&gt; to be read directly from the database file, bypassing the &lt;a href=&quot;c3ref/pcache_methods2&quot;&gt;page cache&lt;/a&gt;.</source>
          <target state="translated">添加了&lt;a href=&quot;compile#direct_overflow_read&quot;&gt;SQLITE_DIRECT_OVERFLOW_READ&lt;/a&gt;编译时选项，使&lt;a href=&quot;fileformat2#ovflpgs&quot;&gt;溢出页面&lt;/a&gt;可直接从数据库文件中读取，而绕过&lt;a href=&quot;c3ref/pcache_methods2&quot;&gt;页面缓存&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="89be077605abd75e22c5ffc02c2f38f9fadca22f" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;compile#disable_fts4_deferred&quot;&gt;SQLITE_DISABLE_FTS4_DEFERRED&lt;/a&gt; compile-time option.</source>
          <target state="translated">添加了&lt;a href=&quot;compile#disable_fts4_deferred&quot;&gt;SQLITE_DISABLE_FTS4_DEFERRED&lt;/a&gt;编译时选项。</target>
        </trans-unit>
        <trans-unit id="809eece43957fbb9e8168262d4e0fe553c274d57" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;compile#enable_api_armor&quot;&gt;SQLITE_ENABLE_API_ARMOR&lt;/a&gt; compile-time option.</source>
          <target state="translated">添加了&lt;a href=&quot;compile#enable_api_armor&quot;&gt;SQLITE_ENABLE_API_ARMOR&lt;/a&gt;编译时选项。</target>
        </trans-unit>
        <trans-unit id="78acf1f8c9551ddf3a305b4527973a912eca40df" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;compile#enable_null_trim&quot;&gt;SQLITE_ENABLE_NULL_TRIM&lt;/a&gt; compile-time option, which can result in significantly smaller database files for some applications, at the risk of being incompatible with older versions of SQLite.</source>
          <target state="translated">添加了&lt;a href=&quot;compile#enable_null_trim&quot;&gt;SQLITE_ENABLE_NULL_TRIM&lt;/a&gt;编译时选项，该选项可能导致某些应用程序的数据库文件小得多，并有可能与旧版本的SQLite不兼容。</target>
        </trans-unit>
        <trans-unit id="9cc7192a68013b4ccfb34fc5fa843f664f068838" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;compile#enable_unknown_sql_function&quot;&gt;SQLITE_ENABLE_UNKNOWN_SQL_FUNCTION&lt;/a&gt; compile-time option and turned that option on by default when building the &lt;a href=&quot;cli&quot;&gt;command-line shell&lt;/a&gt;.</source>
          <target state="translated">添加了&lt;a href=&quot;compile#enable_unknown_sql_function&quot;&gt;SQLITE_ENABLE_UNKNOWN_SQL_FUNCTION&lt;/a&gt;编译时选项，并在构建&lt;a href=&quot;cli&quot;&gt;命令行shell&lt;/a&gt;时默认情况下将其打开。</target>
        </trans-unit>
        <trans-unit id="e26774dce1b145c5b9b287b32dbb4c00e6fe2392" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;compile#fts3_max_expr_depth&quot;&gt;SQLITE_FTS3_MAX_EXPR_DEPTH&lt;/a&gt; compile-time option.</source>
          <target state="translated">添加了&lt;a href=&quot;compile#fts3_max_expr_depth&quot;&gt;SQLITE_FTS3_MAX_EXPR_DEPTH&lt;/a&gt;编译时选项。</target>
        </trans-unit>
        <trans-unit id="39f704cba224d0630f060896cdfabf87b14693b5" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;compile#have_isnan&quot;&gt;SQLITE_HAVE_ISNAN&lt;/a&gt; compile-time option which will cause the isnan() function from the standard math library to be used instead of SQLite's own home-brew NaN checker.</source>
          <target state="translated">添加了&lt;a href=&quot;compile#have_isnan&quot;&gt;SQLITE_HAVE_ISNAN&lt;/a&gt;编译时选项，该选项将导致使用标准数学库中的isnan（）函数代替SQLite自己的自制NaN检查器。</target>
        </trans-unit>
        <trans-unit id="558383d2bbd0eb67a29332971af16389f89345ef" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;compile#like_doesnt_match_blobs&quot;&gt;SQLITE_LIKE_DOESNT_MATCH_BLOBS&lt;/a&gt; compile-time option.</source>
          <target state="translated">添加了&lt;a href=&quot;compile#like_doesnt_match_blobs&quot;&gt;SQLITE_LIKE_DOESNT_MATCH_BLOBS&lt;/a&gt;编译时选项。</target>
        </trans-unit>
        <trans-unit id="84daf3b5302c6fe472e4c66d1c3fa77e1f119885" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;compile#minimum_file_descriptor&quot;&gt;SQLITE_MINIMUM_FILE_DESCRIPTOR&lt;/a&gt; compile-time option</source>
          <target state="translated">添加了&lt;a href=&quot;compile#minimum_file_descriptor&quot;&gt;SQLITE_MINIMUM_FILE_DESCRIPTOR&lt;/a&gt;编译时选项</target>
        </trans-unit>
        <trans-unit id="8d7a7e10a04ea0438234a85069c16c9283a34f44" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;compile#omit_autoreset&quot;&gt;SQLITE_OMIT_AUTORESET&lt;/a&gt; compile-time option.</source>
          <target state="translated">添加了&lt;a href=&quot;compile#omit_autoreset&quot;&gt;SQLITE_OMIT_AUTORESET&lt;/a&gt;编译时选项。</target>
        </trans-unit>
        <trans-unit id="cb3a294a7e977a259efaa0c86a5bd58c0ece5079" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;compile#omit_truncate_optimization&quot;&gt;SQLITE_OMIT_TRUNCATE_OPTIMIZATION&lt;/a&gt; compile-time option.</source>
          <target state="translated">添加了&lt;a href=&quot;compile#omit_truncate_optimization&quot;&gt;SQLITE_OMIT_TRUNCATE_OPTIMIZATION&lt;/a&gt;编译时选项。</target>
        </trans-unit>
        <trans-unit id="a909d1326bcfce04150c32be27f8c49b83bd0ecc" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;compile#reverse_unordered_selects&quot;&gt;SQLITE_REVERSE_UNORDERED_SELECTS&lt;/a&gt; compile-time option.</source>
          <target state="translated">添加了&lt;a href=&quot;compile#reverse_unordered_selects&quot;&gt;SQLITE_REVERSE_UNORDERED_SELECTS&lt;/a&gt;编译时选项。</target>
        </trans-unit>
        <trans-unit id="502456daba3bbfc42c2aae4e0545df4627f551ad" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;compile#sorter_pmasz&quot;&gt;SQLITE_SORTER_PMASZ&lt;/a&gt; compile-time option and &lt;a href=&quot;c3ref/c_config_covering_index_scan#sqliteconfigpmasz&quot;&gt;SQLITE_CONFIG_PMASZ&lt;/a&gt; start-time option.</source>
          <target state="translated">添加了&lt;a href=&quot;compile#sorter_pmasz&quot;&gt;SQLITE_SORTER_PMASZ&lt;/a&gt;编译时选项和&lt;a href=&quot;c3ref/c_config_covering_index_scan#sqliteconfigpmasz&quot;&gt;SQLITE_CONFIG_PMASZ&lt;/a&gt;开始时选项。</target>
        </trans-unit>
        <trans-unit id="28034c0cfb70c12e27ba3ede26d8dd8ede415516" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;compile#trace_size_limit&quot;&gt;SQLITE_TRACE_SIZE_LIMIT&lt;/a&gt; compile-time option.</source>
          <target state="translated">添加了&lt;a href=&quot;compile#trace_size_limit&quot;&gt;SQLITE_TRACE_SIZE_LIMIT&lt;/a&gt;编译时选项。</target>
        </trans-unit>
        <trans-unit id="09fb1f6511621b38cfa7a99512d14f14883fbc85" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;compile#zero_malloc&quot;&gt;SQLITE_ZERO_MALLOC&lt;/a&gt; compile-time option.</source>
          <target state="translated">添加了&lt;a href=&quot;compile#zero_malloc&quot;&gt;SQLITE_ZERO_MALLOC&lt;/a&gt;编译时选项。</target>
        </trans-unit>
        <trans-unit id="3f3173fa35c3a879c2726fc2a5942b9f31caf835" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;completion&quot;&gt;COMPLETION extension&lt;/a&gt; - designed to suggest tab-completions for interactive user interfaces. This is a work in progress. Expect further enhancements in future releases.</source>
          <target state="translated">添加了&lt;a href=&quot;completion&quot;&gt;COMPLETION扩展名&lt;/a&gt; -用于建议交互式用户界面的制表符完成。这是一项正在进行的工作。期望在将来的版本中进一步增强功能。</target>
        </trans-unit>
        <trans-unit id="bd72639918b4a26ff2fb29a0faca5f35c83f254f" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;csv&quot;&gt;CSV virtual table&lt;/a&gt; for reading &lt;a href=&quot;https://www.ietf.org/rfc/rfc4180.txt&quot;&gt;RFC 4180&lt;/a&gt; formatted comma-separated value files.</source>
          <target state="translated">添加了&lt;a href=&quot;csv&quot;&gt;CSV虚拟表，&lt;/a&gt;用于读取&lt;a href=&quot;https://www.ietf.org/rfc/rfc4180.txt&quot;&gt;RFC 4180&lt;/a&gt;格式的逗号分隔值文件。</target>
        </trans-unit>
        <trans-unit id="92093860669f80e0461cf2bf8c10bee5f03e1d55" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;floatingpoint#decext&quot;&gt;decimal extension&lt;/a&gt; for doing arbitrary-precision decimal arithmetic.</source>
          <target state="translated">添加了用于执行任意精度十进制算术的&lt;a href=&quot;floatingpoint#decext&quot;&gt;十进制扩展名&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3160ced06d046132de38a26647860622e0cdffde" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;fts3#fts3tok&quot;&gt;fts3tokenize virtual table&lt;/a&gt; to the &lt;a href=&quot;fts3&quot;&gt;full-text search&lt;/a&gt; logic.</source>
          <target state="translated">增加了&lt;a href=&quot;fts3#fts3tok&quot;&gt;fts3tokenize虚表&lt;/a&gt;的&lt;a href=&quot;fts3&quot;&gt;全文检索&lt;/a&gt;逻辑。</target>
        </trans-unit>
        <trans-unit id="4c8b894319f521eb57fd47b0be0aa9684d1ec5aa" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;fts3#fts4aux&quot;&gt;fts4aux&lt;/a&gt; table</source>
          <target state="translated">添加了&lt;a href=&quot;fts3#fts4aux&quot;&gt;fts4aux&lt;/a&gt;表</target>
        </trans-unit>
        <trans-unit id="4f7adb875b0c694ac11f99fb4651fab782bc54c4" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;fts3#fts4notindexed&quot;&gt;FTS4 notindexed option&lt;/a&gt;, allowing non-indexed columns in an FTS4 table.</source>
          <target state="translated">添加了&lt;a href=&quot;fts3#fts4notindexed&quot;&gt;FTS4 notindexed选项&lt;/a&gt;，允许FTS4表中的未索引列。</target>
        </trans-unit>
        <trans-unit id="af80c1928f1855cabc20adda009b71283ddea157" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;fts3#matchinfo-b&quot;&gt;matchinfo 'b' flag&lt;/a&gt; to the &lt;a href=&quot;fts3#matchinfo&quot;&gt;matchinfo()&lt;/a&gt; function in &lt;a href=&quot;fts3&quot;&gt;FTS3&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;fts3&quot;&gt;FTS3中&lt;/a&gt;的&lt;a href=&quot;fts3#matchinfo&quot;&gt;matchinfo（）&lt;/a&gt;函数中添加了&lt;a href=&quot;fts3#matchinfo-b&quot;&gt;matchinfo'b'标志&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="65d5c29f868afb57f7cc51fb08236c713031a2c7" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;fts3#matchinfo-y&quot;&gt;matchinfo y flag&lt;/a&gt; to the &lt;a href=&quot;fts3#matchinfo&quot;&gt;matchinfo()&lt;/a&gt; function of &lt;a href=&quot;fts3&quot;&gt;FTS3&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;fts3&quot;&gt;FTS3&lt;/a&gt;的&lt;a href=&quot;fts3#matchinfo&quot;&gt;matchinfo（）&lt;/a&gt;函数中添加了&lt;a href=&quot;fts3#matchinfo-y&quot;&gt;matchinfo y标志&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a827723f97ea5885e808c3970a4b40110e42abfa" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;fts5#the_detail_option&quot;&gt;FTS5 detail option&lt;/a&gt;.</source>
          <target state="translated">添加了&lt;a href=&quot;fts5#the_detail_option&quot;&gt;FTS5详细信息选项&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a22bb4ef0d3b7209d712c5d4d93daa0aaef7a82c" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;geopoly&quot;&gt;Geopoly module&lt;/a&gt;</source>
          <target state="translated">添加了&lt;a href=&quot;geopoly&quot;&gt;Geopoly模块&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="87c6d5f726f175566512f2d2234a5c4de18fd7f8" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;geopoly#ccw&quot;&gt;geopoly_ccw()&lt;/a&gt; function.</source>
          <target state="translated">添加了&lt;a href=&quot;geopoly#ccw&quot;&gt;geopoly_ccw（）&lt;/a&gt;函数。</target>
        </trans-unit>
        <trans-unit id="1b0e11f7f07f3617d74c59523f8c23d59441befb" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;geopoly#regpoly&quot;&gt;geopoly_regular()&lt;/a&gt; function.</source>
          <target state="translated">添加了&lt;a href=&quot;geopoly#regpoly&quot;&gt;geopoly_regular（）&lt;/a&gt;函数。</target>
        </trans-unit>
        <trans-unit id="f24e2a1102cf6edaae603eaa6aac92e181730dab" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;http://www.sqlite.org/src/doc/trunk/ext/userauth/user-auth.txt&quot;&gt;User Authentication&lt;/a&gt; extension.</source>
          <target state="translated">添加了&lt;a href=&quot;http://www.sqlite.org/src/doc/trunk/ext/userauth/user-auth.txt&quot;&gt;用户身份验证&lt;/a&gt;扩展。</target>
        </trans-unit>
        <trans-unit id="98eddc92334b847599f4ce6d60f53ec694b28ec8" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;http://www.sqlite.org/src/finfo?name=tool/genfkey.c&quot;&gt; source code&lt;/a&gt; and &lt;a href=&quot;http://www.sqlite.org/src/finfo?name=tool/genfkey.README&quot;&gt; documentation&lt;/a&gt; for the &lt;b&gt;genfkey&lt;/b&gt; program for automatically generating triggers to enforce foreign key constraints.</source>
          <target state="translated">添加了&lt;b&gt;genfkey&lt;/b&gt;程序的&lt;a href=&quot;http://www.sqlite.org/src/finfo?name=tool/genfkey.c&quot;&gt;源代码&lt;/a&gt;和&lt;a href=&quot;http://www.sqlite.org/src/finfo?name=tool/genfkey.README&quot;&gt;文档&lt;/a&gt;，用于自动生成触发器以强制执行外键约束。&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="fb847b6e2ea32d443186a136c7cc13619b505325" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;https://sqlite.org/src/file/ext/misc/anycollseq.c&quot;&gt;anycollseq.c&lt;/a&gt;&lt;a href=&quot;loadext&quot;&gt;loadable extension&lt;/a&gt; that allows a generic SQLite database connection to read a schema that contains unknown and/or application-specific &lt;a href=&quot;datatype3#collation&quot;&gt;collating sequences&lt;/a&gt;.</source>
          <target state="translated">添加了&lt;a href=&quot;https://sqlite.org/src/file/ext/misc/anycollseq.c&quot;&gt;anycollseq.c &lt;/a&gt;&lt;a href=&quot;loadext&quot;&gt;可加载扩展&lt;/a&gt;，该扩展允许通用SQLite数据库连接读取包含未知和/或特定于应用程序的&lt;a href=&quot;datatype3#collation&quot;&gt;整理序列的模式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7bcf45513f10ebd75a93f6b5b6e89e6063d27a70" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;https://sqlite.org/src/file/ext/misc/explain.c&quot;&gt;explain virtual table&lt;/a&gt; as a run-time loadable extension.</source>
          <target state="translated">添加了&lt;a href=&quot;https://sqlite.org/src/file/ext/misc/explain.c&quot;&gt;说明虚拟表&lt;/a&gt;作为运行时可加载扩展。</target>
        </trans-unit>
        <trans-unit id="b081bf5f1f1b82752017714981d03b1881cbb935" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;https://sqlite.org/src/file/ext/misc/fossildelta.c&quot;&gt;fossildelta.c&lt;/a&gt; extension that can create, apply, and deconstruct the &lt;a href=&quot;https://fossil-scm.org/fossil/doc/trunk/www/delta_format.wiki&quot;&gt;Fossil DVCS file delta format&lt;/a&gt; that is used by the &lt;a href=&quot;rbu&quot;&gt;RBU extension&lt;/a&gt;.</source>
          <target state="translated">添加了&lt;a href=&quot;https://sqlite.org/src/file/ext/misc/fossildelta.c&quot;&gt;fossildelta.c&lt;/a&gt;扩展名，该扩展名可以创建，应用和解构&lt;a href=&quot;rbu&quot;&gt;RBU扩展名&lt;/a&gt;使用的&lt;a href=&quot;https://fossil-scm.org/fossil/doc/trunk/www/delta_format.wiki&quot;&gt;Fossil DVCS文件增量格式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1c17244cfd78fdd7f17b6be947bca36290283497" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;https://sqlite.org/src/file/ext/misc/normalize.c&quot;&gt;sqlite3_normalize()&lt;/a&gt; extension function.</source>
          <target state="translated">添加了&lt;a href=&quot;https://sqlite.org/src/file/ext/misc/normalize.c&quot;&gt;sqlite3_normalize（）&lt;/a&gt;扩展功能。</target>
        </trans-unit>
        <trans-unit id="759f9c17eb2b892ce355010ec281cce2d5bc2292" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;https://sqlite.org/src/file/ext/misc/unionvtab.c&quot;&gt;swarm virtual table&lt;/a&gt; to the existing union virtual table extension.</source>
          <target state="translated">将&lt;a href=&quot;https://sqlite.org/src/file/ext/misc/unionvtab.c&quot;&gt;swarm虚拟表&lt;/a&gt;添加到现有的union虚拟表扩展中。</target>
        </trans-unit>
        <trans-unit id="f734d95c970b9097c58b6ecfdc16f5977d6ec48b" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;https://sqlite.org/src/file/ext/misc/uuid.c&quot;&gt;uuid.c&lt;/a&gt; extension module implementing functions for processing RFC-4122 UUIDs.</source>
          <target state="translated">添加了&lt;a href=&quot;https://sqlite.org/src/file/ext/misc/uuid.c&quot;&gt;uuid.c&lt;/a&gt;扩展模块，该模块实现了用于处理RFC-4122 UUID的功能。</target>
        </trans-unit>
        <trans-unit id="b331aec1305fafaaca20c2db450d1ed83b8ce70e" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;https://sqlite.org/src/file/ext/session/changesetfuzz.c&quot;&gt;changesetfuzz.c&lt;/a&gt; test-case generator utility.</source>
          <target state="translated">添加了&lt;a href=&quot;https://sqlite.org/src/file/ext/session/changesetfuzz.c&quot;&gt;changesetfuzz.c&lt;/a&gt;测试用例生成器实用程序。</target>
        </trans-unit>
        <trans-unit id="6ce84b6020b5a29dc39d3e75ab7c42a1088a870c" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;https://sqlite.org/src/file/src/dbpage.c&quot;&gt;sqlite_dbpage virtual table&lt;/a&gt; for providing direct access to pages of the database file. The source code is built into the &lt;a href=&quot;amalgamation&quot;&gt;amalgamation&lt;/a&gt; and is activated using the &lt;a href=&quot;compile#enable_dbpage_vtab&quot;&gt;-DSQLITE_ENABLE_DBPAGE_VTAB&lt;/a&gt; compile-time option.</source>
          <target state="translated">添加了&lt;a href=&quot;https://sqlite.org/src/file/src/dbpage.c&quot;&gt;sqlite_dbpage虚拟表，&lt;/a&gt;以提供对数据库文件页面的直接访问。源代码内置在&lt;a href=&quot;amalgamation&quot;&gt;合并中，&lt;/a&gt;并使用&lt;a href=&quot;compile#enable_dbpage_vtab&quot;&gt;-DSQLITE_ENABLE_DBPAGE_VTAB&lt;/a&gt;编译时选项激活。</target>
        </trans-unit>
        <trans-unit id="c2442f1bc55ec77c692e59556f169e49a895d4fc" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;https://www.sqlite.org/src/artifact/d7cc99350?ln=403-443&quot;&gt;sqlite3rbu_bp_progress()&lt;/a&gt; interface to the &lt;a href=&quot;rbu&quot;&gt;RBU&lt;/a&gt; extension.</source>
          <target state="translated">在&lt;a href=&quot;rbu&quot;&gt;RBU&lt;/a&gt;扩展中添加了&lt;a href=&quot;https://www.sqlite.org/src/artifact/d7cc99350?ln=403-443&quot;&gt;sqlite3rbu_bp_progress（）&lt;/a&gt;接口。</target>
        </trans-unit>
        <trans-unit id="9465d7ab14adb931b5593d0471021aeb683a5ed7" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;https://www.sqlite.org/src/artifact/f971962e92ebb8b0&quot;&gt;eval.c&lt;/a&gt;&lt;a href=&quot;loadext&quot;&gt;loadable extension&lt;/a&gt; that implements an eval() SQL function that will recursively evaluate SQL.</source>
          <target state="translated">添加了&lt;a href=&quot;https://www.sqlite.org/src/artifact/f971962e92ebb8b0&quot;&gt;eval.c &lt;/a&gt;&lt;a href=&quot;loadext&quot;&gt;可加载扩展&lt;/a&gt;，该扩展实现了将递归评估SQL的eval（）SQL函数。</target>
        </trans-unit>
        <trans-unit id="0ff58e660f9336185c0f156874ca30af3aeca0cb" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;https://www.sqlite.org/src/doc/trunk/ext/userauth/user-auth.txt&quot;&gt;User Authentication&lt;/a&gt; extension.</source>
          <target state="translated">添加了&lt;a href=&quot;https://www.sqlite.org/src/doc/trunk/ext/userauth/user-auth.txt&quot;&gt;用户身份验证&lt;/a&gt;扩展。</target>
        </trans-unit>
        <trans-unit id="23f6d845a0f388b044a8b1c50b1667ba4a60cc2c" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;https://www.sqlite.org/src/file/ext/misc/remember.c&quot;&gt;remember(V,PTR)&lt;/a&gt; SQL function as a &lt;a href=&quot;loadext&quot;&gt;loadable extension&lt;/a&gt;.</source>
          <target state="translated">添加了&lt;a href=&quot;https://www.sqlite.org/src/file/ext/misc/remember.c&quot;&gt;Remember（V，PTR）&lt;/a&gt; SQL函数作为&lt;a href=&quot;loadext&quot;&gt;可加载的扩展&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="425b7d13c017ba95b58d6a07a030a87fd80839e1" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;https://www.sqlite.org/src/file/ext/misc/sha1.c&quot;&gt;sha1.c&lt;/a&gt; extension.</source>
          <target state="translated">添加了&lt;a href=&quot;https://www.sqlite.org/src/file/ext/misc/sha1.c&quot;&gt;sha1.c&lt;/a&gt;扩展名。</target>
        </trans-unit>
        <trans-unit id="8f8ee7d55b2426c92a7315d48994216c4d4e5dac" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;https://www.sqlite.org/src/finfo?name=tool/genfkey.c&quot;&gt; source code&lt;/a&gt; and &lt;a href=&quot;https://www.sqlite.org/src/finfo?name=tool/genfkey.README&quot;&gt; documentation&lt;/a&gt; for the &lt;b&gt;genfkey&lt;/b&gt; program for automatically generating triggers to enforce foreign key constraints.</source>
          <target state="translated">添加了&lt;b&gt;genfkey&lt;/b&gt;程序的&lt;a href=&quot;https://www.sqlite.org/src/finfo?name=tool/genfkey.c&quot;&gt;源代码&lt;/a&gt;和&lt;a href=&quot;https://www.sqlite.org/src/finfo?name=tool/genfkey.README&quot;&gt;文档&lt;/a&gt;，用于自动生成触发器以强制执行外键约束。&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="8e99c060c956cad10a0ae2061ee04da178be3f84" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;imposter#dotimposter&quot;&gt;.imposter dot-command&lt;/a&gt; to the &lt;a href=&quot;cli&quot;&gt;command-line shell&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;cli&quot;&gt;命令行shell中&lt;/a&gt;添加了&lt;a href=&quot;imposter#dotimposter&quot;&gt;.imposter dot-command&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="727f21d6dc5af5ea8308f45987497ba8687f21e0" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;json1#jgrouparray&quot;&gt;json_group_array()&lt;/a&gt; and &lt;a href=&quot;json1#jgroupobject&quot;&gt;json_group_object()&lt;/a&gt; SQL functions in the &lt;a href=&quot;json1#jmini&quot;&gt;json&lt;/a&gt; extension.</source>
          <target state="translated">在&lt;a href=&quot;json1#jmini&quot;&gt;json&lt;/a&gt;扩展中添加了&lt;a href=&quot;json1#jgrouparray&quot;&gt;json_group_array（）&lt;/a&gt;和&lt;a href=&quot;json1#jgroupobject&quot;&gt;json_group_object（）&lt;/a&gt; SQL函数。</target>
        </trans-unit>
        <trans-unit id="1bb5ebb2b769f13a8af1db1abb9a9158e890bf67" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;json1#jpatch&quot;&gt;json_patch()&lt;/a&gt; SQL function to the &lt;a href=&quot;json1&quot;&gt;JSON1 extension&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;json1&quot;&gt;JSON1扩展中&lt;/a&gt;添加了&lt;a href=&quot;json1#jpatch&quot;&gt;json_patch（）&lt;/a&gt; SQL函数。</target>
        </trans-unit>
        <trans-unit id="4a094211337515c1dc028d6f9e6cf2117139fbc0" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;json1#jquote&quot;&gt;json_quote()&lt;/a&gt; SQL function to &lt;a href=&quot;json1&quot;&gt;the json1 extension&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;json1&quot;&gt;在json1扩展名中&lt;/a&gt;添加了&lt;a href=&quot;json1#jquote&quot;&gt;json_quote（）&lt;/a&gt; SQL函数。</target>
        </trans-unit>
        <trans-unit id="a328d8e8703958674a4567fcec41c8773ac9bc0f" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;lang_corefunc#iif&quot;&gt;iif() SQL function&lt;/a&gt;.</source>
          <target state="translated">添加了&lt;a href=&quot;lang_corefunc#iif&quot;&gt;iif（）SQL函数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6d18b3be87f155b2457df15bacd3dd11c3e674d5" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;lang_corefunc#instr&quot;&gt;instr()&lt;/a&gt; SQL function.</source>
          <target state="translated">添加了&lt;a href=&quot;lang_corefunc#instr&quot;&gt;instr（）&lt;/a&gt; SQL函数。</target>
        </trans-unit>
        <trans-unit id="247064f74dbe4b79f59940594bcda97f277a43f3" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;lang_corefunc#likely&quot;&gt;likely(X)&lt;/a&gt; SQL function.</source>
          <target state="translated">添加了&lt;a href=&quot;lang_corefunc#likely&quot;&gt;可能的（X）&lt;/a&gt; SQL函数。</target>
        </trans-unit>
        <trans-unit id="bac96e190aeab6b4919769c4f3fd24dfbe89ae73" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;lang_corefunc#printf&quot;&gt;printf()&lt;/a&gt; SQL function.</source>
          <target state="translated">添加了&lt;a href=&quot;lang_corefunc#printf&quot;&gt;printf（）&lt;/a&gt; SQL函数。</target>
        </trans-unit>
        <trans-unit id="d60a43dfdb6c9e0039a4d0aa4f120238cb346854" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;lang_corefunc#unlikely&quot;&gt;unlikely()&lt;/a&gt; and &lt;a href=&quot;lang_corefunc#likelihood&quot;&gt;likelihood()&lt;/a&gt; SQL functions to be used as hints to the query planner.</source>
          <target state="translated">添加了&lt;a href=&quot;lang_corefunc#unlikely&quot;&gt;不可能（）&lt;/a&gt;和&lt;a href=&quot;lang_corefunc#likelihood&quot;&gt;似然（）&lt;/a&gt; SQL函数，以用作查询计划程序的提示。</target>
        </trans-unit>
        <trans-unit id="bb0ee30e9ce216eed1bab03b1463da8795ac409d" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;lang_expr#match&quot;&gt;MATCH&lt;/a&gt; operator.</source>
          <target state="translated">添加了&lt;a href=&quot;lang_expr#match&quot;&gt;MATCH&lt;/a&gt;运算符。</target>
        </trans-unit>
        <trans-unit id="afa2810329e9d36a72775faefe7a4b187615efbd" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;lang_vacuum#vacuuminto&quot;&gt;VACUUM INTO&lt;/a&gt; command</source>
          <target state="translated">添加了&lt;a href=&quot;lang_vacuum#vacuuminto&quot;&gt;VACUUM INTO&lt;/a&gt;命令</target>
        </trans-unit>
        <trans-unit id="47f839667c95acc5a008254deb814f5fd2e72e82" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;malloc#lookaside&quot;&gt;lookaside memory allocator&lt;/a&gt; for a speed improvement in excess of 15% on some workloads. (Your mileage may vary.)</source>
          <target state="translated">添加了&lt;a href=&quot;malloc#lookaside&quot;&gt;后备内存分配器&lt;/a&gt;，以在某些工作负载上将速度提高超过15％。（你的旅费可能会改变。）</target>
        </trans-unit>
        <trans-unit id="ca85bb0b52986a81e52b50ef04e5ef298fc1ebdf" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;optoverview#skipscan&quot;&gt;skip-scan optimization&lt;/a&gt; to the query planner.</source>
          <target state="translated">向查询计划器添加了&lt;a href=&quot;optoverview#skipscan&quot;&gt;跳过扫描优化&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c52772fca787badd301bbb28489a51e6b2c18437" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;pragma#pragma_busy_timeout&quot;&gt;busy_timeout pragma&lt;/a&gt;.</source>
          <target state="translated">添加了&lt;a href=&quot;pragma#pragma_busy_timeout&quot;&gt;busy_timeout编译指示&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="acf053bb493580f8d76bf2fe4425a6ee95eb3b00" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;pragma#pragma_cache_spill&quot;&gt;cache_spill pragma&lt;/a&gt;.</source>
          <target state="translated">添加了&lt;a href=&quot;pragma#pragma_cache_spill&quot;&gt;cache_spill pragma&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7028868fffc72a85c59d3c3b9112eb23b4ec033e" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;pragma#pragma_cell_size_check&quot;&gt;PRAGMA cell_size_check&lt;/a&gt; command for better and earlier detection of database file corruption.</source>
          <target state="translated">添加了&lt;a href=&quot;pragma#pragma_cell_size_check&quot;&gt;PRAGMA cell_size_check&lt;/a&gt;命令，以便更好，更早地检测数据库文件损坏。</target>
        </trans-unit>
        <trans-unit id="f60e6b13f01cdd96d811863e696687470fe6d7c1" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;pragma#pragma_data_version&quot;&gt;PRAGMA data_version&lt;/a&gt; command that can be used to determine if a database file has been modified by another process.</source>
          <target state="translated">添加了&lt;a href=&quot;pragma#pragma_data_version&quot;&gt;PRAGMA data_version&lt;/a&gt;命令，该命令可用于确定数据库文件是否已被另一个进程修改。</target>
        </trans-unit>
        <trans-unit id="6dc9cd4f3681e1d6bfff801310b10819f9c239c5" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;pragma#pragma_defer_foreign_keys&quot;&gt;defer_foreign_keys pragma&lt;/a&gt; and the &lt;a href=&quot;c3ref/db_status&quot;&gt;sqlite3_db_status&lt;/a&gt;(db, &lt;a href=&quot;c3ref/c_dbstatus_options#sqlitedbstatusdeferredfks&quot;&gt;SQLITE_DBSTATUS_DEFERRED_FKS&lt;/a&gt;,...) C-language interface.</source>
          <target state="translated">添加了&lt;a href=&quot;pragma#pragma_defer_foreign_keys&quot;&gt;defer_foreign_keys编译指示&lt;/a&gt;和&lt;a href=&quot;c3ref/db_status&quot;&gt;sqlite3_db_status&lt;/a&gt;（db，&lt;a href=&quot;c3ref/c_dbstatus_options#sqlitedbstatusdeferredfks&quot;&gt;SQLITE_DBSTATUS_DEFERRED_FKS&lt;/a&gt;，...）C语言界面。</target>
        </trans-unit>
        <trans-unit id="9260575fd05ff275b40b928c8ff145c26653a33b" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;pragma#pragma_foreign_key_check&quot;&gt;PRAGMA foreign_key_check&lt;/a&gt; command.</source>
          <target state="translated">添加了&lt;a href=&quot;pragma#pragma_foreign_key_check&quot;&gt;PRAGMA foreign_key_check&lt;/a&gt;命令。</target>
        </trans-unit>
        <trans-unit id="fd33bca500a56cb70a0e4189db705ce4c14918ef" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;pragma#pragma_index_xinfo&quot;&gt;PRAGMA index_xinfo&lt;/a&gt; command.</source>
          <target state="translated">添加了&lt;a href=&quot;pragma#pragma_index_xinfo&quot;&gt;PRAGMA index_xinfo&lt;/a&gt;命令。</target>
        </trans-unit>
        <trans-unit id="d2cb1ad431d49ff1624974b470ad507e7e6aade5" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;pragma#pragma_legacy_alter_table&quot;&gt;PRAGMA legacy_alter_table&lt;/a&gt; command, which if enabled causes the &lt;a href=&quot;lang_altertable&quot;&gt;ALTER TABLE&lt;/a&gt; command to behave like older version of SQLite (prior to version 3.25.0) for compatibility.</source>
          <target state="translated">添加了&lt;a href=&quot;pragma#pragma_legacy_alter_table&quot;&gt;PRAGMA legacy_alter_table&lt;/a&gt;命令，如果启用该命令，则会导致&lt;a href=&quot;lang_altertable&quot;&gt;ALTER TABLE&lt;/a&gt;命令的行为类似于旧版本的SQLite（3.25.0之前的版本），以实现兼容性。</target>
        </trans-unit>
        <trans-unit id="241f9aa0870d7629a649c6fcf7aff48add9bd27d" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;pragma#pragma_optimize&quot;&gt;PRAGMA optimize&lt;/a&gt; command</source>
          <target state="translated">添加了&lt;a href=&quot;pragma#pragma_optimize&quot;&gt;PRAGMA优化&lt;/a&gt;命令</target>
        </trans-unit>
        <trans-unit id="522f4f5023f50f82e4cb75d28460040b08ac77c8" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;pragma#pragma_page_count&quot;&gt;PRAGMA page_count&lt;/a&gt; command.</source>
          <target state="translated">添加了&lt;a href=&quot;pragma#pragma_page_count&quot;&gt;PRAGMA page_count&lt;/a&gt;命令。</target>
        </trans-unit>
        <trans-unit id="181f42a6c7e001d819f97d8ba8bb1793d0d0a062" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;pragma#pragma_page_count&quot;&gt;page_count&lt;/a&gt; PRAGMA for returning the size of the underlying database file in pages.</source>
          <target state="translated">添加了&lt;a href=&quot;pragma#pragma_page_count&quot;&gt;page_count&lt;/a&gt; PRAGMA，用于返回页面中基础数据库文件的大小。</target>
        </trans-unit>
        <trans-unit id="b0186fd0e400893a1b30b7508e00203dc47dcbd7" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;pragma#pragma_query_only&quot;&gt;query_only pragma&lt;/a&gt;.</source>
          <target state="translated">添加了&lt;a href=&quot;pragma#pragma_query_only&quot;&gt;query_only pragma&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8f14ae05567f16f27c2ce37117eaac6068a50a87" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;pragma#pragma_reverse_unordered_selects&quot;&gt;reverse_unordered_selects pragma&lt;/a&gt;.</source>
          <target state="translated">添加了&lt;a href=&quot;pragma#pragma_reverse_unordered_selects&quot;&gt;reverse_unordered_selects pragma&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0623635bd786359d5b3e0fa8a8c82ab7ea0f9a41" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;pragma#pragma_secure_delete&quot;&gt;PRAGMA secure_delete=FAST&lt;/a&gt; command. When secure_delete is set to FAST, old content is overwritten with zeros as long as that does not increase the amount of I/O. Deleted content might still persist on the &lt;a href=&quot;fileformat2#freelist&quot;&gt;free-page list&lt;/a&gt; but will be purged from all b-tree pages.</source>
          <target state="translated">添加了&lt;a href=&quot;pragma#pragma_secure_delete&quot;&gt;PRAGMA secure_delete = FAST&lt;/a&gt;命令。当secure_delete设置为FAST时，只要不增加I / O量，旧内容就会被零覆盖。删除的内容可能仍会保留在&lt;a href=&quot;fileformat2#freelist&quot;&gt;空闲页面列表中，&lt;/a&gt;但将从所有b树页面中清除。</target>
        </trans-unit>
        <trans-unit id="837b2abaf90eb53043c6e7f99d8293f985e4ea36" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;pragma#pragma_secure_delete&quot;&gt;secure_delete pragma&lt;/a&gt;.</source>
          <target state="translated">添加了&lt;a href=&quot;pragma#pragma_secure_delete&quot;&gt;secure_delete编译指示&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6ed2f465aa832c05e440067dd7bf41e8a2ea7c7d" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;pragma#pragma_soft_heap_limit&quot;&gt;soft_heap_limit pragma&lt;/a&gt;.</source>
          <target state="translated">添加了&lt;a href=&quot;pragma#pragma_soft_heap_limit&quot;&gt;soft_heap_limit杂注&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6aa4735afedc1efa7a8fd6ef84be33fe2ae0da0d" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;pragma#pragma_stats&quot;&gt;PRAGMA stats&lt;/a&gt; statement.</source>
          <target state="translated">添加了&lt;a href=&quot;pragma#pragma_stats&quot;&gt;PRAGMA stats&lt;/a&gt;语句。</target>
        </trans-unit>
        <trans-unit id="dda41fd88ccb8b6e627abcd4e0e1e198b532f161" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;pragma#pragma_vdbe_addoptrace&quot;&gt;PRAGMA vdbe_addoptrace&lt;/a&gt; and &lt;a href=&quot;pragma#pragma_vdbe_debug&quot;&gt;PRAGMA vdbe_debug&lt;/a&gt; commands.</source>
          <target state="translated">添加了&lt;a href=&quot;pragma#pragma_vdbe_addoptrace&quot;&gt;PRAGMA vdbe_addoptrace&lt;/a&gt;和&lt;a href=&quot;pragma#pragma_vdbe_debug&quot;&gt;PRAGMA vdbe_debug&lt;/a&gt;命令。</target>
        </trans-unit>
        <trans-unit id="eca68a9d9e7785e54f4fcfc001732202953d934a" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;psow&quot;&gt;powersafe overwrite&lt;/a&gt; property to the VFS interface. Provide the &lt;a href=&quot;c3ref/c_iocap_atomic&quot;&gt;SQLITE_IOCAP_POWERSAFE_OVERWRITE&lt;/a&gt; I/O capability, the &lt;a href=&quot;compile#powersafe_overwrite&quot;&gt;SQLITE_POWERSAFE_OVERWRITE&lt;/a&gt; compile-time option, and the &quot;psow=BOOLEAN&quot; query parameter for &lt;a href=&quot;uri&quot;&gt;URI filenames&lt;/a&gt;.</source>
          <target state="translated">向VFS接口添加了&lt;a href=&quot;psow&quot;&gt;powersafe覆盖&lt;/a&gt;属性。提供&lt;a href=&quot;c3ref/c_iocap_atomic&quot;&gt;SQLITE_IOCAP_POWERSAFE_OVERWRITE&lt;/a&gt; I / O功能，&lt;a href=&quot;compile#powersafe_overwrite&quot;&gt;SQLITE_POWERSAFE_OVERWRITE&lt;/a&gt;编译时选项以及&lt;a href=&quot;uri&quot;&gt;URI文件名&lt;/a&gt;的&amp;ldquo; psow = BOOLEAN&amp;rdquo;查询参数。</target>
        </trans-unit>
        <trans-unit id="04abd4bf7e803d987674de715233b44d21ad1237" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;rtree#rtreecheck&quot;&gt;rtreecheck()&lt;/a&gt; scalar SQL function to the &lt;a href=&quot;rtree&quot;&gt;R-Tree extension&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;rtree&quot;&gt;R-Tree扩展中&lt;/a&gt;添加了&lt;a href=&quot;rtree#rtreecheck&quot;&gt;rtreecheck（）&lt;/a&gt;标量SQL函数。</target>
        </trans-unit>
        <trans-unit id="bc105b8ec07cf1f35ee3a44ebcb504b698c185e2" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;rtree#xquery&quot;&gt;sqlite3_rtree_query_callback()&lt;/a&gt; interface to &lt;a href=&quot;rtree&quot;&gt;R-Tree extension&lt;/a&gt;</source>
          <target state="translated">在&lt;a href=&quot;rtree&quot;&gt;R-Tree扩展中&lt;/a&gt;添加了&lt;a href=&quot;rtree#xquery&quot;&gt;sqlite3_rtree_query_callback（）&lt;/a&gt;接口</target>
        </trans-unit>
        <trans-unit id="39750cb3b229cd41fd745ee42224961db3f0e9a9" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;session/c_changesetapply_invert&quot;&gt;SQLITE_CHANGESETAPPLY_INVERT&lt;/a&gt; flag</source>
          <target state="translated">添加了&lt;a href=&quot;session/c_changesetapply_invert&quot;&gt;SQLITE_CHANGESETAPPLY_INVERT&lt;/a&gt;标志</target>
        </trans-unit>
        <trans-unit id="be5c46b76747ab1af6431ca228fa917fafbc088c" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;session/sqlite3changeset_start&quot;&gt;sqlite3changeset_start_v2()&lt;/a&gt; interface and the &lt;a href=&quot;session/c_changesetstart_invert&quot;&gt;SQLITE_CHANGESETSTART_INVERT&lt;/a&gt; flag.</source>
          <target state="translated">添加了&lt;a href=&quot;session/sqlite3changeset_start&quot;&gt;sqlite3changeset_start_v2（）&lt;/a&gt;接口和&lt;a href=&quot;session/c_changesetstart_invert&quot;&gt;SQLITE_CHANGESETSTART_INVERT&lt;/a&gt;标志。</target>
        </trans-unit>
        <trans-unit id="bc1c498f90678af89842f0c30b1342851695eaf9" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;sqldiff&quot;&gt;sqldiff.exe&lt;/a&gt; utility program for computing the differences between two SQLite database files.</source>
          <target state="translated">添加了&lt;a href=&quot;sqldiff&quot;&gt;sqldiff.exe&lt;/a&gt;实用程序，用于计算两个SQLite数据库文件之间的差异。</target>
        </trans-unit>
        <trans-unit id="26e4d8fe0797614c479eea512419e56f330774a0" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;stmt&quot;&gt;SQLITE_STMT virtual table&lt;/a&gt; extension.</source>
          <target state="translated">添加了&lt;a href=&quot;stmt&quot;&gt;SQLITE_STMT虚拟表&lt;/a&gt;扩展。</target>
        </trans-unit>
        <trans-unit id="7141a7f71545fdc2d8f0941a70f5d692420e5873" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;tclsqlite&quot;&gt;TCL Interface&lt;/a&gt;&lt;a href=&quot;tclsqlite#config&quot;&gt;config method&lt;/a&gt; in order to be able to disable &lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfigenableview&quot;&gt;SQLITE_DBCONFIG_ENABLE_VIEW&lt;/a&gt; as well as control other &lt;a href=&quot;c3ref/db_config&quot;&gt;sqlite3_db_config()&lt;/a&gt; options from TCL.</source>
          <target state="translated">添加了&lt;a href=&quot;tclsqlite&quot;&gt;TCL接口&lt;/a&gt;&lt;a href=&quot;tclsqlite#config&quot;&gt;配置方法&lt;/a&gt;，以便能够禁用&lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfigenableview&quot;&gt;SQLITE_DBCONFIG_ENABLE_VIEW&lt;/a&gt;并从TCL 控制其他&lt;a href=&quot;c3ref/db_config&quot;&gt;sqlite3_db_config（）&lt;/a&gt;选项。</target>
        </trans-unit>
        <trans-unit id="3034d006b7d037b3012d84d49eab4202967372ce" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;unionvtab&quot;&gt;UNION virtual table&lt;/a&gt; extension.</source>
          <target state="translated">添加了&lt;a href=&quot;unionvtab&quot;&gt;UNION虚拟表&lt;/a&gt;扩展名。</target>
        </trans-unit>
        <trans-unit id="7d1fcdd4ec63f81664121b096c84af0efcd65365" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;vtab#colUsed&quot;&gt;colUsed field&lt;/a&gt; to &lt;a href=&quot;c3ref/index_info&quot;&gt;sqlite3_index_info&lt;/a&gt; for use by the &lt;a href=&quot;vtab#xbestindex&quot;&gt;sqlite3_module.xBestIndex&lt;/a&gt; method.</source>
          <target state="translated">在&lt;a href=&quot;c3ref/index_info&quot;&gt;sqlite3_index_info中&lt;/a&gt;添加了&lt;a href=&quot;vtab#colUsed&quot;&gt;colUsed字段，&lt;/a&gt;以供&lt;a href=&quot;vtab#xbestindex&quot;&gt;sqlite3_module.xBestIndex&lt;/a&gt;方法使用。</target>
        </trans-unit>
        <trans-unit id="abff860b551a8d132b543df75ebaabf23d9a1164" translate="yes" xml:space="preserve">
          <source>Added the &lt;b&gt;COPY&lt;/b&gt; command patterned after &lt;a href=&quot;http://www.postgresql.org/&quot;&gt;PostgreSQL&lt;/a&gt; so that SQLite can now read the output of the &lt;b&gt;pg_dump&lt;/b&gt; database dump utility of PostgreSQL.</source>
          <target state="translated">在&lt;a href=&quot;http://www.postgresql.org/&quot;&gt;PostgreSQL&lt;/a&gt;之后添加了模式化的&lt;b&gt;COPY&lt;/b&gt;命令，以便SQLite现在可以读取PostgreSQL 的&lt;b&gt;pg_dump&lt;/b&gt;数据库转储实用程序的输出。&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="2ec36615341dc38bdb68aeb378301ef629f771ca" translate="yes" xml:space="preserve">
          <source>Added the &lt;b&gt;COPY&lt;/b&gt; command patterned after &lt;a href=&quot;https://www.postgresql.org/&quot;&gt;PostgreSQL&lt;/a&gt; so that SQLite can now read the output of the &lt;b&gt;pg_dump&lt;/b&gt; database dump utility of PostgreSQL.</source>
          <target state="translated">在&lt;a href=&quot;https://www.postgresql.org/&quot;&gt;PostgreSQL&lt;/a&gt;之后添加了模式化的&lt;b&gt;COPY&lt;/b&gt;命令，以便SQLite现在可以读取PostgreSQL的&lt;b&gt;pg_dump&lt;/b&gt;数据库转储实用程序的输出。&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="e304ab36743ecbc720ac93786500ba376598ce88" translate="yes" xml:space="preserve">
          <source>Added the &lt;b&gt;LIKE&lt;/b&gt; operator.</source>
          <target state="translated">添加了&lt;b&gt;LIKE&lt;/b&gt;运算符。</target>
        </trans-unit>
        <trans-unit id="e12e3e86e8d93c49072339ca4e285a481d50fb9d" translate="yes" xml:space="preserve">
          <source>Added the &lt;b&gt;last_insert_rowid()&lt;/b&gt; SQL function.</source>
          <target state="translated">添加了&lt;b&gt;last_insert_rowid（）&lt;/b&gt; SQL函数。</target>
        </trans-unit>
        <trans-unit id="3193cf97b99861e9e104fce03f06019602ead587" translate="yes" xml:space="preserve">
          <source>Added the &lt;b&gt;sqlite_..._printf()&lt;/b&gt; interface routines.</source>
          <target state="translated">添加了&lt;b&gt;sqlite _..._ printf（）&lt;/b&gt;接口例程。</target>
        </trans-unit>
        <trans-unit id="043d356fd73cb171db8858f0f5622b884db88636" translate="yes" xml:space="preserve">
          <source>Added the &lt;b&gt;sqlite_busy_handler()&lt;/b&gt; and &lt;b&gt;sqlite_busy_timeout()&lt;/b&gt; interface.</source>
          <target state="translated">添加了&lt;b&gt;sqlite_busy_handler（）&lt;/b&gt;和&lt;b&gt;sqlite_busy_timeout（）&lt;/b&gt;接口。</target>
        </trans-unit>
        <trans-unit id="e9ea8f321d97c10573a695234e9878da4617c5e5" translate="yes" xml:space="preserve">
          <source>Added the &lt;b&gt;sqlite_changes()&lt;/b&gt; API function to return the number of row that changed in the most recent operation.</source>
          <target state="translated">添加了&lt;b&gt;sqlite_changes（）&lt;/b&gt; API函数，以返回最近一次操作中已更改的行数。</target>
        </trans-unit>
        <trans-unit id="b8527c0256e1df6259b3b96966c858732fd00e5f" translate="yes" xml:space="preserve">
          <source>Added the &lt;b&gt;sqlite_get_table()&lt;/b&gt; API</source>
          <target state="translated">添加了&lt;b&gt;sqlite_get_table（）&lt;/b&gt; API</target>
        </trans-unit>
        <trans-unit id="998f6cbca04b2d05276533a7914bab3fa482581f" translate="yes" xml:space="preserve">
          <source>Added the &lt;b&gt;sqlite_interrupt()&lt;/b&gt; interface.</source>
          <target state="translated">添加了&lt;b&gt;sqlite_interrupt（）&lt;/b&gt;接口。</target>
        </trans-unit>
        <trans-unit id="a71daae0bfba6e902831cbd84539462138fb543a" translate="yes" xml:space="preserve">
          <source>Added the &lt;b&gt;sqlite_open_aux_file()&lt;/b&gt; API, though it is still mostly undocumented and untested.</source>
          <target state="translated">添加了&lt;b&gt;sqlite_open_aux_file（）&lt;/b&gt; API，尽管该API大部分仍未记录和未经测试。</target>
        </trans-unit>
        <trans-unit id="04ac72f388de3cc88954c42e0e92ea3b9fd55074" translate="yes" xml:space="preserve">
          <source>Added the &lt;b&gt;sqlite_set_authorizer()&lt;/b&gt; API. Formal documentation has not been written - see the source code comments for instructions on how to use this function.</source>
          <target state="translated">添加了&lt;b&gt;sqlite_set_authorizer（）&lt;/b&gt; API。尚未编写正式文档-有关如何使用此功能的说明，请参见源代码注释。</target>
        </trans-unit>
        <trans-unit id="03c76f9466cfa8b45c7eef759eaf4885a10cbd2e" translate="yes" xml:space="preserve">
          <source>Added the &lt;em&gt;experimental&lt;/em&gt;&lt;a href=&quot;c3ref/snapshot_get&quot;&gt;sqlite3_snapshot_get()&lt;/a&gt;, &lt;a href=&quot;c3ref/snapshot_open&quot;&gt;sqlite3_snapshot_open()&lt;/a&gt;, and &lt;a href=&quot;c3ref/snapshot_free&quot;&gt;sqlite3_snapshot_free()&lt;/a&gt; interfaces. These are subject to change or removal in a subsequent release.</source>
          <target state="translated">添加了&lt;em&gt;实验性的&lt;/em&gt;&lt;a href=&quot;c3ref/snapshot_get&quot;&gt;sqlite3_snapshot_get（）&lt;/a&gt;，&lt;a href=&quot;c3ref/snapshot_open&quot;&gt;sqlite3_snapshot_open（）&lt;/a&gt;和&lt;a href=&quot;c3ref/snapshot_free&quot;&gt;sqlite3_snapshot_free（）&lt;/a&gt;接口。这些可能会在后续版本中更改或删除。</target>
        </trans-unit>
        <trans-unit id="cb8960036bc5202bda42674d6c0203a6bd0c46dd" translate="yes" xml:space="preserve">
          <source>Added the ANALYZE command for gathering statistics on indices and using those statistics when picking an index in the optimizer</source>
          <target state="translated">添加了 ANALYZE 命令,用于收集指数的统计数据,并在优化器中选择指数时使用这些统计数据。</target>
        </trans-unit>
        <trans-unit id="e76828fc2ef742c439bfc84df1818b198b243eeb" translate="yes" xml:space="preserve">
          <source>Added the ATTACH and DETACH commands to allow interacting with multiple database files at the same time.</source>
          <target state="translated">添加了ATTACH和DETACH命令,允许同时与多个数据库文件交互。</target>
        </trans-unit>
        <trans-unit id="648b7548b08d3433a571e65bdfcce48f0369af0b" translate="yes" xml:space="preserve">
          <source>Added the COUNT_CHANGES pragma.</source>
          <target state="translated">添加了COUNT_CHANGES pragma。</target>
        </trans-unit>
        <trans-unit id="0a82f263a7163cc945f7a54766155ffe5bad18eb" translate="yes" xml:space="preserve">
          <source>Added the EMPTY_RESULT_CALLBACKS pragma</source>
          <target state="translated">添加了 EMPTY_RESULT_CALLBACKS pragma。</target>
        </trans-unit>
        <trans-unit id="adf9996aa89891e17522dba8a3b313501dd38637" translate="yes" xml:space="preserve">
          <source>Added the ESCAPE clause on the LIKE operator.</source>
          <target state="translated">在 LIKE 操作符上添加了 ESCAPE 子句。</target>
        </trans-unit>
        <trans-unit id="f305242a3191cbfb5aec027e3852204245b42cf2" translate="yes" xml:space="preserve">
          <source>Added the FULL_COLUMN_NAMES pragma. When set to &quot;ON&quot;, the names of columns are reported back as TABLE.COLUMN instead of just COLUMN.</source>
          <target state="translated">添加了FULL_COLUMN_NAMES pragma。当设置为 &quot;ON &quot;时,列名将以TABLE.COLUMN的形式返回,而不仅仅是COLUMN。</target>
        </trans-unit>
        <trans-unit id="bc9f140f4e869766b8cc9921a38bfc1214b22f28" translate="yes" xml:space="preserve">
          <source>Added the SANITY_CHECK pragma.</source>
          <target state="translated">添加了SANITY_CHECK pragma。</target>
        </trans-unit>
        <trans-unit id="ab67de0b2fcd45ff0f66e746a10daf00336c46a1" translate="yes" xml:space="preserve">
          <source>Added the SQLITE_MIXED_ENDIAN_64BIT_FLOAT compile-time option to support ARM7 processors with goofy endianness.</source>
          <target state="translated">添加了 SQLITE_MIXED_ENDIAN_64BIT_FLOAT 编译时选项,以支持具有 goofy endianness 的 ARM7 处理器。</target>
        </trans-unit>
        <trans-unit id="8512503a8a6ee6ac4c42b6ec6960124aa1141343" translate="yes" xml:space="preserve">
          <source>Added the SQLITE_READONLY_ROLLBACK extended error code for when a database cannot be opened because it needs rollback recovery but is read-only.</source>
          <target state="translated">添加了SQLITE_READONLY_ROLLBACK扩展错误代码,用于当数据库因需要回滚恢复而无法打开时,但它是只读的。</target>
        </trans-unit>
        <trans-unit id="d860363ab44e2e09ecb05e55d177bb6e0cc5efda" translate="yes" xml:space="preserve">
          <source>Added the SQLITE_UINT64_TYPE compile-time option as an analog to SQLITE_INT64_TYPE.</source>
          <target state="translated">添加了 SQLITE_UINT64_TYPE 编译时选项,作为 SQLITE_INT64_TYPE 的模拟。</target>
        </trans-unit>
        <trans-unit id="0dc2a114a80ab21b7a59a0682328a2000b97132e" translate="yes" xml:space="preserve">
          <source>Added the SYNCHRONOUS pragma</source>
          <target state="translated">添加了SYNCHRONOUS pragma。</target>
        </trans-unit>
        <trans-unit id="f2840998df920dfd1ea272df7b05ff7b737d636e" translate="yes" xml:space="preserve">
          <source>Added the TABLE_INFO() and INDEX_INFO() pragmas to help support the ODBC interface.</source>
          <target state="translated">添加了 TABLE_INFO()和 INDEX_INFO()方法来帮助支持 ODBC 接口。</target>
        </trans-unit>
        <trans-unit id="55b81f73060b913ff9ec244fef4f2242a8077314" translate="yes" xml:space="preserve">
          <source>Added the TRUNCATE option to &lt;a href=&quot;pragma#pragma_journal_mode&quot;&gt;PRAGMA journal_mode&lt;/a&gt;</source>
          <target state="translated">在&lt;a href=&quot;pragma#pragma_journal_mode&quot;&gt;TRAGMA journal_mode中&lt;/a&gt;添加了TRUNCATE选项</target>
        </trans-unit>
        <trans-unit id="01a5050102a4554f6884185179621e32222f113e" translate="yes" xml:space="preserve">
          <source>Added the ability to &lt;a href=&quot;lang_vacuum&quot;&gt;VACUUM&lt;/a&gt; an &lt;a href=&quot;lang_attach&quot;&gt;ATTACH-ed&lt;/a&gt; database.</source>
          <target state="translated">添加了对&lt;a href=&quot;lang_attach&quot;&gt;ATTACH版本的&lt;/a&gt;数据库进行&lt;a href=&quot;lang_vacuum&quot;&gt;VACUUM&lt;/a&gt;的功能。</target>
        </trans-unit>
        <trans-unit id="06c38c134cf06def71bdb05238df7b454e3474fe" translate="yes" xml:space="preserve">
          <source>Added the ability to link against the &quot;&lt;a href=&quot;https://github.com/antirez/linenoise&quot;&gt;linenoise&lt;/a&gt;&quot; command-line editing library in unix builds of the &lt;a href=&quot;cli&quot;&gt;command-line shell&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;cli&quot;&gt;命令行shell的&lt;/a&gt; unix版本中添加了链接到&amp;ldquo; &lt;a href=&quot;https://github.com/antirez/linenoise&quot;&gt;linenoise&lt;/a&gt; &amp;rdquo;命令行编辑库的功能。</target>
        </trans-unit>
        <trans-unit id="64b8cf9d4fd6b2c51e94a6a6f014fcfd569e941f" translate="yes" xml:space="preserve">
          <source>Added the ability to resolve constraint conflicts is ways other than an abort and rollback. See the documentation on the &quot;ON CONFLICT&quot; clause for details.</source>
          <target state="translated">增加了解决约束冲突的能力,而不是中止和回滚。详情请看 &quot;ON CONFLICT &quot;子句的文档。</target>
        </trans-unit>
        <trans-unit id="f101692603c49e55897cc1b0a0872864ceef28cd" translate="yes" xml:space="preserve">
          <source>Added the ability to specify &quot;*&quot; as part of a larger column list in the result section of a SELECT statement. For example:</source>
          <target state="translated">增加了在SELECT语句的结果部分指定 &quot;*&quot;作为大列列表的一部分的功能。例如:</target>
        </trans-unit>
        <trans-unit id="9da37dd2277aa54e92101d7aa5cc21a4b4b41b35" translate="yes" xml:space="preserve">
          <source>Added the concatenate string operator (||)</source>
          <target state="translated">添加了字符串连接操作符(||)</target>
        </trans-unit>
        <trans-unit id="8781e73412ec3dcdbe8ddfaabe88ccd47d652415" translate="yes" xml:space="preserve">
          <source>Added the experimental &lt;a href=&quot;cli#expert&quot;&gt;.expert command&lt;/a&gt;</source>
          <target state="translated">添加了实验性&lt;a href=&quot;cli#expert&quot;&gt;.expert命令&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0fc342be926b0820e09fb4675d0d305018e3e35d" translate="yes" xml:space="preserve">
          <source>Added the experimental &lt;a href=&quot;fts5&quot;&gt;FTS5&lt;/a&gt; extension. Note that this extension is experimental and subject to change in incompatible ways.</source>
          <target state="translated">添加了实验性&lt;a href=&quot;fts5&quot;&gt;FTS5&lt;/a&gt;扩展。请注意，此扩展名是实验性的，并且可能以不兼容的方式进行更改。</target>
        </trans-unit>
        <trans-unit id="10d4e217a57507e7cf4bdc496b8ef5f7cdbf4429" translate="yes" xml:space="preserve">
          <source>Added the experimental &lt;a href=&quot;rbu&quot;&gt;RBU&lt;/a&gt; extension. Note that this extension is experimental and subject to change in incompatible ways.</source>
          <target state="translated">添加了实验性&lt;a href=&quot;rbu&quot;&gt;RBU&lt;/a&gt;扩展。请注意，此扩展名是实验性的，并且可能以不兼容的方式进行更改。</target>
        </trans-unit>
        <trans-unit id="3dd32bd379fd1ee1dbe9dd7bcac2b99d55f0988b" translate="yes" xml:space="preserve">
          <source>Added the experimental and undocumented EXPLAIN QUERY PLAN capability</source>
          <target state="translated">增加了实验性的、未被记录的EXPLAIN QUERY PLAN功能。</target>
        </trans-unit>
        <trans-unit id="bbf7af11f593a05578593b77e950de9d08708237" translate="yes" xml:space="preserve">
          <source>Added the experimental malloc-free memory allocator in mem3.c.</source>
          <target state="translated">在 mem3.c 中添加了实验性的 malloc-free 内存分配器。</target>
        </trans-unit>
        <trans-unit id="5c30e3baaca4fbdcfb24a460d6ac28afed94f059" translate="yes" xml:space="preserve">
          <source>Added the fcnt() function to the SQL interpreter. The fcnt() function returns the number of database &quot;Fetch&quot; operations that have occurred. This function is designed for use in test scripts to verify that queries are efficient and appropriately optimized. Fcnt() has no other useful purpose, as far as I know.</source>
          <target state="translated">在SQL解释器中添加了fcnt()函数。fcnt()函数返回已经发生的数据库 &quot;Fetch &quot;操作的次数。这个函数是为了在测试脚本中使用,以验证查询的效率和适当的优化。据我所知,fcnt()没有其他有用的用途。</target>
        </trans-unit>
        <trans-unit id="7a58a2fc5a5367d63f94f8275791e299dd75eb74" translate="yes" xml:space="preserve">
          <source>Added the fsdir(PATH) &lt;a href=&quot;vtab#tabfunc2&quot;&gt;table-valued function&lt;/a&gt; to the &lt;a href=&quot;https://sqlite.org/src/file/ext/misc/fileio.c&quot;&gt;fileio.c&lt;/a&gt; extension, for listing the files in a directory.</source>
          <target state="translated">在&lt;a href=&quot;https://sqlite.org/src/file/ext/misc/fileio.c&quot;&gt;fileio.c&lt;/a&gt;扩展名中添加了fsdir（PATH）&lt;a href=&quot;vtab#tabfunc2&quot;&gt;表值函数&lt;/a&gt;，用于列出目录中的文件。</target>
        </trans-unit>
        <trans-unit id="17d23ff1e41223a23eed74ee1f278a16171c0953" translate="yes" xml:space="preserve">
          <source>Added the fullfsync pragma.</source>
          <target state="translated">添加了 fullfsync pragma。</target>
        </trans-unit>
        <trans-unit id="c8e37096ddd5586a6257d3283c3c1a2dfcb73ea7" translate="yes" xml:space="preserve">
          <source>Added the new &lt;a href=&quot;c3ref/stmt_isexplain&quot;&gt;sqlite3_stmt_isexplain(S)&lt;/a&gt; interface for determining whether or not a &lt;a href=&quot;c3ref/stmt&quot;&gt;prepared statement&lt;/a&gt; is an &lt;a href=&quot;lang_explain&quot;&gt;EXPLAIN&lt;/a&gt;.</source>
          <target state="translated">添加了新的&lt;a href=&quot;c3ref/stmt_isexplain&quot;&gt;sqlite3_stmt_isexplain（S）&lt;/a&gt;接口，用于确定已&lt;a href=&quot;c3ref/stmt&quot;&gt;准备好的语句&lt;/a&gt;是否为&lt;a href=&quot;lang_explain&quot;&gt;EXPLAIN&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4d5a2b0e9f488226eecba61aa448d45b4ae4e1d9" translate="yes" xml:space="preserve">
          <source>Added the new &lt;a href=&quot;tclsqlite#bind_fallback&quot;&gt;bind_fallback method&lt;/a&gt;.</source>
          <target state="translated">添加了新的&lt;a href=&quot;tclsqlite#bind_fallback&quot;&gt;bind_fallback方法&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="698d2bae74641dc2312ecf24ccb34bdaf37e3654" translate="yes" xml:space="preserve">
          <source>Added the new &lt;b&gt;SQLITE_TEMP_MASTER&lt;/b&gt; table which records the schema for temporary tables in the same way that &lt;b&gt;SQLITE_MASTER&lt;/b&gt; does for persistent tables.</source>
          <target state="translated">添加了新的&lt;b&gt;SQLITE_TEMP_MASTER&lt;/b&gt;表，该表以与&lt;b&gt;SQLITE_MASTER&lt;/b&gt;对永久表相同的方式记录临时表的模式。</target>
        </trans-unit>
        <trans-unit id="f8314265965cb9729309aa3a47d77b4ebbd0dc84" translate="yes" xml:space="preserve">
          <source>Added the new &lt;b&gt;sqlite_last_insert_rowid()&lt;/b&gt; API function.</source>
          <target state="translated">添加了新的&lt;b&gt;sqlite_last_insert_rowid（）&lt;/b&gt; API函数。</target>
        </trans-unit>
        <trans-unit id="f36e59151eae3a6b62bf13680d5957b9ac83ad96" translate="yes" xml:space="preserve">
          <source>Added the new interface &lt;a href=&quot;c3ref/free&quot;&gt;sqlite3_msize()&lt;/a&gt; that returns the size of a memory allocation obtained from &lt;a href=&quot;c3ref/free&quot;&gt;sqlite3_malloc64()&lt;/a&gt; and its variants.</source>
          <target state="translated">添加了新接口&lt;a href=&quot;c3ref/free&quot;&gt;sqlite3_msize（）&lt;/a&gt;，该接口返回从&lt;a href=&quot;c3ref/free&quot;&gt;sqlite3_malloc64（）&lt;/a&gt;及其变体获取的内存分配的大小。</target>
        </trans-unit>
        <trans-unit id="49d6fc07cdd58d69c1061156379f31f91815e6f2" translate="yes" xml:space="preserve">
          <source>Added the new sqlite3_bind_parameter_name() interface.</source>
          <target state="translated">添加了新的 sqlite3_bind_parameter_name()接口。</target>
        </trans-unit>
        <trans-unit id="294074eb5cc5a602340ff9920845209bc774b64a" translate="yes" xml:space="preserve">
          <source>Added the optional &lt;a href=&quot;asyncvfs&quot;&gt;asynchronous VFS&lt;/a&gt; module.</source>
          <target state="translated">添加了可选的&lt;a href=&quot;asyncvfs&quot;&gt;异步VFS&lt;/a&gt;模块。</target>
        </trans-unit>
        <trans-unit id="d2ff57d315c3b6f550eb4477360be1d9ece1af4e" translate="yes" xml:space="preserve">
          <source>Added the remove_diacritics=2 option to &lt;a href=&quot;fts3&quot;&gt;FTS3&lt;/a&gt; and &lt;a href=&quot;fts5&quot;&gt;FTS5&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;fts3&quot;&gt;FTS3&lt;/a&gt;和&lt;a href=&quot;fts5&quot;&gt;FTS5中&lt;/a&gt;添加了remove_diacritics = 2选项。</target>
        </trans-unit>
        <trans-unit id="5543829232c2352604477be7d98b18681931c4e6" translate="yes" xml:space="preserve">
          <source>Added the sqlite3_db_handle() API</source>
          <target state="translated">添加了 sqlite3_db_handle()API。</target>
        </trans-unit>
        <trans-unit id="31ca3dd4e3255f6b9042e4416d3da3cdbcd74a82" translate="yes" xml:space="preserve">
          <source>Added the sqlite3_get_autocommit() API</source>
          <target state="translated">添加了 sqlite3_get_autocommit()API。</target>
        </trans-unit>
        <trans-unit id="01da972e948cd498d37d659567824ec295b8ab3b" translate="yes" xml:space="preserve">
          <source>Added the sqlite_encode_binary() and sqlite_decode_binary() functions to the source tree. But they are not yet linked into the library.</source>
          <target state="translated">在源代码树中添加了 sqlite_encode_binary()和 sqlite_decode_binary()函数。但它们还没有被链接到库中。</target>
        </trans-unit>
        <trans-unit id="4b7931525b0f49699c8919c663442c12cd2042a1" translate="yes" xml:space="preserve">
          <source>Added the subquery flattening optimizer.</source>
          <target state="translated">增加了子查询扁平化优化器。</target>
        </trans-unit>
        <trans-unit id="c7b7e1fb260a3da09d3b883f4ceb3d8fea98b06f" translate="yes" xml:space="preserve">
          <source>Added the test_multiplex.c module which provides an example VFS that provides multiplexing (sharding) of a DB, splitting it over multiple files of fixed size.</source>
          <target state="translated">添加了test_multiplex.c模块,该模块提供了一个VFS的例子,它提供了一个DB的多路复用(sharding),将其分割在多个固定大小的文件上。</target>
        </trans-unit>
        <trans-unit id="ae0013cb7d834fd47edf840654f5d38cdca51233" translate="yes" xml:space="preserve">
          <source>Added the test_regexp.c module as a demonstration of how to implement the REGEXP operator.</source>
          <target state="translated">添加了 test_regexp.c 模块,作为实现 REGEXP 操作符的示范。</target>
        </trans-unit>
        <trans-unit id="32a49834c953fbdb6828ba126355f3f55173d44b" translate="yes" xml:space="preserve">
          <source>Added the test_superlock.c module which provides example code for obtaining an exclusive lock to a rollback or WAL database.</source>
          <target state="translated">添加了 test_superlock.c 模块,该模块提供了获取回滚或 WAL 数据库独占锁的示例代码。</target>
        </trans-unit>
        <trans-unit id="09972935bcd9fee093e7ba1782e40d68896023ca" translate="yes" xml:space="preserve">
          <source>Added the win32-longpath VFS on windows, permitting filenames up to 32K characters in length.</source>
          <target state="translated">在windows上添加了win32-longpath VFS,允许文件名长度达到32K字符。</target>
        </trans-unit>
        <trans-unit id="f94f686ce38728ef2b6f0370975b863c680811c8" translate="yes" xml:space="preserve">
          <source>Added the xGetLastError() method to &lt;a href=&quot;c3ref/vfs&quot;&gt;sqlite3_vfs&lt;/a&gt; for returning filesystem-specific error messages and error codes back to SQLite.</source>
          <target state="translated">向&lt;a href=&quot;c3ref/vfs&quot;&gt;sqlite3_vfs&lt;/a&gt;添加了xGetLastError（）方法，用于将特定于文件系统的错误消息和错误代码返回给SQLite。</target>
        </trans-unit>
        <trans-unit id="7f5e4ed0c375fbca2b5b605896122a1929784c92" translate="yes" xml:space="preserve">
          <source>Added two new C-language interfaces: &lt;a href=&quot;c3ref/expanded_sql&quot;&gt;sqlite3_expanded_sql()&lt;/a&gt; and &lt;a href=&quot;c3ref/trace_v2&quot;&gt;sqlite3_trace_v2()&lt;/a&gt;. These new interfaces subsume the functions of &lt;a href=&quot;c3ref/profile&quot;&gt;sqlite3_trace()&lt;/a&gt; and &lt;a href=&quot;c3ref/profile&quot;&gt;sqlite3_profile()&lt;/a&gt; which are now deprecated.</source>
          <target state="translated">添加了两个新的C语言接口：&lt;a href=&quot;c3ref/expanded_sql&quot;&gt;sqlite3_expanded_sql（）&lt;/a&gt;和&lt;a href=&quot;c3ref/trace_v2&quot;&gt;sqlite3_trace_v2（）&lt;/a&gt;。这些新接口包含了现在不推荐使用的&lt;a href=&quot;c3ref/profile&quot;&gt;sqlite3_trace（）&lt;/a&gt;和&lt;a href=&quot;c3ref/profile&quot;&gt;sqlite3_profile（）&lt;/a&gt;函数。</target>
        </trans-unit>
        <trans-unit id="82207d09f92cb6fda6e84b7a4f36383b773b1975" translate="yes" xml:space="preserve">
          <source>Added two new experimental functions: &lt;a href=&quot;lang_expr#randomblobFunc&quot;&gt;randomBlob()&lt;/a&gt; and &lt;a href=&quot;lang_expr#hexFunc&quot;&gt;hex()&lt;/a&gt;. Their intended use is to facilitate generating &lt;a href=&quot;http://en.wikipedia.org/wiki/UUID&quot;&gt;UUIDs&lt;/a&gt;.</source>
          <target state="translated">添加了两个新的实验功能：&lt;a href=&quot;lang_expr#randomblobFunc&quot;&gt;randomBlob（）&lt;/a&gt;和&lt;a href=&quot;lang_expr#hexFunc&quot;&gt;hex（）&lt;/a&gt;。它们的预期用途是促进生成&lt;a href=&quot;http://en.wikipedia.org/wiki/UUID&quot;&gt;UUID&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7c1c5da60c72cd7dd716e96a41cd29972af22c5c" translate="yes" xml:space="preserve">
          <source>Added two new experimental functions: &lt;a href=&quot;lang_expr#randomblobFunc&quot;&gt;randomBlob()&lt;/a&gt; and &lt;a href=&quot;lang_expr#hexFunc&quot;&gt;hex()&lt;/a&gt;. Their intended use is to facilitate generating &lt;a href=&quot;https://en.wikipedia.org/wiki/UUID&quot;&gt;UUIDs&lt;/a&gt;.</source>
          <target state="translated">添加了两个新的实验功能：&lt;a href=&quot;lang_expr#randomblobFunc&quot;&gt;randomBlob（）&lt;/a&gt;和&lt;a href=&quot;lang_expr#hexFunc&quot;&gt;hex（）&lt;/a&gt;。它们的预期用途是促进生成&lt;a href=&quot;https://en.wikipedia.org/wiki/UUID&quot;&gt;UUID&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="738e6cc3217ca2553bb9e0d6d54a155cd0ad0e85" translate="yes" xml:space="preserve">
          <source>Added verbs &lt;a href=&quot;c3ref/c_status_malloc_count#sqlitestatuspagecachesize&quot;&gt;SQLITE_STATUS_PAGECACHE_SIZE&lt;/a&gt; and &lt;a href=&quot;c3ref/c_status_malloc_count#sqlitestatusscratchsize&quot;&gt;SQLITE_STATUS_SCRATCH_SIZE&lt;/a&gt; to the &lt;a href=&quot;c3ref/status&quot;&gt;sqlite3_status()&lt;/a&gt; interface.</source>
          <target state="translated">向&lt;a href=&quot;c3ref/status&quot;&gt;sqlite3_status（）&lt;/a&gt;接口添加了动词&lt;a href=&quot;c3ref/c_status_malloc_count#sqlitestatuspagecachesize&quot;&gt;SQLITE_STATUS_PAGECACHE_SIZE&lt;/a&gt;和&lt;a href=&quot;c3ref/c_status_malloc_count#sqlitestatusscratchsize&quot;&gt;SQLITE_STATUS_SCRATCH_SIZE&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c680515f169f90f11c5dd355902aaea8ab7434ee" translate="yes" xml:space="preserve">
          <source>Adding anything to null gives null</source>
          <target state="translated">在null上添加任何东西都会得到null</target>
        </trans-unit>
        <trans-unit id="fb59cdfe69dfa59c552601b0c1f3bb462cce88b5" translate="yes" xml:space="preserve">
          <source>Adding new auxiliary functions implemented in C, and</source>
          <target state="translated">增加用C语言实现的新辅助函数,以及</target>
        </trans-unit>
        <trans-unit id="f056b3609aae2fc232cd7cd2146d49c24a7d20cd" translate="yes" xml:space="preserve">
          <source>Adding new tokenizers, also implemented in C.</source>
          <target state="translated">增加新的标记器,也是用C语言实现的。</target>
        </trans-unit>
        <trans-unit id="6889504fdc32a6b06fe8b6bcc4bddeee9d4dd115" translate="yes" xml:space="preserve">
          <source>Adding optional features like &lt;a href=&quot;compile#enable_json1&quot;&gt;-DSQLITE_ENABLE_JSON1&lt;/a&gt;, &lt;a href=&quot;compile#enable_fts5&quot;&gt;-DSQLITE_ENABLE_FTS5&lt;/a&gt;, or &lt;a href=&quot;compile#enable_rtree&quot;&gt;-DSQLITE_ENABLE_RTREE&lt;/a&gt; will increase the size of the library, obviously.</source>
          <target state="translated">添加可选功能&lt;a href=&quot;compile#enable_json1&quot;&gt;-DSQLITE_ENABLE_JSON1&lt;/a&gt;，&lt;a href=&quot;compile#enable_fts5&quot;&gt;-DSQLITE_ENABLE_FTS5&lt;/a&gt;或&lt;a href=&quot;compile#enable_rtree&quot;&gt;-DSQLITE_ENABLE_RTREE显然&lt;/a&gt;会增加库的大小。</target>
        </trans-unit>
        <trans-unit id="96d5a0933a519ba202a444bedd7df31dcc598d63" translate="yes" xml:space="preserve">
          <source>Adding to Zip</source>
          <target state="translated">添加到邮编</target>
        </trans-unit>
        <trans-unit id="c1cc55a80b36a00837a2ba9fccba63e4cde092d5" translate="yes" xml:space="preserve">
          <source>Additional OS/2 updates</source>
          <target state="translated">其他OS/2更新</target>
        </trans-unit>
        <trans-unit id="92dafa949d6bc0b1375a028d351e58c914e80e5e" translate="yes" xml:space="preserve">
          <source>Additional application-specific collating functions can be added to SQLite using the &lt;a href=&quot;c3ref/create_collation&quot;&gt;sqlite3_create_collation()&lt;/a&gt; interface.</source>
          <target state="translated">可以使用&lt;a href=&quot;c3ref/create_collation&quot;&gt;sqlite3_create_collat​​ion（）&lt;/a&gt;接口将其他特定于应用程序的整理功能添加到SQLite 。</target>
        </trans-unit>
        <trans-unit id="f27c7e9f8642590f605d8547ee9d3195fc42ee26" translate="yes" xml:space="preserve">
          <source>Additional background information is available in the &lt;a href=&quot;queryplanner&quot;&gt;indexing tutorial&lt;/a&gt; document.</source>
          <target state="translated">&lt;a href=&quot;queryplanner&quot;&gt;索引教程&lt;/a&gt;文档中提供了其他背景信息。</target>
        </trans-unit>
        <trans-unit id="26005506e7fe80738695bc038f726957b22b2e7d" translate="yes" xml:space="preserve">
          <source>Additional bits may be added in future versions of SQLite.</source>
          <target state="translated">在未来的SQLite版本中可能会增加额外的位。</target>
        </trans-unit>
        <trans-unit id="2c99c8da41f3c9e92b76081bdd22fd42577b1a01" translate="yes" xml:space="preserve">
          <source>Additional documentation is available &lt;a href=&quot;cli&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">其他文档可&lt;a href=&quot;cli&quot;&gt;在此处获得&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="00b84c5eeb4233a176f6bc28e3bd04baf2d28fa4" translate="yes" xml:space="preserve">
          <source>Additional documentation on Fossil can be found at &lt;a href=&quot;https://fossil-scm.org/fossil/doc/trunk/www/permutedindex.html&quot;&gt;https://fossil-scm.org/fossil/doc/trunk/www/permutedindex.html&lt;/a&gt;</source>
          <target state="translated">有关化石的其他文档可以在&lt;a href=&quot;https://fossil-scm.org/fossil/doc/trunk/www/permutedindex.html&quot;&gt;https://fossil-scm.org/fossil/doc/trunk/www/permutedindex.html&lt;/a&gt;上找到</target>
        </trans-unit>
        <trans-unit id="317e6d6c624cc48cb4d511774ceb090affd1ec71" translate="yes" xml:space="preserve">
          <source>Additional fixes for issues detected by &lt;a href=&quot;https://github.com/google/oss-fuzz&quot;&gt;OSSFuzz&lt;/a&gt;:</source>
          <target state="translated">针对&lt;a href=&quot;https://github.com/google/oss-fuzz&quot;&gt;OSSFuzz&lt;/a&gt;检测到的问题的其他修复：</target>
        </trans-unit>
        <trans-unit id="911a0b354b810ade1b41221cd419095a4767144e" translate="yes" xml:space="preserve">
          <source>Additional information</source>
          <target state="translated">其他信息</target>
        </trans-unit>
        <trans-unit id="92a863bb50cbb4e362af4fa066e5c6af932cb4b2" translate="yes" xml:space="preserve">
          <source>Additional information about datatypes in SQLite version 3.0 is available &lt;a href=&quot;datatype3&quot;&gt;separately&lt;/a&gt;.</source>
          <target state="translated">有关SQLite 3.0版中数据类型的其他信息可&lt;a href=&quot;datatype3&quot;&gt;单独获得&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3ec1e59a22ef60dce4ecbbf53a52e3ca6ce479f4" translate="yes" xml:space="preserve">
          <source>Additional information about each of these temporary file types is in the sequel.</source>
          <target state="translated">关于这些临时文件类型的其他信息在续篇中。</target>
        </trans-unit>
        <trans-unit id="86d1a81241f56a80c6f10677f29019f00a708f3e" translate="yes" xml:space="preserve">
          <source>Additional information is provided in the &lt;a href=&quot;optoverview&quot;&gt;SQLite query planner&lt;/a&gt; and &lt;a href=&quot;queryplanner-ng&quot;&gt;next generation query planner&lt;/a&gt; documents.</source>
          <target state="translated">&lt;a href=&quot;optoverview&quot;&gt;SQLite查询计划程序&lt;/a&gt;和&lt;a href=&quot;queryplanner-ng&quot;&gt;下一代查询计划程序&lt;/a&gt;文档中提供了其他信息。</target>
        </trans-unit>
        <trans-unit id="e54fe371689214dc8e5e5e621b7eb86aecf9d56f" translate="yes" xml:space="preserve">
          <source>Additional language codes might be added in future releases.</source>
          <target state="translated">在未来的版本中可能会增加其他语言代码。</target>
        </trans-unit>
        <trans-unit id="3fd6df38d5642afc4cf37656b0d1bca445886b04" translate="yes" xml:space="preserve">
          <source>Additional notes on compiling SQLite can be found on the &lt;a href=&quot;howtocompile&quot;&gt;How To Compile SQLite&lt;/a&gt; page.</source>
          <target state="translated">有关&lt;a href=&quot;howtocompile&quot;&gt;如何编译SQLite的&lt;/a&gt;其他说明，请参见&amp;ldquo; 如何编译SQLite&amp;rdquo;页面。</target>
        </trans-unit>
        <trans-unit id="e4ec2f0b6cbf4bf0e81b4a109aa98e3ffbd4166d" translate="yes" xml:space="preserve">
          <source>Additional notes:</source>
          <target state="translated">补充说明:</target>
        </trans-unit>
        <trans-unit id="332472b920f973dc311033ff008ad95ae21f625e" translate="yes" xml:space="preserve">
          <source>Additional speed-up can occur if an index can be used to speed the search of either or the two loops.</source>
          <target state="translated">如果可以使用索引来加快其中一个或两个循环的搜索速度,则会出现额外的加速。</target>
        </trans-unit>
        <trans-unit id="62327a6c1f64cd300d626d84824c24a7457822b7" translate="yes" xml:space="preserve">
          <source>Additional tests added to the regression suite to cover the new ROWID feature and the TCL interface bugs mentioned below.</source>
          <target state="translated">在回归套件中添加了额外的测试,以覆盖新的ROWID功能和下面提到的TCL接口错误。</target>
        </trans-unit>
        <trans-unit id="654733e6ef7698fde15afb843bdcb55e4a4bdac2" translate="yes" xml:space="preserve">
          <source>Additionally, all VFS implementations are required to provide the</source>
          <target state="translated">此外,所有的VFS实现都必须提供以下功能。</target>
        </trans-unit>
        <trans-unit id="751381c740adf479c5b317c56d4dbca83d940699" translate="yes" xml:space="preserve">
          <source>Additionally, five extra &lt;a href=&quot;vfs&quot;&gt;VFS&lt;/a&gt; implementations are provided as well as the default. By specifying one of the extra VFS implementations when calling &lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open_v2()&lt;/a&gt;, an application may bypass the file-system detection logic and explicitly select one of the above locking styles. The five extra &lt;a href=&quot;vfs&quot;&gt;VFS&lt;/a&gt; implementations are called &quot;unix-posix&quot;, &quot;unix-afp&quot;, &quot;unix-flock&quot;, &quot;unix-dotfile&quot; and &quot;unix-none&quot;.</source>
          <target state="translated">此外，还提供了五个额外的&lt;a href=&quot;vfs&quot;&gt;VFS&lt;/a&gt;实施以及默认实施。通过在调用&lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open_v2（）&lt;/a&gt;时指定一种额外的VFS实现，应用程序可以绕过文件系统检测逻辑，并明确选择上述锁定样式之一。这五个额外的&lt;a href=&quot;vfs&quot;&gt;VFS&lt;/a&gt;实现称为&amp;ldquo; unix-posix&amp;rdquo;，&amp;ldquo; unix-afp&amp;rdquo;，&amp;ldquo; unix-flock&amp;rdquo;，&amp;ldquo; unix-dotfile&amp;rdquo;和&amp;ldquo; unix-none&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="9c0db46574ddb3c258907307bfcb277854bd98be" translate="yes" xml:space="preserve">
          <source>Additionally, if xBestIndex sets the SQLITE_INDEX_SCAN_UNIQUE flag, then SQLite also assumes that if a call to the xUpdate() method is made as part of the same statement to delete or update a virtual table row and the implementation returns SQLITE_CONSTRAINT, then there is no need to rollback any database changes. In other words, if the xUpdate() returns SQLITE_CONSTRAINT, the database contents must be exactly as they were before xUpdate was called. By contrast, if SQLITE_INDEX_SCAN_UNIQUE is not set and xUpdate returns SQLITE_CONSTRAINT, any database changes made by the xUpdate method are automatically rolled back by SQLite.</source>
          <target state="translated">此外,如果xBestIndex设置了SQLITE_INDEX_SCAN_UNIQUE标志,那么SQLite还认为,如果调用xUpdate()方法作为删除或更新虚拟表行的同一语句的一部分,并且实现返回SQLITE_CONSTRAINT,那么就不需要回滚任何数据库更改。换句话说,如果xUpdate()返回SQLITE_CONSTRAINT,那么数据库内容必须与xUpdate被调用之前的内容完全一样。相反,如果没有设置SQLITE_INDEX_SCAN_UNIQUE,并且xUpdate返回SQLITE_CONSTRAINT,那么由xUpdate方法所做的任何数据库更改都会被SQLite自动回滚。</target>
        </trans-unit>
        <trans-unit id="bd3296bcc9f5f36b885d1f44a772cfcd7df89079" translate="yes" xml:space="preserve">
          <source>Additionally, the result of the comparison is only valid if both of the snapshot handles were obtained by calling sqlite3_snapshot_get() since the last time the wal file was deleted. The wal file is deleted when the database is changed back to rollback mode or when the number of database clients drops to zero. If either snapshot handle was obtained before the wal file was last deleted, the value returned by this function is undefined.</source>
          <target state="translated">另外,只有当两个快照句柄都是在上次删除wal文件后调用sqlite3_snapshot_get()获得的,比较的结果才有效。当数据库被改回回滚模式或数据库客户端数量降为零时,wal文件会被删除。如果任何一个快照句柄是在最后一次删除wal文件之前获得的,那么这个函数返回的值是未定义的。</target>
        </trans-unit>
        <trans-unit id="68ad616133628f7a9c711f524c6d649bfd1e605e" translate="yes" xml:space="preserve">
          <source>Adjust how SQLite does &lt;a href=&quot;malloc&quot;&gt;memory allocation&lt;/a&gt;, including setting up alternative memory allocators appropriate for safety-critical real-time embedded systems and application-defined memory allocators.</source>
          <target state="translated">调整SQLite进行&lt;a href=&quot;malloc&quot;&gt;内存分配的方式&lt;/a&gt;，包括设置适用于安全关键的实时嵌入式系统和应用程序定义的内存分配器的备用内存分配器。</target>
        </trans-unit>
        <trans-unit id="6b033ae4a69004f4620434e4722184d64e21543d" translate="yes" xml:space="preserve">
          <source>Adjust the &lt;a href=&quot;c3ref/column_count&quot;&gt;sqlite3_column_count()&lt;/a&gt; API so it more often returns the same values for &lt;a href=&quot;pragma#syntax&quot;&gt;PRAGMA&lt;/a&gt; statements as it did in prior releases, to minimize disruption to applications that might be using that interface in unexpected ways.</source>
          <target state="translated">调整&lt;a href=&quot;c3ref/column_count&quot;&gt;sqlite3_column_count（）&lt;/a&gt; API，使其更经常返回&lt;a href=&quot;pragma#syntax&quot;&gt;PRAGMA&lt;/a&gt;语句的值，与以前的版本中的值相同，以最大程度地减少对可能以意外方式使用该接口的应用程序的破坏。</target>
        </trans-unit>
        <trans-unit id="af76f40123a61e61c36534a28bc6944e29327620" translate="yes" xml:space="preserve">
          <source>Adjust the unix driver to avoid unnecessary calls to fchown().</source>
          <target state="translated">调整unix驱动以避免不必要的fchown()调用。</target>
        </trans-unit>
        <trans-unit id="8d239da6b2ab732b6958736d4e5cb3d6007246c9" translate="yes" xml:space="preserve">
          <source>Adjust the use of mutexes so that they are appropriate for various &lt;a href=&quot;threadsafe&quot;&gt;threading models&lt;/a&gt;, or substitute an application-defined mutex system.</source>
          <target state="translated">调整互斥锁的使用，以使其适合各种&lt;a href=&quot;threadsafe&quot;&gt;线程模型&lt;/a&gt;，或替换应用程序定义的互斥锁系统。</target>
        </trans-unit>
        <trans-unit id="94f5fc3d9b3cb240294c036969ed03df2f640df3" translate="yes" xml:space="preserve">
          <source>Adjusting SQLite To Use 8+3 Filenames</source>
          <target state="translated">调整SQLite以使用8+3文件名</target>
        </trans-unit>
        <trans-unit id="42bff9e6720c99e5345613da344a0c1afa8b6dd4" translate="yes" xml:space="preserve">
          <source>Advance A Changeset Iterator</source>
          <target state="translated">推进一个变化集迭代器</target>
        </trans-unit>
        <trans-unit id="5e8ccba8f1392a8bc7c3e697913930b9040f8c60" translate="yes" xml:space="preserve">
          <source>Advance cursor P1 so that it points to the next key/data pair in its table or index. If there are no more key/value pairs then fall through to the following instruction. But if the cursor advance was successful, jump immediately to P2.</source>
          <target state="translated">推进光标P1,使其指向表或索引中的下一个键/数据对。如果没有更多的键/值对,则落入下一条指令。但如果光标前进成功,则立即跳到P2。</target>
        </trans-unit>
        <trans-unit id="26c9571278da3b45a7da23cbb5f3d294d51fc11e" translate="yes" xml:space="preserve">
          <source>Advance virtual table P1 to the next row in its result set and jump to instruction P2. Or, if the virtual table has reached the end of its result set, then fall through to the next instruction.</source>
          <target state="translated">将虚拟表P1推进到其结果集中的下一行,然后跳转到指令P2。或者,如果虚拟表已经到达其结果集的终点,则跳到下一条指令。</target>
        </trans-unit>
        <trans-unit id="e75e53f7ef6befbc2ec9555564b368fec377a5b4" translate="yes" xml:space="preserve">
          <source>Advantages of WAL-mode</source>
          <target state="translated">WAL模式的优势</target>
        </trans-unit>
        <trans-unit id="b8c612cc4e584be10a59711cc94c098821d2bdc6" translate="yes" xml:space="preserve">
          <source>Advocacy</source>
          <target state="translated">Advocacy</target>
        </trans-unit>
        <trans-unit id="2d3ad1756a210c3ecab852144ac9d98890b977fa" translate="yes" xml:space="preserve">
          <source>Affinity</source>
          <target state="translated">Affinity</target>
        </trans-unit>
        <trans-unit id="3b044120cd8e868bafac52b1f7cf9fb9852b7110" translate="yes" xml:space="preserve">
          <source>Affinity is applied to operands of a comparison operator prior to the comparison according to the following rules in the order shown:</source>
          <target state="translated">亲和力是在比较操作符的操作数之前,按照以下规则按所示顺序应用于比较。</target>
        </trans-unit>
        <trans-unit id="4f72807708b980eccee8200e07c7d36460820a43" translate="yes" xml:space="preserve">
          <source>Affinity of</source>
          <target state="translated">亲和力</target>
        </trans-unit>
        <trans-unit id="79ba5e1b3f99abfd54ef8d839ba12bd2ac4d79cb" translate="yes" xml:space="preserve">
          <source>After</source>
          <target state="translated">After</target>
        </trans-unit>
        <trans-unit id="23fd162046b3edf8ebd248698454f109bfd31f63" translate="yes" xml:space="preserve">
          <source>After ADD COLUMN has been run on a database, that database will not be readable by SQLite version 3.1.3 (2005-02-20) and earlier.</source>
          <target state="translated">在数据库上运行ADD COLUMN后,该数据库将无法被SQLite 3.1.3(2005-02-20)及以前的版本读取。</target>
        </trans-unit>
        <trans-unit id="027a417d23e6a18069001a7c19ad2bf39267a70e" translate="yes" xml:space="preserve">
          <source>After a &lt;a href=&quot;#sqlite3_stmt&quot;&gt;prepared statement&lt;/a&gt; has been prepared using any of &lt;a href=&quot;#sqlite3_prepare&quot;&gt;sqlite3_prepare_v2()&lt;/a&gt;, &lt;a href=&quot;#sqlite3_prepare&quot;&gt;sqlite3_prepare_v3()&lt;/a&gt;, &lt;a href=&quot;#sqlite3_prepare&quot;&gt;sqlite3_prepare16_v2()&lt;/a&gt;, or &lt;a href=&quot;#sqlite3_prepare&quot;&gt;sqlite3_prepare16_v3()&lt;/a&gt; or one of the legacy interfaces &lt;a href=&quot;#sqlite3_prepare&quot;&gt;sqlite3_prepare()&lt;/a&gt; or &lt;a href=&quot;#sqlite3_prepare&quot;&gt;sqlite3_prepare16()&lt;/a&gt;, this function must be called one or more times to evaluate the statement.</source>
          <target state="translated">使用&lt;a href=&quot;#sqlite3_prepare&quot;&gt;sqlite3_prepare_v2（）&lt;/a&gt;，&lt;a href=&quot;#sqlite3_prepare&quot;&gt;sqlite3_prepare_v3（）&lt;/a&gt;，&lt;a href=&quot;#sqlite3_prepare&quot;&gt;sqlite3_prepare16_v2（）&lt;/a&gt;或&lt;a href=&quot;#sqlite3_prepare&quot;&gt;sqlite3_prepare16_v3（）&lt;/a&gt;或旧接口之一&lt;a href=&quot;#sqlite3_prepare&quot;&gt;sqlite3_prepare（）&lt;/a&gt;或&lt;a href=&quot;#sqlite3_prepare&quot;&gt;sqlite3_prepare16（）&lt;/a&gt;&lt;a href=&quot;#sqlite3_stmt&quot;&gt;编写准备好的语句&lt;/a&gt;后，必须将此函数调用一次或多次评价陈述。</target>
        </trans-unit>
        <trans-unit id="b4eec0463aaa1bd6eacaf86174eef649dd73f26c" translate="yes" xml:space="preserve">
          <source>After a &lt;a href=&quot;c3ref/stmt&quot;&gt;prepared statement&lt;/a&gt; has been evaluated by one or more calls to &lt;a href=&quot;c3ref/step&quot;&gt;sqlite3_step()&lt;/a&gt;, it can be reset in order to be evaluated again by a call to &lt;a href=&quot;c3ref/reset&quot;&gt;sqlite3_reset()&lt;/a&gt;. Think of &lt;a href=&quot;c3ref/reset&quot;&gt;sqlite3_reset()&lt;/a&gt; as rewinding the &lt;a href=&quot;c3ref/stmt&quot;&gt;prepared statement&lt;/a&gt; program back to the beginning. Using &lt;a href=&quot;c3ref/reset&quot;&gt;sqlite3_reset()&lt;/a&gt; on an existing &lt;a href=&quot;c3ref/stmt&quot;&gt;prepared statement&lt;/a&gt; rather than creating a new &lt;a href=&quot;c3ref/stmt&quot;&gt;prepared statement&lt;/a&gt; avoids unnecessary calls to &lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare()&lt;/a&gt;. For many SQL statements, the time needed to run &lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare()&lt;/a&gt; equals or exceeds the time needed by &lt;a href=&quot;c3ref/step&quot;&gt;sqlite3_step()&lt;/a&gt;. So avoiding calls to &lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare()&lt;/a&gt; can give a significant performance improvement.</source>
          <target state="translated">在通过一次或多次调用&lt;a href=&quot;c3ref/step&quot;&gt;sqlite3_step（）&lt;/a&gt;评估&lt;a href=&quot;c3ref/stmt&quot;&gt;准备好的语句&lt;/a&gt;后，可以重置该语句以便通过调用&lt;a href=&quot;c3ref/reset&quot;&gt;sqlite3_reset（）&lt;/a&gt;再次对其进行评估。将&lt;a href=&quot;c3ref/reset&quot;&gt;sqlite3_reset（）&lt;/a&gt;视为将&lt;a href=&quot;c3ref/stmt&quot;&gt;准备好的语句&lt;/a&gt;程序倒回开始。在现有的&lt;a href=&quot;c3ref/stmt&quot;&gt;准备好的语句&lt;/a&gt;上使用&lt;a href=&quot;c3ref/reset&quot;&gt;sqlite3_reset（）&lt;/a&gt;而不是创建新的&lt;a href=&quot;c3ref/stmt&quot;&gt;准备好的语句&lt;/a&gt;可以避免对&lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare（）的&lt;/a&gt;不必要调用。对于许多SQL语句，运行&lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare（）&lt;/a&gt;所需的时间等于或超过&lt;a href=&quot;c3ref/step&quot;&gt;sqlite3_step（）&lt;/a&gt;所需的时间。因此避免拨打&lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare（）&lt;/a&gt;可以显着提高性能。</target>
        </trans-unit>
        <trans-unit id="794711e92b4cb710edd2459f0377567195dd4b41" translate="yes" xml:space="preserve">
          <source>After a &lt;a href=&quot;stmt&quot;&gt;prepared statement&lt;/a&gt; has been prepared using any of &lt;a href=&quot;prepare&quot;&gt;sqlite3_prepare_v2()&lt;/a&gt;, &lt;a href=&quot;prepare&quot;&gt;sqlite3_prepare_v3()&lt;/a&gt;, &lt;a href=&quot;prepare&quot;&gt;sqlite3_prepare16_v2()&lt;/a&gt;, or &lt;a href=&quot;prepare&quot;&gt;sqlite3_prepare16_v3()&lt;/a&gt; or one of the legacy interfaces &lt;a href=&quot;prepare&quot;&gt;sqlite3_prepare()&lt;/a&gt; or &lt;a href=&quot;prepare&quot;&gt;sqlite3_prepare16()&lt;/a&gt;, this function must be called one or more times to evaluate the statement.</source>
          <target state="translated">使用&lt;a href=&quot;prepare&quot;&gt;sqlite3_prepare_v2（）&lt;/a&gt;，&lt;a href=&quot;prepare&quot;&gt;sqlite3_prepare_v3（）&lt;/a&gt;，&lt;a href=&quot;prepare&quot;&gt;sqlite3_prepare16_v2（）&lt;/a&gt;或&lt;a href=&quot;prepare&quot;&gt;sqlite3_prepare16_v3（）&lt;/a&gt;或旧接口之一&lt;a href=&quot;prepare&quot;&gt;sqlite3_prepare（）&lt;/a&gt;或&lt;a href=&quot;prepare&quot;&gt;sqlite3_prepare16（）&lt;/a&gt;&lt;a href=&quot;stmt&quot;&gt;编写准备好的语句&lt;/a&gt;后，必须将此函数调用一次或多次评价陈述。</target>
        </trans-unit>
        <trans-unit id="610a52e97ff3ecd7651d2bc9d61eca8fe0a8d8a9" translate="yes" xml:space="preserve">
          <source>After a call to &lt;a href=&quot;c3ref/step&quot;&gt;sqlite3_step()&lt;/a&gt; or &lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare_v2()&lt;/a&gt; returns SQLITE_LOCKED, the &lt;a href=&quot;c3ref/unlock_notify&quot;&gt;sqlite3_unlock_notify()&lt;/a&gt; API may be invoked to register for an unlock-notify callback. The unlock-notify callback is invoked by SQLite after the database connection holding the table-lock that prevented the call to &lt;a href=&quot;c3ref/step&quot;&gt;sqlite3_step()&lt;/a&gt; or &lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare_v2()&lt;/a&gt; from succeeding has finished its transaction and released all locks. For example, if a call to sqlite3_step() is an attempt to read from table X, and some other connection Y is holding a write-lock on table X, then sqlite3_step() will return SQLITE_LOCKED. If &lt;a href=&quot;c3ref/unlock_notify&quot;&gt;sqlite3_unlock_notify()&lt;/a&gt; is then called, the unlock-notify callback will be invoked after connection Y's transaction is concluded. The connection that the unlock-notify callback is waiting on, in this case connection Y, is known as the &quot;blocking connection&quot;.</source>
          <target state="translated">在对&lt;a href=&quot;c3ref/step&quot;&gt;sqlite3_step（）&lt;/a&gt;或&lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare_v2（）&lt;/a&gt;的调用返回SQLITE_LOCKED之后，可以调用&lt;a href=&quot;c3ref/unlock_notify&quot;&gt;sqlite3_unlock_notify（）&lt;/a&gt; API来注册解锁通知回调。持有表锁的数据库连接阻止了成功调用&lt;a href=&quot;c3ref/step&quot;&gt;sqlite3_step（）&lt;/a&gt;或&lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare_v2（）&lt;/a&gt;的事务完成并释放了所有锁之后，SQLite会调用SQLite调用unlock-notify回调。例如，如果对sqlite3_step（）的调用是尝试从表X读取的，并且某个其他连接Y对表X持有写锁定，则sqlite3_step（）将返回SQLITE_LOCKED。如果&lt;a href=&quot;c3ref/unlock_notify&quot;&gt;sqlite3_unlock_notify（）&lt;/a&gt;然后调用，在连接Y的事务结束后将调用unlock-notify回调。解锁通知回调正在等待的连接（在这种情况下为连接Y）称为&amp;ldquo;阻塞连接&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="4986de5057c6d05cb0ea3a0ad2727b5d055cdc6f" translate="yes" xml:space="preserve">
          <source>After a complete checkpoint, if no other connections are in transactions that use the WAL, then subsequent write transactions can overwrite the WAL file from the beginning. This is called &quot;resetting the WAL&quot;. At the start of the first new write transaction, the WAL header salt-1 value is incremented and the salt-2 value is randomized. These changes to the salts invalidate old frames in the WAL that have already been checkpointed but not yet overwritten, and prevent them from being checkpointed again.</source>
          <target state="translated">在一个完整的检查点之后,如果在使用WAL的事务中没有其他连接,那么后续的写事务可以从头开始覆盖WAL文件。这就是所谓的 &quot;重置WAL&quot;。在第一个新的写事务开始时,WAL头salt-1值会递增,salt-2值会随机化。这些盐值的变化会使WAL中已经被检查点但尚未被覆盖的旧帧无效,并防止它们再次被检查点。</target>
        </trans-unit>
        <trans-unit id="6b922aacb69272f39bced66a3ebf0a3033c1514f" translate="yes" xml:space="preserve">
          <source>After a database is closed, swarmvtab runs the equivalent of:</source>
          <target state="translated">在数据库关闭后,swarmvtab运行相当于。</target>
        </trans-unit>
        <trans-unit id="95563154fa733438ac343e5b67e301f468c45088" translate="yes" xml:space="preserve">
          <source>After a sequence of changes that define a single undo/redo step, invoke the undo::barrier command to define the limit of that step. In an interactive program, you can call undo::event after any change and undo::barrier will be called automatically as an idle callback.</source>
          <target state="translated">在一连串定义了单个撤销/重做步骤的更改之后,调用 undo::barrier 命令来定义该步骤的限制。在交互式程序中,您可以在任何更改后调用 undo::event,undo::barrier 将作为空闲回调自动调用。</target>
        </trans-unit>
        <trans-unit id="9ba37aebce03d74bebd4ab72ce08d7281954335c" translate="yes" xml:space="preserve">
          <source>After a session object has been configured, it begins monitoring for changes to its configured tables. However, it does not record an entire change each time a row within the database is modified. Instead, it records just the PRIMARY KEY fields for each inserted row, and just the PRIMARY KEY and all original row values for any updated or deleted rows. If a row is modified more than once by a single session, no new information is recorded.</source>
          <target state="translated">在配置了会话对象后,它开始监视其配置的表的变化。然而,每次修改数据库中的一条记录时,它并不会记录整个变化。相反,它只记录每条插入的行的PRIMARY KEY字段,以及任何更新或删除的行的PRIMARY KEY和所有原始行值。如果一条行被一个会话修改超过一次,则不会记录新的信息。</target>
        </trans-unit>
        <trans-unit id="b9ec21719ff7b0d3ffa4e429b7905254f04d4e5c" translate="yes" xml:space="preserve">
          <source>After a virtual machine has been generated using &lt;b&gt;sqlite_compile&lt;/b&gt; it is executed by one or more calls to &lt;b&gt;sqlite_step&lt;/b&gt;. Each invocation of &lt;b&gt;sqlite_step&lt;/b&gt;, except the last one, returns a single row of the result. The number of columns in the result is stored in the integer that the 2nd parameter points to. The pointer specified by the 3rd parameter is made to point to an array of pointers to column values. The pointer in the 4th parameter is made to point to an array of pointers to column names and datatypes. The 2nd through 4th parameters to &lt;b&gt;sqlite_step&lt;/b&gt; convey the same information as the 2nd through 4th parameters of the &lt;b&gt;callback&lt;/b&gt; routine when using the &lt;b&gt;sqlite_exec&lt;/b&gt; interface. Except, with &lt;b&gt;sqlite_step&lt;/b&gt; the column datatype information is always included in the in the 4th parameter regardless of whether or not the &lt;a href=&quot;pragma#pragma_show_datatypes&quot;&gt;SHOW_DATATYPES&lt;/a&gt; pragma is on or off.</source>
          <target state="translated">后的虚拟机已经使用产生&lt;b&gt;sqlite_compile&lt;/b&gt;它是由一个或多个调用，以执行&lt;b&gt;sqlite_step&lt;/b&gt;。除最后一次调用&lt;b&gt;之外&lt;/b&gt;，每次调用&lt;b&gt;sqlite_step都会&lt;/b&gt;返回结果的单行。结果中的列数以第二个参数指向的整数存储。使第3个参数指定的指针指向指向列值的指针数组。使第4个参数中的指针指向指向列名和数据类型的指针的数组。通过4参数到第二&lt;b&gt;sqlite_step&lt;/b&gt;传达了相同的信息，通过的第四参数的第二个&lt;b&gt;回调&lt;/b&gt;使用时例行&lt;b&gt;sqlite_exec&lt;/b&gt;接口。除了，用&lt;b&gt;sqlite_step&lt;/b&gt;列数据类型信息始终包含在第4个参数中，而不管&lt;a href=&quot;pragma#pragma_show_datatypes&quot;&gt;SHOW_DATATYPES&lt;/a&gt;编译指示是打开还是关闭。</target>
        </trans-unit>
        <trans-unit id="23265bf656595ac1bd3eabed0b381392ce07d2ae" translate="yes" xml:space="preserve">
          <source>After all information in the rollback journal has been played back into the database file (and flushed to disk in case we encounter yet another power failure), the hot rollback journal can be deleted.</source>
          <target state="translated">当回滚日志中的所有信息都被回放到数据库文件中后(并刷新到磁盘上,以防再次遇到电源故障),可以删除热回滚日志。</target>
        </trans-unit>
        <trans-unit id="b84435139a07c4a4055bb439605dbd8c9789e7d7" translate="yes" xml:space="preserve">
          <source>After all needed changes are completed, xWrite() is used to move the content back into the database file. Hence the use of memory mapped I/O does not significantly change the performance of database changes. Memory mapped I/O is mostly a benefit for queries.</source>
          <target state="translated">在所有需要的更改完成后,xWrite()用于将内容移回数据库文件中。因此,使用内存映射的I/O并不会显著改变数据库更改的性能。内存映射的I/O主要是对查询的好处。</target>
        </trans-unit>
        <trans-unit id="260239065f2a92ea494a87b7cf4ba2a2d941420e" translate="yes" xml:space="preserve">
          <source>After all records have been inserted into the Sorter object identified by P1, invoke this opcode to actually do the sorting. &lt;a href=&quot;opcode#Jump&quot;&gt;Jump&lt;/a&gt; to P2 if there are no records to be sorted.</source>
          <target state="translated">将所有记录插入到由P1标识的Sorter对象中之后，调用此操作码以实际进行排序。如果没有要排序的记录，请&lt;a href=&quot;opcode#Jump&quot;&gt;跳至&lt;/a&gt; P2。</target>
        </trans-unit>
        <trans-unit id="f3fc80e50134d3edb76d5d844058ab5382b20cae" translate="yes" xml:space="preserve">
          <source>After all rows are processed the countFinalize() routine is called exactly once. This routine computes the final result and invokes one of the &lt;a href=&quot;c3ref/result_blob&quot;&gt;sqlite3_result()&lt;/a&gt; family of functions to set the final result. The aggregate context will be freed automatically by SQLite, though the xFinalize() routine must clean up any substructure associated with the aggregate context before it returns. If the xStep() method is called one or more times, then SQLite guarantees thta the xFinal() method will be called at once, even if the query aborts.</source>
          <target state="translated">在处理完所有行之后，countFinalize（）例程仅被调用一次。该例程计算最终结果，并调用&lt;a href=&quot;c3ref/result_blob&quot;&gt;sqlite3_result（）&lt;/a&gt;函数家族之一来设置最终结果。聚合上下文将由SQLite自动释放，尽管xFinalize（）例程必须在返回之前清除与聚合上下文关联的所有子结构。如果xStep（）方法被调用了一次或多次，则SQLite保证即使查询中止，xFinal（）方法也会被立即调用。</target>
        </trans-unit>
        <trans-unit id="1079dc3c758cc45d2f271e573db223c2cdb12648" translate="yes" xml:space="preserve">
          <source>After an SQL statement has been prepared (and optionally bound), it is executed using:</source>
          <target state="translated">在准备好一条SQL语句(以及可选择的绑定)后,使用。</target>
        </trans-unit>
        <trans-unit id="19e517dcca2fb3c783a27c4dacd0285a95c871db" translate="yes" xml:space="preserve">
          <source>After any changes to the TEMP database schema, all prepared statements are invalidated and must be recreated using a new call to sqlite3_prepare()</source>
          <target state="translated">在对腾博会登录数据库模式进行任何修改后,所有准备好的语句都会失效,必须使用新的对sqlite3_prepare()的调用来重新创建。</target>
        </trans-unit>
        <trans-unit id="ef8dfe7bdc91c90b1d784f46b505207e5b5bb9de" translate="yes" xml:space="preserve">
          <source>After duplicating the key, the next instruction, NotExists, pops the stack once and uses the value popped as a key to check the existence of a record in the database file. If there is no record for this key, it jumps back to the ListRead to get another key.</source>
          <target state="translated">复制完key后,下一条指令NotExists会弹出一次堆栈,用弹出的值作为key来检查数据库文件中是否存在记录。如果这个键没有记录,就会跳回ListRead去获取另一个键。</target>
        </trans-unit>
        <trans-unit id="838513ea0f9681d04eb27d7879229c002b821a85" translate="yes" xml:space="preserve">
          <source>After each INSERT on ex1, the ex1_it trigger constructs text of a DELETE statement that will undo the INSERT. The ex1_ut trigger constructs an UPDATE statement that will undo the effects of an UPDATE. And the ex1_dt trigger constructs a statement that will undo the effects of a DELETE.</source>
          <target state="translated">在ex1上的每次INSERT之后,ex1_it触发器构造DELETE语句的文本,将撤销INSERT。ex1_ut触发器构造一条UPDATE语句,将撤销UPDATE的效果。而ex1_dt触发器构造一条语句,将撤销DELETE的效果。</target>
        </trans-unit>
        <trans-unit id="126fa1adfbc14e51e51271a3d3ed7613c3632f33" translate="yes" xml:space="preserve">
          <source>After gcov has been run to verify 100% branch test coverage, then the test program is recompiled using delivery compiler options (without the special -fprofile-arcs and -ftest-coverage options) and the test program is rerun. This second run is the actual test of SQLite.</source>
          <target state="translated">运行gcov验证100%分支测试覆盖率后,再使用交付编译器选项(不使用特殊的-fprofile-arcs和-ftest-coverage选项)重新编译测试程序,重新运行测试程序。这第二次运行是SQLite的实际测试。</target>
        </trans-unit>
        <trans-unit id="db8afe929b966e405547381b33bfdc15bcc08124" translate="yes" xml:space="preserve">
          <source>After obtaining a RESERVED lock, the process that wants to write creates a rollback journal. The header of the journal is initialized with the original size of the database file. Space in the journal header is also reserved for a master journal name, though the master journal name is initially empty.</source>
          <target state="translated">在获得RESERVED锁后,要写的进程会创建一个回滚日志。日志头以数据库文件的原始大小初始化。日志头还为主日志名保留了空间,尽管主日志名最初是空的。</target>
        </trans-unit>
        <trans-unit id="6274aa024e5dcdb153f9792763e691d72ddb17d5" translate="yes" xml:space="preserve">
          <source>After obtaining a RESERVED lock, the process that wants to write creates a rollback journal. The header of the journal is initialized with the original size of the database file. Space in the journal header is also reserved for a super-journal name, though the super-journal name is initially empty.</source>
          <target state="translated">在获得RESERVED锁后,要写的进程会创建一个回滚日志。日志头以数据库文件的原始大小进行初始化。日志头中还为超级日志名称预留了空间,不过超级日志名称最初是空的。</target>
        </trans-unit>
        <trans-unit id="1634d30fc252b255d4609b96665517fdcea9fa73" translate="yes" xml:space="preserve">
          <source>After process-wide configuration is complete and &lt;a href=&quot;c3ref/sqlite3&quot;&gt;database connections&lt;/a&gt; have been created, individual database connections can be configured using calls to &lt;a href=&quot;c3ref/limit&quot;&gt;sqlite3_limit()&lt;/a&gt; and &lt;a href=&quot;c3ref/db_config&quot;&gt;sqlite3_db_config()&lt;/a&gt;.</source>
          <target state="translated">处理范围内的配置完成并且之后&lt;a href=&quot;c3ref/sqlite3&quot;&gt;数据库连接&lt;/a&gt;已经建立，从个人数据库连接可使用的呼叫进行配置&lt;a href=&quot;c3ref/limit&quot;&gt;sqlite3_limit（）&lt;/a&gt;和&lt;a href=&quot;c3ref/db_config&quot;&gt;sqlite3_db_config（） &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3999670e271fa814391d216ed801ffd36e68c0e2" translate="yes" xml:space="preserve">
          <source>After reading the data for a database page, SQLite stores the raw page of data in the</source>
          <target state="translated">读取数据库页面的数据后,SQLite将原始页面的数据存储于</target>
        </trans-unit>
        <trans-unit id="f403207f2b4b981533796c7ad5f8378ebe08c950" translate="yes" xml:space="preserve">
          <source>After resolving conflicts, many users like to compile and test the new version before committing it to the repository. Or you can commit first and test later. Either way, run the &quot;&lt;code&gt;fossil commit&lt;/code&gt;&quot; command to check-in the circle (5) version.</source>
          <target state="translated">解决冲突后，许多用户喜欢在将新版本提交到存储库之前对其进行编译和测试。或者，您可以先提交然后再测试。无论哪种方式，都可以运行&amp;ldquo; &lt;code&gt;fossil commit&lt;/code&gt; &amp;rdquo;命令来检入圆圈（5）版本。</target>
        </trans-unit>
        <trans-unit id="c63b949f4e88ad0a023a0bdd59afe48dabc17031" translate="yes" xml:space="preserve">
          <source>After running the CREATE TABLE statement, disable the imposter mechanism as follows:</source>
          <target state="translated">在运行CREATE TABLE语句后,禁用冒名顶替机制的方法如下。</target>
        </trans-unit>
        <trans-unit id="538eea92ccc130ef6b680c0e55263bee066d1733" translate="yes" xml:space="preserve">
          <source>After successfully opening a file-handle on a potentially hot journal file, SQLite shall query the file for its size in bytes using the xFileSize() method of the open file handle.</source>
          <target state="translated">在成功打开一个潜在热日志文件的文件句柄后,SQLite应使用打开文件句柄的xFileSize()方法查询该文件的字节大小。</target>
        </trans-unit>
        <trans-unit id="8fbe2d1674af788e8343a14ee7a4129b26ca4886" translate="yes" xml:space="preserve">
          <source>After the</source>
          <target state="translated">后</target>
        </trans-unit>
        <trans-unit id="f2360cfd6cf46af06ac709eb02497e9aff167465" translate="yes" xml:space="preserve">
          <source>After the algorithm above completes successfully, it is safe to read from the database file. Once all reading has completed, the SHARED lock is dropped.</source>
          <target state="translated">以上算法成功完成后,就可以安全地从数据库文件中读取。当所有的读取完成后,SHARED锁就会被丢弃。</target>
        </trans-unit>
        <trans-unit id="157772fcdfe2470be92e77475005f7ac0b098542" translate="yes" xml:space="preserve">
          <source>After the application has finished with the result from sqlite3_get_table(), it must pass the result table pointer to sqlite3_free_table() in order to release the memory that was malloced. Because of the way the &lt;a href=&quot;#sqlite3_free&quot;&gt;sqlite3_malloc()&lt;/a&gt; happens within sqlite3_get_table(), the calling function must not try to call &lt;a href=&quot;#sqlite3_free&quot;&gt;sqlite3_free()&lt;/a&gt; directly. Only &lt;a href=&quot;#sqlite3_free_table&quot;&gt;sqlite3_free_table()&lt;/a&gt; is able to release the memory properly and safely.</source>
          <target state="translated">应用程序完成来自sqlite3_get_table（）的结果后，它必须将结果表指针传递给sqlite3_free_table（）才能释放已分配的内存。由于&lt;a href=&quot;#sqlite3_free&quot;&gt;sqlite3_malloc（）&lt;/a&gt;在sqlite3_get_table（）中发生的方式，调用函数不得尝试直接调用&lt;a href=&quot;#sqlite3_free&quot;&gt;sqlite3_free（）&lt;/a&gt;。只有&lt;a href=&quot;#sqlite3_free_table&quot;&gt;sqlite3_free_table（）&lt;/a&gt;才能正确安全地释放内存。</target>
        </trans-unit>
        <trans-unit id="9c64408a8164063ed860f68818eaa546c62a346e" translate="yes" xml:space="preserve">
          <source>After the application has finished with the result from sqlite3_get_table(), it must pass the result table pointer to sqlite3_free_table() in order to release the memory that was malloced. Because of the way the &lt;a href=&quot;free&quot;&gt;sqlite3_malloc()&lt;/a&gt; happens within sqlite3_get_table(), the calling function must not try to call &lt;a href=&quot;free&quot;&gt;sqlite3_free()&lt;/a&gt; directly. Only &lt;a href=&quot;free_table&quot;&gt;sqlite3_free_table()&lt;/a&gt; is able to release the memory properly and safely.</source>
          <target state="translated">应用程序完成来自sqlite3_get_table（）的结果后，它必须将结果表指针传递给sqlite3_free_table（）才能释放已分配的内存。由于&lt;a href=&quot;free&quot;&gt;sqlite3_malloc（）&lt;/a&gt;在sqlite3_get_table（）中发生的方式，调用函数不得尝试直接调用&lt;a href=&quot;free&quot;&gt;sqlite3_free（）&lt;/a&gt;。只有&lt;a href=&quot;free_table&quot;&gt;sqlite3_free_table（）&lt;/a&gt;才能正确安全地释放内存。</target>
        </trans-unit>
        <trans-unit id="af39ba2343efa84bf5f79d3192cc7d9b779717a4" translate="yes" xml:space="preserve">
          <source>After the database changes are all safely on the mass storage device, the rollback journal file is deleted. This is the instant where the transaction commits. If a power failure or system crash occurs prior to this point, then recovery processes to be described later make it appear as if no changes were ever made to the database file. If a power failure or system crash occurs after the rollback journal is deleted, then it appears as if all changes have been written to disk. Thus, SQLite gives the appearance of having made no changes to the database file or having made the complete set of changes to the database file depending on whether or not the rollback journal file exists.</source>
          <target state="translated">当数据库的更改都安全地保存在大容量存储设备上后,回滚日志文件被删除。这就是事务提交的瞬间。如果在这之前发生了电源故障或系统崩溃,那么后面描述的恢复过程将使它看起来好像没有对数据库文件进行过任何更改。如果电源故障或系统崩溃发生在回滚日志被删除之后,那么看起来好像所有的更改都被写入了磁盘。因此,SQLite会根据回滚日志文件是否存在,给人一种没有对数据库文件做任何更改或对数据库文件做了全套更改的感觉。</target>
        </trans-unit>
        <trans-unit id="8bb7688984c453ad2bc60e9833b1d02d648b8f95" translate="yes" xml:space="preserve">
          <source>After the header and zero padding are zero or more page records. Each page record stores a copy of the content of a page from the database file before it was changed. The same page may not appear more than once within a single rollback journal. To rollback an incomplete transaction, a process has merely to read the rollback journal from beginning to end and write pages found in the journal back into the database file at the appropriate location.</source>
          <target state="translated">在页眉和零填充之后是零条或多条页面记录。每条页面记录都存储了更改前数据库文件中页面内容的副本。同一页面在一个回滚日志中不能出现超过一次。要回滚一个不完整的事务,一个进程只需从头到尾读取回滚日志,并将日志中发现的页面写回数据库文件的适当位置。</target>
        </trans-unit>
        <trans-unit id="4bc35438aded45e22aeee0454d230e53ab207bab" translate="yes" xml:space="preserve">
          <source>After the imposter table is loaded into SQLite's internal schema as described above, the imposter table can be used as any other table. But the imposter table will only be visible to the one database connection that created it. No changes are made to the database file on disk. And the imposter table will disappear the next time the schema is loaded.</source>
          <target state="translated">当冒名表如上所述被加载到SQLite的内部模式后,冒名表可以像其他任何表一样使用。但冒名表将只对创建它的一个数据库连接可见。不会对磁盘上的数据库文件进行任何修改。而且在下次加载模式时,冒名表将消失。</target>
        </trans-unit>
        <trans-unit id="6fb2487148ee10be0a40ce759f7c45930d397db5" translate="yes" xml:space="preserve">
          <source>After the master journal is constructed, its content is flushed to disk before any further actions are taken. On Unix, the directory that contains the master journal is also synced in order to make sure the master journal file will appear in the directory following a power failure.</source>
          <target state="translated">主日志构建完成后,在采取任何进一步的行动之前,其内容会被刷新到磁盘上。在Unix上,包含主日志的目录也要同步,以确保主日志文件在断电后出现在该目录中。</target>
        </trans-unit>
        <trans-unit id="93f402b283ab865f9a9eb59bcf905d302373fd8f" translate="yes" xml:space="preserve">
          <source>After the original page content has been saved in the rollback journal, the pages can be modified in user memory. Each database connection has its own private copy of user space, so the changes that are made in user space are only visible to the database connection that is making the changes. Other database connections still see the information in operating system disk cache buffers which have not yet been changed. And so even though one process is busy modifying the database, other processes can continue to read their own copies of the original database content.</source>
          <target state="translated">原页面内容保存在回滚日志中后,可以在用户内存中修改页面。每个数据库连接都有自己私有的用户空间副本,所以在用户空间中所做的修改只有正在进行修改的数据库连接才能看到。其他数据库连接仍然可以看到操作系统磁盘缓存缓冲区中尚未被修改的信息。所以即使一个进程忙着修改数据库,其他进程也可以继续读取自己的原始数据库内容副本。</target>
        </trans-unit>
        <trans-unit id="f7974010795301c38fea0441ad1cc2e36131294b" translate="yes" xml:space="preserve">
          <source>After the parser assembles tokens into a parse tree, the code generator runs to analyze the parse tree and generate &lt;a href=&quot;opcode&quot;&gt;bytecode&lt;/a&gt; that performs the work of the SQL statement. The &lt;a href=&quot;c3ref/stmt&quot;&gt;prepared statement&lt;/a&gt; object is a container for this bytecode. There are many files in the code generator, including: &lt;a href=&quot;https://sqlite.org/src/file/src/attach.c&quot;&gt;attach.c&lt;/a&gt;, &lt;a href=&quot;https://sqlite.org/src/file/src/auth.c&quot;&gt;auth.c&lt;/a&gt;, &lt;a href=&quot;https://sqlite.org/src/file/src/build.c&quot;&gt;build.c&lt;/a&gt;, &lt;a href=&quot;https://sqlite.org/src/file/src/delete.c&quot;&gt;delete.c&lt;/a&gt;, &lt;a href=&quot;https://sqlite.org/src/file/src/expr.c&quot;&gt;expr.c&lt;/a&gt;, &lt;a href=&quot;https://sqlite.org/src/file/src/insert.c&quot;&gt;insert.c&lt;/a&gt;, &lt;a href=&quot;https://sqlite.org/src/file/src/pragma.c&quot;&gt;pragma.c&lt;/a&gt;, &lt;a href=&quot;https://sqlite.org/src/file/src/select.c&quot;&gt;select.c&lt;/a&gt;, &lt;a href=&quot;https://sqlite.org/src/file/src/trigger.c&quot;&gt;trigger.c&lt;/a&gt;, &lt;a href=&quot;https://sqlite.org/src/file/src/update.c&quot;&gt;update.c&lt;/a&gt;, &lt;a href=&quot;https://sqlite.org/src/file/src/vacuum.c&quot;&gt;vacuum.c&lt;/a&gt;, &lt;a href=&quot;https://sqlite.org/src/file/src/where.c&quot;&gt;where.c&lt;/a&gt;, &lt;a href=&quot;https://sqlite.org/src/file/src/wherecode.c&quot;&gt;wherecode.c&lt;/a&gt;, and &lt;a href=&quot;https://sqlite.org/src/file/src/whereexpr.c&quot;&gt;whereexpr.c&lt;/a&gt;. In these files is where most of the serious magic happens. &lt;a href=&quot;https://sqlite.org/src/file/src/expr.c&quot;&gt;expr.c&lt;/a&gt; handles code generation for expressions. &lt;b&gt;where*.c&lt;/b&gt; handles code generation for WHERE clauses on SELECT, UPDATE and DELETE statements. The files &lt;a href=&quot;https://sqlite.org/src/file/src/attach.c&quot;&gt;attach.c&lt;/a&gt;, &lt;a href=&quot;https://sqlite.org/src/file/src/delete.c&quot;&gt;delete.c&lt;/a&gt;, &lt;a href=&quot;https://sqlite.org/src/file/src/insert.c&quot;&gt;insert.c&lt;/a&gt;, &lt;a href=&quot;https://sqlite.org/src/file/src/select.c&quot;&gt;select.c&lt;/a&gt;, &lt;a href=&quot;https://sqlite.org/src/file/src/trigger.c&quot;&gt;trigger.c&lt;/a&gt;&lt;a href=&quot;https://sqlite.org/src/file/src/update.c&quot;&gt;update.c&lt;/a&gt;, and &lt;a href=&quot;https://sqlite.org/src/file/src/vacuum.c&quot;&gt;vacuum.c&lt;/a&gt; handle the code generation for SQL statements with the same names. (Each of these files calls routines in &lt;a href=&quot;https://sqlite.org/src/file/src/expr.c&quot;&gt;expr.c&lt;/a&gt; and &lt;a href=&quot;https://sqlite.org/src/file/src/where.c&quot;&gt;where.c&lt;/a&gt; as necessary.) All other SQL statements are coded out of &lt;a href=&quot;https://sqlite.org/src/file/src/build.c&quot;&gt;build.c&lt;/a&gt;. The &lt;a href=&quot;https://sqlite.org/src/file/src/auth.c&quot;&gt;auth.c&lt;/a&gt; file implements the functionality of &lt;a href=&quot;c3ref/set_authorizer&quot;&gt;sqlite3_set_authorizer()&lt;/a&gt;.</source>
          <target state="translated">解析器将令牌组装成解析树后，代码生成器将运行以分析解析树并生成执行SQL语句工作的&lt;a href=&quot;opcode&quot;&gt;字节码&lt;/a&gt;。在&lt;a href=&quot;c3ref/stmt&quot;&gt;准备语句&lt;/a&gt;对象是此字节码的容器。有许多文件中的代码生成器，包括：&lt;a href=&quot;https://sqlite.org/src/file/src/attach.c&quot;&gt;attach.c&lt;/a&gt;，&lt;a href=&quot;https://sqlite.org/src/file/src/auth.c&quot;&gt;auth.c&lt;/a&gt;，&lt;a href=&quot;https://sqlite.org/src/file/src/build.c&quot;&gt;build.c&lt;/a&gt;，&lt;a href=&quot;https://sqlite.org/src/file/src/delete.c&quot;&gt;delete.c&lt;/a&gt;，&lt;a href=&quot;https://sqlite.org/src/file/src/expr.c&quot;&gt;expr.c&lt;/a&gt;，&lt;a href=&quot;https://sqlite.org/src/file/src/insert.c&quot;&gt;insert.c&lt;/a&gt;，&lt;a href=&quot;https://sqlite.org/src/file/src/pragma.c&quot;&gt;pragma.c&lt;/a&gt;，&lt;a href=&quot;https://sqlite.org/src/file/src/select.c&quot;&gt;select.c&lt;/a&gt;，&lt;a href=&quot;https://sqlite.org/src/file/src/trigger.c&quot;&gt;trigger.c&lt;/a&gt;，&lt;a href=&quot;https://sqlite.org/src/file/src/update.c&quot;&gt;update.c&lt;/a&gt;，&lt;a href=&quot;https://sqlite.org/src/file/src/vacuum.c&quot;&gt;vacuum.c&lt;/a&gt;，&lt;a href=&quot;https://sqlite.org/src/file/src/where.c&quot;&gt;where.c&lt;/a&gt;，&lt;a href=&quot;https://sqlite.org/src/file/src/wherecode.c&quot;&gt;wherecode.c&lt;/a&gt;和&lt;a href=&quot;https://sqlite.org/src/file/src/whereexpr.c&quot;&gt;whereexpr.c&lt;/a&gt;。在这些文件中，大多数严重的魔术都在其中发生。&lt;a href=&quot;https://sqlite.org/src/file/src/expr.c&quot;&gt;expr.c&lt;/a&gt;处理表达式的代码生成。&lt;b&gt;where * .c&lt;/b&gt;处理SELECT，UPDATE和DELETE语句上WHERE子句的代码生成。该文件&lt;a href=&quot;https://sqlite.org/src/file/src/attach.c&quot;&gt;attach.c&lt;/a&gt;，&lt;a href=&quot;https://sqlite.org/src/file/src/delete.c&quot;&gt;delete.c&lt;/a&gt;，&lt;a href=&quot;https://sqlite.org/src/file/src/insert.c&quot;&gt;insert.c&lt;/a&gt;，&lt;a href=&quot;https://sqlite.org/src/file/src/select.c&quot;&gt;select.c&lt;/a&gt;，&lt;a href=&quot;https://sqlite.org/src/file/src/trigger.c&quot;&gt;trigger.c &lt;/a&gt;&lt;a href=&quot;https://sqlite.org/src/file/src/update.c&quot;&gt;update.c&lt;/a&gt;和&lt;a href=&quot;https://sqlite.org/src/file/src/vacuum.c&quot;&gt;vacuum.c&lt;/a&gt;处理代码生成具有相同名称的SQL语句。 （这些文件中的每个文件&lt;a href=&quot;https://sqlite.org/src/file/src/where.c&quot;&gt;都&lt;/a&gt;根据需要在&lt;a href=&quot;https://sqlite.org/src/file/src/expr.c&quot;&gt;expr.c&lt;/a&gt;和where.c中调用例程。）所有其他SQL语句均从&lt;a href=&quot;https://sqlite.org/src/file/src/build.c&quot;&gt;build.c中&lt;/a&gt;进行编码。该&lt;a href=&quot;https://sqlite.org/src/file/src/auth.c&quot;&gt;auth.c&lt;/a&gt;文件实现的功能&lt;a href=&quot;c3ref/set_authorizer&quot;&gt;sqlite3_set_authorizer（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b39bcb3162c3e5bf861268807e2f722487ba46f2" translate="yes" xml:space="preserve">
          <source>After the parser assembles tokens into a parse tree, the code generator runs to analyze the parser tree and generate &lt;a href=&quot;opcode&quot;&gt;bytecode&lt;/a&gt; that performs the work of the SQL statement. The &lt;a href=&quot;c3ref/stmt&quot;&gt;prepared statement&lt;/a&gt; object is a container for this bytecode. There are many files in the code generator, including: &lt;a href=&quot;https://sqlite.org/src/file/src/attach.c&quot;&gt;attach.c&lt;/a&gt;, &lt;a href=&quot;https://sqlite.org/src/file/src/auth.c&quot;&gt;auth.c&lt;/a&gt;, &lt;a href=&quot;https://sqlite.org/src/file/src/build.c&quot;&gt;build.c&lt;/a&gt;, &lt;a href=&quot;https://sqlite.org/src/file/src/delete.c&quot;&gt;delete.c&lt;/a&gt;, &lt;a href=&quot;https://sqlite.org/src/file/src/expr.c&quot;&gt;expr.c&lt;/a&gt;, &lt;a href=&quot;https://sqlite.org/src/file/src/insert.c&quot;&gt;insert.c&lt;/a&gt;, &lt;a href=&quot;https://sqlite.org/src/file/src/pragma.c&quot;&gt;pragma.c&lt;/a&gt;, &lt;a href=&quot;https://sqlite.org/src/file/src/select.c&quot;&gt;select.c&lt;/a&gt;, &lt;a href=&quot;https://sqlite.org/src/file/src/trigger.c&quot;&gt;trigger.c&lt;/a&gt;, &lt;a href=&quot;https://sqlite.org/src/file/src/update.c&quot;&gt;update.c&lt;/a&gt;, &lt;a href=&quot;https://sqlite.org/src/file/src/vacuum.c&quot;&gt;vacuum.c&lt;/a&gt;, &lt;a href=&quot;https://sqlite.org/src/file/src/where.c&quot;&gt;where.c&lt;/a&gt;, &lt;a href=&quot;https://sqlite.org/src/file/src/wherecode.c&quot;&gt;wherecode.c&lt;/a&gt;, and &lt;a href=&quot;https://sqlite.org/src/file/src/whereexpr.c&quot;&gt;whereexpr.c&lt;/a&gt;. In these files is where most of the serious magic happens. &lt;a href=&quot;https://sqlite.org/src/file/src/expr.c&quot;&gt;expr.c&lt;/a&gt; handles code generation for expressions. &lt;b&gt;where*.c&lt;/b&gt; handles code generation for WHERE clauses on SELECT, UPDATE and DELETE statements. The files &lt;a href=&quot;https://sqlite.org/src/file/src/attach.c&quot;&gt;attach.c&lt;/a&gt;, &lt;a href=&quot;https://sqlite.org/src/file/src/delete.c&quot;&gt;delete.c&lt;/a&gt;, &lt;a href=&quot;https://sqlite.org/src/file/src/insert.c&quot;&gt;insert.c&lt;/a&gt;, &lt;a href=&quot;https://sqlite.org/src/file/src/select.c&quot;&gt;select.c&lt;/a&gt;, &lt;a href=&quot;https://sqlite.org/src/file/src/trigger.c&quot;&gt;trigger.c&lt;/a&gt;&lt;a href=&quot;https://sqlite.org/src/file/src/update.c&quot;&gt;update.c&lt;/a&gt;, and &lt;a href=&quot;https://sqlite.org/src/file/src/vacuum.c&quot;&gt;vacuum.c&lt;/a&gt; handle the code generation for SQL statements with the same names. (Each of these files calls routines in &lt;a href=&quot;https://sqlite.org/src/file/src/expr.c&quot;&gt;expr.c&lt;/a&gt; and &lt;a href=&quot;https://sqlite.org/src/file/src/where.c&quot;&gt;where.c&lt;/a&gt; as necessary.) All other SQL statements are coded out of &lt;a href=&quot;https://sqlite.org/src/file/src/build.c&quot;&gt;build.c&lt;/a&gt;. The &lt;a href=&quot;https://sqlite.org/src/file/src/auth.c&quot;&gt;auth.c&lt;/a&gt; file implements the functionality of &lt;a href=&quot;c3ref/set_authorizer&quot;&gt;sqlite3_set_authorizer()&lt;/a&gt;.</source>
          <target state="translated">解析器将标记组装成解析树后，代码生成器将运行以分析解析器树并生成执行SQL语句工作的&lt;a href=&quot;opcode&quot;&gt;字节码&lt;/a&gt;。在&lt;a href=&quot;c3ref/stmt&quot;&gt;准备语句&lt;/a&gt;对象是此字节码的容器。有许多文件中的代码生成器，包括：&lt;a href=&quot;https://sqlite.org/src/file/src/attach.c&quot;&gt;attach.c&lt;/a&gt;，&lt;a href=&quot;https://sqlite.org/src/file/src/auth.c&quot;&gt;auth.c&lt;/a&gt;，&lt;a href=&quot;https://sqlite.org/src/file/src/build.c&quot;&gt;build.c&lt;/a&gt;，&lt;a href=&quot;https://sqlite.org/src/file/src/delete.c&quot;&gt;delete.c&lt;/a&gt;，&lt;a href=&quot;https://sqlite.org/src/file/src/expr.c&quot;&gt;expr.c&lt;/a&gt;，&lt;a href=&quot;https://sqlite.org/src/file/src/insert.c&quot;&gt;insert.c&lt;/a&gt;，&lt;a href=&quot;https://sqlite.org/src/file/src/pragma.c&quot;&gt;pragma.c&lt;/a&gt;，&lt;a href=&quot;https://sqlite.org/src/file/src/select.c&quot;&gt;select.c&lt;/a&gt;，&lt;a href=&quot;https://sqlite.org/src/file/src/trigger.c&quot;&gt;trigger.c&lt;/a&gt;，&lt;a href=&quot;https://sqlite.org/src/file/src/update.c&quot;&gt;update.c&lt;/a&gt;，&lt;a href=&quot;https://sqlite.org/src/file/src/vacuum.c&quot;&gt;vacuum.c&lt;/a&gt;，&lt;a href=&quot;https://sqlite.org/src/file/src/where.c&quot;&gt;where.c&lt;/a&gt;，&lt;a href=&quot;https://sqlite.org/src/file/src/wherecode.c&quot;&gt;wherecode.c&lt;/a&gt;和&lt;a href=&quot;https://sqlite.org/src/file/src/whereexpr.c&quot;&gt;whereexpr.c&lt;/a&gt;。在这些文件中，大多数严重的魔术都在其中发生。&lt;a href=&quot;https://sqlite.org/src/file/src/expr.c&quot;&gt;expr.c&lt;/a&gt;处理表达式的代码生成。&lt;b&gt;where * .c&lt;/b&gt;处理SELECT，UPDATE和DELETE语句上WHERE子句的代码生成。该文件&lt;a href=&quot;https://sqlite.org/src/file/src/attach.c&quot;&gt;attach.c&lt;/a&gt;，&lt;a href=&quot;https://sqlite.org/src/file/src/delete.c&quot;&gt;delete.c&lt;/a&gt;，&lt;a href=&quot;https://sqlite.org/src/file/src/insert.c&quot;&gt;insert.c&lt;/a&gt;，&lt;a href=&quot;https://sqlite.org/src/file/src/select.c&quot;&gt;select.c&lt;/a&gt;，&lt;a href=&quot;https://sqlite.org/src/file/src/trigger.c&quot;&gt;trigger.c &lt;/a&gt;&lt;a href=&quot;https://sqlite.org/src/file/src/update.c&quot;&gt;update.c&lt;/a&gt;和&lt;a href=&quot;https://sqlite.org/src/file/src/vacuum.c&quot;&gt;vacuum.c&lt;/a&gt;处理代码生成具有相同名称的SQL语句。 （这些文件中的每个文件&lt;a href=&quot;https://sqlite.org/src/file/src/where.c&quot;&gt;都&lt;/a&gt;根据需要在&lt;a href=&quot;https://sqlite.org/src/file/src/expr.c&quot;&gt;expr.c&lt;/a&gt;和where.c中调用例程。）所有其他SQL语句都从&lt;a href=&quot;https://sqlite.org/src/file/src/build.c&quot;&gt;build.c中&lt;/a&gt;进行编码。该&lt;a href=&quot;https://sqlite.org/src/file/src/auth.c&quot;&gt;auth.c&lt;/a&gt;文件实现的功能&lt;a href=&quot;c3ref/set_authorizer&quot;&gt;sqlite3_set_authorizer（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2e1c3e7c8a391dcea0df2cfdb448d836a449fa44" translate="yes" xml:space="preserve">
          <source>After the query loop ends, the table being queried is closed at instruction 14. This is done early in order to allow other processes or threads to access that table, if desired. The list of records that was built up inside the query loop is sorted by the instruction at 15. Instructions 16 through 18 walk through the record list (which is now in sorted order) and invoke the callback once for each record. Finally, the sorter is closed at instruction 19.</source>
          <target state="translated">查询循环结束后,在指令14中关闭被查询的表。这样做的目的是为了让其他进程或线程在需要时访问该表。查询循环内建立起来的记录列表在指令15处进行排序。指令 16 到 18 遍历记录列表(现在是按排序顺序),并为每条记录调用一次回调。最后,在指令19处关闭分拣器。</target>
        </trans-unit>
        <trans-unit id="f7a2e27dec51b31c6ed11a02889862c44fec50cf" translate="yes" xml:space="preserve">
          <source>After the query loop is finished, the table &quot;examp2&quot; is closed at instruction 23 so that its lock will be released and it can be used by other threads or processes. The next step is to loop over all aggregate buckets and output one row of the result for each bucket. This is done by the loop at instructions 24 through 30. The AggNext instruction at 24 brings the next bucket into focus, or jumps to the end of the loop if all buckets have been examined already. The 3 columns of the result are fetched from the aggregator bucket in order at instructions 25 through 27. Finally, the callback is invoked at instruction 29.</source>
          <target state="translated">查询循环结束后,在指令23处关闭表 &quot;examp2&quot;,这样它的锁就会被释放,可以被其他线程或进程使用。下一步是循环处理所有汇总桶,并为每个桶输出一行结果。这是由指令24到30处的循环完成的。24处的AggNext指令使下一个桶成为焦点,如果所有桶已经被检查过,则跳转到循环的末端。在指令25到27处依次从聚合器桶中获取结果的3列。最后,在指令29处调用回调。</target>
        </trans-unit>
        <trans-unit id="429426adc150c9c3ef8de6d6350a6529072871cf" translate="yes" xml:space="preserve">
          <source>After the shared lock is acquired, we can begin reading information from the database file. In this scenario, we are assuming a cold cache, so information must first be read from mass storage into the operating system cache then transferred from operating system cache into user space. On subsequent reads, some or all of the information might already be found in the operating system cache and so only the transfer to user space would be required.</source>
          <target state="translated">在获得共享锁之后,我们就可以开始读取数据库文件中的信息。在这种情况下,我们假设的是一个冷缓存,所以必须先将信息从大容量存储中读到操作系统缓存中,然后再从操作系统缓存中传输到用户空间。在随后的读取中,可能已经在操作系统缓存中找到了部分或全部信息,因此只需要将信息转移到用户空间。</target>
        </trans-unit>
        <trans-unit id="7dbb1609bfd1352286bb98fe2bf2342dc300ba85" translate="yes" xml:space="preserve">
          <source>After the sqlite3_test_control() call above, then run a &lt;a href=&quot;lang_createtable&quot;&gt;CREATE TABLE&lt;/a&gt; statement the defines the imposter table. With the imposter mechanism enabled, this CREATE TABLE statement does not create a real table but instead merely adds an entry in SQLite's internal symbol table. Note that the CREATE TABLE statement must be in the correct format for the index. If the imposter table has the wrong number of columns or is not a &lt;a href=&quot;withoutrowid&quot;&gt;WITHOUT ROWID&lt;/a&gt; table or is otherwise incompatible with the index b-tree, then &lt;a href=&quot;rescode#corrupt&quot;&gt;SQLITE_CORRUPT&lt;/a&gt; errors will result when the imposter table is used.</source>
          <target state="translated">在上面的sqlite3_test_control（）调用之后，然后运行&lt;a href=&quot;lang_createtable&quot;&gt;CREATE TABLE&lt;/a&gt;语句定义冒名顶替者表。启用冒名顶替机制后，此CREATE TABLE语句不会创建真实表，而只是在SQLite的内部符号表中添加一个条目。请注意，CREATE TABLE语句必须采用正确的索引格式。如果冒名顶替者表的列数错误或不是&lt;a href=&quot;withoutrowid&quot;&gt;WITHOUT ROWID&lt;/a&gt;表或与索引b树不兼容，则在使用冒名顶替者表时将导致&lt;a href=&quot;rescode#corrupt&quot;&gt;SQLITE_CORRUPT&lt;/a&gt;错误。</target>
        </trans-unit>
        <trans-unit id="19b56f4a17eee54fbb6b1cf61515b7eba9136d01" translate="yes" xml:space="preserve">
          <source>After the super-journal is constructed, its content is flushed to disk before any further actions are taken. On Unix, the directory that contains the super-journal is also synced in order to make sure the super-journal file will appear in the directory following a power failure.</source>
          <target state="translated">在超级日志构建完成后,在采取任何进一步的行动之前,其内容会被刷新到磁盘上。在Unix上,包含超级期刊的目录也会同步,以确保超级期刊文件在断电后会出现在该目录中。</target>
        </trans-unit>
        <trans-unit id="fbbb0de8accee9d1365cb588f7fd022b3b5c2ef0" translate="yes" xml:space="preserve">
          <source>After the virtual table has been populated with items from multiple languages, specify the language of interest using a &quot;langid=N&quot; term in the WHERE clause of the query:</source>
          <target state="translated">当虚拟表被多语言的项目填充后,在查询的WHERE子句中使用 &quot;langid=N &quot;术语指定感兴趣的语言。</target>
        </trans-unit>
        <trans-unit id="71df6ec7d17df1770a907c6872e525177a99e4ae" translate="yes" xml:space="preserve">
          <source>AggFinal</source>
          <target state="translated">AggFinal</target>
        </trans-unit>
        <trans-unit id="5429b1962421b3a7ef0110360651a4a4da33b0bd" translate="yes" xml:space="preserve">
          <source>AggInverse</source>
          <target state="translated">AggInverse</target>
        </trans-unit>
        <trans-unit id="d448b9ea9be90bab4fd06d12a2a56f0f2d29976a" translate="yes" xml:space="preserve">
          <source>AggStep</source>
          <target state="translated">AggStep</target>
        </trans-unit>
        <trans-unit id="cec3f9e0080e6fe913455f3060c1205f8c71a2e5" translate="yes" xml:space="preserve">
          <source>AggStep1</source>
          <target state="translated">AggStep1</target>
        </trans-unit>
        <trans-unit id="d64e85e2bbdea61d402b8d3446eb6ec6b1845b61" translate="yes" xml:space="preserve">
          <source>AggValue</source>
          <target state="translated">AggValue</target>
        </trans-unit>
        <trans-unit id="558d7aad6e94b62a3c3d222979b260b60b6db7d2" translate="yes" xml:space="preserve">
          <source>Aggregate Functions</source>
          <target state="translated">聚合函数</target>
        </trans-unit>
        <trans-unit id="d7162a0d5ccbad3a77b64c735aa5b633485f7bdb" translate="yes" xml:space="preserve">
          <source>Aggregate Functions And The GROUP BY and HAVING Clauses</source>
          <target state="translated">聚合函数以及GROUP BY和HAVING子句。</target>
        </trans-unit>
        <trans-unit id="b2609ee93dbad1daa0d495db10944455f8b52f8e" translate="yes" xml:space="preserve">
          <source>Aggregate SQL functions are implemented by using two callback functions, &lt;b&gt;xStep&lt;/b&gt; and &lt;b&gt;xFinal&lt;/b&gt;. The xStep() function is called for each row of the aggregate and the xFinal() function is invoked to compute the final answer at the end. The following (slightly simplified) version of the built-in count() function illustrates:</source>
          <target state="translated">聚合SQL函数通过使用两个回调函数&lt;b&gt;xStep&lt;/b&gt;和&lt;b&gt;xFinal来实现&lt;/b&gt;。对聚合的每一行调用xStep（）函数，并调用xFinal（）函数以最后计算最终答案。内置count（）函数的以下（略有简化）版本说明了：</target>
        </trans-unit>
        <trans-unit id="67a5e493a395536162c8208afa9edceff4645801" translate="yes" xml:space="preserve">
          <source>Aggregate window functions</source>
          <target state="translated">汇总窗口功能</target>
        </trans-unit>
        <trans-unit id="96017d1624d86e09bd79e2a89a0c2374923ae0bf" translate="yes" xml:space="preserve">
          <source>Aggregate-mode meaning</source>
          <target state="translated">聚合模式的含义</target>
        </trans-unit>
        <trans-unit id="6a72085653e4c5be8c7640c868ef787cbcf063d1" translate="yes" xml:space="preserve">
          <source>All</source>
          <target state="translated">All</target>
        </trans-unit>
        <trans-unit id="37b83d77a9eb919bf1eed567f29546fa4dda4c46" translate="yes" xml:space="preserve">
          <source>All C-preprocessor macros used to control compile-time options now begin with the prefix &quot;SQLITE_&quot;. This may require changes to applications that compile SQLite using their own makefiles and with custom compile-time options, hence we mark this as a *** Potentially incompatible change ***</source>
          <target state="translated">所有用于控制编译时选项的 C-预处理器宏现在都以 &quot;SQLITE_&quot;开头。这可能需要对使用自己的makefile文件和自定义编译时选项编译SQLite的应用程序进行修改,因此我们将其标记为***潜在的不兼容修改***。</target>
        </trans-unit>
        <trans-unit id="c755a70a5620bfbf08d2e74296f5e3952109420b" translate="yes" xml:space="preserve">
          <source>All FTS5 tables feature a special hidden column named &quot;rank&quot;. If the current query is not a full-text query (i.e. if it does not include a MATCH operator), the value of the &quot;rank&quot; column is always NULL. Otherwise, in a full-text query, column rank contains by default the same value as would be returned by executing the bm25() auxiliary function with no trailing arguments.</source>
          <target state="translated">所有的FTS5表都有一个名为 &quot;rank &quot;的特殊隐藏列。如果当前查询不是全文查询(即不包括MATCH操作符),&quot;rank &quot;列的值总是NULL。否则,在全文查询中,列rank的值默认与执行bm25()辅助函数返回的值相同,且没有尾部参数。</target>
        </trans-unit>
        <trans-unit id="1bb6feba3d971df2c155ebbf32ecf1aeefc50b98" translate="yes" xml:space="preserve">
          <source>All RBU updates use the &quot;OR ROLLBACK&quot; constraint handling mechanism.</source>
          <target state="translated">所有的 RBU 更新都使用 &quot;OR ROLLBACK &quot;约束处理机制。</target>
        </trans-unit>
        <trans-unit id="298c1a6a5b3113028f5781057322c183e5fb18cf" translate="yes" xml:space="preserve">
          <source>All SQLite database connections running within a single process share a single</source>
          <target state="translated">在单个进程中运行的所有SQLite数据库连接共享一个单一的</target>
        </trans-unit>
        <trans-unit id="68fd5c55fe4176eb0a40eb1e510440312024923d" translate="yes" xml:space="preserve">
          <source>All SQLite releases starting with 3.9.0 use a three-number &quot;&lt;a href=&quot;http://semver.org&quot;&gt;semantic version&lt;/a&gt;&quot; of the form X.Y.Z. The first number X is only increased when there is a change that breaks backward compatibility. The current value for X is 3, and the SQLite developers plan to support the current SQLite database file format, SQL syntax, and C interface through &lt;a href=&quot;lts&quot;&gt;at least the year 2050&lt;/a&gt;. Hence, one can expect that all future versions of SQLite for the next several decades will begin with &quot;3.&quot;.</source>
          <target state="translated">从3.9.0开始的所有SQLite版本均使用XYZ形式的三位数&amp;ldquo; &lt;a href=&quot;http://semver.org&quot;&gt;语义版本&lt;/a&gt; &amp;rdquo;。仅当存在破坏向后兼容性的更改时，才会增加第一个数字X。 X的当前值为3，SQLite开发人员计划&lt;a href=&quot;lts&quot;&gt;至少在2050年之前&lt;/a&gt;支持当前的SQLite数据库文件格式，SQL语法和C接口。因此，可以预期，未来几十年所有将来的SQLite版本都将以&amp;ldquo; 3&amp;rdquo;开头。</target>
        </trans-unit>
        <trans-unit id="cbf3befd42e47b2311a200fc6c4505d6d3e74ba2" translate="yes" xml:space="preserve">
          <source>All calls obtain an exclusive &quot;checkpoint&quot; lock on the database file. If any other process is running a checkpoint operation at the same time, the lock cannot be obtained and SQLITE_BUSY is returned. Even if there is a busy-handler configured, it will not be invoked in this case.</source>
          <target state="translated">所有的调用都会在数据库文件上获得一个专属的 &quot;检查点 &quot;锁。如果有其他进程同时在运行检查点操作,则无法获得锁,并返回SQLITE_BUSY。即使配置了忙处理程序,在这种情况下也不会被调用。</target>
        </trans-unit>
        <trans-unit id="34e057ca62b435caa749880050f6e16611809628" translate="yes" xml:space="preserve">
          <source>All changes made by these functions are enclosed in a savepoint transaction. If any other error (aside from a constraint failure when attempting to write to the target database) occurs, then the savepoint transaction is rolled back, restoring the target database to its original state, and an SQLite error code returned.</source>
          <target state="translated">这些函数所做的所有更改都被封装在一个保存点事务中。如果发生任何其他错误(除了试图向目标数据库写入时约束失败),那么savepoint事务就会被回滚,将目标数据库恢复到原来的状态,并返回一个SQLite错误代码。</target>
        </trans-unit>
        <trans-unit id="d1dddd8355c69e5dffb77af16e6ef1de6dd31f80" translate="yes" xml:space="preserve">
          <source>All changes to a virtual table are made using the xUpdate method. This one method can be used to insert, delete, or update.</source>
          <target state="translated">对虚拟表的所有修改都是使用xUpdate方法进行的。这一个方法可以用来插入、删除或更新。</target>
        </trans-unit>
        <trans-unit id="d5f7c518c035d2e61b79e18649b848121cf76a11" translate="yes" xml:space="preserve">
          <source>All changes to be applied by RBU are stored in a separate SQLite database called the &quot;RBU database&quot;. The database that is to be modified is called the &quot;target database&quot;.</source>
          <target state="translated">RBU应用的所有修改都存储在一个单独的SQLite数据库中,称为 &quot;RBU数据库&quot;。要修改的数据库称为 &quot;目标数据库&quot;。</target>
        </trans-unit>
        <trans-unit id="99a33b875d90f9fced8d63e555c38a8d47436549" translate="yes" xml:space="preserve">
          <source>All code is archived on three separate machines: &lt;a href=&quot;https://www.sqlite.org&quot;&gt;https://www.sqlite.org&lt;/a&gt;, &lt;a href=&quot;https://www2.sqlite.org&quot;&gt;https://www2.sqlite.org&lt;/a&gt;, &lt;a href=&quot;https://www3.sqlite.org&quot;&gt;https://www3.sqlite.org&lt;/a&gt;. These machines are located in different cities (Dallas, Newark, and San Francisco, respectively) and managed by two different hosting companies (&lt;a href=&quot;https://linode.com&quot;&gt;Linode&lt;/a&gt; for the first two and &lt;a href=&quot;https://digitalocean.com&quot;&gt;Digital Ocean&lt;/a&gt; for the third). This diversity is intended to avoid a single point of failure.</source>
          <target state="translated">所有的代码被归档在三个不同的机器：&lt;a href=&quot;https://www.sqlite.org&quot;&gt;https://www.sqlite.org&lt;/a&gt;，&lt;a href=&quot;https://www2.sqlite.org&quot;&gt;https://www2.sqlite.org&lt;/a&gt;，&lt;a href=&quot;https://www3.sqlite.org&quot;&gt;https://www3.sqlite.org&lt;/a&gt;。这些计算机分别位于不同的城市（分别是达拉斯，纽瓦克和旧金山），并由两家不同的托管公司（前两个使用&lt;a href=&quot;https://linode.com&quot;&gt;Linode&lt;/a&gt;，第三个使用&lt;a href=&quot;https://digitalocean.com&quot;&gt;Digital Ocean&lt;/a&gt;）进行管理。这种多样性旨在避免单点故障。</target>
        </trans-unit>
        <trans-unit id="d9708b5aef2e3a29e2a2fbfcf884786831700182" translate="yes" xml:space="preserve">
          <source>All common table expressions (ordinary and recursive) are created by prepending a WITH clause in front of a &lt;a href=&quot;lang_select&quot;&gt;SELECT&lt;/a&gt;, &lt;a href=&quot;lang_insert&quot;&gt;INSERT&lt;/a&gt;, &lt;a href=&quot;lang_delete&quot;&gt;DELETE&lt;/a&gt;, or &lt;a href=&quot;lang_update&quot;&gt;UPDATE&lt;/a&gt; statement. A single WITH clause can specify one or more common table expressions, some of which are ordinary and some of which are recursive.</source>
          <target state="translated">通过在&lt;a href=&quot;lang_select&quot;&gt;SELECT&lt;/a&gt;，&lt;a href=&quot;lang_insert&quot;&gt;INSERT&lt;/a&gt;，&lt;a href=&quot;lang_delete&quot;&gt;DELETE&lt;/a&gt;或&lt;a href=&quot;lang_update&quot;&gt;UPDATE&lt;/a&gt;语句之前加上WITH子句，可以创建所有通用表表达式（普通和递归）。一个WITH子句可以指定一个或多个公共表表达式，其中一些是普通的，而一些是递归的。</target>
        </trans-unit>
        <trans-unit id="202e588a0b168a0b374436adc14ca3f0090beda4" translate="yes" xml:space="preserve">
          <source>All component tables must have the same PRIMARY KEY declaration (if any).</source>
          <target state="translated">所有的组件表必须有相同的PRIMARY KEY声明(如果有的话)。</target>
        </trans-unit>
        <trans-unit id="daa2fa17b60e175765b75266a7e677f096a5be75" translate="yes" xml:space="preserve">
          <source>All component tables must have the same set of columns, in the same order.</source>
          <target state="translated">所有组件表必须有同一组列,顺序相同。</target>
        </trans-unit>
        <trans-unit id="220fd2211d0e90275b8fb6a6e680abc0805ee11c" translate="yes" xml:space="preserve">
          <source>All connections hold SQLITE_LOCK_SHARED continuously while attached to a WAL-mode database. This is true for both read/write connections and read-only connections. The SQLITE_LOCK_SHARED lock is held even by connections that are not within transaction. This is different from rollback mode, where the SQLITE_LOCK_SHARED is released at the end of each transaction.</source>
          <target state="translated">当连接到WAL模式的数据库时,所有的连接都会持续保持SQLITE_LOCK_SHARED。这对读/写连接和只读连接都是如此。SQLITE_LOCK_SHARED锁即使不在事务中的连接也会被持有。这与回滚模式不同,在回滚模式下,SQLITE_LOCK_SHARED在每个事务结束时被释放。</target>
        </trans-unit>
        <trans-unit id="1db69a4cb9aa71154b4679a0d792a8e8fa8bc80c" translate="yes" xml:space="preserve">
          <source>All custom SQL functions will accept text in any encoding. Encoding conversions will happen automatically. The preferred encoding merely specifies the encoding for which the function implementation is optimized. It is possible to specify multiple functions with the same name and the same number of arguments, but different preferred encodings and different callbacks used to implement the function, and SQLite will chose the set of callbacks for which the input encodings most closely match the preferred encoding.</source>
          <target state="translated">所有的自定义SQL函数将接受任何编码的文本。编码转换将自动进行。首选编码只是指定了函数实现优化的编码。可以指定多个具有相同名称和相同数量参数的函数,但不同的首选编码和用于实现函数的不同回调,SQLite将选择输入编码与首选编码最匹配的回调集。</target>
        </trans-unit>
        <trans-unit id="277f01faa8ef768e5f765984b4b0ad448802a74a" translate="yes" xml:space="preserve">
          <source>All database files to be modified by an UPDATE, INSERT or DELETE are now locked before any changes are made to any files. This makes it safe (I think) to access the same database simultaneously from multiple processes.</source>
          <target state="translated">在对任何文件进行修改之前,所有要被UPDATE、INSERT或DELETE修改的数据库文件现在都被锁定。这使得从多个进程同时访问同一个数据库变得安全了(我想)。</target>
        </trans-unit>
        <trans-unit id="bbad06084491f62976cce387f8ad55cb93120cd9" translate="yes" xml:space="preserve">
          <source>All existing versions of SQLite do a full table scan for ANALYZE. This can be slow for multi-gigabyte and larger databases. Future versions of SQLite might use random sampling rather than a full table scan to obtain estimates for the database shape, especially on larger tables. The results would approximate, but will be close enough for query planning purposes. As of 2017-03-20, this concept has been tested in experimental branches and appears to work well, but has not been folded into an official release.</source>
          <target state="translated">所有现有版本的SQLite都会对ANALYZE进行全表扫描。这对于多GB和更大的数据库来说可能很慢。未来版本的SQLite可能会使用随机抽样而不是全表扫描来获得数据库形状的估计,特别是在大表上。结果将是近似的,但对于查询规划的目的来说将足够接近。截至2017-03-20,这个概念已经在实验分支中进行了测试,看起来效果不错,但还没有折合到正式版本中。</target>
        </trans-unit>
        <trans-unit id="57093dee5c757a1ceefead7158318b61ace62d82" translate="yes" xml:space="preserve">
          <source>All extended result codes are also error codes. Hence the terms &quot;extended result code&quot; and &quot;extended error code&quot; are interchangeable.</source>
          <target state="translated">所有扩展的结果代码也都是错误代码。因此,&quot;扩展结果代码 &quot;和 &quot;扩展错误代码 &quot;这两个术语可以互换。</target>
        </trans-unit>
        <trans-unit id="1c7deb3a8cda47ee51b4f2643f421866ddf4e49e" translate="yes" xml:space="preserve">
          <source>All five date and time functions take a time string as an argument. The time string is followed by zero or more modifiers. The strftime() function also takes a format string as its first argument.</source>
          <target state="translated">所有五个日期和时间函数都以一个时间字符串作为参数。时间字符串后面跟着零或多个修饰符。strftime()函数的第一个参数也是格式字符串。</target>
        </trans-unit>
        <trans-unit id="e537ea85551054a434477a1557da87eaf27aa344" translate="yes" xml:space="preserve">
          <source>All five date and time functions take a time value as an argument. The time value is followed by zero or more modifiers. The strftime() function also takes a format string as its first argument.</source>
          <target state="translated">所有五个日期和时间函数都以一个时间值作为参数。时间值后面跟着零或多个修饰符。strftime()函数的第一个参数也是一个格式字符串。</target>
        </trans-unit>
        <trans-unit id="27efbb224ffbae32d14448d4c9de1ee3c81cf982" translate="yes" xml:space="preserve">
          <source>All historical vulnerabilities reported against SQLite require at least one of these preconditions:</source>
          <target state="translated">所有针对SQLite报告的历史漏洞都需要至少一个这样的前提条件。</target>
        </trans-unit>
        <trans-unit id="53a08b0d87542a21311bc53db7ff7fe3705579a9" translate="yes" xml:space="preserve">
          <source>All incompatibilities are on obscure interfaces and hence should have zero impact on most applications.</source>
          <target state="translated">所有的不兼容性都是在不明显的接口上,因此对大多数应用的影响应该是零。</target>
        </trans-unit>
        <trans-unit id="7142a85dafa0005cc3ffdfca6d520d8fb0b49b9b" translate="yes" xml:space="preserve">
          <source>All internal computations assume the &lt;a href=&quot;http://en.wikipedia.org/wiki/Gregorian_calendar&quot;&gt;Gregorian calendar&lt;/a&gt; system. It is also assumed that every day is exactly 86400 seconds in duration.</source>
          <target state="translated">所有内部计算均采用&lt;a href=&quot;http://en.wikipedia.org/wiki/Gregorian_calendar&quot;&gt;公历&lt;/a&gt;系统。还假定每天的持续时间精确为86400秒。</target>
        </trans-unit>
        <trans-unit id="739796d5ca2620eefb8cd9eccf4392bf7954b04d" translate="yes" xml:space="preserve">
          <source>All internal computations assume the &lt;a href=&quot;https://en.wikipedia.org/wiki/Gregorian_calendar&quot;&gt;Gregorian calendar&lt;/a&gt; system. It is also assumed that every day is exactly 86400 seconds in duration.</source>
          <target state="translated">所有内部计算均采用&lt;a href=&quot;https://en.wikipedia.org/wiki/Gregorian_calendar&quot;&gt;公历&lt;/a&gt;系统。还假设每天的持续时间精确为86400秒。</target>
        </trans-unit>
        <trans-unit id="04348814491f3fa4a3cfd08b8932122a12a20fd2" translate="yes" xml:space="preserve">
          <source>All joins in SQLite are &lt;a href=&quot;optoverview#table_order&quot;&gt;implemented using nested scans&lt;/a&gt;. When a SELECT query that features a join is analyzed using EXPLAIN QUERY PLAN, one SCAN or SEARCH record is output for each nested loop. For example:</source>
          <target state="translated">SQLite中的所有联接都是&lt;a href=&quot;optoverview#table_order&quot;&gt;使用嵌套扫描实现的&lt;/a&gt;。当使用EXPLAIN QUERY PLAN分析具有联接的SELECT查询时，将为每个嵌套循环输出一个SCAN或SEARCH记录。例如：</target>
        </trans-unit>
        <trans-unit id="f65525e42bafddb791aaf9fce17e894639d4b9bf" translate="yes" xml:space="preserve">
          <source>All joins in SQLite are based on the cartesian product of the left and right-hand datasets. The columns of the cartesian product dataset are, in order, all the columns of the left-hand dataset followed by all the columns of the right-hand dataset. There is a row in the cartesian product dataset formed by combining each unique combination of a row from the left-hand and right-hand datasets. In other words, if the left-hand dataset consists of</source>
          <target state="translated">SQLite中所有的连接都是基于左手和右手数据集的卡提斯乘积。卡提斯乘积数据集的列依次是左手数据集的所有列,然后是右手数据集的所有列。在卡提斯产品数据集中,有一条行是由左手和右手数据集中的每一条行的唯一组合形成的。换句话说,如果左手数据集由以下数据组成</target>
        </trans-unit>
        <trans-unit id="71cb3ce79e6a6e92d559b23cf8ac04406011b307" translate="yes" xml:space="preserve">
          <source>All machines use SSD except Win7 which has a hard-drive. The test database is 100K blobs with sizes uniformly distributed between 8K and 12K, for a total of about 1 gigabyte of content. The database page size is 4KiB. The -DSQLITE_DIRECT_OVERFLOW_READ compile-time option was used for all of these tests. Tests were run multiple times. The first run was used to warm up the cache and its timings were discarded.</source>
          <target state="translated">除了Win7有硬盘外,其他机器都使用SSD。测试数据库为100K blobs,大小均匀分布在8K到12K之间,总共约1GB内容。数据库页面大小为4KiB。所有这些测试都使用了-DSQLITE_DIRECT_OVERFLOW_READ编译时选项。测试运行了多次。第一次运行是用来预热缓存的,它的计时被丢弃。</target>
        </trans-unit>
        <trans-unit id="1ffd5cbd04736788f9ab581e918b3089cbebbd40" translate="yes" xml:space="preserve">
          <source>All non-ASCII characters (those with codepoints greater than 127) are always considered token characters. If any non-ASCII characters are specified as part of the separators option, they are ignored.</source>
          <target state="translated">所有非ASCII字符(代码点大于127的字符)都被视为标记字符。如果在分隔符选项中指定了任何非ASCII字符,则会被忽略。</target>
        </trans-unit>
        <trans-unit id="b254312215697943ca788556e0d6b9c9450b8abd" translate="yes" xml:space="preserve">
          <source>All non-hidden columns (i.e. all columns matched by &quot;SELECT *&quot;) of the target table must be present in the input table. For virtual tables, hidden columns are optional - they are updated by RBU if present in the input table, or not otherwise. For example, to write to an fts4 table with a hidden languageid column such as:</source>
          <target state="translated">目标表的所有非隐藏列(即所有被 &quot;SELECT *&quot;匹配的列)必须存在于输入表中。对于虚拟表来说,隐藏列是可选的--如果在输入表中存在,它们会被RBU更新,否则就不更新。例如,要向一个带有隐藏的languageid列的fts4表写入,如:。</target>
        </trans-unit>
        <trans-unit id="63f7cc36f2c20676d7d5fbeae16ea9ae0cbec609" translate="yes" xml:space="preserve">
          <source>All non-recursive SELECT statements must occur before any recursive SELECT statements.</source>
          <target state="translated">所有非递归SELECT语句必须发生在任何递归SELECT语句之前。</target>
        </trans-unit>
        <trans-unit id="a8f660b04140a9109b926733d1d15823285d0d8f" translate="yes" xml:space="preserve">
          <source>All of SQLite's &lt;a href=&quot;lang_aggfunc&quot;&gt;aggregate functions&lt;/a&gt; may be used as aggregate window functions. It is also possible to &lt;a href=&quot;windowfunctions#udfwinfunc&quot;&gt;create user-defined aggregate window functions&lt;/a&gt;.</source>
          <target state="translated">SQLite的所有&lt;a href=&quot;lang_aggfunc&quot;&gt;聚合函数&lt;/a&gt;都可以用作聚合窗口函数。也可以&lt;a href=&quot;windowfunctions#udfwinfunc&quot;&gt;创建用户定义的聚合窗口函数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ceaa2e316a20fa6709117f30bf44efbc7dbbc8c3" translate="yes" xml:space="preserve">
          <source>All of the WAL-index locks, except for WAL_READ_LOCK(0), are held exclusively while reconstructing the global shared WAL-index during &lt;a href=&quot;walformat#recovery&quot;&gt;recovery&lt;/a&gt;.</source>
          <target state="translated">除WAL_READ_LOCK（0）外，所有WAL索引锁均在&lt;a href=&quot;walformat#recovery&quot;&gt;恢复&lt;/a&gt;期间重建全局共享WAL索引时排他地持有。</target>
        </trans-unit>
        <trans-unit id="d0d3bdb37117516e584fc85e1c08d9757cba475e" translate="yes" xml:space="preserve">
          <source>All of the _printf() routines above are built around the following two functions:</source>
          <target state="translated">以上所有的_printf()例程都是围绕以下两个函数建立的。</target>
        </trans-unit>
        <trans-unit id="8b4e36a69bec3556f94aa311ae03a74097503a22" translate="yes" xml:space="preserve">
          <source>All of the above conditions must be false in order for problems to occur. And even if all of the conditiona above are false, most things will still operator correctly. Only the &lt;a href=&quot;#integcheck&quot;&gt;integrity-check&lt;/a&gt; command and the &lt;a href=&quot;#snippet&quot;&gt;auxiliary functions&lt;/a&gt; might given unexpected results.</source>
          <target state="translated">为了发生问题，上述所有条件都必须为假。即使以上所有条件都为假，大多数情况仍然可以正确进行。仅&lt;a href=&quot;#integcheck&quot;&gt;完整性检查&lt;/a&gt;命令和&lt;a href=&quot;#snippet&quot;&gt;辅助功能&lt;/a&gt;可能会给出意外的结果。</target>
        </trans-unit>
        <trans-unit id="99f6322b342eb9d2dc214ced37e7517990352762" translate="yes" xml:space="preserve">
          <source>All of the above definitions are included in the &quot;sqlite.h&quot; header file that comes in the source tree.</source>
          <target state="translated">以上所有的定义都包含在源代码树中的 &quot;sqlite.h &quot;头文件中。</target>
        </trans-unit>
        <trans-unit id="693deb1c0ebd6029cb9d2f1f239c3bb4c352f744" translate="yes" xml:space="preserve">
          <source>All of the above is possible with Git, given the right extensions and tools and using the right commands. But it is not easy to do, and so it rarely gets done. Consequently, developers have less awareness of what is happening in the code.</source>
          <target state="translated">只要有合适的扩展和工具,并使用正确的命令,以上这些都可以通过Git实现。但要做到这一点并不容易,所以很少有人去做。因此,开发人员对代码中发生的事情认识不足。</target>
        </trans-unit>
        <trans-unit id="33d4319618ce3892310094c7b3e620d9ccd30d9e" translate="yes" xml:space="preserve">
          <source>All of the above is theoretically possible with Git, given the right extensions and tools and using the right commands. But it is not easy to do, and so it rarely gets done. Consequently, developers have less awareness of what is happening in the code.</source>
          <target state="translated">理论上来说,只要有合适的扩展和工具,使用合适的命令,上述所有的事情在Git上都是可以实现的。但要做到这一点并不容易,所以很少有人去做。因此,开发人员对代码中发生的事情认识不足。</target>
        </trans-unit>
        <trans-unit id="ae8b16657892b5f01e3b5c073bd55f99b7c4acd2" translate="yes" xml:space="preserve">
          <source>All of the built-in SQL functions of SQLite are created using exactly these same interfaces. Refer to the SQLite source code, and in particular the &lt;a href=&quot;http://www.sqlite.org/src/doc/trunk/src/date.c&quot;&gt;date.c&lt;/a&gt; and &lt;a href=&quot;http://www.sqlite.org/src/doc/trunk/src/func.c&quot;&gt;func.c&lt;/a&gt; source files for examples.</source>
          <target state="translated">SQLite的所有内置SQL函数都是使用完全相同的接口创建的。有关示例，请参考SQLite源代码，尤其是&lt;a href=&quot;http://www.sqlite.org/src/doc/trunk/src/date.c&quot;&gt;date.c&lt;/a&gt;和&lt;a href=&quot;http://www.sqlite.org/src/doc/trunk/src/func.c&quot;&gt;func.c&lt;/a&gt;源文件。</target>
        </trans-unit>
        <trans-unit id="de2d9ac4b44279ae39063f82351f044753741795" translate="yes" xml:space="preserve">
          <source>All of the built-in SQL functions of SQLite are created using exactly these same interfaces. Refer to the SQLite source code, and in particular the &lt;a href=&quot;https://www.sqlite.org/src/doc/trunk/src/date.c&quot;&gt;date.c&lt;/a&gt; and &lt;a href=&quot;https://www.sqlite.org/src/doc/trunk/src/func.c&quot;&gt;func.c&lt;/a&gt; source files for examples.</source>
          <target state="translated">SQLite的所有内置SQL函数都是使用完全相同的接口创建的。有关示例，请参考SQLite源代码，尤其是&lt;a href=&quot;https://www.sqlite.org/src/doc/trunk/src/date.c&quot;&gt;date.c&lt;/a&gt;和&lt;a href=&quot;https://www.sqlite.org/src/doc/trunk/src/func.c&quot;&gt;func.c&lt;/a&gt;源文件。</target>
        </trans-unit>
        <trans-unit id="fc1d5a95c4233b63280d0f7d11d256d9ad3780ef" translate="yes" xml:space="preserve">
          <source>All of the complications above (and others not mentioned here) arise from the need to preserve backwards compatibility for the hundreds of billions of SQLite database files in circulation. In a perfect world, there would be no such thing as a &quot;rowid&quot; and all tables would following the standard semantics implemented as &lt;a href=&quot;withoutrowid&quot;&gt;WITHOUT ROWID&lt;/a&gt; tables, only without the extra &quot;WITHOUT ROWID&quot; keywords. Unfortunately, life is messy. The designer of SQLite offers his sincere apology for the current mess.</source>
          <target state="translated">上面所有的复杂性（以及此处未提及的其他复杂性）是由于需要为循环中的数千亿个SQLite数据库文件保留向后兼容性。在一个理想的世界中，将没有&amp;ldquo; rowid&amp;rdquo;之类的东西，并且所有表都将遵循实现为&lt;a href=&quot;withoutrowid&quot;&gt;WITHOUT ROWID&lt;/a&gt;表的标准语义，只有没有额外的&amp;ldquo; WITHOUT ROWID&amp;rdquo;关键字。不幸的是，生活很乱。SQLite的设计师对当前的混乱表示诚挚的歉意。</target>
        </trans-unit>
        <trans-unit id="778689296bb157e74a14076a42a4ee37798df0eb" translate="yes" xml:space="preserve">
          <source>All of the existing safe languages are new. The developers of SQLite applaud the efforts of computer language researchers in trying to develop languages that are easier to program safely. We encourage these efforts to continue. Be we ourselves are more interested in old and boring languages when it comes to implementing SQLite.</source>
          <target state="translated">现有的安全语言都是新的。SQLite的开发者对计算机语言研究人员在努力开发更容易安全编程的语言方面所做的努力表示赞赏。我们鼓励这些努力继续下去。是我们自己在实现SQLite时,对古老而枯燥的语言更感兴趣。</target>
        </trans-unit>
        <trans-unit id="7375d32a78c6b8f51d450c556f25932bdf217bf1" translate="yes" xml:space="preserve">
          <source>All of the experiments that follow operate the same with either &quot;test1.dir&quot; or &quot;test1.tree&quot;. Very little performance difference is measured in either case, regardless of operating system.</source>
          <target state="translated">下面所有的实验都是用 &quot;test1.dir &quot;或 &quot;test1.tree &quot;来操作的。无论在哪种情况下,不管是什么操作系统,都能测出很小的性能差异。</target>
        </trans-unit>
        <trans-unit id="643d0c9cb63fb8635827200eced1089f9e88183c" translate="yes" xml:space="preserve">
          <source>All of the result in the example are the same if the comparisons are commuted - if expressions of the form &quot;a&amp;lt;40&quot; are rewritten as &quot;40&amp;gt;a&quot;.</source>
          <target state="translated">如果比较换位，示例中的所有结果都是相同的-如果形式为&amp;ldquo; a &amp;lt;40&amp;rdquo;的表达式被重写为&amp;ldquo; 40&amp;gt; a&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="cc0e885150a13c9c4803941a5f8336469ed747f0" translate="yes" xml:space="preserve">
          <source>All of the tests above must run successfully, on multiple platforms and under multiple compile-time configurations, before each release of SQLite.</source>
          <target state="translated">在每次发布SQLite之前,上述所有测试都必须在多个平台和多个编译时配置下成功运行。</target>
        </trans-unit>
        <trans-unit id="7efae1cd770ea6fe5f2bf4478750e0f4cc942ea9" translate="yes" xml:space="preserve">
          <source>All of these commands work the same way if the filename argument is is a ZIP Archive instead of an SQLite database.</source>
          <target state="translated">如果文件名参数是ZIP存档而不是SQLite数据库,所有这些命令的工作方式都是一样的。</target>
        </trans-unit>
        <trans-unit id="bf4dfc2a775cfce09d4f8b1860eec11883d0cac7" translate="yes" xml:space="preserve">
          <source>All of these factors combine to make SQLite a very trouble-free software library.</source>
          <target state="translated">所有这些因素结合在一起,使得SQLite成为一个非常省事的软件库。</target>
        </trans-unit>
        <trans-unit id="7683c6e8ad5efd15af0f1da2349a585dbe4001cb" translate="yes" xml:space="preserve">
          <source>All of these things can be provided in a single auxiliary C code file and then linked with the stock &quot;sqlite3.c&quot; code file to generate a working SQLite build for the target operating system. In addition to the alternative mutex and memory allocation subsystems and the new VFS, the auxiliary C code file should contain implementations for the following two routines:</source>
          <target state="translated">所有这些东西都可以在一个辅助的C代码文件中提供,然后与原有的 &quot;sqlite3.c &quot;代码文件链接,为目标操作系统生成一个工作的SQLite构建。除了替代的mutex和内存分配子系统以及新的VFS之外,辅助C代码文件应该包含以下两个例程的实现。</target>
        </trans-unit>
        <trans-unit id="690aa8cfa4b8586b89a0a9eedc4d3f3b13222c70" translate="yes" xml:space="preserve">
          <source>All other bytes of the database file header are reserved for future expansion and must be set to zero.</source>
          <target state="translated">数据库文件头的其他所有字节都是为将来的扩展而保留的,必须设置为零。</target>
        </trans-unit>
        <trans-unit id="74f932ce0ba425204c0c4c7e4d764d13c207d60d" translate="yes" xml:space="preserve">
          <source>All processes using a database must be on the same host computer; WAL does not work over a network filesystem.</source>
          <target state="translated">所有使用数据库的进程必须在同一台主机上;WAL不能在网络文件系统上工作。</target>
        </trans-unit>
        <trans-unit id="a5249f0151d2bf61030095430f42bcf6f2a43a1f" translate="yes" xml:space="preserve">
          <source>All programming languages are processed in two steps:</source>
          <target state="translated">所有的编程语言都要经过两步处理。</target>
        </trans-unit>
        <trans-unit id="d5b1adeb66f431eac1f1cb2925a5210daad86376" translate="yes" xml:space="preserve">
          <source>All programming languages uses those two basic steps. The main difference is in the executable format.</source>
          <target state="translated">所有的编程语言都使用这两个基本步骤。主要区别在于可执行格式。</target>
        </trans-unit>
        <trans-unit id="78a418c8d3a0ce039842b297ad3c3dfb42d51a90" translate="yes" xml:space="preserve">
          <source>All queries on the table must be full-text queries. In other words, they must use the MATCH or = operator with the table-name column as the left-hand operand, or else use the table-valued function syntax. Any query that is not a full-text query results in an error.</source>
          <target state="translated">对该表的所有查询必须是全文查询。换句话说,它们必须使用 MATCH 或=操作符,并将表名列作为左手操作数,否则使用表值函数语法。任何不是全文查询的查询都会导致错误。</target>
        </trans-unit>
        <trans-unit id="38351d4546ab4ff59382ce23bdac471def2ad5d5" translate="yes" xml:space="preserve">
          <source>All reads from and writes to the main database file begin at a page boundary and all writes are an integer number of pages in size. Reads are also usually an integer number of pages in size, with the one exception that when the database is first opened, the first 100 bytes of the database file (the database file header) are read as a sub-page size unit.</source>
          <target state="translated">所有对数据库主文件的读和写都是从一个页边界开始的,所有的写都是一个整数页的大小。读取通常也是一个整数页的大小,但有一个例外,当数据库第一次打开时,数据库文件的前100个字节(数据库文件头)是作为一个子页大小的单位读取的。</target>
        </trans-unit>
        <trans-unit id="d450d3a75d9f08311a07a29768bf79cccc1c19d2" translate="yes" xml:space="preserve">
          <source>All result codes are integers. Symbolic names for all result codes are created using &quot;#define&quot; macros in the sqlite3.h header file. There are separate sections in the sqlite3.h header file for the &lt;a href=&quot;c3ref/c_abort&quot;&gt;result code definitions&lt;/a&gt; and the &lt;a href=&quot;c3ref/c_abort_rollback&quot;&gt;extended result code definitions&lt;/a&gt;.</source>
          <target state="translated">所有结果代码均为整数。所有结果代码的符号名称都是使用sqlite3.h头文件中的&amp;ldquo; #define&amp;rdquo;宏创建的。sqlite3.h头文件中有单独的部分，用于&lt;a href=&quot;c3ref/c_abort&quot;&gt;结果代码定义&lt;/a&gt;和&lt;a href=&quot;c3ref/c_abort_rollback&quot;&gt;扩展的结果代码定义&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4028b4aa3d3e24115d72e2f624df2443ac4d4652" translate="yes" xml:space="preserve">
          <source>All spaces following the first two keywords are converted into a single space.</source>
          <target state="translated">前两个关键词后面的所有空格都会转换为一个空格。</target>
        </trans-unit>
        <trans-unit id="e86f24edc76db2b20a12087f5cf419af602faa95" translate="yes" xml:space="preserve">
          <source>All string values at the SQL level in SQLite are dynamic strings. Requiring type strings to be static makes it difficult to create an application-defined SQL function that can synthesize a pointer of an arbitrary type. We do not want users to create such SQL functions, since such functions would compromise the security of the system. Thus, the requirement to use static strings helps to defend that the integrity of the pointer-passing interfaces against ill-designed SQL functions. The static string requirement is not a perfect defense, since a sophisticated programmer can code around it, and a novice program can simply take the memory leak. But by stating that the pointer type string must be static, we hope to encourage developers who might otherwise use a dynamic string for the pointer type to think more carefully about the problem and avoid introducing security issues.</source>
          <target state="translated">SQLite中SQL级别的所有字符串值都是动态字符串。要求类型字符串是静态的,这就使得我们很难创建一个应用程序定义的SQL函数来合成一个任意类型的指针。我们不希望用户创建这样的SQL函数,因为这样的函数会影响系统的安全性。因此,使用静态字符串的要求有助于捍卫指针传递接口的完整性,防止设计不良的SQL函数。静态字符串的要求并不是一个完美的防御,因为一个成熟的程序员可以绕过它的代码,而一个新手程序可以简单地采取内存泄漏。但通过说明指针类型字符串必须是静态的,我们希望鼓励那些原本可能使用动态字符串作为指针类型的开发人员更仔细地考虑问题,避免引入安全问题。</target>
        </trans-unit>
        <trans-unit id="9a460cfc406da09ab8128bfc4445d97c56d406f1" translate="yes" xml:space="preserve">
          <source>All subsequent command line words are command arguments, not options.</source>
          <target state="translated">后面的命令行字都是命令参数,而不是选项。</target>
        </trans-unit>
        <trans-unit id="1ed156deca85bc9a5dd9088fbd94f8a842f1f33c" translate="yes" xml:space="preserve">
          <source>All substitutions begin with a single &quot;%&quot; and end with a single type character. The other elements of the substitution are optional.</source>
          <target state="translated">所有的替换都以一个&quot;%&quot;开头,以一个类型字符结束。替换的其他元素是可选的。</target>
        </trans-unit>
        <trans-unit id="6c42d2b7071c7a3c388400fdb8f6ee7f3109b7cf" translate="yes" xml:space="preserve">
          <source>All tables that participate in a union-vtab must be &lt;a href=&quot;rowidtable&quot;&gt;rowid tables&lt;/a&gt;.</source>
          <target state="translated">参与union-vtab的所有表都必须是&lt;a href=&quot;rowidtable&quot;&gt;rowid表&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a31bee81e9b968bc240c90d0ddec46a1b51435a7" translate="yes" xml:space="preserve">
          <source>All tables that participate in a union-vtab must have identical CREATE TABLE definitions, except that the names of the tables can be different.</source>
          <target state="translated">所有参与union-vtab的表必须有相同的CREATE TABLE定义,只是表的名称可以不同。</target>
        </trans-unit>
        <trans-unit id="5a5c1458a35b303771705c327746beaf8f938ca1" translate="yes" xml:space="preserve">
          <source>All terms of the WHERE clause are analyzed to see if they can be satisfied using indexes. To be usable by an index a term must be of one of the following forms:</source>
          <target state="translated">对WHERE子句的所有术语进行分析,看是否可以使用索引来满足它们。要想通过索引来使用,一个术语必须是以下形式之一:</target>
        </trans-unit>
        <trans-unit id="567093004d4bf6708c2d16ff16df1498f9ca4cec" translate="yes" xml:space="preserve">
          <source>All terms of the WHERE clause are analyzed to see if they can be satisfied using indices. To be usable by an index a term must be of one of the following forms:</source>
          <target state="translated">对WHERE子句的所有术语进行分析,看是否可以使用索引来满足它们。要想使用索引,一个术语必须是下列形式之一:</target>
        </trans-unit>
        <trans-unit id="cbf993933e40301457f333ff6f1f8a23481fc0a6" translate="yes" xml:space="preserve">
          <source>All tests are conducted on an otherwise quiescent machine. A simple Tcl script was used to generate and run all the tests. A copy of this Tcl script can be found in the SQLite source tree in the file &lt;b&gt;tools/speedtest.tcl&lt;/b&gt;.</source>
          <target state="translated">所有测试均在其他静态机器上进行。一个简单的Tcl脚本用于生成和运行所有测试。您可以在SQLite源代码树的&lt;b&gt;tools / speedtest.tcl&lt;/b&gt;文件中找到此Tcl脚本的副本。</target>
        </trans-unit>
        <trans-unit id="b130e54f0f69ef3abad26bc072b0470f6263286a" translate="yes" xml:space="preserve">
          <source>All tests must give the same answer in all three builds. See the &lt;a href=&quot;testing&quot;&gt;&quot;How SQLite Is Tested&quot;&lt;/a&gt; document for more detail.</source>
          <target state="translated">在所有三个版本中，所有测试必须给出相同的答案。有关更多详细信息，请参见&lt;a href=&quot;testing&quot;&gt;&amp;ldquo;如何测试SQLite&amp;rdquo;&lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="f132159b2587371da6eaa867ee955aed59cbbd60" translate="yes" xml:space="preserve">
          <source>All text strings are insert using one of the &lt;a href=&quot;c3ref/bind_blob&quot;&gt;sqlite3_bind_text()&lt;/a&gt; family of functions.</source>
          <target state="translated">使用&lt;a href=&quot;c3ref/bind_blob&quot;&gt;sqlite3_bind_text（）&lt;/a&gt;系列函数之一插入所有文本字符串。</target>
        </trans-unit>
        <trans-unit id="67d8d36777ef2e501af7ab9b2e6ef786e48ae2b6" translate="yes" xml:space="preserve">
          <source>All that said, it is possible that SQLite might one day be recoded in Rust. Recoding SQLite in Go is unlikely since Go hates assert(). But Rust is a possibility. Some preconditions that must occur before SQLite is recoded in Rust include:</source>
          <target state="translated">说了这么多,SQLite有可能有一天会在Rust中重新编码。在 Go 中重新编码 SQLite 的可能性不大,因为 Go 讨厌 assert()。但 Rust 是有可能的。在Rust中重新编码SQLite之前,必须具备的一些先决条件包括。</target>
        </trans-unit>
        <trans-unit id="707caca3d9bbd176531f568662a7102a40b5f6fd" translate="yes" xml:space="preserve">
          <source>All the example queries above return the ten most relevant query results. By modifying the values used with the OFFSET and LIMIT clauses, a query to return (say) the next ten most relevant results is easy to construct. This may be used to obtain the data required for a search applications second and subsequent pages of results.</source>
          <target state="translated">上面的所有示例查询都会返回十个最相关的查询结果。通过修改OFFSET和LIMIT子句使用的值,可以很容易地构建一个返回(例如)下十个最相关结果的查询。这可以用来获取搜索应用程序第二页和后续结果所需的数据。</target>
        </trans-unit>
        <trans-unit id="470143461be606a45aab0f210d1498edb2c84368" translate="yes" xml:space="preserve">
          <source>All things considered, applications should normally be able to hold their maximum memory allocation size below 2K or 4K. This gives a value for log&lt;sub&gt;2&lt;/sub&gt;(&lt;b&gt;n&lt;/b&gt;) of 2 or 3. This will limit &lt;b&gt;N&lt;/b&gt; to between 2 and 2.5 times &lt;b&gt;M&lt;/b&gt;.</source>
          <target state="translated">考虑所有因素，应用程序通常应该能够将其最大内存分配大小保持在2K或4K以下。这给出了日志值&lt;sub&gt;2&lt;/sub&gt;（&lt;b&gt;&amp;Ntilde;&lt;/b&gt; 2或3.本）将限制&lt;b&gt;&amp;Ntilde;&lt;/b&gt;为2和2.5倍之间&lt;b&gt;中号&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="635a64a808a6eed58043c45da38b8c4ec5742ac1" translate="yes" xml:space="preserve">
          <source>All three auxiliary functions extract a set of &quot;matchable phrases&quot; from the FTS query expression to work with. The set of matchable phrases for a given query consists of all phrases (including unquoted tokens and token prefixes) in the expression except those that are prefixed with a unary &quot;-&quot; operator (standard syntax) or are part of a sub-expression that is used as the right-hand operand of a NOT operator.</source>
          <target state="translated">所有三个辅助函数都会从FTS查询表达式中提取一组 &quot;可匹配短语 &quot;来使用。一个给定查询的可匹配短语集包括表达式中的所有短语(包括未引用的令牌和令牌前缀),但不包括那些以单数&quot;-&quot;运算符(标准语法)为前缀的短语或作为NOT运算符右手操作数的子表达式的一部分。</target>
        </trans-unit>
        <trans-unit id="e856a97cf9fae10a8a385ba08b2985c87e16aaf1" translate="yes" xml:space="preserve">
          <source>All three database engines run faster when they have indices to work with. But SQLite is still the fastest.</source>
          <target state="translated">当三个数据库引擎有索引可供使用时,它们的运行速度都更快。但SQLite仍然是最快的。</target>
        </trans-unit>
        <trans-unit id="6baeeca7bdbd41abd15a40b8b926de6f745b8bb0" translate="yes" xml:space="preserve">
          <source>All three of the above source files are contained in the &lt;a href=&quot;https://sqlite.org/download.html&quot;&gt;amalgamation tarball&lt;/a&gt; available on the &lt;a href=&quot;https://sqlite.org/download.html&quot;&gt;download page&lt;/a&gt;.</source>
          <target state="translated">以上所有三个源文件都包含在&lt;a href=&quot;https://sqlite.org/download.html&quot;&gt;下载页面&lt;/a&gt;上的&lt;a href=&quot;https://sqlite.org/download.html&quot;&gt;合并tarball中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bf60184a7e675d81f6bedcfe7ca27f21750f46d0" translate="yes" xml:space="preserve">
          <source>All type information or constraint specifications must be removed from column definitions. FTS3/4 ignores everything following the column name in a column definition, FTS5 attempts to parse it (and will report an error if it fails to).</source>
          <target state="translated">所有类型信息或约束规范必须从列定义中删除。FTS3/4会忽略列定义中列名后面的所有内容,FTS5会尝试解析它(如果失败,会报告错误)。</target>
        </trans-unit>
        <trans-unit id="a1de722aadb01564eff9284d3ae40b05c75cdc11" translate="yes" xml:space="preserve">
          <source>All uppercase characters within the ASCII range (Unicode codepoints less than 128), are transformed to their lowercase equivalents as part of the tokenization process. Thus, full-text queries are case-insensitive when using the simple tokenizer.</source>
          <target state="translated">作为标记化过程的一部分,ASCII范围内的所有大写字符(Unicode码点小于128)都会被转换为小写字符。因此,当使用简单标记器时,全文查询是不区分大小写的。</target>
        </trans-unit>
        <trans-unit id="230a993ba607de10c8e04d67e19e0d8357f45f60" translate="yes" xml:space="preserve">
          <source>All values in SQL statements, whether they are literals embedded in SQL statement text or &lt;a href=&quot;lang_expr#varparam&quot;&gt;parameters&lt;/a&gt; bound to &lt;a href=&quot;c3ref/stmt&quot;&gt;precompiled SQL statements&lt;/a&gt; have an implicit storage class. Under circumstances described below, the database engine may convert values between numeric storage classes (INTEGER and REAL) and TEXT during query execution.</source>
          <target state="translated">SQL语句中的所有值，无论它们是嵌入在SQL语句文本中的文字还是绑定到&lt;a href=&quot;c3ref/stmt&quot;&gt;预编译SQL语句的&lt;/a&gt;&lt;a href=&quot;lang_expr#varparam&quot;&gt;参数&lt;/a&gt;都具有隐式存储类。在下面描述的情况下，数据库引擎可以在查询执行期间在数字存储类（INTEGER和REAL）和TEXT之间转换值。</target>
        </trans-unit>
        <trans-unit id="d2db63f1dd84225eeca5b66732ebeb7dfeca7e9c" translate="yes" xml:space="preserve">
          <source>All versions of SQLite since 3.3.0 (2006-01-10) can read and write any schema format between 1 and 4. But older versions of SQLite might not be able to read formats greater than 1. So that older versions of SQLite will be able to read and write database files created by newer versions of SQLite, the default schema format was set to 1 for SQLite versions through 3.7.9 (2011-11-01). Beginning with &lt;a href=&quot;https://sqlite.org/releaselog/3_7_10.html&quot;&gt;version 3.7.10&lt;/a&gt; (2012-01-16), the default schema format is 4.</source>
          <target state="translated">从3.3.0（2006-01-10）开始的所有版本的SQLite都可以读取和写入1到4之间的任何模式格式。但是旧版本的SQLite可能无法读取大于1的格式。因此，旧版本的SQLite将可以读取和写入大于1的格式。能够读取和写入由SQLite的较新版本创建的数据库文件，对于SQLite版本到3.7.9（2011-11-01）的默认架构格式设置为1。从&lt;a href=&quot;https://sqlite.org/releaselog/3_7_10.html&quot;&gt;版本3.7.10&lt;/a&gt;（2012-01-16）开始，默认架构格式为4。</target>
        </trans-unit>
        <trans-unit id="a315e152418f974223f0caef4a38a40619deaba9" translate="yes" xml:space="preserve">
          <source>All versions of SQLite up to and including &lt;a href=&quot;https://sqlite.org/releaselog/3_7_9.html&quot;&gt;version 3.7.9&lt;/a&gt; (2011-11-01) assume that the filesystem does &lt;u&gt;not&lt;/u&gt; provide powersafe overwrite. SQLite has traditionally assumed that when any one byte of a file changes, all other bytes within the same sector of that byte have the potential of being corrupted on a power loss. When writing, SQLite has made sure to journal all bytes in the same sector of any modifications and it pads journal files out to the next sector boundary so that subsequent appends to that journal cannot damage prior records. SQLite understands the sector size to be the value returned by the xSectorSize method in the &lt;a href=&quot;vfs&quot;&gt;VFS&lt;/a&gt;. The SQLite team has often referred to the value returned by xSectorSize as the &quot;blast radius&quot; of a write, since it expresses the range of bytes that might be damaged if a power loss occurs during the write. The default &lt;a href=&quot;vfs&quot;&gt;VFSes&lt;/a&gt; for unix and windows have always returned 512 as the sector size (or blast radius) for all versions of SQLite up to and including version 3.7.9.</source>
          <target state="translated">的SQLite直至并包括所有版本&lt;a href=&quot;https://sqlite.org/releaselog/3_7_9.html&quot;&gt;3.7.9版本&lt;/a&gt;（2011-11-01）假定文件系统并&lt;u&gt;不能&lt;/u&gt;提供powersafe覆盖。传统上，SQLite假定文件的任何一个字节更改时，该字节同一扇区内的所有其他字节都有可能因断电而损坏。写入时，SQLite确保确保对任何修改的同一扇区中的所有字节进行日志记录，并将日志文件填充到下一个扇区边界，以使后续追加到该日志记录不会损坏先前的记录。 SQLite将扇区大小理解为&lt;a href=&quot;vfs&quot;&gt;VFS中&lt;/a&gt; xSectorSize方法返回的值。SQLite团队经常将xSectorSize返回的值称为写入的&amp;ldquo;爆炸半径&amp;rdquo;，因为它表示在写入过程中发生断电可能损坏的字节范围。Unix和Windows 的默认&lt;a href=&quot;vfs&quot;&gt;VFS&lt;/a&gt;始终返回512，作为所有SQLite版本（包括3.7.9）之前的扇区大小（或爆炸半径）。</target>
        </trans-unit>
        <trans-unit id="3ff80c8a340db91dd8a4375abd89d32aa974509b" translate="yes" xml:space="preserve">
          <source>All versions of SQLite up to and including version 3.5.9 have mishandled NULL values on the right-hand side of IN and NOT IN operators. Specifically, SQLite has previously ignored NULLs on the right-hand side of IN and NOT IN.</source>
          <target state="translated">从3.5.9版本开始,所有版本的SQLite都对IN和NOT IN运算符右侧的NULL值处理不当。具体来说,SQLite以前忽略了IN和NOT IN右侧的NULL值。</target>
        </trans-unit>
        <trans-unit id="f103276ac70c09043aecb18573124bfe2497c24b" translate="yes" xml:space="preserve">
          <source>Allocate a new b-tree in the main database file if P1==0 or in the TEMP database file if P1==1 or in an attached database if P1&amp;gt;1. The P3 argument must be 1 (BTREE_INTKEY) for a rowid table it must be 2 (BTREE_BLOBKEY) for an index or WITHOUT ROWID table. The root page number of the new b-tree is stored in register P2.</source>
          <target state="translated">如果P1 == 0，则在主数据库文件中分配新的b树；如果P1 == 1，则在TEMP数据库文件中分配新树；如果P1&amp;gt; 1，则在附加数据库中分配新树。P3参数对于rowid表必须为1（BTREE_INTKEY），对于索引或WITHOUT ROWID表必须为2（BTREE_BLOBKEY）。新b树的根页号存储在寄存器P2中。</target>
        </trans-unit>
        <trans-unit id="98c7e4f88a0a3613dabebb78baaf9f796e649934" translate="yes" xml:space="preserve">
          <source>Allocate a new changeset rebaser object. If successful, set (*ppNew) to point to the new object and return SQLITE_OK. Otherwise, if an error occurs, return an SQLite error code (e.g. SQLITE_NOMEM) and set (*ppNew) to NULL.</source>
          <target state="translated">分配一个新的改变集rebaser对象。如果成功,将(*ppNew)设置为指向新对象并返回SQLITE_OK。否则,如果发生错误,返回一个SQLite错误代码(例如SQLITE_NOMEM),并将(*ppNew)设置为NULL。</target>
        </trans-unit>
        <trans-unit id="890d83377e0f9622417e6019e12893679bb2c728" translate="yes" xml:space="preserve">
          <source>Allocate a new page if it easy and convenient to do so. Otherwise return NULL.</source>
          <target state="translated">如果方便的话,可以分配一个新的页面,否则返回NULL。否则返回NULL。</target>
        </trans-unit>
        <trans-unit id="0b563fc1e21cbbe40e2fcd69876f3f214fc04c0f" translate="yes" xml:space="preserve">
          <source>Allow &quot;&amp;lt;expr&amp;gt; IN &amp;lt;table&amp;gt;&quot; as a shorthand for &quot;&amp;lt;expr&amp;gt; IN (SELECT * FROM &amp;lt;table&amp;gt;&quot;.</source>
          <target state="translated">允许将&amp;ldquo; &amp;lt;expr&amp;gt; IN &amp;lt;表&amp;gt;&amp;rdquo;用作&amp;ldquo; &amp;lt;expr&amp;gt; IN（SELECT * FROM &amp;lt;表&amp;gt;&amp;rdquo;）的简写。</target>
        </trans-unit>
        <trans-unit id="06d0f1303155aabcd4262ede8a9d90bfb68ed8f4" translate="yes" xml:space="preserve">
          <source>Allow &quot;?&quot; parameters in the LIMIT clause.</source>
          <target state="translated">允许在limit子句中使用&quot;?&quot;参数。</target>
        </trans-unit>
        <trans-unit id="cd8e51f439edbc4cbc973e08ee46366e6e096d45" translate="yes" xml:space="preserve">
          <source>Allow &quot;VIEW&quot; to be a column name</source>
          <target state="translated">允许将 &quot;VIEW &quot;作为列名</target>
        </trans-unit>
        <trans-unit id="377c13da16b3a423a23503b52be9d946eb79c0be" translate="yes" xml:space="preserve">
          <source>Allow &lt;a href=&quot;deterministic&quot;&gt;deterministic SQL functions&lt;/a&gt; in the WHERE clause of a &lt;a href=&quot;partialindex&quot;&gt;partial index&lt;/a&gt;.</source>
          <target state="translated">允许在&lt;a href=&quot;partialindex&quot;&gt;部分索引&lt;/a&gt;的WHERE子句中使用&lt;a href=&quot;deterministic&quot;&gt;确定性SQL函数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d9a09844684ca2e04e8580f1dc89f5d23c5aed0e" translate="yes" xml:space="preserve">
          <source>Allow &lt;a href=&quot;lang_attach&quot;&gt;ATTACH&lt;/a&gt; and &lt;a href=&quot;lang_detach&quot;&gt;DETACH&lt;/a&gt; commands to work inside of a transaction.</source>
          <target state="translated">允许&lt;a href=&quot;lang_attach&quot;&gt;ATTACH&lt;/a&gt;和&lt;a href=&quot;lang_detach&quot;&gt;DETACH&lt;/a&gt;命令在事务内部工作。</target>
        </trans-unit>
        <trans-unit id="e9aa4176f2699ab1a840e5917668b064b3516ba4" translate="yes" xml:space="preserve">
          <source>Allow &lt;a href=&quot;vtab#tabfunc2&quot;&gt;table-valued functions&lt;/a&gt; to appear on the right-hand side of an &lt;a href=&quot;lang_expr#in_op&quot;&gt;IN operator&lt;/a&gt;.</source>
          <target state="translated">允许&lt;a href=&quot;vtab#tabfunc2&quot;&gt;表值函数&lt;/a&gt;出现在&lt;a href=&quot;lang_expr#in_op&quot;&gt;IN运算符&lt;/a&gt;的右侧。</target>
        </trans-unit>
        <trans-unit id="48d9b4c29aa05f94ecb72a287ad5d41af03effad" translate="yes" xml:space="preserve">
          <source>Allow &lt;a href=&quot;vtab#worid&quot;&gt;WITHOUT ROWID virtual tables&lt;/a&gt; to be writable if the PRIMARY KEY contains exactly one column.</source>
          <target state="translated">如果PRIMARY KEY仅包含一列，则允许&lt;a href=&quot;vtab#worid&quot;&gt;WITHOUT ROWID虚拟表&lt;/a&gt;可写。</target>
        </trans-unit>
        <trans-unit id="269070c3e8d911c8236d5f897186b3e1ab6e4e31" translate="yes" xml:space="preserve">
          <source>Allow &lt;a href=&quot;wal&quot;&gt;WAL-mode&lt;/a&gt; databases to be opened read-only as long as there is an existing read/write connection.</source>
          <target state="translated">允许&lt;a href=&quot;wal&quot;&gt;WAL模式&lt;/a&gt;被打开数据库只读只要有一个现有的读/写连接。</target>
        </trans-unit>
        <trans-unit id="ef741e84d49fdcc8210ba15eda342eea0faf46a9" translate="yes" xml:space="preserve">
          <source>Allow GLOB and LIKE operators to work as functions.</source>
          <target state="translated">允许GLOB和LIKE运算符作为函数工作。</target>
        </trans-unit>
        <trans-unit id="7d8d8f395445a63807721ea16945b2777fb51092" translate="yes" xml:space="preserve">
          <source>Allow NULL arguments in sqlite_compile() and sqlite_step().</source>
          <target state="translated">允许在sqlite_compile()和sqlite_step()中使用NULL参数。</target>
        </trans-unit>
        <trans-unit id="186268005d1a02f259dbb9958233b56b69668278" translate="yes" xml:space="preserve">
          <source>Allow WHERE clause terms on the left table of a LEFT OUTER JOIN to contain aggregate subqueries.</source>
          <target state="translated">允许在LEFT OUTER JOIN的左表的WHERE子句中包含集合子查询。</target>
        </trans-unit>
        <trans-unit id="38079f81b0c869a35e192a7c7ee51456917575b5" translate="yes" xml:space="preserve">
          <source>Allow a &lt;a href=&quot;lang_select#values&quot;&gt;VALUES clause&lt;/a&gt; to be used anywhere a &lt;a href=&quot;lang_select&quot;&gt;SELECT&lt;/a&gt; statement is valid.</source>
          <target state="translated">允许在&lt;a href=&quot;lang_select&quot;&gt;SELECT&lt;/a&gt;语句有效的任何地方使用&lt;a href=&quot;lang_select#values&quot;&gt;VALUES子句&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b29c570354c3dc76b997275a38b4804dd30d724a" translate="yes" xml:space="preserve">
          <source>Allow arbitrary expressions, including function calls and subqueries, in the filename argument to &lt;a href=&quot;lang_attach&quot;&gt;ATTACH&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;lang_attach&quot;&gt;ATTACH&lt;/a&gt;的filename参数中允许任意表达式，包括函数调用和子查询。</target>
        </trans-unit>
        <trans-unit id="087d2618f268406853ee3cd79209ec421c2d288d" translate="yes" xml:space="preserve">
          <source>Allow collating sequence names to be quoted.</source>
          <target state="translated">允许整理的序列名被引用。</target>
        </trans-unit>
        <trans-unit id="026b30b967a2b6589a1cfbc782a3c2b403048beb" translate="yes" xml:space="preserve">
          <source>Allow constraint names on the DEFAULT clause in a table definition</source>
          <target state="translated">允许在表定义中的DEFAULT子句上使用约束名。</target>
        </trans-unit>
        <trans-unit id="6215a826c022df62b341a6590cb9e2024e5f7525" translate="yes" xml:space="preserve">
          <source>Allow floating point literals to begin or end with a decimal point.</source>
          <target state="translated">允许浮点文字以小数点开始或结束。</target>
        </trans-unit>
        <trans-unit id="25c2ba2fe3b0e6c9a56edf6ddf62886b17854fb2" translate="yes" xml:space="preserve">
          <source>Allow identifiers to be quoted in square brackets, for compatibility with MS-Access.</source>
          <target state="translated">允许在方括号中引用标识符,以便与MS-Access兼容。</target>
        </trans-unit>
        <trans-unit id="5a61cbdfe59167766b82b62a24a23f799327821d" translate="yes" xml:space="preserve">
          <source>Allow indices to be used for sorting even if prior terms of the index are constrained by IN operators in the WHERE clause.</source>
          <target state="translated">允许将索引用于排序,即使索引的前项受到WHERE子句中IN操作符的限制。</target>
        </trans-unit>
        <trans-unit id="7ef34a12d16effc2a1e0c0a26a046cc6b9ba4f95" translate="yes" xml:space="preserve">
          <source>Allow more system calls to be overridden in the unix VFS - to provide better support for chromium sandboxes.</source>
          <target state="translated">允许更多的系统调用在unix VFS中被覆盖--为chromium沙盒提供更好的支持。</target>
        </trans-unit>
        <trans-unit id="e5d47c202ac74ad6be5e5952c7d032a0006fd10e" translate="yes" xml:space="preserve">
          <source>Allow multiple simultaneous readers under Windows by simulating the reader/writers locks that are missing from Win95/98/ME.</source>
          <target state="translated">通过模拟Win95/98/ME中缺失的读/写锁,允许在Windows下多人同时读。</target>
        </trans-unit>
        <trans-unit id="aec002f75566ff8ab7f2b3337c8366c012290ae9" translate="yes" xml:space="preserve">
          <source>Allow new user-defined functions to be created when there are already one or more precompiled SQL statements.</source>
          <target state="translated">当已经有一个或多个预编译的SQL语句时,允许创建新的用户定义函数。</target>
        </trans-unit>
        <trans-unit id="c1acd99d1b7ffc9d5267e039032ab7559c12120f" translate="yes" xml:space="preserve">
          <source>Allow read transactions to be freely opened and closed by SQL statements run from within the implementation of &lt;a href=&quot;appfunc&quot;&gt;application-defined SQL functions&lt;/a&gt; if the function is called by a SELECT statement that does not access any database table.</source>
          <target state="translated">如果由不访问任何数据库表的SELECT语句调用该函数，则允许在&lt;a href=&quot;appfunc&quot;&gt;应用程序定义的SQL函数&lt;/a&gt;的实现中运行的SQL语句自由地打开和关闭读取事务。</target>
        </trans-unit>
        <trans-unit id="331932f674e6d859e399fb8d0775ada55921d45e" translate="yes" xml:space="preserve">
          <source>Allow read transactions to be freely opened and closed by SQL statements run from within the implementation of &lt;a href=&quot;c3ref/create_function&quot;&gt;application-defined SQL functions&lt;/a&gt; if the function is called by a SELECT statement that does not access any database table.</source>
          <target state="translated">如果由不访问任何数据库表的SELECT语句调用该函数，则允许在&lt;a href=&quot;c3ref/create_function&quot;&gt;应用程序定义的SQL函数&lt;/a&gt;的实现中运行的SQL语句自由打开和关闭读取事务。</target>
        </trans-unit>
        <trans-unit id="16104cba6ed4e5c5fd3de40cb546c3fb1bc3c957" translate="yes" xml:space="preserve">
          <source>Allow sqlite_exec() to be called from within user-defined SQL functions.</source>
          <target state="translated">允许从用户定义的SQL函数中调用sqlite_exec()。</target>
        </trans-unit>
        <trans-unit id="b9296631111fc0993d0527ddffb1b74601f16736" translate="yes" xml:space="preserve">
          <source>Allow the &lt;a href=&quot;lang_vacuum&quot;&gt;VACUUM&lt;/a&gt; command to change the page size of a database file.</source>
          <target state="translated">允许&lt;a href=&quot;lang_vacuum&quot;&gt;VACUUM&lt;/a&gt;命令更改数据库文件的页面大小。</target>
        </trans-unit>
        <trans-unit id="aac64bf7a32177d90d0452da0d0056ea1b87de06" translate="yes" xml:space="preserve">
          <source>Allow the &lt;a href=&quot;vtab#xbestindex&quot;&gt;xBestIndex()&lt;/a&gt; method of &lt;a href=&quot;vtab&quot;&gt;virtual table&lt;/a&gt; implementations to return &lt;a href=&quot;rescode#constraint&quot;&gt;SQLITE_CONSTRAINT&lt;/a&gt; to indicate that the proposed query plan is unusable and should not be given further consideration.</source>
          <target state="translated">允许&lt;a href=&quot;vtab&quot;&gt;虚拟表&lt;/a&gt;实现的&lt;a href=&quot;vtab#xbestindex&quot;&gt;xBestIndex（）&lt;/a&gt;方法返回&lt;a href=&quot;rescode#constraint&quot;&gt;SQLITE_CONSTRAINT，&lt;/a&gt;以指示建议的查询计划不可用，不应作进一步考虑。</target>
        </trans-unit>
        <trans-unit id="6424ee4a8785aaef1a25b07cf3555293853c9183" translate="yes" xml:space="preserve">
          <source>Allow the DEFAULT value of a column to call functions that have constant operands</source>
          <target state="translated">允许列的DEFAULT值来调用操作数为常数的函数。</target>
        </trans-unit>
        <trans-unit id="6b663434ab971b5c50c2b931e627bcf32963ce5d" translate="yes" xml:space="preserve">
          <source>Allow the error message from &lt;a href=&quot;pragma#pragma_integrity_check&quot;&gt;PRAGMA integrity_check&lt;/a&gt; to be longer than 20000 bytes.</source>
          <target state="translated">允许来自&lt;a href=&quot;pragma#pragma_integrity_check&quot;&gt;PRAGMA integrity_check&lt;/a&gt;的错误消息长于20000字节。</target>
        </trans-unit>
        <trans-unit id="acb3e6f837b7598e3baf15397c889298e8fd1c4d" translate="yes" xml:space="preserve">
          <source>Allow the name of a database to be prefixed by the driver type. For now, the only driver type is &quot;gdbm:&quot;.</source>
          <target state="translated">允许将数据库的名称作为驱动类型的前缀。目前,唯一的驱动类型是 &quot;gdbm:&quot;。</target>
        </trans-unit>
        <trans-unit id="dfc00039aaf898d163afc8dbd0e94542ba8ecc28" translate="yes" xml:space="preserve">
          <source>Allow the value -9223372036854775808 as an integer literal in SQL statements.</source>
          <target state="translated">允许在SQL语句中使用-9223372036854775808作为整数文字。</target>
        </trans-unit>
        <trans-unit id="dee90ceb52dbab56bc4990303982723135b728d9" translate="yes" xml:space="preserve">
          <source>Allow transactions to span Linux Threads</source>
          <target state="translated">允许事务跨越Linux线程</target>
        </trans-unit>
        <trans-unit id="5ffa48f8c38520d1cf8de848950d598b10eb8e45" translate="yes" xml:space="preserve">
          <source>Allow up to 64 tables in a join - the old limit was 32.</source>
          <target state="translated">允许在一个连接中最多连接64个表--旧的限制是32个。</target>
        </trans-unit>
        <trans-unit id="d2fef18fe97d9b603d8ce243c65accbdab4d874a" translate="yes" xml:space="preserve">
          <source>Allow virtual table constructors to be invoked recursively.</source>
          <target state="translated">允许递归调用虚拟表构造函数。</target>
        </trans-unit>
        <trans-unit id="90e23d564e7f297c7a2b5ceff9d8f6ef229ac9a5" translate="yes" xml:space="preserve">
          <source>Allowed P5 bits:</source>
          <target state="translated">允许的P5位。</target>
        </trans-unit>
        <trans-unit id="bfb881afe9c0e49680f0a06404ed4210a89ab58a" translate="yes" xml:space="preserve">
          <source>Allowed return values from [sqlite3_txn_state()]</source>
          <target state="translated">允许从[sqlite3_txn_state()]返回的值。</target>
        </trans-unit>
        <trans-unit id="1287cd665e8d2234952aeb1f2ae2c3398192c7b9" translate="yes" xml:space="preserve">
          <source>Allowing extension components to pass private information to one another securely and without introducing pointer leaks requires new interfaces:</source>
          <target state="translated">允许扩展组件安全地相互传递私人信息,并且不引入指针泄漏,需要新的接口。</target>
        </trans-unit>
        <trans-unit id="58216c0e44a2a5d1fb12649c30e0ddf5229fffd5" translate="yes" xml:space="preserve">
          <source>Almost all CVEs written against SQLite require the ability to inject and run arbitrary SQL.</source>
          <target state="translated">几乎所有针对SQLite编写的CVE都需要注入和运行任意SQL的能力。</target>
        </trans-unit>
        <trans-unit id="000b2c34686fc4cba8d7591893d96173b465ff5d" translate="yes" xml:space="preserve">
          <source>Almost all bugs reported by CVEs are just bugs and not true vulnerabilities. Claiming that they are vulnerabilities is stretching the meaning of the word &quot;vulnerability&quot; and the SQLite developers do not wish to participate in that deception.</source>
          <target state="translated">几乎所有CVE报告的错误都只是错误,而不是真正的漏洞。声称它们是漏洞是对 &quot;漏洞 &quot;一词含义的延伸,SQLite开发人员不希望参与这种欺骗。</target>
        </trans-unit>
        <trans-unit id="0d20875a194118243c2bc48398fc9e50e653168b" translate="yes" xml:space="preserve">
          <source>Alphabetical Listing Of All Documents</source>
          <target state="translated">按字母顺序排列的所有文件</target>
        </trans-unit>
        <trans-unit id="fc6ed234869c2180894bb5c831639c8bf2a71c3a" translate="yes" xml:space="preserve">
          <source>Also available is the similar but more mature &lt;a href=&quot;fts3&quot;&gt;FTS3/4&lt;/a&gt; module. FTS5 is a new version of FTS4 that includes various fixes and solutions for problems that could not be fixed in FTS4 without sacrificing backwards compatibility. Some of these problems are &lt;a href=&quot;fts5#_summary_of_technical_differences_&quot;&gt;described below&lt;/a&gt;.</source>
          <target state="translated">也提供类似但更成熟的&lt;a href=&quot;fts3&quot;&gt;FTS3 / 4&lt;/a&gt;模块。FTS5是FTS4的新版本，其中包括针对各种问题的解决方案和解决方案，这些问题和解决方案在不牺牲向后兼容性的情况下无法在FTS4中解决。其中一些问题&lt;a href=&quot;fts5#_summary_of_technical_differences_&quot;&gt;描述如下&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cdc4b8824c8f732ab94ebdcfb7669cd9ac01bcf0" translate="yes" xml:space="preserve">
          <source>Also available: &lt;a href=&quot;../rescode&quot;&gt;list of error codes&lt;/a&gt;</source>
          <target state="translated">也可用：&lt;a href=&quot;../rescode&quot;&gt;错误代码列表&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f04534899f708d46ebaa30f16a02cbe243e196ae" translate="yes" xml:space="preserve">
          <source>Also available: &lt;a href=&quot;rescode&quot;&gt;list of error codes&lt;/a&gt;</source>
          <target state="translated">也可用：&lt;a href=&quot;rescode&quot;&gt;错误代码列表&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="861a9e2d67fe5f61973dab8932f2db2e113ce546" translate="yes" xml:space="preserve">
          <source>Also, whether or not P4 is set, check that this is not being called from within a callback to a virtual table xSync() method. If it is, the error code will be set to SQLITE_LOCKED.</source>
          <target state="translated">另外,无论P4是否被设置,请检查是否在回调到虚拟表xSync()方法的范围内调用这个方法。如果是,错误代码将被设置为SQLITE_LOCKED。</target>
        </trans-unit>
        <trans-unit id="087d1b6052e351518f2d15a60b3d4e94a4ca524e" translate="yes" xml:space="preserve">
          <source>Alternatively, FTS5 may be built as a loadable extension.</source>
          <target state="translated">另外,FTS5也可以作为一个可加载的扩展来构建。</target>
        </trans-unit>
        <trans-unit id="b0c1c99f2707eb260cd81c76dc0cd3c1b0734ce4" translate="yes" xml:space="preserve">
          <source>Alternatively, the first argument following to &quot;.ar&quot; may be the concatenation of the short form of all required options (without the &quot;-&quot; characters). In this case arguments for options requiring them are read from the command line next, and any remaining words are considered command arguments. For example:</source>
          <target state="translated">或者,&quot;.ar &quot;后面的第一个参数可以是所有所需选项的简写(不含&quot;-&quot;字符)。在这种情况下,需要它们的选项的参数将从命令行中读取,剩余的任何字都被视为命令参数。例如</target>
        </trans-unit>
        <trans-unit id="5abd2d3f1bfc69f474a1675b744197ff1ab504ae" translate="yes" xml:space="preserve">
          <source>Alternatively, the unionvtab.c file may be compiled into the application. In this case, the following function should be invoked to register the extension with each new database connection:</source>
          <target state="translated">或者,可以将 unionvtab.c 文件编译到应用程序中。在这种情况下,应该调用下面的函数来为每个新的数据库连接注册扩展名。</target>
        </trans-unit>
        <trans-unit id="ee75d1aa4e172f68779a1484c212e21f3e9f3faf" translate="yes" xml:space="preserve">
          <source>Alternatively, the zipfile.c file may be compiled into the application. In this case, the following function should be invoked to register the extension with each new database connection:</source>
          <target state="translated">另外,zipfile.c文件也可以被编译到应用程序中。在这种情况下,应该调用下面的函数来为每个新的数据库连接注册扩展名。</target>
        </trans-unit>
        <trans-unit id="5944ffdf9815956de892051d5dd5e1fe60e1a9e4" translate="yes" xml:space="preserve">
          <source>Alternatively, you can create a new database using the default temporary storage, then save that database into a disk file using the &quot;.save&quot; command:</source>
          <target state="translated">另外,也可以使用默认的临时存储创建一个新的数据库,然后使用&quot;.save &quot;命令将该数据库保存到磁盘文件中。</target>
        </trans-unit>
        <trans-unit id="b26855d54d9f7346a9489732c53c62b9c7f06b57" translate="yes" xml:space="preserve">
          <source>Alternatives (2) and (3) only work for the TEMP database associated with each database connection, but alternative (1) works anywhere. For historical reasons, callbacks from the &lt;a href=&quot;c3ref/set_authorizer&quot;&gt;sqlite3_set_authorizer()&lt;/a&gt; interface always refer to the schema table using names (1) or (3).</source>
          <target state="translated">备选方案（2）和（3）仅适用于与每个数据库连接关联的TEMP数据库，而备选方案（1）在任何地方都有效。由于历史原因，来自&lt;a href=&quot;c3ref/set_authorizer&quot;&gt;sqlite3_set_authorizer（）&lt;/a&gt;接口的回调始终使用名称（1）或（3）引用架构表。</target>
        </trans-unit>
        <trans-unit id="5b777ccc0b549914aaf4c953fa2687953baa7c2b" translate="yes" xml:space="preserve">
          <source>Although FTS3 and FTS4 are included with the SQLite core source code, they are not enabled by default. To build SQLite with FTS functionality enabled, define the preprocessor macro &lt;a href=&quot;compile#enable_fts3&quot;&gt;SQLITE_ENABLE_FTS3&lt;/a&gt; when compiling. New applications should also define the &lt;a href=&quot;compile#enable_fts3_parenthesis&quot;&gt;SQLITE_ENABLE_FTS3_PARENTHESIS&lt;/a&gt; macro to enable the &lt;a href=&quot;fts3#_set_operations_using_the_enhanced_query_syntax&quot;&gt;enhanced query syntax&lt;/a&gt; (see below). Usually, this is done by adding the following two switches to the compiler command line:</source>
          <target state="translated">虽然FTS3和FTS4包含在SQLite核心源代码中，但默认情况下未启用它们。要构建启用了FTS功能的SQLite，&lt;a href=&quot;compile#enable_fts3&quot;&gt;请&lt;/a&gt;在编译时定义预处理程序宏SQLITE_ENABLE_FTS3。新应用程序还应该定义&lt;a href=&quot;compile#enable_fts3_parenthesis&quot;&gt;SQLITE_ENABLE_FTS3_PARENTHESIS&lt;/a&gt;宏以启用&lt;a href=&quot;fts3#_set_operations_using_the_enhanced_query_syntax&quot;&gt;增强的查询语法&lt;/a&gt;（请参见下文）。通常，这是通过在编译器命令行中添加以下两个开关来完成的：</target>
        </trans-unit>
        <trans-unit id="695189fbab565d10c4e5c26d8849228747eb7d89" translate="yes" xml:space="preserve">
          <source>Although it is less common, a call to &lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare()&lt;/a&gt; or &lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare_v2()&lt;/a&gt; may also return SQLITE_LOCKED if it cannot obtain a read-lock on the &lt;a href=&quot;schematab&quot;&gt;sqlite_schema table&lt;/a&gt; of each attached database. These APIs need to read the schema data contained in the sqlite_schema table in order to compile SQL statements to &lt;a href=&quot;c3ref/stmt&quot;&gt;sqlite3_stmt*&lt;/a&gt; objects.</source>
          <target state="translated">尽管不太常见，但如果调用&lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare（）&lt;/a&gt;或&lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare_v2（）&lt;/a&gt;不能在每个附加数据库的&lt;a href=&quot;schematab&quot;&gt;sqlite_schema表&lt;/a&gt;上获得读取锁，则也可能返回SQLITE_LOCKED 。这些API需要读取sqlite_schema表中包含的架构数据，以便将SQL语句编译为&lt;a href=&quot;c3ref/stmt&quot;&gt;sqlite3_stmt *&lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="024fe1545f30cb8dee088c5ad188ae320d8b4ae9" translate="yes" xml:space="preserve">
          <source>Although it is less common, a call to &lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare()&lt;/a&gt; or &lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare_v2()&lt;/a&gt; may also return SQLITE_LOCKED if it cannot obtain a read-lock on the sqlite_master table of each attached database. These APIs need to read the schema data contained in the sqlite_master table in order to compile SQL statements to &lt;a href=&quot;c3ref/stmt&quot;&gt;sqlite3_stmt*&lt;/a&gt; objects.</source>
          <target state="translated">尽管不太常见，但如果调用&lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare（）&lt;/a&gt;或&lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare_v2（）&lt;/a&gt;不能在每个附加数据库的sqlite_master表上获得读取锁，则也可能返回SQLITE_LOCKED。这些API需要读取sqlite_master表中包含的架构数据，以便将SQL语句编译为&lt;a href=&quot;c3ref/stmt&quot;&gt;sqlite3_stmt *&lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="f535c18aa59fdbaaceb49a43b9f2ac5c4e156d04" translate="yes" xml:space="preserve">
          <source>Although it would be easy to design a system that uses the</source>
          <target state="translated">虽然很容易设计出一个使用的系统。</target>
        </trans-unit>
        <trans-unit id="38350322f36d3cb7eee20f2334360ada16ffdbe4" translate="yes" xml:space="preserve">
          <source>Always NULL</source>
          <target state="translated">始终为空</target>
        </trans-unit>
        <trans-unit id="6556666b4b860beb62beea54857b52422d71a07f" translate="yes" xml:space="preserve">
          <source>Always convert IEEE floating point NaN values into NULL during processing. (Ticket #3060)</source>
          <target state="translated">在处理过程中总是将IEEE浮点NaN值转换为NULL。(Ticket #3060)</target>
        </trans-unit>
        <trans-unit id="87b27942fc2ef02de9cc71a49d6d11d937c022cb" translate="yes" xml:space="preserve">
          <source>Always interpret non-zero floating-point values as TRUE, even if the integer part is zero. Ticket &lt;a href=&quot;https://www.sqlite.org/src/info/36fae083b450e3a&quot;&gt;36fae083b450e3a&lt;/a&gt;</source>
          <target state="translated">即使整数部分为零，也始终将非零浮点值解释为TRUE。机票&lt;a href=&quot;https://www.sqlite.org/src/info/36fae083b450e3a&quot;&gt;36fae083b450e3a&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="01c848b30df81d8f55cf3c7d1f8d1d01a761b810" translate="yes" xml:space="preserve">
          <source>Always open files using FILE_FLAG_RANDOM_ACCESS under Windows.</source>
          <target state="translated">在Windows下始终使用FILE_FLAG_RANDOM_ACCESS打开文件。</target>
        </trans-unit>
        <trans-unit id="f8d9e60c4d2bfefb9734ff11e252389b5ad3e363" translate="yes" xml:space="preserve">
          <source>Always stores polygons using the binary format, which is faster and uses less space.</source>
          <target state="translated">始终使用二进制格式存储多边形,这样速度更快,使用空间更小。</target>
        </trans-unit>
        <trans-unit id="c0cacbdc1960d533261c8055f23aacbc49821e24" translate="yes" xml:space="preserve">
          <source>Always use &quot;.&quot; instead of &quot;,&quot; as the decimal point even if the locale requests &quot;,&quot;.</source>
          <target state="translated">始终使用&quot;.&quot;代替&quot;,&quot;作为小数点,即使当地语言要求使用&quot;,&quot;。</target>
        </trans-unit>
        <trans-unit id="584a08c96e54122403ed19c82a813d569f28232d" translate="yes" xml:space="preserve">
          <source>Always use memory</source>
          <target state="translated">始终使用内存</target>
        </trans-unit>
        <trans-unit id="c823a3478b423d7cd3fa93f63e415cd1f8284276" translate="yes" xml:space="preserve">
          <source>Always use temporary files</source>
          <target state="translated">始终使用临时文件</target>
        </trans-unit>
        <trans-unit id="57bd289a4480abf71228980bc961a3a7a81bab14" translate="yes" xml:space="preserve">
          <source>Ambiguity resolved using a WHERE clause:</source>
          <target state="translated">使用WHERE子句解决了歧义。</target>
        </trans-unit>
        <trans-unit id="977cc4fa3c5b3e0d768448bc0910909b0cd480d9" translate="yes" xml:space="preserve">
          <source>Ambiguous use of ON:</source>
          <target state="translated">模糊使用ON。</target>
        </trans-unit>
        <trans-unit id="7e0cddb45b39e592335cd66056d26b1854d76f94" translate="yes" xml:space="preserve">
          <source>Among other things, sqlite3_initialize() will invoke sqlite3_os_init(). Similarly, sqlite3_shutdown() will invoke sqlite3_os_end().</source>
          <target state="translated">其中,sqlite3_initialize()会调用sqlite3_os_init()。同样,sqlite3_shutdown()会调用sqlite3_os_end()。</target>
        </trans-unit>
        <trans-unit id="6a0ecb85fd4a2b4dd0713046f9744fe6177cf89e" translate="yes" xml:space="preserve">
          <source>An &quot;SQLite Archive&quot; is a file container similar to a &lt;a href=&quot;https://en.wikipedia.org/wiki/Zip_(file_format)&quot;&gt;ZIP archive&lt;/a&gt; or &lt;a href=&quot;https://en.wikipedia.org/wiki/Tar_(computing)&quot;&gt;Tarball&lt;/a&gt; but based on an SQLite database.</source>
          <target state="translated">&amp;ldquo; SQLite存档&amp;rdquo;是类似于&lt;a href=&quot;https://en.wikipedia.org/wiki/Zip_(file_format)&quot;&gt;ZIP存档&lt;/a&gt;或&lt;a href=&quot;https://en.wikipedia.org/wiki/Tar_(computing)&quot;&gt;Tarball&lt;/a&gt;的文件容器，但基于SQLite数据库。</target>
        </trans-unit>
        <trans-unit id="348f5f09abc7f6ee023e124686a6cf3527b1dbca" translate="yes" xml:space="preserve">
          <source>An &quot;application file format&quot; is the file format used to persist application state to disk or to exchange information between programs. There are thousands of application file formats in use today. Here are just a few examples:</source>
          <target state="translated">应用程序文件格式 &quot;是指用于将应用程序状态持久化到磁盘上或在程序之间交换信息的文件格式。今天有数千种应用文件格式在使用。这里只是一些例子。</target>
        </trans-unit>
        <trans-unit id="b8d82aa19e1738a25aad29a6b9a73b1ca57ba1dc" translate="yes" xml:space="preserve">
          <source>An &quot;external content&quot; FTS4 table is similar to a contentless table, except that if evaluation of a query requires the value of a column other than docid, FTS4 attempts to retrieve that value from a table (or view, or virtual table) nominated by the user (hereafter referred to as the &quot;content table&quot;). The FTS4 module never writes to the content table, and writing to the content table does not affect the full-text index. It is the responsibility of the user to ensure that the content table and the full-text index are consistent.</source>
          <target state="translated">一个 &quot;外部内容 &quot;的FTS4表类似于无内容表,只是如果查询的评估需要docid以外的列的值,FTS4会尝试从用户指定的表(或视图,或虚拟表)(以下简称 &quot;内容表&quot;)中检索该值。FTS4模块从不向内容表写入,向内容表写入也不影响全文索引。用户有责任确保内容表和全文索引的一致性。</target>
        </trans-unit>
        <trans-unit id="3ec1d3e19881ca421cb7ef0c70026b7ad57adf0c" translate="yes" xml:space="preserve">
          <source>An &quot;int&quot; or &quot;unsigned int&quot;. 32-bits on all modern systems.</source>
          <target state="translated">一个 &quot;int &quot;或 &quot;无符号int&quot;。在所有现代系统上都是32位。</target>
        </trans-unit>
        <trans-unit id="8ca7e1d1ee9bc38ef78e0ad004ec09a25f38b015" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;#sqlite3_file&quot;&gt;sqlite3_file&lt;/a&gt; object represents an open file in the &lt;a href=&quot;#sqlite3_vfs&quot;&gt;OS interface layer&lt;/a&gt;. Individual OS interface implementations will want to subclass this object by appending additional fields for their own use. The pMethods entry is a pointer to an &lt;a href=&quot;#sqlite3_io_methods&quot;&gt;sqlite3_io_methods&lt;/a&gt; object that defines methods for performing I/O operations on the open file.</source>
          <target state="translated">一个&lt;a href=&quot;#sqlite3_file&quot;&gt;sqlite3_file&lt;/a&gt;对象表示在一个打开的文件&lt;a href=&quot;#sqlite3_vfs&quot;&gt;OS界面层&lt;/a&gt;。各个OS接口实现将希望通过附加其他字段供自己使用来对该对象进行子类化。 pMethods条目是指向&lt;a href=&quot;#sqlite3_io_methods&quot;&gt;sqlite3_io_methods&lt;/a&gt;对象的指针，该对象定义用于对打开的文件执行I / O操作的方法。</target>
        </trans-unit>
        <trans-unit id="04381375841e88bf037fe1e6179f30d5aff3be33" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;../lang_insert&quot;&gt;INSERT&lt;/a&gt; that fails due to a constraint violation is not a successful &lt;a href=&quot;../lang_insert&quot;&gt;INSERT&lt;/a&gt; and does not change the value returned by this routine. Thus INSERT OR FAIL, INSERT OR IGNORE, INSERT OR ROLLBACK, and INSERT OR ABORT make no changes to the return value of this routine when their insertion fails. When INSERT OR REPLACE encounters a constraint violation, it does not fail. The INSERT continues to completion after deleting rows that caused the constraint problem so INSERT OR REPLACE will always change the return value of this interface.</source>
          <target state="translated">由于违反约束而失败的&lt;a href=&quot;../lang_insert&quot;&gt;INSERT&lt;/a&gt;不是成功的&lt;a href=&quot;../lang_insert&quot;&gt;INSERT&lt;/a&gt;，并且不会更改此例程返回的值。因此，当插入失败时，INSERT OR FAIL，INSERT OR IGNORE，INSERT OR ROLLBACK和INSERT OR ABORT不会更改此例程的返回值。当INSERT或REPLACE遇到约束冲突时，它不会失败。删除导致约束问题的行后，INSERT继续完成，因此INSERT OR REPLACE将始终更改此接口的返回值。</target>
        </trans-unit>
        <trans-unit id="b7085e9237366e0a877aba7cfe87f1fe93d5ad83" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;c3ref/vfs&quot;&gt;sqlite3_vfs&lt;/a&gt; object defines the name of the VFS and the core methods that implement the interface to the operating system, such as checking for existence of files, deleting files, creating files and opening and for reading and/or writing, converting filenames into their canonical form. The &lt;a href=&quot;c3ref/vfs&quot;&gt;sqlite3_vfs&lt;/a&gt; object also contains methods for obtaining randomness from the operating system, for suspending a process (sleeping) and for finding the current date and time.</source>
          <target state="translated">一个&lt;a href=&quot;c3ref/vfs&quot;&gt;sqlite3_vfs&lt;/a&gt;对象定义VFS和芯的方法实现该接口到操作系统，如检查的文件的存在，删除文件，创建文件和开口和用于读取和/或写入，转换文件名到其规范的名称形成。所述&lt;a href=&quot;c3ref/vfs&quot;&gt;sqlite3_vfs&lt;/a&gt;对象还包含用于从所述操作系统获得随机性，用于悬挂的处理（睡眠）和用于确定当前日期和时间的方法。</target>
        </trans-unit>
        <trans-unit id="1f60bd7f87def89c1a6337dcd5b5e2b9262a189b" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;file&quot;&gt;sqlite3_file&lt;/a&gt; object represents an open file in the &lt;a href=&quot;vfs&quot;&gt;OS interface layer&lt;/a&gt;. Individual OS interface implementations will want to subclass this object by appending additional fields for their own use. The pMethods entry is a pointer to an &lt;a href=&quot;io_methods&quot;&gt;sqlite3_io_methods&lt;/a&gt; object that defines methods for performing I/O operations on the open file.</source>
          <target state="translated">一个&lt;a href=&quot;file&quot;&gt;sqlite3_file&lt;/a&gt;对象表示在一个打开的文件&lt;a href=&quot;vfs&quot;&gt;OS界面层&lt;/a&gt;。各个OS接口实现将希望通过附加其他字段供自己使用来对该对象进行子类化。 pMethods条目是指向&lt;a href=&quot;io_methods&quot;&gt;sqlite3_io_methods&lt;/a&gt;对象的指针，该对象定义用于对打开的文件执行I / O操作的方法。</target>
        </trans-unit>
        <trans-unit id="7a08f9e5c908a78454f64ebfc15b9347529f0e74" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;http://en.wikipedia.org/wiki/R-tree&quot;&gt;R-Tree&lt;/a&gt; is a special index that is designed for doing range queries. R-Trees are most commonly used in geospatial systems where each entry is a rectangle with minimum and maximum X and Y coordinates. Given a query rectangle, an R-Tree is able to quickly find all entries that are contained within the query rectangle or which overlap the query rectangle. This idea is easily extended to three dimensions for use in CAD systems. R-Trees also find use in time-domain range look-ups. For example, suppose a database records the starting and ending times for a large number of events. A R-Tree is able to quickly find all events that were active at any time during a given time interval, or all events that started during a particular time interval, or all events that both started and ended within a given time interval. And so forth.</source>
          <target state="translated">一个&lt;a href=&quot;http://en.wikipedia.org/wiki/R-tree&quot;&gt;R-树&lt;/a&gt;是专用于进行范围查询的特殊索引。 R树最常用于地理空间系统，其中每个条目都是一个具有最小和最大X和Y坐标的矩形。给定一个查询矩形，R-Tree可以快速找到该查询矩形中包含的或与查询矩形重叠的所有条目。这个想法很容易扩展到三个维度，以用于CAD系统。 R树也可用于时域范围查找。例如，假设数据库记录了大量事件的开始和结束时间。 R-Tree能够快速找到在给定时间间隔内任何时间处于活动状态的所有事件，或在特定时间间隔内开始的所有事件，或在给定时间间隔内开始和结束的所有事件。依此类推。</target>
        </trans-unit>
        <trans-unit id="d64b5f4a5837b8ba41bf8ce91558a97ec28c88b2" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;https://en.wikipedia.org/wiki/R-tree&quot;&gt;R-Tree&lt;/a&gt; is a special index that is designed for doing range queries. R-Trees are most commonly used in geospatial systems where each entry is a rectangle with minimum and maximum X and Y coordinates. Given a query rectangle, an R-Tree is able to quickly find all entries that are contained within the query rectangle or which overlap the query rectangle. This idea is easily extended to three dimensions for use in CAD systems. R-Trees also find use in time-domain range look-ups. For example, suppose a database records the starting and ending times for a large number of events. A R-Tree is able to quickly find all events that were active at any time during a given time interval, or all events that started during a particular time interval, or all events that both started and ended within a given time interval. And so forth.</source>
          <target state="translated">一个&lt;a href=&quot;https://en.wikipedia.org/wiki/R-tree&quot;&gt;R-树&lt;/a&gt;是专用于进行范围查询的特殊索引。 R树在地理空间系统中最常用，其中每个条目都是一个具有最小和最大X和Y坐标的矩形。给定一个查询矩形，R-Tree能够快速找到该查询矩形中包含的或与查询矩形重叠的所有条目。这个想法很容易扩展到三个维度，以用于CAD系统。 R树还可以在时域范围查找中使用。例如，假设数据库记录了大量事件的开始和结束时间。 R-Tree能够快速找到在给定时间间隔内任何时间处于活动状态的所有事件，或在特定时间间隔内开始的所有事件，或在给定时间间隔内开始和结束的所有事件。依此类推。</target>
        </trans-unit>
        <trans-unit id="db689d4a40dd989536fc477e73ac5f455ae9b267" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;lang_conflict&quot;&gt;ON CONFLICT&lt;/a&gt; clause may be specified as part of an &lt;a href=&quot;lang_update&quot;&gt;UPDATE&lt;/a&gt; or &lt;a href=&quot;lang_insert&quot;&gt;INSERT&lt;/a&gt; action within the body of the trigger. However if an &lt;a href=&quot;lang_conflict&quot;&gt;ON CONFLICT&lt;/a&gt; clause is specified as part of the statement causing the trigger to fire, then conflict handling policy of the outer statement is used instead.</source>
          <target state="translated">可以将&lt;a href=&quot;lang_conflict&quot;&gt;ON CONFLICT&lt;/a&gt;子句指定为触发器主体内的&lt;a href=&quot;lang_update&quot;&gt;UPDATE&lt;/a&gt;或&lt;a href=&quot;lang_insert&quot;&gt;INSERT&lt;/a&gt;操作的一部分。但是，如果将&lt;a href=&quot;lang_conflict&quot;&gt;ON CONFLICT&lt;/a&gt;子句指定为导致触发器触发的语句的一部分，则将使用外部语句的冲突处理策略。</target>
        </trans-unit>
        <trans-unit id="5e711e9ab5f059bf81635cdaabe4f6f12406ca0c" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;lang_insert&quot;&gt;INSERT&lt;/a&gt; statement with multiple values in the VALUES clause is implemented internally as a compound SELECT. Hence, this option also disables the ability to insert more than a single row using an INSERT INTO ... VALUES ... statement.</source>
          <target state="translated">在VALUES子句中具有多个值的&lt;a href=&quot;lang_insert&quot;&gt;INSERT&lt;/a&gt;语句在内部实现为复合SELECT。因此，此选项还禁用了使用INSERT INTO ... VALUES ...语句插入多个行的功能。</target>
        </trans-unit>
        <trans-unit id="c72576d10f0db6ca1b372a30155a9969a36efce9" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;lang_insert&quot;&gt;INSERT&lt;/a&gt; that fails due to a constraint violation is not a successful &lt;a href=&quot;lang_insert&quot;&gt;INSERT&lt;/a&gt; and does not change the value returned by this routine. Thus INSERT OR FAIL, INSERT OR IGNORE, INSERT OR ROLLBACK, and INSERT OR ABORT make no changes to the return value of this routine when their insertion fails. When INSERT OR REPLACE encounters a constraint violation, it does not fail. The INSERT continues to completion after deleting rows that caused the constraint problem so INSERT OR REPLACE will always change the return value of this interface.</source>
          <target state="translated">由于违反约束而失败的&lt;a href=&quot;lang_insert&quot;&gt;INSERT&lt;/a&gt;不是成功的&lt;a href=&quot;lang_insert&quot;&gt;INSERT&lt;/a&gt;，并且不会更改此例程返回的值。因此，当插入失败时，INSERT OR FAIL，INSERT OR IGNORE，INSERT OR ROLLBACK和INSERT OR ABORT不会更改此例程的返回值。当INSERT或REPLACE遇到约束冲突时，它不会失败。删除导致约束问题的行后，INSERT继续完成，因此INSERT OR REPLACE将始终更改此接口的返回值。</target>
        </trans-unit>
        <trans-unit id="233c7df9e2b5c5b148e9cdae3dbfbdc38ff611a4" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;rescode#corrupt&quot;&gt;SQLITE_CORRUPT&lt;/a&gt; error is returned when SQLite detects an error in the structure, format, or other control elements of the database file.</source>
          <target state="translated">一个&lt;a href=&quot;rescode#corrupt&quot;&gt;SQLITE_CORRUPT&lt;/a&gt;当SQLite的在结构中，格式或数据库文件的其它控制元件检测到错误，则返回错误。</target>
        </trans-unit>
        <trans-unit id="9dfcb5b52a759e3eac1cc34a332a837f3610b881" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;rescode#schema&quot;&gt;SQLITE_SCHEMA&lt;/a&gt; error is returned when a prepared SQL statement is no longer valid and cannot be executed. When this occurs, the statement must be recompiled from SQL using the &lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare()&lt;/a&gt; API. An SQLITE_SCHEMA error can only occur when using the &lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare()&lt;/a&gt;, and &lt;a href=&quot;c3ref/step&quot;&gt;sqlite3_step()&lt;/a&gt; interfaces to run SQL. You will never receive an &lt;a href=&quot;rescode#schema&quot;&gt;SQLITE_SCHEMA&lt;/a&gt; error from &lt;a href=&quot;c3ref/exec&quot;&gt;sqlite3_exec()&lt;/a&gt;. Nor will you receive an error if you prepare statements using &lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare_v2()&lt;/a&gt; instead of &lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare()&lt;/a&gt;.</source>
          <target state="translated">一个&lt;a href=&quot;rescode#schema&quot;&gt;SQLITE_SCHEMA&lt;/a&gt;当准备SQL语句不再有效，并且不能被执行则返回错误。发生这种情况时，必须使用&lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare（）&lt;/a&gt; API 从SQL重新编译该语句。仅当使用&lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare（）&lt;/a&gt;和&lt;a href=&quot;c3ref/step&quot;&gt;sqlite3_step（）&lt;/a&gt;接口运行SQL 时，才会发生SQLITE_SCHEMA错误。您将永远不会从&lt;a href=&quot;c3ref/exec&quot;&gt;sqlite3_exec（）&lt;/a&gt;收到&lt;a href=&quot;rescode#schema&quot;&gt;SQLITE_SCHEMA&lt;/a&gt;错误。如果使用&lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare_v2（）&lt;/a&gt;而不是&lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare（）&lt;/a&gt;准备语句，也不会收到错误消息。</target>
        </trans-unit>
        <trans-unit id="ceb0be389d3467046061e0e60795dd9c8924c2d5" translate="yes" xml:space="preserve">
          <source>An &lt;b&gt;INSERT&lt;/b&gt;. An INSERT change contains a single row to add to a database table. The payload of the INSERT change consists of the values for each field of the new row.</source>
          <target state="translated">一个&lt;b&gt;INSERT&lt;/b&gt;。INSERT更改仅包含一行以添加到数据库表。INSERT更改的有效负载由新行的每个字段的值组成。</target>
        </trans-unit>
        <trans-unit id="83cdb736e009dffced879294068506baa8e9d683" translate="yes" xml:space="preserve">
          <source>An &lt;b&gt;UPDATE&lt;/b&gt;. An UPDATE change represents the modification of one or more non-PRIMARY KEY fields of a single row within a database table, identified by its PRIMARY KEY fields. The payload for an UPDATE change consists of:</source>
          <target state="translated">一个&lt;b&gt;UPDATE&lt;/b&gt;。UPDATE更改表示对数据库表中单行的一个或多个非PRIMARY KEY字段的修改，该字段由其PRIMARY KEY字段标识。UPDATE更改的有效负载包括：</target>
        </trans-unit>
        <trans-unit id="a5dfc23afaff11afa8f689dfc92f096e1d0dd0f7" translate="yes" xml:space="preserve">
          <source>An ALWAYS(X) or NEVER(X) sometimes verifies pre-conditions that are subject to change if other parts of the code are modified in subtle ways. At &lt;a href=&quot;https://sqlite.org/src/artifact/18a53540aa3?ln=5512-5516&quot;&gt;https://sqlite.org/src/artifact/18a53540aa3?ln=5512-5516&lt;/a&gt; we have a test for two pre-conditions that are true only because of the limited scope of use of the sqlite3BtreeRowCountEst() function. Future enhancements to SQLite might use sqlite3BtreeRowCountEst() in new ways where those preconditions no longer hold, and the NEVER() macros will quickly alert the developers to that fact when the situation arises. But if, for some reason, the pre-conditions are not satisfied in a release build, the program will still behave sanely and will not do an undefined memory access.</source>
          <target state="translated">如果对代码的其他部分进行了微妙的修改，则ALWAYS（X）或NEVER（X）有时会验证可能会更改的前提条件。在&lt;a href=&quot;https://sqlite.org/src/artifact/18a53540aa3?ln=5512-5516&quot;&gt;https://sqlite.org/src/artifact/18a53540aa3?ln=5512-5516，&lt;/a&gt;我们对两个前提条件进行了测试，这些前提条件仅由于sqlite3BtreeRowCountEst（）函数的使用范围有限而为真。将来对SQLite的增强可能会以新的方式使用sqlite3BtreeRowCountEst（），这些前提条件不再成立，并且NEVER（）宏会在情况出现时迅速提醒开发人员该事实。但是，如果由于某种原因，在发行版本中不满足前提条件，则程序仍将保持理性运行，并且不会进行未定义的内存访问。</target>
        </trans-unit>
        <trans-unit id="62094908e44ce569763e84accf72b5b81ec10e3e" translate="yes" xml:space="preserve">
          <source>An Abort is safe if either there have been no writes, or if there is an active statement journal.</source>
          <target state="translated">如果没有写入,或者有一个活动的声明日志,那么放弃是安全的。</target>
        </trans-unit>
        <trans-unit id="86d4a08053c797c7b22cbaba83f05ba798cb81a9" translate="yes" xml:space="preserve">
          <source>An Asynchronous I/O Module For SQLite</source>
          <target state="translated">一个用于SQLite的异步I/O模块。</target>
        </trans-unit>
        <trans-unit id="313cb43d54770c72c9e9a5b634de9c9d8807284f" translate="yes" xml:space="preserve">
          <source>An EXCLUDE clause.</source>
          <target state="translated">一个排除条款。</target>
        </trans-unit>
        <trans-unit id="0a3ccdd1b90a20f1709a032dfb49632f1706153c" translate="yes" xml:space="preserve">
          <source>An EXCLUSIVE WAL_CKPT_LOCK is held by any connection that is running a &lt;a href=&quot;wal#ckpt&quot;&gt;checkpoint&lt;/a&gt;. The &lt;a href=&quot;walformat#nbackfill&quot;&gt;nBackfill&lt;/a&gt; field of the WAL-index header may be increased while holding this exclusive lock, but it may not be decreased.</source>
          <target state="translated">任何运行&lt;a href=&quot;wal#ckpt&quot;&gt;检查点的&lt;/a&gt;连接都将保留EXCLUSIVE WAL_CKPT_LOCK 。按住此排他锁时，可以增加WAL-index标头的&lt;a href=&quot;walformat#nbackfill&quot;&gt;nBackfill&lt;/a&gt;字段，但不能减少。</target>
        </trans-unit>
        <trans-unit id="42a19836854f508f748dd9a22070d5c210f0d520" translate="yes" xml:space="preserve">
          <source>An EXCLUSIVE WAL_RECOVER_LOCK is held by any connection that is running &lt;a href=&quot;walformat#recovery&quot;&gt;recovery&lt;/a&gt; to reconstruct the shared WAL-index.</source>
          <target state="translated">运行&lt;a href=&quot;walformat#recovery&quot;&gt;恢复&lt;/a&gt;以重建共享WAL索引的任何连接都将保留EXCLUSIVE WAL_RECOVER_LOCK 。</target>
        </trans-unit>
        <trans-unit id="d163a00e9e60a29df0fd7690728f45560ff5f27b" translate="yes" xml:space="preserve">
          <source>An EXCLUSIVE WAL_WRITE_LOCK is held by any connection that is appending content to the end of the WAL. Hence, only a single process at a time can append content to the WAL. If a &lt;a href=&quot;fileformat2#walreset&quot;&gt;WAL reset&lt;/a&gt; occurs as a consequence of a write, then the &lt;a href=&quot;walformat#nbackfill&quot;&gt;nBackfill&lt;/a&gt; field of the WAL-index header is reset to zero while holding this lock.</source>
          <target state="translated">任何将内容附加到WAL末尾的连接都将保留EXCLUSIVE WAL_WRITE_LOCK。因此，一次只能有一个进程可以将内容附加到WAL。如果由于写入而发生&lt;a href=&quot;fileformat2#walreset&quot;&gt;WAL重置&lt;/a&gt;，则在保持此锁定的同时WAL-index标头的&lt;a href=&quot;walformat#nbackfill&quot;&gt;nBackfill&lt;/a&gt;字段将重置为零。</target>
        </trans-unit>
        <trans-unit id="b57abe13c7006fd13b284a30313d8dda20eaf017" translate="yes" xml:space="preserve">
          <source>An EXCLUSIVE is also held WAL_CKPT_LOCK, and on several other locking bytes, when a connection is running &lt;a href=&quot;walformat#recovery&quot;&gt;recovery&lt;/a&gt; on the shared WAL-index.</source>
          <target state="translated">当连接在共享的WAL索引上运行&lt;a href=&quot;walformat#recovery&quot;&gt;恢复&lt;/a&gt;时，EXCLUSIVE还将保留WAL_CKPT_LOCK和其他几个锁定字节。</target>
        </trans-unit>
        <trans-unit id="88b81d585355ad5a271ae62aa21273cf7062ea05" translate="yes" xml:space="preserve">
          <source>An EXCLUSIVE is also held WAL_WRITE_LOCK, and on several other locking bytes, when a connection is running &lt;a href=&quot;walformat#recovery&quot;&gt;recovery&lt;/a&gt; on the shared WAL-index.</source>
          <target state="translated">当连接在共享的WAL索引上运行&lt;a href=&quot;walformat#recovery&quot;&gt;恢复&lt;/a&gt;时，EXCLUSIVE还将保留WAL_WRITE_LOCK和其他几个锁定字节。</target>
        </trans-unit>
        <trans-unit id="f52310ba827cb9fe23894a867314c3a13854ff87" translate="yes" xml:space="preserve">
          <source>An EXCLUSIVE lock is needed in order to write to the database file. Only one EXCLUSIVE lock is allowed on the file and no other locks of any kind are allowed to coexist with an EXCLUSIVE lock. In order to maximize concurrency, SQLite works to minimize the amount of time that EXCLUSIVE locks are held.</source>
          <target state="translated">为了向数据库文件写入,需要一个EXCLUSIVE锁。文件上只允许有一个EXCLUSIVE锁,其他任何类型的锁都不允许与EXCLUSIVE锁共存。为了最大限度地提高并发性,SQLite致力于尽量减少EXCLUSIVE锁的持有时间。</target>
        </trans-unit>
        <trans-unit id="fe2062deb028f6de38ba9c3021c202a7b43810db" translate="yes" xml:space="preserve">
          <source>An FTS tokenizer is a set of rules for extracting terms from a document or basic FTS full-text query.</source>
          <target state="translated">FTS标记器是一套用于从文档或基本FTS全文查询中提取术语的规则。</target>
        </trans-unit>
        <trans-unit id="818fc889442be27af5d1325013f400680296296c" translate="yes" xml:space="preserve">
          <source>An I/O error on a memory-mapped file cannot be caught and dealt with by SQLite. Instead, the I/O error causes a signal which, if not caught by the application, results in a program crash.</source>
          <target state="translated">内存映射文件上的I/O错误不能被SQLite捕获和处理。相反,I/O错误会导致一个信号,如果不被应用程序捕获,会导致程序崩溃。</target>
        </trans-unit>
        <trans-unit id="8b95db3810ecf86965c82c39a14ddcb38a561afc" translate="yes" xml:space="preserve">
          <source>An IEEE 754 floating-point value is an integer multiplied by a power of two:</source>
          <target state="translated">IEEE 754浮点值是一个整数乘以2的幂。</target>
        </trans-unit>
        <trans-unit id="1c82d6c0937081333b2317419d2ebad443727010" translate="yes" xml:space="preserve">
          <source>An IEEE double-precision (64-bit) floating point number</source>
          <target state="translated">IEEE双精度(64位)浮点数</target>
        </trans-unit>
        <trans-unit id="4cd5420d6298ed92154e0329258defd31fd25a74" translate="yes" xml:space="preserve">
          <source>An INTEGER or REAL value is less than any TEXT or BLOB value. When an INTEGER or REAL is compared to another INTEGER or REAL, a numerical comparison is performed.</source>
          <target state="translated">一个INTEGER或REAL值小于任何TEXT或BLOB值。当一个INTEGER或REAL与另一个INTEGER或REAL比较时,将进行数值比较。</target>
        </trans-unit>
        <trans-unit id="fb3433c2fda29528c66dead93e3becaa2d64f147" translate="yes" xml:space="preserve">
          <source>An Introduction To The SQLite C/C++ Interface</source>
          <target state="translated">SQLite C/C++接口介绍。</target>
        </trans-unit>
        <trans-unit id="1217ba99243b6eebb93b7b8b51f28f6be4f9d08a" translate="yes" xml:space="preserve">
          <source>An ORDER BY clause on the recursive-select can be used to control whether the search of a tree is depth-first or breadth-first. To illustrate, we will use a variation on the &quot;org&quot; table from an example above, without the &quot;height&quot; column, and with some real data inserted:</source>
          <target state="translated">递归选择上的ORDER BY子句可以用来控制树的搜索是深度优先还是广度优先。为了说明这一点,我们将使用上面例子中 &quot;org &quot;表的一个变体,没有 &quot;height &quot;列,并插入一些真实的数据。</target>
        </trans-unit>
        <trans-unit id="23032a9cac30263b1d8146df43c99d82099810f2" translate="yes" xml:space="preserve">
          <source>An ORDER BY or GROUP BY clause</source>
          <target state="translated">ORDER BY或GROUP BY子句</target>
        </trans-unit>
        <trans-unit id="6b7badb7ceeef79983e30969dff232619460ee2c" translate="yes" xml:space="preserve">
          <source>An OpenDocument Presentation or &quot;ODP&quot; file is a &lt;a href=&quot;http://en.wikipedia.org/wiki/Zip_%28file_format%29&quot;&gt;ZIP archive&lt;/a&gt; containing XML files describing presentation slides and separate image files for the various images that are included as part of the presentation. (OpenDocument word processor and spreadsheet files are similarly structured but are not considered by this article.) The reader can easily see the content of an ODP file by using the &quot;zip -l&quot; command. For example, the following is the &quot;zip -l&quot; output from a 49-slide presentation about SQLite from the 2014 &lt;a href=&quot;http://southeastlinuxfest.org/&quot;&gt;SouthEast LinuxFest&lt;/a&gt; conference:</source>
          <target state="translated">OpenDocument Presentation或&amp;ldquo; ODP&amp;rdquo;文件是一个&lt;a href=&quot;http://en.wikipedia.org/wiki/Zip_%28file_format%29&quot;&gt;ZIP存档，&lt;/a&gt;其中包含描述演示幻灯片的XML文件以及作为演示的一部分包含的各种图像的单独图像文件。 （OpenDocument文字处理程序和电子表格文件的结构类似，但本文并未考虑。）读者可以使用&amp;ldquo; zip -l&amp;rdquo;命令轻松查看ODP文件的内容。例如，以下是2014年&lt;a href=&quot;http://southeastlinuxfest.org/&quot;&gt;东南LinuxFest&lt;/a&gt;会议有关SQLite的49个幻灯片的演示文稿的&amp;ldquo; zip -l&amp;rdquo;输出：</target>
        </trans-unit>
        <trans-unit id="edae1085a7543bfb0eb86076df6f01bd12945226" translate="yes" xml:space="preserve">
          <source>An OpenDocument Presentation or &quot;ODP&quot; file is a &lt;a href=&quot;https://en.wikipedia.org/wiki/Zip_%28file_format%29&quot;&gt;ZIP archive&lt;/a&gt; containing XML files describing presentation slides and separate image files for the various images that are included as part of the presentation. (OpenDocument word processor and spreadsheet files are similarly structured but are not considered by this article.) The reader can easily see the content of an ODP file by using the &quot;zip -l&quot; command. For example, the following is the &quot;zip -l&quot; output from a 49-slide presentation about SQLite from the 2014 &lt;a href=&quot;http://southeastlinuxfest.org/&quot;&gt;SouthEast LinuxFest&lt;/a&gt; conference:</source>
          <target state="translated">OpenDocument Presentation或&amp;ldquo; ODP&amp;rdquo;文件是一个&lt;a href=&quot;https://en.wikipedia.org/wiki/Zip_%28file_format%29&quot;&gt;ZIP存档，&lt;/a&gt;其中包含描述演示幻灯片的XML文件以及作为演示的一部分包含的各种图像的单独图像文件。 （OpenDocument文字处理程序和电子表格文件的结构类似，但本文并未考虑。）读者可以使用&amp;ldquo; zip -l&amp;rdquo;命令轻松查看ODP文件的内容。例如，以下是2014年&lt;a href=&quot;http://southeastlinuxfest.org/&quot;&gt;东南LinuxFest&lt;/a&gt;会议上有关SQLite的49个幻灯片的演示文稿的&amp;ldquo; zip -l&amp;rdquo;输出：</target>
        </trans-unit>
        <trans-unit id="3cc6b47353bce3b91e074154d427c28b96c16d62" translate="yes" xml:space="preserve">
          <source>An R*Tree query is initialized by making the root node the only entry in a priority queue sorted by rScore. The query proceeds by extracting the entry from the priority queue that has the lowest score. If that entry is a leaf (meaning that it is an actual R*Tree entry and not a subtree) then that entry is returned as one row of the query result. If the extracted priority queue entry is a node (a subtree), then sub-subtrees or leaves contained within that entry are passed to the xQueryFunc callback, one by one. Those subelements for which the xQueryFunc callback sets eWithin to PARTLY_WITHIN or FULLY_WITHIN are added to the priority queue using the score supplied by the callback. Subelements that return NOT_WITHIN are discarded. The query runs until the priority queue is empty.</source>
          <target state="translated">通过使根节点成为优先级队列中唯一一个按rScore排序的条目来初始化R*Tree查询。查询通过从优先级队列中提取得分最低的条目来进行。如果该条目是叶子(意味着它是一个实际的R*Tree条目,而不是子树),那么该条目将作为查询结果的一行返回。如果提取的优先级队列条目是一个节点(子树),那么该条目中包含的子子树或叶子将被逐一传递给xQueryFunc回调。那些xQueryFunc回调将eWithin设置为PARTLY_WITHIN或FULLY_WITHIN的子元素使用回调提供的分数被添加到优先级队列中。返回NOT_WITHIN的子元素将被丢弃。查询会一直运行到优先级队列为空。</target>
        </trans-unit>
        <trans-unit id="4c36503645997aef3b66492ffa49c5737331ae5b" translate="yes" xml:space="preserve">
          <source>An RBU Vacuum operation requires less temporary disk space and writes less data to disk than an SQLite VACUUM. An SQLite VACUUM requires roughly twice the size of the final database file in temporary disk space to run. The total amount of data written is around three times the size of the final database file. By contrast, an RBU Vacuum requires roughly the size of the final database file in temporary disk space and writes a total of twice that to disk.</source>
          <target state="translated">与SQLite VACUUM相比,RBU真空操作需要更少的临时磁盘空间,向磁盘写入的数据也更少。SQLite VACUUM运行时需要的临时磁盘空间大约是最终数据库文件大小的两倍。写入的数据总量是最终数据库文件大小的三倍左右。相比之下,一个RBU真空在临时磁盘空间中所需要的大小大约是最终数据库文件的大小,而写入磁盘的数据总量是其两倍。</target>
        </trans-unit>
        <trans-unit id="b402488c545650e7a0466693ac0992d5dced3759" translate="yes" xml:space="preserve">
          <source>An RBU handle is created by calling sqlite3rbu_vacuum(T, S).</source>
          <target state="translated">通过调用sqlite3rbu_vacuum(T,S)创建一个RBU句柄。</target>
        </trans-unit>
        <trans-unit id="c7d98c92ed51948506a67c9bcda80cc97f4fcfe4" translate="yes" xml:space="preserve">
          <source>An SQL aggregate function, which can be used to create new archives in memory.</source>
          <target state="translated">一个SQL聚合函数,可以用来在内存中创建新的档案。</target>
        </trans-unit>
        <trans-unit id="9bd314dc55feb99e9480fcbcc4eb53b163d23b23" translate="yes" xml:space="preserve">
          <source>An SQL operation that is interrupted will return &lt;a href=&quot;#SQLITE_ABORT&quot;&gt;SQLITE_INTERRUPT&lt;/a&gt;. If the interrupted SQL operation is an INSERT, UPDATE, or DELETE that is inside an explicit transaction, then the entire transaction will be rolled back automatically.</source>
          <target state="translated">中断的SQL操作将返回&lt;a href=&quot;#SQLITE_ABORT&quot;&gt;SQLITE_INTERRUPT&lt;/a&gt;。如果中断的SQL操作是显式事务中的INSERT，UPDATE或DELETE，则整个事务将自动回滚。</target>
        </trans-unit>
        <trans-unit id="bb8b61384d0c44a2e614c579b268363eaa1fc909" translate="yes" xml:space="preserve">
          <source>An SQL operation that is interrupted will return &lt;a href=&quot;../rescode#interrupt&quot;&gt;SQLITE_INTERRUPT&lt;/a&gt;. If the interrupted SQL operation is an INSERT, UPDATE, or DELETE that is inside an explicit transaction, then the entire transaction will be rolled back automatically.</source>
          <target state="translated">中断的SQL操作将返回&lt;a href=&quot;../rescode#interrupt&quot;&gt;SQLITE_INTERRUPT&lt;/a&gt;。如果中断的SQL操作是显式事务中的INSERT，UPDATE或DELETE，则整个事务将自动回滚。</target>
        </trans-unit>
        <trans-unit id="3de39c28f7d860e2f20cf499f83a1ecd516190b8" translate="yes" xml:space="preserve">
          <source>An SQL statement can be preceded by the keyword &quot;EXPLAIN&quot; or by the phrase &quot;EXPLAIN QUERY PLAN&quot;. Either modification causes the SQL statement to behave as a query and to return information about how the SQL statement would have operated if the EXPLAIN keyword or phrase had been omitted.</source>
          <target state="translated">一条SQL语句前面可以加上关键字 &quot;EXPLAIN &quot;或短语 &quot;EXPLAIN QUERY PLAN&quot;。这两种修改都会使SQL语句表现为查询,并返回关于如果省略EXPLAIN关键字或短语,SQL语句将如何操作的信息。</target>
        </trans-unit>
        <trans-unit id="5abd7dabfe02360ec2bf6a05e3dfaa3cf5654f08" translate="yes" xml:space="preserve">
          <source>An SQLITE_BUSY error can occur at any point in a transaction: when the transaction is first started, during any write or update operations, or when the transaction commits. To avoid encountering SQLITE_BUSY errors in the middle of a transaction, the application can use &lt;a href=&quot;lang_transaction#immediate&quot;&gt;BEGIN IMMEDIATE&lt;/a&gt; instead of just &lt;a href=&quot;lang_transaction&quot;&gt;BEGIN&lt;/a&gt; to start a transaction. The &lt;a href=&quot;lang_transaction#immediate&quot;&gt;BEGIN IMMEDIATE&lt;/a&gt; command might itself return SQLITE_BUSY, but if it succeeds, then SQLite guarantees that no subsequent operations on the same database through the next &lt;a href=&quot;lang_transaction&quot;&gt;COMMIT&lt;/a&gt; will return SQLITE_BUSY.</source>
          <target state="translated">在事务中的任何时候都可能发生SQLITE_BUSY错误：首次启动事务时，任何写入或更新操作期间或事务提交时。为了避免在事务中间遇到SQLITE_BUSY错误，应用程序可以使用&lt;a href=&quot;lang_transaction#immediate&quot;&gt;BEGIN IMMEDIATE&lt;/a&gt;而不是仅使用&lt;a href=&quot;lang_transaction&quot;&gt;BEGIN&lt;/a&gt;来启动事务。将&lt;a href=&quot;lang_transaction#immediate&quot;&gt;立即开始&lt;/a&gt;命令本身可能返回SQLITE_BUSY，但如果它成功，那么SQLite的保证，通过未来在同一个数据库上没有后续操作&lt;a href=&quot;lang_transaction&quot;&gt;COMMIT&lt;/a&gt;将返回SQLITE_BUSY。</target>
        </trans-unit>
        <trans-unit id="ac700efdf9da65c96e524e1f874e4322c772698e" translate="yes" xml:space="preserve">
          <source>An SQLITE_TRACE_CLOSE callback is invoked when a database connection closes. The P argument is a pointer to the &lt;a href=&quot;#sqlite3&quot;&gt;database connection&lt;/a&gt; object and the X argument is unused.</source>
          <target state="translated">数据库连接关闭时，将调用SQLITE_TRACE_CLOSE回调。P参数是指向&lt;a href=&quot;#sqlite3&quot;&gt;数据库连接&lt;/a&gt;对象的指针，X参数未使用。</target>
        </trans-unit>
        <trans-unit id="90dda83d19d5a0e9440a66a5153d6f08cfb8e791" translate="yes" xml:space="preserve">
          <source>An SQLITE_TRACE_CLOSE callback is invoked when a database connection closes. The P argument is a pointer to the &lt;a href=&quot;sqlite3&quot;&gt;database connection&lt;/a&gt; object and the X argument is unused.</source>
          <target state="translated">数据库连接关闭时，将调用SQLITE_TRACE_CLOSE回调。P参数是指向&lt;a href=&quot;sqlite3&quot;&gt;数据库连接&lt;/a&gt;对象的指针，X参数未使用。</target>
        </trans-unit>
        <trans-unit id="6463d38e5743fc7b60a45c0dd4edf8e6196b2c76" translate="yes" xml:space="preserve">
          <source>An SQLITE_TRACE_PROFILE callback provides approximately the same information as is provided by the &lt;a href=&quot;#sqlite3_profile&quot;&gt;sqlite3_profile()&lt;/a&gt; callback. The P argument is a pointer to the &lt;a href=&quot;#sqlite3_stmt&quot;&gt;prepared statement&lt;/a&gt; and the X argument points to a 64-bit integer which is the estimated of the number of nanosecond that the prepared statement took to run. The SQLITE_TRACE_PROFILE callback is invoked when the statement finishes.</source>
          <target state="translated">SQLITE_TRACE_PROFILE回调提供的信息与&lt;a href=&quot;#sqlite3_profile&quot;&gt;sqlite3_profile（）&lt;/a&gt;回调提供的信息大致相同。P参数是指向已&lt;a href=&quot;#sqlite3_stmt&quot;&gt;准备好的语句&lt;/a&gt;的指针，而X参数则指向64位整数，该整数是已准备好的语句运行所需的纳秒数的估计值。语句完成后，将调用SQLITE_TRACE_PROFILE回调。</target>
        </trans-unit>
        <trans-unit id="51f65212fb2842387dde50749c6891ed068f1d2c" translate="yes" xml:space="preserve">
          <source>An SQLITE_TRACE_PROFILE callback provides approximately the same information as is provided by the &lt;a href=&quot;profile&quot;&gt;sqlite3_profile()&lt;/a&gt; callback. The P argument is a pointer to the &lt;a href=&quot;stmt&quot;&gt;prepared statement&lt;/a&gt; and the X argument points to a 64-bit integer which is the estimated of the number of nanosecond that the prepared statement took to run. The SQLITE_TRACE_PROFILE callback is invoked when the statement finishes.</source>
          <target state="translated">SQLITE_TRACE_PROFILE回调提供的信息与&lt;a href=&quot;profile&quot;&gt;sqlite3_profile（）&lt;/a&gt;回调提供的信息大致相同。P参数是指向已&lt;a href=&quot;stmt&quot;&gt;准备好的语句&lt;/a&gt;的指针，而X参数则指向64位整数，该整数是已准备好的语句运行所需的纳秒数的估计值。语句完成后，将调用SQLITE_TRACE_PROFILE回调。</target>
        </trans-unit>
        <trans-unit id="959b99495fe9f93bfe60c0c8dc39f940a8cc7107" translate="yes" xml:space="preserve">
          <source>An SQLITE_TRACE_ROW callback is invoked whenever a prepared statement generates a single row of result. The P argument is a pointer to the &lt;a href=&quot;#sqlite3_stmt&quot;&gt;prepared statement&lt;/a&gt; and the X argument is unused.</source>
          <target state="translated">每当准备好的语句生成一行结果时，就会调用SQLITE_TRACE_ROW回调。P参数是指向&lt;a href=&quot;#sqlite3_stmt&quot;&gt;准备好的语句&lt;/a&gt;的指针，X参数未使用。</target>
        </trans-unit>
        <trans-unit id="f2c23282009e34d356e10ef768fd5d27fe9242d7" translate="yes" xml:space="preserve">
          <source>An SQLITE_TRACE_ROW callback is invoked whenever a prepared statement generates a single row of result. The P argument is a pointer to the &lt;a href=&quot;stmt&quot;&gt;prepared statement&lt;/a&gt; and the X argument is unused.</source>
          <target state="translated">每当准备好的语句生成一行结果时，就会调用SQLITE_TRACE_ROW回调。P参数是指向&lt;a href=&quot;stmt&quot;&gt;准备好的语句&lt;/a&gt;的指针，X参数未使用。</target>
        </trans-unit>
        <trans-unit id="d87f64da2cd54c09ca013ca90ee9edc2e86b39e0" translate="yes" xml:space="preserve">
          <source>An SQLITE_TRACE_STMT callback is invoked when a prepared statement first begins running and possibly at other times during the execution of the prepared statement, such as at the start of each trigger subprogram. The P argument is a pointer to the &lt;a href=&quot;#sqlite3_stmt&quot;&gt;prepared statement&lt;/a&gt;. The X argument is a pointer to a string which is the unexpanded SQL text of the prepared statement or an SQL comment that indicates the invocation of a trigger. The callback can compute the same text that would have been returned by the legacy &lt;a href=&quot;#sqlite3_profile&quot;&gt;sqlite3_trace()&lt;/a&gt; interface by using the X argument when X begins with &quot;--&quot; and invoking &lt;a href=&quot;#sqlite3_expanded_sql&quot;&gt;sqlite3_expanded_sql(P)&lt;/a&gt; otherwise.</source>
          <target state="translated">当一条准备好的语句首次开始运行时以及在准备好的语句执行期间的其他时间（例如在每个触发器子程序的开始处），将调用SQLITE_TRACE_STMT回调。 P参数是指向预&lt;a href=&quot;#sqlite3_stmt&quot;&gt;准备语句&lt;/a&gt;的指针。 X参数是一个指向字符串的指针，该字符串是准备好的语句的未扩展SQL文本，或者是表示触发触发器的SQL注释。当X以&amp;ldquo;-&amp;rdquo;开头时，通过使用X参数，回调可以计算与旧的&lt;a href=&quot;#sqlite3_profile&quot;&gt;sqlite3_trace（）&lt;/a&gt;接口返回的文本相同的文本，否则调用&lt;a href=&quot;#sqlite3_expanded_sql&quot;&gt;sqlite3_expanded_sql（P）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="67e19a52fd0823eafed0ed156581e34f2ae1fb9a" translate="yes" xml:space="preserve">
          <source>An SQLITE_TRACE_STMT callback is invoked when a prepared statement first begins running and possibly at other times during the execution of the prepared statement, such as at the start of each trigger subprogram. The P argument is a pointer to the &lt;a href=&quot;stmt&quot;&gt;prepared statement&lt;/a&gt;. The X argument is a pointer to a string which is the unexpanded SQL text of the prepared statement or an SQL comment that indicates the invocation of a trigger. The callback can compute the same text that would have been returned by the legacy &lt;a href=&quot;profile&quot;&gt;sqlite3_trace()&lt;/a&gt; interface by using the X argument when X begins with &quot;--&quot; and invoking &lt;a href=&quot;expanded_sql&quot;&gt;sqlite3_expanded_sql(P)&lt;/a&gt; otherwise.</source>
          <target state="translated">当一条准备好的语句首次开始运行时以及在准备好的语句执行期间的其他时间（例如在每个触发器子程序的开始处），将调用SQLITE_TRACE_STMT回调。 P参数是指向预&lt;a href=&quot;stmt&quot;&gt;准备语句&lt;/a&gt;的指针。 X参数是一个指向字符串的指针，该字符串是准备好的语句的未扩展SQL文本，或者是表示触发触发器的SQL注释。当X以&amp;ldquo;-&amp;rdquo;开头时，通过使用X参数，回调可以计算与旧的&lt;a href=&quot;profile&quot;&gt;sqlite3_trace（）&lt;/a&gt;接口返回的文本相同的文本，否则调用&lt;a href=&quot;expanded_sql&quot;&gt;sqlite3_expanded_sql（P）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="40dcdd5a240705c4bdfc3ba184015a22602dc143" translate="yes" xml:space="preserve">
          <source>An SQLite Archive can be queried using a high-level query language (SQL). Some examples:</source>
          <target state="translated">可以使用高级查询语言(SQL)对SQLite Archive进行查询。以下是一些例子:</target>
        </trans-unit>
        <trans-unit id="b242257f9fcf2e3e2eac957dac8e90b190c245bb" translate="yes" xml:space="preserve">
          <source>An SQLite Archive can be updated incrementally. Individual files can be added or removed or replaced without having to rewrite the entire archive.</source>
          <target state="translated">SQLite存档可以逐步更新。可以添加、删除或替换单个文件,而无需重写整个存档。</target>
        </trans-unit>
        <trans-unit id="6a576b713a86af9234a7a7f85c2bf0090d4320d5" translate="yes" xml:space="preserve">
          <source>An SQLite Archive can work around firewall-imposed censorship. For example, certain file types that are considered &quot;dangerous&quot; (examples: DLLs) will be &lt;a href=&quot;https://support.google.com/mail/answer/6590&quot;&gt;blocked by Gmail&lt;/a&gt; and probably many other email services and firewall, even if those files are wrapped inside a ZIP Archive or Tarball. But these firewall usually do not care about SQLite Archives and so content can be put inside an SQLite Archive to evade censorship.</source>
          <target state="translated">SQLite存档可以解决防火墙施加的检查问题。例如，某些被认为&amp;ldquo;危险&amp;rdquo;的文件类型（例如DLL）将被&lt;a href=&quot;https://support.google.com/mail/answer/6590&quot;&gt;Gmail阻止&lt;/a&gt;，甚至可能被许多其他电子邮件服务和防火墙阻止，即使这些文件被包装在ZIP存档或Tarball中也是如此。但是这些防火墙通常并不关心SQLite存档，因此可以将内容放入SQLite存档中以逃避审查。</target>
        </trans-unit>
        <trans-unit id="a0ba5b3507646eb697de77c3cc3704fcea7b615b" translate="yes" xml:space="preserve">
          <source>An SQLite Archive can work around firewall-imposed censorship. For example, certain file types that are considered &quot;dangerous&quot; (examples: DLLs) will be &lt;a href=&quot;https://support.google.com/mail/answer/6590&quot;&gt;blocked by Gmail&lt;/a&gt; and probably many other email services and firewalls, even if the files are wrapped inside a ZIP Archive or Tarball. But these firewalls usually do not (yet) know about SQLite Archives and so content can be put inside an SQLite Archive to evade censorship.</source>
          <target state="translated">SQLite存档可以解决防火墙强加的检查问题。例如，某些文件类型被认为是&amp;ldquo;危险的&amp;rdquo;（例如DLL），将被&lt;a href=&quot;https://support.google.com/mail/answer/6590&quot;&gt;Gmail&lt;/a&gt;以及许多其他电子邮件服务和防火墙阻止，即使这些文件被包装在ZIP存档或Tarball中也是如此。但是这些防火墙通常（至今）还不了解SQLite存档，因此可以将内容放入SQLite存档中以逃避审查。</target>
        </trans-unit>
        <trans-unit id="4118c0f7a6f81cb74480ccc9fa50eb744542f589" translate="yes" xml:space="preserve">
          <source>An SQLite Archive is an ordinary SQLite database file that contains the following table as part of its schema:</source>
          <target state="translated">SQLite Archive是一个普通的SQLite数据库文件,它包含以下表作为其模式的一部分。</target>
        </trans-unit>
        <trans-unit id="dc6cbe656d1d7ad99c40dcbbe2f8824b11660a4b" translate="yes" xml:space="preserve">
          <source>An SQLite Archive is flexible. ZIP Archives and Tarballs are limited to storing only files. An SQLite Archive stores files plus whatever other tabular and/or relational data seems useful to the application.</source>
          <target state="translated">SQLite Archive很灵活。ZIP Archive 和 Tarballs 只限于存储文件。SQLite Archive存储的文件加上任何其他表格和/或关系数据似乎对应用程序有用。</target>
        </trans-unit>
        <trans-unit id="b26644641a5c080b143bed71ae376b8f86f40091" translate="yes" xml:space="preserve">
          <source>An SQLite Archive is one example of a more general idea that an SQLite database can behave as a container object holding lots of smaller data components.</source>
          <target state="translated">SQLite Archive是一个更普遍的想法的例子,即SQLite数据库可以表现为一个容器对象,容纳许多较小的数据组件。</target>
        </trans-unit>
        <trans-unit id="5d177845e7556bf44c101aaef7f85cf75f9d1c63" translate="yes" xml:space="preserve">
          <source>An SQLite Archive is transactional. Updates are atomic and durable, even if there are crashes or power losses in the middle of the update. Readers see a consistent and unchanging version of the content even is some other process is simultaneously updating the archive.</source>
          <target state="translated">SQLite Archive是事务性的。即使在更新过程中发生崩溃或断电,更新也是原子性的、持久的。读者可以看到内容的一致和不变的版本,即使其他进程同时更新存档。</target>
        </trans-unit>
        <trans-unit id="3312ff278a713e75002ecfaa844a5076353ef655" translate="yes" xml:space="preserve">
          <source>An SQLite Archive supports only the &lt;a href=&quot;https://zlib.net/&quot;&gt;Deflate&lt;/a&gt; compression method. Tarballs and ZIP Archive support a wider assortment of compression methods.</source>
          <target state="translated">SQLite存档仅支持&lt;a href=&quot;https://zlib.net/&quot;&gt;Deflate&lt;/a&gt;压缩方法。Tarball和ZIP Archive支持更广泛的压缩方法。</target>
        </trans-unit>
        <trans-unit id="8fd49e13abc11c533a20ccc6b5f7798ff20c6616" translate="yes" xml:space="preserve">
          <source>An SQLite Database File</source>
          <target state="translated">SQLite数据库文件</target>
        </trans-unit>
        <trans-unit id="b000f5fd9df31bd42422b2ef21f81528c08cea1a" translate="yes" xml:space="preserve">
          <source>An SQLite application file format is a great choice in cases where there is a collection or &quot;federation&quot; of separate programs, often written in different languages and by different development teams. This comes up commonly in research or laboratory environments where one team is responsible for data acquisition and other teams are responsible for various stages of analysis. Each team can use whatever hardware, operating system, programming language and development methodology that they are most comfortable with, and as long as all programs use an SQLite database with a common schema, they can all interoperate.</source>
          <target state="translated">SQLite应用程序文件格式是一个很好的选择,在这种情况下,有一个独立程序的集合或 &quot;联盟&quot;,通常是由不同的语言和不同的开发团队编写的。这种情况通常出现在研究或实验室环境中,其中一个团队负责数据采集,其他团队负责分析的各个阶段。每个团队可以使用他们最熟悉的任何硬件、操作系统、编程语言和开发方法,只要所有的程序都使用一个具有共同模式的SQLite数据库,它们就可以相互操作。</target>
        </trans-unit>
        <trans-unit id="5bcad71b941086fc8d3676a58f2f663381ad6019" translate="yes" xml:space="preserve">
          <source>An SQLite database can become corrupt if the file content changes due to a disk drive or flash memory failure. It is very rare, but disks will occasionally flip a bit in the middle of a sector.</source>
          <target state="translated">如果由于磁盘驱动器或闪存故障导致文件内容发生变化,SQLite数据库可能会损坏。这种情况非常罕见,但磁盘偶尔会在扇区中间翻转一下。</target>
        </trans-unit>
        <trans-unit id="caa981e15b39eb75edaa6ff0d13de7391ec0f911" translate="yes" xml:space="preserve">
          <source>An SQLite database connection defaults to &lt;a href=&quot;pragma#pragma_journal_mode&quot;&gt;journal_mode=DELETE&lt;/a&gt;. To convert to WAL mode, use the following pragma:</source>
          <target state="translated">SQLite数据库连接默认为&lt;a href=&quot;pragma#pragma_journal_mode&quot;&gt;journal_mode = DELETE&lt;/a&gt;。要转换为WAL模式，请使用以下编译指示：</target>
        </trans-unit>
        <trans-unit id="dfa9719008b383e9c69cd74a19a5c395ef612cf2" translate="yes" xml:space="preserve">
          <source>An SQLite database facilitates data transfer between systems even when the endpoints have different word sizes and/or byte orders. The data can be a complex mix of large binary blobs, text, and small numeric or boolean values. The data format can be easily extended by adding new tables and/or columns, without breaking legacy receivers. The SQL query language means that receivers are not required to parse the entire transfer all at once, but can instead query the received content as needed. The data format is &quot;transparent&quot; in the sense that it is easily decoded for human viewing using a variety of universally available, open-source tools, from multiple vendors.</source>
          <target state="translated">SQLite数据库方便了系统之间的数据传输,即使端点具有不同的字大小和/或字节顺序。数据可以是大的二进制块、文本和小的数字或布尔值的复杂组合。通过添加新的表和/或列,数据格式可以很容易地扩展,而不会破坏传统的接收机。SQL查询语言意味着接收者不需要一次性解析整个传输,而是可以根据需要查询接收的内容。这种数据格式是 &quot;透明的&quot;,因为它很容易被解码,供人使用来自多个供应商的各种普遍可用的开源工具进行查看。</target>
        </trans-unit>
        <trans-unit id="982d7ceede2aaf5d861f9c36536e7099da9073ca" translate="yes" xml:space="preserve">
          <source>An SQLite database file consists of one or more &quot;pages&quot;. For a single database file, all pages are the same size, though for different database files, the page size can any power of two between 512 and 65536, inclusive.</source>
          <target state="translated">一个SQLite数据库文件由一个或多个 &quot;页 &quot;组成。对于单个数据库文件,所有页面的大小都是一样的,但对于不同的数据库文件,页面大小可以是512到65536之间的任意2倍,包括在内。</target>
        </trans-unit>
        <trans-unit id="b1d2c158eb6a0a9552493d7c89540c3e0f9e893f" translate="yes" xml:space="preserve">
          <source>An SQLite database file is approximately the same size, and in some cases smaller, than a ZIP archive holding the same information.</source>
          <target state="translated">一个SQLite数据库文件的大小与保存相同信息的ZIP归档文件大致相同,在某些情况下甚至更小。</target>
        </trans-unit>
        <trans-unit id="2c4396f52519eb130b5dd0375bda350b47a433fb" translate="yes" xml:space="preserve">
          <source>An SQLite database file is divided into pages. The first page is 1, the second page is 2, and so forth. There is no page 0. Every page is the same size. The size of every page is a power of 2 between 512 and 65536. See the &lt;a href=&quot;fileformat2&quot;&gt;file format&lt;/a&gt; documentation for further details.</source>
          <target state="translated">SQLite数据库文件分为页面。第一页为1，第二页为2，依此类推。没有页面0。每页大小相同。每页的大小在512和65536之间为2的幂。有关详细信息，请参阅&lt;a href=&quot;fileformat2&quot;&gt;文件格式&lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="4f8b304d710aae6886e59c81e1a985cd1cd70645" translate="yes" xml:space="preserve">
          <source>An SQLite database file with a defined schema often makes an excellent application file format. Here are a dozen reasons why this is so:</source>
          <target state="translated">一个具有定义模式的SQLite数据库文件往往是一个优秀的应用文件格式。这里有十几个原因。</target>
        </trans-unit>
        <trans-unit id="89ebdfe9c0e4c8eb0d11614911caf8938817b53f" translate="yes" xml:space="preserve">
          <source>An SQLite database has a lot of capability, which this essay has only begun to touch upon. But hopefully this quick glimpse has convinced some readers that using an SQL database as an application file format is worth a second look.</source>
          <target state="translated">SQLite数据库有很多能力,本文只是开始触及。但希望这一瞥能让一些读者相信,使用SQL数据库作为一种应用文件格式是值得一试的。</target>
        </trans-unit>
        <trans-unit id="69541d5b92ee6eb3e8f9d53bc6a238b7db778bec" translate="yes" xml:space="preserve">
          <source>An SQLite database is a &lt;a href=&quot;fileformat2&quot;&gt;well-defined and well-documented&lt;/a&gt; file format that is in widespread use by literally millions of applications and is backwards compatible to its inception in 2004 and which promises to continue to be compatible in decades to come. The longevity of SQLite database files is particularly important to bespoke applications, since it allows the document content to be accessed far in the future, long after all traces of the original application have been lost. Data lives longer than code. SQLite databases are &lt;a href=&quot;locrsf&quot;&gt;recommended by the US Library of Congress&lt;/a&gt; as a storage format for long-term preservation of digital content.</source>
          <target state="translated">SQLite数据库是一种&lt;a href=&quot;fileformat2&quot;&gt;定义明确且有据可查的&lt;/a&gt;文件格式，实际上已被数百万个应用程序广泛使用，并且与2004年成立以来向后兼容，并有望在未来几十年继续兼容。 SQLite数据库文件的寿命对于定制应用程序尤为重要，因为它允许在将来丢失了原始应用程序的所有痕迹很长时间之后就可以访问文档内容。数据的寿命比代码更长。&lt;a href=&quot;locrsf&quot;&gt;美国国会图书馆建议使用&lt;/a&gt; SQLite数据库作为长期保存数字内容的存储格式。</target>
        </trans-unit>
        <trans-unit id="1414bb1ca0b7308fabbbb0231f95883cdfb55f17" translate="yes" xml:space="preserve">
          <source>An SQLite database is a single ordinary disk file that can be located anywhere in the directory hierarchy. If SQLite can read the disk file then it can read anything in the database. If the disk file and its directory are writable, then SQLite can change anything in the database. Database files can easily be copied onto a USB memory stick or emailed for sharing.</source>
          <target state="translated">SQLite数据库是一个单一的普通磁盘文件,可以位于目录层次中的任何位置。如果SQLite可以读取磁盘文件,那么它可以读取数据库中的任何东西。如果磁盘文件及其目录是可写的,那么SQLite可以改变数据库中的任何内容。数据库文件可以很容易地复制到U盘上,或者通过电子邮件进行共享。</target>
        </trans-unit>
        <trans-unit id="3f9b6d073e3679cf263c66c45442a544e5b6ca4c" translate="yes" xml:space="preserve">
          <source>An SQLite database is a single ordinary file on disk (with a &lt;a href=&quot;fileformat2&quot;&gt;well-defined file format&lt;/a&gt;). With other systems, a &quot;database&quot; is usually a large number of separate files hidden away in obscure directories of the filesystem, or even spread across multiple machines. But with SQLite, a complete database is just an ordinary disk file.</source>
          <target state="translated">SQLite数据库是磁盘上的单个普通文件（&lt;a href=&quot;fileformat2&quot;&gt;格式明确的文件&lt;/a&gt;）。对于其他系统，&amp;ldquo;数据库&amp;rdquo;通常是大量单独的文件，隐藏在文件系统的晦涩目录中，甚至散布在多台计算机上。但是使用SQLite，完整的数据库只是普通的磁盘文件。</target>
        </trans-unit>
        <trans-unit id="26fb41c051ef1c4cae3e65d019499aa1d3715a71" translate="yes" xml:space="preserve">
          <source>An SQLite database is highly resistant to corruption. If an application crash, or an operating-system crash, or even a power failure occurs in the middle of a transaction, the partially written transaction should be automatically rolled back the next time the database file is accessed. The recovery process is fully automatic and does not require any action on the part of the user or the application.</source>
          <target state="translated">SQLite数据库具有很强的抗损坏能力。如果应用程序崩溃,或操作系统崩溃,甚至在事务中间发生断电,那么在下次访问数据库文件时,部分写入的事务将自动回滚。恢复过程是完全自动的,不需要用户或应用程序的任何操作。</target>
        </trans-unit>
        <trans-unit id="a3b90e2f3f651754fcb6451ab34aac384e7a5fbe" translate="yes" xml:space="preserve">
          <source>An SQLite database is limited in size to 140 terabytes (2&lt;sup&gt;&lt;small&gt;47&lt;/small&gt;&lt;/sup&gt; bytes, 128 tibibytes). And even if it could handle larger databases, SQLite stores the entire database in a single disk file and many filesystems limit the maximum size of files to something less than this. So if you are contemplating databases of this magnitude, you would do well to consider using a client/server database engine that spreads its content across multiple disk files, and perhaps across multiple volumes.</source>
          <target state="translated">SQLite数据库的大小限制为140 TB（2 &lt;sup&gt;&lt;small&gt;47&lt;/small&gt;&lt;/sup&gt;字节，128 TB）。即使可以处理更大的数据库，SQLite也会将整个数据库存储在一个磁盘文件中，许多文件系统将文件的最大大小限制为小于此大小。因此，如果您正在考虑这种规模的数据库，那么最好考虑使用一种客户机/服务器数据库引擎，该引擎将其内容分布在多个磁盘文件中，甚至可以跨多个卷。</target>
        </trans-unit>
        <trans-unit id="558b75a72d8c6499c78323d65dfdffa7599a1498" translate="yes" xml:space="preserve">
          <source>An SQLite database is limited in size to 281 terabytes (2&lt;sup&gt;&lt;small&gt;47&lt;/small&gt;&lt;/sup&gt; bytes, 128 tibibytes). And even if it could handle larger databases, SQLite stores the entire database in a single disk file and many filesystems limit the maximum size of files to something less than this. So if you are contemplating databases of this magnitude, you would do well to consider using a client/server database engine that spreads its content across multiple disk files, and perhaps across multiple volumes.</source>
          <target state="translated">SQLite数据库的大小限制为281 TB（2 &lt;sup&gt;&lt;small&gt;47&lt;/small&gt;&lt;/sup&gt;字节，128 TB）。即使可以处理更大的数据库，SQLite也会将整个数据库存储在一个磁盘文件中，许多文件系统将文件的最大大小限制为小于此大小。因此，如果您正在考虑这种规模的数据库，那么最好考虑使用一种客户机/服务器数据库引擎，该引擎将其内容分布在多个磁盘文件中，甚至可以跨多个卷。</target>
        </trans-unit>
        <trans-unit id="e2b6577ed0b07f90ad4eb52e6b315995d2b75c2a" translate="yes" xml:space="preserve">
          <source>An SQLite database is limited in size to 281 terabytes (2&lt;sup&gt;&lt;small&gt;48&lt;/small&gt;&lt;/sup&gt; bytes, 256 tibibytes). And even if it could handle larger databases, SQLite stores the entire database in a single disk file and many filesystems limit the maximum size of files to something less than this. So if you are contemplating databases of this magnitude, you would do well to consider using a client/server database engine that spreads its content across multiple disk files, and perhaps across multiple volumes.</source>
          <target state="translated">SQLite数据库的大小限制为281 TB（2 &lt;sup&gt;&lt;small&gt;48&lt;/small&gt;&lt;/sup&gt;字节，256 TB）。即使可以处理更大的数据库，SQLite也会将整个数据库存储在一个磁盘文件中，许多文件系统将文件的最大大小限制为小于此大小。因此，如果您正在考虑这种规模的数据库，那么最好考虑使用一种客户机/服务器数据库引擎，该引擎将其内容分布在多个磁盘文件中，甚至可以跨多个卷。</target>
        </trans-unit>
        <trans-unit id="8efcb5c5b5fbf0d6f174a7bd1fdafd17d5d08348" translate="yes" xml:space="preserve">
          <source>An SQLite database is maintained on disk using a B-tree implementation found in the &lt;a href=&quot;https://sqlite.org/src/file/src/btree.c&quot;&gt;btree.c&lt;/a&gt; source file. A separate B-tree is used for each table and index in the database. All B-trees are stored in the same disk file. The &lt;a href=&quot;fileformat2&quot;&gt;file format&lt;/a&gt; details are stable and well-defined and are guaranteed to be compatible moving forward.</source>
          <target state="translated">使用在&lt;a href=&quot;https://sqlite.org/src/file/src/btree.c&quot;&gt;btree.c&lt;/a&gt;源文件中找到的B树实现在磁盘上维护SQLite数据库。数据库中的每个表和索引都使用单独的B树。所有B树都存储在同一磁盘文件中。该&lt;a href=&quot;fileformat2&quot;&gt;文件格式的&lt;/a&gt;细节是稳定和明确，并保证是向前兼容的移动。</target>
        </trans-unit>
        <trans-unit id="68053c62dc0eb41c9a6f14184a5a279de10fdadb" translate="yes" xml:space="preserve">
          <source>An SQLite database is maintained on disk using a B-tree implementation found in the &lt;a href=&quot;https://sqlite.org/src/file/src/btree.c&quot;&gt;btree.c&lt;/a&gt; source file. Separate B-trees are used for each table and each index in the database. All B-trees are stored in the same disk file. The &lt;a href=&quot;fileformat2&quot;&gt;file format&lt;/a&gt; details are stable and well-defined and are guaranteed to be compatible moving forward.</source>
          <target state="translated">使用在&lt;a href=&quot;https://sqlite.org/src/file/src/btree.c&quot;&gt;btree.c&lt;/a&gt;源文件中找到的B树实现将SQLite数据库维护在磁盘上。数据库中的每个表和每个索引都使用单独的B树。所有B树都存储在同一磁盘文件中。该&lt;a href=&quot;fileformat2&quot;&gt;文件格式的&lt;/a&gt;细节是稳定和明确，并保证是向前兼容的移动。</target>
        </trans-unit>
        <trans-unit id="25bf5d553881678b34da8985ef757fc5ffe38cac" translate="yes" xml:space="preserve">
          <source>An SQLite database is normally stored in a single ordinary disk file. However, in certain circumstances, the database might be stored in memory.</source>
          <target state="translated">一个SQLite数据库通常存储在一个普通的磁盘文件中,但在某些情况下,数据库可能存储在内存中。但是,在某些情况下,数据库可能存储在内存中。</target>
        </trans-unit>
        <trans-unit id="ffcfbe0c6736b628bac17f2c3fd76a08f4a70298" translate="yes" xml:space="preserve">
          <source>An SQLite extension is a shared library or DLL. To load it, you need to supply SQLite with the name of the file containing the shared library or DLL and an entry point to initialize the extension. In C code, this information is supplied using the &lt;a href=&quot;c3ref/load_extension&quot;&gt;sqlite3_load_extension()&lt;/a&gt; API. See the documentation on that routine for additional information.</source>
          <target state="translated">SQLite扩展是共享库或DLL。要加载它，您需要向SQLite提供包含共享库或DLL的文件的名称以及初始化扩展名的入口点。在C代码中，此信息使用&lt;a href=&quot;c3ref/load_extension&quot;&gt;sqlite3_load_extension（）&lt;/a&gt; API提供。有关其他信息，请参见该例程的文档。</target>
        </trans-unit>
        <trans-unit id="741d402ffb5729c1f12f8583e23c058762a2645f" translate="yes" xml:space="preserve">
          <source>An SQLite file associates a key with some data. For an SQLite table, the database file is set up so that the key is an integer and the data is the information for one row of the table. Indices in SQLite reverse this arrangement. The index key is (some of) the information being stored and the index data is an integer. To access a table row that has some particular content, we first look up the content in the index table to find its integer index, then we use that integer to look up the complete record in the table.</source>
          <target state="translated">一个SQLite文件将一个键与一些数据关联起来。对于一个SQLite表,数据库文件的设置是键是一个整数,数据是表的一行的信息。SQLite中的索引则颠覆了这种安排。索引键是(部分)被存储的信息,索引数据是一个整数。如果要访问某条表行,其中有一些特定的内容,我们首先要在索引表中查找内容,找到它的整数索引,然后用这个整数来查找表中的完整记录。</target>
        </trans-unit>
        <trans-unit id="aa48e9ca1a9afbd598f5c369c282c95ae280985d" translate="yes" xml:space="preserve">
          <source>An UPDATE change does not contain any information regarding non-PRIMARY KEY fields that are not modified by the change. It is not possible for an UPDATE change to specify modifications to PRIMARY KEY fields.</source>
          <target state="translated">UPDATE变更不包含任何关于非主键字段的信息,这些字段没有被变更修改。UPDATE变更不可能指定对PRIMARY KEY字段的修改。</target>
        </trans-unit>
        <trans-unit id="a8453636ce12faf3a7d30b3604973de7e92b03be" translate="yes" xml:space="preserve">
          <source>An UPDATE statement is used to modify a subset of the values stored in zero or more rows of the database table identified by the &lt;a href=&quot;syntax/qualified-table-name&quot;&gt;qualified-table-name&lt;/a&gt; specified as part of the UPDATE statement.</source>
          <target state="translated">UPDATE语句用于修改存储在数据库表的零行或更多行中的值的子集，该值由指定为UPDATE语句一部分的&lt;a href=&quot;syntax/qualified-table-name&quot;&gt;qualified-table-name&lt;/a&gt;标识。</target>
        </trans-unit>
        <trans-unit id="c4f3409a0b0e68f9dad8c3ad576c7434229cfe7d" translate="yes" xml:space="preserve">
          <source>An UPSERT is an ordinary &lt;a href=&quot;lang_insert&quot;&gt;INSERT&lt;/a&gt; statement that is followed by the special ON CONFLICT clause shown above.</source>
          <target state="translated">UPSERT是普通的&lt;a href=&quot;lang_insert&quot;&gt;INSERT&lt;/a&gt;语句，后跟上面显示的特殊ON CONFLICT子句。</target>
        </trans-unit>
        <trans-unit id="69182763d75d3decbdc8b998206e5e9e0abdd4fa" translate="yes" xml:space="preserve">
          <source>An administrator might be cleaning up after an OS crash or power failure, see the journal file, think it is junk, and delete it.</source>
          <target state="translated">管理员可能在操作系统崩溃或断电后进行清理,看到日志文件,认为是垃圾文件,于是将其删除。</target>
        </trans-unit>
        <trans-unit id="3394246ad7fb8330c70e24b0e7ea728a29ef0f38" translate="yes" xml:space="preserve">
          <source>An advanced &lt;a href=&quot;optoverview&quot;&gt;query planner&lt;/a&gt;</source>
          <target state="translated">高级&lt;a href=&quot;optoverview&quot;&gt;查询计划者&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="911df1dfdba68c60884217edf88c5ceef73757d1" translate="yes" xml:space="preserve">
          <source>An aggregate window function is similar to an &lt;a href=&quot;lang_aggfunc&quot;&gt;ordinary aggregate function&lt;/a&gt;, except adding it to a query does not change the number of rows returned. Instead, for each row the result of the aggregate window function is as if the corresponding aggregate were run over all rows in the &quot;window frame&quot; specified by the OVER clause.</source>
          <target state="translated">聚合窗口函数类似于&lt;a href=&quot;lang_aggfunc&quot;&gt;普通的聚合函数&lt;/a&gt;，只是将其添加到查询中不会更改返回的行数。相反，对于每一行，聚合窗口函数的结果就像是在OVER子句指定的&amp;ldquo;窗口框架&amp;rdquo;中的所有行上运行了相应的聚合一样。</target>
        </trans-unit>
        <trans-unit id="322176e856e37076d444f90d3c6a55c34f3890cf" translate="yes" xml:space="preserve">
          <source>An alternate VFS can also be specified as the 4th parameter to the &lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open_v2()&lt;/a&gt; function. For example:</source>
          <target state="translated">也可以将备用VFS指定为&lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open_v2（）&lt;/a&gt;函数的第4个参数。例如：</target>
        </trans-unit>
        <trans-unit id="41672a8dda2c83a2c98fffccfd2de6f45dfd99a9" translate="yes" xml:space="preserve">
          <source>An alternative page cache implementation is specified using &lt;a href=&quot;#sqlite3_config&quot;&gt;sqlite3_config&lt;/a&gt;(&lt;a href=&quot;#sqliteconfigpcache2&quot;&gt;SQLITE_CONFIG_PCACHE2&lt;/a&gt;,...).</source>
          <target state="translated">使用&lt;a href=&quot;#sqlite3_config&quot;&gt;sqlite3_config&lt;/a&gt;（&lt;a href=&quot;#sqliteconfigpcache2&quot;&gt;SQLITE_CONFIG_PCACHE2&lt;/a&gt;，...）指定替代的页面缓存实现。</target>
        </trans-unit>
        <trans-unit id="947c7106a30016236017e10a97e39cd6cd0c6560" translate="yes" xml:space="preserve">
          <source>An alternative page cache implementation is specified using &lt;a href=&quot;config&quot;&gt;sqlite3_config&lt;/a&gt;(&lt;a href=&quot;c_config_covering_index_scan#sqliteconfigpcache2&quot;&gt;SQLITE_CONFIG_PCACHE2&lt;/a&gt;,...).</source>
          <target state="translated">使用&lt;a href=&quot;config&quot;&gt;sqlite3_config&lt;/a&gt;（&lt;a href=&quot;c_config_covering_index_scan#sqliteconfigpcache2&quot;&gt;SQLITE_CONFIG_PCACHE2&lt;/a&gt;，...）指定替代的页面缓存实现。</target>
        </trans-unit>
        <trans-unit id="7a5b04203def7bb645f2fb1f011d7be6cb15aa11" translate="yes" xml:space="preserve">
          <source>An alternative to using the VACUUM command is auto-vacuum mode, enabled using the &lt;a href=&quot;pragma#pragma_auto_vacuum&quot;&gt;auto_vacuum pragma&lt;/a&gt;.</source>
          <target state="translated">使用VACUUM命令的替代方法是使用&lt;a href=&quot;pragma#pragma_auto_vacuum&quot;&gt;auto_vacuum pragma&lt;/a&gt;启用的自动真空模式。</target>
        </trans-unit>
        <trans-unit id="ad7c395d93d8f14379a00c98e2d82d0ba28b9997" translate="yes" xml:space="preserve">
          <source>An alternative to using the VACUUM command to reclaim space after data has been deleted is auto-vacuum mode, enabled using the &lt;a href=&quot;pragma#pragma_auto_vacuum&quot;&gt;auto_vacuum&lt;/a&gt; pragma. When &lt;a href=&quot;pragma#pragma_auto_vacuum&quot;&gt;auto_vacuum&lt;/a&gt; is enabled for a database free pages may be reclaimed after deleting data, causing the file to shrink, without rebuilding the entire database using VACUUM. However, using &lt;a href=&quot;pragma#pragma_auto_vacuum&quot;&gt;auto_vacuum&lt;/a&gt; can lead to extra database file fragmentation. And &lt;a href=&quot;pragma#pragma_auto_vacuum&quot;&gt;auto_vacuum&lt;/a&gt; does not compact partially filled pages of the database as VACUUM does.</source>
          <target state="translated">删除数据后使用VACUUM命令回收空间的另一种方法是使用&lt;a href=&quot;pragma#pragma_auto_vacuum&quot;&gt;auto_vacuum&lt;/a&gt;编译指示启用自动真空模式。当&lt;a href=&quot;pragma#pragma_auto_vacuum&quot;&gt;auto_vacuum&lt;/a&gt;了数据库的免费页面可能删除数据，导致文件缩水，不重建使用真空整个数据库之后被回收启用。但是，使用&lt;a href=&quot;pragma#pragma_auto_vacuum&quot;&gt;auto_vacuum&lt;/a&gt;可能导致额外的数据库文件碎片。并且&lt;a href=&quot;pragma#pragma_auto_vacuum&quot;&gt;auto_vacuum&lt;/a&gt;不会像VACUUM那样压缩数据库的部分填充页面。</target>
        </trans-unit>
        <trans-unit id="5ded89491896af075066baeaec69132a1eb337e1" translate="yes" xml:space="preserve">
          <source>An application can also register multiple SQL functions with the same name and same number of arguments, but a different preferred text encoding. In that case, SQLite will invoke the function using the callbacks for the version whose preferred text encoding most closely matches the database text encoding. In this way, multiple implementations of the same function can be provided that are optimized for UTF8 or UTF16.</source>
          <target state="translated">应用程序也可以注册多个SQL函数,这些函数具有相同的名称和相同数量的参数,但具有不同的首选文本编码。在这种情况下,SQLite将使用首选文本编码与数据库文本编码最匹配的版本的回调来调用该函数。通过这种方式,可以提供同一个函数的多个实现,并针对UTF8或UTF16进行优化。</target>
        </trans-unit>
        <trans-unit id="553a75a5f14c49499d0ac2492bac151d7f6d24ab" translate="yes" xml:space="preserve">
          <source>An application can initiate a checkpoint using any writable database connection on the database simply by invoking &lt;a href=&quot;c3ref/wal_checkpoint&quot;&gt;sqlite3_wal_checkpoint()&lt;/a&gt; or &lt;a href=&quot;c3ref/wal_checkpoint_v2&quot;&gt;sqlite3_wal_checkpoint_v2()&lt;/a&gt;. There are three subtypes of checkpoints that vary in their aggressiveness: PASSIVE, FULL, and RESTART. The default checkpoint style is PASSIVE, which does as much work as it can without interfering with other database connections, and which might not run to completion if there are concurrent readers or writers. All checkpoints initiated by &lt;a href=&quot;c3ref/wal_checkpoint&quot;&gt;sqlite3_wal_checkpoint()&lt;/a&gt; and by the automatic checkpoint mechanism are PASSIVE. FULL and RESTART checkpoints try harder to run the checkpoint to completion and can only be initiated by a call to &lt;a href=&quot;c3ref/wal_checkpoint_v2&quot;&gt;sqlite3_wal_checkpoint_v2()&lt;/a&gt;. See the &lt;a href=&quot;c3ref/wal_checkpoint_v2&quot;&gt;sqlite3_wal_checkpoint_v2()&lt;/a&gt; documentation for additional information on FULL and RESET checkpoints.</source>
          <target state="translated">应用程序可以通过调用&lt;a href=&quot;c3ref/wal_checkpoint&quot;&gt;sqlite3_wal_checkpoint（）&lt;/a&gt;或&lt;a href=&quot;c3ref/wal_checkpoint_v2&quot;&gt;sqlite3_wal_checkpoint_v2（）&lt;/a&gt;来使用数据库上的任何可写数据库连接来启动检查点。检查点的攻击性分为三种子类型：&amp;ldquo;被动&amp;rdquo;，&amp;ldquo;完全&amp;rdquo;和&amp;ldquo;重新启动&amp;rdquo;。默认检查点样式为PASSIVE，它会在不干扰其他数据库连接的情况下尽其所能，并且如果存在并发的读取器或写入器，则可能无法完成。由&lt;a href=&quot;c3ref/wal_checkpoint&quot;&gt;sqlite3_wal_checkpoint（）&lt;/a&gt;和自动检查点机制启动的所有检查点均为PASSIVE。 FULL和RESTART检查点会更加努力地运行检查点以使其完成，并且只能通过调用&lt;a href=&quot;c3ref/wal_checkpoint_v2&quot;&gt;sqlite3_wal_checkpoint_v2（）&lt;/a&gt;来启动。有关FULL和RESET检查点的其他信息，请参见&lt;a href=&quot;c3ref/wal_checkpoint_v2&quot;&gt;sqlite3_wal_checkpoint_v2（）&lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="b67ba81a9225f9986e5d6153b64db41fca122a2b" translate="yes" xml:space="preserve">
          <source>An application can insert layers or &quot;overlays&quot; in between the SQLite core and the underlying memory allocator. For example, the &lt;a href=&quot;#oomtesting&quot;&gt;out-of-memory test logic&lt;/a&gt; for SQLite uses an overlay that can simulate memory allocation failures.</source>
          <target state="translated">应用程序可以在SQLite核心和基础内存分配器之间插入层或&amp;ldquo;覆盖&amp;rdquo;。例如，SQLite的内存不足&lt;a href=&quot;#oomtesting&quot;&gt;测试逻辑&lt;/a&gt;使用可以模拟内存分配失败的覆盖。</target>
        </trans-unit>
        <trans-unit id="c388b93196430467345107651fd79645679ae7e0" translate="yes" xml:space="preserve">
          <source>An application can register additional collating functions using the &lt;a href=&quot;c3ref/create_collation&quot;&gt;sqlite3_create_collation()&lt;/a&gt; interface.</source>
          <target state="translated">应用程序可以使用&lt;a href=&quot;c3ref/create_collation&quot;&gt;sqlite3_create_collat​​ion（）&lt;/a&gt;接口注册其他整理功能。</target>
        </trans-unit>
        <trans-unit id="83af746376d0381ac294352b72f5044bc5a90aa4" translate="yes" xml:space="preserve">
          <source>An application is allowed to prepare multiple SQL statements in advance and evaluate them as needed. There is no arbitrary limit to the number of outstanding &lt;a href=&quot;c3ref/stmt&quot;&gt;prepared statements&lt;/a&gt;. Some applications call &lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare()&lt;/a&gt; multiple times at start-up to create all of the &lt;a href=&quot;c3ref/stmt&quot;&gt;prepared statements&lt;/a&gt; they will ever need. Other applications keep a cache of the most recently used &lt;a href=&quot;c3ref/stmt&quot;&gt;prepared statements&lt;/a&gt; and then reuse &lt;a href=&quot;c3ref/stmt&quot;&gt;prepared statements&lt;/a&gt; out of the cache when available. Another approach is to only reuse &lt;a href=&quot;c3ref/stmt&quot;&gt;prepared statements&lt;/a&gt; when they are inside of a loop.</source>
          <target state="translated">允许应用程序预先准备多个SQL语句并根据需要对其进行评估。未完成的&lt;a href=&quot;c3ref/stmt&quot;&gt;准备好的语句&lt;/a&gt;的数量没有任意限制。一些应用程序在启动时会多次调用&lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare（）&lt;/a&gt;来创建他们将需要的所有&lt;a href=&quot;c3ref/stmt&quot;&gt;准备好的语句&lt;/a&gt;。其他应用程序保留最近使用的&lt;a href=&quot;c3ref/stmt&quot;&gt;准备&lt;/a&gt;&lt;a href=&quot;c3ref/stmt&quot;&gt;好的语句&lt;/a&gt;的缓存，然后在可用时将准备好的语句从缓存中重用。另一种方法是仅在循环中使用已&lt;a href=&quot;c3ref/stmt&quot;&gt;准备好的语句&lt;/a&gt;时再使用它们。</target>
        </trans-unit>
        <trans-unit id="70a715c74846889076e9d1ad5301c64640567bdc" translate="yes" xml:space="preserve">
          <source>An application program could do all its disk I/O by direct calls to operating system I/O routines or by using a key/value storage engine like &lt;a href=&quot;https://en.wikipedia.org/wiki/Berkeley_DB&quot;&gt;Berkeley DB&lt;/a&gt; or &lt;a href=&quot;https://en.wikipedia.org/wiki/RocksDB&quot;&gt;RocksDB&lt;/a&gt; (to name but two). But there are advantages to using a higher-level interface based on the SQL language.</source>
          <target state="translated">应用程序可以通过直接调用操作系统I / O例程或使用诸如&lt;a href=&quot;https://en.wikipedia.org/wiki/Berkeley_DB&quot;&gt;Berkeley DB&lt;/a&gt;或&lt;a href=&quot;https://en.wikipedia.org/wiki/RocksDB&quot;&gt;RocksDB&lt;/a&gt;（仅举两个）之类的键/值存储引擎来完成其所有磁盘I / O。但是，使用基于SQL语言的更高级别的接口有很多优点。</target>
        </trans-unit>
        <trans-unit id="c0f92c3ae91ceb152b4ca7b440a380181cc47f0d" translate="yes" xml:space="preserve">
          <source>An application will typically use &lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open()&lt;/a&gt; to create a single &lt;a href=&quot;c3ref/sqlite3&quot;&gt;database connection&lt;/a&gt; during initialization. Note that &lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open()&lt;/a&gt; can be used to either open existing database files or to create and open new database files. While many applications use only a single &lt;a href=&quot;c3ref/sqlite3&quot;&gt;database connection&lt;/a&gt;, there is no reason why an application cannot call &lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open()&lt;/a&gt; multiple times in order to open multiple &lt;a href=&quot;c3ref/sqlite3&quot;&gt;database connections&lt;/a&gt; - either to the same database or to different databases. Sometimes a multi-threaded application will create separate &lt;a href=&quot;c3ref/sqlite3&quot;&gt;database connections&lt;/a&gt; for each thread. Note that a single &lt;a href=&quot;c3ref/sqlite3&quot;&gt;database connection&lt;/a&gt; can access two or more databases using the &lt;a href=&quot;lang_attach&quot;&gt;ATTACH&lt;/a&gt; SQL command, so it is not necessary to have a separate database connection for each database file.</source>
          <target state="translated">应用程序通常会在初始化期间使用&lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open（）&lt;/a&gt;创建单个&lt;a href=&quot;c3ref/sqlite3&quot;&gt;数据库连接&lt;/a&gt;。请注意，&lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open（）&lt;/a&gt;可用于打开现有数据库文件或创建和打开新数据库文件。尽管许多应用程序仅使用单个&lt;a href=&quot;c3ref/sqlite3&quot;&gt;数据库连接&lt;/a&gt;，但没有理由应用程序不能多次调用&lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open（）&lt;/a&gt;来打开多个&lt;a href=&quot;c3ref/sqlite3&quot;&gt;数据库连接&lt;/a&gt; -到同一数据库或不同数据库。有时，多线程应用程序将为每个线程创建单独的&lt;a href=&quot;c3ref/sqlite3&quot;&gt;数据库连接&lt;/a&gt;。请注意，单个&lt;a href=&quot;c3ref/sqlite3&quot;&gt;数据库连接&lt;/a&gt;可以使用&lt;a href=&quot;lang_attach&quot;&gt;ATTACH&lt;/a&gt; SQL命令访问两个或多个数据库，因此不必为每个数据库文件建立单独的数据库连接。</target>
        </trans-unit>
        <trans-unit id="ad0ed6ebbb2c20729bbba2c61a375d2fc0e59a68" translate="yes" xml:space="preserve">
          <source>An application-defined function is permitted to call other SQLite interfaces. However, such calls must not close the database connection nor finalize or reset the prepared statement in which the function is running.</source>
          <target state="translated">允许应用程序定义的函数调用其他SQLite接口。但是,这种调用不得关闭数据库连接,也不得最终确定或重置函数运行的准备语句。</target>
        </trans-unit>
        <trans-unit id="368a116479c83bd78621f71906b14ee39f5af37e" translate="yes" xml:space="preserve">
          <source>An arbitrary length BLOB</source>
          <target state="translated">一个任意长度的BLOB</target>
        </trans-unit>
        <trans-unit id="f821dc4d7f9c71f0ab35cc4c36d94a5e6e1a02bc" translate="yes" xml:space="preserve">
          <source>An arbitrary length strings</source>
          <target state="translated">一个任意长度的字符串</target>
        </trans-unit>
        <trans-unit id="f202da56865107787793ba6bb322ff0a12df07b9" translate="yes" xml:space="preserve">
          <source>An argument with SQL type TEXT is normally converted into a quoted JSON string. However, if the argument is the output from another json1 function, then it is stored as JSON. This allows calls to json_array() and &lt;a href=&quot;json1#jobj&quot;&gt;json_object()&lt;/a&gt; to be nested. The &lt;a href=&quot;json1#jmini&quot;&gt;json()&lt;/a&gt; function can also be used to force strings to be recognized as JSON.</source>
          <target state="translated">SQL类型为TEXT的参数通常会转换为带引号的JSON字符串。但是，如果参数是另一个json1函数的输出，则它将存储为JSON。这样可以嵌套对json_array（）和&lt;a href=&quot;json1#jobj&quot;&gt;json_object（）的&lt;/a&gt;调用。的&lt;a href=&quot;json1#jmini&quot;&gt;JSON（）&lt;/a&gt;函数也可用于强制的字符串被识别为JSON。</target>
        </trans-unit>
        <trans-unit id="232575a5b7dcf96eebb74b1c36e1cd9952456a1f" translate="yes" xml:space="preserve">
          <source>An argument with SQL type TEXT it is normally converted into a quoted JSON string even if the input text is well-formed JSON. However, if the argument is the direct result from another json1 function, then it is treated as JSON and all of its JSON type information and substructure is preserved. This allows calls to json_object() and &lt;a href=&quot;json1#jarray&quot;&gt;json_array()&lt;/a&gt; to be nested. The &lt;a href=&quot;json1#jmini&quot;&gt;json()&lt;/a&gt; function can also be used to force strings to be recognized as JSON.</source>
          <target state="translated">SQL类型为TEXT的参数通常会转换为带引号的JSON字符串，即使输入文本为格式正确的JSON。但是，如果参数是另一个json1函数的直接结果，则将其视为JSON，并保留其所有JSON类型信息和子结构。这样可以嵌套对json_object（）和&lt;a href=&quot;json1#jarray&quot;&gt;json_array（）的&lt;/a&gt;调用。的&lt;a href=&quot;json1#jmini&quot;&gt;JSON（）&lt;/a&gt;函数也可用于强制的字符串被识别为JSON。</target>
        </trans-unit>
        <trans-unit id="ba3098d8640bbb6ff43023d4a4dc7ae39f23e7f1" translate="yes" xml:space="preserve">
          <source>An argument with SQL type TEXT it is normally converted into a quoted JSON string. However, if the argument is the output from another json1 function, then it is stored as JSON. This allows calls to json_array() and &lt;a href=&quot;json1#jobj&quot;&gt;json_object()&lt;/a&gt; to be nested. The &lt;a href=&quot;json1#jmini&quot;&gt;json()&lt;/a&gt; function can also be used to force strings to be recognized as JSON.</source>
          <target state="translated">SQL类型为TEXT的参数通常会转换为带引号的JSON字符串。但是，如果参数是另一个json1函数的输出，那么它将存储为JSON。这样可以嵌套对json_array（）和&lt;a href=&quot;json1#jobj&quot;&gt;json_object（）的&lt;/a&gt;调用。的&lt;a href=&quot;json1#jmini&quot;&gt;JSON（）&lt;/a&gt;函数也可用于强制的字符串被识别为JSON。</target>
        </trans-unit>
        <trans-unit id="c4806a509e481529fa2b28682facfc05b551794d" translate="yes" xml:space="preserve">
          <source>An assert() statement is often used to validate pre-conditions on internal functions and methods. Example: &lt;a href=&quot;https://sqlite.org/src/artifact/c1e97e4c6f?ln=1048&quot;&gt;https://sqlite.org/src/artifact/c1e97e4c6f?ln=1048&lt;/a&gt;. This is deemed better than simply stating the pre-condition in a header comment, since the assert() is actually executed. In a highly tested program like SQLite, the reader knows that the pre-condition is true for all of the hundreds of millions of test cases run against SQLite, since it has been verified by the assert(). In contrast, a text pre-condition statement in a header comment is untested. It might have been true when the code was written, but who is to say that it is still true now?</source>
          <target state="translated">assert（）语句通常用于验证内部函数和方法的前提条件。示例：&lt;a href=&quot;https://sqlite.org/src/artifact/c1e97e4c6f?ln=1048&quot;&gt;https&lt;/a&gt; : //sqlite.org/src/artifact/c1e97e4c6f?ln=1048。认为这比在标头注释中简单地说明前提条件要好，因为assert（）实际上是在执行的。在像SQLite这样经过高度测试的程序中，读者知道先决条件对于针对SQLite运行的数亿个测试用例都是正确的，因为该条件已经由assert（）进行了验证。相反，标题注释中的文本前提条件语句未经测试。编写代码时可能是正确的，但是谁又说它现在仍然正确呢？</target>
        </trans-unit>
        <trans-unit id="734aa331fcaf7e910bbd2120afae3cf5a122f2fd" translate="yes" xml:space="preserve">
          <source>An assertion fails if P2 is not an integer.</source>
          <target state="translated">如果P2不是整数,则断言失败。</target>
        </trans-unit>
        <trans-unit id="f4d9c6c8e0b518f22e195d912f6aa5b7d1dd73a5" translate="yes" xml:space="preserve">
          <source>An atomic commit is supposed to happen instantaneously. But the processing described above clearly takes a finite amount of time. Suppose the power to the computer were cut part way through the commit operation described above. In order to maintain the illusion that the changes were instantaneous, we have to &quot;rollback&quot; any partial changes and restore the database to the state it was in prior to the beginning of the transaction.</source>
          <target state="translated">原子提交应该是瞬间发生的。但上述处理过程显然需要有限的时间。假设在上面描述的提交操作过程中,计算机的电源被切断了一部分。为了保持变化是瞬间发生的假象,我们必须 &quot;回滚 &quot;任何部分变化,并将数据库恢复到事务开始前的状态。</target>
        </trans-unit>
        <trans-unit id="e11c0c4803807d87c78fdeba64f0dde4ba44fbdd" translate="yes" xml:space="preserve">
          <source>An attempt is made to upgrade to an</source>
          <target state="translated">试图升级到</target>
        </trans-unit>
        <trans-unit id="404254ba0f2702898e820a78567011f727d4bb51" translate="yes" xml:space="preserve">
          <source>An attempt to execute COMMIT might also result in an &lt;a href=&quot;rescode#busy&quot;&gt;SQLITE_BUSY&lt;/a&gt; return code if an another thread or process has an open read connection. When COMMIT fails in this way, the transaction remains active and the COMMIT can be retried later after the reader has had a chance to clear.</source>
          <target state="translated">如果另一个线程或进程具有打开的读取连接，则尝试执行COMMIT可能还会导致&lt;a href=&quot;rescode#busy&quot;&gt;SQLITE_BUSY&lt;/a&gt;返回代码。当COMMIT以这种方式失败时，事务将保持活动状态，并且在读者有机会清除后可以稍后重试COMMIT。</target>
        </trans-unit>
        <trans-unit id="3979550223b90497821c0aba7295ef97c7b65e0d" translate="yes" xml:space="preserve">
          <source>An attempt to read from an expired &lt;a href=&quot;#sqlite3_blob&quot;&gt;BLOB handle&lt;/a&gt; fails with an error code of &lt;a href=&quot;#SQLITE_ABORT&quot;&gt;SQLITE_ABORT&lt;/a&gt;.</source>
          <target state="translated">尝试从过期的&lt;a href=&quot;#sqlite3_blob&quot;&gt;BLOB句柄&lt;/a&gt;读取失败，错误代码为&lt;a href=&quot;#SQLITE_ABORT&quot;&gt;SQLITE_ABORT&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="79d2f9e7d226af948b651170c9b5bffda6c6a847" translate="yes" xml:space="preserve">
          <source>An attempt to read from an expired &lt;a href=&quot;blob&quot;&gt;BLOB handle&lt;/a&gt; fails with an error code of &lt;a href=&quot;../rescode#abort&quot;&gt;SQLITE_ABORT&lt;/a&gt;.</source>
          <target state="translated">尝试从过期的&lt;a href=&quot;blob&quot;&gt;BLOB句柄&lt;/a&gt;读取失败，错误代码为&lt;a href=&quot;../rescode#abort&quot;&gt;SQLITE_ABORT&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c063fe576f329d251937e5f31d7607dcdb3d3ae3" translate="yes" xml:space="preserve">
          <source>An attempt to write to an expired &lt;a href=&quot;#sqlite3_blob&quot;&gt;BLOB handle&lt;/a&gt; fails with an error code of &lt;a href=&quot;#SQLITE_ABORT&quot;&gt;SQLITE_ABORT&lt;/a&gt;. Writes to the BLOB that occurred before the &lt;a href=&quot;#sqlite3_blob&quot;&gt;BLOB handle&lt;/a&gt; expired are not rolled back by the expiration of the handle, though of course those changes might have been overwritten by the statement that expired the BLOB handle or by other independent statements.</source>
          <target state="translated">尝试写入过期的&lt;a href=&quot;#sqlite3_blob&quot;&gt;BLOB句柄&lt;/a&gt;失败，错误代码为&lt;a href=&quot;#SQLITE_ABORT&quot;&gt;SQLITE_ABORT&lt;/a&gt;。在&lt;a href=&quot;#sqlite3_blob&quot;&gt;BLOB句柄&lt;/a&gt;过期之前发生的对BLOB的写操作不会因句柄的过期而回滚，尽管这些更改当然可能已由使BLOB句柄过期的语句或其他独立语句覆盖。</target>
        </trans-unit>
        <trans-unit id="75bfad8795848d7c6435b7cbd7f5aec468cc1527" translate="yes" xml:space="preserve">
          <source>An attempt to write to an expired &lt;a href=&quot;blob&quot;&gt;BLOB handle&lt;/a&gt; fails with an error code of &lt;a href=&quot;../rescode#abort&quot;&gt;SQLITE_ABORT&lt;/a&gt;. Writes to the BLOB that occurred before the &lt;a href=&quot;blob&quot;&gt;BLOB handle&lt;/a&gt; expired are not rolled back by the expiration of the handle, though of course those changes might have been overwritten by the statement that expired the BLOB handle or by other independent statements.</source>
          <target state="translated">尝试写入过期的&lt;a href=&quot;blob&quot;&gt;BLOB句柄&lt;/a&gt;失败，错误代码为&lt;a href=&quot;../rescode#abort&quot;&gt;SQLITE_ABORT&lt;/a&gt;。在&lt;a href=&quot;blob&quot;&gt;BLOB句柄&lt;/a&gt;过期之前发生的对BLOB的写操作不会因句柄的过期而回滚，尽管这些更改当然可能已由使BLOB句柄过期的语句或其他独立语句覆盖。</target>
        </trans-unit>
        <trans-unit id="3ad76d49804b0b58fd84332ca5a84e267894c91f" translate="yes" xml:space="preserve">
          <source>An authorizer is used when &lt;a href=&quot;#sqlite3_prepare&quot;&gt;preparing&lt;/a&gt; SQL statements from an untrusted source, to ensure that the SQL statements do not try to access data they are not allowed to see, or that they do not try to execute malicious statements that damage the database. For example, an application may allow a user to enter arbitrary SQL queries for evaluation by a database. But the application does not want the user to be able to make arbitrary changes to the database. An authorizer could then be put in place while the user-entered SQL is being &lt;a href=&quot;#sqlite3_prepare&quot;&gt;prepared&lt;/a&gt; that disallows everything except &lt;a href=&quot;lang_select&quot;&gt;SELECT&lt;/a&gt; statements.</source>
          <target state="translated">在从不受信任的来源&lt;a href=&quot;#sqlite3_prepare&quot;&gt;准备&lt;/a&gt; SQL语句时，使用授权者来确保SQL语句不会尝试访问不允许其查看的数据，或者确保它们不会尝试执行破坏数据库的恶意语句。例如，应用程序可以允许用户输入任意SQL查询以供数据库评估。但是应用程序不希望用户能够对数据库进行任意更改。然后，可以在&lt;a href=&quot;#sqlite3_prepare&quot;&gt;准备&lt;/a&gt;用户输入的SQL时放置授权者，该SQL 不允许除&lt;a href=&quot;lang_select&quot;&gt;SELECT&lt;/a&gt;语句之外的所有内容。</target>
        </trans-unit>
        <trans-unit id="f1e075e878ae45a376fd2939c290edbd89e855bf" translate="yes" xml:space="preserve">
          <source>An authorizer is used when &lt;a href=&quot;prepare&quot;&gt;preparing&lt;/a&gt; SQL statements from an untrusted source, to ensure that the SQL statements do not try to access data they are not allowed to see, or that they do not try to execute malicious statements that damage the database. For example, an application may allow a user to enter arbitrary SQL queries for evaluation by a database. But the application does not want the user to be able to make arbitrary changes to the database. An authorizer could then be put in place while the user-entered SQL is being &lt;a href=&quot;prepare&quot;&gt;prepared&lt;/a&gt; that disallows everything except &lt;a href=&quot;../lang_select&quot;&gt;SELECT&lt;/a&gt; statements.</source>
          <target state="translated">在从不受信任的来源&lt;a href=&quot;prepare&quot;&gt;准备&lt;/a&gt; SQL语句时，使用授权者来确保SQL语句不会尝试访问不允许其查看的数据，或者确保它们不会尝试执行破坏数据库的恶意语句。例如，应用程序可以允许用户输入任意SQL查询以供数据库评估。但是应用程序不希望用户能够对数据库进行任意更改。然后，可以在&lt;a href=&quot;prepare&quot;&gt;准备&lt;/a&gt;用户输入的SQL时放置授权者，该SQL 不允许除&lt;a href=&quot;../lang_select&quot;&gt;SELECT&lt;/a&gt;语句之外的所有内容。</target>
        </trans-unit>
        <trans-unit id="1c5a8d89ce83a2b735008709c97144e7c8447c49" translate="yes" xml:space="preserve">
          <source>An automatic index might also be used for a subquery:</source>
          <target state="translated">子查询也可以使用自动索引。</target>
        </trans-unit>
        <trans-unit id="8a27a69d5289ec3895fe5350ae755b86c8341fcb" translate="yes" xml:space="preserve">
          <source>An encoded FTS varint consumes between one and ten bytes of space. The number of bytes required is determined by the sign and magnitude of the integer value encoded. More accurately, the number of bytes used to store the encoded integer depends on the position of the most significant set bit in the 64-bit twos-complement representation of the integer value. Negative values always have the most significant bit set (the sign bit), and so are always stored using the full ten bytes. Positive integer values may be stored using less space.</source>
          <target state="translated">编码后的FTS varint需要消耗1到10个字节的空间,所需的字节数由编码后的整数值的符号和幅度决定。所需的字节数由编码后的整数值的符号和大小决定。更准确地说,用于存储编码整数的字节数取决于整数值的64位双补码表示中最重要的集合位的位置。负值总是有最重要的位集(符号位),所以总是使用整整十个字节来存储。正的整数值可以使用较少的空间来存储。</target>
        </trans-unit>
        <trans-unit id="23566adaf44732949e813db81dd7b604df6839d5" translate="yes" xml:space="preserve">
          <source>An ending frame boundary,</source>
          <target state="translated">一个结束的框架边界。</target>
        </trans-unit>
        <trans-unit id="9b7f16750f7735a9bc64b3d85d026914564b32de" translate="yes" xml:space="preserve">
          <source>An error is now returned when trying to start a transaction if another transaction is already active.</source>
          <target state="translated">如果另一个事务已经激活,那么当试图启动一个事务时,现在会返回一个错误。</target>
        </trans-unit>
        <trans-unit id="a6742ab14c7e1b0f89ab6e50a3f4d9ccb4760cbd" translate="yes" xml:space="preserve">
          <source>An error logger callback is invoked on SQLITE_MISUSE errors. This is useful in detecting application design issues when return codes are not consistently checked in the application code.</source>
          <target state="translated">在SQLITE_MISUSE错误时,会调用错误记录器回调。当应用程序代码中没有一致检查返回代码时,这对检测应用程序设计问题很有用。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
