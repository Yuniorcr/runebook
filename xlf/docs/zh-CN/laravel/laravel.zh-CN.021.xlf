<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="laravel">
    <body>
      <group id="laravel">
        <trans-unit id="bc945b7ff2d2e6b2bc34f07673b1f84668e234f7" translate="yes" xml:space="preserve">
          <source>After creating a new SQLite database using a command such as &lt;code&gt;touch database/database.sqlite&lt;/code&gt;, you can easily configure your environment variables to point to this newly created database by using the database's absolute path:</source>
          <target state="translated">使用诸如 &lt;code&gt;touch database/database.sqlite&lt;/code&gt; 之类的命令创建新的SQLite数据库之后，您可以使用数据库的绝对路径轻松配置环境变量以指向此新创建的数据库：</target>
        </trans-unit>
        <trans-unit id="6850792543fa8fef8d17162db7db9c7efe564ece" translate="yes" xml:space="preserve">
          <source>After creating job middleware, they may be attached to a job by returning them from the job's &lt;code&gt;middleware&lt;/code&gt; method. This method does not exist on jobs scaffolded by the &lt;code&gt;make:job&lt;/code&gt; Artisan command, so you will need to add it to your own job class definition:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cc98a047e97253c01343d1fe05794339c5a04d9" translate="yes" xml:space="preserve">
          <source>After creating the accessor, add the attribute name to the &lt;code&gt;appends&lt;/code&gt; property on the model. Note that attribute names are typically referenced in &quot;snake case&quot;, even though the accessor is defined using &quot;camel case&quot;:</source>
          <target state="translated">创建访问器后，将属性名称 &lt;code&gt;appends&lt;/code&gt; 到模型的appends属性中。请注意，即使访问器是使用&amp;ldquo; camel case&amp;rdquo;定义的，属性名称也通常在&amp;ldquo; snake case&amp;rdquo;中引用：</target>
        </trans-unit>
        <trans-unit id="28333e1869ebe4c40cafa7411da0516cc7a8f81f" translate="yes" xml:space="preserve">
          <source>After creating the directory, ensure that the &lt;a href=&quot;https://github.com/laravel/laravel/blob/76369205c8715a4a8d0d73061aa042a74fd402dc/storage/framework/cache/.gitignore&quot;&gt;storage/framework/cache/.gitignore&lt;/a&gt; file is updated.</source>
          <target state="translated">创建目录后，确保已更新&lt;a href=&quot;https://github.com/laravel/laravel/blob/76369205c8715a4a8d0d73061aa042a74fd402dc/storage/framework/cache/.gitignore&quot;&gt;storage / framework / cache / .gitignore&lt;/a&gt;文件。</target>
        </trans-unit>
        <trans-unit id="8c1c136bcff3efc5a136db54f1eb2727b29fadc9" translate="yes" xml:space="preserve">
          <source>After creating your personal access client, place the client's ID and plain-text secret value in your application's &lt;code&gt;.env&lt;/code&gt; file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67aa05ee2c41d4980d6d1950c6a19062de564470" translate="yes" xml:space="preserve">
          <source>After defining a translation string that has pluralization options, you may use the &lt;code&gt;trans_choice&lt;/code&gt; function to retrieve the line for a given &quot;count&quot;. In this example, since the count is greater than one, the plural form of the translation string is returned:</source>
          <target state="translated">在定义了具有复数选项的翻译字符串之后，您可以使用 &lt;code&gt;trans_choice&lt;/code&gt; 函数来检索给定&amp;ldquo;计数&amp;rdquo;的行。在此示例中，由于计数大于1，因此返回翻译字符串的复数形式：</target>
        </trans-unit>
        <trans-unit id="faed7a47c43e49a99f2c60b365633986bcf38a4d" translate="yes" xml:space="preserve">
          <source>After defining and mapping your Eloquent events, you may use &lt;a href=&quot;events#defining-listeners&quot;&gt;event listeners&lt;/a&gt; to handle the events.</source>
          <target state="translated">在定义并映射了口才事件之后，您可以使用&lt;a href=&quot;events#defining-listeners&quot;&gt;事件侦听器&lt;/a&gt;来处理事件。</target>
        </trans-unit>
        <trans-unit id="2e6283fd80256b20f7a0085ddfd19e5653971f13" translate="yes" xml:space="preserve">
          <source>After defining the state transformation method, we may use it like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e73974bad59195cb195aa836ab5c0e82b716111" translate="yes" xml:space="preserve">
          <source>After defining your resource collection, it may be returned from a route or controller:</source>
          <target state="translated">在定义了你的资源集合后,可以从路由或控制器中返回。</target>
        </trans-unit>
        <trans-unit id="266336d9ec13154f61e5821da1bc6124a29d4ced" translate="yes" xml:space="preserve">
          <source>After exporting the components, the &lt;code&gt;resources/views/vendor/mail/html/themes&lt;/code&gt; directory will contain a &lt;code&gt;default.css&lt;/code&gt; file. You may customize the CSS in this file and your styles will automatically be in-lined within the HTML representations of your Markdown mail messages.</source>
          <target state="translated">导出组件后， &lt;code&gt;resources/views/vendor/mail/html/themes&lt;/code&gt; 目录将包含 &lt;code&gt;default.css&lt;/code&gt; 文件。您可以在此文件中自定义CSS，您的样式将自动内嵌在Markdown邮件的HTML表示中。</target>
        </trans-unit>
        <trans-unit id="168871424a62825109ce2de67953c9df7662c108" translate="yes" xml:space="preserve">
          <source>After exporting the components, the &lt;code&gt;resources/views/vendor/mail/html/themes&lt;/code&gt; directory will contain a &lt;code&gt;default.css&lt;/code&gt; file. You may customize the CSS in this file and your styles will automatically be in-lined within the HTML representations of your Markdown notifications.</source>
          <target state="translated">导出组件后， &lt;code&gt;resources/views/vendor/mail/html/themes&lt;/code&gt; 目录将包含 &lt;code&gt;default.css&lt;/code&gt; 文件。您可以在此文件中自定义CSS，您的样式将自动内嵌在Markdown通知的HTML表示中。</target>
        </trans-unit>
        <trans-unit id="9015c5050f239b8294e634638ca6502b9ba2c8d0" translate="yes" xml:space="preserve">
          <source>After generating the pay link, you may use Cashier's provided &lt;code&gt;paddle-button&lt;/code&gt; Blade component to allow the user to initiate the Paddle widget and complete the charge:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5335a7b50c13b00d28febb960171c755b1c6af74" translate="yes" xml:space="preserve">
          <source>After generating the versioned file, you won't know the exact file name. So, you should use Laravel's global &lt;code&gt;mix&lt;/code&gt; function within your &lt;a href=&quot;views&quot;&gt;views&lt;/a&gt; to load the appropriately hashed asset. The &lt;code&gt;mix&lt;/code&gt; function will automatically determine the current name of the hashed file:</source>
          <target state="translated">生成版本文件后，您将不知道确切的文件名。因此，您应该在&lt;a href=&quot;views&quot;&gt;视图中&lt;/a&gt;使用Laravel的全局 &lt;code&gt;mix&lt;/code&gt; 功能来加载适当的哈希资产。该 &lt;code&gt;mix&lt;/code&gt; 功能会自动判断散列文件的当前名称：</target>
        </trans-unit>
        <trans-unit id="98df62441f10bd2ed16f001809403b93b11db1f7" translate="yes" xml:space="preserve">
          <source>After generating your command, you should fill in the &lt;code&gt;signature&lt;/code&gt; and &lt;code&gt;description&lt;/code&gt; properties of the class, which will be used when displaying your command on the &lt;code&gt;list&lt;/code&gt; screen. The &lt;code&gt;handle&lt;/code&gt; method will be called when your command is executed. You may place your command logic in this method.</source>
          <target state="translated">生成命令后，应填写该类的 &lt;code&gt;signature&lt;/code&gt; 和 &lt;code&gt;description&lt;/code&gt; 属性，这些属性将在 &lt;code&gt;list&lt;/code&gt; 屏幕上显示命令时使用。该 &lt;code&gt;handle&lt;/code&gt; 执行你的命令时，方法会被调用。您可以将命令逻辑放在此方法中。</target>
        </trans-unit>
        <trans-unit id="44639e2eb573aad98c447fd5d2148e7690ac54b2" translate="yes" xml:space="preserve">
          <source>After installing Dusk, a base &lt;code&gt;Page&lt;/code&gt; class will be placed in your &lt;code&gt;tests/Browser/Pages&lt;/code&gt; directory. This class contains a &lt;code&gt;siteElements&lt;/code&gt; method which may be used to define global shorthand selectors that should be available on every page throughout your application:</source>
          <target state="translated">安装Dusk之后，将在您的 &lt;code&gt;tests/Browser/Pages&lt;/code&gt; 目录中放置一个基本的 &lt;code&gt;Page&lt;/code&gt; 类。此类包含一个 &lt;code&gt;siteElements&lt;/code&gt; 方法，该方法可用于定义全局速记选择器，该选择器应在整个应用程序的每个页面上可用：</target>
        </trans-unit>
        <trans-unit id="a492919127b38dab7e12d3e3cadbc705c64eab0c" translate="yes" xml:space="preserve">
          <source>After installing Horizon, publish its assets using the &lt;code&gt;horizon:install&lt;/code&gt; Artisan command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88d05813238d1fcdcbda1d44ddfe21857dc16ffb" translate="yes" xml:space="preserve">
          <source>After installing Horizon, publish its assets using the &lt;code&gt;vendor:publish&lt;/code&gt; Artisan command:</source>
          <target state="translated">安装Horizo​​n之后，请使用 &lt;code&gt;vendor:publish&lt;/code&gt; Artisan命令发布资产：</target>
        </trans-unit>
        <trans-unit id="9a7777c361800190e746a479043e98e9849e0988" translate="yes" xml:space="preserve">
          <source>After installing Laravel, you may need to configure some permissions. Directories within the &lt;code&gt;storage&lt;/code&gt; and the &lt;code&gt;bootstrap/cache&lt;/code&gt; directories should be writable by your web server or Laravel will not run. If you are using the &lt;a href=&quot;homestead&quot;&gt;Homestead&lt;/a&gt; virtual machine, these permissions should already be set.</source>
          <target state="translated">安装Laravel之后，您可能需要配置一些权限。在中的目录 &lt;code&gt;storage&lt;/code&gt; 和 &lt;code&gt;bootstrap/cache&lt;/code&gt; 目录应该是可写的Web服务器或Laravel将无法运行。如果使用的是&lt;a href=&quot;homestead&quot;&gt;Homestead&lt;/a&gt;虚拟机，则应该已经设置了这些权限。</target>
        </trans-unit>
        <trans-unit id="6c12ff088d9fddc24d04152b41501f8246f75486" translate="yes" xml:space="preserve">
          <source>After installing Laravel, you should configure your web server's document / web root to be the &lt;code&gt;public&lt;/code&gt; directory. The &lt;code&gt;index.php&lt;/code&gt; in this directory serves as the front controller for all HTTP requests entering your application.</source>
          <target state="translated">安装Laravel之后，您应该将Web服务器的文档/ Web根目录配置为 &lt;code&gt;public&lt;/code&gt; 目录。此目录中的 &lt;code&gt;index.php&lt;/code&gt; 充当进入您应用程序的所有HTTP请求的前端控制器。</target>
        </trans-unit>
        <trans-unit id="8ff35686175e7c11268b26f88db06e74093333c2" translate="yes" xml:space="preserve">
          <source>After installing Scout, you should publish the Scout configuration using the &lt;code&gt;vendor:publish&lt;/code&gt; Artisan command. This command will publish the &lt;code&gt;scout.php&lt;/code&gt; configuration file to your &lt;code&gt;config&lt;/code&gt; directory:</source>
          <target state="translated">安装Scout之后，您应该使用 &lt;code&gt;vendor:publish&lt;/code&gt; Artisan命令发布Scout配置。此命令会将 &lt;code&gt;scout.php&lt;/code&gt; 配置文件发布到您的 &lt;code&gt;config&lt;/code&gt; 目录中：</target>
        </trans-unit>
        <trans-unit id="5e89fe530f05df46c8a9d46bca1e6fc477c3b271" translate="yes" xml:space="preserve">
          <source>After installing Telescope, publish its assets using the &lt;code&gt;telescope:install&lt;/code&gt; Artisan command. After installing Telescope, you should also run the &lt;code&gt;migrate&lt;/code&gt; command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c493f1fb6c4d70588b2c54f87784b1e90ba7312" translate="yes" xml:space="preserve">
          <source>After installing the Dusk package, run the &lt;code&gt;dusk:install&lt;/code&gt; Artisan command:</source>
          <target state="translated">安装Dusk软件包后，运行 &lt;code&gt;dusk:install&lt;/code&gt; Artisan命令：</target>
        </trans-unit>
        <trans-unit id="40abaead0bade4fc8602bc11a871fc1e8f393765" translate="yes" xml:space="preserve">
          <source>After making a test request to your application, the &lt;code&gt;dump&lt;/code&gt;, &lt;code&gt;dumpHeaders&lt;/code&gt;, and &lt;code&gt;dumpSession&lt;/code&gt; methods may be used to examine and debug the response contents:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1168f5e249efcb974537c403d47486ea8618da13" translate="yes" xml:space="preserve">
          <source>After placing the application in maintenance mode, you may navigate to the application URL matching this token and Laravel will issue a maintenance mode bypass cookie to your browser:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96ef02babab826a2cf15662f8005918a615ee355" translate="yes" xml:space="preserve">
          <source>After publishing Horizon's assets, its primary configuration file will be located at &lt;code&gt;config/horizon.php&lt;/code&gt;. This configuration file allows you to configure your worker options and each configuration option includes a description of its purpose, so be sure to thoroughly explore this file.</source>
          <target state="translated">发布Horizo​​n的资产后，其主要配置文件将位于 &lt;code&gt;config/horizon.php&lt;/code&gt; 。该配置文件使您可以配置工作程序选项，并且每个配置选项都包含其用途的描述，因此请务必彻底浏览该文件。</target>
        </trans-unit>
        <trans-unit id="f9e886ba3919a985d58f0e1bc23bbb1c8af85c28" translate="yes" xml:space="preserve">
          <source>After publishing Telescope's assets, its primary configuration file will be located at &lt;code&gt;config/telescope.php&lt;/code&gt;. This configuration file allows you to configure your watcher options and each configuration option includes a description of its purpose, so be sure to thoroughly explore this file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85ac4824fe3d71d573cc0651c676613c4a0e5672" translate="yes" xml:space="preserve">
          <source>After registering listeners in your &lt;code&gt;EventServiceProvider&lt;/code&gt;, use the &lt;code&gt;event:generate&lt;/code&gt; Artisan command to quickly generate listener classes.</source>
          <target state="translated">在 &lt;code&gt;EventServiceProvider&lt;/code&gt; 中注册侦听器之后，请使用 &lt;code&gt;event:generate&lt;/code&gt; Artisan命令快速生成侦听器类。</target>
        </trans-unit>
        <trans-unit id="68f7c1c22258c7cf713c0b427bba08cecef84937" translate="yes" xml:space="preserve">
          <source>After registering the components, make sure to run &lt;code&gt;npm run dev&lt;/code&gt; to recompile your assets. Once you have recompiled your assets, you may drop the components into one of your application's templates to get started creating clients and personal access tokens:</source>
          <target state="translated">注册组件后，请确保运行 &lt;code&gt;npm run dev&lt;/code&gt; 重新编译资产。重新编译资产后，可以将组件放入应用程序的模板之一，以开始创建客户端和个人访问令牌：</target>
        </trans-unit>
        <trans-unit id="76253c629ea1bcd7174f54a1ea4d68df35fc72fe" translate="yes" xml:space="preserve">
          <source>After retrieving the prices you may display them however you wish:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d25a3b36ee07fae64eb483890545a422b693e32" translate="yes" xml:space="preserve">
          <source>After running &lt;code&gt;telescope:install&lt;/code&gt;, you should remove the &lt;code&gt;TelescopeServiceProvider&lt;/code&gt; service provider registration from your &lt;code&gt;app&lt;/code&gt; configuration file. Instead, manually register the service provider in the &lt;code&gt;register&lt;/code&gt; method of your &lt;code&gt;AppServiceProvider&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed112ba7d9010ea50c0d9ea576eb39c26ff469f6" translate="yes" xml:space="preserve">
          <source>After running the &lt;code&gt;link&lt;/code&gt; command, you can access the site in your browser at &lt;code&gt;http://app-name.test&lt;/code&gt;.</source>
          <target state="translated">运行 &lt;code&gt;link&lt;/code&gt; 命令后，您可以在浏览器中通过 &lt;code&gt;http://app-name.test&lt;/code&gt; 访问该站点。</target>
        </trans-unit>
        <trans-unit id="e937a96ec6d237ee175ee7574136a0fcb7eac716" translate="yes" xml:space="preserve">
          <source>After running the &lt;code&gt;passport:install&lt;/code&gt; command, add the &lt;code&gt;Laravel\Passport\HasApiTokens&lt;/code&gt; trait to your &lt;code&gt;App\Models\User&lt;/code&gt; model. This trait will provide a few helper methods to your model which allow you to inspect the authenticated user's token and scopes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a7d5787f05beff86258d4d580e20829ee5f579c" translate="yes" xml:space="preserve">
          <source>After running the callback, the columns are reset to the original value.</source>
          <target state="translated">运行回调后,列会被重置为原始值。</target>
        </trans-unit>
        <trans-unit id="f2393d4d739125318458584200e944eac68cabd5" translate="yes" xml:space="preserve">
          <source>After running the command, you will see an Ngrok screen appear which contains the activity log and the publicly accessible URLs for the shared site. If you would like to specify a custom region, subdomain, or other Ngrok runtime option, you may add them to your &lt;code&gt;share&lt;/code&gt; command:</source>
          <target state="translated">运行该命令后，您将看到一个Ngrok屏幕，其中包含活动日志和共享站点的公共可访问URL。如果要指定自定义区域，子域或其他Ngrok运行时选项，可以将它们添加到您的 &lt;code&gt;share&lt;/code&gt; 命令中：</target>
        </trans-unit>
        <trans-unit id="cddc7c4f52c431decf1566832be308adcaa7007e" translate="yes" xml:space="preserve">
          <source>After running this command, add the &lt;code&gt;Laravel\Passport\HasApiTokens&lt;/code&gt; trait to your &lt;code&gt;App\User&lt;/code&gt; model. This trait will provide a few helper methods to your model which allow you to inspect the authenticated user's token and scopes:</source>
          <target state="translated">运行此命令后，将 &lt;code&gt;Laravel\Passport\HasApiTokens&lt;/code&gt; 特性添加到您的 &lt;code&gt;App\User&lt;/code&gt; 模型。此特征将为您的模型提供一些帮助方法，使您可以检查经过身份验证的用户的令牌和范围：</target>
        </trans-unit>
        <trans-unit id="df52d8ec7d1a8730422fb42b49b3bdb67b966161" translate="yes" xml:space="preserve">
          <source>After running this command, your cached routes file will be loaded on every request. Remember, if you add any new routes you will need to generate a fresh route cache. Because of this, you should only run the &lt;code&gt;route:cache&lt;/code&gt; command during your project's deployment.</source>
          <target state="translated">运行此命令后，缓存的路由文件将在每个请求中加载。请记住，如果添加任何新路由，则将需要生成新的路由缓存。因此，您仅应在项目部署期间运行 &lt;code&gt;route:cache&lt;/code&gt; 命令。</target>
        </trans-unit>
        <trans-unit id="0446f35b0948454063d7300996c356d95428719d" translate="yes" xml:space="preserve">
          <source>After the card has been verified by Stripe, you may pass the resulting &lt;code&gt;setupIntent.payment_method&lt;/code&gt; identifier to your Laravel application, where it can be attached to the customer. The payment method can either be &lt;a href=&quot;#adding-payment-methods&quot;&gt;added as a new payment method&lt;/a&gt; or &lt;a href=&quot;#updating-the-default-payment-method&quot;&gt;used to update the default payment method&lt;/a&gt;. You can also immediately use the payment method identifier to &lt;a href=&quot;#creating-subscriptions&quot;&gt;create a new subscription&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cd25c90aee59b958f5c7d6f739f2caffd9acb88" translate="yes" xml:space="preserve">
          <source>After the user has finished their checkout, a &lt;code&gt;subscription_created&lt;/code&gt; webhook will be dispatched from Paddle. Cashier will receive this webhook and setup the subscription for your customer. In order to make sure all webhooks are properly received and handled by your application, ensure you have properly &lt;a href=&quot;#handling-paddle-webhooks&quot;&gt;setup webhook handling&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="558256ec99522218519097358316f6785f11b748" translate="yes" xml:space="preserve">
          <source>After the user is redirected, you may display the flashed message from the &lt;a href=&quot;session&quot;&gt;session&lt;/a&gt;. For example, using &lt;a href=&quot;blade&quot;&gt;Blade syntax&lt;/a&gt;:</source>
          <target state="translated">重定向用户后，您可以显示&lt;a href=&quot;session&quot;&gt;会话中&lt;/a&gt;的闪烁消息。例如，使用&lt;a href=&quot;blade&quot;&gt;Blade语法&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="828f58932c9b493f2be4b7786f2f0cc407ba12c8" translate="yes" xml:space="preserve">
          <source>After the variable has been defined in your &lt;code&gt;.env&lt;/code&gt; file, you may access it via the &lt;code&gt;process.env&lt;/code&gt; object. If the value changes while you are running a &lt;code&gt;watch&lt;/code&gt; task, you will need to restart the task:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85f0e6de2ce0eaea28f22e3645777b82d053b5ad" translate="yes" xml:space="preserve">
          <source>After the variable has been defined in your &lt;code&gt;.env&lt;/code&gt; file, you may access via the &lt;code&gt;process.env&lt;/code&gt; object. If the value changes while you are running a &lt;code&gt;watch&lt;/code&gt; task, you will need to restart the task:</source>
          <target state="translated">在 &lt;code&gt;.env&lt;/code&gt; 文件中定义变量后，您可以通过 &lt;code&gt;process.env&lt;/code&gt; 对象进行访问。如果在运行 &lt;code&gt;watch&lt;/code&gt; 任务时该值发生更改，则需要重新启动任务：</target>
        </trans-unit>
        <trans-unit id="6023665aed7613db0fcd7a52a16aeb533a525e6c" translate="yes" xml:space="preserve">
          <source>After updating the &lt;code&gt;Homestead.yaml&lt;/code&gt;, be sure to re-provision the machine by running &lt;code&gt;vagrant reload --provision&lt;/code&gt;. This will update the PHP-FPM configuration for all of the installed PHP versions and also update the environment for the &lt;code&gt;vagrant&lt;/code&gt; user.</source>
          <target state="translated">更新 &lt;code&gt;Homestead.yaml&lt;/code&gt; 后，请确保通过运行 &lt;code&gt;vagrant reload --provision&lt;/code&gt; 重新配置计算机。这将为所有已安装的PHP版本更新PHP-FPM配置，并为 &lt;code&gt;vagrant&lt;/code&gt; 用户更新环境。</target>
        </trans-unit>
        <trans-unit id="8811d631d01f0fa6d9e85ddaec0ba352e0facf38" translate="yes" xml:space="preserve">
          <source>After updating the logic of a Blade directive, you will need to delete all of the cached Blade views. The cached Blade views may be removed using the &lt;code&gt;view:clear&lt;/code&gt; Artisan command.</source>
          <target state="translated">更新Blade指令的逻辑后，您将需要删除所有缓存的Blade视图。可以使用 &lt;code&gt;view:clear&lt;/code&gt; Artisan命令删除缓存的Blade视图。</target>
        </trans-unit>
        <trans-unit id="4c5c504b243380b2f8bb1bec6e9949524e990aa6" translate="yes" xml:space="preserve">
          <source>After upgrading, it may be necessary to re-park or re-link your sites.</source>
          <target state="translated">升级后,可能需要重新停放或重新链接您的网站。</target>
        </trans-unit>
        <trans-unit id="c3b815871876316d838b1e9e6c11f51aec78a850" translate="yes" xml:space="preserve">
          <source>After using the &lt;code&gt;loginAs&lt;/code&gt; method, the user session will be maintained for all tests within the file.</source>
          <target state="translated">使用 &lt;code&gt;loginAs&lt;/code&gt; 方法后，将为文件中的所有测试维护用户会话。</target>
        </trans-unit>
        <trans-unit id="73dce826b5aab638e2ea968fc647c5a48211b07f" translate="yes" xml:space="preserve">
          <source>After writing the subscriber, you are ready to register it with the event dispatcher. You may register subscribers using the &lt;code&gt;$subscribe&lt;/code&gt; property on the &lt;code&gt;EventServiceProvider&lt;/code&gt;. For example, let's add the &lt;code&gt;UserEventSubscriber&lt;/code&gt; to the list:</source>
          <target state="translated">写入订阅者之后，您就可以向事件分发者注册。您可以使用 &lt;code&gt;EventServiceProvider&lt;/code&gt; 的 &lt;code&gt;$subscribe&lt;/code&gt; 属性注册订户。例如，让我们将 &lt;code&gt;UserEventSubscriber&lt;/code&gt; 添加到列表中：</target>
        </trans-unit>
        <trans-unit id="7925753cd9becdbedccfa7bb027f4912160ab9b2" translate="yes" xml:space="preserve">
          <source>After you have created the Setup Intent and passed it to the view, you should attach its secret to the element that will gather the payment method. For example, consider this &quot;update payment method&quot; form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed3a0f136faeddca19fc05d209631bb4fa62f8fe" translate="yes" xml:space="preserve">
          <source>After you have registered the provider using the &lt;code&gt;provider&lt;/code&gt; method, you may switch to the new user provider in your &lt;code&gt;auth.php&lt;/code&gt; configuration file. First, define a &lt;code&gt;provider&lt;/code&gt; that uses your new driver:</source>
          <target state="translated">使用 &lt;code&gt;provider&lt;/code&gt; 方法注册提供程序后，可以在 &lt;code&gt;auth.php&lt;/code&gt; 配置文件中切换到新的用户提供程序。首先，定义一个使用新驱动程序的 &lt;code&gt;provider&lt;/code&gt; 程序：</target>
        </trans-unit>
        <trans-unit id="695feea4c76ed2ef4d323476c8a90fc1c030b83e" translate="yes" xml:space="preserve">
          <source>After you have updated the &lt;code&gt;aliases&lt;/code&gt; file, you should re-provision the Homestead machine using the &lt;code&gt;vagrant reload --provision&lt;/code&gt; command. This will ensure that your new aliases are available on the machine.</source>
          <target state="translated">更新 &lt;code&gt;aliases&lt;/code&gt; 文件后，应使用 &lt;code&gt;vagrant reload --provision&lt;/code&gt; 命令重新配置Homestead计算机。这将确保您的新别名在计算机上可用。</target>
        </trans-unit>
        <trans-unit id="f3888df1fd8563f6ec6730e2bfebd390230e2e53" translate="yes" xml:space="preserve">
          <source>Again, Laravel will generate all of the necessary views for password reset when the &lt;code&gt;make:auth&lt;/code&gt; command is executed. These views are placed in &lt;code&gt;resources/views/auth/passwords&lt;/code&gt;. You are free to customize them as needed for your application.</source>
          <target state="translated">同样，在执行 &lt;code&gt;make:auth&lt;/code&gt; 命令时，Laravel将生成所有必要的密码重置视图。这些视图放置在 &lt;code&gt;resources/views/auth/passwords&lt;/code&gt; 中。您可以根据需要为应用程序自定义它们。</target>
        </trans-unit>
        <trans-unit id="e0fee7896ec8637b5c1c7aaaf824d5a2a3f3a190" translate="yes" xml:space="preserve">
          <source>Again, if the given condition is &lt;code&gt;false&lt;/code&gt;, these attributes will be removed from the resource response entirely before it is sent to the client.</source>
          <target state="translated">同样，如果给定条件为 &lt;code&gt;false&lt;/code&gt; ，则将这些属性从资源响应中完全删除，然后再发送给客户端。</target>
        </trans-unit>
        <trans-unit id="e1d65872df8fc11bdda6c6daf158714da3809809" translate="yes" xml:space="preserve">
          <source>Again, like the &lt;code&gt;less&lt;/code&gt; method, you may compile multiple Sass files into their own respective CSS files and even customize the output directory of the resulting CSS:</source>
          <target state="translated">再次，与 &lt;code&gt;less&lt;/code&gt; 方法一样，您可以将多个Sass文件编译成各自的CSS文件，甚至可以自定义生成的CSS的输出目录：</target>
        </trans-unit>
        <trans-unit id="3f006f4da206afecb998191d8cfe01e7627cdeeb" translate="yes" xml:space="preserve">
          <source>Again, notice that we did not have to explicitly bind the error messages to the view in our &lt;code&gt;GET&lt;/code&gt; route. This is because Laravel will check for errors in the session data, and automatically bind them to the view if they are available. The &lt;code&gt;$errors&lt;/code&gt; variable will be an instance of &lt;code&gt;Illuminate\Support\MessageBag&lt;/code&gt;. For more information on working with this object, &lt;a href=&quot;#working-with-error-messages&quot;&gt;check out its documentation&lt;/a&gt;.</source>
          <target state="translated">同样，请注意，我们不必在 &lt;code&gt;GET&lt;/code&gt; 路由中将错误消息显式绑定到视图。这是因为Laravel将检查会话数据中的错误，并将错误自动绑定到视图（如果可用）。在 &lt;code&gt;$errors&lt;/code&gt; 变量将是实例 &lt;code&gt;Illuminate\Support\MessageBag&lt;/code&gt; 。有关使用此对象的更多信息，&lt;a href=&quot;#working-with-error-messages&quot;&gt;请查阅其文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="66e6f71d50d8cc674a3ae8ef4619051a5d73b7c1" translate="yes" xml:space="preserve">
          <source>Again, some actions like &lt;code&gt;create&lt;/code&gt; may not require a model instance. In these situations, you may pass a class name to the middleware. The class name will be used to determine which policy to use when authorizing the action:</source>
          <target state="translated">同样，某些操作（如 &lt;code&gt;create&lt;/code&gt; 可能不需要模型实例。在这些情况下，您可以将类名称传递给中间件。类名称将用于确定授权操作时要使用的策略：</target>
        </trans-unit>
        <trans-unit id="23cf218ba5f7b63866346824d2808f93f995077d" translate="yes" xml:space="preserve">
          <source>Age the flash data for the session.</source>
          <target state="translated">对该会话的闪存数据进行老化。</target>
        </trans-unit>
        <trans-unit id="4244013d1f8097832d5d59d8d0c67b37b9e71851" translate="yes" xml:space="preserve">
          <source>AggregateServiceProvider</source>
          <target state="translated">AggregateServiceProvider</target>
        </trans-unit>
        <trans-unit id="9fec6ac500de1bc9ae6f5b7513df52aec3923888" translate="yes" xml:space="preserve">
          <source>AggregateServiceProvider (Support)</source>
          <target state="translated">AggregateServiceProvider(支持)</target>
        </trans-unit>
        <trans-unit id="f9bce7008ac8227329b73f384c9a6c840d4eb8f9" translate="yes" xml:space="preserve">
          <source>AggregateServiceProvider::provides()</source>
          <target state="translated">AggregateServiceProvider::provides()</target>
        </trans-unit>
        <trans-unit id="b66267f84818f81cb50e1a05c05cc297d4616a26" translate="yes" xml:space="preserve">
          <source>AggregateServiceProvider::register()</source>
          <target state="translated">AggregateServiceProvider::register()</target>
        </trans-unit>
        <trans-unit id="deb507c2bab5b6df1dfb7a527622531bee5bbcae" translate="yes" xml:space="preserve">
          <source>Aggregates</source>
          <target state="translated">Aggregates</target>
        </trans-unit>
        <trans-unit id="a03c5cb69dcd55d29fdc2dfafeaabfc360dcbe87" translate="yes" xml:space="preserve">
          <source>Aggregating Related Models</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac9c0909d88fac617bcf8608f451efb94e03f631" translate="yes" xml:space="preserve">
          <source>Aggregating Related Models On Polymorphic Relationships</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0339b97ccad05f8d817e9eadcd1ad2ac024376be" translate="yes" xml:space="preserve">
          <source>Algolia</source>
          <target state="translated">Algolia</target>
        </trans-unit>
        <trans-unit id="52b998b7f08c7e91b51fc0e54a97353ce33706c5" translate="yes" xml:space="preserve">
          <source>Alias a type to a different name.</source>
          <target state="translated">将一个类型别名为不同的名称。</target>
        </trans-unit>
        <trans-unit id="2bdb5cddcb984ca0e1914b408f4d910bd3914eb6" translate="yes" xml:space="preserve">
          <source>Alias for self::timestamps().</source>
          <target state="translated">self::timestamps()的别名。</target>
        </trans-unit>
        <trans-unit id="14db1f5a90bd8746599570b29acc3ca9c4d71da4" translate="yes" xml:space="preserve">
          <source>Alias for the &quot;avg&quot; method.</source>
          <target state="translated">&quot;avg &quot;方法的别称。</target>
        </trans-unit>
        <trans-unit id="08621ed78a553773baf87e6d600f77e9f067caaa" translate="yes" xml:space="preserve">
          <source>Alias for the &quot;contains&quot; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5733a53b4cf6a5b4da6df5249f594ca10db32dd0" translate="yes" xml:space="preserve">
          <source>Alias for the &quot;currentRouteNamed&quot; method.</source>
          <target state="translated">currentRouteNamed &quot;方法的别称。</target>
        </trans-unit>
        <trans-unit id="15720665c1bf5a0790fe849fc758384f7e133f07" translate="yes" xml:space="preserve">
          <source>Alias for the &quot;currentRouteUses&quot; method.</source>
          <target state="translated">currentRouteUses &quot;方法的别称。</target>
        </trans-unit>
        <trans-unit id="c7db52fda6a4aeb52e942fe4e007b651fe9b3f85" translate="yes" xml:space="preserve">
          <source>Alias for the &lt;a href=&quot;#method-avg&quot;&gt;&lt;code&gt;avg&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;#method-avg&quot;&gt; &lt;code&gt;avg&lt;/code&gt; &lt;/a&gt;方法的别名。</target>
        </trans-unit>
        <trans-unit id="0cec41af5ec158796315c94bc22c2c24510aa230" translate="yes" xml:space="preserve">
          <source>Alias for the &lt;a href=&quot;#method-contains&quot;&gt;&lt;code&gt;contains&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="691e7a114e6bb78af0b3c6873f5461bae5edd217" translate="yes" xml:space="preserve">
          <source>Alias for the &lt;a href=&quot;#method-whenempty&quot;&gt;&lt;code&gt;whenEmpty&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cdd4b051ddfb41d3820abbe20cec9c4ce21d0e4" translate="yes" xml:space="preserve">
          <source>Alias for the &lt;a href=&quot;#method-whennotempty&quot;&gt;&lt;code&gt;whenNotEmpty&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c30c2f80a5fdf2bc8976d40619e546ffe82f6844" translate="yes" xml:space="preserve">
          <source>Alias of &quot;dissociate&quot; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73e06b31eb46c25f6466e86d6b5e2023281f09e3" translate="yes" xml:space="preserve">
          <source>Alias of &lt;code&gt;$table-&amp;gt;bigIncrements('id')&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b06652e41de2fe34c9c924eb3ade8f0ab273b204" translate="yes" xml:space="preserve">
          <source>Alias of &lt;code&gt;$table-&amp;gt;unsignedBigInteger('user_id')&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fda99fa2d95ed63a5cb8fe51c96ade8a695139d8" translate="yes" xml:space="preserve">
          <source>Alias of &lt;code&gt;dropSoftDeletes()&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;dropSoftDeletes()&lt;/code&gt; 方法的别名。</target>
        </trans-unit>
        <trans-unit id="4f66823c3ae69059c17afa8316ccadf750fa81af" translate="yes" xml:space="preserve">
          <source>Alias of &lt;code&gt;dropTimestamps()&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;dropTimestamps()&lt;/code&gt; 方法的别名。</target>
        </trans-unit>
        <trans-unit id="df5c3181912e4a6f962733c3b168f0b962ba8fc4" translate="yes" xml:space="preserve">
          <source>Alias of &lt;code&gt;timestamps()&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;timestamps()&lt;/code&gt; 方法的别名。</target>
        </trans-unit>
        <trans-unit id="39b187912b64af2d57b6b4dab6346b5d78a8436a" translate="yes" xml:space="preserve">
          <source>Alias to set the &quot;limit&quot; value of the query.</source>
          <target state="translated">设置查询的 &quot;限制 &quot;值的别名。</target>
        </trans-unit>
        <trans-unit id="35fad3b5d602564ef4e88186c91012976f3e4fc8" translate="yes" xml:space="preserve">
          <source>Alias to set the &quot;offset&quot; value of the query.</source>
          <target state="translated">设置查询的 &quot;偏移 &quot;值的别名。</target>
        </trans-unit>
        <trans-unit id="dd481ac9de7a273cecb99ad19380a77e7927a671" translate="yes" xml:space="preserve">
          <source>AliasLoader</source>
          <target state="translated">AliasLoader</target>
        </trans-unit>
        <trans-unit id="668134042ff2d3b79cd0e62ad1612af8d501ef12" translate="yes" xml:space="preserve">
          <source>AliasLoader (Foundation)</source>
          <target state="translated">AliasLoader (基金会)</target>
        </trans-unit>
        <trans-unit id="71cd382220a005449ec7de1bb9bad49f80ca5826" translate="yes" xml:space="preserve">
          <source>AliasLoader::alias()</source>
          <target state="translated">AliasLoader::alias()</target>
        </trans-unit>
        <trans-unit id="4adc118706184e3a1890b08dbea90a03c2cf37c8" translate="yes" xml:space="preserve">
          <source>AliasLoader::ensureFacadeExists()</source>
          <target state="translated">AliasLoader::ensureFacadeExists()</target>
        </trans-unit>
        <trans-unit id="0f717fdd74dce89c132182ebc148fc04800fa1b9" translate="yes" xml:space="preserve">
          <source>AliasLoader::formatFacadeStub()</source>
          <target state="translated">AliasLoader::formatFacadeStub()</target>
        </trans-unit>
        <trans-unit id="731537fe5b802bcb23125b0e12674d7c6d051691" translate="yes" xml:space="preserve">
          <source>AliasLoader::getAliases()</source>
          <target state="translated">AliasLoader::getAliases()</target>
        </trans-unit>
        <trans-unit id="012f814b33c8ebd4c41d1db8346089a4830eaafd" translate="yes" xml:space="preserve">
          <source>AliasLoader::getInstance()</source>
          <target state="translated">AliasLoader::getInstance()</target>
        </trans-unit>
        <trans-unit id="0e40052d54ca8f03b65094b3e59e79cb1a8b90ea" translate="yes" xml:space="preserve">
          <source>AliasLoader::isRegistered()</source>
          <target state="translated">AliasLoader::isRegistered()</target>
        </trans-unit>
        <trans-unit id="8d0d80a424b83338cc65067253281ce7f56b18d2" translate="yes" xml:space="preserve">
          <source>AliasLoader::load()</source>
          <target state="translated">AliasLoader::load()</target>
        </trans-unit>
        <trans-unit id="14318637f496d855e1b85394e23aba0fd79229f7" translate="yes" xml:space="preserve">
          <source>AliasLoader::loadFacade()</source>
          <target state="translated">AliasLoader::loadFacade()</target>
        </trans-unit>
        <trans-unit id="936f28540c68985e46fe2578b8132c8e0712bd4c" translate="yes" xml:space="preserve">
          <source>AliasLoader::prependToLoaderStack()</source>
          <target state="translated">AliasLoader::prependToLoaderStack()</target>
        </trans-unit>
        <trans-unit id="17f6d0ffb21dcfa09553a7284baa30b568d04dce" translate="yes" xml:space="preserve">
          <source>AliasLoader::register()</source>
          <target state="translated">AliasLoader::register()</target>
        </trans-unit>
        <trans-unit id="fb8b77d329792b82096c901f35e68a568aa9e71b" translate="yes" xml:space="preserve">
          <source>AliasLoader::setAliases()</source>
          <target state="translated">AliasLoader::setAliases()</target>
        </trans-unit>
        <trans-unit id="910a850d6623c86e26ea0eab18d629172155e989" translate="yes" xml:space="preserve">
          <source>AliasLoader::setFacadeNamespace()</source>
          <target state="translated">AliasLoader::setFacadeNamespace()</target>
        </trans-unit>
        <trans-unit id="8c97cf85a95f5747f125a5e72d004b1a1a87e011" translate="yes" xml:space="preserve">
          <source>AliasLoader::setInstance()</source>
          <target state="translated">AliasLoader::setInstance()</target>
        </trans-unit>
        <trans-unit id="ce13296ef8da5603ac2b97d6a2f0444187f8f2fc" translate="yes" xml:space="preserve">
          <source>AliasLoader::setRegistered()</source>
          <target state="translated">AliasLoader::setRegistered()</target>
        </trans-unit>
        <trans-unit id="6a8b49f23c0c2e66b347773e3a4bb453ff1fb91c" translate="yes" xml:space="preserve">
          <source>Aliases</source>
          <target state="translated">Aliases</target>
        </trans-unit>
        <trans-unit id="00de94ad58ba0a7b83cc2dba943bfabf2922e80b" translate="yes" xml:space="preserve">
          <source>Aliasing Components</source>
          <target state="translated">别名组件</target>
        </trans-unit>
        <trans-unit id="d902146140f922d3e8267146ef61362a62a1b419" translate="yes" xml:space="preserve">
          <source>Aliasing Includes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d626fdb0853a4376d69f8874e5023dd57b93c061" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Illuminate\Bus\Batch&lt;/code&gt; instances are JSON serializable, meaning you can return them directly from one of your application's routes to retrieve a JSON payload containing information about the batch, including its completion progress. To retrieve a batch by its ID, you may use the &lt;code&gt;Bus&lt;/code&gt; facade's &lt;code&gt;findBatch&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8edf6265be5d4087f95ba3f2909ffc6b1dd07d46" translate="yes" xml:space="preserve">
          <source>All Eloquent collections extend the base &lt;a href=&quot;collections&quot;&gt;Laravel collection&lt;/a&gt; object; therefore, they inherit all of the powerful methods provided by the base collection class:</source>
          <target state="translated">所有&lt;a href=&quot;collections&quot;&gt;Eloquent集合都&lt;/a&gt;扩展了基本的Laravel集合对象；因此，它们继承了基本集合类提供的所有强大方法：</target>
        </trans-unit>
        <trans-unit id="34258ddd8a990e70d1615af1251e20f0a1c1ab3b" translate="yes" xml:space="preserve">
          <source>All Eloquent collections extend the base &lt;a href=&quot;collections#available-methods&quot;&gt;Laravel collection&lt;/a&gt; object; therefore, they inherit all of the powerful methods provided by the base collection class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7213a7ac4111a64a6cd5d2a9737f1d3c87992d20" translate="yes" xml:space="preserve">
          <source>All Laravel applications include Tinker by default. However, you may install it manually if needed using Composer:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efb83e4f74c4e506cc122ddbf93f73ca5c608407" translate="yes" xml:space="preserve">
          <source>All Laravel applications include Tinker, a REPL powered by the &lt;a href=&quot;https://github.com/bobthecow/psysh&quot;&gt;PsySH&lt;/a&gt; package. Tinker allows you to interact with your entire Laravel application on the command line, including the Eloquent ORM, jobs, events, and more. To enter the Tinker environment, run the &lt;code&gt;tinker&lt;/code&gt; Artisan command:</source>
          <target state="translated">Laravel的所有应用程序都包括Tinker，这是由&lt;a href=&quot;https://github.com/bobthecow/psysh&quot;&gt;PsySH&lt;/a&gt;软件包提供支持的REPL 。Tinker允许您在命令行上与整个Laravel应用程序进行交互，包括Eloquent ORM，作业，事件等。要进入Tinker环境，请运行 &lt;code&gt;tinker&lt;/code&gt; Artisan命令：</target>
        </trans-unit>
        <trans-unit id="d0e325768007b71ac078cd7142fa14b0bcd3fe8b" translate="yes" xml:space="preserve">
          <source>All Laravel routes are defined in your route files, which are located in the &lt;code&gt;routes&lt;/code&gt; directory. These files are automatically loaded by the framework. The &lt;code&gt;routes/web.php&lt;/code&gt; file defines routes that are for your web interface. These routes are assigned the &lt;code&gt;web&lt;/code&gt; middleware group, which provides features like session state and CSRF protection. The routes in &lt;code&gt;routes/api.php&lt;/code&gt; are stateless and are assigned the &lt;code&gt;api&lt;/code&gt; middleware group.</source>
          <target state="translated">所有Laravel路由都在路由文件中定义，该文件位于 &lt;code&gt;routes&lt;/code&gt; 目录中。这些文件由框架自动加载。该 &lt;code&gt;routes/web.php&lt;/code&gt; 文件定义为您的Web接口路由。这些路由被分配了 &lt;code&gt;web&lt;/code&gt; 中间件组，该组提供了会话状态和CSRF保护等功能。 &lt;code&gt;routes/api.php&lt;/code&gt; 中的路由是无状态的，并分配了 &lt;code&gt;api&lt;/code&gt; 中间件组。</target>
        </trans-unit>
        <trans-unit id="7892092487a607887beec1e254354a43a7a8a163" translate="yes" xml:space="preserve">
          <source>All authorization callbacks receive the currently authenticated user as their first argument and any additional wildcard parameters as their subsequent arguments. In this example, we are using the &lt;code&gt;{orderId}&lt;/code&gt; placeholder to indicate that the &quot;ID&quot; portion of the channel name is a wildcard.</source>
          <target state="translated">所有授权回调都将当前经过身份验证的用户作为其第一个参数，并将任何其他通配符参数作为其后继参数。在此示例中，我们使用 &lt;code&gt;{orderId}&lt;/code&gt; 占位符表示频道名称的&amp;ldquo; ID&amp;rdquo;部分是通配符。</target>
        </trans-unit>
        <trans-unit id="c650cf89296885ef9c3280c4d6dbf738d8b2e90b" translate="yes" xml:space="preserve">
          <source>All broadcast notifications are queued for broadcasting. If you would like to configure the queue connection or queue name that is used to queue the broadcast operation, you may use the &lt;code&gt;onConnection&lt;/code&gt; and &lt;code&gt;onQueue&lt;/code&gt; methods of the &lt;code&gt;BroadcastMessage&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d4f26d611af0f1ede0f14133af0d975f177d4fd" translate="yes" xml:space="preserve">
          <source>All broadcast notifications are queued for broadcasting. If you would like to configure the queue connection or queue name that is used to the queue the broadcast operation, you may use the &lt;code&gt;onConnection&lt;/code&gt; and &lt;code&gt;onQueue&lt;/code&gt; methods of the &lt;code&gt;BroadcastMessage&lt;/code&gt;:</source>
          <target state="translated">所有广播通知都排队等待广播。如果您想配置用于广播操作队列的队列连接或队列名称，则可以使用 &lt;code&gt;BroadcastMessage&lt;/code&gt; 的 &lt;code&gt;onConnection&lt;/code&gt; 和 &lt;code&gt;onQueue&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="5a4ad481ae262e5c05c80272b34a3db86404321f" translate="yes" xml:space="preserve">
          <source>All collections also serve as iterators, allowing you to loop over them as if they were simple PHP arrays:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a042b6ea3404a01a67132f4fb0eaf2033f8a3d0" translate="yes" xml:space="preserve">
          <source>All cookies created by the Laravel framework are encrypted and signed with an authentication code, meaning they will be considered invalid if they have been changed by the client. To retrieve a cookie value from the request, use the &lt;code&gt;cookie&lt;/code&gt; method on a &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; instance:</source>
          <target state="translated">Laravel框架创建的所有cookie均已加密并使用身份验证代码签名，这意味着如果客户端更改了它们，它们将被视为无效。要从请求中检索cookie值，请在 &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; 实例上使用 &lt;code&gt;cookie&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="a3269d20ae4505ada02b0e1a1573aa3b97eca29e" translate="yes" xml:space="preserve">
          <source>All cookies created by the Laravel framework are encrypted and signed with an authentication code, meaning they will be considered invalid if they have been changed by the client. To retrieve a cookie value from the request, use the &lt;code&gt;cookie&lt;/code&gt; method on an &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; instance:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="515631feba859ab9bc717d8197854aefd10e25d4" translate="yes" xml:space="preserve">
          <source>All created response sequences.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dec0e0e598335a25f6fc4ee99a221f3d858642f0" translate="yes" xml:space="preserve">
          <source>All custom &quot;condition&quot; handlers.</source>
          <target state="translated">所有自定义的 &quot;条件 &quot;处理程序。</target>
        </trans-unit>
        <trans-unit id="c361ba7bb5cdaf813d5088cce575e698279f3265" translate="yes" xml:space="preserve">
          <source>All custom &quot;directive&quot; handlers.</source>
          <target state="translated">所有自定义的 &quot;指令 &quot;处理程序。</target>
        </trans-unit>
        <trans-unit id="a94d52094cf18b393b3c64956afc1c92eb723482" translate="yes" xml:space="preserve">
          <source>All databases except SQL Server require the columns in the second argument of the &lt;code&gt;upsert&lt;/code&gt; method to have a &quot;primary&quot; or &quot;unique&quot; index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb849ef120ffa64a2adc60d927e2571737c726e3" translate="yes" xml:space="preserve">
          <source>All exceptions are handled by the &lt;code&gt;App\Exceptions\Handler&lt;/code&gt; class. This class contains a &lt;code&gt;register&lt;/code&gt; method where you may register custom exception reporter and renderer callbacks. We'll examine each of these concepts in detail. Exception reporting is used to log exceptions or send them to an external service like &lt;a href=&quot;https://flareapp.io&quot;&gt;Flare&lt;/a&gt;, &lt;a href=&quot;https://bugsnag.com&quot;&gt;Bugsnag&lt;/a&gt; or &lt;a href=&quot;https://github.com/getsentry/sentry-laravel&quot;&gt;Sentry&lt;/a&gt;. By default, exceptions will be logged based on your &lt;a href=&quot;logging&quot;&gt;logging&lt;/a&gt; configuration. However, you are free to log exceptions however you wish.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fe9347cd5dda2a12d41cd83bb2a5d5efe7f0d7e" translate="yes" xml:space="preserve">
          <source>All exceptions are handled by the &lt;code&gt;App\Exceptions\Handler&lt;/code&gt; class. This class contains two methods: &lt;code&gt;report&lt;/code&gt; and &lt;code&gt;render&lt;/code&gt;. We'll examine each of these methods in detail. The &lt;code&gt;report&lt;/code&gt; method is used to log exceptions or send them to an external service like &lt;a href=&quot;https://bugsnag.com&quot;&gt;Bugsnag&lt;/a&gt; or &lt;a href=&quot;https://github.com/getsentry/sentry-laravel&quot;&gt;Sentry&lt;/a&gt;. By default, the &lt;code&gt;report&lt;/code&gt; method passes the exception to the base class where the exception is logged. However, you are free to log exceptions however you wish.</source>
          <target state="translated">所有异常均由 &lt;code&gt;App\Exceptions\Handler&lt;/code&gt; 类处理。此类包含两种方法： &lt;code&gt;report&lt;/code&gt; 和 &lt;code&gt;render&lt;/code&gt; 。我们将详细研究每种方法。该 &lt;code&gt;report&lt;/code&gt; 方法用于记录异常或发送给像一个外部服务&lt;a href=&quot;https://bugsnag.com&quot;&gt;Bugsnag&lt;/a&gt;或&lt;a href=&quot;https://github.com/getsentry/sentry-laravel&quot;&gt;哨兵&lt;/a&gt;。默认情况下， &lt;code&gt;report&lt;/code&gt; 方法将异常传递给记录异常的基类。但是，您可以随意记录异常。</target>
        </trans-unit>
        <trans-unit id="60df68fdf56fd9c734af290c1dd418d92afdc39c" translate="yes" xml:space="preserve">
          <source>All language files return an array of keyed strings. For example:</source>
          <target state="translated">所有语言文件都会返回一个带键的字符串数组。例如:</target>
        </trans-unit>
        <trans-unit id="8d1400fb976d72e35896f9e08193f25f08fbde53" translate="yes" xml:space="preserve">
          <source>All middleware are resolved via the &lt;a href=&quot;container&quot;&gt;service container&lt;/a&gt;, so you may type-hint any dependencies you need within a middleware's constructor.</source>
          <target state="translated">所有中间件都通过&lt;a href=&quot;container&quot;&gt;service容器&lt;/a&gt;解析，因此您可以在中间件的构造函数中键入所需的任何依赖项。</target>
        </trans-unit>
        <trans-unit id="d75a68a53f88642f7b72ceae093f1332d70b8797" translate="yes" xml:space="preserve">
          <source>All modifier keys are wrapped in &lt;code&gt;{}&lt;/code&gt; characters, and match the constants defined in the &lt;code&gt;Facebook\WebDriver\WebDriverKeys&lt;/code&gt; class, which can be &lt;a href=&quot;https://github.com/facebook/php-webdriver/blob/community/lib/WebDriverKeys.php&quot;&gt;found on GitHub&lt;/a&gt;.</source>
          <target state="translated">所有修饰键都用 &lt;code&gt;{}&lt;/code&gt; 字符包装，并与在 &lt;code&gt;Facebook\WebDriver\WebDriverKeys&lt;/code&gt; 类中定义的常量匹配，该类可以&lt;a href=&quot;https://github.com/facebook/php-webdriver/blob/community/lib/WebDriverKeys.php&quot;&gt;在GitHub上找到&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="75560d9f1e8cb558edbaa05619133f78f74dd631" translate="yes" xml:space="preserve">
          <source>All modifier keys are wrapped in &lt;code&gt;{}&lt;/code&gt; characters, and match the constants defined in the &lt;code&gt;Facebook\WebDriver\WebDriverKeys&lt;/code&gt; class, which can be &lt;a href=&quot;https://github.com/php-webdriver/php-webdriver/blob/master/lib/WebDriverKeys.php&quot;&gt;found on GitHub&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beff7a5cfadae9fa4eced023d357e96478d8ece8" translate="yes" xml:space="preserve">
          <source>All multi-result sets returned by Eloquent are instances of the &lt;code&gt;Illuminate\Database\Eloquent\Collection&lt;/code&gt; object, including results retrieved via the &lt;code&gt;get&lt;/code&gt; method or accessed via a relationship. The Eloquent collection object extends the Laravel &lt;a href=&quot;collections&quot;&gt;base collection&lt;/a&gt;, so it naturally inherits dozens of methods used to fluently work with the underlying array of Eloquent models.</source>
          <target state="translated">Eloquent返回的所有多结果集都是 &lt;code&gt;Illuminate\Database\Eloquent\Collection&lt;/code&gt; 对象的实例，包括通过 &lt;code&gt;get&lt;/code&gt; 方法检索或通过关系访问的结果。Eloquent集合对象扩展了Laravel &lt;a href=&quot;collections&quot;&gt;基础集合&lt;/a&gt;，因此它自然地继承了数十种方法，这些方法可以流畅地使用Eloquent 模型的基础数组。</target>
        </trans-unit>
        <trans-unit id="f60573668ce863a7dfc8ae6877e7729dc1c8d3ea" translate="yes" xml:space="preserve">
          <source>All of Laravel's facades are defined in the &lt;code&gt;Illuminate\Support\Facades&lt;/code&gt; namespace. So, we can easily access a facade like so:</source>
          <target state="translated">Laravel的所有外观都在 &lt;code&gt;Illuminate\Support\Facades&lt;/code&gt; 命名空间中定义。因此，我们可以像这样轻松访问外观：</target>
        </trans-unit>
        <trans-unit id="b25d7cc65871052a0df3debb0dbe97c852c30e19" translate="yes" xml:space="preserve">
          <source>All of a mailable class' configuration is done in the &lt;code&gt;build&lt;/code&gt; method. Within this method, you may call various methods such as &lt;code&gt;from&lt;/code&gt;, &lt;code&gt;subject&lt;/code&gt;, &lt;code&gt;view&lt;/code&gt;, and &lt;code&gt;attach&lt;/code&gt; to configure the email's presentation and delivery.</source>
          <target state="translated">所有可邮寄类的配置都在 &lt;code&gt;build&lt;/code&gt; 方法中完成。在这个方法中，你可以调用各种方法，如 &lt;code&gt;from&lt;/code&gt; ， &lt;code&gt;subject&lt;/code&gt; ， &lt;code&gt;view&lt;/code&gt; ，以及 &lt;code&gt;attach&lt;/code&gt; 到配置电子邮件的介绍和交付。</target>
        </trans-unit>
        <trans-unit id="b0a7823763abe2a6fa1221a4eec821adcf76232f" translate="yes" xml:space="preserve">
          <source>All of the &quot;catch&quot; callbacks for the queued closure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6b48fe7c80f812422357cf178e65afaa0e18c66" translate="yes" xml:space="preserve">
          <source>All of the JavaScript dependencies required by your application can be found in the &lt;code&gt;package.json&lt;/code&gt; file in the project's root directory. This file is similar to a &lt;code&gt;composer.json&lt;/code&gt; file except it specifies JavaScript dependencies instead of PHP dependencies. You can install these dependencies using the &lt;a href=&quot;https://www.npmjs.org&quot;&gt;Node package manager (NPM)&lt;/a&gt;:</source>
          <target state="translated">您的应用程序所需的所有JavaScript依赖关系都可以在项目根目录下的 &lt;code&gt;package.json&lt;/code&gt; 文件中找到。该文件类似于 &lt;code&gt;composer.json&lt;/code&gt; 文件，不同之处在于它指定JavaScript依赖性而不是PHP依赖性。您可以使用&lt;a href=&quot;https://www.npmjs.org&quot;&gt;节点包管理器（NPM）&lt;/a&gt;安装这些依赖项：</target>
        </trans-unit>
        <trans-unit id="d906e9255484fac30e0d9f2f755c68b8e9289afc" translate="yes" xml:space="preserve">
          <source>All of the Laravel contracts live in &lt;a href=&quot;https://github.com/illuminate/contracts&quot;&gt;their own GitHub repository&lt;/a&gt;. This provides a quick reference point for all available contracts, as well as a single, decoupled package that may be utilized by package developers.</source>
          <target state="translated">所有Laravel合同都存在于&lt;a href=&quot;https://github.com/illuminate/contracts&quot;&gt;自己的GitHub存储库中&lt;/a&gt;。这为所有可用合同以及包开发人员可以使用的单个解耦包提供了快速参考点。</target>
        </trans-unit>
        <trans-unit id="38f0214d512399ead6a8654a439cea039af73f47" translate="yes" xml:space="preserve">
          <source>All of the after resolving callbacks by class type.</source>
          <target state="translated">所有按类类型解析回调后。</target>
        </trans-unit>
        <trans-unit id="246e4842afd6f390110b5329f515e8ee38ea5b22" translate="yes" xml:space="preserve">
          <source>All of the attributes set on the container.</source>
          <target state="translated">容器上设置的所有属性。</target>
        </trans-unit>
        <trans-unit id="6ffb268b27f0325626506f2f502e2f8de1478446" translate="yes" xml:space="preserve">
          <source>All of the attributes set on the fluent instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce97daa945a12116f35cd84263137d74a9319110" translate="yes" xml:space="preserve">
          <source>All of the attributes that are not part of the component's constructor will automatically be added to the component's &quot;attribute bag&quot;. This attribute bag is automatically made available to the component via the &lt;code&gt;$attributes&lt;/code&gt; variable. All of the attributes may be rendered within the component by echoing this variable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d2253295936c1ef28c5f9d28eb5853c9961101b" translate="yes" xml:space="preserve">
          <source>All of the available clause operators.</source>
          <target state="translated">所有可用的条款运算符。</target>
        </trans-unit>
        <trans-unit id="3335eb120d37065d11c33817aff6cc1936d1d953" translate="yes" xml:space="preserve">
          <source>All of the available compiler functions.</source>
          <target state="translated">所有可用的编译器功能。</target>
        </trans-unit>
        <trans-unit id="44f1d265e5403fa8f7ef5309bb621ff391fa238b" translate="yes" xml:space="preserve">
          <source>All of the available pipelines.</source>
          <target state="translated">所有可用的管道。</target>
        </trans-unit>
        <trans-unit id="1718b30a46582ff9cd5ffd7ff00e4e1d5f6d69c9" translate="yes" xml:space="preserve">
          <source>All of the channels to send the notification to.</source>
          <target state="translated">所有要发送通知的渠道。</target>
        </trans-unit>
        <trans-unit id="ec960210cef60a397ef2348cb8f1f96c9a2812b0" translate="yes" xml:space="preserve">
          <source>All of the configuration files for the Laravel framework are stored in the &lt;code&gt;config&lt;/code&gt; directory. Each option is documented, so feel free to look through the files and get familiar with the options available to you.</source>
          <target state="translated">Laravel框架的所有配置文件都存储在 &lt;code&gt;config&lt;/code&gt; 目录中。每个选项都有文档记录，因此可以随时浏览文件并熟悉可用的选项。</target>
        </trans-unit>
        <trans-unit id="5f82bca30a07df1caad358baadc1a43c6cfe45fb" translate="yes" xml:space="preserve">
          <source>All of the configuration for your application's logging system is housed in the &lt;code&gt;config/logging.php&lt;/code&gt; configuration file. This file allows you to configure your application's log channels, so be sure to review each of the available channels and their options. Of course, we'll review a few common options below.</source>
          <target state="translated">应用程序的日志记录系统的所有配置都位于 &lt;code&gt;config/logging.php&lt;/code&gt; 配置文件中。该文件允许您配置应用程序的日志通道，因此请确保查看每个可用通道及其选项。当然，我们将在下面介绍一些常用选项。</target>
        </trans-unit>
        <trans-unit id="aff5965e4bf8c51dc379f323fd404b1257cca146" translate="yes" xml:space="preserve">
          <source>All of the configuration for your application's logging system is housed in the &lt;code&gt;config/logging.php&lt;/code&gt; configuration file. This file allows you to configure your application's log channels, so be sure to review each of the available channels and their options. We'll review a few common options below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9faf54d9ed4ba0d08dfb72c86708957f13bf4f8" translate="yes" xml:space="preserve">
          <source>All of the configuration items.</source>
          <target state="translated">所有的配置项目。</target>
        </trans-unit>
        <trans-unit id="b7710d9f4da0b119b2aa61ca0fe2a8ee3938e714" translate="yes" xml:space="preserve">
          <source>All of the converted files for the request.</source>
          <target state="translated">请求的所有转换文件。</target>
        </trans-unit>
        <trans-unit id="6dcc39d21bd770f6908e408acf268f476ae867ff" translate="yes" xml:space="preserve">
          <source>All of the cookies queued for sending.</source>
          <target state="translated">所有的饼干都在排队等待发送。</target>
        </trans-unit>
        <trans-unit id="75493eb13c54ca76d963e793dab4bb0ea11b3fa1" translate="yes" xml:space="preserve">
          <source>All of the custom dependent validator extensions.</source>
          <target state="translated">所有的自定义依赖验证器扩展。</target>
        </trans-unit>
        <trans-unit id="d3f7838904dd5b106fda84e6746bffc9cb13195e" translate="yes" xml:space="preserve">
          <source>All of the custom implicit validator extensions.</source>
          <target state="translated">所有的自定义隐式验证器扩展。</target>
        </trans-unit>
        <trans-unit id="bbcbd76fef96a6cb802f3727df30a69b396fe0c9" translate="yes" xml:space="preserve">
          <source>All of the custom replacer extensions.</source>
          <target state="translated">所有的自定义替换器扩展。</target>
        </trans-unit>
        <trans-unit id="5cadc7cb35f41147b566b5ffce986ee0627645e5" translate="yes" xml:space="preserve">
          <source>All of the custom validator extensions.</source>
          <target state="translated">所有的自定义验证器扩展。</target>
        </trans-unit>
        <trans-unit id="faf185eaf4bd63c44af687829ff161cca72d3675" translate="yes" xml:space="preserve">
          <source>All of the custom validator message replacers.</source>
          <target state="translated">所有的自定义验证器信息替换器。</target>
        </trans-unit>
        <trans-unit id="03928e328c95f68de8c592e8ad66c7a0849a53d3" translate="yes" xml:space="preserve">
          <source>All of the defined abilities using class@method notation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2195673679550f331e156e5ab4979a71312106ba" translate="yes" xml:space="preserve">
          <source>All of the defined abilities.</source>
          <target state="translated">所有定义的能力。</target>
        </trans-unit>
        <trans-unit id="8558217f84f151af03b01980d2eda2026b1005b7" translate="yes" xml:space="preserve">
          <source>All of the defined policies.</source>
          <target state="translated">所有规定的政策。</target>
        </trans-unit>
        <trans-unit id="757ff35636b6e55387e73c323bd9fe321443fe98" translate="yes" xml:space="preserve">
          <source>All of the dispatched jobs.</source>
          <target state="translated">所有派遣的工作。</target>
        </trans-unit>
        <trans-unit id="e9b877f0901578f930b3cdd5374c620dc9ebc1d0" translate="yes" xml:space="preserve">
          <source>All of the dispatched notifications.</source>
          <target state="translated">所有发送的通知。</target>
        </trans-unit>
        <trans-unit id="6d642d17bfc1b4680e60cf40d290596cf259b542" translate="yes" xml:space="preserve">
          <source>All of the events on the schedule.</source>
          <target state="translated">计划表上的所有活动。</target>
        </trans-unit>
        <trans-unit id="83798b1769528becbe070bb07496ab722cfdaac3" translate="yes" xml:space="preserve">
          <source>All of the events that have been intercepted keyed by type.</source>
          <target state="translated">所有被拦截的事件按类型键入。</target>
        </trans-unit>
        <trans-unit id="d147f59426f8e790709809af4b2c02e1dbcea4ae" translate="yes" xml:space="preserve">
          <source>All of the expected choice questions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e5d261d47d8b6774a39636e32fa106c6cbe1393" translate="yes" xml:space="preserve">
          <source>All of the expected ouput tables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="572d36820eddda07e15162e551018ea710048306" translate="yes" xml:space="preserve">
          <source>All of the expected output lines.</source>
          <target state="translated">所有预期的输出线。</target>
        </trans-unit>
        <trans-unit id="55f0fb82a55dd9a59417a2da63024631975f7f28" translate="yes" xml:space="preserve">
          <source>All of the expected questions.</source>
          <target state="translated">所有预期的问题。</target>
        </trans-unit>
        <trans-unit id="28c55daa474be30f43b2b43c0f4e0b5eed5cbc8d" translate="yes" xml:space="preserve">
          <source>All of the extensions to be added to the builder.</source>
          <target state="translated">所有的扩展都要添加到构建器中。</target>
        </trans-unit>
        <trans-unit id="a9e958cf2050e8a3531bf3372951eb98bf622689" translate="yes" xml:space="preserve">
          <source>All of the fallback messages for custom rules.</source>
          <target state="translated">自定义规则的所有后备信息。</target>
        </trans-unit>
        <trans-unit id="2084b6802f0d8ce3554b18b1d31e6e8d9ca35510" translate="yes" xml:space="preserve">
          <source>All of the finished, captured prepend sections.</source>
          <target state="translated">所有完成的,采集到的前缀部分。</target>
        </trans-unit>
        <trans-unit id="2a6dbf188be8dcf0285de1041c91e107e9d04e8c" translate="yes" xml:space="preserve">
          <source>All of the finished, captured push sections.</source>
          <target state="translated">所有的成品,捕捉到的推送部分。</target>
        </trans-unit>
        <trans-unit id="e0245490f22caa2eae25e11c6e319d70a1062a0f" translate="yes" xml:space="preserve">
          <source>All of the finished, captured sections.</source>
          <target state="translated">所有的成品,捕获的部分。</target>
        </trans-unit>
        <trans-unit id="83c56fa0ab0254d1f9f97ff3e3e37347c2f41d3e" translate="yes" xml:space="preserve">
          <source>All of the fired events.</source>
          <target state="translated">所有被解雇的事件。</target>
        </trans-unit>
        <trans-unit id="dfdeb0c1b34a32fa405818f5dce0e5b8dd5c5168" translate="yes" xml:space="preserve">
          <source>All of the fired model events.</source>
          <target state="translated">所有发射的模型事件。</target>
        </trans-unit>
        <trans-unit id="09f0844959ab4a8189f3711356f491f8a3df976f" translate="yes" xml:space="preserve">
          <source>All of the global after resolving callbacks.</source>
          <target state="translated">解决回调后的全局所有。</target>
        </trans-unit>
        <trans-unit id="33ccdbc668e0bd63c2b99bdbd2e0de17ef1f85e1" translate="yes" xml:space="preserve">
          <source>All of the global resolving callbacks.</source>
          <target state="translated">所有的全局解析回调。</target>
        </trans-unit>
        <trans-unit id="b50f4207f658780d952eddfdbd635e727874ad22" translate="yes" xml:space="preserve">
          <source>All of the globally registered builder macros.</source>
          <target state="translated">所有全球注册的建设者宏。</target>
        </trans-unit>
        <trans-unit id="73aa829e3e7018f937ad5d04cbed799631f38b29" translate="yes" xml:space="preserve">
          <source>All of the guards that were checked.</source>
          <target state="translated">所有被检查的警卫。</target>
        </trans-unit>
        <trans-unit id="039960822030aef4ec02da1026e1d7d81a14a135" translate="yes" xml:space="preserve">
          <source>All of the items being paginated.</source>
          <target state="translated">所有的项目正在分页。</target>
        </trans-unit>
        <trans-unit id="0ead721bfd56382ade154bcf6c450c750b536ba9" translate="yes" xml:space="preserve">
          <source>All of the jobs that have been pushed.</source>
          <target state="translated">所有的工作,都被推到了。</target>
        </trans-unit>
        <trans-unit id="d9669f6231b0c71be8c8d1efbe10357fe2109b01" translate="yes" xml:space="preserve">
          <source>All of the locally registered builder macros.</source>
          <target state="translated">所有本地注册的建造师宏。</target>
        </trans-unit>
        <trans-unit id="5701e9e20fcaf0d1d56c738d6a4f52753527f9f4" translate="yes" xml:space="preserve">
          <source>All of the mailables that have been queued.</source>
          <target state="translated">所有已经排队的可邮寄物品。</target>
        </trans-unit>
        <trans-unit id="ded305f74f2f50e7decdb5815b64e12807da9a98" translate="yes" xml:space="preserve">
          <source>All of the mailables that have been sent.</source>
          <target state="translated">所有已经发出的可邮。</target>
        </trans-unit>
        <trans-unit id="4f93c6584683ae9c18840ccaad9115db9f1c54cc" translate="yes" xml:space="preserve">
          <source>All of the middleware groups.</source>
          <target state="translated">所有的中间件组。</target>
        </trans-unit>
        <trans-unit id="666b72a8c15c7d8c1d761966b8d9a9964da9308c" translate="yes" xml:space="preserve">
          <source>All of the models keyed by ID.</source>
          <target state="translated">所有的车型都是通过ID键入的。</target>
        </trans-unit>
        <trans-unit id="893a185562455abb8edbcded419764710c552517" translate="yes" xml:space="preserve">
          <source>All of the namespace hints.</source>
          <target state="translated">所有的命名空间提示。</target>
        </trans-unit>
        <trans-unit id="f64d8cb5eab1203cd08241a0dfebe1225b24568a" translate="yes" xml:space="preserve">
          <source>All of the notification routing information.</source>
          <target state="translated">所有的通知路由信息。</target>
        </trans-unit>
        <trans-unit id="12ccc47ffa12851bd57534867256403204d1b217" translate="yes" xml:space="preserve">
          <source>All of the notifications that have been sent.</source>
          <target state="translated">所有已经发出的通知。</target>
        </trans-unit>
        <trans-unit id="908e6d7fc0596b1f6f573c7f1d3a551d16457d24" translate="yes" xml:space="preserve">
          <source>All of the output lines that aren't expected to be displayed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13656ad506ada189dfc779fed68e11038bd428e7" translate="yes" xml:space="preserve">
          <source>All of the ping methods require the Guzzle HTTP library. You can add Guzzle to your project using the Composer package manager:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="460bec8c745c44964da92898bb53a78c3b553440" translate="yes" xml:space="preserve">
          <source>All of the queries run against the connection.</source>
          <target state="translated">所有的查询都是针对连接运行的。</target>
        </trans-unit>
        <trans-unit id="4f1edcad1d759088c5b49acf96cdacba22c6c6dc" translate="yes" xml:space="preserve">
          <source>All of the registered &quot;after&quot; callbacks.</source>
          <target state="translated">所有注册的 &quot;之后 &quot;回调。</target>
        </trans-unit>
        <trans-unit id="41ef0163d14b1d3cace5f14ae79cbe27af284be6" translate="yes" xml:space="preserve">
          <source>All of the registered after callbacks.</source>
          <target state="translated">所有回调后注册的。</target>
        </trans-unit>
        <trans-unit id="9482ab9722e0a61fdc9dbc08725a85e37a6610ee" translate="yes" xml:space="preserve">
          <source>All of the registered before callbacks.</source>
          <target state="translated">所有回调前注册的。</target>
        </trans-unit>
        <trans-unit id="222949a2230c37efecb77bda2cc24308bbeb5702" translate="yes" xml:space="preserve">
          <source>All of the registered booted callbacks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af6340ca4054bbb2f7f395578b21a539537c0f7d" translate="yes" xml:space="preserve">
          <source>All of the registered booting callbacks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="868231060f269496d98b65b3e4370130473c1a52" translate="yes" xml:space="preserve">
          <source>All of the registered connections.</source>
          <target state="translated">所有的注册连接。</target>
        </trans-unit>
        <trans-unit id="47f9899eab24c912e113f7752badbc2348de565a" translate="yes" xml:space="preserve">
          <source>All of the registered extensions.</source>
          <target state="translated">所有已登记的分机。</target>
        </trans-unit>
        <trans-unit id="eeeb328166a0e6cf51f8335d986339bb82b6117c" translate="yes" xml:space="preserve">
          <source>All of the registered messages.</source>
          <target state="translated">所有登记的信息。</target>
        </trans-unit>
        <trans-unit id="f180b90b882517c566af75163f35f64fe51b2f7b" translate="yes" xml:space="preserve">
          <source>All of the registered paths to JSON translation files.</source>
          <target state="translated">JSON翻译文件的所有注册路径。</target>
        </trans-unit>
        <trans-unit id="3f54b0b109736caac8429cb5fe69caf7543777e1" translate="yes" xml:space="preserve">
          <source>All of the registered precompilers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8057f51fc69f81bbf1374471dab75ea4c783303e" translate="yes" xml:space="preserve">
          <source>All of the registered rebound callbacks.</source>
          <target state="translated">所有注册的回调。</target>
        </trans-unit>
        <trans-unit id="7d82c1694a0bb7c8a2ae8fc78d8ba5b2ccdf24ce" translate="yes" xml:space="preserve">
          <source>All of the registered service providers.</source>
          <target state="translated">所有注册服务提供者。</target>
        </trans-unit>
        <trans-unit id="d09c09e992a5a355dfcc82adba20c0238ff3997e" translate="yes" xml:space="preserve">
          <source>All of the registered tags.</source>
          <target state="translated">所有登记的标签。</target>
        </trans-unit>
        <trans-unit id="3c6081cc37bd87ec9fb3c1be775bc338d63c1238" translate="yes" xml:space="preserve">
          <source>All of the resolving callbacks by class type.</source>
          <target state="translated">所有的解析回调都是按照类的类型进行的。</target>
        </trans-unit>
        <trans-unit id="b3d0c281e3559ff2c0f25bb3b986e107c5a91f22" translate="yes" xml:space="preserve">
          <source>All of the short-hand keys for middlewares.</source>
          <target state="translated">中间件的所有快捷键。</target>
        </trans-unit>
        <trans-unit id="9dd0dd2a7a7bfc0aab667564f0e3b7090d0fec74" translate="yes" xml:space="preserve">
          <source>All of the translation messages.</source>
          <target state="translated">所有的翻译信息。</target>
        </trans-unit>
        <trans-unit id="3da9fb279e7b4585107634447c539c8a3275288f" translate="yes" xml:space="preserve">
          <source>All of the user's attributes.</source>
          <target state="translated">用户的所有属性。</target>
        </trans-unit>
        <trans-unit id="d282a0c6ff42ab4f253c16edb92369bb7a880cd2" translate="yes" xml:space="preserve">
          <source>All of the variables listed in this file will be loaded into the &lt;code&gt;$_ENV&lt;/code&gt; PHP super-global when your application receives a request. However, you may use the &lt;code&gt;env&lt;/code&gt; helper to retrieve values from these variables in your configuration files. In fact, if you review the Laravel configuration files, you will notice several of the options already using this helper:</source>
          <target state="translated">当您的应用程序收到请求时，此文件中列出的所有变量将被加载到 &lt;code&gt;$_ENV&lt;/code&gt; PHP超全局变量中。但是，您可以使用 &lt;code&gt;env&lt;/code&gt; 帮助程序从配置文件中的这些变量中检索值。实际上，如果您查看Laravel配置文件，您会注意到已经使用此帮助程序的几个选项：</target>
        </trans-unit>
        <trans-unit id="2ae8dbdc399e7407aff232e12a849f97d4581fd5" translate="yes" xml:space="preserve">
          <source>All of the verbs supported by the router.</source>
          <target state="translated">路由器支持的所有动词。</target>
        </trans-unit>
        <trans-unit id="b7efda1773eb740dce3db35b5d5503ad41f9d18b" translate="yes" xml:space="preserve">
          <source>All of your &quot;tap&quot; classes are resolved by the &lt;a href=&quot;container&quot;&gt;service container&lt;/a&gt;, so any constructor dependencies they require will automatically be injected.</source>
          <target state="translated">您的所有&amp;ldquo;轻敲&amp;rdquo;类都由&lt;a href=&quot;container&quot;&gt;服务容器&lt;/a&gt;解析，因此它们所需的任何构造函数依赖项都将自动注入。</target>
        </trans-unit>
        <trans-unit id="0bdd5e23c8b94b0f2c3e1026d936439f20e5a5d3" translate="yes" xml:space="preserve">
          <source>All of your Envoy tasks should be defined in an &lt;code&gt;Envoy.blade.php&lt;/code&gt; file in the root of your project. Here's an example to get you started:</source>
          <target state="translated">您的所有Envoy任务都应在项目根目录的 &lt;code&gt;Envoy.blade.php&lt;/code&gt; 文件中定义。这是一个入门的示例：</target>
        </trans-unit>
        <trans-unit id="e8b3631f570d35fddbf0737198bd72fe425f4d32" translate="yes" xml:space="preserve">
          <source>All of your application's event broadcasting configuration is stored in the &lt;code&gt;config/broadcasting.php&lt;/code&gt; configuration file. Laravel supports several broadcast drivers out of the box: &lt;a href=&quot;https://pusher.com&quot;&gt;Pusher&lt;/a&gt;, &lt;a href=&quot;redis&quot;&gt;Redis&lt;/a&gt;, and a &lt;code&gt;log&lt;/code&gt; driver for local development and debugging. Additionally, a &lt;code&gt;null&lt;/code&gt; driver is included which allows you to totally disable broadcasting. A configuration example is included for each of these drivers in the &lt;code&gt;config/broadcasting.php&lt;/code&gt; configuration file.</source>
          <target state="translated">您的应用程序的所有事件广播配置都存储在 &lt;code&gt;config/broadcasting.php&lt;/code&gt; 配置文件中。 Laravel开箱即用地支持多种广播驱动程序：&lt;a href=&quot;https://pusher.com&quot;&gt;Pusher&lt;/a&gt;，&lt;a href=&quot;redis&quot;&gt;Redis&lt;/a&gt;和用于本地开发和调试的 &lt;code&gt;log&lt;/code&gt; 驱动程序。此外，还包含一个 &lt;code&gt;null&lt;/code&gt; 驱动程序，使您可以完全禁用广播。 &lt;code&gt;config/broadcasting.php&lt;/code&gt; 配置文件中为每个这些驱动程序提供了一个配置示例。</target>
        </trans-unit>
        <trans-unit id="0aa09bd8b9af3486cbd9f7cf3718c48d2a6eca61" translate="yes" xml:space="preserve">
          <source>All of your application's event broadcasting configuration is stored in the &lt;code&gt;config/broadcasting.php&lt;/code&gt; configuration file. Laravel supports several broadcast drivers out of the box: &lt;a href=&quot;https://pusher.com/channels&quot;&gt;Pusher Channels&lt;/a&gt;, &lt;a href=&quot;redis&quot;&gt;Redis&lt;/a&gt;, and a &lt;code&gt;log&lt;/code&gt; driver for local development and debugging. Additionally, a &lt;code&gt;null&lt;/code&gt; driver is included which allows you to totally disable broadcasting. A configuration example is included for each of these drivers in the &lt;code&gt;config/broadcasting.php&lt;/code&gt; configuration file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f17d23dcf4ff52eb1222e0963a5f8f8033039fa6" translate="yes" xml:space="preserve">
          <source>All of your worker configuration is stored in a single, simple configuration file, allowing your configuration to stay in source control where your entire team can collaborate.</source>
          <target state="translated">您的所有工人配置都存储在一个简单的配置文件中,使您的配置保持在源控制中,您的整个团队可以协作。</target>
        </trans-unit>
        <trans-unit id="4f05e84f346fc22b871c89b85965f28353a42685" translate="yes" xml:space="preserve">
          <source>All policies are resolved via the Laravel &lt;a href=&quot;container&quot;&gt;service container&lt;/a&gt;, allowing you to type-hint any needed dependencies in the policy's constructor to have them automatically injected.</source>
          <target state="translated">所有策略都是通过Laravel &lt;a href=&quot;container&quot;&gt;服务容器&lt;/a&gt;解析的，允许您在策略的构造函数中键入提示所需的任何依赖项，以使其自动注入。</target>
        </trans-unit>
        <trans-unit id="60e6c2390bf80e7795b28a1dc5b9b652dc7bf0a1" translate="yes" xml:space="preserve">
          <source>All presence channels are also private channels; therefore, users must be &lt;a href=&quot;#authorizing-channels&quot;&gt;authorized to access them&lt;/a&gt;. However, when defining authorization callbacks for presence channels, you will not return &lt;code&gt;true&lt;/code&gt; if the user is authorized to join the channel. Instead, you should return an array of data about the user.</source>
          <target state="translated">所有状态通道也是私人通道；因此，必须&lt;a href=&quot;#authorizing-channels&quot;&gt;授权&lt;/a&gt;用户访问它们。但是，在为状态通道定义授权回调时，如果授权用户加入通道，则不会返回 &lt;code&gt;true&lt;/code&gt; 。相反，您应该返回有关用户的数据数组。</target>
        </trans-unit>
        <trans-unit id="973d494be4b73e3b5c6c4bcf586387aaae9e79d6" translate="yes" xml:space="preserve">
          <source>All recipients are stored internally as [['name' =&amp;gt; ?, 'address' =&amp;gt; ?]]</source>
          <target state="translated">所有收件人都在内部存储为[['name'=&amp;gt;？，'address'=&amp;gt;？]]</target>
        </trans-unit>
        <trans-unit id="46840c6c902ed1d3148287a2ffa92c90afd59541" translate="yes" xml:space="preserve">
          <source>All routes and controllers should return a response to be sent back to the user's browser. Laravel provides several different ways to return responses. The most basic response is returning a string from a route or controller. The framework will automatically convert the string into a full HTTP response:</source>
          <target state="translated">所有的路由和控制器都应该返回一个响应来发送给用户的浏览器.Laravel提供了几种不同的方式来返回响应.最基本的响应就是从路由或控制器返回一个字符串。框架会自动将该字符串转换为完整的HTTP响应。</target>
        </trans-unit>
        <trans-unit id="f98c598a37763b68582fa975eebfb766503341ed" translate="yes" xml:space="preserve">
          <source>All service providers are registered in the &lt;code&gt;config/app.php&lt;/code&gt; configuration file. This file contains a &lt;code&gt;providers&lt;/code&gt; array where you can list the class names of your service providers. By default, a set of Laravel core service providers are listed in this array. These providers bootstrap the core Laravel components, such as the mailer, queue, cache, and others.</source>
          <target state="translated">所有服务提供商都在 &lt;code&gt;config/app.php&lt;/code&gt; 配置文件中注册。该文件包含一个 &lt;code&gt;providers&lt;/code&gt; 数组，您可以在其中列出服务提供商的类名。默认情况下，此阵列中列出了一组Laravel核心服务提供程序。这些提供程序引导了Laravel的核心组件，例如邮件程序，队列，缓存和其他组件。</target>
        </trans-unit>
        <trans-unit id="70c56491c0a8307591b1114685a688bc4a071d46" translate="yes" xml:space="preserve">
          <source>All service providers extend the &lt;code&gt;Illuminate\Support\ServiceProvider&lt;/code&gt; class. Most service providers contain a &lt;code&gt;register&lt;/code&gt; and a &lt;code&gt;boot&lt;/code&gt; method. Within the &lt;code&gt;register&lt;/code&gt; method, you should &lt;strong&gt;only bind things into the &lt;a href=&quot;container&quot;&gt;service container&lt;/a&gt;&lt;/strong&gt;. You should never attempt to register any event listeners, routes, or any other piece of functionality within the &lt;code&gt;register&lt;/code&gt; method.</source>
          <target state="translated">所有服务提供商都扩展了 &lt;code&gt;Illuminate\Support\ServiceProvider&lt;/code&gt; 类。大多数服务提供商都包含一个 &lt;code&gt;register&lt;/code&gt; 和一个 &lt;code&gt;boot&lt;/code&gt; 方法。在 &lt;code&gt;register&lt;/code&gt; 方法中，您应该&lt;strong&gt;只将东西绑定到&lt;a href=&quot;container&quot;&gt;服务容器中&lt;/a&gt;&lt;/strong&gt;。您永远不要尝试在 &lt;code&gt;register&lt;/code&gt; 方法内注册任何事件侦听器，路由或任何其他功能。</target>
        </trans-unit>
        <trans-unit id="144721155b99875b1cafe381b3bbd341569499f1" translate="yes" xml:space="preserve">
          <source>All three methods receive the &lt;code&gt;$sitePath&lt;/code&gt;, &lt;code&gt;$siteName&lt;/code&gt;, and &lt;code&gt;$uri&lt;/code&gt; values as their arguments. The &lt;code&gt;$sitePath&lt;/code&gt; is the fully qualified path to the site being served on your machine, such as &lt;code&gt;/Users/Lisa/Sites/my-project&lt;/code&gt;. The &lt;code&gt;$siteName&lt;/code&gt; is the &quot;host&quot; / &quot;site name&quot; portion of the domain (&lt;code&gt;my-project&lt;/code&gt;). The &lt;code&gt;$uri&lt;/code&gt; is the incoming request URI (&lt;code&gt;/foo/bar&lt;/code&gt;).</source>
          <target state="translated">这三种方法都将 &lt;code&gt;$sitePath&lt;/code&gt; ， &lt;code&gt;$siteName&lt;/code&gt; 和 &lt;code&gt;$uri&lt;/code&gt; 值作为其参数。该 &lt;code&gt;$sitePath&lt;/code&gt; 是被服务你的机器上该网站的完全合格的路径，如 &lt;code&gt;/Users/Lisa/Sites/my-project&lt;/code&gt; 。在 &lt;code&gt;$siteName&lt;/code&gt; 是&amp;ldquo;主机&amp;rdquo; /&amp;ldquo;网站名称&amp;rdquo;域（的一部分 &lt;code&gt;my-project&lt;/code&gt; ）。的 &lt;code&gt;$uri&lt;/code&gt; 是传入的请求URI（ &lt;code&gt;/foo/bar&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="fbdeb5ee047c3c35b468105c7dfda08a045b724b" translate="yes" xml:space="preserve">
          <source>All user supplied arguments and options are wrapped in curly braces. In the following example, the command defines one &lt;strong&gt;required&lt;/strong&gt; argument: &lt;code&gt;user&lt;/code&gt;:</source>
          <target state="translated">用户提供的所有参数和选项都用花括号括起来。在以下示例中，该命令定义了一个&lt;strong&gt;必需的&lt;/strong&gt;参数： &lt;code&gt;user&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="4fd1aa5772e245682024b12f5b65aaee6bd5fdac" translate="yes" xml:space="preserve">
          <source>All variables in your &lt;code&gt;.env&lt;/code&gt; files are parsed as strings, so some reserved values have been created to allow you to return a wider range of types from the &lt;code&gt;env()&lt;/code&gt; function:</source>
          <target state="translated">&lt;code&gt;.env&lt;/code&gt; 文件中的所有变量都被解析为字符串，因此已创建了一些保留值，以使您可以从 &lt;code&gt;env()&lt;/code&gt; 函数返回更广泛的类型：</target>
        </trans-unit>
        <trans-unit id="b61e5ba362675c630bd94edec4dce99ee78570f3" translate="yes" xml:space="preserve">
          <source>All view composers are resolved via the &lt;a href=&quot;container&quot;&gt;service container&lt;/a&gt;, so you may type-hint any dependencies you need within a composer's constructor.</source>
          <target state="translated">所有视图作曲者都是通过&lt;a href=&quot;container&quot;&gt;service容器&lt;/a&gt;解析的，因此您可以键入提示以了解在作曲者的构造函数中所需的任何依赖项。</target>
        </trans-unit>
        <trans-unit id="0e9abc59c2890a5e67d6e45c466ef3c63c185484" translate="yes" xml:space="preserve">
          <source>Allow NULL values to be inserted into the column</source>
          <target state="translated">允许在列中插入NULL值。</target>
        </trans-unit>
        <trans-unit id="db7a41f432d7c4dad0ab3e5bb5a24f2647754f63" translate="yes" xml:space="preserve">
          <source>Allow the event to only run on one server for each cron expression.</source>
          <target state="translated">允许每个cron表达式的事件只在一台服务器上运行。</target>
        </trans-unit>
        <trans-unit id="b7c8e8360051a1496c4166bdfa2011f1eae7d201" translate="yes" xml:space="preserve">
          <source>Allowing Failures</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb682c565ebbcea89e65b465b408aa2d24a41bd4" translate="yes" xml:space="preserve">
          <source>Allowing Mass Assignment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5b30a398f0095dac07bbd0378bfcc954c71c5b2" translate="yes" xml:space="preserve">
          <source>Allows (by default) NULL values to be inserted into the column</source>
          <target state="translated">允许(默认情况下)在列中插入NULL值。</target>
        </trans-unit>
        <trans-unit id="1599dcb408fe056c9bb243b60c64c92b5be8c8e4" translate="yes" xml:space="preserve">
          <source>Allows us to not spin through all of the flattened data for some operations.</source>
          <target state="translated">允许我们不对某些操作的所有扁平化数据进行旋转。</target>
        </trans-unit>
        <trans-unit id="6cb11ca53c6dbb961b210d1ceb23b3834ff604fe" translate="yes" xml:space="preserve">
          <source>Almost all methods available on the &lt;code&gt;Collection&lt;/code&gt; class are also available on the &lt;code&gt;LazyCollection&lt;/code&gt; class. Both of these classes implement the &lt;code&gt;Illuminate\Support\Enumerable&lt;/code&gt; contract, which defines the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ca2d7622c1545ad714bb22c233de2506ceea705" translate="yes" xml:space="preserve">
          <source>Almost all of your service container bindings will be registered within &lt;a href=&quot;providers&quot;&gt;service providers&lt;/a&gt;, so most of these examples will demonstrate using the container in that context.</source>
          <target state="translated">几乎所有服务容器绑定都将在&lt;a href=&quot;providers&quot;&gt;服务提供者中&lt;/a&gt;注册，因此这些示例中的大多数将在该上下文中演示如何使用容器。</target>
        </trans-unit>
        <trans-unit id="991fc8d49f2f33cc7f2a96083ae57acf33c01905" translate="yes" xml:space="preserve">
          <source>Alphabetically sorts the imports for the given stub.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02d4089dc6f064f1bec0bbca279328f273dabe78" translate="yes" xml:space="preserve">
          <source>Also, you should verify that your &lt;code&gt;users&lt;/code&gt; (or equivalent) table contains a nullable, string &lt;code&gt;remember_token&lt;/code&gt; column of 100 characters. This column will be used to store a token for users that select the &quot;remember me&quot; option when logging into your application.</source>
          <target state="translated">另外，您应该验证您的 &lt;code&gt;users&lt;/code&gt; （或等效表）表是否包含可为空的100个字符的字符串 &lt;code&gt;remember_token&lt;/code&gt; 列。此列将用于为登录到应用程序时选择&amp;ldquo;记住我&amp;rdquo;选项的用户存储令牌。</target>
        </trans-unit>
        <trans-unit id="2b2238343f466dd85ca108ccfebc94e9a7388c06" translate="yes" xml:space="preserve">
          <source>Alternatively, and importantly, you may &quot;type-hint&quot; the dependency in the constructor of a class that is resolved by the container, including &lt;a href=&quot;controllers&quot;&gt;controllers&lt;/a&gt;, &lt;a href=&quot;events&quot;&gt;event listeners&lt;/a&gt;, &lt;a href=&quot;middleware&quot;&gt;middleware&lt;/a&gt;, and more. Additionally, you may type-hint dependencies in the &lt;code&gt;handle&lt;/code&gt; method of &lt;a href=&quot;queues&quot;&gt;queued jobs&lt;/a&gt;. In practice, this is how most of your objects should be resolved by the container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dff1638715a6079aa7f75844f3daeccc27f41ffd" translate="yes" xml:space="preserve">
          <source>Alternatively, and importantly, you may &quot;type-hint&quot; the dependency in the constructor of a class that is resolved by the container, including &lt;a href=&quot;controllers&quot;&gt;controllers&lt;/a&gt;, &lt;a href=&quot;events&quot;&gt;event listeners&lt;/a&gt;, &lt;a href=&quot;queues&quot;&gt;queue jobs&lt;/a&gt;, &lt;a href=&quot;middleware&quot;&gt;middleware&lt;/a&gt;, and more. In practice, this is how most of your objects should be resolved by the container.</source>
          <target state="translated">另外，重要的是，您可以&amp;ldquo;暗示&amp;rdquo;由容器解析的类的构造函数中的依赖关系，包括&lt;a href=&quot;controllers&quot;&gt;控制器&lt;/a&gt;，&lt;a href=&quot;events&quot;&gt;事件侦听器&lt;/a&gt;，&lt;a href=&quot;queues&quot;&gt;队列作业&lt;/a&gt;，&lt;a href=&quot;middleware&quot;&gt;中间件&lt;/a&gt;等。实际上，这就是容器应解决的大多数对象的方式。</target>
        </trans-unit>
        <trans-unit id="10c92977e402194e62ac6c1ed177bd4d674439d8" translate="yes" xml:space="preserve">
          <source>Alternatively, if your event uses the &lt;code&gt;Illuminate\Foundation\Events\Dispatchable&lt;/code&gt; trait, you may call the static &lt;code&gt;dispatch&lt;/code&gt; method on the event. Any arguments passed to the &lt;code&gt;dispatch&lt;/code&gt; method will be passed to the event's constructor:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10cec565d315abaf93bd80edfa3a30286455314d" translate="yes" xml:space="preserve">
          <source>Alternatively, once a user is authenticated, you may access the authenticated user via an &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; instance. Remember, type-hinted classes will automatically be injected into your controller methods. By type-hinting the &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; object, you may gain convenient access to the authenticated user from any controller method in your application:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="385c44f632b887fa4155d758cc13e1dae44f7282" translate="yes" xml:space="preserve">
          <source>Alternatively, once a user is authenticated, you may access the authenticated user via an &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; instance. Remember, type-hinted classes will automatically be injected into your controller methods:</source>
          <target state="translated">或者，一旦用户通过身份验证，您就可以通过 &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; 实例访问经过身份验证的用户。请记住，类型提示类将自动注入到您的控制器方法中：</target>
        </trans-unit>
        <trans-unit id="112de5b6e2326d0acc431cd31dd6a0fb3a41cc91" translate="yes" xml:space="preserve">
          <source>Alternatively, the &lt;code&gt;dispatchAfterResponse&lt;/code&gt; method delays dispatching a job until after the response is sent to the user's browser. This will still allow the user to begin using the application even though a queued job is still executing. This should typically only be used for jobs that take about a second, such as sending an email:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5db973dcac418a9d5a059917f1aa1fda19111d6a" translate="yes" xml:space="preserve">
          <source>Alternatively, the &lt;code&gt;state&lt;/code&gt; method may be called directly on the factory instance to perform an inline state transformation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee78caccfd9859bed0cff6f111fcb97d50b6c42c" translate="yes" xml:space="preserve">
          <source>Alternatively, validation rules may be specified as arrays of rules instead of a single &lt;code&gt;|&lt;/code&gt; delimited string:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93aca4329c747b4775416348b3011a1dd96f7ea3" translate="yes" xml:space="preserve">
          <source>Alternatively, you can install the &lt;code&gt;predis/predis&lt;/code&gt; package via Composer:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ff74dc53279c0d697f0213e4413657541f300bc" translate="yes" xml:space="preserve">
          <source>Alternatively, you can perform more precise customization by catching the &lt;a href=&quot;https://developer.paddle.com/webhook-reference/subscription-alerts/subscription-payment-failed&quot;&gt;&lt;code&gt;subscription_payment_failed&lt;/code&gt;&lt;/a&gt; webhook and enabling the &quot;Subscription Payment Failed&quot; option in the Webhook settings of your Paddle dashboard:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="399366b6862792012b3820ae860c21facab710b7" translate="yes" xml:space="preserve">
          <source>Alternatively, you can use the &lt;code&gt;Cookie&lt;/code&gt; facade to &quot;queue&quot; cookies for attachment to the outgoing response from your application. The &lt;code&gt;queue&lt;/code&gt; method accepts a &lt;code&gt;Cookie&lt;/code&gt; instance or the arguments needed to create a &lt;code&gt;Cookie&lt;/code&gt; instance. These cookies will be attached to the outgoing response before it is sent to the browser:</source>
          <target state="translated">另外，您可以使用 &lt;code&gt;Cookie&lt;/code&gt; 外观来&amp;ldquo;排队&amp;rdquo; cookie，以附加到应用程序的传出响应。该 &lt;code&gt;queue&lt;/code&gt; 方法接受 &lt;code&gt;Cookie&lt;/code&gt; 实例或以创建所需要的参数 &lt;code&gt;Cookie&lt;/code&gt; 实例。这些Cookie将在发送到浏览器之前附加到传出响应中：</target>
        </trans-unit>
        <trans-unit id="cadb9181ffcf890de9162fc567724cbabc4990fa" translate="yes" xml:space="preserve">
          <source>Alternatively, you could allow Stripe to handle the payment confirmation for you. In this case, instead of redirecting to the payment confirmation page, you may &lt;a href=&quot;https://dashboard.stripe.com/account/billing/automatic&quot;&gt;setup Stripe's automatic billing emails&lt;/a&gt; in your Stripe dashboard. However, if an &lt;code&gt;IncompletePayment&lt;/code&gt; exception is caught, you should still inform the user they will receive an email with further payment confirmation instructions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="474627fffff69c73454753a0f135c9162ff6616c" translate="yes" xml:space="preserve">
          <source>Alternatively, you may add a new plan to an existing subscription at a later time:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5107437bf312d178f9d2427508cde38ef26a4371" translate="yes" xml:space="preserve">
          <source>Alternatively, you may also install Laravel by issuing the Composer &lt;code&gt;create-project&lt;/code&gt; command in your terminal:</source>
          <target state="translated">另外，您也可以通过在终端中发出Composer &lt;code&gt;create-project&lt;/code&gt; 命令来安装Laravel ：</target>
        </trans-unit>
        <trans-unit id="c86d2c2ca7cf4d3c2aa9eb73d24cab765a1310e2" translate="yes" xml:space="preserve">
          <source>Alternatively, you may also pass commands to the server using the &lt;code&gt;command&lt;/code&gt; method, which accepts the name of the command as its first argument, and an array of values as its second argument:</source>
          <target state="translated">或者，您也可以使用 &lt;code&gt;command&lt;/code&gt; 方法将命令传递到服务器，该方法接受命令名称作为其第一个参数，并使用值的数组作为其第二个参数：</target>
        </trans-unit>
        <trans-unit id="b0bf97a124eca0c71bc8598cf6a3a98102b8c515" translate="yes" xml:space="preserve">
          <source>Alternatively, you may assign the &lt;code&gt;Illuminate\Routing\Middleware\ValidateSignature&lt;/code&gt; middleware to the route. If it is not already present, you should assign this middleware a key in your HTTP kernel's &lt;code&gt;routeMiddleware&lt;/code&gt; array:</source>
          <target state="translated">或者，您可以将 &lt;code&gt;Illuminate\Routing\Middleware\ValidateSignature&lt;/code&gt; 中间件分配给该路由。如果尚不存在，则应在HTTP内核的 &lt;code&gt;routeMiddleware&lt;/code&gt; 数组中为该中间件分配密钥：</target>
        </trans-unit>
        <trans-unit id="b363fc7d5bd015a2996f1908290511b6a62a27e8" translate="yes" xml:space="preserve">
          <source>Alternatively, you may attach the expired cookie to a response instance:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b56184c981b0f18d05b1c942c3dc9a2dd6ceacfc" translate="yes" xml:space="preserve">
          <source>Alternatively, you may cast a model or collection to a string, which will automatically call the &lt;code&gt;toJson&lt;/code&gt; method on the model or collection:</source>
          <target state="translated">或者，您可以将模型或集合转换为字符串，这将自动在模型或集合上调用 &lt;code&gt;toJson&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="ae425dbeaf6954eccb8aa2908359b543e8a80c0c" translate="yes" xml:space="preserve">
          <source>Alternatively, you may create the index after defining the column. For example:</source>
          <target state="translated">另外,你也可以在定义列后创建索引。例如:在定义了列之后,可以创建索引。</target>
        </trans-unit>
        <trans-unit id="60fd3d083beb1aad7cd03aa439de0be2380b6e35" translate="yes" xml:space="preserve">
          <source>Alternatively, you may customize the widget with custom options instead of using a pay link:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f3615b9d0fdbce0f5a4b83970ba3c360ef4a005" translate="yes" xml:space="preserve">
          <source>Alternatively, you may define a &lt;code&gt;withResponse&lt;/code&gt; method within the resource itself. This method will be called when the resource is returned as the outer-most resource in a response:</source>
          <target state="translated">或者，您可以在资源本身内定义 &lt;code&gt;withResponse&lt;/code&gt; 方法。当资源作为响应中的最外层资源返回时，将调用此方法：</target>
        </trans-unit>
        <trans-unit id="d2bf054bc29ebe4cbb759bae946d445358025dbf" translate="yes" xml:space="preserve">
          <source>Alternatively, you may define a &lt;code&gt;withResponse&lt;/code&gt; method within the resource itself. This method will be called when the resource is returned as the outermost resource in a response:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22ceab564756d96b2a7619690dd7c740e54e4611" translate="yes" xml:space="preserve">
          <source>Alternatively, you may enable the &lt;code&gt;innodb_large_prefix&lt;/code&gt; option for your database. Refer to your database's documentation for instructions on how to properly enable this option.</source>
          <target state="translated">或者，您可以为数据库启用 &lt;code&gt;innodb_large_prefix&lt;/code&gt; 选项。有关如何正确启用此选项的说明，请参考数据库的文档。</target>
        </trans-unit>
        <trans-unit id="c778675ca1b8cca42d8296d75a1feaaa9287539d" translate="yes" xml:space="preserve">
          <source>Alternatively, you may install the &lt;a href=&quot;https://github.com/phpredis/phpredis&quot;&gt;PhpRedis&lt;/a&gt; PHP extension via PECL. The extension is more complex to install but may yield better performance for applications that make heavy use of Redis.</source>
          <target state="translated">或者，您可以通过PECL 安装&lt;a href=&quot;https://github.com/phpredis/phpredis&quot;&gt;PhpRedis&lt;/a&gt; PHP扩展。该扩展的安装更加复杂，但对于大量使用Redis的应用程序可能会产生更好的性能。</target>
        </trans-unit>
        <trans-unit id="425860ce6ce7cbba6bc23c3778e2333248cae585" translate="yes" xml:space="preserve">
          <source>Alternatively, you may instruct the &lt;code&gt;RefreshDatabase&lt;/code&gt; trait to automatically seed the database before each test. You may accomplish this by defining a &lt;code&gt;$seed&lt;/code&gt; property on your test class:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="579a780afade47624bd5a1e572f2ed2fdd4ff139" translate="yes" xml:space="preserve">
          <source>Alternatively, you may override the &lt;code&gt;resolveRouteBinding&lt;/code&gt; method on your Eloquent model. This method will receive the value of the URI segment and should return the instance of the class that should be injected into the route:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="650e545c85ee2e6d7667a98ff1411c8282885335" translate="yes" xml:space="preserve">
          <source>Alternatively, you may pass a Closure as the second argument to the &lt;code&gt;anticipate&lt;/code&gt; method. The Closure will be called each time the user types an input character. The Closure should accept a string parameter containing the user's input so far, and return an array of options for auto-completion:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dff155b3b81a88eb098db0d33d42dbdf558a3d0" translate="yes" xml:space="preserve">
          <source>Alternatively, you may pass an array containing the column name that holds the foreign key to the &lt;code&gt;dropForeign&lt;/code&gt; method. The array will be automatically converted using the constraint name convention used by Laravel's schema builder:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d6b9c5d39faf4f37add29f9561d85c1727ba67b" translate="yes" xml:space="preserve">
          <source>Alternatively, you may pass an array to the &lt;code&gt;fake&lt;/code&gt; method. The array's keys should represent URL patterns that you wish to fake and their associated responses. The &lt;code&gt;*&lt;/code&gt; character may be used as a wildcard character. Any requests made to URLs that have not been faked will actually be executed. You may use the &lt;code&gt;response&lt;/code&gt; method to construct stub / fake responses for these endpoints:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bab05d65977c1276fa97de0f50ecf3b377ef43b3" translate="yes" xml:space="preserve">
          <source>Alternatively, you may pass in your own callback to search for the first item that passes your truth test:</source>
          <target state="translated">另外,你也可以通过自己的回调来搜索第一个通过真理测试的项目。</target>
        </trans-unit>
        <trans-unit id="200c342bb80cceb9d4ac395102fa2c6c98f05044" translate="yes" xml:space="preserve">
          <source>Alternatively, you may pass the entire Artisan command to the &lt;code&gt;call&lt;/code&gt; method as a string:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d20228f527defe539385128c57cdc2a6129df03" translate="yes" xml:space="preserve">
          <source>Alternatively, you may pass your own callback to determine how to sort the collection's values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6e1514a10da09471b90d833719ce6137fdd2541" translate="yes" xml:space="preserve">
          <source>Alternatively, you may prefix event classes with a &lt;code&gt;.&lt;/code&gt; when subscribing to them using Echo. This will allow you to always specify the fully-qualified class name:</source>
          <target state="translated">另外，您可以在事件类的前面加上 &lt;code&gt;.&lt;/code&gt; 使用Echo订阅时。这将使您始终可以指定标准的类名称：</target>
        </trans-unit>
        <trans-unit id="457361a52aefdb56124606a917b8d3a3c2868d02" translate="yes" xml:space="preserve">
          <source>Alternatively, you may run the &lt;code&gt;queue:listen&lt;/code&gt; command. When using the &lt;code&gt;queue:listen&lt;/code&gt; command, you don't have to manually restart the worker when you want to reload your updated code or reset the application state; however, this command is not as efficient as &lt;code&gt;queue:work&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e0dd005f758240b43fb7e124519fc49587ebb22" translate="yes" xml:space="preserve">
          <source>Alternatively, you may send notifications via the &lt;code&gt;Notification&lt;/code&gt;&lt;a href=&quot;facades&quot;&gt;facade&lt;/a&gt;. This is useful primarily when you need to send a notification to multiple notifiable entities such as a collection of users. To send notifications using the facade, pass all of the notifiable entities and the notification instance to the &lt;code&gt;send&lt;/code&gt; method:</source>
          <target state="translated">或者，您可以通过 &lt;code&gt;Notification&lt;/code&gt; &lt;a href=&quot;facades&quot;&gt;Facade&lt;/a&gt;发送通知。这主要在您需要将通知发送给多个可通知实体（例如用户集合）时有用。要使用外观发送通知，请将所有可通知实体和通知实例传递给 &lt;code&gt;send&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="bc159f8450f3b99b769c8fd05a9bbf864a31d7c1" translate="yes" xml:space="preserve">
          <source>Alternatively, you may set a specific quantity using the &lt;code&gt;updateQuantity&lt;/code&gt; method:</source>
          <target state="translated">或者，您可以使用 &lt;code&gt;updateQuantity&lt;/code&gt; 方法设置特定数量：</target>
        </trans-unit>
        <trans-unit id="2ef0bdd4b4c2c42d2e8aec1edb91a533f0f73f49" translate="yes" xml:space="preserve">
          <source>Alternatively, you may specify the maximum number of workers that may simultaneously process a given job. This can be helpful when a queued job is modifying a resource that should only be modified by one job at a time. For example, using the &lt;code&gt;funnel&lt;/code&gt; method, you may limit jobs of a given type to only be processed by one worker at a time:</source>
          <target state="translated">或者，您可以指定可以同时处理给定作业的最大工人数。当排队的作业正在修改一次只能由一个作业修改的资源时，这将很有帮助。例如，使用 &lt;code&gt;funnel&lt;/code&gt; 方法，您可以将给定类型的作业限制为一次只能由一名工人处理：</target>
        </trans-unit>
        <trans-unit id="e70594165705261fd3fe695847256cefa4e09e38" translate="yes" xml:space="preserve">
          <source>Alternatively, you may use the &lt;code&gt;Cookie&lt;/code&gt; facade to access cookie values:</source>
          <target state="translated">或者，您可以使用 &lt;code&gt;Cookie&lt;/code&gt; 外观来访问Cookie值：</target>
        </trans-unit>
        <trans-unit id="188ce858b868f1fcb2bee91dd15c186eeae4ec7b" translate="yes" xml:space="preserve">
          <source>Alternatively, you may use the &lt;code&gt;componentNamespace&lt;/code&gt; method to autoload component classes by convention. For example, a &lt;code&gt;Nightshade&lt;/code&gt; package might have &lt;code&gt;Calendar&lt;/code&gt; and &lt;code&gt;ColorPicker&lt;/code&gt; components that reside within the &lt;code&gt;Package\Views\Components&lt;/code&gt; namespace:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87f85bc7eee4436aca175600ce3c852d6b8cfcea" translate="yes" xml:space="preserve">
          <source>Alternatively, you may use the &lt;code&gt;exclude_unless&lt;/code&gt; rule to not validate a given field unless another field has a given value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ec9a07b2bafe19c066d462a848be263b838f78e" translate="yes" xml:space="preserve">
          <source>Alternatively, you may use the &lt;code&gt;limit&lt;/code&gt; and &lt;code&gt;offset&lt;/code&gt; methods:</source>
          <target state="translated">或者，您可以使用 &lt;code&gt;limit&lt;/code&gt; 和 &lt;code&gt;offset&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="6b6c5c3546ed23adb02c90319b4ab4b5e82c8ddd" translate="yes" xml:space="preserve">
          <source>Alternatively, you may use the &lt;code&gt;lockForUpdate&lt;/code&gt; method. A &quot;for update&quot; lock prevents the rows from being modified or from being selected with another shared lock:</source>
          <target state="translated">或者，您可以使用 &lt;code&gt;lockForUpdate&lt;/code&gt; 方法。&amp;ldquo;用于更新&amp;rdquo;锁可防止修改行或使用另一个共享锁选择行：</target>
        </trans-unit>
        <trans-unit id="c8cd33dc61f0b90272a7522f83e3927d9313689b" translate="yes" xml:space="preserve">
          <source>Alternatively, you may use the &lt;code&gt;visible&lt;/code&gt; property to define a white-list of attributes that should be included in your model's array and JSON representation. All other attributes will be hidden when the model is converted to an array or JSON:</source>
          <target state="translated">或者，您可以使用 &lt;code&gt;visible&lt;/code&gt; 属性来定义属性的白名单，该属性应包含在模型的数组和JSON表示中。将模型转换为数组或JSON时，所有其他属性将被隐藏：</target>
        </trans-unit>
        <trans-unit id="f70584e88ae88b990dcdc410b3423accf8c89203" translate="yes" xml:space="preserve">
          <source>Alternatively, your subscriber's &lt;code&gt;subscribe&lt;/code&gt; method may return an array of event to handler mappings. In this case, the event listener mappings will be registered for you automatically:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a443c911cb317bc5953e423eb8fe6a83aa462da0" translate="yes" xml:space="preserve">
          <source>Alternatives To Maintenance Mode</source>
          <target state="translated">维护模式的替代方案</target>
        </trans-unit>
        <trans-unit id="d7f6ee30660ebecf3e9bcfc2d4987f8cda6294d4" translate="yes" xml:space="preserve">
          <source>Although we just demonstrated how to write your own rate limiting job middleware, Laravel includes a rate limiting middleware that you may utilize to rate limit jobs. Like &lt;a href=&quot;routing#defining-rate-limiter&quot;&gt;route rate limiters&lt;/a&gt;, job rate limiters are defined using the &lt;code&gt;RateLimiter&lt;/code&gt; facade's &lt;code&gt;for&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f1f1ca209e9db5d224bc3e912d79bcd99dccb84" translate="yes" xml:space="preserve">
          <source>Always returns true, just lets us put &quot;bail&quot; in rules.</source>
          <target state="translated">总是返回true,只是让我们在规则中加入 &quot;保释&quot;。</target>
        </trans-unit>
        <trans-unit id="cb816511144785cb19a959efc4c30c270dde0ff0" translate="yes" xml:space="preserve">
          <source>Always returns true, just lets us put &quot;nullable&quot; in rules.</source>
          <target state="translated">总是返回true,只是让我们把 &quot;nullable &quot;放在规则中。</target>
        </trans-unit>
        <trans-unit id="65a630df4c93dd26b342723f97cf096d913f6375" translate="yes" xml:space="preserve">
          <source>Always returns true, just lets us put sometimes in rules.</source>
          <target state="translated">总是返回真,只是让我们把有时在规则。</target>
        </trans-unit>
        <trans-unit id="a3f141cb696a1341fb17f49878a43a9bd52ed37b" translate="yes" xml:space="preserve">
          <source>Amazon S3: &lt;code&gt;league/flysystem-aws-s3-v3 ~1.0&lt;/code&gt;</source>
          <target state="translated">亚马逊S3： &lt;code&gt;league/flysystem-aws-s3-v3 ~1.0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7bd81e7ee2af562b899c24e9d9baa207ab2a9b69" translate="yes" xml:space="preserve">
          <source>Amazon SQS: &lt;code&gt;aws/aws-sdk-php ~3.0&lt;/code&gt;</source>
          <target state="translated">亚马逊SQS： &lt;code&gt;aws/aws-sdk-php ~3.0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="812e27e220b71ff9c6214ea400be39a6b1d33bfc" translate="yes" xml:space="preserve">
          <source>An &quot;implicit&quot; extension only &lt;em&gt;implies&lt;/em&gt; that the attribute is required. Whether it actually invalidates a missing or empty attribute is up to you.</source>
          <target state="translated">&amp;ldquo;隐式&amp;rdquo;扩展名仅&lt;em&gt;表示&lt;/em&gt;该属性是必需的。它是否实际上使缺少的属性或空的属性无效取决于您。</target>
        </trans-unit>
        <trans-unit id="5a14fcf9acc5e3f14230ce088a32825ac072dcc1" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;ExampleTest.php&lt;/code&gt; file is provided in both the &lt;code&gt;Feature&lt;/code&gt; and &lt;code&gt;Unit&lt;/code&gt; test directories. After installing a new Laravel application, run &lt;code&gt;phpunit&lt;/code&gt; on the command line to run your tests.</source>
          <target state="translated">一个 &lt;code&gt;ExampleTest.php&lt;/code&gt; 文件中都提供 &lt;code&gt;Feature&lt;/code&gt; 和 &lt;code&gt;Unit&lt;/code&gt; 测试目录。安装新的Laravel应用程序后，在命令行上运行 &lt;code&gt;phpunit&lt;/code&gt; 来运行测试。</target>
        </trans-unit>
        <trans-unit id="9102ba79ba1ba6e8fee0136b062aeaaac442d99f" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;ExampleTest.php&lt;/code&gt; file is provided in both the &lt;code&gt;Feature&lt;/code&gt; and &lt;code&gt;Unit&lt;/code&gt; test directories. After installing a new Laravel application, run &lt;code&gt;vendor/bin/phpunit&lt;/code&gt; on the command line to run your tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fbe7acdb1516d33004e38372389ae90926cfe47" translate="yes" xml:space="preserve">
          <source>An Eloquent model's changes are now available to the &lt;code&gt;wasChanged&lt;/code&gt; method &lt;strong&gt;before&lt;/strong&gt; firing the &lt;code&gt;updated&lt;/code&gt; model event. Generally, this should be considered a bug fix; however, it is listed as a breaking change out of caution. &lt;a href=&quot;https://github.com/laravel/framework/pull/25026&quot;&gt;Please let us know if you encounter any issues surrounding this change&lt;/a&gt;.</source>
          <target state="translated">现在，&lt;strong&gt;在&lt;/strong&gt;触发 &lt;code&gt;updated&lt;/code&gt; 模型事件&lt;strong&gt;之前&lt;/strong&gt;， &lt;code&gt;wasChanged&lt;/code&gt; 方法可以使用Eloquent模型的更改。通常，应将其视为错误修复程序；但是，出于谨慎考虑，它被列为重大更改。&lt;a href=&quot;https://github.com/laravel/framework/pull/25026&quot;&gt;如果您遇到有关此更改的任何问题，请告诉我们&lt;/a&gt;。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="52bd60128e6ea9810e59893b94487e8e899e8e61" translate="yes" xml:space="preserve">
          <source>An absolute must for performance is to use a cached adapter. You will need an additional package for this:</source>
          <target state="translated">为了保证性能,绝对要使用缓存适配器。你将需要一个额外的包来实现这一点。</target>
        </trans-unit>
        <trans-unit id="5808d8890536420b7ab1d3508876ff93800503d8" translate="yes" xml:space="preserve">
          <source>An aggregate function and column to be run.</source>
          <target state="translated">要运行的集合函数和列。</target>
        </trans-unit>
        <trans-unit id="47db33fb9faac4846cffc0eb15e51dfca9eca52a" translate="yes" xml:space="preserve">
          <source>An alias function name for make().</source>
          <target state="translated">make()的别名函数名称。</target>
        </trans-unit>
        <trans-unit id="b89115f19be99edc74372923e4da18f73aacddd6" translate="yes" xml:space="preserve">
          <source>An alternative more semantic shortcut to the message container.</source>
          <target state="translated">一个替代性的更有语义的消息容器的快捷方式。</target>
        </trans-unit>
        <trans-unit id="ef9d355ddd20ca669ce0c40025819623bdfa51d4" translate="yes" xml:space="preserve">
          <source>An array is &quot;associative&quot; if it doesn't have sequential numerical keys beginning with zero.</source>
          <target state="translated">如果一个数组没有从零开始的顺序数字键,那么这个数组就是 &quot;关联的&quot;。</target>
        </trans-unit>
        <trans-unit id="20902f0e4931f7f27f428f8d4f22cd7c34dde43c" translate="yes" xml:space="preserve">
          <source>An array of all the registered routes.</source>
          <target state="translated">所有注册途径的数组。</target>
        </trans-unit>
        <trans-unit id="b939e0eeae7e77433aa109aed2f843a2a99b900f" translate="yes" xml:space="preserve">
          <source>An array of contextual data may also be passed to the function:</source>
          <target state="translated">一个上下文数据的数组也可以传递给函数。</target>
        </trans-unit>
        <trans-unit id="2630560adfbd98659f63979f83e0b111c04465b9" translate="yes" xml:space="preserve">
          <source>An array of contextual data may also be passed to the log methods. This contextual data will be formatted and displayed with the log message:</source>
          <target state="translated">上下文数据的数组也可以传递给日志方法。这些上下文数据将被格式化并与日志信息一起显示。</target>
        </trans-unit>
        <trans-unit id="29f4b502cf211b7ccf2a42ed14575a5eac3d0842" translate="yes" xml:space="preserve">
          <source>An array of extension to MIME types.</source>
          <target state="translated">MIME类型的扩展数组。</target>
        </trans-unit>
        <trans-unit id="5f41d2a939ede614090db8c5c7f3ccfd0cf30f57" translate="yes" xml:space="preserve">
          <source>An array of the route attributes keyed by name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b71f4c0b69700796b8750588b5d48d95424a6932" translate="yes" xml:space="preserve">
          <source>An array of the routes keyed by method.</source>
          <target state="translated">由方法键入的路由数组。</target>
        </trans-unit>
        <trans-unit id="0245c48f90b157adfac52b52e4df6a19df8a0b6b" translate="yes" xml:space="preserve">
          <source>An array of the service provider instances.</source>
          <target state="translated">服务提供者实例的数组。</target>
        </trans-unit>
        <trans-unit id="af7a9560d0788a5ebe243f47ee849164f44060d8" translate="yes" xml:space="preserve">
          <source>An array of the types that have been resolved.</source>
          <target state="translated">已解决的类型数组。</target>
        </trans-unit>
        <trans-unit id="eb85fa9e9ab2676f14c5414f571e5caa05dfc2fe" translate="yes" xml:space="preserve">
          <source>An array representation of the lock lottery odds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26dfab2496cb857be7a7869ef3f690808fa2a74c" translate="yes" xml:space="preserve">
          <source>An array to map class names to their morph names in database.</source>
          <target state="translated">一个数组,用于将数据库中的类名映射到它们的形态名。</target>
        </trans-unit>
        <trans-unit id="f7c0d8dad07822f6d4cbd41960810c3a17b459fc" translate="yes" xml:space="preserve">
          <source>An event class is a data container which holds the information related to the event. For example, let's assume our generated &lt;code&gt;OrderShipped&lt;/code&gt; event receives an &lt;a href=&quot;eloquent&quot;&gt;Eloquent ORM&lt;/a&gt; object:</source>
          <target state="translated">事件类是一个数据容器，其中包含与事件有关的信息。例如，假设我们生成的 &lt;code&gt;OrderShipped&lt;/code&gt; 事件接收到一个Eloquent &lt;a href=&quot;eloquent&quot;&gt;ORM&lt;/a&gt;对象：</target>
        </trans-unit>
        <trans-unit id="4a14ac4a872cea4a61fac3de80b69bef2498e196" translate="yes" xml:space="preserve">
          <source>An exception is thrown if the given identifier can't be resolved. The exception will be an instance of &lt;code&gt;Psr\Container\NotFoundExceptionInterface&lt;/code&gt; if the identifier was never bound. If the identifier was bound but was unable to be resolved, an instance of &lt;code&gt;Psr\Container\ContainerExceptionInterface&lt;/code&gt; will be thrown.</source>
          <target state="translated">如果给定的标识符无法解析，则抛出异常。如果该标识符从未绑定，则该异常将是 &lt;code&gt;Psr\Container\NotFoundExceptionInterface&lt;/code&gt; 的实例。如果标识符已绑定但无法解析，则将抛出 &lt;code&gt;Psr\Container\ContainerExceptionInterface&lt;/code&gt; 的实例。</target>
        </trans-unit>
        <trans-unit id="293d9e8bceda23dab13d08a85f87f7874c4cfb8c" translate="yes" xml:space="preserve">
          <source>An flattened array of all of the routes.</source>
          <target state="translated">所有路线的扁平化阵列。</target>
        </trans-unit>
        <trans-unit id="0aed6f34853be050f7de1bd6b5c8221f2bc63d0a" translate="yes" xml:space="preserve">
          <source>An migration instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="682ce7a768a6bedf77aa1327062862b160877d0d" translate="yes" xml:space="preserve">
          <source>And, if you would like to get started quickly, we are pleased to recommend &lt;a href=&quot;https://jetstream.laravel.com&quot;&gt;Laravel Jetstream&lt;/a&gt; as a quick way to start a new Laravel application that already uses our preferred authentication stack of Laravel's built-in authentication services and Laravel Sanctum.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0ddbd79d6440a7e5304989f9e6633b4e041ac10" translate="yes" xml:space="preserve">
          <source>Anonymous Components</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0507f8c89d571edb84bf58abee022b4194fbfb2f" translate="yes" xml:space="preserve">
          <source>Anonymous Global Scopes</source>
          <target state="translated">匿名全球范围</target>
        </trans-unit>
        <trans-unit id="4eb6192ba54a0b11760f916a3100ce9f28921a90" translate="yes" xml:space="preserve">
          <source>AnonymousComponent</source>
          <target state="translated">AnonymousComponent</target>
        </trans-unit>
        <trans-unit id="11df36f51ac5b3ef0a1d520903dc32fcfa855427" translate="yes" xml:space="preserve">
          <source>AnonymousComponent (View)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00e9ac200e9384a3def0bd9fd04feb4040f86507" translate="yes" xml:space="preserve">
          <source>AnonymousComponent::__construct()</source>
          <target state="translated">AnonymousComponent::__construct()</target>
        </trans-unit>
        <trans-unit id="0e79a8406f36d8bf91b39f53c00c82a6ce0ed356" translate="yes" xml:space="preserve">
          <source>AnonymousComponent::data()</source>
          <target state="translated">AnonymousComponent::data()</target>
        </trans-unit>
        <trans-unit id="4c27c4bbdb872c182668a39fa2f0a6f0bad52304" translate="yes" xml:space="preserve">
          <source>AnonymousComponent::render()</source>
          <target state="translated">AnonymousComponent::render()</target>
        </trans-unit>
        <trans-unit id="18240bd96d9da0c02797c534fb53cf9ccd58be3a" translate="yes" xml:space="preserve">
          <source>AnonymousNotifiable</source>
          <target state="translated">AnonymousNotifiable</target>
        </trans-unit>
        <trans-unit id="7b2c2de08657bcfd3070a1e9d2c7af08b45f0a92" translate="yes" xml:space="preserve">
          <source>AnonymousNotifiable (Notifications)</source>
          <target state="translated">AnonymousNotifiable (通知)</target>
        </trans-unit>
        <trans-unit id="ef52c6270cae9d2a8772c01eafa3cc282fa701e3" translate="yes" xml:space="preserve">
          <source>AnonymousNotifiable::getKey()</source>
          <target state="translated">AnonymousNotifiable::getKey()</target>
        </trans-unit>
        <trans-unit id="420f57097ce76f0852fc53d85eaf5e0551a8e3b7" translate="yes" xml:space="preserve">
          <source>AnonymousNotifiable::notify()</source>
          <target state="translated">AnonymousNotifiable::notify()</target>
        </trans-unit>
        <trans-unit id="71a2ea7794bf50625200a04aa9eb37398c3652c2" translate="yes" xml:space="preserve">
          <source>AnonymousNotifiable::notifyNow()</source>
          <target state="translated">AnonymousNotifiable::notifyNow()</target>
        </trans-unit>
        <trans-unit id="34779d172a573789d90f61be59da037a15d960c4" translate="yes" xml:space="preserve">
          <source>AnonymousNotifiable::route()</source>
          <target state="translated">AnonymousNotifiable::route()</target>
        </trans-unit>
        <trans-unit id="4f68b482bbbf03331d00e735b9ecf3ecf583eabc" translate="yes" xml:space="preserve">
          <source>AnonymousNotifiable::routeNotificationFor()</source>
          <target state="translated">AnonymousNotifiable::routeNotificationFor()</target>
        </trans-unit>
        <trans-unit id="252976420a4d13fd5d7a9481cfc09abf841bebbd" translate="yes" xml:space="preserve">
          <source>AnonymousResourceCollection</source>
          <target state="translated">AnonymousResourceCollection</target>
        </trans-unit>
        <trans-unit id="24c261fbc0dbd730207becf97723800100860aa4" translate="yes" xml:space="preserve">
          <source>AnonymousResourceCollection (Http\Resources)</source>
          <target state="translated">匿名资源集合(Http\Resources)</target>
        </trans-unit>
        <trans-unit id="452919a6b7740cb69b61eef8f7434feb7d80b6cb" translate="yes" xml:space="preserve">
          <source>AnonymousResourceCollection::__construct()</source>
          <target state="translated">AnonymousResourceCollection::__construct()</target>
        </trans-unit>
        <trans-unit id="3043814b43b771ba94b5494ba3cd08c6a6414e41" translate="yes" xml:space="preserve">
          <source>Another common use-case for route groups is assigning the same PHP namespace to a group of controllers using the &lt;code&gt;namespace&lt;/code&gt; method:</source>
          <target state="translated">路由组的另一个常见用例是使用 &lt;code&gt;namespace&lt;/code&gt; 方法将相同的PHP命名空间分配给一组控制器：</target>
        </trans-unit>
        <trans-unit id="34100ad6787087d9d2ebda2878141a2222f9cbff" translate="yes" xml:space="preserve">
          <source>Another method of registering custom validation rules is using the &lt;code&gt;extend&lt;/code&gt; method on the &lt;code&gt;Validator&lt;/code&gt;&lt;a href=&quot;facades&quot;&gt;facade&lt;/a&gt;. Let's use this method within a &lt;a href=&quot;providers&quot;&gt;service provider&lt;/a&gt; to register a custom validation rule:</source>
          <target state="translated">注册自定义验证规则的另一种方法是在 &lt;code&gt;Validator&lt;/code&gt; &lt;a href=&quot;facades&quot;&gt;外观&lt;/a&gt;上使用 &lt;code&gt;extend&lt;/code&gt; 方法。让我们在&lt;a href=&quot;providers&quot;&gt;服务提供者中&lt;/a&gt;使用此方法来注册自定义验证规则：</target>
        </trans-unit>
        <trans-unit id="e1e9eb362caf103a397931d5acfd58fa38162e28" translate="yes" xml:space="preserve">
          <source>Another solution provided by Laravel is to set a universal recipient of all emails sent by the framework. This way, all the emails generated by your application will be sent to a specific address, instead of the address actually specified when sending the message. This can be done via the &lt;code&gt;to&lt;/code&gt; option in your &lt;code&gt;config/mail.php&lt;/code&gt; configuration file:</source>
          <target state="translated">Laravel提供的另一种解决方案是为框架发送的所有电子邮件设置通用收件人。这样，您的应用程序生成的所有电子邮件将发送到特定地址，而不是发送消息时实际指定的地址。这可以通过 &lt;code&gt;config/mail.php&lt;/code&gt; 配置文件中的 &lt;code&gt;to&lt;/code&gt; 选项来完成：</target>
        </trans-unit>
        <trans-unit id="500d69918eafa739164e82894140b8fc1e04127d" translate="yes" xml:space="preserve">
          <source>Any HTML forms pointing to &lt;code&gt;POST&lt;/code&gt;, &lt;code&gt;PUT&lt;/code&gt;, &lt;code&gt;PATCH&lt;/code&gt;, or &lt;code&gt;DELETE&lt;/code&gt; routes that are defined in the &lt;code&gt;web&lt;/code&gt; routes file should include a CSRF token field. Otherwise, the request will be rejected. You can read more about CSRF protection in the &lt;a href=&quot;csrf&quot;&gt;CSRF documentation&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0256f47c3bc705a7b265538846fe479eee8a6eb5" translate="yes" xml:space="preserve">
          <source>Any HTML forms pointing to &lt;code&gt;POST&lt;/code&gt;, &lt;code&gt;PUT&lt;/code&gt;, or &lt;code&gt;DELETE&lt;/code&gt; routes that are defined in the &lt;code&gt;web&lt;/code&gt; routes file should include a CSRF token field. Otherwise, the request will be rejected. You can read more about CSRF protection in the &lt;a href=&quot;csrf&quot;&gt;CSRF documentation&lt;/a&gt;:</source>
          <target state="translated">指向 &lt;code&gt;web&lt;/code&gt; 路由文件中定义的 &lt;code&gt;POST&lt;/code&gt; ， &lt;code&gt;PUT&lt;/code&gt; 或 &lt;code&gt;DELETE&lt;/code&gt; 路由的任何HTML表单都应包含CSRF令牌字段。否则，该请求将被拒绝。您可以在&lt;a href=&quot;csrf&quot;&gt;CSRF文档中&lt;/a&gt;阅读有关CSRF保护的更多信息：</target>
        </trans-unit>
        <trans-unit id="f91d151a707c464ceb0d8b67bb1ea647958ccb5e" translate="yes" xml:space="preserve">
          <source>Any URL which contains commas must be encoded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83e90621f3bee3363ce275016e5951d97adfa85c" translate="yes" xml:space="preserve">
          <source>Any additional &lt;a href=&quot;#column-modifiers&quot;&gt;column modifiers&lt;/a&gt; must be called before &lt;code&gt;constrained&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e244618403f8bcb95013d6afa2a253c62434ed7f" translate="yes" xml:space="preserve">
          <source>Any additional array parameters that do not correspond to the route's definition parameters will be added to the URL's query string:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fab346a485bfa7234925ab49ddcdd1a68d31ecbe" translate="yes" xml:space="preserve">
          <source>Any arguments that can be passed to the &lt;code&gt;phpunit&lt;/code&gt; command may also be passed to the Artisan &lt;code&gt;test&lt;/code&gt; command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c7d4983b69ee167b2a20a1b1891f40bd22d4219" translate="yes" xml:space="preserve">
          <source>Any overlapping jobs will be released back to the queue. You may also specify the number of seconds that must elapse before the job will be attempted again:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e5a4da5622c1732fcff5c882e0cb9a696c690e6" translate="yes" xml:space="preserve">
          <source>Any pivot table restrictions for where clauses.</source>
          <target state="translated">任何数据透视表对where子句的限制。</target>
        </trans-unit>
        <trans-unit id="371767eae46f99529d994b5bf74c8b28bbcd823b" translate="yes" xml:space="preserve">
          <source>Any pivot table restrictions for whereIn clauses.</source>
          <target state="translated">任何数据透视表对whereIn子句的限制。</target>
        </trans-unit>
        <trans-unit id="5c1f9b7bc8b8b547b7da49ee30dc3c85a363a38d" translate="yes" xml:space="preserve">
          <source>Any pivot table restrictions for whereNull clauses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="724a8b03bb2781222b77d9811fb469269ff600c1" translate="yes" xml:space="preserve">
          <source>Any policies that are explicitly mapped in your &lt;code&gt;AuthServiceProvider&lt;/code&gt; will take precedence over any potentially auto-discovered policies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6691fac29b0a653acfe9cde9c1902d0814d5452" translate="yes" xml:space="preserve">
          <source>Any variable in your &lt;code&gt;.env&lt;/code&gt; file can be overridden by external environment variables such as server-level or system-level environment variables.</source>
          <target state="translated">&lt;code&gt;.env&lt;/code&gt; 文件中的任何变量都可以被外部环境变量（例如服务器级或系统级环境变量）覆盖。</target>
        </trans-unit>
        <trans-unit id="79efa233f2b65028e906fd348abeea26b3b40b83" translate="yes" xml:space="preserve">
          <source>Anytime you define a HTML form in your application, you should include a hidden CSRF token field in the form so that &lt;a href=&quot;csrf&quot;&gt;the CSRF protection&lt;/a&gt; middleware can validate the request. You may use the &lt;code&gt;@csrf&lt;/code&gt; Blade directive to generate the token field:</source>
          <target state="translated">每当您在应用程序中定义HTML表单时，都应在表单中包含一个隐藏的CSRF令牌字段，以便&lt;a href=&quot;csrf&quot;&gt;CSRF保护&lt;/a&gt;中间件可以验证请求。您可以使用 &lt;code&gt;@csrf&lt;/code&gt; Blade指令生成令牌字段：</target>
        </trans-unit>
        <trans-unit id="3772f6a049306114e66d0d2dda4cbe29d1f21488" translate="yes" xml:space="preserve">
          <source>Anytime you define a HTML form in your application, you should include a hidden CSRF token field in the form so that the CSRF protection middleware can validate the request. You may use the &lt;code&gt;@csrf&lt;/code&gt; Blade directive to generate the token field:</source>
          <target state="translated">每当您在应用程序中定义HTML表单时，都应在表单中包含一个隐藏的CSRF令牌字段，以便CSRF保护中间件可以验证请求。您可以使用 &lt;code&gt;@csrf&lt;/code&gt; Blade指令生成令牌字段：</target>
        </trans-unit>
        <trans-unit id="2ce35eb0f688af35828ee52238e4567cd1ef417b" translate="yes" xml:space="preserve">
          <source>Anytime you define an HTML form in your application, you should include a hidden CSRF token field in the form so that &lt;a href=&quot;csrf&quot;&gt;the CSRF protection&lt;/a&gt; middleware can validate the request. You may use the &lt;code&gt;@csrf&lt;/code&gt; Blade directive to generate the token field:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f10d5d7a4a50ab1804e6732223c2a7451efba10" translate="yes" xml:space="preserve">
          <source>Anytime you define an HTML form in your application, you should include a hidden CSRF token field in the form so that the CSRF protection middleware can validate the request. You may use the &lt;code&gt;@csrf&lt;/code&gt; Blade directive to generate the token field:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b5958b0f53cb499388dd9ee04a106a30b02c5d1" translate="yes" xml:space="preserve">
          <source>Apache</source>
          <target state="translated">Apache</target>
        </trans-unit>
        <trans-unit id="9ce24747cbde6c905c67b527a1e482c823523f4e" translate="yes" xml:space="preserve">
          <source>Apache (Optional)</source>
          <target state="translated">Apache (可选)</target>
        </trans-unit>
        <trans-unit id="40422147eea538f5de7828de88a5504f9541850d" translate="yes" xml:space="preserve">
          <source>ApcStore</source>
          <target state="translated">ApcStore</target>
        </trans-unit>
        <trans-unit id="70c0b0155b92cb680e9763013900085e50d7de1c" translate="yes" xml:space="preserve">
          <source>ApcStore (Cache)</source>
          <target state="translated">ApcStore (缓存)</target>
        </trans-unit>
        <trans-unit id="04d570b724585b5bc6b0b88e2c90123ee66a53f2" translate="yes" xml:space="preserve">
          <source>ApcStore::__construct()</source>
          <target state="translated">ApcStore::__construct()</target>
        </trans-unit>
        <trans-unit id="42c302976154a82e0ef8ac5b0251545a298deef8" translate="yes" xml:space="preserve">
          <source>ApcStore::decrement()</source>
          <target state="translated">ApcStore::decrement()</target>
        </trans-unit>
        <trans-unit id="4ba9aa08b35de5c267914fb4ba159a7db3cea785" translate="yes" xml:space="preserve">
          <source>ApcStore::flush()</source>
          <target state="translated">ApcStore::flush()</target>
        </trans-unit>
        <trans-unit id="44907b563ad986beae44c56bfad44b0419f293c2" translate="yes" xml:space="preserve">
          <source>ApcStore::forever()</source>
          <target state="translated">ApcStore::forever()</target>
        </trans-unit>
        <trans-unit id="68a3c957dc357e2cba4c6e94ca8ce5f4b7e3c2bb" translate="yes" xml:space="preserve">
          <source>ApcStore::forget()</source>
          <target state="translated">ApcStore::forget()</target>
        </trans-unit>
        <trans-unit id="861349f7bc4bbf6a6ef8ca8349b5f7de0c1202ce" translate="yes" xml:space="preserve">
          <source>ApcStore::get()</source>
          <target state="translated">ApcStore::get()</target>
        </trans-unit>
        <trans-unit id="007adb1f5fa2a7d4067856967b0c74b936938642" translate="yes" xml:space="preserve">
          <source>ApcStore::getPrefix()</source>
          <target state="translated">ApcStore::getPrefix()</target>
        </trans-unit>
        <trans-unit id="9995bfec6680db0f0aa78b6087bd998673548f67" translate="yes" xml:space="preserve">
          <source>ApcStore::increment()</source>
          <target state="translated">ApcStore::increment()</target>
        </trans-unit>
        <trans-unit id="52d9dd15175c142e06f40c844cd3d373a1df12de" translate="yes" xml:space="preserve">
          <source>ApcStore::put()</source>
          <target state="translated">ApcStore::put()</target>
        </trans-unit>
        <trans-unit id="880069574b6d6ab83fd30d51e6a697664f7b85ff" translate="yes" xml:space="preserve">
          <source>ApcWrapper</source>
          <target state="translated">ApcWrapper</target>
        </trans-unit>
        <trans-unit id="ff246000b49290c8cf5b0de1cf5198d7b32d26f6" translate="yes" xml:space="preserve">
          <source>ApcWrapper (Cache)</source>
          <target state="translated">ApcWrapper (Cache)</target>
        </trans-unit>
        <trans-unit id="f44b6a46bdc3f00bd93f36a2f56973c2adaa148b" translate="yes" xml:space="preserve">
          <source>ApcWrapper::__construct()</source>
          <target state="translated">ApcWrapper::__construct()</target>
        </trans-unit>
        <trans-unit id="d1ce0063e740088b76e3dcb3b41d536f2ba21629" translate="yes" xml:space="preserve">
          <source>ApcWrapper::decrement()</source>
          <target state="translated">ApcWrapper::decrement()</target>
        </trans-unit>
        <trans-unit id="a7d63bd480d079322b2930a1a7112cda0ede2002" translate="yes" xml:space="preserve">
          <source>ApcWrapper::delete()</source>
          <target state="translated">ApcWrapper::delete()</target>
        </trans-unit>
        <trans-unit id="2f3df5be0f57088a4368d6c5fc8fdf36aee4d0dd" translate="yes" xml:space="preserve">
          <source>ApcWrapper::flush()</source>
          <target state="translated">ApcWrapper::flush()</target>
        </trans-unit>
        <trans-unit id="56a39008bbfec6eeac3959384e1bc2b6d4aec8e4" translate="yes" xml:space="preserve">
          <source>ApcWrapper::get()</source>
          <target state="translated">ApcWrapper::get()</target>
        </trans-unit>
        <trans-unit id="cd812129ad062d8b0e5134f11b72b494d3478c85" translate="yes" xml:space="preserve">
          <source>ApcWrapper::increment()</source>
          <target state="translated">ApcWrapper::increment()</target>
        </trans-unit>
        <trans-unit id="9c3e1ad5d09d2809a0112cb5c59e3c7ac2f05674" translate="yes" xml:space="preserve">
          <source>ApcWrapper::put()</source>
          <target state="translated">ApcWrapper::put()</target>
        </trans-unit>
        <trans-unit id="fc4a695f02a8a53a129dcb9ace91e91ee1e7feb9" translate="yes" xml:space="preserve">
          <source>App</source>
          <target state="translated">App</target>
        </trans-unit>
        <trans-unit id="9b32e15377d7979708f79e1b7c9a50e3c5aac344" translate="yes" xml:space="preserve">
          <source>App (Support\Facades)</source>
          <target state="translated">应用程序(支持/接口)</target>
        </trans-unit>
        <trans-unit id="a7e4d2eba68a299a68fa04335471d6994e25a04b" translate="yes" xml:space="preserve">
          <source>App::getFacadeAccessor()</source>
          <target state="translated">App::getFacadeAccessor()</target>
        </trans-unit>
        <trans-unit id="a8d92f33064f44b976d2ad0e7e46d44b00f180a4" translate="yes" xml:space="preserve">
          <source>AppNameCommand</source>
          <target state="translated">AppNameCommand</target>
        </trans-unit>
        <trans-unit id="505c2175d14bc3e6fc03d8150224a1e7b12cf5f3" translate="yes" xml:space="preserve">
          <source>AppNameCommand (Foundation)</source>
          <target state="translated">AppNameCommand(基金会)</target>
        </trans-unit>
        <trans-unit id="b538b0429b9a87e6b7c272e781de70b7bd7b0015" translate="yes" xml:space="preserve">
          <source>AppNameCommand::__construct()</source>
          <target state="translated">AppNameCommand::__construct()</target>
        </trans-unit>
        <trans-unit id="b6b427c9d6a2d5a3c2f2b9afeea3f41cf50bb2b6" translate="yes" xml:space="preserve">
          <source>AppNameCommand::getArguments()</source>
          <target state="translated">AppNameCommand::getArguments()</target>
        </trans-unit>
        <trans-unit id="cf7be8d01ec1d191837128c0119ae613f8b699ba" translate="yes" xml:space="preserve">
          <source>AppNameCommand::getBootstrapPath()</source>
          <target state="translated">AppNameCommand::getBootstrapPath()</target>
        </trans-unit>
        <trans-unit id="6c4f36a0913c378f4fd477a91845374d8430843a" translate="yes" xml:space="preserve">
          <source>AppNameCommand::getComposerPath()</source>
          <target state="translated">AppNameCommand::getComposerPath()</target>
        </trans-unit>
        <trans-unit id="b028ece2bf2bbc75788ad3cbd23e814c683891c4" translate="yes" xml:space="preserve">
          <source>AppNameCommand::getConfigPath()</source>
          <target state="translated">AppNameCommand::getConfigPath()</target>
        </trans-unit>
        <trans-unit id="6a997417ce309e45896db746e2f9fb4f8bb3b497" translate="yes" xml:space="preserve">
          <source>AppNameCommand::handle()</source>
          <target state="translated">AppNameCommand::handle()</target>
        </trans-unit>
        <trans-unit id="ef6932631acaf225b24b5ef06ab90f7cf41069a6" translate="yes" xml:space="preserve">
          <source>AppNameCommand::replaceIn()</source>
          <target state="translated">AppNameCommand::replaceIn()</target>
        </trans-unit>
        <trans-unit id="c09fcfb250e568044b111bc1e90a0fe64a00109b" translate="yes" xml:space="preserve">
          <source>AppNameCommand::replaceNamespace()</source>
          <target state="translated">AppNameCommand::replaceNamespace()</target>
        </trans-unit>
        <trans-unit id="be6026a632b2bd094789daca349c87a0dfbc744a" translate="yes" xml:space="preserve">
          <source>AppNameCommand::setAppConfigNamespaces()</source>
          <target state="translated">AppNameCommand::setAppConfigNamespaces()</target>
        </trans-unit>
        <trans-unit id="11b889b08581a7d6963e507d77833fff23ec7ddb" translate="yes" xml:space="preserve">
          <source>AppNameCommand::setAppDirectoryNamespace()</source>
          <target state="translated">AppNameCommand::setAppDirectoryNamespace()</target>
        </trans-unit>
        <trans-unit id="ff0a6ddcbf466141bca3dfe2df8dd0c7ba48f491" translate="yes" xml:space="preserve">
          <source>AppNameCommand::setAuthConfigNamespace()</source>
          <target state="translated">AppNameCommand::setAuthConfigNamespace()</target>
        </trans-unit>
        <trans-unit id="d905a309f14ac295628e0ff949ddb6642cd956b7" translate="yes" xml:space="preserve">
          <source>AppNameCommand::setBootstrapNamespaces()</source>
          <target state="translated">AppNameCommand::setBootstrapNamespaces()</target>
        </trans-unit>
        <trans-unit id="7d8333a2a85745d8e902b41844f01f384808004f" translate="yes" xml:space="preserve">
          <source>AppNameCommand::setComposerNamespace()</source>
          <target state="translated">AppNameCommand::setComposerNamespace()</target>
        </trans-unit>
        <trans-unit id="e8fd4cfdd1d70b1ba60c1635d5c461d8bf0a6535" translate="yes" xml:space="preserve">
          <source>AppNameCommand::setConfigNamespaces()</source>
          <target state="translated">AppNameCommand::setConfigNamespaces()</target>
        </trans-unit>
        <trans-unit id="cd9d5c2fe982adc64701da0b65c4207d71e4a507" translate="yes" xml:space="preserve">
          <source>AppNameCommand::setDatabaseFactoryNamespaces()</source>
          <target state="translated">AppNameCommand::setDatabaseFactoryNamespaces()</target>
        </trans-unit>
        <trans-unit id="dd36badaeb4736602f9248bf648c57f28ceb433f" translate="yes" xml:space="preserve">
          <source>AppNameCommand::setServicesConfigNamespace()</source>
          <target state="translated">AppNameCommand::setServicesConfigNamespace()</target>
        </trans-unit>
        <trans-unit id="3b0206fadc810faffdedd37edebfcd465d780ae4" translate="yes" xml:space="preserve">
          <source>Append an attribute across the entire collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e838e1ce88b687a540ac6fbefee8c29c79ca5dea" translate="yes" xml:space="preserve">
          <source>Append attributes to query when building a query.</source>
          <target state="translated">在建立查询时,将属性附加到查询中。</target>
        </trans-unit>
        <trans-unit id="2ec00999fd029965c856b35d10fffc8041cf3c06" translate="yes" xml:space="preserve">
          <source>Append content to a given push section.</source>
          <target state="translated">将内容添加到给定的推送部分。</target>
        </trans-unit>
        <trans-unit id="df3db6a3139d0ec379007ab8b2022f6584d80e9f" translate="yes" xml:space="preserve">
          <source>Append content to a given section.</source>
          <target state="translated">将内容添加到给定的部分。</target>
        </trans-unit>
        <trans-unit id="304cfb2668cf2ad2eea4c3a890bdf1b89dda6551" translate="yes" xml:space="preserve">
          <source>Append the character set specifications to a command.</source>
          <target state="translated">将字符集规格附加到命令中。</target>
        </trans-unit>
        <trans-unit id="0103e26e4825bb9a0e78fdb1450cd809127d740a" translate="yes" xml:space="preserve">
          <source>Append the engine specifications to a command.</source>
          <target state="translated">将发动机规格附加到命令中。</target>
        </trans-unit>
        <trans-unit id="01dcf8ab5c421f3a48c60967ca90a07b690447b9" translate="yes" xml:space="preserve">
          <source>Append the file path to the compiled string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17691cac04cd6c14eaf20bf3e32807f7ac52ec86" translate="yes" xml:space="preserve">
          <source>Append the given middleware to the given middleware group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1648acce46e9181148c87e5594d3dedf73337fa" translate="yes" xml:space="preserve">
          <source>Append the given middleware to the middleware priority list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed0012ba578236df39ebe8fd9f736c69043c5856" translate="yes" xml:space="preserve">
          <source>Append the given values to the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f79885de2151a54a0f3ce2f0da2cdab9a07acb57" translate="yes" xml:space="preserve">
          <source>Append the migration data to the schema dump.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1c545fc7471b8d582e1fe2975e25dca81758250" translate="yes" xml:space="preserve">
          <source>Append the output of the command to a given location.</source>
          <target state="translated">将命令的输出附加到指定位置。</target>
        </trans-unit>
        <trans-unit id="5b457acbd6af52727ecf328bf347913a8b3a5c32" translate="yes" xml:space="preserve">
          <source>Append to a file.</source>
          <target state="translated">附加到文件中。</target>
        </trans-unit>
        <trans-unit id="60a54c2868d455f69a0fcdafbdf011d6674bb704" translate="yes" xml:space="preserve">
          <source>AppendableAttributeValue</source>
          <target state="translated">AppendableAttributeValue</target>
        </trans-unit>
        <trans-unit id="5d0cd84837187a990ecc3ec0f8d01bf01699ab1c" translate="yes" xml:space="preserve">
          <source>AppendableAttributeValue (View)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7f58520428a70de4ee614950861f8ac12963ac4" translate="yes" xml:space="preserve">
          <source>AppendableAttributeValue::__construct()</source>
          <target state="translated">AppendableAttributeValue::__construct()</target>
        </trans-unit>
        <trans-unit id="37675816661d34f871ef738cbac7e990b49f2d97" translate="yes" xml:space="preserve">
          <source>AppendableAttributeValue::__toString()</source>
          <target state="translated">AppendableAttributeValue::__toString()</target>
        </trans-unit>
        <trans-unit id="4cc64ec59878ea659be3149b7f768601efb91dc6" translate="yes" xml:space="preserve">
          <source>Appending At Run Time</source>
          <target state="translated">运行时追加</target>
        </trans-unit>
        <trans-unit id="bf3084410c8a83489658bdef410c61d45a8058e4" translate="yes" xml:space="preserve">
          <source>Appending To Pagination Links</source>
          <target state="translated">添加到分页链接</target>
        </trans-unit>
        <trans-unit id="2f13f9a56364da30970ae70da450518e3902fe67" translate="yes" xml:space="preserve">
          <source>Appending Values To JSON</source>
          <target state="translated">附加值到JSON</target>
        </trans-unit>
        <trans-unit id="c459dfc68b4d3263e82b29c3e9abb8e00cbc6f2a" translate="yes" xml:space="preserve">
          <source>Applicable to Redis jobs which store attempts in their payload.</source>
          <target state="translated">适用于在有效载荷中存储尝试的Redis作业。</target>
        </trans-unit>
        <trans-unit id="b291beb8793f4f3308c463951165dad483715a6c" translate="yes" xml:space="preserve">
          <source>Application</source>
          <target state="translated">Application</target>
        </trans-unit>
        <trans-unit id="27960a8519bc91554c2ff9b2afcbb2e866f92958" translate="yes" xml:space="preserve">
          <source>Application (Console)</source>
          <target state="translated">应用(控制台)</target>
        </trans-unit>
        <trans-unit id="a0255b2098cf007fa6f05ed7f787db5aa80eeaaa" translate="yes" xml:space="preserve">
          <source>Application (Contracts)</source>
          <target state="translated">申请(合同)</target>
        </trans-unit>
        <trans-unit id="4cf8b2f684ab8e87fe57e2336417764fe2d7bccb" translate="yes" xml:space="preserve">
          <source>Application (Foundation)</source>
          <target state="translated">应用(基础)</target>
        </trans-unit>
        <trans-unit id="e74f22f5f56240fa5153cc370746f4c4bb4e0caa" translate="yes" xml:space="preserve">
          <source>Application Key</source>
          <target state="translated">应用钥匙</target>
        </trans-unit>
        <trans-unit id="095681f98081ca0c110cf106b634943d02d2ab25" translate="yes" xml:space="preserve">
          <source>Application::__construct()</source>
          <target state="translated">Application::__construct()</target>
        </trans-unit>
        <trans-unit id="1d329038d1a22aed930d71f625ea103235a98195" translate="yes" xml:space="preserve">
          <source>Application::abort()</source>
          <target state="translated">Application::abort()</target>
        </trans-unit>
        <trans-unit id="d0142dd198300930e52148f9c9140fecbe47c910" translate="yes" xml:space="preserve">
          <source>Application::add()</source>
          <target state="translated">Application::add()</target>
        </trans-unit>
        <trans-unit id="703308b74f66efe96a44793591ab57a12ef70550" translate="yes" xml:space="preserve">
          <source>Application::addAbsoluteCachePathPrefix()</source>
          <target state="translated">Application::addAbsoluteCachePathPrefix()</target>
        </trans-unit>
        <trans-unit id="2c8f8dc75d37159ce3a6398daa9455381b40b2da" translate="yes" xml:space="preserve">
          <source>Application::addDeferredServices()</source>
          <target state="translated">Application::addDeferredServices()</target>
        </trans-unit>
        <trans-unit id="e249c705d06ccbb290da674061d3221c9ada2238" translate="yes" xml:space="preserve">
          <source>Application::addToParent()</source>
          <target state="translated">Application::addToParent()</target>
        </trans-unit>
        <trans-unit id="1d8c32e31de67dc02c2aff69b642e2f3394c70d8" translate="yes" xml:space="preserve">
          <source>Application::afterBootstrapping()</source>
          <target state="translated">Application::afterBootstrapping()</target>
        </trans-unit>
        <trans-unit id="be0c3f6bb6b1bfcf188f82f9471a17e02d36ee1c" translate="yes" xml:space="preserve">
          <source>Application::afterLoadingEnvironment()</source>
          <target state="translated">Application::afterLoadingEnvironment()</target>
        </trans-unit>
        <trans-unit id="9b4176e5380beae0b1146f91b216ccd3840e5bd4" translate="yes" xml:space="preserve">
          <source>Application::artisanBinary()</source>
          <target state="translated">Application::artisanBinary()</target>
        </trans-unit>
        <trans-unit id="fe92d70413f74b72d96cd1db765cee0aa341d127" translate="yes" xml:space="preserve">
          <source>Application::basePath()</source>
          <target state="translated">Application::basePath()</target>
        </trans-unit>
        <trans-unit id="eb970cda54a2817fa709838b1731d99062dc8d34" translate="yes" xml:space="preserve">
          <source>Application::beforeBootstrapping()</source>
          <target state="translated">Application::beforeBootstrapping()</target>
        </trans-unit>
        <trans-unit id="73dab88e36a72abac78a447b96778478a39c9665" translate="yes" xml:space="preserve">
          <source>Application::bindPathsInContainer()</source>
          <target state="translated">Application::bindPathsInContainer()</target>
        </trans-unit>
        <trans-unit id="e4ece6a8fba24f0a81f6ccc374f498921f72b002" translate="yes" xml:space="preserve">
          <source>Application::boot()</source>
          <target state="translated">Application::boot()</target>
        </trans-unit>
        <trans-unit id="633571874c1967b54a099103ad4fd15ff9ea17bb" translate="yes" xml:space="preserve">
          <source>Application::bootProvider()</source>
          <target state="translated">Application::bootProvider()</target>
        </trans-unit>
        <trans-unit id="88401aa259ed833720455f69ae8d975376ae9ff0" translate="yes" xml:space="preserve">
          <source>Application::booted()</source>
          <target state="translated">Application::booted()</target>
        </trans-unit>
        <trans-unit id="46755768e2979f548ba83e1bf3a681b6c7edc4e8" translate="yes" xml:space="preserve">
          <source>Application::booting()</source>
          <target state="translated">Application::booting()</target>
        </trans-unit>
        <trans-unit id="6316baed99008f21600f5bc26445e5a809c57408" translate="yes" xml:space="preserve">
          <source>Application::bootstrap()</source>
          <target state="translated">Application::bootstrap()</target>
        </trans-unit>
        <trans-unit id="594d3003617b0a20fea89e34c93ad53a658f8bc6" translate="yes" xml:space="preserve">
          <source>Application::bootstrapPath()</source>
          <target state="translated">Application::bootstrapPath()</target>
        </trans-unit>
        <trans-unit id="51b29301d7883189cbf7c5c4a9303b9c17463e5b" translate="yes" xml:space="preserve">
          <source>Application::bootstrapWith()</source>
          <target state="translated">Application::bootstrapWith()</target>
        </trans-unit>
        <trans-unit id="c60924d01ae60fca6a08aab7c589a7240fe4efb9" translate="yes" xml:space="preserve">
          <source>Application::bound()</source>
          <target state="translated">Application::bound()</target>
        </trans-unit>
        <trans-unit id="dd65f41cc10fa1399442a2af72cefc9296686d0d" translate="yes" xml:space="preserve">
          <source>Application::call()</source>
          <target state="translated">Application::call()</target>
        </trans-unit>
        <trans-unit id="35d8274161ebe91b88c2519d6002a9786acd9d79" translate="yes" xml:space="preserve">
          <source>Application::configPath()</source>
          <target state="translated">Application::configPath()</target>
        </trans-unit>
        <trans-unit id="6c2c949d0e5d0a0ad6f798928720ec6bcc58f099" translate="yes" xml:space="preserve">
          <source>Application::configurationIsCached()</source>
          <target state="translated">Application::configurationIsCached()</target>
        </trans-unit>
        <trans-unit id="2e0349edd86ca6eedcb5a3e1b27a8e32d1da387d" translate="yes" xml:space="preserve">
          <source>Application::databasePath()</source>
          <target state="translated">Application::databasePath()</target>
        </trans-unit>
        <trans-unit id="07bb6284eac9b08952e68e08eaabf55d1d36a7fd" translate="yes" xml:space="preserve">
          <source>Application::detectEnvironment()</source>
          <target state="translated">Application::detectEnvironment()</target>
        </trans-unit>
        <trans-unit id="6c25ca9511522a470db2ac6efc99429cb3d4729f" translate="yes" xml:space="preserve">
          <source>Application::environment()</source>
          <target state="translated">Application::environment()</target>
        </trans-unit>
        <trans-unit id="d27fc30f292f95f86821fecc2473e9cf278162ec" translate="yes" xml:space="preserve">
          <source>Application::environmentFile()</source>
          <target state="translated">Application::environmentFile()</target>
        </trans-unit>
        <trans-unit id="e39fb0d46b95bd7528d120e5f4dcfe57a9d76794" translate="yes" xml:space="preserve">
          <source>Application::environmentFilePath()</source>
          <target state="translated">Application::environmentFilePath()</target>
        </trans-unit>
        <trans-unit id="d7955a6d6114219ba3158a96faf890dd804a2c29" translate="yes" xml:space="preserve">
          <source>Application::environmentPath()</source>
          <target state="translated">Application::environmentPath()</target>
        </trans-unit>
        <trans-unit id="729260d22af787d9d2114ae53ea443ea536e5bd5" translate="yes" xml:space="preserve">
          <source>Application::eventsAreCached()</source>
          <target state="translated">Application::eventsAreCached()</target>
        </trans-unit>
        <trans-unit id="c1f5e77de667143bd8f38ea06d6c4869b883c489" translate="yes" xml:space="preserve">
          <source>Application::fireAppCallbacks()</source>
          <target state="translated">Application::fireAppCallbacks()</target>
        </trans-unit>
        <trans-unit id="77706337f711cbfb7e0bfc135c7f410b084c4932" translate="yes" xml:space="preserve">
          <source>Application::flush()</source>
          <target state="translated">Application::flush()</target>
        </trans-unit>
        <trans-unit id="b876eeea243cfebd466cc40c2880d6097fc417c1" translate="yes" xml:space="preserve">
          <source>Application::forgetBootstrappers()</source>
          <target state="translated">Application::forgetBootstrappers()</target>
        </trans-unit>
        <trans-unit id="a81fd3044bfd0deed0b13cfbe5e790607ce5bda2" translate="yes" xml:space="preserve">
          <source>Application::formatCommandString()</source>
          <target state="translated">Application::formatCommandString()</target>
        </trans-unit>
        <trans-unit id="34fddd5a5bd5629a667aa81fd8a7496cfafd3081" translate="yes" xml:space="preserve">
          <source>Application::getCachedConfigPath()</source>
          <target state="translated">Application::getCachedConfigPath()</target>
        </trans-unit>
        <trans-unit id="9939aa39260ab3d5550e75c3a014732b1b90e78b" translate="yes" xml:space="preserve">
          <source>Application::getCachedEventsPath()</source>
          <target state="translated">Application::getCachedEventsPath()</target>
        </trans-unit>
        <trans-unit id="ab9609c408c958ba20c1bec05a2eff714390a340" translate="yes" xml:space="preserve">
          <source>Application::getCachedPackagesPath()</source>
          <target state="translated">Application::getCachedPackagesPath()</target>
        </trans-unit>
        <trans-unit id="5b93fe34fa700ba3a61d907839f12e932369fd1e" translate="yes" xml:space="preserve">
          <source>Application::getCachedRoutesPath()</source>
          <target state="translated">Application::getCachedRoutesPath()</target>
        </trans-unit>
        <trans-unit id="32eb4973580d045676d6dc83eaa029861aaffe16" translate="yes" xml:space="preserve">
          <source>Application::getCachedServicesPath()</source>
          <target state="translated">Application::getCachedServicesPath()</target>
        </trans-unit>
        <trans-unit id="bf9f4cb090ce4f69537a283c27d73273fa590164" translate="yes" xml:space="preserve">
          <source>Application::getDefaultInputDefinition()</source>
          <target state="translated">Application::getDefaultInputDefinition()</target>
        </trans-unit>
        <trans-unit id="0b09ea0bf5f865c34104d685b41d1d1e34813efd" translate="yes" xml:space="preserve">
          <source>Application::getDeferredServices()</source>
          <target state="translated">Application::getDeferredServices()</target>
        </trans-unit>
        <trans-unit id="0825cb5b04f3297cfd346b021a9214b0a3f8022e" translate="yes" xml:space="preserve">
          <source>Application::getEnvironmentOption()</source>
          <target state="translated">Application::getEnvironmentOption()</target>
        </trans-unit>
        <trans-unit id="d9b995347cefbeb2a48260e367b34c2b9fd1a19d" translate="yes" xml:space="preserve">
          <source>Application::getFallbackLocale()</source>
          <target state="translated">Application::getFallbackLocale()</target>
        </trans-unit>
        <trans-unit id="a95297f28c23189997b6fd07b21d9af6c38d9cb3" translate="yes" xml:space="preserve">
          <source>Application::getLaravel()</source>
          <target state="translated">Application::getLaravel()</target>
        </trans-unit>
        <trans-unit id="a1b529fc875e73590599bd9a1c31a5eb5534ad2d" translate="yes" xml:space="preserve">
          <source>Application::getLoadedProviders()</source>
          <target state="translated">Application::getLoadedProviders()</target>
        </trans-unit>
        <trans-unit id="b6a2929afc83a99cf5c422784d8b8be549cd3904" translate="yes" xml:space="preserve">
          <source>Application::getLocale()</source>
          <target state="translated">Application::getLocale()</target>
        </trans-unit>
        <trans-unit id="1e3491ea726d5ffc26dc6d9795985985efc0765a" translate="yes" xml:space="preserve">
          <source>Application::getNamespace()</source>
          <target state="translated">Application::getNamespace()</target>
        </trans-unit>
        <trans-unit id="219e102dd18abc71d12bdfa7c960fcbf4bcca2c5" translate="yes" xml:space="preserve">
          <source>Application::getProvider()</source>
          <target state="translated">Application::getProvider()</target>
        </trans-unit>
        <trans-unit id="c241699ad44d21302612c66c181a5cfe0efe2e8b" translate="yes" xml:space="preserve">
          <source>Application::getProviders()</source>
          <target state="translated">Application::getProviders()</target>
        </trans-unit>
        <trans-unit id="f39d08f8ae9cfae7622815922c82694df6f47ed6" translate="yes" xml:space="preserve">
          <source>Application::handle()</source>
          <target state="translated">Application::handle()</target>
        </trans-unit>
        <trans-unit id="d47cc17a75c48e36c8de2f4f63556c00b053f89f" translate="yes" xml:space="preserve">
          <source>Application::hasBeenBootstrapped()</source>
          <target state="translated">Application::hasBeenBootstrapped()</target>
        </trans-unit>
        <trans-unit id="e44fc49c97af232ce9b482ad1e2033a82d05a1a6" translate="yes" xml:space="preserve">
          <source>Application::isBooted()</source>
          <target state="translated">Application::isBooted()</target>
        </trans-unit>
        <trans-unit id="4b39151dc9de46999b9dd8bfa6313a862fde767e" translate="yes" xml:space="preserve">
          <source>Application::isDeferredService()</source>
          <target state="translated">Application::isDeferredService()</target>
        </trans-unit>
        <trans-unit id="75521a381036e5ae3e53509c7c3259fc81abcb84" translate="yes" xml:space="preserve">
          <source>Application::isDownForMaintenance()</source>
          <target state="translated">Application::isDownForMaintenance()</target>
        </trans-unit>
        <trans-unit id="6579454299d3edcdb0f23c80bb5c3346c06771c7" translate="yes" xml:space="preserve">
          <source>Application::isLocal()</source>
          <target state="translated">Application::isLocal()</target>
        </trans-unit>
        <trans-unit id="cb4c79f797ce297ad9b446b1076c1a6e76a3e352" translate="yes" xml:space="preserve">
          <source>Application::isLocale()</source>
          <target state="translated">Application::isLocale()</target>
        </trans-unit>
        <trans-unit id="28f3cbb6e415f0e017663617d5d701449087f882" translate="yes" xml:space="preserve">
          <source>Application::isProduction()</source>
          <target state="translated">Application::isProduction()</target>
        </trans-unit>
        <trans-unit id="126f6812f4ca5f79d0ad20406a35dfd100ee04cf" translate="yes" xml:space="preserve">
          <source>Application::langPath()</source>
          <target state="translated">Application::langPath()</target>
        </trans-unit>
        <trans-unit id="1f03cebe6aaefee3979904b54ad88aa2eec8a995" translate="yes" xml:space="preserve">
          <source>Application::loadDeferredProvider()</source>
          <target state="translated">Application::loadDeferredProvider()</target>
        </trans-unit>
        <trans-unit id="fd34a8b44aa882647200a35c61e8754d204aea12" translate="yes" xml:space="preserve">
          <source>Application::loadDeferredProviderIfNeeded()</source>
          <target state="translated">Application::loadDeferredProviderIfNeeded()</target>
        </trans-unit>
        <trans-unit id="f34fd3a71595a893a3d79f9e7fd50c8ba1ca3b53" translate="yes" xml:space="preserve">
          <source>Application::loadDeferredProviders()</source>
          <target state="translated">Application::loadDeferredProviders()</target>
        </trans-unit>
        <trans-unit id="c85b4415a4f2923f988e35f231a2316b5c68522d" translate="yes" xml:space="preserve">
          <source>Application::loadEnvironmentFrom()</source>
          <target state="translated">Application::loadEnvironmentFrom()</target>
        </trans-unit>
        <trans-unit id="a94108b1b7d7e917be52baff153ec4e625b9c37c" translate="yes" xml:space="preserve">
          <source>Application::make()</source>
          <target state="translated">Application::make()</target>
        </trans-unit>
        <trans-unit id="4871859966da9836e82626e451d80a3b883cf6da" translate="yes" xml:space="preserve">
          <source>Application::markAsRegistered()</source>
          <target state="translated">Application::markAsRegistered()</target>
        </trans-unit>
        <trans-unit id="b65fab956cb78228aef7b9c67cc7aa7d8ff05079" translate="yes" xml:space="preserve">
          <source>Application::normalizeCachePath()</source>
          <target state="translated">Application::normalizeCachePath()</target>
        </trans-unit>
        <trans-unit id="d8c287056b7fe54a7922f35a7f82e5c7ced1f59c" translate="yes" xml:space="preserve">
          <source>Application::output()</source>
          <target state="translated">Application::output()</target>
        </trans-unit>
        <trans-unit id="23b2320856316fe2fc7415ffa8702fe52388c47a" translate="yes" xml:space="preserve">
          <source>Application::parseCommand()</source>
          <target state="translated">Application::parseCommand()</target>
        </trans-unit>
        <trans-unit id="5e302c343e495daf1648b913b2776d2340de4fbd" translate="yes" xml:space="preserve">
          <source>Application::path()</source>
          <target state="translated">Application::path()</target>
        </trans-unit>
        <trans-unit id="460bf9b5e80f9f32f42b1690c825e2df4fc0e7bc" translate="yes" xml:space="preserve">
          <source>Application::phpBinary()</source>
          <target state="translated">Application::phpBinary()</target>
        </trans-unit>
        <trans-unit id="0d54de335f463c464b34582497f34676a942a296" translate="yes" xml:space="preserve">
          <source>Application::provideFacades()</source>
          <target state="translated">Application::provideFacades()</target>
        </trans-unit>
        <trans-unit id="09b69ec27df71947298762a9a9bf4d3d51de4c18" translate="yes" xml:space="preserve">
          <source>Application::providerIsLoaded()</source>
          <target state="translated">Application::providerIsLoaded()</target>
        </trans-unit>
        <trans-unit id="46b7487742e8580b1cc29cee54afadd5c156fb73" translate="yes" xml:space="preserve">
          <source>Application::publicPath()</source>
          <target state="translated">Application::publicPath()</target>
        </trans-unit>
        <trans-unit id="43cd13c252829de9f23709311277d4742b1bbfe7" translate="yes" xml:space="preserve">
          <source>Application::register()</source>
          <target state="translated">Application::register()</target>
        </trans-unit>
        <trans-unit id="e6dd38f182ac9c937048919fc4d898aca201ce6c" translate="yes" xml:space="preserve">
          <source>Application::registerBaseBindings()</source>
          <target state="translated">Application::registerBaseBindings()</target>
        </trans-unit>
        <trans-unit id="e5cc60f619ccf56ea8c7b9a03c53a9b99307a143" translate="yes" xml:space="preserve">
          <source>Application::registerBaseServiceProviders()</source>
          <target state="translated">Application::registerBaseServiceProviders()</target>
        </trans-unit>
        <trans-unit id="b8f4217b602d90e32f18329775bf0b7e24a9722d" translate="yes" xml:space="preserve">
          <source>Application::registerConfiguredProviders()</source>
          <target state="translated">Application::registerConfiguredProviders()</target>
        </trans-unit>
        <trans-unit id="41900c19d1708629889e3199b08aefe67fc53680" translate="yes" xml:space="preserve">
          <source>Application::registerCoreContainerAliases()</source>
          <target state="translated">Application::registerCoreContainerAliases()</target>
        </trans-unit>
        <trans-unit id="67556b8d69315e1df9fa60412e0e0c876197220a" translate="yes" xml:space="preserve">
          <source>Application::registerDeferredProvider()</source>
          <target state="translated">Application::registerDeferredProvider()</target>
        </trans-unit>
        <trans-unit id="1305355f22be05293c92046282b16844f7a22f43" translate="yes" xml:space="preserve">
          <source>Application::resolve()</source>
          <target state="translated">Application::resolve()</target>
        </trans-unit>
        <trans-unit id="2bcfe044fd1a84dddd7aecb8c245f7616ee035fb" translate="yes" xml:space="preserve">
          <source>Application::resolveCommands()</source>
          <target state="translated">Application::resolveCommands()</target>
        </trans-unit>
        <trans-unit id="7b7d8311c5aa4902dbfc84eeefd57cd68d8443c2" translate="yes" xml:space="preserve">
          <source>Application::resolveProvider()</source>
          <target state="translated">Application::resolveProvider()</target>
        </trans-unit>
        <trans-unit id="652a7676c5a3d37cdeca67d33c0c943d21fca241" translate="yes" xml:space="preserve">
          <source>Application::resourcePath()</source>
          <target state="translated">Application::resourcePath()</target>
        </trans-unit>
        <trans-unit id="b69b298fa90f778952dbcf19f3b9881e636b503f" translate="yes" xml:space="preserve">
          <source>Application::routesAreCached()</source>
          <target state="translated">Application::routesAreCached()</target>
        </trans-unit>
        <trans-unit id="c800fe80f1e1cdf33e21129cde8ab1fee4e13917" translate="yes" xml:space="preserve">
          <source>Application::run()</source>
          <target state="translated">Application::run()</target>
        </trans-unit>
        <trans-unit id="8dced0bcf40b3a237d0a6c9ee75bec583e5a3938" translate="yes" xml:space="preserve">
          <source>Application::runningInConsole()</source>
          <target state="translated">Application::runningInConsole()</target>
        </trans-unit>
        <trans-unit id="5d5c8ae3112497af0bc67f2b20ad68732e6c5b58" translate="yes" xml:space="preserve">
          <source>Application::runningUnitTests()</source>
          <target state="translated">Application::runningUnitTests()</target>
        </trans-unit>
        <trans-unit id="c76241a924a1c5ba23e4d9e24dd4dc92872742cd" translate="yes" xml:space="preserve">
          <source>Application::setBasePath()</source>
          <target state="translated">Application::setBasePath()</target>
        </trans-unit>
        <trans-unit id="b3581d4818d7722bc922e5306c828562582f737b" translate="yes" xml:space="preserve">
          <source>Application::setDeferredServices()</source>
          <target state="translated">Application::setDeferredServices()</target>
        </trans-unit>
        <trans-unit id="b02c4b99932c01ccb9c293181579c6c674ac8f18" translate="yes" xml:space="preserve">
          <source>Application::setFallbackLocale()</source>
          <target state="translated">Application::setFallbackLocale()</target>
        </trans-unit>
        <trans-unit id="603adc5db1468affe121fe27bb0288fa31804dea" translate="yes" xml:space="preserve">
          <source>Application::setLocale()</source>
          <target state="translated">Application::setLocale()</target>
        </trans-unit>
        <trans-unit id="15bde55ee6cd64d41e89f0caf3f0cd67256b5ed2" translate="yes" xml:space="preserve">
          <source>Application::shouldSkipMiddleware()</source>
          <target state="translated">Application::shouldSkipMiddleware()</target>
        </trans-unit>
        <trans-unit id="eec1e7d06265cb406ce8e118d297f0cee0f35e68" translate="yes" xml:space="preserve">
          <source>Application::starting()</source>
          <target state="translated">Application::starting()</target>
        </trans-unit>
        <trans-unit id="367686c420e12a6b51a485f9e00761b5e9b95503" translate="yes" xml:space="preserve">
          <source>Application::storagePath()</source>
          <target state="translated">Application::storagePath()</target>
        </trans-unit>
        <trans-unit id="731a8a20317fc0f1963624cb47c5611421746c43" translate="yes" xml:space="preserve">
          <source>Application::terminate()</source>
          <target state="translated">Application::terminate()</target>
        </trans-unit>
        <trans-unit id="ed975ecdd617948742c238616e7e7ac0052ed4b4" translate="yes" xml:space="preserve">
          <source>Application::terminating()</source>
          <target state="translated">Application::terminating()</target>
        </trans-unit>
        <trans-unit id="b67bdf361db44115b068890c133e6a12d12418ab" translate="yes" xml:space="preserve">
          <source>Application::useAppPath()</source>
          <target state="translated">Application::useAppPath()</target>
        </trans-unit>
        <trans-unit id="246925db8b5a6ee1837ae49646e6a0581024a7a7" translate="yes" xml:space="preserve">
          <source>Application::useDatabasePath()</source>
          <target state="translated">Application::useDatabasePath()</target>
        </trans-unit>
        <trans-unit id="9c2239b5aa5acad84c84b0dadcfbf8ed9695ad83" translate="yes" xml:space="preserve">
          <source>Application::useEnvironmentPath()</source>
          <target state="translated">Application::useEnvironmentPath()</target>
        </trans-unit>
        <trans-unit id="5d991b913aefbcef28ba25e2e8e19b9053abd314" translate="yes" xml:space="preserve">
          <source>Application::useStoragePath()</source>
          <target state="translated">Application::useStoragePath()</target>
        </trans-unit>
        <trans-unit id="779ee6640809f8daa2c85ebddac5831b1524ec04" translate="yes" xml:space="preserve">
          <source>Application::version()</source>
          <target state="translated">Application::version()</target>
        </trans-unit>
        <trans-unit id="5c2f160e765f8859fc7436e9f2f197e0c9ea6937" translate="yes" xml:space="preserve">
          <source>Applied global scopes.</source>
          <target state="translated">应用的全球范围。</target>
        </trans-unit>
        <trans-unit id="7c0a02bea0467cc58e0fc5d6fdafebd31d25438c" translate="yes" xml:space="preserve">
          <source>Apply query-time casts to the model instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1232f2ee595fdbeec4067f088e1412149a08fe27" translate="yes" xml:space="preserve">
          <source>Apply the active states to the model definition array.</source>
          <target state="translated">将活动状态应用到模型定义数组中。</target>
        </trans-unit>
        <trans-unit id="ee0334854b3c5607d19698e7816bea2b7ec7a942" translate="yes" xml:space="preserve">
          <source>Apply the callback if the collection is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4744643f1fd0db3cfa93e08e1097675ed14aee7f" translate="yes" xml:space="preserve">
          <source>Apply the callback if the collection is not empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="312d8f9bb0dc3186c7d9171a8650cacfd7198a79" translate="yes" xml:space="preserve">
          <source>Apply the callback if the request contains a non-empty value for the given input item key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28cd400e99102fa2d3953420f233e8f6b2f7880c" translate="yes" xml:space="preserve">
          <source>Apply the callback if the request contains the given input item key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bd15e4f43d62944d12b8095e37bcb6c18629017" translate="yes" xml:space="preserve">
          <source>Apply the callback if the value is falsy.</source>
          <target state="translated">如果值是假的,则应用回调。</target>
        </trans-unit>
        <trans-unit id="3711863be678d8ebc33b3480dca9c3120a9cf84f" translate="yes" xml:space="preserve">
          <source>Apply the callback if the value is truthy.</source>
          <target state="translated">如果该值为truthhy,则应用回调。</target>
        </trans-unit>
        <trans-unit id="feeff03705a487ea46fd3bc6cff8c2b4ad5e534d" translate="yes" xml:space="preserve">
          <source>Apply the callback unless the collection is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="234bb4dd1b3798356219ee38be5982d843405563" translate="yes" xml:space="preserve">
          <source>Apply the callback unless the collection is not empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a38a2ef7d07fe05c932b7d1a0e4b6d3c4a88b05" translate="yes" xml:space="preserve">
          <source>Apply the callback's message changes if the given &quot;value&quot; is false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f095c2104c4312a1688ea7f238e2e4379c9c8a36" translate="yes" xml:space="preserve">
          <source>Apply the callback's message changes if the given &quot;value&quot; is true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fe3fadc51752fa0df039a2aa6715c0f7344be2e" translate="yes" xml:space="preserve">
          <source>Apply the callback's query changes if the given &quot;value&quot; is false.</source>
          <target state="translated">如果给定的 &quot;值 &quot;为假,则应用回调的查询变化。</target>
        </trans-unit>
        <trans-unit id="e9ddac0b5e1332cdb39cbc6cef7f68dda9d25819" translate="yes" xml:space="preserve">
          <source>Apply the callback's query changes if the given &quot;value&quot; is true.</source>
          <target state="translated">如果给定的 &quot;值 &quot;为真,则应用回调的查询变化。</target>
        </trans-unit>
        <trans-unit id="be3c45e1ebe78ab2e6e32d6f2c79e2dd842dc173" translate="yes" xml:space="preserve">
          <source>Apply the callback's string changes if the given &quot;value&quot; is true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d39d859bb68d6714edc828508a6cc838f1485a62" translate="yes" xml:space="preserve">
          <source>Apply the configured taps for the logger.</source>
          <target state="translated">为记录仪应用配置的拍子。</target>
        </trans-unit>
        <trans-unit id="b28ad2c02c67996ae5f21ba050fd86af3fc01ad8" translate="yes" xml:space="preserve">
          <source>Apply the given named scope if possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2c4b1ef406e3acca82dbde6a6d17c7bb99ed64b" translate="yes" xml:space="preserve">
          <source>Apply the given named scope on the current builder instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c762cb43b86f27b8ea6f37478572513e5ab33dfc" translate="yes" xml:space="preserve">
          <source>Apply the given regular expression to the given parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2329a092094b4a6031172b50f5fcf2f8889f77b" translate="yes" xml:space="preserve">
          <source>Apply the given scope on the current builder instance.</source>
          <target state="translated">将给定的作用域应用到当前的Builder实例上。</target>
        </trans-unit>
        <trans-unit id="c989fb0529d6d6cb343c8759d6151e951d91ef7d" translate="yes" xml:space="preserve">
          <source>Apply the scope to a given Eloquent query builder.</source>
          <target state="translated">将作用域应用于给定的Eloquent查询构建器。</target>
        </trans-unit>
        <trans-unit id="e2b14580e612108d53398984612fcd352ee5a112" translate="yes" xml:space="preserve">
          <source>Apply the scopes to the Eloquent builder instance and return it.</source>
          <target state="translated">将作用域应用于Eloquent builder实例并将其返回。</target>
        </trans-unit>
        <trans-unit id="1b2fe0904a56b110d35cc0e114cd337df5c604e3" translate="yes" xml:space="preserve">
          <source>Applying Global Scopes</source>
          <target state="translated">应用全球范围</target>
        </trans-unit>
        <trans-unit id="87700f2f7733be429e5fdded311b9a09812988c1" translate="yes" xml:space="preserve">
          <source>Applying States</source>
          <target state="translated">适用国家</target>
        </trans-unit>
        <trans-unit id="6eda4c543c1cef3ae46fbb1225b6463edecf122c" translate="yes" xml:space="preserve">
          <source>Approving The Request</source>
          <target state="translated">批准请求</target>
        </trans-unit>
        <trans-unit id="847562465bb8f685764cc265119fe88ba683430c" translate="yes" xml:space="preserve">
          <source>April 6th, 2021</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdbb4f6b1f47a666c99135c9581c3bc71bf00f2f" translate="yes" xml:space="preserve">
          <source>Argon2IdHasher</source>
          <target state="translated">Argon2IdHasher</target>
        </trans-unit>
        <trans-unit id="3dbab0af8289e0fb1c6635d6c04fe42270183797" translate="yes" xml:space="preserve">
          <source>Argon2IdHasher (Hashing)</source>
          <target state="translated">Argon2IdHasher (Hashing)</target>
        </trans-unit>
        <trans-unit id="8593dcf306082b2b99bb1f7440582f6ae005f0e4" translate="yes" xml:space="preserve">
          <source>Argon2IdHasher::algorithm()</source>
          <target state="translated">Argon2IdHasher::algorithm()</target>
        </trans-unit>
        <trans-unit id="622b863df0a09ffa694f45342d4f484b76e3cab8" translate="yes" xml:space="preserve">
          <source>Argon2IdHasher::check()</source>
          <target state="translated">Argon2IdHasher::check()</target>
        </trans-unit>
        <trans-unit id="3e39c0c7ca0c47db1db47175428b94506969732e" translate="yes" xml:space="preserve">
          <source>ArgonHasher</source>
          <target state="translated">ArgonHasher</target>
        </trans-unit>
        <trans-unit id="47df8c7f20ad99acc50d2d19fb613a4679c93342" translate="yes" xml:space="preserve">
          <source>ArgonHasher (Hashing)</source>
          <target state="translated">ArgonHasher (Hashher)</target>
        </trans-unit>
        <trans-unit id="0f15df341c8abdbf4396bac096584d2bc37d66d4" translate="yes" xml:space="preserve">
          <source>ArgonHasher::__construct()</source>
          <target state="translated">ArgonHasher::__construct()</target>
        </trans-unit>
        <trans-unit id="80f1d5e5d1b79315fd44f509cf836a4292ea1683" translate="yes" xml:space="preserve">
          <source>ArgonHasher::algorithm()</source>
          <target state="translated">ArgonHasher::algorithm()</target>
        </trans-unit>
        <trans-unit id="3c4819fa1620c60ca439807f3c58f19727039671" translate="yes" xml:space="preserve">
          <source>ArgonHasher::check()</source>
          <target state="translated">ArgonHasher::check()</target>
        </trans-unit>
        <trans-unit id="33eab82fe49f00ff291e0b96190b51f0b583de27" translate="yes" xml:space="preserve">
          <source>ArgonHasher::make()</source>
          <target state="translated">ArgonHasher::make()</target>
        </trans-unit>
        <trans-unit id="08c74267bae90a0e1414f99724a0b27aa56a9787" translate="yes" xml:space="preserve">
          <source>ArgonHasher::memory()</source>
          <target state="translated">ArgonHasher::memory()</target>
        </trans-unit>
        <trans-unit id="4b434ad802820d2b966eb9dccad4ab7efbbf119d" translate="yes" xml:space="preserve">
          <source>ArgonHasher::needsRehash()</source>
          <target state="translated">ArgonHasher::needsRehash()</target>
        </trans-unit>
        <trans-unit id="6248068298670b145e7c357405aad2204dcbaef2" translate="yes" xml:space="preserve">
          <source>ArgonHasher::setMemory()</source>
          <target state="translated">ArgonHasher::setMemory()</target>
        </trans-unit>
        <trans-unit id="b0255d11003e0fc793eddc754cbca7fe92b5b5b3" translate="yes" xml:space="preserve">
          <source>ArgonHasher::setThreads()</source>
          <target state="translated">ArgonHasher::setThreads()</target>
        </trans-unit>
        <trans-unit id="79f3f06b756cc85acab467f445896b52cc29ce9f" translate="yes" xml:space="preserve">
          <source>ArgonHasher::setTime()</source>
          <target state="translated">ArgonHasher::setTime()</target>
        </trans-unit>
        <trans-unit id="679baae4c9b0d28f337b8babfd4379733eb22a2e" translate="yes" xml:space="preserve">
          <source>ArgonHasher::threads()</source>
          <target state="translated">ArgonHasher::threads()</target>
        </trans-unit>
        <trans-unit id="a00fe6d40b6f3f2de8398801c7aaff6d6b75b428" translate="yes" xml:space="preserve">
          <source>ArgonHasher::time()</source>
          <target state="translated">ArgonHasher::time()</target>
        </trans-unit>
        <trans-unit id="cbb9fa252e60809efa55a7ad83aea5438ef56753" translate="yes" xml:space="preserve">
          <source>Arguments</source>
          <target state="translated">Arguments</target>
        </trans-unit>
        <trans-unit id="5e68d19490cd87ca4a54ccc3a50e5ecbff27e3f0" translate="yes" xml:space="preserve">
          <source>Arr</source>
          <target state="translated">Arr</target>
        </trans-unit>
        <trans-unit id="d14f07e09c8fb6deba2580a76adf6f569ee7043b" translate="yes" xml:space="preserve">
          <source>Arr (Support)</source>
          <target state="translated">Arr(支助)</target>
        </trans-unit>
        <trans-unit id="e4e61cec3a9c05759013e204d2435ef28b73c452" translate="yes" xml:space="preserve">
          <source>Arr::accessible()</source>
          <target state="translated">Arr::accessible()</target>
        </trans-unit>
        <trans-unit id="2edf712f272d1f21ea9cd9765795b515d4b992aa" translate="yes" xml:space="preserve">
          <source>Arr::add()</source>
          <target state="translated">Arr::add()</target>
        </trans-unit>
        <trans-unit id="f29619a049da0d79437eae0cc10e0fd9bd596fef" translate="yes" xml:space="preserve">
          <source>Arr::collapse()</source>
          <target state="translated">Arr::collapse()</target>
        </trans-unit>
        <trans-unit id="4592eeb4a3b971e35c2e6831d4d0d74e74ea3043" translate="yes" xml:space="preserve">
          <source>Arr::crossJoin()</source>
          <target state="translated">Arr::crossJoin()</target>
        </trans-unit>
        <trans-unit id="cd231794234dd94138926a6a2cf99a955141c3c2" translate="yes" xml:space="preserve">
          <source>Arr::divide()</source>
          <target state="translated">Arr::divide()</target>
        </trans-unit>
        <trans-unit id="257a91588df61589442dac5845d7d898309099a8" translate="yes" xml:space="preserve">
          <source>Arr::dot()</source>
          <target state="translated">Arr::dot()</target>
        </trans-unit>
        <trans-unit id="4fa73067e37da53ac0276adaaaa3f30dee09c576" translate="yes" xml:space="preserve">
          <source>Arr::except()</source>
          <target state="translated">Arr::except()</target>
        </trans-unit>
        <trans-unit id="103e5cf1c7a8e05b6c0d96497567ed1ff6bd7c21" translate="yes" xml:space="preserve">
          <source>Arr::exists()</source>
          <target state="translated">Arr::exists()</target>
        </trans-unit>
        <trans-unit id="78d0320f3812984628a4cfd168b52e7d1deb9271" translate="yes" xml:space="preserve">
          <source>Arr::explodePluckParameters()</source>
          <target state="translated">Arr::explodePluckParameters()</target>
        </trans-unit>
        <trans-unit id="a8a620b6b98f8d87a202c7be3a6d4c0be34381ca" translate="yes" xml:space="preserve">
          <source>Arr::first()</source>
          <target state="translated">Arr::first()</target>
        </trans-unit>
        <trans-unit id="bd5487c5ecce7e3a1a9f2bb391322d3d7b6a3e4b" translate="yes" xml:space="preserve">
          <source>Arr::flatten()</source>
          <target state="translated">Arr::flatten()</target>
        </trans-unit>
        <trans-unit id="504f8215f6599e4cd0049498c62d3edaded0d162" translate="yes" xml:space="preserve">
          <source>Arr::forget()</source>
          <target state="translated">Arr::forget()</target>
        </trans-unit>
        <trans-unit id="035da2d8a087a94f7703352845cc835385f9480c" translate="yes" xml:space="preserve">
          <source>Arr::get()</source>
          <target state="translated">Arr::get()</target>
        </trans-unit>
        <trans-unit id="efec61885065ac27b0d1f6fa269300d9295ff6dd" translate="yes" xml:space="preserve">
          <source>Arr::has()</source>
          <target state="translated">Arr::has()</target>
        </trans-unit>
        <trans-unit id="1dc32ff6ec8677bf548fa662e2500e9398560db0" translate="yes" xml:space="preserve">
          <source>Arr::hasAny()</source>
          <target state="translated">Arr::hasAny()</target>
        </trans-unit>
        <trans-unit id="3c1bae690296dc3a1623fc6a05246c7fc7ebd860" translate="yes" xml:space="preserve">
          <source>Arr::isAssoc()</source>
          <target state="translated">Arr::isAssoc()</target>
        </trans-unit>
        <trans-unit id="17c190057f2fbe3dff9934d39c762f823776d0e4" translate="yes" xml:space="preserve">
          <source>Arr::last()</source>
          <target state="translated">Arr::last()</target>
        </trans-unit>
        <trans-unit id="695057c671269fe4b70990aeeb25682f74ef1d67" translate="yes" xml:space="preserve">
          <source>Arr::only()</source>
          <target state="translated">Arr::only()</target>
        </trans-unit>
        <trans-unit id="a1b43500ced9654ee96bdb9f9a0143cd811464e7" translate="yes" xml:space="preserve">
          <source>Arr::pluck()</source>
          <target state="translated">Arr::pluck()</target>
        </trans-unit>
        <trans-unit id="cd8b7af8eede98172c001441986f44803ed20620" translate="yes" xml:space="preserve">
          <source>Arr::prepend()</source>
          <target state="translated">Arr::prepend()</target>
        </trans-unit>
        <trans-unit id="fe690513668c3d97e5ae7df0bb4ffa32c4f7db3e" translate="yes" xml:space="preserve">
          <source>Arr::pull()</source>
          <target state="translated">Arr::pull()</target>
        </trans-unit>
        <trans-unit id="7ccac9d36944b66ed9a888d173e33887a5852279" translate="yes" xml:space="preserve">
          <source>Arr::query()</source>
          <target state="translated">Arr::query()</target>
        </trans-unit>
        <trans-unit id="c480eb9b9b2fa2a5366428135bbfbf6429b9028f" translate="yes" xml:space="preserve">
          <source>Arr::random()</source>
          <target state="translated">Arr::random()</target>
        </trans-unit>
        <trans-unit id="9dae62df556404feee70d1119cc235df5fa1112b" translate="yes" xml:space="preserve">
          <source>Arr::set()</source>
          <target state="translated">Arr::set()</target>
        </trans-unit>
        <trans-unit id="da0d71a3ac61d2abff141c166effc856b27888b5" translate="yes" xml:space="preserve">
          <source>Arr::shuffle()</source>
          <target state="translated">Arr::shuffle()</target>
        </trans-unit>
        <trans-unit id="ea5a29753549a9e6574f2133d47c97304c63ed3d" translate="yes" xml:space="preserve">
          <source>Arr::sort()</source>
          <target state="translated">Arr::sort()</target>
        </trans-unit>
        <trans-unit id="1706fb0c6835f78b211464521e1ad4ec5f425011" translate="yes" xml:space="preserve">
          <source>Arr::sortRecursive()</source>
          <target state="translated">Arr::sortRecursive()</target>
        </trans-unit>
        <trans-unit id="fed395c8e8be02c9556639684677b1b1ef8f45d3" translate="yes" xml:space="preserve">
          <source>Arr::where()</source>
          <target state="translated">Arr::where()</target>
        </trans-unit>
        <trans-unit id="b52fc7889139a9165980e0baf1321cc5438da80d" translate="yes" xml:space="preserve">
          <source>Arr::wrap()</source>
          <target state="translated">Arr::wrap()</target>
        </trans-unit>
        <trans-unit id="1122c0a300fb0d261114087fee5f67b517221056" translate="yes" xml:space="preserve">
          <source>Array &amp;amp; JSON Casting</source>
          <target state="translated">数组和JSON转换</target>
        </trans-unit>
        <trans-unit id="6f5394afdddf2017287dfeba28ee177aaef2d77f" translate="yes" xml:space="preserve">
          <source>Array / JSON Serialization</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="801ea4cba7f668879ccd61d3e93eea6918104a04" translate="yes" xml:space="preserve">
          <source>Array of failed recipients.</source>
          <target state="translated">失败的收件人阵列。</target>
        </trans-unit>
        <trans-unit id="c17609136dbbee227095893718af833cbd365b0c" translate="yes" xml:space="preserve">
          <source>Array of footer lines to be added to template.</source>
          <target state="translated">要添加到模板的页脚行数组。</target>
        </trans-unit>
        <trans-unit id="45e9009fe3f1be64e19fa18bff4e2116244ef530" translate="yes" xml:space="preserve">
          <source>Array of opening and closing tags for escaped echos.</source>
          <target state="translated">逃逸回声的打开和关闭标签阵列。</target>
        </trans-unit>
        <trans-unit id="63e64f8729cabbb7faf2008edc910cd23437493e" translate="yes" xml:space="preserve">
          <source>Array of opening and closing tags for raw echos.</source>
          <target state="translated">原始回声的打开和关闭标签阵列。</target>
        </trans-unit>
        <trans-unit id="28c328778577fddfc2df4b2c6da5a76622f55f89" translate="yes" xml:space="preserve">
          <source>Array of opening and closing tags for regular echos.</source>
          <target state="translated">常规回声的开头和结尾标签阵列。</target>
        </trans-unit>
        <trans-unit id="ed1b8e1ce5edb32b8c95e4a6659cffd05914e85b" translate="yes" xml:space="preserve">
          <source>Array to temporary store the raw blocks found in the template.</source>
          <target state="translated">用于临时存储模板中发现的原始块的阵列。</target>
        </trans-unit>
        <trans-unit id="bade51302a664ab2a520072bfa7c7b1c99ef2837" translate="yes" xml:space="preserve">
          <source>ArrayInput</source>
          <target state="translated">ArrayInput</target>
        </trans-unit>
        <trans-unit id="41eb415c07831f366e7c8a298f4997f3beb0eb62" translate="yes" xml:space="preserve">
          <source>ArrayIterator</source>
          <target state="translated">ArrayIterator</target>
        </trans-unit>
        <trans-unit id="454cabc12562f84792f1a25911e52b68a904dcf0" translate="yes" xml:space="preserve">
          <source>ArrayLoader</source>
          <target state="translated">ArrayLoader</target>
        </trans-unit>
        <trans-unit id="a71f5684eb802f58ae927e22c0b9c79f1a08660c" translate="yes" xml:space="preserve">
          <source>ArrayLoader (Translation)</source>
          <target state="translated">ArrayLoader (翻译)</target>
        </trans-unit>
        <trans-unit id="70999955c14da7e2646a70de0f433062e176d989" translate="yes" xml:space="preserve">
          <source>ArrayLoader::addJsonPath()</source>
          <target state="translated">ArrayLoader::addJsonPath()</target>
        </trans-unit>
        <trans-unit id="0928dbfaeb230a10c7d965c1aacbf95d991faf38" translate="yes" xml:space="preserve">
          <source>ArrayLoader::addMessages()</source>
          <target state="translated">ArrayLoader::addMessages()</target>
        </trans-unit>
        <trans-unit id="057894440968de03927ef2b0636854272f78a4a0" translate="yes" xml:space="preserve">
          <source>ArrayLoader::addNamespace()</source>
          <target state="translated">ArrayLoader::addNamespace()</target>
        </trans-unit>
        <trans-unit id="87bcabe5616e7ffde1117ad306332dbb8bddc58e" translate="yes" xml:space="preserve">
          <source>ArrayLoader::load()</source>
          <target state="translated">ArrayLoader::load()</target>
        </trans-unit>
        <trans-unit id="0049e1af40272d8affc2546584bb9d7164114d4f" translate="yes" xml:space="preserve">
          <source>ArrayLoader::namespaces()</source>
          <target state="translated">ArrayLoader::namespaces()</target>
        </trans-unit>
        <trans-unit id="c847bf4318f02a0ac1aae1c5d449ef76e6f9379c" translate="yes" xml:space="preserve">
          <source>ArrayLock</source>
          <target state="translated">ArrayLock</target>
        </trans-unit>
        <trans-unit id="9cf5f7a15073392de36499d75f2b90940a03f617" translate="yes" xml:space="preserve">
          <source>ArrayLock (Cache)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a36907db0deb720f892b719e7cd32e6f99a7861e" translate="yes" xml:space="preserve">
          <source>ArrayLock::__construct()</source>
          <target state="translated">ArrayLock::__construct()</target>
        </trans-unit>
        <trans-unit id="7d9d54c4380cfd06ff70c9cfafd826ceb5cb2d1f" translate="yes" xml:space="preserve">
          <source>ArrayLock::acquire()</source>
          <target state="translated">ArrayLock::acquire()</target>
        </trans-unit>
        <trans-unit id="c3bdb8b254af71f7a7d13c5388ec2fe89e6e6dc5" translate="yes" xml:space="preserve">
          <source>ArrayLock::exists()</source>
          <target state="translated">ArrayLock::exists()</target>
        </trans-unit>
        <trans-unit id="0979c921cc5cf4d0e5a6c45e755d3f20860e0e3d" translate="yes" xml:space="preserve">
          <source>ArrayLock::forceRelease()</source>
          <target state="translated">ArrayLock::forceRelease()</target>
        </trans-unit>
        <trans-unit id="6c4f36ab3d4606b269228c095c82ca516be10149" translate="yes" xml:space="preserve">
          <source>ArrayLock::getCurrentOwner()</source>
          <target state="translated">ArrayLock::getCurrentOwner()</target>
        </trans-unit>
        <trans-unit id="dcdc0e897642e59851b080d0876417e70bf9d003" translate="yes" xml:space="preserve">
          <source>ArrayLock::release()</source>
          <target state="translated">ArrayLock::release()</target>
        </trans-unit>
        <trans-unit id="d4dd527b7e41c2ad60b39f33b1545c192f4b053f" translate="yes" xml:space="preserve">
          <source>ArraySessionHandler</source>
          <target state="translated">ArraySessionHandler</target>
        </trans-unit>
        <trans-unit id="a2510a844cb2b3052ff42c3446bc3404c918bf89" translate="yes" xml:space="preserve">
          <source>ArraySessionHandler (Session)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c39e03cc6c34bad79922c6fea270920adaf5750" translate="yes" xml:space="preserve">
          <source>ArraySessionHandler::__construct()</source>
          <target state="translated">ArraySessionHandler::__construct()</target>
        </trans-unit>
        <trans-unit id="9eaac2576864d478b7e880354c86067934d68578" translate="yes" xml:space="preserve">
          <source>ArraySessionHandler::calculateExpiration()</source>
          <target state="translated">ArraySessionHandler::calculateExpiration()</target>
        </trans-unit>
        <trans-unit id="46a1d7d9c8693901f5079ec0b11706508f904d4f" translate="yes" xml:space="preserve">
          <source>ArraySessionHandler::close()</source>
          <target state="translated">ArraySessionHandler::close()</target>
        </trans-unit>
        <trans-unit id="9d3eeed5f6bca459fc01e36f41ab32f03978e1e5" translate="yes" xml:space="preserve">
          <source>ArraySessionHandler::destroy()</source>
          <target state="translated">ArraySessionHandler::destroy()</target>
        </trans-unit>
        <trans-unit id="dd244e5283330853f8eb991e6261533a92239b04" translate="yes" xml:space="preserve">
          <source>ArraySessionHandler::gc()</source>
          <target state="translated">ArraySessionHandler::gc()</target>
        </trans-unit>
        <trans-unit id="c2ee042ea9576a457444658653f4690d48d7c051" translate="yes" xml:space="preserve">
          <source>ArraySessionHandler::open()</source>
          <target state="translated">ArraySessionHandler::open()</target>
        </trans-unit>
        <trans-unit id="c306ae7b6035f199de9a1b65efba6df276a1ff0e" translate="yes" xml:space="preserve">
          <source>ArraySessionHandler::read()</source>
          <target state="translated">ArraySessionHandler::read()</target>
        </trans-unit>
        <trans-unit id="a4bb7683563ff93b5896eb3f1ce2df75007f011d" translate="yes" xml:space="preserve">
          <source>ArraySessionHandler::write()</source>
          <target state="translated">ArraySessionHandler::write()</target>
        </trans-unit>
        <trans-unit id="1b2e390ef6a4f7ea6ec46cfa9d3bd5b39b96516e" translate="yes" xml:space="preserve">
          <source>ArrayStore</source>
          <target state="translated">ArrayStore</target>
        </trans-unit>
        <trans-unit id="fafb73faa0a39c431648bfcbc4c53ed94b1c920b" translate="yes" xml:space="preserve">
          <source>ArrayStore (Cache)</source>
          <target state="translated">阵列存储(缓存)</target>
        </trans-unit>
        <trans-unit id="0f76f13d27d58e13179b473c7c52bd0a966ef692" translate="yes" xml:space="preserve">
          <source>ArrayStore::__construct()</source>
          <target state="translated">ArrayStore::__construct()</target>
        </trans-unit>
        <trans-unit id="a31c8b9a0770709240ea7b43e051fae2b2f60e03" translate="yes" xml:space="preserve">
          <source>ArrayStore::calculateExpiration()</source>
          <target state="translated">ArrayStore::calculateExpiration()</target>
        </trans-unit>
        <trans-unit id="3d6874e29958cd2537ce695c16bd872b5fd093b1" translate="yes" xml:space="preserve">
          <source>ArrayStore::decrement()</source>
          <target state="translated">ArrayStore::decrement()</target>
        </trans-unit>
        <trans-unit id="4948aa5cec37607c2443e7fff7be759bbbce3119" translate="yes" xml:space="preserve">
          <source>ArrayStore::flush()</source>
          <target state="translated">ArrayStore::flush()</target>
        </trans-unit>
        <trans-unit id="6874902c9b38dbcf513b795e35bc51dcafc82bf2" translate="yes" xml:space="preserve">
          <source>ArrayStore::forever()</source>
          <target state="translated">ArrayStore::forever()</target>
        </trans-unit>
        <trans-unit id="7cf36327a9da6611653227039f605bafdfc18397" translate="yes" xml:space="preserve">
          <source>ArrayStore::forget()</source>
          <target state="translated">ArrayStore::forget()</target>
        </trans-unit>
        <trans-unit id="ab0d3ebd30c784ac31c1858b921683076e69a033" translate="yes" xml:space="preserve">
          <source>ArrayStore::get()</source>
          <target state="translated">ArrayStore::get()</target>
        </trans-unit>
        <trans-unit id="44b272422a9a784cf5e5bd1acba2a142a145f5ea" translate="yes" xml:space="preserve">
          <source>ArrayStore::getPrefix()</source>
          <target state="translated">ArrayStore::getPrefix()</target>
        </trans-unit>
        <trans-unit id="324b4d5aa9c1e626ca445a92e6cf07359ae5cb0e" translate="yes" xml:space="preserve">
          <source>ArrayStore::increment()</source>
          <target state="translated">ArrayStore::increment()</target>
        </trans-unit>
        <trans-unit id="7ddbdaab137796c857451b7d373f48f450e396ab" translate="yes" xml:space="preserve">
          <source>ArrayStore::lock()</source>
          <target state="translated">ArrayStore::lock()</target>
        </trans-unit>
        <trans-unit id="660f89a54bdb59030fdba93b0d0239749bb3a07d" translate="yes" xml:space="preserve">
          <source>ArrayStore::put()</source>
          <target state="translated">ArrayStore::put()</target>
        </trans-unit>
        <trans-unit id="e1e0cd8d9bbf83e812f0931fda6c9ebb6181f8d6" translate="yes" xml:space="preserve">
          <source>ArrayStore::restoreLock()</source>
          <target state="translated">ArrayStore::restoreLock()</target>
        </trans-unit>
        <trans-unit id="f98231a8f2014b9c73dfd2f0bbfd793ceb2d6cac" translate="yes" xml:space="preserve">
          <source>ArrayStore::toTimestamp()</source>
          <target state="translated">ArrayStore::toTimestamp()</target>
        </trans-unit>
        <trans-unit id="4affa554a5b1a50b19f50a90390316ac0552b957" translate="yes" xml:space="preserve">
          <source>ArraySubset</source>
          <target state="translated">ArraySubset</target>
        </trans-unit>
        <trans-unit id="ab9ad4f05377eda6febe0a0b592650952e4e1927" translate="yes" xml:space="preserve">
          <source>ArraySubset (Testing\Constraints)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e58869411be122b98371f8ef37ee53f7923d207" translate="yes" xml:space="preserve">
          <source>ArraySubset::__construct()</source>
          <target state="translated">ArraySubset::__construct()</target>
        </trans-unit>
        <trans-unit id="5824298428d50b4e50ab205d40552aedb549f7b8" translate="yes" xml:space="preserve">
          <source>ArraySubset::evaluate()</source>
          <target state="translated">ArraySubset::evaluate()</target>
        </trans-unit>
        <trans-unit id="b2720776e04cc3ff31d95541f745386ccb767b12" translate="yes" xml:space="preserve">
          <source>ArraySubset::failureDescription()</source>
          <target state="translated">ArraySubset::failureDescription()</target>
        </trans-unit>
        <trans-unit id="e266a329aad0e594a55f36e020f529e11853d3f4" translate="yes" xml:space="preserve">
          <source>ArraySubset::toString()</source>
          <target state="translated">ArraySubset::toString()</target>
        </trans-unit>
        <trans-unit id="834d6a95b15ebc052473de8f40c63eb61c7d407c" translate="yes" xml:space="preserve">
          <source>ArrayTransport</source>
          <target state="translated">ArrayTransport</target>
        </trans-unit>
        <trans-unit id="be4640bda872d0f6d2d6d8cef23c6c1d9aa12551" translate="yes" xml:space="preserve">
          <source>ArrayTransport (Mail\Transport)</source>
          <target state="translated">ArrayTransport (Mail\Transport)</target>
        </trans-unit>
        <trans-unit id="adb8c49aea3278de871eeef69dcc57bd2393d315" translate="yes" xml:space="preserve">
          <source>ArrayTransport::__construct()</source>
          <target state="translated">ArrayTransport::__construct()</target>
        </trans-unit>
        <trans-unit id="c93846aad6411fe5be5c0d52fce11c23c1acd36c" translate="yes" xml:space="preserve">
          <source>ArrayTransport::flush()</source>
          <target state="translated">ArrayTransport::flush()</target>
        </trans-unit>
        <trans-unit id="b04f63a54fe9d7a3d3d3d0f54965bf21b1e049c6" translate="yes" xml:space="preserve">
          <source>ArrayTransport::messages()</source>
          <target state="translated">ArrayTransport::messages()</target>
        </trans-unit>
        <trans-unit id="c453a0036fbbfe267d32a0093f04dd373dbcc1c2" translate="yes" xml:space="preserve">
          <source>ArrayTransport::send()</source>
          <target state="translated">ArrayTransport::send()</target>
        </trans-unit>
        <trans-unit id="251d6b9928688ee8472250abcd7d376e9f3b00b5" translate="yes" xml:space="preserve">
          <source>Arrayable</source>
          <target state="translated">Arrayable</target>
        </trans-unit>
        <trans-unit id="a2fc57de029e4faae1b34b264411dce1beca612a" translate="yes" xml:space="preserve">
          <source>Arrayable (Contracts)</source>
          <target state="translated">可阵列(合同)</target>
        </trans-unit>
        <trans-unit id="2d2186f05e90d1582bc1d56b9ef512e126150357" translate="yes" xml:space="preserve">
          <source>Arrayable::toArray()</source>
          <target state="translated">Arrayable::toArray()</target>
        </trans-unit>
        <trans-unit id="92d5eddca7f63611d722fc945d39e60443b61ab0" translate="yes" xml:space="preserve">
          <source>Arrays &amp;amp; Objects</source>
          <target state="translated">数组与对象</target>
        </trans-unit>
        <trans-unit id="fd2f8eb21db2a05d816e94b156d318b089ae4b3c" translate="yes" xml:space="preserve">
          <source>Artisan</source>
          <target state="translated">Artisan</target>
        </trans-unit>
        <trans-unit id="ee9a86c92f54745a42e3a568a1c93e11d4683a0c" translate="yes" xml:space="preserve">
          <source>Artisan (Support\Facades)</source>
          <target state="translated">工匠(支持/传真)</target>
        </trans-unit>
        <trans-unit id="5ebc52ccf6b288d562c34744722794123ad657c7" translate="yes" xml:space="preserve">
          <source>Artisan &lt;code&gt;serve&lt;/code&gt; Improvements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62da37fdf723d03369da1b35bb55cf0fe7f34caa" translate="yes" xml:space="preserve">
          <source>Artisan Console</source>
          <target state="translated">匠人控制台</target>
        </trans-unit>
        <trans-unit id="e2166a74dcb3ff6ea2c860d6036978360c0f6bc5" translate="yes" xml:space="preserve">
          <source>Artisan Test Runner</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f638dda8381c5e54161d1c923176ca6971c52f1a" translate="yes" xml:space="preserve">
          <source>Artisan dispatches three events when running commands: &lt;code&gt;Illuminate\Console\Events\ArtisanStarting&lt;/code&gt;, &lt;code&gt;Illuminate\Console\Events\CommandStarting&lt;/code&gt;, and &lt;code&gt;Illuminate\Console\Events\CommandFinished&lt;/code&gt;. The &lt;code&gt;ArtisanStarting&lt;/code&gt; event is dispatched immediately when Artisan starts running. Next, the &lt;code&gt;CommandStarting&lt;/code&gt; event is dispatched immediately before a command runs. Finally, the &lt;code&gt;CommandFinished&lt;/code&gt; event is dispatched once a command finishes executing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8374ea3ad6e3e78da1fd00a2304555c86b879912" translate="yes" xml:space="preserve">
          <source>Artisan is the command-line interface included with Laravel. It provides a number of helpful commands that can assist you while you build your application. To view a list of all available Artisan commands, you may use the &lt;code&gt;list&lt;/code&gt; command:</source>
          <target state="translated">Artisan是Laravel附带的命令行界面。它提供了许多有用的命令，可以在构建应用程序时为您提供帮助。要查看所有可用Artisan命令的 &lt;code&gt;list&lt;/code&gt; ，可以使用list命令：</target>
        </trans-unit>
        <trans-unit id="1a85f0617411e3d2085945991cbb33cf73eceee7" translate="yes" xml:space="preserve">
          <source>Artisan::getFacadeAccessor()</source>
          <target state="translated">Artisan::getFacadeAccessor()</target>
        </trans-unit>
        <trans-unit id="f6e886ccf65c2bb8ff6aae8ccba62153322a87fe" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider</source>
          <target state="translated">ArtisanServiceProvider</target>
        </trans-unit>
        <trans-unit id="4cb86f8fd97c6dd1a71e43d89278671a27284f40" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider (Foundation\Providers)</source>
          <target state="translated">ArtisanServiceProvider(基金会/Providers)</target>
        </trans-unit>
        <trans-unit id="3379911a3eddefc3a91c6e53200ffdb9324c53a9" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::provides()</source>
          <target state="translated">ArtisanServiceProvider::provides()</target>
        </trans-unit>
        <trans-unit id="731325da86c9780a11fcda9f3024632a9468ca9d" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::register()</source>
          <target state="translated">ArtisanServiceProvider::register()</target>
        </trans-unit>
        <trans-unit id="8693cfda280fc51b11e3642cd40251963b93c94f" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerAppNameCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerAppNameCommand()</target>
        </trans-unit>
        <trans-unit id="17ef1041489a227ec19dd12390494b49bf6aa2a2" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerAuthMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerAuthMakeCommand()</target>
        </trans-unit>
        <trans-unit id="7c004c0133c95ba2802312fed2ad5709ea4b6f18" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerCacheClearCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerCacheClearCommand()</target>
        </trans-unit>
        <trans-unit id="aaaca5d2648f3f80259f379743179111392ba5a1" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerCacheForgetCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerCacheForgetCommand()</target>
        </trans-unit>
        <trans-unit id="d1f7bad5c819210a60db18a69a7c95da1cd96919" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerCacheTableCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerCacheTableCommand()</target>
        </trans-unit>
        <trans-unit id="14db863aa2012c486f328133c07100ee45696b86" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerCastMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerCastMakeCommand()</target>
        </trans-unit>
        <trans-unit id="c028f08229929fb600836db4a7e9f822fa5068be" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerChannelMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerChannelMakeCommand()</target>
        </trans-unit>
        <trans-unit id="23e93dda39c7ebc8ae857047ed4ef7f19baef150" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerClearCompiledCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerClearCompiledCommand()</target>
        </trans-unit>
        <trans-unit id="99ecdf8eab33c355d1ace94618e8bef828abf4bd" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerClearResetsCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerClearResetsCommand()</target>
        </trans-unit>
        <trans-unit id="5505630f7f8ec7bac029ec0f00ce47fd37df41ca" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerCommands()</source>
          <target state="translated">ArtisanServiceProvider::registerCommands()</target>
        </trans-unit>
        <trans-unit id="cbdc8f0193e1af91e45c22af14c5d02a9af8badf" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerComponentMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerComponentMakeCommand()</target>
        </trans-unit>
        <trans-unit id="9ae41f764ccec624d92705b5fa0cb3b2385144d3" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerConfigCacheCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerConfigCacheCommand()</target>
        </trans-unit>
        <trans-unit id="57e9640b92e1b3ac791e8237a742dd4056072ac3" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerConfigClearCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerConfigClearCommand()</target>
        </trans-unit>
        <trans-unit id="d028db36df76a23f812c6ce88495310cec1802fa" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerConsoleMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerConsoleMakeCommand()</target>
        </trans-unit>
        <trans-unit id="cfd3d3691595a44642bd54ca2fedf05e5ee4544d" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerControllerMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerControllerMakeCommand()</target>
        </trans-unit>
        <trans-unit id="2e47790c2adfdfe47457b7289d04d666ff4522de" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerDbWipeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerDbWipeCommand()</target>
        </trans-unit>
        <trans-unit id="fc6359d1ce7185387f604ce50795649ff2fc93eb" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerDownCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerDownCommand()</target>
        </trans-unit>
        <trans-unit id="8aec2e775cef5e1e45ebbe11735758122b8d0615" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerEnvironmentCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerEnvironmentCommand()</target>
        </trans-unit>
        <trans-unit id="c3ca8e4465c230deff667f4518bcdbc998fe5e13" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerEventCacheCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerEventCacheCommand()</target>
        </trans-unit>
        <trans-unit id="a7858e6b62e26f2890bac9e038e26a1adc803b1c" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerEventClearCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerEventClearCommand()</target>
        </trans-unit>
        <trans-unit id="eaf224c4e7c4ac03841b514f063561d4c583c7e5" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerEventGenerateCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerEventGenerateCommand()</target>
        </trans-unit>
        <trans-unit id="3920c9a09e9534ec2161b1523a0acd2ac321e305" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerEventListCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerEventListCommand()</target>
        </trans-unit>
        <trans-unit id="8ae051dd9c3071470d7cb03a381b2a87ec1d15ef" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerEventMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerEventMakeCommand()</target>
        </trans-unit>
        <trans-unit id="851dae4b12ab60c6ec111892745b571e335f191f" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerExceptionMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerExceptionMakeCommand()</target>
        </trans-unit>
        <trans-unit id="ca90e8d1ac428577a4062ad6d3f8cecb6191573c" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerFactoryMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerFactoryMakeCommand()</target>
        </trans-unit>
        <trans-unit id="927cb2f52fb09423bead29b259f24961a1eebb34" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerJobMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerJobMakeCommand()</target>
        </trans-unit>
        <trans-unit id="b0110157ec5b6bbbc2776c8c3c09c325d3f9f593" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerKeyGenerateCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerKeyGenerateCommand()</target>
        </trans-unit>
        <trans-unit id="4b239bf3fb132f743a66a599405fc77b32bceae9" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerListenerMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerListenerMakeCommand()</target>
        </trans-unit>
        <trans-unit id="e1bf39ebe17f8a38fd3c95b34da5075802787ddc" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerMailMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerMailMakeCommand()</target>
        </trans-unit>
        <trans-unit id="4abde22335dcd0638a36f625640e3f594a536fc7" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerMiddlewareMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerMiddlewareMakeCommand()</target>
        </trans-unit>
        <trans-unit id="326a794f51954f4c7f343ce03cb4d1f65475ba72" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerMigrateCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerMigrateCommand()</target>
        </trans-unit>
        <trans-unit id="ad3fee6037239d34c5ba4a97689ce652bd2e0d55" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerMigrateFreshCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerMigrateFreshCommand()</target>
        </trans-unit>
        <trans-unit id="788f7f9390fee4916d90645640ee0e68668acb26" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerMigrateInstallCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerMigrateInstallCommand()</target>
        </trans-unit>
        <trans-unit id="d125d4ffff70d84f565f28a9800f622c6aa66c14" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerMigrateMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerMigrateMakeCommand()</target>
        </trans-unit>
        <trans-unit id="f379d5bd4e37604c27104b4e7d2b81974ac88248" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerMigrateRefreshCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerMigrateRefreshCommand()</target>
        </trans-unit>
        <trans-unit id="d00617957127b872899afe748e3972f734cb9e12" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerMigrateResetCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerMigrateResetCommand()</target>
        </trans-unit>
        <trans-unit id="19ea455154315293be1064281e2042df7e69492c" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerMigrateRollbackCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerMigrateRollbackCommand()</target>
        </trans-unit>
        <trans-unit id="1ab36d68611f4fd456958fd364bf1e764012f90f" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerMigrateStatusCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerMigrateStatusCommand()</target>
        </trans-unit>
        <trans-unit id="4abff54a062af1436b9e9c7f5a4c526b74d9f75c" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerModelMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerModelMakeCommand()</target>
        </trans-unit>
        <trans-unit id="144ee94da546ea97238a609c7b057cb73697a45b" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerNotificationMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerNotificationMakeCommand()</target>
        </trans-unit>
        <trans-unit id="8021a274e18bacd07cba793707b73480917c7cde" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerNotificationTableCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerNotificationTableCommand()</target>
        </trans-unit>
        <trans-unit id="dc4d3ac7423616bc82044bb43b6d96d5e8b03c5c" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerObserverMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerObserverMakeCommand()</target>
        </trans-unit>
        <trans-unit id="46c2082d6e47ee61bc7dc752aaecd7950bdf3fdf" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerOptimizeClearCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerOptimizeClearCommand()</target>
        </trans-unit>
        <trans-unit id="974528f286f12664412757e86075418055578a2f" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerOptimizeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerOptimizeCommand()</target>
        </trans-unit>
        <trans-unit id="f1ccb0655a004dc010683d8f93d33ea193458627" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerPackageDiscoverCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerPackageDiscoverCommand()</target>
        </trans-unit>
        <trans-unit id="ed9df41b1c126afd41867d8a02703a1a9d48facc" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerPolicyMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerPolicyMakeCommand()</target>
        </trans-unit>
        <trans-unit id="54ed83104f255f323fd94f3fd898eb04a66a007a" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerPresetCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerPresetCommand()</target>
        </trans-unit>
        <trans-unit id="5e1a58251abd9cee9c61ec5ed317186039a026cc" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerProviderMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerProviderMakeCommand()</target>
        </trans-unit>
        <trans-unit id="19cb7c8d55f09378bd364527917a66428c6dc9ba" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerQueueBatchesTableCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerQueueBatchesTableCommand()</target>
        </trans-unit>
        <trans-unit id="e3b2a4b9b8310abe9c89662024a3e922dbfc9711" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerQueueClearCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerQueueClearCommand()</target>
        </trans-unit>
        <trans-unit id="8d4bd71202104963773d824a33833ce51b7a592a" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerQueueFailedCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerQueueFailedCommand()</target>
        </trans-unit>
        <trans-unit id="b0050c002644e623589dae89ad9769ac25ab8006" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerQueueFailedTableCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerQueueFailedTableCommand()</target>
        </trans-unit>
        <trans-unit id="55f814f1deae6b62deab568fd7f250f809b43c96" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerQueueFlushCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerQueueFlushCommand()</target>
        </trans-unit>
        <trans-unit id="663797eb03b5bffb8bf46362e403d4fb1647cf5d" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerQueueForgetCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerQueueForgetCommand()</target>
        </trans-unit>
        <trans-unit id="73ba8b2d8d2df954ab09a1b5296ad8ec12dc0d4d" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerQueueListenCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerQueueListenCommand()</target>
        </trans-unit>
        <trans-unit id="2b6520fb330d82f2997c5d1024c8c02c28bb278f" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerQueueRestartCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerQueueRestartCommand()</target>
        </trans-unit>
        <trans-unit id="616d417f84701011e35526febb67aa360a563f2d" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerQueueRetryBatchCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerQueueRetryBatchCommand()</target>
        </trans-unit>
        <trans-unit id="3fc2aeeb8c6d32f4235556f06eb237d977455683" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerQueueRetryCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerQueueRetryCommand()</target>
        </trans-unit>
        <trans-unit id="93f65b594b61f7e15efb1631cecb9151ee873477" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerQueueTableCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerQueueTableCommand()</target>
        </trans-unit>
        <trans-unit id="2ec657607c73f7bf588d5cbf9664e1978ff701d7" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerQueueWorkCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerQueueWorkCommand()</target>
        </trans-unit>
        <trans-unit id="52e9340c6dc28f95010b0b161d48a36cfb0d0e2f" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerRequestMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerRequestMakeCommand()</target>
        </trans-unit>
        <trans-unit id="e09d13a596ed5729c7a03e897783d13ac4e89518" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerResourceMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerResourceMakeCommand()</target>
        </trans-unit>
        <trans-unit id="e1bd29620dd5f6afd7d627cc9f0711c7de10c21d" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerRouteCacheCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerRouteCacheCommand()</target>
        </trans-unit>
        <trans-unit id="34bee012fbdbfb62733f2654232d98c105b82e9f" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerRouteClearCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerRouteClearCommand()</target>
        </trans-unit>
        <trans-unit id="d3d9df45173d173170a69cb839dabfe3be8d604f" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerRouteListCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerRouteListCommand()</target>
        </trans-unit>
        <trans-unit id="c39cd8abbd614763bd5e463afa6da48d78bbb471" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerRuleMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerRuleMakeCommand()</target>
        </trans-unit>
        <trans-unit id="f6460ed6dd5b7d0cb04c215952db10f57da12ff1" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerScheduleFinishCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerScheduleFinishCommand()</target>
        </trans-unit>
        <trans-unit id="f7325e02bf5ef963f8217b0480fe51722d541633" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerScheduleRunCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerScheduleRunCommand()</target>
        </trans-unit>
        <trans-unit id="9cb291f6369b612dcebde6548d293c4712930e29" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerScheduleWorkCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerScheduleWorkCommand()</target>
        </trans-unit>
        <trans-unit id="7479962a105135ebebfc98c3c4b67b90aaed728f" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerSchemaDumpCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerSchemaDumpCommand()</target>
        </trans-unit>
        <trans-unit id="a6dd393a317978961c18049566c05a3e3ca1fbe2" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerSeedCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerSeedCommand()</target>
        </trans-unit>
        <trans-unit id="7fb5fe19a24237949fbe5d1d5302fa5b75ad3111" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerSeederMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerSeederMakeCommand()</target>
        </trans-unit>
        <trans-unit id="7d77ab957739d1670a690cb4e7a14a86b7aec295" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerServeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerServeCommand()</target>
        </trans-unit>
        <trans-unit id="03f37f24c4cb447f9d7a9d57f8fad6ad9ea2d739" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerSessionTableCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerSessionTableCommand()</target>
        </trans-unit>
        <trans-unit id="ec59a5ece46495962441b50088a355fef1c2aeea" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerStorageLinkCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerStorageLinkCommand()</target>
        </trans-unit>
        <trans-unit id="0d908d2a387887eb6c6105eaff8075555ec8f64f" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerStubPublishCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerStubPublishCommand()</target>
        </trans-unit>
        <trans-unit id="c19c80753dcb15b6d03537d6fd48e75ee6b3656d" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerTestMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerTestMakeCommand()</target>
        </trans-unit>
        <trans-unit id="3083a90a814db653ef44a70a718108795f1c30d0" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerUpCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerUpCommand()</target>
        </trans-unit>
        <trans-unit id="5211220ca80e55d1f936999d95742260c3759456" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerVendorPublishCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerVendorPublishCommand()</target>
        </trans-unit>
        <trans-unit id="a6a1bfdc83c9009bfba9fcf2f26a210fb988b346" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerViewCacheCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerViewCacheCommand()</target>
        </trans-unit>
        <trans-unit id="450ed6faa51e101a30124839ac5d9e793efa5e75" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerViewClearCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerViewClearCommand()</target>
        </trans-unit>
        <trans-unit id="f5d8c00d502a75947613de2efe27edef5f51034d" translate="yes" xml:space="preserve">
          <source>ArtisanStarting</source>
          <target state="translated">ArtisanStarting</target>
        </trans-unit>
        <trans-unit id="5ee981756c1078e5376d25e470b9396a14e5565f" translate="yes" xml:space="preserve">
          <source>ArtisanStarting (Console\Events)</source>
          <target state="translated">ArtisanStarting (Console/Events)</target>
        </trans-unit>
        <trans-unit id="5a2734e365cea000b3f909ca4f731ba9adf0e1c6" translate="yes" xml:space="preserve">
          <source>ArtisanStarting::__construct()</source>
          <target state="translated">ArtisanStarting::__construct()</target>
        </trans-unit>
        <trans-unit id="410e5e01b2f5f4a908f7dd9eadf0fcf7c7c6ac79" translate="yes" xml:space="preserve">
          <source>As an alternative to defining how many times a job may be attempted before it fails, you may define a time at which the job should timeout. This allows a job to be attempted any number of times within a given time frame. To define the time at which a job should timeout, add a &lt;code&gt;retryUntil&lt;/code&gt; method to your job class:</source>
          <target state="translated">作为定义作业在失败之前可以尝试多少次的替代方法，您可以定义作业应超时的时间。这允许在给定的时间范围内尝试任何次数的作业。要定义作业应超时的时间，请在您的作业类中添加 &lt;code&gt;retryUntil&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="92b7b927b26ed7a48fa74051d37dbdb09a308fae" translate="yes" xml:space="preserve">
          <source>As an alternative to mocking, you may use the &lt;code&gt;Bus&lt;/code&gt; facade's &lt;code&gt;fake&lt;/code&gt; method to prevent jobs from being dispatched. When using fakes, assertions are made after the code under test is executed:</source>
          <target state="translated">作为模拟的替代方法，您可以使用 &lt;code&gt;Bus&lt;/code&gt; Facade的 &lt;code&gt;fake&lt;/code&gt; 方法来防止作业被调度。使用伪造品时，将在执行被测代码之后做出断言：</target>
        </trans-unit>
        <trans-unit id="1983ca37f63f5cb94e706abb916fd0aed8e40a66" translate="yes" xml:space="preserve">
          <source>As an alternative to mocking, you may use the &lt;code&gt;Event&lt;/code&gt; facade's &lt;code&gt;fake&lt;/code&gt; method to prevent all event listeners from executing. You may then assert that events were dispatched and even inspect the data they received. When using fakes, assertions are made after the code under test is executed:</source>
          <target state="translated">作为模拟的替代方法，您可以使用 &lt;code&gt;Event&lt;/code&gt; 外观的 &lt;code&gt;fake&lt;/code&gt; 方法阻止所有事件侦听器执行。然后，您可以断言事件是已调度的，甚至可以检查事件接收到的数据。使用伪造品时，将在执行被测代码之后做出断言：</target>
        </trans-unit>
        <trans-unit id="1476928cd7c9743fb486eac8d3de874949314733" translate="yes" xml:space="preserve">
          <source>As an alternative to mocking, you may use the &lt;code&gt;Queue&lt;/code&gt; facade's &lt;code&gt;fake&lt;/code&gt; method to prevent jobs from being queued. You may then assert that jobs were pushed to the queue and even inspect the data they received. When using fakes, assertions are made after the code under test is executed:</source>
          <target state="translated">作为模拟的替代方法，您可以使用 &lt;code&gt;Queue&lt;/code&gt; 门面的 &lt;code&gt;fake&lt;/code&gt; 方法来防止作业排队。然后，您可以断言作业已被推送到队列，甚至检查了它们收到的数据。使用伪造品时，将在执行被测代码之后做出断言：</target>
        </trans-unit>
        <trans-unit id="b404613919475f3f4730b0f788ffeeb920e05b2f" translate="yes" xml:space="preserve">
          <source>As an example, let's modify the default &lt;code&gt;DatabaseSeeder&lt;/code&gt; class and add a database insert statement to the &lt;code&gt;run&lt;/code&gt; method:</source>
          <target state="translated">作为示例，让我们修改默认的 &lt;code&gt;DatabaseSeeder&lt;/code&gt; 类，并将数据库insert语句添加到 &lt;code&gt;run&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="cbc5541758a779b4f10bf184a684bc06604770e2" translate="yes" xml:space="preserve">
          <source>As an example, we will define a custom cast class that casts multiple model values into a single &lt;code&gt;Address&lt;/code&gt; value object. We will assume the &lt;code&gt;Address&lt;/code&gt; value has two public properties: &lt;code&gt;lineOne&lt;/code&gt; and &lt;code&gt;lineTwo&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18f09b8f6a729582cf7d39c9e55fd1dfcabf6343" translate="yes" xml:space="preserve">
          <source>As demonstrated in the example above, you are free to add additional constraints to relationships when querying them. However, use caution when chaining &lt;code&gt;orWhere&lt;/code&gt; clauses onto a relationship, as the &lt;code&gt;orWhere&lt;/code&gt; clauses will be logically grouped at the same level as the relationship constraint:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bb2571c90930f6ccdc6186c5e1f7c914af929a6" translate="yes" xml:space="preserve">
          <source>As discussed elsewhere, much of the decision to use contracts or facades will come down to personal taste and the tastes of your development team. Both contracts and facades can be used to create robust, well-tested Laravel applications. As long as you are keeping your class' responsibilities focused, you will notice very few practical differences between using contracts and facades.</source>
          <target state="translated">如同在其他地方所讨论的那样,使用合同或外墙的决定将取决于个人的品味和你的开发团队的品味.Contract和Facades都可以用来创建健壮的,经得起考验的Laravel应用程序.只要你把你的班级的责任集中在一起,你就会发现在使用合同和外墙之间没有什么实际的区别.</target>
        </trans-unit>
        <trans-unit id="fa68aa00185125b0e54ef76e69d203c73195c6f8" translate="yes" xml:space="preserve">
          <source>As discussed in this documentation, you can interact with these authentication services manually to build your application's own authentication layer. However, to help you get started more quickly, we have released free packages that provide robust, modern scaffolding of the entire authentication layer. These packages are &lt;a href=&quot;https://jetstream.laravel.com&quot;&gt;Laravel Jetstream&lt;/a&gt; and &lt;a href=&quot;https://github.com/laravel/fortify&quot;&gt;Laravel Fortify&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1688ddaa5cdef6bc2f64b360c092552cd8b0a517" translate="yes" xml:space="preserve">
          <source>As mentioned above, the &lt;code&gt;collect&lt;/code&gt; helper returns a new &lt;code&gt;Illuminate\Support\Collection&lt;/code&gt; instance for the given array. So, creating a collection is as simple as:</source>
          <target state="translated">如上所述， &lt;code&gt;collect&lt;/code&gt; 帮助器将为给定数组返回一个新的 &lt;code&gt;Illuminate\Support\Collection&lt;/code&gt; 实例。因此，创建集合非常简单：</target>
        </trans-unit>
        <trans-unit id="f6f1713bd16094e7a6fcf2728ca9e687ad45591f" translate="yes" xml:space="preserve">
          <source>As mentioned above, you may call any of the Redis commands on the &lt;code&gt;Redis&lt;/code&gt; facade. Laravel uses magic methods to pass the commands to the Redis server, so pass the arguments the Redis command expects:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4fb3bbfdffa9d233ba90ea74e896d8c3daa048d" translate="yes" xml:space="preserve">
          <source>As mentioned in the previous section, the &lt;code&gt;laravel/jetstream&lt;/code&gt; package's &lt;code&gt;php artisan jetstream:install&lt;/code&gt; command will create all of the views you need for authentication and place them in the &lt;code&gt;resources/views/auth&lt;/code&gt; directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95ccb0301c14c38943d59660bae4f3174520ac73" translate="yes" xml:space="preserve">
          <source>As mentioned in the previous section, the &lt;code&gt;php artisan make:auth&lt;/code&gt; command will create all of the views you need for authentication and place them in the &lt;code&gt;resources/views/auth&lt;/code&gt; directory.</source>
          <target state="translated">如上一节所述， &lt;code&gt;php artisan make:auth&lt;/code&gt; 命令将创建身份验证所需的所有视图，并将其放置在 &lt;code&gt;resources/views/auth&lt;/code&gt; 目录中。</target>
        </trans-unit>
        <trans-unit id="02eb7e9a5f820d0836793a838564e4d3ace9cad7" translate="yes" xml:space="preserve">
          <source>As mentioned previously, a route should be defined that will return a view instructing the user to click the email verification link that was emailed to them by Laravel. This view will be displayed to users when they try to access other parts of the application without verifying their email address first. Remember, the link is automatically emailed to the user as long as your &lt;code&gt;App\Models\User&lt;/code&gt; model implements the &lt;code&gt;MustVerifyEmail&lt;/code&gt; interface:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c067b940478df1f24bde7d4758fd400dca869116" translate="yes" xml:space="preserve">
          <source>As mentioned previously, to determine the table name of the relationship's joining table, Eloquent will join the two related model names in alphabetical order. However, you are free to override this convention. You may do so by passing a second argument to the &lt;code&gt;belongsToMany&lt;/code&gt; method:</source>
          <target state="translated">如前所述，为了确定关系的联接表的表名，Eloquent将按字母顺序联接两个相关的模型名。但是，您可以随意重写此约定。您可以通过将第二个参数传递给 &lt;code&gt;belongsToMany&lt;/code&gt; 方法来实现：</target>
        </trans-unit>
        <trans-unit id="151600c8a8e38dad2e96a23dcb7ba06238f099c6" translate="yes" xml:space="preserve">
          <source>As mentioned previously, within the &lt;code&gt;register&lt;/code&gt; method, you should only bind things into the &lt;a href=&quot;container&quot;&gt;service container&lt;/a&gt;. You should never attempt to register any event listeners, routes, or any other piece of functionality within the &lt;code&gt;register&lt;/code&gt; method. Otherwise, you may accidentally use a service that is provided by a service provider which has not loaded yet.</source>
          <target state="translated">如前所述，在 &lt;code&gt;register&lt;/code&gt; 方法中，您应该只将东西绑定到&lt;a href=&quot;container&quot;&gt;服务容器中&lt;/a&gt;。你不应该试图注册任何事件侦听器，路线，或内的任何其他部分的功能 &lt;code&gt;register&lt;/code&gt; 方法。否则，您可能会意外使用尚未加载的服务提供商提供的服务。</target>
        </trans-unit>
        <trans-unit id="d862b97d45d7a7a57183cd74a41eab54602ec2f5" translate="yes" xml:space="preserve">
          <source>As mentioned, Laravel 8's model factories contain first class support for relationships. So, assuming our &lt;code&gt;User&lt;/code&gt; model has a &lt;code&gt;posts&lt;/code&gt; relationship method, we may simply run the following code to generate a user with three posts:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efaf61419eecb8f737d7fa1f29b7d1db46329008" translate="yes" xml:space="preserve">
          <source>As noted above, soft deleted models will automatically be excluded from query results. However, you may force soft deleted models to appear in a result set using the &lt;code&gt;withTrashed&lt;/code&gt; method on the query:</source>
          <target state="translated">如上所述，软删除的模型将自动从查询结果中排除。但是，您可以使用查询的 &lt;code&gt;withTrashed&lt;/code&gt; 方法强制将软删除的模型显示在结果集中：</target>
        </trans-unit>
        <trans-unit id="4f25bd43e034df81d38d356bb4c7358b624469f1" translate="yes" xml:space="preserve">
          <source>As noted above, when retrieving attributes that are listed in your &lt;code&gt;$dates&lt;/code&gt; property, they will automatically be cast to &lt;a href=&quot;https://github.com/briannesbitt/Carbon&quot;&gt;Carbon&lt;/a&gt; instances, allowing you to use any of Carbon's methods on your attributes:</source>
          <target state="translated">如上所述，在检索 &lt;code&gt;$dates&lt;/code&gt; 属性中列出的属性时，它们将自动转换为&lt;a href=&quot;https://github.com/briannesbitt/Carbon&quot;&gt;Carbon&lt;/a&gt;实例，从而允许您对属性使用Carbon的任何方法：</target>
        </trans-unit>
        <trans-unit id="ed90fd82b9509b2eb508375a2ce8e76fb0ee92fc" translate="yes" xml:space="preserve">
          <source>As noted earlier, attributes from the intermediate table may be accessed on models using the &lt;code&gt;pivot&lt;/code&gt; attribute. However, you are free to customize the name of this attribute to better reflect its purpose within your application.</source>
          <target state="translated">如前所述，可以使用 &lt;code&gt;pivot&lt;/code&gt; 属性在模型上访问中间表的属性。但是，您可以自定义此属性的名称，以更好地在应用程序中反映其目的。</target>
        </trans-unit>
        <trans-unit id="2af8bbc11392474e2bebbe12d4e3b3796e815bc9" translate="yes" xml:space="preserve">
          <source>As of Laravel 5.7, these values will be cast to the corresponding PHP constants &lt;code&gt;INF&lt;/code&gt;, &lt;code&gt;-INF&lt;/code&gt;, and &lt;code&gt;NAN&lt;/code&gt;.</source>
          <target state="translated">从Laravel 5.7开始，这些值将强制转换为相应的PHP常量 &lt;code&gt;INF&lt;/code&gt; ， &lt;code&gt;-INF&lt;/code&gt; 和 &lt;code&gt;NAN&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2acc3ed0de2f87bd30b90ca9fa49ac43103bd06f" translate="yes" xml:space="preserve">
          <source>As previously discussed, some actions like &lt;code&gt;create&lt;/code&gt; may not require a model instance. In these situations, you may pass a class name to the &lt;code&gt;authorize&lt;/code&gt; method. The class name will be used to determine which policy to use when authorizing the action:</source>
          <target state="translated">如前所述，某些操作（如 &lt;code&gt;create&lt;/code&gt; 可能不需要模型实例。在这种情况下，您可以将类名传递给 &lt;code&gt;authorize&lt;/code&gt; 方法。类名称将用于确定授权操作时要使用的策略：</target>
        </trans-unit>
        <trans-unit id="2ac7adb04fd541c2cca2c3ada074c4adf02ea5be" translate="yes" xml:space="preserve">
          <source>As previously discussed, some actions like &lt;code&gt;create&lt;/code&gt; may not require a model instance. In these situations, you should pass a class name to the &lt;code&gt;authorize&lt;/code&gt; method. The class name will be used to determine which policy to use when authorizing the action:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="793af089f394fd7d563f903682900b36be26e4d8" translate="yes" xml:space="preserve">
          <source>As previously documented, you may protect routes so that all incoming requests must be authenticated by attaching the &lt;code&gt;sanctum&lt;/code&gt; authentication guard to the routes. Typically, you will attach this guard to the routes defined within your &lt;code&gt;routes/api.php&lt;/code&gt; file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c76e8a3058306699ffba4c8414be843b80d69a95" translate="yes" xml:space="preserve">
          <source>As previously mentioned, the &lt;code&gt;stack&lt;/code&gt; driver allows you to combine multiple channels into a single log channel. To illustrate how to use log stacks, let's take a look at an example configuration that you might see in a production application:</source>
          <target state="translated">如前所述， &lt;code&gt;stack&lt;/code&gt; 驱动程序允许您将多个通道合并为一个日志通道。为了说明如何使用日志堆栈，让我们看一下您可能在生产应用程序中看到的示例配置：</target>
        </trans-unit>
        <trans-unit id="38cd07caa575c92c5d25268721e7e0a6d4cd7bb6" translate="yes" xml:space="preserve">
          <source>As shown above, a &quot;date picker&quot; is an example of a component that might exist throughout your application on a variety of pages. It can become cumbersome to manually write the browser automation logic to select a date in dozens of tests throughout your test suite. Instead, we can define a Dusk component to represent the date picker, allowing us to encapsulate that logic within the component:</source>
          <target state="translated">如上图所示,&quot;日期选择器 &quot;是一个组件的例子,它可能存在于你的应用程序的各个页面上。在整个测试套件的几十个测试中手动编写浏览器自动化逻辑来选择日期可能会变得很麻烦。相反,我们可以定义一个Dusk组件来表示日期选择器,允许我们在组件中封装该逻辑。</target>
        </trans-unit>
        <trans-unit id="4e623d210f9677575c744c1648154ba09645e490" translate="yes" xml:space="preserve">
          <source>As this authorization grant does not provide a client secret, developers will need to generate a combination of a code verifier and a code challenge in order to request a token.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5c66b10f07248c9e5ec084320d0b4eab81e9dac" translate="yes" xml:space="preserve">
          <source>As useful as this feature may be, it's possible that your existing folder structure is already configured in a way you like. If this is the case, you may disable &lt;code&gt;url()&lt;/code&gt; rewriting like so:</source>
          <target state="translated">尽管此功能可能有用，但可能已经按照您喜欢的方式配置了现有的文件夹结构。在这种情况下，您可以像这样禁用 &lt;code&gt;url()&lt;/code&gt; 重写：</target>
        </trans-unit>
        <trans-unit id="605e0078c7666a3cdf7c1b5c936fa8eec618bdf0" translate="yes" xml:space="preserve">
          <source>As you build your application, you may accumulate more and more migrations over time. This can lead to your migration directory becoming bloated with potentially hundreds of migrations. If you would like, you may &quot;squash&quot; your migrations into a single SQL file. To get started, execute the &lt;code&gt;schema:dump&lt;/code&gt; command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb7ab32daa1a712aa9b4299a149c63f71a4da25a" translate="yes" xml:space="preserve">
          <source>As you build your application, you may accumulate more and more migrations over time. This can lead to your migration directory becoming bloated with potentially hundreds of migrations. If you're using MySQL or PostgreSQL, you may now &quot;squash&quot; your migrations into a single SQL file. To get started, execute the &lt;code&gt;schema:dump&lt;/code&gt; command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="461ecb39360a387cf0d0582574f806fda29f484d" translate="yes" xml:space="preserve">
          <source>As you can see in the example above, the &lt;code&gt;browse&lt;/code&gt; method accepts a callback. A browser instance will automatically be passed to this callback by Dusk and is the main object used to interact with and make assertions against your application.</source>
          <target state="translated">如您在上面的示例中看到的那样， &lt;code&gt;browse&lt;/code&gt; 方法接受回调。浏览器实例将由Dusk自动传递到此回调，并且是用于与您的应用程序进行交互并对其进行断言的主要对象。</target>
        </trans-unit>
        <trans-unit id="017918c55e3ba82f4e5d2b9a7a47c1fa58b1081e" translate="yes" xml:space="preserve">
          <source>As you can see in the example above, the callback passed to the &lt;code&gt;extend&lt;/code&gt; method should return an implementation of &lt;code&gt;Illuminate\Contracts\Auth\Guard&lt;/code&gt;. This interface contains a few methods you will need to implement to define a custom guard. Once your custom guard has been defined, you may use this guard in the &lt;code&gt;guards&lt;/code&gt; configuration of your &lt;code&gt;auth.php&lt;/code&gt; configuration file:</source>
          <target state="translated">如您在上面的示例中看到的那样，传递给 &lt;code&gt;extend&lt;/code&gt; 方法的回调应返回 &lt;code&gt;Illuminate\Contracts\Auth\Guard&lt;/code&gt; 。该接口包含一些您需要实现的方法来定义自定义防护。定义了自定义防护后，您可以在 &lt;code&gt;auth.php&lt;/code&gt; 配置文件的 &lt;code&gt;guards&lt;/code&gt; 配置中使用此防护：</target>
        </trans-unit>
        <trans-unit id="dcfff39822c4f4e84b38fc8b81a6248d4373b76f" translate="yes" xml:space="preserve">
          <source>As you can see, an array of &lt;code&gt;@servers&lt;/code&gt; is defined at the top of the file, allowing you to reference these servers in the &lt;code&gt;on&lt;/code&gt; option of your task declarations. The &lt;code&gt;@servers&lt;/code&gt; declaration should always be placed on a single line. Within your &lt;code&gt;@task&lt;/code&gt; declarations, you should place the Bash code that should run on your server when the task is executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41635a26ba069ccdddb4965faf42385813dfa4e6" translate="yes" xml:space="preserve">
          <source>As you can see, an array of &lt;code&gt;@servers&lt;/code&gt; is defined at the top of the file, allowing you to reference these servers in the &lt;code&gt;on&lt;/code&gt; option of your task declarations. Within your &lt;code&gt;@task&lt;/code&gt; declarations, you should place the Bash code that should run on your server when the task is executed.</source>
          <target state="translated">如您所见，在文件顶部定义了一个 &lt;code&gt;@servers&lt;/code&gt; 数组，允许您在任务声明的 &lt;code&gt;on&lt;/code&gt; 选项中引用这些服务器。在 &lt;code&gt;@task&lt;/code&gt; 声明中，应放置执行任务时应在服务器上运行的Bash代码。</target>
        </trans-unit>
        <trans-unit id="1f8554e948d2ae4a10d670539ac56b0b908dca3a" translate="yes" xml:space="preserve">
          <source>As you can see, if the given &lt;code&gt;age&lt;/code&gt; is less than or equal to &lt;code&gt;200&lt;/code&gt;, the middleware will return an HTTP redirect to the client; otherwise, the request will be passed further into the application. To pass the request deeper into the application (allowing the middleware to &quot;pass&quot;), call the &lt;code&gt;$next&lt;/code&gt; callback with the &lt;code&gt;$request&lt;/code&gt;.</source>
          <target state="translated">如您所见，如果给定的 &lt;code&gt;age&lt;/code&gt; 小于或等于 &lt;code&gt;200&lt;/code&gt; ，则中间件将向客户端返回HTTP重定向；否则，该请求将进一步传递到应用程序中。要将请求更深地传递到应用程序中（允许中间件&amp;ldquo;传递&amp;rdquo;），请使用 &lt;code&gt;$request&lt;/code&gt; 调用 &lt;code&gt;$next&lt;/code&gt; 回调。</target>
        </trans-unit>
        <trans-unit id="efb01ea7eeee1f09cad71ce257bd7ddbda675355" translate="yes" xml:space="preserve">
          <source>As you can see, in their most basic form, factories are classes that extend Laravel's base factory class and define a &lt;code&gt;model&lt;/code&gt; property and &lt;code&gt;definition&lt;/code&gt; method. The &lt;code&gt;definition&lt;/code&gt; method returns the default set of attribute values that should be applied when creating a model using the factory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a73bf820071b8e195e3864e911c7b78c179855b" translate="yes" xml:space="preserve">
          <source>As you can see, like &lt;a href=&quot;middleware&quot;&gt;route middleware&lt;/a&gt;, job middleware receive the job being processed and a callback that should be invoked to continue processing the job.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cf3e3151e041fc86eb160eee42370c96121a024" translate="yes" xml:space="preserve">
          <source>As you can see, passing a &lt;code&gt;Closure&lt;/code&gt; into the &lt;code&gt;where&lt;/code&gt; method instructs the query builder to begin a constraint group. The &lt;code&gt;Closure&lt;/code&gt; will receive a query builder instance which you can use to set the constraints that should be contained within the parenthesis group. The example above will produce the following SQL:</source>
          <target state="translated">正如你所看到的，传递一个 &lt;code&gt;Closure&lt;/code&gt; 到 &lt;code&gt;where&lt;/code&gt; 方法指示查询生成器，开始约束组。该 &lt;code&gt;Closure&lt;/code&gt; 会收到您可以使用设置应包含在括号组内的约束的查询生成器实例。上面的示例将产生以下SQL：</target>
        </trans-unit>
        <trans-unit id="e8dd2f9436bb6e6e605d89ced8f012c668786e3f" translate="yes" xml:space="preserve">
          <source>As you can see, the &lt;code&gt;Collection&lt;/code&gt; class allows you to chain its methods to perform fluent mapping and reducing of the underlying array. In general, collections are immutable, meaning every &lt;code&gt;Collection&lt;/code&gt; method returns an entirely new &lt;code&gt;Collection&lt;/code&gt; instance.</source>
          <target state="translated">如您所见， &lt;code&gt;Collection&lt;/code&gt; 类允许您链接其方法以执行流畅的映射和减少基础数组。通常，集合是不可变的，这意味着每个 &lt;code&gt;Collection&lt;/code&gt; 方法都返回一个全新的 &lt;code&gt;Collection&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="5357d27d3d8d1396b2bbf006d4c4f72c0bac8c23" translate="yes" xml:space="preserve">
          <source>As you can see, the first argument passed to the &lt;code&gt;view&lt;/code&gt; helper corresponds to the name of the view file in the &lt;code&gt;resources/views&lt;/code&gt; directory. The second argument is an array of data that should be made available to the view. In this case, we are passing the &lt;code&gt;name&lt;/code&gt; variable, which is displayed in the view using &lt;a href=&quot;blade&quot;&gt;Blade syntax&lt;/a&gt;.</source>
          <target state="translated">如您所见，传递给 &lt;code&gt;view&lt;/code&gt; 帮助器的第一个参数对应于 &lt;code&gt;resources/views&lt;/code&gt; 目录中视图文件的名称。第二个参数是应提供给视图的数据数组。在这种情况下，我们传递了 &lt;code&gt;name&lt;/code&gt; 变量，该名称变量使用&lt;a href=&quot;blade&quot;&gt;Blade语法&lt;/a&gt;显示在视图中。</target>
        </trans-unit>
        <trans-unit id="884f85a0db30d3dc9b4e4ebd183a81963dec423d" translate="yes" xml:space="preserve">
          <source>As you can see, the object being resolved will be passed to the callback, allowing you to set any additional properties on the object before it is given to its consumer.</source>
          <target state="translated">正如你所看到的,被解析的对象将被传递给回调,允许你在将对象交给它的消费者之前对其设置任何附加属性。</target>
        </trans-unit>
        <trans-unit id="f009023119db64e6ed30d4eee7c1f79469959f56" translate="yes" xml:space="preserve">
          <source>As you can see, the original value of the column is passed to the accessor, allowing you to manipulate and return the value. To access the value of the accessor, you may access the &lt;code&gt;first_name&lt;/code&gt; attribute on a model instance:</source>
          <target state="translated">如您所见，该列的原始值被传递给访问器，使您可以操纵并返回该值。要访问访问器的值，您可以访问模型实例上的 &lt;code&gt;first_name&lt;/code&gt; 属性：</target>
        </trans-unit>
        <trans-unit id="acff6853c7a663c9bd04fa87d502167650a0e4f7" translate="yes" xml:space="preserve">
          <source>As you can see, the relationship is defined exactly the same as its &lt;code&gt;User&lt;/code&gt; counterpart, with the exception of referencing the &lt;code&gt;App\Models\User&lt;/code&gt; model. Since we're reusing the &lt;code&gt;belongsToMany&lt;/code&gt; method, all of the usual table and key customization options are available when defining the inverse of many-to-many relationships.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a1c1e3f2e6f8f1dd6837adcc256d7d80deafb73" translate="yes" xml:space="preserve">
          <source>As you can see, the relationship is defined exactly the same as its &lt;code&gt;User&lt;/code&gt; counterpart, with the exception of referencing the &lt;code&gt;App\User&lt;/code&gt; model. Since we're reusing the &lt;code&gt;belongsToMany&lt;/code&gt; method, all of the usual table and key customization options are available when defining the inverse of many-to-many relationships.</source>
          <target state="translated">如您所见，除了引用 &lt;code&gt;App\User&lt;/code&gt; 模型之外，该关系的定义与其 &lt;code&gt;User&lt;/code&gt; 对应关系完全相同。由于我们正在重用 &lt;code&gt;belongsToMany&lt;/code&gt; 方法，因此在定义多对多关系的逆关系时，所有常用的表和键自定义选项均可用。</target>
        </trans-unit>
        <trans-unit id="72c166a419f06e385b3ce10c215eae795048a21f" translate="yes" xml:space="preserve">
          <source>As you can see, this event class contains no logic. It is a container for the &lt;code&gt;Order&lt;/code&gt; instance that was purchased. The &lt;code&gt;SerializesModels&lt;/code&gt; trait used by the event will gracefully serialize any Eloquent models if the event object is serialized using PHP's &lt;code&gt;serialize&lt;/code&gt; function.</source>
          <target state="translated">如您所见，该事件类不包含逻辑。它是已购买的 &lt;code&gt;Order&lt;/code&gt; 实例的容器。如果使用PHP的 &lt;code&gt;serialize&lt;/code&gt; 函数对事件对象进行了序列化，则事件使用的 &lt;code&gt;SerializesModels&lt;/code&gt; 特性将适当地序列化任何Eloquent模型。</target>
        </trans-unit>
        <trans-unit id="c5683a48d897119f71645ff1cb5e12ee4eab56f9" translate="yes" xml:space="preserve">
          <source>As you can see, this file contains typical HTML mark-up. However, take note of the &lt;code&gt;@section&lt;/code&gt; and &lt;code&gt;@yield&lt;/code&gt; directives. The &lt;code&gt;@section&lt;/code&gt; directive, as the name implies, defines a section of content, while the &lt;code&gt;@yield&lt;/code&gt; directive is used to display the contents of a given section.</source>
          <target state="translated">如您所见，该文件包含典型的HTML标记。但是，请注意 &lt;code&gt;@section&lt;/code&gt; 和 &lt;code&gt;@yield&lt;/code&gt; 指令。的 &lt;code&gt;@section&lt;/code&gt; 指令，如名称所暗示的，限定的内容的部分，而 &lt;code&gt;@yield&lt;/code&gt; 指令用于显示给定部分的内容。</target>
        </trans-unit>
        <trans-unit id="3ead9ed72883d0918ab47a662f9cb1d6101b3ae6" translate="yes" xml:space="preserve">
          <source>As you can see, we pass the desired validation rules into the &lt;code&gt;validate&lt;/code&gt; method. Again, if the validation fails, the proper response will automatically be generated. If the validation passes, our controller will continue executing normally.</source>
          <target state="translated">如您所见，我们将所需的验证规则传递给 &lt;code&gt;validate&lt;/code&gt; 方法。同样，如果验证失败，则会自动生成正确的响应。如果验证通过，我们的控制器将继续正常执行。</target>
        </trans-unit>
        <trans-unit id="049ad0eb8fe14b9d13f984d479eb6e4c3555c620" translate="yes" xml:space="preserve">
          <source>As you can see, we will chain the &lt;code&gt;format&lt;/code&gt; method onto whatever expression is passed into the directive. So, in this example, the final PHP generated by this directive will be:</source>
          <target state="translated">如您所见，我们将把 &lt;code&gt;format&lt;/code&gt; 方法链接到传递给指令的任何表达式上。因此，在此示例中，此指令生成的最终PHP将是：</target>
        </trans-unit>
        <trans-unit id="1fc15343a23abef64a94fcc501b60d2fe19c5a84" translate="yes" xml:space="preserve">
          <source>As you have already learned, working with many-to-many relations requires the presence of an intermediate table. Eloquent provides some very helpful ways of interacting with this table. For example, let's assume our &lt;code&gt;User&lt;/code&gt; object has many &lt;code&gt;Role&lt;/code&gt; objects that it is related to. After accessing this relationship, we may access the intermediate table using the &lt;code&gt;pivot&lt;/code&gt; attribute on the models:</source>
          <target state="translated">如您所知，处理多对多关系需要一个中间表。 Eloquent提供了一些与此表进行交互的非常有用的方法。例如，假设我们的 &lt;code&gt;User&lt;/code&gt; 对象具有许多与其相关的 &lt;code&gt;Role&lt;/code&gt; 对象。访问此关系后，我们可以使用模型上的 &lt;code&gt;pivot&lt;/code&gt; 属性访问中间表：</target>
        </trans-unit>
        <trans-unit id="3fc1402e1b6079206b56dbcdb39312ce2fead97e" translate="yes" xml:space="preserve">
          <source>As you have already read, resources may be returned directly from routes and controllers:</source>
          <target state="translated">正如你已经阅读过的,资源可以直接从路由和控制器返回。</target>
        </trans-unit>
        <trans-unit id="3aa0f21644f0500963f5eceb953d7d58b02ec778" translate="yes" xml:space="preserve">
          <source>As you may know, Laravel offers &lt;a href=&quot;homestead&quot;&gt;Homestead&lt;/a&gt;, another local Laravel development environment. Homestead and Valet differ in regards to their intended audience and their approach to local development. Homestead offers an entire Ubuntu virtual machine with automated Nginx configuration. Homestead is a wonderful choice if you want a fully virtualized Linux development environment or are on Windows / Linux.</source>
          <target state="translated">如您所知，Laravel提供了&lt;a href=&quot;homestead&quot;&gt;Homestead&lt;/a&gt;，这是另一个本地Laravel开发环境。霍姆斯特德（Homestead）和代客（Valet）在其目标受众和当地发展方式方面有所不同。 Homestead提供了具有自动Nginx配置的整个Ubuntu虚拟机。如果您想要完全虚拟化的Linux开发环境或在Windows / Linux上，Homestead是一个不错的选择。</target>
        </trans-unit>
        <trans-unit id="81218a9cd31de9f8af561025433c86a5485c370f" translate="yes" xml:space="preserve">
          <source>As you might expect, the view that is returned by this route should have a form containing a &lt;code&gt;password&lt;/code&gt; field. In addition, feel free to include text within the view that explains that the user is entering a protected area of the application and must confirm their password.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad4d8311d8cb7d9d0cc59cdcc6360394efa94c56" translate="yes" xml:space="preserve">
          <source>As you saw in the previous examples, you may pass an array of data to views:</source>
          <target state="translated">正如你在前面的例子中所看到的,你可以向视图传递一个数据数组。</target>
        </trans-unit>
        <trans-unit id="4112daed47d2e42285c67e8f15cec42e0e419017" translate="yes" xml:space="preserve">
          <source>AsPivot</source>
          <target state="translated">AsPivot</target>
        </trans-unit>
        <trans-unit id="c5584a5df0cbb3750b37679129e4ebc80312744d" translate="yes" xml:space="preserve">
          <source>AsPivot (Database\Eloquent\Relations)</source>
          <target state="translated">AsPivot (Database\Eloquent\Relations)</target>
        </trans-unit>
        <trans-unit id="d2bf9b2ade4d24c1f0aed3c25b0757ecfb492a34" translate="yes" xml:space="preserve">
          <source>AsPivot::delete()</source>
          <target state="translated">AsPivot::delete()</target>
        </trans-unit>
        <trans-unit id="1b464dd75af0d892e3aaefcc7339d6abf4821af8" translate="yes" xml:space="preserve">
          <source>AsPivot::fromAttributes()</source>
          <target state="translated">AsPivot::fromAttributes()</target>
        </trans-unit>
        <trans-unit id="831f9e7589e68bd619e7422f8b96b39a9b1f00dc" translate="yes" xml:space="preserve">
          <source>AsPivot::fromRawAttributes()</source>
          <target state="translated">AsPivot::fromRawAttributes()</target>
        </trans-unit>
        <trans-unit id="ba4c1a7da75a28fe6e3ee4a1897dd12808b719fe" translate="yes" xml:space="preserve">
          <source>AsPivot::getCreatedAtColumn()</source>
          <target state="translated">AsPivot::getCreatedAtColumn()</target>
        </trans-unit>
        <trans-unit id="008a50ba443f2ca1eb38d1db2d2a305ab9f39f3f" translate="yes" xml:space="preserve">
          <source>AsPivot::getDeleteQuery()</source>
          <target state="translated">AsPivot::getDeleteQuery()</target>
        </trans-unit>
        <trans-unit id="bf6a76496237e93bab34a8e26727a2ede0865d25" translate="yes" xml:space="preserve">
          <source>AsPivot::getForeignKey()</source>
          <target state="translated">AsPivot::getForeignKey()</target>
        </trans-unit>
        <trans-unit id="32cbeae7043336b4e28c311560641d8cbee64d36" translate="yes" xml:space="preserve">
          <source>AsPivot::getOtherKey()</source>
          <target state="translated">AsPivot::getOtherKey()</target>
        </trans-unit>
        <trans-unit id="87a7274a9b6c96a7529dc569ab323ee667f5a285" translate="yes" xml:space="preserve">
          <source>AsPivot::getQueueableId()</source>
          <target state="translated">AsPivot::getQueueableId()</target>
        </trans-unit>
        <trans-unit id="9e62d199893487c03702d492a60ecdc7934fc091" translate="yes" xml:space="preserve">
          <source>AsPivot::getRelatedKey()</source>
          <target state="translated">AsPivot::getRelatedKey()</target>
        </trans-unit>
        <trans-unit id="65f1ddb6bd578968eb517205fffb27028a8c6f44" translate="yes" xml:space="preserve">
          <source>AsPivot::getTable()</source>
          <target state="translated">AsPivot::getTable()</target>
        </trans-unit>
        <trans-unit id="8aa67aede09f6435334093f8ab47110742b4408e" translate="yes" xml:space="preserve">
          <source>AsPivot::getUpdatedAtColumn()</source>
          <target state="translated">AsPivot::getUpdatedAtColumn()</target>
        </trans-unit>
        <trans-unit id="dc273ed3b7a9855469e0899ce59269bafb32b088" translate="yes" xml:space="preserve">
          <source>AsPivot::hasTimestampAttributes()</source>
          <target state="translated">AsPivot::hasTimestampAttributes()</target>
        </trans-unit>
        <trans-unit id="693ed8fa7256bb62d731f4e8f86095fc7fd63147" translate="yes" xml:space="preserve">
          <source>AsPivot::newQueryForCollectionRestoration()</source>
          <target state="translated">AsPivot::newQueryForCollectionRestoration()</target>
        </trans-unit>
        <trans-unit id="6f759931305065503fb8d66c5e7a6bfe4542864d" translate="yes" xml:space="preserve">
          <source>AsPivot::newQueryForRestoration()</source>
          <target state="translated">AsPivot::newQueryForRestoration()</target>
        </trans-unit>
        <trans-unit id="344c94afffa4be8e508b7f2cfe5e2da44fdaaa92" translate="yes" xml:space="preserve">
          <source>AsPivot::setKeysForSaveQuery()</source>
          <target state="translated">AsPivot::setKeysForSaveQuery()</target>
        </trans-unit>
        <trans-unit id="8f0646e0d93123a0a342d1ecb7b789ea1a4fdaf4" translate="yes" xml:space="preserve">
          <source>AsPivot::setKeysForSelectQuery()</source>
          <target state="translated">AsPivot::setKeysForSelectQuery()</target>
        </trans-unit>
        <trans-unit id="43b0306882592104359a0c724826f018b5262483" translate="yes" xml:space="preserve">
          <source>AsPivot::setPivotKeys()</source>
          <target state="translated">AsPivot::setPivotKeys()</target>
        </trans-unit>
        <trans-unit id="03d822004a40cffb654d795e0fe23919d28e386c" translate="yes" xml:space="preserve">
          <source>AsPivot::unsetRelations()</source>
          <target state="translated">AsPivot::unsetRelations()</target>
        </trans-unit>
        <trans-unit id="4ca26d958914bcd4f93538017dc99c2508483e7b" translate="yes" xml:space="preserve">
          <source>Asking For Confirmation</source>
          <target state="translated">要求确认</target>
        </trans-unit>
        <trans-unit id="4141add45a26459c4bd39909388482311f6fe29a" translate="yes" xml:space="preserve">
          <source>Assert</source>
          <target state="translated">Assert</target>
        </trans-unit>
        <trans-unit id="0956d2d27a603a628c7c56dda24c6e23ed9d58bb" translate="yes" xml:space="preserve">
          <source>Assert (Testing)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15cd1c45e6ecc8d3758794753764f1784b212b47" translate="yes" xml:space="preserve">
          <source>Assert how many requests have been recorded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6656d3f3c1547dd16855219b84066b17da842c87" translate="yes" xml:space="preserve">
          <source>Assert if a batch was dispatched based on a truth-test callback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d0aed7b31da7174c1eadf2beb6ff59ea15f7ba1" translate="yes" xml:space="preserve">
          <source>Assert if a event was dispatched a number of times.</source>
          <target state="translated">断言一个事件是否被多次派发。</target>
        </trans-unit>
        <trans-unit id="7ee93d2adb126a5a89c0d01a3eadd6b581774193" translate="yes" xml:space="preserve">
          <source>Assert if a job was dispatched after the response was sent based on a truth-test callback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a79c4a356aae3eccc148427d289f366a05d6fc3" translate="yes" xml:space="preserve">
          <source>Assert if a job was dispatched based on a truth-test callback.</source>
          <target state="translated">断言一个作业是否是基于真理检验回调而派遣的。</target>
        </trans-unit>
        <trans-unit id="9d69ae68c13753b754da05f71a5d515579a6126f" translate="yes" xml:space="preserve">
          <source>Assert if a job was pushed a number of times.</source>
          <target state="translated">断言如果一项工作被推送多次。</target>
        </trans-unit>
        <trans-unit id="46ba85108681637660c121ebc6804e45f84fccf7" translate="yes" xml:space="preserve">
          <source>Assert if a job was pushed after the response was sent a number of times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca7d7ea3983f77b7b73480e2c0ffef4ab09b9336" translate="yes" xml:space="preserve">
          <source>Assert if a job was pushed based on a truth-test callback.</source>
          <target state="translated">断言一个作业是否是基于真理检验回调推送的。</target>
        </trans-unit>
        <trans-unit id="a8eba8d91ab6cbc249391e49293721f4eb487fec" translate="yes" xml:space="preserve">
          <source>Assert if a job was pushed with an empty chain based on a truth-test callback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c0a80fa419fbf4e257242f82867651a26ffda61" translate="yes" xml:space="preserve">
          <source>Assert if a job was pushed with chained jobs based on a truth-test callback.</source>
          <target state="translated">断言是否基于真理检验回调用链式作业推送了作业。</target>
        </trans-unit>
        <trans-unit id="bb6827902ec6d42610792110df12cdaff3f3c2f8" translate="yes" xml:space="preserve">
          <source>Assert if a mailable was queued a number of times.</source>
          <target state="translated">断言一个可邮件是否被排队多次。</target>
        </trans-unit>
        <trans-unit id="00f6eafbd088004c577184ac65b11a0bdf01a875" translate="yes" xml:space="preserve">
          <source>Assert if a mailable was queued based on a truth-test callback.</source>
          <target state="translated">断言一个可邮件是否是基于真理检验回调的队列。</target>
        </trans-unit>
        <trans-unit id="cbf4a336b7289ea144e4fc6d9923eb2138105062" translate="yes" xml:space="preserve">
          <source>Assert if a mailable was sent a number of times.</source>
          <target state="translated">断言一个可邮寄的邮件是否被多次发送。</target>
        </trans-unit>
        <trans-unit id="03df0f43d048755c441f63c46cc0e0555143e07a" translate="yes" xml:space="preserve">
          <source>Assert if a mailable was sent based on a truth-test callback.</source>
          <target state="translated">断言是否基于真理检验回调发送了一个可邮件。</target>
        </trans-unit>
        <trans-unit id="5745760224dfe0b4e7c730ec10bd16c75479db0e" translate="yes" xml:space="preserve">
          <source>Assert if a notification was sent a number of times.</source>
          <target state="translated">断言通知书是否被多次发送。</target>
        </trans-unit>
        <trans-unit id="7c88283ed0c980b9f8761dfee23223eedf712baf" translate="yes" xml:space="preserve">
          <source>Assert if a notification was sent based on a truth-test callback.</source>
          <target state="translated">断言是否基于真理检验回调发送了通知。</target>
        </trans-unit>
        <trans-unit id="ebafa56ab5d93a1f699590a3db89ced37296b50c" translate="yes" xml:space="preserve">
          <source>Assert if an event was dispatched a number of times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7ce459c712d55f649e9041b89fb300c8b782852" translate="yes" xml:space="preserve">
          <source>Assert if an event was dispatched based on a truth-test callback.</source>
          <target state="translated">断言一个事件是否是基于一个真理检验回调来派发的。</target>
        </trans-unit>
        <trans-unit id="409352841bc9635c3959e9348e017b11557e32a0" translate="yes" xml:space="preserve">
          <source>Assert that a JavaScript dialog with the given message has been opened:</source>
          <target state="translated">假设给定消息的JavaScript对话框已经打开。</target>
        </trans-unit>
        <trans-unit id="15d92fde31c3fd8a914a5ed1130bcbe994babf9c" translate="yes" xml:space="preserve">
          <source>Assert that a cookie has a given value:</source>
          <target state="translated">断言一个cookie有一个给定的值。</target>
        </trans-unit>
        <trans-unit id="4180fbf8f421b42f4f64dab2e7acf35b12dce89e" translate="yes" xml:space="preserve">
          <source>Assert that a given Vue component data property does not match the given value:</source>
          <target state="translated">断言给定的Vue组件数据属性与给定值不匹配。</target>
        </trans-unit>
        <trans-unit id="d2f315c33e142474c2a4405f93487305fb0638a1" translate="yes" xml:space="preserve">
          <source>Assert that a given Vue component data property is an array and contains the given value:</source>
          <target state="translated">断言一个给定的Vue组件数据属性是一个数组,并且包含给定的值。</target>
        </trans-unit>
        <trans-unit id="b1a8892ba541919b274196e30add5638c3a9d4b6" translate="yes" xml:space="preserve">
          <source>Assert that a given Vue component data property is an array and does not contain the given value:</source>
          <target state="translated">断言一个给定的Vue组件数据属性是一个数组,并且不包含给定的值。</target>
        </trans-unit>
        <trans-unit id="19a9653fed3aefec51c07a60734ef08bf9f77626" translate="yes" xml:space="preserve">
          <source>Assert that a given Vue component data property matches the given value:</source>
          <target state="translated">断言给定的Vue组件数据属性与给定值相匹配。</target>
        </trans-unit>
        <trans-unit id="071b262c0a157a44a9ae4a021c40447a2f34cf29" translate="yes" xml:space="preserve">
          <source>Assert that a given where condition does not exist in the database.</source>
          <target state="translated">断言给定的where条件在数据库中不存在。</target>
        </trans-unit>
        <trans-unit id="b608dd8d56a5d61e5a2f24ffdefec5feab556dc1" translate="yes" xml:space="preserve">
          <source>Assert that a given where condition exists in the database.</source>
          <target state="translated">断言数据库中存在一个给定的where条件。</target>
        </trans-unit>
        <trans-unit id="3e8cb15559cd4db695c493720defea550543e087" translate="yes" xml:space="preserve">
          <source>Assert that a request / response pair was not recorded matching a given truth test.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a541aab068510fc0bbb5baa68cb79b7741476a3" translate="yes" xml:space="preserve">
          <source>Assert that a request / response pair was recorded matching a given truth test.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e550ee55e4680d47aca89e3bfe103956dab15d2" translate="yes" xml:space="preserve">
          <source>Assert that a table in the database contains the given amount of entries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4346e04c62fa485f9eb63ca0ab9ef96c700dc201" translate="yes" xml:space="preserve">
          <source>Assert that a table in the database contains the given data.</source>
          <target state="translated">断言数据库中的一张表包含给定的数据。</target>
        </trans-unit>
        <trans-unit id="475bc14906a24b0717dde8464ed94208fa9f5ddc" translate="yes" xml:space="preserve">
          <source>Assert that a table in the database does not contain the given data.</source>
          <target state="translated">断言数据库中的某个表不包含给定的数据。</target>
        </trans-unit>
        <trans-unit id="50472bf80896129422ebd8f26db5fb6385280fd4" translate="yes" xml:space="preserve">
          <source>Assert that an encrypted cookie has a given value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="316221d4ecf8305705d9ad7fe97531700cc47120" translate="yes" xml:space="preserve">
          <source>Assert that an unencrypted cookie has a given value:</source>
          <target state="translated">断言一个未加密的cookie有一个给定的值。</target>
        </trans-unit>
        <trans-unit id="28401c105b5e8bfe2450974cfa646f7fedbd1f09" translate="yes" xml:space="preserve">
          <source>Assert that every created response sequence is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="695dc8771a30e822ee73091defad22b8f8b84429" translate="yes" xml:space="preserve">
          <source>Assert that no jobs were pushed.</source>
          <target state="translated">断言没有推送工作。</target>
        </trans-unit>
        <trans-unit id="fe38ab8929167784be20b406aa1cce183ec270d5" translate="yes" xml:space="preserve">
          <source>Assert that no mailables were queued.</source>
          <target state="translated">断言没有可邮寄的东西排队。</target>
        </trans-unit>
        <trans-unit id="d060f2ba48b8bbe827e9c660cbbb8d336f81fdce" translate="yes" xml:space="preserve">
          <source>Assert that no mailables were sent.</source>
          <target state="translated">声称没有发送可邮寄的邮件。</target>
        </trans-unit>
        <trans-unit id="25e05f8a8abc0401443456beb6f0822e1e32c8a9" translate="yes" xml:space="preserve">
          <source>Assert that no notifications were sent.</source>
          <target state="translated">声称没有发出通知。</target>
        </trans-unit>
        <trans-unit id="3f6a469a0e90d601709f3ea57e8aba1e889b5de7" translate="yes" xml:space="preserve">
          <source>Assert that no request / response pair was recorded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9c91682351dcca3e0f0a6f44ed269e9697c86ff" translate="yes" xml:space="preserve">
          <source>Assert that the command has the given exit code.</source>
          <target state="translated">断定该命令具有给定的退出代码。</target>
        </trans-unit>
        <trans-unit id="c3e708a6075025948858b69893fa640ed8206cfb" translate="yes" xml:space="preserve">
          <source>Assert that the current URL (without the query string) matches the given string:</source>
          <target state="translated">断言当前的URL(不含查询字符串)与给定的字符串相匹配。</target>
        </trans-unit>
        <trans-unit id="271ae967f40595136a950244a9103433ceab72ef" translate="yes" xml:space="preserve">
          <source>Assert that the current URL host does not match the given host:</source>
          <target state="translated">断言当前的URL主机与给定主机不匹配。</target>
        </trans-unit>
        <trans-unit id="f0a0a284e9e0b46bd22c45f70a90b5457b48d873" translate="yes" xml:space="preserve">
          <source>Assert that the current URL host matches the given host:</source>
          <target state="translated">断言当前的URL主机与给定的主机相匹配。</target>
        </trans-unit>
        <trans-unit id="8f843d9c0eae898e8311c53609a6896d1734f426" translate="yes" xml:space="preserve">
          <source>Assert that the current URL matches the given named route's URL:</source>
          <target state="translated">假设当前的URL与指定的命名途径的URL相匹配。</target>
        </trans-unit>
        <trans-unit id="15cfc4eb28c4d5e88d09ac1d6b0987be16a2303e" translate="yes" xml:space="preserve">
          <source>Assert that the current URL path begins with the given path:</source>
          <target state="translated">断言当前的URL路径以给定的路径开始。</target>
        </trans-unit>
        <trans-unit id="b120829e77cfa0fc5952451c690a8b937ceac3bb" translate="yes" xml:space="preserve">
          <source>Assert that the current URL port does not match the given port:</source>
          <target state="translated">断言当前的URL端口与给定的端口不匹配。</target>
        </trans-unit>
        <trans-unit id="3df3d981c8545c99f98d5bb89433bd8c30fa749f" translate="yes" xml:space="preserve">
          <source>Assert that the current URL port matches the given port:</source>
          <target state="translated">断言当前的URL端口与给定的端口相匹配。</target>
        </trans-unit>
        <trans-unit id="a08d74855853249df0318da947387d2a620acfbc" translate="yes" xml:space="preserve">
          <source>Assert that the current URL scheme does not match the given scheme:</source>
          <target state="translated">断言当前的URL方案与给定方案不匹配。</target>
        </trans-unit>
        <trans-unit id="e1af04d5f77ee2561f5c99269475d22d46be4796" translate="yes" xml:space="preserve">
          <source>Assert that the current URL scheme matches the given scheme:</source>
          <target state="translated">断言当前的URL方案与给定方案相匹配。</target>
        </trans-unit>
        <trans-unit id="ab0390737b8240c6c74c1a6ccf964f58ac49c0b8" translate="yes" xml:space="preserve">
          <source>Assert that the current fragment begins with the given fragment:</source>
          <target state="translated">断言当前片段从给定片段开始。</target>
        </trans-unit>
        <trans-unit id="58ff1c6bdf061d1d6b07771390030e27840ae9f1" translate="yes" xml:space="preserve">
          <source>Assert that the current fragment does not match the given fragment:</source>
          <target state="translated">断言当前片段与给定片段不匹配。</target>
        </trans-unit>
        <trans-unit id="9fa51cb9e065b3bcac49c2a1804c18a3218890a4" translate="yes" xml:space="preserve">
          <source>Assert that the current fragment matches the given fragment:</source>
          <target state="translated">断言当前片段与给定片段相匹配。</target>
        </trans-unit>
        <trans-unit id="2b9c2a0cd4b788f4a3d1faa9d9539ed51f290986" translate="yes" xml:space="preserve">
          <source>Assert that the current location header matches the given URI.</source>
          <target state="translated">断言当前的位置头符合给定的URI。</target>
        </trans-unit>
        <trans-unit id="165bacd63c22b76e7fd512e0946e8926b1b78269" translate="yes" xml:space="preserve">
          <source>Assert that the current path does not match the given path:</source>
          <target state="translated">断言当前路径与给定路径不匹配。</target>
        </trans-unit>
        <trans-unit id="b562ac8e0babaeef56680b153855c816e6fb61fc" translate="yes" xml:space="preserve">
          <source>Assert that the current path matches the given path:</source>
          <target state="translated">断言当前路径与给定路径相匹配。</target>
        </trans-unit>
        <trans-unit id="98821f466f13e327ded567e5d98ca7b4994159fa" translate="yes" xml:space="preserve">
          <source>Assert that the element matching the given selector has the given value in the provided aria attribute:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9851639630d652f7fe38e7de63f35c2963d0839" translate="yes" xml:space="preserve">
          <source>Assert that the element matching the given selector has the given value in the provided attribute:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6946d587c8e6a69335a7c38dd2305bed893fe1f7" translate="yes" xml:space="preserve">
          <source>Assert that the element matching the given selector has the given value in the provided data attribute:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e88d6dfe4a6357e417726cd941cd7190b587224a" translate="yes" xml:space="preserve">
          <source>Assert that the element matching the given selector has the given value:</source>
          <target state="translated">断言与给定选择器相匹配的元素具有给定值。</target>
        </trans-unit>
        <trans-unit id="abf02121baef70e0f7ee03bbd959617c6953e16a" translate="yes" xml:space="preserve">
          <source>Assert that the element matching the given selector is not visible:</source>
          <target state="translated">断言匹配给定选择器的元素不可见。</target>
        </trans-unit>
        <trans-unit id="df2eda525f43475a28f1057296319879d5584984" translate="yes" xml:space="preserve">
          <source>Assert that the element matching the given selector is present:</source>
          <target state="translated">断言匹配给定选择器的元素存在。</target>
        </trans-unit>
        <trans-unit id="81b17862cc48a0faa56bdd85c4a2d235f6da5e21" translate="yes" xml:space="preserve">
          <source>Assert that the element matching the given selector is visible:</source>
          <target state="translated">断言匹配给定选择器的元素是可见的。</target>
        </trans-unit>
        <trans-unit id="2c55ddb9e154910dd0305cf1085eb324179c9aba" translate="yes" xml:space="preserve">
          <source>Assert that the expected value and type exists at the given path in the response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a61d770a6510f86016fb95925fc199974368976" translate="yes" xml:space="preserve">
          <source>Assert that the given JavaScript expression evaluates to the given value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bbe5b40f24ba0470b7a60978bd743803c306f19" translate="yes" xml:space="preserve">
          <source>Assert that the given array of values are available to be selected:</source>
          <target state="translated">断言给定的数值数组是可以被选择的。</target>
        </trans-unit>
        <trans-unit id="b2bd97429e78ea18855645de1148986208b1b1c6" translate="yes" xml:space="preserve">
          <source>Assert that the given array of values are not available to be selected:</source>
          <target state="translated">断言给定的数值数组不能被选择。</target>
        </trans-unit>
        <trans-unit id="fe80fec5dc083a5319d9e6a48428f569c23bde26" translate="yes" xml:space="preserve">
          <source>Assert that the given button is disabled:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b75ab97db553802e678fad692cb163cd8902aeda" translate="yes" xml:space="preserve">
          <source>Assert that the given button is enabled:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fed60164c98d0550fed8025cd3a31aae0f6558c" translate="yes" xml:space="preserve">
          <source>Assert that the given checkbox is checked:</source>
          <target state="translated">假设给定的复选框被选中。</target>
        </trans-unit>
        <trans-unit id="923f1eea164ba5600119f7bc32642bf8764eb2b7" translate="yes" xml:space="preserve">
          <source>Assert that the given checkbox is not checked:</source>
          <target state="translated">假设给定的复选框没有被选中。</target>
        </trans-unit>
        <trans-unit id="a0323b39d464d185b7e088ec5547bb349bf544c1" translate="yes" xml:space="preserve">
          <source>Assert that the given cookie is not present:</source>
          <target state="translated">断言给定的cookie不存在。</target>
        </trans-unit>
        <trans-unit id="73e393a4c97942e3343abf109440f4af0933dc15" translate="yes" xml:space="preserve">
          <source>Assert that the given cookie is present:</source>
          <target state="translated">断言给定的cookie是存在的。</target>
        </trans-unit>
        <trans-unit id="db55b3e73673a3347e684b17fcc78ddfc8c5ce84" translate="yes" xml:space="preserve">
          <source>Assert that the given credentials are invalid.</source>
          <target state="translated">断言给定的凭证是无效的。</target>
        </trans-unit>
        <trans-unit id="0cacc22587178a7de3d2ebb1191d921d75550add" translate="yes" xml:space="preserve">
          <source>Assert that the given credentials are valid.</source>
          <target state="translated">断言给定的凭证是有效的。</target>
        </trans-unit>
        <trans-unit id="7c1e150ef05941dd101849606e63da1fe167fed3" translate="yes" xml:space="preserve">
          <source>Assert that the given dropdown does not have the given value selected:</source>
          <target state="translated">断言给定的下拉菜单没有选择给定的值。</target>
        </trans-unit>
        <trans-unit id="c605ef5048b7569a8d12d5c8649f2b88ff96d202" translate="yes" xml:space="preserve">
          <source>Assert that the given dropdown has the given value selected:</source>
          <target state="translated">断言给定的下拉菜单有给定的值被选中。</target>
        </trans-unit>
        <trans-unit id="3467169c52cf40060e57b1da02a194cb56ec8b7f" translate="yes" xml:space="preserve">
          <source>Assert that the given encrypted cookie is not present:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="559d3ce90ec760f307cbcd6040c7db20e4775c3d" translate="yes" xml:space="preserve">
          <source>Assert that the given encrypted cookie is present:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f83ace0ab97eccfe0fdd7c189f4a6f6e4125b1b" translate="yes" xml:space="preserve">
          <source>Assert that the given field is disabled:</source>
          <target state="translated">假设给定的字段被禁用。</target>
        </trans-unit>
        <trans-unit id="a49bf226c6ab9963077a750d5b1a4155340a5348" translate="yes" xml:space="preserve">
          <source>Assert that the given field is enabled:</source>
          <target state="translated">假设给定的字段已被启用。</target>
        </trans-unit>
        <trans-unit id="36406d3eb54904ef57eb42d8e54ff043424c90dc" translate="yes" xml:space="preserve">
          <source>Assert that the given field is focused:</source>
          <target state="translated">断言给定的领域是重点。</target>
        </trans-unit>
        <trans-unit id="578e59309695a103e96fe39b8682cd0afaf6389d" translate="yes" xml:space="preserve">
          <source>Assert that the given field is not focused:</source>
          <target state="translated">断言给定的领域不集中。</target>
        </trans-unit>
        <trans-unit id="661f0eeb91633bafb5ab08e452edfb2448869b81" translate="yes" xml:space="preserve">
          <source>Assert that the given file does not exist.</source>
          <target state="translated">假设给定的文件不存在。</target>
        </trans-unit>
        <trans-unit id="eb71de38de0282bbcac3ba5717d3671a48b535e9" translate="yes" xml:space="preserve">
          <source>Assert that the given file exists.</source>
          <target state="translated">断言给定的文件存在。</target>
        </trans-unit>
        <trans-unit id="14dc81f93c8ce40fd7bc99d6008e3ffa1c2f98de" translate="yes" xml:space="preserve">
          <source>Assert that the given header is not present on the response:</source>
          <target state="translated">断言给定的头在响应中不存在。</target>
        </trans-unit>
        <trans-unit id="33ae94b90dbac3de8450d8fc3451a459de497fda" translate="yes" xml:space="preserve">
          <source>Assert that the given header is present on the response:</source>
          <target state="translated">断言给定的头在响应中存在。</target>
        </trans-unit>
        <trans-unit id="6ce9b994bdf44875165b569384068143117e3fe8" translate="yes" xml:space="preserve">
          <source>Assert that the given input field does not have the given value:</source>
          <target state="translated">断言给定的输入字段没有给定的值。</target>
        </trans-unit>
        <trans-unit id="82276f7b4b3f6f3d6e1c962eb97b1adc8eb40839" translate="yes" xml:space="preserve">
          <source>Assert that the given input field has the given value:</source>
          <target state="translated">断言给定的输入字段具有给定的值。</target>
        </trans-unit>
        <trans-unit id="da379006873cce2f90962d7974f2ccbf18797713" translate="yes" xml:space="preserve">
          <source>Assert that the given link is not present on the page:</source>
          <target state="translated">断言给定的链接在页面上不存在。</target>
        </trans-unit>
        <trans-unit id="d524d1662c7a0d13e86a350f4f2b72080d33ee78" translate="yes" xml:space="preserve">
          <source>Assert that the given link is present on the page:</source>
          <target state="translated">断定页面上存在给定的链接。</target>
        </trans-unit>
        <trans-unit id="a0fbcfe673f80cd322a938a1b025befe842241b7" translate="yes" xml:space="preserve">
          <source>Assert that the given query string parameter is missing:</source>
          <target state="translated">断言给定的查询字符串参数缺失。</target>
        </trans-unit>
        <trans-unit id="3e315c57dc764079ba4ed8ed8e1657efff3695d2" translate="yes" xml:space="preserve">
          <source>Assert that the given query string parameter is present and has a given value:</source>
          <target state="translated">断言给定的查询字符串参数是存在的,并且有一个给定的值。</target>
        </trans-unit>
        <trans-unit id="37b92d423a6cb385f767ea510ae80fd01d4edb37" translate="yes" xml:space="preserve">
          <source>Assert that the given query string parameter is present:</source>
          <target state="translated">断言给定的查询字符串参数是存在的。</target>
        </trans-unit>
        <trans-unit id="10ed870ed63340f20c20cc2a3954ce99291d8ff8" translate="yes" xml:space="preserve">
          <source>Assert that the given radio field is not selected:</source>
          <target state="translated">断言给定的单选字段未被选中。</target>
        </trans-unit>
        <trans-unit id="22efd9a08ae8716f0188efdac5f77836406466b0" translate="yes" xml:space="preserve">
          <source>Assert that the given radio field is selected:</source>
          <target state="translated">假设给定的单选字段被选中。</target>
        </trans-unit>
        <trans-unit id="ac00db034fcb979114a51a19f595ee5c8904db23" translate="yes" xml:space="preserve">
          <source>Assert that the given record has been deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="587f4756d7df5d84ff4571f575ed1243590892d0" translate="yes" xml:space="preserve">
          <source>Assert that the given record has been soft deleted.</source>
          <target state="translated">断言给定记录已被软删除。</target>
        </trans-unit>
        <trans-unit id="a1bf76028f9ad9ee3bfbbb82c082bbb4c52163bc" translate="yes" xml:space="preserve">
          <source>Assert that the given source code is not present on the page:</source>
          <target state="translated">断言给定的源代码不在页面上。</target>
        </trans-unit>
        <trans-unit id="7447609879485837aed1921425e811cd0c5eeca1" translate="yes" xml:space="preserve">
          <source>Assert that the given source code is present on the page:</source>
          <target state="translated">断言给定的源代码存在于页面上。</target>
        </trans-unit>
        <trans-unit id="11b784daf14679319fa0629befac15963561c145" translate="yes" xml:space="preserve">
          <source>Assert that the given string is contained within the response text.</source>
          <target state="translated">断言给定的字符串包含在响应文本中。</target>
        </trans-unit>
        <trans-unit id="4e5630b7fb98bc7223673affdb3d71c1c6140ff5" translate="yes" xml:space="preserve">
          <source>Assert that the given string is contained within the response text. This assertion will automatically escape the given string unless you pass a second argument of &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5126e694ec9d4431ce1d61a268fdf5d8bdfb0b7f" translate="yes" xml:space="preserve">
          <source>Assert that the given string is contained within the response text:</source>
          <target state="translated">断言给定的字符串包含在响应文本中。</target>
        </trans-unit>
        <trans-unit id="870378821de0399751cd0b035872783a61acde0b" translate="yes" xml:space="preserve">
          <source>Assert that the given string is contained within the response.</source>
          <target state="translated">断言给定的字符串包含在响应中。</target>
        </trans-unit>
        <trans-unit id="42ede360d56ac5e134ae2a12b39862b52f9312b5" translate="yes" xml:space="preserve">
          <source>Assert that the given string is contained within the response. This assertion will automatically escape the given string unless you pass a second argument of &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69af5666288bab079b5efb4825bbd20b271c722f" translate="yes" xml:space="preserve">
          <source>Assert that the given string is contained within the response:</source>
          <target state="translated">断言给定的字符串包含在响应中。</target>
        </trans-unit>
        <trans-unit id="a9ea6d50a8e7fbf4ca77d3dcffbb32073cbaedec" translate="yes" xml:space="preserve">
          <source>Assert that the given string is contained within the view text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb102c3e02e23e8e599a0cc639841eca86dc2127" translate="yes" xml:space="preserve">
          <source>Assert that the given string is contained within the view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a77e4b5161b50a1b26d3bb40f8e71affac2d5d1d" translate="yes" xml:space="preserve">
          <source>Assert that the given string is not contained within the response text.</source>
          <target state="translated">断言给定的字符串不包含在响应文本中。</target>
        </trans-unit>
        <trans-unit id="b78a64f31c15c9ca0614b559f9a2a345fc5433f6" translate="yes" xml:space="preserve">
          <source>Assert that the given string is not contained within the response text. This assertion will automatically escape the given string unless you pass a second argument of &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dccde5b44670b3732b03dcdfb35cb109d64b286" translate="yes" xml:space="preserve">
          <source>Assert that the given string is not contained within the response text:</source>
          <target state="translated">断言给定的字符串不包含在响应文本中。</target>
        </trans-unit>
        <trans-unit id="36442623d3335257c0fa3bbdbbdab5dfb3a7b58f" translate="yes" xml:space="preserve">
          <source>Assert that the given string is not contained within the response.</source>
          <target state="translated">断言给定的字符串不包含在响应中。</target>
        </trans-unit>
        <trans-unit id="98bc724cc020dab70b210f5b6d18f2ecf701f084" translate="yes" xml:space="preserve">
          <source>Assert that the given string is not contained within the response. This assertion will automatically escape the given string unless you pass a second argument of &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb46d069dd86ae627726c0d78da3b4964530f740" translate="yes" xml:space="preserve">
          <source>Assert that the given string is not contained within the response:</source>
          <target state="translated">断言给定的字符串不包含在响应中。</target>
        </trans-unit>
        <trans-unit id="e06f19b2e8d1d822cffa6c6c6ad349afc4d872a8" translate="yes" xml:space="preserve">
          <source>Assert that the given string is not contained within the view text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45367370276aba2b75dc43bdb14e60b16d7435de" translate="yes" xml:space="preserve">
          <source>Assert that the given string is not contained within the view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d6e9ba206d8308c9fb72887b20c5d19b5a682dc" translate="yes" xml:space="preserve">
          <source>Assert that the given string or array of strings are contained within the response text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4abcbe6869e865c508c59832967c26b717d333e" translate="yes" xml:space="preserve">
          <source>Assert that the given string or array of strings are contained within the response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61042c8e24f07afbc9597a987359b4f7ba7a768c" translate="yes" xml:space="preserve">
          <source>Assert that the given string or array of strings are not contained within the response text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdf1b08983c7a6db60e168f3e7efc60c3cdde965" translate="yes" xml:space="preserve">
          <source>Assert that the given string or array of strings are not contained within the response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0151d47b3fbe7c8cc06de922a768c272c8284920" translate="yes" xml:space="preserve">
          <source>Assert that the given strings are contained in order within the response text.</source>
          <target state="translated">断言给定的字符串在响应文本中是按顺序包含的。</target>
        </trans-unit>
        <trans-unit id="5800d0006a4ad2a5fdf26f0310d37d1a66bede6f" translate="yes" xml:space="preserve">
          <source>Assert that the given strings are contained in order within the response text. This assertion will automatically escape the given strings unless you pass a second argument of &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84adff71eae2f4d8842da16f6fc05497a41df845" translate="yes" xml:space="preserve">
          <source>Assert that the given strings are contained in order within the response text:</source>
          <target state="translated">断言给定的字符串在响应文本中是按顺序包含的。</target>
        </trans-unit>
        <trans-unit id="a2459c6345a5fb75460fa8d43b1a516bb783e14f" translate="yes" xml:space="preserve">
          <source>Assert that the given strings are contained in order within the response.</source>
          <target state="translated">断言给定的字符串是按顺序包含在响应中的。</target>
        </trans-unit>
        <trans-unit id="7332f6c44a9e432da84bdc5e4294a4d94e922bf8" translate="yes" xml:space="preserve">
          <source>Assert that the given strings are contained in order within the response. This assertion will automatically escape the given strings unless you pass a second argument of &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a52f3773479db77a2733677b1a6dfcf5ffe8c47b" translate="yes" xml:space="preserve">
          <source>Assert that the given strings are contained in order within the response:</source>
          <target state="translated">断言给定的字符串是按顺序包含在响应中的。</target>
        </trans-unit>
        <trans-unit id="1f74ade5784fc4463452a338fa2cb09a0c389182" translate="yes" xml:space="preserve">
          <source>Assert that the given strings are contained in order within the view text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52eec0e5383cd029efecd9d4f165dcd05326e089" translate="yes" xml:space="preserve">
          <source>Assert that the given strings are contained in order within the view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f829b9f0b58caacf66aee28304bf5f0480cc021c" translate="yes" xml:space="preserve">
          <source>Assert that the given text is not present on the page:</source>
          <target state="translated">断言给定的文本在页面上不存在。</target>
        </trans-unit>
        <trans-unit id="457b2039596e2a1666ed4ed3ac0445923051c50a" translate="yes" xml:space="preserve">
          <source>Assert that the given text is not present within the selector:</source>
          <target state="translated">假设给定的文本不在选择器中。</target>
        </trans-unit>
        <trans-unit id="ecb9e736900897d23c6bcd0f13976788759162c9" translate="yes" xml:space="preserve">
          <source>Assert that the given text is present on the page:</source>
          <target state="translated">断言给定的文本存在于页面上。</target>
        </trans-unit>
        <trans-unit id="97a84c5c3c8d82919b16643973b60325f69626a1" translate="yes" xml:space="preserve">
          <source>Assert that the given text is present within the selector:</source>
          <target state="translated">假设给定的文本存在于选择器中。</target>
        </trans-unit>
        <trans-unit id="2f92f69d64516e3a80d7c7ccbfea867618d6394c" translate="yes" xml:space="preserve">
          <source>Assert that the given unencrypted cookie is not present:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb92a74b35f5fc3ad52edd343755bcc05eb96a68" translate="yes" xml:space="preserve">
          <source>Assert that the given unencrypted cookie is present:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fec119a153a09720647a32f79413c7bc9d915f0a" translate="yes" xml:space="preserve">
          <source>Assert that the given user is authenticated.</source>
          <target state="translated">断言给定的用户是经过认证的。</target>
        </trans-unit>
        <trans-unit id="dabd2cffa8146a072bc2219ff59eb38c875d4afe" translate="yes" xml:space="preserve">
          <source>Assert that the given value is available to be selected on the given field:</source>
          <target state="translated">断言给定的值可以在给定的字段上被选择。</target>
        </trans-unit>
        <trans-unit id="ca255932b64a7652738f93517bb196c75087a0d2" translate="yes" xml:space="preserve">
          <source>Assert that the given value is not available to be selected:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e6d9b3225c85cf7178c8c0de6964c93295ade55" translate="yes" xml:space="preserve">
          <source>Assert that the given view was returned by the route:</source>
          <target state="translated">断言给定的视图是由途径返回的。</target>
        </trans-unit>
        <trans-unit id="83dd02b82b525798b628cd338739a10ddc9d9811" translate="yes" xml:space="preserve">
          <source>Assert that the page title contains the given text:</source>
          <target state="translated">假设页面标题包含给定的文字。</target>
        </trans-unit>
        <trans-unit id="801dd7b43fa21f9d34ad9c245ac74ded6b474b66" translate="yes" xml:space="preserve">
          <source>Assert that the page title matches the given text:</source>
          <target state="translated">假设页面标题与给定的文本相匹配。</target>
        </trans-unit>
        <trans-unit id="e44cfe9adcf7852f44ba13db26e2c08f2eed062d" translate="yes" xml:space="preserve">
          <source>Assert that the response JSON has an array with the expected number of items at the given key:</source>
          <target state="translated">假设响应JSON有一个数组,在给定的键上有预期的项目数。</target>
        </trans-unit>
        <trans-unit id="b2a862ffa8b71005ae3bb3cc7d851830a625e4ce" translate="yes" xml:space="preserve">
          <source>Assert that the response JSON has the expected count of items at the given key.</source>
          <target state="translated">断言响应JSON在给定的键上有预期的项目数。</target>
        </trans-unit>
        <trans-unit id="5336a84fbf25e2021a0d232e35667ad4602870ff" translate="yes" xml:space="preserve">
          <source>Assert that the response contains an exact match of the given JSON data:</source>
          <target state="translated">断言响应包含了给定JSON数据的完全匹配。</target>
        </trans-unit>
        <trans-unit id="3ce919b2fba751c319e92267be1bf1146331afa3" translate="yes" xml:space="preserve">
          <source>Assert that the response contains the given JSON data:</source>
          <target state="translated">断言响应包含给定的JSON数据。</target>
        </trans-unit>
        <trans-unit id="63ae7215c96cb21a1ea5f4bbed4b14cf985533e1" translate="yes" xml:space="preserve">
          <source>Assert that the response contains the given JSON fragment.</source>
          <target state="translated">断言响应包含给定的JSON片段。</target>
        </trans-unit>
        <trans-unit id="5e7ab113412d7b4d95863059f14433437497b5f7" translate="yes" xml:space="preserve">
          <source>Assert that the response contains the given JSON fragment:</source>
          <target state="translated">断言响应包含给定的JSON片段。</target>
        </trans-unit>
        <trans-unit id="8815c98fc42f4ce5db81e308ae98b541e1305bb8" translate="yes" xml:space="preserve">
          <source>Assert that the response contains the given cookie (unencrypted):</source>
          <target state="translated">断言响应包含给定的cookie(未加密)。</target>
        </trans-unit>
        <trans-unit id="59255e887278683b783a9c36b6643a3508b6e7b0" translate="yes" xml:space="preserve">
          <source>Assert that the response contains the given cookie and it is expired:</source>
          <target state="translated">断定响应包含给定的cookie,并且已经过期。</target>
        </trans-unit>
        <trans-unit id="355033414607c817639f72722e02a5b135da1ee4" translate="yes" xml:space="preserve">
          <source>Assert that the response contains the given cookie and it is not expired:</source>
          <target state="translated">断言响应包含给定的cookie,并且没有过期。</target>
        </trans-unit>
        <trans-unit id="6560c446738409b66cdc2b19415dda7cfc650882" translate="yes" xml:space="preserve">
          <source>Assert that the response contains the given cookie:</source>
          <target state="translated">断言响应包含给定的cookie。</target>
        </trans-unit>
        <trans-unit id="10603ec329f0aba21adea9b8b3ed5b79cc40aa71" translate="yes" xml:space="preserve">
          <source>Assert that the response contains the given data at the specified path:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65167dd0c83227dacb49ba134cca5727dc355c27" translate="yes" xml:space="preserve">
          <source>Assert that the response does not contain the exact JSON fragment.</source>
          <target state="translated">断言响应不包含确切的JSON片段。</target>
        </trans-unit>
        <trans-unit id="018c41907b7be1b4874913a221b906d8e4af16e1" translate="yes" xml:space="preserve">
          <source>Assert that the response does not contain the exact JSON fragment:</source>
          <target state="translated">断言响应不包含确切的JSON片段。</target>
        </trans-unit>
        <trans-unit id="024a7efa350d568090d95b586a7eee9cc42d5938" translate="yes" xml:space="preserve">
          <source>Assert that the response does not contain the given JSON fragment.</source>
          <target state="translated">断言响应不包含给定的JSON片段。</target>
        </trans-unit>
        <trans-unit id="0aaf3de68b02ae7ad3794735fab972723feaa9bb" translate="yes" xml:space="preserve">
          <source>Assert that the response does not contain the given JSON fragment:</source>
          <target state="translated">断言响应不包含给定的JSON片段。</target>
        </trans-unit>
        <trans-unit id="c73ec795b1960308889b5daac2dfcfdf4034ba1b" translate="yes" xml:space="preserve">
          <source>Assert that the response does not contains the given cookie:</source>
          <target state="translated">断言响应不包含给定的cookie。</target>
        </trans-unit>
        <trans-unit id="de8459b45e1b8121652a36527b8234db32fe19ed" translate="yes" xml:space="preserve">
          <source>Assert that the response has a 200 status code.</source>
          <target state="translated">断言响应的状态码为200。</target>
        </trans-unit>
        <trans-unit id="022d6dcca83ed6e8546f9e9b97185dda84ecb898" translate="yes" xml:space="preserve">
          <source>Assert that the response has a 200 status code:</source>
          <target state="translated">断言响应的状态码为200。</target>
        </trans-unit>
        <trans-unit id="8c9593a07283726de3907d11c87d20fd86922170" translate="yes" xml:space="preserve">
          <source>Assert that the response has a 201 status code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8c63a1d371b33cb97170e1980388e21957b8154" translate="yes" xml:space="preserve">
          <source>Assert that the response has a 201 status code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="366552bc60e795895f5967d46c6289203a8c95af" translate="yes" xml:space="preserve">
          <source>Assert that the response has a forbidden (403) status code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d6023bfac0349e42ea8773a2250eec13e84f56f" translate="yes" xml:space="preserve">
          <source>Assert that the response has a forbidden status code.</source>
          <target state="translated">断言响应的状态码是禁止的。</target>
        </trans-unit>
        <trans-unit id="f2b8f3095af54a2b3eebd8044646ddb1ebbaadd4" translate="yes" xml:space="preserve">
          <source>Assert that the response has a forbidden status code:</source>
          <target state="translated">断言响应的状态码是禁止的。</target>
        </trans-unit>
        <trans-unit id="d048e4afabf601cf74701bf98a98138ad55f5fbe" translate="yes" xml:space="preserve">
          <source>Assert that the response has a given JSON structure.</source>
          <target state="translated">断定响应具有给定的JSON结构。</target>
        </trans-unit>
        <trans-unit id="17437cd65a5e741b7967caef6690b5511c5db6b0" translate="yes" xml:space="preserve">
          <source>Assert that the response has a given JSON structure:</source>
          <target state="translated">断定响应具有给定的JSON结构。</target>
        </trans-unit>
        <trans-unit id="f1f0163f51744224efef8414a9cd496cfee08e14" translate="yes" xml:space="preserve">
          <source>Assert that the response has a given code:</source>
          <target state="translated">断定响应有一个给定的代码。</target>
        </trans-unit>
        <trans-unit id="70ebddfd79a504d2cfeaf6b93d814934f16c70de" translate="yes" xml:space="preserve">
          <source>Assert that the response has a not found status code.</source>
          <target state="translated">断言响应的状态码为未找到。</target>
        </trans-unit>
        <trans-unit id="d982f84c237f47ba7858484dfa387f43037f83a7" translate="yes" xml:space="preserve">
          <source>Assert that the response has a not found status code:</source>
          <target state="translated">断言响应的状态码为未找到。</target>
        </trans-unit>
        <trans-unit id="fa000daec974ebc0f73b3db659e31b7d480f512e" translate="yes" xml:space="preserve">
          <source>Assert that the response has a successful (&amp;gt;= 200 and &amp;lt; 300) status code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c87b750ae7772fa4eb89a04725e00116dd1a4db3" translate="yes" xml:space="preserve">
          <source>Assert that the response has a successful status code.</source>
          <target state="translated">断言响应有一个成功的状态码。</target>
        </trans-unit>
        <trans-unit id="e8faeff0636552ff4fdf83e0e22f20b99f7a8b4e" translate="yes" xml:space="preserve">
          <source>Assert that the response has a successful status code:</source>
          <target state="translated">断言响应有一个成功的状态码。</target>
        </trans-unit>
        <trans-unit id="cb1378b9ca7b7fc45421a9790806d31956b77a6c" translate="yes" xml:space="preserve">
          <source>Assert that the response has an unauthorized (401) status code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65e1250069b926a611c06c72ae10f90531fa9eb7" translate="yes" xml:space="preserve">
          <source>Assert that the response has an unauthorized status code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b934b988342fcd1f113eaacd549a040d524d8f1f" translate="yes" xml:space="preserve">
          <source>Assert that the response has no JSON validation errors for the given keys.</source>
          <target state="translated">断言响应对于给定的键没有JSON验证错误。</target>
        </trans-unit>
        <trans-unit id="5c2e7b5e58b1d42d81adcf1bb80ff97b16a952c3" translate="yes" xml:space="preserve">
          <source>Assert that the response has no JSON validation errors for the given keys:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7980cf77d192333dc9ed9106c47abd0810bd1d2a" translate="yes" xml:space="preserve">
          <source>Assert that the response has the exact given JSON.</source>
          <target state="translated">断定响应有确切的给定JSON。</target>
        </trans-unit>
        <trans-unit id="bdabaf2b35245de5ec1e05b06e74c96778b33fac" translate="yes" xml:space="preserve">
          <source>Assert that the response has the given JSON validation errors for the given keys.</source>
          <target state="translated">断言响应对给定的键有给定的JSON验证错误。</target>
        </trans-unit>
        <trans-unit id="04210348bf62e983204c04b6c1e09ba52f85354c" translate="yes" xml:space="preserve">
          <source>Assert that the response has the given JSON validation errors for the given keys:</source>
          <target state="translated">断言响应对给定的键有给定的JSON验证错误。</target>
        </trans-unit>
        <trans-unit id="97048793b1eabe2e38588bebe0f7a443167a3176" translate="yes" xml:space="preserve">
          <source>Assert that the response has the given JSON validation errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ea3c5ecb3f19e6e61154397d0179c62c5cbbde7" translate="yes" xml:space="preserve">
          <source>Assert that the response has the given JSON validation errors:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f667c96292bdd82732cbded7186533579d27970c" translate="yes" xml:space="preserve">
          <source>Assert that the response has the given URI value in the &lt;code&gt;Location&lt;/code&gt; header:</source>
          <target state="translated">断言响应在 &lt;code&gt;Location&lt;/code&gt; 标头中具有给定的URI值：</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
