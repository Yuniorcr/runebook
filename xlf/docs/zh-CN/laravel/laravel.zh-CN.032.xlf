<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="laravel">
    <body>
      <group id="laravel">
        <trans-unit id="5ff2cd9cab28f5252f3d4d1ff4b3f1e9622673d2" translate="yes" xml:space="preserve">
          <source>In addition, you may return a &lt;a href=&quot;mail&quot;&gt;mailable object&lt;/a&gt; from the &lt;code&gt;toMail&lt;/code&gt; method:</source>
          <target state="translated">另外，您可以从 &lt;code&gt;toMail&lt;/code&gt; 方法返回可邮寄&lt;a href=&quot;mail&quot;&gt;对象&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="88bef26e55e118444f3ee4e6144be20d5030c3f3" translate="yes" xml:space="preserve">
          <source>In addition, you may return a full &lt;a href=&quot;mail&quot;&gt;mailable object&lt;/a&gt; from the &lt;code&gt;toMail&lt;/code&gt; method:</source>
          <target state="translated">另外，您可以从 &lt;code&gt;toMail&lt;/code&gt; 方法返回完整的可邮寄&lt;a href=&quot;mail&quot;&gt;对象&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="3ab4e253f9e90ef97191ae2279f2b17e9f2526c3" translate="yes" xml:space="preserve">
          <source>In addition, you may specify how many seconds Laravel should wait before retrying a job that has failed using the &lt;code&gt;--backoff&lt;/code&gt; option. By default, a job is retried immediately:</source>
          <target state="translated">另外，您可以使用 &lt;code&gt;--backoff&lt;/code&gt; 选项指定Laravel在重试失败的作业之前应等待的秒数。默认情况下，作业将立即重试：</target>
        </trans-unit>
        <trans-unit id="d9df1ac9ec080df44cd06e9895ee7e0dcb44e9bb" translate="yes" xml:space="preserve">
          <source>In addition, you may use any of the supported PHP versions via the CLI:</source>
          <target state="translated">此外,你可以通过CLI使用任何支持的PHP版本。</target>
        </trans-unit>
        <trans-unit id="940d35455685fcf6b53eefcf9fa8063d8d63dc4d" translate="yes" xml:space="preserve">
          <source>In addition, you may use the &lt;code&gt;loadMorphCount&lt;/code&gt; method to eager load all nested relationship counts on the various entities of the polymorphic relation if the &lt;code&gt;ActivityFeed&lt;/code&gt; models have already been retrieved:</source>
          <target state="translated">此外，如果已经检索到 &lt;code&gt;ActivityFeed&lt;/code&gt; 模型，则可以使用 &lt;code&gt;loadMorphCount&lt;/code&gt; 方法来将所有嵌套关系计数加载到多态关系的各个实体上：</target>
        </trans-unit>
        <trans-unit id="7d8f0f6562c9fad583d0b9654cdb2239a30ec27b" translate="yes" xml:space="preserve">
          <source>In addition, you may wish to generate UUIDs for your existing failed jobs:</source>
          <target state="translated">此外,您可能希望为您现有的失败作业生成UUID。</target>
        </trans-unit>
        <trans-unit id="a467432d5a1926b749486c5e1d117b79b914ef2f" translate="yes" xml:space="preserve">
          <source>In addition, you should enable the &lt;code&gt;withCredentials&lt;/code&gt; option on your global &lt;code&gt;axios&lt;/code&gt; instance. Typically, this should be performed in your &lt;code&gt;resources/js/bootstrap.js&lt;/code&gt; file:</source>
          <target state="translated">另外，您应该在全局 &lt;code&gt;axios&lt;/code&gt; 实例上启用 &lt;code&gt;withCredentials&lt;/code&gt; 选项。通常，这应该在您的 &lt;code&gt;resources/js/bootstrap.js&lt;/code&gt; 文件中执行：</target>
        </trans-unit>
        <trans-unit id="cb6791981c62ae200a3bfecb9d6a98ac681b5c3e" translate="yes" xml:space="preserve">
          <source>In certain cases, you may want to define a specific &quot;key&quot; that makes the job unique or you may want to specify a timeout beyond which the job no longer stays unique. To accomplish this, you may define &lt;code&gt;uniqueId&lt;/code&gt; and &lt;code&gt;uniqueFor&lt;/code&gt; properties or methods on your job class:</source>
          <target state="translated">在某些情况下，您可能想要定义一个使作业唯一的特定&amp;ldquo;键&amp;rdquo;，或者您可能希望指定一个超时，超过该超时，作业将不再保持唯一。要做到这一点，你可以定义 &lt;code&gt;uniqueId&lt;/code&gt; 和 &lt;code&gt;uniqueFor&lt;/code&gt; 你的工作类的属性或方法：</target>
        </trans-unit>
        <trans-unit id="57c89b12c0ecc324b3ab9654104213fd8fc0ea3f" translate="yes" xml:space="preserve">
          <source>In contrast to &lt;a href=&quot;#single-charges&quot;&gt;single charges&lt;/a&gt;, this method will immediately charge the customer's stored payment method for the subscription. The charge amount is always in the currency of which the subscription currently is set to.</source>
          <target state="translated">与&lt;a href=&quot;#single-charges&quot;&gt;单笔费用相比&lt;/a&gt;，此方法将立即向客户的预订存储方式收取费用。费用金额始终使用当前订阅所使用的货币。</target>
        </trans-unit>
        <trans-unit id="c070c83638f851abcbaee55dec8d3c1e5e09c883" translate="yes" xml:space="preserve">
          <source>In contrast to Stripe, Paddle users are unique across the whole of Paddle, not unique per Paddle account. Because of this, Paddle's API's do not currently provide a method to update a user's details such as their email address. When generating pay links, Paddle identifies users using the &lt;code&gt;customer_email&lt;/code&gt; parameter. When creating a subscription, Paddle will try to match the user provided email to an existing Paddle user.</source>
          <target state="translated">与Stripe相比，Paddle用户在整个Paddle中都是唯一的，而不是每个Paddle帐户都是唯一的。因此，Paddle的API当前不提供更新用户详细信息（例如其电子邮件地址）的方法。生成付款链接时，Paddle使用 &lt;code&gt;customer_email&lt;/code&gt; 参数标识用户。创建订阅时，Paddle将尝试将用户提供的电子邮件与现有的Paddle用户进行匹配。</target>
        </trans-unit>
        <trans-unit id="8aaebdb375ec527d7b5be490b38d3e98463668e8" translate="yes" xml:space="preserve">
          <source>In contrast, this statement would remove only caches tagged with &lt;code&gt;authors&lt;/code&gt;, so &lt;code&gt;Anne&lt;/code&gt; would be removed, but not &lt;code&gt;John&lt;/code&gt;:</source>
          <target state="translated">相反，此语句将仅删除标记有 &lt;code&gt;authors&lt;/code&gt; 的缓存，因此将删除 &lt;code&gt;Anne&lt;/code&gt; ，但不会删除 &lt;code&gt;John&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="8a82448c31f7932c1e26db1e0369773877acb5fa" translate="yes" xml:space="preserve">
          <source>In essence, resources are simple. They only need to transform a given model into an array. So, each resource contains a &lt;code&gt;toArray&lt;/code&gt; method which translates your model's attributes into an API friendly array that can be returned to your users:</source>
          <target state="translated">本质上，资源很简单。他们只需要将给定的模型转换为数组即可。因此，每个资源都包含一个 &lt;code&gt;toArray&lt;/code&gt; 方法，该方法将模型的属性转换为可返回给用户的API友好数组：</target>
        </trans-unit>
        <trans-unit id="38d881e39581e449a8e15c817e9449b8f069225a" translate="yes" xml:space="preserve">
          <source>In light of this behavior, there are some important things to keep in mind when using Cashier and Paddle. First, you should be aware that even though subscriptions in Cashier are tied to the same application user, &lt;strong&gt;they could be tied to different users within Paddle's internal systems&lt;/strong&gt;. Secondly, each subscription has its own connected payment method information and could also have different email addresses within Paddle's internal systems (depending on which email was assigned to the user when the subscription was created).</source>
          <target state="translated">鉴于这种行为，在使用Cashier和Paddle时要记住一些重要的事情。首先，您应该知道，即使Cashier中的订阅绑定到同一应用程序用户，&lt;strong&gt;它们也可能绑定到Paddle内部系统中的不同用户&lt;/strong&gt;。其次，每个订阅都有其自己的关联付款方式信息，并且在Paddle的内部系统中还可能具有不同的电子邮件地址（取决于创建订阅时分配给用户的电子邮件）。</target>
        </trans-unit>
        <trans-unit id="7043ade0b8934115fb7d17f2ae03dfa4b0808920" translate="yes" xml:space="preserve">
          <source>In many modern web applications, WebSockets are used to implement realtime, live-updating user interfaces. When some data is updated on the server, a message is typically sent over a WebSocket connection to be handled by the client. This provides a more robust, efficient alternative to continually polling your application for changes.</source>
          <target state="translated">在许多现代 Web 应用程序中,WebSocket 用于实现实时、实时更新的用户界面。当服务器上的某些数据更新时,通常会通过 WebSocket 连接发送一条消息,由客户端处理。这为持续轮询您的应用程序以获取更改提供了一个更强大、更高效的替代方案。</target>
        </trans-unit>
        <trans-unit id="c86e7d1b0f8bd2813a27bbf6bc2955a6cb8ca7c6" translate="yes" xml:space="preserve">
          <source>In most cases this won't impact applications that are being upgraded because your &lt;code&gt;RouteServiceProvider&lt;/code&gt; will still contain the &lt;code&gt;$namespace&lt;/code&gt; property with its previous value. However, if you upgrade your application by creating a brand new Laravel project, you may encounter this as a breaking change.</source>
          <target state="translated">在大多数情况下，这不会影响正在升级的应用程序，因为 &lt;code&gt;RouteServiceProvider&lt;/code&gt; 仍将包含 &lt;code&gt;$namespace&lt;/code&gt; 属性及其先前的值。但是，如果通过创建全新的Laravel项目升级应用程序，则可能会遇到重大变化。</target>
        </trans-unit>
        <trans-unit id="710752a704aa3cb5874d2eb8a186bb31779e55c3" translate="yes" xml:space="preserve">
          <source>In most cases, you will probably specify your custom messages in a language file instead of passing them directly to the &lt;code&gt;Validator&lt;/code&gt;. To do so, add your messages to &lt;code&gt;custom&lt;/code&gt; array in the &lt;code&gt;resources/lang/xx/validation.php&lt;/code&gt; language file.</source>
          <target state="translated">在大多数情况下，您可能会在语言文件中指定自定义消息，而不是将其直接传递给 &lt;code&gt;Validator&lt;/code&gt; 。为此，请将您的消息添加到 &lt;code&gt;resources/lang/xx/validation.php&lt;/code&gt; 语言文件中的 &lt;code&gt;custom&lt;/code&gt; 数组。</target>
        </trans-unit>
        <trans-unit id="8057495462b005a65ff7b0a98a999bad9d271553" translate="yes" xml:space="preserve">
          <source>In most situations, you likely intend to use &lt;a href=&quot;queries#parameter-grouping&quot;&gt;constraint groups&lt;/a&gt; to logically group the conditional checks between parentheses:</source>
          <target state="translated">在大多数情况下，您可能打算使用&lt;a href=&quot;queries#parameter-grouping&quot;&gt;约束组&lt;/a&gt;对括号之间的条件检查进行逻辑分组：</target>
        </trans-unit>
        <trans-unit id="d005364019b78dfd8ac41563121cc11e236a83cf" translate="yes" xml:space="preserve">
          <source>In order to authenticate, your SPA and API must share the same top-level domain. However, they may be placed on different subdomains.</source>
          <target state="translated">为了验证,您的SPA和API必须共享同一个顶级域。然而,它们可能被放置在不同的子域上。</target>
        </trans-unit>
        <trans-unit id="a0f6c9f35605ae02f164b10732ffb2c33df57d4d" translate="yes" xml:space="preserve">
          <source>In order to create subscriptions or perform &quot;one off&quot; charges with Stripe, you will need to store a payment method and retrieve its identifier from Stripe. The approach used to accomplish differs based on whether you plan to use the payment method for subscriptions or single charges, so we will examine both below.</source>
          <target state="translated">为了使用Stripe创建订阅或执行 &quot;一次性 &quot;收费,您需要存储一个支付方式,并从Stripe中检索其标识符。根据您是打算将支付方式用于订阅还是一次性收费,完成的方法有所不同,所以我们将在下文中对这两种方法进行研究。</target>
        </trans-unit>
        <trans-unit id="bc06cd4f0952e5a5b1a3d1eaf40e892997f12211" translate="yes" xml:space="preserve">
          <source>In order to ensure your subdomain routes are reachable, you should register subdomain routes before registering root domain routes. This will prevent root domain routes from overwriting subdomain routes which have the same URI path.</source>
          <target state="translated">为了保证子域路由的可到达性,应该在注册根域路由之前先注册子域路由,这样可以防止根域路由覆盖相同URI路径的子域路由。这样可以防止根域路由覆盖具有相同URI路径的子域路由。</target>
        </trans-unit>
        <trans-unit id="0e8462f41ca33b426d0dce2d84bd2925fd9b3ae8" translate="yes" xml:space="preserve">
          <source>In order to make this more convenient, you may use the &lt;code&gt;mock&lt;/code&gt; method, which is provided by Laravel's base test case class:</source>
          <target state="translated">为了使此操作更加方便，您可以使用Laravel基本测试用例类提供的 &lt;code&gt;mock&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="7f4ee05b7b4b7f0dbab22c3f34f7304075d2d194" translate="yes" xml:space="preserve">
          <source>In order to run &lt;a href=&quot;dusk&quot;&gt;Laravel Dusk&lt;/a&gt; tests within Homestead, you should enable the &lt;a href=&quot;#installing-optional-features&quot;&gt;&lt;code&gt;webdriver&lt;/code&gt; feature&lt;/a&gt; in your Homestead configuration:</source>
          <target state="translated">为了在Homestead中运行&lt;a href=&quot;dusk&quot;&gt;Laravel Dusk&lt;/a&gt;测试，您应该在Homestead配置中启用&lt;a href=&quot;#installing-optional-features&quot;&gt; &lt;code&gt;webdriver&lt;/code&gt; 功能&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="6dc25fbc8f94adb5da43252429cdf2e79ad3a3cb" translate="yes" xml:space="preserve">
          <source>In order to send the email when a user is registered, you should register following events and listeners in your &lt;a href=&quot;https://github.com/laravel/laravel/blob/master/app/Providers/EventServiceProvider.php&quot;&gt;App\Providers\EventServiceProvider&lt;/a&gt; class:</source>
          <target state="translated">为了在注册用户时发送电子邮件，您应该在&lt;a href=&quot;https://github.com/laravel/laravel/blob/master/app/Providers/EventServiceProvider.php&quot;&gt;App \ Providers \ EventServiceProvider&lt;/a&gt;类中注册以下事件和侦听器：</target>
        </trans-unit>
        <trans-unit id="fe535f1ce45de287f6e2ad5cac81394cd30e74d5" translate="yes" xml:space="preserve">
          <source>In order to set up the custom filesystem you will need a Flysystem adapter. Let's add a community maintained Dropbox adapter to our project:</source>
          <target state="translated">为了设置自定义文件系统,你将需要一个Flysystem适配器。让我们把一个社区维护的Dropbox适配器添加到我们的项目中。</target>
        </trans-unit>
        <trans-unit id="479503f250ac82906cb5f9ef5c2ec9963751bfd7" translate="yes" xml:space="preserve">
          <source>In order to test a variety of billing scenarios, such as credit card denials and failures, you may use the vast range of &lt;a href=&quot;https://stripe.com/docs/testing&quot;&gt;testing card numbers and tokens&lt;/a&gt; provided by Stripe.</source>
          <target state="translated">为了测试各种计费方案，例如信用卡被拒和失败，您可以使用Stripe提供的大量&lt;a href=&quot;https://stripe.com/docs/testing&quot;&gt;测试卡号和令牌&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8ee0ee2d646ee15ce80bef9f60fa59963b6ac183" translate="yes" xml:space="preserve">
          <source>In order to use Minio you will need to adjust the S3 disk configuration in your &lt;code&gt;config/filesystems.php&lt;/code&gt; configuration file. You will need to add the &lt;code&gt;use_path_style_endpoint&lt;/code&gt; option to the disk configuration, as well as change the &lt;code&gt;url&lt;/code&gt; key to &lt;code&gt;endpoint&lt;/code&gt;:</source>
          <target state="translated">为了使用Minio，您需要在 &lt;code&gt;config/filesystems.php&lt;/code&gt; 配置文件中调整S3磁盘配置。您将需要在磁盘配置中添加 &lt;code&gt;use_path_style_endpoint&lt;/code&gt; 选项，并将 &lt;code&gt;url&lt;/code&gt; 键更改为 &lt;code&gt;endpoint&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="d4a2a1c3850e2a8135c64c4e3095b52b9c6e4554" translate="yes" xml:space="preserve">
          <source>In order to use locales other than &lt;code&gt;en&lt;/code&gt;, ensure the &lt;code&gt;ext-intl&lt;/code&gt; PHP extension is installed and configured on your server.</source>
          <target state="translated">为了使用 &lt;code&gt;en&lt;/code&gt; 以外的语言环境，请确保在服务器上安装并配置了 &lt;code&gt;ext-intl&lt;/code&gt; PHP扩展。</target>
        </trans-unit>
        <trans-unit id="03ec686aeac3fb4bc00fb711f63a57e8c2031a28" translate="yes" xml:space="preserve">
          <source>In order to use the &lt;code&gt;database&lt;/code&gt; queue driver, you will need a database table to hold the jobs. To generate a migration that creates this table, run the &lt;code&gt;queue:table&lt;/code&gt; Artisan command. Once the migration has been created, you may migrate your database using the &lt;code&gt;migrate&lt;/code&gt; command:</source>
          <target state="translated">为了使用 &lt;code&gt;database&lt;/code&gt; 队列驱动程序，您将需要一个数据库表来保存作业。要生成创建此表的迁移，请运行 &lt;code&gt;queue:table&lt;/code&gt; Artisan命令。创建迁移后，您可以使用 &lt;code&gt;migrate&lt;/code&gt; 命令迁移数据库：</target>
        </trans-unit>
        <trans-unit id="55ccc027947d23a9854042722204bb6441049420" translate="yes" xml:space="preserve">
          <source>In order to use the &lt;code&gt;redis&lt;/code&gt; queue driver, you should configure a Redis database connection in your &lt;code&gt;config/database.php&lt;/code&gt; configuration file.</source>
          <target state="translated">为了使用 &lt;code&gt;redis&lt;/code&gt; 队列驱动程序，您应该在 &lt;code&gt;config/database.php&lt;/code&gt; 配置文件中配置Redis数据库连接。</target>
        </trans-unit>
        <trans-unit id="d600376c64629a768a74f2d5606a0cff9fa397f6" translate="yes" xml:space="preserve">
          <source>In order to use the &lt;code&gt;verified&lt;/code&gt; middleware so that only verified users may access a given route, you will need to update the &lt;code&gt;$routeMiddleware&lt;/code&gt; property of your &lt;code&gt;app/Http/Kernel.php&lt;/code&gt; file to include the new middleware:</source>
          <target state="translated">为了使用 &lt;code&gt;verified&lt;/code&gt; 中间件，以便只有经过验证的用户可以访问给定的路由，您将需要更新 &lt;code&gt;app/Http/Kernel.php&lt;/code&gt; 文件的 &lt;code&gt;$routeMiddleware&lt;/code&gt; 属性以包括新的中间件：</target>
        </trans-unit>
        <trans-unit id="c49768cb4c406065b8e8949ec68799dc9b7c2c15" translate="yes" xml:space="preserve">
          <source>In order to use the Passport Vue components, you must be using the &lt;a href=&quot;https://vuejs.org&quot;&gt;Vue&lt;/a&gt; JavaScript framework. These components also use the Bootstrap CSS framework. However, even if you are not using these tools, the components serve as a valuable reference for your own frontend implementation.</source>
          <target state="translated">为了使用Passport Vue组件，您必须使用&lt;a href=&quot;https://vuejs.org&quot;&gt;Vue&lt;/a&gt; JavaScript框架。这些组件还使用Bootstrap CSS框架。但是，即使您没有使用这些工具，这些组件还是您自己的前端实现的宝贵参考。</target>
        </trans-unit>
        <trans-unit id="7c367533374fe7dc601a45e361abbc9d82cd90bd" translate="yes" xml:space="preserve">
          <source>In other frameworks, pagination can be very painful. Laravel's paginator is integrated with the &lt;a href=&quot;queries&quot;&gt;query builder&lt;/a&gt; and &lt;a href=&quot;eloquent&quot;&gt;Eloquent ORM&lt;/a&gt; and provides convenient, easy-to-use pagination of database results out of the box. By default, the HTML generated by the paginator is compatible with the &lt;a href=&quot;https://tailwindcss.com/&quot;&gt;Tailwind CSS framework&lt;/a&gt;; however, Bootstrap views are also available.</source>
          <target state="translated">在其他框架中，分页可能会非常痛苦。Laravel的分页器与&lt;a href=&quot;queries&quot;&gt;查询生成器&lt;/a&gt;和&lt;a href=&quot;eloquent&quot;&gt;Eloquent ORM&lt;/a&gt;集成在一起，提供了开箱即用的便捷，易于使用的数据库结果分页。默认情况下，分页器生成的HTML与&lt;a href=&quot;https://tailwindcss.com/&quot;&gt;Tailwind CSS框架&lt;/a&gt;兼容；但是，Bootstrap视图也可用。</target>
        </trans-unit>
        <trans-unit id="8e260b43c0735fe5a065c9370ac4726b62d40ee3" translate="yes" xml:space="preserve">
          <source>In other frameworks, pagination can be very painful. Laravel's paginator is integrated with the &lt;a href=&quot;queries&quot;&gt;query builder&lt;/a&gt; and &lt;a href=&quot;eloquent&quot;&gt;Eloquent ORM&lt;/a&gt; and provides convenient, easy-to-use pagination of database results out of the box. The HTML generated by the paginator is compatible with the &lt;a href=&quot;https://getbootstrap.com/&quot;&gt;Bootstrap CSS framework&lt;/a&gt;.</source>
          <target state="translated">在其他框架中，分页可能会非常痛苦。Laravel的分页器已与&lt;a href=&quot;queries&quot;&gt;查询生成器&lt;/a&gt;和&lt;a href=&quot;eloquent&quot;&gt;Eloquent ORM&lt;/a&gt;集成在一起，并提供了便捷，易于使用的数据库结果分页。分页器生成的HTML与&lt;a href=&quot;https://getbootstrap.com/&quot;&gt;Bootstrap CSS框架&lt;/a&gt;兼容。</target>
        </trans-unit>
        <trans-unit id="fb4ef64462c2802b01a5b8d294165754298edf9f" translate="yes" xml:space="preserve">
          <source>In other words, a blazing fast Laravel development environment that uses roughly 7 MB of RAM. Valet isn't a complete replacement for Vagrant or Homestead, but provides a great alternative if you want flexible basics, prefer extreme speed, or are working on a machine with a limited amount of RAM.</source>
          <target state="translated">换句话说,一个速度极快的Laravel开发环境,使用大约7 MB的内存.Valet并不能完全替代Vagrant或Homestead,但如果你想要灵活的基本功能,喜欢极快的速度,或在内存有限的机器上工作,Valet提供了一个很好的选择.</target>
        </trans-unit>
        <trans-unit id="ef5f311aaf39c3e86ab46093fb659cca14be0c01" translate="yes" xml:space="preserve">
          <source>In other words, the &lt;code&gt;Paginator&lt;/code&gt; corresponds to the &lt;code&gt;simplePaginate&lt;/code&gt; method on the query builder and Eloquent, while the &lt;code&gt;LengthAwarePaginator&lt;/code&gt; corresponds to the &lt;code&gt;paginate&lt;/code&gt; method.</source>
          <target state="translated">换句话说， &lt;code&gt;Paginator&lt;/code&gt; 对应于查询生成器和 &lt;code&gt;simplePaginate&lt;/code&gt; 上的simplePaginate方法，而 &lt;code&gt;LengthAwarePaginator&lt;/code&gt; 对应于 &lt;code&gt;paginate&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="d650a501c1ab6d513853e5a94f7f274f959f83f0" translate="yes" xml:space="preserve">
          <source>In our application, let's assume we have a page that allows users to view the shipping status for their orders. Let's also assume that a &lt;code&gt;ShippingStatusUpdated&lt;/code&gt; event is fired when a shipping status update is processed by the application:</source>
          <target state="translated">在我们的应用程序中，假设我们有一个页面，允许用户查看其订单的发货状态。我们还假设当应用程序处理运输状态更新时，会触发 &lt;code&gt;ShippingStatusUpdated&lt;/code&gt; 事件：</target>
        </trans-unit>
        <trans-unit id="b2870ae5418afab0df2b22a06dcc85ecdb1a5e80" translate="yes" xml:space="preserve">
          <source>In previous releases of Laravel, the &lt;code&gt;RouteServiceProvider&lt;/code&gt; class contained a &lt;code&gt;$namespace&lt;/code&gt; property with a value of &lt;code&gt;App\Http\Controllers&lt;/code&gt;. This value of this property was used to automatically prefix controller route declarations and controller route URL generation such as when calling the &lt;code&gt;action&lt;/code&gt; helper.</source>
          <target state="translated">在Laravel的 &lt;code&gt;RouteServiceProvider&lt;/code&gt; 版本中，RouteServiceProvider类包含一个 &lt;code&gt;$namespace&lt;/code&gt; 属性，其值为 &lt;code&gt;App\Http\Controllers&lt;/code&gt; 。此属性的此值用于自动为控制器路由声明和控制器路由URL生成前缀，例如在调用 &lt;code&gt;action&lt;/code&gt; 助手时。</target>
        </trans-unit>
        <trans-unit id="c5ecf03c47f8cfacb7e3cc254c1fe0fa87b497a8" translate="yes" xml:space="preserve">
          <source>In previous releases of Laravel, the &lt;code&gt;RouteServiceProvider&lt;/code&gt; contained a &lt;code&gt;$namespace&lt;/code&gt; property. This property's value would automatically be prefixed onto controller route definitions and calls to the &lt;code&gt;action&lt;/code&gt; helper / &lt;code&gt;URL::action&lt;/code&gt; method. In Laravel 8.x, this property is &lt;code&gt;null&lt;/code&gt; by default. This means that no automatic namespace prefixing will be done by Laravel. Therefore, in new Laravel 8.x applications, controller route definitions should be defined using standard PHP callable syntax:</source>
          <target state="translated">在Laravel的 &lt;code&gt;RouteServiceProvider&lt;/code&gt; 版本中，RouteServiceProvider包含 &lt;code&gt;$namespace&lt;/code&gt; 属性。该属性的值将自动添加到控制器路由定义的前缀和对 &lt;code&gt;action&lt;/code&gt; 帮助器/ &lt;code&gt;URL::action&lt;/code&gt; 方法的调用。在Laravel 8.x中，此属性默认为 &lt;code&gt;null&lt;/code&gt; 。这意味着Laravel不会自动命名空间前缀。因此，在新的Laravel 8.x应用程序中，应使用标准PHP可调用语法定义控制器路由定义：</target>
        </trans-unit>
        <trans-unit id="1c62aa37107e28e711c928c9222ec36d74897f1f" translate="yes" xml:space="preserve">
          <source>In previous releases of Laravel, the &lt;code&gt;php artisan down&lt;/code&gt; maintenance mode feature may be bypassed using an &quot;allow list&quot; of IP addresses that were allowed to access the application. This feature has been removed in favor of a simpler &quot;secret&quot; / token solution.</source>
          <target state="translated">在Laravel的早期版本中，可以使用允许访问应用程序的IP地址的&amp;ldquo;允许列表&amp;rdquo;来绕过 &lt;code&gt;php artisan down&lt;/code&gt; 维护模式功能。为了更简单的&amp;ldquo;秘密&amp;rdquo; /令牌解决方案，已删除此功能。</target>
        </trans-unit>
        <trans-unit id="6a3cd47f01019b5b082b694fc528aefc662f34d4" translate="yes" xml:space="preserve">
          <source>In previous versions of Laravel, authorization gates and policies automatically returned &lt;code&gt;false&lt;/code&gt; for unauthenticated visitors to your application. However, you may now allow guests to pass through authorization checks by declaring an &quot;optional&quot; type-hint or supplying a &lt;code&gt;null&lt;/code&gt; default value for the user argument definition:</source>
          <target state="translated">在早期版本的Laravel中，对于未经身份验证的应用程序访问者，授权门和策略会自动返回 &lt;code&gt;false&lt;/code&gt; 。但是，您现在可以通过声明&amp;ldquo;可选&amp;rdquo;类型提示或为用户参数定义提供 &lt;code&gt;null&lt;/code&gt; 默认值来允许来宾通过授权检查：</target>
        </trans-unit>
        <trans-unit id="514a63a5ef58056a11eb51ebd7256a601d6d2b16" translate="yes" xml:space="preserve">
          <source>In previous versions of Laravel, the &lt;code&gt;validate&lt;/code&gt; method did not return the correct data for nested validation rules. This has been corrected in Laravel 5.7:</source>
          <target state="translated">在以前的Laravel版本中， &lt;code&gt;validate&lt;/code&gt; 方法没有为嵌套的验证规则返回正确的数据。Laravel 5.7中已对此进行了纠正：</target>
        </trans-unit>
        <trans-unit id="cde56f73d48acee25f28cd3c0ef93ffd5058ffca" translate="yes" xml:space="preserve">
          <source>In production, you likely do not want the framework to scan all of your listeners on every request. Therefore, during your deployment process, you should run the &lt;code&gt;event:cache&lt;/code&gt; Artisan command to cache a manifest of all of your application's events and listeners. This manifest will be used by the framework to speed up the event registration process. The &lt;code&gt;event:clear&lt;/code&gt; command may be used to destroy the cache.</source>
          <target state="translated">在生产中，您可能不希望该框架针对每个请求扫描所有侦听器。因此，在部署过程中，应运行 &lt;code&gt;event:cache&lt;/code&gt; Artisan命令来缓存所有应用程序事件和侦听器的清单。框架将使用此清单来加快事件注册过程。该 &lt;code&gt;event:clear&lt;/code&gt; 命令可以被用来摧毁缓存。</target>
        </trans-unit>
        <trans-unit id="5414be35a662257a0cf5fa95498d16464a892ec7" translate="yes" xml:space="preserve">
          <source>In response to the complexity of OAuth2 and developer confusion, we set out to build a simpler, more streamlined authentication package that could handle both first-party web requests from a web browser and API requests via tokens. This goal was realized with the release of &lt;a href=&quot;sanctum&quot;&gt;Laravel Sanctum&lt;/a&gt;, which should be considered the preferred and recommended authentication package for applications that will be offering a first-party web UI in addition to an API, or will be powered by a single-page application that exists separately from the backend Laravel application, or applications that offer a mobile client.</source>
          <target state="translated">为了应对OAuth2的复杂性和开发人员的困惑，我们着手构建一个更简单，更简化的身份验证程序包，该程序包既可以处理来自网络浏览器的第一方Web请求，也可以处理通过令牌的API请求。&lt;a href=&quot;sanctum&quot;&gt;Laravel Sanctum&lt;/a&gt;的发布实现了这一目标，对于那些除了API之外还将提供第一方Web UI的应用程序，或者由单页面应用程序提供支持的应用程序，Laravel Sanctum的发布应被视为首选的推荐认证程序包与后端Laravel应用程序或提供移动客户端的应用程序分开存在。</target>
        </trans-unit>
        <trans-unit id="4c3f929f96bec6977b9484ac2b0a0c84778ae5e9" translate="yes" xml:space="preserve">
          <source>In some situations, it's useful to embed PHP code into your views. You can use the Blade &lt;code&gt;@php&lt;/code&gt; directive to execute a block of plain PHP within your template:</source>
          <target state="translated">在某些情况下，将PHP代码嵌入视图中很有用。您可以使用Blade &lt;code&gt;@php&lt;/code&gt; 指令在模板中执行一个纯PHP块：</target>
        </trans-unit>
        <trans-unit id="54fe8fea5e3227081e02b41359ce281c85666670" translate="yes" xml:space="preserve">
          <source>In some situations, you may wish to run validation checks against a field &lt;strong&gt;only&lt;/strong&gt; if that field is present in the input array. To quickly accomplish this, add the &lt;code&gt;sometimes&lt;/code&gt; rule to your rule list:</source>
          <target state="translated">在某些情况下，&lt;strong&gt;仅&lt;/strong&gt;当输入数组中存在该字段时，您才可能希望对该字段运行验证检查。为了快速完成此任务，请将 &lt;code&gt;sometimes&lt;/code&gt; 规则添加到规则列表中：</target>
        </trans-unit>
        <trans-unit id="308bca36a2638d618094c7e7b971e84968c760cc" translate="yes" xml:space="preserve">
          <source>In summary, if your application will be accessed using a browser, your application will use Laravel's built-in authentication services.</source>
          <target state="translated">总而言之,如果你的应用程序将使用浏览器访问,你的应用程序将使用Laravel内置的认证服务.</target>
        </trans-unit>
        <trans-unit id="29940266577140e9609626ff8e5c16114325e1b2" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;session&lt;/code&gt; configuration file, the &lt;code&gt;connection&lt;/code&gt; option may be used to specify which Redis connection is used by the session.</source>
          <target state="translated">在 &lt;code&gt;session&lt;/code&gt; 配置文件中， &lt;code&gt;connection&lt;/code&gt; 选项可用于指定会话使用哪个Redis连接。</target>
        </trans-unit>
        <trans-unit id="4b4114db7494f5f3ee10842a6eac9f7f983f0c1e" translate="yes" xml:space="preserve">
          <source>In the example above, Eloquent will try to match the &lt;code&gt;post_id&lt;/code&gt; from the &lt;code&gt;Comment&lt;/code&gt; model to an &lt;code&gt;id&lt;/code&gt; on the &lt;code&gt;Post&lt;/code&gt; model. Eloquent determines the default foreign key name by examining the name of the relationship method and suffixing the method name with a &lt;code&gt;_&lt;/code&gt; followed by the name of the primary key column. However, if the foreign key on the &lt;code&gt;Comment&lt;/code&gt; model is not &lt;code&gt;post_id&lt;/code&gt;, you may pass a custom key name as the second argument to the &lt;code&gt;belongsTo&lt;/code&gt; method:</source>
          <target state="translated">在上面的示例中，Eloquent将尝试将 &lt;code&gt;Comment&lt;/code&gt; 模型中的 &lt;code&gt;post_id&lt;/code&gt; 与 &lt;code&gt;Post&lt;/code&gt; 模型中的 &lt;code&gt;id&lt;/code&gt; 进行匹配。 Eloquent通过检查关系方法的名称并在方法名称后加上 &lt;code&gt;_&lt;/code&gt; 后跟主键列的名称来确定默认外键名称。但是，如果 &lt;code&gt;Comment&lt;/code&gt; 模型上的外键不是 &lt;code&gt;post_id&lt;/code&gt; ，则可以将自定义键名作为第二个参数传递给 &lt;code&gt;belongsTo&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="7d4064d13dd2c6c23ef09d77de2297b667443164" translate="yes" xml:space="preserve">
          <source>In the example above, Eloquent will try to match the &lt;code&gt;user_id&lt;/code&gt; from the &lt;code&gt;Phone&lt;/code&gt; model to an &lt;code&gt;id&lt;/code&gt; on the &lt;code&gt;User&lt;/code&gt; model. Eloquent determines the default foreign key name by examining the name of the relationship method and suffixing the method name with &lt;code&gt;_id&lt;/code&gt;. However, if the foreign key on the &lt;code&gt;Phone&lt;/code&gt; model is not &lt;code&gt;user_id&lt;/code&gt;, you may pass a custom key name as the second argument to the &lt;code&gt;belongsTo&lt;/code&gt; method:</source>
          <target state="translated">在上面的示例中，Eloquent将尝试将 &lt;code&gt;Phone&lt;/code&gt; 模型中的 &lt;code&gt;user_id&lt;/code&gt; 与 &lt;code&gt;User&lt;/code&gt; 模型中的 &lt;code&gt;id&lt;/code&gt; 进行匹配。Eloquent通过检查关系方法的名称并在方法名称后缀 &lt;code&gt;_id&lt;/code&gt; 来确定默认外键名称。但是，如果 &lt;code&gt;Phone&lt;/code&gt; 模型上的外键不是 &lt;code&gt;user_id&lt;/code&gt; ，则可以将自定义键名称作为第二个参数传递给 &lt;code&gt;belongsTo&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="932396a89f43ade24462d1f984b01e315fa64478" translate="yes" xml:space="preserve">
          <source>In the example above, the &lt;code&gt;UpdateSearchIndex&lt;/code&gt; job is unique by a product ID. So, any new dispatches of the job with the same product ID will be ignored until the existing job has completed processing. In addition, if the existing job is not processed within one hour, the unique lock will be released and another job with the same unique key can be dispatched to the queue.</source>
          <target state="translated">在上面的示例中， &lt;code&gt;UpdateSearchIndex&lt;/code&gt; 作业通过产品ID是唯一的。因此，具有相同产品ID的作业的任何新调度都将被忽略，直到现有作业完成处理为止。此外，如果一小时内未处理现有作业，则将释放唯一锁，并且可以将具有相同唯一密钥的另一个作业分派到队列中。</target>
        </trans-unit>
        <trans-unit id="8dffcc3a048f15655c9d51c31e4696712e1a5902" translate="yes" xml:space="preserve">
          <source>In the example above, the &lt;code&gt;UpdateSearchIndex&lt;/code&gt; job is unique. So, new dispatches of the job will be ignored if another instance of the job is already on the queue and has not finished processing.</source>
          <target state="translated">在上面的示例中， &lt;code&gt;UpdateSearchIndex&lt;/code&gt; 作业是唯一的。因此，如果该作业的另一个实例已经在队列中并且尚未完成处理，则将忽略该作业的新调度。</target>
        </trans-unit>
        <trans-unit id="a16dc4dd4e20c0a8d0100b865c468cd2475de713" translate="yes" xml:space="preserve">
          <source>In the example above, the &lt;code&gt;email&lt;/code&gt; field will only be validated if it is present in the &lt;code&gt;$data&lt;/code&gt; array.</source>
          <target state="translated">在上面的示例中，仅当 &lt;code&gt;$data&lt;/code&gt; 数组中存在 &lt;code&gt;email&lt;/code&gt; 字段时，才会对其进行验证。</target>
        </trans-unit>
        <trans-unit id="8db570874f2b9509d179ccc3331164264361c9dc" translate="yes" xml:space="preserve">
          <source>In the example above, the &lt;code&gt;key&lt;/code&gt; may be any string that uniquely identifies the type of job you would like to rate limit. For example, you may wish to construct the key based on the class name of the job and the IDs of the Eloquent models it operates on.</source>
          <target state="translated">在上面的示例中， &lt;code&gt;key&lt;/code&gt; 可以是任何字符串，该字符串唯一地标识您要评估限制的作业类型。例如，您可能希望根据作业的类名称和其运行的Eloquent模型的ID来构造密钥。</target>
        </trans-unit>
        <trans-unit id="c17627fa660219db9630df417d51dfeba134bd9e" translate="yes" xml:space="preserve">
          <source>In the example above, we are retrieving the model from the database before calling the &lt;code&gt;delete&lt;/code&gt; method. However, if you know the primary key of the model, you may delete the model without explicitly retrieving it by calling the &lt;code&gt;destroy&lt;/code&gt; method. In addition to a single primary key as its argument, the &lt;code&gt;destroy&lt;/code&gt; method will accept multiple primary keys, an array of primary keys, or a &lt;a href=&quot;collections&quot;&gt;collection&lt;/a&gt; of primary keys:</source>
          <target state="translated">在上面的示例中，我们在调用 &lt;code&gt;delete&lt;/code&gt; 方法之前从数据库中检索模型。但是，如果您知道模型的主键，则可以通过调用 &lt;code&gt;destroy&lt;/code&gt; 方法删除模型而无需显式检索它。除了单个主键作为参数外， &lt;code&gt;destroy&lt;/code&gt; 方法还将接受多个主键，一个主键数组或一个主键&lt;a href=&quot;collections&quot;&gt;集合&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="fa373ca2522dd6f61e98548506b9ec5e0bc2fed0" translate="yes" xml:space="preserve">
          <source>In the example above, we are retrieving the model from the database before calling the &lt;code&gt;delete&lt;/code&gt; method. However, if you know the primary key of the model, you may delete the model without retrieving it by calling the &lt;code&gt;destroy&lt;/code&gt; method. In addition to a single primary key as its argument, the &lt;code&gt;destroy&lt;/code&gt; method will accept multiple primary keys, an array of primary keys, or a &lt;a href=&quot;collections&quot;&gt;collection&lt;/a&gt; of primary keys:</source>
          <target state="translated">在上面的示例中，我们在调用 &lt;code&gt;delete&lt;/code&gt; 方法之前从数据库中检索模型。但是，如果您知道模型的主键，则可以通过调用 &lt;code&gt;destroy&lt;/code&gt; 方法删除模型而无需检索它。除了单个主键作为参数外， &lt;code&gt;destroy&lt;/code&gt; 方法还将接受多个主键，一个主键数组或一个主键&lt;a href=&quot;collections&quot;&gt;集合&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="499ced5540ed367190dc241ec2646b9a76539b78" translate="yes" xml:space="preserve">
          <source>In the past, you may have generated a Cron entry for each task you needed to schedule on your server. However, this can quickly become a pain, because your task schedule is no longer in source control and you must SSH into your server to add additional Cron entries.</source>
          <target state="translated">在过去,你可能已经为你需要在服务器上安排的每个任务生成了一个Cron条目。然而,这可能很快就会变得很麻烦,因为你的任务计划不再在源控制中,你必须通过SSH进入服务器来添加额外的Cron条目。</target>
        </trans-unit>
        <trans-unit id="0742ab6464609f3aa0f98430a0fb6ac2bfe20748" translate="yes" xml:space="preserve">
          <source>In these examples, &lt;code&gt;email&lt;/code&gt; is not a required option, it is merely used as an example. You should use whatever column name corresponds to a &quot;username&quot; in your database.</source>
          <target state="translated">在这些示例中， &lt;code&gt;email&lt;/code&gt; 不是必需的选项，仅用作示例。您应该使用与数据库中&amp;ldquo;用户名&amp;rdquo;相对应的任何列名。</target>
        </trans-unit>
        <trans-unit id="b355dc364cf53d2a449cfc343efbeb9c87edc6bc" translate="yes" xml:space="preserve">
          <source>In this class, the code is tightly coupled to a given cache implementation. It is tightly coupled because we are depending on a concrete Cache class from a package vendor. If the API of that package changes our code must change as well.</source>
          <target state="translated">在这个类中,代码与给定的缓存实现紧密耦合。之所以是紧耦合,是因为我们依赖于一个包厂商的具体Cache类。如果那个包的API改变了,我们的代码也必须改变。</target>
        </trans-unit>
        <trans-unit id="e84ad68ef842caca84c55e03c50f080ab009cc7a" translate="yes" xml:space="preserve">
          <source>In this example we are just sending a single line of text to Slack, which will create a message that looks like the following:</source>
          <target state="translated">在这个例子中,我们只是向Slack发送一行文字,它将创建一个类似下面的消息。</target>
        </trans-unit>
        <trans-unit id="ab21dd9e452ca19af67e122107724b419cbe2939" translate="yes" xml:space="preserve">
          <source>In this example, Eloquent will only eager load posts that have not been hidden and videos have a &lt;code&gt;type&lt;/code&gt; value of &quot;educational&quot;.</source>
          <target state="translated">在此示例中，Eloquent仅渴望加载尚未隐藏的帖子，并且视频的 &lt;code&gt;type&lt;/code&gt; 值为&amp;ldquo;教育&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="e6fe99faef1ab5444158dcd871e6adf3eab94a6c" translate="yes" xml:space="preserve">
          <source>In this example, Eloquent will only eager load posts where the post's &lt;code&gt;title&lt;/code&gt; column contains the word &lt;code&gt;first&lt;/code&gt;. Of course, you may call other &lt;a href=&quot;queries&quot;&gt;query builder&lt;/a&gt; methods to further customize the eager loading operation:</source>
          <target state="translated">在此示例中，Eloquent只会急于加载帖子的 &lt;code&gt;title&lt;/code&gt; 列中包含单词 &lt;code&gt;first&lt;/code&gt; 的帖子。当然，您可以调用其他&lt;a href=&quot;queries&quot;&gt;查询构建器&lt;/a&gt;方法来进一步自定义急切的加载操作：</target>
        </trans-unit>
        <trans-unit id="1404e71fbec8af71780a94a59c7830be302b7850" translate="yes" xml:space="preserve">
          <source>In this example, Eloquent will only eager load posts where the post's &lt;code&gt;title&lt;/code&gt; column contains the word &lt;code&gt;first&lt;/code&gt;. You may call other &lt;a href=&quot;queries&quot;&gt;query builder&lt;/a&gt; methods to further customize the eager loading operation:</source>
          <target state="translated">在此示例中，Eloquent仅渴望加载帖子的 &lt;code&gt;title&lt;/code&gt; 列中包含单词 &lt;code&gt;first&lt;/code&gt; 的帖子。您可以调用其他&lt;a href=&quot;queries&quot;&gt;查询构建器&lt;/a&gt;方法来进一步自定义急切加载操作：</target>
        </trans-unit>
        <trans-unit id="b59833308d8ac363d7fe83d5c2f8b222c61c0614" translate="yes" xml:space="preserve">
          <source>In this example, all notifications sent to &lt;code&gt;App\Models\User&lt;/code&gt; instances via the &lt;code&gt;broadcast&lt;/code&gt; channel would be received by the callback. A channel authorization callback for the &lt;code&gt;App.User.{id}&lt;/code&gt; channel is included in the default &lt;code&gt;BroadcastServiceProvider&lt;/code&gt; that ships with the Laravel framework.</source>
          <target state="translated">在此示例中，通过 &lt;code&gt;broadcast&lt;/code&gt; 通道发送到 &lt;code&gt;App\Models\User&lt;/code&gt; 实例的所有通知将被回调接收。Laravel框架随附的默认 &lt;code&gt;BroadcastServiceProvider&lt;/code&gt; 中包含 &lt;code&gt;App.User.{id}&lt;/code&gt; 频道的频道授权回调。</target>
        </trans-unit>
        <trans-unit id="1ea7c3bd4538d03bc179982ef5d539d84b287cfa" translate="yes" xml:space="preserve">
          <source>In this example, all notifications sent to &lt;code&gt;App\User&lt;/code&gt; instances via the &lt;code&gt;broadcast&lt;/code&gt; channel would be received by the callback. A channel authorization callback for the &lt;code&gt;App.User.{id}&lt;/code&gt; channel is included in the default &lt;code&gt;BroadcastServiceProvider&lt;/code&gt; that ships with the Laravel framework.</source>
          <target state="translated">在此示例中，回调将接收通过 &lt;code&gt;broadcast&lt;/code&gt; 通道发送到 &lt;code&gt;App\User&lt;/code&gt; 实例的所有通知。Laravel框架随附的默认 &lt;code&gt;BroadcastServiceProvider&lt;/code&gt; 中包含 &lt;code&gt;App.User.{id}&lt;/code&gt; 频道的频道授权回调。</target>
        </trans-unit>
        <trans-unit id="17bd5e9027ef6615195b43c201f7c3a83fa0d857" translate="yes" xml:space="preserve">
          <source>In this example, calling &lt;code&gt;flatten&lt;/code&gt; without providing the depth would have also flattened the nested arrays, resulting in &lt;code&gt;['iPhone 6S', 'Apple', 'Galaxy S7', 'Samsung']&lt;/code&gt;. Providing a depth allows you to restrict the levels of nested arrays that will be flattened.</source>
          <target state="translated">在此示例中，在不提供深度的情况下调用 &lt;code&gt;flatten&lt;/code&gt; 也将使嵌套的数组变平，从而导致 &lt;code&gt;['iPhone 6S', 'Apple', 'Galaxy S7', 'Samsung']&lt;/code&gt; 。提供深度允许您限制将被展平的嵌套数组的级别。</target>
        </trans-unit>
        <trans-unit id="5eed32cdf0aea90369581690d4c9388f2611b359" translate="yes" xml:space="preserve">
          <source>In this example, five users will be created with an &lt;code&gt;admin&lt;/code&gt; value of &lt;code&gt;Y&lt;/code&gt; and five users will be created with an &lt;code&gt;admin&lt;/code&gt; value of &lt;code&gt;N&lt;/code&gt;.</source>
          <target state="translated">在该示例中，五个用户将与一个被创建 &lt;code&gt;admin&lt;/code&gt; 的值 &lt;code&gt;Y&lt;/code&gt; 和五个用户将与被创建 &lt;code&gt;admin&lt;/code&gt; 的值 &lt;code&gt;N&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d00c8d5a6f13da758053f52e55ddde5b10fea943" translate="yes" xml:space="preserve">
          <source>In this example, if the &lt;code&gt;unique&lt;/code&gt; rule on the &lt;code&gt;title&lt;/code&gt; attribute fails, the &lt;code&gt;max&lt;/code&gt; rule will not be checked. Rules will be validated in the order they are assigned.</source>
          <target state="translated">在此示例中，如果 &lt;code&gt;title&lt;/code&gt; 属性上的 &lt;code&gt;unique&lt;/code&gt; 规则失败，则不会检查 &lt;code&gt;max&lt;/code&gt; 规则。规则将按照分配的顺序进行验证。</target>
        </trans-unit>
        <trans-unit id="8d1618c5c5c7dd607a3a738fab8a4590035678e4" translate="yes" xml:space="preserve">
          <source>In this example, if the relationship has not been loaded, the &lt;code&gt;posts&lt;/code&gt; key will be removed from the resource response entirely before it is sent to the client.</source>
          <target state="translated">在此示例中，如果尚未加载该关系，则在将键发送到客户端之前，将从资源响应中完全删除 &lt;code&gt;posts&lt;/code&gt; 键。</target>
        </trans-unit>
        <trans-unit id="6922e8fefbaa25d2c8ba4f713e171a47a8c0f1be" translate="yes" xml:space="preserve">
          <source>In this example, let's assume &lt;code&gt;Event&lt;/code&gt;, &lt;code&gt;Photo&lt;/code&gt;, and &lt;code&gt;Post&lt;/code&gt; models may create &lt;code&gt;ActivityFeed&lt;/code&gt; models. Additionally, let's assume that &lt;code&gt;Event&lt;/code&gt; models belong to a &lt;code&gt;Calendar&lt;/code&gt; model, &lt;code&gt;Photo&lt;/code&gt; models are associated with &lt;code&gt;Tag&lt;/code&gt; models, and &lt;code&gt;Post&lt;/code&gt; models belong to an &lt;code&gt;Author&lt;/code&gt; model.</source>
          <target state="translated">在此示例中，假设 &lt;code&gt;Event&lt;/code&gt; ， &lt;code&gt;Photo&lt;/code&gt; 和 &lt;code&gt;Post&lt;/code&gt; 模型可以创建 &lt;code&gt;ActivityFeed&lt;/code&gt; 模型。此外，假设 &lt;code&gt;Event&lt;/code&gt; 模型属于 &lt;code&gt;Calendar&lt;/code&gt; 模型， &lt;code&gt;Photo&lt;/code&gt; 模型与 &lt;code&gt;Tag&lt;/code&gt; 模型关联，而 &lt;code&gt;Post&lt;/code&gt; 模型属于 &lt;code&gt;Author&lt;/code&gt; 模型。</target>
        </trans-unit>
        <trans-unit id="8b3629f5a9393ecfe218803fd173c531c9e26f7d" translate="yes" xml:space="preserve">
          <source>In this example, let's assume &lt;code&gt;Photo&lt;/code&gt; and &lt;code&gt;Post&lt;/code&gt; models may create &lt;code&gt;ActivityFeed&lt;/code&gt; models. Additionally, let's assume that &lt;code&gt;Photo&lt;/code&gt; models are associated with &lt;code&gt;Tag&lt;/code&gt; models, and &lt;code&gt;Post&lt;/code&gt; models are associated with &lt;code&gt;Comment&lt;/code&gt; models.</source>
          <target state="translated">在此示例中，假设 &lt;code&gt;Photo&lt;/code&gt; 和 &lt;code&gt;Post&lt;/code&gt; 模型可以创建 &lt;code&gt;ActivityFeed&lt;/code&gt; 模型。此外，我们假设 &lt;code&gt;Photo&lt;/code&gt; 模型与 &lt;code&gt;Tag&lt;/code&gt; 模型相关联， &lt;code&gt;Post&lt;/code&gt; 模型与 &lt;code&gt;Comment&lt;/code&gt; 模型相关联。</target>
        </trans-unit>
        <trans-unit id="91cd2e455a7bf3ec5aac4172a7b87f0ec72e0883" translate="yes" xml:space="preserve">
          <source>In this example, note that we were able to pass an &lt;a href=&quot;eloquent&quot;&gt;Eloquent model&lt;/a&gt; directly into the queued job's constructor. Because of the &lt;code&gt;SerializesModels&lt;/code&gt; trait that the job is using, Eloquent models and their loaded relationships will be gracefully serialized and unserialized when the job is processing. If your queued job accepts an Eloquent model in its constructor, only the identifier for the model will be serialized onto the queue. When the job is actually handled, the queue system will automatically re-retrieve the full model instance and its loaded relationships from the database. It's all totally transparent to your application and prevents issues that can arise from serializing full Eloquent model instances.</source>
          <target state="translated">在此示例中，请注意，我们能够将&lt;a href=&quot;eloquent&quot;&gt;Eloquent模型&lt;/a&gt;直接传递到排队作业的构造函数中。由于作业正在使用 &lt;code&gt;SerializesModels&lt;/code&gt; 特性，因此在处理作业时，雄辩的模型及其加载的关系将被适当地序列化和反序列化。如果您排队的作业在其构造函数中接受Eloquent模型，则仅该模型的标识符将被序列化到队列中。实际处理完作业后，队列系统将自动从数据库中重新检索完整的模型实例及其已加载的关系。所有这些对于您的应用程序都是完全透明的，并且可以防止序列化完整的Eloquent模型实例而引起的问题。</target>
        </trans-unit>
        <trans-unit id="79d3ab1d03601e58e1892460595a8bdf2308d22a" translate="yes" xml:space="preserve">
          <source>In this example, note that we were able to pass an &lt;a href=&quot;eloquent&quot;&gt;Eloquent model&lt;/a&gt; directly into the queued job's constructor. Because of the &lt;code&gt;SerializesModels&lt;/code&gt; trait that the job is using, Eloquent models will be gracefully serialized and unserialized when the job is processing. If your queued job accepts an Eloquent model in its constructor, only the identifier for the model will be serialized onto the queue. When the job is actually handled, the queue system will automatically re-retrieve the full model instance from the database. It's all totally transparent to your application and prevents issues that can arise from serializing full Eloquent model instances.</source>
          <target state="translated">在此示例中，请注意，我们能够将&lt;a href=&quot;eloquent&quot;&gt;Eloquent模型&lt;/a&gt;直接传递到排队作业的构造函数中。由于作业正在使用 &lt;code&gt;SerializesModels&lt;/code&gt; 特性，因此在处理作业时，雄辩的模型将正常进行序列化和反序列化。如果您排队的作业在其构造函数中接受Eloquent模型，则仅该模型的标识符将被序列化到队列中。在实际处理完作业后，队列系统将自动从数据库中重新检索完整的模型实例。所有这些对于您的应用程序都是完全透明的，并且可以防止序列化完整的Eloquent模型实例而引起的问题。</target>
        </trans-unit>
        <trans-unit id="c04c27920c40b1d3545c266711d9ed010b2d9359" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;--queue&lt;/code&gt; switch may be specified when calling the Artisan command. If the &lt;code&gt;--queue&lt;/code&gt; switch is passed, the value of the option will be &lt;code&gt;true&lt;/code&gt;. Otherwise, the value will be &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">在此示例中，可以在调用Artisan命令时指定 &lt;code&gt;--queue&lt;/code&gt; 开关。如果通过 &lt;code&gt;--queue&lt;/code&gt; 开关，则该选项的值为 &lt;code&gt;true&lt;/code&gt; 。否则，该值为 &lt;code&gt;false&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="0dce48860f3816ee07f41816e16934390f49cbd2" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;:attribute&lt;/code&gt; place-holder will be replaced by the actual name of the field under validation. You may also utilize other place-holders in validation messages. For example:</source>
          <target state="translated">在此示例中， &lt;code&gt;:attribute&lt;/code&gt; 占位符将替换为验证中字段的实际名称。您还可以在验证消息中使用其他占位符。例如：</target>
        </trans-unit>
        <trans-unit id="b8cdb4683e50a4310ae085b364cd7d5adac55552" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;:attribute&lt;/code&gt; placeholder will be replaced by the actual name of the field under validation. You may also utilize other placeholders in validation messages. For example:</source>
          <target state="translated">在此示例中， &lt;code&gt;:attribute&lt;/code&gt; 占位符将被验证中的字段的实际名称替换。您也可以在验证消息中使用其他占位符。例如：</target>
        </trans-unit>
        <trans-unit id="ef0bf5dc5e5e98ecff7390e69f67c14ef0ce6f5d" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;@&lt;/code&gt; symbol will be removed by Blade; however, &lt;code&gt;{{ name }}&lt;/code&gt; expression will remain untouched by the Blade engine, allowing it to instead be rendered by your JavaScript framework.</source>
          <target state="translated">在此示例中， &lt;code&gt;@&lt;/code&gt; 符号将由Blade删除；但是， &lt;code&gt;{{ name }}&lt;/code&gt; 表达式不会被Blade引擎所影响，而是可以由您的JavaScript框架呈现。</target>
        </trans-unit>
        <trans-unit id="8ebad6e611f0542c43e010f57631959e0216f422" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;UserController&lt;/code&gt; needs to retrieve users from a data source. So, we will &lt;strong&gt;inject&lt;/strong&gt; a service that is able to retrieve users. In this context, our &lt;code&gt;UserRepository&lt;/code&gt; most likely uses &lt;a href=&quot;eloquent&quot;&gt;Eloquent&lt;/a&gt; to retrieve user information from the database. However, since the repository is injected, we are able to easily swap it out with another implementation. We are also able to easily &quot;mock&quot;, or create a dummy implementation of the &lt;code&gt;UserRepository&lt;/code&gt; when testing our application.</source>
          <target state="translated">在此示例中， &lt;code&gt;UserController&lt;/code&gt; 需要从数据源检索用户。因此，我们将&lt;strong&gt;注入&lt;/strong&gt;能够检索用户的服务。在此背景下，我们 &lt;code&gt;UserRepository&lt;/code&gt; 最有可能使用&lt;a href=&quot;eloquent&quot;&gt;雄辩&lt;/a&gt;来从数据库中检索用户信息。但是，由于已注入存储库，因此我们可以轻松地将其与另一个实现换出。在测试我们的应用程序时，我们还可以轻松地&amp;ldquo;模拟&amp;rdquo;或创建 &lt;code&gt;UserRepository&lt;/code&gt; 的虚拟实现。</target>
        </trans-unit>
        <trans-unit id="c932e21f54ca1bcf8044bdb4b4b52d4310252766" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;emails:send&lt;/code&gt;&lt;a href=&quot;artisan&quot;&gt;Artisan command&lt;/a&gt; will be run every minute if it is not already running. The &lt;code&gt;withoutOverlapping&lt;/code&gt; method is especially useful if you have tasks that vary drastically in their execution time, preventing you from predicting exactly how long a given task will take.</source>
          <target state="translated">在此示例中，如果尚未运行 &lt;code&gt;emails:send&lt;/code&gt; &lt;a href=&quot;artisan&quot;&gt;Artisan命令，则&lt;/a&gt;它将每分钟运行一次。该 &lt;code&gt;withoutOverlapping&lt;/code&gt; 如果你有急剧变化在他们的执行时间，使您无法预测一个给定的任务究竟需要多长时间任务的方法是非常有用的。</target>
        </trans-unit>
        <trans-unit id="408984634b6aa1b5a1717afd37dcae4935f78860" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;numprocs&lt;/code&gt; directive will instruct Supervisor to run 8 &lt;code&gt;queue:work&lt;/code&gt; processes and monitor all of them, automatically restarting them if they fail. Of course, you should change the &lt;code&gt;queue:work sqs&lt;/code&gt; portion of the &lt;code&gt;command&lt;/code&gt; directive to reflect your desired queue connection.</source>
          <target state="translated">在此示例中， &lt;code&gt;numprocs&lt;/code&gt; 指令将指示Supervisor运行8个 &lt;code&gt;queue:work&lt;/code&gt; 进程并监视所有进程，并在失败时自动重新启动它们。当然，您应该更改 &lt;code&gt;command&lt;/code&gt; 指令的 &lt;code&gt;queue:work sqs&lt;/code&gt; 部分以反映所需的队列连接。</target>
        </trans-unit>
        <trans-unit id="05ff898c52e8533534cb8d1e23a3082d558f1f94" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;numprocs&lt;/code&gt; directive will instruct Supervisor to run 8 &lt;code&gt;queue:work&lt;/code&gt; processes and monitor all of them, automatically restarting them if they fail. You should change the &lt;code&gt;queue:work sqs&lt;/code&gt; portion of the &lt;code&gt;command&lt;/code&gt; directive to reflect your desired queue connection.</source>
          <target state="translated">在此示例中， &lt;code&gt;numprocs&lt;/code&gt; 指令将指示Supervisor运行8个 &lt;code&gt;queue:work&lt;/code&gt; 进程并监视所有进程，并在失败时自动重新启动它们。您应该更改 &lt;code&gt;command&lt;/code&gt; 指令的 &lt;code&gt;queue:work sqs&lt;/code&gt; 部分，以反映所需的队列连接。</target>
        </trans-unit>
        <trans-unit id="7f6d9afd2161b8d8f0724a4fa5a2570f4f38d826" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;secret&lt;/code&gt; key will only be returned in the final resource response if the authenticated user's &lt;code&gt;isAdmin&lt;/code&gt; method returns &lt;code&gt;true&lt;/code&gt;. If the method returns &lt;code&gt;false&lt;/code&gt;, the &lt;code&gt;secret&lt;/code&gt; key will be removed from the resource response entirely before it is sent back to the client. The &lt;code&gt;when&lt;/code&gt; method allows you to expressively define your resources without resorting to conditional statements when building the array.</source>
          <target state="translated">在这个例子中， &lt;code&gt;secret&lt;/code&gt; 密钥将只在最后的资源响应返回如果认证用户的 &lt;code&gt;isAdmin&lt;/code&gt; 方法返回 &lt;code&gt;true&lt;/code&gt; 。如果该方法返回 &lt;code&gt;false&lt;/code&gt; ，该 &lt;code&gt;secret&lt;/code&gt; 密钥会完全然后再发送回客户端资源响应被删除。该 &lt;code&gt;when&lt;/code&gt; 的方法可以让你表现力定义你的资源，而无需建立数组时诉诸条件语句。</target>
        </trans-unit>
        <trans-unit id="e64d03449b77c86a1827b5b7d672621a3ce38c55" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;setFirstNameAttribute&lt;/code&gt; function will be called with the value &lt;code&gt;Sally&lt;/code&gt;. The mutator will then apply the &lt;code&gt;strtolower&lt;/code&gt; function to the name and set its resulting value in the internal &lt;code&gt;$attributes&lt;/code&gt; array.</source>
          <target state="translated">在此示例中，将使用值 &lt;code&gt;Sally&lt;/code&gt; 调用 &lt;code&gt;setFirstNameAttribute&lt;/code&gt; 函数。然后，更改器会将 &lt;code&gt;strtolower&lt;/code&gt; 函数应用于名称，并在内部 &lt;code&gt;$attributes&lt;/code&gt; 数组中设置其结果值。</target>
        </trans-unit>
        <trans-unit id="80470b87222f897074811578583ee513a1d0f6cb" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;sidebar&lt;/code&gt; section is utilizing the &lt;code&gt;@parent&lt;/code&gt; directive to append (rather than overwriting) content to the layout's sidebar. The &lt;code&gt;@parent&lt;/code&gt; directive will be replaced by the content of the layout when the view is rendered.</source>
          <target state="translated">在此示例中， &lt;code&gt;sidebar&lt;/code&gt; 部分利用 &lt;code&gt;@parent&lt;/code&gt; 指令将内容附加（而不是覆盖）到布局的侧边栏。该 &lt;code&gt;@parent&lt;/code&gt; 指令将通过布局的内容被替换时的视图被呈现。</target>
        </trans-unit>
        <trans-unit id="2db7fc39c19e473a6e358fa84f7607140c6bec68" translate="yes" xml:space="preserve">
          <source>In this example, the job is released for ten seconds if the application is unable to obtain a Redis lock and will continue to be retried up to 25 times. However, the job will fail if three unhandled exceptions are thrown by the job.</source>
          <target state="translated">在这个例子中,如果应用程序无法获得Redis锁,作业将被释放10秒,并将继续重试,最多可重试25次。但是,如果作业抛出三个未处理的异常,作业将失败。</target>
        </trans-unit>
        <trans-unit id="4f24299ecfe690d1ac8f7b68de13e93f550323a7" translate="yes" xml:space="preserve">
          <source>In this example, the only argument passed to the &lt;code&gt;paginate&lt;/code&gt; method is the number of items you would like displayed &quot;per page&quot;. In this case, let's specify that we would like to display &lt;code&gt;15&lt;/code&gt; items per page:</source>
          <target state="translated">在此示例中，传递给 &lt;code&gt;paginate&lt;/code&gt; 方法的唯一参数是您希望&amp;ldquo;每页&amp;rdquo;显示的项目数。在这种情况下，让我们指定我们希望每页显示 &lt;code&gt;15&lt;/code&gt; 个项目：</target>
        </trans-unit>
        <trans-unit id="294cf6c5faa854b02b152515e47f8c4080c92f42" translate="yes" xml:space="preserve">
          <source>In this example, the user may pass a value for the option like so:</source>
          <target state="translated">在这个例子中,用户可以像这样传递一个选项的值。</target>
        </trans-unit>
        <trans-unit id="f917f182027ac94bf72b5a7df0a4ba77a33635dd" translate="yes" xml:space="preserve">
          <source>In this example, we are specifying that the &lt;code&gt;publish_at&lt;/code&gt; field may be either &lt;code&gt;null&lt;/code&gt; or a valid date representation. If the &lt;code&gt;nullable&lt;/code&gt; modifier is not added to the rule definition, the validator would consider &lt;code&gt;null&lt;/code&gt; an invalid date.</source>
          <target state="translated">在此示例中，我们指定 &lt;code&gt;publish_at&lt;/code&gt; 字段可以为 &lt;code&gt;null&lt;/code&gt; 或有效的日期表示形式。如果未将 &lt;code&gt;nullable&lt;/code&gt; 为空的修饰符添加到规则定义中，则验证器将认为 &lt;code&gt;null&lt;/code&gt; 为无效日期。</target>
        </trans-unit>
        <trans-unit id="7645e6fd1e91dfad4e70083d2e092be76ea5b9c0" translate="yes" xml:space="preserve">
          <source>In this example, we assign the &lt;code&gt;name&lt;/code&gt; parameter from the incoming HTTP request to the &lt;code&gt;name&lt;/code&gt; attribute of the &lt;code&gt;App\Flight&lt;/code&gt; model instance. When we call the &lt;code&gt;save&lt;/code&gt; method, a record will be inserted into the database. The &lt;code&gt;created_at&lt;/code&gt; and &lt;code&gt;updated_at&lt;/code&gt; timestamps will automatically be set when the &lt;code&gt;save&lt;/code&gt; method is called, so there is no need to set them manually.</source>
          <target state="translated">在此示例中，我们将传入HTTP请求中的 &lt;code&gt;name&lt;/code&gt; 参数分配给 &lt;code&gt;App\Flight&lt;/code&gt; 模型实例的 &lt;code&gt;name&lt;/code&gt; 属性。当我们调用 &lt;code&gt;save&lt;/code&gt; 方法时，一条记录将被插入数据库中。该 &lt;code&gt;created_at&lt;/code&gt; 和 &lt;code&gt;updated_at&lt;/code&gt; 时间戳将自动设置时， &lt;code&gt;save&lt;/code&gt; 方法被调用，因此没有必要进行手动设置。</target>
        </trans-unit>
        <trans-unit id="678e580504eabf6d006ae5c37d68d358be33db0e" translate="yes" xml:space="preserve">
          <source>In this example, we assign the &lt;code&gt;name&lt;/code&gt; parameter from the incoming HTTP request to the &lt;code&gt;name&lt;/code&gt; attribute of the &lt;code&gt;App\Models\Flight&lt;/code&gt; model instance. When we call the &lt;code&gt;save&lt;/code&gt; method, a record will be inserted into the database. The &lt;code&gt;created_at&lt;/code&gt; and &lt;code&gt;updated_at&lt;/code&gt; timestamps will automatically be set when the &lt;code&gt;save&lt;/code&gt; method is called, so there is no need to set them manually.</source>
          <target state="translated">在此示例中，我们将传入HTTP请求中的 &lt;code&gt;name&lt;/code&gt; 参数分配给 &lt;code&gt;App\Models\Flight&lt;/code&gt; 模型实例的 &lt;code&gt;name&lt;/code&gt; 属性。当我们调用 &lt;code&gt;save&lt;/code&gt; 方法时，一条记录将被插入数据库中。该 &lt;code&gt;created_at&lt;/code&gt; 和 &lt;code&gt;updated_at&lt;/code&gt; 时间戳将自动设置时， &lt;code&gt;save&lt;/code&gt; 方法被调用，因此没有必要进行手动设置。</target>
        </trans-unit>
        <trans-unit id="7b409a867b088dba02674a12d19ff62006e3cba6" translate="yes" xml:space="preserve">
          <source>In this example, we register a greeting, a line of text, a call to action, and then another line of text. These methods provided by the &lt;code&gt;MailMessage&lt;/code&gt; object make it simple and fast to format small transactional emails. The mail channel will then translate the message components into a nice, responsive HTML email template with a plain-text counterpart. Here is an example of an email generated by the &lt;code&gt;mail&lt;/code&gt; channel:</source>
          <target state="translated">在此示例中，我们注册了问候语，一行文本，号召性用语，然后是另一行文本。 &lt;code&gt;MailMessage&lt;/code&gt; 对象提供的这些方法使格式化小型交易电子邮件变得简单而快捷。然后，邮件通道会将消息组件转换为带有纯文本副本的漂亮的，响应性强的HTML电子邮件模板。这是 &lt;code&gt;mail&lt;/code&gt; 渠道生成的电子邮件的示例：</target>
        </trans-unit>
        <trans-unit id="55dd4321c0759a519afbc6bc62fb828fc475d0b1" translate="yes" xml:space="preserve">
          <source>In this example, we used a traditional form to send data to the application. However, many applications use AJAX requests. When using the &lt;code&gt;validate&lt;/code&gt; method during an AJAX request, Laravel will not generate a redirect response. Instead, Laravel generates a JSON response containing all of the validation errors. This JSON response will be sent with a 422 HTTP status code.</source>
          <target state="translated">在此示例中，我们使用传统形式将数据发送到应用程序。但是，许多应用程序都使用AJAX请求。在AJAX请求期间使用 &lt;code&gt;validate&lt;/code&gt; 方法时，Laravel将不会生成重定向响应。相反，Laravel会生成一个包含所有验证错误的JSON响应。该JSON响应将以422 HTTP状态代码发送。</target>
        </trans-unit>
        <trans-unit id="4f8fa72d734a9abb5456764c3e324b63deff21a3" translate="yes" xml:space="preserve">
          <source>In this example, we will use the &lt;code&gt;LoadImportBatch&lt;/code&gt; job to hydrate the batch with additional jobs. To accomplish this, we may use the &lt;code&gt;add&lt;/code&gt; method on the batch instance that can be accessed within the job:</source>
          <target state="translated">在此示例中，我们将使用 &lt;code&gt;LoadImportBatch&lt;/code&gt; 作业将批处理与其他作业进行水合。为此，我们可以在作业中可以访问的批处理实例上使用 &lt;code&gt;add&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="3c8df09327d1a61c868a95781417326ce057d315" translate="yes" xml:space="preserve">
          <source>In this example, we'll attach a relation to some created models. When using the &lt;code&gt;create&lt;/code&gt; method to create multiple models, an Eloquent &lt;a href=&quot;eloquent-collections&quot;&gt;collection instance&lt;/a&gt; is returned, allowing you to use any of the convenient functions provided by the collection, such as &lt;code&gt;each&lt;/code&gt;:</source>
          <target state="translated">在这个例子中，我们将一个关系附加到一些创建的模型上。使用 &lt;code&gt;create&lt;/code&gt; 方法创建多个模型时，将返回一个Eloquent &lt;a href=&quot;eloquent-collections&quot;&gt;集合实例&lt;/a&gt;，使您可以使用集合提供的任何便捷功能，例如 &lt;code&gt;each&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="48aa07114d1dbabd827aec6417e740a6ed152a8b" translate="yes" xml:space="preserve">
          <source>In this example, we're passing the &lt;code&gt;can&lt;/code&gt; middleware two arguments. The first is the name of the action we wish to authorize and the second is the route parameter we wish to pass to the policy method. In this case, since we are using &lt;a href=&quot;routing#implicit-binding&quot;&gt;implicit model binding&lt;/a&gt;, a &lt;code&gt;Post&lt;/code&gt; model will be passed to the policy method. If the user is not authorized to perform the given action, a HTTP response with a &lt;code&gt;403&lt;/code&gt; status code will be generated by the middleware.</source>
          <target state="translated">在此示例中，我们传递了 &lt;code&gt;can&lt;/code&gt; 中间件两个参数。第一个是我们希望授权的操作的名称，第二个是我们希望传递给策略方法的route参数。在这种情况下，由于我们使用&lt;a href=&quot;routing#implicit-binding&quot;&gt;隐式模型绑定&lt;/a&gt;，因此 &lt;code&gt;Post&lt;/code&gt; 模型将传递给policy方法。如果用户无权执行给定的操作，则中间件将生成带有 &lt;code&gt;403&lt;/code&gt; 状态代码的HTTP响应。</target>
        </trans-unit>
        <trans-unit id="08778dad2ada2362b8a924bce70cc333b3eeb4af" translate="yes" xml:space="preserve">
          <source>In this example, we're passing the &lt;code&gt;can&lt;/code&gt; middleware two arguments. The first is the name of the action we wish to authorize and the second is the route parameter we wish to pass to the policy method. In this case, since we are using &lt;a href=&quot;routing#implicit-binding&quot;&gt;implicit model binding&lt;/a&gt;, a &lt;code&gt;Post&lt;/code&gt; model will be passed to the policy method. If the user is not authorized to perform the given action, an HTTP response with a &lt;code&gt;403&lt;/code&gt; status code will be generated by the middleware.</source>
          <target state="translated">在此示例中，我们传递了 &lt;code&gt;can&lt;/code&gt; 中间件两个参数。第一个是我们希望授权的操作的名称，第二个是我们希望传递给策略方法的route参数。在这种情况下，由于我们使用&lt;a href=&quot;routing#implicit-binding&quot;&gt;隐式模型绑定&lt;/a&gt;，因此 &lt;code&gt;Post&lt;/code&gt; 模型将传递给policy方法。如果用户无权执行给定的操作，则中间件将生成带有 &lt;code&gt;403&lt;/code&gt; 状态代码的HTTP响应。</target>
        </trans-unit>
        <trans-unit id="31cf8434e7fd0b7b62c51b005cf3d7214d24fc05" translate="yes" xml:space="preserve">
          <source>In this overview you will learn how to write your own service providers and register them with your Laravel application.</source>
          <target state="translated">在这个概述中,你将学习如何编写你自己的服务提供者,并在你的Laravel应用程序中注册他们.</target>
        </trans-unit>
        <trans-unit id="0a371cb1ae5274fad95e57ac9993ae7c792d4583" translate="yes" xml:space="preserve">
          <source>In web applications, one of the most common use-cases for storing files is storing user uploaded files such as profile pictures, photos, and documents. Laravel makes it very easy to store uploaded files using the &lt;code&gt;store&lt;/code&gt; method on an uploaded file instance. Call the &lt;code&gt;store&lt;/code&gt; method with the path at which you wish to store the uploaded file:</source>
          <target state="translated">在Web应用程序中，最常见的存储文件用例之一是存储用户上传的文件，例如个人资料图片，照片和文档。Laravel使使用上载文件实例上的 &lt;code&gt;store&lt;/code&gt; 方法存储上载文件非常容易。使用要存储上载文件的路径调用 &lt;code&gt;store&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="ce954e9a3774e22208ca0f27349cf1a8281d83fc" translate="yes" xml:space="preserve">
          <source>In your &lt;code&gt;auth.php&lt;/code&gt; configuration file, you may configure multiple &quot;guards&quot;, which may be used to define authentication behavior for multiple user tables. You can customize the included &lt;code&gt;ResetPasswordController&lt;/code&gt; to use the guard of your choice by overriding the &lt;code&gt;guard&lt;/code&gt; method on the controller. This method should return a guard instance:</source>
          <target state="translated">在您的 &lt;code&gt;auth.php&lt;/code&gt; 配置文件中，您可以配置多个&amp;ldquo;防护&amp;rdquo;，这些防护可以用于定义多个用户表的认证行为。您可以通过覆盖控制器上的 &lt;code&gt;guard&lt;/code&gt; 方法，自定义包含的 &lt;code&gt;ResetPasswordController&lt;/code&gt; 以使用您选择的Guard。此方法应返回一个保护实例：</target>
        </trans-unit>
        <trans-unit id="243a61a48b1464612ee3b00761d5251a4d87ad3f" translate="yes" xml:space="preserve">
          <source>In your &lt;code&gt;auth.php&lt;/code&gt; configuration file, you may configure multiple password &quot;brokers&quot;, which may be used to reset passwords on multiple user tables. You can customize the included &lt;code&gt;ForgotPasswordController&lt;/code&gt; and &lt;code&gt;ResetPasswordController&lt;/code&gt; to use the broker of your choice by overriding the &lt;code&gt;broker&lt;/code&gt; method:</source>
          <target state="translated">在您的 &lt;code&gt;auth.php&lt;/code&gt; 配置文件中，您可以配置多个密码&amp;ldquo;代理&amp;rdquo;，这些代理可用于重置多个用户表上的密码。您可以通过覆盖 &lt;code&gt;broker&lt;/code&gt; 方法来自定义包含的 &lt;code&gt;ForgotPasswordController&lt;/code&gt; 和 &lt;code&gt;ResetPasswordController&lt;/code&gt; 以使用您选择的代理：</target>
        </trans-unit>
        <trans-unit id="1524288543700d7d9e32205b8fd0adb4e8cf8ac1" translate="yes" xml:space="preserve">
          <source>In your &lt;code&gt;config/queue.php&lt;/code&gt; configuration file, each queue connection defines a &lt;code&gt;retry_after&lt;/code&gt; option. This option specifies how many seconds the queue connection should wait before retrying a job that is being processed. For example, if the value of &lt;code&gt;retry_after&lt;/code&gt; is set to &lt;code&gt;90&lt;/code&gt;, the job will be released back onto the queue if it has been processing for 90 seconds without being deleted. Typically, you should set the &lt;code&gt;retry_after&lt;/code&gt; value to the maximum number of seconds your jobs should reasonably take to complete processing.</source>
          <target state="translated">在您的 &lt;code&gt;config/queue.php&lt;/code&gt; 配置文件中，每个队列连接都定义了一个 &lt;code&gt;retry_after&lt;/code&gt; 选项。该选项指定队列连接在重试正在处理的作业之前应等待的秒数。例如，如果 &lt;code&gt;retry_after&lt;/code&gt; 的值设置为 &lt;code&gt;90&lt;/code&gt; ，则该作业如果已处理90秒而没有被删除，则它将被释放回到队列中。通常，您应该将 &lt;code&gt;retry_after&lt;/code&gt; 值设置为作业完成完成处理应合理花费的最大秒数。</target>
        </trans-unit>
        <trans-unit id="e4a5eae4878fa1d29183fea69ff2e42fec94a9e1" translate="yes" xml:space="preserve">
          <source>In::__construct()</source>
          <target state="translated">In::__construct()</target>
        </trans-unit>
        <trans-unit id="1ada18d61a4a2f9d0f12e01cd177a5007beeb936" translate="yes" xml:space="preserve">
          <source>In::__toString()</source>
          <target state="translated">In::__toString()</target>
        </trans-unit>
        <trans-unit id="58d35338f404b009e6738d9ccfd1d1a2d15ccef2" translate="yes" xml:space="preserve">
          <source>Inbound Casting</source>
          <target state="translated">入站铸造</target>
        </trans-unit>
        <trans-unit id="58f82d0812f7117dc6f2e8f0a267abdc22110de3" translate="yes" xml:space="preserve">
          <source>Included Software</source>
          <target state="translated">包括软件</target>
        </trans-unit>
        <trans-unit id="53bed8a85a2245a3110061dfbda8a710ae7bac44" translate="yes" xml:space="preserve">
          <source>Including Soft Deleted Models</source>
          <target state="translated">包括软删除模型</target>
        </trans-unit>
        <trans-unit id="60b4bee006119a74c478faf1735ae28fd427a1da" translate="yes" xml:space="preserve">
          <source>Including Sub-Views</source>
          <target state="translated">包括子视图</target>
        </trans-unit>
        <trans-unit id="d55523b6934eda41c1a887a706c9dbafac336890" translate="yes" xml:space="preserve">
          <source>Including Subviews</source>
          <target state="translated">包括子视图</target>
        </trans-unit>
        <trans-unit id="f7b9e8b49f6a6e1cedd1a5680b32d57c92cfa1af" translate="yes" xml:space="preserve">
          <source>Incomplete and Past Due State</source>
          <target state="translated">未完成和逾期状态</target>
        </trans-unit>
        <trans-unit id="4b44b11a923654fa4809062da63045c2734dc139" translate="yes" xml:space="preserve">
          <source>Incomplete and Past Due Status</source>
          <target state="translated">未完成和逾期状态</target>
        </trans-unit>
        <trans-unit id="4e6b64578fe784042a30fcd187761db768f450bb" translate="yes" xml:space="preserve">
          <source>Increment &amp;amp; Decrement</source>
          <target state="translated">增减</target>
        </trans-unit>
        <trans-unit id="fa191665f5515d240421d27bb3fcd2dc3616e350" translate="yes" xml:space="preserve">
          <source>Increment / Decrement Events</source>
          <target state="translated">递增/递减事件</target>
        </trans-unit>
        <trans-unit id="8ed656d77828bd104d07eefa11edb709fd88fd24" translate="yes" xml:space="preserve">
          <source>Increment a column's value by a given amount.</source>
          <target state="translated">将列的值增加一个给定的数量。</target>
        </trans-unit>
        <trans-unit id="a4483e397144f43243f9e02d68088cac7428c934" translate="yes" xml:space="preserve">
          <source>Increment or decrement an item in the cache.</source>
          <target state="translated">递增或递减缓存中的项目。</target>
        </trans-unit>
        <trans-unit id="63e69a8aa2f845e89302c9269a68f4d89a5c6271" translate="yes" xml:space="preserve">
          <source>Increment or decrement the given attribute using the custom cast class.</source>
          <target state="translated">使用自定义投射类增加或减少给定属性。</target>
        </trans-unit>
        <trans-unit id="9d0e8b6df8d036844b32b7dfbf8c6e2bf60687fa" translate="yes" xml:space="preserve">
          <source>Increment the attribute.</source>
          <target state="translated">增加属性。</target>
        </trans-unit>
        <trans-unit id="f31526e48256ed6e974c64a774df5e928fac32d3" translate="yes" xml:space="preserve">
          <source>Increment the counter for a given key for a given decay time.</source>
          <target state="translated">在给定的衰减时间内,增加给定密钥的计数器。</target>
        </trans-unit>
        <trans-unit id="f8ad60ae4fc0d1de2038ac3781d68abdc7001a21" translate="yes" xml:space="preserve">
          <source>Increment the failed jobs for the batch.</source>
          <target state="translated">增加该批次的失败作业。</target>
        </trans-unit>
        <trans-unit id="74a7a5ac36856023c6f877a164006194f1934cf0" translate="yes" xml:space="preserve">
          <source>Increment the login attempts for the user.</source>
          <target state="translated">增加用户的登录次数。</target>
        </trans-unit>
        <trans-unit id="b2bc3ea2a13350bb4bfb5ddd0834d26e0d26a359" translate="yes" xml:space="preserve">
          <source>Increment the number of times the job has been attempted.</source>
          <target state="translated">增加作业的尝试次数。</target>
        </trans-unit>
        <trans-unit id="4a0b0dc6d6546e3695a3c0b6d4e3cdbeb46b3952" translate="yes" xml:space="preserve">
          <source>Increment the rendering counter.</source>
          <target state="translated">增加渲染计数器。</target>
        </trans-unit>
        <trans-unit id="3a235ff37d4244756ff4c714a1b9764197ffe1f6" translate="yes" xml:space="preserve">
          <source>Increment the top loop's indices.</source>
          <target state="translated">增加顶部循环的指数。</target>
        </trans-unit>
        <trans-unit id="a439d26591740d32b31969595500806375aba35a" translate="yes" xml:space="preserve">
          <source>Increment the total number of failed jobs for the batch.</source>
          <target state="translated">递增该批次失败作业的总数。</target>
        </trans-unit>
        <trans-unit id="f986cf6a49bd05aefb40d42397f685e22e1be162" translate="yes" xml:space="preserve">
          <source>Increment the total number of jobs within the batch.</source>
          <target state="translated">增加批次内的作业总数。</target>
        </trans-unit>
        <trans-unit id="fbf36fd3c20d20f78788a458b293e1b64728b151" translate="yes" xml:space="preserve">
          <source>Increment the underlying attribute value and sync with original.</source>
          <target state="translated">增加基础属性值,并与原属性值同步。</target>
        </trans-unit>
        <trans-unit id="bd462300156b4c9217ac341bce7277930e8c13a9" translate="yes" xml:space="preserve">
          <source>Increment the value of an item in the cache.</source>
          <target state="translated">增加缓存中一个项目的值。</target>
        </trans-unit>
        <trans-unit id="71eddc5157e377fc43bbc60eca7ecaa1eacf91ab" translate="yes" xml:space="preserve">
          <source>Increment the value of an item in the session.</source>
          <target state="translated">增加会话中一个项目的价值。</target>
        </trans-unit>
        <trans-unit id="9b9529aa83638faa3de648e21f86dbd495a97d46" translate="yes" xml:space="preserve">
          <source>Incrementing / Decrementing Values</source>
          <target state="translated">递增/递减值。</target>
        </trans-unit>
        <trans-unit id="0ffcc65e726c58fe174e651b450b752578d81c56" translate="yes" xml:space="preserve">
          <source>Index Lengths &amp;amp; MySQL / MariaDB</source>
          <target state="translated">索引长度和MySQL / MariaDB</target>
        </trans-unit>
        <trans-unit id="f642ee196088372ea886186c6c617515599afd3f" translate="yes" xml:space="preserve">
          <source>Indexes</source>
          <target state="translated">Indexes</target>
        </trans-unit>
        <trans-unit id="9951861c21df18489a5872209655d6f9039b5e2a" translate="yes" xml:space="preserve">
          <source>Indexing</source>
          <target state="translated">Indexing</target>
        </trans-unit>
        <trans-unit id="8483f571e1531b3290891a35fc6218a587d0b11e" translate="yes" xml:space="preserve">
          <source>Indicate if any records have been modified.</source>
          <target state="translated">说明是否有任何记录被修改。</target>
        </trans-unit>
        <trans-unit id="c75ba7263fda8c4703639bf91fa85e1de8b70652" translate="yes" xml:space="preserve">
          <source>Indicate if the job should be deleted when models are missing.</source>
          <target state="translated">表示当模型缺失时是否应删除作业。</target>
        </trans-unit>
        <trans-unit id="9d490e7c187516a679ff603fed4da08be329f2ad" translate="yes" xml:space="preserve">
          <source>Indicate that Bootstrap 3 styling should be used for generated links.</source>
          <target state="translated">表示生成的链接应该使用Bootstrap 3样式。</target>
        </trans-unit>
        <trans-unit id="6c8baee9a5295601bd3ee26237ac09ce57bd6d55" translate="yes" xml:space="preserve">
          <source>Indicate that Bootstrap 4 styling should be used for generated links.</source>
          <target state="translated">表示生成的链接应该使用Bootstrap 4样式。</target>
        </trans-unit>
        <trans-unit id="dc666b601a907c58901dff78b5f48f193e8d27ee" translate="yes" xml:space="preserve">
          <source>Indicate that JSON should be returned by the server.</source>
          <target state="translated">表示服务器应该返回JSON。</target>
        </trans-unit>
        <trans-unit id="e14099e5f79897f9fb8684ed157319131fed828c" translate="yes" xml:space="preserve">
          <source>Indicate that TLS certificates should not be verified.</source>
          <target state="translated">表示不应该验证TLS证书。</target>
        </trans-unit>
        <trans-unit id="be6f6f35ddd40965dbfe2c7aba39fefd9cc6383e" translate="yes" xml:space="preserve">
          <source>Indicate that Tailwind styling should be used for generated links.</source>
          <target state="translated">表示尾风样式应该用于生成的链接。</target>
        </trans-unit>
        <trans-unit id="ffa82fbcb81dc3f49b93ad51b27a94fc36625c55" translate="yes" xml:space="preserve">
          <source>Indicate that UUIDs should be created normally and not using a custom factory.</source>
          <target state="translated">表示应该正常创建UUID,而不是使用自定义工厂。</target>
        </trans-unit>
        <trans-unit id="e087772aa6d05920f69ab7e9bb06710c2f45245a" translate="yes" xml:space="preserve">
          <source>Indicate that all current query parameters should be appended to pagination links.</source>
          <target state="translated">表示当前所有的查询参数都要附加到分页链接中。</target>
        </trans-unit>
        <trans-unit id="05615977eaca254a2335536086b493be1e10d5c6" translate="yes" xml:space="preserve">
          <source>Indicate that an attribute should be excluded when another attribute does not have a given value.</source>
          <target state="translated">表示当另一个属性没有给定的值时,应该排除该属性。</target>
        </trans-unit>
        <trans-unit id="58d2a776bf19081104fb5a6766249cd9291d4275" translate="yes" xml:space="preserve">
          <source>Indicate that an attribute should be excluded when another attribute has a given value.</source>
          <target state="translated">表示当另一个属性具有给定值时,应将该属性排除在外。</target>
        </trans-unit>
        <trans-unit id="2e241f9779fde71119bf6589c8d65195fc52689f" translate="yes" xml:space="preserve">
          <source>Indicate that an attribute should be excluded when another attribute is missing.</source>
          <target state="translated">表示当另一属性缺失时,应排除该属性。</target>
        </trans-unit>
        <trans-unit id="4ca1c58cc5ed4e953c80b359923e907137bd573c" translate="yes" xml:space="preserve">
          <source>Indicate that component tags should not be compiled.</source>
          <target state="translated">表示组件标签不应该被编译。</target>
        </trans-unit>
        <trans-unit id="c144d7d541a0534ac245dd5880232d12fc8bdf2e" translate="yes" xml:space="preserve">
          <source>Indicate that deletes should be restricted.</source>
          <target state="translated">表示应限制删除。</target>
        </trans-unit>
        <trans-unit id="c51a2adc4cf13ed7e1355275aa57a83244c9aa4c" translate="yes" xml:space="preserve">
          <source>Indicate that deletes should cascade.</source>
          <target state="translated">表示删除应该层层递进。</target>
        </trans-unit>
        <trans-unit id="d1ba22701329de7a93d5b76c6f84ee35819ca0b7" translate="yes" xml:space="preserve">
          <source>Indicate that deletes should set the foreign key value to null.</source>
          <target state="translated">表示删除时应将外键值设置为空。</target>
        </trans-unit>
        <trans-unit id="dcf7467594edce389bbf39cb17f7fb260a922167" translate="yes" xml:space="preserve">
          <source>Indicate that redirects should not be followed.</source>
          <target state="translated">表示不应遵循重定向。</target>
        </trans-unit>
        <trans-unit id="67404d5e5eca7f8f47dc04835e5a1ec8417dc844" translate="yes" xml:space="preserve">
          <source>Indicate that report handling should stop after invoking this callback.</source>
          <target state="translated">表示在调用该回调后应停止报告处理。</target>
        </trans-unit>
        <trans-unit id="41b0be9ee962f8db51f8203f5d8b124a8abfb99f" translate="yes" xml:space="preserve">
          <source>Indicate that the batch should not be cancelled when a job within the batch fails.</source>
          <target state="translated">表示当批次内的作业失败时,不应取消该批次。</target>
        </trans-unit>
        <trans-unit id="ef204fe2afff27b8b6860a52ea7f6bf460a736e4" translate="yes" xml:space="preserve">
          <source>Indicate that the given column and foreign key should be dropped.</source>
          <target state="translated">表示应该放弃给定的列和外键。</target>
        </trans-unit>
        <trans-unit id="e320d89cffa329dcddb7488c45d10128f3fffbe9" translate="yes" xml:space="preserve">
          <source>Indicate that the given columns should be dropped.</source>
          <target state="translated">表示应放弃给定的列。</target>
        </trans-unit>
        <trans-unit id="3ada10c8d8018395aa0924361528092dbeda3713" translate="yes" xml:space="preserve">
          <source>Indicate that the given columns should be renamed.</source>
          <target state="translated">表示应重新命名给定的列。</target>
        </trans-unit>
        <trans-unit id="7fd25c21f3b4c9b05a5ea5e606ae548cf5e36fb2" translate="yes" xml:space="preserve">
          <source>Indicate that the given exception type should not be reported.</source>
          <target state="translated">表示不应报告给定的异常类型。</target>
        </trans-unit>
        <trans-unit id="112b10887f4cab70e2e100e41903ee856a026a10" translate="yes" xml:space="preserve">
          <source>Indicate that the given foreign key should be dropped.</source>
          <target state="translated">表示应放弃给定的外键。</target>
        </trans-unit>
        <trans-unit id="6bb761eb2d7f273838ee8e95a1facc47cdd0f842" translate="yes" xml:space="preserve">
          <source>Indicate that the given index should be dropped.</source>
          <target state="translated">表示应放弃给定指数。</target>
        </trans-unit>
        <trans-unit id="557da3914113389329c23c0c7e75a3509252cbe4" translate="yes" xml:space="preserve">
          <source>Indicate that the given indexes should be renamed.</source>
          <target state="translated">表示应重新命名给定的索引。</target>
        </trans-unit>
        <trans-unit id="1d0d2405deb02fb2261e398f8b6a274cb11bad52" translate="yes" xml:space="preserve">
          <source>Indicate that the given primary key should be dropped.</source>
          <target state="translated">表示应放弃给定的主键。</target>
        </trans-unit>
        <trans-unit id="2f8bc6bf350ef412195675e4686b69f2a66a88bd" translate="yes" xml:space="preserve">
          <source>Indicate that the given spatial index should be dropped.</source>
          <target state="translated">表示应放弃给定的空间指数。</target>
        </trans-unit>
        <trans-unit id="d949705ca337b2f864b4225ea7f476d1d27c8791" translate="yes" xml:space="preserve">
          <source>Indicate that the given unique key should be dropped.</source>
          <target state="translated">表示应放弃给定的唯一密钥。</target>
        </trans-unit>
        <trans-unit id="f262c51707494abffa59ee777d59f772cf5d1c17" translate="yes" xml:space="preserve">
          <source>Indicate that the job should be dispatched after the response is sent to the browser.</source>
          <target state="translated">表示应在将响应发送到浏览器后派遣作业。</target>
        </trans-unit>
        <trans-unit id="8e0577ff1f7edce5a456615ad7bed1d5349acb5d" translate="yes" xml:space="preserve">
          <source>Indicate that the notification gives information about a successful operation.</source>
          <target state="translated">表示该通知给出了成功操作的信息。</target>
        </trans-unit>
        <trans-unit id="da6af317c9fa4c9319a160c096ecfec447a033ed" translate="yes" xml:space="preserve">
          <source>Indicate that the notification gives information about a warning.</source>
          <target state="translated">表明通知书提供了有关警告的信息。</target>
        </trans-unit>
        <trans-unit id="b1e4d3b4f57c6d9fb779163ae917292d46144143" translate="yes" xml:space="preserve">
          <source>Indicate that the notification gives information about an error.</source>
          <target state="translated">表明通知提供了有关错误的信息。</target>
        </trans-unit>
        <trans-unit id="5b2b50614f4011aa2604723ef4a696a347592e6f" translate="yes" xml:space="preserve">
          <source>Indicate that the notification gives information about an operation.</source>
          <target state="translated">表示该通知提供了有关操作的信息。</target>
        </trans-unit>
        <trans-unit id="ac57105d7d241e2eb1c1898210eabdff5eb3cd61" translate="yes" xml:space="preserve">
          <source>Indicate that the polymorphic columns should be dropped.</source>
          <target state="translated">表示应放弃多态列。</target>
        </trans-unit>
        <trans-unit id="627637fc17d47b8baf22e3828d1909d19fbc71c2" translate="yes" xml:space="preserve">
          <source>Indicate that the remember token column should be dropped.</source>
          <target state="translated">表示应放弃记忆令牌栏。</target>
        </trans-unit>
        <trans-unit id="39a5f14fdcdaea8f599a51820ae6e2998ba6ea3a" translate="yes" xml:space="preserve">
          <source>Indicate that the resource routes should be scoped using the given binding fields.</source>
          <target state="translated">表示资源路由应使用给定的绑定字段进行范围化。</target>
        </trans-unit>
        <trans-unit id="9df2ac18ac1000d164eb60cdcb8be932d44f1103" translate="yes" xml:space="preserve">
          <source>Indicate that the resource routes should have &quot;shallow&quot; nesting.</source>
          <target state="translated">说明资源路线应该有 &quot;浅 &quot;的嵌套。</target>
        </trans-unit>
        <trans-unit id="ecc2bd3df3398642668d30aacc0038b7382ecd23" translate="yes" xml:space="preserve">
          <source>Indicate that the soft delete column should be dropped.</source>
          <target state="translated">表示应放弃软删除列。</target>
        </trans-unit>
        <trans-unit id="d0bfc941b3431df313279c6889590a8c140773d3" translate="yes" xml:space="preserve">
          <source>Indicate that the table needs to be created.</source>
          <target state="translated">表示需要创建该表。</target>
        </trans-unit>
        <trans-unit id="e7f5fb99242137a5e0630403eb90fc3240cc3109" translate="yes" xml:space="preserve">
          <source>Indicate that the table needs to be temporary.</source>
          <target state="translated">表示该表需要临时。</target>
        </trans-unit>
        <trans-unit id="eb7351a1657aa0fd057a74106c77f627c3dd99d0" translate="yes" xml:space="preserve">
          <source>Indicate that the table should be dropped if it exists.</source>
          <target state="translated">表示如果存在该表,则应将其删除。</target>
        </trans-unit>
        <trans-unit id="af6ac437c589e85bac0e93716f54f3baaa3f57bc" translate="yes" xml:space="preserve">
          <source>Indicate that the table should be dropped.</source>
          <target state="translated">表示应放弃该表。</target>
        </trans-unit>
        <trans-unit id="e5abf3c41c3fc2b34e76227860f1ff41f954e811" translate="yes" xml:space="preserve">
          <source>Indicate that the timestamp columns should be dropped.</source>
          <target state="translated">表示应放弃时间戳列。</target>
        </trans-unit>
        <trans-unit id="4b36ef8c9f345cfe86b1623563e6add1d83ce5e8" translate="yes" xml:space="preserve">
          <source>Indicate that this sequence has depleted all of its responses.</source>
          <target state="translated">表示该序列已耗尽所有反应。</target>
        </trans-unit>
        <trans-unit id="03481c1a347955bb9122ad1768a627dfe5159dca" translate="yes" xml:space="preserve">
          <source>Indicate that trashed &quot;through&quot; parents should be included in the query.</source>
          <target state="translated">表示在查询中应包括被破坏的 &quot;通 &quot;父母。</target>
        </trans-unit>
        <trans-unit id="14f8054fc901f629bea44f1e98f52135736e4f08" translate="yes" xml:space="preserve">
          <source>Indicate that updates should cascade.</source>
          <target state="translated">说明更新应该层层递进。</target>
        </trans-unit>
        <trans-unit id="113faba1c21b38f7743ddc166b86a0d7c6a129e9" translate="yes" xml:space="preserve">
          <source>Indicate the request contains JSON.</source>
          <target state="translated">表示该请求包含JSON。</target>
        </trans-unit>
        <trans-unit id="07351eac88876a1622ad4b0b6941f008456196c4" translate="yes" xml:space="preserve">
          <source>Indicate the request contains form parameters.</source>
          <target state="translated">表示该请求包含表单参数。</target>
        </trans-unit>
        <trans-unit id="2b2ef28c4f2532a8b319afd97e227f6cbcf7966d" translate="yes" xml:space="preserve">
          <source>Indicate the request is a multi-part form request.</source>
          <target state="translated">表示该请求是一个多部分的表格请求。</target>
        </trans-unit>
        <trans-unit id="2ae38d43604dfa013aa8ee4959fcd61cbfc488ae" translate="yes" xml:space="preserve">
          <source>Indicate the type of content that should be returned by the server.</source>
          <target state="translated">指明服务器应该返回的内容类型。</target>
        </trans-unit>
        <trans-unit id="2a763d0e93c73448bd86c91b372947c88d47a418" translate="yes" xml:space="preserve">
          <source>Indicated whether JSON requests should be performed &quot;with credentials&quot; (cookies).</source>
          <target state="translated">表示是否应该 &quot;带着凭证&quot;(cookies)执行JSON请求。</target>
        </trans-unit>
        <trans-unit id="8b75f3bd4244116a0614819b622bc1e5f7f0d048" translate="yes" xml:space="preserve">
          <source>Indicates if APCu is supported.</source>
          <target state="translated">表示是否支持APCu。</target>
        </trans-unit>
        <trans-unit id="b609b93f002b1b303ac64c439e3805d4ce73a5d3" translate="yes" xml:space="preserve">
          <source>Indicates if a default model instance should be used.</source>
          <target state="translated">表示是否应使用默认模型实例。</target>
        </trans-unit>
        <trans-unit id="dfa33171d5ceabaf04509ff62bae5837e829ca47" translate="yes" xml:space="preserve">
          <source>Indicates if a loader has been registered.</source>
          <target state="translated">表示是否有装载机被注册。</target>
        </trans-unit>
        <trans-unit id="15fa47fb192181b642e894e6fe76d4b50962320a" translate="yes" xml:space="preserve">
          <source>Indicates if a token user retrieval has been attempted.</source>
          <target state="translated">表示是否已尝试检索令牌用户。</target>
        </trans-unit>
        <trans-unit id="cb718ef70fef92bf120ffde300c81e490e1f0558" translate="yes" xml:space="preserve">
          <source>Indicates if all existing request query parameters should be added to pagination links.</source>
          <target state="translated">表示是否应该将所有现有的请求查询参数添加到分页链接中。</target>
        </trans-unit>
        <trans-unit id="ac55f3a642a77e844031c2e87682e8d4bf06452f" translate="yes" xml:space="preserve">
          <source>Indicates if all mass assignment is enabled.</source>
          <target state="translated">表示是否启用了所有质量分配。</target>
        </trans-unit>
        <trans-unit id="8dc592b8177120b66cfff59fca8225fb1cb601b1" translate="yes" xml:space="preserve">
          <source>Indicates if changes have been made to the database.</source>
          <target state="translated">表示是否对数据库进行了修改。</target>
        </trans-unit>
        <trans-unit id="a76dad66d6fa3a9ad7ddb044c7fbd6f1d60ee922" translate="yes" xml:space="preserve">
          <source>Indicates if channel names and usernames should be linked.</source>
          <target state="translated">表示频道名称和用户名是否应该被链接。</target>
        </trans-unit>
        <trans-unit id="dc247c517304146a3d214cb451b872f24ce471a4" translate="yes" xml:space="preserve">
          <source>Indicates if component tags should be compiled.</source>
          <target state="translated">表示是否应该编译组件标签。</target>
        </trans-unit>
        <trans-unit id="cc542ec4c7c7ffad005cee1757a452248c921031" translate="yes" xml:space="preserve">
          <source>Indicates if cookies should be serialized.</source>
          <target state="translated">表示是否要对Cookie进行序列化。</target>
        </trans-unit>
        <trans-unit id="67a420a672e545baa9fc00cdd20e49a510ec9878" translate="yes" xml:space="preserve">
          <source>Indicates if loading of the provider is deferred.</source>
          <target state="translated">表示提供者的加载是否被推迟。</target>
        </trans-unit>
        <trans-unit id="5841da76043aa9e63b02883f22fd8ad97dc10135" translate="yes" xml:space="preserve">
          <source>Indicates if messages should bubble up to other channels after being handled</source>
          <target state="translated">表示信息在处理后是否要冒泡到其他通道。</target>
        </trans-unit>
        <trans-unit id="fcc194793cca58bae58a76bd957768b37edff984" translate="yes" xml:space="preserve">
          <source>Indicates if reporting should stop after invoking this handler.</source>
          <target state="translated">表示在调用该处理程序后是否应停止报告。</target>
        </trans-unit>
        <trans-unit id="5d1855d85a525f5669e8b8706d039295eecffde8" translate="yes" xml:space="preserve">
          <source>Indicates if the API token is hashed in storage.</source>
          <target state="translated">表示API令牌是否在存储中被哈希。</target>
        </trans-unit>
        <trans-unit id="819c4958958edfa0bbf7b31d90c4efb66287ebaf" translate="yes" xml:space="preserve">
          <source>Indicates if the Closure commands have been loaded.</source>
          <target state="translated">表示是否已加载Closure命令。</target>
        </trans-unit>
        <trans-unit id="13b41f05162327c1cf5f7cf0d9922770a8a87777" translate="yes" xml:space="preserve">
          <source>Indicates if the IDs are auto-incrementing.</source>
          <target state="translated">表示ID是否自动递增。</target>
        </trans-unit>
        <trans-unit id="7135809d359a24e84a441a0ae83db49705955e70" translate="yes" xml:space="preserve">
          <source>Indicates if the application has &quot;booted&quot;.</source>
          <target state="translated">表示应用程序是否已经 &quot;启动&quot;。</target>
        </trans-unit>
        <trans-unit id="1d44b3cbe4d8057b9d243e8e40788a4cf6d8ae4e" translate="yes" xml:space="preserve">
          <source>Indicates if the application has been bootstrapped before.</source>
          <target state="translated">表示应用程序是否曾经被引导过。</target>
        </trans-unit>
        <trans-unit id="340a34361513364fc424fffd24ff92b7bea9c047" translate="yes" xml:space="preserve">
          <source>Indicates if the application is running in the console.</source>
          <target state="translated">表示应用程序是否在控制台中运行。</target>
        </trans-unit>
        <trans-unit id="9eb8b8a5862269bf4227f6af5653b861847edd72" translate="yes" xml:space="preserve">
          <source>Indicates if the command should not overlap itself.</source>
          <target state="translated">表示该命令是否不应与自己重叠。</target>
        </trans-unit>
        <trans-unit id="58ac1184783289f0ac5debf2cd33efcd4921df34" translate="yes" xml:space="preserve">
          <source>Indicates if the command should only be allowed to run on one server for each cron expression.</source>
          <target state="translated">表示是否只允许每个cron表达式在一台服务器上运行该命令。</target>
        </trans-unit>
        <trans-unit id="565f31d9388a1d02ca012e569ab58580cf4da075" translate="yes" xml:space="preserve">
          <source>Indicates if the command should run in background.</source>
          <target state="translated">表示该命令是否应在后台运行。</target>
        </trans-unit>
        <trans-unit id="8a4a1918ce4c55f26322059bd89ab12935d25c6f" translate="yes" xml:space="preserve">
          <source>Indicates if the command should run in maintenance mode.</source>
          <target state="translated">表示该命令是否应在维护模式下运行。</target>
        </trans-unit>
        <trans-unit id="a43b217aec07fa5a89ffee749c58eeff5c226dc2" translate="yes" xml:space="preserve">
          <source>Indicates if the connection is in a &quot;dry run&quot;.</source>
          <target state="translated">表示连接是否处于 &quot;干运行 &quot;状态。</target>
        </trans-unit>
        <trans-unit id="ed1fbdbb5048963f325bea6d681c41f3daa62eb4" translate="yes" xml:space="preserve">
          <source>Indicates if the console output should be mocked.</source>
          <target state="translated">表示是否应该对控制台的输出进行模拟。</target>
        </trans-unit>
        <trans-unit id="e695e026b018540bce1a901a66b2e9d6823b3347" translate="yes" xml:space="preserve">
          <source>Indicates if the factory is recording requests and responses.</source>
          <target state="translated">表示工厂是否正在记录请求和响应。</target>
        </trans-unit>
        <trans-unit id="403b48d11a6e5a77b0f2b63992d16ecaaccc834e" translate="yes" xml:space="preserve">
          <source>Indicates if the file is locked.</source>
          <target state="translated">表示文件是否被锁定。</target>
        </trans-unit>
        <trans-unit id="892dc9d8cd9b81d8991db91c318a4859a14b7083" translate="yes" xml:space="preserve">
          <source>Indicates if the job has been deleted.</source>
          <target state="translated">表示该作业是否已被删除。</target>
        </trans-unit>
        <trans-unit id="e20b6b5356745e78630f408c8ab27daf2954aa35" translate="yes" xml:space="preserve">
          <source>Indicates if the job has been released.</source>
          <target state="translated">表示该作业是否已被释放。</target>
        </trans-unit>
        <trans-unit id="9e68cbe84b56cd5b885475b54f4a63d5487d00ab" translate="yes" xml:space="preserve">
          <source>Indicates if the job has failed.</source>
          <target state="translated">表示作业是否失败。</target>
        </trans-unit>
        <trans-unit id="d7559b3eda4d457fc4f106104bcb302bcc868010" translate="yes" xml:space="preserve">
          <source>Indicates if the job should be dispatched immediately after sending the response.</source>
          <target state="translated">表示是否应在发送响应后立即派遣作业。</target>
        </trans-unit>
        <trans-unit id="5b86e491eae66b5170e88ca91e0553f6dbb2a40e" translate="yes" xml:space="preserve">
          <source>Indicates if the job should be released if the limit is exceeded.</source>
          <target state="translated">表示如果超过限制,是否应该释放作业。</target>
        </trans-unit>
        <trans-unit id="3340d89ad8eb36d670dfa98adeff0595ca2a4f62" translate="yes" xml:space="preserve">
          <source>Indicates if the loader has been registered.</source>
          <target state="translated">表示装载机是否已注册。</target>
        </trans-unit>
        <trans-unit id="4ac0249fffae29d58d7b021bad38afd4078a3300" translate="yes" xml:space="preserve">
          <source>Indicates if the logout method has been called.</source>
          <target state="translated">表示是否已调用注销方法。</target>
        </trans-unit>
        <trans-unit id="f367df1017ac91611daa45498899270bab608080" translate="yes" xml:space="preserve">
          <source>Indicates if the model exists.</source>
          <target state="translated">表示该模型是否存在。</target>
        </trans-unit>
        <trans-unit id="bcf154256b9fd60f98c1d6a17ed80a897c61dc6e" translate="yes" xml:space="preserve">
          <source>Indicates if the model is currently force deleting.</source>
          <target state="translated">表示该模型当前是否被强制删除。</target>
        </trans-unit>
        <trans-unit id="b1b48fe4ab3d5c140c347e94e6a20510ed95bbb3" translate="yes" xml:space="preserve">
          <source>Indicates if the model should be timestamped.</source>
          <target state="translated">表示是否应该给模型打上时间戳。</target>
        </trans-unit>
        <trans-unit id="be575b0b97eb6a237dfc953b5230a095df6911dc" translate="yes" xml:space="preserve">
          <source>Indicates if the model was inserted during the current request lifecycle.</source>
          <target state="translated">表示模型是否在当前请求生命周期内被插入。</target>
        </trans-unit>
        <trans-unit id="52c8605087f21ee16ca99bcba7b76e22eb3ed92f" translate="yes" xml:space="preserve">
          <source>Indicates if the putenv adapter is enabled.</source>
          <target state="translated">表示是否启用putenv适配器。</target>
        </trans-unit>
        <trans-unit id="29ff77e90fdbaa03314d41d8247ff07b803991b8" translate="yes" xml:space="preserve">
          <source>Indicates if the query returns distinct results.</source>
          <target state="translated">表示查询是否返回不同的结果。</target>
        </trans-unit>
        <trans-unit id="b39233bce7ddbe2ade17f48712d40fa8471f265d" translate="yes" xml:space="preserve">
          <source>Indicates if the relation is adding constraints.</source>
          <target state="translated">表示关系是否在增加约束。</target>
        </trans-unit>
        <trans-unit id="a51ca035e76c480a09537be58c8a846b75f66450" translate="yes" xml:space="preserve">
          <source>Indicates if the session was handled for the current request.</source>
          <target state="translated">表示当前请求的会话是否被处理。</target>
        </trans-unit>
        <trans-unit id="162686c761b2e881cb137365290dc2683b4dc9d5" translate="yes" xml:space="preserve">
          <source>Indicates if the test database has been migrated.</source>
          <target state="translated">表示测试数据库是否已经迁移。</target>
        </trans-unit>
        <trans-unit id="dec7d2d46b3099ffe3e897c5a889b0f16580d847" translate="yes" xml:space="preserve">
          <source>Indicates if the user should be &quot;remembered&quot;.</source>
          <target state="translated">表示是否应该 &quot;记住 &quot;用户。</target>
        </trans-unit>
        <trans-unit id="3fb38195c439ccb852a08619e7d39677e98e564c" translate="yes" xml:space="preserve">
          <source>Indicates if the user was authenticated via a recaller cookie.</source>
          <target state="translated">表示用户是否通过recaller cookie进行了认证。</target>
        </trans-unit>
        <trans-unit id="1854bf2fb3f390c4b98fdccfec02cffd2823ee95" translate="yes" xml:space="preserve">
          <source>Indicates if the validation callback failed.</source>
          <target state="translated">表示验证回调是否失败。</target>
        </trans-unit>
        <trans-unit id="f1a2b5f7ba4b36cda36543ac5b784fa1ab8bcc67" translate="yes" xml:space="preserve">
          <source>Indicates if the worker is paused.</source>
          <target state="translated">表示工人是否暂停。</target>
        </trans-unit>
        <trans-unit id="82e76773bd21735ae1e08b04f2e5b1496605c500" translate="yes" xml:space="preserve">
          <source>Indicates if the worker should exit.</source>
          <target state="translated">表示该工人是否应该退出。</target>
        </trans-unit>
        <trans-unit id="2ba3b3d7c679296cd6c7797bf4bc14db1850700f" translate="yes" xml:space="preserve">
          <source>Indicates if the worker should run in maintenance mode.</source>
          <target state="translated">表示该工人是否应在维护模式下运行。</target>
        </trans-unit>
        <trans-unit id="80560e08b095aff8b7f03378d1b05fbc762cd0c1" translate="yes" xml:space="preserve">
          <source>Indicates if the worker should stop when queue is empty.</source>
          <target state="translated">表示当队列为空时,工人是否应该停止。</target>
        </trans-unit>
        <trans-unit id="93b051ca49a10f714bc7748d070e9fcfa4881cb3" translate="yes" xml:space="preserve">
          <source>Indicates if timestamps are available on the pivot table.</source>
          <target state="translated">表示数据透视表上是否有时间戳。</target>
        </trans-unit>
        <trans-unit id="6dd36391a6f5f4ec07bed551cfcd041b2d67d72a" translate="yes" xml:space="preserve">
          <source>Indicates if values are serialized within the store.</source>
          <target state="translated">表示是否在商店内对值进行序列化。</target>
        </trans-unit>
        <trans-unit id="866c5d8efaeab8573c7d32d672f3a420d05e9bb4" translate="yes" xml:space="preserve">
          <source>Indicates if we are connecting the inverse of the relation.</source>
          <target state="translated">表示我们是否在连接关系的倒数。</target>
        </trans-unit>
        <trans-unit id="41a7bde03aecf02a5191da75c71e0eea0ebe796a" translate="yes" xml:space="preserve">
          <source>Indicates if we have made it through the base setUp function.</source>
          <target state="translated">表示我们是否已经完成了基本的setUp函数。</target>
        </trans-unit>
        <trans-unit id="7f5c97f92fc127e78082913eefaac1bccb2654b6" translate="yes" xml:space="preserve">
          <source>Indicates if you want a preview of links inlined in the message.</source>
          <target state="translated">表示是否要在信息中内嵌链接的预览。</target>
        </trans-unit>
        <trans-unit id="452ec2ae5b8ed0872328b75cd150c60e7ef4df78" translate="yes" xml:space="preserve">
          <source>Indicates if you want a preview of links to media inlined in the message.</source>
          <target state="translated">表示是否要在邮件中内嵌媒体链接的预览。</target>
        </trans-unit>
        <trans-unit id="2888d135a9ac5791f1ce6a18b7322a348e9d45ca" translate="yes" xml:space="preserve">
          <source>Indicates that invoking this sequence when it is empty should throw an exception.</source>
          <target state="translated">表示当该序列为空时调用该序列应抛出异常。</target>
        </trans-unit>
        <trans-unit id="7021f48ad1fdb91349daf79d434d2d24d98a5aee" translate="yes" xml:space="preserve">
          <source>Indicates that the content should not be displayed side-by-side with other fields.</source>
          <target state="translated">表示内容不应与其他字段并列显示。</target>
        </trans-unit>
        <trans-unit id="44835b5829fb62a516331f4c5aebe6f7d823f97b" translate="yes" xml:space="preserve">
          <source>Indicates the maximum number of seconds the route should acquire a session lock for.</source>
          <target state="translated">表示途径获得会话锁定的最大秒数。</target>
        </trans-unit>
        <trans-unit id="0f8bf721db9b2d4e03ea72fe5eaf2e5f04528f10" translate="yes" xml:space="preserve">
          <source>Indicates the maximum number of seconds the route should wait while attempting to acquire a session lock.</source>
          <target state="translated">表示途径在尝试获取会话锁时应等待的最大秒数。</target>
        </trans-unit>
        <trans-unit id="3a75d29baa4ca9045f6e2f61a052765c804d8e95" translate="yes" xml:space="preserve">
          <source>Indicates whether attributes are snake cased on arrays.</source>
          <target state="translated">表示数组上的属性是否被蛇形套住。</target>
        </trans-unit>
        <trans-unit id="021f1d172785ea703ad03e50deabaed4544bc566" translate="yes" xml:space="preserve">
          <source>Indicates whether cookies should be encrypted.</source>
          <target state="translated">表示是否应该对cookies进行加密。</target>
        </trans-unit>
        <trans-unit id="a16faa3c1d6dacc090a913e7e789bc7418e94ba4" translate="yes" xml:space="preserve">
          <source>Indicates whether event dispatcher is set on connections.</source>
          <target state="translated">表示是否在连接上设置了事件调度器。</target>
        </trans-unit>
        <trans-unit id="ff3d9cec077c7c930832e674bc382f06989ca453" translate="yes" xml:space="preserve">
          <source>Indicates whether output should be appended.</source>
          <target state="translated">表示是否应追加输出。</target>
        </trans-unit>
        <trans-unit id="3bddb38e25ccad4ba110959670b4967d79e93614" translate="yes" xml:space="preserve">
          <source>Indicates whether queries are being logged.</source>
          <target state="translated">表示是否正在记录查询。</target>
        </trans-unit>
        <trans-unit id="dd852f8da51b3c6a04e372f940d4a99086e687a6" translate="yes" xml:space="preserve">
          <source>Indicates whether redirects should be followed.</source>
          <target state="translated">表示是否应遵循重定向。</target>
        </trans-unit>
        <trans-unit id="39c92eca3ac205ae6a2b649a414032405ef1dc4d" translate="yes" xml:space="preserve">
          <source>Indicates whether row locking is being used.</source>
          <target state="translated">表示是否正在使用行锁定。</target>
        </trans-unit>
        <trans-unit id="cc0e78afad07d9f83d97fd67a5fe23eb02a7de8e" translate="yes" xml:space="preserve">
          <source>Indicates whether the XSRF-TOKEN cookie should be set on the response.</source>
          <target state="translated">表示是否应该在响应中设置XSRF-TOKEN cookie。</target>
        </trans-unit>
        <trans-unit id="2ec05d38d59abfcd0682bfe74d12cd0608a832c2" translate="yes" xml:space="preserve">
          <source>Indicates whether the command should be shown in the Artisan command list.</source>
          <target state="translated">表示该命令是否应显示在Artisan命令列表中。</target>
        </trans-unit>
        <trans-unit id="ae697a9155e1429115ee9e96e14c6a57e5f18536" translate="yes" xml:space="preserve">
          <source>Indicates whether the response was allowed.</source>
          <target state="translated">表示是否允许响应。</target>
        </trans-unit>
        <trans-unit id="5e5d16fa9ab7dc7d8f3ad2f0b57dfcbf0993df52" translate="yes" xml:space="preserve">
          <source>Indicates whether the route is a fallback route.</source>
          <target state="translated">表示途径是否为后备途径。</target>
        </trans-unit>
        <trans-unit id="3153b46f7f7c8a145502271c8b1c6d361e0086f1" translate="yes" xml:space="preserve">
          <source>Indicates whether to perform an algorithm check.</source>
          <target state="translated">表示是否要进行算法检查。</target>
        </trans-unit>
        <trans-unit id="fd38d68253cb7dc7fc9c7701dedf10d7453ef61d" translate="yes" xml:space="preserve">
          <source>Indicates whether we are using Memcached version &amp;gt;= 3.0.0.</source>
          <target state="translated">指示我们是否正在使用Memcached版本&amp;gt; = 3.0.0。</target>
        </trans-unit>
        <trans-unit id="5a6bdab0c6db458e90545a059bae821391f2bc1c" translate="yes" xml:space="preserve">
          <source>Inflector</source>
          <target state="translated">Inflector</target>
        </trans-unit>
        <trans-unit id="9f7c854197e661a6800daddc6a8b6911d9a29a38" translate="yes" xml:space="preserve">
          <source>InfluxDB</source>
          <target state="translated">InfluxDB</target>
        </trans-unit>
        <trans-unit id="a9e84908272d623f45fae558d1c743f47b960f52" translate="yes" xml:space="preserve">
          <source>Informal discussion regarding bugs, new features, and implementation of existing features takes place in the &lt;code&gt;#internals&lt;/code&gt; channel of the &lt;a href=&quot;https://discordapp.com/invite/mPZNm7A&quot;&gt;Laravel Discord server&lt;/a&gt;. Taylor Otwell, the maintainer of Laravel, is typically present in the channel on weekdays from 8am-5pm (UTC-06:00 or America/Chicago), and sporadically present in the channel at other times.</source>
          <target state="translated">关于bug，新功能以及现有功能的实现的非正式讨论在&lt;a href=&quot;https://discordapp.com/invite/mPZNm7A&quot;&gt;Laravel Discord服务器&lt;/a&gt;的 &lt;code&gt;#internals&lt;/code&gt; 通道中进行。 Laravel的维护者Taylor Otwell通常在工作日的上午8点至下午5点（UTC-06：00或美国/芝加哥）出现在频道中，而在其他时间则偶尔出现在频道中。</target>
        </trans-unit>
        <trans-unit id="8385ff66d554caecf61d776861ff14ab31d43d19" translate="yes" xml:space="preserve">
          <source>Initialize and gather data for given attribute.</source>
          <target state="translated">初始化并收集给定属性的数据。</target>
        </trans-unit>
        <trans-unit id="92763003104ff1d8cbb8c24372263a0f19803de4" translate="yes" xml:space="preserve">
          <source>Initialize any initializable traits on the model.</source>
          <target state="translated">初始化模型上任何可初始化的特征。</target>
        </trans-unit>
        <trans-unit id="2c52da5df92e4ef81f1c65f96d2e742faafa8348" translate="yes" xml:space="preserve">
          <source>Initialize the relation on a set of models.</source>
          <target state="translated">在一组模型上初始化关系。</target>
        </trans-unit>
        <trans-unit id="96a8678ebb7d7383a04e4ea619c1e4a1ba9d3083" translate="yes" xml:space="preserve">
          <source>Initialize the soft deleting trait for an instance.</source>
          <target state="translated">初始化一个实例的软删除性状。</target>
        </trans-unit>
        <trans-unit id="1dfc4f26b2c8c5782cda7a79143f3cf06a563e03" translate="yes" xml:space="preserve">
          <source>Initiate a mock expectation on the facade.</source>
          <target state="translated">发起对门面的模拟期待。</target>
        </trans-unit>
        <trans-unit id="cd233f82131fbf7acdaa84d728be5291f4386bdd" translate="yes" xml:space="preserve">
          <source>Initiate a partial mock on the facade.</source>
          <target state="translated">发起对外墙进行局部模拟。</target>
        </trans-unit>
        <trans-unit id="731c60a23f2dec14bd1ae30968b39619a8efba83" translate="yes" xml:space="preserve">
          <source>Inject inline content into a section.</source>
          <target state="translated">将内联内容注入到一个部分。</target>
        </trans-unit>
        <trans-unit id="2cd33da5ea0644ecad822cd6eeb2c97bc15a95bc" translate="yes" xml:space="preserve">
          <source>Injecting a publisher implementation into the method allows us to easily test the method in isolation since we can mock the injected publisher. However, it requires us to always pass a publisher instance each time we call the &lt;code&gt;publish&lt;/code&gt; method. Using real-time facades, we can maintain the same testability while not being required to explicitly pass a &lt;code&gt;Publisher&lt;/code&gt; instance. To generate a real-time facade, prefix the namespace of the imported class with &lt;code&gt;Facades&lt;/code&gt;:</source>
          <target state="translated">将发布者实现注入到方法中，因为我们可以模拟注入的发布者，因此我们可以轻松地单独测试该方法。但是，这要求我们每次调用 &lt;code&gt;publish&lt;/code&gt; 方法时始终传递发布者实例。使用实时外观，我们可以保持相同的可测试性，而无需显式传递 &lt;code&gt;Publisher&lt;/code&gt; 实例。要生成实时外观，请使用 &lt;code&gt;Facades&lt;/code&gt; 为导入的类的名称空间添加前缀：</target>
        </trans-unit>
        <trans-unit id="d2860d2edae8411abdfa46d50321f29af97f5353" translate="yes" xml:space="preserve">
          <source>Inline Attachments</source>
          <target state="translated">内联附件</target>
        </trans-unit>
        <trans-unit id="36a4601e59dc171b426449958f741d724bb73bda" translate="yes" xml:space="preserve">
          <source>Inline Checkout</source>
          <target state="translated">内联结账</target>
        </trans-unit>
        <trans-unit id="c9402db94e5a66e761ad94ef127ef14bd9bb7904" translate="yes" xml:space="preserve">
          <source>Inline Checkout Without Pay Links</source>
          <target state="translated">无支付链接的线上结账</target>
        </trans-unit>
        <trans-unit id="0b54bcc30ccf857e807d934b6a73a17ddab2549d" translate="yes" xml:space="preserve">
          <source>Inline Component Views</source>
          <target state="translated">内联组件视图</target>
        </trans-unit>
        <trans-unit id="c873c2bd8f9cfed52f04b4c27cf706523f809dab" translate="yes" xml:space="preserve">
          <source>Inner Join Clause</source>
          <target state="translated">内部加入条款</target>
        </trans-unit>
        <trans-unit id="b568d47f2e244743b1fd7472db836ef9769c21f8" translate="yes" xml:space="preserve">
          <source>Input</source>
          <target state="translated">Input</target>
        </trans-unit>
        <trans-unit id="d3c0b0a046955869eb5bc4ca617d5af2783792f2" translate="yes" xml:space="preserve">
          <source>Input (Support\Facades)</source>
          <target state="translated">投入(支助/费用)</target>
        </trans-unit>
        <trans-unit id="ef6caaf1ffac65c55e3879237f23b9e4cd5b35fe" translate="yes" xml:space="preserve">
          <source>Input Arrays</source>
          <target state="translated">输入数组</target>
        </trans-unit>
        <trans-unit id="40c12599fca3ae01774b7e21ce28b44be9649a39" translate="yes" xml:space="preserve">
          <source>Input Descriptions</source>
          <target state="translated">输入描述</target>
        </trans-unit>
        <trans-unit id="9406d091f0ebc551b72ab17d3bfc0d682fcdac2d" translate="yes" xml:space="preserve">
          <source>Input Trimming &amp;amp; Normalization</source>
          <target state="translated">输入整理和规范化</target>
        </trans-unit>
        <trans-unit id="d1d256c1c254179d60f7fbc672a72f1269b8acec" translate="yes" xml:space="preserve">
          <source>Input::get()</source>
          <target state="translated">Input::get()</target>
        </trans-unit>
        <trans-unit id="b344d1376af5b9748c1d185628f25d6bd5a0d4c1" translate="yes" xml:space="preserve">
          <source>Input::getFacadeAccessor()</source>
          <target state="translated">Input::getFacadeAccessor()</target>
        </trans-unit>
        <trans-unit id="045c55dbf354c1b52c8c6faa021bac809f3caea8" translate="yes" xml:space="preserve">
          <source>InputArgument</source>
          <target state="translated">InputArgument</target>
        </trans-unit>
        <trans-unit id="78defe704adfd4c9b269b546b93b72acbfc14c61" translate="yes" xml:space="preserve">
          <source>InputDefinition</source>
          <target state="translated">InputDefinition</target>
        </trans-unit>
        <trans-unit id="19b5be82bdfcdb06329fa85529e8a15629e22c27" translate="yes" xml:space="preserve">
          <source>InputInterface</source>
          <target state="translated">InputInterface</target>
        </trans-unit>
        <trans-unit id="d893e20cecb319b7ceb0fa864838de1756cd03ae" translate="yes" xml:space="preserve">
          <source>InputInterface|null</source>
          <target state="translated">InputInterface|null</target>
        </trans-unit>
        <trans-unit id="48a7b2c749b08c7d5dddff2f201247dd77db5e7c" translate="yes" xml:space="preserve">
          <source>InputOption</source>
          <target state="translated">InputOption</target>
        </trans-unit>
        <trans-unit id="ee17e0b3e84879c29adf8278e863f21acbb03fb7" translate="yes" xml:space="preserve">
          <source>Insert a new record and get the value of the primary key.</source>
          <target state="translated">插入一条新记录,并获取主键的值。</target>
        </trans-unit>
        <trans-unit id="cf003bd6a0b82747f7a97a56acf1261baa054669" translate="yes" xml:space="preserve">
          <source>Insert a new record into the database.</source>
          <target state="translated">在数据库中插入一条新记录。</target>
        </trans-unit>
        <trans-unit id="297b7f2701b357bd686e8180d8917d3c69c35069" translate="yes" xml:space="preserve">
          <source>Insert new records into the database while ignoring errors.</source>
          <target state="translated">向数据库中插入新记录,同时忽略错误。</target>
        </trans-unit>
        <trans-unit id="262ca5f28fa5dcde617585afbd23937aad412a67" translate="yes" xml:space="preserve">
          <source>Insert new records into the database.</source>
          <target state="translated">在数据库中插入新记录。</target>
        </trans-unit>
        <trans-unit id="98679e10212e48196c959dcf393406d3d1409316" translate="yes" xml:space="preserve">
          <source>Insert new records into the table using a subquery.</source>
          <target state="translated">使用子查询在表中插入新记录。</target>
        </trans-unit>
        <trans-unit id="227801121e43773d99b501ef7a4f8a6ce387cf3d" translate="yes" xml:space="preserve">
          <source>Insert new records or update the existing ones.</source>
          <target state="translated">插入新记录或更新现有记录。</target>
        </trans-unit>
        <trans-unit id="50e972838d08d5113447c0c6127a9b113adbf2e7" translate="yes" xml:space="preserve">
          <source>Insert or update a record matching the attributes, and fill it with values.</source>
          <target state="translated">插入或更新与属性相匹配的记录,并填入数值。</target>
        </trans-unit>
        <trans-unit id="ccfb8a9bcad170de1a780c42634e84dcfa38cac8" translate="yes" xml:space="preserve">
          <source>Insert the given attributes and set the ID on the model.</source>
          <target state="translated">在模型上插入给定的属性并设置ID。</target>
        </trans-unit>
        <trans-unit id="6ff88f326f9f738ad51a90eb5bca1b7f4896d368" translate="yes" xml:space="preserve">
          <source>Inserting &amp;amp; Updating Models</source>
          <target state="translated">插入和更新模型</target>
        </trans-unit>
        <trans-unit id="70c0b395778fb131601982dd08cbfec3005d2903" translate="yes" xml:space="preserve">
          <source>Inserting &amp;amp; Updating Related Models</source>
          <target state="translated">插入和更新相关模型</target>
        </trans-unit>
        <trans-unit id="08711e711134e579523d56126b09874d8022e4b2" translate="yes" xml:space="preserve">
          <source>Inserts</source>
          <target state="translated">Inserts</target>
        </trans-unit>
        <trans-unit id="3808eba16022189d40950556dae74983790a0446" translate="yes" xml:space="preserve">
          <source>Inspect the user for the given ability.</source>
          <target state="translated">检查用户是否具有给定的能力。</target>
        </trans-unit>
        <trans-unit id="0a37eb8e61d995bd56e6e7f437e03dcdc082d154" translate="yes" xml:space="preserve">
          <source>Inspecting Batches</source>
          <target state="translated">检查批次</target>
        </trans-unit>
        <trans-unit id="e5983c208eea9b024a512072f9c8e2a9b5712290" translate="yes" xml:space="preserve">
          <source>Inspecting Requests</source>
          <target state="translated">检查请求</target>
        </trans-unit>
        <trans-unit id="6488d4279a5b8a7b44ee864228907e04a748e9bf" translate="yes" xml:space="preserve">
          <source>Inspecting The Current Route</source>
          <target state="translated">检查当前路线</target>
        </trans-unit>
        <trans-unit id="3276864f6fe0efa8acdac21d8b15d80f9e87c6f2" translate="yes" xml:space="preserve">
          <source>Inspiring</source>
          <target state="translated">Inspiring</target>
        </trans-unit>
        <trans-unit id="0ed5f53a38f523924ab9530f173e3c2a78e0e599" translate="yes" xml:space="preserve">
          <source>Inspiring (Foundation)</source>
          <target state="translated">鼓舞人心(基金会)</target>
        </trans-unit>
        <trans-unit id="4af180ae9fa7cee9d0bec19dfab1c815898a7d16" translate="yes" xml:space="preserve">
          <source>Inspiring::quote()</source>
          <target state="translated">Inspiring::quote()</target>
        </trans-unit>
        <trans-unit id="9edfcb9dacd45979d43e5ae2bcfd057cbb4e66f0" translate="yes" xml:space="preserve">
          <source>Install &lt;a href=&quot;https://getcomposer.org&quot;&gt;Composer&lt;/a&gt;.</source>
          <target state="translated">安装&lt;a href=&quot;https://getcomposer.org&quot;&gt;Composer&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="897c5a2a06cb8191603b3512b107f35b6db41731" translate="yes" xml:space="preserve">
          <source>Install PHP 7.2 using Homebrew via &lt;code&gt;brew install php@7.2&lt;/code&gt;.</source>
          <target state="translated">通过 &lt;code&gt;brew install php@7.2&lt;/code&gt; 使用Homebrew安装PHP 7.2 。</target>
        </trans-unit>
        <trans-unit id="e2b148ca8dcab3453b29bbb12a882921d85a2cf9" translate="yes" xml:space="preserve">
          <source>Install PHP 7.4 using Homebrew via &lt;code&gt;brew install php&lt;/code&gt;.</source>
          <target state="translated">通过 &lt;code&gt;brew install php&lt;/code&gt; 使用Homebrew安装PHP 7.4 。</target>
        </trans-unit>
        <trans-unit id="baae91e6ded067391ed44172908a88d959d65d62" translate="yes" xml:space="preserve">
          <source>Install Valet with Composer via &lt;code&gt;composer global require laravel/valet&lt;/code&gt;. Make sure the &lt;code&gt;~/.composer/vendor/bin&lt;/code&gt; directory is in your system's &quot;PATH&quot;.</source>
          <target state="translated">通过 &lt;code&gt;composer global require laravel/valet&lt;/code&gt; valet在Composer上安装Valet 。确保 &lt;code&gt;~/.composer/vendor/bin&lt;/code&gt; 目录在系统的&amp;ldquo; PATH&amp;rdquo;中。</target>
        </trans-unit>
        <trans-unit id="a3658a472e6a2a836171a10aac7e03a42549413d" translate="yes" xml:space="preserve">
          <source>Install or update &lt;a href=&quot;http://brew.sh/&quot;&gt;Homebrew&lt;/a&gt; to the latest version using &lt;code&gt;brew update&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;brew update&lt;/code&gt; 将&lt;a href=&quot;http://brew.sh/&quot;&gt;Homebrew&lt;/a&gt;安装或更新为最新版本。</target>
        </trans-unit>
        <trans-unit id="88e47fa1555bdc515ccf1fd2b810c438a10ce5ac" translate="yes" xml:space="preserve">
          <source>Install or update &lt;a href=&quot;https://brew.sh/&quot;&gt;Homebrew&lt;/a&gt; to the latest version using &lt;code&gt;brew update&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;brew update&lt;/code&gt; 将&lt;a href=&quot;https://brew.sh/&quot;&gt;Homebrew&lt;/a&gt;安装或更新为最新版本。</target>
        </trans-unit>
        <trans-unit id="d271bdec9cde71cbe43f164c7ddb9d0550bc38cd" translate="yes" xml:space="preserve">
          <source>Install the &quot;bootstrap&quot; preset.</source>
          <target state="translated">安装 &quot;bootstrap &quot;预设。</target>
        </trans-unit>
        <trans-unit id="98530e0334027aab3e1335716bac94052c70a6d4" translate="yes" xml:space="preserve">
          <source>Install the &quot;fresh&quot; preset.</source>
          <target state="translated">安装 &quot;新鲜 &quot;预设。</target>
        </trans-unit>
        <trans-unit id="90d988b9f14832669437497e55ebfab2aed8258c" translate="yes" xml:space="preserve">
          <source>Install the &quot;react&quot; preset.</source>
          <target state="translated">安装 &quot;反应 &quot;预设。</target>
        </trans-unit>
        <trans-unit id="8de358d119d672d2a6b3a389715ddf35b82a3fa1" translate="yes" xml:space="preserve">
          <source>Install the &quot;vue&quot; preset.</source>
          <target state="translated">安装 &quot;vue &quot;预设。</target>
        </trans-unit>
        <trans-unit id="758df3820b1409a7d49229d6f0a11aba19f1661d" translate="yes" xml:space="preserve">
          <source>Install the preset.</source>
          <target state="translated">安装预设。</target>
        </trans-unit>
        <trans-unit id="ed7eb98d2c806fc160d8c641965c8debdc638e79" translate="yes" xml:space="preserve">
          <source>InstallCommand</source>
          <target state="translated">InstallCommand</target>
        </trans-unit>
        <trans-unit id="eaaa29840cfff317f93a4a21104e061b53b536dd" translate="yes" xml:space="preserve">
          <source>InstallCommand (Database\Console\Migrations)</source>
          <target state="translated">InstallCommand (Database/Console/Migrations)</target>
        </trans-unit>
        <trans-unit id="8cbadbb1ffc18db2915f926e682e2c52de7f4fa4" translate="yes" xml:space="preserve">
          <source>InstallCommand::__construct()</source>
          <target state="translated">InstallCommand::__construct()</target>
        </trans-unit>
        <trans-unit id="93570189f4a930672844bb349f457f5f438b846e" translate="yes" xml:space="preserve">
          <source>InstallCommand::getOptions()</source>
          <target state="translated">InstallCommand::getOptions()</target>
        </trans-unit>
        <trans-unit id="8ba537ff9f686df0bd626acd9c77ebcf570ce612" translate="yes" xml:space="preserve">
          <source>InstallCommand::handle()</source>
          <target state="translated">InstallCommand::handle()</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Installation</target>
        </trans-unit>
        <trans-unit id="e83e28708cd23339caf94328691639920f4b9816" translate="yes" xml:space="preserve">
          <source>Installation &amp;amp; Setup</source>
          <target state="translated">安装与设置</target>
        </trans-unit>
        <trans-unit id="13f00d4e2b6347fad203982cbfeab54d37ad1dfd" translate="yes" xml:space="preserve">
          <source>Installing Elasticsearch</source>
          <target state="translated">安装Elasticsearch</target>
        </trans-unit>
        <trans-unit id="0bfa14f4b8bb5440b71e8d6c87064732f4a5ccf1" translate="yes" xml:space="preserve">
          <source>Installing Homestead</source>
          <target state="translated">安装自留地</target>
        </trans-unit>
        <trans-unit id="64ae52712817ec555dcde4692af98c6962ca70e6" translate="yes" xml:space="preserve">
          <source>Installing Laravel</source>
          <target state="translated">安装Laravel</target>
        </trans-unit>
        <trans-unit id="92f85750e91e1b17bed4e411bbc85a55d250619f" translate="yes" xml:space="preserve">
          <source>Installing Laravel Echo</source>
          <target state="translated">安装Laravel Echo</target>
        </trans-unit>
        <trans-unit id="7361d7112d92cc8976242d28b36ebef58b7add8f" translate="yes" xml:space="preserve">
          <source>Installing MariaDB</source>
          <target state="translated">存储器 MariaDB</target>
        </trans-unit>
        <trans-unit id="eda82d53eddeff2d648d07ceb4266a4e684fe260" translate="yes" xml:space="preserve">
          <source>Installing MongoDB</source>
          <target state="translated">存储器 MongoDB</target>
        </trans-unit>
        <trans-unit id="deb001a86942aeba7d26c68a380d364500e8d27e" translate="yes" xml:space="preserve">
          <source>Installing Neo4j</source>
          <target state="translated">登上Neo4j</target>
        </trans-unit>
        <trans-unit id="9217fb1d718bb6a45f35f2a0995df763f527da1d" translate="yes" xml:space="preserve">
          <source>Installing Node</source>
          <target state="translated">安装节点</target>
        </trans-unit>
        <trans-unit id="c3b5987a300323f29bb4ffba34dbfd72fbf82d1b" translate="yes" xml:space="preserve">
          <source>Installing Only In Specific Environments</source>
          <target state="translated">只在特定环境下安装</target>
        </trans-unit>
        <trans-unit id="11bedb6544071b050d446fce665ed79b2ebff04f" translate="yes" xml:space="preserve">
          <source>Installing Optional Features</source>
          <target state="translated">安装可选功能</target>
        </trans-unit>
        <trans-unit id="c3bbd5ce7f2ed13063a18f9155f09df015ea1778" translate="yes" xml:space="preserve">
          <source>Installing Supervisor</source>
          <target state="translated">安装监控器</target>
        </trans-unit>
        <trans-unit id="26ba2154d7b533aa06082e0b156589a890aa12a7" translate="yes" xml:space="preserve">
          <source>Installing The Homestead Vagrant Box</source>
          <target state="translated">安装自家的流浪汉箱。</target>
        </trans-unit>
        <trans-unit id="92031ea5329a0f43fcf6765ee6a0b2618ae67f5c" translate="yes" xml:space="preserve">
          <source>Instantiate a concrete instance of the given type.</source>
          <target state="translated">实例化一个给定类型的具体实例。</target>
        </trans-unit>
        <trans-unit id="75c80a720b39c9b0a8a6daf3895f3ad30a49307f" translate="yes" xml:space="preserve">
          <source>Instantiate a new BelongsTo relationship.</source>
          <target state="translated">实例化一个新的BelongsTo关系。</target>
        </trans-unit>
        <trans-unit id="f20826ede7ae47f03b2958c81da787cab9263534" translate="yes" xml:space="preserve">
          <source>Instantiate a new BelongsToMany relationship.</source>
          <target state="translated">实例化一个新的BelongsToMany关系。</target>
        </trans-unit>
        <trans-unit id="d292543bf2dc2542c50e47ba20184fad0edf804c" translate="yes" xml:space="preserve">
          <source>Instantiate a new HasMany relationship.</source>
          <target state="translated">实例化一个新的HasMany关系。</target>
        </trans-unit>
        <trans-unit id="04310e3b0a45c18875ca066d3438566b004d7ddf" translate="yes" xml:space="preserve">
          <source>Instantiate a new HasManyThrough relationship.</source>
          <target state="translated">实例化一个新的HasManyThrough关系。</target>
        </trans-unit>
        <trans-unit id="efb0896947b903f9d945640014d35ff9ae44a3de" translate="yes" xml:space="preserve">
          <source>Instantiate a new HasOne relationship.</source>
          <target state="translated">实例化一个新的HasOne关系。</target>
        </trans-unit>
        <trans-unit id="ab7cdddede4ec14d97b7e31bcbcd3983630c2f87" translate="yes" xml:space="preserve">
          <source>Instantiate a new HasOneThrough relationship.</source>
          <target state="translated">实例化一个新的HasOneThrough关系。</target>
        </trans-unit>
        <trans-unit id="3c6019933a04df3f4946f4f9bcccbdb43cf8b6f6" translate="yes" xml:space="preserve">
          <source>Instantiate a new MorphMany relationship.</source>
          <target state="translated">实例化一个新的MorphMany关系。</target>
        </trans-unit>
        <trans-unit id="709ee4400d2ae67167319bd5751a90075fd6de15" translate="yes" xml:space="preserve">
          <source>Instantiate a new MorphOne relationship.</source>
          <target state="translated">实例化一个新的MorphOne关系。</target>
        </trans-unit>
        <trans-unit id="4e8a430610207b9750f9e9cb6a3e267e59f9b883" translate="yes" xml:space="preserve">
          <source>Instantiate a new MorphTo relationship.</source>
          <target state="translated">实例化一个新的MorphTo关系。</target>
        </trans-unit>
        <trans-unit id="39391c1d9aa4c0c53005fcf35a8c8725d55d220a" translate="yes" xml:space="preserve">
          <source>Instantiate a new MorphToMany relationship.</source>
          <target state="translated">实例化一个新的MorphToMany关系。</target>
        </trans-unit>
        <trans-unit id="47b79289794345ba4fa3810cd704a80a169d4323" translate="yes" xml:space="preserve">
          <source>Instead of attaching the custom cast to your model, you may alternatively attach a class that implements the &lt;code&gt;Illuminate\Contracts\Database\Eloquent\Castable&lt;/code&gt; interface:</source>
          <target state="translated">可以将实现 &lt;code&gt;Illuminate\Contracts\Database\Eloquent\Castable&lt;/code&gt; 接口的类附加到类中，而不是将自定义强制类型附加到模型中：</target>
        </trans-unit>
        <trans-unit id="94ba07cf74cc844a0d76d9937c196e2a4f9cf358" translate="yes" xml:space="preserve">
          <source>Instead of defining all of your request handling logic as Closures in route files, you may wish to organize this behavior using Controller classes. Controllers can group related request handling logic into a single class. Controllers are stored in the &lt;code&gt;app/Http/Controllers&lt;/code&gt; directory.</source>
          <target state="translated">您可能希望使用Controller类来组织此行为，而不是将所有请求处理逻辑都定义为路由文件中的Closures。控制器可以将相关的请求处理逻辑分组为一个类。控制器存储在 &lt;code&gt;app/Http/Controllers&lt;/code&gt; 目录中。</target>
        </trans-unit>
        <trans-unit id="13c0dfbcf0ca21de4be6416c023fc8a2a9761fee" translate="yes" xml:space="preserve">
          <source>Instead of defining the &quot;lines&quot; of text in the notification class, you may use the &lt;code&gt;view&lt;/code&gt; method to specify a custom template that should be used to render the notification email:</source>
          <target state="translated">您可以使用 &lt;code&gt;view&lt;/code&gt; 方法指定用于呈现通知电子邮件的自定义模板，而不是在通知类中定义文本的&amp;ldquo;行&amp;rdquo; ：</target>
        </trans-unit>
        <trans-unit id="f223cf54b8d7c9ffb137ce8246e723910f3817b5" translate="yes" xml:space="preserve">
          <source>Instead of dispatching a job class to the queue, you may also dispatch a Closure. This is great for quick, simple tasks that need to be executed outside of the current request cycle. When dispatching Closures to the queue, the Closure's code contents is cryptographically signed so it can not be modified in transit:</source>
          <target state="translated">你可以不向队列派遣一个作业类,也可以派遣一个Closure。这对于需要在当前请求周期之外执行的快速、简单的任务来说是非常好的。当向队列调度Closure时,Closure的代码内容是经过加密签名的,因此它在传输过程中不能被修改。</target>
        </trans-unit>
        <trans-unit id="af79ac5efb4e2e09724e7e36f8803ada1471b731" translate="yes" xml:space="preserve">
          <source>Instead of displaying &lt;code&gt;cc&lt;/code&gt; as the payment type value, you may specify a custom value representation in your &lt;code&gt;validation&lt;/code&gt; language file by defining a &lt;code&gt;values&lt;/code&gt; array:</source>
          <target state="translated">您可以通过定义 &lt;code&gt;values&lt;/code&gt; 数组在 &lt;code&gt;validation&lt;/code&gt; 语言文件中指定自定义值表示形式，而不是将 &lt;code&gt;cc&lt;/code&gt; 显示为付款类型值：</target>
        </trans-unit>
        <trans-unit id="c681102d82ec52c3e6e46654ded18822fde36a5b" translate="yes" xml:space="preserve">
          <source>Instead of installing Homestead globally and sharing the same Homestead box across all of your projects, you may instead configure a Homestead instance for each project you manage. Installing Homestead per project may be beneficial if you wish to ship a &lt;code&gt;Vagrantfile&lt;/code&gt; with your project, allowing others working on the project to &lt;code&gt;vagrant up&lt;/code&gt;.</source>
          <target state="translated">您可以在所有管理的项目中配置Homestead实例，而不必在全局上安装Homestead并在所有项目中共享同一Homestead框。如果你想出货每个项目的安装宅基地可能是有益的 &lt;code&gt;Vagrantfile&lt;/code&gt; 与您的项目，允许他人在项目合作， &lt;code&gt;vagrant up&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="40b3e22c17968dc8fa7933cee6b779c453a6030a" translate="yes" xml:space="preserve">
          <source>Instead of making a lot of &lt;code&gt;instanceof&lt;/code&gt; checks in your &lt;code&gt;report&lt;/code&gt; method, consider using &lt;a href=&quot;errors#renderable-exceptions&quot;&gt;reportable exceptions&lt;/a&gt;</source>
          <target state="translated">与其在 &lt;code&gt;report&lt;/code&gt; 方法中进行大量的 &lt;code&gt;instanceof&lt;/code&gt; 检查，&lt;a href=&quot;errors#renderable-exceptions&quot;&gt;不如&lt;/a&gt;考虑使用可报告的异常</target>
        </trans-unit>
        <trans-unit id="72f785d06b7a55498354dbf97344b3f977312b83" translate="yes" xml:space="preserve">
          <source>Instead of manually registering model policies, Laravel can auto-discover policies as long as the model and policy follow standard Laravel naming conventions. Specifically, the policies must be in a &lt;code&gt;Policies&lt;/code&gt; directory at or above the directory that contains your models. So, for example, the models may be placed in the &lt;code&gt;app/Models&lt;/code&gt; directory while the policies may be placed in the &lt;code&gt;app/Policies&lt;/code&gt; directory. In this situation, Laravel will check for policies in &lt;code&gt;app/Models/Policies&lt;/code&gt; then &lt;code&gt;app/Policies&lt;/code&gt;. In addition, the policy name must match the model name and have a &lt;code&gt;Policy&lt;/code&gt; suffix. So, a &lt;code&gt;User&lt;/code&gt; model would correspond to a &lt;code&gt;UserPolicy&lt;/code&gt; class.</source>
          <target state="translated">只要模型和策略遵循标准的Laravel命名约定，Laravel即可自动发现策略，而不是手动注册模型策略。具体来说，策略必须位于包含模型的目录之上或上方的&amp;ldquo; &lt;code&gt;Policies&lt;/code&gt; 目录中。因此，例如，可以将模型放置在 &lt;code&gt;app/Models&lt;/code&gt; 目录中，而将策略放置在 &lt;code&gt;app/Policies&lt;/code&gt; 目录中。在这种情况下，Laravel将先检查 &lt;code&gt;app/Models/Policies&lt;/code&gt; 中的策略,然后再检查 &lt;code&gt;app/Policies&lt;/code&gt; 中的策略。此外，策略名称必须与模型名称匹配，并具有 &lt;code&gt;Policy&lt;/code&gt; 后缀。因此， &lt;code&gt;User&lt;/code&gt; 模型将对应于 &lt;code&gt;UserPolicy&lt;/code&gt; 类。</target>
        </trans-unit>
        <trans-unit id="9db8eeaccf9e7233eec61739837cc4c16b29de39" translate="yes" xml:space="preserve">
          <source>Instead of only accepting strings, Laravel's URL generator now accepts &quot;callable&quot; syntax when generating URLs to controller actions:</source>
          <target state="translated">Laravel的URL生成器在生成控制器动作的URL时,不再只接受字符串,而是接受 &quot;可调用 &quot;语法:</target>
        </trans-unit>
        <trans-unit id="492ef4fa69b0adf6f5bd706a4bef393088c79576" translate="yes" xml:space="preserve">
          <source>Instead of passing a date string to be evaluated by &lt;code&gt;strtotime&lt;/code&gt;, you may specify another field to compare against the date:</source>
          <target state="translated">您可以指定另一个字段与日期进行比较，而不是传递要由 &lt;code&gt;strtotime&lt;/code&gt; 评估的日期字符串：</target>
        </trans-unit>
        <trans-unit id="ed7af8f449d6b1f9413ef7ac09d52f941afc462c" translate="yes" xml:space="preserve">
          <source>Instead of passing a string &lt;code&gt;key&lt;/code&gt;, you may pass a callback. The callback should return the value you wish to key the group by:</source>
          <target state="translated">除了传递字符串 &lt;code&gt;key&lt;/code&gt; ，您还可以传递回调。回调应返回您希望通过以下方式键入组的值：</target>
        </trans-unit>
        <trans-unit id="921bd5ff3bb7fd43d6168504132ad69fd27a7b40" translate="yes" xml:space="preserve">
          <source>Instead of passing an array of possible polymorphic models, you may provide &lt;code&gt;*&lt;/code&gt; as a wildcard and let Laravel retrieve all the possible polymorphic types from the database. Laravel will execute an additional query in order to perform this operation:</source>
          <target state="translated">您可以提供 &lt;code&gt;*&lt;/code&gt; 作为通配符，而不是传递可能的多态模型的数组，并让Laravel从数据库中检索所有可能的多态类型。Laravel将执行其他查询以执行此操作：</target>
        </trans-unit>
        <trans-unit id="2816a56652e49c0cecf9d66d6498649b8f7f45d7" translate="yes" xml:space="preserve">
          <source>Instead of passing the model key's value to the &lt;code&gt;ignore&lt;/code&gt; method, you may pass the entire model instance. Laravel will automatically extract the key from the model:</source>
          <target state="translated">可以将整个模型实例传递给您，而不是将模型键的值传递给 &lt;code&gt;ignore&lt;/code&gt; 方法。Laravel将自动从模型中提取密钥：</target>
        </trans-unit>
        <trans-unit id="c7b678e7d561f60816bae1b72d917cfb815fd8fa" translate="yes" xml:space="preserve">
          <source>Instead of passing the number of minutes as an integer, you may also pass a &lt;code&gt;DateTime&lt;/code&gt; instance representing the expiration time of the cached item:</source>
          <target state="translated">除了传递分钟数（而不是整数），您还可以传递一个 &lt;code&gt;DateTime&lt;/code&gt; 实例，该实例代表缓存项的到期时间：</target>
        </trans-unit>
        <trans-unit id="ddfb176da9311325c3e091a13cc3951c720f462b" translate="yes" xml:space="preserve">
          <source>Instead of passing the number of seconds as an integer, you may also pass a &lt;code&gt;DateTime&lt;/code&gt; instance representing the expiration time of the cached item:</source>
          <target state="translated">除了传递秒数（而不是整数）之外，您还可以传递一个 &lt;code&gt;DateTime&lt;/code&gt; 实例，该实例代表缓存项的到期时间：</target>
        </trans-unit>
        <trans-unit id="f1f65ccd66e7b9e15241cd72a550601c12e75e3e" translate="yes" xml:space="preserve">
          <source>Instead of passing the raw contents of a file, you may also pass a stream resource:</source>
          <target state="translated">除了传递文件的原始内容,你还可以传递一个流资源。</target>
        </trans-unit>
        <trans-unit id="05bbe87bcf0171303a45fae2a95003eba96be99a" translate="yes" xml:space="preserve">
          <source>Instead of rate limiting in the handle method, we could define a job middleware that handles rate limiting. Laravel does not have a default location for job middleware, so you are welcome to place job middleware anywhere in your application. In this example, we will place the middleware in a &lt;code&gt;app/Jobs/Middleware&lt;/code&gt; directory:</source>
          <target state="translated">代替handle方法中的速率限制，我们可以定义一个处理速率限制的作业中间件。 Laravel没有作业中间件的默认位置，因此欢迎您将作业中间件放置在应用程序中的任何位置。在此示例中，我们将中间件放置在 &lt;code&gt;app/Jobs/Middleware&lt;/code&gt; 目录中：</target>
        </trans-unit>
        <trans-unit id="d76f1c763308e82bbf3581ba430589e159a67123" translate="yes" xml:space="preserve">
          <source>Instead of registering events and listeners manually in the &lt;code&gt;$listen&lt;/code&gt; array of the &lt;code&gt;EventServiceProvider&lt;/code&gt;, you can enable automatic event discovery. When event discovery is enabled, Laravel will automatically find and register your events and listeners by scanning your application's &lt;code&gt;Listeners&lt;/code&gt; directory. In addition, any explicitly defined events listed in the &lt;code&gt;EventServiceProvider&lt;/code&gt; will still be registered.</source>
          <target state="translated">您可以启用自动事件发现，而不是在 &lt;code&gt;EventServiceProvider&lt;/code&gt; 的 &lt;code&gt;$listen&lt;/code&gt; 数组中手动注册事件和侦听器。启用事件发现后，Laravel将通过扫描应用程序的 &lt;code&gt;Listeners&lt;/code&gt; 目录自动找到并注册事件和侦听器。此外， &lt;code&gt;EventServiceProvider&lt;/code&gt; 中列出的所有显式定义的事件仍将被注册。</target>
        </trans-unit>
        <trans-unit id="8ad2c28990210c7ce94ec9d92d28b9782d4d4ff9" translate="yes" xml:space="preserve">
          <source>Instead of sending your emails, the &lt;code&gt;log&lt;/code&gt; mail driver will write all email messages to your log files for inspection. For more information on configuring your application per environment, check out the &lt;a href=&quot;configuration#environment-configuration&quot;&gt;configuration documentation&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;log&lt;/code&gt; 邮件驱动程序将不发送电子邮件，而是将所有电子邮件写入日志文件进行检查。有关按环境配置应用程序的更多信息，请参阅&lt;a href=&quot;configuration#environment-configuration&quot;&gt;配置文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="977c7f9bd00c7a8fc96527669b40b1c3f0d415b8" translate="yes" xml:space="preserve">
          <source>Instead of specifying the table name directly, you may specify the Eloquent model which should be used to determine the table name:</source>
          <target state="translated">不直接指定表名,可以指定应该用来确定表名的Eloquent模型。</target>
        </trans-unit>
        <trans-unit id="cf9b28a3a0bf189f42cde36d317300e64f8504b3" translate="yes" xml:space="preserve">
          <source>Instead of type-checking exceptions in the exception handler's &lt;code&gt;report&lt;/code&gt; and &lt;code&gt;render&lt;/code&gt; methods, you may define &lt;code&gt;report&lt;/code&gt; and &lt;code&gt;render&lt;/code&gt; methods directly on your custom exception. When these methods exist, they will be called automatically by the framework:</source>
          <target state="translated">您可以直接在自定义异常上定义 &lt;code&gt;report&lt;/code&gt; 和 &lt;code&gt;render&lt;/code&gt; 方法，而不是在异常处理程序的 &lt;code&gt;report&lt;/code&gt; 和 &lt;code&gt;render&lt;/code&gt; 方法中检查异常的类型。这些方法存在时，框架将自动调用它们：</target>
        </trans-unit>
        <trans-unit id="03665fb2772aac633f1ec77619f8364479cac6ff" translate="yes" xml:space="preserve">
          <source>Instead of using &lt;code&gt;?&lt;/code&gt; to represent your parameter bindings, you may execute a query using named bindings:</source>
          <target state="translated">而不是使用 &lt;code&gt;?&lt;/code&gt; 为了表示您的参数绑定，您可以使用命名绑定执行查询：</target>
        </trans-unit>
        <trans-unit id="f67a280274c72a307542b65147dba2392db2fcb9" translate="yes" xml:space="preserve">
          <source>Instead of using &lt;code&gt;DB::raw&lt;/code&gt;, you may also use the following methods to insert a raw expression into various parts of your query.</source>
          <target state="translated">除了使用 &lt;code&gt;DB::raw&lt;/code&gt; ，您还可以使用以下方法将原始表达式插入查询的各个部分。</target>
        </trans-unit>
        <trans-unit id="2b25f639a775c6930564fb8527f1d02a34809356" translate="yes" xml:space="preserve">
          <source>Instead of using custom event classes, you may register Closures that execute when various model events are fired. Typically, you should register these Closures in the &lt;code&gt;booted&lt;/code&gt; method of your model:</source>
          <target state="translated">您可以注册在触发各种模型事件时执行的闭包，而不使用自定义事件类。通常，您应该在模型的 &lt;code&gt;booted&lt;/code&gt; 方法中注册以下闭包：</target>
        </trans-unit>
        <trans-unit id="9982e67ac1fba2a43f5d6bed781b76a1c353a6dc" translate="yes" xml:space="preserve">
          <source>Instead of using the &lt;code&gt;count&lt;/code&gt; method to determine if any records exist that match your query's constraints, you may use the &lt;code&gt;exists&lt;/code&gt; and &lt;code&gt;doesntExist&lt;/code&gt; methods:</source>
          <target state="translated">而不是使用的 &lt;code&gt;count&lt;/code&gt; 方法，以确定是否存在记录您搜索条件的限制，你可以使用 &lt;code&gt;exists&lt;/code&gt; 和 &lt;code&gt;doesntExist&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="e01ac035cbd4692a740131fc6136bafd24e6918a" translate="yes" xml:space="preserve">
          <source>Instead, the &lt;code&gt;Cache&lt;/code&gt; facade extends the base &lt;code&gt;Facade&lt;/code&gt; class and defines the method &lt;code&gt;getFacadeAccessor()&lt;/code&gt;. This method's job is to return the name of a service container binding. When a user references any static method on the &lt;code&gt;Cache&lt;/code&gt; facade, Laravel resolves the &lt;code&gt;cache&lt;/code&gt; binding from the &lt;a href=&quot;container&quot;&gt;service container&lt;/a&gt; and runs the requested method (in this case, &lt;code&gt;get&lt;/code&gt;) against that object.</source>
          <target state="translated">而是， &lt;code&gt;Cache&lt;/code&gt; 门面扩展了 &lt;code&gt;Facade&lt;/code&gt; 基类并定义了方法 &lt;code&gt;getFacadeAccessor()&lt;/code&gt; 。该方法的工作是返回服务容器绑定的名称。当用户引用 &lt;code&gt;Cache&lt;/code&gt; 外观上的任何静态方法时，Laravel都会从&lt;a href=&quot;container&quot;&gt;服务容器&lt;/a&gt;解析 &lt;code&gt;cache&lt;/code&gt; 绑定，并对该对象运行请求的方法（在本例中为 &lt;code&gt;get&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="6adf9e98e6f59fb3faf8a3ed9eb86a39bf448ce6" translate="yes" xml:space="preserve">
          <source>Instead, you may use the &quot;input&quot; method.</source>
          <target state="translated">相反,你可以使用 &quot;输入 &quot;方法。</target>
        </trans-unit>
        <trans-unit id="5533fd2ae269ffec5ff40e8ec9c81ff86a38ca11" translate="yes" xml:space="preserve">
          <source>Interacting With Elements</source>
          <target state="translated">与元素互动</target>
        </trans-unit>
        <trans-unit id="258ed0ea001125d961292c47b027c771144fc53c" translate="yes" xml:space="preserve">
          <source>Interacting With Redis</source>
          <target state="translated">与Redis交互</target>
        </trans-unit>
        <trans-unit id="05edba8c3cc401f5ff4c56bcc50d0490d590b443" translate="yes" xml:space="preserve">
          <source>Interacting With Time</source>
          <target state="translated">与时间互动</target>
        </trans-unit>
        <trans-unit id="5208ad1ae3a6eb5c915999d32887c6bc6529ad5d" translate="yes" xml:space="preserve">
          <source>InteractsWithAuthentication</source>
          <target state="translated">InteractsWithAuthentication</target>
        </trans-unit>
        <trans-unit id="6d94284d4887b51a9672a05997291a172ace0291" translate="yes" xml:space="preserve">
          <source>InteractsWithAuthentication (Foundation\Testing)</source>
          <target state="translated">InteractsWithAuthentication (Foundation/Testing)</target>
        </trans-unit>
        <trans-unit id="ce1de8824fa15e1882856b6d1c4c0b1ee2bfdb3b" translate="yes" xml:space="preserve">
          <source>InteractsWithAuthentication::actingAs()</source>
          <target state="translated">InteractsWithAuthentication::actingAs()</target>
        </trans-unit>
        <trans-unit id="0a2669864c8d4f934006ac3a97b186f4bc9578bb" translate="yes" xml:space="preserve">
          <source>InteractsWithAuthentication::assertAuthenticated()</source>
          <target state="translated">InteractsWithAuthentication::assertAuthenticated()</target>
        </trans-unit>
        <trans-unit id="325e29554aa61008ac1d9dfb13468a8e8994c3f8" translate="yes" xml:space="preserve">
          <source>InteractsWithAuthentication::assertAuthenticatedAs()</source>
          <target state="translated">InteractsWithAuthentication::assertAuthenticatedAs()</target>
        </trans-unit>
        <trans-unit id="1a43b091763948cefb3d9f5bce6654c6fd70146f" translate="yes" xml:space="preserve">
          <source>InteractsWithAuthentication::assertCredentials()</source>
          <target state="translated">InteractsWithAuthentication::assertCredentials()</target>
        </trans-unit>
        <trans-unit id="faf3466b39f295c01e8fee1845c21a6f18b283ae" translate="yes" xml:space="preserve">
          <source>InteractsWithAuthentication::assertGuest()</source>
          <target state="translated">InteractsWithAuthentication::assertGuest()</target>
        </trans-unit>
        <trans-unit id="e2c7d59a8e739196af1be67906cb6fa49d9297d9" translate="yes" xml:space="preserve">
          <source>InteractsWithAuthentication::assertInvalidCredentials()</source>
          <target state="translated">InteractsWithAuthentication::assertInvalidCredentials()</target>
        </trans-unit>
        <trans-unit id="8df71f5670b0cee46b7885c100f5340d620167e1" translate="yes" xml:space="preserve">
          <source>InteractsWithAuthentication::be()</source>
          <target state="translated">InteractsWithAuthentication::be()</target>
        </trans-unit>
        <trans-unit id="0d8675af6e539ca0f61415badf937b0c05fef720" translate="yes" xml:space="preserve">
          <source>InteractsWithAuthentication::hasCredentials()</source>
          <target state="translated">InteractsWithAuthentication::hasCredentials()</target>
        </trans-unit>
        <trans-unit id="f658503c0ee5d9afa4729786ada2b02f002b41ea" translate="yes" xml:space="preserve">
          <source>InteractsWithAuthentication::isAuthenticated()</source>
          <target state="translated">InteractsWithAuthentication::isAuthenticated()</target>
        </trans-unit>
        <trans-unit id="cf06743b45cf13ca0f6324368c091fec2b61bec7" translate="yes" xml:space="preserve">
          <source>InteractsWithConsole</source>
          <target state="translated">InteractsWithConsole</target>
        </trans-unit>
        <trans-unit id="b9f380e5d35557dbe6d97090e49cd4df031bf8e5" translate="yes" xml:space="preserve">
          <source>InteractsWithConsole (Foundation\Testing)</source>
          <target state="translated">InteractsWithConsole (Foundation/Testing)</target>
        </trans-unit>
        <trans-unit id="51a8d361533ad412d5751a909037e242959c5ffb" translate="yes" xml:space="preserve">
          <source>InteractsWithConsole::artisan()</source>
          <target state="translated">InteractsWithConsole::artisan()</target>
        </trans-unit>
        <trans-unit id="4a007c45602238484bcd15423fe0ec41bc05e1f4" translate="yes" xml:space="preserve">
          <source>InteractsWithConsole::withoutMockingConsoleOutput()</source>
          <target state="translated">InteractsWithConsole::withoutMockingConsoleOutput()</target>
        </trans-unit>
        <trans-unit id="0553e525a501d376bacf32ae252947a23901d1b2" translate="yes" xml:space="preserve">
          <source>InteractsWithContainer</source>
          <target state="translated">InteractsWithContainer</target>
        </trans-unit>
        <trans-unit id="2744897d02d5707a563d26fb6faf5ad08c9830c9" translate="yes" xml:space="preserve">
          <source>InteractsWithContainer (Foundation\Testing)</source>
          <target state="translated">InteractsWithContainer (Foundation/Testing)</target>
        </trans-unit>
        <trans-unit id="2e44662ab68bcd5700164d4ef9339b5bbc1e7ad3" translate="yes" xml:space="preserve">
          <source>InteractsWithContainer::instance()</source>
          <target state="translated">InteractsWithContainer::instance()</target>
        </trans-unit>
        <trans-unit id="0b22da1f910f3234c2e90753fccaef7ba5fdb3c1" translate="yes" xml:space="preserve">
          <source>InteractsWithContainer::mock()</source>
          <target state="translated">InteractsWithContainer::mock()</target>
        </trans-unit>
        <trans-unit id="15e959b180902ecf0c8ae2fe9777cf05a05a55fb" translate="yes" xml:space="preserve">
          <source>InteractsWithContainer::partialMock()</source>
          <target state="translated">InteractsWithContainer::partialMock()</target>
        </trans-unit>
        <trans-unit id="9a8cb25a166f4eb5a6ddcbe9da82c41636010347" translate="yes" xml:space="preserve">
          <source>InteractsWithContainer::spy()</source>
          <target state="translated">InteractsWithContainer::spy()</target>
        </trans-unit>
        <trans-unit id="7364aa9dc5ebcd1f0b61b11e0666f946ab45b3fb" translate="yes" xml:space="preserve">
          <source>InteractsWithContainer::swap()</source>
          <target state="translated">InteractsWithContainer::swap()</target>
        </trans-unit>
        <trans-unit id="e0287fe8b49faf077261de99bf1dd435b5f89360" translate="yes" xml:space="preserve">
          <source>InteractsWithContainer::withMix()</source>
          <target state="translated">InteractsWithContainer::withMix()</target>
        </trans-unit>
        <trans-unit id="23e3b523dc8fdffe87b5c5aa8a769950b6ee51ec" translate="yes" xml:space="preserve">
          <source>InteractsWithContainer::withoutMix()</source>
          <target state="translated">InteractsWithContainer::withoutMix()</target>
        </trans-unit>
        <trans-unit id="1e8035c63d3e1f3bddddc4c9dd961c40af546557" translate="yes" xml:space="preserve">
          <source>InteractsWithContentTypes</source>
          <target state="translated">InteractsWithContentTypes</target>
        </trans-unit>
        <trans-unit id="f2e322961c0fddd4adc98fb01ded7c5d5933819a" translate="yes" xml:space="preserve">
          <source>InteractsWithContentTypes (Http\Concerns)</source>
          <target state="translated">与ContentTypes互动(Http/Concerns)</target>
        </trans-unit>
        <trans-unit id="e4626a5ddaf18becc01b1fb69694e465693801ac" translate="yes" xml:space="preserve">
          <source>InteractsWithContentTypes::accepts()</source>
          <target state="translated">InteractsWithContentTypes::accepts()</target>
        </trans-unit>
        <trans-unit id="9e78a798924c325bb1bb35d18bc84e2214cdf83b" translate="yes" xml:space="preserve">
          <source>InteractsWithContentTypes::acceptsAnyContentType()</source>
          <target state="translated">InteractsWithContentTypes::acceptsAnyContentType()</target>
        </trans-unit>
        <trans-unit id="6796bf7bb73ca93d7bd36c885ff042bb22f10aa4" translate="yes" xml:space="preserve">
          <source>InteractsWithContentTypes::acceptsHtml()</source>
          <target state="translated">InteractsWithContentTypes::acceptsHtml()</target>
        </trans-unit>
        <trans-unit id="6c2dc9846006d2bace893a049e5f5b17f687352c" translate="yes" xml:space="preserve">
          <source>InteractsWithContentTypes::acceptsJson()</source>
          <target state="translated">InteractsWithContentTypes::acceptsJson()</target>
        </trans-unit>
        <trans-unit id="28e530f140eb07023ca924bf42b8f14cae775d4c" translate="yes" xml:space="preserve">
          <source>InteractsWithContentTypes::expectsJson()</source>
          <target state="translated">InteractsWithContentTypes::expectsJson()</target>
        </trans-unit>
        <trans-unit id="714aa83d1e896b9e23aaa8024c8be222f75fe4c9" translate="yes" xml:space="preserve">
          <source>InteractsWithContentTypes::format()</source>
          <target state="translated">InteractsWithContentTypes::format()</target>
        </trans-unit>
        <trans-unit id="e8db62bc5d03cb76eec4d2bb2458043b7b802a44" translate="yes" xml:space="preserve">
          <source>InteractsWithContentTypes::isJson()</source>
          <target state="translated">InteractsWithContentTypes::isJson()</target>
        </trans-unit>
        <trans-unit id="d68c62868bcea6ffb20ad2175a7607c0c7fe9c33" translate="yes" xml:space="preserve">
          <source>InteractsWithContentTypes::matchesType()</source>
          <target state="translated">InteractsWithContentTypes::matchesType()</target>
        </trans-unit>
        <trans-unit id="61eaf943e5142d2727a5a5c62628a4d00df54011" translate="yes" xml:space="preserve">
          <source>InteractsWithContentTypes::prefers()</source>
          <target state="translated">InteractsWithContentTypes::prefers()</target>
        </trans-unit>
        <trans-unit id="015b74944c9f7b8450404de9bd3c1c7f9a398423" translate="yes" xml:space="preserve">
          <source>InteractsWithContentTypes::wantsJson()</source>
          <target state="translated">InteractsWithContentTypes::wantsJson()</target>
        </trans-unit>
        <trans-unit id="45b8626a21b1d5db76ad9a494a5da34b1af60768" translate="yes" xml:space="preserve">
          <source>InteractsWithDatabase</source>
          <target state="translated">InteractsWithDatabase</target>
        </trans-unit>
        <trans-unit id="867d7a167db93df852e4c82db44a29773861ac1b" translate="yes" xml:space="preserve">
          <source>InteractsWithDatabase (Foundation\Testing)</source>
          <target state="translated">InteractsWithDatabase (Foundation/Testing)</target>
        </trans-unit>
        <trans-unit id="0c4de7869b15f8577ab1205bffcfda5ffb73b890" translate="yes" xml:space="preserve">
          <source>InteractsWithDatabase::assertDatabaseCount()</source>
          <target state="translated">InteractsWithDatabase::assertDatabaseCount()</target>
        </trans-unit>
        <trans-unit id="d785d0f07b90d59c1b84c44d98ab2a89fa545485" translate="yes" xml:space="preserve">
          <source>InteractsWithDatabase::assertDatabaseHas()</source>
          <target state="translated">InteractsWithDatabase::assertDatabaseHas()</target>
        </trans-unit>
        <trans-unit id="57aac12ce263bb81dd014966f6154ee9ffbfb135" translate="yes" xml:space="preserve">
          <source>InteractsWithDatabase::assertDatabaseMissing()</source>
          <target state="translated">InteractsWithDatabase::assertDatabaseMissing()</target>
        </trans-unit>
        <trans-unit id="9c8a6bed94f3647946a3a839a484a1ac6d5c78e8" translate="yes" xml:space="preserve">
          <source>InteractsWithDatabase::assertDeleted()</source>
          <target state="translated">InteractsWithDatabase::assertDeleted()</target>
        </trans-unit>
        <trans-unit id="6e3d741c6059a5786b731bbcfa5280d232a7b09c" translate="yes" xml:space="preserve">
          <source>InteractsWithDatabase::assertSoftDeleted()</source>
          <target state="translated">InteractsWithDatabase::assertSoftDeleted()</target>
        </trans-unit>
        <trans-unit id="8507c2948cd3c9927e1c43065f158afa2fb9cb37" translate="yes" xml:space="preserve">
          <source>InteractsWithDatabase::castAsJson()</source>
          <target state="translated">InteractsWithDatabase::castAsJson()</target>
        </trans-unit>
        <trans-unit id="7aa2f7a6193a6e26b9e57fa2ec27a245bd2a3b5e" translate="yes" xml:space="preserve">
          <source>InteractsWithDatabase::getConnection()</source>
          <target state="translated">InteractsWithDatabase::getConnection()</target>
        </trans-unit>
        <trans-unit id="8551aa5eb7e9387196088d394b42abb335739400" translate="yes" xml:space="preserve">
          <source>InteractsWithDatabase::isSoftDeletableModel()</source>
          <target state="translated">InteractsWithDatabase::isSoftDeletableModel()</target>
        </trans-unit>
        <trans-unit id="324c284d734adefdf43568804d0039d65c201029" translate="yes" xml:space="preserve">
          <source>InteractsWithDatabase::seed()</source>
          <target state="translated">InteractsWithDatabase::seed()</target>
        </trans-unit>
        <trans-unit id="4e7aa7f89ad581019b8a2acfb6671ba5acd3c5e4" translate="yes" xml:space="preserve">
          <source>InteractsWithExceptionHandling</source>
          <target state="translated">InteractsWithExceptionHandling</target>
        </trans-unit>
        <trans-unit id="ea98e9adf4ee61d770dd042f8585f4f0ec18451e" translate="yes" xml:space="preserve">
          <source>InteractsWithExceptionHandling (Foundation\Testing)</source>
          <target state="translated">InteractsWithExceptionHandling (FoundationTesting)</target>
        </trans-unit>
        <trans-unit id="1415481f21a1bb96af0a173e8d9528abfa793edf" translate="yes" xml:space="preserve">
          <source>InteractsWithExceptionHandling::__construct()</source>
          <target state="translated">InteractsWithExceptionHandling::__construct()</target>
        </trans-unit>
        <trans-unit id="95029dafefd16a8ca00665ea9967216eca5b7703" translate="yes" xml:space="preserve">
          <source>InteractsWithExceptionHandling::handleExceptions()</source>
          <target state="translated">InteractsWithExceptionHandling::handleExceptions()</target>
        </trans-unit>
        <trans-unit id="57e6124d91d03c29571ca0822da133ed3b75e9de" translate="yes" xml:space="preserve">
          <source>InteractsWithExceptionHandling::handleValidationExceptions()</source>
          <target state="translated">InteractsWithExceptionHandling::handleValidationExceptions()</target>
        </trans-unit>
        <trans-unit id="7cfa9e6d3be667cd88edd9c6b2a1da6b65ff4565" translate="yes" xml:space="preserve">
          <source>InteractsWithExceptionHandling::render()</source>
          <target state="translated">InteractsWithExceptionHandling::render()</target>
        </trans-unit>
        <trans-unit id="ae34255541abe1fbe03d2215ec5d9298c58324b7" translate="yes" xml:space="preserve">
          <source>InteractsWithExceptionHandling::renderForConsole()</source>
          <target state="translated">InteractsWithExceptionHandling::renderForConsole()</target>
        </trans-unit>
        <trans-unit id="9f8d9e48d64fe578d8a514d506ee1afe10bc4703" translate="yes" xml:space="preserve">
          <source>InteractsWithExceptionHandling::report()</source>
          <target state="translated">InteractsWithExceptionHandling::report()</target>
        </trans-unit>
        <trans-unit id="f2e2a83720679c332b3ba5e6d445fa1520fb08c6" translate="yes" xml:space="preserve">
          <source>InteractsWithExceptionHandling::shouldReport()</source>
          <target state="translated">InteractsWithExceptionHandling::shouldReport()</target>
        </trans-unit>
        <trans-unit id="991a1a1845a448adc2fd585af4570e92b0aa8857" translate="yes" xml:space="preserve">
          <source>InteractsWithExceptionHandling::withExceptionHandling()</source>
          <target state="translated">InteractsWithExceptionHandling::withExceptionHandling()</target>
        </trans-unit>
        <trans-unit id="f7814cd711adb8372c5aedea71b2cb41b50b74b1" translate="yes" xml:space="preserve">
          <source>InteractsWithExceptionHandling::withoutExceptionHandling()</source>
          <target state="translated">InteractsWithExceptionHandling::withoutExceptionHandling()</target>
        </trans-unit>
        <trans-unit id="200bb9607e1b595f81ca7a117d1666123dcddfc0" translate="yes" xml:space="preserve">
          <source>InteractsWithFlashData</source>
          <target state="translated">InteractsWithFlashData</target>
        </trans-unit>
        <trans-unit id="236415ccc7a831fbb02081d7abf8486c2ef2b562" translate="yes" xml:space="preserve">
          <source>InteractsWithFlashData (Http\Concerns)</source>
          <target state="translated">InteractsWithFlashData (Http\Concerns)</target>
        </trans-unit>
        <trans-unit id="859bb18b919dc4284f1dfe187f78e06e3dc5b177" translate="yes" xml:space="preserve">
          <source>InteractsWithFlashData::flash()</source>
          <target state="translated">InteractsWithFlashData::flash()</target>
        </trans-unit>
        <trans-unit id="3829138af66cd2c09f5e42dccf603e50e3719c9e" translate="yes" xml:space="preserve">
          <source>InteractsWithFlashData::flashExcept()</source>
          <target state="translated">InteractsWithFlashData::flashExcept()</target>
        </trans-unit>
        <trans-unit id="8f0734d0caa0dd27c5692ab8922cc86d189552eb" translate="yes" xml:space="preserve">
          <source>InteractsWithFlashData::flashOnly()</source>
          <target state="translated">InteractsWithFlashData::flashOnly()</target>
        </trans-unit>
        <trans-unit id="7952382948560d3fc2b32810f0c2dd577658ea80" translate="yes" xml:space="preserve">
          <source>InteractsWithFlashData::flush()</source>
          <target state="translated">InteractsWithFlashData::flush()</target>
        </trans-unit>
        <trans-unit id="7b2fb03ae708848d96feb2ec27ed3e6f13cb0992" translate="yes" xml:space="preserve">
          <source>InteractsWithFlashData::old()</source>
          <target state="translated">InteractsWithFlashData::old()</target>
        </trans-unit>
        <trans-unit id="be689f1c02cc59c377d5fb0d6c85824772e262c6" translate="yes" xml:space="preserve">
          <source>InteractsWithIO</source>
          <target state="translated">InteractsWithIO</target>
        </trans-unit>
        <trans-unit id="8cf597c033641dfbbc0435cc8741ecd303fd5dc3" translate="yes" xml:space="preserve">
          <source>InteractsWithIO (Console\Concerns)</source>
          <target state="translated">InteractsWithIO (Console/Concerns)</target>
        </trans-unit>
        <trans-unit id="5b05540d961d951a64abc40f244996633199dab5" translate="yes" xml:space="preserve">
          <source>InteractsWithIO::alert()</source>
          <target state="translated">InteractsWithIO::alert()</target>
        </trans-unit>
        <trans-unit id="8bd3a00fa1dd117457181d79ca90b40ad61b3976" translate="yes" xml:space="preserve">
          <source>InteractsWithIO::anticipate()</source>
          <target state="translated">InteractsWithIO::anticipate()</target>
        </trans-unit>
        <trans-unit id="1f3bcefbe8700c5ef551db76fa881bdce6dbf670" translate="yes" xml:space="preserve">
          <source>InteractsWithIO::argument()</source>
          <target state="translated">InteractsWithIO::argument()</target>
        </trans-unit>
        <trans-unit id="512745f89d4ec4c3a8d8865209b6893d1cb2da46" translate="yes" xml:space="preserve">
          <source>InteractsWithIO::arguments()</source>
          <target state="translated">InteractsWithIO::arguments()</target>
        </trans-unit>
        <trans-unit id="315feb0d4eef07e07fa6c4052dca1311771f2a99" translate="yes" xml:space="preserve">
          <source>InteractsWithIO::ask()</source>
          <target state="translated">InteractsWithIO::ask()</target>
        </trans-unit>
        <trans-unit id="b3128db58ca1ed8f6ef37a2f464d646b08d83b86" translate="yes" xml:space="preserve">
          <source>InteractsWithIO::askWithCompletion()</source>
          <target state="translated">InteractsWithIO::askWithCompletion()</target>
        </trans-unit>
        <trans-unit id="dd49090c982d7f983356ed2296399eeaa37c9f72" translate="yes" xml:space="preserve">
          <source>InteractsWithIO::choice()</source>
          <target state="translated">InteractsWithIO::choice()</target>
        </trans-unit>
        <trans-unit id="f023b9f1713f0e8871aa11a1fb74843332ada307" translate="yes" xml:space="preserve">
          <source>InteractsWithIO::comment()</source>
          <target state="translated">InteractsWithIO::comment()</target>
        </trans-unit>
        <trans-unit id="0369f427e6ee4fadce105c6ffde28cb89446d747" translate="yes" xml:space="preserve">
          <source>InteractsWithIO::confirm()</source>
          <target state="translated">InteractsWithIO::confirm()</target>
        </trans-unit>
        <trans-unit id="0ec026382943e9d8ebd1393652abcf5dac15b374" translate="yes" xml:space="preserve">
          <source>InteractsWithIO::error()</source>
          <target state="translated">InteractsWithIO::error()</target>
        </trans-unit>
        <trans-unit id="c441b18717f642678fcdd46e32ae2b1405afd785" translate="yes" xml:space="preserve">
          <source>InteractsWithIO::getOutput()</source>
          <target state="translated">InteractsWithIO::getOutput()</target>
        </trans-unit>
        <trans-unit id="5c9aaaaabc29cc09d6d8a108df1b507f085a5406" translate="yes" xml:space="preserve">
          <source>InteractsWithIO::hasArgument()</source>
          <target state="translated">InteractsWithIO::hasArgument()</target>
        </trans-unit>
        <trans-unit id="9cd8ea0e65cb5c5c99dbd5966b08251ebc0c1e31" translate="yes" xml:space="preserve">
          <source>InteractsWithIO::hasOption()</source>
          <target state="translated">InteractsWithIO::hasOption()</target>
        </trans-unit>
        <trans-unit id="1fec64539f2269c2ed900b800332aee7be5b5783" translate="yes" xml:space="preserve">
          <source>InteractsWithIO::info()</source>
          <target state="translated">InteractsWithIO::info()</target>
        </trans-unit>
        <trans-unit id="64078c3a5c4275befb9723cc8c4dedc405c132e9" translate="yes" xml:space="preserve">
          <source>InteractsWithIO::line()</source>
          <target state="translated">InteractsWithIO::line()</target>
        </trans-unit>
        <trans-unit id="bbd046f3da1f636f0d37de1b3b5ccebd552f4f4c" translate="yes" xml:space="preserve">
          <source>InteractsWithIO::newLine()</source>
          <target state="translated">InteractsWithIO::newLine()</target>
        </trans-unit>
        <trans-unit id="164bc2e3acd2a3b011ba006907c7227dbd7ff49e" translate="yes" xml:space="preserve">
          <source>InteractsWithIO::option()</source>
          <target state="translated">InteractsWithIO::option()</target>
        </trans-unit>
        <trans-unit id="d996803b72fa9ee6523c0c7b551b84f42f65acfa" translate="yes" xml:space="preserve">
          <source>InteractsWithIO::options()</source>
          <target state="translated">InteractsWithIO::options()</target>
        </trans-unit>
        <trans-unit id="93c94dd982bff186425ca5e32d969f1475a3bf2f" translate="yes" xml:space="preserve">
          <source>InteractsWithIO::parseVerbosity()</source>
          <target state="translated">InteractsWithIO::parseVerbosity()</target>
        </trans-unit>
        <trans-unit id="b9be4a0dd9f03c0181b38244ae7f6e94ecff4d60" translate="yes" xml:space="preserve">
          <source>InteractsWithIO::question()</source>
          <target state="translated">InteractsWithIO::question()</target>
        </trans-unit>
        <trans-unit id="0e529b767bdead422a4dc6af2e791efe3d24ff54" translate="yes" xml:space="preserve">
          <source>InteractsWithIO::secret()</source>
          <target state="translated">InteractsWithIO::secret()</target>
        </trans-unit>
        <trans-unit id="f711ee75d9afc0619054cb0cdb7a6869635a7a88" translate="yes" xml:space="preserve">
          <source>InteractsWithIO::setInput()</source>
          <target state="translated">InteractsWithIO::setInput()</target>
        </trans-unit>
        <trans-unit id="eb995bbb36ea1e362086f02b5377e316e041fb51" translate="yes" xml:space="preserve">
          <source>InteractsWithIO::setOutput()</source>
          <target state="translated">InteractsWithIO::setOutput()</target>
        </trans-unit>
        <trans-unit id="7862d9369fa5056f48a5e79b3871cd1ba6893261" translate="yes" xml:space="preserve">
          <source>InteractsWithIO::setVerbosity()</source>
          <target state="translated">InteractsWithIO::setVerbosity()</target>
        </trans-unit>
        <trans-unit id="61073ab28dc6bc014207dc844475eab1eae81a4a" translate="yes" xml:space="preserve">
          <source>InteractsWithIO::table()</source>
          <target state="translated">InteractsWithIO::table()</target>
        </trans-unit>
        <trans-unit id="c0bd41b7c075ad831fe85ed2e7d05f6891647fa0" translate="yes" xml:space="preserve">
          <source>InteractsWithIO::warn()</source>
          <target state="translated">InteractsWithIO::warn()</target>
        </trans-unit>
        <trans-unit id="3463848544c69e1747e10b9b4c31355df449ba4b" translate="yes" xml:space="preserve">
          <source>InteractsWithInput</source>
          <target state="translated">InteractsWithInput</target>
        </trans-unit>
        <trans-unit id="7cb32b43d7f37c300510da227ecba616e1ad0773" translate="yes" xml:space="preserve">
          <source>InteractsWithInput (Http\Concerns)</source>
          <target state="translated">InteractsWithInput (Http\Concerns)</target>
        </trans-unit>
        <trans-unit id="9666a7bd318ea73aca3c0daf660534dafdbfe030" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::all()</source>
          <target state="translated">InteractsWithInput::all()</target>
        </trans-unit>
        <trans-unit id="e8457a8e693abcbff2ea66090e004b2452d67f18" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::allFiles()</source>
          <target state="translated">InteractsWithInput::allFiles()</target>
        </trans-unit>
        <trans-unit id="7f045e3517ad1788a7eccc682e261817e664e7b3" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::anyFilled()</source>
          <target state="translated">InteractsWithInput::anyFilled()</target>
        </trans-unit>
        <trans-unit id="b9ef067b0b4ec2403f4c79d27812d091c64b1273" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::bearerToken()</source>
          <target state="translated">InteractsWithInput::bearerToken()</target>
        </trans-unit>
        <trans-unit id="7f47639e69dff380f30fd16761abf8ff4c0ff366" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::boolean()</source>
          <target state="translated">InteractsWithInput::boolean()</target>
        </trans-unit>
        <trans-unit id="a50d73880de79e05f481c087b31e155c86a12a83" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::convertUploadedFiles()</source>
          <target state="translated">InteractsWithInput::convertUploadedFiles()</target>
        </trans-unit>
        <trans-unit id="d5a5cc0587af8396444a6dd68b8840bc7082f08e" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::cookie()</source>
          <target state="translated">InteractsWithInput::cookie()</target>
        </trans-unit>
        <trans-unit id="8e741c4f47d98a9a9801f0c57a17c5a9b9c79567" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::except()</source>
          <target state="translated">InteractsWithInput::except()</target>
        </trans-unit>
        <trans-unit id="ade098659d30325d4f925bf7052cc6ddb02a0689" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::exists()</source>
          <target state="translated">InteractsWithInput::exists()</target>
        </trans-unit>
        <trans-unit id="e355d6e906282b31de998efb4d146b3ba3224b21" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::file()</source>
          <target state="translated">InteractsWithInput::file()</target>
        </trans-unit>
        <trans-unit id="cb225b01fd7a4f99ebb0e4c454ccc20e608d5072" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::filled()</source>
          <target state="translated">InteractsWithInput::filled()</target>
        </trans-unit>
        <trans-unit id="62a51d357ae9417facc8506040a28b12ebfd0caf" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::has()</source>
          <target state="translated">InteractsWithInput::has()</target>
        </trans-unit>
        <trans-unit id="6825f0fdfae8451d3e83f1614736513aa6247955" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::hasAny()</source>
          <target state="translated">InteractsWithInput::hasAny()</target>
        </trans-unit>
        <trans-unit id="bacffccdfb15ede1fbb9c560d0301ea45e45f317" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::hasCookie()</source>
          <target state="translated">InteractsWithInput::hasCookie()</target>
        </trans-unit>
        <trans-unit id="bcd63b9309ed3d47619479d06479907bf29718f0" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::hasFile()</source>
          <target state="translated">InteractsWithInput::hasFile()</target>
        </trans-unit>
        <trans-unit id="75d636800a02c27f17db3e8df72750c9f4e2041c" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::hasHeader()</source>
          <target state="translated">InteractsWithInput::hasHeader()</target>
        </trans-unit>
        <trans-unit id="083d7c766efeb282de04a0567be4ecac92f48c29" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::header()</source>
          <target state="translated">InteractsWithInput::header()</target>
        </trans-unit>
        <trans-unit id="899ef68aea5b384b7bf533c7d536d72076d5a615" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::input()</source>
          <target state="translated">InteractsWithInput::input()</target>
        </trans-unit>
        <trans-unit id="23a2d64fdde65488235c0c953b5f302d566f1cd3" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::isEmptyString()</source>
          <target state="translated">InteractsWithInput::isEmptyString()</target>
        </trans-unit>
        <trans-unit id="285a05e26a2fce2813e8203ba7630f1d2825c1d8" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::isNotFilled()</source>
          <target state="translated">InteractsWithInput::isNotFilled()</target>
        </trans-unit>
        <trans-unit id="c0be9a60df6cc5e111810deb08933efc57d4a94f" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::isValidFile()</source>
          <target state="translated">InteractsWithInput::isValidFile()</target>
        </trans-unit>
        <trans-unit id="d8ff77c91b05931fe13aea92e2260c2e9963d143" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::keys()</source>
          <target state="translated">InteractsWithInput::keys()</target>
        </trans-unit>
        <trans-unit id="8da353b31951ce4fc580bc0df6f97c06f77a2753" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::missing()</source>
          <target state="translated">InteractsWithInput::missing()</target>
        </trans-unit>
        <trans-unit id="61c0587b0cdcc8bfaf248f7b6090ceafb8628b20" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::only()</source>
          <target state="translated">InteractsWithInput::only()</target>
        </trans-unit>
        <trans-unit id="38e06ffc03b31aa16baa778feefcc797ec9677ec" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::post()</source>
          <target state="translated">InteractsWithInput::post()</target>
        </trans-unit>
        <trans-unit id="ba837406d9d4e732845bd52204ccc2866104b1c8" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::query()</source>
          <target state="translated">InteractsWithInput::query()</target>
        </trans-unit>
        <trans-unit id="9efa439cf5ad5e3cb3583adbfec8cebd574c6ced" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::retrieveItem()</source>
          <target state="translated">InteractsWithInput::retrieveItem()</target>
        </trans-unit>
        <trans-unit id="bb2f1dd6ca79a16b6c01d5cdcd22c29095691ed1" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::server()</source>
          <target state="translated">InteractsWithInput::server()</target>
        </trans-unit>
        <trans-unit id="073580d618375af772a2be3dac6748f31f53ae13" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::whenFilled()</source>
          <target state="translated">InteractsWithInput::whenFilled()</target>
        </trans-unit>
        <trans-unit id="0272b4d6df5816ccd6815f0d22795d55359a6ef9" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::whenHas()</source>
          <target state="translated">InteractsWithInput::whenHas()</target>
        </trans-unit>
        <trans-unit id="a6ab49c106e83b3fa9a946dd5900d43d36e5c5f3" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable</source>
          <target state="translated">InteractsWithPivotTable</target>
        </trans-unit>
        <trans-unit id="5798305ed6dda3ceb15d1c999a90eaf498c20595" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable (Database\Eloquent\Relations)</source>
          <target state="translated">InteractsWithPivotTable (Database\Eloquent\Relations)</target>
        </trans-unit>
        <trans-unit id="7b36e26f4336d8b972896d026d025a60b8f499b1" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::addTimestampsToAttachment()</source>
          <target state="translated">InteractsWithPivotTable::addTimestampsToAttachment()</target>
        </trans-unit>
        <trans-unit id="f7f699f34fa616ec4b7e81464122a1175054569c" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::attach()</source>
          <target state="translated">InteractsWithPivotTable::attach()</target>
        </trans-unit>
        <trans-unit id="d67e2ac5839b243f0ae128af5d7c25aad8f2ab03" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::attachNew()</source>
          <target state="translated">InteractsWithPivotTable::attachNew()</target>
        </trans-unit>
        <trans-unit id="cdd7e7d9bcd566ba77144b4c0a8b71a7efff070f" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::attachUsingCustomClass()</source>
          <target state="translated">InteractsWithPivotTable::attachUsingCustomClass()</target>
        </trans-unit>
        <trans-unit id="f4f26273b6e7bc1d096e5bb8f4b7397341e76414" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::baseAttachRecord()</source>
          <target state="translated">InteractsWithPivotTable::baseAttachRecord()</target>
        </trans-unit>
        <trans-unit id="c8e9372d6da03717b537b263b4cd5ed96ad8f832" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::castAttributes()</source>
          <target state="translated">InteractsWithPivotTable::castAttributes()</target>
        </trans-unit>
        <trans-unit id="22802fbb55338a716ef550369e5007bcd46381fb" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::castKey()</source>
          <target state="translated">InteractsWithPivotTable::castKey()</target>
        </trans-unit>
        <trans-unit id="b74a43fad64ba458c09e7c2c2dbf75a4b7f74ba3" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::castKeys()</source>
          <target state="translated">InteractsWithPivotTable::castKeys()</target>
        </trans-unit>
        <trans-unit id="597d11a2cf4296de5dd1df0a12792b244fa80357" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::detach()</source>
          <target state="translated">InteractsWithPivotTable::detach()</target>
        </trans-unit>
        <trans-unit id="2a6784a75e5b091d436f2841556258e926d41972" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::detachUsingCustomClass()</source>
          <target state="translated">InteractsWithPivotTable::detachUsingCustomClass()</target>
        </trans-unit>
        <trans-unit id="1aa62238767c15485b2979d4cbce2697bcdd318a" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::extractAttachIdAndAttributes()</source>
          <target state="translated">InteractsWithPivotTable::extractAttachIdAndAttributes()</target>
        </trans-unit>
        <trans-unit id="68d734f44d35844a5c084da95f93d6d703eeeb4c" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::formatAttachRecord()</source>
          <target state="translated">InteractsWithPivotTable::formatAttachRecord()</target>
        </trans-unit>
        <trans-unit id="63f15c83241780b5466ad2cd1cc53d13d73df7c1" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::formatAttachRecords()</source>
          <target state="translated">InteractsWithPivotTable::formatAttachRecords()</target>
        </trans-unit>
        <trans-unit id="471f4f4c7a1e5229f4a0e25add23c2301b1e8b1d" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::formatRecordsList()</source>
          <target state="translated">InteractsWithPivotTable::formatRecordsList()</target>
        </trans-unit>
        <trans-unit id="bba1c63b32f43de97f6303282cdadc3544d78d96" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::getCurrentlyAttachedPivots()</source>
          <target state="translated">InteractsWithPivotTable::getCurrentlyAttachedPivots()</target>
        </trans-unit>
        <trans-unit id="37a98c579e872841756ea0a9df62c95f730b6952" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::getTypeSwapValue()</source>
          <target state="translated">InteractsWithPivotTable::getTypeSwapValue()</target>
        </trans-unit>
        <trans-unit id="ba0324a3e971977075e4b1f54a754c822c62acab" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::hasPivotColumn()</source>
          <target state="translated">InteractsWithPivotTable::hasPivotColumn()</target>
        </trans-unit>
        <trans-unit id="ce2c590f6ff3736aad0db15a8ad9b4206089ff4f" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::newExistingPivot()</source>
          <target state="translated">InteractsWithPivotTable::newExistingPivot()</target>
        </trans-unit>
        <trans-unit id="7799a328f9cbced0158c3dbe79eec1f4ddb24ade" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::newPivot()</source>
          <target state="translated">InteractsWithPivotTable::newPivot()</target>
        </trans-unit>
        <trans-unit id="380d306d13455c9bb41c0c9aca35fcfeb56bb0fc" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::newPivotQuery()</source>
          <target state="translated">InteractsWithPivotTable::newPivotQuery()</target>
        </trans-unit>
        <trans-unit id="81ac6ae23bde5770e15092ca7a04979931a142f5" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::newPivotStatement()</source>
          <target state="translated">InteractsWithPivotTable::newPivotStatement()</target>
        </trans-unit>
        <trans-unit id="6f6adb044422d9b20f18680a853176c591ed6a0d" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::newPivotStatementForId()</source>
          <target state="translated">InteractsWithPivotTable::newPivotStatementForId()</target>
        </trans-unit>
        <trans-unit id="23807fe2755f90f43fbd8d00998bf61a043ab19b" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::parseId()</source>
          <target state="translated">InteractsWithPivotTable::parseId()</target>
        </trans-unit>
        <trans-unit id="a73c1e55edaf18e9cf53c4a153a9b282ff297faa" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::parseIds()</source>
          <target state="translated">InteractsWithPivotTable::parseIds()</target>
        </trans-unit>
        <trans-unit id="c6167fcb905959462f7b272923d86c925524c2a4" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::sync()</source>
          <target state="translated">InteractsWithPivotTable::sync()</target>
        </trans-unit>
        <trans-unit id="c70231c1c7021414349ad0dae2589a0388ece35c" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::syncWithoutDetaching()</source>
          <target state="translated">InteractsWithPivotTable::syncWithoutDetaching()</target>
        </trans-unit>
        <trans-unit id="a5359081c2408c266952a3c0aeff541a2d45395a" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::toggle()</source>
          <target state="translated">InteractsWithPivotTable::toggle()</target>
        </trans-unit>
        <trans-unit id="8cf0085a3571b2f4e08ab404dd835633a267d51c" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::updateExistingPivot()</source>
          <target state="translated">InteractsWithPivotTable::updateExistingPivot()</target>
        </trans-unit>
        <trans-unit id="2a402db926dfc8799bbe68ad079036dfaf8115bb" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::updateExistingPivotUsingCustomClass()</source>
          <target state="translated">InteractsWithPivotTable::updateExistingPivotUsingCustomClass()</target>
        </trans-unit>
        <trans-unit id="585d435754610a4cf48673b14a011803bcb98cc3" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::withPivot()</source>
          <target state="translated">InteractsWithPivotTable::withPivot()</target>
        </trans-unit>
        <trans-unit id="a6561cccf999a06bd2c6d2f3d72f1f25ecb2b586" translate="yes" xml:space="preserve">
          <source>InteractsWithQueue</source>
          <target state="translated">InteractsWithQueue</target>
        </trans-unit>
        <trans-unit id="cf7882e33f9e31307d033ba6a60b8e7ea313bc5a" translate="yes" xml:space="preserve">
          <source>InteractsWithQueue (Queue)</source>
          <target state="translated">InteractsWithQueue</target>
        </trans-unit>
        <trans-unit id="2dd5c728457dd966f4fd40b0291d0ba939d9c5bb" translate="yes" xml:space="preserve">
          <source>InteractsWithQueue::attempts()</source>
          <target state="translated">InteractsWithQueue::attempts()</target>
        </trans-unit>
        <trans-unit id="d82bf59d95627835cd0f227fb3463165a3d4ee06" translate="yes" xml:space="preserve">
          <source>InteractsWithQueue::delete()</source>
          <target state="translated">InteractsWithQueue::delete()</target>
        </trans-unit>
        <trans-unit id="f107c0f298cc7732c769b671d7fdde042adefb28" translate="yes" xml:space="preserve">
          <source>InteractsWithQueue::fail()</source>
          <target state="translated">InteractsWithQueue::fail()</target>
        </trans-unit>
        <trans-unit id="5e92fe3e1ad8a6df3b55fa8e1823e4a1f3b4e1cd" translate="yes" xml:space="preserve">
          <source>InteractsWithQueue::release()</source>
          <target state="translated">InteractsWithQueue::release()</target>
        </trans-unit>
        <trans-unit id="04058e5f34567f025485692a30ff822efb94fae3" translate="yes" xml:space="preserve">
          <source>InteractsWithQueue::setJob()</source>
          <target state="translated">InteractsWithQueue::setJob()</target>
        </trans-unit>
        <trans-unit id="075f4c562c9acff361fcc7636cf7c63ac22e5d7d" translate="yes" xml:space="preserve">
          <source>InteractsWithRedis</source>
          <target state="translated">InteractsWithRedis</target>
        </trans-unit>
        <trans-unit id="aa384a6e5877cb2948541657386166ba84f5910b" translate="yes" xml:space="preserve">
          <source>InteractsWithRedis (Foundation\Testing)</source>
          <target state="translated">InteractsWithRedis (Foundation/Testing)</target>
        </trans-unit>
        <trans-unit id="64087781479700075d3bdf2d29650734401351b5" translate="yes" xml:space="preserve">
          <source>InteractsWithRedis::ifRedisAvailable()</source>
          <target state="translated">InteractsWithRedis::ifRedisAvailable()</target>
        </trans-unit>
        <trans-unit id="5b02061e017e9d0c6dda3045ac939b9529ab59a7" translate="yes" xml:space="preserve">
          <source>InteractsWithRedis::redisDriverProvider()</source>
          <target state="translated">InteractsWithRedis::redisDriverProvider()</target>
        </trans-unit>
        <trans-unit id="82e3bebdc2360ceeabecaf2233f17e7a78544a73" translate="yes" xml:space="preserve">
          <source>InteractsWithRedis::setUpRedis()</source>
          <target state="translated">InteractsWithRedis::setUpRedis()</target>
        </trans-unit>
        <trans-unit id="700250ca509439e5624d6ada5a9e37a033a1f671" translate="yes" xml:space="preserve">
          <source>InteractsWithRedis::tearDownRedis()</source>
          <target state="translated">InteractsWithRedis::tearDownRedis()</target>
        </trans-unit>
        <trans-unit id="cef32600894f63811db7a9816f8ea7584e7a3701" translate="yes" xml:space="preserve">
          <source>InteractsWithSession</source>
          <target state="translated">InteractsWithSession</target>
        </trans-unit>
        <trans-unit id="e98f049902312ae4ad0f011ee0aebb475dd4d364" translate="yes" xml:space="preserve">
          <source>InteractsWithSession (Foundation\Testing)</source>
          <target state="translated">InteractsWithSession (Foundation/Testing)</target>
        </trans-unit>
        <trans-unit id="98a2598d3e81ccd79603ac9d917d6be35a89605c" translate="yes" xml:space="preserve">
          <source>InteractsWithSession::flushSession()</source>
          <target state="translated">InteractsWithSession::flushSession()</target>
        </trans-unit>
        <trans-unit id="daef403552d186720fe905310c6cc0b2fa17ce5d" translate="yes" xml:space="preserve">
          <source>InteractsWithSession::session()</source>
          <target state="translated">InteractsWithSession::session()</target>
        </trans-unit>
        <trans-unit id="e1e4856c50049eaf1f01a49f606cfd80b6d9add7" translate="yes" xml:space="preserve">
          <source>InteractsWithSession::startSession()</source>
          <target state="translated">InteractsWithSession::startSession()</target>
        </trans-unit>
        <trans-unit id="e510f678f68c26a0d56ccc3caca720196efe5b4e" translate="yes" xml:space="preserve">
          <source>InteractsWithSession::withSession()</source>
          <target state="translated">InteractsWithSession::withSession()</target>
        </trans-unit>
        <trans-unit id="515a3a2edfbce6087a33ece40bde4373887339d7" translate="yes" xml:space="preserve">
          <source>InteractsWithSockets</source>
          <target state="translated">InteractsWithSockets</target>
        </trans-unit>
        <trans-unit id="88f72c7feed94fdc3af0b4dc8dee96472f84b4e7" translate="yes" xml:space="preserve">
          <source>InteractsWithSockets (Broadcasting)</source>
          <target state="translated">与套接字交互(广播)</target>
        </trans-unit>
        <trans-unit id="ae19fe5dfe3884db9ede059bd85a88a111e29b62" translate="yes" xml:space="preserve">
          <source>InteractsWithSockets::broadcastToEveryone()</source>
          <target state="translated">InteractsWithSockets::broadcastToEveryone()</target>
        </trans-unit>
        <trans-unit id="5c1ae33285b385102a4e8fa1a40312369fc6c26b" translate="yes" xml:space="preserve">
          <source>InteractsWithSockets::dontBroadcastToCurrentUser()</source>
          <target state="translated">InteractsWithSockets::dontBroadcastToCurrentUser()</target>
        </trans-unit>
        <trans-unit id="2a6a09ba9950665622f7c6efd9b582db2d2683b1" translate="yes" xml:space="preserve">
          <source>InteractsWithTime</source>
          <target state="translated">InteractsWithTime</target>
        </trans-unit>
        <trans-unit id="4763ff63ef6c3ec5701f5cd9a46abf6989ffcf9d" translate="yes" xml:space="preserve">
          <source>InteractsWithTime (Foundation\Testing)</source>
          <target state="translated">InteractsWithTime (FoundationTesting)</target>
        </trans-unit>
        <trans-unit id="ebf9ebbf8607069b36fc67662cab27a971cff708" translate="yes" xml:space="preserve">
          <source>InteractsWithTime (Support)</source>
          <target state="translated">与时间互动 (支持)</target>
        </trans-unit>
        <trans-unit id="5ca12bb493e3ed68a7989a84f6eb0ee09e23ec5c" translate="yes" xml:space="preserve">
          <source>InteractsWithTime::availableAt()</source>
          <target state="translated">InteractsWithTime::availableAt()</target>
        </trans-unit>
        <trans-unit id="910ac0fb6ace928c2f8ecf4b19e569752b839128" translate="yes" xml:space="preserve">
          <source>InteractsWithTime::currentTime()</source>
          <target state="translated">InteractsWithTime::currentTime()</target>
        </trans-unit>
        <trans-unit id="8933e5f1fe5173f021e43db7bc069a0e36a806b6" translate="yes" xml:space="preserve">
          <source>InteractsWithTime::parseDateInterval()</source>
          <target state="translated">InteractsWithTime::parseDateInterval()</target>
        </trans-unit>
        <trans-unit id="af948cf95aa754955899817bf7b886c1ccce4789" translate="yes" xml:space="preserve">
          <source>InteractsWithTime::secondsUntil()</source>
          <target state="translated">InteractsWithTime::secondsUntil()</target>
        </trans-unit>
        <trans-unit id="258e4adedfa4278d4e57bb15922ff0876233f2b0" translate="yes" xml:space="preserve">
          <source>InteractsWithTime::travel()</source>
          <target state="translated">InteractsWithTime::travel()</target>
        </trans-unit>
        <trans-unit id="ef6b89296dd9c4a4d4f0b65af088dd0576097653" translate="yes" xml:space="preserve">
          <source>InteractsWithTime::travelBack()</source>
          <target state="translated">InteractsWithTime::travelBack()</target>
        </trans-unit>
        <trans-unit id="92979bd1ee6a825c3b514f3d0f7e3c6633f821cc" translate="yes" xml:space="preserve">
          <source>InteractsWithTime::travelTo()</source>
          <target state="translated">InteractsWithTime::travelTo()</target>
        </trans-unit>
        <trans-unit id="808f7ee657e560e63d638d6bd59e0a4d6fc7f8aa" translate="yes" xml:space="preserve">
          <source>InteractsWithViews</source>
          <target state="translated">InteractsWithViews</target>
        </trans-unit>
        <trans-unit id="97a7d3d30f9c89e29acf90aa989dab11e71144bc" translate="yes" xml:space="preserve">
          <source>InteractsWithViews (Foundation\Testing)</source>
          <target state="translated">InteractsWithViews (FoundationTesting)</target>
        </trans-unit>
        <trans-unit id="1bcc002d20cd3a4132bcdaae2bd536c53ebe47c2" translate="yes" xml:space="preserve">
          <source>InteractsWithViews::blade()</source>
          <target state="translated">InteractsWithViews::blade()</target>
        </trans-unit>
        <trans-unit id="55ddde479ceabd8a5437a938b649431df4c68543" translate="yes" xml:space="preserve">
          <source>InteractsWithViews::component()</source>
          <target state="translated">InteractsWithViews::component()</target>
        </trans-unit>
        <trans-unit id="ed74187c9adbb19a351ea3f148b14adce8df7493" translate="yes" xml:space="preserve">
          <source>InteractsWithViews::view()</source>
          <target state="translated">InteractsWithViews::view()</target>
        </trans-unit>
        <trans-unit id="368de53eda5ef7fa65549f776f25d93652558756" translate="yes" xml:space="preserve">
          <source>InteractsWithViews::withViewErrors()</source>
          <target state="translated">InteractsWithViews::withViewErrors()</target>
        </trans-unit>
        <trans-unit id="9ddb06d19375212386c26d830f63ad8db1410da7" translate="yes" xml:space="preserve">
          <source>Intercepting Gate Checks</source>
          <target state="translated">拦截闸机检查</target>
        </trans-unit>
        <trans-unit id="40476a98686d7c9da59c960e19503022f2a672d5" translate="yes" xml:space="preserve">
          <source>Interesting events.</source>
          <target state="translated">有趣的事件。</target>
        </trans-unit>
        <trans-unit id="b356313f979923fc829adb909098ed26a5a01aff" translate="yes" xml:space="preserve">
          <source>Interfaces</source>
          <target state="translated">Interfaces</target>
        </trans-unit>
        <trans-unit id="9456ea079c8532bea600841beb7bd0492dbf2a4f" translate="yes" xml:space="preserve">
          <source>Internally, Cashier will use the user's &lt;a href=&quot;#customer-defaults&quot;&gt;&lt;code&gt;paddleCountry&lt;/code&gt; method&lt;/a&gt; to retrieve the prices in their currency. So, for example, a user living in the United States will see prices in USD while a user in Belgium will see prices in EUR. If no matching currency can be found the default currency of the product will be used. You can customize all prices of a product or subscription plan in the Paddle control panel.</source>
          <target state="translated">在内部，收银员将使用用户的&lt;a href=&quot;#customer-defaults&quot;&gt; &lt;code&gt;paddleCountry&lt;/code&gt; 方法&lt;/a&gt;来检索其货币中的价格。因此，例如，居住在美国的用户将看到美元价格，而在比利时的用户将看到欧元价格。如果找不到匹配的货币，则将使用产品的默认货币。您可以在&amp;ldquo; Paddle&amp;rdquo;控制面板中自定义产品或订阅计划的所有价格。</target>
        </trans-unit>
        <trans-unit id="9d7fd095f0b16c0fe802bb3bed97f67ebedf3b31" translate="yes" xml:space="preserve">
          <source>Internally, this rule uses the PHP &lt;code&gt;preg_match&lt;/code&gt; function. The pattern specified should obey the same formatting required by &lt;code&gt;preg_match&lt;/code&gt; and thus also include valid delimiters. For example: &lt;code&gt;'email' =&amp;gt; 'not_regex:/^.+$/i'&lt;/code&gt;.</source>
          <target state="translated">在内部，此规则使用PHP &lt;code&gt;preg_match&lt;/code&gt; 函数。指定的模式应遵循 &lt;code&gt;preg_match&lt;/code&gt; 所需的相同格式，因此还应包括有效的定界符。例如： &lt;code&gt;'email' =&amp;gt; 'not_regex:/^.+$/i'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c632fec3f45ac8b54f91b4a4d6fa855d1c422171" translate="yes" xml:space="preserve">
          <source>Internally, this rule uses the PHP &lt;code&gt;preg_match&lt;/code&gt; function. The pattern specified should obey the same formatting required by &lt;code&gt;preg_match&lt;/code&gt; and thus also include valid delimiters. For example: &lt;code&gt;'email' =&amp;gt; 'regex:/^.+@.+$/i'&lt;/code&gt;.</source>
          <target state="translated">在内部，此规则使用PHP &lt;code&gt;preg_match&lt;/code&gt; 函数。指定的模式应遵循 &lt;code&gt;preg_match&lt;/code&gt; 所需的相同格式，因此还应包括有效的定界符。例如： &lt;code&gt;'email' =&amp;gt; 'regex:/^.+@.+$/i'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f54b5d08b9e7e9575b4cb09d85028b44cacc36cb" translate="yes" xml:space="preserve">
          <source>Intersect the collection with the given items by key.</source>
          <target state="translated">通过键将集合与给定的项目相交。</target>
        </trans-unit>
        <trans-unit id="6ac5f15a9f88cf3506ff885f7cc498184f0cea7a" translate="yes" xml:space="preserve">
          <source>Intersect the collection with the given items.</source>
          <target state="translated">将集合与给定的项目相交。</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">Introduction</target>
        </trans-unit>
        <trans-unit id="474abcfe06fcebaf10100258687c39dc09eb6846" translate="yes" xml:space="preserve">
          <source>InvalidArgumentException</source>
          <target state="translated">InvalidArgumentException</target>
        </trans-unit>
        <trans-unit id="d62d63ff5ca5eef376269316ee2d5a50c094bfb6" translate="yes" xml:space="preserve">
          <source>InvalidCastException</source>
          <target state="translated">InvalidCastException</target>
        </trans-unit>
        <trans-unit id="150e1de14156c595a916e2b9e874fceb14b1be4f" translate="yes" xml:space="preserve">
          <source>InvalidCastException (Database\Eloquent)</source>
          <target state="translated">InvalidCastException (Database\Eloquent)</target>
        </trans-unit>
        <trans-unit id="e79c6b5e96c8a52d3f4891a000919e6328083f52" translate="yes" xml:space="preserve">
          <source>InvalidCastException::__construct()</source>
          <target state="translated">InvalidCastException::__construct()</target>
        </trans-unit>
        <trans-unit id="06f63dc4209f5306ed965df4441893bba4e2ef30" translate="yes" xml:space="preserve">
          <source>InvalidCountException</source>
          <target state="translated">InvalidCountException</target>
        </trans-unit>
        <trans-unit id="4039c6ec9661ed789fc1c6a8b0ad2e8ae8f55bff" translate="yes" xml:space="preserve">
          <source>InvalidEmail|null</source>
          <target state="translated">InvalidEmail|null</target>
        </trans-unit>
        <trans-unit id="0df22225c4945d09af4eb584da2fcb8d31e2ccda" translate="yes" xml:space="preserve">
          <source>InvalidEmail|null
    getError()</source>
          <target state="translated">InvalidEmail|null getError()</target>
        </trans-unit>
        <trans-unit id="5f3a43daa9cc6840f4c9a4cfd7689356c7c6d3a0" translate="yes" xml:space="preserve">
          <source>InvalidFileException</source>
          <target state="translated">InvalidFileException</target>
        </trans-unit>
        <trans-unit id="70e975ae436dffc4aaf8bb3938a256cfd6cda7be" translate="yes" xml:space="preserve">
          <source>InvalidPayloadException</source>
          <target state="translated">InvalidPayloadException</target>
        </trans-unit>
        <trans-unit id="23e6e2430796e298723e193487e67abe48c8fc17" translate="yes" xml:space="preserve">
          <source>InvalidPayloadException (Queue)</source>
          <target state="translated">InvalidPayloadException(队列)。</target>
        </trans-unit>
        <trans-unit id="04ecaeb42bf4e3b97734d54543ad9fcf10de6054" translate="yes" xml:space="preserve">
          <source>InvalidPayloadException::__construct()</source>
          <target state="translated">InvalidPayloadException::__construct()</target>
        </trans-unit>
        <trans-unit id="e55cc8a9619d144e386961fd900a69d72ce9b44c" translate="yes" xml:space="preserve">
          <source>InvalidSignatureException</source>
          <target state="translated">InvalidSignatureException</target>
        </trans-unit>
        <trans-unit id="de07016d07471deddaf32d16913e1b24358beaac" translate="yes" xml:space="preserve">
          <source>InvalidSignatureException (Routing\Exceptions)</source>
          <target state="translated">InvalidSignatureException (RoutingExceptions)</target>
        </trans-unit>
        <trans-unit id="fef721e0a975c7fe3a84dfe4009967bd269810d9" translate="yes" xml:space="preserve">
          <source>InvalidSignatureException::__construct()</source>
          <target state="translated">InvalidSignatureException::__construct()</target>
        </trans-unit>
        <trans-unit id="14d5a0cd53c6fd6943f6f29dfdacf8a1439b7b65" translate="yes" xml:space="preserve">
          <source>Invalidate other sessions for the current user.</source>
          <target state="translated">使当前用户的其他会话无效。</target>
        </trans-unit>
        <trans-unit id="25818764123575f6e7e9d85b4af887a1989685e8" translate="yes" xml:space="preserve">
          <source>Invalidating Sessions On Other Devices</source>
          <target state="translated">在其他设备上无效会话</target>
        </trans-unit>
        <trans-unit id="35f8f37b92ae06da1cbb06dd1617d767c1b6ea72" translate="yes" xml:space="preserve">
          <source>Invoices</source>
          <target state="translated">Invoices</target>
        </trans-unit>
        <trans-unit id="3ad6eec66469e4fd1e65f8079631eafba172bd8a" translate="yes" xml:space="preserve">
          <source>InvokableComponentVariable</source>
          <target state="translated">InvokableComponentVariable</target>
        </trans-unit>
        <trans-unit id="5b3e825340e5d2d98cca8d2caf84df5c59c1e2c8" translate="yes" xml:space="preserve">
          <source>InvokableComponentVariable (View)</source>
          <target state="translated">InvokableComponentVariable (View)</target>
        </trans-unit>
        <trans-unit id="030b9ed0a45219354952c344d99e7744bba0e509" translate="yes" xml:space="preserve">
          <source>InvokableComponentVariable::__call()</source>
          <target state="translated">InvokableComponentVariable::__call()</target>
        </trans-unit>
        <trans-unit id="9cf335e52941ddd7c657a25922be2b225614e776" translate="yes" xml:space="preserve">
          <source>InvokableComponentVariable::__construct()</source>
          <target state="translated">InvokableComponentVariable::__construct()</target>
        </trans-unit>
        <trans-unit id="d1c6a4e72d04a52165e50dba5458ce4baa21974e" translate="yes" xml:space="preserve">
          <source>InvokableComponentVariable::__get()</source>
          <target state="translated">InvokableComponentVariable::__get()</target>
        </trans-unit>
        <trans-unit id="bbde130ea14488cd319785e018fdedc4e685ae75" translate="yes" xml:space="preserve">
          <source>InvokableComponentVariable::__invoke()</source>
          <target state="translated">InvokableComponentVariable::__invoke()</target>
        </trans-unit>
        <trans-unit id="046731adc8900b8b720f83fc9cceb516f24355f0" translate="yes" xml:space="preserve">
          <source>InvokableComponentVariable::__toString()</source>
          <target state="translated">InvokableComponentVariable::__toString()</target>
        </trans-unit>
        <trans-unit id="f816e374eb6eb3f2516785366fea974406d6c8d8" translate="yes" xml:space="preserve">
          <source>InvokableComponentVariable::getIterator()</source>
          <target state="translated">InvokableComponentVariable::getIterator()</target>
        </trans-unit>
        <trans-unit id="2c5fcd0482ec0a45aa6083fed13b12bed7134ca7" translate="yes" xml:space="preserve">
          <source>InvokableComponentVariable::resolveDisplayableValue()</source>
          <target state="translated">InvokableComponentVariable::resolveDisplayableValue()</target>
        </trans-unit>
        <trans-unit id="944b4cf34fa6d724152dea86b1c57d1d52d8768c" translate="yes" xml:space="preserve">
          <source>Invoke a batch callback handler.</source>
          <target state="translated">调用批量回调处理程序。</target>
        </trans-unit>
        <trans-unit id="4a0d1386fc0adbdc9d113ab1da2673c7ed709286" translate="yes" xml:space="preserve">
          <source>Invoke all of the chain's failed job callbacks.</source>
          <target state="translated">调用链上所有失败的作业回调。</target>
        </trans-unit>
        <trans-unit id="fa4dcffa5113b00526bb461d85972bcbadda899d" translate="yes" xml:space="preserve">
          <source>Invoke the controller method.</source>
          <target state="translated">调用控制器方法。</target>
        </trans-unit>
        <trans-unit id="3d8d6a09991887b0bab1c5fb6d9dbd0e6eed4fd5" translate="yes" xml:space="preserve">
          <source>Invoke the handler.</source>
          <target state="translated">调用处理机。</target>
        </trans-unit>
        <trans-unit id="aa0f380fd09b0ea6272931573fcf45863845bd05" translate="yes" xml:space="preserve">
          <source>InvokeQueuedClosure</source>
          <target state="translated">InvokeQueuedClosure</target>
        </trans-unit>
        <trans-unit id="dfd38ed1a502254a91304f8f69696ff20856f5a2" translate="yes" xml:space="preserve">
          <source>InvokeQueuedClosure (Events)</source>
          <target state="translated">InvokeQueuedClosure (Events)</target>
        </trans-unit>
        <trans-unit id="a91eb7463121ac91f4e867d559c9ac8d0d719ba6" translate="yes" xml:space="preserve">
          <source>InvokeQueuedClosure::failed()</source>
          <target state="translated">InvokeQueuedClosure::failed()</target>
        </trans-unit>
        <trans-unit id="745e1733de14a0942ed88ae34481ab57dad623ff" translate="yes" xml:space="preserve">
          <source>InvokeQueuedClosure::handle()</source>
          <target state="translated">InvokeQueuedClosure::handle()</target>
        </trans-unit>
        <trans-unit id="b2bc0cf95cbc7cc0a7a624977d1d5c033b6af394" translate="yes" xml:space="preserve">
          <source>Is Doctrine available?</source>
          <target state="translated">学说可以用吗?</target>
        </trans-unit>
        <trans-unit id="d0ec01ce86e1148025f5f436a27df8102e4839d1" translate="yes" xml:space="preserve">
          <source>Is the given string surrounded by the given character?</source>
          <target state="translated">给定的字符串是否被给定的字符包围?</target>
        </trans-unit>
        <trans-unit id="c749c655de7afa0e449cb96ad7228488ec9f8052" translate="yes" xml:space="preserve">
          <source>Issue a DELETE request to the given URL.</source>
          <target state="translated">向给定的URL发出DELETE请求。</target>
        </trans-unit>
        <trans-unit id="50c3de76b5a71d99ee1dd8beb91b4ccc718e3acf" translate="yes" xml:space="preserve">
          <source>Issue a GET request to the given URL.</source>
          <target state="translated">向给定的URL发出GET请求。</target>
        </trans-unit>
        <trans-unit id="469671265bff5cde4132f200aae5edde16345710" translate="yes" xml:space="preserve">
          <source>Issue a HEAD request to the given URL.</source>
          <target state="translated">向给定的URL发出HEAD请求。</target>
        </trans-unit>
        <trans-unit id="767ebf78ea25fafa6ca940cd0e2000ae9fc94825" translate="yes" xml:space="preserve">
          <source>Issue a PATCH request to the given URL.</source>
          <target state="translated">向给定的URL发出PATCH请求。</target>
        </trans-unit>
        <trans-unit id="13b6612d9881fcd5534ed4d7cff5908504677b0f" translate="yes" xml:space="preserve">
          <source>Issue a POST request to the given URL.</source>
          <target state="translated">向给定的URL发出POST请求。</target>
        </trans-unit>
        <trans-unit id="dd6f488d318a993a600e8bb788976776f7574574" translate="yes" xml:space="preserve">
          <source>Issue a PUT request to the given URL.</source>
          <target state="translated">向给定的URL发出PUT请求。</target>
        </trans-unit>
        <trans-unit id="fd5efea845dc3ed137b82d0d94c1d545e5ccb5ad" translate="yes" xml:space="preserve">
          <source>Issuing API Tokens</source>
          <target state="translated">发行API令牌</target>
        </trans-unit>
        <trans-unit id="d0c213054bf824d45c2718ca3d566dae68e73b26" translate="yes" xml:space="preserve">
          <source>Issuing Access Tokens</source>
          <target state="translated">发行访问令牌</target>
        </trans-unit>
        <trans-unit id="ac32c207edd753e66f3b4d678c70c48bd6e31398" translate="yes" xml:space="preserve">
          <source>It is cumbersome to always pass the &lt;code&gt;locale&lt;/code&gt; every time you call the &lt;code&gt;route&lt;/code&gt; helper. So, you may use the &lt;code&gt;URL::defaults&lt;/code&gt; method to define a default value for this parameter that will always be applied during the current request. You may wish to call this method from a &lt;a href=&quot;middleware#assigning-middleware-to-routes&quot;&gt;route middleware&lt;/a&gt; so that you have access to the current request:</source>
          <target state="translated">每次调用 &lt;code&gt;route&lt;/code&gt; 帮助程序时始终传递 &lt;code&gt;locale&lt;/code&gt; 是很麻烦的。因此，您可以使用 &lt;code&gt;URL::defaults&lt;/code&gt; 方法为该参数定义一个默认值，该默认值将始终在当前请求期间应用。您可能希望从&lt;a href=&quot;middleware#assigning-middleware-to-routes&quot;&gt;路由中间件&lt;/a&gt;调用此方法，以便可以访问当前请求：</target>
        </trans-unit>
        <trans-unit id="b37687e785e8ae6a694d7943786467fa93ba720d" translate="yes" xml:space="preserve">
          <source>It is often helpful to have different configuration values based on the environment where the application is running. For example, you may wish to use a different cache driver locally than you do on your production server.</source>
          <target state="translated">根据应用程序运行的环境,使用不同的配置值通常是有帮助的。例如,您可能希望在本地使用与生产服务器上不同的缓存驱动。</target>
        </trans-unit>
        <trans-unit id="41661ecfc5041c9a4d7e97ac604361646c6f8f28" translate="yes" xml:space="preserve">
          <source>It is often useful to reset your database after each test so that data from a previous test does not interfere with subsequent tests. The &lt;code&gt;RefreshDatabase&lt;/code&gt; trait takes the most optimal approach to migrating your test database depending on if you are using an in-memory database or a traditional database. Use the trait on your test class and everything will be handled for you:</source>
          <target state="translated">在每次测试后重置数据库通常很有用，这样前一次测试中的数据就不会干扰后续测试。该 &lt;code&gt;RefreshDatabase&lt;/code&gt; 特质带给取决于如果您使用的是内存数据库或传统的数据库迁移测试数据库最优化的方法。使用测试类中的特征，将为您处理所有事情：</target>
        </trans-unit>
        <trans-unit id="887bcf7788afbd082f50871c6d07e622f30f4f28" translate="yes" xml:space="preserve">
          <source>It is perfectly fine to use Sanctum only for API token authentication or only for SPA authentication. Just because you use Sanctum does not mean you are required to use both features it offers.</source>
          <target state="translated">完全可以将Sanctum仅用于API令牌认证或仅用于SPA认证。仅仅因为您使用Sanctum并不意味着您必须使用它提供的两种功能。</target>
        </trans-unit>
        <trans-unit id="a7038df1f7c26d40910033e1cc458309d5cec5a1" translate="yes" xml:space="preserve">
          <source>It is very important to note that we did not need to specify the full controller namespace when defining the controller route. Since the &lt;code&gt;RouteServiceProvider&lt;/code&gt; loads your route files within a route group that contains the namespace, we only specified the portion of the class name that comes after the &lt;code&gt;App\Http\Controllers&lt;/code&gt; portion of the namespace.</source>
          <target state="translated">重要的是要注意，在定义控制器路由时，我们不需要指定完整的控制器名称空间。由于 &lt;code&gt;RouteServiceProvider&lt;/code&gt; 将您的路由文件加载到包含名称空间的路由组中，因此我们仅指定了类名称中名称空间的 &lt;code&gt;App\Http\Controllers&lt;/code&gt; 部分之后的部分。</target>
        </trans-unit>
        <trans-unit id="5b39f96a31b34993e3f76d4de2a0e018d6187e39" translate="yes" xml:space="preserve">
          <source>It's best to envision middleware as a series of &quot;layers&quot; HTTP requests must pass through before they hit your application. Each layer can examine the request and even reject it entirely.</source>
          <target state="translated">最好将中间件设想成一系列 &quot;层&quot;,HTTP请求在进入你的应用程序之前必须经过这些层。每一层都可以检查请求,甚至完全拒绝它。</target>
        </trans-unit>
        <trans-unit id="9a035e8c94497b222365e77324f10d4581ae1c7d" translate="yes" xml:space="preserve">
          <source>Items not found in the cache will have a null value.</source>
          <target state="translated">缓存中没有找到的项目将有一个空值。</target>
        </trans-unit>
        <trans-unit id="1fb7e44d0f21152c7a147c841b758453f7e0cef7" translate="yes" xml:space="preserve">
          <source>Iterate through registered plugins and execute plugins' methods.</source>
          <target state="translated">遍历注册的插件并执行插件的方法。</target>
        </trans-unit>
        <trans-unit id="c8d1981a59e491448ff84cec967f357e23d7a3da" translate="yes" xml:space="preserve">
          <source>JSON API</source>
          <target state="translated">JSON API</target>
        </trans-unit>
        <trans-unit id="9ab298721be5a406b1f264fb4a0b13d86d0a5531" translate="yes" xml:space="preserve">
          <source>JSON PHP Extension</source>
          <target state="translated">JSON PHP扩展</target>
        </trans-unit>
        <trans-unit id="565022c0f2b484f49110f22aedc82f84cd16fb86" translate="yes" xml:space="preserve">
          <source>JSON Responses</source>
          <target state="translated">JSON 响应</target>
        </trans-unit>
        <trans-unit id="063f5b40cca4895106081e6e0436fc09b19afbfb" translate="yes" xml:space="preserve">
          <source>JSON Where Clauses</source>
          <target state="translated">JSON Where Clauses</target>
        </trans-unit>
        <trans-unit id="79c59c0317652386105b23d857967c130e0e0589" translate="yes" xml:space="preserve">
          <source>JSON equivalent column.</source>
          <target state="translated">JSON等价列。</target>
        </trans-unit>
        <trans-unit id="770d99157b721430193360cf5e11fb14d8bad3d3" translate="yes" xml:space="preserve">
          <source>JSONB equivalent column.</source>
          <target state="translated">JSONB等价列。</target>
        </trans-unit>
        <trans-unit id="39a74d46ff0229b00d90fbd74074cefd45f28b74" translate="yes" xml:space="preserve">
          <source>January 24th, 2017</source>
          <target state="translated">2017年1月24日</target>
        </trans-unit>
        <trans-unit id="e9e805134cafdef4bd85338d5ebcc7630cfdd370" translate="yes" xml:space="preserve">
          <source>January 24th, 2018</source>
          <target state="translated">2018年1月24日</target>
        </trans-unit>
        <trans-unit id="68ef4374f2d4a9c0c258d3898ad40c4ba443343d" translate="yes" xml:space="preserve">
          <source>Jar::forever()</source>
          <target state="translated">Jar::forever()</target>
        </trans-unit>
        <trans-unit id="39caa569565af369dbeddc9d5cdcb966c317a86e" translate="yes" xml:space="preserve">
          <source>Jar::forget()</source>
          <target state="translated">Jar::forget()</target>
        </trans-unit>
        <trans-unit id="0dc56ebdd0a2830587337b52886d7ac9f98d3826" translate="yes" xml:space="preserve">
          <source>Jar::getPathAndDomain()</source>
          <target state="translated">Jar::getPathAndDomain()</target>
        </trans-unit>
        <trans-unit id="ada11e91a518838d2d938a007bfb05b49158f1c3" translate="yes" xml:space="preserve">
          <source>Jar::getQueuedCookies()</source>
          <target state="translated">Jar::getQueuedCookies()</target>
        </trans-unit>
        <trans-unit id="a92a5033725726c45ad1f6ea1cc810d2ee019586" translate="yes" xml:space="preserve">
          <source>Jar::hasQueued()</source>
          <target state="translated">Jar::hasQueued()</target>
        </trans-unit>
        <trans-unit id="defd48ac7f86fca2b7c03166bfd58d5b7f6986a9" translate="yes" xml:space="preserve">
          <source>Jar::make()</source>
          <target state="translated">Jar::make()</target>
        </trans-unit>
        <trans-unit id="1c635ed171917550165c2e8363800a0ad3a71aaa" translate="yes" xml:space="preserve">
          <source>Jar::queue()</source>
          <target state="translated">Jar::queue()</target>
        </trans-unit>
        <trans-unit id="836242169a75fa6147d31cc733de002299f701b7" translate="yes" xml:space="preserve">
          <source>Jar::queued()</source>
          <target state="translated">Jar::queued()</target>
        </trans-unit>
        <trans-unit id="6c363679d1bbe8e5de54963054b73571885161c3" translate="yes" xml:space="preserve">
          <source>Jar::setDefaultPathAndDomain()</source>
          <target state="translated">Jar::setDefaultPathAndDomain()</target>
        </trans-unit>
        <trans-unit id="9d45b9bb0b7905a9907ce66c7f128913ebc7274a" translate="yes" xml:space="preserve">
          <source>Jar::unqueue()</source>
          <target state="translated">Jar::unqueue()</target>
        </trans-unit>
        <trans-unit id="ee620923ff5fc510555dc37083a135ee93b5404b" translate="yes" xml:space="preserve">
          <source>JavaScript</source>
          <target state="translated">JavaScript</target>
        </trans-unit>
        <trans-unit id="ea9212f85e861b1c00fc2f1eb1fe9581fdf49d6e" translate="yes" xml:space="preserve">
          <source>JavaScript &amp;amp; CSS Scaffolding</source>
          <target state="translated">JavaScript和CSS脚手架</target>
        </trans-unit>
        <trans-unit id="55e89944ea4c8b4d99b6cbca13e35f91996d40bb" translate="yes" xml:space="preserve">
          <source>JavaScript Dialogs</source>
          <target state="translated">JavaScript对话框</target>
        </trans-unit>
        <trans-unit id="eac057cc6bd4aa893b9b18fbbacc8fd0ac031c03" translate="yes" xml:space="preserve">
          <source>Jetstream is designed using &lt;a href=&quot;https://tailwindcss.com&quot;&gt;Tailwind CSS&lt;/a&gt; and offers your choice of &lt;a href=&quot;https://laravel-livewire.com&quot;&gt;Livewire&lt;/a&gt; or &lt;a href=&quot;https://inertiajs.com&quot;&gt;Inertia&lt;/a&gt; scaffolding.</source>
          <target state="translated">Jetstream是使用&lt;a href=&quot;https://tailwindcss.com&quot;&gt;Tailwind CSS&lt;/a&gt;设计的，可以选择&lt;a href=&quot;https://laravel-livewire.com&quot;&gt;Livewire&lt;/a&gt;或&lt;a href=&quot;https://inertiajs.com&quot;&gt;Inertia&lt;/a&gt;脚手架。</target>
        </trans-unit>
        <trans-unit id="9d030054bc6f1d835cd3c379ee1b0b74dd49381c" translate="yes" xml:space="preserve">
          <source>Jetstream will also create a &lt;code&gt;resources/views/layouts&lt;/code&gt; directory containing a base layout for your application. All of these views use the &lt;a href=&quot;https://tailwindcss.com&quot;&gt;Tailwind CSS&lt;/a&gt; framework, but you are free to customize them however you wish.</source>
          <target state="translated">Jetstream还将创建一个 &lt;code&gt;resources/views/layouts&lt;/code&gt; 目录，其中包含应用程序的基本布局。所有这些视图都使用&lt;a href=&quot;https://tailwindcss.com&quot;&gt;Tailwind CSS&lt;/a&gt;框架，但是您可以随意自定义它们。</target>
        </trans-unit>
        <trans-unit id="984512ca0af6c846a106b53df5519ac7fc8e764d" translate="yes" xml:space="preserve">
          <source>Jigsaw</source>
          <target state="translated">Jigsaw</target>
        </trans-unit>
        <trans-unit id="30c8cb83b9acd93beaa32086336c36cb77c065d9" translate="yes" xml:space="preserve">
          <source>Job</source>
          <target state="translated">Job</target>
        </trans-unit>
        <trans-unit id="8e778a2df1e76eaf04e88c068026d8fc7317f388" translate="yes" xml:space="preserve">
          <source>Job
    getPheanstalkJob()</source>
          <target state="translated">Job getPheanstalkJob()</target>
        </trans-unit>
        <trans-unit id="cf69eb83ca1b54393067180dc3fd154a489774cf" translate="yes" xml:space="preserve">
          <source>Job (Contracts)</source>
          <target state="translated">工作(合同)</target>
        </trans-unit>
        <trans-unit id="52ac3e7900f792b437fa8f18ddfd069df8bf8462" translate="yes" xml:space="preserve">
          <source>Job (Queue\Jobs)</source>
          <target state="translated">工作(队列/工作)</target>
        </trans-unit>
        <trans-unit id="3f6d769add06986ae7ac4abd5329b0d2fa967588" translate="yes" xml:space="preserve">
          <source>Job Batching</source>
          <target state="translated">作业批处理</target>
        </trans-unit>
        <trans-unit id="dd9b5761a4c2eb4c07230ab8d0ae2f3a3cb3bb06" translate="yes" xml:space="preserve">
          <source>Job Chaining</source>
          <target state="translated">工作链</target>
        </trans-unit>
        <trans-unit id="460bc12837b10f2a75abb16e30585827ceb62246" translate="yes" xml:space="preserve">
          <source>Job Events</source>
          <target state="translated">招聘活动</target>
        </trans-unit>
        <trans-unit id="0f8b021e68b3ae2a2d4752698b0db775fd4daf46" translate="yes" xml:space="preserve">
          <source>Job Expiration</source>
          <target state="translated">工作到期日</target>
        </trans-unit>
        <trans-unit id="d50e263289cf9cdb14e74dd9d5397b3eee3cc7da" translate="yes" xml:space="preserve">
          <source>Job Expirations &amp;amp; Timeouts</source>
          <target state="translated">工作到期和超时</target>
        </trans-unit>
        <trans-unit id="9748a48cab311915c2f609f5f3c55768fa228467" translate="yes" xml:space="preserve">
          <source>Job Middleware</source>
          <target state="translated">工作中间件</target>
        </trans-unit>
        <trans-unit id="fd5cacebc7529bd929258ed7f69291be49fdfe99" translate="yes" xml:space="preserve">
          <source>Job Trimming</source>
          <target state="translated">工作修剪</target>
        </trans-unit>
        <trans-unit id="b7ee86a15b07f7a2c372b5737848901b00efea62" translate="yes" xml:space="preserve">
          <source>Job Watcher</source>
          <target state="translated">工作观察者</target>
        </trans-unit>
        <trans-unit id="1421df66c02256efa3150544c542b407fdc4e052" translate="yes" xml:space="preserve">
          <source>Job chaining allows you to specify a list of queued jobs that should be run in sequence after the primary job has executed successfully. If one job in the sequence fails, the rest of the jobs will not be run. To execute a queued job chain, you may use the &lt;code&gt;chain&lt;/code&gt; method provided by the &lt;code&gt;Bus&lt;/code&gt; facade:</source>
          <target state="translated">作业链接使您可以指定在成功执行主作业后应按顺序运行的已排队作业的列表。如果序列中的一个作业失败，则其余的作业将不会运行。要执行排队的作业链，您可以使用 &lt;code&gt;Bus&lt;/code&gt; 门面提供的 &lt;code&gt;chain&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="f312a0cfc810775918dd2d377a729d8e86afc0be" translate="yes" xml:space="preserve">
          <source>Job chaining allows you to specify a list of queued jobs that should be run in sequence. If one job in the sequence fails, the rest of the jobs will not be run. To execute a queued job chain, you may use the &lt;code&gt;withChain&lt;/code&gt; method on any of your dispatchable jobs:</source>
          <target state="translated">作业链接使您可以指定应按顺序运行的排队作业列表。如果序列中的一个作业失败，则其余的作业将不会运行。要执行排队的作业链，可以在任何可调度作业上使用 &lt;code&gt;withChain&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="922dea61fde0392b19983ba8d4d759dd551b7674" translate="yes" xml:space="preserve">
          <source>Job classes are very simple, normally containing only a &lt;code&gt;handle&lt;/code&gt; method which is called when the job is processed by the queue. To get started, let's take a look at an example job class. In this example, we'll pretend we manage a podcast publishing service and need to process the uploaded podcast files before they are published:</source>
          <target state="translated">作业类非常简单，通常只包含一个 &lt;code&gt;handle&lt;/code&gt; 方法，该方法在队列处理作业时被调用。首先，让我们看一个示例作业类。在此示例中，我们假设我们管理播客发布服务，并且需要在发布上传的播客文件之前对其进行处理：</target>
        </trans-unit>
        <trans-unit id="80a520b1e1791b77ee06d10495c05d49c60f2dd2" translate="yes" xml:space="preserve">
          <source>Job middleware allow you to wrap custom logic around the execution of queued jobs, reducing boilerplate in the jobs themselves. For example, consider the following &lt;code&gt;handle&lt;/code&gt; method which leverages Laravel's Redis rate limiting features to allow only one job to process every five seconds:</source>
          <target state="translated">作业中间件使您可以将自定义逻辑包装在排队作业的执行周围，从而减少作业本身的样板。例如，考虑以下 &lt;code&gt;handle&lt;/code&gt; 方法，该方法利用Laravel的Redis速率限制功能仅允许每五秒钟处理一项作业：</target>
        </trans-unit>
        <trans-unit id="49cf604f420a87839abbf9fe9fc6d06d0be06b3d" translate="yes" xml:space="preserve">
          <source>Job stubs may be customized using &lt;a href=&quot;artisan#stub-customization&quot;&gt;stub publishing&lt;/a&gt;</source>
          <target state="translated">可以使用&lt;a href=&quot;artisan#stub-customization&quot;&gt;存根发布&lt;/a&gt;自定义作业存根</target>
        </trans-unit>
        <trans-unit id="969bfb0661fcc6c8175e129098b6e7d344ea58d2" translate="yes" xml:space="preserve">
          <source>Job::attempts()</source>
          <target state="translated">Job::attempts()</target>
        </trans-unit>
        <trans-unit id="3f6ef17729cf756b1d0e64f45fe041b276da10fb" translate="yes" xml:space="preserve">
          <source>Job::backoff()</source>
          <target state="translated">Job::backoff()</target>
        </trans-unit>
        <trans-unit id="5eedc6a95b944c6bd1a54080699d698437fb22aa" translate="yes" xml:space="preserve">
          <source>Job::delete()</source>
          <target state="translated">Job::delete()</target>
        </trans-unit>
        <trans-unit id="ab60442db6f3c79e3207d6f05285c1fa105dd22c" translate="yes" xml:space="preserve">
          <source>Job::fail()</source>
          <target state="translated">Job::fail()</target>
        </trans-unit>
        <trans-unit id="460f463b540f5dcba516da5c23a78536d06498b6" translate="yes" xml:space="preserve">
          <source>Job::failed()</source>
          <target state="translated">Job::failed()</target>
        </trans-unit>
        <trans-unit id="73245797c15cdb6c736ed82aba2a1495c8271f63" translate="yes" xml:space="preserve">
          <source>Job::fire()</source>
          <target state="translated">Job::fire()</target>
        </trans-unit>
        <trans-unit id="1daa8e5e9f08c51c39787e1e7025fe5485a86d58" translate="yes" xml:space="preserve">
          <source>Job::getConnectionName()</source>
          <target state="translated">Job::getConnectionName()</target>
        </trans-unit>
        <trans-unit id="487cf738ea370b478620d3393412d34af70474fb" translate="yes" xml:space="preserve">
          <source>Job::getContainer()</source>
          <target state="translated">Job::getContainer()</target>
        </trans-unit>
        <trans-unit id="92131d8221234f44c879c8334787db786880ae48" translate="yes" xml:space="preserve">
          <source>Job::getJobId()</source>
          <target state="translated">Job::getJobId()</target>
        </trans-unit>
        <trans-unit id="f6ee9b899a4f6c590c8acd5c4ac1fac13c5cabad" translate="yes" xml:space="preserve">
          <source>Job::getName()</source>
          <target state="translated">Job::getName()</target>
        </trans-unit>
        <trans-unit id="21d451a45de4ac6c62c2eb3a53ce2e5ff343e5ae" translate="yes" xml:space="preserve">
          <source>Job::getQueue()</source>
          <target state="translated">Job::getQueue()</target>
        </trans-unit>
        <trans-unit id="e42135f41d3696e44b618e94d747ed1cc8b6bb4b" translate="yes" xml:space="preserve">
          <source>Job::getRawBody()</source>
          <target state="translated">Job::getRawBody()</target>
        </trans-unit>
        <trans-unit id="a8d7ab45be2ec3a093fe38f7f4a08564a1c43525" translate="yes" xml:space="preserve">
          <source>Job::getResolvedJob()</source>
          <target state="translated">Job::getResolvedJob()</target>
        </trans-unit>
        <trans-unit id="2875d7f52b06f2e7440f4fc6381602600e0c0430" translate="yes" xml:space="preserve">
          <source>Job::hasFailed()</source>
          <target state="translated">Job::hasFailed()</target>
        </trans-unit>
        <trans-unit id="23fa301688eaaa1243632d63108bc02409a8f4a7" translate="yes" xml:space="preserve">
          <source>Job::isDeleted()</source>
          <target state="translated">Job::isDeleted()</target>
        </trans-unit>
        <trans-unit id="dfa3ced177e49d674e5a870d3853cc5ccd434d37" translate="yes" xml:space="preserve">
          <source>Job::isDeletedOrReleased()</source>
          <target state="translated">Job::isDeletedOrReleased()</target>
        </trans-unit>
        <trans-unit id="1a1400ac325397d86567858570765895781d0eb7" translate="yes" xml:space="preserve">
          <source>Job::isReleased()</source>
          <target state="translated">Job::isReleased()</target>
        </trans-unit>
        <trans-unit id="d41a90fff9f816c7c0fa370877da76e01b1dc5b7" translate="yes" xml:space="preserve">
          <source>Job::markAsFailed()</source>
          <target state="translated">Job::markAsFailed()</target>
        </trans-unit>
        <trans-unit id="91e23612ada938218dd551aba1061ff9b5b7313f" translate="yes" xml:space="preserve">
          <source>Job::maxExceptions()</source>
          <target state="translated">Job::maxExceptions()</target>
        </trans-unit>
        <trans-unit id="2d0cd04100ad77e943ba5cdf3434f1d6ee895f1d" translate="yes" xml:space="preserve">
          <source>Job::maxTries()</source>
          <target state="translated">Job::maxTries()</target>
        </trans-unit>
        <trans-unit id="680711024e196db9ccb1ef11f61a3992aff6d2e1" translate="yes" xml:space="preserve">
          <source>Job::payload()</source>
          <target state="translated">Job::payload()</target>
        </trans-unit>
        <trans-unit id="84a18021a46cb346038c674630c0086bd100706d" translate="yes" xml:space="preserve">
          <source>Job::release()</source>
          <target state="translated">Job::release()</target>
        </trans-unit>
        <trans-unit id="e9ba7b35acdf3e2f82e5b6751ec32b48f78904d9" translate="yes" xml:space="preserve">
          <source>Job::resolve()</source>
          <target state="translated">Job::resolve()</target>
        </trans-unit>
        <trans-unit id="fffb56968ccb0379077c4c87b23714f4480d7eda" translate="yes" xml:space="preserve">
          <source>Job::resolveName()</source>
          <target state="translated">Job::resolveName()</target>
        </trans-unit>
        <trans-unit id="efa7f72e1b4b0584c9a3cc08618fbd96efcc26e5" translate="yes" xml:space="preserve">
          <source>Job::retryUntil()</source>
          <target state="translated">Job::retryUntil()</target>
        </trans-unit>
        <trans-unit id="9bc91d6fb11d2b5987f15cc34c8abe51119c5a29" translate="yes" xml:space="preserve">
          <source>Job::timeout()</source>
          <target state="translated">Job::timeout()</target>
        </trans-unit>
        <trans-unit id="1688901e3dac9ed35b35d3758b46548f8bd47892" translate="yes" xml:space="preserve">
          <source>Job::timeoutAt()</source>
          <target state="translated">Job::timeoutAt()</target>
        </trans-unit>
        <trans-unit id="5566f1de79967ca57cb4ee0793645480b58c6a29" translate="yes" xml:space="preserve">
          <source>Job::uuid()</source>
          <target state="translated">Job::uuid()</target>
        </trans-unit>
        <trans-unit id="c4e805ab1d6951395b62c34176b98e3ba13a298e" translate="yes" xml:space="preserve">
          <source>JobExceptionOccurred</source>
          <target state="translated">JobExceptionOccurred</target>
        </trans-unit>
        <trans-unit id="543a3fa32251346c08806b69cb4a33cce80c3dc2" translate="yes" xml:space="preserve">
          <source>JobExceptionOccurred (Queue\Events)</source>
          <target state="translated">JobExceptionOccurred (Queue/Events)</target>
        </trans-unit>
        <trans-unit id="4b239a9483183b306fe7d0390d5e692dd408bb12" translate="yes" xml:space="preserve">
          <source>JobExceptionOccurred::__construct()</source>
          <target state="translated">JobExceptionOccurred::__construct()</target>
        </trans-unit>
        <trans-unit id="3fd4dca33b1d997e07b9fdd671d7a8b1a283e9fc" translate="yes" xml:space="preserve">
          <source>JobFailed</source>
          <target state="translated">JobFailed</target>
        </trans-unit>
        <trans-unit id="ee651a7c32028e519426347ff6e2e2bc71d3ea26" translate="yes" xml:space="preserve">
          <source>JobFailed (Queue\Events)</source>
          <target state="translated">JobFailed (Queue\Events)</target>
        </trans-unit>
        <trans-unit id="4018885c11778fd0bb6337e0a6c21d2ffcf3a4d5" translate="yes" xml:space="preserve">
          <source>JobFailed::__construct()</source>
          <target state="translated">JobFailed::__construct()</target>
        </trans-unit>
        <trans-unit id="2221c5357fcf9989b525838657f610de06b45873" translate="yes" xml:space="preserve">
          <source>JobMakeCommand</source>
          <target state="translated">JobMakeCommand</target>
        </trans-unit>
        <trans-unit id="395bab2de83c094dc3025b49a741af4d8e8bf53d" translate="yes" xml:space="preserve">
          <source>JobMakeCommand (Foundation)</source>
          <target state="translated">JobMakeCommand(基金会)</target>
        </trans-unit>
        <trans-unit id="92dcaf9eb20e24139b3fd5af6c4107d877fcd0b5" translate="yes" xml:space="preserve">
          <source>JobMakeCommand::getDefaultNamespace()</source>
          <target state="translated">JobMakeCommand::getDefaultNamespace()</target>
        </trans-unit>
        <trans-unit id="bdb9ab38e679fb4b66f106a487ae6fd69d46fd71" translate="yes" xml:space="preserve">
          <source>JobMakeCommand::getOptions()</source>
          <target state="translated">JobMakeCommand::getOptions()</target>
        </trans-unit>
        <trans-unit id="07bcc8653e018ac437b489e42c14fc0d817b8ca5" translate="yes" xml:space="preserve">
          <source>JobMakeCommand::getStub()</source>
          <target state="translated">JobMakeCommand::getStub()</target>
        </trans-unit>
        <trans-unit id="3981ebbb7f4bc3b3603be9de501bd0fdaa04ca31" translate="yes" xml:space="preserve">
          <source>JobMakeCommand::resolveStubPath()</source>
          <target state="translated">JobMakeCommand::resolveStubPath()</target>
        </trans-unit>
        <trans-unit id="f1f568f7bbb3aae07f923667c832d60a1e42728a" translate="yes" xml:space="preserve">
          <source>JobName</source>
          <target state="translated">JobName</target>
        </trans-unit>
        <trans-unit id="9bc19cd9ee40392f36cb941e252d9561e737394d" translate="yes" xml:space="preserve">
          <source>JobName (Queue\Jobs)</source>
          <target state="translated">工作名称(队列/工作)</target>
        </trans-unit>
        <trans-unit id="5502481894fa38641cf46f7606b4f844c9347513" translate="yes" xml:space="preserve">
          <source>JobName::parse()</source>
          <target state="translated">JobName::parse()</target>
        </trans-unit>
        <trans-unit id="99fadcbd57d6e001dbcb009bded456db3d88b2db" translate="yes" xml:space="preserve">
          <source>JobName::resolve()</source>
          <target state="translated">JobName::resolve()</target>
        </trans-unit>
        <trans-unit id="12399cd6dda72b0830e44ffe2e95e08f57fbc308" translate="yes" xml:space="preserve">
          <source>JobProcessed</source>
          <target state="translated">JobProcessed</target>
        </trans-unit>
        <trans-unit id="6f502b84b4f76a03d05a1d33039f6bec30af0e28" translate="yes" xml:space="preserve">
          <source>JobProcessed (Queue\Events)</source>
          <target state="translated">已处理的工作(队列/事件)</target>
        </trans-unit>
        <trans-unit id="d6bcd48823a842511cc1115374d8e26deebd7749" translate="yes" xml:space="preserve">
          <source>JobProcessed::__construct()</source>
          <target state="translated">JobProcessed::__construct()</target>
        </trans-unit>
        <trans-unit id="76485ed4552b9b0efc36b64fc73035109d19230b" translate="yes" xml:space="preserve">
          <source>JobProcessing</source>
          <target state="translated">JobProcessing</target>
        </trans-unit>
        <trans-unit id="5eeff561360add95937d66365093910077c68a17" translate="yes" xml:space="preserve">
          <source>JobProcessing (Queue\Events)</source>
          <target state="translated">JobProcessing (Queue/Events)</target>
        </trans-unit>
        <trans-unit id="b2ee2cd703692da6c030c1b39b873254d589a7cd" translate="yes" xml:space="preserve">
          <source>JobProcessing::__construct()</source>
          <target state="translated">JobProcessing::__construct()</target>
        </trans-unit>
        <trans-unit id="065a09b776a55fb5cccb0afad520689d58a1e6a0" translate="yes" xml:space="preserve">
          <source>Join all items from the collection using a string. The final items can use a separate glue string.</source>
          <target state="translated">用绳子将收藏的所有物品连接起来。最后的项目可以使用单独的胶水串。</target>
        </trans-unit>
        <trans-unit id="8468dd2fe9999a77c67f7a39273b321e20bc2717" translate="yes" xml:space="preserve">
          <source>JoinClause</source>
          <target state="translated">JoinClause</target>
        </trans-unit>
        <trans-unit id="2eedfefd68562c3e7edc72607c8f5dc815d77372" translate="yes" xml:space="preserve">
          <source>JoinClause (Database\Query)</source>
          <target state="translated">JoinClause (Database/Query)</target>
        </trans-unit>
        <trans-unit id="b0eb2c475d95ed2b64f4d5af699bc1f5be726822" translate="yes" xml:space="preserve">
          <source>JoinClause::__construct()</source>
          <target state="translated">JoinClause::__construct()</target>
        </trans-unit>
        <trans-unit id="8f6aedffe27dd68a4ebb13ff4b18dfa660e2403b" translate="yes" xml:space="preserve">
          <source>JoinClause::forSubQuery()</source>
          <target state="translated">JoinClause::forSubQuery()</target>
        </trans-unit>
        <trans-unit id="c95f4fb255d7ee96a962c63c149221b43c37e8fd" translate="yes" xml:space="preserve">
          <source>JoinClause::newParentQuery()</source>
          <target state="translated">JoinClause::newParentQuery()</target>
        </trans-unit>
        <trans-unit id="f3fb37d881c38b83541cf573e34948099a142d5a" translate="yes" xml:space="preserve">
          <source>JoinClause::newQuery()</source>
          <target state="translated">JoinClause::newQuery()</target>
        </trans-unit>
        <trans-unit id="2d8a49584491a6ed38c7aca67486bd5781b58db9" translate="yes" xml:space="preserve">
          <source>JoinClause::on()</source>
          <target state="translated">JoinClause::on()</target>
        </trans-unit>
        <trans-unit id="23e7ee6d19eaeb77cf3862b8d06bdf3b12a7843f" translate="yes" xml:space="preserve">
          <source>JoinClause::orOn()</source>
          <target state="translated">JoinClause::orOn()</target>
        </trans-unit>
        <trans-unit id="aa20e8f265cf7079d0b22a260325ac4770660c99" translate="yes" xml:space="preserve">
          <source>Joining Presence Channels</source>
          <target state="translated">加入存在渠道</target>
        </trans-unit>
        <trans-unit id="36cb6826dbbbacc9f0915d9e44ccb82925b04c72" translate="yes" xml:space="preserve">
          <source>Joins</source>
          <target state="translated">Joins</target>
        </trans-unit>
        <trans-unit id="ec11658474cfe99e7b124c4ba9c07ef816b7be5f" translate="yes" xml:space="preserve">
          <source>Joomla</source>
          <target state="translated">Joomla</target>
        </trans-unit>
        <trans-unit id="99813e1a2b0f7c0f04aa6e1090672b3f50117938" translate="yes" xml:space="preserve">
          <source>JsonEncodingException</source>
          <target state="translated">JsonEncodingException</target>
        </trans-unit>
        <trans-unit id="a9faf297a6fe3264efa89ee8a9865d11864ad639" translate="yes" xml:space="preserve">
          <source>JsonEncodingException (Database\Eloquent)</source>
          <target state="translated">JsonEncodingException (Database\Eloquent)</target>
        </trans-unit>
        <trans-unit id="7c87fb038ba5a9cd493b76faa2e57ce3fff5269c" translate="yes" xml:space="preserve">
          <source>JsonEncodingException::forAttribute()</source>
          <target state="translated">JsonEncodingException::forAttribute()</target>
        </trans-unit>
        <trans-unit id="2a2dcb6800fff1b1c038e06e3e162a96a3c44eb6" translate="yes" xml:space="preserve">
          <source>JsonEncodingException::forModel()</source>
          <target state="translated">JsonEncodingException::forModel()</target>
        </trans-unit>
        <trans-unit id="0e73ca4d08f3a479b5b8b79e249fcec3632fb6b7" translate="yes" xml:space="preserve">
          <source>JsonEncodingException::forResource()</source>
          <target state="translated">JsonEncodingException::forResource()</target>
        </trans-unit>
        <trans-unit id="811b2e01179acfc1d29028fa7de74789cef4b689" translate="yes" xml:space="preserve">
          <source>JsonExpression</source>
          <target state="translated">JsonExpression</target>
        </trans-unit>
        <trans-unit id="d9e009a9d830cf15f58eb7411290b206f394e404" translate="yes" xml:space="preserve">
          <source>JsonExpression (Database\Query)</source>
          <target state="translated">JsonExpression (Database/Query)</target>
        </trans-unit>
        <trans-unit id="8066a3e6fd649ecb30a2e4671bf8e697a2eec3a3" translate="yes" xml:space="preserve">
          <source>JsonExpression::__construct()</source>
          <target state="translated">JsonExpression::__construct()</target>
        </trans-unit>
        <trans-unit id="312c1f4bed83dc044e52bd8aecb32f6b6efaab15" translate="yes" xml:space="preserve">
          <source>JsonExpression::getJsonBindingParameter()</source>
          <target state="translated">JsonExpression::getJsonBindingParameter()</target>
        </trans-unit>
        <trans-unit id="8a9f62d49faaaad7bcfe259ddafb5477dcb99115" translate="yes" xml:space="preserve">
          <source>JsonResource</source>
          <target state="translated">JsonResource</target>
        </trans-unit>
        <trans-unit id="bf0ff8436f323d1d952c09b688d3dfc5c5251e86" translate="yes" xml:space="preserve">
          <source>JsonResource (Http\Resources)</source>
          <target state="translated">JsonResource (Http\Resources)</target>
        </trans-unit>
        <trans-unit id="6533be4a32a650fa0bdc811ec0c897164869a4cb" translate="yes" xml:space="preserve">
          <source>JsonResource::__construct()</source>
          <target state="translated">JsonResource::__construct()</target>
        </trans-unit>
        <trans-unit id="36e595c5a2b2b6b3c0b4451e783bd17d8fb48351" translate="yes" xml:space="preserve">
          <source>JsonResource::additional()</source>
          <target state="translated">JsonResource::additional()</target>
        </trans-unit>
        <trans-unit id="743c7175374efbeebd2d505c887ae53e43621a0d" translate="yes" xml:space="preserve">
          <source>JsonResource::collection()</source>
          <target state="translated">JsonResource::collection()</target>
        </trans-unit>
        <trans-unit id="56c7a655b44f963a5c3ee0dc035916a2c5c57f23" translate="yes" xml:space="preserve">
          <source>JsonResource::jsonSerialize()</source>
          <target state="translated">JsonResource::jsonSerialize()</target>
        </trans-unit>
        <trans-unit id="7a446a2f361f48e7ef0766eb734c049db329a508" translate="yes" xml:space="preserve">
          <source>JsonResource::make()</source>
          <target state="translated">JsonResource::make()</target>
        </trans-unit>
        <trans-unit id="451e1c230878fdff2ecd344374174371527c4f18" translate="yes" xml:space="preserve">
          <source>JsonResource::resolve()</source>
          <target state="translated">JsonResource::resolve()</target>
        </trans-unit>
        <trans-unit id="8262608145b81bc51ae3a3b310daf50142302340" translate="yes" xml:space="preserve">
          <source>JsonResource::response()</source>
          <target state="translated">JsonResource::response()</target>
        </trans-unit>
        <trans-unit id="a85fb48abffd75ae92ed24b0ecb6b32bf42ce91a" translate="yes" xml:space="preserve">
          <source>JsonResource::toArray()</source>
          <target state="translated">JsonResource::toArray()</target>
        </trans-unit>
        <trans-unit id="25a483e5cd88aeaceddb9179218914474d4e9b41" translate="yes" xml:space="preserve">
          <source>JsonResource::toJson()</source>
          <target state="translated">JsonResource::toJson()</target>
        </trans-unit>
        <trans-unit id="735cbf412dee8a2ebe1621a5a49af85e5f79cb70" translate="yes" xml:space="preserve">
          <source>JsonResource::toResponse()</source>
          <target state="translated">JsonResource::toResponse()</target>
        </trans-unit>
        <trans-unit id="b8c4a4f350e8cc1fae7b286e42b33ab92abed612" translate="yes" xml:space="preserve">
          <source>JsonResource::with()</source>
          <target state="translated">JsonResource::with()</target>
        </trans-unit>
        <trans-unit id="e157bfa7bbb009829940291984e2eda177cb14f4" translate="yes" xml:space="preserve">
          <source>JsonResource::withResponse()</source>
          <target state="translated">JsonResource::withResponse()</target>
        </trans-unit>
        <trans-unit id="7080c5f67d99cb8d3be0210b2f687340441ec230" translate="yes" xml:space="preserve">
          <source>JsonResource::withoutWrapping()</source>
          <target state="translated">JsonResource::withoutWrapping()</target>
        </trans-unit>
        <trans-unit id="e29d637f2ea2ae0743c485a4e9ebe196b0544779" translate="yes" xml:space="preserve">
          <source>JsonResource::wrap()</source>
          <target state="translated">JsonResource::wrap()</target>
        </trans-unit>
        <trans-unit id="0ffa6db4b15f44f2c0dcd68335b85b11487d0c19" translate="yes" xml:space="preserve">
          <source>JsonResponse</source>
          <target state="translated">JsonResponse</target>
        </trans-unit>
        <trans-unit id="5f7d2ea3adbfeed4911e46f1127dae50ca162a14" translate="yes" xml:space="preserve">
          <source>JsonResponse (Http)</source>
          <target state="translated">JsonResponse (Http)</target>
        </trans-unit>
        <trans-unit id="6dafed5d1d729ea609c27f120b758441014cc6ed" translate="yes" xml:space="preserve">
          <source>JsonResponse::__construct()</source>
          <target state="translated">JsonResponse::__construct()</target>
        </trans-unit>
        <trans-unit id="83c9dab0fa0c94b2a8b637eb42ad47fde02bc4cf" translate="yes" xml:space="preserve">
          <source>JsonResponse::getData()</source>
          <target state="translated">JsonResponse::getData()</target>
        </trans-unit>
        <trans-unit id="6608c1faeb2595bc2ea11d52ec8594986029b97d" translate="yes" xml:space="preserve">
          <source>JsonResponse::hasEncodingOption()</source>
          <target state="translated">JsonResponse::hasEncodingOption()</target>
        </trans-unit>
        <trans-unit id="175705571fb8db66a0958a229025bd7b07744c4a" translate="yes" xml:space="preserve">
          <source>JsonResponse::hasValidJson()</source>
          <target state="translated">JsonResponse::hasValidJson()</target>
        </trans-unit>
        <trans-unit id="aad944b08f736de0c13780f317832c183971d61c" translate="yes" xml:space="preserve">
          <source>JsonResponse::setData()</source>
          <target state="translated">JsonResponse::setData()</target>
        </trans-unit>
        <trans-unit id="3a3138b26d6ebac6f7fba182cc6680f7ab6ae1ae" translate="yes" xml:space="preserve">
          <source>JsonResponse::setEncodingOptions()</source>
          <target state="translated">JsonResponse::setEncodingOptions()</target>
        </trans-unit>
        <trans-unit id="08716af7c24682942e947acbb9089020d5168b42" translate="yes" xml:space="preserve">
          <source>JsonResponse::withCallback()</source>
          <target state="translated">JsonResponse::withCallback()</target>
        </trans-unit>
        <trans-unit id="2ca1074e61f234f7ed88d910cce0126247cf865e" translate="yes" xml:space="preserve">
          <source>Jsonable</source>
          <target state="translated">Jsonable</target>
        </trans-unit>
        <trans-unit id="bf1070ce011474911ca16c4d8a842423c0ee4ae9" translate="yes" xml:space="preserve">
          <source>Jsonable (Contracts)</source>
          <target state="translated">Jsonable (合同)</target>
        </trans-unit>
        <trans-unit id="e0818c1d20000521d27b09893b891d43676afe9c" translate="yes" xml:space="preserve">
          <source>Jsonable::toJson()</source>
          <target state="translated">Jsonable::toJson()</target>
        </trans-unit>
        <trans-unit id="656be1f7b067c1f222f3e00c88f45d0bf0d942d6" translate="yes" xml:space="preserve">
          <source>July 24th, 2017</source>
          <target state="translated">2017年7月24日</target>
        </trans-unit>
        <trans-unit id="919cbf9d66b6f8d79b01878d384ddf253a2d0a26" translate="yes" xml:space="preserve">
          <source>June 21st, 2016</source>
          <target state="translated">2016年6月21日</target>
        </trans-unit>
        <trans-unit id="cd81b82eed519d3094b1c5e674ccdaef43c52979" translate="yes" xml:space="preserve">
          <source>June 9th, 2015</source>
          <target state="translated">2015年6月9日</target>
        </trans-unit>
        <trans-unit id="32f0e08b1188a643f527d26dbefb68c8ee0f8e64" translate="yes" xml:space="preserve">
          <source>June 9th, 2017</source>
          <target state="translated">2017年6月9日</target>
        </trans-unit>
        <trans-unit id="14d1d7aee95173705eff451c40974d84092451c6" translate="yes" xml:space="preserve">
          <source>June 9th, 2018</source>
          <target state="translated">2018年6月9日</target>
        </trans-unit>
        <trans-unit id="b4200d59bfef2b7b2c4438ce8be7ed39e56ecf60" translate="yes" xml:space="preserve">
          <source>Just before the view is rendered, the composer's &lt;code&gt;compose&lt;/code&gt; method is called with the &lt;code&gt;Illuminate\View\View&lt;/code&gt; instance. You may use the &lt;code&gt;with&lt;/code&gt; method to bind data to the view.</source>
          <target state="translated">就在渲染视图之前，使用 &lt;code&gt;Illuminate\View\View&lt;/code&gt; 实例调用了composer的 &lt;code&gt;compose&lt;/code&gt; 方法。您可以使用 &lt;code&gt;with&lt;/code&gt; 方法将数据绑定到视图。</target>
        </trans-unit>
        <trans-unit id="d89ae689a0f8f705a7e17031f805c0b403593f94" translate="yes" xml:space="preserve">
          <source>Just like HTTP routes, channel routes may also take advantage of implicit and explicit &lt;a href=&quot;routing#route-model-binding&quot;&gt;route model binding&lt;/a&gt;. For example, instead of receiving the string or numeric order ID, you may request an actual &lt;code&gt;Order&lt;/code&gt; model instance:</source>
          <target state="translated">就像HTTP路由一样，通道路由也可以利用隐式和显式&lt;a href=&quot;routing#route-model-binding&quot;&gt;路由模型绑定&lt;/a&gt;。例如，您可以请求一个实际的 &lt;code&gt;Order&lt;/code&gt; 模型实例，而不是接收字符串或数字订单ID ：</target>
        </trans-unit>
        <trans-unit id="63265dc144907e3afa04d5c20a82e1f05d97f0ff" translate="yes" xml:space="preserve">
          <source>KEYS - The keys that represent available slots ARGV[1] - The limiter name ARGV[2] - The number of seconds the slot should be reserved</source>
          <target state="translated">KEYS-代表可用槽位的键 ARGV[1]-限制器名称 ARGV[2]-槽位应保留的秒数。</target>
        </trans-unit>
        <trans-unit id="01345a07eb46eeb08d7085a02d9c68f5efe0b630" translate="yes" xml:space="preserve">
          <source>KEYS - The keys that represent available slots ARGV[1] - The limiter name ARGV[2] - The number of seconds the slot should be reserved ARGV[3] - The unique identifier for this lock</source>
          <target state="translated">KEYS-代表可用槽位的键 ARGV[1]-限制器名称 ARGV[2]-槽位应保留的秒数 ARGV[3]-本锁的唯一标识符。</target>
        </trans-unit>
        <trans-unit id="7fcc4160d899fe747e00a88b6f53871dd5ade945" translate="yes" xml:space="preserve">
          <source>KEYS[1] - The &quot;delayed&quot; queue we release jobs onto, for example: queues:foo:delayed KEYS[2] - The queue the jobs are currently on, for example: queues:foo:reserved ARGV[1] - The raw payload of the job to add to the &quot;delayed&quot; queue ARGV[2] - The UNIX timestamp at which the job should become available</source>
          <target state="translated">KEYS[1]-我们发布作业的 &quot;延迟 &quot;队列,例如:queues:foo:delayed KEYS[2]-作业当前所在的队列,例如:queues:foo:reserved ARGV[1]-要添加到 &quot;延迟 &quot;队列中的作业的原始有效载荷 ARGV[2]-作业可用的 UNIX 时间戳。</target>
        </trans-unit>
        <trans-unit id="3f6c770f2d3a5e6c0a94af408a31363229407d35" translate="yes" xml:space="preserve">
          <source>KEYS[1] - The limiter name ARGV[1] - Current time in microseconds ARGV[2] - Current time in seconds ARGV[3] - Duration of the bucket ARGV[4] - Allowed number of tasks</source>
          <target state="translated">KEYS[1]-限制器名称 ARGV[1]-当前时间(微秒)ARGV[2]-当前时间(秒)ARGV[3]-桶的持续时间 ARGV[4]-允许的任务数量。</target>
        </trans-unit>
        <trans-unit id="2010d43a39b0e94a68662ebba082004338f0a8b5" translate="yes" xml:space="preserve">
          <source>KEYS[1] - The name of the lock ARGV[1] - The owner key of the lock instance trying to release it</source>
          <target state="translated">KEYS[1]-锁的名称 ARGV[1]-试图释放的锁的所有者钥匙</target>
        </trans-unit>
        <trans-unit id="2f1e6fbc0c3a1c87e357a5ea6a1b7095aa8eedfa" translate="yes" xml:space="preserve">
          <source>KEYS[1] - The name of the lock ARGV[1] - The unique identifier for this lock</source>
          <target state="translated">KEYS[1]-鎖的名稱 ARGV[1]-鎖的唯一識別符。</target>
        </trans-unit>
        <trans-unit id="43060ca0789b1fe8b940f1d272db02f599f00b8c" translate="yes" xml:space="preserve">
          <source>KEYS[1] - The name of the primary queue KEYS[2] - The name of the &quot;delayed&quot; queue KEYS[3] - The name of the &quot;reserved&quot; queue</source>
          <target state="translated">KEYS[1]-主队列的名称 KEYS[2]-&quot;延迟 &quot;队列的名称 KEYS[3]-&quot;保留 &quot;队列的名称。</target>
        </trans-unit>
        <trans-unit id="1a1292f7aa384bf160e3cdc6015f860521722233" translate="yes" xml:space="preserve">
          <source>KEYS[1] - The name of the primary queue KEYS[2] - The name of the &quot;delayed&quot; queue KEYS[3] - The name of the &quot;reserved&quot; queue KEYS[4] - The name of the &quot;notify&quot; queue</source>
          <target state="translated">KEYS[1]--主队列的名称 KEYS[2]--&quot;延迟 &quot;队列的名称 KEYS[3]--&quot;保留 &quot;队列的名称 KEYS[4]--&quot;通知 &quot;队列的名称。</target>
        </trans-unit>
        <trans-unit id="6b767214b9ba9c0eeeec600f3bea6c5475230399" translate="yes" xml:space="preserve">
          <source>KEYS[1] - The queue to pop jobs from, for example: queues:foo KEYS[2] - The queue to place reserved jobs on, for example: queues:foo:reserved ARGV[1] - The time at which the reserved job will expire</source>
          <target state="translated">KEYS[1]-从队列中弹出作业的队列,例如:queues:foo KEYS[2]-将保留作业放在队列中的队列,例如:queues:foo:reserved ARGV[1]-保留作业过期的时间。</target>
        </trans-unit>
        <trans-unit id="7231e5bcf4d5fe3fe324434832a3c9d6ac6f3483" translate="yes" xml:space="preserve">
          <source>KEYS[1] - The queue to pop jobs from, for example: queues:foo KEYS[2] - The queue to place reserved jobs on, for example: queues:foo:reserved KEYS[3] - The notify queue ARGV[1] - The time at which the reserved job will expire</source>
          <target state="translated">KEYS[1]-从队列中弹出作业的队列,例如:queues:foo KEYS[2]-将保留作业放置在队列中的队列,例如:queues:foo:reserved KEYS[3]-通知队列 ARGV[1]-保留作业过期的时间。</target>
        </trans-unit>
        <trans-unit id="ef7ee8e8b2f1e6c2a9a37d41c88977e1e913275a" translate="yes" xml:space="preserve">
          <source>KEYS[1] - The queue to push the job onto, for example: queues:foo KEYS[2] - The notification list fot the queue we are pushing jobs onto, for example: queues:foo:notify ARGV[1] - The job payload</source>
          <target state="translated">KEYS[1]-要将作业推送到的队列,例如:queues:foo KEYS[2]-要将作业推送到的队列的通知列表,例如:queues:foo:notify ARGV[1]-作业的有效载荷。</target>
        </trans-unit>
        <trans-unit id="bfe15a0a1fb9d5d2947c802a3137908ff54653e7" translate="yes" xml:space="preserve">
          <source>KEYS[1] - The queue we are removing jobs from, for example: queues:foo:reserved KEYS[2] - The queue we are moving jobs to, for example: queues:foo ARGV[1] - The current UNIX timestamp</source>
          <target state="translated">KEYS[1]-移除作业的队列,例如:queues:foo:reserved KEYS[2]-移动作业的队列,例如:queues:foo ARGV[1]-当前UNIX时间戳。</target>
        </trans-unit>
        <trans-unit id="292d6485dc58173936c59307300deec7b383cfa7" translate="yes" xml:space="preserve">
          <source>KEYS[1] - The queue we are removing jobs from, for example: queues:foo:reserved KEYS[2] - The queue we are moving jobs to, for example: queues:foo KEYS[3] - The notification list for the queue we are moving jobs to, for example queues:foo:notify ARGV[1] - The current UNIX timestamp</source>
          <target state="translated">KEYS[1]-移除作业的队列,例如:queues:foo:reserved KEYS[2]-移动作业的队列,例如:queues:foo KEYS[3]-移动作业的队列的通知列表,例如:queues:foo:notify ARGV[1]-当前的 UNIX 时间戳。</target>
        </trans-unit>
        <trans-unit id="913305b0b0d858cc87a22b16642d2a969b0cff82" translate="yes" xml:space="preserve">
          <source>Katana</source>
          <target state="translated">Katana</target>
        </trans-unit>
        <trans-unit id="7558734a8f08a433995abe8d660ee66e74777b96" translate="yes" xml:space="preserve">
          <source>Keep in mind that most response methods are chainable, allowing for the fluent construction of response instances. For example, you may use the &lt;code&gt;header&lt;/code&gt; method to add a series of headers to the response before sending it back to the user:</source>
          <target state="translated">请记住，大多数响应方法都是可链接的，从而可以流畅地构建响应实例。例如，您可以使用 &lt;code&gt;header&lt;/code&gt; 方法将一系列标题添加到响应中，然后再将其发送回用户：</target>
        </trans-unit>
        <trans-unit id="74808d3df030e992e7b9444241625147986487c1" translate="yes" xml:space="preserve">
          <source>Kernel</source>
          <target state="translated">Kernel</target>
        </trans-unit>
        <trans-unit id="86e10cfdc61e63c1f8809f3611afe3a913a4dfaf" translate="yes" xml:space="preserve">
          <source>Kernel (Contracts)</source>
          <target state="translated">核心(合同)</target>
        </trans-unit>
        <trans-unit id="e1ac901c4a47e89bae12b2f8406192a2404f1d19" translate="yes" xml:space="preserve">
          <source>Kernel (Foundation)</source>
          <target state="translated">核心(基础)</target>
        </trans-unit>
        <trans-unit id="92d9efc540e89fd56fa51375b884f858f23c9937" translate="yes" xml:space="preserve">
          <source>Kernel (Foundation\Http)</source>
          <target state="translated">内核(基础\Http)</target>
        </trans-unit>
        <trans-unit id="ab56a2eda2ac35fedd9a65272adb2b571bb26186" translate="yes" xml:space="preserve">
          <source>Kernel::__construct()</source>
          <target state="translated">Kernel::__construct()</target>
        </trans-unit>
        <trans-unit id="2f4daf56ba340265296d20213183e21756f48358" translate="yes" xml:space="preserve">
          <source>Kernel::all()</source>
          <target state="translated">Kernel::all()</target>
        </trans-unit>
        <trans-unit id="ebc451311d039479fcd84374583f0f684b6a3c63" translate="yes" xml:space="preserve">
          <source>Kernel::appendMiddlewareToGroup()</source>
          <target state="translated">Kernel::appendMiddlewareToGroup()</target>
        </trans-unit>
        <trans-unit id="6be786203545bb18024d4efab38df912685f738a" translate="yes" xml:space="preserve">
          <source>Kernel::appendToMiddlewarePriority()</source>
          <target state="translated">Kernel::appendToMiddlewarePriority()</target>
        </trans-unit>
        <trans-unit id="79759990eca956507e0517785afe542ba497ae00" translate="yes" xml:space="preserve">
          <source>Kernel::bootstrap()</source>
          <target state="translated">Kernel::bootstrap()</target>
        </trans-unit>
        <trans-unit id="9d8b1ff48b418951dad2345a40fab64946b23a23" translate="yes" xml:space="preserve">
          <source>Kernel::bootstrappers()</source>
          <target state="translated">Kernel::bootstrappers()</target>
        </trans-unit>
        <trans-unit id="df99a3f6ee1a3de3582d59a186ac7a7caa198590" translate="yes" xml:space="preserve">
          <source>Kernel::call()</source>
          <target state="translated">Kernel::call()</target>
        </trans-unit>
        <trans-unit id="c74c2983a9455c587714c541e0275fc127253409" translate="yes" xml:space="preserve">
          <source>Kernel::command()</source>
          <target state="translated">Kernel::command()</target>
        </trans-unit>
        <trans-unit id="71f4cc47c98758bf0a749fa34ae994f4aacf17cd" translate="yes" xml:space="preserve">
          <source>Kernel::commands()</source>
          <target state="translated">Kernel::commands()</target>
        </trans-unit>
        <trans-unit id="12d04169c3fe065207ccc2068ef7702e251c0245" translate="yes" xml:space="preserve">
          <source>Kernel::defineConsoleSchedule()</source>
          <target state="translated">Kernel::defineConsoleSchedule()</target>
        </trans-unit>
        <trans-unit id="ec5c895aa624134b57fa7a46b081bff8c110f454" translate="yes" xml:space="preserve">
          <source>Kernel::dispatchToRouter()</source>
          <target state="translated">Kernel::dispatchToRouter()</target>
        </trans-unit>
        <trans-unit id="1cbf2db098c3d08e0cb5f8225daa393cfa7275a4" translate="yes" xml:space="preserve">
          <source>Kernel::gatherRouteMiddleware()</source>
          <target state="translated">Kernel::gatherRouteMiddleware()</target>
        </trans-unit>
        <trans-unit id="0d4baeedee28f161712906453c52988e607676b6" translate="yes" xml:space="preserve">
          <source>Kernel::getApplication()</source>
          <target state="translated">Kernel::getApplication()</target>
        </trans-unit>
        <trans-unit id="5273b498ae2fa568b898c35567e60634ba4732c7" translate="yes" xml:space="preserve">
          <source>Kernel::getArtisan()</source>
          <target state="translated">Kernel::getArtisan()</target>
        </trans-unit>
        <trans-unit id="081ae5cdb1f4f5725c7312527bdbbf547be9ca74" translate="yes" xml:space="preserve">
          <source>Kernel::getMiddlewareGroups()</source>
          <target state="translated">Kernel::getMiddlewareGroups()</target>
        </trans-unit>
        <trans-unit id="db06a6be3d15dc176151758110f804d137daf7c5" translate="yes" xml:space="preserve">
          <source>Kernel::getRouteMiddleware()</source>
          <target state="translated">Kernel::getRouteMiddleware()</target>
        </trans-unit>
        <trans-unit id="f4c70739f828c2ce450eb2d7e68c8ec74c48369e" translate="yes" xml:space="preserve">
          <source>Kernel::handle()</source>
          <target state="translated">Kernel::handle()</target>
        </trans-unit>
        <trans-unit id="158dff28a1597378bcc930649eb4e163a1f322f4" translate="yes" xml:space="preserve">
          <source>Kernel::hasMiddleware()</source>
          <target state="translated">Kernel::hasMiddleware()</target>
        </trans-unit>
        <trans-unit id="a5900df465b80c2b2af4c6a46b5098137ff27ba1" translate="yes" xml:space="preserve">
          <source>Kernel::load()</source>
          <target state="translated">Kernel::load()</target>
        </trans-unit>
        <trans-unit id="f7504bd021df8fc8d1865dccf690f8bbc521b427" translate="yes" xml:space="preserve">
          <source>Kernel::output()</source>
          <target state="translated">Kernel::output()</target>
        </trans-unit>
        <trans-unit id="b142117176bdf97b7bea64697613b6fc44fa574e" translate="yes" xml:space="preserve">
          <source>Kernel::parseMiddleware()</source>
          <target state="translated">Kernel::parseMiddleware()</target>
        </trans-unit>
        <trans-unit id="05d774f1101fd0b6bd85f3995325fbc0490c84b1" translate="yes" xml:space="preserve">
          <source>Kernel::prependMiddleware()</source>
          <target state="translated">Kernel::prependMiddleware()</target>
        </trans-unit>
        <trans-unit id="6d296cb40137b688d1c45097e37602e6f5b1466e" translate="yes" xml:space="preserve">
          <source>Kernel::prependMiddlewareToGroup()</source>
          <target state="translated">Kernel::prependMiddlewareToGroup()</target>
        </trans-unit>
        <trans-unit id="d4c011caafa508ea26507f4f69a2d89ad2ff1f89" translate="yes" xml:space="preserve">
          <source>Kernel::prependToMiddlewarePriority()</source>
          <target state="translated">Kernel::prependToMiddlewarePriority()</target>
        </trans-unit>
        <trans-unit id="53ffc27f65e3372c4f3b1937c00016003c645c3f" translate="yes" xml:space="preserve">
          <source>Kernel::pushMiddleware()</source>
          <target state="translated">Kernel::pushMiddleware()</target>
        </trans-unit>
        <trans-unit id="e8e3f21ae4033f4e7cd4d97110a82c73831d4aab" translate="yes" xml:space="preserve">
          <source>Kernel::queue()</source>
          <target state="translated">Kernel::queue()</target>
        </trans-unit>
        <trans-unit id="b0b52cbeae696880fa2faf7fc90d0bb35a062df1" translate="yes" xml:space="preserve">
          <source>Kernel::registerCommand()</source>
          <target state="translated">Kernel::registerCommand()</target>
        </trans-unit>
        <trans-unit id="b8cef619377fea191daba496718c486ac21c7c1c" translate="yes" xml:space="preserve">
          <source>Kernel::renderException()</source>
          <target state="translated">Kernel::renderException()</target>
        </trans-unit>
        <trans-unit id="214f0ca94256914f4fd9546705a1bcd0b5a47dcc" translate="yes" xml:space="preserve">
          <source>Kernel::reportException()</source>
          <target state="translated">Kernel::reportException()</target>
        </trans-unit>
        <trans-unit id="1df80bd14d0de26a223b9f237e6c5322ee4db527" translate="yes" xml:space="preserve">
          <source>Kernel::schedule()</source>
          <target state="translated">Kernel::schedule()</target>
        </trans-unit>
        <trans-unit id="d9cca197c5052f388fa8449447e1a6d1e77e90b8" translate="yes" xml:space="preserve">
          <source>Kernel::scheduleCache()</source>
          <target state="translated">Kernel::scheduleCache()</target>
        </trans-unit>
        <trans-unit id="c04a97cd6d6e6a9e05f79d16cd39f44ff0534616" translate="yes" xml:space="preserve">
          <source>Kernel::scheduleTimezone()</source>
          <target state="translated">Kernel::scheduleTimezone()</target>
        </trans-unit>
        <trans-unit id="0f8947639139eb71f3cf0fd662cecdf229e3a736" translate="yes" xml:space="preserve">
          <source>Kernel::sendRequestThroughRouter()</source>
          <target state="translated">Kernel::sendRequestThroughRouter()</target>
        </trans-unit>
        <trans-unit id="07c25448ce20403587774ed962918cb5ce9a173f" translate="yes" xml:space="preserve">
          <source>Kernel::setArtisan()</source>
          <target state="translated">Kernel::setArtisan()</target>
        </trans-unit>
        <trans-unit id="8c63527a39a2ba04e964df674a8ac8132e616f4a" translate="yes" xml:space="preserve">
          <source>Kernel::syncMiddlewareToRouter()</source>
          <target state="translated">Kernel::syncMiddlewareToRouter()</target>
        </trans-unit>
        <trans-unit id="65357f39adf91c65feefb9b9fc87de53784a9cfb" translate="yes" xml:space="preserve">
          <source>Kernel::terminate()</source>
          <target state="translated">Kernel::terminate()</target>
        </trans-unit>
        <trans-unit id="146222f9669544040c3f999bacb88c95c5efe9ca" translate="yes" xml:space="preserve">
          <source>Kernel::terminateMiddleware()</source>
          <target state="translated">Kernel::terminateMiddleware()</target>
        </trans-unit>
        <trans-unit id="316e3616e1c6f94c56aba74bbee07ed40242f04e" translate="yes" xml:space="preserve">
          <source>Key / File Conflicts</source>
          <target state="translated">钥匙/文件冲突</target>
        </trans-unit>
        <trans-unit id="ad6e6aa82ee776b4c0b8d1d39a35f83ea53e50c4" translate="yes" xml:space="preserve">
          <source>Key an associative array by a field or using a callback.</source>
          <target state="translated">通过字段或使用回调键入一个关联数组。</target>
        </trans-unit>
        <trans-unit id="3478d2b6419d817fe0a38a96786cd92f627981ee" translate="yes" xml:space="preserve">
          <source>KeyForgotten</source>
          <target state="translated">KeyForgotten</target>
        </trans-unit>
        <trans-unit id="cc9c3d21fc7325f4491511f42bcf0f7a35f8a78e" translate="yes" xml:space="preserve">
          <source>KeyForgotten (Cache\Events)</source>
          <target state="translated">KeyForgotten (Cache/Events)</target>
        </trans-unit>
        <trans-unit id="72519e9cc0a02681b1c017645bed03c271d0f022" translate="yes" xml:space="preserve">
          <source>KeyGenerateCommand</source>
          <target state="translated">KeyGenerateCommand</target>
        </trans-unit>
        <trans-unit id="3a84b356c3ccc05fe3ace8905d95c5000c73d5f6" translate="yes" xml:space="preserve">
          <source>KeyGenerateCommand (Foundation)</source>
          <target state="translated">按键生成命令(基金会)</target>
        </trans-unit>
        <trans-unit id="8214c9e67b883832aef50e5ce31fd9b866b06c0c" translate="yes" xml:space="preserve">
          <source>KeyGenerateCommand::generateRandomKey()</source>
          <target state="translated">KeyGenerateCommand::generateRandomKey()</target>
        </trans-unit>
        <trans-unit id="df66f5722f9548d9a4a495d7e16a48dc406ccfb5" translate="yes" xml:space="preserve">
          <source>KeyGenerateCommand::handle()</source>
          <target state="translated">KeyGenerateCommand::handle()</target>
        </trans-unit>
        <trans-unit id="adcf8e7a89959ee5c8b989fc9d07992790dcc852" translate="yes" xml:space="preserve">
          <source>KeyGenerateCommand::keyReplacementPattern()</source>
          <target state="translated">KeyGenerateCommand::keyReplacementPattern()</target>
        </trans-unit>
        <trans-unit id="0721d8efc7b7987502aacbeae82c54b2c8608def" translate="yes" xml:space="preserve">
          <source>KeyGenerateCommand::setKeyInEnvironmentFile()</source>
          <target state="translated">KeyGenerateCommand::setKeyInEnvironmentFile()</target>
        </trans-unit>
        <trans-unit id="2592f374bd11343b68bc3b52b34a4acb46409123" translate="yes" xml:space="preserve">
          <source>KeyGenerateCommand::writeNewEnvironmentFileWith()</source>
          <target state="translated">KeyGenerateCommand::writeNewEnvironmentFileWith()</target>
        </trans-unit>
        <trans-unit id="b0fdeb74247d886c908667c3cb0e64fe302e2d08" translate="yes" xml:space="preserve">
          <source>KeyWritten</source>
          <target state="translated">KeyWritten</target>
        </trans-unit>
        <trans-unit id="d2276767dc2aca4c0611f0c925e97325cb2b0c1d" translate="yes" xml:space="preserve">
          <source>KeyWritten (Cache\Events)</source>
          <target state="translated">KeyWritten (Cache/Events)</target>
        </trans-unit>
        <trans-unit id="c0d86865e71b355418eb2d4a7d42974bcbb85e10" translate="yes" xml:space="preserve">
          <source>KeyWritten::__construct()</source>
          <target state="translated">KeyWritten::__construct()</target>
        </trans-unit>
        <trans-unit id="cba8ddc5884a500606a59bdf9f014a6821ae2a55" translate="yes" xml:space="preserve">
          <source>Kill the process.</source>
          <target state="translated">杀死这个过程。</target>
        </trans-unit>
        <trans-unit id="841935e1ecb1a09aa7c0cf551d23ebf57fa0239e" translate="yes" xml:space="preserve">
          <source>Kirby</source>
          <target state="translated">Kirby</target>
        </trans-unit>
        <trans-unit id="e048fd121d36d52d9b005a05a25bffe850a1a70a" translate="yes" xml:space="preserve">
          <source>LINESTRING equivalent column.</source>
          <target state="translated">LINESTRING等同列。</target>
        </trans-unit>
        <trans-unit id="da943ffa11a09eba4de9bf0947fb0f90130279ab" translate="yes" xml:space="preserve">
          <source>LONGTEXT equivalent column.</source>
          <target state="translated">LONGTEXT等价列。</target>
        </trans-unit>
        <trans-unit id="769c96075047fae57552577a9a43bb6ecdf288f5" translate="yes" xml:space="preserve">
          <source>Lang</source>
          <target state="translated">Lang</target>
        </trans-unit>
        <trans-unit id="1ccebe10a10c153e3ca56b41f3a02faa7d3b24f5" translate="yes" xml:space="preserve">
          <source>Lang (Support\Facades)</source>
          <target state="translated">Lang (Support/Facades)</target>
        </trans-unit>
        <trans-unit id="c82c37cd108c59b6f8cd67ffe9479bba17fa935a" translate="yes" xml:space="preserve">
          <source>Lang::getFacadeAccessor()</source>
          <target state="translated">Lang::getFacadeAccessor()</target>
        </trans-unit>
        <trans-unit id="a81dc2433d03d0d120699c6886be74bfb75a5897" translate="yes" xml:space="preserve">
          <source>Laracasts Forums</source>
          <target state="translated">Laracasts论坛</target>
        </trans-unit>
        <trans-unit id="271124d94f955ff5afb80bd3db0303c1c33e9829" translate="yes" xml:space="preserve">
          <source>Larachat</source>
          <target state="translated">Larachat</target>
        </trans-unit>
        <trans-unit id="e31cfe3eb5d13086108730689c08cf77e07a5481" translate="yes" xml:space="preserve">
          <source>Laravel</source>
          <target state="translated">Laravel</target>
        </trans-unit>
        <trans-unit id="902f71cfe5c8e2dc8334d52dcc4d2a07b82c71ca" translate="yes" xml:space="preserve">
          <source>Laravel 5.7</source>
          <target state="translated">Laravel 5.7</target>
        </trans-unit>
        <trans-unit id="036312081986f72d6c770d1cbe9385d32eafcb8b" translate="yes" xml:space="preserve">
          <source>Laravel 5.7 allows you to control how many additional links are displayed on each side of the paginator's URL &quot;window&quot;. By default, three links are displayed on each side of the primary paginator links. However, you may control this number using the &lt;code&gt;onEachSide&lt;/code&gt; method:</source>
          <target state="translated">Laravel 5.7允许您控制在分页器URL&amp;ldquo;窗口&amp;rdquo;的每一侧显示多少个附加链接。默认情况下，三个页面链接显示在主要分页器链接的每一侧。但是，您可以使用 &lt;code&gt;onEachSide&lt;/code&gt; 方法控制此数字：</target>
        </trans-unit>
        <trans-unit id="3e810633db5a2ff11766c32f8d773b2066943490" translate="yes" xml:space="preserve">
          <source>Laravel 5.7 allows you to easily &quot;mock&quot; user input for your console commands using the &lt;code&gt;expectsQuestion&lt;/code&gt; method. In addition, you may specify the exit code and text that you expect to be output by the console command using the &lt;code&gt;assertExitCode&lt;/code&gt; and &lt;code&gt;expectsOutput&lt;/code&gt; methods. For example, consider the following console command:</source>
          <target state="translated">Laravel 5.7允许您使用 &lt;code&gt;expectsQuestion&lt;/code&gt; 方法轻松地为控制台命令&amp;ldquo;模拟&amp;rdquo;用户输入。另外，您可以使用 &lt;code&gt;assertExitCode&lt;/code&gt; 和 &lt;code&gt;expectsOutput&lt;/code&gt; 方法指定控制台命令希望输出的退出代码和文本。例如，考虑以下控制台命令：</target>
        </trans-unit>
        <trans-unit id="dcde1734048ab37ac1702169084c73acdc953321" translate="yes" xml:space="preserve">
          <source>Laravel 5.7 continues the improvements made in Laravel 5.6 by introducing &lt;a href=&quot;https://nova.laravel.com&quot;&gt;Laravel Nova&lt;/a&gt;, optional email verification to the authentication scaffolding, support for guest users in authorization gates and policies, console testing improvements, Symfony &lt;code&gt;dump-server&lt;/code&gt; integration, localizable notifications, and a variety of other bug fixes and usability improvements.</source>
          <target state="translated">Laravel 5.7通过引入&lt;a href=&quot;https://nova.laravel.com&quot;&gt;Laravel Nova&lt;/a&gt;，对身份验证支架的可选电子邮件验证，在授权门和策略中对来宾用户的支持，控制台测试的改进，Symfony &lt;code&gt;dump-server&lt;/code&gt; 集成，可本地化的通知以及各种其他功能，继续在Laravel 5.6中进行的改进。错误修复和可用性改进。</target>
        </trans-unit>
        <trans-unit id="b0cb411b4f2a056d1796bd94cb29732c37a77940" translate="yes" xml:space="preserve">
          <source>Laravel 5.7 introduces optional email verification to the authentication scaffolding included with the framework. To accommodate this feature, an &lt;code&gt;email_verified_at&lt;/code&gt; timestamp column has been added to the default &lt;code&gt;users&lt;/code&gt; table migration that is included with the framework.</source>
          <target state="translated">Laravel 5.7将可选的电子邮件验证引入到框架随附的身份验证支架中。为了适应此功能，框架随附的默认 &lt;code&gt;users&lt;/code&gt; 表迁移中已添加了 &lt;code&gt;email_verified_at&lt;/code&gt; 时间戳列。</target>
        </trans-unit>
        <trans-unit id="fecb868cb396fa00c27ae92fd87a67ebc56226eb" translate="yes" xml:space="preserve">
          <source>Laravel 5.7 offers integration with Symfony's &lt;code&gt;dump-server&lt;/code&gt; command via &lt;a href=&quot;https://github.com/beyondcode/laravel-dump-server&quot;&gt;a package by Marcel Pociot&lt;/a&gt;. To get started, run the &lt;code&gt;dump-server&lt;/code&gt; Artisan command:</source>
          <target state="translated">Laravel 5.7 &lt;a href=&quot;https://github.com/beyondcode/laravel-dump-server&quot;&gt;通过Marcel Pociot的软件包&lt;/a&gt;与Symfony的 &lt;code&gt;dump-server&lt;/code&gt; 命令集成。首先，运行 &lt;code&gt;dump-server&lt;/code&gt; Artisan命令：</target>
        </trans-unit>
        <trans-unit id="d7f3ec58067e6777c38aa5621955f95bcec2474d" translate="yes" xml:space="preserve">
          <source>Laravel 8</source>
          <target state="translated">Laravel 8</target>
        </trans-unit>
        <trans-unit id="80ba65e1f21e2c022308a6d04ffea00dc0d24543" translate="yes" xml:space="preserve">
          <source>Laravel 8 continues the improvements made in Laravel 7.x by introducing Laravel Jetstream, model factory classes, migration squashing, job batching, improved rate limiting, queue improvements, dynamic Blade components, Tailwind pagination views, time testing helpers, improvements to &lt;code&gt;artisan serve&lt;/code&gt;, event listener improvements, and a variety of other bug fixes and usability improvements.</source>
          <target state="translated">Laravel 8通过引入Laravel Jetstream，模型工厂类，迁移挤压，作业批处理，改进的速率限制，队列改进，动态Blade组件，Tailwind分页视图，时间测试助手， &lt;code&gt;artisan serve&lt;/code&gt; ，事件侦听器改进，以及其他各种错误修复和可用性改进。</target>
        </trans-unit>
        <trans-unit id="46cbecd8c61a9190b6721ed95c4e139b3e0cc706" translate="yes" xml:space="preserve">
          <source>Laravel Application</source>
          <target state="translated">Laravel应用程序</target>
        </trans-unit>
        <trans-unit id="914fa57baae34b06ca80f5c139347d15d08b5566" translate="yes" xml:space="preserve">
          <source>Laravel Art</source>
          <target state="translated">拉威尔艺术</target>
        </trans-unit>
        <trans-unit id="b44663c9252ba53d55e3aaaeddd64714121fab68" translate="yes" xml:space="preserve">
          <source>Laravel Cashier</source>
          <target state="translated">Laravel收银员</target>
        </trans-unit>
        <trans-unit id="a3ca9fd52f94ea571943968546a6b8a7ac09abd6" translate="yes" xml:space="preserve">
          <source>Laravel Cashier Paddle</source>
          <target state="translated">Laravel收银桨</target>
        </trans-unit>
        <trans-unit id="74e427d36dc41cecff1a9a470423292a733d2f7e" translate="yes" xml:space="preserve">
          <source>Laravel Cashier Paddle provides an expressive, fluent interface to &lt;a href=&quot;https://paddle.com&quot;&gt;Paddle's&lt;/a&gt; subscription billing services. It handles almost all of the boilerplate subscription billing code you are dreading. In addition to basic subscription management, Cashier can handle: coupons, swapping subscription, subscription &quot;quantities&quot;, cancellation grace periods, and more.</source>
          <target state="translated">Laravel Cashier Paddle为&lt;a href=&quot;https://paddle.com&quot;&gt;Paddle的&lt;/a&gt;订阅计费服务提供了一个表达流畅的界面。它处理您所恐惧的几乎所有样板预订帐单代码。除了基本的订阅管理，收银员还可以处理：优惠券，交换订阅，订阅&amp;ldquo;数量&amp;rdquo;，取消宽限期等。</target>
        </trans-unit>
        <trans-unit id="6cc8565ec5192698a3f07cd52a221bd7c09e4b6b" translate="yes" xml:space="preserve">
          <source>Laravel Cashier Stripe</source>
          <target state="translated">Laravel收银条</target>
        </trans-unit>
        <trans-unit id="6004e25a139ac001eb2fd37d3cce0161326d13bb" translate="yes" xml:space="preserve">
          <source>Laravel Cashier for Braintree</source>
          <target state="translated">Laravel Cashier for Braintree</target>
        </trans-unit>
        <trans-unit id="9bf428eaf46107babfc26892ab9aa77788aa3eb2" translate="yes" xml:space="preserve">
          <source>Laravel Cashier provides an expressive, fluent interface to &lt;a href=&quot;https://stripe.com&quot;&gt;Stripe's&lt;/a&gt; and &lt;a href=&quot;https://www.braintreepayments.com&quot;&gt;Braintree's&lt;/a&gt; subscription billing services. It handles almost all of the boilerplate subscription billing code you are dreading writing. In addition to basic subscription management, Cashier can handle coupons, swapping subscription, subscription &quot;quantities&quot;, cancellation grace periods, and even generate invoice PDFs.</source>
          <target state="translated">Laravel Cashier为&lt;a href=&quot;https://stripe.com&quot;&gt;Stripe&lt;/a&gt;和&lt;a href=&quot;https://www.braintreepayments.com&quot;&gt;Braintree的&lt;/a&gt;订阅计费服务提供了一个表达流畅的界面。它处理您正在编写的几乎所有样板订阅帐单代码。除了基本的订阅管理外，收银员还可以处理优惠券，交换订阅，订阅&amp;ldquo;数量&amp;rdquo;，取消宽限期，甚至生成发票PDF。</target>
        </trans-unit>
        <trans-unit id="a4d51f3afa38e8ae1fd6618f5e03e72d1282aa21" translate="yes" xml:space="preserve">
          <source>Laravel Cashier provides an expressive, fluent interface to &lt;a href=&quot;https://stripe.com&quot;&gt;Stripe's&lt;/a&gt; subscription billing services. It handles almost all of the boilerplate subscription billing code you are dreading writing. In addition to basic subscription management, Cashier can handle coupons, swapping subscription, subscription &quot;quantities&quot;, cancellation grace periods, and even generate invoice PDFs.</source>
          <target state="translated">Laravel Cashier为&lt;a href=&quot;https://stripe.com&quot;&gt;Stripe的&lt;/a&gt;订阅计费服务提供了一个表达流畅的界面。它处理您正在编写的几乎所有样板订阅帐单代码。除了基本的订阅管理外，出纳员还可以处理优惠券，交换订阅，订阅&amp;ldquo;数量&amp;rdquo;，取消宽限期，甚至生成发票PDF。</target>
        </trans-unit>
        <trans-unit id="c6f26c9ef1ac0cd62ab5e99290dd43754e637649" translate="yes" xml:space="preserve">
          <source>Laravel Documentation</source>
          <target state="translated">Laravel文档</target>
        </trans-unit>
        <trans-unit id="75a39e3830657d022b47e95b5bab7634ae6eb367" translate="yes" xml:space="preserve">
          <source>Laravel Dusk</source>
          <target state="translated">Laravel Dusk</target>
        </trans-unit>
        <trans-unit id="94f79c81502626882f071d63e0357190eeea91e9" translate="yes" xml:space="preserve">
          <source>Laravel Dusk provides an expressive, easy-to-use browser automation and testing API. By default, Dusk does not require you to install JDK or Selenium on your machine. Instead, Dusk uses a standalone &lt;a href=&quot;https://sites.google.com/a/chromium.org/chromedriver/home&quot;&gt;ChromeDriver&lt;/a&gt; installation. However, you are free to utilize any other Selenium compatible driver you wish.</source>
          <target state="translated">Laravel Dusk提供了一个表达性强，易于使用的浏览器自动化和测试API。默认情况下，Dusk不需要您在计算机上安装JDK或Selenium。相反，Dusk使用独立的&lt;a href=&quot;https://sites.google.com/a/chromium.org/chromedriver/home&quot;&gt;ChromeDriver&lt;/a&gt;安装。但是，您可以自由使用所需的任何其他Selenium兼容驱动程序。</target>
        </trans-unit>
        <trans-unit id="0ba50192d9b01a89f651acfa57a1d9f6e2d72a8f" translate="yes" xml:space="preserve">
          <source>Laravel Echo</source>
          <target state="translated">拉威尔回声</target>
        </trans-unit>
        <trans-unit id="2dc8903016c63bd6db221025cbc4b6a58a657418" translate="yes" xml:space="preserve">
          <source>Laravel Echo is a JavaScript library that makes it painless to subscribe to channels and listen for events broadcast by Laravel. You may install Echo via the NPM package manager. In this example, we will also install the &lt;code&gt;pusher-js&lt;/code&gt; package since we will be using the Pusher Channels broadcaster:</source>
          <target state="translated">Laravel Echo是一个JavaScript库，可以轻松订阅频道并收听Laravel广播的事件。您可以通过NPM软件包管理器安装Echo。在此示例中，我们还将安装 &lt;code&gt;pusher-js&lt;/code&gt; 软件包，因为我们将使用Pusher Channels广播器：</target>
        </trans-unit>
        <trans-unit id="0545a256a935263ebb9f729daaaabbffb45ba99e" translate="yes" xml:space="preserve">
          <source>Laravel Echo is a JavaScript library that makes it painless to subscribe to channels and listen for events broadcast by Laravel. You may install Echo via the NPM package manager. In this example, we will also install the &lt;code&gt;pusher-js&lt;/code&gt; package since we will be using the Pusher broadcaster:</source>
          <target state="translated">Laravel Echo是一个JavaScript库，可以轻松订阅频道并收听Laravel广播的事件。您可以通过NPM软件包管理器安装Echo。在此示例中，我们还将安装 &lt;code&gt;pusher-js&lt;/code&gt; 软件包，因为我们将使用Pusher广播器：</target>
        </trans-unit>
        <trans-unit id="0b676284b2192c9060cbc8d9a4e4bdc89d6228b9" translate="yes" xml:space="preserve">
          <source>Laravel Envoy</source>
          <target state="translated">Laravel Envoy</target>
        </trans-unit>
        <trans-unit id="961e56c4f87d78aa00777b98b50434f971f93e39" translate="yes" xml:space="preserve">
          <source>Laravel Forge can create servers on various infrastructure providers such as DigitalOcean, Linode, AWS, and more. In addition, Forge installs and manages all of the tools needed to build robust Laravel applications, such as Nginx, MySQL, Redis, Memcached, Beanstalk, and more.</source>
          <target state="translated">Laravel Forge可以在各种基础设施提供商上创建服务器,如DigitalOcean、Linode、AWS等。此外,Forge还可以安装和管理构建健壮的Laravel应用程序所需的所有工具,如Nginx、MySQL、Redis、Memcached、Beanstalk等。</target>
        </trans-unit>
        <trans-unit id="4d00973c2780970bab71d03023a6d01cf75061e7" translate="yes" xml:space="preserve">
          <source>Laravel Fortify is a headless authentication backend for Laravel that implements many of the features found in this documentation, including cookie-based authentication as well as other features such as two-factor authentication and email verification. Laravel Jetstream is a UI that consumes and exposes Fortify's authentication services with a beautiful, modern UI powered by &lt;a href=&quot;https://tailwindcss.com&quot;&gt;Tailwind CSS&lt;/a&gt;, &lt;a href=&quot;https://laravel-livewire.com&quot;&gt;Laravel Livewire&lt;/a&gt;, and / or &lt;a href=&quot;https://inertiajs.com&quot;&gt;Inertia.js&lt;/a&gt;. Laravel Jetstream, in addition to offering browser-based cookie authentication, includes built-in integration with Laravel Sanctum to offer API token authentication. Laravel's API authentication offerings are discussed below.</source>
          <target state="translated">Laravel Fortify是Laravel的无头身份验证后端，它实现了本文档中的许多功能，包括基于cookie的身份验证以及其他功能，例如两因素身份验证和电子邮件验证。 Laravel Jetstream是一个UI，它使用由&lt;a href=&quot;https://tailwindcss.com&quot;&gt;Tailwind CSS&lt;/a&gt;，&lt;a href=&quot;https://laravel-livewire.com&quot;&gt;Laravel Livewire&lt;/a&gt;和/或&lt;a href=&quot;https://inertiajs.com&quot;&gt;Inertia.js&lt;/a&gt;驱动的漂亮，现代的UI使用和公开Fortify的身份验证服务。 Laravel Jetstream除了提供基于浏览器的cookie身份验证外，还包括与Laravel Sanctum的内置集成以提供API令牌身份验证。 Laravel的API身份验证产品将在下面讨论。</target>
        </trans-unit>
        <trans-unit id="d16a4484bd4f20a2d3eecc3c12054c897df861fd" translate="yes" xml:space="preserve">
          <source>Laravel Framework</source>
          <target state="translated">Laravel框架</target>
        </trans-unit>
        <trans-unit id="8a326fbf15fc3140677ebeee315232d095fdba65" translate="yes" xml:space="preserve">
          <source>Laravel Homestead</source>
          <target state="translated">Laravel Homestead</target>
        </trans-unit>
        <trans-unit id="78d0aaa06bd54efe39d9f43ed90a03b16bcce25b" translate="yes" xml:space="preserve">
          <source>Laravel Homestead Build Scripts</source>
          <target state="translated">Laravel家园建设脚本</target>
        </trans-unit>
        <trans-unit id="627a5d09bf3106ed29d9a934169a3fa33027a42a" translate="yes" xml:space="preserve">
          <source>Laravel Homestead is an official, pre-packaged Vagrant box that provides you a wonderful development environment without requiring you to install PHP, a web server, and any other server software on your local machine. No more worrying about messing up your operating system! Vagrant boxes are completely disposable. If something goes wrong, you can destroy and re-create the box in minutes!</source>
          <target state="translated">Laravel Homestead是一个官方的,预包装的Vagrant盒子,它为你提供了一个美妙的开发环境,而不需要你在你的本地机器上安装PHP,Web服务器和任何其他服务器软件.不用再担心会弄坏您的操作系统。Vagrant盒子是完全一次性的。如果出现问题,您可以在几分钟内销毁并重新创建盒子。</target>
        </trans-unit>
        <trans-unit id="51fb81eb322f7245c32af66e128b99bc2e012f71" translate="yes" xml:space="preserve">
          <source>Laravel Horizon</source>
          <target state="translated">Laravel Horizon</target>
        </trans-unit>
        <trans-unit id="970e7a870221b3eadd2ca663ed2bfb12fd867149" translate="yes" xml:space="preserve">
          <source>Laravel Jetstream</source>
          <target state="translated">Laravel Jetstream</target>
        </trans-unit>
        <trans-unit id="8345819947a17ecc93637eab47154c3013b4be58" translate="yes" xml:space="preserve">
          <source>Laravel Mix</source>
          <target state="translated">拉威尔混合</target>
        </trans-unit>
        <trans-unit id="6c7873a657fabdbbd8fd485c16224ab5edfcc5a3" translate="yes" xml:space="preserve">
          <source>Laravel Nova</source>
          <target state="translated">Laravel Nova</target>
        </trans-unit>
        <trans-unit id="b07391682104453d6fc2ec8b3a03bd5facbd6ce5" translate="yes" xml:space="preserve">
          <source>Laravel Passport</source>
          <target state="translated">拉威尔护照</target>
        </trans-unit>
        <trans-unit id="ac92bdd344f4ba5b41cc85e1c75455376101542e" translate="yes" xml:space="preserve">
          <source>Laravel REPL</source>
          <target state="translated">Laravel REPL</target>
        </trans-unit>
        <trans-unit id="e4d30790606b3b56daac3c474bf624946dc27801" translate="yes" xml:space="preserve">
          <source>Laravel Sanctum</source>
          <target state="translated">Laravel Sanctum</target>
        </trans-unit>
        <trans-unit id="983c91e9d97454e4b31cabb4807525cfa966dcdc" translate="yes" xml:space="preserve">
          <source>Laravel Sanctum exists to solve two separate problems.</source>
          <target state="translated">Laravel Sanctum的存在是为了解决两个独立的问题.</target>
        </trans-unit>
        <trans-unit id="0e18e22492f68c714f345b4d7c555fea2d245a78" translate="yes" xml:space="preserve">
          <source>Laravel Sanctum is a hybrid web / API authentication package that can manage your application's entire authentication process. This is possible because when Sanctum based applications receive a request, Sanctum will first determine if the request includes a session cookie that references an authenticated session. Sanctum accomplishes this by calling Laravel's built-in authentication services which we discussed earlier. If the request is not being authenticated via a session cookie, Sanctum will inspect the request for an API token. If an API token is present, Sanctum will authenticate the request using that token. To learn more about this process, please consult Sanctum's &lt;a href=&quot;sanctum#how-it-works&quot;&gt;&quot;how it works&quot;&lt;/a&gt; documentation.</source>
          <target state="translated">Laravel Sanctum是Web / API混合身份验证程序包，可以管理您的应用程序的整个身份验证过程。这是可能的，因为当基于Sanctum的应用程序收到请求时，Sanctum将首先确定该请求是否包括引用已认证会话的会话cookie。 Sanctum通过调用我们前面讨论的Laravel的内置身份验证服务来实现此目的。如果未通过会话cookie对请求进行身份验证，Sanctum将检查请求中的API令牌。如果存在API令牌，Sanctum将使用该令牌对请求进行身份验证。要了解有关此过程的更多信息，请查阅Sanctum的&lt;a href=&quot;sanctum#how-it-works&quot;&gt;&amp;ldquo;工作原理&amp;rdquo;&lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="9c9b2f96c2cc08bef7b90e0cd3c8dd6d9042669c" translate="yes" xml:space="preserve">
          <source>Laravel Sanctum is the API package we have chosen to include with the &lt;a href=&quot;https://jetstream.laravel.com&quot;&gt;Laravel Jetstream&lt;/a&gt; authentication scaffolding because we believe it is the best fit for the majority of web application's authentication needs.</source>
          <target state="translated">Laravel Sanctum是我们选择包含在&lt;a href=&quot;https://jetstream.laravel.com&quot;&gt;Laravel Jetstream&lt;/a&gt;身份验证支架中的API软件包，因为我们认为它最适合大多数Web应用程序的身份验证需求。</target>
        </trans-unit>
        <trans-unit id="fccaa94f9ef3901e6ec5a93f9440f98353f1def0" translate="yes" xml:space="preserve">
          <source>Laravel Sanctum offers this feature by storing user API tokens in a single database table and authenticating incoming requests via the &lt;code&gt;Authorization&lt;/code&gt; header which should contain a valid API token.</source>
          <target state="translated">Laravel Sanctum通过将用户API令牌存储在单个数据库表中并通过应该包含有效API令牌的 &lt;code&gt;Authorization&lt;/code&gt; 标头对传入的请求进行身份验证来提供此功能。</target>
        </trans-unit>
        <trans-unit id="0f23e2fdf5d4c591346b56e1b29a6f4496d96f02" translate="yes" xml:space="preserve">
          <source>Laravel Sanctum provides a featherweight authentication system for SPAs (single page applications), mobile applications, and simple, token based APIs. Sanctum allows each user of your application to generate multiple API tokens for their account. These tokens may be granted abilities / scopes which specify which actions the tokens are allowed to perform.</source>
          <target state="translated">Laravel Sanctum为SPA(单页应用程序),移动应用程序,以及简单的,基于令牌的API提供了一个轻量级的认证系统.Sanctum允许你的应用程序的每个用户为他们的账户生成多个API令牌.这些令牌可以被授予能力/范围,指定令牌可以执行哪些操作。</target>
        </trans-unit>
        <trans-unit id="fd02bd410a136f60131beb3beb8a81d9e3ad7ba6" translate="yes" xml:space="preserve">
          <source>Laravel Scout</source>
          <target state="translated">Laravel Scout</target>
        </trans-unit>
        <trans-unit id="d961dc7abd234e4fed4f04d1c44b67e1595df2d3" translate="yes" xml:space="preserve">
          <source>Laravel Scout provides a simple, driver based solution for adding full-text search to your &lt;a href=&quot;eloquent&quot;&gt;Eloquent models&lt;/a&gt;. Using model observers, Scout will automatically keep your search indexes in sync with your Eloquent records.</source>
          <target state="translated">Laravel Scout提供了一个简单的基于驱动程序的解决方案，用于向Eloquent &lt;a href=&quot;eloquent&quot;&gt;模型&lt;/a&gt;添加全文搜索。通过使用模型观察器，Scout将自动使您的搜索索引与您的口才记录保持同步。</target>
        </trans-unit>
        <trans-unit id="01a9cb16b341be7fb519b72c2da79b5667020042" translate="yes" xml:space="preserve">
          <source>Laravel Socialite</source>
          <target state="translated">Laravel社交网站</target>
        </trans-unit>
        <trans-unit id="9aa3c72bdbc91dbf0870b4f840f9bf9b52c319a9" translate="yes" xml:space="preserve">
          <source>Laravel Telescope</source>
          <target state="translated">拉威尔望远镜</target>
        </trans-unit>
        <trans-unit id="64e8a550c9b129843911123e1a26dea469435f65" translate="yes" xml:space="preserve">
          <source>Laravel Telescope is an elegant debug assistant for the Laravel framework. Telescope provides insight into the requests coming into your application, exceptions, log entries, database queries, queued jobs, mail, notifications, cache operations, scheduled tasks, variable dumps and more. Telescope makes a wonderful companion to your local Laravel development environment.</source>
          <target state="translated">Laravel Telescope是一个优雅的Laravel框架的调试助手.Telescope提供了对进入你的应用程序的请求,异常,日志条目,数据库查询,排队作业,邮件,通知,缓存操作,计划任务,变量转储等等的深入了解.Telescope是你本地Laravel开发环境的绝佳伙伴.</target>
        </trans-unit>
        <trans-unit id="f362a21ba1f11df8fcc97e79c0cf0db2aaabf9e6" translate="yes" xml:space="preserve">
          <source>Laravel Tinker is a powerful REPL for the Laravel framework, powered by the &lt;a href=&quot;https://github.com/bobthecow/psysh&quot;&gt;PsySH&lt;/a&gt; package.</source>
          <target state="translated">Laravel Tinker是Laravel框架的强大REPL，由&lt;a href=&quot;https://github.com/bobthecow/psysh&quot;&gt;PsySH&lt;/a&gt;软件包提供支持。</target>
        </trans-unit>
        <trans-unit id="a1fd655aeab7e7788a761b601549884a582cef95" translate="yes" xml:space="preserve">
          <source>Laravel Valet</source>
          <target state="translated">Laravel Valet</target>
        </trans-unit>
        <trans-unit id="04d9177c39871bb87b059f06e3d717263f199670" translate="yes" xml:space="preserve">
          <source>Laravel Valet configures your Mac to always run &lt;a href=&quot;https://www.nginx.com/&quot;&gt;Nginx&lt;/a&gt; in the background when your machine starts. Then, using &lt;a href=&quot;https://en.wikipedia.org/wiki/Dnsmasq&quot;&gt;DnsMasq&lt;/a&gt;, Valet proxies all requests on the &lt;code&gt;*.test&lt;/code&gt; domain to point to sites installed on your local machine.</source>
          <target state="translated">Laravel Valet将您的Mac配置为在计算机启动时始终在后台运行&lt;a href=&quot;https://www.nginx.com/&quot;&gt;Nginx&lt;/a&gt;。然后，使用&lt;a href=&quot;https://en.wikipedia.org/wiki/Dnsmasq&quot;&gt;DnsMasq&lt;/a&gt;，代客代理 &lt;code&gt;*.test&lt;/code&gt; 域上的所有请求以指向本地计算机上安装的站点。</target>
        </trans-unit>
        <trans-unit id="42d006af8bf7ca86e7ddb3073eb1717ff6d9ec54" translate="yes" xml:space="preserve">
          <source>Laravel Vapor</source>
          <target state="translated">Laravel Vapor</target>
        </trans-unit>
        <trans-unit id="6fa903b5dceb2844b8c366e162ce1155bcb4660b" translate="yes" xml:space="preserve">
          <source>Laravel Website</source>
          <target state="translated">Laravel网站</target>
        </trans-unit>
        <trans-unit id="5c73154dee763c54fdef04b7fe91b7de8041f0e6" translate="yes" xml:space="preserve">
          <source>Laravel allows you to easily &quot;mock&quot; user input for your console commands using the &lt;code&gt;expectsQuestion&lt;/code&gt; method. In addition, you may specify the exit code and text that you expect to be output by the console command using the &lt;code&gt;assertExitCode&lt;/code&gt; and &lt;code&gt;expectsOutput&lt;/code&gt; methods. For example, consider the following console command:</source>
          <target state="translated">Laravel允许您使用 &lt;code&gt;expectsQuestion&lt;/code&gt; 方法轻松地为控制台命令&amp;ldquo;模拟&amp;rdquo;用户输入。另外，您可以使用 &lt;code&gt;assertExitCode&lt;/code&gt; 和 &lt;code&gt;expectsOutput&lt;/code&gt; 方法指定控制台命令希望输出的退出代码和文本。例如，考虑以下控制台命令：</target>
        </trans-unit>
        <trans-unit id="1d223f4f5e13461f32e8bd1239a73dd40f1a9b2e" translate="yes" xml:space="preserve">
          <source>Laravel allows you to easily create &quot;signed&quot; URLs to named routes. These URLs have a &quot;signature&quot; hash appended to the query string which allows Laravel to verify that the URL has not been modified since it was created. Signed URLs are especially useful for routes that are publicly accessible yet need a layer of protection against URL manipulation.</source>
          <target state="translated">Laravel允许你轻松创建 &quot;签名 &quot;URL到命名的路由.这些URLs有一个 &quot;签名 &quot;哈希值附加到查询字符串中,这允许Laravel验证该URL自创建以来没有被修改过.签名的URL对于那些可以公开访问的路由特别有用,但又需要一层保护来防止URL被篡改.</target>
        </trans-unit>
        <trans-unit id="1ebd1eff7627fc6be1770447cddab88aaae86148" translate="yes" xml:space="preserve">
          <source>Laravel allows you to keep input from one request during the next request. This feature is particularly useful for re-populating forms after detecting validation errors. However, if you are using Laravel's included &lt;a href=&quot;validation&quot;&gt;validation features&lt;/a&gt;, it is unlikely you will need to manually use these methods, as some of Laravel's built-in validation facilities will call them automatically.</source>
          <target state="translated">Laravel允许您在下一个请求期间保留来自一个请求的输入。此功能对于在检测到验证错误后重新填充表单特别有用。但是，如果您使用的是Laravel包含的&lt;a href=&quot;validation&quot;&gt;验证功能&lt;/a&gt;，则不太可能需要手动使用这些方法，因为Laravel的某些内置验证工具会自动调用它们。</target>
        </trans-unit>
        <trans-unit id="5ae22418221c91125ca6200c0be78f028d4c33e1" translate="yes" xml:space="preserve">
          <source>Laravel allows you to render a view in isolation without making a simulated HTTP request to the application. To accomplish this, you may use the &lt;code&gt;view&lt;/code&gt; method within your test. The &lt;code&gt;view&lt;/code&gt; method accepts the view name and an optional array of data. The method returns an instance of &lt;code&gt;Illuminate\Testing\TestView&lt;/code&gt;, which offers several methods to conveniently make assertions about the view's contents:</source>
          <target state="translated">Laravel允许您独立呈现视图，而无需向应用程序发出模拟的HTTP请求。为此，您可以在测试中使用 &lt;code&gt;view&lt;/code&gt; 方法。的 &lt;code&gt;view&lt;/code&gt; 方法接受视图名称和数据的一个可选的阵列。该方法返回 &lt;code&gt;Illuminate\Testing\TestView&lt;/code&gt; 的实例，该实例提供了几种方法来方便地对视图的内容进行断言：</target>
        </trans-unit>
        <trans-unit id="b216d9c161fb28cfb3f64a82e02eed7c7198fde1" translate="yes" xml:space="preserve">
          <source>Laravel allows you to send mailables in a locale other than the current language, and will even remember this locale if the mail is queued.</source>
          <target state="translated">Laravel允许你用当前语言以外的语言来发送邮件,如果邮件被排队,Laravel甚至会记住这个语言.</target>
        </trans-unit>
        <trans-unit id="4681842d02c90594d2dc45e644fb19ea07ea1d03" translate="yes" xml:space="preserve">
          <source>Laravel allows you to send notifications in a locale other than the current language, and will even remember this locale if the notification is queued.</source>
          <target state="translated">Laravel允许你用当前语言以外的语言发送通知,如果通知被排队等候,Laravel甚至会记住这个语言.</target>
        </trans-unit>
        <trans-unit id="34457ac8f7afe7b5abb571d99130354a05bec332" translate="yes" xml:space="preserve">
          <source>Laravel already makes it easy to perform authentication via traditional login forms, but what about APIs? APIs typically use tokens to authenticate users and do not maintain session state between requests. Laravel makes API authentication a breeze using Laravel Passport, which provides a full OAuth2 server implementation for your Laravel application in a matter of minutes. Passport is built on top of the &lt;a href=&quot;https://github.com/thephpleague/oauth2-server&quot;&gt;League OAuth2 server&lt;/a&gt; that is maintained by Andy Millington and Simon Hamp.</source>
          <target state="translated">Laravel已经使通过传统登录表单执行身份验证变得容易，但是API呢？API通常使用令牌来认证用户，并且不维护请求之间的会话状态。Laravel使用Laravel Passport使API身份验证变得轻而易举，它可以在几分钟内为您的Laravel应用程序提供完整的OAuth2服务器实现。Passport建立在由Andy Millington和Simon Hamp维护的&lt;a href=&quot;https://github.com/thephpleague/oauth2-server&quot;&gt;League OAuth2服务器&lt;/a&gt;之上。</target>
        </trans-unit>
        <trans-unit id="57591fd919b5e754243d68f16eb966b8dc82277a" translate="yes" xml:space="preserve">
          <source>Laravel also provides a global &lt;code&gt;old&lt;/code&gt; helper. If you are displaying old input within a &lt;a href=&quot;blade&quot;&gt;Blade template&lt;/a&gt;, it is more convenient to use the &lt;code&gt;old&lt;/code&gt; helper. If no old input exists for the given field, &lt;code&gt;null&lt;/code&gt; will be returned:</source>
          <target state="translated">Laravel还提供了一个全球性的 &lt;code&gt;old&lt;/code&gt; 帮手。如果要在&lt;a href=&quot;blade&quot;&gt;Blade模板&lt;/a&gt;中显示旧输入，则使用 &lt;code&gt;old&lt;/code&gt; 帮助程序会更加方便。如果给定字段不存在旧输入，则将返回 &lt;code&gt;null&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="d3ebaea6660561899f643c68c594b9010b4be520" translate="yes" xml:space="preserve">
          <source>Laravel also provides a mechanism for invalidating and &quot;logging out&quot; a user's sessions that are active on other devices without invalidating the session on their current device. Before getting started, you should make sure that the &lt;code&gt;Illuminate\Session\Middleware\AuthenticateSession&lt;/code&gt; middleware is present and un-commented in your &lt;code&gt;app/Http/Kernel.php&lt;/code&gt; class' &lt;code&gt;web&lt;/code&gt; middleware group:</source>
          <target state="translated">Laravel还提供了一种机制，用于使其他设备上处于活动状态的用户会话无效和&amp;ldquo;注销&amp;rdquo;，而不会使当前设备上的会话无效。在开始之前，您应该确保在您的 &lt;code&gt;app/Http/Kernel.php&lt;/code&gt; 类的 &lt;code&gt;web&lt;/code&gt; 中间件组中存在 &lt;code&gt;Illuminate\Session\Middleware\AuthenticateSession&lt;/code&gt; 中间件并且未对其进行注释：</target>
        </trans-unit>
        <trans-unit id="035ed208e689b9fd47c985e8287a59ec34362c04" translate="yes" xml:space="preserve">
          <source>Laravel also provides a mechanism for invalidating and &quot;logging out&quot; a user's sessions that are active on other devices without invalidating the session on their current device. This feature is typically utilized when a user is changing or updating their password and you would like to invalidate sessions on other devices while keeping the current device authenticated.</source>
          <target state="translated">Laravel还提供了一种机制,可以让用户在其他设备上的会话无效化和 &quot;注销&quot;,而不会让当前设备上的会话无效化.这个功能通常是在用户修改或更新密码的时候使用,而你又想在其他设备上的会话无效,同时保持当前设备的身份验证.</target>
        </trans-unit>
        <trans-unit id="420b4b7b18a9359f0c1415d983f8e1fcc2f6837c" translate="yes" xml:space="preserve">
          <source>Laravel also provides a variety of authentication related assertions for your &lt;a href=&quot;https://phpunit.de/&quot;&gt;PHPUnit&lt;/a&gt; feature tests:</source>
          <target state="translated">Laravel还为您的&lt;a href=&quot;https://phpunit.de/&quot;&gt;PHPUnit&lt;/a&gt;功能测试提供了各种与身份验证相关的断言：</target>
        </trans-unit>
        <trans-unit id="090a11fabb69540daf71a4fcd5e5536a5c40e4fb" translate="yes" xml:space="preserve">
          <source>Laravel also provides a variety of authentication related assertions for your &lt;a href=&quot;https://phpunit.de/&quot;&gt;PHPUnit&lt;/a&gt; tests:</source>
          <target state="translated">Laravel还为您的&lt;a href=&quot;https://phpunit.de/&quot;&gt;PHPUnit&lt;/a&gt;测试提供了各种与身份验证相关的断言：</target>
        </trans-unit>
        <trans-unit id="9518bca7a05a8ef7c85bb2199394345d4255be7f" translate="yes" xml:space="preserve">
          <source>Laravel also provides several helpers for testing JSON APIs and their responses. For example, the &lt;code&gt;json&lt;/code&gt;, &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;post&lt;/code&gt;, &lt;code&gt;put&lt;/code&gt;, &lt;code&gt;patch&lt;/code&gt;, and &lt;code&gt;delete&lt;/code&gt; methods may be used to issue requests with various HTTP verbs. You may also easily pass data and headers to these methods. To get started, let's write a test to make a &lt;code&gt;POST&lt;/code&gt; request to &lt;code&gt;/user&lt;/code&gt; and assert that the expected data was returned:</source>
          <target state="translated">Laravel还提供了一些帮助来测试JSON API及其响应。例如，可以使用 &lt;code&gt;json&lt;/code&gt; ， &lt;code&gt;get&lt;/code&gt; ， &lt;code&gt;post&lt;/code&gt; ， &lt;code&gt;put&lt;/code&gt; ， &lt;code&gt;patch&lt;/code&gt; 和 &lt;code&gt;delete&lt;/code&gt; 方法来发出带有各种HTTP动词的请求。您也可以轻松地将数据和标头传递给这些方法。首先，让我们编写一个测试以向 &lt;code&gt;/user&lt;/code&gt; 发出 &lt;code&gt;POST&lt;/code&gt; 请求，并断言返回了预期的数据：</target>
        </trans-unit>
        <trans-unit id="12c97696b354b856b7a0a82b775ee865f00cb81a" translate="yes" xml:space="preserve">
          <source>Laravel also provides several helpers for testing JSON APIs and their responses. For example, the &lt;code&gt;json&lt;/code&gt;, &lt;code&gt;getJson&lt;/code&gt;, &lt;code&gt;postJson&lt;/code&gt;, &lt;code&gt;putJson&lt;/code&gt;, &lt;code&gt;patchJson&lt;/code&gt;, &lt;code&gt;deleteJson&lt;/code&gt;, and &lt;code&gt;optionsJson&lt;/code&gt; methods may be used to issue JSON requests with various HTTP verbs. You may also easily pass data and headers to these methods. To get started, let's write a test to make a &lt;code&gt;POST&lt;/code&gt; request to &lt;code&gt;/user&lt;/code&gt; and assert that the expected data was returned:</source>
          <target state="translated">Laravel还提供了一些帮助来测试JSON API及其响应。例如，可以使用 &lt;code&gt;json&lt;/code&gt; ， &lt;code&gt;getJson&lt;/code&gt; ， &lt;code&gt;postJson&lt;/code&gt; ， &lt;code&gt;putJson&lt;/code&gt; ， &lt;code&gt;patchJson&lt;/code&gt; ， &lt;code&gt;deleteJson&lt;/code&gt; 和 &lt;code&gt;optionsJson&lt;/code&gt; 方法来发出带有各种HTTP动词的JSON请求。您也可以轻松地将数据和标头传递给这些方法。首先，让我们编写一个测试来向 &lt;code&gt;/user&lt;/code&gt; 发出 &lt;code&gt;POST&lt;/code&gt; 请求，并断言是否返回了预期的数据：</target>
        </trans-unit>
        <trans-unit id="311c09e12baed9df1efd9622e0f3908f17462e35" translate="yes" xml:space="preserve">
          <source>Laravel also provides support for creating foreign key constraints, which are used to force referential integrity at the database level. For example, let's define a &lt;code&gt;user_id&lt;/code&gt; column on the &lt;code&gt;posts&lt;/code&gt; table that references the &lt;code&gt;id&lt;/code&gt; column on a &lt;code&gt;users&lt;/code&gt; table:</source>
          <target state="translated">Laravel还提供了对创建外键约束的支持，这些外键约束用于在数据库级别强制引用完整性。例如，让我们在 &lt;code&gt;posts&lt;/code&gt; 表上定义一个 &lt;code&gt;user_id&lt;/code&gt; 列，该列引用一个 &lt;code&gt;users&lt;/code&gt; 表上的 &lt;code&gt;id&lt;/code&gt; 列：</target>
        </trans-unit>
        <trans-unit id="bc6148d4e6c8f1e9dbfbbb7cb09b7fdff4c7b5d0" translate="yes" xml:space="preserve">
          <source>Laravel also supports querying JSON column types on databases that provide support for JSON column types. Currently, this includes MySQL 5.7, PostgreSQL, SQL Server 2016, and SQLite 3.9.0 (with the &lt;a href=&quot;https://www.sqlite.org/json1.html&quot;&gt;JSON1 extension&lt;/a&gt;). To query a JSON column, use the &lt;code&gt;-&amp;gt;&lt;/code&gt; operator:</source>
          <target state="translated">Laravel还支持在支持JSON列类型的数据库上查询JSON列类型。当前，这包括MySQL 5.7，PostgreSQL，SQL Server 2016和SQLite 3.9.0（带有&lt;a href=&quot;https://www.sqlite.org/json1.html&quot;&gt;JSON1扩展名&lt;/a&gt;）。要查询JSON列，请使用 &lt;code&gt;-&amp;gt;&lt;/code&gt; 运算符：</target>
        </trans-unit>
        <trans-unit id="6e5e727d6f90abca80217055da4dbba6b8610972" translate="yes" xml:space="preserve">
          <source>Laravel also supports sending shortcode notifications, which are pre-defined message templates in your Nexmo account. You may specify the type of notification (&lt;code&gt;alert&lt;/code&gt;, &lt;code&gt;2fa&lt;/code&gt;, or &lt;code&gt;marketing&lt;/code&gt;), as well as the custom values that will populate the template:</source>
          <target state="translated">Laravel还支持发送短代码通知，这是您Nexmo帐户中的预定义消息模板。您可以指定通知的类型（ &lt;code&gt;alert&lt;/code&gt; ， &lt;code&gt;2fa&lt;/code&gt; 或 &lt;code&gt;marketing&lt;/code&gt; ），以及将填充模板的自定义值：</target>
        </trans-unit>
        <trans-unit id="15a217ae853dbe737b1a777dc33f4e8890cd2593" translate="yes" xml:space="preserve">
          <source>Laravel and its other first-party packages follow &lt;a href=&quot;https://semver.org&quot;&gt;Semantic Versioning&lt;/a&gt;. Major framework releases are released every six months (~March and ~September), while minor and patch releases may be released as often as every week. Minor and patch releases should &lt;strong&gt;never&lt;/strong&gt; contain breaking changes.</source>
          <target state="translated">Laravel及其其他第一方软件包遵循&lt;a href=&quot;https://semver.org&quot;&gt;Semantic Versioning&lt;/a&gt;。主要框架版本每六个月（〜3月和〜9月）发布，次要版本和修补程序版本可能每周发布一次。次要和修补程序版本应该&lt;strong&gt;永远&lt;/strong&gt;包含重大更改。</target>
        </trans-unit>
        <trans-unit id="8537f1d72bf731d0ba371629a40461a2f5b7f2b4" translate="yes" xml:space="preserve">
          <source>Laravel automatically generates a CSRF &quot;token&quot; for each active user session managed by the application. This token is used to verify that the authenticated user is the one actually making the requests to the application.</source>
          <target state="translated">Laravel会自动为每个由应用程序管理的活动用户会话生成一个CSRF &quot;令牌&quot;.这个令牌用来验证经过认证的用户是否是真正向应用程序发出请求的人.</target>
        </trans-unit>
        <trans-unit id="88f3f6b0f236c92a59e7860e78cb2b1ff104fb5f" translate="yes" xml:space="preserve">
          <source>Laravel automatically regenerates the session ID during authentication if you are using &lt;a href=&quot;https://jetstream.laravel.com&quot;&gt;Laravel Jetstream&lt;/a&gt;; however, if you need to manually regenerate the session ID, you may use the &lt;code&gt;regenerate&lt;/code&gt; method.</source>
          <target state="translated">如果您使用&lt;a href=&quot;https://jetstream.laravel.com&quot;&gt;Laravel Jetstream&lt;/a&gt;，Laravel会在身份验证期间自动重新生成会话ID 。但是，如果需要手动重新生成会话ID，则可以使用 &lt;code&gt;regenerate&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="ee873bef5585ceef4a06f5b4dd7da35ad048a05c" translate="yes" xml:space="preserve">
          <source>Laravel automatically regenerates the session ID during authentication if you are using the built-in &lt;code&gt;LoginController&lt;/code&gt;; however, if you need to manually regenerate the session ID, you may use the &lt;code&gt;regenerate&lt;/code&gt; method.</source>
          <target state="translated">如果您使用内置的 &lt;code&gt;LoginController&lt;/code&gt; ，Laravel会在身份验证期间自动重新生成会话ID 。但是，如果需要手动重新生成会话ID，则可以使用 &lt;code&gt;regenerate&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="ad52d22456ca17e2e3ad52c39cc195d27feba834" translate="yes" xml:space="preserve">
          <source>Laravel automatically resolves Eloquent models defined in routes or controller actions whose type-hinted variable names match a route segment name. For example:</source>
          <target state="translated">Laravel会自动解析在路由或控制器动作中定义的Eloquent模型,其类型提示的变量名与路由段名相匹配.例如:</target>
        </trans-unit>
        <trans-unit id="d2799a48df47ca3ad650201bf387f5eaf9833694" translate="yes" xml:space="preserve">
          <source>Laravel can automatically respond to CORS OPTIONS requests with values that you configure. All CORS settings may be configured in your &lt;code&gt;cors&lt;/code&gt; configuration file and OPTIONS requests will automatically be handled by the &lt;code&gt;HandleCors&lt;/code&gt; middleware that is included by default in your global middleware stack.</source>
          <target state="translated">Laravel可以使用您配置的值自动响应CORS OPTIONS请求。可能在 &lt;code&gt;cors&lt;/code&gt; 配置文件中配置了所有CORS设置，并且默认情况下，全局中间件堆栈中包含的 &lt;code&gt;HandleCors&lt;/code&gt; 中间件将自动处理OPTIONS请求。</target>
        </trans-unit>
        <trans-unit id="96f94abe13225590555229493828e7e13c34b2c4" translate="yes" xml:space="preserve">
          <source>Laravel compiles and stores a list of all of the services supplied by deferred service providers, along with the name of its service provider class. Then, only when you attempt to resolve one of these services does Laravel load the service provider.</source>
          <target state="translated">Laravel编译并存储了所有由延迟服务提供者提供的服务列表,以及它的服务提供者类的名称.然后,只有当你试图解析其中一个服务时,Laravel才会加载该服务提供者.</target>
        </trans-unit>
        <trans-unit id="f3e9a9f1ad23d6355e885b80980744718eae2abb" translate="yes" xml:space="preserve">
          <source>Laravel does not require you to use a specific JavaScript framework or library to build your applications. In fact, you don't have to use JavaScript at all. However, Laravel does include some basic scaffolding to make it easier to get started writing modern JavaScript using the &lt;a href=&quot;https://vuejs.org&quot;&gt;Vue&lt;/a&gt; library. Vue provides an expressive API for building robust JavaScript applications using components. As with CSS, we may use Laravel Mix to easily compile JavaScript components into a single, browser-ready JavaScript file.</source>
          <target state="translated">Laravel不需要您使用特定的JavaScript框架或库来构建应用程序。实际上，您根本不需要使用JavaScript。但是，Laravel确实包含一些基本的脚手架，使使用&lt;a href=&quot;https://vuejs.org&quot;&gt;Vue&lt;/a&gt;库开始编写现代JavaScript的过程变得更加容易。Vue提供了一个表达性API，用于使用组件构建健壮的JavaScript应用程序。与CSS一样，我们可以使用Laravel Mix将JavaScript组件轻松编译为单个可用于浏览器的JavaScript文件。</target>
        </trans-unit>
        <trans-unit id="7831887dc6f96758be5c834c7aa76196e21a0571" translate="yes" xml:space="preserve">
          <source>Laravel does not ship with a directory to contain your extensions. You are free to place them anywhere you like. In this example, we have created an &lt;code&gt;Extensions&lt;/code&gt; directory to house the &lt;code&gt;MongoSessionHandler&lt;/code&gt;.</source>
          <target state="translated">Laravel没有附带包含扩展名的目录。您可以随意将它们放置在您喜欢的任何位置。在此示例中，我们创建了一个 &lt;code&gt;Extensions&lt;/code&gt; 目录来容纳 &lt;code&gt;MongoSessionHandler&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d781fc115c46b5117e4a3034ab71c9e67e60a53c" translate="yes" xml:space="preserve">
          <source>Laravel extends the &lt;a href=&quot;https://github.com/briannesbitt/Carbon&quot;&gt;Carbon&lt;/a&gt; date library in order to provide convenient customization of Carbon's JSON serialization format. To customize how all Carbon dates throughout your application are serialized, use the &lt;code&gt;Carbon::serializeUsing&lt;/code&gt; method. The &lt;code&gt;serializeUsing&lt;/code&gt; method accepts a Closure which returns a string representation of the date for JSON serialization:</source>
          <target state="translated">Laravel扩展了&lt;a href=&quot;https://github.com/briannesbitt/Carbon&quot;&gt;Carbon&lt;/a&gt;日期库，以便为Carbon的JSON序列化格式提供方便的自定义。要自定义整个应用程序中所有Carbon日期的序列化方式，请使用 &lt;code&gt;Carbon::serializeUsing&lt;/code&gt; 方法。该 &lt;code&gt;serializeUsing&lt;/code&gt; 方法接受封闭它返回日期JSON序列的字符串表示：</target>
        </trans-unit>
        <trans-unit id="2d7ea2d500078bc7da625bc5a0df7a6c475434d0" translate="yes" xml:space="preserve">
          <source>Laravel finds event listeners by scanning the listener classes using reflection. When Laravel finds any listener class method that begins with &lt;code&gt;handle&lt;/code&gt;, Laravel will register those methods as event listeners for the event that is type-hinted in the method's signature:</source>
          <target state="translated">Laravel通过使用反射扫描侦听器类来找到事件侦听器。当Laravel找到以 &lt;code&gt;handle&lt;/code&gt; 开头的任何侦听器类方法时，Laravel会将这些方法注册为该方法签名中带有类型提示的事件的事件侦听器：</target>
        </trans-unit>
        <trans-unit id="83d4dd7ef333f99c97d82464dbfbaccdd5a8b243" translate="yes" xml:space="preserve">
          <source>Laravel fires two events during the process of sending mail messages. The &lt;code&gt;MessageSending&lt;/code&gt; event is fired prior to a message being sent, while the &lt;code&gt;MessageSent&lt;/code&gt; event is fired after a message has been sent. Remember, these events are fired when the mail is being &lt;em&gt;sent&lt;/em&gt;, not when it is queued. You may register an event listener for this event in your &lt;code&gt;EventServiceProvider&lt;/code&gt;:</source>
          <target state="translated">Laravel在发送邮件消息的过程中触发两个事件。所述 &lt;code&gt;MessageSending&lt;/code&gt; 而之前的消息被发送事件被触发， &lt;code&gt;MessageSent&lt;/code&gt; 消息后已发送事件。请记住，当正在邮件，这些事件被触发&lt;em&gt;发送&lt;/em&gt;时排队，没有。您可以在 &lt;code&gt;EventServiceProvider&lt;/code&gt; 中注册此事件的事件侦听器：</target>
        </trans-unit>
        <trans-unit id="d8979d6e2a86cfe856be433091cf030a9bd6fe30" translate="yes" xml:space="preserve">
          <source>Laravel follows the &lt;a href=&quot;https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-2-coding-style-guide.md&quot;&gt;PSR-2&lt;/a&gt; coding standard and the &lt;a href=&quot;https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-4-autoloader.md&quot;&gt;PSR-4&lt;/a&gt; autoloading standard.</source>
          <target state="translated">Laravel遵循&lt;a href=&quot;https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-2-coding-style-guide.md&quot;&gt;PSR-2&lt;/a&gt;编码标准和&lt;a href=&quot;https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-4-autoloader.md&quot;&gt;PSR-4&lt;/a&gt;自动加载标准。</target>
        </trans-unit>
        <trans-unit id="2a95a243e593544d7126faf4cd88dd2764947649" translate="yes" xml:space="preserve">
          <source>Laravel has a variety of built-in, helpful cast types; however, you may occasionally need to define your own cast types. You may accomplish this by defining a class that implements the &lt;code&gt;CastsAttributes&lt;/code&gt; interface.</source>
          <target state="translated">Laravel有多种内置的，有用的强制类型。但是，您有时可能需要定义自己的强制类型。您可以通过定义实现 &lt;code&gt;CastsAttributes&lt;/code&gt; 接口的类来实现此目的。</target>
        </trans-unit>
        <trans-unit id="05c030ec16a38d916386981b350838e6c439e28c" translate="yes" xml:space="preserve">
          <source>Laravel includes &lt;code&gt;Auth\ForgotPasswordController&lt;/code&gt; and &lt;code&gt;Auth\ResetPasswordController&lt;/code&gt; classes that contains the logic necessary to e-mail password reset links and reset user passwords. All of the routes needed to perform password resets may be generated using the &lt;code&gt;make:auth&lt;/code&gt; Artisan command:</source>
          <target state="translated">Laravel包括 &lt;code&gt;Auth\ForgotPasswordController&lt;/code&gt; 和 &lt;code&gt;Auth\ResetPasswordController&lt;/code&gt; 类，它们包含通过电子邮件发送密码重置链接和重置用户密码所必需的逻辑。可以使用 &lt;code&gt;make:auth&lt;/code&gt; Artisan命令生成执行密码重置所需的所有路由：</target>
        </trans-unit>
        <trans-unit id="80802a01befb1e960e81a9905bdc163393f3d5ed" translate="yes" xml:space="preserve">
          <source>Laravel includes a &lt;a href=&quot;middleware&quot;&gt;middleware&lt;/a&gt; to rate limit access to routes within your application. To get started, assign the &lt;code&gt;throttle&lt;/code&gt; middleware to a route or a group of routes. The &lt;code&gt;throttle&lt;/code&gt; middleware accepts two parameters that determine the maximum number of requests that can be made in a given number of minutes. For example, let's specify that an authenticated user may access the following group of routes 60 times per minute:</source>
          <target state="translated">Laravel包含一个&lt;a href=&quot;middleware&quot;&gt;中间件&lt;/a&gt;，以对应用程序中的路由的访问进行速率限制。首先，将 &lt;code&gt;throttle&lt;/code&gt; 中间件分配给一个路径或一组路径。所述 &lt;code&gt;throttle&lt;/code&gt; 中间件接受确定可以在几分钟内的给定数目进行请求的最大数目的两个参数。例如，让我们指定经过身份验证的用户每分钟可以访问以下路由组60次：</target>
        </trans-unit>
        <trans-unit id="d9549ef6d20772478450a24c77d78868f6b90bc9" translate="yes" xml:space="preserve">
          <source>Laravel includes a &lt;code&gt;WithoutOverlapping&lt;/code&gt; middleware that allows you to prevent job overlaps based on an arbitrary key. This can be helpful when a queued job is modifying a resource that should only be modified by one job at a time.</source>
          <target state="translated">Laravel包含一个 &lt;code&gt;WithoutOverlapping&lt;/code&gt; 中间件，该中间件使您可以防止基于任意键的作业重叠。当排队的作业正在修改一次只能由一个作业修改的资源时，这将很有帮助。</target>
        </trans-unit>
        <trans-unit id="83f184753d97b65bfbd48f5a7311fe23a8673a49" translate="yes" xml:space="preserve">
          <source>Laravel includes a &lt;code&gt;cache.headers&lt;/code&gt; middleware, which may be used to quickly set the &lt;code&gt;Cache-Control&lt;/code&gt; header for a group of routes. If &lt;code&gt;etag&lt;/code&gt; is specified in the list of directives, an MD5 hash of the response content will automatically be set as the ETag identifier:</source>
          <target state="translated">Laravel包含一个 &lt;code&gt;cache.headers&lt;/code&gt; 中间件，该中间件可用于快速设置一组路由的 &lt;code&gt;Cache-Control&lt;/code&gt; 标头。如果在指令列表中指定了 &lt;code&gt;etag&lt;/code&gt; ，则响应内容的MD5哈希值将自动设置为ETag标识符：</target>
        </trans-unit>
        <trans-unit id="faf8f96d8df48bbd90b99eace5d49d83cbfcd985" translate="yes" xml:space="preserve">
          <source>Laravel includes a &lt;code&gt;public/.htaccess&lt;/code&gt; file that is used to provide URLs without the &lt;code&gt;index.php&lt;/code&gt; front controller in the path. Before serving Laravel with Apache, be sure to enable the &lt;code&gt;mod_rewrite&lt;/code&gt; module so the &lt;code&gt;.htaccess&lt;/code&gt; file will be honored by the server.</source>
          <target state="translated">Laravel包含一个 &lt;code&gt;public/.htaccess&lt;/code&gt; 文件，该文件用于提供URL，而路径中没有 &lt;code&gt;index.php&lt;/code&gt; 前端控制器。在为Apache提供Laravel之前，请确保启用 &lt;code&gt;mod_rewrite&lt;/code&gt; 模块，以便服务器可以使用 &lt;code&gt;.htaccess&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="866600cbbab686b290a4d35b7589d09292189281" translate="yes" xml:space="preserve">
          <source>Laravel includes a middleware that can authorize actions before the incoming request even reaches your routes or controllers. By default, the &lt;code&gt;Illuminate\Auth\Middleware\Authorize&lt;/code&gt; middleware is assigned the &lt;code&gt;can&lt;/code&gt; key in your &lt;code&gt;App\Http\Kernel&lt;/code&gt; class. Let's explore an example of using the &lt;code&gt;can&lt;/code&gt; middleware to authorize that a user can update a blog post:</source>
          <target state="translated">Laravel包含一个中间件，该中间件可以在传入请求甚至到达您的路由或控制器之前授权操作。默认情况下，在您的 &lt;code&gt;App\Http\Kernel&lt;/code&gt; 类中为 &lt;code&gt;Illuminate\Auth\Middleware\Authorize&lt;/code&gt; 中间件分配了 &lt;code&gt;can&lt;/code&gt; 键。让我们探讨一个使用 &lt;code&gt;can&lt;/code&gt; 中间件授权用户可以更新博客文章的示例：</target>
        </trans-unit>
        <trans-unit id="b1d157cc7590aa93405075d52848233afe3ca9ad" translate="yes" xml:space="preserve">
          <source>Laravel includes a queue worker that will process new jobs as they are pushed onto the queue. You may run the worker using the &lt;code&gt;queue:work&lt;/code&gt; Artisan command. Note that once the &lt;code&gt;queue:work&lt;/code&gt; command has started, it will continue to run until it is manually stopped or you close your terminal:</source>
          <target state="translated">Laravel包括一个队列工作器，它将在将新任务推送到队列时对其进行处理。您可以使用 &lt;code&gt;queue:work&lt;/code&gt; Artisan命令运行工作程序。请注意，一旦 &lt;code&gt;queue:work&lt;/code&gt; 命令启动，它将继续运行，直到被手动停止或关闭终端为止：</target>
        </trans-unit>
        <trans-unit id="46374e0ff8c121d5b4c3778a695a71d64bbf04e8" translate="yes" xml:space="preserve">
          <source>Laravel includes a simple method of seeding your database with test data using seed classes. All seed classes are stored in the &lt;code&gt;database/seeders&lt;/code&gt; directory. Seed classes may have any name you wish, but probably should follow some sensible convention, such as &lt;code&gt;UserSeeder&lt;/code&gt;, etc. By default, a &lt;code&gt;DatabaseSeeder&lt;/code&gt; class is defined for you. From this class, you may use the &lt;code&gt;call&lt;/code&gt; method to run other seed classes, allowing you to control the seeding order.</source>
          <target state="translated">Laravel提供了一种使用种子类为数据库提供测试数据的简单方法。所有种子类都存储在 &lt;code&gt;database/seeders&lt;/code&gt; 目录中。种子类可以具有您想要的任何名称，但可能应该遵循一些明智的约定，例如 &lt;code&gt;UserSeeder&lt;/code&gt; 等。默认情况下，为您定义了 &lt;code&gt;DatabaseSeeder&lt;/code&gt; 类。在此类中，您可以使用 &lt;code&gt;call&lt;/code&gt; 方法来运行其他种子类，从而允许您控制种子顺序。</target>
        </trans-unit>
        <trans-unit id="d35fb8a6f7b51b85989430d716d987a63a1527aa" translate="yes" xml:space="preserve">
          <source>Laravel includes a simple method of seeding your database with test data using seed classes. All seed classes are stored in the &lt;code&gt;database/seeds&lt;/code&gt; directory. Seed classes may have any name you wish, but probably should follow some sensible convention, such as &lt;code&gt;UsersTableSeeder&lt;/code&gt;, etc. By default, a &lt;code&gt;DatabaseSeeder&lt;/code&gt; class is defined for you. From this class, you may use the &lt;code&gt;call&lt;/code&gt; method to run other seed classes, allowing you to control the seeding order.</source>
          <target state="translated">Laravel提供了一种使用种子类将测试数据作为数据库种子的简单方法。所有种子类都存储在 &lt;code&gt;database/seeds&lt;/code&gt; 目录中。种子类可能具有您想要的任何名称，但可能应该遵循一些明智的约定，例如 &lt;code&gt;UsersTableSeeder&lt;/code&gt; 等。默认情况下，为您定义了 &lt;code&gt;DatabaseSeeder&lt;/code&gt; 类。在此类中，您可以使用 &lt;code&gt;call&lt;/code&gt; 方法来运行其他种子类，从而可以控制种子顺序。</target>
        </trans-unit>
        <trans-unit id="caac93a00e688aa26d2df844b90526017d226508" translate="yes" xml:space="preserve">
          <source>Laravel includes a variety of global &quot;helper&quot; PHP functions. Many of these functions are used by the framework itself; however, you are free to use them in your own applications if you find them convenient.</source>
          <target state="translated">Laravel包含了各种全局性的 &quot;帮助者 &quot;PHP函数.这些函数中的很多都是框架本身使用的,但是,如果你觉得方便的话,你也可以在你自己的应用程序中自由使用它们.</target>
        </trans-unit>
        <trans-unit id="82881d0fe76861282efd89d2995a79d64da10780" translate="yes" xml:space="preserve">
          <source>Laravel includes built-in authentication and session services which are typically accessed via the &lt;code&gt;Auth&lt;/code&gt; and &lt;code&gt;Session&lt;/code&gt; facades. These features provide cookie based authentication for requests that are initiated from web browsers. They provide methods that allow you to verify a user's credentials and authenticate the user. In addition, these services will automatically store the proper data in the user's session and issue the proper session cookie. A discussion of how to use these services is contained within this documentation.</source>
          <target state="translated">Laravel包含内置的身份验证和会话服务，通常可以通过 &lt;code&gt;Auth&lt;/code&gt; 和 &lt;code&gt;Session&lt;/code&gt; 外观访问它们。这些功能为从Web浏览器发起的请求提供基于cookie的身份验证。它们提供了允许您验证用户凭据并验证用户身份的方法。另外，这些服务将自动在用户的会话中存储正确的数据并发出正确的会话cookie。本文档中包含有关如何使用这些服务的讨论。</target>
        </trans-unit>
        <trans-unit id="107f4170f17c1c08eb59a81f344801b50a1ea7e7" translate="yes" xml:space="preserve">
          <source>Laravel includes pagination views built using &lt;a href=&quot;https://getbootstrap.com/&quot;&gt;Bootstrap CSS&lt;/a&gt;. To use these views instead of the default Tailwind views, you may call the paginator's &lt;code&gt;useBootstrap&lt;/code&gt; method within your &lt;code&gt;AppServiceProvider&lt;/code&gt;:</source>
          <target state="translated">Laravel包含使用&lt;a href=&quot;https://getbootstrap.com/&quot;&gt;Bootstrap CSS&lt;/a&gt;构建的分页视图。要使用这些视图而不是默认的Tailwind视图，可以在 &lt;code&gt;AppServiceProvider&lt;/code&gt; 中调用分页器的 &lt;code&gt;useBootstrap&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="64c7b1c4353d2c8d07fe970cb60c3dae14bfd796" translate="yes" xml:space="preserve">
          <source>Laravel includes powerful and customizable rate limiting services that you may utilize to restrict the amount of traffic for a given route or group of routes. To get started, you should define rate limiter configurations that meet your application's needs. Typically, this may be done in your application's &lt;code&gt;RouteServiceProvider&lt;/code&gt;.</source>
          <target state="translated">Laravel包含功能强大且可自定义的速率限制服务，您可以利用这些服务来限制给定路由或一组路由的流量。首先，您应该定义满足应用程序需求的速率限制器配置。通常，这可以在应用程序的 &lt;code&gt;RouteServiceProvider&lt;/code&gt; 中完成。</target>
        </trans-unit>
        <trans-unit id="0128eb57cf73312a7b756da6f1d62baf9e99174d" translate="yes" xml:space="preserve">
          <source>Laravel includes the &lt;code&gt;Auth\VerificationController&lt;/code&gt; class that contains the necessary logic to send verification links and verify emails. To register the necessary routes for this controller, pass the &lt;code&gt;verify&lt;/code&gt; option to the &lt;code&gt;Auth::routes&lt;/code&gt; method:</source>
          <target state="translated">Laravel包含 &lt;code&gt;Auth\VerificationController&lt;/code&gt; 类，该类包含发送验证链接和验证电子邮件的必要逻辑。要为此控制器注册必要的路由，请将 &lt;code&gt;verify&lt;/code&gt; 选项传递给 &lt;code&gt;Auth::routes&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="745107d905a4a05be840c88bdb0871dcff8af1ae" translate="yes" xml:space="preserve">
          <source>Laravel is a trademark of Taylor Otwell.</source>
          <target state="translated">Laravel是Taylor Otwell的商标.</target>
        </trans-unit>
        <trans-unit id="159fe08378b4f4e2f0475d80c917a7b34e6b3b22" translate="yes" xml:space="preserve">
          <source>Laravel is built with testing in mind. In fact, support for testing with PHPUnit is included out of the box and a &lt;code&gt;phpunit.xml&lt;/code&gt; file is already set up for your application. The framework also ships with convenient helper methods that allow you to expressively test your applications.</source>
          <target state="translated">Laravel在构建时就考虑了测试。实际上，开箱即用包括对PHPUnit测试的支持，并且已经为您的应用程序设置了 &lt;code&gt;phpunit.xml&lt;/code&gt; 文件。该框架还附带了方便的帮助程序方法，使您可以表达性地测试应用程序。</target>
        </trans-unit>
        <trans-unit id="aea55fbb9dcce2b9efd0103e51f29c9070352274" translate="yes" xml:space="preserve">
          <source>Laravel makes implementing authentication very simple. In fact, almost everything is configured for you out of the box. The authentication configuration file is located at &lt;code&gt;config/auth.php&lt;/code&gt;, which contains several well documented options for tweaking the behavior of the authentication services.</source>
          <target state="translated">Laravel使实现身份验证非常简单。实际上，几乎所有内容都为您提供了开箱即用的配置。身份验证配置文件位于 &lt;code&gt;config/auth.php&lt;/code&gt; ，其中包含一些记录良好的选项，用于调整身份验证服务的行为。</target>
        </trans-unit>
        <trans-unit id="5b812924523bca089a1698d22dda2fbfa37bde8d" translate="yes" xml:space="preserve">
          <source>Laravel makes interacting with databases extremely simple across a variety of database backends using either raw SQL, the &lt;a href=&quot;queries&quot;&gt;fluent query builder&lt;/a&gt;, and the &lt;a href=&quot;eloquent&quot;&gt;Eloquent ORM&lt;/a&gt;. Currently, Laravel supports four databases:</source>
          <target state="translated">Laravel使得与数据库在各种使用任何原始的SQL，数据库后端的极其简单的交互&lt;a href=&quot;queries&quot;&gt;流畅查询构建器&lt;/a&gt;和&lt;a href=&quot;eloquent&quot;&gt;雄辩ORM&lt;/a&gt;。目前，Laravel支持四个数据库：</target>
        </trans-unit>
        <trans-unit id="d417c7557e9543920faf8a80bfb5d1dd3a29cea6" translate="yes" xml:space="preserve">
          <source>Laravel makes it easy to display custom error pages for various HTTP status codes. For example, if you wish to customize the error page for 404 HTTP status codes, create a &lt;code&gt;resources/views/errors/404.blade.php&lt;/code&gt;. This file will be served on all 404 errors generated by your application. The views within this directory should be named to match the HTTP status code they correspond to. The &lt;code&gt;HttpException&lt;/code&gt; instance raised by the &lt;code&gt;abort&lt;/code&gt; function will be passed to the view as an &lt;code&gt;$exception&lt;/code&gt; variable:</source>
          <target state="translated">Laravel使显示各种HTTP状态代码的自定义错误页面变得容易。例如，如果您希望为404 HTTP状态代码自定义错误页面，请创建一个 &lt;code&gt;resources/views/errors/404.blade.php&lt;/code&gt; 。将为您的应用程序生成的所有404错误提供此文件。该目录中的视图应命名为与它们对应的HTTP状态代码匹配。由 &lt;code&gt;abort&lt;/code&gt; 函数引发的 &lt;code&gt;HttpException&lt;/code&gt; 实例将作为 &lt;code&gt;$exception&lt;/code&gt; 变量传递到视图：</target>
        </trans-unit>
        <trans-unit id="de476072ff6a38125ea369318cae8be99e455f3b" translate="yes" xml:space="preserve">
          <source>Laravel makes it easy to protect your application from &lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-site_request_forgery&quot;&gt;cross-site request forgery&lt;/a&gt; (CSRF) attacks. Cross-site request forgeries are a type of malicious exploit whereby unauthorized commands are performed on behalf of an authenticated user.</source>
          <target state="translated">Laravel使您可以轻松保护应用程序免受&lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-site_request_forgery&quot;&gt;跨站点请求伪造&lt;/a&gt;（CSRF）攻击。跨站点请求伪造是一种恶意利用，利用这种手段，代表经过身份验证的用户执行未经授权的命令。</target>
        </trans-unit>
        <trans-unit id="130ce7ff7020afba7f0913844babb3ee6ec322d2" translate="yes" xml:space="preserve">
          <source>Laravel needs almost no other configuration out of the box. You are free to get started developing! However, you may wish to review the &lt;code&gt;config/app.php&lt;/code&gt; file and its documentation. It contains several options such as &lt;code&gt;timezone&lt;/code&gt; and &lt;code&gt;locale&lt;/code&gt; that you may wish to change according to your application.</source>
          <target state="translated">Laravel几乎不需要其他任何配置。您可以自由地开始开发！但是，您可能希望查看 &lt;code&gt;config/app.php&lt;/code&gt; 文件及其文档。它包含多个选项，例如 &lt;code&gt;timezone&lt;/code&gt; 和 &lt;code&gt;locale&lt;/code&gt; ，您可能希望根据应用程序进行更改。</target>
        </trans-unit>
        <trans-unit id="7bb8c2527b9f6e79aac1af2ce34cc440fa5579f6" translate="yes" xml:space="preserve">
          <source>Laravel now allows you to send notifications in a locale other than the current language, and will even remember this locale if the notification is queued.</source>
          <target state="translated">Laravel现在允许你用当前语言以外的语言发送通知,如果通知被排队,甚至会记住这个语言.</target>
        </trans-unit>
        <trans-unit id="0dd05a2588652165e30f64d82062155164f3c8bd" translate="yes" xml:space="preserve">
          <source>Laravel now offers Horizon, a beautiful dashboard and configuration system for your Redis powered queues. Check out the full &lt;a href=&quot;horizon&quot;&gt;Horizon documentation&lt;/a&gt; for more information.</source>
          <target state="translated">现在，Laravel为您的Redis驱动的队列提供了Horizo​​n（精美的仪表板和配置系统）。请查看完整的&lt;a href=&quot;horizon&quot;&gt;Horizo​​n文档&lt;/a&gt;以获取更多信息。</target>
        </trans-unit>
        <trans-unit id="4bf1c4203af57f1e157e5a9647a95c28f5e4347f" translate="yes" xml:space="preserve">
          <source>Laravel offers several packages related to authentication. Before continuing, we'll review the general authentication ecosystem in Laravel and discuss each package's intended purpose.</source>
          <target state="translated">Laravel提供了几个与认证相关的包.在继续之前,我们将回顾一下Laravel中的一般认证生态系统,并讨论每个包的预期目的.</target>
        </trans-unit>
        <trans-unit id="50baf218e59e369ed84a8be6653fe3d647995653" translate="yes" xml:space="preserve">
          <source>Laravel provides a clean, simple API over the popular &lt;a href=&quot;https://swiftmailer.symfony.com/&quot;&gt;SwiftMailer&lt;/a&gt; library with drivers for SMTP, Mailgun, Postmark, Amazon SES, and &lt;code&gt;sendmail&lt;/code&gt;, allowing you to quickly get started sending mail through a local or cloud based service of your choice.</source>
          <target state="translated">Laravel在流行的&lt;a href=&quot;https://swiftmailer.symfony.com/&quot;&gt;SwiftMailer&lt;/a&gt;库上提供了一个干净，简单的API，并带有SMTP，Mailgun，Postmark，Amazon SES和 &lt;code&gt;sendmail&lt;/code&gt; 的驱动程序，使您可以快速开始通过自己选择的本地或基于云的服务发送邮件。</target>
        </trans-unit>
        <trans-unit id="b3aa3b4e113225fd27a3d53d90a6666ab9e105dc" translate="yes" xml:space="preserve">
          <source>Laravel provides a clean, simple API over the popular &lt;a href=&quot;https://swiftmailer.symfony.com/&quot;&gt;SwiftMailer&lt;/a&gt; library with drivers for SMTP, Mailgun, SparkPost, Amazon SES, PHP's &lt;code&gt;mail&lt;/code&gt; function, and &lt;code&gt;sendmail&lt;/code&gt;, allowing you to quickly get started sending mail through a local or cloud based service of your choice.</source>
          <target state="translated">Laravel通过流行的&lt;a href=&quot;https://swiftmailer.symfony.com/&quot;&gt;SwiftMailer&lt;/a&gt;库提供了一个干净，简单的API，其中包含SMTP，Mailgun，SparkPost，Amazon SES，PHP的 &lt;code&gt;mail&lt;/code&gt; 功能和 &lt;code&gt;sendmail&lt;/code&gt; 的驱动程序，使您可以快速开始通过您选择的本地或基于云的服务发送邮件。</target>
        </trans-unit>
        <trans-unit id="b39f18b52756f4c0208b4a2ae469e24f331d5299" translate="yes" xml:space="preserve">
          <source>Laravel provides a convenient interface to the Redis &lt;code&gt;publish&lt;/code&gt; and &lt;code&gt;subscribe&lt;/code&gt; commands. These Redis commands allow you to listen for messages on a given &quot;channel&quot;. You may publish messages to the channel from another application, or even using another programming language, allowing easy communication between applications and processes.</source>
          <target state="translated">Laravel为Redis的 &lt;code&gt;publish&lt;/code&gt; 和 &lt;code&gt;subscribe&lt;/code&gt; 命令提供了一个方便的界面。这些Redis命令使您可以在给定的&amp;ldquo;通道&amp;rdquo;上侦听消息。您可以从另一个应用程序甚至使用另一种编程语言将消息发布到通道，以使应用程序和进程之间的通信变得容易。</target>
        </trans-unit>
        <trans-unit id="f93392b2439ecea411f5390bb38e41b2291a9ae6" translate="yes" xml:space="preserve">
          <source>Laravel provides a convenient way to &lt;a href=&quot;scheduling&quot;&gt;schedule Cron jobs&lt;/a&gt; by scheduling a single &lt;code&gt;schedule:run&lt;/code&gt; Artisan command to be run every minute. The &lt;code&gt;schedule:run&lt;/code&gt; command will examine the job schedule defined in your &lt;code&gt;App\Console\Kernel&lt;/code&gt; class to determine which jobs should be run.</source>
          <target state="translated">Laravel提供了一种方便的方式来&lt;a href=&quot;scheduling&quot;&gt;调度Cron作业&lt;/a&gt;，方法是调度每分钟运行一次的 &lt;code&gt;schedule:run&lt;/code&gt; Artisan命令。该 &lt;code&gt;schedule:run&lt;/code&gt; 命令将检查你所定义的作业调度 &lt;code&gt;App\Console\Kernel&lt;/code&gt; 类，以确定哪些作业应运行。</target>
        </trans-unit>
        <trans-unit id="6c9a36161b4f92e85347df6335f4c48e840ae2c4" translate="yes" xml:space="preserve">
          <source>Laravel provides a powerful filesystem abstraction thanks to the wonderful &lt;a href=&quot;https://github.com/thephpleague/flysystem&quot;&gt;Flysystem&lt;/a&gt; PHP package by Frank de Jonge. The Laravel Flysystem integration provides simple to use drivers for working with local filesystems and Amazon S3. Even better, it's amazingly simple to switch between these storage options as the API remains the same for each system.</source>
          <target state="translated">Laravel提供了强大的文件系统抽象，这要归功于Frank de Jonge出色的&lt;a href=&quot;https://github.com/thephpleague/flysystem&quot;&gt;Flysystem&lt;/a&gt; PHP软件包。Laravel Flysystem集成为使用本地文件系统和Amazon S3提供了易于使用的驱动程序。更好的是，在这些存储选项之间切换非常简单，因为每个系统的API都相同。</target>
        </trans-unit>
        <trans-unit id="12a705905639d623c82b18c5c6933a3ec66136ea" translate="yes" xml:space="preserve">
          <source>Laravel provides a powerful filesystem abstraction thanks to the wonderful &lt;a href=&quot;https://github.com/thephpleague/flysystem&quot;&gt;Flysystem&lt;/a&gt; PHP package by Frank de Jonge. The Laravel Flysystem integration provides simple to use drivers for working with local filesystems, Amazon S3, and Rackspace Cloud Storage. Even better, it's amazingly simple to switch between these storage options as the API remains the same for each system.</source>
          <target state="translated">Laravel提供了强大的文件系统抽象，这要归功于Frank de Jonge 出色的&lt;a href=&quot;https://github.com/thephpleague/flysystem&quot;&gt;Flysystem&lt;/a&gt; PHP软件包。Laravel Flysystem集成提供了易于使用的驱动程序，用于处理本地文件系统，Amazon S3和Rackspace Cloud Storage。更好的是，在这些存储选项之间切换非常简单，因为每个系统的API都相同。</target>
        </trans-unit>
        <trans-unit id="7d628c4bcdd1eedc9d614fd86efa7e472d45e40a" translate="yes" xml:space="preserve">
          <source>Laravel provides a quick way to scaffold all of the routes and views you need for authentication using one simple command:</source>
          <target state="translated">Laravel提供了一种快速的方法,用一个简单的命令就可以为你的身份验证提供所有需要的路由和视图:</target>
        </trans-unit>
        <trans-unit id="fd33212ed653b11f6893f6a09ba79bca90e6a772" translate="yes" xml:space="preserve">
          <source>Laravel provides a variety of custom assertion methods for your &lt;a href=&quot;https://phpunit.de/&quot;&gt;PHPUnit&lt;/a&gt; feature tests. These assertions may be accessed on the response that is returned from the &lt;code&gt;json&lt;/code&gt;, &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;post&lt;/code&gt;, &lt;code&gt;put&lt;/code&gt;, and &lt;code&gt;delete&lt;/code&gt; test methods:</source>
          <target state="translated">Laravel为您的&lt;a href=&quot;https://phpunit.de/&quot;&gt;PHPUnit&lt;/a&gt;功能测试提供了各种自定义断言方法。可以在从 &lt;code&gt;json&lt;/code&gt; ， &lt;code&gt;get&lt;/code&gt; ， &lt;code&gt;post&lt;/code&gt; ， &lt;code&gt;put&lt;/code&gt; 和 &lt;code&gt;delete&lt;/code&gt; 测试方法返回的响应上访问这些断言：</target>
        </trans-unit>
        <trans-unit id="a82ee3e6c12ae77e511ce6216faa0630491a5166" translate="yes" xml:space="preserve">
          <source>Laravel provides a variety of custom assertion methods for your &lt;a href=&quot;https://phpunit.de/&quot;&gt;PHPUnit&lt;/a&gt; tests. These assertions may be accessed on the response that is returned from the &lt;code&gt;json&lt;/code&gt;, &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;post&lt;/code&gt;, &lt;code&gt;put&lt;/code&gt;, and &lt;code&gt;delete&lt;/code&gt; test methods:</source>
          <target state="translated">Laravel为您的&lt;a href=&quot;https://phpunit.de/&quot;&gt;PHPUnit&lt;/a&gt;测试提供了各种自定义断言方法。可从 &lt;code&gt;json&lt;/code&gt; ， &lt;code&gt;get&lt;/code&gt; ， &lt;code&gt;post&lt;/code&gt; ， &lt;code&gt;put&lt;/code&gt; 和 &lt;code&gt;delete&lt;/code&gt; 测试方法返回的响应上访问这些断言：</target>
        </trans-unit>
        <trans-unit id="20a7a760646b374a74c40602326bbfe95c444580" translate="yes" xml:space="preserve">
          <source>Laravel provides a variety of helpful tools to make it easier to test your database driven applications. First, you may use the &lt;code&gt;assertDatabaseHas&lt;/code&gt; helper to assert that data exists in the database matching a given set of criteria. For example, if you would like to verify that there is a record in the &lt;code&gt;users&lt;/code&gt; table with the &lt;code&gt;email&lt;/code&gt; value of &lt;code&gt;sally@example.com&lt;/code&gt;, you can do the following:</source>
          <target state="translated">Laravel提供了各种有用的工具，可以更轻松地测试数据库驱动的应用程序。首先，您可以使用 &lt;code&gt;assertDatabaseHas&lt;/code&gt; 帮助器来断言数据库中存在与给定条件集匹配的数据。例如，如果您要验证 &lt;code&gt;users&lt;/code&gt; 表中是否有一条记录，其 &lt;code&gt;email&lt;/code&gt; 值为 &lt;code&gt;sally@example.com&lt;/code&gt; ，则可以执行以下操作：</target>
        </trans-unit>
        <trans-unit id="d8a4cfdca813c133097c6572fbf7ff4af7596bb9" translate="yes" xml:space="preserve">
          <source>Laravel provides a variety of helpful validation rules; however, you may wish to specify some of your own. One method of registering custom validation rules is using rule objects. To generate a new rule object, you may use the &lt;code&gt;make:rule&lt;/code&gt; Artisan command. Let's use this command to generate a rule that verifies a string is uppercase. Laravel will place the new rule in the &lt;code&gt;app/Rules&lt;/code&gt; directory:</source>
          <target state="translated">Laravel提供了各种有用的验证规则。但是，您可能希望自己指定一些。注册自定义验证规则的一种方法是使用规则对象。要生成一个新的规则对象，可以使用 &lt;code&gt;make:rule&lt;/code&gt; Artisan命令。让我们使用此命令来生成一个验证字符串为大写的规则。Laravel会将新规则放置在 &lt;code&gt;app/Rules&lt;/code&gt; 目录中：</target>
        </trans-unit>
        <trans-unit id="2f392ecfbeaffefcd9cca1ab1c6a0fa43866cbfb" translate="yes" xml:space="preserve">
          <source>Laravel provides a very fluent API for making HTTP requests to your application and examining the output. For example, take a look at the feature test defined below:</source>
          <target state="translated">Laravel提供了一个非常流畅的API,用于向你的应用程序发出HTTP请求并检查输出结果.例如,看看下面定义的功能测试:</target>
        </trans-unit>
        <trans-unit id="b622b692e4fa7baafaf1f9eec256d966ec4e8874" translate="yes" xml:space="preserve">
          <source>Laravel provides a very fluent API for making HTTP requests to your application and examining the output. For example, take a look at the test defined below:</source>
          <target state="translated">Laravel提供了一个非常流畅的API,用于向你的应用程序发出HTTP请求并检查输出结果.例如,看看下面定义的测试:</target>
        </trans-unit>
        <trans-unit id="c0440fe4780c891a1f13dedb0f7ceb95a4f74412" translate="yes" xml:space="preserve">
          <source>Laravel provides an expressive, minimal API around the &lt;a href=&quot;http://docs.guzzlephp.org/en/stable/&quot;&gt;Guzzle HTTP client&lt;/a&gt;, allowing you to quickly make outgoing HTTP requests to communicate with other web applications. Laravel's wrapper around Guzzle is focused on its most common use cases and a wonderful developer experience.</source>
          <target state="translated">Laravel在&lt;a href=&quot;http://docs.guzzlephp.org/en/stable/&quot;&gt;Guzzle HTTP客户端&lt;/a&gt;周围提供了一个表达性极强的API ，使您可以快速发出传出的HTTP请求以与其他Web应用程序通信。Laravel围绕Guzzle的包装专注于其最常见的用例和出色的开发人员体验。</target>
        </trans-unit>
        <trans-unit id="aa48c0c930d739065f257c85f56b477e40d18be0" translate="yes" xml:space="preserve">
          <source>Laravel provides an expressive, unified API for various caching backends. The cache configuration is located at &lt;code&gt;config/cache.php&lt;/code&gt;. In this file you may specify which cache driver you would like to be used by default throughout your application. Laravel supports popular caching backends like &lt;a href=&quot;https://memcached.org&quot;&gt;Memcached&lt;/a&gt; and &lt;a href=&quot;https://redis.io&quot;&gt;Redis&lt;/a&gt; out of the box.</source>
          <target state="translated">Laravel为各种缓存后端提供了一个富有表现力的统一API。缓存配置位于 &lt;code&gt;config/cache.php&lt;/code&gt; 。在此文件中，您可以指定您希望在整个应用程序中默认使用哪个缓存驱动程序。Laravel开箱即用地支持流行的缓存后端，例如&lt;a href=&quot;https://memcached.org&quot;&gt;Memcached&lt;/a&gt;和&lt;a href=&quot;https://redis.io&quot;&gt;Redis&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d06f596d1d83aabeadd2058c90ab91150dbe4d67" translate="yes" xml:space="preserve">
          <source>Laravel provides helpers for mocking events, jobs, and facades out of the box. These helpers primarily provide a convenience layer over Mockery so you do not have to manually make complicated Mockery method calls. Of course, you are free to use &lt;a href=&quot;http://docs.mockery.io/en/latest/&quot;&gt;Mockery&lt;/a&gt; or PHPUnit to create your own mocks or spies.</source>
          <target state="translated">Laravel提供了开箱即用的模拟事件，作业和外观的助手。这些帮助程序主要在Mockery上提供了一个方便层，因此您不必手动进行复杂的Mockery方法调用。当然，您可以自由使用&lt;a href=&quot;http://docs.mockery.io/en/latest/&quot;&gt;Mockery&lt;/a&gt;或PHPUnit创建自己的模拟或间谍。</target>
        </trans-unit>
        <trans-unit id="a07e54339dbbb742799bd0e946c0c542040eafe7" translate="yes" xml:space="preserve">
          <source>Laravel provides helpers for mocking events, jobs, and facades out of the box. These helpers primarily provide a convenience layer over Mockery so you do not have to manually make complicated Mockery method calls. You can also use &lt;a href=&quot;http://docs.mockery.io/en/latest/&quot;&gt;Mockery&lt;/a&gt; or PHPUnit to create your own mocks or spies.</source>
          <target state="translated">Laravel提供了开箱即用的模拟事件，作业和外观的助手。这些帮助程序主要在Mockery上提供了一个方便层，因此您不必手动进行复杂的Mockery方法调用。您也可以使用&lt;a href=&quot;http://docs.mockery.io/en/latest/&quot;&gt;Mockery&lt;/a&gt;或PHPUnit创建自己的模拟或间谍。</target>
        </trans-unit>
        <trans-unit id="ad5793678fae7e5ef41fc2210097a8d167a30ba0" translate="yes" xml:space="preserve">
          <source>Laravel provides several database assertions for your &lt;a href=&quot;https://phpunit.de/&quot;&gt;PHPUnit&lt;/a&gt; feature tests:</source>
          <target state="translated">Laravel为您的&lt;a href=&quot;https://phpunit.de/&quot;&gt;PHPUnit&lt;/a&gt;功能测试提供了几个数据库断言：</target>
        </trans-unit>
        <trans-unit id="71cb1a8ba3fbce028b34fa92b6e850eff88beeaf" translate="yes" xml:space="preserve">
          <source>Laravel provides several database assertions for your &lt;a href=&quot;https://phpunit.de/&quot;&gt;PHPUnit&lt;/a&gt; tests:</source>
          <target state="translated">Laravel为您的&lt;a href=&quot;https://phpunit.de/&quot;&gt;PHPUnit&lt;/a&gt;测试提供了几个数据库断言：</target>
        </trans-unit>
        <trans-unit id="af03cc72a8b223d72a4e9e3e587c5f00bcbd661a" translate="yes" xml:space="preserve">
          <source>Laravel provides several different approaches to validate your application's incoming data. By default, Laravel's base controller class uses a &lt;code&gt;ValidatesRequests&lt;/code&gt; trait which provides a convenient method to validate incoming HTTP request with a variety of powerful validation rules.</source>
          <target state="translated">Laravel提供了几种不同的方法来验证应用程序的传入数据。默认情况下，Laravel的基本控制器类使用 &lt;code&gt;ValidatesRequests&lt;/code&gt; 特性，该特性提供了一种方便的方法来使用各种功能强大的验证规则来验证传入的HTTP请求。</target>
        </trans-unit>
        <trans-unit id="26edf87f826c62658d2b8d7e730c5dfd79566de3" translate="yes" xml:space="preserve">
          <source>Laravel provides several different approaches to validate your application's incoming data. By default, Laravel's base controller class uses a &lt;code&gt;ValidatesRequests&lt;/code&gt; trait which provides a convenient method to validate incoming HTTP requests with a variety of powerful validation rules.</source>
          <target state="translated">Laravel提供了几种不同的方法来验证应用程序的传入数据。默认情况下，Laravel的基本控制器类使用 &lt;code&gt;ValidatesRequests&lt;/code&gt; 特性，该特性提供了一种方便的方法，可以使用各种功能强大的验证规则来验证传入的HTTP请求。</target>
        </trans-unit>
        <trans-unit id="377d4ec0047e492ddfb45dce90bd33c1e922d0c8" translate="yes" xml:space="preserve">
          <source>Laravel provides several helpers for working with the session during HTTP testing. First, you may set the session data to a given array using the &lt;code&gt;withSession&lt;/code&gt; method. This is useful for loading the session with data before issuing a request to your application:</source>
          <target state="translated">Laravel为HTTP测试期间的会话提供了一些帮助。首先，您可以使用 &lt;code&gt;withSession&lt;/code&gt; 方法将会话数据设置为给定的数组。这对于在向应用程序发出请求之前用数据加载会话很有用：</target>
        </trans-unit>
        <trans-unit id="71e9b55859defa1b2f53a05b5bf3dcd3292455c4" translate="yes" xml:space="preserve">
          <source>Laravel provides several helpers to assist you in generating URLs for your application. Of course, these are mainly helpful when building links in your templates and API responses, or when generating redirect responses to another part of your application.</source>
          <target state="translated">Laravel提供了一些帮助工具来帮助你为你的应用程序生成URL.当然,这些主要是在你的模板和API响应中建立链接时,或者在生成重定向响应到你的应用程序的其他部分时有帮助.</target>
        </trans-unit>
        <trans-unit id="e85a80906235f0cfa9a94309ddad8112fee9ac04" translate="yes" xml:space="preserve">
          <source>Laravel provides several helpers to assist you in generating URLs for your application. These are mainly helpful when building links in your templates and API responses, or when generating redirect responses to another part of your application.</source>
          <target state="translated">Laravel提供了几个助手来帮助你为你的应用程序生成URLs.这些助手主要是在你的模板和API响应中建立链接时,或者在生成重定向响应到你的应用程序的其他部分时很有帮助.</target>
        </trans-unit>
        <trans-unit id="2993aeac35e30aa21d4bfad9fad4830935a0b664" translate="yes" xml:space="preserve">
          <source>Laravel provides two optional packages to assist you in managing API tokens and authenticating requests made with API tokens: &lt;a href=&quot;passport&quot;&gt;Passport&lt;/a&gt; and &lt;a href=&quot;sanctum&quot;&gt;Sanctum&lt;/a&gt;. Please note that these libraries and Laravel's built-in cookie based authentication libraries are not mutually exclusive. These libraries primarily focus on API token authentication while the built-in authentication services focus on cookie based browser authentication. Many applications will use both Laravel's built-in cookie based authentication services and one of Laravel's API authentication packages.</source>
          <target state="translated">Laravel提供了两个可选的软件包来帮助您管理API令牌和认证使用API​​令牌发出的请求：&lt;a href=&quot;passport&quot;&gt;Passport&lt;/a&gt;和&lt;a href=&quot;sanctum&quot;&gt;Sanctum&lt;/a&gt;。请注意，这些库和Laravel内置的基于cookie的身份验证库不是互斥的。这些库主要专注于API令牌身份验证，而内置身份验证服务则专注于基于cookie的浏览器身份验证。许多应用程序将同时使用Laravel的内置基于cookie的身份验证服务和Laravel的API身份验证程序包之一。</target>
        </trans-unit>
        <trans-unit id="a86338e33d89f0009dba25428ea9492ac45b732b" translate="yes" xml:space="preserve">
          <source>Laravel queues provide a unified API across a variety of different queue backends, such as Beanstalk, Amazon SQS, Redis, or even a relational database. Queues allow you to defer the processing of a time consuming task, such as sending an email, until a later time. Deferring these time consuming tasks drastically speeds up web requests to your application.</source>
          <target state="translated">Laravel队列为各种不同的队列后端提供了统一的API,如Beanstalk,Amazon SQS,Redis,甚至关系型数据库.队列允许你推迟处理一个耗时的任务,例如发送邮件,直到稍后的时间.推迟这些耗时的任务可以大大加快对应用程序的网络请求。</target>
        </trans-unit>
        <trans-unit id="1d0a79c12a5991755c509a170f887ba1338bacde" translate="yes" xml:space="preserve">
          <source>Laravel raises a variety of &lt;a href=&quot;events&quot;&gt;events&lt;/a&gt; during the authentication process. You may attach listeners to these events in your &lt;code&gt;EventServiceProvider&lt;/code&gt;:</source>
          <target state="translated">Laravel 在身份验证过程中引发各种&lt;a href=&quot;events&quot;&gt;事件&lt;/a&gt;。您可以在 &lt;code&gt;EventServiceProvider&lt;/code&gt; 中将侦听器附加到这些事件：</target>
        </trans-unit>
        <trans-unit id="4d86064b0b803e795d6c60896fba5073102086a7" translate="yes" xml:space="preserve">
          <source>Laravel resource routing assigns the typical &quot;CRUD&quot; routes to a controller with a single line of code. For example, you may wish to create a controller that handles all HTTP requests for &quot;photos&quot; stored by your application. Using the &lt;code&gt;make:controller&lt;/code&gt; Artisan command, we can quickly create such a controller:</source>
          <target state="translated">Laravel资源路由通过单行代码将典型的&amp;ldquo; CRUD&amp;rdquo;路由分配给控制器。例如，您可能希望创建一个控制器，该控制器处理应用程序存储的所有针对&amp;ldquo;照片&amp;rdquo;的HTTP请求。使用 &lt;code&gt;make:controller&lt;/code&gt; Artisan命令，我们可以快速创建这样的控制器：</target>
        </trans-unit>
        <trans-unit id="db3eb07a9ad4e6572d97643516cd64bcf4c0d76f" translate="yes" xml:space="preserve">
          <source>Laravel ships with a handful of notification channels, but you may want to write your own drivers to deliver notifications via other channels. Laravel makes it simple. To get started, define a class that contains a &lt;code&gt;send&lt;/code&gt; method. The method should receive two arguments: a &lt;code&gt;$notifiable&lt;/code&gt; and a &lt;code&gt;$notification&lt;/code&gt;:</source>
          <target state="translated">Laravel附带了一些通知渠道，但是您可能需要编写自己的驱动程序以通过其他渠道传递通知。 Laravel使它变得简单。首先，定义一个包含 &lt;code&gt;send&lt;/code&gt; 方法的类。该方法应接收两个参数： &lt;code&gt;$notifiable&lt;/code&gt; 和 &lt;code&gt;$notification&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="e0967b9c078669e6f3dfcad765e4b4d835880a7e" translate="yes" xml:space="preserve">
          <source>Laravel ships with several pre-built authentication controllers, which are located in the &lt;code&gt;App\Http\Controllers\Auth&lt;/code&gt; namespace. The &lt;code&gt;RegisterController&lt;/code&gt; handles new user registration, the &lt;code&gt;LoginController&lt;/code&gt; handles authentication, the &lt;code&gt;ForgotPasswordController&lt;/code&gt; handles e-mailing links for resetting passwords, and the &lt;code&gt;ResetPasswordController&lt;/code&gt; contains the logic to reset passwords. Each of these controllers uses a trait to include their necessary methods. For many applications, you will not need to modify these controllers at all.</source>
          <target state="translated">Laravel附带了几个预构建的身份验证控制器，它们位于 &lt;code&gt;App\Http\Controllers\Auth&lt;/code&gt; 命名空间中。所述 &lt;code&gt;RegisterController&lt;/code&gt; 手柄新用户登记时， &lt;code&gt;LoginController&lt;/code&gt; 手柄认证，则 &lt;code&gt;ForgotPasswordController&lt;/code&gt; 用于重置口令把手电子邮件发送链路以及 &lt;code&gt;ResetPasswordController&lt;/code&gt; 包含重置密码的逻辑。这些控制器中的每一个都使用特征来包括其必要的方法。对于许多应用程序，您根本不需要修改这些控制器。</target>
        </trans-unit>
        <trans-unit id="0751568484da6d817711054f3c59c31c7a20e1b7" translate="yes" xml:space="preserve">
          <source>Laravel should always be served out of the root of the &quot;web directory&quot; configured for your web server. You should not attempt to serve a Laravel application out of a subdirectory of the &quot;web directory&quot;. Attempting to do so could expose sensitive files present within your application.</source>
          <target state="translated">Laravel应该总是从你的web服务器配置的 &quot;web目录 &quot;的根目录下提供服务,你不应该试图从 &quot;web目录 &quot;的子目录下提供Laravel应用程序.你不应该尝试在 &quot;web目录 &quot;的子目录下为Laravel应用程序提供服务.这样做可能会暴露应用程序中的敏感文件.</target>
        </trans-unit>
        <trans-unit id="57254b3de147ca512d02857930002d1f6e752499" translate="yes" xml:space="preserve">
          <source>Laravel stores the current CSRF token in a &lt;code&gt;XSRF-TOKEN&lt;/code&gt; cookie that is included with each response generated by the framework. You can use the cookie value to set the &lt;code&gt;X-XSRF-TOKEN&lt;/code&gt; request header.</source>
          <target state="translated">Laravel将当前CSRF令牌存储在 &lt;code&gt;XSRF-TOKEN&lt;/code&gt; cookie中，该cookie包含在框架生成的每个响应中。您可以使用cookie值来设置 &lt;code&gt;X-XSRF-TOKEN&lt;/code&gt; 请求标头。</target>
        </trans-unit>
        <trans-unit id="1a63de9b15d640e432d497dcf31c52becd0f5144" translate="yes" xml:space="preserve">
          <source>Laravel stores the current CSRF token in an encrypted &lt;code&gt;XSRF-TOKEN&lt;/code&gt; cookie that is included with each response generated by the framework. You can use the cookie value to set the &lt;code&gt;X-XSRF-TOKEN&lt;/code&gt; request header.</source>
          <target state="translated">Laravel将当前CSRF令牌存储在加密的 &lt;code&gt;XSRF-TOKEN&lt;/code&gt; cookie中，该cookie包含在框架生成的每个响应中。您可以使用cookie值来设置 &lt;code&gt;X-XSRF-TOKEN&lt;/code&gt; 请求标头。</target>
        </trans-unit>
        <trans-unit id="e111384157619ddaf66dd2a6b3b996f4fa547577" translate="yes" xml:space="preserve">
          <source>Laravel strives to make the entire PHP development experience delightful, including your local development environment. &lt;a href=&quot;https://www.vagrantup.com&quot;&gt;Vagrant&lt;/a&gt; provides a simple, elegant way to manage and provision Virtual Machines.</source>
          <target state="translated">Laravel努力使整个PHP开发体验（包括您的本地开发环境）令人愉悦。&lt;a href=&quot;https://www.vagrantup.com&quot;&gt;Vagrant&lt;/a&gt;提供了一种简单，优雅的方法来管理和配置虚拟机。</target>
        </trans-unit>
        <trans-unit id="9fde55e089473ffd4742bea37479382b607a39e6" translate="yes" xml:space="preserve">
          <source>Laravel uses the &lt;code&gt;utf8mb4&lt;/code&gt; character set by default, which includes support for storing &quot;emojis&quot; in the database. If you are running a version of MySQL older than the 5.7.7 release or MariaDB older than the 10.2.2 release, you may need to manually configure the default string length generated by migrations in order for MySQL to create indexes for them. You may configure this by calling the &lt;code&gt;Schema::defaultStringLength&lt;/code&gt; method within your &lt;code&gt;AppServiceProvider&lt;/code&gt;:</source>
          <target state="translated">Laravel默认使用 &lt;code&gt;utf8mb4&lt;/code&gt; 字符集，该字符集支持在数据库中存储&amp;ldquo;表情符号&amp;rdquo;。如果运行的MySQL版本低于5.7.7发行版或MariaDB版本低于10.2.2，则可能需要手动配置迁移生成的默认字符串长度，以便MySQL为它们创建索引。您可以通过在 &lt;code&gt;AppServiceProvider&lt;/code&gt; 中调用 &lt;code&gt;Schema::defaultStringLength&lt;/code&gt; 方法来配置它：</target>
        </trans-unit>
        <trans-unit id="dd39d25a1a91914d88e412fe36c4da95f698f7df" translate="yes" xml:space="preserve">
          <source>Laravel utilizes &lt;a href=&quot;https://getcomposer.org&quot;&gt;Composer&lt;/a&gt; to manage its dependencies. So, before using Laravel, make sure you have Composer installed on your machine.</source>
          <target state="translated">Laravel利用&lt;a href=&quot;https://getcomposer.org&quot;&gt;Composer&lt;/a&gt;来管理其依赖项。因此，在使用Laravel之前，请确保已在计算机上安装了Composer。</target>
        </trans-unit>
        <trans-unit id="dc27ae0969e14d1eaa465c5a3dfe3f5cb9144c62" translate="yes" xml:space="preserve">
          <source>Laravel will automatically generate a reasonable index name, but you may pass a second argument to the method to specify the name yourself:</source>
          <target state="translated">Laravel会自动生成一个合理的索引名,但你也可以通过第二个参数来自己指定索引名:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
