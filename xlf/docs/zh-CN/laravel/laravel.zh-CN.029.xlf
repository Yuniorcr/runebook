<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="laravel">
    <body>
      <group id="laravel">
        <trans-unit id="94be3589a07b26452083745d697da2a4cf67c084" translate="yes" xml:space="preserve">
          <source>The output handler callback.</source>
          <target state="translated">输出处理程序回调。</target>
        </trans-unit>
        <trans-unit id="1592218a62638fe8ddbe41a6ffe64a302dc3c079" translate="yes" xml:space="preserve">
          <source>The output interface implementation.</source>
          <target state="translated">输出接口的实现。</target>
        </trans-unit>
        <trans-unit id="efef637298017b96c00db29f6fbb04f51dea6a63" translate="yes" xml:space="preserve">
          <source>The paginator implementation.</source>
          <target state="translated">分页器的实现。</target>
        </trans-unit>
        <trans-unit id="ac5a21d50bbeee8cd105d3f06e77d65b3f449d1a" translate="yes" xml:space="preserve">
          <source>The panel component renders the given block of text in a panel that has a slightly different background color than the rest of the message. This allows you to draw attention to a given block of text:</source>
          <target state="translated">面板组件在面板中渲染给定的文本块,其背景颜色与消息的其他部分略有不同。这允许您将注意力吸引到给定的文本块上。</target>
        </trans-unit>
        <trans-unit id="e93b51d43e7cb513d86c518478cd839282f2231f" translate="yes" xml:space="preserve">
          <source>The panel component renders the given block of text in a panel that has a slightly different background color than the rest of the notification. This allows you to draw attention to a given block of text:</source>
          <target state="translated">面板组件在面板中渲染给定的文本块,其背景颜色与通知的其他部分略有不同。这允许您将注意力吸引到给定的文本块上。</target>
        </trans-unit>
        <trans-unit id="b5f58475cf813553f8558bb5f62dde1c4eeb2334" translate="yes" xml:space="preserve">
          <source>The parameter names for the route.</source>
          <target state="translated">途径的参数名称。</target>
        </trans-unit>
        <trans-unit id="ee43f2aac1dddb44c5ce00a1e90083ee8a374d7d" translate="yes" xml:space="preserve">
          <source>The parameter override stack.</source>
          <target state="translated">参数覆盖栈。</target>
        </trans-unit>
        <trans-unit id="e4766db45f665e17e55fa192e169308d5c2cb7b2" translate="yes" xml:space="preserve">
          <source>The parameters set for this resource instance.</source>
          <target state="translated">为该资源实例设置的参数。</target>
        </trans-unit>
        <trans-unit id="7282c6d7c50ee64fe886677d37c2a61bd9c866f9" translate="yes" xml:space="preserve">
          <source>The parameters to pass to the command.</source>
          <target state="translated">要传递给命令的参数。</target>
        </trans-unit>
        <trans-unit id="902c331440e6a8019042c2868d8cf1991c3b0ad1" translate="yes" xml:space="preserve">
          <source>The parameters to pass to the method.</source>
          <target state="translated">要传递给方法的参数。</target>
        </trans-unit>
        <trans-unit id="8836bb158d112ff7068e1e120206a763d7673269" translate="yes" xml:space="preserve">
          <source>The parent model instance.</source>
          <target state="translated">父模型实例。</target>
        </trans-unit>
        <trans-unit id="a43200c593618940b314d78b25a9683fbe867ddf" translate="yes" xml:space="preserve">
          <source>The parent model of the relationship.</source>
          <target state="translated">关系的父母模式。</target>
        </trans-unit>
        <trans-unit id="42ec5036ce81e5c38f017303e70c4596b4478a11" translate="yes" xml:space="preserve">
          <source>The parent placeholder for the request.</source>
          <target state="translated">请求的父占位符。</target>
        </trans-unit>
        <trans-unit id="f3a36f3c1bd0a8184ab4a287ddc8e69705df7b61" translate="yes" xml:space="preserve">
          <source>The password reset token.</source>
          <target state="translated">密码重置令牌。</target>
        </trans-unit>
        <trans-unit id="b53f647f4d451b23820c56e1589709aa1a3c92d1" translate="yes" xml:space="preserve">
          <source>The password token repository.</source>
          <target state="translated">密码令牌库。</target>
        </trans-unit>
        <trans-unit id="c0a14434a92eaa0f8e4a8f4af13ef54ebf2eb75a" translate="yes" xml:space="preserve">
          <source>The path resource or null on failure.</source>
          <target state="translated">路径资源或失败时为空。</target>
        </trans-unit>
        <trans-unit id="7e8bdfc1d1507fa4bd04ea87a5760cf7e62cf892" translate="yes" xml:space="preserve">
          <source>The path the client should be redirected to.</source>
          <target state="translated">客户端应该被重定向到的路径。</target>
        </trans-unit>
        <trans-unit id="7b7820185ffd5d7ec8d2f633f034237b7bd8fb57" translate="yes" xml:space="preserve">
          <source>The path the user should be redirected to.</source>
          <target state="translated">用户应该被重定向到的路径。</target>
        </trans-unit>
        <trans-unit id="9e27ef61662e43c88e72c2eee7996b29b12ffeb9" translate="yes" xml:space="preserve">
          <source>The path to the manifest file.</source>
          <target state="translated">通往清单文件的路径。</target>
        </trans-unit>
        <trans-unit id="add09e0cc8a57734ee01c90eac0ba6175f978a27" translate="yes" xml:space="preserve">
          <source>The path to the view file.</source>
          <target state="translated">视图文件的路径。</target>
        </trans-unit>
        <trans-unit id="5565f02a538d3706e36f4b7f26090d42dbd6ad9a" translate="yes" xml:space="preserve">
          <source>The path where sessions should be stored.</source>
          <target state="translated">存储会话的路径。</target>
        </trans-unit>
        <trans-unit id="b0213bfbcc42800df8dd2a5938b0bfbd0e4e1f00" translate="yes" xml:space="preserve">
          <source>The paths that should be published by group.</source>
          <target state="translated">应按组发布的路径。</target>
        </trans-unit>
        <trans-unit id="d11b7aa3cd9a7dcedcefcbc9eb709c9a04d3cdfd" translate="yes" xml:space="preserve">
          <source>The paths that should be published.</source>
          <target state="translated">应公布的路径。</target>
        </trans-unit>
        <trans-unit id="b0b8fd52944cfe758ddc216bf307a8431ba07d9d" translate="yes" xml:space="preserve">
          <source>The paths to all of the migration files.</source>
          <target state="translated">所有迁移文件的路径。</target>
        </trans-unit>
        <trans-unit id="d24aad41128f2e7bb10ce0967a69013ddb6ede07" translate="yes" xml:space="preserve">
          <source>The person the message is from.</source>
          <target state="translated">消息来源的人。</target>
        </trans-unit>
        <trans-unit id="bfef9e48f15949bd41a84c3faab39c974797e6ca" translate="yes" xml:space="preserve">
          <source>The phone number notifications should be sent from.</source>
          <target state="translated">手机号码通知应从。</target>
        </trans-unit>
        <trans-unit id="0e98ca2d23c07036c9363987590e8028cf913c2a" translate="yes" xml:space="preserve">
          <source>The phone number the message should be sent from.</source>
          <target state="translated">信息应从哪个电话号码发送。</target>
        </trans-unit>
        <trans-unit id="dc620da65b7fc93a01bb325161eb357150060b37" translate="yes" xml:space="preserve">
          <source>The pipeline instance for the bus.</source>
          <target state="translated">总线的管道实例。</target>
        </trans-unit>
        <trans-unit id="f0f4eb636554a4a6c4812d67a352786093ae4d49" translate="yes" xml:space="preserve">
          <source>The pipes to send commands through before dispatching.</source>
          <target state="translated">发送命令前要经过的管道。</target>
        </trans-unit>
        <trans-unit id="2db08da63e33c232061b617ac848e94dac12da18" translate="yes" xml:space="preserve">
          <source>The pivot table columns to retrieve.</source>
          <target state="translated">要检索的数据透视表列。</target>
        </trans-unit>
        <trans-unit id="c0c920060f899f778786960e4dcadd050e7ecef6" translate="yes" xml:space="preserve">
          <source>The plain text view to use for the message.</source>
          <target state="translated">用于信息的纯文本视图。</target>
        </trans-unit>
        <trans-unit id="9387956fd1a68c29b28cfd48bf1cae7c0d6e2cf2" translate="yes" xml:space="preserve">
          <source>The plug-ins registered with the transport.</source>
          <target state="translated">在运输工具上注册的插件。</target>
        </trans-unit>
        <trans-unit id="8494185e12456cfb943f79032e45853adae481d9" translate="yes" xml:space="preserve">
          <source>The plural rules are derived from code of the Zend Framework (2010-09-25), which is subject to the new BSD license (http://framework.zend.com/license/new-bsd) Copyright (c) 2005-2010 - Zend Technologies USA Inc. (http://www.zend.com)</source>
          <target state="translated">复数规则来源于Zend Framework的代码(2010-09-25),它受新的BSD许可证的约束 (http://framework.zend.com/license/new-bsd)Copyright (c)2005-2010-Zend Technologies USA Inc.(http://www.zend.com)</target>
        </trans-unit>
        <trans-unit id="5e96ed07e7f2bc957d119c34510dec2c79157892" translate="yes" xml:space="preserve">
          <source>The policy mappings for the application.</source>
          <target state="translated">应用程序的策略映射。</target>
        </trans-unit>
        <trans-unit id="0025ea8fe17d7750364b5c1207ecf3ccba7379dc" translate="yes" xml:space="preserve">
          <source>The possible column modifiers.</source>
          <target state="translated">可能的列修饰词。</target>
        </trans-unit>
        <trans-unit id="366dd2fd160dd0d6a6eb478f54ae2b04954b51e1" translate="yes" xml:space="preserve">
          <source>The possible column serials.</source>
          <target state="translated">可能的栏目序号。</target>
        </trans-unit>
        <trans-unit id="609e7048910da4cc45affa2dd59942ede34f8b94" translate="yes" xml:space="preserve">
          <source>The prefix of the table.</source>
          <target state="translated">表的前缀。</target>
        </trans-unit>
        <trans-unit id="3c4236448d5f55af1bd56351f4f7111fe092aa19" translate="yes" xml:space="preserve">
          <source>The primary key for the model.</source>
          <target state="translated">模型的主键。</target>
        </trans-unit>
        <trans-unit id="001b18b67380189d8314bdc4f69188b4186b95a5" translate="yes" xml:space="preserve">
          <source>The priority-sorted list of middleware.</source>
          <target state="translated">中间件的优先级排序列表。</target>
        </trans-unit>
        <trans-unit id="bc2f39cab13defd205f6e8092263c494f5ceffbb" translate="yes" xml:space="preserve">
          <source>The protected &lt;code&gt;sendResetLinkResponse&lt;/code&gt; method of the &lt;code&gt;SendsPasswordResetEmails&lt;/code&gt; trait now accepts the incoming &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; as its first argument. If you are overriding this method, you should update your method's signature:</source>
          <target state="translated">现在， &lt;code&gt;SendsPasswordResetEmails&lt;/code&gt; 特征的受保护的 &lt;code&gt;sendResetLinkResponse&lt;/code&gt; 方法接受传入的 &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; 作为其第一个参数。如果要覆盖此方法，则应更新方法的签名：</target>
        </trans-unit>
        <trans-unit id="8148dffec1ace6dbbd3a172bdb7429da13d96a93" translate="yes" xml:space="preserve">
          <source>The protected &lt;code&gt;sendResetResponse&lt;/code&gt; method of the &lt;code&gt;ResetsPasswords&lt;/code&gt; trait now accepts the incoming &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; as its first argument. If you are overriding this method, you should update your method's signature:</source>
          <target state="translated">现在， &lt;code&gt;ResetsPasswords&lt;/code&gt; 特征的受保护的 &lt;code&gt;sendResetResponse&lt;/code&gt; 方法接受传入的 &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; 作为其第一个参数。如果要覆盖此方法，则应更新方法的签名：</target>
        </trans-unit>
        <trans-unit id="761134f7975522e4a73337958ecbd9c5c6302007" translate="yes" xml:space="preserve">
          <source>The provider class names.</source>
          <target state="translated">提供者类名称。</target>
        </trans-unit>
        <trans-unit id="efff598d2ac852eaaf4231191ec70c6bad0a4277" translate="yes" xml:space="preserve">
          <source>The provider to publish.</source>
          <target state="translated">提供者来发布。</target>
        </trans-unit>
        <trans-unit id="0f9d970794e236a1ea851682597121e45bb730cb" translate="yes" xml:space="preserve">
          <source>The published components will be placed in your &lt;code&gt;resources/js/components&lt;/code&gt; directory. Once the components have been published, you should register them in your &lt;code&gt;resources/js/app.js&lt;/code&gt; file:</source>
          <target state="translated">已发布的组件将放置在您的 &lt;code&gt;resources/js/components&lt;/code&gt; 目录中。组件发布后，您应该在 &lt;code&gt;resources/js/app.js&lt;/code&gt; 文件中注册它们：</target>
        </trans-unit>
        <trans-unit id="362d9f3883e1e03c1cdad16aa4a99b8ecb8a8ef1" translate="yes" xml:space="preserve">
          <source>The query above will produce the following SQL:</source>
          <target state="translated">上面的查询将产生以下SQL。</target>
        </trans-unit>
        <trans-unit id="44cb5a6276e5382ddb901d8206b16b6d3a2551ba" translate="yes" xml:space="preserve">
          <source>The query builder also includes a few functions to help you do &quot;pessimistic locking&quot; on your &lt;code&gt;select&lt;/code&gt; statements. To run the statement with a &quot;shared lock&quot;, you may use the &lt;code&gt;sharedLock&lt;/code&gt; method on a query. A shared lock prevents the selected rows from being modified until your transaction commits:</source>
          <target state="translated">查询构建器还包括一些功能，可帮助您对 &lt;code&gt;select&lt;/code&gt; 语句执行&amp;ldquo;悲观锁定&amp;rdquo; 。要使用&amp;ldquo;共享锁&amp;rdquo;运行语句，可以在查询上使用 &lt;code&gt;sharedLock&lt;/code&gt; 方法。共享锁可防止在事务提交之前修改选定的行：</target>
        </trans-unit>
        <trans-unit id="9c272a61d4a7bd24c8447c8b82ec8b370b55f411" translate="yes" xml:space="preserve">
          <source>The query builder also provides a quick way to &quot;union&quot; two queries together. For example, you may create an initial query and use the &lt;code&gt;union&lt;/code&gt; method to union it with a second query:</source>
          <target state="translated">查询构建器还提供了一种将两个查询&amp;ldquo;联合&amp;rdquo;在一起的快速方法。例如，您可以创建一个初始查询，并使用 &lt;code&gt;union&lt;/code&gt; 方法将其与第二个查询合并：</target>
        </trans-unit>
        <trans-unit id="98ba14c8c1556a3a72125410b708b4a2f1e00fbc" translate="yes" xml:space="preserve">
          <source>The query builder also provides a variety of aggregate methods such as &lt;code&gt;count&lt;/code&gt;, &lt;code&gt;max&lt;/code&gt;, &lt;code&gt;min&lt;/code&gt;, &lt;code&gt;avg&lt;/code&gt;, and &lt;code&gt;sum&lt;/code&gt;. You may call any of these methods after constructing your query:</source>
          <target state="translated">查询构建器还提供了各种汇总方法，例如 &lt;code&gt;count&lt;/code&gt; ， &lt;code&gt;max&lt;/code&gt; ， &lt;code&gt;min&lt;/code&gt; ， &lt;code&gt;avg&lt;/code&gt; 和 &lt;code&gt;sum&lt;/code&gt; 。您可以在构造查询后调用以下任何方法：</target>
        </trans-unit>
        <trans-unit id="0b60ecf12cc627cc468fefe0d3fbcfe9eaf4c317" translate="yes" xml:space="preserve">
          <source>The query builder also provides an &lt;code&gt;insert&lt;/code&gt; method for inserting records into the database table. The &lt;code&gt;insert&lt;/code&gt; method accepts an array of column names and values:</source>
          <target state="translated">查询构建器还提供用于将记录插入数据库表的 &lt;code&gt;insert&lt;/code&gt; 方法。所述 &lt;code&gt;insert&lt;/code&gt; 方法接受列名和值的数组：</target>
        </trans-unit>
        <trans-unit id="60b628cfc040a806a32ab4d5df96d0e35a8cc9ba" translate="yes" xml:space="preserve">
          <source>The query builder also provides convenient methods for incrementing or decrementing the value of a given column. This is a shortcut, providing a more expressive and terse interface compared to manually writing the &lt;code&gt;update&lt;/code&gt; statement.</source>
          <target state="translated">查询构建器还提供了方便的方法来增加或减少给定列的值。这是一种快捷方式，与手动编写 &lt;code&gt;update&lt;/code&gt; 语句相比，它提供了更具表现力和简洁的界面。</target>
        </trans-unit>
        <trans-unit id="e5673be9809243bcffb70dd972a60c508469ca05" translate="yes" xml:space="preserve">
          <source>The query builder may also be used to delete records from the table via the &lt;code&gt;delete&lt;/code&gt; method. You may constrain &lt;code&gt;delete&lt;/code&gt; statements by adding &lt;code&gt;where&lt;/code&gt; clauses before calling the &lt;code&gt;delete&lt;/code&gt; method:</source>
          <target state="translated">查询构建器还可以用于通过 &lt;code&gt;delete&lt;/code&gt; 方法从表中删除记录。您可以通过在调用 &lt;code&gt;delete&lt;/code&gt; 方法之前添加 &lt;code&gt;where&lt;/code&gt; 子句来约束 &lt;code&gt;delete&lt;/code&gt; 语句：</target>
        </trans-unit>
        <trans-unit id="b860f116e9363b689e9e99cad6734fd060e09999" translate="yes" xml:space="preserve">
          <source>The query builder may also be used to write join statements. To perform a basic &quot;inner join&quot;, you may use the &lt;code&gt;join&lt;/code&gt; method on a query builder instance. The first argument passed to the &lt;code&gt;join&lt;/code&gt; method is the name of the table you need to join to, while the remaining arguments specify the column constraints for the join. Of course, as you can see, you can join to multiple tables in a single query:</source>
          <target state="translated">查询构建器还可以用于编写连接语句。要执行基本的&amp;ldquo;内部联接&amp;rdquo;，可以在查询构建器实例上使用 &lt;code&gt;join&lt;/code&gt; 方法。传递给 &lt;code&gt;join&lt;/code&gt; 方法的第一个参数是您需要连接到的表的名称，其余参数指定连接的列约束。当然，如您所见，您可以在单个查询中联接多个表：</target>
        </trans-unit>
        <trans-unit id="3b75c6409200e4302f40387da75028b27ddc3c7d" translate="yes" xml:space="preserve">
          <source>The query grammar implementation.</source>
          <target state="translated">查询语法的实现。</target>
        </trans-unit>
        <trans-unit id="3903eb8353a382e2211e9c94b26faca4828d11e8" translate="yes" xml:space="preserve">
          <source>The query parameters to add to all URLs.</source>
          <target state="translated">要添加到所有URL的查询参数。</target>
        </trans-unit>
        <trans-unit id="7897df1c5d66a8deaf393edee2a496eb0065c6c9" translate="yes" xml:space="preserve">
          <source>The query post processor implementation.</source>
          <target state="translated">查询后处理器的实现。</target>
        </trans-unit>
        <trans-unit id="596c396a4eeff80c8cb80d06886473b2e62a48e9" translate="yes" xml:space="preserve">
          <source>The query string variable used to store the page.</source>
          <target state="translated">用于存储页面的查询字符串变量。</target>
        </trans-unit>
        <trans-unit id="ade94f6695e0c79d24f37cf20e44ae98d3025022" translate="yes" xml:space="preserve">
          <source>The query union statements.</source>
          <target state="translated">查询联盟声明。</target>
        </trans-unit>
        <trans-unit id="7a595d4308adfb8d55aab5690e470aa0815de055" translate="yes" xml:space="preserve">
          <source>The queue URL prefix.</source>
          <target state="translated">队列的URL前缀。</target>
        </trans-unit>
        <trans-unit id="251de1a5309840eedd548c43e7d2105a547998a6" translate="yes" xml:space="preserve">
          <source>The queue configuration file is stored in &lt;code&gt;config/queue.php&lt;/code&gt;. In this file you will find connection configurations for each of the queue drivers that are included with the framework, which includes a database, &lt;a href=&quot;https://kr.github.io/beanstalkd/&quot;&gt;Beanstalkd&lt;/a&gt;, &lt;a href=&quot;https://aws.amazon.com/sqs/&quot;&gt;Amazon SQS&lt;/a&gt;, &lt;a href=&quot;https://redis.io&quot;&gt;Redis&lt;/a&gt;, and a synchronous driver that will execute jobs immediately (for local use). A &lt;code&gt;null&lt;/code&gt; queue driver is also included which discards queued jobs.</source>
          <target state="translated">队列配置文件存储在 &lt;code&gt;config/queue.php&lt;/code&gt; 中。在此文件中，您将找到框架随附的每个队列驱动程序的连接配置，其中包括数据库&lt;a href=&quot;https://kr.github.io/beanstalkd/&quot;&gt;Beanstalkd&lt;/a&gt;，&lt;a href=&quot;https://aws.amazon.com/sqs/&quot;&gt;Amazon SQS&lt;/a&gt;，&lt;a href=&quot;https://redis.io&quot;&gt;Redis&lt;/a&gt;和将立即执行作业（供本地使用）的同步驱动程序。还包括一个 &lt;code&gt;null&lt;/code&gt; 队列驱动程序，该驱动程序会丢弃排队的作业。</target>
        </trans-unit>
        <trans-unit id="20efc614107e1046236f81717131c099fa600e7b" translate="yes" xml:space="preserve">
          <source>The queue implementation.</source>
          <target state="translated">队列的实施。</target>
        </trans-unit>
        <trans-unit id="9dcb7b9053dcdd289bb23463f94284a70ee68b08" translate="yes" xml:space="preserve">
          <source>The queue listener instance.</source>
          <target state="translated">队列监听器实例。</target>
        </trans-unit>
        <trans-unit id="6abc329182160980328a1e76f7f56b484da95049" translate="yes" xml:space="preserve">
          <source>The queue manager instance.</source>
          <target state="translated">队列管理器实例。</target>
        </trans-unit>
        <trans-unit id="e757ccabdb84d34d5d4beb9aa51f8fc63eeb2c31" translate="yes" xml:space="preserve">
          <source>The queue message data.</source>
          <target state="translated">队列消息数据。</target>
        </trans-unit>
        <trans-unit id="08a4eaea09c51e96856c6d0f4ffbb55f8e3c0988" translate="yes" xml:space="preserve">
          <source>The queue name.</source>
          <target state="translated">队列名称。</target>
        </trans-unit>
        <trans-unit id="f757eae1008e6c3b3f3aedba01be35065a8f2896" translate="yes" xml:space="preserve">
          <source>The queue resolver callback.</source>
          <target state="translated">队列解析器回调。</target>
        </trans-unit>
        <trans-unit id="1f0bb54188344db6d24ee49c0064a8bd1ab7b5fb" translate="yes" xml:space="preserve">
          <source>The queue resolver instance.</source>
          <target state="translated">队列解析器实例。</target>
        </trans-unit>
        <trans-unit id="99a10f1bc4202008531860cbe5957ace38b01cc6" translate="yes" xml:space="preserve">
          <source>The queue uses the &lt;a href=&quot;cache&quot;&gt;cache&lt;/a&gt; to store restart signals, so you should verify a cache driver is properly configured for your application before using this feature.</source>
          <target state="translated">队列使用&lt;a href=&quot;cache&quot;&gt;缓存&lt;/a&gt;存储重新启动信号，因此在使用此功能之前，您应验证为应用程序正确配置了缓存驱动程序。</target>
        </trans-unit>
        <trans-unit id="5a2cb5843f79c9d9f87ea929dc8e4ab226ee2ee6" translate="yes" xml:space="preserve">
          <source>The queue worker command line.</source>
          <target state="translated">队列工命令行。</target>
        </trans-unit>
        <trans-unit id="a9d19bafe1650cadd34fe56f7b2a32e1d51e0415" translate="yes" xml:space="preserve">
          <source>The queue worker instance.</source>
          <target state="translated">队列工人实例。</target>
        </trans-unit>
        <trans-unit id="02db72366d16c6c14ebe7595a3e32269f47ae41e" translate="yes" xml:space="preserve">
          <source>The rate limiter instance.</source>
          <target state="translated">率限制器实例。</target>
        </trans-unit>
        <trans-unit id="f89e151cfbb32960099f93afd6cdd6673952dd6c" translate="yes" xml:space="preserve">
          <source>The raw attachments for the message.</source>
          <target state="translated">邮件的原始附件。</target>
        </trans-unit>
        <trans-unit id="70441c97dad9e48320e44350b32b7f46ecd2ba83" translate="yes" xml:space="preserve">
          <source>The recommended response to send to the client.</source>
          <target state="translated">建议发给客户的回复。</target>
        </trans-unit>
        <trans-unit id="4a1eb40248ef873ce553ce9eadac2d57d14dc10b" translate="yes" xml:space="preserve">
          <source>The reconnector instance for the connection.</source>
          <target state="translated">连接的重连器实例。</target>
        </trans-unit>
        <trans-unit id="2f8c4fb4fc46b3fe0087b0ade046c694803d3d5d" translate="yes" xml:space="preserve">
          <source>The redirector instance.</source>
          <target state="translated">重定向器实例。</target>
        </trans-unit>
        <trans-unit id="0aa28db9c9b23594984c138c26867439741ea8dd" translate="yes" xml:space="preserve">
          <source>The registered after creating callbacks.</source>
          <target state="translated">创建回调后注册的。</target>
        </trans-unit>
        <trans-unit id="609972ce5c8714c07b32df2d2c883a13c19ae775" translate="yes" xml:space="preserve">
          <source>The registered after making callbacks.</source>
          <target state="translated">做出回调后的注册。</target>
        </trans-unit>
        <trans-unit id="98cf3b7ca0029a15047bb64f7d9657e7f47d36be" translate="yes" xml:space="preserve">
          <source>The registered aliases keyed by the abstract name.</source>
          <target state="translated">以抽象名称为键的注册别名。</target>
        </trans-unit>
        <trans-unit id="f9e436b2cfbb51b6a5dac896bb616cc4c422b710" translate="yes" xml:space="preserve">
          <source>The registered channel authenticators.</source>
          <target state="translated">已注册的渠道认证者。</target>
        </trans-unit>
        <trans-unit id="9a2197b3b9bf3e17ff17ca1d340c4e9f5070355c" translate="yes" xml:space="preserve">
          <source>The registered component paths.</source>
          <target state="translated">注册的组件路径。</target>
        </trans-unit>
        <trans-unit id="c11789175d838051d947155acafe1079d4e33227" translate="yes" xml:space="preserve">
          <source>The registered custom driver creators.</source>
          <target state="translated">注册的自定义驱动程序创作者。</target>
        </trans-unit>
        <trans-unit id="a5427beac44b1a01dd2a8c283d3d690adfabe633" translate="yes" xml:space="preserve">
          <source>The registered custom provider creators.</source>
          <target state="translated">注册的定制供应商创。</target>
        </trans-unit>
        <trans-unit id="4a6bd0e9fd703ab21d8e46d49e4ca9d5046e3462" translate="yes" xml:space="preserve">
          <source>The registered event listeners.</source>
          <target state="translated">注册的事件监听者。</target>
        </trans-unit>
        <trans-unit id="044f8eb9a6674a4fbe18a213d45a4f8b1b69c84d" translate="yes" xml:space="preserve">
          <source>The registered model states.</source>
          <target state="translated">登记的模式规定:</target>
        </trans-unit>
        <trans-unit id="bb8cabee1bba7044d317c148c0dd33b1a0b78941" translate="yes" xml:space="preserve">
          <source>The registered post create hooks.</source>
          <target state="translated">注册的职位创建勾当。</target>
        </trans-unit>
        <trans-unit id="60d081e3edf6cb3091d7c0e9ba5bb65f98896345" translate="yes" xml:space="preserve">
          <source>The registered route value binders.</source>
          <target state="translated">已登记的途径价值文件夹。</target>
        </trans-unit>
        <trans-unit id="00a6d22c8493b09dacd0b1e9ab9ffdd2cf823538" translate="yes" xml:space="preserve">
          <source>The registered string macros.</source>
          <target state="translated">注册的字符串宏。</target>
        </trans-unit>
        <trans-unit id="b4d12c41dfa51c810e441bd098f2e1fb9b281683" translate="yes" xml:space="preserve">
          <source>The registered type aliases.</source>
          <target state="translated">注册的类型别名。</target>
        </trans-unit>
        <trans-unit id="c638d1b9ea8c2ac338c8b6abdb53bbd79029039b" translate="yes" xml:space="preserve">
          <source>The regular expression requirements.</source>
          <target state="translated">正则表达式的要求。</target>
        </trans-unit>
        <trans-unit id="9ffb5bae50a57b0c2a20edc53067010eaab3ed9e" translate="yes" xml:space="preserve">
          <source>The related model instance.</source>
          <target state="translated">相关的模型实例。</target>
        </trans-unit>
        <trans-unit id="db6c7e8e552443aa2d0da70d751330354d867bfa" translate="yes" xml:space="preserve">
          <source>The relations to eager load on every query.</source>
          <target state="translated">关系到每一次查询的急切负荷。</target>
        </trans-unit>
        <trans-unit id="7314a154a25cacabcd3a7c9a9665ab32c9d57374" translate="yes" xml:space="preserve">
          <source>The relationship counts that should be eager loaded on every query.</source>
          <target state="translated">每次查询都要急切加载的关系数。</target>
        </trans-unit>
        <trans-unit id="e7d25ed3c6f0210d3f6f56e56debdef06a81cab8" translate="yes" xml:space="preserve">
          <source>The relationships loaded on the model.</source>
          <target state="translated">模型上加载的关系。</target>
        </trans-unit>
        <trans-unit id="fb7d96639bd22d3f1dd60ed2855cc72cece4d17d" translate="yes" xml:space="preserve">
          <source>The relationships that should be eager loaded.</source>
          <target state="translated">应该急切装载的关系。</target>
        </trans-unit>
        <trans-unit id="f43d3cfedbfc7e31ebcdbcaa31d8367219432736" translate="yes" xml:space="preserve">
          <source>The relationships that should be touched on save.</source>
          <target state="translated">应该触及的关系保存。</target>
        </trans-unit>
        <trans-unit id="f48f20dc9a99fe46d638995db9051021a18ffb50" translate="yes" xml:space="preserve">
          <source>The repository instance.</source>
          <target state="translated">储存库实例。</target>
        </trans-unit>
        <trans-unit id="0290628eed4cf9f05965d03a3f63b5e7ba5e01e6" translate="yes" xml:space="preserve">
          <source>The request currently being dispatched.</source>
          <target state="translated">目前正在发送的请求。</target>
        </trans-unit>
        <trans-unit id="16cd0e6127f2b2c0da38cdb38d99f4298234d1b5" translate="yes" xml:space="preserve">
          <source>The request instance.</source>
          <target state="translated">请求实例。</target>
        </trans-unit>
        <trans-unit id="0e508174b4aa5a5bf0fb940197fd16418290c373" translate="yes" xml:space="preserve">
          <source>The resolved engine instances.</source>
          <target state="translated">解决的引擎实例。</target>
        </trans-unit>
        <trans-unit id="263b880247bac8bda5d3639243ef18b5cb7ed7eb" translate="yes" xml:space="preserve">
          <source>The resolved object instances.</source>
          <target state="translated">解决的对象实例。</target>
        </trans-unit>
        <trans-unit id="b7ca514d8a4692cad4731417b0756ecf1275ab12" translate="yes" xml:space="preserve">
          <source>The resource controller.</source>
          <target state="translated">资源控制器。</target>
        </trans-unit>
        <trans-unit id="56f60d2d0ee2d9172ad28e8b6e094f5b7caace53" translate="yes" xml:space="preserve">
          <source>The resource instance.</source>
          <target state="translated">资源实例。</target>
        </trans-unit>
        <trans-unit id="a95d6132a19bf75b0b6aaff23867371d166e5e24" translate="yes" xml:space="preserve">
          <source>The resource name.</source>
          <target state="translated">资源名称:</target>
        </trans-unit>
        <trans-unit id="bf011891c2177b36703816d90e75f2d2072e3b87" translate="yes" xml:space="preserve">
          <source>The resource options.</source>
          <target state="translated">资源选择:</target>
        </trans-unit>
        <trans-unit id="ecdd5344f0d0bc88ac377e9afed6b88830188429" translate="yes" xml:space="preserve">
          <source>The resource registrar.</source>
          <target state="translated">资源登记员;</target>
        </trans-unit>
        <trans-unit id="18f7638073d9c9c042d64634548cc9e1ae8943ce" translate="yes" xml:space="preserve">
          <source>The resource that this resource collects.</source>
          <target state="translated">本资源所收集的资源。</target>
        </trans-unit>
        <trans-unit id="368a409de12958befa5dce1336f79e9c9e53a178" translate="yes" xml:space="preserve">
          <source>The resource's registration status.</source>
          <target state="translated">资源的注册状态;</target>
        </trans-unit>
        <trans-unit id="fc8405290cd1dbfe9984bcdfaa8040afc301a7be" translate="yes" xml:space="preserve">
          <source>The response instance.</source>
          <target state="translated">响应实例。</target>
        </trans-unit>
        <trans-unit id="601ecb069cd20113a2fbfbc01aa7d5c00f4a2465" translate="yes" xml:space="preserve">
          <source>The response message.</source>
          <target state="translated">回复信息。</target>
        </trans-unit>
        <trans-unit id="164352520448d04206d3c52f17e7f82e87ac15dc" translate="yes" xml:space="preserve">
          <source>The response to delegate to.</source>
          <target state="translated">对委托的反应是:</target>
        </trans-unit>
        <trans-unit id="c46e5c096c954839dae212913abf0e66c72ea5f5" translate="yes" xml:space="preserve">
          <source>The results of &lt;a href=&quot;eloquent&quot;&gt;Eloquent&lt;/a&gt; queries are always returned as &lt;code&gt;Collection&lt;/code&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;eloquent&quot;&gt;口才&lt;/a&gt;查询的结果始终以 &lt;code&gt;Collection&lt;/code&gt; 实例的形式返回。</target>
        </trans-unit>
        <trans-unit id="e89ccf76734c773e099357ff32d1ed203045589b" translate="yes" xml:space="preserve">
          <source>The returned slice will preserve keys by default. If you do not wish to preserve the original keys, you can use the &lt;a href=&quot;#method-values&quot;&gt;&lt;code&gt;values&lt;/code&gt;&lt;/a&gt; method to reindex them.</source>
          <target state="translated">返回的切片将默认保留键。如果您不希望保留原始键，则可以使用&lt;a href=&quot;#method-values&quot;&gt; &lt;code&gt;values&lt;/code&gt; &lt;/a&gt;方法重新索引它们。</target>
        </trans-unit>
        <trans-unit id="a14154883b57e0c7b912f901032bff78f7e71482" translate="yes" xml:space="preserve">
          <source>The root namespace being applied to controller actions.</source>
          <target state="translated">应用于控制器动作的根名称空间。</target>
        </trans-unit>
        <trans-unit id="12d7248b5b63b0f50370c1fe342dfff1893a4bf8" translate="yes" xml:space="preserve">
          <source>The route URL generator instance.</source>
          <target state="translated">途径URL生成器实例。</target>
        </trans-unit>
        <trans-unit id="e4314c17af324483d9457a5618d6c73f931972f2" translate="yes" xml:space="preserve">
          <source>The route action array.</source>
          <target state="translated">途径行动数组。</target>
        </trans-unit>
        <trans-unit id="43594284ed9c99e26403f8c7bf94fbf14a35d0ac" translate="yes" xml:space="preserve">
          <source>The route collection instance.</source>
          <target state="translated">途径收集实例。</target>
        </trans-unit>
        <trans-unit id="6c4d429aef6dcb0a75a4c587813e6400e8929041" translate="yes" xml:space="preserve">
          <source>The route collection.</source>
          <target state="translated">途径收集。</target>
        </trans-unit>
        <trans-unit id="d12a8e106ea4940f34cc43c9258574f57ae31dc0" translate="yes" xml:space="preserve">
          <source>The route group attribute stack.</source>
          <target state="translated">途径组属性栈。</target>
        </trans-unit>
        <trans-unit id="a455aa3aa2749300af7a2f9fa84acd6a95434ca0" translate="yes" xml:space="preserve">
          <source>The route instance.</source>
          <target state="translated">途径实例。</target>
        </trans-unit>
        <trans-unit id="df66c11304009f1b54e125f8792abe4b667f8351" translate="yes" xml:space="preserve">
          <source>The route resolver callback.</source>
          <target state="translated">途径解析器的回调。</target>
        </trans-unit>
        <trans-unit id="3906436aa7329cdc1ee66acc6218655c856ea8b9" translate="yes" xml:space="preserve">
          <source>The route to redirect to if validation fails.</source>
          <target state="translated">验证失败时重定向到的路径。</target>
        </trans-unit>
        <trans-unit id="d24dce3024d5f1af716ce11fe35be7264b0f321f" translate="yes" xml:space="preserve">
          <source>The router allows you to register routes that respond to any HTTP verb:</source>
          <target state="translated">路由器允许你注册响应任何HTTP动词的路由。</target>
        </trans-unit>
        <trans-unit id="0465864a655c463a577b3c77df0b72b06e830975" translate="yes" xml:space="preserve">
          <source>The router instance used by the route.</source>
          <target state="translated">路由所使用的路由器实例。</target>
        </trans-unit>
        <trans-unit id="faa4bc3d702668e81503a764428cce9b603c0348" translate="yes" xml:space="preserve">
          <source>The router instance.</source>
          <target state="translated">路由器实例。</target>
        </trans-unit>
        <trans-unit id="6cc811c5e9481003ccadc11cd22103afb0283867" translate="yes" xml:space="preserve">
          <source>The rules to be applied to the data.</source>
          <target state="translated">对数据适用的规则;</target>
        </trans-unit>
        <trans-unit id="570a23552f38197d69e2a011de8ecb76ae5677a4" translate="yes" xml:space="preserve">
          <source>The schedule instance.</source>
          <target state="translated">附表实例。</target>
        </trans-unit>
        <trans-unit id="81b99f1fe8e457d4b8064a35b17a4be3d2224ad4" translate="yes" xml:space="preserve">
          <source>The scheduling mutex implementation.</source>
          <target state="translated">调度mutex的实现。</target>
        </trans-unit>
        <trans-unit id="7058245333e873938ae018da8b2f68e3cc3534dd" translate="yes" xml:space="preserve">
          <source>The schema builder supports several types of indexes. First, let's look at an example that specifies a column's values should be unique. To create the index, we can chain the &lt;code&gt;unique&lt;/code&gt; method onto the column definition:</source>
          <target state="translated">模式构建器支持多种类型的索引。首先，让我们看一个示例，该示例指定一列的值应唯一。要创建索引，我们可以将 &lt;code&gt;unique&lt;/code&gt; 方法链接到列定义上：</target>
        </trans-unit>
        <trans-unit id="a386f666e32958882381582f86a3d21257541764" translate="yes" xml:space="preserve">
          <source>The schema grammar implementation.</source>
          <target state="translated">模式语法的实现。</target>
        </trans-unit>
        <trans-unit id="f2a64cc6787dc789508b1e20276bb56a934a25b3" translate="yes" xml:space="preserve">
          <source>The schema grammar instance.</source>
          <target state="translated">模式语法实例。</target>
        </trans-unit>
        <trans-unit id="c67ab5019d90e90447a8fcbbdbb1bd654737438b" translate="yes" xml:space="preserve">
          <source>The schema table builder's &lt;code&gt;softDeletesTz&lt;/code&gt; method now accepts the column name as its first argument, while the &lt;code&gt;$precision&lt;/code&gt; has been moved to the second argument position:</source>
          <target state="translated">现在，模式表构建器的 &lt;code&gt;softDeletesTz&lt;/code&gt; 方法接受列名作为其第一个参数，而 &lt;code&gt;$precision&lt;/code&gt; 已移到第二个参数位置：</target>
        </trans-unit>
        <trans-unit id="a5daa9bae128676a36465ea436362153e47cd1d1" translate="yes" xml:space="preserve">
          <source>The search is done using a &quot;loose&quot; comparison, meaning a string with an integer value will be considered equal to an integer of the same value. To use &quot;strict&quot; comparison, pass &lt;code&gt;true&lt;/code&gt; as the second argument to the method:</source>
          <target state="translated">搜索使用&amp;ldquo;宽松&amp;rdquo;比较完成，这意味着具有整数值的字符串将被视为等于相同值的整数。要使用&amp;ldquo;严格&amp;rdquo;比较，请将 &lt;code&gt;true&lt;/code&gt; 作为第二个参数传递给方法：</target>
        </trans-unit>
        <trans-unit id="ce0905e4abdb850343d56e2f176dcfd9eb788b69" translate="yes" xml:space="preserve">
          <source>The second value passed to the &lt;code&gt;env&lt;/code&gt; function is the &quot;default value&quot;. This value will be used if no environment variable exists for the given key.</source>
          <target state="translated">传递给 &lt;code&gt;env&lt;/code&gt; 函数的第二个值是&amp;ldquo;默认值&amp;rdquo;。如果给定密钥不存在任何环境变量，则将使用此值。</target>
        </trans-unit>
        <trans-unit id="1bd05754b6ce6bfca0f28b161ee7ff587267b074" translate="yes" xml:space="preserve">
          <source>The serializable Closure instance.</source>
          <target state="translated">可序列化的Closure实例。</target>
        </trans-unit>
        <trans-unit id="abad29def428c274e9e432458e6b092003d55332" translate="yes" xml:space="preserve">
          <source>The service container fires an event each time it resolves an object. You may listen to this event using the &lt;code&gt;resolving&lt;/code&gt; method:</source>
          <target state="translated">服务容器在每次解析对象时都会触发一个事件。您可以使用 &lt;code&gt;resolving&lt;/code&gt; 方法来监听此事件：</target>
        </trans-unit>
        <trans-unit id="04d8c9727f91f339f25c94ff55f2ad1a99b4c713" translate="yes" xml:space="preserve">
          <source>The session &lt;code&gt;driver&lt;/code&gt; configuration option defines where session data will be stored for each request. Laravel ships with several great drivers out of the box:</source>
          <target state="translated">会话 &lt;code&gt;driver&lt;/code&gt; 配置选项定义每个请求的会话数据将存储在何处。Laravel开箱即用了一些出色的驱动程序：</target>
        </trans-unit>
        <trans-unit id="0294783c646bb296c15b37388845bf0ad918ad81" translate="yes" xml:space="preserve">
          <source>The session ID.</source>
          <target state="translated">会议ID。</target>
        </trans-unit>
        <trans-unit id="86b6ac08faffa1def8fbf6e2d869a7286b5809d1" translate="yes" xml:space="preserve">
          <source>The session attributes.</source>
          <target state="translated">会话属性。</target>
        </trans-unit>
        <trans-unit id="57161d1200f661bda65ef38b3db791a65474da62" translate="yes" xml:space="preserve">
          <source>The session configuration file is stored at &lt;code&gt;config/session.php&lt;/code&gt;. Be sure to review the options available to you in this file. By default, Laravel is configured to use the &lt;code&gt;file&lt;/code&gt; session driver, which will work well for many applications. In production applications, you may consider using the &lt;code&gt;memcached&lt;/code&gt; or &lt;code&gt;redis&lt;/code&gt; drivers for even faster session performance.</source>
          <target state="translated">会话配置文件存储在 &lt;code&gt;config/session.php&lt;/code&gt; 。确保查看此文件中可用的选项。默认情况下，Laravel配置为使用 &lt;code&gt;file&lt;/code&gt; 会话驱动程序，该驱动程序对于许多应用程序都可以很好地工作。在生产应用程序中，您可以考虑使用 &lt;code&gt;memcached&lt;/code&gt; 或 &lt;code&gt;redis&lt;/code&gt; 驱动程序以提高会话性能。</target>
        </trans-unit>
        <trans-unit id="91e236fb26b51e7fe36eb0d22aad3aa86c4437bd" translate="yes" xml:space="preserve">
          <source>The session handler implementation.</source>
          <target state="translated">会话处理程序的实现。</target>
        </trans-unit>
        <trans-unit id="d7e638c00c25a4feef58c4fd0f743467b64e59c4" translate="yes" xml:space="preserve">
          <source>The session manager.</source>
          <target state="translated">会期经理。</target>
        </trans-unit>
        <trans-unit id="884f1740f402897a2f164554c12b7dd3c84282c9" translate="yes" xml:space="preserve">
          <source>The session name.</source>
          <target state="translated">会议名称;</target>
        </trans-unit>
        <trans-unit id="adcd7b939db251de80585036622f87e72dd2279b" translate="yes" xml:space="preserve">
          <source>The session resolver callable.</source>
          <target state="translated">会话解析器可调用。</target>
        </trans-unit>
        <trans-unit id="ecc519636990ae2e0954fb3e16f4559d1c199dac" translate="yes" xml:space="preserve">
          <source>The session store instance.</source>
          <target state="translated">会话存储实例。</target>
        </trans-unit>
        <trans-unit id="c92af64a0fcb75ffc669012ff68d72ab5a2702bf" translate="yes" xml:space="preserve">
          <source>The session store will be returned if no value is passed to the function:</source>
          <target state="translated">如果没有向函数传递任何值,会话存储将被返回。</target>
        </trans-unit>
        <trans-unit id="2e929d5585d7e896e78b2c57df639b8515474223" translate="yes" xml:space="preserve">
          <source>The session used by the guard.</source>
          <target state="translated">警卫使用的会话。</target>
        </trans-unit>
        <trans-unit id="6a3b4eb0dd200d18724aa6b891c02d73281760af" translate="yes" xml:space="preserve">
          <source>The signatures of the &lt;code&gt;make&lt;/code&gt; and &lt;code&gt;forever&lt;/code&gt; methods of the &lt;code&gt;Illuminate\Contracts\Cookie\Factory&lt;/code&gt; interface &lt;a href=&quot;https://github.com/laravel/framework/pull/23200&quot;&gt;have been changed&lt;/a&gt;. If you are implementing this interface, you should update these methods in your implementation.</source>
          <target state="translated">&lt;code&gt;Illuminate\Contracts\Cookie\Factory&lt;/code&gt; 界面的 &lt;code&gt;make&lt;/code&gt; 和 &lt;code&gt;forever&lt;/code&gt; 方法的签名&lt;a href=&quot;https://github.com/laravel/framework/pull/23200&quot;&gt;已更改&lt;/a&gt;。如果要实现此接口，则应在实现中更新这些方法。</target>
        </trans-unit>
        <trans-unit id="d59c8151600595473a9e55c3b69f4c14dc2e4029" translate="yes" xml:space="preserve">
          <source>The simplest way to create a client is using the &lt;code&gt;passport:client&lt;/code&gt; Artisan command. This command may be used to create your own clients for testing your OAuth2 functionality. When you run the &lt;code&gt;client&lt;/code&gt; command, Passport will prompt you for more information about your client and will provide you with a client ID and secret:</source>
          <target state="translated">创建客户端的最简单方法是使用 &lt;code&gt;passport:client&lt;/code&gt; Artisan命令。此命令可用于创建自己的客户端以测试OAuth2功能。当您运行 &lt;code&gt;client&lt;/code&gt; 命令时，Passport会提示您输入有关客户机的更多信息，并将为您提供客户机ID和密码：</target>
        </trans-unit>
        <trans-unit id="ea90c701f257c730f923f4d607874a7d268ef754" translate="yes" xml:space="preserve">
          <source>The simplest way to implement a custom, HTTP request based authentication system is by using the &lt;code&gt;Auth::viaRequest&lt;/code&gt; method. This method allows you to quickly define your authentication process using a single Closure.</source>
          <target state="translated">实现基于HTTP请求的自定义身份验证系统的最简单方法是使用 &lt;code&gt;Auth::viaRequest&lt;/code&gt; 方法。此方法使您可以使用单个Closure快速定义身份验证过程。</target>
        </trans-unit>
        <trans-unit id="79d700d475ad702f4044cb1bebf2b4ebc8a52645" translate="yes" xml:space="preserve">
          <source>The singleton instance of the loader.</source>
          <target state="translated">loader的单人实例。</target>
        </trans-unit>
        <trans-unit id="fab8ddb58e362e0f813cce9ab58891bd9732bf56" translate="yes" xml:space="preserve">
          <source>The size related validation rules.</source>
          <target state="translated">尺寸相关的验证规则。</target>
        </trans-unit>
        <trans-unit id="605630b9691153511785ccc54cb7a21860c87180" translate="yes" xml:space="preserve">
          <source>The slot contents for the component.</source>
          <target state="translated">槽的内容。</target>
        </trans-unit>
        <trans-unit id="2d1871832d6b1b3bc8339dca6aafb59eaa2a1b5d" translate="yes" xml:space="preserve">
          <source>The socket ID for the user that raised the event.</source>
          <target state="translated">触发事件的用户的socket ID。</target>
        </trans-unit>
        <trans-unit id="8fc290930ccdc8a7b287fe1315bd018e78efddd1" translate="yes" xml:space="preserve">
          <source>The stack of concretions currently being built.</source>
          <target state="translated">目前正在建设的堆积混凝土。</target>
        </trans-unit>
        <trans-unit id="4b92f0bf1d8b4ec4237a0cbc2344c976b13a204e" translate="yes" xml:space="preserve">
          <source>The stack of in-progress loops.</source>
          <target state="translated">正在进行的循环的堆栈。</target>
        </trans-unit>
        <trans-unit id="8038d0433773bf60b25f8b2e7ca2294f6745e69f" translate="yes" xml:space="preserve">
          <source>The stack of in-progress push sections.</source>
          <target state="translated">正在进行中的推送部分的堆栈。</target>
        </trans-unit>
        <trans-unit id="d39bd07a9c764bbdc84fd825c9f7bd336a38618d" translate="yes" xml:space="preserve">
          <source>The stack of in-progress sections.</source>
          <target state="translated">正在进行中的部分的堆栈。</target>
        </trans-unit>
        <trans-unit id="ebd9c42853a29668af47d49aad93db273d858e71" translate="yes" xml:space="preserve">
          <source>The states to apply.</source>
          <target state="translated">各州申请。</target>
        </trans-unit>
        <trans-unit id="c207e8c763ad759dd13455d9527eb1762978a1b5" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;macro&lt;/code&gt; method allows you to add methods to the &lt;code&gt;Collection&lt;/code&gt; class at run time. Refer to the documentation on &lt;a href=&quot;#extending-collections&quot;&gt;extending collections&lt;/a&gt; for more information.</source>
          <target state="translated">静态 &lt;code&gt;macro&lt;/code&gt; 方法允许您在运行时将方法添加到 &lt;code&gt;Collection&lt;/code&gt; 类。有关更多信息，请参阅&lt;a href=&quot;#extending-collections&quot;&gt;扩展集合&lt;/a&gt;的文档。</target>
        </trans-unit>
        <trans-unit id="9ea08eec7738c3c976ac9e2159f5771903109ba9" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;make&lt;/code&gt; method creates a new collection instance. See the &lt;a href=&quot;#creating-collections&quot;&gt;Creating Collections&lt;/a&gt; section.</source>
          <target state="translated">静态 &lt;code&gt;make&lt;/code&gt; 方法创建一个新的集合实例。请参阅&lt;a href=&quot;#creating-collections&quot;&gt;创建集合&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="000b939d44ff6405366f72b958c90793e21826a4" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;times&lt;/code&gt; method creates a new collection by invoking the callback a given amount of times:</source>
          <target state="translated">静态 &lt;code&gt;times&lt;/code&gt; 方法通过调用给定次数的回调来创建新集合：</target>
        </trans-unit>
        <trans-unit id="9469ee9100967bd5e14ce083001fc58b16e2b4f4" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;unwrap&lt;/code&gt; method returns the collection's underlying items from the given value when applicable:</source>
          <target state="translated">静态 &lt;code&gt;unwrap&lt;/code&gt; 方法在适用时从给定值返回集合的基础项：</target>
        </trans-unit>
        <trans-unit id="351963f9964f48652441cde6fbab1a66f4ae4866" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;wrap&lt;/code&gt; method wraps the given value in a collection when applicable:</source>
          <target state="translated">如果适用，静态 &lt;code&gt;wrap&lt;/code&gt; 方法会将给定值包装在集合中：</target>
        </trans-unit>
        <trans-unit id="3e1bb0172b2343d1e22fc96a472fede0f2a29f44" translate="yes" xml:space="preserve">
          <source>The status code to use for the response.</source>
          <target state="translated">用于响应的状态代码。</target>
        </trans-unit>
        <trans-unit id="ab516660be008eab1ea7722ad92001711b12c0c7" translate="yes" xml:space="preserve">
          <source>The storage engine that should be used for the table.</source>
          <target state="translated">表应该使用的存储引擎。</target>
        </trans-unit>
        <trans-unit id="a74693e7d566223803fcb4ac643b0d5a409e1f5a" translate="yes" xml:space="preserve">
          <source>The storage format of the model's date columns.</source>
          <target state="translated">模型的日期列的存储格式。</target>
        </trans-unit>
        <trans-unit id="58d00d23ebef7e4b18f49156da48b1f9044dd2f3" translate="yes" xml:space="preserve">
          <source>The streamed content of the response.</source>
          <target state="translated">响应的流媒体内容。</target>
        </trans-unit>
        <trans-unit id="92f5b66fce4d57ca46c4301a2f56e395878b52bb" translate="yes" xml:space="preserve">
          <source>The string under validation.</source>
          <target state="translated">正在验证的字符串。</target>
        </trans-unit>
        <trans-unit id="07fca087272bfb1228ca05e1b9c6b2e880ee0a46" translate="yes" xml:space="preserve">
          <source>The subject of the message.</source>
          <target state="translated">信息的主题;</target>
        </trans-unit>
        <trans-unit id="2dfe9b67a6294019a5ca9507a49ba9c03554e6f1" translate="yes" xml:space="preserve">
          <source>The subject of the notification.</source>
          <target state="translated">通知书的主题;</target>
        </trans-unit>
        <trans-unit id="5aedf455f4444ff3e0d1252119d24d7f36685ac9" translate="yes" xml:space="preserve">
          <source>The subscriber classes to register.</source>
          <target state="translated">要注册的用户类。</target>
        </trans-unit>
        <trans-unit id="72efd8976f8b653257fb21c090272816e5b7870f" translate="yes" xml:space="preserve">
          <source>The table associated with the model.</source>
          <target state="translated">与模型相关的表格。</target>
        </trans-unit>
        <trans-unit id="b6636efce945f5b844f6606ce5e3b686d0f1a55c" translate="yes" xml:space="preserve">
          <source>The table component allows you to transform a Markdown table into an HTML table. The component accepts the Markdown table as its content. Table column alignment is supported using the default Markdown table alignment syntax:</source>
          <target state="translated">表组件允许您将一个Markdown表转换为一个HTML表。该组件接受Markdown表格作为其内容。使用默认的Markdown表格对齐语法支持表格列的对齐。</target>
        </trans-unit>
        <trans-unit id="ac480daa8961851dade10b123fa7553c8828f61c" translate="yes" xml:space="preserve">
          <source>The table containing the users.</source>
          <target state="translated">包含用户的表格。</target>
        </trans-unit>
        <trans-unit id="70671f05af37162c8d962e5cfc1ddad2830aa79a" translate="yes" xml:space="preserve">
          <source>The table headers for the command.</source>
          <target state="translated">命令的表头。</target>
        </trans-unit>
        <trans-unit id="a647d0ac66871217262d0eda401391f559a35c64" translate="yes" xml:space="preserve">
          <source>The table joins for the query.</source>
          <target state="translated">查询的表连接。</target>
        </trans-unit>
        <trans-unit id="9010826d40f8e19e4307e63c14b94fb45c8924cd" translate="yes" xml:space="preserve">
          <source>The table prefix for the connection.</source>
          <target state="translated">连接的表前缀。</target>
        </trans-unit>
        <trans-unit id="ff34db9a5246ad70031dc50f2490a2cb456c32e4" translate="yes" xml:space="preserve">
          <source>The table the blueprint describes.</source>
          <target state="translated">蓝图所描述的表格。</target>
        </trans-unit>
        <trans-unit id="28229fa2f11ef37fd72a1ea3db398999cfd869c6" translate="yes" xml:space="preserve">
          <source>The table the join clause is joining to.</source>
          <target state="translated">连接子句所连接的表。</target>
        </trans-unit>
        <trans-unit id="a1c808e39a1d0802e86ea84272bab211b871a5ea" translate="yes" xml:space="preserve">
          <source>The table to run the query against.</source>
          <target state="translated">要对其进行查询的表。</target>
        </trans-unit>
        <trans-unit id="0f597a9d03181cb363c716a58101aa481ce2e583" translate="yes" xml:space="preserve">
          <source>The table which the query is targeting.</source>
          <target state="translated">查询的目标表。</target>
        </trans-unit>
        <trans-unit id="f9f57e81a603df6cc58d93c504709a35203899ae" translate="yes" xml:space="preserve">
          <source>The tag names.</source>
          <target state="translated">标签名称。</target>
        </trans-unit>
        <trans-unit id="f7ac75ddb7d42cf1ed0db2229a0d46c47fac2a21" translate="yes" xml:space="preserve">
          <source>The tag set instance.</source>
          <target state="translated">标签集实例。</target>
        </trans-unit>
        <trans-unit id="e6e30172d78007afa1d8eb6f5f7a70701907efb7" translate="yes" xml:space="preserve">
          <source>The tags that were assigned to the key.</source>
          <target state="translated">分配给钥匙的标签。</target>
        </trans-unit>
        <trans-unit id="8c8ec9420a8341e205092121dace68183dc6ae22" translate="yes" xml:space="preserve">
          <source>The tags to publish.</source>
          <target state="translated">要发布的标签。</target>
        </trans-unit>
        <trans-unit id="21426025f08b38e4c8e99f9fd019ee83a46f06f4" translate="yes" xml:space="preserve">
          <source>The target being tapped.</source>
          <target state="translated">被挖掘的目标。</target>
        </trans-unit>
        <trans-unit id="d4da7a593b36855a0518d6f27745a74332d8fede" translate="yes" xml:space="preserve">
          <source>The temporary file resource.</source>
          <target state="translated">临时文件资源。</target>
        </trans-unit>
        <trans-unit id="d29ff031bedf05275f0039e818893f2ce1dab694" translate="yes" xml:space="preserve">
          <source>The test being run.</source>
          <target state="translated">正在进行的测试。</target>
        </trans-unit>
        <trans-unit id="7f7d94ab637f05b8821fafe07a855f689ebe8ce4" translate="yes" xml:space="preserve">
          <source>The text / label for the action.</source>
          <target state="translated">动作的文本/标签。</target>
        </trans-unit>
        <trans-unit id="dc176e2faba262f9929bdb0253df0827fa4ff8fe" translate="yes" xml:space="preserve">
          <source>The text content of the message.</source>
          <target state="translated">信息的文字内容。</target>
        </trans-unit>
        <trans-unit id="78ecec34dc389b6cf3b91762e1fcc609e2741a7a" translate="yes" xml:space="preserve">
          <source>The throttled request.</source>
          <target state="translated">节流的请求。</target>
        </trans-unit>
        <trans-unit id="ff925b4ac5b682308ad51747d9142199b714e9f1" translate="yes" xml:space="preserve">
          <source>The timestamp indicating when the job should timeout.</source>
          <target state="translated">表示作业应超时的时间戳。</target>
        </trans-unit>
        <trans-unit id="b31512cbd68c54dad88a9e89b51425ebb5a34758" translate="yes" xml:space="preserve">
          <source>The timestamp of the end of the current duration.</source>
          <target state="translated">当前持续时间结束的时间戳。</target>
        </trans-unit>
        <trans-unit id="b92f0a4703fc19402ceb9c0cbb466e700c82d8e0" translate="yes" xml:space="preserve">
          <source>The timezone the date should be evaluated on.</source>
          <target state="translated">评估日期的时区。</target>
        </trans-unit>
        <trans-unit id="4822bc10088131f2e2ada0734ad38e425aada932" translate="yes" xml:space="preserve">
          <source>The title field of the attachment field.</source>
          <target state="translated">附件栏的标题栏。</target>
        </trans-unit>
        <trans-unit id="1d4072edcdf635d0ee832538ca8012af02ce09fc" translate="yes" xml:space="preserve">
          <source>The token database table.</source>
          <target state="translated">令牌数据库表。</target>
        </trans-unit>
        <trans-unit id="ce4a944aaa46dea95371afcc79aa0c58c866b85f" translate="yes" xml:space="preserve">
          <source>The total number of items before slicing.</source>
          <target state="translated">切片前的总数量。</target>
        </trans-unit>
        <trans-unit id="a5f4249eec9da9470e388c3cd7f2bf76586dd5a7" translate="yes" xml:space="preserve">
          <source>The total number of items in the array being iterated.</source>
          <target state="translated">迭代数组中的项目总数。</target>
        </trans-unit>
        <trans-unit id="49bbb67f8dc2f8d1fa0512778dd06bee98082949" translate="yes" xml:space="preserve">
          <source>The translation replacements for the translation being rendered.</source>
          <target state="translated">正在渲染的译文的翻译替换。</target>
        </trans-unit>
        <trans-unit id="ee8e29d48de7dc939a36b7d4f9d8f93a595d543a" translate="yes" xml:space="preserve">
          <source>The type of class being generated.</source>
          <target state="translated">正在生成的类的类型。</target>
        </trans-unit>
        <trans-unit id="2d24cc5fcb0f5b7079e14d397702c0120c738448" translate="yes" xml:space="preserve">
          <source>The type of join being performed.</source>
          <target state="translated">正在进行的连接类型。</target>
        </trans-unit>
        <trans-unit id="5dd6bca065f5d4ecd689d277be205f971b1146a1" translate="yes" xml:space="preserve">
          <source>The type of the polymorphic relation.</source>
          <target state="translated">多态关系的类型。</target>
        </trans-unit>
        <trans-unit id="e837d173527d3e77cbb6b1090734ad39a2225065" translate="yes" xml:space="preserve">
          <source>The underlying container instance.</source>
          <target state="translated">底层容器实例。</target>
        </trans-unit>
        <trans-unit id="9ad916de6e07699a45d35acdb5612d7cad70d299" translate="yes" xml:space="preserve">
          <source>The underlying job record.</source>
          <target state="translated">基本工作记录。</target>
        </trans-unit>
        <trans-unit id="8ab3a9e0a6b67e9e6e335efc87f28772701d2a28" translate="yes" xml:space="preserve">
          <source>The underlying logger implementation.</source>
          <target state="translated">底层记录仪的实现。</target>
        </trans-unit>
        <trans-unit id="b0c437bd2beab584bc144487c106f633dfeab59d" translate="yes" xml:space="preserve">
          <source>The underlying object.</source>
          <target state="translated">基础对象。</target>
        </trans-unit>
        <trans-unit id="f301c22722a1a8356b09a117c658be20c34d02f4" translate="yes" xml:space="preserve">
          <source>The underlying queue job instance.</source>
          <target state="translated">底层队列作业实例。</target>
        </trans-unit>
        <trans-unit id="b988f2134cf971ad4817b031091500f179c52985" translate="yes" xml:space="preserve">
          <source>The underlying resource.</source>
          <target state="translated">基本资源。</target>
        </trans-unit>
        <trans-unit id="17e75b55666e5d5ae74cb918d824095115af2efe" translate="yes" xml:space="preserve">
          <source>The underlying response instance.</source>
          <target state="translated">基础的响应实例。</target>
        </trans-unit>
        <trans-unit id="f1dfb580510acd5c8f3435e1ab8bb2e5ea04f3aa" translate="yes" xml:space="preserve">
          <source>The unique identifier for the notification.</source>
          <target state="translated">通知的唯一标识符。</target>
        </trans-unit>
        <trans-unit id="e5752ae046b5fbc7351f998c7f29237a2ed74ca7" translate="yes" xml:space="preserve">
          <source>The unique identifier of the model.</source>
          <target state="translated">模型的唯一标识符。</target>
        </trans-unit>
        <trans-unit id="9531c600853530f8b4223dbfd5769ad70e0d84ae" translate="yes" xml:space="preserve">
          <source>The unused &lt;code&gt;options&lt;/code&gt; argument of the &lt;code&gt;Illuminate\Foundation\Application&lt;/code&gt; class' &lt;code&gt;register&lt;/code&gt; method has been removed. If you are overriding this method, you should update your method's signature:</source>
          <target state="translated">&lt;code&gt;Illuminate\Foundation\Application&lt;/code&gt; 类的 &lt;code&gt;register&lt;/code&gt; 方法的未使用的 &lt;code&gt;options&lt;/code&gt; 参数已被删除。如果要覆盖此方法，则应更新方法的签名：</target>
        </trans-unit>
        <trans-unit id="76bbb754bf9cab4e9ebcc97d9224c60b8790d4d1" translate="yes" xml:space="preserve">
          <source>The user emoji icon for the message.</source>
          <target state="translated">消息的用户表情图标。</target>
        </trans-unit>
        <trans-unit id="6d86f1ff2c7e67cba710d84c1174313c189623a4" translate="yes" xml:space="preserve">
          <source>The user has been authenticated.</source>
          <target state="translated">用户已通过认证。</target>
        </trans-unit>
        <trans-unit id="6f334a7b748574a902e38177597fba429d30f87f" translate="yes" xml:space="preserve">
          <source>The user has been registered.</source>
          <target state="translated">该用户已注册。</target>
        </trans-unit>
        <trans-unit id="03c3f3fd14d96d990f6ceb432de3b6e717cd57c5" translate="yes" xml:space="preserve">
          <source>The user has logged out of the application.</source>
          <target state="translated">用户已经注销了应用程序。</target>
        </trans-unit>
        <trans-unit id="478709e557cf90ed3bbe37741eec388ead3ca14e" translate="yes" xml:space="preserve">
          <source>The user image icon for the message.</source>
          <target state="translated">信息的用户图像图标。</target>
        </trans-unit>
        <trans-unit id="0959d1e85098f21adafb87770cc296a926901dfa" translate="yes" xml:space="preserve">
          <source>The user provider implementation.</source>
          <target state="translated">用户提供者实施。</target>
        </trans-unit>
        <trans-unit id="abcfedd81fa68455cfb0ec897c75b5cc0995d3a9" translate="yes" xml:space="preserve">
          <source>The user resolver callable.</source>
          <target state="translated">用户解析器可调用。</target>
        </trans-unit>
        <trans-unit id="f2785046c757357d117b5a8c8e29e47c0d9096d8" translate="yes" xml:space="preserve">
          <source>The user resolver callback.</source>
          <target state="translated">用户解析器回调。</target>
        </trans-unit>
        <trans-unit id="7f3e851e6d656f66917aa4f25b66c027b5829d91" translate="yes" xml:space="preserve">
          <source>The user resolver shared by various services.</source>
          <target state="translated">各种服务共享的用户解析器。</target>
        </trans-unit>
        <trans-unit id="b03b1819d6ab78080d4c4b1cd7eac731ae6209c7" translate="yes" xml:space="preserve">
          <source>The user the attempter was trying to authenticate as.</source>
          <target state="translated">尝试者试图认证的用户。</target>
        </trans-unit>
        <trans-unit id="991c31171fd879bb8b9501eac26c1d9cd7555318" translate="yes" xml:space="preserve">
          <source>The user the command should run as.</source>
          <target state="translated">命令应该以用户的身份运行。</target>
        </trans-unit>
        <trans-unit id="33e7f66129d63caf8084a77ba47aaceb084ec7f8" translate="yes" xml:space="preserve">
          <source>The user we last attempted to retrieve.</source>
          <target state="translated">我们最后尝试检索的用户。</target>
        </trans-unit>
        <trans-unit id="eb011f8f964fbc3f1d8226e0def127773755ba07" translate="yes" xml:space="preserve">
          <source>The user.</source>
          <target state="translated">该用户。</target>
        </trans-unit>
        <trans-unit id="a7509c52848002be31db1d30395a03ffa3e89d15" translate="yes" xml:space="preserve">
          <source>The username to send the message from.</source>
          <target state="translated">发送消息的用户名。</target>
        </trans-unit>
        <trans-unit id="17c65b2c84ac03320eef6cb97e212a61a13cc57d" translate="yes" xml:space="preserve">
          <source>The validation error message.</source>
          <target state="translated">验证错误信息。</target>
        </trans-unit>
        <trans-unit id="04ec0b5ea4de5f500778e64fb8042731a4ffbeee" translate="yes" xml:space="preserve">
          <source>The validation rules that imply the field is required.</source>
          <target state="translated">暗示该字段为必填字段的验证规则。</target>
        </trans-unit>
        <trans-unit id="52cea3c083bf0077073af1e40ab30369af7010a1" translate="yes" xml:space="preserve">
          <source>The validation rules that may be applied to files.</source>
          <target state="translated">可适用于文件的验证规则;</target>
        </trans-unit>
        <trans-unit id="a214dccaffafc13138095ef01bde1dade3d8b141" translate="yes" xml:space="preserve">
          <source>The validation rules which depend on other fields as parameters.</source>
          <target state="translated">依靠其他字段作为参数的验证规则。</target>
        </trans-unit>
        <trans-unit id="e79792af26bb12e0110123aa3c13fa12cf55e007" translate="yes" xml:space="preserve">
          <source>The validator also allows you to attach callbacks to be run after validation is completed. This allows you to easily perform further validation and even add more error messages to the message collection. To get started, use the &lt;code&gt;after&lt;/code&gt; method on a validator instance:</source>
          <target state="translated">验证程序还允许您附加要在验证完成后运行的回调。这使您可以轻松地执行进一步的验证，甚至可以将更多错误消息添加到消息集合中。首先，在验证器实例上使用 &lt;code&gt;after&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="1efad989d3ba7a320ef01cb90a05a29f0b4171c1" translate="yes" xml:space="preserve">
          <source>The validator instance.</source>
          <target state="translated">验证器实例。</target>
        </trans-unit>
        <trans-unit id="17910fd1025c8285b31c86579bf160394803ed67" translate="yes" xml:space="preserve">
          <source>The validators used by the routes.</source>
          <target state="translated">途径使用的验证器。</target>
        </trans-unit>
        <trans-unit id="6daf4a5f6df348781c1d439c71c7c374f3d314ec" translate="yes" xml:space="preserve">
          <source>The value for &lt;code&gt;$carry&lt;/code&gt; on the first iteration is &lt;code&gt;null&lt;/code&gt;; however, you may specify its initial value by passing a second argument to &lt;code&gt;reduce&lt;/code&gt;:</source>
          <target state="translated">第一次迭代中 &lt;code&gt;$carry&lt;/code&gt; 的值为 &lt;code&gt;null&lt;/code&gt; ；但是，您可以通过传递第二个参数来 &lt;code&gt;reduce&lt;/code&gt; 来指定其初始值：</target>
        </trans-unit>
        <trans-unit id="e9048ea9673d1ad8bdccecb637db42ea4310c7eb" translate="yes" xml:space="preserve">
          <source>The value is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">该值为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="157d1e8a08dca776dd2e01cb74459d2b6b870275" translate="yes" xml:space="preserve">
          <source>The value is an empty array or empty &lt;code&gt;Countable&lt;/code&gt; object.</source>
          <target state="translated">该值是一个空数组或一个空 &lt;code&gt;Countable&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="061868d471368e7000b71c52038b35dccf93e542" translate="yes" xml:space="preserve">
          <source>The value is an empty string.</source>
          <target state="translated">该值是一个空字符串。</target>
        </trans-unit>
        <trans-unit id="0d7e7d59ae6444a87afbe50c77ba904921dc2e88" translate="yes" xml:space="preserve">
          <source>The value is an integer where 1 is the highest priority and 5 is the lowest.</source>
          <target state="translated">该值是一个整数,其中1为最高优先级,5为最低优先级。</target>
        </trans-unit>
        <trans-unit id="711cb6f84f883c1ae7df775cf9aed799b759099b" translate="yes" xml:space="preserve">
          <source>The value is an uploaded file with no path.</source>
          <target state="translated">该值是一个上传的文件,没有路径。</target>
        </trans-unit>
        <trans-unit id="6888c5949df1c7a77a3be83f0305f656b8d817ad" translate="yes" xml:space="preserve">
          <source>The value of the expression.</source>
          <target state="translated">表达的价值。</target>
        </trans-unit>
        <trans-unit id="38800f33ee4efa9ac81c649d15abdb07a7fce567" translate="yes" xml:space="preserve">
          <source>The value of the polymorphic relation.</source>
          <target state="translated">多态关系的价值。</target>
        </trans-unit>
        <trans-unit id="1601801c27c07c18ca583c7a2415e03c7ebcb18c" translate="yes" xml:space="preserve">
          <source>The value that was retrieved.</source>
          <target state="translated">检索到的数值。</target>
        </trans-unit>
        <trans-unit id="9e81d39ebe7a2b1327a1239a7373073d3bc53cdd" translate="yes" xml:space="preserve">
          <source>The value that was written.</source>
          <target state="translated">所写的数值。</target>
        </trans-unit>
        <trans-unit id="39ff959a4cb1cc7c2f334da6aa7539edae71cf71" translate="yes" xml:space="preserve">
          <source>The vendor path.</source>
          <target state="translated">厂商路径。</target>
        </trans-unit>
        <trans-unit id="707b34c0cbc7dc0182476c83bbde4465a1706f60" translate="yes" xml:space="preserve">
          <source>The verbs used in the resource URIs.</source>
          <target state="translated">资源URI中使用的动词。</target>
        </trans-unit>
        <trans-unit id="9caa59f20b33fc4532537e76434a837cf7ac16c0" translate="yes" xml:space="preserve">
          <source>The verified user.</source>
          <target state="translated">经核实的用户。</target>
        </trans-unit>
        <trans-unit id="fef9b7ec0888871040e13ad692f156c04a37a7c5" translate="yes" xml:space="preserve">
          <source>The view composer events.</source>
          <target state="translated">查看作曲家事件。</target>
        </trans-unit>
        <trans-unit id="1b4f34f5b9982381fb6984f4ee1e48098080e706" translate="yes" xml:space="preserve">
          <source>The view data for the message.</source>
          <target state="translated">信息的视图数据。</target>
        </trans-unit>
        <trans-unit id="6104c14e27801982d3214fa3e60787f0f87ecddb" translate="yes" xml:space="preserve">
          <source>The view factory implementation.</source>
          <target state="translated">视图工厂的实施。</target>
        </trans-unit>
        <trans-unit id="ad8822413f8c1b262c11320d8f4aad7a7388d6c6" translate="yes" xml:space="preserve">
          <source>The view factory instance.</source>
          <target state="translated">视图工厂实例。</target>
        </trans-unit>
        <trans-unit id="bb00fcd493cdb0b4f8520e12316f3dc732a8a332" translate="yes" xml:space="preserve">
          <source>The view factory resolver callback.</source>
          <target state="translated">视图工厂解析器回调。</target>
        </trans-unit>
        <trans-unit id="50a56ee78bc61de00eb3c7710dcc642c7046c946" translate="yes" xml:space="preserve">
          <source>The view finder implementation.</source>
          <target state="translated">视图查找器的实现。</target>
        </trans-unit>
        <trans-unit id="c3cb48db5dc1a414221a9fa624829dc51ab42ca2" translate="yes" xml:space="preserve">
          <source>The view that was last to be rendered.</source>
          <target state="translated">最后要提出的意见。</target>
        </trans-unit>
        <trans-unit id="17be7bff4f0b2ea81b770722336aa0165c31c70d" translate="yes" xml:space="preserve">
          <source>The view to be rendered.</source>
          <target state="translated">要呈现的景象。</target>
        </trans-unit>
        <trans-unit id="ec784a65f31d480cb11e3f916c7f1125f1dadfc8" translate="yes" xml:space="preserve">
          <source>The view to use for the message.</source>
          <target state="translated">信息的视图。</target>
        </trans-unit>
        <trans-unit id="fa951d6479d905db5220de2c424926ef0ae15958" translate="yes" xml:space="preserve">
          <source>The views that need to be exported.</source>
          <target state="translated">需要导出的视图。</target>
        </trans-unit>
        <trans-unit id="e824bb682736e368dc8df6013d8007d1019fbfbf" translate="yes" xml:space="preserve">
          <source>The where constraints for the query.</source>
          <target state="translated">查询的where约束条件。</target>
        </trans-unit>
        <trans-unit id="86305091cca3d9a38fa0c3ec56065049f12fb99f" translate="yes" xml:space="preserve">
          <source>The wildcard listeners.</source>
          <target state="translated">通配符的听众。</target>
        </trans-unit>
        <trans-unit id="ddfa44fe69f849ba9e7115ea619e94b5d521199d" translate="yes" xml:space="preserve">
          <source>The working path to regenerate from.</source>
          <target state="translated">的工作路径,以再生从。</target>
        </trans-unit>
        <trans-unit id="161310574c5a47f885cd6467b63a3e77674cee01" translate="yes" xml:space="preserve">
          <source>Then attach this middleware to a route:</source>
          <target state="translated">然后将这个中间件附加到路由上。</target>
        </trans-unit>
        <trans-unit id="39c210aeb4928d0d9a2d41f1886b73cb2abc2349" translate="yes" xml:space="preserve">
          <source>Then you should add the following Braintree SDK calls to your &lt;code&gt;AppServiceProvider&lt;/code&gt; service provider's &lt;code&gt;boot&lt;/code&gt; method:</source>
          <target state="translated">然后，应将以下Braintree SDK调用添加到 &lt;code&gt;AppServiceProvider&lt;/code&gt; 服务提供商的 &lt;code&gt;boot&lt;/code&gt; 方法中：</target>
        </trans-unit>
        <trans-unit id="b131abe2615203f387c2a03a60226568c1e3edf6" translate="yes" xml:space="preserve">
          <source>Then, once you have created the &lt;code&gt;meta&lt;/code&gt; tag, you can instruct a library like jQuery to automatically add the token to all request headers. This provides simple, convenient CSRF protection for your AJAX based applications:</source>
          <target state="translated">然后，一旦创建了 &lt;code&gt;meta&lt;/code&gt; 标签，就可以指示jQuery之类的库将令牌自动添加到所有请求标头中。这为基于AJAX的应用程序提供了简单便捷的CSRF保护：</target>
        </trans-unit>
        <trans-unit id="d8834ae3158eab3458ec6a4b61cecb4d659d5abf" translate="yes" xml:space="preserve">
          <source>Then, update any reference to the old directories in your &lt;code&gt;webpack.mix.js&lt;/code&gt; file:</source>
          <target state="translated">然后，更新对 &lt;code&gt;webpack.mix.js&lt;/code&gt; 文件中旧目录的任何引用：</target>
        </trans-unit>
        <trans-unit id="f46ab02d9a619a36b2686f2513a4b155775a6713" translate="yes" xml:space="preserve">
          <source>Then, when configuring the mailable within its &lt;code&gt;build&lt;/code&gt; method, call the &lt;code&gt;markdown&lt;/code&gt; method instead of the &lt;code&gt;view&lt;/code&gt; method. The &lt;code&gt;markdown&lt;/code&gt; methods accepts the name of the Markdown template and an optional array of data to make available to the template:</source>
          <target state="translated">然后，在其 &lt;code&gt;build&lt;/code&gt; 方法中配置mailable时，请调用 &lt;code&gt;markdown&lt;/code&gt; 方法而不是 &lt;code&gt;view&lt;/code&gt; 方法。该 &lt;code&gt;markdown&lt;/code&gt; 方法接受降价模板和数据提供给模板的数组（可选）的名称：</target>
        </trans-unit>
        <trans-unit id="2b5f8400f8cf2eecc92b3cdd65e0feedb0a826a6" translate="yes" xml:space="preserve">
          <source>Then, when running your &lt;a href=&quot;#running-the-queue-worker&quot;&gt;queue worker&lt;/a&gt;, you should specify the maximum number of times a job should be attempted using the &lt;code&gt;--tries&lt;/code&gt; switch on the &lt;code&gt;queue:work&lt;/code&gt; command. If you do not specify a value for the &lt;code&gt;--tries&lt;/code&gt; option, jobs will be attempted indefinitely:</source>
          <target state="translated">然后，在运行&lt;a href=&quot;#running-the-queue-worker&quot;&gt;队列工作器时&lt;/a&gt;，应使用 &lt;code&gt;queue:work&lt;/code&gt; 命令上的 &lt;code&gt;--tries&lt;/code&gt; 开关指定尝试作业的最大次数。如果未为 &lt;code&gt;--tries&lt;/code&gt; 选项指定值，则将无限期尝试作业：</target>
        </trans-unit>
        <trans-unit id="4d6b7bdb0dde82bf20180d4ff9db3d841472c5af" translate="yes" xml:space="preserve">
          <source>Then, you may use the &lt;code&gt;logoutOtherDevices&lt;/code&gt; method on the &lt;code&gt;Auth&lt;/code&gt; facade. This method requires the user to provide their current password, which your application should accept through an input form:</source>
          <target state="translated">然后，您可以在 &lt;code&gt;Auth&lt;/code&gt; 外观上使用 &lt;code&gt;logoutOtherDevices&lt;/code&gt; 方法。此方法要求用户提供其当前密码，您的应用程序应通过输入表单接受该密码：</target>
        </trans-unit>
        <trans-unit id="7ac63e128e20270751d97b64ab3ad08a646ce00a" translate="yes" xml:space="preserve">
          <source>Then, you only need to &lt;a href=&quot;events&quot;&gt;fire the event&lt;/a&gt; as you normally would. Once the event has been fired, a &lt;a href=&quot;queues&quot;&gt;queued job&lt;/a&gt; will automatically broadcast the event over your specified broadcast driver.</source>
          <target state="translated">然后，您只需要照常&lt;a href=&quot;events&quot;&gt;触发事件即可&lt;/a&gt;。触发事件后，&lt;a href=&quot;queues&quot;&gt;排队的作业&lt;/a&gt;将通过您指定的广播驱动程序自动广播事件。</target>
        </trans-unit>
        <trans-unit id="c697e48a5bcfe4e8d4e6273e500fc78caf2a7e25" translate="yes" xml:space="preserve">
          <source>There are a few important things to note about the &lt;code&gt;putFile&lt;/code&gt; method. Note that we only specified a directory name, not a file name. By default, the &lt;code&gt;putFile&lt;/code&gt; method will generate a unique ID to serve as the file name. The file's extension will be determined by examining the file's MIME type. The path to the file will be returned by the &lt;code&gt;putFile&lt;/code&gt; method so you can store the path, including the generated file name, in your database.</source>
          <target state="translated">关于 &lt;code&gt;putFile&lt;/code&gt; 方法，需要注意一些重要的事情。请注意，我们仅指定目录名称，而不指定文件名。默认情况下， &lt;code&gt;putFile&lt;/code&gt; 方法将生成一个唯一的ID作为文件名。文件的扩展名将通过检查文件的MIME类型来确定。该文件的路径将由 &lt;code&gt;putFile&lt;/code&gt; 方法返回，因此您可以将路径（包括生成的文件名）存储在数据库中。</target>
        </trans-unit>
        <trans-unit id="bd26868f4a5feb2a2ca0bb1bca97358048ace6d0" translate="yes" xml:space="preserve">
          <source>There are a few important things to note about this example. Note that we only specified a directory name, not a file name. By default, the &lt;code&gt;store&lt;/code&gt; method will generate a unique ID to serve as the file name. The file's extension will be determined by examining the file's MIME type. The path to the file will be returned by the &lt;code&gt;store&lt;/code&gt; method so you can store the path, including the generated file name, in your database.</source>
          <target state="translated">关于此示例，需要注意一些重要事项。请注意，我们仅指定目录名称，而不指定文件名。默认情况下， &lt;code&gt;store&lt;/code&gt; 方法将生成一个唯一的ID作为文件名。文件的扩展名将通过检查文件的MIME类型来确定。该文件的路径将由 &lt;code&gt;store&lt;/code&gt; 方法返回，因此您可以将该路径（包括生成的文件名）存储在数据库中。</target>
        </trans-unit>
        <trans-unit id="c944c16dba1c6549f839b502058b6671f8e5d523" translate="yes" xml:space="preserve">
          <source>There are a variety of other methods available on &lt;code&gt;UploadedFile&lt;/code&gt; instances. Check out the &lt;a href=&quot;http://api.symfony.com/3.0/Symfony/Component/HttpFoundation/File/UploadedFile.html&quot;&gt;API documentation for the class&lt;/a&gt; for more information regarding these methods.</source>
          <target state="translated">&lt;code&gt;UploadedFile&lt;/code&gt; 实例上还有多种其他方法可用。请查阅&lt;a href=&quot;http://api.symfony.com/3.0/Symfony/Component/HttpFoundation/File/UploadedFile.html&quot;&gt;该类&lt;/a&gt;的API文档，以获取有关这些方法的更多信息。</target>
        </trans-unit>
        <trans-unit id="b24f30ff99c6e9a7d884dd787e0f9706a391c5dd" translate="yes" xml:space="preserve">
          <source>There are several middleware included in the Laravel framework, including middleware for authentication and CSRF protection. All of these middleware are located in the &lt;code&gt;app/Http/Middleware&lt;/code&gt; directory.</source>
          <target state="translated">Laravel框架中包含几种中间件，包括用于身份验证和CSRF保护的中间件。所有这些中间件都位于 &lt;code&gt;app/Http/Middleware&lt;/code&gt; 目录中。</target>
        </trans-unit>
        <trans-unit id="17ee2130be0c3d6048b43a8d1fd42decf0e20d1d" translate="yes" xml:space="preserve">
          <source>There are several ways to paginate items. The simplest is by using the &lt;code&gt;paginate&lt;/code&gt; method on the &lt;a href=&quot;queries&quot;&gt;query builder&lt;/a&gt; or an &lt;a href=&quot;eloquent&quot;&gt;Eloquent query&lt;/a&gt;. The &lt;code&gt;paginate&lt;/code&gt; method automatically takes care of setting the proper limit and offset based on the current page being viewed by the user. By default, the current page is detected by the value of the &lt;code&gt;page&lt;/code&gt; query string argument on the HTTP request. Of course, this value is automatically detected by Laravel, and is also automatically inserted into links generated by the paginator.</source>
          <target state="translated">有几种分页项目的方法。最简单的方法是在&lt;a href=&quot;queries&quot;&gt;查询生成器&lt;/a&gt;或&lt;a href=&quot;eloquent&quot;&gt;Eloquent查询&lt;/a&gt;上使用 &lt;code&gt;paginate&lt;/code&gt; 方法。该 &lt;code&gt;paginate&lt;/code&gt; 方法自动进行设置适当限制的护理和偏移基于由用户正在观看的当前页。默认情况下，当前页面由HTTP请求上的 &lt;code&gt;page&lt;/code&gt; 查询字符串参数的值检测。当然，此值由Laravel自动检测，也自动插入到分页器生成的链接中。</target>
        </trans-unit>
        <trans-unit id="6323966b53cb3ad38229f144aecaacda02daa8df" translate="yes" xml:space="preserve">
          <source>There are two other methods you may use to create models by mass assigning attributes: &lt;code&gt;firstOrCreate&lt;/code&gt; and &lt;code&gt;firstOrNew&lt;/code&gt;. The &lt;code&gt;firstOrCreate&lt;/code&gt; method will attempt to locate a database record using the given column / value pairs. If the model can not be found in the database, a record will be inserted with the attributes from the first parameter, along with those in the optional second parameter.</source>
          <target state="translated">通过批量分配属性，可以使用其他两种方法来创建模型： &lt;code&gt;firstOrCreate&lt;/code&gt; 和 &lt;code&gt;firstOrNew&lt;/code&gt; 。该 &lt;code&gt;firstOrCreate&lt;/code&gt; 方法将尝试使用给定的列/值对来定位的数据库记录。如果在数据库中找不到模型，则将插入一条记录，其中包含第一个参数的属性以及可选的第二个参数的属性。</target>
        </trans-unit>
        <trans-unit id="da338e7212619951f3694d471235cdd9d2a14563" translate="yes" xml:space="preserve">
          <source>There are two primary ways of working with session data in Laravel: the global &lt;code&gt;session&lt;/code&gt; helper and via a &lt;code&gt;Request&lt;/code&gt; instance. First, let's look at accessing the session via a &lt;code&gt;Request&lt;/code&gt; instance, which can be type-hinted on a controller method. Remember, controller method dependencies are automatically injected via the Laravel &lt;a href=&quot;container&quot;&gt;service container&lt;/a&gt;:</source>
          <target state="translated">在Laravel中使用会话数据的主要方法有两种：全局 &lt;code&gt;session&lt;/code&gt; 帮助程序和通过 &lt;code&gt;Request&lt;/code&gt; 实例。首先，让我们看一下通过 &lt;code&gt;Request&lt;/code&gt; 实例访问会话的方法，该实例可以在控制器方法上进行类型提示。请记住，控制器方法依赖项是通过Laravel &lt;a href=&quot;container&quot;&gt;服务容器&lt;/a&gt;自动注入的：</target>
        </trans-unit>
        <trans-unit id="39ecbdfabb951c3295b24d81d63f4f9b2deed6db" translate="yes" xml:space="preserve">
          <source>There is absolutely no practical difference between facades and helper functions. When using helper functions, you may still test them exactly as you would the corresponding facade. For example, given the following route:</source>
          <target state="translated">门面和辅助函数之间完全没有实际区别。当使用帮助函数时,你仍然可以像测试相应的门面一样测试它们。例如,给定以下路线。</target>
        </trans-unit>
        <trans-unit id="63715cb4916f857a2c435be121299f0936ac9504" translate="yes" xml:space="preserve">
          <source>There is little practical difference between using the session via an HTTP request instance versus using the global &lt;code&gt;session&lt;/code&gt; helper. Both methods are &lt;a href=&quot;testing&quot;&gt;testable&lt;/a&gt; via the &lt;code&gt;assertSessionHas&lt;/code&gt; method which is available in all of your test cases.</source>
          <target state="translated">通过HTTP请求实例使用 &lt;code&gt;session&lt;/code&gt; 与使用全局会话帮助器之间几乎没有实际区别。这两种方法&lt;a href=&quot;testing&quot;&gt;可测试&lt;/a&gt;通过 &lt;code&gt;assertSessionHas&lt;/code&gt; 方法，它是在所有的测试用例可用。</target>
        </trans-unit>
        <trans-unit id="c0dd6c9e694c8daf8cc02aec5be71416d616c604" translate="yes" xml:space="preserve">
          <source>There is no need to bind classes into the container if they do not depend on any interfaces. The container does not need to be instructed on how to build these objects, since it can automatically resolve these objects using reflection.</source>
          <target state="translated">如果类不依赖于任何接口,就没有必要将它们绑定到容器中。容器不需要被指示如何构建这些对象,因为它可以使用反射自动解析这些对象。</target>
        </trans-unit>
        <trans-unit id="f357a9b2727c54260ac2cfbec57ab0eddd7762a2" translate="yes" xml:space="preserve">
          <source>These Closures also receive the evaluated attribute array of the factory that defines them:</source>
          <target state="translated">这些Closures也会收到定义它们的工厂的评估属性数组。</target>
        </trans-unit>
        <trans-unit id="250feee64bf8f1fc01fc0c9d5f2f791159d942fe" translate="yes" xml:space="preserve">
          <source>These directives are convenient shortcuts for writing &lt;code&gt;@if&lt;/code&gt; and &lt;code&gt;@unless&lt;/code&gt; statements. The &lt;code&gt;@can&lt;/code&gt; and &lt;code&gt;@cannot&lt;/code&gt; statements above respectively translate to the following statements:</source>
          <target state="translated">这些指令是用于编写 &lt;code&gt;@if&lt;/code&gt; 和 &lt;code&gt;@unless&lt;/code&gt; 语句的便捷快捷方式。上面的 &lt;code&gt;@can&lt;/code&gt; 和 &lt;code&gt;@cannot&lt;/code&gt; 语句分别转换为以下语句：</target>
        </trans-unit>
        <trans-unit id="4575e37225c4dc15363ee57a03ca574eca74d8bb" translate="yes" xml:space="preserve">
          <source>These events will be mocked, so that handlers will not actually be executed.</source>
          <target state="translated">这些事件将被嘲讽,因此处理程序不会被实际执行。</target>
        </trans-unit>
        <trans-unit id="e9daa907c7c37be0a8e01bc035701d4e4f537dc4" translate="yes" xml:space="preserve">
          <source>These jobs will be mocked, so that handlers will not actually be executed.</source>
          <target state="translated">这些工作将被模拟,因此处理程序不会被实际执行。</target>
        </trans-unit>
        <trans-unit id="d75a8a6de391de46892a4774b5d857d47282cb18" translate="yes" xml:space="preserve">
          <source>These methods are typically the same across all guards.</source>
          <target state="translated">这些方法通常在所有卫士中都是一样的。</target>
        </trans-unit>
        <trans-unit id="0e498c5be0710d3a168ef2eeb0f56a471d736364" translate="yes" xml:space="preserve">
          <source>These methods may be combined with additional constraints to create even more finely tuned schedules that only run on certain days of the week. For example, to schedule a command to run weekly on Monday:</source>
          <target state="translated">这些方法可以与额外的约束条件相结合,以创建更精细的计划,只在一周的某些日子运行。例如,要安排一个命令每周在星期一运行。</target>
        </trans-unit>
        <trans-unit id="22bbe46bbf7c15b3c13ed34bd36a06a777c6a44d" translate="yes" xml:space="preserve">
          <source>Think of gates and policies like routes and controllers. Gates provide a simple, Closure based approach to authorization while policies, like controllers, group their logic around a particular model or resource. We'll explore gates first and then examine policies.</source>
          <target state="translated">把门和策略看成是路由和控制器。门提供了一个简单的、基于Closure的授权方法,而策略和控制器一样,围绕一个特定的模型或资源对其逻辑进行分组。我们将首先探讨门,然后再研究策略。</target>
        </trans-unit>
        <trans-unit id="0f8f50c4ce100dc010e8f792f6e565bb1e1f9df5" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;/oauth/token&lt;/code&gt; route will return a JSON response containing &lt;code&gt;access_token&lt;/code&gt;, &lt;code&gt;refresh_token&lt;/code&gt;, and &lt;code&gt;expires_in&lt;/code&gt; attributes. The &lt;code&gt;expires_in&lt;/code&gt; attribute contains the number of seconds until the access token expires.</source>
          <target state="translated">该 &lt;code&gt;/oauth/token&lt;/code&gt; 路由将返回一个包含 &lt;code&gt;access_token&lt;/code&gt; ， &lt;code&gt;refresh_token&lt;/code&gt; 和 &lt;code&gt;expires_in&lt;/code&gt; 属性的JSON响应。该 &lt;code&gt;expires_in&lt;/code&gt; 属性包含直到令牌到期访问的秒数。</target>
        </trans-unit>
        <trans-unit id="42e93dd14ff73457ccf8641a6271e7be337937bd" translate="yes" xml:space="preserve">
          <source>This Cron will call the Laravel command scheduler every minute. When the &lt;code&gt;schedule:run&lt;/code&gt; command is executed, Laravel will evaluate your scheduled tasks and runs the tasks that are due.</source>
          <target state="translated">该Cron将每分钟调用一次Laravel命令调度程序。当 &lt;code&gt;schedule:run&lt;/code&gt; 时执行的命令，Laravel会评估你的计划任务和运行到期的任务。</target>
        </trans-unit>
        <trans-unit id="11f00a1b51fc2579cd093f89f38a6b1cd1bef1b3" translate="yes" xml:space="preserve">
          <source>This Passport middleware will attach a &lt;code&gt;laravel_token&lt;/code&gt; cookie to your outgoing responses. This cookie contains an encrypted JWT that Passport will use to authenticate API requests from your JavaScript application. Now, you may make requests to your application's API without explicitly passing an access token:</source>
          <target state="translated">该Passport中间件会将 &lt;code&gt;laravel_token&lt;/code&gt; cookie 附加到您的外发响应中。此cookie包含一个加密的JWT，Passport将使用该JWT来验证来自JavaScript应用程序的API请求。现在，您可以向应用程序的API发出请求，而无需显式传递访问令牌：</target>
        </trans-unit>
        <trans-unit id="44c0f6d33fb99ac3bcc826e6ae638a622a48b01e" translate="yes" xml:space="preserve">
          <source>This class was originally copied from Symfony 3.</source>
          <target state="translated">这个类最初是从Symfony 3中复制过来的。</target>
        </trans-unit>
        <trans-unit id="2605038c92b9562230cbbd281a885f1969f7953e" translate="yes" xml:space="preserve">
          <source>This command reduces all of your route registrations into a single method call within a cached file, improving the performance of route registration when registering hundreds of routes.</source>
          <target state="translated">该命令将所有的途径注册减少为缓存文件中的一个方法调用,从而提高了注册数百个途径时的途径注册性能。</target>
        </trans-unit>
        <trans-unit id="6e30a34e3d6cf851681fc758f864ee0d21f53e16" translate="yes" xml:space="preserve">
          <source>This command should be used on fresh applications and will install a layout view, registration and login views, as well as routes for all authentication end-points. A &lt;code&gt;HomeController&lt;/code&gt; will also be generated to handle post-login requests to your application's dashboard.</source>
          <target state="translated">此命令应在全新的应用程序上使用，并将安装布局视图，注册和登录视图，以及所有身份验证端点的路由。一个 &lt;code&gt;HomeController&lt;/code&gt; 中，也会产生处理后的登录请求到应用程序的仪表板。</target>
        </trans-unit>
        <trans-unit id="bae645acef1a1f785b158e0876106a364f60ca14" translate="yes" xml:space="preserve">
          <source>This command will combine all of Laravel's configuration files into a single, cached file, which greatly reduces the number of trips the framework must make to the filesystem when loading your configuration values.</source>
          <target state="translated">这个命令将把所有Laravel的配置文件合并到一个单一的缓存文件中,这将大大减少框架在加载配置值时必须到文件系统的次数.</target>
        </trans-unit>
        <trans-unit id="17b6d891838ca9931ea868ff424af174dc8854df" translate="yes" xml:space="preserve">
          <source>This command will generate a controller at &lt;code&gt;app/Http/Controllers/PhotoController.php&lt;/code&gt;. The controller will contain a method for each of the available resource operations.</source>
          <target state="translated">此命令将在 &lt;code&gt;app/Http/Controllers/PhotoController.php&lt;/code&gt; 生成一个控制器。控制器将包含每个可用资源操作的方法。</target>
        </trans-unit>
        <trans-unit id="5fd442a4e9d1218cbac79ea95d06bcdf66a49ec4" translate="yes" xml:space="preserve">
          <source>This command will instruct all queue workers to gracefully &quot;die&quot; after they finish processing their current job so that no existing jobs are lost. Since the queue workers will die when the &lt;code&gt;queue:restart&lt;/code&gt; command is executed, you should be running a process manager such as &lt;a href=&quot;#supervisor-configuration&quot;&gt;Supervisor&lt;/a&gt; to automatically restart the queue workers.</source>
          <target state="translated">此命令将指示所有队列工作者在完成当前任务的处理后优雅地&amp;ldquo;死亡&amp;rdquo;，以使现有任务不会丢失。由于在执行 &lt;code&gt;queue:restart&lt;/code&gt; 命令时队列工作器将死亡，因此您应该运行诸如&lt;a href=&quot;#supervisor-configuration&quot;&gt;Supervisor之&lt;/a&gt;类的进程管理器来自动重新启动队列工作器。</target>
        </trans-unit>
        <trans-unit id="399fc357ac467cd96f7b88876f70626d907c2949" translate="yes" xml:space="preserve">
          <source>This command will place a fresh notification class in your &lt;code&gt;app/Notifications&lt;/code&gt; directory. Each notification class contains a &lt;code&gt;via&lt;/code&gt; method and a variable number of message building methods (such as &lt;code&gt;toMail&lt;/code&gt; or &lt;code&gt;toDatabase&lt;/code&gt;) that convert the notification to a message optimized for that particular channel.</source>
          <target state="translated">此命令将在您的 &lt;code&gt;app/Notifications&lt;/code&gt; 目录中放置一个新的通知类。每个通知类均包含 &lt;code&gt;via&lt;/code&gt; 方法和可变数量的消息构建方法（例如 &lt;code&gt;toMail&lt;/code&gt; 或 &lt;code&gt;toDatabase&lt;/code&gt; ），这些方法将通知转换为针对该特定通道优化的消息。</target>
        </trans-unit>
        <trans-unit id="2a280714c39404156fde1cf8944d1f26897feed0" translate="yes" xml:space="preserve">
          <source>This command will place a new &lt;code&gt;CheckAge&lt;/code&gt; class within your &lt;code&gt;app/Http/Middleware&lt;/code&gt; directory. In this middleware, we will only allow access to the route if the supplied &lt;code&gt;age&lt;/code&gt; is greater than 200. Otherwise, we will redirect the users back to the &lt;code&gt;home&lt;/code&gt; URI:</source>
          <target state="translated">此命令将在您的 &lt;code&gt;app/Http/Middleware&lt;/code&gt; 目录中放置一个新的 &lt;code&gt;CheckAge&lt;/code&gt; 类。在此中间件中，仅当提供的 &lt;code&gt;age&lt;/code&gt; 大于200时，我们才允许访问路由。否则，我们会将用户重定向回 &lt;code&gt;home&lt;/code&gt; URI：</target>
        </trans-unit>
        <trans-unit id="c94fe969d324cb1fd9735ad5b2ff1069cfdd3c82" translate="yes" xml:space="preserve">
          <source>This command will place the new observer in your &lt;code&gt;App/Observers&lt;/code&gt; directory. If this directory does not exist, Artisan will create it for you. Your fresh observer will look like the following:</source>
          <target state="translated">此命令会将新观察者放置在您的 &lt;code&gt;App/Observers&lt;/code&gt; 目录中。如果该目录不存在，Artisan将为您创建它。您的新观察者将如下所示：</target>
        </trans-unit>
        <trans-unit id="c3a7c35b52b03c40f6623187cda6c218fcc2f407" translate="yes" xml:space="preserve">
          <source>This command will place the views in the &lt;code&gt;resources/views/vendor/pagination&lt;/code&gt; directory. The &lt;code&gt;bootstrap-4.blade.php&lt;/code&gt; file within this directory corresponds to the default pagination view. You may edit this file to modify the pagination HTML.</source>
          <target state="translated">此命令会将视图放置在 &lt;code&gt;resources/views/vendor/pagination&lt;/code&gt; 目录中。此目录中的 &lt;code&gt;bootstrap-4.blade.php&lt;/code&gt; 文件对应于默认的分页视图。您可以编辑此文件以修改分页HTML。</target>
        </trans-unit>
        <trans-unit id="6d49325eb85019289a231adda896cf575cc43e10" translate="yes" xml:space="preserve">
          <source>This command will publish the Markdown mail components to the &lt;code&gt;resources/views/vendor/mail&lt;/code&gt; directory. The &lt;code&gt;mail&lt;/code&gt; directory will contain a &lt;code&gt;html&lt;/code&gt; and a &lt;code&gt;markdown&lt;/code&gt; directory, each containing their respective representations of every available component. The components in the &lt;code&gt;html&lt;/code&gt; directory are used to generate the HTML version of your email, and their counterparts in the &lt;code&gt;markdown&lt;/code&gt; directory are used to generate the plain-text version. You are free to customize these components however you like.</source>
          <target state="translated">此命令会将Markdown邮件组件发布到 &lt;code&gt;resources/views/vendor/mail&lt;/code&gt; 目录。该 &lt;code&gt;mail&lt;/code&gt; 目录将包含一个 &lt;code&gt;html&lt;/code&gt; 和 &lt;code&gt;markdown&lt;/code&gt; 目录，每个都包含各自所有可用的元件的视图。 &lt;code&gt;html&lt;/code&gt; 目录中的组件用于生成电子邮件的HTML版本， &lt;code&gt;markdown&lt;/code&gt; 目录中的组件用于生成纯文本版本。您可以随意自定义这些组件。</target>
        </trans-unit>
        <trans-unit id="0fefe0a639196a834119577f76342429668c91dd" translate="yes" xml:space="preserve">
          <source>This command will publish the Markdown mail components to the &lt;code&gt;resources/views/vendor/mail&lt;/code&gt; directory. The &lt;code&gt;mail&lt;/code&gt; directory will contain a &lt;code&gt;html&lt;/code&gt; and a &lt;code&gt;markdown&lt;/code&gt; directory, each containing their respective representations of every available component. You are free to customize these components however you like.</source>
          <target state="translated">此命令会将Markdown邮件组件发布到 &lt;code&gt;resources/views/vendor/mail&lt;/code&gt; 目录。该 &lt;code&gt;mail&lt;/code&gt; 目录将包含一个 &lt;code&gt;html&lt;/code&gt; 和 &lt;code&gt;markdown&lt;/code&gt; 目录，每个都包含各自所有可用的元件的视图。您可以随意自定义这些组件。</target>
        </trans-unit>
        <trans-unit id="29977df36ae228df57a75baa1fb7ff9f9662bb32" translate="yes" xml:space="preserve">
          <source>This cookie is primarily sent as a convenience since some JavaScript frameworks and libraries, like Angular and Axios, automatically place its value in the &lt;code&gt;X-XSRF-TOKEN&lt;/code&gt; header.</source>
          <target state="translated">由于一些JavaScript框架和库（例如Angular和Axios）会自动将其值放在 &lt;code&gt;X-XSRF-TOKEN&lt;/code&gt; 标头中，因此此cookie的发送主要是为了方便。</target>
        </trans-unit>
        <trans-unit id="6217d3635e9925429b5fd9f8d6232961b0604be8" translate="yes" xml:space="preserve">
          <source>This directory does not exist by default, but will be created for you by the &lt;code&gt;event:generate&lt;/code&gt; and &lt;code&gt;make:event&lt;/code&gt; Artisan commands. The &lt;code&gt;Events&lt;/code&gt; directory, as you might expect, houses &lt;a href=&quot;events&quot;&gt;event classes&lt;/a&gt;. Events may be used to alert other parts of your application that a given action has occurred, providing a great deal of flexibility and decoupling.</source>
          <target state="translated">该目录默认情况下不存在，但将由Artisan命令的 &lt;code&gt;event:generate&lt;/code&gt; 和 &lt;code&gt;make:event&lt;/code&gt; 创建。在 &lt;code&gt;Events&lt;/code&gt; 目录中，如你所料，设有&lt;a href=&quot;events&quot;&gt;活动类&lt;/a&gt;。事件可用于提醒您的应用程序其他部分已发生给定操作，从而提供了极大的灵活性和去耦性。</target>
        </trans-unit>
        <trans-unit id="c40ea5a925783298fa24288dabdcf73b4f6a0b03" translate="yes" xml:space="preserve">
          <source>This directory does not exist by default, but will be created for you if you execute the &lt;code&gt;event:generate&lt;/code&gt; or &lt;code&gt;make:listener&lt;/code&gt; Artisan commands. The &lt;code&gt;Listeners&lt;/code&gt; directory contains the classes that handle your &lt;a href=&quot;events&quot;&gt;events&lt;/a&gt;. Event listeners receive an event instance and perform logic in response to the event being fired. For example, a &lt;code&gt;UserRegistered&lt;/code&gt; event might be handled by a &lt;code&gt;SendWelcomeEmail&lt;/code&gt; listener.</source>
          <target state="translated">该目录默认情况下不存在，但是如果您执行 &lt;code&gt;event:generate&lt;/code&gt; 或 &lt;code&gt;make:listener&lt;/code&gt; Artisan命令，则会为您创建目录。该 &lt;code&gt;Listeners&lt;/code&gt; 目录包含处理你的类&lt;a href=&quot;events&quot;&gt;的事件&lt;/a&gt;。事件侦听器接收事件实例并执行逻辑以响应被触发的事件。例如， &lt;code&gt;UserRegistered&lt;/code&gt; 事件可能由 &lt;code&gt;SendWelcomeEmail&lt;/code&gt; 侦听器处理。</target>
        </trans-unit>
        <trans-unit id="b87df831d1202301ade256d97c5e976abfe4fe4e" translate="yes" xml:space="preserve">
          <source>This directory does not exist by default, but will be created for you if you execute the &lt;code&gt;make:job&lt;/code&gt; Artisan command. The &lt;code&gt;Jobs&lt;/code&gt; directory houses the &lt;a href=&quot;queues&quot;&gt;queueable jobs&lt;/a&gt; for your application. Jobs may be queued by your application or run synchronously within the current request lifecycle. Jobs that run synchronously during the current request are sometimes referred to as &quot;commands&quot; since they are an implementation of the &lt;a href=&quot;https://en.wikipedia.org/wiki/Command_pattern&quot;&gt;command pattern&lt;/a&gt;.</source>
          <target state="translated">该目录默认情况下不存在，但是如果执行 &lt;code&gt;make:job&lt;/code&gt; Artisan命令，将为您创建该目录。该 &lt;code&gt;Jobs&lt;/code&gt; 目录容纳&lt;a href=&quot;queues&quot;&gt;QUEUEABLE职位&lt;/a&gt;为您的应用。作业可能由您的应用程序排队或在当前请求生命周期内同步运行。在当前请求期间同步运行的作业有时称为&amp;ldquo;命令&amp;rdquo;，因为它们是&lt;a href=&quot;https://en.wikipedia.org/wiki/Command_pattern&quot;&gt;命令模式&lt;/a&gt;的实现。</target>
        </trans-unit>
        <trans-unit id="832e55e9b0ee24f6bf2179dbf163c9f1530a16d2" translate="yes" xml:space="preserve">
          <source>This directory does not exist by default, but will be created for you if you execute the &lt;code&gt;make:mail&lt;/code&gt; Artisan command. The &lt;code&gt;Mail&lt;/code&gt; directory contains all of your classes that represent emails sent by your application. Mail objects allow you to encapsulate all of the logic of building an email in a single, simple class that may be sent using the &lt;code&gt;Mail::send&lt;/code&gt; method.</source>
          <target state="translated">该目录默认情况下不存在，但如果执行 &lt;code&gt;make:mail&lt;/code&gt; Artisan命令，将为您创建该目录。该 &lt;code&gt;Mail&lt;/code&gt; 目录包含了所有的类，代表您的应用程序发送的电子邮件。邮件对象使您可以将构建电子邮件的所有逻辑封装在一个简单的类中，该类可以使用 &lt;code&gt;Mail::send&lt;/code&gt; 方法发送。</target>
        </trans-unit>
        <trans-unit id="2f5b6abb3a7fc9dafe172078105b3f0c5f45eef3" translate="yes" xml:space="preserve">
          <source>This directory does not exist by default, but will be created for you if you execute the &lt;code&gt;make:notification&lt;/code&gt; Artisan command. The &lt;code&gt;Notifications&lt;/code&gt; directory contains all of the &quot;transactional&quot; notifications that are sent by your application, such as simple notifications about events that happen within your application. Laravel's notification features abstracts sending notifications over a variety of drivers such as email, Slack, SMS, or stored in a database.</source>
          <target state="translated">该目录默认情况下不存在，但是如果执行 &lt;code&gt;make:notification&lt;/code&gt; Artisan命令将为您创建。该 &lt;code&gt;Notifications&lt;/code&gt; 目录包含了所有由您的应用程序发送的，比如你的应用程序中发生的事件的简单通知的&amp;ldquo;交易&amp;rdquo;的通知。 Laravel的通知功能可以抽象化通过各种驱动程序（例如电子邮件，Slack，SMS或存储在数据库中）发送通知。</target>
        </trans-unit>
        <trans-unit id="57d2ad1572f71be0bbe7362f058f8f6e67b576e2" translate="yes" xml:space="preserve">
          <source>This directory does not exist by default, but will be created for you if you execute the &lt;code&gt;make:policy&lt;/code&gt; Artisan command. The &lt;code&gt;Policies&lt;/code&gt; directory contains the authorization policy classes for your application. Policies are used to determine if a user can perform a given action against a resource. For more information, check out the &lt;a href=&quot;authorization&quot;&gt;authorization documentation&lt;/a&gt;.</source>
          <target state="translated">该目录默认情况下不存在，但是如果执行 &lt;code&gt;make:policy&lt;/code&gt; Artisan命令，将为您创建该目录。该 &lt;code&gt;Policies&lt;/code&gt; 目录包含应用程序的授权策略类。策略用于确定用户是否可以对资源执行给定的操作。有关更多信息，请参阅&lt;a href=&quot;authorization&quot;&gt;授权文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9bd3470038eaf834011d343ac2bd40e52d779c7f" translate="yes" xml:space="preserve">
          <source>This directory does not exist by default, but will be created for you if you execute the &lt;code&gt;make:rule&lt;/code&gt; Artisan command. The &lt;code&gt;Rules&lt;/code&gt; directory contains the custom validation rule objects for your application. Rules are used to encapsulate complicated validation logic in a simple object. For more information, check out the &lt;a href=&quot;validation&quot;&gt;validation documentation&lt;/a&gt;.</source>
          <target state="translated">该目录默认情况下不存在，但是如果执行 &lt;code&gt;make:rule&lt;/code&gt; Artisan命令，将为您创建该目录。该 &lt;code&gt;Rules&lt;/code&gt; 目录包含应用程序自定义的验证规则对象。规则用于将复杂的验证逻辑封装在一个简单的对象中。有关更多信息，请参阅&lt;a href=&quot;validation&quot;&gt;验证文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0f4a6992b53e0d095931623cf73e13581b5be2bf" translate="yes" xml:space="preserve">
          <source>This documentation assumes you are already familiar with OAuth2. If you do not know anything about OAuth2, consider familiarizing yourself with the general terminology and features of OAuth2 before continuing.</source>
          <target state="translated">本文档假设您已经熟悉OAuth2。如果你对OAuth2一无所知,请考虑在继续之前熟悉OAuth2的一般术语和功能。</target>
        </trans-unit>
        <trans-unit id="617efbc260fee123d38f1617f82ed61f6c049047" translate="yes" xml:space="preserve">
          <source>This extended pipeline catches any exceptions that occur during each slice.</source>
          <target state="translated">这个扩展的管道可以捕获每个分片期间发生的任何异常。</target>
        </trans-unit>
        <trans-unit id="2979a64c24aac70e0d65868e264cef5f974553d6" translate="yes" xml:space="preserve">
          <source>This feature requires that your application can interact with a &lt;a href=&quot;redis&quot;&gt;Redis server&lt;/a&gt;.</source>
          <target state="translated">此功能要求您的应用程序可以与&lt;a href=&quot;redis&quot;&gt;Redis服务器&lt;/a&gt;进行交互。</target>
        </trans-unit>
        <trans-unit id="1a8f93d3536354b2662cc1d8b44a43577e105067" translate="yes" xml:space="preserve">
          <source>This function also accepts asterisks as wildcards and will fill the target accordingly:</source>
          <target state="translated">这个函数也接受星号作为通配符,并将相应地填充目标。</target>
        </trans-unit>
        <trans-unit id="75b74a49a2c92c3b66f1caa8eeef739090ff2afe" translate="yes" xml:space="preserve">
          <source>This function also accepts wildcards and will set values on the target accordingly:</source>
          <target state="translated">这个函数也接受通配符,并将在目标上设置相应的值。</target>
        </trans-unit>
        <trans-unit id="078c08d0f6382e1d401e2124496083d863db5358" translate="yes" xml:space="preserve">
          <source>This interface is simple. The &lt;code&gt;getAuthIdentifierName&lt;/code&gt; method should return the name of the &quot;primary key&quot; field of the user and the &lt;code&gt;getAuthIdentifier&lt;/code&gt; method should return the &quot;primary key&quot; of the user. In a MySQL back-end, again, this would be the auto-incrementing primary key. The &lt;code&gt;getAuthPassword&lt;/code&gt; should return the user's hashed password. This interface allows the authentication system to work with any User class, regardless of what ORM or storage abstraction layer you are using. By default, Laravel includes a &lt;code&gt;User&lt;/code&gt; class in the &lt;code&gt;app&lt;/code&gt; directory which implements this interface, so you may consult this class for an implementation example.</source>
          <target state="translated">这个界面很简单。该 &lt;code&gt;getAuthIdentifierName&lt;/code&gt; 方法应该返回该用户的&amp;ldquo;主键&amp;rdquo;字段的名称和 &lt;code&gt;getAuthIdentifier&lt;/code&gt; 方法应该返回该用户的&amp;ldquo;主键&amp;rdquo;。同样，在MySQL后端，这将是自动递增的主键。该 &lt;code&gt;getAuthPassword&lt;/code&gt; 应返回用户的哈希密码。该接口允许身份验证系统与任何User类一起使用，而不管您使用的是哪个ORM或存储抽象层。默认情况下，Laravel 在实现此接口的 &lt;code&gt;app&lt;/code&gt; 目录中包含一个 &lt;code&gt;User&lt;/code&gt; 类，因此您可以查阅该类以获取实现示例。</target>
        </trans-unit>
        <trans-unit id="240280de5b0b7ac5729715d855a5fab8809b451b" translate="yes" xml:space="preserve">
          <source>This is a high-level overview of resources and resource collections. You are highly encouraged to read the other sections of this documentation to gain a deeper understanding of the customization and power offered to you by resources.</source>
          <target state="translated">这是对资源和资源集合的高级概述。强烈建议您阅读本文档的其他部分,以便更深入地了解资源为您提供的定制和功能。</target>
        </trans-unit>
        <trans-unit id="45224e730d201b1ddab3df4212506770369c8ffb" translate="yes" xml:space="preserve">
          <source>This is done in case any actions are overwritten with new controllers.</source>
          <target state="translated">这样做是为了防止任何动作被新控制器覆盖。</target>
        </trans-unit>
        <trans-unit id="46031c381dbe3d4f81bdcbce704886df43ac0b05" translate="yes" xml:space="preserve">
          <source>This is done in case any names are fluently defined or if routes are overwritten.</source>
          <target state="translated">这样做是为了防止任何名称被流畅地定义,或者如果路由被覆盖。</target>
        </trans-unit>
        <trans-unit id="75261c07aaea9fd7aa4785d7b7f5456c35ce1e49" translate="yes" xml:space="preserve">
          <source>This is identical to manually defining the following Gate definitions:</source>
          <target state="translated">这与手动定义以下门的定义是一样的。</target>
        </trans-unit>
        <trans-unit id="5a47866abe16c6f137216e7fcd2394afb8cf72bc" translate="yes" xml:space="preserve">
          <source>This is more efficient on larger data-sets, etc.</source>
          <target state="translated">这对较大的数据集等更有效率。</target>
        </trans-unit>
        <trans-unit id="b7cbcba7a746724f5c9abbfc73abe33c15e4081d" translate="yes" xml:space="preserve">
          <source>This is to avoid possible database type comparison errors.</source>
          <target state="translated">这是为了避免可能的数据库类型比较错误。</target>
        </trans-unit>
        <trans-unit id="822111267832779ec07dca95506a0159fa80c5c7" translate="yes" xml:space="preserve">
          <source>This is used to add the --env option to every available command.</source>
          <target state="translated">这用来给每个可用的命令添加--env选项。</target>
        </trans-unit>
        <trans-unit id="b32fe2084ebe4bba91e86e54f21bf2db446d0395" translate="yes" xml:space="preserve">
          <source>This loop will execute 1 query to retrieve all of the books on the table, then another query for each book to retrieve the author. So, if we have 25 books, this loop would run 26 queries: 1 for the original book, and 25 additional queries to retrieve the author of each book.</source>
          <target state="translated">这个循环将执行1个查询来检索表中的所有书籍,然后对每本书再执行一个查询来检索作者。因此,如果我们有25本书,这个循环将运行26个查询。1次查询原书,25次附加查询来检索每本书的作者。</target>
        </trans-unit>
        <trans-unit id="b3fbeefb4eb14c1e3b0de0b0abbb18570769ff54" translate="yes" xml:space="preserve">
          <source>This method belongs to Symfony HttpFoundation and is not usually needed when using Laravel.</source>
          <target state="translated">这个方法属于Symfony HttpFoundation,在使用Laravel时通常不需要.</target>
        </trans-unit>
        <trans-unit id="9d7a25f7a03f67dd46f2a58cb98e125132498b92" translate="yes" xml:space="preserve">
          <source>This method can be useful when combined with factories to create &lt;a href=&quot;eloquent&quot;&gt;Eloquent&lt;/a&gt; models:</source>
          <target state="translated">与工厂结合以创建&lt;a href=&quot;eloquent&quot;&gt;Eloquent&lt;/a&gt;模型时，此方法可能很有用：</target>
        </trans-unit>
        <trans-unit id="e722018c41ca9d685c89714e1e4445ef8f5f2f83" translate="yes" xml:space="preserve">
          <source>This method didn't match rest of framework's &quot;onQueue&quot; phrasing. Added &quot;onQueue&quot;.</source>
          <target state="translated">这个方法与框架中其他的 &quot;onQueue &quot;措辞不一致。增加了 &quot;onQueue&quot;。</target>
        </trans-unit>
        <trans-unit id="4805f89b0c71744ef267df9921f72b794abe1052" translate="yes" xml:space="preserve">
          <source>This method has the same signature as the &lt;a href=&quot;#method-contains&quot;&gt;&lt;code&gt;contains&lt;/code&gt;&lt;/a&gt; method; however, all values are compared using &quot;strict&quot; comparisons.</source>
          <target state="translated">此方法与&lt;a href=&quot;#method-contains&quot;&gt; &lt;code&gt;contains&lt;/code&gt; &lt;/a&gt;方法具有相同的签名；但是，所有值都使用&amp;ldquo;严格&amp;rdquo;比较进行比较。</target>
        </trans-unit>
        <trans-unit id="a748223dffaf28d04e4c3f533874d1d8d0567d07" translate="yes" xml:space="preserve">
          <source>This method has the same signature as the &lt;a href=&quot;#method-sortby&quot;&gt;&lt;code&gt;sortBy&lt;/code&gt;&lt;/a&gt; method, but will sort the collection in the opposite order.</source>
          <target state="translated">此方法与&lt;a href=&quot;#method-sortby&quot;&gt; &lt;code&gt;sortBy&lt;/code&gt; &lt;/a&gt;方法具有相同的签名，但是将以相反的顺序对集合进行排序。</target>
        </trans-unit>
        <trans-unit id="ac595c9f3afbba78dc79d4cb17bed5b2b1e13061" translate="yes" xml:space="preserve">
          <source>This method has the same signature as the &lt;a href=&quot;#method-sortkeys&quot;&gt;&lt;code&gt;sortKeys&lt;/code&gt;&lt;/a&gt; method, but will sort the collection in the opposite order.</source>
          <target state="translated">此方法与&lt;a href=&quot;#method-sortkeys&quot;&gt; &lt;code&gt;sortKeys&lt;/code&gt; &lt;/a&gt;方法具有相同的签名，但是将以相反的顺序对集合进行排序。</target>
        </trans-unit>
        <trans-unit id="345c075118a537d69d258eba7743c22572cd9461" translate="yes" xml:space="preserve">
          <source>This method has the same signature as the &lt;a href=&quot;#method-unique&quot;&gt;&lt;code&gt;unique&lt;/code&gt;&lt;/a&gt; method; however, all values are compared using &quot;strict&quot; comparisons.</source>
          <target state="translated">此方法与&lt;a href=&quot;#method-unique&quot;&gt; &lt;code&gt;unique&lt;/code&gt; &lt;/a&gt;方法具有相同的签名；但是，所有值都使用&amp;ldquo;严格&amp;rdquo;比较进行比较。</target>
        </trans-unit>
        <trans-unit id="ace3aa553b0b55fe3069de24f139a0faca58a0b9" translate="yes" xml:space="preserve">
          <source>This method has the same signature as the &lt;a href=&quot;#method-where&quot;&gt;&lt;code&gt;where&lt;/code&gt;&lt;/a&gt; method; however, all values are compared using &quot;strict&quot; comparisons.</source>
          <target state="translated">此方法与&lt;a href=&quot;#method-where&quot;&gt; &lt;code&gt;where&lt;/code&gt; &lt;/a&gt;方法具有相同的签名；但是，所有值都使用&amp;ldquo;严格&amp;rdquo;比较进行比较。</target>
        </trans-unit>
        <trans-unit id="ebc30d5ce54bec8362f0d5f58f619a036c016639" translate="yes" xml:space="preserve">
          <source>This method has the same signature as the &lt;a href=&quot;#method-wherein&quot;&gt;&lt;code&gt;whereIn&lt;/code&gt;&lt;/a&gt; method; however, all values are compared using &quot;strict&quot; comparisons.</source>
          <target state="translated">该方法与&lt;a href=&quot;#method-wherein&quot;&gt; &lt;code&gt;whereIn&lt;/code&gt; &lt;/a&gt;方法具有相同的签名。但是，所有值都使用&amp;ldquo;严格&amp;rdquo;比较进行比较。</target>
        </trans-unit>
        <trans-unit id="895ad2b89b5447f1bba9fd1b0c500f32657aabda" translate="yes" xml:space="preserve">
          <source>This method has the same signature as the &lt;a href=&quot;#method-wherenotin&quot;&gt;&lt;code&gt;whereNotIn&lt;/code&gt;&lt;/a&gt; method; however, all values are compared using &quot;strict&quot; comparisons.</source>
          <target state="translated">该方法与&lt;a href=&quot;#method-wherenotin&quot;&gt; &lt;code&gt;whereNotIn&lt;/code&gt; &lt;/a&gt;方法具有相同的签名。但是，所有值都使用&amp;ldquo;严格&amp;rdquo;比较进行比较。</target>
        </trans-unit>
        <trans-unit id="4bc69f2e4baba01cd2f99618c0d480b5e42e25d0" translate="yes" xml:space="preserve">
          <source>This method interacts with jQuery. If jQuery is not available on the page, Dusk will automatically inject it into the page so it is available for the test's duration.</source>
          <target state="translated">这个方法与jQuery进行交互,如果页面上没有jQuery,Dusk会自动将其注入到页面中,使其在测试期间可用。如果页面上没有jQuery,Dusk会自动将其注入到页面中,使其在测试期间可用。</target>
        </trans-unit>
        <trans-unit id="ece61a641fe6b4632db3697e236185f29590eb3e" translate="yes" xml:space="preserve">
          <source>This method is especially useful in &lt;a href=&quot;views&quot;&gt;views&lt;/a&gt; when working with a grid system such as &lt;a href=&quot;https://getbootstrap.com/css/#grid&quot;&gt;Bootstrap&lt;/a&gt;. Imagine you have a collection of &lt;a href=&quot;eloquent&quot;&gt;Eloquent&lt;/a&gt; models you want to display in a grid:</source>
          <target state="translated">当使用网格系统（例如&lt;a href=&quot;https://getbootstrap.com/css/#grid&quot;&gt;Bootstrap）&lt;/a&gt;时，此方法在&lt;a href=&quot;views&quot;&gt;视图中&lt;/a&gt;特别有用。假设您有一个要在网格中显示的&lt;a href=&quot;eloquent&quot;&gt;口才&lt;/a&gt;模型集合：</target>
        </trans-unit>
        <trans-unit id="0c495dc2bcdd5f864c3fcb57106509ef9e4f3b5b" translate="yes" xml:space="preserve">
          <source>This method is used for all request verbs (GET, POST, PUT, and DELETE)</source>
          <target state="translated">此方法用于所有请求动词(GET、POST、PUT和DELETE)。</target>
        </trans-unit>
        <trans-unit id="845e64260c91a9ee49e1c3a107b3048b623d18da" translate="yes" xml:space="preserve">
          <source>This method only asks for confirmation in production.</source>
          <target state="translated">这种方法在生产中只要求确认。</target>
        </trans-unit>
        <trans-unit id="f66fc2b4a9ceecc33ca886b8cf01f6ef4580a8c1" translate="yes" xml:space="preserve">
          <source>This method only merges the first level of the configuration array. If your users partially define a multi-dimensional configuration array, the missing options will not be merged.</source>
          <target state="translated">此方法只合并配置数组的第一层,如果你的用户部分定义了多维配置数组,缺失的选项将不会被合并。如果你的用户部分定义了一个多维配置数组,那么缺少的选项将不会被合并。</target>
        </trans-unit>
        <trans-unit id="2c5abb963129485669c93a34535df47207f24f00" translate="yes" xml:space="preserve">
          <source>This method protects developers from running forceDelete when trait is missing.</source>
          <target state="translated">当trait缺失时,该方法可以保护开发者不运行forceDelete。</target>
        </trans-unit>
        <trans-unit id="50e0c18702f8f8bd9fc8b98cae8d464e3a6b7d96" translate="yes" xml:space="preserve">
          <source>This method will automatically take care of pushing a job onto the queue so the message is sent in the background. Of course, you will need to &lt;a href=&quot;queues&quot;&gt;configure your queues&lt;/a&gt; before using this feature.</source>
          <target state="translated">此方法将自动处理将作业推送到队列，以便在后台发送消息。当然，在使用此功能之前，您将需要&lt;a href=&quot;queues&quot;&gt;配置队列&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ce868ef0515637d9c9679f9cdbe395316b925290" translate="yes" xml:space="preserve">
          <source>This method will set the trial period ending date on the subscription record within the database, as well as instruct Stripe / Braintree to not begin billing the customer until after this date.</source>
          <target state="translated">该方法将在数据库中的订阅记录上设置试用期结束日期,并指示Stripe/Braintree在该日期之后才开始向客户收费。</target>
        </trans-unit>
        <trans-unit id="af9313f4ae8b779b619ece9671a08eb3a7d54d42" translate="yes" xml:space="preserve">
          <source>This option is particularly useful for legacy projects where you don't require Webpack compilation for your JavaScript.</source>
          <target state="translated">这个选项对于传统项目特别有用,因为你不需要为你的JavaScript编译Webpack。</target>
        </trans-unit>
        <trans-unit id="7f74c496aa99b9ddac41234790217ccd880b66dc" translate="yes" xml:space="preserve">
          <source>This route creates new personal access tokens. It requires two pieces of data: the token's &lt;code&gt;name&lt;/code&gt; and the &lt;code&gt;scopes&lt;/code&gt; that should be assigned to the token:</source>
          <target state="translated">此路由创建新的个人访问令牌。它需要两个数据：令牌的 &lt;code&gt;name&lt;/code&gt; 和 &lt;code&gt;scopes&lt;/code&gt; 应分配给令牌：</target>
        </trans-unit>
        <trans-unit id="faefcfb73caacdb47ac8d1c66ba3faca0dae2450" translate="yes" xml:space="preserve">
          <source>This route is used to create new clients. It requires two pieces of data: the client's &lt;code&gt;name&lt;/code&gt; and a &lt;code&gt;redirect&lt;/code&gt; URL. The &lt;code&gt;redirect&lt;/code&gt; URL is where the user will be redirected after approving or denying a request for authorization.</source>
          <target state="translated">此路由用于创建新客户端。它需要两段数据：客户端 &lt;code&gt;name&lt;/code&gt; 和 &lt;code&gt;redirect&lt;/code&gt; URL。的 &lt;code&gt;redirect&lt;/code&gt; URL是用户将批准或拒绝授权请求之后被重定向。</target>
        </trans-unit>
        <trans-unit id="93f37d01f9fec2dff79671cd224fd0cefb6f2d21" translate="yes" xml:space="preserve">
          <source>This route is used to delete clients:</source>
          <target state="translated">此途径用于删除客户。</target>
        </trans-unit>
        <trans-unit id="9b984230f1bf503efe2a6bcf7be796bad3123716" translate="yes" xml:space="preserve">
          <source>This route is used to update clients. It requires two pieces of data: the client's &lt;code&gt;name&lt;/code&gt; and a &lt;code&gt;redirect&lt;/code&gt; URL. The &lt;code&gt;redirect&lt;/code&gt; URL is where the user will be redirected after approving or denying a request for authorization. The route will return the updated client instance:</source>
          <target state="translated">此路由用于更新客户端。它需要两段数据：客户端 &lt;code&gt;name&lt;/code&gt; 和 &lt;code&gt;redirect&lt;/code&gt; URL。的 &lt;code&gt;redirect&lt;/code&gt; URL是用户将批准或拒绝授权请求之后被重定向。该路由将返回更新的客户端实例：</target>
        </trans-unit>
        <trans-unit id="f3728d6210d969608be203aa88862ae05335c710" translate="yes" xml:space="preserve">
          <source>This route may be used to delete personal access tokens:</source>
          <target state="translated">此途径可用于删除个人访问令牌。</target>
        </trans-unit>
        <trans-unit id="7072d20b9450b9cbc74f4c5bc52c2ddce1a6e6cd" translate="yes" xml:space="preserve">
          <source>This route returns all of the &lt;a href=&quot;#token-scopes&quot;&gt;scopes&lt;/a&gt; defined for your application. You may use this route to list the scopes a user may assign to a personal access token:</source>
          <target state="translated">此路由返回为您的应用程序定义的所有&lt;a href=&quot;#token-scopes&quot;&gt;范围&lt;/a&gt;。您可以使用此路由列出用户可以分配给个人访问令牌的范围：</target>
        </trans-unit>
        <trans-unit id="64490007fda2fb38f740f72a07bc298db2f6a7d5" translate="yes" xml:space="preserve">
          <source>This route returns all of the clients for the authenticated user. This is primarily useful for listing all of the user's clients so that they may edit or delete them:</source>
          <target state="translated">这个路径返回已认证用户的所有客户端。这主要用于列出用户的所有客户端,以便他们可以编辑或删除它们。</target>
        </trans-unit>
        <trans-unit id="d84a8473857720f14e29821baa13eaf466a2afa6" translate="yes" xml:space="preserve">
          <source>This route returns all of the personal access tokens that the authenticated user has created. This is primarily useful for listing all of the user's tokens so that they may edit or delete them:</source>
          <target state="translated">这条路径返回经过认证的用户所创建的所有个人访问令牌。这主要用于列出用户的所有令牌,以便用户可以编辑或删除它们。</target>
        </trans-unit>
        <trans-unit id="941bbafd793b5297ecf3d481e402e2a10c822eac" translate="yes" xml:space="preserve">
          <source>This service provider only defines a &lt;code&gt;register&lt;/code&gt; method, and uses that method to define an implementation of &lt;code&gt;Riak\Connection&lt;/code&gt; in the service container. If you don't understand how the service container works, check out &lt;a href=&quot;container&quot;&gt;its documentation&lt;/a&gt;.</source>
          <target state="translated">该服务提供者仅定义一个 &lt;code&gt;register&lt;/code&gt; 方法，并使用该方法定义服务容器中 &lt;code&gt;Riak\Connection&lt;/code&gt; 的实现。如果您不了解服务容器的工作原理，请查看&lt;a href=&quot;container&quot;&gt;其文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a448f422797405b6f5867321cec7436e5ea04ab9" translate="yes" xml:space="preserve">
          <source>This single command will remove the Vue scaffolding and replace it with React scaffolding, including an example component.</source>
          <target state="translated">这条命令将删除Vue脚手架,并用React脚手架替换,包括一个示例组件。</target>
        </trans-unit>
        <trans-unit id="323c1aaa34fae011bd2eb28a8bd8f01712af0f26" translate="yes" xml:space="preserve">
          <source>This single route declaration creates multiple routes to handle a variety of actions on the resource. The generated controller will already have methods stubbed for each of these actions, including notes informing you of the HTTP verbs and URIs they handle.</source>
          <target state="translated">这个单一的路由声明创建了多个路由来处理资源上的各种操作。生成的控制器已经为这些操作提供了方法,包括通知你它们处理的HTTP动词和URI的注释。</target>
        </trans-unit>
        <trans-unit id="888c89bf3d2b560e251249db6fca8c336eb28819" translate="yes" xml:space="preserve">
          <source>This statement tells the container that it should inject the &lt;code&gt;RedisEventPusher&lt;/code&gt; when a class needs an implementation of &lt;code&gt;EventPusher&lt;/code&gt;. Now we can type-hint the &lt;code&gt;EventPusher&lt;/code&gt; interface in a constructor, or any other location where dependencies are injected by the service container:</source>
          <target state="translated">这条语句告诉它应该注入容器 &lt;code&gt;RedisEventPusher&lt;/code&gt; 当一个类需要的实现 &lt;code&gt;EventPusher&lt;/code&gt; 。现在，我们可以在构造函数或服务容器注入依赖项的任何其他位置键入 &lt;code&gt;EventPusher&lt;/code&gt; 接口的提示：</target>
        </trans-unit>
        <trans-unit id="ede46c8983c76aff69d19d4255e927f562a6d5ff" translate="yes" xml:space="preserve">
          <source>This table provides a quick reference to all of the Laravel contracts and their equivalent facades:</source>
          <target state="translated">这个表格提供了一个快速参考所有Laravel合同和它们的对应门面:</target>
        </trans-unit>
        <trans-unit id="7d49fdcb2be752536b073e37f3d371601c5bd08b" translate="yes" xml:space="preserve">
          <source>This test can be used to test the login screen generated by the &lt;code&gt;make:auth&lt;/code&gt; Artisan command.</source>
          <target state="translated">该测试可用于测试由 &lt;code&gt;make:auth&lt;/code&gt; Artisan命令生成的登录屏幕。</target>
        </trans-unit>
        <trans-unit id="81e14ad267234094f56871810d9af02e61cd24ee" translate="yes" xml:space="preserve">
          <source>This trait is utilized by the default &lt;code&gt;App\User&lt;/code&gt; model and contains one method that may be used to send notifications: &lt;code&gt;notify&lt;/code&gt;. The &lt;code&gt;notify&lt;/code&gt; method expects to receive a notification instance:</source>
          <target state="translated">此特征由默认的 &lt;code&gt;App\User&lt;/code&gt; 模型使用，并且包含一种可用于发送通知的方法： &lt;code&gt;notify&lt;/code&gt; 。该 &lt;code&gt;notify&lt;/code&gt; 方法期望接收通知实例：</target>
        </trans-unit>
        <trans-unit id="9d08c03725a8c04b48e266e756fa55f442041709" translate="yes" xml:space="preserve">
          <source>This validation rule implies the attribute is &quot;required&quot;.</source>
          <target state="translated">该验证规则意味着该属性是 &quot;必需的&quot;。</target>
        </trans-unit>
        <trans-unit id="09e1356d9f303cc2587bf4a5dbae44d0efa9bbea" translate="yes" xml:space="preserve">
          <source>This will give you an instance of the default Redis server. You may also pass the connection or cluster name to the &lt;code&gt;connection&lt;/code&gt; method to get a specific server or cluster as defined in your Redis configuration:</source>
          <target state="translated">这将为您提供默认Redis服务器的实例。您还可以将连接或群集名称传递给 &lt;code&gt;connection&lt;/code&gt; 方法，以获取Redis配置中定义的特定服务器或群集：</target>
        </trans-unit>
        <trans-unit id="80aa677152aa6202197a36527101a8e2a2cbadc2" translate="yes" xml:space="preserve">
          <source>This will likely be because the job previously exceeded a timeout.</source>
          <target state="translated">这很可能是因为该作业之前超过了超时。</target>
        </trans-unit>
        <trans-unit id="9d94d697d47d3f6a1649d50872e28e1ddfc59c7f" translate="yes" xml:space="preserve">
          <source>This will prevent errors in daemon queue situations.</source>
          <target state="translated">这将防止守护进程队列情况下的错误。</target>
        </trans-unit>
        <trans-unit id="dffddf2f855ed7cbfa3f356855f60b8fd27a10d7" translate="yes" xml:space="preserve">
          <source>Though &lt;code&gt;posts&lt;/code&gt; does not contain a &lt;code&gt;country_id&lt;/code&gt; column, the &lt;code&gt;hasManyThrough&lt;/code&gt; relation provides access to a country's posts via &lt;code&gt;$country-&amp;gt;posts&lt;/code&gt;. To perform this query, Eloquent inspects the &lt;code&gt;country_id&lt;/code&gt; on the intermediate &lt;code&gt;users&lt;/code&gt; table. After finding the matching user IDs, they are used to query the &lt;code&gt;posts&lt;/code&gt; table.</source>
          <target state="translated">尽管 &lt;code&gt;posts&lt;/code&gt; 不包含 &lt;code&gt;country_id&lt;/code&gt; 列，但是 &lt;code&gt;hasManyThrough&lt;/code&gt; 关系提供了通过 &lt;code&gt;$country-&amp;gt;posts&lt;/code&gt; country- &amp;gt; posts访问国家帖子的权限。为了执行此查询，Eloquent检查中间 &lt;code&gt;users&lt;/code&gt; 表上的 &lt;code&gt;country_id&lt;/code&gt; 。找到匹配的用户标识后，它们将用于查询 &lt;code&gt;posts&lt;/code&gt; 表。</target>
        </trans-unit>
        <trans-unit id="35a840e4613e1b8d30d5f33e57592df1865d0387" translate="yes" xml:space="preserve">
          <source>Though disabled by default, source maps may be activated by calling the &lt;code&gt;mix.sourceMaps()&lt;/code&gt; method in your &lt;code&gt;webpack.mix.js&lt;/code&gt; file. Though it comes with a compile/performance cost, this will provide extra debugging information to your browser's developer tools when using compiled assets.</source>
          <target state="translated">尽管默认情况下是禁用的，但可以通过在 &lt;code&gt;webpack.mix.js&lt;/code&gt; 文件中调用 &lt;code&gt;mix.sourceMaps()&lt;/code&gt; 方法来激活源地图。尽管这会带来编译/执行成本，但在使用编译资产时，这将为浏览器的开发人员工具提供额外的调试信息。</target>
        </trans-unit>
        <trans-unit id="4c41b959c498347341317d938d26abe7ecbdc549" translate="yes" xml:space="preserve">
          <source>Throttle a callback for a maximum number of executions over a given duration.</source>
          <target state="translated">在给定的持续时间内,对回调的最大执行次数进行节流。</target>
        </trans-unit>
        <trans-unit id="76acdde12af8bcae84914197d5f22e76aa7a0f8f" translate="yes" xml:space="preserve">
          <source>ThrottleRequests</source>
          <target state="translated">ThrottleRequests</target>
        </trans-unit>
        <trans-unit id="f616160a633337cbd19460f2042edbb49746d094" translate="yes" xml:space="preserve">
          <source>ThrottleRequests (Routing\Middleware)</source>
          <target state="translated">ThrottleRequests (Routing/Middleware)</target>
        </trans-unit>
        <trans-unit id="41140a570c8ea4a67d22b31444f319e479cee7a0" translate="yes" xml:space="preserve">
          <source>ThrottleRequests::__construct()</source>
          <target state="translated">ThrottleRequests::__construct()</target>
        </trans-unit>
        <trans-unit id="d2ea5dffca0d7dc390b2ba09f53e8ed1b6f37eb1" translate="yes" xml:space="preserve">
          <source>ThrottleRequests::addHeaders()</source>
          <target state="translated">ThrottleRequests::addHeaders()</target>
        </trans-unit>
        <trans-unit id="92f562a3120490d6ebcbad3688b991e531d463ac" translate="yes" xml:space="preserve">
          <source>ThrottleRequests::buildException()</source>
          <target state="translated">ThrottleRequests::buildException()</target>
        </trans-unit>
        <trans-unit id="e0ea9eb291663c7a991681941f7fa8c7a29f5471" translate="yes" xml:space="preserve">
          <source>ThrottleRequests::calculateRemainingAttempts()</source>
          <target state="translated">ThrottleRequests::calculateRemainingAttempts()</target>
        </trans-unit>
        <trans-unit id="4a2ddac04f830ca177ee5cd1701a8065d252d529" translate="yes" xml:space="preserve">
          <source>ThrottleRequests::getHeaders()</source>
          <target state="translated">ThrottleRequests::getHeaders()</target>
        </trans-unit>
        <trans-unit id="9706589098c4f01c2e641ee9318fcc9f5e406abf" translate="yes" xml:space="preserve">
          <source>ThrottleRequests::getTimeUntilNextRetry()</source>
          <target state="translated">ThrottleRequests::getTimeUntilNextRetry()</target>
        </trans-unit>
        <trans-unit id="c90e5ab43f2d080509bb3584659362943dd05c75" translate="yes" xml:space="preserve">
          <source>ThrottleRequests::handle()</source>
          <target state="translated">ThrottleRequests::handle()</target>
        </trans-unit>
        <trans-unit id="1812bd1714ef7cc25ea2654bd64a7d9befdccf44" translate="yes" xml:space="preserve">
          <source>ThrottleRequests::resolveMaxAttempts()</source>
          <target state="translated">ThrottleRequests::resolveMaxAttempts()</target>
        </trans-unit>
        <trans-unit id="5607ffbf70d208488bfb3d57a3d53ab7c2edd99e" translate="yes" xml:space="preserve">
          <source>ThrottleRequests::resolveRequestSignature()</source>
          <target state="translated">ThrottleRequests::resolveRequestSignature()</target>
        </trans-unit>
        <trans-unit id="f45ecaaf6aa70c35f23a5c9000c3707fb5978c04" translate="yes" xml:space="preserve">
          <source>ThrottleRequestsException</source>
          <target state="translated">ThrottleRequestsException</target>
        </trans-unit>
        <trans-unit id="026e4e7a81d60717429d648c0101fc27c1248652" translate="yes" xml:space="preserve">
          <source>ThrottleRequestsException (Http\Exceptions)</source>
          <target state="translated">ThrottleRequestsException (HttpExceptions)</target>
        </trans-unit>
        <trans-unit id="f3bc7caaa76536474d0dfefef999450de1e83da8" translate="yes" xml:space="preserve">
          <source>ThrottleRequestsException::__construct()</source>
          <target state="translated">ThrottleRequestsException::__construct()</target>
        </trans-unit>
        <trans-unit id="2d3b4df5ced5519de91850c430e6857094a6c021" translate="yes" xml:space="preserve">
          <source>ThrottleRequestsWithRedis</source>
          <target state="translated">ThrottleRequestsWithRedis</target>
        </trans-unit>
        <trans-unit id="118b9685f1ac44e59b9294fcb5e4d0612efdd5d7" translate="yes" xml:space="preserve">
          <source>ThrottleRequestsWithRedis (Routing\Middleware)</source>
          <target state="translated">ThrottleRequestsWithRedis (Routing/Middleware)</target>
        </trans-unit>
        <trans-unit id="d07e49fee75631d1b6da9143e95cbb6fd3ccd5b7" translate="yes" xml:space="preserve">
          <source>ThrottleRequestsWithRedis::__construct()</source>
          <target state="translated">ThrottleRequestsWithRedis::__construct()</target>
        </trans-unit>
        <trans-unit id="fe2d82353422a137a9b1022693166898be23737d" translate="yes" xml:space="preserve">
          <source>ThrottleRequestsWithRedis::calculateRemainingAttempts()</source>
          <target state="translated">ThrottleRequestsWithRedis::calculateRemainingAttempts()</target>
        </trans-unit>
        <trans-unit id="1dacf6d923c06960a722081ceb507bd905ce852b" translate="yes" xml:space="preserve">
          <source>ThrottleRequestsWithRedis::getTimeUntilNextRetry()</source>
          <target state="translated">ThrottleRequestsWithRedis::getTimeUntilNextRetry()</target>
        </trans-unit>
        <trans-unit id="1408fbb1b635315a8d66b3df139aca99f98283c8" translate="yes" xml:space="preserve">
          <source>ThrottleRequestsWithRedis::handle()</source>
          <target state="translated">ThrottleRequestsWithRedis::handle()</target>
        </trans-unit>
        <trans-unit id="fde3553d5a6afb19488b42f8c36c953d96daee16" translate="yes" xml:space="preserve">
          <source>ThrottleRequestsWithRedis::tooManyAttempts()</source>
          <target state="translated">ThrottleRequestsWithRedis::tooManyAttempts()</target>
        </trans-unit>
        <trans-unit id="f56f467e70eb907e626934d36ab338370d8124b2" translate="yes" xml:space="preserve">
          <source>ThrottlesLogins</source>
          <target state="translated">ThrottlesLogins</target>
        </trans-unit>
        <trans-unit id="f61763828aea717b53856f4c1f255f21a62b794d" translate="yes" xml:space="preserve">
          <source>ThrottlesLogins (Foundation\Auth)</source>
          <target state="translated">ThrottlesLogins (Foundation/Auth)</target>
        </trans-unit>
        <trans-unit id="51b7d4973b269c2d30d76c8d57d7f0c5ff6c7807" translate="yes" xml:space="preserve">
          <source>ThrottlesLogins::clearLoginAttempts()</source>
          <target state="translated">ThrottlesLogins::clearLoginAttempts()</target>
        </trans-unit>
        <trans-unit id="730575ab7a25acec7edad3b74f1ae766d89565d3" translate="yes" xml:space="preserve">
          <source>ThrottlesLogins::decayMinutes()</source>
          <target state="translated">ThrottlesLogins::decayMinutes()</target>
        </trans-unit>
        <trans-unit id="feab3084cff7eca1a6beca648158f23b5ab96b53" translate="yes" xml:space="preserve">
          <source>ThrottlesLogins::fireLockoutEvent()</source>
          <target state="translated">ThrottlesLogins::fireLockoutEvent()</target>
        </trans-unit>
        <trans-unit id="6ce9524a2fc792888e38d1dd38da31866cc83308" translate="yes" xml:space="preserve">
          <source>ThrottlesLogins::hasTooManyLoginAttempts()</source>
          <target state="translated">ThrottlesLogins::hasTooManyLoginAttempts()</target>
        </trans-unit>
        <trans-unit id="94a1090d99d5baaf4f7811f3833fc68bf1da73c7" translate="yes" xml:space="preserve">
          <source>ThrottlesLogins::incrementLoginAttempts()</source>
          <target state="translated">ThrottlesLogins::incrementLoginAttempts()</target>
        </trans-unit>
        <trans-unit id="cb4e59b867991b940d0f92cbf5010d761b6fc770" translate="yes" xml:space="preserve">
          <source>ThrottlesLogins::limiter()</source>
          <target state="translated">ThrottlesLogins::limiter()</target>
        </trans-unit>
        <trans-unit id="d4dae703f5fad666353be343b5404681237b840d" translate="yes" xml:space="preserve">
          <source>ThrottlesLogins::maxAttempts()</source>
          <target state="translated">ThrottlesLogins::maxAttempts()</target>
        </trans-unit>
        <trans-unit id="2d533f286e0081ac3e92f17257b97f36f0d0f7cf" translate="yes" xml:space="preserve">
          <source>ThrottlesLogins::sendLockoutResponse()</source>
          <target state="translated">ThrottlesLogins::sendLockoutResponse()</target>
        </trans-unit>
        <trans-unit id="669aec4fda568056bc4fe05d901b3f2494cfc945" translate="yes" xml:space="preserve">
          <source>ThrottlesLogins::throttleKey()</source>
          <target state="translated">ThrottlesLogins::throttleKey()</target>
        </trans-unit>
        <trans-unit id="40cb586c144e3fec6f7fae2ec8174c2c0bf42ac8" translate="yes" xml:space="preserve">
          <source>Throughout the Laravel documentation, many of the examples will use facades to demonstrate various features of the framework.</source>
          <target state="translated">在整个Laravel文档中,许多例子都会使用外衣来展示框架的各种特性.</target>
        </trans-unit>
        <trans-unit id="ec59aa675d34e1ceb86b8aa1cf4849f340395c20" translate="yes" xml:space="preserve">
          <source>Throw a bad method call exception for the given method.</source>
          <target state="translated">为给定的方法抛出一个坏的方法调用异常。</target>
        </trans-unit>
        <trans-unit id="25010b383a119206e9eae5b1d911d488b7e9dc97" translate="yes" xml:space="preserve">
          <source>Throw a method not allowed HTTP exception.</source>
          <target state="translated">抛出一个方法不允许的HTTP异常。</target>
        </trans-unit>
        <trans-unit id="553949a80aac37e0af8a8a707fc147468587ad06" translate="yes" xml:space="preserve">
          <source>Throw an HttpException with the given data.</source>
          <target state="translated">用给定的数据抛出一个HttpException。</target>
        </trans-unit>
        <trans-unit id="89f750f1fb24776f394c764e13938122d08235f6" translate="yes" xml:space="preserve">
          <source>Throw an exception for an unresolvable primitive.</source>
          <target state="translated">为一个不可解决的基元抛出异常。</target>
        </trans-unit>
        <trans-unit id="9808cf2e27f60d4a45fdadaba8485e55745c21b1" translate="yes" xml:space="preserve">
          <source>Throw an exception if the query doesn't have an orderBy clause.</source>
          <target state="translated">如果查询中没有orderBy子句,则抛出异常。</target>
        </trans-unit>
        <trans-unit id="14ca209e5c20fc387bad3a95f33fdc97d914d85a" translate="yes" xml:space="preserve">
          <source>Throw an exception that the concrete is not instantiable.</source>
          <target state="translated">抛出一个异常,即混凝土不可实例化。</target>
        </trans-unit>
        <trans-unit id="8abf11297f412ee4fff55514bb434f634e293565" translate="yes" xml:space="preserve">
          <source>Throwable</source>
          <target state="translated">Throwable</target>
        </trans-unit>
        <trans-unit id="16a23412d0d2d6862fc6c9091c7546c8441ee1f2" translate="yes" xml:space="preserve">
          <source>Throws an unauthorized exception.</source>
          <target state="translated">抛出一个未经授权的异常。</target>
        </trans-unit>
        <trans-unit id="5e6e803af098086761b526b070d4b16f1ceb9420" translate="yes" xml:space="preserve">
          <source>Throws the response in a HttpResponseException instance.</source>
          <target state="translated">在HttpResponseException实例中抛出响应。</target>
        </trans-unit>
        <trans-unit id="a72b6d93881fddd0bce9b4508e6dcc9da26e4838" translate="yes" xml:space="preserve">
          <source>Time Based Attempts</source>
          <target state="translated">基于时间的尝试</target>
        </trans-unit>
        <trans-unit id="d4c45de0fe64ac43c72a798c67faaadadfaa1b90" translate="yes" xml:space="preserve">
          <source>Timeout</source>
          <target state="translated">Timeout</target>
        </trans-unit>
        <trans-unit id="c04ed1238a14de2b02d7fd14a7e9605bb1b10b96" translate="yes" xml:space="preserve">
          <source>Timestamps</source>
          <target state="translated">Timestamps</target>
        </trans-unit>
        <trans-unit id="791214dda21a45673e6a00a407416e403372c00e" translate="yes" xml:space="preserve">
          <source>Timezones</source>
          <target state="translated">Timezones</target>
        </trans-unit>
        <trans-unit id="656428c6aa8b5394307f88bf7b20104a86fe51c1" translate="yes" xml:space="preserve">
          <source>To &quot;check&quot; a checkbox field, you may use the &lt;code&gt;check&lt;/code&gt; method. Like many other input related methods, a full CSS selector is not required. If an exact selector match can't be found, Dusk will search for a checkbox with a matching &lt;code&gt;name&lt;/code&gt; attribute:</source>
          <target state="translated">要&amp;ldquo;检查&amp;rdquo;复选框字段，可以使用 &lt;code&gt;check&lt;/code&gt; 方法。像许多其他与输入有关的方法一样，不需要完整的CSS选择器。如果找不到精确的选择器匹配项，Dusk将搜索具有匹配 &lt;code&gt;name&lt;/code&gt; 属性的复选框：</target>
        </trans-unit>
        <trans-unit id="94f6880a88183c5573661364fd7eaee097a6fc5c" translate="yes" xml:space="preserve">
          <source>To &quot;select&quot; a radio button option, you may use the &lt;code&gt;radio&lt;/code&gt; method. Like many other input related methods, a full CSS selector is not required. If an exact selector match can't be found, Dusk will search for a radio with matching &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt; attributes:</source>
          <target state="translated">要&amp;ldquo;选择&amp;rdquo;单选按钮选项，可以使用 &lt;code&gt;radio&lt;/code&gt; 方法。像许多其他与输入有关的方法一样，不需要完整的CSS选择器。如果找不到精确的选择器匹配项，Dusk将搜索具有匹配的 &lt;code&gt;name&lt;/code&gt; 和 &lt;code&gt;value&lt;/code&gt; 属性的单选：</target>
        </trans-unit>
        <trans-unit id="6578fd04c01214fc32eaa159f087a800c50b19e9" translate="yes" xml:space="preserve">
          <source>To &quot;unsecure&quot; a site and revert back to serving its traffic over plain HTTP, use the &lt;code&gt;unsecure&lt;/code&gt; command. Like the &lt;code&gt;secure&lt;/code&gt; command, this command accepts the host name that you wish to unsecure:</source>
          <target state="translated">要&amp;ldquo;取消安全&amp;rdquo;站点并恢复为通过纯HTTP提供其流量，请使用 &lt;code&gt;unsecure&lt;/code&gt; 命令。与 &lt;code&gt;secure&lt;/code&gt; 命令一样，此命令接受您要取消安全保护的主机名：</target>
        </trans-unit>
        <trans-unit id="97798142c88085858c10b19aa386f1e1b0eabc0b" translate="yes" xml:space="preserve">
          <source>To access your notifications from your JavaScript client, you should define a notification controller for your application which returns the notifications for a notifiable entity, such as the current user. You may then make an HTTP request to that controller's URI from your JavaScript client.</source>
          <target state="translated">为了从JavaScript客户端访问通知,你应该为你的应用程序定义一个通知控制器,它将返回一个可通知实体的通知,例如当前用户。然后你可以从你的JavaScript客户端向该控制器的URI发出HTTP请求。</target>
        </trans-unit>
        <trans-unit id="3da5298222350e85a51b24499f97e373d28a03e4" translate="yes" xml:space="preserve">
          <source>To accomplish this, the &lt;code&gt;Illuminate\Mail\Mailable&lt;/code&gt; class offers a &lt;code&gt;locale&lt;/code&gt; method to set the desired language. The application will change into this locale when the mailable is being formatted and then revert back to the previous locale when formatting is complete:</source>
          <target state="translated">为此， &lt;code&gt;Illuminate\Mail\Mailable&lt;/code&gt; 类提供了一种 &lt;code&gt;locale&lt;/code&gt; 方法来设置所需的语言。格式化邮件格式时，应用程序将更改为该语言环境，格式化完成后，应用程序将还原为以前的语言环境：</target>
        </trans-unit>
        <trans-unit id="2f3a1648875a8c8d735796c8f8b8c5b9c3eafaad" translate="yes" xml:space="preserve">
          <source>To accomplish this, the &lt;code&gt;Illuminate\Notifications\Notification&lt;/code&gt; class now offers a &lt;code&gt;locale&lt;/code&gt; method to set the desired language. The application will change into this locale when the notification is being formatted and then revert back to the previous locale when formatting is complete:</source>
          <target state="translated">为此， &lt;code&gt;Illuminate\Notifications\Notification&lt;/code&gt; 类现在提供了一种 &lt;code&gt;locale&lt;/code&gt; 方法来设置所需的语言。格式化通知时，应用程序将更改为该语言环境，格式化完成后，应用程序将恢复为先前的语言环境：</target>
        </trans-unit>
        <trans-unit id="b4d7de6fd697cde275fd7490bd9f4303d78636a1" translate="yes" xml:space="preserve">
          <source>To accomplish this, the &lt;code&gt;Illuminate\Notifications\Notification&lt;/code&gt; class offers a &lt;code&gt;locale&lt;/code&gt; method to set the desired language. The application will change into this locale when the notification is being formatted and then revert back to the previous locale when formatting is complete:</source>
          <target state="translated">为此， &lt;code&gt;Illuminate\Notifications\Notification&lt;/code&gt; 类提供了一种 &lt;code&gt;locale&lt;/code&gt; 方法来设置所需的语言。格式化通知时，应用程序将更改为该语言环境，格式化完成后，应用程序将恢复为先前的语言环境：</target>
        </trans-unit>
        <trans-unit id="ed9beddc50d32c93c766ce8fc447b633a222d026" translate="yes" xml:space="preserve">
          <source>To add attachments to an email, use the &lt;code&gt;attach&lt;/code&gt; method within the mailable class' &lt;code&gt;build&lt;/code&gt; method. The &lt;code&gt;attach&lt;/code&gt; method accepts the full path to the file as its first argument:</source>
          <target state="translated">要将附件添加到电子邮件中，请在mailable类的 &lt;code&gt;build&lt;/code&gt; 方法中使用 &lt;code&gt;attach&lt;/code&gt; 方法。该 &lt;code&gt;attach&lt;/code&gt; 方法接受完整路径文件的第一个参数：</target>
        </trans-unit>
        <trans-unit id="e290d86f324f73e9b35bbb4d6fd573949739a3f7" translate="yes" xml:space="preserve">
          <source>To append text to a field without clearing its content, you may use the &lt;code&gt;append&lt;/code&gt; method:</source>
          <target state="translated">要将文本追加到字段而不清除其内容，可以使用 &lt;code&gt;append&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="642d1755c83988cefb1048a5b2250cdd8e77384d" translate="yes" xml:space="preserve">
          <source>To assign a global scope to a model, you should override a given model's &lt;code&gt;boot&lt;/code&gt; method and use the &lt;code&gt;addGlobalScope&lt;/code&gt; method:</source>
          <target state="translated">要将全局范围分配给模型，应覆盖给定模型的 &lt;code&gt;boot&lt;/code&gt; 方法，并使用 &lt;code&gt;addGlobalScope&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="adc3a915381fd9a9bdfad652556224e28fa76c5d" translate="yes" xml:space="preserve">
          <source>To assign a shortcut when defining an option, you may specify it before the option name and use a | delimiter to separate the shortcut from the full option name:</source>
          <target state="translated">要在定义一个选项时指定一个快捷方式,可以在选项名前指定,并使用|分隔符将快捷方式与完整的选项名分开。</target>
        </trans-unit>
        <trans-unit id="018ce81ebde7e612ef90ecec77bbcdd7f437d270" translate="yes" xml:space="preserve">
          <source>To assign middleware to all routes within a group, you may use the &lt;code&gt;middleware&lt;/code&gt; method before defining the group. Middleware are executed in the order they are listed in the array:</source>
          <target state="translated">要将中间件分配给组内的所有路由，可以在定义组之前使用 &lt;code&gt;middleware&lt;/code&gt; 方法。中间件按照它们在数组中列出的顺序执行：</target>
        </trans-unit>
        <trans-unit id="c449725d68d126d9e6a108bd4f1b3265fb7f414c" translate="yes" xml:space="preserve">
          <source>To assist you in building these types of applications, Laravel makes it easy to &quot;broadcast&quot; your &lt;a href=&quot;events&quot;&gt;events&lt;/a&gt; over a WebSocket connection. Broadcasting your Laravel events allows you to share the same event names between your server-side code and your client-side JavaScript application.</source>
          <target state="translated">为了帮助您构建这些类型的应用程序，Laravel使通过WebSocket连接轻松&amp;ldquo;广播&amp;rdquo; &lt;a href=&quot;events&quot;&gt;事件&lt;/a&gt;成为可能。广播Laravel事件可让您在服务器端代码和客户端JavaScript应用程序之间共享相同的事件名称。</target>
        </trans-unit>
        <trans-unit id="eed0e6aeed2737f67a652f8d654b9b3794efb68d" translate="yes" xml:space="preserve">
          <source>To authorize an action using gates, you should use the &lt;code&gt;allows&lt;/code&gt; or &lt;code&gt;denies&lt;/code&gt; methods. Note that you are not required to pass the currently authenticated user to these methods. Laravel will automatically take care of passing the user into the gate Closure:</source>
          <target state="translated">要使用盖茨授权操作，应使用 &lt;code&gt;allows&lt;/code&gt; 或 &lt;code&gt;denies&lt;/code&gt; 方法。请注意，您不需要将当前经过身份验证的用户传递给这些方法。Laravel将自动处理将用户带入闸门的操作：</target>
        </trans-unit>
        <trans-unit id="0689015a7b6df90ea58f4b3adb517a9d814723ff" translate="yes" xml:space="preserve">
          <source>To avoid JavaScript errors, be sure to load these files in the proper order:</source>
          <target state="translated">为了避免JavaScript错误,请确保以正确的顺序加载这些文件。</target>
        </trans-unit>
        <trans-unit id="a93fc5240b81e394f5e95c88315edc2667627593" translate="yes" xml:space="preserve">
          <source>To better understand when you may want to use the &lt;code&gt;toOthers&lt;/code&gt; method, let's imagine a task list application where a user may create a new task by entering a task name. To create a task, your application might make a request to a &lt;code&gt;/task&lt;/code&gt; end-point which broadcasts the task's creation and returns a JSON representation of the new task. When your JavaScript application receives the response from the end-point, it might directly insert the new task into its task list like so:</source>
          <target state="translated">为了更好地了解何时需要使用 &lt;code&gt;toOthers&lt;/code&gt; 方法，让我们想象一个任务列表应用程序，用户可以在其中输入任务名称来创建新任务。要创建任务，您的应用程序可能会向 &lt;code&gt;/task&lt;/code&gt; 端点发出请求，该端点广播任务的创建并返回新任务的JSON表示形式。当您的JavaScript应用程序从端点接收到响应时，它可能会直接将新任务插入其任务列表，如下所示：</target>
        </trans-unit>
        <trans-unit id="50632dcd79f4e73b87365472ad938a8b37dc2baa" translate="yes" xml:space="preserve">
          <source>To broadcast client events, you may use Echo's &lt;code&gt;whisper&lt;/code&gt; method:</source>
          <target state="translated">要广播客户端事件，您可以使用Echo的 &lt;code&gt;whisper&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="27d60647284f4a8bc8b3173375b8f4057737a46d" translate="yes" xml:space="preserve">
          <source>To cancel a subscription, call the &lt;code&gt;cancel&lt;/code&gt; method on the user's subscription:</source>
          <target state="translated">若要取消订阅，请在用户的订阅上调用 &lt;code&gt;cancel&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="7d6a347b8ddc8138873e6d6c2ee411999feffd4b" translate="yes" xml:space="preserve">
          <source>To click a link, you may use the &lt;code&gt;clickLink&lt;/code&gt; method on the browser instance. The &lt;code&gt;clickLink&lt;/code&gt; method will click the link that has the given display text:</source>
          <target state="translated">要单击链接，可以在浏览器实例上使用 &lt;code&gt;clickLink&lt;/code&gt; 方法。该 &lt;code&gt;clickLink&lt;/code&gt; 方法单击具有给定的显示文本中的链接：</target>
        </trans-unit>
        <trans-unit id="9c1ea582af298fa254ddc8096f67ad108df83a09" translate="yes" xml:space="preserve">
          <source>To connect to your MySQL or PostgreSQL database from your host machine's database client, you should connect to &lt;code&gt;127.0.0.1&lt;/code&gt; and port &lt;code&gt;33060&lt;/code&gt; (MySQL) or &lt;code&gt;54320&lt;/code&gt; (PostgreSQL). The username and password for both databases is &lt;code&gt;homestead&lt;/code&gt; / &lt;code&gt;secret&lt;/code&gt;.</source>
          <target state="translated">要从主机的数据库客户端连接到MySQL或PostgreSQL数据库，应连接到 &lt;code&gt;127.0.0.1&lt;/code&gt; 和端口 &lt;code&gt;33060&lt;/code&gt; （MySQL）或 &lt;code&gt;54320&lt;/code&gt; （PostgreSQL）。这两个数据库的用户名和密码均为 &lt;code&gt;homestead&lt;/code&gt; / &lt;code&gt;secret&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0780f765ae74c760a8da467968a8781cd3b1c301" translate="yes" xml:space="preserve">
          <source>To convert a model and its loaded &lt;a href=&quot;eloquent-relationships&quot;&gt;relationships&lt;/a&gt; to an array, you should use the &lt;code&gt;toArray&lt;/code&gt; method. This method is recursive, so all attributes and all relations (including the relations of relations) will be converted to arrays:</source>
          <target state="translated">要将模型及其加载的&lt;a href=&quot;eloquent-relationships&quot;&gt;关系&lt;/a&gt;转换为数组，应使用 &lt;code&gt;toArray&lt;/code&gt; 方法。此方法是递归的，因此所有属性和所有关系（包括关系的关系）都将转换为数组：</target>
        </trans-unit>
        <trans-unit id="fd8281b1ce280c8c1d7f0bd5d7626429904416ea" translate="yes" xml:space="preserve">
          <source>To convert a model to JSON, you should use the &lt;code&gt;toJson&lt;/code&gt; method. Like &lt;code&gt;toArray&lt;/code&gt;, the &lt;code&gt;toJson&lt;/code&gt; method is recursive, so all attributes and relations will be converted to JSON. You may also specify JSON encoding options &lt;a href=&quot;http://php.net/manual/en/function.json-encode.php&quot;&gt;supported by PHP&lt;/a&gt;:</source>
          <target state="translated">要将模型转换为JSON，应使用 &lt;code&gt;toJson&lt;/code&gt; 方法。与 &lt;code&gt;toArray&lt;/code&gt; 一样， &lt;code&gt;toJson&lt;/code&gt; 方法是递归的，因此所有属性和关系都将转换为JSON。您还可以指定&lt;a href=&quot;http://php.net/manual/en/function.json-encode.php&quot;&gt;PHP支持的&lt;/a&gt; JSON编码选项：</target>
        </trans-unit>
        <trans-unit id="c276d4f58b07e55bc2eca27ccedf15f8818d830f" translate="yes" xml:space="preserve">
          <source>To create a factory, use the &lt;code&gt;make:factory&lt;/code&gt;&lt;a href=&quot;artisan&quot;&gt;Artisan command&lt;/a&gt;:</source>
          <target state="translated">要创建工厂，请使用 &lt;code&gt;make:factory&lt;/code&gt; &lt;a href=&quot;artisan&quot;&gt;Artisan命令&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="e454cbabf938eb5a1a35f1cccbe08022c0303d66" translate="yes" xml:space="preserve">
          <source>To create a migration, use the &lt;code&gt;make:migration&lt;/code&gt;&lt;a href=&quot;artisan&quot;&gt;Artisan command&lt;/a&gt;:</source>
          <target state="translated">要创建迁移，请使用 &lt;code&gt;make:migration&lt;/code&gt; &lt;a href=&quot;artisan&quot;&gt;Artisan命令&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="4b98ad379d32eff8129efa8aa080c203cd377fda" translate="yes" xml:space="preserve">
          <source>To create a new command, use the &lt;code&gt;make:command&lt;/code&gt; Artisan command. This command will create a new command class in the &lt;code&gt;app/Console/Commands&lt;/code&gt; directory. Don't worry if this directory does not exist in your application, since it will be created the first time you run the &lt;code&gt;make:command&lt;/code&gt; Artisan command. The generated command will include the default set of properties and methods that are present on all commands:</source>
          <target state="translated">要创建新命令，请使用 &lt;code&gt;make:command&lt;/code&gt; Artisan命令。此命令将在 &lt;code&gt;app/Console/Commands&lt;/code&gt; 目录中创建一个新的命令类。如果您的应用程序中不存在该目录，请不要担心，因为它将在您第一次运行 &lt;code&gt;make:command&lt;/code&gt; Artisan命令时创建。生成的命令将包括所有命令中都存在的默认属性和方法集：</target>
        </trans-unit>
        <trans-unit id="27f9180a9f165de9178905be1082c2f8867a21de" translate="yes" xml:space="preserve">
          <source>To create a new database table, use the &lt;code&gt;create&lt;/code&gt; method on the &lt;code&gt;Schema&lt;/code&gt; facade. The &lt;code&gt;create&lt;/code&gt; method accepts two arguments. The first is the name of the table, while the second is a &lt;code&gt;Closure&lt;/code&gt; which receives a &lt;code&gt;Blueprint&lt;/code&gt; object that may be used to define the new table:</source>
          <target state="translated">若要创建新的数据库表，请在 &lt;code&gt;Schema&lt;/code&gt; 外观上使用 &lt;code&gt;create&lt;/code&gt; 方法。该 &lt;code&gt;create&lt;/code&gt; 方法接受两个参数。第一个是表的名称，第二个是一个 &lt;code&gt;Closure&lt;/code&gt; ，它接收一个可用于定义新表的 &lt;code&gt;Blueprint&lt;/code&gt; 对象：</target>
        </trans-unit>
        <trans-unit id="dd3405917a5907aa118a063f37845dd6bb347245" translate="yes" xml:space="preserve">
          <source>To create a new middleware, use the &lt;code&gt;make:middleware&lt;/code&gt; Artisan command:</source>
          <target state="translated">要创建新的中间件，请使用 &lt;code&gt;make:middleware&lt;/code&gt; Artisan命令：</target>
        </trans-unit>
        <trans-unit id="46eb4e41a80a19b082150f2e05aea66132ebf059" translate="yes" xml:space="preserve">
          <source>To create a new record in the database, create a new model instance, set attributes on the model, then call the &lt;code&gt;save&lt;/code&gt; method:</source>
          <target state="translated">要在数据库中创建新记录，请创建一个新的模型实例，在模型上设置属性，然后调用 &lt;code&gt;save&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="200221820a7a3bc86e704c6ed09e32fda100fb03" translate="yes" xml:space="preserve">
          <source>To create a new test case, use the &lt;code&gt;make:test&lt;/code&gt; Artisan command:</source>
          <target state="translated">要创建一个新的测试用例，请使用 &lt;code&gt;make:test&lt;/code&gt; Artisan命令：</target>
        </trans-unit>
        <trans-unit id="ba01eb43778a2ec8e66967bcc2206ca77b374e4d" translate="yes" xml:space="preserve">
          <source>To create a resource collection, you should use the &lt;code&gt;--collection&lt;/code&gt; flag when creating the resource. Or, including the word &lt;code&gt;Collection&lt;/code&gt; in the resource name will indicate to Laravel that it should create a collection resource. Collection resources extend the &lt;code&gt;Illuminate\Http\Resources\Json\ResourceCollection&lt;/code&gt; class:</source>
          <target state="translated">要创建资源集合，应在创建资源时使用 &lt;code&gt;--collection&lt;/code&gt; 标志。或者，在资源名称中包含&amp;ldquo; &lt;code&gt;Collection&lt;/code&gt; &amp;rdquo;一词将向Laravel表示它应创建一个收集资源。集合资源扩展了 &lt;code&gt;Illuminate\Http\Resources\Json\ResourceCollection&lt;/code&gt; 类：</target>
        </trans-unit>
        <trans-unit id="4266e3d7358b3618595153450c5007305495db27" translate="yes" xml:space="preserve">
          <source>To create a subscription, first retrieve an instance of your billable model, which typically will be an instance of &lt;code&gt;App\User&lt;/code&gt;. Once you have retrieved the model instance, you may use the &lt;code&gt;newSubscription&lt;/code&gt; method to create the model's subscription:</source>
          <target state="translated">要创建订阅，请首先检索您的计费模型的实例，该实例通常将是 &lt;code&gt;App\User&lt;/code&gt; 的实例。检索模型实例后，可以使用 &lt;code&gt;newSubscription&lt;/code&gt; 方法创建模型的订阅：</target>
        </trans-unit>
        <trans-unit id="17bedd4172a6374fb3925828ca9b40af8d37610a" translate="yes" xml:space="preserve">
          <source>To create our custom cache driver, we first need to implement the &lt;code&gt;Illuminate\Contracts\Cache\Store&lt;/code&gt;&lt;a href=&quot;contracts&quot;&gt;contract&lt;/a&gt;. So, a MongoDB cache implementation would look something like this:</source>
          <target state="translated">要创建我们的自定义缓存驱动程序，我们首先需要实现 &lt;code&gt;Illuminate\Contracts\Cache\Store&lt;/code&gt; &lt;a href=&quot;contracts&quot;&gt;合同&lt;/a&gt;。因此，MongoDB缓存实现如下所示：</target>
        </trans-unit>
        <trans-unit id="e007816e53d2968cc1b3fcf843626c4f0de37df4" translate="yes" xml:space="preserve">
          <source>To create the symbolic link, you may use the &lt;code&gt;storage:link&lt;/code&gt; Artisan command:</source>
          <target state="translated">要创建符号链接，您可以使用 &lt;code&gt;storage:link&lt;/code&gt; Artisan命令：</target>
        </trans-unit>
        <trans-unit id="23d1975a5b78c8f4e9d30d199953f519d9d98c0b" translate="yes" xml:space="preserve">
          <source>To defer the loading of a provider, set the &lt;code&gt;defer&lt;/code&gt; property to &lt;code&gt;true&lt;/code&gt; and define a &lt;code&gt;provides&lt;/code&gt; method. The &lt;code&gt;provides&lt;/code&gt; method should return the service container bindings registered by the provider:</source>
          <target state="translated">要推迟提供程序的加载，请将 &lt;code&gt;defer&lt;/code&gt; 属性设置为 &lt;code&gt;true&lt;/code&gt; 并定义一个 &lt;code&gt;provides&lt;/code&gt; 方法。该 &lt;code&gt;provides&lt;/code&gt; 方法应该返回由提供注册服务容器绑定：</target>
        </trans-unit>
        <trans-unit id="025cf5854a5a54aaa6da2f4a1f338a32a1f84c1b" translate="yes" xml:space="preserve">
          <source>To define a mutator, define a &lt;code&gt;setFooAttribute&lt;/code&gt; method on your model where &lt;code&gt;Foo&lt;/code&gt; is the &quot;studly&quot; cased name of the column you wish to access. So, again, let's define a mutator for the &lt;code&gt;first_name&lt;/code&gt; attribute. This mutator will be automatically called when we attempt to set the value of the &lt;code&gt;first_name&lt;/code&gt; attribute on the model:</source>
          <target state="translated">要定义一个变体，请在模型上定义一个 &lt;code&gt;setFooAttribute&lt;/code&gt; 方法，其中 &lt;code&gt;Foo&lt;/code&gt; 是您要访问的列的&amp;ldquo;按studly&amp;rdquo;大小写的名称。因此，让我们再次为 &lt;code&gt;first_name&lt;/code&gt; 属性定义一个变量。当我们尝试在模型上设置 &lt;code&gt;first_name&lt;/code&gt; 属性的值时，将自动调用此mutator ：</target>
        </trans-unit>
        <trans-unit id="2e7bc1582ba8c38dffdd177244df948cb7e19357" translate="yes" xml:space="preserve">
          <source>To define an accessor, create a &lt;code&gt;getFooAttribute&lt;/code&gt; method on your model where &lt;code&gt;Foo&lt;/code&gt; is the &quot;studly&quot; cased name of the column you wish to access. In this example, we'll define an accessor for the &lt;code&gt;first_name&lt;/code&gt; attribute. The accessor will automatically be called by Eloquent when attempting to retrieve the value of the &lt;code&gt;first_name&lt;/code&gt; attribute:</source>
          <target state="translated">要定义访问器，请在模型上创建一个 &lt;code&gt;getFooAttribute&lt;/code&gt; 方法，其中 &lt;code&gt;Foo&lt;/code&gt; 是您要访问的列的&amp;ldquo; studly&amp;rdquo;大小写名称。在此示例中，我们将为 &lt;code&gt;first_name&lt;/code&gt; 属性定义一个访问器。尝试检索 &lt;code&gt;first_name&lt;/code&gt; 属性的值时，Eloquent将自动调用访问器：</target>
        </trans-unit>
        <trans-unit id="55b13a3b12edfe3fea0d0ff9a74cffab4b073ac3" translate="yes" xml:space="preserve">
          <source>To define the inverse of a many-to-many relationship, you place another call to &lt;code&gt;belongsToMany&lt;/code&gt; on your related model. To continue our user roles example, let's define the &lt;code&gt;users&lt;/code&gt; method on the &lt;code&gt;Role&lt;/code&gt; model:</source>
          <target state="translated">要定义多对多关系的逆关系，您可以在相关模型上放置另一个对 &lt;code&gt;belongsToMany&lt;/code&gt; 的调用。继续我们的用户角色示例，让我们在 &lt;code&gt;Role&lt;/code&gt; 模型上定义 &lt;code&gt;users&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="b3879940e7d2392ed0079f614270582b3f48eddc" translate="yes" xml:space="preserve">
          <source>To delete a model, call the &lt;code&gt;delete&lt;/code&gt; method on a model instance:</source>
          <target state="translated">要删除模型，请在模型实例上调用 &lt;code&gt;delete&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="640a752181c4d8662649dc869f1b8fb2f9f5e74c" translate="yes" xml:space="preserve">
          <source>To delete all of your failed jobs, you may use the &lt;code&gt;queue:flush&lt;/code&gt; command:</source>
          <target state="translated">要删除所有失败的作业，可以使用 &lt;code&gt;queue:flush&lt;/code&gt; 命令：</target>
        </trans-unit>
        <trans-unit id="8aa87cca3d9517a523f1914db6abeb5137f95017" translate="yes" xml:space="preserve">
          <source>To destroy the machine, you may use the &lt;code&gt;vagrant destroy --force&lt;/code&gt; command.</source>
          <target state="translated">要销毁机器，您可以使用 &lt;code&gt;vagrant destroy --force&lt;/code&gt; 命令。</target>
        </trans-unit>
        <trans-unit id="80ca6568023ea2fbb83d7cf030058a8213b8212d" translate="yes" xml:space="preserve">
          <source>To determine if a given model instance has been soft deleted, use the &lt;code&gt;trashed&lt;/code&gt; method:</source>
          <target state="translated">要确定给定的模型实例是否已被软删除，请使用 &lt;code&gt;trashed&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="a484dd5d5f72a97ea2036062f66a53c27e95dec9" translate="yes" xml:space="preserve">
          <source>To determine if an item is present in the session, even if its value is &lt;code&gt;null&lt;/code&gt;, you may use the &lt;code&gt;exists&lt;/code&gt; method. The &lt;code&gt;exists&lt;/code&gt; method returns &lt;code&gt;true&lt;/code&gt; if the item is present:</source>
          <target state="translated">要确定会话中是否存在某项，即使其值为 &lt;code&gt;null&lt;/code&gt; ，也可以使用 &lt;code&gt;exists&lt;/code&gt; 方法。如果 &lt;code&gt;exists&lt;/code&gt; 该项，则exist方法将返回 &lt;code&gt;true&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="c7d78952af8eb61da2a9365dce7d44c15d9ff846" translate="yes" xml:space="preserve">
          <source>To determine if an item is present in the session, you may use the &lt;code&gt;has&lt;/code&gt; method. The &lt;code&gt;has&lt;/code&gt; method returns &lt;code&gt;true&lt;/code&gt; if the item is present and is not &lt;code&gt;null&lt;/code&gt;:</source>
          <target state="translated">要确定会话中是否存在某个项目，可以使用 &lt;code&gt;has&lt;/code&gt; 方法。该 &lt;code&gt;has&lt;/code&gt; 方法返回 &lt;code&gt;true&lt;/code&gt; ，如果该项目存在且不是 &lt;code&gt;null&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="d4d1fbe92117c822265748960ce0e0f1a34bc239" translate="yes" xml:space="preserve">
          <source>To determine if the user is already logged into your application, you may use the &lt;code&gt;check&lt;/code&gt; method on the &lt;code&gt;Auth&lt;/code&gt; facade, which will return &lt;code&gt;true&lt;/code&gt; if the user is authenticated:</source>
          <target state="translated">要确定用户是否已经登录到您的应用程序，可以在 &lt;code&gt;Auth&lt;/code&gt; 外观上使用 &lt;code&gt;check&lt;/code&gt; 方法，如果用户通过了身份验证，则该方法将返回 &lt;code&gt;true&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="05203652b90dcb31ffddd95179b907c4fca692bf" translate="yes" xml:space="preserve">
          <source>To determine if the user was once an active subscriber, but has cancelled their subscription, you may use the &lt;code&gt;cancelled&lt;/code&gt; method:</source>
          <target state="translated">要确定用户是否曾经是活动订户，但已取消其订阅，则可以使用 &lt;code&gt;cancelled&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="b964d5d3297017551f58fc75b21be06bd06383a4" translate="yes" xml:space="preserve">
          <source>To determine the MIME type of the uploaded file, the file's contents will be read and the framework will attempt to guess the MIME type, which may be different from the client provided MIME type.</source>
          <target state="translated">为了确定上传文件的MIME类型,文件的内容将被读取,框架将尝试猜测MIME类型,这可能与客户端提供的MIME类型不同。</target>
        </trans-unit>
        <trans-unit id="a0c90cbe3bd8849e26c68a6f8ab971ff2e0e5257" translate="yes" xml:space="preserve">
          <source>To disable maintenance mode, use the &lt;code&gt;up&lt;/code&gt; command:</source>
          <target state="translated">要禁用维护模式，请使用 &lt;code&gt;up&lt;/code&gt; 命令：</target>
        </trans-unit>
        <trans-unit id="eb50348ad8ea04e9c8739d6497ab1cb0fee8e4c4" translate="yes" xml:space="preserve">
          <source>To dispatch an event, you may pass an instance of the event to the &lt;code&gt;event&lt;/code&gt; helper. The helper will dispatch the event to all of its registered listeners. Since the &lt;code&gt;event&lt;/code&gt; helper is globally available, you may call it from anywhere in your application:</source>
          <target state="translated">要调度事件，您可以将事件的实例传递给 &lt;code&gt;event&lt;/code&gt; 助手。助手将事件分发给所有已注册的侦听器。由于 &lt;code&gt;event&lt;/code&gt; 助手是全局可用的，因此您可以在应用程序中的任何位置调用它：</target>
        </trans-unit>
        <trans-unit id="e76ad782b950b60e8101b5663a9681ba6cf011d4" translate="yes" xml:space="preserve">
          <source>To display an error message, use the &lt;code&gt;error&lt;/code&gt; method. Error message text is typically displayed in red:</source>
          <target state="translated">要显示错误消息，请使用 &lt;code&gt;error&lt;/code&gt; 方法。错误消息文本通常以红色显示：</target>
        </trans-unit>
        <trans-unit id="16c4eaae1cfd816050fa069d3a7dc64bd54ff8a3" translate="yes" xml:space="preserve">
          <source>To drop a column, use the &lt;code&gt;dropColumn&lt;/code&gt; method on the Schema builder. Before dropping columns from a SQLite database, you will need to add the &lt;code&gt;doctrine/dbal&lt;/code&gt; dependency to your &lt;code&gt;composer.json&lt;/code&gt; file and run the &lt;code&gt;composer update&lt;/code&gt; command in your terminal to install the library:</source>
          <target state="translated">要删除列，请使用&amp;ldquo;模式&amp;rdquo;构建器上的 &lt;code&gt;dropColumn&lt;/code&gt; 方法。在从SQLite数据库删除列之前，您需要将 &lt;code&gt;doctrine/dbal&lt;/code&gt; 依赖项添加到 &lt;code&gt;composer.json&lt;/code&gt; 文件中，并在终端中运行 &lt;code&gt;composer update&lt;/code&gt; 命令以安装该库：</target>
        </trans-unit>
        <trans-unit id="62c143139b5bc24433b9f742f4cc48b3b3be35ba" translate="yes" xml:space="preserve">
          <source>To drop a foreign key, you may use the &lt;code&gt;dropForeign&lt;/code&gt; method. Foreign key constraints use the same naming convention as indexes. So, we will concatenate the table name and the columns in the constraint then suffix the name with &quot;_foreign&quot;:</source>
          <target state="translated">要删除外键，可以使用 &lt;code&gt;dropForeign&lt;/code&gt; 方法。外键约束使用与索引相同的命名约定。因此，我们将表名和约束中的列连接起来，然后在名称后加上&amp;ldquo; _foreign&amp;rdquo;：</target>
        </trans-unit>
        <trans-unit id="ecd1bb2b51ccb4eb92f9dd03fbcf7628b504e896" translate="yes" xml:space="preserve">
          <source>To drop an existing table, you may use the &lt;code&gt;drop&lt;/code&gt; or &lt;code&gt;dropIfExists&lt;/code&gt; methods:</source>
          <target state="translated">要删除现有表，可以使用 &lt;code&gt;drop&lt;/code&gt; 或 &lt;code&gt;dropIfExists&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="3b0c41426bb5ac1987bd00fef84247b9de8f3179" translate="yes" xml:space="preserve">
          <source>To drop an index, you must specify the index's name. By default, Laravel automatically assigns a reasonable name to the indexes. Concatenate the table name, the name of the indexed column, and the index type. Here are some examples:</source>
          <target state="translated">要删除一个索引,你必须指定索引的名称.默认情况下,Laravel会自动为索引指定一个合理的名称.将表名,索引列名和索引类型连在一起.下面是一些例子:</target>
        </trans-unit>
        <trans-unit id="7648a4da11a3205cf5f7cc755060a72d6269bb5d" translate="yes" xml:space="preserve">
          <source>To eager load nested relationships, you may use &quot;dot&quot; syntax. For example, let's eager load all of the book's authors and all of the author's personal contacts in one Eloquent statement:</source>
          <target state="translated">要急切加载嵌套关系,你可以使用 &quot;点 &quot;语法。例如,让我们在一个 Eloquent 语句中急切地加载所有书籍的作者和作者的所有个人联系人。</target>
        </trans-unit>
        <trans-unit id="68200e67247da28b6a333a25c1201d31f4b3c77a" translate="yes" xml:space="preserve">
          <source>To enable &lt;a href=&quot;https://www.vagrantup.com/docs/networking/public_network.html&quot;&gt;DHCP&lt;/a&gt;, just remove the &lt;code&gt;ip&lt;/code&gt; option from your configuration:</source>
          <target state="translated">要启用&lt;a href=&quot;https://www.vagrantup.com/docs/networking/public_network.html&quot;&gt;DHCP&lt;/a&gt;，只需从配置中删除 &lt;code&gt;ip&lt;/code&gt; 选项：</target>
        </trans-unit>
        <trans-unit id="3ca1ec99a3d3c64894270306c9432b3044815718" translate="yes" xml:space="preserve">
          <source>To enable &lt;a href=&quot;https://www.vagrantup.com/docs/synced-folders/nfs.html&quot;&gt;NFS&lt;/a&gt;, you only need to add a simple flag to your synced folder configuration:</source>
          <target state="translated">要启用&lt;a href=&quot;https://www.vagrantup.com/docs/synced-folders/nfs.html&quot;&gt;NFS&lt;/a&gt;，您只需要在同步的文件夹配置中添加一个简单的标志：</target>
        </trans-unit>
        <trans-unit id="b9e7ab967470b89bb4d66771ecab394d3975b8cd" translate="yes" xml:space="preserve">
          <source>To enable a &lt;a href=&quot;https://www.vagrantup.com/docs/networking/public_network.html&quot;&gt;bridged&lt;/a&gt; interface, configure a &lt;code&gt;bridge&lt;/code&gt; setting and change the network type to &lt;code&gt;public_network&lt;/code&gt;:</source>
          <target state="translated">要启用&lt;a href=&quot;https://www.vagrantup.com/docs/networking/public_network.html&quot;&gt;桥接&lt;/a&gt;接口，请配置 &lt;code&gt;bridge&lt;/code&gt; 设置并将网络类型更改为 &lt;code&gt;public_network&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="5e1daa9ded7298f8e7ef8a4ee4e35f9120d3894c" translate="yes" xml:space="preserve">
          <source>To enable caching for a given disk, you may add a &lt;code&gt;cache&lt;/code&gt; directive to the disk's configuration options. The &lt;code&gt;cache&lt;/code&gt; option should be an array of caching options containing the &lt;code&gt;disk&lt;/code&gt; name, the &lt;code&gt;expire&lt;/code&gt; time in seconds, and the cache &lt;code&gt;prefix&lt;/code&gt;:</source>
          <target state="translated">要为给定的磁盘启用缓存，您可以在磁盘的配置选项中添加 &lt;code&gt;cache&lt;/code&gt; 指令。该 &lt;code&gt;cache&lt;/code&gt; 选项应该包含缓存选项的阵列 &lt;code&gt;disk&lt;/code&gt; 名称， &lt;code&gt;expire&lt;/code&gt; 时间，以秒，并且缓存 &lt;code&gt;prefix&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="17888f61404ccc06db6999aaba544db89e287285" translate="yes" xml:space="preserve">
          <source>To enable maintenance mode, execute the &lt;code&gt;down&lt;/code&gt; Artisan command:</source>
          <target state="translated">要启用维护模式，请执行 &lt;code&gt;down&lt;/code&gt; Artisan命令：</target>
        </trans-unit>
        <trans-unit id="bb23dfcf84012efe9e2d8eada854b760c00c5c5b" translate="yes" xml:space="preserve">
          <source>To encourage active collaboration, Laravel strongly encourages pull requests, not just bug reports. &quot;Bug reports&quot; may also be sent in the form of a pull request containing a failing test.</source>
          <target state="translated">为了鼓励积极的合作,Laravel强烈鼓励拉取请求,而不仅仅是错误报告。&quot;bug报告 &quot;也可以以包含失败测试的拉取请求的形式发送.</target>
        </trans-unit>
        <trans-unit id="9d7920019f41c00505bcf84078f4cc19f972dfe6" translate="yes" xml:space="preserve">
          <source>To execute an &lt;code&gt;insert&lt;/code&gt; statement, you may use the &lt;code&gt;insert&lt;/code&gt; method on the &lt;code&gt;DB&lt;/code&gt; facade. Like &lt;code&gt;select&lt;/code&gt;, this method takes the raw SQL query as its first argument and bindings as its second argument:</source>
          <target state="translated">要执行 &lt;code&gt;insert&lt;/code&gt; 语句，可以在 &lt;code&gt;DB&lt;/code&gt; 外观上使用 &lt;code&gt;insert&lt;/code&gt; 方法。与 &lt;code&gt;select&lt;/code&gt; 一样，此方法将原始SQL查询作为其第一个参数，并将绑定作为其第二个参数：</target>
        </trans-unit>
        <trans-unit id="1615e51d6f1d51a93f2c2e64de563e9dccb845e1" translate="yes" xml:space="preserve">
          <source>To execute code on every cache operation, you may listen for the &lt;a href=&quot;events&quot;&gt;events&lt;/a&gt; fired by the cache. Typically, you should place these event listeners within your &lt;code&gt;EventServiceProvider&lt;/code&gt;:</source>
          <target state="translated">要在每个缓存操作上执行代码，您可以侦听缓存触发的&lt;a href=&quot;events&quot;&gt;事件&lt;/a&gt;。通常，您应该将这些事件侦听器放在 &lt;code&gt;EventServiceProvider&lt;/code&gt; 中：</target>
        </trans-unit>
        <trans-unit id="80acd04bf9f8b9010bd15f7fd8fe94dbbe47d1d9" translate="yes" xml:space="preserve">
          <source>To force Dusk to use its own environment file when running tests, create a &lt;code&gt;.env.dusk.{environment}&lt;/code&gt; file in the root of your project. For example, if you will be initiating the &lt;code&gt;dusk&lt;/code&gt; command from your &lt;code&gt;local&lt;/code&gt; environment, you should create a &lt;code&gt;.env.dusk.local&lt;/code&gt; file.</source>
          <target state="translated">要强制Dusk在运行测试时使用其自己的环境文件，请在项目的根目录中创建一个 &lt;code&gt;.env.dusk.{environment}&lt;/code&gt; 文件。例如，如果要在 &lt;code&gt;local&lt;/code&gt; 环境中启动 &lt;code&gt;dusk&lt;/code&gt; 命令，则应创建一个 &lt;code&gt;.env.dusk.local&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="c25061f0ae2b45bc330626ad6733fee1d425f151" translate="yes" xml:space="preserve">
          <source>To generate a Dusk test, use the &lt;code&gt;dusk:make&lt;/code&gt; Artisan command. The generated test will be placed in the &lt;code&gt;tests/Browser&lt;/code&gt; directory:</source>
          <target state="translated">要生成黄昏测试，请使用 &lt;code&gt;dusk:make&lt;/code&gt; Artisan命令。生成的测试将放置在 &lt;code&gt;tests/Browser&lt;/code&gt; 目录中：</target>
        </trans-unit>
        <trans-unit id="092d809168c1f4a00d68b7ef8703a826bb6289a0" translate="yes" xml:space="preserve">
          <source>To generate a URL to this route, you may use the &lt;code&gt;route&lt;/code&gt; helper like so:</source>
          <target state="translated">要生成此路线的URL，您可以使用 &lt;code&gt;route&lt;/code&gt; 助手，如下所示：</target>
        </trans-unit>
        <trans-unit id="13cb6400553114e750389676b28e1e7ca2c01cb9" translate="yes" xml:space="preserve">
          <source>To generate a component, use the &lt;code&gt;dusk:component&lt;/code&gt; Artisan command. New components are placed in the &lt;code&gt;test/Browser/Components&lt;/code&gt; directory:</source>
          <target state="translated">要生成组件，请使用 &lt;code&gt;dusk:component&lt;/code&gt; Artisan命令。新组件放置在 &lt;code&gt;test/Browser/Components&lt;/code&gt; 目录中：</target>
        </trans-unit>
        <trans-unit id="452c8d10570f0b622337b98b84370622da84b07d" translate="yes" xml:space="preserve">
          <source>To generate a mailable with a corresponding Markdown template, you may use the &lt;code&gt;--markdown&lt;/code&gt; option of the &lt;code&gt;make:mail&lt;/code&gt; Artisan command:</source>
          <target state="translated">要生成带有相应Markdown模板的可 &lt;code&gt;make:mail&lt;/code&gt; ，可以使用make：mail Artisan命令的 &lt;code&gt;--markdown&lt;/code&gt; 选项：</target>
        </trans-unit>
        <trans-unit id="34a98adeb579a10208e80c5246da9559f0ef6b3e" translate="yes" xml:space="preserve">
          <source>To generate a notification with a corresponding Markdown template, you may use the &lt;code&gt;--markdown&lt;/code&gt; option of the &lt;code&gt;make:notification&lt;/code&gt; Artisan command:</source>
          <target state="translated">要使用相应的Markdown模板生成通知，可以使用 &lt;code&gt;make:notification&lt;/code&gt; Artisan命令的 &lt;code&gt;--markdown&lt;/code&gt; 选项：</target>
        </trans-unit>
        <trans-unit id="429591bde77bf79a891645e842682c78259b0316" translate="yes" xml:space="preserve">
          <source>To generate a page object, use the &lt;code&gt;dusk:page&lt;/code&gt; Artisan command. All page objects will be placed in the &lt;code&gt;tests/Browser/Pages&lt;/code&gt; directory:</source>
          <target state="translated">要生成页面对象，请使用 &lt;code&gt;dusk:page&lt;/code&gt; Artisan命令。所有页面对象将放置在 &lt;code&gt;tests/Browser/Pages&lt;/code&gt; 目录中：</target>
        </trans-unit>
        <trans-unit id="bccfdfb4fe344f863bf8aa13fb33cbaeb4136ccd" translate="yes" xml:space="preserve">
          <source>To generate a resource class, you may use the &lt;code&gt;make:resource&lt;/code&gt; Artisan command. By default, resources will be placed in the &lt;code&gt;app/Http/Resources&lt;/code&gt; directory of your application. Resources extend the &lt;code&gt;Illuminate\Http\Resources\Json\JsonResource&lt;/code&gt; class:</source>
          <target state="translated">要生成资源类，可以使用 &lt;code&gt;make:resource&lt;/code&gt; Artisan命令。默认情况下，资源将放置在 &lt;code&gt;app/Http/Resources&lt;/code&gt; 目录中。资源扩展了 &lt;code&gt;Illuminate\Http\Resources\Json\JsonResource&lt;/code&gt; 类：</target>
        </trans-unit>
        <trans-unit id="d9b2df8b2395a903bf2ec9612844cb7857c9c9f3" translate="yes" xml:space="preserve">
          <source>To generate a seeder, execute the &lt;code&gt;make:seeder&lt;/code&gt;&lt;a href=&quot;artisan&quot;&gt;Artisan command&lt;/a&gt;. All seeders generated by the framework will be placed in the &lt;code&gt;database/seeds&lt;/code&gt; directory:</source>
          <target state="translated">要生成种子，请执行 &lt;code&gt;make:seeder&lt;/code&gt; &lt;a href=&quot;artisan&quot;&gt;Artisan命令&lt;/a&gt;。框架生成的所有 &lt;code&gt;database/seeds&lt;/code&gt; 都将放置在database / seeds目录中：</target>
        </trans-unit>
        <trans-unit id="6942811e41a653d165d71494ef1dd4ba5657e149" translate="yes" xml:space="preserve">
          <source>To get a better understanding of the &lt;code&gt;validate&lt;/code&gt; method, let's jump back into the &lt;code&gt;store&lt;/code&gt; method:</source>
          <target state="translated">为了更好地了解 &lt;code&gt;validate&lt;/code&gt; 方法，让我们跳回到 &lt;code&gt;store&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="5a6de9ae7cd647f820978dffecb864f2890b54a0" translate="yes" xml:space="preserve">
          <source>To get started with Socialite, use Composer to add the package to your project's dependencies:</source>
          <target state="translated">要开始使用Socialite,请使用Composer将软件包添加到你的项目的依赖关系中。</target>
        </trans-unit>
        <trans-unit id="50ff081e326cb293f0e1b51b255bb5d006a1a060" translate="yes" xml:space="preserve">
          <source>To get started, call the &lt;code&gt;Auth::viaRequest&lt;/code&gt; method within the &lt;code&gt;boot&lt;/code&gt; method of your &lt;code&gt;AuthServiceProvider&lt;/code&gt;. The &lt;code&gt;viaRequest&lt;/code&gt; method accepts a guard name as its first argument. This name can be any string that describes your custom guard. The second argument passed to the method should be a Closure that receives the incoming HTTP request and returns a user instance or, if authentication fails, &lt;code&gt;null&lt;/code&gt;:</source>
          <target state="translated">要开始，调用 &lt;code&gt;Auth::viaRequest&lt;/code&gt; 的内法 &lt;code&gt;boot&lt;/code&gt; 您的方法 &lt;code&gt;AuthServiceProvider&lt;/code&gt; 。该 &lt;code&gt;viaRequest&lt;/code&gt; 方法接受一个后卫的名字作为第一个参数。该名称可以是描述您的自定义防护的任何字符串。传递给该方法的第二个参数应该是一个Closure，它接收传入的HTTP请求并返回用户实例，或者，如果身份验证失败，则返回 &lt;code&gt;null&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="272cdafb972d36cbc538bc182cc95009c88307df" translate="yes" xml:space="preserve">
          <source>To get started, define a &lt;code&gt;$dispatchesEvents&lt;/code&gt; property on your Eloquent model that maps various points of the Eloquent model's lifecycle to your own &lt;a href=&quot;events&quot;&gt;event classes&lt;/a&gt;:</source>
          <target state="translated">首先，在Eloquent模型上定义 &lt;code&gt;$dispatchesEvents&lt;/code&gt; 属性，该属性将Eloquent模型生命周期的各个点映射到您自己的&lt;a href=&quot;events&quot;&gt;事件类&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="2ffe243da1e0a49bf8d06d82ec7edbd4894bf96f" translate="yes" xml:space="preserve">
          <source>To get started, define a &lt;code&gt;tap&lt;/code&gt; array on the channel's configuration. The &lt;code&gt;tap&lt;/code&gt; array should contain a list of classes that should have an opportunity to customize (or &quot;tap&quot; into) the Monolog instance after it is created:</source>
          <target state="translated">首先，在通道的配置上定义一个 &lt;code&gt;tap&lt;/code&gt; 阵列。该 &lt;code&gt;tap&lt;/code&gt; 数组应该包含类的列表应该有机会定制（或&amp;ldquo;龙头&amp;rdquo;成），它被创建后的独白实例：</target>
        </trans-unit>
        <trans-unit id="685f06bcf06ac345e7c42f5b5a23436202a57d40" translate="yes" xml:space="preserve">
          <source>To get started, install Passport via the Composer package manager:</source>
          <target state="translated">要开始,请通过Composer软件包管理器安装Passport。</target>
        </trans-unit>
        <trans-unit id="270a3d727636f144351377351bd90bad8b861411" translate="yes" xml:space="preserve">
          <source>To get started, let's create an Eloquent model. Models typically live in the &lt;code&gt;app&lt;/code&gt; directory, but you are free to place them anywhere that can be auto-loaded according to your &lt;code&gt;composer.json&lt;/code&gt; file. All Eloquent models extend &lt;code&gt;Illuminate\Database\Eloquent\Model&lt;/code&gt; class.</source>
          <target state="translated">首先，让我们创建一个Eloquent模型。模型通常位于 &lt;code&gt;app&lt;/code&gt; 目录中，但是您可以将其随意放置在可以根据 &lt;code&gt;composer.json&lt;/code&gt; 文件自动加载的任何位置。所有Eloquent模型都扩展了 &lt;code&gt;Illuminate\Database\Eloquent\Model&lt;/code&gt; 类。</target>
        </trans-unit>
        <trans-unit id="c430b941b76735c598394d0ed6c5b9496335e97d" translate="yes" xml:space="preserve">
          <source>To get started, let's write a test that verifies we can log into our application. After generating a test, we can modify it to navigate to the login page, enter some credentials, and click the &quot;Login&quot; button. To create a browser instance, call the &lt;code&gt;browse&lt;/code&gt; method:</source>
          <target state="translated">首先，让我们编写一个测试来验证我们可以登录到我们的应用程序。生成测试后，我们可以对其进行修改以导航到登录页面，输入一些凭据，然后单击&amp;ldquo;登录&amp;rdquo;按钮。要创建一个浏览器实例，调用 &lt;code&gt;browse&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="5378dfa2aad04e9a3c0de61652a64d04eb153296" translate="yes" xml:space="preserve">
          <source>To get started, open your &lt;code&gt;tests/DuskTestCase.php&lt;/code&gt; file, which is the base Dusk test case for your application. Within this file, you can remove the call to the &lt;code&gt;startChromeDriver&lt;/code&gt; method. This will stop Dusk from automatically starting the ChromeDriver:</source>
          <target state="translated">首先，打开您的 &lt;code&gt;tests/DuskTestCase.php&lt;/code&gt; 文件，这是您应用程序的基本Dusk测试用例。在此文件中，您可以删除对 &lt;code&gt;startChromeDriver&lt;/code&gt; 方法的调用。这将阻止Dusk自动启动ChromeDriver：</target>
        </trans-unit>
        <trans-unit id="1aae117fc636492e242f74e761e598a233989ec3" translate="yes" xml:space="preserve">
          <source>To get started, verify that your &lt;code&gt;App\User&lt;/code&gt; model implements the &lt;code&gt;Illuminate\Contracts\Auth\CanResetPassword&lt;/code&gt; contract. Of course, the &lt;code&gt;App\User&lt;/code&gt; model included with the framework already implements this interface, and uses the &lt;code&gt;Illuminate\Auth\Passwords\CanResetPassword&lt;/code&gt; trait to include the methods needed to implement the interface.</source>
          <target state="translated">首先，请确认您的 &lt;code&gt;App\User&lt;/code&gt; 模型实现了 &lt;code&gt;Illuminate\Contracts\Auth\CanResetPassword&lt;/code&gt; 合同。当然，框架附带的 &lt;code&gt;App\User&lt;/code&gt; 模型已经实现了此接口，并使用 &lt;code&gt;Illuminate\Auth\Passwords\CanResetPassword&lt;/code&gt; 特征来包括实现接口所需的方法。</target>
        </trans-unit>
        <trans-unit id="c92f9465707f57511e9f939e082ad681aec17c8a" translate="yes" xml:space="preserve">
          <source>To get started, verify that your &lt;code&gt;App\User&lt;/code&gt; model implements the &lt;code&gt;Illuminate\Contracts\Auth\MustVerifyEmail&lt;/code&gt; contract:</source>
          <target state="translated">首先，请验证您的 &lt;code&gt;App\User&lt;/code&gt; 模型是否实现了 &lt;code&gt;Illuminate\Contracts\Auth\MustVerifyEmail&lt;/code&gt; 合同：</target>
        </trans-unit>
        <trans-unit id="8c14f3657e19be9e1fc064be8988f32821dc65de" translate="yes" xml:space="preserve">
          <source>To get started, you should add the &lt;code&gt;laravel/dusk&lt;/code&gt; Composer dependency to your project:</source>
          <target state="translated">首先，您应该将 &lt;code&gt;laravel/dusk&lt;/code&gt; Composer依赖项添加到您的项目中：</target>
        </trans-unit>
        <trans-unit id="a2b02071162da4e35b6fdedcaa2b56bc006f6158" translate="yes" xml:space="preserve">
          <source>To give your application a speed boost, you should cache all of your configuration files into a single file using the &lt;code&gt;config:cache&lt;/code&gt; Artisan command. This will combine all of the configuration options for your application into a single file which will be loaded quickly by the framework.</source>
          <target state="translated">为了提高应用程序的速度，您应该使用 &lt;code&gt;config:cache&lt;/code&gt; Artisan命令将所有配置文件缓存到一个文件中。这会将您应用程序的所有配置选项组合到一个文件中，该文件将由框架快速加载。</target>
        </trans-unit>
        <trans-unit id="543c1c3914baae9abc2579b86041852f19d145d5" translate="yes" xml:space="preserve">
          <source>To help you learn more about what's happening within your application, Laravel provides robust logging services that allow you to log messages to files, the system error log, and even to Slack to notify your entire team.</source>
          <target state="translated">为了帮助你了解更多关于你的应用程序中发生的事情,Laravel提供了强大的日志服务,允许你将消息记录到文件,系统错误日志,甚至可以通过Slack通知你的整个团队.</target>
        </trans-unit>
        <trans-unit id="13bff7c8def6a38cc2ffabc55e389b8bca742e78" translate="yes" xml:space="preserve">
          <source>To include the first view that exists from a given array of views, you may use the &lt;code&gt;includeFirst&lt;/code&gt; directive:</source>
          <target state="translated">要包括给定视图数组中存在的第一个视图，可以使用 &lt;code&gt;includeFirst&lt;/code&gt; 指令：</target>
        </trans-unit>
        <trans-unit id="2e3bc5cd8f098f799a7d24fdeccec1ff055a95e0" translate="yes" xml:space="preserve">
          <source>To indicate that the task should run on only one server, use the &lt;code&gt;onOneServer&lt;/code&gt; method when defining the scheduled task. The first server to obtain the task will secure an atomic lock on the job to prevent other servers from running the same task at the same time:</source>
          <target state="translated">要指示任务仅应在一台服务器上运行，请在定义计划任务时使用 &lt;code&gt;onOneServer&lt;/code&gt; 方法。第一个获得任务的服务器将确保该任务的原子锁定，以防止其他服务器同时运行同一任务：</target>
        </trans-unit>
        <trans-unit id="1cf3ee9fd8f52403ed09690a3207e42b229d8822" translate="yes" xml:space="preserve">
          <source>To inform Laravel that a given event should be broadcast, implement the &lt;code&gt;Illuminate\Contracts\Broadcasting\ShouldBroadcast&lt;/code&gt; interface on the event class. This interface is already imported into all event classes generated by the framework so you may easily add it to any of your events.</source>
          <target state="translated">要通知Laravel应该广播给定事件，请在事件类上实现 &lt;code&gt;Illuminate\Contracts\Broadcasting\ShouldBroadcast&lt;/code&gt; 接口。此接口已经导入到框架生成的所有事件类中，因此您可以轻松地将其添加到任何事件中。</target>
        </trans-unit>
        <trans-unit id="2052c488c890f65e0e479e9ffc60b190e98f15c1" translate="yes" xml:space="preserve">
          <source>To install Elasticsearch, add the &lt;code&gt;elasticsearch&lt;/code&gt; option to your &lt;code&gt;Homestead.yaml&lt;/code&gt; file and specify a supported version, which may be a major version or an exact version number (major.minor.patch). The default installation will create a cluster named 'homestead'. You should never give Elasticsearch more than half of the operating system's memory, so make sure your Homestead machine has at least twice the Elasticsearch allocation:</source>
          <target state="translated">要安装Elasticsearch，请在您的 &lt;code&gt;Homestead.yaml&lt;/code&gt; 文件中添加 &lt;code&gt;elasticsearch&lt;/code&gt; 选项，然后指定受支持的版本，该版本可以是主版本，也可以是确切的版本号（major.minor.patch）。默认安装将创建一个名为&amp;ldquo; homestead&amp;rdquo;的集群。您绝不能为Elasticsearch提供超过操作系统内存一半的内存，因此请确保您的Homestead机器至少有两倍于Elasticsearch分配：</target>
        </trans-unit>
        <trans-unit id="b988d4840316c5d966e5c189df68a0adde5b26f5" translate="yes" xml:space="preserve">
          <source>To install Homestead directly into your project, require it using Composer:</source>
          <target state="translated">要将Homestead直接安装到您的项目中,需要使用Composer。</target>
        </trans-unit>
        <trans-unit id="e5572ad7908b4b0cc0eddfa5d382712b52133237" translate="yes" xml:space="preserve">
          <source>To install MongoDB Community Edition, update your &lt;code&gt;Homestead.yaml&lt;/code&gt; file with the following configuration option:</source>
          <target state="translated">要安装MongoDB社区版，请使用以下配置选项更新您的 &lt;code&gt;Homestead.yaml&lt;/code&gt; 文件：</target>
        </trans-unit>
        <trans-unit id="0e293c50b18b2626e75c344eed36e197aeade7d8" translate="yes" xml:space="preserve">
          <source>To instruct the validator to ignore the user's ID, we'll use the &lt;code&gt;Rule&lt;/code&gt; class to fluently define the rule. In this example, we'll also specify the validation rules as an array instead of using the &lt;code&gt;|&lt;/code&gt; character to delimit the rules:</source>
          <target state="translated">为了指示验证者忽略用户的ID，我们将使用 &lt;code&gt;Rule&lt;/code&gt; 类来流畅地定义规则。在此示例中，我们还将验证规则指定为数组，而不是使用 &lt;code&gt;|&lt;/code&gt; 分隔规则的字符：</target>
        </trans-unit>
        <trans-unit id="0f5b3ba7a06a0003ff749cb0167a671213d82dc3" translate="yes" xml:space="preserve">
          <source>To join a presence channel, you may use Echo's &lt;code&gt;join&lt;/code&gt; method. The &lt;code&gt;join&lt;/code&gt; method will return a &lt;code&gt;PresenceChannel&lt;/code&gt; implementation which, along with exposing the &lt;code&gt;listen&lt;/code&gt; method, allows you to subscribe to the &lt;code&gt;here&lt;/code&gt;, &lt;code&gt;joining&lt;/code&gt;, and &lt;code&gt;leaving&lt;/code&gt; events.</source>
          <target state="translated">要加入在线频道，您可以使用Echo的 &lt;code&gt;join&lt;/code&gt; 方法。该 &lt;code&gt;join&lt;/code&gt; 方法将返回一个 &lt;code&gt;PresenceChannel&lt;/code&gt; 实现，它与露出一起 &lt;code&gt;listen&lt;/code&gt; 的方法，可以让你订阅 &lt;code&gt;here&lt;/code&gt; ， &lt;code&gt;joining&lt;/code&gt; 和 &lt;code&gt;leaving&lt;/code&gt; 的事件。</target>
        </trans-unit>
        <trans-unit id="bcc77c77d05fdd7ea30c76cdad2efbd139d55e21" translate="yes" xml:space="preserve">
          <source>To keep the &lt;code&gt;queue:work&lt;/code&gt; process running permanently in the background, you should use a process monitor such as &lt;a href=&quot;#supervisor-configuration&quot;&gt;Supervisor&lt;/a&gt; to ensure that the queue worker does not stop running.</source>
          <target state="translated">要使 &lt;code&gt;queue:work&lt;/code&gt; 进程在后台永久运行，您应该使用进程监视器（例如&lt;a href=&quot;#supervisor-configuration&quot;&gt;Supervisor）&lt;/a&gt;来确保队列工作器不会停止运行。</target>
        </trans-unit>
        <trans-unit id="bfa358575ba19a7dab080df6fb5301f2b3f7c17c" translate="yes" xml:space="preserve">
          <source>To learn about Laravel's powerful validation features, let's look at a complete example of validating a form and displaying the error messages back to the user.</source>
          <target state="translated">要了解Laravel强大的验证功能,我们来看一个完整的验证表单并将错误信息显示给用户的例子.</target>
        </trans-unit>
        <trans-unit id="0cc31a3f61b4daf485409efb9173393c95070265" translate="yes" xml:space="preserve">
          <source>To learn more about Laravel Nova, check out the &lt;a href=&quot;https://nova.laravel.com&quot;&gt;Nova website&lt;/a&gt;.</source>
          <target state="translated">要了解有关Laravel Nova的更多信息，请访问&lt;a href=&quot;https://nova.laravel.com&quot;&gt;Nova网站&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a7828286d9227e4c39b614e60f2e2cbec9673d82" translate="yes" xml:space="preserve">
          <source>To learn more about email verification, check out the &lt;a href=&quot;verification&quot;&gt;complete documentation&lt;/a&gt;.</source>
          <target state="translated">要了解有关电子邮件验证的更多信息，请查看&lt;a href=&quot;verification&quot;&gt;完整的文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0b70ff9d8212ccd283ce2b36b3901b4586f7d0c5" translate="yes" xml:space="preserve">
          <source>To learn more about the additional fields supported by Stripe or Braintree, check out Stripe's &lt;a href=&quot;https://stripe.com/docs/api#create_customer&quot;&gt;documentation on customer creation&lt;/a&gt; or the corresponding &lt;a href=&quot;https://developers.braintreepayments.com/reference/request/customer/create/php&quot;&gt;Braintree documentation&lt;/a&gt;.</source>
          <target state="translated">要了解有关Stripe或Braintree支持的其他字段的更多信息，请查看Stripe &lt;a href=&quot;https://stripe.com/docs/api#create_customer&quot;&gt;有关创建客户&lt;/a&gt;的文档或相应的&lt;a href=&quot;https://developers.braintreepayments.com/reference/request/customer/create/php&quot;&gt;Braintree文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f76a2ac2a112b3d048b0260774d1cf5713a19536" translate="yes" xml:space="preserve">
          <source>To leave a channel, you may call the &lt;code&gt;leave&lt;/code&gt; method on your Echo instance:</source>
          <target state="translated">要离开频道，可以在Echo实例上调用 &lt;code&gt;leave&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="c37d53972e07bbb7ec8cd5d8372fe8de80442d7e" translate="yes" xml:space="preserve">
          <source>To limit the number of results returned from the query, or to skip a given number of results in the query, you may use the &lt;code&gt;skip&lt;/code&gt; and &lt;code&gt;take&lt;/code&gt; methods:</source>
          <target state="translated">要限制查询返回的结果数，或跳过查询中给定的结果数，可以使用 &lt;code&gt;skip&lt;/code&gt; 和 &lt;code&gt;take&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="b3286189a5268807974bcf1577d15a0014734d68" translate="yes" xml:space="preserve">
          <source>To listen for client events, you may use the &lt;code&gt;listenForWhisper&lt;/code&gt; method:</source>
          <target state="translated">要侦听客户端事件，可以使用 &lt;code&gt;listenForWhisper&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="1ceab1d7ff97eaba9ae2f4d7db52057025ddf646" translate="yes" xml:space="preserve">
          <source>To load a relationship only when it has not already been loaded, use the &lt;code&gt;loadMissing&lt;/code&gt; method:</source>
          <target state="translated">要仅在尚未加载关系时加载关系，请使用 &lt;code&gt;loadMissing&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="5a0bfd48505fcbac7c32453f93682f5b70057cd8" translate="yes" xml:space="preserve">
          <source>To log a user into the application by their ID, you may use the &lt;code&gt;loginUsingId&lt;/code&gt; method. This method accepts the primary key of the user you wish to authenticate:</source>
          <target state="translated">要将用户按其ID登录到应用程序中，可以使用 &lt;code&gt;loginUsingId&lt;/code&gt; 方法。此方法接受您想要认证的用户的主密钥：</target>
        </trans-unit>
        <trans-unit id="f1af86d8c7d4145814422e4d86195204d874f142" translate="yes" xml:space="preserve">
          <source>To log users out of your application, you may use the &lt;code&gt;logout&lt;/code&gt; method on the &lt;code&gt;Auth&lt;/code&gt; facade. This will clear the authentication information in the user's session:</source>
          <target state="translated">要将用户注销出您的应用程序，您可以使用 &lt;code&gt;Auth&lt;/code&gt; 外观上的 &lt;code&gt;logout&lt;/code&gt; 方法。这将清除用户会话中的身份验证信息：</target>
        </trans-unit>
        <trans-unit id="43c753e15897941a6e9096a80d24fe4a0c004d36" translate="yes" xml:space="preserve">
          <source>To make this a cinch, Laravel utilizes the &lt;a href=&quot;https://github.com/vlucas/phpdotenv&quot;&gt;DotEnv&lt;/a&gt; PHP library by Vance Lucas. In a fresh Laravel installation, the root directory of your application will contain a &lt;code&gt;.env.example&lt;/code&gt; file. If you install Laravel via Composer, this file will automatically be renamed to &lt;code&gt;.env&lt;/code&gt;. Otherwise, you should rename the file manually.</source>
          <target state="translated">为了做到这一点，Laravel利用了Vance Lucas 的&lt;a href=&quot;https://github.com/vlucas/phpdotenv&quot;&gt;DotEnv&lt;/a&gt; PHP库。在全新的Laravel安装中，您的应用程序的根目录将包含 &lt;code&gt;.env.example&lt;/code&gt; 文件。如果通过Composer安装Laravel，此文件将自动重命名为 &lt;code&gt;.env&lt;/code&gt; 。否则，您应该手动重命名该文件。</target>
        </trans-unit>
        <trans-unit id="6a1c306de784b0403b163c053d8dcee292005093" translate="yes" xml:space="preserve">
          <source>To manually log users out of your application, you may use the &lt;code&gt;logout&lt;/code&gt; method on the &lt;code&gt;Auth&lt;/code&gt; facade. This will clear the authentication information in the user's session:</source>
          <target state="translated">要手动将用户从应用程序中 &lt;code&gt;logout&lt;/code&gt; ，可以使用 &lt;code&gt;Auth&lt;/code&gt; 外观上的注销方法。这将清除用户会话中的身份验证信息：</target>
        </trans-unit>
        <trans-unit id="b177887edd63645e620c90eb6c58dbdb25dc401e" translate="yes" xml:space="preserve">
          <source>To modify the form fields that are required when a new user registers with your application, or to customize how new users are stored into your database, you may modify the &lt;code&gt;RegisterController&lt;/code&gt; class. This class is responsible for validating and creating new users of your application.</source>
          <target state="translated">若要修改新用户向您的应用程序注册时所需的表单字段，或者要自定义新用户如何存储到数据库中，可以修改 &lt;code&gt;RegisterController&lt;/code&gt; 类。此类负责验证和创建应用程序的新用户。</target>
        </trans-unit>
        <trans-unit id="5a68ca117926f87761095293b212ce54709c931a" translate="yes" xml:space="preserve">
          <source>To obtain an instance of the current HTTP request via dependency injection, you should type-hint the &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; class on your controller method. The incoming request instance will automatically be injected by the &lt;a href=&quot;container&quot;&gt;service container&lt;/a&gt;:</source>
          <target state="translated">要通过依赖注入获得当前HTTP请求的实例，您应该在控制器方法上键入 &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; 类的提示。传入的请求实例将由&lt;a href=&quot;container&quot;&gt;服务容器&lt;/a&gt;自动注入：</target>
        </trans-unit>
        <trans-unit id="84c24ecb9267dce66aaab63f0506714133e19e32" translate="yes" xml:space="preserve">
          <source>To pad to the left, you should specify a negative size. No padding will take place if the absolute value of the given size is less than or equal to the length of the array:</source>
          <target state="translated">要向左填充,你应该指定一个负的大小,如果给定的大小的绝对值小于或等于数组的长度,则不会发生填充。如果给定大小的绝对值小于或等于数组的长度,则不会进行填充。</target>
        </trans-unit>
        <trans-unit id="d9e8b2d12ca581fc9be15172e53119f7c0a2c370" translate="yes" xml:space="preserve">
          <source>To perform a &quot;cross join&quot; use the &lt;code&gt;crossJoin&lt;/code&gt; method with the name of the table you wish to cross join to. Cross joins generate a cartesian product between the first table and the joined table:</source>
          <target state="translated">要执行&amp;ldquo;交叉连接&amp;rdquo;，请使用 &lt;code&gt;crossJoin&lt;/code&gt; 方法和您希望交叉连接到的表的名称。交叉联接在第一个表和联接的表之间生成笛卡尔乘积：</target>
        </trans-unit>
        <trans-unit id="dd2928639fa94e8fdaa5af0de378f61ae57bf42a" translate="yes" xml:space="preserve">
          <source>To populate the default model with attributes, you may pass an array or Closure to the &lt;code&gt;withDefault&lt;/code&gt; method:</source>
          <target state="translated">要使用属性填充默认模型，可以将数组或Closure传递给 &lt;code&gt;withDefault&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="e112d842952bb50d6632ab8139a4db3aa9543ddf" translate="yes" xml:space="preserve">
          <source>To prompt newly registered users to verify their email, the &lt;code&gt;User&lt;/code&gt; model should be marked with the &lt;code&gt;MustVerifyEmail&lt;/code&gt; interface:</source>
          <target state="translated">为了提示新注册的用户验证其电子邮件，应在 &lt;code&gt;User&lt;/code&gt; 模型上标记 &lt;code&gt;MustVerifyEmail&lt;/code&gt; 接口：</target>
        </trans-unit>
        <trans-unit id="a658cec1777fdaf2a72ee2c0f61899058838b748" translate="yes" xml:space="preserve">
          <source>To provision buckets, add a &lt;code&gt;buckets&lt;/code&gt; directive to your Homestead configuration file:</source>
          <target state="translated">要配置存储桶，请将 &lt;code&gt;buckets&lt;/code&gt; 指令添加到您的Homestead配置文件中：</target>
        </trans-unit>
        <trans-unit id="ecd3aff0cabb741203c8b37c746b84dd56d22f03" translate="yes" xml:space="preserve">
          <source>To publish the Passport Vue components, use the &lt;code&gt;vendor:publish&lt;/code&gt; Artisan command:</source>
          <target state="translated">要发布Passport Vue组件，请使用 &lt;code&gt;vendor:publish&lt;/code&gt; Artisan命令：</target>
        </trans-unit>
        <trans-unit id="4f625d39c7ae40b9b2ebecc6fd225f97e8e4926a" translate="yes" xml:space="preserve">
          <source>To quickly generate an API resource controller that does not include the &lt;code&gt;create&lt;/code&gt; or &lt;code&gt;edit&lt;/code&gt; methods, use the &lt;code&gt;--api&lt;/code&gt; switch when executing the &lt;code&gt;make:controller&lt;/code&gt; command:</source>
          <target state="translated">要快速生成不包含 &lt;code&gt;create&lt;/code&gt; 或 &lt;code&gt;edit&lt;/code&gt; 方法的API资源控制器，请在执行 &lt;code&gt;make:controller&lt;/code&gt; 命令时使用 &lt;code&gt;--api&lt;/code&gt; 开关：</target>
        </trans-unit>
        <trans-unit id="f681e9527d46804e62ce3d973bc602db6addde03" translate="yes" xml:space="preserve">
          <source>To register an explicit binding, use the router's &lt;code&gt;model&lt;/code&gt; method to specify the class for a given parameter. You should define your explicit model bindings in the &lt;code&gt;boot&lt;/code&gt; method of the &lt;code&gt;RouteServiceProvider&lt;/code&gt; class:</source>
          <target state="translated">要注册显式绑定，请使用路由器的 &lt;code&gt;model&lt;/code&gt; 方法为给定参数指定类。您应该在 &lt;code&gt;RouteServiceProvider&lt;/code&gt; 类的 &lt;code&gt;boot&lt;/code&gt; 方法中定义您的显式模型绑定：</target>
        </trans-unit>
        <trans-unit id="63c2f2640fa276e69b0847e383151b11e1e1493e" translate="yes" xml:space="preserve">
          <source>To register an observer, use the &lt;code&gt;observe&lt;/code&gt; method on the model you wish to observe. You may register observers in the &lt;code&gt;boot&lt;/code&gt; method of one of your service providers. In this example, we'll register the observer in the &lt;code&gt;AppServiceProvider&lt;/code&gt;:</source>
          <target state="translated">要注册观察者， &lt;code&gt;observe&lt;/code&gt; 在要观察的模型上使用观察方法。您可以使用服务提供商之一的 &lt;code&gt;boot&lt;/code&gt; 方法注册观察者。在此示例中，我们将在 &lt;code&gt;AppServiceProvider&lt;/code&gt; 中注册观察者：</target>
        </trans-unit>
        <trans-unit id="1f64294a151b76e0743fad6ffa0391496aa35a36" translate="yes" xml:space="preserve">
          <source>To register the custom cache driver with Laravel, we will use the &lt;code&gt;extend&lt;/code&gt; method on the &lt;code&gt;Cache&lt;/code&gt; facade. The call to &lt;code&gt;Cache::extend&lt;/code&gt; could be done in the &lt;code&gt;boot&lt;/code&gt; method of the default &lt;code&gt;App\Providers\AppServiceProvider&lt;/code&gt; that ships with fresh Laravel applications, or you may create your own service provider to house the extension - just don't forget to register the provider in the &lt;code&gt;config/app.php&lt;/code&gt; provider array:</source>
          <target state="translated">要向Laravel注册自定义缓存驱动程序，我们将在 &lt;code&gt;Cache&lt;/code&gt; 外观上使用 &lt;code&gt;extend&lt;/code&gt; 方法。对 &lt;code&gt;Cache::extend&lt;/code&gt; 的调用可以通过新的Laravel应用程序附带的默认 &lt;code&gt;App\Providers\AppServiceProvider&lt;/code&gt; 的 &lt;code&gt;boot&lt;/code&gt; 方法来完成，或者您可以创建自己的服务提供程序来容纳扩展名-只是不要忘记注册提供商中 &lt;code&gt;config/app.php&lt;/code&gt; 提供商数组：</target>
        </trans-unit>
        <trans-unit id="4955bfe3d9802b5b5aebdf773b4b30168960f60e" translate="yes" xml:space="preserve">
          <source>To register your package's &lt;a href=&quot;views&quot;&gt;views&lt;/a&gt; with Laravel, you need to tell Laravel where the views are located. You may do this using the service provider's &lt;code&gt;loadViewsFrom&lt;/code&gt; method. The &lt;code&gt;loadViewsFrom&lt;/code&gt; method accepts two arguments: the path to your view templates and your package's name. For example, if your package's name is &lt;code&gt;courier&lt;/code&gt;, you would add the following to your service provider's &lt;code&gt;boot&lt;/code&gt; method:</source>
          <target state="translated">要向Laravel 注册包的&lt;a href=&quot;views&quot;&gt;视图&lt;/a&gt;，您需要告诉Laravel视图位于何处。您可以使用服务提供商的 &lt;code&gt;loadViewsFrom&lt;/code&gt; 方法执行此操作。该 &lt;code&gt;loadViewsFrom&lt;/code&gt; 方法接受两个参数：路径视图模板和你的包的名字。例如，如果包的名称是 &lt;code&gt;courier&lt;/code&gt; ，则应将以下内容添加到服务提供商的 &lt;code&gt;boot&lt;/code&gt; 方法中：</target>
        </trans-unit>
        <trans-unit id="4e804e0cd1e82bc695ca7bfc167f4379e182ff7e" translate="yes" xml:space="preserve">
          <source>To register your package's Artisan commands with Laravel, you may use the &lt;code&gt;commands&lt;/code&gt; method. This method expects an array of command class names. Once the commands have been registered, you may execute them using the &lt;a href=&quot;artisan&quot;&gt;Artisan CLI&lt;/a&gt;:</source>
          <target state="translated">要向Laravel注册软件包的Artisan命令，可以使用 &lt;code&gt;commands&lt;/code&gt; 方法。此方法需要一个命令类名称数组。一旦命令被注册，您可以使用&lt;a href=&quot;artisan&quot;&gt;Artisan CLI&lt;/a&gt;执行它们：</target>
        </trans-unit>
        <trans-unit id="d886e9674dd87f6dfbc0393b2cfc1f6af17e668b" translate="yes" xml:space="preserve">
          <source>To register your provider, add it to the array:</source>
          <target state="translated">要注册您的提供商,请将其添加到数组中。</target>
        </trans-unit>
        <trans-unit id="7cf16f5dd77ed8590484b4aa1b36589e1289c4e9" translate="yes" xml:space="preserve">
          <source>To remove a record from your index, &lt;code&gt;delete&lt;/code&gt; the model from the database. This form of removal is even compatible with &lt;a href=&quot;eloquent#soft-deleting&quot;&gt;soft deleted&lt;/a&gt; models:</source>
          <target state="translated">要从索引中 &lt;code&gt;delete&lt;/code&gt; 记录，请从数据库中删除模型。这种删除形式甚至与&lt;a href=&quot;eloquent#soft-deleting&quot;&gt;软删除的&lt;/a&gt;模型兼容：</target>
        </trans-unit>
        <trans-unit id="2ea0dbb203616b2c33b4c78fac5b0ebb474e6ee9" translate="yes" xml:space="preserve">
          <source>To rename a column, you may use the &lt;code&gt;renameColumn&lt;/code&gt; method on the Schema builder. Before renaming a column, be sure to add the &lt;code&gt;doctrine/dbal&lt;/code&gt; dependency to your &lt;code&gt;composer.json&lt;/code&gt; file:</source>
          <target state="translated">要重命名列，可以使用&amp;ldquo;模式&amp;rdquo;构建器上的 &lt;code&gt;renameColumn&lt;/code&gt; 方法。重命名列之前，请确保将 &lt;code&gt;doctrine/dbal&lt;/code&gt; 依赖项添加到 &lt;code&gt;composer.json&lt;/code&gt; 文件：</target>
        </trans-unit>
        <trans-unit id="091919443422939bcf786c9d5a36172e7d3ea5fb" translate="yes" xml:space="preserve">
          <source>To rename an existing database table, use the &lt;code&gt;rename&lt;/code&gt; method:</source>
          <target state="translated">要重命名现有数据库表，请使用 &lt;code&gt;rename&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="b7d86e81fb51dc803f08b538ef0729760adf01f2" translate="yes" xml:space="preserve">
          <source>To rename an index, you may use the &lt;code&gt;renameIndex&lt;/code&gt; method. This method accepts the current index name as its first argument and the desired name as its second argument:</source>
          <target state="translated">要重命名索引，可以使用 &lt;code&gt;renameIndex&lt;/code&gt; 方法。此方法将当前索引名称作为其第一个参数，并将所需名称作为其第二个参数：</target>
        </trans-unit>
        <trans-unit id="22e9111b7229a39c7b002797027f32b6aa4b375f" translate="yes" xml:space="preserve">
          <source>To replace the place-holders when retrieving a translation string, pass an array of replacements as the second argument to the &lt;code&gt;__&lt;/code&gt; function:</source>
          <target state="translated">要在检索翻译字符串时替换占位符，请将替换数组作为第二个参数传递给 &lt;code&gt;__&lt;/code&gt; 函数：</target>
        </trans-unit>
        <trans-unit id="852ec9ce100b766e1dabc067c6e4803b98d9951a" translate="yes" xml:space="preserve">
          <source>To retrieve a tagged cache item, pass the same ordered list of tags to the &lt;code&gt;tags&lt;/code&gt; method and then call the &lt;code&gt;get&lt;/code&gt; method with the key you wish to retrieve:</source>
          <target state="translated">要检索带标签的缓存项，请将相同的标签顺序列表传递给 &lt;code&gt;tags&lt;/code&gt; 方法，然后使用您希望检索的键调用 &lt;code&gt;get&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="a1b0a43f7c2a176192bf75db791d4ce93ca401b7" translate="yes" xml:space="preserve">
          <source>To retrieve a token, make a request to the &lt;code&gt;oauth/token&lt;/code&gt; endpoint:</source>
          <target state="translated">要检索令牌，请向 &lt;code&gt;oauth/token&lt;/code&gt; 端点发出请求：</target>
        </trans-unit>
        <trans-unit id="0d2350f50b7b6016e94fef9225160e2e9b1cf897" translate="yes" xml:space="preserve">
          <source>To retrieve an array of all messages for all fields, use the &lt;code&gt;all&lt;/code&gt; method:</source>
          <target state="translated">要检索所有字段的所有消息的数组，请使用 &lt;code&gt;all&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="5b2f4f59b930b73e675a934af295a04a5dc4d6b2" translate="yes" xml:space="preserve">
          <source>To retrieve flashed input from the previous request, use the &lt;code&gt;old&lt;/code&gt; method on the &lt;code&gt;Request&lt;/code&gt; instance. The &lt;code&gt;old&lt;/code&gt; method will pull the previously flashed input data from the &lt;a href=&quot;session&quot;&gt;session&lt;/a&gt;:</source>
          <target state="translated">要从上一个请求中检索刷新的输入，请在 &lt;code&gt;Request&lt;/code&gt; 实例上使用 &lt;code&gt;old&lt;/code&gt; 方法。的 &lt;code&gt;old&lt;/code&gt; 方法将其拉离先前闪过输入数据&lt;a href=&quot;session&quot;&gt;会话&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="e57c65e4f2bd72a03408ba0dc409a66e477818a7" translate="yes" xml:space="preserve">
          <source>To retrieve the first error message for a given field, use the &lt;code&gt;first&lt;/code&gt; method:</source>
          <target state="translated">要检索给定字段的第一条错误消息，请使用 &lt;code&gt;first&lt;/code&gt; 一种方法：</target>
        </trans-unit>
        <trans-unit id="06261d6366d424e8f7f49293ca349c2da4fa2354" translate="yes" xml:space="preserve">
          <source>To retrieve the full URL for the incoming request you may use the &lt;code&gt;url&lt;/code&gt; or &lt;code&gt;fullUrl&lt;/code&gt; methods. The &lt;code&gt;url&lt;/code&gt; method will return the URL without the query string, while the &lt;code&gt;fullUrl&lt;/code&gt; method includes the query string:</source>
          <target state="translated">要检索传入请求的完整URL，可以使用 &lt;code&gt;url&lt;/code&gt; 或 &lt;code&gt;fullUrl&lt;/code&gt; 方法。该 &lt;code&gt;url&lt;/code&gt; 方法将返回URL没有查询字符串，而 &lt;code&gt;fullUrl&lt;/code&gt; 方法包括查询字符串：</target>
        </trans-unit>
        <trans-unit id="98febc282d99e6f5006bbb2dab6f8dca54755f03" translate="yes" xml:space="preserve">
          <source>To retry all of your failed jobs, execute the &lt;code&gt;queue:retry&lt;/code&gt; command and pass &lt;code&gt;all&lt;/code&gt; as the ID:</source>
          <target state="translated">要重试所有失败的作业，请执行 &lt;code&gt;queue:retry&lt;/code&gt; 命令并将 &lt;code&gt;all&lt;/code&gt; 作为ID 传递：</target>
        </trans-unit>
        <trans-unit id="a19cf952b23d5c0dfe2cca1b6d286a18bd777fab" translate="yes" xml:space="preserve">
          <source>To rollback the latest migration operation, you may use the &lt;code&gt;rollback&lt;/code&gt; command. This command rolls back the last &quot;batch&quot; of migrations, which may include multiple migration files:</source>
          <target state="translated">要回滚最新的迁移操作，可以使用 &lt;code&gt;rollback&lt;/code&gt; 命令。此命令回滚迁移的最后一个&amp;ldquo;批&amp;rdquo;，其中可能包括多个迁移文件：</target>
        </trans-unit>
        <trans-unit id="0b0b251fd25668f03a5a58fb1024ecc9911bd153" translate="yes" xml:space="preserve">
          <source>To route Slack notifications to the proper location, define a &lt;code&gt;routeNotificationForSlack&lt;/code&gt; method on your notifiable entity. This should return the webhook URL to which the notification should be delivered. Webhook URLs may be generated by adding an &quot;Incoming Webhook&quot; service to your Slack team:</source>
          <target state="translated">要将Slack通知路由到正确的位置，请在可通知实体上定义 &lt;code&gt;routeNotificationForSlack&lt;/code&gt; 方法。这应该返回通知应传递到的webhook URL。可以通过向Slack团队添加&amp;ldquo;传入Webhook&amp;rdquo;服务来生成Webhook URL：</target>
        </trans-unit>
        <trans-unit id="0eee248e98f8dc83ec47097acb8f1532dbf0e472" translate="yes" xml:space="preserve">
          <source>To run Dusk tests on &lt;a href=&quot;https://codeship.com&quot;&gt;Codeship&lt;/a&gt;, add the following commands to your Codeship project. Of course, these commands are a starting point and you are free to add additional commands as needed:</source>
          <target state="translated">要在&lt;a href=&quot;https://codeship.com&quot;&gt;Codeship&lt;/a&gt;上运行Dusk测试，请将以下命令添加到Codeship项目中。当然，这些命令是一个起点，您可以根据需要随意添加其他命令：</target>
        </trans-unit>
        <trans-unit id="d31cc4db2640b1cf27703620baca1d30eb79dfec" translate="yes" xml:space="preserve">
          <source>To run Dusk tests on &lt;a href=&quot;https://www.heroku.com/continuous-integration&quot;&gt;Heroku CI&lt;/a&gt;, add the following Google Chrome buildpack and scripts to your Heroku &lt;code&gt;app.json&lt;/code&gt; file:</source>
          <target state="translated">要在&lt;a href=&quot;https://www.heroku.com/continuous-integration&quot;&gt;Heroku CI&lt;/a&gt;上运行Dusk测试，请在您的Heroku &lt;code&gt;app.json&lt;/code&gt; 文件中添加以下Google Chrome 构建包和脚本：</target>
        </trans-unit>
        <trans-unit id="5c5f3c001f9531ebe7ea39f41e92bd9fefd3c64a" translate="yes" xml:space="preserve">
          <source>To run a basic query, you may use the &lt;code&gt;select&lt;/code&gt; method on the &lt;code&gt;DB&lt;/code&gt; facade:</source>
          <target state="translated">要运行基本查询，可以在 &lt;code&gt;DB&lt;/code&gt; 外观上使用 &lt;code&gt;select&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="dfd619aec69135f0f0ee0aa42d7f4da5478081db" translate="yes" xml:space="preserve">
          <source>To run a task or story that is defined in your &lt;code&gt;Envoy.blade.php&lt;/code&gt; file, execute Envoy's &lt;code&gt;run&lt;/code&gt; command, passing the name of the task or story you would like to execute. Envoy will run the task and display the output from the servers as the task is running:</source>
          <target state="translated">要运行 &lt;code&gt;Envoy.blade.php&lt;/code&gt; 文件中定义的任务或故事，请执行Envoy的 &lt;code&gt;run&lt;/code&gt; 命令，并传递要执行的任务或故事的名称。Envoy将运行任务，并在任务运行时显示服务器的输出：</target>
        </trans-unit>
        <trans-unit id="2bc24ae026ce6c07654f3e6d619b2b95c45df201" translate="yes" xml:space="preserve">
          <source>To run all of your outstanding migrations, execute the &lt;code&gt;migrate&lt;/code&gt; Artisan command:</source>
          <target state="translated">要运行所有优秀的迁移，执行 &lt;code&gt;migrate&lt;/code&gt; 工匠命令：</target>
        </trans-unit>
        <trans-unit id="70c9b37913abdec2921f6addabed896467532ba3" translate="yes" xml:space="preserve">
          <source>To run your Dusk tests on Travis CI, we will need to use the &quot;sudo-enabled&quot; Ubuntu 14.04 (Trusty) environment. Since Travis CI is not a graphical environment, we will need to take some extra steps in order to launch a Chrome browser. In addition, we will use &lt;code&gt;php artisan serve&lt;/code&gt; to launch PHP's built-in web server:</source>
          <target state="translated">要在Travis CI上运行您的Dusk测试，我们将需要使用&amp;ldquo;启用了sudo的功能&amp;rdquo;的Ubuntu 14.04（Trusty）环境。由于Travis CI不是图形环境，因此我们需要采取一些额外的步骤来启动Chrome浏览器。此外，我们将使用 &lt;code&gt;php artisan serve&lt;/code&gt; 启动PHP的内置Web服务器：</target>
        </trans-unit>
        <trans-unit id="274640fc6653319ed63a7271c53791fd1de95950" translate="yes" xml:space="preserve">
          <source>To run your browser tests, use the &lt;code&gt;dusk&lt;/code&gt; Artisan command:</source>
          <target state="translated">要运行浏览器测试，请使用 &lt;code&gt;dusk&lt;/code&gt; Artisan命令：</target>
        </trans-unit>
        <trans-unit id="0164429e41cfb9815e08a799b49fadb43f1086c9" translate="yes" xml:space="preserve">
          <source>To run your tests, use the &lt;code&gt;dusk&lt;/code&gt; Artisan command. The &lt;code&gt;dusk&lt;/code&gt; command accepts any argument that is also accepted by the &lt;code&gt;phpunit&lt;/code&gt; command:</source>
          <target state="translated">要运行测试，请使用 &lt;code&gt;dusk&lt;/code&gt; Artisan命令。的 &lt;code&gt;dusk&lt;/code&gt; 命令接受也由所接受的任何参数 &lt;code&gt;phpunit&lt;/code&gt; 命令：</target>
        </trans-unit>
        <trans-unit id="50e719da114a389fd0cfd15cad6929e14e53000c" translate="yes" xml:space="preserve">
          <source>To see a listing of all of your linked directories, run the &lt;code&gt;valet links&lt;/code&gt; command. You may use &lt;code&gt;valet unlink app-name&lt;/code&gt; to destroy the symbolic link.</source>
          <target state="translated">要查看所有链接目录的列表，请运行 &lt;code&gt;valet links&lt;/code&gt; 命令。您可以使用 &lt;code&gt;valet unlink app-name&lt;/code&gt; 来破坏符号链接。</target>
        </trans-unit>
        <trans-unit id="e74b65d829df09348616f1e34fd27f32303591c8" translate="yes" xml:space="preserve">
          <source>To see how read / write connections should be configured, let's look at this example:</source>
          <target state="translated">为了了解应该如何配置读/写连接,让我们看看这个例子。</target>
        </trans-unit>
        <trans-unit id="c752cb6564d9dd8476b9d1d2f5b0bab4bf401e07" translate="yes" xml:space="preserve">
          <source>To select a value in a dropdown selection box, you may use the &lt;code&gt;select&lt;/code&gt; method. Like the &lt;code&gt;type&lt;/code&gt; method, the &lt;code&gt;select&lt;/code&gt; method does not require a full CSS selector. When passing a value to the &lt;code&gt;select&lt;/code&gt; method, you should pass the underlying option value instead of the display text:</source>
          <target state="translated">要在下拉选择框中选择一个值，可以使用 &lt;code&gt;select&lt;/code&gt; 方法。与 &lt;code&gt;type&lt;/code&gt; 方法一样， &lt;code&gt;select&lt;/code&gt; 方法不需要完整的CSS选择器。将值传递给 &lt;code&gt;select&lt;/code&gt; 方法时，应传递基础选项值而不是显示文本：</target>
        </trans-unit>
        <trans-unit id="33024ce9a7a13a8292fae73a16aa2c7aeaa9614b" translate="yes" xml:space="preserve">
          <source>To send a message, use the &lt;code&gt;to&lt;/code&gt; method on the &lt;code&gt;Mail&lt;/code&gt;&lt;a href=&quot;facades&quot;&gt;facade&lt;/a&gt;. The &lt;code&gt;to&lt;/code&gt; method accepts an email address, a user instance, or a collection of users. If you pass an object or collection of objects, the mailer will automatically use their &lt;code&gt;email&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt; properties when setting the email recipients, so make sure these attributes are available on your objects. Once you have specified your recipients, you may pass an instance of your mailable class to the &lt;code&gt;send&lt;/code&gt; method:</source>
          <target state="translated">要发送消息，请使用 &lt;code&gt;Mail&lt;/code&gt; &lt;a href=&quot;facades&quot;&gt;Facade&lt;/a&gt;上的 &lt;code&gt;to&lt;/code&gt; 方法。该 &lt;code&gt;to&lt;/code&gt; 方法接受一个电子邮件地址，用户实例，或用户的集合。如果传递对象或对象集合，则邮件发送者在设置电子邮件收件人时将自动使用其 &lt;code&gt;email&lt;/code&gt; 和 &lt;code&gt;name&lt;/code&gt; 属性，因此请确保这些属性在对象上可用。指定收件人后，可以将可邮递类的实例传递给 &lt;code&gt;send&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="e911bd07326bc5e0b2797563b265082bbbcbd131" translate="yes" xml:space="preserve">
          <source>To send output to the console, use the &lt;code&gt;line&lt;/code&gt;, &lt;code&gt;info&lt;/code&gt;, &lt;code&gt;comment&lt;/code&gt;, &lt;code&gt;question&lt;/code&gt; and &lt;code&gt;error&lt;/code&gt; methods. Each of these methods will use appropriate ANSI colors for their purpose. For example, let's display some general information to the user. Typically, the &lt;code&gt;info&lt;/code&gt; method will display in the console as green text:</source>
          <target state="translated">要将输出发送到控制台，请使用 &lt;code&gt;line&lt;/code&gt; ， &lt;code&gt;info&lt;/code&gt; ， &lt;code&gt;comment&lt;/code&gt; ， &lt;code&gt;question&lt;/code&gt; 和 &lt;code&gt;error&lt;/code&gt; 方法。这些方法都将使用适当的ANSI颜色作为其用途。例如，让我们向用户显示一些常规信息。通常， &lt;code&gt;info&lt;/code&gt; 方法将在控制台中以绿色文本显示：</target>
        </trans-unit>
        <trans-unit id="b4c4eac2b9a0b17f7abb9dabb449f62f5ef72c94" translate="yes" xml:space="preserve">
          <source>To send the notification to a channel: &lt;code&gt;#channel&lt;/code&gt;</source>
          <target state="translated">要将通知发送到频道： &lt;code&gt;#channel&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="012f6d29c8a89afe305855925b2f868b4abe3260" translate="yes" xml:space="preserve">
          <source>To send the notification to a user: &lt;code&gt;@user&lt;/code&gt;</source>
          <target state="translated">要将通知发送给用户： &lt;code&gt;@user&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5f565fb954039d44527ee2e09a8a477f33a2e7d3" translate="yes" xml:space="preserve">
          <source>To set configuration values at runtime, pass an array to the &lt;code&gt;config&lt;/code&gt; helper:</source>
          <target state="translated">要在运行时设置配置值，请将数组传递给 &lt;code&gt;config&lt;/code&gt; helper：</target>
        </trans-unit>
        <trans-unit id="72bd3612beb87bc532614cc809ca66cf02d4768d" translate="yes" xml:space="preserve">
          <source>To share a site, navigate to the site's directory in your terminal and run the &lt;code&gt;valet share&lt;/code&gt; command. A publicly accessible URL will be inserted into your clipboard and is ready to paste directly into your browser. That's it.</source>
          <target state="translated">要共享站点，请导航至终端中的站点目录，然后运行 &lt;code&gt;valet share&lt;/code&gt; 命令。可公开访问的URL将被插入剪贴板，并准备直接粘贴到浏览器中。而已。</target>
        </trans-unit>
        <trans-unit id="408d422a25f98e3f349a02f74e197ec6e23a7609" translate="yes" xml:space="preserve">
          <source>To solve this problem, Homestead includes its own &lt;code&gt;share&lt;/code&gt; command. To get started, SSH into your Homestead machine via &lt;code&gt;vagrant ssh&lt;/code&gt; and run &lt;code&gt;share homestead.test&lt;/code&gt;. This will share the &lt;code&gt;homestead.test&lt;/code&gt; site from your &lt;code&gt;Homestead.yaml&lt;/code&gt; configuration file. Of course, you may substitute any of your other configured sites for &lt;code&gt;homestead.test&lt;/code&gt;:</source>
          <target state="translated">为了解决此问题，Homestead包含了自己的 &lt;code&gt;share&lt;/code&gt; 命令。首先，通过 &lt;code&gt;vagrant ssh&lt;/code&gt; SSH进入您的Homestead机器并运行 &lt;code&gt;share homestead.test&lt;/code&gt; 。这将从您的 &lt;code&gt;Homestead.yaml&lt;/code&gt; 配置文件中共享 &lt;code&gt;homestead.test&lt;/code&gt; 站点。当然，您可以用其他任何配置的站点代替 &lt;code&gt;homestead.test&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="5003241dc2806635639ac36df2f7638a8707f658" translate="yes" xml:space="preserve">
          <source>To solve this, you may use the &lt;code&gt;App\Http\Middleware\TrustProxies&lt;/code&gt; middleware that is included in your Laravel application, which allows you to quickly customize the load balancers or proxies that should be trusted by your application. Your trusted proxies should be listed as an array on the &lt;code&gt;$proxies&lt;/code&gt; property of this middleware. In addition to configuring the trusted proxies, you may configure the proxy &lt;code&gt;$headers&lt;/code&gt; that should be trusted:</source>
          <target state="translated">要解决此问题，您可以使用Laravel应用程序中包含的 &lt;code&gt;App\Http\Middleware\TrustProxies&lt;/code&gt; TrustProxies中间件，该中间件可让您快速自定义应用程序应信任的负载均衡器或代理。您的受信任代理应该在此中间件的 &lt;code&gt;$proxies&lt;/code&gt; 属性上以数组形式列出。除了配置受信任的代理之外，您还可以配置应受信任的代理 &lt;code&gt;$headers&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="de37e9d3f52c9080ca391c0a59874bc0987e413c" translate="yes" xml:space="preserve">
          <source>To specify that a listener should be queued, add the &lt;code&gt;ShouldQueue&lt;/code&gt; interface to the listener class. Listeners generated by the &lt;code&gt;event:generate&lt;/code&gt; Artisan command already have this interface imported into the current namespace, so you can use it immediately:</source>
          <target state="translated">要指定应将侦听器放入队列中，请将 &lt;code&gt;ShouldQueue&lt;/code&gt; 接口添加到侦听器类中。 &lt;code&gt;event:generate&lt;/code&gt; Artisan命令生成的侦听器已经将此接口导入到当前名称空间中，因此您可以立即使用它：</target>
        </trans-unit>
        <trans-unit id="c5160d2f61f2d57dd3eab6df4d0eecf9dbaab8f7" translate="yes" xml:space="preserve">
          <source>To specify the tax percentage a user pays on a subscription, implement the &lt;code&gt;taxPercentage&lt;/code&gt; method on your billable model, and return a numeric value between 0 and 100, with no more than 2 decimal places.</source>
          <target state="translated">若要指定用户对订阅支付的税百分比，请在可计费模型上实现 &lt;code&gt;taxPercentage&lt;/code&gt; 方法，并返回0到100之间的一个数字值，其位数不超过2个小数位。</target>
        </trans-unit>
        <trans-unit id="03022980f93ad930997c926628f2cc392341ecb4" translate="yes" xml:space="preserve">
          <source>To start a worker that verifies that all of the &lt;code&gt;high&lt;/code&gt; queue jobs are processed before continuing to any jobs on the &lt;code&gt;low&lt;/code&gt; queue, pass a comma-delimited list of queue names to the &lt;code&gt;work&lt;/code&gt; command:</source>
          <target state="translated">要启动在继续执行 &lt;code&gt;low&lt;/code&gt; 队列上的任何作业之前先验证所有 &lt;code&gt;high&lt;/code&gt; 队列作业已得到处理的工作程序，请将以逗号分隔的队列名称列表传递给 &lt;code&gt;work&lt;/code&gt; 命令：</target>
        </trans-unit>
        <trans-unit id="1fb3cd9803c7024ebe63c024226492f11eff5663" translate="yes" xml:space="preserve">
          <source>To stop sharing your site, hit &lt;code&gt;Control + C&lt;/code&gt; to cancel the process.</source>
          <target state="translated">要停止共享您的站点，请按 &lt;code&gt;Control + C&lt;/code&gt; 取消该过程。</target>
        </trans-unit>
        <trans-unit id="5d0d2fb5c813ce7dad4bfb3f46c9bb677e53678f" translate="yes" xml:space="preserve">
          <source>To store an uploaded file, you will typically use one of your configured &lt;a href=&quot;filesystem&quot;&gt;filesystems&lt;/a&gt;. The &lt;code&gt;UploadedFile&lt;/code&gt; class has a &lt;code&gt;store&lt;/code&gt; method which will move an uploaded file to one of your disks, which may be a location on your local filesystem or even a cloud storage location like Amazon S3.</source>
          <target state="translated">要存储上载的文件，通常将使用已配置的&lt;a href=&quot;filesystem&quot;&gt;文件系统之一&lt;/a&gt;。该 &lt;code&gt;UploadedFile&lt;/code&gt; 的类有一个 &lt;code&gt;store&lt;/code&gt; 方法，将上传的文件移动到磁盘中的一个，它可以像亚马逊S3上的本地文件系统中的位置，甚至是云存储位置。</target>
        </trans-unit>
        <trans-unit id="6d699ccecc16ce70fe4a3a3bf58dff3ebbd9674f" translate="yes" xml:space="preserve">
          <source>To store data in the session, you will typically use the &lt;code&gt;put&lt;/code&gt; method or the &lt;code&gt;session&lt;/code&gt; helper:</source>
          <target state="translated">要在会话中存储数据，通常将使用 &lt;code&gt;put&lt;/code&gt; 方法或 &lt;code&gt;session&lt;/code&gt; 帮助器：</target>
        </trans-unit>
        <trans-unit id="ebb9055994a5e15c542c8811d58de296afc3c9fd" translate="yes" xml:space="preserve">
          <source>To update a searchable model, you only need to update the model instance's properties and &lt;code&gt;save&lt;/code&gt; the model to your database. Scout will automatically persist the changes to your search index:</source>
          <target state="translated">要更新可搜索的模型，只需更新模型实例的属性 &lt;code&gt;save&lt;/code&gt; 模型保存到数据库中。侦察兵将自动保留对搜索索引的更改：</target>
        </trans-unit>
        <trans-unit id="d18b35ed671e2ef1c1cabd5fc2c3895389243826" translate="yes" xml:space="preserve">
          <source>To use the Amazon SES driver you must first install the Amazon AWS SDK for PHP. You may install this library by adding the following line to your &lt;code&gt;composer.json&lt;/code&gt; file's &lt;code&gt;require&lt;/code&gt; section and running the &lt;code&gt;composer update&lt;/code&gt; command:</source>
          <target state="translated">要使用Amazon SES驱动程序，您必须首先安装用于PHP的Amazon AWS开发工具包。您可以通过将以下行添加到 &lt;code&gt;composer.json&lt;/code&gt; 文件的 &lt;code&gt;require&lt;/code&gt; 部分并运行 &lt;code&gt;composer update&lt;/code&gt; 命令来安装此库：</target>
        </trans-unit>
        <trans-unit id="1a4680d48e665e82f308c6e0e49cf767d02ec0db" translate="yes" xml:space="preserve">
          <source>To use the Mailgun driver, first install Guzzle, then set the &lt;code&gt;driver&lt;/code&gt; option in your &lt;code&gt;config/mail.php&lt;/code&gt; configuration file to &lt;code&gt;mailgun&lt;/code&gt;. Next, verify that your &lt;code&gt;config/services.php&lt;/code&gt; configuration file contains the following options:</source>
          <target state="translated">要使用Mailgun驱动程序，请先安装Guzzle，然后在 &lt;code&gt;config/mail.php&lt;/code&gt; 配置文件 &lt;code&gt;mailgun&lt;/code&gt; &lt;code&gt;driver&lt;/code&gt; 选项设置为mailgun。接下来，确认您的 &lt;code&gt;config/services.php&lt;/code&gt; 配置文件包含以下选项：</target>
        </trans-unit>
        <trans-unit id="5456ec815d98a4f0478a171a3b5c15982bf1b522" translate="yes" xml:space="preserve">
          <source>To use the Parallels provider, you will need to install &lt;a href=&quot;https://github.com/Parallels/vagrant-parallels&quot;&gt;Parallels Vagrant plug-in&lt;/a&gt;. It is free of charge.</source>
          <target state="translated">要使用Parallels提供程序，您将需要安装&lt;a href=&quot;https://github.com/Parallels/vagrant-parallels&quot;&gt;Parallels Vagrant插件&lt;/a&gt;。这个是免费的。</target>
        </trans-unit>
        <trans-unit id="37b80d826cf8e98e029e071484ac960d39fec3f1" translate="yes" xml:space="preserve">
          <source>To use the SparkPost driver, first install Guzzle, then set the &lt;code&gt;driver&lt;/code&gt; option in your &lt;code&gt;config/mail.php&lt;/code&gt; configuration file to &lt;code&gt;sparkpost&lt;/code&gt;. Next, verify that your &lt;code&gt;config/services.php&lt;/code&gt; configuration file contains the following options:</source>
          <target state="translated">要使用SparkPost驱动程序，请先安装Guzzle，然后在 &lt;code&gt;config/mail.php&lt;/code&gt; 配置文件 &lt;code&gt;sparkpost&lt;/code&gt; &lt;code&gt;driver&lt;/code&gt; 选项设置为sparkpost。接下来，确认您的 &lt;code&gt;config/services.php&lt;/code&gt; 配置文件包含以下选项：</target>
        </trans-unit>
        <trans-unit id="dc2e7402bf828827a6371d7d30851e598725ca53" translate="yes" xml:space="preserve">
          <source>To use the VMware provider, you will need to purchase both VMware Fusion / Workstation and the &lt;a href=&quot;https://www.vagrantup.com/vmware&quot;&gt;VMware Vagrant plug-in&lt;/a&gt;. Though it is not free, VMware can provide faster shared folder performance out of the box.</source>
          <target state="translated">要使用VMware提供程序，您将需要购买VMware Fusion / Workstation和&lt;a href=&quot;https://www.vagrantup.com/vmware&quot;&gt;VMware Vagrant插件&lt;/a&gt;。尽管它不是免费的，但VMware可以立即提供更快的共享文件夹性能。</target>
        </trans-unit>
        <trans-unit id="bdaf40746f822e29cd470ac01215f4bf3192ff4b" translate="yes" xml:space="preserve">
          <source>To use the command, navigate to one of your projects and run &lt;code&gt;valet link app-name&lt;/code&gt; in your terminal. Valet will create a symbolic link in &lt;code&gt;~/.config/valet/Sites&lt;/code&gt; which points to your current working directory.</source>
          <target state="translated">要使用该命令，请导航至您的项目之一，然后在终端中运行 &lt;code&gt;valet link app-name&lt;/code&gt; 。Valet将在 &lt;code&gt;~/.config/valet/Sites&lt;/code&gt; 创建一个指向您当前工作目录的符号链接。</target>
        </trans-unit>
        <trans-unit id="be252639f123264102fa20868380715d248036e4" translate="yes" xml:space="preserve">
          <source>To use the component in your application, you may drop it into one of your HTML templates. For example, after running the &lt;code&gt;make:auth&lt;/code&gt; Artisan command to scaffold your application's authentication and registration screens, you could drop the component into the &lt;code&gt;home.blade.php&lt;/code&gt; Blade template:</source>
          <target state="translated">要在应用程序中使用该组件，您可以将其放入HTML模板之一。例如，在运行 &lt;code&gt;make:auth&lt;/code&gt; Artisan命令以 &lt;code&gt;home.blade.php&lt;/code&gt; 应用程序的身份验证和注册屏幕之后，您可以将该组件放入home.blade.php Blade模板中：</target>
        </trans-unit>
        <trans-unit id="c94ea6183f85438b68072f066dc504634440a67a" translate="yes" xml:space="preserve">
          <source>To utilize the PhpRedis extension, you should change the &lt;code&gt;client&lt;/code&gt; option of your Redis configuration to &lt;code&gt;phpredis&lt;/code&gt;. This option is found in your &lt;code&gt;config/database.php&lt;/code&gt; configuration file:</source>
          <target state="translated">要使用PhpRedis扩展，您应该将Redis配置的 &lt;code&gt;client&lt;/code&gt; 选项更改为 &lt;code&gt;phpredis&lt;/code&gt; 。在您的 &lt;code&gt;config/database.php&lt;/code&gt; 配置文件中可以找到此选项：</target>
        </trans-unit>
        <trans-unit id="6ff342e54e4dfe7e4bff2ec6db5f8a7164354dc7" translate="yes" xml:space="preserve">
          <source>To utilize this feature, your application must be using the &lt;code&gt;memcached&lt;/code&gt; or &lt;code&gt;redis&lt;/code&gt; cache driver as your application's default cache driver. In addition, all servers must be communicating with the same central cache server.</source>
          <target state="translated">要使用此功能，您的应用程序必须使用 &lt;code&gt;memcached&lt;/code&gt; 或 &lt;code&gt;redis&lt;/code&gt; 缓存驱动程序作为应用程序的默认缓存驱动程序。此外，所有服务器必须与同一中央高速缓存服务器通信。</target>
        </trans-unit>
        <trans-unit id="60fd09be655e90ac7cca0abc9d4c7425c94abffc" translate="yes" xml:space="preserve">
          <source>To verify that an incoming request has a valid signature, you should call the &lt;code&gt;hasValidSignature&lt;/code&gt; method on the incoming &lt;code&gt;Request&lt;/code&gt;:</source>
          <target state="translated">要验证传入请求具有有效签名，您应该在传入 &lt;code&gt;Request&lt;/code&gt; 上调用 &lt;code&gt;hasValidSignature&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="61a47584d8a0ca2dae5114b003e8ac7a2b82a89a" translate="yes" xml:space="preserve">
          <source>To view all of your failed jobs that have been inserted into your &lt;code&gt;failed_jobs&lt;/code&gt; database table, you may use the &lt;code&gt;queue:failed&lt;/code&gt; Artisan command:</source>
          <target state="translated">要查看已插入 &lt;code&gt;failed_jobs&lt;/code&gt; 数据库表中的所有失败作业，可以使用 &lt;code&gt;queue:failed&lt;/code&gt; Artisan命令：</target>
        </trans-unit>
        <trans-unit id="142c9559c12bc88a498471d2875a6e5b576e2c3c" translate="yes" xml:space="preserve">
          <source>Toggles a model (or models) from the parent.</source>
          <target state="translated">从父模型切换一个(或多个)模型。</target>
        </trans-unit>
        <trans-unit id="ee2c1396902d1faccb1000191f15eada0b7cead5" translate="yes" xml:space="preserve">
          <source>Toggling Associations</source>
          <target state="translated">切换协会</target>
        </trans-unit>
        <trans-unit id="8d14891c995d2727a52d38ab9fa25843708c9757" translate="yes" xml:space="preserve">
          <source>Token Lifetimes</source>
          <target state="translated">代币寿命</target>
        </trans-unit>
        <trans-unit id="84e5bcc2ff3dea8e9ea28f1827069745d1dde3eb" translate="yes" xml:space="preserve">
          <source>Token Scopes</source>
          <target state="translated">代币范围</target>
        </trans-unit>
        <trans-unit id="bf235e0182bbd24fc2b791146dbfdf86334dd481" translate="yes" xml:space="preserve">
          <source>TokenGuard</source>
          <target state="translated">TokenGuard</target>
        </trans-unit>
        <trans-unit id="f30e15f1fa9c1a5837f0d74d5fdb64898ac7ee3a" translate="yes" xml:space="preserve">
          <source>TokenGuard (Auth)</source>
          <target state="translated">TokenGuard (Auth)</target>
        </trans-unit>
        <trans-unit id="0fc0a9bffac4e4ac2a6d1e45fbefcf153089bada" translate="yes" xml:space="preserve">
          <source>TokenGuard::__construct()</source>
          <target state="translated">TokenGuard::__construct()</target>
        </trans-unit>
        <trans-unit id="693775f5f6bc5cb2d4663583beb20258a25b49db" translate="yes" xml:space="preserve">
          <source>TokenGuard::getTokenForRequest()</source>
          <target state="translated">TokenGuard::getTokenForRequest()</target>
        </trans-unit>
        <trans-unit id="3f1238fd1d435050b35d1e13f16c2dfcc5935fd2" translate="yes" xml:space="preserve">
          <source>TokenGuard::setRequest()</source>
          <target state="translated">TokenGuard::setRequest()</target>
        </trans-unit>
        <trans-unit id="60361033b9a7112c72880d3d4ea25fc7bf09eaf2" translate="yes" xml:space="preserve">
          <source>TokenGuard::user()</source>
          <target state="translated">TokenGuard::user()</target>
        </trans-unit>
        <trans-unit id="aac0dfb9633188bc0874c81a88c5b0ddbf84d2de" translate="yes" xml:space="preserve">
          <source>TokenGuard::validate()</source>
          <target state="translated">TokenGuard::validate()</target>
        </trans-unit>
        <trans-unit id="908161a439bc03926da251ac31a2db7435b8cec7" translate="yes" xml:space="preserve">
          <source>TokenMismatchException</source>
          <target state="translated">TokenMismatchException</target>
        </trans-unit>
        <trans-unit id="a32521282ec075ccd27b1bc8699f4dc2df3bba01" translate="yes" xml:space="preserve">
          <source>TokenMismatchException (Session)</source>
          <target state="translated">TokenMismatchException (Session)</target>
        </trans-unit>
        <trans-unit id="ebea413aec80f97277983277db2b060232fcd712" translate="yes" xml:space="preserve">
          <source>TokenRepositoryInterface</source>
          <target state="translated">TokenRepositoryInterface</target>
        </trans-unit>
        <trans-unit id="983e37abb7af88e275399dbc99365f08cef32051" translate="yes" xml:space="preserve">
          <source>TokenRepositoryInterface (Auth\Passwords)</source>
          <target state="translated">TokenRepositoryInterface (Auth\Passwords)</target>
        </trans-unit>
        <trans-unit id="1c642a02e26200dcf5bcbadc6683344bbe2add69" translate="yes" xml:space="preserve">
          <source>TokenRepositoryInterface::create()</source>
          <target state="translated">TokenRepositoryInterface::create()</target>
        </trans-unit>
        <trans-unit id="4561ceedb81c4d444a0001024c84b704d6a3a9e8" translate="yes" xml:space="preserve">
          <source>TokenRepositoryInterface::delete()</source>
          <target state="translated">TokenRepositoryInterface::delete()</target>
        </trans-unit>
        <trans-unit id="2a3fdbfff361ed69fe9642fd3c48bec16bf2c203" translate="yes" xml:space="preserve">
          <source>TokenRepositoryInterface::deleteExpired()</source>
          <target state="translated">TokenRepositoryInterface::deleteExpired()</target>
        </trans-unit>
        <trans-unit id="2d8b212bf5a8c438b1c31d8eca4002f15839ab48" translate="yes" xml:space="preserve">
          <source>TokenRepositoryInterface::exists()</source>
          <target state="translated">TokenRepositoryInterface::exists()</target>
        </trans-unit>
        <trans-unit id="6133bf55a4cbf57f5e103520a84d7ead14df13c6" translate="yes" xml:space="preserve">
          <source>Tokenizer PHP Extension</source>
          <target state="translated">Tokenizer PHP扩展</target>
        </trans-unit>
        <trans-unit id="3f552db8e66c5a451cc8a623fff824ec72c31ca4" translate="yes" xml:space="preserve">
          <source>Top Level Meta Data</source>
          <target state="translated">顶层元数据</target>
        </trans-unit>
        <trans-unit id="3983cc8a2992b1d4a225bd7f7f25e794d2d2473d" translate="yes" xml:space="preserve">
          <source>Touch all of the related models for the relationship.</source>
          <target state="translated">触及所有关系的相关模型。</target>
        </trans-unit>
        <trans-unit id="e8839e6d532510bd74417c5e8840972a0969c96e" translate="yes" xml:space="preserve">
          <source>Touch the owning relations of the model.</source>
          <target state="translated">触摸模型的拥有关系。</target>
        </trans-unit>
        <trans-unit id="0f5b54507e68fc572bd10613f006a543f5471cf5" translate="yes" xml:space="preserve">
          <source>Touching Parent Timestamps</source>
          <target state="translated">触摸父母时间戳</target>
        </trans-unit>
        <trans-unit id="d1a616085a1a99a58e14bafaa350abc6783a3160" translate="yes" xml:space="preserve">
          <source>Traits</source>
          <target state="translated">Traits</target>
        </trans-unit>
        <trans-unit id="8dfe0518202854295bdaef3a304bdb0527048e30" translate="yes" xml:space="preserve">
          <source>TransactionBeginning</source>
          <target state="translated">TransactionBeginning</target>
        </trans-unit>
        <trans-unit id="948b0e5da336f07d6c4b6bd3c587812881797c95" translate="yes" xml:space="preserve">
          <source>TransactionBeginning (Database\Events)</source>
          <target state="translated">交易开始 (Database/Events)</target>
        </trans-unit>
        <trans-unit id="7a702855cbe75e18b011ba230077fa47dd021f60" translate="yes" xml:space="preserve">
          <source>TransactionCommitted</source>
          <target state="translated">TransactionCommitted</target>
        </trans-unit>
        <trans-unit id="958e4e566c24961dc635533a70d51579307d0a2c" translate="yes" xml:space="preserve">
          <source>TransactionCommitted (Database\Events)</source>
          <target state="translated">交易委托(数据库/事件)</target>
        </trans-unit>
        <trans-unit id="b465884757971fffe7310b98cda554b8c64e365d" translate="yes" xml:space="preserve">
          <source>TransactionRolledBack</source>
          <target state="translated">TransactionRolledBack</target>
        </trans-unit>
        <trans-unit id="952c0d09b11628c8783f68ddc7ccfea96222d62f" translate="yes" xml:space="preserve">
          <source>TransactionRolledBack (Database\Events)</source>
          <target state="translated">交易回滚(数据库/事件)</target>
        </trans-unit>
        <trans-unit id="15108eb0cf869073104791753d6f6c249da3c412" translate="yes" xml:space="preserve">
          <source>Transform an array of attributes to their displayable form.</source>
          <target state="translated">将一个属性数组转换为可显示的形式。</target>
        </trans-unit>
        <trans-unit id="a176fa9cf30f846b0f6b2ab728e47610cabf1aab" translate="yes" xml:space="preserve">
          <source>Transform each item in the collection using a callback.</source>
          <target state="translated">使用回调转换集合中的每个项目。</target>
        </trans-unit>
        <trans-unit id="44e7099521c5a6413c38f633fcddaa97bb34b6c0" translate="yes" xml:space="preserve">
          <source>Transform the given value if it is present.</source>
          <target state="translated">如果给定的值存在,则对其进行变换。</target>
        </trans-unit>
        <trans-unit id="d7f291ff11311edb3962c96eef070674aa65c1d6" translate="yes" xml:space="preserve">
          <source>Transform the given value.</source>
          <target state="translated">变换给定值。</target>
        </trans-unit>
        <trans-unit id="63c21a595a215720e2fe8d9a1021b5217023eff5" translate="yes" xml:space="preserve">
          <source>Transform the resource into a JSON array.</source>
          <target state="translated">将资源转化为JSON数组。</target>
        </trans-unit>
        <trans-unit id="7ffc15a9d1c7de7e27d42d519c77cfbc794b8b53" translate="yes" xml:space="preserve">
          <source>Transform the resource into an HTTP response.</source>
          <target state="translated">将资源转化为HTTP响应。</target>
        </trans-unit>
        <trans-unit id="4421731ff5e6f6ca8c55643a26beb613c6ab28ef" translate="yes" xml:space="preserve">
          <source>Transform the resource into an array.</source>
          <target state="translated">将资源转化为一个数组。</target>
        </trans-unit>
        <trans-unit id="8155ddfb1d9c3f2785e625776c5fd22e1cf7e7df" translate="yes" xml:space="preserve">
          <source>Transform the use variables before serialization.</source>
          <target state="translated">在序列化之前对使用变量进行转换。</target>
        </trans-unit>
        <trans-unit id="d42ea4ed7bef62d5764b1a19580e9803b3ae674c" translate="yes" xml:space="preserve">
          <source>TransformsRequest</source>
          <target state="translated">TransformsRequest</target>
        </trans-unit>
        <trans-unit id="8dcae2f3fbf8c0930bb2f7ed759e0c40483040fb" translate="yes" xml:space="preserve">
          <source>TransformsRequest (Foundation\Http)</source>
          <target state="translated">TransformsRequest (Foundation/Http)</target>
        </trans-unit>
        <trans-unit id="7abd2c3cc0054fc5bf02f82b6621f73a413150b9" translate="yes" xml:space="preserve">
          <source>TransformsRequest::clean()</source>
          <target state="translated">TransformsRequest::clean()</target>
        </trans-unit>
        <trans-unit id="47e9091aa2aa427da8472cffa5ca380dc9bd1b71" translate="yes" xml:space="preserve">
          <source>TransformsRequest::cleanArray()</source>
          <target state="translated">TransformsRequest::cleanArray()</target>
        </trans-unit>
        <trans-unit id="0c250e7838d1ee0670115defd328c74424e8a05d" translate="yes" xml:space="preserve">
          <source>TransformsRequest::cleanParameterBag()</source>
          <target state="translated">TransformsRequest::cleanParameterBag()</target>
        </trans-unit>
        <trans-unit id="507ee192353316b293fde9ecf2c737df5aef78ff" translate="yes" xml:space="preserve">
          <source>TransformsRequest::cleanValue()</source>
          <target state="translated">TransformsRequest::cleanValue()</target>
        </trans-unit>
        <trans-unit id="d266a8d4c9d6a1516f4a7ddc7d9c733a27ad2782" translate="yes" xml:space="preserve">
          <source>TransformsRequest::handle()</source>
          <target state="translated">TransformsRequest::handle()</target>
        </trans-unit>
        <trans-unit id="3f0bf4e714a26debdc3a85c164ef4b9506507f83" translate="yes" xml:space="preserve">
          <source>TransformsRequest::transform()</source>
          <target state="translated">TransformsRequest::transform()</target>
        </trans-unit>
        <trans-unit id="02bfc7ccea233eab48efd808b43684a21112aa5c" translate="yes" xml:space="preserve">
          <source>Translate the given value into the appropriate JSON binding parameter.</source>
          <target state="translated">将给定的值翻译成适当的JSON绑定参数。</target>
        </trans-unit>
        <trans-unit id="ac26a7a94ea2e66490f932b6415a09ef6f2a913c" translate="yes" xml:space="preserve">
          <source>Translation</source>
          <target state="translated">Translation</target>
        </trans-unit>
        <trans-unit id="892b80554120122958b64e52444d816ef98e6774" translate="yes" xml:space="preserve">
          <source>Translation files that use translation strings as keys are stored as JSON files in the &lt;code&gt;resources/lang&lt;/code&gt; directory. For example, if your application has a Spanish translation, you should create a &lt;code&gt;resources/lang/es.json&lt;/code&gt; file:</source>
          <target state="translated">使用翻译字符串作为键的翻译文件将作为JSON文件存储在 &lt;code&gt;resources/lang&lt;/code&gt; 目录中。例如，如果您的应用程序具有西班牙语翻译，则应创建一个 &lt;code&gt;resources/lang/es.json&lt;/code&gt; 文件：</target>
        </trans-unit>
        <trans-unit id="2eba37e5175d817df5561b3605f81efc47befef9" translate="yes" xml:space="preserve">
          <source>TranslationServiceProvider</source>
          <target state="translated">TranslationServiceProvider</target>
        </trans-unit>
        <trans-unit id="8ad8302d110b05d7e02330dac58628134fdcff02" translate="yes" xml:space="preserve">
          <source>Translations</source>
          <target state="translated">Translations</target>
        </trans-unit>
        <trans-unit id="1fafc51374f712ba586dcd4ca179bb592b7dbf3b" translate="yes" xml:space="preserve">
          <source>Translator</source>
          <target state="translated">Translator</target>
        </trans-unit>
        <trans-unit id="78af8bcd052d2610b390898713f436f04f393f09" translate="yes" xml:space="preserve">
          <source>Translator (Contracts)</source>
          <target state="translated">翻译(合同)</target>
        </trans-unit>
        <trans-unit id="d87d36448de5f3592a1324c51a29009327711e04" translate="yes" xml:space="preserve">
          <source>Translator (Translation)</source>
          <target state="translated">笔译员(翻译)</target>
        </trans-unit>
        <trans-unit id="b0c903b57c57694404a98032e87667af6a150337" translate="yes" xml:space="preserve">
          <source>Translator::__construct()</source>
          <target state="translated">Translator::__construct()</target>
        </trans-unit>
        <trans-unit id="a2a9cbf23641623bf97c512141704543792c70de" translate="yes" xml:space="preserve">
          <source>Translator::addJsonPath()</source>
          <target state="translated">Translator::addJsonPath()</target>
        </trans-unit>
        <trans-unit id="545ae36902e47122a0acbe9c6888710568b00eea" translate="yes" xml:space="preserve">
          <source>Translator::addLines()</source>
          <target state="translated">Translator::addLines()</target>
        </trans-unit>
        <trans-unit id="1044080afa69ce558c7b0305acb0903ea414e0ec" translate="yes" xml:space="preserve">
          <source>Translator::addNamespace()</source>
          <target state="translated">Translator::addNamespace()</target>
        </trans-unit>
        <trans-unit id="2faad4a06100fdae1b2ab28cbb2ec56064aad732" translate="yes" xml:space="preserve">
          <source>Translator::choice()</source>
          <target state="translated">Translator::choice()</target>
        </trans-unit>
        <trans-unit id="f8e658ad7e4209ee3d6e0770b8659af7aed4fea5" translate="yes" xml:space="preserve">
          <source>Translator::get()</source>
          <target state="translated">Translator::get()</target>
        </trans-unit>
        <trans-unit id="8c7fbf04718b74c0f44222a961cb8ca68a34ab4b" translate="yes" xml:space="preserve">
          <source>Translator::getFallback()</source>
          <target state="translated">Translator::getFallback()</target>
        </trans-unit>
        <trans-unit id="06a629824ce40e421a645d74a8bd983635a907b7" translate="yes" xml:space="preserve">
          <source>Translator::getFromJson()</source>
          <target state="translated">Translator::getFromJson()</target>
        </trans-unit>
        <trans-unit id="fb535d2484004ad584c5bb5fc197aa3c51b44747" translate="yes" xml:space="preserve">
          <source>Translator::getLine()</source>
          <target state="translated">Translator::getLine()</target>
        </trans-unit>
        <trans-unit id="f767f4cbfcb0184ac9e6a73006265cb7c44fbf2e" translate="yes" xml:space="preserve">
          <source>Translator::getLoader()</source>
          <target state="translated">Translator::getLoader()</target>
        </trans-unit>
        <trans-unit id="f327547672c3398305b145971f1faeca39244438" translate="yes" xml:space="preserve">
          <source>Translator::getLocale()</source>
          <target state="translated">Translator::getLocale()</target>
        </trans-unit>
        <trans-unit id="c7768ffce3a502eccbcf461ce8bd917ea04e91de" translate="yes" xml:space="preserve">
          <source>Translator::getSelector()</source>
          <target state="translated">Translator::getSelector()</target>
        </trans-unit>
        <trans-unit id="3bb68bdafe205112070cf111c5cbe4218922d2c2" translate="yes" xml:space="preserve">
          <source>Translator::has()</source>
          <target state="translated">Translator::has()</target>
        </trans-unit>
        <trans-unit id="9b4885166d31817e5b3dad6d0e5438eb136cd778" translate="yes" xml:space="preserve">
          <source>Translator::hasForLocale()</source>
          <target state="translated">Translator::hasForLocale()</target>
        </trans-unit>
        <trans-unit id="a17cacdba92342c2551e4a172b97a9731ed216ec" translate="yes" xml:space="preserve">
          <source>Translator::isLoaded()</source>
          <target state="translated">Translator::isLoaded()</target>
        </trans-unit>
        <trans-unit id="27e5b0eeb401cf522b1fd772e940d0c5e7df0ab6" translate="yes" xml:space="preserve">
          <source>Translator::load()</source>
          <target state="translated">Translator::load()</target>
        </trans-unit>
        <trans-unit id="b727c6f7295c3d729584db1e6557ea6afbafd62e" translate="yes" xml:space="preserve">
          <source>Translator::locale()</source>
          <target state="translated">Translator::locale()</target>
        </trans-unit>
        <trans-unit id="0b51cbd93f60d59e5718114fbb8e3c8d98387939" translate="yes" xml:space="preserve">
          <source>Translator::localeArray()</source>
          <target state="translated">Translator::localeArray()</target>
        </trans-unit>
        <trans-unit id="8c43abd6b8f0e4cc58939727230088294dbb2a08" translate="yes" xml:space="preserve">
          <source>Translator::localeForChoice()</source>
          <target state="translated">Translator::localeForChoice()</target>
        </trans-unit>
        <trans-unit id="b18888f6f7d9104580c012f25b3490cf2f5d5825" translate="yes" xml:space="preserve">
          <source>Translator::makeReplacements()</source>
          <target state="translated">Translator::makeReplacements()</target>
        </trans-unit>
        <trans-unit id="d49af2575400a22295295eee299723b75e79bedb" translate="yes" xml:space="preserve">
          <source>Translator::parseKey()</source>
          <target state="translated">Translator::parseKey()</target>
        </trans-unit>
        <trans-unit id="e5d800a9579cbfe0fcc3b560e3f2bca0d0b2b278" translate="yes" xml:space="preserve">
          <source>Translator::setFallback()</source>
          <target state="translated">Translator::setFallback()</target>
        </trans-unit>
        <trans-unit id="4a14a700b6df4acfb5af974e1bb9ffafd1dca897" translate="yes" xml:space="preserve">
          <source>Translator::setLoaded()</source>
          <target state="translated">Translator::setLoaded()</target>
        </trans-unit>
        <trans-unit id="d6ef8a1d39c70924a81590b8669a3b7a2be2c9d4" translate="yes" xml:space="preserve">
          <source>Translator::setLocale()</source>
          <target state="translated">Translator::setLocale()</target>
        </trans-unit>
        <trans-unit id="c98ab96c6f41345239df135e251ac6ad5466442b" translate="yes" xml:space="preserve">
          <source>Translator::setSelector()</source>
          <target state="translated">Translator::setSelector()</target>
        </trans-unit>
        <trans-unit id="ed6f1ddb75f2026a0be6733aff9dec00469140b6" translate="yes" xml:space="preserve">
          <source>Translator::sortReplacements()</source>
          <target state="translated">Translator::sortReplacements()</target>
        </trans-unit>
        <trans-unit id="00ce90b9111e13ed3aab1ed1e226774721df6711" translate="yes" xml:space="preserve">
          <source>Translator::trans()</source>
          <target state="translated">Translator::trans()</target>
        </trans-unit>
        <trans-unit id="fe8ba7e23f2342ea1473a2450612fcd2306c7de2" translate="yes" xml:space="preserve">
          <source>Translator::transChoice()</source>
          <target state="translated">Translator::transChoice()</target>
        </trans-unit>
        <trans-unit id="e3078aebb63eb83c8a0fd5f112dfed61652115de" translate="yes" xml:space="preserve">
          <source>Transliterate a UTF-8 value to ASCII.</source>
          <target state="translated">将一个UTF-8值翻译成ASCII码。</target>
        </trans-unit>
        <trans-unit id="c10d76c9a4b81c39c13a3bbf7cdb7a157dfb1551" translate="yes" xml:space="preserve">
          <source>Transport</source>
          <target state="translated">Transport</target>
        </trans-unit>
        <trans-unit id="53fd1f3608c7dc4629d34c3aaa250a1eef267a0e" translate="yes" xml:space="preserve">
          <source>Transport (Mail\Transport)</source>
          <target state="translated">运输(邮件/运输)</target>
        </trans-unit>
        <trans-unit id="9a3698c4407de5652f2a2491d48ea5481470081c" translate="yes" xml:space="preserve">
          <source>Transport::beforeSendPerformed()</source>
          <target state="translated">Transport::beforeSendPerformed()</target>
        </trans-unit>
        <trans-unit id="0896a8a08e25054ed2b272dbaab125fd2fc4481d" translate="yes" xml:space="preserve">
          <source>Transport::isStarted()</source>
          <target state="translated">Transport::isStarted()</target>
        </trans-unit>
        <trans-unit id="574e31444bdd763058be79605a172d2bdc60c506" translate="yes" xml:space="preserve">
          <source>Transport::numberOfRecipients()</source>
          <target state="translated">Transport::numberOfRecipients()</target>
        </trans-unit>
        <trans-unit id="39340f42e3ded3448d708767dab39504de6a68e4" translate="yes" xml:space="preserve">
          <source>Transport::ping()</source>
          <target state="translated">Transport::ping()</target>
        </trans-unit>
        <trans-unit id="1cb14cd242558e4358abec9ad4016b510bf7e7b9" translate="yes" xml:space="preserve">
          <source>Transport::registerPlugin()</source>
          <target state="translated">Transport::registerPlugin()</target>
        </trans-unit>
        <trans-unit id="f8b9fb8246ce25f938740256db9d1c75662299d3" translate="yes" xml:space="preserve">
          <source>Transport::sendPerformed()</source>
          <target state="translated">Transport::sendPerformed()</target>
        </trans-unit>
        <trans-unit id="c82a76172f865d5951ddacb98bef5d2dc08b2b3f" translate="yes" xml:space="preserve">
          <source>Transport::start()</source>
          <target state="translated">Transport::start()</target>
        </trans-unit>
        <trans-unit id="dff5f8bf527727eb9e5e42a4e247da56db0b1abd" translate="yes" xml:space="preserve">
          <source>Transport::stop()</source>
          <target state="translated">Transport::stop()</target>
        </trans-unit>
        <trans-unit id="348527f5c76c34673a5590763d2840949bfc15a3" translate="yes" xml:space="preserve">
          <source>TransportManager</source>
          <target state="translated">TransportManager</target>
        </trans-unit>
        <trans-unit id="4ab1542be2b820af1ebc031871c0aeec1e1bd395" translate="yes" xml:space="preserve">
          <source>TransportManager (Mail)</source>
          <target state="translated">运输管理员(邮件)</target>
        </trans-unit>
        <trans-unit id="d454752176a3136381888d895311e8f629b5a9d8" translate="yes" xml:space="preserve">
          <source>TransportManager::addSesCredentials()</source>
          <target state="translated">TransportManager::addSesCredentials()</target>
        </trans-unit>
        <trans-unit id="137d60740276ca9d26588a9d77205536c05b93d9" translate="yes" xml:space="preserve">
          <source>TransportManager::createArrayDriver()</source>
          <target state="translated">TransportManager::createArrayDriver()</target>
        </trans-unit>
        <trans-unit id="9fdfaf571e8160dd2e36aa8c1dce1e8c3113852a" translate="yes" xml:space="preserve">
          <source>TransportManager::createLogDriver()</source>
          <target state="translated">TransportManager::createLogDriver()</target>
        </trans-unit>
        <trans-unit id="5c70e3e581c1512df21febf4d22b6274566cebb9" translate="yes" xml:space="preserve">
          <source>TransportManager::createMailDriver()</source>
          <target state="translated">TransportManager::createMailDriver()</target>
        </trans-unit>
        <trans-unit id="907a9925dc69e1c4df03578fab4b518eee4a4c46" translate="yes" xml:space="preserve">
          <source>TransportManager::createMailgunDriver()</source>
          <target state="translated">TransportManager::createMailgunDriver()</target>
        </trans-unit>
        <trans-unit id="45347adbe9508de06da89a9ddbadccff860b0f60" translate="yes" xml:space="preserve">
          <source>TransportManager::createMandrillDriver()</source>
          <target state="translated">TransportManager::createMandrillDriver()</target>
        </trans-unit>
        <trans-unit id="07d756976790ffe2ac599b36e34047a89b023cf9" translate="yes" xml:space="preserve">
          <source>TransportManager::createSendmailDriver()</source>
          <target state="translated">TransportManager::createSendmailDriver()</target>
        </trans-unit>
        <trans-unit id="119249c4b9f5744cacabbb2dc96109263980cf9c" translate="yes" xml:space="preserve">
          <source>TransportManager::createSesDriver()</source>
          <target state="translated">TransportManager::createSesDriver()</target>
        </trans-unit>
        <trans-unit id="5f0a74e828ba32a0c503d0ecef6a33e8d7f94dc4" translate="yes" xml:space="preserve">
          <source>TransportManager::createSmtpDriver()</source>
          <target state="translated">TransportManager::createSmtpDriver()</target>
        </trans-unit>
        <trans-unit id="338c8692ea6cf03061ab91763132bea1ad2a2842" translate="yes" xml:space="preserve">
          <source>TransportManager::createSparkPostDriver()</source>
          <target state="translated">TransportManager::createSparkPostDriver()</target>
        </trans-unit>
        <trans-unit id="b5c19bee2b486433a6281aadb2bbd5609bbf249b" translate="yes" xml:space="preserve">
          <source>TransportManager::getDefaultDriver()</source>
          <target state="translated">TransportManager::getDefaultDriver()</target>
        </trans-unit>
        <trans-unit id="0c4b7372dccdede8bbd6247a7fe5bb08e4e3db19" translate="yes" xml:space="preserve">
          <source>TransportManager::guzzle()</source>
          <target state="translated">TransportManager::guzzle()</target>
        </trans-unit>
        <trans-unit id="3a58000114cdf9df0dcb03b1763523a0c0a9c449" translate="yes" xml:space="preserve">
          <source>TransportManager::setDefaultDriver()</source>
          <target state="translated">TransportManager::setDefaultDriver()</target>
        </trans-unit>
        <trans-unit id="89e581f1b56f0e9ddaa6c57b46dc7d03c4f48a4d" translate="yes" xml:space="preserve">
          <source>Travis CI</source>
          <target state="translated">Travis CI</target>
        </trans-unit>
        <trans-unit id="42c3405d1604503a7c71a50d39464993257565f7" translate="yes" xml:space="preserve">
          <source>TrimStrings</source>
          <target state="translated">TrimStrings</target>
        </trans-unit>
        <trans-unit id="f13249d2492a1d94e2aaea76b44b60b1d8fdf32c" translate="yes" xml:space="preserve">
          <source>TrimStrings (Foundation\Http)</source>
          <target state="translated">TrimStrings (Foundation/Http)</target>
        </trans-unit>
        <trans-unit id="ffb61cfa7c211442685b765ba5fbe6a6c0de65b6" translate="yes" xml:space="preserve">
          <source>TrimStrings::transform()</source>
          <target state="translated">TrimStrings::transform()</target>
        </trans-unit>
        <trans-unit id="c492359c9644362a44d310c80aeaa60ad9983f68" translate="yes" xml:space="preserve">
          <source>Trusting All Proxies</source>
          <target state="translated">信任所有代理</target>
        </trans-unit>
        <trans-unit id="783d8ac11c0b42c21fde826c688d61117460f3c0" translate="yes" xml:space="preserve">
          <source>Truth Test Constraints</source>
          <target state="translated">真理检验约束条件</target>
        </trans-unit>
        <trans-unit id="f4928c2c8acd69985bbd8af6b576c35718f54b65" translate="yes" xml:space="preserve">
          <source>Two important columns to note are the &lt;code&gt;commentable_id&lt;/code&gt; and &lt;code&gt;commentable_type&lt;/code&gt; columns on the &lt;code&gt;comments&lt;/code&gt; table. The &lt;code&gt;commentable_id&lt;/code&gt; column will contain the ID value of the post or video, while the &lt;code&gt;commentable_type&lt;/code&gt; column will contain the class name of the owning model. The &lt;code&gt;commentable_type&lt;/code&gt; column is how the ORM determines which &quot;type&quot; of owning model to return when accessing the &lt;code&gt;commentable&lt;/code&gt; relation.</source>
          <target state="translated">需要注意的两个重要列是 &lt;code&gt;comments&lt;/code&gt; 表上的 &lt;code&gt;commentable_id&lt;/code&gt; 和 &lt;code&gt;commentable_type&lt;/code&gt; 列。该 &lt;code&gt;commentable_id&lt;/code&gt; 列将包含邮寄或视频的ID值，而 &lt;code&gt;commentable_type&lt;/code&gt; 列将包含所属模型的类名。所述 &lt;code&gt;commentable_type&lt;/code&gt; 列是ORM如何确定哪一个拥有模型访问何时返回的&amp;ldquo;类型&amp;rdquo; &lt;code&gt;commentable&lt;/code&gt; 关系。</target>
        </trans-unit>
        <trans-unit id="467a662930545928b625fc9eb71668342fa78a98" translate="yes" xml:space="preserve">
          <source>Two of the primary benefits of using Blade are &lt;em&gt;template inheritance&lt;/em&gt; and &lt;em&gt;sections&lt;/em&gt;. To get started, let's take a look at a simple example. First, we will examine a &quot;master&quot; page layout. Since most web applications maintain the same general layout across various pages, it's convenient to define this layout as a single Blade view:</source>
          <target state="translated">使用Blade的两个主要好处是&lt;em&gt;模板继承&lt;/em&gt;和&lt;em&gt;section&lt;/em&gt;。首先，让我们看一个简单的例子。首先，我们将检查&amp;ldquo;母版&amp;rdquo;页面的布局。由于大多数Web应用程序在各个页面上都保持相同的常规布局，因此将这种布局定义为单个Blade视图很方便：</target>
        </trans-unit>
        <trans-unit id="3deb7456519697ecf4eefc455516c969a3681bae" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="translated">Type</target>
        </trans-unit>
        <trans-unit id="fc0cab06a1bd741742fdd6b8b63b561aea8d7477" translate="yes" xml:space="preserve">
          <source>Type-Hinting Dependencies</source>
          <target state="translated">类型提示依赖性</target>
        </trans-unit>
        <trans-unit id="a94e652ac375c1a94078c9bb4d7c4a8be4293a21" translate="yes" xml:space="preserve">
          <source>Typical Eloquent foreign key conventions will be used when performing the relationship's queries. If you would like to customize the keys of the relationship, you may pass them as the third and fourth arguments to the &lt;code&gt;hasManyThrough&lt;/code&gt; method. The third argument is the name of the foreign key on the intermediate model. The fourth argument is the name of the foreign key on the final model. The fifth argument is the local key, while the sixth argument is the local key of the intermediate model:</source>
          <target state="translated">执行关系的查询时，将使用典型的雄辩外键约定。如果您想自定义关系的键，可以将它们作为 &lt;code&gt;hasManyThrough&lt;/code&gt; 方法的第三个和第四个参数传递。第三个参数是中间模型上外键的名称。第四个参数是最终模型上外键的名称。第五个参数是本地键，而第六个参数是中间模型的本地键：</target>
        </trans-unit>
        <trans-unit id="c8332f2b01cadebb5b2480bc3f6c55203b172aea" translate="yes" xml:space="preserve">
          <source>Typically, events should be registered via the &lt;code&gt;EventServiceProvider&lt;/code&gt;&lt;code&gt;$listen&lt;/code&gt; array; however, you may also register Closure based events manually in the &lt;code&gt;boot&lt;/code&gt; method of your &lt;code&gt;EventServiceProvider&lt;/code&gt;:</source>
          <target state="translated">通常，应该通过 &lt;code&gt;EventServiceProvider&lt;/code&gt; &lt;code&gt;$listen&lt;/code&gt; 数组注册事件；但是，您也可以在 &lt;code&gt;EventServiceProvider&lt;/code&gt; 的 &lt;code&gt;boot&lt;/code&gt; 方法中手动注册基于Closure的事件：</target>
        </trans-unit>
        <trans-unit id="0b40f7c14f2637e6f42618d3e4b0f83d978858ac" translate="yes" xml:space="preserve">
          <source>Typically, if you want to consume your API from your JavaScript application, you would need to manually send an access token to the application and pass it with each request to your application. However, Passport includes a middleware that can handle this for you. All you need to do is add the &lt;code&gt;CreateFreshApiToken&lt;/code&gt; middleware to your &lt;code&gt;web&lt;/code&gt; middleware group in your &lt;code&gt;app/Http/Kernel.php&lt;/code&gt; file:</source>
          <target state="translated">通常，如果要使用JavaScript应用程序中的API，则需要手动向应用程序发送访问令牌，并将其与每个请求一起传递给应用程序。但是，Passport包含可以为您处理此问题的中间件。您需要做的就是将 &lt;code&gt;CreateFreshApiToken&lt;/code&gt; 中间件添加到 &lt;code&gt;app/Http/Kernel.php&lt;/code&gt; 文件中的 &lt;code&gt;web&lt;/code&gt; 中间件组中：</target>
        </trans-unit>
        <trans-unit id="05b5eaabeb508e3a6aeaeda163163369c747d9d9" translate="yes" xml:space="preserve">
          <source>Typically, it would not be possible to mock or stub a truly static class method. However, since facades use dynamic methods to proxy method calls to objects resolved from the service container, we actually can test facades just as we would test an injected class instance. For example, given the following route:</source>
          <target state="translated">通常情况下,我们不可能对一个真正的静态类方法进行模拟或存根。然而,由于门面使用动态方法来代理从服务容器中解析的对象的方法调用,我们实际上可以像测试注入的类实例一样测试门面。例如,给定以下路径。</target>
        </trans-unit>
        <trans-unit id="d4f519996ec88fd36cfd12ff886a1080eb9e52ec" translate="yes" xml:space="preserve">
          <source>Typically, notifications should be short, informational messages that notify users of something that occurred in your application. For example, if you are writing a billing application, you might send an &quot;Invoice Paid&quot; notification to your users via the email and SMS channels.</source>
          <target state="translated">通常情况下,通知应该是简短的信息消息,通知用户在你的应用程序中发生的事情。例如,如果你正在编写一个计费应用程序,你可能会通过电子邮件和短信渠道向用户发送一个 &quot;发票已支付 &quot;的通知。</target>
        </trans-unit>
        <trans-unit id="296917a2a8be921a07ccbcdb2a3fbd08e01122d5" translate="yes" xml:space="preserve">
          <source>Typically, the &lt;code&gt;$this-&amp;gt;collection&lt;/code&gt; property of a resource collection is automatically populated with the result of mapping each item of the collection to its singular resource class. The singular resource class is assumed to be the collection's class name without the trailing &lt;code&gt;Collection&lt;/code&gt; string.</source>
          <target state="translated">通常，资源集合的 &lt;code&gt;$this-&amp;gt;collection&lt;/code&gt; 属性自动填充，将集合的每个项目映射到其单个资源类。假定单个资源类是集合的类名，而没有尾随 &lt;code&gt;Collection&lt;/code&gt; 字符串。</target>
        </trans-unit>
        <trans-unit id="735ee9ac75dd65d29fb3a80c4a907d9f53b9b052" translate="yes" xml:space="preserve">
          <source>Typically, this string should be 32 characters long. The key can be set in the &lt;code&gt;.env&lt;/code&gt; environment file. If you have not renamed the &lt;code&gt;.env.example&lt;/code&gt; file to &lt;code&gt;.env&lt;/code&gt;, you should do that now. &lt;strong&gt;If the application key is not set, your user sessions and other encrypted data will not be secure!&lt;/strong&gt;</source>
          <target state="translated">通常，此字符串应为32个字符长。可以在 &lt;code&gt;.env&lt;/code&gt; 环境文件中设置密钥。如果尚未将 &lt;code&gt;.env.example&lt;/code&gt; 文件重命名为 &lt;code&gt;.env&lt;/code&gt; ，则应立即执行此操作。&lt;strong&gt;如果未设置应用程序密钥，则用户会话和其他加密数据将不安全！&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6c94b132adaaf3d9eae912c7a7fce8bd770e3743" translate="yes" xml:space="preserve">
          <source>Typically, translation strings are stored in files within the &lt;code&gt;resources/lang&lt;/code&gt; directory. Within this directory there should be a subdirectory for each language supported by the application:</source>
          <target state="translated">通常，翻译字符串存储在 &lt;code&gt;resources/lang&lt;/code&gt; 目录中的文件中。在此目录中，应该有应用程序支持的每种语言的子目录：</target>
        </trans-unit>
        <trans-unit id="d4c18c8a9600dbd0fd2eecd227ca5ed7663b9dad" translate="yes" xml:space="preserve">
          <source>Typically, you should declare collection macros in a &lt;a href=&quot;providers&quot;&gt;service provider&lt;/a&gt;.</source>
          <target state="translated">通常，您应该在&lt;a href=&quot;providers&quot;&gt;service provider中&lt;/a&gt;声明集合宏。</target>
        </trans-unit>
        <trans-unit id="535ba5a71485075e9f1036212466b10b75ed9d72" translate="yes" xml:space="preserve">
          <source>Typically, you should place these kinds of routes outside of the &lt;code&gt;web&lt;/code&gt; middleware group that the &lt;code&gt;RouteServiceProvider&lt;/code&gt; applies to all routes in the &lt;code&gt;routes/web.php&lt;/code&gt; file. However, you may also exclude the routes by adding their URIs to the &lt;code&gt;$except&lt;/code&gt; property of the &lt;code&gt;VerifyCsrfToken&lt;/code&gt; middleware:</source>
          <target state="translated">通常，应将这些类型的路由放置在 &lt;code&gt;RouteServiceProvider&lt;/code&gt; 应用于 &lt;code&gt;routes/web.php&lt;/code&gt; 文件中的所有路由的 &lt;code&gt;web&lt;/code&gt; 中间件组之外。但是，您也可以通过将其URI添加到 &lt;code&gt;VerifyCsrfToken&lt;/code&gt; 中间件的 &lt;code&gt;$except&lt;/code&gt; 属性中来排除路由：</target>
        </trans-unit>
        <trans-unit id="0ffe02392ca72c0ffb3ef8571a10ff56e42aaf06" translate="yes" xml:space="preserve">
          <source>Typically, you will need to publish your package's configuration file to the application's own &lt;code&gt;config&lt;/code&gt; directory. This will allow users of your package to easily override your default configuration options. To allow your configuration files to be published, call the &lt;code&gt;publishes&lt;/code&gt; method from the &lt;code&gt;boot&lt;/code&gt; method of your service provider:</source>
          <target state="translated">通常，您将需要将软件包的配置文件发布到应用程序自己的 &lt;code&gt;config&lt;/code&gt; 目录中。这将使您的程序包用户可以轻松覆盖您的默认配置选项。要发布配置文件，请从服务提供商的 &lt;code&gt;boot&lt;/code&gt; 方法中调用 &lt;code&gt;publishes&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="3cfb59d46bbe01f5debf7f30e1599f2180076b53" translate="yes" xml:space="preserve">
          <source>Typically, you will want to mark a notification as &quot;read&quot; when a user views it. The &lt;code&gt;Illuminate\Notifications\Notifiable&lt;/code&gt; trait provides a &lt;code&gt;markAsRead&lt;/code&gt; method, which updates the &lt;code&gt;read_at&lt;/code&gt; column on the notification's database record:</source>
          <target state="translated">通常，您希望在用户查看通知时将其标记为&amp;ldquo;已读&amp;rdquo;。该 &lt;code&gt;Illuminate\Notifications\Notifiable&lt;/code&gt; 性状提供了 &lt;code&gt;markAsRead&lt;/code&gt; 方法，其中更新 &lt;code&gt;read_at&lt;/code&gt; 上通知的数据库记录列：</target>
        </trans-unit>
        <trans-unit id="44afa892e3c4cc5b03a8bac17155555f26b5da6b" translate="yes" xml:space="preserve">
          <source>Typically, you will want to pass some data to your view that you can utilize when rendering the email's HTML. There are two ways you may make data available to your view. First, any public property defined on your mailable class will automatically be made available to the view. So, for example, you may pass data into your mailable class' constructor and set that data to public properties defined on the class:</source>
          <target state="translated">通常情况下,您会希望将一些数据传递给您的视图,以便您在渲染电子邮件的 HTML 时可以利用这些数据。有两种方式可以让数据提供给视图。首先,您的可邮件类上定义的任何公共属性都会自动提供给视图。因此,例如,您可以将数据传递到您的mailable类的构造函数中,并将这些数据设置为定义在该类上的公共属性。</target>
        </trans-unit>
        <trans-unit id="04d5402187271595cbeac2d262033e3372090d34" translate="yes" xml:space="preserve">
          <source>Typically, you won't just be returning simple strings or arrays from your route actions. Instead, you will be returning full &lt;code&gt;Illuminate\Http\Response&lt;/code&gt; instances or &lt;a href=&quot;views&quot;&gt;views&lt;/a&gt;.</source>
          <target state="translated">通常，您不仅会从路由操作中返回简单的字符串或数组。相反，您将返回完整的 &lt;code&gt;Illuminate\Http\Response&lt;/code&gt; 实例或&lt;a href=&quot;views&quot;&gt;视图&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4a61fe5e239019d1661a709c3259c8559061fec9" translate="yes" xml:space="preserve">
          <source>Typing Values</source>
          <target state="translated">输入值</target>
        </trans-unit>
        <trans-unit id="5bda711f43a583c45406bf46c954a905f2ba7ce7" translate="yes" xml:space="preserve">
          <source>UNSIGNED BIGINT equivalent column.</source>
          <target state="translated">UNSIGNED BIGINT等价列。</target>
        </trans-unit>
        <trans-unit id="e03eee26fc7887b9056288f86e3bdf804ef59546" translate="yes" xml:space="preserve">
          <source>UNSIGNED DECIMAL equivalent column with a precision (total digits) and scale (decimal digits).</source>
          <target state="translated">UNSIGNED DECIMAL等效列,精度(总位数)和比例(小数位数)。</target>
        </trans-unit>
        <trans-unit id="c3dd5a319fde30a675b0b4b68b7cc36dd2ce7442" translate="yes" xml:space="preserve">
          <source>UNSIGNED INTEGER equivalent column.</source>
          <target state="translated">UNSIGNED INTEGER等价列。</target>
        </trans-unit>
        <trans-unit id="19e0dd9a64224d3ecf365ffb19a1abb152cdf288" translate="yes" xml:space="preserve">
          <source>UNSIGNED MEDIUMINT equivalent column.</source>
          <target state="translated">UNSIGNED MEDIUMINT等价列。</target>
        </trans-unit>
        <trans-unit id="ee44c22a63696c24a9e3971e0ef29cd69d50e62f" translate="yes" xml:space="preserve">
          <source>UNSIGNED SMALLINT equivalent column.</source>
          <target state="translated">UNSIGNED SMALLINT等价列。</target>
        </trans-unit>
        <trans-unit id="ff003a2e20467103dc95ab390476fd279d19adc1" translate="yes" xml:space="preserve">
          <source>UNSIGNED TINYINT equivalent column.</source>
          <target state="translated">UNSIGNED TINYINT等价列。</target>
        </trans-unit>
        <trans-unit id="969889215d3804c32a99c97486cf4c2be8200d66" translate="yes" xml:space="preserve">
          <source>UPDATED_AT</source>
          <target state="translated">UPDATED_AT</target>
        </trans-unit>
        <trans-unit id="cb371c93c5aa0e62198efd303ae2c17474416d1a" translate="yes" xml:space="preserve">
          <source>URI</source>
          <target state="translated">URI</target>
        </trans-unit>
        <trans-unit id="0e2d9b0777a485c1276de0803c12a7d76fbc5c39" translate="yes" xml:space="preserve">
          <source>URL</source>
          <target state="translated">URL</target>
        </trans-unit>
        <trans-unit id="a2ff1b89306266fdfb7dd3cf39c2b7aae264eb1b" translate="yes" xml:space="preserve">
          <source>URL (Support\Facades)</source>
          <target state="translated">URL (Support/Facades)</target>
        </trans-unit>
        <trans-unit id="99626f5a4c900275b7580bbbb16c9ce11a67c90a" translate="yes" xml:space="preserve">
          <source>URL Generation</source>
          <target state="translated">生成URL</target>
        </trans-unit>
        <trans-unit id="27d83fd095a3b51079fa9ae8ae8171abb85ef82e" translate="yes" xml:space="preserve">
          <source>URL Generator &amp;amp; Callable Syntax</source>
          <target state="translated">URL生成器和可调用语法</target>
        </trans-unit>
        <trans-unit id="6250a4626287c0bcd6af545e309c6a117d332ba3" translate="yes" xml:space="preserve">
          <source>URL Processing</source>
          <target state="translated">URL处理</target>
        </trans-unit>
        <trans-unit id="b863134024e3bf201723778dc23ae884c4298f10" translate="yes" xml:space="preserve">
          <source>URL::getFacadeAccessor()</source>
          <target state="translated">URL::getFacadeAccessor()</target>
        </trans-unit>
        <trans-unit id="01f03837323aab32409bb99c50d6c475179c49df" translate="yes" xml:space="preserve">
          <source>URLs</source>
          <target state="translated">URLs</target>
        </trans-unit>
        <trans-unit id="32940a1c4f5724ee6d9d18524938fce491d078ce" translate="yes" xml:space="preserve">
          <source>URLs For Controller Actions</source>
          <target state="translated">控制器动作的URL</target>
        </trans-unit>
        <trans-unit id="c9861bfde4322bd47b9bcc5fbe6e9b031d7be01e" translate="yes" xml:space="preserve">
          <source>URLs For Named Routes</source>
          <target state="translated">命名路由的URL</target>
        </trans-unit>
        <trans-unit id="e7817261c2a27fb49cb7da1109db45cd0b897251" translate="yes" xml:space="preserve">
          <source>UUID equivalent column.</source>
          <target state="translated">UUID等价列。</target>
        </trans-unit>
        <trans-unit id="cd195acce4959407bbecd28a63a95b159a75424d" translate="yes" xml:space="preserve">
          <source>Ubuntu 18.04</source>
          <target state="translated">Ubuntu 18.04</target>
        </trans-unit>
        <trans-unit id="07869ad9b7845828aeca7f1485ba710b2dc5535e" translate="yes" xml:space="preserve">
          <source>Ultimately, this makes it easier to avoid &quot;N+1&quot; query problems within your resources. The &lt;code&gt;whenLoaded&lt;/code&gt; method may be used to conditionally load a relationship. In order to avoid unnecessarily loading relationships, this method accepts the name of the relationship instead of the relationship itself:</source>
          <target state="translated">最终，这使得避免资源中的&amp;ldquo; N + 1&amp;rdquo;个查询问题变得更加容易。该 &lt;code&gt;whenLoaded&lt;/code&gt; 方法可以用于有条件地加载的关系。为了避免不必要地加载关系，此方法接受关系的名称而不是关系本身：</target>
        </trans-unit>
        <trans-unit id="d0b6cea0c96c89e4e4c2e88b35054671c085ffd9" translate="yes" xml:space="preserve">
          <source>UnauthorizedException</source>
          <target state="translated">UnauthorizedException</target>
        </trans-unit>
        <trans-unit id="35998d02e20191f89b93e5327fd111e82dcf5a93" translate="yes" xml:space="preserve">
          <source>UnauthorizedException (Validation)</source>
          <target state="translated">UnauthorizedException (Validation)</target>
        </trans-unit>
        <trans-unit id="5e88dc1eddd83be73576dd3417e0313df0fdfb4f" translate="yes" xml:space="preserve">
          <source>UnauthorizedHttpException</source>
          <target state="translated">UnauthorizedHttpException</target>
        </trans-unit>
        <trans-unit id="869b9de9f915a255d9939e696b2bc052f345da58" translate="yes" xml:space="preserve">
          <source>Uncountable word forms.</source>
          <target state="translated">不计其数的字形。</target>
        </trans-unit>
        <trans-unit id="abb763f9dea77985f6c5124d9ac058ea2db81530" translate="yes" xml:space="preserve">
          <source>Under the hood, Laravel utilizes the &lt;a href=&quot;https://github.com/Seldaek/monolog&quot;&gt;Monolog&lt;/a&gt; library, which provides support for a variety of powerful log handlers. Laravel makes it a cinch to configure these handlers, allowing you to mix and match them to customize your application's log handling.</source>
          <target state="translated">引擎盖下，Laravel利用&lt;a href=&quot;https://github.com/Seldaek/monolog&quot;&gt;独白&lt;/a&gt;库，它提供了多种强大的日志处理程序的支持。Laravel使配置这些处理程序变得轻而易举，允许您混合和匹配它们以自定义应用程序的日志处理。</target>
        </trans-unit>
        <trans-unit id="7a37f9d2b0e71dad0332527a62a587f91eef4b74" translate="yes" xml:space="preserve">
          <source>Under the hood, the &lt;code&gt;cache&lt;/code&gt; helper is going to call the &lt;code&gt;get&lt;/code&gt; method on the class underlying the &lt;code&gt;Cache&lt;/code&gt; facade. So, even though we are using the helper function, we can write the following test to verify that the method was called with the argument we expected:</source>
          <target state="translated">在后台， &lt;code&gt;cache&lt;/code&gt; 助手将在 &lt;code&gt;Cache&lt;/code&gt; 外观基础层上的类上调用 &lt;code&gt;get&lt;/code&gt; 方法。因此，即使我们正在使用辅助函数，我们也可以编写以下测试来验证是否使用我们期望的参数调用了该方法：</target>
        </trans-unit>
        <trans-unit id="750d588b4487042bc3cb4df2f07a673b613d2ee0" translate="yes" xml:space="preserve">
          <source>UnexpectedValueException</source>
          <target state="translated">UnexpectedValueException</target>
        </trans-unit>
        <trans-unit id="5e38e0b07f9b18e7261ca02b5a2ad3ba15f29bfa" translate="yes" xml:space="preserve">
          <source>Unicode Content</source>
          <target state="translated">统一码内容</target>
        </trans-unit>
        <trans-unit id="313f6ac7158154d571bf6bf60f8a41f3199887c3" translate="yes" xml:space="preserve">
          <source>Uninstall the Valet daemon entirely.</source>
          <target state="translated">完全卸载Valet守护程序。</target>
        </trans-unit>
        <trans-unit id="a7f6fb72911fd3490eb3210219daae3c1d77f8c6" translate="yes" xml:space="preserve">
          <source>Union the collection with the given items.</source>
          <target state="translated">将收藏品与给定物品结合起来。</target>
        </trans-unit>
        <trans-unit id="00002b164c08859d5a15579e55c8f17ce6478546" translate="yes" xml:space="preserve">
          <source>Unions</source>
          <target state="translated">Unions</target>
        </trans-unit>
        <trans-unit id="87c6f410754d2f5d42cbccc33576be0d5edc865c" translate="yes" xml:space="preserve">
          <source>Unique</source>
          <target state="translated">Unique</target>
        </trans-unit>
        <trans-unit id="e4286fc9472d175a44248d76c7be621486e35980" translate="yes" xml:space="preserve">
          <source>Unique (Validation\Rules)</source>
          <target state="translated">独特的(验证/规则)</target>
        </trans-unit>
        <trans-unit id="04d91cab5caa2d39c0a4a55c48559fa030b56996" translate="yes" xml:space="preserve">
          <source>Unique::__toString()</source>
          <target state="translated">Unique::__toString()</target>
        </trans-unit>
        <trans-unit id="65a74a72e4ea3969054b3da600a94655bebe2809" translate="yes" xml:space="preserve">
          <source>Unique::ignore()</source>
          <target state="translated">Unique::ignore()</target>
        </trans-unit>
        <trans-unit id="a6f715dcf805ab87f2c27d5026e65bd042072b4b" translate="yes" xml:space="preserve">
          <source>Unique::ignoreModel()</source>
          <target state="translated">Unique::ignoreModel()</target>
        </trans-unit>
        <trans-unit id="a42a000167a82dfbca8440a95cea4046b369bd1b" translate="yes" xml:space="preserve">
          <source>Universal To</source>
          <target state="translated">通用到</target>
        </trans-unit>
        <trans-unit id="15af64a17a16be21eea3c0397cbef630f7cae431" translate="yes" xml:space="preserve">
          <source>Unlike facades, which do not require you to require them in your class' constructor, contracts allow you to define explicit dependencies for your classes. Some developers prefer to explicitly define their dependencies in this way and therefore prefer to use contracts, while other developers enjoy the convenience of facades.</source>
          <target state="translated">与不需要你在类的构造函数中要求的门面不同,合同允许你为你的类定义明确的依赖关系。一些开发者喜欢用这种方式明确定义他们的依赖关系,因此更喜欢使用合同,而另一些开发者则享受着外墙的便利。</target>
        </trans-unit>
        <trans-unit id="df3660864ac96501205f2b18444128c21bf72ea2" translate="yes" xml:space="preserve">
          <source>Unlike most other collection methods, &lt;code&gt;forget&lt;/code&gt; does not return a new modified collection; it modifies the collection it is called on.</source>
          <target state="translated">与大多数其他收集方法不同， &lt;code&gt;forget&lt;/code&gt; 不返回修改后的新收集；它修改了它被调用的集合。</target>
        </trans-unit>
        <trans-unit id="7e0edb2c8b91ae6881442e750bef8566fcff6fd7" translate="yes" xml:space="preserve">
          <source>Unlike most other collection methods, &lt;code&gt;transform&lt;/code&gt; modifies the collection itself. If you wish to create a new collection instead, use the &lt;a href=&quot;#method-map&quot;&gt;&lt;code&gt;map&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">与大多数其他收集方法不同， &lt;code&gt;transform&lt;/code&gt; 修改收集本身。如果您想创建一个新集合，请使用&lt;a href=&quot;#method-map&quot;&gt; &lt;code&gt;map&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="4e2e857a6e1df693c6239dd9b9712cbc75d6a5b5" translate="yes" xml:space="preserve">
          <source>Unlike traditional static method calls, &lt;a href=&quot;facades&quot;&gt;facades&lt;/a&gt; may be mocked. This provides a great advantage over traditional static methods and grants you the same testability you would have if you were using dependency injection. When testing, you may often want to mock a call to a Laravel facade in one of your controllers. For example, consider the following controller action:</source>
          <target state="translated">与传统的静态方法调用不同，可以对&lt;a href=&quot;facades&quot;&gt;外观&lt;/a&gt;进行模拟。与传统的静态方法相比，这提供了很大的优势，并赋予了您与使用依赖注入时相同的可测试性。测试时，您可能经常想在其中一个控制器中模拟对Laravel门面的调用。例如，考虑以下控制器操作：</target>
        </trans-unit>
        <trans-unit id="1aa3965966efcf18122d576ca7bc093bba8fbdb8" translate="yes" xml:space="preserve">
          <source>Unserialize the data if needed.</source>
          <target state="translated">如果需要,可以将数据未序列化。</target>
        </trans-unit>
        <trans-unit id="5bf7c0ff451bed65a9c2e4e1fe482dae6b81a123" translate="yes" xml:space="preserve">
          <source>Unserialize the given value.</source>
          <target state="translated">未序列化给定值。</target>
        </trans-unit>
        <trans-unit id="cd6d0ada08b545e2653d6498d810b3322eea3a2f" translate="yes" xml:space="preserve">
          <source>Unserialize the value.</source>
          <target state="translated">未序列化的值。</target>
        </trans-unit>
        <trans-unit id="bdf0a99a0cfb1cab1e92001c08e290e0efb56223" translate="yes" xml:space="preserve">
          <source>Unset a configuration option.</source>
          <target state="translated">取消设置一个配置选项。</target>
        </trans-unit>
        <trans-unit id="a90c92ae24574960012fc865d8f004d1b1c3101f" translate="yes" xml:space="preserve">
          <source>Unset a loaded relationship.</source>
          <target state="translated">取消设置一个加载的关系。</target>
        </trans-unit>
        <trans-unit id="aeb5904c46fe8d323c82deb5faf0054d24da62d9" translate="yes" xml:space="preserve">
          <source>Unset a parameter on the route if it is set.</source>
          <target state="translated">如果设置了途径上的参数,则取消设置。</target>
        </trans-unit>
        <trans-unit id="09d5a2d9dc1d4b088677b8b13c371ac00446afa7" translate="yes" xml:space="preserve">
          <source>Unset a piece of data from the view.</source>
          <target state="translated">从视图中取消设置一个数据。</target>
        </trans-unit>
        <trans-unit id="e13e0f38cf2059b5f5262a594ee8df5847060466" translate="yes" xml:space="preserve">
          <source>Unset an attribute on the model.</source>
          <target state="translated">取消设置模型的属性。</target>
        </trans-unit>
        <trans-unit id="7dbb6f558d8169343d27b436d4954dfa6da7d9d9" translate="yes" xml:space="preserve">
          <source>Unset an attribute on the resource.</source>
          <target state="translated">取消设置资源的属性。</target>
        </trans-unit>
        <trans-unit id="b7029217f969563e9641c4ba12f4ae0b70864ea0" translate="yes" xml:space="preserve">
          <source>Unset the connection resolver for models.</source>
          <target state="translated">取消设置模型的连接解析器。</target>
        </trans-unit>
        <trans-unit id="be8adb7a8e9c689499e07a4e4e2fd35a20e6f4b4" translate="yes" xml:space="preserve">
          <source>Unset the event dispatcher for models.</source>
          <target state="translated">取消设置模型的事件调度器。</target>
        </trans-unit>
        <trans-unit id="9989c7f33bcdb6d9c9fb5a628896075a176fa7f1" translate="yes" xml:space="preserve">
          <source>Unset the event dispatcher for this connection.</source>
          <target state="translated">取消设置该连接的事件调度器。</target>
        </trans-unit>
        <trans-unit id="0b7daa3ef3c66022a3deba8d0ccd067c11ab5ed5" translate="yes" xml:space="preserve">
          <source>Unset the event dispatcher instance on the connection.</source>
          <target state="translated">取消设置连接上的事件调度器实例。</target>
        </trans-unit>
        <trans-unit id="6caca4c2079af3469a1f9aa423844c66a6a25bfa" translate="yes" xml:space="preserve">
          <source>Unset the given disk instances.</source>
          <target state="translated">解除对给定磁盘实例的设置。</target>
        </trans-unit>
        <trans-unit id="9cc43daff0f7a9c86c2e448c690f0777bd68810b" translate="yes" xml:space="preserve">
          <source>Unset the item at a given offset.</source>
          <target state="translated">在给定的偏移量处取消设置该项目。</target>
        </trans-unit>
        <trans-unit id="9a19bf398044905ec67d259cba26b685a447fd25" translate="yes" xml:space="preserve">
          <source>Unset the item at the given key.</source>
          <target state="translated">在给定的键上取消设置该项目。</target>
        </trans-unit>
        <trans-unit id="c952df7ad7ba3c3a04f544ecc2b98a97287e40a4" translate="yes" xml:space="preserve">
          <source>Unset the value at a given offset.</source>
          <target state="translated">解除给定偏移量的值。</target>
        </trans-unit>
        <trans-unit id="eeb834ea544594277d6eb0b918a39128ad861f52" translate="yes" xml:space="preserve">
          <source>Unset the value at the given offset.</source>
          <target state="translated">解除给定偏移量的值。</target>
        </trans-unit>
        <trans-unit id="541793c5701d1c15bc51625e27e54f88a0670674" translate="yes" xml:space="preserve">
          <source>Unset the value for a given offset.</source>
          <target state="translated">取消设置给定偏移量的值。</target>
        </trans-unit>
        <trans-unit id="f9ed626adc67df10ef841fc12e4fffbaea51e059" translate="yes" xml:space="preserve">
          <source>UpCommand</source>
          <target state="translated">UpCommand</target>
        </trans-unit>
        <trans-unit id="133cc624ca5d53bafe25787c2e1282d19812f6fb" translate="yes" xml:space="preserve">
          <source>UpCommand (Foundation)</source>
          <target state="translated">UpCommand(基金会)</target>
        </trans-unit>
        <trans-unit id="25f824f86fa25bc3043f07bcfe24943270761c40" translate="yes" xml:space="preserve">
          <source>UpCommand::handle()</source>
          <target state="translated">UpCommand::handle()</target>
        </trans-unit>
        <trans-unit id="03bd1051c57685f0f9be5a94e120dda5171f4afd" translate="yes" xml:space="preserve">
          <source>Update a record in the database.</source>
          <target state="translated">更新数据库中的一条记录。</target>
        </trans-unit>
        <trans-unit id="002f5ef3ebcfc628843d0cf7b8ddb2feb32f677c" translate="yes" xml:space="preserve">
          <source>Update an existing pivot record on the table.</source>
          <target state="translated">更新表上现有的数据透视记录。</target>
        </trans-unit>
        <trans-unit id="73a1e9e01c757831d62c2c95c024ca78761b0e2b" translate="yes" xml:space="preserve">
          <source>Update the &quot;package.json&quot; file.</source>
          <target state="translated">更新 &quot;package.json &quot;文件。</target>
        </trans-unit>
        <trans-unit id="bf8b8ec88f5ac1c125a7a4611faa241b4fbc00a9" translate="yes" xml:space="preserve">
          <source>Update the &quot;remember me&quot; token for the given user in storage.</source>
          <target state="translated">更新存储中给定用户的 &quot;记住我 &quot;令牌。</target>
        </trans-unit>
        <trans-unit id="8d85d72e6cbd850f06dbb495dbef9000096f3617" translate="yes" xml:space="preserve">
          <source>Update the &quot;reserved at&quot; timestamp of the job.</source>
          <target state="translated">更新作业的 &quot;保留时间 &quot;时间戳。</target>
        </trans-unit>
        <trans-unit id="0e6cf51be4c34b3965829f09b6898ed8a890bbc9" translate="yes" xml:space="preserve">
          <source>Update the Sass files for the application.</source>
          <target state="translated">更新应用程序的Sass文件。</target>
        </trans-unit>
        <trans-unit id="e664460e77379ec3300dade4b2b4ce40ca90eef1" translate="yes" xml:space="preserve">
          <source>Update the Webpack configuration.</source>
          <target state="translated">更新Webpack配置。</target>
        </trans-unit>
        <trans-unit id="11edb18c0d4b80953e40c9a3d76d1dbd22da2510" translate="yes" xml:space="preserve">
          <source>Update the bootstrapping files.</source>
          <target state="translated">更新引导文件。</target>
        </trans-unit>
        <trans-unit id="905546f37849de4c75c785dd2e6d4b2a41ababf4" translate="yes" xml:space="preserve">
          <source>Update the creation and update timestamps.</source>
          <target state="translated">更新创建和更新时间戳。</target>
        </trans-unit>
        <trans-unit id="07f869893e250ccccf293b1a3f116d644cb41fd6" translate="yes" xml:space="preserve">
          <source>Update the example component.</source>
          <target state="translated">更新示例组件。</target>
        </trans-unit>
        <trans-unit id="148a5534b7d7eb95f711ebbe8a8ae958c56678b4" translate="yes" xml:space="preserve">
          <source>Update the given package array.</source>
          <target state="translated">更新给定的包数组。</target>
        </trans-unit>
        <trans-unit id="8c9894cdf51b9b80a7579943b2d52edb31257c5b" translate="yes" xml:space="preserve">
          <source>Update the group stack with the given attributes.</source>
          <target state="translated">用给定的属性更新组栈。</target>
        </trans-unit>
        <trans-unit id="95b7b1cfc33a3ac27790b9f06e48e6ec180bacb8" translate="yes" xml:space="preserve">
          <source>Update the model in the database.</source>
          <target state="translated">更新数据库中的模型。</target>
        </trans-unit>
        <trans-unit id="4c357e933efe3fd4ff108b97cf06c09af63817b0" translate="yes" xml:space="preserve">
          <source>Update the model's update timestamp.</source>
          <target state="translated">更新模型的更新时间戳。</target>
        </trans-unit>
        <trans-unit id="d73f622fadf5aca1b559e04ab1a8d9bd028e95ea" translate="yes" xml:space="preserve">
          <source>Update the parent model on the relationship.</source>
          <target state="translated">更新关系上的父模型。</target>
        </trans-unit>
        <trans-unit id="d2a282689bfa27edada19bcc74df552c14f28c5f" translate="yes" xml:space="preserve">
          <source>Update the session with the given ID.</source>
          <target state="translated">用给定的ID更新会话。</target>
        </trans-unit>
        <trans-unit id="ec9e4a51844915dfc4414d64b1af57a13f9ce582" translate="yes" xml:space="preserve">
          <source>Update your &lt;code&gt;laravel/framework&lt;/code&gt; dependency to &lt;code&gt;5.7.*&lt;/code&gt; in your &lt;code&gt;composer.json&lt;/code&gt; file.</source>
          <target state="translated">在您的 &lt;code&gt;composer.json&lt;/code&gt; 文件 &lt;code&gt;laravel/framework&lt;/code&gt; 您的laravel / framework依赖关系更新为 &lt;code&gt;5.7.*&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c76d18079a076ee34ffc62b5b9bd0909da356dce" translate="yes" xml:space="preserve">
          <source>Updates</source>
          <target state="translated">Updates</target>
        </trans-unit>
        <trans-unit id="93fe4180e870c7c673ccf65b42f6ab5f9b05ae35" translate="yes" xml:space="preserve">
          <source>Updates can also be performed against any number of models that match a given query. In this example, all flights that are &lt;code&gt;active&lt;/code&gt; and have a &lt;code&gt;destination&lt;/code&gt; of &lt;code&gt;San Diego&lt;/code&gt; will be marked as delayed:</source>
          <target state="translated">还可以针对与给定查询匹配的任何数量的模型执行更新。在此示例中，所有 &lt;code&gt;active&lt;/code&gt; 且 &lt;code&gt;destination&lt;/code&gt; 为 &lt;code&gt;San Diego&lt;/code&gt; 航班都将标记为延迟：</target>
        </trans-unit>
        <trans-unit id="9356b969eea16c86811c9445deb0962c55187fa9" translate="yes" xml:space="preserve">
          <source>Updating A Record On A Pivot Table</source>
          <target state="translated">更新数据透视表上的记录</target>
        </trans-unit>
        <trans-unit id="1c1786f6cf4784e48504e429f9238b5d18f3f6ae" translate="yes" xml:space="preserve">
          <source>Updating Column Attributes</source>
          <target state="translated">更新列属性</target>
        </trans-unit>
        <trans-unit id="7d3336de02aa02f967c096f71d0efd6a5f436a21" translate="yes" xml:space="preserve">
          <source>Updating Credit Cards</source>
          <target state="translated">更新信用卡</target>
        </trans-unit>
        <trans-unit id="7df9a4cf600a48f460195272caa546a2cd3708c2" translate="yes" xml:space="preserve">
          <source>Updating Dependencies</source>
          <target state="translated">更新依赖性</target>
        </trans-unit>
        <trans-unit id="178207d52bb680531ef40ebce399a3763b5e6752" translate="yes" xml:space="preserve">
          <source>Updating Envoy</source>
          <target state="translated">更新特使</target>
        </trans-unit>
        <trans-unit id="1866dde603755a649eef61154cacb2f74e9ace28" translate="yes" xml:space="preserve">
          <source>Updating Homestead</source>
          <target state="translated">更新家园</target>
        </trans-unit>
        <trans-unit id="d5f938ba11d6e8912b7b98b91a74c13494ca3782" translate="yes" xml:space="preserve">
          <source>Updating JSON Columns</source>
          <target state="translated">更新JSON列</target>
        </trans-unit>
        <trans-unit id="e5b09343b2238bb74ea50d37eff3231b6eb0978f" translate="yes" xml:space="preserve">
          <source>Updating Records</source>
          <target state="translated">更新记录</target>
        </trans-unit>
        <trans-unit id="2f3485fdf3ae3831ba56f645c6f462d9a81292dd" translate="yes" xml:space="preserve">
          <source>Upgrade Guide</source>
          <target state="translated">升级指南</target>
        </trans-unit>
        <trans-unit id="a7dd3a1d8ed51cf30314c15a934d4cae0718aa5a" translate="yes" xml:space="preserve">
          <source>Upgrading</source>
          <target state="translated">Upgrading</target>
        </trans-unit>
        <trans-unit id="d505533398635ad971e0ccd38b7c3af38267f58e" translate="yes" xml:space="preserve">
          <source>Upgrading To 5.7.0 From 5.6</source>
          <target state="translated">从5.6升级到5.7.0。</target>
        </trans-unit>
        <trans-unit id="605ab121b0528444f54d7535cf18ad408ae5b7dc" translate="yes" xml:space="preserve">
          <source>Upgrading To Valet 2.0</source>
          <target state="translated">升级到代客泊2.0</target>
        </trans-unit>
        <trans-unit id="023fd83a0de52728b167fe09fbf61b2660601158" translate="yes" xml:space="preserve">
          <source>UploadedFile</source>
          <target state="translated">UploadedFile</target>
        </trans-unit>
        <trans-unit id="0fae64d1bc9acb27d0e1c2b4e9cab51326ba47b0" translate="yes" xml:space="preserve">
          <source>UploadedFile (Http)</source>
          <target state="translated">上传的文件(Http)</target>
        </trans-unit>
        <trans-unit id="929cdbfae255d063719196518f122ff600026a9a" translate="yes" xml:space="preserve">
          <source>UploadedFile::createFromBase()</source>
          <target state="translated">UploadedFile::createFromBase()</target>
        </trans-unit>
        <trans-unit id="8ca9b5c61903439dbe6b306208888d59eae2c415" translate="yes" xml:space="preserve">
          <source>UploadedFile::fake()</source>
          <target state="translated">UploadedFile::fake()</target>
        </trans-unit>
        <trans-unit id="bec6b04348c3d4d79d97bb39bf4b76eea2cc6b5c" translate="yes" xml:space="preserve">
          <source>UploadedFile::get()</source>
          <target state="translated">UploadedFile::get()</target>
        </trans-unit>
        <trans-unit id="eb17a0f2baf59c892614bb1db35c4e10777b559b" translate="yes" xml:space="preserve">
          <source>UploadedFile::parseOptions()</source>
          <target state="translated">UploadedFile::parseOptions()</target>
        </trans-unit>
        <trans-unit id="bee0d4b4858e108447d498caaf1760a65e535671" translate="yes" xml:space="preserve">
          <source>UploadedFile::store()</source>
          <target state="translated">UploadedFile::store()</target>
        </trans-unit>
        <trans-unit id="80446ee3e5915a0c6c137ec25ced82fcaead3852" translate="yes" xml:space="preserve">
          <source>UploadedFile::storeAs()</source>
          <target state="translated">UploadedFile::storeAs()</target>
        </trans-unit>
        <trans-unit id="1efb800abe70f17967219892620a445c0ebc9d89" translate="yes" xml:space="preserve">
          <source>UploadedFile::storePublicly()</source>
          <target state="translated">UploadedFile::storePublicly()</target>
        </trans-unit>
        <trans-unit id="5754c39d9e8ad5919ce457740d4cbe045b8c566a" translate="yes" xml:space="preserve">
          <source>UploadedFile::storePubliclyAs()</source>
          <target state="translated">UploadedFile::storePubliclyAs()</target>
        </trans-unit>
        <trans-unit id="e2aa20e71f24069d864f6960094daa88183d169b" translate="yes" xml:space="preserve">
          <source>UriValidator</source>
          <target state="translated">UriValidator</target>
        </trans-unit>
        <trans-unit id="b9ef8e5c22c477698492f2eb201d546b80e4d992" translate="yes" xml:space="preserve">
          <source>UriValidator (Routing\Matching)</source>
          <target state="translated">UriValidator (Routing/Matching)</target>
        </trans-unit>
        <trans-unit id="a1ffb6435d5b897a1a9505be58529ca105e7c2b1" translate="yes" xml:space="preserve">
          <source>UriValidator::matches()</source>
          <target state="translated">UriValidator::matches()</target>
        </trans-unit>
        <trans-unit id="9eff5906156c95b179bf55d811165d62dbf6f86e" translate="yes" xml:space="preserve">
          <source>UrlGenerationException</source>
          <target state="translated">UrlGenerationException</target>
        </trans-unit>
        <trans-unit id="885ede85647c1a7b223cc3e8e0925b2257f4658d" translate="yes" xml:space="preserve">
          <source>UrlGenerationException (Routing\Exceptions)</source>
          <target state="translated">UrlGenerationException (Routing\Exceptions)</target>
        </trans-unit>
        <trans-unit id="a75bc3a2dc94e7d269950325bc494454f3d84051" translate="yes" xml:space="preserve">
          <source>UrlGenerationException::forMissingParameters()</source>
          <target state="translated">UrlGenerationException::forMissingParameters()</target>
        </trans-unit>
        <trans-unit id="0769e65016ed0c832ab200b2aa5f1bd9d7c92758" translate="yes" xml:space="preserve">
          <source>UrlGenerator</source>
          <target state="translated">UrlGenerator</target>
        </trans-unit>
        <trans-unit id="b1e2ed20c7649a6018d6ee4f1ad2e204e0db0e05" translate="yes" xml:space="preserve">
          <source>UrlGenerator (Contracts)</source>
          <target state="translated">UrlGenerator (合同)</target>
        </trans-unit>
        <trans-unit id="43458e6fc9284c0a508e0b54a744075649ddcd6e" translate="yes" xml:space="preserve">
          <source>UrlGenerator (Routing)</source>
          <target state="translated">UrlGenerator (Routing)</target>
        </trans-unit>
        <trans-unit id="962077cfbfeafaa6253c938f85a8dba9cafae24b" translate="yes" xml:space="preserve">
          <source>UrlGenerator::__construct()</source>
          <target state="translated">UrlGenerator::__construct()</target>
        </trans-unit>
        <trans-unit id="da33d4331a00ff0816ebdb06fb9c8eaf2c90748f" translate="yes" xml:space="preserve">
          <source>UrlGenerator::action()</source>
          <target state="translated">UrlGenerator::action()</target>
        </trans-unit>
        <trans-unit id="a83c1ab93b408a5da87b592ab85b7090eb1321e6" translate="yes" xml:space="preserve">
          <source>UrlGenerator::asset()</source>
          <target state="translated">UrlGenerator::asset()</target>
        </trans-unit>
        <trans-unit id="6f88971227ce1bd491fca24e780bc700e853af1f" translate="yes" xml:space="preserve">
          <source>UrlGenerator::assetFrom()</source>
          <target state="translated">UrlGenerator::assetFrom()</target>
        </trans-unit>
        <trans-unit id="32152f3f1615212665fc00469e3fadf773b1de37" translate="yes" xml:space="preserve">
          <source>UrlGenerator::current()</source>
          <target state="translated">UrlGenerator::current()</target>
        </trans-unit>
        <trans-unit id="2facd0534bc9480e4c20c0a251d1e9a3766da62f" translate="yes" xml:space="preserve">
          <source>UrlGenerator::defaults()</source>
          <target state="translated">UrlGenerator::defaults()</target>
        </trans-unit>
        <trans-unit id="644fec71bb011a37dd3a037828713c3102f8a1ae" translate="yes" xml:space="preserve">
          <source>UrlGenerator::extractQueryString()</source>
          <target state="translated">UrlGenerator::extractQueryString()</target>
        </trans-unit>
        <trans-unit id="930dbb951463ea5132f8f86c24825d1df188f732" translate="yes" xml:space="preserve">
          <source>UrlGenerator::forceRootUrl()</source>
          <target state="translated">UrlGenerator::forceRootUrl()</target>
        </trans-unit>
        <trans-unit id="44324252ab95b010591205848107f64eae2ece3e" translate="yes" xml:space="preserve">
          <source>UrlGenerator::forceScheme()</source>
          <target state="translated">UrlGenerator::forceScheme()</target>
        </trans-unit>
        <trans-unit id="e5ac6e06a412bcd30f0eb5b5e4e1c8981e87b69c" translate="yes" xml:space="preserve">
          <source>UrlGenerator::format()</source>
          <target state="translated">UrlGenerator::format()</target>
        </trans-unit>
        <trans-unit id="471c2173777b81f2c0a978ff1916746caa917310" translate="yes" xml:space="preserve">
          <source>UrlGenerator::formatAction()</source>
          <target state="translated">UrlGenerator::formatAction()</target>
        </trans-unit>
        <trans-unit id="f63022f163ec7f591a9530793b4bf3e803fe2b74" translate="yes" xml:space="preserve">
          <source>UrlGenerator::formatHostUsing()</source>
          <target state="translated">UrlGenerator::formatHostUsing()</target>
        </trans-unit>
        <trans-unit id="ba9558b4fc925020bac08b64e6aa98800bf077da" translate="yes" xml:space="preserve">
          <source>UrlGenerator::formatParameters()</source>
          <target state="translated">UrlGenerator::formatParameters()</target>
        </trans-unit>
        <trans-unit id="77bc4e8f54322b0ed0c88425db13e228caed07a4" translate="yes" xml:space="preserve">
          <source>UrlGenerator::formatPathUsing()</source>
          <target state="translated">UrlGenerator::formatPathUsing()</target>
        </trans-unit>
        <trans-unit id="d3c233468f2a2a061916a36043db0a969b73ccba" translate="yes" xml:space="preserve">
          <source>UrlGenerator::formatRoot()</source>
          <target state="translated">UrlGenerator::formatRoot()</target>
        </trans-unit>
        <trans-unit id="f921db8fec662e2d3a34f7f81cea8393f02001f4" translate="yes" xml:space="preserve">
          <source>UrlGenerator::formatScheme()</source>
          <target state="translated">UrlGenerator::formatScheme()</target>
        </trans-unit>
        <trans-unit id="18904ae888c8163de2140cf5e9c9fcc8ac854381" translate="yes" xml:space="preserve">
          <source>UrlGenerator::full()</source>
          <target state="translated">UrlGenerator::full()</target>
        </trans-unit>
        <trans-unit id="4843c6f1e994ef77abaf5a340e9d49fe158eaf98" translate="yes" xml:space="preserve">
          <source>UrlGenerator::getDefaultParameters()</source>
          <target state="translated">UrlGenerator::getDefaultParameters()</target>
        </trans-unit>
        <trans-unit id="e69d68e8e68722142ae11988c2b9bccc9d4224bc" translate="yes" xml:space="preserve">
          <source>UrlGenerator::getPreviousUrlFromSession()</source>
          <target state="translated">UrlGenerator::getPreviousUrlFromSession()</target>
        </trans-unit>
        <trans-unit id="47adfe9ee6d750475c97577a69ed7056997ab075" translate="yes" xml:space="preserve">
          <source>UrlGenerator::getRequest()</source>
          <target state="translated">UrlGenerator::getRequest()</target>
        </trans-unit>
        <trans-unit id="9ceb4fe2dd747f996e60a5cf9604850dba51dbec" translate="yes" xml:space="preserve">
          <source>UrlGenerator::getSession()</source>
          <target state="translated">UrlGenerator::getSession()</target>
        </trans-unit>
        <trans-unit id="c66d6d241e6efe575ef5c97b8f1015a20d6eba84" translate="yes" xml:space="preserve">
          <source>UrlGenerator::hasValidSignature()</source>
          <target state="translated">UrlGenerator::hasValidSignature()</target>
        </trans-unit>
        <trans-unit id="ca1cb3b12049ce569522f22cf2b619ab2168ffef" translate="yes" xml:space="preserve">
          <source>UrlGenerator::isValidUrl()</source>
          <target state="translated">UrlGenerator::isValidUrl()</target>
        </trans-unit>
        <trans-unit id="d2d25b87c42581a75d02cef68ebc5bb978512ff8" translate="yes" xml:space="preserve">
          <source>UrlGenerator::pathFormatter()</source>
          <target state="translated">UrlGenerator::pathFormatter()</target>
        </trans-unit>
        <trans-unit id="68667b7bb1b86d45ff800caabb6ca6b0e3a75ad6" translate="yes" xml:space="preserve">
          <source>UrlGenerator::previous()</source>
          <target state="translated">UrlGenerator::previous()</target>
        </trans-unit>
        <trans-unit id="085f58c8ee1be5809a1eb56bb0def52fe0899402" translate="yes" xml:space="preserve">
          <source>UrlGenerator::removeIndex()</source>
          <target state="translated">UrlGenerator::removeIndex()</target>
        </trans-unit>
        <trans-unit id="796c12bf7e518d5b6caa6e3b04876f9d41e2e1b6" translate="yes" xml:space="preserve">
          <source>UrlGenerator::route()</source>
          <target state="translated">UrlGenerator::route()</target>
        </trans-unit>
        <trans-unit id="3f4b888a055754d4bd2a2e496a6472a71a5f1232" translate="yes" xml:space="preserve">
          <source>UrlGenerator::routeUrl()</source>
          <target state="translated">UrlGenerator::routeUrl()</target>
        </trans-unit>
        <trans-unit id="546e38149374e7d15613b598c3cda70058e0379d" translate="yes" xml:space="preserve">
          <source>UrlGenerator::secure()</source>
          <target state="translated">UrlGenerator::secure()</target>
        </trans-unit>
        <trans-unit id="9e06c873e1ff0be7027c084e83ca847125148f36" translate="yes" xml:space="preserve">
          <source>UrlGenerator::secureAsset()</source>
          <target state="translated">UrlGenerator::secureAsset()</target>
        </trans-unit>
        <trans-unit id="0049d696c4c49ab56330e02b64abf7c5782c2f21" translate="yes" xml:space="preserve">
          <source>UrlGenerator::setKeyResolver()</source>
          <target state="translated">UrlGenerator::setKeyResolver()</target>
        </trans-unit>
        <trans-unit id="7bb84eafb7b49f8faf7aad9b8973b34509555187" translate="yes" xml:space="preserve">
          <source>UrlGenerator::setRequest()</source>
          <target state="translated">UrlGenerator::setRequest()</target>
        </trans-unit>
        <trans-unit id="789e4a0b11bf0edae16be4459b76d327a98e3f44" translate="yes" xml:space="preserve">
          <source>UrlGenerator::setRootControllerNamespace()</source>
          <target state="translated">UrlGenerator::setRootControllerNamespace()</target>
        </trans-unit>
        <trans-unit id="fb3f373477aa5a6ec53629555cabdc2308a9cd60" translate="yes" xml:space="preserve">
          <source>UrlGenerator::setRoutes()</source>
          <target state="translated">UrlGenerator::setRoutes()</target>
        </trans-unit>
        <trans-unit id="4ff19c4e0f57466ea6fc6dfa735551d5e85bac88" translate="yes" xml:space="preserve">
          <source>UrlGenerator::setSessionResolver()</source>
          <target state="translated">UrlGenerator::setSessionResolver()</target>
        </trans-unit>
        <trans-unit id="7eaed9594e126480c5f9c637fb9b88556faea2da" translate="yes" xml:space="preserve">
          <source>UrlGenerator::signedRoute()</source>
          <target state="translated">UrlGenerator::signedRoute()</target>
        </trans-unit>
        <trans-unit id="508e07bbc212c1d6693da067f10d6a3d810056da" translate="yes" xml:space="preserve">
          <source>UrlGenerator::temporarySignedRoute()</source>
          <target state="translated">UrlGenerator::temporarySignedRoute()</target>
        </trans-unit>
        <trans-unit id="e75eb34daec7052fa4f1c5ef75a0e419594ddb18" translate="yes" xml:space="preserve">
          <source>UrlGenerator::to()</source>
          <target state="translated">UrlGenerator::to()</target>
        </trans-unit>
        <trans-unit id="4d80db61d2d377e640cbb363d032fd4a26ee4e0c" translate="yes" xml:space="preserve">
          <source>UrlGenerator::toRoute()</source>
          <target state="translated">UrlGenerator::toRoute()</target>
        </trans-unit>
        <trans-unit id="af56f7f12d9fd2230182fbdd0a6bb833213966ca" translate="yes" xml:space="preserve">
          <source>UrlRoutable</source>
          <target state="translated">UrlRoutable</target>
        </trans-unit>
        <trans-unit id="88831b58f6d1222d31691ec4661fb51691d9589f" translate="yes" xml:space="preserve">
          <source>UrlRoutable (Contracts)</source>
          <target state="translated">UrlRoutable (合同)</target>
        </trans-unit>
        <trans-unit id="26867eb6098ebe702718474a39808543575a18cf" translate="yes" xml:space="preserve">
          <source>UrlRoutable::getRouteKey()</source>
          <target state="translated">UrlRoutable::getRouteKey()</target>
        </trans-unit>
        <trans-unit id="531de13b5fac1fca950c86df5cd3cd3c56af20ab" translate="yes" xml:space="preserve">
          <source>UrlRoutable::getRouteKeyName()</source>
          <target state="translated">UrlRoutable::getRouteKeyName()</target>
        </trans-unit>
        <trans-unit id="f64287f41a85f084f8752d60b768a92aa5c5dea2" translate="yes" xml:space="preserve">
          <source>UrlRoutable::resolveRouteBinding()</source>
          <target state="translated">UrlRoutable::resolveRouteBinding()</target>
        </trans-unit>
        <trans-unit id="82d9aa8714d152b96d98145954211474a4a200b4" translate="yes" xml:space="preserve">
          <source>UrlWindow</source>
          <target state="translated">UrlWindow</target>
        </trans-unit>
        <trans-unit id="4ac09d342c760e171ef290e74de15fb664e0758f" translate="yes" xml:space="preserve">
          <source>UrlWindow (Pagination)</source>
          <target state="translated">UrlWindow (Pagination)</target>
        </trans-unit>
        <trans-unit id="254ee6bbdd5efd79d6d42ad23b9937c22c401a12" translate="yes" xml:space="preserve">
          <source>UrlWindow::__construct()</source>
          <target state="translated">UrlWindow::__construct()</target>
        </trans-unit>
        <trans-unit id="a8710b73bc828e6c8f0822bf04003e610c0db5cb" translate="yes" xml:space="preserve">
          <source>UrlWindow::currentPage()</source>
          <target state="translated">UrlWindow::currentPage()</target>
        </trans-unit>
        <trans-unit id="364f275d33ecdb278caba77beaf055db29737f00" translate="yes" xml:space="preserve">
          <source>UrlWindow::get()</source>
          <target state="translated">UrlWindow::get()</target>
        </trans-unit>
        <trans-unit id="710443fde65d94cfc63eedfc96ba98f04acb5c30" translate="yes" xml:space="preserve">
          <source>UrlWindow::getAdjacentUrlRange()</source>
          <target state="translated">UrlWindow::getAdjacentUrlRange()</target>
        </trans-unit>
        <trans-unit id="f3e3248b32fec4e45b1a7bc4a3bee3e3f2318828" translate="yes" xml:space="preserve">
          <source>UrlWindow::getFinish()</source>
          <target state="translated">UrlWindow::getFinish()</target>
        </trans-unit>
        <trans-unit id="c122b588961947ddb91ff54012612f8df543dd7d" translate="yes" xml:space="preserve">
          <source>UrlWindow::getFullSlider()</source>
          <target state="translated">UrlWindow::getFullSlider()</target>
        </trans-unit>
        <trans-unit id="a2a4408d81c496eef32b1bd4f094b611b7188eb9" translate="yes" xml:space="preserve">
          <source>UrlWindow::getSliderTooCloseToBeginning()</source>
          <target state="translated">UrlWindow::getSliderTooCloseToBeginning()</target>
        </trans-unit>
        <trans-unit id="1d6e0206f309c298f5ae5fcd088665a799719b54" translate="yes" xml:space="preserve">
          <source>UrlWindow::getSliderTooCloseToEnding()</source>
          <target state="translated">UrlWindow::getSliderTooCloseToEnding()</target>
        </trans-unit>
        <trans-unit id="4f04e8bc590290708741548077563e5ad0f2e67b" translate="yes" xml:space="preserve">
          <source>UrlWindow::getSmallSlider()</source>
          <target state="translated">UrlWindow::getSmallSlider()</target>
        </trans-unit>
        <trans-unit id="7d90fac9aa941967c93f97cec7322364ee9590ef" translate="yes" xml:space="preserve">
          <source>UrlWindow::getStart()</source>
          <target state="translated">UrlWindow::getStart()</target>
        </trans-unit>
        <trans-unit id="b131c59f5e016f4708ef17de7064718df2080c67" translate="yes" xml:space="preserve">
          <source>UrlWindow::getUrlSlider()</source>
          <target state="translated">UrlWindow::getUrlSlider()</target>
        </trans-unit>
        <trans-unit id="1f9db9230bc50f04616b2fbcf0215e94d105cadc" translate="yes" xml:space="preserve">
          <source>UrlWindow::hasPages()</source>
          <target state="translated">UrlWindow::hasPages()</target>
        </trans-unit>
        <trans-unit id="09c4f7c2a4e5c08140573da3f0f13d9b494e5e76" translate="yes" xml:space="preserve">
          <source>UrlWindow::lastPage()</source>
          <target state="translated">UrlWindow::lastPage()</target>
        </trans-unit>
        <trans-unit id="920ce395356ed4a66196648b5dd3fdf76c6236e5" translate="yes" xml:space="preserve">
          <source>UrlWindow::make()</source>
          <target state="translated">UrlWindow::make()</target>
        </trans-unit>
        <trans-unit id="cd92a2af065149bb26b02b77ff1a08bf20165eae" translate="yes" xml:space="preserve">
          <source>Use the write pdo for query.</source>
          <target state="translated">使用写pdo进行查询。</target>
        </trans-unit>
        <trans-unit id="4cf361c53629d5b3a5f597c733c74c5fb7ac7600" translate="yes" xml:space="preserve">
          <source>Used to extract a sub-section of the data for faster iteration.</source>
          <target state="translated">用于提取数据的一个子段,以加快迭代速度。</target>
        </trans-unit>
        <trans-unit id="9f8a2389a20ca0752aa9e95093515517e90e194c" translate="yes" xml:space="preserve">
          <source>User</source>
          <target state="translated">User</target>
        </trans-unit>
        <trans-unit id="f6e6901a736331a2d03d0bae71f2aa30c7a437c7" translate="yes" xml:space="preserve">
          <source>User (Foundation\Auth)</source>
          <target state="translated">用户(基金会/授权)</target>
        </trans-unit>
        <trans-unit id="c5894e60fa9cbc30ade4b7159bc3b136927b3eb5" translate="yes" xml:space="preserve">
          <source>User Preferred Locales</source>
          <target state="translated">用户首选地域</target>
        </trans-unit>
        <trans-unit id="00694732aa07caf73ddfd791cbe4fa72d599807b" translate="yes" xml:space="preserve">
          <source>User exposed observable events.</source>
          <target state="translated">用户暴露的可观察事件。</target>
        </trans-unit>
        <trans-unit id="19932fcd6dd1e91b6f6ec9819c90fd63e29c3f4e" translate="yes" xml:space="preserve">
          <source>UserProvider</source>
          <target state="translated">UserProvider</target>
        </trans-unit>
        <trans-unit id="b1bacba86cebdb93ac86015e7becb4856b6787db" translate="yes" xml:space="preserve">
          <source>UserProvider (Contracts)</source>
          <target state="translated">UserProvider (合同)</target>
        </trans-unit>
        <trans-unit id="683fa399ea4e3bea06e0f6293d7beffac735ea8c" translate="yes" xml:space="preserve">
          <source>UserProvider::retrieveByCredentials()</source>
          <target state="translated">UserProvider::retrieveByCredentials()</target>
        </trans-unit>
        <trans-unit id="4d5d883b153ed3c4b328c3b600b9be62a29d66f5" translate="yes" xml:space="preserve">
          <source>UserProvider::retrieveById()</source>
          <target state="translated">UserProvider::retrieveById()</target>
        </trans-unit>
        <trans-unit id="f643afb3ac6a9e952d9007cdb9e0117047753cbf" translate="yes" xml:space="preserve">
          <source>UserProvider::retrieveByToken()</source>
          <target state="translated">UserProvider::retrieveByToken()</target>
        </trans-unit>
        <trans-unit id="2800a0be963e2c4eab0cca73e021a0fdc9bbca68" translate="yes" xml:space="preserve">
          <source>UserProvider::updateRememberToken()</source>
          <target state="translated">UserProvider::updateRememberToken()</target>
        </trans-unit>
        <trans-unit id="66b7b24c2b975df0a3277fc043c17a1d74c004c1" translate="yes" xml:space="preserve">
          <source>UserProvider::validateCredentials()</source>
          <target state="translated">UserProvider::validateCredentials()</target>
        </trans-unit>
        <trans-unit id="2e7db576eadb453c186f445a796970d3e0af302f" translate="yes" xml:space="preserve">
          <source>Username Customization</source>
          <target state="translated">自定义用户名</target>
        </trans-unit>
        <trans-unit id="2c1db596d2dfc88f58701d9fe9d57e9dcdcc4032" translate="yes" xml:space="preserve">
          <source>Using A Global &lt;code&gt;from&lt;/code&gt; Address</source>
          <target state="translated">使用全局 &lt;code&gt;from&lt;/code&gt; 地址</target>
        </trans-unit>
        <trans-unit id="216f35abbad1de6e68b33b2cdcc8837d76c280f4" translate="yes" xml:space="preserve">
          <source>Using An Example Application</source>
          <target state="translated">使用实例应用</target>
        </trans-unit>
        <trans-unit id="a9d983ec2ba25e12439b4bb33bb9cb4ff20cec94" translate="yes" xml:space="preserve">
          <source>Using Another Domain</source>
          <target state="translated">使用其他域名</target>
        </trans-unit>
        <trans-unit id="25112a4804e46ede87116524e3f34212886cddfb" translate="yes" xml:space="preserve">
          <source>Using Closures</source>
          <target state="translated">使用闭合</target>
        </trans-unit>
        <trans-unit id="25786ca0bd0d30fd8fa61a08279117e107aabca9" translate="yes" xml:space="preserve">
          <source>Using Components</source>
          <target state="translated">使用组件</target>
        </trans-unit>
        <trans-unit id="24932eb2b8d5b43b0680490a8468087bc33abbd5" translate="yes" xml:space="preserve">
          <source>Using Cursors</source>
          <target state="translated">使用光标</target>
        </trans-unit>
        <trans-unit id="fa10774d0e271ce1daa32ba7d67741dff0dd4dd8" translate="yes" xml:space="preserve">
          <source>Using Extensions</source>
          <target state="translated">使用扩展部分</target>
        </trans-unit>
        <trans-unit id="686c3d4bfe9f7aa5efa5e0095401e7adf93fea51" translate="yes" xml:space="preserve">
          <source>Using Factories</source>
          <target state="translated">使用工厂</target>
        </trans-unit>
        <trans-unit id="f2036f1ba7e70d3832aa3097ae413a7dc03e90ba" translate="yes" xml:space="preserve">
          <source>Using Forms</source>
          <target state="translated">使用表格</target>
        </trans-unit>
        <trans-unit id="9ee6d0556e77496962a7f68fc2938ee8a2b4b239" translate="yes" xml:space="preserve">
          <source>Using Model Factories</source>
          <target state="translated">使用模型因子</target>
        </trans-unit>
        <trans-unit id="9024e7794fa530c1d7fe273d02883b5baa90cf94" translate="yes" xml:space="preserve">
          <source>Using Multiple Database Connections</source>
          <target state="translated">使用多个数据库连接</target>
        </trans-unit>
        <trans-unit id="3705315f35938a6abf481834794518bd704bd8ea" translate="yes" xml:space="preserve">
          <source>Using Multiple Redis Connections</source>
          <target state="translated">使用多个Redis连接</target>
        </trans-unit>
        <trans-unit id="70946ec4b6a6083b237c2f5b126322c2957bd26c" translate="yes" xml:space="preserve">
          <source>Using Named Bindings</source>
          <target state="translated">使用命名绑定</target>
        </trans-unit>
        <trans-unit id="55cb1e4b38a0c574a47a6387cc78f55aea1bb2bc" translate="yes" xml:space="preserve">
          <source>Using OAuth2 with authorization codes is how most developers are familiar with OAuth2. When using authorization codes, a client application will redirect a user to your server where they will either approve or deny the request to issue an access token to the client.</source>
          <target state="translated">使用OAuth2与授权代码是大多数开发人员熟悉OAuth2的方式。当使用授权代码时,客户端应用程序将把用户重定向到你的服务器,在那里他们将批准或拒绝向客户端发出访问令牌的请求。</target>
        </trans-unit>
        <trans-unit id="96139a5c99e2a55f4e1d42578e8b77ebaa7c6ecd" translate="yes" xml:space="preserve">
          <source>Using Other Browsers</source>
          <target state="translated">使用其他浏览器</target>
        </trans-unit>
        <trans-unit id="547f3d366f6ba6dbebb442ff52e5209ac22bfe3d" translate="yes" xml:space="preserve">
          <source>Using React</source>
          <target state="translated">使用React</target>
        </trans-unit>
        <trans-unit id="1f29841b38fd243f89b80a9f29f63a4ed2ee9216" translate="yes" xml:space="preserve">
          <source>Using Rule Objects</source>
          <target state="translated">使用规则对象</target>
        </trans-unit>
        <trans-unit id="e2228f5e9598a5d7c4ea863d0e5acf274d8ad1a0" translate="yes" xml:space="preserve">
          <source>Using Short Keys</source>
          <target state="translated">使用短键</target>
        </trans-unit>
        <trans-unit id="c142408ff0ea25a774b51389fb5125e10d488f17" translate="yes" xml:space="preserve">
          <source>Using The &lt;code&gt;from&lt;/code&gt; Method</source>
          <target state="translated">使用 &lt;code&gt;from&lt;/code&gt; 方法</target>
        </trans-unit>
        <trans-unit id="e828f2da10d4699211aea8ec287ea22dc98d8e4a" translate="yes" xml:space="preserve">
          <source>Using The Encrypter</source>
          <target state="translated">使用加密器</target>
        </trans-unit>
        <trans-unit id="32e4c8f87a22afe4dc721aef0e4172613cbd432a" translate="yes" xml:space="preserve">
          <source>Using The Keyboard</source>
          <target state="translated">使用键盘</target>
        </trans-unit>
        <trans-unit id="6acef1ffb7973221335871f1416a7eb621f9bb2c" translate="yes" xml:space="preserve">
          <source>Using The Mouse</source>
          <target state="translated">使用鼠标</target>
        </trans-unit>
        <trans-unit id="2be585cd02cbac6e6aa7f3a5e76a42890611569a" translate="yes" xml:space="preserve">
          <source>Using The Notifiable Trait</source>
          <target state="translated">使用可通知特征</target>
        </trans-unit>
        <trans-unit id="bc0066137ddde9f57acea92265960870ddbc85d4" translate="yes" xml:space="preserve">
          <source>Using The Notification Facade</source>
          <target state="translated">使用Notification Facade</target>
        </trans-unit>
        <trans-unit id="2c4389b8f20380044dd4d1a71631f1bd707c2a9a" translate="yes" xml:space="preserve">
          <source>Using The Session</source>
          <target state="translated">使用会话</target>
        </trans-unit>
        <trans-unit id="4ddeb48ad6c4a3dbd99803569688896b32d1a88b" translate="yes" xml:space="preserve">
          <source>Using Translation Strings As Keys</source>
          <target state="translated">使用翻译字符串作为键</target>
        </trans-unit>
        <trans-unit id="dd22fed353795223638fa3d57ab7cca926b4236a" translate="yes" xml:space="preserve">
          <source>Using a few simple methods, you may access all of the user input from your &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; instance without worrying about which HTTP verb was used for the request. Regardless of the HTTP verb, the &lt;code&gt;input&lt;/code&gt; method may be used to retrieve user input:</source>
          <target state="translated">使用一些简单的方法，您可以从 &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; 实例访问所有用户输入，而不必担心该请求使用了哪个HTTP动词。不管HTTP动词如何，均可使用 &lt;code&gt;input&lt;/code&gt; 方法检索用户输入：</target>
        </trans-unit>
        <trans-unit id="406c1ebda5c578fc0028f36c7519ac73224c8118" translate="yes" xml:space="preserve">
          <source>Using either the &lt;code&gt;pingBefore($url)&lt;/code&gt; or &lt;code&gt;thenPing($url)&lt;/code&gt; feature requires the Guzzle HTTP library. You can add Guzzle to your project using the Composer package manager:</source>
          <target state="translated">使用 &lt;code&gt;pingBefore($url)&lt;/code&gt; 或 &lt;code&gt;thenPing($url)&lt;/code&gt; 功能需要Guzzle HTTP库。您可以使用Composer软件包管理器将Guzzle添加到您的项目中：</target>
        </trans-unit>
        <trans-unit id="0e30d58ca464af791be0f4dd1b5adbb1b8914db2" translate="yes" xml:space="preserve">
          <source>Using real-time facades, you may treat any class in your application as if it were a facade. To illustrate how this can be used, let's examine an alternative. For example, let's assume our &lt;code&gt;Podcast&lt;/code&gt; model has a &lt;code&gt;publish&lt;/code&gt; method. However, in order to publish the podcast, we need to inject a &lt;code&gt;Publisher&lt;/code&gt; instance:</source>
          <target state="translated">使用实时外观，您可以将应用程序中的任何类都视为外观。为了说明如何使用它，让我们研究一个替代方法。例如，假设我们的 &lt;code&gt;Podcast&lt;/code&gt; 模型具有 &lt;code&gt;publish&lt;/code&gt; 方法。但是，为了发布播客，我们需要注入一个 &lt;code&gt;Publisher&lt;/code&gt; 实例：</target>
        </trans-unit>
        <trans-unit id="1989c15c720e800a884e34521b523d9b38a95afa" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;Cache&lt;/code&gt; facade, you may access various cache stores via the &lt;code&gt;store&lt;/code&gt; method. The key passed to the &lt;code&gt;store&lt;/code&gt; method should correspond to one of the stores listed in the &lt;code&gt;stores&lt;/code&gt; configuration array in your &lt;code&gt;cache&lt;/code&gt; configuration file:</source>
          <target state="translated">使用 &lt;code&gt;Cache&lt;/code&gt; 外观，您可以通过 &lt;code&gt;store&lt;/code&gt; 方法访问各种缓存存储。传递给 &lt;code&gt;store&lt;/code&gt; 方法的密钥应与 &lt;code&gt;cache&lt;/code&gt; 配置文件中的 &lt;code&gt;stores&lt;/code&gt; 配置数组中列出的存储之一相对应：</target>
        </trans-unit>
        <trans-unit id="b7a1520a74cd435ee873b2f1ed48c86b342a6b5f" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;Route::fallback&lt;/code&gt; method, you may define a route that will be executed when no other route matches the incoming request. Typically, unhandled requests will automatically render a &quot;404&quot; page via your application's exception handler. However, since you may define the &lt;code&gt;fallback&lt;/code&gt; route within your &lt;code&gt;routes/web.php&lt;/code&gt; file, all middleware in the &lt;code&gt;web&lt;/code&gt; middleware group will apply to the route. Of course, you are free to add additional middleware to this route as needed:</source>
          <target state="translated">使用 &lt;code&gt;Route::fallback&lt;/code&gt; 方法，您可以定义当没有其他路由与传入请求匹配时将执行的路由。通常，未处理的请求将通过应用程序的异常处理程序自动呈现&amp;ldquo; 404&amp;rdquo;页面。但是，由于您可以在 &lt;code&gt;routes/web.php&lt;/code&gt; 文件中定义 &lt;code&gt;fallback&lt;/code&gt; 路由，因此 &lt;code&gt;web&lt;/code&gt; 中间件组中的所有中间件都将应用于该路由。当然，您可以根据需要随意向此路由添加其他中间件：</target>
        </trans-unit>
        <trans-unit id="65f521afa14d4f75e7a8432c2968b7b3abc4f8a2" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;before&lt;/code&gt; and &lt;code&gt;after&lt;/code&gt; methods on the &lt;code&gt;Queue&lt;/code&gt;&lt;a href=&quot;facades&quot;&gt;facade&lt;/a&gt;, you may specify callbacks to be executed before or after a queued job is processed. These callbacks are a great opportunity to perform additional logging or increment statistics for a dashboard. Typically, you should call these methods from a &lt;a href=&quot;providers&quot;&gt;service provider&lt;/a&gt;. For example, we may use the &lt;code&gt;AppServiceProvider&lt;/code&gt; that is included with Laravel:</source>
          <target state="translated">使用 &lt;code&gt;Queue&lt;/code&gt; &lt;a href=&quot;facades&quot;&gt;外观&lt;/a&gt;上的 &lt;code&gt;before&lt;/code&gt; 和 &lt;code&gt;after&lt;/code&gt; 方法，可以指定要在处理队列作业之前或之后执行的回调。这些回调是为仪表板执行附加日志记录或增量统计信息的绝佳机会。通常，您应该从&lt;a href=&quot;providers&quot;&gt;服务提供商处&lt;/a&gt;调用这些方法。例如，我们可以使用Laravel随附的 &lt;code&gt;AppServiceProvider&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="b783bcb9ebc1f36e40dc3bc7c1644f534e87b195" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;before&lt;/code&gt; and &lt;code&gt;after&lt;/code&gt; methods, you may specify code to be executed before and after the scheduled task is complete:</source>
          <target state="translated">使用 &lt;code&gt;before&lt;/code&gt; 和 &lt;code&gt;after&lt;/code&gt; 方法，可以指定计划任务完成之前和之后要执行的代码：</target>
        </trans-unit>
        <trans-unit id="678c4bdbc0980fe89557af54092436241e5d6049" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;emailOutputTo&lt;/code&gt; method, you may e-mail the output to an e-mail address of your choice. Before e-mailing the output of a task, you should configure Laravel's &lt;a href=&quot;mail&quot;&gt;e-mail services&lt;/a&gt;:</source>
          <target state="translated">使用 &lt;code&gt;emailOutputTo&lt;/code&gt; 方法，您可以将输出通过电子邮件发送到您选择的电子邮件地址。通过电子邮件发送任务输出之前，您应该配置Laravel的&lt;a href=&quot;mail&quot;&gt;电子邮件服务&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="805cc0a60fdd61923070deec51473812bc87daf6" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;first&lt;/code&gt; method, you may create the first view that exists in a given array of views. This is useful if your application or package allows views to be customized or overwritten:</source>
          <target state="translated">使用 &lt;code&gt;first&lt;/code&gt; 一种方法，您可以创建给定视图数组中存在的第一个视图。如果您的应用程序或程序包允许自定义或覆盖视图，这将非常有用：</target>
        </trans-unit>
        <trans-unit id="d89c7129bfcb2320bd6e3cf389f22cc353c3275e" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;looping&lt;/code&gt; method on the &lt;code&gt;Queue&lt;/code&gt;&lt;a href=&quot;facades&quot;&gt;facade&lt;/a&gt;, you may specify callbacks that execute before the worker attempts to fetch a job from a queue. For example, you might register a Closure to rollback any transactions that were left open by a previously failed job:</source>
          <target state="translated">使用&amp;ldquo; &lt;code&gt;Queue&lt;/code&gt; &lt;a href=&quot;facades&quot;&gt;外观&lt;/a&gt;上的 &lt;code&gt;looping&lt;/code&gt; 方法，您可以指定在工作程序尝试从队列中获取作业之前执行的回调。例如，您可以注册一个Closure，以回滚先前失败的作业保留的所有事务：</target>
        </trans-unit>
        <trans-unit id="c88eb0e8a9ad89538b979ac4c1c5c209c1188062" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;pingBefore&lt;/code&gt; and &lt;code&gt;thenPing&lt;/code&gt; methods, the scheduler can automatically ping a given URL before or after a task is complete. This method is useful for notifying an external service, such as &lt;a href=&quot;https://envoyer.io&quot;&gt;Laravel Envoyer&lt;/a&gt;, that your scheduled task is commencing or has finished execution:</source>
          <target state="translated">使用 &lt;code&gt;pingBefore&lt;/code&gt; 和 &lt;code&gt;thenPing&lt;/code&gt; 方法，调度程序可以在任务完成之前或之后自动ping给定URL。此方法对于通知外部服务（例如&lt;a href=&quot;https://envoyer.io&quot;&gt;Laravel Envoyer）很有用&lt;/a&gt;，您的计划任务正在开始或已完成执行：</target>
        </trans-unit>
        <trans-unit id="50064d12b24b039c91d1244e92a456d73c9241ec" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;psubscribe&lt;/code&gt; method, you may subscribe to a wildcard channel, which may be useful for catching all messages on all channels. The &lt;code&gt;$channel&lt;/code&gt; name will be passed as the second argument to the provided callback &lt;code&gt;Closure&lt;/code&gt;:</source>
          <target state="translated">使用 &lt;code&gt;psubscribe&lt;/code&gt; 方法，您可以订阅通配符通道，这对于捕获所有通道上的所有消息可能很有用。在 &lt;code&gt;$channel&lt;/code&gt; 名称将作为第二个参数提供的回调传递 &lt;code&gt;Closure&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="7cff7155c545f37c1ab3e589532cfcfadb593e62" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;queue&lt;/code&gt; method on the &lt;code&gt;Artisan&lt;/code&gt; facade, you may even queue Artisan commands so they are processed in the background by your &lt;a href=&quot;queues&quot;&gt;queue workers&lt;/a&gt;. Before using this method, make sure you have configured your queue and are running a queue listener:</source>
          <target state="translated">使用 &lt;code&gt;Artisan&lt;/code&gt; 外观上的 &lt;code&gt;queue&lt;/code&gt; 方法，您甚至可以对Artisan命令进行排队，以便&lt;a href=&quot;queues&quot;&gt;队列工作人员&lt;/a&gt;在后台对其进行处理。使用此方法之前，请确保已配置队列并正在运行队列侦听器：</target>
        </trans-unit>
        <trans-unit id="27a24dbd64e1ac755132eb44feff861706999322" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;timezone&lt;/code&gt; method, you may specify that a scheduled task's time should be interpreted within a given timezone:</source>
          <target state="translated">使用 &lt;code&gt;timezone&lt;/code&gt; 方法，您可以指定应该在给定的时区内解释计划任务的时间：</target>
        </trans-unit>
        <trans-unit id="e3ed6eadd37b5bc0955a052e8e60637bdc9c6048" translate="yes" xml:space="preserve">
          <source>Using the Memcached driver requires the &lt;a href=&quot;https://pecl.php.net/package/memcached&quot;&gt;Memcached PECL package&lt;/a&gt; to be installed. You may list all of your Memcached servers in the &lt;code&gt;config/cache.php&lt;/code&gt; configuration file:</source>
          <target state="translated">使用Memcached驱动程序需要安装&lt;a href=&quot;https://pecl.php.net/package/memcached&quot;&gt;Memcached PECL软件包&lt;/a&gt;。您可以在 &lt;code&gt;config/cache.php&lt;/code&gt; 配置文件中列出所有Memcached服务器：</target>
        </trans-unit>
        <trans-unit id="bcb12112c0f1179c9c17c9f8020135846a27f2d8" translate="yes" xml:space="preserve">
          <source>Utilizing A Local Scope</source>
          <target state="translated">利用本地范围</target>
        </trans-unit>
        <trans-unit id="976bf1c80ce87f4d5095dac7464aeabbcb5981e2" translate="yes" xml:space="preserve">
          <source>UuidInterface</source>
          <target state="translated">UuidInterface</target>
        </trans-unit>
        <trans-unit id="1033afd1ffe433be3334a586831b5b90e719c44a" translate="yes" xml:space="preserve">
          <source>VARCHAR equivalent column with a optional length.</source>
          <target state="translated">VARCHAR等价列,长度可选。</target>
        </trans-unit>
        <trans-unit id="b33892fbddeffc3368077b4904ad0b3d562a7312" translate="yes" xml:space="preserve">
          <source>VERSION</source>
          <target state="translated">VERSION</target>
        </trans-unit>
        <trans-unit id="7c4318788e30db66abddf721412f42bf7eac6d83" translate="yes" xml:space="preserve">
          <source>VISIBILITY_PRIVATE</source>
          <target state="translated">VISIBILITY_PRIVATE</target>
        </trans-unit>
        <trans-unit id="17fd123d652bb24f8e16616f88600967f74eeb90" translate="yes" xml:space="preserve">
          <source>VISIBILITY_PUBLIC</source>
          <target state="translated">VISIBILITY_PUBLIC</target>
        </trans-unit>
        <trans-unit id="1f185450ee544ae965bb9573dd704b8abfefef26" translate="yes" xml:space="preserve">
          <source>Valet 2.0 transitions Valet's underlying web server from Caddy to Nginx. Before upgrading to this version you should run the following commands to stop and uninstall the existing Caddy daemon:</source>
          <target state="translated">Valet 2.0将Valet的底层Web服务器从Caddy过渡到Nginx。在升级到这个版本之前,你应该运行以下命令来停止和卸载现有的Caddy守护进程。</target>
        </trans-unit>
        <trans-unit id="eb51daea5519daa59c110af3ff0fdce0f775a821" translate="yes" xml:space="preserve">
          <source>Valet Or Homestead</source>
          <target state="translated">代客或自留地</target>
        </trans-unit>
        <trans-unit id="26fa6221d420c739c957e39e36b8669ec9493b9a" translate="yes" xml:space="preserve">
          <source>Valet even includes a command to share your local sites with the world. No additional software installation is required once Valet is installed.</source>
          <target state="translated">Valet甚至包括一个命令,可以与世界分享您的本地站点。一旦安装了Valet,就不需要额外的软件安装。</target>
        </trans-unit>
        <trans-unit id="15bee6457bf5499b6941a3d7bc06352107aef258" translate="yes" xml:space="preserve">
          <source>Valet is a Laravel development environment for Mac minimalists. No Vagrant, no &lt;code&gt;/etc/hosts&lt;/code&gt; file. You can even share your sites publicly using local tunnels. &lt;em&gt;Yeah, we like it too.&lt;/em&gt;</source>
          <target state="translated">Valet是Mac极简主义者的Laravel开发环境。没有流浪者，没有 &lt;code&gt;/etc/hosts&lt;/code&gt; 文件。您甚至可以使用本地隧道公开共享站点。&lt;em&gt;是的，我们也喜欢。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="42c0b9ead0c11c596b4a96ec474adae3a3c540be" translate="yes" xml:space="preserve">
          <source>Valet only supports Mac, and requires you to install PHP and a database server directly onto your local machine. This is easily achieved by using &lt;a href=&quot;http://brew.sh/&quot;&gt;Homebrew&lt;/a&gt; with commands like &lt;code&gt;brew install php&lt;/code&gt; and &lt;code&gt;brew install mysql&lt;/code&gt;. Valet provides a blazing fast local development environment with minimal resource consumption, so it's great for developers who only require PHP / MySQL and do not need a fully virtualized development environment.</source>
          <target state="translated">代客泊车仅支持Mac，并且要求您将PHP和数据库服务器直接安装到本地计算机上。这可以通过将&lt;a href=&quot;http://brew.sh/&quot;&gt;Homebrew&lt;/a&gt;与 &lt;code&gt;brew install php&lt;/code&gt; 和 &lt;code&gt;brew install mysql&lt;/code&gt; 等命令结合使用来轻松实现。Valet提供了一种耗费最少资源的快速本地开发环境，因此对于只需要PHP / MySQL且不需要完全虚拟化的开发环境的开发人员来说，这是一个很好的选择。</target>
        </trans-unit>
        <trans-unit id="6dbfbc5d8337390ade7cc39d221ef41687ed6cab" translate="yes" xml:space="preserve">
          <source>Valet will automatically start its daemon each time your machine boots. There is no need to run &lt;code&gt;valet start&lt;/code&gt; or &lt;code&gt;valet install&lt;/code&gt; ever again once the initial Valet installation is complete.</source>
          <target state="translated">每当您的计算机启动时，代客将自动启动其守护进程。初始代客安装完成后，无需再次运行 &lt;code&gt;valet start&lt;/code&gt; 或 &lt;code&gt;valet install&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="57e96c6ba747a0c200bcccb1b419a4e886fdbece" translate="yes" xml:space="preserve">
          <source>Validate a given attribute against a rule.</source>
          <target state="translated">根据规则验证给定属性。</target>
        </trans-unit>
        <trans-unit id="bf05c9bb9c98f61e1d302485ed610ec9dbcd9444" translate="yes" xml:space="preserve">
          <source>Validate a given rule against a route and request.</source>
          <target state="translated">根据途径和请求验证给定的规则。</target>
        </trans-unit>
        <trans-unit id="d4b6027fe5ad73a4c290bbac11d3555f16f1dd96" translate="yes" xml:space="preserve">
          <source>Validate a password reset for the given credentials.</source>
          <target state="translated">验证给定凭证的密码重置。</target>
        </trans-unit>
        <trans-unit id="6a0c4f022d9c795fc1f2a61e99f93f887e2bccd4" translate="yes" xml:space="preserve">
          <source>Validate a user against the given credentials.</source>
          <target state="translated">根据给定的凭证验证用户。</target>
        </trans-unit>
        <trans-unit id="6bffe55f8f623a1224d882b06bf194cbc65a7546" translate="yes" xml:space="preserve">
          <source>Validate a user's credentials.</source>
          <target state="translated">验证用户的证书。</target>
        </trans-unit>
        <trans-unit id="88bf33d745c16d038c737ecf51b73fe1debde309" translate="yes" xml:space="preserve">
          <source>Validate an attribute is contained within a list of values.</source>
          <target state="translated">验证一个属性是否包含在一个值的列表中。</target>
        </trans-unit>
        <trans-unit id="ef0b710d34997d403a7854d04236bae2cc162119" translate="yes" xml:space="preserve">
          <source>Validate an attribute is not contained within a list of values.</source>
          <target state="translated">验证一个属性不包含在一个值的列表中。</target>
        </trans-unit>
        <trans-unit id="0bbbeba79817c9a5086a8f0076e7f31f685c95fe" translate="yes" xml:space="preserve">
          <source>Validate an attribute is unique among other values.</source>
          <target state="translated">验证一个属性在其他值中是唯一的。</target>
        </trans-unit>
        <trans-unit id="a3688c63a10d1a97aac77c7d7a69dc854a8bc94d" translate="yes" xml:space="preserve">
          <source>Validate an attribute using a custom rule object.</source>
          <target state="translated">使用自定义规则对象验证一个属性。</target>
        </trans-unit>
        <trans-unit id="f4742cb9bd40c1efc47dd7a72490be12a8a03997" translate="yes" xml:space="preserve">
          <source>Validate and return the decoded response JSON.</source>
          <target state="translated">验证并返回解码后的响应JSON。</target>
        </trans-unit>
        <trans-unit id="ff4e36dc555e99bd821546820b2d9af938a738d9" translate="yes" xml:space="preserve">
          <source>Validate that a required attribute exists.</source>
          <target state="translated">验证所需属性是否存在。</target>
        </trans-unit>
        <trans-unit id="f04da6cab263ff3bee6b08cace4a973dfc32e6c1" translate="yes" xml:space="preserve">
          <source>Validate that an attribute contains only alpha-numeric characters, dashes, and underscores.</source>
          <target state="translated">验证一个属性是否只包含字母数字字符、破折号和下划线。</target>
        </trans-unit>
        <trans-unit id="72d23bac999a5932fc758e21a78a5e2845978ce6" translate="yes" xml:space="preserve">
          <source>Validate that an attribute contains only alpha-numeric characters.</source>
          <target state="translated">验证一个属性是否只包含字母数字字符。</target>
        </trans-unit>
        <trans-unit id="e9fe65d0f707ad143edd22baff2365eff37d90d3" translate="yes" xml:space="preserve">
          <source>Validate that an attribute contains only alphabetic characters.</source>
          <target state="translated">验证一个属性是否只包含字母字符。</target>
        </trans-unit>
        <trans-unit id="343482576c652c62c3f758f2a8a84b67326b95c3" translate="yes" xml:space="preserve">
          <source>Validate that an attribute does not pass a regular expression check.</source>
          <target state="translated">验证一个属性没有通过正则表达式检查。</target>
        </trans-unit>
        <trans-unit id="528c4f3f775ec32d1a02f06f86ad0bedbe080102" translate="yes" xml:space="preserve">
          <source>Validate that an attribute exists even if not filled.</source>
          <target state="translated">即使没有填写,也要验证属性是否存在。</target>
        </trans-unit>
        <trans-unit id="59fc4f9414926244586f0a65035d9015f551562d" translate="yes" xml:space="preserve">
          <source>Validate that an attribute exists when all other attributes do not.</source>
          <target state="translated">当所有其他属性都不存在时,验证一个属性是否存在。</target>
        </trans-unit>
        <trans-unit id="7ae72d0c62fd66b764922dea73382cf9b3a9d7cc" translate="yes" xml:space="preserve">
          <source>Validate that an attribute exists when all other attributes exists.</source>
          <target state="translated">当其他属性都存在时,验证一个属性是否存在。</target>
        </trans-unit>
        <trans-unit id="a7d4b77cb04bb7993b55744bfbfb9c5a9121f630" translate="yes" xml:space="preserve">
          <source>Validate that an attribute exists when another attribute does not have a given value.</source>
          <target state="translated">当另一个属性没有给定值时,验证一个属性是否存在。</target>
        </trans-unit>
        <trans-unit id="e3d1586f41a80f5392410201a83d37a9cced3e5f" translate="yes" xml:space="preserve">
          <source>Validate that an attribute exists when another attribute does not.</source>
          <target state="translated">验证一个属性是否存在,而另一个属性不存在。</target>
        </trans-unit>
        <trans-unit id="6910ffad2ed3ac501d9ab9ba6c93157d14ad4f89" translate="yes" xml:space="preserve">
          <source>Validate that an attribute exists when another attribute has a given value.</source>
          <target state="translated">当另一个属性有给定值时,验证该属性是否存在。</target>
        </trans-unit>
        <trans-unit id="b18848b3e6ba7b069c97d7d249349ed0630d5cfa" translate="yes" xml:space="preserve">
          <source>Validate that an attribute exists when any other attribute exists.</source>
          <target state="translated">当任何其他属性存在时,验证一个属性是否存在。</target>
        </trans-unit>
        <trans-unit id="ef3dc2da8cb7d76ce0b640a4401ed6d3dc777054" translate="yes" xml:space="preserve">
          <source>Validate that an attribute has a given number of digits.</source>
          <target state="translated">验证一个属性是否有一个给定的数字。</target>
        </trans-unit>
        <trans-unit id="c25adb3ce0614ad4841b984aed069bc89daf9267" translate="yes" xml:space="preserve">
          <source>Validate that an attribute has a matching confirmation.</source>
          <target state="translated">验证一个属性是否有匹配的确认。</target>
        </trans-unit>
        <trans-unit id="78e4c4963c6610602a85d57f4f87027bdfa9f56d" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is a boolean.</source>
          <target state="translated">验证一个属性是布尔值。</target>
        </trans-unit>
        <trans-unit id="ef297e9dda78fca255cd04f6680efefd38de0e98" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is a string.</source>
          <target state="translated">验证一个属性是一个字符串。</target>
        </trans-unit>
        <trans-unit id="917ef08a453ae5c72f72992ab2adcf047729f5f2" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is a valid IP.</source>
          <target state="translated">验证一个属性是一个有效的IP。</target>
        </trans-unit>
        <trans-unit id="002b3a6923d6a6558705d6522dc586406140c54c" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is a valid IPv4.</source>
          <target state="translated">验证一个属性是一个有效的IPv4。</target>
        </trans-unit>
        <trans-unit id="81443e60479152cb9295ec1af294468b2ff78709" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is a valid IPv6.</source>
          <target state="translated">验证一个属性是有效的IPv6。</target>
        </trans-unit>
        <trans-unit id="8f537f1355b5fcd44027e9d4f1b106b8f1ea8172" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is a valid URL.</source>
          <target state="translated">验证一个属性是一个有效的URL。</target>
        </trans-unit>
        <trans-unit id="4cea5b6196d6fcd64b9c9c78609e744d9ef9686c" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is a valid date.</source>
          <target state="translated">验证一个属性是一个有效的日期。</target>
        </trans-unit>
        <trans-unit id="69de406e80d83d478d4ffc643d664935eb791d9e" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is a valid e-mail address.</source>
          <target state="translated">验证一个属性是一个有效的电子邮件地址。</target>
        </trans-unit>
        <trans-unit id="797b268481d712b46de1e235d3fc9a2de04fa53a" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is a valid timezone.</source>
          <target state="translated">验证一个属性是一个有效的时区。</target>
        </trans-unit>
        <trans-unit id="6408631ac8cfe3a1a98def64a84e4afc540e8bb6" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is an active URL.</source>
          <target state="translated">验证一个属性是一个活动的URL。</target>
        </trans-unit>
        <trans-unit id="ce8e0538d7ffc7023a95490c83b9fe970007ec61" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is an array.</source>
          <target state="translated">验证一个属性是一个数组。</target>
        </trans-unit>
        <trans-unit id="803717010ab309ed8d3cc551e176e4584906c4dd" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is an integer.</source>
          <target state="translated">验证一个属性是一个整数。</target>
        </trans-unit>
        <trans-unit id="2e0946185badb69b3adbf87c3fbf61a0abafaaba" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is between a given number of digits.</source>
          <target state="translated">验证一个属性是否在给定的数字之间。</target>
        </trans-unit>
        <trans-unit id="9be0fabb9bb58086041743aeaf2dedf2b9718d36" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is different from another attribute.</source>
          <target state="translated">验证一个属性与另一个属性是否不同。</target>
        </trans-unit>
        <trans-unit id="e663a2c5c85ab2612a48b0b4c0bf70e7d11619a4" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is equal to another date.</source>
          <target state="translated">验证一个属性是否等于另一个日期。</target>
        </trans-unit>
        <trans-unit id="3feaa754c65000f926bd8e4073b7024445588a3e" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is greater than another attribute.</source>
          <target state="translated">验证一个属性大于另一个属性。</target>
        </trans-unit>
        <trans-unit id="800ca0d2cf10da481e4165f16419d6ae6c5e5952" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is greater than or equal another attribute.</source>
          <target state="translated">验证一个属性大于或等于另一个属性。</target>
        </trans-unit>
        <trans-unit id="2742f5408d37a36fc6242e7d86d75c1e62792d4d" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is less than another attribute.</source>
          <target state="translated">验证一个属性小于另一个属性。</target>
        </trans-unit>
        <trans-unit id="caf6a3a079ce556bd86acaee877ac71b916a4715" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is less than or equal another attribute.</source>
          <target state="translated">验证一个属性小于或等于另一个属性。</target>
        </trans-unit>
        <trans-unit id="fb28b05b8f72a7b43101e797cc2643264b66ab9b" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is numeric.</source>
          <target state="translated">验证一个属性是否为数字。</target>
        </trans-unit>
        <trans-unit id="c8e5167bcea5859f503cb801c69f60f028a1aee9" translate="yes" xml:space="preserve">
          <source>Validate that an attribute matches a date format.</source>
          <target state="translated">验证一个属性是否符合日期格式。</target>
        </trans-unit>
        <trans-unit id="d76daf0f330118c6b2aa7427b4b1da2b505404eb" translate="yes" xml:space="preserve">
          <source>Validate that an attribute passes a regular expression check.</source>
          <target state="translated">验证一个属性是否通过了正则表达式检查。</target>
        </trans-unit>
        <trans-unit id="3a539f3f8586772f9fd67bffc1c95b62d8d3f105" translate="yes" xml:space="preserve">
          <source>Validate that an attribute was &quot;accepted&quot;.</source>
          <target state="translated">验证一个属性是否被 &quot;接受&quot;。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
