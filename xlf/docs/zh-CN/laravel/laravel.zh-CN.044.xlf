<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="laravel">
    <body>
      <group id="laravel">
        <trans-unit id="42c13b8f9ea74fceeebc09d4f7b094796a124ac3" translate="yes" xml:space="preserve">
          <source>Upgrading Socialite</source>
          <target state="translated">升级社会名流</target>
        </trans-unit>
        <trans-unit id="e223cb7cddb4169a6690d71ba96c2ab2263286d1" translate="yes" xml:space="preserve">
          <source>Upgrading Telescope</source>
          <target state="translated">升级望远镜</target>
        </trans-unit>
        <trans-unit id="d505533398635ad971e0ccd38b7c3af38267f58e" translate="yes" xml:space="preserve">
          <source>Upgrading To 5.7.0 From 5.6</source>
          <target state="translated">从5.6升级到5.7.0。</target>
        </trans-unit>
        <trans-unit id="dff068beb807d9b771c5e73de83346dc5fab73af" translate="yes" xml:space="preserve">
          <source>Upgrading To 8.0 From 7.x</source>
          <target state="translated">从7.x升级到8.0。</target>
        </trans-unit>
        <trans-unit id="605ab121b0528444f54d7535cf18ad408ae5b7dc" translate="yes" xml:space="preserve">
          <source>Upgrading To Valet 2.0</source>
          <target state="translated">升级到代客泊2.0</target>
        </trans-unit>
        <trans-unit id="023fd83a0de52728b167fe09fbf61b2660601158" translate="yes" xml:space="preserve">
          <source>UploadedFile</source>
          <target state="translated">UploadedFile</target>
        </trans-unit>
        <trans-unit id="0fae64d1bc9acb27d0e1c2b4e9cab51326ba47b0" translate="yes" xml:space="preserve">
          <source>UploadedFile (Http)</source>
          <target state="translated">上传的文件(Http)</target>
        </trans-unit>
        <trans-unit id="891a51edb29c30d3cf856e8dbf435840a6e1615e" translate="yes" xml:space="preserve">
          <source>UploadedFile::clientExtension()</source>
          <target state="translated">UploadedFile::clientExtension()</target>
        </trans-unit>
        <trans-unit id="929cdbfae255d063719196518f122ff600026a9a" translate="yes" xml:space="preserve">
          <source>UploadedFile::createFromBase()</source>
          <target state="translated">UploadedFile::createFromBase()</target>
        </trans-unit>
        <trans-unit id="8ca9b5c61903439dbe6b306208888d59eae2c415" translate="yes" xml:space="preserve">
          <source>UploadedFile::fake()</source>
          <target state="translated">UploadedFile::fake()</target>
        </trans-unit>
        <trans-unit id="bec6b04348c3d4d79d97bb39bf4b76eea2cc6b5c" translate="yes" xml:space="preserve">
          <source>UploadedFile::get()</source>
          <target state="translated">UploadedFile::get()</target>
        </trans-unit>
        <trans-unit id="eb17a0f2baf59c892614bb1db35c4e10777b559b" translate="yes" xml:space="preserve">
          <source>UploadedFile::parseOptions()</source>
          <target state="translated">UploadedFile::parseOptions()</target>
        </trans-unit>
        <trans-unit id="bee0d4b4858e108447d498caaf1760a65e535671" translate="yes" xml:space="preserve">
          <source>UploadedFile::store()</source>
          <target state="translated">UploadedFile::store()</target>
        </trans-unit>
        <trans-unit id="80446ee3e5915a0c6c137ec25ced82fcaead3852" translate="yes" xml:space="preserve">
          <source>UploadedFile::storeAs()</source>
          <target state="translated">UploadedFile::storeAs()</target>
        </trans-unit>
        <trans-unit id="1efb800abe70f17967219892620a445c0ebc9d89" translate="yes" xml:space="preserve">
          <source>UploadedFile::storePublicly()</source>
          <target state="translated">UploadedFile::storePublicly()</target>
        </trans-unit>
        <trans-unit id="5754c39d9e8ad5919ce457740d4cbe045b8c566a" translate="yes" xml:space="preserve">
          <source>UploadedFile::storePubliclyAs()</source>
          <target state="translated">UploadedFile::storePubliclyAs()</target>
        </trans-unit>
        <trans-unit id="d722f8772a10eda25d2382dd9f73e58571c41a50" translate="yes" xml:space="preserve">
          <source>UriInterface</source>
          <target state="translated">UriInterface</target>
        </trans-unit>
        <trans-unit id="cedd7ec3ef52de0d1eed81f7d9f6353902052acf" translate="yes" xml:space="preserve">
          <source>UriInterface
    effectiveUri()</source>
          <target state="translated">UriInterface effectiveUri()</target>
        </trans-unit>
        <trans-unit id="e2aa20e71f24069d864f6960094daa88183d169b" translate="yes" xml:space="preserve">
          <source>UriValidator</source>
          <target state="translated">UriValidator</target>
        </trans-unit>
        <trans-unit id="b9ef8e5c22c477698492f2eb201d546b80e4d992" translate="yes" xml:space="preserve">
          <source>UriValidator (Routing\Matching)</source>
          <target state="translated">UriValidator (Routing/Matching)</target>
        </trans-unit>
        <trans-unit id="a1ffb6435d5b897a1a9505be58529ca105e7c2b1" translate="yes" xml:space="preserve">
          <source>UriValidator::matches()</source>
          <target state="translated">UriValidator::matches()</target>
        </trans-unit>
        <trans-unit id="9eff5906156c95b179bf55d811165d62dbf6f86e" translate="yes" xml:space="preserve">
          <source>UrlGenerationException</source>
          <target state="translated">UrlGenerationException</target>
        </trans-unit>
        <trans-unit id="885ede85647c1a7b223cc3e8e0925b2257f4658d" translate="yes" xml:space="preserve">
          <source>UrlGenerationException (Routing\Exceptions)</source>
          <target state="translated">UrlGenerationException (Routing\Exceptions)</target>
        </trans-unit>
        <trans-unit id="a75bc3a2dc94e7d269950325bc494454f3d84051" translate="yes" xml:space="preserve">
          <source>UrlGenerationException::forMissingParameters()</source>
          <target state="translated">UrlGenerationException::forMissingParameters()</target>
        </trans-unit>
        <trans-unit id="0769e65016ed0c832ab200b2aa5f1bd9d7c92758" translate="yes" xml:space="preserve">
          <source>UrlGenerator</source>
          <target state="translated">UrlGenerator</target>
        </trans-unit>
        <trans-unit id="b1e2ed20c7649a6018d6ee4f1ad2e204e0db0e05" translate="yes" xml:space="preserve">
          <source>UrlGenerator (Contracts)</source>
          <target state="translated">UrlGenerator (合同)</target>
        </trans-unit>
        <trans-unit id="43458e6fc9284c0a508e0b54a744075649ddcd6e" translate="yes" xml:space="preserve">
          <source>UrlGenerator (Routing)</source>
          <target state="translated">UrlGenerator (Routing)</target>
        </trans-unit>
        <trans-unit id="962077cfbfeafaa6253c938f85a8dba9cafae24b" translate="yes" xml:space="preserve">
          <source>UrlGenerator::__construct()</source>
          <target state="translated">UrlGenerator::__construct()</target>
        </trans-unit>
        <trans-unit id="da33d4331a00ff0816ebdb06fb9c8eaf2c90748f" translate="yes" xml:space="preserve">
          <source>UrlGenerator::action()</source>
          <target state="translated">UrlGenerator::action()</target>
        </trans-unit>
        <trans-unit id="a83c1ab93b408a5da87b592ab85b7090eb1321e6" translate="yes" xml:space="preserve">
          <source>UrlGenerator::asset()</source>
          <target state="translated">UrlGenerator::asset()</target>
        </trans-unit>
        <trans-unit id="6f88971227ce1bd491fca24e780bc700e853af1f" translate="yes" xml:space="preserve">
          <source>UrlGenerator::assetFrom()</source>
          <target state="translated">UrlGenerator::assetFrom()</target>
        </trans-unit>
        <trans-unit id="32152f3f1615212665fc00469e3fadf773b1de37" translate="yes" xml:space="preserve">
          <source>UrlGenerator::current()</source>
          <target state="translated">UrlGenerator::current()</target>
        </trans-unit>
        <trans-unit id="2facd0534bc9480e4c20c0a251d1e9a3766da62f" translate="yes" xml:space="preserve">
          <source>UrlGenerator::defaults()</source>
          <target state="translated">UrlGenerator::defaults()</target>
        </trans-unit>
        <trans-unit id="644fec71bb011a37dd3a037828713c3102f8a1ae" translate="yes" xml:space="preserve">
          <source>UrlGenerator::extractQueryString()</source>
          <target state="translated">UrlGenerator::extractQueryString()</target>
        </trans-unit>
        <trans-unit id="930dbb951463ea5132f8f86c24825d1df188f732" translate="yes" xml:space="preserve">
          <source>UrlGenerator::forceRootUrl()</source>
          <target state="translated">UrlGenerator::forceRootUrl()</target>
        </trans-unit>
        <trans-unit id="44324252ab95b010591205848107f64eae2ece3e" translate="yes" xml:space="preserve">
          <source>UrlGenerator::forceScheme()</source>
          <target state="translated">UrlGenerator::forceScheme()</target>
        </trans-unit>
        <trans-unit id="e5ac6e06a412bcd30f0eb5b5e4e1c8981e87b69c" translate="yes" xml:space="preserve">
          <source>UrlGenerator::format()</source>
          <target state="translated">UrlGenerator::format()</target>
        </trans-unit>
        <trans-unit id="471c2173777b81f2c0a978ff1916746caa917310" translate="yes" xml:space="preserve">
          <source>UrlGenerator::formatAction()</source>
          <target state="translated">UrlGenerator::formatAction()</target>
        </trans-unit>
        <trans-unit id="f63022f163ec7f591a9530793b4bf3e803fe2b74" translate="yes" xml:space="preserve">
          <source>UrlGenerator::formatHostUsing()</source>
          <target state="translated">UrlGenerator::formatHostUsing()</target>
        </trans-unit>
        <trans-unit id="ba9558b4fc925020bac08b64e6aa98800bf077da" translate="yes" xml:space="preserve">
          <source>UrlGenerator::formatParameters()</source>
          <target state="translated">UrlGenerator::formatParameters()</target>
        </trans-unit>
        <trans-unit id="77bc4e8f54322b0ed0c88425db13e228caed07a4" translate="yes" xml:space="preserve">
          <source>UrlGenerator::formatPathUsing()</source>
          <target state="translated">UrlGenerator::formatPathUsing()</target>
        </trans-unit>
        <trans-unit id="d3c233468f2a2a061916a36043db0a969b73ccba" translate="yes" xml:space="preserve">
          <source>UrlGenerator::formatRoot()</source>
          <target state="translated">UrlGenerator::formatRoot()</target>
        </trans-unit>
        <trans-unit id="f921db8fec662e2d3a34f7f81cea8393f02001f4" translate="yes" xml:space="preserve">
          <source>UrlGenerator::formatScheme()</source>
          <target state="translated">UrlGenerator::formatScheme()</target>
        </trans-unit>
        <trans-unit id="18904ae888c8163de2140cf5e9c9fcc8ac854381" translate="yes" xml:space="preserve">
          <source>UrlGenerator::full()</source>
          <target state="translated">UrlGenerator::full()</target>
        </trans-unit>
        <trans-unit id="4843c6f1e994ef77abaf5a340e9d49fe158eaf98" translate="yes" xml:space="preserve">
          <source>UrlGenerator::getDefaultParameters()</source>
          <target state="translated">UrlGenerator::getDefaultParameters()</target>
        </trans-unit>
        <trans-unit id="e69d68e8e68722142ae11988c2b9bccc9d4224bc" translate="yes" xml:space="preserve">
          <source>UrlGenerator::getPreviousUrlFromSession()</source>
          <target state="translated">UrlGenerator::getPreviousUrlFromSession()</target>
        </trans-unit>
        <trans-unit id="47adfe9ee6d750475c97577a69ed7056997ab075" translate="yes" xml:space="preserve">
          <source>UrlGenerator::getRequest()</source>
          <target state="translated">UrlGenerator::getRequest()</target>
        </trans-unit>
        <trans-unit id="9ceb4fe2dd747f996e60a5cf9604850dba51dbec" translate="yes" xml:space="preserve">
          <source>UrlGenerator::getSession()</source>
          <target state="translated">UrlGenerator::getSession()</target>
        </trans-unit>
        <trans-unit id="e8418f58d10ca59ef65eb911712c3acf8c077408" translate="yes" xml:space="preserve">
          <source>UrlGenerator::hasCorrectSignature()</source>
          <target state="translated">UrlGenerator::hasCorrectSignature()</target>
        </trans-unit>
        <trans-unit id="277e48c12c3941ad209732eea7965055f06dd152" translate="yes" xml:space="preserve">
          <source>UrlGenerator::hasValidRelativeSignature()</source>
          <target state="translated">UrlGenerator::hasValidRelativeSignature()</target>
        </trans-unit>
        <trans-unit id="c66d6d241e6efe575ef5c97b8f1015a20d6eba84" translate="yes" xml:space="preserve">
          <source>UrlGenerator::hasValidSignature()</source>
          <target state="translated">UrlGenerator::hasValidSignature()</target>
        </trans-unit>
        <trans-unit id="ca1cb3b12049ce569522f22cf2b619ab2168ffef" translate="yes" xml:space="preserve">
          <source>UrlGenerator::isValidUrl()</source>
          <target state="translated">UrlGenerator::isValidUrl()</target>
        </trans-unit>
        <trans-unit id="d2d25b87c42581a75d02cef68ebc5bb978512ff8" translate="yes" xml:space="preserve">
          <source>UrlGenerator::pathFormatter()</source>
          <target state="translated">UrlGenerator::pathFormatter()</target>
        </trans-unit>
        <trans-unit id="68667b7bb1b86d45ff800caabb6ca6b0e3a75ad6" translate="yes" xml:space="preserve">
          <source>UrlGenerator::previous()</source>
          <target state="translated">UrlGenerator::previous()</target>
        </trans-unit>
        <trans-unit id="085f58c8ee1be5809a1eb56bb0def52fe0899402" translate="yes" xml:space="preserve">
          <source>UrlGenerator::removeIndex()</source>
          <target state="translated">UrlGenerator::removeIndex()</target>
        </trans-unit>
        <trans-unit id="796c12bf7e518d5b6caa6e3b04876f9d41e2e1b6" translate="yes" xml:space="preserve">
          <source>UrlGenerator::route()</source>
          <target state="translated">UrlGenerator::route()</target>
        </trans-unit>
        <trans-unit id="3f4b888a055754d4bd2a2e496a6472a71a5f1232" translate="yes" xml:space="preserve">
          <source>UrlGenerator::routeUrl()</source>
          <target state="translated">UrlGenerator::routeUrl()</target>
        </trans-unit>
        <trans-unit id="546e38149374e7d15613b598c3cda70058e0379d" translate="yes" xml:space="preserve">
          <source>UrlGenerator::secure()</source>
          <target state="translated">UrlGenerator::secure()</target>
        </trans-unit>
        <trans-unit id="9e06c873e1ff0be7027c084e83ca847125148f36" translate="yes" xml:space="preserve">
          <source>UrlGenerator::secureAsset()</source>
          <target state="translated">UrlGenerator::secureAsset()</target>
        </trans-unit>
        <trans-unit id="0049d696c4c49ab56330e02b64abf7c5782c2f21" translate="yes" xml:space="preserve">
          <source>UrlGenerator::setKeyResolver()</source>
          <target state="translated">UrlGenerator::setKeyResolver()</target>
        </trans-unit>
        <trans-unit id="7bb84eafb7b49f8faf7aad9b8973b34509555187" translate="yes" xml:space="preserve">
          <source>UrlGenerator::setRequest()</source>
          <target state="translated">UrlGenerator::setRequest()</target>
        </trans-unit>
        <trans-unit id="789e4a0b11bf0edae16be4459b76d327a98e3f44" translate="yes" xml:space="preserve">
          <source>UrlGenerator::setRootControllerNamespace()</source>
          <target state="translated">UrlGenerator::setRootControllerNamespace()</target>
        </trans-unit>
        <trans-unit id="fb3f373477aa5a6ec53629555cabdc2308a9cd60" translate="yes" xml:space="preserve">
          <source>UrlGenerator::setRoutes()</source>
          <target state="translated">UrlGenerator::setRoutes()</target>
        </trans-unit>
        <trans-unit id="4ff19c4e0f57466ea6fc6dfa735551d5e85bac88" translate="yes" xml:space="preserve">
          <source>UrlGenerator::setSessionResolver()</source>
          <target state="translated">UrlGenerator::setSessionResolver()</target>
        </trans-unit>
        <trans-unit id="5cf090cc105e37125ff3d98bc5204a85b039548a" translate="yes" xml:space="preserve">
          <source>UrlGenerator::signatureHasNotExpired()</source>
          <target state="translated">UrlGenerator::signatureHasNotExpired()</target>
        </trans-unit>
        <trans-unit id="7eaed9594e126480c5f9c637fb9b88556faea2da" translate="yes" xml:space="preserve">
          <source>UrlGenerator::signedRoute()</source>
          <target state="translated">UrlGenerator::signedRoute()</target>
        </trans-unit>
        <trans-unit id="508e07bbc212c1d6693da067f10d6a3d810056da" translate="yes" xml:space="preserve">
          <source>UrlGenerator::temporarySignedRoute()</source>
          <target state="translated">UrlGenerator::temporarySignedRoute()</target>
        </trans-unit>
        <trans-unit id="e75eb34daec7052fa4f1c5ef75a0e419594ddb18" translate="yes" xml:space="preserve">
          <source>UrlGenerator::to()</source>
          <target state="translated">UrlGenerator::to()</target>
        </trans-unit>
        <trans-unit id="4d80db61d2d377e640cbb363d032fd4a26ee4e0c" translate="yes" xml:space="preserve">
          <source>UrlGenerator::toRoute()</source>
          <target state="translated">UrlGenerator::toRoute()</target>
        </trans-unit>
        <trans-unit id="af56f7f12d9fd2230182fbdd0a6bb833213966ca" translate="yes" xml:space="preserve">
          <source>UrlRoutable</source>
          <target state="translated">UrlRoutable</target>
        </trans-unit>
        <trans-unit id="88831b58f6d1222d31691ec4661fb51691d9589f" translate="yes" xml:space="preserve">
          <source>UrlRoutable (Contracts)</source>
          <target state="translated">UrlRoutable (合同)</target>
        </trans-unit>
        <trans-unit id="26867eb6098ebe702718474a39808543575a18cf" translate="yes" xml:space="preserve">
          <source>UrlRoutable::getRouteKey()</source>
          <target state="translated">UrlRoutable::getRouteKey()</target>
        </trans-unit>
        <trans-unit id="531de13b5fac1fca950c86df5cd3cd3c56af20ab" translate="yes" xml:space="preserve">
          <source>UrlRoutable::getRouteKeyName()</source>
          <target state="translated">UrlRoutable::getRouteKeyName()</target>
        </trans-unit>
        <trans-unit id="31cb23620e46182ad5a67b605614e703296d3372" translate="yes" xml:space="preserve">
          <source>UrlRoutable::resolveChildRouteBinding()</source>
          <target state="translated">UrlRoutable::resolveChildRouteBinding()</target>
        </trans-unit>
        <trans-unit id="f64287f41a85f084f8752d60b768a92aa5c5dea2" translate="yes" xml:space="preserve">
          <source>UrlRoutable::resolveRouteBinding()</source>
          <target state="translated">UrlRoutable::resolveRouteBinding()</target>
        </trans-unit>
        <trans-unit id="82d9aa8714d152b96d98145954211474a4a200b4" translate="yes" xml:space="preserve">
          <source>UrlWindow</source>
          <target state="translated">UrlWindow</target>
        </trans-unit>
        <trans-unit id="4ac09d342c760e171ef290e74de15fb664e0758f" translate="yes" xml:space="preserve">
          <source>UrlWindow (Pagination)</source>
          <target state="translated">UrlWindow (Pagination)</target>
        </trans-unit>
        <trans-unit id="254ee6bbdd5efd79d6d42ad23b9937c22c401a12" translate="yes" xml:space="preserve">
          <source>UrlWindow::__construct()</source>
          <target state="translated">UrlWindow::__construct()</target>
        </trans-unit>
        <trans-unit id="a8710b73bc828e6c8f0822bf04003e610c0db5cb" translate="yes" xml:space="preserve">
          <source>UrlWindow::currentPage()</source>
          <target state="translated">UrlWindow::currentPage()</target>
        </trans-unit>
        <trans-unit id="364f275d33ecdb278caba77beaf055db29737f00" translate="yes" xml:space="preserve">
          <source>UrlWindow::get()</source>
          <target state="translated">UrlWindow::get()</target>
        </trans-unit>
        <trans-unit id="710443fde65d94cfc63eedfc96ba98f04acb5c30" translate="yes" xml:space="preserve">
          <source>UrlWindow::getAdjacentUrlRange()</source>
          <target state="translated">UrlWindow::getAdjacentUrlRange()</target>
        </trans-unit>
        <trans-unit id="f3e3248b32fec4e45b1a7bc4a3bee3e3f2318828" translate="yes" xml:space="preserve">
          <source>UrlWindow::getFinish()</source>
          <target state="translated">UrlWindow::getFinish()</target>
        </trans-unit>
        <trans-unit id="c122b588961947ddb91ff54012612f8df543dd7d" translate="yes" xml:space="preserve">
          <source>UrlWindow::getFullSlider()</source>
          <target state="translated">UrlWindow::getFullSlider()</target>
        </trans-unit>
        <trans-unit id="a2a4408d81c496eef32b1bd4f094b611b7188eb9" translate="yes" xml:space="preserve">
          <source>UrlWindow::getSliderTooCloseToBeginning()</source>
          <target state="translated">UrlWindow::getSliderTooCloseToBeginning()</target>
        </trans-unit>
        <trans-unit id="1d6e0206f309c298f5ae5fcd088665a799719b54" translate="yes" xml:space="preserve">
          <source>UrlWindow::getSliderTooCloseToEnding()</source>
          <target state="translated">UrlWindow::getSliderTooCloseToEnding()</target>
        </trans-unit>
        <trans-unit id="4f04e8bc590290708741548077563e5ad0f2e67b" translate="yes" xml:space="preserve">
          <source>UrlWindow::getSmallSlider()</source>
          <target state="translated">UrlWindow::getSmallSlider()</target>
        </trans-unit>
        <trans-unit id="7d90fac9aa941967c93f97cec7322364ee9590ef" translate="yes" xml:space="preserve">
          <source>UrlWindow::getStart()</source>
          <target state="translated">UrlWindow::getStart()</target>
        </trans-unit>
        <trans-unit id="b131c59f5e016f4708ef17de7064718df2080c67" translate="yes" xml:space="preserve">
          <source>UrlWindow::getUrlSlider()</source>
          <target state="translated">UrlWindow::getUrlSlider()</target>
        </trans-unit>
        <trans-unit id="1f9db9230bc50f04616b2fbcf0215e94d105cadc" translate="yes" xml:space="preserve">
          <source>UrlWindow::hasPages()</source>
          <target state="translated">UrlWindow::hasPages()</target>
        </trans-unit>
        <trans-unit id="09c4f7c2a4e5c08140573da3f0f13d9b494e5e76" translate="yes" xml:space="preserve">
          <source>UrlWindow::lastPage()</source>
          <target state="translated">UrlWindow::lastPage()</target>
        </trans-unit>
        <trans-unit id="920ce395356ed4a66196648b5dd3fdf76c6236e5" translate="yes" xml:space="preserve">
          <source>UrlWindow::make()</source>
          <target state="translated">UrlWindow::make()</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Usage</target>
        </trans-unit>
        <trans-unit id="1eacdee234ef1b0e0b0211b90a5e5ca754328790" translate="yes" xml:space="preserve">
          <source>Use the default date class when generating dates.</source>
          <target state="translated">生成日期时使用默认的日期类。</target>
        </trans-unit>
        <trans-unit id="0f3d075a25e14a0e6d5ebf97174a7206edf23a62" translate="yes" xml:space="preserve">
          <source>Use the given Carbon factory when generating dates.</source>
          <target state="translated">当生成日期时,使用给定的碳工厂。</target>
        </trans-unit>
        <trans-unit id="d083a4731a08d850d3ebe74d8451ce258de7317b" translate="yes" xml:space="preserve">
          <source>Use the given date type (class) when generating dates.</source>
          <target state="translated">生成日期时使用给定的日期类型(类)。</target>
        </trans-unit>
        <trans-unit id="ac8ad0b96f0102b8578078d30950925cf13fbfe0" translate="yes" xml:space="preserve">
          <source>Use the given handler when generating dates (class name, callable, or factory).</source>
          <target state="translated">当生成日期(类名、可调用或工厂)时使用给定的处理程序。</target>
        </trans-unit>
        <trans-unit id="cd92a2af065149bb26b02b77ff1a08bf20165eae" translate="yes" xml:space="preserve">
          <source>Use the write pdo for query.</source>
          <target state="translated">使用写pdo进行查询。</target>
        </trans-unit>
        <trans-unit id="e4f4a0ed9e21405e675e8b19940bbbf737969532" translate="yes" xml:space="preserve">
          <source>UsePusherChannelConventions</source>
          <target state="translated">UsePusherChannelConventions</target>
        </trans-unit>
        <trans-unit id="f22835b3432dfa66e1e5dc1fffe499d98f38c199" translate="yes" xml:space="preserve">
          <source>UsePusherChannelConventions (Broadcasting\Broadcasters)</source>
          <target state="translated">UsePusherChannelConventions (Broadcasting/Broadcasters)</target>
        </trans-unit>
        <trans-unit id="3574d67353af85f96380c9eddb23fda7cae133eb" translate="yes" xml:space="preserve">
          <source>UsePusherChannelConventions::isGuardedChannel()</source>
          <target state="translated">UsePusherChannelConventions::isGuardedChannel()</target>
        </trans-unit>
        <trans-unit id="46c184f534d49637912f77649a76dc5e9e61ad17" translate="yes" xml:space="preserve">
          <source>UsePusherChannelConventions::normalizeChannelName()</source>
          <target state="translated">UsePusherChannelConventions::normalizeChannelName()</target>
        </trans-unit>
        <trans-unit id="4cf361c53629d5b3a5f597c733c74c5fb7ac7600" translate="yes" xml:space="preserve">
          <source>Used to extract a sub-section of the data for faster iteration.</source>
          <target state="translated">用于提取数据的一个子段,以加快迭代速度。</target>
        </trans-unit>
        <trans-unit id="9f8a2389a20ca0752aa9e95093515517e90e194c" translate="yes" xml:space="preserve">
          <source>User</source>
          <target state="translated">User</target>
        </trans-unit>
        <trans-unit id="f6e6901a736331a2d03d0bae71f2aa30c7a437c7" translate="yes" xml:space="preserve">
          <source>User (Foundation\Auth)</source>
          <target state="translated">用户(基金会/授权)</target>
        </trans-unit>
        <trans-unit id="3dead4fbc02efb51af5fbf25b8189d6cb3e4cc57" translate="yes" xml:space="preserve">
          <source>User Customizations</source>
          <target state="translated">用户自定义</target>
        </trans-unit>
        <trans-unit id="52f4c119180f7fb6d994831c0aa80b1b6a041349" translate="yes" xml:space="preserve">
          <source>User Identification</source>
          <target state="translated">用户识别</target>
        </trans-unit>
        <trans-unit id="c5894e60fa9cbc30ade4b7159bc3b136927b3eb5" translate="yes" xml:space="preserve">
          <source>User Preferred Locales</source>
          <target state="translated">用户首选地域</target>
        </trans-unit>
        <trans-unit id="00694732aa07caf73ddfd791cbe4fa72d599807b" translate="yes" xml:space="preserve">
          <source>User exposed observable events.</source>
          <target state="translated">用户暴露的可观察事件。</target>
        </trans-unit>
        <trans-unit id="0ac94d25b6b0c34e1f5760af0a042b7043e679c5" translate="yes" xml:space="preserve">
          <source>User log for Nginx errors.</source>
          <target state="translated">Nginx错误的用户日志。</target>
        </trans-unit>
        <trans-unit id="6ce36742b51d45166a8f8937eca8a3d174310237" translate="yes" xml:space="preserve">
          <source>User log for PHP errors.</source>
          <target state="translated">PHP错误的用户日志。</target>
        </trans-unit>
        <trans-unit id="19932fcd6dd1e91b6f6ec9819c90fd63e29c3f4e" translate="yes" xml:space="preserve">
          <source>UserProvider</source>
          <target state="translated">UserProvider</target>
        </trans-unit>
        <trans-unit id="b1bacba86cebdb93ac86015e7becb4856b6787db" translate="yes" xml:space="preserve">
          <source>UserProvider (Contracts)</source>
          <target state="translated">UserProvider (合同)</target>
        </trans-unit>
        <trans-unit id="683fa399ea4e3bea06e0f6293d7beffac735ea8c" translate="yes" xml:space="preserve">
          <source>UserProvider::retrieveByCredentials()</source>
          <target state="translated">UserProvider::retrieveByCredentials()</target>
        </trans-unit>
        <trans-unit id="4d5d883b153ed3c4b328c3b600b9be62a29d66f5" translate="yes" xml:space="preserve">
          <source>UserProvider::retrieveById()</source>
          <target state="translated">UserProvider::retrieveById()</target>
        </trans-unit>
        <trans-unit id="f643afb3ac6a9e952d9007cdb9e0117047753cbf" translate="yes" xml:space="preserve">
          <source>UserProvider::retrieveByToken()</source>
          <target state="translated">UserProvider::retrieveByToken()</target>
        </trans-unit>
        <trans-unit id="2800a0be963e2c4eab0cca73e021a0fdc9bbca68" translate="yes" xml:space="preserve">
          <source>UserProvider::updateRememberToken()</source>
          <target state="translated">UserProvider::updateRememberToken()</target>
        </trans-unit>
        <trans-unit id="66b7b24c2b975df0a3277fc043c17a1d74c004c1" translate="yes" xml:space="preserve">
          <source>UserProvider::validateCredentials()</source>
          <target state="translated">UserProvider::validateCredentials()</target>
        </trans-unit>
        <trans-unit id="2e7db576eadb453c186f445a796970d3e0af302f" translate="yes" xml:space="preserve">
          <source>Username Customization</source>
          <target state="translated">自定义用户名</target>
        </trans-unit>
        <trans-unit id="2c1db596d2dfc88f58701d9fe9d57e9dcdcc4032" translate="yes" xml:space="preserve">
          <source>Using A Global &lt;code&gt;from&lt;/code&gt; Address</source>
          <target state="translated">使用全局 &lt;code&gt;from&lt;/code&gt; 地址</target>
        </trans-unit>
        <trans-unit id="216f35abbad1de6e68b33b2cdcc8837d76c280f4" translate="yes" xml:space="preserve">
          <source>Using An Example Application</source>
          <target state="translated">使用实例应用</target>
        </trans-unit>
        <trans-unit id="62e9f45ef979b380dbcb1184e2215f7d004bdca7" translate="yes" xml:space="preserve">
          <source>Using An Existing Client Instance</source>
          <target state="translated">使用现有的客户端实例</target>
        </trans-unit>
        <trans-unit id="a9d983ec2ba25e12439b4bb33bb9cb4ff20cec94" translate="yes" xml:space="preserve">
          <source>Using Another Domain</source>
          <target state="translated">使用其他域名</target>
        </trans-unit>
        <trans-unit id="1cfff2a1417bb9f3fa6ef651cf3c78ac02039444" translate="yes" xml:space="preserve">
          <source>Using Attributes &amp;amp; Slots Inside The Class</source>
          <target state="translated">在类中使用属​​性和插槽</target>
        </trans-unit>
        <trans-unit id="e79b57a72e1ee274f7267c00a9af517c0d13725c" translate="yes" xml:space="preserve">
          <source>Using Bootstrap</source>
          <target state="translated">使用Bootstrap</target>
        </trans-unit>
        <trans-unit id="25112a4804e46ede87116524e3f34212886cddfb" translate="yes" xml:space="preserve">
          <source>Using Closures</source>
          <target state="translated">使用闭合</target>
        </trans-unit>
        <trans-unit id="25786ca0bd0d30fd8fa61a08279117e107aabca9" translate="yes" xml:space="preserve">
          <source>Using Components</source>
          <target state="translated">使用组件</target>
        </trans-unit>
        <trans-unit id="24932eb2b8d5b43b0680490a8468087bc33abbd5" translate="yes" xml:space="preserve">
          <source>Using Cursors</source>
          <target state="translated">使用光标</target>
        </trans-unit>
        <trans-unit id="fa10774d0e271ce1daa32ba7d67741dff0dd4dd8" translate="yes" xml:space="preserve">
          <source>Using Extensions</source>
          <target state="translated">使用扩展部分</target>
        </trans-unit>
        <trans-unit id="686c3d4bfe9f7aa5efa5e0095401e7adf93fea51" translate="yes" xml:space="preserve">
          <source>Using Factories</source>
          <target state="translated">使用工厂</target>
        </trans-unit>
        <trans-unit id="f2036f1ba7e70d3832aa3097ae413a7dc03e90ba" translate="yes" xml:space="preserve">
          <source>Using Forms</source>
          <target state="translated">使用表格</target>
        </trans-unit>
        <trans-unit id="c4a2849b37e855e210cf7bff023adbf8def68ec4" translate="yes" xml:space="preserve">
          <source>Using Magic Methods</source>
          <target state="translated">使用神奇的方法</target>
        </trans-unit>
        <trans-unit id="9ee6d0556e77496962a7f68fc2938ee8a2b4b239" translate="yes" xml:space="preserve">
          <source>Using Model Factories</source>
          <target state="translated">使用模型因子</target>
        </trans-unit>
        <trans-unit id="9024e7794fa530c1d7fe273d02883b5baa90cf94" translate="yes" xml:space="preserve">
          <source>Using Multiple Database Connections</source>
          <target state="translated">使用多个数据库连接</target>
        </trans-unit>
        <trans-unit id="3705315f35938a6abf481834794518bd704bd8ea" translate="yes" xml:space="preserve">
          <source>Using Multiple Redis Connections</source>
          <target state="translated">使用多个Redis连接</target>
        </trans-unit>
        <trans-unit id="70946ec4b6a6083b237c2f5b126322c2957bd26c" translate="yes" xml:space="preserve">
          <source>Using Named Bindings</source>
          <target state="translated">使用命名绑定</target>
        </trans-unit>
        <trans-unit id="55cb1e4b38a0c574a47a6387cc78f55aea1bb2bc" translate="yes" xml:space="preserve">
          <source>Using OAuth2 with authorization codes is how most developers are familiar with OAuth2. When using authorization codes, a client application will redirect a user to your server where they will either approve or deny the request to issue an access token to the client.</source>
          <target state="translated">使用OAuth2与授权代码是大多数开发人员熟悉OAuth2的方式。当使用授权代码时,客户端应用程序将把用户重定向到你的服务器,在那里他们将批准或拒绝向客户端发出访问令牌的请求。</target>
        </trans-unit>
        <trans-unit id="96139a5c99e2a55f4e1d42578e8b77ebaa7c6ecd" translate="yes" xml:space="preserve">
          <source>Using Other Browsers</source>
          <target state="translated">使用其他浏览器</target>
        </trans-unit>
        <trans-unit id="547f3d366f6ba6dbebb442ff52e5209ac22bfe3d" translate="yes" xml:space="preserve">
          <source>Using React</source>
          <target state="translated">使用React</target>
        </trans-unit>
        <trans-unit id="1f29841b38fd243f89b80a9f29f63a4ed2ee9216" translate="yes" xml:space="preserve">
          <source>Using Rule Objects</source>
          <target state="translated">使用规则对象</target>
        </trans-unit>
        <trans-unit id="3d7a463ee7e4d28ba8333eaae5d3584b6aea8c25" translate="yes" xml:space="preserve">
          <source>Using Seeds</source>
          <target state="translated">使用种子</target>
        </trans-unit>
        <trans-unit id="e2228f5e9598a5d7c4ea863d0e5acf274d8ad1a0" translate="yes" xml:space="preserve">
          <source>Using Short Keys</source>
          <target state="translated">使用短键</target>
        </trans-unit>
        <trans-unit id="c142408ff0ea25a774b51389fb5125e10d488f17" translate="yes" xml:space="preserve">
          <source>Using The &lt;code&gt;from&lt;/code&gt; Method</source>
          <target state="translated">使用 &lt;code&gt;from&lt;/code&gt; 方法</target>
        </trans-unit>
        <trans-unit id="e828f2da10d4699211aea8ec287ea22dc98d8e4a" translate="yes" xml:space="preserve">
          <source>Using The Encrypter</source>
          <target state="translated">使用加密器</target>
        </trans-unit>
        <trans-unit id="32e4c8f87a22afe4dc721aef0e4172613cbd432a" translate="yes" xml:space="preserve">
          <source>Using The Keyboard</source>
          <target state="translated">使用键盘</target>
        </trans-unit>
        <trans-unit id="6acef1ffb7973221335871f1416a7eb621f9bb2c" translate="yes" xml:space="preserve">
          <source>Using The Mouse</source>
          <target state="translated">使用鼠标</target>
        </trans-unit>
        <trans-unit id="2be585cd02cbac6e6aa7f3a5e76a42890611569a" translate="yes" xml:space="preserve">
          <source>Using The Notifiable Trait</source>
          <target state="translated">使用可通知特征</target>
        </trans-unit>
        <trans-unit id="bc0066137ddde9f57acea92265960870ddbc85d4" translate="yes" xml:space="preserve">
          <source>Using The Notification Facade</source>
          <target state="translated">使用Notification Facade</target>
        </trans-unit>
        <trans-unit id="2c4389b8f20380044dd4d1a71631f1bd707c2a9a" translate="yes" xml:space="preserve">
          <source>Using The Session</source>
          <target state="translated">使用会话</target>
        </trans-unit>
        <trans-unit id="4ddeb48ad6c4a3dbd99803569688896b32d1a88b" translate="yes" xml:space="preserve">
          <source>Using Translation Strings As Keys</source>
          <target state="translated">使用翻译字符串作为键</target>
        </trans-unit>
        <trans-unit id="dd22fed353795223638fa3d57ab7cca926b4236a" translate="yes" xml:space="preserve">
          <source>Using a few simple methods, you may access all of the user input from your &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; instance without worrying about which HTTP verb was used for the request. Regardless of the HTTP verb, the &lt;code&gt;input&lt;/code&gt; method may be used to retrieve user input:</source>
          <target state="translated">使用一些简单的方法，您可以从 &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; 实例访问所有用户输入，而不必担心该请求使用了哪个HTTP动词。不管HTTP动词如何，均可使用 &lt;code&gt;input&lt;/code&gt; 方法检索用户输入：</target>
        </trans-unit>
        <trans-unit id="e9fda880257aba205c2a22d38cfb42a74e3c5c03" translate="yes" xml:space="preserve">
          <source>Using automatic hostnames works best for &quot;per project&quot; installations of Homestead. If you host multiple sites on a single Homestead instance, you may add the &quot;domains&quot; for your web sites to the &lt;code&gt;hosts&lt;/code&gt; file on your machine. The &lt;code&gt;hosts&lt;/code&gt; file will redirect requests for your Homestead sites into your Homestead machine. On Mac and Linux, this file is located at &lt;code&gt;/etc/hosts&lt;/code&gt;. On Windows, it is located at &lt;code&gt;C:\Windows\System32\drivers\etc\hosts&lt;/code&gt;. The lines you add to this file will look like the following:</source>
          <target state="translated">使用自动主机名最适合Homestead的&amp;ldquo;每个项目&amp;rdquo;安装。如果您在单个Homestead实例上托管多个站点，则可以将网站的&amp;ldquo;域&amp;rdquo;添加到计算机上的 &lt;code&gt;hosts&lt;/code&gt; 文件中。该 &lt;code&gt;hosts&lt;/code&gt; 文件会为你的家园网站请求重定向到你的家园机。在Mac和Linux上，此文件位于 &lt;code&gt;/etc/hosts&lt;/code&gt; 。在Windows上，它位于 &lt;code&gt;C:\Windows\System32\drivers\etc\hosts&lt;/code&gt; 。您添加到此文件的行将如下所示：</target>
        </trans-unit>
        <trans-unit id="499b7bb5cc827ba820779c1f492f97fb13dcac85" translate="yes" xml:space="preserve">
          <source>Using contextual binding, you may resolve this dependency by providing the &lt;code&gt;give&lt;/code&gt; method with a Closure that returns an array of resolved &lt;code&gt;Filter&lt;/code&gt; instances:</source>
          <target state="translated">使用上下文绑定，您可以通过为 &lt;code&gt;give&lt;/code&gt; 方法提供一个Closure来解决此依赖关系，该Closure返回已解析的 &lt;code&gt;Filter&lt;/code&gt; 实例的数组：</target>
        </trans-unit>
        <trans-unit id="17438b1ca0a4af5dbc616107d6d56a129c0a5e4d" translate="yes" xml:space="preserve">
          <source>Using directives such as &lt;code&gt;@env&lt;/code&gt; directly on a component is not supported at this time.</source>
          <target state="translated">目前不支持在组件上直接使用 &lt;code&gt;@env&lt;/code&gt; 之类的指令。</target>
        </trans-unit>
        <trans-unit id="406c1ebda5c578fc0028f36c7519ac73224c8118" translate="yes" xml:space="preserve">
          <source>Using either the &lt;code&gt;pingBefore($url)&lt;/code&gt; or &lt;code&gt;thenPing($url)&lt;/code&gt; feature requires the Guzzle HTTP library. You can add Guzzle to your project using the Composer package manager:</source>
          <target state="translated">使用 &lt;code&gt;pingBefore($url)&lt;/code&gt; 或 &lt;code&gt;thenPing($url)&lt;/code&gt; 功能需要Guzzle HTTP库。您可以使用Composer软件包管理器将Guzzle添加到您的项目中：</target>
        </trans-unit>
        <trans-unit id="0e30d58ca464af791be0f4dd1b5adbb1b8914db2" translate="yes" xml:space="preserve">
          <source>Using real-time facades, you may treat any class in your application as if it were a facade. To illustrate how this can be used, let's examine an alternative. For example, let's assume our &lt;code&gt;Podcast&lt;/code&gt; model has a &lt;code&gt;publish&lt;/code&gt; method. However, in order to publish the podcast, we need to inject a &lt;code&gt;Publisher&lt;/code&gt; instance:</source>
          <target state="translated">使用实时外观，您可以将应用程序中的任何类都视为外观。为了说明如何使用它，让我们研究一个替代方法。例如，假设我们的 &lt;code&gt;Podcast&lt;/code&gt; 模型具有 &lt;code&gt;publish&lt;/code&gt; 方法。但是，为了发布播客，我们需要注入一个 &lt;code&gt;Publisher&lt;/code&gt; 实例：</target>
        </trans-unit>
        <trans-unit id="1989c15c720e800a884e34521b523d9b38a95afa" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;Cache&lt;/code&gt; facade, you may access various cache stores via the &lt;code&gt;store&lt;/code&gt; method. The key passed to the &lt;code&gt;store&lt;/code&gt; method should correspond to one of the stores listed in the &lt;code&gt;stores&lt;/code&gt; configuration array in your &lt;code&gt;cache&lt;/code&gt; configuration file:</source>
          <target state="translated">使用 &lt;code&gt;Cache&lt;/code&gt; 外观，您可以通过 &lt;code&gt;store&lt;/code&gt; 方法访问各种缓存存储。传递给 &lt;code&gt;store&lt;/code&gt; 方法的密钥应与 &lt;code&gt;cache&lt;/code&gt; 配置文件中的 &lt;code&gt;stores&lt;/code&gt; 配置数组中列出的存储之一相对应：</target>
        </trans-unit>
        <trans-unit id="b7a1520a74cd435ee873b2f1ed48c86b342a6b5f" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;Route::fallback&lt;/code&gt; method, you may define a route that will be executed when no other route matches the incoming request. Typically, unhandled requests will automatically render a &quot;404&quot; page via your application's exception handler. However, since you may define the &lt;code&gt;fallback&lt;/code&gt; route within your &lt;code&gt;routes/web.php&lt;/code&gt; file, all middleware in the &lt;code&gt;web&lt;/code&gt; middleware group will apply to the route. Of course, you are free to add additional middleware to this route as needed:</source>
          <target state="translated">使用 &lt;code&gt;Route::fallback&lt;/code&gt; 方法，您可以定义当没有其他路由与传入请求匹配时将执行的路由。通常，未处理的请求将通过应用程序的异常处理程序自动呈现&amp;ldquo; 404&amp;rdquo;页面。但是，由于您可以在 &lt;code&gt;routes/web.php&lt;/code&gt; 文件中定义 &lt;code&gt;fallback&lt;/code&gt; 路由，因此 &lt;code&gt;web&lt;/code&gt; 中间件组中的所有中间件都将应用于该路由。当然，您可以根据需要随意向此路由添加其他中间件：</target>
        </trans-unit>
        <trans-unit id="69fb67d90753e9b38d58d2e4f323adafcad646da" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;Route::fallback&lt;/code&gt; method, you may define a route that will be executed when no other route matches the incoming request. Typically, unhandled requests will automatically render a &quot;404&quot; page via your application's exception handler. However, since you may define the &lt;code&gt;fallback&lt;/code&gt; route within your &lt;code&gt;routes/web.php&lt;/code&gt; file, all middleware in the &lt;code&gt;web&lt;/code&gt; middleware group will apply to the route. You are free to add additional middleware to this route as needed:</source>
          <target state="translated">使用 &lt;code&gt;Route::fallback&lt;/code&gt; 方法，您可以定义一个路由，当没有其他路由与传入请求匹配时将执行该路由。通常，未处理的请求将通过应用程序的异常处理程序自动呈现&amp;ldquo; 404&amp;rdquo;页面。但是，由于您可以在 &lt;code&gt;routes/web.php&lt;/code&gt; 文件中定义 &lt;code&gt;fallback&lt;/code&gt; 路由，因此 &lt;code&gt;web&lt;/code&gt; 中间件组中的所有中间件都将应用于该路由。您可以根据需要随意向此路由添加其他中间件：</target>
        </trans-unit>
        <trans-unit id="65f521afa14d4f75e7a8432c2968b7b3abc4f8a2" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;before&lt;/code&gt; and &lt;code&gt;after&lt;/code&gt; methods on the &lt;code&gt;Queue&lt;/code&gt;&lt;a href=&quot;facades&quot;&gt;facade&lt;/a&gt;, you may specify callbacks to be executed before or after a queued job is processed. These callbacks are a great opportunity to perform additional logging or increment statistics for a dashboard. Typically, you should call these methods from a &lt;a href=&quot;providers&quot;&gt;service provider&lt;/a&gt;. For example, we may use the &lt;code&gt;AppServiceProvider&lt;/code&gt; that is included with Laravel:</source>
          <target state="translated">使用 &lt;code&gt;Queue&lt;/code&gt; &lt;a href=&quot;facades&quot;&gt;外观&lt;/a&gt;上的 &lt;code&gt;before&lt;/code&gt; 和 &lt;code&gt;after&lt;/code&gt; 方法，可以指定要在处理队列作业之前或之后执行的回调。这些回调是为仪表板执行附加日志记录或增量统计信息的绝佳机会。通常，您应该从&lt;a href=&quot;providers&quot;&gt;服务提供商处&lt;/a&gt;调用这些方法。例如，我们可以使用Laravel随附的 &lt;code&gt;AppServiceProvider&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="b783bcb9ebc1f36e40dc3bc7c1644f534e87b195" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;before&lt;/code&gt; and &lt;code&gt;after&lt;/code&gt; methods, you may specify code to be executed before and after the scheduled task is complete:</source>
          <target state="translated">使用 &lt;code&gt;before&lt;/code&gt; 和 &lt;code&gt;after&lt;/code&gt; 方法，可以指定计划任务完成之前和之后要执行的代码：</target>
        </trans-unit>
        <trans-unit id="56c4c76e7391f602da6b92e92ebf5057f621b782" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;catch&lt;/code&gt; method, you may provide a Closure that should be executed if the queued Closure fails to complete successfully after exhausting all of your queue's configured retry attempts:</source>
          <target state="translated">使用 &lt;code&gt;catch&lt;/code&gt; 方法，您可以提供一个Closure，如果在用尽所有队列的已配置重试尝试后，排队的Closure无法成功完成，则应执行该Closure：</target>
        </trans-unit>
        <trans-unit id="678c4bdbc0980fe89557af54092436241e5d6049" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;emailOutputTo&lt;/code&gt; method, you may e-mail the output to an e-mail address of your choice. Before e-mailing the output of a task, you should configure Laravel's &lt;a href=&quot;mail&quot;&gt;e-mail services&lt;/a&gt;:</source>
          <target state="translated">使用 &lt;code&gt;emailOutputTo&lt;/code&gt; 方法，您可以将输出通过电子邮件发送到您选择的电子邮件地址。通过电子邮件发送任务输出之前，您应该配置Laravel的&lt;a href=&quot;mail&quot;&gt;电子邮件服务&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="805cc0a60fdd61923070deec51473812bc87daf6" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;first&lt;/code&gt; method, you may create the first view that exists in a given array of views. This is useful if your application or package allows views to be customized or overwritten:</source>
          <target state="translated">使用 &lt;code&gt;first&lt;/code&gt; 一种方法，您可以创建给定视图数组中存在的第一个视图。如果您的应用程序或程序包允许自定义或覆盖视图，这将非常有用：</target>
        </trans-unit>
        <trans-unit id="7a926a83ee058b1589aa1d7379c1abc5befa110a" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;first&lt;/code&gt; method, you may render the first attribute in a given attribute bag:</source>
          <target state="translated">使用 &lt;code&gt;first&lt;/code&gt; 一种方法，您可以在给定的属性包中呈现第一个属性：</target>
        </trans-unit>
        <trans-unit id="d89c7129bfcb2320bd6e3cf389f22cc353c3275e" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;looping&lt;/code&gt; method on the &lt;code&gt;Queue&lt;/code&gt;&lt;a href=&quot;facades&quot;&gt;facade&lt;/a&gt;, you may specify callbacks that execute before the worker attempts to fetch a job from a queue. For example, you might register a Closure to rollback any transactions that were left open by a previously failed job:</source>
          <target state="translated">使用&amp;ldquo; &lt;code&gt;Queue&lt;/code&gt; &lt;a href=&quot;facades&quot;&gt;外观&lt;/a&gt;上的 &lt;code&gt;looping&lt;/code&gt; 方法，您可以指定在工作程序尝试从队列中获取作业之前执行的回调。例如，您可以注册一个Closure，以回滚先前失败的作业保留的所有事务：</target>
        </trans-unit>
        <trans-unit id="c88eb0e8a9ad89538b979ac4c1c5c209c1188062" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;pingBefore&lt;/code&gt; and &lt;code&gt;thenPing&lt;/code&gt; methods, the scheduler can automatically ping a given URL before or after a task is complete. This method is useful for notifying an external service, such as &lt;a href=&quot;https://envoyer.io&quot;&gt;Laravel Envoyer&lt;/a&gt;, that your scheduled task is commencing or has finished execution:</source>
          <target state="translated">使用 &lt;code&gt;pingBefore&lt;/code&gt; 和 &lt;code&gt;thenPing&lt;/code&gt; 方法，调度程序可以在任务完成之前或之后自动ping给定URL。此方法对于通知外部服务（例如&lt;a href=&quot;https://envoyer.io&quot;&gt;Laravel Envoyer）很有用&lt;/a&gt;，您的计划任务正在开始或已完成执行：</target>
        </trans-unit>
        <trans-unit id="50064d12b24b039c91d1244e92a456d73c9241ec" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;psubscribe&lt;/code&gt; method, you may subscribe to a wildcard channel, which may be useful for catching all messages on all channels. The &lt;code&gt;$channel&lt;/code&gt; name will be passed as the second argument to the provided callback &lt;code&gt;Closure&lt;/code&gt;:</source>
          <target state="translated">使用 &lt;code&gt;psubscribe&lt;/code&gt; 方法，您可以订阅通配符通道，这对于捕获所有通道上的所有消息可能很有用。在 &lt;code&gt;$channel&lt;/code&gt; 名称将作为第二个参数提供的回调传递 &lt;code&gt;Closure&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="7cff7155c545f37c1ab3e589532cfcfadb593e62" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;queue&lt;/code&gt; method on the &lt;code&gt;Artisan&lt;/code&gt; facade, you may even queue Artisan commands so they are processed in the background by your &lt;a href=&quot;queues&quot;&gt;queue workers&lt;/a&gt;. Before using this method, make sure you have configured your queue and are running a queue listener:</source>
          <target state="translated">使用 &lt;code&gt;Artisan&lt;/code&gt; 外观上的 &lt;code&gt;queue&lt;/code&gt; 方法，您甚至可以对Artisan命令进行排队，以便&lt;a href=&quot;queues&quot;&gt;队列工作人员&lt;/a&gt;在后台对其进行处理。使用此方法之前，请确保已配置队列并正在运行队列侦听器：</target>
        </trans-unit>
        <trans-unit id="27a24dbd64e1ac755132eb44feff861706999322" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;timezone&lt;/code&gt; method, you may specify that a scheduled task's time should be interpreted within a given timezone:</source>
          <target state="translated">使用 &lt;code&gt;timezone&lt;/code&gt; 方法，您可以指定应该在给定的时区内解释计划任务的时间：</target>
        </trans-unit>
        <trans-unit id="e3ed6eadd37b5bc0955a052e8e60637bdc9c6048" translate="yes" xml:space="preserve">
          <source>Using the Memcached driver requires the &lt;a href=&quot;https://pecl.php.net/package/memcached&quot;&gt;Memcached PECL package&lt;/a&gt; to be installed. You may list all of your Memcached servers in the &lt;code&gt;config/cache.php&lt;/code&gt; configuration file:</source>
          <target state="translated">使用Memcached驱动程序需要安装&lt;a href=&quot;https://pecl.php.net/package/memcached&quot;&gt;Memcached PECL软件包&lt;/a&gt;。您可以在 &lt;code&gt;config/cache.php&lt;/code&gt; 配置文件中列出所有Memcached服务器：</target>
        </trans-unit>
        <trans-unit id="58f310a81c605f751594a4ca39a2a50c4c3577f4" translate="yes" xml:space="preserve">
          <source>Using the new &lt;code&gt;catch&lt;/code&gt; method, you may now provide a Closure that should be executed if a queued Closure fails to complete successfully after exhausting all of your queue's configured retry attempts:</source>
          <target state="translated">使用新的 &lt;code&gt;catch&lt;/code&gt; 方法，您现在可以提供一个Closure，如果在排队的所有Closure在用尽所有队列的已配置重试尝试后未能成功完成，则应该执行该Closure：</target>
        </trans-unit>
        <trans-unit id="78a2d37146e8eba2af43a7613e424eb034b4424b" translate="yes" xml:space="preserve">
          <source>Using the subquery functionality available to the &lt;code&gt;select&lt;/code&gt; and &lt;code&gt;addSelect&lt;/code&gt; methods, we can select all of the &lt;code&gt;destinations&lt;/code&gt; and the name of the flight that most recently arrived at that destination using a single query:</source>
          <target state="translated">使用 &lt;code&gt;select&lt;/code&gt; 和 &lt;code&gt;addSelect&lt;/code&gt; 方法可用的子查询功能，我们可以使用单个查询选择所有 &lt;code&gt;destinations&lt;/code&gt; 以及最近到达该目的地的航班名称：</target>
        </trans-unit>
        <trans-unit id="34b17c91b4d18aaebbbfe1050a5a592f42520a50" translate="yes" xml:space="preserve">
          <source>Using these model definitions and relationships, we may retrieve &lt;code&gt;ActivityFeed&lt;/code&gt; model instances and eager load all &lt;code&gt;parentable&lt;/code&gt; models and their respective nested relationship counts:</source>
          <target state="translated">使用这些模型定义和关系，我们可以检索 &lt;code&gt;ActivityFeed&lt;/code&gt; 模型实例，并急于加载所有可 &lt;code&gt;parentable&lt;/code&gt; 模型及其各自的嵌套关系计数：</target>
        </trans-unit>
        <trans-unit id="2b635005fa10ad4dd5e39fb5d08120a6cfc28c7a" translate="yes" xml:space="preserve">
          <source>Using these model definitions and relationships, we may retrieve &lt;code&gt;ActivityFeed&lt;/code&gt; model instances and eager load all &lt;code&gt;parentable&lt;/code&gt; models and their respective nested relationships:</source>
          <target state="translated">使用这些模型定义和关系，我们可以检索 &lt;code&gt;ActivityFeed&lt;/code&gt; 模型实例，并急于加载所有可 &lt;code&gt;parentable&lt;/code&gt; 模型及其各自的嵌套关系：</target>
        </trans-unit>
        <trans-unit id="4c31156efed35ee7814650f8971c3698059440e3" translate="yes" xml:space="preserve">
          <source>Util</source>
          <target state="translated">Util</target>
        </trans-unit>
        <trans-unit id="3381deb6de2c946be91070f6793edeb6ed737dd5" translate="yes" xml:space="preserve">
          <source>Util (Container)</source>
          <target state="translated">Util (集装箱)</target>
        </trans-unit>
        <trans-unit id="7a113dca44af51991a38c445f7c89b4c32510c62" translate="yes" xml:space="preserve">
          <source>Util::arrayWrap()</source>
          <target state="translated">Util::arrayWrap()</target>
        </trans-unit>
        <trans-unit id="14baba7ebe94810f45f2044da2f65072e5533037" translate="yes" xml:space="preserve">
          <source>Util::getParameterClassName()</source>
          <target state="translated">Util::getParameterClassName()</target>
        </trans-unit>
        <trans-unit id="b5ba942a8e2c83fbd24f49896a6252d63736f617" translate="yes" xml:space="preserve">
          <source>Util::unwrapIfClosure()</source>
          <target state="translated">Util::unwrapIfClosure()</target>
        </trans-unit>
        <trans-unit id="bcb12112c0f1179c9c17c9f8020135846a27f2d8" translate="yes" xml:space="preserve">
          <source>Utilizing A Local Scope</source>
          <target state="translated">利用本地范围</target>
        </trans-unit>
        <trans-unit id="976bf1c80ce87f4d5095dac7464aeabbcb5981e2" translate="yes" xml:space="preserve">
          <source>UuidInterface</source>
          <target state="translated">UuidInterface</target>
        </trans-unit>
        <trans-unit id="a9b75398a82b8ed5247b1501be51d83c1e6df52b" translate="yes" xml:space="preserve">
          <source>VARCHAR equivalent column with a length.</source>
          <target state="translated">VARCHAR等价列,长度。</target>
        </trans-unit>
        <trans-unit id="1033afd1ffe433be3334a586831b5b90e719c44a" translate="yes" xml:space="preserve">
          <source>VARCHAR equivalent column with a optional length.</source>
          <target state="translated">VARCHAR等价列,长度可选。</target>
        </trans-unit>
        <trans-unit id="b33892fbddeffc3368077b4904ad0b3d562a7312" translate="yes" xml:space="preserve">
          <source>VERSION</source>
          <target state="translated">VERSION</target>
        </trans-unit>
        <trans-unit id="7c4318788e30db66abddf721412f42bf7eac6d83" translate="yes" xml:space="preserve">
          <source>VISIBILITY_PRIVATE</source>
          <target state="translated">VISIBILITY_PRIVATE</target>
        </trans-unit>
        <trans-unit id="17fd123d652bb24f8e16616f88600967f74eeb90" translate="yes" xml:space="preserve">
          <source>VISIBILITY_PUBLIC</source>
          <target state="translated">VISIBILITY_PUBLIC</target>
        </trans-unit>
        <trans-unit id="1f185450ee544ae965bb9573dd704b8abfefef26" translate="yes" xml:space="preserve">
          <source>Valet 2.0 transitions Valet's underlying web server from Caddy to Nginx. Before upgrading to this version you should run the following commands to stop and uninstall the existing Caddy daemon:</source>
          <target state="translated">Valet 2.0将Valet的底层Web服务器从Caddy过渡到Nginx。在升级到这个版本之前,你应该运行以下命令来停止和卸载现有的Caddy守护进程。</target>
        </trans-unit>
        <trans-unit id="a5f60770e7d6e5e9ec19004e18065c8dd0579aca" translate="yes" xml:space="preserve">
          <source>Valet Directories &amp;amp; Files</source>
          <target state="translated">代客目录和文件</target>
        </trans-unit>
        <trans-unit id="eb51daea5519daa59c110af3ff0fdce0f775a821" translate="yes" xml:space="preserve">
          <source>Valet Or Homestead</source>
          <target state="translated">代客或自留地</target>
        </trans-unit>
        <trans-unit id="262d72c5ab80eeb0c46ac525c5515c7c340d1a45" translate="yes" xml:space="preserve">
          <source>Valet allows you to switch PHP versions using the &lt;code&gt;valet use php@version&lt;/code&gt; command. Valet will install the specified PHP version via Brew if it is not already installed:</source>
          <target state="translated">代客允许您使用 &lt;code&gt;valet use php@version&lt;/code&gt; 命令切换PHP版本。如果尚未安装，代客将通过Brew安装指定的PHP版本：</target>
        </trans-unit>
        <trans-unit id="b860762aa48e6e66610e929c3e05dead400a78ea" translate="yes" xml:space="preserve">
          <source>Valet even includes a command to share your local sites with the world, providing an easy way to test your site on mobile devices or share it with team members and clients. No additional software installation is required once Valet is installed.</source>
          <target state="translated">Valet甚至包括一个与世界分享您的本地网站的命令,提供了一个在移动设备上测试您的网站或与团队成员和客户分享的简单方法。一旦安装了Valet,不需要额外的软件安装。</target>
        </trans-unit>
        <trans-unit id="26fa6221d420c739c957e39e36b8669ec9493b9a" translate="yes" xml:space="preserve">
          <source>Valet even includes a command to share your local sites with the world. No additional software installation is required once Valet is installed.</source>
          <target state="translated">Valet甚至包括一个命令,可以与世界分享您的本地站点。一旦安装了Valet,就不需要额外的软件安装。</target>
        </trans-unit>
        <trans-unit id="15bee6457bf5499b6941a3d7bc06352107aef258" translate="yes" xml:space="preserve">
          <source>Valet is a Laravel development environment for Mac minimalists. No Vagrant, no &lt;code&gt;/etc/hosts&lt;/code&gt; file. You can even share your sites publicly using local tunnels. &lt;em&gt;Yeah, we like it too.&lt;/em&gt;</source>
          <target state="translated">Valet是Mac极简主义者的Laravel开发环境。没有流浪者，没有 &lt;code&gt;/etc/hosts&lt;/code&gt; 文件。您甚至可以使用本地隧道公开共享站点。&lt;em&gt;是的，我们也喜欢。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f9075b144ccce6118130d572163d5c32c096b2c8" translate="yes" xml:space="preserve">
          <source>Valet only serves one PHP version at a time, even if you have multiple PHP versions installed.</source>
          <target state="translated">Valet一次只为一个PHP版本服务,即使你安装了多个PHP版本。</target>
        </trans-unit>
        <trans-unit id="42c0b9ead0c11c596b4a96ec474adae3a3c540be" translate="yes" xml:space="preserve">
          <source>Valet only supports Mac, and requires you to install PHP and a database server directly onto your local machine. This is easily achieved by using &lt;a href=&quot;http://brew.sh/&quot;&gt;Homebrew&lt;/a&gt; with commands like &lt;code&gt;brew install php&lt;/code&gt; and &lt;code&gt;brew install mysql&lt;/code&gt;. Valet provides a blazing fast local development environment with minimal resource consumption, so it's great for developers who only require PHP / MySQL and do not need a fully virtualized development environment.</source>
          <target state="translated">代客泊车仅支持Mac，并且要求您将PHP和数据库服务器直接安装到本地计算机上。这可以通过将&lt;a href=&quot;http://brew.sh/&quot;&gt;Homebrew&lt;/a&gt;与 &lt;code&gt;brew install php&lt;/code&gt; 和 &lt;code&gt;brew install mysql&lt;/code&gt; 等命令结合使用来轻松实现。Valet提供了一种耗费最少资源的快速本地开发环境，因此对于只需要PHP / MySQL且不需要完全虚拟化的开发环境的开发人员来说，这是一个很好的选择。</target>
        </trans-unit>
        <trans-unit id="4a0f3915baa54a174906bade2cc3e085088fdd3b" translate="yes" xml:space="preserve">
          <source>Valet only supports Mac, and requires you to install PHP and a database server directly onto your local machine. This is easily achieved by using &lt;a href=&quot;https://brew.sh/&quot;&gt;Homebrew&lt;/a&gt; with commands like &lt;code&gt;brew install php&lt;/code&gt; and &lt;code&gt;brew install mysql&lt;/code&gt;. Valet provides a blazing fast local development environment with minimal resource consumption, so it's great for developers who only require PHP / MySQL and do not need a fully virtualized development environment.</source>
          <target state="translated">代客泊车仅支持Mac，并且要求您将PHP和数据库服务器直接安装到本地计算机上。可以通过将&lt;a href=&quot;https://brew.sh/&quot;&gt;Homebrew&lt;/a&gt;与 &lt;code&gt;brew install php&lt;/code&gt; 和 &lt;code&gt;brew install mysql&lt;/code&gt; 等命令配合使用来轻松实现。Valet提供了一种耗费最少资源的快速本地开发环境，因此对于只需要PHP / MySQL且不需要完全虚拟化的开发环境的开发人员来说，这是一个很好的选择。</target>
        </trans-unit>
        <trans-unit id="5f4dba68eec7fd8faf4182ea5b8911c03fb7055b" translate="yes" xml:space="preserve">
          <source>Valet restricts incoming traffic to the internal &lt;code&gt;127.0.0.1&lt;/code&gt; interface by default. This way your development machine isn't exposed to security risks from the Internet.</source>
          <target state="translated">默认情况下，代客将传入流量限制为内部 &lt;code&gt;127.0.0.1&lt;/code&gt; 接口。这样，您的开发机器就不会承受来自Internet的安全风险。</target>
        </trans-unit>
        <trans-unit id="6dbfbc5d8337390ade7cc39d221ef41687ed6cab" translate="yes" xml:space="preserve">
          <source>Valet will automatically start its daemon each time your machine boots. There is no need to run &lt;code&gt;valet start&lt;/code&gt; or &lt;code&gt;valet install&lt;/code&gt; ever again once the initial Valet installation is complete.</source>
          <target state="translated">每当您的计算机启动时，代客将自动启动其守护进程。初始代客安装完成后，无需再次运行 &lt;code&gt;valet start&lt;/code&gt; 或 &lt;code&gt;valet install&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6ed72a875afbc5ee507bace92ae70597f3e95336" translate="yes" xml:space="preserve">
          <source>Valet's master configuration file</source>
          <target state="translated">Valet的主配置文件</target>
        </trans-unit>
        <trans-unit id="57e96c6ba747a0c200bcccb1b419a4e886fdbece" translate="yes" xml:space="preserve">
          <source>Validate a given attribute against a rule.</source>
          <target state="translated">根据规则验证给定属性。</target>
        </trans-unit>
        <trans-unit id="bf05c9bb9c98f61e1d302485ed610ec9dbcd9444" translate="yes" xml:space="preserve">
          <source>Validate a given rule against a route and request.</source>
          <target state="translated">根据途径和请求验证给定的规则。</target>
        </trans-unit>
        <trans-unit id="d4b6027fe5ad73a4c290bbac11d3555f16f1dd96" translate="yes" xml:space="preserve">
          <source>Validate a password reset for the given credentials.</source>
          <target state="translated">验证给定凭证的密码重置。</target>
        </trans-unit>
        <trans-unit id="6a0c4f022d9c795fc1f2a61e99f93f887e2bccd4" translate="yes" xml:space="preserve">
          <source>Validate a user against the given credentials.</source>
          <target state="translated">根据给定的凭证验证用户。</target>
        </trans-unit>
        <trans-unit id="6bffe55f8f623a1224d882b06bf194cbc65a7546" translate="yes" xml:space="preserve">
          <source>Validate a user's credentials.</source>
          <target state="translated">验证用户的证书。</target>
        </trans-unit>
        <trans-unit id="88bf33d745c16d038c737ecf51b73fe1debde309" translate="yes" xml:space="preserve">
          <source>Validate an attribute is contained within a list of values.</source>
          <target state="translated">验证一个属性是否包含在一个值的列表中。</target>
        </trans-unit>
        <trans-unit id="ef0b710d34997d403a7854d04236bae2cc162119" translate="yes" xml:space="preserve">
          <source>Validate an attribute is not contained within a list of values.</source>
          <target state="translated">验证一个属性不包含在一个值的列表中。</target>
        </trans-unit>
        <trans-unit id="0bbbeba79817c9a5086a8f0076e7f31f685c95fe" translate="yes" xml:space="preserve">
          <source>Validate an attribute is unique among other values.</source>
          <target state="translated">验证一个属性在其他值中是唯一的。</target>
        </trans-unit>
        <trans-unit id="a3688c63a10d1a97aac77c7d7a69dc854a8bc94d" translate="yes" xml:space="preserve">
          <source>Validate an attribute using a custom rule object.</source>
          <target state="translated">使用自定义规则对象验证一个属性。</target>
        </trans-unit>
        <trans-unit id="f4742cb9bd40c1efc47dd7a72490be12a8a03997" translate="yes" xml:space="preserve">
          <source>Validate and return the decoded response JSON.</source>
          <target state="translated">验证并返回解码后的响应JSON。</target>
        </trans-unit>
        <trans-unit id="ff4e36dc555e99bd821546820b2d9af938a738d9" translate="yes" xml:space="preserve">
          <source>Validate that a required attribute exists.</source>
          <target state="translated">验证所需属性是否存在。</target>
        </trans-unit>
        <trans-unit id="f04da6cab263ff3bee6b08cace4a973dfc32e6c1" translate="yes" xml:space="preserve">
          <source>Validate that an attribute contains only alpha-numeric characters, dashes, and underscores.</source>
          <target state="translated">验证一个属性是否只包含字母数字字符、破折号和下划线。</target>
        </trans-unit>
        <trans-unit id="72d23bac999a5932fc758e21a78a5e2845978ce6" translate="yes" xml:space="preserve">
          <source>Validate that an attribute contains only alpha-numeric characters.</source>
          <target state="translated">验证一个属性是否只包含字母数字字符。</target>
        </trans-unit>
        <trans-unit id="e9fe65d0f707ad143edd22baff2365eff37d90d3" translate="yes" xml:space="preserve">
          <source>Validate that an attribute contains only alphabetic characters.</source>
          <target state="translated">验证一个属性是否只包含字母字符。</target>
        </trans-unit>
        <trans-unit id="343482576c652c62c3f758f2a8a84b67326b95c3" translate="yes" xml:space="preserve">
          <source>Validate that an attribute does not pass a regular expression check.</source>
          <target state="translated">验证一个属性没有通过正则表达式检查。</target>
        </trans-unit>
        <trans-unit id="528c4f3f775ec32d1a02f06f86ad0bedbe080102" translate="yes" xml:space="preserve">
          <source>Validate that an attribute exists even if not filled.</source>
          <target state="translated">即使没有填写,也要验证属性是否存在。</target>
        </trans-unit>
        <trans-unit id="59fc4f9414926244586f0a65035d9015f551562d" translate="yes" xml:space="preserve">
          <source>Validate that an attribute exists when all other attributes do not.</source>
          <target state="translated">当所有其他属性都不存在时,验证一个属性是否存在。</target>
        </trans-unit>
        <trans-unit id="7ae72d0c62fd66b764922dea73382cf9b3a9d7cc" translate="yes" xml:space="preserve">
          <source>Validate that an attribute exists when all other attributes exists.</source>
          <target state="translated">当其他属性都存在时,验证一个属性是否存在。</target>
        </trans-unit>
        <trans-unit id="a7d4b77cb04bb7993b55744bfbfb9c5a9121f630" translate="yes" xml:space="preserve">
          <source>Validate that an attribute exists when another attribute does not have a given value.</source>
          <target state="translated">当另一个属性没有给定值时,验证一个属性是否存在。</target>
        </trans-unit>
        <trans-unit id="e3d1586f41a80f5392410201a83d37a9cced3e5f" translate="yes" xml:space="preserve">
          <source>Validate that an attribute exists when another attribute does not.</source>
          <target state="translated">验证一个属性是否存在,而另一个属性不存在。</target>
        </trans-unit>
        <trans-unit id="6910ffad2ed3ac501d9ab9ba6c93157d14ad4f89" translate="yes" xml:space="preserve">
          <source>Validate that an attribute exists when another attribute has a given value.</source>
          <target state="translated">当另一个属性有给定值时,验证该属性是否存在。</target>
        </trans-unit>
        <trans-unit id="b18848b3e6ba7b069c97d7d249349ed0630d5cfa" translate="yes" xml:space="preserve">
          <source>Validate that an attribute exists when any other attribute exists.</source>
          <target state="translated">当任何其他属性存在时,验证一个属性是否存在。</target>
        </trans-unit>
        <trans-unit id="ef3dc2da8cb7d76ce0b640a4401ed6d3dc777054" translate="yes" xml:space="preserve">
          <source>Validate that an attribute has a given number of digits.</source>
          <target state="translated">验证一个属性是否有一个给定的数字。</target>
        </trans-unit>
        <trans-unit id="c25adb3ce0614ad4841b984aed069bc89daf9267" translate="yes" xml:space="preserve">
          <source>Validate that an attribute has a matching confirmation.</source>
          <target state="translated">验证一个属性是否有匹配的确认。</target>
        </trans-unit>
        <trans-unit id="78e4c4963c6610602a85d57f4f87027bdfa9f56d" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is a boolean.</source>
          <target state="translated">验证一个属性是布尔值。</target>
        </trans-unit>
        <trans-unit id="ef297e9dda78fca255cd04f6680efefd38de0e98" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is a string.</source>
          <target state="translated">验证一个属性是一个字符串。</target>
        </trans-unit>
        <trans-unit id="917ef08a453ae5c72f72992ab2adcf047729f5f2" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is a valid IP.</source>
          <target state="translated">验证一个属性是一个有效的IP。</target>
        </trans-unit>
        <trans-unit id="002b3a6923d6a6558705d6522dc586406140c54c" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is a valid IPv4.</source>
          <target state="translated">验证一个属性是一个有效的IPv4。</target>
        </trans-unit>
        <trans-unit id="81443e60479152cb9295ec1af294468b2ff78709" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is a valid IPv6.</source>
          <target state="translated">验证一个属性是有效的IPv6。</target>
        </trans-unit>
        <trans-unit id="8f537f1355b5fcd44027e9d4f1b106b8f1ea8172" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is a valid URL.</source>
          <target state="translated">验证一个属性是一个有效的URL。</target>
        </trans-unit>
        <trans-unit id="619b7bce58701df04f09f543200d3d93f5415b9e" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is a valid UUID.</source>
          <target state="translated">验证一个属性是一个有效的UUID。</target>
        </trans-unit>
        <trans-unit id="4cea5b6196d6fcd64b9c9c78609e744d9ef9686c" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is a valid date.</source>
          <target state="translated">验证一个属性是一个有效的日期。</target>
        </trans-unit>
        <trans-unit id="69de406e80d83d478d4ffc643d664935eb791d9e" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is a valid e-mail address.</source>
          <target state="translated">验证一个属性是一个有效的电子邮件地址。</target>
        </trans-unit>
        <trans-unit id="797b268481d712b46de1e235d3fc9a2de04fa53a" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is a valid timezone.</source>
          <target state="translated">验证一个属性是一个有效的时区。</target>
        </trans-unit>
        <trans-unit id="6408631ac8cfe3a1a98def64a84e4afc540e8bb6" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is an active URL.</source>
          <target state="translated">验证一个属性是一个活动的URL。</target>
        </trans-unit>
        <trans-unit id="ce8e0538d7ffc7023a95490c83b9fe970007ec61" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is an array.</source>
          <target state="translated">验证一个属性是一个数组。</target>
        </trans-unit>
        <trans-unit id="803717010ab309ed8d3cc551e176e4584906c4dd" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is an integer.</source>
          <target state="translated">验证一个属性是一个整数。</target>
        </trans-unit>
        <trans-unit id="2e0946185badb69b3adbf87c3fbf61a0abafaaba" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is between a given number of digits.</source>
          <target state="translated">验证一个属性是否在给定的数字之间。</target>
        </trans-unit>
        <trans-unit id="9be0fabb9bb58086041743aeaf2dedf2b9718d36" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is different from another attribute.</source>
          <target state="translated">验证一个属性与另一个属性是否不同。</target>
        </trans-unit>
        <trans-unit id="e663a2c5c85ab2612a48b0b4c0bf70e7d11619a4" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is equal to another date.</source>
          <target state="translated">验证一个属性是否等于另一个日期。</target>
        </trans-unit>
        <trans-unit id="3feaa754c65000f926bd8e4073b7024445588a3e" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is greater than another attribute.</source>
          <target state="translated">验证一个属性大于另一个属性。</target>
        </trans-unit>
        <trans-unit id="800ca0d2cf10da481e4165f16419d6ae6c5e5952" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is greater than or equal another attribute.</source>
          <target state="translated">验证一个属性大于或等于另一个属性。</target>
        </trans-unit>
        <trans-unit id="2742f5408d37a36fc6242e7d86d75c1e62792d4d" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is less than another attribute.</source>
          <target state="translated">验证一个属性小于另一个属性。</target>
        </trans-unit>
        <trans-unit id="caf6a3a079ce556bd86acaee877ac71b916a4715" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is less than or equal another attribute.</source>
          <target state="translated">验证一个属性小于或等于另一个属性。</target>
        </trans-unit>
        <trans-unit id="fb28b05b8f72a7b43101e797cc2643264b66ab9b" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is numeric.</source>
          <target state="translated">验证一个属性是否为数字。</target>
        </trans-unit>
        <trans-unit id="c8e5167bcea5859f503cb801c69f60f028a1aee9" translate="yes" xml:space="preserve">
          <source>Validate that an attribute matches a date format.</source>
          <target state="translated">验证一个属性是否符合日期格式。</target>
        </trans-unit>
        <trans-unit id="d76daf0f330118c6b2aa7427b4b1da2b505404eb" translate="yes" xml:space="preserve">
          <source>Validate that an attribute passes a regular expression check.</source>
          <target state="translated">验证一个属性是否通过了正则表达式检查。</target>
        </trans-unit>
        <trans-unit id="3a539f3f8586772f9fd67bffc1c95b62d8d3f105" translate="yes" xml:space="preserve">
          <source>Validate that an attribute was &quot;accepted&quot;.</source>
          <target state="translated">验证一个属性是否被 &quot;接受&quot;。</target>
        </trans-unit>
        <trans-unit id="214716c83b0d8ef48101601818e20150cf81439e" translate="yes" xml:space="preserve">
          <source>Validate that the current logged in user's password matches the given value.</source>
          <target state="translated">验证当前登录用户的密码是否符合给定值。</target>
        </trans-unit>
        <trans-unit id="0497e984636cc2b1a09153ebcaf9c91dc833ac08" translate="yes" xml:space="preserve">
          <source>Validate that the values of an attribute is in another attribute.</source>
          <target state="translated">验证一个属性的值是否在另一个属性中。</target>
        </trans-unit>
        <trans-unit id="e6d9e9c96da34104c09bdf7def6a6b29e8ad179f" translate="yes" xml:space="preserve">
          <source>Validate that two attributes match.</source>
          <target state="translated">验证两个属性是否匹配。</target>
        </trans-unit>
        <trans-unit id="e3620446f2ca1f3fd2eca3a72554a36095785f33" translate="yes" xml:space="preserve">
          <source>Validate the MIME type of a file is an image MIME type.</source>
          <target state="translated">验证文件的MIME类型是图像MIME类型。</target>
        </trans-unit>
        <trans-unit id="20d0e2474bb0af729d0be9b0f3da8607546ace69" translate="yes" xml:space="preserve">
          <source>Validate the MIME type of a file upload attribute is in a set of MIME types.</source>
          <target state="translated">验证文件上传属性的MIME类型是否在一组MIME类型中。</target>
        </trans-unit>
        <trans-unit id="4735a342c86e55fbaf6f547d236a4ecbe4e1a8c9" translate="yes" xml:space="preserve">
          <source>Validate the attribute ends with a given substring.</source>
          <target state="translated">验证属性是否以给定的子串结束。</target>
        </trans-unit>
        <trans-unit id="f1d6cb4266f5555fc71ac82e87b714a3efef1d28" translate="yes" xml:space="preserve">
          <source>Validate the attribute is a valid JSON string.</source>
          <target state="translated">验证属性是一个有效的JSON字符串。</target>
        </trans-unit>
        <trans-unit id="069770360d7bc9432f7161dabac97ae81fd3e6fb" translate="yes" xml:space="preserve">
          <source>Validate the attribute starts with a given substring.</source>
          <target state="translated">验证属性以给定的子串开始。</target>
        </trans-unit>
        <trans-unit id="094f2e7e7466c3b3e93038e2ecc51d3c78089a4e" translate="yes" xml:space="preserve">
          <source>Validate the class instance.</source>
          <target state="translated">验证类实例。</target>
        </trans-unit>
        <trans-unit id="d21701b21e598af31812a5f02aeae2fc9e40cfde" translate="yes" xml:space="preserve">
          <source>Validate the date is after a given date.</source>
          <target state="translated">验证日期是在给定日期之后。</target>
        </trans-unit>
        <trans-unit id="d2c308a3f37b8b513d1ae686ec9d1848e706ac18" translate="yes" xml:space="preserve">
          <source>Validate the date is before a given date.</source>
          <target state="translated">验证日期是在给定日期之前。</target>
        </trans-unit>
        <trans-unit id="08cccbea395497c23ee52b3ca3ead2731090f2a1" translate="yes" xml:space="preserve">
          <source>Validate the date is before or equal a given date.</source>
          <target state="translated">验证日期是在给定日期之前或等于给定日期。</target>
        </trans-unit>
        <trans-unit id="1383019b7afaf43a658a091823aed663aa6dbbbd" translate="yes" xml:space="preserve">
          <source>Validate the date is equal or after a given date.</source>
          <target state="translated">验证日期等于或超过给定日期。</target>
        </trans-unit>
        <trans-unit id="6e0ae6e12f0427b9ede930f5818916eb1d993090" translate="yes" xml:space="preserve">
          <source>Validate the dimensions of an image matches the given values.</source>
          <target state="translated">验证图像的尺寸是否符合给定值。</target>
        </trans-unit>
        <trans-unit id="3256a9ae08572e6cb6c4fb4f05a59c2263fa2591" translate="yes" xml:space="preserve">
          <source>Validate the email for the given request.</source>
          <target state="translated">验证给定请求的电子邮件。</target>
        </trans-unit>
        <trans-unit id="09317486b20a4311e63713a86fa34d0a5e4c3e81" translate="yes" xml:space="preserve">
          <source>Validate the existence of an attribute value in a database table.</source>
          <target state="translated">验证数据库表中一个属性值的存在。</target>
        </trans-unit>
        <trans-unit id="b57c98634df5e8051a1f41f40f38d512056c788e" translate="yes" xml:space="preserve">
          <source>Validate the given attribute is filled if it is present.</source>
          <target state="translated">如果给定的属性存在,则验证其是否被填充。</target>
        </trans-unit>
        <trans-unit id="5cfe149dddd63fa3b2492865a1f39a47d6c2dad5" translate="yes" xml:space="preserve">
          <source>Validate the given class instance.</source>
          <target state="translated">验证给定的类实例。</target>
        </trans-unit>
        <trans-unit id="3660f89a504538689f3c45669e1dd095fa7a901b" translate="yes" xml:space="preserve">
          <source>Validate the given data against the provided rules.</source>
          <target state="translated">根据提供的规则验证给定数据。</target>
        </trans-unit>
        <trans-unit id="ffdf88ff2af0273270f74150dc03f87346410085" translate="yes" xml:space="preserve">
          <source>Validate the given password reset token.</source>
          <target state="translated">验证给定的密码重置令牌。</target>
        </trans-unit>
        <trans-unit id="63727740ce5927e5def18a144f697d48a1213352" translate="yes" xml:space="preserve">
          <source>Validate the given request with the given rules.</source>
          <target state="translated">用给定的规则验证给定的请求。</target>
        </trans-unit>
        <trans-unit id="eafa4f3a58dd76f8787ca2d5a54e2c0a12045092" translate="yes" xml:space="preserve">
          <source>Validate the given value is a valid file.</source>
          <target state="translated">验证给定值是一个有效的文件。</target>
        </trans-unit>
        <trans-unit id="6a3174d73527340cc452ac07b0971673cfaebde5" translate="yes" xml:space="preserve">
          <source>Validate the guessed extension of a file upload is in a set of file extensions.</source>
          <target state="translated">验证上传文件的猜测扩展名是否在一组文件扩展名中。</target>
        </trans-unit>
        <trans-unit id="731f426adc01f941a4e923878af9bf8761dc583a" translate="yes" xml:space="preserve">
          <source>Validate the size of an attribute is between a set of values.</source>
          <target state="translated">验证一个属性的大小在一组值之间。</target>
        </trans-unit>
        <trans-unit id="ef99e0ecfba33c15ccde77b1af91ac175eb3bcfe" translate="yes" xml:space="preserve">
          <source>Validate the size of an attribute is greater than a minimum value.</source>
          <target state="translated">验证属性的大小是否大于最小值。</target>
        </trans-unit>
        <trans-unit id="d8a76feae4da54a55c9bf40196ca3592d3a18129" translate="yes" xml:space="preserve">
          <source>Validate the size of an attribute is less than a maximum value.</source>
          <target state="translated">验证属性的大小是否小于最大值。</target>
        </trans-unit>
        <trans-unit id="9cc9e9b58dfac3310ea4be7a22d7c6b456bdd57b" translate="yes" xml:space="preserve">
          <source>Validate the size of an attribute.</source>
          <target state="translated">验证属性的大小。</target>
        </trans-unit>
        <trans-unit id="4de2dad5038df71f5d1f6215011c8210c3282559" translate="yes" xml:space="preserve">
          <source>Validate the uniqueness of an attribute value on a given database table.</source>
          <target state="translated">验证给定数据库表上属性值的唯一性。</target>
        </trans-unit>
        <trans-unit id="de38fa8a655f8b5e50625c17a41dfeea1cf2a23a" translate="yes" xml:space="preserve">
          <source>Validate the user login request.</source>
          <target state="translated">验证用户登录请求。</target>
        </trans-unit>
        <trans-unit id="8c241a937c862bd3d5631ca459661d2e8dde74fa" translate="yes" xml:space="preserve">
          <source>Validate the value of an attribute is a multiple of a given value.</source>
          <target state="translated">验证一个属性的值是给定值的倍数。</target>
        </trans-unit>
        <trans-unit id="ebe65eabeb395f7b300063479ce1fcebed8a77c9" translate="yes" xml:space="preserve">
          <source>ValidatePostSize</source>
          <target state="translated">ValidatePostSize</target>
        </trans-unit>
        <trans-unit id="92bd9f078a7aa54cbfd9792ee811214cfd88639c" translate="yes" xml:space="preserve">
          <source>ValidatePostSize (Foundation\Http)</source>
          <target state="translated">ValidatePostSize (Foundation/Http)</target>
        </trans-unit>
        <trans-unit id="785c4f87ee49ded109f858c636de1b67a57e5ba9" translate="yes" xml:space="preserve">
          <source>ValidatePostSize::getPostMaxSize()</source>
          <target state="translated">ValidatePostSize::getPostMaxSize()</target>
        </trans-unit>
        <trans-unit id="ce2714ef0c280eb8a650cc2c484823120e6e7b0e" translate="yes" xml:space="preserve">
          <source>ValidatePostSize::handle()</source>
          <target state="translated">ValidatePostSize::handle()</target>
        </trans-unit>
        <trans-unit id="afc878921cac9b9f093e4550b344fbf95dcc3443" translate="yes" xml:space="preserve">
          <source>ValidateSignature</source>
          <target state="translated">ValidateSignature</target>
        </trans-unit>
        <trans-unit id="15ae3bafa217f181e654e04ece79a81cf1c10448" translate="yes" xml:space="preserve">
          <source>ValidateSignature (Routing\Middleware)</source>
          <target state="translated">ValidateSignature (Routing/Middleware)</target>
        </trans-unit>
        <trans-unit id="3d6f80ddfb2b22707b6eedb50d2343d46f1d51a4" translate="yes" xml:space="preserve">
          <source>ValidateSignature::handle()</source>
          <target state="translated">ValidateSignature::handle()</target>
        </trans-unit>
        <trans-unit id="75444607bba6453dbace639fe614c84c90652bc0" translate="yes" xml:space="preserve">
          <source>Validated</source>
          <target state="translated">Validated</target>
        </trans-unit>
        <trans-unit id="a1ef2d5c2c524e09ce3c10a46e7bbf44d7bbe886" translate="yes" xml:space="preserve">
          <source>Validated (Auth\Events)</source>
          <target state="translated">已验证(Auth\Events)</target>
        </trans-unit>
        <trans-unit id="c41c2c41f57eb8b83498386cfc1f9d93b2c6c1b4" translate="yes" xml:space="preserve">
          <source>Validated::__construct()</source>
          <target state="translated">Validated::__construct()</target>
        </trans-unit>
        <trans-unit id="15a564685a9be19b2555452b38bbeb7aa085d56c" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes</source>
          <target state="translated">ValidatesAttributes</target>
        </trans-unit>
        <trans-unit id="c2da878831cc17d046f3cfcae6dd4d9feaa41185" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes (Validation\Concerns)</source>
          <target state="translated">ValidatesAttributes (Validation/Concerns)</target>
        </trans-unit>
        <trans-unit id="f26a2829eb4c948a520201c9bc4d7c5aaa353ea0" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::allFailingRequired()</source>
          <target state="translated">ValidatesAttributes::allFailingRequired()</target>
        </trans-unit>
        <trans-unit id="17ab6463be9869ca7decd2725c86ae6804cbdceb" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::anyFailingRequired()</source>
          <target state="translated">ValidatesAttributes::anyFailingRequired()</target>
        </trans-unit>
        <trans-unit id="b4ea82aee8dd7955d918c7575049dd4b50815cce" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::checkDateTimeOrder()</source>
          <target state="translated">ValidatesAttributes::checkDateTimeOrder()</target>
        </trans-unit>
        <trans-unit id="36b3f6be1ccd7c4a65473959921e9e6c2f980799" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::compare()</source>
          <target state="translated">ValidatesAttributes::compare()</target>
        </trans-unit>
        <trans-unit id="9d6ef883fb6aab2c4fd83f3a574c5317da9e0537" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::compareDates()</source>
          <target state="translated">ValidatesAttributes::compareDates()</target>
        </trans-unit>
        <trans-unit id="2ecdab7f49465a08395a49c363503ae61a364390" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::convertValuesToBoolean()</source>
          <target state="translated">ValidatesAttributes::convertValuesToBoolean()</target>
        </trans-unit>
        <trans-unit id="26bd520421a9cfef6922b12577a7d7faa25420cd" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::convertValuesToNull()</source>
          <target state="translated">ValidatesAttributes::convertValuesToNull()</target>
        </trans-unit>
        <trans-unit id="3281493509b34c2dac4009357805683d4b43b8f2" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::extractDistinctValues()</source>
          <target state="translated">ValidatesAttributes::extractDistinctValues()</target>
        </trans-unit>
        <trans-unit id="9755ba6b5238da9ef1ba9e1f70786033f5868155" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::failsBasicDimensionChecks()</source>
          <target state="translated">ValidatesAttributes::failsBasicDimensionChecks()</target>
        </trans-unit>
        <trans-unit id="b8a65b66e00f6b810b38658964776cc50657d1de" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::failsRatioCheck()</source>
          <target state="translated">ValidatesAttributes::failsRatioCheck()</target>
        </trans-unit>
        <trans-unit id="53f16e6a6081e9637ef6829aec91a770c6e22e34" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::getDateFormat()</source>
          <target state="translated">ValidatesAttributes::getDateFormat()</target>
        </trans-unit>
        <trans-unit id="caa5d0f93765937c0c1368dc0092fa540a7e4b10" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::getDateTime()</source>
          <target state="translated">ValidatesAttributes::getDateTime()</target>
        </trans-unit>
        <trans-unit id="ea75627158edec50e9d016c73b7becaa7e58ec13" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::getDateTimeWithOptionalFormat()</source>
          <target state="translated">ValidatesAttributes::getDateTimeWithOptionalFormat()</target>
        </trans-unit>
        <trans-unit id="bca1c394d5b0ff34d91dd10bc7841344e4ac9b71" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::getDateTimestamp()</source>
          <target state="translated">ValidatesAttributes::getDateTimestamp()</target>
        </trans-unit>
        <trans-unit id="0d5fb1c4ce501f52c739b45e8be65320ce0c42e1" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::getDistinctValues()</source>
          <target state="translated">ValidatesAttributes::getDistinctValues()</target>
        </trans-unit>
        <trans-unit id="926b2d79fbb05c380c51b3c3a37eff4d2ba44b99" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::getExistCount()</source>
          <target state="translated">ValidatesAttributes::getExistCount()</target>
        </trans-unit>
        <trans-unit id="f59abd6262f05833531c2e1033b06bcbc244b6dd" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::getExtraConditions()</source>
          <target state="translated">ValidatesAttributes::getExtraConditions()</target>
        </trans-unit>
        <trans-unit id="c52e25b945d3eb212e97b4affb4d3cac676c8f25" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::getQueryColumn()</source>
          <target state="translated">ValidatesAttributes::getQueryColumn()</target>
        </trans-unit>
        <trans-unit id="8455c55feabd6d7ce068a01e09c2c6b8486ae69b" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::getSize()</source>
          <target state="translated">ValidatesAttributes::getSize()</target>
        </trans-unit>
        <trans-unit id="cceefab8c9b2d78f2f606ee90fb219980224da07" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::getUniqueExtra()</source>
          <target state="translated">ValidatesAttributes::getUniqueExtra()</target>
        </trans-unit>
        <trans-unit id="3fe4af36e6c262b3fe29811105062a2795c4dbb4" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::getUniqueIds()</source>
          <target state="translated">ValidatesAttributes::getUniqueIds()</target>
        </trans-unit>
        <trans-unit id="c5eefe1190bfed327c0a31ea17d8d187c18c3957" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::guessColumnForQuery()</source>
          <target state="translated">ValidatesAttributes::guessColumnForQuery()</target>
        </trans-unit>
        <trans-unit id="e7449d6991f3b58e1ec312a92db888b445e44425" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::isSameType()</source>
          <target state="translated">ValidatesAttributes::isSameType()</target>
        </trans-unit>
        <trans-unit id="a155e9709c503da5a1b7e6a8aef90390e9558fcc" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::isTestingRelativeDateTime()</source>
          <target state="translated">ValidatesAttributes::isTestingRelativeDateTime()</target>
        </trans-unit>
        <trans-unit id="0c73aa79a25c0b52ca96aab466ed860a9f4aae12" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::isValidFileInstance()</source>
          <target state="translated">ValidatesAttributes::isValidFileInstance()</target>
        </trans-unit>
        <trans-unit id="2e7951962e3ab51b64a56f4c2ef90c52fab55c86" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::parseNamedParameters()</source>
          <target state="translated">ValidatesAttributes::parseNamedParameters()</target>
        </trans-unit>
        <trans-unit id="313db3e4762d349a8645e5e253080597a0e3269e" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::parseTable()</source>
          <target state="translated">ValidatesAttributes::parseTable()</target>
        </trans-unit>
        <trans-unit id="ee8b24b967f1c30b09de39f3bc3de07fcfc1d8dd" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::prepareUniqueId()</source>
          <target state="translated">ValidatesAttributes::prepareUniqueId()</target>
        </trans-unit>
        <trans-unit id="f98ec13ef9fc729e83b949a3c3959ec266cb777b" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::prepareValuesAndOther()</source>
          <target state="translated">ValidatesAttributes::prepareValuesAndOther()</target>
        </trans-unit>
        <trans-unit id="cdd183c2c64bf139e4dae5056616c2b65dcc74f9" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::requireParameterCount()</source>
          <target state="translated">ValidatesAttributes::requireParameterCount()</target>
        </trans-unit>
        <trans-unit id="bcb5dd1a9bb118e26d5f232b2d1dc2964a585dbb" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::requireSameType()</source>
          <target state="translated">ValidatesAttributes::requireSameType()</target>
        </trans-unit>
        <trans-unit id="0d13a5838a4f0c4da19adb3fd2f5bf2390ad77cc" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::shouldBeNumeric()</source>
          <target state="translated">ValidatesAttributes::shouldBeNumeric()</target>
        </trans-unit>
        <trans-unit id="b85ae9ecaf5bfcf31309841360332b1c8b1c8b0d" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::shouldBlockPhpUpload()</source>
          <target state="translated">ValidatesAttributes::shouldBlockPhpUpload()</target>
        </trans-unit>
        <trans-unit id="fb265ae64eae56feb408d97f16b4feb7c582c644" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateAccepted()</source>
          <target state="translated">ValidatesAttributes::validateAccepted()</target>
        </trans-unit>
        <trans-unit id="c87931bddfb6a2f076925a4e18bc1e0910f42c6d" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateActiveUrl()</source>
          <target state="translated">ValidatesAttributes::validateActiveUrl()</target>
        </trans-unit>
        <trans-unit id="9cf63454c83006cd41430505eff7f202fc032510" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateAfter()</source>
          <target state="translated">ValidatesAttributes::validateAfter()</target>
        </trans-unit>
        <trans-unit id="3056108db86af1490a780f054255d83d296f54a4" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateAfterOrEqual()</source>
          <target state="translated">ValidatesAttributes::validateAfterOrEqual()</target>
        </trans-unit>
        <trans-unit id="13306c88f3ec881df7cb477c3be669dddfde7cc3" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateAlpha()</source>
          <target state="translated">ValidatesAttributes::validateAlpha()</target>
        </trans-unit>
        <trans-unit id="4747544e4302a6d6faaa18284256d8dca0d12930" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateAlphaDash()</source>
          <target state="translated">ValidatesAttributes::validateAlphaDash()</target>
        </trans-unit>
        <trans-unit id="179edefc28013c221b375bebe12a4b737637fce7" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateAlphaNum()</source>
          <target state="translated">ValidatesAttributes::validateAlphaNum()</target>
        </trans-unit>
        <trans-unit id="35575d7897a1687dbea2c9f4c592b83a5f60dd43" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateArray()</source>
          <target state="translated">ValidatesAttributes::validateArray()</target>
        </trans-unit>
        <trans-unit id="ca04e58627c5ed01c71cd5901386a1e3f4e39fdf" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateBail()</source>
          <target state="translated">ValidatesAttributes::validateBail()</target>
        </trans-unit>
        <trans-unit id="98a0b2dd0a7ceacf8b5581df347c661f68655ee8" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateBefore()</source>
          <target state="translated">ValidatesAttributes::validateBefore()</target>
        </trans-unit>
        <trans-unit id="4c15f1f2d71d6f89df4030f93d8db0a3ecf9cc21" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateBeforeOrEqual()</source>
          <target state="translated">ValidatesAttributes::validateBeforeOrEqual()</target>
        </trans-unit>
        <trans-unit id="b034f66d1277663bc78b1845a81a3eeb33d6c659" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateBetween()</source>
          <target state="translated">ValidatesAttributes::validateBetween()</target>
        </trans-unit>
        <trans-unit id="b219e2fbe777d8e86b558fa850073798abd251bb" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateBoolean()</source>
          <target state="translated">ValidatesAttributes::validateBoolean()</target>
        </trans-unit>
        <trans-unit id="2dc8ea025cbc8d856957aea0c5549f0b0b5da787" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateConfirmed()</source>
          <target state="translated">ValidatesAttributes::validateConfirmed()</target>
        </trans-unit>
        <trans-unit id="e254bff7405cb3d982d25ef153a5cd2d2a896a9a" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateDate()</source>
          <target state="translated">ValidatesAttributes::validateDate()</target>
        </trans-unit>
        <trans-unit id="544bc49f8febf9d72c4ec18536f98c0a6f839e1d" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateDateEquals()</source>
          <target state="translated">ValidatesAttributes::validateDateEquals()</target>
        </trans-unit>
        <trans-unit id="7d940bcf4d3615819f8f922bd36723b3eb0a5d6b" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateDateFormat()</source>
          <target state="translated">ValidatesAttributes::validateDateFormat()</target>
        </trans-unit>
        <trans-unit id="152be1cad8c8ae7404d166e8ee7b14f06937a348" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateDifferent()</source>
          <target state="translated">ValidatesAttributes::validateDifferent()</target>
        </trans-unit>
        <trans-unit id="a99d5ef40bf60b4794a19274b96ffebd235918d5" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateDigits()</source>
          <target state="translated">ValidatesAttributes::validateDigits()</target>
        </trans-unit>
        <trans-unit id="3117683274fdc9599428dca5febe4b55b47412e7" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateDigitsBetween()</source>
          <target state="translated">ValidatesAttributes::validateDigitsBetween()</target>
        </trans-unit>
        <trans-unit id="ad641c00870bc9c718ad875a9fbb3124bea942c6" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateDimensions()</source>
          <target state="translated">ValidatesAttributes::validateDimensions()</target>
        </trans-unit>
        <trans-unit id="032d50039ab84604f989aa7bcce2f07eda5286c6" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateDistinct()</source>
          <target state="translated">ValidatesAttributes::validateDistinct()</target>
        </trans-unit>
        <trans-unit id="99e3429d1b02317737400ed6a351bc4ec2bab7ca" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateEmail()</source>
          <target state="translated">ValidatesAttributes::validateEmail()</target>
        </trans-unit>
        <trans-unit id="f9e60d6180cb4d20186c1b498a72d647d2973e9f" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateEndsWith()</source>
          <target state="translated">ValidatesAttributes::validateEndsWith()</target>
        </trans-unit>
        <trans-unit id="3269ae3af0f30561fcdd5ebe257cc39cfb060635" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateExcludeIf()</source>
          <target state="translated">ValidatesAttributes::validateExcludeIf()</target>
        </trans-unit>
        <trans-unit id="a5c4e6ba4161a32ba1f7aa7fbef4fa19bacf0c80" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateExcludeUnless()</source>
          <target state="translated">ValidatesAttributes::validateExcludeUnless()</target>
        </trans-unit>
        <trans-unit id="22216f83687e2b6fc60403a832cd6227fb18d101" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateExcludeWithout()</source>
          <target state="translated">ValidatesAttributes::validateExcludeWithout()</target>
        </trans-unit>
        <trans-unit id="9588b6001d8ef93fec693d3ed14c4ae6adf97ada" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateExists()</source>
          <target state="translated">ValidatesAttributes::validateExists()</target>
        </trans-unit>
        <trans-unit id="a0bfd3226e2644da8585cf113b09b2c1a2eeb7e3" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateFile()</source>
          <target state="translated">ValidatesAttributes::validateFile()</target>
        </trans-unit>
        <trans-unit id="9c0f1429368dcf05a8df3c8ee6e40499948fb023" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateFilled()</source>
          <target state="translated">ValidatesAttributes::validateFilled()</target>
        </trans-unit>
        <trans-unit id="9b4e9f6e2a47f7f65d950a900ebb383353b384b3" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateGt()</source>
          <target state="translated">ValidatesAttributes::validateGt()</target>
        </trans-unit>
        <trans-unit id="13ba7fa1cd8c3e233c52f75d9f47289de7f987c9" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateGte()</source>
          <target state="translated">ValidatesAttributes::validateGte()</target>
        </trans-unit>
        <trans-unit id="72c6c145fdaeee7e546e8cfdd2ee95f78b7faece" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateImage()</source>
          <target state="translated">ValidatesAttributes::validateImage()</target>
        </trans-unit>
        <trans-unit id="c851a75a89f0e58991ca4c32567a9725bb8c91c2" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateIn()</source>
          <target state="translated">ValidatesAttributes::validateIn()</target>
        </trans-unit>
        <trans-unit id="c9cf7aa36bb6d0c11a492a9543064154d8a7482b" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateInArray()</source>
          <target state="translated">ValidatesAttributes::validateInArray()</target>
        </trans-unit>
        <trans-unit id="8543936699e4126458a989d337713b544f546b06" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateInteger()</source>
          <target state="translated">ValidatesAttributes::validateInteger()</target>
        </trans-unit>
        <trans-unit id="d291f469bf1aec308ee24c46d6ba0c9c4c10b931" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateIp()</source>
          <target state="translated">ValidatesAttributes::validateIp()</target>
        </trans-unit>
        <trans-unit id="819ffe6dc31a9afc0ea9e1dff2a89db682ec7b4d" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateIpv4()</source>
          <target state="translated">ValidatesAttributes::validateIpv4()</target>
        </trans-unit>
        <trans-unit id="4c4e32702f18f5a821ae0769351b7ef892f8ff0c" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateIpv6()</source>
          <target state="translated">ValidatesAttributes::validateIpv6()</target>
        </trans-unit>
        <trans-unit id="06a81f5a919432b01dd535f7d9b99f141d6d723b" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateJson()</source>
          <target state="translated">ValidatesAttributes::validateJson()</target>
        </trans-unit>
        <trans-unit id="cb5bf08eb2c8df8949b434cebbc1543dab8bf1e6" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateLt()</source>
          <target state="translated">ValidatesAttributes::validateLt()</target>
        </trans-unit>
        <trans-unit id="88d78fe29f6ac523e756ae962df9aa9abba815f9" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateLte()</source>
          <target state="translated">ValidatesAttributes::validateLte()</target>
        </trans-unit>
        <trans-unit id="1385baff2fe83e3de5283fba0cb9c77782729aeb" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateMax()</source>
          <target state="translated">ValidatesAttributes::validateMax()</target>
        </trans-unit>
        <trans-unit id="505c9f683890eef9a7c5ef3fbdc92a35d27f0db1" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateMimes()</source>
          <target state="translated">ValidatesAttributes::validateMimes()</target>
        </trans-unit>
        <trans-unit id="a95fb3ba2981c6c221afae864c64e58c0a8ec067" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateMimetypes()</source>
          <target state="translated">ValidatesAttributes::validateMimetypes()</target>
        </trans-unit>
        <trans-unit id="dc961644487cb442024adaabb77563d02b8a494b" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateMin()</source>
          <target state="translated">ValidatesAttributes::validateMin()</target>
        </trans-unit>
        <trans-unit id="43dc8f0aa309acfae1c55fe1f78cd2ff870945a1" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateMultipleOf()</source>
          <target state="translated">ValidatesAttributes::validateMultipleOf()</target>
        </trans-unit>
        <trans-unit id="f5bc035770e261fcd54fd8f8cfb01c95199383e0" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateNotIn()</source>
          <target state="translated">ValidatesAttributes::validateNotIn()</target>
        </trans-unit>
        <trans-unit id="ac4723039d23b91d4352f60c3fed4cc6b9bb1b55" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateNotRegex()</source>
          <target state="translated">ValidatesAttributes::validateNotRegex()</target>
        </trans-unit>
        <trans-unit id="376978bdd35c4e52b342505163f7f860c39ba418" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateNullable()</source>
          <target state="translated">ValidatesAttributes::validateNullable()</target>
        </trans-unit>
        <trans-unit id="86c84b9d951f1bb91a41049c228b4d352e07b967" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateNumeric()</source>
          <target state="translated">ValidatesAttributes::validateNumeric()</target>
        </trans-unit>
        <trans-unit id="592182a7a458be6b8a8e61bb2aed0dbfe3d5b7d5" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validatePassword()</source>
          <target state="translated">ValidatesAttributes::validatePassword()</target>
        </trans-unit>
        <trans-unit id="c4e8973fa41f090d021cd8e2f08f0600ae8fe3dd" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validatePresent()</source>
          <target state="translated">ValidatesAttributes::validatePresent()</target>
        </trans-unit>
        <trans-unit id="b9ed19d61ba5cfae1a5b66d04ef25095b7417918" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateRegex()</source>
          <target state="translated">ValidatesAttributes::validateRegex()</target>
        </trans-unit>
        <trans-unit id="93b9483de8cb19e716c9b2f981cdacf987665b18" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateRequired()</source>
          <target state="translated">ValidatesAttributes::validateRequired()</target>
        </trans-unit>
        <trans-unit id="3c96edce9f256e20fdabb4c53eca4a9b7bc16da4" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateRequiredIf()</source>
          <target state="translated">ValidatesAttributes::validateRequiredIf()</target>
        </trans-unit>
        <trans-unit id="df14ccbac1f6968f91992ea832fedb75710c218d" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateRequiredUnless()</source>
          <target state="translated">ValidatesAttributes::validateRequiredUnless()</target>
        </trans-unit>
        <trans-unit id="6625f42f8ac126be9f4e250b6b487ff3f42257c6" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateRequiredWith()</source>
          <target state="translated">ValidatesAttributes::validateRequiredWith()</target>
        </trans-unit>
        <trans-unit id="d6af8c8b502420f2d63168ce305b0185e424e831" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateRequiredWithAll()</source>
          <target state="translated">ValidatesAttributes::validateRequiredWithAll()</target>
        </trans-unit>
        <trans-unit id="516354e47c82f19903911d2d0a54947d6a98afdb" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateRequiredWithout()</source>
          <target state="translated">ValidatesAttributes::validateRequiredWithout()</target>
        </trans-unit>
        <trans-unit id="dba63898509349c82911d1755cca577c5d9921c9" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateRequiredWithoutAll()</source>
          <target state="translated">ValidatesAttributes::validateRequiredWithoutAll()</target>
        </trans-unit>
        <trans-unit id="df2d92d4c290fe822d31bec9c262872e61139dc7" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateSame()</source>
          <target state="translated">ValidatesAttributes::validateSame()</target>
        </trans-unit>
        <trans-unit id="a757fa81a30699fb11a5951771a326ba238107c6" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateSize()</source>
          <target state="translated">ValidatesAttributes::validateSize()</target>
        </trans-unit>
        <trans-unit id="79dcee6e817014cca8bb1f6290fe530003761a4d" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateSometimes()</source>
          <target state="translated">ValidatesAttributes::validateSometimes()</target>
        </trans-unit>
        <trans-unit id="788ba8e5b0240e3da85815432bbae103e411c551" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateStartsWith()</source>
          <target state="translated">ValidatesAttributes::validateStartsWith()</target>
        </trans-unit>
        <trans-unit id="751232d79c720436f26c06749e3b8058000be3fb" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateString()</source>
          <target state="translated">ValidatesAttributes::validateString()</target>
        </trans-unit>
        <trans-unit id="26e84c4b92f57ae5eee015ff2e2aa99b693247b2" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateTimezone()</source>
          <target state="translated">ValidatesAttributes::validateTimezone()</target>
        </trans-unit>
        <trans-unit id="947212bbac1c5ea9b2d210e8704b3b5958ca0d34" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateUnique()</source>
          <target state="translated">ValidatesAttributes::validateUnique()</target>
        </trans-unit>
        <trans-unit id="4316f8e2be1cf266bf11de489843b05f831b8b13" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateUrl()</source>
          <target state="translated">ValidatesAttributes::validateUrl()</target>
        </trans-unit>
        <trans-unit id="7a09356834e14b14774e34cc03804c367ddd1733" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateUuid()</source>
          <target state="translated">ValidatesAttributes::validateUuid()</target>
        </trans-unit>
        <trans-unit id="dc4e00c068a8796f6dcd067679a6b471ff5cedfd" translate="yes" xml:space="preserve">
          <source>ValidatesRequests</source>
          <target state="translated">ValidatesRequests</target>
        </trans-unit>
        <trans-unit id="c7313f87e451a4fed617cfecb6c360020c54e4f9" translate="yes" xml:space="preserve">
          <source>ValidatesRequests (Foundation\Validation)</source>
          <target state="translated">ValidatesRequests (Foundation/Validation)</target>
        </trans-unit>
        <trans-unit id="d7aa60a5c48dabb9207ddfe5cd5080de6c2faec5" translate="yes" xml:space="preserve">
          <source>ValidatesRequests::getValidationFactory()</source>
          <target state="translated">ValidatesRequests::getValidationFactory()</target>
        </trans-unit>
        <trans-unit id="bf943b1ea7666b2e346af49da9d27ffb566683d4" translate="yes" xml:space="preserve">
          <source>ValidatesRequests::validate()</source>
          <target state="translated">ValidatesRequests::validate()</target>
        </trans-unit>
        <trans-unit id="dc0a77f883907caa6346b31aa02594e835a999f1" translate="yes" xml:space="preserve">
          <source>ValidatesRequests::validateWith()</source>
          <target state="translated">ValidatesRequests::validateWith()</target>
        </trans-unit>
        <trans-unit id="eaad482e5b4fdd3613dd02038395f3271e68eab4" translate="yes" xml:space="preserve">
          <source>ValidatesRequests::validateWithBag()</source>
          <target state="translated">ValidatesRequests::validateWithBag()</target>
        </trans-unit>
        <trans-unit id="36d14d9e65e3d3bb292e77b97d10971dfaa0eef5" translate="yes" xml:space="preserve">
          <source>ValidatesWhenResolved</source>
          <target state="translated">ValidatesWhenResolved</target>
        </trans-unit>
        <trans-unit id="58c723e903ed899e23a0b50054de836a970d4963" translate="yes" xml:space="preserve">
          <source>ValidatesWhenResolved (Contracts)</source>
          <target state="translated">ValidatesWhenResolved (合同)</target>
        </trans-unit>
        <trans-unit id="2f6a1b408ae12ea348c7ca3acaadd11ece13b70c" translate="yes" xml:space="preserve">
          <source>ValidatesWhenResolved::validateResolved()</source>
          <target state="translated">ValidatesWhenResolved::validateResolved()</target>
        </trans-unit>
        <trans-unit id="aa59a86ea9bada8b6bea60bd9bb399421b0fbfc7" translate="yes" xml:space="preserve">
          <source>ValidatesWhenResolvedTrait</source>
          <target state="translated">ValidatesWhenResolvedTrait</target>
        </trans-unit>
        <trans-unit id="a81f355a3fb20177fa52fa2d8681ad008df73849" translate="yes" xml:space="preserve">
          <source>ValidatesWhenResolvedTrait (Validation)</source>
          <target state="translated">ValidatesWhenResolvedTrait (Validation)</target>
        </trans-unit>
        <trans-unit id="c1f993d41e2e43ba5fc223fb73128ffc5f48ad1d" translate="yes" xml:space="preserve">
          <source>ValidatesWhenResolvedTrait::failedAuthorization()</source>
          <target state="translated">ValidatesWhenResolvedTrait::failedAuthorization()</target>
        </trans-unit>
        <trans-unit id="342916d642613af3ffbb5442bea7ca11981405e0" translate="yes" xml:space="preserve">
          <source>ValidatesWhenResolvedTrait::failedValidation()</source>
          <target state="translated">ValidatesWhenResolvedTrait::failedValidation()</target>
        </trans-unit>
        <trans-unit id="f24db7e28f078c5d7cd9dc2d3b9ec7af380949b0" translate="yes" xml:space="preserve">
          <source>ValidatesWhenResolvedTrait::getValidatorInstance()</source>
          <target state="translated">ValidatesWhenResolvedTrait::getValidatorInstance()</target>
        </trans-unit>
        <trans-unit id="09e3d4c8c719fdbb74606212ff353c64ce10a24c" translate="yes" xml:space="preserve">
          <source>ValidatesWhenResolvedTrait::passedValidation()</source>
          <target state="translated">ValidatesWhenResolvedTrait::passedValidation()</target>
        </trans-unit>
        <trans-unit id="d79a5fc20ac340eb7118cde054ad9e5bd5eecd5e" translate="yes" xml:space="preserve">
          <source>ValidatesWhenResolvedTrait::passesAuthorization()</source>
          <target state="translated">ValidatesWhenResolvedTrait::passesAuthorization()</target>
        </trans-unit>
        <trans-unit id="1410346c3e4d95e25b60527831a5f72191d7b263" translate="yes" xml:space="preserve">
          <source>ValidatesWhenResolvedTrait::prepareForValidation()</source>
          <target state="translated">ValidatesWhenResolvedTrait::prepareForValidation()</target>
        </trans-unit>
        <trans-unit id="cb4a3ddd52e06806692d81e29a6f1f5981f17679" translate="yes" xml:space="preserve">
          <source>ValidatesWhenResolvedTrait::validateResolved()</source>
          <target state="translated">ValidatesWhenResolvedTrait::validateResolved()</target>
        </trans-unit>
        <trans-unit id="6150496ab8f08515e54f318062f96918132f6d84" translate="yes" xml:space="preserve">
          <source>Validating Arrays</source>
          <target state="translated">验证数组</target>
        </trans-unit>
        <trans-unit id="ac5e983d5791afb94472f53a83d93a9b149da9bd" translate="yes" xml:space="preserve">
          <source>Validating Signed Route Requests</source>
          <target state="translated">验证已签署的路径请求</target>
        </trans-unit>
        <trans-unit id="6ca99c365771929f7eb3b62133c00b9482307d2b" translate="yes" xml:space="preserve">
          <source>Validating Successful Uploads</source>
          <target state="translated">验证成功上传</target>
        </trans-unit>
        <trans-unit id="3172d5c82735caa5b592b69796a580cc233f01a4" translate="yes" xml:space="preserve">
          <source>Validating When Present</source>
          <target state="translated">验证当下</target>
        </trans-unit>
        <trans-unit id="84b9626d4dae03e41511b7c72e2c70065bf5ddbc" translate="yes" xml:space="preserve">
          <source>Validating array based form input fields doesn't have to be a pain. You may use &quot;dot notation&quot; to validate attributes within an array. For example, if the incoming HTTP request contains a &lt;code&gt;photos[profile]&lt;/code&gt; field, you may validate it like so:</source>
          <target state="translated">验证基于数组的表单输入字段不必费劲。您可以使用&amp;ldquo;点符号&amp;rdquo;来验证数组中的属性。例如，如果传入的HTTP请求包含 &lt;code&gt;photos[profile]&lt;/code&gt; 字段，则可以这样验证它：</target>
        </trans-unit>
        <trans-unit id="dd74d182c641e4c78502d863b44d0aeff1575e54" translate="yes" xml:space="preserve">
          <source>Validation</source>
          <target state="translated">Validation</target>
        </trans-unit>
        <trans-unit id="64663fbc455226f25626eb6e66c56aff0aefa7ac" translate="yes" xml:space="preserve">
          <source>Validation / Storage Customization</source>
          <target state="translated">验证/存储定制</target>
        </trans-unit>
        <trans-unit id="21e01fb19ea64886f4d64d5a6d8f7601d4d3b1b7" translate="yes" xml:space="preserve">
          <source>Validation Errors</source>
          <target state="translated">验证错误</target>
        </trans-unit>
        <trans-unit id="0600289276ade2488c6f3dd4f302a27cb9ba9013" translate="yes" xml:space="preserve">
          <source>Validation Quickstart</source>
          <target state="translated">验证快速入门</target>
        </trans-unit>
        <trans-unit id="dd3016277bd4a88df4607f705afe045c61fae853" translate="yes" xml:space="preserve">
          <source>ValidationData</source>
          <target state="translated">ValidationData</target>
        </trans-unit>
        <trans-unit id="2a74245b1ef9b77b941415400e5ac7bd92f9563d" translate="yes" xml:space="preserve">
          <source>ValidationException</source>
          <target state="translated">ValidationException</target>
        </trans-unit>
        <trans-unit id="746c009697ef1ccba2be12bbc057998a227a0617" translate="yes" xml:space="preserve">
          <source>ValidationRuleParser</source>
          <target state="translated">ValidationRuleParser</target>
        </trans-unit>
        <trans-unit id="c6111fc19b1d2bc9cd9b18bbc9890b5d20bff13e" translate="yes" xml:space="preserve">
          <source>ValidationRuleParser::parseParameters</source>
          <target state="translated">ValidationRuleParser::parseParameters</target>
        </trans-unit>
        <trans-unit id="9144d57180c146f2ac0c502d79f742d9d8e77279" translate="yes" xml:space="preserve">
          <source>ValidationServiceProvider</source>
          <target state="translated">ValidationServiceProvider</target>
        </trans-unit>
        <trans-unit id="39a878fb3195097e6c3030e570840bca668989de" translate="yes" xml:space="preserve">
          <source>Validation\Concerns</source>
          <target state="translated">Validation\Concerns</target>
        </trans-unit>
        <trans-unit id="817048f1cede9167f31e7cb1cf94bcde4df7235a" translate="yes" xml:space="preserve">
          <source>Validation\Rules</source>
          <target state="translated">Validation\Rules</target>
        </trans-unit>
        <trans-unit id="6e5b7a60980482ab39ae77b25489457b817517cd" translate="yes" xml:space="preserve">
          <source>Validator</source>
          <target state="translated">Validator</target>
        </trans-unit>
        <trans-unit id="f9f9d594159e3f2c3f8d28d216615dd715ca0095" translate="yes" xml:space="preserve">
          <source>Validator (Contracts)</source>
          <target state="translated">验证器(合同)</target>
        </trans-unit>
        <trans-unit id="09e0fe7247e34cdb327e39e585234667cab29469" translate="yes" xml:space="preserve">
          <source>Validator (Instance)</source>
          <target state="translated">验证器(实例)</target>
        </trans-unit>
        <trans-unit id="0b336addaaa239952fb415f7fd85918e65045df7" translate="yes" xml:space="preserve">
          <source>Validator (Support\Facades)</source>
          <target state="translated">验证器(支持\Facades)</target>
        </trans-unit>
        <trans-unit id="a5abb5e3af805ac643b776d8760f718835ae744b" translate="yes" xml:space="preserve">
          <source>Validator (Validation)</source>
          <target state="translated">验证器(验证)</target>
        </trans-unit>
        <trans-unit id="8bef6aa283c23efb213d9dffadf61beb55b65477" translate="yes" xml:space="preserve">
          <source>Validator::__call()</source>
          <target state="translated">Validator::__call()</target>
        </trans-unit>
        <trans-unit id="9bde66161ccef1cb590c46e57ac88ac2533bad14" translate="yes" xml:space="preserve">
          <source>Validator::__construct()</source>
          <target state="translated">Validator::__construct()</target>
        </trans-unit>
        <trans-unit id="1abd94f00b3df4694c659478ad29690e3fa0a57f" translate="yes" xml:space="preserve">
          <source>Validator::addCustomAttributes()</source>
          <target state="translated">Validator::addCustomAttributes()</target>
        </trans-unit>
        <trans-unit id="21594937b1ffe86b61baeaa36f41801ea5169136" translate="yes" xml:space="preserve">
          <source>Validator::addCustomValues()</source>
          <target state="translated">Validator::addCustomValues()</target>
        </trans-unit>
        <trans-unit id="a6dde80edd8816711bb5c3b2806786c0fac34b71" translate="yes" xml:space="preserve">
          <source>Validator::addDependentExtension()</source>
          <target state="translated">Validator::addDependentExtension()</target>
        </trans-unit>
        <trans-unit id="716ad347ca4d768925dde99fc3cd4d79cccfc6ad" translate="yes" xml:space="preserve">
          <source>Validator::addDependentExtensions()</source>
          <target state="translated">Validator::addDependentExtensions()</target>
        </trans-unit>
        <trans-unit id="c0df5c0e13371d977c068af45e2a497911bb143f" translate="yes" xml:space="preserve">
          <source>Validator::addExtension()</source>
          <target state="translated">Validator::addExtension()</target>
        </trans-unit>
        <trans-unit id="9eb5329d9f6d63d5f0359959849c3c333bd1efaa" translate="yes" xml:space="preserve">
          <source>Validator::addExtensions()</source>
          <target state="translated">Validator::addExtensions()</target>
        </trans-unit>
        <trans-unit id="026a5248f1127c432ba53ac2f495d3a73a3a4f5f" translate="yes" xml:space="preserve">
          <source>Validator::addFailure()</source>
          <target state="translated">Validator::addFailure()</target>
        </trans-unit>
        <trans-unit id="01a28e92d6873f4bb574bbe5c5f54cd3ac614511" translate="yes" xml:space="preserve">
          <source>Validator::addImplicitExtension()</source>
          <target state="translated">Validator::addImplicitExtension()</target>
        </trans-unit>
        <trans-unit id="f80a828b2833ef3a11050fa47855612257a51326" translate="yes" xml:space="preserve">
          <source>Validator::addImplicitExtensions()</source>
          <target state="translated">Validator::addImplicitExtensions()</target>
        </trans-unit>
        <trans-unit id="ba0488e8ba658aa57c58a61987f9f5a40bcd9532" translate="yes" xml:space="preserve">
          <source>Validator::addReplacer()</source>
          <target state="translated">Validator::addReplacer()</target>
        </trans-unit>
        <trans-unit id="d7d68509a66123cdb1024e383163792b3521a444" translate="yes" xml:space="preserve">
          <source>Validator::addReplacers()</source>
          <target state="translated">Validator::addReplacers()</target>
        </trans-unit>
        <trans-unit id="27230774d3beaa78570d935e27f429a1f9e0d73c" translate="yes" xml:space="preserve">
          <source>Validator::addRules()</source>
          <target state="translated">Validator::addRules()</target>
        </trans-unit>
        <trans-unit id="abe6805240f5ec8b4addcc8cddbfa3b06f5da284" translate="yes" xml:space="preserve">
          <source>Validator::after()</source>
          <target state="translated">Validator::after()</target>
        </trans-unit>
        <trans-unit id="fa54f2778577b1670233c279e5ae64fc39148337" translate="yes" xml:space="preserve">
          <source>Validator::attributes()</source>
          <target state="translated">Validator::attributes()</target>
        </trans-unit>
        <trans-unit id="d823cef5024bb45f86dcf960916bb5b47f043315" translate="yes" xml:space="preserve">
          <source>Validator::attributesThatHaveMessages()</source>
          <target state="translated">Validator::attributesThatHaveMessages()</target>
        </trans-unit>
        <trans-unit id="f681eee205ce9473a40d7962536b6c00c6e1233d" translate="yes" xml:space="preserve">
          <source>Validator::callClassBasedExtension()</source>
          <target state="translated">Validator::callClassBasedExtension()</target>
        </trans-unit>
        <trans-unit id="bdbc39c0af702f572d39b7e3118d2e8cd2251bed" translate="yes" xml:space="preserve">
          <source>Validator::callExtension()</source>
          <target state="translated">Validator::callExtension()</target>
        </trans-unit>
        <trans-unit id="6f0533704a007ebeef16357656dc7870bff7b77f" translate="yes" xml:space="preserve">
          <source>Validator::dependsOnOtherFields()</source>
          <target state="translated">Validator::dependsOnOtherFields()</target>
        </trans-unit>
        <trans-unit id="88882a126316707bfc806bd1b5fcde47feea3519" translate="yes" xml:space="preserve">
          <source>Validator::errors()</source>
          <target state="translated">Validator::errors()</target>
        </trans-unit>
        <trans-unit id="273def9425464059f65c1aaee06d223b09d3e930" translate="yes" xml:space="preserve">
          <source>Validator::excludeAttribute()</source>
          <target state="translated">Validator::excludeAttribute()</target>
        </trans-unit>
        <trans-unit id="9ebafc5e71635a883e8afc895d7242d6eba290a0" translate="yes" xml:space="preserve">
          <source>Validator::failed()</source>
          <target state="translated">Validator::failed()</target>
        </trans-unit>
        <trans-unit id="488b98eeb868d233b0c30d414a69069f5731ae79" translate="yes" xml:space="preserve">
          <source>Validator::fails()</source>
          <target state="translated">Validator::fails()</target>
        </trans-unit>
        <trans-unit id="25ae2bca3b6115498d3f7d42de77f69e69bbe1fe" translate="yes" xml:space="preserve">
          <source>Validator::getData()</source>
          <target state="translated">Validator::getData()</target>
        </trans-unit>
        <trans-unit id="551ec908fa41f84996feb5a92c20996c7c4dc170" translate="yes" xml:space="preserve">
          <source>Validator::getExplicitKeys()</source>
          <target state="translated">Validator::getExplicitKeys()</target>
        </trans-unit>
        <trans-unit id="a0303d5906e1bfc36bd833212aa3ba10f00e9652" translate="yes" xml:space="preserve">
          <source>Validator::getFacadeAccessor()</source>
          <target state="translated">Validator::getFacadeAccessor()</target>
        </trans-unit>
        <trans-unit id="45835e605f92b1382945edb67a836e63ddc4d03c" translate="yes" xml:space="preserve">
          <source>Validator::getMessageBag()</source>
          <target state="translated">Validator::getMessageBag()</target>
        </trans-unit>
        <trans-unit id="ba703451e38ca9b4eb087266d90da35d0ebf26ec" translate="yes" xml:space="preserve">
          <source>Validator::getPresenceVerifier()</source>
          <target state="translated">Validator::getPresenceVerifier()</target>
        </trans-unit>
        <trans-unit id="c7f0d2ed13b35efd587255a5fac70dc9203e0407" translate="yes" xml:space="preserve">
          <source>Validator::getPresenceVerifierFor()</source>
          <target state="translated">Validator::getPresenceVerifierFor()</target>
        </trans-unit>
        <trans-unit id="de2adaa115b4190ffd5e9641b37486d723ce95f3" translate="yes" xml:space="preserve">
          <source>Validator::getPrimaryAttribute()</source>
          <target state="translated">Validator::getPrimaryAttribute()</target>
        </trans-unit>
        <trans-unit id="7de7dbfc7c4805fc1a4d2cbaf55b32153d955f8a" translate="yes" xml:space="preserve">
          <source>Validator::getRule()</source>
          <target state="translated">Validator::getRule()</target>
        </trans-unit>
        <trans-unit id="32c0e39b6a0adfdc422299b3e86f75639259eda2" translate="yes" xml:space="preserve">
          <source>Validator::getRules()</source>
          <target state="translated">Validator::getRules()</target>
        </trans-unit>
        <trans-unit id="8e520480b181e3bc995f91f3852a72d39c677c0c" translate="yes" xml:space="preserve">
          <source>Validator::getTranslator()</source>
          <target state="translated">Validator::getTranslator()</target>
        </trans-unit>
        <trans-unit id="9aa84aebc80134eddc22d691525b5bd77647b5fb" translate="yes" xml:space="preserve">
          <source>Validator::getValue()</source>
          <target state="translated">Validator::getValue()</target>
        </trans-unit>
        <trans-unit id="d8131288f8329952e472cd70e4a22699ed44e310" translate="yes" xml:space="preserve">
          <source>Validator::hasNotFailedPreviousRuleIfPresenceRule()</source>
          <target state="translated">Validator::hasNotFailedPreviousRuleIfPresenceRule()</target>
        </trans-unit>
        <trans-unit id="62885d41cea839c09c03ee34c05e26b947e4d06d" translate="yes" xml:space="preserve">
          <source>Validator::hasRule()</source>
          <target state="translated">Validator::hasRule()</target>
        </trans-unit>
        <trans-unit id="0eca29b14b4ed23a63d5f393240708d56e00c501" translate="yes" xml:space="preserve">
          <source>Validator::invalid()</source>
          <target state="translated">Validator::invalid()</target>
        </trans-unit>
        <trans-unit id="ce101d689a80b1fa1056d68054fb1c4046505982" translate="yes" xml:space="preserve">
          <source>Validator::isImplicit()</source>
          <target state="translated">Validator::isImplicit()</target>
        </trans-unit>
        <trans-unit id="024c957288d4def17d50978022c0e415c37ff174" translate="yes" xml:space="preserve">
          <source>Validator::isNotNullIfMarkedAsNullable()</source>
          <target state="translated">Validator::isNotNullIfMarkedAsNullable()</target>
        </trans-unit>
        <trans-unit id="d58201bd96d770516c5006e4567fcf86bec0768d" translate="yes" xml:space="preserve">
          <source>Validator::isValidatable()</source>
          <target state="translated">Validator::isValidatable()</target>
        </trans-unit>
        <trans-unit id="908e4e0cc3b11ad728317e77aebef8f1885f5f73" translate="yes" xml:space="preserve">
          <source>Validator::messages()</source>
          <target state="translated">Validator::messages()</target>
        </trans-unit>
        <trans-unit id="058a94a4751640bbbbf1faada3bc723e76578cde" translate="yes" xml:space="preserve">
          <source>Validator::parseData()</source>
          <target state="translated">Validator::parseData()</target>
        </trans-unit>
        <trans-unit id="243e56898e63baf5d7f1eaec889fa497350ec157" translate="yes" xml:space="preserve">
          <source>Validator::passes()</source>
          <target state="translated">Validator::passes()</target>
        </trans-unit>
        <trans-unit id="7ba4e61f18f7580719f8c6cc4519c4fd7c9860dd" translate="yes" xml:space="preserve">
          <source>Validator::passesOptionalCheck()</source>
          <target state="translated">Validator::passesOptionalCheck()</target>
        </trans-unit>
        <trans-unit id="f36d3e2269c50e3feaa8898fe67261623b14d1a2" translate="yes" xml:space="preserve">
          <source>Validator::presentOrRuleIsImplicit()</source>
          <target state="translated">Validator::presentOrRuleIsImplicit()</target>
        </trans-unit>
        <trans-unit id="e92fdb3c657c6ed54727488be4b3140a0a8d73ba" translate="yes" xml:space="preserve">
          <source>Validator::removeAttribute()</source>
          <target state="translated">Validator::removeAttribute()</target>
        </trans-unit>
        <trans-unit id="ff795c4327fdb9332cc1ab298a6e995898d74bc7" translate="yes" xml:space="preserve">
          <source>Validator::replaceAsterisksInParameters()</source>
          <target state="translated">Validator::replaceAsterisksInParameters()</target>
        </trans-unit>
        <trans-unit id="f44780a0f916f0e6ff8419167e90c9e3a4d578b1" translate="yes" xml:space="preserve">
          <source>Validator::replacePlaceholderInString()</source>
          <target state="translated">Validator::replacePlaceholderInString()</target>
        </trans-unit>
        <trans-unit id="801a3ed45b0347f0ecf4d36feb973381e12d031e" translate="yes" xml:space="preserve">
          <source>Validator::replacePlaceholders()</source>
          <target state="translated">Validator::replacePlaceholders()</target>
        </trans-unit>
        <trans-unit id="175a6b8827fa8473e598f73a9547c26758e998be" translate="yes" xml:space="preserve">
          <source>Validator::setAttributeNames()</source>
          <target state="translated">Validator::setAttributeNames()</target>
        </trans-unit>
        <trans-unit id="cca0f5a13ad192478ff6811d3b9379a92a606317" translate="yes" xml:space="preserve">
          <source>Validator::setContainer()</source>
          <target state="translated">Validator::setContainer()</target>
        </trans-unit>
        <trans-unit id="7d73b27013df883b23bb5bae638b5ba9e668cfcf" translate="yes" xml:space="preserve">
          <source>Validator::setCustomMessages()</source>
          <target state="translated">Validator::setCustomMessages()</target>
        </trans-unit>
        <trans-unit id="1cde8278eec1d98a44e571080a49b782ae5741d1" translate="yes" xml:space="preserve">
          <source>Validator::setData()</source>
          <target state="translated">Validator::setData()</target>
        </trans-unit>
        <trans-unit id="9b90d18719adc21aa647d63e0c00de0c7c5ce9c9" translate="yes" xml:space="preserve">
          <source>Validator::setFallbackMessages()</source>
          <target state="translated">Validator::setFallbackMessages()</target>
        </trans-unit>
        <trans-unit id="5daa160b7cefd119a59718d1baa556ca8c2af8b2" translate="yes" xml:space="preserve">
          <source>Validator::setImplicitAttributesFormatter()</source>
          <target state="translated">Validator::setImplicitAttributesFormatter()</target>
        </trans-unit>
        <trans-unit id="307bf903285fad521eb54283c712361a5a065b97" translate="yes" xml:space="preserve">
          <source>Validator::setPresenceVerifier()</source>
          <target state="translated">Validator::setPresenceVerifier()</target>
        </trans-unit>
        <trans-unit id="6dd7618a7102607f8b0f32531337fb77a5771bc0" translate="yes" xml:space="preserve">
          <source>Validator::setRules()</source>
          <target state="translated">Validator::setRules()</target>
        </trans-unit>
        <trans-unit id="9030e63023d5174b967ff2a1cec338abbdbb1380" translate="yes" xml:space="preserve">
          <source>Validator::setTranslator()</source>
          <target state="translated">Validator::setTranslator()</target>
        </trans-unit>
        <trans-unit id="a3e36752cbe9dc5a3458be9da925e8f46cd6b6b1" translate="yes" xml:space="preserve">
          <source>Validator::setValueNames()</source>
          <target state="translated">Validator::setValueNames()</target>
        </trans-unit>
        <trans-unit id="8f391b1993669ab762ec40b8fa1295cae3a89bba" translate="yes" xml:space="preserve">
          <source>Validator::shouldBeExcluded()</source>
          <target state="translated">Validator::shouldBeExcluded()</target>
        </trans-unit>
        <trans-unit id="f75dcc3d8c3f533e2fb56de17fa9d57b8070e98e" translate="yes" xml:space="preserve">
          <source>Validator::shouldStopValidating()</source>
          <target state="translated">Validator::shouldStopValidating()</target>
        </trans-unit>
        <trans-unit id="30fdccd1bede135087c2b485275afe154c5a238c" translate="yes" xml:space="preserve">
          <source>Validator::sometimes()</source>
          <target state="translated">Validator::sometimes()</target>
        </trans-unit>
        <trans-unit id="2b03ca2fde9207c2edc07aeea2002841e071f8da" translate="yes" xml:space="preserve">
          <source>Validator::valid()</source>
          <target state="translated">Validator::valid()</target>
        </trans-unit>
        <trans-unit id="83093e901543a93a05fa8ae6b5e80bfddbbbfdfa" translate="yes" xml:space="preserve">
          <source>Validator::validate()</source>
          <target state="translated">Validator::validate()</target>
        </trans-unit>
        <trans-unit id="3f8fef8aee038d0909ae6f72fa46c8d0843eedc7" translate="yes" xml:space="preserve">
          <source>Validator::validateAttribute()</source>
          <target state="translated">Validator::validateAttribute()</target>
        </trans-unit>
        <trans-unit id="a314bfa45b3adf1256a77ec0f066e1b68c27d1fa" translate="yes" xml:space="preserve">
          <source>Validator::validateUsingCustomRule()</source>
          <target state="translated">Validator::validateUsingCustomRule()</target>
        </trans-unit>
        <trans-unit id="bb2984cd881777e14ae533f4707d6f78deebc9cb" translate="yes" xml:space="preserve">
          <source>Validator::validateWithBag()</source>
          <target state="translated">Validator::validateWithBag()</target>
        </trans-unit>
        <trans-unit id="61e22c307c152eff386d5c15ce9bcb799927108b" translate="yes" xml:space="preserve">
          <source>Validator::validated()</source>
          <target state="translated">Validator::validated()</target>
        </trans-unit>
        <trans-unit id="807e4053bc45088b15dc83ec9738651b61bfa267" translate="yes" xml:space="preserve">
          <source>ValidatorInterface</source>
          <target state="translated">ValidatorInterface</target>
        </trans-unit>
        <trans-unit id="59289c44d296d208a7e3dbb4618747129c7e86cd" translate="yes" xml:space="preserve">
          <source>ValidatorInterface (Routing\Matching)</source>
          <target state="translated">验证器接口(Routing/Matching)</target>
        </trans-unit>
        <trans-unit id="d2c6cf39d743bcf396be72a4c5516afd721d621e" translate="yes" xml:space="preserve">
          <source>ValidatorInterface::matches()</source>
          <target state="translated">ValidatorInterface::matches()</target>
        </trans-unit>
        <trans-unit id="1d8ccb2516de3489ebb8b2748614c95303b60f7e" translate="yes" xml:space="preserve">
          <source>Value Object Casting</source>
          <target state="translated">价值对象铸造</target>
        </trans-unit>
        <trans-unit id="12fbe14b21876e01b721ca8b147ccd3e14bef69f" translate="yes" xml:space="preserve">
          <source>ValuePrefix</source>
          <target state="translated">ValuePrefix</target>
        </trans-unit>
        <trans-unit id="72461ac8b6fbc994b5aef6bf388f203910dfe9f8" translate="yes" xml:space="preserve">
          <source>ValuePrefix::create()</source>
          <target state="translated">ValuePrefix::create()</target>
        </trans-unit>
        <trans-unit id="a806f567a0da9636c575eb6b626d06a5efcaee5b" translate="yes" xml:space="preserve">
          <source>ValuePrefix::remove()</source>
          <target state="translated">ValuePrefix::remove()</target>
        </trans-unit>
        <trans-unit id="5c5a080a2368930bf1b1117949e48fda2eccab46" translate="yes" xml:space="preserve">
          <source>Vanilla JS</source>
          <target state="translated">香草味JS</target>
        </trans-unit>
        <trans-unit id="ac018db1f7b00972061adff843d37497d8ee153c" translate="yes" xml:space="preserve">
          <source>Variables</source>
          <target state="translated">Variables</target>
        </trans-unit>
        <trans-unit id="846e7a77bc3a6be34611b593969a1111633f94e2" translate="yes" xml:space="preserve">
          <source>Variables that are dynamically passed to mailable views &lt;a href=&quot;https://github.com/laravel/framework/pull/24232&quot;&gt;are now automatically &quot;camel cased&quot;&lt;/a&gt;, which makes mailable dynamic variable behavior consistent with dynamic view variables. Dynamic mailable variables are not a documented Laravel feature, so likelihood of impact to your application is low.</source>
          <target state="translated">动态传递给可邮寄视图的变量&lt;a href=&quot;https://github.com/laravel/framework/pull/24232&quot;&gt;现在会自动进行&amp;ldquo;驼峰处理&amp;rdquo;&lt;/a&gt;，这使可邮寄动态变量的行为与动态视图变量一致。动态可邮寄变量不是Laravel记录的功能，因此对您的应用程序影响的可能性很小。</target>
        </trans-unit>
        <trans-unit id="1b28ca470fa7964b7fb6dd599c8350918ba34169" translate="yes" xml:space="preserve">
          <source>Variadic Tag Dependencies</source>
          <target state="translated">多重标签依赖性</target>
        </trans-unit>
        <trans-unit id="27ea8d3e9f119ebc625127ec1eae5ffef60fc7ff" translate="yes" xml:space="preserve">
          <source>Vendor Extraction</source>
          <target state="translated">供应商提取</target>
        </trans-unit>
        <trans-unit id="60aa156aec8b7900f2fcc7555572da6806ed404e" translate="yes" xml:space="preserve">
          <source>VendorPublishCommand</source>
          <target state="translated">VendorPublishCommand</target>
        </trans-unit>
        <trans-unit id="ba9aac51bbeeb2b8d94ded984e70d3278877151e" translate="yes" xml:space="preserve">
          <source>VendorPublishCommand (Foundation)</source>
          <target state="translated">VendorPublishCommand(基金会)</target>
        </trans-unit>
        <trans-unit id="5eb11c73725827e1bf3217624dac6d495d0eda45" translate="yes" xml:space="preserve">
          <source>VendorPublishCommand::__construct()</source>
          <target state="translated">VendorPublishCommand::__construct()</target>
        </trans-unit>
        <trans-unit id="6d82e346662fc447c071b0cb9304cd16d75cd7ce" translate="yes" xml:space="preserve">
          <source>VendorPublishCommand::createParentDirectory()</source>
          <target state="translated">VendorPublishCommand::createParentDirectory()</target>
        </trans-unit>
        <trans-unit id="f9426e4e3b8601829b71ab0d712db62c60fc9844" translate="yes" xml:space="preserve">
          <source>VendorPublishCommand::determineWhatShouldBePublished()</source>
          <target state="translated">VendorPublishCommand::determineWhatShouldBePublished()</target>
        </trans-unit>
        <trans-unit id="3a2f6ccad9f3376dc271b765f26ce750a8629028" translate="yes" xml:space="preserve">
          <source>VendorPublishCommand::handle()</source>
          <target state="translated">VendorPublishCommand::handle()</target>
        </trans-unit>
        <trans-unit id="a7e16ac2b2e2a07358e63547ba94c2f80f30d0a1" translate="yes" xml:space="preserve">
          <source>VendorPublishCommand::moveManagedFiles()</source>
          <target state="translated">VendorPublishCommand::moveManagedFiles()</target>
        </trans-unit>
        <trans-unit id="2321b05d3cee837eb16954813b3d18815973beaa" translate="yes" xml:space="preserve">
          <source>VendorPublishCommand::parseChoice()</source>
          <target state="translated">VendorPublishCommand::parseChoice()</target>
        </trans-unit>
        <trans-unit id="88279687627a36a1ea7f2f4e0bcf6e3d8b1ff47a" translate="yes" xml:space="preserve">
          <source>VendorPublishCommand::pathsToPublish()</source>
          <target state="translated">VendorPublishCommand::pathsToPublish()</target>
        </trans-unit>
        <trans-unit id="af47432168b02e3d2e775ca075c44c328e220635" translate="yes" xml:space="preserve">
          <source>VendorPublishCommand::promptForProviderOrTag()</source>
          <target state="translated">VendorPublishCommand::promptForProviderOrTag()</target>
        </trans-unit>
        <trans-unit id="1574c7712ed5265ae681647bd3f975f1591bff19" translate="yes" xml:space="preserve">
          <source>VendorPublishCommand::publishDirectory()</source>
          <target state="translated">VendorPublishCommand::publishDirectory()</target>
        </trans-unit>
        <trans-unit id="81d597f62cffda77e3329a775f8a264509b5e7e1" translate="yes" xml:space="preserve">
          <source>VendorPublishCommand::publishFile()</source>
          <target state="translated">VendorPublishCommand::publishFile()</target>
        </trans-unit>
        <trans-unit id="856a988a5bb31e9afe36f80b79672d4874093d5a" translate="yes" xml:space="preserve">
          <source>VendorPublishCommand::publishItem()</source>
          <target state="translated">VendorPublishCommand::publishItem()</target>
        </trans-unit>
        <trans-unit id="c1cfd1f2871a32069e214897bf1f63a2f5749c94" translate="yes" xml:space="preserve">
          <source>VendorPublishCommand::publishTag()</source>
          <target state="translated">VendorPublishCommand::publishTag()</target>
        </trans-unit>
        <trans-unit id="8a735a1d49e6abfb0f6decb90440d59ad0559cf6" translate="yes" xml:space="preserve">
          <source>VendorPublishCommand::publishableChoices()</source>
          <target state="translated">VendorPublishCommand::publishableChoices()</target>
        </trans-unit>
        <trans-unit id="25c54d5fb6ae5f31f733098e7e205e7e4e894bf3" translate="yes" xml:space="preserve">
          <source>VendorPublishCommand::status()</source>
          <target state="translated">VendorPublishCommand::status()</target>
        </trans-unit>
        <trans-unit id="33817a63b651d4a84e7a5d740d58bef5f67a6a2a" translate="yes" xml:space="preserve">
          <source>Verb</source>
          <target state="translated">Verb</target>
        </trans-unit>
        <trans-unit id="aed3b8c6a7c0fbbdbffa59a082415b138a87a6a6" translate="yes" xml:space="preserve">
          <source>Verified</source>
          <target state="translated">Verified</target>
        </trans-unit>
        <trans-unit id="4990372b20215a80d9461942ec22c6a264e5c95b" translate="yes" xml:space="preserve">
          <source>Verified (Auth\Events)</source>
          <target state="translated">已验证(Auth\Events)</target>
        </trans-unit>
        <trans-unit id="1e0d19fc5305547873e0fb9363de406bef84d26b" translate="yes" xml:space="preserve">
          <source>Verified::__construct()</source>
          <target state="translated">Verified::__construct()</target>
        </trans-unit>
        <trans-unit id="ee90d7d5543cc2e1f5f4aad1d2eaf90d83c96549" translate="yes" xml:space="preserve">
          <source>VerifiesEmails</source>
          <target state="translated">VerifiesEmails</target>
        </trans-unit>
        <trans-unit id="72daaad87bd915f988de1ef417449fd19be953ef" translate="yes" xml:space="preserve">
          <source>VerifiesEmails (Foundation\Auth)</source>
          <target state="translated">验证电子邮件 (Foundation\Auth)</target>
        </trans-unit>
        <trans-unit id="ff533e166c7180ef75e6440b243f94b76893ac74" translate="yes" xml:space="preserve">
          <source>VerifiesEmails::resend()</source>
          <target state="translated">VerifiesEmails::resend()</target>
        </trans-unit>
        <trans-unit id="fb00b91262a52e9a6ff5e59654dc1638e2af0ddc" translate="yes" xml:space="preserve">
          <source>VerifiesEmails::show()</source>
          <target state="translated">VerifiesEmails::show()</target>
        </trans-unit>
        <trans-unit id="11039d8339d484b0840bdb6953f5b77792c6eb53" translate="yes" xml:space="preserve">
          <source>VerifiesEmails::verify()</source>
          <target state="translated">VerifiesEmails::verify()</target>
        </trans-unit>
        <trans-unit id="f09c1a37a38b85cd68b664b013db3c35702c3a9e" translate="yes" xml:space="preserve">
          <source>Verify that the encryption payload is valid.</source>
          <target state="translated">验证加密有效载荷是否有效。</target>
        </trans-unit>
        <trans-unit id="82e851551f83af80c4fd460e7dce35b9c25fe81f" translate="yes" xml:space="preserve">
          <source>VerifyCsrfToken</source>
          <target state="translated">VerifyCsrfToken</target>
        </trans-unit>
        <trans-unit id="481bca3f16c19b1c667d5d078c5a774f386a275b" translate="yes" xml:space="preserve">
          <source>VerifyCsrfToken (Foundation\Http)</source>
          <target state="translated">验证CsrfToken (Foundation/Http)</target>
        </trans-unit>
        <trans-unit id="a5b38088228e470a5d75e318ba73e736ba95bd6e" translate="yes" xml:space="preserve">
          <source>VerifyCsrfToken::__construct()</source>
          <target state="translated">VerifyCsrfToken::__construct()</target>
        </trans-unit>
        <trans-unit id="7e6e12f9159344da2b6c521f0aa96e5d1dc6c0c4" translate="yes" xml:space="preserve">
          <source>VerifyCsrfToken::addCookieToResponse()</source>
          <target state="translated">VerifyCsrfToken::addCookieToResponse()</target>
        </trans-unit>
        <trans-unit id="6af8a4e33186e8a9a29edb243d9a356ae84b7c74" translate="yes" xml:space="preserve">
          <source>VerifyCsrfToken::getTokenFromRequest()</source>
          <target state="translated">VerifyCsrfToken::getTokenFromRequest()</target>
        </trans-unit>
        <trans-unit id="300aeeedac93060543f4fe4dd397b60afa043dc0" translate="yes" xml:space="preserve">
          <source>VerifyCsrfToken::handle()</source>
          <target state="translated">VerifyCsrfToken::handle()</target>
        </trans-unit>
        <trans-unit id="955c69feda3cd458fd7daffa6f49a66f69268cd3" translate="yes" xml:space="preserve">
          <source>VerifyCsrfToken::inExceptArray()</source>
          <target state="translated">VerifyCsrfToken::inExceptArray()</target>
        </trans-unit>
        <trans-unit id="a9814f4b5f82d2e62700728b15778cea7be6d819" translate="yes" xml:space="preserve">
          <source>VerifyCsrfToken::isReading()</source>
          <target state="translated">VerifyCsrfToken::isReading()</target>
        </trans-unit>
        <trans-unit id="cdc8e5b5a6f1413c075d35904ad14868615d112b" translate="yes" xml:space="preserve">
          <source>VerifyCsrfToken::runningUnitTests()</source>
          <target state="translated">VerifyCsrfToken::runningUnitTests()</target>
        </trans-unit>
        <trans-unit id="234104e58b89c3d5c6084eb95bd18d66f91947cf" translate="yes" xml:space="preserve">
          <source>VerifyCsrfToken::serialized()</source>
          <target state="translated">VerifyCsrfToken::serialized()</target>
        </trans-unit>
        <trans-unit id="04d3868387074252929691e7bf30dff30f3240aa" translate="yes" xml:space="preserve">
          <source>VerifyCsrfToken::shouldAddXsrfTokenCookie()</source>
          <target state="translated">VerifyCsrfToken::shouldAddXsrfTokenCookie()</target>
        </trans-unit>
        <trans-unit id="73aa614209b04bd56d58fa37ddb497da79f05ca9" translate="yes" xml:space="preserve">
          <source>VerifyCsrfToken::tokensMatch()</source>
          <target state="translated">VerifyCsrfToken::tokensMatch()</target>
        </trans-unit>
        <trans-unit id="3c6be84b1a0b232d34c6744c5051d91d4f2c89b3" translate="yes" xml:space="preserve">
          <source>VerifyEmail</source>
          <target state="translated">VerifyEmail</target>
        </trans-unit>
        <trans-unit id="28c25950bf5161b431f8eaca12c08d4c676ad0cb" translate="yes" xml:space="preserve">
          <source>VerifyEmail (Auth\Notifications)</source>
          <target state="translated">验证电子邮件 (Auth\Notifications)</target>
        </trans-unit>
        <trans-unit id="dfdae09afd0e8b72428282852c5357335fdf7f2a" translate="yes" xml:space="preserve">
          <source>VerifyEmail::buildMailMessage()</source>
          <target state="translated">VerifyEmail::buildMailMessage()</target>
        </trans-unit>
        <trans-unit id="8a03c0cd496b925addd52fcdf10d1a5ebfd7c5d3" translate="yes" xml:space="preserve">
          <source>VerifyEmail::createUrlUsing()</source>
          <target state="translated">VerifyEmail::createUrlUsing()</target>
        </trans-unit>
        <trans-unit id="6372cb0fd0c2f730f37afcaf4e3243c27ec9661b" translate="yes" xml:space="preserve">
          <source>VerifyEmail::toMail()</source>
          <target state="translated">VerifyEmail::toMail()</target>
        </trans-unit>
        <trans-unit id="747395ae35e22dcd74852d7ffd4969abeb6733f7" translate="yes" xml:space="preserve">
          <source>VerifyEmail::toMailUsing()</source>
          <target state="translated">VerifyEmail::toMailUsing()</target>
        </trans-unit>
        <trans-unit id="77f66035652829511a6c585913671d4e3dc07684" translate="yes" xml:space="preserve">
          <source>VerifyEmail::verificationUrl()</source>
          <target state="translated">VerifyEmail::verificationUrl()</target>
        </trans-unit>
        <trans-unit id="13433abad2e71f2638abe9774c3cdc74102f7764" translate="yes" xml:space="preserve">
          <source>VerifyEmail::via()</source>
          <target state="translated">VerifyEmail::via()</target>
        </trans-unit>
        <trans-unit id="47bb88094ae980a3488e26d5c06c61f56262541c" translate="yes" xml:space="preserve">
          <source>Verifying A Password Against A Hash</source>
          <target state="translated">根据哈希值验证密码</target>
        </trans-unit>
        <trans-unit id="ede44ecd9dab58dbdb53971a85a66c62fb10a50f" translate="yes" xml:space="preserve">
          <source>Verifying An Exact JSON Match</source>
          <target state="translated">验证JSON的精确匹配</target>
        </trans-unit>
        <trans-unit id="87fc16e974f29a9261e02a6b67b6e18ae3100c86" translate="yes" xml:space="preserve">
          <source>Verifying JSON Paths</source>
          <target state="translated">验证JSON路径</target>
        </trans-unit>
        <trans-unit id="634bee50d59107ceb4e2fd3e849d66c1600b8fdb" translate="yes" xml:space="preserve">
          <source>Verifying Webhook Signatures</source>
          <target state="translated">验证Webhook签名</target>
        </trans-unit>
        <trans-unit id="2da600bf9404843107a9531694f654e5662959e0" translate="yes" xml:space="preserve">
          <source>Version</source>
          <target state="translated">Version</target>
        </trans-unit>
        <trans-unit id="81bc56b974a9f54ba6d3db31f2adbf63a8300ee6" translate="yes" xml:space="preserve">
          <source>Versioning / Cache Busting</source>
          <target state="translated">版本/缓存破坏</target>
        </trans-unit>
        <trans-unit id="e22fc540f2af12c8ec78a747a89bd3b49988f423" translate="yes" xml:space="preserve">
          <source>Versioning Scheme</source>
          <target state="translated">版本方案</target>
        </trans-unit>
        <trans-unit id="fd8a8491cc0bd951bd841f43ac95a43993e12abd" translate="yes" xml:space="preserve">
          <source>Via Blade Templates</source>
          <target state="translated">通过刀片模板</target>
        </trans-unit>
        <trans-unit id="4c53eb56ef64e0264243d307fc1960a19960ab80" translate="yes" xml:space="preserve">
          <source>Via Composer Create-Project</source>
          <target state="translated">通过Composer Creat-Project</target>
        </trans-unit>
        <trans-unit id="73db5daddd56688e1dda7d522a9b062cd64a0dce" translate="yes" xml:space="preserve">
          <source>Via Controller Helpers</source>
          <target state="translated">通过控制器助手</target>
        </trans-unit>
        <trans-unit id="d0025b51c080b8656aab5b271be5145d2badee46" translate="yes" xml:space="preserve">
          <source>Via Laravel Installer</source>
          <target state="translated">通过Laravel安装程序</target>
        </trans-unit>
        <trans-unit id="b303f4566c13cdee6542f610dba3260651a07126" translate="yes" xml:space="preserve">
          <source>Via Middleware</source>
          <target state="translated">通过中间件</target>
        </trans-unit>
        <trans-unit id="304b7868d1c04a6b3e24553f168d73d19a0eaacb" translate="yes" xml:space="preserve">
          <source>Via Public Properties</source>
          <target state="translated">通过公共财产</target>
        </trans-unit>
        <trans-unit id="81b33d9592194e2212f54c6a8926eb12365a7ca1" translate="yes" xml:space="preserve">
          <source>Via The &lt;code&gt;with&lt;/code&gt; Method:</source>
          <target state="translated">通过 &lt;code&gt;with&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="e3b61f5d3d2be4aa656894845ce145e491635ee3" translate="yes" xml:space="preserve">
          <source>Via The User Model</source>
          <target state="translated">通过用户模型</target>
        </trans-unit>
        <trans-unit id="689d1952b8b1ed7e7ee1f9efd94e37fb4541cb4f" translate="yes" xml:space="preserve">
          <source>Via the &lt;code&gt;faker&lt;/code&gt; property, factories have access to the &lt;a href=&quot;https://github.com/fzaninotto/Faker&quot;&gt;Faker&lt;/a&gt; PHP library, which allows you to conveniently generate various kinds of random data for testing.</source>
          <target state="translated">通过 &lt;code&gt;faker&lt;/code&gt; 属性，工厂可以访问&lt;a href=&quot;https://github.com/fzaninotto/Faker&quot;&gt;Faker&lt;/a&gt; PHP库，该库使您可以方便地生成各种随机数据以进行测试。</target>
        </trans-unit>
        <trans-unit id="69bd4ef9fbd0894a22759c3766b859defbdedbc8" translate="yes" xml:space="preserve">
          <source>View</source>
          <target state="translated">View</target>
        </trans-unit>
        <trans-unit id="636384962685e7a27a4f3552b6bf81bfe178bd9b" translate="yes" xml:space="preserve">
          <source>View (Contracts)</source>
          <target state="translated">查看(合同)</target>
        </trans-unit>
        <trans-unit id="c38a4568f526f342e8fcf688778413b79264f388" translate="yes" xml:space="preserve">
          <source>View (Instance)</source>
          <target state="translated">查看(实例)</target>
        </trans-unit>
        <trans-unit id="ac2091b347f21fadce61dbd640950009db3acb59" translate="yes" xml:space="preserve">
          <source>View (Support\Facades)</source>
          <target state="translated">查看(支持/传真)</target>
        </trans-unit>
        <trans-unit id="fce585b3bc9ac6775d43e718a94f4cfbf8f3832e" translate="yes" xml:space="preserve">
          <source>View &lt;strong&gt;creators&lt;/strong&gt; are very similar to view composers; however, they are executed immediately after the view is instantiated instead of waiting until the view is about to render. To register a view creator, use the &lt;code&gt;creator&lt;/code&gt; method:</source>
          <target state="translated">视图&lt;strong&gt;创建者&lt;/strong&gt;与视图&lt;strong&gt;创建者&lt;/strong&gt;非常相似。但是，它们在实例化视图后立即执行，而不是等到视图将要渲染时才执行。要注册视图创建者，请使用 &lt;code&gt;creator&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="a617c39de9912a57b038bc089fac9aef2fcd602e" translate="yes" xml:space="preserve">
          <source>View Components</source>
          <target state="translated">查看组件</target>
        </trans-unit>
        <trans-unit id="b8beebfe4516b39e3e9cd125c3b013717fc8fba3" translate="yes" xml:space="preserve">
          <source>View Composers</source>
          <target state="translated">查看作曲家</target>
        </trans-unit>
        <trans-unit id="1a887ed3d5c0a73c479f298946b97ae34b6cb6c7" translate="yes" xml:space="preserve">
          <source>View Creators</source>
          <target state="translated">查看创作者</target>
        </trans-unit>
        <trans-unit id="0b356ea8e0756a911b2013cd62103873365bcb04" translate="yes" xml:space="preserve">
          <source>View Data</source>
          <target state="translated">查看数据</target>
        </trans-unit>
        <trans-unit id="216fac9acc90914885a8b9e2f5ece0b60d24a1cb" translate="yes" xml:space="preserve">
          <source>View Responses</source>
          <target state="translated">查看回复</target>
        </trans-unit>
        <trans-unit id="fad0fbfb5b81d3b4cdda705944cbe470d375c4ce" translate="yes" xml:space="preserve">
          <source>View Routes</source>
          <target state="translated">查看路线</target>
        </trans-unit>
        <trans-unit id="617d854bfb196f4bbe39ef242236cce9417f1b5a" translate="yes" xml:space="preserve">
          <source>View Watcher</source>
          <target state="translated">观察者</target>
        </trans-unit>
        <trans-unit id="a6af680459d0b11a021f6dc182a15b0bea1a0595" translate="yes" xml:space="preserve">
          <source>View a list of logs which are written by Valet's services.</source>
          <target state="translated">查看由Valet服务撰写的日志列表。</target>
        </trans-unit>
        <trans-unit id="bb642ffd803c6d11460735424c344786a7414834" translate="yes" xml:space="preserve">
          <source>View all of your &quot;parked&quot; paths.</source>
          <target state="translated">查看所有 &quot;停放 &quot;的路径。</target>
        </trans-unit>
        <trans-unit id="e476fc63786200bda3d812334fb2f3c95b57a2fc" translate="yes" xml:space="preserve">
          <source>View composers are callbacks or class methods that are called when a view is rendered. If you have data that you want to be bound to a view each time that view is rendered, a view composer can help you organize that logic into a single location.</source>
          <target state="translated">视图合成器是在渲染视图时被调用的回调或类方法。如果每次渲染视图时,您都希望将数据绑定到该视图上,那么视图合成器可以帮助您将这些逻辑组织到一个位置。</target>
        </trans-unit>
        <trans-unit id="05c5d346faeb325d0ff51bae601a7260f9617b1d" translate="yes" xml:space="preserve">
          <source>View directory names should not contain the &lt;code&gt;.&lt;/code&gt; character.</source>
          <target state="translated">查看目录名称不应包含 &lt;code&gt;.&lt;/code&gt; 特点。</target>
        </trans-unit>
        <trans-unit id="2ef694be0731d775be969e9dee2904c709e275e7" translate="yes" xml:space="preserve">
          <source>View::getData()</source>
          <target state="translated">View::getData()</target>
        </trans-unit>
        <trans-unit id="12d718b41cea54e89300e228033dc8210dc7ab81" translate="yes" xml:space="preserve">
          <source>View::getFacadeAccessor()</source>
          <target state="translated">View::getFacadeAccessor()</target>
        </trans-unit>
        <trans-unit id="3ecef7336a07ca36532e5ac1234cc535c16a1d99" translate="yes" xml:space="preserve">
          <source>View::name()</source>
          <target state="translated">View::name()</target>
        </trans-unit>
        <trans-unit id="c002348c4cbfabae7f2aa2a0a353278eb8fc7e59" translate="yes" xml:space="preserve">
          <source>View::with()</source>
          <target state="translated">View::with()</target>
        </trans-unit>
        <trans-unit id="92b25985c03cdcff5335fe20c390c36551184e23" translate="yes" xml:space="preserve">
          <source>ViewCacheCommand</source>
          <target state="translated">ViewCacheCommand</target>
        </trans-unit>
        <trans-unit id="68d3e66bb32bed77f80396350b2630d0e4fe7fef" translate="yes" xml:space="preserve">
          <source>ViewCacheCommand (Foundation)</source>
          <target state="translated">ViewCacheCommand(基金会)</target>
        </trans-unit>
        <trans-unit id="fa12ebbd1ebe10822612b0886b83da2ba4bc9c1e" translate="yes" xml:space="preserve">
          <source>ViewCacheCommand::bladeFilesIn()</source>
          <target state="translated">ViewCacheCommand::bladeFilesIn()</target>
        </trans-unit>
        <trans-unit id="7bb687c6fe711efd3db1f8f5fd9fe66ab594ac3d" translate="yes" xml:space="preserve">
          <source>ViewCacheCommand::compileViews()</source>
          <target state="translated">ViewCacheCommand::compileViews()</target>
        </trans-unit>
        <trans-unit id="84d24ca6ac83d82e1e73ae828043db1ae7ffa173" translate="yes" xml:space="preserve">
          <source>ViewCacheCommand::handle()</source>
          <target state="translated">ViewCacheCommand::handle()</target>
        </trans-unit>
        <trans-unit id="9da4330c86144a2696923548a4ebb695880c12ca" translate="yes" xml:space="preserve">
          <source>ViewCacheCommand::paths()</source>
          <target state="translated">ViewCacheCommand::paths()</target>
        </trans-unit>
        <trans-unit id="c1e60e26f0f206f77b5851b78a6269c2fadb089b" translate="yes" xml:space="preserve">
          <source>ViewClearCommand</source>
          <target state="translated">ViewClearCommand</target>
        </trans-unit>
        <trans-unit id="8e6e83d8b2d895bb88cee297b02622bfebae916d" translate="yes" xml:space="preserve">
          <source>ViewClearCommand (Foundation)</source>
          <target state="translated">ViewClearCommand(基金会)</target>
        </trans-unit>
        <trans-unit id="a6cd454a2d601bf5996be869dc74f5a458da5f8c" translate="yes" xml:space="preserve">
          <source>ViewClearCommand::__construct()</source>
          <target state="translated">ViewClearCommand::__construct()</target>
        </trans-unit>
        <trans-unit id="fd48eeeccbb7cf4f670ee13b18bfe76e7f32fd17" translate="yes" xml:space="preserve">
          <source>ViewClearCommand::handle()</source>
          <target state="translated">ViewClearCommand::handle()</target>
        </trans-unit>
        <trans-unit id="36e0c76f563736f6c88b0432a721b2418d20b3b7" translate="yes" xml:space="preserve">
          <source>ViewController</source>
          <target state="translated">ViewController</target>
        </trans-unit>
        <trans-unit id="9e6cb8dd74a9d9e5e8e455d7a7c4e142859204ff" translate="yes" xml:space="preserve">
          <source>ViewController (Routing)</source>
          <target state="translated">视图控制器(路由</target>
        </trans-unit>
        <trans-unit id="909287a7c532f879ef5c0cc229d7cba3d44ad1c4" translate="yes" xml:space="preserve">
          <source>ViewController::__construct()</source>
          <target state="translated">ViewController::__construct()</target>
        </trans-unit>
        <trans-unit id="4d4a135538ea1460881b660c21dc3e029b8a5fdf" translate="yes" xml:space="preserve">
          <source>ViewController::__invoke()</source>
          <target state="translated">ViewController::__invoke()</target>
        </trans-unit>
        <trans-unit id="aea61113b1842710f9ac25fd963f7283f452f182" translate="yes" xml:space="preserve">
          <source>ViewErrorBag</source>
          <target state="translated">ViewErrorBag</target>
        </trans-unit>
        <trans-unit id="f7963e44f1ebe85f265d10e7148da4475e6f1c62" translate="yes" xml:space="preserve">
          <source>ViewErrorBag (Support)</source>
          <target state="translated">ViewErrorBag(支持)</target>
        </trans-unit>
        <trans-unit id="d409e2f2ba61778a136c5f6c9c5e1a86e251f6a0" translate="yes" xml:space="preserve">
          <source>ViewErrorBag::__call()</source>
          <target state="translated">ViewErrorBag::__call()</target>
        </trans-unit>
        <trans-unit id="f4923f90dd20358f3ef924b3446496f85862bb9f" translate="yes" xml:space="preserve">
          <source>ViewErrorBag::__get()</source>
          <target state="translated">ViewErrorBag::__get()</target>
        </trans-unit>
        <trans-unit id="1d1b8ef16c752ac7d411f83e2a5222322cf542cc" translate="yes" xml:space="preserve">
          <source>ViewErrorBag::__set()</source>
          <target state="translated">ViewErrorBag::__set()</target>
        </trans-unit>
        <trans-unit id="6bd33ca55c4589c854d75bac447bd5d12acd98fb" translate="yes" xml:space="preserve">
          <source>ViewErrorBag::__toString()</source>
          <target state="translated">ViewErrorBag::__toString()</target>
        </trans-unit>
        <trans-unit id="a436fe71d64f9c550e9d310dffa42cf461b8628b" translate="yes" xml:space="preserve">
          <source>ViewErrorBag::any()</source>
          <target state="translated">ViewErrorBag::any()</target>
        </trans-unit>
        <trans-unit id="d06414ba3824b8f3f2c2698c8938a27155d41926" translate="yes" xml:space="preserve">
          <source>ViewErrorBag::count()</source>
          <target state="translated">ViewErrorBag::count()</target>
        </trans-unit>
        <trans-unit id="aec4a0c9600fcd41c2f70eb24a68f5ff8f83631e" translate="yes" xml:space="preserve">
          <source>ViewErrorBag::getBag()</source>
          <target state="translated">ViewErrorBag::getBag()</target>
        </trans-unit>
        <trans-unit id="f2ac1a9a9e028846168aa39e5c657673e479ecaa" translate="yes" xml:space="preserve">
          <source>ViewErrorBag::getBags()</source>
          <target state="translated">ViewErrorBag::getBags()</target>
        </trans-unit>
        <trans-unit id="b9fb491fc002a38275b35a93bf88f10abc8d17e0" translate="yes" xml:space="preserve">
          <source>ViewErrorBag::hasBag()</source>
          <target state="translated">ViewErrorBag::hasBag()</target>
        </trans-unit>
        <trans-unit id="6b09df207b989c9cb5b3a60ac64d8e93d8e71ee6" translate="yes" xml:space="preserve">
          <source>ViewErrorBag::put()</source>
          <target state="translated">ViewErrorBag::put()</target>
        </trans-unit>
        <trans-unit id="e46a0b36d1391d2e2fcd5b8a15363ea9a3069be0" translate="yes" xml:space="preserve">
          <source>ViewFinderInterface</source>
          <target state="translated">ViewFinderInterface</target>
        </trans-unit>
        <trans-unit id="8c814cb87f281c21b5263b1341d5b98df7322113" translate="yes" xml:space="preserve">
          <source>ViewName</source>
          <target state="translated">ViewName</target>
        </trans-unit>
        <trans-unit id="bd159f6b18e6b33ba7d6277d6eef99edb5c9680d" translate="yes" xml:space="preserve">
          <source>ViewServiceProvider</source>
          <target state="translated">ViewServiceProvider</target>
        </trans-unit>
        <trans-unit id="2da6064b2d9fe83acd521ec78b23c36ae3317d6b" translate="yes" xml:space="preserve">
          <source>View\Compilers</source>
          <target state="translated">View\Compilers</target>
        </trans-unit>
        <trans-unit id="f5066f522b00a9f6b984a4528eaa66c2a265a8cd" translate="yes" xml:space="preserve">
          <source>View\Concerns</source>
          <target state="translated">View\Concerns</target>
        </trans-unit>
        <trans-unit id="3ef9c7846ad7408ed1ca056b587f44ba52f217a0" translate="yes" xml:space="preserve">
          <source>View\Engines</source>
          <target state="translated">View\Engines</target>
        </trans-unit>
        <trans-unit id="6f410dbe82914b0c5bf0317bbb149c6280f12c32" translate="yes" xml:space="preserve">
          <source>View\Middleware</source>
          <target state="translated">View\Middleware</target>
        </trans-unit>
        <trans-unit id="24be61285e096fa817d4cdb0a0ed8294ea5bd2fb" translate="yes" xml:space="preserve">
          <source>Views</source>
          <target state="translated">Views</target>
        </trans-unit>
        <trans-unit id="c4ad283f6ad2ced43a72af53523fbb898b795783" translate="yes" xml:space="preserve">
          <source>Views contain the HTML served by your application and separate your controller / application logic from your presentation logic. Views are stored in the &lt;code&gt;resources/views&lt;/code&gt; directory. A simple view might look something like this:</source>
          <target state="translated">视图包含应用程序提供的HTML，并将控制器/应用程序逻辑与表示逻辑分开。视图存储在 &lt;code&gt;resources/views&lt;/code&gt; 目录中。一个简单的视图可能看起来像这样：</target>
        </trans-unit>
        <trans-unit id="7c94ddf422987d16f0164145c01e88a54f263be3" translate="yes" xml:space="preserve">
          <source>Views may also be nested within subdirectories of the &lt;code&gt;resources/views&lt;/code&gt; directory. &quot;Dot&quot; notation may be used to reference nested views. For example, if your view is stored at &lt;code&gt;resources/views/admin/profile.blade.php&lt;/code&gt;, you may reference it like so:</source>
          <target state="translated">视图也可以嵌套在 &lt;code&gt;resources/views&lt;/code&gt; 目录的子目录内。&amp;ldquo;点&amp;rdquo;符号可用于引用嵌套视图。例如，如果您的视图存储在 &lt;code&gt;resources/views/admin/profile.blade.php&lt;/code&gt; ，则可以这样引用它：</target>
        </trans-unit>
        <trans-unit id="a0016aa1d302b4434ce107416ddbe852b5be6b50" translate="yes" xml:space="preserve">
          <source>Views rendered via &lt;code&gt;@each&lt;/code&gt; do not inherit the variables from the parent view. If the child view requires these variables, you should use &lt;code&gt;@foreach&lt;/code&gt; and &lt;code&gt;@include&lt;/code&gt; instead.</source>
          <target state="translated">通过 &lt;code&gt;@each&lt;/code&gt; 渲染的视图不会从父视图继承变量。如果子视图需要这些变量，则应改用 &lt;code&gt;@foreach&lt;/code&gt; 和 &lt;code&gt;@include&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cb837c2918c14957ebf249f5eb0de4adb9ee6f1c" translate="yes" xml:space="preserve">
          <source>VirtualBox</source>
          <target state="translated">VirtualBox</target>
        </trans-unit>
        <trans-unit id="09237dbacbb33a0831b186279d9a2723fdcb6836" translate="yes" xml:space="preserve">
          <source>Vue</source>
          <target state="translated">Vue</target>
        </trans-unit>
        <trans-unit id="9c98b2cfaa9d4765b9e2cfb3f936b31569dd6962" translate="yes" xml:space="preserve">
          <source>Vue (Foundation\Console)</source>
          <target state="translated">Vue (Foundation/Console)</target>
        </trans-unit>
        <trans-unit id="e6579d8fdec926cbc1031ee4bdaa166a7ab5940c" translate="yes" xml:space="preserve">
          <source>Vue::install()</source>
          <target state="translated">Vue::install()</target>
        </trans-unit>
        <trans-unit id="8649e69091a6d5c4eb2d2d03d7b4bb1f158d41ae" translate="yes" xml:space="preserve">
          <source>Vue::updateBootstrapping()</source>
          <target state="translated">Vue::updateBootstrapping()</target>
        </trans-unit>
        <trans-unit id="cbcd70a74512eeadab3512921cb7d817164457c4" translate="yes" xml:space="preserve">
          <source>Vue::updateComponent()</source>
          <target state="translated">Vue::updateComponent()</target>
        </trans-unit>
        <trans-unit id="2b2e1df8765b3d354d8b0924e1cc455ecd831db4" translate="yes" xml:space="preserve">
          <source>Vue::updatePackageArray()</source>
          <target state="translated">Vue::updatePackageArray()</target>
        </trans-unit>
        <trans-unit id="5a7ded80f30477b8e1df7a28ca05d7fae8123953" translate="yes" xml:space="preserve">
          <source>Vue::updateWebpackConfiguration()</source>
          <target state="translated">Vue::updateWebpackConfiguration()</target>
        </trans-unit>
        <trans-unit id="a86e95a3de6c6d679d6527aad5d93c5216555e6f" translate="yes" xml:space="preserve">
          <source>WEDNESDAY</source>
          <target state="translated">WEDNESDAY</target>
        </trans-unit>
        <trans-unit id="33d30632848d3fd0ed2340adbd7be3e3e8e61010" translate="yes" xml:space="preserve">
          <source>Waiting</source>
          <target state="translated">Waiting</target>
        </trans-unit>
        <trans-unit id="9dcf209dcba3241aed59f7200135e60eaf14fe05" translate="yes" xml:space="preserve">
          <source>Waiting For Elements</source>
          <target state="translated">等待元素</target>
        </trans-unit>
        <trans-unit id="ed6061f202f89fcf8a46854ddd6e953ac4d52bf4" translate="yes" xml:space="preserve">
          <source>Waiting For Links</source>
          <target state="translated">等待链接</target>
        </trans-unit>
        <trans-unit id="6c06973b4a2eae112161738c9e56fef2bf19a56f" translate="yes" xml:space="preserve">
          <source>Waiting For Selectors</source>
          <target state="translated">等待选择者</target>
        </trans-unit>
        <trans-unit id="8915cfb76f2a79cd2bcef3566a351979bbf7b6f5" translate="yes" xml:space="preserve">
          <source>Waiting For Text</source>
          <target state="translated">等待短信</target>
        </trans-unit>
        <trans-unit id="f3a93e906bd1e623a66b1a5edc4c444c1cb143fb" translate="yes" xml:space="preserve">
          <source>Waiting On JavaScript Expressions</source>
          <target state="translated">等待JavaScript表达式</target>
        </trans-unit>
        <trans-unit id="0ac24870fd2eb25329b6b68d56f0522cc9a7a394" translate="yes" xml:space="preserve">
          <source>Waiting On The Page Location</source>
          <target state="translated">等待页面位置</target>
        </trans-unit>
        <trans-unit id="33002fb30e1011c3479252eaf5d8d9ae9eeae1ae" translate="yes" xml:space="preserve">
          <source>Waiting On Vue Expressions</source>
          <target state="translated">等待Vue表情</target>
        </trans-unit>
        <trans-unit id="66f079e10a7d7aec45467c653706f4284c46e572" translate="yes" xml:space="preserve">
          <source>Waiting With A Callback</source>
          <target state="translated">回调等待</target>
        </trans-unit>
        <trans-unit id="f3ec1f68508f56c1e6d4c0a48a87e9c014546b05" translate="yes" xml:space="preserve">
          <source>Waiting for Page Reloads</source>
          <target state="translated">等待页面重新加载</target>
        </trans-unit>
        <trans-unit id="995340db620c223b34855337a153200471060564" translate="yes" xml:space="preserve">
          <source>Want to create a Laravel project with login, registration, and more features already built for you? Check out &lt;a href=&quot;https://jetstream.laravel.com&quot;&gt;Laravel Jetstream&lt;/a&gt;.</source>
          <target state="translated">是否想创建一个具有登录，注册和更多已为您构建的功能的Laravel项目？查看&lt;a href=&quot;https://jetstream.laravel.com&quot;&gt;Laravel Jetstream&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5560ea8a458f1e9c46b7acfb8d66ba581e4fa337" translate="yes" xml:space="preserve">
          <source>Want to get started fast? Install &lt;a href=&quot;https://jetstream.laravel.com&quot;&gt;Laravel Jetstream&lt;/a&gt; in a fresh Laravel application. After migrating your database, navigate your browser to &lt;code&gt;/register&lt;/code&gt; or any other URL that is assigned to your application. Jetstream will take care of scaffolding your entire authentication system!</source>
          <target state="translated">想快速上手吗？在新的Laravel应用程序中安装&lt;a href=&quot;https://jetstream.laravel.com&quot;&gt;Laravel Jetstream&lt;/a&gt;。迁移数据库后，将浏览器导航到 &lt;code&gt;/register&lt;/code&gt; 或分配给您的应用程序的任何其他URL。Jetstream会照顾您整个认证系统的脚手架！</target>
        </trans-unit>
        <trans-unit id="94ba1b6436197f2871eed9afacebad288a2e7f89" translate="yes" xml:space="preserve">
          <source>Want to get started fast? Install &lt;a href=&quot;https://jetstream.laravel.com&quot;&gt;Laravel Jetstream&lt;/a&gt; in a fresh Laravel application. After migrating your database, navigate your browser to &lt;code&gt;/register&lt;/code&gt; or any other URL that is assigned to your application. Jetstream will take care of scaffolding your entire authentication system, including email verification support!</source>
          <target state="translated">想快速上手吗？在新的Laravel应用程序中安装&lt;a href=&quot;https://jetstream.laravel.com&quot;&gt;Laravel Jetstream&lt;/a&gt;。迁移数据库后，将浏览器导航到 &lt;code&gt;/register&lt;/code&gt; 或分配给您的应用程序的任何其他URL。Jetstream将为您架设整个身份验证系统，包括电子邮件验证支持！</target>
        </trans-unit>
        <trans-unit id="6c94f606e7fac0dd6a8d9ff76ae21bbf5b7ec6c8" translate="yes" xml:space="preserve">
          <source>Want to get started fast? Install &lt;a href=&quot;https://jetstream.laravel.com&quot;&gt;Laravel Jetstream&lt;/a&gt; in a fresh Laravel application. After migrating your database, navigate your browser to &lt;code&gt;/register&lt;/code&gt; or any other URL that is assigned to your application. Jetstream will take care of scaffolding your entire authentication system, including resetting passwords!</source>
          <target state="translated">想快速上手吗？在新的Laravel应用程序中安装&lt;a href=&quot;https://jetstream.laravel.com&quot;&gt;Laravel Jetstream&lt;/a&gt;。迁移数据库后，将浏览器导航到 &lt;code&gt;/register&lt;/code&gt; 或分配给您的应用程序的任何其他URL。Jetstream会照顾您整个认证系统的脚手架，包括重置密码！</target>
        </trans-unit>
        <trans-unit id="a8059e31694578c1b0344a76a345357dd60e8f01" translate="yes" xml:space="preserve">
          <source>Warning[]</source>
          <target state="translated">Warning[]</target>
        </trans-unit>
        <trans-unit id="2518c5bcf1dbf29e31772ad830ac92c36e2f45e7" translate="yes" xml:space="preserve">
          <source>Warning[]
    getWarnings()</source>
          <target state="translated">Warning[]getWarnings()</target>
        </trans-unit>
        <trans-unit id="31079e2838d6a488df71812a6406f9902113cf4a" translate="yes" xml:space="preserve">
          <source>Watching Assets For Changes</source>
          <target state="translated">观察资产变化</target>
        </trans-unit>
        <trans-unit id="10d45f8067cbf5c49bec145ca14df4b3e6457d76" translate="yes" xml:space="preserve">
          <source>We also encourage you to view the changes in the &lt;code&gt;laravel/laravel&lt;/code&gt;&lt;a href=&quot;https://github.com/laravel/laravel&quot;&gt;GitHub repository&lt;/a&gt;. While many of these changes are not required, you may wish to keep these files in sync with your application. Some of these changes will be covered in this upgrade guide, but others, such as changes to configuration files or comments, will not be. You can easily view the changes with the &lt;a href=&quot;https://github.com/laravel/laravel/compare/5.6...master&quot;&gt;GitHub comparison tool&lt;/a&gt; and choose which updates are important to you.</source>
          <target state="translated">我们也鼓励您查看 &lt;code&gt;laravel/laravel&lt;/code&gt; &lt;a href=&quot;https://github.com/laravel/laravel&quot;&gt;GitHub存储库中&lt;/a&gt;的更改。尽管不需要进行许多更改，但您可能希望使这些文件与您的应用程序保持同步。其中一些更改将在本升级指南中介绍，而其他更改（例如对配置文件或注释的更改）将不涉及。您可以使用&lt;a href=&quot;https://github.com/laravel/laravel/compare/5.6...master&quot;&gt;GitHub比较工具&lt;/a&gt;轻松查看更改，并选择哪些更新对您很重要。</target>
        </trans-unit>
        <trans-unit id="188331b21c24108bd714dd53a2d51ad4768df41c" translate="yes" xml:space="preserve">
          <source>We also encourage you to view the changes in the &lt;code&gt;laravel/laravel&lt;/code&gt;&lt;a href=&quot;https://github.com/laravel/laravel&quot;&gt;GitHub repository&lt;/a&gt;. While many of these changes are not required, you may wish to keep these files in sync with your application. Some of these changes will be covered in this upgrade guide, but others, such as changes to configuration files or comments, will not be. You can easily view the changes with the &lt;a href=&quot;https://github.com/laravel/laravel/compare/7.x...master&quot;&gt;GitHub comparison tool&lt;/a&gt; and choose which updates are important to you.</source>
          <target state="translated">我们也鼓励您查看 &lt;code&gt;laravel/laravel&lt;/code&gt; &lt;a href=&quot;https://github.com/laravel/laravel&quot;&gt;GitHub存储库中&lt;/a&gt;的更改。尽管不需要进行许多更改，但您可能希望使这些文件与您的应用程序保持同步。其中一些更改将在本升级指南中介绍，但其他更改（例如对配置文件或注释的更改）将不涉及。您可以使用&lt;a href=&quot;https://github.com/laravel/laravel/compare/7.x...master&quot;&gt;GitHub比较工具&lt;/a&gt;轻松查看更改，然后选择对您而言重要的更新。</target>
        </trans-unit>
        <trans-unit id="7156481a1a1be6ca98c965d55920fe22b53ec5fb" translate="yes" xml:space="preserve">
          <source>We attempt to document every possible breaking change. Since some of these breaking changes are in obscure parts of the framework only a portion of these changes may actually affect your application.</source>
          <target state="translated">我们试图记录每一个可能的突破性变化。由于其中的一些中断性更改是在框架的不明显部分,这些更改中只有一部分可能会实际影响您的应用程序。</target>
        </trans-unit>
        <trans-unit id="ef98fd09547c6700ab606df12b038c51fc1c802b" translate="yes" xml:space="preserve">
          <source>We can mock the call to the &lt;code&gt;Cache&lt;/code&gt; facade by using the &lt;code&gt;shouldReceive&lt;/code&gt; method, which will return an instance of a &lt;a href=&quot;https://github.com/padraic/mockery&quot;&gt;Mockery&lt;/a&gt; mock. Since facades are actually resolved and managed by the Laravel &lt;a href=&quot;container&quot;&gt;service container&lt;/a&gt;, they have much more testability than a typical static class. For example, let's mock our call to the &lt;code&gt;Cache&lt;/code&gt; facade's &lt;code&gt;get&lt;/code&gt; method:</source>
          <target state="translated">我们可以使用 &lt;code&gt;shouldReceive&lt;/code&gt; 方法来模拟对 &lt;code&gt;Cache&lt;/code&gt; Facade 的调用，该方法将返回&lt;a href=&quot;https://github.com/padraic/mockery&quot;&gt;Mockery&lt;/a&gt;模拟的实例。由于立面实际上是由Laravel &lt;a href=&quot;container&quot;&gt;服务容器&lt;/a&gt;解析和管理的，因此它们比典型的静态类具有更高的可测试性。例如，让我们模拟对 &lt;code&gt;Cache&lt;/code&gt; Facade的 &lt;code&gt;get&lt;/code&gt; 方法的调用：</target>
        </trans-unit>
        <trans-unit id="bedef6004beb50d50d9aff32fc5f57658ab3cb12" translate="yes" xml:space="preserve">
          <source>We can write the following test to verify that the &lt;code&gt;Cache::get&lt;/code&gt; method was called with the argument we expected:</source>
          <target state="translated">我们可以编写以下测试来验证是否使用我们期望的参数调用了 &lt;code&gt;Cache::get&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="7bdcc0d5946ce4f8ac5185ba8c4fc842448e9f58" translate="yes" xml:space="preserve">
          <source>We could also modify a column to be nullable:</source>
          <target state="translated">我们也可以将一列修改为可空。</target>
        </trans-unit>
        <trans-unit id="eac69c1fb918fc92ab1fd0cd3256e8335a8c9d26" translate="yes" xml:space="preserve">
          <source>We just need to implement each of these methods using a MongoDB connection. For an example of how to implement each of these methods, take a look at the &lt;code&gt;Illuminate\Cache\MemcachedStore&lt;/code&gt; in the framework source code. Once our implementation is complete, we can finish our custom driver registration.</source>
          <target state="translated">我们只需要使用MongoDB连接来实现所有这些方法。有关如何实现这些方法的示例，请查看框架源代码中的 &lt;code&gt;Illuminate\Cache\MemcachedStore&lt;/code&gt; 。一旦实现完成，就可以完成自定义驱动程序注册。</target>
        </trans-unit>
        <trans-unit id="e0e8cdaa63c430e37eb846ab6630af2dade84df5" translate="yes" xml:space="preserve">
          <source>We may pass content to the &lt;code&gt;slot&lt;/code&gt; by injecting content into the component:</source>
          <target state="translated">我们可以通过将内容注入到组件中来将内容传递到 &lt;code&gt;slot&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="a472d31daf95235421ff5f44ec9bfde21808fb22" translate="yes" xml:space="preserve">
          <source>We will access Laravel's authentication services via the &lt;code&gt;Auth&lt;/code&gt;&lt;a href=&quot;facades&quot;&gt;facade&lt;/a&gt;, so we'll need to make sure to import the &lt;code&gt;Auth&lt;/code&gt; facade at the top of the class. Next, let's check out the &lt;code&gt;attempt&lt;/code&gt; method:</source>
          <target state="translated">我们将通过 &lt;code&gt;Auth&lt;/code&gt; &lt;a href=&quot;facades&quot;&gt;Facade&lt;/a&gt;访问Laravel的身份验证服务，因此我们需要确保在类顶部导入 &lt;code&gt;Auth&lt;/code&gt; Facade。接下来，让我们检查一下 &lt;code&gt;attempt&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="1d719f706c1e82d33414649974d7dfe68600e2c6" translate="yes" xml:space="preserve">
          <source>We've already examined how to pass data attributes to a component; however, sometimes you may need to specify additional HTML attributes, such as &lt;code&gt;class&lt;/code&gt;, that are not part of the data required for a component to function. Typically, you want to pass these additional attributes down to the root element of the component template. For example, imagine we want to render an &lt;code&gt;alert&lt;/code&gt; component like so:</source>
          <target state="translated">我们已经研究了如何将数据属性传递给组件。但是，有时您可能需要指定其他HTML属性（例如 &lt;code&gt;class&lt;/code&gt; )，这些属性不是组件运行所需数据的一部分。通常，您希望将这些其他属性向下传递到组件模板的根元素。例如，假设我们要呈现一个 &lt;code&gt;alert&lt;/code&gt; 组件，如下所示：</target>
        </trans-unit>
        <trans-unit id="26037b5b0bfa3f49c1a4763e25ee1bee011d319d" translate="yes" xml:space="preserve">
          <source>Web Server Configuration</source>
          <target state="translated">网络服务器配置</target>
        </trans-unit>
        <trans-unit id="e21fe93b150dc90da16caac8eecd7697af124c0b" translate="yes" xml:space="preserve">
          <source>Web Servers</source>
          <target state="translated">网站服务器</target>
        </trans-unit>
        <trans-unit id="08893e6585bd4f8739b3fe8d6a5a6848a7267e29" translate="yes" xml:space="preserve">
          <source>Webdriver &amp;amp; Laravel Dusk Utilities</source>
          <target state="translated">Webdriver和Laravel Dusk实用程序</target>
        </trans-unit>
        <trans-unit id="aded54ec3ed315a888256b00507f341b77a42b8e" translate="yes" xml:space="preserve">
          <source>Webhooks &amp;amp; CSRF Protection</source>
          <target state="translated">Webhooks和CSRF保护</target>
        </trans-unit>
        <trans-unit id="2c3f5842543c3f35e7df5231d55cc2b67a7d32bc" translate="yes" xml:space="preserve">
          <source>Webpack offers a variety of &lt;a href=&quot;https://webpack.js.org/configuration/devtool/#devtool&quot;&gt;source mapping styles&lt;/a&gt;. By default, Mix's source mapping style is set to &lt;code&gt;eval-source-map&lt;/code&gt;, which provides a fast rebuild time. If you want to change the mapping style, you may do so using the &lt;code&gt;sourceMaps&lt;/code&gt; method:</source>
          <target state="translated">Webpack提供了多种&lt;a href=&quot;https://webpack.js.org/configuration/devtool/#devtool&quot;&gt;源映射样式&lt;/a&gt;。默认情况下，Mix的源映射样式设置为 &lt;code&gt;eval-source-map&lt;/code&gt; ，这提供了快速的重建时间。如果要更改映射样式，可以使用 &lt;code&gt;sourceMaps&lt;/code&gt; 方法进行更改：</target>
        </trans-unit>
        <trans-unit id="de833b27867cf0dabdf48eedb5c8d371dafab45b" translate="yes" xml:space="preserve">
          <source>What if a customer's credit card expires? No worries - Cashier includes a Webhook controller that can easily cancel the customer's subscription for you. As noted above, all you need to do is point a route to the controller:</source>
          <target state="translated">如果客户的信用卡过期了怎么办?不用担心--Cashier包含了一个Webhook控制器,它可以很容易地帮你取消客户的订阅。如上所述,您所需要做的就是指向控制器的路由。</target>
        </trans-unit>
        <trans-unit id="87919cd5573ff73c0b5eeb8d810478cacaea886b" translate="yes" xml:space="preserve">
          <source>What if a customer's credit card expires? No worries - Cashier includes a Webhook controller that can easily cancel the customer's subscription for you. Just point a route to the controller:</source>
          <target state="translated">如果客户的信用卡过期了怎么办?不用担心--Cashier包含了一个Webhook控制器,可以轻松地为您取消客户的订阅。只需将一个路由指向控制器即可。</target>
        </trans-unit>
        <trans-unit id="7428637e3488d0eccd1517040f158683c29113b3" translate="yes" xml:space="preserve">
          <source>What if a customer's credit card expires? No worries - Cashier's Webhook controller will cancel the customer's subscription for you. Failed payments will automatically be captured and handled by the controller. The controller will cancel the customer's subscription when Paddle determines the subscription has failed (normally after three failed payment attempts).</source>
          <target state="translated">如果顾客的信用卡过期了怎么办?不用担心--出纳的Webhook控制器会帮你取消客户的订购。控制器会自动捕捉和处理付款失败的情况。当Paddle确定客户的订阅失败时,控制器会取消客户的订阅(通常在三次付款失败后)。</target>
        </trans-unit>
        <trans-unit id="6ba21b4776f95280cd7a6a81340dd1a564900e5e" translate="yes" xml:space="preserve">
          <source>What if a customer's credit card expires? No worries - Cashier's Webhook controller will cancel the customer's subscription for you. Failed payments will automatically be captured and handled by the controller. The controller will cancel the customer's subscription when Stripe determines the subscription has failed (normally after three failed payment attempts).</source>
          <target state="translated">如果顾客的信用卡过期了怎么办?不用担心--出纳的Webhook控制器会帮你取消客户的订购。控制器会自动捕捉和处理失败的付款。当Stripe确定订购失败时(通常在三次付款失败后),控制器将取消客户的订购。</target>
        </trans-unit>
        <trans-unit id="9a66d4a0910eaef54ed1f2355f51b009b4f380d6" translate="yes" xml:space="preserve">
          <source>When Issuing Personal Access Tokens</source>
          <target state="translated">发行个人访问令牌时</target>
        </trans-unit>
        <trans-unit id="892983fe50cf425a97431f2e54dc9df64982ec00" translate="yes" xml:space="preserve">
          <source>When Requesting Authorization Codes</source>
          <target state="translated">申请授权码时</target>
        </trans-unit>
        <trans-unit id="14d90ed812d7b5f98aac8f60b0355bb851e3ff13" translate="yes" xml:space="preserve">
          <source>When To Use Contracts</source>
          <target state="translated">何时使用合同</target>
        </trans-unit>
        <trans-unit id="2426ce7e94e748b33b9c4a6addc3c07e09f43ed2" translate="yes" xml:space="preserve">
          <source>When To Use Facades</source>
          <target state="translated">何时使用外墙</target>
        </trans-unit>
        <trans-unit id="5fcecf31209da042c789df78979d8c91ae942cdf" translate="yes" xml:space="preserve">
          <source>When a batch job fails, the &lt;code&gt;catch&lt;/code&gt; callback (if assigned) will be invoked. This callback is only invoked for the job that fails within the batch.</source>
          <target state="translated">当批处理作业失败时，将调用 &lt;code&gt;catch&lt;/code&gt; 回调（如果已分配）。仅针对批处理中失败的作业调用此回调。</target>
        </trans-unit>
        <trans-unit id="9ee6e36d9ea3a168ea2a90f52b68861939ab5a5f" translate="yes" xml:space="preserve">
          <source>When a client is created, it will be issued a client ID and client secret. These values will be used when requesting access tokens from your application. The client creation route will return the new client instance:</source>
          <target state="translated">当一个客户端被创建时,它将被发行一个客户端ID和客户端秘密。这些值将在向您的应用程序请求访问令牌时使用。客户端创建路径将返回新的客户端实例。</target>
        </trans-unit>
        <trans-unit id="79664f80c60a7601888248326f1a8fc76cf3fa74" translate="yes" xml:space="preserve">
          <source>When a column is considered a date, you may set its value to a UNIX timestamp, date string (&lt;code&gt;Y-m-d&lt;/code&gt;), date-time string, and of course a &lt;code&gt;DateTime&lt;/code&gt; / &lt;code&gt;Carbon&lt;/code&gt; instance, and the date's value will automatically be correctly stored in your database:</source>
          <target state="translated">当一列被认为是日期时，您可以将其值设置为UNIX时间戳，日期字符串（ &lt;code&gt;Y-m-d&lt;/code&gt; ），日期时间字符串，当然还有一个 &lt;code&gt;DateTime&lt;/code&gt; / &lt;code&gt;Carbon&lt;/code&gt; 实例，并且该日期的值将自动正确地存储在数据库中：</target>
        </trans-unit>
        <trans-unit id="38409375bc40cf2cf018c471fb7393ef58c466aa" translate="yes" xml:space="preserve">
          <source>When a column is considered a date, you may set its value to a UNIX timestamp, date string (&lt;code&gt;Y-m-d&lt;/code&gt;), date-time string, or a &lt;code&gt;DateTime&lt;/code&gt; / &lt;code&gt;Carbon&lt;/code&gt; instance. The date's value will be correctly converted and stored in your database:</source>
          <target state="translated">当一列被认为是日期时，可以将其值设置为UNIX时间戳，日期字符串（ &lt;code&gt;Y-m-d&lt;/code&gt; ），日期时间字符串或 &lt;code&gt;DateTime&lt;/code&gt; / &lt;code&gt;Carbon&lt;/code&gt; 实例。日期值将正确转换并存储在数据库中：</target>
        </trans-unit>
        <trans-unit id="b74cc881b7ad29ba66430297949ddfc45d719b6f" translate="yes" xml:space="preserve">
          <source>When a job within a batch fails, Laravel will automatically mark the batch as &quot;cancelled&quot;. If you wish, you may disable this behavior so that a job failure does not automatically mark the batch as cancelled. This may be accomplished by calling the &lt;code&gt;allowFailures&lt;/code&gt; method while dispatching the batch:</source>
          <target state="translated">当批处理中的作业失败时，Laravel会自动将该批处理标记为&amp;ldquo;已取消&amp;rdquo;。如果您愿意，可以禁用此行为，以便作业失败不会自动将批处理标记为已取消。这可以通过在 &lt;code&gt;allowFailures&lt;/code&gt; 处理时调用allowFailures方法来完成：</target>
        </trans-unit>
        <trans-unit id="125590675e6bd15a02a86c5eb8b4805c385c6c14" translate="yes" xml:space="preserve">
          <source>When a model &lt;code&gt;belongsTo&lt;/code&gt; or &lt;code&gt;belongsToMany&lt;/code&gt; another model, such as a &lt;code&gt;Comment&lt;/code&gt; which belongs to a &lt;code&gt;Post&lt;/code&gt;, it is sometimes helpful to update the parent's timestamp when the child model is updated. For example, when a &lt;code&gt;Comment&lt;/code&gt; model is updated, you may want to automatically &quot;touch&quot; the &lt;code&gt;updated_at&lt;/code&gt; timestamp of the owning &lt;code&gt;Post&lt;/code&gt;. Eloquent makes it easy. Just add a &lt;code&gt;touches&lt;/code&gt; property containing the names of the relationships to the child model:</source>
          <target state="translated">当一个模型 &lt;code&gt;belongsTo&lt;/code&gt; 或 &lt;code&gt;belongsToMany&lt;/code&gt; 另一种模式，比如 &lt;code&gt;Comment&lt;/code&gt; 属于一个 &lt;code&gt;Post&lt;/code&gt; ，它有时是有帮助的更新父的时间戳当孩子模型更新。例如，当 &lt;code&gt;Comment&lt;/code&gt; 模型更新时，您可能希望自动&amp;ldquo;触摸&amp;rdquo; 拥有 &lt;code&gt;Post&lt;/code&gt; 的 &lt;code&gt;updated_at&lt;/code&gt; 时间戳。口才使它变得容易。只需添加一个 &lt;code&gt;touches&lt;/code&gt; 属性，其中包含与子模型的关系的名称：</target>
        </trans-unit>
        <trans-unit id="bfa7b3468c37ed0ba4e4753a360920a868dd4045" translate="yes" xml:space="preserve">
          <source>When a model is being unserialized, check if it needs to be booted.</source>
          <target state="translated">当一个模型被未序列化时,检查它是否需要被启动。</target>
        </trans-unit>
        <trans-unit id="28308971c138caf83500a5fefb8ef266d7b98000" translate="yes" xml:space="preserve">
          <source>When a notification is sent, the &lt;code&gt;Illuminate\Notifications\Events\NotificationSent&lt;/code&gt; event is fired by the notification system. This contains the &quot;notifiable&quot; entity and the notification instance itself. You may register listeners for this event in your &lt;code&gt;EventServiceProvider&lt;/code&gt;:</source>
          <target state="translated">发送 &lt;code&gt;Illuminate\Notifications\Events\NotificationSent&lt;/code&gt; ，通知系统会触发Illuminate \ Notifications \ Events \ NotificationSent事件。它包含&amp;ldquo;可通知&amp;rdquo;实体和通知实例本身。您可以在 &lt;code&gt;EventServiceProvider&lt;/code&gt; 中注册此事件的侦听器：</target>
        </trans-unit>
        <trans-unit id="38397c32243598bc3d6649cbdc7987be437fa21c" translate="yes" xml:space="preserve">
          <source>When a payment needs additional confirmation, the subscription will remain in an &lt;code&gt;incomplete&lt;/code&gt; or &lt;code&gt;past_due&lt;/code&gt; state as indicated by its &lt;code&gt;stripe_status&lt;/code&gt; database column. Cashier will automatically activate the customer's subscription via a webhook as soon as payment confirmation is complete.</source>
          <target state="translated">当付款需要其他确认时，订阅将保持其 &lt;code&gt;stripe_status&lt;/code&gt; 数据库列所指示的 &lt;code&gt;incomplete&lt;/code&gt; 或 &lt;code&gt;past_due&lt;/code&gt; 状态。付款确认完成后，收银员将通过网络挂钩自动激活客户的订阅。</target>
        </trans-unit>
        <trans-unit id="b1805c87f7bdbb2805f83a454c29953e2114c423" translate="yes" xml:space="preserve">
          <source>When a remote service needs to authenticate to access an API, cookies are not typically used because there is no web browser. Instead, the remote service sends an API token to the API on each request. The application may validate the incoming token against a table of valid API tokens and &quot;authenticate&quot; the request as being performed by the user associated with that API token.</source>
          <target state="translated">当远程服务需要验证以访问API时,通常不使用cookies,因为没有Web浏览器。相反,远程服务在每次请求时都会向API发送一个API令牌。应用程序可能会根据有效的 API 令牌表验证传入的令牌,并 &quot;验证 &quot;该请求是由与该 API 令牌关联的用户执行的。</target>
        </trans-unit>
        <trans-unit id="620ac5e7d1e3b6cc566be2f5b51ac5041d2234d8" translate="yes" xml:space="preserve">
          <source>When a soft deleted model is permanently deleted using &lt;code&gt;forceDelete&lt;/code&gt;, Scout will remove it from the search index automatically.</source>
          <target state="translated">当使用 &lt;code&gt;forceDelete&lt;/code&gt; 永久删除软删除的模型时，Scout会自动将其从搜索索引中删除。</target>
        </trans-unit>
        <trans-unit id="41b64d2b7c503175ee376c52d910344d28230a0b" translate="yes" xml:space="preserve">
          <source>When a subscription has an incomplete payment, you should direct the user to Cashier's payment confirmation page, passing the &lt;code&gt;latestPayment&lt;/code&gt; identifier. You may use the &lt;code&gt;latestPayment&lt;/code&gt; method available on subscription instance to retrieve this identifier:</source>
          <target state="translated">如果订阅的付款不完整，则应将用户引导至Cashier的付款确认页面，并传递 &lt;code&gt;latestPayment&lt;/code&gt; 标识符。您可以使用订阅实例上可用的 &lt;code&gt;latestPayment&lt;/code&gt; 方法来检索此标识符：</target>
        </trans-unit>
        <trans-unit id="ac1174138ecc9999919ae0f8c84cfc8a18b6d75f" translate="yes" xml:space="preserve">
          <source>When a subscription has multiple plans, it will have multiple subscription &quot;items&quot; stored in your database's &lt;code&gt;subscription_items&lt;/code&gt; table. You may access these via the &lt;code&gt;items&lt;/code&gt; relationship on the subscription:</source>
          <target state="translated">当预订具有多个计划时，它将在数据库的 &lt;code&gt;subscription_items&lt;/code&gt; 表中存储多个预订&amp;ldquo;项目&amp;rdquo; 。您可以通过订阅上的 &lt;code&gt;items&lt;/code&gt; 关系访问它们：</target>
        </trans-unit>
        <trans-unit id="5bed68a026f2be6ba6a1ba11b81caac39b109879" translate="yes" xml:space="preserve">
          <source>When a subscription is cancelled, Cashier will automatically set the &lt;code&gt;ends_at&lt;/code&gt; column in your database. This column is used to know when the &lt;code&gt;subscribed&lt;/code&gt; method should begin returning &lt;code&gt;false&lt;/code&gt;. For example, if a customer cancels a subscription on March 1st, but the subscription was not scheduled to end until March 5th, the &lt;code&gt;subscribed&lt;/code&gt; method will continue to return &lt;code&gt;true&lt;/code&gt; until March 5th.</source>
          <target state="translated">取消订阅后，Cashier将自动在数据库中设置 &lt;code&gt;ends_at&lt;/code&gt; 列。此列用于了解 &lt;code&gt;subscribed&lt;/code&gt; 方法何时应开始返回 &lt;code&gt;false&lt;/code&gt; 。例如，如果客户在3月1日取消了订阅，但该订阅原定于3月5日结束，则 &lt;code&gt;subscribed&lt;/code&gt; 方法将继续返回 &lt;code&gt;true&lt;/code&gt; 直到3月5日。</target>
        </trans-unit>
        <trans-unit id="829d53700c3d9a7a9970d2ced4f9499c9f73abda" translate="yes" xml:space="preserve">
          <source>When a subscription is in a &lt;code&gt;past_due&lt;/code&gt; state it cannot be changed until payment information has been updated. Therefore, the &lt;code&gt;swap&lt;/code&gt; and &lt;code&gt;updateQuantity&lt;/code&gt; methods will throw an exception when the subscription is in a &lt;code&gt;past_due&lt;/code&gt; state.</source>
          <target state="translated">当订阅处于 &lt;code&gt;past_due&lt;/code&gt; 状态时，只有在更新付款信息后才能更改。因此，当订阅处于 &lt;code&gt;past_due&lt;/code&gt; 状态时， &lt;code&gt;swap&lt;/code&gt; 和 &lt;code&gt;updateQuantity&lt;/code&gt; 方法将引发异常。</target>
        </trans-unit>
        <trans-unit id="e90473ecb434fd03572601e96ec88d6c2f75b216" translate="yes" xml:space="preserve">
          <source>When a subscription is in an &lt;code&gt;incomplete&lt;/code&gt; state it cannot be changed until the payment is confirmed. Therefore, the &lt;code&gt;swap&lt;/code&gt; and &lt;code&gt;updateQuantity&lt;/code&gt; methods will throw an exception when the subscription is in an &lt;code&gt;incomplete&lt;/code&gt; state.</source>
          <target state="translated">当订阅处于 &lt;code&gt;incomplete&lt;/code&gt; 状态时，只有在确认付款后才能更改。因此，当订阅处于 &lt;code&gt;incomplete&lt;/code&gt; 状态时， &lt;code&gt;swap&lt;/code&gt; 和 &lt;code&gt;updateQuantity&lt;/code&gt; 方法将引发异常。</target>
        </trans-unit>
        <trans-unit id="ec208e717edbb6899fa3abe4664a9bac177caf55" translate="yes" xml:space="preserve">
          <source>When a subscription is past due, you should instruct the user to &lt;a href=&quot;#updating-payment-information&quot;&gt;update their payment information&lt;/a&gt;. You may configure how past due subscriptions are handled in your &lt;a href=&quot;https://vendors.paddle.com/subscription-settings&quot;&gt;Paddle subscription settings&lt;/a&gt;.</source>
          <target state="translated">订阅到期后，您应指示用户&lt;a href=&quot;#updating-payment-information&quot;&gt;更新其付款信息&lt;/a&gt;。您可以在&lt;a href=&quot;https://vendors.paddle.com/subscription-settings&quot;&gt;Paddle订阅设置中&lt;/a&gt;配置过期订阅的处理方式。</target>
        </trans-unit>
        <trans-unit id="5ac4faf211138e88fb57d75fa30602c561011117" translate="yes" xml:space="preserve">
          <source>When a subscription is paused, Cashier will automatically set the &lt;code&gt;paused_from&lt;/code&gt; column in your database. This column is used to know when the &lt;code&gt;paused&lt;/code&gt; method should begin returning &lt;code&gt;true&lt;/code&gt;. For example, if a customer pauses a subscription on March 1st, but the subscription was not scheduled to recur until March 5th, the &lt;code&gt;paused&lt;/code&gt; method will continue to return &lt;code&gt;false&lt;/code&gt; until March 5th.</source>
          <target state="translated">暂停订阅后，Cashier会自动在数据库中设置 &lt;code&gt;paused_from&lt;/code&gt; 列。该列用于了解 &lt;code&gt;paused&lt;/code&gt; 方法何时应开始返回 &lt;code&gt;true&lt;/code&gt; 。例如，如果客户在3月1日暂停订阅，但该订阅原定于3月5日重新出现，则被 &lt;code&gt;paused&lt;/code&gt; 方法将在3月5日之前继续返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0ae5724a796109eb543fbe47159eca8929375bc3" translate="yes" xml:space="preserve">
          <source>When a test fails, Dusk will automatically resize the browser to fit the content prior to taking a screenshot. You may disable this feature by calling the &lt;code&gt;disableFitOnFailure&lt;/code&gt; method within your test:</source>
          <target state="translated">如果测试失败，Dusk将在截屏之前自动调整浏览器的大小以适合内容。您可以通过在测试中调用 &lt;code&gt;disableFitOnFailure&lt;/code&gt; 方法来禁用此功能：</target>
        </trans-unit>
        <trans-unit id="44a5e34bab8939d35b562af47d0351b53d839269" translate="yes" xml:space="preserve">
          <source>When a user has finished updating their information, a &lt;code&gt;subscription_updated&lt;/code&gt; webhook will be dispatched by Paddle and the subscription details will be updated in your application's database.</source>
          <target state="translated">用户完成信息更新后，Paddle将分派 &lt;code&gt;subscription_updated&lt;/code&gt; Webhook，并且订阅详细信息将在应用程序的数据库中更新。</target>
        </trans-unit>
        <trans-unit id="5c425cb0adacc52cf2cf300360d7e8e80a1cd201" translate="yes" xml:space="preserve">
          <source>When a user is successfully authenticated, they will be redirected to the &lt;code&gt;/home&lt;/code&gt; URI. You can customize the post-authentication redirect location by defining a &lt;code&gt;redirectTo&lt;/code&gt; property on the &lt;code&gt;LoginController&lt;/code&gt;, &lt;code&gt;RegisterController&lt;/code&gt;, &lt;code&gt;ResetPasswordController&lt;/code&gt;, and &lt;code&gt;VerificationController&lt;/code&gt;:</source>
          <target state="translated">成功验证用户身份后，他们将被重定向到 &lt;code&gt;/home&lt;/code&gt; URI。您可以通过在 &lt;code&gt;LoginController&lt;/code&gt; ， &lt;code&gt;RegisterController&lt;/code&gt; ， &lt;code&gt;ResetPasswordController&lt;/code&gt; 和 &lt;code&gt;VerificationController&lt;/code&gt; 上定义 &lt;code&gt;redirectTo&lt;/code&gt; 属性来自定义身份验证后的重定向位置：</target>
        </trans-unit>
        <trans-unit id="9aac150840300add0edd70cb094dc507d556d551" translate="yes" xml:space="preserve">
          <source>When a user is successfully authenticated, they will typically be redirected to the &lt;code&gt;/home&lt;/code&gt; URI. You can customize the post-authentication redirect path using the &lt;code&gt;HOME&lt;/code&gt; constant defined in your &lt;code&gt;RouteServiceProvider&lt;/code&gt;:</source>
          <target state="translated">成功验证用户身份后，通常会将其重定向到 &lt;code&gt;/home&lt;/code&gt; URI。您可以使用 &lt;code&gt;RouteServiceProvider&lt;/code&gt; 中定义的 &lt;code&gt;HOME&lt;/code&gt; 常量来自定义身份验证后的重定向路径：</target>
        </trans-unit>
        <trans-unit id="f1ca86eee0721c970f4f0f707759a4e87ba67aab" translate="yes" xml:space="preserve">
          <source>When a user is viewing one of their orders, we don't want them to have to refresh the page to view status updates. Instead, we want to broadcast the updates to the application as they are created. So, we need to mark the &lt;code&gt;ShippingStatusUpdated&lt;/code&gt; event with the &lt;code&gt;ShouldBroadcast&lt;/code&gt; interface. This will instruct Laravel to broadcast the event when it is fired:</source>
          <target state="translated">当用户查看其订单之一时，我们不希望他们必须刷新页面以查看状态更新。相反，我们希望在创建更新时向应用程序广播更新。因此，我们需要使用 &lt;code&gt;ShouldBroadcast&lt;/code&gt; 接口标记 &lt;code&gt;ShippingStatusUpdated&lt;/code&gt; 事件。这将指示Laravel在事件触发时广播事件：</target>
        </trans-unit>
        <trans-unit id="11599e295b83f1af295523f73811bb41e23c9a15" translate="yes" xml:space="preserve">
          <source>When accessing Eloquent relationships as properties, the relationship data is &quot;lazy loaded&quot;. This means the relationship data is not actually loaded until you first access the property. However, Eloquent can &quot;eager load&quot; relationships at the time you query the parent model. Eager loading alleviates the N + 1 query problem. To illustrate the N + 1 query problem, consider a &lt;code&gt;Book&lt;/code&gt; model that is related to &lt;code&gt;Author&lt;/code&gt;:</source>
          <target state="translated">当访问Eloquent关系作为属性时，关系数据是&amp;ldquo;延迟加载&amp;rdquo;的。这意味着直到您首次访问该属性，关系数据才被实际加载。但是，Eloquent可以在查询父模型时&amp;ldquo;急于加载&amp;rdquo;关系。渴望加载减轻了N + 1查询问题。为了说明N + 1查询问题，请考虑与 &lt;code&gt;Author&lt;/code&gt; 相关的 &lt;code&gt;Book&lt;/code&gt; 模型：</target>
        </trans-unit>
        <trans-unit id="b323ee3069c4b6808ea86369838a7ae662f6bb46" translate="yes" xml:space="preserve">
          <source>When accessing the records for a model, you may wish to limit your results based on the absence of a relationship. For example, imagine you want to retrieve all blog posts that &lt;strong&gt;don't&lt;/strong&gt; have any comments. To do so, you may pass the name of the relationship to the &lt;code&gt;doesntHave&lt;/code&gt; and &lt;code&gt;orDoesntHave&lt;/code&gt; methods:</source>
          <target state="translated">访问模型的记录时，您可能希望根据没有关系的情况来限制结果。例如，假设您想检索所有&lt;strong&gt;没有&lt;/strong&gt;评论的博客文章。为此，您可以将关系的名称传递给 &lt;code&gt;doesntHave&lt;/code&gt; 和 &lt;code&gt;orDoesntHave&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="7c053f435d68621cde60c6767a2dccee97f31915" translate="yes" xml:space="preserve">
          <source>When accessing the records for a model, you may wish to limit your results based on the existence of a relationship. For example, imagine you want to retrieve all blog posts that have at least one comment. To do so, you may pass the name of the relationship to the &lt;code&gt;has&lt;/code&gt; and &lt;code&gt;orHas&lt;/code&gt; methods:</source>
          <target state="translated">访问模型的记录时，您可能希望根据关系的存在来限制结果。例如，假设您要检索所有具有至少一个评论的博客文章。为此，您可以将关系的名称传递给 &lt;code&gt;has&lt;/code&gt; 和 &lt;code&gt;orHas&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="c97c0ea18ee09f224057523fdf1b4729c3f6635c" translate="yes" xml:space="preserve">
          <source>When accessing this hidden route, you will then be redirected to the &lt;code&gt;/&lt;/code&gt; route of the application. Once the cookie has been issued to your browser, you will be able to browse the application normally as if it was not in maintenance mode.</source>
          <target state="translated">访问此隐藏的路由时，您将被重定向到应用程序的 &lt;code&gt;/&lt;/code&gt; 路由。在将cookie发送到浏览器后，您将能够正常浏览该应用程序，就像它不在维护模式下一样。</target>
        </trans-unit>
        <trans-unit id="ed5edd420fb1b9abde903c3b3241bd9d695e535f" translate="yes" xml:space="preserve">
          <source>When adding a &quot;morph map&quot; to your existing application, every morphable &lt;code&gt;*_type&lt;/code&gt; column value in your database that still contains a fully-qualified class will need to be converted to its &quot;map&quot; name.</source>
          <target state="translated">向现有应用程序添加&amp;ldquo;变形图&amp;rdquo;时，数据库中仍包含完全限定类的每个可变形 &lt;code&gt;*_type&lt;/code&gt; 列值都需要转换为其&amp;ldquo;地图&amp;rdquo;名称。</target>
        </trans-unit>
        <trans-unit id="a8fbe56b17580829f6ed4e37be9ced4b0fd9c8fd" translate="yes" xml:space="preserve">
          <source>When all of Laravel's services are neatly defined within simple interfaces, it is very easy to determine the functionality offered by a given service. &lt;strong&gt;The contracts serve as succinct documentation to the framework's features.&lt;/strong&gt;</source>
          <target state="translated">当所有Laravel的服务都在简单的界面中整齐地定义时，很容易确定给定服务提供的功能。&lt;strong&gt;合同充当框架功能的简要文档。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5235b27a68a522bbaa59b773fd1854fcd5b8b8e6" translate="yes" xml:space="preserve">
          <source>When all of the responses in a response sequence have been consumed, any further requests will cause the response sequence to throw an exception. If you would like to specify a default response that should be returned when a sequence is empty, you may use the &lt;code&gt;whenEmpty&lt;/code&gt; method:</source>
          <target state="translated">当响应序列中的所有响应都已耗尽时，任何其他请求都将导致响应序列引发异常。如果您要指定默认响应，当序列为空时应返回该默认响应，则可以使用 &lt;code&gt;whenEmpty&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="e3d352571b21e5443c5cc66f8deca03023cd91ba" translate="yes" xml:space="preserve">
          <source>When an Eloquent model is converted to JSON, its loaded relationships will automatically be included as attributes on the JSON object. Also, though Eloquent relationship methods are defined using &quot;camel case&quot;, a relationship's JSON attribute will be &quot;snake case&quot;.</source>
          <target state="translated">当Eloquent模型转换为JSON时,其加载的关系将自动作为属性包含在JSON对象上。另外,虽然Eloquent关系方法是用 &quot;骆驼大小写 &quot;定义的,但关系的JSON属性将是 &quot;蛇大小写&quot;。</target>
        </trans-unit>
        <trans-unit id="667565a9e6b7c0a2cf584ee328747e96c0baa854" translate="yes" xml:space="preserve">
          <source>When an Eloquent model is converted to an array or JSON using the &lt;code&gt;toArray&lt;/code&gt; method, your custom cast value objects will typically be serialized as well as long as they implement the &lt;code&gt;Illuminate\Contracts\Support\Arrayable&lt;/code&gt; and &lt;code&gt;JsonSerializable&lt;/code&gt; interfaces. However, when using value objects provided by third-party libraries, you may not have the ability to add these interfaces to the object.</source>
          <target state="translated">当使用 &lt;code&gt;toArray&lt;/code&gt; 方法将Eloquent模型转换为数组或JSON时，您的自定义 &lt;code&gt;Illuminate\Contracts\Support\Arrayable&lt;/code&gt; &lt;code&gt;JsonSerializable&lt;/code&gt; 值对象通常会被序列化，只要它们实现Illuminate \ Contracts \ Support \ Arrayable和JsonSerializable接口即可。但是，当使用第三方库提供的值对象时，您可能无法将这些接口添加到对象中。</target>
        </trans-unit>
        <trans-unit id="4fb8366001d90bc865426f48a5271e4ae0523cd6" translate="yes" xml:space="preserve">
          <source>When an event is broadcast, all of its &lt;code&gt;public&lt;/code&gt; properties are automatically serialized and broadcast as the event's payload, allowing you to access any of its public data from your JavaScript application. So, for example, if your event has a single public &lt;code&gt;$user&lt;/code&gt; property that contains an Eloquent model, the event's broadcast payload would be:</source>
          <target state="translated">广播事件时，其所有 &lt;code&gt;public&lt;/code&gt; 属性都将自动序列化并作为事件的有效负载广播，从而使您可以从JavaScript应用程序访问其任何公共数据。因此，例如，如果您的事件具有包含Eloquent模型的单个公共 &lt;code&gt;$user&lt;/code&gt; 属性，则该事件的广播有效载荷为：</target>
        </trans-unit>
        <trans-unit id="969808d80333b9dba3eb634c42582d4394dc25f4" translate="yes" xml:space="preserve">
          <source>When an exception is uncaught and the &lt;code&gt;APP_DEBUG&lt;/code&gt; environment variable is &lt;code&gt;true&lt;/code&gt;, the debug page will show all environment variables and their contents. In some cases you may want to obscure certain variables. You may do this by updating the &lt;code&gt;debug_blacklist&lt;/code&gt; option in your &lt;code&gt;config/app.php&lt;/code&gt; configuration file.</source>
          <target state="translated">当未捕获到异常且 &lt;code&gt;APP_DEBUG&lt;/code&gt; 环境变量为 &lt;code&gt;true&lt;/code&gt; 时，调试页将显示所有环境变量及其内容。在某些情况下，您可能希望遮盖某些变量。您可以通过更新 &lt;code&gt;config/app.php&lt;/code&gt; 配置文件中的 &lt;code&gt;debug_blacklist&lt;/code&gt; 选项来执行此操作。</target>
        </trans-unit>
        <trans-unit id="bccc1757c37bcc547282bc6cc09d8a305d208adb" translate="yes" xml:space="preserve">
          <source>When an exception is uncaught and the &lt;code&gt;APP_DEBUG&lt;/code&gt; environment variable is &lt;code&gt;true&lt;/code&gt;, the debug page will show all environment variables and their contents. In some cases you may want to obscure certain variables. You may do this by updating the &lt;code&gt;debug_hide&lt;/code&gt; option in your &lt;code&gt;config/app.php&lt;/code&gt; configuration file.</source>
          <target state="translated">当未捕获到异常且 &lt;code&gt;APP_DEBUG&lt;/code&gt; 环境变量为 &lt;code&gt;true&lt;/code&gt; 时，调试页面将显示所有环境变量及其内容。在某些情况下，您可能希望遮盖某些变量。您可以通过更新 &lt;code&gt;config/app.php&lt;/code&gt; 配置文件中的 &lt;code&gt;debug_hide&lt;/code&gt; 选项来执行此操作。</target>
        </trans-unit>
        <trans-unit id="3fc5815db9657aee6bfe9d117db29bd6bd81b6d4" translate="yes" xml:space="preserve">
          <source>When assigning JSON columns, each column's mass-assignable key must be specified in your model's &lt;code&gt;$fillable&lt;/code&gt; array. For security, Laravel does not support updating nested JSON attributes when using the &lt;code&gt;guarded&lt;/code&gt; property:</source>
          <target state="translated">分配JSON列时，必须在模型的 &lt;code&gt;$fillable&lt;/code&gt; 数组中指定每列的质量可分配键。为了安全起见，在使用 &lt;code&gt;guarded&lt;/code&gt; 属性时，Laravel不支持更新嵌套的JSON属性：</target>
        </trans-unit>
        <trans-unit id="c3d6994a2f5c467954d1b24849e183b214e2e0ea" translate="yes" xml:space="preserve">
          <source>When assigning middleware to a group of routes, you may occasionally need to prevent the middleware from being applied to an individual route within the group. You may accomplish this using the &lt;code&gt;withoutMiddleware&lt;/code&gt; method:</source>
          <target state="translated">将中间件分配给一组路由时，有时可能需要阻止将中间件应用于该组中的单个路由。您可以使用 &lt;code&gt;withoutMiddleware&lt;/code&gt; 方法完成此操作：</target>
        </trans-unit>
        <trans-unit id="6c60a9c7919beaa0268ba1595d1baa54eb25e8c3" translate="yes" xml:space="preserve">
          <source>When assigning middleware, you may also pass the fully qualified class name:</source>
          <target state="translated">在分配中间件时,也可以传递完全限定的类名。</target>
        </trans-unit>
        <trans-unit id="276cfcc69d0e274dfb553ef69778ff0607833be0" translate="yes" xml:space="preserve">
          <source>When attaching a custom cast to a model, cast parameters may be specified by separating them from the class name using a &lt;code&gt;:&lt;/code&gt; character and comma-delimiting multiple parameters. The parameters will be passed to the constructor of the cast class:</source>
          <target state="translated">将自定义演员表附加到模型时，可以通过使用 &lt;code&gt;:&lt;/code&gt; 字符将它们与类名称分开并用逗号分隔多个参数来指定演员表参数。参数将传递给强制转换类的构造函数：</target>
        </trans-unit>
        <trans-unit id="b2c1ed07264972afba59ae985f0771dd7af8def5" translate="yes" xml:space="preserve">
          <source>When attaching a relationship to a model, you may also pass an array of additional data to be inserted into the intermediate table:</source>
          <target state="translated">当将关系附加到一个模型时,您还可以传递一个附加数据数组来插入到中间表中。</target>
        </trans-unit>
        <trans-unit id="55b662eeb5711cd71c5942a26509a1ff97f04732" translate="yes" xml:space="preserve">
          <source>When attaching files to a message, you may also specify the display name and / or MIME type by passing an &lt;code&gt;array&lt;/code&gt; as the second argument to the &lt;code&gt;attach&lt;/code&gt; method:</source>
          <target state="translated">将文件附加到消息时，还可以通过将 &lt;code&gt;array&lt;/code&gt; 作为第二个参数传递给 &lt;code&gt;attach&lt;/code&gt; 方法来指定显示名称和/或MIME类型：</target>
        </trans-unit>
        <trans-unit id="1510a7793661573c67e22803651201b30d0eb3be" translate="yes" xml:space="preserve">
          <source>When attaching the &lt;code&gt;auth&lt;/code&gt; middleware to a route, you may also specify which guard should be used to authenticate the user. The guard specified should correspond to one of the keys in the &lt;code&gt;guards&lt;/code&gt; array of your &lt;code&gt;auth.php&lt;/code&gt; configuration file:</source>
          <target state="translated">将 &lt;code&gt;auth&lt;/code&gt; 中间件附加到路由时，您还可以指定应使用哪个防护对用户进行身份验证。指定的防护应与 &lt;code&gt;auth.php&lt;/code&gt; 配置文件的 &lt;code&gt;guards&lt;/code&gt; 数组中的键之一相对应：</target>
        </trans-unit>
        <trans-unit id="5eed1c27c5d4578e0e9486b83cc660b5c928070d" translate="yes" xml:space="preserve">
          <source>When attempting to determine if the authenticated user can update a given post, we can invoke this policy method like so:</source>
          <target state="translated">当试图确定经过认证的用户是否可以更新一个给定的帖子时,我们可以这样调用这个策略方法。</target>
        </trans-unit>
        <trans-unit id="c00752cacbe43d19f0a902ea201cbf46ea5c6312" translate="yes" xml:space="preserve">
          <source>When authenticating using the password grant, Passport will use the &lt;code&gt;email&lt;/code&gt; attribute of your model as the &quot;username&quot;. However, you may customize this behavior by defining a &lt;code&gt;findForPassport&lt;/code&gt; method on your model:</source>
          <target state="translated">使用密码授予进行身份验证时，Passport会将模型的 &lt;code&gt;email&lt;/code&gt; 属性用作&amp;ldquo;用户名&amp;rdquo;。但是，您可以通过在模型上定义 &lt;code&gt;findForPassport&lt;/code&gt; 方法来自定义此行为：</target>
        </trans-unit>
        <trans-unit id="66a5889f4169ed4c816c8e5730e5fba639aa6bd9" translate="yes" xml:space="preserve">
          <source>When authenticating using the password grant, Passport will use the &lt;code&gt;password&lt;/code&gt; attribute of your model to validate the given password. If your model does not have a &lt;code&gt;password&lt;/code&gt; attribute or you wish to customize the password validation logic, you can define a &lt;code&gt;validateForPassportPasswordGrant&lt;/code&gt; method on your model:</source>
          <target state="translated">使用密码授予进行身份验证时，Passport将使用模型的 &lt;code&gt;password&lt;/code&gt; 属性来验证给定的密码。如果您的模型没有 &lt;code&gt;password&lt;/code&gt; 属性，或者您希望自定义密码验证逻辑，则可以在模型上定义 &lt;code&gt;validateForPassportPasswordGrant&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="91a779e6ecbb6d1f9ac1482cb55158b88b51a760" translate="yes" xml:space="preserve">
          <source>When authorizing actions using policies, you may pass an array as the second argument to the various authorization functions and helpers. The first element in the array will be used to determine which policy should be invoked, while the rest of the array elements are passed as parameters to the policy method and can be used for additional context when making authorization decisions. For example, consider the following &lt;code&gt;PostPolicy&lt;/code&gt; method definition which contains an additional &lt;code&gt;$category&lt;/code&gt; parameter:</source>
          <target state="translated">使用策略对操作进行授权时，可以将数组作为第二个参数传递给各种授权功能和帮助程序。数组中的第一个元素将用于确定应调用哪个策略，而其余的数组元素将作为参数传递给策略方法，并可在进行授权决策时用于其他上下文。例如，考虑下面的 &lt;code&gt;PostPolicy&lt;/code&gt; 方法定义，其中包含一个附加的 &lt;code&gt;$category&lt;/code&gt; 参数：</target>
        </trans-unit>
        <trans-unit id="8df2b7303c72f1b951c8a60f4f94155afd6b0ca9" translate="yes" xml:space="preserve">
          <source>When available, Mix will automatically display OS notifications for each bundle. This will give you instant feedback, as to whether the compilation was successful or not. However, there may be instances when you'd prefer to disable these notifications. One such example might be triggering Mix on your production server. Notifications may be deactivated, via the &lt;code&gt;disableNotifications&lt;/code&gt; method.</source>
          <target state="translated">如果可用，Mix将自动显示每个捆绑软件的操作系统通知。这将立即为您提供有关编译是否成功的反馈。但是，在某些情况下，您可能希望禁用这些通知。这样的示例之一可能是在生产服务器上触发Mix。通知可以通过 &lt;code&gt;disableNotifications&lt;/code&gt; 方法停用。</target>
        </trans-unit>
        <trans-unit id="636db3c2aaed2d253bb2842f4a4fc4e26cfe414d" translate="yes" xml:space="preserve">
          <source>When building JSON APIs, you will often need to convert your models and relationships to arrays or JSON. Eloquent includes convenient methods for making these conversions, as well as controlling which attributes are included in your serializations.</source>
          <target state="translated">在构建JSON API时,您经常需要将您的模型和关系转换为数组或JSON。Eloquent 包含了方便的方法来进行这些转换,以及控制哪些属性被包含在您的序列化中。</target>
        </trans-unit>
        <trans-unit id="6fb85b7adab979c027e20c432bc822368c3c1ed2" translate="yes" xml:space="preserve">
          <source>When building JavaScript driven applications, it is convenient to have your JavaScript HTTP library automatically attach the CSRF token to every outgoing request. By default, the &lt;code&gt;resources/js/bootstrap.js&lt;/code&gt; file registers the value of the &lt;code&gt;csrf-token&lt;/code&gt; meta tag with the Axios HTTP library. If you are not using this library, you will need to manually configure this behavior for your application.</source>
          <target state="translated">在构建JavaScript驱动的应用程序时，让您的JavaScript HTTP库自动将CSRF令牌附加到每个传出请求是很方便的。默认情况下， &lt;code&gt;resources/js/bootstrap.js&lt;/code&gt; 文件在Axios HTTP库中注册 &lt;code&gt;csrf-token&lt;/code&gt; 元标记的值。如果不使用此库，则需要为应用程序手动配置此行为。</target>
        </trans-unit>
        <trans-unit id="f3067d0c3770f7632d9510135c70f42fa772ec9a" translate="yes" xml:space="preserve">
          <source>When building JavaScript driven applications, it is convenient to have your JavaScript HTTP library automatically attach the CSRF token to every outgoing request. By default, the Axios HTTP library provided in the &lt;code&gt;resources/js/bootstrap.js&lt;/code&gt; file automatically sends an &lt;code&gt;X-XSRF-TOKEN&lt;/code&gt; header using the value of the encrypted &lt;code&gt;XSRF-TOKEN&lt;/code&gt; cookie. If you are not using this library, you will need to manually configure this behavior for your application.</source>
          <target state="translated">在构建JavaScript驱动的应用程序时，让您的JavaScript HTTP库自动将CSRF令牌附加到每个传出请求很方便。默认情况下， &lt;code&gt;resources/js/bootstrap.js&lt;/code&gt; 文件中提供的Axios HTTP库使用加密的 &lt;code&gt;XSRF-TOKEN&lt;/code&gt; cookie的值自动发送 &lt;code&gt;X-XSRF-TOKEN&lt;/code&gt; 标头。如果您不使用此库，则需要为您的应用程序手动配置此行为。</target>
        </trans-unit>
        <trans-unit id="12a0cff7b2a84dfe7bdec52e1d3fab79e37be94a" translate="yes" xml:space="preserve">
          <source>When building a third-party package that interacts with Laravel, it's better to inject &lt;a href=&quot;contracts&quot;&gt;Laravel contracts&lt;/a&gt; instead of using facades. Since packages are built outside of Laravel itself, you will not have access to Laravel's facade testing helpers.</source>
          <target state="translated">在构建与Laravel交互的第三方程序包时，最好注入&lt;a href=&quot;contracts&quot;&gt;Laravel合同&lt;/a&gt;而不是使用Facade。由于软件包是在Laravel本身之外构建的，因此您将无法使用Laravel的外观测试助手。</target>
        </trans-unit>
        <trans-unit id="f7378e497110554a6b1844f41f18a6eec883e8c4" translate="yes" xml:space="preserve">
          <source>When building an API, it can be extremely useful to be able to consume your own API from your JavaScript application. This approach to API development allows your own application to consume the same API that you are sharing with the world. The same API may be consumed by your web application, mobile applications, third-party applications, and any SDKs that you may publish on various package managers.</source>
          <target state="translated">当构建一个API时,能够从你的JavaScript应用中消费你自己的API是非常有用的。这种API开发方法允许您自己的应用程序消费您与世界共享的相同API。同样的API可能会被你的Web应用、移动应用、第三方应用以及你可能在各种包管理器上发布的任何SDK所消费。</target>
        </trans-unit>
        <trans-unit id="6be3eacbbca4b74796539528c666baec5cc7d86c" translate="yes" xml:space="preserve">
          <source>When building an API, you may need a transformation layer that sits between your Eloquent models and the JSON responses that are actually returned to your application's users. Laravel's resource classes allow you to expressively and easily transform your models and model collections into JSON.</source>
          <target state="translated">当构建一个API时,你可能需要一个转换层,它位于你的Eloquent模型和实际返回给你的应用程序用户的JSON响应之间.Laravel的资源类可以让你轻松地将模型和模型集合转化为JSON格式.</target>
        </trans-unit>
        <trans-unit id="a6607885304fb61d14c604ddeb24934795e6cd0a" translate="yes" xml:space="preserve">
          <source>When building an application that utilizes event broadcasting, you may substitute the &lt;code&gt;event&lt;/code&gt; function with the &lt;code&gt;broadcast&lt;/code&gt; function. Like the &lt;code&gt;event&lt;/code&gt; function, the &lt;code&gt;broadcast&lt;/code&gt; function dispatches the event to your server-side listeners:</source>
          <target state="translated">在构建利用事件广播的应用程序时，可以将 &lt;code&gt;event&lt;/code&gt; 功能替换为 &lt;code&gt;broadcast&lt;/code&gt; 功能。与 &lt;code&gt;event&lt;/code&gt; 功能一样， &lt;code&gt;broadcast&lt;/code&gt; 功能将事件分配给服务器端侦听器：</target>
        </trans-unit>
        <trans-unit id="d9e69dc2d180d0cabba430a89f31271b220f0d1d" translate="yes" xml:space="preserve">
          <source>When building the database schema for the &lt;code&gt;App\Models\User&lt;/code&gt; model, make sure the password column is at least 60 characters in length. Maintaining the default string column length of 255 characters would be a good choice.</source>
          <target state="translated">为 &lt;code&gt;App\Models\User&lt;/code&gt; 模型构建数据库架构时，请确保密码列的长度至少为60个字符。保持默认的字符串列长度为255个字符是一个不错的选择。</target>
        </trans-unit>
        <trans-unit id="45b9c4684696d6586f0197e97981726f66bb33b5" translate="yes" xml:space="preserve">
          <source>When building the database schema for the &lt;code&gt;App\User&lt;/code&gt; model, make sure the password column is at least 60 characters in length. Maintaining the default string column length of 255 characters would be a good choice.</source>
          <target state="translated">为 &lt;code&gt;App\User&lt;/code&gt; 模型构建数据库架构时，请确保密码列的长度至少为60个字符。保持默认的字符串列长度为255个字符是一个不错的选择。</target>
        </trans-unit>
        <trans-unit id="82ad7c629a170f1e3a5c02f3772396de4a4513de" translate="yes" xml:space="preserve">
          <source>When calling routes that are protected by Passport, your application's API consumers should specify their access token as a &lt;code&gt;Bearer&lt;/code&gt; token in the &lt;code&gt;Authorization&lt;/code&gt; header of their request. For example, when using the Guzzle HTTP library:</source>
          <target state="translated">调用受Passport保护的路由时，应用程序的API使用者应在其请求的 &lt;code&gt;Authorization&lt;/code&gt; 标头中将其访问令牌指定为 &lt;code&gt;Bearer&lt;/code&gt; 令牌。例如，当使用Guzzle HTTP库时：</target>
        </trans-unit>
        <trans-unit id="fb37fc3e51eccf912c60dabe31580d5db666d650" translate="yes" xml:space="preserve">
          <source>When calling the &lt;code&gt;paginate&lt;/code&gt; method, you will receive an instance of &lt;code&gt;Illuminate\Pagination\LengthAwarePaginator&lt;/code&gt;. When calling the &lt;code&gt;simplePaginate&lt;/code&gt; method, you will receive an instance of &lt;code&gt;Illuminate\Pagination\Paginator&lt;/code&gt;. These objects provide several methods that describe the result set. In addition to these helpers methods, the paginator instances are iterators and may be looped as an array. So, once you have retrieved the results, you may display the results and render the page links using &lt;a href=&quot;blade&quot;&gt;Blade&lt;/a&gt;:</source>
          <target state="translated">调用 &lt;code&gt;paginate&lt;/code&gt; 方法时，您将收到 &lt;code&gt;Illuminate\Pagination\LengthAwarePaginator&lt;/code&gt; 的实例。调用 &lt;code&gt;simplePaginate&lt;/code&gt; 方法时，您将收到 &lt;code&gt;Illuminate\Pagination\Paginator&lt;/code&gt; 的实例。这些对象提供了几种描述结果集的方法。除了这些辅助方法之外，分页器实例是迭代器，并且可以作为数组循环。因此，一旦检索到结果，就可以显示结果并使用&lt;a href=&quot;blade&quot;&gt;Blade&lt;/a&gt;呈现页面链接：</target>
        </trans-unit>
        <trans-unit id="cba0dc201c3755c53f3cf2c114d2d45911248180" translate="yes" xml:space="preserve">
          <source>When calling the &lt;code&gt;terminate&lt;/code&gt; method on your middleware, Laravel will resolve a fresh instance of the middleware from the &lt;a href=&quot;container&quot;&gt;service container&lt;/a&gt;. If you would like to use the same middleware instance when the &lt;code&gt;handle&lt;/code&gt; and &lt;code&gt;terminate&lt;/code&gt; methods are called, register the middleware with the container using the container's &lt;code&gt;singleton&lt;/code&gt; method.</source>
          <target state="translated">在中间件上调用 &lt;code&gt;terminate&lt;/code&gt; 方法时，Laravel将从&lt;a href=&quot;container&quot;&gt;服务容器&lt;/a&gt;解析中间件的新实例。如果要在调用 &lt;code&gt;handle&lt;/code&gt; 和 &lt;code&gt;terminate&lt;/code&gt; 方法时使用相同的中间件实例，请使用容器的 &lt;code&gt;singleton&lt;/code&gt; 方法在容器中注册中间件。</target>
        </trans-unit>
        <trans-unit id="09fb136514b95b79aa9029e0f00f5c2901a77cbf" translate="yes" xml:space="preserve">
          <source>When calling the &lt;code&gt;terminate&lt;/code&gt; method on your middleware, Laravel will resolve a fresh instance of the middleware from the &lt;a href=&quot;container&quot;&gt;service container&lt;/a&gt;. If you would like to use the same middleware instance when the &lt;code&gt;handle&lt;/code&gt; and &lt;code&gt;terminate&lt;/code&gt; methods are called, register the middleware with the container using the container's &lt;code&gt;singleton&lt;/code&gt; method. Typically this should be done in the &lt;code&gt;register&lt;/code&gt; method of your &lt;code&gt;AppServiceProvider.php&lt;/code&gt;:</source>
          <target state="translated">在中间件上调用 &lt;code&gt;terminate&lt;/code&gt; 方法时，Laravel将从&lt;a href=&quot;container&quot;&gt;服务容器&lt;/a&gt;解析中间件的新实例。如果要在调用 &lt;code&gt;handle&lt;/code&gt; 和 &lt;code&gt;terminate&lt;/code&gt; 方法时使用相同的中间件实例，请使用容器的 &lt;code&gt;singleton&lt;/code&gt; 方法在容器中注册中间件。通常，这应该在 &lt;code&gt;AppServiceProvider.php&lt;/code&gt; 的 &lt;code&gt;register&lt;/code&gt; 方法中完成：</target>
        </trans-unit>
        <trans-unit id="6f297356b226ef75b0e7ea8079e6c0e23182df35" translate="yes" xml:space="preserve">
          <source>When calling this method, the &lt;code&gt;user&lt;/code&gt; arguments may be passed in order to the command line. For example, the following command will set the value of &lt;code&gt;user&lt;/code&gt; to &lt;code&gt;['foo', 'bar']&lt;/code&gt;:</source>
          <target state="translated">调用此方法时，可以将 &lt;code&gt;user&lt;/code&gt; 参数传递给命令行。例如，以下命令将 &lt;code&gt;user&lt;/code&gt; 的值设置为 &lt;code&gt;['foo', 'bar']&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="935b068a3bb97d04e8da75d3774fb37afa4012da" translate="yes" xml:space="preserve">
          <source>When casting to value objects, any changes made to the value object will automatically be synced back to the model before the model is saved:</source>
          <target state="translated">当投射到值对象时,在保存模型之前,对值对象所做的任何更改将自动同步回模型。</target>
        </trans-unit>
        <trans-unit id="3c7a93c6bb474e06fd2f2fb4113a72d9048ffd05" translate="yes" xml:space="preserve">
          <source>When chaining jobs, you may use the &lt;code&gt;catch&lt;/code&gt; method to specify a Closure that should be invoked if a job within the chain fails. The given callback will receive the exception instance that caused the job failure:</source>
          <target state="translated">在链接作业时，可以使用 &lt;code&gt;catch&lt;/code&gt; 方法指定一个Closure，如果链中的作业失败，则应调用该Closure。给定的回调将接收导致作业失败的异常实例：</target>
        </trans-unit>
        <trans-unit id="f49a63636a46e32fd5e6d49e596bcc2ccb56bc76" translate="yes" xml:space="preserve">
          <source>When changing the hard-coded Tax Rate IDs returned by the &lt;code&gt;taxRates&lt;/code&gt; method, the tax settings on any existing subscriptions for the user will remain the same. If you wish to update the tax value for existing subscriptions with the returned &lt;code&gt;taxTaxRates&lt;/code&gt; values, you should call the &lt;code&gt;syncTaxRates&lt;/code&gt; method on the user's subscription instance:</source>
          <target state="translated">更改由 &lt;code&gt;taxRates&lt;/code&gt; 方法返回的硬编码的税率ID时，该用户的任何现有订阅上的税收设置将保持不变。如果希望使用返回的 &lt;code&gt;taxTaxRates&lt;/code&gt; 值更新现有订阅的税值，则应在用户的订阅实例上调用 &lt;code&gt;syncTaxRates&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="0b6652aed5cd44d989a49ea31c8110db618dbe29" translate="yes" xml:space="preserve">
          <source>When copying a directory, the &lt;code&gt;copy&lt;/code&gt; method will flatten the directory's structure. To maintain the directory's original structure, you should use the &lt;code&gt;copyDirectory&lt;/code&gt; method instead:</source>
          <target state="translated">复制目录时， &lt;code&gt;copy&lt;/code&gt; 方法将展平目录的结构。要维护目录的原始结构，应改用 &lt;code&gt;copyDirectory&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="2667b25c72d01d0e8833759f9e7eaacaf7a1626c" translate="yes" xml:space="preserve">
          <source>When creating a custom validation rule, you may sometimes need to define custom place-holder replacements for error messages. You may do so by creating a custom Validator as described above then making a call to the &lt;code&gt;replacer&lt;/code&gt; method on the &lt;code&gt;Validator&lt;/code&gt; facade. You may do this within the &lt;code&gt;boot&lt;/code&gt; method of a &lt;a href=&quot;providers&quot;&gt;service provider&lt;/a&gt;:</source>
          <target state="translated">创建自定义验证规则时，有时可能需要为错误消息定义自定义占位符替换。您可以通过如上所述创建自定义验证程序，然后在 &lt;code&gt;Validator&lt;/code&gt; 外观上调用 &lt;code&gt;replacer&lt;/code&gt; 方法来实现。您可以在&lt;a href=&quot;providers&quot;&gt;服务提供商&lt;/a&gt;的 &lt;code&gt;boot&lt;/code&gt; 方法中执行此操作：</target>
        </trans-unit>
        <trans-unit id="4309846d3eb245c338bacc3d783c9cd4c7c9e3c5" translate="yes" xml:space="preserve">
          <source>When creating a custom validation rule, you may sometimes need to define custom placeholder replacements for error messages. You may do so by creating a custom Validator as described above then making a call to the &lt;code&gt;replacer&lt;/code&gt; method on the &lt;code&gt;Validator&lt;/code&gt; facade. You may do this within the &lt;code&gt;boot&lt;/code&gt; method of a &lt;a href=&quot;providers&quot;&gt;service provider&lt;/a&gt;:</source>
          <target state="translated">创建自定义验证规则时，有时可能需要为错误消息定义自定义占位符替换。您可以通过如上所述创建自定义验证程序，然后在 &lt;code&gt;Validator&lt;/code&gt; 外观上调用 &lt;code&gt;replacer&lt;/code&gt; 方法来实现。您可以在&lt;a href=&quot;providers&quot;&gt;服务提供商&lt;/a&gt;的 &lt;code&gt;boot&lt;/code&gt; 方法中执行此操作：</target>
        </trans-unit>
        <trans-unit id="b9a99910cb4d97355a9a894395c4a50b27c322de" translate="yes" xml:space="preserve">
          <source>When creating an Echo instance that uses the &lt;code&gt;pusher&lt;/code&gt; connector, you may also specify a &lt;code&gt;cluster&lt;/code&gt; as well as whether the connection must be made over TLS (by default, when &lt;code&gt;forceTLS&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, a non-TLS connection will be made if the page was loaded over HTTP, or as a fallback if a TLS connection fails):</source>
          <target state="translated">创建使用 &lt;code&gt;pusher&lt;/code&gt; 连接器的Echo实例时，您还可以指定 &lt;code&gt;cluster&lt;/code&gt; 以及是否必须通过TLS建立连接（默认情况下，当 &lt;code&gt;forceTLS&lt;/code&gt; 为 &lt;code&gt;false&lt;/code&gt; 时，如果加载了页面，则将建立非TLS连接通过HTTP；如果TLS连接失败，则作为备用）：</target>
        </trans-unit>
        <trans-unit id="a70de08feb757b5533e6ef8fb54644f5fb74a762" translate="yes" xml:space="preserve">
          <source>When creating an Echo instance that uses the &lt;code&gt;pusher&lt;/code&gt; connector, you may also specify a &lt;code&gt;cluster&lt;/code&gt; as well as whether the connection should be encrypted:</source>
          <target state="translated">创建使用 &lt;code&gt;pusher&lt;/code&gt; 连接器的Echo实例时，您还可以指定 &lt;code&gt;cluster&lt;/code&gt; 以及是否应加密连接：</target>
        </trans-unit>
        <trans-unit id="1683526f8b6bad10b61652ae2df835962171ee2e" translate="yes" xml:space="preserve">
          <source>When creating files using the &lt;code&gt;fake&lt;/code&gt; method, you may specify the width, height, and size of the image in order to better test your validation rules:</source>
          <target state="translated">使用 &lt;code&gt;fake&lt;/code&gt; 方法创建文件时，可以指定图像的宽度，高度和大小，以便更好地测试验证规则：</target>
        </trans-unit>
        <trans-unit id="9297c0c887cd5b6a96e0c51fb4b5bf876388c407" translate="yes" xml:space="preserve">
          <source>When creating the table, you may use any of the schema builder's &lt;a href=&quot;#creating-columns&quot;&gt;column methods&lt;/a&gt; to define the table's columns.</source>
          <target state="translated">创建表时，可以使用模式构建器的任何&lt;a href=&quot;#creating-columns&quot;&gt;列方法&lt;/a&gt;来定义表的列。</target>
        </trans-unit>
        <trans-unit id="518235eb7ee927b1366faedbaa7565832ec969ce" translate="yes" xml:space="preserve">
          <source>When customizing Homestead, Ubuntu may ask you if you would like to keep a package's original configuration or overwrite it with a new configuration file. To avoid this, you should use the following command when installing packages to avoid overwriting any configuration previously written by Homestead:</source>
          <target state="translated">在定制Homestead时,Ubuntu可能会询问您是否要保留一个软件包的原始配置,还是用新的配置文件覆盖它。为了避免这种情况,您应该在安装软件包时使用以下命令,以避免覆盖Homestead之前编写的任何配置。</target>
        </trans-unit>
        <trans-unit id="30135835125895fbd65984848b9e15fe258d1385" translate="yes" xml:space="preserve">
          <source>When dealing with HTML elements like checkboxes, your application may receive &quot;truthy&quot; values that are actually strings. For example, &quot;true&quot; or &quot;on&quot;. For convenience, you may use the &lt;code&gt;boolean&lt;/code&gt; method to retrieve these values as booleans. The &lt;code&gt;boolean&lt;/code&gt; method returns &lt;code&gt;true&lt;/code&gt; for 1, &quot;1&quot;, true, &quot;true&quot;, &quot;on&quot;, and &quot;yes&quot;. All other values will return &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">当处理诸如复选框之类的HTML元素时，您的应用程序可能会收到实际上是字符串的&amp;ldquo;真实&amp;rdquo;值。例如，&amp;ldquo; true&amp;rdquo;或&amp;ldquo; on&amp;rdquo;。为了方便起见，您可以使用 &lt;code&gt;boolean&lt;/code&gt; 方法将这些值作为boolean检索。该 &lt;code&gt;boolean&lt;/code&gt; 方法返回 &lt;code&gt;true&lt;/code&gt; 1，&amp;ldquo;1&amp;rdquo;，真正的&amp;ldquo;上&amp;rdquo;，&amp;ldquo;真&amp;rdquo;，和&amp;ldquo;是&amp;rdquo;。所有其他值将返回 &lt;code&gt;false&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="ea89923970ce3f554740212e339e023bb926040b" translate="yes" xml:space="preserve">
          <source>When dealing with nested arrays or objects, you may specify the key used to determine uniqueness:</source>
          <target state="translated">当处理嵌套数组或对象时,可以指定用于确定唯一性的键。</target>
        </trans-unit>
        <trans-unit id="bcc6e8b59c43b0a62074ded6ffbd2735d6014359" translate="yes" xml:space="preserve">
          <source>When debugging functional tests that make requests to the web server, it is easier to autostart debugging rather than modifying tests to pass through a custom header or cookie to trigger debugging. To force Xdebug to start automatically, modify &lt;code&gt;/etc/php/7.x/fpm/conf.d/20-xdebug.ini&lt;/code&gt; inside your Vagrant box and add the following configuration:</source>
          <target state="translated">在调试向Web服务器发出请求的功能测试时，自动启动调试比修改测试以通过自定义标头或cookie触发调试要容易得多。要强制Xdebug自动启动，请在Vagrant框内修改 &lt;code&gt;/etc/php/7.x/fpm/conf.d/20-xdebug.ini&lt;/code&gt; 并添加以下配置：</target>
        </trans-unit>
        <trans-unit id="c9dab00d5c672e6fa72dd329131c98099d23d99d" translate="yes" xml:space="preserve">
          <source>When declaring a resource route, you may specify a subset of actions the controller should handle instead of the full set of default actions:</source>
          <target state="translated">在声明资源路由时,您可以指定控制器应该处理的动作子集,而不是全部的默认动作集。</target>
        </trans-unit>
        <trans-unit id="0b6c69d8fed783cacda4127746365d2a2e451cce" translate="yes" xml:space="preserve">
          <source>When declaring resource routes that will be consumed by APIs, you will commonly want to exclude routes that present HTML templates such as &lt;code&gt;create&lt;/code&gt; and &lt;code&gt;edit&lt;/code&gt;. For convenience, you may use the &lt;code&gt;apiResource&lt;/code&gt; method to automatically exclude these two routes:</source>
          <target state="translated">声明将由API使用的资源路由时，通常会希望排除呈现HTML模板的路由，例如 &lt;code&gt;create&lt;/code&gt; 和 &lt;code&gt;edit&lt;/code&gt; 。为了方便起见，您可以使用 &lt;code&gt;apiResource&lt;/code&gt; 方法自动排除这两个路由：</target>
        </trans-unit>
        <trans-unit id="b475c89219d52d249fc059c174753fe77faaf88b" translate="yes" xml:space="preserve">
          <source>When defining a Closure based command, you may use the &lt;code&gt;describe&lt;/code&gt; method to add a description to the command. This description will be displayed when you run the &lt;code&gt;php artisan list&lt;/code&gt; or &lt;code&gt;php artisan help&lt;/code&gt; commands:</source>
          <target state="translated">定义基于闭包的命令时，可以使用 &lt;code&gt;describe&lt;/code&gt; 方法向命令添加描述。当您运行 &lt;code&gt;php artisan list&lt;/code&gt; 或 &lt;code&gt;php artisan help&lt;/code&gt; 命令时，将显示以下描述：</target>
        </trans-unit>
        <trans-unit id="032bac906d489a90c95e8a9209c6eb78ef73404c" translate="yes" xml:space="preserve">
          <source>When defining a child view, use the Blade &lt;code&gt;@extends&lt;/code&gt; directive to specify which layout the child view should &quot;inherit&quot;. Views which extend a Blade layout may inject content into the layout's sections using &lt;code&gt;@section&lt;/code&gt; directives. Remember, as seen in the example above, the contents of these sections will be displayed in the layout using &lt;code&gt;@yield&lt;/code&gt;:</source>
          <target state="translated">定义子视图时，请使用Blade &lt;code&gt;@extends&lt;/code&gt; 指令指定子视图应&amp;ldquo;继承&amp;rdquo;的布局。扩展Blade布局的视图可以使用 &lt;code&gt;@section&lt;/code&gt; 指令将内容注入到布局的各节中。请记住，如上例所示，这些部分的内容将使用 &lt;code&gt;@yield&lt;/code&gt; 显示在布局中：</target>
        </trans-unit>
        <trans-unit id="493ca91f41aa9fd9d6b54a0ee7ce85fe6e316e51" translate="yes" xml:space="preserve">
          <source>When defining an option that expects an array input, each option value passed to the command should be prefixed with the option name:</source>
          <target state="translated">当定义一个期待数组输入的选项时,传递给命令的每个选项值都应该以选项名为前缀。</target>
        </trans-unit>
        <trans-unit id="8904e2b72a344813981270ebd7c1243c01a6474b" translate="yes" xml:space="preserve">
          <source>When defining dynamic relationships, always provide explicit key name arguments to the Eloquent relationship methods.</source>
          <target state="translated">在定义动态关系时,总是为Eloquent关系方法提供显式键名参数。</target>
        </trans-unit>
        <trans-unit id="70da2087238022ca8997c2a2a9b0219c46ccdf11" translate="yes" xml:space="preserve">
          <source>When defining policy methods that will not receive a model instance, such as a &lt;code&gt;create&lt;/code&gt; method, it will not receive a model instance. Instead, you should define the method as only expecting the authenticated user:</source>
          <target state="translated">当定义不会接收模型实例的策略方法（例如 &lt;code&gt;create&lt;/code&gt; 方法）时，它将不会接收模型实例。相反，您应该将方法定义为仅期望通过身份验证的用户：</target>
        </trans-unit>
        <trans-unit id="eb95e7ac5a38d028f0226bb542549d0ddf8d0b5a" translate="yes" xml:space="preserve">
          <source>When defining the &lt;code&gt;RoleUser&lt;/code&gt; model, we will extend the &lt;code&gt;Pivot&lt;/code&gt; class:</source>
          <target state="translated">在定义 &lt;code&gt;RoleUser&lt;/code&gt; 模型时，我们将扩展 &lt;code&gt;Pivot&lt;/code&gt; 类：</target>
        </trans-unit>
        <trans-unit id="e49ba9c0bf3574b04acbb6568be9590832dfa438" translate="yes" xml:space="preserve">
          <source>When defining the &lt;code&gt;UserRole&lt;/code&gt; model, we will extend the &lt;code&gt;Pivot&lt;/code&gt; class:</source>
          <target state="translated">在定义 &lt;code&gt;UserRole&lt;/code&gt; 模型时，我们将扩展 &lt;code&gt;Pivot&lt;/code&gt; 类：</target>
        </trans-unit>
        <trans-unit id="7cf72653b8e40816e43dee62856576bb7c94604b" translate="yes" xml:space="preserve">
          <source>When deploying Passport to your production servers for the first time, you will likely need to run the &lt;code&gt;passport:keys&lt;/code&gt; command. This command generates the encryption keys Passport needs in order to generate access token. The generated keys are not typically kept in source control:</source>
          <target state="translated">首次将Passport部署到生产服务器时，可能需要运行 &lt;code&gt;passport:keys&lt;/code&gt; 命令。此命令生成Passport生成访问令牌所需的加密密钥。生成的密钥通常不保留在源代码管理中：</target>
        </trans-unit>
        <trans-unit id="9d2ad0d9cde7eb3b1a3fb631e23c38ecc60e2bc9" translate="yes" xml:space="preserve">
          <source>When deploying to production, make sure that you are optimizing Composer's class autoloader map so Composer can quickly find the proper file to load for a given class:</source>
          <target state="translated">当部署到生产中时,确保你正在优化Composer的类自动加载器映射,这样Composer可以快速找到合适的文件来加载给定的类。</target>
        </trans-unit>
        <trans-unit id="bab4c3c9170da76afa526f48ea600d0420dab84e" translate="yes" xml:space="preserve">
          <source>When deploying your application to production, you should make sure that you run the &lt;code&gt;config:cache&lt;/code&gt; Artisan command during your deployment process:</source>
          <target state="translated">将应用程序部署到生产环境时，应确保在部署过程中运行 &lt;code&gt;config:cache&lt;/code&gt; Artisan命令：</target>
        </trans-unit>
        <trans-unit id="12ab09ffb9fa52591e6e6c5e2fd0b802b845f959" translate="yes" xml:space="preserve">
          <source>When deploying your application to production, you should make sure that you run the &lt;code&gt;view:cache&lt;/code&gt; Artisan command during your deployment process:</source>
          <target state="translated">将应用程序部署到生产环境时，应确保在部署过程中运行 &lt;code&gt;view:cache&lt;/code&gt; Artisan命令：</target>
        </trans-unit>
        <trans-unit id="b37a50ed76cf914e07270baaf09fc1dd22f0e4a3" translate="yes" xml:space="preserve">
          <source>When designing a mail notification template, it is convenient to quickly preview the rendered mail message in your browser like a typical Blade template. For this reason, Laravel allows you to return any mail message generated by a mail notification directly from a route Closure or controller. When a &lt;code&gt;MailMessage&lt;/code&gt; is returned, it will be rendered and displayed in the browser, allowing you to quickly preview its design without needing to send it to an actual email address:</source>
          <target state="translated">在设计邮件通知模板时，可以像典型的Blade模板一样在浏览器中快速预览渲染的邮件。因此，Laravel允许您直接从路由闭包或控制器返回由邮件通知生成的任何邮件。当 &lt;code&gt;MailMessage&lt;/code&gt; 返回，它会被渲染，并在浏览器中显示，让您快速预览它的设计，而无需将其发送到一个实际的电子邮件地址：</target>
        </trans-unit>
        <trans-unit id="28b560fcfb364682e703668f064af491a9541439" translate="yes" xml:space="preserve">
          <source>When designing a mailable's template, it is convenient to quickly preview the rendered mailable in your browser like a typical Blade template. For this reason, Laravel allows you to return any mailable directly from a route Closure or controller. When a mailable is returned, it will be rendered and displayed in the browser, allowing you to quickly preview its design without needing to send it to an actual email address:</source>
          <target state="translated">当设计一个可邮件的模板时,可以像典型的Blade模板一样在浏览器中快速预览渲染后的可邮件.基于这个原因,Laravel允许你直接从路由Closure或控制器中返回任何可邮件.当一个可发邮件被返回时,它将被渲染并显示在浏览器中,允许你快速预览它的设计,而不需要将它发送到一个实际的电子邮件地址:</target>
        </trans-unit>
        <trans-unit id="c099c2d3c0ed83534c5ae0df6449f696583293fb" translate="yes" xml:space="preserve">
          <source>When developing an application that sends email, you probably don't want to actually send emails to live email addresses. Laravel provides several ways to &quot;disable&quot; the actual sending of emails during local development.</source>
          <target state="translated">当开发一个可以发送邮件的应用程序时,你可能不希望实际发送邮件到真实的邮件地址.Laravel提供了几种方法来 &quot;禁止 &quot;在本地开发过程中实际发送邮件.</target>
        </trans-unit>
        <trans-unit id="d066770c417c971ee86970897b32126b29387c57" translate="yes" xml:space="preserve">
          <source>When executing a mass delete statement via Eloquent, the &lt;code&gt;deleting&lt;/code&gt; and &lt;code&gt;deleted&lt;/code&gt; model events will not be fired for the deleted models. This is because the models are never actually retrieved when executing the delete statement.</source>
          <target state="translated">当执行通过洋洋洒洒一团delete语句中， &lt;code&gt;deleting&lt;/code&gt; 和 &lt;code&gt;deleted&lt;/code&gt; 模型事件将不会被用于删除模型解雇。这是因为在执行delete语句时，从未真正检索过模型。</target>
        </trans-unit>
        <trans-unit id="ec3b939c6ae0eeae4fc27cd1bd057ac8bd430bec" translate="yes" xml:space="preserve">
          <source>When executing the code above, the underlying subscription item with the &lt;code&gt;basic-plan&lt;/code&gt; is deleted and the one with the &lt;code&gt;chat-plan&lt;/code&gt; is preserved. Additionally, a new subscription item for the new &lt;code&gt;pro-plan&lt;/code&gt; is created.</source>
          <target state="translated">执行上述代码时，将删除具有 &lt;code&gt;basic-plan&lt;/code&gt; 的基础订阅项目，并保留具有 &lt;code&gt;chat-plan&lt;/code&gt; 订阅项目。此外，为新 &lt;code&gt;pro-plan&lt;/code&gt; 创建一个新的订阅项目。</target>
        </trans-unit>
        <trans-unit id="2078110991c2cb517f80e63597da66f796b090f9" translate="yes" xml:space="preserve">
          <source>When faking requests, HTTP client middleware are not executed. You should define expectations for faked responses as if these middleware have run correctly.</source>
          <target state="translated">当伪造请求时,HTTP客户端中间件不会被执行。你应该定义对伪造响应的期望,就像这些中间件已经正确运行一样。</target>
        </trans-unit>
        <trans-unit id="14eea13dc2b6be36270c96abb8931250facc6f1d" translate="yes" xml:space="preserve">
          <source>When faking responses, you may occasionally wish to inspect the requests the client receives in order to make sure your application is sending the correct data or headers. You may accomplish this by calling the &lt;code&gt;Http::assertSent&lt;/code&gt; method after calling &lt;code&gt;Http::fake&lt;/code&gt;.</source>
          <target state="translated">在伪造响应时，您有时可能希望检查客户端收到的请求，以确保您的应用程序发送了正确的数据或标头。您可以在调用 &lt;code&gt;Http::fake&lt;/code&gt; 之后通过调用 &lt;code&gt;Http::assertSent&lt;/code&gt; 方法来完成此操作。</target>
        </trans-unit>
        <trans-unit id="8bbba5dea965ae2dd54f4f5383ed17fd26b796e3" translate="yes" xml:space="preserve">
          <source>When getting started with Laravel, many developers are confused by the lack of a &lt;code&gt;models&lt;/code&gt; directory. However, the lack of such a directory is intentional. We find the word &quot;models&quot; ambiguous since it means many different things to many different people. Some developers refer to an application's &quot;model&quot; as the totality of all of its business logic, while others refer to &quot;models&quot; as classes that interact with a relational database.</source>
          <target state="translated">当开始使用Laravel时，许多开发人员对缺少 &lt;code&gt;models&lt;/code&gt; 目录感到困惑。但是，缺少这样的目录是有意的。我们发现&amp;ldquo;模型&amp;rdquo;一词含糊不清，因为它对许多不同的人意味着许多不同的事物。一些开发人员将应用程序的&amp;ldquo;模型&amp;rdquo;称为其所有业务逻辑的总和，而其他开发人员将&amp;ldquo;模型&amp;rdquo;称为与关系数据库进行交互的类。</target>
        </trans-unit>
        <trans-unit id="611d51d36dc67aff091e4f2a7be4bc9ec356b5e6" translate="yes" xml:space="preserve">
          <source>When given an array, the &lt;code&gt;has&lt;/code&gt; method will determine if all of the specified values are present:</source>
          <target state="translated">给定数组时， &lt;code&gt;has&lt;/code&gt; 方法将确定是否存在所有指定的值：</target>
        </trans-unit>
        <trans-unit id="885bd7735d5aa27fcff220e5f9a01155cb9d9730" translate="yes" xml:space="preserve">
          <source>When handling an incoming request authenticated by Sanctum, you may determine if the token has a given ability using the &lt;code&gt;tokenCan&lt;/code&gt; method:</source>
          <target state="translated">在处理由Sanctum验证的传入请求时，可以使用 &lt;code&gt;tokenCan&lt;/code&gt; 方法确定令牌是否具有给定的功能：</target>
        </trans-unit>
        <trans-unit id="ce11ad0a398efedb0607c3112c42d1b116894b60" translate="yes" xml:space="preserve">
          <source>When hiding relationships, use the relationship's method name.</source>
          <target state="translated">当隐藏关系时,使用关系的方法名。</target>
        </trans-unit>
        <trans-unit id="ae01e7b52e1d18b232afcf2de3de0f4c1d57311c" translate="yes" xml:space="preserve">
          <source>When in a nested loop, the parent's loop variable.</source>
          <target state="translated">在嵌套循环中时,父变量的循环变量。</target>
        </trans-unit>
        <trans-unit id="b9a519d5ad3076c7df6ad8c41a3fcaf2c900c8c7" translate="yes" xml:space="preserve">
          <source>When injecting a model ID to a route or controller action, you will often query to retrieve the model that corresponds to that ID. Laravel route model binding provides a convenient way to automatically inject the model instances directly into your routes. For example, instead of injecting a user's ID, you can inject the entire &lt;code&gt;User&lt;/code&gt; model instance that matches the given ID.</source>
          <target state="translated">在将模型ID注入到路线或控制器操作时，您通常会查询以检索与该ID对应的模型。Laravel路线模型绑定提供了一种方便的方法，可以将模型实例直接自动注入到您的路线中。例如，您可以注入与给定ID匹配的整个 &lt;code&gt;User&lt;/code&gt; 模型实例，而不是注入用户的ID。</target>
        </trans-unit>
        <trans-unit id="e87b699f41db3a57b8fb75bd606266db3c825a24" translate="yes" xml:space="preserve">
          <source>When injecting an Eloquent model into a job, it is automatically serialized before being placed on the queue and restored when the job is processed. However, if the model has been deleted while the job was waiting to be processed by a worker, your job may fail with a &lt;code&gt;ModelNotFoundException&lt;/code&gt;.</source>
          <target state="translated">将Eloquent模型注入作业时，会在将其放入队列之前自动进行序列化，并在处理作业时将其还原。但是，如果在等待作业处理该作业时删除了该模型，则您的作业可能会失败，并出现 &lt;code&gt;ModelNotFoundException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="570d91dd65073b79d750be698d666985f01a318d" translate="yes" xml:space="preserve">
          <source>When interacting with uploaded files, you may use the &lt;code&gt;storePublicly&lt;/code&gt; and &lt;code&gt;storePubliclyAs&lt;/code&gt; methods to store the uploaded file with &lt;code&gt;public&lt;/code&gt; visibility:</source>
          <target state="translated">与上传的文件进行交互时，可以使用 &lt;code&gt;storePublicly&lt;/code&gt; 和 &lt;code&gt;storePubliclyAs&lt;/code&gt; 方法来存储具有 &lt;code&gt;public&lt;/code&gt; 可见性的上传文件：</target>
        </trans-unit>
        <trans-unit id="249f34c33e6a94024054b76a71f98eebd2fbeab9" translate="yes" xml:space="preserve">
          <source>When interpreting the words and actions of others, participants should always assume good intentions.</source>
          <target state="translated">在解读他人的言行时,参与者应始终认为是善意的。</target>
        </trans-unit>
        <trans-unit id="5f8c53532795061653ab60af8bb7bf8e4052ccfb" translate="yes" xml:space="preserve">
          <source>When issuing a mass update or delete via Eloquent, the &lt;code&gt;saved&lt;/code&gt;, &lt;code&gt;updated&lt;/code&gt;, &lt;code&gt;deleting&lt;/code&gt;, and &lt;code&gt;deleted&lt;/code&gt; model events will not be fired for the affected models. This is because the models are never actually retrieved when issuing a mass update or delete.</source>
          <target state="translated">通过Eloquent发布批量更新或删除时，将不会为受影响的模型触发 &lt;code&gt;saved&lt;/code&gt; ， &lt;code&gt;updated&lt;/code&gt; ， &lt;code&gt;deleting&lt;/code&gt; 和 &lt;code&gt;deleted&lt;/code&gt; 模型事件。这是因为发布批量更新或删除时实际上从未检索过模型。</target>
        </trans-unit>
        <trans-unit id="59838b8d4c3d40af66dbfad5a0a5ca84f28599b7" translate="yes" xml:space="preserve">
          <source>When issuing a mass update via Eloquent, the &lt;code&gt;saved&lt;/code&gt; and &lt;code&gt;updated&lt;/code&gt; model events will not be fired for the updated models. This is because the models are never actually retrieved when issuing a mass update.</source>
          <target state="translated">通过Eloquent发布批量更新时，不会为已更新的模型触发 &lt;code&gt;updated&lt;/code&gt; &lt;code&gt;saved&lt;/code&gt; 和已更新的模型事件。这是因为发布批量更新时实际上从未检索过模型。</target>
        </trans-unit>
        <trans-unit id="0ed9982b4c7c93de60e9b8eadcba9cc2e3a3ce19" translate="yes" xml:space="preserve">
          <source>When issuing a mass update via Eloquent, the &lt;code&gt;saving&lt;/code&gt;, &lt;code&gt;saved&lt;/code&gt;, &lt;code&gt;updating&lt;/code&gt;, and &lt;code&gt;updated&lt;/code&gt; model events will not be fired for the updated models. This is because the models are never actually retrieved when issuing a mass update.</source>
          <target state="translated">当发出通过能言善辩，在一个大规模更新 &lt;code&gt;saving&lt;/code&gt; ， &lt;code&gt;saved&lt;/code&gt; ， &lt;code&gt;updating&lt;/code&gt; ，并 &lt;code&gt;updated&lt;/code&gt; 模型事件将不会被用于更新模型解雇。这是因为发布批量更新时实际上从未检索过模型。</target>
        </trans-unit>
        <trans-unit id="f5db836e6f3715e38e3e0e8d21d918ba72abf0b2" translate="yes" xml:space="preserve">
          <source>When issuing tokens for a mobile application, you are also free to specify &lt;a href=&quot;#token-abilities&quot;&gt;token abilities&lt;/a&gt;</source>
          <target state="translated">为移动应用程序发行令牌时，您还可以自由指定&lt;a href=&quot;#token-abilities&quot;&gt;令牌功能&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="badd832e930e49cc7f3a838f8f1497107483fe29" translate="yes" xml:space="preserve">
          <source>When jobs are available on the queue, the worker will keep processing jobs with no delay in between them. However, the &lt;code&gt;sleep&lt;/code&gt; option determines how long (in seconds) the worker will &quot;sleep&quot; if there are no new jobs available. While sleeping, the worker will not process any new jobs - the jobs will be processed after the worker wakes up again.</source>
          <target state="translated">当作业在队列中可用时，工作人员将继续处理作业，而在它们之间没有任何延迟。但是， &lt;code&gt;sleep&lt;/code&gt; 选项确定如果没有新的工作可用，工作人员将&amp;ldquo;睡眠&amp;rdquo;多长时间（以秒为单位）。在睡眠期间，该工作人员将不会处理任何新的作业-这些工作将在其再次唤醒后进行处理。</target>
        </trans-unit>
        <trans-unit id="6ce94f10f68e74600dc843e2e60d84b6ce303e24" translate="yes" xml:space="preserve">
          <source>When listing the invoices for the customer, you may use the invoice's helper methods to display the relevant invoice information. For example, you may wish to list every invoice in a table, allowing the user to easily download any of them:</source>
          <target state="translated">在列出客户的发票时,可以使用发票的帮助方法来显示相关的发票信息。例如,你可能希望将每张发票都以表格的形式列出,让用户可以轻松下载其中任何一张发票。</target>
        </trans-unit>
        <trans-unit id="a9eab307f3b3056835aefd5a1bb7af35cea64621" translate="yes" xml:space="preserve">
          <source>When listing the receipts for the customer, you may use the receipt's helper methods to display the relevant receipt information. For example, you may wish to list every receipt in a table, allowing the user to easily download any of the receipts:</source>
          <target state="translated">在列出客户的收据时,可以使用收据的辅助方法来显示相关的收据信息。例如,您可能希望将每张收据都列在一个表格中,让用户轻松下载任何一张收据。</target>
        </trans-unit>
        <trans-unit id="630491cd1fb162df1d41d18373cd26e63a591db7" translate="yes" xml:space="preserve">
          <source>When looping, a &lt;code&gt;$loop&lt;/code&gt; variable will be available inside of your loop. This variable provides access to some useful bits of information such as the current loop index and whether this is the first or last iteration through the loop:</source>
          <target state="translated">循环时， &lt;code&gt;$loop&lt;/code&gt; 变量将在循环内可用。通过此变量可以访问一些有用的信息，例如当前循环索引以及这是循环的第一次还是最后一次迭代：</target>
        </trans-unit>
        <trans-unit id="1c04573d3d5765e7c8354d81a1f28088357b68c2" translate="yes" xml:space="preserve">
          <source>When looping, you may use the &lt;a href=&quot;#the-loop-variable&quot;&gt;loop variable&lt;/a&gt; to gain valuable information about the loop, such as whether you are in the first or last iteration through the loop.</source>
          <target state="translated">循环时，您可以使用&lt;a href=&quot;#the-loop-variable&quot;&gt;loop变量&lt;/a&gt;来获取有关循环的有价值的信息，例如您是否处于循环的第一次或最后一次迭代中。</target>
        </trans-unit>
        <trans-unit id="7fd8422a7db5f61bc851553a8d572990ab747eea" translate="yes" xml:space="preserve">
          <source>When making &lt;code&gt;GET&lt;/code&gt; requests, you may either append a query string to the URL directly or pass an array of key / value pairs as the second argument to the &lt;code&gt;get&lt;/code&gt; method:</source>
          <target state="translated">发出 &lt;code&gt;GET&lt;/code&gt; 请求时，您可以将查询字符串直接附加到URL，也可以将键/值对的数组作为 &lt;code&gt;get&lt;/code&gt; 方法的第二个参数传递：</target>
        </trans-unit>
        <trans-unit id="37a87a030b094e3f3c88d7997812b03c6b5877bb" translate="yes" xml:space="preserve">
          <source>When making a path assertion such as &lt;code&gt;$browser-&amp;gt;assertPathIs('/home')&lt;/code&gt;, the assertion can fail if &lt;code&gt;window.location.pathname&lt;/code&gt; is being updated asynchronously. You may use the &lt;code&gt;waitForLocation&lt;/code&gt; method to wait for the location to be a given value:</source>
          <target state="translated">进行 &lt;code&gt;$browser-&amp;gt;assertPathIs('/home')&lt;/code&gt; 类的路径断言时，如果 &lt;code&gt;window.location.pathname&lt;/code&gt; 是异步更新的，则断言可能会失败。您可以使用 &lt;code&gt;waitForLocation&lt;/code&gt; 方法等待该位置为给定值：</target>
        </trans-unit>
        <trans-unit id="112e6bee110402287d445aaaa363d31734163c0c" translate="yes" xml:space="preserve">
          <source>When manually creating a paginator instance, you should manually &quot;slice&quot; the array of results you pass to the paginator. If you're unsure how to do this, check out the &lt;a href=&quot;https://secure.php.net/manual/en/function.array-slice.php&quot;&gt;array_slice&lt;/a&gt; PHP function.</source>
          <target state="translated">手动创建分页程序实例时，应手动&amp;ldquo;切片&amp;rdquo;传递给分页程序的结果数组。如果不确定如何执行此操作，请查看&lt;a href=&quot;https://secure.php.net/manual/en/function.array-slice.php&quot;&gt;array_slice&lt;/a&gt; PHP函数。</target>
        </trans-unit>
        <trans-unit id="c3997b6ee918c58bec94022a8b090aeb8ae0eb42" translate="yes" xml:space="preserve">
          <source>When manually implementing email verification, you are required to define the contents of the verification notice view yourself. If you would like scaffolding that includes all necessary authentication and verification views, check out &lt;a href=&quot;https://jetstream.laravel.com&quot;&gt;Laravel Jetstream&lt;/a&gt;.</source>
          <target state="translated">手动实施电子邮件验证时，需要您自己定义验证通知视图的内容。如果您希望包含所有必要的身份验证和验证视图的脚手架，请查看&lt;a href=&quot;https://jetstream.laravel.com&quot;&gt;Laravel Jetstream&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9916b7441b1355d7a1a57fdefe45a3d44db0b8cd" translate="yes" xml:space="preserve">
          <source>When manually implementing password resets, you are required to define the contents of the views and routes yourself. If you would like scaffolding that includes all necessary authentication and verification logic, check out &lt;a href=&quot;https://jetstream.laravel.com&quot;&gt;Laravel Jetstream&lt;/a&gt;.</source>
          <target state="translated">手动执行密码重置时，需要定义视图的内容并自己进行路由。如果您希望包含所有必要的身份验证和验证逻辑的脚手架，请查看&lt;a href=&quot;https://jetstream.laravel.com&quot;&gt;Laravel Jetstream&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a60e8976240c19309b6131cde05de8544a79ab4b" translate="yes" xml:space="preserve">
          <source>When merging attributes that are not &lt;code&gt;class&lt;/code&gt; attributes, the values provided to the &lt;code&gt;merge&lt;/code&gt; method will be considered the &quot;default&quot; values of attribute which can be overwritten by the component's consumer. Unlike &lt;code&gt;class&lt;/code&gt; attributes, non-class attributes are not appended to each other. For example, a &lt;code&gt;button&lt;/code&gt; component may look like the following:</source>
          <target state="translated">当合并不是 &lt;code&gt;class&lt;/code&gt; 属性的属性时，提供给 &lt;code&gt;merge&lt;/code&gt; 方法的值将被视为属性的&amp;ldquo;默认&amp;rdquo;值，该值可以被组件的使用者覆盖。与 &lt;code&gt;class&lt;/code&gt; 属性不同，非类属性不会彼此附加。例如， &lt;code&gt;button&lt;/code&gt; 组件可能如下所示：</target>
        </trans-unit>
        <trans-unit id="997bdd68cd01c1f694df0ebacf68cfd611f464b6" translate="yes" xml:space="preserve">
          <source>When mocking an object that is going to be injected into your application via Laravel's service container, you will need to bind your mocked instance into the container as an &lt;code&gt;instance&lt;/code&gt; binding. This will instruct the container to use your mocked instance of the object instead of constructing the object itself:</source>
          <target state="translated">模拟要通过Laravel的服务容器注入到您的应用程序中的对象时，您需要将模拟的实例作为 &lt;code&gt;instance&lt;/code&gt; 绑定绑定到容器中。这将指示容器使用对象的模拟实例，而不是构造对象本身：</target>
        </trans-unit>
        <trans-unit id="a7e0426f2335d7f8f4061e58791752606c1d0ce5" translate="yes" xml:space="preserve">
          <source>When passing information in this manner, the data should be an array with key / value pairs. Inside your view, you can then access each value using its corresponding key, such as &lt;code&gt;&amp;lt;?php echo $key; ?&amp;gt;&lt;/code&gt;. As an alternative to passing a complete array of data to the &lt;code&gt;view&lt;/code&gt; helper function, you may use the &lt;code&gt;with&lt;/code&gt; method to add individual pieces of data to the view:</source>
          <target state="translated">当以这种方式传递信息时，数据应该是具有键/值对的数组。在视图内部，然后可以使用其对应的键访问每个值，例如 &lt;code&gt;&amp;lt;?php echo $key; ?&amp;gt;&lt;/code&gt; 。作为将完整的数据数组传递给 &lt;code&gt;view&lt;/code&gt; 帮助器函数的替代方法，您可以使用 &lt;code&gt;with&lt;/code&gt; 方法将单个数据段添加到视图：</target>
        </trans-unit>
        <trans-unit id="4cee1b7f11aeea844f3e37c303c175b5c6b6fed7" translate="yes" xml:space="preserve">
          <source>When providing metadata, please avoid using &lt;code&gt;subscription_name&lt;/code&gt; as a metadata key. This key is reserved for internal use by Cashier.</source>
          <target state="translated">提供元数据时，请避免使用 &lt;code&gt;subscription_name&lt;/code&gt; 作为元数据密钥。该密钥保留给出纳员内部使用。</target>
        </trans-unit>
        <trans-unit id="d6f7f5f784ae24b730ca163e333bc620653b7876" translate="yes" xml:space="preserve">
          <source>When receiving authorization requests, Passport will automatically display a template to the user allowing them to approve or deny the authorization request. If they approve the request, they will be redirected back to the &lt;code&gt;redirect_uri&lt;/code&gt; that was specified by the consuming application. The &lt;code&gt;redirect_uri&lt;/code&gt; must match the &lt;code&gt;redirect&lt;/code&gt; URL that was specified when the client was created.</source>
          <target state="translated">收到授权请求时，Passport会自动向用户显示模板，允许他们批准或拒绝授权请求。如果他们批准了该请求，它们将被重定向回使用应用程序指定的 &lt;code&gt;redirect_uri&lt;/code&gt; 。该 &lt;code&gt;redirect_uri&lt;/code&gt; 必须匹配 &lt;code&gt;redirect&lt;/code&gt; 创建客户端时所指定的URL。</target>
        </trans-unit>
        <trans-unit id="2832860d0939db625b735827d5fd2e980923b294" translate="yes" xml:space="preserve">
          <source>When referencing the Laravel framework or its components from your application or package, you should always use a version constraint such as &lt;code&gt;5.7.*&lt;/code&gt;, since major releases of Laravel do include breaking changes. However, we strive to always ensure you may update to a new major release in one day or less.</source>
          <target state="translated">从应用程序或程序包中引用Laravel框架或其组件时，应始终使用版本约束，例如 &lt;code&gt;5.7.*&lt;/code&gt; ，因为Laravel的主要发行版确实包含重大更改。但是，我们努力确保您可以在一天或更短的时间内更新到新的主要版本。</target>
        </trans-unit>
        <trans-unit id="ecc2962ca6b6d6ad9094131317c7b960e5941338" translate="yes" xml:space="preserve">
          <source>When referencing the Laravel framework or its components from your application or package, you should always use a version constraint such as &lt;code&gt;^8.0&lt;/code&gt;, since major releases of Laravel do include breaking changes. However, we strive to always ensure you may update to a new major release in one day or less.</source>
          <target state="translated">当从您的应用程序或程序包中引用Laravel框架或其组件时，应始终使用 &lt;code&gt;^8.0&lt;/code&gt; 类的版本约束，因为Laravel的主要发行版确实包含重大更改。但是，我们努力始终确保您可以在一天或更短的时间内更新到新的主要版本。</target>
        </trans-unit>
        <trans-unit id="4d477ea5139573bfab84fe05919a01eb014fbc63" translate="yes" xml:space="preserve">
          <source>When registering event listeners manually, you may wrap the listener Closure within the &lt;code&gt;Illuminate\Events\queueable&lt;/code&gt; function to instruct Laravel to execute the listener using the &lt;a href=&quot;queues&quot;&gt;queue&lt;/a&gt;:</source>
          <target state="translated">手动注册事件侦听器时，可以将侦听器Closure包装在 &lt;code&gt;Illuminate\Events\queueable&lt;/code&gt; 函数中，以指示Laravel使用&lt;a href=&quot;queues&quot;&gt;队列&lt;/a&gt;执行侦听器：</target>
        </trans-unit>
        <trans-unit id="67740bd53dd394d2ca478a0a40cbbcb6f6dd2970" translate="yes" xml:space="preserve">
          <source>When registering routes for single action controllers, you do not need to specify a method:</source>
          <target state="translated">注册单个动作控制器的路由时,不需要指定方法。</target>
        </trans-unit>
        <trans-unit id="85796647e4fa4a49763539cbd680e854a8f5d50d" translate="yes" xml:space="preserve">
          <source>When removing a &lt;code&gt;belongsTo&lt;/code&gt; relationship, you may use the &lt;code&gt;dissociate&lt;/code&gt; method. This method will set the relationship's foreign key to &lt;code&gt;null&lt;/code&gt;:</source>
          <target state="translated">当移除 &lt;code&gt;belongsTo&lt;/code&gt; 关系，您可以使用 &lt;code&gt;dissociate&lt;/code&gt; 方法。此方法会将关系的外键设置为 &lt;code&gt;null&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="a7bf667a1788129a6fa64adeb77396163dd8f8f7" translate="yes" xml:space="preserve">
          <source>When requesting an access token using the authorization code grant, consumers should specify their desired scopes as the &lt;code&gt;scope&lt;/code&gt; query string parameter. The &lt;code&gt;scope&lt;/code&gt; parameter should be a space-delimited list of scopes:</source>
          <target state="translated">使用授权码授予请求访问令牌时，使用者应将其所需的范围指定为 &lt;code&gt;scope&lt;/code&gt; 查询字符串参数。该 &lt;code&gt;scope&lt;/code&gt; 参数应该是范围的空间分隔的列表：</target>
        </trans-unit>
        <trans-unit id="a8af0df12da61722f088cdc349e3a263f56a034e" translate="yes" xml:space="preserve">
          <source>When returning a resource collection from a route, Laravel resets the collection's keys so that they are in simple numerical order. However, you may add a &lt;code&gt;preserveKeys&lt;/code&gt; property to your resource class indicating if collection keys should be preserved:</source>
          <target state="translated">从路由返回资源集合时，Laravel会重置集合的键，以便它们以简单的数字顺序排列。但是，您可以在资源类中添加一个 &lt;code&gt;preserveKeys&lt;/code&gt; 属性，以指示是否应保留收集键：</target>
        </trans-unit>
        <trans-unit id="4f34f7552a82bf023f8adb374ea206e28d2b9b04" translate="yes" xml:space="preserve">
          <source>When returning additional meta data from your resources, you never have to worry about accidentally overriding the &lt;code&gt;links&lt;/code&gt; or &lt;code&gt;meta&lt;/code&gt; keys that are automatically added by Laravel when returning paginated responses. Any additional &lt;code&gt;links&lt;/code&gt; you define will be merged with the links provided by the paginator.</source>
          <target state="translated">从资源中返回其他元数据时，您不必担心在返回分页响应时意外覆盖Laravel自动添加的 &lt;code&gt;links&lt;/code&gt; 或 &lt;code&gt;meta&lt;/code&gt; 密钥。您定义的所有其他 &lt;code&gt;links&lt;/code&gt; 都将与分页器提供的链接合并。</target>
        </trans-unit>
        <trans-unit id="3b659e248971c7cad5e72326fc37d62e8eba5142" translate="yes" xml:space="preserve">
          <source>When returning an authorization response from your gate, the &lt;code&gt;Gate::allows&lt;/code&gt; method will still return a simple boolean value; however, you may use the &lt;code&gt;Gate::inspect&lt;/code&gt; method to get the full authorization response returned by the gate:</source>
          <target state="translated">从您的门返回授权响应时， &lt;code&gt;Gate::allows&lt;/code&gt; 方法仍将返回一个简单的布尔值；但是，您可以使用 &lt;code&gt;Gate::inspect&lt;/code&gt; 方法来获取Gate返回的完整授权响应：</target>
        </trans-unit>
        <trans-unit id="1e542c7317b65712ce596fe952430f795900ad12" translate="yes" xml:space="preserve">
          <source>When returning an authorization response from your policy, the &lt;code&gt;Gate::allows&lt;/code&gt; method will still return a simple boolean value; however, you may use the &lt;code&gt;Gate::inspect&lt;/code&gt; method to get the full authorization response returned by the gate:</source>
          <target state="translated">从策略返回授权响应时， &lt;code&gt;Gate::allows&lt;/code&gt; 方法仍将返回一个简单的布尔值；但是，您可以使用 &lt;code&gt;Gate::inspect&lt;/code&gt; 方法获取Gate返回的完整授权响应：</target>
        </trans-unit>
        <trans-unit id="235950e59c45df6dbd55d8c7429704a2775b8a87" translate="yes" xml:space="preserve">
          <source>When returning paginated collections in a resource response, Laravel will wrap your resource data in a &lt;code&gt;data&lt;/code&gt; key even if the &lt;code&gt;withoutWrapping&lt;/code&gt; method has been called. This is because paginated responses always contain &lt;code&gt;meta&lt;/code&gt; and &lt;code&gt;links&lt;/code&gt; keys with information about the paginator's state:</source>
          <target state="translated">在资源响应中返回分页集合时，Laravel会将您的资源数据包装在 &lt;code&gt;data&lt;/code&gt; 密钥中，即使调用了 &lt;code&gt;withoutWrapping&lt;/code&gt; 方法也是如此。这是因为分页响应始终包含 &lt;code&gt;meta&lt;/code&gt; 和 &lt;code&gt;links&lt;/code&gt; 键以及有关分页器状态的信息：</target>
        </trans-unit>
        <trans-unit id="55aef540220ab8c145c79470cc7804f48f7e641b" translate="yes" xml:space="preserve">
          <source>When running tests via &lt;code&gt;phpunit&lt;/code&gt;, Laravel will automatically set the configuration environment to &lt;code&gt;testing&lt;/code&gt; because of the environment variables defined in the &lt;code&gt;phpunit.xml&lt;/code&gt; file. Laravel also automatically configures the session and cache to the &lt;code&gt;array&lt;/code&gt; driver while testing, meaning no session or cache data will be persisted while testing.</source>
          <target state="translated">通过 &lt;code&gt;phpunit&lt;/code&gt; 运行测试时，由于 &lt;code&gt;phpunit.xml&lt;/code&gt; 文件中定义了环境变量，因此Laravel将自动将配置环境设置为 &lt;code&gt;testing&lt;/code&gt; 。Laravel还在测试时自动配置会话和缓存到 &lt;code&gt;array&lt;/code&gt; 驱动程序，这意味着在测试期间不会保留任何会话或缓存数据。</target>
        </trans-unit>
        <trans-unit id="ba33530bda7d5433d01b7b160dec5838a201d990" translate="yes" xml:space="preserve">
          <source>When running tests via &lt;code&gt;vendor/bin/phpunit&lt;/code&gt;, Laravel will automatically set the configuration environment to &lt;code&gt;testing&lt;/code&gt; because of the environment variables defined in the &lt;code&gt;phpunit.xml&lt;/code&gt; file. Laravel also automatically configures the session and cache to the &lt;code&gt;array&lt;/code&gt; driver while testing, meaning no session or cache data will be persisted while testing.</source>
          <target state="translated">通过 &lt;code&gt;vendor/bin/phpunit&lt;/code&gt; 运行测试时，由于 &lt;code&gt;phpunit.xml&lt;/code&gt; 文件中定义了环境变量，因此Laravel将自动将配置环境设置为 &lt;code&gt;testing&lt;/code&gt; 。Laravel还可以在测试时自动配置会话并缓存到 &lt;code&gt;array&lt;/code&gt; 驱动程序，这意味着在测试期间不会保留任何会话或缓存数据。</target>
        </trans-unit>
        <trans-unit id="3642a6010302d9a2d8571729ccc47dd22312b0f6" translate="yes" xml:space="preserve">
          <source>When running tests, Dusk will back-up your &lt;code&gt;.env&lt;/code&gt; file and rename your Dusk environment to &lt;code&gt;.env&lt;/code&gt;. Once the tests have completed, your &lt;code&gt;.env&lt;/code&gt; file will be restored.</source>
          <target state="translated">运行测试时，Dusk将备份您的 &lt;code&gt;.env&lt;/code&gt; 文件并将您的Dusk环境重命名为 &lt;code&gt;.env&lt;/code&gt; 。测试完成后，您的 &lt;code&gt;.env&lt;/code&gt; 文件将被还原。</target>
        </trans-unit>
        <trans-unit id="e548e334c81e5793d6808a41993a74d99fa7f376" translate="yes" xml:space="preserve">
          <source>When running your applications behind a load balancer that terminates TLS / SSL certificates, you may notice your application sometimes does not generate HTTPS links. Typically this is because your application is being forwarded traffic from your load balancer on port 80 and does not know it should generate secure links.</source>
          <target state="translated">当在终止 TLS/SSL 证书的负载平衡器后面运行应用程序时,您可能会注意到您的应用程序有时不会生成 HTTPS 链接。通常这是因为您的应用程序正在从您的负载平衡器的80端口转发流量,并且不知道它应该生成安全链接。</target>
        </trans-unit>
        <trans-unit id="69c1f1f03f6870f116f900338c453c7b441c7d2f" translate="yes" xml:space="preserve">
          <source>When sending JSON requests to your application, you may access the JSON data via the &lt;code&gt;input&lt;/code&gt; method as long as the &lt;code&gt;Content-Type&lt;/code&gt; header of the request is properly set to &lt;code&gt;application/json&lt;/code&gt;. You may even use &quot;dot&quot; syntax to dig into JSON arrays:</source>
          <target state="translated">向应用程序发送JSON请求时，只要将请求的 &lt;code&gt;Content-Type&lt;/code&gt; 标头正确设置为 &lt;code&gt;application/json&lt;/code&gt; ，就可以通过 &lt;code&gt;input&lt;/code&gt; 法访问JSON数据。您甚至可以使用&amp;ldquo;点&amp;rdquo;语法来挖掘JSON数组：</target>
        </trans-unit>
        <trans-unit id="ae17b9d6ffa7bc93026e7359a3c906c2bac4b23f" translate="yes" xml:space="preserve">
          <source>When sending mail notifications, be sure to set the &lt;code&gt;name&lt;/code&gt; value in your &lt;code&gt;config/app.php&lt;/code&gt; configuration file. This value will be used in the header and footer of your mail notification messages.</source>
          <target state="translated">发送邮件通知时，请确保在 &lt;code&gt;config/app.php&lt;/code&gt; 配置文件中设置 &lt;code&gt;name&lt;/code&gt; 值。此值将在邮件通知消息的页眉和页脚中使用。</target>
        </trans-unit>
        <trans-unit id="a57bedb41b07e62fe43b1a2fd5924faeb27f2ee0" translate="yes" xml:space="preserve">
          <source>When sending notifications via the &lt;code&gt;mail&lt;/code&gt; channel, the notification system will automatically look for an &lt;code&gt;email&lt;/code&gt; property on your notifiable entity. You may customize which email address is used to deliver the notification by defining a &lt;code&gt;routeNotificationForMail&lt;/code&gt; method on the entity:</source>
          <target state="translated">通过 &lt;code&gt;mail&lt;/code&gt; 通道发送通知时，通知系统将自动在您应通知的实体上查找 &lt;code&gt;email&lt;/code&gt; 属性。您可以通过在实体上定义 &lt;code&gt;routeNotificationForMail&lt;/code&gt; 方法来自定义用于发送通知的电子邮件地址：</target>
        </trans-unit>
        <trans-unit id="25492d9feabe4c50f8dd3f0051c456deb51f87bd" translate="yes" xml:space="preserve">
          <source>When sending notifications via the &lt;code&gt;nexmo&lt;/code&gt; channel, the notification system will automatically look for a &lt;code&gt;phone_number&lt;/code&gt; attribute on the notifiable entity. If you would like to customize the phone number the notification is delivered to, define a &lt;code&gt;routeNotificationForNexmo&lt;/code&gt; method on the entity:</source>
          <target state="translated">通过 &lt;code&gt;nexmo&lt;/code&gt; 通道发送通知时，通知系统将自动在可通知实体上查找 &lt;code&gt;phone_number&lt;/code&gt; 属性。如果您想自定义通知发送到的电话号码，请在实体上定义一个 &lt;code&gt;routeNotificationForNexmo&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="ed35dc09fc8b95398c7fe494f4b20ba8a4a48e0a" translate="yes" xml:space="preserve">
          <source>When storing credit cards to a customer for future use, the Stripe Setup Intents API must be used to securely gather the customer's payment method details. A &quot;Setup Intent&quot; indicates to Stripe the intention to charge a customer's payment method. Cashier's &lt;code&gt;Billable&lt;/code&gt; trait includes the &lt;code&gt;createSetupIntent&lt;/code&gt; to easily create a new Setup Intent. You should call this method from the route or controller that will render the form which gathers your customer's payment method details:</source>
          <target state="translated">将信用卡存储给客户以备将来使用时，必须使用Stripe Setup Intents API来安全地收集客户的付款方式详细信息。 &amp;ldquo;设置意图&amp;rdquo;指示向Stripe收取客户付款方式的意图。收银员的 &lt;code&gt;Billable&lt;/code&gt; 特征包括 &lt;code&gt;createSetupIntent&lt;/code&gt; ，可轻松创建新的Setup Intent。您应该从路线或控制器中调用此方法，该方法将呈现将收集客户付款方式详细信息的表格：</target>
        </trans-unit>
        <trans-unit id="2c6c348b0b8a7777e0eaf4112f46152e440a338c" translate="yes" xml:space="preserve">
          <source>When testing Laravel applications, you may wish to &quot;mock&quot; certain aspects of your application so they are not actually executed during a given test. For example, when testing a controller that dispatches an event, you may wish to mock the event listeners so they are not actually executed during the test. This allows you to only test the controller's HTTP response without worrying about the execution of the event listeners, since the event listeners can be tested in their own test case.</source>
          <target state="translated">当测试Laravel应用程序时,你可能希望 &quot;模拟 &quot;你的应用程序的某些方面,这样它们在测试中就不会被实际执行.例如,当测试一个控制器发送一个事件时,你可能希望模拟事件监听器,这样在测试过程中他们就不会被实际执行.这样您就可以只测试控制器的HTTP响应,而不用担心事件监听器的执行,因为事件监听器可以在自己的测试用例中进行测试。</target>
        </trans-unit>
        <trans-unit id="1fa45a32d5f7a441183697a40360a3f6807b3295" translate="yes" xml:space="preserve">
          <source>When testing an application that uses Cashier, you may mock the actual HTTP requests to the Stripe API; however, this requires you to partially re-implement Cashier's own behavior. Therefore, we recommend allowing your tests to hit the actual Stripe API. While this is slower, it provides more confidence that your application is working as expected and any slow tests may be placed within their own PHPUnit testing group.</source>
          <target state="translated">当测试使用Cashier的应用程序时,您可以模拟对Stripe API的实际HTTP请求;然而,这需要您部分地重新实现Cashier自己的行为。因此,我们建议允许您的测试打入实际的Stripe API。虽然这样做速度较慢,但它能提供更多的信心,让您的应用程序按预期工作,而且任何缓慢的测试都可以放在他们自己的PHPUnit测试组中。</target>
        </trans-unit>
        <trans-unit id="98cd3ef6c47c5747bd1a5816f545f1bf53150caa" translate="yes" xml:space="preserve">
          <source>When testing applications that use JavaScript extensively, it often becomes necessary to &quot;wait&quot; for certain elements or data to be available before proceeding with a test. Dusk makes this a cinch. Using a variety of methods, you may wait for elements to be visible on the page or even wait until a given JavaScript expression evaluates to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">在广泛测试使用JavaScript的应用程序时，通常有必要在进行测试之前&amp;ldquo;等待&amp;rdquo;某些元素或数据可用。黄昏使这成为障碍。使用多种方法，您可以等待元素在页面上可见，甚至等到给定的JavaScript表达式求值为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="45e677ccec4561abdeec928c2288738d1f583e95" translate="yes" xml:space="preserve">
          <source>When testing call to the global &lt;code&gt;cache&lt;/code&gt; function, you may use the &lt;code&gt;Cache::shouldReceive&lt;/code&gt; method just as if you were &lt;a href=&quot;mocking#mocking-facades&quot;&gt;testing a facade&lt;/a&gt;.</source>
          <target state="translated">在测试对全局 &lt;code&gt;cache&lt;/code&gt; 功能的调用时，可以使用 &lt;code&gt;Cache::shouldReceive&lt;/code&gt; 方法，就像在&lt;a href=&quot;mocking#mocking-facades&quot;&gt;测试Facade一样&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a879fb5da9e0f8123c074c9f2797e2b8d5418858" translate="yes" xml:space="preserve">
          <source>When testing, it can be helpful to assert that certain events were dispatched without actually triggering their listeners. Laravel's &lt;a href=&quot;mocking#event-fake&quot;&gt;built-in testing helpers&lt;/a&gt; makes it a cinch.</source>
          <target state="translated">在测试时，断言某些事件是在未实际触发其侦听器的情况下进行的很有帮助。Laravel &lt;a href=&quot;mocking#event-fake&quot;&gt;内置的测试助手&lt;/a&gt;使它变得异常简单。</target>
        </trans-unit>
        <trans-unit id="ad592c5fb0da8b655064dc1f9a4b6466c974b717" translate="yes" xml:space="preserve">
          <source>When testing, remember that that Cashier itself already has a great test suite, so you should only focus on testing the subscription and payment flow of your own application and not every underlying Cashier behavior.</source>
          <target state="translated">在测试的时候,请记住,那个收银台本身已经有一个很好的测试套件,所以你应该只专注于测试自己应用的订阅和支付流程,而不是每个底层的收银台行为。</target>
        </trans-unit>
        <trans-unit id="9f51875db37eb34fb69b4ffd328d97078e4182fd" translate="yes" xml:space="preserve">
          <source>When testing, you may need to insert a few records into your database before executing your test. Instead of manually specifying the value of each column when you create this test data, Laravel allows you to define a default set of attributes for each of your &lt;a href=&quot;eloquent&quot;&gt;Eloquent models&lt;/a&gt; using model factories.</source>
          <target state="translated">测试时，在执行测试之前，您可能需要在数据库中插入一些记录。相反的，当你创建这个测试数据手动指定各列的值，Laravel允许您定义属性的默认设置为每个的&lt;a href=&quot;eloquent&quot;&gt;雄辩模型&lt;/a&gt;使用模型工厂。</target>
        </trans-unit>
        <trans-unit id="3c0334a3d63f52a743121f1e734015e741d4e1e6" translate="yes" xml:space="preserve">
          <source>When testing, you may need to insert a few records into your database before executing your test. Instead of manually specifying the value of each column when you create this test data, Laravel allows you to define a default set of attributes for each of your &lt;a href=&quot;eloquent&quot;&gt;Eloquent models&lt;/a&gt; using model factories. To get started, take a look at the &lt;code&gt;database/factories/UserFactory.php&lt;/code&gt; file in your application. Out of the box, this file contains one factory definition:</source>
          <target state="translated">在测试时，您可能需要在执行测试之前向数据库中插入一些记录。相反的，当你创建这个测试数据手动指定各列的值，Laravel允许您定义属性的默认设置为每个的&lt;a href=&quot;eloquent&quot;&gt;雄辩模型&lt;/a&gt;使用模型工厂。首先，请查看应用程序中的 &lt;code&gt;database/factories/UserFactory.php&lt;/code&gt; 文件。开箱即用，此文件包含一个出厂定义：</target>
        </trans-unit>
        <trans-unit id="18605dfbf414d2ce71ab0ba28ee9ec60393ae157" translate="yes" xml:space="preserve">
          <source>When testing, you may occasionally need to modify the time returned by helpers such as &lt;code&gt;now&lt;/code&gt; or &lt;code&gt;Illuminate\Support\Carbon::now()&lt;/code&gt;. Laravel's base feature test class now includes helpers that allow you to manipulate the current time:</source>
          <target state="translated">测试时，有时可能需要修改诸如 &lt;code&gt;now&lt;/code&gt; 或 &lt;code&gt;Illuminate\Support\Carbon::now()&lt;/code&gt; 类的助手返回的时间。Laravel的基本功能测试类现在包括帮助程序，可让您操纵当前时间：</target>
        </trans-unit>
        <trans-unit id="0ff9f4d22bc3a97a80d04c0e9e83159b3e4b7fb7" translate="yes" xml:space="preserve">
          <source>When testing, you may occasionally need to modify the time returned by helpers such as &lt;code&gt;now&lt;/code&gt; or &lt;code&gt;Illuminate\Support\Carbon::now()&lt;/code&gt;. Thankfully, Laravel's base feature test class includes helpers that allow you to manipulate the current time:</source>
          <target state="translated">测试时，有时可能需要修改诸如 &lt;code&gt;now&lt;/code&gt; 或 &lt;code&gt;Illuminate\Support\Carbon::now()&lt;/code&gt; 类的助手返回的时间。值得庆幸的是，Laravel的基本功能测试类包括一些帮助程序，可让您操纵当前时间：</target>
        </trans-unit>
        <trans-unit id="970d26f19b3db6121d4d650d9fa03c5f92a78c3f" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;auth&lt;/code&gt; middleware detects an unauthorized user, it will redirect the user to the &lt;code&gt;login&lt;/code&gt;&lt;a href=&quot;routing#named-routes&quot;&gt;named route&lt;/a&gt;. You may modify this behavior by updating the &lt;code&gt;redirectTo&lt;/code&gt; function in your &lt;code&gt;app/Http/Middleware/Authenticate.php&lt;/code&gt; file:</source>
          <target state="translated">当 &lt;code&gt;auth&lt;/code&gt; 中间件检测到未经授权的用户时，它将把用户重定向到&lt;a href=&quot;routing#named-routes&quot;&gt;名为route&lt;/a&gt;的 &lt;code&gt;login&lt;/code&gt; 名。您可以通过更新 &lt;code&gt;app/Http/Middleware/Authenticate.php&lt;/code&gt; 文件中的 &lt;code&gt;redirectTo&lt;/code&gt; 函数来修改此行为：</target>
        </trans-unit>
        <trans-unit id="6927e9f4a719ab090764b6563414ed96325c3f4d" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;cache&lt;/code&gt; function is called without any arguments, it returns an instance of the &lt;code&gt;Illuminate\Contracts\Cache\Factory&lt;/code&gt; implementation, allowing you to call other caching methods:</source>
          <target state="translated">在不带任何参数的情况下调用 &lt;code&gt;cache&lt;/code&gt; 函数时，它将返回 &lt;code&gt;Illuminate\Contracts\Cache\Factory&lt;/code&gt; 实现的实例，从而允许您调用其他缓存方法：</target>
        </trans-unit>
        <trans-unit id="f97e5983ec21aef682e4dee19437164ddbb5135f" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;logoutOtherDevices&lt;/code&gt; method is invoked, the user's other sessions will be invalidated entirely, meaning they will be &quot;logged out&quot; of all guards they were previously authenticated by.</source>
          <target state="translated">当 &lt;code&gt;logoutOtherDevices&lt;/code&gt; 方法被调用时，用户的其他会话将完全失效，这意味着他们将是他们以前被鉴定的所有后卫的&amp;ldquo;注销&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="8a4506bd3f2bcaabec92b890a813cc98d2844cda" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;preserveKeys&lt;/code&gt; property is set to &lt;code&gt;true&lt;/code&gt;, collection keys will be preserved:</source>
          <target state="translated">当 &lt;code&gt;preserveKeys&lt;/code&gt; 属性设置为 &lt;code&gt;true&lt;/code&gt; 时，将保留集合键：</target>
        </trans-unit>
        <trans-unit id="4a150d50b68b5dd86a664d159484fd6e0ae8bbc9" translate="yes" xml:space="preserve">
          <source>When the Redis broadcaster publishes an event, it will be published on the event's specified channel names and the payload will be a JSON encoded string containing the event name, a &lt;code&gt;data&lt;/code&gt; payload, and the user that generated the event's socket ID (if applicable).</source>
          <target state="translated">当Redis广播公司发布事件时，它将在事件的指定频道名称上发布，并且有效负载将是JSON编码的字符串，其中包含事件名称， &lt;code&gt;data&lt;/code&gt; 有效负载以及生成事件套接字ID的用户（如果适用）。</target>
        </trans-unit>
        <trans-unit id="686e4a6bf4809ba17038302a4daa525c2d2af0a2" translate="yes" xml:space="preserve">
          <source>When the application should next be available.</source>
          <target state="translated">下一次应该在什么时候可以申请。</target>
        </trans-unit>
        <trans-unit id="344323d682cb8cc0c9f899bf1982545dc353be11" translate="yes" xml:space="preserve">
          <source>When the application was put in maintenance mode.</source>
          <target state="translated">当应用程序被置于维护模式时。</target>
        </trans-unit>
        <trans-unit id="488b9060c48efe2f9f3131028816e44f046dc38c" translate="yes" xml:space="preserve">
          <source>When the event listener is resolved, the service container will read the type-hints on the constructor of the class, and inject the appropriate value. To learn more about registering things in the service container, check out &lt;a href=&quot;container&quot;&gt;its documentation&lt;/a&gt;.</source>
          <target state="translated">解析事件侦听器后，服务容器将读取类的构造函数上的类型提示，并注入适当的值。要了解有关在服务容器中注册内容的更多信息，请查阅&lt;a href=&quot;container&quot;&gt;其文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c23a45d5c8794af9b6ffe6e2cc871f1486574413" translate="yes" xml:space="preserve">
          <source>When the mobile device uses the token to make an API request to your application, it should pass the token in the &lt;code&gt;Authorization&lt;/code&gt; header as a &lt;code&gt;Bearer&lt;/code&gt; token.</source>
          <target state="translated">当移动设备使用该令牌进行API请求到应用程序，它应该通过令牌在 &lt;code&gt;Authorization&lt;/code&gt; 报头作为 &lt;code&gt;Bearer&lt;/code&gt; 令牌。</target>
        </trans-unit>
        <trans-unit id="5f8b6e745ba2d80daa8f5ba25b868f7786122b11" translate="yes" xml:space="preserve">
          <source>When the real-time facade is used, the publisher implementation will be resolved out of the service container using the portion of the interface or class name that appears after the &lt;code&gt;Facades&lt;/code&gt; prefix. When testing, we can use Laravel's built-in facade testing helpers to mock this method call:</source>
          <target state="translated">使用实时外观时，将使用出现在 &lt;code&gt;Facades&lt;/code&gt; 前缀之后的接口或类名称的一部分，将发布者实现从服务容器中解析出来。在测试时，我们可以使用Laravel的内置外观测试助手来模拟此方法调用：</target>
        </trans-unit>
        <trans-unit id="f14f8f84d1785d45a0514e55bfe9ed7ad825bb64" translate="yes" xml:space="preserve">
          <source>When this configuration option is &lt;code&gt;true&lt;/code&gt;, Scout will not remove soft deleted models from the search index. Instead, it will set a hidden &lt;code&gt;__soft_deleted&lt;/code&gt; attribute on the indexed record. Then, you may use the &lt;code&gt;withTrashed&lt;/code&gt; or &lt;code&gt;onlyTrashed&lt;/code&gt; methods to retrieve the soft deleted records when searching:</source>
          <target state="translated">当此配置选项为 &lt;code&gt;true&lt;/code&gt; 时，Scout不会从搜索索引中删除软删除的模型。相反，它将在索引记录上设置一个隐藏的 &lt;code&gt;__soft_deleted&lt;/code&gt; 属性。然后，您可以在搜索时使用 &lt;code&gt;withTrashed&lt;/code&gt; 或 &lt;code&gt;onlyTrashed&lt;/code&gt; 方法来检索软删除的记录：</target>
        </trans-unit>
        <trans-unit id="5440ce33fe8ac340b1479e54e8644fb75af5dc1c" translate="yes" xml:space="preserve">
          <source>When tokens have been revoked or expired, you might want to purge them from the database. Passport ships with a command that can do this for you:</source>
          <target state="translated">当代币被撤销或过期时,你可能想从数据库中清除它们。Passport提供了一个命令,可以帮你完成这个任务。</target>
        </trans-unit>
        <trans-unit id="8b773bed645d2b4ac2b4f65c1235d68883d46172" translate="yes" xml:space="preserve">
          <source>When truncating a PostgreSQL database, the &lt;code&gt;CASCADE&lt;/code&gt; behavior will be applied. This means that all foreign key related records in other tables will be deleted as well.</source>
          <target state="translated">截断PostgreSQL数据库时，将应用 &lt;code&gt;CASCADE&lt;/code&gt; 行为。这意味着其他表中所有与外键相关的记录也将被删除。</target>
        </trans-unit>
        <trans-unit id="1b041f976ae9e44b805b8454282f50cacb752aaa" translate="yes" xml:space="preserve">
          <source>When updating a &lt;code&gt;belongsTo&lt;/code&gt; relationship, you may use the &lt;code&gt;associate&lt;/code&gt; method. This method will set the foreign key on the child model:</source>
          <target state="translated">在更新 &lt;code&gt;belongsTo&lt;/code&gt; 关系时，可以使用 &lt;code&gt;associate&lt;/code&gt; 方法。此方法将在子模型上设置外键：</target>
        </trans-unit>
        <trans-unit id="1913d09c3c12a86264959aca973242f378ad9afe" translate="yes" xml:space="preserve">
          <source>When updating a JSON column, you should use &lt;code&gt;-&amp;gt;&lt;/code&gt; syntax to access the appropriate key in the JSON object. This operation is only supported on MySQL 5.7+:</source>
          <target state="translated">更新JSON列时，应使用 &lt;code&gt;-&amp;gt;&lt;/code&gt; 语法访问JSON对象中的相应键。该操作仅在MySQL 5.7+上受支持：</target>
        </trans-unit>
        <trans-unit id="34bce56b04bb877046b507a8ad38bedd9c7a7f7c" translate="yes" xml:space="preserve">
          <source>When updating a JSON column, you should use &lt;code&gt;-&amp;gt;&lt;/code&gt; syntax to access the appropriate key in the JSON object. This operation is supported on MySQL 5.7+ and PostgreSQL 9.5+:</source>
          <target state="translated">更新JSON列时，应使用 &lt;code&gt;-&amp;gt;&lt;/code&gt; 语法访问JSON对象中的相应键。MySQL 5.7+和PostgreSQL 9.5+支持此操作：</target>
        </trans-unit>
        <trans-unit id="c14fa222a11fc35bdbdf128483fafed140d93574" translate="yes" xml:space="preserve">
          <source>When updating or deleting records inside the chunk callback, any changes to the primary key or foreign keys could affect the chunk query. This could potentially result in records not being included in the chunked results.</source>
          <target state="translated">当在分块回调中更新或删除记录时,对主键或外键的任何更改都会影响分块查询。这可能会导致记录不被包含在分块结果中。</target>
        </trans-unit>
        <trans-unit id="e6eb9fa3c083d8054cf4168e7dfe04e3975ecd73" translate="yes" xml:space="preserve">
          <source>When upgrading to a new major version of Horizon, it's important that you carefully review &lt;a href=&quot;https://github.com/laravel/horizon/blob/master/UPGRADE.md&quot;&gt;the upgrade guide&lt;/a&gt;.</source>
          <target state="translated">升级到新的主要Horizo​​n版本时，请务必仔细阅读&lt;a href=&quot;https://github.com/laravel/horizon/blob/master/UPGRADE.md&quot;&gt;升级指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5cd203c85243093773901b9d0398466a505678e4" translate="yes" xml:space="preserve">
          <source>When upgrading to a new major version of Passport, it's important that you carefully review &lt;a href=&quot;https://github.com/laravel/passport/blob/master/UPGRADE.md&quot;&gt;the upgrade guide&lt;/a&gt;.</source>
          <target state="translated">升级到新的主要版本的Passport时，请务必仔细阅读&lt;a href=&quot;https://github.com/laravel/passport/blob/master/UPGRADE.md&quot;&gt;升级指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2e2e39cc595156553d060b37d7df1789ba4f28ac" translate="yes" xml:space="preserve">
          <source>When upgrading to a new major version of Socialite, it's important that you carefully review &lt;a href=&quot;https://github.com/laravel/socialite/blob/master/UPGRADE.md&quot;&gt;the upgrade guide&lt;/a&gt;.</source>
          <target state="translated">升级到新的主要版本的Socialite时，请务必仔细阅读&lt;a href=&quot;https://github.com/laravel/socialite/blob/master/UPGRADE.md&quot;&gt;升级指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5562574548224d99cf412a46ff14c36772cfa9b5" translate="yes" xml:space="preserve">
          <source>When upgrading to a new major version of Telescope, it's important that you carefully review &lt;a href=&quot;https://github.com/laravel/telescope/blob/master/UPGRADE.md&quot;&gt;the upgrade guide&lt;/a&gt;.</source>
          <target state="translated">升级到Telescope的新主要版本时，请务必仔细阅读&lt;a href=&quot;https://github.com/laravel/telescope/blob/master/UPGRADE.md&quot;&gt;升级指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="96f6e1736f192ffbf16f8303ba1366ac3e23d462" translate="yes" xml:space="preserve">
          <source>When upgrading to a new version of Cashier, it's important that you carefully review &lt;a href=&quot;https://github.com/laravel/cashier-paddle/blob/master/UPGRADE.md&quot;&gt;the upgrade guide&lt;/a&gt;.</source>
          <target state="translated">升级到新版本的收银台时，请务必仔细阅读&lt;a href=&quot;https://github.com/laravel/cashier-paddle/blob/master/UPGRADE.md&quot;&gt;升级指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="57e16f9c00c94249d576fe8cdfc7e2493ce927d5" translate="yes" xml:space="preserve">
          <source>When upgrading to a new version of Cashier, it's important that you carefully review &lt;a href=&quot;https://github.com/laravel/cashier-stripe/blob/master/UPGRADE.md&quot;&gt;the upgrade guide&lt;/a&gt;.</source>
          <target state="translated">升级到新版本的收银台时，请务必仔细阅读&lt;a href=&quot;https://github.com/laravel/cashier-stripe/blob/master/UPGRADE.md&quot;&gt;升级指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1aceb1d4fa7b4a7b46fe4e5edd04fc97b5c88321" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;homestead&quot;&gt;Homestead&lt;/a&gt; or &lt;a href=&quot;valet&quot;&gt;Valet&lt;/a&gt;, pretty URLs will be automatically configured.</source>
          <target state="translated">使用&lt;a href=&quot;homestead&quot;&gt;Homestead&lt;/a&gt;或&lt;a href=&quot;valet&quot;&gt;Valet时&lt;/a&gt;，将自动配置漂亮的URL。</target>
        </trans-unit>
        <trans-unit id="24047ad51fead7786269f4b53b38af1fb1ab633d" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;horizon&quot;&gt;Horizon&lt;/a&gt;, you should use the &lt;code&gt;horizon:clear&lt;/code&gt; command to clear jobs from the queue instead of the &lt;code&gt;queue:clear&lt;/code&gt; command.</source>
          <target state="translated">使用&lt;a href=&quot;horizon&quot;&gt;Horizo​​n时&lt;/a&gt;，应使用 &lt;code&gt;horizon:clear&lt;/code&gt; 命令而不是 &lt;code&gt;queue:clear&lt;/code&gt; 命令从队列中清除作业。</target>
        </trans-unit>
        <trans-unit id="fdb363deb2068fc4b8c818dc07b73e035bc6f1eb" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;horizon&quot;&gt;Horizon&lt;/a&gt;, you should use the &lt;code&gt;horizon:forget&lt;/code&gt; command to delete a failed job instead of the &lt;code&gt;queue:forget&lt;/code&gt; command.</source>
          <target state="translated">使用&lt;a href=&quot;horizon&quot;&gt;Horizo​​n时&lt;/a&gt;，应使用 &lt;code&gt;horizon:forget&lt;/code&gt; 命令删除失败的作业，而不要使用 &lt;code&gt;queue:forget&lt;/code&gt; 命令。</target>
        </trans-unit>
        <trans-unit id="ecd61bddd3a1dc42d585f8616c3054fe14e1bcdc" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;https://jetstream.laravel.com&quot;&gt;Laravel Jetstream&lt;/a&gt;, Laravel dispatches &lt;a href=&quot;events&quot;&gt;events&lt;/a&gt; during the email verification process. If you are manually handling email verification for your application, you may wish to manually dispatch these events after verification is completed. You may attach listeners to these events in your &lt;code&gt;EventServiceProvider&lt;/code&gt;:</source>
          <target state="translated">使用&lt;a href=&quot;https://jetstream.laravel.com&quot;&gt;Laravel Jetstream时&lt;/a&gt;，Laravel在电子邮件验证过程中调度&lt;a href=&quot;events&quot;&gt;事件&lt;/a&gt;。如果您正在为应用程序手动处理电子邮件验证，则可能希望在验证完成后手动调度这些事件。您可以在 &lt;code&gt;EventServiceProvider&lt;/code&gt; 中将侦听器附加到这些事件：</target>
        </trans-unit>
        <trans-unit id="6de0de645ff2c56e811a930e72310aeb6eeeb2a2" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;https://pusher.com&quot;&gt;Pusher&lt;/a&gt;, you must enable the &quot;Client Events&quot; option in the &quot;App Settings&quot; section of your &lt;a href=&quot;https://dashboard.pusher.com/&quot;&gt;application dashboard&lt;/a&gt; in order to send client events.</source>
          <target state="translated">使用&lt;a href=&quot;https://pusher.com&quot;&gt;Pusher时&lt;/a&gt;，必须在&lt;a href=&quot;https://dashboard.pusher.com/&quot;&gt;应用程序仪表板&lt;/a&gt;的&amp;ldquo;应用程序设置&amp;rdquo;部分中启用&amp;ldquo;客户端事件&amp;rdquo;选项，才能发送客户端事件。</target>
        </trans-unit>
        <trans-unit id="ea7fd4c2f1b2bbf591f24dba35a9dcb49a0babfd" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;https://pusher.com/channels&quot;&gt;Pusher Channels&lt;/a&gt;, you must enable the &quot;Client Events&quot; option in the &quot;App Settings&quot; section of your &lt;a href=&quot;https://dashboard.pusher.com/&quot;&gt;application dashboard&lt;/a&gt; in order to send client events.</source>
          <target state="translated">使用&lt;a href=&quot;https://pusher.com/channels&quot;&gt;Pusher Channels时&lt;/a&gt;，必须在&lt;a href=&quot;https://dashboard.pusher.com/&quot;&gt;应用程序仪表板&lt;/a&gt;的&amp;ldquo;应用程序设置&amp;rdquo;部分中启用&amp;ldquo;客户端事件&amp;rdquo;选项，才能发送客户端事件。</target>
        </trans-unit>
        <trans-unit id="f68494c4d28c57e1e6fc1997fc79e5a3abd9315f" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;Castable&lt;/code&gt; classes, you may still provide arguments in the &lt;code&gt;$casts&lt;/code&gt; definition. The arguments will be passed directly to the caster class:</source>
          <target state="translated">使用 &lt;code&gt;Castable&lt;/code&gt; 类时，您仍可以在 &lt;code&gt;$casts&lt;/code&gt; 定义中提供参数。参数将直接传递到Caster类：</target>
        </trans-unit>
        <trans-unit id="3e96dca2c345a790abda7560a20e54b18efeea10" translate="yes" xml:space="preserve">
          <source>When using Channels and &lt;a href=&quot;#installing-laravel-echo&quot;&gt;Laravel Echo&lt;/a&gt;, you should specify &lt;code&gt;pusher&lt;/code&gt; as your desired broadcaster when instantiating the Echo instance in your &lt;code&gt;resources/js/bootstrap.js&lt;/code&gt; file:</source>
          <target state="translated">当使用Channels和&lt;a href=&quot;#installing-laravel-echo&quot;&gt;Laravel Echo时&lt;/a&gt;，在您的 &lt;code&gt;resources/js/bootstrap.js&lt;/code&gt; 文件中实例化Echo实例时，应将 &lt;code&gt;pusher&lt;/code&gt; 指定为所需的广播器：</target>
        </trans-unit>
        <trans-unit id="61cb3e27532ba695e24bd6bee50a914c831f2921" translate="yes" xml:space="preserve">
          <source>When using Homestead in a team setting, you may want to tweak Homestead to better fit your personal development style. You may create a &lt;code&gt;user-customizations.sh&lt;/code&gt; file in the root of your Homestead directory (The same directory containing your &lt;code&gt;Homestead.yaml&lt;/code&gt;). Within this file, you may make any customization you would like; however, the &lt;code&gt;user-customizations.sh&lt;/code&gt; should not be version controlled.</source>
          <target state="translated">在团队环境中使用Homestead时，您可能需要调整Homestead以使其更适合您的个人开发风格。您可以在Homestead目录（包含 &lt;code&gt;Homestead.yaml&lt;/code&gt; 的同一目录）的根目录中创建一个 &lt;code&gt;user-customizations.sh&lt;/code&gt; 文件。在此文件中，您可以进行所需的任何自定义；但是，不 &lt;code&gt;user-customizations.sh&lt;/code&gt; 进行版本控制。</target>
        </trans-unit>
        <trans-unit id="cdd7397bf10a53b326194aa43c868e38ce95696c" translate="yes" xml:space="preserve">
          <source>When using Laravel Jetstream, the Jetstream installation process will change the value of the &lt;code&gt;HOME&lt;/code&gt; constant to &lt;code&gt;/dashboard&lt;/code&gt;.</source>
          <target state="translated">使用Laravel Jetstream时，Jetstream安装过程会将 &lt;code&gt;HOME&lt;/code&gt; 常量的值更改为 &lt;code&gt;/dashboard&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="45dee84ffcfb56127e6e7b5e741427cf328064b0" translate="yes" xml:space="preserve">
          <source>When using NFS on Windows, you should consider installing the &lt;a href=&quot;https://github.com/winnfsd/vagrant-winnfsd&quot;&gt;vagrant-winnfsd&lt;/a&gt; plug-in. This plug-in will maintain the correct user / group permissions for files and directories within the Homestead box.</source>
          <target state="translated">在Windows上使用NFS时，应考虑安装&lt;a href=&quot;https://github.com/winnfsd/vagrant-winnfsd&quot;&gt;vagrant-winnfsd&lt;/a&gt;插件。该插件将在Homestead框中维护文件和目录的正确用户/组权限。</target>
        </trans-unit>
        <trans-unit id="6522a2d06c3352beb6a40bc917412e81cdcfced1" translate="yes" xml:space="preserve">
          <source>When using NFS, you should consider installing the &lt;a href=&quot;https://github.com/gael-ian/vagrant-bindfs&quot;&gt;vagrant-bindfs&lt;/a&gt; plug-in. This plug-in will maintain the correct user / group permissions for files and directories within the Homestead box.</source>
          <target state="translated">使用NFS时，应考虑安装&lt;a href=&quot;https://github.com/gael-ian/vagrant-bindfs&quot;&gt;vagrant-bindfs&lt;/a&gt;插件。该插件将在Homestead框中维护文件和目录的正确用户/组权限。</target>
        </trans-unit>
        <trans-unit id="1484c73f3c1d4c1a3104cb05fbbec4cf0011594f" translate="yes" xml:space="preserve">
          <source>When using PostgreSQL the &lt;code&gt;insertGetId&lt;/code&gt; method expects the auto-incrementing column to be named &lt;code&gt;id&lt;/code&gt;. If you would like to retrieve the ID from a different &quot;sequence&quot;, you may pass the column name as the second parameter to the &lt;code&gt;insertGetId&lt;/code&gt; method.</source>
          <target state="translated">使用PostgreSQL时， &lt;code&gt;insertGetId&lt;/code&gt; 方法期望自动递增的列名为 &lt;code&gt;id&lt;/code&gt; 。如果要从其他&amp;ldquo;序列&amp;rdquo;中检索ID，则可以将列名作为第二个参数传递给 &lt;code&gt;insertGetId&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="4dd74beac11303272bc7f7e8bba0864ea85df693" translate="yes" xml:space="preserve">
          <source>When using Pusher and &lt;a href=&quot;#installing-laravel-echo&quot;&gt;Laravel Echo&lt;/a&gt;, you should specify &lt;code&gt;pusher&lt;/code&gt; as your desired broadcaster when instantiating the Echo instance in your &lt;code&gt;resources/js/bootstrap.js&lt;/code&gt; file:</source>
          <target state="translated">当使用Pusher和&lt;a href=&quot;#installing-laravel-echo&quot;&gt;Laravel Echo时&lt;/a&gt;，在您的 &lt;code&gt;resources/js/bootstrap.js&lt;/code&gt; 文件中实例化Echo实例时，应将 &lt;code&gt;pusher&lt;/code&gt; 指定为所需的广播器：</target>
        </trans-unit>
        <trans-unit id="c9b05bd9b613ec493e02e30023e6d99dd88d2683" translate="yes" xml:space="preserve">
          <source>When using Stripe, the &lt;code&gt;charge&lt;/code&gt; method accepts the amount you would like to charge in the &lt;strong&gt;lowest denominator of the currency used by your application&lt;/strong&gt;. However, when using Braintree, you should pass the full dollar amount to the &lt;code&gt;charge&lt;/code&gt; method:</source>
          <target state="translated">使用Stripe时， &lt;code&gt;charge&lt;/code&gt; 方法&lt;strong&gt;以您的应用程序使用的货币&lt;/strong&gt;的&lt;strong&gt;最低分母&lt;/strong&gt;接受您要收取的金额。但是，在使用Braintree时，您应该将全部金额传递给 &lt;code&gt;charge&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="3b8709feab1bd96a016534a70feb2b8815b1296a" translate="yes" xml:space="preserve">
          <source>When using a custom keyed implicit binding as a nested route parameter, Laravel will automatically scope the query to retrieve the nested model by its parent using conventions to guess the relationship name on the parent. In this case, it will be assumed that the &lt;code&gt;User&lt;/code&gt; model has a relationship named &lt;code&gt;posts&lt;/code&gt; (the plural of the route parameter name) which can be used to retrieve the &lt;code&gt;Post&lt;/code&gt; model.</source>
          <target state="translated">当使用自定义键隐式绑定作为嵌套的路由参数时，Laravel将自动确定范围，以使用约定猜测其父级上的关系名称，从而由其父级检索嵌套模型。在这种情况下，将假定 &lt;code&gt;User&lt;/code&gt; 模型具有一个名为 &lt;code&gt;posts&lt;/code&gt; （路由参数名称的复数）的关系，该关系可用于检索 &lt;code&gt;Post&lt;/code&gt; 模型。</target>
        </trans-unit>
        <trans-unit id="2a2f1124ea2f284bd890f6886a27ff0c96b5bade" translate="yes" xml:space="preserve">
          <source>When using any tool in the &quot;real world&quot;, you feel more confident if you understand how that tool works. Application development is no different. When you understand how your development tools function, you feel more comfortable and confident using them.</source>
          <target state="translated">在 &quot;现实世界 &quot;中使用任何工具时,如果你了解该工具的工作原理,你会感到更有信心。应用程序开发也是如此。当你了解你的开发工具是如何运作的,你就会觉得使用它们更舒服,更有信心。</target>
        </trans-unit>
        <trans-unit id="88d048fec3b9053ff80ecb7fe533eab762daa3a3" translate="yes" xml:space="preserve">
          <source>When using chained &lt;code&gt;when&lt;/code&gt; methods, the scheduled command will only execute if all &lt;code&gt;when&lt;/code&gt; conditions return &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">当使用链接的 &lt;code&gt;when&lt;/code&gt; 方法时，仅当所有条件返回 &lt;code&gt;true&lt;/code&gt; &lt;code&gt;when&lt;/code&gt; 才会执行计划的命令。</target>
        </trans-unit>
        <trans-unit id="8e81bf67420b6c95c99b248363594ecca214fc72" translate="yes" xml:space="preserve">
          <source>When using dynamic properties, Laravel will first look for the parameter's value in the request payload. If it is not present, Laravel will search for the field in the route parameters.</source>
          <target state="translated">当使用动态属性时,Laravel会首先在请求的有效载荷中寻找参数的值.如果它不存在,Laravel会在路由参数中搜索该字段.</target>
        </trans-unit>
        <trans-unit id="3aac47c28302ef25207a2f8c26a0a14076896fb9" translate="yes" xml:space="preserve">
          <source>When using loops you may also end the loop or skip the current iteration:</source>
          <target state="translated">当使用循环时,你也可以结束循环或跳过当前的迭代。</target>
        </trans-unit>
        <trans-unit id="8996ce7cf64005261674f42191374cf740335998" translate="yes" xml:space="preserve">
          <source>When using magic methods to create factory relationships, you may pass an array of attributes to override on the related models:</source>
          <target state="translated">当使用魔术方法创建工厂关系时,你可以传递一个属性数组来覆盖在相关模型上。</target>
        </trans-unit>
        <trans-unit id="b4c0b7d7245475edf68836aeeb8ec57c828c16ba" translate="yes" xml:space="preserve">
          <source>When using multiple connections, you may access each connection via the &lt;code&gt;connection&lt;/code&gt; method on the &lt;code&gt;DB&lt;/code&gt; facade. The &lt;code&gt;name&lt;/code&gt; passed to the &lt;code&gt;connection&lt;/code&gt; method should correspond to one of the connections listed in your &lt;code&gt;config/database.php&lt;/code&gt; configuration file:</source>
          <target state="translated">当使用多个连接时，您可以通过 &lt;code&gt;DB&lt;/code&gt; Facade 上的 &lt;code&gt;connection&lt;/code&gt; 方法访问每个连接。传递给 &lt;code&gt;connection&lt;/code&gt; 方法的 &lt;code&gt;name&lt;/code&gt; 应对应于 &lt;code&gt;config/database.php&lt;/code&gt; 配置文件中列出的连接之一：</target>
        </trans-unit>
        <trans-unit id="4fce4aab719e44f7672a30acf3d3e6e45be4face" translate="yes" xml:space="preserve">
          <source>When using rate limiting, the number of attempts your job will need to run successfully can be hard to determine. Therefore, it is useful to combine rate limiting with &lt;a href=&quot;#time-based-attempts&quot;&gt;time based attempts&lt;/a&gt;.</source>
          <target state="translated">使用速率限制时，很难确定您的作业需要成功运行的尝试次数。因此，将速率限制与&lt;a href=&quot;#time-based-attempts&quot;&gt;基于时间的尝试&lt;/a&gt;相结合是有用的。</target>
        </trans-unit>
        <trans-unit id="005905e899a962b119ad1285316c4dc3346d85a2" translate="yes" xml:space="preserve">
          <source>When using route parameters in redirect routes, the following parameters are reserved by Laravel and cannot be used: &lt;code&gt;destination&lt;/code&gt; and &lt;code&gt;status&lt;/code&gt;.</source>
          <target state="translated">在重定向路由中使用路由参数时，以下参数由Laravel保留，无法使用： &lt;code&gt;destination&lt;/code&gt; 和 &lt;code&gt;status&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="32cede9dc479ae7e5cda81cd3178a4614c5b228b" translate="yes" xml:space="preserve">
          <source>When using route parameters in view routes, the following parameters are reserved by Laravel and cannot be used: &lt;code&gt;view&lt;/code&gt;, &lt;code&gt;data&lt;/code&gt;, &lt;code&gt;status&lt;/code&gt;, and &lt;code&gt;headers&lt;/code&gt;.</source>
          <target state="translated">在视图路由中使用路由参数时，以下参数由Laravel保留，无法使用： &lt;code&gt;view&lt;/code&gt; ， &lt;code&gt;data&lt;/code&gt; ， &lt;code&gt;status&lt;/code&gt; 和 &lt;code&gt;headers&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3969e297196b80f1cb1c114ea0d139fccc6eb70c" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;AuthenticateSession&lt;/code&gt; middleware in combination with a custom route name for the &lt;code&gt;login&lt;/code&gt; route, you must override the &lt;code&gt;unauthenticated&lt;/code&gt; method on your application's exception handler to properly redirect users to your login page.</source>
          <target state="translated">当结合使用 &lt;code&gt;AuthenticateSession&lt;/code&gt; 中间件和自定义路由名作为 &lt;code&gt;login&lt;/code&gt; 路由时，您必须覆盖应用程序的异常处理程序上 &lt;code&gt;unauthenticated&lt;/code&gt; 身份验证的方法，以正确地将用户重定向到您的登录页面。</target>
        </trans-unit>
        <trans-unit id="224c22a60896a71e6b2aa67bf0bdccbfaacc5675" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;auto&lt;/code&gt; strategy, you may define the &lt;code&gt;minProcesses&lt;/code&gt; and &lt;code&gt;maxProcesses&lt;/code&gt; configuration options to control the minimum and maximum number of processes Horizon should scale up and down to:</source>
          <target state="translated">使用 &lt;code&gt;auto&lt;/code&gt; 策略时，您可以定义 &lt;code&gt;minProcesses&lt;/code&gt; 和 &lt;code&gt;maxProcesses&lt;/code&gt; 配置选项，以控制Horizo​​n应按比例放大和缩小至以下的最小和最大进程数：</target>
        </trans-unit>
        <trans-unit id="060017671d28b92f1de8c33e481a36133f145e7d" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;database&lt;/code&gt; cache driver, you will need to setup a table to contain the cache items. You'll find an example &lt;code&gt;Schema&lt;/code&gt; declaration for the table below:</source>
          <target state="translated">使用 &lt;code&gt;database&lt;/code&gt; 缓存驱动程序时，您将需要设置一个表以包含缓存项。您会在下表中找到示例 &lt;code&gt;Schema&lt;/code&gt; 声明：</target>
        </trans-unit>
        <trans-unit id="43bd8864c82e9ccad39519877b117f943f9f9c7c" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;database&lt;/code&gt; cache driver, you will need to setup a table to contain the cache locks. You'll find an example &lt;code&gt;Schema&lt;/code&gt; declaration for the table below:</source>
          <target state="translated">使用 &lt;code&gt;database&lt;/code&gt; 高速缓存驱动程序时，您将需要设置一个表以包含高速缓存锁。您会在下表中找到示例 &lt;code&gt;Schema&lt;/code&gt; 声明：</target>
        </trans-unit>
        <trans-unit id="4c1369a5d7b887edd8c0089a9246dd4e1584078b" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;database&lt;/code&gt; session driver, you will need to create a table to contain the session items. Below is an example &lt;code&gt;Schema&lt;/code&gt; declaration for the table:</source>
          <target state="translated">使用 &lt;code&gt;database&lt;/code&gt; 会话驱动程序时，您将需要创建一个包含会话项的表。下面是该表的示例 &lt;code&gt;Schema&lt;/code&gt; 声明：</target>
        </trans-unit>
        <trans-unit id="db432e3db28bc364782a402cb132e6e05220834b" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;date&lt;/code&gt; or &lt;code&gt;datetime&lt;/code&gt; cast type, you may specify the date's format. This format will be used when the &lt;a href=&quot;eloquent-serialization&quot;&gt;model is serialized to an array or JSON&lt;/a&gt;:</source>
          <target state="translated">使用 &lt;code&gt;date&lt;/code&gt; 或 &lt;code&gt;datetime&lt;/code&gt; 时间转换类型时，可以指定日期的格式。当&lt;a href=&quot;eloquent-serialization&quot;&gt;模型序列化为数组或JSON&lt;/a&gt;时将使用此格式：</target>
        </trans-unit>
        <trans-unit id="958c5b1380f26ac69564b18768c71396326d34a3" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;local&lt;/code&gt; driver, all file operations are relative to the &lt;code&gt;root&lt;/code&gt; directory defined in your &lt;code&gt;filesystems&lt;/code&gt; configuration file. By default, this value is set to the &lt;code&gt;storage/app&lt;/code&gt; directory. Therefore, the following method would store a file in &lt;code&gt;storage/app/file.txt&lt;/code&gt;:</source>
          <target state="translated">使用 &lt;code&gt;local&lt;/code&gt; 驱动程序时，所有文件操作都相对于 &lt;code&gt;filesystems&lt;/code&gt; 配置文件中定义的 &lt;code&gt;root&lt;/code&gt; 目录。默认情况下，此值设置为 &lt;code&gt;storage/app&lt;/code&gt; 目录。因此，以下方法会将文件 &lt;code&gt;storage/app/file.txt&lt;/code&gt; 在storage / app / file.txt中：</target>
        </trans-unit>
        <trans-unit id="975207209fb503f35b85c7445edb8e37482b448e" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;local&lt;/code&gt; driver, all file operations are relative to the &lt;code&gt;root&lt;/code&gt; directory defined in your configuration file. By default, this value is set to the &lt;code&gt;storage/app&lt;/code&gt; directory. Therefore, the following method would store a file in &lt;code&gt;storage/app/file.txt&lt;/code&gt;:</source>
          <target state="translated">使用 &lt;code&gt;local&lt;/code&gt; 驱动程序时，所有文件操作都相对于配置文件中定义的 &lt;code&gt;root&lt;/code&gt; 目录。默认情况下，此值设置为 &lt;code&gt;storage/app&lt;/code&gt; 目录。因此，以下方法会将文件 &lt;code&gt;storage/app/file.txt&lt;/code&gt; 在storage / app / file.txt中：</target>
        </trans-unit>
        <trans-unit id="f40a031cef6f7515a2c4e7f970d1e576db93d0fb" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;local&lt;/code&gt; driver, all files that should be publicly accessible should be placed in the &lt;code&gt;storage/app/public&lt;/code&gt; directory. Furthermore, you should &lt;a href=&quot;#the-public-disk&quot;&gt;create a symbolic link&lt;/a&gt; at &lt;code&gt;public/storage&lt;/code&gt; which points to the &lt;code&gt;storage/app/public&lt;/code&gt; directory.</source>
          <target state="translated">使用 &lt;code&gt;local&lt;/code&gt; 驱动程序时，应将所有可公共访问的文件放置在 &lt;code&gt;storage/app/public&lt;/code&gt; 目录中。此外，您应该在 &lt;code&gt;public/storage&lt;/code&gt; 处&lt;a href=&quot;#the-public-disk&quot;&gt;创建一个符号链接&lt;/a&gt;，该链接指向 &lt;code&gt;storage/app/public&lt;/code&gt; 目录。</target>
        </trans-unit>
        <trans-unit id="60121d5a9fed079847dabfa1e29e2954d3f33bad" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;local&lt;/code&gt; driver, the return value of &lt;code&gt;url&lt;/code&gt; is not URL encoded. For this reason, we recommend always storing your files using names that will create valid URLs.</source>
          <target state="translated">使用 &lt;code&gt;local&lt;/code&gt; 驱动程序时， &lt;code&gt;url&lt;/code&gt; 的返回值不是URL编码的。因此，我们建议始终使用会创建有效URL的名称来存储文件。</target>
        </trans-unit>
        <trans-unit id="5d5149325692771bf45eac67e1516dc3046e2ce5" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;monolog&lt;/code&gt; driver, the &lt;code&gt;handler&lt;/code&gt; configuration option is used to specify which handler will be instantiated. Optionally, any constructor parameters the handler needs may be specified using the &lt;code&gt;handler_with&lt;/code&gt; configuration option:</source>
          <target state="translated">使用 &lt;code&gt;monolog&lt;/code&gt; 驱动程序时， &lt;code&gt;handler&lt;/code&gt; 配置选项用于指定将实例化哪个处理程序。（可选）可以使用 &lt;code&gt;handler_with&lt;/code&gt; 配置选项指定处理程序需要的任何构造函数参数：</target>
        </trans-unit>
        <trans-unit id="21b6853c585da3785b96b5648001bc25ba342eb1" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;monolog&lt;/code&gt; driver, the &lt;code&gt;handler&lt;/code&gt; configuration option is used to specify which handler will be instantiated. Optionally, any constructor parameters the handler needs may be specified using the &lt;code&gt;with&lt;/code&gt; configuration option:</source>
          <target state="translated">使用 &lt;code&gt;monolog&lt;/code&gt; 驱动程序时， &lt;code&gt;handler&lt;/code&gt; 配置选项用于指定将实例化哪个处理程序。（可选）可以使用 &lt;code&gt;with&lt;/code&gt; 配置选项指定处理程序需要的任何构造函数参数：</target>
        </trans-unit>
        <trans-unit id="5baeb3a4ec8d37aa04f4500b2a756a17f5b4d5b8" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;monolog&lt;/code&gt; driver, the Monolog &lt;code&gt;LineFormatter&lt;/code&gt; will be used as the default formatter. However, you may customize the type of formatter passed to the handler using the &lt;code&gt;formatter&lt;/code&gt; and &lt;code&gt;formatter_with&lt;/code&gt; configuration options:</source>
          <target state="translated">使用 &lt;code&gt;monolog&lt;/code&gt; 驱动程序时， &lt;code&gt;LineFormatter&lt;/code&gt; 将用作默认格式化程序。但是，您可以使用 &lt;code&gt;formatter&lt;/code&gt; 和 &lt;code&gt;formatter_with&lt;/code&gt; 配置选项来自定义传递给处理程序的格式化程序的类型：</target>
        </trans-unit>
        <trans-unit id="088bca3fd2a3772ad5312bcbed3957b8f21e70f5" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;with&lt;/code&gt; method, be careful not to pass any reserved keywords such as &lt;code&gt;state&lt;/code&gt; or &lt;code&gt;response_type&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;with&lt;/code&gt; 方法时，请注意不要传递任何保留的关键字，例如 &lt;code&gt;state&lt;/code&gt; 或 &lt;code&gt;response_type&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="035bf286ac2fafb2cf3e7acbebec61e5f5df3614" translate="yes" xml:space="preserve">
          <source>When using the Algolia driver, you should configure your Algolia &lt;code&gt;id&lt;/code&gt; and &lt;code&gt;secret&lt;/code&gt; credentials in your &lt;code&gt;config/scout.php&lt;/code&gt; configuration file. Once your credentials have been configured, you will also need to install the Algolia PHP SDK via the Composer package manager:</source>
          <target state="translated">使用Algolia驱动程序时，应在 &lt;code&gt;config/scout.php&lt;/code&gt; 配置文件中配置Algolia &lt;code&gt;id&lt;/code&gt; 和 &lt;code&gt;secret&lt;/code&gt; 凭证。配置完凭据后，您还需要通过Composer软件包管理器安装Algolia PHP SDK：</target>
        </trans-unit>
        <trans-unit id="2e151ae4c86e4a30e0b76b511e1aab919bbaff7b" translate="yes" xml:space="preserve">
          <source>When using the Redis queue, you may use the &lt;code&gt;block_for&lt;/code&gt; configuration option to specify how long the driver should wait for a job to become available before iterating through the worker loop and re-polling the Redis database.</source>
          <target state="translated">使用Redis队列时，可以使用 &lt;code&gt;block_for&lt;/code&gt; 配置选项来指定驱动程序在遍历worker循环并重新轮询Redis数据库之前应等待作业可用的时间。</target>
        </trans-unit>
        <trans-unit id="32578e7398163114d07960009102a9a691496c09" translate="yes" xml:space="preserve">
          <source>When using the password grant or client credentials grant, you may wish to authorize the token for all of the scopes supported by your application. You can do this by requesting the &lt;code&gt;*&lt;/code&gt; scope. If you request the &lt;code&gt;*&lt;/code&gt; scope, the &lt;code&gt;can&lt;/code&gt; method on the token instance will always return &lt;code&gt;true&lt;/code&gt;. This scope may only be assigned to a token that is issued using the &lt;code&gt;password&lt;/code&gt; or &lt;code&gt;client_credentials&lt;/code&gt; grant:</source>
          <target state="translated">使用密码授予或客户端凭据授予时，您可能希望为应用程序支持的所有范围授权令牌。您可以通过请求 &lt;code&gt;*&lt;/code&gt; 范围来做到这一点。如果请求 &lt;code&gt;*&lt;/code&gt; 范围，则令牌实例上的 &lt;code&gt;can&lt;/code&gt; 方法将始终返回 &lt;code&gt;true&lt;/code&gt; 。该作用域只能分配给使用 &lt;code&gt;password&lt;/code&gt; 或 &lt;code&gt;client_credentials&lt;/code&gt; 授予颁发的令牌：</target>
        </trans-unit>
        <trans-unit id="e042e11be5e4262a14b7850799d15c3fe08b23bf" translate="yes" xml:space="preserve">
          <source>When using the password grant, you may wish to authorize the token for all of the scopes supported by your application. You can do this by requesting the &lt;code&gt;*&lt;/code&gt; scope. If you request the &lt;code&gt;*&lt;/code&gt; scope, the &lt;code&gt;can&lt;/code&gt; method on the token instance will always return &lt;code&gt;true&lt;/code&gt;. This scope may only be assigned to a token that is issued using the &lt;code&gt;password&lt;/code&gt; grant:</source>
          <target state="translated">使用密码授予时，您可能希望为应用程序支持的所有范围授权令牌。您可以通过请求 &lt;code&gt;*&lt;/code&gt; 范围来实现。如果请求 &lt;code&gt;*&lt;/code&gt; 范围，则令牌实例上的 &lt;code&gt;can&lt;/code&gt; 方法将始终返回 &lt;code&gt;true&lt;/code&gt; 。该作用域只能分配给使用 &lt;code&gt;password&lt;/code&gt; 授予颁发的令牌：</target>
        </trans-unit>
        <trans-unit id="4122dd8f1dd7a56b5b82fbafce61e0d633d93c0c" translate="yes" xml:space="preserve">
          <source>When using the prices API, Paddle only allows to apply coupons to one-time purchase products and not to subscription plans.</source>
          <target state="translated">在使用价格API时,Paddle只允许将优惠券应用于一次性购买产品,而不允许应用于订阅计划。</target>
        </trans-unit>
        <trans-unit id="0c525bae0b6eb5b0556a3b3e66a413496ee3683a" translate="yes" xml:space="preserve">
          <source>When using the scheduler, you only need to add the following Cron entry to your server. If you do not know how to add Cron entries to your server, consider using a service such as &lt;a href=&quot;https://forge.laravel.com&quot;&gt;Laravel Forge&lt;/a&gt; which can manage the Cron entries for you:</source>
          <target state="translated">使用调度程序时，只需要将以下Cron条目添加到服务器。如果您不知道如何向服务器添加Cron条目，请考虑使用诸如&lt;a href=&quot;https://forge.laravel.com&quot;&gt;Laravel Forge之&lt;/a&gt;类的服务，该服务可以为您管理Cron条目：</target>
        </trans-unit>
        <trans-unit id="4e3391abda9e2f429dffb416ac7ca38cde1fb97f" translate="yes" xml:space="preserve">
          <source>When using this feature, you should always include the &lt;code&gt;id&lt;/code&gt; column and any relevant foreign key columns in the list of columns you wish to retrieve.</source>
          <target state="translated">使用此功能时，应始终在要检索的列列表中包括 &lt;code&gt;id&lt;/code&gt; 列和所有相关的外键列。</target>
        </trans-unit>
        <trans-unit id="50ce1962e60dfe805da26e6644a89cff5823d7e4" translate="yes" xml:space="preserve">
          <source>When using this feature, you should always include the &lt;code&gt;id&lt;/code&gt; column in the list of columns you wish to retrieve.</source>
          <target state="translated">使用此功能时，应始终在要检索的列列表中包括 &lt;code&gt;id&lt;/code&gt; 列。</target>
        </trans-unit>
        <trans-unit id="9f6c827a9584805185a2ecb1010e308e855cdeeb" translate="yes" xml:space="preserve">
          <source>When using this method of authentication, the default Laravel JavaScript scaffolding instructs Axios to always send the &lt;code&gt;X-CSRF-TOKEN&lt;/code&gt; and &lt;code&gt;X-Requested-With&lt;/code&gt; headers. However, you should be sure to include your CSRF token in a &lt;a href=&quot;csrf#csrf-x-csrf-token&quot;&gt;HTML meta tag&lt;/a&gt;:</source>
          <target state="translated">使用这种身份验证方法时，默认的Laravel JavaScript支架会指示Axios始终发送 &lt;code&gt;X-CSRF-TOKEN&lt;/code&gt; 和 &lt;code&gt;X-Requested-With&lt;/code&gt; 标头。但是，您应该确保在&lt;a href=&quot;csrf#csrf-x-csrf-token&quot;&gt;HTML meta标签中&lt;/a&gt;包含CSRF令牌：</target>
        </trans-unit>
        <trans-unit id="6d0f67e1965944881dc9d4536792d13ebcfbbda1" translate="yes" xml:space="preserve">
          <source>When using this method of authentication, you will need to ensure a valid CSRF token header is included in your requests. The default Laravel JavaScript scaffolding includes an Axios instance, which will automatically use the encrypted &lt;code&gt;XSRF-TOKEN&lt;/code&gt; cookie value to send a &lt;code&gt;X-XSRF-TOKEN&lt;/code&gt; header on same-origin requests.</source>
          <target state="translated">使用这种身份验证方法时，您需要确保请求中包含有效的CSRF令牌标头。默认的Laravel JavaScript支架包含一个Axios实例，该实例将自动使用加密的 &lt;code&gt;XSRF-TOKEN&lt;/code&gt; cookie值在同源请求中发送 &lt;code&gt;X-XSRF-TOKEN&lt;/code&gt; 标头。</target>
        </trans-unit>
        <trans-unit id="03710a21777c297cc8f9b1dd25cd98ee4a8a60f2" translate="yes" xml:space="preserve">
          <source>When using timestamps on pivot tables, the table is required to have both &lt;code&gt;created_at&lt;/code&gt; and &lt;code&gt;updated_at&lt;/code&gt; timestamp columns.</source>
          <target state="translated">在数据透视表上使用时间戳时，该表必须同时具有 &lt;code&gt;created_at&lt;/code&gt; 和 &lt;code&gt;updated_at&lt;/code&gt; 时间戳列。</target>
        </trans-unit>
        <trans-unit id="1884f13aa2df9bfb73e4a9d59650f01cb94587dd" translate="yes" xml:space="preserve">
          <source>When working with a many-to-many relationship, the &lt;code&gt;save&lt;/code&gt; method accepts an array of additional intermediate table attributes as its second argument:</source>
          <target state="translated">当使用多对多关系时， &lt;code&gt;save&lt;/code&gt; 方法将一个附加的中间表属性数组作为其第二个参数：</target>
        </trans-unit>
        <trans-unit id="e8648315aa7bbb121adb19a0757243a88b48a69e" translate="yes" xml:space="preserve">
          <source>When working with arrays, the field under validation must not have any duplicate values.</source>
          <target state="translated">当使用数组时,被验证的字段不能有任何重复的值。</target>
        </trans-unit>
        <trans-unit id="6799025f3bf5fb8864a4b2cd3e82c390e9886b68" translate="yes" xml:space="preserve">
          <source>When working with forms that contain array inputs, use &quot;dot&quot; notation to access the arrays:</source>
          <target state="translated">当处理包含数组输入的表单时,使用 &quot;点 &quot;符号来访问数组。</target>
        </trans-unit>
        <trans-unit id="5a85f5a0dc2be400e445988ef760d66c17d0a778" translate="yes" xml:space="preserve">
          <source>When writing Blade templates, you may wish to display a portion of the page only if the user is authorized to perform a given action. For example, you may wish to show an update form for a blog post only if the user can actually update the post. In this situation, you may use the &lt;code&gt;@can&lt;/code&gt; and &lt;code&gt;@cannot&lt;/code&gt; family of directives:</source>
          <target state="translated">编写Blade模板时，您可能希望仅在授权用户执行给定操作的情况下显示页面的一部分。例如，您可能希望仅在用户可以实际更新帖子时显示博客帖子的更新表单。在这种情况下，您可以使用 &lt;code&gt;@can&lt;/code&gt; 和 &lt;code&gt;@cannot&lt;/code&gt; 系列指令：</target>
        </trans-unit>
        <trans-unit id="0aa36c20cce0d0c6487d4249a4bc2ef3da13f812" translate="yes" xml:space="preserve">
          <source>When writing a Laravel application, it generally does not matter if you use contracts or facades since both provide essentially equal levels of testability. However, when writing packages, your package will not typically have access to all of Laravel's testing helpers. If you would like to be able to write your package tests as if they existed inside a typical Laravel application, you may use the &lt;a href=&quot;https://github.com/orchestral/testbench&quot;&gt;Orchestral Testbench&lt;/a&gt; package.</source>
          <target state="translated">在编写Laravel应用程序时，通常使用合约或Facade都没关系，因为两者都提供了基本相同的可测试性。但是，在编写软件包时，您的软件包通常将无法访问所有Laravel的测试助手。如果您希望能够像在典型的Laravel应用程序中一样编写程序包测试，则可以使用&lt;a href=&quot;https://github.com/orchestral/testbench&quot;&gt;Orchestral Testbench&lt;/a&gt;程序包。</target>
        </trans-unit>
        <trans-unit id="792e3add795d39f86830b180ab90b6a09b743fa3" translate="yes" xml:space="preserve">
          <source>When writing a command which expects a confirmation in the form of a &quot;yes&quot; or &quot;no&quot; answer, you may utilize the &lt;code&gt;expectsConfirmation&lt;/code&gt; method:</source>
          <target state="translated">当以&amp;ldquo;是&amp;rdquo;或&amp;ldquo;否&amp;rdquo;的形式编写期望确认的命令时，可以使用 &lt;code&gt;expectsConfirmation&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="4976d85ffddcbf3295e29d754443db351d9aefe0" translate="yes" xml:space="preserve">
          <source>When writing components for your own application, components are automatically discovered within the &lt;code&gt;app/View/Components&lt;/code&gt; directory and &lt;code&gt;resources/views/components&lt;/code&gt; directory.</source>
          <target state="translated">在为自己的应用程序编写组件时，会在 &lt;code&gt;app/View/Components&lt;/code&gt; 目录和 &lt;code&gt;resources/views/components&lt;/code&gt; 目录中自动发现组件。</target>
        </trans-unit>
        <trans-unit id="3c13554cd7d9b753d166649e0c4ffb885bcbdeed" translate="yes" xml:space="preserve">
          <source>When writing console commands, it is common to gather input from the user through arguments or options. Laravel makes it very convenient to define the input you expect from the user using the &lt;code&gt;signature&lt;/code&gt; property on your commands. The &lt;code&gt;signature&lt;/code&gt; property allows you to define the name, arguments, and options for the command in a single, expressive, route-like syntax.</source>
          <target state="translated">编写控制台命令时，通常通过参数或选项从用户那里收集输入。Laravel使使用命令上的 &lt;code&gt;signature&lt;/code&gt; 属性定义用户期望的输入变得非常方便。通过 &lt;code&gt;signature&lt;/code&gt; 属性，您可以使用一种单一的，类似路由的语法来定义命令的名称，参数和选项。</target>
        </trans-unit>
        <trans-unit id="c8e67771d3f128dd48744241bc0d69fab76ffe29" translate="yes" xml:space="preserve">
          <source>When you call the &lt;code&gt;redirect&lt;/code&gt; helper with no parameters, an instance of &lt;code&gt;Illuminate\Routing\Redirector&lt;/code&gt; is returned, allowing you to call any method on the &lt;code&gt;Redirector&lt;/code&gt; instance. For example, to generate a &lt;code&gt;RedirectResponse&lt;/code&gt; to a named route, you may use the &lt;code&gt;route&lt;/code&gt; method:</source>
          <target state="translated">当您不带任何参数调用 &lt;code&gt;redirect&lt;/code&gt; 帮助器时， &lt;code&gt;Illuminate\Routing\Redirector&lt;/code&gt; 返回Illuminate \ Routing \ Redirector实例，从而允许您在 &lt;code&gt;Redirector&lt;/code&gt; 实例上调用任何方法。例如，要生成对命名路由的 &lt;code&gt;RedirectResponse&lt;/code&gt; ，可以使用 &lt;code&gt;route&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="4b37be7c7b323b032098f32d1e54adbd8d282290" translate="yes" xml:space="preserve">
          <source>When you execute this command, Laravel will write a &quot;schema&quot; file to your &lt;code&gt;database/schema&lt;/code&gt; directory. Now, when you attempt to migrate your database and no other migrations have been executed, Laravel will execute the schema file's SQL first. After executing the schema file's commands, Laravel will execute any remaining migrations that were not part of the schema dump.</source>
          <target state="translated">当您执行此命令时，Laravel将向您的 &lt;code&gt;database/schema&lt;/code&gt; 目录中写入一个&amp;ldquo;模式&amp;rdquo;文件。现在，当您尝试迁移数据库且未执行任何其他迁移时，Laravel将首先执行模式文件的SQL。执行模式文件的命令后，Laravel将执行任何不属于模式转储的其余迁移。</target>
        </trans-unit>
        <trans-unit id="c787b4f49b323409347db8769be4f9b1ab2a8d6b" translate="yes" xml:space="preserve">
          <source>When you have multiple plans set on a subscription the &lt;code&gt;stripe_plan&lt;/code&gt; and &lt;code&gt;quantity&lt;/code&gt; attributes on the &lt;code&gt;Subscription&lt;/code&gt; model will be &lt;code&gt;null&lt;/code&gt;. To access the individual plans, you should use the &lt;code&gt;items&lt;/code&gt; relationship available on the &lt;code&gt;Subscription&lt;/code&gt; model.</source>
          <target state="translated">当您在订阅上设置了多个计划时， &lt;code&gt;Subscription&lt;/code&gt; 模型上的 &lt;code&gt;stripe_plan&lt;/code&gt; 和 &lt;code&gt;quantity&lt;/code&gt; 属性将为 &lt;code&gt;null&lt;/code&gt; 。要访问单个计划，您应该使用 &lt;code&gt;Subscription&lt;/code&gt; 模型上可用的 &lt;code&gt;items&lt;/code&gt; 关系。</target>
        </trans-unit>
        <trans-unit id="ed75b1e1ffe2c1b7a2f3ac6fa85f1ad5bef06fdb" translate="yes" xml:space="preserve">
          <source>When you initialize a Laravel Echo instance, a socket ID is assigned to the connection. If you are using &lt;a href=&quot;https://vuejs.org&quot;&gt;Vue&lt;/a&gt; and &lt;a href=&quot;https://github.com/mzabriskie/axios&quot;&gt;Axios&lt;/a&gt;, the socket ID will automatically be attached to every outgoing request as a &lt;code&gt;X-Socket-ID&lt;/code&gt; header. Then, when you call the &lt;code&gt;toOthers&lt;/code&gt; method, Laravel will extract the socket ID from the header and instruct the broadcaster to not broadcast to any connections with that socket ID.</source>
          <target state="translated">初始化Laravel Echo实例时，会将套接字ID分配给该连接。如果您使用的是&lt;a href=&quot;https://vuejs.org&quot;&gt;Vue&lt;/a&gt;和&lt;a href=&quot;https://github.com/mzabriskie/axios&quot;&gt;Axios&lt;/a&gt;，套接字ID将作为 &lt;code&gt;X-Socket-ID&lt;/code&gt; 标头自动附加到每个传出请求。然后，当您调用 &lt;code&gt;toOthers&lt;/code&gt; 方法时，Laravel将从标头中提取套接字ID，并指示广播公司不要向使用该套接字ID的任何连接广播。</target>
        </trans-unit>
        <trans-unit id="6d5131b8b32b3766211e7b4ed7c56dbf81acec99" translate="yes" xml:space="preserve">
          <source>When you register a custom exception reporting callback using the &lt;code&gt;reportable&lt;/code&gt; method, Laravel will still log the exception using the default logging configuration for the application. If you wish to stop the propagation of the exception to the default logging stack, you may use the &lt;code&gt;stop&lt;/code&gt; method when defining your reporting callback or return &lt;code&gt;false&lt;/code&gt; from the callback:</source>
          <target state="translated">当您使用 &lt;code&gt;reportable&lt;/code&gt; 方法注册自定义异常报告回调时，Laravel仍将使用应用程序的默认日志记录配置来记录异常。如果希望停止将异常传播到默认日志记录堆栈，则可以在定义报告回调时使用 &lt;code&gt;stop&lt;/code&gt; 方法，或从回调中返回 &lt;code&gt;false&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="e6eaf2c8fc8dcff2cb8a2a58bd5e1f2dddf66b75" translate="yes" xml:space="preserve">
          <source>When you retrieve an item from the session, you may also pass a default value as the second argument to the &lt;code&gt;get&lt;/code&gt; method. This default value will be returned if the specified key does not exist in the session. If you pass a &lt;code&gt;Closure&lt;/code&gt; as the default value to the &lt;code&gt;get&lt;/code&gt; method and the requested key does not exist, the &lt;code&gt;Closure&lt;/code&gt; will be executed and its result returned:</source>
          <target state="translated">从会话中检索项目时，还可以将默认值作为第二个参数传递给 &lt;code&gt;get&lt;/code&gt; 方法。如果会话中不存在指定的密钥，则将返回此默认值。如果将 &lt;code&gt;Closure&lt;/code&gt; 作为默认值传递给 &lt;code&gt;get&lt;/code&gt; 方法，并且请求的键不存在，则将执行 &lt;code&gt;Closure&lt;/code&gt; 并返回其结果：</target>
        </trans-unit>
        <trans-unit id="0c4a95aaa0dd5bd045f4e5de5a25fb047935e714" translate="yes" xml:space="preserve">
          <source>When you start a new Laravel project, error and exception handling is already configured for you. The &lt;code&gt;App\Exceptions\Handler&lt;/code&gt; class is where all exceptions triggered by your application are logged and then rendered back to the user. We'll dive deeper into this class throughout this documentation.</source>
          <target state="translated">当您开始一个新的Laravel项目时，已经为您配置了错误和异常处理。该 &lt;code&gt;App\Exceptions\Handler&lt;/code&gt; 类就是由应用程序触发的所有异常记录，然后呈现给用户。在本文档中，我们将更深入地研究此类。</target>
        </trans-unit>
        <trans-unit id="8da04af1c2a8772ddf7eb3cae2e9ab1b145622d2" translate="yes" xml:space="preserve">
          <source>When you use the &lt;code&gt;loadViewsFrom&lt;/code&gt; method, Laravel actually registers two locations for your views: the application's &lt;code&gt;resources/views/vendor&lt;/code&gt; directory and the directory you specify. So, using the &lt;code&gt;courier&lt;/code&gt; example, Laravel will first check if a custom version of the view has been provided by the developer in &lt;code&gt;resources/views/vendor/courier&lt;/code&gt;. Then, if the view has not been customized, Laravel will search the package view directory you specified in your call to &lt;code&gt;loadViewsFrom&lt;/code&gt;. This makes it easy for package users to customize / override your package's views.</source>
          <target state="translated">当您使用 &lt;code&gt;loadViewsFrom&lt;/code&gt; 方法时，Laravel实际上为视图注册了两个位置：应用程序的 &lt;code&gt;resources/views/vendor&lt;/code&gt; 目录和您指定的目录。因此，使用 &lt;code&gt;courier&lt;/code&gt; 示例，Laravel将首先检查开发人员是否在 &lt;code&gt;resources/views/vendor/courier&lt;/code&gt; 提供了视图的自定义版本。然后，如果尚未自定义视图，Laravel将搜索您在对 &lt;code&gt;loadViewsFrom&lt;/code&gt; 的调用中指定的包视图目录。这使包用户可以轻松自定义/覆盖包的视图。</target>
        </trans-unit>
        <trans-unit id="9cc13b4803a1ec87f6cae3d6d25e63ac6354875d" translate="yes" xml:space="preserve">
          <source>When you're ready to deploy your Laravel application to production, there are some important things you can do to make sure your application is running as efficiently as possible. In this document, we'll cover some great starting points for making sure your Laravel application is deployed properly.</source>
          <target state="translated">当你准备好将Laravel应用部署到生产中时,你可以做一些重要的事情来确保你的应用尽可能的高效运行.在这篇文档中,我们将介绍一些确保Laravel应用程序正确部署的出发点.</target>
        </trans-unit>
        <trans-unit id="47fbbfb19e44d5d9e3f714f99352c688a15ae7eb" translate="yes" xml:space="preserve">
          <source>When your application is in maintenance mode, a custom view will be displayed for all requests into your application. This makes it easy to &quot;disable&quot; your application while it is updating or when you are performing maintenance. A maintenance mode check is included in the default middleware stack for your application. If the application is in maintenance mode, a &lt;code&gt;MaintenanceModeException&lt;/code&gt; will be thrown with a status code of 503.</source>
          <target state="translated">当您的应用程序处于维护模式时，将向您的应用程序显示所有请求的自定义视图。这使得在更新或执行维护时轻松&amp;ldquo;禁用&amp;rdquo;您的应用程序。您的应用程序的默认中间件堆栈中包括维护模式检查。如果应用程序处于维护模式，则将抛出 &lt;code&gt;MaintenanceModeException&lt;/code&gt; ，状态码为503。</target>
        </trans-unit>
        <trans-unit id="2a95975a7ea0515482d09a4283e205f8bdf7fa04" translate="yes" xml:space="preserve">
          <source>When your component is rendered, you may display the contents of your component's public variables by echoing the variables by name:</source>
          <target state="translated">当你的组件被渲染时,你可以通过呼应变量的名称来显示组件的公共变量的内容。</target>
        </trans-unit>
        <trans-unit id="7c8105c4e435a6b685fd63cb1690cf638601272d" translate="yes" xml:space="preserve">
          <source>When your test requires migrations, like the authentication example above, you should never use the &lt;code&gt;RefreshDatabase&lt;/code&gt; trait. The &lt;code&gt;RefreshDatabase&lt;/code&gt; trait leverages database transactions which will not be applicable across HTTP requests. Instead, use the &lt;code&gt;DatabaseMigrations&lt;/code&gt; trait:</source>
          <target state="translated">当您的测试需要迁移时，例如上面的身份验证示例，则永远不要使用 &lt;code&gt;RefreshDatabase&lt;/code&gt; 特征。该 &lt;code&gt;RefreshDatabase&lt;/code&gt; 特质杠杆数据库事务，这将不通过HTTP请求适用。而是使用 &lt;code&gt;DatabaseMigrations&lt;/code&gt; 特性：</target>
        </trans-unit>
        <trans-unit id="8927b41637f70b1b39424c0db6bb52ea5a4ee207" translate="yes" xml:space="preserve">
          <source>Where Clauses</source>
          <target state="translated">凡条款</target>
        </trans-unit>
        <trans-unit id="45a28d7d2d0dd2cb9b7907b4877467fce02c6307" translate="yes" xml:space="preserve">
          <source>Where Exists Clauses</source>
          <target state="translated">存在条款的地方</target>
        </trans-unit>
        <trans-unit id="c6a57c97033ad3276ea8ba77176e146c7e9a261f" translate="yes" xml:space="preserve">
          <source>Where Is The Models Directory?</source>
          <target state="translated">模型目录在哪里?</target>
        </trans-unit>
        <trans-unit id="7d90aea7516067d74aa6f8aa3ea4345185144d10" translate="yes" xml:space="preserve">
          <source>Whether a middleware runs before or after a request depends on the middleware itself. For example, the following middleware would perform some task &lt;strong&gt;before&lt;/strong&gt; the request is handled by the application:</source>
          <target state="translated">中间件在请求之前还是之后运行取决于中间件本身。例如，以下中间件将在应用程序处理请求&lt;strong&gt;之前&lt;/strong&gt;执行某些任务：</target>
        </trans-unit>
        <trans-unit id="9f7a25630eb4179adc804fc453752c5d62da540d" translate="yes" xml:space="preserve">
          <source>Whether the content is short.</source>
          <target state="translated">内容是否简短。</target>
        </trans-unit>
        <trans-unit id="09e3af47fd3e79db546ede96c7b4d1b579dbfa72" translate="yes" xml:space="preserve">
          <source>Whether this is an even iteration through the loop.</source>
          <target state="translated">这是否是一个均匀的循环迭代。</target>
        </trans-unit>
        <trans-unit id="858cdbf32fe7a994509943c6b3ba4b27baba0cca" translate="yes" xml:space="preserve">
          <source>Whether this is an odd iteration through the loop.</source>
          <target state="translated">这是否是一个奇数迭代的循环。</target>
        </trans-unit>
        <trans-unit id="f0b83a248e4a6417c2c0d8dff3e585f6dabb687a" translate="yes" xml:space="preserve">
          <source>Whether this is the first iteration through the loop.</source>
          <target state="translated">这是否是循环中的第一次迭代。</target>
        </trans-unit>
        <trans-unit id="f70eb7c3912465a5e233f4177b665abf06b0a23f" translate="yes" xml:space="preserve">
          <source>Whether this is the last iteration through the loop.</source>
          <target state="translated">这是否是循环中的最后一次迭代。</target>
        </trans-unit>
        <trans-unit id="80db56d223d186d805865ba25df831f6e1804ab7" translate="yes" xml:space="preserve">
          <source>Whether to make the table temporary.</source>
          <target state="translated">是否让桌子临时。</target>
        </trans-unit>
        <trans-unit id="c2f093f639eff40a14afd0f1f43a1aed22b9eaff" translate="yes" xml:space="preserve">
          <source>Whether use write pdo for select.</source>
          <target state="translated">是否使用写pdo进行选择。</target>
        </trans-unit>
        <trans-unit id="66476ef8f19664adebfa07a61854b1ed85501074" translate="yes" xml:space="preserve">
          <source>Which Branch?</source>
          <target state="translated">哪个部门?</target>
        </trans-unit>
        <trans-unit id="17255d7a182033fd562457a5d56ad2f20ccb04ea" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;$fillable&lt;/code&gt; serves as a &quot;white list&quot; of attributes that should be mass assignable, you may also choose to use &lt;code&gt;$guarded&lt;/code&gt;. The &lt;code&gt;$guarded&lt;/code&gt; property should contain an array of attributes that you do not want to be mass assignable. All other attributes not in the array will be mass assignable. So, &lt;code&gt;$guarded&lt;/code&gt; functions like a &quot;black list&quot;. Of course, you should use either &lt;code&gt;$fillable&lt;/code&gt; or &lt;code&gt;$guarded&lt;/code&gt; - not both. In the example below, all attributes &lt;strong&gt;except for &lt;code&gt;price&lt;/code&gt;&lt;/strong&gt; will be mass assignable:</source>
          <target state="translated">虽然 &lt;code&gt;$fillable&lt;/code&gt; 充当应该批量分配的属性的&amp;ldquo;白名单&amp;rdquo;，但您也可以选择使用 &lt;code&gt;$guarded&lt;/code&gt; 。在 &lt;code&gt;$guarded&lt;/code&gt; 属性应包含的属性的数组，你不希望成为质量分配。不在数组中的所有其他属性将可批量分配。因此， &lt;code&gt;$guarded&lt;/code&gt; 函数就像一个&amp;ldquo;黑名单&amp;rdquo;。当然，您应该使用 &lt;code&gt;$fillable&lt;/code&gt; 或 &lt;code&gt;$guarded&lt;/code&gt; 不能同时使用。在以下示例中，&lt;strong&gt;除 &lt;code&gt;price&lt;/code&gt; &lt;/strong&gt;&lt;strong&gt;以外的&lt;/strong&gt;所有属性都可以批量分配：</target>
        </trans-unit>
        <trans-unit id="2aed4accf02e625fe1315b3f0ab6be75cbac0add" translate="yes" xml:space="preserve">
          <source>While Blade provides this feature, using it frequently may be a signal that you have too much logic embedded within your template.</source>
          <target state="translated">虽然Blade提供了这个功能,但频繁使用它可能是一个信号,表明您的模板中嵌入了太多的逻辑。</target>
        </trans-unit>
        <trans-unit id="3b94b7745d0960b8631e85fcbe3ace61ee839af3" translate="yes" xml:space="preserve">
          <source>While Laravel does not dictate which JavaScript or CSS pre-processors you use, it does provide a basic starting point using &lt;a href=&quot;https://getbootstrap.com/&quot;&gt;Bootstrap&lt;/a&gt; and &lt;a href=&quot;https://vuejs.org&quot;&gt;Vue&lt;/a&gt; that will be helpful for many applications. By default, Laravel uses &lt;a href=&quot;https://www.npmjs.org&quot;&gt;NPM&lt;/a&gt; to install both of these frontend packages.</source>
          <target state="translated">尽管Laravel并未规定您使用哪种JavaScript或CSS预处理器，但它确实提供了使用&lt;a href=&quot;https://getbootstrap.com/&quot;&gt;Bootstrap&lt;/a&gt;和&lt;a href=&quot;https://vuejs.org&quot;&gt;Vue&lt;/a&gt;的基本起点，这将对许多应用程序有所帮​​助。默认情况下，Laravel使用&lt;a href=&quot;https://www.npmjs.org&quot;&gt;NPM&lt;/a&gt;安装这两个前端软件包。</target>
        </trans-unit>
        <trans-unit id="ef2ab498fc6769cc7f430cc61ac7674e52d43b9c" translate="yes" xml:space="preserve">
          <source>While building your application, you may occasionally have actions that should require the user to confirm their password before the action is performed. Laravel includes built-in middleware to make this process a breeze. Implementing this feature will require you to define two routes: one route to display a view asking the user to confirm their password, and one route to confirm that the password is valid and redirect the user to their intended destination.</source>
          <target state="translated">在构建你的应用程序时,你可能偶尔会有一些动作需要用户在执行动作前确认密码.Laravel包含了内置的中间件,可以让这个过程变得轻而易举.实现这个功能需要你定义两条路线:一条路线是显示一个要求用户确认密码的视图,一条路线是确认密码有效并将用户重定向到他们的目的地.</target>
        </trans-unit>
        <trans-unit id="73cd8373457f7076bbd4e0b85064aa7782070f49" translate="yes" xml:space="preserve">
          <source>While handling an incoming request, you may access the authenticated user via the &lt;code&gt;Auth&lt;/code&gt; facade:</source>
          <target state="translated">在处理传入请求时，您可以通过 &lt;code&gt;Auth&lt;/code&gt; 外观访问经过身份验证的用户：</target>
        </trans-unit>
        <trans-unit id="f6a04181a51071225c942d3ac82feebdaa36baeb" translate="yes" xml:space="preserve">
          <source>While in maintenance mode, Laravel will display the maintenance mode view for all application URLs the user attempts to access. If you wish, you may instruct Laravel to redirect all requests to a specific URL. This may be accomplished using the &lt;code&gt;redirect&lt;/code&gt; option. For example, you may wish to redirect all requests to the &lt;code&gt;/&lt;/code&gt; URI:</source>
          <target state="translated">在维护模式下，Laravel将显示用户尝试访问的所有应用程序URL的维护模式视图。如果愿意，您可以指示Laravel将所有请求重定向到特定的URL。这可以使用 &lt;code&gt;redirect&lt;/code&gt; 选项来完成。例如，您可能希望将所有请求重定向到 &lt;code&gt;/&lt;/code&gt; URI：</target>
        </trans-unit>
        <trans-unit id="fb1f051cfb47dfffc69e9178d4ab4f98bc199a99" translate="yes" xml:space="preserve">
          <source>While in maintenance mode, you may use the &lt;code&gt;secret&lt;/code&gt; option to specify a maintenance mode bypass token:</source>
          <target state="translated">在维护模式下，您可以使用 &lt;code&gt;secret&lt;/code&gt; 选项指定维护模式旁路令牌：</target>
        </trans-unit>
        <trans-unit id="eef2f7a197f14052fc6560df4ffa3d071341260e" translate="yes" xml:space="preserve">
          <source>While most Eloquent collection methods return a new instance of an Eloquent collection, the &lt;code&gt;pluck&lt;/code&gt;, &lt;code&gt;keys&lt;/code&gt;, &lt;code&gt;zip&lt;/code&gt;, &lt;code&gt;collapse&lt;/code&gt;, &lt;code&gt;flatten&lt;/code&gt; and &lt;code&gt;flip&lt;/code&gt; methods return a &lt;a href=&quot;collections&quot;&gt;base collection&lt;/a&gt; instance. Likewise, if a &lt;code&gt;map&lt;/code&gt; operation returns a collection that does not contain any Eloquent models, it will be automatically cast to a base collection.</source>
          <target state="translated">虽然大多数Eloquent集合方法返回Eloquent集合的新实例，但是 &lt;code&gt;pluck&lt;/code&gt; ， &lt;code&gt;keys&lt;/code&gt; ， &lt;code&gt;zip&lt;/code&gt; ， &lt;code&gt;collapse&lt;/code&gt; ， &lt;code&gt;flatten&lt;/code&gt; 和 &lt;code&gt;flip&lt;/code&gt; 方法返回一个&lt;a href=&quot;collections&quot;&gt;基本集合&lt;/a&gt;实例。同样，如果 &lt;code&gt;map&lt;/code&gt; 操作返回的集合不包含任何Eloquent模型，则它将自动转换为基本集合。</target>
        </trans-unit>
        <trans-unit id="348c94bc88df6a4ae4554be4717014a2ad4e2291" translate="yes" xml:space="preserve">
          <source>While not strictly required to use Scout, you should strongly consider configuring a &lt;a href=&quot;queues&quot;&gt;queue driver&lt;/a&gt; before using the library. Running a queue worker will allow Scout to queue all operations that sync your model information to your search indexes, providing much better response times for your application's web interface.</source>
          <target state="translated">尽管不是严格要求使用Scout，但在使用库之前，您应该强烈考虑配置&lt;a href=&quot;queues&quot;&gt;队列驱动程序&lt;/a&gt;。运行队列工作器将使Scout可以将将模型信息同步到搜索索引的所有操作排队，从而为应用程序的Web界面提供更好的响应时间。</target>
        </trans-unit>
        <trans-unit id="48ddd56f9a6e231b28ec09bf06984ec9bbede44d" translate="yes" xml:space="preserve">
          <source>While resources translate a single model into an array, resource collections translate a collection of models into an array. It is not absolutely necessary to define a resource collection class for each one of your model types since all resources provide a &lt;code&gt;collection&lt;/code&gt; method to generate an &quot;ad-hoc&quot; resource collection on the fly:</source>
          <target state="translated">资源将单个模型转换为数组时，资源集合将模型的集合转换为数组。并不是绝对必须为每种模型类型定义一个资源收集类，因为所有资源都提供了一种 &lt;code&gt;collection&lt;/code&gt; 方法来动态生成&amp;ldquo;临时&amp;rdquo;资源收集：</target>
        </trans-unit>
        <trans-unit id="8970eed14eb8bd493a983eb3b0caaacfac8fb563" translate="yes" xml:space="preserve">
          <source>While testing, the &lt;code&gt;Sanctum::actingAs&lt;/code&gt; method may be used to authenticate a user and specify which abilities are granted to their token:</source>
          <target state="translated">在测试时，可以使用 &lt;code&gt;Sanctum::actingAs&lt;/code&gt; 方法来认证用户并指定授予其令牌的能力：</target>
        </trans-unit>
        <trans-unit id="4ff2199a9c114dabc5f912ad7ed349c40a4cec00" translate="yes" xml:space="preserve">
          <source>While the &lt;code&gt;each&lt;/code&gt; method calls the given callback for each item in the collection right away, the &lt;code&gt;tapEach&lt;/code&gt; method only calls the given callback as the items are being pulled out of the list one by one:</source>
          <target state="translated">尽管 &lt;code&gt;each&lt;/code&gt; 方法立即为集合中的每个项目调用给定的回调，但是 &lt;code&gt;tapEach&lt;/code&gt; 方法仅在给定项目被逐一从列表中拉出时才调用给定的回调：</target>
        </trans-unit>
        <trans-unit id="72fd6999c01e2ad34b06bf4430a0447529506b30" translate="yes" xml:space="preserve">
          <source>While the &lt;code&gt;filter&lt;/code&gt; callback filters data for individual entries, you may use the &lt;code&gt;filterBatch&lt;/code&gt; method to register a callback that filters all data for a given request or console command. If the callback returns &lt;code&gt;true&lt;/code&gt;, all of the entries are recorded by Telescope:</source>
          <target state="translated">当 &lt;code&gt;filter&lt;/code&gt; 回调过滤单个条目的数据时，您可以使用 &lt;code&gt;filterBatch&lt;/code&gt; 方法注册一个回调，该回调过滤给定请求或控制台命令的所有数据。如果回调返回 &lt;code&gt;true&lt;/code&gt; ，则所有条目均由Telescope记录：</target>
        </trans-unit>
        <trans-unit id="18db8efbc5b2962f19f9abc43ec5664dc4d5ecac" translate="yes" xml:space="preserve">
          <source>While the &lt;code&gt;input&lt;/code&gt; method retrieves values from entire request payload (including the query string), the &lt;code&gt;query&lt;/code&gt; method will only retrieve values from the query string:</source>
          <target state="translated">当 &lt;code&gt;input&lt;/code&gt; 方法从整个请求有效负载（包括查询字符串）检索值时， &lt;code&gt;query&lt;/code&gt; 方法将仅从查询字符串检索值：</target>
        </trans-unit>
        <trans-unit id="73c46ec032ad965202c61dc0d4b466a27af74713" translate="yes" xml:space="preserve">
          <source>While the &lt;code&gt;input&lt;/code&gt; method retrieves values from the entire request payload (including the query string), the &lt;code&gt;query&lt;/code&gt; method will only retrieve values from the query string:</source>
          <target state="translated">当 &lt;code&gt;input&lt;/code&gt; 方法从整个请求有效负载（包括查询字符串）中检索值时， &lt;code&gt;query&lt;/code&gt; 方法将仅从查询字符串中检索值：</target>
        </trans-unit>
        <trans-unit id="26948efa7cc67c3f1b9d2912661f8bae8df20721" translate="yes" xml:space="preserve">
          <source>While this code is valid, the structure of the &lt;code&gt;handle&lt;/code&gt; method becomes noisy since it is cluttered with Redis rate limiting logic. In addition, this rate limiting logic must be duplicated for any other jobs that we want to rate limit.</source>
          <target state="translated">尽管此代码有效，但是由于Redis速率限制逻辑使 &lt;code&gt;handle&lt;/code&gt; 方法的结构杂乱无章，因此该处理方法的结构变得嘈杂。此外，对于我们要进行速率限制的任何其他作业，必须重复此速率限制逻辑。</target>
        </trans-unit>
        <trans-unit id="94252da4cd002dac9c35c12822ce732b2cee0343" translate="yes" xml:space="preserve">
          <source>While trialing and collecting payment method details up front, Paddle prevents any subscription changes such as swapping plans or updating quantities. If you want to allow a customer to swap plans during a trial the subscription must be cancelled and recreated.</source>
          <target state="translated">在试用和前期收集支付方式细节的同时,Paddle防止任何订阅变更,如交换计划或更新数量。如果你想让客户在试用期间交换计划,必须取消订阅并重新创建。</target>
        </trans-unit>
        <trans-unit id="388db48a80bdd2f36afecf8de5947265a4847a19" translate="yes" xml:space="preserve">
          <source>While working with Cashier we recommend you also refer to Paddle's &lt;a href=&quot;https://developer.paddle.com/guides&quot;&gt;user guides&lt;/a&gt; and &lt;a href=&quot;https://developer.paddle.com/api-reference/intro&quot;&gt;API documentation&lt;/a&gt;.</source>
          <target state="translated">在使用Cashier时，我们建议您还参考Paddle的&lt;a href=&quot;https://developer.paddle.com/guides&quot;&gt;用户指南&lt;/a&gt;和&lt;a href=&quot;https://developer.paddle.com/api-reference/intro&quot;&gt;API文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c3263ee6474bc0189a33e9cf3b3cf7df16488e09" translate="yes" xml:space="preserve">
          <source>While your application is in maintenance mode, no &lt;a href=&quot;queues&quot;&gt;queued jobs&lt;/a&gt; will be handled. The jobs will continue to be handled as normal once the application is out of maintenance mode.</source>
          <target state="translated">当您的应用程序处于维护模式时，将不会处理任何&lt;a href=&quot;queues&quot;&gt;排队的作业&lt;/a&gt;。一旦应用程序退出维护模式，这些作业将继续按常规处理。</target>
        </trans-unit>
        <trans-unit id="9fc8481f8e98f789cfa820faf45077429352efa1" translate="yes" xml:space="preserve">
          <source>While your command is executing, you will obviously need to access the values for the arguments and options accepted by your command. To do so, you may use the &lt;code&gt;argument&lt;/code&gt; and &lt;code&gt;option&lt;/code&gt; methods:</source>
          <target state="translated">执行命令时，显然需要访问命令接受的参数和选项的值。为此，您可以使用 &lt;code&gt;argument&lt;/code&gt; 和 &lt;code&gt;option&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="a8342c13ed330ab09b6fedcb2b457b5e7e116519" translate="yes" xml:space="preserve">
          <source>WhoopsHandler</source>
          <target state="translated">WhoopsHandler</target>
        </trans-unit>
        <trans-unit id="2b7534a5342ff1d72a12f61109f6083d5575204f" translate="yes" xml:space="preserve">
          <source>WhoopsHandler (Foundation\Exceptions)</source>
          <target state="translated">WhoopsHandler (Foundation/Exceptions)</target>
        </trans-unit>
        <trans-unit id="922b394baa31a45941be8c5060c62134e9545195" translate="yes" xml:space="preserve">
          <source>WhoopsHandler::directoriesExceptVendor()</source>
          <target state="translated">WhoopsHandler::directoriesExceptVendor()</target>
        </trans-unit>
        <trans-unit id="c6eba6524006ccf60161800e05a6efb5bfaee42a" translate="yes" xml:space="preserve">
          <source>WhoopsHandler::forDebug()</source>
          <target state="translated">WhoopsHandler::forDebug()</target>
        </trans-unit>
        <trans-unit id="655639dfd77d3df9e19f85700bc94444c3195f0a" translate="yes" xml:space="preserve">
          <source>WhoopsHandler::registerApplicationPaths()</source>
          <target state="translated">WhoopsHandler::registerApplicationPaths()</target>
        </trans-unit>
        <trans-unit id="0632e6b2726312f02ee6cbbcd6c27d6acc56d2fa" translate="yes" xml:space="preserve">
          <source>WhoopsHandler::registerBlacklist()</source>
          <target state="translated">WhoopsHandler::registerBlacklist()</target>
        </trans-unit>
        <trans-unit id="8af9375d26e068a95bbeecd00d64c3112a1a7040" translate="yes" xml:space="preserve">
          <source>WhoopsHandler::registerEditor()</source>
          <target state="translated">WhoopsHandler::registerEditor()</target>
        </trans-unit>
        <trans-unit id="7533329b81e951b47322623b641f6f462ec5b6b3" translate="yes" xml:space="preserve">
          <source>Wildcard Event Listeners</source>
          <target state="translated">通配符事件监听器</target>
        </trans-unit>
        <trans-unit id="b787678841b65ab6be1b8553eaade2085596111f" translate="yes" xml:space="preserve">
          <source>Wildcard SSL</source>
          <target state="translated">通配符SSL</target>
        </trans-unit>
        <trans-unit id="1dc9d20817df4c4c0f23d475a957e54e2ba23dbc" translate="yes" xml:space="preserve">
          <source>Wildcard Subscriptions</source>
          <target state="translated">通配符订阅</target>
        </trans-unit>
        <trans-unit id="e3982a53d2b255a3d7522bb44900c219168ecb8e" translate="yes" xml:space="preserve">
          <source>Will be removed in a future Laravel version.</source>
          <target state="translated">在未来的Laravel版本中会被删除.</target>
        </trans-unit>
        <trans-unit id="26d9c28d789c254f71ea99a3463b99a7ccc2f4fa" translate="yes" xml:space="preserve">
          <source>Windows</source>
          <target state="translated">Windows</target>
        </trans-unit>
        <trans-unit id="56103090882d5808ad3598385120c914d3c77ee4" translate="yes" xml:space="preserve">
          <source>Windows users should not use the &lt;code&gt;~/&lt;/code&gt; path syntax and instead should use the full path to their project, such as &lt;code&gt;C:\Users\user\Code\project1&lt;/code&gt;.</source>
          <target state="translated">Windows用户不应使用 &lt;code&gt;~/&lt;/code&gt; path语法，而应使用其项目的完整路径，例如 &lt;code&gt;C:\Users\user\Code\project1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d0a162f24e233795006248e6eceb7d0912e33599" translate="yes" xml:space="preserve">
          <source>Windows:</source>
          <target state="translated">Windows:</target>
        </trans-unit>
        <trans-unit id="11f85e2e9a84fe1a17f5a1b93f3d4513b411a6af" translate="yes" xml:space="preserve">
          <source>Windows: &lt;code&gt;%USERPROFILE%\AppData\Roaming\Composer\vendor\bin&lt;/code&gt;</source>
          <target state="translated">Windows: &lt;code&gt;%USERPROFILE%\AppData\Roaming\Composer\vendor\bin&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d864d109c167a76425e1d9a229f9b784d3417dcd" translate="yes" xml:space="preserve">
          <source>WipeCommand</source>
          <target state="translated">WipeCommand</target>
        </trans-unit>
        <trans-unit id="03a000aac90e8f2ecb4da4adb760bc9efc0ed6c5" translate="yes" xml:space="preserve">
          <source>WipeCommand (Database)</source>
          <target state="translated">擦拭命令(数据库)</target>
        </trans-unit>
        <trans-unit id="2525634b9fa27a5eaeddda2735fdd03b8dab63c5" translate="yes" xml:space="preserve">
          <source>WipeCommand::dropAllTables()</source>
          <target state="translated">WipeCommand::dropAllTables()</target>
        </trans-unit>
        <trans-unit id="8c7ab45e39df754c52c70c34a97c3f7fdb6a7468" translate="yes" xml:space="preserve">
          <source>WipeCommand::dropAllTypes()</source>
          <target state="translated">WipeCommand::dropAllTypes()</target>
        </trans-unit>
        <trans-unit id="2f66bc085e7e1a627d4e5b30631196899d3a4663" translate="yes" xml:space="preserve">
          <source>WipeCommand::dropAllViews()</source>
          <target state="translated">WipeCommand::dropAllViews()</target>
        </trans-unit>
        <trans-unit id="5f100c3f802a37891cb69e66414299067df17084" translate="yes" xml:space="preserve">
          <source>WipeCommand::getOptions()</source>
          <target state="translated">WipeCommand::getOptions()</target>
        </trans-unit>
        <trans-unit id="69cba5155c88423262d3c4d6d03502bc5875ae77" translate="yes" xml:space="preserve">
          <source>WipeCommand::handle()</source>
          <target state="translated">WipeCommand::handle()</target>
        </trans-unit>
        <trans-unit id="f6cdf2f1377b4f1da070d015c6228f3de75910f6" translate="yes" xml:space="preserve">
          <source>With Credit Card Up Front</source>
          <target state="translated">先用信用卡</target>
        </trans-unit>
        <trans-unit id="583a679104cb88f1b20e29da230b00299a9fe96f" translate="yes" xml:space="preserve">
          <source>With Payment Method Up Front</source>
          <target state="translated">预付方式</target>
        </trans-unit>
        <trans-unit id="18427497c463b152591bf88ca6911e9e7ea8b083" translate="yes" xml:space="preserve">
          <source>With this addition to your &lt;code&gt;webpack.mix.js&lt;/code&gt; file, Mix will no longer match any &lt;code&gt;url()&lt;/code&gt; or copy assets to your public directory. In other words, the compiled CSS will look just like how you originally typed it:</source>
          <target state="translated">通过在 &lt;code&gt;webpack.mix.js&lt;/code&gt; 文件中添加此内容，Mix将不再匹配任何 &lt;code&gt;url()&lt;/code&gt; 或将资产复制到您的公共目录中。换句话说，已编译的CSS看起来就像您最初键入它的方式一样：</target>
        </trans-unit>
        <trans-unit id="f96228eccaf6f329d5c25f92f15be89fec18bc36" translate="yes" xml:space="preserve">
          <source>With this single line of code, you may now take advantage of:</source>
          <target state="translated">通过这一行代码,你现在可以利用。</target>
        </trans-unit>
        <trans-unit id="fea6acffe87e259a90dacff8c8e0282eadd35430" translate="yes" xml:space="preserve">
          <source>WithFaker</source>
          <target state="translated">WithFaker</target>
        </trans-unit>
        <trans-unit id="d9ce4c57668fd41b5c29bd07f403151a4a3f7a5e" translate="yes" xml:space="preserve">
          <source>WithFaker (Foundation\Testing)</source>
          <target state="translated">WithFaker (FoundationTesting)</target>
        </trans-unit>
        <trans-unit id="ded64d3b2d821c90553044af2e3d008f20ea5f49" translate="yes" xml:space="preserve">
          <source>WithFaker::faker()</source>
          <target state="translated">WithFaker::faker()</target>
        </trans-unit>
        <trans-unit id="aded131891a4294d825381a0bd4c5ae5ab968b74" translate="yes" xml:space="preserve">
          <source>WithFaker::makeFaker()</source>
          <target state="translated">WithFaker::makeFaker()</target>
        </trans-unit>
        <trans-unit id="7c304dcbfd22a06c97c6e6f7753d76d681b12cc9" translate="yes" xml:space="preserve">
          <source>WithFaker::setUpFaker()</source>
          <target state="translated">WithFaker::setUpFaker()</target>
        </trans-unit>
        <trans-unit id="48c1d19901383c95d312198345b6e82b271efe7b" translate="yes" xml:space="preserve">
          <source>Within a mailable class' &lt;code&gt;build&lt;/code&gt; method, you may use the &lt;code&gt;view&lt;/code&gt; method to specify which template should be used when rendering the email's contents. Since each email typically uses a &lt;a href=&quot;blade&quot;&gt;Blade template&lt;/a&gt; to render its contents, you have the full power and convenience of the Blade templating engine when building your email's HTML:</source>
          <target state="translated">在可邮寄类的 &lt;code&gt;build&lt;/code&gt; 方法中，您可以使用 &lt;code&gt;view&lt;/code&gt; 方法来指定呈现电子邮件内容时应使用的模板。由于每封电子邮件通常使用&lt;a href=&quot;blade&quot;&gt;Blade模板&lt;/a&gt;来呈现其内容，因此在构建电子邮件的HTML时，您将拥有Blade模板引擎的全部功能和便利：</target>
        </trans-unit>
        <trans-unit id="6747d9675ebd9f5e1f14782ecab150a332f9d10e" translate="yes" xml:space="preserve">
          <source>Within a service provider, you always have access to the container via the &lt;code&gt;$this-&amp;gt;app&lt;/code&gt; property. We can register a binding using the &lt;code&gt;bind&lt;/code&gt; method, passing the class or interface name that we wish to register along with a &lt;code&gt;Closure&lt;/code&gt; that returns an instance of the class:</source>
          <target state="translated">在服务提供商中，您始终可以通过 &lt;code&gt;$this-&amp;gt;app&lt;/code&gt; 属性访问容器。我们可以使用 &lt;code&gt;bind&lt;/code&gt; 方法注册绑定，传递要注册的类或接口名称，以及返回该类实例的 &lt;code&gt;Closure&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="b6167527c55baed6217aa6e69545a373e1bccfc8" translate="yes" xml:space="preserve">
          <source>Within an event listener, you may access the &lt;code&gt;notifiable&lt;/code&gt;, &lt;code&gt;notification&lt;/code&gt;, and &lt;code&gt;channel&lt;/code&gt; properties on the event to learn more about the notification recipient or the notification itself:</source>
          <target state="translated">在事件侦听器中，您可以访问事件的 &lt;code&gt;notifiable&lt;/code&gt; ， &lt;code&gt;notification&lt;/code&gt; 和 &lt;code&gt;channel&lt;/code&gt; 属性，以了解有关通知接收者或通知本身的更多信息：</target>
        </trans-unit>
        <trans-unit id="28219899d00e79d2951ad1c31159913e70e55bd1" translate="yes" xml:space="preserve">
          <source>Within both of these methods you may use the Laravel schema builder to expressively create and modify tables. To learn about all of the methods available on the &lt;code&gt;Schema&lt;/code&gt; builder, &lt;a href=&quot;#creating-tables&quot;&gt;check out its documentation&lt;/a&gt;. For example, the following migration creates a &lt;code&gt;flights&lt;/code&gt; table:</source>
          <target state="translated">在这两种方法中，您都可以使用Laravel模式构建器来表达性地创建和修改表。要了解&amp;ldquo; &lt;code&gt;Schema&lt;/code&gt; 构建器上可用的所有方法，&lt;a href=&quot;#creating-tables&quot;&gt;请查看其文档&lt;/a&gt;。例如，以下迁移将创建一个 &lt;code&gt;flights&lt;/code&gt; 表：</target>
        </trans-unit>
        <trans-unit id="e83283f5c7e6ff3dec1324ea5704c72ae1ac6122" translate="yes" xml:space="preserve">
          <source>Within both of these methods you may use the Laravel schema builder to expressively create and modify tables. To learn about all of the methods available on the &lt;code&gt;Schema&lt;/code&gt; builder, &lt;a href=&quot;#creating-tables&quot;&gt;check out its documentation&lt;/a&gt;. For example, this migration example creates a &lt;code&gt;flights&lt;/code&gt; table:</source>
          <target state="translated">在这两种方法中，您都可以使用Laravel模式构建器来表达性地创建和修改表。要了解&amp;ldquo; &lt;code&gt;Schema&lt;/code&gt; 构建器上可用的所有方法，&lt;a href=&quot;#creating-tables&quot;&gt;请查看其文档&lt;/a&gt;。例如，此迁移示例创建一个 &lt;code&gt;flights&lt;/code&gt; 表：</target>
        </trans-unit>
        <trans-unit id="4072e2b4bfe33dad8f8ec117143a2854d1ea7955" translate="yes" xml:space="preserve">
          <source>Within the &lt;code&gt;DatabaseSeeder&lt;/code&gt; class, you may use the &lt;code&gt;call&lt;/code&gt; method to execute additional seed classes. Using the &lt;code&gt;call&lt;/code&gt; method allows you to break up your database seeding into multiple files so that no single seeder class becomes overwhelmingly large. Pass the name of the seeder class you wish to run:</source>
          <target state="translated">在 &lt;code&gt;DatabaseSeeder&lt;/code&gt; 类中，您可以使用 &lt;code&gt;call&lt;/code&gt; 方法执行其他种子类。使用 &lt;code&gt;call&lt;/code&gt; 方法使您可以将数据库种子分解为多个文件，这样就不会有单个种子种子类变得过大。传递您希望运行的种子类的名称：</target>
        </trans-unit>
        <trans-unit id="38cecc6db844791d812b59edd96474959871daac" translate="yes" xml:space="preserve">
          <source>Within the Closure, which serves as the factory definition, you may return the default test values of all attributes on the model. The Closure will receive an instance of the &lt;a href=&quot;https://github.com/fzaninotto/Faker&quot;&gt;Faker&lt;/a&gt; PHP library, which allows you to conveniently generate various kinds of random data for testing.</source>
          <target state="translated">在作为工厂定义的Closure中，您可以返回模型上所有属性的默认测试值。该Closure将接收&lt;a href=&quot;https://github.com/fzaninotto/Faker&quot;&gt;Faker&lt;/a&gt; PHP库的实例，该实例使您可以方便地生成各种随机数据以进行测试。</target>
        </trans-unit>
        <trans-unit id="ac61635a9bf84973d2e9e3970c12af375ccb2e7c" translate="yes" xml:space="preserve">
          <source>Without Credit Card Up Front</source>
          <target state="translated">无需信用卡预付</target>
        </trans-unit>
        <trans-unit id="7140780d0751593a64bd453da071949e464b5d8a" translate="yes" xml:space="preserve">
          <source>Without Payment Method Up Front</source>
          <target state="translated">不需要预先支付方式</target>
        </trans-unit>
        <trans-unit id="b910306744dcdff16bb3f5ea2df65b93ae9a6b62" translate="yes" xml:space="preserve">
          <source>Without pruning, the &lt;code&gt;telescope_entries&lt;/code&gt; table can accumulate records very quickly. To mitigate this, you should schedule the &lt;code&gt;telescope:prune&lt;/code&gt; Artisan command to run daily:</source>
          <target state="translated">无需修剪， &lt;code&gt;telescope_entries&lt;/code&gt; 表可以非常快速地累积记录。为了减轻这种情况，您应该安排 &lt;code&gt;telescope:prune&lt;/code&gt; Artisan命令每天运行：</target>
        </trans-unit>
        <trans-unit id="4df11ff8ee3b580245718abb3b6d106cd59ce60e" translate="yes" xml:space="preserve">
          <source>WithoutEvents</source>
          <target state="translated">WithoutEvents</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
