<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="groovy">
    <body>
      <group id="groovy">
        <trans-unit id="7ad6cf2a70a844fbf09b2c1d94d709a3cd6f0d18" translate="yes" xml:space="preserve">
          <source>Asserts that the given code closure fails when it is evaluated and that a particular exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82cdd1881436d8c6050f8729a19cc4d2722641ef" translate="yes" xml:space="preserve">
          <source>Asserts that the given code closure fails when it is evaluated and that a particular type of exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5ab0bb5b35f76fad679a1b18366ee57f34cb15f" translate="yes" xml:space="preserve">
          <source>Asserts that the given script fails when it is evaluated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd86ac60c009aaa06168929929ca59fb76c33a8e" translate="yes" xml:space="preserve">
          <source>Asserts that the given script fails when it is evaluated and that a particular type of exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66473b8fd2b0b263db38c40bd9e6c0e1efa39693" translate="yes" xml:space="preserve">
          <source>Asserts that the script runs without any exceptions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4c8093903c9fe7a4964ece438d27540c1f367f8" translate="yes" xml:space="preserve">
          <source>Asserts that the value of inspect() on the given object matches the given text string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="809085c402d54bfa7686ff592d80fc0cf2c6bf54" translate="yes" xml:space="preserve">
          <source>Asserts that the value of toString() on the given object matches the given text string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e67295ff9c5456a3a2d6614b1eec375db11e532" translate="yes" xml:space="preserve">
          <source>Assigns any existing properties to the node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2975eabd9a04f73da5cc3dc40f3107973dd9692b" translate="yes" xml:space="preserve">
          <source>Associates the specified value with the specified key in the cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b07b71723b007d9bcb6e594ad8837026716f5ed2" translate="yes" xml:space="preserve">
          <source>Associates the specified value with the specified property name in this result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e6a08dd62c8d340d7f0d42359de7985105ab0f7" translate="yes" xml:space="preserve">
          <source>AstBrowserNodeMaker&amp;lt;&lt;a href=&quot;textnode&quot;&gt;TextNode&lt;/a&gt;&amp;gt;</source>
          <target state="translated">AstBrowserNodeMaker&amp;lt;&lt;a href=&quot;textnode&quot;&gt;TextNode&lt;/a&gt;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="f3827e4a1a00b0296508c80b869cadec949c8ba5" translate="yes" xml:space="preserve">
          <source>Attach doc comment to member node as meta data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="036466b7954ee8f410469d27a2362354390c845a" translate="yes" xml:space="preserve">
          <source>Attempts to create an Iterator for the given object by first converting it to a Collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="982c3ee2c87d9b5c8f3fe6ff91a4b1792d78ddbf" translate="yes" xml:space="preserve">
          <source>Attempts to find AstBuilder 'from code' invocations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97b0d394d4eadd908ed3a5e1184db63924773a24" translate="yes" xml:space="preserve">
          <source>Attempts to find AstBuilder 'from code' invocations. When found, converts them into calls to the 'from string' approach.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdde3c54f29d66965225ed062ef2e2cdae0bb84e" translate="yes" xml:space="preserve">
          <source>Attempts to invoke the methodMissing method otherwise throws a MissingMethodException</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e956e7049b54942304acf108e394b146e973ad74" translate="yes" xml:space="preserve">
          <source>Attempts to load the JDBC driver on the thread, current or system class loaders</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89cc81c4afa8b37044f0e5a523d86f96c62cfa71" translate="yes" xml:space="preserve">
          <source>Attempts to make a direct method call on a bridge method, if it exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec1c316c85890dddc95d3e26681e72d2090c6d28" translate="yes" xml:space="preserve">
          <source>AutoClone</source>
          <target state="translated">AutoClone</target>
        </trans-unit>
        <trans-unit id="c6447bac019c8c15950f1d62bbbd5ddf10e7390e" translate="yes" xml:space="preserve">
          <source>AutoCloneStyle</source>
          <target state="translated">AutoCloneStyle</target>
        </trans-unit>
        <trans-unit id="93114770a22f478ada4833c22dada28edf585a03" translate="yes" xml:space="preserve">
          <source>AutoCloneStyle.CLONE</source>
          <target state="translated">AutoCloneStyle.CLONE</target>
        </trans-unit>
        <trans-unit id="671417172f076e5ba7613593c53d0a895dc87087" translate="yes" xml:space="preserve">
          <source>AutoCloseable</source>
          <target state="translated">AutoCloseable</target>
        </trans-unit>
        <trans-unit id="ba313ab40aabef27c4d13cda82d8cd2ffc2db3eb" translate="yes" xml:space="preserve">
          <source>Averages the items from an Iterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c404d380cf6aaadbd4a612a468bc504887e00d6" translate="yes" xml:space="preserve">
          <source>Averages the items from an Iterator. This is equivalent to invoking the &quot;plus&quot; method on all items in the array and then dividing by the total count using the &quot;div&quot; method for the resulting sum. The iterator will become exhausted of elements after determining the average value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32eb1a8ca9fe76ee827ba2ff4d005dd3fe425ab8" translate="yes" xml:space="preserve">
          <source>Averages the items in an Iterable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de3690c8b70a153a3bb99756c9374980a1e0e08c" translate="yes" xml:space="preserve">
          <source>Averages the items in an Iterable. This is equivalent to invoking the &quot;plus&quot; method on all items in the Iterable and then dividing by the total count using the &quot;div&quot; method for the resulting sum.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f88cb40a0ea931719f84503788616d553de2dce8" translate="yes" xml:space="preserve">
          <source>Averages the items in an array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95f86137b3725c7ac728285776f9ce1c34314e52" translate="yes" xml:space="preserve">
          <source>Averages the items in an array. This is equivalent to invoking the &quot;plus&quot; method on all items in the array and then dividing by the total count using the &quot;div&quot; method for the resulting sum.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb9d845ebfbd1211b059b55e1deac1e1c10ef6fb" translate="yes" xml:space="preserve">
          <source>Averages the result of applying a closure to each item of an Iterable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e07366f4469ceb14052d4865b16755c1b7925759" translate="yes" xml:space="preserve">
          <source>Averages the result of applying a closure to each item of an Iterable. &lt;code&gt;iter.average(closure)&lt;/code&gt; is equivalent to: &lt;code&gt;iter.collect(closure).average()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="387d4ef6e04c18039ab74dda0379287e2d70af23" translate="yes" xml:space="preserve">
          <source>Averages the result of applying a closure to each item of an array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6779db4507e1ada66b3363d81f9429b66a5a37b6" translate="yes" xml:space="preserve">
          <source>Averages the result of applying a closure to each item of an array. &lt;code&gt;array.average(closure)&lt;/code&gt; is equivalent to: &lt;code&gt;array.collect(closure).average()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="551536db6f93ccc1500d0b82dae7037a1e61d5f4" translate="yes" xml:space="preserve">
          <source>Averages the result of applying a closure to each item returned from an iterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ee90bd26f52cda4bbd0d9f7806490a822ec10ab" translate="yes" xml:space="preserve">
          <source>Averages the result of applying a closure to each item returned from an iterator. &lt;code&gt;iter.average(closure)&lt;/code&gt; is equivalent to: &lt;code&gt;iter.collect(closure).average()&lt;/code&gt;. The iterator will become exhausted of elements after determining the average value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94d7b19f9decbb77a74552061d2a7e28ff16c911" translate="yes" xml:space="preserve">
          <source>Avoiding SQL injection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0d528bee289be89f06c6e18bee592a1d7548000" translate="yes" xml:space="preserve">
          <source>Avoids doing unnecessary work when sorting an already sorted map</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f54c245198dfb712b92d5c448379d2e6bba41762" translate="yes" xml:space="preserve">
          <source>Avoids doing unnecessary work when sorting an already sorted map (i.e. an identity function for an already sorted map).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2214b7ffcbb9b0e40e3765ff519522c544ab4e1f" translate="yes" xml:space="preserve">
          <source>Avoids doing unnecessary work when sorting an already sorted set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38e9cb937420e26f0f2f2b257547f3b60b8858a8" translate="yes" xml:space="preserve">
          <source>Avoids doing unnecessary work when sorting an already sorted set (i.e. an identity function for an already sorted set).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="391a32a8dc6a1aec706b144fc20b28eb23a68b45" translate="yes" xml:space="preserve">
          <source>Backport of Java8 Function. INTERNAL USE ONLY.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aae411c459dc36b08e980f73df0253b8bada2a2" translate="yes" xml:space="preserve">
          <source>Backport of Java8 Supplier. INTERNAL USE ONLY.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bb929629c48ce4741a3c0183afc646975db2588" translate="yes" xml:space="preserve">
          <source>Bad code in object initializers or constructors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a3d526ac1caed30330e24acad799fc0ca8aa9a3" translate="yes" xml:space="preserve">
          <source>BadLocationException</source>
          <target state="translated">BadLocationException</target>
        </trans-unit>
        <trans-unit id="7fb822d19ef700b297052278fbd1ee4d31057200" translate="yes" xml:space="preserve">
          <source>Base JSON parser. Scaled down version of Boon JsonParser with features removed that are JDK 1.7 dependent or Groovy duplicated functionality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="484efa1dfc51920790da439846ae850643567770" translate="yes" xml:space="preserve">
          <source>Base class for AST Transformations which will automatically throw an &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/InterruptedException.html&quot;&gt;InterruptedException&lt;/a&gt; when some conditions are met.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c01e9cfaae4a8b1401cbd5a23daec6f244659dc" translate="yes" xml:space="preserve">
          <source>Base class for Java objects wishing to be Groovy objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="977b2dd6884542663d77ab4c98d877644d2f98e0" translate="yes" xml:space="preserve">
          <source>Base class for NewInstanceMetaMethod and NewStaticMetaMethod</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b01c70707a4c0f25536eb18a9cbecdd058e253d2" translate="yes" xml:space="preserve">
          <source>Base class for all call sites.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00d03eb7071efa4195030ccc3dfb56c2076ab288" translate="yes" xml:space="preserve">
          <source>Base class for any AST node which is capable of being annotated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a1388945796d05db02a3ca955e1adcb9674034a" translate="yes" xml:space="preserve">
          <source>Base class for any AST node. This class supports basic information used in all nodes of the AST:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74a8010ea9d889e064068cc9ee219e3f107cc316" translate="yes" xml:space="preserve">
          <source>Base class for any statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99f86c335e36999650545b6b8d7d8b04970f7265" translate="yes" xml:space="preserve">
          <source>Base class for compilation customizers which delegate to another customizer. The phase this customizer runs at is retrieved from the phase of the delegate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11658f938c61dfe3fc8f6a4dc873432554731bc9" translate="yes" xml:space="preserve">
          <source>Base class for console</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99929298f19e29c445793555230f5a8c7d90602d" translate="yes" xml:space="preserve">
          <source>Base class for creating arbitrary nested trees of objects or events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6291d54664a0adb392c384e9c6f70e2fd2e423d" translate="yes" xml:space="preserve">
          <source>Base class for date and time durations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ab1465e8b9694bb87132f26b61a5c451428636f" translate="yes" xml:space="preserve">
          <source>Base class for hints which use the type of a parameter of the annotated method as the signature. This can optionally use a generic type of the selected parameter as the hint. For example, imagine the following method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41cf900ea0785d0f0227d42de37639e128097aee" translate="yes" xml:space="preserve">
          <source>Base class for representing lazy evaluated GPath expressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="845582eac3562415c696474b9723d0facbeaa008" translate="yes" xml:space="preserve">
          <source>Base class for type checking extensions written in Groovy. Compared to its superclass, &lt;a href=&quot;typecheckingextension&quot;&gt;TypeCheckingExtension&lt;/a&gt;, this class adds a number of utility methods aimed at leveraging the syntax of the Groovy language to improve expressivity and conciseness.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="513e50bf624f4abea8006448660e5b1f2c792aba" translate="yes" xml:space="preserve">
          <source>Base class for writing primitive typed operations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4af5ede68d33e103fbff9e6bf2dafab03db0f5f" translate="yes" xml:space="preserve">
          <source>Base class name for scripts (must derive from Script)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e97fbf3002ec3741cb4763dd34e7d09e8a427853" translate="yes" xml:space="preserve">
          <source>Base exception indicating a syntax error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="772fc9beffa7d129d053753f7656bf1fb9b28b28" translate="yes" xml:space="preserve">
          <source>Base interface for customizing where resources can be found for the &lt;code&gt;GroovyScriptEngine&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="980d3ff19fef697a339a8b3e54fcaafc57698dbe" translate="yes" xml:space="preserve">
          <source>Base internal method for call(), callWithRows(), and callWithAllRows() style of methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68891e821330cc3167ffdbbb908cff3f447852c9" translate="yes" xml:space="preserve">
          <source>BaseDuration</source>
          <target state="translated">BaseDuration</target>
        </trans-unit>
        <trans-unit id="a14aad37de5e50274911cc6e67a0196bbb275a15" translate="yes" xml:space="preserve">
          <source>BaseDuration.toMilliseconds</source>
          <target state="translated">BaseDuration.toMilliseconds</target>
        </trans-unit>
        <trans-unit id="4c33a621f1de50e11985366f27d259f55219711b" translate="yes" xml:space="preserve">
          <source>Based on the implementation of the Javac task in Apache Ant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01e71be545861313dea40805f7361111a7ff62a2" translate="yes" xml:space="preserve">
          <source>BatchingPreparedStatementWrapper</source>
          <target state="translated">BatchingPreparedStatementWrapper</target>
        </trans-unit>
        <trans-unit id="951c82848123e2202f863968b8002e3f29f067d9" translate="yes" xml:space="preserve">
          <source>BatchingStatementWrapper</source>
          <target state="translated">BatchingStatementWrapper</target>
        </trans-unit>
        <trans-unit id="a37252862f00a28ff4fe10efd7b41bddf2b6c4c0" translate="yes" xml:space="preserve">
          <source>Because antlr4 does not support generating lexer with specified interface, we have to create a super class for it and implement the interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5fbe6bd368ebab43e9c27698160e54186d31fa8" translate="yes" xml:space="preserve">
          <source>Because antlr4 does not support generating parser with specified interface, we have to create a super class for it and implement the interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57aec36e26ffa07cd5be3a6d3085832f622eb0d1" translate="yes" xml:space="preserve">
          <source>Because retrieval operations can ordinarily overlap with writing operations (i.e., put, remove, and their derivatives), retrievals can only be guaranteed to return the results of the most recently &lt;em&gt;completed&lt;/em&gt; operations holding upon their onset. Retrieval operations may or may not return results reflecting in-progress writing operations. However, the retrieval operations do always return consistent results -- either those holding before any single modification or after it, but never a nonsense result. For aggregate operations such as putAll and clear, concurrent reads may reflect insertion or removal of only some entries. In those rare contexts in which you use a hash table to synchronize operations across threads (for example, to prevent reads until after clears), you should either encase operations in synchronized blocks, or instead use java.util.Hashtable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d501e5a6c4261073c6502b3d2cd885373f83f516" translate="yes" xml:space="preserve">
          <source>Because the JVM doesn't have a one-size fits all cloning strategy, several customizations exist for the cloning implementation. By default, the &lt;code&gt;clone()&lt;/code&gt; method will call &lt;code&gt;super.clone()&lt;/code&gt; before calling &lt;code&gt;clone()&lt;/code&gt; on each &lt;code&gt;Cloneable&lt;/code&gt; property of the class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5d5b46ce1ed1439f61c0f2f8b4df5d62db5133f" translate="yes" xml:space="preserve">
          <source>Below is an example using a batchSize of 20:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cc39ddbb45ab585d92f13da821681cfd74096c4" translate="yes" xml:space="preserve">
          <source>Beware that obtaining the mappings is &lt;em&gt;NOT&lt;/em&gt; a constant-time operation. Because of the asynchronous nature of the page replacement policy, determining the retention ordering requires a traversal of the entries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4cc8890708ca2f417415c96887ef4734066cf80" translate="yes" xml:space="preserve">
          <source>Beware that, unlike in &lt;a href=&quot;#keySet()&quot;&gt;keySet()&lt;/a&gt;, obtaining the set is &lt;em&gt;NOT&lt;/em&gt; a constant-time operation. Because of the asynchronous nature of the page replacement policy, determining the retention ordering requires a traversal of the keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ab0be3f93d8d722278121e74cf7b35c0bf4473f" translate="yes" xml:space="preserve">
          <source>BigDecimal</source>
          <target state="translated">BigDecimal</target>
        </trans-unit>
        <trans-unit id="bb2e73f0b01b7f0009189defb2a8a839c5540302" translate="yes" xml:space="preserve">
          <source>BigDecimal NumberMath operations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="402d3ad9b93affa553f9372eedfe7557e9fc7015" translate="yes" xml:space="preserve">
          <source>BigDecimal.round</source>
          <target state="translated">BigDecimal.round</target>
        </trans-unit>
        <trans-unit id="92438720ccb09a8bc6b241c5b27a00fb72144c25" translate="yes" xml:space="preserve">
          <source>BigInteger</source>
          <target state="translated">BigInteger</target>
        </trans-unit>
        <trans-unit id="a7e3508fe5a399daeb1507ddacfabe8632c3a8c4" translate="yes" xml:space="preserve">
          <source>BigInteger NumberMath operations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feac99d534ac6dba062a0616a6ebcea09dbb6e33" translate="yes" xml:space="preserve">
          <source>Binary write operations specialised for Booleans</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="122947a39b8647bcdae27c03e8a86228e1d950c9" translate="yes" xml:space="preserve">
          <source>BinaryExpressionHelper</source>
          <target state="translated">BinaryExpressionHelper</target>
        </trans-unit>
        <trans-unit id="0d0a4c250f2987edfdb3de39b0b3f15ba515b8ea" translate="yes" xml:space="preserve">
          <source>BindableASTTransformation</source>
          <target state="translated">BindableASTTransformation</target>
        </trans-unit>
        <trans-unit id="fa51779284b082a038123a98e08b15c5dfde0f8a" translate="yes" xml:space="preserve">
          <source>Binding classes for SwingBuilder</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c3a8441f2a0f045169d12d504fa5c33e525aac9" translate="yes" xml:space="preserve">
          <source>Binding instances are not supposed to be used in a multi-threaded context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ecf4290d1e775e4c57e1705876740ea6bdf26c5" translate="yes" xml:space="preserve">
          <source>BindingUpdatable</source>
          <target state="translated">BindingUpdatable</target>
        </trans-unit>
        <trans-unit id="f8cd7716f7a5997d4efd153b8de6bda8ac575d3b" translate="yes" xml:space="preserve">
          <source>BitSet</source>
          <target state="translated">BitSet</target>
        </trans-unit>
        <trans-unit id="0fd843874a6250eb850cb08dd14f325c1ea92ba1" translate="yes" xml:space="preserve">
          <source>Bitwise AND together two BitSets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcaff0c22e337f71774f5253e80660e08215dbc2" translate="yes" xml:space="preserve">
          <source>Bitwise AND together two Numbers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="795bad9e909304bb7eff79436655b88fdd6a9759" translate="yes" xml:space="preserve">
          <source>Bitwise NEGATE a BitSet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="997da46930e633c0b9fad217853213a0aa5da9b5" translate="yes" xml:space="preserve">
          <source>Bitwise NEGATE a Number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5e6ac49713510cc2c45ca818ce56ddcc4dcf0ea" translate="yes" xml:space="preserve">
          <source>Bitwise OR together two BitSets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb4de521cad6315af8ff765e5c2a04c672d27484" translate="yes" xml:space="preserve">
          <source>Bitwise OR together two BitSets. Called when the '|' operator is used between two bit sets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7358163943cd55e7f9207776ad1d76f2b8c7be67" translate="yes" xml:space="preserve">
          <source>Bitwise OR together two numbers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20f63478af95815c4846bfd33b3775921be784b6" translate="yes" xml:space="preserve">
          <source>Bitwise XOR together two BitSets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a51716857f8b46de0303db7eaabb7643501d44e" translate="yes" xml:space="preserve">
          <source>Bitwise XOR together two BitSets. Called when the '^' operator is used between two bit sets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d85ca3da5e6f39dac894770937e95fe90bf08de7" translate="yes" xml:space="preserve">
          <source>Bitwise XOR together two Numbers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7d5e7db473a59824377915cfaef9e5365af620a" translate="yes" xml:space="preserve">
          <source>Bitwise XOR together two Numbers. Called when the '^' operator is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5064c6ad10fac805464bb6e63a0a1820815f20e3" translate="yes" xml:space="preserve">
          <source>Both the deprecated groovy.lang.PackageScope and groovy.transform.PackageScope annotations are supported. The former will be removed in a future version of Groovy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d110f81d02ba7c68697719c9771bd620f9856ee3" translate="yes" xml:space="preserve">
          <source>Bridge for a call based on a map entry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb6497382e9c54ed9b51bc9d4d15de8b038ad5a2" translate="yes" xml:space="preserve">
          <source>Bridge for a call based on a map entry. If the call is done on a &lt;a href=&quot;../../../../../groovy/lang/closure&quot;&gt;Closure&lt;/a&gt; taking one argument, then we give in the Entry, otherwise we will give in the key and value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb61d89ebecf3d54944a4c50c757bf5add335891" translate="yes" xml:space="preserve">
          <source>BufferedIterator</source>
          <target state="translated">BufferedIterator</target>
        </trans-unit>
        <trans-unit id="2906d22196e671c2ed924c992cc539dc68d3e23a" translate="yes" xml:space="preserve">
          <source>BufferedReader.readLine</source>
          <target state="translated">BufferedReader.readLine</target>
        </trans-unit>
        <trans-unit id="3ed5786976756aa772985ae79df2ae5468e9a95b" translate="yes" xml:space="preserve">
          <source>Build a list of public fields and methods for an object that match a given prefix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed73f512081801edbc45cfe23be8e0ead50a5c4a" translate="yes" xml:space="preserve">
          <source>Build an array of MBeanParameterInfo from the operation's meta map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9c2d7077c137fa24221c32c4b9bc33278785b69" translate="yes" xml:space="preserve">
          <source>Build objects using reflection to resolve class names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0812005bf4c9ecff769488fdb3e8f3db1deb54d" translate="yes" xml:space="preserve">
          <source>BuildException if an error occurs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="907e0b103ecb5601aeb8145a5d06f0b6405ad1fc" translate="yes" xml:space="preserve">
          <source>Buildable</source>
          <target state="translated">Buildable</target>
        </trans-unit>
        <trans-unit id="748b00e4421a5d52c9794603a6598b7d90b43885" translate="yes" xml:space="preserve">
          <source>BuilderASTTransformation.BuilderStrategy</source>
          <target state="translated">BuilderASTTransformation.BuilderStrategy</target>
        </trans-unit>
        <trans-unit id="783d10426b97922912b1120c1220841babd59e81" translate="yes" xml:space="preserve">
          <source>BuilderSupport.doInvokeMethod</source>
          <target state="translated">BuilderSupport.doInvokeMethod</target>
        </trans-unit>
        <trans-unit id="a0c150ae11f9c09c48c7a3edf9c95d0a6f51ff86" translate="yes" xml:space="preserve">
          <source>Builds AST based on the DSL data within the Closure parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d80b957d83070863268d3fc6da55896e1ece1128" translate="yes" xml:space="preserve">
          <source>Builds AST based on the code within the &lt;a href=&quot;../../../../../groovy/lang/closure&quot;&gt;Closure&lt;/a&gt; parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="316250c84a4ace5eb4041bf64f366d5275ba2d1e" translate="yes" xml:space="preserve">
          <source>Builds AST based on the code within the &lt;a href=&quot;../../../../../groovy/lang/closure&quot;&gt;Closure&lt;/a&gt; parameter. This method &lt;strong&gt;must&lt;/strong&gt; be invoked at compile time and never at runtime, because an ASTTransformation must be run to support it. If you receive an IllegalStateException then you most likely need to add stronger typing. For instance, this will not work: &lt;code&gt;
      def builder = new AstBuilder()
      builder.buildFromCode {
             // some code
      }
 &lt;/code&gt; While this code will: &lt;code&gt;
      new AstBuilder().buildFromCode {
             // some code
      }
 &lt;/code&gt; The compiler rewrites buildFromCode invocations into &lt;a href=&quot;astbuilder#buildFromString(org.codehaus.groovy.control.CompilePhase,%20boolean,%20java.lang.String)&quot;&gt;AstBuilder.buildFromString&lt;/a&gt; invocations. An exception raised during AST generation will show a stack trace from &lt;a href=&quot;astbuilder#buildFromString(org.codehaus.groovy.control.CompilePhase,%20boolean,%20java.lang.String)&quot;&gt;AstBuilder.buildFromString&lt;/a&gt; and not from &lt;a href=&quot;astbuilder#buildFromCode(org.codehaus.groovy.control.CompilePhase,%20boolean,%20groovy.lang.Closure)&quot;&gt;AstBuilder.buildFromCode&lt;/a&gt; . The compiler saves the source code of the closure as a String within the Java class file. The String source of the closure will be visible and un-obfuscated within the class file. If your Closure parameter contains sensitive data such as a hard-coded password then that data is free to be seen by anyone with the class file. Do not store sensitive data within the closure parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d4ea45777b81213dcfa68f6f6251ce58e178e2d" translate="yes" xml:space="preserve">
          <source>Builds AST based on the code within the String parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d59d9558043bad194f7e4a06a23f0e6ecd2ce36f" translate="yes" xml:space="preserve">
          <source>Builds a Number from the given decimal descriptor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="486248824c0ace07781552bd665b7157eb532963" translate="yes" xml:space="preserve">
          <source>Builds a Number from the given decimal descriptor. Uses BigDecimal, unless, Double or Float is requested.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b385e179f5089333fcb6018f25b39561ddf4e07f" translate="yes" xml:space="preserve">
          <source>Builds a Number from the given integer descriptor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82627441a13e16000206d493551f8cbe91ee3295" translate="yes" xml:space="preserve">
          <source>Builds a Number from the given integer descriptor. Creates the narrowest type possible, or a specific type, if specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c33ec3968abd5def750bd5d77b294796417a316c" translate="yes" xml:space="preserve">
          <source>Builds a binary expression that compares two values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="039a3bd92d993b550ebcb4864ede7fa85e757179" translate="yes" xml:space="preserve">
          <source>Builds a complete meta map graph for a given target and descriptor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="361a2133f50a8027d48de5a201145e51f42e9242" translate="yes" xml:space="preserve">
          <source>Builds a complete meta map graph for the specified object using default values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abc33c57b7ab4579760c9a76a1e35e6168ad482a" translate="yes" xml:space="preserve">
          <source>Builds a complete meta map graph for the specified object using default values. All generated attributes are set to read-only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcde3cccedc0547b2d0788821d0dfcdac9b99e84" translate="yes" xml:space="preserve">
          <source>Builds a default JMX ObjectName instance using meta data from object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e13b2d743ad3794d5f160518003a72fcd5e5868" translate="yes" xml:space="preserve">
          <source>Builds a default ObjectName() instance for a given backing POJO/POGO</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4a2d540e936871a04c7ace4524c189f0616f6ac" translate="yes" xml:space="preserve">
          <source>Builds a fully normalized constructor meta map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc658bdb8226f1e5a3f85e8d8eef8ce03b09de75" translate="yes" xml:space="preserve">
          <source>Builds a fully normalized parameter meta map for the method and the given meta map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a150ad9f829fcd691e2815b237ab5cddadcf3ad4" translate="yes" xml:space="preserve">
          <source>Builds a normalized parameter meta map for all params on provided method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f8a48299dfc34af697e7bc7529d1bb38a936714" translate="yes" xml:space="preserve">
          <source>Builds a parametrized class node for List, to represent List&amp;lt;X&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f1ed7cbb0140be67243fcdec8365b37608f8187" translate="yes" xml:space="preserve">
          <source>Builds a parametrized class node representing the Map&amp;lt;keyType,valueType&amp;gt; type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9bbe0ee51c0ba3d081bf5c50c4e60eb33e12348" translate="yes" xml:space="preserve">
          <source>Builds a trampolined variant of the current closure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f1ff7f21174869593231416c04f47968e3466e2" translate="yes" xml:space="preserve">
          <source>Builds a trampolined variant of the current closure. To prevent stack overflow due to deep recursion, functions can instead leverage the trampoline mechanism and avoid recursive calls altogether. Under trampoline, the function is supposed to perform one step of the calculation and, instead of a recursive call to itself or another function, it return back a new closure, which will be executed by the trampoline as the next step. Once a non-closure value is returned, the trampoline stops and returns the value as the final result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb2321d01e6f6e0ac51896fcdc4d66a9f60609ae" translate="yes" xml:space="preserve">
          <source>Builds a trampolined variant of the current closure. To prevent stack overflow due to deep recursion, functions can instead leverage the trampoline mechanism and avoid recursive calls altogether. Under trampoline, the function is supposed to perform one step of the calculation and, instead of a recursive call to itself or another function, it return back a new closure, which will be executed by the trampoline as the next step. Once a non-closure value is returned, the trampoline stops and returns the value as the final result. Here is an example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a56fc8236dfd2556a0a7aca730e537c497a30b98" translate="yes" xml:space="preserve">
          <source>Builds a type checking extension relying on a Groovy script (type checking DSL).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b38b258d7202983c1c08a9abd6a2a0ecc5f783b8" translate="yes" xml:space="preserve">
          <source>Builds an &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/org/xml/sax/Attributes.html&quot;&gt;Attributes&lt;/a&gt; from a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Map.html&quot;&gt;Map&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c681512550669f80958551b5650f05424ace076a" translate="yes" xml:space="preserve">
          <source>Builds an HTML page from the structure of DefaultGroovyMethods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7300ef896562b71b05a31a716eff8f4f35318ff" translate="yes" xml:space="preserve">
          <source>Builds attribute meta map with default information from an instance of an object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbfe112508e7c95f1af56bf8b504d77e6fec4f59" translate="yes" xml:space="preserve">
          <source>Builds normalized meta map of the provided listener descriptor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42c2ae0313432ed6ff123f3359ea9fb184f16017" translate="yes" xml:space="preserve">
          <source>Builds the AST from the parse tree generated by Antlr4.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c12e5479ee79bbe05e66ccf882da0e46f751a54" translate="yes" xml:space="preserve">
          <source>Bumped when inside '[x]' or '(x)', reset inside '{x}'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14f2d4da73b5b88a37e532ada28879df148c79ac" translate="yes" xml:space="preserve">
          <source>Bumped when inside '[x]' or '(x)', reset inside '{x}'. See ONE_NL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bfe6395f20bad83c6c01e92273d93d6af88a39e" translate="yes" xml:space="preserve">
          <source>But this is not usually necessary in practice. For example, it is generally inefficient to write:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7f981415e2d7855c14455cedba97dfd3b469cbc" translate="yes" xml:space="preserve">
          <source>By default a conditional check is added to the start of all user-defined methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c9a325488648b8a7b34263e43d063fa679d2257" translate="yes" xml:space="preserve">
          <source>By default a conditional check is added to the start of all user-defined methods. To turn this off simply set this parameter to false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a51238d9ccecb39763d78e518a327c9c4c537e46" translate="yes" xml:space="preserve">
          <source>By default a field will be initialized by calling its default constructor. If the field has an initial value expression then this expression will be used instead of calling the default constructor. In particular, it is possible to use closure &lt;code&gt;{ ... } ()&lt;/code&gt; syntax as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9e4f7014b99353960f05327006a62e8a394e59f" translate="yes" xml:space="preserve">
          <source>By default a time check is added to the start of all user-defined methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f3ae5d341298b5bc7de870b305a30443c6721e6" translate="yes" xml:space="preserve">
          <source>By default a time check is added to the start of all user-defined methods. To turn this off simply set this parameter to false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21ba3c08d53701002e43d74d04bb2a80f7ff7b87" translate="yes" xml:space="preserve">
          <source>By default an isInterrupted check is added to the start of all user-defined methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8ee9a439d95c4f6493d29bfe102d404da67ffa8" translate="yes" xml:space="preserve">
          <source>By default an isInterrupted check is added to the start of all user-defined methods. To turn this off simply set this parameter to false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e7d7152d5ab9a7237ea9095de6ca998cb2b8f5c" translate="yes" xml:space="preserve">
          <source>By default it is set to true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84be07948f2001c6fd41eeac6a7fedb25ff83dc0" translate="yes" xml:space="preserve">
          <source>By default the URI will be made absolute (which is to say it will have an authority) in the case where a relative path was used for the source of the script. If you want to leave relative URIs as relative, then set &lt;code&gt;allowRelative&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ba95fc5134f878da2c3d58b9894e55646646eeb" translate="yes" xml:space="preserve">
          <source>By default the fully-qualified class name is used as part of the generated toString. If you want to exclude the package, you can set the includePackage flag to false, e.g.:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="655acc175c017657125f098072d17d345ea83c0d" translate="yes" xml:space="preserve">
          <source>By default the registry contains runners that are capable of running &lt;code&gt;JUnit 3&lt;/code&gt; and &lt;code&gt;JUnit 4&lt;/code&gt; test classes if those libraries are available to the class loader.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a1f39ca7530a9695d6afeebd1e43a58b1b5602a" translate="yes" xml:space="preserve">
          <source>By default, Groovy properties are set directly using their respective field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f504aa7e614031795f2a85d9c548b459f81ef10" translate="yes" xml:space="preserve">
          <source>By default, Groovy properties are set directly using their respective field. By setting &lt;code&gt;useSetters=true&lt;/code&gt; then a writable property will be set using its setter. If turning on this flag we recommend that setters that might be called are made null-safe wrt the parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fedf27997f7e3b74207fe5e5d76b2cf4eb1fb3c" translate="yes" xml:space="preserve">
          <source>By default, Groovy uses a &lt;a href=&quot;numberawarecomparator&quot;&gt;NumberAwareComparator&lt;/a&gt; when determining if an element exists in both collections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ffac2ad4ab543bf2fcdd2d38c88d4e8d1efb546" translate="yes" xml:space="preserve">
          <source>By default, a PrintWriter to System.out is used as the Writer, but it is possible to change the Writer by passing a new one as a constructor argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffc4c7a985418bac773386b24be4a102275f7de6" translate="yes" xml:space="preserve">
          <source>By default, methods of the delegate type marked as &lt;code&gt;@Deprecated&lt;/code&gt; are not automatically added to the owner class (but see the technical note about interfaces below). You can force these methods to be added by setting the annotation's &lt;code&gt;deprecated&lt;/code&gt; element to true, i.e. &lt;code&gt;@Delegate(deprecated = true)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c965cbfba0118bc981fea257ea43441f61a06511" translate="yes" xml:space="preserve">
          <source>By default, properties are set directly using their respective field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2eb432fa62ae6e71bb434e6aeb824aef789afea" translate="yes" xml:space="preserve">
          <source>By default, properties are set directly using their respective field. By setting &lt;code&gt;useSetters=true&lt;/code&gt; then a writable property will be set using its setter. If turning on this flag we recommend that setters that might be called are made null-safe wrt the parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0725eadfa436e541936859878ea00986fbfaa51a" translate="yes" xml:space="preserve">
          <source>By default, the Grapes subsystem uses an Ivy chained resolver. Each resolver added using &lt;code&gt;@GrabResolver&lt;/code&gt; is appended to the chain. By default, the grape subsystem is shared globally, so added resolvers will become available for any subsequent grab calls. Dependency resolution follows Ivy's artifact resolution which tries to resolve artifacts in the order specified in the chain of resolvers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d42ba826c5e99e38ada17a23579ed3ca4d0f989" translate="yes" xml:space="preserve">
          <source>By default, the TemplateServer uses the &lt;a href=&quot;../text/simpletemplateengine&quot;&gt;SimpleTemplateEngine&lt;/a&gt; which interprets JSP-like templates. The init parameter &lt;code&gt;template.engine&lt;/code&gt; defines the fully qualified class name of the template to use:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="797548707d4632f2a4bf110b1466421bd925a38d" translate="yes" xml:space="preserve">
          <source>By default, the following types are supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4293db8a7a83867387a52b0dbf2c11899de8f272" translate="yes" xml:space="preserve">
          <source>By default, the owner class will also be modified to implement any interfaces implemented by the delegate type. So, in the example above, because &lt;code&gt;Date&lt;/code&gt; implements &lt;code&gt;Cloneable&lt;/code&gt; the following will be true:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a688457d63dcd52f44fe9b4d7a1592e4175de597" translate="yes" xml:space="preserve">
          <source>By default, this annotation becomes a no-op if you provide your own constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdbb16b398a9855a62bd4f196f2c495044251d1d" translate="yes" xml:space="preserve">
          <source>By default, this annotation becomes a no-op if you provide your own constructor. By setting &lt;code&gt;force=true&lt;/code&gt; then the tuple constructor(s) will be added regardless of whether existing constructors exist. It is up to you to avoid creating duplicate constructors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fd85ee6a717e53c7a8d51f626f3040e9802943b" translate="yes" xml:space="preserve">
          <source>By default, when a &lt;code&gt;@Grab&lt;/code&gt; annotation is used, a &lt;code&gt;Grape.grab()&lt;/code&gt; call is added to the static initializers of the class the annotatable node appears in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45dac5dbdb581242eb30941f06330829e7bbdb01" translate="yes" xml:space="preserve">
          <source>By default, when a &lt;code&gt;@Grab&lt;/code&gt; annotation is used, a &lt;code&gt;Grape.grab()&lt;/code&gt; call is added to the static initializers of the class the annotatable node appears in. If you wish to disable this, add &lt;code&gt;initClass=false&lt;/code&gt; to the annotation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36eb21ab721f4943e2aa34f70be1609810419ecc" translate="yes" xml:space="preserve">
          <source>By default, when a &lt;code&gt;@GrabResolver&lt;/code&gt; annotation is used, a &lt;code&gt;Grape.addResolver()&lt;/code&gt; call is added to the static initializers of the class the annotatable node appears in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0743d216064ce01bf14d27ef293cc07bf01cc3cd" translate="yes" xml:space="preserve">
          <source>By default, when a &lt;code&gt;@GrabResolver&lt;/code&gt; annotation is used, a &lt;code&gt;Grape.addResolver()&lt;/code&gt; call is added to the static initializers of the class the annotatable node appears in. If you wish to disable this, add &lt;code&gt;initClass=false&lt;/code&gt; to the annotation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83fdbbf54901cdb426e063deab88eb8b10016e94" translate="yes" xml:space="preserve">
          <source>By using &lt;a href=&quot;typecheckingmode#SKIP&quot;&gt;TypeCheckingMode.SKIP&lt;/a&gt;, static compilation can be skipped on an element within a class or method otherwise marked with CompileStatic. For example a class can be annotated with CompileStatic, and a method within can be marked to skip static checking to use dynamic language features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7803ee252527503b67d1eeb0deb252622746cebd" translate="yes" xml:space="preserve">
          <source>Byte</source>
          <target state="translated">Byte</target>
        </trans-unit>
        <trans-unit id="c3923561783558e1e0fb9f8530f1856c59b31400" translate="yes" xml:space="preserve">
          <source>Bytecode level interface for bootstrap methods used by invokedynamic. This class provides a logging ability by using the boolean system property groovy.indy.logging. Other than that this class contains the interfacing methods with bytecode for invokedynamic as well as some helper methods and classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff42de69b7923bc18e7ea5d3320e53d0483cb7d8" translate="yes" xml:space="preserve">
          <source>BytecodeProcessor</source>
          <target state="translated">BytecodeProcessor</target>
        </trans-unit>
        <trans-unit id="cb97a103842bc2515a885cdee5009eb96fdc70dd" translate="yes" xml:space="preserve">
          <source>CST to AST conversion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02aa27c390bbe8b45b7555a99ccb36b58e932cad" translate="yes" xml:space="preserve">
          <source>CSTNode</source>
          <target state="translated">CSTNode</target>
        </trans-unit>
        <trans-unit id="50338b3b242845e21a0ace9ae9684283d945fb52" translate="yes" xml:space="preserve">
          <source>Cache</source>
          <target state="translated">Cache</target>
        </trans-unit>
        <trans-unit id="d43501b9cedebd2ee7b5399c4b5a79baa8cb4991" translate="yes" xml:space="preserve">
          <source>Caches every created preparedStatement in Closure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e01c4bde13e03e4193c089392c67efe000b1f897" translate="yes" xml:space="preserve">
          <source>Caches the connection used while the closure is active.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bd508cb6bf0bff1af7ba2fff6770b907f932024" translate="yes" xml:space="preserve">
          <source>Caches the connection used while the closure is active. If the closure takes a single argument, it will be called with the connection, otherwise it will be called with no arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e2d2170f4edb319e3de5e0a706b2fc58b76c2f0" translate="yes" xml:space="preserve">
          <source>Calculate SHA-256 of the CharSequence instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9070418f7ac1ee23d82d563882492b6665641144" translate="yes" xml:space="preserve">
          <source>Calculate SHA-256 of the byte array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8755059c0bb9844c34f0c85a3d68d92a259f5499" translate="yes" xml:space="preserve">
          <source>Calculate md5 of the CharSequence instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f70079c4d54c0c2b478502598cdcad95c1807b61" translate="yes" xml:space="preserve">
          <source>Calculate md5 of the byte array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="061f139d09f6e8a6e596d5522021bc1b88d989a0" translate="yes" xml:space="preserve">
          <source>Calculate probably desired indentation based on parenthesis balance and last char, as well as what the user used last as indentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3db29ac90e83e23b1900b56cd99dfa84b0d490b" translate="yes" xml:space="preserve">
          <source>Calculate the dimension of array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cccc414e15ac6278ff1488fd11bb09876b783d91" translate="yes" xml:space="preserve">
          <source>Calculates directory size as total size of all its files, recursively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4add06fe46c8050c4134466054afa5d0acb26dfb" translate="yes" xml:space="preserve">
          <source>Calculates the average of the bytes in the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa1d7c9ebee4facbe1b20de2ea00d160cb5e73c2" translate="yes" xml:space="preserve">
          <source>Calculates the average of the doubles in the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f20087493f879662a8b00e6f7785ae17443bf85" translate="yes" xml:space="preserve">
          <source>Calculates the average of the floats in the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a284896fd5890ccc4e0ef60fbc9d454e58b84a38" translate="yes" xml:space="preserve">
          <source>Calculates the average of the ints in the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d63300e693bc6b5c6b2946f2421493935608c71b" translate="yes" xml:space="preserve">
          <source>Calculates the average of the longs in the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d51d39c09e4e65e80d34ae80ccb071c7389e0073" translate="yes" xml:space="preserve">
          <source>Calculates the average of the shorts in the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4f1bcf92ee77b644142ee7f5c85233e21787c13" translate="yes" xml:space="preserve">
          <source>Calculates the init values of this Iterable: the first value will be this list of all items from the iterable and the final one will be an empty list, with the intervening values the results of successive applications of init on the items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ce240eacb3c41c1b105b432ac4b0e183236aa3a" translate="yes" xml:space="preserve">
          <source>Calculates the number of days between two dates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebe50411c0594ac8997d225b208355210a333c59" translate="yes" xml:space="preserve">
          <source>Calculates the tail values of this Iterable: the first value will be this list of all items from the iterable and the final one will be an empty list, with the intervening values the results of successive applications of tail on the items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adab5090ac6a1b7b5420faac7be86c41721ba27c" translate="yes" xml:space="preserve">
          <source>Calendar</source>
          <target state="translated">Calendar</target>
        </trans-unit>
        <trans-unit id="772c92dc9abc5fdb93793f5d9f6becb613e10af0" translate="yes" xml:space="preserve">
          <source>Calendar index values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca32e284a203cfeb8d7d18a144f54ba6ebc6d2e7" translate="yes" xml:space="preserve">
          <source>Calendar.DATE</source>
          <target state="translated">Calendar.DATE</target>
        </trans-unit>
        <trans-unit id="2f4ec4020e829fd56b38c20800ad684fe029661d" translate="yes" xml:space="preserve">
          <source>Calendar.HOUR_OF_DAY</source>
          <target state="translated">Calendar.HOUR_OF_DAY</target>
        </trans-unit>
        <trans-unit id="48e1035a081859f390b5aa71d32a8b2042bf87ea" translate="yes" xml:space="preserve">
          <source>Calendar.MINUTE</source>
          <target state="translated">Calendar.MINUTE</target>
        </trans-unit>
        <trans-unit id="18796d11e297becf3666313b8e14f7069c72ff5d" translate="yes" xml:space="preserve">
          <source>Calendar.MONTH</source>
          <target state="translated">Calendar.MONTH</target>
        </trans-unit>
        <trans-unit id="583ad43db5dd0f4777954e5fc24cf91ff2c7ea74" translate="yes" xml:space="preserve">
          <source>Calendar.SECOND</source>
          <target state="translated">Calendar.SECOND</target>
        </trans-unit>
        <trans-unit id="b9417fb74cb6ada8ee86cfab9f4beb8af7c68161" translate="yes" xml:space="preserve">
          <source>Calendar.YEAR</source>
          <target state="translated">Calendar.YEAR</target>
        </trans-unit>
        <trans-unit id="a87a20f08f4cd7be6a3150b26a2f482f4cf6118e" translate="yes" xml:space="preserve">
          <source>Calendar.set</source>
          <target state="translated">Calendar.set</target>
        </trans-unit>
        <trans-unit id="a063322c1a916e5aa29419174e4aea8ed172dd2b" translate="yes" xml:space="preserve">
          <source>Call &lt;a href=&quot;#StaticImportVisitor(org.codehaus.groovy.ast.ClassNode,%20org.codehaus.groovy.control.SourceUnit)&quot;&gt;StaticImportVisitor(ClassNode,SourceUnit)&lt;/a&gt; then &lt;a href=&quot;#visitClass(org.codehaus.groovy.ast.ClassNode)&quot;&gt;visitClass(ClassNode)&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99ec42d174fe6e2b1c5dde3b35870bb2a2fba56c" translate="yes" xml:space="preserve">
          <source>Call &lt;a href=&quot;#andThen(groovy.lang.Closure)&quot;&gt;andThen(Closure)&lt;/a&gt; on &lt;code&gt;this&lt;/code&gt; exactly &lt;code&gt;times&lt;/code&gt; times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68d945cfd29b5d7d818a3bc15d23874fe0415eaa" translate="yes" xml:space="preserve">
          <source>Call &lt;a href=&quot;#andThen(groovy.lang.Closure)&quot;&gt;andThen(Closure)&lt;/a&gt; on &lt;code&gt;this&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22a6a017ba2496a7e00b8747b1088f3160955009" translate="yes" xml:space="preserve">
          <source>Call &lt;a href=&quot;#compose(groovy.lang.Closure)&quot;&gt;compose(Closure)&lt;/a&gt; on &lt;code&gt;this&lt;/code&gt; exactly &lt;code&gt;times&lt;/code&gt; times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b4dbf086b1d3b167f90827eae0d968bcd3b9d01" translate="yes" xml:space="preserve">
          <source>Call &lt;a href=&quot;#compose(groovy.lang.Closure)&quot;&gt;compose(Closure)&lt;/a&gt; on &lt;code&gt;this&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c64a952f78f339e93cb7cbcd1d6be7f87531078" translate="yes" xml:space="preserve">
          <source>Call invokeConstructor on adaptee with logic like in MetaClass unless we have an Interceptor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3560a506e51ae1c7a7c259db40d5a0aea79a943f" translate="yes" xml:space="preserve">
          <source>Call invokeConstructor on adaptee with logic like in MetaClass unless we have an Interceptor. With Interceptor the call is nested in its beforeInvoke and afterInvoke methods. The method call is suppressed if Interceptor.doInvoke() returns false. See Interceptor for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c588386f719f1375f8512e775509c1491e4ba13" translate="yes" xml:space="preserve">
          <source>Call invokeMethod on adaptee with logic like in MetaClass unless we have an Interceptor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="974e9a60323b1e2460b91bec27be73db92e688ae" translate="yes" xml:space="preserve">
          <source>Call invokeMethod on adaptee with logic like in MetaClass unless we have an Interceptor. With Interceptor the call is nested in its beforeInvoke and afterInvoke methods. The method call is suppressed if Interceptor.doInvoke() returns false. See Interceptor for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e6a50e505505c3f9b4da3293f45eb1cdc03b7b9" translate="yes" xml:space="preserve">
          <source>Call invokeStaticMethod on adaptee with logic like in MetaClass unless we have an Interceptor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cca9e9f6a2caeb15cdbb39808c2f8357568e3ad4" translate="yes" xml:space="preserve">
          <source>Call invokeStaticMethod on adaptee with logic like in MetaClass unless we have an Interceptor. With Interceptor the call is nested in its beforeInvoke and afterInvoke methods. The method call is suppressed if Interceptor.doInvoke() returns false. See Interceptor for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98e3dd4198c47656f31143ad471a33f8f07ee0fe" translate="yes" xml:space="preserve">
          <source>Call site for GroovyInterceptable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7056bb62d557ed81af273af13f4ef60c96237892" translate="yes" xml:space="preserve">
          <source>Call site for constructor meta class - cached method - not cached</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="587ddc4b2504f7fedf2ffa2ae2680db53d87c99b" translate="yes" xml:space="preserve">
          <source>Call site for invoking static methods meta class - cached method - not cached</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="467fc1537be5d10fa948a83660bf307a8d341d50" translate="yes" xml:space="preserve">
          <source>Call site where we know there is no need neither unwrap nor coerce arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05e31396bc9d33e68f48e4358637b413f712c365" translate="yes" xml:space="preserve">
          <source>Call site where we know there is no need to unwrap arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67996944518a08d7e03248252dfa6a03a8ebda3c" translate="yes" xml:space="preserve">
          <source>Call site which caches meta method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abf9b768a9377dfa8fd4d0511fab29e49e914d4b" translate="yes" xml:space="preserve">
          <source>Call site which holds reference to meta class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46d3046bfd3ff1a8e379651d95fb177861945fbb" translate="yes" xml:space="preserve">
          <source>Call the closure once for each row in the result set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86b02f5fc520a3e2921b7c15fdfbbce31543f0a3" translate="yes" xml:space="preserve">
          <source>Call the named method of the given object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f369f98f4cc94f0ac73eed491e13a4d5bbed90f5" translate="yes" xml:space="preserve">
          <source>Call to disable the global use of ExpandoMetaClass</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9660f649382728276fd1cda97a562f8c0185546" translate="yes" xml:space="preserve">
          <source>Call to enable global use of ExpandoMetaClass within the registry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="609e31574a343eaee3946f45965413d4378ada17" translate="yes" xml:space="preserve">
          <source>Call to enable global use of ExpandoMetaClass within the registry. This has the advantage that inheritance will function correctly and metaclass modifications will also apply to existing objects, but has a higher memory usage on the JVM than normal Groovy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7620c3dc530a9afe0caca356dd2c3b1cdcd36aed" translate="yes" xml:space="preserve">
          <source>CallSite</source>
          <target state="translated">CallSite</target>
        </trans-unit>
        <trans-unit id="3b55289fd0c473d42c2d6be6391e6a9f53a24056" translate="yes" xml:space="preserve">
          <source>Callable</source>
          <target state="translated">Callable</target>
        </trans-unit>
        <trans-unit id="259d6e9cf657c24961a6ce90dc6c1938589b693c" translate="yes" xml:space="preserve">
          <source>Callable&amp;lt;&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html&quot;&gt;Boolean&lt;/a&gt;&amp;gt;</source>
          <target state="translated">Callable&amp;lt;&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html&quot;&gt;Boolean&lt;/a&gt;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="d451fd9688de636bc44d46a807f6364a1af86187" translate="yes" xml:space="preserve">
          <source>Callback called whenever an assignment transforms an effectively final variable into a non final variable (aka, breaks the &quot;final&quot; modifier contract)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a140b0aae4ca5fd88d168c139c3de8e5d04aff24" translate="yes" xml:space="preserve">
          <source>Callback for constant meta class update change</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b210c26f11c6002791315544f6a4dd4711ca12f8" translate="yes" xml:space="preserve">
          <source>Callback used whenever a variable is declared as final, but can remain in an uninitialized state</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a03ac2019985a1b8d04a0993f353d1f8153f5987" translate="yes" xml:space="preserve">
          <source>Called by &lt;a href=&quot;templateservlet#init(ServletConfig)&quot;&gt;TemplateServlet.init&lt;/a&gt; and returns just &lt;code&gt;new groovy.text.SimpleTemplateEngine()&lt;/code&gt; if the init parameter &lt;code&gt;template.engine&lt;/code&gt; is not set by the container configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a133c9d7b3968b926bd25cd00351d98a26a8d6e8" translate="yes" xml:space="preserve">
          <source>Called from ExpandoMetaClassCreationHandle in the registry if it exists to set up inheritance handling</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7030176d7cee1be8901f8d6e99df08ca4de1430" translate="yes" xml:space="preserve">
          <source>Called on method call checks in order to determine if a method call corresponds to the idiomatic o.with { ... } structure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd0e465a1501aa4c0c648d3332d7506d03b226c4" translate="yes" xml:space="preserve">
          <source>Called to broadcast message on MBeanServer event bus.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab8909d79bc02fea582382f81f08a515cff8f738" translate="yes" xml:space="preserve">
          <source>Called to broadcast message on MBeanServer event bus. Internally, it calls NotificationBroadCasterSupport.sendNotification() method to dispatch the event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a2928f880ffe12cdc9d79574b25ec1ea8953847" translate="yes" xml:space="preserve">
          <source>Called when a factory is registered to a builder</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9aa9885d305009da7fa80b47cac38e4a116db887" translate="yes" xml:space="preserve">
          <source>Called when the a constant MetaClass is updated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38d6c96c3081c4170f870c2537f7745c1a477b00" translate="yes" xml:space="preserve">
          <source>Called when the a constant MetaClass is updated. If the new MetaClass is null, then the MetaClass is removed. Be careful, while this method is executed other updates may happen. If you want this method thread safe, you have to take care of that by yourself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a11847485ca992e43f27145e21b4c6768fceb295" translate="yes" xml:space="preserve">
          <source>Called when we detect a change somewhere down our path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ae7848a81e21ee9c9ba851c618d2565d7d2395d" translate="yes" xml:space="preserve">
          <source>Called when we detect a change somewhere down our path. First, check to see if our object is changing. If so remove our old listener Next, update the reference object the children have and recurse Finally, add listeners if we have a different object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="969d597088f87c15387ce6fa41700b17b7813b85" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;template.make(binding)&lt;/code&gt;, curries in the 'binding' argument:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8d5b3c0b02b8aad6a3d09758735fca94891c971" translate="yes" xml:space="preserve">
          <source>Calls the provided closure for a &quot;page&quot; of rows from the table represented by this DataSet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d62cae08a8219c7f0f7b4ba94b24f10afb2c3148" translate="yes" xml:space="preserve">
          <source>Calls the provided closure for a &quot;page&quot; of rows from the table represented by this DataSet. A page is defined as starting at a 1-based offset, and containing a maximum number of rows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="126fd51c1a5e787e7b9e46a5f1060129b46b2f9a" translate="yes" xml:space="preserve">
          <source>Calls the provided closure for all the nodes in the tree using a breadth-first preorder traversal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a9cbb768e76edac76397b02c402d55b8569828b" translate="yes" xml:space="preserve">
          <source>Calls the provided closure for all the nodes in the tree using a breadth-first traversal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e3fb721d28063baaf0d584cefd7aeb3b7adcf71" translate="yes" xml:space="preserve">
          <source>Calls the provided closure for all the nodes in the tree using a breadth-first traversal. A boolean 'preorder' options is supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="076d4752d7154b480cbb52a6156a994d6cc11426" translate="yes" xml:space="preserve">
          <source>Calls the provided closure for each of the rows of the table represented by this DataSet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0c3066c1bbb123255270bf20aa546a1adbb327c" translate="yes" xml:space="preserve">
          <source>Can also be used from &lt;a href=&quot;../../../../groovy/ant/antbuilder&quot;&gt;AntBuilder&lt;/a&gt; to allow the build file to be scripted in Groovy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c584d24bdc89554174b056adeabdbeb36a9630d3" translate="yes" xml:space="preserve">
          <source>Candidates that are directories will end with &quot;File.separator&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52e10d5a13daa7be26d70c5bce957fbb3bf9a84d" translate="yes" xml:space="preserve">
          <source>Canonical</source>
          <target state="translated">Canonical</target>
        </trans-unit>
        <trans-unit id="5d4dbc76503e669ce17161c331766c71ac619b58" translate="yes" xml:space="preserve">
          <source>Capitalize the string passed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e2cb6829e6943cde734364ec832cfb82b4efb92" translate="yes" xml:space="preserve">
          <source>Capitalizes the start of the given bean property name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e77bd84467a318a69174f8c2d91cda5e4af84e38" translate="yes" xml:space="preserve">
          <source>CaretListener</source>
          <target state="translated">CaretListener</target>
        </trans-unit>
        <trans-unit id="743ae89131df693dc925e9155e21e7cbd9fcbb52" translate="yes" xml:space="preserve">
          <source>Cast invocation type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6cf4966e12e2cf9f773a40d2461d3a74dae74d6" translate="yes" xml:space="preserve">
          <source>Catch obvious constructor calls, but not the expr.super(...) calls</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed37d9d58b76439530adb10e81af8a847ec9c828" translate="yes" xml:space="preserve">
          <source>Catching &lt;code&gt;Throwable&lt;/code&gt; around a recursive might lead to problems</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da115867cbf248eb29d3806608561aa1f3e55f41" translate="yes" xml:space="preserve">
          <source>Category class which adds GPath style operations to Java's DOM classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bbbc323c1748b8a495921973e041804d9f4ca09" translate="yes" xml:space="preserve">
          <source>Caters for Groovy's lazy (rcurry) and eager (ncurry) calculation of argument position</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="267ad4c00ac45b00d58e4a9f0a93226675a84899" translate="yes" xml:space="preserve">
          <source>Causes automatic updating of bound values to be turned off.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fdd69ee83b60576c4fb63b947ebafe104f39629" translate="yes" xml:space="preserve">
          <source>Causes automatic updating of bound values to be turned off. This is idempotent between calls to bind and rebind; i.e. multiple calls to unbind will have only the effect of the first call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6478a3812529e4ce578c04af5f6697dfe7bfd80b" translate="yes" xml:space="preserve">
          <source>Causes automatic updating of bound values to be turned on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba27b529ddcfd1b89c8683e72410ee38958f375c" translate="yes" xml:space="preserve">
          <source>Causes automatic updating of bound values to be turned on. This is idempotent between calls to unbind and rebind; i.e. multiple calls to bind will have only the effect of the first call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71c02d6396bcb3ccc1ff95223dabc7cbe8e4e13a" translate="yes" xml:space="preserve">
          <source>Causes the current bindings to be reset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b00c8235af340b2c70c34d84a0cc3f4062e0f706" translate="yes" xml:space="preserve">
          <source>Causes the current bindings to be reset. If the binding is not bound, it is a no-op. If the binding is bound, it will be turned off, then turned on against current values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f9212328e0c1e4dfe6b32b7a4569e7a0aa48c5e" translate="yes" xml:space="preserve">
          <source>Causes the current phase to fail by throwing a CompilationFailedException.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca8f428417354eb34a5266626bf59dd31dbb576b" translate="yes" xml:space="preserve">
          <source>Causes the execution of all registered listeners.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9208ad336bf17493531d520f7c8151996bc4030c" translate="yes" xml:space="preserve">
          <source>Causes the execution of all registered listeners. This method is used mostly internal to kick of the listener notification. It can also be used by subclasses to achieve the same.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="807d211a4ed32a8ec79b334dfdf26b5e526ff1de" translate="yes" xml:space="preserve">
          <source>Causes the state-stack to add an element and sets the given scope as new current variable scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41abfa792d32fb3336cee9c922394b2d08bef1f5" translate="yes" xml:space="preserve">
          <source>Causes the state-stack to add an element and sets the given scope as new current variable scope. Creates a element for the state stack so pop has to be called later</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="232cf110d66956abc6d73342eb7d3e2a70641b92" translate="yes" xml:space="preserve">
          <source>Causes the values to be propagated from the source to the target</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d37c86a6780224292216af1146b18b513fa8661" translate="yes" xml:space="preserve">
          <source>Certain &quot;suspicious&quot; looking forms are flagged for the user to disambiguate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7b6002071a1b268c9a0cb7f1fd16ae354372b00" translate="yes" xml:space="preserve">
          <source>Changes generated methods to have empty implementations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdfab928c4993d64d6a076257f161215019ae627" translate="yes" xml:space="preserve">
          <source>Changes the writer associated with this interceptor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee352e16ffeb4d6a086bccab16f296b15acb8cc9" translate="yes" xml:space="preserve">
          <source>CharSequence</source>
          <target state="translated">CharSequence</target>
        </trans-unit>
        <trans-unit id="359ef38d5fba82ebfc52a5171c0b3b6d86777f45" translate="yes" xml:space="preserve">
          <source>CharSequence after removing the right &lt;code&gt;num&lt;/code&gt; chars and empty of the &lt;code&gt;num&lt;/code&gt; is greater than the length of the CharSequence</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d7aedbff93341bdc7a93d7de189ca5b697a9c38" translate="yes" xml:space="preserve">
          <source>CharSequence between the 2 subsequent &lt;code&gt;enclosure&lt;/code&gt; strings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="038ab4c966b7481cd301ed06a5d600161c47d822" translate="yes" xml:space="preserve">
          <source>CharSequence between the nth occurrence of pair of &lt;code&gt;enclosure&lt;/code&gt; strings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0e102098558bcc68ca5971131c20f6baef33142" translate="yes" xml:space="preserve">
          <source>CharSequence that is after the given searchString and empty string if it does not exist</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb0b0e3a4bd23af073b8fb3fa146b2e7d1ba1789" translate="yes" xml:space="preserve">
          <source>CharSequence that is before the given searchString</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee9946c82d4a077c5be79e3015a3d2479d9fcaf2" translate="yes" xml:space="preserve">
          <source>Character</source>
          <target state="translated">Character</target>
        </trans-unit>
        <trans-unit id="be7dedcdf5ac8e7774a6f89cce7723ab2a3d8704" translate="yes" xml:space="preserve">
          <source>Character.isDigit</source>
          <target state="translated">Character.isDigit</target>
        </trans-unit>
        <trans-unit id="c9af4f898f44300ae9f8791f963af803f3ed0e1c" translate="yes" xml:space="preserve">
          <source>Character.isLetter</source>
          <target state="translated">Character.isLetter</target>
        </trans-unit>
        <trans-unit id="d6e250129cef55312ba3086c798fde7ce3341507" translate="yes" xml:space="preserve">
          <source>Character.isLetterOrDigit</source>
          <target state="translated">Character.isLetterOrDigit</target>
        </trans-unit>
        <trans-unit id="6aecb418733d7dd674d9c2ab758909c990a0c9c7" translate="yes" xml:space="preserve">
          <source>Character.isLowerCase</source>
          <target state="translated">Character.isLowerCase</target>
        </trans-unit>
        <trans-unit id="19ae620af78a25691e0fd6ec62cd72364383d7fa" translate="yes" xml:space="preserve">
          <source>Character.isUpperCase</source>
          <target state="translated">Character.isUpperCase</target>
        </trans-unit>
        <trans-unit id="c5cfcc8c395827a19352e2b62aa04e55ef6570b2" translate="yes" xml:space="preserve">
          <source>Character.isWhitespace</source>
          <target state="translated">Character.isWhitespace</target>
        </trans-unit>
        <trans-unit id="59a42d359876821b7e25de5a565a68b37c107317" translate="yes" xml:space="preserve">
          <source>CharacterSource</source>
          <target state="translated">CharacterSource</target>
        </trans-unit>
        <trans-unit id="a3782968756fbd7e79f93afc40594857844f2ffe" translate="yes" xml:space="preserve">
          <source>Check IfStatement matched pattern : Object var1; if (!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce6ae49a1f70113bd15def6e3c938890c7c6f9aa" translate="yes" xml:space="preserve">
          <source>Check IfStatement matched pattern : Object var1; if (!(var1 instanceOf Runnable)) { return } // Here var1 instance of Runnable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bd74f0ede7b8b242086daa22e952b3920a041b0" translate="yes" xml:space="preserve">
          <source>Check IfStatement matched pattern : Object var1; if (var1 !</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49f67cdb53523e54335d85efeef64903a9a7d1dd" translate="yes" xml:space="preserve">
          <source>Check IfStatement matched pattern : Object var1; if (var1 !instanceOf Runnable) { return } // Here var1 instance of Runnable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b192316badd2a797c53d5db085e4188d5d1157df" translate="yes" xml:space="preserve">
          <source>Check for equality of non-null references x and y.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb7d6bd716916d0e207433ea3caf593a3ec84d16" translate="yes" xml:space="preserve">
          <source>Check if namespace handling is enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec0a72130e69a517ba5285bf5357d635ee39ea8d" translate="yes" xml:space="preserve">
          <source>Check if namespace handling is enabled. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc4df9f6eb104fb84e69e944aab3602dff2f7773" translate="yes" xml:space="preserve">
          <source>Check if the current runtime allows Annotation usage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="830acb4a8f02f6d6fcf25e9f47eee0ca5eb0a26e" translate="yes" xml:space="preserve">
          <source>Check if the object is initialized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23c5b31c6dd8085ab47bf7f145c378cb481f1c4c" translate="yes" xml:space="preserve">
          <source>Check if the verbosity level is set to Verbosity#DEBUG#DEBUG.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fee444867e567a560952deca7c07b06255dc54f2" translate="yes" xml:space="preserve">
          <source>Check if the verbosity level is set to Verbosity#INFO#INFO.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a14801ed17255248f01219fdb844df5eb83883e" translate="yes" xml:space="preserve">
          <source>Check if the verbosity level is set to Verbosity#QUIET#QUIET.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15b8f03886cf6bf32fb3fa0d0d6def8981ed7bb6" translate="yes" xml:space="preserve">
          <source>Check if the verbosity level is set to Verbosity#VERBOSE#VERBOSE.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c56b3ca5caa23108c43b914492197eb6db04872" translate="yes" xml:space="preserve">
          <source>Check if there are any recursive calls in a method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba5b5939a0cfaf875a54847bc0b5fef5100465f3" translate="yes" xml:space="preserve">
          <source>Check if this class loader has compatible &lt;a href=&quot;../../org/codehaus/groovy/control/compilerconfiguration&quot;&gt;CompilerConfiguration&lt;/a&gt; with the provided one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4804ded08a0d5c5b090931d467ac1ee37abebe2" translate="yes" xml:space="preserve">
          <source>Check if whitespace preservation is enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="922b890587a6d53370b44280dec8b15ddc3d18d6" translate="yes" xml:space="preserve">
          <source>Check if whitespace preservation is enabled. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7f652d7230141d609c91d6c1f3db051d782e47d" translate="yes" xml:space="preserve">
          <source>Check whether an &lt;code&gt;Iterable&lt;/code&gt; has elements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d2df2208b0f4c6526a398809fb2a75cc44067be" translate="yes" xml:space="preserve">
          <source>Check whether following a method name of command expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9b2e509b1ee1987f3e6924be2d4440f3d1be853" translate="yes" xml:space="preserve">
          <source>Check whether following a method name of command expression. Method name should not end with &quot;2: arguments&quot; and &quot;3: closure&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="571d4d4bdf15bd2e2ce245dcd196b27573d47955" translate="yes" xml:space="preserve">
          <source>Check whether invoking &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/reflect/AccessibleObject.html#setAccessible(boolean)&quot;&gt;AccessibleObject.setAccessible&lt;/a&gt; on the accessible object will be completed successfully</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afc7161d340783fb7bc75b6047daab343a15588d" translate="yes" xml:space="preserve">
          <source>Check whether the modifier is not an imagined modifier(annotation, def)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deb2380bced60bef6a80df85f9b15e1d97ae388f" translate="yes" xml:space="preserve">
          <source>Checking if a recursive call is really tail-recursive is not very strict. You might run into cases where non-tail calls will be considered tail calls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c8d3c6e41187a1f9a1ecf9e648af48a14af88be" translate="yes" xml:space="preserve">
          <source>Checks compatibility of parameter arrays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f47da1f14c3445bd0f19199e510bffcc22184586" translate="yes" xml:space="preserve">
          <source>Checks compatibility of parameter arrays. Each parameter should match the following condition: &lt;code&gt;sourceType.isAssignableTo(targetType)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5925a7e54bf5b30acc5f4f791e16b5edd3f92ab7" translate="yes" xml:space="preserve">
          <source>Checks for any placeholder (aka unresolved) generics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61f451e1c3f6a2e93f903936ee5a05b5938b81d9" translate="yes" xml:space="preserve">
          <source>Checks for dynamic variables in static contexts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b973bf223c85def24b6f0e5ef11d0296f960f915" translate="yes" xml:space="preserve">
          <source>Checks if a CharSequence is empty (&quot;&quot;) or null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="391516ccebe71859a9c4a7a7f404227a75b83189" translate="yes" xml:space="preserve">
          <source>Checks if a class node is assignable to another.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2662f25e7550ac986bdf4ce9704739c4cff275eb" translate="yes" xml:space="preserve">
          <source>Checks if a class node is assignable to another. This is used for example in assignment checks where you want to verify that the assignment is valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcd042fe455c493e6d3cb4fca038aae0ce183ffb" translate="yes" xml:space="preserve">
          <source>Checks if a config option is set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65f2c1c3cf5fcd860e2d590dba58a62e82166983" translate="yes" xml:space="preserve">
          <source>Checks if a config option is set. Example usage:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd3ec5b88971624744171f722db85a80a9006e43" translate="yes" xml:space="preserve">
          <source>Checks if groovydoc is enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d39f41b492960d910e820e68cbfc1bc5985505f" translate="yes" xml:space="preserve">
          <source>Checks if invoke dynamic is enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0047eda7463c0b5c59c02fb681ec5bbfd91862f" translate="yes" xml:space="preserve">
          <source>Checks if runtime groovydoc is enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b451009fb6e3bee7d4e5047dc90c66330b50a829" translate="yes" xml:space="preserve">
          <source>Checks if the given method has a possibly matching static method with the given name and arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e01d1a164e04d1dbc6f5d6c832759390d9433fba" translate="yes" xml:space="preserve">
          <source>Checks if the meta class is initialized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2f0b1506229138bcaff1864ff3c7c8b7806351a" translate="yes" xml:space="preserve">
          <source>Checks if the result contains (ignoring case) the given key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b82e027cc2e2e95704880fb8c70cc93516b4c9ce" translate="yes" xml:space="preserve">
          <source>Checks if the specified bytecode version string represents a JDK 1.5+ compatible bytecode version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29aa6c91bbb78ecbf336efe7bb2b11b038de35ec" translate="yes" xml:space="preserve">
          <source>Checks if the specified bytecode version string represents a JDK 1.7+ compatible bytecode version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9e96029de37d6460cd90b8e265f019395637960" translate="yes" xml:space="preserve">
          <source>Checks if the specified bytecode version string represents a JDK 1.8+ compatible bytecode version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6652b0a3ad7f4aab4d8b6b6c9506d0d8b7ab6a77" translate="yes" xml:space="preserve">
          <source>Checks if the type has any non-placeholder (aka resolved) generics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20ca8e04e772d501b9888ac58125c95a9ee117d7" translate="yes" xml:space="preserve">
          <source>Checks if the type has any placeholder (aka unresolved) generics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4adb0957f252bac2e5a443e75ffa5b1c14d228b3" translate="yes" xml:space="preserve">
          <source>Checks if the type is a generated function, i.e. closure or lambda.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a88a9b2c6fe650cecc0db422dc354fc15cfdf0e7" translate="yes" xml:space="preserve">
          <source>Checks include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55b16f900472e8c37b3a817718a4073d4bbd34e4" translate="yes" xml:space="preserve">
          <source>Checks that a class satisfies various conditions including:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99c47ff2d9f5f4dbf82029a943c3123a094ff995" translate="yes" xml:space="preserve">
          <source>Checks that a constructor style expression is valid regarding the number of arguments and the argument types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94b8905d9ce95154e63834e303f31add420c0d88" translate="yes" xml:space="preserve">
          <source>Checks that a given expression is either in the allowed list or not in the disallowed list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e685e0465bee4adef7373bd8b0fe8f782efd37b" translate="yes" xml:space="preserve">
          <source>Checks that a given statement is either in the allowed list or not in the disallowed list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6c5a6b94dba3213545f35cde5644c92fe725279" translate="yes" xml:space="preserve">
          <source>Checks that a given token is either in the allowed list or not in the disallowed list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09643cda48d47aededac30b5d0b1d23cfc37c36c" translate="yes" xml:space="preserve">
          <source>Checks that arguments and parameter types match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5e3b3a03e68145ef7af9c56c390f7876c395dbe" translate="yes" xml:space="preserve">
          <source>Checks that each member of the given collection are of the correct type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87008244d07dff5c1fe4371f070f8da9f6a11a11" translate="yes" xml:space="preserve">
          <source>Checks that the given object instance is of the correct type otherwise a runtime exception is thrown</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20383e1fd444f1978b0621e0adde46c044630627" translate="yes" xml:space="preserve">
          <source>Checks that the given parameters are valid to call this method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="687f4a7585c67ea78715a572ee3609f9a0e7ebd6" translate="yes" xml:space="preserve">
          <source>Checks that the parameterized generics of an argument are compatible with the generics of the parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09d25c3935e7e23b37cb97e490bb0d01cd928061" translate="yes" xml:space="preserve">
          <source>Checks to see if there is a next character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fbe2ca1182e2598977cb993f0f8ecf4bc7877c9" translate="yes" xml:space="preserve">
          <source>Checks type of value against builder type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce9dd808d32d72883911a9844c560d455930c9bf" translate="yes" xml:space="preserve">
          <source>Checks values against factory's type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0532fcbff983b9d1edcb3c4fb6427ba106751b60" translate="yes" xml:space="preserve">
          <source>Checks whether a Matcher contains a group or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7b47a996eed6f62b0662bdfdd1e848090940fff" translate="yes" xml:space="preserve">
          <source>Checks whether a MetaMethod for the given name and arguments exists</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a713eeb320dc917a4dc0e4ac0f78adb33782379" translate="yes" xml:space="preserve">
          <source>Checks whether a method is a core method from java.lang.Object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="415bd43ac112e3946a832feaa886822bd5c4ea57" translate="yes" xml:space="preserve">
          <source>Checks whether a method is a core method from java.lang.Object. Such methods often receive special treatment because they are deemed fundamental enough to not be tampered with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44286643885246215f636fdf2f313cca0a656c4c" translate="yes" xml:space="preserve">
          <source>Checks whether a method is a core method from java.lang.Object. Such methods often receive special treatment because they are deemed fundamental enough to not be tampered with. call toString() is an exception to allow overriding toString() by a closure specified in the map</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca85011e97dd43649c44d7e7b05e9d17b0fc9baf" translate="yes" xml:space="preserve">
          <source>Checks whether a property exists on the receiver, or on any of the possible receiver classes (found in the temporary type information table)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c93b4060213eef2ca9b03b6170ca21f817f28985" translate="yes" xml:space="preserve">
          <source>Checks whether a value is between the from and to values of a Range</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d8d9bf7a5d1730ece02b1d96e51bffc1337ef4d" translate="yes" xml:space="preserve">
          <source>Checks whether the array contains the given value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5507376aff3e462076c6f6d6294752f778f07d14" translate="yes" xml:space="preserve">
          <source>Checks whether this CharSequence contains the &lt;code&gt;searchString&lt;/code&gt; ignoring the caseConsiderations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef4b269e39767f9da321d75dd5ded1097b559cf5" translate="yes" xml:space="preserve">
          <source>Checks whether this CharSequence ends with the &lt;code&gt;searchString&lt;/code&gt; ignoring the case considerations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb2d4983fe9e94fa10d844d97afa1769afc53fb9" translate="yes" xml:space="preserve">
          <source>Checks whether this CharSequence starts with the &lt;code&gt;searchString&lt;/code&gt; ignoring the case considerations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="846ed1eb20736b0e9868b5d7e9575d9e1be24f95" translate="yes" xml:space="preserve">
          <source>Choose a method to replace the originally chosen metaMethod to have a more efficient call path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea498503dbf5132cbf1bc8c0c10855fba00a2c35" translate="yes" xml:space="preserve">
          <source>Chop this map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fe8b52dad4aae5d545e47eb9ab82e1d8283ddd1" translate="yes" xml:space="preserve">
          <source>Chops the Iterable into pieces, returning lists with sizes corresponding to the supplied chop sizes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="475df8783f4062e752cdf837b0f07aa1fb06f17e" translate="yes" xml:space="preserve">
          <source>Chops the Iterable into pieces, returning lists with sizes corresponding to the supplied chop sizes. If the Iterable isn't large enough, truncated (possibly empty) pieces are returned. Using a chop size of -1 will cause that piece to contain all remaining items from the Iterable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="379d74ce527a5fc30b3695a55347bb7ef8b68128" translate="yes" xml:space="preserve">
          <source>Chops the array into pieces, returning lists with sizes corresponding to the supplied chop sizes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d575693c99e81e328df1293d0a5f85318d9f89a4" translate="yes" xml:space="preserve">
          <source>Chops the array into pieces, returning lists with sizes corresponding to the supplied chop sizes. If the array isn't large enough, truncated (possibly empty) pieces are returned. Using a chop size of -1 will cause that piece to contain all remaining items from the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36d51459756155e056afa8254a4921361957c495" translate="yes" xml:space="preserve">
          <source>Chops the iterator items into pieces, returning lists with sizes corresponding to the supplied chop sizes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a88344431a53654cc507beecf5f0df392d952c30" translate="yes" xml:space="preserve">
          <source>Chops the iterator items into pieces, returning lists with sizes corresponding to the supplied chop sizes. If the iterator is exhausted early, truncated (possibly empty) pieces are returned. Using a chop size of -1 will cause that piece to contain all remaining items from the iterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41ff354b2b330bd1f8a0587675e43cb32a731f33" translate="yes" xml:space="preserve">
          <source>Class</source>
          <target state="translated">Class</target>
        </trans-unit>
        <trans-unit id="bb36cae4d6314f2f8a3986fd43b1703e24b15a5d" translate="yes" xml:space="preserve">
          <source>Class annotation to make a singleton class. The singleton is obtained through normal property access using the singleton property (defaults to &quot;instance&quot;). Such classes can be initialized during normal static initialization of the class or lazily (on first access). To make the singleton lazy use &lt;code&gt;@Singleton(lazy=true)&lt;/code&gt;. Lazy singletons are implemented with double-checked locking and a volatile backing field. By default, no explicit constructors are allowed. To create one or more explicit constructors use &lt;code&gt;@Singleton(strict=false)&lt;/code&gt;. This could be used to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad24812a657d43bfda2230788ee639670bc23074" translate="yes" xml:space="preserve">
          <source>Class annotation to make constructors from a super class available in a sub class. Should be used with care with other annotations which create constructors - see &quot;Known Limitations&quot; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d34b159a32a58978f5feeb8be9b853efeae6b1c2" translate="yes" xml:space="preserve">
          <source>Class annotation used as a marker for immutable classes. Not usually used explicitly but rather implicitly via the &lt;code&gt;@Immutable&lt;/code&gt; meta annotation which adds it automatically. If you create your own Java or Groovy immutable class manually, you can add this annotation if you don't want to have to list your class as one of the known immutable classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ff73da30222ef4e4d8f0990655215eb16680858" translate="yes" xml:space="preserve">
          <source>Class annotation used to assist in creating appropriate &lt;code&gt;equals()&lt;/code&gt; and &lt;code&gt;hashCode()&lt;/code&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ae2c0879c302f2f2781a7858388c53c5f007ffc" translate="yes" xml:space="preserve">
          <source>Class annotation used to assist in the creation of &lt;code&gt;Cloneable&lt;/code&gt; classes. The &lt;code&gt;@AutoClone&lt;/code&gt; annotation instructs the compiler to execute an AST transformation which adds a public &lt;code&gt;clone()&lt;/code&gt; method and adds &lt;code&gt;Cloneable&lt;/code&gt; to the list of interfaces which the class implements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc90a7b495a7e4e8e196bbaa25c1b61c9cf3874d" translate="yes" xml:space="preserve">
          <source>Class annotation used to assist in the creation of &lt;code&gt;Externalizable&lt;/code&gt; classes. The &lt;code&gt;@AutoExternalize&lt;/code&gt; annotation instructs the compiler to execute an AST transformation which adds &lt;code&gt;writeExternal()&lt;/code&gt; and &lt;code&gt;readExternal()&lt;/code&gt; methods to a class and adds &lt;code&gt;Externalizable&lt;/code&gt; to the interfaces which the class implements. The &lt;code&gt;writeExternal()&lt;/code&gt; method writes each property (or field) for the class while the &lt;code&gt;readExternal()&lt;/code&gt; method will read each one back in the same order. Properties or fields marked as &lt;code&gt;transient&lt;/code&gt; are ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61d85325e2a6a246b5a5a6327f68b2009d174d0a" translate="yes" xml:space="preserve">
          <source>Class annotation used to assist in the creation of &lt;code&gt;Externalizable&lt;/code&gt; classes. The &lt;code&gt;@ExternalizeMethods&lt;/code&gt; annotation instructs the compiler to execute an AST transformation which adds &lt;code&gt;writeExternal()&lt;/code&gt; and &lt;code&gt;readExternal()&lt;/code&gt; methods to a class and adds &lt;code&gt;Externalizable&lt;/code&gt; to the interfaces which the class implements. The &lt;code&gt;writeExternal()&lt;/code&gt; method writes each property (and optionally field) of the class while the &lt;code&gt;readExternal()&lt;/code&gt; method will read each one back in the same order. Properties or fields marked as &lt;code&gt;transient&lt;/code&gt; are ignored. This annotation is typically used in conjunction with the &lt;code&gt;@ExternalizeVerifier&lt;/code&gt; annotation but most usually not directly but rather via &lt;code&gt;@AutoExternalizable&lt;/code&gt; which is a shortcut for both annotations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f69890e6ca763857330987ca4658a1a3369bce4" translate="yes" xml:space="preserve">
          <source>Class annotation used to assist in the creation of &lt;code&gt;Externalizable&lt;/code&gt; classes. The &lt;code&gt;@ExternalizeVerifier&lt;/code&gt; annotation instructs the compiler to check that a class has &lt;code&gt;writeExternal()&lt;/code&gt; and &lt;code&gt;readExternal()&lt;/code&gt; methods, implements the &lt;code&gt;Externalizable&lt;/code&gt; interface and that each property (and optionally field) is not final and, optionally for non-primitives, has a type which is either &lt;code&gt;Externalizable&lt;/code&gt; or &lt;code&gt;Serializable&lt;/code&gt;. Properties or fields marked as &lt;code&gt;transient&lt;/code&gt; are ignored. This annotation is typically used in conjunction with the &lt;code&gt;@ExternalizeMethods&lt;/code&gt; annotation but most usually not directly but rather via &lt;code&gt;@AutoExternalizable&lt;/code&gt; which is a shortcut for both annotations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d32607790b07ec5abe2da53648f68b3ef17f36f" translate="yes" xml:space="preserve">
          <source>Class annotation used to assist in the creation of &lt;code&gt;toString()&lt;/code&gt; methods in classes. The &lt;code&gt;@ToString&lt;/code&gt; annotation instructs the compiler to execute an AST transformation which adds the necessary toString() method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2d29dd3f7c59a403822539ce3d28f2c8df41197" translate="yes" xml:space="preserve">
          <source>Class annotation used to assist in the creation of immutable classes. Checks on the validity of an immutable class and makes some preliminary changes to the class. Usually used via the &lt;code&gt;@Immutable&lt;/code&gt; meta annotation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a31bbd0be87b00707c44b1bf59e6332a48d5f35b" translate="yes" xml:space="preserve">
          <source>Class annotation used to assist in the creation of immutable classes. Defines any known immutable properties (or fields) or known immutable classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00682cf785588f3acdeba49e99f7c3c389ec781b" translate="yes" xml:space="preserve">
          <source>Class annotation used to assist in the creation of map constructors in classes. If the class is also annotated with &lt;code&gt;@ImmutableBase&lt;/code&gt;, then the generated constructor will contain additional code needed for immutable classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0ae563c36f89edf4fa42f1c6bc521238f97466c" translate="yes" xml:space="preserve">
          <source>Class annotation used to assist in the creation of tuple constructors in classes. If the class is also annotated with &lt;code&gt;@ImmutableBase&lt;/code&gt;, then the generated constructor will contain additional code needed for immutable classes. Should be used with care with other annotations which create constructors - see &quot;Known Limitations&quot; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31196d7d29df3e7d00890779ce917c0148e56218" translate="yes" xml:space="preserve">
          <source>Class annotation used to provide default dummy methods for a class extending an abstract super class or implementing one or more interfaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6627c2a3fabdc7d21b8826776e3ca49aeb29c40" translate="yes" xml:space="preserve">
          <source>Class field types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59a52c4788faa73409554c2b21154590ae60aa2f" translate="yes" xml:space="preserve">
          <source>Class for handling array access through invokedynamic using static callsite information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01f0fba9ee74a4c8ee463fd827ec0858550bc5f9" translate="yes" xml:space="preserve">
          <source>Class generation (pt.1)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9a992723a77427f1c4963b9c1977134be47a00f" translate="yes" xml:space="preserve">
          <source>Class providing various short paths for type conversions. Read the comments to what conditions have to be met to get valid results! Any method here must not depend on the groovy runtime.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3efcd6061a5332704b10c6cf4812f3031e23d76e" translate="yes" xml:space="preserve">
          <source>Class providing various type conversions, coercions and boxing/unboxing operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8604e0b9c4fa0ff345beb63d816e18e3fbec20ae" translate="yes" xml:space="preserve">
          <source>Class responsible for the actual String serialization of the possible values of a JSON structure. This class can also be used as a category, so as to add &lt;code&gt;toJson()&lt;/code&gt; methods to various types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5af796fed1312cd81d7a9ddf8b78dd1bbd4426f" translate="yes" xml:space="preserve">
          <source>Class to Class parsing a script to detect all bound and unbound variables. Based on http://glaforge.appspot.com/article/knowing-which-variables-are-bound-or-not-in-a-groovy-script</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb7ebcc32437ad0e642e37d807bca7c615bd8cf8" translate="yes" xml:space="preserve">
          <source>Class used as base for the creation of MetaClass implementations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b47727032438c428b57fe119fc6f390a8884fab5" translate="yes" xml:space="preserve">
          <source>Class used as base for the creation of MetaClass implementations. The Class defaults to MetaClassImpl, if the class loading fails to find a special meta class. The name for such a meta class would be the class name it is created for with the prefix &quot;groovy.runtime.metaclass.&quot; By replacing the handle in the registry you can have any control over the creation of what MetaClass is used for a class that you want to have. WARNING: experimental code, likely to change soon</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="749f806d1b00cfcda364a73863df30822ba30283" translate="yes" xml:space="preserve">
          <source>Class used by &lt;a href=&quot;../control/compilationunit&quot;&gt;CompilationUnit&lt;/a&gt; to transform the alias class into what is needed by the compiler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="812ce3f35ef252b64dcdb788c1f3a04330d8130d" translate="yes" xml:space="preserve">
          <source>Class used by &lt;a href=&quot;../control/compilationunit&quot;&gt;CompilationUnit&lt;/a&gt; to transform the alias class into what is needed by the compiler. This means removing invalid modifiers, interfaces and superclasses, as well as adding a static value method returning our serialized version of the data for processing from a pre-compiled state. By doing this the old annotations will be removed as well</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6318ab64b4ae7718b3ca96c9cce16a6307e9387e" translate="yes" xml:space="preserve">
          <source>Class used to configure a RootLoader from a stream or by using its methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4da61f5b4f2fcbeef01d2604fad73e18dea61ac0" translate="yes" xml:space="preserve">
          <source>Class which delegates to a PreparedStatement but keeps track of a batch count size. If the batch count reaches the predefined number, this Statement does an executeBatch() automatically. If batchSize is zero, then no batching is performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d3dd7e359f0a72f2c6d1d847af276dd01b5ade8" translate="yes" xml:space="preserve">
          <source>Class which delegates to a Statement but keeps track of a batch count size. If the batch count reaches the predefined number, this Statement does an executeBatch() automatically. If batchSize is zero, then no batching is performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6233c6e1345f9df57376ee4d04d035d07c6f1ac" translate="yes" xml:space="preserve">
          <source>Class, method or constructor annotation which indicates that each parameter should be checked to ensure it isn't null. If placed at the class level, all explicit methods and constructors will be checked. Explicit means those declared within the class and not inherited or added by transforms (but see &lt;a href=&quot;#includeGenerated()&quot;&gt;includeGenerated()&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceed7fcfe06b8868544d22c74fcc045cc41cacbc" translate="yes" xml:space="preserve">
          <source>ClassCastException if the left hand side is not a TupleExpression (and is probably a VariableExpression).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="733a4eee3e12321b600bb1a34e1e203b79142ee9" translate="yes" xml:space="preserve">
          <source>ClassCastException if the left hand side is not a VariableExpression (and is probably a multiple assignment statement).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d59f39d239d7c7ae9c0525dadbb9c4b8eb6b388" translate="yes" xml:space="preserve">
          <source>ClassCodeVisitorSupport</source>
          <target state="translated">ClassCodeVisitorSupport</target>
        </trans-unit>
        <trans-unit id="0b3b1dc08625f1ef914e145d6683cda808f8f1ac" translate="yes" xml:space="preserve">
          <source>ClassDoc of found class or interface, or null if not found</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ff35ee2c8b48ba5f72c8995f3b5783902c88aa8" translate="yes" xml:space="preserve">
          <source>ClassGenerator</source>
          <target state="translated">ClassGenerator</target>
        </trans-unit>
        <trans-unit id="2d399f64977620073eeca6f88efe1059fbdf6941" translate="yes" xml:space="preserve">
          <source>ClassHelper</source>
          <target state="translated">ClassHelper</target>
        </trans-unit>
        <trans-unit id="3f2d41f1bbcb77efae5e9a6b81fcf51c7ed331c2" translate="yes" xml:space="preserve">
          <source>ClassLoader.loadClass</source>
          <target state="translated">ClassLoader.loadClass</target>
        </trans-unit>
        <trans-unit id="7dc9d542871a30c42ff8fd642a9261c44a92eeb0" translate="yes" xml:space="preserve">
          <source>ClassNameResolver</source>
          <target state="translated">ClassNameResolver</target>
        </trans-unit>
        <trans-unit id="61ee3839e8c3298640d2a11104acd5db72ed8d90" translate="yes" xml:space="preserve">
          <source>ClassNode</source>
          <target state="translated">ClassNode</target>
        </trans-unit>
        <trans-unit id="c283a977d52a9f50481711857427edfcc7982320" translate="yes" xml:space="preserve">
          <source>ClassNode instance created from the given class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0398a32dd1699a2c185b5acddb4038f1bb70adb4" translate="yes" xml:space="preserve">
          <source>ClassNode.addConstructor</source>
          <target state="translated">ClassNode.addConstructor</target>
        </trans-unit>
        <trans-unit id="66b19924d1260bbcb10de6f346a516fecf4630fc" translate="yes" xml:space="preserve">
          <source>ClassNode.addMethod</source>
          <target state="translated">ClassNode.addMethod</target>
        </trans-unit>
        <trans-unit id="6e02d46cb7c815cdadb768b68deb3d843a2165c9" translate="yes" xml:space="preserve">
          <source>ClassNodes create through different sources (typically created from a java.lang.reflect.Class object):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0353b5cad36b5697d44065429a8ec614e66a144c" translate="yes" xml:space="preserve">
          <source>ClassNodes created through ClassHelper.makeWithoutCaching. They are place holders, its redirect points to the real structure, which can be a label too, but following all redirects it should end with a ClassNode from one of the other two categories. If ResolveVisitor finds such a node, it tries to set the redirects. Any such label created after ResolveVisitor has done its work needs to have a redirect pointing to case 1 or 2. If not the compiler may react strange... this can be considered as a kind of dangling pointer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e3864a8c413a196775f160c346f71414fcd28fc" translate="yes" xml:space="preserve">
          <source>ClassNotFoundException</source>
          <target state="translated">ClassNotFoundException</target>
        </trans-unit>
        <trans-unit id="acbe17e14789a390f6aae0c658da283b28454a70" translate="yes" xml:space="preserve">
          <source>ClassNotFoundException if not found</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18c74759afed9f66319b3d6a69c5d02aeaa22419" translate="yes" xml:space="preserve">
          <source>ClassNotFoundException if the class cannot be found or loaded</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2f35531250bf15444d2179010810d1f9d1ebc47" translate="yes" xml:space="preserve">
          <source>ClassNotFoundException if the class could not be found</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ec07411ed5d078b88e81635e02f64da05c897a1" translate="yes" xml:space="preserve">
          <source>ClassNotFoundException if the class is not found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e66e10569df187ecee0f3a2058e4674acd4804b6" translate="yes" xml:space="preserve">
          <source>ClassNotFoundException if the class was not found</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54133f690256d7d7f3bf26620f078629c1303a19" translate="yes" xml:space="preserve">
          <source>ClassNotFoundException if the driver class cannot be found or loaded</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b61744aff6afd4394044d178ef500587e60bf5b8" translate="yes" xml:space="preserve">
          <source>ClassValue</source>
          <target state="translated">ClassValue</target>
        </trans-unit>
        <trans-unit id="4fc49df91de36af7992b07b74c68f540571ffdac" translate="yes" xml:space="preserve">
          <source>Class[] that represent the method signature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="402e3af5721b4a40ea482312def6415772a446c8" translate="yes" xml:space="preserve">
          <source>Classes associated with the Swing GUI for inspecting objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20c12fd7de5b443b25e5499279ce2be64c6d1ec9" translate="yes" xml:space="preserve">
          <source>Classes conforming to the conventional Groovy category conventions can be used within &lt;code&gt;use&lt;/code&gt; statements or mixed in at runtime with the &lt;code&gt;mixin&lt;/code&gt; method on classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c45579c00d35d9f8f9e2e2dc1a30e54907bd2318" translate="yes" xml:space="preserve">
          <source>Classes for Groovier Input/Output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="412de3846c098191a47080c3741ac941c9bca3d1" translate="yes" xml:space="preserve">
          <source>Classes for easily manipulating Dates and times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85b0ffa5e91ddce571620d6d241b2ce121f0c0ba" translate="yes" xml:space="preserve">
          <source>Classes for inspecting object properties through introspection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2988e12fa50480d65741989591d877d7fcd97349" translate="yes" xml:space="preserve">
          <source>Classes for the JMX Builder.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec02f340e2a93749cb4bf9c0ae7bf19da1f3e116" translate="yes" xml:space="preserve">
          <source>Classes for walking the AST.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56b7882d2ad4f29c55143a71ca9756774741371d" translate="yes" xml:space="preserve">
          <source>Classes related to property binding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="637f1c4eea0f42fcf6dec7576690a3d3673a9cbc" translate="yes" xml:space="preserve">
          <source>Classes related to the joint compiler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f09216e66bbf56de29087b208b5e9c85baed2b9e" translate="yes" xml:space="preserve">
          <source>Classes to generate 'Proxy' objects which implement interfaces, maps of closures and/or extend classes/delegates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="615694bfa33e09b889494d162b0fb43beb9e5262" translate="yes" xml:space="preserve">
          <source>Classes used to execute special actions based on the type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d4a3a2f131a1f4afa857083ec929ca228d2704f" translate="yes" xml:space="preserve">
          <source>Classes which can run scripts should implement this interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1f647a1001823aa955ff8d3fdb41faa94273808" translate="yes" xml:space="preserve">
          <source>Cleans up any cached resources used by getLine().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11c1cbf3543371f2ef4c721d6c5a218d99781274" translate="yes" xml:space="preserve">
          <source>Cleanup</source>
          <target state="translated">Cleanup</target>
        </trans-unit>
        <trans-unit id="c583e1dd89b41d13acfdf0dcbd46ed9cb57ca73c" translate="yes" xml:space="preserve">
          <source>Clear the cache</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06a685cef87d834bd04c7664e0f85f9829082c5e" translate="yes" xml:space="preserve">
          <source>Clear the list of files to be compiled and copied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0999dc1b93b4dba57ff1e46c4d484f2edc9f0c4c" translate="yes" xml:space="preserve">
          <source>Clear the parameterized type cache It is useful to IDE as the type being compiled are continuously being edited/altered, see GROOVY-8675</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08b2f0ab559231bca0f7e61fe8f29d844487a9f5" translate="yes" xml:space="preserve">
          <source>Clears all registered runners from the registry and resets the registry so that it contains only the default set of runners.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88da8ec932372b3b0935d8f27a8f9973175c3bbf" translate="yes" xml:space="preserve">
          <source>Clears any file sets that have been added to this scanner</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3340649f7b183f71ad28cacef09a70774b1cdc8d" translate="yes" xml:space="preserve">
          <source>Clears the context stack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad88420fde38bfd6919d9d2eb2be71fb31cf6949" translate="yes" xml:space="preserve">
          <source>Clears the state of the class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a805507c86f02ddda665f21672caf4eb86828755" translate="yes" xml:space="preserve">
          <source>Clears the state of the class. This method should be called after a MethodNode is visited. Note that a call to init will fail if clear is not called before</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c9d2d89f8d3d7b11fa9d74480522fc9073057d9" translate="yes" xml:space="preserve">
          <source>Clears the time portion of this Calendar instance; useful utility where it makes sense to compare month/day/year only portions of a Calendar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6c576661e14b429b148df4d10c14792ad424345" translate="yes" xml:space="preserve">
          <source>Clears the time portion of this Date instance; useful utility where it makes sense to compare month/day/year only portions of a Date.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d37ea45c27bf5dc07478b59b2d4bf20a8e7dc03a" translate="yes" xml:space="preserve">
          <source>Clears the time portion of this java.sql.Date instance; useful utility where it makes sense to compare month/day/year only portions of a Date.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf254c3deb71f4e1d0cdfb251b4892a07bd879c1" translate="yes" xml:space="preserve">
          <source>CliBuilder also supports Argument File processing. If an argument starts with an '@' character followed by a filename, then the contents of the file with name filename are placed into the command line. The feature can be turned off by setting expandArgumentFiles to false. If turned on, you can still pass a real parameter with an initial '@' character by escaping it with an additional '@' symbol, e.g. '@@foo' will become '@foo' and not be subject to expansion. As an example, if the file temp.args contains the content:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5229158f4582ef8de418dc7d8f7d07a79249f4cc" translate="yes" xml:space="preserve">
          <source>Cloneable</source>
          <target state="translated">Cloneable</target>
        </trans-unit>
        <trans-unit id="0fb1834ee54868e42db5221184f984de5a8f0b9e" translate="yes" xml:space="preserve">
          <source>Close all streams.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b88380baab9110bf2e6196582a20a61ade80e128" translate="yes" xml:space="preserve">
          <source>Close resets the reader back to the start and removes any marked position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5893e14fdaaa8df24fb642d3c79547f5b5452d1d" translate="yes" xml:space="preserve">
          <source>Close the Closeable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dd3851b1be86a94bb0670b2461b7bcb2b53ff2d" translate="yes" xml:space="preserve">
          <source>Close the Closeable. Ignore any problems that might occur.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bd1cc90f231519f818252d4819e517705f19cc5" translate="yes" xml:space="preserve">
          <source>Close the Closeable. Logging a warning if any problems occur.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="646ad0301363a6efa72017347446da65c1c26cc3" translate="yes" xml:space="preserve">
          <source>Closeable</source>
          <target state="translated">Closeable</target>
        </trans-unit>
        <trans-unit id="d2244bd6d0bab27af5c4def18d48188b573cfa16" translate="yes" xml:space="preserve">
          <source>Closes all the streams associated with the process (ignoring any IOExceptions).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="433c128cd90564bf7eb3d133eaabc86881130620" translate="yes" xml:space="preserve">
          <source>Closes the stream and releases any system resources associated with it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec35ca5618bea905ebb159fa9565f10ad70e3fac" translate="yes" xml:space="preserve">
          <source>Closes the stream and releases any system resources associated with it. Once the stream has been closed, further read(), ready(), mark(), reset(), or skip() invocations will throw an IOException. Closing a previously closed stream has no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76bf127e77ebde4b7834bbc8a8e20c453d400284" translate="yes" xml:space="preserve">
          <source>Closes this GroovyClassLoader and clears any caches it maintains.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ece17937ff9aa7912523f415b0e9ec136f874a55" translate="yes" xml:space="preserve">
          <source>Closes this reader by calling close on the underlying reader.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f1a4946ce619c7cf00b1340923f654420e1875d" translate="yes" xml:space="preserve">
          <source>Closing a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9d8acd47b9f28b4174fb43dd4d0168a227fa62e" translate="yes" xml:space="preserve">
          <source>Closing this writer has no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84e77ec95c5a92eb909c6ac217e1a65e9bf9d350" translate="yes" xml:space="preserve">
          <source>Closure</source>
          <target state="translated">Closure</target>
        </trans-unit>
        <trans-unit id="193287a5f44111e087ff5078ae3ba2e027c660ca" translate="yes" xml:space="preserve">
          <source>Closure parameters are exactly like method parameters, except that they are not enclosed in parentheses, but rather are prepended to the front of a block, just after the brace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5691682864a9ec3a5a180b99015b55b69ff8c15" translate="yes" xml:space="preserve">
          <source>Closure parameters are exactly like method parameters, except that they are not enclosed in parentheses, but rather are prepended to the front of a block, just after the brace. They are separated from the closure body by a CLOSABLE_BLOCK_OP token '-&amp;gt;'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2038dd2f9175eaac5c278697455de1a30a8b2196" translate="yes" xml:space="preserve">
          <source>Closure responsible for creating the initial value of thread-managed bean properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22ab12107c0ee493e895aa0586baae24cbf64e59" translate="yes" xml:space="preserve">
          <source>Closure.DELEGATE_FIRST</source>
          <target state="translated">Closure.DELEGATE_FIRST</target>
        </trans-unit>
        <trans-unit id="a1f3e6671d3702a7d19a8b3c7b733b8e2ff7849f" translate="yes" xml:space="preserve">
          <source>Closure.DELEGATE_ONLY</source>
          <target state="translated">Closure.DELEGATE_ONLY</target>
        </trans-unit>
        <trans-unit id="a9c95a6992009ad55c0fa3f6860407d67069e914" translate="yes" xml:space="preserve">
          <source>Closure.IDENTITY</source>
          <target state="translated">Closure.IDENTITY</target>
        </trans-unit>
        <trans-unit id="3355d44a83441f65dd8368a4ba07cad55d0a26e7" translate="yes" xml:space="preserve">
          <source>Closure.OWNER_FIRST</source>
          <target state="translated">Closure.OWNER_FIRST</target>
        </trans-unit>
        <trans-unit id="9b7c8810a9423f06166378dda0cd7664b597284f" translate="yes" xml:space="preserve">
          <source>Closure.OWNER_ONLY</source>
          <target state="translated">Closure.OWNER_ONLY</target>
        </trans-unit>
        <trans-unit id="eab217b50bd82f0a6954643405771f167e12d8a5" translate="yes" xml:space="preserve">
          <source>Closure.TO_SELF</source>
          <target state="translated">Closure.TO_SELF</target>
        </trans-unit>
        <trans-unit id="414421642aba522537496f6f4fde6b8ab98ea26f" translate="yes" xml:space="preserve">
          <source>ClosureInvokingMethod</source>
          <target state="translated">ClosureInvokingMethod</target>
        </trans-unit>
        <trans-unit id="aa7b30ec7bd5b16c49ddc741a71ba6ebc6e98f4e" translate="yes" xml:space="preserve">
          <source>ClosureMetaClass</source>
          <target state="translated">ClosureMetaClass</target>
        </trans-unit>
        <trans-unit id="de1f15b3628315da061934d0b9c838c55d56a131" translate="yes" xml:space="preserve">
          <source>ClosureSignatureConflictResolver.class</source>
          <target state="translated">ClosureSignatureConflictResolver.class</target>
        </trans-unit>
        <trans-unit id="bb4f6b04b63bae78425a9a839b3e49dd742d1b3a" translate="yes" xml:space="preserve">
          <source>CodeSource wrapper class that allows specific security policies to be associated with a class compiled from groovy source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cacb1ad4a75d634f691f7dc829449fb96d65f962" translate="yes" xml:space="preserve">
          <source>Coerce a Boolean instance to a boolean value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59a5576de42315d4dea31144f3c806e280dc5087" translate="yes" xml:space="preserve">
          <source>Coerce a Double instance to a boolean value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d9a0719ae03d2b1ef02ff1d36ad150b5afea9c2" translate="yes" xml:space="preserve">
          <source>Coerce a Float instance to a boolean value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5df068ea4297e84329ddd17522d0313cce46b180" translate="yes" xml:space="preserve">
          <source>Coerce a GroovyResultSet to a boolean value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e05c3400832dbfb1985a0915e92774ffdf276554" translate="yes" xml:space="preserve">
          <source>Coerce a GroovyResultSet to a boolean value. A GroovyResultSet is coerced to false if there are no more rows to iterate over, and to true otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac71fecae77eaa9623d9aa51e0f8588cacae23fa" translate="yes" xml:space="preserve">
          <source>Coerce a collection instance to a boolean value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef1d184d7fd2411214ca4cfcd601fbb18dd22b70" translate="yes" xml:space="preserve">
          <source>Coerce a collection instance to a boolean value. A collection is coerced to false if it's empty, and to true otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e23b095367e0e2c5a8fe0ea8974aab0f333e80d" translate="yes" xml:space="preserve">
          <source>Coerce a map instance to a boolean value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38c33f3f55124e135dcc433854c975303fb6b0ab" translate="yes" xml:space="preserve">
          <source>Coerce a map instance to a boolean value. A map is coerced to false if it's empty, and to true otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="040fa02de90552ce9a32623e1c3c5f18da4dde31" translate="yes" xml:space="preserve">
          <source>Coerce a number to a boolean value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="505ff1fe1f98fa994c4d26878c884ea3e291ef58" translate="yes" xml:space="preserve">
          <source>Coerce a number to a boolean value. A number is coerced to false if its double value is equal to 0, and to true otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3d42468b30cc7b1fb8eff597333b6700eec7d1a" translate="yes" xml:space="preserve">
          <source>Coerce an &lt;code&gt;Optional&lt;/code&gt; instance to a &lt;code&gt;boolean&lt;/code&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51cca440a36ab163285feb34066afe7d41adc0af" translate="yes" xml:space="preserve">
          <source>Coerce an Object array to a boolean value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7730a5e2df4bb9974634211aabf2849a22433363" translate="yes" xml:space="preserve">
          <source>Coerce an Object array to a boolean value. An Object array is false if the array is of length 0. and to true otherwise</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97ec0c579243d38696226b1e37e92f8f4a6d7bf4" translate="yes" xml:space="preserve">
          <source>Coerce an enumeration instance to a boolean value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ded95165d17686822b27add9c08794b07369053" translate="yes" xml:space="preserve">
          <source>Coerce an enumeration instance to a boolean value. An enumeration is coerced to false if there are no more elements to enumerate, and to true otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d25b33066bb54633c42c9230f282f870e8864413" translate="yes" xml:space="preserve">
          <source>Coerce an iterator instance to a boolean value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86be51b966189d2acad1ee7c7f3a898792873d3e" translate="yes" xml:space="preserve">
          <source>Coerce an iterator instance to a boolean value. An iterator is coerced to false if there are no more elements to iterate over, and to true otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54f93893cffaae717dc527a4ffff6c526d588621" translate="yes" xml:space="preserve">
          <source>Coerce an object instance to a boolean value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7953a7a2f9b8c09c7801f365748f0867345ca4e" translate="yes" xml:space="preserve">
          <source>Coerce an object instance to a boolean value. An object is coerced to true if it's not null, to false if it is null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dbdd1b562aabc8894d46a207e6018ea5247e4e4" translate="yes" xml:space="preserve">
          <source>Coerces a CharSequence to a boolean value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="252467f93f82b23db7cecc891c9d6038a04c6121" translate="yes" xml:space="preserve">
          <source>Coerces a CharSequence to a boolean value. A sequence string is coerced to &lt;code&gt;false&lt;/code&gt; if it is of length 0, and to &lt;code&gt;true&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="768c44ac7f39085168647b59dcdf4cdd444ff136" translate="yes" xml:space="preserve">
          <source>Coerces a Matcher instance to a boolean value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccef4dd4898e9316a8d5b34fceb404d5ecdc55bd" translate="yes" xml:space="preserve">
          <source>Coerces a boolean array to a boolean value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fac9208bcb2899c2e0646af06ed29681247e4947" translate="yes" xml:space="preserve">
          <source>Coerces a boolean array to a boolean value. A boolean array is false if the array is of length 0, and true otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="192566108452a0f2e02659c3c0c20515dda004b3" translate="yes" xml:space="preserve">
          <source>Coerces a byte array to a boolean value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5040c3f66887504ee536fdc919bc3db719598c9" translate="yes" xml:space="preserve">
          <source>Coerces a byte array to a boolean value. A byte array is false if the array is of length 0, and true otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fde18636a77a607da970ad1e68072193024ce86" translate="yes" xml:space="preserve">
          <source>Coerces a char array to a boolean value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4fa2c3fc28e84fff8db3206909e8dac1e728fb4" translate="yes" xml:space="preserve">
          <source>Coerces a char array to a boolean value. A char array is false if the array is of length 0, and true otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76b0f8f96cf4239e181f71155f91a6f365d9155b" translate="yes" xml:space="preserve">
          <source>Coerces a double array to a boolean value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91c6ecc7186a4c096e81cba4f9cb49b269b1311d" translate="yes" xml:space="preserve">
          <source>Coerces a double array to a boolean value. A double array is false if the array is of length 0, and true otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46e9e38a4614811bdf0428251306edbcd623b050" translate="yes" xml:space="preserve">
          <source>Coerces a float array to a boolean value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d09f80ae6b16a0f470d73fe0a63bd7d813bcd9a5" translate="yes" xml:space="preserve">
          <source>Coerces a float array to a boolean value. A float array is false if the array is of length 0, and true otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd599eb105a5913530313376039f1d38a2c3de5a" translate="yes" xml:space="preserve">
          <source>Coerces a long array to a boolean value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3a09daa574f4666fed17159b5976da07a070b88" translate="yes" xml:space="preserve">
          <source>Coerces a long array to a boolean value. A long array is false if the array is of length 0, and true otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80e40667459d6677859e553ec365d53b246a60fa" translate="yes" xml:space="preserve">
          <source>Coerces a short array to a boolean value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4da658645b51327fdb7148e27225497c216d01f" translate="yes" xml:space="preserve">
          <source>Coerces a short array to a boolean value. A short array is false if the array is of length 0, and true otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ce90864d95c0f8cf8b091de88f19017ee69fe06" translate="yes" xml:space="preserve">
          <source>Coerces an int array to a boolean value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cddf3894d9dd5dcd77917e5ce58f3873d3280b02" translate="yes" xml:space="preserve">
          <source>Coerces an int array to a boolean value. An int array is false if the array is of length 0, and true otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eecca662577a0100b16464160613dbfd68cc73f" translate="yes" xml:space="preserve">
          <source>Coerces the closure to an implementation of the given class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e913aef7e3f38e653b77c86dbda104ccb0a54f4" translate="yes" xml:space="preserve">
          <source>Coerces the closure to an implementation of the given class. The class is assumed to be an interface or class with a single method definition. The closure is used as the implementation of that single method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dc921f3b069480f5ae8626bc5fe5cc6959a280e" translate="yes" xml:space="preserve">
          <source>Coerces this map to the given type, using the map's keys as the public method names, and values as the implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ac7bab746287a658d6f2409247d20e73e2e6ab2" translate="yes" xml:space="preserve">
          <source>Coerces this map to the given type, using the map's keys as the public method names, and values as the implementation. Typically the value would be a closure which behaves like the method implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29b8409122ee453292f7d030de57621898d6ad06" translate="yes" xml:space="preserve">
          <source>Collates an array into sub-lists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecb1c8e9e6f38abc4f4712f2e78c509217fa461d" translate="yes" xml:space="preserve">
          <source>Collates an array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a004db440a5722bb686f8a30d46a5e4b719f6915" translate="yes" xml:space="preserve">
          <source>Collates this array into into sub-lists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6329778695eea50503a2edbb4576047c3c198e63" translate="yes" xml:space="preserve">
          <source>Collates this array into sub-lists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f8a19ca2dc8ab7c5c936df7fe178c515e9d72a7" translate="yes" xml:space="preserve">
          <source>Collates this iterable into sub-lists of length &lt;code&gt;size&lt;/code&gt; stepping through the code &lt;code&gt;step&lt;/code&gt; elements for each sub-list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed3568dff3eac9172ee82b889210b76262d85474" translate="yes" xml:space="preserve">
          <source>Collates this iterable into sub-lists of length &lt;code&gt;size&lt;/code&gt; stepping through the code &lt;code&gt;step&lt;/code&gt; elements for each sub-list. Any remaining elements in the iterable after the subdivision will be dropped if &lt;code&gt;keepRemainder&lt;/code&gt; is false. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7051e356cfa92113b0269125eedc1d4641b3ad3" translate="yes" xml:space="preserve">
          <source>Collates this iterable into sub-lists of length &lt;code&gt;size&lt;/code&gt; stepping through the code &lt;code&gt;step&lt;/code&gt; elements for each subList.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb564bd24b91cf0b0a09b40858087877757b5bd9" translate="yes" xml:space="preserve">
          <source>Collates this iterable into sub-lists of length &lt;code&gt;size&lt;/code&gt; stepping through the code &lt;code&gt;step&lt;/code&gt; elements for each subList. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0744bc9a4fa8cd15a6256fda9eee273c2a8c995" translate="yes" xml:space="preserve">
          <source>Collates this iterable into sub-lists of length &lt;code&gt;size&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3f660480d3ce7239e30826c04d0ca45ad74a124" translate="yes" xml:space="preserve">
          <source>Collates this iterable into sub-lists of length &lt;code&gt;size&lt;/code&gt;. Any remaining elements in the iterable after the subdivision will be dropped if &lt;code&gt;keepRemainder&lt;/code&gt; is false. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d24d3a8d7f16d6cc833851642cd29d268aa055ea" translate="yes" xml:space="preserve">
          <source>Collates this iterable into sub-lists of length &lt;code&gt;size&lt;/code&gt;. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="150875ec92ef4952519a04ff4536847f6487a7f0" translate="yes" xml:space="preserve">
          <source>Collect all recursive calls within method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59c0b759d2f0642a4a046299e18cff24cc572eb5" translate="yes" xml:space="preserve">
          <source>Collection of operation description</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47fe25e64f10f289e6c8670be22e67495fea3010" translate="yes" xml:space="preserve">
          <source>Collection.addAll</source>
          <target state="translated">Collection.addAll</target>
        </trans-unit>
        <trans-unit id="dc6d15a5c6f7e5f63b17de251015e9ad448dcbd6" translate="yes" xml:space="preserve">
          <source>Collection.contains</source>
          <target state="translated">Collection.contains</target>
        </trans-unit>
        <trans-unit id="101c77eab139ff0927874e9098a00c48d4430739" translate="yes" xml:space="preserve">
          <source>Collection.containsAll</source>
          <target state="translated">Collection.containsAll</target>
        </trans-unit>
        <trans-unit id="a7f6cfbad1e3fa6748839771f976fe91e6dacd62" translate="yes" xml:space="preserve">
          <source>Collection.remove</source>
          <target state="translated">Collection.remove</target>
        </trans-unit>
        <trans-unit id="dbd3f9464ddf91e807cf5dcdacb13b5ca7b05a33" translate="yes" xml:space="preserve">
          <source>Collection.removeAll</source>
          <target state="translated">Collection.removeAll</target>
        </trans-unit>
        <trans-unit id="3a7e305740f21f51f3f4a3a99319dda06e9e668e" translate="yes" xml:space="preserve">
          <source>Collection.retainAll</source>
          <target state="translated">Collection.retainAll</target>
        </trans-unit>
        <trans-unit id="82d0055fec4186c075a6eead200e35a286d1f17a" translate="yes" xml:space="preserve">
          <source>Collections.shuffle</source>
          <target state="translated">Collections.shuffle</target>
        </trans-unit>
        <trans-unit id="caf8d0e78d3232435a4a2ef47b51ae1286243587" translate="yes" xml:space="preserve">
          <source>Collections.swap</source>
          <target state="translated">Collections.swap</target>
        </trans-unit>
        <trans-unit id="ca904cc65fb442e4412e96adcc8a945b8f384789" translate="yes" xml:space="preserve">
          <source>Collections.synchronizedCollection</source>
          <target state="translated">Collections.synchronizedCollection</target>
        </trans-unit>
        <trans-unit id="90e98a5110e28c7d0229c40ef446a4ec2ea15e7e" translate="yes" xml:space="preserve">
          <source>Collections.synchronizedList</source>
          <target state="translated">Collections.synchronizedList</target>
        </trans-unit>
        <trans-unit id="baa4e27575c3f56e4b9c2149c7193c130dba3fde" translate="yes" xml:space="preserve">
          <source>Collections.synchronizedMap</source>
          <target state="translated">Collections.synchronizedMap</target>
        </trans-unit>
        <trans-unit id="7007911ee011e18614431048680fef46579338f6" translate="yes" xml:space="preserve">
          <source>Collections.synchronizedSet</source>
          <target state="translated">Collections.synchronizedSet</target>
        </trans-unit>
        <trans-unit id="fdb4bb44e93b0ec3f850c151c6d3b6542947aca9" translate="yes" xml:space="preserve">
          <source>Collections.synchronizedSortedMap</source>
          <target state="translated">Collections.synchronizedSortedMap</target>
        </trans-unit>
        <trans-unit id="dc0fd7f276f44b7f0f1e934ef94a213dc419dee5" translate="yes" xml:space="preserve">
          <source>Collections.synchronizedSortedSet</source>
          <target state="translated">Collections.synchronizedSortedSet</target>
        </trans-unit>
        <trans-unit id="2b1766126ffc46bf0571fbad4f649183fbe4b3a2" translate="yes" xml:space="preserve">
          <source>Collections.unmodifiableCollection</source>
          <target state="translated">Collections.unmodifiableCollection</target>
        </trans-unit>
        <trans-unit id="f85256db8747e7475dc9456849b7c2e0f2cd4955" translate="yes" xml:space="preserve">
          <source>Collections.unmodifiableList</source>
          <target state="translated">Collections.unmodifiableList</target>
        </trans-unit>
        <trans-unit id="fa4e8941174aab3f7a4bc1cdcd84be3a9886456c" translate="yes" xml:space="preserve">
          <source>Collections.unmodifiableMap</source>
          <target state="translated">Collections.unmodifiableMap</target>
        </trans-unit>
        <trans-unit id="418b4429e1369eeadf726638cb4ab571e89637e0" translate="yes" xml:space="preserve">
          <source>Collections.unmodifiableSet</source>
          <target state="translated">Collections.unmodifiableSet</target>
        </trans-unit>
        <trans-unit id="5301664415e4057f8e428a1c46eff6c1931d1718" translate="yes" xml:space="preserve">
          <source>Collections.unmodifiableSortedMap</source>
          <target state="translated">Collections.unmodifiableSortedMap</target>
        </trans-unit>
        <trans-unit id="a15733cd250e4e743091bfce3a20316c2618e19c" translate="yes" xml:space="preserve">
          <source>Collections.unmodifiableSortedSet</source>
          <target state="translated">Collections.unmodifiableSortedSet</target>
        </trans-unit>
        <trans-unit id="0857ed2b67369973fefd721476280fc5686c9d0e" translate="yes" xml:space="preserve">
          <source>Collector annotation for &lt;a href=&quot;namedparam&quot;&gt;NamedParam&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55db893f2e5f4beaff322efb607b6f40fec91356" translate="yes" xml:space="preserve">
          <source>Collects all interfaces of a class node, but reverses the order of the declaration of direct interfaces of this class node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56d9a5975f7cd5e7e1e01b21430f36d638569c1f" translate="yes" xml:space="preserve">
          <source>Collects all interfaces of a class node, but reverses the order of the declaration of direct interfaces of this class node. This is used to make sure a trait implementing A,B where both A and B have the same method will take the method from B (latest), aligning the behavior with categories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ab5057519b1bb83854147f759477dcce76c99e3" translate="yes" xml:space="preserve">
          <source>Collects all interfaces of a class node, including those defined by the super class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3243aadef3c4212f86123e25668fba52a5ed8dd5" translate="yes" xml:space="preserve">
          <source>Collects all the self types that a type should extend or implement, given the traits is implements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43e1372bc9764f2729099715b9fd979b92db004a" translate="yes" xml:space="preserve">
          <source>Collects all the self types that a type should extend or implement, given the traits is implements. Collects from interfaces and superclasses too.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fa9c931318f3f7801dd8f5840071d4ac329de3f" translate="yes" xml:space="preserve">
          <source>Color shade) { shade } def result = foo(g: 12, b: 42, r: 12) assert result.toString() == 'Color(r:12, g:12, b:42)' You could also explicitly annotate the &lt;code&gt;shade&lt;/code&gt; argument with the &lt;code&gt;@NamedDelegate&lt;/code&gt; annotation if you wanted. The generated method will be something like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac328c5693e2da3835247070d978b4b7b33f3bdb" translate="yes" xml:space="preserve">
          <source>Combinations of import and star import constraints are authorized as long as you use the same type of list for both. For example, you may use an import allowed list and a star import allowed list together, but you cannot use an import allowed list with a star import disallowed list. Static imports are handled separately, meaning that disallowing an import &lt;b&gt;does not&lt;/b&gt; prevent from allowing a static import.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6c2c0669aba9093730444878fb48b39636a307f" translate="yes" xml:space="preserve">
          <source>Combines the operations of nextChar and hasChar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50bbb1e76b34ed1197c01e9be3592cdc96ce6ea4" translate="yes" xml:space="preserve">
          <source>Combines the operations of nextChar and hasChar. Characters is -1 if not found which signifies end of file. This might be preferable to avoid two method calls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f019627a64b530fb71f447f674a0808edccfa32b" translate="yes" xml:space="preserve">
          <source>Comma separated list of property (and/or field) names to exclude from cloning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70f82e188042d9615755521d5ac26b9062c1f871" translate="yes" xml:space="preserve">
          <source>Comma separated list of property (and/or field) names to exclude from cloning. For convenience, a String with comma separated names can be used in addition to an array (using Groovy's literal list notation) of String values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc3b45a45ac5b81f6134422145dd5e90ee1cabb1" translate="yes" xml:space="preserve">
          <source>Comma separated list of property names to exclude from externalization verification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="721eb3f8bfacbefdd8876c512fe7694b84085e46" translate="yes" xml:space="preserve">
          <source>Comma separated list of property names to exclude from externalization verification. For convenience, a String with comma separated names can be used in addition to an array (using Groovy's literal list notation) of String values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecc0a9ba33ec394cdee96e78b4164d434990ac4a" translate="yes" xml:space="preserve">
          <source>Comma separated list of property names to exclude from externalizing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="994339d93b8cc6c625487785a7265ccbba0141f5" translate="yes" xml:space="preserve">
          <source>Comma separated list of property names to exclude from externalizing. For convenience, a String with comma separated names can be used in addition to an array (using Groovy's literal list notation) of String values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e43ac661de8685f30bf83d2736dcd3485ab8db1d" translate="yes" xml:space="preserve">
          <source>Comma-separated list of one or more enum constant definitions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f948fceb584f088572dbf08a11e44219bbaf20c0" translate="yes" xml:space="preserve">
          <source>Command-line compiler (aka.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="396c6fd3a1ac7f2c7f929b49749662796b7a15d6" translate="yes" xml:space="preserve">
          <source>CommandLine.Command</source>
          <target state="translated">CommandLine.Command</target>
        </trans-unit>
        <trans-unit id="1ee9733a50c876e711b0a4bcb0504774254a3474" translate="yes" xml:space="preserve">
          <source>CommandLine.IVersionProvider</source>
          <target state="translated">CommandLine.IVersionProvider</target>
        </trans-unit>
        <trans-unit id="cb4da8d046b997fb0ae75064ca125bf91612e5f3" translate="yes" xml:space="preserve">
          <source>Comments and processing instructions will be removed as part of processing and special XML characters such as &amp;lt;, &amp;gt;, &quot; and ' will be escaped using the respective XML notation. The output will also be indented using standard XML pretty printing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abcbd325c73c6a8a20a1c6b048acc88763444418" translate="yes" xml:space="preserve">
          <source>CommonCache(int, int)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c4822c5ee72234c0afb4e4d081cb833861c355a" translate="yes" xml:space="preserve">
          <source>CommonsLoggingStrategy.class</source>
          <target state="translated">CommonsLoggingStrategy.class</target>
        </trans-unit>
        <trans-unit id="eadfd3f2fff5b46637c267d52d54cd4bbd4cc506" translate="yes" xml:space="preserve">
          <source>Comparable</source>
          <target state="translated">Comparable</target>
        </trans-unit>
        <trans-unit id="bd5dc2ff43c21afc00e56a2f75cce397b8506026" translate="yes" xml:space="preserve">
          <source>Comparator</source>
          <target state="translated">Comparator</target>
        </trans-unit>
        <trans-unit id="ad3c0be55ff78d00af931d333d48bfa9ecadfe61" translate="yes" xml:space="preserve">
          <source>Compare a BigDecimal to a String representing a number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f135754fa35a7da2ed70de2640fc7e1050d45c2" translate="yes" xml:space="preserve">
          <source>Compare a BigDecimal to a String representing a number. A fluent api style alias for &lt;code&gt;compareTo&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94332ccf7cc2cf1379d61397ac2010d3ccf6404e" translate="yes" xml:space="preserve">
          <source>Compare a BigDecimal to another.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73915f9abbacb1ab55741c2bf8ee09925e5fbb3c" translate="yes" xml:space="preserve">
          <source>Compare a BigDecimal to another. A fluent api style alias for &lt;code&gt;compareTo&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2d4c21e686d4dfd1f641b2c8fd967eccb134b62" translate="yes" xml:space="preserve">
          <source>Compare a Character and a Number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3fac4c02256fa71d5b8e50cbd53f5c99625a51b" translate="yes" xml:space="preserve">
          <source>Compare a Character and a Number. The ordinal value of the Character is used in the comparison (the ordinal value is the unicode value which for simple character sets is the ASCII value).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2e2874c2e5eaf0cbf3b0c5bb11a6c17b4def13c" translate="yes" xml:space="preserve">
          <source>Compare a Number and a Character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48c4aa9b54b568a03832b7206bef3b99b200c387" translate="yes" xml:space="preserve">
          <source>Compare a Number and a Character. The ordinal value of the Character is used in the comparison (the ordinal value is the unicode value which for simple character sets is the ASCII value).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90742f699ea1e496134c43819defa85a9b6578c3" translate="yes" xml:space="preserve">
          <source>Compare the contents of this array to the contents of the given array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e8a2192d57f5647df7f01264526c67d286ddf9b" translate="yes" xml:space="preserve">
          <source>Compare the contents of two Lists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f721954e7b597e2dd0538f8a0cde940457eaa5e" translate="yes" xml:space="preserve">
          <source>Compare the contents of two Lists. Order matters. If numbers exist in the Lists, then they are compared as numbers, for example 2 == 2L. If both lists are &lt;code&gt;null&lt;/code&gt;, the result is true; otherwise if either list is &lt;code&gt;null&lt;/code&gt;, the result is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fcac192a2b9b3f0fd628b58c8c6a4f43f09e44e" translate="yes" xml:space="preserve">
          <source>Compare the contents of two Sets for equality using Groovy's coercion rules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4a7e6ddd8fcadabd3d4112fc3dd868ac5ad96dc" translate="yes" xml:space="preserve">
          <source>Compare two Characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d1c63e3f6600d2e67d089efa0b5262b1e222870" translate="yes" xml:space="preserve">
          <source>Compare two Characters. The ordinal values of the Characters are compared (the ordinal value is the unicode value which for simple character sets is the ASCII value).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e1fc29ae1d3460e9603c03bad80ac1ea990aaa0" translate="yes" xml:space="preserve">
          <source>Compare two Numbers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a8e4b38c338b745fba2d3d8bca378ac4fcce5f2" translate="yes" xml:space="preserve">
          <source>Compare two Numbers. Equality (==) for numbers dispatches to this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3fd7b234adcc2e5582f8b1ad4de108228fef90f" translate="yes" xml:space="preserve">
          <source>Compares a &lt;a href=&quot;numberrange&quot;&gt;NumberRange&lt;/a&gt; to another &lt;a href=&quot;numberrange&quot;&gt;NumberRange&lt;/a&gt; using only a strict comparison of the NumberRange properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb9878d03ad04833214dfb1e1e39c72f9ee555af" translate="yes" xml:space="preserve">
          <source>Compares a &lt;a href=&quot;numberrange&quot;&gt;NumberRange&lt;/a&gt; to another &lt;a href=&quot;numberrange&quot;&gt;NumberRange&lt;/a&gt; using only a strict comparison of the NumberRange properties. This won't return true for some ranges which represent the same discrete items, use equals instead for that but will be much faster for large lists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce55a56e83df207e470f8103d79d82ceba4d44d9" translate="yes" xml:space="preserve">
          <source>Compares a String representing a number to another.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b69af11d0d857fb06658f6973d0be6fe7ca7af5" translate="yes" xml:space="preserve">
          <source>Compares a String representing a number to another. A fluent API style alias for &lt;code&gt;compareTo&lt;/code&gt; on &lt;code&gt;BigDecimal&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c3093c6f6db3c8793d86604e876c74e5a1420ce" translate="yes" xml:space="preserve">
          <source>Compares an &lt;a href=&quot;intrange&quot;&gt;IntRange&lt;/a&gt; to another &lt;a href=&quot;intrange&quot;&gt;IntRange&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6be088066261f7ebe8445628a5526d1b7a45fb2" translate="yes" xml:space="preserve">
          <source>Compares an &lt;a href=&quot;objectrange&quot;&gt;ObjectRange&lt;/a&gt; to another &lt;a href=&quot;objectrange&quot;&gt;ObjectRange&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fba0783dd681d0c2cf7d2464af056ce10f4ee39" translate="yes" xml:space="preserve">
          <source>Compares the two objects handling nulls gracefully and performing numeric type coercion if required</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="440b2d6173dd06b4b6c708ab12c64552fd08f153" translate="yes" xml:space="preserve">
          <source>Compares this generics type with the provided class node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a7b462bcd88287e1325818e591ca00c54f7b42b" translate="yes" xml:space="preserve">
          <source>Compares this generics type with the provided class node. If the provided class node is compatible with the generics specification, returns true. Otherwise, returns false. The check is complete, meaning that nested generics are also checked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e51433f836c2641b8c1637e32e94d5ad4e49477f" translate="yes" xml:space="preserve">
          <source>Compares two Maps treating coerced numerical values as identical.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e96c0d604286763e7ac325babf97673bb5fcce93" translate="yes" xml:space="preserve">
          <source>Compares two objects using Groovy's friendly comparison algorithm, i.e. handles nulls gracefully (nul being less than everything else) and performs numeric type coercion if required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ba28ef99232448e6918b76df924c2d1f51491a3" translate="yes" xml:space="preserve">
          <source>Compares two objects using identity comparison. This expression will generate bytecode using the IF_ACMPNE instruction, instead of using the &quot;equals&quot; method that is currently mapped to &quot;==&quot; in Groovy. This expression should only be used to compare to objects, not primitives, and only in the context of reference equality check.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f79b9341859e77b21d5386fd16b6d5c3b974a36" translate="yes" xml:space="preserve">
          <source>Compatibility API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="919a7a285d903ff97b7485c31bcf5d1d24d85bf7" translate="yes" xml:space="preserve">
          <source>Compilation Unit capable of compiling Java source files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4311d0a2f848322127a0a5f3f501351238987c1a" translate="yes" xml:space="preserve">
          <source>Compilation control flags and coordination stuff.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b3c1a7f7b0d50d0fd0fa03c5ec3659ed918799e" translate="yes" xml:space="preserve">
          <source>Compilation phase identifiers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47b4f8eaa7ecf23c62b788b9cda1b2a5abe84a2f" translate="yes" xml:space="preserve">
          <source>Compilation unit to only generate stubs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1cd5adec52e0a865357534b878f3799483b7dd7" translate="yes" xml:space="preserve">
          <source>CompilationFailedException</source>
          <target state="translated">CompilationFailedException</target>
        </trans-unit>
        <trans-unit id="ea2a3b0ef1e6d0e809baf522466b1ca6b0d12a2a" translate="yes" xml:space="preserve">
          <source>CompilationFailedException if compilation was not successful</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ea87c6258feb70acb0884649cf2798615016caa" translate="yes" xml:space="preserve">
          <source>CompilationFailedException if expression is not valid Groovy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="609023d3c6e0664103d638b78171cbe825640831" translate="yes" xml:space="preserve">
          <source>CompilationFailedException if the compilation failed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37d9fafd795d97365027cd58f2bb8edf6f8fe855" translate="yes" xml:space="preserve">
          <source>CompilationFailedException if the source file could not be compiled</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f5d070f43f04d886559b438d854557b5f8ba37d" translate="yes" xml:space="preserve">
          <source>CompilationFailedException on error</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fab5f78c95185e6587ba8df8be26630863c27bf" translate="yes" xml:space="preserve">
          <source>CompilationUnitAware</source>
          <target state="translated">CompilationUnitAware</target>
        </trans-unit>
        <trans-unit id="62ddbcee1c6bee65007843b796b4ebdb9a538c9f" translate="yes" xml:space="preserve">
          <source>CompilationUnitClassgenCallback</source>
          <target state="translated">CompilationUnitClassgenCallback</target>
        </trans-unit>
        <trans-unit id="b6bfb1e5583072a59ac3e3c3f62a30810863391e" translate="yes" xml:space="preserve">
          <source>CompilationUnitIPrimaryClassNodeOperation</source>
          <target state="translated">CompilationUnitIPrimaryClassNodeOperation</target>
        </trans-unit>
        <trans-unit id="ff369fcdbb19839c9e1fb6723732aa5069667893" translate="yes" xml:space="preserve">
          <source>CompileDynamic</source>
          <target state="translated">CompileDynamic</target>
        </trans-unit>
        <trans-unit id="0d4ea413f9eb16d79f76a186be57daa50251ea46" translate="yes" xml:space="preserve">
          <source>CompilePhase.CANONICALIZATION</source>
          <target state="translated">CompilePhase.CANONICALIZATION</target>
        </trans-unit>
        <trans-unit id="1c518fbb16b5c95595a16277c8e4fa6474529d27" translate="yes" xml:space="preserve">
          <source>CompilePhase.SEMANTIC_ANALYSIS</source>
          <target state="translated">CompilePhase.SEMANTIC_ANALYSIS</target>
        </trans-unit>
        <trans-unit id="022fbc4d14e39d30a4ea875f1c00440b902bfc83" translate="yes" xml:space="preserve">
          <source>Compiler control classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="925655303c244c2b4d5d739319ff948a961acce3" translate="yes" xml:space="preserve">
          <source>Compiler entry points and miscellaneous development tools.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b8d01c02f2240b3ee003fad5f363a4fdf43db36" translate="yes" xml:space="preserve">
          <source>CompilerConfiguration</source>
          <target state="translated">CompilerConfiguration</target>
        </trans-unit>
        <trans-unit id="3e10ee7f0b7b87fb3ce9ebbeb4b239b09efd0a2d" translate="yes" xml:space="preserve">
          <source>Compiles Groovy source files using Ant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7c9634657cb2cf94ac4d3c466bb3347313437db" translate="yes" xml:space="preserve">
          <source>Compiles Groovy source files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d54368ee4f39597f695ff88d23094faeefa38a6" translate="yes" xml:space="preserve">
          <source>Compiles Java and Groovy source files. This works by invoking the &lt;a href=&quot;generatestubstask&quot;&gt;GenerateStubsTask&lt;/a&gt; task, then the &lt;a href=&quot;https://docs.groovy-lang.org/docs/ant/api/org/apache/tools/ant/taskdefs/Javac.html&quot;&gt;Javac&lt;/a&gt; task and then the &lt;a href=&quot;groovyctask&quot;&gt;GroovycTask&lt;/a&gt;. Each task can be configured by creating a nested element. Common configuration such as the source dir and classpath is picked up from this tasks configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="874655c43c72a8b113cab17e8e36dcee089ffd68" translate="yes" xml:space="preserve">
          <source>Compiles a series of Files from file names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3d1a58888a9dbd0a89c14ce3bb059f09566a415" translate="yes" xml:space="preserve">
          <source>Compiles a series of Files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a8156133d014afe80b93b8f5b290cdd2bdc8ac2" translate="yes" xml:space="preserve">
          <source>Compiles a single File.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2f94a838f348dfe2e78795085b97550c6eda9d8" translate="yes" xml:space="preserve">
          <source>Compiles a string of code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb55322a38fd3bfea40a9cf4c7179b010dae0d61" translate="yes" xml:space="preserve">
          <source>Compiles the File into a Class applying the transform specified in the constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="639df7133211c3b94d9bf4130a9295c277055884" translate="yes" xml:space="preserve">
          <source>Compiles the String into a Class applying the transform specified in the constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7fe716af0640f120c3c8f54cc5fef22c21b09eb" translate="yes" xml:space="preserve">
          <source>Compiles the compilation unit from sources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac05bb5ffd53a2325911e4bde1d2c78e7a936374" translate="yes" xml:space="preserve">
          <source>Complete building the AST</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff66bb352190684affd49cdee5a8c5883abafba9" translate="yes" xml:space="preserve">
          <source>Complete the initialisation process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1c703e6ac3449a0f29964d8ece6e055fd3135d8" translate="yes" xml:space="preserve">
          <source>Complete the initialisation process. After this method is called no methods should be added to the meta class. Invocation of methods or access to fields/properties is forbidden unless this method is called. This method should contain any initialisation code, taking a longer time to complete. An example is the creation of the Reflector. It is suggested to synchronize this method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="601661a7e7e10b1ba936c2995d8a700c724ea457" translate="yes" xml:space="preserve">
          <source>Completer</source>
          <target state="translated">Completer</target>
        </trans-unit>
        <trans-unit id="79baa0744f8adb5c5c14cd6314fea87b21c8bb69" translate="yes" xml:space="preserve">
          <source>Completer completing Groovy keywords and special functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac2c08efca2c08a8c5aa589ab421c8e76d41cf96" translate="yes" xml:space="preserve">
          <source>Completer completing classes defined in the shell</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b8e48934e213d6aa731acfe276deff7502481e9" translate="yes" xml:space="preserve">
          <source>Completer completing groovy keywords that appear after identifiers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9675106fc57e53b6f9791170360c103d2d77131d" translate="yes" xml:space="preserve">
          <source>Completer completing imported classnames</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70893f16914c9f2fd06e2402ebcf35f8b2335b40" translate="yes" xml:space="preserve">
          <source>Completer completing variable and method names from known variables in the shell</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="242d92232f85a7124baf9dfafe838647172e4fb4" translate="yes" xml:space="preserve">
          <source>Completer for the command.names</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8afb90260d6bade405bb500872332d46a3efe84b" translate="yes" xml:space="preserve">
          <source>Completes fields and methods of Classes or instances. Does not quite respect the contract of IdentifierCompleter, as last Token may be a dot or not, thus also returns as int the cursor position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd5e96aa9b5fad97c046e67c90755b8befe8069a" translate="yes" xml:space="preserve">
          <source>Completes fields and methods of Classes or instances. Does not quite respect the contract of IdentifierCompletor, as last Token may be a dot or not, thus also returns as int the cursor position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a2c3e64d55d0ce8a8b5b7bced1fa755c9cbb1a5" translate="yes" xml:space="preserve">
          <source>Completor completing Groovy keywords and special functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99c76e03d57fb49218e74eb34e912e07dfe64a1c" translate="yes" xml:space="preserve">
          <source>Completor completing groovy keywords that appear after identifiers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb8f742b399f649a3f0c4f29f3a531505a6dd739" translate="yes" xml:space="preserve">
          <source>Completor completing imported classnames</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9889c3c243c69a2ab2250ff5c9d006d4cc6d24c0" translate="yes" xml:space="preserve">
          <source>Completor completing variable and method names from known variables in the shell</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b75c927c714fe47b8178d18e0842ca25b99c58b" translate="yes" xml:space="preserve">
          <source>Completor completingclasses defined in the shell</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="641d47e26797ddb3330c9d627f4b9d48a17aad9c" translate="yes" xml:space="preserve">
          <source>Completor for the command.names</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c92c529e0731c57efd7550480196484040b33c3e" translate="yes" xml:space="preserve">
          <source>Component</source>
          <target state="translated">Component</target>
        </trans-unit>
        <trans-unit id="e5e3a67aa3f0c9aaf903e2bee895843621a933d4" translate="yes" xml:space="preserve">
          <source>Component which provides a styled editor for the console.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fe708c5a07c7d50ed5ed860ce4d85562bd7b74e" translate="yes" xml:space="preserve">
          <source>Computes a hash code for a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4814b7f58509c060a5ae95131d56928bd2030e3a" translate="yes" xml:space="preserve">
          <source>Computes a hash code for a string. The purpose of this hashcode is to be constant independently of the JDK being used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1f021e2d483fbe2c933c67d9e214a913c1cdf89" translate="yes" xml:space="preserve">
          <source>Concatenate arrays and ignore null array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d79a5b307029302a6241361118934c54f5ac4673" translate="yes" xml:space="preserve">
          <source>Concatenates the &lt;code&gt;toString()&lt;/code&gt; representation of each item from the iterator, with the given String as a separator between each item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b80c87e7f2763b3417b83827170c956bcd441ac" translate="yes" xml:space="preserve">
          <source>Concatenates the &lt;code&gt;toString()&lt;/code&gt; representation of each item from the iterator, with the given String as a separator between each item. The iterator will become exhausted of elements after determining the resulting conjoined value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f773a88804e32d5f1a93a67c80e046bc28cb7920" translate="yes" xml:space="preserve">
          <source>Concatenates the &lt;code&gt;toString()&lt;/code&gt; representation of each item in this Iterable, with the given String as a separator between each item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14842b9c054c2a2d26abe293c409500742a4e392" translate="yes" xml:space="preserve">
          <source>Concatenates the &lt;code&gt;toString()&lt;/code&gt; representation of each items in this array, with the given String as a separator between each item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f5f427b6edc62ae2b128b8a3c1495c2bd653991" translate="yes" xml:space="preserve">
          <source>Concatenates the string representation of each items in this array, with the given String as a separator between each item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed74cdc55fa7d98ae6aca6a7791f46f6f4c43af0" translate="yes" xml:space="preserve">
          <source>ConcurrentCommonCache(int, int)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="818ef559c6ab7067df188efc41b358f12092ae0a" translate="yes" xml:space="preserve">
          <source>ConcurrentMap</source>
          <target state="translated">ConcurrentMap</target>
        </trans-unit>
        <trans-unit id="2ffed819d0dab65f96e0ed3586f341c9bce282d9" translate="yes" xml:space="preserve">
          <source>ConcurrentReaderHashMap</source>
          <target state="translated">ConcurrentReaderHashMap</target>
        </trans-unit>
        <trans-unit id="76e44a95abb51c42e9f36049757cfdd4cd344a12" translate="yes" xml:space="preserve">
          <source>ConcurrentReaderHashMap collision list entry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e283a2d92610f409b597dd90b807a52d89755f06" translate="yes" xml:space="preserve">
          <source>ConcurrentSoftCache(int, int)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c5f91de2701ed88732a3514040742e8a1ce8d9e" translate="yes" xml:space="preserve">
          <source>Conditional check - set as a closure expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="772f86d0062545aa7b2287338de45d551942e7f9" translate="yes" xml:space="preserve">
          <source>ConditionalInterrupt</source>
          <target state="translated">ConditionalInterrupt</target>
        </trans-unit>
        <trans-unit id="72b87d6e2d46a3d520a5eebf62bdf930f6382cba" translate="yes" xml:space="preserve">
          <source>ConfigObject.flatten</source>
          <target state="translated">ConfigObject.flatten</target>
        </trans-unit>
        <trans-unit id="044026c21c5499d83ab1d1c47b1c51f8c72a0e1d" translate="yes" xml:space="preserve">
          <source>ConfigSlurper is a utility class for reading configuration files defined in the form of Groovy scripts. Configuration settings can be defined using dot notation or scoped using closures:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="093fafa26fd1012887612e6f1a9fe1e3dd52d6cd" translate="yes" xml:space="preserve">
          <source>ConfigSlurper.parse</source>
          <target state="translated">ConfigSlurper.parse</target>
        </trans-unit>
        <trans-unit id="5b3214f8ebe004400bf6cd2ac3f29b7d5289e9c7" translate="yes" xml:space="preserve">
          <source>Configuration and other settings that control processing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ae77f0d903a8aa027437da91c860fbc8d0a4530" translate="yes" xml:space="preserve">
          <source>Configuration options for the &lt;a href=&quot;markuptemplateengine&quot;&gt;markup template engine&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffe2f91fa482acdb6225c167ab5c9197cc07679e" translate="yes" xml:space="preserve">
          <source>Configures a new Reporter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="385114891b5e0b54b53b5c092ed3242b3f193741" translate="yes" xml:space="preserve">
          <source>Configures a new Reporter. Default mode is not to report a stack trace unless the error was not of one of the supported types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7362759046f5671ed172fd75b3d11a336f8f9c2" translate="yes" xml:space="preserve">
          <source>Configures its debugging mode and classloader classpath from a given compiler configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4267adc2a33c144c8fd836b96623dc9867757c84" translate="yes" xml:space="preserve">
          <source>Configures its debugging mode and classloader classpath from a given compiler configuration. This cannot be done more than once due to limitations in &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/net/URLClassLoader.html&quot;&gt;URLClassLoader&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a6df1e0249f4de49c1556f13fe4f3dceb64083e" translate="yes" xml:space="preserve">
          <source>Configures what the parser should do when arguments not recognized as options are encountered: when &lt;code&gt;true&lt;/code&gt; (the default), the remaining arguments are all treated as positional parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da1b52636b8d0c24d139ca4d9e6d89cc05b8fb99" translate="yes" xml:space="preserve">
          <source>Configures what the parser should do when arguments not recognized as options are encountered: when &lt;code&gt;true&lt;/code&gt; (the default), the remaining arguments are all treated as positional parameters. When &lt;code&gt;false&lt;/code&gt;, the parser will continue to look for options, and only the unrecognized arguments are treated as positional parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7bfb913b683f6e8403b89cf658e880bb93e6db0" translate="yes" xml:space="preserve">
          <source>Connection.prepareStatement</source>
          <target state="translated">Connection.prepareStatement</target>
        </trans-unit>
        <trans-unit id="d027ba97a4b081fe1bf666a30ac6f894026cbec3" translate="yes" xml:space="preserve">
          <source>ConsoleApplet</source>
          <target state="translated">ConsoleApplet</target>
        </trans-unit>
        <trans-unit id="073d6256c916d46e70291d3cef16d80769c5138a" translate="yes" xml:space="preserve">
          <source>Construct a GroovyCodeSource for an inputStream of groovyCode that has an unknown provenance -- meaning it didn't come from a File or a URL (e.g. a String).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c42c5f64f5314b4e223873ad7fcd286507fc51a" translate="yes" xml:space="preserve">
          <source>Construct a GroovyCodeSource for an inputStream of groovyCode that has an unknown provenance -- meaning it didn't come from a File or a URL (e.g. a String). The supplied codeBase will be used to construct a File URL that should match up with a java Policy entry that determines the grants to be associated with the class that will be built from the InputStream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0d93e5ca58ecce42b19c02044f7721aff4a4d4a" translate="yes" xml:space="preserve">
          <source>Construct a MemJavaFileObject instance with given groovy class node and stub source code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d7f3d271918e2c93e86ae372c419ccb7ee67d0b" translate="yes" xml:space="preserve">
          <source>Construct a RawJavaFileObject of the given kind and with the given URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b934ba70a434e5887a61ed020be025ff83f7a8b" translate="yes" xml:space="preserve">
          <source>Construct a new IO container using system streams.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bdf80db3c5da83902a8d2c8e40704050bb02109" translate="yes" xml:space="preserve">
          <source>Construct a new IO container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f8895e2c87b6beeddb2dc8a2de7425e4e75aa27" translate="yes" xml:space="preserve">
          <source>Construct a new instance with the specified character sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="972fbecf926f9a6d62d99c60115984c7b7d95e5c" translate="yes" xml:space="preserve">
          <source>Construct a proxy generator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b49a4f47268ef82d1af3e3b50d6c0907f797fe0" translate="yes" xml:space="preserve">
          <source>Construct a proxy generator. This generator is used when we need to create a proxy object for a class or an interface given a map of closures.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a44114ef0c96b18e86d242d599bf656051916eea" translate="yes" xml:space="preserve">
          <source>Construct a simple key based on the method name and the number of parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06de18f7d4d9201052203f0ee59d6c1b62a883f9" translate="yes" xml:space="preserve">
          <source>Construct a tuple of degree 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aad9d466b74f83ef9d4e8706dfb4df0a65dad489" translate="yes" xml:space="preserve">
          <source>Construct a tuple of degree 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faeab2675f866539837cb8975504d0f3e6a022c3" translate="yes" xml:space="preserve">
          <source>Construct a tuple of degree 10.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aed1cbbcf61c9be0854d48bfcd8c3bbf054a0ae7" translate="yes" xml:space="preserve">
          <source>Construct a tuple of degree 11.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80e9be1c48e7e3304e960e40366ce32e748373a3" translate="yes" xml:space="preserve">
          <source>Construct a tuple of degree 12.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="865acdd2e7f4b8cb658cefe53e056233652d4487" translate="yes" xml:space="preserve">
          <source>Construct a tuple of degree 13.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad89d22510bb214b1cff587312599b6cd1d3fd1a" translate="yes" xml:space="preserve">
          <source>Construct a tuple of degree 14.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f64aeffb9e343ed2eabbafcecf02e2df64070ad" translate="yes" xml:space="preserve">
          <source>Construct a tuple of degree 15.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f420a3e696f524a8a3596ce9ab268a09af8acd70" translate="yes" xml:space="preserve">
          <source>Construct a tuple of degree 16.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af24088805146fb277a773f1f214155f43024136" translate="yes" xml:space="preserve">
          <source>Construct a tuple of degree 2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63ae9e57b60118d656e50df23da4dffc096a712f" translate="yes" xml:space="preserve">
          <source>Construct a tuple of degree 3.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adfd9ea3d880cbf39149f354cc4a158031437434" translate="yes" xml:space="preserve">
          <source>Construct a tuple of degree 4.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e0acac4459bfe6f80be50e7e607c56529ca5180" translate="yes" xml:space="preserve">
          <source>Construct a tuple of degree 5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d55cac471ca09892e54c224f5279ba58cdc8b32" translate="yes" xml:space="preserve">
          <source>Construct a tuple of degree 6.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ace89c46cc9c6c8bdf5558a91c7c8ba753aed1da" translate="yes" xml:space="preserve">
          <source>Construct a tuple of degree 7.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab4bc4754e990a515ebe284be7dc79752a00666e" translate="yes" xml:space="preserve">
          <source>Construct a tuple of degree 8.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62247b4dca4c32f90324473371c92d0d99c5ed64" translate="yes" xml:space="preserve">
          <source>Construct a tuple of degree 9.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0314aeec5334f67bc4921e4488c545925831cbe3" translate="yes" xml:space="preserve">
          <source>Constructing Ranges like 0..&amp;lt;0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edb7861f190be64ab7c7a39786a00727bb16847d" translate="yes" xml:space="preserve">
          <source>Constructor</source>
          <target state="translated">Constructor</target>
        </trans-unit>
        <trans-unit id="98dfcf27fbc5a2edec291817a4ad53dc4da6e58b" translate="yes" xml:space="preserve">
          <source>Constructor Detail</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60b63939905f7f97033aaa23260215ac8a754e10" translate="yes" xml:space="preserve">
          <source>Constructor Summary</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f14445c316cc86a3e7514078e796ec52160ed5e" translate="yes" xml:space="preserve">
          <source>Constructor and description</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="385091b42f78e28ba96770b3b40c923790bd166b" translate="yes" xml:space="preserve">
          <source>Constructor for a metamethod with an empty parameter list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e713a529c7046d402fa311245d9d2944c249964e" translate="yes" xml:space="preserve">
          <source>Constructor for the QName.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c447b54a3a5d8ccf42f944ccccf9eaa189a6330" translate="yes" xml:space="preserve">
          <source>Constructor for use by people who only want to interact with the Groovy Doclet Tree (rootDoc)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12c28dda2fe5bba7cba5ddea87084658ff801fba" translate="yes" xml:space="preserve">
          <source>Constructor invocation type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="681f1008832dafc63017ae68c8c85ada903db375" translate="yes" xml:space="preserve">
          <source>Constructor of the &lt;code&gt;CharsetToolkit&lt;/code&gt; utility class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7e8e063517127097569d281bdcdb03140e6eda0" translate="yes" xml:space="preserve">
          <source>Constructor that sets the methods to null</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="758ebd254ec8472aeae2dd4336dea7113259d41c" translate="yes" xml:space="preserve">
          <source>Constructor that sets the property name and type (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b15c48ac940199836386c3b47d6c5434a5b17ef" translate="yes" xml:space="preserve">
          <source>Constructor used when invoking as a standalone application</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="467b73349f54e7a5c811b53d407f8403937af7d3" translate="yes" xml:space="preserve">
          <source>Constructor used when invoking for a specific file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2b996baf69b628ea76f53b5f0a0b4fda0add1ee" translate="yes" xml:space="preserve">
          <source>Constructor used when the &quot;this&quot; object for the Closure is null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b4214f64ede13b3d257b54f7c8c9d9314bd8788" translate="yes" xml:space="preserve">
          <source>Constructor used when the &quot;this&quot; object for the Closure is null. This is rarely the case in normal Groovy usage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce8e5b94f827ea9833c47f88763884bb01b4a412" translate="yes" xml:space="preserve">
          <source>Constructor using a token type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a45affa7a75a9655a464ec447f26d11e1938d7c" translate="yes" xml:space="preserve">
          <source>Constructor wit a list of parameter classes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00677dc0e6a2977f7e9f858aebdadd70a692b659" translate="yes" xml:space="preserve">
          <source>Constructor with registry</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c9d730e54a2d47bb9e661b80ded22b15227b16e" translate="yes" xml:space="preserve">
          <source>Constructor with registry setting methods to null</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98555d5819e7c514696aec641a4261b5bcd0db93" translate="yes" xml:space="preserve">
          <source>Constructor wrapping a &lt;code&gt;Reader&lt;/code&gt; (&lt;code&gt;FileReader&lt;/code&gt;, &lt;code&gt;FileReader&lt;/code&gt;, &lt;code&gt;InputStreamReader&lt;/code&gt;, etc.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba2200976ccedc895aa8714dc1e6fb4e9038e5f4" translate="yes" xml:space="preserve">
          <source>Constructor.</source>
          <target state="translated">Constructor.</target>
        </trans-unit>
        <trans-unit id="60a5c966a71a24034f9238685790a526710ef75d" translate="yes" xml:space="preserve">
          <source>Constructors</source>
          <target state="translated">Constructors</target>
        </trans-unit>
        <trans-unit id="bbff489c85f98a5a96363bcd39eac131b68f4880" translate="yes" xml:space="preserve">
          <source>Constructs a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="944e9164c2265b7c3b1d8ac5f7ee9f4bf48ad2bd" translate="yes" xml:space="preserve">
          <source>Constructs a LRU cache with the default initial capacity</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63cfd00cd907d1cf3fc4e863eeb63b045aa2f049" translate="yes" xml:space="preserve">
          <source>Constructs a LRU cache with the default initial capacity(16)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed2dfb04671cabf2bfc4af667551cc1a3332dcd2" translate="yes" xml:space="preserve">
          <source>Constructs a LRU cache with the specified initial capacity and max size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dd9e20268db7d5318f862aef7f116b9a848951a" translate="yes" xml:space="preserve">
          <source>Constructs a LRU cache with the specified initial capacity and max size. The LRU cache is slower than &lt;a href=&quot;lrucache&quot;&gt;LRUCache&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01c8e6e32a47b70c397dbe9f4c27010384ec953f" translate="yes" xml:space="preserve">
          <source>Constructs a bug error using the given exception</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48bdbb755dd1cbbb3e1de838dcccee45d58aa3a4" translate="yes" xml:space="preserve">
          <source>Constructs a bug error using the given exception and a text with additional information about the cause</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f9a6eb8776370b94634187d8832ba2f7e07e8b0" translate="yes" xml:space="preserve">
          <source>Constructs a cache and initialize the cache with the specified map</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4b232b70b25cbb10c968c380adb0b2ed8c5b773" translate="yes" xml:space="preserve">
          <source>Constructs a cache backed by the specified &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Map.html&quot;&gt;Map&lt;/a&gt; instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="550271865a64d8c7ef318666b14190417f3c8eeb" translate="yes" xml:space="preserve">
          <source>Constructs a cache with limited size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="595e7fe27b27b51c489c4a4ffcdfe44b7d213fec" translate="yes" xml:space="preserve">
          <source>Constructs a cache with unlimited size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ff90758950402ce7ba13faaa2694f45a5e88108" translate="yes" xml:space="preserve">
          <source>Constructs a cache with unlimited size and set its initial capacity</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f71d7ad69644127d3f799e63b3f26a37ef3b690" translate="yes" xml:space="preserve">
          <source>Constructs a new &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/StringBuilder.html&quot;&gt;StringBuilder&lt;/a&gt; instance with default capacity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f1391813000e764e2a281fc37237322ada630ac" translate="yes" xml:space="preserve">
          <source>Constructs a new &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/StringBuilder.html&quot;&gt;StringBuilder&lt;/a&gt; instance with the specified capacity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edcce74bdfbf3c33e4ba9105049ed5b02678f1b2" translate="yes" xml:space="preserve">
          <source>Constructs a new &lt;code&gt;ReverseListIterator&lt;/code&gt; for the provided list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f93c170848f4c7f90addde73db693a4949a60d5e" translate="yes" xml:space="preserve">
          <source>Constructs a new ConfigSlurper instance using the given environment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec468604ddbb8c3b1739d3ccd706384290b307db" translate="yes" xml:space="preserve">
          <source>Constructs a new ExpandoMetaClass instance for the given class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b7cf1b2ae40fdcbf2fb1e84f373d8718bb66e31" translate="yes" xml:space="preserve">
          <source>Constructs a new ExpandoMetaClass instance for the given class optionally placing the MetaClass in the MetaClassRegistry automatically</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9442e1b45c0e93bbc75ded3e5d471039c11db1cf" translate="yes" xml:space="preserve">
          <source>Constructs a new MetaClassRegistryChangeEvent Object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c651917a9c5954e5166efd7648b7d0a74832a8f" translate="yes" xml:space="preserve">
          <source>Constructs a new ThreadManagedBeanProperty for the given arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ae39e271c312794e5afa8322d453540d0551537" translate="yes" xml:space="preserve">
          <source>Constructs a new instance with the specified &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/StringBuilder.html&quot;&gt;StringBuilder&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="944835a6d349b17ef2ca618c81c2995e51d99fba" translate="yes" xml:space="preserve">
          <source>Constructs a new map with the same mappings as the given map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="690252bcf00fba438b6f3d66656e50ab3d63b1a6" translate="yes" xml:space="preserve">
          <source>Constructs a new map with the same mappings as the given map. The map is created with a capacity of twice the number of mappings in the given map or 16 (whichever is greater), and a default load factor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d73b68afbbf4789f68d7abdb9fd06829e511ba0c" translate="yes" xml:space="preserve">
          <source>Constructs a new, empty map with a default initial capacity and load factor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c7e8232fc5d0e412ffa438197cca5525e0a18f0" translate="yes" xml:space="preserve">
          <source>Constructs a new, empty map with the specified initial capacity and default load factor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1b15a9980ee18879d2d7831d6b9223c9c68f4cf" translate="yes" xml:space="preserve">
          <source>Constructs a new, empty map with the specified initial capacity and the specified load factor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86bcad8073bde872914a185384b24f2b3ceea1a8" translate="yes" xml:space="preserve">
          <source>Constructs a treewalker for the antlr generated AST that attempts to visit the AST nodes in the order needed to generate valid groovy source code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df7698a5fe4ca980e0471ce76763ed73c4261b32" translate="yes" xml:space="preserve">
          <source>Constructs an SQL instance using the given Connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ec9599dc1822e1441255c582d5611e8e65c7712" translate="yes" xml:space="preserve">
          <source>Constructs an SQL instance using the given Connection. It is the caller's responsibility to close the Connection after the Sql instance has been used. Depending on which features you are using, you may be able to do this on the connection object directly but the preferred approach is to call the &lt;a href=&quot;#close()&quot;&gt;close()&lt;/a&gt; method which will close the connection but also free any cached resources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b170e1dbc9e92cf5b01ec00d31c0c6e1b9cd5322" translate="yes" xml:space="preserve">
          <source>Constructs an SQL instance using the given DataSource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57c322a22226ce85240ca3e8f3a0f7c1a6ed1ecf" translate="yes" xml:space="preserve">
          <source>Constructs an SQL instance using the given DataSource. Each operation will use a Connection from the DataSource pool and close it when the operation is completed putting it back into the pool.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca26486fe435215349cfe21e83884ac17e948ff8" translate="yes" xml:space="preserve">
          <source>Container for input/output handles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1780739d3d14f82e3acd61bcc25d12b0bcb826c6" translate="yes" xml:space="preserve">
          <source>Container for shell preferences.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6915a8e3de6c77a4aeb8066bdd99a0d33c662ee6" translate="yes" xml:space="preserve">
          <source>Contains a template engine facilitating generation of XML-like markup with optional type checking.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a940e8d454115bb5c817f66de05a51945194a13d" translate="yes" xml:space="preserve">
          <source>Contains all the basic resources and values used by the utility frame work framework.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="470d9c1a0ac0f0fa7e9510e274026b38d94a5ddd" translate="yes" xml:space="preserve">
          <source>Contains the text processing utilities including templating APIs and default implementations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bc923ccf40f6e94e4f38e89ec3fb363e720eff6" translate="yes" xml:space="preserve">
          <source>Content type of the HTTP response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caaf28ddbc2e4fb862a1e7c8bca5c3af2327ee49" translate="yes" xml:space="preserve">
          <source>ContentHandler</source>
          <target state="translated">ContentHandler</target>
        </trans-unit>
        <trans-unit id="58119193ea2e2dc20714ca010b82e09b161b46fc" translate="yes" xml:space="preserve">
          <source>Continuation of put(), called only when sync lock is held and interference has been detected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a39a8a4e91ec568721ac41e6060c662789b2100d" translate="yes" xml:space="preserve">
          <source>Continuation of remove(), called only when sync lock is held and interference has been detected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="077f37c06fd3fb7bfd5b7a8e8a0bbfc351086fab" translate="yes" xml:space="preserve">
          <source>Continue processing; the default</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0321378638fd14171628682578ca1d56f6234eb" translate="yes" xml:space="preserve">
          <source>Controls almost all log output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d40b9281583ab3481f32f71a19387bf319a0375" translate="yes" xml:space="preserve">
          <source>Controls behavior of &lt;a href=&quot;#classgen&quot;&gt;classgen&lt;/a&gt; and other routines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="106b2662c249187c2d4b5ff09287938a48734c1c" translate="yes" xml:space="preserve">
          <source>Convenience constructor to build a template engine which searches for templates into a directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f3f7231aca43257c80547ab4f1397dd41e28801" translate="yes" xml:space="preserve">
          <source>Convenience method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20f4421aff88786dfd762ebe9925c8fdd081a63a" translate="yes" xml:space="preserve">
          <source>Convenience method for &lt;a href=&quot;#findParameterizedType(org.codehaus.groovy.ast.ClassNode,%20org.codehaus.groovy.ast.ClassNode,%20boolean)&quot;&gt;findParameterizedType(ClassNode, ClassNode, boolean)&lt;/a&gt; when the &lt;code&gt;tryToFindExactType&lt;/code&gt; boolean is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="270dd19baa7892609d3719690428b21ba3663a00" translate="yes" xml:space="preserve">
          <source>Convenience method for &lt;a href=&quot;#findParameterizedTypeFromCache(org.codehaus.groovy.ast.ClassNode,%20org.codehaus.groovy.ast.ClassNode,%20boolean)&quot;&gt;findParameterizedTypeFromCache(ClassNode, ClassNode, boolean)&lt;/a&gt; when the &lt;code&gt;tryToFindExactType&lt;/code&gt; boolean is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89d213f2ec8582d75a51093f870daa9297e4fef5" translate="yes" xml:space="preserve">
          <source>Convenience method for binding a single node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf22f3c6502e06cc8249712bf24c6c5602f87d64" translate="yes" xml:space="preserve">
          <source>Convenience method for binding a single node. The call &lt;code&gt;bindNode(node)&lt;/code&gt; is equivalent to &lt;code&gt;bind{ out &amp;lt;&amp;lt; node }&lt;/code&gt;. Returns a &lt;a href=&quot;../lang/writable&quot;&gt;Writable&lt;/a&gt; object, which may be used to render the markup directly to a String, or send the output to a stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dea50dab82bda65446fde939d3bb004caa541d2f" translate="yes" xml:space="preserve">
          <source>Convenience method for converting a Calendar to a corresponding &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Instant.html&quot;&gt;Instant&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e8560c4b6014b8772d2b1b88526a81698a97b99" translate="yes" xml:space="preserve">
          <source>Convenience method for subclasses of GroovyTestCase, identical to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="474a3db21f72e8d05894a74d6ef5dc2cf19bb694" translate="yes" xml:space="preserve">
          <source>Convenience method that calls &lt;a href=&quot;#getMetaPropertyValues(java.lang.Object)&quot;&gt;getMetaPropertyValues(java.lang.Object)&lt;/a&gt;(self) and provides the data in form of simple key/value pairs, i.e. without type() information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14a43134cb739945ae5531c31c7733677bb282f2" translate="yes" xml:space="preserve">
          <source>Convenience method to capitalize the first letter of a CharSequence (typically the first letter of a word).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="680b8327aa871f63aa8575cb31948007ce4764e2" translate="yes" xml:space="preserve">
          <source>Convenience method to capitalize the first letter of a CharSequence (typically the first letter of a word). Example usage:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fe3784f82cf7024f2d35f9707fc64e1ab4be748" translate="yes" xml:space="preserve">
          <source>Convenience method to dynamically create a new instance of this class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93ae74ab2bd136bd8c28081ab9a55c56b812387b" translate="yes" xml:space="preserve">
          <source>Convenience method to dynamically create a new instance of this class. Calls the default constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4a2717cff9b11ca6fc939cd905a4f0897d6a0f2" translate="yes" xml:space="preserve">
          <source>Convenience method to return the current writer instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5ede5f4afd8922f2fcc449a687fd3ea6ebfd123" translate="yes" xml:space="preserve">
          <source>Convenience method to see if an annotated node is &lt;code&gt;@Bindable&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a37cdafa4b7ba3d487cc181fe5094e85e047a0bb" translate="yes" xml:space="preserve">
          <source>Convenience method to see if an annotated node is &lt;code&gt;@Vetoable&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dc275dc14dfba2afc93c30b980ab780b53ed209" translate="yes" xml:space="preserve">
          <source>Convenience method to uncapitalize the first letter of a CharSequence (typically the first letter of a word).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0719b04a22df59f1f993afd450d0624583c23b67" translate="yes" xml:space="preserve">
          <source>Convenience method to uncapitalize the first letter of a CharSequence (typically the first letter of a word). Example usage:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d7a04667c63e8b4b45b082ab46fddfa7ef6c5f8" translate="yes" xml:space="preserve">
          <source>Convenience method when no arguments are required</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eda47e30af59b4b50c967a8cec7b5a7915c672a" translate="yes" xml:space="preserve">
          <source>Convenience method when no arguments are required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e13e59d6ce4834fd431c840e4302c909c69d7ba4" translate="yes" xml:space="preserve">
          <source>Convenience routine to get the first ClassNode, for when you are sure there is only one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e094af4e93fea7e0e582b56878ac9f4a3dd83f16" translate="yes" xml:space="preserve">
          <source>Convenience routine to get the named ClassNode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86476946e4090375373b7aefa70b19df6905f624" translate="yes" xml:space="preserve">
          <source>Convenience routine, primarily for use by the InteractiveShell, that returns true if parse() failed with an unexpected EOF.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a05a4ffdad6e7c79780ffcbd48efea14fe21932e" translate="yes" xml:space="preserve">
          <source>Convenience wrapper for &lt;a href=&quot;errorcollector#addFatalError(org.codehaus.groovy.control.messages.Message)&quot;&gt;ErrorCollector.addFatalError&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e42dc5f5c9229c249e268e2f65842cedd2c37c0f" translate="yes" xml:space="preserve">
          <source>Convert a Collection to a Set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f292d4744a7ec6cb1484a4856a4263927d0b2a3" translate="yes" xml:space="preserve">
          <source>Convert a Collection to a Set. Always returns a new Set even if the Collection is already a Set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd641979b9fd323ee3516a577aed4fff1248ac3d" translate="yes" xml:space="preserve">
          <source>Convert a Date to a Calendar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="001476082eca25a8a3ce69c555d9b8f6acb490e1" translate="yes" xml:space="preserve">
          <source>Convert an Iterable to a List.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f30e149621451bb3013dbc16beccffaba9d5e1e5" translate="yes" xml:space="preserve">
          <source>Convert an Iterable to a List. The Iterable's iterator will become exhausted of elements after making this conversion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc7e60e99c2ddc05344b17ded45aba16afee0baa" translate="yes" xml:space="preserve">
          <source>Convert an Iterable to a Set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0510d879a775dc8ee9587406bebd17fb7c51a5a6" translate="yes" xml:space="preserve">
          <source>Convert an Iterable to a Set. Always returns a new Set even if the Iterable is already a Set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e0dbc8b827f06e50063909fc0075447c9085038" translate="yes" xml:space="preserve">
          <source>Convert an enumeration to a List.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd2b9536e61d36e5dc93818f6850aa0a433618d2" translate="yes" xml:space="preserve">
          <source>Convert an enumeration to a Set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1379d7c920a7c3059103c1dbb5e10bda26fd47f" translate="yes" xml:space="preserve">
          <source>Convert an iterator to a List.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c63db5120cdac006a2db2c0816c8b854b114c1f" translate="yes" xml:space="preserve">
          <source>Convert an iterator to a List. The iterator will become exhausted of elements after making this conversion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4563bb4be51397260d1527a101da5b8a7474bade" translate="yes" xml:space="preserve">
          <source>Convert an iterator to a Set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6588a78cdfa58a5e64d1cdccfc329c786198ed71" translate="yes" xml:space="preserve">
          <source>Convert an iterator to a Set. The iterator will become exhausted of elements after making this conversion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bad3dd4b791c1819f3cb54bb8e467de4a35807e2" translate="yes" xml:space="preserve">
          <source>Convert json to yaml</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09cf2e536e19cfbb11e1b29e4b98d8374f1e242a" translate="yes" xml:space="preserve">
          <source>Convert surrogate chars to XML undefined character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5abcc3d26f4f35dec999bb4fa85581e8eb60356f" translate="yes" xml:space="preserve">
          <source>Convert yaml to json</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3615e313afe75144349b86d4acd15fe560152182" translate="yes" xml:space="preserve">
          <source>Converter</source>
          <target state="translated">Converter</target>
        </trans-unit>
        <trans-unit id="407b560648c07d4a6982581f34e90b03e5c20858" translate="yes" xml:space="preserve">
          <source>Converts a ClosureExpression into the String source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dca4978fcd38bea86f41f7de0401d64b8fd50c5f" translate="yes" xml:space="preserve">
          <source>Converts a String into a standard property name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b27b3741c906170d6435f625f6ed232577569b1" translate="yes" xml:space="preserve">
          <source>Converts a class implementing some trait into a target class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31201cfd71ef7de9f63bec342316233c6d2819da" translate="yes" xml:space="preserve">
          <source>Converts a class implementing some trait into a target class. If the trait is a dynamic proxy and that the target class is assignable to the target object of the proxy, then the target object is returned. Otherwise, falls back to &lt;a href=&quot;../../runtime/defaultgroovymethods#asType(java.lang.Object,%20Class)&quot;&gt;DefaultGroovyMethods.asType&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0162f68d5e74e2f8c9e556340aa886fd5634b00c" translate="yes" xml:space="preserve">
          <source>Converts a given object to a type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8df99632776dbe837104fec66b9f76b22eb11a5" translate="yes" xml:space="preserve">
          <source>Converts a given object to a type. This method is used through the &quot;as&quot; operator and is overloadable as any other operator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d82585f80519ce72b81c6dcc3403f7ac33dec77a" translate="yes" xml:space="preserve">
          <source>Converts a given object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5117deff01111156ac0f858b4d2f21ea2633777d" translate="yes" xml:space="preserve">
          <source>Converts a given value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c17e02750006d20232407fc9cca5db0698a8413" translate="yes" xml:space="preserve">
          <source>Converts a node from a generic type to a specific postfix type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c384da97dabcf11ef14a6a7032c6576eb4fbb81" translate="yes" xml:space="preserve">
          <source>Converts a node from a generic type to a specific postfix type. Throws a &lt;code&gt;GroovyBugError&lt;/code&gt; if the type can't be converted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99aa91da5268d7e8f2a62f05be1c44c5de388536" translate="yes" xml:space="preserve">
          <source>Converts a node from a generic type to a specific prefix type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f3c8952da25450c9ac47bf0b65174baf036a33a" translate="yes" xml:space="preserve">
          <source>Converts a node from a generic type to a specific prefix type. Throws a &lt;code&gt;GroovyBugError&lt;/code&gt; if the type can't be converted and requested.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c291f02fcf8153c7d664e86516fdc183c2d4cce9" translate="yes" xml:space="preserve">
          <source>Converts a primitive type to boolean.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="855286c1cdf4ba5f98a95caa4a11c55e6c23527a" translate="yes" xml:space="preserve">
          <source>Converts an expression into the String source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47e307b0e89f375e17ddab97007c432abfb3380b" translate="yes" xml:space="preserve">
          <source>Converts an expression into the String source. Only some specific expressions like closure expression support this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7e14f0aee5ddd081ab0384fe9b185452029029f" translate="yes" xml:space="preserve">
          <source>Converts an input JSON String into Java objects works with String or char array as input. Produces an Object which can be any of the basic JSON types mapped to Java.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3b49d12d705482302d515823673508b81dfb721" translate="yes" xml:space="preserve">
          <source>Converts an object to its JSON representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="966fcad614faa1aa951167cf61f2fefe649cbe52" translate="yes" xml:space="preserve">
          <source>Converts simple expressions of constants into pre-evaluated simple constants.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73ede6d006724e4660a391cb7841f419c1aee979" translate="yes" xml:space="preserve">
          <source>Converts simple expressions of constants into pre-evaluated simple constants. Handles:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="043620d724edb515017d8ebc5e9d83bd2fece727" translate="yes" xml:space="preserve">
          <source>Converts sourceType to a non primitive by using Groovy casting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5b9be75c3264205ded57b348d2b7e2f7f9df9bd" translate="yes" xml:space="preserve">
          <source>Converts sourceType to a non primitive by using Groovy casting. sourceType might be a primitive This might be done using SBA#castToType</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4636675d64811fa671c697c3e3b8f42d4bfaf5ba" translate="yes" xml:space="preserve">
          <source>Converts the Antlr AST to the Groovy AST.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="728dc5e7ac1f24b56dafbfeb7f04174834fcadf9" translate="yes" xml:space="preserve">
          <source>Converts the Calendar to a corresponding &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/DayOfWeek.html&quot;&gt;DayOfWeek&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc9662124ee8d8bd57c7c04242144c883f1c21df" translate="yes" xml:space="preserve">
          <source>Converts the Calendar to a corresponding &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/DayOfWeek.html&quot;&gt;DayOfWeek&lt;/a&gt;. If the Calendar has a different time zone than the system default, the DayOfWeek will be adjusted into the default time zone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9753db49fadaba0068a99945d6634029484ad872" translate="yes" xml:space="preserve">
          <source>Converts the Calendar to a corresponding &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDateTime.html&quot;&gt;LocalDateTime&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d929b5154c2aa1ef8943e40a54e0ac04a9ece99" translate="yes" xml:space="preserve">
          <source>Converts the Calendar to a corresponding &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDateTime.html&quot;&gt;LocalDateTime&lt;/a&gt;. If the Calendar has a different time zone than the system default, the LocalDateTime will be adjusted into the default time zone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c96d749f2f2caaaf644d4edc51525fd900f22cb4" translate="yes" xml:space="preserve">
          <source>Converts the Calendar to a corresponding &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalTime.html&quot;&gt;LocalTime&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a6967facb02a72e056e9bca8e3bea0f6aceebbc" translate="yes" xml:space="preserve">
          <source>Converts the Calendar to a corresponding &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalTime.html&quot;&gt;LocalTime&lt;/a&gt;. If the Calendar has a different time zone than the system default, the LocalTime will be adjusted into the default time zone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5257b3c7c7596b8db783b76d7168d1e88a6764fc" translate="yes" xml:space="preserve">
          <source>Converts the Calendar to a corresponding &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Month.html&quot;&gt;Month&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db7fee7d00e058ade2b2f763165b528b588deda0" translate="yes" xml:space="preserve">
          <source>Converts the Calendar to a corresponding &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Month.html&quot;&gt;Month&lt;/a&gt;. If the Calendar has a different time zone than the system default, the Month will be adjusted into the default time zone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a83a62ad3169a877b60ef19fae1772346a2872a3" translate="yes" xml:space="preserve">
          <source>Converts the Calendar to a corresponding &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/MonthDay.html&quot;&gt;MonthDay&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f25620305b6c7ce563000a78102eeebdfc5f1b51" translate="yes" xml:space="preserve">
          <source>Converts the Calendar to a corresponding &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/MonthDay.html&quot;&gt;MonthDay&lt;/a&gt;. If the Calendar has a different time zone than the system default, the MonthDay will be adjusted into the default time zone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ded4b2449d694fa4de3f6becc58dbff95a488e46" translate="yes" xml:space="preserve">
          <source>Converts the Calendar to a corresponding &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html&quot;&gt;OffsetDateTime&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b525556260729c68c39dbde4f67bfec10cedc159" translate="yes" xml:space="preserve">
          <source>Converts the Calendar to a corresponding &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/OffsetTime.html&quot;&gt;OffsetTime&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c369779008826e3b33294db1e9f7e95a4cc529d9" translate="yes" xml:space="preserve">
          <source>Converts the Calendar to a corresponding &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Year.html&quot;&gt;Year&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7179b3488ff2769df6adc8b612a65084293a51b" translate="yes" xml:space="preserve">
          <source>Converts the Calendar to a corresponding &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Year.html&quot;&gt;Year&lt;/a&gt;. If the Calendar has a different time zone than the system default, the Year will be adjusted into the default time zone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef7a12d119576225df8aee3e8a7480f32770bea9" translate="yes" xml:space="preserve">
          <source>Converts the Calendar to a corresponding &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/YearMonth.html&quot;&gt;YearMonth&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acf6f52fbf80823505bb418b8a3abf8904658583" translate="yes" xml:space="preserve">
          <source>Converts the Calendar to a corresponding &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/YearMonth.html&quot;&gt;YearMonth&lt;/a&gt;. If the Calendar has a different time zone than the system default, the YearMonth will be adjusted into the default time zone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80d8af32e2cb2381cd70eb802efc301126e285ed" translate="yes" xml:space="preserve">
          <source>Converts the Calendar to a corresponding &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/ZonedDateTime.html&quot;&gt;ZonedDateTime&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e7a5bc1d453cfff1b44c482ee01fa0d27c4f428" translate="yes" xml:space="preserve">
          <source>Converts the Date to a corresponding &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/DayOfWeek.html&quot;&gt;DayOfWeek&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="403a60c151ca3d50d0bd371a5ee275809a9162d1" translate="yes" xml:space="preserve">
          <source>Converts the Date to a corresponding &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDate.html&quot;&gt;LocalDate&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="058bb6a740a239dce53883dfd901f48f26249d27" translate="yes" xml:space="preserve">
          <source>Converts the Date to a corresponding &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDateTime.html&quot;&gt;LocalDateTime&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08c7a8e8966daaca3593c04e28cadf0b3575a1f7" translate="yes" xml:space="preserve">
          <source>Converts the Date to a corresponding &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalTime.html&quot;&gt;LocalTime&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3889c1871849145e54d44ff2251e75e97fa7a078" translate="yes" xml:space="preserve">
          <source>Converts the Date to a corresponding &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Month.html&quot;&gt;Month&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d4dd3535819b3cd28ad26a7374a565dd264bd3c" translate="yes" xml:space="preserve">
          <source>Converts the Date to a corresponding &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/MonthDay.html&quot;&gt;MonthDay&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33b5359aaa442335250322024d685e81a7287e0e" translate="yes" xml:space="preserve">
          <source>Converts the Date to a corresponding &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html&quot;&gt;OffsetDateTime&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83e95b60bf6b29b3bf7cd0fdbf3835de9afc3e2a" translate="yes" xml:space="preserve">
          <source>Converts the Date to a corresponding &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/OffsetTime.html&quot;&gt;OffsetTime&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74d3a985631973f3451ce75f8c04a3fc36981953" translate="yes" xml:space="preserve">
          <source>Converts the Date to a corresponding &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Year.html&quot;&gt;Year&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3a365be22b9e2d9058b367dc70d36e7cb66a606" translate="yes" xml:space="preserve">
          <source>Converts the Date to a corresponding &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/YearMonth.html&quot;&gt;YearMonth&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5c041f86f7b995163a3ab57e9ec194dbae67ebe" translate="yes" xml:space="preserve">
          <source>Converts the Date to a corresponding &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/ZonedDateTime.html&quot;&gt;ZonedDateTime&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3efa79356415d26e461a2d92d181d8e5b563baf2" translate="yes" xml:space="preserve">
          <source>Converts the GString to a File, or delegates to the default &lt;a href=&quot;defaultgroovymethods#asType(Object,Class)&quot;&gt;DefaultGroovyMethods.asType&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c67fe068e559dc0ba796d2f3914ea4c6839155d7" translate="yes" xml:space="preserve">
          <source>Converts the TimeZone to a corresponding &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/ZoneOffset.html&quot;&gt;ZoneOffset&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef239e2543da005416924972d211a01b610a016f" translate="yes" xml:space="preserve">
          <source>Converts the TimeZone to a corresponding &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/ZoneOffset.html&quot;&gt;ZoneOffset&lt;/a&gt;. The offset is determined using the current date/time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1572ee088d3fef9ce8cf95b1c5a5ea3e10b831fa" translate="yes" xml:space="preserve">
          <source>Converts the character to lowercase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86fabc1a38fec8e389d9a3a04a05fe3d5bbf6bf4" translate="yes" xml:space="preserve">
          <source>Converts the character to lowercase. Synonym for 'Character.toLowerCase(this)'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="267c61888ab3687042948f2b4875a5b6db44a38c" translate="yes" xml:space="preserve">
          <source>Converts the character to uppercase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcff29e522da748289984ca66966f8619c36a13e" translate="yes" xml:space="preserve">
          <source>Converts the character to uppercase. Synonym for 'Character.toUpperCase(this)'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ec772523e5533d8b7ef50b34416d43314862e82" translate="yes" xml:space="preserve">
          <source>Converts the given CharSequence into a List of Strings of one character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c9b7ccfe8e75fb82ef6456bcf14349b433f6fc7" translate="yes" xml:space="preserve">
          <source>Converts the given CharSequence into a Set of unique Strings of one character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8587b4417c4d6d306147a0e4b47dfc4b0f0bf80d" translate="yes" xml:space="preserve">
          <source>Converts the given CharSequence into an array of characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83919baef5dc272b7b29554dbbeb8e0718d6d9e1" translate="yes" xml:space="preserve">
          <source>Converts the given array to either a List, Set, or SortedSet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b73d2b958c418dd955cb585a9a01bfccd2c5d99" translate="yes" xml:space="preserve">
          <source>Converts the given array to either a List, Set, or SortedSet. If the given class is something else, the call is deferred to &lt;a href=&quot;#asType(java.lang.Object,%20java.lang.Class)&quot;&gt;asType(Object,Class)&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdd2581ed1981fb1fd878b1282ba5ebfb9559e31" translate="yes" xml:space="preserve">
          <source>Converts the given collection to another type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc3afc7e45c0a71e7aa3c3b5ba3be3a57b8bc97c" translate="yes" xml:space="preserve">
          <source>Converts the given collection to another type. A default concrete type is used for List, Set, or SortedSet. If the given type has a constructor taking a collection, that is used. Otherwise, the call is deferred to &lt;a href=&quot;#asType(java.lang.Object,%20java.lang.Class)&quot;&gt;asType(Object,Class)&lt;/a&gt;. If this collection is already of the given type, the same instance is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13e7d9555e49f35f093c5333b7a8e7a806b79dff" translate="yes" xml:space="preserve">
          <source>Converts the given iterable to another type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e989f70f7c9aedd8b45b5b5f716909a4a8d39b81" translate="yes" xml:space="preserve">
          <source>Converts the given object into an array; if its an array then just cast otherwise wrap it in an array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06ea593ce03c22fb38b4654de681dad9e67c819c" translate="yes" xml:space="preserve">
          <source>Converts the given string into a Boolean object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e3d0606658f0911738c101f18f8d6e734b5883f" translate="yes" xml:space="preserve">
          <source>Converts the given string into a Boolean object. If the trimmed string is &quot;true&quot;, &quot;y&quot; or &quot;1&quot; (ignoring case) then the result is true otherwise it is false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f82ba4d728d6ba02ecd4755d8a0c6d12bdf47c41" translate="yes" xml:space="preserve">
          <source>Converts the given string into a Character object using the first character in the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c299e8d8a2a2907459cce2584daf545ff3353cf6" translate="yes" xml:space="preserve">
          <source>Converts the text of this GPathResult to a BigDecimal object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21dbc193ac319e8c5404306955cfd57629a5d1dc" translate="yes" xml:space="preserve">
          <source>Converts the text of this GPathResult to a BigInteger object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b33f5b4256d79919612c54cf08fda89deed3ff8d" translate="yes" xml:space="preserve">
          <source>Converts the text of this GPathResult to a Boolean object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78dafabae04521e91d4b8575932bc6d52c7424d0" translate="yes" xml:space="preserve">
          <source>Converts the text of this GPathResult to a Double object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ef443b310e1641f1df795af0f247992750e2fbd" translate="yes" xml:space="preserve">
          <source>Converts the text of this GPathResult to a Float object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f037e10dc656a34c3cd71282fbec43615ebd3c91" translate="yes" xml:space="preserve">
          <source>Converts the text of this GPathResult to a Integer object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fa2e14fe7de43968bcb014072db356a30a54ec1" translate="yes" xml:space="preserve">
          <source>Converts the text of this GPathResult to a Long object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b755913774020be49eb138d4e179b312e1f8aebc" translate="yes" xml:space="preserve">
          <source>Converts the text of this GPathResult to a URI object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70e2df42857fd611754d82f1f0979c135eec1227" translate="yes" xml:space="preserve">
          <source>Converts the text of this GPathResult to a URL object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec833f8da48cfffe49186df7d54afdf174a6055f" translate="yes" xml:space="preserve">
          <source>Converts this ConfigObject ino the java.util.Properties format, flatten the tree and prefixing all entries with the given prefix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bf76dcf912967ef8544b3b5f203273a326708c1" translate="yes" xml:space="preserve">
          <source>Converts this ConfigObject into a the java.util.Properties format, flattening the tree structure beforehand</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc9505a0e1d2011d846b78c8067cdf32c9a2e5cc" translate="yes" xml:space="preserve">
          <source>Converts this File to a &lt;a href=&quot;../../../../groovy/lang/writable&quot;&gt;Writable&lt;/a&gt; or delegates to default &lt;a href=&quot;defaultgroovymethods#asType(java.lang.Object,%20java.lang.Class)&quot;&gt;DefaultGroovyMethods.asType&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="824a33b917f8eed84389b17be6ea755e2796f622" translate="yes" xml:space="preserve">
          <source>Converts this File to a &lt;a href=&quot;../../../../groovy/lang/writable&quot;&gt;Writable&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b3cfc843099ae3de5a27f33a8b6ab419abf8bb1" translate="yes" xml:space="preserve">
          <source>Converts this Iterable to a Collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65cc51063d6f483a0c48d7dcea172ed356d45a39" translate="yes" xml:space="preserve">
          <source>Converts this Iterable to a Collection. Returns the original Iterable if it is already a Collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95345733d56d9a48f04b6621272e0275b67ada8f" translate="yes" xml:space="preserve">
          <source>Converts this Iterable to a List.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc6e716e94db0e28b22071c4385b36e070d7a5b2" translate="yes" xml:space="preserve">
          <source>Converts this Iterable to a List. Returns the original Iterable if it is already a List.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e985ff849b8f7f9a5ca9580e4ed2b42820c34f07" translate="yes" xml:space="preserve">
          <source>Converts this Path to a &lt;a href=&quot;../../../../../groovy/lang/writable&quot;&gt;Writable&lt;/a&gt; or delegates to default &lt;a href=&quot;../../../../codehaus/groovy/runtime/defaultgroovymethods#asType(Object,%20Class)&quot;&gt;DefaultGroovyMethods.asType&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f0e71ff18ab9ae655b8a86fc15fdbd7fb449a70" translate="yes" xml:space="preserve">
          <source>Converts this Path to a &lt;a href=&quot;../../../../../groovy/lang/writable&quot;&gt;Writable&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36fd69768cd3d87a89a5f2361ca8a573c5b2eea4" translate="yes" xml:space="preserve">
          <source>Converts this Path to a &lt;a href=&quot;../../../../groovy/lang/writable&quot;&gt;Writable&lt;/a&gt; or delegates to default &lt;a href=&quot;defaultgroovymethods#asType(Object,%20Class)&quot;&gt;DefaultGroovyMethods.asType&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be4fcc203e229453ab3b57bbd73ca339e264dd59" translate="yes" xml:space="preserve">
          <source>Converts this Path to a &lt;a href=&quot;../../../../groovy/lang/writable&quot;&gt;Writable&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0ed89d856f8ec7469b8f49db13deff47f358672" translate="yes" xml:space="preserve">
          <source>Converts this TimeZone to a corresponding &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/ZoneOffset.html&quot;&gt;ZoneOffset&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa4d2ce3cc1003f2c5134daf15e06902660f8b82" translate="yes" xml:space="preserve">
          <source>Converts this TimeZone to a corresponding &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/ZoneOffset.html&quot;&gt;ZoneOffset&lt;/a&gt;. The offset is determined using the date/time of specified Instant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86da36d29000c0848843431b98ece810d076971f" translate="yes" xml:space="preserve">
          <source>Converts this array to a List of the same size, with each element added to the list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e4b01954728c514863fbce6f59717b2e3222787" translate="yes" xml:space="preserve">
          <source>Converts this array to a Set, with each unique element added to the set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d047e2d1a4ea97f55afc05665722d63c315ae68" translate="yes" xml:space="preserve">
          <source>Copied from Apache commons-lang3-3.6</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f623ac781820f50e2af977d5933c3d09579a40a4" translate="yes" xml:space="preserve">
          <source>Copied from JLine 1.0 ClassNameCompletor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb3a50413c3915209605705d78457eda8b0e94c4" translate="yes" xml:space="preserve">
          <source>Copied from JLine 1.0 ClassNameCompletor @return</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="394d35a2cd7ae4f6a8d22bad1dc455ce01557780" translate="yes" xml:space="preserve">
          <source>Copied from JLine 1.0 ClassNameCompletor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5edb35ca94bc05ef774f6e4ce94c13593def0e55" translate="yes" xml:space="preserve">
          <source>Copied from https://github.com/apache/commons-io/blob/master/src/main/java/org/apache/commons/io/output/StringBuilderWriter.java &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/io/Writer.html&quot;&gt;Writer&lt;/a&gt; implementation that outputs to a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/StringBuilder.html&quot;&gt;StringBuilder&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1832ea7baf7cd48e5c66e85b4aa045581fcde2b" translate="yes" xml:space="preserve">
          <source>Copies all</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adf8095ca9d87e59f87822609eb85d1bf8170874" translate="yes" xml:space="preserve">
          <source>Copies all node meta data from the other node to this one</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cff2e549d4a69a999241d92ec243dd0c61e7ba70" translate="yes" xml:space="preserve">
          <source>Copies all of the mappings from the specified map to this one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e2ac812766f424fec04ad6bd2b4cd35c9476be5" translate="yes" xml:space="preserve">
          <source>Copies all of the mappings from the specified map to this one. These mappings replace any mappings that this map had for any of the keys currently in the specified Map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a34c2eaa6d47665ac4979290e1ea0497b7659223" translate="yes" xml:space="preserve">
          <source>Copies all of the mappings from the specified map to this result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="739920aa4b16c064812778776c91a1970f3f4462" translate="yes" xml:space="preserve">
          <source>Copies all of the mappings from the specified map to this result. If the map contains different case versions of the same (case-insensitive) key only the last (according to the natural ordering of the supplied map) will remain after the &lt;code&gt;putAll&lt;/code&gt; method has returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be3d5eee5f662fb4404c9f7b2c65e3b2b5c9fcca" translate="yes" xml:space="preserve">
          <source>Copy constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11b82b33c5aa3ab56b8c0cdcd36689cd962ae65f" translate="yes" xml:space="preserve">
          <source>Copy constructor. Use this if you have a mostly correct configuration for your compilation but you want to make a some changes programmatically. An important reason to prefer this approach is that your code will most likely be forward compatible with future changes to this configuration API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98468510ad58a8a87677c0b3a0eaf77b9f6164b0" translate="yes" xml:space="preserve">
          <source>Core Groovy language classes for implementing data structures, closures, metadata and so forth.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7a6f73540bf6290ec52e9a1dbaf0cfc335db9cc" translate="yes" xml:space="preserve">
          <source>Core method for indy method selection using runtime types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35c419844ae3b69519dfbdc7d91f585cd1a008e2" translate="yes" xml:space="preserve">
          <source>Counts the number of occurrences of a sub CharSequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="333d9e43232be1a1d7e4afd5b111d2e512bb79c6" translate="yes" xml:space="preserve">
          <source>Counts the number of occurrences of the given value from the items within this Iterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="424d9c7ec96b505167a9dc282c0066c1aed74ce9" translate="yes" xml:space="preserve">
          <source>Counts the number of occurrences of the given value from the items within this Iterator. Comparison is done using Groovy's == operator (using &lt;code&gt;compareTo(value) == 0&lt;/code&gt; or &lt;code&gt;equals(value)&lt;/code&gt; ). The iterator will become exhausted of elements after determining the count value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1a9082fb6196ee6f7956c42110814f2bce93ff6" translate="yes" xml:space="preserve">
          <source>Counts the number of occurrences of the given value inside this Iterable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7d9024fa3dede68373fc07c3b244b85f32815e9" translate="yes" xml:space="preserve">
          <source>Counts the number of occurrences of the given value inside this Iterable. Comparison is done using Groovy's == operator (using &lt;code&gt;compareTo(value) == 0&lt;/code&gt; or &lt;code&gt;equals(value)&lt;/code&gt; ).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30427a04f4c1a9b383cd7c3d8080c37acadc3d03" translate="yes" xml:space="preserve">
          <source>Counts the number of occurrences of the given value inside this array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05b68b1587b4cf7d4bb3839aa66a606be68fcc03" translate="yes" xml:space="preserve">
          <source>Counts the number of occurrences of the given value inside this array. Comparison is done using Groovy's == operator (using &lt;code&gt;compareTo(value) == 0&lt;/code&gt; or &lt;code&gt;equals(value)&lt;/code&gt; ).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9595fa6c5254c37d0f7e3729a330c69bd879e89" translate="yes" xml:space="preserve">
          <source>Counts the number of occurrences which satisfy the given closure from inside this Iterable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d1700e77ec3776e073ed251831cec222c0fb4be" translate="yes" xml:space="preserve">
          <source>Counts the number of occurrences which satisfy the given closure from inside this array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a0b866be56b5b2b04c9a681b7a210a134958a7c" translate="yes" xml:space="preserve">
          <source>Counts the number of occurrences which satisfy the given closure from inside this map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="838ff4d977f462ebdc02a0040f34fbee85c28df0" translate="yes" xml:space="preserve">
          <source>Counts the number of occurrences which satisfy the given closure from inside this map. If the closure takes one parameter then it will be passed the Map.Entry. Otherwise, the closure should take two parameters and will be passed the key and value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2475f1febc08838a6ce14e89b351e77b1ff7f925" translate="yes" xml:space="preserve">
          <source>Counts the number of occurrences which satisfy the given closure from the items within this Iterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e40f476d3cf721dbf2a96117bc7136abb2ce0d6a" translate="yes" xml:space="preserve">
          <source>Counts the number of occurrences which satisfy the given closure from the items within this Iterator. The iterator will become exhausted of elements after determining the count value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7df8fc79283ed19a61f94d426b1827848eeaf2fc" translate="yes" xml:space="preserve">
          <source>Covariant methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9adc0a6db628d4cb103d0c153d023d212cc1f834" translate="yes" xml:space="preserve">
          <source>Crawls a folder, iterates over subfolders, looking for class files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afcc04d0bfe506b31dc6ba04d4f3e6c4cbe78541" translate="yes" xml:space="preserve">
          <source>Crawls a folder, iterates over subfolders, looking for class files. @return</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f70bdf0a3eb2c397ca908498f958acb483cae58" translate="yes" xml:space="preserve">
          <source>Create a CaseStatement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c66952d5c17e8a46f803884420b914ba20fc603" translate="yes" xml:space="preserve">
          <source>Create a Collection as a union of a Collection and an Iterable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80ea4c532e562a48e2f61fb163bb01adea90b152" translate="yes" xml:space="preserve">
          <source>Create a Collection as a union of a Collection and an Iterable. If the left collection is a Set, then the returned collection will be a Set otherwise a List. This operation will always create a new object for the result, while the operands remain unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11ea01150d8140b308db3abb4bbf2f0f4ea362de" translate="yes" xml:space="preserve">
          <source>Create a Collection as a union of two collections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97fb17a2962d3f5ae2f4d24f14a9b91b5c4dc66a" translate="yes" xml:space="preserve">
          <source>Create a Collection as a union of two collections. If the left collection is a Set, then the returned collection will be a Set otherwise a List. This operation will always create a new object for the result, while the operands remain unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40db676b8979f4d346b4a49c03a9542ee0d083fa" translate="yes" xml:space="preserve">
          <source>Create a Collection as a union of two iterables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad14964ef9161e3904a94fd56d8fad3788ab1620" translate="yes" xml:space="preserve">
          <source>Create a Collection as a union of two iterables. If the left iterable is a Set, then the returned collection will be a Set otherwise a List. This operation will always create a new object for the result, while the operands remain unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="444c80919a1dc66ba6979a8ff761ca0e9c7880ad" translate="yes" xml:space="preserve">
          <source>Create a Collection composed of the elements of this Iterable, repeated a certain number of times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f7da4a189df5b2ab6cdcb6fb6dee7f0c3605c91" translate="yes" xml:space="preserve">
          <source>Create a Collection composed of the elements of this Iterable, repeated a certain number of times. Note that for non-primitive elements, multiple references to the same instance will be added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d51d3587efdada8ef220b738ae7ac0a4ff997a6e" translate="yes" xml:space="preserve">
          <source>Create a Collection composed of the intersection of both collections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34e47e3217fcea0e1cb075d6185eb9f99a7986c6" translate="yes" xml:space="preserve">
          <source>Create a Collection composed of the intersection of both collections. Any elements that exist in both collections are added to the resultant collection. For collections of custom objects; the objects should implement java.lang.Comparable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="837abab0b73906bc0c17d592237c54da8ca1592d" translate="yes" xml:space="preserve">
          <source>Create a Collection composed of the intersection of both iterables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06a92725fffcbcdd45f78596f8e6ccac7c09082b" translate="yes" xml:space="preserve">
          <source>Create a Collection composed of the intersection of both iterables. Any elements that exist in both iterables are added to the resultant collection. For iterables of custom objects; the objects should implement java.lang.Comparable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="640cfb76e916168c3abc5e55aeeea2851787b00a" translate="yes" xml:space="preserve">
          <source>Create a ForStatement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca746a8edbe752cdb09c1fa248e83b2527cbee07" translate="yes" xml:space="preserve">
          <source>Create a JList, and handle the optional items attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbd7139bc9fc4e7418610eda37bf80240f7de3bb" translate="yes" xml:space="preserve">
          <source>Create a List as a union of a List and a Collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04e2d68cc238c3a62b13bfcf57158001f01ad76c" translate="yes" xml:space="preserve">
          <source>Create a List as a union of a List and a Collection. This operation will always create a new object for the result, while the operands remain unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d588d8b5dd15fec10b2e95d9381ac6174544190c" translate="yes" xml:space="preserve">
          <source>Create a List as a union of a List and an Iterable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dfe224097296d5dc0eb9ba3bb8acbc5622453c1" translate="yes" xml:space="preserve">
          <source>Create a List as a union of a List and an Iterable. This operation will always create a new object for the result, while the operands remain unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a2515cf76d43ba2cc2728143e31a52ad8469e37" translate="yes" xml:space="preserve">
          <source>Create a List as a union of a List and an Object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80ac8b44e2ad3d7bf6372a172268dff3963c23ff" translate="yes" xml:space="preserve">
          <source>Create a List as a union of a List and an Object. This operation will always create a new object for the result, while the operands remain unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="447e1f6e2813e11fa35f7aeb6b8b5e31ee8add5d" translate="yes" xml:space="preserve">
          <source>Create a List composed of the elements of the first list minus every occurrence of elements of the given Collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b95da34d126534f2cb909f330e9318988bdd737f" translate="yes" xml:space="preserve">
          <source>Create a List composed of the elements of this Iterable, repeated a certain number of times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1d0721690103fbc3548e5569dc87613e11dd038" translate="yes" xml:space="preserve">
          <source>Create a List composed of the elements of this Iterable, repeated a certain number of times. Note that for non-primitive elements, multiple references to the same instance will be added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee4209bd84e592d56bef45028347c8c48be29c05" translate="yes" xml:space="preserve">
          <source>Create a List composed of the intersection of a List and an Iterable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="453ff868be6fef4292ae59d9763dc81f670b5bf8" translate="yes" xml:space="preserve">
          <source>Create a List composed of the intersection of a List and an Iterable. Any elements that exist in both iterables are added to the resultant collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c9e1ae1535b34b374cb3ce2639fb375ba0bc5a1" translate="yes" xml:space="preserve">
          <source>Create a Map composed of the entries of the first map minus the entries of the given map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9550aa508750d684b443350e8fa3aff9b43c02f2" translate="yes" xml:space="preserve">
          <source>Create a Map composed of the intersection of both maps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f814d4078a07750cea02b7f40550bf04b73448c5" translate="yes" xml:space="preserve">
          <source>Create a Map composed of the intersection of both maps. Any entries that exist in both maps are added to the resultant map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6e6fdaf47626c21aae2975538a7bc6ca78d8646" translate="yes" xml:space="preserve">
          <source>Create a Set as a union of a Set and a Collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f739f8608527b68d2efadf6632a8359de9e0693" translate="yes" xml:space="preserve">
          <source>Create a Set as a union of a Set and a Collection. This operation will always create a new object for the result, while the operands remain unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7ff07525624a68a752e7a7d6fab9823de1c14ea" translate="yes" xml:space="preserve">
          <source>Create a Set as a union of a Set and an Iterable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="202d17c439d4ef53e92e69e995d26b1059092201" translate="yes" xml:space="preserve">
          <source>Create a Set as a union of a Set and an Iterable. This operation will always create a new object for the result, while the operands remain unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84352104b25fe9542c59f289ac98574ee7d18cfe" translate="yes" xml:space="preserve">
          <source>Create a Set as a union of a Set and an Object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f8c6a91d61a8673366b914f6405c6fb0fe6767f" translate="yes" xml:space="preserve">
          <source>Create a Set as a union of a Set and an Object. This operation will always create a new object for the result, while the operands remain unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baed9250c02213ee93ac9bbccce51f59f922f941" translate="yes" xml:space="preserve">
          <source>Create a Set composed of the elements of the first Set minus the elements from the given Iterable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1509062c0363b183ec22c87f92e12e8d7ef5891a" translate="yes" xml:space="preserve">
          <source>Create a Set composed of the elements of the first Set minus the elements of the given Collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b25bc466851e5e85c41844cfa259d30e744278c" translate="yes" xml:space="preserve">
          <source>Create a Set composed of the elements of the first Set minus the given element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a124a9cb47e177728d480a24031ceb52eab921d7" translate="yes" xml:space="preserve">
          <source>Create a Set composed of the intersection of a Set and an Iterable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3201bdd22bc004bdc5f3aaaa7d9934a13e72b3d9" translate="yes" xml:space="preserve">
          <source>Create a Set composed of the intersection of a Set and an Iterable. Any elements that exist in both iterables are added to the resultant collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47874855964887052627dc54adfa8e7d5159525f" translate="yes" xml:space="preserve">
          <source>Create a SortedSet as a union of a SortedSet and a Collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3409c595f1c52eece29913f8cb54c916da3342c5" translate="yes" xml:space="preserve">
          <source>Create a SortedSet as a union of a SortedSet and a Collection. This operation will always create a new object for the result, while the operands remain unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4af8847585b67df0e5bf690b66ef8f600b026e2" translate="yes" xml:space="preserve">
          <source>Create a SortedSet as a union of a SortedSet and an Iterable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c7fc95d15c07f42c8e3993c049e6490386a8526" translate="yes" xml:space="preserve">
          <source>Create a SortedSet as a union of a SortedSet and an Iterable. This operation will always create a new object for the result, while the operands remain unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc859787d6341baa2f57d6866f21ecf073d783ab" translate="yes" xml:space="preserve">
          <source>Create a SortedSet as a union of a SortedSet and an Object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6c6c86c57bd725c768496362a42bfb223b9b3c3" translate="yes" xml:space="preserve">
          <source>Create a SortedSet as a union of a SortedSet and an Object. This operation will always create a new object for the result, while the operands remain unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dead1b172dcda3119d6eac627d449b03e13e9710" translate="yes" xml:space="preserve">
          <source>Create a SortedSet composed of the elements of the first SortedSet minus the elements of the given Collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32420e5ab6c7a70843f996b6340624417c686581" translate="yes" xml:space="preserve">
          <source>Create a SortedSet composed of the elements of the first SortedSet minus the elements of the given Iterable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f903fa1df37f487835601d127cd895aa498c9dae" translate="yes" xml:space="preserve">
          <source>Create a SortedSet composed of the elements of the first SortedSet minus the given element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb145107a268b0db5cc93ee665f4976961e83b83" translate="yes" xml:space="preserve">
          <source>Create a SortedSet composed of the intersection of a SortedSet and an Iterable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf4d3e12efa0a97c42bfb0de567e286800a92081" translate="yes" xml:space="preserve">
          <source>Create a SortedSet composed of the intersection of a SortedSet and an Iterable. Any elements that exist in both iterables are added to the resultant collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11e9d41ed9bd35cd9b58035461007f5c41f07570" translate="yes" xml:space="preserve">
          <source>Create a String representation of this date according to the given format pattern and timezone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f68a0e313832ee1b8d5c27c3507029e093feb06" translate="yes" xml:space="preserve">
          <source>Create a String representation of this date according to the given format pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9de7db4da30855f810f43be95d7a3926a916f2b" translate="yes" xml:space="preserve">
          <source>Create a String representation of this object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5792a10ca75b0ab0e0e60ba4dfde520399f4454" translate="yes" xml:space="preserve">
          <source>Create a buffered output stream for this file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eaf76087787dafdb915fed18a823ffcc86ac8f9" translate="yes" xml:space="preserve">
          <source>Create a buffered reader for this file, using the specified charset as the encoding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18cb573b6bd2e9de058df9e3748f42ab7df6911d" translate="yes" xml:space="preserve">
          <source>Create a buffered reader for this file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7faaa758aeeddd4c04d62f19d990cae480373328" translate="yes" xml:space="preserve">
          <source>Create a buffered writer for this file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afbcb93b6b6a25846ff1659e99ac29a1e7f0b693" translate="yes" xml:space="preserve">
          <source>Create a collection as a union of a Collection and an Object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="329958e08f4569f7a4d863863f97ed7a8e6d3fbf" translate="yes" xml:space="preserve">
          <source>Create a collection as a union of a Collection and an Object. If the collection is a Set, then the returned collection will be a Set otherwise a List. This operation will always create a new object for the result, while the operands remain unchanged.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
