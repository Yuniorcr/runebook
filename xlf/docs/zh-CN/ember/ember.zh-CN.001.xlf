<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="ember">
    <body>
      <group id="ember">
        <trans-unit id="3e3e11cb8d5904c50d5b611f83edc1cc2639bc78" translate="yes" xml:space="preserve">
          <source>&quot;100% accessible&quot;- what does that mean? From a practical perspective, accessibility really looks more like 90% coding to the spec and 10% filing browser bugs (or keeping track of existing browser bugs). Keep in mind that if a workaround for a browser bug is implemented, an internal tracking issue in the product backlog should be also filed so as to provide the reminder to follow up on browser bugs at a later date.</source>
          <target state="translated">&amp;ldquo; 100％可访问&amp;rdquo;-这是什么意思？从实用的角度来看，可访问性实际上更像是规范的90％编码和10％的浏览器错误归档（或跟踪现有浏览器错误）。请记住，如果实施了针对浏览器错误的解决方法，则还应在产品积压中提交内部跟踪问题，以便提醒您日后跟进浏览器错误。</target>
        </trans-unit>
        <trans-unit id="8bc692707234e7b055558cf789caa5edce8d71f4" translate="yes" xml:space="preserve">
          <source>&quot;Element modifiers&quot; appear inside free-floating curly braces inside of an opening tag. Unlike &lt;strong&gt;attribute syntax&lt;/strong&gt;, which works by substitution (and therefore affects the HTML output of your page), element modifiers work by passing the element to a function that can do anything with it.</source>
          <target state="translated">&amp;ldquo;元素修饰符&amp;rdquo;出现在开始标记内的自由浮动花括号内。与通过替换起作用（并因此影响页面的HTML输出）的&lt;strong&gt;属性语法&lt;/strong&gt;不同，元素修饰符通过将元素传递给可以对其执行任何操作的函数来工作。</target>
        </trans-unit>
        <trans-unit id="afd90f800629f2394b902ad7c46571f055d29df6" translate="yes" xml:space="preserve">
          <source>$ (selector) JQuerypublic</source>
          <target state="translated">$（选择器）JQuerypublic</target>
        </trans-unit>
        <trans-unit id="7ad5b47ca975d96f6b83940832507684f5bf7107" translate="yes" xml:space="preserve">
          <source>$public</source>
          <target state="translated">$public</target>
        </trans-unit>
        <trans-unit id="2bfa34271847bee75bf7a64e2a041f7ec99e8db3" translate="yes" xml:space="preserve">
          <source>&amp;copy; 2017 Yehuda Katz, Tom Dale and Ember.js contributors</source>
          <target state="translated">&amp;copy;2017 Yehuda Katz，Tom Dale和Ember.js贡献者</target>
        </trans-unit>
        <trans-unit id="5dc4e1bde74ee232a1ed96c51fb68a76919c6249" translate="yes" xml:space="preserve">
          <source>&amp;copy; 2020 Yehuda Katz, Tom Dale and Ember.js contributors</source>
          <target state="translated">&amp;copy;2020 Yehuda Katz，Tom Dale和Ember.js贡献者</target>
        </trans-unit>
        <trans-unit id="4170b4b63bf80a1c9d299d4dcb840282756d04b7" translate="yes" xml:space="preserve">
          <source>'findRecord' | 'queryRecord' | 'findAll' | 'findBelongsTo' | 'findHasMany' | 'findMany' | 'query' | 'createRecord' | 'deleteRecord' | 'updateRecord'</source>
          <target state="translated">'findRecord'| 'queryRecord'| 'findAll'| 'findBelongsTo'| 'findHasMany'| 'findMany'| '查询'| 'createRecord'| 'deleteRecord'| 'updateRecord'</target>
        </trans-unit>
        <trans-unit id="8ba23f27f97dd77c72ac0e85b88dd9c27c2e081f" translate="yes" xml:space="preserve">
          <source>'identity'</source>
          <target state="translated">'identity'</target>
        </trans-unit>
        <trans-unit id="fee7ea95005925c7f93792ef0bda676ab556f4e6" translate="yes" xml:space="preserve">
          <source>'top navigation' with 'sub navigation' scenarios</source>
          <target state="translated">&amp;ldquo;顶部导航&amp;rdquo;和&amp;ldquo;子导航&amp;rdquo;方案</target>
        </trans-unit>
        <trans-unit id="69a128a1597d3fee8df9c8ea2f3e104f4da48577" translate="yes" xml:space="preserve">
          <source>(DS.Snapshot|Array)</source>
          <target state="translated">(DS.Snapshot|Array)</target>
        </trans-unit>
        <trans-unit id="e07a3f6a8deca62d37b6ce33ec322ede207d799f" translate="yes" xml:space="preserve">
          <source>(Optional) index to begin slicing from.</source>
          <target state="translated">（可选）从中开始切片的索引。</target>
        </trans-unit>
        <trans-unit id="aa8be7acd5454c5f064c0144e0577783d5fd34a8" translate="yes" xml:space="preserve">
          <source>(Optional) index to end the slice at (but not included).</source>
          <target state="translated">（可选）索引以片的结尾（但不包括）。</target>
        </trans-unit>
        <trans-unit id="bf67a56efcd768e0406fb0a7f2e5adcb8542ed76" translate="yes" xml:space="preserve">
          <source>(Snapshot|SnapshotRecordArray)</source>
          <target state="translated">(Snapshot|SnapshotRecordArray)</target>
        </trans-unit>
        <trans-unit id="5202448800cae538155d3ce37d8ef008413b69a6" translate="yes" xml:space="preserve">
          <source>(String|Array|Object)</source>
          <target state="translated">(String|Array|Object)</target>
        </trans-unit>
        <trans-unit id="83a9bc8480e986e64a3e5424db91d439e44cf9ad" translate="yes" xml:space="preserve">
          <source>(String|Integer)</source>
          <target state="translated">(String|Integer)</target>
        </trans-unit>
        <trans-unit id="e988009be10b30d92fd8fce8098b33fc86a27789" translate="yes" xml:space="preserve">
          <source>(String|Number)</source>
          <target state="translated">(String|Number)</target>
        </trans-unit>
        <trans-unit id="1542152a79ae7b23f685f1ace0382aba4e45a6d9" translate="yes" xml:space="preserve">
          <source>(To stop the server at any time, type Ctrl-C in your terminal.)</source>
          <target state="translated">（要随时停止服务器，请在终端中键入Ctrl-C。）</target>
        </trans-unit>
        <trans-unit id="433602d14ad96b3d6e8fa32bf7809b4a5980423e" translate="yes" xml:space="preserve">
          <source>(e.g., App.Person)</source>
          <target state="translated">（例如，App.Person）</target>
        </trans-unit>
        <trans-unit id="e5b272adff940688bf209175409c1755f3bdcd7a" translate="yes" xml:space="preserve">
          <source>(events)</source>
          <target state="translated">(events)</target>
        </trans-unit>
        <trans-unit id="c1b822de97643ccd4ef477058c74a2636780344e" translate="yes" xml:space="preserve">
          <source>(methods)</source>
          <target state="translated">(methods)</target>
        </trans-unit>
        <trans-unit id="b16c7ac6faff07d7e255da685e52bd66d3bf1575" translate="yes" xml:space="preserve">
          <source>(optional)</source>
          <target state="translated">(optional)</target>
        </trans-unit>
        <trans-unit id="0ab17c55be6fce55674c325ea764faf67c838936" translate="yes" xml:space="preserve">
          <source>(optional) a hash of options</source>
          <target state="translated">（可选）选项的哈希</target>
        </trans-unit>
        <trans-unit id="1632fa33dd3478fc00177535ab0f0e3490587f11" translate="yes" xml:space="preserve">
          <source>(optional) disable instantiation or singleton usage</source>
          <target state="translated">（可选）禁用实例化或单例用法</target>
        </trans-unit>
        <trans-unit id="ff4ff98cb7b85f90f10dd93fa8988f79a50da5ff" translate="yes" xml:space="preserve">
          <source>(optional) jQuery selector that will limit the selector argument to find only within the context's children</source>
          <target state="translated">（可选）jQuery选择器，它将限制选择器参数以仅在上下文的子代中查找</target>
        </trans-unit>
        <trans-unit id="9f4808b61ca09a3bdeb042f6c0ae5dc9b34921ab" translate="yes" xml:space="preserve">
          <source>(optional) name of the controller to inject, defaults to the property's name</source>
          <target state="translated">（可选）要注入的控制器的名称，默认为属性的名称</target>
        </trans-unit>
        <trans-unit id="99d6c8fed0109f920bb130be6cb9c9991abc21ad" translate="yes" xml:space="preserve">
          <source>(optional) name of the service to inject, defaults to the property's name</source>
          <target state="translated">（可选）要注入的服务名称，默认为属性名称</target>
        </trans-unit>
        <trans-unit id="a8826ca98379807a5ad95546c5671719c8214e15" translate="yes" xml:space="preserve">
          <source>(optional) type of the relationship</source>
          <target state="translated">（可选）关系类型</target>
        </trans-unit>
        <trans-unit id="2ee0c01fae9988e502ef997c0ba4530e4e2d6fb7" translate="yes" xml:space="preserve">
          <source>(properties)</source>
          <target state="translated">(properties)</target>
        </trans-unit>
        <trans-unit id="637cc4cfe10df7ae856cc18669a14724645584f0" translate="yes" xml:space="preserve">
          <source>- an error message or array of error messages for the attribute</source>
          <target state="translated">-属性的错误消息或错误消息数组</target>
        </trans-unit>
        <trans-unit id="d110b540beafd1e2a5387be6777876649be8c27b" translate="yes" xml:space="preserve">
          <source>- function to be called on each resolved value to filter the final results.</source>
          <target state="translated">-在每个解析值上调用的函数以过滤最终结果。</target>
        </trans-unit>
        <trans-unit id="87a25ea169801f4b8fa56b18f68e57403fea843f" translate="yes" xml:space="preserve">
          <source>- optional set of attributes and relationships passed in either as IDs or as actual models</source>
          <target state="translated">-以ID或实际模型形式传递的可选属性和关系集</target>
        </trans-unit>
        <trans-unit id="6432ca5ae72b5497347728b9309d2562de0a8564" translate="yes" xml:space="preserve">
          <source>- optional string that describes the promise. Useful for tooling.</source>
          <target state="translated">-描述诺言的可选字符串。对于工具很有用。</target>
        </trans-unit>
        <trans-unit id="921ae5a7a3ac5fa640f14a518fe9b60a20b36a9b" translate="yes" xml:space="preserve">
          <source>- the original request information</source>
          <target state="translated">-原始请求信息</target>
        </trans-unit>
        <trans-unit id="5dabdc2f0168ff9450ae273ee1ce5262f03b08c1" translate="yes" xml:space="preserve">
          <source>- the property name of an attribute or relationship</source>
          <target state="translated">-属性或关系的属性名称</target>
        </trans-unit>
        <trans-unit id="aee82259f4d110878fc6aa1b613100544ef5026f" translate="yes" xml:space="preserve">
          <source>-1 if the first is smaller than the second,</source>
          <target state="translated">如果第一个小于第二个，则为-1，</target>
        </trans-unit>
        <trans-unit id="7129b8b7e61516593db5496d35f0f425c6f8537c" translate="yes" xml:space="preserve">
          <source>-1 if v &amp;lt; w, 0 if v = w and 1 if v &amp;gt; w.</source>
          <target state="translated">如果v &amp;lt;w，则为-1；如果v = w，则为0；如果v&amp;gt; w，则为1。</target>
        </trans-unit>
        <trans-unit id="410e7990b54199a46e5163aee3a4bcd539697d75" translate="yes" xml:space="preserve">
          <source>...Object</source>
          <target state="translated">...Object</target>
        </trans-unit>
        <trans-unit id="e14cf4b3053537f2c0c4b5182a22eda8d8993158" translate="yes" xml:space="preserve">
          <source>...and many more general JavaScript data fetching libraries, which you can install following &lt;a href=&quot;https://guides.emberjs.com/addons-and-dependencies/managing-dependencies/&quot;&gt;this guide&lt;/a&gt;.</source>
          <target state="translated">...以及更多通用的JavaScript数据提取库，您可以按照&lt;a href=&quot;https://guides.emberjs.com/addons-and-dependencies/managing-dependencies/&quot;&gt;本指南&lt;/a&gt;进行安装。</target>
        </trans-unit>
        <trans-unit id="e1d3847afa9af1bd3aa0dcbae48316effda7b5bf" translate="yes" xml:space="preserve">
          <source>...and this HTML when a title of &quot;Ember JS&quot; is passed to the component:</source>
          <target state="translated">...以及标题为&amp;ldquo; Ember JS&amp;rdquo;的HTML传递给组件时：</target>
        </trans-unit>
        <trans-unit id="12635a689d7e3a289fcfe7436181496e6515f866" translate="yes" xml:space="preserve">
          <source>...will render something like this:</source>
          <target state="translated">...将呈现如下内容：</target>
        </trans-unit>
        <trans-unit id="f209d793d6ff303f4f19fc8be3742e83d4fda058" translate="yes" xml:space="preserve">
          <source>../../node_modules/ember-inflector/addon/lib/system/inflector.js:30</source>
          <target state="translated">../../node_modules/ember-inflector/addon/lib/system/inflector.js:30</target>
        </trans-unit>
        <trans-unit id="deccc06762d3c5f2173a7ec7ddea9613472d6391" translate="yes" xml:space="preserve">
          <source>../adapter/addon/-private/build-url-mixin.js:11</source>
          <target state="translated">../adapter/addon/-private/build-url-mixin.js:11</target>
        </trans-unit>
        <trans-unit id="765f9ac0a5c64ab9131812cd5bfbee28ef561e21" translate="yes" xml:space="preserve">
          <source>../adapter/addon/error.js:121</source>
          <target state="translated">../adapter/addon/error.js:121</target>
        </trans-unit>
        <trans-unit id="502418cf20325c984345b33b48c0cf25245c6bf6" translate="yes" xml:space="preserve">
          <source>../adapter/addon/error.js:183</source>
          <target state="translated">../adapter/addon/error.js:183</target>
        </trans-unit>
        <trans-unit id="4c8914d715ccd906fe92071582055922d8e98488" translate="yes" xml:space="preserve">
          <source>../adapter/addon/error.js:216</source>
          <target state="translated">../adapter/addon/error.js:216</target>
        </trans-unit>
        <trans-unit id="d3fd531733ace361526470a7c436d07c273c6ce7" translate="yes" xml:space="preserve">
          <source>../adapter/addon/error.js:228</source>
          <target state="translated">../adapter/addon/error.js:228</target>
        </trans-unit>
        <trans-unit id="1771bbcd3ad603444c212adcbb43dfa72b024383" translate="yes" xml:space="preserve">
          <source>../adapter/addon/error.js:262</source>
          <target state="translated">../adapter/addon/error.js:262</target>
        </trans-unit>
        <trans-unit id="9e95447e3097b05e506c94c873c395d72865108f" translate="yes" xml:space="preserve">
          <source>../adapter/addon/error.js:275</source>
          <target state="translated">../adapter/addon/error.js:275</target>
        </trans-unit>
        <trans-unit id="bff56f0c5362f986e711f29153189d2abc03bb8f" translate="yes" xml:space="preserve">
          <source>../adapter/addon/error.js:313</source>
          <target state="translated">../adapter/addon/error.js:313</target>
        </trans-unit>
        <trans-unit id="649c3059a4a1a0db8bc1e4075bb4675e440c5fa8" translate="yes" xml:space="preserve">
          <source>../adapter/addon/error.js:326</source>
          <target state="translated">../adapter/addon/error.js:326</target>
        </trans-unit>
        <trans-unit id="41964ea2055ff49294731cee7e4a8ee89a5b821c" translate="yes" xml:space="preserve">
          <source>../adapter/addon/error.js:8</source>
          <target state="translated">../adapter/addon/error.js:8</target>
        </trans-unit>
        <trans-unit id="2a86d8f75433028a1830af10ff9a58602691a00e" translate="yes" xml:space="preserve">
          <source>../adapter/addon/index.js:3</source>
          <target state="translated">../adapter/addon/index.js:3</target>
        </trans-unit>
        <trans-unit id="20e708e0cd108c6d2eaca879fa13b2b9c1478047" translate="yes" xml:space="preserve">
          <source>../adapter/addon/json-api.js:11</source>
          <target state="translated">../adapter/addon/json-api.js:11</target>
        </trans-unit>
        <trans-unit id="d23e3a87bf84d357a33fb54d4fdae8fdce7836e3" translate="yes" xml:space="preserve">
          <source>../adapter/addon/rest.js:36</source>
          <target state="translated">../adapter/addon/rest.js:36</target>
        </trans-unit>
        <trans-unit id="9ad703dfb4846de732bdd2fe232f582454ec517f" translate="yes" xml:space="preserve">
          <source>../model/addon/-private/errors.js:13</source>
          <target state="translated">../model/addon/-private/errors.js:13</target>
        </trans-unit>
        <trans-unit id="5f9d8014c97c3fc114332cc555dd3147c5547b83" translate="yes" xml:space="preserve">
          <source>../model/addon/-private/system/many-array.js:14</source>
          <target state="translated">../model/addon/-private/system/many-array.js:14</target>
        </trans-unit>
        <trans-unit id="a1a7d9f26a5919b85754a9d58a58e35e79f8dfd8" translate="yes" xml:space="preserve">
          <source>../model/addon/index.ts:1</source>
          <target state="translated">../model/addon/index.ts:1</target>
        </trans-unit>
        <trans-unit id="1974ec95e54f0d9bc887d950f2497a37df8c4a3a" translate="yes" xml:space="preserve">
          <source>../serializer/addon/-private/embedded-records-mixin.js:12</source>
          <target state="translated">../serializer/addon/-private/embedded-records-mixin.js:12</target>
        </trans-unit>
        <trans-unit id="08bd971a95bb984241b1eba8aa719d02e313e3e9" translate="yes" xml:space="preserve">
          <source>../serializer/addon/-private/transforms/boolean.js:9</source>
          <target state="translated">../serializer/addon/-private/transforms/boolean.js:9</target>
        </trans-unit>
        <trans-unit id="6a44be3b98a100ce433f8cd3fd504f9fd578f11b" translate="yes" xml:space="preserve">
          <source>../serializer/addon/-private/transforms/date.js:7</source>
          <target state="translated">../serializer/addon/-private/transforms/date.js:7</target>
        </trans-unit>
        <trans-unit id="733c9b5f7d0056458fd8ece47127d42694e19c11" translate="yes" xml:space="preserve">
          <source>../serializer/addon/-private/transforms/number.js:11</source>
          <target state="translated">../serializer/addon/-private/transforms/number.js:11</target>
        </trans-unit>
        <trans-unit id="15ea7c1726ba42fd4f7f1fe6f3747ebbad7730f1" translate="yes" xml:space="preserve">
          <source>../serializer/addon/-private/transforms/string.js:9</source>
          <target state="translated">../serializer/addon/-private/transforms/string.js:9</target>
        </trans-unit>
        <trans-unit id="55a0444a62cf8d6677e3c312babb8e8daad1b045" translate="yes" xml:space="preserve">
          <source>../serializer/addon/-private/transforms/transform.js:7</source>
          <target state="translated">../serializer/addon/-private/transforms/transform.js:7</target>
        </trans-unit>
        <trans-unit id="ad88318d4529d6e2ae0b9555e1bb1661bb915524" translate="yes" xml:space="preserve">
          <source>../serializer/addon/index.js:7</source>
          <target state="translated">../serializer/addon/index.js:7</target>
        </trans-unit>
        <trans-unit id="db2435f66e4e6894b35f3789e11c2b92a679775c" translate="yes" xml:space="preserve">
          <source>../serializer/addon/json-api.js:16</source>
          <target state="translated">../serializer/addon/json-api.js:16</target>
        </trans-unit>
        <trans-unit id="e05476c3406a9dda00da152ecad7f4269e470be9" translate="yes" xml:space="preserve">
          <source>../serializer/addon/json.js:17</source>
          <target state="translated">../serializer/addon/json.js:17</target>
        </trans-unit>
        <trans-unit id="cc03f99844e44b38d4f3bf5efd92002c542ea7a8" translate="yes" xml:space="preserve">
          <source>../serializer/addon/rest.js:19</source>
          <target state="translated">../serializer/addon/rest.js:19</target>
        </trans-unit>
        <trans-unit id="175673eec0d542ea65ae5e5cfc34a549066e4f24" translate="yes" xml:space="preserve">
          <source>../store/addon/-private/system/ds-model-store.ts:29</source>
          <target state="translated">../store/addon/-private/system/ds-model-store.ts:29</target>
        </trans-unit>
        <trans-unit id="31f64e2f8270f86bfd2dea7c7b49b8af103a4497" translate="yes" xml:space="preserve">
          <source>../store/addon/-private/system/model/states.js:11</source>
          <target state="translated">../store/addon/-private/system/model/states.js:11</target>
        </trans-unit>
        <trans-unit id="51ddd60c92b3994a548a0379a849e75d1e2d72e6" translate="yes" xml:space="preserve">
          <source>../store/addon/-private/system/promise-proxies.js:12</source>
          <target state="translated">../store/addon/-private/system/promise-proxies.js:12</target>
        </trans-unit>
        <trans-unit id="a8de9d47b3ced6713df3445f18bd188545c5cea5" translate="yes" xml:space="preserve">
          <source>../store/addon/-private/system/promise-proxies.js:44</source>
          <target state="translated">../store/addon/-private/system/promise-proxies.js:44</target>
        </trans-unit>
        <trans-unit id="54acddf54d901372c2d407f6ef50285674a25f50" translate="yes" xml:space="preserve">
          <source>../store/addon/-private/system/record-arrays/adapter-populated-record-array.js:15</source>
          <target state="translated">../store/addon/-private/system/record-arrays/adapter-populated-record-array.js:15</target>
        </trans-unit>
        <trans-unit id="a386d1de8d4c573bc141305407ebc49388e3ab44" translate="yes" xml:space="preserve">
          <source>../store/addon/-private/system/record-arrays/record-array.js:21</source>
          <target state="translated">../store/addon/-private/system/record-arrays/record-array.js:21</target>
        </trans-unit>
        <trans-unit id="e0c3cc920c3f050af2bc284f1ec6b894702717ef" translate="yes" xml:space="preserve">
          <source>../store/addon/-private/system/references/belongs-to.js:16</source>
          <target state="translated">../store/addon/-private/system/references/belongs-to.js:16</target>
        </trans-unit>
        <trans-unit id="35db2e6942ba49c26988a925aae5934545dd1951" translate="yes" xml:space="preserve">
          <source>../store/addon/-private/system/references/has-many.js:15</source>
          <target state="translated">../store/addon/-private/system/references/has-many.js:15</target>
        </trans-unit>
        <trans-unit id="d291d2f52958122b94102f83edbb14c9d8bc1188" translate="yes" xml:space="preserve">
          <source>../store/addon/-private/system/references/record.ts:13</source>
          <target state="translated">../store/addon/-private/system/references/record.ts:13</target>
        </trans-unit>
        <trans-unit id="f2803d0a9597cbcc306e45c4397c6ba75f562831" translate="yes" xml:space="preserve">
          <source>../store/addon/-private/system/references/reference.ts:40</source>
          <target state="translated">../store/addon/-private/system/references/reference.ts:40</target>
        </trans-unit>
        <trans-unit id="58982cade8a6308c72302d1ce64bfd3109b0520f" translate="yes" xml:space="preserve">
          <source>../store/addon/-private/ts-interfaces/minimum-adapter-interface.ts:149</source>
          <target state="translated">../store/addon/-private/ts-interfaces/minimum-adapter-interface.ts:149</target>
        </trans-unit>
        <trans-unit id="4369799c1c9e282fc5659c25d7ac2fe611b89791" translate="yes" xml:space="preserve">
          <source>../store/addon/-private/ts-interfaces/minimum-serializer-interface.ts:113</source>
          <target state="translated">../store/addon/-private/ts-interfaces/minimum-serializer-interface.ts:113</target>
        </trans-unit>
        <trans-unit id="19e0a939acd1228061f349746be86f1189303df1" translate="yes" xml:space="preserve">
          <source>.@each</source>
          <target state="translated">.@each</target>
        </trans-unit>
        <trans-unit id="d9d17ac7f7c28febf4cd18a15a7ae2a2219fdfbd" translate="yes" xml:space="preserve">
          <source>.Adapter</source>
          <target state="translated">.Adapter</target>
        </trans-unit>
        <trans-unit id="7668ce48bdd7ca0424c5fe9236d75884ca9d5fd2" translate="yes" xml:space="preserve">
          <source>.Adapter (methods)</source>
          <target state="translated">。适配器（方法）</target>
        </trans-unit>
        <trans-unit id="9060a99e261cf6bfaea630fbb6f1069eee1bbec3" translate="yes" xml:space="preserve">
          <source>.Adapter.asyncEnd()</source>
          <target state="translated">.Adapter.asyncEnd()</target>
        </trans-unit>
        <trans-unit id="5dd6eb87dd78b489e4de1f345aee7b56294a2be4" translate="yes" xml:space="preserve">
          <source>.Adapter.asyncStart()</source>
          <target state="translated">.Adapter.asyncStart()</target>
        </trans-unit>
        <trans-unit id="533b060a2e002b516156b61218bd9184327778a3" translate="yes" xml:space="preserve">
          <source>.Adapter.exception()</source>
          <target state="translated">.Adapter.exception()</target>
        </trans-unit>
        <trans-unit id="a53155d282762217cad9f95d254c87d3ebe5a9d9" translate="yes" xml:space="preserve">
          <source>.BootOptions</source>
          <target state="translated">.BootOptions</target>
        </trans-unit>
        <trans-unit id="589a92bf5960fa418a437b95414a822fffaa964b" translate="yes" xml:space="preserve">
          <source>.BootOptions (properties)</source>
          <target state="translated">.BootOptions（属性）</target>
        </trans-unit>
        <trans-unit id="279f587bff69246088b9942c59ee490d662a90ca" translate="yes" xml:space="preserve">
          <source>.BootOptions.document</source>
          <target state="translated">.BootOptions.document</target>
        </trans-unit>
        <trans-unit id="633d2092809173844c1bd09d916e39d8d82c509b" translate="yes" xml:space="preserve">
          <source>.BootOptions.isBrowser</source>
          <target state="translated">.BootOptions.isBrowser</target>
        </trans-unit>
        <trans-unit id="fa1a53f092f07e7a527c21afb35d5746999d8fec" translate="yes" xml:space="preserve">
          <source>.BootOptions.location</source>
          <target state="translated">.BootOptions.location</target>
        </trans-unit>
        <trans-unit id="dafb35b4bc7f15b43ce9d9e8b1c60a3f88fd1a37" translate="yes" xml:space="preserve">
          <source>.BootOptions.rootElement</source>
          <target state="translated">.BootOptions.rootElement</target>
        </trans-unit>
        <trans-unit id="28fab097943776b7b239b7a85a2f4e1330c8e986" translate="yes" xml:space="preserve">
          <source>.BootOptions.shouldRender</source>
          <target state="translated">.BootOptions.shouldRender</target>
        </trans-unit>
        <trans-unit id="4d1da1f82e195fc4cd2c2e295420617bacb809f0" translate="yes" xml:space="preserve">
          <source>.EventTarget</source>
          <target state="translated">.EventTarget</target>
        </trans-unit>
        <trans-unit id="032888fc509a42902f1fc2e0aa20a989280ea372" translate="yes" xml:space="preserve">
          <source>.EventTarget (methods)</source>
          <target state="translated">.EventTarget（方法）</target>
        </trans-unit>
        <trans-unit id="2e54cc7c226a3e70b0084e3e22953cb59c7f67fd" translate="yes" xml:space="preserve">
          <source>.Promise</source>
          <target state="translated">.Promise</target>
        </trans-unit>
        <trans-unit id="72b7c69e6fda670c1ceb02f8a89c3f3af535f103" translate="yes" xml:space="preserve">
          <source>.Promise (methods)</source>
          <target state="translated">。承诺（方法）</target>
        </trans-unit>
        <trans-unit id="2426c00a83d2e3a89cf5a95cb4a96e8eec00599d" translate="yes" xml:space="preserve">
          <source>.Promise.catch()</source>
          <target state="translated">.Promise.catch()</target>
        </trans-unit>
        <trans-unit id="3ba572404828747c05da534c74d35c1005acfbd6" translate="yes" xml:space="preserve">
          <source>.Promise.finally()</source>
          <target state="translated">.Promise.finally()</target>
        </trans-unit>
        <trans-unit id="df294430294c0bc428fab183783c45d8ba8a920f" translate="yes" xml:space="preserve">
          <source>.Promise.then()</source>
          <target state="translated">.Promise.then()</target>
        </trans-unit>
        <trans-unit id="74e24ea39685065c17b126d5a06c651d736e383c" translate="yes" xml:space="preserve">
          <source>.QUnitAdapter</source>
          <target state="translated">.QUnitAdapter</target>
        </trans-unit>
        <trans-unit id="e463350c4ca53a5c0fa9973f8ba8e0f21ffc25bc" translate="yes" xml:space="preserve">
          <source>.QUnitAdapter (methods)</source>
          <target state="translated">.QUnitAdapter（方法）</target>
        </trans-unit>
        <trans-unit id="6db24efa3482bf71ce0881ffc5eb8131db942335" translate="yes" xml:space="preserve">
          <source>.VERSION</source>
          <target state="translated">.VERSION</target>
        </trans-unit>
        <trans-unit id="64ffa3d21ebf55257a1ee59f56051ff3cd5af347" translate="yes" xml:space="preserve">
          <source>.acceptsModelName</source>
          <target state="translated">.acceptsModelName</target>
        </trans-unit>
        <trans-unit id="d9f8486636249cc673d801d5241a02030f0ca4ea" translate="yes" xml:space="preserve">
          <source>.actions</source>
          <target state="translated">.actions</target>
        </trans-unit>
        <trans-unit id="a59446f613eb73546c8b5722d0129261a57a2c5a" translate="yes" xml:space="preserve">
          <source>.activate (event)</source>
          <target state="translated">.activate（事件）</target>
        </trans-unit>
        <trans-unit id="ba41aeb393e6f7013d237ef6b3f5c6464018dba8" translate="yes" xml:space="preserve">
          <source>.activate()</source>
          <target state="translated">.activate()</target>
        </trans-unit>
        <trans-unit id="d6e2c2f3f818791e4b3850a029a9bc0ca0297a22" translate="yes" xml:space="preserve">
          <source>.activeClass</source>
          <target state="translated">.activeClass</target>
        </trans-unit>
        <trans-unit id="06a8fa3ade80812fdb59df02c4aa3a12ed58e453" translate="yes" xml:space="preserve">
          <source>.adapter</source>
          <target state="translated">.adapter</target>
        </trans-unit>
        <trans-unit id="4a7d93e466995644b9adc4f343e1fdd822525fe4" translate="yes" xml:space="preserve">
          <source>.addArrayObserver()</source>
          <target state="translated">.addArrayObserver()</target>
        </trans-unit>
        <trans-unit id="c36d563166cf45d777a6978909ff8a747f89dabb" translate="yes" xml:space="preserve">
          <source>.addListener()</source>
          <target state="translated">.addListener()</target>
        </trans-unit>
        <trans-unit id="f56ddaa66f6e807d6bf6f0d6b917f9d79e61aeba" translate="yes" xml:space="preserve">
          <source>.addObject()</source>
          <target state="translated">.addObject()</target>
        </trans-unit>
        <trans-unit id="17ed1fb8ddd9db90113dcf19f986ad197af6c691" translate="yes" xml:space="preserve">
          <source>.addObjects()</source>
          <target state="translated">.addObjects()</target>
        </trans-unit>
        <trans-unit id="616c2673fd001fd3f11f50fe2384edeb2cbafed7" translate="yes" xml:space="preserve">
          <source>.addObserver()</source>
          <target state="translated">.addObserver()</target>
        </trans-unit>
        <trans-unit id="a95420db59294501c5e04e27388ef56e4321d71b" translate="yes" xml:space="preserve">
          <source>.advanceReadiness()</source>
          <target state="translated">.advanceReadiness()</target>
        </trans-unit>
        <trans-unit id="70365f4aaafbcfbf251d0b7e1a08a2cfd989b1d7" translate="yes" xml:space="preserve">
          <source>.afterModel()</source>
          <target state="translated">.afterModel()</target>
        </trans-unit>
        <trans-unit id="f33cde8e3965bf348d7cdaa0deb1bdc4cd7f58e2" translate="yes" xml:space="preserve">
          <source>.alias()</source>
          <target state="translated">.alias()</target>
        </trans-unit>
        <trans-unit id="2f9611ed3103b152042575554afe5a730cd0ede1" translate="yes" xml:space="preserve">
          <source>.aliasMethod()</source>
          <target state="translated">.aliasMethod()</target>
        </trans-unit>
        <trans-unit id="60f30da724a2aea6cd8dccd7b043e6819fa0f14f" translate="yes" xml:space="preserve">
          <source>.all()</source>
          <target state="translated">.all()</target>
        </trans-unit>
        <trans-unit id="f95254a235428362ef0e6d7051bf6a6c531b6993" translate="yes" xml:space="preserve">
          <source>.allSettled()</source>
          <target state="translated">.allSettled()</target>
        </trans-unit>
        <trans-unit id="044d54a8f22feb4f6aab11ebb820a81c8503c591" translate="yes" xml:space="preserve">
          <source>.and()</source>
          <target state="translated">.and()</target>
        </trans-unit>
        <trans-unit id="6b33de0e9dba55b46253828d1c54bdb48574898b" translate="yes" xml:space="preserve">
          <source>.any()</source>
          <target state="translated">.any()</target>
        </trans-unit>
        <trans-unit id="e94620ff8f3616e737afa388d977b73d4b68e087" translate="yes" xml:space="preserve">
          <source>.ariaRole</source>
          <target state="translated">.ariaRole</target>
        </trans-unit>
        <trans-unit id="6a1236669c13e49fc66c8219a6699a1d08ef0e75" translate="yes" xml:space="preserve">
          <source>.arrayContentDidChange()</source>
          <target state="translated">.arrayContentDidChange()</target>
        </trans-unit>
        <trans-unit id="c08a832ac3b5a1442768735f7da85b5353530e73" translate="yes" xml:space="preserve">
          <source>.arrayContentWillChange()</source>
          <target state="translated">.arrayContentWillChange()</target>
        </trans-unit>
        <trans-unit id="324feb7ee87cf11bef0eafd56649e2aa8a0ff580" translate="yes" xml:space="preserve">
          <source>.assert()</source>
          <target state="translated">.assert()</target>
        </trans-unit>
        <trans-unit id="4fb1d337a3b2724679dc1a65dec7a270fd0b297d" translate="yes" xml:space="preserve">
          <source>.assign()</source>
          <target state="translated">.assign()</target>
        </trans-unit>
        <trans-unit id="13dcbab7aa59bafe4621bd55b92103397f240dce" translate="yes" xml:space="preserve">
          <source>.attributeBindings</source>
          <target state="translated">.attributeBindings</target>
        </trans-unit>
        <trans-unit id="77d9c4c8897afe31d19abcc6b7d6460a5b67f63a" translate="yes" xml:space="preserve">
          <source>.beforeModel()</source>
          <target state="translated">.beforeModel()</target>
        </trans-unit>
        <trans-unit id="5b40fb30d6092371937b634a9b6332bcac529690" translate="yes" xml:space="preserve">
          <source>.begin()</source>
          <target state="translated">.begin()</target>
        </trans-unit>
        <trans-unit id="856a1b3cdbdb46b1ca6e91af0585578d48848d07" translate="yes" xml:space="preserve">
          <source>.bind()</source>
          <target state="translated">.bind()</target>
        </trans-unit>
        <trans-unit id="a71dd0214da00aea488e1b200a7382e243c07ee9" translate="yes" xml:space="preserve">
          <source>.bool()</source>
          <target state="translated">.bool()</target>
        </trans-unit>
        <trans-unit id="93ff89749be2e98f95b5ce1f6235980257fe59ce" translate="yes" xml:space="preserve">
          <source>.cacheFor()</source>
          <target state="translated">.cacheFor()</target>
        </trans-unit>
        <trans-unit id="142b595906473bb40b3090ecbade321a5c03c198" translate="yes" xml:space="preserve">
          <source>.camelize()</source>
          <target state="translated">.camelize()</target>
        </trans-unit>
        <trans-unit id="2f2551f25c0c8be7ee10562b630d13eafec1e853" translate="yes" xml:space="preserve">
          <source>.canCatalogEntriesByType()</source>
          <target state="translated">.canCatalogEntriesByType()</target>
        </trans-unit>
        <trans-unit id="e7736015cfa961ad4c007b073c9bb1ef33149ce2" translate="yes" xml:space="preserve">
          <source>.cancel()</source>
          <target state="translated">.cancel()</target>
        </trans-unit>
        <trans-unit id="2344d8bdd6ede651f53874d4814cefa0ed0ecc06" translate="yes" xml:space="preserve">
          <source>.capitalize()</source>
          <target state="translated">.capitalize()</target>
        </trans-unit>
        <trans-unit id="8439ac6dc3fa14937ec506bf42624d7c406b7729" translate="yes" xml:space="preserve">
          <source>.catalogEntriesByType()</source>
          <target state="translated">.catalogEntriesByType()</target>
        </trans-unit>
        <trans-unit id="54e90cf454b63fd455dbc92d24a45d3da319e1c6" translate="yes" xml:space="preserve">
          <source>.catch()</source>
          <target state="translated">.catch()</target>
        </trans-unit>
        <trans-unit id="3816cca0bdc1756221aef1a3f15d50488eac306a" translate="yes" xml:space="preserve">
          <source>.checkWaiters()</source>
          <target state="translated">.checkWaiters()</target>
        </trans-unit>
        <trans-unit id="b3d88c7da9c88a8d974e345a4637afbb4de67e46" translate="yes" xml:space="preserve">
          <source>.classNameBindings</source>
          <target state="translated">.classNameBindings</target>
        </trans-unit>
        <trans-unit id="6aed7018b6e28a871eb95209d96a5c712b65ed1a" translate="yes" xml:space="preserve">
          <source>.classNames</source>
          <target state="translated">.classNames</target>
        </trans-unit>
        <trans-unit id="0ca143eb7d6519fc8217f13f529912862d6faf06" translate="yes" xml:space="preserve">
          <source>.classify()</source>
          <target state="translated">.classify()</target>
        </trans-unit>
        <trans-unit id="97d0c1b2a22fb8070a6017c75d88cfa057db7360" translate="yes" xml:space="preserve">
          <source>.clear()</source>
          <target state="translated">.clear()</target>
        </trans-unit>
        <trans-unit id="1e97d4d78725d4ecf32ba825a70fad7722570885" translate="yes" xml:space="preserve">
          <source>.click()</source>
          <target state="translated">.click()</target>
        </trans-unit>
        <trans-unit id="253b77c1d67d0655afd2be0c08d8eaf9612a3ff8" translate="yes" xml:space="preserve">
          <source>.collect()</source>
          <target state="translated">.collect()</target>
        </trans-unit>
        <trans-unit id="e77cd2823b7b2fc17d0760a3c5e99210fcb67feb" translate="yes" xml:space="preserve">
          <source>.compact()</source>
          <target state="translated">.compact()</target>
        </trans-unit>
        <trans-unit id="0fdeb1c6d65c66a6a86b995546fdbc0615e46e07" translate="yes" xml:space="preserve">
          <source>.compare()</source>
          <target state="translated">.compare()</target>
        </trans-unit>
        <trans-unit id="96d3780072df71a6459231c821d2b3f4666da624" translate="yes" xml:space="preserve">
          <source>.compute()</source>
          <target state="translated">.compute()</target>
        </trans-unit>
        <trans-unit id="2963725ff956f4be6c72f27262e7e06a6da46f22" translate="yes" xml:space="preserve">
          <source>.concatenatedProperties</source>
          <target state="translated">.concatenatedProperties</target>
        </trans-unit>
        <trans-unit id="d4d222ee0c6fed38d4a5b945d658185f7de139da" translate="yes" xml:space="preserve">
          <source>.containerDebugAdapter</source>
          <target state="translated">.containerDebugAdapter</target>
        </trans-unit>
        <trans-unit id="b0afd2ba7155b0630f555ff60ab15e534979eba6" translate="yes" xml:space="preserve">
          <source>.controller</source>
          <target state="translated">.controller</target>
        </trans-unit>
        <trans-unit id="268b5e34d861b733b2ff3f40a1be18070619b31d" translate="yes" xml:space="preserve">
          <source>.controller()</source>
          <target state="translated">.controller()</target>
        </trans-unit>
        <trans-unit id="fb5d390b324fe4314abe3b704f3fa96577bacda2" translate="yes" xml:space="preserve">
          <source>.controllerFor()</source>
          <target state="translated">.controllerFor()</target>
        </trans-unit>
        <trans-unit id="114fa033b023428b940d87af567fd5a73264a8cd" translate="yes" xml:space="preserve">
          <source>.controllerName</source>
          <target state="translated">.controllerName</target>
        </trans-unit>
        <trans-unit id="861e393ac224d6f14faa42242206eaf066c5eb6d" translate="yes" xml:space="preserve">
          <source>.copy()</source>
          <target state="translated">.copy()</target>
        </trans-unit>
        <trans-unit id="2a0f50d7d09b16509e1157dd95bedac3a7e649c1" translate="yes" xml:space="preserve">
          <source>.create()</source>
          <target state="translated">.create()</target>
        </trans-unit>
        <trans-unit id="18471bcdc7d07073aa9293a2688552846d32bd44" translate="yes" xml:space="preserve">
          <source>.currentPath()</source>
          <target state="translated">.currentPath()</target>
        </trans-unit>
        <trans-unit id="db8be4e4f3d4585f2b19e5efe028ea78f9ff3a49" translate="yes" xml:space="preserve">
          <source>.currentRouteName()</source>
          <target state="translated">.currentRouteName()</target>
        </trans-unit>
        <trans-unit id="0018df70099cd0dae3d0758532c12a8120caefa3" translate="yes" xml:space="preserve">
          <source>.currentURL()</source>
          <target state="translated">.currentURL()</target>
        </trans-unit>
        <trans-unit id="eb29d3752f4527467ef3f042434d4d470720489c" translate="yes" xml:space="preserve">
          <source>.currentWhen</source>
          <target state="translated">.currentWhen</target>
        </trans-unit>
        <trans-unit id="dd79925a8ded8495270e1d2437a7e18b75de05ba" translate="yes" xml:space="preserve">
          <source>.customEvents</source>
          <target state="translated">.customEvents</target>
        </trans-unit>
        <trans-unit id="d77ceb5aa4f3a56516c9624ea5bfb22cb7dbf209" translate="yes" xml:space="preserve">
          <source>.dasherize()</source>
          <target state="translated">.dasherize()</target>
        </trans-unit>
        <trans-unit id="ff971867400454b58b0cb4633aaec3503cbd7255" translate="yes" xml:space="preserve">
          <source>.deactivate (event)</source>
          <target state="translated">.deactivate（事件）</target>
        </trans-unit>
        <trans-unit id="f2091d8e16fd0eb6e851eb2864cb3dc82024b4e2" translate="yes" xml:space="preserve">
          <source>.deactivate()</source>
          <target state="translated">.deactivate()</target>
        </trans-unit>
        <trans-unit id="e298e9f1f6c61b861d57ec4b28df4aaca950e823" translate="yes" xml:space="preserve">
          <source>.debounce()</source>
          <target state="translated">.debounce()</target>
        </trans-unit>
        <trans-unit id="45cd57a7a40b4bdf7697e22f5ac4e03e13e68bf3" translate="yes" xml:space="preserve">
          <source>.debug()</source>
          <target state="translated">.debug()</target>
        </trans-unit>
        <trans-unit id="117d76b07e6a35f5caddb7a302e63cb2d03dbef4" translate="yes" xml:space="preserve">
          <source>.decamelize()</source>
          <target state="translated">.decamelize()</target>
        </trans-unit>
        <trans-unit id="809cc67ddfb09d26ed1d16590b7925212ca57c53" translate="yes" xml:space="preserve">
          <source>.decrementProperty()</source>
          <target state="translated">.decrementProperty()</target>
        </trans-unit>
        <trans-unit id="37f7e78905b2d99dec3b1fd172ff4d168254695e" translate="yes" xml:space="preserve">
          <source>.defer()</source>
          <target state="translated">.defer()</target>
        </trans-unit>
        <trans-unit id="d3203b788f98ef2824d6f2d33ae99355623b30b6" translate="yes" xml:space="preserve">
          <source>.deferReadiness()</source>
          <target state="translated">.deferReadiness()</target>
        </trans-unit>
        <trans-unit id="c7d1cb7d848d2cb60ac02a093d233c87747d651f" translate="yes" xml:space="preserve">
          <source>.denodeify()</source>
          <target state="translated">.denodeify()</target>
        </trans-unit>
        <trans-unit id="bbb3004e35f00aeb3a3370ab1c4ec61ff8e92d4f" translate="yes" xml:space="preserve">
          <source>.deprecate()</source>
          <target state="translated">.deprecate()</target>
        </trans-unit>
        <trans-unit id="1b5c6e29e2de0b8189717eeba419ce437623cce1" translate="yes" xml:space="preserve">
          <source>.deprecatingAlias()</source>
          <target state="translated">.deprecatingAlias()</target>
        </trans-unit>
        <trans-unit id="e6ab8c224521bf01b65198f5b395f63c6e363c39" translate="yes" xml:space="preserve">
          <source>.destroy()</source>
          <target state="translated">.destroy()</target>
        </trans-unit>
        <trans-unit id="2af6259c68afa8549769a42dfa9c1f5f733b681c" translate="yes" xml:space="preserve">
          <source>.didInsertElement (event)</source>
          <target state="translated">.didInsertElement（事件）</target>
        </trans-unit>
        <trans-unit id="94a637206451a81f079b57a84313729387f35b16" translate="yes" xml:space="preserve">
          <source>.didReceiveAttrs (event)</source>
          <target state="translated">.didReceiveAttrs（事件）</target>
        </trans-unit>
        <trans-unit id="23969ba8f5040e08369cef4095bab8dc7739fe02" translate="yes" xml:space="preserve">
          <source>.didReceiveAttrs()</source>
          <target state="translated">.didReceiveAttrs()</target>
        </trans-unit>
        <trans-unit id="b67752103f19615b74e5eeb935a5b4f42e87b5fa" translate="yes" xml:space="preserve">
          <source>.didRender (event)</source>
          <target state="translated">.didRender（事件）</target>
        </trans-unit>
        <trans-unit id="ab8fec5dd605bb6b304c8b74d6388b517dd0b1ba" translate="yes" xml:space="preserve">
          <source>.didRender()</source>
          <target state="translated">.didRender()</target>
        </trans-unit>
        <trans-unit id="c1e72dd34c50bccf4391cb44ead0acff02925834" translate="yes" xml:space="preserve">
          <source>.didTransition (event)</source>
          <target state="translated">.didTransition（事件）</target>
        </trans-unit>
        <trans-unit id="ceb13fd831ea12cdda987f58789c4f718718ef6e" translate="yes" xml:space="preserve">
          <source>.didTransition()</source>
          <target state="translated">.didTransition()</target>
        </trans-unit>
        <trans-unit id="08f7fad176fc6b47f9d3b59cb9c7117be4496cdb" translate="yes" xml:space="preserve">
          <source>.didUpdate (event)</source>
          <target state="translated">.didUpdate（事件）</target>
        </trans-unit>
        <trans-unit id="249b2310f730e76a470b279894468e1384dd07d6" translate="yes" xml:space="preserve">
          <source>.didUpdate()</source>
          <target state="translated">.didUpdate()</target>
        </trans-unit>
        <trans-unit id="6490c283f9ab347d6047822045aa790b9ade9a70" translate="yes" xml:space="preserve">
          <source>.didUpdateAttrs (event)</source>
          <target state="translated">.didUpdateAttrs（事件）</target>
        </trans-unit>
        <trans-unit id="1c6458ee26b1a027c001e160145712539b64e836" translate="yes" xml:space="preserve">
          <source>.didUpdateAttrs()</source>
          <target state="translated">.didUpdateAttrs()</target>
        </trans-unit>
        <trans-unit id="b1353d59fb29ec973ea466a49206c5f5ef6d3f31" translate="yes" xml:space="preserve">
          <source>.disableCache;()</source>
          <target state="translated">.disableCache;()</target>
        </trans-unit>
        <trans-unit id="954dcfa4181a77bdc65adc825836d2adb7be244d" translate="yes" xml:space="preserve">
          <source>.disconnectOutlet()</source>
          <target state="translated">.disconnectOutlet()</target>
        </trans-unit>
        <trans-unit id="d850f5e76e5990148c7a3f45bd19a01a577c8def" translate="yes" xml:space="preserve">
          <source>.element</source>
          <target state="translated">.element</target>
        </trans-unit>
        <trans-unit id="37d2f12c9f857be1069ad5761cacf5249c5ebd95" translate="yes" xml:space="preserve">
          <source>.elementId</source>
          <target state="translated">.elementId</target>
        </trans-unit>
        <trans-unit id="e97cf4754f613bbb2ec3a15a3f9ec7dbc10f0f77" translate="yes" xml:space="preserve">
          <source>.empty()</source>
          <target state="translated">.empty()</target>
        </trans-unit>
        <trans-unit id="abf0ca61afdebe15168ffbf5e9af3f80ec1c20fc" translate="yes" xml:space="preserve">
          <source>.enableCache()</source>
          <target state="translated">.enableCache()</target>
        </trans-unit>
        <trans-unit id="4522dcb5c5069a2d58b7864d23fab8548e9bbc96" translate="yes" xml:space="preserve">
          <source>.end()</source>
          <target state="translated">.end()</target>
        </trans-unit>
        <trans-unit id="ab83e569fca1bf26cc89935595b87ae1e8d73f00" translate="yes" xml:space="preserve">
          <source>.equal()</source>
          <target state="translated">.equal()</target>
        </trans-unit>
        <trans-unit id="14f45c2328c6bdc23471f76af1a479d36fc41ec6" translate="yes" xml:space="preserve">
          <source>.error (event)</source>
          <target state="translated">.error（事件）</target>
        </trans-unit>
        <trans-unit id="465d54eeaad7eafe88052e9f67e2a5f3dfd62383" translate="yes" xml:space="preserve">
          <source>.eventDispatcher</source>
          <target state="translated">.eventDispatcher</target>
        </trans-unit>
        <trans-unit id="ca50fef1c86f80ecac1245e21788e4a5584ac738" translate="yes" xml:space="preserve">
          <source>.every()</source>
          <target state="translated">.every()</target>
        </trans-unit>
        <trans-unit id="0b8aa4b1f7233b87ae67b4fd07a9cedd38cbd6fb" translate="yes" xml:space="preserve">
          <source>.extend()</source>
          <target state="translated">.extend()</target>
        </trans-unit>
        <trans-unit id="cfd55b792aa5dc90c5ba1163ee6aa40c9e65b8b0" translate="yes" xml:space="preserve">
          <source>.fillIn()</source>
          <target state="translated">.fillIn()</target>
        </trans-unit>
        <trans-unit id="0b55f75d20e84ea4218ae334a687431d8b584627" translate="yes" xml:space="preserve">
          <source>.filter()</source>
          <target state="translated">.filter()</target>
        </trans-unit>
        <trans-unit id="37b1d482c73248927be7b990b86d5e40dc5862dd" translate="yes" xml:space="preserve">
          <source>.filterBy()</source>
          <target state="translated">.filterBy()</target>
        </trans-unit>
        <trans-unit id="5f3178cf78a184a4d4b7881ae5d1a0e8e7c7b10e" translate="yes" xml:space="preserve">
          <source>.finally()</source>
          <target state="translated">.finally()</target>
        </trans-unit>
        <trans-unit id="d25980948b24cf9ba73d9afbc5d63be60b6e77fb" translate="yes" xml:space="preserve">
          <source>.find()</source>
          <target state="translated">.find()</target>
        </trans-unit>
        <trans-unit id="3e7119fb49fcbc95f918d7009b20973e687ba3dc" translate="yes" xml:space="preserve">
          <source>.findBy()</source>
          <target state="translated">.findBy()</target>
        </trans-unit>
        <trans-unit id="824b93b7a5a3151a7c48c80bb9e6f12c77ceba9d" translate="yes" xml:space="preserve">
          <source>.findWithAssert()</source>
          <target state="translated">.findWithAssert()</target>
        </trans-unit>
        <trans-unit id="7d1a9559ec1cd1706677818784fb44132d4905a0" translate="yes" xml:space="preserve">
          <source>.firstObject</source>
          <target state="translated">.firstObject</target>
        </trans-unit>
        <trans-unit id="fe5a1f4be45a725a6f693d5215c88479571204be" translate="yes" xml:space="preserve">
          <source>.forEach()</source>
          <target state="translated">.forEach()</target>
        </trans-unit>
        <trans-unit id="f8035b07e5bf0d30eb4314a6e83a9c9012930836" translate="yes" xml:space="preserve">
          <source>.get()</source>
          <target state="translated">.get()</target>
        </trans-unit>
        <trans-unit id="28e1c57d0bc40c81fc13158e8bb3cfe3d381384a" translate="yes" xml:space="preserve">
          <source>.getEach()</source>
          <target state="translated">.getEach()</target>
        </trans-unit>
        <trans-unit id="9787d1c95ec7e33d727c7f7457e23831ecd56561" translate="yes" xml:space="preserve">
          <source>.getEngineParent()</source>
          <target state="translated">.getEngineParent()</target>
        </trans-unit>
        <trans-unit id="67b150cd25b18d36da33db391e0f89faf0c6b95c" translate="yes" xml:space="preserve">
          <source>.getFilters()</source>
          <target state="translated">.getFilters()</target>
        </trans-unit>
        <trans-unit id="e9cc63e0675a4b24cb1f218dbef7ec59f211ea7f" translate="yes" xml:space="preserve">
          <source>.getOwner()</source>
          <target state="translated">.getOwner()</target>
        </trans-unit>
        <trans-unit id="053b16e527e426fbb8ff8a4c7f37d7c75cb0ed7e" translate="yes" xml:space="preserve">
          <source>.getProperties()</source>
          <target state="translated">.getProperties()</target>
        </trans-unit>
        <trans-unit id="7fa892a0180afd4a7dd0b1d64945145a7ae034e9" translate="yes" xml:space="preserve">
          <source>.getWithDefault()</source>
          <target state="translated">.getWithDefault()</target>
        </trans-unit>
        <trans-unit id="2aabf71bb96fb22b2f1a039399661fd641601462" translate="yes" xml:space="preserve">
          <source>.gte()</source>
          <target state="translated">.gte()</target>
        </trans-unit>
        <trans-unit id="f9294ba8ff7fca5df8479ef1d437f73ad0d8e33c" translate="yes" xml:space="preserve">
          <source>.guidFor()</source>
          <target state="translated">.guidFor()</target>
        </trans-unit>
        <trans-unit id="5a6fd171d97937dc930136f324f866b852aac0c2" translate="yes" xml:space="preserve">
          <source>.has()</source>
          <target state="translated">.has()</target>
        </trans-unit>
        <trans-unit id="0ac8688296ae7945b152d29afe9c5211cbb6d58a" translate="yes" xml:space="preserve">
          <source>.hasArrayObservers</source>
          <target state="translated">.hasArrayObservers</target>
        </trans-unit>
        <trans-unit id="935dea1cc3a9052cde901569945818f5a6753c61" translate="yes" xml:space="preserve">
          <source>.hasRegistration()</source>
          <target state="translated">.hasRegistration()</target>
        </trans-unit>
        <trans-unit id="0ee9a5bab8350f8cea48aa9910dd3b72d37b446a" translate="yes" xml:space="preserve">
          <source>.hash()</source>
          <target state="translated">.hash()</target>
        </trans-unit>
        <trans-unit id="5f40b2320210daffc198f8a71498e0c4fc5f09ed" translate="yes" xml:space="preserve">
          <source>.hashSettled()</source>
          <target state="translated">.hashSettled()</target>
        </trans-unit>
        <trans-unit id="9859c7c1ea8bd29f94a1df55bd49b2306a24c747" translate="yes" xml:space="preserve">
          <source>.helper()</source>
          <target state="translated">.helper()</target>
        </trans-unit>
        <trans-unit id="a083d43a3f4b3b54f848b38c32f944b17ce6fb99" translate="yes" xml:space="preserve">
          <source>.helpers</source>
          <target state="translated">.helpers</target>
        </trans-unit>
        <trans-unit id="12d62f7fbb4b89a50888ad04557f3d3fc1fdaa0c" translate="yes" xml:space="preserve">
          <source>.helpers (methods)</source>
          <target state="translated">.helpers（方法）</target>
        </trans-unit>
        <trans-unit id="be3f57362cd8e4d2233ee04f28a7ac350e11a31c" translate="yes" xml:space="preserve">
          <source>.helpers.action()</source>
          <target state="translated">.helpers.action()</target>
        </trans-unit>
        <trans-unit id="934a2227a542b5a09a5021b388da99fdd8eb9921" translate="yes" xml:space="preserve">
          <source>.helpers.component()</source>
          <target state="translated">.helpers.component()</target>
        </trans-unit>
        <trans-unit id="2ddc3926f54260d68a75ce33eb7c2a2817ab3700" translate="yes" xml:space="preserve">
          <source>.helpers.concat()</source>
          <target state="translated">.helpers.concat()</target>
        </trans-unit>
        <trans-unit id="b2baa6fd19770f574edef52e2c71187aa5124e2b" translate="yes" xml:space="preserve">
          <source>.helpers.debugger()</source>
          <target state="translated">.helpers.debugger()</target>
        </trans-unit>
        <trans-unit id="a9c8c5f84b2c57076a0c60f5cfb0075786024122" translate="yes" xml:space="preserve">
          <source>.helpers.each()</source>
          <target state="translated">.helpers.each()</target>
        </trans-unit>
        <trans-unit id="32d2a14eaf0a6661ccdd25db98accc5f784fb77e" translate="yes" xml:space="preserve">
          <source>.helpers.each-in()</source>
          <target state="translated">.helpers.each-in()</target>
        </trans-unit>
        <trans-unit id="2e6c0d9fdb2869c6f9acfbb59a98336edd33069a" translate="yes" xml:space="preserve">
          <source>.helpers.get()</source>
          <target state="translated">.helpers.get()</target>
        </trans-unit>
        <trans-unit id="dd5726bc575f53cb0ec4fa825deea0096fba669a" translate="yes" xml:space="preserve">
          <source>.helpers.hash()</source>
          <target state="translated">.helpers.hash()</target>
        </trans-unit>
        <trans-unit id="bede6232dd20b2132b882706887c0de45cf48171" translate="yes" xml:space="preserve">
          <source>.helpers.if()</source>
          <target state="translated">.helpers.if()</target>
        </trans-unit>
        <trans-unit id="04dc06d5dbe354c3edefa5b96b2b870d2513ecac" translate="yes" xml:space="preserve">
          <source>.helpers.input()</source>
          <target state="translated">.helpers.input()</target>
        </trans-unit>
        <trans-unit id="c7de47e894b452787ceecf6a39a878bea7499cbb" translate="yes" xml:space="preserve">
          <source>.helpers.link-to()</source>
          <target state="translated">.helpers.link-to()</target>
        </trans-unit>
        <trans-unit id="c5dda43131985e3825413f7a4ba95137e8a69199" translate="yes" xml:space="preserve">
          <source>.helpers.loc()</source>
          <target state="translated">.helpers.loc()</target>
        </trans-unit>
        <trans-unit id="7d20b6836cf085e01541276602fa142ed3055b05" translate="yes" xml:space="preserve">
          <source>.helpers.log()</source>
          <target state="translated">.helpers.log()</target>
        </trans-unit>
        <trans-unit id="77a20c9ff06af00ff97a5c31a9f0fa0cfef19be4" translate="yes" xml:space="preserve">
          <source>.helpers.mount()</source>
          <target state="translated">.helpers.mount()</target>
        </trans-unit>
        <trans-unit id="678abe588e23a899453e1fcf5203420707fc72e8" translate="yes" xml:space="preserve">
          <source>.helpers.mut()</source>
          <target state="translated">.helpers.mut()</target>
        </trans-unit>
        <trans-unit id="daab4c77baae3bd27989578843df8d70204622c1" translate="yes" xml:space="preserve">
          <source>.helpers.outlet()</source>
          <target state="translated">.helpers.outlet()</target>
        </trans-unit>
        <trans-unit id="a2383ef3e06da763ce5a76a0b3e8711f4e9643c0" translate="yes" xml:space="preserve">
          <source>.helpers.partial()</source>
          <target state="translated">.helpers.partial()</target>
        </trans-unit>
        <trans-unit id="b76b6e836e574e245ca5a3a92c1502318bcc4a2c" translate="yes" xml:space="preserve">
          <source>.helpers.query-params()</source>
          <target state="translated">.helpers.query-params()</target>
        </trans-unit>
        <trans-unit id="e0b750aecba4e9b798ef4fef745a24be34138374" translate="yes" xml:space="preserve">
          <source>.helpers.singularize()</source>
          <target state="translated">.helpers.singularize()</target>
        </trans-unit>
        <trans-unit id="e0a1d8eddf83eb16f439c4137c6fe1fc0359eb50" translate="yes" xml:space="preserve">
          <source>.helpers.textarea()</source>
          <target state="translated">.helpers.textarea()</target>
        </trans-unit>
        <trans-unit id="e9e65cb699367a60688cea73e59d656fbd88327e" translate="yes" xml:space="preserve">
          <source>.helpers.unbound()</source>
          <target state="translated">.helpers.unbound()</target>
        </trans-unit>
        <trans-unit id="d1d68a8041eb2624e013a3a179570f6786af7449" translate="yes" xml:space="preserve">
          <source>.helpers.unless()</source>
          <target state="translated">.helpers.unless()</target>
        </trans-unit>
        <trans-unit id="9c79f4cede634c817da72810e6a79d03d05b415c" translate="yes" xml:space="preserve">
          <source>.helpers.with()</source>
          <target state="translated">.helpers.with()</target>
        </trans-unit>
        <trans-unit id="462253ff4278ec1f6b2a3230aaca09d50f3e1870" translate="yes" xml:space="preserve">
          <source>.helpers.yield()</source>
          <target state="translated">.helpers.yield()</target>
        </trans-unit>
        <trans-unit id="4feac195a8cefa6f494bb2bc4d5acf9f5da63e1e" translate="yes" xml:space="preserve">
          <source>.htmlSafe()</source>
          <target state="translated">.htmlSafe()</target>
        </trans-unit>
        <trans-unit id="3e687af74dba35b0715b0884f67849c575864a62" translate="yes" xml:space="preserve">
          <source>.includes()</source>
          <target state="translated">.includes()</target>
        </trans-unit>
        <trans-unit id="19273bf9a771bbed33408064945f07c16e2a16e6" translate="yes" xml:space="preserve">
          <source>.incrementProperty()</source>
          <target state="translated">.incrementProperty()</target>
        </trans-unit>
        <trans-unit id="7ae838ecd0da0293024aba63a6fddfb0ade378a9" translate="yes" xml:space="preserve">
          <source>.indexOf()</source>
          <target state="translated">.indexOf()</target>
        </trans-unit>
        <trans-unit id="44dade9646a84176f0205cd62487852c60acc23a" translate="yes" xml:space="preserve">
          <source>.init()</source>
          <target state="translated">.init()</target>
        </trans-unit>
        <trans-unit id="fffb7ef5b01e22b8a7d68ed089f79b31ee886c9a" translate="yes" xml:space="preserve">
          <source>.initializer()</source>
          <target state="translated">.initializer()</target>
        </trans-unit>
        <trans-unit id="15973a006f9a54335337023f863099bd6ac5026f" translate="yes" xml:space="preserve">
          <source>.inject()</source>
          <target state="translated">.inject()</target>
        </trans-unit>
        <trans-unit id="a334dd13638d334f8ac1c3e1d3fd3de996ee3cf8" translate="yes" xml:space="preserve">
          <source>.injectTestHelpers()</source>
          <target state="translated">.injectTestHelpers()</target>
        </trans-unit>
        <trans-unit id="763337e9286aaa6b1715dada4b1bc35f4d79f02b" translate="yes" xml:space="preserve">
          <source>.insertAt()</source>
          <target state="translated">.insertAt()</target>
        </trans-unit>
        <trans-unit id="c11bbb86fe27e14977ba2a6e09c4cf62c06ca29c" translate="yes" xml:space="preserve">
          <source>.instanceInitializer()</source>
          <target state="translated">.instanceInitializer()</target>
        </trans-unit>
        <trans-unit id="b251652f0d9df365df5d14e2bea0322513a37ece" translate="yes" xml:space="preserve">
          <source>.intermediateTransitionTo()</source>
          <target state="translated">.intermediateTransitionTo()</target>
        </trans-unit>
        <trans-unit id="10ab60aa0144cdf6cb5634508af98bd41747b948" translate="yes" xml:space="preserve">
          <source>.intersect()</source>
          <target state="translated">.intersect()</target>
        </trans-unit>
        <trans-unit id="40fc0a74dacf15f75cb9f89cf88ae4d893036b67" translate="yes" xml:space="preserve">
          <source>.invoke()</source>
          <target state="translated">.invoke()</target>
        </trans-unit>
        <trans-unit id="b19adec7afdf30dcb59789e74821d5471b292ef8" translate="yes" xml:space="preserve">
          <source>.irregular()</source>
          <target state="translated">.irregular()</target>
        </trans-unit>
        <trans-unit id="b78ea1de4707003caec900395f0ea0ee78b3cc12" translate="yes" xml:space="preserve">
          <source>.isActive()</source>
          <target state="translated">.isActive()</target>
        </trans-unit>
        <trans-unit id="74278ede27a51044d9c79984a520995e9f182277" translate="yes" xml:space="preserve">
          <source>.isAny()</source>
          <target state="translated">.isAny()</target>
        </trans-unit>
        <trans-unit id="992d3fec9f166ceabc71ac8c38d1f57b10efbb27" translate="yes" xml:space="preserve">
          <source>.isArray()</source>
          <target state="translated">.isArray()</target>
        </trans-unit>
        <trans-unit id="b6316fb4d076579849a6e963f18beb156fc104f4" translate="yes" xml:space="preserve">
          <source>.isBlank()</source>
          <target state="translated">.isBlank()</target>
        </trans-unit>
        <trans-unit id="6e26d57e8b74901221512436b7b8a3722d5895aa" translate="yes" xml:space="preserve">
          <source>.isDestroyed</source>
          <target state="translated">.isDestroyed</target>
        </trans-unit>
        <trans-unit id="0eef71e4320236b0bbafe29123943406e484e253" translate="yes" xml:space="preserve">
          <source>.isDestroying</source>
          <target state="translated">.isDestroying</target>
        </trans-unit>
        <trans-unit id="b13bdfefb4929bf201197f3fe6779be602e64f6f" translate="yes" xml:space="preserve">
          <source>.isEmpty()</source>
          <target state="translated">.isEmpty()</target>
        </trans-unit>
        <trans-unit id="d61bc4bb293657711ea54fca95a2e1301e82413c" translate="yes" xml:space="preserve">
          <source>.isEnabled()</source>
          <target state="translated">.isEnabled()</target>
        </trans-unit>
        <trans-unit id="7f5752d3098be6438d4b8c426bdd6a1d908dfa54" translate="yes" xml:space="preserve">
          <source>.isEqual()</source>
          <target state="translated">.isEqual()</target>
        </trans-unit>
        <trans-unit id="95e56f7b9dc8846581498140d7166eecd43cfaac" translate="yes" xml:space="preserve">
          <source>.isEvery()</source>
          <target state="translated">.isEvery()</target>
        </trans-unit>
        <trans-unit id="f192284c9b94fd9d7b30eb0c8e9a9f9868f27efe" translate="yes" xml:space="preserve">
          <source>.isFulfilled</source>
          <target state="translated">.isFulfilled</target>
        </trans-unit>
        <trans-unit id="ee0ecdb3c38c5684bf51639e1055dafd4014d577" translate="yes" xml:space="preserve">
          <source>.isHTMLSafe()</source>
          <target state="translated">.isHTMLSafe()</target>
        </trans-unit>
        <trans-unit id="026b9878f28f1ec43cec1a70f34fa75dfcad5795" translate="yes" xml:space="preserve">
          <source>.isNone()</source>
          <target state="translated">.isNone()</target>
        </trans-unit>
        <trans-unit id="66544f666ca02a6960c992ad89110b37104959d4" translate="yes" xml:space="preserve">
          <source>.isPending</source>
          <target state="translated">.isPending</target>
        </trans-unit>
        <trans-unit id="d541f3a10666f5da457f277566a7be0bc89cf8e7" translate="yes" xml:space="preserve">
          <source>.isPresent()</source>
          <target state="translated">.isPresent()</target>
        </trans-unit>
        <trans-unit id="3d0bccdbc85f7e4398d1b0f76d7956f317cdc802" translate="yes" xml:space="preserve">
          <source>.isRejected</source>
          <target state="translated">.isRejected</target>
        </trans-unit>
        <trans-unit id="8b26d0bdff35cf916f62600219d8d073f1c81afc" translate="yes" xml:space="preserve">
          <source>.isSettled</source>
          <target state="translated">.isSettled</target>
        </trans-unit>
        <trans-unit id="dc0a5f5f92e5b29ba789ce0cb048f45f545d6528" translate="yes" xml:space="preserve">
          <source>.isVisible</source>
          <target state="translated">.isVisible</target>
        </trans-unit>
        <trans-unit id="ff0be563833e9dba2859728026295df9cebec204" translate="yes" xml:space="preserve">
          <source>.join()</source>
          <target state="translated">.join()</target>
        </trans-unit>
        <trans-unit id="e3e5f046fcb714cd66d3208863ae476fec64eb33" translate="yes" xml:space="preserve">
          <source>.keyEvent()</source>
          <target state="translated">.keyEvent()</target>
        </trans-unit>
        <trans-unit id="98a1cbe6578d448288bd939d53595d66adf17def" translate="yes" xml:space="preserve">
          <source>.lastIndexOf()</source>
          <target state="translated">.lastIndexOf()</target>
        </trans-unit>
        <trans-unit id="99d46cbf4d4b97e5ef0cb5d9c597082722e483a6" translate="yes" xml:space="preserve">
          <source>.lastObject</source>
          <target state="translated">.lastObject</target>
        </trans-unit>
        <trans-unit id="01c6b3e8df50b5a93feda7bc6c526e325aa47868" translate="yes" xml:space="preserve">
          <source>.later()</source>
          <target state="translated">.later()</target>
        </trans-unit>
        <trans-unit id="a1e74c6cedee754855e8a03b76cc0a48d3ae0618" translate="yes" xml:space="preserve">
          <source>.layout</source>
          <target state="translated">.layout</target>
        </trans-unit>
        <trans-unit id="75c8cae355fd4c112d13f45637f83c17709a774e" translate="yes" xml:space="preserve">
          <source>.length</source>
          <target state="translated">.length</target>
        </trans-unit>
        <trans-unit id="d9f9ba28f3a2d19852a55c94e8f011a62f846243" translate="yes" xml:space="preserve">
          <source>.loading (event)</source>
          <target state="translated">.loading（事件）</target>
        </trans-unit>
        <trans-unit id="f7b357e4fc13951f6981b1543178ab9f663ea31a" translate="yes" xml:space="preserve">
          <source>.loc()</source>
          <target state="translated">.loc()</target>
        </trans-unit>
        <trans-unit id="429556509e7d312d2a77557509a585778b90d348" translate="yes" xml:space="preserve">
          <source>.location</source>
          <target state="translated">.location</target>
        </trans-unit>
        <trans-unit id="1c4ba3ab87f0637792448e98d16c30dce06b0979" translate="yes" xml:space="preserve">
          <source>.lookup()</source>
          <target state="translated">.lookup()</target>
        </trans-unit>
        <trans-unit id="61254a57ebc6332512afffe42cc7e1f4e14c3c8f" translate="yes" xml:space="preserve">
          <source>.lte()</source>
          <target state="translated">.lte()</target>
        </trans-unit>
        <trans-unit id="3185d17866a519bedb219fdba7b49006d6c86ef6" translate="yes" xml:space="preserve">
          <source>.map()</source>
          <target state="translated">.map()</target>
        </trans-unit>
        <trans-unit id="c0cbe319be6e77a5bd5ad581c3501154e54e2193" translate="yes" xml:space="preserve">
          <source>.mapBy()</source>
          <target state="translated">.mapBy()</target>
        </trans-unit>
        <trans-unit id="87445c4944041f5ace36b891c4a7bf4e043bdf6b" translate="yes" xml:space="preserve">
          <source>.match()</source>
          <target state="translated">.match()</target>
        </trans-unit>
        <trans-unit id="ae7e8f74ac4e2c0e12821fe16f559c8cdb7dfa1a" translate="yes" xml:space="preserve">
          <source>.max()</source>
          <target state="translated">.max()</target>
        </trans-unit>
        <trans-unit id="e8adc046ef0650935e5f71eb4524968aba0bda8f" translate="yes" xml:space="preserve">
          <source>.merge()</source>
          <target state="translated">.merge()</target>
        </trans-unit>
        <trans-unit id="088dc21ff1be8e9b2949bd56d484f4e5bf6aa1ed" translate="yes" xml:space="preserve">
          <source>.mergedProperties</source>
          <target state="translated">.mergedProperties</target>
        </trans-unit>
        <trans-unit id="91bee59b6e9000866f6ba38d2a7dc48d13d28b10" translate="yes" xml:space="preserve">
          <source>.meta()</source>
          <target state="translated">.meta()</target>
        </trans-unit>
        <trans-unit id="fe56cd3a51f42631214987863b59d824bfe5b922" translate="yes" xml:space="preserve">
          <source>.min()</source>
          <target state="translated">.min()</target>
        </trans-unit>
        <trans-unit id="c9c30d74368a4cde538d93b13ea54cce56f0d94d" translate="yes" xml:space="preserve">
          <source>.model</source>
          <target state="translated">.model</target>
        </trans-unit>
        <trans-unit id="18b8758a115a02fa71f72b0f596e099ad78a1a33" translate="yes" xml:space="preserve">
          <source>.model()</source>
          <target state="translated">.model()</target>
        </trans-unit>
        <trans-unit id="778e0d2b32a78b6543cb41e4afdb0e63fa672b3b" translate="yes" xml:space="preserve">
          <source>.modelFor()</source>
          <target state="translated">.modelFor()</target>
        </trans-unit>
        <trans-unit id="b3196db3b0dd5b08cfe13a23a1975feed3c1b047" translate="yes" xml:space="preserve">
          <source>.namespace</source>
          <target state="translated">.namespace</target>
        </trans-unit>
        <trans-unit id="9a846f6f00583840df2ea3f204d6a61be08f120e" translate="yes" xml:space="preserve">
          <source>.next()</source>
          <target state="translated">.next()</target>
        </trans-unit>
        <trans-unit id="ff759839ac21cf09fc1da6df5e18cfe3948fc384" translate="yes" xml:space="preserve">
          <source>.none()</source>
          <target state="translated">.none()</target>
        </trans-unit>
        <trans-unit id="31bffc417e9e69c3c4257c87226e3d355237fc02" translate="yes" xml:space="preserve">
          <source>.not()</source>
          <target state="translated">.not()</target>
        </trans-unit>
        <trans-unit id="5f66b00b92f2fde9513f3ec97dc4a9d269fa9139" translate="yes" xml:space="preserve">
          <source>.notEmpty()</source>
          <target state="translated">.notEmpty()</target>
        </trans-unit>
        <trans-unit id="23a8d72b16ece113424ab8259ac754866fbf87d0" translate="yes" xml:space="preserve">
          <source>.notifyPropertyChange()</source>
          <target state="translated">.notifyPropertyChange()</target>
        </trans-unit>
        <trans-unit id="2baab09d8de609e5ebcd1367d87754214f45f336" translate="yes" xml:space="preserve">
          <source>.objectAt()</source>
          <target state="translated">.objectAt()</target>
        </trans-unit>
        <trans-unit id="4334eccf92cf6c7eee24c9a95291555791cc5fb2" translate="yes" xml:space="preserve">
          <source>.objectAtContent()</source>
          <target state="translated">.objectAtContent()</target>
        </trans-unit>
        <trans-unit id="a27a290ff559701e5aaa7279d78ad3a831476be2" translate="yes" xml:space="preserve">
          <source>.objectsAt()</source>
          <target state="translated">.objectsAt()</target>
        </trans-unit>
        <trans-unit id="2c03be327fb23bc2633c1ad7f228ed876f715e6e" translate="yes" xml:space="preserve">
          <source>.observer()</source>
          <target state="translated">.observer()</target>
        </trans-unit>
        <trans-unit id="c90bd0e3ee12231330dbe04118106a93827d9694" translate="yes" xml:space="preserve">
          <source>.observes()</source>
          <target state="translated">.observes()</target>
        </trans-unit>
        <trans-unit id="2305a785f65598ad22af79c88580504c1dff0167" translate="yes" xml:space="preserve">
          <source>.off()</source>
          <target state="translated">.off()</target>
        </trans-unit>
        <trans-unit id="01f17f7869393d3f7d12f0550d86befdd45ff65f" translate="yes" xml:space="preserve">
          <source>.onInjectHelpers()</source>
          <target state="translated">.onInjectHelpers()</target>
        </trans-unit>
        <trans-unit id="1da7921c2c25ec886cbdb8640d9aa5c31f12ad39" translate="yes" xml:space="preserve">
          <source>.once()</source>
          <target state="translated">.once()</target>
        </trans-unit>
        <trans-unit id="b09861854e6cd9a5b49cfce4e11416c9c766638a" translate="yes" xml:space="preserve">
          <source>.one()</source>
          <target state="translated">.one()</target>
        </trans-unit>
        <trans-unit id="e21c115974d15aa17897e5ca75d7a55c029dc3cf" translate="yes" xml:space="preserve">
          <source>.oneWay()</source>
          <target state="translated">.oneWay()</target>
        </trans-unit>
        <trans-unit id="551af9d3d8b2bb7e1c84973b4fa6b0d3c4199c49" translate="yes" xml:space="preserve">
          <source>.onerror (event)</source>
          <target state="translated">.onerror（事件）</target>
        </trans-unit>
        <trans-unit id="d51398bf03daa0dc8367d43f4d7aee3e8776eb94" translate="yes" xml:space="preserve">
          <source>.ownerInjection()</source>
          <target state="translated">.ownerInjection()</target>
        </trans-unit>
        <trans-unit id="6e15b87624ccd09e1857ea35d411f1c0377f3871" translate="yes" xml:space="preserve">
          <source>.paramsFor()</source>
          <target state="translated">.paramsFor()</target>
        </trans-unit>
        <trans-unit id="9b86b36accd9dc20c3bd2ddf5953d294062191a8" translate="yes" xml:space="preserve">
          <source>.pattern</source>
          <target state="translated">.pattern</target>
        </trans-unit>
        <trans-unit id="a32f8cc58be76bc51b81218feb64eeb33e79dc88" translate="yes" xml:space="preserve">
          <source>.pauseTest()</source>
          <target state="translated">.pauseTest()</target>
        </trans-unit>
        <trans-unit id="e40afbcd712deb4b53aeff024507f00a956e243c" translate="yes" xml:space="preserve">
          <source>.plural()</source>
          <target state="translated">.plural()</target>
        </trans-unit>
        <trans-unit id="209d198304420c613c5f38a5241f6cbf45e681be" translate="yes" xml:space="preserve">
          <source>.pluralize()</source>
          <target state="translated">.pluralize()</target>
        </trans-unit>
        <trans-unit id="5dcd2dc85b2c62031fd1fe47cd37f40d6457e354" translate="yes" xml:space="preserve">
          <source>.popObject()</source>
          <target state="translated">.popObject()</target>
        </trans-unit>
        <trans-unit id="f09bb99135bf49f81cf5d5850f360d6e6297d22f" translate="yes" xml:space="preserve">
          <source>.positionalParams</source>
          <target state="translated">.positionalParams</target>
        </trans-unit>
        <trans-unit id="f39d1a924efb0824f830fa152327cf87f76f6057" translate="yes" xml:space="preserve">
          <source>.promise</source>
          <target state="translated">.promise</target>
        </trans-unit>
        <trans-unit id="05f48948473b3cc64a8c927a9d9d865a36586483" translate="yes" xml:space="preserve">
          <source>.promise()</source>
          <target state="translated">.promise()</target>
        </trans-unit>
        <trans-unit id="3c52c48f25b68128075fde8e175310a0f2575583" translate="yes" xml:space="preserve">
          <source>.property()</source>
          <target state="translated">.property()</target>
        </trans-unit>
        <trans-unit id="9a8214b2505020f980915d24b28b1817c719c97a" translate="yes" xml:space="preserve">
          <source>.purgedCache()</source>
          <target state="translated">.purgedCache()</target>
        </trans-unit>
        <trans-unit id="05259fc0517bd9bd6e2dd55d756c3fd9cf39a1f1" translate="yes" xml:space="preserve">
          <source>.pushObject()</source>
          <target state="translated">.pushObject()</target>
        </trans-unit>
        <trans-unit id="5976f9747dee1bf246540f1fef79ed8880fcaef2" translate="yes" xml:space="preserve">
          <source>.pushObjects()</source>
          <target state="translated">.pushObjects()</target>
        </trans-unit>
        <trans-unit id="977cd649eb9161c515547c02de214320391e9ba8" translate="yes" xml:space="preserve">
          <source>.queryParams</source>
          <target state="translated">.queryParams</target>
        </trans-unit>
        <trans-unit id="5619af10f0e3837cd96c573221aa0fff755a22ac" translate="yes" xml:space="preserve">
          <source>.race()</source>
          <target state="translated">.race()</target>
        </trans-unit>
        <trans-unit id="444127ca8db794dc7139e43cc30ce4c271f454b5" translate="yes" xml:space="preserve">
          <source>.readDOMAttr()</source>
          <target state="translated">.readDOMAttr()</target>
        </trans-unit>
        <trans-unit id="fbe8069994d8faae286cbe9db57ac95821616227" translate="yes" xml:space="preserve">
          <source>.readOnly()</source>
          <target state="translated">.readOnly()</target>
        </trans-unit>
        <trans-unit id="c05bb6c41deb8806df65fc325006182b75cc8c84" translate="yes" xml:space="preserve">
          <source>.reads()</source>
          <target state="translated">.reads()</target>
        </trans-unit>
        <trans-unit id="4bf3011b55616ef26377dbd2a7e48fc53e9a6aa6" translate="yes" xml:space="preserve">
          <source>.ready (event)</source>
          <target state="translated">.ready（事件）</target>
        </trans-unit>
        <trans-unit id="62d16a55db9ea0db85357e2ada99baaae86bd58d" translate="yes" xml:space="preserve">
          <source>.reason</source>
          <target state="translated">.reason</target>
        </trans-unit>
        <trans-unit id="c3b6ceb6d240bea689be208f48045d0a91908dae" translate="yes" xml:space="preserve">
          <source>.recompute()</source>
          <target state="translated">.recompute()</target>
        </trans-unit>
        <trans-unit id="fdb1446415a7cf26fd84346b7d42cda99c1b528b" translate="yes" xml:space="preserve">
          <source>.redirect()</source>
          <target state="translated">.redirect()</target>
        </trans-unit>
        <trans-unit id="d0f4b4460b8db067171b431083b80dc1bb7de9b4" translate="yes" xml:space="preserve">
          <source>.reduce()</source>
          <target state="translated">.reduce()</target>
        </trans-unit>
        <trans-unit id="eae610bc3a3c85f95afb9d3428e94c41de976375" translate="yes" xml:space="preserve">
          <source>.refresh()</source>
          <target state="translated">.refresh()</target>
        </trans-unit>
        <trans-unit id="82aa8c924a8119a8e0155eb10e8d2631621fa005" translate="yes" xml:space="preserve">
          <source>.register()</source>
          <target state="translated">.register()</target>
        </trans-unit>
        <trans-unit id="db9a0f96af82e5e74c18de28d453c78ef97746f0" translate="yes" xml:space="preserve">
          <source>.registerAsyncHelper()</source>
          <target state="translated">.registerAsyncHelper()</target>
        </trans-unit>
        <trans-unit id="4d55e97f23e1a9a10b7b952bf8d39db17c0e9d33" translate="yes" xml:space="preserve">
          <source>.registerDeprecationHandler()</source>
          <target state="translated">.registerDeprecationHandler()</target>
        </trans-unit>
        <trans-unit id="2ee3eadd2726672f96e3d6c6f56ebbfd17bf074b" translate="yes" xml:space="preserve">
          <source>.registerHelper()</source>
          <target state="translated">.registerHelper()</target>
        </trans-unit>
        <trans-unit id="8e82a13af8026b9c8cf12343953fe21b5f4361c3" translate="yes" xml:space="preserve">
          <source>.registerOptions()</source>
          <target state="translated">.registerOptions()</target>
        </trans-unit>
        <trans-unit id="8955eb096133a8d5bac783970c431e0c143ffbb0" translate="yes" xml:space="preserve">
          <source>.registerOptionsForType()</source>
          <target state="translated">.registerOptionsForType()</target>
        </trans-unit>
        <trans-unit id="74381ef48ff0e1aeb59e05242ae424ec5e320580" translate="yes" xml:space="preserve">
          <source>.registerWaiter()</source>
          <target state="translated">.registerWaiter()</target>
        </trans-unit>
        <trans-unit id="093cd72f1519c3aa003b42c1fcc4f097ed1dc934" translate="yes" xml:space="preserve">
          <source>.registerWarnHandler()</source>
          <target state="translated">.registerWarnHandler()</target>
        </trans-unit>
        <trans-unit id="c1086e4cb70651bec1935623f0ed604f7cd03274" translate="yes" xml:space="preserve">
          <source>.registeredOption()</source>
          <target state="translated">.registeredOption()</target>
        </trans-unit>
        <trans-unit id="7fec84b5fc9455c47d4b15dc8936c7c2a90c07d8" translate="yes" xml:space="preserve">
          <source>.registeredOptions()</source>
          <target state="translated">.registeredOptions()</target>
        </trans-unit>
        <trans-unit id="7a2ae1ecb91cc97ae0088d0a976f1b09eeff01f3" translate="yes" xml:space="preserve">
          <source>.registeredOptionsForType()</source>
          <target state="translated">.registeredOptionsForType()</target>
        </trans-unit>
        <trans-unit id="389b677fdec0bc402c00f0507c296a136c6a97cd" translate="yes" xml:space="preserve">
          <source>.reject()</source>
          <target state="translated">.reject()</target>
        </trans-unit>
        <trans-unit id="315540e6e23a86b8ef61b089aa3e943c7b16f09a" translate="yes" xml:space="preserve">
          <source>.rejectBy()</source>
          <target state="translated">.rejectBy()</target>
        </trans-unit>
        <trans-unit id="1583c75e9576c5e9065b81e7e4f23a2de3cee2d6" translate="yes" xml:space="preserve">
          <source>.removeArrayObserver()</source>
          <target state="translated">.removeArrayObserver()</target>
        </trans-unit>
        <trans-unit id="b3a045fb0e0a943cf04a0a57922cbcbf994c3259" translate="yes" xml:space="preserve">
          <source>.removeAt()</source>
          <target state="translated">.removeAt()</target>
        </trans-unit>
        <trans-unit id="6adf56dd3c2f8a0cc4d2aed40c857244b4885a4b" translate="yes" xml:space="preserve">
          <source>.removeListener()</source>
          <target state="translated">.removeListener()</target>
        </trans-unit>
        <trans-unit id="8c3abe8b080e17dc37228de7d64cf7bd225a4fe9" translate="yes" xml:space="preserve">
          <source>.removeObject()</source>
          <target state="translated">.removeObject()</target>
        </trans-unit>
        <trans-unit id="fa877589eae0e6a207c5563cac3aaadf160094ee" translate="yes" xml:space="preserve">
          <source>.removeObjects()</source>
          <target state="translated">.removeObjects()</target>
        </trans-unit>
        <trans-unit id="ad1fb8f779fa89364bea67279c13566b99aac705" translate="yes" xml:space="preserve">
          <source>.removeObserver()</source>
          <target state="translated">.removeObserver()</target>
        </trans-unit>
        <trans-unit id="dcb1a2414b0fa9e5e095d6e94014cc0691f41f3b" translate="yes" xml:space="preserve">
          <source>.removeTestHelpers()</source>
          <target state="translated">.removeTestHelpers()</target>
        </trans-unit>
        <trans-unit id="1a388604a7dd5ecab37a223d2c0246def5b8740b" translate="yes" xml:space="preserve">
          <source>.render()</source>
          <target state="translated">.render()</target>
        </trans-unit>
        <trans-unit id="d6aaf31bd2519f3a650ce07695cd9680e2709c16" translate="yes" xml:space="preserve">
          <source>.renderTemplate()</source>
          <target state="translated">.renderTemplate()</target>
        </trans-unit>
        <trans-unit id="6da4fd31bb492e9b443c0f3d767823cb4e66eda9" translate="yes" xml:space="preserve">
          <source>.reopen()</source>
          <target state="translated">.reopen()</target>
        </trans-unit>
        <trans-unit id="bbda02e537eebe1a1c2fb73f7de7b94556bb8b4a" translate="yes" xml:space="preserve">
          <source>.reopenClass()</source>
          <target state="translated">.reopenClass()</target>
        </trans-unit>
        <trans-unit id="628c163c0b8691c23baf6c7ecd42b9a217fc8f97" translate="yes" xml:space="preserve">
          <source>.replace</source>
          <target state="translated">.replace</target>
        </trans-unit>
        <trans-unit id="daa898cbc1bf9a928f4388c35562faae8d1f23f9" translate="yes" xml:space="preserve">
          <source>.replace()</source>
          <target state="translated">.replace()</target>
        </trans-unit>
        <trans-unit id="de096677e62e53d152371fee6160448d14c2af9c" translate="yes" xml:space="preserve">
          <source>.replaceRoute()</source>
          <target state="translated">.replaceRoute()</target>
        </trans-unit>
        <trans-unit id="df01b1bc3ad7202b48b72fb9201d86c3f82f6228" translate="yes" xml:space="preserve">
          <source>.replaceWith()</source>
          <target state="translated">.replaceWith()</target>
        </trans-unit>
        <trans-unit id="514512fdb962c802492f2e700703318166bff188" translate="yes" xml:space="preserve">
          <source>.rerender()</source>
          <target state="translated">.rerender()</target>
        </trans-unit>
        <trans-unit id="20f7e1a992266480d3b2ebeaabc13c686d37bc3e" translate="yes" xml:space="preserve">
          <source>.reset()</source>
          <target state="translated">.reset()</target>
        </trans-unit>
        <trans-unit id="d5db017ec9b464e8d299acde915ab4e4622f5f87" translate="yes" xml:space="preserve">
          <source>.resetController()</source>
          <target state="translated">.resetController()</target>
        </trans-unit>
        <trans-unit id="cf8d33e22e0b08a92c7c59349db36a00b651bf34" translate="yes" xml:space="preserve">
          <source>.resolve()</source>
          <target state="translated">.resolve()</target>
        </trans-unit>
        <trans-unit id="8433bb1791dced9aa024e683beb4a713bdfe40bd" translate="yes" xml:space="preserve">
          <source>.resolveRegistration()</source>
          <target state="translated">.resolveRegistration()</target>
        </trans-unit>
        <trans-unit id="aab779c70e1d68e3146c8837549ccc02f0c4858d" translate="yes" xml:space="preserve">
          <source>.resolver</source>
          <target state="translated">.resolver</target>
        </trans-unit>
        <trans-unit id="e435da409301a1f77eb2b81ff4bc3f4d417f9f84" translate="yes" xml:space="preserve">
          <source>.resumeTest()</source>
          <target state="translated">.resumeTest()</target>
        </trans-unit>
        <trans-unit id="d35efa22b35c58b26f52b7226331a2005af21d23" translate="yes" xml:space="preserve">
          <source>.rethrow()</source>
          <target state="translated">.rethrow()</target>
        </trans-unit>
        <trans-unit id="0e1f41ffa9623a4e6f0757f62ccb02a4777c3a46" translate="yes" xml:space="preserve">
          <source>.reverseObjects()</source>
          <target state="translated">.reverseObjects()</target>
        </trans-unit>
        <trans-unit id="709133869005bbf1b9bd7fd7ea42bfda7cf57723" translate="yes" xml:space="preserve">
          <source>.rootElement</source>
          <target state="translated">.rootElement</target>
        </trans-unit>
        <trans-unit id="cea167358d3e6988e70d3cda89a994718dd2ba82" translate="yes" xml:space="preserve">
          <source>.rootURL</source>
          <target state="translated">.rootURL</target>
        </trans-unit>
        <trans-unit id="7a56d18e21c87a45bcfec3e8558cf55d4eec3545" translate="yes" xml:space="preserve">
          <source>.routeName</source>
          <target state="translated">.routeName</target>
        </trans-unit>
        <trans-unit id="324cda9c74077dbce5a9cdb6c4c6c511172ad399" translate="yes" xml:space="preserve">
          <source>.runInDebug()</source>
          <target state="translated">.runInDebug()</target>
        </trans-unit>
        <trans-unit id="acc0c549ca05308a3a9c0e271bde4c7b6c5c6472" translate="yes" xml:space="preserve">
          <source>.schedule()</source>
          <target state="translated">.schedule()</target>
        </trans-unit>
        <trans-unit id="df7ccee3fe24ac90d472b9e2f46d000716debc5f" translate="yes" xml:space="preserve">
          <source>.scheduleOnce()</source>
          <target state="translated">.scheduleOnce()</target>
        </trans-unit>
        <trans-unit id="3f1df0644f32586fe1e99b5aa5992b2169c9c2f8" translate="yes" xml:space="preserve">
          <source>.send()</source>
          <target state="translated">.send()</target>
        </trans-unit>
        <trans-unit id="3df8bb574de4b23b89691a6e098153e71ad4a1a1" translate="yes" xml:space="preserve">
          <source>.sendAction()</source>
          <target state="translated">.sendAction()</target>
        </trans-unit>
        <trans-unit id="7c2621f0cf357269071448367a98b79afe4f1344" translate="yes" xml:space="preserve">
          <source>.sendEvent()</source>
          <target state="translated">.sendEvent()</target>
        </trans-unit>
        <trans-unit id="5cae48963d6123be8823d877400bfcbde3b51f55" translate="yes" xml:space="preserve">
          <source>.serialize()</source>
          <target state="translated">.serialize()</target>
        </trans-unit>
        <trans-unit id="50b54472661e36ad2672c1ed554f2eb13f355195" translate="yes" xml:space="preserve">
          <source>.service()</source>
          <target state="translated">.service()</target>
        </trans-unit>
        <trans-unit id="06e45937f01c9a038b655035b4eaa49501ced3fd" translate="yes" xml:space="preserve">
          <source>.set()</source>
          <target state="translated">.set()</target>
        </trans-unit>
        <trans-unit id="7dc070424c5dd10941e0ce6cc10b1731b19b599b" translate="yes" xml:space="preserve">
          <source>.setDiff()</source>
          <target state="translated">.setDiff()</target>
        </trans-unit>
        <trans-unit id="1c1d3b306d828683fac47a74d4f2e526bd2e824b" translate="yes" xml:space="preserve">
          <source>.setEach()</source>
          <target state="translated">.setEach()</target>
        </trans-unit>
        <trans-unit id="944fa3242a2f6f2cd243fb5124873dfb242f48f9" translate="yes" xml:space="preserve">
          <source>.setObjects()</source>
          <target state="translated">.setObjects()</target>
        </trans-unit>
        <trans-unit id="0d06f93ef4b94e974deb2abb16f5d1cbce9fd974" translate="yes" xml:space="preserve">
          <source>.setOwner()</source>
          <target state="translated">.setOwner()</target>
        </trans-unit>
        <trans-unit id="19a352dabe7c3240625c24de9270866f7bdc3338" translate="yes" xml:space="preserve">
          <source>.setProperties()</source>
          <target state="translated">.setProperties()</target>
        </trans-unit>
        <trans-unit id="7dbd27387a63918876282301a4d05f5f78be93db" translate="yes" xml:space="preserve">
          <source>.setupController()</source>
          <target state="translated">.setupController()</target>
        </trans-unit>
        <trans-unit id="49ab39c8357a8780d7424a3cff42cd55cb2b80e8" translate="yes" xml:space="preserve">
          <source>.setupForTesting()</source>
          <target state="translated">.setupForTesting()</target>
        </trans-unit>
        <trans-unit id="44debe3943696512ed37638998f9b458209057a8" translate="yes" xml:space="preserve">
          <source>.shiftObject()</source>
          <target state="translated">.shiftObject()</target>
        </trans-unit>
        <trans-unit id="b984ba174423a674e7539f0ae20e82ef6da8198a" translate="yes" xml:space="preserve">
          <source>.singular()</source>
          <target state="translated">.singular()</target>
        </trans-unit>
        <trans-unit id="e15ab5e5859a8cef699863490dd5b0db0894820e" translate="yes" xml:space="preserve">
          <source>.singularize()</source>
          <target state="translated">.singularize()</target>
        </trans-unit>
        <trans-unit id="6be3698ab08268d63e0d30c335775d92e26f8a1f" translate="yes" xml:space="preserve">
          <source>.slice()</source>
          <target state="translated">.slice()</target>
        </trans-unit>
        <trans-unit id="04f10b62f5957c03f949a789e69c46e07c97e47b" translate="yes" xml:space="preserve">
          <source>.sort()</source>
          <target state="translated">.sort()</target>
        </trans-unit>
        <trans-unit id="347d142f3b8796941c13c71beb26f3275a6b10ca" translate="yes" xml:space="preserve">
          <source>.sortBy()</source>
          <target state="translated">.sortBy()</target>
        </trans-unit>
        <trans-unit id="7d69e314f129bc6da2427bcac20d11fb0d178ba0" translate="yes" xml:space="preserve">
          <source>.sum()</source>
          <target state="translated">.sum()</target>
        </trans-unit>
        <trans-unit id="db0f4bc8f2a0faaa173a97c690ee3fc4bac1af07" translate="yes" xml:space="preserve">
          <source>.tabindex</source>
          <target state="translated">.tabindex</target>
        </trans-unit>
        <trans-unit id="5ddbe6b8c1d88e5873895f28d57864bd8c2dfa89" translate="yes" xml:space="preserve">
          <source>.tagName</source>
          <target state="translated">.tagName</target>
        </trans-unit>
        <trans-unit id="72696ccc80293d7cb64ff46f34e88a9ed1b773d9" translate="yes" xml:space="preserve">
          <source>.target</source>
          <target state="translated">.target</target>
        </trans-unit>
        <trans-unit id="dd8cc95545861c8c2e438b1150bfaccec00359fd" translate="yes" xml:space="preserve">
          <source>.templateName</source>
          <target state="translated">.templateName</target>
        </trans-unit>
        <trans-unit id="67710b3e43ca93c87c13cff2946239bdf994d13a" translate="yes" xml:space="preserve">
          <source>.testHelpers</source>
          <target state="translated">.testHelpers</target>
        </trans-unit>
        <trans-unit id="c11963101a531475a743a51f6277adccfd36ff1f" translate="yes" xml:space="preserve">
          <source>.testing</source>
          <target state="translated">.testing</target>
        </trans-unit>
        <trans-unit id="3b746a92956a266761e8d13a451cb51ad4e9e9a1" translate="yes" xml:space="preserve">
          <source>.then()</source>
          <target state="translated">.then()</target>
        </trans-unit>
        <trans-unit id="6dff2026165203d8960fd32e001e2add3dec8968" translate="yes" xml:space="preserve">
          <source>.throttle()</source>
          <target state="translated">.throttle()</target>
        </trans-unit>
        <trans-unit id="f2e5f1243797e0fc89bedab0f0fe5f36df4f8f57" translate="yes" xml:space="preserve">
          <source>.title</source>
          <target state="translated">.title</target>
        </trans-unit>
        <trans-unit id="96b9779b02de91f5d3e3d2367fcb7335cd09d167" translate="yes" xml:space="preserve">
          <source>.toArray()</source>
          <target state="translated">.toArray()</target>
        </trans-unit>
        <trans-unit id="87cca90e74625023a045b9c8594e8d9816fe9270" translate="yes" xml:space="preserve">
          <source>.toString()</source>
          <target state="translated">.toString()</target>
        </trans-unit>
        <trans-unit id="7536fcc02e1b725065b0fca1c8a967c4651b43e5" translate="yes" xml:space="preserve">
          <source>.toggleProperty()</source>
          <target state="translated">.toggleProperty()</target>
        </trans-unit>
        <trans-unit id="8063aabf938fa903c6f251ebbc00bd8d8f5252d0" translate="yes" xml:space="preserve">
          <source>.transitionTo()</source>
          <target state="translated">.transitionTo()</target>
        </trans-unit>
        <trans-unit id="403e5be93340bdfb989c1c22fb9f9af1a358cd10" translate="yes" xml:space="preserve">
          <source>.transitionToRoute()</source>
          <target state="translated">.transitionToRoute()</target>
        </trans-unit>
        <trans-unit id="252e6a710cfd64552c5a5126b772db8464e6406f" translate="yes" xml:space="preserve">
          <source>.trigger()</source>
          <target state="translated">.trigger()</target>
        </trans-unit>
        <trans-unit id="ebd4fe79603427fde7792c38b6ffe2dd324ab0e8" translate="yes" xml:space="preserve">
          <source>.triggerEvent()</source>
          <target state="translated">.triggerEvent()</target>
        </trans-unit>
        <trans-unit id="885206c8c44b9f8c15f1b4b9bb8d2d3a51953e36" translate="yes" xml:space="preserve">
          <source>.tryInvoke()</source>
          <target state="translated">.tryInvoke()</target>
        </trans-unit>
        <trans-unit id="ceab73322cb03773850bf20d7c11a4112c308e49" translate="yes" xml:space="preserve">
          <source>.trySet()</source>
          <target state="translated">.trySet()</target>
        </trans-unit>
        <trans-unit id="a2dab6c9649b3f13655894d01b438167e0e426b8" translate="yes" xml:space="preserve">
          <source>.typeOf()</source>
          <target state="translated">.typeOf()</target>
        </trans-unit>
        <trans-unit id="210986e77a26a3a117b23e47927dddb95a3dbc0b" translate="yes" xml:space="preserve">
          <source>.uncountable()</source>
          <target state="translated">.uncountable()</target>
        </trans-unit>
        <trans-unit id="07d634fa502df881049b0b436da756291a29881c" translate="yes" xml:space="preserve">
          <source>.underscore()</source>
          <target state="translated">.underscore()</target>
        </trans-unit>
        <trans-unit id="a73e243b46b75aa5490258439647fed5825962c5" translate="yes" xml:space="preserve">
          <source>.union()</source>
          <target state="translated">.union()</target>
        </trans-unit>
        <trans-unit id="4509e379a926c41e180d2d410612d54f6353e3f9" translate="yes" xml:space="preserve">
          <source>.uniq()</source>
          <target state="translated">.uniq()</target>
        </trans-unit>
        <trans-unit id="b0d08a4be748ddb03b449710b944e3be94d7ec2a" translate="yes" xml:space="preserve">
          <source>.uniqBy()</source>
          <target state="translated">.uniqBy()</target>
        </trans-unit>
        <trans-unit id="173162df9930f05f8b4876aef52e162768170554" translate="yes" xml:space="preserve">
          <source>.unregister()</source>
          <target state="translated">.unregister()</target>
        </trans-unit>
        <trans-unit id="3fabf9f087bfd5baf440b42c1dc9c757446f3eb4" translate="yes" xml:space="preserve">
          <source>.unregisterHelper()</source>
          <target state="translated">.unregisterHelper()</target>
        </trans-unit>
        <trans-unit id="c8795a09000b1b183d89d8f4b5b27c4086841889" translate="yes" xml:space="preserve">
          <source>.unregisterWaiter()</source>
          <target state="translated">.unregisterWaiter()</target>
        </trans-unit>
        <trans-unit id="1f7ae1f6b712fb238767027028535b51bba85747" translate="yes" xml:space="preserve">
          <source>.unshiftObject()</source>
          <target state="translated">.unshiftObject()</target>
        </trans-unit>
        <trans-unit id="30fecdb515ec54e933ce744c38edbcf6a06eb478" translate="yes" xml:space="preserve">
          <source>.unshiftObjects()</source>
          <target state="translated">.unshiftObjects()</target>
        </trans-unit>
        <trans-unit id="529736a421d2b3af6f2773551e349d2749c79770" translate="yes" xml:space="preserve">
          <source>.urlFor()</source>
          <target state="translated">.urlFor()</target>
        </trans-unit>
        <trans-unit id="f7bb4c48b4f8fbb517eefbc2486c31bb22243a46" translate="yes" xml:space="preserve">
          <source>.value</source>
          <target state="translated">.value</target>
        </trans-unit>
        <trans-unit id="a14cf37a71acce1919a2300e7bbef1bff367dbce" translate="yes" xml:space="preserve">
          <source>.visit()</source>
          <target state="translated">.visit()</target>
        </trans-unit>
        <trans-unit id="e1035e9bc446462904465be03a3fced5c6d08347" translate="yes" xml:space="preserve">
          <source>.volatile()</source>
          <target state="translated">.volatile()</target>
        </trans-unit>
        <trans-unit id="6419bff37c4a92412f77b7edc0d54e3aa361585f" translate="yes" xml:space="preserve">
          <source>.wait()</source>
          <target state="translated">.wait()</target>
        </trans-unit>
        <trans-unit id="6c60014f305a63248516a621058f002dae006b97" translate="yes" xml:space="preserve">
          <source>.warn()</source>
          <target state="translated">.warn()</target>
        </trans-unit>
        <trans-unit id="fb2a9b1aa26fbeef11ab5945f5041a788331216b" translate="yes" xml:space="preserve">
          <source>.watchModelTypes()</source>
          <target state="translated">.watchModelTypes()</target>
        </trans-unit>
        <trans-unit id="f1af775ba0ff416927d875c85b1d0e92d969c48f" translate="yes" xml:space="preserve">
          <source>.watchRecords()</source>
          <target state="translated">.watchRecords()</target>
        </trans-unit>
        <trans-unit id="a5c9b2ed0dd953ece9d432ae07fd679f5fcfb2ee" translate="yes" xml:space="preserve">
          <source>.willClearRender (event)</source>
          <target state="translated">.willClearRender（事件）</target>
        </trans-unit>
        <trans-unit id="752125cd8e651eeafec8d59564d8774e122d832b" translate="yes" xml:space="preserve">
          <source>.willDestroy()</source>
          <target state="translated">.willDestroy()</target>
        </trans-unit>
        <trans-unit id="dbec194f85474c70034819ba8be78e4fb030c286" translate="yes" xml:space="preserve">
          <source>.willDestroyElement (event)</source>
          <target state="translated">.willDestroyElement（事件）</target>
        </trans-unit>
        <trans-unit id="f72536317d7af32f1f9e8120862757bf9142a73d" translate="yes" xml:space="preserve">
          <source>.willInsertElement (event)</source>
          <target state="translated">.willInsertElement（事件）</target>
        </trans-unit>
        <trans-unit id="202c2b8c9d5db361a6c7bf68e098f6aa22a65dd3" translate="yes" xml:space="preserve">
          <source>.willRender (event)</source>
          <target state="translated">.willRender（事件）</target>
        </trans-unit>
        <trans-unit id="f7baa6fce678a563eb25ec1ebd52b27b67fbce80" translate="yes" xml:space="preserve">
          <source>.willRender()</source>
          <target state="translated">.willRender()</target>
        </trans-unit>
        <trans-unit id="8ac3d4bcb7c278576357c189beb239d3f6c5bd32" translate="yes" xml:space="preserve">
          <source>.willTransition (event)</source>
          <target state="translated">.willTransition（事件）</target>
        </trans-unit>
        <trans-unit id="284ae029f9789822159cbfb5dd859c87b1d07fb0" translate="yes" xml:space="preserve">
          <source>.willTransition()</source>
          <target state="translated">.willTransition()</target>
        </trans-unit>
        <trans-unit id="9f4e20e78df2f687614d524d526d43caa69ca7a5" translate="yes" xml:space="preserve">
          <source>.willUpdate (event)</source>
          <target state="translated">.willUpdate（事件）</target>
        </trans-unit>
        <trans-unit id="b848096d867e647a09e96dacdd01cadbf01cd3d3" translate="yes" xml:space="preserve">
          <source>.willUpdate()</source>
          <target state="translated">.willUpdate()</target>
        </trans-unit>
        <trans-unit id="30c6a21df39eeae90936e0722ad768363ce18ac4" translate="yes" xml:space="preserve">
          <source>.without()</source>
          <target state="translated">.without()</target>
        </trans-unit>
        <trans-unit id="a7030f2353f3f8f06ad1821c6f575081f512ffe1" translate="yes" xml:space="preserve">
          <source>/posts</source>
          <target state="translated">/posts</target>
        </trans-unit>
        <trans-unit id="0febbf643fa2d1e1b004712491bfb31ec43197c2" translate="yes" xml:space="preserve">
          <source>/posts/123</source>
          <target state="translated">/posts/123</target>
        </trans-unit>
        <trans-unit id="cd917b25c96589feb68fa856882d5619529786ec" translate="yes" xml:space="preserve">
          <source>0 if both are equal,</source>
          <target state="translated">如果两者相等,则为0。</target>
        </trans-unit>
        <trans-unit id="212b3c1ec23de4d9b3c4efdb01c16e9d1f0cf892" translate="yes" xml:space="preserve">
          <source>1 if the first is greater than the second.</source>
          <target state="translated">如果第一个大于第二个,则为1。</target>
        </trans-unit>
        <trans-unit id="c841415dfd82185ca4d3deb0b06f47faeee1bf58" translate="yes" xml:space="preserve">
          <source>1) A decision can be made to redirect elsewhere without needing to resolve the model first. 2) Any async operations need to occur first before the model is attempted to be resolved.</source>
          <target state="translated">1)可以决定重定向到其他地方,而不需要先解析模型。2)在尝试解析模型之前,任何异步操作都需要先发生。</target>
        </trans-unit>
        <trans-unit id="f1a1634b1acce7a9111b0a4bc8e569b74a02fb32" translate="yes" xml:space="preserve">
          <source>1, Mark the destroyable such that &lt;code&gt;isDestroying(destroyable)&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; 2, Call &lt;code&gt;destroy()&lt;/code&gt; on each of the destroyable's associated children 3, Schedule calling the destroyable's destructors 4, Schedule setting destroyable such that &lt;code&gt;isDestroyed(destroyable)&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">1，标记可 &lt;code&gt;destroy()&lt;/code&gt; ，使 &lt;code&gt;isDestroying(destroyable)&lt;/code&gt; 返回 &lt;code&gt;true&lt;/code&gt; 2，在每个可破坏对象的关联子对象上调用destroy（） 3，调度调用可破坏对象的析构函数4，调度可破坏对象，使 &lt;code&gt;isDestroyed(destroyable)&lt;/code&gt; 返回 &lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ae028af821b1dc344c1aa4b7b796219b4b012c28" translate="yes" xml:space="preserve">
          <source>1. Gather deprecations into one source</source>
          <target state="translated">1.将废弃的东西集中到一个源头</target>
        </trans-unit>
        <trans-unit id="d6de0c7a098c80f9386fa83cdb7a191bf208037f" translate="yes" xml:space="preserve">
          <source>2. &quot;Turn on&quot; a deprecation</source>
          <target state="translated">2.&quot;开启 &quot;一项废弃</target>
        </trans-unit>
        <trans-unit id="1c403367b178d3eb4a8047a45f09354e1d032811" translate="yes" xml:space="preserve">
          <source>2. Turn on a deprecation</source>
          <target state="translated">2.开启废止功能</target>
        </trans-unit>
        <trans-unit id="4ba398b02f2617e8b80f9e1661ae35fa479462dc" translate="yes" xml:space="preserve">
          <source>3. Fix and Repeat</source>
          <target state="translated">3.3.修正和重复</target>
        </trans-unit>
        <trans-unit id="378cf3b4d4d62e8e5d6138d850b1f3d030b92adb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#method_createRecord&quot;&gt;createRecord&lt;/a&gt; is used for creating new records on the client side. This will return a new record in the &lt;code&gt;created.uncommitted&lt;/code&gt; state. In order to persist this record to the backend you will need to call &lt;code&gt;record.save()&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#method_createRecord&quot;&gt;createRecord&lt;/a&gt;用于在客户端上创建新记录。这将返回一个处于 &lt;code&gt;created.uncommitted&lt;/code&gt; 状态的新记录。为了将记录保留到后端，您将需要调用 &lt;code&gt;record.save()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="94fb9019a3f8a4ae22a7de0bc3ebb529506e1f9d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#method_push&quot;&gt;push&lt;/a&gt; is used to notify Ember Data's store of new or updated records that exist in the backend. This will return a record in the &lt;code&gt;loaded.saved&lt;/code&gt; state. The primary use-case for &lt;code&gt;store#push&lt;/code&gt; is to notify Ember Data about record updates (full or partial) that happen outside of the normal adapter methods (for example &lt;a href=&quot;http://dev.w3.org/html5/eventsource/&quot;&gt;SSE&lt;/a&gt; or &lt;a href=&quot;http://www.w3.org/TR/2009/WD-websockets-20091222/&quot;&gt;Web Sockets&lt;/a&gt;).</source>
          <target state="translated">&lt;a href=&quot;#method_push&quot;&gt;push&lt;/a&gt;用于将后端中存在的新记录或更新记录通知Ember Data的存储。这将返回一条状态为 &lt;code&gt;loaded.saved&lt;/code&gt; 的记录。 &lt;code&gt;store#push&lt;/code&gt; 的主要用例是通知Ember Data有关常规适配器方法（例如&lt;a href=&quot;http://dev.w3.org/html5/eventsource/&quot;&gt;SSE&lt;/a&gt;或&lt;a href=&quot;http://www.w3.org/TR/2009/WD-websockets-20091222/&quot;&gt;Web Sockets&lt;/a&gt;）之外发生的记录更新（全部或部分）的信息。</target>
        </trans-unit>
        <trans-unit id="f3f2e448d00bd683324d8d696e05cf262b631a68" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#method_pushPayload&quot;&gt;pushPayload&lt;/a&gt; is a convenience wrapper for &lt;code&gt;store#push&lt;/code&gt; that will deserialize payloads if the Serializer implements a &lt;code&gt;pushPayload&lt;/code&gt; method.</source>
          <target state="translated">&lt;a href=&quot;#method_pushPayload&quot;&gt;pushPayload&lt;/a&gt;是 &lt;code&gt;store#push&lt;/code&gt; 的便捷包装，如果序列化程序实现 &lt;code&gt;pushPayload&lt;/code&gt; 方法，它将反序列化有效负载。</target>
        </trans-unit>
        <trans-unit id="79e204a803d5482dee5316012af52de7320f7842" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../components&quot;&gt;Glimmer components&lt;/a&gt;, including</source>
          <target state="translated">&lt;a href=&quot;../../components&quot;&gt;微光组件&lt;/a&gt;，包括</target>
        </trans-unit>
        <trans-unit id="d00bc8c76574b9adb1b4662e17bf5774a6a60386" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../components/template-lifecycle-dom-and-modifiers&quot;&gt;Modifiers&lt;/a&gt;, which unify the experience of writing code that interacts with the DOM.</source>
          <target state="translated">&lt;a href=&quot;../../components/template-lifecycle-dom-and-modifiers&quot;&gt;修饰符&lt;/a&gt;，用于统一编写与DOM交互的代码的经验。</target>
        </trans-unit>
        <trans-unit id="616e47cf316a3d8a10926e61adbf04cf7d32a4b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../in-depth-topics/autotracking-in-depth&quot;&gt;Tracked properties&lt;/a&gt;, a type of decorator that simplifies keeping the DOM up-to-date with JavaScript changes.</source>
          <target state="translated">&lt;a href=&quot;../../in-depth-topics/autotracking-in-depth&quot;&gt;跟踪属性&lt;/a&gt;，一种装饰器，可简化JavaScript更改使DOM保持最新状态。</target>
        </trans-unit>
        <trans-unit id="d84dfc16e907d2fcf14847f6d5c91f7b44ba5fe8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../in-depth-topics/native-classes-in-depth&quot;&gt;Native JavaScript classes&lt;/a&gt;, unlocking simpler syntax, faster performance, and better interop with the wider ecosystem.</source>
          <target state="translated">&lt;a href=&quot;../../in-depth-topics/native-classes-in-depth&quot;&gt;本机JavaScript类&lt;/a&gt;，可以解锁更简单的语法，更快的性能以及与更广泛的生态系统的更好互操作。</target>
        </trans-unit>
        <trans-unit id="0e175cb4fd8f078332e5dae114918372f0f54207" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../in-depth-topics/native-classes-in-depth#toc_decorators&quot;&gt;Decorators&lt;/a&gt; for customizing the behavior of components and other classes.</source>
          <target state="translated">&lt;a href=&quot;../../in-depth-topics/native-classes-in-depth#toc_decorators&quot;&gt;装饰器，&lt;/a&gt;用于自定义组件和其他类的行为。</target>
        </trans-unit>
        <trans-unit id="6163a15fcc3c59956b4330f575df89845528116c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../classes/store/methods#createRecord&quot;&gt;createRecord&lt;/a&gt; is used for creating new records on the client side. This will return a new record in the &lt;code&gt;created.uncommitted&lt;/code&gt; state. In order to persist this record to the backend, you will need to call &lt;code&gt;record.save()&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../classes/store/methods#createRecord&quot;&gt;createRecord&lt;/a&gt;用于在客户端上创建新记录。这将返回一个处于 &lt;code&gt;created.uncommitted&lt;/code&gt; 状态的新记录。为了将记录保留到后端，您将需要调用 &lt;code&gt;record.save()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="823c42f8bb8ba8f3f65e866aeec7250cd5d4ce5e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../classes/store/methods#push&quot;&gt;push&lt;/a&gt; is used to notify Ember Data's store of new or updated records that exist in the backend. This will return a record in the &lt;code&gt;loaded.saved&lt;/code&gt; state. The primary use-case for &lt;code&gt;store#push&lt;/code&gt; is to notify Ember Data about record updates (full or partial) that happen outside of the normal adapter methods (for example &lt;a href=&quot;http://dev.w3.org/html5/eventsource/&quot;&gt;SSE&lt;/a&gt; or &lt;a href=&quot;http://www.w3.org/TR/2009/WD-websockets-20091222/&quot;&gt;Web Sockets&lt;/a&gt;).</source>
          <target state="translated">&lt;a href=&quot;../classes/store/methods#push&quot;&gt;push&lt;/a&gt;用于将后端中存在的新记录或更新记录通知Ember Data的存储。这将返回一条处于 &lt;code&gt;loaded.saved&lt;/code&gt; 状态的记录。 &lt;code&gt;store#push&lt;/code&gt; 的主要用例是向Ember Data通知发生在常规适配器方法（例如&lt;a href=&quot;http://dev.w3.org/html5/eventsource/&quot;&gt;SSE&lt;/a&gt;或&lt;a href=&quot;http://www.w3.org/TR/2009/WD-websockets-20091222/&quot;&gt;Web Sockets&lt;/a&gt;）之外的记录更新（全部或部分）。</target>
        </trans-unit>
        <trans-unit id="fa018e660038db77e81a8f977e744341ea0bd99f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../classes/store/methods#pushPayload&quot;&gt;pushPayload&lt;/a&gt; is a convenience wrapper for &lt;code&gt;store#push&lt;/code&gt; that will deserialize payloads if the Serializer implements a &lt;code&gt;pushPayload&lt;/code&gt; method.</source>
          <target state="translated">&lt;a href=&quot;../classes/store/methods#pushPayload&quot;&gt;pushPayload&lt;/a&gt;是 &lt;code&gt;store#push&lt;/code&gt; 的便捷包装，如果序列化程序实现 &lt;code&gt;pushPayload&lt;/code&gt; 方法，它将反序列化有效负载。</target>
        </trans-unit>
        <trans-unit id="5a6620128192ec0b081dbfdab2eedc1bcb6afbc0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../components&quot;&gt;Components&lt;/a&gt; - The fundamental construct used in Ember applications, used to create reusable UI elements and define the layout and the functionality of the app.</source>
          <target state="translated">&lt;a href=&quot;../components&quot;&gt;组件&lt;/a&gt;-Ember应用程序中使用的基本结构，用于创建可重用的UI元素并定义应用程序的布局和功能。</target>
        </trans-unit>
        <trans-unit id="c03e08ddcb75247b85172488696e598948cc2c7c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../deprecatedevented&quot;&gt;DeprecatedEvented&lt;/a&gt;,</source>
          <target state="translated">&lt;a href=&quot;../deprecatedevented&quot;&gt;DeprecatedEvented&lt;/a&gt;,</target>
        </trans-unit>
        <trans-unit id="e610be2b8ab88c963bd736dfb005234c6ca3fb0e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../ember-inspector&quot;&gt;Ember Inspector&lt;/a&gt; - A browser extension, or bookmarklet, to inspect your application live. It's also useful for spotting Ember applications in the wild, try to install it and open up the &lt;a href=&quot;https://www.nasa.gov/&quot;&gt;NASA website&lt;/a&gt;!</source>
          <target state="translated">&lt;a href=&quot;../ember-inspector&quot;&gt;Ember Inspector-&lt;/a&gt;浏览器扩展或书签，用于实时检查您的应用程序。这对于在野外发现Ember应用程序，尝试安装它并打开&lt;a href=&quot;https://www.nasa.gov/&quot;&gt;NASA网站&lt;/a&gt;也很有用！</target>
        </trans-unit>
        <trans-unit id="efd486f978589a84fff8cd4c0463e193b3106262" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../ember.copyable&quot;&gt;Ember.Copyable&lt;/a&gt;,</source>
          <target state="translated">&lt;a href=&quot;../ember.copyable&quot;&gt;Ember.Copyable&lt;/a&gt;,</target>
        </trans-unit>
        <trans-unit id="caefc9e9fd1edddd2bebb4f11031281e0ef914ad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../ember.evented&quot;&gt;Ember.Evented&lt;/a&gt;,</source>
          <target state="translated">&lt;a href=&quot;../ember.evented&quot;&gt;Ember.Evented&lt;/a&gt;,</target>
        </trans-unit>
        <trans-unit id="a05318bcf9b50d50aecd12cb062551d79a8ff7d2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../ember.mutableenumerable&quot;&gt;Ember.MutableEnumerable&lt;/a&gt;,</source>
          <target state="translated">&lt;a href=&quot;../ember.mutableenumerable&quot;&gt;Ember.MutableEnumerable&lt;/a&gt;,</target>
        </trans-unit>
        <trans-unit id="13f5cd7edbcca3b3505aefd2f4ab3a835c98193a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../ember.observable&quot;&gt;Ember.Observable&lt;/a&gt;,&lt;a href=&quot;../ember.mutablearray&quot;&gt;Ember.MutableArray&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../ember.observable&quot;&gt;Ember.Observable&lt;/a&gt;,&lt;a href=&quot;../ember.mutablearray&quot;&gt;Ember.MutableArray&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d7a0ac7630ca263275c3a4f47046d40f46d261b7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../ember.viewmixin&quot;&gt;Ember.ViewMixin&lt;/a&gt;,&lt;a href=&quot;../ember.actionsupport&quot;&gt;Ember.ActionSupport&lt;/a&gt;,&lt;a href=&quot;../ember.classnamessupport&quot;&gt;Ember.ClassNamesSupport&lt;/a&gt;,&lt;a href=&quot;../ember.targetactionsupport&quot;&gt;Ember.TargetActionSupport&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../ember.viewmixin&quot;&gt;Ember.ViewMixin&lt;/a&gt;,&lt;a href=&quot;../ember.actionsupport&quot;&gt;Ember.ActionSupport&lt;/a&gt;,&lt;a href=&quot;../ember.classnamessupport&quot;&gt;Ember.ClassNamesSupport&lt;/a&gt;,&lt;a href=&quot;../ember.targetactionsupport&quot;&gt;Ember.TargetActionSupport&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ade27e3f08588b3793932badbd180e468dca651b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../ember.viewstatesupport&quot;&gt;Ember.ViewStateSupport&lt;/a&gt;,</source>
          <target state="translated">&lt;a href=&quot;../ember.viewstatesupport&quot;&gt;Ember.ViewStateSupport&lt;/a&gt;,</target>
        </trans-unit>
        <trans-unit id="2fbbd368e0dac467bea07475e4c97d305c28f8a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../evented&quot;&gt;Evented&lt;/a&gt;,</source>
          <target state="translated">&lt;a href=&quot;../evented&quot;&gt;Evented&lt;/a&gt;,</target>
        </trans-unit>
        <trans-unit id="a0362d554683c0a88d71fa641c966d4497bdd361" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../models&quot;&gt;Ember Data&lt;/a&gt; - Ember Data provides a consistent way to communicate with external APIs and manage application state</source>
          <target state="translated">&lt;a href=&quot;../models&quot;&gt;灰烬数据&lt;/a&gt;-灰烬数据提供了与外部API进行通信和管理应用程序状态的一致方式</target>
        </trans-unit>
        <trans-unit id="dda1a61f8bb6f26838063bd8e963301c5e0400df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../mutableenumerable&quot;&gt;MutableEnumerable&lt;/a&gt;,</source>
          <target state="translated">&lt;a href=&quot;../mutableenumerable&quot;&gt;MutableEnumerable&lt;/a&gt;,</target>
        </trans-unit>
        <trans-unit id="d48f437aa33b05f1bc45508d3b56ee7fbe1abef8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../observable&quot;&gt;Observable&lt;/a&gt;,</source>
          <target state="translated">&lt;a href=&quot;../observable&quot;&gt;Observable&lt;/a&gt;,</target>
        </trans-unit>
        <trans-unit id="3d93e7a467ba93107f26d052eb29b19262061094" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../query-params&quot;&gt;Routing Query Parameters&lt;/a&gt; should be defined within a controller.</source>
          <target state="translated">&lt;a href=&quot;../query-params&quot;&gt;路由查询参数&lt;/a&gt;应在控制器内定义。</target>
        </trans-unit>
        <trans-unit id="c4fa28b118b6d7fe5f27d50fd81948d4f5de34ac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../registryproxymixin&quot;&gt;RegistryProxyMixin&lt;/a&gt;,</source>
          <target state="translated">&lt;a href=&quot;../registryproxymixin&quot;&gt;RegistryProxyMixin&lt;/a&gt;,</target>
        </trans-unit>
        <trans-unit id="90c5c249ab96e50f4265417373147855349f5ab6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../routing&quot;&gt;Routing&lt;/a&gt; - A central part of an Ember application. Enables developers to drive the application state from the URL.</source>
          <target state="translated">&lt;a href=&quot;../routing&quot;&gt;路由&lt;/a&gt;-Ember应用程序的核心部分。使开发人员能够从URL驱动应用程序状态。</target>
        </trans-unit>
        <trans-unit id="34b6886342a565333440055bee3b39e7d372e4cb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../services&quot;&gt;Services&lt;/a&gt; - The way to store long-term state in your application and pass it around.</source>
          <target state="translated">&lt;a href=&quot;../services&quot;&gt;服务&lt;/a&gt;-在应用程序中存储长期状态并将其传递的方式。</target>
        </trans-unit>
        <trans-unit id="77588a0a4bfc1473282153a1912024a8d54d8e08" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../viewmixin&quot;&gt;Ember.ViewMixin&lt;/a&gt;,&lt;a href=&quot;../actionsupport&quot;&gt;Ember.ActionSupport&lt;/a&gt;,&lt;a href=&quot;../classnamessupport&quot;&gt;Ember.ClassNamesSupport&lt;/a&gt;,&lt;a href=&quot;../targetactionsupport&quot;&gt;Ember.TargetActionSupport&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../viewmixin&quot;&gt;Ember.ViewMixin&lt;/a&gt;,&lt;a href=&quot;../actionsupport&quot;&gt;Ember.ActionSupport&lt;/a&gt;,&lt;a href=&quot;../classnamessupport&quot;&gt;Ember.ClassNamesSupport&lt;/a&gt;,&lt;a href=&quot;../targetactionsupport&quot;&gt;Ember.TargetActionSupport&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f5926349300fe2914aeec2ad60f967bbfc143c65" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../viewstatesupport&quot;&gt;Ember.ViewStateSupport&lt;/a&gt;,</source>
          <target state="translated">&lt;a href=&quot;../viewstatesupport&quot;&gt;Ember.ViewStateSupport&lt;/a&gt;,</target>
        </trans-unit>
        <trans-unit id="00e03246e9b5bb21aac586b5903f0bb02944d72c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;configuring-ember/configuring-ember-cli&quot;&gt;Ember CLI&lt;/a&gt; - A robust development toolkit to create, develop, and build Ember applications. When you see an &lt;code&gt;$ ember &amp;lt;command&amp;gt;&lt;/code&gt; instruction throughout the guides, that's Ember CLI!</source>
          <target state="translated">&lt;a href=&quot;configuring-ember/configuring-ember-cli&quot;&gt;Ember CLI-&lt;/a&gt;一个强大的开发工具包，用于创建，开发和构建Ember应用程序。在整个指南中看到 &lt;code&gt;$ ember &amp;lt;command&amp;gt;&lt;/code&gt; 指令时，就是Ember CLI！</target>
        </trans-unit>
        <trans-unit id="a6030be9620c990ae199d126f293e1ec7df33a25" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;deprecatedevented&quot;&gt;DeprecatedEvented&lt;/a&gt;,</source>
          <target state="translated">&lt;a href=&quot;deprecatedevented&quot;&gt;DeprecatedEvented&lt;/a&gt;,</target>
        </trans-unit>
        <trans-unit id="8c1a487cc059494fd23597e1da059f7f9f9fd201" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ember-inspector&quot;&gt;Ember Inspector&lt;/a&gt; - A browser extension, or bookmarklet, to inspect your application live. It's also useful for spotting Ember applications in the wild, try to install it and open up the &lt;a href=&quot;https://www.nasa.gov/&quot;&gt;NASA website&lt;/a&gt;!</source>
          <target state="translated">&lt;a href=&quot;ember-inspector&quot;&gt;Ember Inspector-&lt;/a&gt;浏览器扩展或书签，用于实时检查您的应用程序。它对于在野外发现Ember应用程序，尝试安装它并打开&lt;a href=&quot;https://www.nasa.gov/&quot;&gt;NASA网站&lt;/a&gt;也很有用！</target>
        </trans-unit>
        <trans-unit id="7135fdf06fe98caeef5f6c7cf217082651e4ffa8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ember.copyable&quot;&gt;Ember.Copyable&lt;/a&gt;,</source>
          <target state="translated">&lt;a href=&quot;ember.copyable&quot;&gt;Ember.Copyable&lt;/a&gt;,</target>
        </trans-unit>
        <trans-unit id="c264df7e71e4c7aeefd184b6cf3db65ac070c19d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ember.evented&quot;&gt;Ember.Evented&lt;/a&gt;,</source>
          <target state="translated">&lt;a href=&quot;ember.evented&quot;&gt;Ember.Evented&lt;/a&gt;,</target>
        </trans-unit>
        <trans-unit id="0a52a0b714b5f7b1054e83b2fc8c116f7bfc2191" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ember.mutableenumerable&quot;&gt;Ember.MutableEnumerable&lt;/a&gt;,</source>
          <target state="translated">&lt;a href=&quot;ember.mutableenumerable&quot;&gt;Ember.MutableEnumerable&lt;/a&gt;,</target>
        </trans-unit>
        <trans-unit id="c3e73fd1305beac88d7cb9d9c9c6944524f26731" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ember.observable&quot;&gt;Ember.Observable&lt;/a&gt;,&lt;a href=&quot;ember.mutablearray&quot;&gt;Ember.MutableArray&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ember.observable&quot;&gt;Ember.Observable&lt;/a&gt;,&lt;a href=&quot;ember.mutablearray&quot;&gt;Ember.MutableArray&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6aa218a06f3cbd27433d0e888068372c2bceac3a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ember.viewmixin&quot;&gt;Ember.ViewMixin&lt;/a&gt;,&lt;a href=&quot;ember.actionsupport&quot;&gt;Ember.ActionSupport&lt;/a&gt;,&lt;a href=&quot;ember.classnamessupport&quot;&gt;Ember.ClassNamesSupport&lt;/a&gt;,&lt;a href=&quot;ember.targetactionsupport&quot;&gt;Ember.TargetActionSupport&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ember.viewmixin&quot;&gt;Ember.ViewMixin&lt;/a&gt;,&lt;a href=&quot;ember.actionsupport&quot;&gt;Ember.ActionSupport&lt;/a&gt;,&lt;a href=&quot;ember.classnamessupport&quot;&gt;Ember.ClassNamesSupport&lt;/a&gt;,&lt;a href=&quot;ember.targetactionsupport&quot;&gt;Ember.TargetActionSupport&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5f3cf9bcc8c720e1e8387c670042f4c2ad0eaa26" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ember.viewstatesupport&quot;&gt;Ember.ViewStateSupport&lt;/a&gt;,</source>
          <target state="translated">&lt;a href=&quot;ember.viewstatesupport&quot;&gt;Ember.ViewStateSupport&lt;/a&gt;,</target>
        </trans-unit>
        <trans-unit id="d06e7726655d4c98f1a246789910c3a02da3e584" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evented&quot;&gt;Evented&lt;/a&gt;,</source>
          <target state="translated">&lt;a href=&quot;evented&quot;&gt;Evented&lt;/a&gt;,</target>
        </trans-unit>
        <trans-unit id="4ece2c5e1731dbc129ca77d86a6bc4268ea57076" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://colorsafe.co/&quot;&gt;ColorSafe&lt;/a&gt;- Empowering designers with beautiful and accessible color palettes based on WCAG Guidelines of text and background contrast ratios</source>
          <target state="translated">&lt;a href=&quot;http://colorsafe.co/&quot;&gt;ColorSafe-&lt;/a&gt;基于WCAG文本和背景对比度比率指南，为设计师提供美观且易于使用的调色板</target>
        </trans-unit>
        <trans-unit id="b0932e423c7e27548fb3bc4e54118d44e48000d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://ember-engines.com/&quot;&gt;Ember Engines&lt;/a&gt; allow multiple logical applications to be composed together into a single application from the user's perspective, that provide functionality to their host applications. Engines are isolated, &lt;code&gt;composable applications&lt;/code&gt;, they have almost all the same features as normal Ember applications, except an &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/Engine&quot;&gt;Engine&lt;/a&gt; requires a host application to boot it and provide a Router instance.</source>
          <target state="translated">&lt;a href=&quot;http://ember-engines.com/&quot;&gt;&lt;/a&gt;从用户的角度来看，Ember Engine允许将多个逻辑应用程序组合到一个应用程序中，从而为其主机应用程序提供功能。引擎是隔离的， &lt;code&gt;composable applications&lt;/code&gt; ，它们具有与普通Ember应用程序几乎所有相同的功能，除了&lt;a href=&quot;https://api.emberjs.com/ember/release/classes/Engine&quot;&gt;引擎&lt;/a&gt;需要主机应用程序来启动它并提供Router实例。</target>
        </trans-unit>
        <trans-unit id="4e9ec0dac46b178e0e6d7a19f36373f6b839c902" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://emberjs.com/api/#method_getOwner&quot;&gt;&lt;code&gt;Ember.getOwner&lt;/code&gt;&lt;/a&gt; will retrieve the application instance that &quot;owns&quot; an object. This means that framework objects like components, helpers, and routes can use &lt;a href=&quot;http://emberjs.com/api/#method_getOwner&quot;&gt;&lt;code&gt;Ember.getOwner&lt;/code&gt;&lt;/a&gt; to perform lookups through their application instance at runtime.</source>
          <target state="translated">&lt;a href=&quot;http://emberjs.com/api/#method_getOwner&quot;&gt; &lt;code&gt;Ember.getOwner&lt;/code&gt; &lt;/a&gt;将检索&amp;ldquo;拥有&amp;rdquo;对象的应用程序实例。这意味着诸如对象，辅助程序和路由之类的框架对象可以使用&lt;a href=&quot;http://emberjs.com/api/#method_getOwner&quot;&gt; &lt;code&gt;Ember.getOwner&lt;/code&gt; &lt;/a&gt;在运行时通过其应用程序实例执行查找。</target>
        </trans-unit>
        <trans-unit id="396cc93a186da9cd9c54e5bd849a8de9d0be6a4a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://emberjs.com/api/classes/Ember.Component.html#event_didInsertElement&quot;&gt;&lt;code&gt;didInsertElement()&lt;/code&gt;&lt;/a&gt; is also a good place to attach event listeners. This is particularly useful for custom events or other browser events which do not have a &lt;a href=&quot;http://guides.emberjs.com/v2.1.0/components/handling-events/#toc_event-names&quot;&gt;built-in event handler&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://emberjs.com/api/classes/Ember.Component.html#event_didInsertElement&quot;&gt; &lt;code&gt;didInsertElement()&lt;/code&gt; &lt;/a&gt;也是附加事件侦听器的好地方。这对于自定义事件或其他没有&lt;a href=&quot;http://guides.emberjs.com/v2.1.0/components/handling-events/#toc_event-names&quot;&gt;内置事件处理程序的&lt;/a&gt;浏览器事件特别有用。</target>
        </trans-unit>
        <trans-unit id="2c647fd90dc9c361df1e1b740ceb8846e96dea42" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://emberjs.com/api/classes/Ember.Component.html#method__&quot;&gt;&lt;code&gt;$()&lt;/code&gt;&lt;/a&gt; will, by default, return a jQuery object for the component's root element, but you can also target child elements within the component's template by passing a selector:</source>
          <target state="translated">&lt;a href=&quot;http://emberjs.com/api/classes/Ember.Component.html#method__&quot;&gt; &lt;code&gt;$()&lt;/code&gt; &lt;/a&gt;默认情况下， $（）将为组件的根元素返回一个jQuery对象，但是您也可以通过传递选择器来定位组件模板中的子元素：</target>
        </trans-unit>
        <trans-unit id="a1321f0b9ddd11c6d639f990344577dafe803737" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://emberjs.com/api/classes/Ember.Object.html&quot;&gt;Ember.Object&lt;/a&gt; also provides a class system, supporting features like mixins and constructor methods. Some features in Ember's object model are not present in JavaScript classes or common patterns, but all are aligned as much as possible with the language and proposed additions.</source>
          <target state="translated">&lt;a href=&quot;http://emberjs.com/api/classes/Ember.Object.html&quot;&gt;Ember.Object&lt;/a&gt;还提供了一个类系统，支持混合功能和构造方法等功能。Ember的对象模型中的某些功能不在JavaScript类或通用模式中提供，但所有功能都尽可能地与语言和建议的附加功能保持一致。</target>
        </trans-unit>
        <trans-unit id="76548f244d921d58f78d3a0632ac84a8a1098753" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#method_if&quot;&gt;&lt;code&gt;{{if}}&lt;/code&gt;&lt;/a&gt; checks for truthiness, which means all values except &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;undefined&lt;/code&gt;, &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;''&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;[]&lt;/code&gt; (i.e., any JavaScript falsy value or an empty array).</source>
          <target state="translated">&lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#method_if&quot;&gt; &lt;code&gt;{{if}}&lt;/code&gt; &lt;/a&gt;检查是否为真，即除 &lt;code&gt;false&lt;/code&gt; ， &lt;code&gt;undefined&lt;/code&gt; ， &lt;code&gt;null&lt;/code&gt; ， &lt;code&gt;''&lt;/code&gt; ， &lt;code&gt;0&lt;/code&gt; 或 &lt;code&gt;[]&lt;/code&gt; 外的所有值（即，任何JavaScript伪造的值或空数组）。</target>
        </trans-unit>
        <trans-unit id="3d6542e994074e7bfd6c755a51f13df82321c271" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#method_if&quot;&gt;&lt;code&gt;{{if}}&lt;/code&gt;&lt;/a&gt; in this case returns &lt;code&gt;&quot;zoooom&quot;&lt;/code&gt; when &lt;code&gt;isFast&lt;/code&gt; is true and &lt;code&gt;&quot;putt-putt-putt&quot;&lt;/code&gt; when &lt;code&gt;isFast&lt;/code&gt; is false. Helpers invoked as inline expressions render a single value, the same way that properties are a single value.</source>
          <target state="translated">&lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#method_if&quot;&gt; &lt;code&gt;{{if}}&lt;/code&gt; &lt;/a&gt;在这种情况下返回 &lt;code&gt;&quot;zoooom&quot;&lt;/code&gt; 当 &lt;code&gt;isFast&lt;/code&gt; 是真实的， &lt;code&gt;&quot;putt-putt-putt&quot;&lt;/code&gt; 时 &lt;code&gt;isFast&lt;/code&gt; 是假的。作为内联表达式调用的帮助器呈现单个值，就像属性是单个值一样。</target>
        </trans-unit>
        <trans-unit id="5a843cbacb416eb7216a36e132ddf4c061011874" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#method_textarea&quot;&gt;&lt;code&gt;{{textarea}}&lt;/code&gt;&lt;/a&gt; supports binding and/or setting the following properties:</source>
          <target state="translated">&lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#method_textarea&quot;&gt; &lt;code&gt;{{textarea}}&lt;/code&gt; &lt;/a&gt;支持绑定和/或设置以下属性：</target>
        </trans-unit>
        <trans-unit id="02d91c301a049c1e6f6d547f7a7d9558e1967754" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://emberjs.com/api/classes/Ember.Test.html#method_click&quot;&gt;&lt;code&gt;click&lt;/code&gt;&lt;/a&gt; - pretends to be a user clicking on a specific part of the screen</source>
          <target state="translated">&lt;a href=&quot;http://emberjs.com/api/classes/Ember.Test.html#method_click&quot;&gt; &lt;code&gt;click&lt;/code&gt; &lt;/a&gt; -假装是在屏幕的一个特定部分的用户点击</target>
        </trans-unit>
        <trans-unit id="8336c19db7c1d8bbcb7c879e4b1756edc537511f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://emberjs.com/api/classes/Ember.Test.html#method_currentURL&quot;&gt;&lt;code&gt;currentURL&lt;/code&gt;&lt;/a&gt; - returns the URL of the page we're currently on</source>
          <target state="translated">&lt;a href=&quot;http://emberjs.com/api/classes/Ember.Test.html#method_currentURL&quot;&gt; &lt;code&gt;currentURL&lt;/code&gt; -&lt;/a&gt;返回我们当前所在页面的URL</target>
        </trans-unit>
        <trans-unit id="ada2cbe2851c1b4ade1b15a18f043bdec0e31dbf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://emberjs.com/api/classes/Ember.Test.html#method_registerAsyncHelper&quot;&gt;&lt;code&gt;Ember.Test.registerAsyncHelper&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Test.html#method_registerHelper&quot;&gt;&lt;code&gt;Ember.Test.registerHelper&lt;/code&gt;&lt;/a&gt; are used to register test helpers that will be injected when &lt;code&gt;startApp&lt;/code&gt; is called. The difference between &lt;code&gt;Ember.Test.registerHelper&lt;/code&gt; and &lt;code&gt;Ember.Test.registerAsyncHelper&lt;/code&gt; is that the latter will not run until any previous async helper has completed and any subsequent async helper will wait for it to finish before running.</source>
          <target state="translated">&lt;a href=&quot;http://emberjs.com/api/classes/Ember.Test.html#method_registerAsyncHelper&quot;&gt; &lt;code&gt;Ember.Test.registerAsyncHelper&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;http://emberjs.com/api/classes/Ember.Test.html#method_registerHelper&quot;&gt; &lt;code&gt;Ember.Test.registerHelper&lt;/code&gt; &lt;/a&gt;用于注册将在调用 &lt;code&gt;startApp&lt;/code&gt; 时注入的测试助手。 &lt;code&gt;Ember.Test.registerHelper&lt;/code&gt; 和 &lt;code&gt;Ember.Test.registerAsyncHelper&lt;/code&gt; 之间的区别在于，后者要等到任何先前的异步帮助程序完成后才能运行，并且任何后续的异步帮助程序都将在运行之前等待其完成。</target>
        </trans-unit>
        <trans-unit id="6db678b83d9e126ce24489c368f84d8ce76caa29" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://emberjs.com/api/classes/Ember.Test.html#method_visit&quot;&gt;&lt;code&gt;visit&lt;/code&gt;&lt;/a&gt; - loads a given URL</source>
          <target state="translated">&lt;a href=&quot;http://emberjs.com/api/classes/Ember.Test.html#method_visit&quot;&gt; &lt;code&gt;visit&lt;/code&gt; &lt;/a&gt; -加载给定的URL</target>
        </trans-unit>
        <trans-unit id="e4a72b752a5066259909bf4d1066caad98ff7a5b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Adapter.html&quot;&gt;DS.Adapter&lt;/a&gt; is the basic adapter with no functionality. It is generally a good starting point if you want to create an adapter that is radically different from the other Ember adapters.</source>
          <target state="translated">&lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Adapter.html&quot;&gt;DS.Adapter&lt;/a&gt;是没有功能的基本适配器。如果要创建与其他Ember适配器完全不同的适配器，通常这是一个很好的起点。</target>
        </trans-unit>
        <trans-unit id="96f4491b88b82408de1dfd5f60766ac52acc9789" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://emberjs.com/api/data/classes/DS.JSONAPIAdapter.html&quot;&gt;DS.JSONAPIAdapter&lt;/a&gt; The &lt;code&gt;JSONAPIAdapter&lt;/code&gt; is the default adapter and follows JSON API conventions to communicate with an HTTP server by transmitting JSON via XHR.</source>
          <target state="translated">&lt;a href=&quot;http://emberjs.com/api/data/classes/DS.JSONAPIAdapter.html&quot;&gt;DS.JSONAPIAdapter&lt;/a&gt;的 &lt;code&gt;JSONAPIAdapter&lt;/code&gt; 是默认的适配器和如下JSON API约定通过经由发送XHR JSON与HTTP服务器进行通信。</target>
        </trans-unit>
        <trans-unit id="822fdb2fad79fd6dfeaf4b2a1942f78d15d7018d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Model.html#method_save&quot;&gt;&lt;code&gt;save()&lt;/code&gt;&lt;/a&gt; returns a promise, which makes it easy to asynchronously handle success and failure scenarios. Here's a common pattern:</source>
          <target state="translated">&lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Model.html#method_save&quot;&gt; &lt;code&gt;save()&lt;/code&gt; &lt;/a&gt;返回一个promise，这使得异步处理成功和失败方案变得容易。这是一个常见的模式：</target>
        </trans-unit>
        <trans-unit id="4ec2b8d0d8711d121be6d2b945f0b2de971d9257" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://emberjs.com/api/data/classes/DS.RESTAdapter.html&quot;&gt;DS.RESTAdapter&lt;/a&gt; The &lt;code&gt;RESTAdapter&lt;/code&gt; allows your store to communicate with an HTTP server by transmitting JSON via XHR. Before Ember Data 2.0 this adapter was the default.</source>
          <target state="translated">&lt;a href=&quot;http://emberjs.com/api/data/classes/DS.RESTAdapter.html&quot;&gt;DS.RESTAdapter&lt;/a&gt;的 &lt;code&gt;RESTAdapter&lt;/code&gt; 让您的店铺由通过XHR发送JSON与HTTP服务器进行通信。在Ember Data 2.0之前，此适配器是默认适配器。</target>
        </trans-unit>
        <trans-unit id="3676a68075078656ecd2548aa89d007774a44c81" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://jsonapi.org/format/#document-meta&quot;&gt;&lt;code&gt;meta&lt;/code&gt;&lt;/a&gt; - object which contains meta-information about relationship</source>
          <target state="translated">&lt;a href=&quot;http://jsonapi.org/format/#document-meta&quot;&gt; &lt;code&gt;meta&lt;/code&gt; -&lt;/a&gt;包含有关关系的元信息的对象</target>
        </trans-unit>
        <trans-unit id="5880f8847243beee2c64cef881bdf1b14cb003a8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://jsonapi.org/format/#document-resource-object-linkage&quot;&gt;&lt;code&gt;data&lt;/code&gt;&lt;/a&gt; - place for primary data</source>
          <target state="translated">&lt;a href=&quot;http://jsonapi.org/format/#document-resource-object-linkage&quot;&gt; &lt;code&gt;data&lt;/code&gt; &lt;/a&gt; -主数据的位置</target>
        </trans-unit>
        <trans-unit id="47b29239a74d28b0168d8f5ac2ecbf2d96935d5a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://jsonapi.org/format/#document-top-level&quot;&gt;Your primary data should be wrapped inside &lt;code&gt;data&lt;/code&gt; property&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;http://jsonapi.org/format/#document-top-level&quot;&gt;您的主要数据应包装在 &lt;code&gt;data&lt;/code&gt; 属性内&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="592bc6fbbdc15fa42f2299527de6565af39db043" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://qunitjs.com/&quot;&gt;QUnit&lt;/a&gt; is the default testing framework for this guide, but others are supported through third-party addons.</source>
          <target state="translated">&lt;a href=&quot;http://qunitjs.com/&quot;&gt;QUnit&lt;/a&gt;是本指南的默认测试框架，但第三方插件也支持其他框架。</target>
        </trans-unit>
        <trans-unit id="ced911c11f15ef1063d20152fcf9841cada25933" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://surge.sh/&quot;&gt;Surge.sh&lt;/a&gt; allows you to publish any folder to the web for free. To deploy an Ember application you can simply deploy the folder produced by &lt;code&gt;ember build&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://surge.sh/&quot;&gt;Surge.sh&lt;/a&gt;允许您免费将任何文件夹发布到Web。要部署Ember应用程序，您只需部署 &lt;code&gt;ember build&lt;/code&gt; 生成的文件夹。</target>
        </trans-unit>
        <trans-unit id="1c4929b520ddbf59179c2c08b3ee6041ce07a5d5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.ember-cli-mirage.com/&quot;&gt;Mirage&lt;/a&gt; is a client HTTP stubbing library often used for Ember acceptance testing. For the case of this tutorial, we'll use mirage as our source of data rather than a traditional backend server. Mirage will allow us to create fake data to work with while developing our app and mimic an API. The data and endpoints we setup here will come into play later in the tutorial, when we use Ember Data to make server requests.</source>
          <target state="translated">&lt;a href=&quot;http://www.ember-cli-mirage.com/&quot;&gt;Mirage&lt;/a&gt;是客户端HTTP存根库，通常用于Ember验收测试。就本教程而言，我们将使用Mirage作为数据源，而不是传统的后端服务器。Mirage允许我们在开发应用程序和模仿API时创建可用于处理的伪造数据。当我们使用Ember Data发出服务器请求时，我们在此处设置的数据和端点将在本教程的稍后部分起作用。</target>
        </trans-unit>
        <trans-unit id="8ac68c79e57eaef4b9e57b4cefffa9914d678a49" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://a11ysupport.io/&quot;&gt;Accessibility Support&lt;/a&gt;- Find out if your code will work with assistive tech</source>
          <target state="translated">&lt;a href=&quot;https://a11ysupport.io/&quot;&gt;辅助功能支持&lt;/a&gt;-找出您的代码是否可以与辅助技术一起使用</target>
        </trans-unit>
        <trans-unit id="de0521b069e10ada168dd306144e16686a2f45bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://accessibilityinsights.io/&quot;&gt;Accessibility Insights&lt;/a&gt;- Use FastPass to find common, high-impact issues</source>
          <target state="translated">&lt;a href=&quot;https://accessibilityinsights.io/&quot;&gt;辅助功能见解&lt;/a&gt;-使用FastPass查找常见的高影响力问题</target>
        </trans-unit>
        <trans-unit id="3fb8e2c1c37bd07a91bad4899371a47784970953" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://api.emberjs.com/ember-data/release/classes/Adapter&quot;&gt;&lt;code&gt;Adapter&lt;/code&gt;&lt;/a&gt; is the basic adapter with no functionality. It is generally a good starting point if you want to create an adapter that is radically different from the other Ember adapters.</source>
          <target state="translated">&lt;a href=&quot;https://api.emberjs.com/ember-data/release/classes/Adapter&quot;&gt; &lt;code&gt;Adapter&lt;/code&gt; &lt;/a&gt;是没有功能的基本适配器。如果要创建与其他Ember适配器完全不同的适配器，通常这是一个很好的起点。</target>
        </trans-unit>
        <trans-unit id="751aedf4462a8ee6e3d1c2e6530fe366d11f4026" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://api.emberjs.com/ember-data/release/classes/JSONAPIAdapter&quot;&gt;&lt;code&gt;JSONAPIAdapter&lt;/code&gt;&lt;/a&gt; The &lt;code&gt;JSONAPIAdapter&lt;/code&gt; is the default adapter and follows JSON:API conventions to communicate with an HTTP server by transmitting JSON via XHR.</source>
          <target state="translated">&lt;a href=&quot;https://api.emberjs.com/ember-data/release/classes/JSONAPIAdapter&quot;&gt; &lt;code&gt;JSONAPIAdapter&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;JSONAPIAdapter&lt;/code&gt; 是默认的适配器和如下JSON：API约定通过经由发送XHR JSON与HTTP服务器进行通信。</target>
        </trans-unit>
        <trans-unit id="e10e124be1bf638663b51f5fc12e9250d1e58536" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://api.emberjs.com/ember-data/release/classes/Model/methods#save&quot;&gt;&lt;code&gt;save()&lt;/code&gt;&lt;/a&gt; returns a promise, which makes it easy to asynchronously handle success and failure scenarios. Here's a common pattern:</source>
          <target state="translated">&lt;a href=&quot;https://api.emberjs.com/ember-data/release/classes/Model/methods#save&quot;&gt; &lt;code&gt;save()&lt;/code&gt; &lt;/a&gt;返回一个promise，这使得异步处理成功和失败方案变得容易。这是一个常见的模式：</target>
        </trans-unit>
        <trans-unit id="b003e44027774151f667b47a028c625d0fae0218" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://api.emberjs.com/ember-data/release/classes/RESTAdapter&quot;&gt;&lt;code&gt;RESTAdapter&lt;/code&gt;&lt;/a&gt; The &lt;code&gt;RESTAdapter&lt;/code&gt; allows your store to communicate with an HTTP server by transmitting JSON via XHR. Before Ember Data 2.0 this adapter was the default.</source>
          <target state="translated">&lt;a href=&quot;https://api.emberjs.com/ember-data/release/classes/RESTAdapter&quot;&gt; &lt;code&gt;RESTAdapter&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;RESTAdapter&lt;/code&gt; 让您的店铺由通过XHR发送JSON与HTTP服务器进行通信。在Ember Data 2.0之前，此适配器是默认适配器。</target>
        </trans-unit>
        <trans-unit id="e8fbfbb94d2bca05a7d1142728f4d636de6480f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://api.emberjs.com/ember/release/classes/@ember%2Fapplication/methods#getOwner&quot;&gt;&lt;code&gt;Ember.getOwner&lt;/code&gt;&lt;/a&gt; will retrieve the application instance that &quot;owns&quot; an object. This means that framework objects like components, helpers, and routes can use &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/@ember%2Fapplication/methods#getOwner&quot;&gt;&lt;code&gt;Ember.getOwner&lt;/code&gt;&lt;/a&gt; to perform lookups through their application instance at runtime.</source>
          <target state="translated">&lt;a href=&quot;https://api.emberjs.com/ember/release/classes/@ember%2Fapplication/methods#getOwner&quot;&gt; &lt;code&gt;Ember.getOwner&lt;/code&gt; &lt;/a&gt;将检索&amp;ldquo;拥有&amp;rdquo;一个对象的应用程序实例。这意味着诸如对象，辅助程序和路由之类的框架对象可以使用&lt;a href=&quot;https://api.emberjs.com/ember/release/classes/@ember%2Fapplication/methods#getOwner&quot;&gt; &lt;code&gt;Ember.getOwner&lt;/code&gt; &lt;/a&gt;在运行时通过其应用程序实例执行查找。</target>
        </trans-unit>
        <trans-unit id="647df436f91e1d96d7cd7ed855071cbd19fad889" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://api.jquery.com/jquery.ajax/&quot;&gt;jQuery Ajax&lt;/a&gt; requests. See &lt;a href=&quot;https://guides.emberjs.com/configuring-ember/optional-features/&quot;&gt;the guide for optional features&lt;/a&gt; in order to be able to &lt;code&gt;import jQuery from 'jquery'&lt;/code&gt; in your app.</source>
          <target state="translated">&lt;a href=&quot;https://api.jquery.com/jquery.ajax/&quot;&gt;jQuery Ajax&lt;/a&gt;请求。请参阅&lt;a href=&quot;https://guides.emberjs.com/configuring-ember/optional-features/&quot;&gt;指南以了解可选功能&lt;/a&gt;，以便能够 &lt;code&gt;import jQuery from 'jquery'&lt;/code&gt; 应用程序中的&amp;ldquo; jquery&amp;rdquo;导入jQuery。</target>
        </trans-unit>
        <trans-unit id="1e310f6b2b6fe09d76e88d852411c80371ab2bbb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://atom.io/packages/emberjs-atom&quot;&gt;emberjs-atom&lt;/a&gt; - Atom autocomplete and snippets for Ember.js.</source>
          <target state="translated">&lt;a href=&quot;https://atom.io/packages/emberjs-atom&quot;&gt;emberjs-atom&lt;/a&gt; - Ember.js的Atom自动完成和摘要。</target>
        </trans-unit>
        <trans-unit id="36d4fd5ece7591fe3f189ccf3f36b6140d6540b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://cli.emberjs.com/release/&quot;&gt;Ember CLI&lt;/a&gt; - A robust development toolkit to create, develop, and build Ember applications. Learn &lt;a href=&quot;https://cli.emberjs.com/release/basic-use/cli-commands/&quot;&gt;basic commands&lt;/a&gt; from the CLI Guides.</source>
          <target state="translated">&lt;a href=&quot;https://cli.emberjs.com/release/&quot;&gt;Ember CLI-&lt;/a&gt;一个强大的开发工具包，用于创建，开发和构建Ember应用程序。从CLI指南中了解&lt;a href=&quot;https://cli.emberjs.com/release/basic-use/cli-commands/&quot;&gt;基本命令&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="46fcbf83511e2ec857f586c530868240d90000f6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/A_re-introduction_to_JavaScript&quot;&gt;Mozilla's JavaScript Tutorial&lt;/a&gt; is pretty comprehensive, and the MDN documentation is the go-to source for learning about JavaScript and web APIs.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/A_re-introduction_to_JavaScript&quot;&gt;Mozilla的JavaScript教程&lt;/a&gt;非常全面，MDN文档是学习JavaScript和Web API的首选资源。</target>
        </trans-unit>
        <trans-unit id="9eb2f601d697122061087e6b2761d78ddfd55ad3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://emberjs.com/api/classes/Ember.Component.html#toc_event-names&quot;&gt;Event Names&lt;/a&gt; must be dasherized.</source>
          <target state="translated">&lt;a href=&quot;https://emberjs.com/api/classes/Ember.Component.html#toc_event-names&quot;&gt;事件名称&lt;/a&gt;必须加反斜线。</target>
        </trans-unit>
        <trans-unit id="e9979f0b36c958f2956f7c8b0024224f37bace49" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/AndrewRadev/ember_tools.vim&quot;&gt;Ember Tools&lt;/a&gt; - Various tools for working with Ember.js projects.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/AndrewRadev/ember_tools.vim&quot;&gt;Ember工具&lt;/a&gt;-用于处理Ember.js项目的各种工具。</target>
        </trans-unit>
        <trans-unit id="3ddada86b5b0d8c251479ba6ef0f36c023ce3198" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/NullVoxPopuli/coc-ember&quot;&gt;coc-ember&lt;/a&gt; - Ember.js language server extension including useful configuration instructions.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/NullVoxPopuli/coc-ember&quot;&gt;coc-ember&lt;/a&gt; -Ember.js语言服务器扩展，包括有用的配置说明。</target>
        </trans-unit>
        <trans-unit id="2cb70a01e5846dc948f07b0f88dfed31b742df2d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/dsawardekar/ember.vim&quot;&gt;ember.vim&lt;/a&gt; - Shortcuts to navigate related files with Ember.js projects.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/dsawardekar/ember.vim&quot;&gt;ember.vim-&lt;/a&gt;用于浏览Ember.js项目相关文件的快捷方式。</target>
        </trans-unit>
        <trans-unit id="8783eab54260014691cd2e66aee5e55efc3869ef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/ebryn/backburner.js&quot;&gt;Backburner.js&lt;/a&gt; has support for stitching the stacktraces together so that you can track down where an error thrown by &lt;code&gt;Ember.run.later&lt;/code&gt; is being initiated from. Unfortunately, this is quite slow and is not appropriate for production or even normal development.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/ebryn/backburner.js&quot;&gt;Backburner.js&lt;/a&gt;支持将 &lt;code&gt;Ember.run.later&lt;/code&gt; 跟踪拼接在一起，以便您跟踪Ember.run.later引发错误的位置。不幸的是，这非常慢，不适用于生产甚至正常的开发。</target>
        </trans-unit>
        <trans-unit id="761eafcd1f511b5fdddf73c9f261edbd2606febf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/ember-a11y/a11y-announcer&quot;&gt;a11y-announcer&lt;/a&gt; - An accessible ember route change announcer</source>
          <target state="translated">&lt;a href=&quot;https://github.com/ember-a11y/a11y-announcer&quot;&gt;a11y-announcer-&lt;/a&gt;可访问的余烬路线变更播音员</target>
        </trans-unit>
        <trans-unit id="e24652edd30f4e850c4dac504cf4467c63be93e2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/ember-a11y/ember-a11y-landmarks&quot;&gt;ember-a11y-landmarks&lt;/a&gt; - Ember addon to help with landmark roles for better accessibility</source>
          <target state="translated">&lt;a href=&quot;https://github.com/ember-a11y/ember-a11y-landmarks&quot;&gt;ember-a11y-landmarks&lt;/a&gt; -Ember插件，可帮助具有地标性的角色，以实现更好的可访问性</target>
        </trans-unit>
        <trans-unit id="628b1bde45e09a87fe57a0941d732eda0ea79d65" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/ember-a11y/ember-a11y-testing&quot;&gt;ember-a11y-testing&lt;/a&gt; - A suite of accessibility tests that can be run within the Ember testing framework</source>
          <target state="translated">&lt;a href=&quot;https://github.com/ember-a11y/ember-a11y-testing&quot;&gt;ember-a11y-testing-&lt;/a&gt;一套可在Ember测试框架中运行的可访问性测试</target>
        </trans-unit>
        <trans-unit id="16cf600853e3d653e325eefef8a5d7b3941cea9e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/ember-a11y/ember-component-focus&quot;&gt;ember-component-focus&lt;/a&gt; - A mixin for adding methods to your Ember components that help you manage the currently focused element.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/ember-a11y/ember-component-focus&quot;&gt;ember-component-&lt;/a&gt; focus-一个用于向Ember组件添加方法的混入，可帮助您管理当前集中的元素。</target>
        </trans-unit>
        <trans-unit id="3a2d9b1c78b88ff651c37fa725226ab8795925d2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/ember-cli/ember-exam&quot;&gt;Ember Exam&lt;/a&gt; is an addon that allows you to parallelize the run. If you have many rendering and application tests, this can dramatically speed up your testing.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/ember-cli/ember-exam&quot;&gt;Ember Exam&lt;/a&gt;是一个附加组件，可让您并行运行。如果您有许多渲染和应用程序测试，则可以大大加快测试速度。</target>
        </trans-unit>
        <trans-unit id="242a2dbcb8fded007f92700a1dcd031163c45029" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/ember-template-lint/ember-template-lint&quot;&gt;ember-template-lint&lt;/a&gt; - linter for Ember templates</source>
          <target state="translated">&lt;a href=&quot;https://github.com/ember-template-lint/ember-template-lint&quot;&gt;ember-template-&lt;/a&gt; lint-用于Ember模板的linter</target>
        </trans-unit>
        <trans-unit id="a4dbb68a134c0ce8e312e4bb357e8afc38e0c0e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/emberjs/data&quot;&gt;Ember Data&lt;/a&gt; Models can be tested in a module that uses the &lt;code&gt;setupTest&lt;/code&gt; helper.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/data&quot;&gt;&lt;/a&gt;可以在使用 &lt;code&gt;setupTest&lt;/code&gt; 帮助器的模块中测试Ember数据模型。</target>
        </trans-unit>
        <trans-unit id="f30149c0434aaab01f5b265e6add7c95728b8a1d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/emberjs/data&quot;&gt;Ember Data&lt;/a&gt; Models can be tested using the &lt;code&gt;moduleForModel&lt;/code&gt; helper.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/data&quot;&gt;&lt;/a&gt;可以使用 &lt;code&gt;moduleForModel&lt;/code&gt; 助手来测试Ember数据模型。</target>
        </trans-unit>
        <trans-unit id="0c6039db1faf365c653c10406902522d8468b065" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/emberjs/ember-test-helpers/blob/master/API.md#currentroutename&quot;&gt;&lt;code&gt;currentRouteName()&lt;/code&gt;&lt;/a&gt;: returns the currently active route name.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember-test-helpers/blob/master/API.md#currentroutename&quot;&gt; &lt;code&gt;currentRouteName()&lt;/code&gt; &lt;/a&gt;：返回当前活动的路由名称。</target>
        </trans-unit>
        <trans-unit id="bc34e7adb3b85fe9fe3ec7a8b50599b29524ae65" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/emberjs/ember-test-helpers/blob/master/API.md#currenturl&quot;&gt;&lt;code&gt;currentURL()&lt;/code&gt;&lt;/a&gt;: returns the current URL.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember-test-helpers/blob/master/API.md#currenturl&quot;&gt; &lt;code&gt;currentURL()&lt;/code&gt; &lt;/a&gt;：返回当前URL。</target>
        </trans-unit>
        <trans-unit id="67273f5f663d39657f6444e93fc79ad07cf7c53a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/emberjs/ember-test-helpers/blob/master/API.md#find&quot;&gt;&lt;code&gt;find(selector)&lt;/code&gt;&lt;/a&gt;: finds one element within the app's root element that matches the given selector. Scoping to the root element is useful to avoid conflicts with the test framework's reporter.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember-test-helpers/blob/master/API.md#find&quot;&gt; &lt;code&gt;find(selector)&lt;/code&gt; &lt;/a&gt;：在应用程序的根元素中找到一个与给定选择器匹配的元素。限定根元素对于避免与测试框架的报告程序发生冲突很有用。</target>
        </trans-unit>
        <trans-unit id="0c205d6310790bce2c48305ad551119eb2204d7d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/emberjs/ember-test-helpers/blob/master/API.md#findall&quot;&gt;&lt;code&gt;findAll(selector)&lt;/code&gt;&lt;/a&gt;: like &lt;code&gt;find(selector)&lt;/code&gt;, but finds all elements that match the given selector. Equivalent to calling querySelectorAll() on the test root element. Returns an array of matched elements.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember-test-helpers/blob/master/API.md#findall&quot;&gt; &lt;code&gt;findAll(selector)&lt;/code&gt; &lt;/a&gt;：类似于 &lt;code&gt;find(selector)&lt;/code&gt; ，但是查找与给定选择器匹配的所有元素。等效于在测试根元素上调用querySelectorAll（）。返回匹配元素的数组。</target>
        </trans-unit>
        <trans-unit id="12654f315f9a85331d6ddf8222fa6cd79bf41871" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/emberjs/rfcs/blob/master/text/0403-ember-data-identifiers.md&quot;&gt;&lt;code&gt;lid&lt;/code&gt;&lt;/a&gt; is a valid optional sibling to &lt;code&gt;id&lt;/code&gt; and &lt;code&gt;type&lt;/code&gt; in both &lt;a href=&quot;https://jsonapi.org/format/#document-resource-objects&quot;&gt;Resources&lt;/a&gt; and &lt;a href=&quot;https://jsonapi.org/format/#document-resource-identifier-objects&quot;&gt;Resource Identifier Objects&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/rfcs/blob/master/text/0403-ember-data-identifiers.md&quot;&gt; &lt;code&gt;lid&lt;/code&gt; &lt;/a&gt;是 &lt;code&gt;id&lt;/code&gt; 和 &lt;code&gt;type&lt;/code&gt; 的有效可选同级，同时在&lt;a href=&quot;https://jsonapi.org/format/#document-resource-objects&quot;&gt;Resources&lt;/a&gt;和&lt;a href=&quot;https://jsonapi.org/format/#document-resource-identifier-objects&quot;&gt;Resource Identifier Objects中输入&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c74200d2fa5a75aed166b0f41b5407920ac7fcee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/html-next/ember-gestures&quot;&gt;ember-gestures&lt;/a&gt; - Ember Gestures provides an easy way to use gestures by making it simple to define and use HammerJS managers and recognizers throughout your app.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/html-next/ember-gestures&quot;&gt;手势&lt;/a&gt;-Ember Gestures通过在整个应用程序中轻松定义和使用HammerJS管理器和识别器，提供了一种使用手势的简便方法。</target>
        </trans-unit>
        <trans-unit id="6fa73fe9e065a99be540b27c18b13737f34ad548" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/josa42/atom-ide-ember&quot;&gt;atom-ide-ember&lt;/a&gt; - Atom package to use the Ember Language Server.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/josa42/atom-ide-ember&quot;&gt;atom-ide-ember-&lt;/a&gt;使用Ember Language Server的Atom程序包。</target>
        </trans-unit>
        <trans-unit id="432f4b479ea07a3ed924d346e53a6d6dd5c641f9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/joukevandermaas/vim-ember-hbs&quot;&gt;vim-ember-hbs&lt;/a&gt; - Add Ember template syntax highlighting and indentation to Vim.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/joukevandermaas/vim-ember-hbs&quot;&gt;vim-ember-hbs-&lt;/a&gt;向Vim添加Ember模板语法突出显示和缩进。</target>
        </trans-unit>
        <trans-unit id="0129dffb2d8fb61f40d8e565f960b3fc7102673d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/linkedin/self-focused/tree/master/packages/ember-self-focused&quot;&gt;ember-self-focused&lt;/a&gt; - Focus on route on transition</source>
          <target state="translated">&lt;a href=&quot;https://github.com/linkedin/self-focused/tree/master/packages/ember-self-focused&quot;&gt;自我专注&lt;/a&gt;-专注于过渡之路</target>
        </trans-unit>
        <trans-unit id="a2ee70f2d2ef2275b36e12c71e16275e0056c7a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/mattmcmanus/atom-ember-snippets&quot;&gt;atom-ember-snippets&lt;/a&gt; - Ember.js ES6, Ember Data &amp;amp; Handlebars snippets for Atom editor.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/mattmcmanus/atom-ember-snippets&quot;&gt;atom-ember-&lt;/a&gt; snippets-适用于Atom编辑器的Ember.js ES6，Ember Data和Handlebars片段。</target>
        </trans-unit>
        <trans-unit id="b470bfade94ebb0aa12c56c5571de2f5bc3d5925" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/metagrover/ES6-for-humans&quot;&gt;ES6 for humans&lt;/a&gt; is a great resource if you're already familiar with JavaScript in general, but haven't had a chance to get to know some of its latest features that were finalized in 2015.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/metagrover/ES6-for-humans&quot;&gt;&lt;/a&gt;如果您已经很熟悉JavaScript，但对于人类来说，ES6是一个很好的资源，但是还没有机会了解2015年完成的一些最新功能。</target>
        </trans-unit>
        <trans-unit id="adf99cafe4adea1b9a52ffd6d634ba3c5320de0b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/mmitchellgarcia/ember-component-template-split-view&quot;&gt;ember-component-template-split-view&lt;/a&gt; - Super simple Sublime Text plugin that will let you open corresponding template or route files with Ember.js components.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/mmitchellgarcia/ember-component-template-split-view&quot;&gt;ember-component-template-split-&lt;/a&gt; view-超简单的Sublime Text插件，可让您使用Ember.js组件打开相应的模板或路由文件。</target>
        </trans-unit>
        <trans-unit id="07e785349077b5c936894c8958f52f01dc1ee5ed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/neoclide/coc.nvim&quot;&gt;Conquer for Completion (COC) for Neovim&lt;/a&gt; - an Intellisense engine for Neovim which takes control over all linting, hinting, and language-server integration.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/neoclide/coc.nvim&quot;&gt;Neovim的完成征服（COC）-Neovim&lt;/a&gt;的Intellisense引擎，可以控制所有的插入，提示和语言服务器集成。</target>
        </trans-unit>
        <trans-unit id="a608fdf5957385bbc6aaa1f461a7aa0aab81c4dc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/patience-tema-baron/ember-keyboard&quot;&gt;ember-keyboard&lt;/a&gt; - An Ember.js addon for the painless support of keyboard events</source>
          <target state="translated">&lt;a href=&quot;https://github.com/patience-tema-baron/ember-keyboard&quot;&gt;ember-keyboard-&lt;/a&gt;一个Ember.js插件，可轻松支持键盘事件</target>
        </trans-unit>
        <trans-unit id="e0969d7be57978bb94ce3203cd5bc9da776a36b4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/rwjblue/ember-cli-cjs-transform&quot;&gt;ember-cli-cjs-transform&lt;/a&gt; allows us to import CommonJS modules into our Ember app. It also does auto-rollup and some nice caching, so it should pull in all the deps that are pulled in with &lt;code&gt;require&lt;/code&gt; for you automatically. It is not yet included with Ember CLI by default, so you will need to install it.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/rwjblue/ember-cli-cjs-transform&quot;&gt;ember-cli-cjs-transform&lt;/a&gt;允许我们将CommonJS模块导入到我们的Ember应用程序中。它也不会自动汇总和一些不错的缓存，所以应该在所有与拉在DEPS拉 &lt;code&gt;require&lt;/code&gt; 自动为您。默认情况下，它尚未包含在Ember CLI中，因此您需要安装它。</target>
        </trans-unit>
        <trans-unit id="4dea1de554e38c1a012701ace9114e4a22eb9965" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/rwjblue/ember-steps&quot;&gt;ember-steps&lt;/a&gt; - Declarative create wizards, tabbed UIs, and more</source>
          <target state="translated">&lt;a href=&quot;https://github.com/rwjblue/ember-steps&quot;&gt;嵌入步骤&lt;/a&gt;-声明式创建向导，选项卡式UI等</target>
        </trans-unit>
        <trans-unit id="31fabbca301b42416d7d9cb291d2623c571cb8a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/simplabs/ember-test-selectors&quot;&gt;Ember Test Selectors&lt;/a&gt; is an addon that helps you &lt;strong&gt;write tests that are more resilient to DOM changes&lt;/strong&gt;. You use &lt;code&gt;data-test-*&lt;/code&gt; attributes to mark the elements that will be used in your tests. The addon works with QUnit DOM and helpers from &lt;a href=&quot;https://github.com/emberjs/ember-test-helpers/&quot;&gt;@ember/test-helpers&lt;/a&gt;. It also removes the &lt;code&gt;data-test-*&lt;/code&gt; attributes in the production build.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/simplabs/ember-test-selectors&quot;&gt;灰烬测试选择器&lt;/a&gt;是一个附加组件，可以帮助您&lt;strong&gt;编写对DOM更改更具弹性的测试&lt;/strong&gt;。您可以使用 &lt;code&gt;data-test-*&lt;/code&gt; 属性来标记将在测试中使用的元素。该插件可与QUnit DOM和&lt;a href=&quot;https://github.com/emberjs/ember-test-helpers/&quot;&gt;@ ember / test-helpers中的助手一起使用&lt;/a&gt;。它还会在生产版本中删除 &lt;code&gt;data-test-*&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="6f083b8c673c7536eec94ecf386424fc0c4a0069" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/terminalvelocity/ember-cli-sublime-snippets&quot;&gt;ember-cli-sublime-snippets&lt;/a&gt; - Ember CLI snippets for Sublime Text 3.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/terminalvelocity/ember-cli-sublime-snippets&quot;&gt;ember-cli-sublime-snippets&lt;/a&gt; -Sublime Text 3的Ember CLI片段。</target>
        </trans-unit>
        <trans-unit id="4af5fc10000a617be08c56ddab4d5fa67190b725" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/tildeio/glimmer&quot;&gt;Glimmer&lt;/a&gt; is a templating engine used by Ember.js that is compatible with a subset of the &lt;a href=&quot;http://handlebarsjs.com/&quot;&gt;Handlebars&lt;/a&gt; syntax.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/tildeio/glimmer&quot;&gt;Glimmer&lt;/a&gt;是Ember.js使用的模板引擎，与&lt;a href=&quot;http://handlebarsjs.com/&quot;&gt;Handlebars&lt;/a&gt;语法的一部分兼容。</target>
        </trans-unit>
        <trans-unit id="7183502e5035557c0d748cd33d534b00281e5485" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/tim-evans/ember-page-title&quot;&gt;ember-page-title&lt;/a&gt; - Page title management for Ember.js Apps</source>
          <target state="translated">&lt;a href=&quot;https://github.com/tim-evans/ember-page-title&quot;&gt;ember-page-title&lt;/a&gt; -Ember.js应用程序的页面标题管理</target>
        </trans-unit>
        <trans-unit id="b0fcb323576c9bf768dd20817ebb0ba0ca44be4f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://guides.emberjs.com/addons-and-dependencies/managing-dependencies/#toc_regular-npm-packages&quot;&gt;Importing npm packages&lt;/a&gt; with zero additional configuration.</source>
          <target state="translated">&lt;a href=&quot;https://guides.emberjs.com/addons-and-dependencies/managing-dependencies/#toc_regular-npm-packages&quot;&gt;导入&lt;/a&gt;零配置的npm软件包。</target>
        </trans-unit>
        <trans-unit id="8c24e5bbbb45d3a8537b97b92e14976fd62b49dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://guides.emberjs.com/components/&quot;&gt;Components&lt;/a&gt; - The fundamental construct used in Ember applications, used to create reusable UI elements and define the layout and the functionality of the app.</source>
          <target state="translated">&lt;a href=&quot;https://guides.emberjs.com/components/&quot;&gt;组件&lt;/a&gt;-Ember应用程序中使用的基本结构，用于创建可重用的UI元素并定义应用程序的布局和功能。</target>
        </trans-unit>
        <trans-unit id="51aa2b4d320f4515678878dd45f3ff2adb93bdca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://guides.emberjs.com/components/&quot;&gt;Glimmer components&lt;/a&gt;, including</source>
          <target state="translated">&lt;a href=&quot;https://guides.emberjs.com/components/&quot;&gt;微光组件&lt;/a&gt;，包括</target>
        </trans-unit>
        <trans-unit id="3925befcafd18224520b117f4fb0954f762361e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://guides.emberjs.com/components/template-lifecycle-dom-and-modifiers/&quot;&gt;Modifiers&lt;/a&gt;, which unify the experience of writing code that interacts with the DOM.</source>
          <target state="translated">&lt;a href=&quot;https://guides.emberjs.com/components/template-lifecycle-dom-and-modifiers/&quot;&gt;修饰符&lt;/a&gt;，用于统一编写与DOM交互的代码的经验。</target>
        </trans-unit>
        <trans-unit id="67b62d8bf6d6decdf19a87d71a3e0a7efa4ccd96" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://guides.emberjs.com/ember-inspector/&quot;&gt;Ember Inspector&lt;/a&gt; - A browser extension, or bookmarklet, to inspect your application live. It's also useful for spotting Ember applications in the wild, try to install it and open up the &lt;a href=&quot;https://www.nasa.gov/&quot;&gt;NASA website&lt;/a&gt;!</source>
          <target state="translated">&lt;a href=&quot;https://guides.emberjs.com/ember-inspector/&quot;&gt;Ember Inspector-&lt;/a&gt;浏览器扩展或书签，用于实时检查您的应用程序。这对于在野外发现Ember应用程序，尝试安装它并打开&lt;a href=&quot;https://www.nasa.gov/&quot;&gt;NASA网站&lt;/a&gt;也很有用！</target>
        </trans-unit>
        <trans-unit id="29d1df0ffc27c9e714c81116db446198ee991c7a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://guides.emberjs.com/in-depth-topics/autotracking-in-depth/&quot;&gt;Getters&lt;/a&gt; recompute with each access, so you could just as easily rely upon another dynamic value such as &lt;code&gt;document.cookie&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://guides.emberjs.com/in-depth-topics/autotracking-in-depth/&quot;&gt;&lt;/a&gt;每次访问时，getter都会重新计算，因此您可以轻松地依赖另一个动态值，例如 &lt;code&gt;document.cookie&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3898cbc40fd61c4e0535ad8fd0a11527681fac34" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://guides.emberjs.com/in-depth-topics/autotracking-in-depth/&quot;&gt;Tracked properties&lt;/a&gt;, a type of decorator that simplifies keeping the DOM up-to-date with JavaScript changes.</source>
          <target state="translated">&lt;a href=&quot;https://guides.emberjs.com/in-depth-topics/autotracking-in-depth/&quot;&gt;跟踪属性&lt;/a&gt;，一种装饰器，可简化JavaScript更改使DOM保持最新状态。</target>
        </trans-unit>
        <trans-unit id="e99a1033d3a59fc2888564181117e91ef7fa172a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://guides.emberjs.com/in-depth-topics/native-classes-in-depth/&quot;&gt;Native JavaScript classes&lt;/a&gt;, unlocking simpler syntax, faster performance, and better interop with the wider ecosystem.</source>
          <target state="translated">&lt;a href=&quot;https://guides.emberjs.com/in-depth-topics/native-classes-in-depth/&quot;&gt;本机JavaScript类&lt;/a&gt;，可以解锁更简单的语法，更快的性能以及与更广泛的生态系统的更好互操作。</target>
        </trans-unit>
        <trans-unit id="b76ab53f4a8be7062b08de6df7c73ea8e40eb2ae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://guides.emberjs.com/in-depth-topics/native-classes-in-depth/#toc_decorators&quot;&gt;Decorators&lt;/a&gt; for customizing the behavior of components and other classes.</source>
          <target state="translated">&lt;a href=&quot;https://guides.emberjs.com/in-depth-topics/native-classes-in-depth/#toc_decorators&quot;&gt;装饰器，&lt;/a&gt;用于自定义组件和其他类的行为。</target>
        </trans-unit>
        <trans-unit id="a228a389c520aa4967b0d4539e2509877f0de6ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://guides.emberjs.com/models/&quot;&gt;Ember Data&lt;/a&gt; - Ember Data provides a consistent way to communicate with external APIs and manage application state</source>
          <target state="translated">&lt;a href=&quot;https://guides.emberjs.com/models/&quot;&gt;灰烬数据&lt;/a&gt;-灰烬数据提供了与外部API进行通信和管理应用程序状态的一致方式</target>
        </trans-unit>
        <trans-unit id="302a7de2e1a24f867221cbf2907d7a71603476f7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://guides.emberjs.com/models/&quot;&gt;Ember Data&lt;/a&gt; is the official data persistence library for Ember. It has a powerful set of tools for formatting requests, normalizing responses, and efficiently managing a local cache of data. Install &lt;code&gt;ember-data&lt;/code&gt; to use it. It is included by default in new Ember apps.</source>
          <target state="translated">&lt;a href=&quot;https://guides.emberjs.com/models/&quot;&gt;Ember Data&lt;/a&gt;是Ember的官方数据持久性库。它具有一组功能强大的工具，用于格式化请求，规范化响应以及有效管理本地数据缓存。安装 &lt;code&gt;ember-data&lt;/code&gt; 以使用它。默认情况下，它包含在新的Ember应用程序中。</target>
        </trans-unit>
        <trans-unit id="eb198944bbbed6346a0e65dbedb62bcc28d89c64" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://guides.emberjs.com/release/components/handling-events/#toc_event-names&quot;&gt;components/handling-events&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://guides.emberjs.com/release/components/handling-events/#toc_event-names&quot;&gt;components/handling-events&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="a63671f0b3ade0e8b84bebfc769dbf50537e1713" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://guides.emberjs.com/routing/&quot;&gt;Routing&lt;/a&gt; - A central part of an Ember application. Enables developers to drive the application state from the URL.</source>
          <target state="translated">&lt;a href=&quot;https://guides.emberjs.com/routing/&quot;&gt;路由&lt;/a&gt;-Ember应用程序的核心部分。使开发人员能够从URL驱动应用程序状态。</target>
        </trans-unit>
        <trans-unit id="bab141f40ed8c683463d0ee4a76ba5e5ebd72e9b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://guides.emberjs.com/services/&quot;&gt;Services&lt;/a&gt; - The way to store long-term state in your application and pass it around.</source>
          <target state="translated">&lt;a href=&quot;https://guides.emberjs.com/services/&quot;&gt;服务&lt;/a&gt;-在应用程序中存储长期状态并将其传递的方式。</target>
        </trans-unit>
        <trans-unit id="80f252f8843a96d252c860810d51953221bb8cd3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://guides.emberjs.com/testing/acceptance/#toc_wait-helpers&quot;&gt;&lt;code&gt;andThen&lt;/code&gt;&lt;/a&gt; - waits for our previous commands to run before executing our function. In our test below, we want to wait for our page to load after &lt;code&gt;click&lt;/code&gt; is called so that we can double-check that the new page has loaded</source>
          <target state="translated">&lt;a href=&quot;https://guides.emberjs.com/testing/acceptance/#toc_wait-helpers&quot;&gt; &lt;code&gt;andThen&lt;/code&gt; -&lt;/a&gt;等待我们之前的命令运行，然后再执行我们的功能。在下面的测试中，我们要在调用 &lt;code&gt;click&lt;/code&gt; 之后等待页面加载，以便我们可以再次检查新页面是否已加载</target>
        </trans-unit>
        <trans-unit id="66fa3f6ace37bf2a4ea729009e2d76160194cf57" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://guides.emberjs.com/v3.25.0/addons-and-dependencies/managing-dependencies/#toc_regular-npm-packages&quot;&gt;Importing npm packages&lt;/a&gt; with zero additional configuration.</source>
          <target state="translated">&lt;a href=&quot;https://guides.emberjs.com/v3.25.0/addons-and-dependencies/managing-dependencies/#toc_regular-npm-packages&quot;&gt;导入&lt;/a&gt;零配置的npm软件包。</target>
        </trans-unit>
        <trans-unit id="f0558bbae14c584289f3642bb3d10a1501d00c41" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://javascript.info&quot;&gt;javascript.info&lt;/a&gt; is a detailed interactive guide that takes you through from the basics to the details. This one is pretty good for beginners with no programming experience, since it starts from scratch and ramps up.</source>
          <target state="translated">&lt;a href=&quot;https://javascript.info&quot;&gt;javascript.info&lt;/a&gt;是详尽的交互式指南，可指导您从基础知识到细节。对于没有编程经验的初学者来说，这是一个很好的选择，因为它从头开始并逐步发展。</target>
        </trans-unit>
        <trans-unit id="81dbbc1b0131c6ded3ffde000ac66d3548f73653" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=Alonski.prettier-for-handlebars-vscode&quot;&gt;Prettier for Handlebars&lt;/a&gt; - Format your handlebars files with Prettier ...that's it! Note, because this uses the currently unreleased Prettier, it may break with future changes to Prettier.</source>
          <target state="translated">&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=Alonski.prettier-for-handlebars-vscode&quot;&gt;更漂亮&lt;/a&gt;的车把-使用&amp;ldquo;更漂亮&amp;rdquo;格式化您的车把文件...就是这样！请注意，由于此方法使用当前未发布的Prettier，因此将来对Prettier的更改可能会中断。</target>
        </trans-unit>
        <trans-unit id="243bdd52406b1ded7b211ebc1341ec5f70b75389" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=EditorConfig.EditorConfig&quot;&gt;EditorConfig for Visual Studio Code&lt;/a&gt; - Attempts to override user/workspace settings with settings found in &lt;code&gt;.editorconfig&lt;/code&gt; files. The &lt;code&gt;.editorconfig&lt;/code&gt; file helps developers define and maintain consistent coding styles between different editors and IDEs.</source>
          <target state="translated">&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=EditorConfig.EditorConfig&quot;&gt;Visual Studio Code的EditorConfig-&lt;/a&gt;尝试使用 &lt;code&gt;.editorconfig&lt;/code&gt; 文件中的设置覆盖用户/工作区设置。该 &lt;code&gt;.editorconfig&lt;/code&gt; 文件可以帮助开发人员定义和维护不同的编辑器和IDE之间是一致的编码风格。</target>
        </trans-unit>
        <trans-unit id="267d245bd7c176aeb9a7111002919e8341c795c9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=EmberTooling.vscode-ember&quot;&gt;Ember Language Server&lt;/a&gt; - Provides autocomplete in templates and allows go-to-definition behavior within Ember projects.</source>
          <target state="translated">&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=EmberTooling.vscode-ember&quot;&gt;Ember Language&lt;/a&gt; Server-在模板中提供自动完成功能，并允许Ember项目中的定义行为。</target>
        </trans-unit>
        <trans-unit id="4ffd78645dc794624c06b3b466ea0ee5229f54f9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=lifeart.vscode-ember-unstable&quot;&gt;Unstable Ember Language Server&lt;/a&gt; - A popular fork of Ember Language Server with different features.</source>
          <target state="translated">&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=lifeart.vscode-ember-unstable&quot;&gt;不稳定的Ember Language&lt;/a&gt; Server-具有不同功能的Ember Language Server的流行分支。</target>
        </trans-unit>
        <trans-unit id="222a660f110be36b89a325b611eed5be6c6caec7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=lifeart.vscode-glimmer-syntax&quot;&gt;Glimmer Templates Syntax&lt;/a&gt; - Syntax formatting for glimmer templates.</source>
          <target state="translated">&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=lifeart.vscode-glimmer-syntax&quot;&gt;闪光器模板语法&lt;/a&gt;-闪光器模板的语法格式。</target>
        </trans-unit>
        <trans-unit id="7154cc4c20141351c6d5f22cdbb9215297d95a93" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=phanitejakomaravolu.EmberES6Snippets&quot;&gt;Ember JS (ES6) and Handlebars code snippets&lt;/a&gt; - Enables Ember.js and Handlebars snippets to let you to type less and code more.</source>
          <target state="translated">&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=phanitejakomaravolu.EmberES6Snippets&quot;&gt;Ember JS（ES6）和Handlebars代码段&lt;/a&gt;-启用Ember.js和Handlebars代码段可让您键入更少并编写更多代码。</target>
        </trans-unit>
        <trans-unit id="ab2c4eb74e6c446f45b8e8238b1c4260458c6946" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://mochajs.org/&quot;&gt;Mocha&lt;/a&gt; is another testing framework. If you are more familiar with Mocha, you can install &lt;a href=&quot;https://github.com/emberjs/ember-mocha&quot;&gt;ember-mocha&lt;/a&gt; and &lt;a href=&quot;https://www.chaijs.com/plugins/chai-dom/&quot;&gt;Chai DOM&lt;/a&gt; instead.</source>
          <target state="translated">&lt;a href=&quot;https://mochajs.org/&quot;&gt;Mocha&lt;/a&gt;是另一个测试框架。如果您更熟悉Mocha，则可以安装&lt;a href=&quot;https://github.com/emberjs/ember-mocha&quot;&gt;ember-mocha&lt;/a&gt;和&lt;a href=&quot;https://www.chaijs.com/plugins/chai-dom/&quot;&gt;Chai DOM&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="40162441c0f6c132bf63adbcc80d09e9d04c1540" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://netlify.com/products&quot;&gt;Netlify&lt;/a&gt; is a one of many ways to deploy your app to the web so you can share it with others!</source>
          <target state="translated">&lt;a href=&quot;https://netlify.com/products&quot;&gt;Netlify&lt;/a&gt;是将您的应用程序部署到Web的多种方法之一，因此您可以与他人共享它！</target>
        </trans-unit>
        <trans-unit id="785149be332605a3325ef060ee7282f19ff41d7f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://plainlanguage.gov/&quot;&gt;Plain Language&lt;/a&gt; - Learn how to write in a way that makes it easier for people to read and understand.</source>
          <target state="translated">&lt;a href=&quot;https://plainlanguage.gov/&quot;&gt;普通语言&lt;/a&gt;-学习如何以一种使人们更容易阅读和理解的方式进行写作。</target>
        </trans-unit>
        <trans-unit id="9c5bf6664d7f099333993094a8322eee32b07a25" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.ember-cli-mirage.com/&quot;&gt;Ember CLI Mirage&lt;/a&gt; is an addon that allows you to create a mock server. You can also use it to test your app against various server states. To learn more about using Mirage in tests, we encourage you to &lt;a href=&quot;https://www.ember-cli-mirage.com/docs/testing/acceptance-tests&quot;&gt;visit the official website&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.ember-cli-mirage.com/&quot;&gt;Ember CLI Mirage&lt;/a&gt;是允许您创建模拟服务器的插件。您还可以使用它来针对各种服务器状态测试您的应用程序。要了解有关在测试中使用Mirage的更多信息，我们建议您&lt;a href=&quot;https://www.ember-cli-mirage.com/docs/testing/acceptance-tests&quot;&gt;访问官方网站&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7f27a235660f48d475bfaec9cdfe8a7516bf7068" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.w3.org/TR/using-aria/&quot;&gt;Using ARIA:&lt;/a&gt; a practical guide for developers on how to add accessibility information to HTML elements</source>
          <target state="translated">&lt;a href=&quot;https://www.w3.org/TR/using-aria/&quot;&gt;使用ARIA：&lt;/a&gt;开发人员实用指南，介绍如何向HTML元素添加可访问性信息</target>
        </trans-unit>
        <trans-unit id="5ea739460b5b7828656b1b603321175e1b1e410f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;models&quot;&gt;Data layer&lt;/a&gt; - Ember Data provides a consistent way to communicate with external APIs and manage application state</source>
          <target state="translated">&lt;a href=&quot;models&quot;&gt;数据层&lt;/a&gt; -Ember Data提供了与外部API进行通信和管理应用程序状态的一致方式</target>
        </trans-unit>
        <trans-unit id="b8ccb188f5a6877358ac39ba82100239554e6531" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mutableenumerable&quot;&gt;MutableEnumerable&lt;/a&gt;,</source>
          <target state="translated">&lt;a href=&quot;mutableenumerable&quot;&gt;MutableEnumerable&lt;/a&gt;,</target>
        </trans-unit>
        <trans-unit id="b01fd92d6539869cab03e1606defba0b720cecbb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;observable&quot;&gt;Observable&lt;/a&gt;,</source>
          <target state="translated">&lt;a href=&quot;observable&quot;&gt;Observable&lt;/a&gt;,</target>
        </trans-unit>
        <trans-unit id="dcb5028830a3127ff5a0c95dd67b97cd87cd50e7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;registryproxymixin&quot;&gt;RegistryProxyMixin&lt;/a&gt;,</source>
          <target state="translated">&lt;a href=&quot;registryproxymixin&quot;&gt;RegistryProxyMixin&lt;/a&gt;,</target>
        </trans-unit>
        <trans-unit id="6f25b8c172bfba084f2c81e70704640878675488" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;routing&quot;&gt;Routing&lt;/a&gt; - The central part of an Ember application. Enables developers to drive the application state from the URL.</source>
          <target state="translated">&lt;a href=&quot;routing&quot;&gt;路由&lt;/a&gt; -Ember应用程序的中心部分。使开发人员能够从URL驱动应用程序状态。</target>
        </trans-unit>
        <trans-unit id="beece407ad89fe4a00c6fa0d12603d8c75d79cf3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;store/methods#createRecord&quot;&gt;createRecord&lt;/a&gt; is used for creating new records on the client side. This will return a new record in the &lt;code&gt;created.uncommitted&lt;/code&gt; state. In order to persist this record to the backend, you will need to call &lt;code&gt;record.save()&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;store/methods#createRecord&quot;&gt;createRecord&lt;/a&gt;用于在客户端上创建新记录。这将返回一个处于 &lt;code&gt;created.uncommitted&lt;/code&gt; 状态的新记录。为了将记录保留到后端，您将需要调用 &lt;code&gt;record.save()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0a436dc9954ee939a6aee2cf9e42156dff63bcba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;store/methods#push&quot;&gt;push&lt;/a&gt; is used to notify Ember Data's store of new or updated records that exist in the backend. This will return a record in the &lt;code&gt;loaded.saved&lt;/code&gt; state. The primary use-case for &lt;code&gt;store#push&lt;/code&gt; is to notify Ember Data about record updates (full or partial) that happen outside of the normal adapter methods (for example &lt;a href=&quot;http://dev.w3.org/html5/eventsource/&quot;&gt;SSE&lt;/a&gt; or &lt;a href=&quot;http://www.w3.org/TR/2009/WD-websockets-20091222/&quot;&gt;Web Sockets&lt;/a&gt;).</source>
          <target state="translated">&lt;a href=&quot;store/methods#push&quot;&gt;push&lt;/a&gt;用于将后端中存在的新记录或更新记录通知Ember Data的存储。这将返回一条处于 &lt;code&gt;loaded.saved&lt;/code&gt; 状态的记录。 &lt;code&gt;store#push&lt;/code&gt; 的主要用例是向Ember Data通知发生在常规适配器方法（例如&lt;a href=&quot;http://dev.w3.org/html5/eventsource/&quot;&gt;SSE&lt;/a&gt;或&lt;a href=&quot;http://www.w3.org/TR/2009/WD-websockets-20091222/&quot;&gt;Web Sockets&lt;/a&gt;）之外的记录更新（全部或部分）。</target>
        </trans-unit>
        <trans-unit id="c96146c5eee95897a67cccadea70e76775649cbd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;store/methods#pushPayload&quot;&gt;pushPayload&lt;/a&gt; is a convenience wrapper for &lt;code&gt;store#push&lt;/code&gt; that will deserialize payloads if the Serializer implements a &lt;code&gt;pushPayload&lt;/code&gt; method.</source>
          <target state="translated">&lt;a href=&quot;store/methods#pushPayload&quot;&gt;pushPayload&lt;/a&gt;是 &lt;code&gt;store#push&lt;/code&gt; 的便捷包装，如果序列化程序实现 &lt;code&gt;pushPayload&lt;/code&gt; 方法，它将反序列化有效负载。</target>
        </trans-unit>
        <trans-unit id="2204f3850af16242f05b40fa09d79a38f20121a1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;templates/handlebars-basics&quot;&gt;Templating engine&lt;/a&gt; - Use Handlebars syntax to write your application's templates</source>
          <target state="translated">&lt;a href=&quot;templates/handlebars-basics&quot;&gt;模板引擎&lt;/a&gt; -使用Handlebars语法编写应用程序的模板</target>
        </trans-unit>
        <trans-unit id="e2eefbf546053aa37dec3fcf855b3837b6280cf9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;viewmixin&quot;&gt;Ember.ViewMixin&lt;/a&gt;,&lt;a href=&quot;actionsupport&quot;&gt;Ember.ActionSupport&lt;/a&gt;,&lt;a href=&quot;classnamessupport&quot;&gt;Ember.ClassNamesSupport&lt;/a&gt;,&lt;a href=&quot;targetactionsupport&quot;&gt;Ember.TargetActionSupport&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;viewmixin&quot;&gt;Ember.ViewMixin&lt;/a&gt;,&lt;a href=&quot;actionsupport&quot;&gt;Ember.ActionSupport&lt;/a&gt;,&lt;a href=&quot;classnamessupport&quot;&gt;Ember.ClassNamesSupport&lt;/a&gt;,&lt;a href=&quot;targetactionsupport&quot;&gt;Ember.TargetActionSupport&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3f739ebff1c8c96982dd30731f9b9222f39acbd7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;viewstatesupport&quot;&gt;Ember.ViewStateSupport&lt;/a&gt;,</source>
          <target state="translated">&lt;a href=&quot;viewstatesupport&quot;&gt;Ember.ViewStateSupport&lt;/a&gt;,</target>
        </trans-unit>
        <trans-unit id="3fbe9c986d58f437721357a0db37fb0aaeedb31e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/&lt;/code&gt; when you visit &lt;code&gt;/&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;/&lt;/code&gt; 当您访问时 &lt;code&gt;/&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="46ab0254e510f5f7f58d0face0af04ee6e8479a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/about&lt;/code&gt; when you visit &lt;code&gt;/about&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;/about&lt;/code&gt; 当您访问 &lt;code&gt;/about&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9254b3cdc68bb9b48694c6c5fceb811783befe0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/blog/some-post-id&lt;/code&gt; when you visit &lt;code&gt;/blog/some-post-id&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;/blog/some-post-id&lt;/code&gt; 时的 &lt;code&gt;/blog/some-post-id&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d749c72439969cf903a93831efd53a7b3070ef82" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/blog&lt;/code&gt; when you visit &lt;code&gt;/blog&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;/blog&lt;/code&gt; 当您访问 &lt;code&gt;/blog&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dbb5b3a151819cb926e7ac1f3b9a31b64d666db0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;3.23&lt;/code&gt; capabilities</source>
          <target state="translated">&lt;code&gt;3.23&lt;/code&gt; 功能</target>
        </trans-unit>
        <trans-unit id="6fdc490e584579a493e707a7ea63abc552543f7e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@action&lt;/code&gt; is a decorator that binds a method to the context its used in</source>
          <target state="translated">&lt;code&gt;@action&lt;/code&gt; 是一个装饰器，它将方法绑定到其使用的上下文中</target>
        </trans-unit>
        <trans-unit id="cc2c89e5f4467a35041bbfaaf4da7ee42d7c23fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@computed&lt;/code&gt; is a decorator that turns a JavaScript getter and setter into a computed property, which is a &lt;em&gt;cached, trackable value&lt;/em&gt;. By default the getter will only be called once and the result will be cached. You can specify various properties that your computed property depends on. This will force the cached result to be cleared if the dependencies are modified, and lazily recomputed the next time something asks for it.</source>
          <target state="translated">&lt;code&gt;@computed&lt;/code&gt; 是一个装饰器，它将JavaScript getter和setter转换为计算属性，该属性是一个&lt;em&gt;缓存的可跟踪值&lt;/em&gt;。默认情况下，getter只会被调用一次，结果将被缓存。您可以指定计算属性所依赖的各种属性。如果修改了依赖项，这将强制清除缓存的结果，并在下次有人要求时重新计算延迟。</target>
        </trans-unit>
        <trans-unit id="b39ba903bdd8fa0800bdc85ce84a83ba248eea86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@dependentKeyCompat&lt;/code&gt; is decorator that can be used on &lt;em&gt;native getters&lt;/em&gt; that use tracked properties. It exposes the getter to Ember's classic computed property and observer systems, so they can watch it for changes. It can be used in both native and classic classes.</source>
          <target state="translated">&lt;code&gt;@dependentKeyCompat&lt;/code&gt; 是可用于使用跟踪属性的&lt;em&gt;本机getter的&lt;/em&gt;装饰器。它将吸气剂暴露给Ember的经典计算属性和观察者系统，以便他们可以观察它的更改。它可以在本机和经典类中使用。</target>
        </trans-unit>
        <trans-unit id="6b4287b4624e1edc34d7446a34ada06840c999eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@each&lt;/code&gt; should only be used in a non-terminal context. Example:</source>
          <target state="translated">&lt;code&gt;@each&lt;/code&gt; 仅应在非终端上下文中使用。例：</target>
        </trans-unit>
        <trans-unit id="d05b82e36355bf110ab56522992603066a15db32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@identity&lt;/code&gt; - The item in the array itself.</source>
          <target state="translated">&lt;code&gt;@identity&lt;/code&gt; -数组本身中的项目。</target>
        </trans-unit>
        <trans-unit id="d2ced6aa41acdf3ffba7550112a0a146ed67cffa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@index&lt;/code&gt; - The index of the item in the array.</source>
          <target state="translated">&lt;code&gt;@index&lt;/code&gt; -数组中项目的索引。</target>
        </trans-unit>
        <trans-unit id="9328c75463e0c75dce0ead4a148bfd65a5c81b22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@tracked&lt;/code&gt; installs a native setter that tracks updates to these properties, allowing you to treat them like any other JS value.</source>
          <target state="translated">&lt;code&gt;@tracked&lt;/code&gt; 安装一个本地设置器，该设置器跟踪对这些属性的更新，使您可以将它们像其他任何JS值一样对待。</target>
        </trans-unit>
        <trans-unit id="605e8c5f1cac1cad47604952f91c390771bcb0f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;APP&lt;/code&gt; can be used to pass flags or options to the app's &lt;code&gt;Application&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;APP&lt;/code&gt; 可用于将标志或选项传递到应用程序的 &lt;code&gt;Application&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="7ba5de7a6b1840ce0b3a9cfae7c6f7ba6d94fba5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;APP&lt;/code&gt; can be used to pass flags/options to your application instance.</source>
          <target state="translated">&lt;code&gt;APP&lt;/code&gt; 可用于将标志/选项传递到您的应用程序实例。</target>
        </trans-unit>
        <trans-unit id="443678a94ba3f61aae4e93ebc8b0abaa0ce5b987" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Adapters&lt;/code&gt; accept various kinds of requests from the store and manage fulfillment of the request from your API.</source>
          <target state="translated">&lt;code&gt;Adapters&lt;/code&gt; 接受来自商店的各种请求，并管理来自API的请求的履行。</target>
        </trans-unit>
        <trans-unit id="3c7b51838b3279ef225e5da7d324be1d821cde33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Application&lt;/code&gt; has a number of default events that it listens for, as well as a mapping from lowercase events to camel-cased view method names. For example, the &lt;code&gt;keypress&lt;/code&gt; event causes the &lt;code&gt;keyPress&lt;/code&gt; method on the view to be called, the &lt;code&gt;dblclick&lt;/code&gt; event causes &lt;code&gt;doubleClick&lt;/code&gt; to be called, and so on.</source>
          <target state="translated">&lt;code&gt;Application&lt;/code&gt; 具有许多侦听的默认事件，以及从小写事件到驼峰式视图方法名称的映射。例如， &lt;code&gt;keypress&lt;/code&gt; 事件导致调用视图上的 &lt;code&gt;keyPress&lt;/code&gt; 方法， &lt;code&gt;dblclick&lt;/code&gt; 事件导致调用 &lt;code&gt;doubleClick&lt;/code&gt; ，依此类推。</target>
        </trans-unit>
        <trans-unit id="e372e982560575eb9716b340e8fe81a6497136ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ApplicationInstance.BootOptions&lt;/code&gt; is an interface class that exists purely to document the available options; you do not need to construct it manually. Simply pass a regular JavaScript object containing of the desired options:</source>
          <target state="translated">&lt;code&gt;ApplicationInstance.BootOptions&lt;/code&gt; 是仅用于记录可用选项的接口类。您不需要手动构建它。只需传递包含所需选项的常规JavaScript对象：</target>
        </trans-unit>
        <trans-unit id="55b3bb55e28c0696dddc48bdd184e4b257ca4731" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Array&lt;/code&gt; is extended to implement the &lt;code&gt;Ember.Enumerable&lt;/code&gt;, &lt;code&gt;Ember.MutableEnumerable&lt;/code&gt;, &lt;code&gt;Ember.MutableArray&lt;/code&gt; and &lt;code&gt;Ember.Array&lt;/code&gt; interfaces. This polyfills ECMAScript 5 array methods in browsers that do not implement them, adds convenience methods and properties to built-in arrays, and makes array mutations observable.</source>
          <target state="translated">&lt;code&gt;Array&lt;/code&gt; 扩展数组以实现 &lt;code&gt;Ember.Enumerable&lt;/code&gt; ， &lt;code&gt;Ember.MutableEnumerable&lt;/code&gt; ， &lt;code&gt;Ember.MutableArray&lt;/code&gt; 和 &lt;code&gt;Ember.Array&lt;/code&gt; 接口。这种在未实现浏览器的浏览器中填充ECMAScript 5数组方法，为内置数组添加了便利的方法和属性，并使数组突变可见。</target>
        </trans-unit>
        <trans-unit id="23d1166390dc21867392da9f609bbcdec1efc96c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Comments&lt;/code&gt; for a &lt;code&gt;post&lt;/code&gt; can be loaded by &lt;code&gt;post.get('comments')&lt;/code&gt;. The JSON API adapter will send 3 &lt;code&gt;GET&lt;/code&gt; requests to &lt;code&gt;/comments/1/&lt;/code&gt;, &lt;code&gt;/comments/2/&lt;/code&gt; and &lt;code&gt;/comments/3/&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Comments&lt;/code&gt; 的 &lt;code&gt;post&lt;/code&gt; 可以被加载 &lt;code&gt;post.get('comments')&lt;/code&gt; 。JSON API适配器将向 &lt;code&gt;/comments/1/&lt;/code&gt; ， &lt;code&gt;/comments/2/&lt;/code&gt; 和 &lt;code&gt;/comments/3/&lt;/code&gt; 发送3个 &lt;code&gt;GET&lt;/code&gt; 请求。</target>
        </trans-unit>
        <trans-unit id="d2bf2c8977890a617722a04c1632a4856f9ec5cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Comments&lt;/code&gt; for a &lt;code&gt;post&lt;/code&gt; can be loaded by &lt;code&gt;post.get('comments')&lt;/code&gt;. The JSON:API adapter will send 3 &lt;code&gt;GET&lt;/code&gt; requests to &lt;code&gt;/comments/1/&lt;/code&gt;, &lt;code&gt;/comments/2/&lt;/code&gt; and &lt;code&gt;/comments/3/&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Comments&lt;/code&gt; 的 &lt;code&gt;post&lt;/code&gt; 可以被加载 &lt;code&gt;post.get('comments')&lt;/code&gt; 。JSON：API适配器将向 &lt;code&gt;/comments/1/&lt;/code&gt; ， &lt;code&gt;/comments/2/&lt;/code&gt; 和 &lt;code&gt;/comments/3/&lt;/code&gt; 发送3个 &lt;code&gt;GET&lt;/code&gt; 请求。</target>
        </trans-unit>
        <trans-unit id="c95992815bafa386e344744120e74feb33551157" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Complexity&lt;/code&gt; - with a huge dependency tree and many layers of abstraction, developers cannot iterate quickly, and features suffer as a result.</source>
          <target state="translated">&lt;code&gt;Complexity&lt;/code&gt; -具有巨大的依赖树和许多抽象层，开发人员无法快速迭代，功能因此而遭受损失。</target>
        </trans-unit>
        <trans-unit id="b2a13f5f5b68bf3dd3972571bf8ac45de3505ddb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Coordination&lt;/code&gt; - when you develop a new feature or make big changes, many teams may need to be in sync to approve it.</source>
          <target state="translated">&lt;code&gt;Coordination&lt;/code&gt; -开发新功能或进行重大更改时，可能需要同步许多团队才能批准。</target>
        </trans-unit>
        <trans-unit id="0088d2ad19c37e1a0473cd9491d94c666acdeed6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CoreObject&lt;/code&gt; is the base class for all Ember constructs. It establishes a class system based on Ember's Mixin system, and provides the basis for the Ember Object Model. &lt;code&gt;CoreObject&lt;/code&gt; should generally not be used directly, instead you should use &lt;code&gt;EmberObject&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CoreObject&lt;/code&gt; 是所有Ember构造的基类。它建立了一个基于Ember的Mixin系统的类系统，并为Ember对象模型提供了基础。 &lt;code&gt;CoreObject&lt;/code&gt; 一般不应该直接使用，而是使用 &lt;code&gt;EmberObject&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d854a972dd6fd4ec982dedc13cacc52ff35aa482" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DS.Adapter&lt;/code&gt; is an abstract base class that you should override in your application to customize it for your backend. The minimum set of methods that you should implement is:</source>
          <target state="translated">&lt;code&gt;DS.Adapter&lt;/code&gt; 是抽象基类，您应该在应用程序中对其进行重写以针对后端对其进行自定义。您应该实现的最小方法集是：</target>
        </trans-unit>
        <trans-unit id="f04a2474000ffaf8bd81665372215c16468a28f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DS.EmbeddedRecordsMixin&lt;/code&gt; supports serializing embedded records.</source>
          <target state="translated">&lt;code&gt;DS.EmbeddedRecordsMixin&lt;/code&gt; 支持序列化嵌入式记录。</target>
        </trans-unit>
        <trans-unit id="69ed447649d6cd1c9d477ca4151de793f4202e35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DS.Serializer&lt;/code&gt; is an abstract base class that you should override in your application to customize it for your backend. The minimum set of methods that you should implement is:</source>
          <target state="translated">&lt;code&gt;DS.Serializer&lt;/code&gt; 是抽象基类，您应该在应用程序中对其进行重写以针对后端对其进行自定义。您应该实现的最小方法集是：</target>
        </trans-unit>
        <trans-unit id="d28f3cbb87dc9784050a5974a979e45a38bd0617" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DS.attr&lt;/code&gt; can also take a hash of options as a second parameter. At the moment the only option available is &lt;code&gt;defaultValue&lt;/code&gt;, which can use a value or a function to set the default value of the attribute if one is not supplied.</source>
          <target state="translated">&lt;code&gt;DS.attr&lt;/code&gt; 也可以将选项的哈希作为第二个参数。目前，唯一可用的选项是 &lt;code&gt;defaultValue&lt;/code&gt; ，如果未提供，则可以使用值或函数来设置属性的默认值。</target>
        </trans-unit>
        <trans-unit id="5be5fb290d81f3380dfbcb59136bbcc0eb525f14" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DS.attr&lt;/code&gt; defines an attribute on a &lt;a href=&quot;https://emberjs.com/api/data/classes/DS.Model.html&quot;&gt;DS.Model&lt;/a&gt;. By default, attributes are passed through as-is, however you can specify an optional type to have the value automatically transformed. Ember Data ships with four basic transform types: &lt;code&gt;string&lt;/code&gt;, &lt;code&gt;number&lt;/code&gt;, &lt;code&gt;boolean&lt;/code&gt; and &lt;code&gt;date&lt;/code&gt;. You can define your own transforms by subclassing &lt;a href=&quot;https://emberjs.com/api/data/classes/DS.Transform.html&quot;&gt;DS.Transform&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;DS.attr&lt;/code&gt; 定义上的一个属性&lt;a href=&quot;https://emberjs.com/api/data/classes/DS.Model.html&quot;&gt;DS.Model&lt;/a&gt;。默认情况下，属性按原样传递，但是您可以指定可选类型以自动转换值。Ember Data附带四种基本转换类型： &lt;code&gt;string&lt;/code&gt; ， &lt;code&gt;number&lt;/code&gt; ， &lt;code&gt;boolean&lt;/code&gt; 和 &lt;code&gt;date&lt;/code&gt; 。您可以通过子类化&lt;a href=&quot;https://emberjs.com/api/data/classes/DS.Transform.html&quot;&gt;DS.Transform&lt;/a&gt;来定义自己的转换。</target>
        </trans-unit>
        <trans-unit id="64878c1ce26c1de63531198d5f65ebeff52cbb78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DS.attr&lt;/code&gt; takes an optional hash as a second parameter, currently supported options are:</source>
          <target state="translated">&lt;code&gt;DS.attr&lt;/code&gt; 将可选的哈希作为第二个参数，当前支持的选项包括：</target>
        </trans-unit>
        <trans-unit id="3255532756f485a27d8c765a3e04cf4caa2e3a19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DS.belongsTo&lt;/code&gt; is used to define One-To-One and One-To-Many relationships on a &lt;a href=&quot;https://emberjs.com/api/data/classes/DS.Model.html&quot;&gt;DS.Model&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;DS.belongsTo&lt;/code&gt; 是用来定义一到一和一到多的关系&lt;a href=&quot;https://emberjs.com/api/data/classes/DS.Model.html&quot;&gt;DS.Model&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fbbcc9780e470bad349e0239efaef09b3fac0a9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DS.belongsTo&lt;/code&gt; takes an optional hash as a second parameter, currently supported options are:</source>
          <target state="translated">&lt;code&gt;DS.belongsTo&lt;/code&gt; 将可选的哈希作为第二个参数，当前支持的选项是：</target>
        </trans-unit>
        <trans-unit id="88080d5de66245118e9cb86c55a9a2ff96297e4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DS.hasMany&lt;/code&gt; is used to define One-To-Many and Many-To-Many relationships on a &lt;a href=&quot;https://emberjs.com/api/data/classes/DS.Model.html&quot;&gt;DS.Model&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;DS.hasMany&lt;/code&gt; 用来定义在一个一对多和多对多一对多关系&lt;a href=&quot;https://emberjs.com/api/data/classes/DS.Model.html&quot;&gt;DS.Model&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="597aeb6a8b4f6fb21fc8ca7d468463d724f30d13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DS.hasMany&lt;/code&gt; takes an optional hash as a second parameter, currently supported options are:</source>
          <target state="translated">&lt;code&gt;DS.hasMany&lt;/code&gt; 将可选的哈希作为第二个参数，当前支持的选项包括：</target>
        </trans-unit>
        <trans-unit id="0ff6f58bfcfdf3bffc3bff51800ddf0716d85b92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Ember.$()&lt;/code&gt;, which is an alias for the global jQuery. This can either be replaced with alternative APIs, or by installing &lt;code&gt;@ember/jquery&lt;/code&gt; and importing it directly.</source>
          <target state="translated">&lt;code&gt;Ember.$()&lt;/code&gt; ，它是全局jQuery的别名。可以用替代的API代替它，也可以安装 &lt;code&gt;@ember/jquery&lt;/code&gt; 并将其直接导入。</target>
        </trans-unit>
        <trans-unit id="f773cb46bfa31e00c9c3bafe7fdc61683aa35625" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Ember.ActionHandler&lt;/code&gt; is available on some familiar classes including &lt;code&gt;Ember.Route&lt;/code&gt;, &lt;code&gt;Ember.Component&lt;/code&gt;, and &lt;code&gt;Ember.Controller&lt;/code&gt;. (Internally the mixin is used by &lt;code&gt;Ember.CoreView&lt;/code&gt;, &lt;code&gt;Ember.ControllerMixin&lt;/code&gt;, and &lt;code&gt;Ember.Route&lt;/code&gt; and available to the above classes through inheritance.)</source>
          <target state="translated">&lt;code&gt;Ember.ActionHandler&lt;/code&gt; 在一些熟悉的类中可用，包括 &lt;code&gt;Ember.Route&lt;/code&gt; ， &lt;code&gt;Ember.Component&lt;/code&gt; 和 &lt;code&gt;Ember.Controller&lt;/code&gt; 。（内部，mixin由 &lt;code&gt;Ember.CoreView&lt;/code&gt; ， &lt;code&gt;Ember.ControllerMixin&lt;/code&gt; 和 &lt;code&gt;Ember.Route&lt;/code&gt; 使用，并且可通过继承用于上述类。）</target>
        </trans-unit>
        <trans-unit id="44271cea35a34c3f77424e06d9b571f6ac872e11" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Ember.Application&lt;/code&gt; has a number of default events that it listens for, as well as a mapping from lowercase events to camel-cased view method names. For example, the &lt;code&gt;keypress&lt;/code&gt; event causes the &lt;code&gt;keyPress&lt;/code&gt; method on the view to be called, the &lt;code&gt;dblclick&lt;/code&gt; event causes &lt;code&gt;doubleClick&lt;/code&gt; to be called, and so on.</source>
          <target state="translated">&lt;code&gt;Ember.Application&lt;/code&gt; 具有许多侦听的默认事件，以及从小写事件到驼峰式视图方法名称的映射。例如， &lt;code&gt;keypress&lt;/code&gt; 事件导致调用视图上的 &lt;code&gt;keyPress&lt;/code&gt; 方法， &lt;code&gt;dblclick&lt;/code&gt; 事件导致调用 &lt;code&gt;doubleClick&lt;/code&gt; ，依此类推。</target>
        </trans-unit>
        <trans-unit id="5d829b50298afbcbafd33af41dd80990cbb5f788" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Ember.ApplicationInstance.BootOptions&lt;/code&gt; is an interface class that exists purely to document the available options; you do not need to construct it manually. Simply pass a regular JavaScript object containing of the desired options:</source>
          <target state="translated">&lt;code&gt;Ember.ApplicationInstance.BootOptions&lt;/code&gt; 是仅用于记录可用选项的接口类。您无需手动构建它。只需传递包含所需选项的常规JavaScript对象：</target>
        </trans-unit>
        <trans-unit id="1df386e235bb3c3d2e836e4b696f33d07ea70615" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Ember.CoreView&lt;/code&gt; is an abstract class that exists to give view-like behavior to both Ember's main view class &lt;code&gt;Ember.Component&lt;/code&gt; and other classes that don't need the full functionality of &lt;code&gt;Ember.Component&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Ember.CoreView&lt;/code&gt; 是一个抽象类，用于为Ember的主视图类 &lt;code&gt;Ember.Component&lt;/code&gt; 和其他不需要 &lt;code&gt;Ember.Component&lt;/code&gt; 的全部功能的类提供类似视图的行为。</target>
        </trans-unit>
        <trans-unit id="cf65b463205b0a7fa1c1d9b3563859c37816b11b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Ember.HashLocation&lt;/code&gt; implements the location API using the browser's hash. At present, it relies on a &lt;code&gt;hashchange&lt;/code&gt; event existing in the browser.</source>
          <target state="translated">&lt;code&gt;Ember.HashLocation&lt;/code&gt; 使用浏览器的哈希值实现位置API。目前，它依赖于浏览器中存在的 &lt;code&gt;hashchange&lt;/code&gt; 事件。</target>
        </trans-unit>
        <trans-unit id="ec82e5b78d26ab4ed823740753ac5c00f381cc77" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Ember.LinkComponent&lt;/code&gt; components are invoked with {{#link-to}}. Properties of this class can be overridden with &lt;code&gt;reopen&lt;/code&gt; to customize application-wide behavior.</source>
          <target state="translated">&lt;code&gt;Ember.LinkComponent&lt;/code&gt; 组件使用{{＃link-to}}进行调用。可以使用 &lt;code&gt;reopen&lt;/code&gt; 覆盖此类的属性，以自定义应用程序范围的行为。</target>
        </trans-unit>
        <trans-unit id="f6c4985b1c4e34ee9bc87da815745bed255c2622" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Ember.LinkComponent&lt;/code&gt; renders an element whose &lt;code&gt;click&lt;/code&gt; event triggers a transition of the application's instance of &lt;code&gt;Ember.Router&lt;/code&gt; to a supplied route by name.</source>
          <target state="translated">&lt;code&gt;Ember.LinkComponent&lt;/code&gt; 呈现一个元素，该元素的 &lt;code&gt;click&lt;/code&gt; 事件触发该应用程序按名称触发 &lt;code&gt;Ember.Router&lt;/code&gt; 实例到提供的路由的转换。</target>
        </trans-unit>
        <trans-unit id="96ee626465af4e8592040f46042a9b92b724eeee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Ember.Object&lt;/code&gt; is the main base class for all Ember objects. It is a subclass of &lt;code&gt;Ember.CoreObject&lt;/code&gt; with the &lt;code&gt;Ember.Observable&lt;/code&gt; mixin applied. For details, see the documentation for each of these.</source>
          <target state="translated">&lt;code&gt;Ember.Object&lt;/code&gt; 是所有Ember对象的主要基类。它是 &lt;code&gt;Ember.CoreObject&lt;/code&gt; 的子类，并应用了 &lt;code&gt;Ember.Observable&lt;/code&gt; mixin。有关详细信息，请参见每个文档。</target>
        </trans-unit>
        <trans-unit id="10a7208d81d375957a33a5a14608de72b99b3d62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Ember.ObjectProxy&lt;/code&gt; forwards all properties not defined by the proxy itself to a proxied &lt;code&gt;content&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;Ember.ObjectProxy&lt;/code&gt; 将未由代理本身定义的所有属性转发到代理的 &lt;code&gt;content&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="12efca5dd9b45220d381d2480b1510eaae10eab3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Ember.ProxyMixin&lt;/code&gt; forwards all properties not defined by the proxy itself to a proxied &lt;code&gt;content&lt;/code&gt; object. See Ember.ObjectProxy for more details.</source>
          <target state="translated">&lt;code&gt;Ember.ProxyMixin&lt;/code&gt; 将未由代理本身定义的所有属性转发到代理的 &lt;code&gt;content&lt;/code&gt; 对象。有关更多详细信息，请参见Ember.ObjectProxy。</target>
        </trans-unit>
        <trans-unit id="263cf1b7a87671c904cacf1ecf699ae2793ad3aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Ember.TargetActionSupport&lt;/code&gt; is a mixin that can be included in a class to add a &lt;code&gt;triggerAction&lt;/code&gt; method with semantics similar to the Handlebars &lt;code&gt;{{action}}&lt;/code&gt; helper. In normal Ember usage, the &lt;code&gt;{{action}}&lt;/code&gt; helper is usually the best choice. This mixin is most often useful when you are doing more complex event handling in Components.</source>
          <target state="translated">&lt;code&gt;Ember.TargetActionSupport&lt;/code&gt; 是一个混合包，可以包含在类中，以添加具有类似Handlebars &lt;code&gt;{{action}}&lt;/code&gt; 辅助程序的语义的 &lt;code&gt;triggerAction&lt;/code&gt; 方法。在正常的Ember使用中， &lt;code&gt;{{action}}&lt;/code&gt; 帮助程序通常是最佳选择。当您在组件中执行更复杂的事件处理时，此mixin最有用。</target>
        </trans-unit>
        <trans-unit id="f5c7429aca8d8d55188710eb5feceb8f7ab49d84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EmberENV.ENABLE_OPTIONAL_FEATURES&lt;/code&gt; - enable any features that have not been explicitly enabled/disabled.</source>
          <target state="translated">&lt;code&gt;EmberENV.ENABLE_OPTIONAL_FEATURES&lt;/code&gt; -启用尚未明确启用/禁用的所有功能。</target>
        </trans-unit>
        <trans-unit id="998564aa043ef8bf0cbd9f7b069f4754b9d31a34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EmberENV&lt;/code&gt; can be used to define Ember feature flags (see the &lt;a href=&quot;../feature-flags&quot;&gt;Feature Flags guide&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;EmberENV&lt;/code&gt; 可用于定义Ember功能标志（请参阅&lt;a href=&quot;../feature-flags&quot;&gt;功能标志指南&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="ded5ff7928208f0299047c5d6b10b88c725cf07f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EmberENV&lt;/code&gt; can be used to define Ember feature flags (see the &lt;a href=&quot;feature-flags&quot;&gt;Feature Flags guide&lt;/a&gt;) to be enabled at runtime.</source>
          <target state="translated">&lt;code&gt;EmberENV&lt;/code&gt; 可用于定义要在运行时启用的Ember功能标志（请参阅&lt;a href=&quot;feature-flags&quot;&gt;功能标志指南&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="24d07d1dcbeb3b2c9a585a312ec4769886fdf3ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EmberObject&lt;/code&gt; is the main base class for all Ember objects. It is a subclass of &lt;code&gt;CoreObject&lt;/code&gt; with the &lt;code&gt;Observable&lt;/code&gt; mixin applied. For details, see the documentation for each of these.</source>
          <target state="translated">&lt;code&gt;EmberObject&lt;/code&gt; 是所有Ember对象的主要基类。它是应用了 &lt;code&gt;Observable&lt;/code&gt; mixin的 &lt;code&gt;CoreObject&lt;/code&gt; 的子类。有关详细信息，请参见每个文档。</target>
        </trans-unit>
        <trans-unit id="a1dea5db05303e4cd6b07551e212f53ac8b31e64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Function&lt;/code&gt; is extended with methods to annotate functions as computed properties, via the &lt;code&gt;property()&lt;/code&gt; method, and as observers, via the &lt;code&gt;observes()&lt;/code&gt; method. Use of these methods is now discouraged and not covered in recent versions of the Guides.</source>
          <target state="translated">&lt;code&gt;Function&lt;/code&gt; 通过方法进行扩展，以便通过 &lt;code&gt;property()&lt;/code&gt; 方法将函数注释为计算属性，并通过 &lt;code&gt;observes()&lt;/code&gt; 方法注释为观察者。现在不鼓励使用这些方法，并且在最新版本的《指南》中未涉及这些方法。</target>
        </trans-unit>
        <trans-unit id="d95e9376fe507d29f9bd625a63b42d9a19189cac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HashLocation&lt;/code&gt; implements the location API using the browser's hash. At present, it relies on a &lt;code&gt;hashchange&lt;/code&gt; event existing in the browser.</source>
          <target state="translated">&lt;code&gt;HashLocation&lt;/code&gt; 使用浏览器的哈希值实现位置API。目前，它依赖于浏览器中存在的 &lt;code&gt;hashchange&lt;/code&gt; 事件。</target>
        </trans-unit>
        <trans-unit id="0264f057ca05257096c07aaaaa2bfc9f7ec5fb67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JSONAPISerializer&lt;/code&gt; supports the &lt;a href=&quot;http://jsonapi.org/&quot;&gt;http://jsonapi.org/&lt;/a&gt; spec and is the serializer recommended by Ember Data.</source>
          <target state="translated">&lt;code&gt;JSONAPISerializer&lt;/code&gt; 支持&lt;a href=&quot;http://jsonapi.org/&quot;&gt;http://jsonapi.org/&lt;/a&gt;规范，并且是Ember Data建议的序列化程序。</target>
        </trans-unit>
        <trans-unit id="5e66b6f29b6c3076ed875537c6f3d4244778f763" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JSONSerializer&lt;/code&gt; is useful for simpler or legacy backends that may not support the &lt;a href=&quot;http://jsonapi.org/&quot;&gt;http://jsonapi.org/&lt;/a&gt; spec.</source>
          <target state="translated">&lt;code&gt;JSONSerializer&lt;/code&gt; 对于可能不支持&lt;a href=&quot;http://jsonapi.org/&quot;&gt;http://jsonapi.org/&lt;/a&gt;规范的简单或旧式后端很有用。</target>
        </trans-unit>
        <trans-unit id="e345698b4a8f363536b7af85b9c0fd2f831f334c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JSONSerializer&lt;/code&gt; will normalize the JSON payload to the JSON API format that the Ember Data store expects.</source>
          <target state="translated">&lt;code&gt;JSONSerializer&lt;/code&gt; 将JSON有效负载标准化为Ember Data存储期望的JSON API格式。</target>
        </trans-unit>
        <trans-unit id="fcfdc56caebc03aaed45f4a12bd9bda83f0f45bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Killing Innovation&lt;/code&gt; - a/b testing a cutting-edge feature is hard to do without disrupting the rest of the app and the teams working on it.</source>
          <target state="translated">&lt;code&gt;Killing Innovation&lt;/code&gt; -在不中断应用程序其余部分和开发团队的情况下，很难进行a / b测试尖端功能。</target>
        </trans-unit>
        <trans-unit id="868434d60e5bce5337e98f6fe29f1772f4802c64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LinkComponent&lt;/code&gt; is the internal component invoked with &lt;code&gt;&amp;lt;LinkTo&amp;gt;&lt;/code&gt; or &lt;code&gt;{{link-to}}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LinkComponent&lt;/code&gt; 是使用 &lt;code&gt;&amp;lt;LinkTo&amp;gt;&lt;/code&gt; 或 &lt;code&gt;{{link-to}}&lt;/code&gt; 调用的内部组件。</target>
        </trans-unit>
        <trans-unit id="a483fa0d758cfea36957295eb184b89a3af0d40a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ObjectProxy&lt;/code&gt; forwards all properties not defined by the proxy itself to a proxied &lt;code&gt;content&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;ObjectProxy&lt;/code&gt; 将代理本身未定义的所有属性转发到代理的 &lt;code&gt;content&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="e4d3b24c98b8934854b8fbcbfc5efc939eedfce9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Promise.all&lt;/code&gt; accepts an array of promises, and returns a new promise which is fulfilled with an array of fulfillment values for the passed promises, or rejected with the reason of the first passed promise to be rejected. It casts all elements of the passed iterable to promises as it runs this algorithm.</source>
          <target state="translated">&lt;code&gt;Promise.all&lt;/code&gt; 接受一组诺言，并返回一个新的诺言，该新诺言通过传递的诺言的一系列实现值来实现，或者由于第一个传递的诺言被拒绝的原因而被拒绝。运行此算法时，它将所有传递的Iterable元素都转换为Promise。</target>
        </trans-unit>
        <trans-unit id="55f69794f10a9c4c670282c59954dd68ba67a010" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Promise.race&lt;/code&gt; is deterministic in that only the state of the first settled promise matters. For example, even if other promises given to the &lt;code&gt;promises&lt;/code&gt; array argument are resolved, but the first settled promise has become rejected before the other promises became fulfilled, the returned promise will become rejected:</source>
          <target state="translated">&lt;code&gt;Promise.race&lt;/code&gt; 是确定性的，因为仅第一个已解决的Promise的状态很重要。例如，即使解析给 &lt;code&gt;promises&lt;/code&gt; 数组参数的其他promise ，但是在其他promise实现之前，第一个结算的promise被拒绝了，返回的promise也将被拒绝：</target>
        </trans-unit>
        <trans-unit id="01c04f9767b77d1c211b167b435c12f0b4800e5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Promise.race&lt;/code&gt; returns a new promise which is settled in the same way as the first passed promise to settle.</source>
          <target state="translated">&lt;code&gt;Promise.race&lt;/code&gt; 返回一个新的promise，该新promise的结算方式与第一个通过的promise的结算方式相同。</target>
        </trans-unit>
        <trans-unit id="2a85f3dc6bd567cbd89054b48c9efc6861af707e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Promise.reject&lt;/code&gt; returns a promise rejected with the passed &lt;code&gt;reason&lt;/code&gt;. It is shorthand for the following:</source>
          <target state="translated">&lt;code&gt;Promise.reject&lt;/code&gt; 返回因传递的 &lt;code&gt;reason&lt;/code&gt; 被拒绝的承诺。它是以下内容的简写：</target>
        </trans-unit>
        <trans-unit id="b6b7f7ef94fff80156a4e15a4e5a17263c5a092c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Promise.resolve&lt;/code&gt; returns a promise that will become resolved with the passed &lt;code&gt;value&lt;/code&gt;. It is shorthand for the following:</source>
          <target state="translated">&lt;code&gt;Promise.resolve&lt;/code&gt; 返回一个promise，该promise将通过传递的 &lt;code&gt;value&lt;/code&gt; 解决。它是以下内容的简写：</target>
        </trans-unit>
        <trans-unit id="9d07beb7bc151b660bc470868ba0a025ddfaa8d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RSVP.allSettled&lt;/code&gt; is similar to &lt;code&gt;RSVP.all&lt;/code&gt;, but instead of implementing a fail-fast method, it waits until all the promises have returned and shows you all the results. This is useful if you want to handle multiple promises' failure states together as a set.</source>
          <target state="translated">&lt;code&gt;RSVP.allSettled&lt;/code&gt; 与RSVP.all相似，但是它没有实现快速失败方法，而是等待直到所有的 &lt;code&gt;RSVP.all&lt;/code&gt; 返回并向您显示所有结果。如果您要一起处理多个promise的失败状态，这将很有用。</target>
        </trans-unit>
        <trans-unit id="4458786812a9c22bb74d6923553f2627669ce12c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RSVP.defer&lt;/code&gt; returns an object similar to jQuery's &lt;code&gt;$.Deferred&lt;/code&gt;. &lt;code&gt;RSVP.defer&lt;/code&gt; should be used when porting over code reliant on &lt;code&gt;$.Deferred&lt;/code&gt;'s interface. New code should use the &lt;code&gt;RSVP.Promise&lt;/code&gt; constructor instead.</source>
          <target state="translated">&lt;code&gt;RSVP.defer&lt;/code&gt; 返回类似于jQuery的 &lt;code&gt;$.Deferred&lt;/code&gt; 的对象。 &lt;code&gt;RSVP.defer&lt;/code&gt; 应在移植上的代码依赖时，可以使用 &lt;code&gt;$.Deferred&lt;/code&gt; 的接口。新代码应改用 &lt;code&gt;RSVP.Promise&lt;/code&gt; 构造函数。</target>
        </trans-unit>
        <trans-unit id="84d4c1db658795cb94a1414fa7edd5dc76c8416a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RSVP.denodeify&lt;/code&gt; takes a 'node-style' function and returns a function that will return an &lt;code&gt;RSVP.Promise&lt;/code&gt;. You can use &lt;code&gt;denodeify&lt;/code&gt; in Node.js or the browser when you'd prefer to use promises over using callbacks. For example, &lt;code&gt;denodeify&lt;/code&gt; transforms the following:</source>
          <target state="translated">&lt;code&gt;RSVP.denodeify&lt;/code&gt; 采用&amp;ldquo;节点样式&amp;rdquo;函数并返回一个函数，该函数将返回 &lt;code&gt;RSVP.Promise&lt;/code&gt; 。当您希望使用 &lt;code&gt;denodeify&lt;/code&gt; 而不是使用回调时，可以在Node.js或浏览器中使用denodeify。例如， &lt;code&gt;denodeify&lt;/code&gt; 转换以下内容：</target>
        </trans-unit>
        <trans-unit id="0867a5407a040e0d66f4e7f0e738109c36b3630e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RSVP.filter&lt;/code&gt; is similar to JavaScript's native &lt;code&gt;filter&lt;/code&gt; method, except that it waits for all promises to become fulfilled before running the &lt;code&gt;filterFn&lt;/code&gt; on each item in given to &lt;code&gt;promises&lt;/code&gt;. &lt;code&gt;RSVP.filter&lt;/code&gt; returns a promise that will become fulfilled with the result of running &lt;code&gt;filterFn&lt;/code&gt; on the values the promises become fulfilled with.</source>
          <target state="translated">&lt;code&gt;RSVP.filter&lt;/code&gt; 类似于JavaScript的天然 &lt;code&gt;filter&lt;/code&gt; 的方法，但它等待所有的承诺，在运行之前成为满足 &lt;code&gt;filterFn&lt;/code&gt; 在给定的，在每个项目 &lt;code&gt;promises&lt;/code&gt; 。 &lt;code&gt;RSVP.filter&lt;/code&gt; 返回一个承诺，该承诺将通过在实现承诺的值上运行 &lt;code&gt;filterFn&lt;/code&gt; 的结果来实现。</target>
        </trans-unit>
        <trans-unit id="7a9d49b03402f60fc136ff0f37bc0d6f97d35807" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RSVP.filter&lt;/code&gt; will also wait for any promises returned from &lt;code&gt;filterFn&lt;/code&gt;. For instance, you may want to fetch a list of users then return a subset of those users based on some asynchronous operation:</source>
          <target state="translated">&lt;code&gt;RSVP.filter&lt;/code&gt; 也将等待 &lt;code&gt;filterFn&lt;/code&gt; 返回的任何承诺。例如，您可能希望获取用户列表，然后根据一些异步操作返回这些用户的子集：</target>
        </trans-unit>
        <trans-unit id="af547e1110e2aded790396cd03b33ce06d1f637d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RSVP.hash&lt;/code&gt; is similar to &lt;code&gt;RSVP.all&lt;/code&gt;, but takes an object instead of an array for its &lt;code&gt;promises&lt;/code&gt; argument.</source>
          <target state="translated">&lt;code&gt;RSVP.hash&lt;/code&gt; 类似于 &lt;code&gt;RSVP.all&lt;/code&gt; ，但需要一个对象，而不是用于其的阵列的 &lt;code&gt;promises&lt;/code&gt; 的说法。</target>
        </trans-unit>
        <trans-unit id="78f37561313fc177f539d348cdfc515cd3ae4eb5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RSVP.hashSettled&lt;/code&gt; is similar to &lt;code&gt;RSVP.allSettled&lt;/code&gt;, but takes an object instead of an array for its &lt;code&gt;promises&lt;/code&gt; argument.</source>
          <target state="translated">&lt;code&gt;RSVP.hashSettled&lt;/code&gt; 类似于 &lt;code&gt;RSVP.allSettled&lt;/code&gt; ，但需要一个对象，而不是用于其的阵列的 &lt;code&gt;promises&lt;/code&gt; 的说法。</target>
        </trans-unit>
        <trans-unit id="3d05d302767d21a4dc2003494eff34568888aabf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RSVP.map&lt;/code&gt; is similar to JavaScript's native &lt;code&gt;map&lt;/code&gt; method, except that it waits for all promises to become fulfilled before running the &lt;code&gt;mapFn&lt;/code&gt; on each item in given to &lt;code&gt;promises&lt;/code&gt;. &lt;code&gt;RSVP.map&lt;/code&gt; returns a promise that will become fulfilled with the result of running &lt;code&gt;mapFn&lt;/code&gt; on the values the promises become fulfilled with.</source>
          <target state="translated">&lt;code&gt;RSVP.map&lt;/code&gt; 类似于JavaScript的本地 &lt;code&gt;map&lt;/code&gt; 的方法，但它等待所有的承诺，在运行之前成为满足 &lt;code&gt;mapFn&lt;/code&gt; 在给定的，在每个项目 &lt;code&gt;promises&lt;/code&gt; 。 &lt;code&gt;RSVP.map&lt;/code&gt; 返回一个承诺，该承诺将通过在实现承诺的值上运行 &lt;code&gt;mapFn&lt;/code&gt; 的结果来实现。</target>
        </trans-unit>
        <trans-unit id="b4d97ecff2222269a39af3dbf91def7c977d4285" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RSVP.map&lt;/code&gt; will also wait if a promise is returned from &lt;code&gt;mapFn&lt;/code&gt;. For example, say you want to get all comments from a set of blog posts, but you need the blog posts first because they contain a url to those comments.</source>
          <target state="translated">&lt;code&gt;RSVP.map&lt;/code&gt; 如果从 &lt;code&gt;mapFn&lt;/code&gt; 返回了承诺，RSVP.map也将等待。例如，假设您要从一组博客文章中获取所有评论，但首先需要这些博客文章，因为它们包含这些评论的URL。</target>
        </trans-unit>
        <trans-unit id="87db6ab1b50f8689071afc9bf045010b400cf879" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RSVP.rethrow&lt;/code&gt; will rethrow an error on the next turn of the JavaScript event loop in order to aid debugging.</source>
          <target state="translated">&lt;code&gt;RSVP.rethrow&lt;/code&gt; 将在下一轮JavaScript事件循环中重新抛出错误，以帮助调试。</target>
        </trans-unit>
        <trans-unit id="6f1fcbef14ead097ff65f6cfc9037043cbaf15c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Route#transitionTo&lt;/code&gt; and &lt;code&gt;Controller#transitionToRoute&lt;/code&gt; accept a final argument, which is an object with the key &lt;code&gt;queryParams&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Route#transitionTo&lt;/code&gt; 和 &lt;code&gt;Controller#transitionToRoute&lt;/code&gt; 接受最终参数，该参数是带有 &lt;code&gt;queryParams&lt;/code&gt; 键的对象。</target>
        </trans-unit>
        <trans-unit id="e8acc407b44adc0d30a669f8453cb7ce79888927" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Serializer&lt;/code&gt; is an abstract base class that you should override in your application to customize it for your backend. The minimum set of methods that you should implement is:</source>
          <target state="translated">&lt;code&gt;Serializer&lt;/code&gt; 是一个抽象基类，您应该在应用程序中对其进行重写以针对后端对其进行自定义。您应该实现的最小方法集是：</target>
        </trans-unit>
        <trans-unit id="fa9c56acb2c4ca45a6fc7b09781d1f0bcc987dda" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Serializers&lt;/code&gt; convert data between the server's API format and the format EmberData understands.</source>
          <target state="translated">&lt;code&gt;Serializers&lt;/code&gt; 程序在服务器的API格式和EmberData可以理解的格式之间转换数据。</target>
        </trans-unit>
        <trans-unit id="c6dc867f7d0ae4fa26e1436e168b780e53e63f81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Side effects&lt;/code&gt; - if you change something, it may be unclear how it could affect the rest of platform.</source>
          <target state="translated">&lt;code&gt;Side effects&lt;/code&gt; -如果您更改某些内容，可能尚不清楚它如何影响平台的其余部分。</target>
        </trans-unit>
        <trans-unit id="e5d204d946f4f5ee5bab8a21fbe474b4b0307534" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Slow Onboarding&lt;/code&gt; - new people coming into the team are overwhelmed.</source>
          <target state="translated">&lt;code&gt;Slow Onboarding&lt;/code&gt; -加入团队的新人不知所措。</target>
        </trans-unit>
        <trans-unit id="5782be01f09f5b958a177bed369d6bfaa5dca1b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;String&lt;/code&gt; is extended to add convenience methods, such as &lt;code&gt;camelize()&lt;/code&gt; and &lt;code&gt;w()&lt;/code&gt;. You can find a list of these methods with the &lt;a href=&quot;http://emberjs.com/api/classes/Ember.String.html&quot;&gt;Ember.String documentation&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 扩展了String以添加方便的方法，例如 &lt;code&gt;camelize()&lt;/code&gt; 和 &lt;code&gt;w()&lt;/code&gt; 。您可以通过&lt;a href=&quot;http://emberjs.com/api/classes/Ember.String.html&quot;&gt;Ember.String文档&lt;/a&gt;找到这些方法的列表。</target>
        </trans-unit>
        <trans-unit id="6a3f2419057013fef0e65a1ccf3a6f37741da3bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;String&lt;/code&gt; is extended to add convenience methods, such as &lt;code&gt;camelize()&lt;/code&gt; and &lt;code&gt;w()&lt;/code&gt;. You can find a list of these methods with the &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/String&quot;&gt;Ember.String documentation&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 扩展了String以添加方便的方法，例如 &lt;code&gt;camelize()&lt;/code&gt; 和 &lt;code&gt;w()&lt;/code&gt; 。您可以通过&lt;a href=&quot;https://api.emberjs.com/ember/release/classes/String&quot;&gt;Ember.String文档&lt;/a&gt;找到这些方法的列表。</target>
        </trans-unit>
        <trans-unit id="d1037e9be45aa05da574c11f4410513c63a394a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TextSupport&lt;/code&gt; is a shared mixin used by both &lt;code&gt;Ember.TextField&lt;/code&gt; and &lt;code&gt;Ember.TextArea&lt;/code&gt;. &lt;code&gt;TextSupport&lt;/code&gt; adds a number of methods that allow you to specify a controller action to invoke when a certain event is fired on your text field or textarea. The specified controller action would get the current value of the field passed in as the only argument unless the value of the field is empty. In that case, the instance of the field itself is passed in as the only argument.</source>
          <target state="translated">&lt;code&gt;TextSupport&lt;/code&gt; 是 &lt;code&gt;Ember.TextField&lt;/code&gt; 和 &lt;code&gt;Ember.TextArea&lt;/code&gt; 都使用的共享混合。 &lt;code&gt;TextSupport&lt;/code&gt; 添加了许多方法，这些方法允许您指定在文本字段或textarea上触发特定事件时要调用的控制器操作。指定的控制器操作将获取作为唯一参数传入的字段的当前值，除非该字段的值为空。在这种情况下，字段实例本身将作为唯一参数传入。</target>
        </trans-unit>
        <trans-unit id="41f21713094ec778ac0cf266b52e32dc93359921" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[]&lt;/code&gt; vs &lt;code&gt;@each&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[]&lt;/code&gt; vs &lt;code&gt;@each&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="49f99ddd4783b441d105c4b42ddc43a4f02f75a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;about&lt;/code&gt; when you visit &lt;code&gt;/about&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;about&lt;/code&gt; 您何时访问 &lt;code&gt;/about&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="43103c655b5f5e84b93c305683165d53c402c6b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;adapter.createRecord&lt;/code&gt; takes a request to create a resource of a given &lt;code&gt;type&lt;/code&gt; and should return a &lt;code&gt;Promise&lt;/code&gt; which fulfills with data for the newly created resource.</source>
          <target state="translated">&lt;code&gt;adapter.createRecord&lt;/code&gt; 接受创建给定 &lt;code&gt;type&lt;/code&gt; 资源的请求，并应返回 &lt;code&gt;Promise&lt;/code&gt; ，该Promise包含新创建资源的数据。</target>
        </trans-unit>
        <trans-unit id="76a99f7cac5867027d502481ebe95bcfb9a155d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;adapter.deleteRecord&lt;/code&gt; takes a request to delete a resource of a given &lt;code&gt;type&lt;/code&gt; and should return a &lt;code&gt;Promise&lt;/code&gt; which resolves when that deletion is complete.</source>
          <target state="translated">&lt;code&gt;adapter.deleteRecord&lt;/code&gt; 接收删除指定 &lt;code&gt;type&lt;/code&gt; 资源的请求，并应返回一个 &lt;code&gt;Promise&lt;/code&gt; ，该删除完成时将进行解析。</target>
        </trans-unit>
        <trans-unit id="c9bea98a3e48ec2cb16e120b71df4ba417690d9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;adapter.findAll&lt;/code&gt; is called whenever &lt;code&gt;store.findAll&lt;/code&gt; is asked to reload or backgroundReload. The records in the response are merged with the contents of the store. Existing records for the &lt;code&gt;type&lt;/code&gt; will not be removed.</source>
          <target state="translated">&lt;code&gt;adapter.findAll&lt;/code&gt; 每当被称为 &lt;code&gt;store.findAll&lt;/code&gt; 被要求重载或backgroundReload。响应中的记录与商店的内容合并。该 &lt;code&gt;type&lt;/code&gt; 现有记录将不会被删除。</target>
        </trans-unit>
        <trans-unit id="57c927396f8718cc76a935a6693da39860230b86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;adapter.findAll&lt;/code&gt; takes a request for resources of a given &lt;code&gt;type&lt;/code&gt; and should return a &lt;code&gt;Promise&lt;/code&gt; which fulfills with a collection of resource data matching that &lt;code&gt;type&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;adapter.findAll&lt;/code&gt; 接收对给定 &lt;code&gt;type&lt;/code&gt; 资源的请求，并应返回 &lt;code&gt;Promise&lt;/code&gt; ，该Promise将满足与该 &lt;code&gt;type&lt;/code&gt; 匹配的资源数据的集合。</target>
        </trans-unit>
        <trans-unit id="7c4e931f3e74c6870fd79c94212f6e2330a7f09d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;adapter.findBelongsTo&lt;/code&gt; takes a request to fetch a related resource located at a &lt;code&gt;relatedLink&lt;/code&gt; and should return a &lt;code&gt;Promise&lt;/code&gt; which fulfills with data for a single resource.</source>
          <target state="translated">&lt;code&gt;adapter.findBelongsTo&lt;/code&gt; 接收到一个请求，以获取位于 &lt;code&gt;relatedLink&lt;/code&gt; 上的相关资源，并应返回一个 &lt;code&gt;Promise&lt;/code&gt; ，该数据将满足单个资源的数据。</target>
        </trans-unit>
        <trans-unit id="5876c754a50803374bbb9b1b66b74f89fbcd3eba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;adapter.findHasMany&lt;/code&gt; takes a request to fetch a related resource collection located at a &lt;code&gt;relatedLink&lt;/code&gt; and should return a &lt;code&gt;Promise&lt;/code&gt; which fulfills with data for that collection.</source>
          <target state="translated">&lt;code&gt;adapter.findHasMany&lt;/code&gt; 接收到一个请求，以获取位于 &lt;code&gt;relatedLink&lt;/code&gt; 上的相关资源集合，并应返回一个 &lt;code&gt;Promise&lt;/code&gt; ，该集合中包含该集合的数据。</target>
        </trans-unit>
        <trans-unit id="c58299872888ef572db179bf87a7dd0389430479" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;adapter.findMany&lt;/code&gt; takes a request to fetch a collection of resources and should return a &lt;code&gt;Promise&lt;/code&gt; which fulfills with data for that collection.</source>
          <target state="translated">&lt;code&gt;adapter.findMany&lt;/code&gt; 接收到一个请求以获取资源集合，并应返回一个 &lt;code&gt;Promise&lt;/code&gt; ，该承诺用该集合的数据来满足。</target>
        </trans-unit>
        <trans-unit id="ad98bef88c1045fc7003a0271dab8f3263038761" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;adapter.findRecord&lt;/code&gt; is called whenever the &lt;code&gt;store&lt;/code&gt; needs to load, reload, or backgroundReload the resource data for a given &lt;code&gt;type&lt;/code&gt; and &lt;code&gt;id&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;adapter.findRecord&lt;/code&gt; 每当 &lt;code&gt;store&lt;/code&gt; 需要加载，重新加载或后台重新加载给定 &lt;code&gt;type&lt;/code&gt; 和 &lt;code&gt;id&lt;/code&gt; 的资源数据时，都会调用adapter.findRecord。</target>
        </trans-unit>
        <trans-unit id="f4a8c2b8454139e1afe292a089dc6dd82482be9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;adapter.findRecord&lt;/code&gt; takes a request for a resource of a given &lt;code&gt;type&lt;/code&gt; and &lt;code&gt;id&lt;/code&gt; combination and should return a &lt;code&gt;Promise&lt;/code&gt; which fulfills with data for a single resource matching that &lt;code&gt;type&lt;/code&gt; and &lt;code&gt;id&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;adapter.findRecord&lt;/code&gt; 接受对给定 &lt;code&gt;type&lt;/code&gt; 和 &lt;code&gt;id&lt;/code&gt; 组合的资源的请求，并应返回一个 &lt;code&gt;Promise&lt;/code&gt; ，该数据将满足与该 &lt;code&gt;type&lt;/code&gt; 和 &lt;code&gt;id&lt;/code&gt; 匹配的单个资源的数据。</target>
        </trans-unit>
        <trans-unit id="9045eed553277a3920a08845dd3f61e9bbb77fd3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;adapter.query&lt;/code&gt; is called whenever &lt;code&gt;store.query&lt;/code&gt; is called or a previous query result is asked to reload.</source>
          <target state="translated">&lt;code&gt;adapter.query&lt;/code&gt; 调用 &lt;code&gt;store.query&lt;/code&gt; 或要求重新加载先前的查询结果时，都会调用adapter.query。</target>
        </trans-unit>
        <trans-unit id="fccef3abc41d5e1e0fb93a6c63953f4e2fd0c962" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;adapter.query&lt;/code&gt; takes a request for resources of a given &lt;code&gt;type&lt;/code&gt; and should return a &lt;code&gt;Promise&lt;/code&gt; which fulfills with a collection of resource data matching that &lt;code&gt;type&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;adapter.query&lt;/code&gt; 接受对给定 &lt;code&gt;type&lt;/code&gt; 资源的请求，并应返回 &lt;code&gt;Promise&lt;/code&gt; ，该Promise将满足与该 &lt;code&gt;type&lt;/code&gt; 匹配的资源数据的集合。</target>
        </trans-unit>
        <trans-unit id="ba2a3f75f88255271d6dd2b811e76fa35b6a523a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;adapter.queryRecord&lt;/code&gt; takes a request for resource of a given &lt;code&gt;type&lt;/code&gt; and should return a &lt;code&gt;Promise&lt;/code&gt; which fulfills with data for a single resource matching that &lt;code&gt;type&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;adapter.queryRecord&lt;/code&gt; 接收对给定 &lt;code&gt;type&lt;/code&gt; 资源的请求，并应返回 &lt;code&gt;Promise&lt;/code&gt; ，该Promise将满足与该 &lt;code&gt;type&lt;/code&gt; 匹配的单个资源的数据。</target>
        </trans-unit>
        <trans-unit id="08e3c13bc5bde648bb0902b4ee8f4769557b252b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;adapter.updateRecord&lt;/code&gt; takes a request to update a resource of a given &lt;code&gt;type&lt;/code&gt; and should return a &lt;code&gt;Promise&lt;/code&gt; which fulfills with the updated data for the resource.</source>
          <target state="translated">&lt;code&gt;adapter.updateRecord&lt;/code&gt; 接受更新给定 &lt;code&gt;type&lt;/code&gt; 资源的请求，并应返回一个 &lt;code&gt;Promise&lt;/code&gt; ，该资源将满足该资源的更新数据。</target>
        </trans-unit>
        <trans-unit id="0b8991309d43a5f395c8519290714c38c1d32221" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;adapterFor&lt;/code&gt; first attempts to find an adapter with an exact match on &lt;code&gt;name&lt;/code&gt;, then falls back to checking for the presence of an adapter named &lt;code&gt;application&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;adapterFor&lt;/code&gt; 首先尝试查找 &lt;code&gt;name&lt;/code&gt; 完全匹配的适配器，然后回退以检查是否存在名为 &lt;code&gt;application&lt;/code&gt; 的适配器。</target>
        </trans-unit>
        <trans-unit id="d430faed173effd4f96767ad68f6bf62c71d9515" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;adapterFor&lt;/code&gt; is used by the store to find an adapter with a name matching that of the primary resource &lt;code&gt;type&lt;/code&gt; for the request, which then falls back to the &lt;code&gt;application&lt;/code&gt; adapter.</source>
          <target state="translated">&lt;code&gt;adapterFor&lt;/code&gt; 使用adapterFor来查找名称与请求的主要资源 &lt;code&gt;type&lt;/code&gt; 相匹配的适配器，然后该适配器将回退到 &lt;code&gt;application&lt;/code&gt; 适配器。</target>
        </trans-unit>
        <trans-unit id="416b14e5ba50ee6e32c22006d1ed8b655be9902c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;args&lt;/code&gt; - the arguments that the component receives when invoked. These are passed to and assigned in the constructor, so they're available then for any setup code that is needed.</source>
          <target state="translated">&lt;code&gt;args&lt;/code&gt; -组件在调用时接收的参数。它们被传递给构造函数并在构造函数中分配，因此它们可用于所需的任何设置代码。</target>
        </trans-unit>
        <trans-unit id="536c0e308039a0b5b1124887051cac43a2df522c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;args&lt;/code&gt; and its values are automatically tracked, so there is no need to annotate them, the &lt;code&gt;aspectRatio&lt;/code&gt; getter will invalidate properly when they change and the component will rerender (if &lt;code&gt;aspectRatio&lt;/code&gt; is used in the template).</source>
          <target state="translated">&lt;code&gt;args&lt;/code&gt; 及其值会自动跟踪，因此不需要对其进行注释，当更改它们时， &lt;code&gt;aspectRatio&lt;/code&gt; getter将正确无效，并且组件将 &lt;code&gt;aspectRatio&lt;/code&gt; （如果在模板中使用了aspectRatio）。</target>
        </trans-unit>
        <trans-unit id="ec780b8dd906ac628962f19e5c962a4d29cbaca8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;args&lt;/code&gt; can be accessed at any point in the component lifecycle, including &lt;code&gt;constructor&lt;/code&gt; and &lt;code&gt;willDestroy&lt;/code&gt;. They are also automatically marked as tracked properties, and they can be depended on as computed property dependencies:</source>
          <target state="translated">&lt;code&gt;args&lt;/code&gt; 可以在组件生命周期的任何时间访问args，包括 &lt;code&gt;constructor&lt;/code&gt; 和 &lt;code&gt;willDestroy&lt;/code&gt; 。它们也被自动标记为跟踪属性，并且可以依赖它们作为计算属性依赖项：</target>
        </trans-unit>
        <trans-unit id="8295128f7271c4c8383f231ca97c42bcec013fe5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aria&lt;/code&gt; Attributes</source>
          <target state="translated">&lt;code&gt;aria&lt;/code&gt; 属性</target>
        </trans-unit>
        <trans-unit id="bc520f79495e87db833caa7877f9b72bf00efe87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;array&lt;/code&gt; is the array itself.</source>
          <target state="translated">&lt;code&gt;array&lt;/code&gt; 是数组本身。</target>
        </trans-unit>
        <trans-unit id="987bf3c75ed0c458b206fde68077f68b3cc012a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;array&lt;/code&gt; is the array object itself.</source>
          <target state="translated">&lt;code&gt;array&lt;/code&gt; 是数组对象本身。</target>
        </trans-unit>
        <trans-unit id="dde5f126b5155e667ee052059a01bef7207a4f3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;array&lt;/code&gt; is the dependant array itself.</source>
          <target state="translated">&lt;code&gt;array&lt;/code&gt; 是从属数组本身。</target>
        </trans-unit>
        <trans-unit id="c7c182ade2b210437da8c13643c536d268b266d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;arrayDidChange(observedObj, start, removeCount, addCount)&lt;/code&gt; - This method will be called just after the array is modified.</source>
          <target state="translated">&lt;code&gt;arrayDidChange(observedObj, start, removeCount, addCount)&lt;/code&gt; -修改数组后立即调用此方法。</target>
        </trans-unit>
        <trans-unit id="775fc777f7d1c0b07371e450f3c6bcb18756afa2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;arrayWillChange(observedObj, start, removeCount, addCount)&lt;/code&gt; - This method will be called just before the array is modified.</source>
          <target state="translated">&lt;code&gt;arrayWillChange(observedObj, start, removeCount, addCount)&lt;/code&gt; -在修改数组之前将调用此方法。</target>
        </trans-unit>
        <trans-unit id="91cef2babe644a19ee638c19c2334aba6f1a7bac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;articles.error&lt;/code&gt; or &lt;code&gt;articles-error&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;articles.error&lt;/code&gt; 或 &lt;code&gt;articles-error&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2e4d828fcb9849f132eecc949fe046cf231ca8ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;async&lt;/code&gt;: A boolean value used to explicitly declare this to be an async relationship.</source>
          <target state="translated">&lt;code&gt;async&lt;/code&gt; ：一个布尔值，用于显式声明为异步关系。</target>
        </trans-unit>
        <trans-unit id="2b8c555b738df75def7323aa270a12c829b66b69" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;async&lt;/code&gt;: A boolean value used to explicitly declare this to be an async relationship. The default is true.</source>
          <target state="translated">&lt;code&gt;async&lt;/code&gt; ：布尔值，用于显式声明为异步关系。默认值为true。</target>
        </trans-unit>
        <trans-unit id="6073d813ff391304b5cd5861799388f03db41d6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attr&lt;/code&gt; can also take a hash of options as a second parameter. At the moment the only option available is &lt;code&gt;defaultValue&lt;/code&gt;, which can use a value or a function to set the default value of the attribute if one is not supplied.</source>
          <target state="translated">&lt;code&gt;attr&lt;/code&gt; 还可以将选项的哈希作为第二个参数。目前，唯一可用的选项是 &lt;code&gt;defaultValue&lt;/code&gt; ，如果未提供，则可以使用值或函数来设置属性的默认值。</target>
        </trans-unit>
        <trans-unit id="10819077e568daa74e6a8e76ac0266fc4dde76b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attr&lt;/code&gt; defines an attribute on a &lt;a href=&quot;https://api.emberjs.com/ember-data/release/classes/Model&quot;&gt;Model&lt;/a&gt;. By default, attributes are passed through as-is, however you can specify an optional type to have the value automatically transformed. Ember Data ships with four basic transform types: &lt;code&gt;string&lt;/code&gt;, &lt;code&gt;number&lt;/code&gt;, &lt;code&gt;boolean&lt;/code&gt; and &lt;code&gt;date&lt;/code&gt;. You can define your own transforms by subclassing &lt;a href=&quot;https://api.emberjs.com/ember-data/release/classes/Transform&quot;&gt;Transform&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;attr&lt;/code&gt; 在&lt;a href=&quot;https://api.emberjs.com/ember-data/release/classes/Model&quot;&gt;Model&lt;/a&gt;上定义一个属性。默认情况下，属性按原样传递，但是您可以指定可选类型以自动转换值。Ember Data附带四种基本转换类型： &lt;code&gt;string&lt;/code&gt; ， &lt;code&gt;number&lt;/code&gt; ， &lt;code&gt;boolean&lt;/code&gt; 和 &lt;code&gt;date&lt;/code&gt; 。您可以通过子类化&lt;a href=&quot;https://api.emberjs.com/ember-data/release/classes/Transform&quot;&gt;Transform&lt;/a&gt;定义自己的变换。</target>
        </trans-unit>
        <trans-unit id="e3bb6d11ece836805d402a1b4649852dca37bd1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attr&lt;/code&gt; takes an optional hash as a second parameter, currently supported options are:</source>
          <target state="translated">&lt;code&gt;attr&lt;/code&gt; 将可选的哈希作为第二个参数，当前支持的选项是：</target>
        </trans-unit>
        <trans-unit id="622e59c2c2d2c0c6909f6b0be793e6bc7d9aa055" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attribute&lt;/code&gt; The name of the property associated with this error message</source>
          <target state="translated">&lt;code&gt;attribute&lt;/code&gt; 与此错误消息关联的属性的名称</target>
        </trans-unit>
        <trans-unit id="83b2f8e522e2b320751f1863793a7cbdd436a11b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attributeBindings&lt;/code&gt; can refer to computed properties:</source>
          <target state="translated">&lt;code&gt;attributeBindings&lt;/code&gt; 可以引用计算的属性：</target>
        </trans-unit>
        <trans-unit id="4648d29d716f9fc29f38410fee2f25dc66816ee9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attributeBindings&lt;/code&gt; is a concatenated property. See &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/EmberObject&quot;&gt;EmberObject&lt;/a&gt; documentation for more information about concatenated properties.</source>
          <target state="translated">&lt;code&gt;attributeBindings&lt;/code&gt; 是一个串联的属性。有关串联属性的更多信息，请参见&lt;a href=&quot;https://api.emberjs.com/ember/release/classes/EmberObject&quot;&gt;EmberObject&lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="41583f065d4efd05950283cf3afba61de6039210" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attributes&lt;/code&gt; - object which holds data for record attributes - &lt;code&gt;DS.attr&lt;/code&gt;'s declared in model</source>
          <target state="translated">&lt;code&gt;attributes&lt;/code&gt; -保留记录属性数据的对象- 模型中声明的 &lt;code&gt;DS.attr&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ba3f1548a44c673a15fbc5e2f71fe57229467ed3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attributes&lt;/code&gt; - object which holds data for record attributes - &lt;code&gt;attr&lt;/code&gt;'s declared in model</source>
          <target state="translated">&lt;code&gt;attributes&lt;/code&gt; -保留记录数据的对象属性-在模型中声明的 &lt;code&gt;attr&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7b2aa87d9416ec5dd84713016cfc1a0ff435bca1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;auto&lt;/code&gt; - use the best option based on browser capabilities: &lt;code&gt;history&lt;/code&gt; if possible, then &lt;code&gt;hash&lt;/code&gt; if possible, otherwise &lt;code&gt;none&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;auto&lt;/code&gt; -使用基于浏览器的功能是最好的选择： &lt;code&gt;history&lt;/code&gt; 如果可能的话，那么 &lt;code&gt;hash&lt;/code&gt; 如果可能的话，否则 &lt;code&gt;none&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9fbdcd2352c4af77bfddc01c68706b3eea48be08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;before&lt;/code&gt; and &lt;code&gt;after&lt;/code&gt; are used to ensure that this initializer is ran prior or after the one identified by the value. This value can be a single string or an array of strings, referencing the &lt;code&gt;name&lt;/code&gt; of other initializers.</source>
          <target state="translated">&lt;code&gt;before&lt;/code&gt; 和 &lt;code&gt;after&lt;/code&gt; 用于确保此初始化程序在该值所标识的初始化程序之前或之后运行。该值可以是单个字符串或字符串数​​组，引用其他初始化程序的 &lt;code&gt;name&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2fe55f4e23fc1a001c66b8c9cb06f50be9f6a10a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;beforeModel()&lt;/code&gt; receives the current transition as an argument, which we can store and retry later. This allows us to return the user back to the original route. For example, we might redirect a user to the login page when they try to edit their profile, and immediately redirect them back to the edit page once they have successfully logged in. See &lt;a href=&quot;../preventing-and-retrying-transitions#toc_storing-and-retrying-a-transition&quot;&gt;Storing and Retrying a Transition&lt;/a&gt; for how to do that.</source>
          <target state="translated">&lt;code&gt;beforeModel()&lt;/code&gt; 会将当前转换作为参数接收，我们可以存储并稍后重试。这使我们可以将用户返回到原始路线。例如，当用户尝试编辑其个人资料时，我们可能会将其重定向到登录页面，并在用户成功登录后立即将其重定向到编辑页面。有关如何执行此操作，请参阅&amp;ldquo; &lt;a href=&quot;../preventing-and-retrying-transitions#toc_storing-and-retrying-a-transition&quot;&gt;存储并重试过渡&lt;/a&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="670a4478b612e3fab7bfb5be269069095ad12de0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;belongsTo&lt;/code&gt; is used to define One-To-One and One-To-Many relationships on a &lt;a href=&quot;https://api.emberjs.com/ember-data/release/classes/Model&quot;&gt;Model&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;belongsTo&lt;/code&gt; 被用来定义一到一和一到多的关系&lt;a href=&quot;https://api.emberjs.com/ember-data/release/classes/Model&quot;&gt;模型&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9e0c243968c8cca741a985fee7ef25e3a3f641b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;belongsTo&lt;/code&gt; takes an optional hash as a second parameter, currently supported options are:</source>
          <target state="translated">&lt;code&gt;belongsTo&lt;/code&gt; 将可选的哈希作为第二个参数，当前支持的选项是：</target>
        </trans-unit>
        <trans-unit id="db557ad68c531478fe860a871b796864222b1205" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bind&lt;/code&gt; takes two main arguments, the desired context and the function to invoke in that context. Any additional arguments will be supplied as arguments to the function that is passed in.</source>
          <target state="translated">&lt;code&gt;bind&lt;/code&gt; 有两个主要参数，所需的上下文和在该上下文中调用的函数。任何其他参数都将作为传入函数的参数提供。</target>
        </trans-unit>
        <trans-unit id="d71656cde6b39471b452b4f13f8393133a46e2fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;blog.index&lt;/code&gt; when you visit &lt;code&gt;/blog&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;blog.index&lt;/code&gt; 访问 &lt;code&gt;/blog&lt;/code&gt; 时的blog.index</target>
        </trans-unit>
        <trans-unit id="2a8fa4ebb9443ce331b11c5325737fbc01a18249" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;blog.post&lt;/code&gt; when you visit &lt;code&gt;/blog/some-post-id&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;blog.post&lt;/code&gt; 访问 &lt;code&gt;/blog/some-post-id&lt;/code&gt; 时的blog.post</target>
        </trans-unit>
        <trans-unit id="f71865baacb1698be8be15cff392c3f3bc6c4e80" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callback&lt;/code&gt; -- the function to be passed to &lt;code&gt;addEventListener&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; -传递给 &lt;code&gt;addEventListener&lt;/code&gt; 的函数</target>
        </trans-unit>
        <trans-unit id="8532f895f6367073225423e6b79ec10ad4e373df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;capabilities&lt;/code&gt; returns a capabilities configuration which can be used to modify the behavior of the manager. Manager capabilities &lt;em&gt;must&lt;/em&gt; be provided using the &lt;code&gt;capabilities&lt;/code&gt; function, as the underlying implementation can change over time.</source>
          <target state="translated">&lt;code&gt;capabilities&lt;/code&gt; 返回一个功能配置，该配置可用于修改管理器的行为。&lt;em&gt;必须&lt;/em&gt;使用 &lt;code&gt;capabilities&lt;/code&gt; 功能提供管理器功能，因为基础实现可能随时间而变化。</target>
        </trans-unit>
        <trans-unit id="1ce9fbf30ac0910dc90ce0406380e8657af99213" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;catch&lt;/code&gt; is simply sugar for &lt;code&gt;then(undefined, onRejection)&lt;/code&gt; which makes it the same as the catch block of a try/catch statement.</source>
          <target state="translated">&lt;code&gt;catch&lt;/code&gt; 是 &lt;code&gt;then(undefined, onRejection)&lt;/code&gt; 简单糖，它与try / catch语句的catch块相同。</target>
        </trans-unit>
        <trans-unit id="03f3f2b6f6a5f42fd1aa0a58e71b6120c3845baf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class&lt;/code&gt; - The registered or resolved class.</source>
          <target state="translated">&lt;code&gt;class&lt;/code&gt; -注册或解决的类。</target>
        </trans-unit>
        <trans-unit id="a6a6a5a1fe5a3c22244426952c2dbd60f13de4be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class&lt;/code&gt; attribute values can also be set by providing a &lt;code&gt;classNameBindings&lt;/code&gt; property set to an array of properties names for the component. The return value of these properties will be added as part of the value for the components's &lt;code&gt;class&lt;/code&gt; attribute. These properties can be computed properties:</source>
          <target state="translated">&lt;code&gt;class&lt;/code&gt; 还可以通过将 &lt;code&gt;classNameBindings&lt;/code&gt; 属性设置为组件的属性名称数组来设置类属性值。这些属性的返回值将被添加为组件的 &lt;code&gt;class&lt;/code&gt; 属性的值的一部分。这些属性可以是计算属性：</target>
        </trans-unit>
        <trans-unit id="50b0dcb7cd22215f6a8f817cd262ca483a98137b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;computeArgs&lt;/code&gt;: An optional function that produces the arguments to the helper. The function receives the parent context as an argument, and must return an object with a &lt;code&gt;positional&lt;/code&gt; property that is an array and/or a &lt;code&gt;named&lt;/code&gt; property that is an object.</source>
          <target state="translated">&lt;code&gt;computeArgs&lt;/code&gt; ：一个可选函数，可生成帮助程序的参数。该函数将父上下文作为参数接收，并且必须返回一个对象，该对象的 &lt;code&gt;positional&lt;/code&gt; 属性是数组，并且/或者 &lt;code&gt;named&lt;/code&gt; 属性是对象。</target>
        </trans-unit>
        <trans-unit id="dcec76486c9d2c618e8d5ed7e6f32b388790eb2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;constructor&lt;/code&gt; in extends</source>
          <target state="translated">&lt;code&gt;constructor&lt;/code&gt; 扩展中的构造函数</target>
        </trans-unit>
        <trans-unit id="3e02dc7756889c99423a3f0ed5971bae01cc73be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;constructor&lt;/code&gt; instead of &lt;code&gt;init&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;constructor&lt;/code&gt; 而不是 &lt;code&gt;init&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="698962ad28646f70053679ebac5426ecc098622b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;context&lt;/code&gt;: The parent context of the helper. When the parent is torn down and removed, the helper will be as well.</source>
          <target state="translated">&lt;code&gt;context&lt;/code&gt; ：助手的父上下文。当父母被拆下并移走时，帮手也将得到帮助。</target>
        </trans-unit>
        <trans-unit id="ad9e7a5d3ef21ddae3a87ccb7f34ec1d4235290d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;create&lt;/code&gt; - A function that will create an instance of the class with any dependencies injected.</source>
          <target state="translated">&lt;code&gt;create&lt;/code&gt; -一个函数，它将创建一个注入了任何依赖项的类的实例。</target>
        </trans-unit>
        <trans-unit id="bc700b35c7e4b027cba4d7456934bd40dc555792" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;create&lt;/code&gt; will call the &lt;code&gt;init&lt;/code&gt; function if defined during &lt;code&gt;Ember.AnyObject.extend&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;create&lt;/code&gt; 如果在 &lt;code&gt;Ember.AnyObject.extend&lt;/code&gt; 中定义，则create将调用 &lt;code&gt;init&lt;/code&gt; 函数。</target>
        </trans-unit>
        <trans-unit id="4ede76863c71478f2b42e796f9be7330592a119c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;createHelper&lt;/code&gt; is a required hook on the HelperManager interface. The hook is passed the definition of the helper that is currently being created, and is expected to return a &lt;em&gt;state bucket&lt;/em&gt;. This state bucket is what represents the current state of the helper, and will be passed to the other lifecycle hooks at appropriate times. It is not necessarily related to the definition of the helper itself - for instance, you could return an object &lt;em&gt;containing&lt;/em&gt; an instance of the helper:</source>
          <target state="translated">&lt;code&gt;createHelper&lt;/code&gt; 是HelperManager界面上的必需挂钩。该挂钩传递了当前正在创建的帮助程序的定义，并且预期将返回&lt;em&gt;状态bucket&lt;/em&gt;。此状态存储区代表助手的当前状态，并将在适当的时候传递给其他生命周期挂钩。它不一定与帮助程序本身的定义有关-例如，您可以返回一个&lt;em&gt;包含&lt;/em&gt;该帮助程序实例的对象：</target>
        </trans-unit>
        <trans-unit id="4894addcd1e30601ae8984e8cb5245921589e464" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;created&lt;/code&gt; The record has been created by the client and not yet saved to the adapter.</source>
          <target state="translated">&lt;code&gt;created&lt;/code&gt; 的记录已被客户端创建，尚未保存到适配器。</target>
        </trans-unit>
        <trans-unit id="707d62fbd68dc1dbd39e65a444cf7b16273c9d2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;data&lt;/code&gt; property can also hold an array (of records):</source>
          <target state="translated">&lt;code&gt;data&lt;/code&gt; 属性还可以保存（记录的）数组：</target>
        </trans-unit>
        <trans-unit id="2e6c754135ad7efc124afcdd21d9cf74d32c4b1b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;defaultValue&lt;/code&gt;: Pass a string or a function to be called to set the attribute</source>
          <target state="translated">&lt;code&gt;defaultValue&lt;/code&gt; ：传递要设置属性的字符串或函数</target>
        </trans-unit>
        <trans-unit id="d2d63b0d4f83f95c096112d3ce68b4ebea28c81c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;defaultValue&lt;/code&gt;: Pass a string or a function to be called to set the attribute to a default value if and only if the key is absent from the payload response.</source>
          <target state="translated">&lt;code&gt;defaultValue&lt;/code&gt; ：仅当有效负载响应中没有键时，传递字符串或要调用的函数以将属性设置为默认值。</target>
        </trans-unit>
        <trans-unit id="4dd6fa7d59cae77b74bdf06ab2523c3837b1d281" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;defer&lt;/code&gt; returns an object similar to jQuery's &lt;code&gt;$.Deferred&lt;/code&gt;. &lt;code&gt;defer&lt;/code&gt; should be used when porting over code reliant on &lt;code&gt;$.Deferred&lt;/code&gt;'s interface. New code should use the &lt;code&gt;Promise&lt;/code&gt; constructor instead.</source>
          <target state="translated">&lt;code&gt;defer&lt;/code&gt; 返回类似于jQuery的 &lt;code&gt;$.Deferred&lt;/code&gt; 的对象。 &lt;code&gt;defer&lt;/code&gt; 应该在移植上的代码依赖时，可以使用 &lt;code&gt;$.Deferred&lt;/code&gt; 的接口。新代码应改为使用 &lt;code&gt;Promise&lt;/code&gt; 构造函数。</target>
        </trans-unit>
        <trans-unit id="7aedf053e75882c147f7253467ebfed4cee8811f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;definition&lt;/code&gt;: The definition of the helper.</source>
          <target state="translated">&lt;code&gt;definition&lt;/code&gt; ：助手的定义。</target>
        </trans-unit>
        <trans-unit id="53566246d98bcc2c59f45f8da64d84298eb99036" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;deleted&lt;/code&gt; The record has been deleted by the client and not yet saved to the adapter.</source>
          <target state="translated">&lt;code&gt;deleted&lt;/code&gt; 记录已被客户端删除，尚未保存到适配器。</target>
        </trans-unit>
        <trans-unit id="0ee419c891563ade7e775f3f6decc2311e746b46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;denodeify&lt;/code&gt; takes a 'node-style' function and returns a function that will return an &lt;code&gt;Promise&lt;/code&gt;. You can use &lt;code&gt;denodeify&lt;/code&gt; in Node.js or the browser when you'd prefer to use promises over using callbacks. For example, &lt;code&gt;denodeify&lt;/code&gt; transforms the following:</source>
          <target state="translated">&lt;code&gt;denodeify&lt;/code&gt; 采用&amp;ldquo;节点样式&amp;rdquo;函数并返回一个将返回 &lt;code&gt;Promise&lt;/code&gt; 的函数。当您希望使用 &lt;code&gt;denodeify&lt;/code&gt; 而不是使用回调时，可以在Node.js或浏览器中使用denodeify。例如， &lt;code&gt;denodeify&lt;/code&gt; 转换以下内容：</target>
        </trans-unit>
        <trans-unit id="d7b7e739df00d1dedef03cc145497a0078d03a4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dependentKeyCompat()&lt;/code&gt; can receive a getter function or an object containing &lt;code&gt;get&lt;/code&gt;/&lt;code&gt;set&lt;/code&gt; methods when used in classic classes, like computed properties.</source>
          <target state="translated">&lt;code&gt;dependentKeyCompat()&lt;/code&gt; 当在经典类（如计算属性）中使用时，dependentKeyCompat（）可以接收getter函数或包含 &lt;code&gt;get&lt;/code&gt; / &lt;code&gt;set&lt;/code&gt; 方法的对象。</target>
        </trans-unit>
        <trans-unit id="9ca60116aa57510982737d240e9b21218811a264" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;descriptor&lt;/code&gt; the meta object that describes this relationship</source>
          <target state="translated">&lt;code&gt;descriptor&lt;/code&gt; 描述此关系的元对象</target>
        </trans-unit>
        <trans-unit id="4e78deb5754743c9076514e268ab0e711b5d032b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;destinationElement&lt;/code&gt; -- the DOM element to render into. It must exist at the time of rendering.</source>
          <target state="translated">&lt;code&gt;destinationElement&lt;/code&gt; -要渲染到的DOM元素。它必须在渲染时存在。</target>
        </trans-unit>
        <trans-unit id="0f44e2b49d6b8b869b922bc47a24fdceeb9636e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;didChange(observedObj, start, removeCount, addCount)&lt;/code&gt; - This method will be called just after the array is modified.</source>
          <target state="translated">&lt;code&gt;didChange(observedObj, start, removeCount, addCount)&lt;/code&gt; -修改数组后立即调用此方法。</target>
        </trans-unit>
        <trans-unit id="47e9a207c6e0c22d645e108ad2033ea3b65111b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;didReceiveAttrs&lt;/code&gt; runs after &lt;code&gt;init&lt;/code&gt;, and it also runs on subsequent re-renders, which is useful for logic that is the same on all renders. It does not run when the re-render has been initiated internally.</source>
          <target state="translated">&lt;code&gt;didReceiveAttrs&lt;/code&gt; 在 &lt;code&gt;init&lt;/code&gt; 之后运行，并且还在随后的重新渲染上运行，这对于在所有渲染上都相同的逻辑很有用。在内部启动重新渲染后，它不会运行。</target>
        </trans-unit>
        <trans-unit id="0b6e95b817e5e20c84f2f820da622c38af455334" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;didUpdateAttrs&lt;/code&gt; runs when the attributes of a component have changed, but not when the component is re-rendered, via &lt;code&gt;component.rerender&lt;/code&gt;, &lt;code&gt;component.set&lt;/code&gt;, or changes in models or services used by the template.</source>
          <target state="translated">&lt;code&gt;didUpdateAttrs&lt;/code&gt; 在组件的属性发生更改时运行，但在通过 &lt;code&gt;component.rerender&lt;/code&gt; ， &lt;code&gt;component.set&lt;/code&gt; 或模板使用的模型或服务发生更改来重新呈现组件时，则不会运行。</target>
        </trans-unit>
        <trans-unit id="c922a1b7b4f3d3f06f2d0de2551d23b42172eed4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enumerable&lt;/code&gt; is the enumerable object itself.</source>
          <target state="translated">&lt;code&gt;enumerable&lt;/code&gt; 是可枚举的对象本身。</target>
        </trans-unit>
        <trans-unit id="04430a30b1390337b55bca29c8b1fbab7afe30a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;environment&lt;/code&gt; by default contains which of the build environments was selected at build time (&lt;code&gt;development&lt;/code&gt;, &lt;code&gt;test&lt;/code&gt;, or &lt;code&gt;production&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;environment&lt;/code&gt; 默认情况下，environment包含在构建时选择了哪个构建环境（ &lt;code&gt;development&lt;/code&gt; ， &lt;code&gt;test&lt;/code&gt; 或 &lt;code&gt;production&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="7d26a30d47f9a6ee3f4a31708953ebc04cd3f3c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;environment&lt;/code&gt; contains the name of the current environment (&lt;code&gt;development&lt;/code&gt;,&lt;code&gt;production&lt;/code&gt; or &lt;code&gt;test&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;environment&lt;/code&gt; 包含当前环境的名称（ &lt;code&gt;development&lt;/code&gt; ， &lt;code&gt;production&lt;/code&gt; 或 &lt;code&gt;test&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="f586aa04f6a33c25139d41659c3e7cb5bcb74d93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;error&lt;/code&gt; actions that bubble up all the way to &lt;code&gt;ApplicationRoute&lt;/code&gt; will fire a default error handler that logs the error. You can specify your own global default error handler by overriding the &lt;code&gt;error&lt;/code&gt; handler on &lt;code&gt;ApplicationRoute&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;error&lt;/code&gt; 冒泡到 &lt;code&gt;ApplicationRoute&lt;/code&gt; 的错误操作将触发记录错误的默认错误处理程序。您可以通过覆盖 &lt;code&gt;ApplicationRoute&lt;/code&gt; 上的 &lt;code&gt;error&lt;/code&gt; 处理程序来指定自己的全局默认错误处理程序：</target>
        </trans-unit>
        <trans-unit id="f18684f852ebf15d6f94aabae631bc30feed9015" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;error&lt;/code&gt; or &lt;code&gt;application-error&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;error&lt;/code&gt; 或 &lt;code&gt;application-error&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="06eb25243fcec514356f4606f769c07c02dfa195" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;error&lt;/code&gt; substates</source>
          <target state="translated">&lt;code&gt;error&lt;/code&gt; 子状态</target>
        </trans-unit>
        <trans-unit id="625f7ef4b6f06011f8559a8481f609597c8a93b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;event&lt;/code&gt; -- the name to use when calling &lt;code&gt;addEventListener&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;event&lt;/code&gt; -对骂时使用 &lt;code&gt;addEventListener&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bdb8a82ddd4eb19aab6079072d00ee3d12e5bdc6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exception&lt;/code&gt; is a value that is thrown using the throw statement.</source>
          <target state="translated">&lt;code&gt;exception&lt;/code&gt; 是使用throw语句抛出的值。</target>
        </trans-unit>
        <trans-unit id="2211c27dc3e64c28ce07cd46de8c49e66501584d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extractErrors&lt;/code&gt; is used to extract model errors when a call to &lt;code&gt;DS.Model#save&lt;/code&gt; fails with an &lt;code&gt;InvalidError&lt;/code&gt;. By default Ember Data expects error information to be located on the &lt;code&gt;errors&lt;/code&gt; property of the payload object.</source>
          <target state="translated">&lt;code&gt;extractErrors&lt;/code&gt; 当对 &lt;code&gt;DS.Model#save&lt;/code&gt; 的 &lt;code&gt;InvalidError&lt;/code&gt; 失败并返回InvalidError时，extractErrors用于提取模型错误。默认情况下，Ember Data期望错误信息位于有效负载对象的 &lt;code&gt;errors&lt;/code&gt; 属性上。</target>
        </trans-unit>
        <trans-unit id="c900d41b348bf22f32fd20233a83404d15eeba03" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extractErrors&lt;/code&gt; is used to extract model errors when a call to &lt;code&gt;Model#save&lt;/code&gt; fails with an &lt;code&gt;InvalidError&lt;/code&gt;. By default Ember Data expects error information to be located on the &lt;code&gt;errors&lt;/code&gt; property of the payload object.</source>
          <target state="translated">&lt;code&gt;extractErrors&lt;/code&gt; 当对 &lt;code&gt;Model#save&lt;/code&gt; 的 &lt;code&gt;InvalidError&lt;/code&gt; 失败并返回InvalidError时，extractErrors用于提取模型错误。默认情况下，Ember Data期望错误信息位于有效负载对象的 &lt;code&gt;errors&lt;/code&gt; 属性上。</target>
        </trans-unit>
        <trans-unit id="2054e0871b018f0d7ad823c7a2a31b2c8ea2da24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extractId&lt;/code&gt; | &lt;code&gt;extractAttributes&lt;/code&gt; | &lt;code&gt;extractRelationships&lt;/code&gt; - &lt;code&gt;normalize&lt;/code&gt; delegates to these methods to turn the record payload into the JSON API format.</source>
          <target state="translated">&lt;code&gt;extractId&lt;/code&gt; | &lt;code&gt;extractAttributes&lt;/code&gt; | &lt;code&gt;extractRelationships&lt;/code&gt; - &lt;code&gt;normalize&lt;/code&gt; 代表这些方法打开记录的有效载荷送入了JSON API格式。</target>
        </trans-unit>
        <trans-unit id="29ba6b65e9b64a7bb87025ee2c3975f28d440da0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extractMeta&lt;/code&gt; is used to deserialize any meta information in the adapter payload. By default Ember Data expects meta information to be located on the &lt;code&gt;meta&lt;/code&gt; property of the payload object.</source>
          <target state="translated">&lt;code&gt;extractMeta&lt;/code&gt; 用于反序列化适配器有效负载中的任何元信息。默认情况下，Ember Data期望元信息位于有效负载对象的 &lt;code&gt;meta&lt;/code&gt; 属性上。</target>
        </trans-unit>
        <trans-unit id="80cfa62b04e923696b186f1ca0ba7c1a31630517" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt; - The feature is entirely &lt;strong&gt;disabled&lt;/strong&gt;: the code behind the flag is not present in the generated build.</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; -完全&lt;strong&gt;禁用&lt;/strong&gt;该功能：标记后的代码在生成的版本中不存在。</target>
        </trans-unit>
        <trans-unit id="b500a88acd39c4d2ee8f47351ab60d29596d6db3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt; is used to signal that the record is not expected</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; 用于表示不期望记录</target>
        </trans-unit>
        <trans-unit id="98cbd08121c6fa423c8e2e72011cb49dcdba1132" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;filter&lt;/code&gt; is similar to JavaScript's native &lt;code&gt;filter&lt;/code&gt; method. &lt;code&gt;filterFn&lt;/code&gt; is eagerly called meaning that as soon as any promise resolves its value will be passed to &lt;code&gt;filterFn&lt;/code&gt;. &lt;code&gt;filter&lt;/code&gt; returns a promise that will become fulfilled with the result of running &lt;code&gt;filterFn&lt;/code&gt; on the values the promises become fulfilled with.</source>
          <target state="translated">&lt;code&gt;filter&lt;/code&gt; 与JavaScript的本机 &lt;code&gt;filter&lt;/code&gt; 方法相似。急切地调用 &lt;code&gt;filterFn&lt;/code&gt; ,这意味着一旦任何承诺解决，它的值就会被传递给 &lt;code&gt;filterFn&lt;/code&gt; 。 &lt;code&gt;filter&lt;/code&gt; 返回一个承诺，该承诺将通过在实现承诺的值上运行 &lt;code&gt;filterFn&lt;/code&gt; 的结果来实现。</target>
        </trans-unit>
        <trans-unit id="120d672bb65b64a00228368c4fe98e65eb069aff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;filter&lt;/code&gt; will also wait for any promises returned from &lt;code&gt;filterFn&lt;/code&gt;. For instance, you may want to fetch a list of users then return a subset of those users based on some asynchronous operation:</source>
          <target state="translated">&lt;code&gt;filter&lt;/code&gt; 也将等待从 &lt;code&gt;filterFn&lt;/code&gt; 返回的任何promise。例如，您可能希望获取用户列表，然后根据一些异步操作返回这些用户的子集：</target>
        </trans-unit>
        <trans-unit id="4861b2201a3e1e7e15919dca1531507f8ccc1f2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;finally&lt;/code&gt; will be invoked regardless of the promise's fate just as native try/catch/finally behaves</source>
          <target state="translated">&lt;code&gt;finally&lt;/code&gt; 将被调用，而不管承诺的命运如何，就像本机try / catch / finally一样</target>
        </trans-unit>
        <trans-unit id="4c5caf0d04b99fd2d27a4348c01630b43bf8e675" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;findAll&lt;/code&gt; asks the adapter's &lt;code&gt;findAll&lt;/code&gt; method to find the records for the given type, and returns a promise which will resolve with all records of this type present in the store, even if the adapter only returns a subset of them.</source>
          <target state="translated">&lt;code&gt;findAll&lt;/code&gt; 要求适配器的 &lt;code&gt;findAll&lt;/code&gt; 方法查找给定类型的记录，并返回一个承诺，该承诺将使用商店中存在的该类型的所有记录进行解析，即使适配器仅返回它们的一部分。</target>
        </trans-unit>
        <trans-unit id="2c5100a4eee7926633f6061896f3c5c2b5d037e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;findRecord()&lt;/code&gt; and &lt;code&gt;findAll()&lt;/code&gt; each take an &lt;code&gt;options&lt;/code&gt; argument in which you can specify the &lt;code&gt;include&lt;/code&gt; parameter. For example, given a &lt;code&gt;post&lt;/code&gt; model that has a &lt;code&gt;hasMany&lt;/code&gt; relationship with a &lt;code&gt;comment&lt;/code&gt; model, when retrieving a specific post we can have the server also return that post's comments as follows:</source>
          <target state="translated">&lt;code&gt;findRecord()&lt;/code&gt; 和 &lt;code&gt;findAll()&lt;/code&gt; 都带有一个 &lt;code&gt;options&lt;/code&gt; 参数，您可以在其中指定 &lt;code&gt;include&lt;/code&gt; 参数。例如，给定一个与 &lt;code&gt;comment&lt;/code&gt; 模型具有 &lt;code&gt;hasMany&lt;/code&gt; 关系的 &lt;code&gt;post&lt;/code&gt; 模型，则在检索特定帖子时，我们可以让服务器还按以下方式返回该帖子的评论：</target>
        </trans-unit>
        <trans-unit id="d39770bf005c671d0765d4f733fc8798b58af2c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;foo.bar.loading&lt;/code&gt; or &lt;code&gt;foo.bar-loading&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;foo.bar.loading&lt;/code&gt; 或 &lt;code&gt;foo.bar-loading&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d481d4324f3a2ae18f68a100c4a8b0e69b17b9ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;foo.loading&lt;/code&gt; or &lt;code&gt;foo-loading&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;foo.loading&lt;/code&gt; 或 &lt;code&gt;foo-loading&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fe2f6d7f473b31f4d5e37a0e5a9070c26ee56ca0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;get&lt;/code&gt; is also aware of keywords. So in this situation</source>
          <target state="translated">&lt;code&gt;get&lt;/code&gt; 也了解关键字。所以在这种情况下</target>
        </trans-unit>
        <trans-unit id="bfb9766a007374fdb54dea5ce76edb053723b5ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;get&lt;/code&gt; is also aware of keywords. So in this situation:</source>
          <target state="translated">&lt;code&gt;get&lt;/code&gt; 也了解关键字。因此在这种情况下：</target>
        </trans-unit>
        <trans-unit id="120c0e2da640447da86f93d85b4628b20959cd57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getDestroyable&lt;/code&gt; is an optional hook that users can use to register a destroyable object for the helper. This destroyable will be registered to the containing block or template parent, and will be destroyed when it is destroyed. See the &lt;a href=&quot;https://github.com/emberjs/rfcs/blob/master/text/0580-destroyables.md&quot;&gt;Destroyables RFC&lt;/a&gt; for more details.</source>
          <target state="translated">&lt;code&gt;getDestroyable&lt;/code&gt; 是一个可选的钩子，用户可以使用该钩子为助手注册一个可销毁的对象。此可销毁对象将注册到包含的块或模板父对象，并且在销毁时将销毁。有关更多详细信息，请参见可&lt;a href=&quot;https://github.com/emberjs/rfcs/blob/master/text/0580-destroyables.md&quot;&gt;销毁RFC&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8c571113d90cf5eba6ed4e0703ff1b6ef109ef26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getDestroyable&lt;/code&gt; is only called if the &lt;code&gt;hasDestroyable&lt;/code&gt; capability is enabled.</source>
          <target state="translated">&lt;code&gt;getDestroyable&lt;/code&gt; 如果仅称为 &lt;code&gt;hasDestroyable&lt;/code&gt; 启用能力。</target>
        </trans-unit>
        <trans-unit id="c77687212cb6820e1023b98085664307e5ce4ffe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getEngineParent&lt;/code&gt; retrieves an engine instance's parent instance.</source>
          <target state="translated">&lt;code&gt;getEngineParent&lt;/code&gt; 检索引擎实例的父实例。</target>
        </trans-unit>
        <trans-unit id="3f82d5fb6fbeb96e858012f94353179f08ac0db8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getOwner&lt;/code&gt; fetches the owner object responsible for an instance. This can be used to lookup or resolve other class instances, or register new factories into the owner.</source>
          <target state="translated">&lt;code&gt;getOwner&lt;/code&gt; 获取负责实例的所有者对象。这可用于查找或解析其他类实例，或将新工厂注册到所有者中。</target>
        </trans-unit>
        <trans-unit id="faae1dd2e101fc59e199c41d4f371991e79ab7d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getValue&lt;/code&gt; is an optional hook that should return the value of the helper. This is the value that is returned from the helper and passed into the template.</source>
          <target state="translated">&lt;code&gt;getValue&lt;/code&gt; 是一个可选的挂钩，应该返回帮助程序的值。这是从帮助程序返回并传递到模板的值。</target>
        </trans-unit>
        <trans-unit id="fe1f99e832e411770992612985f8d7124d905fcd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hasMany&lt;/code&gt; is used to define One-To-Many and Many-To-Many relationships on a &lt;a href=&quot;https://api.emberjs.com/ember-data/release/classes/Model&quot;&gt;Model&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;hasMany&lt;/code&gt; 用于定义&lt;a href=&quot;https://api.emberjs.com/ember-data/release/classes/Model&quot;&gt;Model&lt;/a&gt;上的一对多和多对多关系。</target>
        </trans-unit>
        <trans-unit id="708c21d0632467ae3ff4404bb07f55ec57346d58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hasMany&lt;/code&gt; takes an optional hash as a second parameter, currently supported options are:</source>
          <target state="translated">&lt;code&gt;hasMany&lt;/code&gt; 将可选的哈希作为第二个参数，当前支持的选项包括：</target>
        </trans-unit>
        <trans-unit id="13527c3a116724a0d2e6d7aa69c57ed1f55b2ae6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hash&lt;/code&gt; - use &lt;code&gt;#&lt;/code&gt; to separate the server part of the URL from the Ember part: &lt;code&gt;/blog/#/posts/new&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;hash&lt;/code&gt; -使用 &lt;code&gt;#&lt;/code&gt; 将网址的服务器部分与Ember部分分开： &lt;code&gt;/blog/#/posts/new&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c11befc225542280934d33c2ac8bcfb2068041b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hash&lt;/code&gt; is similar to &lt;code&gt;all&lt;/code&gt;, but takes an object instead of an array for its &lt;code&gt;promises&lt;/code&gt; argument.</source>
          <target state="translated">&lt;code&gt;hash&lt;/code&gt; 与 &lt;code&gt;all&lt;/code&gt; 相似，但是它的 &lt;code&gt;promises&lt;/code&gt; 参数使用一个对象而不是一个数组。</target>
        </trans-unit>
        <trans-unit id="79acc6432ea26b7653e37d57602c0567b7909c1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hashSettled&lt;/code&gt; is similar to &lt;code&gt;allSettled&lt;/code&gt;, but takes an object instead of an array for its &lt;code&gt;promises&lt;/code&gt; argument.</source>
          <target state="translated">&lt;code&gt;hashSettled&lt;/code&gt; 类似于 &lt;code&gt;allSettled&lt;/code&gt; ，但需要一个对象，而不是用于其的阵列的 &lt;code&gt;promises&lt;/code&gt; 的说法。</target>
        </trans-unit>
        <trans-unit id="69dcc8638bf9cd89a2efaeebe56b2899db174bef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;headers&lt;/code&gt; can also be used as a computed property to support dynamic headers. In the example below, the &lt;code&gt;session&lt;/code&gt; object has been injected into an adapter by Ember's container.</source>
          <target state="translated">&lt;code&gt;headers&lt;/code&gt; 也可以用作计算属性以支持动态标头。在下面的示例中， &lt;code&gt;session&lt;/code&gt; 对象已通过Ember的容器注入到适配器中。</target>
        </trans-unit>
        <trans-unit id="f67bfe13b3f1f5ab8deb0b9e55c41e0ce808c1e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;headers&lt;/code&gt; can also be used as a computed property to support dynamic headers. In the example below, the headers are generated with a computed property dependent on the &lt;code&gt;session&lt;/code&gt; service.</source>
          <target state="translated">&lt;code&gt;headers&lt;/code&gt; 也可以用作计算属性以支持动态标头。在下面的示例中，头的生成具有取决于 &lt;code&gt;session&lt;/code&gt; 服务的计算属性。</target>
        </trans-unit>
        <trans-unit id="251656b126ee82f7e89a0ef26338e7e89454cdda" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;history&lt;/code&gt; - use the browser's history API to make the URLs look just like any standard URL</source>
          <target state="translated">&lt;code&gt;history&lt;/code&gt; -使用浏览器的历史记录API使URL看起来像任何标准URL</target>
        </trans-unit>
        <trans-unit id="c4abc3ee9a4baf6452013bbab99cd0d1aca6d818" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;id&lt;/code&gt; - An id of the deprecation in the form of &lt;code&gt;package-name.specific-deprecation&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;id&lt;/code&gt; -的形式弃用的id &lt;code&gt;package-name.specific-deprecation&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="30a468ba447bce078dcece7527774e4b4fc8e764" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;id&lt;/code&gt; - An id of the warning in the form of &lt;code&gt;package-name.specific-warning&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;id&lt;/code&gt; -在形式的警告的ID &lt;code&gt;package-name.specific-warning&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fd6721cdab2fff6de8c24edceb6f6a55760e9d30" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;id&lt;/code&gt; - mandatory, unique record's key</source>
          <target state="translated">&lt;code&gt;id&lt;/code&gt; -必填，唯一记录的密钥</target>
        </trans-unit>
        <trans-unit id="655ff5947b66f6f09179f2d37f920f13a999d7e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ids()&lt;/code&gt; returns an array of the record IDs in this relationship.</source>
          <target state="translated">&lt;code&gt;ids()&lt;/code&gt; 返回此关系中记录ID的数组。</target>
        </trans-unit>
        <trans-unit id="bfdfc60a5d4c257b92d7ba84ae60ea79d1f7bfd1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ids&lt;/code&gt; is used to signal that only the id of the record is expected</source>
          <target state="translated">&lt;code&gt;ids&lt;/code&gt; 用于表示仅预期记录的id</target>
        </trans-unit>
        <trans-unit id="a51f14fcb6d5071d041ebe364dc6a93b10fe9b75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;includeId&lt;/code&gt;: &lt;code&gt;true&lt;/code&gt; if the record's ID should be included in the JSON representation.</source>
          <target state="translated">&lt;code&gt;includeId&lt;/code&gt; ：如果记录的ID应该包含在JSON表示形式中，则为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c162097db53c270e88aabcac2e749bc535bd43fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;includeId&lt;/code&gt;: If this is &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;serialize&lt;/code&gt; should include the ID in the serialized object it builds.</source>
          <target state="translated">&lt;code&gt;includeId&lt;/code&gt; ：如果为 &lt;code&gt;true&lt;/code&gt; ，则 &lt;code&gt;serialize&lt;/code&gt; 应在其构建的序列化对象中包含ID。</target>
        </trans-unit>
        <trans-unit id="6d69fa651b8b8f2d6359599400c9a952555aa463" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;index&lt;/code&gt; is the current index in the iteration.</source>
          <target state="translated">&lt;code&gt;index&lt;/code&gt; 是迭代中的当前索引。</target>
        </trans-unit>
        <trans-unit id="26610a4619d0624a254d60fd9c7daf0424d7b773" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;index&lt;/code&gt; is the integer index of the current item in the iteration.</source>
          <target state="translated">&lt;code&gt;index&lt;/code&gt; 是迭代中当前项目的整数索引。</target>
        </trans-unit>
        <trans-unit id="7fd569fec20d97c795afaa96805051dddc9c990e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;index&lt;/code&gt; when you visit &lt;code&gt;/&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;index&lt;/code&gt; 您访问时的索引 &lt;code&gt;/&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a283412fa72bf0168c93ccbf79e2c6f88e61cbd9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;initialize&lt;/code&gt; is a callback function that receives one argument, &lt;code&gt;application&lt;/code&gt;, on which you can operate.</source>
          <target state="translated">&lt;code&gt;initialize&lt;/code&gt; 是一个回调函数，它接收一个可以在其上进行操作的参数 &lt;code&gt;application&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b967bedeb66e8da73b305064c84c95ae965feb13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;insertBefore&lt;/code&gt; -- by default the DOM element's content is replaced when used as &lt;code&gt;destinationElement&lt;/code&gt;. Passing &lt;code&gt;null&lt;/code&gt; changes the behaviour to appended at the end of any existing content. Any other value than &lt;code&gt;null&lt;/code&gt; is currently not supported.</source>
          <target state="translated">&lt;code&gt;insertBefore&lt;/code&gt; -默认情况下，当用作 &lt;code&gt;destinationElement&lt;/code&gt; 时，将替换DOM元素的内容。传递 &lt;code&gt;null&lt;/code&gt; 会将行为更改为在任何现有内容的末尾附加。当前不支持除 &lt;code&gt;null&lt;/code&gt; 以外的任何其他值。</target>
        </trans-unit>
        <trans-unit id="9d6b772bf74a8673abc8c3bcb4d3fcdcbb71f91b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;inverse&lt;/code&gt;: A string used to identify the inverse property on a related model in a One-To-Many relationship. See &lt;a href=&quot;#explicit-inverses&quot;&gt;Explicit Inverses&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;inverse&lt;/code&gt; ：一个字符串，用于标识一对多关系中相关模型上的inverse属性。请参阅&lt;a href=&quot;#explicit-inverses&quot;&gt;显式逆&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0bea57fe7ed9eba5409658f3a48c71c88f757fb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;inverse&lt;/code&gt;: A string used to identify the inverse property on a related model in a One-To-Many relationship. See &lt;a href=&quot;#toc_explicit-inverses&quot;&gt;Explicit Inverses&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;inverse&lt;/code&gt; ：一个字符串，用于标识一对多关系中相关模型上的inverse属性。请参阅&lt;a href=&quot;#toc_explicit-inverses&quot;&gt;显式逆&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="628f63eabdda031803f960c2f5d7c1f25f5440c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;inverse&lt;/code&gt;: A string used to identify the inverse property on a related model.</source>
          <target state="translated">&lt;code&gt;inverse&lt;/code&gt; ：一个字符串，用于标识相关模型上的inverse属性。</target>
        </trans-unit>
        <trans-unit id="a84c27a45aa0822f451db57475e02befbc6d88d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;isDestroyed&lt;/code&gt; - Set to true when the component has been fully destroyed.</source>
          <target state="translated">&lt;code&gt;isDestroyed&lt;/code&gt; -完全销毁组件时设置为true。</target>
        </trans-unit>
        <trans-unit id="3971be1e8b8d5f475ef28d6837e0347e3c1ca0b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;isDestroying&lt;/code&gt; - Set to true when the component has been marked for destruction.</source>
          <target state="translated">&lt;code&gt;isDestroying&lt;/code&gt; -将组件标记为要销毁时设置为true。</target>
        </trans-unit>
        <trans-unit id="981791f72f3307bc78b41c6c330298580432387a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;isEqual&lt;/code&gt; is a more specific comparison than a triple equal comparison. It will call the &lt;code&gt;isEqual&lt;/code&gt; instance method on the objects being compared, allowing finer control over when objects should be considered equal to each other.</source>
          <target state="translated">&lt;code&gt;isEqual&lt;/code&gt; 是比三重相等比较更具体的比较。它将在要比较的对象上调用 &lt;code&gt;isEqual&lt;/code&gt; 实例方法，从而可以更好地控制何时应将对象视为彼此相等。</target>
        </trans-unit>
        <trans-unit id="2346f6bdd49c17c71d47fea616e40ad21b80e6cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;item&lt;/code&gt; is the current item in the iteration.</source>
          <target state="translated">&lt;code&gt;item&lt;/code&gt; 是迭代中的当前项目。</target>
        </trans-unit>
        <trans-unit id="a70f061ddc09554649a7991421ffa60d4e22a5f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;itemA&lt;/code&gt; the first item to compare.</source>
          <target state="translated">&lt;code&gt;itemA&lt;/code&gt; 要比较的第一个项目。</target>
        </trans-unit>
        <trans-unit id="afdb50c23fe67afb3844b199df6caf7806c4eec8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;itemB&lt;/code&gt; the second item to compare.</source>
          <target state="translated">&lt;code&gt;itemB&lt;/code&gt; 第二个要比较的项目。</target>
        </trans-unit>
        <trans-unit id="e216418fca94596d04ac120f7ff2dbaa56280744" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keyForAttribute&lt;/code&gt; can be used to define rules for how to convert an attribute name in your model to a key in your JSON.</source>
          <target state="translated">&lt;code&gt;keyForAttribute&lt;/code&gt; 可用于定义如何将模型中的属性名称转换为JSON中的键的规则。</target>
        </trans-unit>
        <trans-unit id="3587351164553ab65966caf0ed3f4b761f15a0df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keyForAttribute&lt;/code&gt; can be used to define rules for how to convert an attribute name in your model to a key in your JSON. By default &lt;code&gt;JSONAPISerializer&lt;/code&gt; follows the format used on the examples of &lt;a href=&quot;http://jsonapi.org/format&quot;&gt;http://jsonapi.org/format&lt;/a&gt; and uses dashes as the word separator in the JSON attribute keys.</source>
          <target state="translated">&lt;code&gt;keyForAttribute&lt;/code&gt; 可用于定义如何将模型中的属性名称转换为JSON中的键的规则。默认情况下， &lt;code&gt;JSONAPISerializer&lt;/code&gt; 遵循&lt;a href=&quot;http://jsonapi.org/format&quot;&gt;http://jsonapi.org/format&lt;/a&gt;示例中使用的格式，并在JSON属性键中使用短划线作为单词分隔符。</target>
        </trans-unit>
        <trans-unit id="f808533e3034ea2e9751518d4320e331a3f662de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keyForLink&lt;/code&gt; can be used to define a custom key when deserializing link properties.</source>
          <target state="translated">&lt;code&gt;keyForLink&lt;/code&gt; 反序列化链接属性时，可以使用keyForLink定义自定义键。</target>
        </trans-unit>
        <trans-unit id="3287f39e1be1499f1d146108b07ef8e04343b293" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keyForPolymorphicType&lt;/code&gt; can be used to define a custom key when serializing and deserializing a polymorphic type. By default, the returned key is &lt;code&gt;${key}Type&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;keyForPolymorphicType&lt;/code&gt; 在序列化和反序列化多态类型时，可以使用keyForPolymorphicType定义自定义密钥。默认情况下，返回的键为 &lt;code&gt;${key}Type&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="efaf1e977e7c0cd18e1572ebc6888914a1dfeeae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keyForRelationship&lt;/code&gt; can be used to define a custom key when serializing and deserializing relationship properties. By default &lt;code&gt;JSONAPISerializer&lt;/code&gt; follows the format used on the examples of &lt;a href=&quot;http://jsonapi.org/format&quot;&gt;http://jsonapi.org/format&lt;/a&gt; and uses dashes as word separators in relationship properties.</source>
          <target state="translated">&lt;code&gt;keyForRelationship&lt;/code&gt; 在序列化和反序列化关系属性时，可以使用keyForRelationship定义自定义密钥。默认情况下， &lt;code&gt;JSONAPISerializer&lt;/code&gt; 遵循&lt;a href=&quot;http://jsonapi.org/format&quot;&gt;http://jsonapi.org/format&lt;/a&gt;示例中使用的格式，并在关系属性中使用短划线作为单词分隔符。</target>
        </trans-unit>
        <trans-unit id="ba2a505209583702fd1fa0ca4023ce337021a809" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keyForRelationship&lt;/code&gt; can be used to define a custom key when serializing and deserializing relationship properties. By default &lt;code&gt;JSONSerializer&lt;/code&gt; does not provide an implementation of this method.</source>
          <target state="translated">&lt;code&gt;keyForRelationship&lt;/code&gt; 在序列化和反序列化关系属性时，可以使用keyForRelationship定义自定义密钥。默认情况下， &lt;code&gt;JSONSerializer&lt;/code&gt; 不提供此方法的实现。</target>
        </trans-unit>
        <trans-unit id="c6b2e545f2cd9da0e7e69c51e646b68a39a7a2c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;loading&lt;/code&gt; or &lt;code&gt;application-loading&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;loading&lt;/code&gt; 或 &lt;code&gt;application-loading&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="35ad4aa43087fcd09efd1d2e11e499df286f8655" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;loading&lt;/code&gt; substates</source>
          <target state="translated">&lt;code&gt;loading&lt;/code&gt; 子状态</target>
        </trans-unit>
        <trans-unit id="ab4087088385999643f936fca83820ee440615d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;log&lt;/code&gt; allows you to output the value of variables in the current rendering context. &lt;code&gt;log&lt;/code&gt; also accepts primitive types such as strings or numbers.</source>
          <target state="translated">&lt;code&gt;log&lt;/code&gt; 允许您在当前渲染上下文中输出变量的值。 &lt;code&gt;log&lt;/code&gt; 还接受基本类型，例如字符串或数字。</target>
        </trans-unit>
        <trans-unit id="b004c37e81e085f4b27575b9e456b2cf1835253b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;map&lt;/code&gt; is similar to JavaScript's native &lt;code&gt;map&lt;/code&gt; method. &lt;code&gt;mapFn&lt;/code&gt; is eagerly called meaning that as soon as any promise resolves its value will be passed to &lt;code&gt;mapFn&lt;/code&gt;. &lt;code&gt;map&lt;/code&gt; returns a promise that will become fulfilled with the result of running &lt;code&gt;mapFn&lt;/code&gt; on the values the promises become fulfilled with.</source>
          <target state="translated">&lt;code&gt;map&lt;/code&gt; 类似于JavaScript的本机 &lt;code&gt;map&lt;/code&gt; 方法。急切地调用 &lt;code&gt;mapFn&lt;/code&gt; 的意思是，一旦任何promise解析其值，它将立即传递给 &lt;code&gt;mapFn&lt;/code&gt; 。 &lt;code&gt;map&lt;/code&gt; 返回的诺言将通过在实现诺言的值上运行 &lt;code&gt;mapFn&lt;/code&gt; 的结果来实现。</target>
        </trans-unit>
        <trans-unit id="7facd99111ae9aa161559e4271b94d9fbff4b912" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;map&lt;/code&gt; will also wait if a promise is returned from &lt;code&gt;mapFn&lt;/code&gt;. For example, say you want to get all comments from a set of blog posts, but you need the blog posts first because they contain a url to those comments.</source>
          <target state="translated">&lt;code&gt;map&lt;/code&gt; 如果 &lt;code&gt;mapFn&lt;/code&gt; 返回了一个承诺，地图也会等待。例如，假设您要从一组博客文章中获取所有评论，但首先需要这些博客文章，因为它们包含这些评论的URL。</target>
        </trans-unit>
        <trans-unit id="a498018c1c5b0471beb6c7faa9418e3be21ed904" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;memberQp&lt;/code&gt;: &lt;code&gt;member&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;memberQp&lt;/code&gt; ： &lt;code&gt;member&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e7a5a835f4b8bcd4d9d0954ee84884839beb6a79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;members&lt;/code&gt; (the property names of attributes and relationships) should be formatted to match their definition in the corresponding &lt;code&gt;Model&lt;/code&gt; definition. Typically this will be &lt;code&gt;camelCase&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;members&lt;/code&gt; （属性和关系的属性名称）的格式应与相应 &lt;code&gt;Model&lt;/code&gt; 定义中的定义相匹配。通常，这将是 &lt;code&gt;camelCase&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="41655ff74c85e5bd48cd39c9105f25d4127f7632" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;message&lt;/code&gt; - The message received from the deprecation call.</source>
          <target state="translated">&lt;code&gt;message&lt;/code&gt; -从弃用呼叫收到该消息。</target>
        </trans-unit>
        <trans-unit id="9ccebb67733680ff51b51c95e10eaf14e685efb9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;message&lt;/code&gt; - The message received from the warn call.</source>
          <target state="translated">&lt;code&gt;message&lt;/code&gt; -从警告呼叫中收到的消息。</target>
        </trans-unit>
        <trans-unit id="4dfd9fc8784e2e79805dca4a0106b60dd74b2fa2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;message&lt;/code&gt; A string containing the error message from the backend</source>
          <target state="translated">&lt;code&gt;message&lt;/code&gt; 一个字符串，其中包含来自后端的错误消息</target>
        </trans-unit>
        <trans-unit id="aee6e2d6618f1bf4328836256787d0da05cbe4ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;meta&lt;/code&gt; the meta object for the attribute property in the iteration</source>
          <target state="translated">&lt;code&gt;meta&lt;/code&gt; 迭代中attribute属性的meta对象</target>
        </trans-unit>
        <trans-unit id="65054bbfe6105bc27a892f01047099ca1a5f6d22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;model&lt;/code&gt; hooks have some special powers:</source>
          <target state="translated">&lt;code&gt;model&lt;/code&gt; 钩具有一些特殊的功能：</target>
        </trans-unit>
        <trans-unit id="bfa81ed4bda5c8d9cbb75c0568f492bcfce23657" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;modelName&lt;/code&gt; is generated for you by Ember Data. It will be a lowercased, dasherized string. For example:</source>
          <target state="translated">&lt;code&gt;modelName&lt;/code&gt; Ember Data为您生成了modelName。这将是一个小写的，反斜线的字符串。例如：</target>
        </trans-unit>
        <trans-unit id="91c23b5033f55ae85b8402c8f5e3787008c72fa0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;modelNameFromPayloadType&lt;/code&gt; can be used to change the mapping for a DS model name, taken from the value in the payload.</source>
          <target state="translated">&lt;code&gt;modelNameFromPayloadType&lt;/code&gt; 可以用于更改DS模型名称的映射，该模型取自有效载荷中的值。</target>
        </trans-unit>
        <trans-unit id="f62747a469483dbf3f241c588609ddf3b632b00d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;module&lt;/code&gt; allows you to scope your tests: Any test setup that is done inside of this scope will apply to all test cases contained in this module. Scoping your tests with &lt;code&gt;module&lt;/code&gt; also allows you to execute your tests independently from other tests. For example, to only run your tests from your &lt;code&gt;login&lt;/code&gt; module, run &lt;code&gt;ember test --module='Acceptance | login'&lt;/code&gt;. &lt;code&gt;setupApplicationTest&lt;/code&gt; deals with application setup and teardown. The &lt;code&gt;test&lt;/code&gt; function contains an example test.</source>
          <target state="translated">&lt;code&gt;module&lt;/code&gt; 允许您确定测试范围：在此范围内完成的任何测试设置都将应用于此模块中包含的所有测试用例。使用 &lt;code&gt;module&lt;/code&gt; 测试范围设定范围还可以使您独立于其他测试执行测试。例如，要仅从 &lt;code&gt;login&lt;/code&gt; 模块运行 &lt;code&gt;ember test --module='Acceptance | login'&lt;/code&gt; ，请运行ember test --module ='Acceptance |登录&amp;rdquo;。 &lt;code&gt;setupApplicationTest&lt;/code&gt; 处理应用程序的安装和拆卸。的 &lt;code&gt;test&lt;/code&gt; 功能包含一个示例性测试。</target>
        </trans-unit>
        <trans-unit id="41ce5f25c763f84f97b0eaae9cb197cc76865033" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;moduleForAcceptance&lt;/code&gt; deals with application setup and teardown. The last few lines, within the function &lt;code&gt;test&lt;/code&gt;, contain an example test.</source>
          <target state="translated">&lt;code&gt;moduleForAcceptance&lt;/code&gt; 处理应用程序的设置和拆除。函数 &lt;code&gt;test&lt;/code&gt; 中的最后几行包含一个示例测试。</target>
        </trans-unit>
        <trans-unit id="0cd00b02bd18221259b91809704a1107ba9b8231" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; allows you to specify under which name the initializer is registered. This must be a unique name, as trying to register two initializers with the same name will result in an error.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; 允许您指定初始化器使用的名称。这必须是唯一的名称，因为尝试用相同的名称注册两个初始化器会导致错误。</target>
        </trans-unit>
        <trans-unit id="8e3b4f3284ca099edf020a829bcf9b285b8faf53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; allows you to specify under which name the instanceInitializer is registered. This must be a unique name, as trying to register two instanceInitializer with the same name will result in an error.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; 允许您指定instanceInitializer使用哪个名称注册。这必须是唯一的名称，因为尝试用相同的名称注册两个instanceInitializer会导致错误。</target>
        </trans-unit>
        <trans-unit id="c991be397832d136db83545c2f7c58faec355b6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; the name of the current property in the iteration</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; 在迭代当前属性的名称</target>
        </trans-unit>
        <trans-unit id="6884714262bba0bfd8cb221b64f4a4782f48a697" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt;: &lt;code&gt;turing&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; ： &lt;code&gt;turing&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e90975a4b928beb019eea78c19473b25db457c42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;new&lt;/code&gt; syntax is not currently supported with classes that extend from &lt;code&gt;EmberObject&lt;/code&gt; or &lt;code&gt;CoreObject&lt;/code&gt;. You must continue to use the &lt;code&gt;create&lt;/code&gt; method when making new instances of classes, even if they are defined using native class syntax. If you want to use &lt;code&gt;new&lt;/code&gt; syntax, consider creating classes which do &lt;em&gt;not&lt;/em&gt; extend from &lt;code&gt;EmberObject&lt;/code&gt; or &lt;code&gt;CoreObject&lt;/code&gt;. Ember features, such as computed properties and decorators, will still work with base-less classes.</source>
          <target state="translated">&lt;code&gt;new&lt;/code&gt; 从 &lt;code&gt;EmberObject&lt;/code&gt; 或 &lt;code&gt;CoreObject&lt;/code&gt; 扩展的类当前不支持新语法。 &lt;code&gt;create&lt;/code&gt; 类的新实例时，即使使用本机类语法定义了新实例，也必须继续使用create方法。如果要使用 &lt;code&gt;new&lt;/code&gt; 语法，请考虑创建&lt;em&gt;不&lt;/em&gt;从 &lt;code&gt;EmberObject&lt;/code&gt; 或 &lt;code&gt;CoreObject&lt;/code&gt; 扩展的类。诸如计算属性和装饰器之类的Ember功能仍将与基于无基础的类一起使用。</target>
        </trans-unit>
        <trans-unit id="3cb17e6b91f141b964f83cf8405d74ffd593bb6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;next&lt;/code&gt; - A function that calls into the previously registered handler.</source>
          <target state="translated">&lt;code&gt;next&lt;/code&gt; -调用先前注册的处理程序的函数。</target>
        </trans-unit>
        <trans-unit id="bfc088ed6a64f8eed255f61d151fd387d980946f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;none&lt;/code&gt; - do not store the Ember URL in the actual browser URL (mainly used for testing)</source>
          <target state="translated">&lt;code&gt;none&lt;/code&gt; -请勿将Ember URL存储在实际的浏览器URL中（主要用于测试）</target>
        </trans-unit>
        <trans-unit id="cbd42651c5c62e94fae9cf97aac8798dfcbb6297" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;normalize&lt;/code&gt; - &lt;code&gt;normalizeArray&lt;/code&gt; iterates and calls &lt;code&gt;normalize&lt;/code&gt; for each of its records while &lt;code&gt;normalizeSingle&lt;/code&gt; calls it once. This is the method you most likely want to subclass.</source>
          <target state="translated">&lt;code&gt;normalize&lt;/code&gt; - &lt;code&gt;normalizeArray&lt;/code&gt; 对其每个记录进行迭代并调用 &lt;code&gt;normalize&lt;/code&gt; ，而 &lt;code&gt;normalizeSingle&lt;/code&gt; 对其进行一次调用。这是您最可能想要子类化的方法。</target>
        </trans-unit>
        <trans-unit id="bcf8f91393d6499319b7f9899e25826157010796" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;normalize&lt;/code&gt; converts a json payload into the normalized form that &lt;a href=&quot;#method_push&quot;&gt;push&lt;/a&gt; expects.</source>
          <target state="translated">&lt;code&gt;normalize&lt;/code&gt; 将json负载转换为&lt;a href=&quot;#method_push&quot;&gt;push&lt;/a&gt;期望的规范化形式。</target>
        </trans-unit>
        <trans-unit id="6d9745f94411905971f4e1c2b2e00803ba6ef4e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;normalize&lt;/code&gt; converts a json payload into the normalized form that &lt;a href=&quot;../classes/store/methods#push&quot;&gt;push&lt;/a&gt; expects.</source>
          <target state="translated">&lt;code&gt;normalize&lt;/code&gt; 将json负载转换为&lt;a href=&quot;../classes/store/methods#push&quot;&gt;push&lt;/a&gt;期望的规范化形式。</target>
        </trans-unit>
        <trans-unit id="f327c3c679e574c7a75cb84d4c863cf760ab552c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;normalizeCreateRecordResponse&lt;/code&gt; - a &lt;code&gt;normalizeResponse&lt;/code&gt; for a specific operation is called.</source>
          <target state="translated">&lt;code&gt;normalizeCreateRecordResponse&lt;/code&gt; -调用特定操作的 &lt;code&gt;normalizeResponse&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="95d15161380b73bf2a9b2f30f5d0f4be54245f17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;normalizeResponse&lt;/code&gt; - entry method to the serializer.</source>
          <target state="translated">&lt;code&gt;normalizeResponse&lt;/code&gt; -序列化程序的输入方法。</target>
        </trans-unit>
        <trans-unit id="7d21e058611ff855d68fce56db09b58735e9a589" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;normalizeSingleResponse&lt;/code&gt;|&lt;code&gt;normalizeArrayResponse&lt;/code&gt; - for methods like &lt;code&gt;createRecord&lt;/code&gt; we expect a single record back, while for methods like &lt;code&gt;findAll&lt;/code&gt; we expect multiple methods back.</source>
          <target state="translated">&lt;code&gt;normalizeSingleResponse&lt;/code&gt; | &lt;code&gt;normalizeArrayResponse&lt;/code&gt; -对于像 &lt;code&gt;createRecord&lt;/code&gt; 这样的方法，我们希望返回单个记录，而对于像 &lt;code&gt;findAll&lt;/code&gt; 这样的方法，我们希望返回多个记录。</target>
        </trans-unit>
        <trans-unit id="ac8720114e4637f8b69b8000822a0a3dbaded89d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;normalizeSingleResponse&lt;/code&gt;|&lt;code&gt;normalizeArrayResponse&lt;/code&gt; - for methods like &lt;code&gt;createRecord&lt;/code&gt; we expect a single record back, while for methods like &lt;code&gt;findAll&lt;/code&gt; we expect multiple records back.</source>
          <target state="translated">&lt;code&gt;normalizeSingleResponse&lt;/code&gt; | &lt;code&gt;normalizeArrayResponse&lt;/code&gt; -对于像 &lt;code&gt;createRecord&lt;/code&gt; 这样的方法，我们希望返回单个记录，而对于像 &lt;code&gt;findAll&lt;/code&gt; 这样的方法，我们希望返回多个记录。</target>
        </trans-unit>
        <trans-unit id="33a710751387707d3add424402b654421fb86921" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;null&lt;/code&gt; - The feature is &lt;strong&gt;present&lt;/strong&gt; but &lt;strong&gt;disabled&lt;/strong&gt; in the build output. It must be enabled at runtime.</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; -该功能&lt;strong&gt;存在，&lt;/strong&gt;但在构建输出中被&lt;strong&gt;禁用&lt;/strong&gt;。必须在运行时启用它。</target>
        </trans-unit>
        <trans-unit id="ec2d8175b4b59835563ec3df8498e6244c736fb1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options&lt;/code&gt; - An object passed in with the deprecation call containing additional information including:</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; -与弃用调用一起传入的对象，其中包含其他信息，包括：</target>
        </trans-unit>
        <trans-unit id="168c33bc40c301b2b82e5bc6ac439a05cdd347f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options&lt;/code&gt; - An object passed in with the warn call containing additional information including:</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; -通过警告调用传入的对象，其中包含其他信息，包括：</target>
        </trans-unit>
        <trans-unit id="5f467038b123c789788fa5f934cef551a6409539" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;outlet&lt;/code&gt;: the name of the outlet to clear (default: 'main')</source>
          <target state="translated">&lt;code&gt;outlet&lt;/code&gt; ：要清除的出口的名称（默认值：&amp;ldquo; main&amp;rdquo;）</target>
        </trans-unit>
        <trans-unit id="b1452fb3c311f1b2a011a308f36e40d7c41961a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parentView&lt;/code&gt;: the name of the view containing the outlet to clear (default: the view rendered by the parent route)</source>
          <target state="translated">&lt;code&gt;parentView&lt;/code&gt; ：包含要清除的出口的视图的名称（默认值：父路线呈现的视图）</target>
        </trans-unit>
        <trans-unit id="5cef6a6b98a5ac93201f00902986700d2ec6b14f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path&lt;/code&gt;: allows you to provide your own path as well as mark dynamic segments.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; ：允许您提供自己的路径并标记动态细分。</target>
        </trans-unit>
        <trans-unit id="8c7fff36d2be47b6ac18cc3bfd4a4895d74091b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;payloadTypeFromModelName&lt;/code&gt; can be used to change the mapping for the type in the payload, taken from the model name.</source>
          <target state="translated">&lt;code&gt;payloadTypeFromModelName&lt;/code&gt; 可用于更改有效负载中类型的映射，该映射取自模型名称。</target>
        </trans-unit>
        <trans-unit id="97bb57219fcfd23078ef800be0734cd4f7976cfb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;polymorphic&lt;/code&gt; A boolean value to mark the relationship as polymorphic</source>
          <target state="translated">&lt;code&gt;polymorphic&lt;/code&gt; 一个布尔值，用于将关系标记为多态</target>
        </trans-unit>
        <trans-unit id="3d791a02005e76f1ed17b30faabcc6cfc49b7b4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;postMessage&lt;/code&gt; and &lt;code&gt;messageChannel&lt;/code&gt; event handlers</source>
          <target state="translated">&lt;code&gt;postMessage&lt;/code&gt; 和 &lt;code&gt;messageChannel&lt;/code&gt; 事件处理程序</target>
        </trans-unit>
        <trans-unit id="8a993543abdf1da61ed27a49b2ba30924cc01b1b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;previousValue&lt;/code&gt; is the value returned by the last call to the iterator.</source>
          <target state="translated">&lt;code&gt;previousValue&lt;/code&gt; 是上次调用迭代器返回的值。</target>
        </trans-unit>
        <trans-unit id="327a59991379803e6b861a88104ffb1a8f096f72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;promise&lt;/code&gt; is an object or function with a &lt;code&gt;then&lt;/code&gt; method whose behavior conforms to this specification.</source>
          <target state="translated">&lt;code&gt;promise&lt;/code&gt; 是具有 &lt;code&gt;then&lt;/code&gt; 方法的对象或函数，其行为符合此规范。</target>
        </trans-unit>
        <trans-unit id="57c94caf30fb6aebdc77fa5c2afb78440c74b971" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;push&lt;/code&gt; can be used to update the data in the relationship and Ember Data will treat the new data as the canonical value of this relationship on the backend.</source>
          <target state="translated">&lt;code&gt;push&lt;/code&gt; 可以用于更新关系中的数据，Ember Data会将新数据视为后端中此关系的规范值。</target>
        </trans-unit>
        <trans-unit id="bec8f6e3444e068727ae23534742becdac00b257" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;push&lt;/code&gt; can be used to update the data in the relationship and Ember Data will treat the new data as the conanical value of this relationship on the backend.</source>
          <target state="translated">&lt;code&gt;push&lt;/code&gt; 可以用于更新关系中的数据，Ember Data会将新数据视为该关系在后端的关联值。</target>
        </trans-unit>
        <trans-unit id="4dc80aa55adb739e2a2bd95fb8e191dbbd3c0080" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reason&lt;/code&gt; is a value that indicates why a promise was rejected.</source>
          <target state="translated">&lt;code&gt;reason&lt;/code&gt; 是一个值，该值指示为什么承诺被拒绝。</target>
        </trans-unit>
        <trans-unit id="5a00c05f84b26cc04f65b241334bbba7688209b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;records&lt;/code&gt; is used to signal that the entire record is expected</source>
          <target state="translated">&lt;code&gt;records&lt;/code&gt; 用于表示预期整个记录</target>
        </trans-unit>
        <trans-unit id="e73e70c309b3e16a9ab63b4d650c85caaea2e381" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;redirect&lt;/code&gt; and &lt;code&gt;afterModel&lt;/code&gt; behave very similarly and are called almost at the same time, but they have an important distinction in the case that, from one of these hooks, a redirect into a child route of this route occurs: redirects from &lt;code&gt;afterModel&lt;/code&gt; essentially invalidate the current attempt to enter this route, and will result in this route's &lt;code&gt;beforeModel&lt;/code&gt;, &lt;code&gt;model&lt;/code&gt;, and &lt;code&gt;afterModel&lt;/code&gt; hooks being fired again within the new, redirecting transition. Redirects that occur within the &lt;code&gt;redirect&lt;/code&gt; hook, on the other hand, will &lt;em&gt;not&lt;/em&gt; cause these hooks to be fired again the second time around; in other words, by the time the &lt;code&gt;redirect&lt;/code&gt; hook has been called, both the resolved model and attempted entry into this route are considered to be fully validated.</source>
          <target state="translated">&lt;code&gt;redirect&lt;/code&gt; 和 &lt;code&gt;afterModel&lt;/code&gt; 的行为非常相似，并且几乎在同一时间被调用，但是它们之间的重要区别在于，从其中一个钩子发生重定向到该路由的子路由：从 &lt;code&gt;afterModel&lt;/code&gt; 重定向实际上使当前路由无效。尝试输入此路由，将导致在新的重定向过渡中再次触发此路由的 &lt;code&gt;beforeModel&lt;/code&gt; ， &lt;code&gt;model&lt;/code&gt; 和 &lt;code&gt;afterModel&lt;/code&gt; 挂钩。另一方面，发生在 &lt;code&gt;redirect&lt;/code&gt; 挂钩中的重定向&lt;em&gt;不会&lt;/em&gt;导致这些挂钩再次被触发。换句话说，到 &lt;code&gt;redirect&lt;/code&gt; 钩子已被调用，解析模型和尝试进入此路由的尝试均被视为已充分验证。</target>
        </trans-unit>
        <trans-unit id="7e81a002cdcee8c09d8fd1a034cca8148a42886e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;redirect&lt;/code&gt; and &lt;code&gt;afterModel&lt;/code&gt; behave very similarly and are called almost at the same time, but they have an important distinction when calling &lt;code&gt;this.transitionTo&lt;/code&gt; to a child route of the current route. From &lt;code&gt;afterModel&lt;/code&gt;, this new transition invalidates the current transition, causing &lt;code&gt;beforeModel&lt;/code&gt;, &lt;code&gt;model&lt;/code&gt;, and &lt;code&gt;afterModel&lt;/code&gt; hooks to be called again. But the same transition started from &lt;code&gt;redirect&lt;/code&gt; does &lt;em&gt;not&lt;/em&gt; invalidate the current transition. In other words, by the time the &lt;code&gt;redirect&lt;/code&gt; hook has been called, both the resolved model and the attempted entry into this route are considered fully validated.</source>
          <target state="translated">&lt;code&gt;redirect&lt;/code&gt; 和 &lt;code&gt;afterModel&lt;/code&gt; 的行为非常相似，几乎在同一时间被调用，但是在将 &lt;code&gt;this.transitionTo&lt;/code&gt; 调用到当前路由的子路由时，它们有一个重要的区别。从 &lt;code&gt;afterModel&lt;/code&gt; 开始，此新过渡使当前过渡无效，从而导致再次调用 &lt;code&gt;beforeModel&lt;/code&gt; ， &lt;code&gt;model&lt;/code&gt; 和 &lt;code&gt;afterModel&lt;/code&gt; 挂钩。但是，从开始同过渡 &lt;code&gt;redirect&lt;/code&gt; 并&lt;em&gt;没有&lt;/em&gt;作废当前过渡。换句话说，在调用 &lt;code&gt;redirect&lt;/code&gt; 挂钩时，已解析的模型和尝试进入此路由的尝试都被视为已完全验证。</target>
        </trans-unit>
        <trans-unit id="ab67c7e6e9fa0cd934f88f8dacc089652b443bd5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;registerAsyncHelper&lt;/code&gt; is used to register an async test helper that will be injected when &lt;code&gt;App.injectTestHelpers&lt;/code&gt; is called.</source>
          <target state="translated">&lt;code&gt;registerAsyncHelper&lt;/code&gt; 用于注册一个异步测试助手，该助手将在调用 &lt;code&gt;App.injectTestHelpers&lt;/code&gt; 时注入。</target>
        </trans-unit>
        <trans-unit id="f921550b6544a51a75eef724b2c0b99fd75aff8e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;registerHelper&lt;/code&gt; is used to register a test helper that will be injected when &lt;code&gt;App.injectTestHelpers&lt;/code&gt; is called.</source>
          <target state="translated">&lt;code&gt;registerHelper&lt;/code&gt; 用于注册将在调用 &lt;code&gt;App.injectTestHelpers&lt;/code&gt; 时注入的测试助手。</target>
        </trans-unit>
        <trans-unit id="498162709d35ed1374baf798340dc71965a4228a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;relationshipKey&lt;/code&gt; key under which the value for the relationship is extracted from the resourceHash</source>
          <target state="translated">&lt;code&gt;relationshipKey&lt;/code&gt; 键，用于从resourceHash中提取关系的值</target>
        </trans-unit>
        <trans-unit id="67c27395439d8092bb960a2837a845f0b1d57223" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;relationshipMeta&lt;/code&gt; meta information about the relationship</source>
          <target state="translated">&lt;code&gt;relationshipMeta&lt;/code&gt; 关于关系的元信息</target>
        </trans-unit>
        <trans-unit id="62afc7c6b66312d7af16749c84cfa540363f9367" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;relationshipOptions&lt;/code&gt; is a hash which contains more information about the polymorphic relationship which should be extracted:</source>
          <target state="translated">&lt;code&gt;relationshipOptions&lt;/code&gt; 是一个哈希，其中包含有关应提取的多态关系的更多信息：</target>
        </trans-unit>
        <trans-unit id="29a8bdaf16a2e1c107208b1247534a49fe850c13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;relationships&lt;/code&gt; - object which must contain any of the following properties under each relationships' respective key (example path is &lt;code&gt;relationships.achievements.data&lt;/code&gt;):</source>
          <target state="translated">&lt;code&gt;relationships&lt;/code&gt; 必须在每个关系的各自键下包含以下任何属性的对象（示例路径为 &lt;code&gt;relationships.achievements.data&lt;/code&gt; ）：</target>
        </trans-unit>
        <trans-unit id="db2c1389220535c02fca00de53127e33e2ae3b38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;render&lt;/code&gt; additionally allows you to supply which &lt;code&gt;controller&lt;/code&gt; and &lt;code&gt;model&lt;/code&gt; objects should be loaded and associated with the rendered template.</source>
          <target state="translated">&lt;code&gt;render&lt;/code&gt; 还允许您提供应该加载哪些 &lt;code&gt;controller&lt;/code&gt; 和 &lt;code&gt;model&lt;/code&gt; 对象并将其与渲染的模板相关联。</target>
        </trans-unit>
        <trans-unit id="ac3ee30d920c6221fb791b62269ce81087c80575" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;render&lt;/code&gt; is used to render a template into a region of another template (indicated by an &lt;code&gt;{{outlet}}&lt;/code&gt;). &lt;code&gt;render&lt;/code&gt; is used both during the entry phase of routing (via the &lt;code&gt;renderTemplate&lt;/code&gt; hook) and later in response to user interaction.</source>
          <target state="translated">&lt;code&gt;render&lt;/code&gt; 用于将模板渲染到另一个模板的区域中（由 &lt;code&gt;{{outlet}}&lt;/code&gt; 表示）。在路由的输入阶段（通过 &lt;code&gt;renderTemplate&lt;/code&gt; 钩子）以及稍后响应用户交互时都使用 &lt;code&gt;render&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="78ff145fb0d4742a5f565c0ad493b0a71ba23afd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reopen()&lt;/code&gt; is used to add instance methods and properties that are shared across all instances of a class. It does not add methods and properties to a particular instance of a class as in vanilla JavaScript (without using prototype).</source>
          <target state="translated">&lt;code&gt;reopen()&lt;/code&gt; 用于添加在类的所有实例之间共享的实例方法和属性。不会像在普通JavaScript中那样向类的特定实例添加方法和属性（不使用原型）。</target>
        </trans-unit>
        <trans-unit id="41ec5369755f6d704aa82476ab6b33cab49e9749" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;resetNamespace&lt;/code&gt;: false by default; when nesting routes, ember will combine the route names to form the fully-qualified route name, which is used with &lt;code&gt;{{link-to}}&lt;/code&gt; or manually transitioning to routes. Setting &lt;code&gt;resetNamespace: true&lt;/code&gt; will cause the route not to inherit from its parent route's names. This is handy for preventing extremely long route names. Keep in mind that the actual URL path behavior is still retained.</source>
          <target state="translated">&lt;code&gt;resetNamespace&lt;/code&gt; ：默认为false; 在嵌套路线时，ember会结合路线名称以形成完全限定的路线名称，该名称与 &lt;code&gt;{{link-to}}&lt;/code&gt; 一起使用或手动转换为路线。设置 &lt;code&gt;resetNamespace: true&lt;/code&gt; 将导致路由不继承其父路由的名称。这对于防止路由名过长很方便。请记住，实际的URL路径行为仍然保留。</target>
        </trans-unit>
        <trans-unit id="ec0ac71cba96a30d4e24fbf0dfe170be99717929" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;resourceHash&lt;/code&gt; complete hash of the resource the relationship should be extracted from</source>
          <target state="translated">&lt;code&gt;resourceHash&lt;/code&gt; 应该从中提取关系的资源的完整哈希</target>
        </trans-unit>
        <trans-unit id="88ed812aa16a6b84c738644f7644b82c8d69fd6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rethrow&lt;/code&gt; will rethrow an error on the next turn of the JavaScript event loop in order to aid debugging.</source>
          <target state="translated">&lt;code&gt;rethrow&lt;/code&gt; 将在下一轮JavaScript事件循环中重新抛出错误，以帮助调试。</target>
        </trans-unit>
        <trans-unit id="a01deccd1a182386f5823af8e1d2dc059e36f100" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;routeDidChange&lt;/code&gt; will be called after any &lt;code&gt;Route&lt;/code&gt;'s &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/Route/events#didTransition&quot;&gt;didTransition&lt;/a&gt; action has been fired. The updates of properties &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/RouterService/properties#currentURL&quot;&gt;currentURL&lt;/a&gt;, &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/RouterService/properties#currentRouteName&quot;&gt;currentRouteName&lt;/a&gt; and &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/RouterService/properties#currentRoute&quot;&gt;currentRoute&lt;/a&gt; are completed at the time &lt;code&gt;routeDidChange&lt;/code&gt; is called.</source>
          <target state="translated">&lt;code&gt;routeDidChange&lt;/code&gt; 任何 &lt;code&gt;Route&lt;/code&gt; 的&lt;a href=&quot;https://api.emberjs.com/ember/release/classes/Route/events#didTransition&quot;&gt;didTransition&lt;/a&gt;操作之后，将调用routeDidChange。在调用 &lt;code&gt;routeDidChange&lt;/code&gt; 时,会完成对&lt;a href=&quot;https://api.emberjs.com/ember/release/classes/RouterService/properties#currentURL&quot;&gt;currentURL&lt;/a&gt;，&lt;a href=&quot;https://api.emberjs.com/ember/release/classes/RouterService/properties#currentRouteName&quot;&gt;currentRouteName&lt;/a&gt;和&lt;a href=&quot;https://api.emberjs.com/ember/release/classes/RouterService/properties#currentRoute&quot;&gt;currentRoute&lt;/a&gt;属性的更新。</target>
        </trans-unit>
        <trans-unit id="d4e16d73c3e47b68ddb4beb94bed0e2104f64637" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;run.bind&lt;/code&gt; takes two main arguments, the desired context and the function to invoke in that context. Any additional arguments will be supplied as arguments to the function that is passed in.</source>
          <target state="translated">&lt;code&gt;run.bind&lt;/code&gt; 有两个主要参数，所需的上下文和在该上下文中调用的函数。任何其他参数都将作为传入函数的参数提供。</target>
        </trans-unit>
        <trans-unit id="1b5e50906b22dc5664293217906af063712cce37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;runEffect&lt;/code&gt; is an optional hook that should run the effect that the helper is applying, setting it up or updating it.</source>
          <target state="translated">&lt;code&gt;runEffect&lt;/code&gt; 是一个可选的挂钩，它应运行帮助程序正在应用，设置或更新的效果。</target>
        </trans-unit>
        <trans-unit id="19af8769269b0f9b6a38557d62d3c0ae46323949" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;serialize&lt;/code&gt; takes an optional &lt;code&gt;options&lt;/code&gt; hash with a single option:</source>
          <target state="translated">&lt;code&gt;serialize&lt;/code&gt; 使用带有单个选项的可选 &lt;code&gt;options&lt;/code&gt; 哈希：</target>
        </trans-unit>
        <trans-unit id="d98035c9f614486c6b59326bed1677f58e846505" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;serialize&lt;/code&gt; takes an optional hash as a parameter, currently supported options are:</source>
          <target state="translated">&lt;code&gt;serialize&lt;/code&gt; 将可选的哈希作为参数，当前支持的选项是：</target>
        </trans-unit>
        <trans-unit id="24a46553b8edebc8c965eef3cb3931932ee467a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;serialize&lt;/code&gt; takes an options hash with a single option: &lt;code&gt;includeId&lt;/code&gt;. If this option is &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;serialize&lt;/code&gt; will, by default include the ID in the JSON object it builds.</source>
          <target state="translated">&lt;code&gt;serialize&lt;/code&gt; 使用带有单个选项的选项哈希： &lt;code&gt;includeId&lt;/code&gt; 。如果此选项为 &lt;code&gt;true&lt;/code&gt; ，则 &lt;code&gt;serialize&lt;/code&gt; 默认情况下会将ID包含在其构建的JSON对象中。</target>
        </trans-unit>
        <trans-unit id="b4997d0113f9f5069529098ade06a12d00f199dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;serializeAttribute&lt;/code&gt; can be used to customize how &lt;code&gt;DS.attr&lt;/code&gt; properties are serialized</source>
          <target state="translated">&lt;code&gt;serializeAttribute&lt;/code&gt; 可用于自定义如何序列化 &lt;code&gt;DS.attr&lt;/code&gt; 属性</target>
        </trans-unit>
        <trans-unit id="d8ce6fab0a2cd394baae993060b051dea396ce11" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;serializeAttribute&lt;/code&gt; can be used to customize how &lt;code&gt;attr&lt;/code&gt; properties are serialized</source>
          <target state="translated">&lt;code&gt;serializeAttribute&lt;/code&gt; 可用于自定义 &lt;code&gt;attr&lt;/code&gt; 属性的序列化方式</target>
        </trans-unit>
        <trans-unit id="b751c8659b42100065ba6d060f12e8dffb99515c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;serializeBelongsTo&lt;/code&gt; can be used to customize how &lt;code&gt;DS.belongsTo&lt;/code&gt; properties are serialized.</source>
          <target state="translated">&lt;code&gt;serializeBelongsTo&lt;/code&gt; 可用于自定义 &lt;code&gt;DS.belongsTo&lt;/code&gt; 属性的序列化方式。</target>
        </trans-unit>
        <trans-unit id="7b71a42d522122a6e7bdffd701282e1abfb4482c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;serializeBelongsTo&lt;/code&gt; can be used to customize how &lt;code&gt;belongsTo&lt;/code&gt; properties are serialized.</source>
          <target state="translated">&lt;code&gt;serializeBelongsTo&lt;/code&gt; 可用于自定义如何序列化 &lt;code&gt;belongsTo&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="88db8a35e89e87682eef6ac7665d99a830a26a94" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;serializeHasMany&lt;/code&gt; can be used to customize how &lt;code&gt;DS.hasMany&lt;/code&gt; properties are serialized.</source>
          <target state="translated">&lt;code&gt;serializeHasMany&lt;/code&gt; 可用于自定义 &lt;code&gt;DS.hasMany&lt;/code&gt; 属性的序列化方式。</target>
        </trans-unit>
        <trans-unit id="4863bc950eecfed58d9172624952fd009246f843" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;serializeHasMany&lt;/code&gt; can be used to customize how &lt;code&gt;hasMany&lt;/code&gt; properties are serialized.</source>
          <target state="translated">&lt;code&gt;serializeHasMany&lt;/code&gt; 可用于自定义 &lt;code&gt;hasMany&lt;/code&gt; 属性的序列化方式。</target>
        </trans-unit>
        <trans-unit id="0829ff5a1360ba9bc219c137bc48df213b6ade5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;serializerFor&lt;/code&gt; first attempts to find a serializer with an exact match on &lt;code&gt;name&lt;/code&gt;, then falls back to checking for the presence of a serializer named &lt;code&gt;application&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;serializerFor&lt;/code&gt; 首先尝试找到一个确切的匹配串行 &lt;code&gt;name&lt;/code&gt; ，然后回落到检查串行命名的情况下 &lt;code&gt;application&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2405daf9724604e98cccc24c35ad157173dd604d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setHelperManager&lt;/code&gt; receives two arguments:</source>
          <target state="translated">&lt;code&gt;setHelperManager&lt;/code&gt; 接收两个参数：</target>
        </trans-unit>
        <trans-unit id="18fd9a6de45aa2fe5a874a759dd75b062ceea16b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setOwner&lt;/code&gt; forces a new owner on a given object instance. This is primarily useful in some testing cases.</source>
          <target state="translated">&lt;code&gt;setOwner&lt;/code&gt; 强制给定对象实例上的新所有者。这在某些测试案例中主要有用。</target>
        </trans-unit>
        <trans-unit id="18dd34ab27cb04499e7ae5efd158b9103d5b2102" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setTimeout&lt;/code&gt; and &lt;code&gt;setInterval&lt;/code&gt; callbacks</source>
          <target state="translated">&lt;code&gt;setTimeout&lt;/code&gt; 和 &lt;code&gt;setInterval&lt;/code&gt; 回调</target>
        </trans-unit>
        <trans-unit id="06b4156ed26d29bdd56778068f69a47f63ada4ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;settled&lt;/code&gt; the final resting state of a promise, fulfilled or rejected.</source>
          <target state="translated">&lt;code&gt;settled&lt;/code&gt; 承诺的最终静止状态，实现或拒绝。</target>
        </trans-unit>
        <trans-unit id="d8d65df515e8beae5d64f602cef90594f62cae9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;someComplicatedOtherMethod&lt;/code&gt; might have complex behavior that you do not want failing your unit test for &lt;code&gt;testMethod&lt;/code&gt;, because you know &lt;code&gt;testMethod&lt;/code&gt; works otherwise. Isolating unit tests is best practice because the tests that are failing should directly point to the method that is failing, allowing you to quickly fix it rather than figuring out which method the error is in. In we stub the other method:</source>
          <target state="translated">&lt;code&gt;someComplicatedOtherMethod&lt;/code&gt; 可能具有复杂的行为，您不想使 &lt;code&gt;testMethod&lt;/code&gt; 的单元测试失败，因为您知道 &lt;code&gt;testMethod&lt;/code&gt; 可以正常工作。隔离单元测试是最佳实践，因为失败的测试应直接指向失败的方法，从而使您可以快速修复该问题，而不必弄清楚错误所在的方法。在我们中，对另一种方法进行存根：</target>
        </trans-unit>
        <trans-unit id="9a1c389bbde32e800612b791405eda37b8c6359f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;store.adapterFor(name)&lt;/code&gt; will lookup adapters defined in &lt;code&gt;app/adapters/&lt;/code&gt; and return an instance.</source>
          <target state="translated">&lt;code&gt;store.adapterFor(name)&lt;/code&gt; 将查找在 &lt;code&gt;app/adapters/&lt;/code&gt; 定义的适配器，并返回一个实例。</target>
        </trans-unit>
        <trans-unit id="897b3bef032015c31d70d4f7e07f0eb805c8bf07" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;store.findAll()&lt;/code&gt; returns a &lt;code&gt;DS.PromiseArray&lt;/code&gt; that fulfills to a &lt;code&gt;DS.RecordArray&lt;/code&gt; and &lt;code&gt;store.peekAll&lt;/code&gt; directly returns a &lt;code&gt;DS.RecordArray&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;store.findAll()&lt;/code&gt; 返回一个 &lt;code&gt;DS.PromiseArray&lt;/code&gt; 其满足给 &lt;code&gt;DS.RecordArray&lt;/code&gt; 和 &lt;code&gt;store.peekAll&lt;/code&gt; 直接返回一个 &lt;code&gt;DS.RecordArray&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bd3f0b7086637c3f662fa620ad3b0e4b28df8243" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;store.findAll()&lt;/code&gt; returns a &lt;code&gt;PromiseArray&lt;/code&gt; that fulfills to a &lt;code&gt;RecordArray&lt;/code&gt; and &lt;code&gt;store.peekAll&lt;/code&gt; directly returns a &lt;code&gt;RecordArray&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;store.findAll()&lt;/code&gt; 返回一个 &lt;code&gt;PromiseArray&lt;/code&gt; ，该PromiseArray满足 &lt;code&gt;RecordArray&lt;/code&gt; ,而 &lt;code&gt;store.peekAll&lt;/code&gt; 直接返回一个 &lt;code&gt;RecordArray&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="65df573df1ba06f98b7bb7c98cb1e83a641e1ab7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;store.serializerFor(name)&lt;/code&gt; will lookup serializers defined in &lt;code&gt;app/serializers/&lt;/code&gt; and return an instance. If no serializer is found, an error will be thrown.</source>
          <target state="translated">&lt;code&gt;store.serializerFor(name)&lt;/code&gt; 将查找在 &lt;code&gt;app/serializers/&lt;/code&gt; 定义的序列化器，并返回一个实例。如果未找到序列化程序，将引发错误。</target>
        </trans-unit>
        <trans-unit id="08f5c5bf77db0d9249c16e3ee83f889b2fd8488d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;super&lt;/code&gt; must be used in subclass constructors, but it can also be used in other class methods or accessors. When being used in any other method, you must explicitly specify the method you're calling on the super class:</source>
          <target state="translated">&lt;code&gt;super&lt;/code&gt; 必须在子类构造函数中使用，但也可以在其他类方法或访问器中使用。在任何其他方法中使用时，必须显式指定要在超类上调用的方法：</target>
        </trans-unit>
        <trans-unit id="d92b04b65b0dd56bd2b92d3e690867a35f9e5eb8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;target=someProperty&lt;/code&gt; will look to &lt;code&gt;someProperty&lt;/code&gt; instead of the current context for the &lt;code&gt;actions&lt;/code&gt; hash. This can be useful when targeting a service for actions.</source>
          <target state="translated">&lt;code&gt;target=someProperty&lt;/code&gt; 将查找 &lt;code&gt;someProperty&lt;/code&gt; 而不是 &lt;code&gt;actions&lt;/code&gt; 哈希的当前上下文。在将服务作为操作目标时，这很有用。</target>
        </trans-unit>
        <trans-unit id="67589f9ab3f09a93dea5d740ae85c49a73780d1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;thenable&lt;/code&gt; is an object or function that defines a &lt;code&gt;then&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;thenable&lt;/code&gt; 是定义 &lt;code&gt;then&lt;/code&gt; 方法的对象或函数。</target>
        </trans-unit>
        <trans-unit id="6d450402c131bd919569d0e411e705d461d1c89e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;this.$()&lt;/code&gt; in Classic Ember components. This creates a jQuery selector that targets the component's element. You can migrate away by using &lt;code&gt;this.element&lt;/code&gt; instead, which is the actual DOM element for the component. If you want to continue using jQuery via &lt;code&gt;@ember/jquery&lt;/code&gt;, you can do so with &lt;code&gt;this.element&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;this.$()&lt;/code&gt; 经典Ember组件中的this。$（）。这将创建一个以组件的元素为目标的jQuery选择器。您可以改用 &lt;code&gt;this.element&lt;/code&gt; 迁移，这是组件的实际DOM元素。如果您想通过 &lt;code&gt;@ember/jquery&lt;/code&gt; 继续使用jQuery ，则可以使用 &lt;code&gt;this.element&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="b810ed6466b479d719b8addf2d35e90622780d2f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;this.$()&lt;/code&gt; in component tests. This can be replaced with corresponding test helpers from &lt;code&gt;@ember/test-helpers&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;this.$()&lt;/code&gt; 在组件测试中。可以使用 &lt;code&gt;@ember/test-helpers&lt;/code&gt; 相应测试助手来代替。</target>
        </trans-unit>
        <trans-unit id="2d0c9a9230e61f60df4689ff5eca0667cddc08c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;this.get('onConfirm')&lt;/code&gt; will return the function passed from the parent as the value of &lt;code&gt;onConfirm&lt;/code&gt;, and the following &lt;code&gt;()&lt;/code&gt; will invoke the function.</source>
          <target state="translated">&lt;code&gt;this.get('onConfirm')&lt;/code&gt; 将返回从父级传递来的函数作为 &lt;code&gt;onConfirm&lt;/code&gt; 的值，然后以下 &lt;code&gt;()&lt;/code&gt; 将调用该函数。</target>
        </trans-unit>
        <trans-unit id="54453dea065f6ae27d8111091e942211b8c22025" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;this.on&lt;/code&gt; will add the provided function to the test local scope as &lt;code&gt;filterByCity&lt;/code&gt;, which we can use to provide to the component.</source>
          <target state="translated">&lt;code&gt;this.on&lt;/code&gt; 会将提供的函数作为 &lt;code&gt;filterByCity&lt;/code&gt; 添加到测试本地范围，我们可以使用该函数提供给组件。</target>
        </trans-unit>
        <trans-unit id="4caaf1fb251c2a1418c71be2faf7d1c57638c792" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;toJSON&lt;/code&gt; takes an optional hash as a parameter, currently supported options are:</source>
          <target state="translated">&lt;code&gt;toJSON&lt;/code&gt; 将可选的哈希作为参数，当前支持的选项包括：</target>
        </trans-unit>
        <trans-unit id="66c7ebe7c958848e4a6de1b5074a48d6f2b2cbef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tracked&lt;/code&gt; can also be used with the classic Ember object model in a similar manner to classic computed properties:</source>
          <target state="translated">&lt;code&gt;tracked&lt;/code&gt; 也可以与经典Ember对象模型一起使用，类似于经典计算属性：</target>
        </trans-unit>
        <trans-unit id="25d88918b50bf17855f7674250570567bae9ac83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; - The feature is &lt;strong&gt;present&lt;/strong&gt; and &lt;strong&gt;enabled&lt;/strong&gt;: the code behind the flag is always enabled in the generated build.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; -该功能&lt;strong&gt;存在&lt;/strong&gt;并&lt;strong&gt;启用&lt;/strong&gt;：该标志后面的代码始终在生成的内部版本中启用。</target>
        </trans-unit>
        <trans-unit id="604dcb264248ea27d4285eda3645e29a7e69d0e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type&lt;/code&gt; - mandatory string which matches &lt;code&gt;model&lt;/code&gt;'s dasherized name in singular form</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; -它匹配字符串强制 &lt;code&gt;model&lt;/code&gt; 在单数形式的底线转换名</target>
        </trans-unit>
        <trans-unit id="6514527178b751ce56280b5f995202096173514d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type&lt;/code&gt; a string containing the name of the type of transformed applied to the attribute</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; 一个字符串，其中包含应用于属性的转换类型的名称</target>
        </trans-unit>
        <trans-unit id="b19787456468d6db895deffd9810c0f75549abbc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type&lt;/code&gt; should be formatted in the &lt;code&gt;singular&lt;/code&gt;&lt;code&gt;dasherized&lt;/code&gt;&lt;code&gt;lowercase&lt;/code&gt; form</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; 应以 &lt;code&gt;singular&lt;/code&gt; &lt;code&gt;dasherized&lt;/code&gt; &lt;code&gt;lowercase&lt;/code&gt; 形式设置格式</target>
        </trans-unit>
        <trans-unit id="c816eaf5b3f10a47558ee6bb49d5d7b2d0c04aa9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type&lt;/code&gt; should be formatted in the singular, dasherized and lowercase form</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; 应设置为单数，反斜线和小写形式</target>
        </trans-unit>
        <trans-unit id="a85e6fe87d706ff147e0d7c2bd9f40f8e1c40910" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unregisterWaiter&lt;/code&gt; is used to unregister a callback that was registered with &lt;code&gt;registerWaiter&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;unregisterWaiter&lt;/code&gt; 用于注销已向 &lt;code&gt;registerWaiter&lt;/code&gt; 注册的回调。</target>
        </trans-unit>
        <trans-unit id="3dc90b695a2b38e6412c994e86f6bbab2bc9b5f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;until&lt;/code&gt; - The Ember version number the feature and deprecation will be removed in.</source>
          <target state="translated">&lt;code&gt;until&lt;/code&gt; -功能和弃用的Ember版本号将被删除。</target>
        </trans-unit>
        <trans-unit id="256553a6ae2253b871cba91ba19dc6a402a37770" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;updated&lt;/code&gt; The record has been updated by the client and not yet saved to the adapter.</source>
          <target state="translated">&lt;code&gt;updated&lt;/code&gt; 记录已由客户端更新，尚未保存到适配器。</target>
        </trans-unit>
        <trans-unit id="d3c5960811bfdc0db373857df30e9f53423dcf49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;user.about.loading&lt;/code&gt; or &lt;code&gt;user.about-loading&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;user.about.loading&lt;/code&gt; 或 &lt;code&gt;user.about-loading&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4f11edaf31c07003c4f598dca3ded296d2d7a91e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;user.loading&lt;/code&gt; or &lt;code&gt;user-loading&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;user.loading&lt;/code&gt; 或 &lt;code&gt;user-loading&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2f53237a15da64fc29158968f073c6174337424c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value()&lt;/code&gt; sycronously returns the current value of the has-many relationship. Unlike &lt;code&gt;record.get('relationshipName')&lt;/code&gt;, calling &lt;code&gt;value()&lt;/code&gt; on a reference does not trigger a fetch if the async relationship is not yet loaded. If the relationship is not loaded it will always return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;value()&lt;/code&gt; 同步返回has-many关系的当前值。与 &lt;code&gt;record.get('relationshipName')&lt;/code&gt; 不同，如果尚未加载异步关系，则在引用上调用 &lt;code&gt;value()&lt;/code&gt; 不会触发获取。如果未加载该关系，它将始终返回 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="53f59a52a9a5d9a6d3334d3de8fe2732205d2e05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value()&lt;/code&gt; synchronously returns the current value of the belongs-to relationship. Unlike &lt;code&gt;record.get('relationshipName')&lt;/code&gt;, calling &lt;code&gt;value()&lt;/code&gt; on a reference does not trigger a fetch if the async relationship is not yet loaded. If the relationship is not loaded it will always return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;value()&lt;/code&gt; 同步返回归属关系的当前值。与 &lt;code&gt;record.get('relationshipName')&lt;/code&gt; 不同，如果尚未加载异步关系，则在引用上调用 &lt;code&gt;value()&lt;/code&gt; 不会触发获取。如果未加载该关系，它将始终返回 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c3a18f73a9790a5518ff0a0fce07ac444a231fde" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value()&lt;/code&gt; synchronously returns the current value of the has-many relationship. Unlike &lt;code&gt;record.get('relationshipName')&lt;/code&gt;, calling &lt;code&gt;value()&lt;/code&gt; on a reference does not trigger a fetch if the async relationship is not yet loaded. If the relationship is not loaded it will always return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;value()&lt;/code&gt; 同步返回has-many关系的当前值。与 &lt;code&gt;record.get('relationshipName')&lt;/code&gt; 不同，如果尚未加载异步关系，则在引用上调用 &lt;code&gt;value()&lt;/code&gt; 不会触发获取。如果未加载该关系，它将始终返回 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3485c65e06f2db5295e3444678f96bc9a9a7cab2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt; is any legal JavaScript value (including undefined, a thenable, or a promise).</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; 是任何合法的JavaScript值（包括未定义，可实现或承诺）。</target>
        </trans-unit>
        <trans-unit id="efee708766b1c47ff798bdda0e3e04603d821e23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value=&quot;target.value&quot;&lt;/code&gt; will read the path &lt;code&gt;target.value&lt;/code&gt; off the first argument to the action when it is called and rewrite the first argument to be that value. This is useful when attaching actions to event listeners.</source>
          <target state="translated">&lt;code&gt;value=&quot;target.value&quot;&lt;/code&gt; 当调用该操作时，value =&amp;ldquo; target.value&amp;rdquo;将从该操作的第一个参数读取路径 &lt;code&gt;target.value&lt;/code&gt; ，并将第一个参数重写为该值。将动作附加到事件侦听器时，这很有用。</target>
        </trans-unit>
        <trans-unit id="703aee23cf15f98c5ca4b85824d4705103830380" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;willChange(observedObj, start, removeCount, addCount)&lt;/code&gt; - This method will be called just before the array is modified.</source>
          <target state="translated">&lt;code&gt;willChange(observedObj, start, removeCount, addCount)&lt;/code&gt; -在修改数组之前将调用此方法。</target>
        </trans-unit>
        <trans-unit id="994db2b77687f2a7d32bd118182163fc84c09083" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;willDestroy&lt;/code&gt; is called after the component has been removed from the DOM, but before the component is fully destroyed. This lifecycle hook can be used to cleanup the component and any related state.</source>
          <target state="translated">&lt;code&gt;willDestroy&lt;/code&gt; 在组件已从DOM中删除之后，但在组件被完全销毁之前，将调用willDestroy。该生命周期挂钩可用于清除组件和任何相关状态。</target>
        </trans-unit>
        <trans-unit id="7417c48170956b3db7555d98ceb6566984758328" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{{#each}}&lt;/code&gt; can have a matching &lt;code&gt;{{else}}&lt;/code&gt;. The contents of this block will render if the collection is empty.</source>
          <target state="translated">&lt;code&gt;{{#each}}&lt;/code&gt; 可以具有匹配的 &lt;code&gt;{{else}}&lt;/code&gt; 。如果集合为空，则此块的内容将呈现。</target>
        </trans-unit>
        <trans-unit id="98eeaffa3e4259ed98846b266cc595808fa88337" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{{action}}&lt;/code&gt; Helper</source>
          <target state="translated">&lt;code&gt;{{action}}&lt;/code&gt; 帮手</target>
        </trans-unit>
        <trans-unit id="5cd36603dde01493ba5e1de43cf78186eb8f263e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{{action}}&lt;/code&gt; has a number of functions, including:</source>
          <target state="translated">&lt;code&gt;{{action}}&lt;/code&gt; 具有许多功能，包括：</target>
        </trans-unit>
        <trans-unit id="a2733141d4f944abe841a01665d1460a422c0218" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{{action}}&lt;/code&gt; helpers called in element space can control event bubbling. Note that the closure style actions cannot.</source>
          <target state="translated">&lt;code&gt;{{action}}&lt;/code&gt; 在元素空间中调用的{{action}}帮助者可以控制事件冒泡。请注意，关闭样式操作不能。</target>
        </trans-unit>
        <trans-unit id="05791ad0510969290c2bf27d66e803138e3b3c84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{{action}}&lt;/code&gt; helpers called in element space can specify an event type. By default the &lt;code&gt;{{action}}&lt;/code&gt; helper registers for DOM &lt;code&gt;click&lt;/code&gt; events. You can supply an &lt;code&gt;on&lt;/code&gt; option to the helper to specify a different DOM event name:</source>
          <target state="translated">&lt;code&gt;{{action}}&lt;/code&gt; 在元素空间中调用的{{action}}帮助者可以指定事件类型。默认情况下， &lt;code&gt;{{action}}&lt;/code&gt; 帮助程序会注册DOM &lt;code&gt;click&lt;/code&gt; 事件。您可以向助手提供 &lt;code&gt;on&lt;/code&gt; 选项，以指定其他DOM事件名称：</target>
        </trans-unit>
        <trans-unit id="378f393afeb3d3a439375c602cebb9b358a8a4cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{{action}}&lt;/code&gt; helpers called in element space can specify modifier keys. By default the &lt;code&gt;{{action}}&lt;/code&gt; helper will ignore click events with pressed modifier keys. You can supply an &lt;code&gt;allowedKeys&lt;/code&gt; option to specify which keys should not be ignored.</source>
          <target state="translated">&lt;code&gt;{{action}}&lt;/code&gt; 在元素空间中调用的{{action}}助手可以指定修饰键。默认情况下， &lt;code&gt;{{action}}&lt;/code&gt; 助手将忽略按下修改键的点击事件。您可以提供 &lt;code&gt;allowedKeys&lt;/code&gt; 选项来指定不应忽略的键。</target>
        </trans-unit>
        <trans-unit id="d2dd2ced1f7d6843a68a861199c1a16339130ebf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{{else}}&lt;/code&gt; can chain helper invocation, the most common usecase for this being &lt;code&gt;{{else if}}&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;{{else}}&lt;/code&gt; 可以链接帮助程序调用，最常见的用例是 &lt;code&gt;{{else if}}&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="1695369a7c4d01374b8e4402014a14cc507c6e16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{{fn}}&lt;/code&gt; is a helper that adds arguments to another function or callback</source>
          <target state="translated">&lt;code&gt;{{fn}}&lt;/code&gt; 是一个将参数添加到另一个函数或回调的助手</target>
        </trans-unit>
        <trans-unit id="9db2e2592216d0bc5bd22d80022d4d1671c0c921" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{{fn}}&lt;/code&gt; is a helper that receives a function and some arguments, and returns a new function that combines. This allows you to pass parameters along to functions in your templates:</source>
          <target state="translated">&lt;code&gt;{{fn}}&lt;/code&gt; 是一个助手，它接收一个函数和一些参数，并返回一个合并的新函数。这使您可以将参数传递给模板中的函数：</target>
        </trans-unit>
        <trans-unit id="6cb0cb7187cd186e4a6249523b64061e61791ef3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{{has-block-params}}&lt;/code&gt; indicates if the component was invoked with block params.</source>
          <target state="translated">&lt;code&gt;{{has-block-params}}&lt;/code&gt; 指示是否使用块参数调用了该组件。</target>
        </trans-unit>
        <trans-unit id="27e645e206db4c80af39e0cd372c323c60919de0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{{has-block}}&lt;/code&gt; indicates if the component was invoked with a block.</source>
          <target state="translated">&lt;code&gt;{{has-block}}&lt;/code&gt; 指示是否使用块调用了该组件。</target>
        </trans-unit>
        <trans-unit id="6ab0e99c18559fec1bbd241a050ddd3f30e71a64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{{in-element}}&lt;/code&gt; requires a single positional argument:</source>
          <target state="translated">&lt;code&gt;{{in-element}}&lt;/code&gt; 需要一个位置参数：</target>
        </trans-unit>
        <trans-unit id="4f9552cca283b2a9929f75f8cf57778df680e26a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{{link-to}}&lt;/code&gt; creates an instance of &lt;code&gt;Ember.LinkComponent&lt;/code&gt; for rendering. To override options for your entire application, reopen &lt;code&gt;Ember.LinkComponent&lt;/code&gt; and supply the desired values:</source>
          <target state="translated">&lt;code&gt;{{link-to}}&lt;/code&gt; 创建一个 &lt;code&gt;Ember.LinkComponent&lt;/code&gt; 实例进行渲染。要覆盖整个应用程序的选项，请重新打开 &lt;code&gt;Ember.LinkComponent&lt;/code&gt; 并提供所需的值：</target>
        </trans-unit>
        <trans-unit id="c0038b8bc8c19968daf10f69bf3a0ea5d6fea054" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{{link-to}}&lt;/code&gt; will apply a CSS class name of 'active' when the application's current route matches the supplied routeName. For example, if the application's current route is 'photoGallery.recent' the following use of &lt;code&gt;{{link-to}}&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;{{link-to}}&lt;/code&gt; 当应用程序的当前路由与提供的routeName匹配时，{{link-to}}将应用CSS类名称&amp;ldquo; active&amp;rdquo;。例如，如果应用程序的当前路径是&amp;ldquo; photoGallery.recent&amp;rdquo;，则以下使用 &lt;code&gt;{{link-to}}&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="deca444a2ebb87cfb6deb69549dd1ccb615bebb4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{{link-to}}&lt;/code&gt; will use your application's Router to fill the element's &lt;code&gt;href&lt;/code&gt; property with a url that matches the path to the supplied &lt;code&gt;routeName&lt;/code&gt; for your router's configured &lt;code&gt;Location&lt;/code&gt; scheme, which defaults to Ember.HashLocation.</source>
          <target state="translated">&lt;code&gt;{{link-to}}&lt;/code&gt; 将使用您应用程序的Router来为元素的 &lt;code&gt;href&lt;/code&gt; 属性填充一个URL，该URL与路由器配置的 &lt;code&gt;Location&lt;/code&gt; 方案（默认为Ember.HashLocation）所提供的 &lt;code&gt;routeName&lt;/code&gt; 的路径相匹配。</target>
        </trans-unit>
        <trans-unit id="a5e3ab643bbd1b3c2894c95ec49692bc206b5f3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{{on}}&lt;/code&gt; accepts two positional arguments, and a few named arguments.</source>
          <target state="translated">&lt;code&gt;{{on}}&lt;/code&gt; 接受两个位置参数和一些命名参数。</target>
        </trans-unit>
        <trans-unit id="a251d18672e8c38309b3bafa0f7861c5ce41d962" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{{on}}&lt;/code&gt; is a modifier that's used to add event listeners to DOM elements</source>
          <target state="translated">&lt;code&gt;{{on}}&lt;/code&gt; 是用于将事件侦听器添加到DOM元素的修饰符</target>
        </trans-unit>
        <trans-unit id="bfa2f0585da6d8869b6bae5b167c37a53e3c6091" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{{textarea}}&lt;/code&gt; inserts a new instance of &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; tag into the template. The attributes of &lt;code&gt;{{textarea}}&lt;/code&gt; match those of the native HTML tags as closely as possible.</source>
          <target state="translated">&lt;code&gt;{{textarea}}&lt;/code&gt; 将 &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; 标记的新实例插入模板。 &lt;code&gt;{{textarea}}&lt;/code&gt; 的属性尽可能与本地HTML标记的属性匹配。</target>
        </trans-unit>
        <trans-unit id="3bb23098d256a9053ad8b2bcb60471ceac85cd91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{{yield}}&lt;/code&gt; denotes an area of a template that will be rendered inside of another template.</source>
          <target state="translated">&lt;code&gt;{{yield}}&lt;/code&gt; 表示将在另一个模板内部呈现的模板区域。</target>
        </trans-unit>
        <trans-unit id="449ad7745d93dd02243fb0df7ed9515b890c12ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{{yield}}&lt;/code&gt; is named after a similar concept in scripting languages, including Ruby, JavaScript and Python. You don't need to understand the connection in order to use it, but if you're in the mood for a tangent, check out &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/yield&quot;&gt; the yield operator in JavaScript &lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;{{yield}}&lt;/code&gt; 以脚本语言（包括Ruby，JavaScript和Python）中的类似概念命名。您不需要了解连接就可以使用它，但是如果您想切线，请查看&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/yield&quot;&gt;JavaScript中的yield运算符&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5b8b7274a311e5fa9d3593da809a7c2d3bb1e44a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(If you're looking to adjust how the data sent to the backend is formatted, check the &lt;a href=&quot;../customizing-serializers&quot;&gt;serializer&lt;/a&gt; page.)&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;（如果要调整发送到后端的数据的格式，请检查&lt;a href=&quot;../customizing-serializers&quot;&gt;序列化器&lt;/a&gt;页面。）&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="689494e4cf34ca9e5c569a66a7ed8dda781a2043" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt; Observers are often over-used by new Ember developers. Observers are used heavily within the Ember framework itself, but for most problems Ember app developers face, computed properties are the appropriate solution.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;strong&gt;注意：&lt;/strong&gt;观察者经常被新的Ember开发人员过度使用。观察者在Ember框架本身中被大量使用，但是对于Ember应用开发人员面临的大多数问题，计算属性是合适的解决方案。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2eb9be22329d25ad15267a05e9d2b52cc21fbc6a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Arguments&lt;/em&gt; and &lt;em&gt;attributes&lt;/em&gt; are distinguished from each other when using a component. With curly brace style components, every value you pass to the component is an &lt;em&gt;argument&lt;/em&gt; - a JS value that is passed to the component class so it can be used in the component's template:</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;使用组件时，&lt;em&gt;参数&lt;/em&gt;和&lt;em&gt;属性&lt;/em&gt;彼此区分开。对于花括号样式的组件，传递给组件的每个值都是一个&lt;em&gt;参数&lt;/em&gt;-一个JS值，该值传递给组件类，以便可以在组件的模板中使用：</target>
        </trans-unit>
        <trans-unit id="e8d80a8cbd4782b96da9ea7ec528966cc0842853" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Arguments&lt;/em&gt; are passed by adding &lt;code&gt;@&lt;/code&gt; to the front of the argument name:</source>
          <target state="translated">&lt;em&gt;参数&lt;/em&gt;是通过添加通过 &lt;code&gt;@&lt;/code&gt; 的说法名字的前面：</target>
        </trans-unit>
        <trans-unit id="22fdb3fba85e6b3c7fec7c0b1a9f9c49d04fe4f5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Container testing methods and computed properties follow previous patterns shown in &lt;a href=&quot;../unit-testing-basics&quot;&gt;Testing Basics&lt;/a&gt; because DS.Model extends Ember.Object.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;容器测试方法和计算的属性遵循&amp;ldquo;&lt;a href=&quot;../unit-testing-basics&quot;&gt;测试基础&amp;rdquo;中&lt;/a&gt;显示的先前模式，因为DS.Model扩展了Ember.Object。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2630d18fc2e406525b0064aaeaf22ead115bb333" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Container testing methods and computed properties follow previous patterns shown in &lt;a href=&quot;../unit-testing-basics&quot;&gt;Testing Basics&lt;/a&gt; because Ember.Controller extends Ember.Object.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;容器测试方法和计算的属性遵循&amp;ldquo;&lt;a href=&quot;../unit-testing-basics&quot;&gt;测试基础&amp;rdquo;中&lt;/a&gt;显示的先前模式，因为Ember.Controller扩展了Ember.Object。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a3cb14f46cf04d516849d2b84e8496c30c51b121" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Container testing methods and computed properties follow previous patterns shown in &lt;a href=&quot;../unit-testing-basics&quot;&gt;Testing Basics&lt;/a&gt; because Ember.Route extends Ember.Object.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;容器测试方法和计算的属性遵循&amp;ldquo;&lt;a href=&quot;../unit-testing-basics&quot;&gt;测试基础&amp;rdquo;中&lt;/a&gt;显示的先前模式，因为Ember.Route扩展了Ember.Object。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4168ec52f655f36631e66fd7d22e6c23d65fd54e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Ember Data contains extensive tests around the functionality of relationships, so you probably don't need to duplicate those tests. You could look at the &lt;a href=&quot;https://github.com/emberjs/data/tree/master/packages/-ember-data/tests&quot;&gt;Ember Data tests&lt;/a&gt; for examples of deeper relationship testing if you feel the need to do it.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Ember Data包含有关关系功能的大量测试，因此您可能不需要重复这些测试。如果您认为需要进行更深层次的关系测试，则可以查看&lt;a href=&quot;https://github.com/emberjs/data/tree/master/packages/-ember-data/tests&quot;&gt;Ember Data测试&lt;/a&gt;，以获取更深入的关系测试的示例。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9e52c0e9df1f8007b8fa39ff4370f926847d3142" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Ember Data contains extensive tests around the functionality of relationships, so you probably don't need to duplicate those tests. You could look at the &lt;a href=&quot;https://github.com/emberjs/data/tree/master/tests&quot;&gt;Ember Data tests&lt;/a&gt; for examples of deeper relationship testing if you feel the need to do it.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Ember Data包含有关关系功能的大量测试，因此您可能不需要重复这些测试。如果您认为需要进行更深入的关系测试，则可以查看&lt;a href=&quot;https://github.com/emberjs/data/tree/master/tests&quot;&gt;Ember Data测试&lt;/a&gt;以获取示例。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a5dae2659b437258c14bcbf452cf7100e0ed3253" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Example activating a single feature flags&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;激活单个功能标志的示例&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="74f329ff3bdf0f6b99a0633c091088578e9c3017" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Example activating all feature flags&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;激活所有功能标志的示例&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="81978c3a0947ee8d118cc80281f5f9d07666b12f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Example activating multiple feature flags&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;激活多个功能标志的示例&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="64ff84b650695ae2b8968214d3a7567a75988678" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;For basic Ember app development scenarios, you don't need to understand the run loop or use it directly. All common paths are paved nicely for you and don't require working with the run loop.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;对于基本的Ember应用程序开发方案，您无需了解运行循环或直接使用它。所有常见路径都为您铺好了道路，不需要使用run循环。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e40ab1b0ac4294a70f9e27bee9a40b39b7d741fc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;However, the run loop will be helpful to understand the internals of Ember and to assist in customized performance tuning by manually batching costly work.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;但是，运行循环将有助于了解Ember的内部结构，并通过手动批处理昂贵的工作来帮助自定义性能调整。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9677ebe867a9172a502580324ee40c591f2b79ff" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note: If you want this file created for you, you may pass the &lt;code&gt;-gc&lt;/code&gt; flag when running the component generator.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;注意：如果要为您创建此文件，则在运行组件生成器时可以传递 &lt;code&gt;-gc&lt;/code&gt; 标志。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2e8fee5df7db30627796f8d838f7eba72bf0022e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note: Running &lt;code&gt;ember help generate&lt;/code&gt; will list a number of other Ember resources you can create as well ...&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;注意：运行 &lt;code&gt;ember help generate&lt;/code&gt; 会列出您可以创建的许多其他Ember资源...&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="706ae6f36316e23b84b7cdc356fd0c0616c5dfd2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note: This is a synchronous method and does not return a promise.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;注意：这是一个同步方法，不会返回promise。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2ed21641ed7fb74f77120527278d0d5075345661" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note: This is the preferred way to define computed properties when writing third-party libraries that depend on or use Ember, since there is no guarantee that the user will have &lt;a href=&quot;https://emberjs.com/guides/configuring-ember/disabling-prototype-extensions/&quot;&gt;prototype Extensions&lt;/a&gt; enabled.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;注意：这是编写依赖或使用Ember的第三方库时定义计算属性的首选方法，因为不能保证用户将启用&lt;a href=&quot;https://emberjs.com/guides/configuring-ember/disabling-prototype-extensions/&quot;&gt;原型扩展&lt;/a&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="27d30dc49662551bea13ca14a257df485a5be2a7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note: This is the preferred way to define computed properties when writing third-party libraries that depend on or use Ember, since there is no guarantee that the user will have &lt;a href=&quot;https://guides.emberjs.com/release/configuring-ember/disabling-prototype-extensions/&quot;&gt;prototype Extensions&lt;/a&gt; enabled.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;注意：这是编写依赖或使用Ember的第三方库时定义计算属性的首选方法，因为不能保证用户将启用&lt;a href=&quot;https://guides.emberjs.com/release/configuring-ember/disabling-prototype-extensions/&quot;&gt;原型扩展&lt;/a&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="51cec1a3154e894167b2f27764d0ddf204e09791" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Testing helpers follows previous patterns shown in &lt;a href=&quot;../testing-components&quot;&gt;Testing Components&lt;/a&gt;, because helpers are rendered to templates just like components.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;测试帮助程序遵循&amp;ldquo;&lt;a href=&quot;../testing-components&quot;&gt;测试组件&amp;rdquo;中&lt;/a&gt;显示的先前模式，因为帮助程序就像组件一样呈现到模板中。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="eac44ade16abccd7dafaca8fc3101650eac8af45" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Testing helpers follows previous patterns shown in &lt;a href=&quot;../unit-testing-basics&quot;&gt;Testing Components&lt;/a&gt;, because helpers are rendered to templates just like components.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;测试帮助程序遵循&amp;ldquo; &lt;a href=&quot;../unit-testing-basics&quot;&gt;测试组件&amp;rdquo;中&lt;/a&gt;显示的先前模式，因为帮助程序就像组件一样呈现到模板。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="82971b63a81f0faa64d4bf3a20cbdc0cf0478088" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Unit testing methods and computed properties follows previous patterns shown in &lt;a href=&quot;../unit-testing-basics&quot;&gt;Unit Testing Basics&lt;/a&gt; because DS.Model extends Ember.Object.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;单元测试方法和计算的属性遵循&lt;a href=&quot;../unit-testing-basics&quot;&gt;单元测试基础中&lt;/a&gt;显示的先前模式，因为DS.Model扩展了Ember.Object。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ae309bf6d7dbcd84ecb99cf6da4eb83cc26bd5ae" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Unit testing methods and computed properties follows previous patterns shown in &lt;a href=&quot;../unit-testing-basics&quot;&gt;Unit Testing Basics&lt;/a&gt; because Ember.Controller extends Ember.Object.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;单元测试方法和计算的属性遵循&lt;a href=&quot;../unit-testing-basics&quot;&gt;单元测试基础中&lt;/a&gt;显示的先前模式，因为Ember.Controller扩展了Ember.Object。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c389359434413ae33eea0ba4a1c2121a4e6a9c52" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Unit testing methods and computed properties follows previous patterns shown in &lt;a href=&quot;../unit-testing-basics&quot;&gt;Unit Testing Basics&lt;/a&gt; because Ember.Route extends Ember.Object.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;单元测试方法和计算的属性遵循&lt;a href=&quot;../unit-testing-basics&quot;&gt;单元测试基础中&lt;/a&gt;显示的先前模式，因为Ember.Route扩展了Ember.Object。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e8eb8ed9603046544804b3678f879d8715973eba" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Using &lt;code&gt;npm&lt;/code&gt; to install the latest canary&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;使用 &lt;code&gt;npm&lt;/code&gt; 安装最新的Canary&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dcd93ffea3932736c424b2ed841db78e61b86ec4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Using &lt;code&gt;yarn&lt;/code&gt; to install the latest canary&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;使用 &lt;code&gt;yarn&lt;/code&gt; 安装最新的金丝雀&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="385a696d71ee3f161d0f20db1653880ea60cb377" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;When&lt;/em&gt; the returned promise resolves depends on the reload behavior, configured via the passed &lt;code&gt;options&lt;/code&gt; hash and the result of the adapter's &lt;code&gt;shouldReloadAll&lt;/code&gt; method.</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;返回的承诺&lt;em&gt;何时&lt;/em&gt;解析取决于重新加载行为，该重新加载行为是通过传递的 &lt;code&gt;options&lt;/code&gt; 哈希值和适配器的 &lt;code&gt;shouldReloadAll&lt;/code&gt; 方法的结果进行配置的。</target>
        </trans-unit>
        <trans-unit id="d6f22ffa25125d285be7312fe2bd8bc4ef7248e2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;array&lt;/em&gt; is the array itself.</source>
          <target state="translated">&lt;em&gt;array&lt;/em&gt;是数组本身。</target>
        </trans-unit>
        <trans-unit id="79fa6302336be17d32266b0bbc6beac111d678fe" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;enumerable&lt;/em&gt; is the enumerable object itself.</source>
          <target state="translated">&lt;em&gt;可枚举&lt;/em&gt;是可枚举的对象本身。</target>
        </trans-unit>
        <trans-unit id="85fe9b4e4d5c8cbc9740af7a5d4190018b12b3b0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;index&lt;/em&gt; is the current index in the iteration</source>
          <target state="translated">&lt;em&gt;index&lt;/em&gt;是迭代中的当前索引</target>
        </trans-unit>
        <trans-unit id="49183ea4f2fe6acaae08b6b408b09f95ff3e0b34" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;item&lt;/em&gt; is the current item in the iteration.</source>
          <target state="translated">&lt;em&gt;item&lt;/em&gt;是迭代中的当前项目。</target>
        </trans-unit>
        <trans-unit id="95b5d3834d6ad212fa382fba6d63cda1f2c15c13" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&quot;Outer HTML&quot; templates&lt;/strong&gt; that support fragments and easily customizing the root element.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;支持片段并轻松自定义根元素的&lt;strong&gt;&amp;ldquo;外部HTML&amp;rdquo;模板&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="925af3f3d94cece406414fdd80ca210eab7212ef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&quot;inner HTML&quot; components&lt;/strong&gt;, and the confusing JavaScript API used to configure a component's root element, like &lt;code&gt;tagName&lt;/code&gt;, &lt;code&gt;classNameBindings&lt;/code&gt;, etc. Now, there's no wrapping element.</source>
          <target state="translated">&lt;strong&gt;&amp;ldquo;内部HTML&amp;rdquo;组件&lt;/strong&gt;，以及用于配置组件的根元素（如 &lt;code&gt;tagName&lt;/code&gt; ， &lt;code&gt;classNameBindings&lt;/code&gt; 等）的令人困惑的JavaScript API 。现在，没有包装元素。</target>
        </trans-unit>
        <trans-unit id="6a161453ca91297099d8a63eb17d149be805eb6f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;&amp;lt;AngleBracket&amp;gt;&lt;/code&gt; syntax&lt;/strong&gt; for better readability.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;&amp;lt;AngleBracket&amp;gt;&lt;/code&gt; 语法&lt;/strong&gt;可提高可读性。</target>
        </trans-unit>
        <trans-unit id="49a14964903307d811b50a88b1ff45287fbcbe6d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Always&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Always&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fcddfc39a25249163aac32ced5983e2c4baa34ac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Async functions&lt;/strong&gt; (&lt;code&gt;async&lt;/code&gt;/&lt;code&gt;await&lt;/code&gt;) for authoring asynchronous code.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;用于编写异步代码的&lt;strong&gt;异步函数&lt;/strong&gt;（ &lt;code&gt;async&lt;/code&gt; / &lt;code&gt;await&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="e18433f975c9d90cee2e008ceaceb1adb00ad419" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Classes&lt;/strong&gt; - classes are one of the most fundamental constructs in JavaScript, and are used frequently in Ember. See the next section for more details on them.</source>
          <target state="translated">&lt;strong&gt;类&lt;/strong&gt;-类是JavaScript中最基本的构造之一，在Ember中经常使用。有关它们的更多详细信息，请参见下一部分。</target>
        </trans-unit>
        <trans-unit id="1e8b37de342e0ddbb7c6ba5658a28580b5071304" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Classic&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Classic&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="05cef3c287bbcd1f5253f36e4483a8427ca99f47" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Computed properties and observers&lt;/strong&gt;, and other legacy features of the Ember object model are replaced by &lt;code&gt;@tracked&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;计算的属性和观察器&lt;/strong&gt;以及Ember对象模型的其他旧功能由 &lt;code&gt;@tracked&lt;/code&gt; 代替。</target>
        </trans-unit>
        <trans-unit id="9a8ccf31a58d8f1295eabd0b8da59f36f192060f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Curly component invocation&lt;/strong&gt; of components, eliminating the ambiguity in templates between values and DOM creation. Use Angle Brackets instead.</source>
          <target state="translated">&lt;strong&gt;卷曲组件的组件调用&lt;/strong&gt;，消除了模板在值和DOM创建之间的歧义。请改用尖括号。</target>
        </trans-unit>
        <trans-unit id="a32a73d53f08eb1573f91c119833e2903a4daebd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Customizable DOM attributes&lt;/strong&gt; with &lt;code&gt;...attributes&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;具有 &lt;code&gt;...attributes&lt;/code&gt; 的&lt;strong&gt;可定制DOM&lt;/strong&gt;属性。</target>
        </trans-unit>
        <trans-unit id="5bfedfebcc6a03ac79f4db176da6a215cbc5e973" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deploying to Netlify using Git (specifically GitHub)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;使用Git部署到Netlify（特别是GitHub）&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9f6c05ec602f6003695e564b197c2b7e51c4137f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deploying to Netlify using drag and drop&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;使用拖放部署到Netlify&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0e5ccd44a41b0bb9d3cf5ae59b52fac819fb2aa9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ES2015 modules&lt;/strong&gt; - you will better understand &lt;a href=&quot;https://ember-cli.com/&quot;&gt;Ember CLI's&lt;/a&gt; project structure and import paths if you are comfortable with &lt;a href=&quot;http://jsmodules.io/&quot;&gt;JavaScript Modules&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;ES2015模块&lt;/strong&gt; - 如果您熟悉&lt;a href=&quot;http://jsmodules.io/&quot;&gt;JavaScript模块，&lt;/a&gt;则可以更好地了解&lt;a href=&quot;https://ember-cli.com/&quot;&gt;Ember CLI的&lt;/a&gt;项目结构和导入路径。</target>
        </trans-unit>
        <trans-unit id="9c46ecfeeea61ed97d436272e76ad26d93eeba50" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ES2015 syntax&lt;/strong&gt; - Ember CLI comes with Babel.js by default so you can take advantage of newer language features such as arrow functions, template strings, destructuring, and more. You can check the &lt;a href=&quot;https://babeljs.io/docs/learn-es2015/&quot;&gt;Babel.js documentation&lt;/a&gt; or read &lt;a href=&quot;https://leanpub.com/understandinges6/read&quot;&gt;Understanding ECMAScript 6&lt;/a&gt; online.</source>
          <target state="translated">&lt;strong&gt;ES2015语法&lt;/strong&gt; -默认情况下，Babel.js附带了Ember CLI，因此您可以利用更新的语言功能，例如箭头功能，模板字符串，解构等等。您可以查看&lt;a href=&quot;https://babeljs.io/docs/learn-es2015/&quot;&gt;Babel.js文档&lt;/a&gt;或在线阅读&amp;ldquo; &lt;a href=&quot;https://leanpub.com/understandinges6/read&quot;&gt;了解ECMAScript 6&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d8178cea617c38b4f6c55e551e78caf1f7fced2e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Events&lt;/strong&gt; - The native way to deal with user input in browser based web applications. Events are not part of the language of JavaScript itself, but they are part of the browser environment that JavaScript runs in, and they are used commonly in Ember. You can read the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events&quot;&gt;MDN introduction to events&lt;/a&gt; for more details.</source>
          <target state="translated">&lt;strong&gt;事件&lt;/strong&gt;-处理基于浏览器的Web应用程序中的用户输入的本机方式。事件不是JavaScript本身语言的一部分，但它们是JavaScript运行于其中的浏览器环境的一部分，它们通常在Ember中使用。您可以阅读&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events&quot;&gt;MDN事件简介，以&lt;/a&gt;了解更多详细信息。</target>
        </trans-unit>
        <trans-unit id="6e63731329f86b9d2e6f2cc0fbbf551d8f0e1140" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;HTML, CSS, JavaScript&lt;/strong&gt; - the building blocks of web pages. You can find documentation of each of these technologies at the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web&quot;&gt;Mozilla Developer Network&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;HTML，CSS，JavaScript-&lt;/strong&gt;网页的组成部分。您可以在&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web&quot;&gt;Mozilla开发人员网络上&lt;/a&gt;找到有关每种技术的文档。</target>
        </trans-unit>
        <trans-unit id="4b86e4ea5878f95f36d2877e5157e7458382c7c6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Modules&lt;/strong&gt; - you will better understand &lt;a href=&quot;https://ember-cli.com/&quot;&gt;Ember CLI's&lt;/a&gt; project structure and import paths if you are comfortable with &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules&quot;&gt;JavaScript Modules&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;模块&lt;/strong&gt;-如果您熟悉&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules&quot;&gt;JavaScript模块，&lt;/a&gt;则可以更好地了解&lt;a href=&quot;https://ember-cli.com/&quot;&gt;Ember CLI的&lt;/a&gt;项目结构和导入路径。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
