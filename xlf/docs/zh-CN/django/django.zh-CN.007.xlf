<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="django">
    <body>
      <group id="django">
        <trans-unit id="66c9ccae10ed2b23694f765b4228417a4924e330" translate="yes" xml:space="preserve">
          <source>Finally we combine the parts into an SQL expression with &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt;, and supply all the parameters for the query. We then return a tuple containing the generated SQL string and the parameters.</source>
          <target state="translated">最后，我们将这些部分与 &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; 组合成一个SQL表达式，并提供查询的所有参数。然后，我们返回一个包含生成的SQL字符串和参数的元组。</target>
        </trans-unit>
        <trans-unit id="d2eb2a2b36ade57b93d5586d25a607a90abeb603" translate="yes" xml:space="preserve">
          <source>Finally, &lt;a href=&quot;../../../../topics/install#installing-official-release&quot;&gt;install Django&lt;/a&gt; on your system.</source>
          <target state="translated">最后，在系统上&lt;a href=&quot;../../../../topics/install#installing-official-release&quot;&gt;安装Django&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5484ec9866989dbfac8528bb6dd3db714dd1ddce" translate="yes" xml:space="preserve">
          <source>Finally, &lt;code&gt;as_table()&lt;/code&gt; outputs the form as an HTML &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt;. This is exactly the same as &lt;code&gt;print&lt;/code&gt;. In fact, when you &lt;code&gt;print&lt;/code&gt; a form object, it calls its &lt;code&gt;as_table()&lt;/code&gt; method behind the scenes:</source>
          <target state="translated">最后， &lt;code&gt;as_table()&lt;/code&gt; 将表单输出为HTML &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; 。这与 &lt;code&gt;print&lt;/code&gt; 完全相同。实际上，当您 &lt;code&gt;print&lt;/code&gt; 表单对象时，它会在 &lt;code&gt;as_table()&lt;/code&gt; 调用其as_table（）方法：</target>
        </trans-unit>
        <trans-unit id="f6603469a430fe7317c80ca09845bcdc21b75157" translate="yes" xml:space="preserve">
          <source>Finally, &lt;code&gt;full_clean()&lt;/code&gt; will check any unique constraints on your model.</source>
          <target state="translated">最后， &lt;code&gt;full_clean()&lt;/code&gt; 将检查模型上的所有唯一约束。</target>
        </trans-unit>
        <trans-unit id="2019efad06892eaf93b5bf539df6adb0e0145d27" translate="yes" xml:space="preserve">
          <source>Finally, &lt;code&gt;register.filter()&lt;/code&gt; also accepts three keyword arguments, &lt;code&gt;is_safe&lt;/code&gt;, &lt;code&gt;needs_autoescape&lt;/code&gt;, and &lt;code&gt;expects_localtime&lt;/code&gt;. These arguments are described in &lt;a href=&quot;#filters-auto-escaping&quot;&gt;filters and auto-escaping&lt;/a&gt; and &lt;a href=&quot;#filters-timezones&quot;&gt;filters and time zones&lt;/a&gt; below.</source>
          <target state="translated">最后， &lt;code&gt;register.filter()&lt;/code&gt; 也接受三个关键字参数， &lt;code&gt;is_safe&lt;/code&gt; ， &lt;code&gt;needs_autoescape&lt;/code&gt; 和 &lt;code&gt;expects_localtime&lt;/code&gt; 。这些参数在下面的&lt;a href=&quot;#filters-auto-escaping&quot;&gt;过滤器和自动转义&lt;/a&gt;以及&lt;a href=&quot;#filters-timezones&quot;&gt;过滤器和时区&lt;/a&gt;中进行了描述。</target>
        </trans-unit>
        <trans-unit id="306b5cee8ba18e692cafa08cb4f14f745f2e0c11" translate="yes" xml:space="preserve">
          <source>Finally, Django comes with a &amp;ldquo;dummy&amp;rdquo; cache that doesn&amp;rsquo;t actually cache &amp;ndash; it just implements the cache interface without doing anything.</source>
          <target state="translated">最后，Django带有一个&amp;ldquo;虚拟&amp;rdquo;缓存，该缓存实际上并没有缓存-它只是实现了缓存接口而无所事事。</target>
        </trans-unit>
        <trans-unit id="40267a26a72668706858d04af947447e24d778f6" translate="yes" xml:space="preserve">
          <source>Finally, Django uses the concept of &amp;ldquo;template inheritance&amp;rdquo;. That&amp;rsquo;s what the &lt;code&gt;{% extends &quot;base.html&quot; %}&lt;/code&gt; does. It means &amp;ldquo;First load the template called &amp;lsquo;base&amp;rsquo;, which has defined a bunch of blocks, and fill the blocks with the following blocks.&amp;rdquo; In short, that lets you dramatically cut down on redundancy in templates: each template has to define only what&amp;rsquo;s unique to that template.</source>
          <target state="translated">最后，Django使用&amp;ldquo;模板继承&amp;rdquo;的概念。这就是 &lt;code&gt;{% extends &quot;base.html&quot; %}&lt;/code&gt; 作用。它的意思是&amp;ldquo;首先加载名为'base'的模板，该模板已定义了许多块，并在随后的块中填充了这些块。&amp;rdquo; 简而言之，这使您可以大大减少模板中的冗余：每个模板只需要定义该模板唯一的内容。</target>
        </trans-unit>
        <trans-unit id="82301c6099c024cf55f29af10873bbd58c163855" translate="yes" xml:space="preserve">
          <source>Finally, MySQL has relatively small limits on name lengths for columns, tables and indexes, as well as a limit on the combined size of all columns an index covers. This means that indexes that are possible on other backends will fail to be created under MySQL.</source>
          <target state="translated">最后,MySQL对列、表和索引的名称长度限制相对较小,对索引覆盖的所有列的组合大小也有限制。这意味着,在其他后端上可以创建的索引在MySQL下将无法创建。</target>
        </trans-unit>
        <trans-unit id="e1fe06beb5b184511b52b82db0d899291a197824" translate="yes" xml:space="preserve">
          <source>Finally, a word on using &lt;code&gt;get_or_create()&lt;/code&gt; in Django views. Please make sure to use it only in &lt;code&gt;POST&lt;/code&gt; requests unless you have a good reason not to. &lt;code&gt;GET&lt;/code&gt; requests shouldn&amp;rsquo;t have any effect on data. Instead, use &lt;code&gt;POST&lt;/code&gt; whenever a request to a page has a side effect on your data. For more, see &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html#section-4.2.1&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;Safe methods&lt;/strong&gt;&lt;/a&gt; in the HTTP spec.</source>
          <target state="translated">最后， &lt;code&gt;get_or_create()&lt;/code&gt; 在Django视图中使用get_or_create（）的方法。除非有充分的理由，否则请确保仅在 &lt;code&gt;POST&lt;/code&gt; 请求中使用它。 &lt;code&gt;GET&lt;/code&gt; 请求不应对数据有任何影响。相反，只要对页面的请求对数据有副作用，请使用 &lt;code&gt;POST&lt;/code&gt; 。有关更多信息，请参见HTTP规范中的&lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html#section-4.2.1&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;安全方法&lt;/strong&gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c40eaec225e59882f800eba203e6c05081d41e93" translate="yes" xml:space="preserve">
          <source>Finally, avoid aliasing your settings as module-level constants as &lt;code&gt;override_settings()&lt;/code&gt; won&amp;rsquo;t work on such values since they are only evaluated the first time the module is imported.</source>
          <target state="translated">最后，避免将您的设置别名为模块级常量，因为 &lt;code&gt;override_settings()&lt;/code&gt; 不适用于此类值，因为它们仅在首次导入模块时才进行评估。</target>
        </trans-unit>
        <trans-unit id="ff9baca2e992a0e98a104ea1b4ce704e7121cf14" translate="yes" xml:space="preserve">
          <source>Finally, before you deploy your application to production, you should run through our &lt;a href=&quot;checklist&quot;&gt;deployment checklist&lt;/a&gt; to ensure that your configurations are suitable.</source>
          <target state="translated">最后，在将应用程序部署到生产环境之前，应运行我们的&lt;a href=&quot;checklist&quot;&gt;部署清单，&lt;/a&gt;以确保您的配置合适。</target>
        </trans-unit>
        <trans-unit id="12e5c631fd09eda57ca89fcce607cf3f3163a88e" translate="yes" xml:space="preserve">
          <source>Finally, browse to &lt;code&gt;http://localhost:8000/admin/&lt;/code&gt;, and log in with the user you just created. Browse to any of the &lt;code&gt;WorldBorder&lt;/code&gt; entries &amp;ndash; the borders may be edited by clicking on a polygon and dragging the vertices to the desired position.</source>
          <target state="translated">最后，浏览至 &lt;code&gt;http://localhost:8000/admin/&lt;/code&gt; ，然后以刚刚创建的用户身份登录。浏览到任何 &lt;code&gt;WorldBorder&lt;/code&gt; 条目-可以通过单击多边形并将顶点拖动到所需位置来编辑边框。</target>
        </trans-unit>
        <trans-unit id="75df61e6676393f69526cf860e9d09ffe21f5dcf" translate="yes" xml:space="preserve">
          <source>Finally, configure, make and install PROJ.4:</source>
          <target state="translated">最后,配置、制作并安装PROJ.4。</target>
        </trans-unit>
        <trans-unit id="7a496304035024f7826ec5200acb03a7378bec7f" translate="yes" xml:space="preserve">
          <source>Finally, determine which of your application&amp;rsquo;s models should be editable in the admin interface. For each of those models, register them with the admin as described in &lt;a href=&quot;#django.contrib.admin.ModelAdmin&quot;&gt;&lt;code&gt;ModelAdmin&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">最后，确定您的应用程序模型中的哪些模型应在管理界面中可编辑。对于每个模型，请按照&lt;a href=&quot;#django.contrib.admin.ModelAdmin&quot;&gt; &lt;code&gt;ModelAdmin&lt;/code&gt; 中的说明&lt;/a&gt;向管理员注册。</target>
        </trans-unit>
        <trans-unit id="82548b98e5f57caa40011e280e83e68504a44c79" translate="yes" xml:space="preserve">
          <source>Finally, edit your WSGI script &lt;code&gt;mysite.wsgi&lt;/code&gt; to tie Apache&amp;rsquo;s authentication to your site&amp;rsquo;s authentication mechanisms by importing the &lt;code&gt;check_password&lt;/code&gt; function:</source>
          <target state="translated">最后，通过导入 &lt;code&gt;check_password&lt;/code&gt; 函数，编辑WSGI脚本 &lt;code&gt;mysite.wsgi&lt;/code&gt; 以将Apache的身份验证与站点的身份验证机制联系起来：</target>
        </trans-unit>
        <trans-unit id="f4fbe23a0a4f1a1a7ad82d1bd5a261c78f914005" translate="yes" xml:space="preserve">
          <source>Finally, for GeoDjango to be able to find the KyngChaos SpatiaLite library, add the following to your &lt;code&gt;settings.py&lt;/code&gt;:</source>
          <target state="translated">最后，为了使GeoDjango能够找到KyngChaos SpatiaLite库，请将以下内容添加到 &lt;code&gt;settings.py&lt;/code&gt; 中：</target>
        </trans-unit>
        <trans-unit id="cc4c9bcb1cd46b0188d3f07b8a9f37d4a11b76c8" translate="yes" xml:space="preserve">
          <source>Finally, for GeoDjango to be able to find the SpatiaLite library, add the following to your &lt;code&gt;settings.py&lt;/code&gt;:</source>
          <target state="translated">最后，为了使GeoDjango能够找到SpatiaLite库，请将以下内容添加到您的 &lt;code&gt;settings.py&lt;/code&gt; 中：</target>
        </trans-unit>
        <trans-unit id="b144dd9ec36c070dc34d112ead2d5addb8133986" translate="yes" xml:space="preserve">
          <source>Finally, here&amp;rsquo;s an example of a fairly complex logging setup:</source>
          <target state="translated">最后，这是一个相当复杂的日志记录设置的示例：</target>
        </trans-unit>
        <trans-unit id="855b6d5f1ccab213dc5b32608617816a33cf5443" translate="yes" xml:space="preserve">
          <source>Finally, if &lt;a href=&quot;#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;False&lt;/code&gt;, you also need to properly set the &lt;a href=&quot;#std:setting-ALLOWED_HOSTS&quot;&gt;&lt;code&gt;ALLOWED_HOSTS&lt;/code&gt;&lt;/a&gt; setting. Failing to do so will result in all requests being returned as &amp;ldquo;Bad Request (400)&amp;rdquo;.</source>
          <target state="translated">最后，如果&lt;a href=&quot;#std:setting-DEBUG&quot;&gt; &lt;code&gt;DEBUG&lt;/code&gt; &lt;/a&gt;为 &lt;code&gt;False&lt;/code&gt; ，则还需要正确设置&lt;a href=&quot;#std:setting-ALLOWED_HOSTS&quot;&gt; &lt;code&gt;ALLOWED_HOSTS&lt;/code&gt; &lt;/a&gt;设置。否则，所有请求都将作为&amp;ldquo;错误请求（400）&amp;rdquo;返回。</target>
        </trans-unit>
        <trans-unit id="d465d68a14cb885607a31e7005a4de85bcfdddcc" translate="yes" xml:space="preserve">
          <source>Finally, if you only need to have a simple syntax for your custom context-updating template tag, consider using the &lt;a href=&quot;#django.template.Library.simple_tag&quot;&gt;&lt;code&gt;simple_tag()&lt;/code&gt;&lt;/a&gt; shortcut, which supports assigning the tag results to a template variable.</source>
          <target state="translated">最后，如果只需要对自定义上下文更新模板标签使用简单的语法，请考虑使用&lt;a href=&quot;#django.template.Library.simple_tag&quot;&gt; &lt;code&gt;simple_tag()&lt;/code&gt; &lt;/a&gt;快捷方式，该快捷方式支持将标签结果分配给模板变量。</target>
        </trans-unit>
        <trans-unit id="9fdd2ae212537eaacac0577eae9438d74381650f" translate="yes" xml:space="preserve">
          <source>Finally, if you only want to modify the Python-level behavior of a model, without changing the models fields in any way, you can use &lt;a href=&quot;#proxy-models&quot;&gt;Proxy models&lt;/a&gt;.</source>
          <target state="translated">最后，如果您只想修改模型的Python级行为，而又不以任何方式更改models字段，则可以使用&lt;a href=&quot;#proxy-models&quot;&gt;Proxy模型&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bd4ebdb64c40e31366b0e2c24cb39052f3a86668" translate="yes" xml:space="preserve">
          <source>Finally, if you want complete control over of a field &amp;ndash; including its type, validators, required, etc. &amp;ndash; you can do this by declaratively specifying fields like you would in a regular &lt;code&gt;Form&lt;/code&gt;.</source>
          <target state="translated">最后，如果您想完全控制某个字段（包括字段的类型，验证器，必填项等），则可以像在常规 &lt;code&gt;Form&lt;/code&gt; 中一样，声明性地指定字段来做到这一点。</target>
        </trans-unit>
        <trans-unit id="dfcbb1d9824d6d47858c41668312ca8ed762220a" translate="yes" xml:space="preserve">
          <source>Finally, if you want to delete all the keys in the cache, use &lt;code&gt;cache.clear()&lt;/code&gt;. Be careful with this; &lt;code&gt;clear()&lt;/code&gt; will remove &lt;em&gt;everything&lt;/em&gt; from the cache, not just the keys set by your application.</source>
          <target state="translated">最后，如果要删除缓存中的所有键，请使用 &lt;code&gt;cache.clear()&lt;/code&gt; 。注意这一点。 &lt;code&gt;clear()&lt;/code&gt; 将从缓存中删除&lt;em&gt;所有内容&lt;/em&gt;，而不仅仅是您的应用程序设置的键。</target>
        </trans-unit>
        <trans-unit id="c6f827384009b456965fe0958e5b184820f0454b" translate="yes" xml:space="preserve">
          <source>Finally, if your column requires truly complex SQL setup, return &lt;code&gt;None&lt;/code&gt; from &lt;a href=&quot;../ref/models/fields#django.db.models.Field.db_type&quot;&gt;&lt;code&gt;db_type()&lt;/code&gt;&lt;/a&gt;. This will cause Django&amp;rsquo;s SQL creation code to skip over this field. You are then responsible for creating the column in the right table in some other way, but this gives you a way to tell Django to get out of the way.</source>
          <target state="translated">最后，如果您的列需要真正复杂的SQL设置，请从&lt;a href=&quot;../ref/models/fields#django.db.models.Field.db_type&quot;&gt; &lt;code&gt;db_type()&lt;/code&gt; &lt;/a&gt;返回 &lt;code&gt;None&lt;/code&gt; 。这将导致Django的SQL创建代码跳过该字段。然后，您将以其他方式负责在右表中创建该列，但这使您可以告诉Django摆脱困境。</target>
        </trans-unit>
        <trans-unit id="4e79f320cb0240d33a245677392be00e0e634041" translate="yes" xml:space="preserve">
          <source>Finally, if your column requires truly complex SQL setup, return &lt;code&gt;None&lt;/code&gt; from &lt;a href=&quot;../ref/models/fields#django.db.models.Field.db_type&quot;&gt;&lt;code&gt;db_type()&lt;/code&gt;&lt;/a&gt;. This will cause Django&amp;rsquo;s SQL creation code to skip over this field. You are then responsible for creating the column in the right table in some other way, of course, but this gives you a way to tell Django to get out of the way.</source>
          <target state="translated">最后，如果您的列需要真正复杂的SQL设置，请从&lt;a href=&quot;../ref/models/fields#django.db.models.Field.db_type&quot;&gt; &lt;code&gt;db_type()&lt;/code&gt; &lt;/a&gt;返回 &lt;code&gt;None&lt;/code&gt; 。这将导致Django的SQL创建代码跳过该字段。然后，您负责以其他某种方式在右表中创建该列，但是，这为您提供了一种告诉Django摆脱困境的方法。</target>
        </trans-unit>
        <trans-unit id="4b372199964e2fb24560340217adf39c6cb2e9b6" translate="yes" xml:space="preserve">
          <source>Finally, in order to help you locate code that needs upgrading, Django raises a warning when you attempt to save a naive datetime to the database:</source>
          <target state="translated">最后,为了帮助你找到需要升级的代码,当你试图将一个naive datetime保存到数据库时,Django会发出警告。</target>
        </trans-unit>
        <trans-unit id="a8ceea170904d12a1b2a305076f5373f10971acf" translate="yes" xml:space="preserve">
          <source>Finally, in the above example, we remember to mark the result as safe so that our HTML is inserted directly into the template without further escaping.</source>
          <target state="translated">最后,在上面的例子中,我们记得将结果标记为安全,这样我们的HTML就会直接插入到模板中,而不需要进一步转义。</target>
        </trans-unit>
        <trans-unit id="3b58b4fc0d37b0500904ca859d6f665a75001b2b" translate="yes" xml:space="preserve">
          <source>Finally, in the settings file, we add the following (substituting &lt;code&gt;path.to.&lt;/code&gt; with the actual Python path to the module(s) where the routers are defined):</source>
          <target state="translated">最后，在设置文件中，添加以下内容（将 &lt;code&gt;path.to.&lt;/code&gt; 替换为定义路由器的模块的实际Python路径）：</target>
        </trans-unit>
        <trans-unit id="18faf076ef353dea3341f0a68404cd92fe6d44d6" translate="yes" xml:space="preserve">
          <source>Finally, it&amp;rsquo;s important to call &lt;code&gt;showPage()&lt;/code&gt; and &lt;code&gt;save()&lt;/code&gt; on the PDF file.</source>
          <target state="translated">最后，在PDF文件上调用 &lt;code&gt;showPage()&lt;/code&gt; 和 &lt;code&gt;save()&lt;/code&gt; 很重要。</target>
        </trans-unit>
        <trans-unit id="d710d1ce0f9f49d4bfebd253087693a7db1b18cf" translate="yes" xml:space="preserve">
          <source>Finally, it&amp;rsquo;s important to note that the Django database layer is merely an interface to your database. You can access your database via other tools, programming languages or database frameworks; there&amp;rsquo;s nothing Django-specific about your database.</source>
          <target state="translated">最后，需要注意的是，Django数据库层仅仅是数据库的接口。您可以通过其他工具，编程语言或数据库框架来访问数据库；没有关于您的数据库的特定于Django的信息。</target>
        </trans-unit>
        <trans-unit id="855182574bd0f55fdd45d0ca39998798d4c219a1" translate="yes" xml:space="preserve">
          <source>Finally, note a relationship is defined, using &lt;a href=&quot;../ref/models/fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt;. That tells Django each &lt;code&gt;Choice&lt;/code&gt; is related to a single &lt;code&gt;Question&lt;/code&gt;. Django supports all the common database relationships: many-to-one, many-to-many, and one-to-one.</source>
          <target state="translated">最后，注意使用&lt;a href=&quot;../ref/models/fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt;定义了一个关系。这就告诉Django每个 &lt;code&gt;Choice&lt;/code&gt; 与一个 &lt;code&gt;Question&lt;/code&gt; 。Django支持所有常见的数据库关系：多对一，多对多和一对一。</target>
        </trans-unit>
        <trans-unit id="6314e42c3f9470281aa2864e7c7681c40b8c6ccf" translate="yes" xml:space="preserve">
          <source>Finally, note that you can call &lt;code&gt;filter()&lt;/code&gt;, &lt;code&gt;order_by()&lt;/code&gt;, etc. after the &lt;code&gt;values()&lt;/code&gt; call, that means that these two calls are identical:</source>
          <target state="translated">最后，请注意，可以在 &lt;code&gt;values()&lt;/code&gt; 调用之后调用 &lt;code&gt;filter()&lt;/code&gt; ， &lt;code&gt;order_by()&lt;/code&gt; 等，这意味着这两个调用是相同的：</target>
        </trans-unit>
        <trans-unit id="e9e0c432d4c1c0f324717c7c1003e36a61fecea4" translate="yes" xml:space="preserve">
          <source>Finally, note that you can override the form field used for a given model field. See &lt;a href=&quot;#overriding-the-default-fields&quot;&gt;Overriding the default fields&lt;/a&gt; below.</source>
          <target state="translated">最后，请注意，您可以覆盖用于给定模型字段的表单字段。请参阅下面的&lt;a href=&quot;#overriding-the-default-fields&quot;&gt;覆盖默认字段&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9743b898367474965ebf376aa3504c5be173f876" translate="yes" xml:space="preserve">
          <source>Finally, note that you can&amp;rsquo;t define multiple &lt;a href=&quot;builtins#std:templatetag-block&quot;&gt;&lt;code&gt;block&lt;/code&gt;&lt;/a&gt; tags with the same name in the same template. This limitation exists because a block tag works in &amp;ldquo;both&amp;rdquo; directions. That is, a block tag doesn&amp;rsquo;t just provide a hole to fill &amp;ndash; it also defines the content that fills the hole in the &lt;em&gt;parent&lt;/em&gt;. If there were two similarly-named &lt;a href=&quot;builtins#std:templatetag-block&quot;&gt;&lt;code&gt;block&lt;/code&gt;&lt;/a&gt; tags in a template, that template&amp;rsquo;s parent wouldn&amp;rsquo;t know which one of the blocks&amp;rsquo; content to use.</source>
          <target state="translated">最后，请注意，您不能在同一模板中定义多个具有相同名称的&lt;a href=&quot;builtins#std:templatetag-block&quot;&gt; &lt;code&gt;block&lt;/code&gt; &lt;/a&gt;标签。存在此限制的原因是，块标签在&amp;ldquo;两个&amp;rdquo;方向上均起作用。也就是说，block标签不仅提供填充孔，还定义了填充&lt;em&gt;父级&lt;/em&gt;孔中的内容。如果模板中有两个名称相似的&lt;a href=&quot;builtins#std:templatetag-block&quot;&gt; &lt;code&gt;block&lt;/code&gt; &lt;/a&gt;标签，则该模板的父级将不知道要使用哪个块内容。</target>
        </trans-unit>
        <trans-unit id="09b7888ce3860953a8e97b5c6c5cb529ccb8ba65" translate="yes" xml:space="preserve">
          <source>Finally, note that you&amp;rsquo;ll probably want to keep a normal (non-site-specific) &lt;code&gt;Manager&lt;/code&gt; on your model, even if you use &lt;a href=&quot;#django.contrib.sites.managers.CurrentSiteManager&quot;&gt;&lt;code&gt;CurrentSiteManager&lt;/code&gt;&lt;/a&gt;. As explained in the &lt;a href=&quot;../../topics/db/managers&quot;&gt;manager documentation&lt;/a&gt;, if you define a manager manually, then Django won&amp;rsquo;t create the automatic &lt;code&gt;objects = models.Manager()&lt;/code&gt; manager for you. Also note that certain parts of Django &amp;ndash; namely, the Django admin site and generic views &amp;ndash; use whichever manager is defined &lt;em&gt;first&lt;/em&gt; in the model, so if you want your admin site to have access to all objects (not just site-specific ones), put &lt;code&gt;objects = models.Manager()&lt;/code&gt; in your model, before you define &lt;a href=&quot;#django.contrib.sites.managers.CurrentSiteManager&quot;&gt;&lt;code&gt;CurrentSiteManager&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">最后，请注意，即使使用&lt;a href=&quot;#django.contrib.sites.managers.CurrentSiteManager&quot;&gt; &lt;code&gt;CurrentSiteManager&lt;/code&gt; &lt;/a&gt;，您也可能希望在模型上保留普通的（非特定于站点的） &lt;code&gt;Manager&lt;/code&gt; 。如&lt;a href=&quot;../../topics/db/managers&quot;&gt;管理员文档&lt;/a&gt;中所述，如果您手动定义管理员，则Django不会为您创建自动 &lt;code&gt;objects = models.Manager()&lt;/code&gt; 管理员。还要注意，Django的某些部分（即Django管理站点和通用视图）使用模型中&lt;em&gt;首先&lt;/em&gt;定义的管理器，因此，如果您希望管理站点可以访问所有对象（而不仅仅是特定于站点的对象），在定义&lt;a href=&quot;#django.contrib.sites.managers.CurrentSiteManager&quot;&gt; &lt;code&gt;CurrentSiteManager&lt;/code&gt; &lt;/a&gt;之前，将 &lt;code&gt;objects = models.Manager()&lt;/code&gt; 放入模型中。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="534f475f8e6621717cc2fd78375e942df9b8fef4" translate="yes" xml:space="preserve">
          <source>Finally, our calendar system contains interesting edge cases. For example, you can&amp;rsquo;t always subtract one year directly from a given date:</source>
          <target state="translated">最后，我们的日历系统包含有趣的边缘情况。例如，您不能总是总是从给定日期直接减去一年：</target>
        </trans-unit>
        <trans-unit id="597d26c9a6435c4d3d729d8b833ba9daedca211d" translate="yes" xml:space="preserve">
          <source>Finally, our calendar system contains interesting traps for computers:</source>
          <target state="translated">最后,我们的日历系统包含了计算机的有趣陷阱。</target>
        </trans-unit>
        <trans-unit id="5c2802a46ddcce0d4a717df48b205688d98ef322" translate="yes" xml:space="preserve">
          <source>Finally, realize that &lt;code&gt;update()&lt;/code&gt; does an update at the SQL level and, thus, does not call any &lt;code&gt;save()&lt;/code&gt; methods on your models, nor does it emit the &lt;a href=&quot;../signals#django.db.models.signals.pre_save&quot;&gt;&lt;code&gt;pre_save&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../signals#django.db.models.signals.post_save&quot;&gt;&lt;code&gt;post_save&lt;/code&gt;&lt;/a&gt; signals (which are a consequence of calling &lt;a href=&quot;instances#django.db.models.Model.save&quot;&gt;&lt;code&gt;Model.save()&lt;/code&gt;&lt;/a&gt;). If you want to update a bunch of records for a model that has a custom &lt;a href=&quot;instances#django.db.models.Model.save&quot;&gt;&lt;code&gt;save()&lt;/code&gt;&lt;/a&gt; method, loop over them and call &lt;a href=&quot;instances#django.db.models.Model.save&quot;&gt;&lt;code&gt;save()&lt;/code&gt;&lt;/a&gt;, like this:</source>
          <target state="translated">最后，意识到 &lt;code&gt;update()&lt;/code&gt; 在SQL级别进行更新，因此不会在模型上调用任何 &lt;code&gt;save()&lt;/code&gt; 方法，也不会发出&lt;a href=&quot;../signals#django.db.models.signals.pre_save&quot;&gt; &lt;code&gt;pre_save&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../signals#django.db.models.signals.post_save&quot;&gt; &lt;code&gt;post_save&lt;/code&gt; &lt;/a&gt;信号（这是调用&lt;a href=&quot;instances#django.db.models.Model.save&quot;&gt; &lt;code&gt;Model.save()&lt;/code&gt; &lt;/a&gt;）。如果要为具有自定义&lt;a href=&quot;instances#django.db.models.Model.save&quot;&gt; &lt;code&gt;save()&lt;/code&gt; &lt;/a&gt;方法的模型更新一堆记录，请遍历它们并调用&lt;a href=&quot;instances#django.db.models.Model.save&quot;&gt; &lt;code&gt;save()&lt;/code&gt; &lt;/a&gt;，如下所示：</target>
        </trans-unit>
        <trans-unit id="cef327d837a6ebcf77f58945fc7da002005d28f4" translate="yes" xml:space="preserve">
          <source>Finally, register the tag with your module&amp;rsquo;s &lt;code&gt;Library&lt;/code&gt; instance, as explained in &lt;a href=&quot;#howto-writing-custom-template-tags&quot;&gt;writing custom template tags&lt;/a&gt; above. Example:</source>
          <target state="translated">最后，按照上面&lt;a href=&quot;#howto-writing-custom-template-tags&quot;&gt;编写自定义模板标签中的&lt;/a&gt;说明，将标签注册到模块的 &lt;code&gt;Library&lt;/code&gt; 实例中。例：</target>
        </trans-unit>
        <trans-unit id="8b84b5ca6b61dd7ec3e13cb87b04368b16c3e016" translate="yes" xml:space="preserve">
          <source>Finally, register your &lt;code&gt;Person&lt;/code&gt; and &lt;code&gt;Group&lt;/code&gt; models with the admin site:</source>
          <target state="translated">最后，在管理站点上注册您的 &lt;code&gt;Person&lt;/code&gt; 和 &lt;code&gt;Group&lt;/code&gt; 模型：</target>
        </trans-unit>
        <trans-unit id="9ae59f1cd4f96cc1501fbd570f2103e93dd7c909" translate="yes" xml:space="preserve">
          <source>Finally, specify the custom model as the default user model for your project using the &lt;a href=&quot;../../ref/settings#std:setting-AUTH_USER_MODEL&quot;&gt;&lt;code&gt;AUTH_USER_MODEL&lt;/code&gt;&lt;/a&gt; setting in your &lt;code&gt;settings.py&lt;/code&gt;:</source>
          <target state="translated">最后，使用 &lt;code&gt;settings.py&lt;/code&gt; 中的&lt;a href=&quot;../../ref/settings#std:setting-AUTH_USER_MODEL&quot;&gt; &lt;code&gt;AUTH_USER_MODEL&lt;/code&gt; &lt;/a&gt;设置将自定义模型指定为项目的默认用户模型：</target>
        </trans-unit>
        <trans-unit id="1de580b6192d9e344a15d96680c32ba2b8d2caae" translate="yes" xml:space="preserve">
          <source>Finally, the Django-provided base translation in &lt;code&gt;django/conf/locale&lt;/code&gt; is used as a fallback.</source>
          <target state="translated">最后， &lt;code&gt;django/conf/locale&lt;/code&gt; 中由Django提供的基础翻译被用作后备。</target>
        </trans-unit>
        <trans-unit id="c63e577d01012c7cf8876a70c793515073c96915" translate="yes" xml:space="preserve">
          <source>Finally, the following forms are tied to &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt;&lt;code&gt;User&lt;/code&gt;&lt;/a&gt; and need to be rewritten or extended to work with a custom user model:</source>
          <target state="translated">最后，以下形式与&lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt; &lt;code&gt;User&lt;/code&gt; &lt;/a&gt;，需要重写或扩展以与自定义用户模型一起使用：</target>
        </trans-unit>
        <trans-unit id="329cb001d49bddce33496c86e763e7caf7228133" translate="yes" xml:space="preserve">
          <source>Finally, the size of a cookie can have an impact on the &lt;a href=&quot;https://yuiblog.com/blog/2007/03/01/performance-research-part-3/&quot;&gt;speed of your site&lt;/a&gt;.</source>
          <target state="translated">最后，cookie的大小可能会影响&lt;a href=&quot;https://yuiblog.com/blog/2007/03/01/performance-research-part-3/&quot;&gt;您网站&lt;/a&gt;的速度。</target>
        </trans-unit>
        <trans-unit id="9a9fb92891ed9e384c8c066d50ed2e6aa79110ed" translate="yes" xml:space="preserve">
          <source>Finally, there is the &lt;a href=&quot;#django.contrib.gis.geos.fromfile&quot;&gt;&lt;code&gt;fromfile()&lt;/code&gt;&lt;/a&gt; factory method which returns a &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry&quot;&gt;&lt;code&gt;GEOSGeometry&lt;/code&gt;&lt;/a&gt; object from a file:</source>
          <target state="translated">最后，有一个&lt;a href=&quot;#django.contrib.gis.geos.fromfile&quot;&gt; &lt;code&gt;fromfile()&lt;/code&gt; &lt;/a&gt;工厂方法，该方法从文件中返回&lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry&quot;&gt; &lt;code&gt;GEOSGeometry&lt;/code&gt; &lt;/a&gt;对象：</target>
        </trans-unit>
        <trans-unit id="4e4bdea9995161777366d8c1c03e09daac66d940" translate="yes" xml:space="preserve">
          <source>Finally, to avoid repetitive fallback code, the framework provides a &lt;a href=&quot;#django.contrib.sites.shortcuts.get_current_site&quot;&gt;&lt;code&gt;django.contrib.sites.shortcuts.get_current_site()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">最后，为避免重复的后备代码，该框架提供了&lt;a href=&quot;#django.contrib.sites.shortcuts.get_current_site&quot;&gt; &lt;code&gt;django.contrib.sites.shortcuts.get_current_site()&lt;/code&gt; &lt;/a&gt;函数。</target>
        </trans-unit>
        <trans-unit id="ea48d70c9f2a1aeff3913cc638d5e4f3d64cde28" translate="yes" xml:space="preserve">
          <source>Finally, we hook these new views into the URLconf:</source>
          <target state="translated">最后,我们将这些新视图挂到URLconf中。</target>
        </trans-unit>
        <trans-unit id="554f9eb64d754ccae5e2a1ca7de1048bc404dc95" translate="yes" xml:space="preserve">
          <source>Finally, we implement the rest of the methods that allow our query expression to play nice with other query expressions:</source>
          <target state="translated">最后,我们实现了其余的方法,使我们的查询表达式能够与其他查询表达式很好地配合。</target>
        </trans-unit>
        <trans-unit id="f96555ce97c75bd6adcf9e62917e490f288ab96b" translate="yes" xml:space="preserve">
          <source>Finally, we&amp;rsquo;ll add a &lt;a href=&quot;../../ref/settings#std:setting-PASSWORD_HASHERS&quot;&gt;&lt;code&gt;PASSWORD_HASHERS&lt;/code&gt;&lt;/a&gt; setting:</source>
          <target state="translated">最后，我们将添加&lt;a href=&quot;../../ref/settings#std:setting-PASSWORD_HASHERS&quot;&gt; &lt;code&gt;PASSWORD_HASHERS&lt;/code&gt; &lt;/a&gt;设置：</target>
        </trans-unit>
        <trans-unit id="a88fe2f705ab58ff5303b4a2b755e83de2f7b0ff" translate="yes" xml:space="preserve">
          <source>Finally, you can also use a &lt;a href=&quot;../db/managers#django.db.models.Manager&quot;&gt;&lt;code&gt;Manager&lt;/code&gt;&lt;/a&gt;. This is useful for example if you have a &lt;a href=&quot;../db/managers#custom-managers&quot;&gt;custom manager&lt;/a&gt;:</source>
          <target state="translated">最后，您还可以使用&lt;a href=&quot;../db/managers#django.db.models.Manager&quot;&gt; &lt;code&gt;Manager&lt;/code&gt; &lt;/a&gt;。例如，如果您有一个&lt;a href=&quot;../db/managers#custom-managers&quot;&gt;自定义管理器，&lt;/a&gt;这将非常有用：</target>
        </trans-unit>
        <trans-unit id="c2a581eaa73c38481020b614fe636e3f569653d5" translate="yes" xml:space="preserve">
          <source>Finally, you can conditionally enable or disable actions on a per-request (and hence per-user basis) by overriding &lt;a href=&quot;#django.contrib.admin.ModelAdmin.get_actions&quot;&gt;&lt;code&gt;ModelAdmin.get_actions()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">最后，您可以通过重写&lt;a href=&quot;#django.contrib.admin.ModelAdmin.get_actions&quot;&gt; &lt;code&gt;ModelAdmin.get_actions()&lt;/code&gt; &lt;/a&gt;来有条件地基于每个请求（因此基于每个用户）启用或禁用操作。</target>
        </trans-unit>
        <trans-unit id="64e614e36dff5fc2ddcd15c0ac50da2771ffe25d" translate="yes" xml:space="preserve">
          <source>Finally, you can pass &lt;code&gt;HttpResponse&lt;/code&gt; an iterator rather than strings. &lt;code&gt;HttpResponse&lt;/code&gt; will consume the iterator immediately, store its content as a string, and discard it. Objects with a &lt;code&gt;close()&lt;/code&gt; method such as files and generators are immediately closed.</source>
          <target state="translated">最后，您可以将迭代器而不是字符串传递给 &lt;code&gt;HttpResponse&lt;/code&gt; 。 &lt;code&gt;HttpResponse&lt;/code&gt; 将立即使用迭代器，将其内容存储为字符串，然后将其丢弃。具有 &lt;code&gt;close()&lt;/code&gt; 方法的对象（例如文件和生成器）将立即关闭。</target>
        </trans-unit>
        <trans-unit id="24082142a7bee0d7266eae78b1faddd1c1cc9fa6" translate="yes" xml:space="preserve">
          <source>Finally, you can use configured engines directly:</source>
          <target state="translated">最后,你可以直接使用配置好的引擎。</target>
        </trans-unit>
        <trans-unit id="e37d4b35a277a40229c7c1b83fd098e99922b7fa" translate="yes" xml:space="preserve">
          <source>Finally, you may run the test as follows:</source>
          <target state="translated">最后,您可以按以下方式进行测试。</target>
        </trans-unit>
        <trans-unit id="ef950eb0217067af3f081ee9a17610cab8bc677b" translate="yes" xml:space="preserve">
          <source>Finally, you must specify a &lt;a href=&quot;settings#std:setting-DATABASE-ENGINE&quot;&gt;&lt;code&gt;DATABASE-ENGINE&lt;/code&gt;&lt;/a&gt; in your &lt;code&gt;settings.py&lt;/code&gt; file:</source>
          <target state="translated">最后，您必须在 &lt;code&gt;settings.py&lt;/code&gt; 文件中指定一个&lt;a href=&quot;settings#std:setting-DATABASE-ENGINE&quot;&gt; &lt;code&gt;DATABASE-ENGINE&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="9a832465bbf151d241d327e71e691160848f2552" translate="yes" xml:space="preserve">
          <source>Finally, you&amp;rsquo;ll have to actually set the header on your AJAX request, while protecting the CSRF token from being sent to other domains using &lt;a href=&quot;https://api.jquery.com/jQuery.ajax/&quot;&gt;settings.crossDomain&lt;/a&gt; in jQuery 1.5.1 and newer:</source>
          <target state="translated">最后，您必须在AJAX请求上实际设置标头，同时使用jQuery 1.5.1及更高版本中的&lt;a href=&quot;https://api.jquery.com/jQuery.ajax/&quot;&gt;settings.crossDomain&lt;/a&gt;保护CSRF令牌不被发送到其他域：</target>
        </trans-unit>
        <trans-unit id="ef7c278ab8519615bb5ecd8737b7187faccc3ca3" translate="yes" xml:space="preserve">
          <source>Finally, you&amp;rsquo;ll need to remember to create user accounts before you can use this method. As we explained above, the test runner is executed using a test database, which contains no users by default. As a result, user accounts that are valid on your production site will not work under test conditions. You&amp;rsquo;ll need to create users as part of the test suite &amp;ndash; either manually (using the Django model API) or with a test fixture. Remember that if you want your test user to have a password, you can&amp;rsquo;t set the user&amp;rsquo;s password by setting the password attribute directly &amp;ndash; you must use the &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User.set_password&quot;&gt;&lt;code&gt;set_password()&lt;/code&gt;&lt;/a&gt; function to store a correctly hashed password. Alternatively, you can use the &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.UserManager.create_user&quot;&gt;&lt;code&gt;create_user()&lt;/code&gt;&lt;/a&gt; helper method to create a new user with a correctly hashed password.</source>
          <target state="translated">最后，您需要记住要创建用户帐户，然后才能使用此方法。如上所述，测试运行器是使用测试数据库执行的，默认情况下该数据库不包含任何用户。因此，在测试条件下，在生产站点上有效的用户帐户将无法使用。您需要将用户创建为测试套件的一部分-手动（使用Django模型API）或使用测试夹具。请记住，如果您希望测试用户具有密码，则不能通过直接设置password属性来设置用户的密码&amp;ndash;必须使用&lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User.set_password&quot;&gt; &lt;code&gt;set_password()&lt;/code&gt; &lt;/a&gt;函数来存储正确的哈希密码。另外，您可以使用&lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.UserManager.create_user&quot;&gt; &lt;code&gt;create_user()&lt;/code&gt; &lt;/a&gt;帮助程序方法来创建具有正确哈希密码的新用户。</target>
        </trans-unit>
        <trans-unit id="a5592a50ac2b6ac4bb6dd2632a366dc7d1aac5b7" translate="yes" xml:space="preserve">
          <source>Finally, you&amp;rsquo;ll need to set the header on your AJAX request. Using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch&quot;&gt;fetch()&lt;/a&gt; API:</source>
          <target state="translated">最后，您需要在AJAX请求上设置标头。使用&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch&quot;&gt;fetch（）&lt;/a&gt; API：</target>
        </trans-unit>
        <trans-unit id="ca2f376257418ebbe42c6bba7c397875f4d0b018" translate="yes" xml:space="preserve">
          <source>Find all you need to know about the automated admin interface, one of Django&amp;rsquo;s most popular features:</source>
          <target state="translated">查找您需要了解的有关自动管理界面的所有信息，这是Django最受欢迎的功能之一：</target>
        </trans-unit>
        <trans-unit id="83be5a14f83b93bd2f267cd5495799f028c405bd" translate="yes" xml:space="preserve">
          <source>Finders Module</source>
          <target state="translated">查找模块</target>
        </trans-unit>
        <trans-unit id="10038fb951c11f2f94be750c35ea01b826bd98ad" translate="yes" xml:space="preserve">
          <source>Finding data from your production database when running tests?</source>
          <target state="translated">运行测试时从生产数据库中查找数据?</target>
        </trans-unit>
        <trans-unit id="c719c26326806dda05be19d8dcf178818036ad21" translate="yes" xml:space="preserve">
          <source>Finding your first real ticket</source>
          <target state="translated">找到你的第一张真票</target>
        </trans-unit>
        <trans-unit id="1f9e8d29ca99e765d9e5e9965a3b638f47f8c831" translate="yes" xml:space="preserve">
          <source>Fink</source>
          <target state="translated">Fink</target>
        </trans-unit>
        <trans-unit id="e427d7820cf1b8e5b50925cc386518036005e42d" translate="yes" xml:space="preserve">
          <source>Firebird</source>
          <target state="translated">Firebird</target>
        </trans-unit>
        <trans-unit id="6571073e23c4fa6e884ba21f0900816b1dbee48f" translate="yes" xml:space="preserve">
          <source>Firefox 3.6.9+</source>
          <target state="translated">火狐3.6.9+</target>
        </trans-unit>
        <trans-unit id="4dcec4af22f6f720c7f8f4e9497fe78324b1246c" translate="yes" xml:space="preserve">
          <source>First Django imports each item in &lt;a href=&quot;settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">首先，Django将每个项目导入&lt;a href=&quot;settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; 中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8ee7d23eafc97724f82981c3dc7c888430666917" translate="yes" xml:space="preserve">
          <source>First download the latest GDAL release version and untar the archive:</source>
          <target state="translated">首先下载最新的GDAL版本,并解压存档。</target>
        </trans-unit>
        <trans-unit id="c88843d149751ca2a972950ccc6152817e00f53b" translate="yes" xml:space="preserve">
          <source>First is a question shortcut function, &lt;code&gt;create_question&lt;/code&gt;, to take some repetition out of the process of creating questions.</source>
          <target state="translated">首先是一个问题快捷功能 &lt;code&gt;create_question&lt;/code&gt; ，用于在创建问题的过程中进行一些重复。</target>
        </trans-unit>
        <trans-unit id="43035eab990cc69bcd9f23d2944f973548270b12" translate="yes" xml:space="preserve">
          <source>First of all, &lt;code&gt;headline&lt;/code&gt; is not indexed, which will make the underlying database fetch slower.</source>
          <target state="translated">首先，不对 &lt;code&gt;headline&lt;/code&gt; 进行索引，这将使底层数据库的获取速度变慢。</target>
        </trans-unit>
        <trans-unit id="99290d59716a55c82e8b063db8bf7f05e1a4b00b" translate="yes" xml:space="preserve">
          <source>First steps</source>
          <target state="translated">初步步骤</target>
        </trans-unit>
        <trans-unit id="20699b2a5803a6e614a59a724943eb463171c0f3" translate="yes" xml:space="preserve">
          <source>First time contributors should also read Django&amp;rsquo;s &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/contributing/new-contributors/&quot;&gt;documentation for first time contributors&lt;/a&gt;. It has lots of good advice for those of us who are new to helping out with Django.</source>
          <target state="translated">初次贡献者还应该阅读Django的&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/contributing/new-contributors/&quot;&gt;初次贡献者文档&lt;/a&gt;。对于刚接触Django的新手来说，它有很多很好的建议。</target>
        </trans-unit>
        <trans-unit id="fe9b57599c86c951e4a7e1b5f1284430d8021d77" translate="yes" xml:space="preserve">
          <source>First time contributors should also read Django&amp;rsquo;s &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/internals/contributing/new-contributors/&quot;&gt;documentation for first time contributors&lt;/a&gt;. It has lots of good advice for those of us who are new to helping out with Django.</source>
          <target state="translated">初次贡献者还应该阅读Django的&lt;a href=&quot;https://docs.djangoproject.com/en/3.1/internals/contributing/new-contributors/&quot;&gt;初次贡献者文档&lt;/a&gt;。对于刚接触Django的新手来说，它有很多很好的建议。</target>
        </trans-unit>
        <trans-unit id="77213d5813b86668ea11f1f10608d43f8d41acba" translate="yes" xml:space="preserve">
          <source>First we need to add &lt;a href=&quot;../../ref/models/instances#django.db.models.Model.get_absolute_url&quot;&gt;&lt;code&gt;get_absolute_url()&lt;/code&gt;&lt;/a&gt; to our &lt;code&gt;Author&lt;/code&gt; class:</source>
          <target state="translated">首先，我们需要将&lt;a href=&quot;../../ref/models/instances#django.db.models.Model.get_absolute_url&quot;&gt; &lt;code&gt;get_absolute_url()&lt;/code&gt; &lt;/a&gt;添加到我们的 &lt;code&gt;Author&lt;/code&gt; 类中：</target>
        </trans-unit>
        <trans-unit id="bc39948ba4573e7943c3bf60f22272eb1d430136" translate="yes" xml:space="preserve">
          <source>First we&amp;rsquo;ll need to create a user who can login to the admin site. Run the following command:</source>
          <target state="translated">首先，我们需要创建一个可以登录到管理站点的用户。运行以下命令：</target>
        </trans-unit>
        <trans-unit id="b8fec17a2b622381f0a4b41161e6bbe4d8bdb609" translate="yes" xml:space="preserve">
          <source>First, Django looks for a matching &lt;a href=&quot;#term-application-namespace&quot;&gt;application namespace&lt;/a&gt; (in this example, &lt;code&gt;'polls'&lt;/code&gt;). This will yield a list of instances of that application.</source>
          <target state="translated">首先，Django寻找匹配的&lt;a href=&quot;#term-application-namespace&quot;&gt;应用程序名称空间&lt;/a&gt;（在本示例中为 &lt;code&gt;'polls'&lt;/code&gt; ）。这将产生该应用程序实例的列表。</target>
        </trans-unit>
        <trans-unit id="ef70a6cfb1e8f430c465869e59c076034923c444" translate="yes" xml:space="preserve">
          <source>First, check if you can install SpatiaLite from system packages or binaries.</source>
          <target state="translated">首先,检查是否可以从系统包或二进制文件中安装SpatiaLite。</target>
        </trans-unit>
        <trans-unit id="95251784875a5e4d20dd8450c9b80410ac635a7f" translate="yes" xml:space="preserve">
          <source>First, create a directory called &lt;code&gt;static&lt;/code&gt; in your &lt;code&gt;polls&lt;/code&gt; directory. Django will look for static files there, similarly to how Django finds templates inside &lt;code&gt;polls/templates/&lt;/code&gt;.</source>
          <target state="translated">首先，在 &lt;code&gt;polls&lt;/code&gt; 目录中创建一个名为 &lt;code&gt;static&lt;/code&gt; 的目录。Django将在此处查找静态文件，类似于Django在 &lt;code&gt;polls/templates/&lt;/code&gt; 查找模板的方式。</target>
        </trans-unit>
        <trans-unit id="f96e5da4a1149d193b2bdcddd8b25aef2a1fc28b" translate="yes" xml:space="preserve">
          <source>First, create a directory called &lt;code&gt;templates&lt;/code&gt; in your &lt;code&gt;polls&lt;/code&gt; directory. Django will look for templates in there.</source>
          <target state="translated">首先，在 &lt;code&gt;polls&lt;/code&gt; 目录中创建一个名为 &lt;code&gt;templates&lt;/code&gt; 的目录。Django将在其中查找模板。</target>
        </trans-unit>
        <trans-unit id="1f90c2c681abf881963f9d053d00ec47ee328d19" translate="yes" xml:space="preserve">
          <source>First, create a parent directory for &lt;code&gt;polls&lt;/code&gt;, outside of your Django project. Call this directory &lt;code&gt;django-polls&lt;/code&gt;.</source>
          <target state="translated">首先，在Django项目之外为 &lt;code&gt;polls&lt;/code&gt; 创建一个父目录。将此目录 &lt;code&gt;django-polls&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="07c0c655fdb6b481e371840e5383fd9133c1a098" translate="yes" xml:space="preserve">
          <source>First, define the function that takes the argument and produces a dictionary of data for the result. The important point here is we only need to return a dictionary, not anything more complex. This will be used as a template context for the template fragment. Example:</source>
          <target state="translated">首先,定义接受参数并产生结果的数据字典的函数。这里重要的一点是我们只需要返回一个字典,而不是更复杂的东西。这将被用作模板片段的模板上下文。例子:</target>
        </trans-unit>
        <trans-unit id="40a6ca6ac1151f0eec3cdc666ba2d0dcfb692276" translate="yes" xml:space="preserve">
          <source>First, download GEOS from the GEOS website and untar the source archive:</source>
          <target state="translated">首先,从GEOS网站下载GEOS,并解开源码存档。</target>
        </trans-unit>
        <trans-unit id="05ac470b0f07720d2a10c844d43976a668aacc11" translate="yes" xml:space="preserve">
          <source>First, download the PROJ.4 source code and datum shifting files &lt;a href=&quot;#id9&quot; id=&quot;id4&quot;&gt;[1]&lt;/a&gt;:</source>
          <target state="translated">首先，下载PROJ.4源代码和基准移动文件&lt;a href=&quot;#id9&quot; id=&quot;id4&quot;&gt;[1]&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="4e268d6f08ea9c850920ac60f90e7a12aac80aa6" translate="yes" xml:space="preserve">
          <source>First, download the latest &lt;a href=&quot;https://www.enterprisedb.com/downloads/postgres-postgresql-downloads&quot;&gt;PostgreSQL 9.x installer&lt;/a&gt; from the &lt;a href=&quot;https://www.enterprisedb.com&quot;&gt;EnterpriseDB&lt;/a&gt; website. After downloading, run the installer, follow the on-screen directions, and keep the default options unless you know the consequences of changing them.</source>
          <target state="translated">首先，从&lt;a href=&quot;https://www.enterprisedb.com&quot;&gt;EnterpriseDB&lt;/a&gt;网站下载最新的&lt;a href=&quot;https://www.enterprisedb.com/downloads/postgres-postgresql-downloads&quot;&gt;PostgreSQL 9.x安装程序&lt;/a&gt;。下载后，运行安装程序，按照屏幕上的说明进行操作，并保留默认选项，除非您知道更改它们的后果。</target>
        </trans-unit>
        <trans-unit id="da3b0283ec00b2d4fdd63bac9b59bf3e759edc72" translate="yes" xml:space="preserve">
          <source>First, follow the instructions in the &lt;a href=&quot;index#kyngchaos&quot;&gt;KyngChaos packages&lt;/a&gt; section.</source>
          <target state="translated">首先，按照&lt;a href=&quot;index#kyngchaos&quot;&gt;KyngChaos软件包&lt;/a&gt;部分中的说明进行操作。</target>
        </trans-unit>
        <trans-unit id="64c0574de613a5a5d855304b6002948bbfb18e08" translate="yes" xml:space="preserve">
          <source>First, here&amp;rsquo;s a configuration which writes all logging from the &lt;a href=&quot;#django-logger&quot;&gt;django&lt;/a&gt; logger to a local file:</source>
          <target state="translated">首先，这是一个配置，它将所有日志记录从&lt;a href=&quot;#django-logger&quot;&gt;django&lt;/a&gt;记录器写入本地文件：</target>
        </trans-unit>
        <trans-unit id="4065a170cb0a7fcfc755d6ce0c9d5d28c68c14e5" translate="yes" xml:space="preserve">
          <source>First, invoke the Django shell:</source>
          <target state="translated">首先,调用Django shell。</target>
        </trans-unit>
        <trans-unit id="72e9467116dd2961d61a735a8c47c0bc77e85890" translate="yes" xml:space="preserve">
          <source>First, it looks for the language prefix in the requested URL. This is only performed when you are using the &lt;code&gt;i18n_patterns&lt;/code&gt; function in your root URLconf. See &lt;a href=&quot;#url-internationalization&quot;&gt;Internationalization: in URL patterns&lt;/a&gt; for more information about the language prefix and how to internationalize URL patterns.</source>
          <target state="translated">首先，它在请求的URL中查找语言前缀。仅当您在根URLconf 中使用 &lt;code&gt;i18n_patterns&lt;/code&gt; 函数时才执行此操作。请参阅&lt;a href=&quot;#url-internationalization&quot;&gt;国际化：URL模式&lt;/a&gt;中的有关语言前缀以及如何国际化URL模式的更多信息。</target>
        </trans-unit>
        <trans-unit id="f6bfabb8d777bbdb47935b9c331aa5bdea0d0a3c" translate="yes" xml:space="preserve">
          <source>First, it tries to call a method, passing the &lt;code&gt;obj&lt;/code&gt; argument, where &lt;code&gt;obj&lt;/code&gt; is the object returned by &lt;code&gt;get_object()&lt;/code&gt;.</source>
          <target state="translated">首先，它尝试通过传递 &lt;code&gt;obj&lt;/code&gt; 参数来调用方法，其中 &lt;code&gt;obj&lt;/code&gt; 是 &lt;code&gt;get_object()&lt;/code&gt; 返回的对象。</target>
        </trans-unit>
        <trans-unit id="f1c355f311bddfd7d6f814d29cbf65fae7c521e3" translate="yes" xml:space="preserve">
          <source>First, make sure your template settings are checking inside app directories:</source>
          <target state="translated">首先,确保你的模板设置在检查应用目录里面。</target>
        </trans-unit>
        <trans-unit id="4bbd700df3056ac3723d7fcd139048bbfde7bbcc" translate="yes" xml:space="preserve">
          <source>First, open the &lt;code&gt;polls/urls.py&lt;/code&gt; URLconf and change it like so:</source>
          <target state="translated">首先，打开 &lt;code&gt;polls/urls.py&lt;/code&gt; URLconf并进行如下更改：</target>
        </trans-unit>
        <trans-unit id="43dd5d61895190dc15dd5b6148805d46a692e3ef" translate="yes" xml:space="preserve">
          <source>First, we import the class &lt;a href=&quot;../../ref/request-response#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; from the &lt;a href=&quot;../../ref/request-response#module-django.http&quot;&gt;&lt;code&gt;django.http&lt;/code&gt;&lt;/a&gt; module, along with Python&amp;rsquo;s &lt;code&gt;datetime&lt;/code&gt; library.</source>
          <target state="translated">首先，我们从&lt;a href=&quot;../../ref/request-response#module-django.http&quot;&gt; &lt;code&gt;django.http&lt;/code&gt; &lt;/a&gt;模块导入类&lt;a href=&quot;../../ref/request-response#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt;，以及Python的 &lt;code&gt;datetime&lt;/code&gt; 库。</target>
        </trans-unit>
        <trans-unit id="145a1430fd08e0dbf0cb33c1604421f8f2437c3d" translate="yes" xml:space="preserve">
          <source>First, we need to define a receiver function. A receiver can be any Python function or method:</source>
          <target state="translated">首先,我们需要定义一个接收器函数。接收器可以是任何 Python 函数或方法。</target>
        </trans-unit>
        <trans-unit id="13baffa2f5f7de1c46ad5da632df46aaaa24a8de" translate="yes" xml:space="preserve">
          <source>First, we&amp;rsquo;d need to add an author detail bit in the URLconf to point to a custom view:</source>
          <target state="translated">首先，我们需要在URLconf中添加作者详细信息位以指向自定义视图：</target>
        </trans-unit>
        <trans-unit id="8454a5ec130fde2ddf69d758a0b9cacddf54e6f8" translate="yes" xml:space="preserve">
          <source>First, we&amp;rsquo;ll add the custom hasher:</source>
          <target state="translated">首先，我们将添加自定义哈希器：</target>
        </trans-unit>
        <trans-unit id="c2a03644e55ef699e43555777f47af59c4cf407e" translate="yes" xml:space="preserve">
          <source>First, we&amp;rsquo;ll explore overriding templates by creating replacement templates in your project&amp;rsquo;s templates directory.</source>
          <target state="translated">首先，我们将通过在项目的模板目录中创建替换模板来探索覆盖模板。</target>
        </trans-unit>
        <trans-unit id="fdf45d6a678bfbb18d68f2f58940017b92430b08" translate="yes" xml:space="preserve">
          <source>First, we&amp;rsquo;ll need to write a function that gets called when the action is triggered from the admin. Action functions are regular functions that take three arguments:</source>
          <target state="translated">首先，我们需要编写一个在管理员触发操作时调用的函数。动作函数是带有三个参数的常规函数​​：</target>
        </trans-unit>
        <trans-unit id="4e7eccbd6c4b76c9e1f9ca2b9a2f55acb81f48d2" translate="yes" xml:space="preserve">
          <source>First, you can let the formset do most of the work:</source>
          <target state="translated">首先,你可以让表格集做大部分的工作。</target>
        </trans-unit>
        <trans-unit id="5bf556882e52bc156e88cba7a5467001923ad11e" translate="yes" xml:space="preserve">
          <source>First, you must add the &lt;a href=&quot;../ref/middleware#django.contrib.auth.middleware.RemoteUserMiddleware&quot;&gt;&lt;code&gt;django.contrib.auth.middleware.RemoteUserMiddleware&lt;/code&gt;&lt;/a&gt; to the &lt;a href=&quot;../ref/settings#std:setting-MIDDLEWARE&quot;&gt;&lt;code&gt;MIDDLEWARE&lt;/code&gt;&lt;/a&gt; setting &lt;strong&gt;after&lt;/strong&gt; the &lt;a href=&quot;../ref/middleware#django.contrib.auth.middleware.AuthenticationMiddleware&quot;&gt;&lt;code&gt;django.contrib.auth.middleware.AuthenticationMiddleware&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">首先，必须在&lt;a href=&quot;../ref/middleware#django.contrib.auth.middleware.RemoteUserMiddleware&quot;&gt; &lt;code&gt;django.contrib.auth.middleware.RemoteUserMiddleware&lt;/code&gt; &lt;/a&gt;&lt;strong&gt;之后&lt;/strong&gt;将&lt;a href=&quot;../ref/middleware#django.contrib.auth.middleware.AuthenticationMiddleware&quot;&gt; &lt;code&gt;django.contrib.auth.middleware.AuthenticationMiddleware&lt;/code&gt; &lt;/a&gt;添加到&lt;a href=&quot;../ref/settings#std:setting-MIDDLEWARE&quot;&gt; &lt;code&gt;MIDDLEWARE&lt;/code&gt; &lt;/a&gt;设置中：&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="73abbbb12778e4c863b4cfddcc6f67ea55cc0130" translate="yes" xml:space="preserve">
          <source>First, you must get the CSRF token. How to do that depends on whether or not the &lt;a href=&quot;settings#std:setting-CSRF_USE_SESSIONS&quot;&gt;&lt;code&gt;CSRF_USE_SESSIONS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;settings#std:setting-CSRF_COOKIE_HTTPONLY&quot;&gt;&lt;code&gt;CSRF_COOKIE_HTTPONLY&lt;/code&gt;&lt;/a&gt; settings are enabled.</source>
          <target state="translated">首先，您必须获取CSRF令牌。具体操作取决于是否启用&lt;a href=&quot;settings#std:setting-CSRF_USE_SESSIONS&quot;&gt; &lt;code&gt;CSRF_USE_SESSIONS&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;settings#std:setting-CSRF_COOKIE_HTTPONLY&quot;&gt; &lt;code&gt;CSRF_COOKIE_HTTPONLY&lt;/code&gt; &lt;/a&gt;设置。</target>
        </trans-unit>
        <trans-unit id="3436659d0b5e771764d4e0fb1222b0bbb9e16717" translate="yes" xml:space="preserve">
          <source>Firstly - the &lt;code&gt;MembershipInline&lt;/code&gt; class references &lt;code&gt;Group.members.through&lt;/code&gt;. The &lt;code&gt;through&lt;/code&gt; attribute is a reference to the model that manages the many-to-many relation. This model is automatically created by Django when you define a many-to-many field.</source>
          <target state="translated">首先-在 &lt;code&gt;MembershipInline&lt;/code&gt; 类引用 &lt;code&gt;Group.members.through&lt;/code&gt; 。在 &lt;code&gt;through&lt;/code&gt; 属性是用于管理许多一对多关系模型的参考。当您定义多对多字段时，此模型由Django自动创建。</target>
        </trans-unit>
        <trans-unit id="47a2156582e62c3760eb7ba24dc66644c3150981" translate="yes" xml:space="preserve">
          <source>Firstly, in a real-life case you need to consider what is happening before and after your count to work out what&amp;rsquo;s an optimal way of doing it &lt;em&gt;in that particular context&lt;/em&gt;. The database optimization documents describes &lt;a href=&quot;db/optimization#overuse-of-count-and-exists&quot;&gt;a case where counting in the template would be better&lt;/a&gt;.</source>
          <target state="translated">首先，在现实生活中，您需要考虑计数前后发生的事情，以找出&lt;em&gt;在特定情况下&lt;/em&gt;执行此操作的最佳方法。数据库优化文档描述&lt;a href=&quot;db/optimization#overuse-of-count-and-exists&quot;&gt;了一种情况，在这种情况下，最好在模板中进行计数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="654babb9ef1f86c0cc82cbdc43ce71dd33c0363f" translate="yes" xml:space="preserve">
          <source>Firstly, in order to upload files, you&amp;rsquo;ll need to make sure that your &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; element correctly defines the &lt;code&gt;enctype&lt;/code&gt; as &lt;code&gt;&quot;multipart/form-data&quot;&lt;/code&gt;:</source>
          <target state="translated">首先，为了上传文件，您需要确保您的 &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 元素正确地将 &lt;code&gt;enctype&lt;/code&gt; 定义为 &lt;code&gt;&quot;multipart/form-data&quot;&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="ceb459ef79103d51bc85693c0b6aa6118973366d" translate="yes" xml:space="preserve">
          <source>Firstly, you can set an &lt;code&gt;app_name&lt;/code&gt; attribute in the included URLconf module, at the same level as the &lt;code&gt;urlpatterns&lt;/code&gt; attribute. You have to pass the actual module, or a string reference to the module, to &lt;a href=&quot;../../ref/urls#django.urls.include&quot;&gt;&lt;code&gt;include()&lt;/code&gt;&lt;/a&gt;, not the list of &lt;code&gt;urlpatterns&lt;/code&gt; itself.</source>
          <target state="translated">首先，您可以在随附的URLconf模块中将 &lt;code&gt;app_name&lt;/code&gt; 属性设置为与 &lt;code&gt;urlpatterns&lt;/code&gt; 属性相同的级别。您必须将实际模块或对该模块的字符串引用传递给&lt;a href=&quot;../../ref/urls#django.urls.include&quot;&gt; &lt;code&gt;include()&lt;/code&gt; &lt;/a&gt;，而不是 &lt;code&gt;urlpatterns&lt;/code&gt; 本身的列表。</target>
        </trans-unit>
        <trans-unit id="952d6d50050346e8e9fde3f473baa28e0cf1643d" translate="yes" xml:space="preserve">
          <source>Firstly, you can use the &lt;code&gt;send_messages()&lt;/code&gt; method. &lt;code&gt;send_messages()&lt;/code&gt; takes a list of &lt;a href=&quot;#django.core.mail.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; instances (or subclasses), and sends them all using a single connection.</source>
          <target state="translated">首先，您可以使用 &lt;code&gt;send_messages()&lt;/code&gt; 方法。 &lt;code&gt;send_messages()&lt;/code&gt; 获取&lt;a href=&quot;#django.core.mail.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt;实例（或子类）的列表，并使用单个连接将它们全部发送出去。</target>
        </trans-unit>
        <trans-unit id="ddd5f3c43d46d2dd84100e4b9202c1e150515732" translate="yes" xml:space="preserve">
          <source>Firstly, your tests must be &lt;code&gt;async def&lt;/code&gt; methods on the test class (in order to give them an asynchronous context). Django will automatically detect any &lt;code&gt;async def&lt;/code&gt; tests and wrap them so they run in their own event loop.</source>
          <target state="translated">首先，您的测试必须是测试类上的 &lt;code&gt;async def&lt;/code&gt; 方法（以便为它们提供异步上下文）。Django将自动检测任何 &lt;code&gt;async def&lt;/code&gt; 测试并将其包装，以便它们在自己的事件循环中运行。</target>
        </trans-unit>
        <trans-unit id="1d0e1d4e72315bbc94817bd7e1994f363c26f394" translate="yes" xml:space="preserve">
          <source>Fixing &lt;code&gt;UnicodeEncodeError&lt;/code&gt; for file uploads</source>
          <target state="translated">修复文件上传的 &lt;code&gt;UnicodeEncodeError&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8975443fcef2a9c2e02d4a2b02c41dba5c20d6fe" translate="yes" xml:space="preserve">
          <source>Fixing the bug</source>
          <target state="translated">修正错误</target>
        </trans-unit>
        <trans-unit id="d580141077874f18b73dcfdda86434ddde71ab28" translate="yes" xml:space="preserve">
          <source>Fixture loading</source>
          <target state="translated">夹具负荷</target>
        </trans-unit>
        <trans-unit id="93a9d4b62c49df4936d5f701755ab05d3a9187a5" translate="yes" xml:space="preserve">
          <source>Fixtures</source>
          <target state="translated">Fixtures</target>
        </trans-unit>
        <trans-unit id="649f72a93abda9c49a9ca63c86342bb63ae6a485" translate="yes" xml:space="preserve">
          <source>Fixtures are also used by the &lt;a href=&quot;../topics/testing/tools#topics-testing-fixtures&quot;&gt;testing framework&lt;/a&gt; to help set up a consistent test environment.</source>
          <target state="translated">&lt;a href=&quot;../topics/testing/tools#topics-testing-fixtures&quot;&gt;测试框架&lt;/a&gt;还使用夹具来帮助建立一致的测试环境。</target>
        </trans-unit>
        <trans-unit id="cc1b2f853c73dd2ef4af83d5cc672056528796fb" translate="yes" xml:space="preserve">
          <source>Fixtures generated with &lt;code&gt;USE_TZ = False&lt;/code&gt;, or before Django 1.4, use the &amp;ldquo;naive&amp;rdquo; format. If your project contains such fixtures, after you enable time zone support, you&amp;rsquo;ll see &lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#RuntimeWarning&quot;&gt;&lt;code&gt;RuntimeWarning&lt;/code&gt;&lt;/a&gt;s when you load them. To get rid of the warnings, you must convert your fixtures to the &amp;ldquo;aware&amp;rdquo; format.</source>
          <target state="translated">使用 &lt;code&gt;USE_TZ = False&lt;/code&gt; 生成的夹具，或者在Django 1.4之前的夹具，使用&amp;ldquo; 纯朴 &amp;rdquo;格式。如果您的项目包含此类固定装置，则在启用时区支持后，在加载时会看到&lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#RuntimeWarning&quot;&gt; &lt;code&gt;RuntimeWarning&lt;/code&gt; &lt;/a&gt;。为了摆脱警告，您必须将灯具转换为&amp;ldquo;意识&amp;rdquo;格式。</target>
        </trans-unit>
        <trans-unit id="31f4fad7b21527024016324c7145b53c88b4f070" translate="yes" xml:space="preserve">
          <source>Fixtures may be compressed in &lt;code&gt;zip&lt;/code&gt;, &lt;code&gt;gz&lt;/code&gt;, or &lt;code&gt;bz2&lt;/code&gt; format. For example:</source>
          <target state="translated">灯具可以 &lt;code&gt;zip&lt;/code&gt; ， &lt;code&gt;gz&lt;/code&gt; 或 &lt;code&gt;bz2&lt;/code&gt; 格式压缩。例如：</target>
        </trans-unit>
        <trans-unit id="0c5b989c2d6e6bdd59d22e11ad3c1993e41d8ac8" translate="yes" xml:space="preserve">
          <source>Flatpage templates</source>
          <target state="translated">平页模板</target>
        </trans-unit>
        <trans-unit id="ca8db34dc5820ff17af7ddc9a31f107d898dc72a" translate="yes" xml:space="preserve">
          <source>Flatpage templates are passed a single context variable, &lt;code&gt;flatpage&lt;/code&gt;, which is the flatpage object.</source>
          <target state="translated">简单页面模板传递单一上下文变量， &lt;code&gt;flatpage&lt;/code&gt; ，这是简单页面对象。</target>
        </trans-unit>
        <trans-unit id="7de6b24fcf1c2acb2cf38c3564995c617c021e83" translate="yes" xml:space="preserve">
          <source>Flatpages</source>
          <target state="translated">Flatpages</target>
        </trans-unit>
        <trans-unit id="1805c01f84a571eb39718db2b5c9de479ccb1b0b" translate="yes" xml:space="preserve">
          <source>Flatpages are represented by a standard &lt;a href=&quot;../../topics/db/models&quot;&gt;Django model&lt;/a&gt;, which lives in &lt;a href=&quot;https://github.com/django/django/blob/master/django/contrib/flatpages/models.py&quot;&gt;django/contrib/flatpages/models.py&lt;/a&gt;. You can access flatpage objects via the &lt;a href=&quot;../../topics/db/queries&quot;&gt;Django database API&lt;/a&gt;.</source>
          <target state="translated">Flatpage由标准&lt;a href=&quot;../../topics/db/models&quot;&gt;Django模型&lt;/a&gt;表示，该模型位于&lt;a href=&quot;https://github.com/django/django/blob/master/django/contrib/flatpages/models.py&quot;&gt;django / contrib / flatpages / models.py中&lt;/a&gt;。您可以通过&lt;a href=&quot;../../topics/db/queries&quot;&gt;Django数据库API&lt;/a&gt;访问平面对象。</target>
        </trans-unit>
        <trans-unit id="76bac1a4adf8a73eecc7c5cd6ace5a3ef38fbb8e" translate="yes" xml:space="preserve">
          <source>Flatpages will not apply view middleware</source>
          <target state="translated">Flatpages不会应用视图中间件</target>
        </trans-unit>
        <trans-unit id="be50bf019784d62df9e76ade29eac060efd356c2" translate="yes" xml:space="preserve">
          <source>Following relationships &amp;ldquo;backward&amp;rdquo;</source>
          <target state="translated">跟随关系&amp;ldquo;向后&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="72a2f7f3de2f03aa6bed21060ae26fa0ec8ee75a" translate="yes" xml:space="preserve">
          <source>Following relationships backwards</source>
          <target state="translated">逆向关系</target>
        </trans-unit>
        <trans-unit id="2962af366a6a17e326ab4f60b0fbf6a0f052eefd" translate="yes" xml:space="preserve">
          <source>Following these guidelines is particularly necessary if you write reusable forms, form fields, and model fields.</source>
          <target state="translated">如果你写的是可重用的表单、表单字段和模型字段,那么遵循这些准则是特别必要的。</target>
        </trans-unit>
        <trans-unit id="8799db14a19349173c508b9e0760c066a41322c9" translate="yes" xml:space="preserve">
          <source>Follows symlinks to directories when looking for new translation strings.</source>
          <target state="translated">在寻找新的翻译字符串时,跟踪指向目录的符号链接。</target>
        </trans-unit>
        <trans-unit id="4c9800d93f6eb82531c506a8502d3a682cbf8592" translate="yes" xml:space="preserve">
          <source>Foot, Foot (International)</source>
          <target state="translated">脚,脚(国际)</target>
        </trans-unit>
        <trans-unit id="ec0c3b76630fd745381cc215a284820af75a683a" translate="yes" xml:space="preserve">
          <source>Footnotes</source>
          <target state="translated">Footnotes</target>
        </trans-unit>
        <trans-unit id="8778e38c267b25f48a4d77bf61008d34682f3180" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;#django.db.models.DateField&quot;&gt;&lt;code&gt;DateField&lt;/code&gt;&lt;/a&gt;: &lt;code&gt;default=date.today&lt;/code&gt; - from &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.date.today&quot;&gt;&lt;code&gt;datetime.date.today()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">对于&lt;a href=&quot;#django.db.models.DateField&quot;&gt; &lt;code&gt;DateField&lt;/code&gt; &lt;/a&gt;： &lt;code&gt;default=date.today&lt;/code&gt; -从&lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.date.today&quot;&gt; &lt;code&gt;datetime.date.today()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="110b4938ed9062f37b2508210c9e670f18a44565" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;#django.db.models.DateTimeField&quot;&gt;&lt;code&gt;DateTimeField&lt;/code&gt;&lt;/a&gt;: &lt;code&gt;default=timezone.now&lt;/code&gt; - from &lt;a href=&quot;../utils#django.utils.timezone.now&quot;&gt;&lt;code&gt;django.utils.timezone.now()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">对于&lt;a href=&quot;#django.db.models.DateTimeField&quot;&gt; &lt;code&gt;DateTimeField&lt;/code&gt; &lt;/a&gt;： &lt;code&gt;default=timezone.now&lt;/code&gt; -来自&lt;a href=&quot;../utils#django.utils.timezone.now&quot;&gt; &lt;code&gt;django.utils.timezone.now()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="741319df59ed93ce505c7c02877f25b3ed1aaea2" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; objects, the &lt;code&gt;bulk&lt;/code&gt; argument is passed on to &lt;a href=&quot;#django.db.models.fields.related.RelatedManager.add&quot;&gt;&lt;code&gt;add()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.db.models.fields.related.RelatedManager.remove&quot;&gt;&lt;code&gt;remove()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对于&lt;a href=&quot;fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt;对象，将 &lt;code&gt;bulk&lt;/code&gt; 参数传递给&lt;a href=&quot;#django.db.models.fields.related.RelatedManager.add&quot;&gt; &lt;code&gt;add()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#django.db.models.fields.related.RelatedManager.remove&quot;&gt; &lt;code&gt;remove()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c9651ca2921e2480cd0c28bb2f088f3b4e6a026c" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; objects, this method accepts a &lt;code&gt;bulk&lt;/code&gt; argument to control how to perform the operation. If &lt;code&gt;True&lt;/code&gt; (the default), &lt;code&gt;QuerySet.update()&lt;/code&gt; is used. If &lt;code&gt;bulk=False&lt;/code&gt;, the &lt;code&gt;save()&lt;/code&gt; method of each individual model instance is called instead. This triggers the &lt;a href=&quot;../signals#django.db.models.signals.pre_save&quot;&gt;&lt;code&gt;pre_save&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../signals#django.db.models.signals.post_save&quot;&gt;&lt;code&gt;post_save&lt;/code&gt;&lt;/a&gt; signals and comes at the expense of performance.</source>
          <target state="translated">对于&lt;a href=&quot;fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt;对象，此方法接受 &lt;code&gt;bulk&lt;/code&gt; 参数来控制如何执行操作。如果为 &lt;code&gt;True&lt;/code&gt; （默认值），则使用 &lt;code&gt;QuerySet.update()&lt;/code&gt; 。如果 &lt;code&gt;bulk=False&lt;/code&gt; ，则改为调用每个单独的模型实例的 &lt;code&gt;save()&lt;/code&gt; 方法。这会触发&lt;a href=&quot;../signals#django.db.models.signals.pre_save&quot;&gt; &lt;code&gt;pre_save&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../signals#django.db.models.signals.post_save&quot;&gt; &lt;code&gt;post_save&lt;/code&gt; &lt;/a&gt;信号，并以牺牲性能为代价。</target>
        </trans-unit>
        <trans-unit id="7b7f862e3c2a20b574e8eef35fee476492f18603" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; objects, this method only exists if &lt;code&gt;null=True&lt;/code&gt;. If the related field can&amp;rsquo;t be set to &lt;code&gt;None&lt;/code&gt; (&lt;code&gt;NULL&lt;/code&gt;), then an object can&amp;rsquo;t be removed from a relation without being added to another. In the above example, removing &lt;code&gt;e&lt;/code&gt; from &lt;code&gt;b.entry_set()&lt;/code&gt; is equivalent to doing &lt;code&gt;e.blog = None&lt;/code&gt;, and because the &lt;code&gt;blog&lt;/code&gt;&lt;a href=&quot;fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; doesn&amp;rsquo;t have &lt;code&gt;null=True&lt;/code&gt;, this is invalid.</source>
          <target state="translated">对于&lt;a href=&quot;fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt;对象，此方法仅在 &lt;code&gt;null=True&lt;/code&gt; 时存在。如果相关字段不能设置为 &lt;code&gt;None&lt;/code&gt; （ &lt;code&gt;NULL&lt;/code&gt; ），则无法从一个关系中删除一个对象而不将其添加到另一个对象中。在上面的示例中，从 &lt;code&gt;b.entry_set()&lt;/code&gt; 中删除 &lt;code&gt;e&lt;/code&gt; 等同于执行 &lt;code&gt;e.blog = None&lt;/code&gt; ，并且由于 &lt;code&gt;blog&lt;/code&gt; &lt;a href=&quot;fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt;没有 &lt;code&gt;null=True&lt;/code&gt; ，因此这是无效的。</target>
        </trans-unit>
        <trans-unit id="7ec8fef3dc57b8e1919c123ac5e02c80e887f7f1" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;UserAttributeSimilarityValidator&lt;/code&gt; and &lt;code&gt;CommonPasswordValidator&lt;/code&gt;, we&amp;rsquo;re using the default settings in this example. &lt;code&gt;NumericPasswordValidator&lt;/code&gt; has no settings.</source>
          <target state="translated">对于 &lt;code&gt;UserAttributeSimilarityValidator&lt;/code&gt; 和 &lt;code&gt;CommonPasswordValidator&lt;/code&gt; ，我们在此示例中使用默认设置。 &lt;code&gt;NumericPasswordValidator&lt;/code&gt; 没有设置。</target>
        </trans-unit>
        <trans-unit id="cbe7a4654f6563b054d500267f83512db264635c" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;to_python()&lt;/code&gt;, if anything goes wrong during value conversion, you should raise a &lt;a href=&quot;../ref/exceptions#django.core.exceptions.ValidationError&quot;&gt;&lt;code&gt;ValidationError&lt;/code&gt;&lt;/a&gt; exception.</source>
          <target state="translated">对于 &lt;code&gt;to_python()&lt;/code&gt; ，如果在值转换期间发生任何错误，则应引发&lt;a href=&quot;../ref/exceptions#django.core.exceptions.ValidationError&quot;&gt; &lt;code&gt;ValidationError&lt;/code&gt; &lt;/a&gt;异常。</target>
        </trans-unit>
        <trans-unit id="9c6a88e5cfef39cc8e6590be619ddb6e98c6c41d" translate="yes" xml:space="preserve">
          <source>For &lt;em&gt;measuring&lt;/em&gt;, rather than querying on distances, use the &lt;a href=&quot;functions#django.contrib.gis.db.models.functions.Distance&quot;&gt;&lt;code&gt;Distance&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">要进行&lt;em&gt;测量&lt;/em&gt;，而不是查询距离，请使用&lt;a href=&quot;functions#django.contrib.gis.db.models.functions.Distance&quot;&gt; &lt;code&gt;Distance&lt;/code&gt; &lt;/a&gt;功能。</target>
        </trans-unit>
        <trans-unit id="ea0876de4dccf03bdae9009efcce83719085e5c0" translate="yes" xml:space="preserve">
          <source>For &lt;em&gt;text/*&lt;/em&gt; content-types, the character set (i.e. &lt;code&gt;utf8&lt;/code&gt;) supplied by the browser. Again, &amp;ldquo;trust but verify&amp;rdquo; is the best policy here.</source>
          <target state="translated">对于&lt;em&gt;text / *&lt;/em&gt;内容类型，是浏览器提供的字符集（即 &lt;code&gt;utf8&lt;/code&gt; ）。同样，&amp;ldquo;信任但验证&amp;rdquo;是此处的最佳策略。</target>
        </trans-unit>
        <trans-unit id="32b317d6f38f95199b66a362e3f52af6e0ffa8d9" translate="yes" xml:space="preserve">
          <source>For AJAX requests, the fallback will be performed only if the &lt;code&gt;next&lt;/code&gt; parameter was set. Otherwise a 204 status code (No Content) will be returned.</source>
          <target state="translated">对于AJAX请求，仅在设置了 &lt;code&gt;next&lt;/code&gt; 参数时才执行回退。否则，将返回204状态代码（无内容）。</target>
        </trans-unit>
        <trans-unit id="fd8d1898b2475523fa3b4c8d7e783aaa6ca7a841" translate="yes" xml:space="preserve">
          <source>For MIME types starting with &lt;code&gt;text/&lt;/code&gt;, binary data is handled as in &lt;code&gt;attach()&lt;/code&gt;.</source>
          <target state="translated">对于以 &lt;code&gt;text/&lt;/code&gt; 开头的MIME类型，二进制数据的处理方式与 &lt;code&gt;attach()&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="f8c398c7d9b66e5e9d90421bc591bb2afebb6ef8" translate="yes" xml:space="preserve">
          <source>For MIME types starting with &lt;em&gt;text/&lt;/em&gt;, binary data is handled as in &lt;code&gt;attach()&lt;/code&gt;.</source>
          <target state="translated">对于以&lt;em&gt;text /&lt;/em&gt;开头的MIME类型，二进制数据的处理方式与 &lt;code&gt;attach()&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="fb31c5f02b352bb580243f60983f2e82fd5cdc95" translate="yes" xml:space="preserve">
          <source>For MyISAM tables, &lt;code&gt;SPATIAL INDEX&lt;/code&gt; creates an R-tree index. For storage engines that support nonspatial indexing of spatial columns, the engine creates a B-tree index. A B-tree index on spatial values will be useful for exact-value lookups, but not for range scans.</source>
          <target state="translated">对于MyISAM表， &lt;code&gt;SPATIAL INDEX&lt;/code&gt; 创建一个R树索引。对于支持空间列的非空间索引的存储引擎，该引擎将创建B树索引。空间值的B树索引对于精确值查找很有用，但对于范围扫描则无用。</target>
        </trans-unit>
        <trans-unit id="114241fe165523586156c3d9b8b72468673e5a4e" translate="yes" xml:space="preserve">
          <source>For MySQL, this runs the &lt;code&gt;mysql&lt;/code&gt; command-line client.</source>
          <target state="translated">对于MySQL，这将运行 &lt;code&gt;mysql&lt;/code&gt; 命令行客户端。</target>
        </trans-unit>
        <trans-unit id="01e48f4df2874fe3eaa026122b760ee523ebd8e5" translate="yes" xml:space="preserve">
          <source>For OpenSolaris users, the system library path may be modified using the &lt;code&gt;crle&lt;/code&gt; utility. Run &lt;code&gt;crle&lt;/code&gt; with no options to see the current configuration and use &lt;code&gt;crle -l&lt;/code&gt; to set with the new library path. Be &lt;em&gt;very&lt;/em&gt; careful when modifying the system library path:</source>
          <target state="translated">对于OpenSolaris用户，可以使用 &lt;code&gt;crle&lt;/code&gt; 实用程序修改系统库路径。运行不带任何选项的 &lt;code&gt;crle&lt;/code&gt; 以查看当前配置，并使用 &lt;code&gt;crle -l&lt;/code&gt; 设置新的库路径。修改系统库路径时要&lt;em&gt;非常&lt;/em&gt;小心：</target>
        </trans-unit>
        <trans-unit id="3eeded676ad457b8d591af8ff3281ca437900ed1" translate="yes" xml:space="preserve">
          <source>For Oracle, this runs the &lt;code&gt;sqlplus&lt;/code&gt; command-line client.</source>
          <target state="translated">对于Oracle，这将运行 &lt;code&gt;sqlplus&lt;/code&gt; 命令行客户端。</target>
        </trans-unit>
        <trans-unit id="a982ff9d1e3163260b354c31d72394140bbcb2f3" translate="yes" xml:space="preserve">
          <source>For PostgreSQL, this runs the &lt;code&gt;psql&lt;/code&gt; command-line client.</source>
          <target state="translated">对于PostgreSQL， &lt;code&gt;psql&lt;/code&gt; 运行psql命令行客户端。</target>
        </trans-unit>
        <trans-unit id="bd417a019713a6904e3b18dff92248c76cc5011c" translate="yes" xml:space="preserve">
          <source>For SQLite, this runs the &lt;code&gt;sqlite3&lt;/code&gt; command-line client.</source>
          <target state="translated">对于SQLite， &lt;code&gt;sqlite3&lt;/code&gt; 运行sqlite3命令行客户端。</target>
        </trans-unit>
        <trans-unit id="fd5567ff92e75db4f3301c5a20e84775b7c0a7eb" translate="yes" xml:space="preserve">
          <source>For Windows users</source>
          <target state="translated">对于Windows用户</target>
        </trans-unit>
        <trans-unit id="cd102962a99ab92625c89315dc500f0b617135ca" translate="yes" xml:space="preserve">
          <source>For Windows users, who do not have symlinking functionality available, you can copy &lt;code&gt;django-admin.exe&lt;/code&gt; to a location on your existing path or edit the &lt;code&gt;PATH&lt;/code&gt; settings (under &lt;code&gt;Settings - Control Panel - System - Advanced -
Environment...&lt;/code&gt;) to point to its installed location.</source>
          <target state="translated">对于没有符号链接功能的Windows用户，您可以将 &lt;code&gt;django-admin.exe&lt;/code&gt; 复制到现有路径上的某个位置，或编辑 &lt;code&gt;PATH&lt;/code&gt; 设置（在 &lt;code&gt;Settings - Control Panel - System - Advanced - Environment...&lt;/code&gt; ）以指向到其安装位置。</target>
        </trans-unit>
        <trans-unit id="d15786dfcbe8be325214a68d56dd2416df64952e" translate="yes" xml:space="preserve">
          <source>For Windows, you may find binaries on the &lt;a href=&quot;https://www.gaia-gis.it/gaia-sins/&quot;&gt;Gaia-SINS&lt;/a&gt; home page.</source>
          <target state="translated">对于Windows，您可以在&lt;a href=&quot;https://www.gaia-gis.it/gaia-sins/&quot;&gt;Gaia-SINS&lt;/a&gt;主页上找到二进制文件。</target>
        </trans-unit>
        <trans-unit id="c0e34ff26a96c16c70436cafdd6406725c407716" translate="yes" xml:space="preserve">
          <source>For a &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; in &lt;a href=&quot;#django.contrib.auth.models.CustomUser.USERNAME_FIELD&quot;&gt;&lt;code&gt;USERNAME_FIELD&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#django.contrib.auth.models.CustomUser.REQUIRED_FIELDS&quot;&gt;&lt;code&gt;REQUIRED_FIELDS&lt;/code&gt;&lt;/a&gt;, these methods receive the value of the &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey.to_field&quot;&gt;&lt;code&gt;to_field&lt;/code&gt;&lt;/a&gt; (the &lt;a href=&quot;../../ref/models/fields#django.db.models.Field.primary_key&quot;&gt;&lt;code&gt;primary_key&lt;/code&gt;&lt;/a&gt; by default) of an existing instance.</source>
          <target state="translated">对于&lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; 的&lt;/a&gt;在&lt;a href=&quot;#django.contrib.auth.models.CustomUser.USERNAME_FIELD&quot;&gt; &lt;code&gt;USERNAME_FIELD&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#django.contrib.auth.models.CustomUser.REQUIRED_FIELDS&quot;&gt; &lt;code&gt;REQUIRED_FIELDS&lt;/code&gt; &lt;/a&gt;，这些方法接收的值&lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey.to_field&quot;&gt; &lt;code&gt;to_field&lt;/code&gt; &lt;/a&gt;（所述&lt;a href=&quot;../../ref/models/fields#django.db.models.Field.primary_key&quot;&gt; &lt;code&gt;primary_key&lt;/code&gt; &lt;/a&gt;现有实例的默认情况下）。</target>
        </trans-unit>
        <trans-unit id="a7695186a713f16de82312fa1c5040b7c4108194" translate="yes" xml:space="preserve">
          <source>For a &lt;code&gt;OneToOneField&lt;/code&gt;, you must duplicate the related object and assign it to the new object&amp;rsquo;s field to avoid violating the one-to-one unique constraint. For example, assuming &lt;code&gt;entry&lt;/code&gt; is already duplicated as above:</source>
          <target state="translated">对于 &lt;code&gt;OneToOneField&lt;/code&gt; ，您必须复制相关对象并将其分配给新对象的字段，以避免违反一对一的唯一约束。例如，假设 &lt;code&gt;entry&lt;/code&gt; 已经如上所述重复：</target>
        </trans-unit>
        <trans-unit id="9cc905172b60f8825495c9572f3c39b3a30f5ebc" translate="yes" xml:space="preserve">
          <source>For a &lt;code&gt;mimetype&lt;/code&gt; starting with &lt;code&gt;text/&lt;/code&gt;, content is expected to be a string. Binary data will be decoded using UTF-8, and if that fails, the MIME type will be changed to &lt;code&gt;application/octet-stream&lt;/code&gt; and the data will be attached unchanged.</source>
          <target state="translated">对于以 &lt;code&gt;text/&lt;/code&gt; 开头的 &lt;code&gt;mimetype&lt;/code&gt; ，内容应为字符串。二进制数据将使用UTF-8解码，如果失败，则MIME类型将更改为 &lt;code&gt;application/octet-stream&lt;/code&gt; ，并且数据将保持不变。</target>
        </trans-unit>
        <trans-unit id="4005e99c87e962d0a2b4d387ab79eadd80869dc8" translate="yes" xml:space="preserve">
          <source>For a &lt;code&gt;mimetype&lt;/code&gt; starting with &lt;em&gt;text/&lt;/em&gt;, content is expected to be a string. Binary data will be decoded using UTF-8, and if that fails, the MIME type will be changed to &lt;em&gt;application/octet-stream&lt;/em&gt; and the data will be attached unchanged.</source>
          <target state="translated">对于以&lt;em&gt;text /&lt;/em&gt;开头的 &lt;code&gt;mimetype&lt;/code&gt; ，内容应为字符串。二进制数据将使用UTF-8解码，如果失败，则MIME类型将更改为&lt;em&gt;application / octet-stream&lt;/em&gt;，并且数据将保持不变。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="aa5aa7c50d88712d846e66564756210e95dfb768" translate="yes" xml:space="preserve">
          <source>For a class to be a lookup, it must follow the &lt;a href=&quot;#query-expression&quot;&gt;Query Expression API&lt;/a&gt;. &lt;a href=&quot;#django.db.models.Lookup&quot;&gt;&lt;code&gt;Lookup&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.db.models.Transform&quot;&gt;&lt;code&gt;Transform&lt;/code&gt;&lt;/a&gt; naturally follow this API.</source>
          <target state="translated">要使一个类成为查找类，它必须遵循&lt;a href=&quot;#query-expression&quot;&gt;Query Expression API&lt;/a&gt;。&lt;a href=&quot;#django.db.models.Lookup&quot;&gt; &lt;code&gt;Lookup&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#django.db.models.Transform&quot;&gt; &lt;code&gt;Transform&lt;/code&gt; &lt;/a&gt;自然遵循此API。</target>
        </trans-unit>
        <trans-unit id="82837fb615d6fc0b73c8eb4b55c29471490a59c4" translate="yes" xml:space="preserve">
          <source>For a complete discussion on the usage of the following see the &lt;a href=&quot;../topics/i18n/translation&quot;&gt;translation documentation&lt;/a&gt;.</source>
          <target state="translated">有关以下用法的完整讨论，请参见&lt;a href=&quot;../topics/i18n/translation&quot;&gt;翻译文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bf48592cadcf03f73184b0bc732d907e2a1368ac" translate="yes" xml:space="preserve">
          <source>For a complete list of attributes and methods, see &lt;a href=&quot;../../ref/forms/api#django.forms.BoundField&quot;&gt;&lt;code&gt;BoundField&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关属性和方法的完整列表，请参见&lt;a href=&quot;../../ref/forms/api#django.forms.BoundField&quot;&gt; &lt;code&gt;BoundField&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="011f4946a4eac47d187c0cf11d388cc5cd400310" translate="yes" xml:space="preserve">
          <source>For a detailed description of how to create rasters using dictionary input, see &lt;a href=&quot;#gdal-raster-ds-input&quot;&gt;Creating rasters from data&lt;/a&gt;. For a detailed description of how to create rasters in the virtual filesystem, see &lt;a href=&quot;#gdal-raster-vsimem&quot;&gt;Using GDAL&amp;rsquo;s Virtual Filesystem&lt;/a&gt;.</source>
          <target state="translated">有关如何使用字典输入创建栅格的详细说明，请参见&lt;a href=&quot;#gdal-raster-ds-input&quot;&gt;从数据创建栅格&lt;/a&gt;。有关如何在虚拟文件系统中创建栅格的详细说明，请参见《&lt;a href=&quot;#gdal-raster-vsimem&quot;&gt;使用GDAL的虚拟文件系统》&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c0f2ca82bf7e80689578e1ccca6faf93f53a9e5f" translate="yes" xml:space="preserve">
          <source>For a full list of available settings, see the &lt;a href=&quot;../ref/settings&quot;&gt;settings reference&lt;/a&gt;.</source>
          <target state="translated">有关可用设置的完整列表，请参阅&lt;a href=&quot;../ref/settings&quot;&gt;设置参考&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b2bc5ac4a588fc66b6d4b867455953ec02cdd543" translate="yes" xml:space="preserve">
          <source>For a full list of options, refer to the commands own help by running:</source>
          <target state="translated">完整的选项列表,请参考命令本身的帮助,运行。</target>
        </trans-unit>
        <trans-unit id="25df3eb01267dee01663d3ac00097ce51467a7f3" translate="yes" xml:space="preserve">
          <source>For a high-level overview of searching, see the &lt;a href=&quot;../../../topics/db/search&quot;&gt;topic documentation&lt;/a&gt;.</source>
          <target state="translated">有关搜索的高级概述，请参阅&lt;a href=&quot;../../../topics/db/search&quot;&gt;主题文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c9dd739b05280b0b463ac62a5aa753bebf48ca31" translate="yes" xml:space="preserve">
          <source>For a list of PostgreSQL-specific indexes, see &lt;a href=&quot;../contrib/postgres/indexes#module-django.contrib.postgres.indexes&quot;&gt;&lt;code&gt;django.contrib.postgres.indexes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关PostgreSQL特定索引的列表，请参见&lt;a href=&quot;../contrib/postgres/indexes#module-django.contrib.postgres.indexes&quot;&gt; &lt;code&gt;django.contrib.postgres.indexes&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4891edfe9764d3a86746a95b02d8917cc69f1971" translate="yes" xml:space="preserve">
          <source>For a model which has a many-to-many relationship to itself through an intermediary model, two foreign keys to the same model are permitted, but they will be treated as the two (different) sides of the many-to-many relationship. If there are &lt;em&gt;more&lt;/em&gt; than two foreign keys though, you must also specify &lt;code&gt;through_fields&lt;/code&gt; as above, or a validation error will be raised.</source>
          <target state="translated">对于通过中介模型与其自身具有多对多关系的模型，允许使用同一模型的两个外键，但是它们将被视为多对多关系的两个（不同）方面。如果有&lt;em&gt;更多的&lt;/em&gt;比两个外键虽然，你还必须指定 &lt;code&gt;through_fields&lt;/code&gt; 如上，或验证错误将得到提升。</target>
        </trans-unit>
        <trans-unit id="d4589e3c17ea70bbb0bb53aa9f87352a326c8e0e" translate="yes" xml:space="preserve">
          <source>For a more complete example, a query logger could look like this:</source>
          <target state="translated">对于一个更完整的例子,一个查询记录器可以是这样的。</target>
        </trans-unit>
        <trans-unit id="c2705e09efedad5461b1eac01061451c6e4e8c3b" translate="yes" xml:space="preserve">
          <source>For a production environment, though, this is a really bad idea, because it leaks lots of information about your project: excerpts of your source code, local variables, settings, libraries used, etc.</source>
          <target state="translated">但对于生产环境来说,这是一个非常糟糕的主意,因为它泄露了很多关于你的项目的信息:你的源代码的摘录,本地变量,设置,使用的库等等。</target>
        </trans-unit>
        <trans-unit id="f9e4028e7889232ea20ffa255e19e88ae4589784" translate="yes" xml:space="preserve">
          <source>For a ton of examples, read the source code for Django&amp;rsquo;s default filters and tags. They&amp;rsquo;re in &lt;code&gt;django/template/defaultfilters.py&lt;/code&gt; and &lt;code&gt;django/template/defaulttags.py&lt;/code&gt;, respectively.</source>
          <target state="translated">有关大量示例，请阅读Django默认过滤器和标签的源代码。它们分别在 &lt;code&gt;django/template/defaultfilters.py&lt;/code&gt; 和 &lt;code&gt;django/template/defaulttags.py&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="245c192c3f0ca7c1f6c78ffc80a037f82e16bd32" translate="yes" xml:space="preserve">
          <source>For a typical Django project, invoking Daphne would look like:</source>
          <target state="translated">对于一个典型的Django项目来说,调用Daphne会是这样的。</target>
        </trans-unit>
        <trans-unit id="e9d03faed3bbf8f265eeb82e5681ec644ec4f4c7" translate="yes" xml:space="preserve">
          <source>For a typical Django project, invoking Hypercorn would look like:</source>
          <target state="translated">对于一个典型的Django项目来说,调用Hypercorn会是这样的。</target>
        </trans-unit>
        <trans-unit id="c59fdc8b86b62e3b1b65f5e777983d4f7cbaa527" translate="yes" xml:space="preserve">
          <source>For a typical Django project, invoking Uvicorn would look like:</source>
          <target state="translated">对于一个典型的Django项目来说,调用Uvicorn会是这样的。</target>
        </trans-unit>
        <trans-unit id="497b37841c09436a3f988aae8b8beb478ba72f8d" translate="yes" xml:space="preserve">
          <source>For a window frame, you can choose either a range-based sequence of rows or an ordinary sequence of rows.</source>
          <target state="translated">对于一个窗口框架,你可以选择基于范围的行序列或普通的行序列。</target>
        </trans-unit>
        <trans-unit id="01530861bb300440f6bf560ef6b0beca305c2166" translate="yes" xml:space="preserve">
          <source>For advanced usage you might want both a custom &lt;code&gt;Manager&lt;/code&gt; and a custom &lt;code&gt;QuerySet&lt;/code&gt;. You can do that by calling &lt;code&gt;Manager.from_queryset()&lt;/code&gt; which returns a &lt;em&gt;subclass&lt;/em&gt; of your base &lt;code&gt;Manager&lt;/code&gt; with a copy of the custom &lt;code&gt;QuerySet&lt;/code&gt; methods:</source>
          <target state="translated">对于高级用法，您可能需要自定义 &lt;code&gt;Manager&lt;/code&gt; 和自定义 &lt;code&gt;QuerySet&lt;/code&gt; 。您可以通过调用 &lt;code&gt;Manager.from_queryset()&lt;/code&gt; 来实现，该方法返回基本 &lt;code&gt;Manager&lt;/code&gt; 的&lt;em&gt;子类&lt;/em&gt;以及自定义 &lt;code&gt;QuerySet&lt;/code&gt; 方法的副本：</target>
        </trans-unit>
        <trans-unit id="114718eb9675b5c8dfa5883eba3eeb3ec318f68e" translate="yes" xml:space="preserve">
          <source>For all SQLite versions, there is some slightly counter-intuitive behavior when attempting to match some types of strings. These are triggered when using the &lt;a href=&quot;models/querysets#std:fieldlookup-iexact&quot;&gt;&lt;code&gt;iexact&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;models/querysets#std:fieldlookup-contains&quot;&gt;&lt;code&gt;contains&lt;/code&gt;&lt;/a&gt; filters in Querysets. The behavior splits into two cases:</source>
          <target state="translated">对于所有SQLite版本，尝试匹配某些类型的字符串时，都有一些违反直觉的行为。这些在使用&lt;a href=&quot;models/querysets#std:fieldlookup-iexact&quot;&gt; &lt;code&gt;iexact&lt;/code&gt; &lt;/a&gt;时触发，或在查询集中&lt;a href=&quot;models/querysets#std:fieldlookup-contains&quot;&gt; &lt;code&gt;contains&lt;/code&gt; &lt;/a&gt;过滤器。该行为分为两种情况：</target>
        </trans-unit>
        <trans-unit id="7091b793897c8691205b09008506e6f08af46e43" translate="yes" xml:space="preserve">
          <source>For all incoming requests that are not using HTTP GET, HEAD, OPTIONS or TRACE, a CSRF cookie must be present, and the &amp;lsquo;csrfmiddlewaretoken&amp;rsquo; field must be present and correct. If it isn&amp;rsquo;t, the user will get a 403 error.</source>
          <target state="translated">对于所有未使用HTTP GET，HEAD，OPTIONS或TRACE的传入请求，必须存在CSRF cookie，并且&amp;ldquo; csrfmiddlewaretoken&amp;rdquo;字段必须存在且正确。如果不是，则用户将收到403错误。</target>
        </trans-unit>
        <trans-unit id="e0536ba6b20984cd0e9e8b8216082fb8626aab8d" translate="yes" xml:space="preserve">
          <source>For an example see the section &lt;a href=&quot;#admin-custom-validation&quot;&gt;Adding custom validation to the admin&lt;/a&gt;.</source>
          <target state="translated">有关示例，请参阅&lt;a href=&quot;#admin-custom-validation&quot;&gt;将自定义验证添加到admin一节&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="433cfd366cb054017995f20d84b57630a94b2ff7" translate="yes" xml:space="preserve">
          <source>For an example using &lt;code&gt;SeparateDatabaseAndState&lt;/code&gt;, see &lt;a href=&quot;../howto/writing-migrations#changing-a-manytomanyfield-to-use-a-through-model&quot;&gt;Changing a ManyToManyField to use a through model&lt;/a&gt;.</source>
          <target state="translated">有关使用 &lt;code&gt;SeparateDatabaseAndState&lt;/code&gt; 的示例，请参见&lt;a href=&quot;../howto/writing-migrations#changing-a-manytomanyfield-to-use-a-through-model&quot;&gt;将ManyToManyField更改为使用直通模型&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cbd2efdcd0a5182eb99fe1c3c5af8e661cbb3c3b" translate="yes" xml:space="preserve">
          <source>For an example, see &lt;a href=&quot;../howto/static-files/deployment#staticfiles-from-cdn&quot;&gt;Serving static files from a cloud service or CDN&lt;/a&gt;.</source>
          <target state="translated">有关示例，请参阅&lt;a href=&quot;../howto/static-files/deployment#staticfiles-from-cdn&quot;&gt;从云服务或CDN提供静态文件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5e877fbbeaae4ebb5d6aaa8f8b9c8ab1b4e07bde" translate="yes" xml:space="preserve">
          <source>For an in-depth discussion of aggregation, see &lt;a href=&quot;../../topics/db/aggregation&quot;&gt;the topic guide on Aggregation&lt;/a&gt;.</source>
          <target state="translated">有关聚合的深入讨论，请参阅&lt;a href=&quot;../../topics/db/aggregation&quot;&gt;有关聚合的主题指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="57ec81e3704c6febf6a79630fa1ee31a957b3292" translate="yes" xml:space="preserve">
          <source>For an introduction to the static files app and some usage examples, see &lt;a href=&quot;../../howto/static-files/index&quot;&gt;Managing static files (e.g. images, JavaScript, CSS)&lt;/a&gt;. For guidelines on deploying static files, see &lt;a href=&quot;../../howto/static-files/deployment&quot;&gt;Deploying static files&lt;/a&gt;.</source>
          <target state="translated">有关静态文件应用程序的介绍和一些用法示例，请参阅&lt;a href=&quot;../../howto/static-files/index&quot;&gt;管理静态文件（例如，图像，JavaScript，CSS）&lt;/a&gt;。有关部署静态文件的指导，请参阅&lt;a href=&quot;../../howto/static-files/deployment&quot;&gt;部署静态文件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5b6e366f307e30cbc012445b0d5d8194205dfaf5" translate="yes" xml:space="preserve">
          <source>For an introduction to the use of &lt;a href=&quot;../../ref/contrib/staticfiles#module-django.contrib.staticfiles&quot;&gt;&lt;code&gt;django.contrib.staticfiles&lt;/code&gt;&lt;/a&gt;, see &lt;a href=&quot;index&quot;&gt;Managing static files (e.g. images, JavaScript, CSS)&lt;/a&gt;.</source>
          <target state="translated">有关&lt;a href=&quot;../../ref/contrib/staticfiles#module-django.contrib.staticfiles&quot;&gt; &lt;code&gt;django.contrib.staticfiles&lt;/code&gt; &lt;/a&gt;的使用的简介，请参阅&lt;a href=&quot;index&quot;&gt;管理静态文件（例如，图像，JavaScript，CSS）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ff33af586de20dcc9dc963235e63d160e339357a" translate="yes" xml:space="preserve">
          <source>For an introduction, see &lt;a href=&quot;../../topics/db/queries#field-lookups-intro&quot;&gt;models and database queries documentation&lt;/a&gt;.</source>
          <target state="translated">有关介绍，请参见&lt;a href=&quot;../../topics/db/queries#field-lookups-intro&quot;&gt;模型和数据库查询文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="91f45c0b4fdd79cf441093caaf95e3a639c7bf7e" translate="yes" xml:space="preserve">
          <source>For an introduction, see the &lt;a href=&quot;db-api#spatial-lookups-intro&quot;&gt;spatial lookups introduction&lt;/a&gt;. For an overview of what lookups are compatible with a particular spatial backend, refer to the &lt;a href=&quot;db-api#spatial-lookup-compatibility&quot;&gt;spatial lookup compatibility table&lt;/a&gt;.</source>
          <target state="translated">有关介绍，请参见&lt;a href=&quot;db-api#spatial-lookups-intro&quot;&gt;空间查找介绍&lt;/a&gt;。有关与特定空间后端兼容的查找的概述，请参考&lt;a href=&quot;db-api#spatial-lookup-compatibility&quot;&gt;空间查找兼容性表&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e566430cd1a2affb5f5c262cc70d975407c98c38" translate="yes" xml:space="preserve">
          <source>For an overview on performing distance queries, please refer to the &lt;a href=&quot;db-api#distance-queries&quot;&gt;distance queries introduction&lt;/a&gt;.</source>
          <target state="translated">有关执行距离查询的概述，请参阅&lt;a href=&quot;db-api#distance-queries&quot;&gt;距离查询简介&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="032e1a321d9ffc6c2146932f576a128a8e65fa68" translate="yes" xml:space="preserve">
          <source>For any other case where you would like to delay the translation, but have to pass the translatable string as argument to another function, you can wrap this function inside a lazy call yourself. For example:</source>
          <target state="translated">对于任何其他情况,如果你想延迟翻译,但必须将可翻译的字符串作为参数传递给另一个函数,你可以将这个函数包裹在自己的懒惰调用中。例如</target>
        </trans-unit>
        <trans-unit id="085ed960d0740bd94ea40506cfce694cfddc0a2f" translate="yes" xml:space="preserve">
          <source>For application authors</source>
          <target state="translated">给申请者</target>
        </trans-unit>
        <trans-unit id="7cec9e84482bc35d6c78faa794917c557d1e76eb" translate="yes" xml:space="preserve">
          <source>For application users</source>
          <target state="translated">对于应用程序用户</target>
        </trans-unit>
        <trans-unit id="73f138ffe9108c4f660de4277273d1ef1b89e005" translate="yes" xml:space="preserve">
          <source>For backends that use cookies, the settings for the cookie are taken from the session cookie settings:</source>
          <target state="translated">对于使用cookie的后台,cookie的设置来自会话cookie设置。</target>
        </trans-unit>
        <trans-unit id="57ad3cfd168ba96bdfced612c26a2ee2a767e407" translate="yes" xml:space="preserve">
          <source>For better performance, you may want to use a cache-based session backend.</source>
          <target state="translated">为了获得更好的性能,你可能希望使用基于缓存的会话后端。</target>
        </trans-unit>
        <trans-unit id="91bce32b94c71f60016d6667344912312df9c907" translate="yes" xml:space="preserve">
          <source>For both string-based and non-string-based fields, you will also need to set &lt;code&gt;blank=True&lt;/code&gt; if you wish to permit empty values in forms, as the &lt;a href=&quot;#django.db.models.Field.null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; parameter only affects database storage (see &lt;a href=&quot;#django.db.models.Field.blank&quot;&gt;&lt;code&gt;blank&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">对于基于字符串的字段和基于非字符串的字段，如果您希望在表单中允许使用空值，则还需要设置 &lt;code&gt;blank=True&lt;/code&gt; ，因为&lt;a href=&quot;#django.db.models.Field.null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt;参数仅影响数据库存储（请参见&lt;a href=&quot;#django.db.models.Field.blank&quot;&gt; &lt;code&gt;blank&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="3b0ab1dd7f1f1a3114560cdef94eeb046fe6b282" translate="yes" xml:space="preserve">
          <source>For building up fragments of HTML, you should normally be using &lt;a href=&quot;#django.utils.html.format_html&quot;&gt;&lt;code&gt;django.utils.html.format_html()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">为了构建HTML片段，通常应该改为使用&lt;a href=&quot;#django.utils.html.format_html&quot;&gt; &lt;code&gt;django.utils.html.format_html()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bd8eb4334d88a862d55ca5bac3a26a9a7a016bf0" translate="yes" xml:space="preserve">
          <source>For caches that don&amp;rsquo;t implement &lt;code&gt;close&lt;/code&gt; methods it is a no-op.</source>
          <target state="translated">对于没有实现 &lt;code&gt;close&lt;/code&gt; 方法的缓存，它是无操作的。</target>
        </trans-unit>
        <trans-unit id="79ba2e8a0fe994e51d4c92f58e97e335cd098d33" translate="yes" xml:space="preserve">
          <source>For cases like this, Django exposes a low-level cache API. You can use this API to store objects in the cache with any level of granularity you like. You can cache any Python object that can be pickled safely: strings, dictionaries, lists of model objects, and so forth. (Most common Python objects can be pickled; refer to the Python documentation for more information about pickling.)</source>
          <target state="translated">对于这样的情况,Django提供了一个低级别的缓存API。你可以使用这个API在缓存中存储你喜欢的任何粒度的对象。你可以缓存任何可以安全腌制的Python对象:字符串、字典、模型对象列表等等。(大多数常见的 Python 对象都可以被腌制,请参考 Python 文档以获得更多关于腌制的信息)。</target>
        </trans-unit>
        <trans-unit id="1fb48d8079dbe45b84226c3cadf04b90ce81a61a" translate="yes" xml:space="preserve">
          <source>For cases like this, use the &lt;code&gt;django.utils.functional.keep_lazy()&lt;/code&gt; decorator. It modifies the function so that &lt;em&gt;if&lt;/em&gt; it&amp;rsquo;s called with a lazy translation as one of its arguments, the function evaluation is delayed until it needs to be converted to a string.</source>
          <target state="translated">对于这种情况，请使用 &lt;code&gt;django.utils.functional.keep_lazy()&lt;/code&gt; 装饰器。它修改了函数，以便&lt;em&gt;如果&lt;/em&gt;以惰性翻译作为其参数之一调用函数，则函数求值将延迟到需要将其转换为字符串为止。</target>
        </trans-unit>
        <trans-unit id="994ead3f1356d2b1dba54966dd67fa94889eed63" translate="yes" xml:space="preserve">
          <source>For common setups with multiple databases, it isn&amp;rsquo;t useful to have these objects in more than one database. Common setups include primary/replica and connecting to external databases. Therefore, it&amp;rsquo;s recommended to write a &lt;a href=&quot;#topics-db-multi-db-routing&quot;&gt;database router&lt;/a&gt; that allows synchronizing these three models to only one database. Use the same approach for contrib and third-party apps that don&amp;rsquo;t need their tables in multiple databases.</source>
          <target state="translated">对于具有多个数据库的常见设置，将这些对象包含在多个数据库中没有用。常见设置包括主数据库/副本数据库和连接到外部数据库。因此，建议编写一个&lt;a href=&quot;#topics-db-multi-db-routing&quot;&gt;数据库路由器&lt;/a&gt;，以允许将这三个模型仅同步到一个数据库。对不需要多个数据库中的表的contrib和第三方应用程序使用相同的方法。</target>
        </trans-unit>
        <trans-unit id="9008520a23cc5398ce6e6e03cb58a6c8452a5ef0" translate="yes" xml:space="preserve">
          <source>For complete details on all the settings, commands, template tags, and other pieces included in &lt;a href=&quot;../../ref/contrib/staticfiles#module-django.contrib.staticfiles&quot;&gt;&lt;code&gt;django.contrib.staticfiles&lt;/code&gt;&lt;/a&gt;, see &lt;a href=&quot;../../ref/contrib/staticfiles&quot;&gt;the staticfiles reference&lt;/a&gt;.</source>
          <target state="translated">有关&lt;a href=&quot;../../ref/contrib/staticfiles#module-django.contrib.staticfiles&quot;&gt; &lt;code&gt;django.contrib.staticfiles&lt;/code&gt; 中&lt;/a&gt;包含的所有设置，命令，模板标记和其他部分的完整详细信息，请参见&lt;a href=&quot;../../ref/contrib/staticfiles&quot;&gt;staticfiles参考&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1ab98fe2e9e6c5b8dac81734119f6a96694f9705" translate="yes" xml:space="preserve">
          <source>For convenience, &lt;a href=&quot;#django.core.mail.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; provides a &lt;code&gt;send()&lt;/code&gt; method for sending a single email. If you need to send multiple messages, the email backend API &lt;a href=&quot;#topics-sending-multiple-emails&quot;&gt;provides an alternative&lt;/a&gt;.</source>
          <target state="translated">为了方便起见，&lt;a href=&quot;#django.core.mail.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt;提供了 &lt;code&gt;send()&lt;/code&gt; 方法来发送一封电子邮件。如果您需要发送多个消息，则电子邮件后端API &lt;a href=&quot;#topics-sending-multiple-emails&quot;&gt;提供了一种替代方法&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dd6bc939b24142ba0e1fff49a7e3dd24af2f2dbe" translate="yes" xml:space="preserve">
          <source>For convenience, &lt;code&gt;index_together&lt;/code&gt; can be a single list when dealing with a single set of fields:</source>
          <target state="translated">为了方便起见，在处理单个字段集时， &lt;code&gt;index_together&lt;/code&gt; 可以是单个列表：</target>
        </trans-unit>
        <trans-unit id="ce4cdf927e9d3f5bcc2a4d900ae3b68bcd958626" translate="yes" xml:space="preserve">
          <source>For convenience, &lt;code&gt;unique_together&lt;/code&gt; can be a single list when dealing with a single set of fields:</source>
          <target state="translated">为了方便起见，在处理单个字段集时， &lt;code&gt;unique_together&lt;/code&gt; 可以是单个列表：</target>
        </trans-unit>
        <trans-unit id="07080c385504623c0179d481408b47986bcaa26b" translate="yes" xml:space="preserve">
          <source>For convenience, Django offers different levels of cache granularity: you can cache the output of specific views, or only the pieces that are difficult to produce, or even an entire site.</source>
          <target state="translated">为了方便起见,Django提供了不同级别的缓存粒度:你可以缓存特定视图的输出,也可以只缓存难产的片段,甚至可以缓存整个网站。</target>
        </trans-unit>
        <trans-unit id="a33658bc26b48121cd01e6c62ea8102f8c745111" translate="yes" xml:space="preserve">
          <source>For convenience, Django provides a &lt;code&gt;pk&lt;/code&gt; lookup shortcut, which stands for &amp;ldquo;primary key&amp;rdquo;.</source>
          <target state="translated">为了方便起见，Django提供了一个 &lt;code&gt;pk&lt;/code&gt; 查找快捷方式，它代表&amp;ldquo;主键&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="8ba2fecb762785a1f98e5db46660c8f03323d035" translate="yes" xml:space="preserve">
          <source>For convenience, and because it&amp;rsquo;s a good idea to have a consistent 404 error page across your site, Django provides an &lt;code&gt;Http404&lt;/code&gt; exception. If you raise &lt;code&gt;Http404&lt;/code&gt; at any point in a view function, Django will catch it and return the standard error page for your application, along with an HTTP error code 404.</source>
          <target state="translated">为了方便起见，并且在整个网站上都具有一致的404错误页面是一个好主意，因此Django提供了 &lt;code&gt;Http404&lt;/code&gt; 异常。如果您在视图函数中的任何时候引发 &lt;code&gt;Http404&lt;/code&gt; ，Django都会捕获它并返回应用程序的标准错误页面以及HTTP错误代码404。</target>
        </trans-unit>
        <trans-unit id="6f355d7307dc13d50c50cd78d6a431ad52fb3a16" translate="yes" xml:space="preserve">
          <source>For convenience, each model has an &lt;a href=&quot;fields#django.db.models.AutoField&quot;&gt;&lt;code&gt;AutoField&lt;/code&gt;&lt;/a&gt; named &lt;code&gt;id&lt;/code&gt; by default unless you explicitly specify &lt;code&gt;primary_key=True&lt;/code&gt; on a field in your model. See the documentation for &lt;a href=&quot;fields#django.db.models.AutoField&quot;&gt;&lt;code&gt;AutoField&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">为方便起见，每个模型默认都有一个名为 &lt;code&gt;id&lt;/code&gt; 的&lt;a href=&quot;fields#django.db.models.AutoField&quot;&gt; &lt;code&gt;AutoField&lt;/code&gt; &lt;/a&gt;，除非您在模型中的字段上明确指定 &lt;code&gt;primary_key=True&lt;/code&gt; 。有关更多详细信息，请参见&lt;a href=&quot;fields#django.db.models.AutoField&quot;&gt; &lt;code&gt;AutoField&lt;/code&gt; &lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="00b6f399568caf034f2bd9baf36652b9633df6c5" translate="yes" xml:space="preserve">
          <source>For conversions, access the preferred unit attribute to get a converted distance quantity:</source>
          <target state="translated">对于换算,访问首选单位属性以获得换算后的距离量。</target>
        </trans-unit>
        <trans-unit id="17f5ab1e933cc3767d56d79b5fda1bc30762cc06" translate="yes" xml:space="preserve">
          <source>For creating bar charts and such, this tag calculates the ratio of a given value to a maximum value, and then applies that ratio to a constant.</source>
          <target state="translated">对于创建条形图等,该标签计算给定值与最大值的比率,然后将该比率应用于一个常数。</target>
        </trans-unit>
        <trans-unit id="9d659ee2de0bfab758a3c6297904c71bd25ed4d2" translate="yes" xml:space="preserve">
          <source>For databases other than SQLite</source>
          <target state="translated">对于SQLite以外的数据库</target>
        </trans-unit>
        <trans-unit id="26b228b856ac1e345526c8b4f3d28d81b09acc58" translate="yes" xml:space="preserve">
          <source>For date and date/time fields, you can add or subtract a &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.timedelta&quot;&gt;&lt;code&gt;timedelta&lt;/code&gt;&lt;/a&gt; object. The following would return all entries that were modified more than 3 days after they were published:</source>
          <target state="translated">对于日期和日期/时间字段，您可以添加或减去&lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.timedelta&quot;&gt; &lt;code&gt;timedelta&lt;/code&gt; &lt;/a&gt;对象。以下内容将返回所有已发布的修改超过3天的条目：</target>
        </trans-unit>
        <trans-unit id="c3ea98e4b4088a980b262038c9f53cd940a2574a" translate="yes" xml:space="preserve">
          <source>For date and datetime fields, a &amp;lsquo;day of the week&amp;rsquo; match. Allows chaining additional field lookups.</source>
          <target state="translated">对于日期和日期时间字段，&amp;ldquo;星期几&amp;rdquo;匹配。允许链接其他字段查找。</target>
        </trans-unit>
        <trans-unit id="a59621a4297e6672557ed775eda5c37a1765e762" translate="yes" xml:space="preserve">
          <source>For date and datetime fields, a &amp;lsquo;quarter of the year&amp;rsquo; match. Allows chaining additional field lookups. Takes an integer value between 1 and 4 representing the quarter of the year.</source>
          <target state="translated">对于日期和日期时间字段，&amp;ldquo;一年的四分之一&amp;rdquo;匹配。允许链接其他字段查找。取一个介于1到4之间的整数值，代表一年的四分之一。</target>
        </trans-unit>
        <trans-unit id="4202de970fe3340c6206e01e77e543ef6f13cc12" translate="yes" xml:space="preserve">
          <source>For date and datetime fields, an exact ISO 8601 day of the week match. Allows chaining additional field lookups.</source>
          <target state="translated">对于日期和日期时间字段,精确匹配ISO 8601星期几。允许链接其他字段的查询。</target>
        </trans-unit>
        <trans-unit id="42dd2feb45b5f660ff3b9a6d4074634986a29ee0" translate="yes" xml:space="preserve">
          <source>For date and datetime fields, an exact ISO 8601 week-numbering year match. Allows chaining additional field lookups. Takes an integer year.</source>
          <target state="translated">对于日期和日期时间字段,精确的ISO 8601周号年份匹配。允许链接其他字段的查询。取整数年。</target>
        </trans-unit>
        <trans-unit id="1593cffc96d622049ccdc42f7bb0f2a1ae8036b1" translate="yes" xml:space="preserve">
          <source>For date and datetime fields, an exact day match. Allows chaining additional field lookups. Takes an integer day.</source>
          <target state="translated">对于日期和日期时间字段,精确匹配日期。允许链接其他字段的查询。取整数日。</target>
        </trans-unit>
        <trans-unit id="49d38ad7fe93c4540c3f229ec62ec695a94c44d4" translate="yes" xml:space="preserve">
          <source>For date and datetime fields, an exact month match. Allows chaining additional field lookups. Takes an integer 1 (January) through 12 (December).</source>
          <target state="translated">对于日期和日期时间字段,精确的月份匹配。允许链接其他字段的查询。取整数1(1月)到12(12月)。</target>
        </trans-unit>
        <trans-unit id="606db62e280330ab2e78af535232722c97f0ff10" translate="yes" xml:space="preserve">
          <source>For date and datetime fields, an exact year match. Allows chaining additional field lookups. Takes an integer year.</source>
          <target state="translated">对于日期和日期时间字段,精确匹配年份。允许链接其他字段的查询。取整数年。</target>
        </trans-unit>
        <trans-unit id="5e7ddbc21aec55ccdb748d213426101dce95eb9c" translate="yes" xml:space="preserve">
          <source>For date and datetime fields, return the week number (1-52 or 53) according to &lt;a href=&quot;https://en.wikipedia.org/wiki/ISO-8601&quot;&gt;ISO-8601&lt;/a&gt;, i.e., weeks start on a Monday and the first week contains the year&amp;rsquo;s first Thursday.</source>
          <target state="translated">对于日期和日期时间字段，根据&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO-8601&quot;&gt;ISO-8601&lt;/a&gt;返回星期数（1-52或53），即，星期从星期一开始，而第一周包含年份的第一个星期四。</target>
        </trans-unit>
        <trans-unit id="dcf2e4875fa50e3add0a11dd7c345c91e31164aa" translate="yes" xml:space="preserve">
          <source>For dates that are the current day or within one day, return &amp;ldquo;today&amp;rdquo;, &amp;ldquo;tomorrow&amp;rdquo; or &amp;ldquo;yesterday&amp;rdquo;, as appropriate. Otherwise, format the date using the passed in format string.</source>
          <target state="translated">对于当天或一天之内的日期，请酌情返回&amp;ldquo;今天&amp;rdquo;，&amp;ldquo;明天&amp;rdquo;或&amp;ldquo;昨天&amp;rdquo;。否则，请使用传入的格式字符串设置日期格式。</target>
        </trans-unit>
        <trans-unit id="522a331d5225fa66def9fc3bd2e8fac66fc5b772" translate="yes" xml:space="preserve">
          <source>For datetime and time fields, an exact hour match. Allows chaining additional field lookups. Takes an integer between 0 and 23.</source>
          <target state="translated">对于日期时间和时间字段,精确的小时匹配。允许链式查找其他字段。取0到23之间的整数。</target>
        </trans-unit>
        <trans-unit id="ac89f2c106463643fd9699cf90f5e9127b0da47c" translate="yes" xml:space="preserve">
          <source>For datetime and time fields, an exact minute match. Allows chaining additional field lookups. Takes an integer between 0 and 59.</source>
          <target state="translated">对于日期时间和时间字段,精确的分钟匹配。允许链式查找其他字段。取0到59之间的整数。</target>
        </trans-unit>
        <trans-unit id="cb253c63a93a7f34a17bfff1bcace0dc8609b145" translate="yes" xml:space="preserve">
          <source>For datetime and time fields, an exact second match. Allows chaining additional field lookups. Takes an integer between 0 and 59.</source>
          <target state="translated">对于日期时间和时间字段,完全秒配。允许链式查找其他字段。取0到59之间的整数。</target>
        </trans-unit>
        <trans-unit id="065ccdbf361bd445a3ea9b16f5af4220346cf69e" translate="yes" xml:space="preserve">
          <source>For datetime fields, casts the value as date. Allows chaining additional field lookups. Takes a date value.</source>
          <target state="translated">对于日期时间字段,将值投射为日期。允许链接其他字段的查找。取一个日期值。</target>
        </trans-unit>
        <trans-unit id="5cb754f1dcc8bef12a5572feace62cc16ce3e1ad" translate="yes" xml:space="preserve">
          <source>For datetime fields, casts the value as time. Allows chaining additional field lookups. Takes a &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.time&quot;&gt;&lt;code&gt;datetime.time&lt;/code&gt;&lt;/a&gt; value.</source>
          <target state="translated">对于日期时间字段，将值强制转换为时间。允许链接其他字段查找。带有&lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.time&quot;&gt; &lt;code&gt;datetime.time&lt;/code&gt; &lt;/a&gt;值。</target>
        </trans-unit>
        <trans-unit id="287a99b6d2ccfdfa613eb3ea97b6c9626d6505b7" translate="yes" xml:space="preserve">
          <source>For datetime values, returns a string representing how many seconds, minutes or hours ago it was &amp;ndash; falling back to the &lt;a href=&quot;../templates/builtins#std:templatefilter-timesince&quot;&gt;&lt;code&gt;timesince&lt;/code&gt;&lt;/a&gt; format if the value is more than a day old. In case the datetime value is in the future the return value will automatically use an appropriate phrase.</source>
          <target state="translated">对于datetime值，返回一个字符串，该字符串表示该日期之前是多少秒，分钟或几小时&amp;ndash; 如果该值超过一天，则使用&lt;a href=&quot;../templates/builtins#std:templatefilter-timesince&quot;&gt; &lt;code&gt;timesince&lt;/code&gt; &lt;/a&gt;格式。如果datetime值在将来，则返回值将自动使用适当的短语。</target>
        </trans-unit>
        <trans-unit id="ce8b44858ceebee50a15dccd632d32f06ba831f7" translate="yes" xml:space="preserve">
          <source>For debug purposes only!</source>
          <target state="translated">仅供调试使用!</target>
        </trans-unit>
        <trans-unit id="1e5e8cc6373625d6ede780576c6909b6713e5dda" translate="yes" xml:space="preserve">
          <source>For definitions of the different versions of RSS, see: &lt;a href=&quot;https://web.archive.org/web/20110718035220/http://diveintomark.org/archives/2004/02/04/incompatible-rss&quot;&gt;https://web.archive.org/web/20110718035220/http://diveintomark.org/archives/2004/02/04/incompatible-rss&lt;/a&gt;</source>
          <target state="translated">有关不同版本的RSS的定义，请参阅：&lt;a href=&quot;https://web.archive.org/web/20110718035220/http://diveintomark.org/archives/2004/02/04/incompatible-rss&quot;&gt;https&lt;/a&gt; : //web.archive.org/web/20110718035220/http : //diveintomark.org/archives/2004/02/04/incompatible-rss</target>
        </trans-unit>
        <trans-unit id="0dc5d40b5d2ee131a558d783f74733735bef205e" translate="yes" xml:space="preserve">
          <source>For detailed description how names passed in &lt;code&gt;kwargs&lt;/code&gt; are resolved see &lt;a href=&quot;#django.db.models.query.QuerySet.get_or_create&quot;&gt;&lt;code&gt;get_or_create()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">为了详细说明，通过名称如何 &lt;code&gt;kwargs&lt;/code&gt; 都解决了看&lt;a href=&quot;#django.db.models.query.QuerySet.get_or_create&quot;&gt; &lt;code&gt;get_or_create()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7f6c3c45c81cb288d50532a438e4c2e1de010cf9" translate="yes" xml:space="preserve">
          <source>For details on accessing backwards-related objects, see the &lt;a href=&quot;queries#backwards-related-objects&quot;&gt;Following relationships backward example&lt;/a&gt;.</source>
          <target state="translated">有关访问向后相关对象的详细信息，请参见&lt;a href=&quot;queries#backwards-related-objects&quot;&gt;以下向后关系示例&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="163379e03ba2cf1b5d26dfdc8ca39d2b4c17c2a4" translate="yes" xml:space="preserve">
          <source>For details on how to add your own checks and integrate them with Django&amp;rsquo;s system checks, see the &lt;a href=&quot;../topics/checks&quot;&gt;System check topic guide&lt;/a&gt;.</source>
          <target state="translated">有关如何添加您自己的检查并将其与Django的系统检查集成的详细信息，请参见&lt;a href=&quot;../topics/checks&quot;&gt;系统检查主题指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5dc195be6c74605240dd1d253de36726e6d6d316" translate="yes" xml:space="preserve">
          <source>For details on how you&amp;rsquo;d write one of these backends, see &lt;a href=&quot;../custom-file-storage&quot;&gt;Writing a custom storage system&lt;/a&gt;. There are 3rd party apps available that provide storage backends for many common file storage APIs. A good starting point is the &lt;a href=&quot;https://djangopackages.org/grids/g/storage-backends/&quot;&gt;overview at djangopackages.org&lt;/a&gt;.</source>
          <target state="translated">有关如何编写这些后端之一的详细信息，请参阅《&lt;a href=&quot;../custom-file-storage&quot;&gt;编写自定义存储系统》&lt;/a&gt;。有可用的第三方应用程序为许多常见文件存储API提供存储后端。&lt;a href=&quot;https://djangopackages.org/grids/g/storage-backends/&quot;&gt;djangopackages.org&lt;/a&gt;上的概述是一个很好的起点。</target>
        </trans-unit>
        <trans-unit id="52957ba84f98b1d5cee6b3fcf986ebb5e0aeef4b" translate="yes" xml:space="preserve">
          <source>For details, see &lt;a href=&quot;#playing-with-context&quot;&gt;Playing with Context objects&lt;/a&gt; below.</source>
          <target state="translated">有关详细信息，请参见下面的&amp;ldquo; &lt;a href=&quot;#playing-with-context&quot;&gt;使用上下文对象播放&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8ca13a30dff65815da18fa43605645bf867c1ee7" translate="yes" xml:space="preserve">
          <source>For each &lt;a href=&quot;../../topics/templates#django.template.backends.django.DjangoTemplates&quot;&gt;&lt;code&gt;DjangoTemplates&lt;/code&gt;&lt;/a&gt; backend in the &lt;a href=&quot;../settings#std:setting-TEMPLATES&quot;&gt;&lt;code&gt;TEMPLATES&lt;/code&gt;&lt;/a&gt; setting, Django instantiates an &lt;a href=&quot;#django.template.Engine&quot;&gt;&lt;code&gt;Engine&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;../../topics/templates#django.template.backends.django.DjangoTemplates&quot;&gt;&lt;code&gt;DjangoTemplates&lt;/code&gt;&lt;/a&gt; wraps &lt;a href=&quot;#django.template.Engine&quot;&gt;&lt;code&gt;Engine&lt;/code&gt;&lt;/a&gt; and adapts it to the common template backend API.</source>
          <target state="translated">对于&lt;a href=&quot;../settings#std:setting-TEMPLATES&quot;&gt; &lt;code&gt;TEMPLATES&lt;/code&gt; &lt;/a&gt;设置中的每个&lt;a href=&quot;../../topics/templates#django.template.backends.django.DjangoTemplates&quot;&gt; &lt;code&gt;DjangoTemplates&lt;/code&gt; &lt;/a&gt;后端，Django实例化&lt;a href=&quot;#django.template.Engine&quot;&gt; &lt;code&gt;Engine&lt;/code&gt; &lt;/a&gt;。&lt;a href=&quot;../../topics/templates#django.template.backends.django.DjangoTemplates&quot;&gt; &lt;code&gt;DjangoTemplates&lt;/code&gt; &lt;/a&gt;包装了&lt;a href=&quot;#django.template.Engine&quot;&gt; &lt;code&gt;Engine&lt;/code&gt; ,&lt;/a&gt;并将其调整为适用于通用模板后端API。</target>
        </trans-unit>
        <trans-unit id="091dadf61f9a776beb554812fdfed65ad59f5923" translate="yes" xml:space="preserve">
          <source>For each action, you can supply either a list of values or a string. When the value already exists in the list, &lt;code&gt;append&lt;/code&gt; and &lt;code&gt;prepend&lt;/code&gt; have no effect; neither does &lt;code&gt;remove&lt;/code&gt; when the value doesn&amp;rsquo;t exist.</source>
          <target state="translated">对于每个操作，您都可以提供值列表或字符串。如果该值已存在于列表中，则 &lt;code&gt;append&lt;/code&gt; 和 &lt;code&gt;prepend&lt;/code&gt; 不起作用；当值不存在时，两个都不会 &lt;code&gt;remove&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eb987d0190d5c3530e37b746933ad08afcfcfcbc" translate="yes" xml:space="preserve">
          <source>For each field, we describe the default widget used if you don&amp;rsquo;t specify &lt;code&gt;widget&lt;/code&gt;. We also specify the value returned when you provide an empty value (see the section on &lt;code&gt;required&lt;/code&gt; above to understand what that means).</source>
          <target state="translated">对于每个字段，如果您不指定 &lt;code&gt;widget&lt;/code&gt; ，我们将描述使用的默认控件。当您提供空值时，我们还会指定返回的值（请参阅上面 &lt;code&gt;required&lt;/code&gt; 的部分以了解其含义）。</target>
        </trans-unit>
        <trans-unit id="d87202ef729a6cdd9bbc8a5b5c66e91ce34e02ed" translate="yes" xml:space="preserve">
          <source>For each model field that has &lt;a href=&quot;#django.db.models.Field.choices&quot;&gt;&lt;code&gt;choices&lt;/code&gt;&lt;/a&gt; set, Django will add a method to retrieve the human-readable name for the field&amp;rsquo;s current value. See &lt;a href=&quot;instances#django.db.models.Model.get_FOO_display&quot;&gt;&lt;code&gt;get_FOO_display()&lt;/code&gt;&lt;/a&gt; in the database API documentation.</source>
          <target state="translated">对于每个设置了&lt;a href=&quot;#django.db.models.Field.choices&quot;&gt; &lt;code&gt;choices&lt;/code&gt; &lt;/a&gt;模型字段，Django将添加一个方法来检索该字段的当前值的可读名称。请参阅数据库API文档中的&lt;a href=&quot;instances#django.db.models.Model.get_FOO_display&quot;&gt; &lt;code&gt;get_FOO_display()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b819f24d3cbd85ac1143152ab6d80ae072da700c" translate="yes" xml:space="preserve">
          <source>For each page (response) that Django sends back from a view, it might provide two HTTP headers: the &lt;code&gt;ETag&lt;/code&gt; header and the &lt;code&gt;Last-Modified&lt;/code&gt; header. These headers are optional on HTTP responses. They can be set by your view function, or you can rely on the &lt;a href=&quot;../ref/middleware#django.middleware.http.ConditionalGetMiddleware&quot;&gt;&lt;code&gt;ConditionalGetMiddleware&lt;/code&gt;&lt;/a&gt; middleware to set the &lt;code&gt;ETag&lt;/code&gt; header.</source>
          <target state="translated">对于Django从视图发送回的每个页面（响应），它可能提供两个HTTP标头： &lt;code&gt;ETag&lt;/code&gt; 标头和 &lt;code&gt;Last-Modified&lt;/code&gt; 标头。这些标头在HTTP响应中是可选的。可以通过您的视图函数来设置它们，或者您可以依靠&lt;a href=&quot;../ref/middleware#django.middleware.http.ConditionalGetMiddleware&quot;&gt; &lt;code&gt;ConditionalGetMiddleware&lt;/code&gt; &lt;/a&gt;中间件来设置 &lt;code&gt;ETag&lt;/code&gt; 头。</target>
        </trans-unit>
        <trans-unit id="56f104ebb00413a98694e90de1856d9319998a8a" translate="yes" xml:space="preserve">
          <source>For each row in your CSV file, call &lt;code&gt;writer.writerow&lt;/code&gt;, passing it an &lt;a href=&quot;https://docs.python.org/3/glossary.html#term-iterable&quot;&gt;iterable&lt;/a&gt;.</source>
          <target state="translated">对于CSV文件中的每一行，请调用 &lt;code&gt;writer.writerow&lt;/code&gt; ，并将其传递给&lt;a href=&quot;https://docs.python.org/3/glossary.html#term-iterable&quot;&gt;iterable&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3cab83a5a714010f9187f9c6425c8314cf762fc1" translate="yes" xml:space="preserve">
          <source>For each template tag the template parser encounters, it calls a Python function with the tag contents and the parser object itself. This function is responsible for returning a &lt;code&gt;Node&lt;/code&gt; instance based on the contents of the tag.</source>
          <target state="translated">对于模板解析器遇到的每个模板标签，它将调用带有标签内容和解析器对象本身的Python函数。该函数负责根据标签的内容返回 &lt;code&gt;Node&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="ca1d72c8182315b714de1b3cc74b5c3db54b95aa" translate="yes" xml:space="preserve">
          <source>For empty bands (where all pixel values are &amp;ldquo;no data&amp;rdquo;), all statistics are returned as &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">对于空波段（所有像素值均为&amp;ldquo;无数据&amp;rdquo;），所有统计信息均作为 &lt;code&gt;None&lt;/code&gt; 返回。</target>
        </trans-unit>
        <trans-unit id="86553258332baa0d4dd5dd4328d0faa7deb87755" translate="yes" xml:space="preserve">
          <source>For every &lt;a href=&quot;fields#django.db.models.DateField&quot;&gt;&lt;code&gt;DateField&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;fields#django.db.models.DateTimeField&quot;&gt;&lt;code&gt;DateTimeField&lt;/code&gt;&lt;/a&gt; that does not have &lt;a href=&quot;fields#django.db.models.Field.null&quot;&gt;&lt;code&gt;null=True&lt;/code&gt;&lt;/a&gt;, the object will have &lt;code&gt;get_next_by_FOO()&lt;/code&gt; and &lt;code&gt;get_previous_by_FOO()&lt;/code&gt; methods, where &lt;code&gt;FOO&lt;/code&gt; is the name of the field. This returns the next and previous object with respect to the date field, raising a &lt;a href=&quot;#django.db.models.Model.DoesNotExist&quot;&gt;&lt;code&gt;DoesNotExist&lt;/code&gt;&lt;/a&gt; exception when appropriate.</source>
          <target state="translated">对于每个不具有&lt;a href=&quot;fields#django.db.models.Field.null&quot;&gt; &lt;code&gt;null=True&lt;/code&gt; 的&lt;/a&gt;&lt;a href=&quot;fields#django.db.models.DateField&quot;&gt; &lt;code&gt;DateField&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;fields#django.db.models.DateTimeField&quot;&gt; &lt;code&gt;DateTimeField&lt;/code&gt; &lt;/a&gt;，该对象将具有 &lt;code&gt;get_next_by_FOO()&lt;/code&gt; 和 &lt;code&gt;get_previous_by_FOO()&lt;/code&gt; 方法，其中 &lt;code&gt;FOO&lt;/code&gt; 是字段的名称。这将返回有关日期字段的下一个和上一个对象，并在适当时引发&lt;a href=&quot;#django.db.models.Model.DoesNotExist&quot;&gt; &lt;code&gt;DoesNotExist&lt;/code&gt; &lt;/a&gt;异常。</target>
        </trans-unit>
        <trans-unit id="9772414f603012496ae23f0ba07a156e697088ca" translate="yes" xml:space="preserve">
          <source>For every &lt;a href=&quot;fields#django.db.models.DateField&quot;&gt;&lt;code&gt;DateField&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;fields#django.db.models.DateTimeField&quot;&gt;&lt;code&gt;DateTimeField&lt;/code&gt;&lt;/a&gt; that does not have &lt;a href=&quot;fields#django.db.models.Field.null&quot;&gt;&lt;code&gt;null=True&lt;/code&gt;&lt;/a&gt;, the object will have &lt;code&gt;get_next_by_FOO()&lt;/code&gt; and &lt;code&gt;get_previous_by_FOO()&lt;/code&gt; methods, where &lt;code&gt;FOO&lt;/code&gt; is the name of the field. This returns the next and previous object with respect to the date field, raising a &lt;a href=&quot;class#django.db.models.Model.DoesNotExist&quot;&gt;&lt;code&gt;DoesNotExist&lt;/code&gt;&lt;/a&gt; exception when appropriate.</source>
          <target state="translated">对于每个不具有&lt;a href=&quot;fields#django.db.models.Field.null&quot;&gt; &lt;code&gt;null=True&lt;/code&gt; 的&lt;/a&gt;&lt;a href=&quot;fields#django.db.models.DateField&quot;&gt; &lt;code&gt;DateField&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;fields#django.db.models.DateTimeField&quot;&gt; &lt;code&gt;DateTimeField&lt;/code&gt; &lt;/a&gt;，该对象将具有 &lt;code&gt;get_next_by_FOO()&lt;/code&gt; 和 &lt;code&gt;get_previous_by_FOO()&lt;/code&gt; 方法，其中 &lt;code&gt;FOO&lt;/code&gt; 是字段的名称。这将返回有关日期字段的下一个和上一个对象，并在适当时引发&lt;a href=&quot;class#django.db.models.Model.DoesNotExist&quot;&gt; &lt;code&gt;DoesNotExist&lt;/code&gt; &lt;/a&gt;异常。</target>
        </trans-unit>
        <trans-unit id="c6af115638455b1658d0ace819b2ffe32487193f" translate="yes" xml:space="preserve">
          <source>For every field that has &lt;a href=&quot;fields#django.db.models.Field.choices&quot;&gt;&lt;code&gt;choices&lt;/code&gt;&lt;/a&gt; set, the object will have a &lt;code&gt;get_FOO_display()&lt;/code&gt; method, where &lt;code&gt;FOO&lt;/code&gt; is the name of the field. This method returns the &amp;ldquo;human-readable&amp;rdquo; value of the field.</source>
          <target state="translated">对于每个设置了&lt;a href=&quot;fields#django.db.models.Field.choices&quot;&gt; &lt;code&gt;choices&lt;/code&gt; &lt;/a&gt;字段，该对象将具有 &lt;code&gt;get_FOO_display()&lt;/code&gt; 方法，其中 &lt;code&gt;FOO&lt;/code&gt; 是字段的名称。此方法返回该字段的&amp;ldquo;人类可读&amp;rdquo;值。</target>
        </trans-unit>
        <trans-unit id="a9d8934a0281dff5b47483effb2b261b49b28dd4" translate="yes" xml:space="preserve">
          <source>For example &lt;code&gt;Index(fields=['headline', '-pub_date'])&lt;/code&gt; would create SQL with &lt;code&gt;(headline, pub_date DESC)&lt;/code&gt;. Index ordering isn&amp;rsquo;t supported on MySQL. In that case, a descending index is created as a normal index.</source>
          <target state="translated">例如， &lt;code&gt;Index(fields=['headline', '-pub_date'])&lt;/code&gt; 将使用 &lt;code&gt;(headline, pub_date DESC)&lt;/code&gt; 创建SQL 。MySQL不支持索引排序。在这种情况下，将创建一个降序索引作为普通索引。</target>
        </trans-unit>
        <trans-unit id="a28eb7a67fa4fb46ad0e0b99179060eb9054ee2d" translate="yes" xml:space="preserve">
          <source>For example if you have &lt;code&gt;first_name&lt;/code&gt; as a model field and as a &lt;code&gt;ModelAdmin&lt;/code&gt; attribute, the model field will be used.</source>
          <target state="translated">例如，如果您具有 &lt;code&gt;first_name&lt;/code&gt; 作为模型字段和 &lt;code&gt;ModelAdmin&lt;/code&gt; 属性，则将使用模型字段。</target>
        </trans-unit>
        <trans-unit id="06db7318354368de96f4145dda37303d15869be2" translate="yes" xml:space="preserve">
          <source>For example if you wanted to customize the wording of all user facing strings for the &lt;code&gt;name&lt;/code&gt; field:</source>
          <target state="translated">例如，如果您想为 &lt;code&gt;name&lt;/code&gt; 字段自定义所有面向用户的字符串的措词：</target>
        </trans-unit>
        <trans-unit id="7cdc6afd51e180f7d936e985484811415dc36686" translate="yes" xml:space="preserve">
          <source>For example if you wanted to display a particular inline only in the change view, you could override &lt;code&gt;get_formsets_with_inlines&lt;/code&gt; as follows:</source>
          <target state="translated">例如，如果您只想在更改视图中显示特定的内联，则可以按如下所示覆盖 &lt;code&gt;get_formsets_with_inlines&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="f77c456b474676c048010c32ab9b46790e583436" translate="yes" xml:space="preserve">
          <source>For example to attach &lt;code&gt;request.user&lt;/code&gt; to the object prior to saving:</source>
          <target state="translated">例如，在保存之前将 &lt;code&gt;request.user&lt;/code&gt; 附加到对象：</target>
        </trans-unit>
        <trans-unit id="9ad3936c55afd72b17f1bad1033bbc892e0fb5f4" translate="yes" xml:space="preserve">
          <source>For example, &lt;a href=&quot;../topics/i18n/index&quot;&gt;internationalization&lt;/a&gt; middleware would need to distinguish caches by the &lt;code&gt;Accept-language&lt;/code&gt; header.</source>
          <target state="translated">例如，&lt;a href=&quot;../topics/i18n/index&quot;&gt;国际化&lt;/a&gt;中间件将需要通过 &lt;code&gt;Accept-language&lt;/code&gt; 标头区分缓存。</target>
        </trans-unit>
        <trans-unit id="9f50938580412245d851907183f7cbae1c995a73" translate="yes" xml:space="preserve">
          <source>For example, &lt;a href=&quot;fields#django.db.models.DateField&quot;&gt;&lt;code&gt;DateField&lt;/code&gt;&lt;/a&gt; fields use a Python &lt;code&gt;datetime&lt;/code&gt; object to store data. Databases don&amp;rsquo;t store &lt;code&gt;datetime&lt;/code&gt; objects, so the field value must be converted into an ISO-compliant date string for insertion into the database.</source>
          <target state="translated">例如，&lt;a href=&quot;fields#django.db.models.DateField&quot;&gt; &lt;code&gt;DateField&lt;/code&gt; &lt;/a&gt;字段使用Python &lt;code&gt;datetime&lt;/code&gt; 对象存储数据。数据库不存储 &lt;code&gt;datetime&lt;/code&gt; 对象，因此必须将字段值转换为符合ISO要求的日期字符串才能插入数据库。</target>
        </trans-unit>
        <trans-unit id="3a27bf38226ab7ff07f5623795efbd9cac29bd85" translate="yes" xml:space="preserve">
          <source>For example, &lt;a href=&quot;fields#django.forms.DateField&quot;&gt;&lt;code&gt;DateField&lt;/code&gt;&lt;/a&gt; normalizes input into a Python &lt;code&gt;datetime.date&lt;/code&gt; object. Regardless of whether you pass it a string in the format &lt;code&gt;'1994-07-15'&lt;/code&gt;, a &lt;code&gt;datetime.date&lt;/code&gt; object, or a number of other formats, &lt;code&gt;DateField&lt;/code&gt; will always normalize it to a &lt;code&gt;datetime.date&lt;/code&gt; object as long as it&amp;rsquo;s valid.</source>
          <target state="translated">例如，&lt;a href=&quot;fields#django.forms.DateField&quot;&gt; &lt;code&gt;DateField&lt;/code&gt; &lt;/a&gt;将输入标准化为Python &lt;code&gt;datetime.date&lt;/code&gt; 对象。无论您以 &lt;code&gt;'1994-07-15'&lt;/code&gt; 格式传递字符串， &lt;code&gt;datetime.date&lt;/code&gt; 对象还是其他多种格式，只要 &lt;code&gt;DateField&lt;/code&gt; 有效，DateField都会始终将其标准化为 &lt;code&gt;datetime.date&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="a7d3d035b67f52b99c390681f0df8036d9d1284d" translate="yes" xml:space="preserve">
          <source>For example, &lt;a href=&quot;i18n/translation#lazy-translations&quot;&gt;lazy translation&lt;/a&gt; can be used before the target language is even known, because it doesn&amp;rsquo;t take place until the translated string is actually required, such as in a rendered template.</source>
          <target state="translated">例如，可以在甚至不知道目标语言之前就使用&lt;a href=&quot;i18n/translation#lazy-translations&quot;&gt;惰性翻译&lt;/a&gt;，因为直到真正需要翻译后的字符串（例如在渲染的模板中）时，它才发生。</target>
        </trans-unit>
        <trans-unit id="65626bcffc97252495c52e838ec35256fdf62bcb" translate="yes" xml:space="preserve">
          <source>For example, &lt;a href=&quot;utils#django.utils.translation.gettext&quot;&gt;&lt;code&gt;gettext()&lt;/code&gt;&lt;/a&gt; uses the app registry to look up translation catalogs in applications. To translate at import time, you need &lt;a href=&quot;utils#django.utils.translation.gettext_lazy&quot;&gt;&lt;code&gt;gettext_lazy()&lt;/code&gt;&lt;/a&gt; instead. (Using &lt;a href=&quot;utils#django.utils.translation.gettext&quot;&gt;&lt;code&gt;gettext()&lt;/code&gt;&lt;/a&gt; would be a bug, because the translation would happen at import time, rather than at each request depending on the active language.)</source>
          <target state="translated">例如，&lt;a href=&quot;utils#django.utils.translation.gettext&quot;&gt; &lt;code&gt;gettext()&lt;/code&gt; &lt;/a&gt;使用应用程序注册表在应用程序中查找翻译目录。要在导入时进行翻译，您需要使用&lt;a href=&quot;utils#django.utils.translation.gettext_lazy&quot;&gt; &lt;code&gt;gettext_lazy()&lt;/code&gt; &lt;/a&gt;代替。（使用&lt;a href=&quot;utils#django.utils.translation.gettext&quot;&gt; &lt;code&gt;gettext()&lt;/code&gt; &lt;/a&gt;将是一个错误，因为翻译将在导入时发生，而不是根据活动语言在每次请求时进行。）</target>
        </trans-unit>
        <trans-unit id="f5be2fd2ea1a9ec8e596aeedb6d085b373362255" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;CheckConstraint(check=Q(age__gte=18), name='age_gte_18')&lt;/code&gt; ensures the age field is never less than 18.</source>
          <target state="translated">例如， &lt;code&gt;CheckConstraint(check=Q(age__gte=18), name='age_gte_18')&lt;/code&gt; 可确保年龄字段不小于18。</target>
        </trans-unit>
        <trans-unit id="12d159ad663a37fc7486d7d61ec051e5cf1aeeac" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;GinIndex(name='json_index', fields=['jsonfield'],
opclasses=['jsonb_path_ops'])&lt;/code&gt; creates a gin index on &lt;code&gt;jsonfield&lt;/code&gt; using &lt;code&gt;jsonb_path_ops&lt;/code&gt;.</source>
          <target state="translated">例如， &lt;code&gt;GinIndex(name='json_index', fields=['jsonfield'], opclasses=['jsonb_path_ops'])&lt;/code&gt; 使用 &lt;code&gt;jsonb_path_ops&lt;/code&gt; 在 &lt;code&gt;jsonfield&lt;/code&gt; 上创建gin索引。</target>
        </trans-unit>
        <trans-unit id="8529ce07a1126b744d3c5ea07ee62908bb7f707a" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;SELECT DISTINCT ON (a)&lt;/code&gt; gives you the first row for each value in column &lt;code&gt;a&lt;/code&gt;. If you don&amp;rsquo;t specify an order, you&amp;rsquo;ll get some arbitrary row.</source>
          <target state="translated">例如， &lt;code&gt;SELECT DISTINCT ON (a)&lt;/code&gt; 给出了你的第一行中的列中的每个值 &lt;code&gt;a&lt;/code&gt; 。如果您不指定订单，则会得到一些任意行。</target>
        </trans-unit>
        <trans-unit id="390b16cd2cf8e734568d834589997b24d4d5756d" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;UniqueConstraint(fields=['room', 'date'],
name='unique_booking')&lt;/code&gt; ensures each room can only be booked once for each date.</source>
          <target state="translated">例如， &lt;code&gt;UniqueConstraint(fields=['room', 'date'], name='unique_booking')&lt;/code&gt; 确保每个房间每个日期只能预订一次。</target>
        </trans-unit>
        <trans-unit id="daa52bee5674e99acfc849dbcff198f33e258e7e" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;foo.com/bar&lt;/code&gt; will be redirected to &lt;code&gt;foo.com/bar/&lt;/code&gt; if you don&amp;rsquo;t have a valid URL pattern for &lt;code&gt;foo.com/bar&lt;/code&gt; but &lt;em&gt;do&lt;/em&gt; have a valid pattern for &lt;code&gt;foo.com/bar/&lt;/code&gt;.</source>
          <target state="translated">例如，如果您没有 &lt;code&gt;foo.com/bar/&lt;/code&gt; 的有效URL模式，但&lt;em&gt;确实&lt;/em&gt;有 &lt;code&gt;foo.com/bar&lt;/code&gt; /的有效模式，则 &lt;code&gt;foo.com/bar&lt;/code&gt; 将被重定向到 &lt;code&gt;foo.com/bar/&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="acda421e62fa57606e2437699da05abac72b152b" translate="yes" xml:space="preserve">
          <source>For example, Django uses the following method for its &lt;a href=&quot;../ref/models/fields#django.db.models.BinaryField&quot;&gt;&lt;code&gt;BinaryField&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">例如，Django对其&lt;a href=&quot;../ref/models/fields#django.db.models.BinaryField&quot;&gt; &lt;code&gt;BinaryField&lt;/code&gt; &lt;/a&gt;使用以下方法：</target>
        </trans-unit>
        <trans-unit id="8e172ef87663d0b86cc887111ff1dc787b57de3f" translate="yes" xml:space="preserve">
          <source>For example, Django was used at &lt;a href=&quot;http://www.kusports.com/&quot;&gt;kusports.com&lt;/a&gt; to generate customized, printer-friendly NCAA tournament brackets, as PDF files, for people participating in a March Madness contest.</source>
          <target state="translated">例如，在&lt;a href=&quot;http://www.kusports.com/&quot;&gt;kusports.com&lt;/a&gt;上使用Django 为参加March Madness竞赛的人们生成了定制的，打印机友好的NCAA锦标赛括号，为PDF文件。</target>
        </trans-unit>
        <trans-unit id="80943883f7d984a6641475f505bdfdd86703d93d" translate="yes" xml:space="preserve">
          <source>For example, a JSON mixin might look something like this:</source>
          <target state="translated">例如,一个JSON mixin可能看起来像这样。</target>
        </trans-unit>
        <trans-unit id="d622b054a138b10227a9f803d572d5e5a50d59f0" translate="yes" xml:space="preserve">
          <source>For example, a website could offer an RSS feed of recent crimes for every police beat in a city. It&amp;rsquo;d be silly to create a separate &lt;a href=&quot;#django.contrib.syndication.views.Feed&quot;&gt;&lt;code&gt;Feed&lt;/code&gt;&lt;/a&gt; class for each police beat; that would violate the &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/misc/design-philosophies/#dry&quot;&gt;DRY principle&lt;/a&gt; and would couple data to programming logic. Instead, the syndication framework lets you access the arguments passed from your &lt;a href=&quot;../../topics/http/urls&quot;&gt;URLconf&lt;/a&gt; so feeds can output items based on information in the feed&amp;rsquo;s URL.</source>
          <target state="translated">例如，一个网站可以为城市中每一个被警察殴打的人提供近期犯罪的RSS提要。为每个警察节拍创建一个单独的&lt;a href=&quot;#django.contrib.syndication.views.Feed&quot;&gt; &lt;code&gt;Feed&lt;/code&gt; &lt;/a&gt;类是很愚蠢的。这将违反&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/misc/design-philosophies/#dry&quot;&gt;DRY原理&lt;/a&gt;，并将数据耦合到编程逻辑。相反，联合框架允许您访问从&lt;a href=&quot;../../topics/http/urls&quot;&gt;URLconf&lt;/a&gt;传递的参数，以便提要可以根据提要URL中的信息输出项目。</target>
        </trans-unit>
        <trans-unit id="0570efa58b3d49a98020b20aef23d877304adeaa" translate="yes" xml:space="preserve">
          <source>For example, a website could offer an RSS feed of recent crimes for every police beat in a city. It&amp;rsquo;d be silly to create a separate &lt;a href=&quot;#django.contrib.syndication.views.Feed&quot;&gt;&lt;code&gt;Feed&lt;/code&gt;&lt;/a&gt; class for each police beat; that would violate the &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/misc/design-philosophies/#dry&quot;&gt;DRY principle&lt;/a&gt; and would couple data to programming logic. Instead, the syndication framework lets you access the arguments passed from your &lt;a href=&quot;../../topics/http/urls&quot;&gt;URLconf&lt;/a&gt; so feeds can output items based on information in the feed&amp;rsquo;s URL.</source>
          <target state="translated">例如，一个网站可以为城市中每一个被警察殴打的人提供近期犯罪的RSS提要。为每个警察节拍创建一个单独的&lt;a href=&quot;#django.contrib.syndication.views.Feed&quot;&gt; &lt;code&gt;Feed&lt;/code&gt; &lt;/a&gt;类是很愚蠢的。这将违反&lt;a href=&quot;https://docs.djangoproject.com/en/3.1/misc/design-philosophies/#dry&quot;&gt;DRY原理&lt;/a&gt;，并将数据耦合到编程逻辑。相反，联合框架允许您访问从&lt;a href=&quot;../../topics/http/urls&quot;&gt;URLconf&lt;/a&gt;传递的参数，以便提要可以基于提要URL中的信息输出项目。</target>
        </trans-unit>
        <trans-unit id="32c09ab0d99cab3d599659013ef2ae359d32fd04" translate="yes" xml:space="preserve">
          <source>For example, an attacker could log into &lt;code&gt;good.example.com&lt;/code&gt; and get a valid session for their account. If the attacker has control over &lt;code&gt;bad.example.com&lt;/code&gt;, they can use it to send their session key to you since a subdomain is permitted to set cookies on &lt;code&gt;*.example.com&lt;/code&gt;. When you visit &lt;code&gt;good.example.com&lt;/code&gt;, you&amp;rsquo;ll be logged in as the attacker and might inadvertently enter your sensitive personal data (e.g. credit card info) into the attacker&amp;rsquo;s account.</source>
          <target state="translated">例如，攻击者可以登录 &lt;code&gt;good.example.com&lt;/code&gt; 并获得其帐户的有效会话。如果攻击者可以控制 &lt;code&gt;bad.example.com&lt;/code&gt; ，则可以使用它向您发送会话密钥，因为允许子域在 &lt;code&gt;*.example.com&lt;/code&gt; 上设置cookie 。当您访问 &lt;code&gt;good.example.com&lt;/code&gt; 时，您将以攻击者身份登录，并且可能无意中将您的敏感个人数据（例如信用卡信息）输入到攻击者的帐户中。</target>
        </trans-unit>
        <trans-unit id="a246838b4dded87ebc8eaa300c816133a80d83cb" translate="yes" xml:space="preserve">
          <source>For example, assuming an Email model that has a &lt;code&gt;body&lt;/code&gt; attribute and a many-to-many relation to User, the following template code is optimal:</source>
          <target state="translated">例如，假设电子邮件模型具有 &lt;code&gt;body&lt;/code&gt; 属性和与用户的多对多关系，则以下模板代码是最佳的：</target>
        </trans-unit>
        <trans-unit id="1d722e1124a3a5f8ff5fb6e2d47961555ceb8107" translate="yes" xml:space="preserve">
          <source>For example, assuming the following class-based view:</source>
          <target state="translated">例如,假设以下基于类的观点。</target>
        </trans-unit>
        <trans-unit id="f24493d60cc4ff3745f2d26d5246cb69bda1d13d" translate="yes" xml:space="preserve">
          <source>For example, assuming you have &lt;a href=&quot;#std:setting-STATIC_URL&quot;&gt;&lt;code&gt;STATIC_URL&lt;/code&gt;&lt;/a&gt; set to &lt;code&gt;'/static/'&lt;/code&gt;, the &lt;a href=&quot;contrib/staticfiles#django-admin-collectstatic&quot;&gt;&lt;code&gt;collectstatic&lt;/code&gt;&lt;/a&gt; management command would collect the &amp;ldquo;stats&amp;rdquo; files in a &lt;code&gt;'downloads'&lt;/code&gt; subdirectory of &lt;a href=&quot;#std:setting-STATIC_ROOT&quot;&gt;&lt;code&gt;STATIC_ROOT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">例如，假设您将&lt;a href=&quot;#std:setting-STATIC_URL&quot;&gt; &lt;code&gt;STATIC_URL&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;'/static/'&lt;/code&gt; ，&lt;a href=&quot;contrib/staticfiles#django-admin-collectstatic&quot;&gt; &lt;code&gt;collectstatic&lt;/code&gt; &lt;/a&gt;管理命令将在&lt;a href=&quot;#std:setting-STATIC_ROOT&quot;&gt; &lt;code&gt;STATIC_ROOT&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;'downloads'&lt;/code&gt; 子目录中收集&amp;ldquo;统计&amp;rdquo;文件。</target>
        </trans-unit>
        <trans-unit id="b76b34053dc515346add887966fae4b47621b177" translate="yes" xml:space="preserve">
          <source>For example, both of these models use the same underlying database table:</source>
          <target state="translated">例如,这两种模式都使用相同的基础数据库表。</target>
        </trans-unit>
        <trans-unit id="be04b24d7f1f643fa63e9892d175c3cc722c423b" translate="yes" xml:space="preserve">
          <source>For example, consider an author query that attempts to find out the average rating of books written by each author:</source>
          <target state="translated">例如,考虑一个作者查询,试图找出每个作者所写书籍的平均评分。</target>
        </trans-unit>
        <trans-unit id="4d41e3a123d0a71ac27a375044995f1535e74d7c" translate="yes" xml:space="preserve">
          <source>For example, consider the case of an application tracking the musical groups which musicians belong to. There is a many-to-many relationship between a person and the groups of which they are a member, so you could use a &lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt; to represent this relationship. However, there is a lot of detail about the membership that you might want to collect, such as the date at which the person joined the group.</source>
          <target state="translated">例如，考虑应用程序跟踪音乐家所属的音乐团体的情况。一个人与其所属的组之间存在多对多关系，因此您可以使用&lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt; &lt;code&gt;ManyToManyField&lt;/code&gt; &lt;/a&gt;表示这种关系。但是，关于您可能希望收集的成员资格，有很多详细信息，例如该人加入该组的日期。</target>
        </trans-unit>
        <trans-unit id="1ee6868d72ee360f060d928e04a60f0b6da77184" translate="yes" xml:space="preserve">
          <source>For example, consider the following exchange between the client and server:</source>
          <target state="translated">例如,考虑以下客户端和服务器之间的交流。</target>
        </trans-unit>
        <trans-unit id="fefa82ba367cd0c4e495f81beae9f409ac13e437" translate="yes" xml:space="preserve">
          <source>For example, consider the following models:</source>
          <target state="translated">例如,考虑以下模型。</target>
        </trans-unit>
        <trans-unit id="50dfca05afb0b864e6e367b2f5b53711b365f279" translate="yes" xml:space="preserve">
          <source>For example, for a GitHub-like website this would mean that if a logged-in user follows a link to a private GitHub project posted on a corporate discussion forum or email, GitHub will not receive the session cookie and the user won&amp;rsquo;t be able to access the project. A bank website, however, most likely doesn&amp;rsquo;t want to allow any transactional pages to be linked from external sites so the &lt;code&gt;'Strict'&lt;/code&gt; flag would be appropriate.</source>
          <target state="translated">例如，对于类似GitHub的网站，这意味着，如果已登录的用户跟随指向在公司讨论论坛或电子邮件上发布的私有GitHub项目的链接，则GitHub将不会收到会话Cookie，并且该用户将不会能够访问该项目。但是，银行网站很可能不希望从外部站点链接任何交易页面，因此使用 &lt;code&gt;'Strict'&lt;/code&gt; 标记是合适的。</target>
        </trans-unit>
        <trans-unit id="8b8d15a169d7dd783fadfe82b49729567dc09a23" translate="yes" xml:space="preserve">
          <source>For example, for this setting:</source>
          <target state="translated">例如,对于这种设置。</target>
        </trans-unit>
        <trans-unit id="30bca72fc5eb012eefb4e2af9f75a79bc0ea52c8" translate="yes" xml:space="preserve">
          <source>For example, given &lt;code&gt;MyModel&lt;/code&gt; with an &lt;code&gt;active&lt;/code&gt; field, this snippet ensures that the &lt;code&gt;if obj.active&lt;/code&gt; check at the end uses the correct value if updating &lt;code&gt;active&lt;/code&gt; to &lt;code&gt;True&lt;/code&gt; fails in the transaction:</source>
          <target state="translated">例如，给定 &lt;code&gt;MyModel&lt;/code&gt; 带有 &lt;code&gt;active&lt;/code&gt; 字段，此代码段可确保 &lt;code&gt;if obj.active&lt;/code&gt; 在事务中将 &lt;code&gt;active&lt;/code&gt; 更新为 &lt;code&gt;True&lt;/code&gt; 失败，最后的if obj.active检查使用正确的值：</target>
        </trans-unit>
        <trans-unit id="8fca2e153a6817b31175cf122ed1bf76d7dbff22" translate="yes" xml:space="preserve">
          <source>For example, given an app &lt;code&gt;common/models.py&lt;/code&gt;:</source>
          <target state="translated">例如，给定一个应用 &lt;code&gt;common/models.py&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="82c068a3348e9335855de4571fd3358289bf5be2" translate="yes" xml:space="preserve">
          <source>For example, given this stored procedure in an Oracle database:</source>
          <target state="translated">例如,给定Oracle数据库中的这个存储过程。</target>
        </trans-unit>
        <trans-unit id="5e0f6022b0d932e3ce9cc4127fab69a392204cda" translate="yes" xml:space="preserve">
          <source>For example, here is the partial definition for a user model that defines two required fields - a date of birth and height:</source>
          <target state="translated">例如,这里是一个用户模型的部分定义,定义了两个必填字段--出生日期和身高。</target>
        </trans-unit>
        <trans-unit id="f080380cc91321db18be0ed5e5b2815307b9d0ca" translate="yes" xml:space="preserve">
          <source>For example, here&amp;rsquo;s a custom template tag, &lt;code&gt;{% upper %}&lt;/code&gt;, that capitalizes everything between itself and &lt;code&gt;{% endupper %}&lt;/code&gt;.</source>
          <target state="translated">例如，这是一个自定义模板标签 &lt;code&gt;{% upper %}&lt;/code&gt; ，它大写了它自己和 &lt;code&gt;{% endupper %}&lt;/code&gt; 之间的所有内容。</target>
        </trans-unit>
        <trans-unit id="9b9d735b9c5b8d870234e558bacbf34dd9c85bd5" translate="yes" xml:space="preserve">
          <source>For example, here&amp;rsquo;s a validator that only allows even numbers:</source>
          <target state="translated">例如，这是一个仅允许偶数的验证器：</target>
        </trans-unit>
        <trans-unit id="cd701cbfd16d3186e327aaf9b1f84400d53c091b" translate="yes" xml:space="preserve">
          <source>For example, here&amp;rsquo;s an attack scenario if you use &lt;a href=&quot;https://docs.python.org/3/library/pickle.html#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; to serialize session data. If you&amp;rsquo;re using the &lt;a href=&quot;#cookie-session-backend&quot;&gt;signed cookie session backend&lt;/a&gt; and &lt;a href=&quot;../../ref/settings#std:setting-SECRET_KEY&quot;&gt;&lt;code&gt;SECRET_KEY&lt;/code&gt;&lt;/a&gt; is known by an attacker (there isn&amp;rsquo;t an inherent vulnerability in Django that would cause it to leak), the attacker could insert a string into their session which, when unpickled, executes arbitrary code on the server. The technique for doing so is simple and easily available on the internet. Although the cookie session storage signs the cookie-stored data to prevent tampering, a &lt;a href=&quot;../../ref/settings#std:setting-SECRET_KEY&quot;&gt;&lt;code&gt;SECRET_KEY&lt;/code&gt;&lt;/a&gt; leak immediately escalates to a remote code execution vulnerability.</source>
          <target state="translated">例如，如果您使用&lt;a href=&quot;https://docs.python.org/3/library/pickle.html#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt;序列化会话数据，这是一种攻击情形。如果您使用&lt;a href=&quot;#cookie-session-backend&quot;&gt;签名的Cookie会话后端，&lt;/a&gt;并且攻击者知道&lt;a href=&quot;../../ref/settings#std:setting-SECRET_KEY&quot;&gt; &lt;code&gt;SECRET_KEY&lt;/code&gt; &lt;/a&gt;（Django中没有一个固有的漏洞会导致其泄漏），则攻击者可以在其会话中插入一个字符串，该字符串在未腌制时将执行服务器上的任意代码。这样做的技术很简单，并且可以在Internet上轻松获得。尽管cookie会话存储对cookie存储的数据进行签名以防止篡改，但是&lt;a href=&quot;../../ref/settings#std:setting-SECRET_KEY&quot;&gt; &lt;code&gt;SECRET_KEY&lt;/code&gt; &lt;/a&gt;泄漏立即升级为远程代码执行漏洞。</target>
        </trans-unit>
        <trans-unit id="a9b99d628c1b69952232a27efb8b776dffa490e3" translate="yes" xml:space="preserve">
          <source>For example, here&amp;rsquo;s an excerpt of the URLconf for the &lt;a href=&quot;https://www.djangoproject.com/&quot;&gt;Django website&lt;/a&gt; itself. It includes a number of other URLconfs:</source>
          <target state="translated">例如，这是&lt;a href=&quot;https://www.djangoproject.com/&quot;&gt;Django网站&lt;/a&gt;本身的URLconf的摘录。它包括许多其他URLconf：</target>
        </trans-unit>
        <trans-unit id="e64d241ee6301d9415a0df7e9b9bd01aead3c6f9" translate="yes" xml:space="preserve">
          <source>For example, here&amp;rsquo;s how sending our &lt;code&gt;pizza_done&lt;/code&gt; signal might look:</source>
          <target state="translated">例如，这是发送我们的 &lt;code&gt;pizza_done&lt;/code&gt; 信号的样子：</target>
        </trans-unit>
        <trans-unit id="d11541a9d468d4cd46d6175644e9833e8b842148" translate="yes" xml:space="preserve">
          <source>For example, if &lt;a href=&quot;#std:setting-FORMAT_MODULE_PATH&quot;&gt;&lt;code&gt;FORMAT_MODULE_PATH&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;mysite.formats&lt;/code&gt;, and current language is &lt;code&gt;en&lt;/code&gt; (English), Django will expect a directory tree like:</source>
          <target state="translated">例如，如果&lt;a href=&quot;#std:setting-FORMAT_MODULE_PATH&quot;&gt; &lt;code&gt;FORMAT_MODULE_PATH&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;mysite.formats&lt;/code&gt; ，并且当前语言为 &lt;code&gt;en&lt;/code&gt; （英语），则Django将期望使用以下目录树：</target>
        </trans-unit>
        <trans-unit id="6a2c4dfd529a15047ff27aa7ebeab7fae04103b1" translate="yes" xml:space="preserve">
          <source>For example, if &lt;code&gt;path('users/&amp;lt;id&amp;gt;/', ...)&lt;/code&gt; is the matching pattern, &lt;code&gt;route&lt;/code&gt; will contain &lt;code&gt;'users/&amp;lt;id&amp;gt;/'&lt;/code&gt;.</source>
          <target state="translated">例如，如果 &lt;code&gt;path('users/&amp;lt;id&amp;gt;/', ...)&lt;/code&gt; 是匹配模式，则 &lt;code&gt;route&lt;/code&gt; 将包含 &lt;code&gt;'users/&amp;lt;id&amp;gt;/'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="19d132541d20fc7bb2eb3a1a61268013dfbd96b2" translate="yes" xml:space="preserve">
          <source>For example, if &lt;code&gt;substring&lt;/code&gt; is user-provided, this function is vulnerable to SQL injection:</source>
          <target state="translated">例如，如果用户提供了 &lt;code&gt;substring&lt;/code&gt; ，则此函数容易受到SQL注入的攻击：</target>
        </trans-unit>
        <trans-unit id="7160212d78e297bff74fb80841aa3967df415bb3" translate="yes" xml:space="preserve">
          <source>For example, if a &lt;code&gt;Car&lt;/code&gt; model has a &lt;code&gt;Manufacturer&lt;/code&gt; &amp;ndash; that is, a &lt;code&gt;Manufacturer&lt;/code&gt; makes multiple cars but each &lt;code&gt;Car&lt;/code&gt; only has one &lt;code&gt;Manufacturer&lt;/code&gt; &amp;ndash; use the following definitions:</source>
          <target state="translated">例如，如果一个 &lt;code&gt;Car&lt;/code&gt; 模型有一个 &lt;code&gt;Manufacturer&lt;/code&gt; （即 &lt;code&gt;Manufacturer&lt;/code&gt; 制造多辆汽车，但每辆 &lt;code&gt;Car&lt;/code&gt; 只有一个 &lt;code&gt;Manufacturer&lt;/code&gt; ，则使用以下定义：</target>
        </trans-unit>
        <trans-unit id="497cc39ebcbf9a72f2dc078c2f7c50e504273f18" translate="yes" xml:space="preserve">
          <source>For example, if a &lt;code&gt;Pizza&lt;/code&gt; can have multiple &lt;code&gt;Topping&lt;/code&gt; objects, modeled like this:</source>
          <target state="translated">例如，如果一个 &lt;code&gt;Pizza&lt;/code&gt; 可以有多个&amp;ldquo; &lt;code&gt;Topping&lt;/code&gt; 对象，则建模如下：</target>
        </trans-unit>
        <trans-unit id="88a926ad96f67f15047715985b0884ddf137184c" translate="yes" xml:space="preserve">
          <source>For example, if a &lt;code&gt;Pizza&lt;/code&gt; has multiple &lt;code&gt;Topping&lt;/code&gt; objects &amp;ndash; that is, a &lt;code&gt;Topping&lt;/code&gt; can be on multiple pizzas and each &lt;code&gt;Pizza&lt;/code&gt; has multiple toppings &amp;ndash; here&amp;rsquo;s how you&amp;rsquo;d represent that:</source>
          <target state="translated">例如，如果一个 &lt;code&gt;Pizza&lt;/code&gt; 有多个 &lt;code&gt;Topping&lt;/code&gt; 对象-即 &lt;code&gt;Topping&lt;/code&gt; 可以在多个比萨饼，每个 &lt;code&gt;Pizza&lt;/code&gt; 具有多种配料-这里是你要如何表示：</target>
        </trans-unit>
        <trans-unit id="959fca095f33dfcfecd28d18457fa30c5abdbc45" translate="yes" xml:space="preserve">
          <source>For example, if a template &lt;code&gt;foo.html&lt;/code&gt; has &lt;code&gt;{% load humanize %}&lt;/code&gt;, a child template (e.g., one that has &lt;code&gt;{% extends &quot;foo.html&quot; %}&lt;/code&gt;) will &lt;em&gt;not&lt;/em&gt; have access to the humanize template tags and filters. The child template is responsible for its own &lt;code&gt;{% load humanize %}&lt;/code&gt;.</source>
          <target state="translated">例如，如果模板 &lt;code&gt;foo.html&lt;/code&gt; 具有 &lt;code&gt;{% load humanize %}&lt;/code&gt; ，则子模板（例如，具有 &lt;code&gt;{% extends &quot;foo.html&quot; %}&lt;/code&gt; 的子模板）将&lt;em&gt;无法&lt;/em&gt;访问人性化模板标签和过滤器。子模板负责自己的 &lt;code&gt;{% load humanize %}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cd0e16779d42e07a7aabddc148bbb9f4e659913c" translate="yes" xml:space="preserve">
          <source>For example, if a user requested the URL &amp;ldquo;/articles/2005/05/39323/&amp;rdquo;, Django would call the function &lt;code&gt;news.views.article_detail(request,
year=2005, month=5, pk=39323)&lt;/code&gt;.</source>
          <target state="translated">例如，如果用户请求URL&amp;ldquo; / articles / 2005/05/39323 /&amp;rdquo;，则Django将调用函数 &lt;code&gt;news.views.article_detail(request, year=2005, month=5, pk=39323)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3ad997f20e49acf7a66e8c036a9a971fcba2d02b" translate="yes" xml:space="preserve">
          <source>For example, if an article is only allowed on a single site, you&amp;rsquo;d use a model like this:</source>
          <target state="translated">例如，如果只允许在单个站点上发表文章，则可以使用如下模型：</target>
        </trans-unit>
        <trans-unit id="73ec1fd7ebab8cecdff688bce69fda29e88b07f3" translate="yes" xml:space="preserve">
          <source>For example, if the &lt;code&gt;Article&lt;/code&gt; model looks like this:</source>
          <target state="translated">例如，如果 &lt;code&gt;Article&lt;/code&gt; 模型如下所示：</target>
        </trans-unit>
        <trans-unit id="7644c6b385544646926cd0a3a90e3256cdd6c0dd" translate="yes" xml:space="preserve">
          <source>For example, if the &lt;code&gt;WSGIScriptAlias&lt;/code&gt; for your application is set to &lt;code&gt;&quot;/minfo&quot;&lt;/code&gt;, then &lt;code&gt;path&lt;/code&gt; might be &lt;code&gt;&quot;/minfo/music/bands/the_beatles/&quot;&lt;/code&gt; and &lt;code&gt;path_info&lt;/code&gt; would be &lt;code&gt;&quot;/music/bands/the_beatles/&quot;&lt;/code&gt;.</source>
          <target state="translated">例如，如果您的应用程序的 &lt;code&gt;WSGIScriptAlias&lt;/code&gt; 设置为 &lt;code&gt;&quot;/minfo&quot;&lt;/code&gt; ，则 &lt;code&gt;path&lt;/code&gt; 可能是 &lt;code&gt;&quot;/minfo/music/bands/the_beatles/&quot;&lt;/code&gt; 而 &lt;code&gt;path_info&lt;/code&gt; 将是 &lt;code&gt;&quot;/music/bands/the_beatles/&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="77e90f3bf3275646db6a9c846ad34e0a66e6d861" translate="yes" xml:space="preserve">
          <source>For example, if the default ordering is by a non-unique &lt;code&gt;name&lt;/code&gt; field, then the changelist is sorted by &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;pk&lt;/code&gt;. This could perform poorly if you have a lot of rows and don&amp;rsquo;t have an index on &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;pk&lt;/code&gt;.</source>
          <target state="translated">例如，如果默认排序是通过非唯一 &lt;code&gt;name&lt;/code&gt; 字段进行的，那么更改列表将按 &lt;code&gt;name&lt;/code&gt; 和 &lt;code&gt;pk&lt;/code&gt; 排序。如果您有很多行并且在 &lt;code&gt;name&lt;/code&gt; 和 &lt;code&gt;pk&lt;/code&gt; 上没有索引，则此方法的性能可能会很差。</target>
        </trans-unit>
        <trans-unit id="f4e149bd799a81643324e12a0b823ee09731d37e" translate="yes" xml:space="preserve">
          <source>For example, if the models for your application live in the module &lt;code&gt;myapp.models&lt;/code&gt; (the package structure that is created for an application by the &lt;a href=&quot;../../ref/django-admin#django-admin-startapp&quot;&gt;&lt;code&gt;manage.py startapp&lt;/code&gt;&lt;/a&gt; script), &lt;a href=&quot;../../ref/settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; should read, in part:</source>
          <target state="translated">例如，如果您的应用程序模型位于模块 &lt;code&gt;myapp.models&lt;/code&gt; （由&lt;a href=&quot;../../ref/django-admin#django-admin-startapp&quot;&gt; &lt;code&gt;manage.py startapp&lt;/code&gt; &lt;/a&gt;脚本为应用程序创建的包结构）中，则&lt;a href=&quot;../../ref/settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;应该部分读取：</target>
        </trans-unit>
        <trans-unit id="b0c347e5fa8a57d3a7946043b8e71f27df336b80" translate="yes" xml:space="preserve">
          <source>For example, if we had a &lt;code&gt;Book&lt;/code&gt; model with a &lt;code&gt;ManyToManyField&lt;/code&gt; linking to &lt;code&gt;Author&lt;/code&gt;, we could add a through model &lt;code&gt;AuthorBook&lt;/code&gt; with a new field &lt;code&gt;is_primary&lt;/code&gt;, like so:</source>
          <target state="translated">例如，如果我们有一个 &lt;code&gt;Book&lt;/code&gt; 模型，其中的 &lt;code&gt;ManyToManyField&lt;/code&gt; 链接到 &lt;code&gt;Author&lt;/code&gt; ，则可以添加一个直通模型 &lt;code&gt;AuthorBook&lt;/code&gt; ，并添加一个新字段 &lt;code&gt;is_primary&lt;/code&gt; ，如下所示：</target>
        </trans-unit>
        <trans-unit id="a575ad3908796268e9301813f7ae313228b6b010" translate="yes" xml:space="preserve">
          <source>For example, if we have:</source>
          <target state="translated">例如,如果我们有:</target>
        </trans-unit>
        <trans-unit id="37ed5ab15784ebdc941be2c5c6bcc94f7a13da2b" translate="yes" xml:space="preserve">
          <source>For example, if we reverse the order of the &lt;code&gt;values()&lt;/code&gt; and &lt;code&gt;annotate()&lt;/code&gt; clause from our previous example:</source>
          <target state="translated">例如，如果我们反转上一个示例中的 &lt;code&gt;values()&lt;/code&gt; 和 &lt;code&gt;annotate()&lt;/code&gt; 子句的顺序：</target>
        </trans-unit>
        <trans-unit id="aaa31c7d83e5e9be08f7ea4cf3e1d382a5057f9c" translate="yes" xml:space="preserve">
          <source>For example, if we wanted to add a tool to the change list view for all the models in an app named &lt;code&gt;my_app&lt;/code&gt;, we would copy &lt;code&gt;contrib/admin/templates/admin/change_list.html&lt;/code&gt; to the &lt;code&gt;templates/admin/my_app/&lt;/code&gt; directory of our project, and make any necessary changes.</source>
          <target state="translated">例如，如果我们想在名为 &lt;code&gt;my_app&lt;/code&gt; 的应用程序中为所有模型的更改列表视图添加工具，则可以将 &lt;code&gt;contrib/admin/templates/admin/change_list.html&lt;/code&gt; 复制到我们的 &lt;code&gt;templates/admin/my_app/&lt;/code&gt; 目录中项目，并进行必要的更改。</target>
        </trans-unit>
        <trans-unit id="5206cd2a79a8ce28494c927b4f754f4f6ab560c0" translate="yes" xml:space="preserve">
          <source>For example, if you had &lt;code&gt;organic.py&lt;/code&gt; and &lt;code&gt;synthetic.py&lt;/code&gt; in the &lt;code&gt;models&lt;/code&gt; directory:</source>
          <target state="translated">例如，如果您在 &lt;code&gt;models&lt;/code&gt; 目录中包含了 &lt;code&gt;organic.py&lt;/code&gt; 和 &lt;code&gt;synthetic.py&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="ec78701bb6d07ca8380a8fb2def8939d712743f8" translate="yes" xml:space="preserve">
          <source>For example, if you have a Blog object &lt;code&gt;b&lt;/code&gt; with &lt;code&gt;id=5&lt;/code&gt;, the following three queries would be identical:</source>
          <target state="translated">例如，如果你有博客对象 &lt;code&gt;b&lt;/code&gt; 与 &lt;code&gt;id=5&lt;/code&gt; ，以下三个查询将是相同的：</target>
        </trans-unit>
        <trans-unit id="7c53aafc3c0c25befc980a17c0988fd3884989b3" translate="yes" xml:space="preserve">
          <source>For example, if you have a blog entry with an author, the following definition would enable searching blog entries by the email address of the author:</source>
          <target state="translated">例如,如果你有一个带有作者的博客条目,下面的定义就可以通过作者的电子邮件地址搜索博客条目。</target>
        </trans-unit>
        <trans-unit id="95a33ccea96a9b29633c8c3693475d86bc4201f8" translate="yes" xml:space="preserve">
          <source>For example, if you have a field &lt;code&gt;title&lt;/code&gt; that has &lt;code&gt;unique_for_date=&quot;pub_date&quot;&lt;/code&gt;, then Django wouldn&amp;rsquo;t allow the entry of two records with the same &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;pub_date&lt;/code&gt;.</source>
          <target state="translated">例如，如果您的字段 &lt;code&gt;title&lt;/code&gt; 具有 &lt;code&gt;unique_for_date=&quot;pub_date&quot;&lt;/code&gt; ，则Django将不允许输入两个具有相同 &lt;code&gt;title&lt;/code&gt; 和 &lt;code&gt;pub_date&lt;/code&gt; 的记录。</target>
        </trans-unit>
        <trans-unit id="a451065bc00e41b11f720e0f717367308b091faf" translate="yes" xml:space="preserve">
          <source>For example, if you have a function called &lt;code&gt;get_notification_email()&lt;/code&gt; that returns a list of &lt;a href=&quot;#django.core.mail.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; objects representing some periodic email you wish to send out, you could send these emails using a single call to send_messages:</source>
          <target state="translated">例如，如果您有一个名为 &lt;code&gt;get_notification_email()&lt;/code&gt; 的函数，该函数返回代表您希望发送的某些定期电子邮件的&lt;a href=&quot;#django.core.mail.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt;对象列表，则可以通过一次调用send_messages来发送这些电子邮件：</target>
        </trans-unit>
        <trans-unit id="17eafc2b5422a055d91b931d67499186a4200fbf" translate="yes" xml:space="preserve">
          <source>For example, if you have an app &lt;code&gt;bookstore&lt;/code&gt; (as created by &lt;code&gt;manage.py startapp bookstore&lt;/code&gt;), a model defined as &lt;code&gt;class Book&lt;/code&gt; will have a database table named &lt;code&gt;bookstore_book&lt;/code&gt;.</source>
          <target state="translated">例如，如果您有一个应用程序 &lt;code&gt;bookstore&lt;/code&gt; （由 &lt;code&gt;manage.py startapp bookstore&lt;/code&gt; 创建），则定义为 &lt;code&gt;class Book&lt;/code&gt; 的模型将具有一个名为 &lt;code&gt;bookstore_book&lt;/code&gt; 的数据库表。</target>
        </trans-unit>
        <trans-unit id="63fbca3270dc92aa2768b890a6cb1d33f7c76b6d" translate="yes" xml:space="preserve">
          <source>For example, if you only want users whose names begin with &amp;lsquo;J&amp;rsquo; to be able to delete objects in bulk:</source>
          <target state="translated">例如，如果仅希望名称以&amp;ldquo; J&amp;rdquo;开头的用户能够批量删除对象：</target>
        </trans-unit>
        <trans-unit id="dffc16ac6f5a1235e2ff5c1c9590e976974355a8" translate="yes" xml:space="preserve">
          <source>For example, if you operate a Web email system, then the contents of the &amp;ldquo;inbox&amp;rdquo; page depend on which user is logged in. If an ISP blindly cached your site, then the first user who logged in through that ISP would have their user-specific inbox page cached for subsequent visitors to the site. That&amp;rsquo;s not cool.</source>
          <target state="translated">例如，如果您运行Web电子邮件系统，则&amp;ldquo;收件箱&amp;rdquo;页面的内容取决于登录的用户。如果ISP盲目地缓存了您的站点，则第一个通过该ISP登录的用户将拥有他们的用户。特定的收件箱页面已缓存，以供该站点的后续访问者使用。那不酷。</target>
        </trans-unit>
        <trans-unit id="0318688c9cbfbc9a1af11ad338883da37e732245" translate="yes" xml:space="preserve">
          <source>For example, if you want the &lt;code&gt;CharField&lt;/code&gt; for the &lt;code&gt;name&lt;/code&gt; attribute of &lt;code&gt;Author&lt;/code&gt; to be represented by a &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; instead of its default &lt;code&gt;&amp;lt;input type=&quot;text&quot;&amp;gt;&lt;/code&gt;, you can override the field&amp;rsquo;s widget:</source>
          <target state="translated">例如，如果希望 &lt;code&gt;Author&lt;/code&gt; 的 &lt;code&gt;name&lt;/code&gt; 属性的 &lt;code&gt;CharField&lt;/code&gt; 用 &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; 而不是默认的 &lt;code&gt;&amp;lt;input type=&quot;text&quot;&amp;gt;&lt;/code&gt; ，则可以覆盖该字段的小部件：</target>
        </trans-unit>
        <trans-unit id="d3c8260ce0cd8a75ee9020cf48382605726d0d9d" translate="yes" xml:space="preserve">
          <source>For example, if you want to allow generic relations to models with either &lt;a href=&quot;../models/fields#django.db.models.IntegerField&quot;&gt;&lt;code&gt;IntegerField&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../models/fields#django.db.models.CharField&quot;&gt;&lt;code&gt;CharField&lt;/code&gt;&lt;/a&gt; primary key fields, you can use &lt;a href=&quot;../models/fields#django.db.models.CharField&quot;&gt;&lt;code&gt;CharField&lt;/code&gt;&lt;/a&gt; for the &amp;ldquo;object_id&amp;rdquo; field on your model since integers can be coerced to strings by &lt;a href=&quot;../models/fields#django.db.models.Field.get_db_prep_value&quot;&gt;&lt;code&gt;get_db_prep_value()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">例如，如果要允许具有&lt;a href=&quot;../models/fields#django.db.models.IntegerField&quot;&gt; &lt;code&gt;IntegerField&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../models/fields#django.db.models.CharField&quot;&gt; &lt;code&gt;CharField&lt;/code&gt; &lt;/a&gt;主键字段的模型具有通用关系，则可以将&lt;a href=&quot;../models/fields#django.db.models.CharField&quot;&gt; &lt;code&gt;CharField&lt;/code&gt; &lt;/a&gt;用作模型上的&amp;ldquo; object_id&amp;rdquo;字段，因为可以通过&lt;a href=&quot;../models/fields#django.db.models.Field.get_db_prep_value&quot;&gt; &lt;code&gt;get_db_prep_value()&lt;/code&gt; &lt;/a&gt;将整数强制转换为字符串。</target>
        </trans-unit>
        <trans-unit id="c0412d92da41464198926ae62a16c47b911add00" translate="yes" xml:space="preserve">
          <source>For example, if you want to catch the &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; HTML elements created by the &lt;a href=&quot;#std:templatefilter-linebreaks&quot;&gt;&lt;code&gt;linebreaks&lt;/code&gt;&lt;/a&gt; filter:</source>
          <target state="translated">例如，如果要捕获由&lt;a href=&quot;#std:templatefilter-linebreaks&quot;&gt; &lt;code&gt;linebreaks&lt;/code&gt; &lt;/a&gt;过滤器创建的 &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; HTML元素：</target>
        </trans-unit>
        <trans-unit id="287184b56a2079bc77936a467ffcb12bb2b8886c" translate="yes" xml:space="preserve">
          <source>For example, if you want to override &lt;code&gt;clean()&lt;/code&gt;:</source>
          <target state="translated">例如，如果要覆盖 &lt;code&gt;clean()&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="3efb9b9ef08765dd8e6f0b121687a407972caf70" translate="yes" xml:space="preserve">
          <source>For example, if you want to return a custom &lt;code&gt;QuerySet&lt;/code&gt; class from the &lt;code&gt;get_queryset&lt;/code&gt; method, you could do this:</source>
          <target state="translated">例如，如果要从 &lt;code&gt;get_queryset&lt;/code&gt; 方法返回自定义 &lt;code&gt;QuerySet&lt;/code&gt; 类，则可以执行以下操作：</target>
        </trans-unit>
        <trans-unit id="063ebc3924841e6968434234faec07eb5ca9e33b" translate="yes" xml:space="preserve">
          <source>For example, if you wanted to calculate the average number of authors per book you first annotate the set of books with the author count, then aggregate that author count, referencing the annotation field:</source>
          <target state="translated">例如,如果你想计算每本书的平均作者数,你首先用作者数来注释这套书,然后汇总这个作者数,参考注释字段。</target>
        </trans-unit>
        <trans-unit id="bfc09bcbb025c7c07130736bf333d3d02ac80e5f" translate="yes" xml:space="preserve">
          <source>For example, if you wanted to use &lt;code&gt;MySlugFormField&lt;/code&gt; for the &lt;code&gt;slug&lt;/code&gt; field, you could do the following:</source>
          <target state="translated">例如，如果你想使用 &lt;code&gt;MySlugFormField&lt;/code&gt; 的 &lt;code&gt;slug&lt;/code&gt; 场，你可以做到以下几点：</target>
        </trans-unit>
        <trans-unit id="c7aa460ec5e420ac634048bfa3fc527ceb63585d" translate="yes" xml:space="preserve">
          <source>For example, if you wanted to validate that the contents of a &lt;code&gt;CharField&lt;/code&gt; called &lt;code&gt;serialnumber&lt;/code&gt; was unique, &lt;code&gt;clean_serialnumber()&lt;/code&gt; would be the right place to do this. You don&amp;rsquo;t need a specific field (it&amp;rsquo;s a &lt;code&gt;CharField&lt;/code&gt;), but you want a formfield-specific piece of validation and, possibly, cleaning/normalizing the data.</source>
          <target state="translated">例如，如果您想验证一个内容 &lt;code&gt;CharField&lt;/code&gt; 称为 &lt;code&gt;serialnumber&lt;/code&gt; 是独一无二的， &lt;code&gt;clean_serialnumber()&lt;/code&gt; 是做这个正确的地方。您不需要特定的字段（它是 &lt;code&gt;CharField&lt;/code&gt; ），但是您需要特定于表单字段的验证，并且可能需要清理/规范化数据。</target>
        </trans-unit>
        <trans-unit id="812e0ac86e0af9354376f7614bdda8d6eaf87eef" translate="yes" xml:space="preserve">
          <source>For example, if you wanted to write a custom filter called &lt;code&gt;urlize_and_linebreaks&lt;/code&gt; that combined the &lt;a href=&quot;../ref/templates/builtins#std:templatefilter-urlize&quot;&gt;&lt;code&gt;urlize&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../ref/templates/builtins#std:templatefilter-linebreaksbr&quot;&gt;&lt;code&gt;linebreaksbr&lt;/code&gt;&lt;/a&gt; filters, the filter would look like:</source>
          <target state="translated">例如，如果您要编写一个名为 &lt;code&gt;urlize_and_linebreaks&lt;/code&gt; 的自定义过滤器，该过滤器将&lt;a href=&quot;../ref/templates/builtins#std:templatefilter-urlize&quot;&gt; &lt;code&gt;urlize&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../ref/templates/builtins#std:templatefilter-linebreaksbr&quot;&gt; &lt;code&gt;linebreaksbr&lt;/code&gt; &lt;/a&gt;过滤器组合在一起，则该过滤器将如下所示：</target>
        </trans-unit>
        <trans-unit id="62aa2739230ebf126047b21a8ee5eb70e0f6ad83" translate="yes" xml:space="preserve">
          <source>For example, if you were building a database of &amp;ldquo;places&amp;rdquo;, you would build pretty standard stuff such as address, phone number, etc. in the database. Then, if you wanted to build a database of restaurants on top of the places, instead of repeating yourself and replicating those fields in the &lt;code&gt;Restaurant&lt;/code&gt; model, you could make &lt;code&gt;Restaurant&lt;/code&gt; have a &lt;a href=&quot;../../ref/models/fields#django.db.models.OneToOneField&quot;&gt;&lt;code&gt;OneToOneField&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;Place&lt;/code&gt; (because a restaurant &amp;ldquo;is a&amp;rdquo; place; in fact, to handle this you&amp;rsquo;d typically use &lt;a href=&quot;#model-inheritance&quot;&gt;inheritance&lt;/a&gt;, which involves an implicit one-to-one relation).</source>
          <target state="translated">例如，如果您要建立&amp;ldquo;地点&amp;rdquo;数据库，则可以在数据库中建立相当标准的内容，例如地址，电话号码等。然后，如果您想在地点的顶部建立一个餐厅数据库，而不是重复自己并在 &lt;code&gt;Restaurant&lt;/code&gt; 模型中复制这些字段，则可以使 &lt;code&gt;Restaurant&lt;/code&gt; 拥有一个&lt;a href=&quot;../../ref/models/fields#django.db.models.OneToOneField&quot;&gt; &lt;code&gt;OneToOneField&lt;/code&gt; &lt;/a&gt;来 &lt;code&gt;Place&lt;/code&gt; （因为餐厅&amp;ldquo;是&amp;rdquo;地点；在实际上，要处理此问题，通常需要使用&lt;a href=&quot;#model-inheritance&quot;&gt;继承&lt;/a&gt;，该继承涉及隐式一对一关系。</target>
        </trans-unit>
        <trans-unit id="ac564798e14976b158868774b55c30a2ce8047f9" translate="yes" xml:space="preserve">
          <source>For example, if you were manipulating a list of blogs, you may want to determine how many entries have been made in each blog:</source>
          <target state="translated">例如,如果你在操作一个博客列表,你可能想确定每个博客有多少条目。</target>
        </trans-unit>
        <trans-unit id="48b33e9a548fb4951086a93d4cccbb51cee21337" translate="yes" xml:space="preserve">
          <source>For example, if you&amp;rsquo;re migrating a user from the &lt;code&gt;legacy_users&lt;/code&gt; database to the &lt;code&gt;new_users&lt;/code&gt; database, you might use these commands:</source>
          <target state="translated">例如，如果要将用户从 &lt;code&gt;legacy_users&lt;/code&gt; 数据库迁移到 &lt;code&gt;new_users&lt;/code&gt; 数据库，则可以使用以下命令：</target>
        </trans-unit>
        <trans-unit id="25f618583a6cd0fc97af3000d8f1c63e4d2ec20e" translate="yes" xml:space="preserve">
          <source>For example, if you&amp;rsquo;ve written an S3 storage backend in &lt;code&gt;myproject.storage.S3Storage&lt;/code&gt; you could use it with:</source>
          <target state="translated">例如，如果您已在 &lt;code&gt;myproject.storage.S3Storage&lt;/code&gt; 中编写了S3存储后端，则可以将其与以下项一起使用：</target>
        </trans-unit>
        <trans-unit id="c7dec5e7f20c3fb00b261664622da3f6bfce814b" translate="yes" xml:space="preserve">
          <source>For example, if your &lt;a href=&quot;../../ref/settings#std:setting-MEDIA_URL&quot;&gt;&lt;code&gt;MEDIA_URL&lt;/code&gt;&lt;/a&gt; is defined as &lt;code&gt;/media/&lt;/code&gt;, you can do this by adding the following snippet to your urls.py:</source>
          <target state="translated">例如，如果您的&lt;a href=&quot;../../ref/settings#std:setting-MEDIA_URL&quot;&gt; &lt;code&gt;MEDIA_URL&lt;/code&gt; &lt;/a&gt;定义为 &lt;code&gt;/media/&lt;/code&gt; ，则可以通过将以下代码段添加到urls.py中来实现：</target>
        </trans-unit>
        <trans-unit id="573973612596761249845c2b92e7229999296031" translate="yes" xml:space="preserve">
          <source>For example, if your &lt;a href=&quot;../../ref/settings#std:setting-STATIC_URL&quot;&gt;&lt;code&gt;STATIC_URL&lt;/code&gt;&lt;/a&gt; is defined as &lt;code&gt;/static/&lt;/code&gt;, you can do this by adding the following snippet to your urls.py:</source>
          <target state="translated">例如，如果您的&lt;a href=&quot;../../ref/settings#std:setting-STATIC_URL&quot;&gt; &lt;code&gt;STATIC_URL&lt;/code&gt; &lt;/a&gt;定义为 &lt;code&gt;/static/&lt;/code&gt; ，则可以通过将以下代码段添加到urls.py中来做到这一点：</target>
        </trans-unit>
        <trans-unit id="382da25e234ff543ced0d60c81998fd1b64dec8a" translate="yes" xml:space="preserve">
          <source>For example, if your &lt;a href=&quot;settings#std:setting-DATABASES&quot;&gt;&lt;code&gt;DATABASES&lt;/code&gt;&lt;/a&gt; setting has a &amp;lsquo;master&amp;rsquo; database defined, name the fixture &lt;code&gt;mydata.master.json&lt;/code&gt; or &lt;code&gt;mydata.master.json.gz&lt;/code&gt; and the fixture will only be loaded when you specify you want to load data into the &lt;code&gt;master&lt;/code&gt; database.</source>
          <target state="translated">例如，如果您的&lt;a href=&quot;settings#std:setting-DATABASES&quot;&gt; &lt;code&gt;DATABASES&lt;/code&gt; &lt;/a&gt;设置定义了&amp;ldquo; master&amp;rdquo;数据库，则将夹具命名为 &lt;code&gt;mydata.master.json&lt;/code&gt; 或 &lt;code&gt;mydata.master.json.gz&lt;/code&gt; ,并且仅当您指定要将数据加载到 &lt;code&gt;master&lt;/code&gt; 数据库中时才加载夹具。</target>
        </trans-unit>
        <trans-unit id="b38b053424f30ca9abf3de537773f7fbaf83bc53" translate="yes" xml:space="preserve">
          <source>For example, if your Django app contained a translation string for the text &lt;code&gt;&quot;Welcome to my site.&quot;&lt;/code&gt;, like so:</source>
          <target state="translated">例如，如果您的Django应用程序包含文本 &lt;code&gt;&quot;Welcome to my site.&quot;&lt;/code&gt; 的翻译字符串。，就像这样：</target>
        </trans-unit>
        <trans-unit id="ba64113bb54dcbe956d54f2cdb1242079b313974" translate="yes" xml:space="preserve">
          <source>For example, if your custom tags/filters are in a file called &lt;code&gt;poll_extras.py&lt;/code&gt;, your app layout might look like this:</source>
          <target state="translated">例如，如果您的自定义标签/过滤器位于名为 &lt;code&gt;poll_extras.py&lt;/code&gt; 的文件中，则您的应用布局可能如下所示：</target>
        </trans-unit>
        <trans-unit id="3ce9954afa977e8d25528c0d4c5d3e44545946e0" translate="yes" xml:space="preserve">
          <source>For example, if your test requires a particular optional library in order to succeed, you could decorate the test case with &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest.skipIf&quot;&gt;&lt;code&gt;@skipIf&lt;/code&gt;&lt;/a&gt;. Then, the test runner will report that the test wasn&amp;rsquo;t executed and why, instead of failing the test or omitting the test altogether.</source>
          <target state="translated">例如，如果您的测试需要特定的可选库才能成功，则可以使用&lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest.skipIf&quot;&gt; &lt;code&gt;@skipIf&lt;/code&gt; &lt;/a&gt;装饰测试用例。然后，测试运行人员将报告未执行测试及其原因，而不是使测试失败或完全省略测试。</target>
        </trans-unit>
        <trans-unit id="d89c6f1f9c3485c512a5c12dbc88ece425a8d0a9" translate="yes" xml:space="preserve">
          <source>For example, in a request to &lt;code&gt;https://www.example.com/myapp/&lt;/code&gt;, the URLconf will look for &lt;code&gt;myapp/&lt;/code&gt;.</source>
          <target state="translated">例如，在对 &lt;code&gt;https://www.example.com/myapp/&lt;/code&gt; 的请求中，URLconf将寻找 &lt;code&gt;myapp/&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5c01bd511b40c972c539e07cb7adec6680d41f2c" translate="yes" xml:space="preserve">
          <source>For example, in our &lt;code&gt;HandField&lt;/code&gt; class we&amp;rsquo;re always forcibly setting max_length in &lt;code&gt;__init__()&lt;/code&gt;. The &lt;code&gt;deconstruct()&lt;/code&gt; method on the base &lt;code&gt;Field&lt;/code&gt; class will see this and try to return it in the keyword arguments; thus, we can drop it from the keyword arguments for readability:</source>
          <target state="translated">例如，在我们的 &lt;code&gt;HandField&lt;/code&gt; 类中，我们总是在 &lt;code&gt;__init__()&lt;/code&gt; 强制设置max_length 。在 &lt;code&gt;deconstruct()&lt;/code&gt; 的基础上法 &lt;code&gt;Field&lt;/code&gt; 类将看到这一点，并试图在关键字参数返回它; 因此，我们可以从关键字参数中删除它以提高可读性：</target>
        </trans-unit>
        <trans-unit id="3982a7f971cb56decef776cf27f6c9f258416465" translate="yes" xml:space="preserve">
          <source>For example, in the default case, you might see:</source>
          <target state="translated">例如,在默认情况下,你可能会看到。</target>
        </trans-unit>
        <trans-unit id="be8dcf1e5a2d50703a2c513aadf6082398124606" translate="yes" xml:space="preserve">
          <source>For example, in the filter &lt;code&gt;{{ var|foo:&quot;bar&quot; }}&lt;/code&gt;, the filter &lt;code&gt;foo&lt;/code&gt; would be passed the variable &lt;code&gt;var&lt;/code&gt; and the argument &lt;code&gt;&quot;bar&quot;&lt;/code&gt;.</source>
          <target state="translated">例如，在过滤器 &lt;code&gt;{{ var|foo:&quot;bar&quot; }}&lt;/code&gt; ，将为过滤器 &lt;code&gt;foo&lt;/code&gt; 传递变量 &lt;code&gt;var&lt;/code&gt; 和参数 &lt;code&gt;&quot;bar&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6bfaf4d814db0b662c240dee53377b51532d7b2c" translate="yes" xml:space="preserve">
          <source>For example, in the generic class-based views there is a mixin called &lt;a href=&quot;../../ref/class-based-views/mixins-simple#django.views.generic.base.TemplateResponseMixin&quot;&gt;&lt;code&gt;TemplateResponseMixin&lt;/code&gt;&lt;/a&gt; whose primary purpose is to define the method &lt;a href=&quot;../../ref/class-based-views/mixins-simple#django.views.generic.base.TemplateResponseMixin.render_to_response&quot;&gt;&lt;code&gt;render_to_response()&lt;/code&gt;&lt;/a&gt;. When combined with the behavior of the &lt;a href=&quot;../../ref/class-based-views/base#django.views.generic.base.View&quot;&gt;&lt;code&gt;View&lt;/code&gt;&lt;/a&gt; base class, the result is a &lt;a href=&quot;../../ref/class-based-views/base#django.views.generic.base.TemplateView&quot;&gt;&lt;code&gt;TemplateView&lt;/code&gt;&lt;/a&gt; class that will dispatch requests to the appropriate matching methods (a behavior defined in the &lt;code&gt;View&lt;/code&gt; base class), and that has a &lt;a href=&quot;../../ref/class-based-views/mixins-simple#django.views.generic.base.TemplateResponseMixin.render_to_response&quot;&gt;&lt;code&gt;render_to_response()&lt;/code&gt;&lt;/a&gt; method that uses a &lt;a href=&quot;../../ref/class-based-views/mixins-simple#django.views.generic.base.TemplateResponseMixin.template_name&quot;&gt;&lt;code&gt;template_name&lt;/code&gt;&lt;/a&gt; attribute to return a &lt;a href=&quot;../../ref/template-response#django.template.response.TemplateResponse&quot;&gt;&lt;code&gt;TemplateResponse&lt;/code&gt;&lt;/a&gt; object (a behavior defined in the &lt;code&gt;TemplateResponseMixin&lt;/code&gt;).</source>
          <target state="translated">例如，在基于类的通用视图中，有一个名为&lt;a href=&quot;../../ref/class-based-views/mixins-simple#django.views.generic.base.TemplateResponseMixin&quot;&gt; &lt;code&gt;TemplateResponseMixin&lt;/code&gt; &lt;/a&gt;的混合，其主要目的是定义方法&lt;a href=&quot;../../ref/class-based-views/mixins-simple#django.views.generic.base.TemplateResponseMixin.render_to_response&quot;&gt; &lt;code&gt;render_to_response()&lt;/code&gt; &lt;/a&gt;。与&lt;a href=&quot;../../ref/class-based-views/base#django.views.generic.base.View&quot;&gt; &lt;code&gt;View&lt;/code&gt; &lt;/a&gt;基类的行为组合时，结果是&lt;a href=&quot;../../ref/class-based-views/base#django.views.generic.base.TemplateView&quot;&gt; &lt;code&gt;TemplateView&lt;/code&gt; &lt;/a&gt;类，该类会将请求分派到适当的匹配方法（ &lt;code&gt;View&lt;/code&gt; 基类中定义的行为），并且具有使用&lt;a href=&quot;../../ref/class-based-views/mixins-simple#django.views.generic.base.TemplateResponseMixin.template_name&quot;&gt; &lt;code&gt;template_name&lt;/code&gt; &lt;/a&gt;属性的&lt;a href=&quot;../../ref/class-based-views/mixins-simple#django.views.generic.base.TemplateResponseMixin.render_to_response&quot;&gt; &lt;code&gt;render_to_response()&lt;/code&gt; &lt;/a&gt;方法。返回一个&lt;a href=&quot;../../ref/template-response#django.template.response.TemplateResponse&quot;&gt; &lt;code&gt;TemplateResponse&lt;/code&gt; &lt;/a&gt;对象（在限定的行为 &lt;code&gt;TemplateResponseMixin&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="bee7838323c7513cb8f79ec775b4a84e3faed67e" translate="yes" xml:space="preserve">
          <source>For example, it could be used for a tagging system like so:</source>
          <target state="translated">例如,它可以用于这样的标签系统。</target>
        </trans-unit>
        <trans-unit id="6f017e4860d5bdcebab0f0fb119e76168400ff70" translate="yes" xml:space="preserve">
          <source>For example, let&amp;rsquo;s add a natural key to the &lt;code&gt;Book&lt;/code&gt; model from the example above:</source>
          <target state="translated">例如，让我们从上面的示例向 &lt;code&gt;Book&lt;/code&gt; 模型添加一个自然键：</target>
        </trans-unit>
        <trans-unit id="981e0acc47eeefb4090a6114b26b34b9a8900b87" translate="yes" xml:space="preserve">
          <source>For example, let&amp;rsquo;s consider the following model:</source>
          <target state="translated">例如，让我们考虑以下模型：</target>
        </trans-unit>
        <trans-unit id="3f7ab8aab4e41f4721a9deee7d51f3b5b448fb6c" translate="yes" xml:space="preserve">
          <source>For example, let&amp;rsquo;s say we have a &lt;code&gt;SouthTexasCity&lt;/code&gt; model (from the &lt;a href=&quot;https://github.com/django/django/blob/master/tests/gis_tests/distapp/models.py&quot;&gt;GeoDjango distance tests&lt;/a&gt; ) on a &lt;em&gt;projected&lt;/em&gt; coordinate system valid for cities in southern Texas:</source>
          <target state="translated">例如，假设我们有一个对德克萨斯州南部城市有效的&lt;em&gt;投影&lt;/em&gt;坐标系上的 &lt;code&gt;SouthTexasCity&lt;/code&gt; 模型（来自&lt;a href=&quot;https://github.com/django/django/blob/master/tests/gis_tests/distapp/models.py&quot;&gt;GeoDjango距离测试&lt;/a&gt;）：&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6632db7f2d16495f99973c14b8ca361212c07908" translate="yes" xml:space="preserve">
          <source>For example, let&amp;rsquo;s write a filter that emphasizes the first character of a string:</source>
          <target state="translated">例如，让我们编写一个强调字符串第一个字符的过滤器：</target>
        </trans-unit>
        <trans-unit id="fd27f1d7a84788999d8f9705306d16767267018a" translate="yes" xml:space="preserve">
          <source>For example, let&amp;rsquo;s write a full implementation of our template tag, &lt;code&gt;{% current_time %}&lt;/code&gt;, that displays the current date/time, formatted according to a parameter given in the tag, in &lt;a href=&quot;https://docs.python.org/3/library/time.html#time.strftime&quot;&gt;&lt;code&gt;strftime()&lt;/code&gt;&lt;/a&gt; syntax. It&amp;rsquo;s a good idea to decide the tag syntax before anything else. In our case, let&amp;rsquo;s say the tag should be used like this:</source>
          <target state="translated">例如，让我们写一个模板标签 &lt;code&gt;{% current_time %}&lt;/code&gt; 的完整实现，它以&lt;a href=&quot;https://docs.python.org/3/library/time.html#time.strftime&quot;&gt; &lt;code&gt;strftime()&lt;/code&gt; &lt;/a&gt;语法显示根据标签中给定的参数格式化的当前日期/时间。最好先决定标签语法。在我们的例子中，假设标签应像这样使用：</target>
        </trans-unit>
        <trans-unit id="faa7baeec61827390806b1f3bb4cccabe076d811" translate="yes" xml:space="preserve">
          <source>For example, notice the behavior when querying across a &lt;a href=&quot;fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">例如，在&lt;a href=&quot;fields#django.db.models.ManyToManyField&quot;&gt; &lt;code&gt;ManyToManyField&lt;/code&gt; 上&lt;/a&gt;查询时，请注意行为：</target>
        </trans-unit>
        <trans-unit id="ac6f5569362b9037e98acf2f0c9ebe5969f083c9" translate="yes" xml:space="preserve">
          <source>For example, on Debian-based distributions that package SpatiaLite 4.2+, try to install the &lt;code&gt;libsqlite3-mod-spatialite&lt;/code&gt; package. For older releases install &lt;code&gt;spatialite-bin&lt;/code&gt;.</source>
          <target state="translated">例如，在打包SpatiaLite 4.2+的基于Debian的发行版上，尝试安装 &lt;code&gt;libsqlite3-mod-spatialite&lt;/code&gt; 软件包。对于较旧的版本，请安装 &lt;code&gt;spatialite-bin&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cfd8c872d8f2916e92e073391899fa52d0e6b5c4" translate="yes" xml:space="preserve">
          <source>For example, repeatedly getting a certain index in a queryset object will query the database each time:</source>
          <target state="translated">例如,重复获取查询集对象中的某个索引,每次都会查询数据库。</target>
        </trans-unit>
        <trans-unit id="e8ada1817d3c3e6aea32546f2fc1f0f5b452cf40" translate="yes" xml:space="preserve">
          <source>For example, say you have a custom manager method that touches the database &amp;ndash; &lt;code&gt;User.objects.create_user()&lt;/code&gt;. Because &lt;code&gt;create_user()&lt;/code&gt; is a manager method, not a &lt;code&gt;QuerySet&lt;/code&gt; method, you can&amp;rsquo;t do &lt;code&gt;User.objects.using('new_users').create_user()&lt;/code&gt;. (The &lt;code&gt;create_user()&lt;/code&gt; method is only available on &lt;code&gt;User.objects&lt;/code&gt;, the manager, not on &lt;code&gt;QuerySet&lt;/code&gt; objects derived from the manager.) The solution is to use &lt;code&gt;db_manager()&lt;/code&gt;, like this:</source>
          <target state="translated">例如，假设您有一个接触数据库的自定义管理器方法&amp;ndash; &lt;code&gt;User.objects.create_user()&lt;/code&gt; 。由于 &lt;code&gt;create_user()&lt;/code&gt; 是管理器方法，而不是 &lt;code&gt;QuerySet&lt;/code&gt; 方法，因此无法执行 &lt;code&gt;User.objects.using('new_users').create_user()&lt;/code&gt; 。（ &lt;code&gt;create_user()&lt;/code&gt; 方法仅在管理器 &lt;code&gt;User.objects&lt;/code&gt; 上可用，而不适用于从管理器派生的 &lt;code&gt;QuerySet&lt;/code&gt; 对象。）解决方案是使用 &lt;code&gt;db_manager()&lt;/code&gt; ，如下所示：</target>
        </trans-unit>
        <trans-unit id="b12427337defaf610be79af10716c83a674c8723" translate="yes" xml:space="preserve">
          <source>For example, say you&amp;rsquo;re writing an inclusion tag that will always be used in a context that contains &lt;code&gt;home_link&lt;/code&gt; and &lt;code&gt;home_title&lt;/code&gt; variables that point back to the main page. Here&amp;rsquo;s what the Python function would look like:</source>
          <target state="translated">例如，假设您正在编写一个包含标记，该标记将始终在包含 &lt;code&gt;home_link&lt;/code&gt; 和 &lt;code&gt;home_title&lt;/code&gt; 变量的上下文中使用。这是Python函数的样子：</target>
        </trans-unit>
        <trans-unit id="837db34e268679acb26d08abc40f8ec66566edea" translate="yes" xml:space="preserve">
          <source>For example, say your &lt;a href=&quot;../settings#std:setting-MEDIA_ROOT&quot;&gt;&lt;code&gt;MEDIA_ROOT&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;'/home/media'&lt;/code&gt;, and &lt;a href=&quot;#django.db.models.FileField.upload_to&quot;&gt;&lt;code&gt;upload_to&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;'photos/%Y/%m/%d'&lt;/code&gt;. The &lt;code&gt;'%Y/%m/%d'&lt;/code&gt; part of &lt;a href=&quot;#django.db.models.FileField.upload_to&quot;&gt;&lt;code&gt;upload_to&lt;/code&gt;&lt;/a&gt; is &lt;a href=&quot;https://docs.python.org/3/library/time.html#time.strftime&quot;&gt;&lt;code&gt;strftime()&lt;/code&gt;&lt;/a&gt; formatting; &lt;code&gt;'%Y'&lt;/code&gt; is the four-digit year, &lt;code&gt;'%m'&lt;/code&gt; is the two-digit month and &lt;code&gt;'%d'&lt;/code&gt; is the two-digit day. If you upload a file on Jan. 15, 2007, it will be saved in the directory &lt;code&gt;/home/media/photos/2007/01/15&lt;/code&gt;.</source>
          <target state="translated">例如，假设您的&lt;a href=&quot;../settings#std:setting-MEDIA_ROOT&quot;&gt; &lt;code&gt;MEDIA_ROOT&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;'/home/media'&lt;/code&gt; ，而&lt;a href=&quot;#django.db.models.FileField.upload_to&quot;&gt; &lt;code&gt;upload_to&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;'photos/%Y/%m/%d'&lt;/code&gt; 。&lt;a href=&quot;#django.db.models.FileField.upload_to&quot;&gt; &lt;code&gt;upload_to&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;'%Y/%m/%d'&lt;/code&gt; 部分为&lt;a href=&quot;https://docs.python.org/3/library/time.html#time.strftime&quot;&gt; &lt;code&gt;strftime()&lt;/code&gt; &lt;/a&gt;格式； &lt;code&gt;'%Y'&lt;/code&gt; 是四位数的年份， &lt;code&gt;'%m'&lt;/code&gt; 是两位数的月份， &lt;code&gt;'%d'&lt;/code&gt; 是两位数的日期。如果您在2007年1月15日上传文件，该文件将保存在目录 &lt;code&gt;/home/media/photos/2007/01/15&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="efd483a59754f0aaac0b780515e3d32175b4ce1a" translate="yes" xml:space="preserve">
          <source>For example, suppose you have a filter that adds the string &lt;code&gt;xx&lt;/code&gt; to the end of any input. Since this introduces no dangerous HTML characters to the result (aside from any that were already present), you should mark your filter with &lt;code&gt;is_safe&lt;/code&gt;:</source>
          <target state="translated">例如，假设您有一个过滤器，将字符串 &lt;code&gt;xx&lt;/code&gt; 添加到任何输入的末尾。由于这不会在结果中引入任何危险的HTML字符（除了已存在的HTML字符之外），因此应使用 &lt;code&gt;is_safe&lt;/code&gt; 标记过滤器：</target>
        </trans-unit>
        <trans-unit id="f0b46b2ac3f51513f40f2ba0e075ad6daaca6f59" translate="yes" xml:space="preserve">
          <source>For example, suppose you have a view, &lt;code&gt;app_views.client&lt;/code&gt;, whose URLconf takes a client ID (here, &lt;code&gt;client()&lt;/code&gt; is a method inside the views file &lt;code&gt;app_views.py&lt;/code&gt;). The URLconf line might look like this:</source>
          <target state="translated">例如，假设您有一个视图 &lt;code&gt;app_views.client&lt;/code&gt; ，其URLconf带有一个客户端ID（此处， &lt;code&gt;client()&lt;/code&gt; 是视图文件 &lt;code&gt;app_views.py&lt;/code&gt; 中的一种方法）。URLconf行可能如下所示：</target>
        </trans-unit>
        <trans-unit id="75689940cb99e5a3c78be96bc95b910bb9da78b2" translate="yes" xml:space="preserve">
          <source>For example, suppose you have these models:</source>
          <target state="translated">例如,假设你有这些模型。</target>
        </trans-unit>
        <trans-unit id="adb68cda65641acffb5513c00ebc8792adf26e87" translate="yes" xml:space="preserve">
          <source>For example, suppose you want to add a method to the &lt;code&gt;Person&lt;/code&gt; model. You can do it like this:</source>
          <target state="translated">例如，假设您要向 &lt;code&gt;Person&lt;/code&gt; 模型添加一个方法。您可以这样做：</target>
        </trans-unit>
        <trans-unit id="66b36bd8f3d737b326cd36b2698766934c40eb1b" translate="yes" xml:space="preserve">
          <source>For example, take the following form:</source>
          <target state="translated">例如,采取以下形式:</target>
        </trans-unit>
        <trans-unit id="4deafec385d3e444a3bb56c6350f690c558fa83f" translate="yes" xml:space="preserve">
          <source>For example, taking advantage of GitHub&amp;rsquo;s feature to expose repositories as zip files, you can use a URL like:</source>
          <target state="translated">例如，利用GitHub的功能将存储库公开为zip文件，您可以使用如下网址：</target>
        </trans-unit>
        <trans-unit id="2cee46bd342b10491add882e66c9a5b078ff05c4" translate="yes" xml:space="preserve">
          <source>For example, the &lt;a href=&quot;../intro/tutorial02&quot;&gt;tutorial&lt;/a&gt; has this line:</source>
          <target state="translated">例如，本&lt;a href=&quot;../intro/tutorial02&quot;&gt;教程的&lt;/a&gt;这一行：</target>
        </trans-unit>
        <trans-unit id="5b4e2e42e3429923389b83d267729df072153c91" translate="yes" xml:space="preserve">
          <source>For example, the &lt;a href=&quot;../topics/auth/index#module-django.contrib.auth&quot;&gt;&lt;code&gt;django.contrib.auth&lt;/code&gt;&lt;/a&gt; app only prompts to create a superuser when &lt;code&gt;interactive&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">例如，&lt;a href=&quot;../topics/auth/index#module-django.contrib.auth&quot;&gt; &lt;code&gt;django.contrib.auth&lt;/code&gt; &lt;/a&gt;应用仅在 &lt;code&gt;interactive&lt;/code&gt; 为 &lt;code&gt;True&lt;/code&gt; 时提示创建超级用户。</target>
        </trans-unit>
        <trans-unit id="cd52e2391a1ffb005e89afe37be49919c4cc5f22" translate="yes" xml:space="preserve">
          <source>For example, the filesystem loader may receive &lt;code&gt;'index.html'&lt;/code&gt; as a &lt;code&gt;template_name&lt;/code&gt; argument. This method would yield origins for the full path of &lt;code&gt;index.html&lt;/code&gt; as it appears in each template directory the loader looks at.</source>
          <target state="translated">例如，文件系统加载器可能会收到 &lt;code&gt;'index.html'&lt;/code&gt; 作为 &lt;code&gt;template_name&lt;/code&gt; 参数。该方法将产生 &lt;code&gt;index.html&lt;/code&gt; 完整路径的来源，因为它出现在加载程序查看的每个模板目录中。</target>
        </trans-unit>
        <trans-unit id="c18b9843bc411dfbfe818e01049b0042cdba398b" translate="yes" xml:space="preserve">
          <source>For example, the following code tests that an &lt;code&gt;EmailField&lt;/code&gt; accepts &lt;code&gt;a@a.com&lt;/code&gt; as a valid email address, but rejects &lt;code&gt;aaa&lt;/code&gt; with a reasonable error message:</source>
          <target state="translated">例如，以下代码测试 &lt;code&gt;EmailField&lt;/code&gt; 接受 &lt;code&gt;a@a.com&lt;/code&gt; 作为有效的电子邮件地址，但是拒绝 &lt;code&gt;aaa&lt;/code&gt; 并给出合理的错误消息：</target>
        </trans-unit>
        <trans-unit id="f1cda75052ecec1422a69248d4438e2fd36432d8" translate="yes" xml:space="preserve">
          <source>For example, the following code will store uploaded files under &lt;code&gt;/media/photos&lt;/code&gt; regardless of what your &lt;a href=&quot;../ref/settings#std:setting-MEDIA_ROOT&quot;&gt;&lt;code&gt;MEDIA_ROOT&lt;/code&gt;&lt;/a&gt; setting is:</source>
          <target state="translated">例如，以下代码将上传的文件存储在 &lt;code&gt;/media/photos&lt;/code&gt; 下,而不管您的&lt;a href=&quot;../ref/settings#std:setting-MEDIA_ROOT&quot;&gt; &lt;code&gt;MEDIA_ROOT&lt;/code&gt; &lt;/a&gt;设置是什么：</target>
        </trans-unit>
        <trans-unit id="1575f645e5e256b758956ea48109588be928308b" translate="yes" xml:space="preserve">
          <source>For example, the following code would send two different messages to two different sets of recipients; however, only one connection to the mail server would be opened:</source>
          <target state="translated">例如,下面的代码将向两组不同的收件人发送两份不同的邮件;但是,只有一个与邮件服务器的连接会被打开。</target>
        </trans-unit>
        <trans-unit id="0ea55980f6c3f2fe0c5f5dd2dbe9c6bb45a52f5d" translate="yes" xml:space="preserve">
          <source>For example, the following command nearly reproduces the &lt;code&gt;WorldBorder&lt;/code&gt; model and mapping dictionary created above, automatically:</source>
          <target state="translated">例如，以下命令几乎自动重现上面创建的 &lt;code&gt;WorldBorder&lt;/code&gt; 模型和映射字典：</target>
        </trans-unit>
        <trans-unit id="0a4537dba183f7d976e59f5b36b50b496ec563e0" translate="yes" xml:space="preserve">
          <source>For example, the following model has &lt;em&gt;two&lt;/em&gt;&lt;code&gt;Manager&lt;/code&gt;s &amp;ndash; one that returns all objects, and one that returns only the books by Roald Dahl:</source>
          <target state="translated">例如，以下模型有&lt;em&gt;两个&lt;/em&gt; &lt;code&gt;Manager&lt;/code&gt; －一个返回所有对象，一个仅返回Roald Dahl的书：</target>
        </trans-unit>
        <trans-unit id="3f437de90816066d29eda0f176414d20e8975eda" translate="yes" xml:space="preserve">
          <source>For example, the following query would exclude blogs that contain &lt;em&gt;both&lt;/em&gt; entries with &lt;em&gt;&amp;ldquo;Lennon&amp;rdquo;&lt;/em&gt; in the headline &lt;em&gt;and&lt;/em&gt; entries published in 2008:</source>
          <target state="translated">例如，以下查询将排除&lt;em&gt;同时&lt;/em&gt;包含标题中带有&lt;em&gt;&amp;ldquo; Lennon&amp;rdquo;&lt;/em&gt;条目&lt;em&gt;和&lt;/em&gt; 2008年发布的条目的博客：</target>
        </trans-unit>
        <trans-unit id="b5b1287469ae2ba4c652334e4068fe83b853d8c8" translate="yes" xml:space="preserve">
          <source>For example, the following router would direct all cache read operations to &lt;code&gt;cache_replica&lt;/code&gt;, and all write operations to &lt;code&gt;cache_primary&lt;/code&gt;. The cache table will only be synchronized onto &lt;code&gt;cache_primary&lt;/code&gt;:</source>
          <target state="translated">例如，以下路由器会将所有缓存读取操作 &lt;code&gt;cache_replica&lt;/code&gt; 到cache_replica，并将所有写入操作 &lt;code&gt;cache_primary&lt;/code&gt; 到cache_primary。缓存表将仅同步到 &lt;code&gt;cache_primary&lt;/code&gt; 上：</target>
        </trans-unit>
        <trans-unit id="79e1b1c393dd6f3b661e294aa780e92c0b3536fe" translate="yes" xml:space="preserve">
          <source>For example, the following template would load all the tags and filters registered in &lt;code&gt;somelibrary&lt;/code&gt; and &lt;code&gt;otherlibrary&lt;/code&gt; located in package &lt;code&gt;package&lt;/code&gt;:</source>
          <target state="translated">例如，以下模板将加载在package &lt;code&gt;package&lt;/code&gt; 中的 &lt;code&gt;somelibrary&lt;/code&gt; 和其他 &lt;code&gt;otherlibrary&lt;/code&gt; 注册的所有标签和过滤器：</target>
        </trans-unit>
        <trans-unit id="e254385271ce9642568030d0572bce1569f1c2bf" translate="yes" xml:space="preserve">
          <source>For example, the following test will not be executed if the database supports transactions (e.g., it would &lt;em&gt;not&lt;/em&gt; run under PostgreSQL, but it would under MySQL with MyISAM tables):</source>
          <target state="translated">例如，如果数据库支持事务，则将不执行以下测试（例如，它将&lt;em&gt;不在&lt;/em&gt; PostgreSQL下运行，但将在带有MyISAM表的MySQL下运行）：</target>
        </trans-unit>
        <trans-unit id="238a0a8d4bd6a5c30b094db9458da443a0c092e2" translate="yes" xml:space="preserve">
          <source>For example, the following test will only be executed if the database supports transactions (e.g., it would run under PostgreSQL, but &lt;em&gt;not&lt;/em&gt; under MySQL with MyISAM tables):</source>
          <target state="translated">例如，仅当数据库支持事务时才执行以下测试（例如，它将在PostgreSQL 下运行，但在具有MyISAM表的MySQL 下&lt;em&gt;不&lt;/em&gt;运行）：</target>
        </trans-unit>
        <trans-unit id="cf6d07ae81bf27d1e709cd3bef81b142bddcc252" translate="yes" xml:space="preserve">
          <source>For example, the following two statements are equivalent:</source>
          <target state="translated">例如,以下两个语句是等价的。</target>
        </trans-unit>
        <trans-unit id="93dca967df9ba0db777acab0729765113692924a" translate="yes" xml:space="preserve">
          <source>For example, the following view returns a &lt;a href=&quot;#django.template.response.TemplateResponse&quot;&gt;&lt;code&gt;TemplateResponse&lt;/code&gt;&lt;/a&gt; with a template and a context containing a queryset:</source>
          <target state="translated">例如，以下视图返回一个&lt;a href=&quot;#django.template.response.TemplateResponse&quot;&gt; &lt;code&gt;TemplateResponse&lt;/code&gt; &lt;/a&gt;，其中包含一个模板和一个包含查询集的上下文：</target>
        </trans-unit>
        <trans-unit id="c47df139280495e8df269df3e1b4e74bf5801cba" translate="yes" xml:space="preserve">
          <source>For example, the static definition for our Calendar Widget could also be defined in a dynamic fashion:</source>
          <target state="translated">例如,我们的日历小部件的静态定义也可以用动态的方式来定义。</target>
        </trans-unit>
        <trans-unit id="0b0b8d26aca41acf8d85f36e90f98e284157926f" translate="yes" xml:space="preserve">
          <source>For example, the warp function can be used for aggregating a raster to the double of its original pixel scale:</source>
          <target state="translated">例如,翘曲函数可以用于将栅格聚集到其原始像素比例的两倍。</target>
        </trans-unit>
        <trans-unit id="0c0b7b65cb4d16a3499472ddb5c49cea05342068" translate="yes" xml:space="preserve">
          <source>For example, these two URLconf sets are functionally identical:</source>
          <target state="translated">例如,这两套URLconf在功能上是相同的。</target>
        </trans-unit>
        <trans-unit id="198ddfca24c57bcb8381f0fb15818ed1720ccca5" translate="yes" xml:space="preserve">
          <source>For example, this &lt;code&gt;Q&lt;/code&gt; object encapsulates a single &lt;code&gt;LIKE&lt;/code&gt; query:</source>
          <target state="translated">例如，此 &lt;code&gt;Q&lt;/code&gt; 对象封装了一个 &lt;code&gt;LIKE&lt;/code&gt; 查询：</target>
        </trans-unit>
        <trans-unit id="0057a8ee0bb64c68400ed8799f51b27a995f23f2" translate="yes" xml:space="preserve">
          <source>For example, this command:</source>
          <target state="translated">例如,这个命令。</target>
        </trans-unit>
        <trans-unit id="89ae811713dbf8bd975a1e4c77bf78d1767f40c5" translate="yes" xml:space="preserve">
          <source>For example, this custom &lt;code&gt;Manager&lt;/code&gt; offers a method &lt;code&gt;with_counts()&lt;/code&gt;, which returns a list of all &lt;code&gt;OpinionPoll&lt;/code&gt; objects, each with an extra &lt;code&gt;num_responses&lt;/code&gt; attribute that is the result of an aggregate query:</source>
          <target state="translated">例如，此定制 &lt;code&gt;Manager&lt;/code&gt; 提供了一个 &lt;code&gt;with_counts()&lt;/code&gt; 方法，该方法返回所有 &lt;code&gt;OpinionPoll&lt;/code&gt; 对象的列表，每个对象都具有一个额外的 &lt;code&gt;num_responses&lt;/code&gt; 属性，该属性是聚合查询的结果：</target>
        </trans-unit>
        <trans-unit id="f22f2bd76f33b6561d7fa95bb448809cc02b2670" translate="yes" xml:space="preserve">
          <source>For example, this deletes all &lt;code&gt;Entry&lt;/code&gt; objects with a &lt;code&gt;pub_date&lt;/code&gt; year of 2005:</source>
          <target state="translated">例如，这将删除 &lt;code&gt;pub_date&lt;/code&gt; 年为2005的所有 &lt;code&gt;Entry&lt;/code&gt; 对象：</target>
        </trans-unit>
        <trans-unit id="ffac3d5fcc4ac7fdba32bd4d758cba661acc1241" translate="yes" xml:space="preserve">
          <source>For example, this model has a few custom methods:</source>
          <target state="translated">例如,这个模型有一些自定义方法。</target>
        </trans-unit>
        <trans-unit id="b60ea9d897ff291cb7e66bcae7ca48541f5d15f3" translate="yes" xml:space="preserve">
          <source>For example, this returns the first 5 objects (&lt;code&gt;LIMIT 5&lt;/code&gt;):</source>
          <target state="translated">例如，这将返回前5个对象（ &lt;code&gt;LIMIT 5&lt;/code&gt; ）：</target>
        </trans-unit>
        <trans-unit id="aa80cca3b9f5bf179795210ec6b98d06892e51ee" translate="yes" xml:space="preserve">
          <source>For example, this statement yields a single &lt;code&gt;Q&lt;/code&gt; object that represents the &amp;ldquo;OR&amp;rdquo; of two &lt;code&gt;&quot;question__startswith&quot;&lt;/code&gt; queries:</source>
          <target state="translated">例如，以下语句产生一个 &lt;code&gt;Q&lt;/code&gt; 对象，该对象代表两个 &lt;code&gt;&quot;question__startswith&quot;&lt;/code&gt; 查询的&amp;ldquo; OR&amp;rdquo; ：</target>
        </trans-unit>
        <trans-unit id="4c1552c9853a63c8045ed1aecebca09d2f2bf272" translate="yes" xml:space="preserve">
          <source>For example, this template would render as &lt;code&gt;'hello'&lt;/code&gt;:</source>
          <target state="translated">例如，此模板将呈现为 &lt;code&gt;'hello'&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="9f1954b9d586a8adf777426824138b87bc609b37" translate="yes" xml:space="preserve">
          <source>For example, this use of &lt;code&gt;extra()&lt;/code&gt;:</source>
          <target state="translated">例如，对 &lt;code&gt;extra()&lt;/code&gt; 的这种使用：</target>
        </trans-unit>
        <trans-unit id="88fdaec3ea4b5e8da4ebc2790122624ba0f7e20c" translate="yes" xml:space="preserve">
          <source>For example, this would look for an app template in the given directory when creating the &lt;code&gt;myapp&lt;/code&gt; app:</source>
          <target state="translated">例如，在创建 &lt;code&gt;myapp&lt;/code&gt; 应用时，它将在给定目录中查找应用模板：</target>
        </trans-unit>
        <trans-unit id="730023e6712c636f1e717e67432aca53f7486feb" translate="yes" xml:space="preserve">
          <source>For example, to allow all users to log in regardless of &amp;ldquo;active&amp;rdquo; status:</source>
          <target state="translated">例如，要允许所有用户无论处于&amp;ldquo;活动&amp;rdquo;状态都登录：</target>
        </trans-unit>
        <trans-unit id="812ff44f9b0e37743f53c2bda9e76d7b8d794761" translate="yes" xml:space="preserve">
          <source>For example, to annotate each movie with the average rating for the movies by the same studio in the same genre and release year:</source>
          <target state="translated">例如,用同一制片厂在同一类型和发行年份的电影的平均评分来注释每部电影。</target>
        </trans-unit>
        <trans-unit id="23c6e960f3c8f0a5c0df18b368143eaf3d0cabb1" translate="yes" xml:space="preserve">
          <source>For example, to annotate each post with the email address of the author of the newest comment on that post:</source>
          <target state="translated">例如,在每篇文章中注解该文章最新评论的作者的电子邮件地址。</target>
        </trans-unit>
        <trans-unit id="279e76a8911e6175d2b1e0fca7ce722f066e2ec0" translate="yes" xml:space="preserve">
          <source>For example, to annotate each post with whether or not it has a comment from within the last day:</source>
          <target state="translated">例如,对每篇文章进行注释,说明它是否有过去一天内的评论。</target>
        </trans-unit>
        <trans-unit id="d8c72125990ce7483e08fa3c125e87d8e1d668ef" translate="yes" xml:space="preserve">
          <source>For example, to attach &lt;code&gt;request.user&lt;/code&gt; to each changed formset model instance:</source>
          <target state="translated">例如，要将 &lt;code&gt;request.user&lt;/code&gt; 附加到每个更改的表单集模型实例：</target>
        </trans-unit>
        <trans-unit id="d48e4fdd0eb7ee0386a0d07a5b840f298a471364" translate="yes" xml:space="preserve">
          <source>For example, to create an Atom 1.0 feed and print it to standard output:</source>
          <target state="translated">例如,创建一个Atom 1.0 feed并将其打印成标准输出。</target>
        </trans-unit>
        <trans-unit id="fcfc47c401527a89154f8bea99232797453a3cb4" translate="yes" xml:space="preserve">
          <source>For example, to delete all the entries in a particular blog:</source>
          <target state="translated">例如,要删除某个博客中的所有条目。</target>
        </trans-unit>
        <trans-unit id="dd56ffbb096671a8ae0f457750a49dd814c8b644" translate="yes" xml:space="preserve">
          <source>For example, to find a list of all blog entries that have had more comments than pingbacks, we construct an &lt;code&gt;F()&lt;/code&gt; object to reference the pingback count, and use that &lt;code&gt;F()&lt;/code&gt; object in the query:</source>
          <target state="translated">例如，要查找所有评论比pingback多的博客条目的列表，我们构造一个 &lt;code&gt;F()&lt;/code&gt; 对象以引用pingback计数，并在查询中使用该 &lt;code&gt;F()&lt;/code&gt; 对象：</target>
        </trans-unit>
        <trans-unit id="8a79fb62038f478d20c970117065d25594b022ff" translate="yes" xml:space="preserve">
          <source>For example, to find restaurants that have vegetarian pizzas with &lt;code&gt;'mozzarella'&lt;/code&gt; in the name:</source>
          <target state="translated">例如，要查找名称为 &lt;code&gt;'mozzarella'&lt;/code&gt; 素食比萨的餐厅：</target>
        </trans-unit>
        <trans-unit id="fa7ff9eaf20a9e7fd98ea20afd6e746161bd4331" translate="yes" xml:space="preserve">
          <source>For example, to find the price range of books offered in each store, you could use the annotation:</source>
          <target state="translated">例如,要找到每个商店提供的书籍的价格范围,你可以使用注释。</target>
        </trans-unit>
        <trans-unit id="767eb3d833b80709509cdaba33aea5c3576ef163" translate="yes" xml:space="preserve">
          <source>For example, to generate a list of books that have more than one author, you can issue the query:</source>
          <target state="translated">例如,要生成一个有多个作者的书籍列表,你可以发出查询。</target>
        </trans-unit>
        <trans-unit id="da85008b78879c5f2b184ab4252fe398f7632ac5" translate="yes" xml:space="preserve">
          <source>For example, to get a &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; of blog entries from the year 2006, use &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.filter&quot;&gt;&lt;code&gt;filter()&lt;/code&gt;&lt;/a&gt; like so:</source>
          <target state="translated">例如，要从2006年获取博客条目的&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt;，请使用&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.filter&quot;&gt; &lt;code&gt;filter()&lt;/code&gt; ,&lt;/a&gt;如下所示：</target>
        </trans-unit>
        <trans-unit id="2665b2f708b263f2e02ca156cd6a0c538de8c726" translate="yes" xml:space="preserve">
          <source>For example, to get a list of all additions done through the admin:</source>
          <target state="translated">例如,要获得所有通过管理员完成的添加列表。</target>
        </trans-unit>
        <trans-unit id="b779ba41bdf093e3d6f0563f98ce89940d5ed6a9" translate="yes" xml:space="preserve">
          <source>For example, to order a &lt;code&gt;QuerySet&lt;/code&gt; of books by the number of authors that have contributed to the book, you could use the following query:</source>
          <target state="translated">例如， &lt;code&gt;QuerySet&lt;/code&gt; 贡献该书的作者人数来订购QuerySet书籍，可以使用以下查询：</target>
        </trans-unit>
        <trans-unit id="4432ed9491c6479c00d2785b98e20507109078c5" translate="yes" xml:space="preserve">
          <source>For example, to order by a &lt;code&gt;pub_date&lt;/code&gt; field ascending, use this:</source>
          <target state="translated">例如， &lt;code&gt;pub_date&lt;/code&gt; 字段升序排序，请使用以下命令：</target>
        </trans-unit>
        <trans-unit id="e6b6b30b3df788764cc7082971ff432b4a48a992" translate="yes" xml:space="preserve">
          <source>For example, to prevent one or more columns from being sortable:</source>
          <target state="translated">例如,防止一列或多列被排序。</target>
        </trans-unit>
        <trans-unit id="502100f7079ee748e529025258845a1b3a4df3cc" translate="yes" xml:space="preserve">
          <source>For example, to save an object to the &lt;code&gt;legacy_users&lt;/code&gt; database, you&amp;rsquo;d use this:</source>
          <target state="translated">例如，要将对象保存到 &lt;code&gt;legacy_users&lt;/code&gt; 数据库，请使用以下命令：</target>
        </trans-unit>
        <trans-unit id="2acf27ec57eb17ce1701c1357eaded68de2d5ad5" translate="yes" xml:space="preserve">
          <source>For example, to search by &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;age&lt;/code&gt;, you could use:</source>
          <target state="translated">例如，要按 &lt;code&gt;name&lt;/code&gt; 和 &lt;code&gt;age&lt;/code&gt; 进行搜索，可以使用：</target>
        </trans-unit>
        <trans-unit id="ddbd8cfaa0374b8b12582f667e5c4260e74a59ba" translate="yes" xml:space="preserve">
          <source>For example, to sort companies that haven&amp;rsquo;t been contacted (&lt;code&gt;last_contacted&lt;/code&gt; is null) after companies that have been contacted:</source>
          <target state="translated">例如，要在已联系的公司之后对尚未联系的公司进行排序（ &lt;code&gt;last_contacted&lt;/code&gt; 为null）：</target>
        </trans-unit>
        <trans-unit id="e7831aac7ce3cb060fd800aebb9b85cee2d01e5e" translate="yes" xml:space="preserve">
          <source>For example, to store numbers up to &lt;code&gt;999&lt;/code&gt; with a resolution of 2 decimal places, you&amp;rsquo;d use:</source>
          <target state="translated">例如，要存储最多 &lt;code&gt;999&lt;/code&gt; 个数字且分辨率为2个小数位，则可以使用：</target>
        </trans-unit>
        <trans-unit id="ac20e728f2f0f25bbef7107d0e2e92c0ef03c159" translate="yes" xml:space="preserve">
          <source>For example, to test that an &lt;code&gt;update()&lt;/code&gt; call resulted in the expected update, you could write a test similar to this:</source>
          <target state="translated">例如，要测试 &lt;code&gt;update()&lt;/code&gt; 调用是否导致了预期的更新，您可以编写类似于以下的测试：</target>
        </trans-unit>
        <trans-unit id="b0197611ee48c7b267a7d6568cecc45562e3a8bb" translate="yes" xml:space="preserve">
          <source>For example, to translate the help text of the &lt;em&gt;name&lt;/em&gt; field in the following model, do the following:</source>
          <target state="translated">例如，要在以下模型中转换&lt;em&gt;名称&lt;/em&gt;字段的帮助文本，请执行以下操作：</target>
        </trans-unit>
        <trans-unit id="54c4b8ee2f7b75c7d52fae5c72cbcf7c30ccfdc3" translate="yes" xml:space="preserve">
          <source>For example, to turn comments off for all blog entries published in 2010, you could do this:</source>
          <target state="translated">例如,要关闭2010年发表的所有博客条目的评论,你可以这样做。</target>
        </trans-unit>
        <trans-unit id="f0b380f65a8622ee9c808ca11e22ef9b611130ca" translate="yes" xml:space="preserve">
          <source>For example, using the above &lt;code&gt;Place&lt;/code&gt; class again, let&amp;rsquo;s create another subclass with a &lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">例如，再次使用上面的 &lt;code&gt;Place&lt;/code&gt; 类，让我们使用&lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt; &lt;code&gt;ManyToManyField&lt;/code&gt; &lt;/a&gt;创建另一个子类：</target>
        </trans-unit>
        <trans-unit id="72f9b449e9e58bbd051ef1654ab12abf83f7812b" translate="yes" xml:space="preserve">
          <source>For example, we can ask for all publishers, annotated with their respective total book stock counters (note how we use &lt;code&gt;'book'&lt;/code&gt; to specify the &lt;code&gt;Publisher&lt;/code&gt; -&amp;gt; &lt;code&gt;Book&lt;/code&gt; reverse foreign key hop):</source>
          <target state="translated">例如，我们可以要求所有出版商，并在其各自的总图书计数器上注明（注意我们如何使用 &lt;code&gt;'book'&lt;/code&gt; 指定 &lt;code&gt;Publisher&lt;/code&gt; -&amp;gt; &lt;code&gt;Book&lt;/code&gt; 反向外键跃点）：</target>
        </trans-unit>
        <trans-unit id="eea4002354c2c1b943b967909d300e907d4041a2" translate="yes" xml:space="preserve">
          <source>For example, we can use &lt;code&gt;self&lt;/code&gt; to flash a message to the user informing her that the action was successful:</source>
          <target state="translated">例如，我们可以使用 &lt;code&gt;self&lt;/code&gt; 向用户显示一条消息，通知用户该操作成功：</target>
        </trans-unit>
        <trans-unit id="dab03fdfe322eab9059b2f86a4724cd280a2574b" translate="yes" xml:space="preserve">
          <source>For example, we can use &lt;code&gt;self&lt;/code&gt; to flash a message to the user informing them that the action was successful:</source>
          <target state="translated">例如，我们可以使用 &lt;code&gt;self&lt;/code&gt; 向用户显示一条消息，通知他们该操作成功：</target>
        </trans-unit>
        <trans-unit id="1acd4d7ad1ed66dba1c0cefd87c20a2d7472d4db" translate="yes" xml:space="preserve">
          <source>For example, we could look up the &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt;&lt;code&gt;ContentType&lt;/code&gt;&lt;/a&gt; for the &lt;a href=&quot;auth#django.contrib.auth.models.User&quot;&gt;&lt;code&gt;User&lt;/code&gt;&lt;/a&gt; model:</source>
          <target state="translated">例如，我们可以为&lt;a href=&quot;auth#django.contrib.auth.models.User&quot;&gt; &lt;code&gt;User&lt;/code&gt; &lt;/a&gt;模型查找&lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt; &lt;code&gt;ContentType&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="1a8b1692e49384722e8905fb2cbb4fa05d20ef09" translate="yes" xml:space="preserve">
          <source>For example, when a Django admin change-list page is being filtered by a date drilldown, the header for a given day displays the day and month. Different locales have different formats. For example, U.S. English would say &amp;ldquo;January 1,&amp;rdquo; whereas Spanish might say &amp;ldquo;1 Enero.&amp;rdquo;</source>
          <target state="translated">例如，当通过日期明细过滤Django管理员更改列表页面时，给定日期的标题显示日期和月份。不同的语言环境具有不同的格式。例如，美国英语说&amp;ldquo; 1月1日&amp;rdquo;，而西班牙语说&amp;ldquo; 1 Enero&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="f8dc18b9983c5e73e9a4d6fb5ebe694cc177e142" translate="yes" xml:space="preserve">
          <source>For example, when a Django admin change-list page is being filtered by a date drilldown, the header for a given month displays the month and the year. Different locales have different formats. For example, U.S. English would say &amp;ldquo;January 2006,&amp;rdquo; whereas another locale might say &amp;ldquo;2006/January.&amp;rdquo;</source>
          <target state="translated">例如，当通过日期明细过滤Django管理员更改列表页面时，给定月份的标题显示月份和年份。不同的语言环境具有不同的格式。例如，美国英语会说&amp;ldquo; 2006年1月&amp;rdquo;，而另一个语言环境可能会说&amp;ldquo; 2006年1月&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="2e328d173ac5ec7f169e494ddd47a73938cf810d" translate="yes" xml:space="preserve">
          <source>For example, when configuring your application with &lt;code&gt;mod_wsgi&lt;/code&gt;, set the &lt;code&gt;WSGIDaemonProcess&lt;/code&gt; attribute &lt;code&gt;threads&lt;/code&gt; to &lt;code&gt;1&lt;/code&gt;, unless Apache may crash when running your GeoDjango application. Increase the number of &lt;code&gt;processes&lt;/code&gt; instead.</source>
          <target state="translated">例如，使用 &lt;code&gt;mod_wsgi&lt;/code&gt; 配置应用程序时，请将 &lt;code&gt;WSGIDaemonProcess&lt;/code&gt; 属性 &lt;code&gt;threads&lt;/code&gt; 设置为 &lt;code&gt;1&lt;/code&gt; ，除非运行GeoDjango应用程序时Apache可能崩溃。而是增加 &lt;code&gt;processes&lt;/code&gt; 数。</target>
        </trans-unit>
        <trans-unit id="f39be411ce21100d9f857b6a4f43b2db6d1961b7" translate="yes" xml:space="preserve">
          <source>For example, when using PostgreSQL:</source>
          <target state="translated">例如,当使用PostgreSQL。</target>
        </trans-unit>
        <trans-unit id="d801ed460f9666b79fe2663b1c3338bf1f54313b" translate="yes" xml:space="preserve">
          <source>For example, when you are working with blog entries, you may want to know the number of authors that have contributed blog entries:</source>
          <target state="translated">例如,当你在处理博客条目时,你可能想知道贡献过博客条目的作者数量。</target>
        </trans-unit>
        <trans-unit id="2b79f03ac8c03a283c065d9796342d378859d632" translate="yes" xml:space="preserve">
          <source>For example, while our tests here have covered some of the internal logic of a model and the way our views publish information, you can use an &amp;ldquo;in-browser&amp;rdquo; framework such as &lt;a href=&quot;http://seleniumhq.org/&quot;&gt;Selenium&lt;/a&gt; to test the way your HTML actually renders in a browser. These tools allow you to check not just the behavior of your Django code, but also, for example, of your JavaScript. It&amp;rsquo;s quite something to see the tests launch a browser, and start interacting with your site, as if a human being were driving it! Django includes &lt;a href=&quot;../topics/testing/tools#django.test.LiveServerTestCase&quot;&gt;&lt;code&gt;LiveServerTestCase&lt;/code&gt;&lt;/a&gt; to facilitate integration with tools like Selenium.</source>
          <target state="translated">例如，虽然我们的测试涵盖了模型的一些内部逻辑以及视图发布信息的方式，但是您可以使用&amp;ldquo;浏览器&amp;rdquo;框架（例如&lt;a href=&quot;http://seleniumhq.org/&quot;&gt;Selenium）&lt;/a&gt;来测试HTML在浏览器中的实际呈现方式。这些工具使您不仅可以检查Django代码的行为，还可以检查JavaScript的行为。可以看到测试启动了浏览器，并开始与您的网站进行交互，就像有人在驱动它一样，真是太棒了！Django包括&lt;a href=&quot;../topics/testing/tools#django.test.LiveServerTestCase&quot;&gt; &lt;code&gt;LiveServerTestCase&lt;/code&gt; ,&lt;/a&gt;以促进与Selenium等工具的集成。</target>
        </trans-unit>
        <trans-unit id="2a8d5ade2984d816b5ba35345366f0f5cdb5aed6" translate="yes" xml:space="preserve">
          <source>For example, you can apply &lt;code&gt;escape&lt;/code&gt; to fields when &lt;a href=&quot;#std:templatetag-autoescape&quot;&gt;&lt;code&gt;autoescape&lt;/code&gt;&lt;/a&gt; is off:</source>
          <target state="translated">例如，您可以在&lt;a href=&quot;#std:templatetag-autoescape&quot;&gt; &lt;code&gt;autoescape&lt;/code&gt; &lt;/a&gt; &lt;code&gt;escape&lt;/code&gt; 时将转义应用于字段：</target>
        </trans-unit>
        <trans-unit id="8bc687cb81bdb45486d590586550de931ed0c5e2" translate="yes" xml:space="preserve">
          <source>For example, you can change the file name by setting the file&amp;rsquo;s &lt;a href=&quot;../ref/files/file#django.core.files.File.name&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt; to a path relative to the file storage&amp;rsquo;s location (&lt;a href=&quot;../ref/settings#std:setting-MEDIA_ROOT&quot;&gt;&lt;code&gt;MEDIA_ROOT&lt;/code&gt;&lt;/a&gt; if you are using the default &lt;a href=&quot;../ref/files/storage#django.core.files.storage.FileSystemStorage&quot;&gt;&lt;code&gt;FileSystemStorage&lt;/code&gt;&lt;/a&gt;):</source>
          <target state="translated">例如，您可以通过文件的设置更改文件名&lt;a href=&quot;../ref/files/file#django.core.files.File.name&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt;相对于文件存储位置（路径&lt;a href=&quot;../ref/settings#std:setting-MEDIA_ROOT&quot;&gt; &lt;code&gt;MEDIA_ROOT&lt;/code&gt; &lt;/a&gt;，如果你使用的是默认&lt;a href=&quot;../ref/files/storage#django.core.files.storage.FileSystemStorage&quot;&gt; &lt;code&gt;FileSystemStorage&lt;/code&gt; &lt;/a&gt;）：</target>
        </trans-unit>
        <trans-unit id="a64b2eae0f2e3122826d90162479de6db7d3a972" translate="yes" xml:space="preserve">
          <source>For example, you can create &lt;code&gt;myproject/jinja2.py&lt;/code&gt; with this content:</source>
          <target state="translated">例如，您可以使用以下内容创建 &lt;code&gt;myproject/jinja2.py&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="653060a437deca46c9784c2247d45d68a7488a98" translate="yes" xml:space="preserve">
          <source>For example, you can use &lt;code&gt;__file__&lt;/code&gt; to determine that all test classes in the same file that inherit from &lt;code&gt;SerializeMixin&lt;/code&gt; will run sequentially:</source>
          <target state="translated">例如，可以使用 &lt;code&gt;__file__&lt;/code&gt; 来确定同一文件中继承自 &lt;code&gt;SerializeMixin&lt;/code&gt; 的所有测试类将按顺序运行：</target>
        </trans-unit>
        <trans-unit id="fce9e67559c456c24bd95eaa2912a8a62168b7d6" translate="yes" xml:space="preserve">
          <source>For example, you can use this method to remove the built-in &amp;ldquo;delete selected objects&amp;rdquo; action:</source>
          <target state="translated">例如，您可以使用此方法删除内置的&amp;ldquo;删除所选对象&amp;rdquo;操作：</target>
        </trans-unit>
        <trans-unit id="d3c0833db9722f2012f8859bc587b79daf4a5f2b" translate="yes" xml:space="preserve">
          <source>For example, you can use this technique to add a custom logo to the &lt;code&gt;admin/base_site.html&lt;/code&gt; template:</source>
          <target state="translated">例如，您可以使用此技术向 &lt;code&gt;admin/base_site.html&lt;/code&gt; 模板添加自定义徽标：</target>
        </trans-unit>
        <trans-unit id="66f7438bda04c7668c447a88a582dfeaace04a30" translate="yes" xml:space="preserve">
          <source>For example, you could register a callback in an &lt;a href=&quot;applications#django.apps.AppConfig&quot;&gt;&lt;code&gt;AppConfig&lt;/code&gt;&lt;/a&gt; like this:</source>
          <target state="translated">例如，您可以像这样在&lt;a href=&quot;applications#django.apps.AppConfig&quot;&gt; &lt;code&gt;AppConfig&lt;/code&gt; 中&lt;/a&gt;注册回调：</target>
        </trans-unit>
        <trans-unit id="d8c30e71ee2cc2a2bb4c4f8504db692a7e61d7cc" translate="yes" xml:space="preserve">
          <source>For example, you might start implementing an iTunes RSS feed generator like so:</source>
          <target state="translated">例如,你可以像这样开始实施iTunes RSS feed生成器。</target>
        </trans-unit>
        <trans-unit id="46c746d6fcc46e0acd37d896e4c4f63b43c64144" translate="yes" xml:space="preserve">
          <source>For example, your &lt;a href=&quot;../../ref/settings#std:setting-MIDDLEWARE&quot;&gt;&lt;code&gt;MIDDLEWARE&lt;/code&gt;&lt;/a&gt; might look like this:</source>
          <target state="translated">例如，您的&lt;a href=&quot;../../ref/settings#std:setting-MIDDLEWARE&quot;&gt; &lt;code&gt;MIDDLEWARE&lt;/code&gt; &lt;/a&gt;可能如下所示：</target>
        </trans-unit>
        <trans-unit id="dd639e78a671d339c67b021cf0995153fafb1e13" translate="yes" xml:space="preserve">
          <source>For example, your company may already have an LDAP setup that stores a username and password for every employee. It&amp;rsquo;d be a hassle for both the network administrator and the users themselves if users had separate accounts in LDAP and the Django-based applications.</source>
          <target state="translated">例如，您的公司可能已经有一个LDAP设置来存储每个员工的用户名和密码。如果用户在LDAP和基于Django的应用程序中具有单独的帐户，那么这对于网络管理员和用户本人来说都是一件麻烦事。</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例如:</target>
        </trans-unit>
        <trans-unit id="2ae3dc38163522a8032cf18284668e2d51924570" translate="yes" xml:space="preserve">
          <source>For examples, read the &lt;a href=&quot;https://github.com/django/django/blob/master/django/template/loaders&quot;&gt;source code for Django&amp;rsquo;s built-in loaders&lt;/a&gt;.</source>
          <target state="translated">例如，请阅读&lt;a href=&quot;https://github.com/django/django/blob/master/django/template/loaders&quot;&gt;Django内置加载程序&lt;/a&gt;的源代码。</target>
        </trans-unit>
        <trans-unit id="272a0b24158a86fc7beae49b7557b362b5df31da" translate="yes" xml:space="preserve">
          <source>For extra readability, you can optionally give a &lt;em&gt;name&lt;/em&gt; to your &lt;code&gt;{% endblock %}&lt;/code&gt; tag. For example:</source>
          <target state="translated">对于额外的可读性，您可以选择给一个&lt;em&gt;名字&lt;/em&gt;到您的 &lt;code&gt;{% endblock %}&lt;/code&gt; 标签。例如：</target>
        </trans-unit>
        <trans-unit id="30a4ee71ab009210385b0f7253fc8e8296d807be" translate="yes" xml:space="preserve">
          <source>For fields like &lt;a href=&quot;#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; that map to model instances, defaults should be the value of the field they reference (&lt;code&gt;pk&lt;/code&gt; unless &lt;a href=&quot;#django.db.models.ForeignKey.to_field&quot;&gt;&lt;code&gt;to_field&lt;/code&gt;&lt;/a&gt; is set) instead of model instances.</source>
          <target state="translated">对于映射到模型实例的字段（例如&lt;a href=&quot;#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; )&lt;/a&gt;，默认值应为它们引用的字段的值（除非设置了&lt;a href=&quot;#django.db.models.ForeignKey.to_field&quot;&gt; &lt;code&gt;to_field&lt;/code&gt; ,&lt;/a&gt;否则为 &lt;code&gt;pk&lt;/code&gt; ）而不是模型实例。</target>
        </trans-unit>
        <trans-unit id="f78db508803596606e73e0d0a98b1dfa781a1d8a" translate="yes" xml:space="preserve">
          <source>For fine-grained control over the character encoding of your test database, use the &lt;a href=&quot;../../ref/settings#std:setting-TEST_CHARSET&quot;&gt;&lt;code&gt;CHARSET&lt;/code&gt;&lt;/a&gt; TEST option. If you&amp;rsquo;re using MySQL, you can also use the &lt;a href=&quot;../../ref/settings#std:setting-TEST_COLLATION&quot;&gt;&lt;code&gt;COLLATION&lt;/code&gt;&lt;/a&gt; option to control the particular collation used by the test database. See the &lt;a href=&quot;../../ref/settings&quot;&gt;settings documentation&lt;/a&gt; for details of these and other advanced settings.</source>
          <target state="translated">为了对测试数据库的字符编码进行细粒度控制，请使用&lt;a href=&quot;../../ref/settings#std:setting-TEST_CHARSET&quot;&gt; &lt;code&gt;CHARSET&lt;/code&gt; &lt;/a&gt; TEST选项。如果您使用的是MySQL，则还可以使用&lt;a href=&quot;../../ref/settings#std:setting-TEST_COLLATION&quot;&gt; &lt;code&gt;COLLATION&lt;/code&gt; &lt;/a&gt;选项来控制测试数据库使用的特定排序规则。有关这些和其他高级设置的详细信息，请参见&lt;a href=&quot;../../ref/settings&quot;&gt;设置文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="36474a55d2c1798e1a7007aeb9803aa08abc73bf" translate="yes" xml:space="preserve">
          <source>For flexibility, the output does &lt;em&gt;not&lt;/em&gt; include the &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;/table&amp;gt;&lt;/code&gt; tags, nor does it include the &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;/form&amp;gt;&lt;/code&gt; tags or an &lt;code&gt;&amp;lt;input type=&quot;submit&quot;&amp;gt;&lt;/code&gt; tag. It&amp;rsquo;s your job to do that.</source>
          <target state="translated">为了提高灵活性，输出并&lt;em&gt;不&lt;/em&gt;包括 &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; 和 &lt;code&gt;&amp;lt;/table&amp;gt;&lt;/code&gt; 标记，也不包括在 &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 和 &lt;code&gt;&amp;lt;/form&amp;gt;&lt;/code&gt; 标记或 &lt;code&gt;&amp;lt;input type=&quot;submit&quot;&amp;gt;&lt;/code&gt; 标记。这样做是您的工作。</target>
        </trans-unit>
        <trans-unit id="307bc0d9062e63004232297eb9326c743bf8ea6d" translate="yes" xml:space="preserve">
          <source>For full details on generic views, see the &lt;a href=&quot;../topics/class-based-views/index&quot;&gt;generic views documentation&lt;/a&gt;.</source>
          <target state="translated">有关通用视图的完整详细信息，请参见&lt;a href=&quot;../topics/class-based-views/index&quot;&gt;通用视图文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2cbdabb024a73903c71e4869d4c1a7e7454e9e0b" translate="yes" xml:space="preserve">
          <source>For full details on testing, see &lt;a href=&quot;../topics/testing/index&quot;&gt;Testing in Django&lt;/a&gt;.</source>
          <target state="translated">有关测试的完整详细信息，请参阅《&lt;a href=&quot;../topics/testing/index&quot;&gt;在Django中测试》&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bc370485be81f4d5b9dc6275e4bf8fd187d0db71" translate="yes" xml:space="preserve">
          <source>For good measure, let&amp;rsquo;s also include the &lt;code&gt;was_published_recently()&lt;/code&gt; method from &lt;a href=&quot;tutorial02&quot;&gt;Tutorial 2&lt;/a&gt;:</source>
          <target state="translated">为了达到良好的效果，我们还包括了&lt;a href=&quot;tutorial02&quot;&gt;教程2中&lt;/a&gt;的 &lt;code&gt;was_published_recently()&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="45dc7c8b265d368652d0fd88b7904da9a61cc95a" translate="yes" xml:space="preserve">
          <source>For historical reasons, both the generic support for template engines and the implementation of the Django template language live in the &lt;code&gt;django.template&lt;/code&gt; namespace.</source>
          <target state="translated">出于历史原因，对模板引擎的通用支持和Django模板语言的实现都存在于 &lt;code&gt;django.template&lt;/code&gt; 命名空间中。</target>
        </trans-unit>
        <trans-unit id="de99d7f373c7b60840c2ac2264755119e7847202" translate="yes" xml:space="preserve">
          <source>For individual variables</source>
          <target state="translated">对于单个变量</target>
        </trans-unit>
        <trans-unit id="234b2463d3262fe6585942096c146c09c2ffdabb" translate="yes" xml:space="preserve">
          <source>For information about serving the static files (images, JavaScript, and CSS) associated with the admin in production, see &lt;a href=&quot;../../../howto/deployment/wsgi/modwsgi#serving-files&quot;&gt;Serving files&lt;/a&gt;.</source>
          <target state="translated">有关在生产环境中提供与admin相关联的静态文件（图像，JavaScript和CSS）的信息，请参阅&amp;ldquo; &lt;a href=&quot;../../../howto/deployment/wsgi/modwsgi#serving-files&quot;&gt;提供文件&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3b99bcaecd02955383d58cab1f164fc0e3d49fe3" translate="yes" xml:space="preserve">
          <source>For information about unit-testing the sending of emails in your application, see the &lt;a href=&quot;testing/tools#topics-testing-email&quot;&gt;Email services&lt;/a&gt; section of the testing documentation.</source>
          <target state="translated">有关对应用程序中的电子邮件发送进行单元测试的信息，请参阅测试文档的&amp;ldquo; &lt;a href=&quot;testing/tools#topics-testing-email&quot;&gt;电子邮件服务&amp;rdquo;&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="cd54b3b047434d8162788e4a6a248fdd5819fd87" translate="yes" xml:space="preserve">
          <source>For information on the &lt;code&gt;Vary&lt;/code&gt; header, see &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html#section-7.1.4&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 7231#section-7.1.4&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">有关 &lt;code&gt;Vary&lt;/code&gt; 标头的信息，请参阅&lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html#section-7.1.4&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 7231＃section-7.1.4&lt;/strong&gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="290116039acf1bacd476abe3a958e4a6fb6ea6e9" translate="yes" xml:space="preserve">
          <source>For information on writing your own custom tags and filters, see &lt;a href=&quot;../../howto/custom-template-tags&quot;&gt;Custom template tags and filters&lt;/a&gt;.</source>
          <target state="translated">有关编写自己的自定义标签和过滤器的信息，请参阅《&lt;a href=&quot;../../howto/custom-template-tags&quot;&gt;自定义模板标签和过滤器》&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6424a9f5f542b33588d1226b07acb7eead968504" translate="yes" xml:space="preserve">
          <source>For instance, if your database connection is dropped because your process was killed without a chance to shut down gracefully, your rollback hook will never run.</source>
          <target state="translated">例如,如果你的数据库连接因为你的进程被杀死而没有机会优雅地关闭,你的回滚钩将永远不会运行。</target>
        </trans-unit>
        <trans-unit id="68e3a5785f60b6a48e4ba13601647820dd287426" translate="yes" xml:space="preserve">
          <source>For instance, suppose you have the following objects in your fixture:</source>
          <target state="translated">例如,假设您的夹具中有以下对象。</target>
        </trans-unit>
        <trans-unit id="26552709d9c194254fefe31b1351503fbe45c30a" translate="yes" xml:space="preserve">
          <source>For instance, suppose you&amp;rsquo;ve written a &lt;code&gt;ProgressBarUploadHandler&lt;/code&gt; that provides feedback on upload progress to some sort of AJAX widget. You&amp;rsquo;d add this handler to your upload handlers like this:</source>
          <target state="translated">例如，假设您已经编写了一个 &lt;code&gt;ProgressBarUploadHandler&lt;/code&gt; ，它提供有关向某种AJAX小部件的上传进度的反馈。您可以像下面这样将此处理程序添加到您的上传处理程序中：</target>
        </trans-unit>
        <trans-unit id="414de469af9e6bdec3a4931a955f107e92261403" translate="yes" xml:space="preserve">
          <source>For instance, the following &lt;code&gt;{% blocktrans %}&lt;/code&gt; tag:</source>
          <target state="translated">例如，以下 &lt;code&gt;{% blocktrans %}&lt;/code&gt; 标签：</target>
        </trans-unit>
        <trans-unit id="dec22b9c84ee09af26eb5a650408fd484c6166d3" translate="yes" xml:space="preserve">
          <source>For instance, the following &lt;code&gt;{% blocktranslate %}&lt;/code&gt; tag:</source>
          <target state="translated">例如，以下 &lt;code&gt;{% blocktranslate %}&lt;/code&gt; 标签：</target>
        </trans-unit>
        <trans-unit id="6b46d91dc6ffcc21985af173f6cc4f1f0a426295" translate="yes" xml:space="preserve">
          <source>For instance, to filter out &lt;a href=&quot;../ref/exceptions#django.http.UnreadablePostError&quot;&gt;&lt;code&gt;UnreadablePostError&lt;/code&gt;&lt;/a&gt; (raised when a user cancels an upload) from the admin emails, you would create a filter function:</source>
          <target state="translated">例如，要从管理电子邮件中过滤出&lt;a href=&quot;../ref/exceptions#django.http.UnreadablePostError&quot;&gt; &lt;code&gt;UnreadablePostError&lt;/code&gt; &lt;/a&gt;（当用户取消上载时引发），您可以创建过滤器功能：</target>
        </trans-unit>
        <trans-unit id="ba2af6015ca6f46f35561fed445489f2b6c6f7aa" translate="yes" xml:space="preserve">
          <source>For instance, you can fetch all the messages to return them in a &lt;a href=&quot;../../topics/class-based-views/mixins#jsonresponsemixin-example&quot;&gt;JSONResponseMixin&lt;/a&gt; instead of a &lt;a href=&quot;../class-based-views/mixins-simple#django.views.generic.base.TemplateResponseMixin&quot;&gt;&lt;code&gt;TemplateResponseMixin&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">例如，您可以获取所有消息，以&lt;a href=&quot;../../topics/class-based-views/mixins#jsonresponsemixin-example&quot;&gt;JSONResponseMixin&lt;/a&gt;而不是&lt;a href=&quot;../class-based-views/mixins-simple#django.views.generic.base.TemplateResponseMixin&quot;&gt; &lt;code&gt;TemplateResponseMixin&lt;/code&gt; &lt;/a&gt;的形式返回它们。</target>
        </trans-unit>
        <trans-unit id="abc897209b2f98b7966665fa36a5eddbbc44f66d" translate="yes" xml:space="preserve">
          <source>For instance:</source>
          <target state="translated">例如:</target>
        </trans-unit>
        <trans-unit id="cc39ed624666c7f7da40e46bbe2e48992146ded6" translate="yes" xml:space="preserve">
          <source>For introductory material, see the &lt;a href=&quot;../topics/migrations&quot;&gt;migrations topic guide&lt;/a&gt;.</source>
          <target state="translated">有关入门资料，请参阅&lt;a href=&quot;../topics/migrations&quot;&gt;迁移主题指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e6e8a914b4cd4754faff872acedddbbbebed6ac3" translate="yes" xml:space="preserve">
          <source>For large amounts of text, use &lt;a href=&quot;#django.db.models.TextField&quot;&gt;&lt;code&gt;TextField&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对于大量文本，请使用&lt;a href=&quot;#django.db.models.TextField&quot;&gt; &lt;code&gt;TextField&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="887fa8d25ac98e1581cec62efb96cab221abb0ed" translate="yes" xml:space="preserve">
          <source>For macOS users building from source, the SpatiaLite library &lt;em&gt;and&lt;/em&gt; tools need to have their &lt;code&gt;target&lt;/code&gt; configured:</source>
          <target state="translated">对于从源构建的macOS用户，SpatiaLite库&lt;em&gt;和&lt;/em&gt;工具需要配置其 &lt;code&gt;target&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="646e8054ab0fca896879a33d04bc31e6303c296d" translate="yes" xml:space="preserve">
          <source>For macOS, follow the &lt;a href=&quot;#spatialite-macos&quot;&gt;instructions below&lt;/a&gt;.</source>
          <target state="translated">对于macOS，请按照以下&lt;a href=&quot;#spatialite-macos&quot;&gt;说明进行操作&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7981bb262d83ddad7517a39735875c26f39042b6" translate="yes" xml:space="preserve">
          <source>For many uses, this type of model inheritance will be exactly what you want. It provides a way to factor out common information at the Python level, while still only creating one database table per child model at the database level.</source>
          <target state="translated">对于许多用途来说,这种类型的模型继承将正是您想要的。它提供了一种在Python层面上因果关系的方法,同时在数据库层面上仍然只为每个子模型创建一个数据库表。</target>
        </trans-unit>
        <trans-unit id="720bd383fa98e00a3046b39acb659ac78e231328" translate="yes" xml:space="preserve">
          <source>For many-to-many relationships &lt;code&gt;add()&lt;/code&gt; accepts either model instances or field values, normally primary keys, as the &lt;code&gt;*objs&lt;/code&gt; argument.</source>
          <target state="translated">对于多对多关系， &lt;code&gt;add()&lt;/code&gt; 接受模型实例或字段值（通常是主键）作为 &lt;code&gt;*objs&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="dd9b78eede0a52b208932db0d75cc4ad68210818" translate="yes" xml:space="preserve">
          <source>For many-to-many relationships &lt;code&gt;remove()&lt;/code&gt; accepts either model instances or field values, normally primary keys, as the &lt;code&gt;*objs&lt;/code&gt; argument.</source>
          <target state="translated">对于多对多关系， &lt;code&gt;remove()&lt;/code&gt; 接受模型实例或字段值（通常是主键）作为 &lt;code&gt;*objs&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="7a8e463fb707934251ce68533845c259e15171ad" translate="yes" xml:space="preserve">
          <source>For many-to-many relationships &lt;code&gt;set()&lt;/code&gt; accepts a list of either model instances or field values, normally primary keys, as the &lt;code&gt;objs&lt;/code&gt; argument.</source>
          <target state="translated">对于多对多关系， &lt;code&gt;set()&lt;/code&gt; 接受模型实例或字段值（通常是主键）的列表作为 &lt;code&gt;objs&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="90c3793798204d7ec9cd509aa73f1dad9d1ba931" translate="yes" xml:space="preserve">
          <source>For many-to-many relationships, the &lt;code&gt;bulk&lt;/code&gt; keyword argument doesn&amp;rsquo;t exist.</source>
          <target state="translated">对于多对多关系，不存在 &lt;code&gt;bulk&lt;/code&gt; 关键字参数。</target>
        </trans-unit>
        <trans-unit id="1bdb3d660cc3d32d0750ff6b772aa62cda1fcc57" translate="yes" xml:space="preserve">
          <source>For maximum flexibility you can use a &lt;a href=&quot;../models/fields#django.db.models.TextField&quot;&gt;&lt;code&gt;TextField&lt;/code&gt;&lt;/a&gt; which doesn&amp;rsquo;t have a maximum length defined, however this may incur significant performance penalties depending on your database backend.</source>
          <target state="translated">为了获得最大的灵活性，您可以使用未定义最大长度的&lt;a href=&quot;../models/fields#django.db.models.TextField&quot;&gt; &lt;code&gt;TextField&lt;/code&gt; &lt;/a&gt;，但这可能会导致很大的性能损失，具体取决于您的数据库后端。</target>
        </trans-unit>
        <trans-unit id="7df13100159bd891985f8503c5cf4765d9c91a6d" translate="yes" xml:space="preserve">
          <source>For maximum performance the chunk sizes should be divisible by &lt;code&gt;4&lt;/code&gt; and should not exceed 2 GB (2&lt;sup&gt;31&lt;/sup&gt; bytes) in size. When there are multiple chunk sizes provided by multiple handlers, Django will use the smallest chunk size defined by any handler.</source>
          <target state="translated">为了获得最佳性能，块大小应被 &lt;code&gt;4&lt;/code&gt; 整除，并且大小不得超过2 GB（2 &lt;sup&gt;31&lt;/sup&gt;字节）。当多个处理程序提供了多个块大小时，Django将使用任何处理程序定义的最小块大小。</target>
        </trans-unit>
        <trans-unit id="d61a6fa699444c95bc1a164ecde97b8625d9aecb" translate="yes" xml:space="preserve">
          <source>For maximum security, make sure database servers only accept connections from your application servers.</source>
          <target state="translated">为了达到最大的安全性,确保数据库服务器只接受来自应用服务器的连接。</target>
        </trans-unit>
        <trans-unit id="e72d3d0d1fc526db06a844c569e485c559459803" translate="yes" xml:space="preserve">
          <source>For model methods, you can provide translations to Django and the admin site with the &lt;code&gt;short_description&lt;/code&gt; attribute:</source>
          <target state="translated">对于模型方法，您可以使用 &lt;code&gt;short_description&lt;/code&gt; 属性提供到Django和管理站点的翻译：</target>
        </trans-unit>
        <trans-unit id="92461d6b7569ceb9d592fdcda46397f4b4800918" translate="yes" xml:space="preserve">
          <source>For models with &lt;a href=&quot;../../ref/models/fields#django.db.models.DateTimeField&quot;&gt;&lt;code&gt;DateTimeField&lt;/code&gt;&lt;/a&gt;s, this difference makes it impossible to write a fixture that works both with and without time zone support.</source>
          <target state="translated">对于具有&lt;a href=&quot;../../ref/models/fields#django.db.models.DateTimeField&quot;&gt; &lt;code&gt;DateTimeField&lt;/code&gt; &lt;/a&gt;的模型，这种差异使得无法编写可同时支持和不支持时区的灯具。</target>
        </trans-unit>
        <trans-unit id="e582c3e06094fca676d29ee1ac180c26b5ee5489" translate="yes" xml:space="preserve">
          <source>For more advanced usage you may subclass &lt;code&gt;ModelChoiceIterator&lt;/code&gt; in order to customize the yielded 2-tuple choices.</source>
          <target state="translated">对于更高级的用法，您可以将 &lt;code&gt;ModelChoiceIterator&lt;/code&gt; 子类化，以自定义产生的2元组选择。</target>
        </trans-unit>
        <trans-unit id="c80e936be1f3c57e6fba12262a4187f0496b81c5" translate="yes" xml:space="preserve">
          <source>For more advanced usage, please read the &lt;a href=&quot;https://pgjones.gitlab.io/hypercorn/&quot;&gt;Hypercorn documentation&lt;/a&gt;.</source>
          <target state="translated">有关更高级的用法，请阅读&lt;a href=&quot;https://pgjones.gitlab.io/hypercorn/&quot;&gt;Hypercorn文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="49b3de7edbebd211dd7ff278502ceb70044dbf4e" translate="yes" xml:space="preserve">
          <source>For more advanced usage, please read the &lt;a href=&quot;https://www.uvicorn.org/&quot;&gt;Uvicorn documentation&lt;/a&gt;.</source>
          <target state="translated">有关更高级的用法，请阅读&lt;a href=&quot;https://www.uvicorn.org/&quot;&gt;Uvicorn文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b80fa68cea99b15fffbc89201e3c467cd1b053fb" translate="yes" xml:space="preserve">
          <source>For more background on bulk deletion, see the documentation on &lt;a href=&quot;../../../topics/db/queries#topics-db-queries-delete&quot;&gt;object deletion&lt;/a&gt;.</source>
          <target state="translated">有关批量删除的更多背景，请参见有关&lt;a href=&quot;../../../topics/db/queries#topics-db-queries-delete&quot;&gt;对象删除&lt;/a&gt;的文档。</target>
        </trans-unit>
        <trans-unit id="f69284f465eb1fba3979d3ff0d3c525b4a3ea0e3" translate="yes" xml:space="preserve">
          <source>For more complex filters, you can use &lt;code&gt;ModelForm.__init__()&lt;/code&gt; method to filter based on an &lt;code&gt;instance&lt;/code&gt; of your model (see &lt;a href=&quot;../../forms/fields#fields-which-handle-relationships&quot;&gt;Fields which handle relationships&lt;/a&gt;). For example:</source>
          <target state="translated">对于更复杂的过滤器，可以使用 &lt;code&gt;ModelForm.__init__()&lt;/code&gt; 方法基于模型的 &lt;code&gt;instance&lt;/code&gt; 进行过滤（请参阅&lt;a href=&quot;../../forms/fields#fields-which-handle-relationships&quot;&gt;处理关系的字段&lt;/a&gt;）。例如：</target>
        </trans-unit>
        <trans-unit id="0a1adcc239169ef12814a275fc30399f1c85dd83" translate="yes" xml:space="preserve">
          <source>For more complex layout needs, see the &lt;a href=&quot;#django.contrib.admin.ModelAdmin.fieldsets&quot;&gt;&lt;code&gt;fieldsets&lt;/code&gt;&lt;/a&gt; option.</source>
          <target state="translated">有关更复杂的布局需求，请参见&lt;a href=&quot;#django.contrib.admin.ModelAdmin.fieldsets&quot;&gt; &lt;code&gt;fieldsets&lt;/code&gt; &lt;/a&gt;选项。</target>
        </trans-unit>
        <trans-unit id="32b5d1ffea64854e5dc114b7011626d822147b6b" translate="yes" xml:space="preserve">
          <source>For more complex matching requirements, you can define your own path converters.</source>
          <target state="translated">对于更复杂的匹配要求,你可以定义自己的路径转换器。</target>
        </trans-unit>
        <trans-unit id="927662c7cc1246dd8074042eda95f7d27a71dae2" translate="yes" xml:space="preserve">
          <source>For more complex uses, you can specify &lt;code&gt;queryset=None&lt;/code&gt; when declaring the form field and then populate the &lt;code&gt;queryset&lt;/code&gt; in the form&amp;rsquo;s &lt;code&gt;__init__()&lt;/code&gt; method:</source>
          <target state="translated">对于更复杂的用途，可以在声明表单字段时指定 &lt;code&gt;queryset=None&lt;/code&gt; ，然后在表单的 &lt;code&gt;__init__()&lt;/code&gt; 方法中填充 &lt;code&gt;queryset&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="9c7a561c755b8b99014a324afed6b156256f214f" translate="yes" xml:space="preserve">
          <source>For more detail on email services during tests, see &lt;a href=&quot;#email-services&quot;&gt;Email services&lt;/a&gt; below.</source>
          <target state="translated">有关测试过程中电子邮件服务的更多详细信息，请参阅下面的&lt;a href=&quot;#email-services&quot;&gt;电子邮件服务&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="58d93ccb14220145a2c6fca50940bafc44dcc747" translate="yes" xml:space="preserve">
          <source>For more details about &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt;, see the Python documentation.</source>
          <target state="translated">有关&lt;a href=&quot;https://docs.python.org/3/library/unittest.html#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; 的&lt;/a&gt;更多详细信息，请参见Python文档。</target>
        </trans-unit>
        <trans-unit id="279c403bd9877b581693f60194f2a97a5ba59890" translate="yes" xml:space="preserve">
          <source>For more details about lazy translation objects, refer to the &lt;a href=&quot;../topics/i18n/index&quot;&gt;internationalization&lt;/a&gt; documentation.</source>
          <target state="translated">有关延迟翻译对象的更多详细信息，请参阅&lt;a href=&quot;../topics/i18n/index&quot;&gt;国际化&lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="c91404f6c889c489cf3d003955f19ee00a527e9b" translate="yes" xml:space="preserve">
          <source>For more details check out the documentation for the &lt;a href=&quot;../../ref/models/options#django.db.models.Options.db_table&quot;&gt;&lt;code&gt;db_table&lt;/code&gt;&lt;/a&gt; option, which also lets you manually set the database table name.</source>
          <target state="translated">有关更多详细信息，请查看&lt;a href=&quot;../../ref/models/options#django.db.models.Options.db_table&quot;&gt; &lt;code&gt;db_table&lt;/code&gt; &lt;/a&gt;选项的文档，该选项还允许您手动设置数据库表名称。</target>
        </trans-unit>
        <trans-unit id="d4d38d949517b0545a046291c4a15a26813a9aef" translate="yes" xml:space="preserve">
          <source>For more details on model managers see &lt;a href=&quot;../../topics/db/managers&quot;&gt;Managers&lt;/a&gt; and &lt;a href=&quot;../../topics/db/queries#retrieving-objects&quot;&gt;Retrieving objects&lt;/a&gt;.</source>
          <target state="translated">有关模型管理器的更多详细信息，请参见&lt;a href=&quot;../../topics/db/managers&quot;&gt;管理器&lt;/a&gt;和&lt;a href=&quot;../../topics/db/queries#retrieving-objects&quot;&gt;检索对象&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4bc77db85f86d3d6fec4931aa2ff1b8ffdf631d6" translate="yes" xml:space="preserve">
          <source>For more details see the full &lt;a href=&quot;../ref/settings#std:setting-ALLOWED_HOSTS&quot;&gt;&lt;code&gt;ALLOWED_HOSTS&lt;/code&gt;&lt;/a&gt; documentation.</source>
          <target state="translated">有关更多详细信息，请参见完整的&lt;a href=&quot;../ref/settings#std:setting-ALLOWED_HOSTS&quot;&gt; &lt;code&gt;ALLOWED_HOSTS&lt;/code&gt; &lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="06b27c392cc30c92586b791b3ec5b50aecc9db68" translate="yes" xml:space="preserve">
          <source>For more details, including how to delete objects in bulk, see &lt;a href=&quot;../../topics/db/queries#topics-db-queries-delete&quot;&gt;Deleting objects&lt;/a&gt;.</source>
          <target state="translated">有关更多详细信息，包括如何批量&lt;a href=&quot;../../topics/db/queries#topics-db-queries-delete&quot;&gt;删除对象&lt;/a&gt;，请参阅删除对象。</target>
        </trans-unit>
        <trans-unit id="58944a24a7ff7566b422852003d421341ec97e61" translate="yes" xml:space="preserve">
          <source>For more details, see &lt;a href=&quot;https://docs.python.org/3/using/windows.html&quot;&gt;Using Python on Windows&lt;/a&gt; documentation.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;https://docs.python.org/3/using/windows.html&quot;&gt;在Windows&lt;/a&gt;文档上使用Python。</target>
        </trans-unit>
        <trans-unit id="37b106025ca0fc4e4f97a3dfdac7754b69b6a287" translate="yes" xml:space="preserve">
          <source>For more details, see the documentation on &lt;a href=&quot;../../../topics/http/urls#topics-http-reversing-url-namespaces&quot;&gt;reversing namespaced URLs&lt;/a&gt;.</source>
          <target state="translated">有关更多详细信息，请参阅有关&lt;a href=&quot;../../../topics/http/urls#topics-http-reversing-url-namespaces&quot;&gt;反转命名空间URL&lt;/a&gt;的文档。</target>
        </trans-unit>
        <trans-unit id="1ea938600e698e46c90b0b325211f0c2d855ff0d" translate="yes" xml:space="preserve">
          <source>For more details, see the documentation on &lt;a href=&quot;expressions#django.db.models.F&quot;&gt;&lt;code&gt;F expressions&lt;/code&gt;&lt;/a&gt; and their &lt;a href=&quot;../../topics/db/queries#topics-db-queries-update&quot;&gt;use in update queries&lt;/a&gt;.</source>
          <target state="translated">有关更多详细信息，请参见有关&lt;a href=&quot;expressions#django.db.models.F&quot;&gt; &lt;code&gt;F expressions&lt;/code&gt; &lt;/a&gt;及其&lt;a href=&quot;../../topics/db/queries#topics-db-queries-update&quot;&gt;在更新查询中&lt;/a&gt;的用法的文档。</target>
        </trans-unit>
        <trans-unit id="9a621660b9ffadb4df494ab924cbcdfcef1860d1" translate="yes" xml:space="preserve">
          <source>For more direct control over message tags, you can optionally provide a string containing extra tags to any of the add methods:</source>
          <target state="translated">为了更直接地控制消息标签,你可以选择向任何一个添加方法提供一个包含额外标签的字符串。</target>
        </trans-unit>
        <trans-unit id="141974db682fbfc34db800660186aada5cbcbc3d" translate="yes" xml:space="preserve">
          <source>For more examples of complex rendering, see the source code of &lt;a href=&quot;../ref/templates/builtins#std:templatetag-for&quot;&gt;&lt;code&gt;{% for %}&lt;/code&gt;&lt;/a&gt; in &lt;code&gt;django/template/defaulttags.py&lt;/code&gt; and &lt;a href=&quot;../ref/templates/builtins#std:templatetag-if&quot;&gt;&lt;code&gt;{% if %}&lt;/code&gt;&lt;/a&gt; in &lt;code&gt;django/template/smartif.py&lt;/code&gt;.</source>
          <target state="translated">对于复杂的渲染的更多示例，见的源代码&lt;a href=&quot;../ref/templates/builtins#std:templatetag-for&quot;&gt; &lt;code&gt;{% for %}&lt;/code&gt; &lt;/a&gt;在 &lt;code&gt;django/template/defaulttags.py&lt;/code&gt; 和&lt;a href=&quot;../ref/templates/builtins#std:templatetag-if&quot;&gt; &lt;code&gt;{% if %}&lt;/code&gt; &lt;/a&gt;在 &lt;code&gt;django/template/smartif.py&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3c4063c11b1c88b2cb8977a2db5a6f85a2224915" translate="yes" xml:space="preserve">
          <source>For more granular control over the generated markup, you can loop over the radio buttons in the template. Assuming a form &lt;code&gt;myform&lt;/code&gt; with a field &lt;code&gt;beatles&lt;/code&gt; that uses a &lt;code&gt;RadioSelect&lt;/code&gt; as its widget:</source>
          <target state="translated">要更精细地控制生成的标记，可以在模板中的单选按钮上循环。假设一个表单 &lt;code&gt;myform&lt;/code&gt; 带有一个使用 &lt;code&gt;RadioSelect&lt;/code&gt; 作为其小部件的 &lt;code&gt;beatles&lt;/code&gt; 乐队：</target>
        </trans-unit>
        <trans-unit id="9b494e2fa30daa12b2bd73081b7a08f5f69a79a3" translate="yes" xml:space="preserve">
          <source>For more information about the differences between the &lt;a href=&quot;#django.db.models.FloatField&quot;&gt;&lt;code&gt;FloatField&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.db.models.DecimalField&quot;&gt;&lt;code&gt;DecimalField&lt;/code&gt;&lt;/a&gt; classes, please see &lt;a href=&quot;#floatfield-vs-decimalfield&quot;&gt;FloatField vs. DecimalField&lt;/a&gt;. You should also be aware of &lt;a href=&quot;../databases#sqlite-decimal-handling&quot;&gt;SQLite limitations&lt;/a&gt; of decimal fields.</source>
          <target state="translated">有关&lt;a href=&quot;#django.db.models.FloatField&quot;&gt; &lt;code&gt;FloatField&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#django.db.models.DecimalField&quot;&gt; &lt;code&gt;DecimalField&lt;/code&gt; &lt;/a&gt;类之间的区别的更多信息，请参见&lt;a href=&quot;#floatfield-vs-decimalfield&quot;&gt;FloatField与DecimalField&lt;/a&gt;。您还应该知道&lt;a href=&quot;../databases#sqlite-decimal-handling&quot;&gt;SQLite&lt;/a&gt;对十进制字段的限制。</target>
        </trans-unit>
        <trans-unit id="2a1e4b92c4b1299cae94418ff1f466ba63e1902f" translate="yes" xml:space="preserve">
          <source>For more information creating &lt;a href=&quot;geos#django.contrib.gis.geos.GEOSGeometry&quot;&gt;&lt;code&gt;GEOSGeometry&lt;/code&gt;&lt;/a&gt; objects, refer to the &lt;a href=&quot;geos#geos-tutorial&quot;&gt;GEOS tutorial&lt;/a&gt;.</source>
          <target state="translated">有关创建&lt;a href=&quot;geos#django.contrib.gis.geos.GEOSGeometry&quot;&gt; &lt;code&gt;GEOSGeometry&lt;/code&gt; &lt;/a&gt;对象的更多信息，请参考&lt;a href=&quot;geos#geos-tutorial&quot;&gt;GEOS教程&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0bee8a00911e8ae017f5711d9b8ada409c9899e9" translate="yes" xml:space="preserve">
          <source>For more information on how the &lt;code&gt;takes_context&lt;/code&gt; option works, see the section on &lt;a href=&quot;#howto-custom-template-tags-inclusion-tags&quot;&gt;inclusion tags&lt;/a&gt;.</source>
          <target state="translated">有关 &lt;code&gt;takes_context&lt;/code&gt; 选项如何工作的更多信息，请参见关于&lt;a href=&quot;#howto-custom-template-tags-inclusion-tags&quot;&gt;包含标记&lt;/a&gt;的部分。</target>
        </trans-unit>
        <trans-unit id="4792337d74fb41aff8fd3fe24b774ed7a7075b39" translate="yes" xml:space="preserve">
          <source>For more information on how the minimum recorded level functions, see &lt;a href=&quot;#message-levels&quot;&gt;Message levels&lt;/a&gt; above.</source>
          <target state="translated">有关最低记录级别如何工作的更多信息，请参见上面的&lt;a href=&quot;#message-levels&quot;&gt;消息级别&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="64b1e8bbb3b4a7db0536ac5a57afad76d21f96bc" translate="yes" xml:space="preserve">
          <source>For more information on how to use the built in generic views, consult the next topic on &lt;a href=&quot;generic-display&quot;&gt;generic class-based views&lt;/a&gt;.</source>
          <target state="translated">有关如何使用内置的通用视图的更多信息，请参考关于基于&lt;a href=&quot;generic-display&quot;&gt;通用类的视图&lt;/a&gt;的下一个主题。</target>
        </trans-unit>
        <trans-unit id="ad2faa17c504056bb79721f41478b5cf93ee8f17" translate="yes" xml:space="preserve">
          <source>For more information on model relations, see &lt;a href=&quot;../ref/models/relations&quot;&gt;Accessing related objects&lt;/a&gt;. For more on how to use double underscores to perform field lookups via the API, see &lt;a href=&quot;../topics/db/queries#field-lookups-intro&quot;&gt;Field lookups&lt;/a&gt;. For full details on the database API, see our &lt;a href=&quot;../topics/db/queries&quot;&gt;Database API reference&lt;/a&gt;.</source>
          <target state="translated">有关模型关系的更多信息，请参见&lt;a href=&quot;../ref/models/relations&quot;&gt;访问相关对象&lt;/a&gt;。有关如何使用双下划线通过API执行字段查找的更多信息，请参见&lt;a href=&quot;../topics/db/queries#field-lookups-intro&quot;&gt;字段查找&lt;/a&gt;。有关数据库API的完整详细信息，请参见我们的&lt;a href=&quot;../topics/db/queries&quot;&gt;数据库API参考&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="47742209ee4799ec64202e500131a5f0d472ae00" translate="yes" xml:space="preserve">
          <source>For more information on packaging, see Python&amp;rsquo;s &lt;a href=&quot;https://packaging.python.org/tutorials/packaging-projects/&quot;&gt;Tutorial on Packaging and Distributing Projects&lt;/a&gt;.</source>
          <target state="translated">有关打包的更多信息，请参见Python的&lt;a href=&quot;https://packaging.python.org/tutorials/packaging-projects/&quot;&gt;打包和分发项目教程&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b76778341e9f02ca90fe2cf2d88dfefa40bcc8d4" translate="yes" xml:space="preserve">
          <source>For more information on the &lt;a href=&quot;../ref/templates/builtins#std:templatetag-load&quot;&gt;&lt;code&gt;load&lt;/code&gt;&lt;/a&gt; tag, read its documentation.</source>
          <target state="translated">有关&lt;a href=&quot;../ref/templates/builtins#std:templatetag-load&quot;&gt; &lt;code&gt;load&lt;/code&gt; &lt;/a&gt;标签的更多信息，请阅读其文档。</target>
        </trans-unit>
        <trans-unit id="d49e90b5333ff6e7b10e9aa6b8723a99b2576658" translate="yes" xml:space="preserve">
          <source>For more information on these method properties, see &lt;a href=&quot;../ref/contrib/admin/index#django.contrib.admin.ModelAdmin.list_display&quot;&gt;&lt;code&gt;list_display&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关这些方法属性的更多信息，请参见&lt;a href=&quot;../ref/contrib/admin/index#django.contrib.admin.ModelAdmin.list_display&quot;&gt; &lt;code&gt;list_display&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0ff6a17e4f7b67e13f5fdfcf8eaa8d0bded74b48" translate="yes" xml:space="preserve">
          <source>For more information on writing documentation, including an explanation of what the &lt;code&gt;versionadded&lt;/code&gt; bit is all about, see &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/contributing/writing-documentation/&quot;&gt;Writing documentation&lt;/a&gt;. That page also includes an explanation of how to build a copy of the documentation locally, so you can preview the HTML that will be generated.</source>
          <target state="translated">有关编写文档的更多信息，包括对 &lt;code&gt;versionadded&lt;/code&gt; 位的含义的解释，请参阅《&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/contributing/writing-documentation/&quot;&gt;编写文档》&lt;/a&gt;。该页面还包含有关如何在本地构建文档副本的说明，因此您可以预览将生成的HTML。</target>
        </trans-unit>
        <trans-unit id="c08415d0d9256a449f5322a806321695e2a65e97" translate="yes" xml:space="preserve">
          <source>For more information on writing documentation, including an explanation of what the &lt;code&gt;versionadded&lt;/code&gt; bit is all about, see &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/internals/contributing/writing-documentation/&quot;&gt;Writing documentation&lt;/a&gt;. That page also includes an explanation of how to build a copy of the documentation locally, so you can preview the HTML that will be generated.</source>
          <target state="translated">有关编写文档的更多信息，包括对 &lt;code&gt;versionadded&lt;/code&gt; 位的含义的解释，请参阅《&lt;a href=&quot;https://docs.djangoproject.com/en/3.1/internals/contributing/writing-documentation/&quot;&gt;编写文档》&lt;/a&gt;。该页面还包含有关如何在本地构建文档副本的说明，因此您可以预览将生成的HTML。</target>
        </trans-unit>
        <trans-unit id="45eeaf25d42cc3ec94406a92208edd5d8c956951" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;../../topics/files&quot;&gt;Managing files&lt;/a&gt;.</source>
          <target state="translated">有关更多信息，请参阅&lt;a href=&quot;../../topics/files&quot;&gt;管理文件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="507910ab48efd1e93e0e343542bffdc9600bdabb" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;../topics/i18n/translation#contextual-markers&quot;&gt;Contextual markers&lt;/a&gt;.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;../topics/i18n/translation#contextual-markers&quot;&gt;上下文标记&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2f7819aec51ef804e62612079347d58584eacfda" translate="yes" xml:space="preserve">
          <source>For more information, the PostGIS documentation contains a helpful section on determining &lt;a href=&quot;https://postgis.net/docs/using_postgis_dbmanagement.html#PostGIS_GeographyVSGeometry&quot;&gt;when to use geography data type over geometry data type&lt;/a&gt;.</source>
          <target state="translated">有关更多信息，PostGIS文档包含一个有用的部分，用于确定&lt;a href=&quot;https://postgis.net/docs/using_postgis_dbmanagement.html#PostGIS_GeographyVSGeometry&quot;&gt;何时使用地理数据类型而不是几何数据类型&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e11836e7ccec0efc67c0aecc25c8cf7c68e9aee0" translate="yes" xml:space="preserve">
          <source>For more on Vary headers, see the &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html#section-7.1.4&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;official Vary spec&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">有关Vary标头的更多信息，请参见&lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html#section-7.1.4&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;官方Vary规范&lt;/strong&gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f98a38a01f75e7ab202c7bd8b9f2425154d8e515" translate="yes" xml:space="preserve">
          <source>For more on middleware, read the &lt;a href=&quot;../../topics/http/middleware&quot;&gt;middleware docs&lt;/a&gt;.</source>
          <target state="translated">有关中间件的更多信息，请阅读&lt;a href=&quot;../../topics/http/middleware&quot;&gt;中间件文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b267b1a01114ee31ea6d8b05c668877f539be841" translate="yes" xml:space="preserve">
          <source>For more on pagination, read the &lt;a href=&quot;../../topics/pagination&quot;&gt;pagination documentation&lt;/a&gt;.</source>
          <target state="translated">有关分页的更多信息，请阅读&lt;a href=&quot;../../topics/pagination&quot;&gt;分页文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2c64c486c65888eb52c7539f1424def530e76016" translate="yes" xml:space="preserve">
          <source>For more on sending email from Django, see &lt;a href=&quot;../email&quot;&gt;Sending email&lt;/a&gt;.</source>
          <target state="translated">有关从Django发送电子邮件的更多信息，请参见&lt;a href=&quot;../email&quot;&gt;发送电子邮件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8c84dff282ea6b93fe47d293a1e314b08fecbd81" translate="yes" xml:space="preserve">
          <source>For more options like annotated HTML listings detailing missed lines, see the &lt;a href=&quot;https://coverage.readthedocs.io/&quot;&gt;coverage.py&lt;/a&gt; docs.</source>
          <target state="translated">有关更多选项的信息，例如带注释的HTML列表，详细说明了漏掉的行，请参阅&lt;a href=&quot;https://coverage.readthedocs.io/&quot;&gt;coverage.py&lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="6192f961c1d3c6a9a50f39fae25b2121f6bd5f5e" translate="yes" xml:space="preserve">
          <source>For more, see the &lt;a href=&quot;../ref/django-admin#django-admin-diffsettings&quot;&gt;&lt;code&gt;diffsettings&lt;/code&gt;&lt;/a&gt; documentation.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;../ref/django-admin#django-admin-diffsettings&quot;&gt; &lt;code&gt;diffsettings&lt;/code&gt; &lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="3a80d5abe99712d4e4d9829a7ea208844f71d27f" translate="yes" xml:space="preserve">
          <source>For more, see the section &amp;ldquo;The database API&amp;rdquo; below.</source>
          <target state="translated">有关更多信息，请参见下面的&amp;ldquo;数据库API&amp;rdquo;部分。</target>
        </trans-unit>
        <trans-unit id="1b54050c09bf8dd84ccee5cc3f84ec8431f97bae" translate="yes" xml:space="preserve">
          <source>For most Web applications, this overhead isn&amp;rsquo;t a big deal. Most Web applications aren&amp;rsquo;t &lt;code&gt;washingtonpost.com&lt;/code&gt; or &lt;code&gt;slashdot.org&lt;/code&gt;; they&amp;rsquo;re small- to medium-sized sites with so-so traffic. But for medium- to high-traffic sites, it&amp;rsquo;s essential to cut as much overhead as possible.</source>
          <target state="translated">对于大多数Web应用程序而言，此开销并不大。大多数Web应用程序不是 &lt;code&gt;washingtonpost.com&lt;/code&gt; 或 &lt;code&gt;slashdot.org&lt;/code&gt; ；它们是流量中等的中小型网站。但是对于中到高流量站点，必须尽可能减少开销。</target>
        </trans-unit>
        <trans-unit id="237201716598097e525fd6c1250b48cbeab9d611" translate="yes" xml:space="preserve">
          <source>For most aggregates, there is no way to avoid this problem, however, the &lt;a href=&quot;../../ref/models/querysets#django.db.models.Count&quot;&gt;&lt;code&gt;Count&lt;/code&gt;&lt;/a&gt; aggregate has a &lt;code&gt;distinct&lt;/code&gt; parameter that may help:</source>
          <target state="translated">对于大多数聚合，无法避免此问题，但是，&lt;a href=&quot;../../ref/models/querysets#django.db.models.Count&quot;&gt; &lt;code&gt;Count&lt;/code&gt; &lt;/a&gt;聚合具有一个 &lt;code&gt;distinct&lt;/code&gt; 参数，可能会有所帮助：</target>
        </trans-unit>
        <trans-unit id="2003ca8d7dc771b03d7546f025676603513b8695" translate="yes" xml:space="preserve">
          <source>For most backends, raw queries (&lt;code&gt;Manager.raw()&lt;/code&gt; or &lt;code&gt;cursor.execute()&lt;/code&gt;) can use the &amp;ldquo;pyformat&amp;rdquo; parameter style, where placeholders in the query are given as &lt;code&gt;'%(name)s'&lt;/code&gt; and the parameters are passed as a dictionary rather than a list. SQLite does not support this.</source>
          <target state="translated">对于大多数后端，原始查询（ &lt;code&gt;Manager.raw()&lt;/code&gt; 或 &lt;code&gt;cursor.execute()&lt;/code&gt; ）可以使用&amp;ldquo; pyformat&amp;rdquo;参数样式，其中查询中的占位符以 &lt;code&gt;'%(name)s'&lt;/code&gt; 形式给出，并且参数以字典而不是列表。SQLite不支持此功能。</target>
        </trans-unit>
        <trans-unit id="a9b961caae7339af9470bdb6ccaef50eae9ac7d1" translate="yes" xml:space="preserve">
          <source>For most extensions, this requires a database user with superuser privileges. If the Django database user doesn&amp;rsquo;t have the appropriate privileges, you&amp;rsquo;ll have to create the extension outside of Django migrations with a user that has them. In that case, connect to your Django database and run the query &lt;code&gt;CREATE EXTENSION IF NOT EXISTS hstore;&lt;/code&gt;.</source>
          <target state="translated">对于大多数扩展，这需要具有超级用户特权的数据库用户。如果Django数据库用户没有适当的权限，则必须在拥有Django迁移权限的用户之外的Django迁移范围内创建扩展。在这种情况下，连接到Django数据库并运行查询 &lt;code&gt;CREATE EXTENSION IF NOT EXISTS hstore;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0c24ff4760969777f23c45dfeee5f192e54f490c" translate="yes" xml:space="preserve">
          <source>For most of these add-ons &amp;ndash; specifically, the add-ons that include either models or template tags &amp;ndash; you&amp;rsquo;ll need to add the package name (e.g., &lt;code&gt;'django.contrib.redirects'&lt;/code&gt;) to your &lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; setting and re-run &lt;code&gt;manage.py migrate&lt;/code&gt;.</source>
          <target state="translated">对于这些附加组件中的大多数（特别是包含模型或模板标签的附加组件），您需要将包名称（例如 &lt;code&gt;'django.contrib.redirects'&lt;/code&gt; ）添加到&lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;设置中并重新运行 &lt;code&gt;manage.py migrate&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5773200065e50b8ffe12fb94d74fc2c7ae73b54b" translate="yes" xml:space="preserve">
          <source>For much better performance on WGS84 distance queries, consider using &lt;a href=&quot;model-api#geography-type&quot;&gt;geography columns&lt;/a&gt; in your database instead because they are able to use their spatial index in distance queries. You can tell GeoDjango to use a geography column by setting &lt;code&gt;geography=True&lt;/code&gt; in your field definition.</source>
          <target state="translated">为了在WGS84距离查询上获得更好的性能，请考虑改用数据库中的&lt;a href=&quot;model-api#geography-type&quot;&gt;地理列&lt;/a&gt;，因为它们可以在距离查询中使用其空间索引。您可以通过在字段定义中设置 &lt;code&gt;geography=True&lt;/code&gt; 来告诉GeoDjango使用地理列。</target>
        </trans-unit>
        <trans-unit id="b6b394a2c0488d27e61669101145e755c23a05b0" translate="yes" xml:space="preserve">
          <source>For nearly all cases, Django&amp;rsquo;s built-in template language is perfectly adequate. However, if the bottlenecks in your Django project seem to lie in the template system and you have exhausted other opportunities to remedy this, a third-party alternative may be the answer.</source>
          <target state="translated">在几乎所有情况下，Django的内置模板语言都已足够。但是，如果Django项目中的瓶颈似乎在模板系统中，而您又用尽了其他机会来解决此问题，那么第三方替代方法可能是答案。</target>
        </trans-unit>
        <trans-unit id="9e4c6979b5930dafd8445167fefb3b15671217be" translate="yes" xml:space="preserve">
          <source>For nested loops, this is the loop surrounding the current one</source>
          <target state="translated">对于嵌套循环,这是围绕当前循环的循环。</target>
        </trans-unit>
        <trans-unit id="e7fb3dd6ecf24e63b43dbe6b3f6682455af38f1f" translate="yes" xml:space="preserve">
          <source>For non-AJAX requests, the fallback will always be performed.</source>
          <target state="translated">对于非AJAX请求,将始终执行回退。</target>
        </trans-unit>
        <trans-unit id="7e79ed355486bc2713b8435fdfa927d098abc733" translate="yes" xml:space="preserve">
          <source>For numbers 1-9, returns the number spelled out. Otherwise, returns the number. This follows Associated Press style.</source>
          <target state="translated">对于数字1-9,返回拼出的数字。否则,返回数字。这遵循了美联社的风格。</target>
        </trans-unit>
        <trans-unit id="e7dad50022091ec1e5f0adb635e178d5aa50e5ee" translate="yes" xml:space="preserve">
          <source>For our &lt;code&gt;Hand&lt;/code&gt; example, we could convert the card data to a string of 104 characters by concatenating all the cards together in a pre-determined order &amp;ndash; say, all the &lt;em&gt;north&lt;/em&gt; cards first, then the &lt;em&gt;east&lt;/em&gt;, &lt;em&gt;south&lt;/em&gt; and &lt;em&gt;west&lt;/em&gt; cards. So &lt;code&gt;Hand&lt;/code&gt; objects can be saved to text or character columns in the database.</source>
          <target state="translated">对于我们的 &lt;code&gt;Hand&lt;/code&gt; 例如，我们可以通过连接所有卡合在预先确定的顺序卡数据转换为104个字符的字符串-也就是说，所有的&lt;em&gt;北&lt;/em&gt;卡第一，然后是&lt;em&gt;东部&lt;/em&gt;，&lt;em&gt;南部&lt;/em&gt;和&lt;em&gt;西部&lt;/em&gt;的卡。因此， &lt;code&gt;Hand&lt;/code&gt; 对象可以保存到数据库中的text或character列。</target>
        </trans-unit>
        <trans-unit id="c129b37c8b665fe90f9785807f4f5c5f296c1d9b" translate="yes" xml:space="preserve">
          <source>For performance reasons, &lt;a href=&quot;#django.test.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; loads fixtures once for the entire test class, before &lt;a href=&quot;#django.test.TestCase.setUpTestData&quot;&gt;&lt;code&gt;setUpTestData()&lt;/code&gt;&lt;/a&gt;, instead of before each test, and it uses transactions to clean the database before each test. In any case, you can be certain that the outcome of a test will not be affected by another test or by the order of test execution.</source>
          <target state="translated">出于性能原因，&lt;a href=&quot;#django.test.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt;会在整个测试类的&lt;a href=&quot;#django.test.TestCase.setUpTestData&quot;&gt; &lt;code&gt;setUpTestData()&lt;/code&gt; &lt;/a&gt;之前而不是在每个测试之前加载一次夹具，并在每次测试之前使用事务来清理数据库。无论如何，您可以确定一个测试的结果不会受到另一个测试或测试执行顺序的影响。</target>
        </trans-unit>
        <trans-unit id="2a4912a8f2e478cd373c6834ff23b62b982b832c" translate="yes" xml:space="preserve">
          <source>For performance reasons, &lt;code&gt;from_db_value&lt;/code&gt; is not implemented as a no-op on fields which do not require it (all Django fields). Consequently you may not call &lt;code&gt;super&lt;/code&gt; in your definition.</source>
          <target state="translated">出于性能原因， &lt;code&gt;from_db_value&lt;/code&gt; 不会在不需要字段（所有Django字段）上实现为无操作。因此，您可能无法在定义中称呼 &lt;code&gt;super&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="424ca8cab98f356a00ae4490061803f50b6ec450" translate="yes" xml:space="preserve">
          <source>For performance reasons, SQL logging is only enabled when &lt;code&gt;settings.DEBUG&lt;/code&gt; is set to &lt;code&gt;True&lt;/code&gt;, regardless of the logging level or handlers that are installed.</source>
          <target state="translated">出于性能原因，仅在 &lt;code&gt;settings.DEBUG&lt;/code&gt; 设置为 &lt;code&gt;True&lt;/code&gt; 时才启用SQL日志记录，而不考虑日志记录级别或已安装的处理程序。</target>
        </trans-unit>
        <trans-unit id="42bb783ba8a3b6a8a71df6de2ff3296859069b89" translate="yes" xml:space="preserve">
          <source>For performance reasons, it&amp;rsquo;s preferable to do these redirects outside of Django, in a front-end load balancer or reverse-proxy server such as &lt;a href=&quot;https://nginx.org&quot;&gt;nginx&lt;/a&gt;. &lt;a href=&quot;settings#std:setting-SECURE_SSL_REDIRECT&quot;&gt;&lt;code&gt;SECURE_SSL_REDIRECT&lt;/code&gt;&lt;/a&gt; is intended for the deployment situations where this isn&amp;rsquo;t an option.</source>
          <target state="translated">出于性能原因，最好在Django之外，前端负载平衡器或反向代理服务器（如&lt;a href=&quot;https://nginx.org&quot;&gt;nginx）中&lt;/a&gt;进行这些重定向。&lt;a href=&quot;settings#std:setting-SECURE_SSL_REDIRECT&quot;&gt; &lt;code&gt;SECURE_SSL_REDIRECT&lt;/code&gt; &lt;/a&gt;适用于不可选择的部署情况。</target>
        </trans-unit>
        <trans-unit id="d9e63810971473602af5d7b1f5a81aa41157752d" translate="yes" xml:space="preserve">
          <source>For performance reasons, the &lt;a href=&quot;models/fields#django.db.models.Field&quot;&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/a&gt; instances in &lt;code&gt;ModelState.fields&lt;/code&gt; are reused across migrations. You must never change the attributes on these instances. If you need to mutate a field in &lt;code&gt;state_forwards()&lt;/code&gt;, you must remove the old instance from &lt;code&gt;ModelState.fields&lt;/code&gt; and add a new instance in its place. The same is true for the &lt;a href=&quot;../topics/db/managers#django.db.models.Manager&quot;&gt;&lt;code&gt;Manager&lt;/code&gt;&lt;/a&gt; instances in &lt;code&gt;ModelState.managers&lt;/code&gt;.</source>
          <target state="translated">出于性能方面的考虑， &lt;code&gt;ModelState.fields&lt;/code&gt; 中的&lt;a href=&quot;models/fields#django.db.models.Field&quot;&gt; &lt;code&gt;Field&lt;/code&gt; &lt;/a&gt;实例可在迁移之间重用。您绝不能在这些实例上更改属性。如果需要更改 &lt;code&gt;state_forwards()&lt;/code&gt; 中的字段，则必须从 &lt;code&gt;ModelState.fields&lt;/code&gt; 中删除旧实例，并在其位置添加一个新实例。对于 &lt;code&gt;ModelState.managers&lt;/code&gt; 中的&lt;a href=&quot;../topics/db/managers#django.db.models.Manager&quot;&gt; &lt;code&gt;Manager&lt;/code&gt; &lt;/a&gt;实例也是如此。</target>
        </trans-unit>
        <trans-unit id="1a14665e6a70026da7b331f9bb19684d58424a07" translate="yes" xml:space="preserve">
          <source>For performance reasons, you shouldn&amp;rsquo;t perform queries in receivers of &lt;code&gt;pre_init&lt;/code&gt; or &lt;code&gt;post_init&lt;/code&gt; signals because they would be executed for each instance returned during queryset iteration.</source>
          <target state="translated">出于性能原因，您不应该在 &lt;code&gt;pre_init&lt;/code&gt; 或 &lt;code&gt;post_init&lt;/code&gt; 信号的接收器中执行查询，因为它们将针对queryset迭代期间返回的每个实例执行。</target>
        </trans-unit>
        <trans-unit id="38a5583dc5a79edcb838768762f15c7d4aaba0f4" translate="yes" xml:space="preserve">
          <source>For persistent, cached data, set &lt;a href=&quot;../../ref/settings#std:setting-SESSION_ENGINE&quot;&gt;&lt;code&gt;SESSION_ENGINE&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;&quot;django.contrib.sessions.backends.cached_db&quot;&lt;/code&gt;. This uses a write-through cache &amp;ndash; every write to the cache will also be written to the database. Session reads only use the database if the data is not already in the cache.</source>
          <target state="translated">对于持久性缓存数据，请将&lt;a href=&quot;../../ref/settings#std:setting-SESSION_ENGINE&quot;&gt; &lt;code&gt;SESSION_ENGINE&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;&quot;django.contrib.sessions.backends.cached_db&quot;&lt;/code&gt; 。这使用直写式高速缓存&amp;ndash;对高速缓存的每次写入也将被写入数据库。如果数据不在缓存中，则会话仅使用数据库进行读取。</target>
        </trans-unit>
        <trans-unit id="c7b8cf00020c5d1fb45cd748de93524d6d79b7bb" translate="yes" xml:space="preserve">
          <source>For raster data there is no difference between a raster instance and its data source. Unlike for the Geometry objects, &lt;a href=&quot;#django.contrib.gis.gdal.GDALRaster&quot;&gt;&lt;code&gt;GDALRaster&lt;/code&gt;&lt;/a&gt; objects are always a data source. Temporary rasters can be instantiated in memory using the corresponding driver, but they will be of the same class as file-based raster sources.</source>
          <target state="translated">对于栅格数据，栅格实例与其数据源之间没有区别。与几何对象不同，&lt;a href=&quot;#django.contrib.gis.gdal.GDALRaster&quot;&gt; &lt;code&gt;GDALRaster&lt;/code&gt; &lt;/a&gt;对象始终是数据源。可以使用相应的驱动程序在内存中实例化临时栅格，但它们与基于文件的栅格源属于同一类。</target>
        </trans-unit>
        <trans-unit id="d75c22989ab8a302b73b82bc433278f518a6e000" translate="yes" xml:space="preserve">
          <source>For sample code, see the &lt;a href=&quot;examples/many_to_one&quot;&gt;Many-to-one relationship model example&lt;/a&gt;.</source>
          <target state="translated">有关示例代码，请参见&amp;ldquo; &lt;a href=&quot;examples/many_to_one&quot;&gt;多对一关系模型&amp;rdquo;示例&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="eb1ef97607904bce2dc6f3c32cc662efa95452e0" translate="yes" xml:space="preserve">
          <source>For security reasons, CSRF tokens are rotated each time a user logs in. Any page with a form generated before a login will have an old, invalid CSRF token and need to be reloaded. This might happen if a user uses the back button after a login or if they log in a different browser tab.</source>
          <target state="translated">出于安全考虑,每次用户登录时,CSRF令牌都会轮换。任何在登录前生成表单的页面都会有一个旧的、无效的CSRF令牌,需要重新加载。如果用户在登录后使用后退按钮或在不同的浏览器标签页中登录,可能会发生这种情况。</target>
        </trans-unit>
        <trans-unit id="ae97a0fe5932f690f89f83cec189c6b17b10fb0f" translate="yes" xml:space="preserve">
          <source>For security reasons, the value of the secret is changed each time a user logs in.</source>
          <target state="translated">出于安全考虑,每次用户登录时都会改变秘密的值。</target>
        </trans-unit>
        <trans-unit id="c6ff78cacaaf23691d024d9a0c7b10a2a87d6fbc" translate="yes" xml:space="preserve">
          <source>For security reasons, these permissions aren&amp;rsquo;t applied to the temporary files that are stored in &lt;a href=&quot;#std:setting-FILE_UPLOAD_TEMP_DIR&quot;&gt;&lt;code&gt;FILE_UPLOAD_TEMP_DIR&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">出于安全原因，这些权限不适用于&lt;a href=&quot;#std:setting-FILE_UPLOAD_TEMP_DIR&quot;&gt; &lt;code&gt;FILE_UPLOAD_TEMP_DIR&lt;/code&gt; &lt;/a&gt;中存储的临时文件。</target>
        </trans-unit>
        <trans-unit id="d0ec9f02dce1101622a275e4df9d73b74bea9b32" translate="yes" xml:space="preserve">
          <source>For setting the &lt;code&gt;Cache-Control&lt;/code&gt; and &lt;code&gt;Vary&lt;/code&gt; header fields, it is recommended to use the &lt;a href=&quot;utils#django.utils.cache.patch_cache_control&quot;&gt;&lt;code&gt;patch_cache_control()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;utils#django.utils.cache.patch_vary_headers&quot;&gt;&lt;code&gt;patch_vary_headers()&lt;/code&gt;&lt;/a&gt; methods from &lt;a href=&quot;utils#module-django.utils.cache&quot;&gt;&lt;code&gt;django.utils.cache&lt;/code&gt;&lt;/a&gt;, since these fields can have multiple, comma-separated values. The &amp;ldquo;patch&amp;rdquo; methods ensure that other values, e.g. added by a middleware, are not removed.</source>
          <target state="translated">用于设置 &lt;code&gt;Cache-Control&lt;/code&gt; 和 &lt;code&gt;Vary&lt;/code&gt; 的报头字段，则建议使用&lt;a href=&quot;utils#django.utils.cache.patch_cache_control&quot;&gt; &lt;code&gt;patch_cache_control()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;utils#django.utils.cache.patch_vary_headers&quot;&gt; &lt;code&gt;patch_vary_headers()&lt;/code&gt; &lt;/a&gt;从方法&lt;a href=&quot;utils#module-django.utils.cache&quot;&gt; &lt;code&gt;django.utils.cache&lt;/code&gt; &lt;/a&gt;，因为这些字段可以有多个，逗号分隔的值。&amp;ldquo;补丁&amp;rdquo;方法确保不删除其他值，例如由中间件添加的值。</target>
        </trans-unit>
        <trans-unit id="db395fce05fd519b1a5fb650233cfd3a114f39b6" translate="yes" xml:space="preserve">
          <source>For settings that are sequences, Django itself uses lists, but this is only a convention.</source>
          <target state="translated">对于序列的设置,Django本身也使用列表,但这只是一个惯例。</target>
        </trans-unit>
        <trans-unit id="83441c6a3b1b803a2a49949c9de44602cd36d751" translate="yes" xml:space="preserve">
          <source>For simplifying the selection of a generator use &lt;code&gt;feedgenerator.DefaultFeed&lt;/code&gt; which is currently &lt;code&gt;Rss201rev2Feed&lt;/code&gt;</source>
          <target state="translated">为了简化生成器的选择，请使用 &lt;code&gt;feedgenerator.DefaultFeed&lt;/code&gt; ，当前为 &lt;code&gt;Rss201rev2Feed&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c8ceee4f01a0611046492d3c5b9cf5e18c66b04e" translate="yes" xml:space="preserve">
          <source>For sites running on a subpath, the &lt;a href=&quot;#django.contrib.admin.AdminSite.each_context&quot;&gt;&lt;code&gt;each_context()&lt;/code&gt;&lt;/a&gt; method checks if the current request has &lt;code&gt;request.META['SCRIPT_NAME']&lt;/code&gt; set and uses that value if &lt;code&gt;site_url&lt;/code&gt; isn&amp;rsquo;t set to something other than &lt;code&gt;/&lt;/code&gt;.</source>
          <target state="translated">对于在子路径上运行的网站，&lt;a href=&quot;#django.contrib.admin.AdminSite.each_context&quot;&gt; &lt;code&gt;each_context()&lt;/code&gt; &lt;/a&gt;方法检查当前请求是否已设置 &lt;code&gt;request.META['SCRIPT_NAME']&lt;/code&gt; ，如果 &lt;code&gt;site_url&lt;/code&gt; 未设置为 &lt;code&gt;/&lt;/code&gt; 以外的其他值，则使用该值。</target>
        </trans-unit>
        <trans-unit id="d88e7dbe5892b15588501cbdb78f954dbe55235a" translate="yes" xml:space="preserve">
          <source>For sites that should only be accessed over HTTPS, you can instruct modern browsers to refuse to connect to your domain name via an insecure connection (for a given period of time) by setting the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security&quot;&gt;&amp;ldquo;Strict-Transport-Security&amp;rdquo; header&lt;/a&gt;. This reduces your exposure to some SSL-stripping man-in-the-middle (MITM) attacks.</source>
          <target state="translated">对于仅应通过HTTPS访问的网站，您可以通过设置&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security&quot;&gt;&amp;ldquo;严格传输安全&amp;rdquo;标头&lt;/a&gt;指示现代浏览器拒绝通过不安全的连接（在给定的时间段内）连接到您的域名。这样可以减少您遭受SSL剥离中间人（MITM）攻击的风险。</target>
        </trans-unit>
        <trans-unit id="060b3b6339590923baf49d02d89a5fd13364954d" translate="yes" xml:space="preserve">
          <source>For small projects, this isn&amp;rsquo;t a big deal, because you can keep the static files somewhere your web server can find it. However, in bigger projects &amp;ndash; especially those comprised of multiple apps &amp;ndash; dealing with the multiple sets of static files provided by each application starts to get tricky.</source>
          <target state="translated">对于小型项目来说，这没什么大不了的，因为您可以将静态文件保存在Web服务器可以找到的位置。但是，在较大的项目（尤其是由多个应用程序组成的项目）中，处理每个应用程序提供的多组静态文件变得很棘手。</target>
        </trans-unit>
        <trans-unit id="98244e053dd849bb49cb94789a244fc850fca33d" translate="yes" xml:space="preserve">
          <source>For subclasses of &lt;a href=&quot;customizing#django.contrib.auth.models.AbstractBaseUser&quot;&gt;&lt;code&gt;AbstractBaseUser&lt;/code&gt;&lt;/a&gt;, the password field will be marked as &amp;ldquo;dirty&amp;rdquo; when calling &lt;a href=&quot;customizing#django.contrib.auth.models.AbstractBaseUser.set_password&quot;&gt;&lt;code&gt;set_password()&lt;/code&gt;&lt;/a&gt; which triggers a call to &lt;code&gt;password_changed()&lt;/code&gt; after the user is saved.</source>
          <target state="translated">对于&lt;a href=&quot;customizing#django.contrib.auth.models.AbstractBaseUser&quot;&gt; &lt;code&gt;AbstractBaseUser&lt;/code&gt; 的&lt;/a&gt;子类，在调用&lt;a href=&quot;customizing#django.contrib.auth.models.AbstractBaseUser.set_password&quot;&gt; &lt;code&gt;set_password()&lt;/code&gt; &lt;/a&gt;时，密码字段将被标记为&amp;ldquo;脏&amp;rdquo;，这会在保存用户后触发对 &lt;code&gt;password_changed()&lt;/code&gt; 的调用。</target>
        </trans-unit>
        <trans-unit id="7d318e407a6068120e838ea61855cc437bf86be2" translate="yes" xml:space="preserve">
          <source>For template blocks</source>
          <target state="translated">对于模板块</target>
        </trans-unit>
        <trans-unit id="e232fed1b6bcfa5d4b03f84ef89534f5bc33dc67" translate="yes" xml:space="preserve">
          <source>For testing purposes it&amp;rsquo;s often useful to change a setting temporarily and revert to the original value after running the testing code. For this use case Django provides a standard Python context manager (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0343&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 343&lt;/strong&gt;&lt;/a&gt;) called &lt;a href=&quot;#django.test.SimpleTestCase.settings&quot;&gt;&lt;code&gt;settings()&lt;/code&gt;&lt;/a&gt;, which can be used like this:</source>
          <target state="translated">出于测试目的，在运行测试代码后临时更改设置并恢复为原始值通常很有用。对于此用例，Django提供了一个名为&lt;a href=&quot;#django.test.SimpleTestCase.settings&quot;&gt; &lt;code&gt;settings()&lt;/code&gt; &lt;/a&gt;的标准Python上下文管理器（请参阅&lt;a href=&quot;https://www.python.org/dev/peps/pep-0343&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 343 &lt;/strong&gt;&lt;/a&gt;），可以像这样使用：</target>
        </trans-unit>
        <trans-unit id="9a3f172015e88c657224148a415ba18aa223013e" translate="yes" xml:space="preserve">
          <source>For tests involving models with &lt;code&gt;managed=False&lt;/code&gt;, it&amp;rsquo;s up to you to ensure the correct tables are created as part of the test setup.</source>
          <target state="translated">对于涉及 &lt;code&gt;managed=False&lt;/code&gt; 的模型的测试，您需要确保在测试设置中创建了正确的表。</target>
        </trans-unit>
        <trans-unit id="2f9c0332095ab8a71d4aec460d84e568f37e8252" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;pre_add&lt;/code&gt; and &lt;code&gt;post_add&lt;/code&gt; actions, this is a set of primary key values that will be, or have been, added to the relation. This may be a subset of the values submitted to be added, since inserts must filter existing values in order to avoid a database &lt;code&gt;IntegrityError&lt;/code&gt;.</source>
          <target state="translated">对于 &lt;code&gt;pre_add&lt;/code&gt; 和 &lt;code&gt;post_add&lt;/code&gt; 操作，这是将要或已经添加到关系中的一组主键值。这可能是提交要添加的值的子集，因为插入必须过滤现有值，以避免数据库 &lt;code&gt;IntegrityError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1a84d3af82f5a18d83c42438eac1f3056429345b" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;pre_clear&lt;/code&gt; and &lt;code&gt;post_clear&lt;/code&gt; actions, this is &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">对于 &lt;code&gt;pre_clear&lt;/code&gt; 和 &lt;code&gt;post_clear&lt;/code&gt; 操作，这是 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="329abb7b505a558db32777a7ff6f0809b6e12296" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;pre_remove&lt;/code&gt; and &lt;code&gt;post_remove&lt;/code&gt; actions, this is a set of primary key values that was submitted to be removed from the relation. This is not dependent on whether the values actually will be, or have been, removed. In particular, non-existent values may be submitted, and will appear in &lt;code&gt;pk_set&lt;/code&gt;, even though they have no effect on the database.</source>
          <target state="translated">对于 &lt;code&gt;pre_remove&lt;/code&gt; 和 &lt;code&gt;post_remove&lt;/code&gt; 操作，这是一组要从关系中删除的主键值。这不取决于这些值实际上是将被删除还是已被删除。特别是，不存在的值可能会被提交，并将出现在 &lt;code&gt;pk_set&lt;/code&gt; 中，即使它们对数据库没有影响。</target>
        </trans-unit>
        <trans-unit id="74408406b60615d45743eab1ddfc47c602695214" translate="yes" xml:space="preserve">
          <source>For the GeoJSON format, the SRID is set based on the &lt;code&gt;crs&lt;/code&gt; member. If &lt;code&gt;crs&lt;/code&gt; isn&amp;rsquo;t provided, the SRID defaults to 4326.</source>
          <target state="translated">对于GeoJSON格式，基于 &lt;code&gt;crs&lt;/code&gt; 成员设置SRID 。如果未提供 &lt;code&gt;crs&lt;/code&gt; ，则SRID默认为4326。</target>
        </trans-unit>
        <trans-unit id="9f111011b98ce2f688d0ddb4f6a33b857e6e115a" translate="yes" xml:space="preserve">
          <source>For the best performance, we&amp;rsquo;re using the queryset&amp;rsquo;s &lt;a href=&quot;../../../topics/db/queries#topics-db-queries-update&quot;&gt;update method&lt;/a&gt;. Other types of actions might need to deal with each object individually; in these cases we&amp;rsquo;d iterate over the queryset:</source>
          <target state="translated">为了获得最佳性能，我们使用queryset的&lt;a href=&quot;../../../topics/db/queries#topics-db-queries-update&quot;&gt;update方法&lt;/a&gt;。其他类型的动作可能需要分别处理每个对象；在这些情况下，我们将遍历queryset：</target>
        </trans-unit>
        <trans-unit id="4c23379d68f25c8a9acdf7f3ba3f8e6d99a624b7" translate="yes" xml:space="preserve">
          <source>For the case of building up small HTML fragments, this function is to be preferred over string interpolation using &lt;code&gt;%&lt;/code&gt; or &lt;code&gt;str.format()&lt;/code&gt; directly, because it applies escaping to all arguments - just like the template system applies escaping by default.</source>
          <target state="translated">对于构建较小的HTML片段的情况，此功能比直接使用 &lt;code&gt;%&lt;/code&gt; 或 &lt;code&gt;str.format()&lt;/code&gt; 进行字符串插补更可取，因为它对所有参数都应用了转义-就像默认情况下模板系统应用了转义一样。</target>
        </trans-unit>
        <trans-unit id="f78e1588dfac1ec79444a4df142e4e4efb203d49" translate="yes" xml:space="preserve">
          <source>For the contents of &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;description&amp;gt;&lt;/code&gt;, Django tries calling the methods &lt;code&gt;item_title()&lt;/code&gt; and &lt;code&gt;item_description()&lt;/code&gt; on the &lt;a href=&quot;#django.contrib.syndication.views.Feed&quot;&gt;&lt;code&gt;Feed&lt;/code&gt;&lt;/a&gt; class. They are passed a single parameter, &lt;code&gt;item&lt;/code&gt;, which is the object itself. These are optional; by default, the string representation of the object is used for both.</source>
          <target state="translated">对于 &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt; 和 &lt;code&gt;&amp;lt;description&amp;gt;&lt;/code&gt; 的内容，Django尝试在&lt;a href=&quot;#django.contrib.syndication.views.Feed&quot;&gt; &lt;code&gt;Feed&lt;/code&gt; &lt;/a&gt;类上调用方法 &lt;code&gt;item_title()&lt;/code&gt; 和 &lt;code&gt;item_description()&lt;/code&gt; 。它们被传递了一个参数 &lt;code&gt;item&lt;/code&gt; ，即对象本身。这些是可选的；默认情况下，两者均使用对象的字符串表示形式。</target>
        </trans-unit>
        <trans-unit id="3a100b67f88e203f9dcb6a68b5070534af27c2cc" translate="yes" xml:space="preserve">
          <source>For the examples in this document, we&amp;rsquo;ll use the models defined in &lt;a href=&quot;../../../topics/db/queries&quot;&gt;Making queries&lt;/a&gt;.</source>
          <target state="translated">对于本文档中的示例，我们将使用&lt;a href=&quot;../../../topics/db/queries&quot;&gt;&amp;ldquo;进行查询&amp;rdquo;中&lt;/a&gt;定义的模型。</target>
        </trans-unit>
        <trans-unit id="0de8894d683bc582fefb2e2661e012c06af647e2" translate="yes" xml:space="preserve">
          <source>For the minimalists</source>
          <target state="translated">对于极简主义者</target>
        </trans-unit>
        <trans-unit id="cef7fefd5112f5c97b053b255b193024fa56f694" translate="yes" xml:space="preserve">
          <source>For the most part though, this tutorial tries to explain as much as possible, so that it can be of use to the widest audience.</source>
          <target state="translated">不过在大多数情况下,本教程会尽量多的解释,让它能为最广大的读者所用。</target>
        </trans-unit>
        <trans-unit id="4eda37e1e901383da0e9bcd8f2f89429a892e9c5" translate="yes" xml:space="preserve">
          <source>For the related lookup you can supply a primary key value or pass the related object explicitly:</source>
          <target state="translated">对于相关的查询,你可以提供一个主键值,或者显式传递相关对象。</target>
        </trans-unit>
        <trans-unit id="b1c32504b6eeb2becd5604bc65d36c6e055e0d02" translate="yes" xml:space="preserve">
          <source>For the sake of clarity, this example contains only the bare minimum necessary to use the Django test runner. You may want to add command-line options for controlling verbosity, passing in specific test labels to run, etc.</source>
          <target state="translated">为了清楚起见,这个例子只包含了使用Django测试运行器所需的最基本的内容。你可能会想添加命令行选项来控制verbosity,传递特定的测试标签来运行,等等。</target>
        </trans-unit>
        <trans-unit id="5f11d49a6aae49822b402265acef00a873377414" translate="yes" xml:space="preserve">
          <source>For the sake of completeness, though, if you really want the local time in the current time zone, here&amp;rsquo;s how you can obtain it:</source>
          <target state="translated">但是为了完整起见，如果您确实想要当前时区的本地时间，请按照以下方法获取它：</target>
        </trans-unit>
        <trans-unit id="da486ab20d9f226af43411c6fd7ef259674537fc" translate="yes" xml:space="preserve">
          <source>For the treatment of microseconds, see &lt;a href=&quot;#django.forms.DateTimeInput&quot;&gt;&lt;code&gt;DateTimeInput&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关微秒的处理，请参见&lt;a href=&quot;#django.forms.DateTimeInput&quot;&gt; &lt;code&gt;DateTimeInput&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5dbe5bec942d606e0b22e5c8723738bfa4f7ae50" translate="yes" xml:space="preserve">
          <source>For these reasons, time zone support is enabled by default in new projects, and you should keep it unless you have a very good reason not to.</source>
          <target state="translated">由于这些原因,新项目的时区支持是默认启用的,你应该保留它,除非你有很好的理由不这样做。</target>
        </trans-unit>
        <trans-unit id="6bfb383b014941483feb63040fddc8352fc62beb" translate="yes" xml:space="preserve">
          <source>For these situations, Django allows you to specify the model that will be used to govern the many-to-many relationship. You can then put extra fields on the intermediate model. The intermediate model is associated with the &lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt; using the &lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField.through&quot;&gt;&lt;code&gt;through&lt;/code&gt;&lt;/a&gt; argument to point to the model that will act as an intermediary. For our musician example, the code would look something like this:</source>
          <target state="translated">对于这些情况，Django允许您指定将用于管理多对多关系的模型。然后，您可以在中间模型上放置额外的字段。使用&lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField.through&quot;&gt; &lt;code&gt;through&lt;/code&gt; &lt;/a&gt;参数将中间模型与&lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt; &lt;code&gt;ManyToManyField&lt;/code&gt; &lt;/a&gt;关联，以指向将充当中间模型的模型。对于我们的音乐家示例，代码看起来像这样：</target>
        </trans-unit>
        <trans-unit id="1e718289bca18a5cf08106be68227bdbbc0cff38" translate="yes" xml:space="preserve">
          <source>For this example, we&amp;rsquo;ll migrate a collection of SHA1 hashes to use PBKDF2(SHA1(password)) and add the corresponding password hasher for checking if a user entered the correct password on login. We assume we&amp;rsquo;re using the built-in &lt;code&gt;User&lt;/code&gt; model and that our project has an &lt;code&gt;accounts&lt;/code&gt; app. You can modify the pattern to work with any algorithm or with a custom user model.</source>
          <target state="translated">对于此示例，我们将迁移SHA1哈希的集合以使用PBKDF2（SHA1（password））并添加相应的密码哈希，以检查用户在登录时输入的密码是否正确。我们假设我们正在使用内置的 &lt;code&gt;User&lt;/code&gt; 模型，并且我们的项目有一个 &lt;code&gt;accounts&lt;/code&gt; 应用程序。您可以修改模式以与任何算法或自定义用户模型一起使用。</target>
        </trans-unit>
        <trans-unit id="4c82d36cbfcfb825dad80c2b48699e4cff79ce4f" translate="yes" xml:space="preserve">
          <source>For this reason, Django also provides a number of mixins that provide more discrete functionality. Template rendering, for instance, is encapsulated in the &lt;a href=&quot;../../ref/class-based-views/mixins-simple#django.views.generic.base.TemplateResponseMixin&quot;&gt;&lt;code&gt;TemplateResponseMixin&lt;/code&gt;&lt;/a&gt;. The Django reference documentation contains &lt;a href=&quot;../../ref/class-based-views/mixins&quot;&gt;full documentation of all the mixins&lt;/a&gt;.</source>
          <target state="translated">因此，Django还提供了许多混合器，这些混合器提供了更多离散功能。例如，模板呈现封装在&lt;a href=&quot;../../ref/class-based-views/mixins-simple#django.views.generic.base.TemplateResponseMixin&quot;&gt; &lt;code&gt;TemplateResponseMixin&lt;/code&gt; 中&lt;/a&gt;。Django参考文档包含&lt;a href=&quot;../../ref/class-based-views/mixins&quot;&gt;所有mixins的完整文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0f36392b7c3c203f49f6a436c5f3171e9150a05e" translate="yes" xml:space="preserve">
          <source>For this reason, Django provides a helper class that lets you create a &lt;code&gt;Form&lt;/code&gt; class from a Django model.</source>
          <target state="translated">因此，Django提供了一个帮助程序类，可让您从Django模型创建 &lt;code&gt;Form&lt;/code&gt; 类。</target>
        </trans-unit>
        <trans-unit id="5892445e676a151c2605ebc83042a842018720fc" translate="yes" xml:space="preserve">
          <source>For this reason, it&amp;rsquo;s particularly important that all the models you&amp;rsquo;re using be defined in applications listed in &lt;a href=&quot;../../ref/settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt;. Otherwise, backwards relations may not work properly.</source>
          <target state="translated">因此，在&lt;a href=&quot;../../ref/settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;中列出的应用程序中定义您正在使用的所有模型尤为重要。否则，后向关系可能无法正常工作。</target>
        </trans-unit>
        <trans-unit id="03b8a2a8f9a2165b5055263ab7201d440c952bd7" translate="yes" xml:space="preserve">
          <source>For this reason, you should use named-string interpolation (e.g., &lt;code&gt;%(day)s&lt;/code&gt;) instead of positional interpolation (e.g., &lt;code&gt;%s&lt;/code&gt; or &lt;code&gt;%d&lt;/code&gt;) whenever you have more than a single parameter. If you used positional interpolation, translations wouldn&amp;rsquo;t be able to reorder placeholder text.</source>
          <target state="translated">因此，只要您有多个参数，就应该使用命名字符串插值（例如 &lt;code&gt;%(day)s&lt;/code&gt; ）而不是位置插值（例如 &lt;code&gt;%s&lt;/code&gt; 或 &lt;code&gt;%d&lt;/code&gt; ）。如果您使用位置插值，则翻译将无法对占位符文本进行重新排序。</target>
        </trans-unit>
        <trans-unit id="58b0059d8e2444811f86ebb88bfabb7ef1ee4a71" translate="yes" xml:space="preserve">
          <source>For this to work, the &lt;code&gt;ForeignKey&lt;/code&gt; on the referencing model must have &lt;code&gt;null=True&lt;/code&gt;.</source>
          <target state="translated">为此，引用模型上的 &lt;code&gt;ForeignKey&lt;/code&gt; 必须具有 &lt;code&gt;null=True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a8f825ebd874543d22305c1bc6781ad3c861ff54" translate="yes" xml:space="preserve">
          <source>For this tutorial and the ticket we&amp;rsquo;re working on, testing against SQLite is sufficient, however, it&amp;rsquo;s possible (and sometimes necessary) to &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/contributing/writing-code/unit-tests/#running-unit-tests-settings&quot;&gt;run the tests using a different database&lt;/a&gt;.</source>
          <target state="translated">对于本教程和我们正在研究的票证，使用SQLite进行测试就足够了，但是，有可能（有时是必要的）&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/contributing/writing-code/unit-tests/#running-unit-tests-settings&quot;&gt;使用其他数据库运行测试&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="19c61fad811ab178452b311f893f15851eed93a4" translate="yes" xml:space="preserve">
          <source>For this tutorial and the ticket we&amp;rsquo;re working on, testing against SQLite is sufficient, however, it&amp;rsquo;s possible (and sometimes necessary) to &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/internals/contributing/writing-code/unit-tests/#running-unit-tests-settings&quot;&gt;run the tests using a different database&lt;/a&gt;.</source>
          <target state="translated">对于本教程和我们正在研究的票证，使用SQLite进行测试就足够了，但是，有可能（有时是必要的）&lt;a href=&quot;https://docs.djangoproject.com/en/3.1/internals/contributing/writing-code/unit-tests/#running-unit-tests-settings&quot;&gt;使用其他数据库运行测试&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6bc5dc82579cf1e38bf802400f5653a407a69212" translate="yes" xml:space="preserve">
          <source>For this tutorial, we expect that you have at least a basic understanding of how Django works. This means you should be comfortable going through the existing tutorials on &lt;a href=&quot;tutorial01&quot;&gt;writing your first Django app&lt;/a&gt;. In addition, you should have a good understanding of Python itself. But if you don&amp;rsquo;t, &lt;a href=&quot;https://diveinto.org/python3/table-of-contents.html&quot;&gt;Dive Into Python&lt;/a&gt; is a fantastic (and free) online book for beginning Python programmers.</source>
          <target state="translated">对于本教程，我们希望您至少对Django的工作原理有基本的了解。这意味着您应该很轻松地阅读有关&lt;a href=&quot;tutorial01&quot;&gt;编写第一个Django应用程序&lt;/a&gt;的现有教程。另外，您应该对Python本身有很好的了解。但是，如果您不这样做的话，&lt;a href=&quot;https://diveinto.org/python3/table-of-contents.html&quot;&gt;Dive Into Python&lt;/a&gt;对于入门的Python程序员来说是一本极好的（免费的）在线书籍。</target>
        </trans-unit>
        <trans-unit id="e3383d2cd67e4a5fda4c38dfc0426ba59217d3de" translate="yes" xml:space="preserve">
          <source>For this tutorial, we&amp;rsquo;ll work on a &amp;ldquo;fake ticket&amp;rdquo; as a case study. Here are the imaginary details:</source>
          <target state="translated">在本教程中，我们将以&amp;ldquo;假票&amp;rdquo;作为案例研究。以下是虚构的详细信息：</target>
        </trans-unit>
        <trans-unit id="003691caf4ec5210cc2d137f90809630e129ddc7" translate="yes" xml:space="preserve">
          <source>For this tutorial, you&amp;rsquo;ll need Git installed to download the current development version of Django and to generate patch files for the changes you make.</source>
          <target state="translated">对于本教程，您将需要安装Git来下载Django的当前开发版本并为所做的更改生成补丁文件。</target>
        </trans-unit>
        <trans-unit id="3ba7541a55fc9940dde992c1f6782e4722e85bb9" translate="yes" xml:space="preserve">
          <source>For this, Django provides full support for cookie- and session-based messaging, for both anonymous and authenticated users. The messages framework allows you to temporarily store messages in one request and retrieve them for display in a subsequent request (usually the next one). Every message is tagged with a specific &lt;code&gt;level&lt;/code&gt; that determines its priority (e.g., &lt;code&gt;info&lt;/code&gt;, &lt;code&gt;warning&lt;/code&gt;, or &lt;code&gt;error&lt;/code&gt;).</source>
          <target state="translated">为此，Django为匿名用户和经过身份验证的用户提供了对基于cookie和会话的消息传递的全面支持。消息框架使您可以将消息临时存储在一个请求中，并检索它们以在后续请求（通常是下一个请求）中显示。每个消息都标记有确定其优先级的特定 &lt;code&gt;level&lt;/code&gt; （例如 &lt;code&gt;info&lt;/code&gt; ， &lt;code&gt;warning&lt;/code&gt; 或 &lt;code&gt;error&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="0f6759276797b410a8844e478a10070c4aed5dcb" translate="yes" xml:space="preserve">
          <source>For those cases, it&amp;rsquo;s a good idea to write your own &lt;a href=&quot;#django.contrib.admin.ModelAdmin.get_search_results&quot;&gt;&lt;code&gt;ModelAdmin.get_search_results()&lt;/code&gt;&lt;/a&gt; implementation using a full-text indexed search.</source>
          <target state="translated">对于这些情况，最好使用全文索引搜索编写自己的&lt;a href=&quot;#django.contrib.admin.ModelAdmin.get_search_results&quot;&gt; &lt;code&gt;ModelAdmin.get_search_results()&lt;/code&gt; &lt;/a&gt;实现。</target>
        </trans-unit>
        <trans-unit id="e0744e2ccd9373d4212b6ab0b38e803815456b58" translate="yes" xml:space="preserve">
          <source>For those templates that cannot be overridden in this way, you may still override them for your entire project by placing the new version in your &lt;code&gt;templates/admin&lt;/code&gt; directory. This is particularly useful to create custom 404 and 500 pages.</source>
          <target state="translated">对于那些无法以这种方式覆盖的模板，您仍然可以通过将新版本放置在 &lt;code&gt;templates/admin&lt;/code&gt; 目录中来覆盖整个项目的模板。这对于创建自定义404和500页特别有用。</target>
        </trans-unit>
        <trans-unit id="b208ce4d25990e2997ea3d38b9396df0cf665967" translate="yes" xml:space="preserve">
          <source>For use in, for example, Django templates, headers can also be looked up using underscores in place of hyphens:</source>
          <target state="translated">例如,在Django模板中使用,标题也可以用下划线代替连字符来查询。</target>
        </trans-unit>
        <trans-unit id="ab0a4460c2bfb4fb22cd663d783472b3f97d3b37" translate="yes" xml:space="preserve">
          <source>For user projects wishing to patch the backend that they&amp;rsquo;re using, this code should live in an &lt;a href=&quot;../applications#django.apps.AppConfig.ready&quot;&gt;&lt;code&gt;AppConfig.ready()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">对于希望修补正在使用的后端的用户项目，此代码应包含在&lt;a href=&quot;../applications#django.apps.AppConfig.ready&quot;&gt; &lt;code&gt;AppConfig.ready()&lt;/code&gt; &lt;/a&gt;方法中。</target>
        </trans-unit>
        <trans-unit id="07063566677ca47cd9924e995ca5ba3cec95b3ab" translate="yes" xml:space="preserve">
          <source>For users familiar with &lt;code&gt;GDAL&lt;/code&gt;, this function has a similar functionality to the &lt;code&gt;gdalwarp&lt;/code&gt; command-line utility.</source>
          <target state="translated">对于熟悉 &lt;code&gt;GDAL&lt;/code&gt; 的用户，此功能与 &lt;code&gt;gdalwarp&lt;/code&gt; 命令行实用程序具有相似的功能。</target>
        </trans-unit>
        <trans-unit id="06bdcf31ea0ff04912d506e7f82bc13ec5bb5e22" translate="yes" xml:space="preserve">
          <source>For users with JavaScript-enabled browsers, an &amp;ldquo;Add another&amp;rdquo; link is provided to enable any number of additional inlines to be added in addition to those provided as a result of the &lt;code&gt;extra&lt;/code&gt; argument.</source>
          <target state="translated">对于具有启用JavaScript的浏览器的用户，提供了&amp;ldquo;添加其他&amp;rdquo;链接，以允许添加除因 &lt;code&gt;extra&lt;/code&gt; 参数而提供的内联功能外的任意数量的内联功能。</target>
        </trans-unit>
        <trans-unit id="ada8b1c0c7e4762ecd02cc10e6d34c709fb7333c" translate="yes" xml:space="preserve">
          <source>For words that don&amp;rsquo;t pluralize by simple suffix, you can specify both a singular and plural suffix, separated by a comma.</source>
          <target state="translated">对于不使用简单后缀复数的单词，您可以同时指定单数和复数后缀，并以逗号分隔。</target>
        </trans-unit>
        <trans-unit id="9189cf15c77477aa96788ff42bdc189cfdeeae3d" translate="yes" xml:space="preserve">
          <source>For words that require a suffix other than &lt;code&gt;'s'&lt;/code&gt;, you can provide an alternate suffix as a parameter to the filter.</source>
          <target state="translated">对于需要后缀不是 &lt;code&gt;'s'&lt;/code&gt; 的单词，您可以提供替代后缀作为过滤器的参数。</target>
        </trans-unit>
        <trans-unit id="b98fa36f3c1fac6c6c9fb6936769d4049b9c86d9" translate="yes" xml:space="preserve">
          <source>Forbids access to user agents in the &lt;a href=&quot;settings#std:setting-DISALLOWED_USER_AGENTS&quot;&gt;&lt;code&gt;DISALLOWED_USER_AGENTS&lt;/code&gt;&lt;/a&gt; setting, which should be a list of compiled regular expression objects.</source>
          <target state="translated">禁止在&lt;a href=&quot;settings#std:setting-DISALLOWED_USER_AGENTS&quot;&gt; &lt;code&gt;DISALLOWED_USER_AGENTS&lt;/code&gt; &lt;/a&gt;设置中访问用户代理，该设置应该是已编译的正则表达式对象的列表。</target>
        </trans-unit>
        <trans-unit id="e9bb65c5b1c2c41fc169fe3b9894145c1c5118d6" translate="yes" xml:space="preserve">
          <source>Forces a single value to be printed without localization.</source>
          <target state="translated">强制打印一个单一的值,不需要本地化。</target>
        </trans-unit>
        <trans-unit id="3f04aae7964fff0403812c7d9880f99e05da0dca" translate="yes" xml:space="preserve">
          <source>Forces colorization of the command output if it would otherwise be disabled as discussed in &lt;a href=&quot;#syntax-coloring&quot;&gt;Syntax coloring&lt;/a&gt;. For example, you may want to pipe colored output to another command.</source>
          <target state="translated">如果按照&lt;a href=&quot;#syntax-coloring&quot;&gt;语法着色中的&lt;/a&gt;说明将其禁用，则强制对命令输出进行着色。例如，您可能希望将彩色输出通过管道传递到另一个命令。</target>
        </trans-unit>
        <trans-unit id="822e3ae3ae56ada85c883e445685735f0bbbcec4" translate="yes" xml:space="preserve">
          <source>Forces conversion of a single value to UTC.</source>
          <target state="translated">强制将一个值转换为UTC。</target>
        </trans-unit>
        <trans-unit id="5caa08849dd0053ad328db7f9b3ff99f454470ea" translate="yes" xml:space="preserve">
          <source>Forces conversion of a single value to an arbitrary timezone.</source>
          <target state="translated">强制将单个值转换为任意时区。</target>
        </trans-unit>
        <trans-unit id="e426af8da5cef513c96ebd4f7c9bfa88a37b7b60" translate="yes" xml:space="preserve">
          <source>Forces conversion of a single value to the current time zone.</source>
          <target state="translated">强制将单个值转换为当前时区。</target>
        </trans-unit>
        <trans-unit id="a07ffdebe3aa947ee8237843fa13c48509367e20" translate="yes" xml:space="preserve">
          <source>Forces localization of a single value.</source>
          <target state="translated">强制定位一个值。</target>
        </trans-unit>
        <trans-unit id="9e0dd243e1a006f16098fbe2024ebd28fadc865e" translate="yes" xml:space="preserve">
          <source>Forces the result type of &lt;code&gt;expression&lt;/code&gt; to be the one from &lt;code&gt;output_field&lt;/code&gt;.</source>
          <target state="translated">力的结果类型 &lt;code&gt;expression&lt;/code&gt; 为从所述一个 &lt;code&gt;output_field&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f2b3c637d3f8c4c084704e12352f97315c5d4107" translate="yes" xml:space="preserve">
          <source>Forcing an INSERT or UPDATE</source>
          <target state="translated">强制INSERT或UPDATE</target>
        </trans-unit>
        <trans-unit id="530998ad30299518dd632fa0a637000def19dde4" translate="yes" xml:space="preserve">
          <source>Foreign keys and other relational fields are treated a little bit differently:</source>
          <target state="translated">外键和其他关系字段的处理方式有些不同。</target>
        </trans-unit>
        <trans-unit id="04c75ed6126142c00cbf64860dcf32223aa3747e" translate="yes" xml:space="preserve">
          <source>Foreign keys have the PK of the linked object as property value. ManyToMany-relations are serialized for the model that defines them and are represented as a list of PKs.</source>
          <target state="translated">外键有链接对象的PK作为属性值。ManyToMany-relations对于定义它们的模型来说是序列化的,并以PK的列表来表示。</target>
        </trans-unit>
        <trans-unit id="745daba0e4002e3d54aa9d6b189f69ba7c4cc16a" translate="yes" xml:space="preserve">
          <source>ForeignKeys which are set to &lt;a href=&quot;fields#django.db.models.ForeignKey.on_delete&quot;&gt;&lt;code&gt;on_delete&lt;/code&gt;&lt;/a&gt;&lt;code&gt;DO_NOTHING&lt;/code&gt; do not prevent taking the fast-path in deletion.</source>
          <target state="translated">设置为&lt;a href=&quot;fields#django.db.models.ForeignKey.on_delete&quot;&gt; &lt;code&gt;on_delete&lt;/code&gt; &lt;/a&gt; &lt;code&gt;DO_NOTHING&lt;/code&gt; 的 ForeignKey 不会阻止快速路径删除。</target>
        </trans-unit>
        <trans-unit id="2489b02dae69de015f9de7cb4db5c89918c8cd7d" translate="yes" xml:space="preserve">
          <source>Form Assets (the &lt;code&gt;Media&lt;/code&gt; class)</source>
          <target state="translated">表单资产（ &lt;code&gt;Media&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="01a5a80fc4c5200a64766a92d4a28630919a7770" translate="yes" xml:space="preserve">
          <source>Form Assets (the Media class)</source>
          <target state="translated">形成资产(媒体类</target>
        </trans-unit>
        <trans-unit id="ec53fec3838c580c1606daf2ba913c19e7f397ef" translate="yes" xml:space="preserve">
          <source>Form and field validation</source>
          <target state="translated">表格和字段验证</target>
        </trans-unit>
        <trans-unit id="09f0d1b7d7b094ba60d98ec9c162680471e8fcdb" translate="yes" xml:space="preserve">
          <source>Form data sent back to a Django website is processed by a view, generally the same view which published the form. This allows us to reuse some of the same logic.</source>
          <target state="translated">发送回Django网站的表单数据由一个视图处理,一般是发布表单的那个视图。这使得我们可以重复使用一些相同的逻辑。</target>
        </trans-unit>
        <trans-unit id="132a07dcd88034f7872ce5ce9eeba14f9347a298" translate="yes" xml:space="preserve">
          <source>Form field</source>
          <target state="translated">表格领域</target>
        </trans-unit>
        <trans-unit id="ca3178e6c90e7443b1f4979a04f5a830118e6a98" translate="yes" xml:space="preserve">
          <source>Form field classes</source>
          <target state="translated">表格字段类</target>
        </trans-unit>
        <trans-unit id="9b22fafbf6163cf73da647f5d6f7de7e69bb5b01" translate="yes" xml:space="preserve">
          <source>Form field default cleaning</source>
          <target state="translated">表格字段默认清理</target>
        </trans-unit>
        <trans-unit id="1f6db618e80ce9357df221435126e47594b4defe" translate="yes" xml:space="preserve">
          <source>Form fields</source>
          <target state="translated">表格领域</target>
        </trans-unit>
        <trans-unit id="06186bd1d81c2e104f10dd5dc873f3af209bd827" translate="yes" xml:space="preserve">
          <source>Form handling with class-based views</source>
          <target state="translated">用基于类的视图处理表单</target>
        </trans-unit>
        <trans-unit id="8b7e8e44aecc63eea58ade5e9e8e168e11c4b85f" translate="yes" xml:space="preserve">
          <source>Form inheritance</source>
          <target state="translated">形式继承</target>
        </trans-unit>
        <trans-unit id="8b5ca657a23a71cab768e9a3681b5b2d4ab7ea4e" translate="yes" xml:space="preserve">
          <source>Form processing generally has 3 paths:</source>
          <target state="translated">表格处理一般有3条路径。</target>
        </trans-unit>
        <trans-unit id="d23233f6cbe877e4c4d726618ca650d72fcebb80" translate="yes" xml:space="preserve">
          <source>Form rendering options</source>
          <target state="translated">表格渲染选项</target>
        </trans-unit>
        <trans-unit id="5f9b2b4c718c49d0b300d0a87b4e55a27a7053f3" translate="yes" xml:space="preserve">
          <source>Form submission</source>
          <target state="translated">提交表格</target>
        </trans-unit>
        <trans-unit id="25e11f455fdefcd79d2329575ecb3c7c9746d479" translate="yes" xml:space="preserve">
          <source>Form validation happens when the data is cleaned. If you want to customize this process, there are various places to make changes, each one serving a different purpose. Three types of cleaning methods are run during form processing. These are normally executed when you call the &lt;code&gt;is_valid()&lt;/code&gt; method on a form. There are other things that can also trigger cleaning and validation (accessing the &lt;code&gt;errors&lt;/code&gt; attribute or calling &lt;code&gt;full_clean()&lt;/code&gt; directly), but normally they won&amp;rsquo;t be needed.</source>
          <target state="translated">清理数据时进行表单验证。如果要自定义此过程，可以在许多地方进行更改，每个地方都有不同的用途。在表单处理过程中运行三种类型的清洁方法。这些通常在您在窗体上调用 &lt;code&gt;is_valid()&lt;/code&gt; 方法时执行。还有其他一些事情也可以触发清理和验证（访问 &lt;code&gt;errors&lt;/code&gt; 属性或直接调用 &lt;code&gt;full_clean()&lt;/code&gt; ），但是通常不需要它们。</target>
        </trans-unit>
        <trans-unit id="18ff0c843b5c4606dfbf89086c0062c96a51ee51" translate="yes" xml:space="preserve">
          <source>Form widgets</source>
          <target state="translated">表格小部件</target>
        </trans-unit>
        <trans-unit id="69b17d1e5286bd4a97be2e001b1a1ed61189d9d0" translate="yes" xml:space="preserve">
          <source>FormView inherits &lt;a href=&quot;../../ref/class-based-views/mixins-simple#django.views.generic.base.TemplateResponseMixin&quot;&gt;&lt;code&gt;TemplateResponseMixin&lt;/code&gt;&lt;/a&gt; so &lt;a href=&quot;../../ref/class-based-views/mixins-simple#django.views.generic.base.TemplateResponseMixin.template_name&quot;&gt;&lt;code&gt;template_name&lt;/code&gt;&lt;/a&gt; can be used here.</source>
          <target state="translated">FormView继承了&lt;a href=&quot;../../ref/class-based-views/mixins-simple#django.views.generic.base.TemplateResponseMixin&quot;&gt; &lt;code&gt;TemplateResponseMixin&lt;/code&gt; ,&lt;/a&gt;因此可以在此处使用&lt;a href=&quot;../../ref/class-based-views/mixins-simple#django.views.generic.base.TemplateResponseMixin.template_name&quot;&gt; &lt;code&gt;template_name&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="041a5dec481d6bf0724caeaa84bc135d7d9062d4" translate="yes" xml:space="preserve">
          <source>Format</source>
          <target state="translated">Format</target>
        </trans-unit>
        <trans-unit id="f761dac6d61c3dab28b3202e4de799514d3abe49" translate="yes" xml:space="preserve">
          <source>Format character</source>
          <target state="translated">格式化字符</target>
        </trans-unit>
        <trans-unit id="2783ae4db40a146cdb58fa9a0e4c57e3159ff9f2" translate="yes" xml:space="preserve">
          <source>Format localization</source>
          <target state="translated">格式本地化</target>
        </trans-unit>
        <trans-unit id="db9ee596ec25be3f524ab362d52ac677a6533537" translate="yes" xml:space="preserve">
          <source>Formats a date according to the given format.</source>
          <target state="translated">根据给定的格式设置日期。</target>
        </trans-unit>
        <trans-unit id="28c9a03c31eaadefb25c3d8a7eddaff4dda4cbfa" translate="yes" xml:space="preserve">
          <source>Formats a date as the time since that date (e.g., &amp;ldquo;4 days, 6 hours&amp;rdquo;).</source>
          <target state="translated">将日期格式化为自该日期以来的时间（例如，&amp;ldquo; 4天6小时&amp;rdquo;）。</target>
        </trans-unit>
        <trans-unit id="6a86188cd1a56d88dcdc7bb13c27bc8b1c0b3dd0" translate="yes" xml:space="preserve">
          <source>Formats a time according to the given format.</source>
          <target state="translated">根据给定的格式对时间进行格式化。</target>
        </trans-unit>
        <trans-unit id="93dc7127a492726376ff651ba9b34d2497d31b92" translate="yes" xml:space="preserve">
          <source>Formats and translates &lt;a href=&quot;#django.contrib.admin.models.LogEntry.change_message&quot;&gt;&lt;code&gt;change_message&lt;/code&gt;&lt;/a&gt; into the current user language. Messages created before Django 1.10 will always be displayed in the language in which they were logged.</source>
          <target state="translated">格式化&lt;a href=&quot;#django.contrib.admin.models.LogEntry.change_message&quot;&gt; &lt;code&gt;change_message&lt;/code&gt; &lt;/a&gt;并将其转换为当前用户语言。在Django 1.10之前创建的消息将始终以其记录的语言显示。</target>
        </trans-unit>
        <trans-unit id="953c2178bd89fc436574c8caeaf590cdaa172ee1" translate="yes" xml:space="preserve">
          <source>Formats the time to match the &lt;a href=&quot;https://tools.ietf.org/html/rfc1123.html#section-5.2.14&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 1123#section-5.2.14&lt;/strong&gt;&lt;/a&gt; date format as specified by HTTP &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html#section-7.1.1.1&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 7231#section-7.1.1.1&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">格式化时间以匹配HTTP &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html#section-7.1.1.1&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 7231＃section-7.1.1.1&lt;/strong&gt;&lt;/a&gt;指定的&lt;a href=&quot;https://tools.ietf.org/html/rfc1123.html#section-5.2.14&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 1123 &lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;＃section-5.2.14日期格式&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="28ba1c123ca93374d5c3f871a89409c3a8a7b027" translate="yes" xml:space="preserve">
          <source>Formats the time to match the &lt;a href=&quot;https://tools.ietf.org/html/rfc1123.html#section-5.2.14&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 1123#section-5.2.14&lt;/strong&gt;&lt;/a&gt; date format as specified by HTTP &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html#section-7.1.1.1&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 7231#section-7.1.1.1&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">格式化时间以匹配HTTP &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html#section-7.1.1.1&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 7231＃section-7.1.1.1&lt;/strong&gt;&lt;/a&gt;指定的&lt;a href=&quot;https://tools.ietf.org/html/rfc1123.html#section-5.2.14&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 1123 &lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;＃section-5.2.14日期格式&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="d6fd4bf74432ce4e2ddad669c637aa42be7e4983" translate="yes" xml:space="preserve">
          <source>Formats the value like a &amp;ldquo;human-readable&amp;rdquo; file size (i.e. &lt;code&gt;'13 KB'&lt;/code&gt;, &lt;code&gt;'4.1 MB'&lt;/code&gt;, &lt;code&gt;'102 bytes'&lt;/code&gt;, etc.). For example:</source>
          <target state="translated">将值格式化为&amp;ldquo;人类可读&amp;rdquo;的文件大小（即&amp;ldquo; &lt;code&gt;'13 KB'&lt;/code&gt; ， &lt;code&gt;'4.1 MB'&lt;/code&gt; ， &lt;code&gt;'102 bytes'&lt;/code&gt; 等）。例如：</target>
        </trans-unit>
        <trans-unit id="5d20ce17b112270cc159f79b2633904b994c0e40" translate="yes" xml:space="preserve">
          <source>Formats the value like a &amp;lsquo;human-readable&amp;rsquo; file size (i.e. &lt;code&gt;'13 KB'&lt;/code&gt;, &lt;code&gt;'4.1 MB'&lt;/code&gt;, &lt;code&gt;'102 bytes'&lt;/code&gt;, etc.).</source>
          <target state="translated">将值格式化为&amp;ldquo;人类可读&amp;rdquo;的文件大小（即&amp;ldquo; &lt;code&gt;'13 KB'&lt;/code&gt; ， &lt;code&gt;'4.1 MB'&lt;/code&gt; ， &lt;code&gt;'102 bytes'&lt;/code&gt; 等）。</target>
        </trans-unit>
        <trans-unit id="cc8ade43c35d4aa9d67e1a79527ff8a39de50a5f" translate="yes" xml:space="preserve">
          <source>Formats the variable according to the argument, a string formatting specifier. This specifier uses the &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#old-string-formatting&quot;&gt;printf-style String Formatting&lt;/a&gt; syntax, with the exception that the leading &amp;ldquo;%&amp;rdquo; is dropped.</source>
          <target state="translated">根据参数（字符串格式化说明符）格式化变量。该说明符使用&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#old-string-formatting&quot;&gt;printf样式的String Formatting&lt;/a&gt;语法，但前面的&amp;ldquo;％&amp;rdquo;被删除。</target>
        </trans-unit>
        <trans-unit id="e235045d3159d9680e6b2ca8af0bb926f4f21e79" translate="yes" xml:space="preserve">
          <source>Formatters</source>
          <target state="translated">Formatters</target>
        </trans-unit>
        <trans-unit id="ae08568bf3e0252178af230ef89a5c406780c364" translate="yes" xml:space="preserve">
          <source>Formatting strings: &lt;code&gt;format_lazy()&lt;/code&gt;</source>
          <target state="translated">格式化字符串： &lt;code&gt;format_lazy()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4bec9575721b2739ed1e7c56eb6c8471084fcbcf" translate="yes" xml:space="preserve">
          <source>Forms</source>
          <target state="translated">Forms</target>
        </trans-unit>
        <trans-unit id="d89f0c64a4949e7005972d47aa88597204d94d1b" translate="yes" xml:space="preserve">
          <source>Forms and Cross Site Request Forgery protection</source>
          <target state="translated">表格和跨网站请求防伪</target>
        </trans-unit>
        <trans-unit id="1a78423c2585a7306a030f845b72b53407d6a3d9" translate="yes" xml:space="preserve">
          <source>Forms and view tools for logging in users, or restricting content</source>
          <target state="translated">用于登录用户或限制内容的表格和查看工具。</target>
        </trans-unit>
        <trans-unit id="abebd9a2b41a12ca79e7f50192b53b0dd9e36099" translate="yes" xml:space="preserve">
          <source>Forms and widgets can specify custom renderer classes.</source>
          <target state="translated">表单和widget可以指定自定义渲染器类。</target>
        </trans-unit>
        <trans-unit id="b3b9595e1333e8d116512ac45e4fceb8697fcd3f" translate="yes" xml:space="preserve">
          <source>Forms in Django</source>
          <target state="translated">Django中的表单</target>
        </trans-unit>
        <trans-unit id="3924338526abac54edb63488cd56ed8868605157" translate="yes" xml:space="preserve">
          <source>Formset API reference. For introductory material about formsets, see the &lt;a href=&quot;../../topics/forms/formsets&quot;&gt;Formsets&lt;/a&gt; topic guide.</source>
          <target state="translated">Formset API参考。有关表单集的入门资料，请参阅&amp;ldquo; &lt;a href=&quot;../../topics/forms/formsets&quot;&gt;表单集&amp;rdquo;&lt;/a&gt;主题指南。</target>
        </trans-unit>
        <trans-unit id="5d33d2153056db97a572c779e328f56f62c0e59b" translate="yes" xml:space="preserve">
          <source>Formset Functions</source>
          <target state="translated">表格集功能</target>
        </trans-unit>
        <trans-unit id="70c7c64d1100244a0311cbea1b3c65a2aa139032" translate="yes" xml:space="preserve">
          <source>Formset validation</source>
          <target state="translated">表格集验证</target>
        </trans-unit>
        <trans-unit id="010e393a05ca880fc34de07a101163e70e23785d" translate="yes" xml:space="preserve">
          <source>Formsets</source>
          <target state="translated">Formsets</target>
        </trans-unit>
        <trans-unit id="f0a26bc3be8c85f51f36bd53b9f5be44b92cc34b" translate="yes" xml:space="preserve">
          <source>Formsets can also be indexed into, which returns the corresponding form. If you override &lt;code&gt;__iter__&lt;/code&gt;, you will need to also override &lt;code&gt;__getitem__&lt;/code&gt; to have matching behavior.</source>
          <target state="translated">表单集也可以建立索引，并返回相应的表单。如果覆盖 &lt;code&gt;__iter__&lt;/code&gt; ，则还需要覆盖 &lt;code&gt;__getitem__&lt;/code&gt; 才能具有匹配的行为。</target>
        </trans-unit>
        <trans-unit id="c1c960670c1e56575f03efb06db7b42a1a10af69" translate="yes" xml:space="preserve">
          <source>Formtools</source>
          <target state="translated">Formtools</target>
        </trans-unit>
        <trans-unit id="36ca1cdf4b812de1cd2a6206ed54566f2f58a310" translate="yes" xml:space="preserve">
          <source>Fortunately, HTTP provides a solution to this problem. A number of HTTP headers exist to instruct downstream caches to differ their cache contents depending on designated variables, and to tell caching mechanisms not to cache particular pages. We&amp;rsquo;ll look at some of these headers in the sections that follow.</source>
          <target state="translated">幸运的是，HTTP提供了解决此问题的方法。存在许多HTTP标头，以指示下游缓存根据指定的变量来区分其缓存内容，并告诉缓存机制不要缓存特定页面。我们将在以下各节中介绍其中的一些标题。</target>
        </trans-unit>
        <trans-unit id="da0de0fd7e1486d9a80baf7eaf4087001415bfa1" translate="yes" xml:space="preserve">
          <source>Fortunately, there&amp;rsquo;s a little bug in the &lt;code&gt;polls&lt;/code&gt; application for us to fix right away: the &lt;code&gt;Question.was_published_recently()&lt;/code&gt; method returns &lt;code&gt;True&lt;/code&gt; if the &lt;code&gt;Question&lt;/code&gt; was published within the last day (which is correct) but also if the &lt;code&gt;Question&lt;/code&gt;&amp;rsquo;s &lt;code&gt;pub_date&lt;/code&gt; field is in the future (which certainly isn&amp;rsquo;t).</source>
          <target state="translated">幸运的是， &lt;code&gt;polls&lt;/code&gt; 应用程序中有一个小错误可供我们立即修复：如果 &lt;code&gt;Question&lt;/code&gt; 是在最后一天发布的（正确的话），并且 &lt;code&gt;Question&lt;/code&gt; 的 &lt;code&gt;pub_date&lt;/code&gt; 字段为，则 &lt;code&gt;Question.was_published_recently()&lt;/code&gt; 方法将返回 &lt;code&gt;True&lt;/code&gt; 。将来（当然不是）。</target>
        </trans-unit>
        <trans-unit id="ba4e72261283258434788542ba397135c10f39d8" translate="yes" xml:space="preserve">
          <source>Forward</source>
          <target state="translated">Forward</target>
        </trans-unit>
        <trans-unit id="e425397879f8bd866baafbd76513bb7fcb6a1d82" translate="yes" xml:space="preserve">
          <source>Forward access to one-to-many relationships is cached the first time the related object is accessed. Subsequent accesses to the foreign key on the same object instance are cached. Example:</source>
          <target state="translated">对一对多关系的正向访问在第一次访问相关对象时被缓存。随后对同一对象实例上的外键的访问会被缓存。例如</target>
        </trans-unit>
        <trans-unit id="cfd2f8e5ac40daa45638695e2abc70d1935d60f3" translate="yes" xml:space="preserve">
          <source>Fractional seconds support for Time and DateTime fields</source>
          <target state="translated">支持时间和DateTime字段的小数秒。</target>
        </trans-unit>
        <trans-unit id="e3e7a3833d19706ebf33b2c3baf8e05deeed7bca" translate="yes" xml:space="preserve">
          <source>Frames</source>
          <target state="translated">Frames</target>
        </trans-unit>
        <trans-unit id="2b70ec7fe162c7688570e8b7b07c45bad5b45c6a" translate="yes" xml:space="preserve">
          <source>Frames narrow the rows that are used for computing the result. They shift from some start point to some specified end point. Frames can be used with and without partitions, but it&amp;rsquo;s often a good idea to specify an ordering of the window to ensure a deterministic result. In a frame, a peer in a frame is a row with an equivalent value, or all rows if an ordering clause isn&amp;rsquo;t present.</source>
          <target state="translated">框架缩小了用于计算结果的行。它们从某个起点转移到某个指定的终点。框架可以使用分区，也可以不使用分区，但是通常最好指定窗口的顺序以确保确定的结果。在框架中，框架中的对等体是具有相等值的行，如果不存在排序子句，则是所有行。</target>
        </trans-unit>
        <trans-unit id="d790b402d79ac1a723c790313bcd679999474630" translate="yes" xml:space="preserve">
          <source>Frequently Asked Questions</source>
          <target state="translated">常问问题</target>
        </trans-unit>
        <trans-unit id="fcc787d7a7793eefb7e8d97ed3e0b42646c5a64e" translate="yes" xml:space="preserve">
          <source>From MySQL 5.7 onwards and on fresh installs of MySQL 5.6, the default value of the &lt;code&gt;sql_mode&lt;/code&gt; option contains &lt;code&gt;STRICT_TRANS_TABLES&lt;/code&gt;. That option escalates warnings into errors when data are truncated upon insertion, so Django highly recommends activating a &lt;a href=&quot;https://dev.mysql.com/doc/refman/en/sql-mode.html#sql-mode-strict&quot;&gt;strict mode&lt;/a&gt; for MySQL to prevent data loss (either &lt;code&gt;STRICT_TRANS_TABLES&lt;/code&gt; or &lt;code&gt;STRICT_ALL_TABLES&lt;/code&gt;).</source>
          <target state="translated">从MySQL 5.7开始以及在MySQL 5.6的全新安装中， &lt;code&gt;sql_mode&lt;/code&gt; 选项的默认值包含 &lt;code&gt;STRICT_TRANS_TABLES&lt;/code&gt; 。当数据在插入时被截断时，该选项会将警告升级为错误，因此Django强烈建议为MySQL 激活&lt;a href=&quot;https://dev.mysql.com/doc/refman/en/sql-mode.html#sql-mode-strict&quot;&gt;严格模式&lt;/a&gt;以防止数据丢失（ &lt;code&gt;STRICT_TRANS_TABLES&lt;/code&gt; 或 &lt;code&gt;STRICT_ALL_TABLES&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="bc66434aa730a1acc6949077414a98d4f5a85ee6" translate="yes" xml:space="preserve">
          <source>From outward appearances, this looks like the query has retrieved both the first name and last name. However, this example actually issued 3 queries. Only the first names were retrieved by the raw() query &amp;ndash; the last names were both retrieved on demand when they were printed.</source>
          <target state="translated">从外观上看，查询看起来已检索到名字和姓氏。但是，此示例实际上发出了3个查询。raw（）查询仅检索名字-印刷时都按需检索名字。</target>
        </trans-unit>
        <trans-unit id="a5490de1ed84545df48870ebcb4ef860e0011f37" translate="yes" xml:space="preserve">
          <source>From the &lt;a href=&quot;middleware#django.contrib.auth.middleware.AuthenticationMiddleware&quot;&gt;&lt;code&gt;AuthenticationMiddleware&lt;/code&gt;&lt;/a&gt;: An instance of &lt;a href=&quot;settings#std:setting-AUTH_USER_MODEL&quot;&gt;&lt;code&gt;AUTH_USER_MODEL&lt;/code&gt;&lt;/a&gt; representing the currently logged-in user. If the user isn&amp;rsquo;t currently logged in, &lt;code&gt;user&lt;/code&gt; will be set to an instance of &lt;a href=&quot;contrib/auth#django.contrib.auth.models.AnonymousUser&quot;&gt;&lt;code&gt;AnonymousUser&lt;/code&gt;&lt;/a&gt;. You can tell them apart with &lt;a href=&quot;contrib/auth#django.contrib.auth.models.User.is_authenticated&quot;&gt;&lt;code&gt;is_authenticated&lt;/code&gt;&lt;/a&gt;, like so:</source>
          <target state="translated">来自&lt;a href=&quot;middleware#django.contrib.auth.middleware.AuthenticationMiddleware&quot;&gt; &lt;code&gt;AuthenticationMiddleware&lt;/code&gt; &lt;/a&gt;：代表当前登录用户的&lt;a href=&quot;settings#std:setting-AUTH_USER_MODEL&quot;&gt; &lt;code&gt;AUTH_USER_MODEL&lt;/code&gt; &lt;/a&gt;的实例。如果该用户当前未登录，则该 &lt;code&gt;user&lt;/code&gt; 将被设置为&lt;a href=&quot;contrib/auth#django.contrib.auth.models.AnonymousUser&quot;&gt; &lt;code&gt;AnonymousUser&lt;/code&gt; &lt;/a&gt;的实例。您可以使用&lt;a href=&quot;contrib/auth#django.contrib.auth.models.User.is_authenticated&quot;&gt; &lt;code&gt;is_authenticated&lt;/code&gt; &lt;/a&gt;区分它们，如下所示：</target>
        </trans-unit>
        <trans-unit id="e4390d233b552a299b710cead7d140cf5b140794" translate="yes" xml:space="preserve">
          <source>From the &lt;a href=&quot;middleware#django.contrib.sessions.middleware.SessionMiddleware&quot;&gt;&lt;code&gt;SessionMiddleware&lt;/code&gt;&lt;/a&gt;: A readable and writable, dictionary-like object that represents the current session.</source>
          <target state="translated">来自&lt;a href=&quot;middleware#django.contrib.sessions.middleware.SessionMiddleware&quot;&gt; &lt;code&gt;SessionMiddleware&lt;/code&gt; &lt;/a&gt;：代表当前会话的可读可写，类似于字典的对象。</target>
        </trans-unit>
        <trans-unit id="01c2533dcbf8d501ec5fbb5318b65a5832021da3" translate="yes" xml:space="preserve">
          <source>From the &lt;a href=&quot;middleware#django.contrib.sites.middleware.CurrentSiteMiddleware&quot;&gt;&lt;code&gt;CurrentSiteMiddleware&lt;/code&gt;&lt;/a&gt;: An instance of &lt;a href=&quot;contrib/sites#django.contrib.sites.models.Site&quot;&gt;&lt;code&gt;Site&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;contrib/sites#django.contrib.sites.requests.RequestSite&quot;&gt;&lt;code&gt;RequestSite&lt;/code&gt;&lt;/a&gt; as returned by &lt;a href=&quot;contrib/sites#django.contrib.sites.shortcuts.get_current_site&quot;&gt;&lt;code&gt;get_current_site()&lt;/code&gt;&lt;/a&gt; representing the current site.</source>
          <target state="translated">来自&lt;a href=&quot;middleware#django.contrib.sites.middleware.CurrentSiteMiddleware&quot;&gt; &lt;code&gt;CurrentSiteMiddleware&lt;/code&gt; &lt;/a&gt;：由&lt;a href=&quot;contrib/sites#django.contrib.sites.shortcuts.get_current_site&quot;&gt; &lt;code&gt;get_current_site()&lt;/code&gt; &lt;/a&gt;返回的代表当前站点的&lt;a href=&quot;contrib/sites#django.contrib.sites.models.Site&quot;&gt; &lt;code&gt;Site&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;contrib/sites#django.contrib.sites.requests.RequestSite&quot;&gt; &lt;code&gt;RequestSite&lt;/code&gt; &lt;/a&gt;的实例。</target>
        </trans-unit>
        <trans-unit id="28206f22cdc49d67262192e2ec75592be29e1e10" translate="yes" xml:space="preserve">
          <source>From the command line, &lt;code&gt;cd&lt;/code&gt; into a directory where you&amp;rsquo;d like to store your code, then run the following command:</source>
          <target state="translated">在命令行中，使用 &lt;code&gt;cd&lt;/code&gt; 进入要存储代码的目录，然后运行以下命令：</target>
        </trans-unit>
        <trans-unit id="e4203645cf245f13a9b5b7eef7c6236f37d97062" translate="yes" xml:space="preserve">
          <source>From then on, you can insert the current value of the cycle wherever you&amp;rsquo;d like in your template by referencing the cycle name as a context variable. If you want to move the cycle to the next value independently of the original &lt;code&gt;cycle&lt;/code&gt; tag, you can use another &lt;code&gt;cycle&lt;/code&gt; tag and specify the name of the variable. So, the following template:</source>
          <target state="translated">从那时起，您可以通过将循环名称引用为上下文变量，在模板中的任何位置插入循环的当前值。如果要独立于原始 &lt;code&gt;cycle&lt;/code&gt; 标签将循环移至下一个值，则可以使用另一个 &lt;code&gt;cycle&lt;/code&gt; 标签并指定变量的名称。因此，以下模板：</target>
        </trans-unit>
        <trans-unit id="abd4b62bdfa157a8de63903b441ea96244832915" translate="yes" xml:space="preserve">
          <source>From within the Application Stack Builder (to run outside of the installer, Start ‣ Programs ‣ PostgreSQL 9.x), select PostgreSQL Database Server 9.x on port 5432 from the drop down menu. Next, expand the Categories ‣ Spatial Extensions menu tree and select PostGIS X.Y for PostgreSQL 9.x.</source>
          <target state="translated">在应用程序堆栈生成器中(要在安装程序之外运行,请开始‣程序‣PostgreSQL 9.x),从下拉菜单中选择PostgreSQL数据库服务器9.x的5432端口。接下来,展开 &quot;类别&quot;‣空间扩展菜单树,并选择PostGIS X.Y for PostgreSQL 9.x。</target>
        </trans-unit>
        <trans-unit id="82e8ee228f3b66a73db0fd74571edb0fe23f9a95" translate="yes" xml:space="preserve">
          <source>From within the Stack Builder (to run outside of the installer, Start ‣ PostgreSQL 12 ‣ Application Stack Builder), select PostgreSQL 12 (x64) on port 5432 from the drop down menu and click next. Expand the Categories ‣ Spatial Extensions menu tree and select PostGIS X.Y for PostgreSQL 12.</source>
          <target state="translated">在堆栈生成器内(要在安装程序之外运行,请开始‣PostgreSQL 12 ‣应用程序堆栈生成器),从下拉菜单中选择5432端口上的PostgreSQL 12 (x64),并单击下一步。展开 &quot;类别&quot;‣空间扩展菜单树,选择PostGIS X.Y for PostgreSQL 12。</target>
        </trans-unit>
        <trans-unit id="1e91c62a82f35fb349a4fdae32a9501dc3b57fbe" translate="yes" xml:space="preserve">
          <source>Full DSN and Easy Connect</source>
          <target state="translated">完整的DSN和简易连接</target>
        </trans-unit>
        <trans-unit id="e86b3e585198c95bce6aef7747541d9f96bbd00d" translate="yes" xml:space="preserve">
          <source>Full Python path to the application, e.g. &lt;code&gt;'django.contrib.admin'&lt;/code&gt;.</source>
          <target state="translated">应用程序的完整Python路径，例如 &lt;code&gt;'django.contrib.admin'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cd23939c002b10cde0a26228db88f6c8b97d3213" translate="yes" xml:space="preserve">
          <source>Full URL: send the entire URL in the &lt;code&gt;Referer&lt;/code&gt; header. For example, if the user is visiting &lt;code&gt;https://example.com/page.html&lt;/code&gt;, the &lt;code&gt;Referer&lt;/code&gt; header would contain &lt;code&gt;&quot;https://example.com/page.html&quot;&lt;/code&gt;.</source>
          <target state="translated">完整URL：在 &lt;code&gt;Referer&lt;/code&gt; 标头中发送整个URL 。例如，如果用户正在访问 &lt;code&gt;https://example.com/page.html&lt;/code&gt; ，则 &lt;code&gt;Referer&lt;/code&gt; 标头将包含 &lt;code&gt;&quot;https://example.com/page.html&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d57d832e96db7330b107b719df41920ebb9f9602" translate="yes" xml:space="preserve">
          <source>Full import path of a serializer class to use for serializing session data. Included serializers are:</source>
          <target state="translated">用于序列化会话数据的序列化器类的完整导入路径。包括的序列化器有:</target>
        </trans-unit>
        <trans-unit id="8ec461c73e449e432c7752507d77fd5cb2f69a4c" translate="yes" xml:space="preserve">
          <source>Full name or alias(es)</source>
          <target state="translated">全名或别名</target>
        </trans-unit>
        <trans-unit id="24eafd34f2c5835ead6dd64dc0e0e76590fef7aa" translate="yes" xml:space="preserve">
          <source>Full text search</source>
          <target state="translated">全文检索</target>
        </trans-unit>
        <trans-unit id="f1e410ad1472b42cb42cc98962428637290b6706" translate="yes" xml:space="preserve">
          <source>Function</source>
          <target state="translated">Function</target>
        </trans-unit>
        <trans-unit id="ef8fc408c280b6c40a19f17f903d961ae3051464" translate="yes" xml:space="preserve">
          <source>Function&amp;rsquo;s summary:</source>
          <target state="translated">功能摘要：</target>
        </trans-unit>
        <trans-unit id="157df04ee53dd9c987d0ba9575b50f982531a951" translate="yes" xml:space="preserve">
          <source>Functions and classes for working with &amp;ldquo;safe strings&amp;rdquo;: strings that can be displayed safely without further escaping in HTML. Marking something as a &amp;ldquo;safe string&amp;rdquo; means that the producer of the string has already turned characters that should not be interpreted by the HTML engine (e.g. &amp;lsquo;&amp;lt;&amp;rsquo;) into the appropriate entities.</source>
          <target state="translated">使用&amp;ldquo;安全字符串&amp;rdquo;的函数和类：可以安全显示的字符串，而无需在HTML中进一​​步转义。将某物标记为&amp;ldquo;安全字符串&amp;rdquo;意味着该字符串的产生者已经将不应由HTML引擎解释的字符（例如&amp;ldquo; &amp;lt;&amp;rdquo;）转换为适当的实体。</target>
        </trans-unit>
        <trans-unit id="9bd77944f3068c168ecfbb2db948688c50c766c3" translate="yes" xml:space="preserve">
          <source>Functions for working with Python modules.</source>
          <target state="translated">用于处理Python模块的函数。</target>
        </trans-unit>
        <trans-unit id="2c588fee9a38a1178c2a3f53d498d3e8b92c5c75" translate="yes" xml:space="preserve">
          <source>Functions of particular interest are &lt;a href=&quot;../../ref/utils#django.utils.translation.get_language&quot;&gt;&lt;code&gt;django.utils.translation.get_language()&lt;/code&gt;&lt;/a&gt; which returns the language used in the current thread, &lt;a href=&quot;../../ref/utils#django.utils.translation.activate&quot;&gt;&lt;code&gt;django.utils.translation.activate()&lt;/code&gt;&lt;/a&gt; which activates a translation catalog for the current thread, and &lt;a href=&quot;../../ref/utils#django.utils.translation.check_for_language&quot;&gt;&lt;code&gt;django.utils.translation.check_for_language()&lt;/code&gt;&lt;/a&gt; which checks if the given language is supported by Django.</source>
          <target state="translated">特别令人感兴趣的功能是&lt;a href=&quot;../../ref/utils#django.utils.translation.get_language&quot;&gt; &lt;code&gt;django.utils.translation.get_language()&lt;/code&gt; &lt;/a&gt;返回，在当前线程使用的语言&lt;a href=&quot;../../ref/utils#django.utils.translation.activate&quot;&gt; &lt;code&gt;django.utils.translation.activate()&lt;/code&gt; &lt;/a&gt;激活当前线程，和一个翻译目录&lt;a href=&quot;../../ref/utils#django.utils.translation.check_for_language&quot;&gt; &lt;code&gt;django.utils.translation.check_for_language()&lt;/code&gt; &lt;/a&gt;检查给定语言是否受Django支持。</target>
        </trans-unit>
        <trans-unit id="fe29fa848ab0fa934dbf60165599b48d69a06c00" translate="yes" xml:space="preserve">
          <source>Functions which listen for &lt;a href=&quot;#django.db.models.signals.post_migrate&quot;&gt;&lt;code&gt;post_migrate&lt;/code&gt;&lt;/a&gt; should adjust what they output to the screen based on the value of this argument.</source>
          <target state="translated">侦听&lt;a href=&quot;#django.db.models.signals.post_migrate&quot;&gt; &lt;code&gt;post_migrate&lt;/code&gt; 的&lt;/a&gt;函数应根据此参数的值调整输出到屏幕的内容。</target>
        </trans-unit>
        <trans-unit id="58b8fc1c1c71c5176694d664f30ad4935c95c9a6" translate="yes" xml:space="preserve">
          <source>Functions which listen for &lt;a href=&quot;#django.db.models.signals.pre_migrate&quot;&gt;&lt;code&gt;pre_migrate&lt;/code&gt;&lt;/a&gt; should adjust what they output to the screen based on the value of this argument.</source>
          <target state="translated">侦听&lt;a href=&quot;#django.db.models.signals.pre_migrate&quot;&gt; &lt;code&gt;pre_migrate&lt;/code&gt; 的&lt;/a&gt;函数应根据此参数的值调整输出到屏幕的内容。</target>
        </trans-unit>
        <trans-unit id="347a2262f212625c348b335159dc10ebbb03ab9d" translate="yes" xml:space="preserve">
          <source>Furlong, Furrow Long</source>
          <target state="translated">芙蓉,芙蓉长</target>
        </trans-unit>
        <trans-unit id="4dc8b1c8149842f459402434eeff439ceb9a7810" translate="yes" xml:space="preserve">
          <source>Further examples are available in the &lt;a href=&quot;../../ref/models/fields#field-choices&quot;&gt;model field reference&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;../../ref/models/fields#field-choices&quot;&gt;模型字段参考&lt;/a&gt;中可以找到更多示例。</target>
        </trans-unit>
        <trans-unit id="8a30ede85430e26aa72ae0d45e1884ea49e582ee" translate="yes" xml:space="preserve">
          <source>Further filtering or ordering of a sliced queryset is prohibited due to the ambiguous nature of how that might work.</source>
          <target state="translated">由于工作方式的模糊性,禁止对切片查询集进行进一步的过滤或排序。</target>
        </trans-unit>
        <trans-unit id="cd7c6cb8f1b994293e0fffa5e0469c1773e35f5c" translate="yes" xml:space="preserve">
          <source>Further testing</source>
          <target state="translated">进一步测试</target>
        </trans-unit>
        <trans-unit id="52ee768531207c58276c00530d02f15c716ccdcd" translate="yes" xml:space="preserve">
          <source>Further topics</source>
          <target state="translated">其他主题</target>
        </trans-unit>
        <trans-unit id="e8b4f5234311830cfdfba453e178fa09d0bfe9a3" translate="yes" xml:space="preserve">
          <source>Furthermore, Python knows how to compare aware datetimes, taking into account UTC offsets when necessary. It&amp;rsquo;s much easier (and possibly faster) to write all your model and view code in UTC. So, in most circumstances, the datetime in UTC returned by &lt;a href=&quot;../../ref/utils#django.utils.timezone.now&quot;&gt;&lt;code&gt;django.utils.timezone.now()&lt;/code&gt;&lt;/a&gt; will be sufficient.</source>
          <target state="translated">此外，Python知道如何比较已知的日期时间，并在必要时考虑UTC偏移量。使用UTC编写所有模型并查看代码要容易得多（可能更快）。因此，在大多数情况下，&lt;a href=&quot;../../ref/utils#django.utils.timezone.now&quot;&gt; &lt;code&gt;django.utils.timezone.now()&lt;/code&gt; &lt;/a&gt;返回的UTC日期时间就足够了。</target>
        </trans-unit>
        <trans-unit id="d3e8ced1a91ca1c95a75c48dbffda0726e15cbf4" translate="yes" xml:space="preserve">
          <source>Fuzzy entries</source>
          <target state="translated">模糊条目</target>
        </trans-unit>
        <trans-unit id="8ea6d0ffdbdb6cea2b28d73945ccdfef0ae19531" translate="yes" xml:space="preserve">
          <source>GDAL</source>
          <target state="translated">GDAL</target>
        </trans-unit>
        <trans-unit id="2a26a644d47f1906e2de640e10ff9907286d34cd" translate="yes" xml:space="preserve">
          <source>GDAL API</source>
          <target state="translated">GDAL API</target>
        </trans-unit>
        <trans-unit id="02e0585320eb827c9ffabe229b79e4b65616c704" translate="yes" xml:space="preserve">
          <source>GDAL Interface</source>
          <target state="translated">GDAL接口</target>
        </trans-unit>
        <trans-unit id="cbec0c3b910411cfed3eedecc010ca9269f20bee" translate="yes" xml:space="preserve">
          <source>GDAL Pixel Type</source>
          <target state="translated">GDAL像素类型</target>
        </trans-unit>
        <trans-unit id="d39fe0a7c9d90595546f63f3c02dec03095f3dc6" translate="yes" xml:space="preserve">
          <source>GDAL has an internal memory-based filesystem, which allows treating blocks of memory as files. It can be used to read and write &lt;a href=&quot;#django.contrib.gis.gdal.GDALRaster&quot;&gt;&lt;code&gt;GDALRaster&lt;/code&gt;&lt;/a&gt; objects to and from binary file buffers.</source>
          <target state="translated">GDAL具有一个基于内存的内部文件系统，该系统可将内存块视为文件。它可用于在二进制文件缓冲区中读取和写入&lt;a href=&quot;#django.contrib.gis.gdal.GDALRaster&quot;&gt; &lt;code&gt;GDALRaster&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="1a9e794e2a979d5ba51533c108c06370dda08dde" translate="yes" xml:space="preserve">
          <source>GDT_Byte</source>
          <target state="translated">GDT_Byte</target>
        </trans-unit>
        <trans-unit id="124018333259823826d7cc111b4e0db2f7bc432f" translate="yes" xml:space="preserve">
          <source>GDT_Float32</source>
          <target state="translated">GDT_Float32</target>
        </trans-unit>
        <trans-unit id="00b98fc1bfd4aeb9ba37d5df113e3c40a369e8a9" translate="yes" xml:space="preserve">
          <source>GDT_Float64</source>
          <target state="translated">GDT_Float64</target>
        </trans-unit>
        <trans-unit id="0d00d4c137a19ecaa4f3bac851c7ea6c269fba00" translate="yes" xml:space="preserve">
          <source>GDT_Int16</source>
          <target state="translated">GDT_Int16</target>
        </trans-unit>
        <trans-unit id="bf4d610facd6e53aaadc48ed9351cca991b8266e" translate="yes" xml:space="preserve">
          <source>GDT_Int32</source>
          <target state="translated">GDT_Int32</target>
        </trans-unit>
        <trans-unit id="516d94f6f5e0777618ed61925b04c1640fd44690" translate="yes" xml:space="preserve">
          <source>GDT_UInt16</source>
          <target state="translated">GDT_UInt16</target>
        </trans-unit>
        <trans-unit id="1cc4d769f36ea1593d2e67458b1811587e6436b4" translate="yes" xml:space="preserve">
          <source>GDT_UInt32</source>
          <target state="translated">GDT_UInt32</target>
        </trans-unit>
        <trans-unit id="57549eddbbf46dfb920987eb38ac173931fba057" translate="yes" xml:space="preserve">
          <source>GEOS</source>
          <target state="translated">GEOS</target>
        </trans-unit>
        <trans-unit id="cf2921f1e8089a4fc3bf09367ef75c069782c7b8" translate="yes" xml:space="preserve">
          <source>GEOS API</source>
          <target state="translated">GEOS API</target>
        </trans-unit>
        <trans-unit id="9ba8d42dfcc9df2e351bca785d3dbcbb20d3cb86" translate="yes" xml:space="preserve">
          <source>GEOS distance calculations are linear &amp;ndash; in other words, GEOS does not perform a spherical calculation even if the SRID specifies a geographic coordinate system.</source>
          <target state="translated">GEOS距离计算是线性的&amp;ndash;换句话说，即使SRID指定了地理坐标系，GEOS也不执行球形计算。</target>
        </trans-unit>
        <trans-unit id="c104de6f391701c2366e299c7023455bf19608de" translate="yes" xml:space="preserve">
          <source>GEOS is a C++ library for performing geometric operations, and is the default internal geometry representation used by GeoDjango (it&amp;rsquo;s behind the &amp;ldquo;lazy&amp;rdquo; geometries). Specifically, the C API library is called (e.g., &lt;code&gt;libgeos_c.so&lt;/code&gt;) directly from Python using ctypes.</source>
          <target state="translated">GEOS是用于执行几何运算的C ++库，并且是GeoDjango使用的默认内部几何图形表示（位于&amp;ldquo;惰性&amp;rdquo;几何图形的后面）。具体而言，使用ctypes直接从Python 调用C API库（例如 &lt;code&gt;libgeos_c.so&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="f552a71a8afc751655c25583e1e0ff952365b5eb" translate="yes" xml:space="preserve">
          <source>GEOS, GDAL</source>
          <target state="translated">GEOS、GDAL</target>
        </trans-unit>
        <trans-unit id="67290db3486d847e5ecd1c83416a1bde2331c192" translate="yes" xml:space="preserve">
          <source>GEOS, GDAL, PROJ.4, PostGIS</source>
          <target state="translated">GEOS、GDAL、PROJ.4、PostGIS。</target>
        </trans-unit>
        <trans-unit id="d54bb8615abfeaabf733c3a517bde1df52c7ae10" translate="yes" xml:space="preserve">
          <source>GEOS, GDAL, PROJ.4, SpatiaLite</source>
          <target state="translated">GEOS、GDAL、PROJ.4、SpatiaLite。</target>
        </trans-unit>
        <trans-unit id="32df026aca6e37208988e80143a9f0fdbc8a748a" translate="yes" xml:space="preserve">
          <source>GIS QuerySet API Reference</source>
          <target state="translated">GIS QuerySet API参考</target>
        </trans-unit>
        <trans-unit id="dc4060a6fe947895e29cdab9b844c92647dcdf2c" translate="yes" xml:space="preserve">
          <source>GIS data sources, like shapefiles, may be very large. If you find that &lt;a href=&quot;#django.contrib.gis.utils.LayerMapping&quot;&gt;&lt;code&gt;LayerMapping&lt;/code&gt;&lt;/a&gt; is using too much memory, set &lt;a href=&quot;../../settings#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;False&lt;/code&gt; in your settings. When &lt;a href=&quot;../../settings#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;True&lt;/code&gt;, Django &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/faq/models/#faq-see-raw-sql-queries&quot;&gt;automatically logs&lt;/a&gt;&lt;em&gt;every&lt;/em&gt; SQL query &amp;ndash; and when SQL statements contain geometries, this may consume more memory than is typical.</source>
          <target state="translated">像shapefile这样的GIS数据源可能非常大。如果发现&lt;a href=&quot;#django.contrib.gis.utils.LayerMapping&quot;&gt; &lt;code&gt;LayerMapping&lt;/code&gt; &lt;/a&gt;使用的内存过多，请在设置中将&lt;a href=&quot;../../settings#std:setting-DEBUG&quot;&gt; &lt;code&gt;DEBUG&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;False&lt;/code&gt; 。当&lt;a href=&quot;../../settings#std:setting-DEBUG&quot;&gt; &lt;code&gt;DEBUG&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;True&lt;/code&gt; 时，Django会&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/faq/models/#faq-see-raw-sql-queries&quot;&gt;自动记录&lt;/a&gt;&lt;em&gt;每个&lt;/em&gt; SQL查询-并且当SQL语句包含几何时，这可能会消耗比通常更多的内存。</target>
        </trans-unit>
        <trans-unit id="0219dc6d205e4e9202852bb76fb50fb5ad3368c3" translate="yes" xml:space="preserve">
          <source>GIS data sources, like shapefiles, may be very large. If you find that &lt;a href=&quot;#django.contrib.gis.utils.LayerMapping&quot;&gt;&lt;code&gt;LayerMapping&lt;/code&gt;&lt;/a&gt; is using too much memory, set &lt;a href=&quot;../../settings#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;False&lt;/code&gt; in your settings. When &lt;a href=&quot;../../settings#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;True&lt;/code&gt;, Django &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/faq/models/#faq-see-raw-sql-queries&quot;&gt;automatically logs&lt;/a&gt;&lt;em&gt;every&lt;/em&gt; SQL query &amp;ndash; and when SQL statements contain geometries, this may consume more memory than is typical.</source>
          <target state="translated">像shapefile这样的GIS数据源可能非常大。如果发现&lt;a href=&quot;#django.contrib.gis.utils.LayerMapping&quot;&gt; &lt;code&gt;LayerMapping&lt;/code&gt; &lt;/a&gt;使用了过多的内存，请在设置中将&lt;a href=&quot;../../settings#std:setting-DEBUG&quot;&gt; &lt;code&gt;DEBUG&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;False&lt;/code&gt; 。当&lt;a href=&quot;../../settings#std:setting-DEBUG&quot;&gt; &lt;code&gt;DEBUG&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;True&lt;/code&gt; 时，Django会&lt;a href=&quot;https://docs.djangoproject.com/en/3.1/faq/models/#faq-see-raw-sql-queries&quot;&gt;自动记录&lt;/a&gt;&lt;em&gt;每个&lt;/em&gt;SQL查询-并且当SQL语句包含几何时，这可能会消耗比通常更多的内存。</target>
        </trans-unit>
        <trans-unit id="f153081e8e18a0ac0dd3d4a18216a72f195ef4a7" translate="yes" xml:space="preserve">
          <source>GZip compression</source>
          <target state="translated">GZip压缩</target>
        </trans-unit>
        <trans-unit id="88756fa7a5403ed08666c0f7d1544a052a8a7758" translate="yes" xml:space="preserve">
          <source>GZip middleware</source>
          <target state="translated">GZip中间件</target>
        </trans-unit>
        <trans-unit id="200410f62b44123ec4e7adbf21839d4447d18a4f" translate="yes" xml:space="preserve">
          <source>General approaches</source>
          <target state="translated">一般性办法</target>
        </trans-unit>
        <trans-unit id="cc009d63c70477332d3b26a216df733ea65feb8d" translate="yes" xml:space="preserve">
          <source>General notes</source>
          <target state="translated">一般性说明</target>
        </trans-unit>
        <trans-unit id="9d25e59f9fe525c291ea22ff97d3ee08d153e3f5" translate="yes" xml:space="preserve">
          <source>General string handling</source>
          <target state="translated">一般字符串处理</target>
        </trans-unit>
        <trans-unit id="d5f448f0e52e9bd53410694159c4305fef042b26" translate="yes" xml:space="preserve">
          <source>General-purpose aggregation functions</source>
          <target state="translated">通用汇总功能</target>
        </trans-unit>
        <trans-unit id="6d6f1be7da3659b77585286c84135bee6dca31ad" translate="yes" xml:space="preserve">
          <source>Generally one&amp;rsquo;s first concern is to write code that &lt;em&gt;works&lt;/em&gt;, whose logic functions as required to produce the expected output. Sometimes, however, this will not be enough to make the code work as &lt;em&gt;efficiently&lt;/em&gt; as one would like.</source>
          <target state="translated">通常一个人首先关心的是编写代码&lt;em&gt;的作品&lt;/em&gt;，它的逻辑功能根据需要产生预期的输出。但是，有时候，这不足以使代码&lt;em&gt;高效地&lt;/em&gt;工作。</target>
        </trans-unit>
        <trans-unit id="2dc5a4b1cc3b7351074b95b062373b0aba4cd150" translate="yes" xml:space="preserve">
          <source>Generally speaking, it isn&amp;rsquo;t advisable to write to the database while generating a streaming response, since there&amp;rsquo;s no sensible way to handle errors after starting to send the response.</source>
          <target state="translated">一般来说，不建议在生成流式响应时写入数据库，因为在开始发送响应之后，没有明智的方式来处理错误。</target>
        </trans-unit>
        <trans-unit id="24f6155965c97a61b3e2ca7acf1734368fae7c53" translate="yes" xml:space="preserve">
          <source>Generally speaking, it&amp;rsquo;s easiest to refer to the user model with the &lt;a href=&quot;../../ref/settings#std:setting-AUTH_USER_MODEL&quot;&gt;&lt;code&gt;AUTH_USER_MODEL&lt;/code&gt;&lt;/a&gt; setting in code that&amp;rsquo;s executed at import time, however, it&amp;rsquo;s also possible to call &lt;code&gt;get_user_model()&lt;/code&gt; while Django is importing models, so you could use &lt;code&gt;models.ForeignKey(get_user_model(), ...)&lt;/code&gt;.</source>
          <target state="translated">一般来说，在导入时执行的代码中使用&lt;a href=&quot;../../ref/settings#std:setting-AUTH_USER_MODEL&quot;&gt; &lt;code&gt;AUTH_USER_MODEL&lt;/code&gt; &lt;/a&gt;设置引用用户模型是最简单的，但是，在Django导入模型时也可以调用 &lt;code&gt;get_user_model()&lt;/code&gt; ，因此可以使用 &lt;code&gt;models.ForeignKey(get_user_model(), ...)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cce2ca7c7d11755b7d8fc24c859449f56b8fef65" translate="yes" xml:space="preserve">
          <source>Generally speaking, the most appropriate level for the job is the lowest-level one that it is comfortable to code for.</source>
          <target state="translated">一般来说,最适合工作的级别是最低级的,它的代码是舒适的。</target>
        </trans-unit>
        <trans-unit id="41b1e6b41a8481cab01f2d9475db7f4cc68d9fff" translate="yes" xml:space="preserve">
          <source>Generally speaking, you can&amp;rsquo;t mix dates and datetimes.</source>
          <target state="translated">一般来说，您不能混合日期和日期时间。</target>
        </trans-unit>
        <trans-unit id="647ad5d5d9c98ce9c898d46505ef79c17373c595" translate="yes" xml:space="preserve">
          <source>Generally speaking, you should perform expensive tasks outside of the request-response cycle, rather than resorting to a streamed response.</source>
          <target state="translated">一般来说,你应该在请求-响应周期之外执行昂贵的任务,而不是求助于流式响应。</target>
        </trans-unit>
        <trans-unit id="9572adc989f39eaa9b2ba90d481456a7ec0a77df" translate="yes" xml:space="preserve">
          <source>Generally you can use &lt;a href=&quot;../../ref/class-based-views/mixins-simple#django.views.generic.base.TemplateResponseMixin&quot;&gt;&lt;code&gt;TemplateResponseMixin&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectMixin&quot;&gt;&lt;code&gt;SingleObjectMixin&lt;/code&gt;&lt;/a&gt; when you need their functionality. As shown above, with a bit of care you can even combine &lt;code&gt;SingleObjectMixin&lt;/code&gt; with &lt;a href=&quot;../../ref/class-based-views/generic-display#django.views.generic.list.ListView&quot;&gt;&lt;code&gt;ListView&lt;/code&gt;&lt;/a&gt;. However things get increasingly complex as you try to do so, and a good rule of thumb is:</source>
          <target state="translated">通常，需要功能时可以使用&lt;a href=&quot;../../ref/class-based-views/mixins-simple#django.views.generic.base.TemplateResponseMixin&quot;&gt; &lt;code&gt;TemplateResponseMixin&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectMixin&quot;&gt; &lt;code&gt;SingleObjectMixin&lt;/code&gt; &lt;/a&gt;。如上所示， &lt;code&gt;SingleObjectMixin&lt;/code&gt; 注意，您甚至可以将SingleObjectMixin与&lt;a href=&quot;../../ref/class-based-views/generic-display#django.views.generic.list.ListView&quot;&gt; &lt;code&gt;ListView&lt;/code&gt; &lt;/a&gt;结合使用。但是，随着您尝试这样做，事情变得越来越复杂，一个好的经验法则是：</target>
        </trans-unit>
        <trans-unit id="527756bcb892560130d98a9a313a05a11a3d384e" translate="yes" xml:space="preserve">
          <source>Generally, &lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt; instances should go in the object that&amp;rsquo;s going to be edited on a form. In the above example, &lt;code&gt;toppings&lt;/code&gt; is in &lt;code&gt;Pizza&lt;/code&gt; (rather than &lt;code&gt;Topping&lt;/code&gt; having a &lt;code&gt;pizzas&lt;/code&gt;&lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt; ) because it&amp;rsquo;s more natural to think about a pizza having toppings than a topping being on multiple pizzas. The way it&amp;rsquo;s set up above, the &lt;code&gt;Pizza&lt;/code&gt; form would let users select the toppings.</source>
          <target state="translated">通常，&lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt; &lt;code&gt;ManyToManyField&lt;/code&gt; &lt;/a&gt;实例应放入要在表单上进行编辑的对象中。在上述例子中， &lt;code&gt;toppings&lt;/code&gt; 是 &lt;code&gt;Pizza&lt;/code&gt; （而不是 &lt;code&gt;Topping&lt;/code&gt; 具有 &lt;code&gt;pizzas&lt;/code&gt; &lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt; &lt;code&gt;ManyToManyField&lt;/code&gt; &lt;/a&gt;），因为它更自然地想到具有约比浇头比萨饼顶覆是在多个比萨饼。上面的设置方式， &lt;code&gt;Pizza&lt;/code&gt; 表单使用户可以选择浇头。</target>
        </trans-unit>
        <trans-unit id="c75c67a262a34c0f2e38d35a45a89fab845848f8" translate="yes" xml:space="preserve">
          <source>Generally, &lt;code&gt;get_context_data&lt;/code&gt; will merge the context data of all parent classes with those of the current class. To preserve this behavior in your own classes where you want to alter the context, you should be sure to call &lt;code&gt;get_context_data&lt;/code&gt; on the super class. When no two classes try to define the same key, this will give the expected results. However if any class attempts to override a key after parent classes have set it (after the call to super), any children of that class will also need to explicitly set it after super if they want to be sure to override all parents. If you&amp;rsquo;re having trouble, review the method resolution order of your view.</source>
          <target state="translated">通常， &lt;code&gt;get_context_data&lt;/code&gt; 会将所有父类的上下文数据与当前类的上下文数据合并。为了在要更改上下文的自己的类中保留此行为，应确保在超类上调用 &lt;code&gt;get_context_data&lt;/code&gt; 。当没有两个类尝试定义相同的键时，这将提供预期的结果。但是，如果任何类尝试在父类设置完键之后（在调用super之后）覆盖该键，则该类的所有子级也需要在super之后显式设置它，以确保覆盖所有父键。如果遇到问题，请查看视图的方法解析顺序。</target>
        </trans-unit>
        <trans-unit id="c3d5b0cf1a6be796edc01b1a5da01e9211d76d6a" translate="yes" xml:space="preserve">
          <source>Generally, &lt;code&gt;string_if_invalid&lt;/code&gt; should only be enabled in order to debug a specific template problem, then cleared once debugging is complete.</source>
          <target state="translated">通常，仅应启用 &lt;code&gt;string_if_invalid&lt;/code&gt; 才能调试特定的模板问题，然后在调试完成后将其清除。</target>
        </trans-unit>
        <trans-unit id="443c04d1837565ab4b87d181a52fd743f9cae91a" translate="yes" xml:space="preserve">
          <source>Generally, a view retrieves data according to the parameters, loads a template and renders the template with the retrieved data. Here&amp;rsquo;s an example view for &lt;code&gt;year_archive&lt;/code&gt; from above:</source>
          <target state="translated">通常，视图根据参数检索数据，加载模板并使用检索到的数据渲染模板。这是上面的 &lt;code&gt;year_archive&lt;/code&gt; 的示例视图：</target>
        </trans-unit>
        <trans-unit id="0c77575814a624548a0f1612bf97578af76953c9" translate="yes" xml:space="preserve">
          <source>Generally, if a variable doesn&amp;rsquo;t exist, the template system inserts the value of the engine&amp;rsquo;s &lt;code&gt;string_if_invalid&lt;/code&gt; configuration option, which is set to &lt;code&gt;''&lt;/code&gt; (the empty string) by default.</source>
          <target state="translated">通常，如果变量不存在，则模板系统会插入引擎的 &lt;code&gt;string_if_invalid&lt;/code&gt; 配置选项的值，该选项默认情况下设置为 &lt;code&gt;''&lt;/code&gt; （空字符串）。</target>
        </trans-unit>
        <trans-unit id="92a32cd2b90c5fd5f36cf2640c5f30799c071ce2" translate="yes" xml:space="preserve">
          <source>Generally, it&amp;rsquo;s best to define choices inside a model class, and to define a suitably-named constant for each value:</source>
          <target state="translated">通常，最好在模型类中定义选择，并为每个值定义一个适当命名的常量：</target>
        </trans-unit>
        <trans-unit id="7e4d313447d91008ef41337c3ee0b186df1484bc" translate="yes" xml:space="preserve">
          <source>Generally, slicing a &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; returns a new &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; &amp;ndash; it doesn&amp;rsquo;t evaluate the query. An exception is if you use the &amp;ldquo;step&amp;rdquo; parameter of Python slice syntax. For example, this would actually execute the query in order to return a list of every &lt;em&gt;second&lt;/em&gt; object of the first 10:</source>
          <target state="translated">通常，对&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; 进行&lt;/a&gt;切片会返回一个新的&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt; &amp;ndash;它不评估查询。如果您使用Python slice语法的&amp;ldquo; step&amp;rdquo;参数，则是一个例外。例如，这实际上将执行查询，以便返回前10 &lt;em&gt;个&lt;/em&gt;对象的每个&lt;em&gt;第二个&lt;/em&gt;对象的列表：</target>
        </trans-unit>
        <trans-unit id="7bfc57bad218eacb80f36721cb04e3614e67e865" translate="yes" xml:space="preserve">
          <source>Generally, something like the above isn&amp;rsquo;t considered a great idea. Most of the time, the best practice will be to return an &lt;a href=&quot;../../request-response#django.http.HttpResponseRedirect&quot;&gt;&lt;code&gt;HttpResponseRedirect&lt;/code&gt;&lt;/a&gt; and redirect the user to a view you&amp;rsquo;ve written, passing the list of selected objects in the GET query string. This allows you to provide complex interaction logic on the intermediary pages. For example, if you wanted to provide a more complete export function, you&amp;rsquo;d want to let the user choose a format, and possibly a list of fields to include in the export. The best thing to do would be to write a small action that redirects to your custom export view:</source>
          <target state="translated">通常，上述情况并不是一个好主意。在大多数情况下，最佳实践是返回&lt;a href=&quot;../../request-response#django.http.HttpResponseRedirect&quot;&gt; &lt;code&gt;HttpResponseRedirect&lt;/code&gt; &lt;/a&gt;并将用户重定向到您编写的视图，并在GET查询字符串中传递所选对象的列表。这使您可以在中间页面上提供复杂的交互逻辑。例如，如果您想提供更完整的导出功能，则希望让用户选择一种格式，并可能选择要包含在导出中的字段列表。最好的办法是编写一个小型操作，将其重定向到您的自定义导出视图：</target>
        </trans-unit>
        <trans-unit id="56be6c441bd144d493f92171e1bc7712fc16427c" translate="yes" xml:space="preserve">
          <source>Generally, template authors don&amp;rsquo;t need to worry about auto-escaping very much. Developers on the Python side (people writing views and custom filters) need to think about the cases in which data shouldn&amp;rsquo;t be escaped, and mark data appropriately, so things Just Work in the template.</source>
          <target state="translated">通常，模板作者不需要担心自动转义。Python方面的开发人员（编写视图和自定义过滤器的人员）需要考虑不应该转义数据的情况，并适当地标记数据，以便在模板中正常工作。</target>
        </trans-unit>
        <trans-unit id="27ed1f3562f09d7b3deaadb1e45e59d35ebcea77" translate="yes" xml:space="preserve">
          <source>Generally, the correct solution is to change your code to use an aware datetime instead.</source>
          <target state="translated">一般来说,正确的解决方案是改变你的代码,使用一个有意识的日期时间来代替。</target>
        </trans-unit>
        <trans-unit id="eb47639ff76881dfa64a9d2bdd365dbcf0e3fe65" translate="yes" xml:space="preserve">
          <source>Generally, the default value should suffice. Only set this setting if you want to restrict language selection to a subset of the Django-provided languages.</source>
          <target state="translated">一般来说,默认值就可以了。只有当你想将语言选择限制在Django提供的语言子集时,才需要设置此设置。</target>
        </trans-unit>
        <trans-unit id="6cef6ee0893a2489e91dd154fc9e7ee5cc0e3005" translate="yes" xml:space="preserve">
          <source>Generally, the default value should suffice. Only set this setting if you want to restrict language selection to a subset of the Django-provided languages. If you define a custom &lt;a href=&quot;#std:setting-LANGUAGES&quot;&gt;&lt;code&gt;LANGUAGES&lt;/code&gt;&lt;/a&gt; setting, the list of bidirectional languages may contain language codes which are not enabled on a given site.</source>
          <target state="translated">通常，默认值就足够了。仅在要将语言选择限制为Django提供的语言的子集时才设置此设置。如果您定义自定义&lt;a href=&quot;#std:setting-LANGUAGES&quot;&gt; &lt;code&gt;LANGUAGES&lt;/code&gt; &lt;/a&gt;设置，则双向语言列表可能包含在给定站点上未启用的语言代码。</target>
        </trans-unit>
        <trans-unit id="319c714cbc952fc158b189c40cb203831d68b6c9" translate="yes" xml:space="preserve">
          <source>Generally, when working on a single Django project, it&amp;rsquo;s easier to use &lt;code&gt;manage.py&lt;/code&gt; than &lt;code&gt;django-admin&lt;/code&gt;. If you need to switch between multiple Django settings files, use &lt;code&gt;django-admin&lt;/code&gt; with &lt;a href=&quot;../topics/settings#envvar-DJANGO_SETTINGS_MODULE&quot; id=&quot;index-1&quot;&gt;&lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt;&lt;/a&gt; or the &lt;a href=&quot;#cmdoption-settings&quot;&gt;&lt;code&gt;--settings&lt;/code&gt;&lt;/a&gt; command line option.</source>
          <target state="translated">通常，在处理单个Django项目时，使用 &lt;code&gt;manage.py&lt;/code&gt; 比 &lt;code&gt;django-admin&lt;/code&gt; 更容易。如果需要在多个Django设置文件之间切换，请使用 &lt;code&gt;django-admin&lt;/code&gt; 和&lt;a href=&quot;../topics/settings#envvar-DJANGO_SETTINGS_MODULE&quot; id=&quot;index-1&quot;&gt; &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#cmdoption-settings&quot;&gt; &lt;code&gt;--settings&lt;/code&gt; &lt;/a&gt;命令行选项。</target>
        </trans-unit>
        <trans-unit id="f887d501c8d01a35b48d29631cb2040eeb658701" translate="yes" xml:space="preserve">
          <source>Generally, when writing a Django app, you&amp;rsquo;ll evaluate whether generic views are a good fit for your problem, and you&amp;rsquo;ll use them from the beginning, rather than refactoring your code halfway through. But this tutorial intentionally has focused on writing the views &amp;ldquo;the hard way&amp;rdquo; until now, to focus on core concepts.</source>
          <target state="translated">通常，在编写Django应用程序时，您将评估通用视图是否适合您的问题，并且将从一开始就使用它们，而不是半途重构代码。但是，到目前为止，本教程故意将重点放在&amp;ldquo;困难的方式&amp;rdquo;视图上，以关注核心概念。</target>
        </trans-unit>
        <trans-unit id="d2cabdf30edfb04025f5c5d082a12b4e021f8810" translate="yes" xml:space="preserve">
          <source>Generally, you should avoid converting a &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt;. For instance, you can use the &lt;a href=&quot;../../ref/templates/builtins#std:templatefilter-date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt; template filter to only show the date part of a datetime. This filter will convert the datetime into the current time zone before formatting it, ensuring the results appear correctly.</source>
          <target state="translated">通常，您应该避免将&lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;转换为&lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.date&quot;&gt; &lt;code&gt;date&lt;/code&gt; &lt;/a&gt;。例如，您可以使用&lt;a href=&quot;../../ref/templates/builtins#std:templatefilter-date&quot;&gt; &lt;code&gt;date&lt;/code&gt; &lt;/a&gt;模板过滤器仅显示日期时间的日期部分。此过滤器会在格式化日期时间之前将日期时间转换为当前时区，以确保结果正确显示。</target>
        </trans-unit>
        <trans-unit id="0990f513d5c0effdf4a377d7f04ce84086b2d68d" translate="yes" xml:space="preserve">
          <source>Generally, you won&amp;rsquo;t need to inherit from multiple parents. The main use-case where this is useful is for &amp;ldquo;mix-in&amp;rdquo; classes: adding a particular extra field or method to every class that inherits the mix-in. Try to keep your inheritance hierarchies as simple and straightforward as possible so that you won&amp;rsquo;t have to struggle to work out where a particular piece of information is coming from.</source>
          <target state="translated">通常，您不需要从多个父母那里继承。有用的主要用例是&amp;ldquo;混入&amp;rdquo;类：向继承混入的每个类添加特定的额外字段或方法。尝试使继承层次结构尽可能简单明了，这样您就不必费力找出特定信息的来源。</target>
        </trans-unit>
        <trans-unit id="002ec76556b82bbbbcb60321162dcb04354ff2b8" translate="yes" xml:space="preserve">
          <source>Generally, you&amp;rsquo;ll store templates in files on your filesystem rather than using the low-level &lt;a href=&quot;#django.template.Template&quot;&gt;&lt;code&gt;Template&lt;/code&gt;&lt;/a&gt; API yourself. Save templates in a directory specified as a &lt;strong&gt;template directory&lt;/strong&gt;.</source>
          <target state="translated">通常，您将模板存储在文件系统上的文件中，而不是自己使用低级&lt;a href=&quot;#django.template.Template&quot;&gt; &lt;code&gt;Template&lt;/code&gt; &lt;/a&gt; API。将模板保存在指定为&lt;strong&gt;模板目录的目录中&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="64c3678f265c4b6f9178283fbd7fc418e2ad8790" translate="yes" xml:space="preserve">
          <source>Generate migration files without Django version and timestamp header.</source>
          <target state="translated">生成没有Django版本和时间戳头的迁移文件。</target>
        </trans-unit>
        <trans-unit id="c5825daab40bbc561a3ed313a76db995a0d8af36" translate="yes" xml:space="preserve">
          <source>Generate squashed migration file without Django version and timestamp header.</source>
          <target state="translated">生成没有Django版本和时间戳头的压扁迁移文件。</target>
        </trans-unit>
        <trans-unit id="37b0ace3843507d7ca5e2a84b3831e29036c762c" translate="yes" xml:space="preserve">
          <source>Generate two empty migration files for the same app by running &lt;code&gt;makemigrations myapp --empty&lt;/code&gt; twice. We&amp;rsquo;ve renamed the migration files to give them meaningful names in the examples below.</source>
          <target state="translated">通过两次运行 &lt;code&gt;makemigrations myapp --empty&lt;/code&gt; 为同一应用程序生成两个空的迁移文件。在下面的示例中，我们将迁移文件重命名为它们以有意义的名称命名。</target>
        </trans-unit>
        <trans-unit id="6ecdf7dadc0bc7b684b3bcd576a037fd41031280" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;__str__()&lt;/code&gt; method on the model that returns the given field name.</source>
          <target state="translated">在返回给定字段名称的模型上生成 &lt;code&gt;__str__()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="a9a0484765197eb2305b98f6cd9fc6e71d1f3034" translate="yes" xml:space="preserve">
          <source>Generates the SQL for the database function.</source>
          <target state="translated">生成数据库函数的SQL。</target>
        </trans-unit>
        <trans-unit id="97469305be1d987a5209d9a384da92ab8de38e60" translate="yes" xml:space="preserve">
          <source>Generates the SQL for unapplying the migration. By default, the SQL created is for running the migration in the forwards direction.</source>
          <target state="translated">生成用于解除应用迁移的SQL。默认情况下,所创建的SQL是用于向前方运行迁移。</target>
        </trans-unit>
        <trans-unit id="cdecb6b6aa19a312faa26c88a687d99f1eadaac3" translate="yes" xml:space="preserve">
          <source>Generates the SQL fragment for the database function. Returns a tuple &lt;code&gt;(sql, params)&lt;/code&gt;, where &lt;code&gt;sql&lt;/code&gt; is the SQL string, and &lt;code&gt;params&lt;/code&gt; is the list or tuple of query parameters.</source>
          <target state="translated">生成数据库功能的SQL片段。返回一个元组 &lt;code&gt;(sql, params)&lt;/code&gt; ，其中 &lt;code&gt;sql&lt;/code&gt; 是SQL字符串，而 &lt;code&gt;params&lt;/code&gt; 是查询参数的列表或元组。</target>
        </trans-unit>
        <trans-unit id="caa0bcfdd5f9f4eb83783b1b5f46b80525e05350" translate="yes" xml:space="preserve">
          <source>Generates the SQL fragment for the expression. Returns a tuple &lt;code&gt;(sql, params)&lt;/code&gt;, where &lt;code&gt;sql&lt;/code&gt; is the SQL string, and &lt;code&gt;params&lt;/code&gt; is the list or tuple of query parameters. The &lt;code&gt;compiler&lt;/code&gt; is an &lt;code&gt;SQLCompiler&lt;/code&gt; object, which has a &lt;code&gt;compile()&lt;/code&gt; method that can be used to compile other expressions. The &lt;code&gt;connection&lt;/code&gt; is the connection used to execute the query.</source>
          <target state="translated">生成表达式的SQL片段。返回一个元组 &lt;code&gt;(sql, params)&lt;/code&gt; ，其中 &lt;code&gt;sql&lt;/code&gt; 是SQL字符串，而 &lt;code&gt;params&lt;/code&gt; 是查询参数的列表或元组。所述 &lt;code&gt;compiler&lt;/code&gt; 是一个 &lt;code&gt;SQLCompiler&lt;/code&gt; 对象，它具有一个 &lt;code&gt;compile()&lt;/code&gt; 可以被用于其它的表达方法。该 &lt;code&gt;connection&lt;/code&gt; 是用于执行查询的连接。</target>
        </trans-unit>
        <trans-unit id="63982e5335ffb2308b26af6c005f638092b3ea09" translate="yes" xml:space="preserve">
          <source>Generating &amp;ldquo;recover my account&amp;rdquo; URLs for sending to users who have lost their password.</source>
          <target state="translated">生成&amp;ldquo;恢复我的帐户&amp;rdquo; URL，以发送给丢失密码的用户。</target>
        </trans-unit>
        <trans-unit id="7479ec37b32ba74fe2dad06103dd686c2a02418a" translate="yes" xml:space="preserve">
          <source>Generating admin sites for your staff or clients to add, change, and delete content is tedious work that doesn&amp;rsquo;t require much creativity. For that reason, Django entirely automates creation of admin interfaces for models.</source>
          <target state="translated">为您的员工或客户生成管理网站以添加，更改和删除内容是繁琐的工作，不需要太多的创造力。因此，Django完全自动化了模型管理界面的创建。</target>
        </trans-unit>
        <trans-unit id="c188d3cb4928f6d0b6873ba0fe2f329a09ad77a4" translate="yes" xml:space="preserve">
          <source>Generating aggregates for each item in a &lt;code&gt;QuerySet&lt;/code&gt;</source>
          <target state="translated">为 &lt;code&gt;QuerySet&lt;/code&gt; 中的每个项目生成聚合</target>
        </trans-unit>
        <trans-unit id="249a34757e80bf41675fd5092f7d9d1cafd85921" translate="yes" xml:space="preserve">
          <source>Generating aggregates over a &lt;code&gt;QuerySet&lt;/code&gt;</source>
          <target state="translated">通过 &lt;code&gt;QuerySet&lt;/code&gt; 生成聚合</target>
        </trans-unit>
        <trans-unit id="f9c0b669418b95568aebff998fd28475a3840373" translate="yes" xml:space="preserve">
          <source>Generating one-time secret URLs for allowing temporary access to a protected resource, for example a downloadable file that a user has paid for.</source>
          <target state="translated">生成一次性的秘密URL,允许临时访问受保护的资源,例如用户付费下载的文件。</target>
        </trans-unit>
        <trans-unit id="57a711145988aff1f4c5baf8a2a956889bb3e41c" translate="yes" xml:space="preserve">
          <source>Generic date views</source>
          <target state="translated">通用日期视图</target>
        </trans-unit>
        <trans-unit id="1a969e34061b2510afad161402a65f214f5ce9c7" translate="yes" xml:space="preserve">
          <source>Generic display views</source>
          <target state="translated">通用显示视图</target>
        </trans-unit>
        <trans-unit id="82e089b93305d3c5e37400a98008314ffb3a857f" translate="yes" xml:space="preserve">
          <source>Generic editing views</source>
          <target state="translated">通用编辑视图</target>
        </trans-unit>
        <trans-unit id="c1472da43eb9fb9463431ec699f3ea11115b8c35" translate="yes" xml:space="preserve">
          <source>Generic relation in forms</source>
          <target state="translated">通用关系的形式</target>
        </trans-unit>
        <trans-unit id="7e709568eb3d50865428def64345bd0c2f85ed41" translate="yes" xml:space="preserve">
          <source>Generic relations</source>
          <target state="translated">通用关系</target>
        </trans-unit>
        <trans-unit id="8b7efda9768e9d595d8fd92272959ad354f99b4e" translate="yes" xml:space="preserve">
          <source>Generic relations and aggregation</source>
          <target state="translated">通用关系和聚合</target>
        </trans-unit>
        <trans-unit id="2bd47084ada78ba1518e4110743b0bafb569f442" translate="yes" xml:space="preserve">
          <source>Generic relations in admin</source>
          <target state="translated">管理中的通用关系</target>
        </trans-unit>
        <trans-unit id="5501abd5185b3c6248d23e02a1ce2bfbd96f81c6" translate="yes" xml:space="preserve">
          <source>Generic views</source>
          <target state="translated">通用观点</target>
        </trans-unit>
        <trans-unit id="15919fc89293c3e5202f8b37a376f8b03e8dab06" translate="yes" xml:space="preserve">
          <source>Generic views abstract common patterns to the point where you don&amp;rsquo;t even need to write Python code to write an app.</source>
          <target state="translated">通用视图将通用模式抽象为您甚至不需要编写Python代码即可编写应用程序的地步。</target>
        </trans-unit>
        <trans-unit id="df3e431d9c3a0b2572058f247141a08fa73367eb" translate="yes" xml:space="preserve">
          <source>Generic views of objects</source>
          <target state="translated">对象的通用视图</target>
        </trans-unit>
        <trans-unit id="f884a81c2e23678106660b59e835282a2b0244e7" translate="yes" xml:space="preserve">
          <source>Generic views really shine when working with models. These generic views will automatically create a &lt;a href=&quot;../forms/modelforms#django.forms.ModelForm&quot;&gt;&lt;code&gt;ModelForm&lt;/code&gt;&lt;/a&gt;, so long as they can work out which model class to use:</source>
          <target state="translated">使用模型时，泛型视图确实发光。这些通用视图将自动创建&lt;a href=&quot;../forms/modelforms#django.forms.ModelForm&quot;&gt; &lt;code&gt;ModelForm&lt;/code&gt; &lt;/a&gt;，只要它们能够确定要使用的模型类即可：</target>
        </trans-unit>
        <trans-unit id="76b44973a843d3bcdd7b8f1a980cd4b03a025fb9" translate="yes" xml:space="preserve">
          <source>GeoDjango</source>
          <target state="translated">GeoDjango</target>
        </trans-unit>
        <trans-unit id="fb8d70b0b197a9acece10c07e4c7fdd557f1be8e" translate="yes" xml:space="preserve">
          <source>GeoDjango Database API</source>
          <target state="translated">GeoDjango数据库API</target>
        </trans-unit>
        <trans-unit id="e8b7a06075e0a1b414b6c69d16be262829e002f4" translate="yes" xml:space="preserve">
          <source>GeoDjango Forms API</source>
          <target state="translated">GeoDjango表单API</target>
        </trans-unit>
        <trans-unit id="bfae1f1236df0250ad2ce27a6481102c026c4cdd" translate="yes" xml:space="preserve">
          <source>GeoDjango Installation</source>
          <target state="translated">GeoDjango安装</target>
        </trans-unit>
        <trans-unit id="94028033177f0a25ff8cb38b0aa2bbb9f98c96f5" translate="yes" xml:space="preserve">
          <source>GeoDjango Management Commands</source>
          <target state="translated">GeoDjango管理命令</target>
        </trans-unit>
        <trans-unit id="877a1bb2c6226b98095871dfb623f83abe458ba7" translate="yes" xml:space="preserve">
          <source>GeoDjango Model API</source>
          <target state="translated">GeoDjango模型API</target>
        </trans-unit>
        <trans-unit id="a20664c0b4bdfe6af8891c490a1ffdb9c5c615f6" translate="yes" xml:space="preserve">
          <source>GeoDjango Tutorial</source>
          <target state="translated">GeoDjango教程</target>
        </trans-unit>
        <trans-unit id="4de4647b8b51ad2ab3a1c065a89ba222dd9856dc" translate="yes" xml:space="preserve">
          <source>GeoDjango Utilities</source>
          <target state="translated">GeoDjango实用工具</target>
        </trans-unit>
        <trans-unit id="71c062fc8ed04aae09d37692b07d1224332f91ae" translate="yes" xml:space="preserve">
          <source>GeoDjango adds spatial lookups to the Django ORM. For example, you can find the country in the &lt;code&gt;WorldBorder&lt;/code&gt; table that contains a particular point. First, fire up the management shell:</source>
          <target state="translated">GeoDjango将空间查找添加到Django ORM。例如，您可以在 &lt;code&gt;WorldBorder&lt;/code&gt; 表中找到包含特定点的国家。首先，启动管理外壳：</target>
        </trans-unit>
        <trans-unit id="1749a1cb1bb9c2f6ff6dd7bcf0cd20f0a7abeb48" translate="yes" xml:space="preserve">
          <source>GeoDjango also offers a set of geographic annotations to compute distances and several other operations (intersection, difference, etc.). See the &lt;a href=&quot;functions&quot;&gt;Geographic Database Functions&lt;/a&gt; documentation.</source>
          <target state="translated">GeoDjango还提供了一组地理注释来计算距离和其他一些操作（交集，差等）。请参阅&lt;a href=&quot;functions&quot;&gt;地理数据库功能&lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="5fc82cd8e43f8819ca610e94617381d8c61b6275" translate="yes" xml:space="preserve">
          <source>GeoDjango also supplements the Django admin by allowing users to create and modify geometries on a JavaScript slippy map (powered by &lt;a href=&quot;https://openlayers.org/&quot;&gt;OpenLayers&lt;/a&gt;).</source>
          <target state="translated">GeoDjango还通过允许用户在JavaScript滑动地图（由&lt;a href=&quot;https://openlayers.org/&quot;&gt;OpenLayers&lt;/a&gt;提供支持）上创建和修改几何来补充Django管理员。</target>
        </trans-unit>
        <trans-unit id="3e011aaadd25f116aa5b636795a71dae045f10ff" translate="yes" xml:space="preserve">
          <source>GeoDjango basic apps was written by Dane Springmeyer, Josh Livni, and Christopher Schmidt.</source>
          <target state="translated">GeoDjango基本应用由Dane Springmeyer、Josh Livni和Christopher Schmidt编写。</target>
        </trans-unit>
        <trans-unit id="abd937d2340abf6ba15de6356c4aacb77d4b2142" translate="yes" xml:space="preserve">
          <source>GeoDjango currently provides the following spatial database backends:</source>
          <target state="translated">GeoDjango目前提供了以下空间数据库后端。</target>
        </trans-unit>
        <trans-unit id="193f1930c783c95f77007577bf72364906fe021a" translate="yes" xml:space="preserve">
          <source>GeoDjango does not currently leverage any &lt;a href=&quot;https://postgis.net/docs/Topology.html&quot;&gt;PostGIS topology functionality&lt;/a&gt;. If you plan to use those features at some point, you can also install the &lt;code&gt;postgis_topology&lt;/code&gt; extension by issuing &lt;code&gt;CREATE EXTENSION
postgis_topology;&lt;/code&gt;.</source>
          <target state="translated">GeoDjango当前不使用任何&lt;a href=&quot;https://postgis.net/docs/Topology.html&quot;&gt;PostGIS拓扑功能&lt;/a&gt;。如果您打算在某个时候使用这些功能，则还可以通过发出 &lt;code&gt;CREATE EXTENSION postgis_topology;&lt;/code&gt; 来安装 &lt;code&gt;postgis_topology&lt;/code&gt; 扩展。。</target>
        </trans-unit>
        <trans-unit id="1682f728f18526e820eaadb4fadcdae630e84a84" translate="yes" xml:space="preserve">
          <source>GeoDjango extends &lt;a href=&quot;../admin/index&quot;&gt;Django&amp;rsquo;s admin application&lt;/a&gt; with support for editing geometry fields.</source>
          <target state="translated">GeoDjango 通过支持编辑几何字段扩展了&lt;a href=&quot;../admin/index&quot;&gt;Django的管理应用程序&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e16764ce538d1743a7883a90a8a47d871b7df216" translate="yes" xml:space="preserve">
          <source>GeoDjango form widgets allow you to display and edit geographic data on a visual map. Note that none of the currently available widgets supports 3D geometries, hence geometry fields will fallback using a &lt;code&gt;Textarea&lt;/code&gt; widget for such data.</source>
          <target state="translated">GeoDjango表单小部件可让您在可视地图上显示和编辑地理数据。请注意，当前没有可用的窗口小部件均不支持3D几何，因此，使用 &lt;code&gt;Textarea&lt;/code&gt; 小部件获取此类数据时，几何字段将回退。</target>
        </trans-unit>
        <trans-unit id="891d521a99f30d373b9dbd444935c8ffc39cb360" translate="yes" xml:space="preserve">
          <source>GeoDjango has additional requirements beyond what Django requires &amp;ndash; please consult the &lt;a href=&quot;install/index&quot;&gt;installation documentation&lt;/a&gt; for more details.</source>
          <target state="translated">除了Django的要求外，GeoDjango还有其他要求-请参阅&lt;a href=&quot;install/index&quot;&gt;安装文档&lt;/a&gt;以获取更多详细信息。</target>
        </trans-unit>
        <trans-unit id="8980cfb9c1e99c6e3e7db0a490d95a1d8c44b809" translate="yes" xml:space="preserve">
          <source>GeoDjango has its own &lt;a href=&quot;#django.contrib.gis.feeds.Feed&quot;&gt;&lt;code&gt;Feed&lt;/code&gt;&lt;/a&gt; subclass that may embed location information in RSS/Atom feeds formatted according to either the &lt;a href=&quot;http://georss.org/simple.html&quot;&gt;Simple GeoRSS&lt;/a&gt; or &lt;a href=&quot;https://www.w3.org/2003/01/geo/&quot;&gt;W3C Geo&lt;/a&gt; standards. Because GeoDjango&amp;rsquo;s syndication API is a superset of Django&amp;rsquo;s, please consult &lt;a href=&quot;../syndication&quot;&gt;Django&amp;rsquo;s syndication documentation&lt;/a&gt; for details on general usage.</source>
          <target state="translated">GeoDjango有其自己的&lt;a href=&quot;#django.contrib.gis.feeds.Feed&quot;&gt; &lt;code&gt;Feed&lt;/code&gt; &lt;/a&gt;子类，可以将位置信息嵌入根据&lt;a href=&quot;http://georss.org/simple.html&quot;&gt;Simple GeoRSS&lt;/a&gt;或&lt;a href=&quot;https://www.w3.org/2003/01/geo/&quot;&gt;W3C Geo&lt;/a&gt;标准格式化的RSS / Atom feed中。由于GeoDjango的联合发布API是Django的超集，因此请查阅&lt;a href=&quot;../syndication&quot;&gt;Django联合发布文档&lt;/a&gt;以获取常规用法的详细信息。</target>
        </trans-unit>
        <trans-unit id="ac4759afcd67a7889efe287968c488637e7e4154" translate="yes" xml:space="preserve">
          <source>GeoDjango implements a high-level Python wrapper for the GEOS library, its features include:</source>
          <target state="translated">GeoDjango实现了对GEOS库的高级Python封装,其功能包括:1:</target>
        </trans-unit>
        <trans-unit id="8691a07ec4db590c21d008e1c7f51f869c746078" translate="yes" xml:space="preserve">
          <source>GeoDjango intends to be a world-class geographic Web framework. Its goal is to make it as easy as possible to build GIS Web applications and harness the power of spatially enabled data.</source>
          <target state="translated">GeoDjango旨在成为一个世界级的地理网络框架。它的目标是使其尽可能容易地建立地理信息系统网络应用和利用空间数据的力量。</target>
        </trans-unit>
        <trans-unit id="dc3067870d1f5805bbf4b0ad3a4048675cf2e61a" translate="yes" xml:space="preserve">
          <source>GeoDjango is an included contrib module for Django that turns it into a world-class geographic Web framework. GeoDjango strives to make it as simple as possible to create geographic Web applications, like location-based services. Its features include:</source>
          <target state="translated">GeoDjango是一个包含在Django中的contrib模块,它将Django变成一个世界级的地理网络框架。GeoDjango致力于让创建地理Web应用变得尽可能简单,比如基于位置的服务。它的功能包括</target>
        </trans-unit>
        <trans-unit id="f79e051bc0b9bb1a9bb29e9666937dde2f48eaa1" translate="yes" xml:space="preserve">
          <source>GeoDjango loads geometries in a standardized textual representation. When the geometry field is first accessed, GeoDjango creates a &lt;a href=&quot;geos#django.contrib.gis.geos.GEOSGeometry&quot;&gt;&lt;code&gt;GEOSGeometry&lt;/code&gt;&lt;/a&gt; object, exposing powerful functionality, such as serialization properties for popular geospatial formats:</source>
          <target state="translated">GeoDjango以标准化的文本表示形式加载几何。首次访问几何字段时，GeoDjango将创建&lt;a href=&quot;geos#django.contrib.gis.geos.GEOSGeometry&quot;&gt; &lt;code&gt;GEOSGeometry&lt;/code&gt; &lt;/a&gt;对象，以提供强大的功能，例如流行的地理空间格式的序列化属性：</target>
        </trans-unit>
        <trans-unit id="cddbaf21c073b2a21bf62f706b2d1a36600503f4" translate="yes" xml:space="preserve">
          <source>GeoDjango provides a high-level Python interface for some of the capabilities of OGR, including the reading and coordinate transformation of vector spatial data and minimal support for GDAL&amp;rsquo;s features with respect to raster (image) data.</source>
          <target state="translated">GeoDjango为OGR的某些功能提供了高级Python界面，包括矢量空间数据的读取和坐标转换以及对栅格（图像）数据的GDAL功能的最小支持。</target>
        </trans-unit>
        <trans-unit id="8ab177579f297197692478183f417ff98d86a3b9" translate="yes" xml:space="preserve">
          <source>GeoDjango provides a specific serializer for the &lt;a href=&quot;https://geojson.org/&quot;&gt;GeoJSON&lt;/a&gt; format. See &lt;a href=&quot;../../../topics/serialization&quot;&gt;Serializing Django objects&lt;/a&gt; for more information on serialization.</source>
          <target state="translated">GeoDjango为&lt;a href=&quot;https://geojson.org/&quot;&gt;GeoJSON&lt;/a&gt;格式提供了一个特定的序列化器。有关&lt;a href=&quot;../../../topics/serialization&quot;&gt;序列化&lt;/a&gt;的更多信息，请参见序列化Django对象。</target>
        </trans-unit>
        <trans-unit id="c6f946f97cdb6a58a41890ac734eee51f28851ab" translate="yes" xml:space="preserve">
          <source>GeoDjango provides some specialized form fields and widgets in order to visually display and edit geolocalized data on a map. By default, they use &lt;a href=&quot;https://openlayers.org/&quot;&gt;OpenLayers&lt;/a&gt;-powered maps, with a base WMS layer provided by &lt;a href=&quot;https://earthdata.nasa.gov/&quot;&gt;NASA&lt;/a&gt;.</source>
          <target state="translated">GeoDjango提供了一些专用的表单字段和小部件，以便在地图上直观地显示和编辑地理定位的数据。默认情况下，他们使用由&lt;a href=&quot;https://openlayers.org/&quot;&gt;OpenLayers支持的&lt;/a&gt;地图，并由&lt;a href=&quot;https://earthdata.nasa.gov/&quot;&gt;NASA&lt;/a&gt;提供基本WMS图层。</target>
        </trans-unit>
        <trans-unit id="98075c705db0a9e3c5b3b71dc6c87a9bcbadfa67" translate="yes" xml:space="preserve">
          <source>GeoDjango tests</source>
          <target state="translated">GeoDjango测试</target>
        </trans-unit>
        <trans-unit id="9c538087cb08785ef5d39189792a0d2ae13b7b4e" translate="yes" xml:space="preserve">
          <source>GeoDjango uses and/or provides interfaces for the following open source geospatial libraries:</source>
          <target state="translated">GeoDjango使用和/或提供以下开源地理空间库的接口。</target>
        </trans-unit>
        <trans-unit id="e7fc3d592fa359935e1ebdcd77cec13e8dffc4dc" translate="yes" xml:space="preserve">
          <source>GeoDjango uses the &lt;a href=&quot;https://docs.python.org/3/library/ctypes.html#ctypes.util.find_library&quot;&gt;&lt;code&gt;find_library()&lt;/code&gt;&lt;/a&gt; routine from &lt;code&gt;ctypes.util&lt;/code&gt; to locate shared libraries.</source>
          <target state="translated">GeoDjango内置使用&lt;a href=&quot;https://docs.python.org/3/library/ctypes.html#ctypes.util.find_library&quot;&gt; &lt;code&gt;find_library()&lt;/code&gt; &lt;/a&gt;例程从 &lt;code&gt;ctypes.util&lt;/code&gt; 找到共享库。</target>
        </trans-unit>
        <trans-unit id="0a0924509e0f06a4da5f90bc04f536663113ff96" translate="yes" xml:space="preserve">
          <source>GeoDjango uses the &lt;code&gt;find_library&lt;/code&gt; function (from the &lt;code&gt;ctypes.util&lt;/code&gt; Python module) to discover libraries. The &lt;code&gt;find_library&lt;/code&gt; routine uses a program called &lt;code&gt;objdump&lt;/code&gt; (part of the &lt;code&gt;binutils&lt;/code&gt; package) to verify a shared library on GNU/Linux systems. Thus, if &lt;code&gt;binutils&lt;/code&gt; is not installed on your Linux system then Python&amp;rsquo;s ctypes may not be able to find your library even if your library path is set correctly and geospatial libraries were built perfectly.</source>
          <target state="translated">GeoDjango使用 &lt;code&gt;find_library&lt;/code&gt; 函数（来自 &lt;code&gt;ctypes.util&lt;/code&gt; Python模块）来发现库。所述 &lt;code&gt;find_library&lt;/code&gt; 例程使用称为程序 &lt;code&gt;objdump&lt;/code&gt; 的（的部分 &lt;code&gt;binutils&lt;/code&gt; 包），以验证在GNU / Linux的系统的共享库。因此，如果您的Linux系统上未安装 &lt;code&gt;binutils&lt;/code&gt; ，那么即使您的库路径设置正确且地理空间库构建得很好，Python的ctypes也可能找不到您的库。</target>
        </trans-unit>
        <trans-unit id="b01014a3c4d84619b154a68ffd6fdcb1cf93cf08" translate="yes" xml:space="preserve">
          <source>GeoDjango uses the GDAL geospatial library which is not thread safe at this time. Thus, it is &lt;em&gt;highly&lt;/em&gt; recommended to not use threading when deploying &amp;ndash; in other words, use an appropriate configuration of Apache.</source>
          <target state="translated">GeoDjango使用的GDAL地理空间库目前不是线程安全的。因此，&lt;em&gt;强烈&lt;/em&gt;建议在部署时不要使用线程，换句话说，使用适当的Apache配置。</target>
        </trans-unit>
        <trans-unit id="16ae67bb3fc772005f084defbf2e6db1d92d5719" translate="yes" xml:space="preserve">
          <source>GeoDjango widgets are template-based, so their attributes are mostly different from other Django widget attributes.</source>
          <target state="translated">GeoDjango小组件是基于模板的,所以它们的属性大多与其他Django小组件属性不同。</target>
        </trans-unit>
        <trans-unit id="9d8e7e09cdd6b3e40cc49012bdb226fb60c1266a" translate="yes" xml:space="preserve">
          <source>GeoDjango&amp;rsquo;s ORM will automatically wrap geometry values in transformation SQL, allowing the developer to work at a higher level of abstraction:</source>
          <target state="translated">GeoDjango的ORM将自动在转换SQL中包装几何值，从而使开发人员可以在更高的抽象水平上工作：</target>
        </trans-unit>
        <trans-unit id="136545a4948e28df9a4cfd41baae8bdacfa95501" translate="yes" xml:space="preserve">
          <source>GeoDjango&amp;rsquo;s admin site</source>
          <target state="translated">GeoDjango的管理站点</target>
        </trans-unit>
        <trans-unit id="1cbe465617fb128d99a40591f1695db47635c221" translate="yes" xml:space="preserve">
          <source>GeoDjango&amp;rsquo;s lookup types may be used with any manager method like &lt;code&gt;filter()&lt;/code&gt;, &lt;code&gt;exclude()&lt;/code&gt;, etc. However, the lookup types unique to GeoDjango are only available on spatial fields.</source>
          <target state="translated">GeoDjango的查找类型可以与任何管理器方法（例如 &lt;code&gt;filter()&lt;/code&gt; ， &lt;code&gt;exclude()&lt;/code&gt; 等）一起使用。但是，GeoDjango唯一的查找类型仅在空间字段上可用。</target>
        </trans-unit>
        <trans-unit id="e930c77fc593e1a3057029af0150f200e578a5f8" translate="yes" xml:space="preserve">
          <source>GeoDjango’s admin site</source>
          <target state="translated">GeoDjango的管理站点</target>
        </trans-unit>
        <trans-unit id="98ee0730fa1ecffb4446df2cf10fd043d3f3523c" translate="yes" xml:space="preserve">
          <source>GeoIP</source>
          <target state="translated">GeoIP</target>
        </trans-unit>
        <trans-unit id="39ee39af2d2e3bf7b46140abbb7f4371a399a37f" translate="yes" xml:space="preserve">
          <source>GeoIP(R) is a registered trademark of MaxMind, Inc.</source>
          <target state="translated">GeoIP(R)是MaxMind,Inc.的注册商标。</target>
        </trans-unit>
        <trans-unit id="97eeda258d4d0c87a81a7741038e625eda23a2a6" translate="yes" xml:space="preserve">
          <source>GeoJSON</source>
          <target state="translated">GeoJSON</target>
        </trans-unit>
        <trans-unit id="34040826ec22e3299cf157468d8b0814d292c197" translate="yes" xml:space="preserve">
          <source>GeoJSON Serializer</source>
          <target state="translated">GeoJSON序列化器</target>
        </trans-unit>
        <trans-unit id="4c3f8a1884337450687146c8287b49e38ea44373" translate="yes" xml:space="preserve">
          <source>Geographic Admin</source>
          <target state="translated">地理管理</target>
        </trans-unit>
        <trans-unit id="08a11adebd76ce7a843b8dca89cdaf9b00bb0144" translate="yes" xml:space="preserve">
          <source>Geographic Data</source>
          <target state="translated">地理数据</target>
        </trans-unit>
        <trans-unit id="0eda40b0a849adbdecdc0f612b3bd4d836c6e254" translate="yes" xml:space="preserve">
          <source>Geographic Database Functions</source>
          <target state="translated">地理数据库功能</target>
        </trans-unit>
        <trans-unit id="a703edbf6881dafb5316d88af33048e916592325" translate="yes" xml:space="preserve">
          <source>Geographic Feeds</source>
          <target state="translated">地理馈送</target>
        </trans-unit>
        <trans-unit id="190944449613afbd7f9bd321a28222ea15fa1f9b" translate="yes" xml:space="preserve">
          <source>Geographic Models</source>
          <target state="translated">地理模型</target>
        </trans-unit>
        <trans-unit id="7a861886b376799d062ab3c6823b4d1c938a1308" translate="yes" xml:space="preserve">
          <source>Geographic Sitemaps</source>
          <target state="translated">地理网站地图</target>
        </trans-unit>
        <trans-unit id="021a323d2229cf60dd8130ccafa9464d9f895101" translate="yes" xml:space="preserve">
          <source>Geographic annotations</source>
          <target state="translated">地理注释</target>
        </trans-unit>
        <trans-unit id="2e8c2b4df8eeaac4252c5331e04802c9b86ab936" translate="yes" xml:space="preserve">
          <source>Geographic framework</source>
          <target state="translated">地理框架</target>
        </trans-unit>
        <trans-unit id="0079ff114abc2ccabd5e955bd2f167e7889a1687" translate="yes" xml:space="preserve">
          <source>Geographic queries with geometries take the following general form (assuming the &lt;code&gt;Zipcode&lt;/code&gt; model used in the &lt;a href=&quot;model-api&quot;&gt;GeoDjango Model API&lt;/a&gt;):</source>
          <target state="translated">与几何形状的地理查询采取以下一般形式（假设 &lt;code&gt;Zipcode&lt;/code&gt; 中使用的模型&lt;a href=&quot;model-api&quot;&gt;GeoDjango内置模型API&lt;/a&gt;）：</target>
        </trans-unit>
        <trans-unit id="0c0fac69cdfabd05c7df2017c1e01ab5627a45ab" translate="yes" xml:space="preserve">
          <source>Geography Type</source>
          <target state="translated">地理类型</target>
        </trans-unit>
        <trans-unit id="fbe47565ebdb262717c7861ebf58e31b12c1414d" translate="yes" xml:space="preserve">
          <source>Geography support is limited to PostGIS and will force the SRID to be 4326.</source>
          <target state="translated">地理支持仅限于PostGIS,将强制SRID为4326。</target>
        </trans-unit>
        <trans-unit id="46250ca0dfb01ec701cd710565523f12ab685b09" translate="yes" xml:space="preserve">
          <source>Geolocation with GeoIP2</source>
          <target state="translated">用GeoIP2进行地理定位</target>
        </trans-unit>
        <trans-unit id="35171d7fc44e44bbd149d79f68793a5f09307bb0" translate="yes" xml:space="preserve">
          <source>Geometries are Pythonic</source>
          <target state="translated">几何学是毕设的</target>
        </trans-unit>
        <trans-unit id="9a9e67d4b853d4bb48d8ab51f08cb7351bf0a8ff" translate="yes" xml:space="preserve">
          <source>Geometries support set-like operators:</source>
          <target state="translated">几何图形支持类集运算符。</target>
        </trans-unit>
        <trans-unit id="9d1226717c2fc305626512b0a1ae618fddfee0b9" translate="yes" xml:space="preserve">
          <source>Geometry</source>
          <target state="translated">Geometry</target>
        </trans-unit>
        <trans-unit id="6bf68521ba1b36c0e30717dcc5416290c2bd195a" translate="yes" xml:space="preserve">
          <source>Geometry Collections</source>
          <target state="translated">几何学系列</target>
        </trans-unit>
        <trans-unit id="634de25ba228f9fe855e233d1a73bb1e3624e2b2" translate="yes" xml:space="preserve">
          <source>Geometry Engine Open Source</source>
          <target state="translated">Geometry Engine 开源</target>
        </trans-unit>
        <trans-unit id="d3262bc1ec3d4cb7ac4532f23997b4f04e17ee63" translate="yes" xml:space="preserve">
          <source>Geometry Factories</source>
          <target state="translated">几何工厂</target>
        </trans-unit>
        <trans-unit id="7bd508896b5eca1c3e3ad0712513d474a8a12299" translate="yes" xml:space="preserve">
          <source>Geometry Field Options</source>
          <target state="translated">几何领域选项</target>
        </trans-unit>
        <trans-unit id="a5d5114f7a773f987eb673d642d7f9de4967fe5d" translate="yes" xml:space="preserve">
          <source>Geometry Lookups</source>
          <target state="translated">几何学查询</target>
        </trans-unit>
        <trans-unit id="0c966cf1201e4037c0f25b2d0ce4de2ba27b4d5a" translate="yes" xml:space="preserve">
          <source>Geometry Objects</source>
          <target state="translated">几何对象</target>
        </trans-unit>
        <trans-unit id="7c0ba0c8b987af42bc684ac9ce4f146c583a5ebc" translate="yes" xml:space="preserve">
          <source>Geometry conversion support &lt;code&gt;C&lt;/code&gt;. The lookup does not have native raster support, all raster data is automatically converted to geometries.</source>
          <target state="translated">几何转换支持 &lt;code&gt;C&lt;/code&gt; 。查找不具有本机栅格支持，所有栅格数据都会自动转换为几何。</target>
        </trans-unit>
        <trans-unit id="08c06c630a3754e6edc49ddc9cd070ec64b0b09d" translate="yes" xml:space="preserve">
          <source>Geometry example:</source>
          <target state="translated">几何学的例子。</target>
        </trans-unit>
        <trans-unit id="7a62c2c9bf321ceff5fae325eafc6d04db4cc6ff" translate="yes" xml:space="preserve">
          <source>Geospatial Data Abstraction Library</source>
          <target state="translated">地理空间数据摘要库</target>
        </trans-unit>
        <trans-unit id="0dc2e5954c12f037f940d57ec5c9b7afe01ce77f" translate="yes" xml:space="preserve">
          <source>Geospatial libraries</source>
          <target state="translated">地理空间图书馆</target>
        </trans-unit>
        <trans-unit id="99ed2c09261dfab0ea3ab6d07aae9b6d75fa093d" translate="yes" xml:space="preserve">
          <source>German legal metre</source>
          <target state="translated">德国法定米</target>
        </trans-unit>
        <trans-unit id="69e57c40eaf705eec95814bf280b26be032b7fce" translate="yes" xml:space="preserve">
          <source>Get the latest SpatiaLite library source bundle from the &lt;a href=&quot;https://www.gaia-gis.it/gaia-sins/libspatialite-sources/&quot;&gt;download page&lt;/a&gt;:</source>
          <target state="translated">从&lt;a href=&quot;https://www.gaia-gis.it/gaia-sins/libspatialite-sources/&quot;&gt;下载页面&lt;/a&gt;获取最新的SpatiaLite库源包：</target>
        </trans-unit>
        <trans-unit id="f8219b39fc78d276a3e9eee050eeafc262ee63bc" translate="yes" xml:space="preserve">
          <source>Get the latest version of Python at &lt;a href=&quot;https://www.python.org/downloads/&quot;&gt;https://www.python.org/downloads/&lt;/a&gt; or with your operating system&amp;rsquo;s package manager.</source>
          <target state="translated">可以从&lt;a href=&quot;https://www.python.org/downloads/&quot;&gt;https://www.python.org/downloads/&lt;/a&gt;或使用操作系统的软件包管理器获取最新版本的Python 。</target>
        </trans-unit>
        <trans-unit id="349ffb96bafdf031de5166a9a6d08020c5ebd1ec" translate="yes" xml:space="preserve">
          <source>Get the list of items for this view. This must be an iterable and may be a queryset (in which queryset-specific behavior will be enabled).</source>
          <target state="translated">获取此视图的项目列表。这必须是一个可迭代的项目,也可以是一个查询集(查询集特定行为将被启用)。</target>
        </trans-unit>
        <trans-unit id="c595045ec25964be60d78faa85d89371211ec4b1" translate="yes" xml:space="preserve">
          <source>Get things right from the start</source>
          <target state="translated">从一开始就把事情做好</target>
        </trans-unit>
        <trans-unit id="ddf2045ef69c7a12fcf93ada7af9c40769a94785" translate="yes" xml:space="preserve">
          <source>Get your database running</source>
          <target state="translated">让您的数据库运行</target>
        </trans-unit>
        <trans-unit id="3cd928230f05d523f41f71e6df4e087feb93a4dd" translate="yes" xml:space="preserve">
          <source>Gettext utilities</source>
          <target state="translated">Gettext公用事业</target>
        </trans-unit>
        <trans-unit id="16bf3406ad6ebe10ef028b5b1dc22df2a8c7a781" translate="yes" xml:space="preserve">
          <source>Getting a copy of Django&amp;rsquo;s development version</source>
          <target state="translated">获取Django开发版本的副本</target>
        </trans-unit>
        <trans-unit id="3752376ac856de4d9f6ea65db547f68c6031974e" translate="yes" xml:space="preserve">
          <source>Getting a list of FlatPage objects in your templates</source>
          <target state="translated">获取模板中的FlatPage对象列表。</target>
        </trans-unit>
        <trans-unit id="060f712c74598ce01e86d56802d9344d8ed68bb7" translate="yes" xml:space="preserve">
          <source>Getting help</source>
          <target state="translated">获得帮助</target>
        </trans-unit>
        <trans-unit id="095e7a3db06b22c5a52190502caa36691be8935e" translate="yes" xml:space="preserve">
          <source>Getting runtime help</source>
          <target state="translated">获得运行时帮助</target>
        </trans-unit>
        <trans-unit id="76e7a3a3f9c225fe820ba7e9cff10ea2a73b79a1" translate="yes" xml:space="preserve">
          <source>Getting started</source>
          <target state="translated">开始</target>
        </trans-unit>
        <trans-unit id="85846ce2a297da86bf6e7a51470a230994164cad" translate="yes" xml:space="preserve">
          <source>Getting the current domain for display</source>
          <target state="translated">获取当前的显示域</target>
        </trans-unit>
        <trans-unit id="d5783cf876d18d2878f81129550d5945ce0679bf" translate="yes" xml:space="preserve">
          <source>Getting the current domain for full URLs</source>
          <target state="translated">获取当前域名的完整URL</target>
        </trans-unit>
        <trans-unit id="03fb97db904d87ad00dad0da6fa0440ea4978bb4" translate="yes" xml:space="preserve">
          <source>Getting the current storage class</source>
          <target state="translated">获取当前存储类</target>
        </trans-unit>
        <trans-unit id="5442e2b64fa09764b9f593867e59a97292c84059" translate="yes" xml:space="preserve">
          <source>GitHub</source>
          <target state="translated">GitHub</target>
        </trans-unit>
        <trans-unit id="a379f1c31915bf948dceb7774f0d0b06315610cf" translate="yes" xml:space="preserve">
          <source>Give &lt;a href=&quot;../ref/paginator#django.core.paginator.Paginator&quot;&gt;&lt;code&gt;Paginator&lt;/code&gt;&lt;/a&gt; a list of objects, plus the number of items you&amp;rsquo;d like to have on each page, and it gives you methods for accessing the items for each page:</source>
          <target state="translated">给&lt;a href=&quot;../ref/paginator#django.core.paginator.Paginator&quot;&gt; &lt;code&gt;Paginator&lt;/code&gt; &lt;/a&gt;一个对象列表，以及您希望在每个页面上拥有的项目数，它为您提供访问每个页面的项目的方法：</target>
        </trans-unit>
        <trans-unit id="2d98907f33fa5c7e1fd2266881356efab899491c" translate="yes" xml:space="preserve">
          <source>Give Django your database parameters</source>
          <target state="translated">给Django提供数据库参数</target>
        </trans-unit>
        <trans-unit id="6681947b2c88d7800dc6eec380b6e38b3d17b132" translate="yes" xml:space="preserve">
          <source>Give your model a &lt;a href=&quot;#django.contrib.contenttypes.fields.GenericForeignKey&quot;&gt;&lt;code&gt;GenericForeignKey&lt;/code&gt;&lt;/a&gt;, and pass it the names of the two fields described above. If these fields are named &amp;ldquo;content_type&amp;rdquo; and &amp;ldquo;object_id&amp;rdquo;, you can omit this &amp;ndash; those are the default field names &lt;a href=&quot;#django.contrib.contenttypes.fields.GenericForeignKey&quot;&gt;&lt;code&gt;GenericForeignKey&lt;/code&gt;&lt;/a&gt; will look for.</source>
          <target state="translated">给您的模型一个&lt;a href=&quot;#django.contrib.contenttypes.fields.GenericForeignKey&quot;&gt; &lt;code&gt;GenericForeignKey&lt;/code&gt; &lt;/a&gt;，并将上面两个字段的名称传递给它。如果这些字段分别命名为&amp;ldquo; content_type&amp;rdquo;和&amp;ldquo; object_id&amp;rdquo;，则可以忽略这些-这些是&lt;a href=&quot;#django.contrib.contenttypes.fields.GenericForeignKey&quot;&gt; &lt;code&gt;GenericForeignKey&lt;/code&gt; &lt;/a&gt;将查找的默认字段名称。</target>
        </trans-unit>
        <trans-unit id="942bc2871d4842b9f270c2479b3dd36378a861ad" translate="yes" xml:space="preserve">
          <source>Give your model a &lt;a href=&quot;../models/fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt;&lt;code&gt;ContentType&lt;/code&gt;&lt;/a&gt;. The usual name for this field is &amp;ldquo;content_type&amp;rdquo;.</source>
          <target state="translated">给你的模型&lt;a href=&quot;../models/fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; 的&lt;/a&gt;到&lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt; &lt;code&gt;ContentType&lt;/code&gt; &lt;/a&gt;。该字段的常用名称是&amp;ldquo; content_type&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="68438852373dfcf41a28180c2297d1cc31651229" translate="yes" xml:space="preserve">
          <source>Give your model a field that can store primary key values from the models you&amp;rsquo;ll be relating to. For most models, this means a &lt;a href=&quot;../models/fields#django.db.models.PositiveIntegerField&quot;&gt;&lt;code&gt;PositiveIntegerField&lt;/code&gt;&lt;/a&gt;. The usual name for this field is &amp;ldquo;object_id&amp;rdquo;.</source>
          <target state="translated">给您的模型一个字段，该字段可以存储您将要关联的模型中的主键值。对于大多数模型，这意味着&lt;a href=&quot;../models/fields#django.db.models.PositiveIntegerField&quot;&gt; &lt;code&gt;PositiveIntegerField&lt;/code&gt; &lt;/a&gt;。该字段的常用名称是&amp;ldquo; object_id&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="d83ce53d6e4a13ff9f676afe3335baa6383a5f2e" translate="yes" xml:space="preserve">
          <source>Give your model metadata by using an inner &lt;code&gt;class Meta&lt;/code&gt;, like so:</source>
          <target state="translated">通过使用内部 &lt;code&gt;class Meta&lt;/code&gt; 来提供模型元数据，如下所示：</target>
        </trans-unit>
        <trans-unit id="ec0d34e7da73bbe49b892f918897ee31576ecbf5" translate="yes" xml:space="preserve">
          <source>Given &lt;code&gt;data&lt;/code&gt; and &lt;code&gt;files&lt;/code&gt; dictionaries and this widget&amp;rsquo;s name, returns whether or not there&amp;rsquo;s data or files for the widget.</source>
          <target state="translated">给定 &lt;code&gt;data&lt;/code&gt; 和 &lt;code&gt;files&lt;/code&gt; 字典以及此小部件的名称，返回是否有该小部件的数据或文件。</target>
        </trans-unit>
        <trans-unit id="0c2297fdd50dfa2cb53228dc47c397f2594f114b" translate="yes" xml:space="preserve">
          <source>Given a &lt;code&gt;Blog&lt;/code&gt; instance &lt;code&gt;b5&lt;/code&gt; that has already been saved to the database, this example changes its name and updates its record in the database:</source>
          <target state="translated">给定已经保存到数据库中的 &lt;code&gt;Blog&lt;/code&gt; 实例 &lt;code&gt;b5&lt;/code&gt; ，此示例将更改其名称并更新其在数据库中的记录：</target>
        </trans-unit>
        <trans-unit id="7517c0cbad9c754ae327298f888dae38e0a51a05" translate="yes" xml:space="preserve">
          <source>Given a contact form:</source>
          <target state="translated">给出一个联系表格。</target>
        </trans-unit>
        <trans-unit id="8b44975103a4bb30c311396e36118463fdf07d71" translate="yes" xml:space="preserve">
          <source>Given a dictionary of data and this widget&amp;rsquo;s name, returns the value of this widget. &lt;code&gt;files&lt;/code&gt; may contain data coming from &lt;a href=&quot;../request-response#django.http.HttpRequest.FILES&quot;&gt;&lt;code&gt;request.FILES&lt;/code&gt;&lt;/a&gt;. Returns &lt;code&gt;None&lt;/code&gt; if a value wasn&amp;rsquo;t provided. Note also that &lt;code&gt;value_from_datadict&lt;/code&gt; may be called more than once during handling of form data, so if you customize it and add expensive processing, you should implement some caching mechanism yourself.</source>
          <target state="translated">给定数据字典和此小部件的名称，返回此小部件的值。 &lt;code&gt;files&lt;/code&gt; 可能包含来自&lt;a href=&quot;../request-response#django.http.HttpRequest.FILES&quot;&gt; &lt;code&gt;request.FILES&lt;/code&gt; 的&lt;/a&gt;数据。如果未提供值，则返回 &lt;code&gt;None&lt;/code&gt; 。还请注意，在处理表单数据期间，可能会多次调用 &lt;code&gt;value_from_datadict&lt;/code&gt; ，因此，如果自定义它并添加昂贵的处理，则应自己实现某种缓存机制。</target>
        </trans-unit>
        <trans-unit id="119e6f39993a5ece4c0066d470355c216ce3f6c9" translate="yes" xml:space="preserve">
          <source>Given a distance (float), returns the point (or closest point) within the geometry (&lt;a href=&quot;#django.contrib.gis.geos.LineString&quot;&gt;&lt;code&gt;LineString&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#django.contrib.gis.geos.MultiLineString&quot;&gt;&lt;code&gt;MultiLineString&lt;/code&gt;&lt;/a&gt;) at that distance. The normalized version takes the distance as a float between 0 (origin) and 1 (endpoint).</source>
          <target state="translated">给定一个距离（浮动），返回该距离处几何图形（&lt;a href=&quot;#django.contrib.gis.geos.LineString&quot;&gt; &lt;code&gt;LineString&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#django.contrib.gis.geos.MultiLineString&quot;&gt; &lt;code&gt;MultiLineString&lt;/code&gt; &lt;/a&gt;）内的点（或最近点）。规范化版本将距离视为0（原点）和1（端点）之间的距离。</target>
        </trans-unit>
        <trans-unit id="a0116de099366db2ec64edadc7d21c2a59efd76d" translate="yes" xml:space="preserve">
          <source>Given a form field&amp;rsquo;s &lt;code&gt;initial&lt;/code&gt; value, returns whether or not the widget can be rendered with the &lt;code&gt;required&lt;/code&gt; HTML attribute. Forms use this method along with &lt;a href=&quot;fields#django.forms.Field.required&quot;&gt;&lt;code&gt;Field.required&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;api#django.forms.Form.use_required_attribute&quot;&gt;&lt;code&gt;Form.use_required_attribute&lt;/code&gt;&lt;/a&gt; to determine whether or not to display the &lt;code&gt;required&lt;/code&gt; attribute for each field.</source>
          <target state="translated">给定一个表单字段的 &lt;code&gt;initial&lt;/code&gt; 值，返回是否可以使用 &lt;code&gt;required&lt;/code&gt; HTML属性呈现该窗口小部件。表单使用此方法以及&lt;a href=&quot;fields#django.forms.Field.required&quot;&gt; &lt;code&gt;Field.required&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;api#django.forms.Form.use_required_attribute&quot;&gt; &lt;code&gt;Form.use_required_attribute&lt;/code&gt; &lt;/a&gt;来确定是否显示每个字段的 &lt;code&gt;required&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="25ce09b71e61c136d2d9c17228b7872efdce4f9e" translate="yes" xml:space="preserve">
          <source>Given a middleware class, returns a view decorator. This lets you use middleware functionality on a per-view basis. The middleware is created with no params passed.</source>
          <target state="translated">给定一个中间件类,返回一个视图装饰器。这让您可以在每个视图的基础上使用中间件功能。中间件的创建不需要传递参数。</target>
        </trans-unit>
        <trans-unit id="365439c148a642d6a442b1b041f1b802323a613e" translate="yes" xml:space="preserve">
          <source>Given a model instance, the display value for a field with &lt;code&gt;choices&lt;/code&gt; can be accessed using the &lt;a href=&quot;../../ref/models/instances#django.db.models.Model.get_FOO_display&quot;&gt;&lt;code&gt;get_FOO_display()&lt;/code&gt;&lt;/a&gt; method. For example:</source>
          <target state="translated">给定一个模型实例，可以使用&lt;a href=&quot;../../ref/models/instances#django.db.models.Model.get_FOO_display&quot;&gt; &lt;code&gt;get_FOO_display()&lt;/code&gt; &lt;/a&gt;方法访问带有 &lt;code&gt;choices&lt;/code&gt; 的字段的显示值。例如：</target>
        </trans-unit>
        <trans-unit id="1b1e3dc1152220b4ff60c94af1d5193dc75aa0d2" translate="yes" xml:space="preserve">
          <source>Given a whole number, returns the requested digit, where 1 is the right-most digit, 2 is the second-right-most digit, etc. Returns the original value for invalid input (if input or argument is not an integer, or if argument is less than 1). Otherwise, output is always an integer.</source>
          <target state="translated">给定一个整数,返回要求的数字,其中1是最右边的数字,2是最右边的数字,等等。对于无效的输入(如果输入或参数不是整数,或者参数小于1),返回原始值。否则,输出总是一个整数。</target>
        </trans-unit>
        <trans-unit id="3a24cd0b9164167b8eb5ad888792e3a7b90dd361" translate="yes" xml:space="preserve">
          <source>Given format can be the predefined one &lt;a href=&quot;../settings#std:setting-TIME_FORMAT&quot;&gt;&lt;code&gt;TIME_FORMAT&lt;/code&gt;&lt;/a&gt;, or a custom format, same as the &lt;a href=&quot;#std:templatefilter-date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt; filter. Note that the predefined format is locale-dependent.</source>
          <target state="translated">给定格式可以是预定义的&lt;a href=&quot;../settings#std:setting-TIME_FORMAT&quot;&gt; &lt;code&gt;TIME_FORMAT&lt;/code&gt; &lt;/a&gt;，也可以是自定义格式，与&lt;a href=&quot;#std:templatefilter-date&quot;&gt; &lt;code&gt;date&lt;/code&gt; &lt;/a&gt;过滤器相同。请注意，预定义格式是与语言环境相关的。</target>
        </trans-unit>
        <trans-unit id="5ba0b76f9d8c9781c32b85d824833b69cc244a80" translate="yes" xml:space="preserve">
          <source>Given the above &lt;code&gt;'Cheddar Talk'&lt;/code&gt; blog example, this example would override the previous record in the database:</source>
          <target state="translated">给定上述 &lt;code&gt;'Cheddar Talk'&lt;/code&gt; 博客示例，此示例将覆盖数据库中的先前记录：</target>
        </trans-unit>
        <trans-unit id="d37c78d85d3a7273f3922e688e66c694ac20f4ef" translate="yes" xml:space="preserve">
          <source>Given the above template error, &lt;code&gt;template_debug&lt;/code&gt; would look like:</source>
          <target state="translated">鉴于上述模板错误， &lt;code&gt;template_debug&lt;/code&gt; 如下所示：</target>
        </trans-unit>
        <trans-unit id="3714bdc37d70180c2c462d1df29b61921d28b425" translate="yes" xml:space="preserve">
          <source>Given the datetime &lt;code&gt;2015-06-15 14:30:50.000321+00:00&lt;/code&gt;, the built-in &lt;code&gt;kind&lt;/code&gt;s return:</source>
          <target state="translated">给定datetime &lt;code&gt;2015-06-15 14:30:50.000321+00:00&lt;/code&gt; ，内置 &lt;code&gt;kind&lt;/code&gt; 返回：</target>
        </trans-unit>
        <trans-unit id="9a29688721ee0be91dd38356c46ff2c8ad421e5f" translate="yes" xml:space="preserve">
          <source>Given the datetime &lt;code&gt;2015-06-15 23:30:01.000321+00:00&lt;/code&gt;, the built-in &lt;code&gt;lookup_name&lt;/code&gt;s return:</source>
          <target state="translated">给定日期时间 &lt;code&gt;2015-06-15 23:30:01.000321+00:00&lt;/code&gt; ，内置的 &lt;code&gt;lookup_name&lt;/code&gt; 返回：</target>
        </trans-unit>
        <trans-unit id="88b00b26884e185bb263dd1c872db086f631c7b3" translate="yes" xml:space="preserve">
          <source>Given this standard interface, an &lt;code&gt;HttpRequest&lt;/code&gt; instance can be passed directly to an XML parser such as &lt;a href=&quot;https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.ElementTree&quot;&gt;&lt;code&gt;ElementTree&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">给定此标准接口，可以将 &lt;code&gt;HttpRequest&lt;/code&gt; 实例直接传递到XML解析器，例如&lt;a href=&quot;https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.ElementTree&quot;&gt; &lt;code&gt;ElementTree&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="4975cd64a92e88880758085eef7772db2bdb4f4d" translate="yes" xml:space="preserve">
          <source>Given:</source>
          <target state="translated">Given:</target>
        </trans-unit>
        <trans-unit id="9d05ac7a7d5e5cd76d141b9fe988215dfd520a74" translate="yes" xml:space="preserve">
          <source>Globalization (&lt;code&gt;i18n&lt;/code&gt;/&lt;code&gt;l10n&lt;/code&gt;)</source>
          <target state="translated">全球化（ &lt;code&gt;i18n&lt;/code&gt; / &lt;code&gt;l10n&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="ba172508be68719fa9795c5f2138b1035ec574a1" translate="yes" xml:space="preserve">
          <source>Go ahead and install the previously cloned copy of Django:</source>
          <target state="translated">继续安装之前克隆的Django副本。</target>
        </trans-unit>
        <trans-unit id="739cebceefdb523d7e9f5a9b6a934e37e2d1de98" translate="yes" xml:space="preserve">
          <source>Go to &lt;a href=&quot;http://localhost:8000/polls/&quot;&gt;http://localhost:8000/polls/&lt;/a&gt; in your browser, and you should see the text &amp;ldquo;&lt;em&gt;Hello, world. You&amp;rsquo;re at the polls index.&lt;/em&gt;&amp;rdquo;, which you defined in the &lt;code&gt;index&lt;/code&gt; view.</source>
          <target state="translated">在浏览器中转到&lt;a href=&quot;http://localhost:8000/polls/&quot;&gt;http：// localhost：8000 / polls /&lt;/a&gt;，您应该看到文本&amp;ldquo; &lt;em&gt;Hello，world。您正在民意调查索引中。&lt;/em&gt;&amp;rdquo;，它是在 &lt;code&gt;index&lt;/code&gt; 视图中定义的。</target>
        </trans-unit>
        <trans-unit id="e865850e7567ce4f66ee6883bb54c84fff0e9193" translate="yes" xml:space="preserve">
          <source>Gold Coast foot</source>
          <target state="translated">黄金海岸脚</target>
        </trans-unit>
        <trans-unit id="f179b6f36465b5aac2f67605586252775def9c70" translate="yes" xml:space="preserve">
          <source>Good:</source>
          <target state="translated">Good:</target>
        </trans-unit>
        <trans-unit id="77903aaddab038102d4549b08d4a2e68bdafb921" translate="yes" xml:space="preserve">
          <source>Good: &lt;code&gt;'/foo/bar/'&lt;/code&gt;</source>
          <target state="translated">好： &lt;code&gt;'/foo/bar/'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="84cc7d32930e72c5b9fc5a877106db98126eb15c" translate="yes" xml:space="preserve">
          <source>Google PageSpeed</source>
          <target state="translated">谷歌网页速度</target>
        </trans-unit>
        <trans-unit id="e391eebe3da38bf188122fbc620ac8276e058db8" translate="yes" xml:space="preserve">
          <source>Greater than or equal to.</source>
          <target state="translated">大于或等于:</target>
        </trans-unit>
        <trans-unit id="1a0cf2334e157e041cd80ecac674aacbdace7685" translate="yes" xml:space="preserve">
          <source>Greater than or equal to. Example:</source>
          <target state="translated">大于或等于:例如:</target>
        </trans-unit>
        <trans-unit id="0bb5b098cc8f14ae1d23ed0bdc731dd64c4176ef" translate="yes" xml:space="preserve">
          <source>Greater than.</source>
          <target state="translated">大于:</target>
        </trans-unit>
        <trans-unit id="d65a7235faec5e7686d204089dc0b355a23e4154" translate="yes" xml:space="preserve">
          <source>Greater than. Example:</source>
          <target state="translated">大于:例如:</target>
        </trans-unit>
        <trans-unit id="4858407f7012787457799245e5f0bd3b83a5adc2" translate="yes" xml:space="preserve">
          <source>Grouping on other properties</source>
          <target state="translated">对其他属性进行分组</target>
        </trans-unit>
        <trans-unit id="ae9629f4ebb82c6331c0809fa9a0e54b00e578e6" translate="yes" xml:space="preserve">
          <source>Groups</source>
          <target state="translated">Groups</target>
        </trans-unit>
        <trans-unit id="7dd43e46b89810a494974c2ea0f7a7775e008522" translate="yes" xml:space="preserve">
          <source>Groups: A generic way of applying labels and permissions to more than one user.</source>
          <target state="translated">组。将标签和权限应用于一个以上用户的通用方法。</target>
        </trans-unit>
        <trans-unit id="929a28d261428029e61c0f81c6161fd71ba0b2fe" translate="yes" xml:space="preserve">
          <source>Guides</source>
          <target state="translated">Guides</target>
        </trans-unit>
        <trans-unit id="f88767387128fd81f27474f40a7e375537269897" translate="yes" xml:space="preserve">
          <source>Guides: How-tos</source>
          <target state="translated">指南。指南</target>
        </trans-unit>
        <trans-unit id="70cd7eb95746087d1d1f0e4c0e095606fcd9f55b" translate="yes" xml:space="preserve">
          <source>Guides: Intro</source>
          <target state="translated">指南。介绍</target>
        </trans-unit>
        <trans-unit id="550b6c2e449f5e1e62c195eae6c4b6fca172b664" translate="yes" xml:space="preserve">
          <source>HEX / HEXEWKB</source>
          <target state="translated">HEX/HEXEWKB</target>
        </trans-unit>
        <trans-unit id="c2f470b5eb2e1406be38abd6762532b112bbb2fd" translate="yes" xml:space="preserve">
          <source>HSTS is an HTTP header that informs a browser that all future connections to a particular site should always use HTTPS. Combined with redirecting requests over HTTP to HTTPS, this will ensure that connections always enjoy the added security of SSL provided one successful connection has occurred. HSTS may either be configured with &lt;a href=&quot;../ref/settings#std:setting-SECURE_HSTS_SECONDS&quot;&gt;&lt;code&gt;SECURE_HSTS_SECONDS&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../ref/settings#std:setting-SECURE_HSTS_INCLUDE_SUBDOMAINS&quot;&gt;&lt;code&gt;SECURE_HSTS_INCLUDE_SUBDOMAINS&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../ref/settings#std:setting-SECURE_HSTS_PRELOAD&quot;&gt;&lt;code&gt;SECURE_HSTS_PRELOAD&lt;/code&gt;&lt;/a&gt;, or on the Web server.</source>
          <target state="translated">HSTS是一个HTTP标头，它通知浏览器将来与特定站点的所有连接都应始终使用HTTPS。结合通过HTTP将请求重定向到HTTPS，这将确保只要发生一个成功的连接，连接就始终可以享受SSL的额外安全性。HSTS可以使用&lt;a href=&quot;../ref/settings#std:setting-SECURE_HSTS_SECONDS&quot;&gt; &lt;code&gt;SECURE_HSTS_SECONDS&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../ref/settings#std:setting-SECURE_HSTS_INCLUDE_SUBDOMAINS&quot;&gt; &lt;code&gt;SECURE_HSTS_INCLUDE_SUBDOMAINS&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../ref/settings#std:setting-SECURE_HSTS_PRELOAD&quot;&gt; &lt;code&gt;SECURE_HSTS_PRELOAD&lt;/code&gt; &lt;/a&gt;进行配置，也可以在Web服务器上进行配置。</target>
        </trans-unit>
        <trans-unit id="a307b98224835cb2929f0a670d5d37725809e298" translate="yes" xml:space="preserve">
          <source>HTML &lt;code&gt;id&lt;/code&gt; attributes on the form elements.</source>
          <target state="translated">表单元素上的HTML &lt;code&gt;id&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="7803fb9ad97a390e5a19c56907c38525501a3225" translate="yes" xml:space="preserve">
          <source>HTML form submission is a tricky area. There&amp;rsquo;s no guarantee that the submission will include encoding information, which means the framework might have to guess at the encoding of submitted data.</source>
          <target state="translated">HTML表单提交是一个棘手的领域。无法保证提交内容将包含编码信息，这意味着框架可能不得不猜测提交数据的编码。</target>
        </trans-unit>
        <trans-unit id="b06b171ed438d64895564aa6fdbd928c4e3f83e8" translate="yes" xml:space="preserve">
          <source>HTML forms</source>
          <target state="translated">HTML表格</target>
        </trans-unit>
        <trans-unit id="b98947084aa9e08a220c89b11ad0490ed9829cdd" translate="yes" xml:space="preserve">
          <source>HTML5 input types and browser validation</source>
          <target state="translated">HTML5输入类型和浏览器验证</target>
        </trans-unit>
        <trans-unit id="f40b27d6b8b9a4fc3827264c1da16a04ecf4d094" translate="yes" xml:space="preserve">
          <source>HTTP</source>
          <target state="translated">HTTP</target>
        </trans-unit>
        <trans-unit id="dc5818160f0a79f1d8b7b37801c4d5d5f5e71152" translate="yes" xml:space="preserve">
          <source>HTTP Strict Transport Security</source>
          <target state="translated">HTTP 严格的传输安全</target>
        </trans-unit>
        <trans-unit id="01fc6d102bf6376f0642cb6ab27bbd9ce1c99daf" translate="yes" xml:space="preserve">
          <source>HTTP clients can send a number of headers to tell the server about copies of a resource that they have already seen. This is commonly used when retrieving a Web page (using an HTTP &lt;code&gt;GET&lt;/code&gt; request) to avoid sending all the data for something the client has already retrieved. However, the same headers can be used for all HTTP methods (&lt;code&gt;POST&lt;/code&gt;, &lt;code&gt;PUT&lt;/code&gt;, &lt;code&gt;DELETE&lt;/code&gt;, etc.).</source>
          <target state="translated">HTTP客户端可以发送许多标头，以告知服务器他们已经看到的资源副本。在检索网页（使用HTTP &lt;code&gt;GET&lt;/code&gt; 请求）时通常使用此方法，以避免为客户端已检索到的内容发送所有数据。但是，相同的标头可用于所有HTTP方法（ &lt;code&gt;POST&lt;/code&gt; ， &lt;code&gt;PUT&lt;/code&gt; ， &lt;code&gt;DELETE&lt;/code&gt; 等）。</target>
        </trans-unit>
        <trans-unit id="766e6a6a6850f67b45994afcaa0fd166411b93fb" translate="yes" xml:space="preserve">
          <source>HTTP header fields cannot contain newlines. An attempt to set a header field containing a newline character (CR or LF) will raise &lt;code&gt;BadHeaderError&lt;/code&gt;</source>
          <target state="translated">HTTP标头字段不能包含换行符。尝试设置包含换行符（CR或LF）的标题字段将引发 &lt;code&gt;BadHeaderError&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3a7d6d24789915f29d0b4286e7264bdfafeb3eb9" translate="yes" xml:space="preserve">
          <source>HTTP performance</source>
          <target state="translated">HTTP性能</target>
        </trans-unit>
        <trans-unit id="f52698c28f0d2036450e02a85451ee4f5be02442" translate="yes" xml:space="preserve">
          <source>HTTPS</source>
          <target state="translated">HTTPS</target>
        </trans-unit>
        <trans-unit id="775bc82c4bfbe164f204d0e6798621f0a7d5acfa" translate="yes" xml:space="preserve">
          <source>Handily, the &lt;code&gt;ListView&lt;/code&gt; has a &lt;a href=&quot;../../ref/class-based-views/mixins-multiple-object#django.views.generic.list.MultipleObjectMixin.get_queryset&quot;&gt;&lt;code&gt;get_queryset()&lt;/code&gt;&lt;/a&gt; method we can override. By default, it returns the value of the &lt;code&gt;queryset&lt;/code&gt; attribute, but we can use it to add more logic.</source>
          <target state="translated">方便地， &lt;code&gt;ListView&lt;/code&gt; 有一个我们可以覆盖的&lt;a href=&quot;../../ref/class-based-views/mixins-multiple-object#django.views.generic.list.MultipleObjectMixin.get_queryset&quot;&gt; &lt;code&gt;get_queryset()&lt;/code&gt; &lt;/a&gt;方法。默认情况下，它返回 &lt;code&gt;queryset&lt;/code&gt; 属性的值，但是我们可以使用它来添加更多逻辑。</target>
        </trans-unit>
        <trans-unit id="362f233bfd36bbe9ffba21ece507104cececa24e" translate="yes" xml:space="preserve">
          <source>Handlers</source>
          <target state="translated">Handlers</target>
        </trans-unit>
        <trans-unit id="05ba8572a9a6792e3475e4e0412dc1a107795a7e" translate="yes" xml:space="preserve">
          <source>Handlers of this signal must not perform database schema alterations as doing so may cause the &lt;a href=&quot;django-admin#django-admin-flush&quot;&gt;&lt;code&gt;flush&lt;/code&gt;&lt;/a&gt; command to fail if it runs during the &lt;a href=&quot;django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">此信号的处理程序不能执行数据库架构更改，因为这样做可能导致&lt;a href=&quot;django-admin#django-admin-flush&quot;&gt; &lt;code&gt;flush&lt;/code&gt; &lt;/a&gt;命令在&lt;a href=&quot;django-admin#django-admin-migrate&quot;&gt; &lt;code&gt;migrate&lt;/code&gt; &lt;/a&gt;命令期间运行时失败。</target>
        </trans-unit>
        <trans-unit id="323e84376fdf3f635c78168388a0818a6dcc35a7" translate="yes" xml:space="preserve">
          <source>Handles conditional GET operations. If the response doesn&amp;rsquo;t have an &lt;code&gt;ETag&lt;/code&gt; header, the middleware adds one if needed. If the response has an &lt;code&gt;ETag&lt;/code&gt; or &lt;code&gt;Last-Modified&lt;/code&gt; header, and the request has &lt;code&gt;If-None-Match&lt;/code&gt; or &lt;code&gt;If-Modified-Since&lt;/code&gt;, the response is replaced by an &lt;a href=&quot;request-response#django.http.HttpResponseNotModified&quot;&gt;&lt;code&gt;HttpResponseNotModified&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">处理条件GET操作。如果响应中没有 &lt;code&gt;ETag&lt;/code&gt; 标头，则中间件将在需要时添加一个。如果响应具有 &lt;code&gt;ETag&lt;/code&gt; 或 &lt;code&gt;Last-Modified&lt;/code&gt; 头，并且请求具有 &lt;code&gt;If-None-Match&lt;/code&gt; 或 &lt;code&gt;If-Modified-Since&lt;/code&gt; ，则将响应替换为&lt;a href=&quot;request-response#django.http.HttpResponseNotModified&quot;&gt; &lt;code&gt;HttpResponseNotModified&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0b9f50ab5ace4fb669d21d51fe819de6624952c7" translate="yes" xml:space="preserve">
          <source>Handles responding to requests for the OPTIONS HTTP verb. Returns a response with the &lt;code&gt;Allow&lt;/code&gt; header containing a list of the view&amp;rsquo;s allowed HTTP method names.</source>
          <target state="translated">处理对OPTIONS HTTP动词的请求的响应。返回带有 &lt;code&gt;Allow&lt;/code&gt; 标头的响应，该标头包含视图的允许HTTP方法名称的列表。</target>
        </trans-unit>
        <trans-unit id="64e2085c860648c646aefde6c507cdb08da718af" translate="yes" xml:space="preserve">
          <source>Handling HTTP requests</source>
          <target state="translated">处理HTTP请求</target>
        </trans-unit>
        <trans-unit id="554f39c415dd6dfb6fd370063343bb301dbfb1c2" translate="yes" xml:space="preserve">
          <source>Handling an asterisk &lt;code&gt;'*'&lt;/code&gt; according to &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html#section-7.1.4&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 7231#section-7.1.4&lt;/strong&gt;&lt;/a&gt; was added.</source>
          <target state="translated">添加了根据&lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html#section-7.1.4&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 7231＃section-7.1.4&lt;/strong&gt;&lt;/a&gt;处理星号 &lt;code&gt;'*'&lt;/code&gt; 的功能。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="45c281fdcfaa935eff5cdec670aec151d0248a56" translate="yes" xml:space="preserve">
          <source>Handling authorization in custom backends</source>
          <target state="translated">在自定义后端处理授权</target>
        </trans-unit>
        <trans-unit id="3f40bbcec32f150b1bf8b1b36828c6bcec2184c9" translate="yes" xml:space="preserve">
          <source>Handling errors in actions</source>
          <target state="translated">处理动作中的错误</target>
        </trans-unit>
        <trans-unit id="7549e355ea2bfbfff3483014ede4f6852fd36ec7" translate="yes" xml:space="preserve">
          <source>Handling exceptions within PostgreSQL transactions</source>
          <target state="translated">在PostgreSQL事务中处理异常</target>
        </trans-unit>
        <trans-unit id="f4a45a24846f6ece0779cd7a39f0d28a6c76f7d1" translate="yes" xml:space="preserve">
          <source>Handling forms is a complex business. Consider Django&amp;rsquo;s admin, where numerous items of data of several different types may need to be prepared for display in a form, rendered as HTML, edited using a convenient interface, returned to the server, validated and cleaned up, and then saved or passed on for further processing.</source>
          <target state="translated">处理表格是一项复杂的业务。考虑一下Django的管理员，其中可能需要准备好几种不同类型的大量数据，以便以表格形式显示，呈现为HTML，使用方便的界面进行编辑，返回到服务器，进行验证和清理，然后保存或传递进行进一步处理。</target>
        </trans-unit>
        <trans-unit id="3556e4954f0ecaba30959568393e81f7c9148616" translate="yes" xml:space="preserve">
          <source>Handling forms with class-based views</source>
          <target state="translated">用基于类的视图处理表单</target>
        </trans-unit>
        <trans-unit id="c1c6055ec082f25b7c66ca247f1cdb50238e6a11" translate="yes" xml:space="preserve">
          <source>Handling object permissions</source>
          <target state="translated">处理对象权限</target>
        </trans-unit>
        <trans-unit id="5ecb35af693985a1c2688a53f9e642c39666465a" translate="yes" xml:space="preserve">
          <source>Handling uploaded files with a model</source>
          <target state="translated">用模型处理上传的文件</target>
        </trans-unit>
        <trans-unit id="a5f397bd570e7e5ed6bb33e21e7f0f7f5a71a354" translate="yes" xml:space="preserve">
          <source>Has four optional arguments for validation:</source>
          <target state="translated">有四个可选参数进行验证。</target>
        </trans-unit>
        <trans-unit id="997e11fdb14bb8cc6b524263af1ed4c4a87a9091" translate="yes" xml:space="preserve">
          <source>Has one optional argument:</source>
          <target state="translated">有一个可选参数。</target>
        </trans-unit>
        <trans-unit id="90377fb788aaf30a9be110475bdb9a11af154e2e" translate="yes" xml:space="preserve">
          <source>Has three optional arguments &lt;code&gt;max_length&lt;/code&gt;, &lt;code&gt;min_length&lt;/code&gt;, and &lt;code&gt;empty_value&lt;/code&gt; which work just as they do for &lt;a href=&quot;#django.forms.CharField&quot;&gt;&lt;code&gt;CharField&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">具有三个可选参数 &lt;code&gt;max_length&lt;/code&gt; ， &lt;code&gt;min_length&lt;/code&gt; 和 &lt;code&gt;empty_value&lt;/code&gt; ，它们的作用与对&lt;a href=&quot;#django.forms.CharField&quot;&gt; &lt;code&gt;CharField&lt;/code&gt; 的作用相同&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3459f341331aa6f9d40b4d60725d7b3624f0c602" translate="yes" xml:space="preserve">
          <source>Has three optional arguments for validation:</source>
          <target state="translated">有三个可选参数进行验证。</target>
        </trans-unit>
        <trans-unit id="9e020aad4feb9970fc6c0f84fb8135cbe7c10dc0" translate="yes" xml:space="preserve">
          <source>Has two &lt;strong&gt;required&lt;/strong&gt; arguments:</source>
          <target state="translated">有两个&lt;strong&gt;必需的&lt;/strong&gt;参数：</target>
        </trans-unit>
        <trans-unit id="484c6880d03286f63a0d66e2e46613865e425dee" translate="yes" xml:space="preserve">
          <source>Has two optional arguments for validation, &lt;code&gt;max_length&lt;/code&gt; and &lt;code&gt;allow_empty_file&lt;/code&gt;. If provided, these ensure that the file name is at most the given length, and that validation will succeed even if the file content is empty.</source>
          <target state="translated">有两个用于验证的可选参数 &lt;code&gt;max_length&lt;/code&gt; 和 &lt;code&gt;allow_empty_file&lt;/code&gt; 。如果提供这些文件，则可确保文件名最多为给定的长度，并且即使文件内容为空，验证也将成功。</target>
        </trans-unit>
        <trans-unit id="469a8ef52e3ab3e9a6514812244c507d7ec05ea2" translate="yes" xml:space="preserve">
          <source>Has two optional arguments for validation, &lt;code&gt;max_length&lt;/code&gt; and &lt;code&gt;min_length&lt;/code&gt;. If provided, these arguments ensure that the string is at most or at least the given length.</source>
          <target state="translated">有两个用于验证的可选参数 &lt;code&gt;max_length&lt;/code&gt; 和 &lt;code&gt;min_length&lt;/code&gt; 。如果提供这些参数，则确保该字符串最大为或至少为给定长度。</target>
        </trans-unit>
        <trans-unit id="264a3599b3ad29f1d297113f7cd4afaced3b7737" translate="yes" xml:space="preserve">
          <source>Has two optional arguments:</source>
          <target state="translated">有两个可选参数。</target>
        </trans-unit>
        <trans-unit id="b41e2d6f603d2a71571bd9d692b4f8d60a8366a0" translate="yes" xml:space="preserve">
          <source>Hash indexes have been available in PostgreSQL for a long time, but they suffer from a number of data integrity issues in older versions.</source>
          <target state="translated">哈希索引在PostgreSQL中已经存在很长时间了,但在旧版本中,哈希索引存在一些数据完整性问题。</target>
        </trans-unit>
        <trans-unit id="91890d73e80c785369a7ea02ab0ddba7e19304b9" translate="yes" xml:space="preserve">
          <source>Having problems? Try &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/faq/admin/&quot;&gt;FAQ: The admin&lt;/a&gt;.</source>
          <target state="translated">有问题吗？尝试&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/faq/admin/&quot;&gt;常见问题解答：管理员&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9720e639d765b87766827fab98468369b0574f5a" translate="yes" xml:space="preserve">
          <source>Having problems? Try &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/faq/admin/&quot;&gt;FAQ: The admin&lt;/a&gt;.</source>
          <target state="translated">有问题吗？尝试&lt;a href=&quot;https://docs.djangoproject.com/en/3.1/faq/admin/&quot;&gt;常见问题解答：管理员&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="45a4bc095d0bc733108374317fb5064e125a7b9b" translate="yes" xml:space="preserve">
          <source>Having trouble? We&amp;rsquo;d like to help!</source>
          <target state="translated">遇到麻烦？我们想提供帮助！</target>
        </trans-unit>
        <trans-unit id="51420c171b426fb3ca4149bcb1b000b6403b074b" translate="yes" xml:space="preserve">
          <source>Headers passed as &lt;code&gt;extra&lt;/code&gt; keyword arguments should not have the &lt;code&gt;HTTP_&lt;/code&gt; prefix required by the synchronous client (see &lt;a href=&quot;#django.test.Client.get&quot;&gt;&lt;code&gt;Client.get()&lt;/code&gt;&lt;/a&gt;). For example, here is how to set an HTTP &lt;code&gt;Accept&lt;/code&gt; header:</source>
          <target state="translated">作为 &lt;code&gt;extra&lt;/code&gt; 关键字参数传递的标头不应具有同步客户端所需的 &lt;code&gt;HTTP_&lt;/code&gt; 前缀（请参阅&lt;a href=&quot;#django.test.Client.get&quot;&gt; &lt;code&gt;Client.get()&lt;/code&gt; &lt;/a&gt;）。例如，以下是设置HTTP &lt;code&gt;Accept&lt;/code&gt; 标头的方法：</target>
        </trans-unit>
        <trans-unit id="144948321283311d1f121d6131d01f3e1df2bbe3" translate="yes" xml:space="preserve">
          <source>Height and width of the widget map (default is 400x600).</source>
          <target state="translated">小部件地图的高度和宽度(默认为400x600)。</target>
        </trans-unit>
        <trans-unit id="8a44990599fcb9b9ef1bde7d5b2e841ad8fe50c8" translate="yes" xml:space="preserve">
          <source>Height of the image in pixels.</source>
          <target state="translated">图像的高度,单位为像素。</target>
        </trans-unit>
        <trans-unit id="b87edbcbb5930772761d79031cd848eb2d7af371" translate="yes" xml:space="preserve">
          <source>Height of the map, in pixels. Defaults to 400.</source>
          <target state="translated">地图的高度,单位为像素。默认值为400。</target>
        </trans-unit>
        <trans-unit id="3ee07283650a0cb4b44aa4947760d241c8e6f3cc" translate="yes" xml:space="preserve">
          <source>Helper function to return a URL pattern for serving files in debug mode:</source>
          <target state="translated">辅助函数,用于返回在调试模式下服务文件的URL模式。</target>
        </trans-unit>
        <trans-unit id="934835a36e88b263f02948e4dbd8c5dd04401bc0" translate="yes" xml:space="preserve">
          <source>Helper functions</source>
          <target state="translated">辅助功能</target>
        </trans-unit>
        <trans-unit id="e7e0ee4596bdf912596870e61bb537af15f86d4b" translate="yes" xml:space="preserve">
          <source>Here are a couple of example settings:</source>
          <target state="translated">这里有几个设置的例子。</target>
        </trans-unit>
        <trans-unit id="af2aab3ca1b544361f8802696567f67d6d16451c" translate="yes" xml:space="preserve">
          <source>Here are a few examples of downstream caches:</source>
          <target state="translated">下面是几个下游缓存的例子。</target>
        </trans-unit>
        <trans-unit id="d6aaec63498fe45f8cd3ab0e87af9c76badc8226" translate="yes" xml:space="preserve">
          <source>Here are some common problems that you may encounter during initialization:</source>
          <target state="translated">以下是初始化过程中可能遇到的一些常见问题。</target>
        </trans-unit>
        <trans-unit id="f64ce4c75eb407df6aa68084739c0f1f18021f47" translate="yes" xml:space="preserve">
          <source>Here are some examples of other actions that will result in the entire queryset being evaluated and therefore populate the cache:</source>
          <target state="translated">下面是一些其他操作的例子,这些操作将导致整个查询集被评估,从而填充缓存。</target>
        </trans-unit>
        <trans-unit id="491ee7352f4f9f29ec839a5598c81d428a1ed6b8" translate="yes" xml:space="preserve">
          <source>Here are some hints about the ordering of various Django middleware classes:</source>
          <target state="translated">下面是关于各种Django中间件类的排序的一些提示。</target>
        </trans-unit>
        <trans-unit id="ba2e175dd531846eba4a04e3c9181479ab418b86" translate="yes" xml:space="preserve">
          <source>Here are some other terms that will help us to handle a common language:</source>
          <target state="translated">以下是一些其他术语,它们将帮助我们处理共同的语言。</target>
        </trans-unit>
        <trans-unit id="279b401428b4665e30ae96bd57aa0062346328af" translate="yes" xml:space="preserve">
          <source>Here are some things to consider to help make your upgrade process as smooth as possible.</source>
          <target state="translated">以下是一些需要考虑的事项,以帮助您尽可能顺利地完成升级过程。</target>
        </trans-unit>
        <trans-unit id="3082dc8a1f8a09d52854dc7df60d7f8d0596f804" translate="yes" xml:space="preserve">
          <source>Here are some tips for working with inheritance:</source>
          <target state="translated">下面是一些关于继承工作的技巧。</target>
        </trans-unit>
        <trans-unit id="d2e5c296dccce718bbac6d5246520ffb4ddd0e8b" translate="yes" xml:space="preserve">
          <source>Here are some useful attributes of &lt;code&gt;UploadedFile&lt;/code&gt;:</source>
          <target state="translated">这是 &lt;code&gt;UploadedFile&lt;/code&gt; 的一些有用的属性：</target>
        </trans-unit>
        <trans-unit id="1121c2c786c30e498bed91da9475a4eb43a435a7" translate="yes" xml:space="preserve">
          <source>Here is an example of an admin-compliant custom user app. This user model uses an email address as the username, and has a required date of birth; it provides no permission checking beyond an &lt;code&gt;admin&lt;/code&gt; flag on the user account. This model would be compatible with all the built-in auth forms and views, except for the user creation forms. This example illustrates how most of the components work together, but is not intended to be copied directly into projects for production use.</source>
          <target state="translated">这是一个符合管理员要求的自定义用户应用的示例。该用户模型使用电子邮件地址作为用户名，并具有必填的生日；除了用户帐户上的 &lt;code&gt;admin&lt;/code&gt; 标志外，它不提供任何权限检查。该模型将与所有内置的身份验证表单和视图兼容，用户创建表单除外。此示例说明了大多数组件如何协同工作，但并不旨在直接复制到项目中以供生产使用。</target>
        </trans-unit>
        <trans-unit id="faaf1f6ee70707befd7a6e1a47bdca0f7676f029" translate="yes" xml:space="preserve">
          <source>Here is an example of how to create a geometry object (assuming the &lt;code&gt;Zipcode&lt;/code&gt; model):</source>
          <target state="translated">这是有关如何创建几何对象的示例（假设采用 &lt;code&gt;Zipcode&lt;/code&gt; 模型）：</target>
        </trans-unit>
        <trans-unit id="680da33b32f3a235dc2ff1bf6ad9bc64c3b92144" translate="yes" xml:space="preserve">
          <source>Here is an example of how to create a raster object from a raster file &lt;code&gt;volcano.tif&lt;/code&gt; (assuming the &lt;code&gt;Elevation&lt;/code&gt; model):</source>
          <target state="translated">这是一个如何从栅格文件 &lt;code&gt;volcano.tif&lt;/code&gt; （假定 &lt;code&gt;Elevation&lt;/code&gt; 模型）创建栅格对象的示例：</target>
        </trans-unit>
        <trans-unit id="271c67b646ba7ecbbb35f338144e45dcbe4ea62a" translate="yes" xml:space="preserve">
          <source>Here is an example of its usage:</source>
          <target state="translated">下面以其使用为例。</target>
        </trans-unit>
        <trans-unit id="3f850bd99c6b6acb8b69bd061bcf9ba1698401b7" translate="yes" xml:space="preserve">
          <source>Here is an example of the difference between the three:</source>
          <target state="translated">下面举例说明三者的区别。</target>
        </trans-unit>
        <trans-unit id="45863e4b7b474b663617efdf3777d740bb33a54d" translate="yes" xml:space="preserve">
          <source>Here is an example showing how you might go about implementing a form that works for AJAX requests as well as &amp;lsquo;normal&amp;rsquo; form POSTs:</source>
          <target state="translated">这是一个示例，显示了如何实现适用于AJAX请求以及&amp;ldquo;常规&amp;rdquo;表单POST的表单：</target>
        </trans-unit>
        <trans-unit id="a86ee081359fd84dc5091ed8b284f2f2bc6150f3" translate="yes" xml:space="preserve">
          <source>Here is an example showing how you might go about implementing a form that works with an API-based workflow as well as &amp;lsquo;normal&amp;rsquo; form POSTs:</source>
          <target state="translated">这是一个示例，显示了如何实现与基于API的工作流以及&amp;ldquo;常规&amp;rdquo;表单POST一起使用的表单：</target>
        </trans-unit>
        <trans-unit id="67c3eea2bb5e1e5cc88e879e133f03209c76575f" translate="yes" xml:space="preserve">
          <source>Here is an example which subclasses from &lt;a href=&quot;tools#django.test.TestCase&quot;&gt;&lt;code&gt;django.test.TestCase&lt;/code&gt;&lt;/a&gt;, which is a subclass of &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest.TestCase&quot;&gt;&lt;code&gt;unittest.TestCase&lt;/code&gt;&lt;/a&gt; that runs each test inside a transaction to provide isolation:</source>
          <target state="translated">以下是&lt;a href=&quot;tools#django.test.TestCase&quot;&gt; &lt;code&gt;django.test.TestCase&lt;/code&gt; &lt;/a&gt;子类的示例，django.test.TestCase是&lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest.TestCase&quot;&gt; &lt;code&gt;unittest.TestCase&lt;/code&gt; &lt;/a&gt;的子类，该子类在事务中运行每个测试以提供隔离：</target>
        </trans-unit>
        <trans-unit id="be68f2f69f34764a921ed1578865dea88e621f01" translate="yes" xml:space="preserve">
          <source>Here the relation pattern is comprised of at least one of the nine relation strings: &lt;code&gt;TOUCH&lt;/code&gt;, &lt;code&gt;OVERLAPBDYDISJOINT&lt;/code&gt;, &lt;code&gt;OVERLAPBDYINTERSECT&lt;/code&gt;, &lt;code&gt;EQUAL&lt;/code&gt;, &lt;code&gt;INSIDE&lt;/code&gt;, &lt;code&gt;COVEREDBY&lt;/code&gt;, &lt;code&gt;CONTAINS&lt;/code&gt;, &lt;code&gt;COVERS&lt;/code&gt;, &lt;code&gt;ON&lt;/code&gt;, and &lt;code&gt;ANYINTERACT&lt;/code&gt;. Multiple strings may be combined with the logical Boolean operator OR, for example, &lt;code&gt;'inside+touch'&lt;/code&gt;. &lt;a href=&quot;#fnsdorelate&quot; id=&quot;id5&quot;&gt;[2]&lt;/a&gt; The relation strings are case-insensitive.</source>
          <target state="translated">这里的关系模式至少包含以下九个关系字符串之一： &lt;code&gt;TOUCH&lt;/code&gt; ， &lt;code&gt;OVERLAPBDYDISJOINT&lt;/code&gt; ， &lt;code&gt;OVERLAPBDYINTERSECT&lt;/code&gt; ， &lt;code&gt;EQUAL&lt;/code&gt; ， &lt;code&gt;INSIDE&lt;/code&gt; ， &lt;code&gt;COVEREDBY&lt;/code&gt; ， &lt;code&gt;CONTAINS&lt;/code&gt; ， &lt;code&gt;COVERS&lt;/code&gt; ， &lt;code&gt;ON&lt;/code&gt; 和 &lt;code&gt;ANYINTERACT&lt;/code&gt; 。多个字符串可以与逻辑布尔运算符OR组合，例如 &lt;code&gt;'inside+touch'&lt;/code&gt; 。&lt;a href=&quot;#fnsdorelate&quot; id=&quot;id5&quot;&gt;[2]&lt;/a&gt;关系字符串不区分大小写。</target>
        </trans-unit>
        <trans-unit id="cc9581120f126cad803e3aef1f13e74d034abada" translate="yes" xml:space="preserve">
          <source>Here we have created a &lt;a href=&quot;../topics/testing/tools#django.test.TestCase&quot;&gt;&lt;code&gt;django.test.TestCase&lt;/code&gt;&lt;/a&gt; subclass with a method that creates a &lt;code&gt;Question&lt;/code&gt; instance with a &lt;code&gt;pub_date&lt;/code&gt; in the future. We then check the output of &lt;code&gt;was_published_recently()&lt;/code&gt; - which &lt;em&gt;ought&lt;/em&gt; to be False.</source>
          <target state="translated">在这里，我们使用一个方法创建了&lt;a href=&quot;../topics/testing/tools#django.test.TestCase&quot;&gt; &lt;code&gt;django.test.TestCase&lt;/code&gt; &lt;/a&gt;子类，该方法将来会创建带有 &lt;code&gt;pub_date&lt;/code&gt; 的 &lt;code&gt;Question&lt;/code&gt; 实例。然后，我们检查 &lt;code&gt;was_published_recently()&lt;/code&gt; 的输出- &lt;em&gt;应该&lt;/em&gt;为False。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5f4789b90295bd5341c33ecad3b51a92734a1532" translate="yes" xml:space="preserve">
          <source>Here you&amp;rsquo;ll find short answers to &amp;ldquo;How do I&amp;hellip;.?&amp;rdquo; types of questions. These how-to guides don&amp;rsquo;t cover topics in depth &amp;ndash; you&amp;rsquo;ll find that material in the &lt;a href=&quot;../topics/index&quot;&gt;Using Django&lt;/a&gt; and the &lt;a href=&quot;../ref/index&quot;&gt;API Reference&lt;/a&gt;. However, these guides will help you quickly accomplish common tasks.</source>
          <target state="translated">在这里，您会找到&amp;ldquo;我如何&amp;hellip;&amp;hellip;？&amp;rdquo;的简短答案。问题类型。这些使用方法指南没有深入讨论主题-您可以在《&lt;a href=&quot;../topics/index&quot;&gt;使用Django&lt;/a&gt;和&lt;a href=&quot;../ref/index&quot;&gt;API参考》中&lt;/a&gt;找到该材料。但是，这些指南将帮助您快速完成常见任务。</target>
        </trans-unit>
        <trans-unit id="57abf4f6b26bfe37ae2b52796838f9dad7f76581" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a &amp;ldquo;Hello World&amp;rdquo; example:</source>
          <target state="translated">这是一个&amp;ldquo; Hello World&amp;rdquo;示例：</target>
        </trans-unit>
        <trans-unit id="6af217d2ecf2c889005dc55adc483fc40bea37cf" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a basic example of a validator, with one optional setting:</source>
          <target state="translated">这是验证器的基本示例，具有一个可选设置：</target>
        </trans-unit>
        <trans-unit id="a7f2fb4ff05edbaaffa6c5b64c495c91809c5df5" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a common way you might handle an uploaded file:</source>
          <target state="translated">这是您处理上传文件的常用方法：</target>
        </trans-unit>
        <trans-unit id="6089abc2bdc4617ff68adaabb9f38bec622baa70" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a corrected rewrite:</source>
          <target state="translated">这是正确的重写：</target>
        </trans-unit>
        <trans-unit id="9a31abed80562773eced4639f5fa9797392c6b50" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a full example &lt;code&gt;Form&lt;/code&gt; that implements &lt;code&gt;help_text&lt;/code&gt; for two of its fields. We&amp;rsquo;ve specified &lt;code&gt;auto_id=False&lt;/code&gt; to simplify the output:</source>
          <target state="translated">这是一个完整的示例 &lt;code&gt;Form&lt;/code&gt; ，该 &lt;code&gt;help_text&lt;/code&gt; 为其两个字段实现了help_text。我们指定了 &lt;code&gt;auto_id=False&lt;/code&gt; 来简化输出：</target>
        </trans-unit>
        <trans-unit id="7f272870b019ad9bddc4996166ecbc9a519ba9f2" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a full example &lt;code&gt;Form&lt;/code&gt; that implements &lt;code&gt;label&lt;/code&gt; for two of its fields. We&amp;rsquo;ve specified &lt;code&gt;auto_id=False&lt;/code&gt; to simplify the output:</source>
          <target state="translated">这是一个完整的示例 &lt;code&gt;Form&lt;/code&gt; ，该表单为其两个字段实现了 &lt;code&gt;label&lt;/code&gt; 。我们指定了 &lt;code&gt;auto_id=False&lt;/code&gt; 来简化输出：</target>
        </trans-unit>
        <trans-unit id="f50392c6b32afa62059d8c67b2c6c9d277cae558" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a full example model:</source>
          <target state="translated">这是完整的示例模型：</target>
        </trans-unit>
        <trans-unit id="781008e5531c092c2f7f0d7b934ff37d338b4e30" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a full example:</source>
          <target state="translated">这是一个完整的示例：</target>
        </trans-unit>
        <trans-unit id="06006db081b927a18b6c979513a3d400cf03b050" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a list of all possible &lt;code&gt;Media&lt;/code&gt; options. There are no required options.</source>
          <target state="translated">这是所有可能的 &lt;code&gt;Media&lt;/code&gt; 选项的列表。没有必需的选项。</target>
        </trans-unit>
        <trans-unit id="1ca8264392471fa610baec4797392c75fff75e91" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a list of settings available in Django core and their default values. Settings provided by contrib apps are listed below, followed by a topical index of the core settings. For introductory material, see the &lt;a href=&quot;../topics/settings&quot;&gt;settings topic guide&lt;/a&gt;.</source>
          <target state="translated">以下是Django核心中可用的设置及其默认值的列表。下面列出了contrib应用程序提供的设置，然后是核心设置的主题索引。有关入门资料，请参阅《&lt;a href=&quot;../topics/settings&quot;&gt;设置主题指南》&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="86a3a0b1484511f938867feb013e0f2d51c5df2e" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a more complete example of checking permissions in a template:</source>
          <target state="translated">这是检查模板中权限的更完整的示例：</target>
        </trans-unit>
        <trans-unit id="2c698643dc874b748f012ddb3ea0313bfbfd2803" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a sample &lt;code&gt;flatpages/default.html&lt;/code&gt; template:</source>
          <target state="translated">这是样例 &lt;code&gt;flatpages/default.html&lt;/code&gt; 模板：</target>
        </trans-unit>
        <trans-unit id="ab1a707518b8dd479d3d6838c5928f7148dd6367" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a sample &lt;code&gt;registration/login.html&lt;/code&gt; template you can use as a starting point. It assumes you have a &lt;code&gt;base.html&lt;/code&gt; template that defines a &lt;code&gt;content&lt;/code&gt; block:</source>
          <target state="translated">这是一个示例 &lt;code&gt;registration/login.html&lt;/code&gt; 模板，您可以将其用作起点。假设您有一个定义 &lt;code&gt;content&lt;/code&gt; 块的 &lt;code&gt;base.html&lt;/code&gt; 模板：</target>
        </trans-unit>
        <trans-unit id="0ae30bf679595ef7533cdd63b407f83f5f8f674a" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a sample URLconf:</source>
          <target state="translated">这是一个示例URLconf：</target>
        </trans-unit>
        <trans-unit id="fa6ae3e7aabdf62e419781fb8ac91fef7e4efcbc" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a sample configuration which uses a MySQL option file:</source>
          <target state="translated">这是使用MySQL选项文件的示例配置：</target>
        </trans-unit>
        <trans-unit id="1cb8cc1f47e98bd6b8bca615e0c892d2101a324e" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a sample migration:</source>
          <target state="translated">这是一个示例迁移：</target>
        </trans-unit>
        <trans-unit id="ae6541653add727b9d1b714886c5cb294eb66157" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a sample settings file:</source>
          <target state="translated">这是一个示例设置文件：</target>
        </trans-unit>
        <trans-unit id="0a35ae241d211aecdcc854051ae6190c4718464a" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a setup that tells the Django template engine to load templates from the &lt;code&gt;templates&lt;/code&gt; subdirectory inside each installed application:</source>
          <target state="translated">这是一个告诉Django模板引擎从每个已安装应用程序内的 &lt;code&gt;templates&lt;/code&gt; 子目录中加载模板的设置：</target>
        </trans-unit>
        <trans-unit id="ef7c5cda6c9f776cf07508872a931615e59130bb" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a typical usage example:</source>
          <target state="translated">这是一个典型的用法示例：</target>
        </trans-unit>
        <trans-unit id="1427d30cb4b280307f9c35fdcbbec639fc3c1999" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a view that returns the current date and time, as an HTML document:</source>
          <target state="translated">这是一个以HTML文档形式返回当前日期和时间的视图：</target>
        </trans-unit>
        <trans-unit id="d3e2bddf8c963051b7303f539a2fd185abce31a7" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example &lt;code&gt;babel.cfg&lt;/code&gt; configuration file:</source>
          <target state="translated">这是一个示例 &lt;code&gt;babel.cfg&lt;/code&gt; 配置文件：</target>
        </trans-unit>
        <trans-unit id="8aebe75987c46c90f1d219df0277567b236e3afb" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example backend that authenticates against a username and password variable defined in your &lt;code&gt;settings.py&lt;/code&gt; file and creates a Django &lt;code&gt;User&lt;/code&gt; object the first time a user authenticates:</source>
          <target state="translated">这是一个示例后端，该后端根据您 &lt;code&gt;settings.py&lt;/code&gt; 文件中定义的用户名和密码变量进行身份验证，并在 &lt;code&gt;User&lt;/code&gt; 首次进行身份验证时创建Django User对象：</target>
        </trans-unit>
        <trans-unit id="cff630704065ec7b5de978b86e7c6b74b5e56dc7" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example command to start a uWSGI server:</source>
          <target state="translated">这是启动uWSGI服务器的示例命令：</target>
        </trans-unit>
        <trans-unit id="102ce3104838011837efe205bdd80f68de4dae95" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example configuration for a &lt;code&gt;pylibmc&lt;/code&gt; based backend that enables the binary protocol, SASL authentication, and the &lt;code&gt;ketama&lt;/code&gt; behavior mode:</source>
          <target state="translated">这是基于 &lt;code&gt;pylibmc&lt;/code&gt; 的后端的示例配置，该配置启用了二进制协议，SASL身份验证和 &lt;code&gt;ketama&lt;/code&gt; 行为模式：</target>
        </trans-unit>
        <trans-unit id="1b421c4f95aa496406a2e84c2f627a954ab2836f" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example configuration for a &lt;code&gt;python-memcached&lt;/code&gt; based backend with an object size limit of 2MB:</source>
          <target state="translated">这是一个基于 &lt;code&gt;python-memcached&lt;/code&gt; 的后端的示例配置，对象大小限制为2MB：</target>
        </trans-unit>
        <trans-unit id="3a2a1317feb0953774732005f170e31c4c8a4bc7" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example filter definition:</source>
          <target state="translated">这是一个示例过滤器定义：</target>
        </trans-unit>
        <trans-unit id="80f83222987a04b9ecf23f2ea890140f555d567d" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of a &lt;a href=&quot;../../topics/http/urls&quot;&gt;URLconf&lt;/a&gt; using &lt;a href=&quot;#django.contrib.sitemaps.GenericSitemap&quot;&gt;&lt;code&gt;GenericSitemap&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">这是使用&lt;a href=&quot;#django.contrib.sitemaps.GenericSitemap&quot;&gt; &lt;code&gt;GenericSitemap&lt;/code&gt; &lt;/a&gt;的&lt;a href=&quot;../../topics/http/urls&quot;&gt;URLconf&lt;/a&gt;的示例：</target>
        </trans-unit>
        <trans-unit id="ae6ef8ee4290c13f117dcdc7e703f627625867c0" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of a URLconf using &lt;a href=&quot;#django.contrib.flatpages.sitemaps.FlatPageSitemap&quot;&gt;&lt;code&gt;FlatPageSitemap&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">这是使用&lt;a href=&quot;#django.contrib.flatpages.sitemaps.FlatPageSitemap&quot;&gt; &lt;code&gt;FlatPageSitemap&lt;/code&gt; &lt;/a&gt;的URLconf的示例：</target>
        </trans-unit>
        <trans-unit id="3845b1b6e90ab1ee471ab4f454dadade8a8b37f6" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of a non-atomic data migration that updates a large table in smaller batches:</source>
          <target state="translated">这是一个非原子数据迁移的示例，该数据以较小的批次更新一个大表：</target>
        </trans-unit>
        <trans-unit id="c1f9fb4911b88e50f96986953fce6ec7f1657b9d" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of an async view:</source>
          <target state="translated">这是一个异步视图的示例：</target>
        </trans-unit>
        <trans-unit id="2521f38c8dd57ccdb01aff93ad8b20bb89778958" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of how to create a middleware function that supports both:</source>
          <target state="translated">这是一个示例，说明如何创建同时支持两者的中间件功能：</target>
        </trans-unit>
        <trans-unit id="e800a41196ea2c952c6cc78bf4125ea18f3b697e" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of how you might use this in a template:</source>
          <target state="translated">这是一个如何在模板中使用它的示例：</target>
        </trans-unit>
        <trans-unit id="6e261dac3e73be10b1f310f633c7e43bef1f8cbe" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of the search algorithm. For this example the &lt;a href=&quot;../ref/settings#std:setting-TEMPLATES&quot;&gt;&lt;code&gt;TEMPLATES&lt;/code&gt;&lt;/a&gt; setting is:</source>
          <target state="translated">这是搜索算法的示例。对于此示例，&lt;a href=&quot;../ref/settings#std:setting-TEMPLATES&quot;&gt; &lt;code&gt;TEMPLATES&lt;/code&gt; &lt;/a&gt;设置为：</target>
        </trans-unit>
        <trans-unit id="3d265334afc2a3a5deaa825a3e8d0c1dbc637509" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of what the form-handling view looks like:</source>
          <target state="translated">这是表单处理视图的示例：</target>
        </trans-unit>
        <trans-unit id="cab637454e1c6c1a9aee365744daf4493bf04463" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example test that examines &lt;code&gt;django.core.mail.outbox&lt;/code&gt; for length and contents:</source>
          <target state="translated">这是一个示例测试，它检查 &lt;code&gt;django.core.mail.outbox&lt;/code&gt; 的长度和内容：</target>
        </trans-unit>
        <trans-unit id="aa48b04caa6f3240fde92f90c0ac9c55d609c649" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example that disables Django&amp;rsquo;s logging configuration and then manually configures logging:</source>
          <target state="translated">这是一个禁用Django的日志记录配置，然后手动配置日志记录的示例：</target>
        </trans-unit>
        <trans-unit id="c77b97bfa6d759f92c704a63a66d8c15a6409803" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example that stores the current timezone in the session. (It skips error handling entirely for the sake of simplicity.)</source>
          <target state="translated">这是一个在会话中存储当前时区的示例。（为简单起见，它完全跳过错误处理。）</target>
        </trans-unit>
        <trans-unit id="d8255f47bfef2f67ea1dd701782d89362832ca71" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example using &lt;a href=&quot;../ref/paginator#django.core.paginator.Paginator&quot;&gt;&lt;code&gt;Paginator&lt;/code&gt;&lt;/a&gt; in a view function to paginate a queryset:</source>
          <target state="translated">这是在视图函数中使用&lt;a href=&quot;../ref/paginator#django.core.paginator.Paginator&quot;&gt; &lt;code&gt;Paginator&lt;/code&gt; &lt;/a&gt;来对查询集进行分页的示例：</target>
        </trans-unit>
        <trans-unit id="864913de9e058af94181a7cf98e2330576120b66" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example view that takes a &lt;code&gt;subject&lt;/code&gt;, &lt;code&gt;message&lt;/code&gt; and &lt;code&gt;from_email&lt;/code&gt; from the request&amp;rsquo;s POST data, sends that to &lt;a href=&quot;mailto:admin%40example.com&quot;&gt;admin@example.com&lt;/a&gt; and redirects to &amp;ldquo;/contact/thanks/&amp;rdquo; when it&amp;rsquo;s done:</source>
          <target state="translated">这是一个示例视图，该视图从请求的POST数据中获取 &lt;code&gt;subject&lt;/code&gt; ， &lt;code&gt;message&lt;/code&gt; 和 &lt;code&gt;from_email&lt;/code&gt; ，并将其发送到&lt;a href=&quot;mailto:admin%40example.com&quot;&gt;admin@example.com，&lt;/a&gt;并在完成后重定向到&amp;ldquo; / contact / thanks /&amp;rdquo;：</target>
        </trans-unit>
        <trans-unit id="34ffdaa4404e3fe833bd23cc3839e586225ae798" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example widget which subclasses &lt;a href=&quot;#django.forms.MultiWidget&quot;&gt;&lt;code&gt;MultiWidget&lt;/code&gt;&lt;/a&gt; to display a date with the day, month, and year in different select boxes. This widget is intended to be used with a &lt;a href=&quot;fields#django.forms.DateField&quot;&gt;&lt;code&gt;DateField&lt;/code&gt;&lt;/a&gt; rather than a &lt;a href=&quot;fields#django.forms.MultiValueField&quot;&gt;&lt;code&gt;MultiValueField&lt;/code&gt;&lt;/a&gt;, thus we have implemented &lt;a href=&quot;#django.forms.Widget.value_from_datadict&quot;&gt;&lt;code&gt;value_from_datadict()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">这是一个示例小部件，&lt;a href=&quot;#django.forms.MultiWidget&quot;&gt; &lt;code&gt;MultiWidget&lt;/code&gt; &lt;/a&gt;将MultiWidget子类化，以在不同的选择框中显示带有日期，日期和年份的日期。此小部件旨在与&lt;a href=&quot;fields#django.forms.DateField&quot;&gt; &lt;code&gt;DateField&lt;/code&gt; &lt;/a&gt;而不是&lt;a href=&quot;fields#django.forms.MultiValueField&quot;&gt; &lt;code&gt;MultiValueField&lt;/code&gt; 一起使用&lt;/a&gt;，因此我们实现了&lt;a href=&quot;#django.forms.Widget.value_from_datadict&quot;&gt; &lt;code&gt;value_from_datadict()&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="bac37e9710dc9d2c74d9c1ed00e5b17d08cd6fb3" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example with a test database configuration:</source>
          <target state="translated">这是测试数据库配置的示例：</target>
        </trans-unit>
        <trans-unit id="c288c1a6f737cba4e4dfe94d9e407d5ce00f2fe3" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example with the &lt;code&gt;Count&lt;/code&gt; aggregate:</source>
          <target state="translated">这是 &lt;code&gt;Count&lt;/code&gt; 聚合的示例：</target>
        </trans-unit>
        <trans-unit id="992e957c839d3d8d2abc225d337198ce96cd7ccb" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example, which generates the same CSV file as above:</source>
          <target state="translated">这是一个示例，它生成与上述相同的CSV文件：</target>
        </trans-unit>
        <trans-unit id="79a379c34c53ce83d07e71356345ea69136a74d1" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example:</source>
          <target state="translated">这是一个例子：</target>
        </trans-unit>
        <trans-unit id="cc4ac14d2e7d339c7464837b69d59c85f014a9b2" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s another example with the &lt;code&gt;Avg&lt;/code&gt; aggregate:</source>
          <target state="translated">这是 &lt;code&gt;Avg&lt;/code&gt; 聚合的另一个示例：</target>
        </trans-unit>
        <trans-unit id="5621dab2b1d22484b8fe971ff0acb8dea33dd71f" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s example HTML template code:</source>
          <target state="translated">以下是示例HTML模板代码：</target>
        </trans-unit>
        <trans-unit id="9f9ad4a804c6ae4e272e944aaeea2d0deed1f424" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s how Django handles custom managers and &lt;a href=&quot;models#model-inheritance&quot;&gt;model inheritance&lt;/a&gt;:</source>
          <target state="translated">Django处理自定义管理器和&lt;a href=&quot;models#model-inheritance&quot;&gt;模型继承的方式&lt;/a&gt;如下：</target>
        </trans-unit>
        <trans-unit id="982d8786f08335dca1f604bcf8f2fbe3797a6051" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s how Django uses the sites framework:</source>
          <target state="translated">Django使用Sites框架的方式如下：</target>
        </trans-unit>
        <trans-unit id="1aad681f3092909b52d4dd368c95d8a6868db25b" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s how a simplified &lt;code&gt;{% comment %}&lt;/code&gt; tag might be implemented:</source>
          <target state="translated">简化的 &lt;code&gt;{% comment %}&lt;/code&gt; 标签的实现方法如下：</target>
        </trans-unit>
        <trans-unit id="d91d9e4962a8b0536d1b0745beac3f3e808bc67a" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s how the form data could be processed in the view that handles this form:</source>
          <target state="translated">以下是在处理此表单的视图中如何处理表单数据的方法：</target>
        </trans-unit>
        <trans-unit id="0e26c415b5e7fc6d2eaf6e0f623530bfce47a883" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s how to create a raster and return it as a file in an &lt;a href=&quot;../../request-response#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">这是创建栅格并将其作为文件返回到&lt;a href=&quot;../../request-response#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; 中的方法&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="af034e2b096c2303b99e1d44bd431bd0330becae" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s how to implement a custom template backend in order to use another template system. A template backend is a class that inherits &lt;code&gt;django.template.backends.base.BaseEngine&lt;/code&gt;. It must implement &lt;code&gt;get_template()&lt;/code&gt; and optionally &lt;code&gt;from_string()&lt;/code&gt;. Here&amp;rsquo;s an example for a fictional &lt;code&gt;foobar&lt;/code&gt; template library:</source>
          <target state="translated">以下是实现自定义模板后端以使用另一个模板系统的方法。模板后端是一个继承 &lt;code&gt;django.template.backends.base.BaseEngine&lt;/code&gt; 的类。它必须实现 &lt;code&gt;get_template()&lt;/code&gt; ，还可以实现 &lt;code&gt;from_string()&lt;/code&gt; 。这是一个虚构的 &lt;code&gt;foobar&lt;/code&gt; 模板库的示例：</target>
        </trans-unit>
        <trans-unit id="8d36be0384837a6370f1ba02759b5af0d0f2c187" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s how to migrate a project that was started before Django supported time zones.</source>
          <target state="translated">以下是迁移在Django支持的时区之前启动的项目的方法。</target>
        </trans-unit>
        <trans-unit id="66ec10b2a136d2c823468ba95c64eaaab44cdd82" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s how you connect with the decorator:</source>
          <target state="translated">这是您与装饰器的连接方式：</target>
        </trans-unit>
        <trans-unit id="327bfd0c7d625202f1966273d60d8493e343ab93" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s how you&amp;rsquo;d use this new version of the tag:</source>
          <target state="translated">这是使用新版本标记的方法：</target>
        </trans-unit>
        <trans-unit id="1a2bfaf566979ed7aedf0f669c54fbc0f46145bf" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s some examples of some of the general-purpose aggregation functions:</source>
          <target state="translated">以下是一些通用聚合函数的一些示例：</target>
        </trans-unit>
        <trans-unit id="da0a2fbae58195202e76fcd70bf31b97096b8406" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s specifically what will happen:</source>
          <target state="translated">具体来说，将发生以下情况：</target>
        </trans-unit>
        <trans-unit id="90cc1fba379d3079d864b75ec9a282dc9dd9df53" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s the algorithm Django uses in compiling settings:</source>
          <target state="translated">这是Django在编译设置中使用的算法：</target>
        </trans-unit>
        <trans-unit id="4f6925d2fd7c87eb1fdea33977d87762ce059a90" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s the code for these beat-specific feeds:</source>
          <target state="translated">以下是这些特定节拍的供稿的代码：</target>
        </trans-unit>
        <trans-unit id="fee44b1e3d0f774cdd2a8c542296b97438ffc668" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s the example URLconf from earlier, rewritten using regular expressions:</source>
          <target state="translated">这是前面的示例URLconf，使用正则表达式重写：</target>
        </trans-unit>
        <trans-unit id="e4c0b7baa1526900d2e4f4456095dc0e9ce72d6a" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s the formal declaration of a &lt;code&gt;QuerySet&lt;/code&gt;:</source>
          <target state="translated">这是 &lt;code&gt;QuerySet&lt;/code&gt; 的正式声明：</target>
        </trans-unit>
        <trans-unit id="1165f9724f1430ed525846674f31020cff0308a8" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s the output of &lt;code&gt;{{ form.as_p }}&lt;/code&gt; for our &lt;code&gt;ContactForm&lt;/code&gt; instance:</source>
          <target state="translated">这是我们的 &lt;code&gt;ContactForm&lt;/code&gt; 实例的 &lt;code&gt;{{ form.as_p }}&lt;/code&gt; 的输出：</target>
        </trans-unit>
        <trans-unit id="29c90eaa3b7ceff1a2a2ba24fcb3bda64c8c52b3" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s the same thing, with &lt;code&gt;my_view&lt;/code&gt; wrapped in &lt;code&gt;cache_page&lt;/code&gt;:</source>
          <target state="translated">这是同一件事， &lt;code&gt;my_view&lt;/code&gt; 包装在 &lt;code&gt;cache_page&lt;/code&gt; 中：</target>
        </trans-unit>
        <trans-unit id="abcc0e54e5809432215e2f0949566ceb948498ed" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s what &lt;code&gt;LoginView&lt;/code&gt; does:</source>
          <target state="translated">这是 &lt;code&gt;LoginView&lt;/code&gt; 的作用：</target>
        </trans-unit>
        <trans-unit id="7283b0cf7a571c7215c8f2bb4d8140cd4ffd2ed4" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s what a URLconf might look like for the &lt;code&gt;Reporter&lt;/code&gt;/&lt;code&gt;Article&lt;/code&gt; example above:</source>
          <target state="translated">这是上面的 &lt;code&gt;Reporter&lt;/code&gt; / &lt;code&gt;Article&lt;/code&gt; 示例的URLconf外观：</target>
        </trans-unit>
        <trans-unit id="bb1565e42c236a7f2831e8cfa57af03ea646f01a" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s what each of the built-in processors does:</source>
          <target state="translated">这是每个内置处理器的功能：</target>
        </trans-unit>
        <trans-unit id="6d5f00c1bab080be00911ca379dda11db29ab82a" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s what it looks like at this point:</source>
          <target state="translated">这是现在的样子：</target>
        </trans-unit>
        <trans-unit id="2b749a2a594c50741b94f0db598a875d6be8a1e8" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s what the &amp;ldquo;base.html&amp;rdquo; template, including the use of &lt;a href=&quot;../howto/static-files/index&quot;&gt;static files&lt;/a&gt;, might look like:</source>
          <target state="translated">这就是&amp;ldquo; base.html&amp;rdquo;模板，包括使用&lt;a href=&quot;../howto/static-files/index&quot;&gt;静态文件的&lt;/a&gt;样子：</target>
        </trans-unit>
        <trans-unit id="c16d5101a0891c5cbab072e90a5af67e887f73ba" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s what the relevant URLconf lines would look like for the example above:</source>
          <target state="translated">这是上面示例中相关URLconf行的样子：</target>
        </trans-unit>
        <trans-unit id="1539f3d44308e23c6984798d63f494196479b7da" translate="yes" xml:space="preserve">
          <source>Here, &lt;a href=&quot;#django.contrib.gis.utils.LayerMapping&quot;&gt;&lt;code&gt;LayerMapping&lt;/code&gt;&lt;/a&gt; transformed the three geometries from the shapefile in their original spatial reference system (WGS84) to the spatial reference system of the GeoDjango model (NAD83). If no spatial reference system is defined for the layer, use the &lt;code&gt;source_srs&lt;/code&gt; keyword with a &lt;a href=&quot;gdal#django.contrib.gis.gdal.SpatialReference&quot;&gt;&lt;code&gt;SpatialReference&lt;/code&gt;&lt;/a&gt; object to specify one.</source>
          <target state="translated">在这里，&lt;a href=&quot;#django.contrib.gis.utils.LayerMapping&quot;&gt; &lt;code&gt;LayerMapping&lt;/code&gt; &lt;/a&gt;将三个几何形状从其原始空间参照系（WGS84）中的shapefile转换为GeoDjango模型（NAD83）的空间参照系。如果没有为图层定义空间参考系统，则将 &lt;code&gt;source_srs&lt;/code&gt; 关键字与&lt;a href=&quot;gdal#django.contrib.gis.gdal.SpatialReference&quot;&gt; &lt;code&gt;SpatialReference&lt;/code&gt; &lt;/a&gt;对象一起使用以指定一个。</target>
        </trans-unit>
        <trans-unit id="3e093c29faaea57896f80485222e377673d07e69" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;default_manager&lt;/code&gt; is the default. The &lt;code&gt;objects&lt;/code&gt; manager is still available, since it&amp;rsquo;s inherited, but isn&amp;rsquo;t used as the default.</source>
          <target state="translated">在这里， &lt;code&gt;default_manager&lt;/code&gt; 是默认值。该 &lt;code&gt;objects&lt;/code&gt; 管理器仍然是可用的，因为它的继承，但不作为默认。</target>
        </trans-unit>
        <trans-unit id="bec468010f20ce37ac755447a7cacf1a6965b612" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;friends()&lt;/code&gt; will be called twice. Since the instance &lt;code&gt;person&lt;/code&gt; in the view and the template are the same, decorating the &lt;code&gt;friends()&lt;/code&gt; method with &lt;code&gt;@cached_property&lt;/code&gt; can avoid that:</source>
          <target state="translated">在这里， &lt;code&gt;friends()&lt;/code&gt; 将被调用两次。由于视图中的实例 &lt;code&gt;person&lt;/code&gt; 模板相同，因此使用 &lt;code&gt;@cached_property&lt;/code&gt; 装饰 &lt;code&gt;friends()&lt;/code&gt; 方法可以避免这种情况：</target>
        </trans-unit>
        <trans-unit id="d0e804ebd96c0af9eec8dbdab01a73bdcc48afa7" translate="yes" xml:space="preserve">
          <source>Here, each model is represented by a class that subclasses &lt;a href=&quot;../ref/models/instances#django.db.models.Model&quot;&gt;&lt;code&gt;django.db.models.Model&lt;/code&gt;&lt;/a&gt;. Each model has a number of class variables, each of which represents a database field in the model.</source>
          <target state="translated">在这里，每个模型都由&lt;a href=&quot;../ref/models/instances#django.db.models.Model&quot;&gt; &lt;code&gt;django.db.models.Model&lt;/code&gt; &lt;/a&gt;子类的类表示。每个模型都有许多类变量，每个类变量代表模型中的数据库字段。</target>
        </trans-unit>
        <trans-unit id="4d45cf61a6b273da8aee30ada7de9c9f80157840" translate="yes" xml:space="preserve">
          <source>Here, there could potentially be multiple ordering data for each &lt;code&gt;Event&lt;/code&gt;; each &lt;code&gt;Event&lt;/code&gt; with multiple &lt;code&gt;children&lt;/code&gt; will be returned multiple times into the new &lt;code&gt;QuerySet&lt;/code&gt; that &lt;code&gt;order_by()&lt;/code&gt; creates. In other words, using &lt;code&gt;order_by()&lt;/code&gt; on the &lt;code&gt;QuerySet&lt;/code&gt; could return more items than you were working on to begin with - which is probably neither expected nor useful.</source>
          <target state="translated">在这里，每个 &lt;code&gt;Event&lt;/code&gt; 可能有多个排序数据；具有多个 &lt;code&gt;children&lt;/code&gt; 每个 &lt;code&gt;Event&lt;/code&gt; 将多次返回到 &lt;code&gt;order_by()&lt;/code&gt; 创建的新 &lt;code&gt;QuerySet&lt;/code&gt; 中。换句话说，在 &lt;code&gt;QuerySet&lt;/code&gt; 上使用 &lt;code&gt;order_by()&lt;/code&gt; 可能会返回比您开始时要处理的项目更多的项目-这可能既没有预期，也没有用。</target>
        </trans-unit>
        <trans-unit id="437ecb11cc4454ac0c7bcfeb26ef7fc4a9a9ab04" translate="yes" xml:space="preserve">
          <source>Here, we have a URLconf with a single captured group:</source>
          <target state="translated">在这里,我们有一个URLconf,有一个单一的采集组。</target>
        </trans-unit>
        <trans-unit id="59650799f9105f6fd46738d8d71c0649251d8fa3" translate="yes" xml:space="preserve">
          <source>Here, we have pulled the value of &lt;code&gt;reporter.stories_filed&lt;/code&gt; from the database into memory and manipulated it using familiar Python operators, and then saved the object back to the database. But instead we could also have done:</source>
          <target state="translated">在这里，我们将数据库中 &lt;code&gt;reporter.stories_filed&lt;/code&gt; 的值拉到内存中，并使用熟悉的Python运算符对其进行了操作，然后将该对象保存回数据库中。但是相反，我们也可以这样做：</target>
        </trans-unit>
        <trans-unit id="82c135d3966be0eb9476ca12305ddc85cdd98f0d" translate="yes" xml:space="preserve">
          <source>Here, with concurrent requests, multiple attempts to save a &lt;code&gt;Person&lt;/code&gt; with the same parameters may be made. To avoid this race condition, the above example can be rewritten using &lt;code&gt;get_or_create()&lt;/code&gt; like so:</source>
          <target state="translated">在此，对于并发请求，可以尝试多次保存具有相同参数的 &lt;code&gt;Person&lt;/code&gt; 。为了避免这种竞争情况，可以使用 &lt;code&gt;get_or_create()&lt;/code&gt; 重写上面的示例，如下所示：</target>
        </trans-unit>
        <trans-unit id="6e1c1bebb97b3fac0f84e08c91f2ac346f29f05c" translate="yes" xml:space="preserve">
          <source>Here, you retrieved a &lt;code&gt;QuerySet&lt;/code&gt; with only one model: the border of the United States (exactly what you would expect).</source>
          <target state="translated">在这里，您仅使用一种模型检索了 &lt;code&gt;QuerySet&lt;/code&gt; ：美国边界（正是您所期望的）。</target>
        </trans-unit>
        <trans-unit id="26d877995327d903f9c9c849285e27201361d8cd" translate="yes" xml:space="preserve">
          <source>Hierarchy of Django unit testing classes</source>
          <target state="translated">Django单元测试类的层次结构</target>
        </trans-unit>
        <trans-unit id="2284d040f5091f510de37a154536196310f9c02d" translate="yes" xml:space="preserve">
          <source>Hint</source>
          <target state="translated">Hint</target>
        </trans-unit>
        <trans-unit id="eef8e89aeb708a408921fec1b9e87c4d04faaced" translate="yes" xml:space="preserve">
          <source>Hints</source>
          <target state="translated">Hints</target>
        </trans-unit>
        <trans-unit id="01d2f9ecc0290276e414180f8fb91eaf80ea98c6" translate="yes" xml:space="preserve">
          <source>Historical models</source>
          <target state="translated">历史模型</target>
        </trans-unit>
        <trans-unit id="90ccd6497400b5576aeca1bd94af74aae1e0a250" translate="yes" xml:space="preserve">
          <source>History</source>
          <target state="translated">History</target>
        </trans-unit>
        <trans-unit id="3668d9fae13111a1cdd1c411a004c1830fac5d25" translate="yes" xml:space="preserve">
          <source>History consistency</source>
          <target state="translated">历史一致性</target>
        </trans-unit>
        <trans-unit id="2db3c5543ab9e474cea4204fa6f705e4a5357492" translate="yes" xml:space="preserve">
          <source>Hitting the database multiple times for different parts of a single &amp;lsquo;set&amp;rsquo; of data that you will need all parts of is, in general, less efficient than retrieving it all in one query. This is particularly important if you have a query that is executed in a loop, and could therefore end up doing many database queries, when only one was needed. So:</source>
          <target state="translated">通常，针对单个数据集的所有部分的不同部分击中数据库的效率通常比一次查询中检索全部数据的效率低。如果您有一个循环执行的查询，因此在只需要一个查询的情况下最终可能会执行许多数据库查询，那么这尤其重要。所以：</target>
        </trans-unit>
        <trans-unit id="b24cd4dd561003744f6839bba6f0b01af01e9c66" translate="yes" xml:space="preserve">
          <source>Homebrew</source>
          <target state="translated">Homebrew</target>
        </trans-unit>
        <trans-unit id="3db3ff2b4f95ac9d06bb8a36b004442519e2377c" translate="yes" xml:space="preserve">
          <source>Hooking &lt;code&gt;AdminSite&lt;/code&gt; instances into your URLconf</source>
          <target state="translated">将 &lt;code&gt;AdminSite&lt;/code&gt; 实例挂接到URLconf中</target>
        </trans-unit>
        <trans-unit id="377b52a12a2942982a776073a4c6fef720ab9361" translate="yes" xml:space="preserve">
          <source>Hooking into the current site from views</source>
          <target state="translated">从视图连接到当前网站</target>
        </trans-unit>
        <trans-unit id="a035ae36c0c60bda73442b7d15b2e8cbdae93b94" translate="yes" xml:space="preserve">
          <source>Host header validation</source>
          <target state="translated">主机头验证</target>
        </trans-unit>
        <trans-unit id="7f9ea4fcf4a81bbcd92432dccf078570d76b403b" translate="yes" xml:space="preserve">
          <source>Hour, 12-hour format without leading zeros.</source>
          <target state="translated">小时,12小时格式,无前导零。</target>
        </trans-unit>
        <trans-unit id="3691f2c8d14a93defea1b98c76da99f673f7cc0b" translate="yes" xml:space="preserve">
          <source>Hour, 12-hour format.</source>
          <target state="translated">小时,12小时的形式。</target>
        </trans-unit>
        <trans-unit id="05050dcb2cc031117aeab33205f5f0ebb56643f4" translate="yes" xml:space="preserve">
          <source>Hour, 24-hour format without leading zeros.</source>
          <target state="translated">小时,24小时格式,无前导零。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
